==========mod==========
#[version = "0.0.5"]
def @func_14288() -> (Tensor[(8, 6, 10), float64],) {
  %0 = @func_11770() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_13809() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  %2 = @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %3 = %2.1;
  %4 = @func_5087() /* ty=Tensor[(8, 6, 10), float64] */;
  (%3, %4)
}

def @func_17020() -> (Tensor[(8, 6, 10), float64],) {
  %5 = @func_12632() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %6 = %5.0;
  (%6,)
}

def @func_305(%var_267: Tensor[(9, 5, 9), float32]) -> (Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) {
  %7 = cast(-6.546f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %8 = cast(%var_267, dtype="float32") /* ty=Tensor[(9, 5, 9), float32] */;
  %9 = cast(%var_267, dtype="float64") /* ty=Tensor[(9, 5, 9), float64] */;
  %10 = divide(%7, %8) /* ty=Tensor[(9, 5, 9), float32] */;
  %11 = sinh(%9) /* ty=Tensor[(9, 5, 9), float64] */;
  (%10, %11)
}

def @func_6427() -> (Tensor[(8, 6, 10), float64],) {
  %12 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
  (%12,)
}

def @func_14601(%var_14577: uint64, %var_14578: Tensor[(13, 10, 11), uint64]) -> (Tensor[(13, 10, 11), uint64], Tensor[(13, 10, 11), float64]) {
  %13 = cast(%var_14577, dtype="uint64") /* ty=uint64 */;
  %14 = cast(%var_14578, dtype="uint64") /* ty=Tensor[(13, 10, 11), uint64] */;
  %15 = cast(%var_14578, dtype="float64") /* ty=Tensor[(13, 10, 11), float64] */;
  %16 = left_shift(%13, %14) /* ty=Tensor[(13, 10, 11), uint64] */;
  %17 = rsqrt(%15) /* ty=Tensor[(13, 10, 11), float64] */;
  (%16, %17)
}

def @func_19046() -> Tensor[(8, 6, 10), float64] {
  %18 = @func_11135() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %18.0
}

def @func_6212() -> (Tensor[(8, 6, 10), float64],) {
  %19 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  (%19,)
}

def @func_19335(%var_19323: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(405), float32], Tensor[(405), float32]) {
  %20 = @func_7881() /* ty=(Tensor[(8, 6, 10), int16], Tensor[(8, 6, 10), float64]) */;
  %21 = @func_12049() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(13, 6), float64], Tensor[(8, 6, 10), float64]) */;
  %22 = cast(%var_19323, dtype="float32") /* ty=Tensor[(405), float32] */;
  %23 = reshape(%22, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %24 = @func_16940(%23) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(405), float32]) */;
  %25 = cast(%var_19323, dtype="float32") /* ty=Tensor[(405), float32] */;
  %26 = reshape(%25, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %27 = @func_5835(%26) /* ty=(Tensor[(192), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) */;
  %28 = %20.1;
  %29 = %21.0;
  %30 = %24.1;
  %31 = %27.5;
  (%28, %29, %30, %var_19323, %31)
}

def @func_16247() -> (Tensor[(8, 6, 10), float64],) {
  %32 = @func_4937() /* ty=Tensor[(8, 6, 10), float64] */;
  (%32,)
}

def @func_8583() -> Tensor[(8, 6, 10), float64] {
  %33 = @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %33.0
}

def @func_10607() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %34 = @func_7501() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %35 = %34.0;
  %36 = @func_6554() /* ty=Tensor[(8, 6, 10), float64] */;
  (%35, %36)
}

def @func_15742() -> Tensor[(8, 6, 10), int64] {
  @func_7751() /* ty=Tensor[(8, 6, 10), int64] */
}

def @func_7501() -> (Tensor[(8, 6, 10), float64],) {
  %37 = @func_4937() /* ty=Tensor[(8, 6, 10), float64] */;
  (%37,)
}

def @func_11487() -> (Tensor[(8, 6, 10), float64], Tensor[(26, 3), float64], Tensor[(78), float64]) {
  %38 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %39 = @func_8085() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */;
  %40 = @func_9508() /* ty=(Tensor[(78), float64],) */;
  %41 = %38.0;
  %42 = %39.4;
  %43 = %40.0;
  (%41, %42, %43)
}

def @func_3944() -> Tensor[(8, 6, 10), float64] {
  %44 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %44.0
}

def @func_11845() -> (Tensor[(78), float64],) {
  %45 = @func_7002() /* ty=(Tensor[(78), float64],) */;
  %46 = %45.0;
  (%46,)
}

def @func_7881() -> (Tensor[(8, 6, 10), int16], Tensor[(8, 6, 10), float64]) {
  %47 = @func_5087() /* ty=Tensor[(8, 6, 10), float64] */;
  %48 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 6, 10), float64] */, dtype="int16") /* ty=Tensor[(8, 6, 10), int16] */;
  %49 = shape_of(%47, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(%47, dtype="int16") /* ty=Tensor[(8, 6, 10), int16] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %52 = @func_7338() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %53 = bitwise_xor(%50, %51) /* ty=Tensor[(8, 6, 10), int16] */;
  %54 = %52.1;
  (%53, %54)
}

def @func_5879(%var_5868: Tensor[(6, 6, 12), int32]) -> Tensor[(6, 6, 12), bool] {
  %55 = cast(%var_5868, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
  %56 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(6, 6, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 6, 12), int32] */, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%57, %58) /* ty=Tensor[(6, 6, 12), bool] */
}

def @func_14376() -> (Tensor[(8, 6, 10), float32],) {
  %59 = @func_9896() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %60 = %59.0;
  (%60,)
}

def @func_18131() -> (Tensor[(8, 6, 10), float64],) {
  %61 = @func_15079() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %62 = %61.0;
  (%62,)
}

def @func_11677() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32]) {
  %63 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %64 = cast(meta[relay.Constant][2] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %65 = reshape(%64, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %66 = @func_6012(%65) /* ty=(Tensor[(9, 5, 9), int16],) */;
  %67 = %63.0;
  %68 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
  %69 = %66.0;
  (%67, %68, %69, meta[relay.Constant][2] /* ty=Tensor[(405), float32] */)
}

def @func_15276() -> (Tensor[(8, 6, 10), float64], Tensor[(26, 3), float64]) {
  %70 = @func_8085() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */;
  %71 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
  %72 = %70.4;
  (%71, %72)
}

def @func_7968() -> (Tensor[(8, 6, 10), float64],) {
  %73 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %74 = %73.0;
  (%74,)
}

def @func_8152() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %75 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %76 = %75.0;
  %77 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
  (%76, %77)
}

def @func_16520(%var_16508: Tensor[(54), float64], %var_16509: Tensor[(432), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567, 1), uint32], Tensor[(9, 6), float64], Tensor[(54), float64], Tensor[(432), float64], Tensor[(8, 6, 10), float64]) {
  %78 = @func_14641() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %79 = cast(meta[relay.Constant][3] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %80 = cast(meta[relay.Constant][4] /* ty=Tensor[(567, 1), uint32] */, dtype="uint32") /* ty=Tensor[(567, 1), uint32] */;
  %81 = reshape(%79, newshape=[1008]) /* ty=Tensor[(1008), uint16] */;
  %82 = reshape(%80, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %83 = @func_7551(%81, %82) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
  %84 = cast(%var_16508, dtype="float64") /* ty=Tensor[(54), float64] */;
  %85 = cast(%var_16509, dtype="float64") /* ty=Tensor[(432), float64] */;
  %86 = reshape(%84, newshape=[9, 6]) /* ty=Tensor[(9, 6), float64] */;
  %87 = reshape(%85, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %88 = @func_14823(%86, %87) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 9), float64], Tensor[(9, 6), float64], Tensor[(432), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %89 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %90 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  %91 = @func_14532() /* ty=Tensor[(8, 6, 10), float64] */;
  %92 = %78.0;
  %93 = %83.3;
  %94 = %88.2;
  %95 = %89.0;
  (%90, %91, %92, %93, meta[relay.Constant][3] /* ty=Tensor[(1008), uint16] */, meta[relay.Constant][4] /* ty=Tensor[(567, 1), uint32] */, %94, %var_16508, %var_16509, %95)
}

def @func_16031(%var_16028: Tensor[(13), float64]) -> (Tensor[(8, 6, 10), float32], Tensor[(9, 45), float32], Tensor[(405), float32], Tensor[(13), float64]) {
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %97 = cast(%var_16028, dtype="float64") /* ty=Tensor[(13), float64] */;
  %98 = reshape(%96, newshape=[9, 45]) /* ty=Tensor[(9, 45), float32] */;
  %99 = reshape(%97, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %100 = @func_14074(%98, %99) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(13), float64], Tensor[(13, 55), int8], Tensor[(9, 45), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) */;
  %101 = @func_12095() /* ty=Tensor[(8, 6, 10), float32] */;
  %102 = %100.3;
  (%101, %102, meta[relay.Constant][5] /* ty=Tensor[(405), float32] */, %var_16028)
}

def @func_10327() -> (Tensor[(8, 6, 10), float64], uint64, Tensor[(21, 6), uint16], uint64) {
  %103 = @func_7430() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %104 = cast(meta[relay.Constant][6] /* ty=Tensor[(21, 6), uint16] */, dtype="uint16") /* ty=Tensor[(21, 6), uint16] */;
  %105 = cast(meta[relay.Constant][6] /* ty=Tensor[(21, 6), uint16] */, dtype="uint16") /* ty=Tensor[(21, 6), uint16] */;
  %106 = cast(meta[relay.Constant][7] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %107 = reshape(%104, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint16] */;
  %108 = reshape(%105, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint16] */;
  %109 = reshape(%106, newshape=[]) /* ty=uint64 */;
  %110 = @func_6727(%107, %108, %109) /* ty=(Tensor[(14, 3, 3), uint16], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 6), bool], uint64, Tensor[(6, 12), uint64]) */;
  %111 = %103.0;
  %112 = %110.4;
  (%111, %112, meta[relay.Constant][6] /* ty=Tensor[(21, 6), uint16] */, meta[relay.Constant][7] /* ty=uint64 */)
}

def @func_13700() -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) {
  %113 = @func_10176() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %114 = %113.0;
  %115 = cast(%114, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %116 = cast(meta[relay.Constant][8] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %117 = reshape(%115, newshape=[8, 6, 10]) /* ty=Tensor[(8, 6, 10), float64] */;
  %118 = reshape(%116, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %119 = @func_4090(%117, %118) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */;
  %120 = %119.2;
  (%114, %120, meta[relay.Constant][8] /* ty=Tensor[(405), float32] */)
}

def @func_6391() -> Tensor[(528), float64] {
  %121 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
  %121.4
}

def @func_5181() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %122 = @func_4714() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */;
  %123 = @func_4315() /* ty=Tensor[(8, 6, 10), float64] */;
  %124 = %122.0;
  (%123, %124)
}

def @func_15991() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %125 = @func_5520() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %126 = @func_4937() /* ty=Tensor[(8, 6, 10), float64] */;
  %127 = @func_6662() /* ty=Tensor[(8, 6, 10), float64] */;
  %128 = %125.0;
  (%126, %127, %128)
}

def @func_15258(%var_15191: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32]) {
  %129 = @func_11226() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %130 = @func_11397() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %131 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
  %132 = @func_14352() /* ty=(Tensor[(405), float32], Tensor[(2, 4, 7), float64]) */;
  %133 = %132.0;
  %134 = cast(%var_15191, dtype="uint16") /* ty=Tensor[(405), uint16] */;
  %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(1), int32] */;
  %136 = cast(%133, dtype="uint16") /* ty=Tensor[(405), uint16] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %138 = minimum(%136, %137) /* ty=Tensor[(405), uint16] */;
  %139 = cast(%138, dtype="float64") /* ty=Tensor[(405), float64] */;
  %140 = tan(%139) /* ty=Tensor[(405), float64] */;
  %141 = cast(%140, dtype="float32") /* ty=Tensor[(405), float32] */;
  %142 = %129.1;
  %143 = %130.0;
  %144 = %131.0;
  %145 = sin(%141) /* ty=Tensor[(405), float32] */;
  (%142, %143, %144, %145)
}

def @func_6761() -> (Tensor[(8, 6, 10), float64],) {
  %146 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
  (%146,)
}

def @func_7551(%var_7539: Tensor[(1008), uint16], %var_7540: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567), uint32]) {
  %147 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %148 = cast(%var_7539, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %149 = cast(%var_7539, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %150 = cast(%var_7540, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %151 = reshape(%148, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %152 = reshape(%149, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %153 = reshape(%150, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %154 = @func_4004(%151, %152, %153) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */;
  %155 = %147.1;
  %156 = %154.1;
  (%155, %156, %var_7539, %var_7540)
}

def @func_8796() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %157 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %158 = @func_6662() /* ty=Tensor[(8, 6, 10), float64] */;
  %159 = %157.0;
  %160 = @func_6792() /* ty=Tensor[(8, 6, 10), float64] */;
  (%158, %159, %160)
}

def @func_12402() -> Tensor[(9, 5, 9), int16] {
  %161 = @func_11677() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32]) */;
  %161.2
}

def @func_13525() -> Tensor[(12, 2, 8), int32] {
  @func_6677() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_9385() -> (Tensor[(8, 2, 3), float64], Tensor[(13), float64]) {
  %162 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 2, 3), float64] */, dtype="float64") /* ty=Tensor[(8, 2, 3), float64] */;
  %163 = @func_8085() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */;
  %164 = asin(%162) /* ty=Tensor[(8, 2, 3), float64] */;
  %165 = %163.3;
  (%164, %165)
}

def @func_4385(%var_4379: Tensor[(567, 1), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(78), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567, 1), uint32]) {
  %166 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %167 = cast(meta[relay.Constant][10] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %168 = reshape(%167, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %169 = @func_1638(%168) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
  %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %171 = cast(meta[relay.Constant][11] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %172 = cast(%var_4379, dtype="uint32") /* ty=Tensor[(567, 1), uint32] */;
  %173 = reshape(%170, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %174 = reshape(%171, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %175 = reshape(%172, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %176 = @func_4004(%173, %174, %175) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */;
  %177 = %166.0;
  %178 = %169.5;
  %179 = %176.0;
  (%177, %178, meta[relay.Constant][10] /* ty=Tensor[(78), float64] */, %179, meta[relay.Constant][11] /* ty=Tensor[(1008), uint16] */, %var_4379)
}

def @func_10749() -> Tensor[(12, 2, 8), int32] {
  %180 = @func_10023() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32]) */;
  %180.1
}

def @func_8564() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %181 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %182 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %183 = %181.0;
  %184 = %182.0;
  (%183, %184)
}

def @func_582(%var_561: Tensor[(1, 14, 9), float64], %var_562: Tensor[(11, 14, 9), float64]) -> (Tensor[(11, 14, 9), float64],) {
  %185 = cast(%var_561, dtype="float64") /* ty=Tensor[(1, 14, 9), float64] */;
  %186 = cast(%var_562, dtype="float64") /* ty=Tensor[(11, 14, 9), float64] */;
  %187 = floor_divide(%185, %186) /* ty=Tensor[(11, 14, 9), float64] */;
  (%187,)
}

def @func_10416(%var_10365: Tensor[(9, 4, 3), float32], %var_10384: Tensor[(1008), uint16]) -> (Tensor[(9, 4, 3), float32], Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(8, 6, 10), float64], Tensor[(567), float32]) {
  %188 = cast(%var_10365, dtype="float32") /* ty=Tensor[(9, 4, 3), float32] */;
  %189 = erf(%188) /* ty=Tensor[(9, 4, 3), float32] */;
  %190 = cast(%var_10365, dtype="float32") /* ty=Tensor[(9, 4, 3), float32] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="float32") /* ty=Tensor[(9, 4, 3), float32] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %194 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %195 = cast(%var_10384, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %196 = cast(meta[relay.Constant][12] /* ty=Tensor[(567), uint32] */, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %197 = reshape(%195, newshape=[1008]) /* ty=Tensor[(1008), uint16] */;
  %198 = reshape(%196, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %199 = @func_7551(%197, %198) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
  %200 = @func_8152() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %201 = cast(meta[relay.Constant][12] /* ty=Tensor[(567), uint32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %202 = power(%192, %193) /* ty=Tensor[(9, 4, 3), float32] */;
  %203 = %194.0;
  %204 = %199.3;
  %205 = %200.0;
  %206 = exp(%201) /* ty=Tensor[(567), float32] */;
  (%202, %203, %204, %var_10384, %205, %206)
}

def @func_12566() -> (Tensor[(2, 4, 7), float64],) {
  %207 = @func_9714() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %208 = %207.0;
  (%208,)
}

def @func_6471() -> (Tensor[(192), float32], Tensor[(8, 6, 10), float32], Tensor[(13), float64]) {
  %209 = cast(meta[relay.Constant][13] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %210 = reshape(%209, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %211 = @func_4298(%210) /* ty=(Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float32]) */;
  %212 = @func_5993() /* ty=Tensor[(192), float32] */;
  %213 = %211.3;
  (%212, %213, meta[relay.Constant][13] /* ty=Tensor[(13), float64] */)
}

def @func_15548(%var_15506: Tensor[(2, 7, 13), float64], %var_15526: Tensor[(567), uint32]) -> (Tensor[(2, 7, 13), float64], Tensor[(1008), uint16], Tensor[(567), uint32]) {
  %214 = cast(%var_15506, dtype="float64") /* ty=Tensor[(2, 7, 13), float64] */;
  %215 = cast(%var_15526, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %216 = reshape(%215, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %217 = @func_7667(%216) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
  %218 = cosh(%214) /* ty=Tensor[(2, 7, 13), float64] */;
  %219 = %217.3;
  (%218, %219, %var_15526)
}

def @func_16689() -> Tensor[(8, 6, 10), float64] {
  @func_4965() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_6415() -> Tensor[(8, 6, 10), float64] {
  @func_5426() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_12945() -> Tensor[(12, 4, 11), float64] {
  %220 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %220.2
}

def @func_18792() -> (Tensor[(405), float32], Tensor[(78), float32], Tensor[(8, 6, 10), float64], Tensor[(135, 3), float64], Tensor[(2, 2, 15), bool], Tensor[(1, 60), float64], Tensor[(2, 4, 7), float64], Tensor[(8, 6, 10), float64]) {
  %221 = cast(meta[relay.Constant][14] /* ty=Tensor[(135, 3), float32] */, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %222 = reshape(%221, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %223 = @func_15258(%222) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %224 = @func_10550() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %225 = %224.0;
  %226 = cast(%225, dtype="float32") /* ty=Tensor[(78), float32] */;
  %227 = cast(meta[relay.Constant][14] /* ty=Tensor[(135, 3), float32] */, dtype="float64") /* ty=Tensor[(135, 3), float64] */;
  %228 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %229 = reshape(%228, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), float64] */;
  %230 = @func_6041(%229) /* ty=(Tensor[(2, 2, 15), bool], Tensor[(8, 6, 10), float64]) */;
  %231 = @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %232 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %233 = %223.3;
  %234 = erf(%226) /* ty=Tensor[(78), float32] */;
  %235 = @func_17468() /* ty=Tensor[(8, 6, 10), float64] */;
  %236 = asin(%227) /* ty=Tensor[(135, 3), float64] */;
  %237 = %230.0;
  %238 = %231.0;
  %239 = %232.0;
  (%233, %234, %235, %236, %237, meta[relay.Constant][15] /* ty=Tensor[(1, 60), float64] */, %238, %239)
}

def @func_16452() -> Tensor[(8, 6, 10), float64] {
  %240 = @func_7356() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %240.0
}

def @func_18190() -> Tensor[(8, 6, 10), float64] {
  %241 = @func_11226() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %241.2
}

def @func_9986() -> (Tensor[(78), float64],) {
  %242 = @func_9508() /* ty=(Tensor[(78), float64],) */;
  %243 = %242.0;
  (%243,)
}

def @func_15628() -> (Tensor[(12, 4, 11), float64], Tensor[(12, 4, 11), float64], Tensor[(8, 6, 10), float64]) {
  %244 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %245 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
  %246 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %247 = %244.2;
  %248 = %245.3;
  %249 = %246.0;
  (%247, %248, %249)
}

def @func_13718(%var_13709: Tensor[(9, 16, 15), uint32], %var_13710: Tensor[(9, 16, 15), uint32]) -> (Tensor[(9, 16, 15), uint32], Tensor[(8, 6, 10), float64]) {
  %250 = cast(%var_13710, dtype="uint32") /* ty=Tensor[(9, 16, 15), uint32] */;
  %251 = shape_of(%var_13709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%var_13709, dtype="uint32") /* ty=Tensor[(9, 16, 15), uint32] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %254 = @func_11397() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %255 = bitwise_xor(%252, %253) /* ty=Tensor[(9, 16, 15), uint32] */;
  %256 = %254.0;
  (%255, %256)
}

def @func_17734() -> (Tensor[(8, 6, 10), float64], Tensor[(7, 7, 2), int16], Tensor[(98), int16]) {
  %257 = @func_16202() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %258 = cast(meta[relay.Constant][16] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %259 = cast(meta[relay.Constant][16] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %260 = reshape(%258, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), int16] */;
  %261 = reshape(%259, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), int16] */;
  %262 = @func_10087(%260, %261) /* ty=(Tensor[(7, 7, 2), int16], Tensor[(78), float64]) */;
  %263 = %257.0;
  %264 = %262.0;
  (%263, %264, meta[relay.Constant][16] /* ty=Tensor[(98), int16] */)
}

def @func_11496() -> (Tensor[(8, 6, 10), float64],) {
  %265 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
  %266 = %265.0;
  (%266,)
}

def @func_12525() -> (Tensor[(8, 6, 10), float32],) {
  %267 = @func_11409() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %268 = %267.0;
  (%268,)
}

def @func_17192() -> (Tensor[(8, 6, 10), float64],) {
  %269 = @func_15079() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %270 = %269.0;
  (%270,)
}

def @func_16858() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %271 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %272 = @func_16689() /* ty=Tensor[(8, 6, 10), float64] */;
  %273 = %271.0;
  (%272, %273)
}

def @func_18417() -> Tensor[(8, 6, 10), float64] {
  %274 = @func_6530() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */;
  %274.1
}

def @func_18925() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64]) {
  %275 = @func_7002() /* ty=(Tensor[(78), float64],) */;
  %276 = @func_13837() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %277 = %275.0;
  %278 = %276.1;
  (%277, %278)
}

def @func_17871() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 6), bool], uint64, Tensor[(72), uint64], Tensor[(9, 5, 9), float64], Tensor[(78, 1), float64], Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(78), float64]) {
  %279 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %280 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
  %281 = cast(meta[relay.Constant][17] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %282 = cast(meta[relay.Constant][18] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %283 = reshape(%281, newshape=[]) /* ty=uint64 */;
  %284 = reshape(%282, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), uint64] */;
  %285 = @func_2598(%283, %284) /* ty=(Tensor[(12, 2, 6), bool], Tensor[(12, 2, 6), bool]) */;
  %286 = cast(meta[relay.Constant][19] /* ty=Tensor[(78, 1), float64] */, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
  %287 = reshape(%286, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %288 = @func_5351(%287) /* ty=(Tensor[(8, 6, 10), bool], Tensor[(9, 5, 9), float32], Tensor[(240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(9, 5, 9), float64]) */;
  %289 = @func_14376() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %290 = @func_5520() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %291 = @func_17258() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64]) */;
  %292 = %279.1;
  %293 = %280.4;
  %294 = %285.0;
  %295 = %288.5;
  %296 = %289.0;
  %297 = %290.0;
  %298 = %291.0;
  (%292, %293, %294, meta[relay.Constant][17] /* ty=uint64 */, meta[relay.Constant][18] /* ty=Tensor[(72), uint64] */, %295, meta[relay.Constant][19] /* ty=Tensor[(78, 1), float64] */, %296, %297, %298)
}

def @func_16202() -> (Tensor[(8, 6, 10), float64],) {
  %299 = @func_9783() /* ty=Tensor[(8, 6, 10), float64] */;
  (%299,)
}

def @func_1638(%var_1622: Tensor[(26, 3), float64]) -> (Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) {
  %300 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(5, 4, 11), float64] */;
  %301 = cast(meta[relay.Constant][21] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %302 = cast(%var_1622, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
  %303 = reshape(%301, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %304 = reshape(%302, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %305 = @func_1057(%303, %304) /* ty=(Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) */;
  %306 = cast(meta[relay.Constant][22] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %307 = reshape(%306, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %308 = @func_305(%307) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %309 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 63), uint32] */, dtype="uint32") /* ty=Tensor[(9, 63), uint32] */;
  %310 = reshape(%309, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint32] */;
  %311 = erf(%300) /* ty=Tensor[(5, 4, 11), float64] */;
  %312 = %305.4;
  %313 = %308.0;
  %314 = @func_1145(%310) /* ty=Tensor[(9, 9, 7), uint32] */;
  (%311, %312, meta[relay.Constant][21] /* ty=Tensor[(13), float64] */, %var_1622, %313, meta[relay.Constant][22] /* ty=Tensor[(405), float32] */, %314, meta[relay.Constant][23] /* ty=Tensor[(9, 63), uint32] */)
}

def @func_7037() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %315 = @func_4315() /* ty=Tensor[(8, 6, 10), float64] */;
  %316 = @func_5087() /* ty=Tensor[(8, 6, 10), float64] */;
  (%315, %316)
}

def @func_12361(%var_12329: Tensor[(14, 15, 2), int64]) -> (Tensor[(14, 15, 2), bool], Tensor[(8, 6, 10), float64], Tensor[(14, 15, 2), float64]) {
  %317 = cast(meta[relay.Constant][24] /* ty=Tensor[(14, 15, 1), int64] */, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
  %318 = cast(%var_12329, dtype="bool") /* ty=Tensor[(14, 15, 2), bool] */;
  %319 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %320 = cast(%var_12329, dtype="float64") /* ty=Tensor[(14, 15, 2), float64] */;
  %321 = not_equal(%317, %318) /* ty=Tensor[(14, 15, 2), bool] */;
  %322 = %319.0;
  %323 = log(%320) /* ty=Tensor[(14, 15, 2), float64] */;
  (%321, %322, %323)
}

def @func_19708() -> Tensor[(8, 6, 10), float64] {
  %324 = @func_10635() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %324.0
}

def @func_9006() -> (Tensor[(8, 6, 10), float64],) {
  %325 = @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %326 = %325.0;
  (%326,)
}

def @func_13763() -> Tensor[(8, 6, 10), float64] {
  %327 = @func_8098() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %327.0
}

def @func_19020() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %328 = @func_16072() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %329 = @func_11226() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %330 = %328.0;
  %331 = %329.1;
  (%330, %331)
}

def @func_11397() -> (Tensor[(8, 6, 10), float64], Tensor[(405), float32]) {
  %332 = @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */;
  %333 = @func_6415() /* ty=Tensor[(8, 6, 10), float64] */;
  %334 = %332.2;
  (%333, %334)
}

def @func_15877() -> Tensor[(8, 6, 10), float64] {
  @func_6554() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_13008() -> Tensor[(8, 6, 10), float64] {
  %335 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
  %335.1
}

def @func_2373(%var_2358: Tensor[(12, 4, 11), float64]) -> (Tensor[(12, 4, 11), float64],) {
  %336 = cast(%var_2358, dtype="float64") /* ty=Tensor[(12, 4, 11), float64] */;
  %337 = log(%336) /* ty=Tensor[(12, 4, 11), float64] */;
  (%337,)
}

def @func_15001(%var_14969: Tensor[(1008), uint16]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(1008), uint16], Tensor[(567), float32]) {
  %338 = @func_14851() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %339 = cast(%var_14969, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %340 = cast(meta[relay.Constant][25] /* ty=Tensor[(567), uint32] */, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %341 = reshape(%339, newshape=[1008]) /* ty=Tensor[(1008), uint16] */;
  %342 = reshape(%340, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %343 = @func_7551(%341, %342) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
  %344 = cast(meta[relay.Constant][25] /* ty=Tensor[(567), uint32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %345 = @func_8981() /* ty=Tensor[(8, 6, 10), float64] */;
  %346 = %338.0;
  %347 = %343.0;
  %348 = sigmoid(%344) /* ty=Tensor[(567), float32] */;
  (%345, %346, %347, %var_14969, %348)
}

def @func_16119() -> (Tensor[(405), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) {
  %349 = @func_14352() /* ty=(Tensor[(405), float32], Tensor[(2, 4, 7), float64]) */;
  %350 = @func_8085() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */;
  %351 = %349.0;
  %352 = %350.5;
  %353 = @func_13553() /* ty=Tensor[(8, 6, 10), float64] */;
  (%351, %352, %353)
}

def @func_18915() -> Tensor[(8, 6, 10), float64] {
  %354 = @func_6436() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %354.0
}

def @func_12049() -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(13, 6), float64], Tensor[(8, 6, 10), float64]) {
  %355 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 6), float64] */, dtype="float64") /* ty=Tensor[(13, 6), float64] */;
  %356 = reshape(%355, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %357 = @func_11820(%356) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(78), float64]) */;
  %358 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %359 = @func_6792() /* ty=Tensor[(8, 6, 10), float64] */;
  %360 = %357.1;
  %361 = %358.0;
  (%359, %360, meta[relay.Constant][26] /* ty=Tensor[(13, 6), float64] */, %361)
}

def @func_14438(%var_14428: Tensor[(11, 1, 10), int32]) -> Tensor[(11, 12, 10), int16] {
  %362 = cast(%var_14428, dtype="int32") /* ty=Tensor[(11, 1, 10), int32] */;
  %363 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 12, 10), int32] */, dtype="int32") /* ty=Tensor[(11, 12, 10), int32] */;
  %364 = multiply(%362, %363) /* ty=Tensor[(11, 12, 10), int32] */;
  %365 = cast(%364, dtype="int16") /* ty=Tensor[(11, 12, 10), int16] */;
  %366 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(11, 12, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 12, 10), int32] */, dtype="int16") /* ty=Tensor[(11, 12, 10), int16] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%367, %368) /* ty=Tensor[(11, 12, 10), int16] */
}

def @func_13028() -> (Tensor[(8, 6, 10), float64],) {
  %369 = @func_10607() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %370 = %369.1;
  (%370,)
}

def @func_13837() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %371 = @func_6212() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %372 = @func_6554() /* ty=Tensor[(8, 6, 10), float64] */;
  %373 = %371.0;
  (%372, %373)
}

def @func_16420() -> Tensor[(8, 6, 10), float32] {
  %374 = @func_14376() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %374.0
}

def @func_4336() -> (Tensor[(8, 6, 10), float64],) {
  %375 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %376 = %375.0;
  (%376,)
}

def @func_19597() -> (Tensor[(12, 4, 11), float64],) {
  %377 = @func_12945() /* ty=Tensor[(12, 4, 11), float64] */;
  (%377,)
}

def @func_6041(%var_6026: Tensor[(2, 2, 15), float64]) -> (Tensor[(2, 2, 15), bool], Tensor[(8, 6, 10), float64]) {
  %378 = cast(%var_6026, dtype="bool") /* ty=Tensor[(2, 2, 15), bool] */;
  %379 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(2, 2, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 2, 15), float64] */, dtype="bool") /* ty=Tensor[(2, 2, 15), bool] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %382 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %383 = less_equal(%380, %381) /* ty=Tensor[(2, 2, 15), bool] */;
  %384 = %382.0;
  (%383, %384)
}

def @func_15079() -> (Tensor[(8, 6, 10), float64],) {
  %385 = @func_12049() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(13, 6), float64], Tensor[(8, 6, 10), float64]) */;
  %386 = %385.0;
  (%386,)
}

def @func_13553() -> Tensor[(8, 6, 10), float64] {
  %387 = @func_11135() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %387.0
}

def @func_18898(%var_18853: Tensor[(234), float64], %var_18858: Tensor[(98), int16], %var_18859: Tensor[(78), float64], %var_18875: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(240), int16], Tensor[(13), float64], Tensor[(234), float64], Tensor[(78), float64], Tensor[(56), float64], Tensor[(98), int16], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32], Tensor[(405), int8]) {
  %388 = cast(meta[relay.Constant][29] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %389 = cast(meta[relay.Constant][30] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %390 = cast(%var_18853, dtype="float64") /* ty=Tensor[(234), float64] */;
  %391 = cast(meta[relay.Constant][31] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %392 = reshape(%388, newshape=[8, 30]) /* ty=Tensor[(8, 30), int16] */;
  %393 = reshape(%389, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %394 = reshape(%390, newshape=[78, 3]) /* ty=Tensor[(78, 3), float64] */;
  %395 = reshape(%391, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %396 = @func_8262(%392, %393, %394, %395) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 30), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(1008), uint16], Tensor[(3, 189), uint32], Tensor[(9, 5, 9), float64], Tensor[(1, 405), float32]) */;
  %397 = cast(meta[relay.Constant][32] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %398 = cast(%var_18858, dtype="int16") /* ty=Tensor[(98), int16] */;
  %399 = cast(%var_18859, dtype="float64") /* ty=Tensor[(78), float64] */;
  %400 = cast(meta[relay.Constant][31] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %401 = reshape(%397, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), float64] */;
  %402 = reshape(%398, newshape=[98]) /* ty=Tensor[(98), int16] */;
  %403 = reshape(%399, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %404 = reshape(%400, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %405 = @func_12488(%401, %402, %403, %404) /* ty=(Tensor[(2, 4, 7), uint64], Tensor[(7, 7, 2), int16], Tensor[(98), int16], Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(9, 9, 7), uint32], Tensor[(715), int8], Tensor[(405), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) */;
  %406 = @func_13809() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */;
  %407 = cast(%var_18875, dtype="int8") /* ty=Tensor[(405), int8] */;
  %408 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(405), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %409 = cast(meta[relay.Constant][31] /* ty=Tensor[(405), float32] */, dtype="int8") /* ty=Tensor[(405), int8] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?), int8] */;
  %411 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
  %412 = @func_5087() /* ty=Tensor[(8, 6, 10), float64] */;
  %413 = %396.0;
  %414 = %405.4;
  %415 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
  %416 = %406.0;
  %417 = logical_xor(%409, %410) /* ty=Tensor[(405), int8] */;
  (%411, %412, %413, meta[relay.Constant][29] /* ty=Tensor[(240), int16] */, meta[relay.Constant][30] /* ty=Tensor[(13), float64] */, %var_18853, %414, meta[relay.Constant][32] /* ty=Tensor[(56), float64] */, %var_18858, %var_18859, %415, %416, %417)
}

def @func_11866() -> Tensor[(8, 6, 10), float64] {
  @func_6662() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_8262(%var_8204: Tensor[(8, 30), int16], %var_8205: Tensor[(13), float64], %var_8220: Tensor[(78, 3), float64], %var_8252: Tensor[(1, 405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 30), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(1008), uint16], Tensor[(3, 189), uint32], Tensor[(9, 5, 9), float64], Tensor[(1, 405), float32]) {
  %418 = @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %419 = @func_7356() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %420 = cast(%var_8204, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %421 = cast(%var_8204, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %422 = cast(%var_8205, dtype="float64") /* ty=Tensor[(13), float64] */;
  %423 = cast(meta[relay.Constant][33] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %424 = cast(%var_8204, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %425 = reshape(%420, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %426 = reshape(%421, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %427 = reshape(%422, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %428 = reshape(%423, newshape=[78, 1]) /* ty=Tensor[(78, 1), float64] */;
  %429 = reshape(%424, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %430 = @func_3693(%425, %426, %427, %428, %429) /* ty=(Tensor[(26, 3), float64], Tensor[(1, 13), float64], Tensor[(78, 1), float64], Tensor[(3, 5, 16), uint64], Tensor[(405), float32], Tensor[(9, 5, 9), float32], Tensor[(3, 5, 16), bool], Tensor[(13), float64]) */;
  %431 = %430.2;
  %432 = cast(%431, dtype="int64") /* ty=Tensor[(78, 1), int64] */;
  %433 = cast(%var_8220, dtype="int64") /* ty=Tensor[(78, 3), int64] */;
  %434 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 189), uint32] */, dtype="uint32") /* ty=Tensor[(3, 189), uint32] */;
  %435 = reshape(%434, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %436 = @func_7667(%435) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
  %437 = cast(%var_8252, dtype="float32") /* ty=Tensor[(1, 405), float32] */;
  %438 = reshape(%437, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %439 = @func_305(%438) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %440 = %418.0;
  %441 = %419.0;
  %442 = subtract(%432, %433) /* ty=Tensor[(78, 3), int64] */;
  %443 = %436.3;
  %444 = %439.1;
  (%440, %441, %var_8204, %var_8205, meta[relay.Constant][33] /* ty=Tensor[(78), float64] */, %442, %443, meta[relay.Constant][34] /* ty=Tensor[(3, 189), uint32] */, %444, %var_8252)
}

def @func_6580(%var_6570: Tensor[(2, 10, 3), int16], %var_6571: Tensor[(2, 10, 3), int16], %var_6578: Tensor[(480), float64]) -> (Tensor[(2, 10, 3), bool], Tensor[(8, 6, 10), bool], Tensor[(480), float64]) {
  %445 = cast(%var_6571, dtype="bool") /* ty=Tensor[(2, 10, 3), bool] */;
  %446 = shape_of(%var_6570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%var_6570, dtype="bool") /* ty=Tensor[(2, 10, 3), bool] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %449 = cast(%var_6578, dtype="float64") /* ty=Tensor[(480), float64] */;
  %450 = reshape(%449, newshape=[8, 6, 10]) /* ty=Tensor[(8, 6, 10), float64] */;
  %451 = @func_5708(%450) /* ty=(Tensor[(8, 6, 10), bool],) */;
  %452 = less_equal(%447, %448) /* ty=Tensor[(2, 10, 3), bool] */;
  %453 = %451.0;
  (%452, %453, %var_6578)
}

def @func_13404() -> Tensor[(12, 2, 8), int32] {
  @func_6677() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_4644() -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) {
  %454 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %455 = %454.0;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %457 = cast(meta[relay.Constant][35] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %458 = reshape(%456, newshape=[8, 6, 10]) /* ty=Tensor[(8, 6, 10), float64] */;
  %459 = reshape(%457, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %460 = @func_4090(%458, %459) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */;
  %461 = %460.4;
  (%455, %461, meta[relay.Constant][35] /* ty=Tensor[(405), float32] */)
}

def @func_9206() -> Tensor[(192), float32] {
  %462 = @func_6471() /* ty=(Tensor[(192), float32], Tensor[(8, 6, 10), float32], Tensor[(13), float64]) */;
  %462.0
}

def @func_4965() -> Tensor[(8, 6, 10), float64] {
  @func_3939() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_12300(%var_12249: Tensor[(7, 16, 12), float32], %var_12273: Tensor[(78), float64]) -> (Tensor[(7, 16, 12), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(3, 2, 13), bool], Tensor[(1, 13), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(432), int32]) {
  %463 = cast(%var_12249, dtype="float32") /* ty=Tensor[(7, 16, 12), float32] */;
  %464 = @func_5520() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %465 = cast(%var_12273, dtype="float64") /* ty=Tensor[(78), float64] */;
  %466 = reshape(%465, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %467 = @func_10834(%466) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(240), int16], Tensor[(78), float64]) */;
  %468 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %469 = cast(%var_12273, dtype="float64") /* ty=Tensor[(78), float64] */;
  %470 = reshape(%468, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
  %471 = reshape(%469, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %472 = @func_630(%470, %471) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */;
  %473 = @func_9051() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %474 = cast(meta[relay.Constant][37] /* ty=Tensor[(432), int32] */, dtype="int32") /* ty=Tensor[(432), int32] */;
  %475 = reshape(%474, newshape=[216, 2]) /* ty=Tensor[(216, 2), int32] */;
  %476 = @func_8748(%475) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(6, 6, 12), bool], Tensor[(216, 2), int32], Tensor[(12, 2, 8), int32], Tensor[(13), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(8, 6, 10), float64]) */;
  %477 = asin(%463) /* ty=Tensor[(7, 16, 12), float32] */;
  %478 = %464.0;
  %479 = %467.0;
  %480 = %472.0;
  %481 = %473.0;
  %482 = %476.8;
  (%477, %478, %479, %var_12273, %480, meta[relay.Constant][36] /* ty=Tensor[(1, 13), float64] */, %481, %482, meta[relay.Constant][37] /* ty=Tensor[(432), int32] */)
}

def @func_16643() -> (Tensor[(234), float64], Tensor[(8, 6, 10), float64], Tensor[(1008), uint16], Tensor[(1, 13), float64]) {
  %483 = @func_12554() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(4, 60), int16], Tensor[(13), float64], Tensor[(234), float64], Tensor[(405), float32]) */;
  %484 = cast(meta[relay.Constant][38] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %485 = reshape(%484, newshape=[1008]) /* ty=Tensor[(1008), uint16] */;
  %486 = @func_15001(%485) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(1008), uint16], Tensor[(567), float32]) */;
  %487 = %483.4;
  %488 = %486.2;
  %489 = @func_12191() /* ty=Tensor[(1, 13), float64] */;
  (%487, %488, meta[relay.Constant][38] /* ty=Tensor[(1008), uint16] */, %489)
}

def @func_19652() -> Tensor[(8, 6, 10), float64] {
  %490 = @func_11496() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %490.0
}

def @func_12170(%var_12156: Tensor[(13, 10, 10), uint32], %var_12157: Tensor[(13, 10, 10), uint32]) -> (Tensor[(13, 10, 10), bool], Tensor[(5, 4, 11), float64], Tensor[(78), float64]) {
  %491 = cast(%var_12157, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
  %492 = shape_of(%var_12156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%var_12156, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %495 = cast(meta[relay.Constant][39] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %496 = reshape(%495, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %497 = @func_1638(%496) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
  %498 = not_equal(%493, %494) /* ty=Tensor[(13, 10, 10), bool] */;
  %499 = %497.0;
  (%498, %499, meta[relay.Constant][39] /* ty=Tensor[(78), float64] */)
}

def @func_13332() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float32], Tensor[(405), float32]) {
  %500 = @func_11409() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %501 = @func_6530() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */;
  %502 = @func_11397() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %503 = %502.1;
  %504 = cast(%503, dtype="float32") /* ty=Tensor[(405), float32] */;
  %505 = %500.0;
  %506 = %501.0;
  %507 = asinh(%504) /* ty=Tensor[(405), float32] */;
  (%505, %506, %507)
}

def @func_13780() -> (Tensor[(8, 6, 10), float64],) {
  %508 = @func_10607() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %509 = %508.0;
  (%509,)
}

def @func_13266(%var_13247: Tensor[(1, 405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(1, 405), float32]) {
  %510 = @func_7968() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %511 = @func_10176() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %512 = cast(%var_13247, dtype="float32") /* ty=Tensor[(1, 405), float32] */;
  %513 = reshape(%512, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %514 = @func_305(%513) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %515 = %510.0;
  %516 = %511.0;
  %517 = %514.0;
  (%515, %516, %517, %var_13247)
}

def @func_1057(%var_1051: Tensor[(13), float64], %var_1052: Tensor[(26, 3), float64]) -> (Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) {
  %518 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 13, 9), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 9), float32] */;
  %519 = sinh(%518) /* ty=Tensor[(4, 13, 9), float32] */;
  %520 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 13, 9), float32] */, dtype="bool") /* ty=Tensor[(4, 13, 9), bool] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%519, dtype="bool") /* ty=Tensor[(4, 13, 9), bool] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %524 = cast(%519, dtype="float64") /* ty=Tensor[(4, 13, 9), float64] */;
  %525 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(4, 13, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 13, 9), float32] */, dtype="float64") /* ty=Tensor[(4, 13, 9), float64] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %528 = cast(%var_1051, dtype="float64") /* ty=Tensor[(13), float64] */;
  %529 = cast(%var_1052, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
  %530 = reshape(%528, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
  %531 = reshape(%529, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %532 = @func_630(%530, %531) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */;
  %533 = greater(%522, %523) /* ty=Tensor[(4, 13, 9), bool] */;
  %534 = maximum(%526, %527) /* ty=Tensor[(4, 13, 9), float64] */;
  %535 = %532.2;
  (%533, %534, %535, %var_1051, %var_1052)
}

def @func_8450(%var_8398: Tensor[(567), uint32], %var_8406: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(567), bool], Tensor[(567), int8], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), float64], Tensor[(8, 6, 10), float64], Tensor[(528), float64]) {
  %536 = @func_6761() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %537 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %538 = cast(%var_8398, dtype="bool") /* ty=Tensor[(567), bool] */;
  %539 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(567), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %540 = cast(meta[relay.Constant][41] /* ty=Tensor[(567), uint32] */, dtype="bool") /* ty=Tensor[(567), bool] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?), bool] */;
  %542 = cast(%var_8406, dtype="int8") /* ty=Tensor[(567), int8] */;
  %543 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(567), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %544 = cast(meta[relay.Constant][41] /* ty=Tensor[(567), uint32] */, dtype="int8") /* ty=Tensor[(567), int8] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?), int8] */;
  %546 = @func_6436() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %547 = cast(meta[relay.Constant][41] /* ty=Tensor[(567), uint32] */, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %548 = reshape(%547, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %549 = @func_7667(%548) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
  %550 = %549.2;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(7, 9, 16), float64] */;
  %552 = @func_8152() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %553 = %536.0;
  %554 = %537.0;
  %555 = greater_equal(%540, %541) /* ty=Tensor[(567), bool] */;
  %556 = add(%544, %545) /* ty=Tensor[(567), int8] */;
  %557 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
  %558 = %546.0;
  %559 = asin(%551) /* ty=Tensor[(7, 9, 16), float64] */;
  %560 = %552.1;
  %561 = @func_6391() /* ty=Tensor[(528), float64] */;
  (%553, %554, %555, %556, %557, %558, %559, %560, %561)
}

def @func_13151() -> (Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %562 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %563 = @func_6212() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %564 = @func_8796() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %565 = @func_6677() /* ty=Tensor[(12, 2, 8), int32] */;
  %566 = %562.0;
  %567 = %563.0;
  %568 = %564.0;
  (%565, %566, %567, %568)
}

def @func_19094() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %569 = @func_16665() /* ty=Tensor[(8, 6, 10), float64] */;
  %570 = @func_16471() /* ty=Tensor[(8, 6, 10), float64] */;
  (%569, %570)
}

def @func_6012(%var_6003: Tensor[(9, 5, 9), float32]) -> (Tensor[(9, 5, 9), int16],) {
  %571 = @func_4827() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) */;
  %572 = %571.1;
  %573 = cast(%var_6003, dtype="int16") /* ty=Tensor[(9, 5, 9), int16] */;
  %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%572, dtype="int16") /* ty=Tensor[(9, 5, 9), int16] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %577 = subtract(%575, %576) /* ty=Tensor[(9, 5, 9), int16] */;
  (%577,)
}

def @func_18471() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(192), float32]) {
  %578 = @func_12525() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %579 = @func_17192() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %580 = %578.0;
  %581 = %579.0;
  %582 = @func_5993() /* ty=Tensor[(192), float32] */;
  (%580, %581, %582)
}

def @func_9638(%var_9615: Tensor[(192), float32], %var_9618: Tensor[(12, 2, 8), int32]) -> (Tensor[(8, 6, 10), float64], Tensor[(192), float32], Tensor[(12, 2, 8), float64], Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  %583 = @func_9455() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %584 = cast(%var_9615, dtype="float32") /* ty=Tensor[(192), float32] */;
  %585 = cast(%var_9615, dtype="float32") /* ty=Tensor[(192), float32] */;
  %586 = cast(%var_9615, dtype="float64") /* ty=Tensor[(192), float64] */;
  %587 = reshape(%584, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %588 = reshape(%585, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %589 = reshape(%586, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %590 = @func_1559(%587, %588, %589) /* ty=(Tensor[(12, 2, 8), int32],) */;
  %591 = %590.0;
  %592 = cast(%var_9618, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %596 = @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %597 = @func_7968() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %598 = %583.0;
  %599 = power(%594, %595) /* ty=Tensor[(12, 2, 8), float64] */;
  %600 = %596.1;
  %601 = %597.0;
  (%598, %var_9615, %599, %600, %601)
}

def @func_5426() -> Tensor[(8, 6, 10), float64] {
  %602 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %602.1
}

def @func_9051() -> (Tensor[(8, 6, 10), float64],) {
  %603 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
  (%603,)
}

def @func_8543() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) {
  %604 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %605 = @func_7593() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %606 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %607 = @func_5378() /* ty=(Tensor[(12, 2, 8), int32],) */;
  %608 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %609 = %604.0;
  %610 = %605.0;
  %611 = %606.0;
  %612 = %607.0;
  %613 = %608.0;
  (%609, %610, %611, %612, %613)
}

def @func_9508() -> (Tensor[(78), float64],) {
  %614 = @func_5587() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), uint32]) */;
  %615 = %614.5;
  (%615,)
}

def @func_14917() -> Tensor[(8, 6, 10), float64] {
  %616 = @func_14641() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %616.0
}

def @func_11570(%var_11515: Tensor[(5, 13, 11), int8], %var_11516: Tensor[(5, 13, 11), int8], %var_11532: Tensor[(5, 13, 11), int8], %var_11545: Tensor[(405), float32], %var_11552: Tensor[(13), float64]) -> (Tensor[(9, 9, 7), uint32], Tensor[(63, 9), uint32], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(405), float32], Tensor[(1, 240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(5, 13, 11), bool]) {
  %617 = cast(meta[relay.Constant][42] /* ty=Tensor[(63, 9), uint32] */, dtype="uint32") /* ty=Tensor[(63, 9), uint32] */;
  %618 = reshape(%617, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint32] */;
  %619 = cast(%var_11545, dtype="float32") /* ty=Tensor[(405), float32] */;
  %620 = reshape(%619, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %621 = @func_6012(%620) /* ty=(Tensor[(9, 5, 9), int16],) */;
  %622 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 240), int16] */, dtype="int16") /* ty=Tensor[(1, 240), int16] */;
  %623 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 240), int16] */, dtype="int16") /* ty=Tensor[(1, 240), int16] */;
  %624 = cast(%var_11552, dtype="float64") /* ty=Tensor[(13), float64] */;
  %625 = cast(meta[relay.Constant][44] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %626 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 240), int16] */, dtype="int16") /* ty=Tensor[(1, 240), int16] */;
  %627 = reshape(%622, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %628 = reshape(%623, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %629 = reshape(%624, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %630 = reshape(%625, newshape=[78, 1]) /* ty=Tensor[(78, 1), float64] */;
  %631 = reshape(%626, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %632 = @func_3693(%627, %628, %629, %630, %631) /* ty=(Tensor[(26, 3), float64], Tensor[(1, 13), float64], Tensor[(78, 1), float64], Tensor[(3, 5, 16), uint64], Tensor[(405), float32], Tensor[(9, 5, 9), float32], Tensor[(3, 5, 16), bool], Tensor[(13), float64]) */;
  %633 = cast(%var_11532, dtype="bool") /* ty=Tensor[(5, 13, 11), bool] */;
  %634 = shape_of(%var_11515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%var_11515, dtype="bool") /* ty=Tensor[(5, 13, 11), bool] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %637 = equal(%635, %636) /* ty=Tensor[(5, 13, 11), bool] */;
  %638 = cast(%637, dtype="float64") /* ty=Tensor[(5, 13, 11), float64] */;
  %639 = cosh(%638) /* ty=Tensor[(5, 13, 11), float64] */;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(5, 13, 11), float32] */;
  %641 = log2(%640) /* ty=Tensor[(5, 13, 11), float32] */;
  %642 = cast(%var_11516, dtype="int8") /* ty=Tensor[(5, 13, 11), int8] */;
  %643 = shape_of(%var_11515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%var_11515, dtype="int8") /* ty=Tensor[(5, 13, 11), int8] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %646 = add(%644, %645) /* ty=Tensor[(5, 13, 11), int8] */;
  %647 = cast(%646, dtype="bool") /* ty=Tensor[(5, 13, 11), bool] */;
  %648 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%641, dtype="bool") /* ty=Tensor[(5, 13, 11), bool] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %651 = @func_1145(%618) /* ty=Tensor[(9, 9, 7), uint32] */;
  %652 = %621.0;
  %653 = %632.4;
  %654 = not_equal(%649, %650) /* ty=Tensor[(5, 13, 11), bool] */;
  (%651, meta[relay.Constant][42] /* ty=Tensor[(63, 9), uint32] */, %652, %var_11545, %653, meta[relay.Constant][43] /* ty=Tensor[(1, 240), int16] */, %var_11552, meta[relay.Constant][44] /* ty=Tensor[(78), float64] */, %654)
}

def @func_5673() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) {
  %655 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %656 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %657 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
  %658 = %657.3;
  %659 = cast(%658, dtype="float64") /* ty=Tensor[(12, 4, 11), float64] */;
  %660 = %655.0;
  %661 = %656.1;
  %662 = cos(%659) /* ty=Tensor[(12, 4, 11), float64] */;
  (%660, %661, %662)
}

def @func_11890(%var_11883: Tensor[(11, 7, 8), float64]) -> Tensor[(11, 7, 8), float64] {
  %663 = cast(%var_11883, dtype="float64") /* ty=Tensor[(11, 7, 8), float64] */;
  sqrt(%663) /* ty=Tensor[(11, 7, 8), float64] */
}

def @func_16471() -> Tensor[(8, 6, 10), float64] {
  %664 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %664.0
}

def @func_17284() -> (Tensor[(2, 4, 7), float64],) {
  %665 = @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %666 = %665.0;
  (%666,)
}

def @func_4557() -> (Tensor[(8, 6, 10), float64],) {
  %667 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
  (%667,)
}

def @func_2598(%var_2566: uint64, %var_2567: Tensor[(12, 1, 6), uint64]) -> (Tensor[(12, 2, 6), bool], Tensor[(12, 2, 6), bool]) {
  %668 = cast(%var_2566, dtype="uint64") /* ty=uint64 */;
  %669 = cast(%var_2567, dtype="uint64") /* ty=Tensor[(12, 1, 6), uint64] */;
  %670 = add(%668, %669) /* ty=Tensor[(12, 1, 6), uint64] */;
  %671 = cast(%670, dtype="bool") /* ty=Tensor[(12, 1, 6), bool] */;
  %672 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 2, 6), uint64] */, dtype="bool") /* ty=Tensor[(12, 2, 6), bool] */;
  %673 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 2, 6), uint64] */, dtype="bool") /* ty=Tensor[(12, 2, 6), bool] */;
  %674 = cast(%670, dtype="bool") /* ty=Tensor[(12, 1, 6), bool] */;
  %675 = greater(%671, %672) /* ty=Tensor[(12, 2, 6), bool] */;
  %676 = greater_equal(%673, %674) /* ty=Tensor[(12, 2, 6), bool] */;
  (%675, %676)
}

def @func_7338() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %677 = @func_6689() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %678 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %679 = %677.1;
  %680 = %678.0;
  %681 = @func_4315() /* ty=Tensor[(8, 6, 10), float64] */;
  %682 = @func_5426() /* ty=Tensor[(8, 6, 10), float64] */;
  (%679, %680, %681, %682)
}

def @func_4298(%var_4276: Tensor[(13), float64]) -> (Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float32]) {
  %683 = cast(%var_4276, dtype="float64") /* ty=Tensor[(13), float64] */;
  %684 = cast(meta[relay.Constant][46] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %685 = reshape(%683, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %686 = reshape(%684, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %687 = @func_1057(%685, %686) /* ty=(Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) */;
  %688 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %689 = %688.0;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(8, 6, 10), float32] */;
  %691 = %687.4;
  %692 = exp(%690) /* ty=Tensor[(8, 6, 10), float32] */;
  (%691, %var_4276, meta[relay.Constant][46] /* ty=Tensor[(78), float64] */, %692)
}

def @func_7430() -> (Tensor[(8, 6, 10), float64],) {
  %693 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %694 = %693.0;
  (%694,)
}

def @func_17650() -> (Tensor[(8, 6, 10), float64],) {
  %695 = @func_6662() /* ty=Tensor[(8, 6, 10), float64] */;
  (%695,)
}

def @func_7667(%var_7662: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) {
  %696 = @func_6689() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %697 = @func_6530() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */;
  %698 = cast(meta[relay.Constant][47] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %699 = cast(meta[relay.Constant][47] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %700 = cast(%var_7662, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %701 = reshape(%698, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %702 = reshape(%699, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %703 = reshape(%700, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %704 = @func_4004(%701, %702, %703) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */;
  %705 = %696.0;
  %706 = %697.1;
  %707 = %704.0;
  (%705, %706, %707, meta[relay.Constant][47] /* ty=Tensor[(1008), uint16] */, %var_7662)
}

def @func_11992(%var_11971: Tensor[(1008), uint16]) -> (Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(1, 567), float32]) {
  %708 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %709 = cast(%var_11971, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %710 = cast(%var_11971, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %711 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 567), uint32] */, dtype="uint32") /* ty=Tensor[(1, 567), uint32] */;
  %712 = reshape(%709, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %713 = reshape(%710, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %714 = reshape(%711, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %715 = @func_4004(%712, %713, %714) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */;
  %716 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 567), uint32] */, dtype="float32") /* ty=Tensor[(1, 567), float32] */;
  %717 = %708.0;
  %718 = %715.2;
  %719 = erf(%716) /* ty=Tensor[(1, 567), float32] */;
  (%717, %718, %var_11971, %719)
}

def @func_13072() -> (Tensor[(8, 6, 10), int64],) {
  %720 = @func_7751() /* ty=Tensor[(8, 6, 10), int64] */;
  (%720,)
}

def @func_4714() -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) {
  %721 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %722 = cast(meta[relay.Constant][49] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %723 = cast(meta[relay.Constant][49] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %724 = cast(meta[relay.Constant][49] /* ty=Tensor[(192), float32] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %725 = reshape(%722, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %726 = reshape(%723, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %727 = reshape(%724, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %728 = @func_1559(%725, %726, %727) /* ty=(Tensor[(12, 2, 8), int32],) */;
  %729 = %721.0;
  %730 = %728.0;
  (%729, %730, meta[relay.Constant][49] /* ty=Tensor[(192), float32] */)
}

def @func_16804() -> Tensor[(8, 6, 10), float64] {
  %731 = @func_16247() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %731.0
}

def @func_12095() -> Tensor[(8, 6, 10), float32] {
  %732 = @func_9896() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %732.0
}

def @func_5520() -> (Tensor[(8, 6, 10), float64],) {
  %733 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
  (%733,)
}

def @func_18214() -> Tensor[(8, 6, 10), float32] {
  %734 = @func_17171() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %734.0
}

def @func_16665() -> Tensor[(8, 6, 10), float64] {
  %735 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
  %735.4
}

def @func_4598() -> (Tensor[(8, 6, 10), float64],) {
  %736 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
  (%736,)
}

def @func_17317(%var_17305: Tensor[(11, 14, 11), float64]) -> (Tensor[(11, 14, 11), float64], Tensor[(8, 6, 10), float64]) {
  %737 = cast(%var_17305, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
  %738 = tan(%737) /* ty=Tensor[(11, 14, 11), float64] */;
  %739 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  (%738, %739)
}

def @func_6662() -> Tensor[(8, 6, 10), float64] {
  @func_5087() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_10979(%var_10940: Tensor[(5, 1, 16), float64], %var_10944: Tensor[(528), float64]) -> (Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(8, 6, 10), float64], Tensor[(5, ?, 16), float32]) {
  %740 = cast(%var_10944, dtype="float64") /* ty=Tensor[(528), float64] */;
  %741 = reshape(%740, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), float64] */;
  %742 = @func_2373(%741) /* ty=(Tensor[(12, 4, 11), float64],) */;
  %743 = @func_8152() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %744 = cast(%var_10940, dtype="float64") /* ty=Tensor[(5, 1, 16), float64] */;
  %745 = sigmoid(%744) /* ty=Tensor[(5, 1, 16), float64] */;
  %746 = cast(%745, dtype="float32") /* ty=Tensor[(5, 1, 16), float32] */;
  %747 = shape_of(%var_10940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%var_10940, dtype="float32") /* ty=Tensor[(5, 1, 16), float32] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %750 = %742.0;
  %751 = %743.0;
  %752 = floor_mod(%748, %749) /* ty=Tensor[(5, ?, 16), float32] */;
  (%750, %var_10944, %751, %752)
}

def @func_15359() -> Tensor[(8, 6, 10), float64] {
  %753 = @func_14851() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %753.0
}

def @func_14423() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %754 = @func_8152() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %755 = %754.1;
  %756 = @func_11866() /* ty=Tensor[(8, 6, 10), float64] */;
  (%755, %756)
}

def @func_4827() -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) {
  %757 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %758 = cast(meta[relay.Constant][50] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %759 = reshape(%758, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %760 = @func_305(%759) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %761 = %757.0;
  %762 = %760.0;
  (%761, %762, meta[relay.Constant][50] /* ty=Tensor[(405), float32] */)
}

def @func_12912(%var_12909: Tensor[(11, 15, 14), float32]) -> (Tensor[(11, 15, 14), float32],) {
  %763 = cast(%var_12909, dtype="float32") /* ty=Tensor[(11, 15, 14), float32] */;
  %764 = asinh(%763) /* ty=Tensor[(11, 15, 14), float32] */;
  (%764,)
}

def @func_6530() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) {
  %765 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %766 = %765.1;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(8, 6, 10), float32] */;
  %768 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %769 = cast(%766, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %770 = reshape(%769, newshape=[8, 6, 10]) /* ty=Tensor[(8, 6, 10), float64] */;
  %771 = @func_5708(%770) /* ty=(Tensor[(8, 6, 10), bool],) */;
  %772 = log10(%767) /* ty=Tensor[(8, 6, 10), float32] */;
  %773 = %768.1;
  %774 = %771.0;
  (%772, %773, %774)
}

def @func_7136() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) {
  %775 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %776 = @func_7045() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %777 = %775.0;
  %778 = %776.0;
  (%777, %778)
}

def @func_14823(%var_14794: Tensor[(9, 6), float64], %var_14795: Tensor[(432), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 9), float64], Tensor[(9, 6), float64], Tensor[(432), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %779 = cast(%var_14794, dtype="float64") /* ty=Tensor[(9, 6), float64] */;
  %780 = cast(%var_14795, dtype="float64") /* ty=Tensor[(432), float64] */;
  %781 = reshape(%779, newshape=[1, 6, 9]) /* ty=Tensor[(1, 6, 9), float64] */;
  %782 = reshape(%780, newshape=[8, 6, 9]) /* ty=Tensor[(8, 6, 9), float64] */;
  %783 = @func_8871(%781, %782) /* ty=(Tensor[(8, 6, 9), float64],) */;
  %784 = cast(meta[relay.Constant][51] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %785 = reshape(%784, newshape=[1008]) /* ty=Tensor[(1008), uint16] */;
  %786 = @func_11992(%785) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(1, 567), float32]) */;
  %787 = @func_9051() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %788 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
  %789 = %783.0;
  %790 = @func_6662() /* ty=Tensor[(8, 6, 10), float64] */;
  %791 = %786.1;
  %792 = %787.0;
  %793 = @func_6415() /* ty=Tensor[(8, 6, 10), float64] */;
  (%788, %789, %var_14794, %var_14795, %790, %791, meta[relay.Constant][51] /* ty=Tensor[(1008), uint16] */, %792, %793)
}

def @func_7958() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %794 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %795 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %796 = @func_6761() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %797 = %794.0;
  %798 = %795.0;
  %799 = %796.0;
  (%797, %798, %799)
}

def @func_5351(%var_5346: Tensor[(78), float64]) -> (Tensor[(8, 6, 10), bool], Tensor[(9, 5, 9), float32], Tensor[(240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(9, 5, 9), float64]) {
  %800 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
  %801 = cast(meta[relay.Constant][52] /* ty=Tensor[(8, 6, 10), float64] */, dtype="bool") /* ty=Tensor[(8, 6, 10), bool] */;
  %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%800, dtype="bool") /* ty=Tensor[(8, 6, 10), bool] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %805 = cast(meta[relay.Constant][53] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %806 = cast(meta[relay.Constant][53] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %807 = cast(meta[relay.Constant][54] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %808 = cast(%var_5346, dtype="float64") /* ty=Tensor[(78), float64] */;
  %809 = cast(meta[relay.Constant][53] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %810 = reshape(%805, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %811 = reshape(%806, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %812 = reshape(%807, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %813 = reshape(%808, newshape=[78, 1]) /* ty=Tensor[(78, 1), float64] */;
  %814 = reshape(%809, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %815 = @func_3693(%810, %811, %812, %813, %814) /* ty=(Tensor[(26, 3), float64], Tensor[(1, 13), float64], Tensor[(78, 1), float64], Tensor[(3, 5, 16), uint64], Tensor[(405), float32], Tensor[(9, 5, 9), float32], Tensor[(3, 5, 16), bool], Tensor[(13), float64]) */;
  %816 = %815.5;
  %817 = cast(%816, dtype="float32") /* ty=Tensor[(9, 5, 9), float32] */;
  %818 = reshape(%817, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %819 = @func_305(%818) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %820 = less_equal(%803, %804) /* ty=Tensor[(8, 6, 10), bool] */;
  %821 = %819.1;
  (%820, %816, meta[relay.Constant][53] /* ty=Tensor[(240), int16] */, meta[relay.Constant][54] /* ty=Tensor[(13), float64] */, %var_5346, %821)
}

def @func_12708() -> Tensor[(12, 2, 8), int32] {
  @func_6677() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_7002() -> (Tensor[(78), float64],) {
  %822 = @func_5587() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), uint32]) */;
  %823 = %822.5;
  (%823,)
}

def @func_11230() -> (Tensor[(8, 6, 10), float64],) {
  %824 = @func_5087() /* ty=Tensor[(8, 6, 10), float64] */;
  (%824,)
}

def @func_4411() -> Tensor[(8, 6, 10), float64] {
  @func_3944() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_13391() -> Tensor[(8, 6, 10), float64] {
  @func_9783() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_5439() -> (Tensor[(8, 6, 10), float64],) {
  %825 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %826 = %825.0;
  (%826,)
}

def @func_12632() -> (Tensor[(8, 6, 10), float64],) {
  %827 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
  (%827,)
}

def @func_14200(%var_14189: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(11, 15, 14), float32], Tensor[(770, 3), float32], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) {
  %828 = @func_9455() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %829 = cast(meta[relay.Constant][55] /* ty=Tensor[(770, 3), float32] */, dtype="float32") /* ty=Tensor[(770, 3), float32] */;
  %830 = reshape(%829, newshape=[11, 15, 14]) /* ty=Tensor[(11, 15, 14), float32] */;
  %831 = @func_12912(%830) /* ty=(Tensor[(11, 15, 14), float32],) */;
  %832 = cast(%var_14189, dtype="float32") /* ty=Tensor[(405), float32] */;
  %833 = reshape(%832, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %834 = @func_6012(%833) /* ty=(Tensor[(9, 5, 9), int16],) */;
  %835 = %828.0;
  %836 = @func_5426() /* ty=Tensor[(8, 6, 10), float64] */;
  %837 = %831.0;
  %838 = @func_11154() /* ty=Tensor[(8, 6, 10), float64] */;
  %839 = %834.0;
  %840 = @func_13391() /* ty=Tensor[(8, 6, 10), float64] */;
  (%835, %836, %837, meta[relay.Constant][55] /* ty=Tensor[(770, 3), float32] */, %838, %839, %var_14189, %840)
}

def @func_17224() -> (Tensor[(8, 6, 10), int64], Tensor[(2, 4, 7), float64]) {
  %841 = @func_14352() /* ty=(Tensor[(405), float32], Tensor[(2, 4, 7), float64]) */;
  %842 = @func_7751() /* ty=Tensor[(8, 6, 10), int64] */;
  %843 = %841.1;
  (%842, %843)
}

def @func_17442(%var_17439: Tensor[(1694), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(1694), float64]) {
  %844 = @func_15991() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %845 = @func_11281() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %846 = @func_9321() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */;
  %847 = cast(%var_17439, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %848 = reshape(%847, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %849 = @func_17317(%848) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 6, 10), float64]) */;
  %850 = %844.2;
  %851 = %845.1;
  %852 = %846.1;
  %853 = %849.1;
  (%850, %851, %852, %853, %var_17439)
}

def @func_14913() -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) {
  %854 = @func_13780() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %855 = @func_10023() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32]) */;
  %856 = @func_4827() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) */;
  %857 = %854.0;
  %858 = %855.1;
  %859 = %856.0;
  (%857, %858, %859)
}

def @func_14005(%var_13981: Tensor[(15, 4), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(15, 4), float64], Tensor[(8, 6, 10), float64]) {
  %860 = cast(%var_13981, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %861 = reshape(%860, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), float64] */;
  %862 = @func_6041(%861) /* ty=(Tensor[(2, 2, 15), bool], Tensor[(8, 6, 10), float64]) */;
  %863 = @func_5587() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), uint32]) */;
  %864 = @func_6554() /* ty=Tensor[(8, 6, 10), float64] */;
  %865 = %862.1;
  %866 = %863.6;
  (%864, %865, %var_13981, %866)
}

def @func_15492() -> (Tensor[(8, 6, 10), int16], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) {
  %867 = @func_7881() /* ty=(Tensor[(8, 6, 10), int16], Tensor[(8, 6, 10), float64]) */;
  %868 = @func_11677() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32]) */;
  %869 = %867.0;
  %870 = %868.3;
  %871 = @func_11866() /* ty=Tensor[(8, 6, 10), float64] */;
  (%869, %870, %871)
}

def @func_8981() -> Tensor[(8, 6, 10), float64] {
  @func_5029() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_19525() -> (Tensor[(8, 6, 10), float64], Tensor[(78), float32]) {
  %872 = @func_18925() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64]) */;
  %873 = %872.0;
  %874 = cast(meta[relay.Constant][56] /* ty=Tensor[(78), float64] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %875 = shape_of(%873, dtype="int32") /* ty=Tensor[(1), int32] */;
  %876 = cast(%873, dtype="float32") /* ty=Tensor[(78), float32] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?), float32] */;
  %878 = @func_14532() /* ty=Tensor[(8, 6, 10), float64] */;
  %879 = multiply(%876, %877) /* ty=Tensor[(78), float32] */;
  (%878, %879)
}

def @func_12078(%var_12070: Tensor[(13, 10, 14), int64], %var_12071: Tensor[(13, 10, 14), int64]) -> (Tensor[(13, 10, 14), int64],) {
  %880 = cast(%var_12071, dtype="int64") /* ty=Tensor[(13, 10, 14), int64] */;
  %881 = shape_of(%var_12070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %882 = cast(%var_12070, dtype="int64") /* ty=Tensor[(13, 10, 14), int64] */;
  %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %884 = bitwise_and(%882, %883) /* ty=Tensor[(13, 10, 14), int64] */;
  (%884,)
}

def @func_8748(%var_8685: Tensor[(216, 2), int32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(6, 6, 12), bool], Tensor[(216, 2), int32], Tensor[(12, 2, 8), int32], Tensor[(13), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(8, 6, 10), float64]) {
  %885 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %886 = %885.0;
  %887 = cast(%886, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %888 = acosh(%887) /* ty=Tensor[(8, 6, 10), float64] */;
  %889 = cast(%888, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %890 = cast(%var_8685, dtype="int32") /* ty=Tensor[(216, 2), int32] */;
  %891 = reshape(%890, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int32] */;
  %892 = @func_6471() /* ty=(Tensor[(192), float32], Tensor[(8, 6, 10), float32], Tensor[(13), float64]) */;
  %893 = @func_4827() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) */;
  %894 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %895 = atan(%889) /* ty=Tensor[(8, 6, 10), float64] */;
  %896 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
  %897 = @func_5879(%891) /* ty=Tensor[(6, 6, 12), bool] */;
  %898 = @func_6677() /* ty=Tensor[(12, 2, 8), int32] */;
  %899 = %892.2;
  %900 = @func_8583() /* ty=Tensor[(8, 6, 10), float64] */;
  %901 = %893.1;
  %902 = %894.0;
  (%895, %896, %897, %var_8685, %898, %899, %900, %901, %902)
}

def @func_12324() -> (Tensor[(8, 6, 10), float64], Tensor[(2, 4, 7), float64]) {
  %903 = @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */;
  %904 = @func_9714() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %905 = %903.0;
  %906 = %904.0;
  (%905, %906)
}

def @func_17468() -> Tensor[(8, 6, 10), float64] {
  %907 = @func_9006() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %907.0
}

def @func_10550() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %908 = @func_9986() /* ty=(Tensor[(78), float64],) */;
  %909 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %910 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %911 = @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */;
  %912 = @func_7958() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %913 = %908.0;
  %914 = %909.0;
  %915 = %910.0;
  %916 = %911.0;
  %917 = %912.2;
  (%913, %914, %915, %916, %917)
}

def @func_8871(%var_8863: Tensor[(1, 6, 9), float64], %var_8864: Tensor[(8, 6, 9), float64]) -> (Tensor[(8, 6, 9), float64],) {
  %918 = cast(%var_8863, dtype="float64") /* ty=Tensor[(1, 6, 9), float64] */;
  %919 = cast(%var_8864, dtype="float64") /* ty=Tensor[(8, 6, 9), float64] */;
  %920 = mod(%918, %919) /* ty=Tensor[(8, 6, 9), float64] */;
  (%920,)
}

def @func_10153(%var_10105: Tensor[(405), float32], %var_10123: Tensor[(234), float64]) -> (Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(240), int16], Tensor[(1, 13), float64], Tensor[(405), float32], Tensor[(8, 6, 10), float64], Tensor[(234), float64]) {
  %921 = @func_8085() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */;
  %922 = cast(meta[relay.Constant][57] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %923 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %924 = cast(meta[relay.Constant][59] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %925 = cast(%var_10105, dtype="float32") /* ty=Tensor[(405), float32] */;
  %926 = reshape(%922, newshape=[8, 30]) /* ty=Tensor[(8, 30), int16] */;
  %927 = reshape(%923, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %928 = reshape(%924, newshape=[78, 3]) /* ty=Tensor[(78, 3), float64] */;
  %929 = reshape(%925, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %930 = @func_8262(%926, %927, %928, %929) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 30), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(1008), uint16], Tensor[(3, 189), uint32], Tensor[(9, 5, 9), float64], Tensor[(1, 405), float32]) */;
  %931 = @func_6212() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %932 = cast(%var_10123, dtype="uint8") /* ty=Tensor[(234), uint8] */;
  %933 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(234), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %934 = cast(meta[relay.Constant][59] /* ty=Tensor[(234), float64] */, dtype="uint8") /* ty=Tensor[(234), uint8] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %936 = multiply(%934, %935) /* ty=Tensor[(234), uint8] */;
  %937 = cast(%936, dtype="float64") /* ty=Tensor[(234), float64] */;
  %938 = %921.1;
  %939 = %930.5;
  %940 = %931.0;
  %941 = exp(%937) /* ty=Tensor[(234), float64] */;
  (%938, %939, meta[relay.Constant][57] /* ty=Tensor[(240), int16] */, meta[relay.Constant][58] /* ty=Tensor[(1, 13), float64] */, %var_10105, %940, %941)
}

def @func_18680(%var_18673: Tensor[(1, 11, 15), float64]) -> (Tensor[(1, 11, 15), float64], Tensor[(8, 6, 10), float64]) {
  %942 = cast(%var_18673, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %943 = @func_7968() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %944 = asinh(%942) /* ty=Tensor[(1, 11, 15), float64] */;
  %945 = %943.0;
  (%944, %945)
}

def @func_14471() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %946 = @func_6761() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %947 = @func_8564() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %948 = %946.0;
  %949 = %947.1;
  (%948, %949)
}

def @func_18272() -> (Tensor[(8, 6, 10), int64],) {
  %950 = @func_17224() /* ty=(Tensor[(8, 6, 10), int64], Tensor[(2, 4, 7), float64]) */;
  %951 = %950.0;
  (%951,)
}

def @func_19263() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %952 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %953 = @func_10635() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %954 = @func_14288() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %955 = @func_7968() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %956 = %952.0;
  %957 = %953.0;
  %958 = %954.0;
  %959 = %955.0;
  (%956, %957, %958, %959)
}

def @func_18331() -> (Tensor[(8, 6, 10), float64],) {
  %960 = @func_6212() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %961 = %960.0;
  (%961,)
}

def @func_17755() -> Tensor[(8, 6, 10), float64] {
  %962 = @func_12632() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %962.0
}

def @func_4090(%var_4034: Tensor[(8, 6, 10), float64], %var_4058: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) {
  %963 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  %964 = cast(%var_4034, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %965 = shape_of(%963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(%963, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %968 = cast(%var_4058, dtype="float32") /* ty=Tensor[(405), float32] */;
  %969 = reshape(%968, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %970 = @func_305(%969) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %971 = cast(meta[relay.Constant][60] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %972 = cast(meta[relay.Constant][60] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %973 = cast(meta[relay.Constant][60] /* ty=Tensor[(192), float32] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %974 = reshape(%971, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %975 = reshape(%972, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %976 = reshape(%973, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %977 = @func_1559(%974, %975, %976) /* ty=(Tensor[(12, 2, 8), int32],) */;
  %978 = subtract(%966, %967) /* ty=Tensor[(8, 6, 10), float64] */;
  %979 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  %980 = %970.0;
  %981 = %977.0;
  (%978, %979, %980, %var_4058, %981, meta[relay.Constant][60] /* ty=Tensor[(192), float32] */)
}

def @func_16321() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %982 = @func_7968() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %983 = @func_13780() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %984 = @func_16072() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %985 = %982.0;
  %986 = %983.0;
  %987 = @func_13553() /* ty=Tensor[(8, 6, 10), float64] */;
  %988 = %984.1;
  (%985, %986, %987, %988)
}

def @func_7045() -> (Tensor[(8, 6, 10), float32],) {
  %989 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %990 = %989.0;
  %991 = cast(%990, dtype="float32") /* ty=Tensor[(8, 6, 10), float32] */;
  %992 = atanh(%991) /* ty=Tensor[(8, 6, 10), float32] */;
  (%992,)
}

def @func_14532() -> Tensor[(8, 6, 10), float64] {
  %993 = @func_9051() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %993.0
}

def @func_11926() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %994 = @func_11135() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %995 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
  %996 = %994.1;
  %997 = %995.0;
  (%996, %997)
}

def @func_10635() -> (Tensor[(8, 6, 10), float64],) {
  %998 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %999 = %998.0;
  (%999,)
}

def @func_11154() -> Tensor[(8, 6, 10), float64] {
  @func_9783() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_16224() -> Tensor[(8, 6, 10), float64] {
  %1000 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1000.0
}

def @func_4937() -> Tensor[(8, 6, 10), float64] {
  %1001 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1001.0
}

def @func_11135() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1002 = @func_10176() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1003 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
  %1004 = %1002.1;
  (%1003, %1004)
}

def @func_9321() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  %1005 = @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %1006 = %1005.1;
  %1007 = @func_4315() /* ty=Tensor[(8, 6, 10), float64] */;
  (%1006, %1007)
}

def @func_5993() -> Tensor[(192), float32] {
  %1008 = @func_4714() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */;
  %1008.2
}

def @func_10023() -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32]) {
  %1009 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
  %1010 = @func_6677() /* ty=Tensor[(12, 2, 8), int32] */;
  (%1009, %1010)
}

def @func_4315() -> Tensor[(8, 6, 10), float64] {
  @func_3939() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_14074(%var_14049: Tensor[(9, 45), float32], %var_14050: Tensor[(13), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(13), float64], Tensor[(13, 55), int8], Tensor[(9, 45), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) {
  %1011 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 55), int8] */, dtype="int8") /* ty=Tensor[(13, 55), int8] */;
  %1012 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 55), int8] */, dtype="int8") /* ty=Tensor[(13, 55), int8] */;
  %1013 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 55), int8] */, dtype="int8") /* ty=Tensor[(13, 55), int8] */;
  %1014 = cast(%var_14049, dtype="float32") /* ty=Tensor[(9, 45), float32] */;
  %1015 = cast(%var_14050, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1016 = reshape(%1011, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %1017 = reshape(%1012, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %1018 = reshape(%1013, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %1019 = reshape(%1014, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %1020 = reshape(%1015, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %1021 = @func_11570(%1016, %1017, %1018, %1019, %1020) /* ty=(Tensor[(9, 9, 7), uint32], Tensor[(63, 9), uint32], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(405), float32], Tensor[(1, 240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(5, 13, 11), bool]) */;
  %1022 = @func_11770() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1023 = @func_6415() /* ty=Tensor[(8, 6, 10), float64] */;
  %1024 = %1021.6;
  %1025 = %1022.0;
  (%1023, %1024, meta[relay.Constant][61] /* ty=Tensor[(13, 55), int8] */, %var_14049, %var_14050, %1025)
}

def @func_17136() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1026 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1027 = %1026.0;
  %1028 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
  (%1027, %1028)
}

def @func_11281() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1029 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %1030 = @func_11230() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1031 = %1029.1;
  %1032 = %1030.0;
  (%1031, %1032)
}

def @func_16940(%var_16925: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(405), float32]) {
  %1033 = @func_6530() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */;
  %1034 = cast(%var_16925, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1035 = reshape(%1034, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %1036 = @func_15258(%1035) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %1037 = %1033.1;
  %1038 = %1036.3;
  (%1037, %1038, %var_16925)
}

def @func_1145(%var_1139: Tensor[(9, 9, 7), uint32]) -> Tensor[(9, 9, 7), uint32] {
  %1039 = cast(meta[relay.Constant][62] /* ty=Tensor[(9, 9, 7), uint32] */, dtype="uint32") /* ty=Tensor[(9, 9, 7), uint32] */;
  %1040 = shape_of(%var_1139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1041 = cast(%var_1139, dtype="uint32") /* ty=Tensor[(9, 9, 7), uint32] */;
  %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%1041, %1042) /* ty=Tensor[(9, 9, 7), uint32] */
}

def @func_5708(%var_5690: Tensor[(8, 6, 10), float64]) -> (Tensor[(8, 6, 10), bool],) {
  %1043 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1044 = %1043.0;
  %1045 = cast(%var_5690, dtype="bool") /* ty=Tensor[(8, 6, 10), bool] */;
  %1046 = shape_of(%1044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1047 = cast(%1044, dtype="bool") /* ty=Tensor[(8, 6, 10), bool] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1049 = equal(%1047, %1048) /* ty=Tensor[(8, 6, 10), bool] */;
  (%1049,)
}

def @func_15294() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  %1050 = @func_14376() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %1051 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1052 = %1050.0;
  %1053 = %1051.0;
  (%1052, %1053)
}

def @func_4004(%var_3962: Tensor[(7, 9, 16), uint16], %var_3963: Tensor[(7, 9, 16), uint16], %var_3977: Tensor[(567), uint32]) -> (Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) {
  %1054 = cast(%var_3963, dtype="bool") /* ty=Tensor[(7, 9, 16), bool] */;
  %1055 = shape_of(%var_3962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1056 = cast(%var_3962, dtype="bool") /* ty=Tensor[(7, 9, 16), bool] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1058 = cast(%var_3977, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %1059 = reshape(%1058, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint32] */;
  %1060 = @func_1145(%1059) /* ty=Tensor[(9, 9, 7), uint32] */;
  %1061 = cast(%1060, dtype="float64") /* ty=Tensor[(9, 9, 7), float64] */;
  %1062 = greater(%1056, %1057) /* ty=Tensor[(7, 9, 16), bool] */;
  %1063 = asin(%1061) /* ty=Tensor[(9, 9, 7), float64] */;
  (%1062, %var_3977, %1063)
}

def @func_19581(%var_19531: Tensor[(8, 5, 7), int8], %var_19532: Tensor[(8, 5, 7), int8]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 5, 7), float32], Tensor[(8, 5, 7), float32]) {
  %1064 = @func_14423() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1065 = cast(%var_19532, dtype="int8") /* ty=Tensor[(8, 5, 7), int8] */;
  %1066 = shape_of(%var_19531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1067 = cast(%var_19531, dtype="int8") /* ty=Tensor[(8, 5, 7), int8] */;
  %1068 = dyn.reshape(%1065, %1066, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1069 = right_shift(%1067, %1068) /* ty=Tensor[(8, 5, 7), int8] */;
  %1070 = cast(%1069, dtype="float32") /* ty=Tensor[(8, 5, 7), float32] */;
  %1071 = shape_of(%var_19532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1072 = cast(%var_19532, dtype="float32") /* ty=Tensor[(8, 5, 7), float32] */;
  %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1074 = cast(%var_19531, dtype="float64") /* ty=Tensor[(8, 5, 7), float64] */;
  %1075 = log2(%1074) /* ty=Tensor[(8, 5, 7), float64] */;
  %1076 = cast(%1075, dtype="float32") /* ty=Tensor[(8, 5, 7), float32] */;
  %1077 = %1064.1;
  %1078 = floor_mod(%1072, %1073) /* ty=Tensor[(8, 5, 7), float32] */;
  %1079 = atanh(%1076) /* ty=Tensor[(8, 5, 7), float32] */;
  (%1077, %1078, %1079)
}

def @func_15738() -> (Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64]) {
  %1080 = @func_9385() /* ty=(Tensor[(8, 2, 3), float64], Tensor[(13), float64]) */;
  %1081 = @func_9508() /* ty=(Tensor[(78), float64],) */;
  %1082 = %1080.1;
  %1083 = %1081.0;
  %1084 = @func_14917() /* ty=Tensor[(8, 6, 10), float64] */;
  (%1082, %1083, %1084)
}

def @func_17038() -> (Tensor[(8, 6, 10), float64],) {
  %1085 = @func_6761() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1086 = %1085.0;
  (%1086,)
}

def @func_16383() -> (Tensor[(8, 6, 10), float64],) {
  %1087 = @func_13553() /* ty=Tensor[(8, 6, 10), float64] */;
  (%1087,)
}

def @main(%var_19710: Tensor[(4, 5, 13), float64]) -> Tensor[(4, 5, 13), float64] {
  %1088 = cast(%var_19710, dtype="float64") /* ty=Tensor[(4, 5, 13), float64] */;
  log2(%1088) /* ty=Tensor[(4, 5, 13), float64] */
}

def @func_5029() -> Tensor[(8, 6, 10), float64] {
  @func_4411() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_19377(%var_19349: Tensor[(11, 15, 12), float64]) -> (Tensor[(11, 15, 12), float64], Tensor[(8, 6, 10), float64]) {
  %1089 = cast(%var_19349, dtype="float64") /* ty=Tensor[(11, 15, 12), float64] */;
  %1090 = @func_19020() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1091 = log10(%1089) /* ty=Tensor[(11, 15, 12), float64] */;
  %1092 = %1090.0;
  (%1091, %1092)
}

def @func_18389() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  %1093 = @func_7593() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %1094 = @func_13151() /* ty=(Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1095 = %1093.1;
  %1096 = %1094.1;
  (%1095, %1096)
}

def @func_5087() -> Tensor[(8, 6, 10), float64] {
  @func_4937() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_9896() -> (Tensor[(8, 6, 10), float32],) {
  %1097 = @func_7593() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %1098 = %1097.1;
  (%1098,)
}

def @func_18123() -> (Tensor[(8, 6, 10), int64],) {
  %1099 = @func_7751() /* ty=Tensor[(8, 6, 10), int64] */;
  (%1099,)
}

def @func_14352() -> (Tensor[(405), float32], Tensor[(2, 4, 7), float64]) {
  %1100 = @func_13332() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float32], Tensor[(405), float32]) */;
  %1101 = @func_12324() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(2, 4, 7), float64]) */;
  %1102 = %1100.2;
  %1103 = %1101.1;
  (%1102, %1103)
}

def @func_11291() -> Tensor[(8, 6, 10), float64] {
  @func_6415() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_3693(%var_3628: Tensor[(3, 5, 16), int16], %var_3629: Tensor[(3, 5, 16), int16], %var_3639: Tensor[(1, 13), float64], %var_3640: Tensor[(78, 1), float64], %var_3646: Tensor[(3, 5, 16), int16]) -> (Tensor[(26, 3), float64], Tensor[(1, 13), float64], Tensor[(78, 1), float64], Tensor[(3, 5, 16), uint64], Tensor[(405), float32], Tensor[(9, 5, 9), float32], Tensor[(3, 5, 16), bool], Tensor[(13), float64]) {
  %1104 = cast(%var_3639, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %1105 = cast(%var_3640, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
  %1106 = reshape(%1104, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %1107 = reshape(%1105, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %1108 = @func_1057(%1106, %1107) /* ty=(Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) */;
  %1109 = cast(%var_3646, dtype="uint64") /* ty=Tensor[(3, 5, 16), uint64] */;
  %1110 = shape_of(%var_3629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1111 = cast(%var_3629, dtype="uint64") /* ty=Tensor[(3, 5, 16), uint64] */;
  %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1113 = cast(%var_3639, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %1114 = %1108.4;
  %1115 = cast(%1114, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
  %1116 = reshape(%1113, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
  %1117 = reshape(%1115, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %1118 = @func_630(%1116, %1117) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */;
  %1119 = cast(%var_3640, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
  %1120 = reshape(%1119, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %1121 = @func_1638(%1120) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
  %1122 = cast(%var_3629, dtype="int16") /* ty=Tensor[(3, 5, 16), int16] */;
  %1123 = shape_of(%var_3628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%var_3628, dtype="int16") /* ty=Tensor[(3, 5, 16), int16] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1126 = maximum(%1124, %1125) /* ty=Tensor[(3, 5, 16), int16] */;
  %1127 = cast(%1126, dtype="bool") /* ty=Tensor[(3, 5, 16), bool] */;
  %1128 = shape_of(%var_3646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1129 = cast(%var_3646, dtype="bool") /* ty=Tensor[(3, 5, 16), bool] */;
  %1130 = dyn.reshape(%1127, %1128, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1131 = cast(%var_3639, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %1132 = cast(%var_3640, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
  %1133 = reshape(%1131, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %1134 = reshape(%1132, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %1135 = @func_1057(%1133, %1134) /* ty=(Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) */;
  %1136 = bitwise_or(%1111, %1112) /* ty=Tensor[(3, 5, 16), uint64] */;
  %1137 = %1118.2;
  %1138 = %1121.4;
  %1139 = greater_equal(%1129, %1130) /* ty=Tensor[(3, 5, 16), bool] */;
  %1140 = %1135.3;
  (%1114, %var_3639, %var_3640, %1136, %1137, %1138, %1139, %1140)
}

def @func_12819() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(2, 4, 7), float64]) {
  %1141 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
  %1142 = @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %1143 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  %1144 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
  %1145 = %1141.0;
  %1146 = %1142.0;
  (%1143, %1144, %1145, %1146)
}

def @func_11226() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) {
  %1147 = @func_9051() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1148 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
  %1149 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
  %1150 = %1147.0;
  %1151 = %1148.0;
  %1152 = @func_6415() /* ty=Tensor[(8, 6, 10), float64] */;
  %1153 = %1149.3;
  (%1150, %1151, %1152, %1153)
}

def @func_7356() -> (Tensor[(8, 6, 10), float64],) {
  %1154 = @func_6436() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1155 = %1154.0;
  (%1155,)
}

def @func_7751() -> Tensor[(8, 6, 10), int64] {
  %1156 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1157 = %1156.0;
  %1158 = cast(meta[relay.Constant][63] /* ty=Tensor[(8, 6, 10), float64] */, dtype="int64") /* ty=Tensor[(8, 6, 10), int64] */;
  %1159 = shape_of(%1157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1160 = cast(%1157, dtype="int64") /* ty=Tensor[(8, 6, 10), int64] */;
  %1161 = dyn.reshape(%1158, %1159, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%1160, %1161) /* ty=Tensor[(8, 6, 10), int64] */
}

def @func_5127() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1162 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1163 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
  %1164 = %1162.0;
  (%1163, %1164)
}

def @func_4326() -> (Tensor[(8, 6, 10), float64],) {
  %1165 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
  (%1165,)
}

def @func_12211(%var_12207: Tensor[(8, 11, 15), float32]) -> (Tensor[(8, 11, 15), float32],) {
  %1166 = cast(meta[relay.Constant][64] /* ty=Tensor[(8, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 15), float32] */;
  %1167 = cast(%var_12207, dtype="float32") /* ty=Tensor[(8, 11, 15), float32] */;
  %1168 = floor_mod(%1166, %1167) /* ty=Tensor[(8, 11, 15), float32] */;
  (%1168,)
}

def @func_15036(%var_15017: Tensor[(11, 1, 13), float64]) -> (Tensor[(11, 1, 13), float64], Tensor[(8, 6, 10), float64]) {
  %1169 = cast(%var_15017, dtype="float64") /* ty=Tensor[(11, 1, 13), float64] */;
  %1170 = sqrt(%1169) /* ty=Tensor[(11, 1, 13), float64] */;
  %1171 = @func_6415() /* ty=Tensor[(8, 6, 10), float64] */;
  (%1170, %1171)
}

def @func_18296(%var_18284: Tensor[(2, 4, 2), float32], %var_18285: Tensor[(2, 4, 2), float32]) -> (Tensor[(2, 4, 2), bool], Tensor[(8, 6, 10), float32]) {
  %1172 = cast(%var_18285, dtype="bool") /* ty=Tensor[(2, 4, 2), bool] */;
  %1173 = shape_of(%var_18284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1174 = cast(%var_18284, dtype="bool") /* ty=Tensor[(2, 4, 2), bool] */;
  %1175 = dyn.reshape(%1172, %1173, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1176 = not_equal(%1174, %1175) /* ty=Tensor[(2, 4, 2), bool] */;
  %1177 = @func_16420() /* ty=Tensor[(8, 6, 10), float32] */;
  (%1176, %1177)
}

def @func_6792() -> Tensor[(8, 6, 10), float64] {
  @func_6415() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_7593() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) {
  %1178 = @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1179 = @func_6471() /* ty=(Tensor[(192), float32], Tensor[(8, 6, 10), float32], Tensor[(13), float64]) */;
  %1180 = %1178.0;
  %1181 = %1179.1;
  (%1180, %1181)
}

def @func_15443() -> (Tensor[(2, 4, 7), float64],) {
  %1182 = @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %1183 = %1182.0;
  (%1183,)
}

def @func_11409() -> (Tensor[(8, 6, 10), float32],) {
  %1184 = @func_6530() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */;
  %1185 = %1184.0;
  (%1185,)
}

def @func_6689() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1186 = @func_6436() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1187 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1188 = %1186.0;
  %1189 = %1187.0;
  (%1188, %1189)
}

def @func_17171() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) {
  %1190 = @func_9896() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %1191 = @func_11409() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %1192 = %1190.0;
  %1193 = @func_15359() /* ty=Tensor[(8, 6, 10), float64] */;
  %1194 = %1191.0;
  (%1192, %1193, %1194)
}

def @func_5835(%var_5825: Tensor[(405), float32]) -> (Tensor[(192), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) {
  %1195 = @func_4714() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */;
  %1196 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %1197 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1198 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1199 = cast(%var_5825, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1200 = reshape(%1199, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %1201 = @func_305(%1200) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %1202 = @func_5520() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1203 = %1195.2;
  %1204 = %1196.0;
  %1205 = %1197.0;
  %1206 = %1198.0;
  %1207 = %1201.0;
  %1208 = %1202.0;
  (%1203, %1204, %1205, %1206, %1207, %var_5825, %1208)
}

def @func_6727(%var_6692: Tensor[(14, 3, 3), uint16], %var_6693: Tensor[(14, 3, 3), uint16], %var_6717: uint64) -> (Tensor[(14, 3, 3), uint16], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 6), bool], uint64, Tensor[(6, 12), uint64]) {
  %1209 = cast(%var_6693, dtype="uint16") /* ty=Tensor[(14, 3, 3), uint16] */;
  %1210 = shape_of(%var_6692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1211 = cast(%var_6692, dtype="uint16") /* ty=Tensor[(14, 3, 3), uint16] */;
  %1212 = dyn.reshape(%1209, %1210, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1213 = @func_5378() /* ty=(Tensor[(12, 2, 8), int32],) */;
  %1214 = cast(%var_6717, dtype="uint64") /* ty=uint64 */;
  %1215 = cast(meta[relay.Constant][65] /* ty=Tensor[(6, 12), uint64] */, dtype="uint64") /* ty=Tensor[(6, 12), uint64] */;
  %1216 = reshape(%1214, newshape=[]) /* ty=uint64 */;
  %1217 = reshape(%1215, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), uint64] */;
  %1218 = @func_2598(%1216, %1217) /* ty=(Tensor[(12, 2, 6), bool], Tensor[(12, 2, 6), bool]) */;
  %1219 = logical_xor(%1211, %1212) /* ty=Tensor[(14, 3, 3), uint16] */;
  %1220 = %1213.0;
  %1221 = @func_4315() /* ty=Tensor[(8, 6, 10), float64] */;
  %1222 = %1218.0;
  (%1219, %1220, %1221, %1222, %var_6717, meta[relay.Constant][65] /* ty=Tensor[(6, 12), uint64] */)
}

def @func_9950() -> (Tensor[(528), float64], Tensor[(8, 6, 10), float64]) {
  %1223 = @func_9321() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */;
  %1224 = @func_6391() /* ty=Tensor[(528), float64] */;
  %1225 = %1223.1;
  (%1224, %1225)
}

def @func_14754() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1226 = @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1227 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1228 = %1226.0;
  %1229 = %1227.0;
  (%1228, %1229)
}

def @func_11770() -> (Tensor[(8, 6, 10), float64],) {
  %1230 = @func_7593() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %1231 = %1230.0;
  (%1231,)
}

def @func_11736(%var_11712: Tensor[(432), int32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(6, 6, 12), bool]) {
  %1232 = @func_11397() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %1233 = cast(%var_11712, dtype="int32") /* ty=Tensor[(432), int32] */;
  %1234 = reshape(%1233, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int32] */;
  %1235 = @func_5879(%1234) /* ty=Tensor[(6, 6, 12), bool] */;
  %1236 = cast(%1235, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
  %1237 = log2(%1236) /* ty=Tensor[(6, 6, 12), float32] */;
  %1238 = cast(%var_11712, dtype="bool") /* ty=Tensor[(432), bool] */;
  %1239 = shape_of(%1237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1240 = cast(%1237, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
  %1241 = dyn.reshape(%1238, %1239, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1242 = %1232.0;
  %1243 = @func_6792() /* ty=Tensor[(8, 6, 10), float64] */;
  %1244 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
  %1245 = logical_or(%1240, %1241) /* ty=Tensor[(6, 6, 12), bool] */;
  (%1242, %1243, %1244, %1245)
}

def @func_11820(%var_11808: Tensor[(78), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(78), float64]) {
  %1246 = cast(%var_11808, dtype="float64") /* ty=Tensor[(78), float64] */;
  %1247 = reshape(%1246, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %1248 = @func_1638(%1247) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
  %1249 = @func_6554() /* ty=Tensor[(8, 6, 10), float64] */;
  %1250 = %1248.4;
  (%1249, %1250, %var_11808)
}

def @func_9678() -> (Tensor[(2, 4, 7), float64],) {
  %1251 = cast(meta[relay.Constant][66] /* ty=Tensor[(2, 4, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %1252 = acos(%1251) /* ty=Tensor[(2, 4, 7), float64] */;
  (%1252,)
}

def @func_4229() -> (Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) {
  %1253 = cast(meta[relay.Constant][69] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1254 = reshape(%1253, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), float64] */;
  %1255 = @func_2373(%1254) /* ty=(Tensor[(12, 4, 11), float64],) */;
  %1256 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %1257 = cast(meta[relay.Constant][68] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %1258 = reshape(%1256, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
  %1259 = reshape(%1257, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %1260 = @func_630(%1258, %1259) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */;
  %1261 = %1260.0;
  %1262 = cast(%1261, dtype="float32") /* ty=Tensor[(3, 2, 13), float32] */;
  %1263 = tan(%1262) /* ty=Tensor[(3, 2, 13), float32] */;
  %1264 = cast(%1263, dtype="float64") /* ty=Tensor[(3, 2, 13), float64] */;
  %1265 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
  %1266 = %1255.0;
  %1267 = rsqrt(%1264) /* ty=Tensor[(3, 2, 13), float64] */;
  (%1265, meta[relay.Constant][67] /* ty=Tensor[(1, 13), float64] */, meta[relay.Constant][68] /* ty=Tensor[(78), float64] */, %1266, meta[relay.Constant][69] /* ty=Tensor[(528), float64] */, %1267)
}

def @func_9714() -> (Tensor[(2, 4, 7), float64],) {
  %1268 = @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %1269 = %1268.0;
  (%1269,)
}

def @func_12191() -> Tensor[(1, 13), float64] {
  %1270 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
  %1270.1
}

def @func_8085() -> (Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) {
  %1271 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1272 = cast(meta[relay.Constant][71] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1273 = reshape(%1272, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %1274 = @func_4298(%1273) /* ty=(Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float32]) */;
  %1275 = cast(meta[relay.Constant][70] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %1276 = reshape(%1275, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %1277 = @func_1638(%1276) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
  %1278 = %1277.1;
  %1279 = cast(%1278, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
  %1280 = cast(meta[relay.Constant][71] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1281 = reshape(%1280, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %1282 = @func_4298(%1281) /* ty=(Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float32]) */;
  %1283 = %1271.0;
  %1284 = %1274.0;
  %1285 = cos(%1279) /* ty=Tensor[(26, 3), float64] */;
  %1286 = %1282.1;
  (%1283, meta[relay.Constant][70] /* ty=Tensor[(78), float64] */, %1284, meta[relay.Constant][71] /* ty=Tensor[(13), float64] */, %1285, %1286)
}

def @func_9783() -> Tensor[(8, 6, 10), float64] {
  %1287 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1287.0
}

def @func_5587() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), uint32]) {
  %1288 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1289 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1290 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1291 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %1292 = cast(meta[relay.Constant][73] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %1293 = reshape(%1291, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
  %1294 = reshape(%1292, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %1295 = @func_630(%1293, %1294) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */;
  %1296 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1297 = cast(meta[relay.Constant][73] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %1298 = reshape(%1297, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %1299 = @func_1638(%1298) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
  %1300 = %1288.0;
  %1301 = %1289.0;
  %1302 = %1290.0;
  %1303 = %1295.1;
  %1304 = %1296.0;
  %1305 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
  %1306 = %1299.6;
  (%1300, %1301, %1302, %1303, meta[relay.Constant][72] /* ty=Tensor[(1, 13), float64] */, meta[relay.Constant][73] /* ty=Tensor[(78), float64] */, %1304, %1305, %1306)
}

def @func_14676() -> (Tensor[(8, 6, 10), float64],) {
  %1307 = @func_14471() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1308 = %1307.1;
  (%1308,)
}

def @func_12488(%var_12432: Tensor[(2, 4, 7), float64], %var_12440: Tensor[(98), int16], %var_12453: Tensor[(78), float64], %var_12462: Tensor[(405), float32]) -> (Tensor[(2, 4, 7), uint64], Tensor[(7, 7, 2), int16], Tensor[(98), int16], Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(9, 9, 7), uint32], Tensor[(715), int8], Tensor[(405), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) {
  %1309 = @func_9714() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %1310 = %1309.0;
  %1311 = cast(%var_12432, dtype="uint64") /* ty=Tensor[(2, 4, 7), uint64] */;
  %1312 = shape_of(%1310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1313 = cast(%1310, dtype="uint64") /* ty=Tensor[(2, 4, 7), uint64] */;
  %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1315 = cast(%var_12440, dtype="int16") /* ty=Tensor[(98), int16] */;
  %1316 = cast(%var_12440, dtype="int16") /* ty=Tensor[(98), int16] */;
  %1317 = reshape(%1315, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), int16] */;
  %1318 = reshape(%1316, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), int16] */;
  %1319 = @func_10087(%1317, %1318) /* ty=(Tensor[(7, 7, 2), int16], Tensor[(78), float64]) */;
  %1320 = cast(%var_12453, dtype="float64") /* ty=Tensor[(78), float64] */;
  %1321 = reshape(%1320, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %1322 = @func_11820(%1321) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(78), float64]) */;
  %1323 = cast(meta[relay.Constant][74] /* ty=Tensor[(715), int8] */, dtype="int8") /* ty=Tensor[(715), int8] */;
  %1324 = cast(meta[relay.Constant][74] /* ty=Tensor[(715), int8] */, dtype="int8") /* ty=Tensor[(715), int8] */;
  %1325 = cast(meta[relay.Constant][74] /* ty=Tensor[(715), int8] */, dtype="int8") /* ty=Tensor[(715), int8] */;
  %1326 = cast(%var_12462, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1327 = cast(meta[relay.Constant][75] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1328 = reshape(%1323, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %1329 = reshape(%1324, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %1330 = reshape(%1325, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %1331 = reshape(%1326, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %1332 = reshape(%1327, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %1333 = @func_11570(%1328, %1329, %1330, %1331, %1332) /* ty=(Tensor[(9, 9, 7), uint32], Tensor[(63, 9), uint32], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(405), float32], Tensor[(1, 240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(5, 13, 11), bool]) */;
  %1334 = @func_9051() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1335 = bitwise_or(%1313, %1314) /* ty=Tensor[(2, 4, 7), uint64] */;
  %1336 = %1319.0;
  %1337 = %1322.0;
  %1338 = %1333.0;
  %1339 = %1334.0;
  (%1335, %1336, %var_12440, %1337, %var_12453, %1338, meta[relay.Constant][74] /* ty=Tensor[(715), int8] */, %var_12462, meta[relay.Constant][75] /* ty=Tensor[(13), float64] */, %1339)
}

def @func_15132() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1340 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1341 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1342 = %1340.0;
  %1343 = %1341.0;
  (%1342, %1343)
}

def @func_6436() -> (Tensor[(8, 6, 10), float64],) {
  %1344 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1345 = %1344.0;
  (%1345,)
}

def @func_14641() -> (Tensor[(8, 6, 10), float64],) {
  %1346 = @func_14471() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1347 = %1346.1;
  (%1347,)
}

def @func_17258() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64]) {
  %1348 = @func_7002() /* ty=(Tensor[(78), float64],) */;
  %1349 = %1348.0;
  %1350 = @func_11291() /* ty=Tensor[(8, 6, 10), float64] */;
  (%1349, %1350)
}

def @func_630(%var_600: Tensor[(1, 1, 13), float64], %var_601: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) {
  %1351 = cast(%var_600, dtype="bool") /* ty=Tensor[(1, 1, 13), bool] */;
  %1352 = cast(%var_601, dtype="bool") /* ty=Tensor[(3, 2, 13), bool] */;
  %1353 = cast(meta[relay.Constant][76] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1354 = reshape(%1353, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %1355 = @func_305(%1354) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %1356 = not_equal(%1351, %1352) /* ty=Tensor[(3, 2, 13), bool] */;
  %1357 = %1355.1;
  (%1356, %1357, meta[relay.Constant][76] /* ty=Tensor[(405), float32] */)
}

def @func_10087(%var_10062: Tensor[(7, 7, 2), int16], %var_10063: Tensor[(7, 7, 2), int16]) -> (Tensor[(7, 7, 2), int16], Tensor[(78), float64]) {
  %1358 = cast(%var_10063, dtype="int16") /* ty=Tensor[(7, 7, 2), int16] */;
  %1359 = shape_of(%var_10062, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1360 = cast(%var_10062, dtype="int16") /* ty=Tensor[(7, 7, 2), int16] */;
  %1361 = dyn.reshape(%1358, %1359, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1362 = @func_9986() /* ty=(Tensor[(78), float64],) */;
  %1363 = left_shift(%1360, %1361) /* ty=Tensor[(7, 7, 2), int16] */;
  %1364 = %1362.0;
  (%1363, %1364)
}

def @func_8098() -> (Tensor[(8, 6, 10), float64],) {
  %1365 = @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1366 = %1365.0;
  (%1366,)
}

def @func_16072() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1367 = @func_7958() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1368 = @func_13151() /* ty=(Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1369 = %1367.0;
  %1370 = %1368.2;
  (%1369, %1370)
}

def @func_4688() -> (Tensor[(8, 6, 10), float64],) {
  %1371 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
  %1372 = %1371.0;
  (%1372,)
}

def @func_6194(%var_6190: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) {
  %1373 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1374 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1375 = cast(meta[relay.Constant][77] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %1376 = cast(meta[relay.Constant][77] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %1377 = cast(%var_6190, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %1378 = reshape(%1375, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %1379 = reshape(%1376, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %1380 = reshape(%1377, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %1381 = @func_4004(%1378, %1379, %1380) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */;
  %1382 = %1373.0;
  %1383 = %1374.0;
  %1384 = %1381.0;
  (%1382, %1383, %1384, meta[relay.Constant][77] /* ty=Tensor[(1008), uint16] */, %var_6190)
}

def @func_6677() -> Tensor[(12, 2, 8), int32] {
  %1385 = @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */;
  %1385.1
}

def @func_3906() -> (Tensor[(8, 6, 10), float64],) {
  %1386 = cast(meta[relay.Constant][78] /* ty=Tensor[(8, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %1387 = sigmoid(%1386) /* ty=Tensor[(8, 6, 10), float64] */;
  (%1387,)
}

def @func_9455() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1388 = @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1389 = @func_6436() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1390 = %1388.0;
  %1391 = %1389.0;
  (%1390, %1391)
}

def @func_19685() -> Tensor[(8, 6, 10), float64] {
  %1392 = @func_11397() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %1392.0
}

def @func_6554() -> Tensor[(8, 6, 10), float64] {
  @func_6415() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_10176() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1393 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1394 = @func_9006() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1395 = %1393.0;
  %1396 = %1394.0;
  (%1395, %1396)
}

def @func_10834(%var_10832: Tensor[(78), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(240), int16], Tensor[(78), float64]) {
  %1397 = cast(%var_10832, dtype="float64") /* ty=Tensor[(78), float64] */;
  %1398 = reshape(%1397, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %1399 = @func_5351(%1398) /* ty=(Tensor[(8, 6, 10), bool], Tensor[(9, 5, 9), float32], Tensor[(240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(9, 5, 9), float64]) */;
  %1400 = @func_9783() /* ty=Tensor[(8, 6, 10), float64] */;
  %1401 = %1399.2;
  (%1400, %1401, %var_10832)
}

def @func_12554() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(4, 60), int16], Tensor[(13), float64], Tensor[(234), float64], Tensor[(405), float32]) {
  %1402 = @func_11487() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(26, 3), float64], Tensor[(78), float64]) */;
  %1403 = cast(meta[relay.Constant][79] /* ty=Tensor[(4, 60), int16] */, dtype="int16") /* ty=Tensor[(4, 60), int16] */;
  %1404 = cast(meta[relay.Constant][80] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1405 = cast(meta[relay.Constant][81] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %1406 = cast(meta[relay.Constant][82] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1407 = reshape(%1403, newshape=[8, 30]) /* ty=Tensor[(8, 30), int16] */;
  %1408 = reshape(%1404, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %1409 = reshape(%1405, newshape=[78, 3]) /* ty=Tensor[(78, 3), float64] */;
  %1410 = reshape(%1406, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %1411 = @func_8262(%1407, %1408, %1409, %1410) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 30), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(1008), uint16], Tensor[(3, 189), uint32], Tensor[(9, 5, 9), float64], Tensor[(1, 405), float32]) */;
  %1412 = %1402.2;
  %1413 = %1411.0;
  (%1412, %1413, meta[relay.Constant][79] /* ty=Tensor[(4, 60), int16] */, meta[relay.Constant][80] /* ty=Tensor[(13), float64] */, meta[relay.Constant][81] /* ty=Tensor[(234), float64] */, meta[relay.Constant][82] /* ty=Tensor[(405), float32] */)
}

def @func_19182(%var_19164: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(567), float64]) {
  %1414 = @func_7958() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1415 = cast(%var_19164, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %1416 = reshape(%1415, newshape=[567, 1]) /* ty=Tensor[(567, 1), uint32] */;
  %1417 = @func_4385(%1416) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(78), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567, 1), uint32]) */;
  %1418 = cast(%var_19164, dtype="float64") /* ty=Tensor[(567), float64] */;
  %1419 = %1414.1;
  %1420 = %1417.3;
  %1421 = tan(%1418) /* ty=Tensor[(567), float64] */;
  (%1419, %1420, %1421)
}

def @func_3939() -> Tensor[(8, 6, 10), float64] {
  %1422 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1422.0
}

def @func_14851() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1423 = @func_8564() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1424 = @func_6554() /* ty=Tensor[(8, 6, 10), float64] */;
  %1425 = %1423.0;
  (%1424, %1425)
}

def @func_5378() -> (Tensor[(12, 2, 8), int32],) {
  %1426 = @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */;
  %1427 = %1426.1;
  (%1427,)
}

def @func_1559(%var_1526: Tensor[(12, 2, 8), float32], %var_1527: Tensor[(12, 2, 8), float32], %var_1545: Tensor[(12, 2, 8), float64]) -> (Tensor[(12, 2, 8), int32],) {
  %1428 = cast(%var_1527, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %1429 = shape_of(%var_1526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1430 = cast(%var_1526, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %1431 = dyn.reshape(%1428, %1429, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1432 = mod(%1430, %1431) /* ty=Tensor[(12, 2, 8), float32] */;
  %1433 = cast(%1432, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %1434 = acosh(%1433) /* ty=Tensor[(12, 2, 8), float64] */;
  %1435 = cast(%var_1545, dtype="int32") /* ty=Tensor[(12, 2, 8), int32] */;
  %1436 = shape_of(%1434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1437 = cast(%1434, dtype="int32") /* ty=Tensor[(12, 2, 8), int32] */;
  %1438 = dyn.reshape(%1435, %1436, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1439 = right_shift(%1437, %1438) /* ty=Tensor[(12, 2, 8), int32] */;
  (%1439,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7338() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %0 = @func_6689() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %2 = %0.1;
  %3 = %1.0;
  %4 = @func_4315() /* ty=Tensor[(8, 6, 10), float64] */;
  %5 = @func_5426() /* ty=Tensor[(8, 6, 10), float64] */;
  (%2, %3, %4, %5)
}

def @func_12214(%var_12212: Tensor[(8, 11, 15), float32]) -> (Tensor[(8, 11, 15), float32],) {
  @func_12211(%var_12212) /* ty=(Tensor[(8, 11, 15), float32],) */
}

def @func_16247() -> (Tensor[(8, 6, 10), float64],) {
  %6 = @func_4937() /* ty=Tensor[(8, 6, 10), float64] */;
  (%6,)
}

def @func_15004(%var_15002: Tensor[(1008), uint16]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(1008), uint16], Tensor[(567), float32]) {
  @func_15001(%var_15002) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(1008), uint16], Tensor[(567), float32]) */
}

def @func_19021() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %11 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %7 = @func_16072() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %8 = @func_11226() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
    %9 = %7.0;
    %10 = %8.1;
    (%9, %10)
  };
  %11() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_17136() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %12 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %13 = %12.0;
  %14 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
  (%13, %14)
}

def @func_5353(%var_5352: Tensor[(78), float64]) -> (Tensor[(8, 6, 10), bool], Tensor[(9, 5, 9), float32], Tensor[(240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(9, 5, 9), float64]) {
  %37 = fn (%var_5346: Tensor[(78), float64]) -> (Tensor[(8, 6, 10), bool], Tensor[(9, 5, 9), float32], Tensor[(240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(9, 5, 9), float64]) {
    %15 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
    %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 6, 10), float64] */, dtype="bool") /* ty=Tensor[(8, 6, 10), bool] */;
    %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
    %18 = cast(%15, dtype="bool") /* ty=Tensor[(8, 6, 10), bool] */;
    %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
    %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
    %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
    %23 = cast(%var_5346, dtype="float64") /* ty=Tensor[(78), float64] */;
    %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
    %25 = reshape(%20, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
    %26 = reshape(%21, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
    %27 = reshape(%22, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
    %28 = reshape(%23, newshape=[78, 1]) /* ty=Tensor[(78, 1), float64] */;
    %29 = reshape(%24, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
    %30 = @func_3693(%25, %26, %27, %28, %29) /* ty=(Tensor[(26, 3), float64], Tensor[(1, 13), float64], Tensor[(78, 1), float64], Tensor[(3, 5, 16), uint64], Tensor[(405), float32], Tensor[(9, 5, 9), float32], Tensor[(3, 5, 16), bool], Tensor[(13), float64]) */;
    %31 = %30.5;
    %32 = cast(%31, dtype="float32") /* ty=Tensor[(9, 5, 9), float32] */;
    %33 = reshape(%32, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
    %34 = @func_305(%33) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
    %35 = less_equal(%18, %19) /* ty=Tensor[(8, 6, 10), bool] */;
    %36 = %34.1;
    (%35, %31, meta[relay.Constant][1] /* ty=Tensor[(240), int16] */, meta[relay.Constant][2] /* ty=Tensor[(13), float64] */, %var_5346, %36)
  };
  %37(%var_5352) /* ty=(Tensor[(8, 6, 10), bool], Tensor[(9, 5, 9), float32], Tensor[(240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(9, 5, 9), float64]) */
}

def @func_17320(%var_17318: Tensor[(11, 14, 11), float64]) -> (Tensor[(11, 14, 11), float64], Tensor[(8, 6, 10), float64]) {
  @func_17317(%var_17318) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_13721(%var_13719: Tensor[(9, 16, 15), uint32], %var_13720: Tensor[(9, 16, 15), uint32]) -> (Tensor[(9, 16, 15), uint32], Tensor[(8, 6, 10), float64]) {
  %45 = fn (%var_13709: Tensor[(9, 16, 15), uint32], %var_13710: Tensor[(9, 16, 15), uint32]) -> (Tensor[(9, 16, 15), uint32], Tensor[(8, 6, 10), float64]) {
    %38 = cast(%var_13710, dtype="uint32") /* ty=Tensor[(9, 16, 15), uint32] */;
    %39 = shape_of(%var_13709, dtype="int32") /* ty=Tensor[(3), int32] */;
    %40 = cast(%var_13709, dtype="uint32") /* ty=Tensor[(9, 16, 15), uint32] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %42 = @func_11397() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
    %43 = bitwise_xor(%40, %41) /* ty=Tensor[(9, 16, 15), uint32] */;
    %44 = %42.0;
    (%43, %44)
  };
  %45(%var_13719, %var_13720) /* ty=(Tensor[(9, 16, 15), uint32], Tensor[(8, 6, 10), float64]) */
}

def @func_4644() -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) {
  %46 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %47 = %46.0;
  %48 = cast(%47, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %49 = cast(meta[relay.Constant][3] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %50 = reshape(%48, newshape=[8, 6, 10]) /* ty=Tensor[(8, 6, 10), float64] */;
  %51 = reshape(%49, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %52 = @func_4090(%50, %51) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */;
  %53 = %52.4;
  (%47, %53, meta[relay.Constant][3] /* ty=Tensor[(405), float32] */)
}

def @func_16202() -> (Tensor[(8, 6, 10), float64],) {
  %54 = @func_9783() /* ty=Tensor[(8, 6, 10), float64] */;
  (%54,)
}

def @func_4938() -> Tensor[(8, 6, 10), float64] {
  %56 = fn () -> Tensor[(8, 6, 10), float64] {
    %55 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %55.0
  };
  %56() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_10636() -> (Tensor[(8, 6, 10), float64],) {
  %59 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %57 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %58 = %57.0;
    (%58,)
  };
  %59() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_19184(%var_19183: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(567), float64]) {
  %68 = fn (%var_19164: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(567), float64]) {
    %60 = @func_7958() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %61 = cast(%var_19164, dtype="uint32") /* ty=Tensor[(567), uint32] */;
    %62 = reshape(%61, newshape=[567, 1]) /* ty=Tensor[(567, 1), uint32] */;
    %63 = @func_4385(%62) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(78), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567, 1), uint32]) */;
    %64 = cast(%var_19164, dtype="float64") /* ty=Tensor[(567), float64] */;
    %65 = %60.1;
    %66 = %63.3;
    %67 = tan(%64) /* ty=Tensor[(567), float64] */;
    (%65, %66, %67)
  };
  %68(%var_19183) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(567), float64]) */
}

def @func_16454() -> Tensor[(8, 6, 10), float64] {
  @func_16452() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_14202(%var_14201: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(11, 15, 14), float32], Tensor[(770, 3), float32], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) {
  %82 = fn (%var_14189: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(11, 15, 14), float32], Tensor[(770, 3), float32], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) {
    %69 = @func_9455() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %70 = cast(meta[relay.Constant][4] /* ty=Tensor[(770, 3), float32] */, dtype="float32") /* ty=Tensor[(770, 3), float32] */;
    %71 = reshape(%70, newshape=[11, 15, 14]) /* ty=Tensor[(11, 15, 14), float32] */;
    %72 = @func_12912(%71) /* ty=(Tensor[(11, 15, 14), float32],) */;
    %73 = cast(%var_14189, dtype="float32") /* ty=Tensor[(405), float32] */;
    %74 = reshape(%73, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
    %75 = @func_6012(%74) /* ty=(Tensor[(9, 5, 9), int16],) */;
    %76 = %69.0;
    %77 = @func_5426() /* ty=Tensor[(8, 6, 10), float64] */;
    %78 = %72.0;
    %79 = @func_11154() /* ty=Tensor[(8, 6, 10), float64] */;
    %80 = %75.0;
    %81 = @func_13391() /* ty=Tensor[(8, 6, 10), float64] */;
    (%76, %77, %78, meta[relay.Constant][4] /* ty=Tensor[(770, 3), float32] */, %79, %80, %var_14189, %81)
  };
  %82(%var_14201) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(11, 15, 14), float32], Tensor[(770, 3), float32], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) */
}

def @func_4090(%var_4034: Tensor[(8, 6, 10), float64], %var_4058: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) {
  %83 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  %84 = cast(%var_4034, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%83, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %88 = cast(%var_4058, dtype="float32") /* ty=Tensor[(405), float32] */;
  %89 = reshape(%88, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %90 = @func_305(%89) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %91 = cast(meta[relay.Constant][5] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %92 = cast(meta[relay.Constant][5] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(192), float32] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %94 = reshape(%91, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %95 = reshape(%92, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %96 = reshape(%93, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %97 = @func_1559(%94, %95, %96) /* ty=(Tensor[(12, 2, 8), int32],) */;
  %98 = subtract(%86, %87) /* ty=Tensor[(8, 6, 10), float64] */;
  %99 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  %100 = %90.0;
  %101 = %97.0;
  (%98, %99, %100, %var_4058, %101, meta[relay.Constant][5] /* ty=Tensor[(192), float32] */)
}

def @func_6662() -> Tensor[(8, 6, 10), float64] {
  @func_5087() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_14641() -> (Tensor[(8, 6, 10), float64],) {
  %102 = @func_14471() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %103 = %102.1;
  (%103,)
}

def @func_15277() -> (Tensor[(8, 6, 10), float64], Tensor[(26, 3), float64]) {
  %107 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(26, 3), float64]) {
    %104 = @func_8085() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */;
    %105 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
    %106 = %104.4;
    (%105, %106)
  };
  %107() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(26, 3), float64]) */
}

def @func_17469() -> Tensor[(8, 6, 10), float64] {
  %109 = fn () -> Tensor[(8, 6, 10), float64] {
    %108 = @func_9006() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %108.0
  };
  %109() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_8566() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  @func_8564() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_6428() -> (Tensor[(8, 6, 10), float64],) {
  %111 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %110 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
    (%110,)
  };
  %111() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_8751(%var_8749: Tensor[(216, 2), int32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(6, 6, 12), bool], Tensor[(216, 2), int32], Tensor[(12, 2, 8), int32], Tensor[(13), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(8, 6, 10), float64]) {
  @func_8748(%var_8749) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(6, 6, 12), bool], Tensor[(216, 2), int32], Tensor[(12, 2, 8), int32], Tensor[(13), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(8, 6, 10), float64]) */
}

def @func_9896() -> (Tensor[(8, 6, 10), float32],) {
  %112 = @func_7593() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %113 = %112.1;
  (%113,)
}

def @func_16121() -> (Tensor[(405), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) {
  @func_16119() /* ty=(Tensor[(405), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_14078(%var_14076: Tensor[(9, 45), float32], %var_14077: Tensor[(13), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(13), float64], Tensor[(13, 55), int8], Tensor[(9, 45), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) {
  @func_14074(%var_14076, %var_14077) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(13), float64], Tensor[(13, 55), int8], Tensor[(9, 45), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_14378() -> (Tensor[(8, 6, 10), float32],) {
  @func_14376() /* ty=(Tensor[(8, 6, 10), float32],) */
}

def @func_5089() -> Tensor[(8, 6, 10), float64] {
  @func_5087() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_14354() -> (Tensor[(405), float32], Tensor[(2, 4, 7), float64]) {
  @func_14352() /* ty=(Tensor[(405), float32], Tensor[(2, 4, 7), float64]) */
}

def @func_11136() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %117 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %114 = @func_10176() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %115 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
    %116 = %114.1;
    (%115, %116)
  };
  %117() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_7037() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %118 = @func_4315() /* ty=Tensor[(8, 6, 10), float64] */;
  %119 = @func_5087() /* ty=Tensor[(8, 6, 10), float64] */;
  (%118, %119)
}

def @func_7039() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  @func_7037() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_15743() -> Tensor[(8, 6, 10), int64] {
  %120 = fn () -> Tensor[(8, 6, 10), int64] {
    @func_7751() /* ty=Tensor[(8, 6, 10), int64] */
  };
  %120() /* ty=Tensor[(8, 6, 10), int64] */
}

def @func_11282() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %125 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %121 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
    %122 = @func_11230() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %123 = %121.1;
    %124 = %122.0;
    (%123, %124)
  };
  %125() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_8086() -> (Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) {
  %142 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) {
    %126 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
    %128 = reshape(%127, newshape=[13]) /* ty=Tensor[(13), float64] */;
    %129 = @func_4298(%128) /* ty=(Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float32]) */;
    %130 = cast(meta[relay.Constant][6] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %131 = reshape(%130, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
    %132 = @func_1638(%131) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
    %133 = %132.1;
    %134 = cast(%133, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
    %135 = cast(meta[relay.Constant][7] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
    %136 = reshape(%135, newshape=[13]) /* ty=Tensor[(13), float64] */;
    %137 = @func_4298(%136) /* ty=(Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float32]) */;
    %138 = %126.0;
    %139 = %129.0;
    %140 = cos(%134) /* ty=Tensor[(26, 3), float64] */;
    %141 = %137.1;
    (%138, meta[relay.Constant][6] /* ty=Tensor[(78), float64] */, %139, meta[relay.Constant][7] /* ty=Tensor[(13), float64] */, %140, %141)
  };
  %142() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */
}

def @func_6691() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  @func_6689() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_10552() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  @func_10550() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_14852() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %146 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %143 = @func_8564() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %144 = @func_6554() /* ty=Tensor[(8, 6, 10), float64] */;
    %145 = %143.0;
    (%144, %145)
  };
  %146() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_15294() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  %147 = @func_14376() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %148 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %149 = %147.0;
  %150 = %148.0;
  (%149, %150)
}

def @func_16473() -> Tensor[(8, 6, 10), float64] {
  @func_16471() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_11679() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32]) {
  @func_11677() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32]) */
}

def @func_13073() -> (Tensor[(8, 6, 10), int64],) {
  %152 = fn () -> (Tensor[(8, 6, 10), int64],) {
    %151 = @func_7751() /* ty=Tensor[(8, 6, 10), int64] */;
    (%151,)
  };
  %152() /* ty=(Tensor[(8, 6, 10), int64],) */
}

def @func_19264() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %161 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %153 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %154 = @func_10635() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %155 = @func_14288() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %156 = @func_7968() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %157 = %153.0;
    %158 = %154.0;
    %159 = %155.0;
    %160 = %156.0;
    (%157, %158, %159, %160)
  };
  %161() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_13332() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float32], Tensor[(405), float32]) {
  %162 = @func_11409() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %163 = @func_6530() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */;
  %164 = @func_11397() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %165 = %164.1;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(405), float32] */;
  %167 = %162.0;
  %168 = %163.0;
  %169 = asinh(%166) /* ty=Tensor[(405), float32] */;
  (%167, %168, %169)
}

def @func_18925() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64]) {
  %170 = @func_7002() /* ty=(Tensor[(78), float64],) */;
  %171 = @func_13837() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %172 = %170.0;
  %173 = %171.1;
  (%172, %173)
}

def @func_12488(%var_12432: Tensor[(2, 4, 7), float64], %var_12440: Tensor[(98), int16], %var_12453: Tensor[(78), float64], %var_12462: Tensor[(405), float32]) -> (Tensor[(2, 4, 7), uint64], Tensor[(7, 7, 2), int16], Tensor[(98), int16], Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(9, 9, 7), uint32], Tensor[(715), int8], Tensor[(405), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) {
  %174 = @func_9714() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %175 = %174.0;
  %176 = cast(%var_12432, dtype="uint64") /* ty=Tensor[(2, 4, 7), uint64] */;
  %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%175, dtype="uint64") /* ty=Tensor[(2, 4, 7), uint64] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %180 = cast(%var_12440, dtype="int16") /* ty=Tensor[(98), int16] */;
  %181 = cast(%var_12440, dtype="int16") /* ty=Tensor[(98), int16] */;
  %182 = reshape(%180, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), int16] */;
  %183 = reshape(%181, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), int16] */;
  %184 = @func_10087(%182, %183) /* ty=(Tensor[(7, 7, 2), int16], Tensor[(78), float64]) */;
  %185 = cast(%var_12453, dtype="float64") /* ty=Tensor[(78), float64] */;
  %186 = reshape(%185, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %187 = @func_11820(%186) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(78), float64]) */;
  %188 = cast(meta[relay.Constant][8] /* ty=Tensor[(715), int8] */, dtype="int8") /* ty=Tensor[(715), int8] */;
  %189 = cast(meta[relay.Constant][8] /* ty=Tensor[(715), int8] */, dtype="int8") /* ty=Tensor[(715), int8] */;
  %190 = cast(meta[relay.Constant][8] /* ty=Tensor[(715), int8] */, dtype="int8") /* ty=Tensor[(715), int8] */;
  %191 = cast(%var_12462, dtype="float32") /* ty=Tensor[(405), float32] */;
  %192 = cast(meta[relay.Constant][9] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %193 = reshape(%188, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %194 = reshape(%189, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %195 = reshape(%190, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %196 = reshape(%191, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %197 = reshape(%192, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %198 = @func_11570(%193, %194, %195, %196, %197) /* ty=(Tensor[(9, 9, 7), uint32], Tensor[(63, 9), uint32], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(405), float32], Tensor[(1, 240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(5, 13, 11), bool]) */;
  %199 = @func_9051() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %200 = bitwise_or(%178, %179) /* ty=Tensor[(2, 4, 7), uint64] */;
  %201 = %184.0;
  %202 = %187.0;
  %203 = %198.0;
  %204 = %199.0;
  (%200, %201, %var_12440, %202, %var_12453, %203, meta[relay.Constant][8] /* ty=Tensor[(715), int8] */, %var_12462, meta[relay.Constant][9] /* ty=Tensor[(13), float64] */, %204)
}

def @func_5426() -> Tensor[(8, 6, 10), float64] {
  %205 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %205.1
}

def @func_7004() -> (Tensor[(78), float64],) {
  @func_7002() /* ty=(Tensor[(78), float64],) */
}

def @func_17192() -> (Tensor[(8, 6, 10), float64],) {
  %206 = @func_15079() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %207 = %206.0;
  (%207,)
}

def @func_12325() -> (Tensor[(8, 6, 10), float64], Tensor[(2, 4, 7), float64]) {
  %212 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(2, 4, 7), float64]) {
    %208 = @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */;
    %209 = @func_9714() /* ty=(Tensor[(2, 4, 7), float64],) */;
    %210 = %208.0;
    %211 = %209.0;
    (%210, %211)
  };
  %212() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(2, 4, 7), float64]) */
}

def @func_17444(%var_17443: Tensor[(1694), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(1694), float64]) {
  %223 = fn (%var_17439: Tensor[(1694), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(1694), float64]) {
    %213 = @func_15991() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %214 = @func_11281() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %215 = @func_9321() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */;
    %216 = cast(%var_17439, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %217 = reshape(%216, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
    %218 = @func_17317(%217) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 6, 10), float64]) */;
    %219 = %213.2;
    %220 = %214.1;
    %221 = %215.1;
    %222 = %218.1;
    (%219, %220, %221, %222, %var_17439)
  };
  %223(%var_17443) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(1694), float64]) */
}

def @func_17260() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64]) {
  @func_17258() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_5521() -> (Tensor[(8, 6, 10), float64],) {
  %225 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %224 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
    (%224,)
  };
  %225() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_8583() -> Tensor[(8, 6, 10), float64] {
  %226 = @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %226.0
}

def @func_8585() -> Tensor[(8, 6, 10), float64] {
  @func_8583() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_9952() -> (Tensor[(528), float64], Tensor[(8, 6, 10), float64]) {
  @func_9950() /* ty=(Tensor[(528), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_9715() -> (Tensor[(2, 4, 7), float64],) {
  %229 = fn () -> (Tensor[(2, 4, 7), float64],) {
    %227 = @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */;
    %228 = %227.0;
    (%228,)
  };
  %229() /* ty=(Tensor[(2, 4, 7), float64],) */
}

def @func_1057(%var_1051: Tensor[(13), float64], %var_1052: Tensor[(26, 3), float64]) -> (Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) {
  %230 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 13, 9), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 9), float32] */;
  %231 = sinh(%230) /* ty=Tensor[(4, 13, 9), float32] */;
  %232 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 13, 9), float32] */, dtype="bool") /* ty=Tensor[(4, 13, 9), bool] */;
  %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%231, dtype="bool") /* ty=Tensor[(4, 13, 9), bool] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %236 = cast(%231, dtype="float64") /* ty=Tensor[(4, 13, 9), float64] */;
  %237 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(4, 13, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 13, 9), float32] */, dtype="float64") /* ty=Tensor[(4, 13, 9), float64] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %240 = cast(%var_1051, dtype="float64") /* ty=Tensor[(13), float64] */;
  %241 = cast(%var_1052, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
  %242 = reshape(%240, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
  %243 = reshape(%241, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %244 = @func_630(%242, %243) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */;
  %245 = greater(%234, %235) /* ty=Tensor[(4, 13, 9), bool] */;
  %246 = maximum(%238, %239) /* ty=Tensor[(4, 13, 9), float64] */;
  %247 = %244.2;
  (%245, %246, %247, %var_1051, %var_1052)
}

def @func_6555() -> Tensor[(8, 6, 10), float64] {
  %248 = fn () -> Tensor[(8, 6, 10), float64] {
    @func_6415() /* ty=Tensor[(8, 6, 10), float64] */
  };
  %248() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_6043(%var_6042: Tensor[(2, 2, 15), float64]) -> (Tensor[(2, 2, 15), bool], Tensor[(8, 6, 10), float64]) {
  %256 = fn (%var_6026: Tensor[(2, 2, 15), float64]) -> (Tensor[(2, 2, 15), bool], Tensor[(8, 6, 10), float64]) {
    %249 = cast(%var_6026, dtype="bool") /* ty=Tensor[(2, 2, 15), bool] */;
    %250 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(2, 2, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %251 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 2, 15), float64] */, dtype="bool") /* ty=Tensor[(2, 2, 15), bool] */;
    %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %253 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %254 = less_equal(%251, %252) /* ty=Tensor[(2, 2, 15), bool] */;
    %255 = %253.0;
    (%254, %255)
  };
  %256(%var_6042) /* ty=(Tensor[(2, 2, 15), bool], Tensor[(8, 6, 10), float64]) */
}

def @func_7358() -> (Tensor[(8, 6, 10), float64],) {
  @func_7356() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_7356() -> (Tensor[(8, 6, 10), float64],) {
  %257 = @func_6436() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %258 = %257.0;
  (%258,)
}

def @func_10419(%var_10417: Tensor[(9, 4, 3), float32], %var_10418: Tensor[(1008), uint16]) -> (Tensor[(9, 4, 3), float32], Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(8, 6, 10), float64], Tensor[(567), float32]) {
  %278 = fn (%var_10365: Tensor[(9, 4, 3), float32], %var_10384: Tensor[(1008), uint16]) -> (Tensor[(9, 4, 3), float32], Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(8, 6, 10), float64], Tensor[(567), float32]) {
    %259 = cast(%var_10365, dtype="float32") /* ty=Tensor[(9, 4, 3), float32] */;
    %260 = erf(%259) /* ty=Tensor[(9, 4, 3), float32] */;
    %261 = cast(%var_10365, dtype="float32") /* ty=Tensor[(9, 4, 3), float32] */;
    %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
    %263 = cast(%260, dtype="float32") /* ty=Tensor[(9, 4, 3), float32] */;
    %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %265 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %266 = cast(%var_10384, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %267 = cast(meta[relay.Constant][12] /* ty=Tensor[(567), uint32] */, dtype="uint32") /* ty=Tensor[(567), uint32] */;
    %268 = reshape(%266, newshape=[1008]) /* ty=Tensor[(1008), uint16] */;
    %269 = reshape(%267, newshape=[567]) /* ty=Tensor[(567), uint32] */;
    %270 = @func_7551(%268, %269) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
    %271 = @func_8152() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %272 = cast(meta[relay.Constant][12] /* ty=Tensor[(567), uint32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
    %273 = power(%263, %264) /* ty=Tensor[(9, 4, 3), float32] */;
    %274 = %265.0;
    %275 = %270.3;
    %276 = %271.0;
    %277 = exp(%272) /* ty=Tensor[(567), float32] */;
    (%273, %274, %275, %var_10384, %276, %277)
  };
  %278(%var_10417, %var_10418) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(8, 6, 10), float64], Tensor[(567), float32]) */
}

def @func_13406() -> Tensor[(12, 2, 8), int32] {
  @func_13404() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_13009() -> Tensor[(8, 6, 10), float64] {
  %280 = fn () -> Tensor[(8, 6, 10), float64] {
    %279 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
    %279.1
  };
  %280() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_6214() -> (Tensor[(8, 6, 10), float64],) {
  @func_6212() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_10153(%var_10105: Tensor[(405), float32], %var_10123: Tensor[(234), float64]) -> (Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(240), int16], Tensor[(1, 13), float64], Tensor[(405), float32], Tensor[(8, 6, 10), float64], Tensor[(234), float64]) {
  %281 = @func_8085() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */;
  %282 = cast(meta[relay.Constant][13] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %283 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %284 = cast(meta[relay.Constant][15] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %285 = cast(%var_10105, dtype="float32") /* ty=Tensor[(405), float32] */;
  %286 = reshape(%282, newshape=[8, 30]) /* ty=Tensor[(8, 30), int16] */;
  %287 = reshape(%283, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %288 = reshape(%284, newshape=[78, 3]) /* ty=Tensor[(78, 3), float64] */;
  %289 = reshape(%285, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %290 = @func_8262(%286, %287, %288, %289) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 30), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(1008), uint16], Tensor[(3, 189), uint32], Tensor[(9, 5, 9), float64], Tensor[(1, 405), float32]) */;
  %291 = @func_6212() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %292 = cast(%var_10123, dtype="uint8") /* ty=Tensor[(234), uint8] */;
  %293 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(234), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %294 = cast(meta[relay.Constant][15] /* ty=Tensor[(234), float64] */, dtype="uint8") /* ty=Tensor[(234), uint8] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %296 = multiply(%294, %295) /* ty=Tensor[(234), uint8] */;
  %297 = cast(%296, dtype="float64") /* ty=Tensor[(234), float64] */;
  %298 = %281.1;
  %299 = %290.5;
  %300 = %291.0;
  %301 = exp(%297) /* ty=Tensor[(234), float64] */;
  (%298, %299, meta[relay.Constant][13] /* ty=Tensor[(240), int16] */, meta[relay.Constant][14] /* ty=Tensor[(1, 13), float64] */, %var_10105, %300, %301)
}

def @func_5379() -> (Tensor[(12, 2, 8), int32],) {
  %304 = fn () -> (Tensor[(12, 2, 8), int32],) {
    %302 = @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */;
    %303 = %302.1;
    (%303,)
  };
  %304() /* ty=(Tensor[(12, 2, 8), int32],) */
}

def @func_13781() -> (Tensor[(8, 6, 10), float64],) {
  %307 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %305 = @func_10607() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %306 = %305.0;
    (%306,)
  };
  %307() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_9784() -> Tensor[(8, 6, 10), float64] {
  %309 = fn () -> Tensor[(8, 6, 10), float64] {
    %308 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %308.0
  };
  %309() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_19337(%var_19336: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(405), float32], Tensor[(405), float32]) {
  %322 = fn (%var_19323: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(405), float32], Tensor[(405), float32]) {
    %310 = @func_7881() /* ty=(Tensor[(8, 6, 10), int16], Tensor[(8, 6, 10), float64]) */;
    %311 = @func_12049() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(13, 6), float64], Tensor[(8, 6, 10), float64]) */;
    %312 = cast(%var_19323, dtype="float32") /* ty=Tensor[(405), float32] */;
    %313 = reshape(%312, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %314 = @func_16940(%313) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(405), float32]) */;
    %315 = cast(%var_19323, dtype="float32") /* ty=Tensor[(405), float32] */;
    %316 = reshape(%315, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %317 = @func_5835(%316) /* ty=(Tensor[(192), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) */;
    %318 = %310.1;
    %319 = %311.0;
    %320 = %314.1;
    %321 = %317.5;
    (%318, %319, %320, %var_19323, %321)
  };
  %322(%var_19336) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(405), float32], Tensor[(405), float32]) */
}

def @func_6732(%var_6729: Tensor[(14, 3, 3), uint16], %var_6730: Tensor[(14, 3, 3), uint16], %var_6731: uint64) -> (Tensor[(14, 3, 3), uint16], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 6), bool], uint64, Tensor[(6, 12), uint64]) {
  @func_6727(%var_6729, %var_6730, %var_6731) /* ty=(Tensor[(14, 3, 3), uint16], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 6), bool], uint64, Tensor[(6, 12), uint64]) */
}

def @func_11497() -> (Tensor[(8, 6, 10), float64],) {
  %325 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %323 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
    %324 = %323.0;
    (%324,)
  };
  %325() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_12173(%var_12171: Tensor[(13, 10, 10), uint32], %var_12172: Tensor[(13, 10, 10), uint32]) -> (Tensor[(13, 10, 10), bool], Tensor[(5, 4, 11), float64], Tensor[(78), float64]) {
  %335 = fn (%var_12156: Tensor[(13, 10, 10), uint32], %var_12157: Tensor[(13, 10, 10), uint32]) -> (Tensor[(13, 10, 10), bool], Tensor[(5, 4, 11), float64], Tensor[(78), float64]) {
    %326 = cast(%var_12157, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
    %327 = shape_of(%var_12156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %328 = cast(%var_12156, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
    %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %330 = cast(meta[relay.Constant][16] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %331 = reshape(%330, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
    %332 = @func_1638(%331) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
    %333 = not_equal(%328, %329) /* ty=Tensor[(13, 10, 10), bool] */;
    %334 = %332.0;
    (%333, %334, meta[relay.Constant][16] /* ty=Tensor[(78), float64] */)
  };
  %335(%var_12171, %var_12172) /* ty=(Tensor[(13, 10, 10), bool], Tensor[(5, 4, 11), float64], Tensor[(78), float64]) */
}

def @func_15080() -> (Tensor[(8, 6, 10), float64],) {
  %338 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %336 = @func_12049() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(13, 6), float64], Tensor[(8, 6, 10), float64]) */;
    %337 = %336.0;
    (%337,)
  };
  %338() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_10091(%var_10089: Tensor[(7, 7, 2), int16], %var_10090: Tensor[(7, 7, 2), int16]) -> (Tensor[(7, 7, 2), int16], Tensor[(78), float64]) {
  @func_10087(%var_10089, %var_10090) /* ty=(Tensor[(7, 7, 2), int16], Tensor[(78), float64]) */
}

def @func_7593() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) {
  %339 = @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %340 = @func_6471() /* ty=(Tensor[(192), float32], Tensor[(8, 6, 10), float32], Tensor[(13), float64]) */;
  %341 = %339.0;
  %342 = %340.1;
  (%341, %342)
}

def @func_4094(%var_4092: Tensor[(8, 6, 10), float64], %var_4093: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) {
  @func_4090(%var_4092, %var_4093) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */
}

def @func_19046() -> Tensor[(8, 6, 10), float64] {
  %343 = @func_11135() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %343.0
}

def @func_12633() -> (Tensor[(8, 6, 10), float64],) {
  %345 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %344 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
    (%344,)
  };
  %345() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_5995() -> Tensor[(192), float32] {
  @func_5993() /* ty=Tensor[(192), float32] */
}

def @func_16804() -> Tensor[(8, 6, 10), float64] {
  %346 = @func_16247() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %346.0
}

def @func_4557() -> (Tensor[(8, 6, 10), float64],) {
  %347 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
  (%347,)
}

def @func_7554(%var_7552: Tensor[(1008), uint16], %var_7553: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567), uint32]) {
  %358 = fn (%var_7539: Tensor[(1008), uint16], %var_7540: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567), uint32]) {
    %348 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %349 = cast(%var_7539, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %350 = cast(%var_7539, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %351 = cast(%var_7540, dtype="uint32") /* ty=Tensor[(567), uint32] */;
    %352 = reshape(%349, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
    %353 = reshape(%350, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
    %354 = reshape(%351, newshape=[567]) /* ty=Tensor[(567), uint32] */;
    %355 = @func_4004(%352, %353, %354) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */;
    %356 = %348.1;
    %357 = %355.1;
    (%356, %357, %var_7539, %var_7540)
  };
  %358(%var_7552, %var_7553) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567), uint32]) */
}

def @func_16204() -> (Tensor[(8, 6, 10), float64],) {
  @func_16202() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_11846() -> (Tensor[(78), float64],) {
  %361 = fn () -> (Tensor[(78), float64],) {
    %359 = @func_7002() /* ty=(Tensor[(78), float64],) */;
    %360 = %359.0;
    (%360,)
  };
  %361() /* ty=(Tensor[(78), float64],) */
}

def @func_5182() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %365 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %362 = @func_4714() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */;
    %363 = @func_4315() /* ty=Tensor[(8, 6, 10), float64] */;
    %364 = %362.0;
    (%363, %364)
  };
  %365() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_7669(%var_7668: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) {
  %378 = fn (%var_7662: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) {
    %366 = @func_6689() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %367 = @func_6530() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */;
    %368 = cast(meta[relay.Constant][17] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %369 = cast(meta[relay.Constant][17] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %370 = cast(%var_7662, dtype="uint32") /* ty=Tensor[(567), uint32] */;
    %371 = reshape(%368, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
    %372 = reshape(%369, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
    %373 = reshape(%370, newshape=[567]) /* ty=Tensor[(567), uint32] */;
    %374 = @func_4004(%371, %372, %373) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */;
    %375 = %366.0;
    %376 = %367.1;
    %377 = %374.0;
    (%375, %376, %377, meta[relay.Constant][17] /* ty=Tensor[(1008), uint16] */, %var_7662)
  };
  %378(%var_7668) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) */
}

def @func_15494() -> (Tensor[(8, 6, 10), int16], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) {
  @func_15492() /* ty=(Tensor[(8, 6, 10), int16], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) */
}

def @func_12527() -> (Tensor[(8, 6, 10), float32],) {
  @func_12525() /* ty=(Tensor[(8, 6, 10), float32],) */
}

def @func_11928() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  @func_11926() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_14438(%var_14428: Tensor[(11, 1, 10), int32]) -> Tensor[(11, 12, 10), int16] {
  %379 = cast(%var_14428, dtype="int32") /* ty=Tensor[(11, 1, 10), int32] */;
  %380 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 12, 10), int32] */, dtype="int32") /* ty=Tensor[(11, 12, 10), int32] */;
  %381 = multiply(%379, %380) /* ty=Tensor[(11, 12, 10), int32] */;
  %382 = cast(%381, dtype="int16") /* ty=Tensor[(11, 12, 10), int16] */;
  %383 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(11, 12, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 12, 10), int32] */, dtype="int16") /* ty=Tensor[(11, 12, 10), int16] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%384, %385) /* ty=Tensor[(11, 12, 10), int16] */
}

def @func_9641(%var_9639: Tensor[(192), float32], %var_9640: Tensor[(12, 2, 8), int32]) -> (Tensor[(8, 6, 10), float64], Tensor[(192), float32], Tensor[(12, 2, 8), float64], Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  %405 = fn (%var_9615: Tensor[(192), float32], %var_9618: Tensor[(12, 2, 8), int32]) -> (Tensor[(8, 6, 10), float64], Tensor[(192), float32], Tensor[(12, 2, 8), float64], Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
    %386 = @func_9455() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %387 = cast(%var_9615, dtype="float32") /* ty=Tensor[(192), float32] */;
    %388 = cast(%var_9615, dtype="float32") /* ty=Tensor[(192), float32] */;
    %389 = cast(%var_9615, dtype="float64") /* ty=Tensor[(192), float64] */;
    %390 = reshape(%387, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
    %391 = reshape(%388, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
    %392 = reshape(%389, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
    %393 = @func_1559(%390, %391, %392) /* ty=(Tensor[(12, 2, 8), int32],) */;
    %394 = %393.0;
    %395 = cast(%var_9618, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
    %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
    %397 = cast(%394, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %399 = @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
    %400 = @func_7968() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %401 = %386.0;
    %402 = power(%397, %398) /* ty=Tensor[(12, 2, 8), float64] */;
    %403 = %399.1;
    %404 = %400.0;
    (%401, %var_9615, %402, %403, %404)
  };
  %405(%var_9639, %var_9640) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(192), float32], Tensor[(12, 2, 8), float64], Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */
}

def @func_8871(%var_8863: Tensor[(1, 6, 9), float64], %var_8864: Tensor[(8, 6, 9), float64]) -> (Tensor[(8, 6, 9), float64],) {
  %406 = cast(%var_8863, dtype="float64") /* ty=Tensor[(1, 6, 9), float64] */;
  %407 = cast(%var_8864, dtype="float64") /* ty=Tensor[(8, 6, 9), float64] */;
  %408 = mod(%406, %407) /* ty=Tensor[(8, 6, 9), float64] */;
  (%408,)
}

def @func_8982() -> Tensor[(8, 6, 10), float64] {
  %409 = fn () -> Tensor[(8, 6, 10), float64] {
    @func_5029() /* ty=Tensor[(8, 6, 10), float64] */
  };
  %409() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_12211(%var_12207: Tensor[(8, 11, 15), float32]) -> (Tensor[(8, 11, 15), float32],) {
  %410 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 15), float32] */;
  %411 = cast(%var_12207, dtype="float32") /* ty=Tensor[(8, 11, 15), float32] */;
  %412 = floor_mod(%410, %411) /* ty=Tensor[(8, 11, 15), float32] */;
  (%412,)
}

def @func_13152() -> (Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %420 = fn () -> (Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %413 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %414 = @func_6212() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %415 = @func_8796() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %416 = @func_6677() /* ty=Tensor[(12, 2, 8), int32] */;
    %417 = %413.0;
    %418 = %414.0;
    %419 = %415.0;
    (%416, %417, %418, %419)
  };
  %420() /* ty=(Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_17171() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) {
  %421 = @func_9896() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %422 = @func_11409() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %423 = %421.0;
  %424 = @func_15359() /* ty=Tensor[(8, 6, 10), float64] */;
  %425 = %422.0;
  (%423, %424, %425)
}

def @func_16943(%var_16941: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(405), float32]) {
  @func_16940(%var_16941) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(405), float32]) */
}

def @func_4317() -> Tensor[(8, 6, 10), float64] {
  @func_4315() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_14472() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %430 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %426 = @func_6761() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %427 = @func_8564() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %428 = %426.0;
    %429 = %427.1;
    (%428, %429)
  };
  %430() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_18898(%var_18853: Tensor[(234), float64], %var_18858: Tensor[(98), int16], %var_18859: Tensor[(78), float64], %var_18875: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(240), int16], Tensor[(13), float64], Tensor[(234), float64], Tensor[(78), float64], Tensor[(56), float64], Tensor[(98), int16], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32], Tensor[(405), int8]) {
  %431 = cast(meta[relay.Constant][20] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %432 = cast(meta[relay.Constant][21] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %433 = cast(%var_18853, dtype="float64") /* ty=Tensor[(234), float64] */;
  %434 = cast(meta[relay.Constant][22] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %435 = reshape(%431, newshape=[8, 30]) /* ty=Tensor[(8, 30), int16] */;
  %436 = reshape(%432, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %437 = reshape(%433, newshape=[78, 3]) /* ty=Tensor[(78, 3), float64] */;
  %438 = reshape(%434, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %439 = @func_8262(%435, %436, %437, %438) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 30), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(1008), uint16], Tensor[(3, 189), uint32], Tensor[(9, 5, 9), float64], Tensor[(1, 405), float32]) */;
  %440 = cast(meta[relay.Constant][23] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %441 = cast(%var_18858, dtype="int16") /* ty=Tensor[(98), int16] */;
  %442 = cast(%var_18859, dtype="float64") /* ty=Tensor[(78), float64] */;
  %443 = cast(meta[relay.Constant][22] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %444 = reshape(%440, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), float64] */;
  %445 = reshape(%441, newshape=[98]) /* ty=Tensor[(98), int16] */;
  %446 = reshape(%442, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %447 = reshape(%443, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %448 = @func_12488(%444, %445, %446, %447) /* ty=(Tensor[(2, 4, 7), uint64], Tensor[(7, 7, 2), int16], Tensor[(98), int16], Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(9, 9, 7), uint32], Tensor[(715), int8], Tensor[(405), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) */;
  %449 = @func_13809() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */;
  %450 = cast(%var_18875, dtype="int8") /* ty=Tensor[(405), int8] */;
  %451 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(405), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %452 = cast(meta[relay.Constant][22] /* ty=Tensor[(405), float32] */, dtype="int8") /* ty=Tensor[(405), int8] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?), int8] */;
  %454 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
  %455 = @func_5087() /* ty=Tensor[(8, 6, 10), float64] */;
  %456 = %439.0;
  %457 = %448.4;
  %458 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
  %459 = %449.0;
  %460 = logical_xor(%452, %453) /* ty=Tensor[(405), int8] */;
  (%454, %455, %456, meta[relay.Constant][20] /* ty=Tensor[(240), int16] */, meta[relay.Constant][21] /* ty=Tensor[(13), float64] */, %var_18853, %457, meta[relay.Constant][23] /* ty=Tensor[(56), float64] */, %var_18858, %var_18859, %458, %459, %460)
}

def @func_14533() -> Tensor[(8, 6, 10), float64] {
  %462 = fn () -> Tensor[(8, 6, 10), float64] {
    %461 = @func_9051() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %461.0
  };
  %462() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_5675() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) {
  @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */
}

def @func_4689() -> (Tensor[(8, 6, 10), float64],) {
  %465 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %463 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
    %464 = %463.0;
    (%464,)
  };
  %465() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_3945() -> Tensor[(8, 6, 10), float64] {
  %467 = fn () -> Tensor[(8, 6, 10), float64] {
    %466 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %466.0
  };
  %467() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_4559() -> (Tensor[(8, 6, 10), float64],) {
  @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_19653() -> Tensor[(8, 6, 10), float64] {
  %469 = fn () -> Tensor[(8, 6, 10), float64] {
    %468 = @func_11496() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %468.0
  };
  %469() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_7969() -> (Tensor[(8, 6, 10), float64],) {
  %472 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %470 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %471 = %470.0;
    (%471,)
  };
  %472() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_9007() -> (Tensor[(8, 6, 10), float64],) {
  %475 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %473 = @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
    %474 = %473.0;
    (%474,)
  };
  %475() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_11893(%var_11891: Tensor[(11, 7, 8), float64]) -> Tensor[(11, 7, 8), float64] {
  @func_11890(%var_11891) /* ty=Tensor[(11, 7, 8), float64] */
}

def @func_308(%var_306: Tensor[(9, 5, 9), float32]) -> (Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) {
  @func_305(%var_306) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */
}

def @func_8798() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  @func_8796() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_7138() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) {
  @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */
}

def @func_11232() -> (Tensor[(8, 6, 10), float64],) {
  @func_11230() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_11677() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32]) {
  %476 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %477 = cast(meta[relay.Constant][24] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %478 = reshape(%477, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %479 = @func_6012(%478) /* ty=(Tensor[(9, 5, 9), int16],) */;
  %480 = %476.0;
  %481 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
  %482 = %479.0;
  (%480, %481, %482, meta[relay.Constant][24] /* ty=Tensor[(405), float32] */)
}

def @func_13268(%var_13267: Tensor[(1, 405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(1, 405), float32]) {
  %491 = fn (%var_13247: Tensor[(1, 405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(1, 405), float32]) {
    %483 = @func_7968() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %484 = @func_10176() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %485 = cast(%var_13247, dtype="float32") /* ty=Tensor[(1, 405), float32] */;
    %486 = reshape(%485, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
    %487 = @func_305(%486) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
    %488 = %483.0;
    %489 = %484.0;
    %490 = %487.0;
    (%488, %489, %490, %var_13247)
  };
  %491(%var_13267) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(1, 405), float32]) */
}

def @func_15551(%var_15549: Tensor[(2, 7, 13), float64], %var_15550: Tensor[(567), uint32]) -> (Tensor[(2, 7, 13), float64], Tensor[(1008), uint16], Tensor[(567), uint32]) {
  %498 = fn (%var_15506: Tensor[(2, 7, 13), float64], %var_15526: Tensor[(567), uint32]) -> (Tensor[(2, 7, 13), float64], Tensor[(1008), uint16], Tensor[(567), uint32]) {
    %492 = cast(%var_15506, dtype="float64") /* ty=Tensor[(2, 7, 13), float64] */;
    %493 = cast(%var_15526, dtype="uint32") /* ty=Tensor[(567), uint32] */;
    %494 = reshape(%493, newshape=[567]) /* ty=Tensor[(567), uint32] */;
    %495 = @func_7667(%494) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
    %496 = cosh(%492) /* ty=Tensor[(2, 7, 13), float64] */;
    %497 = %495.3;
    (%496, %497, %var_15526)
  };
  %498(%var_15549, %var_15550) /* ty=(Tensor[(2, 7, 13), float64], Tensor[(1008), uint16], Tensor[(567), uint32]) */
}

def @func_17651() -> (Tensor[(8, 6, 10), float64],) {
  %500 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %499 = @func_6662() /* ty=Tensor[(8, 6, 10), float64] */;
    (%499,)
  };
  %500() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_15445() -> (Tensor[(2, 4, 7), float64],) {
  @func_15443() /* ty=(Tensor[(2, 4, 7), float64],) */
}

def @func_7751() -> Tensor[(8, 6, 10), int64] {
  %501 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %502 = %501.0;
  %503 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 6, 10), float64] */, dtype="int64") /* ty=Tensor[(8, 6, 10), int64] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="int64") /* ty=Tensor[(8, 6, 10), int64] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%505, %506) /* ty=Tensor[(8, 6, 10), int64] */
}

def @func_3906() -> (Tensor[(8, 6, 10), float64],) {
  %507 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %508 = sigmoid(%507) /* ty=Tensor[(8, 6, 10), float64] */;
  (%508,)
}

def @func_1641(%var_1639: Tensor[(26, 3), float64]) -> (Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) {
  @func_1638(%var_1639) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */
}

def @func_8099() -> (Tensor[(8, 6, 10), float64],) {
  %511 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %509 = @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %510 = %509.0;
    (%510,)
  };
  %511() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_9988() -> (Tensor[(78), float64],) {
  @func_9986() /* ty=(Tensor[(78), float64],) */
}

def @func_5440() -> (Tensor[(8, 6, 10), float64],) {
  %514 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %512 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %513 = %512.0;
    (%513,)
  };
  %514() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_12402() -> Tensor[(9, 5, 9), int16] {
  %515 = @func_11677() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32]) */;
  %515.2
}

def @func_1564(%var_1561: Tensor[(12, 2, 8), float32], %var_1562: Tensor[(12, 2, 8), float32], %var_1563: Tensor[(12, 2, 8), float64]) -> (Tensor[(12, 2, 8), int32],) {
  @func_1559(%var_1561, %var_1562, %var_1563) /* ty=(Tensor[(12, 2, 8), int32],) */
}

def @func_10176() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %516 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %517 = @func_9006() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %518 = %516.0;
  %519 = %517.0;
  (%518, %519)
}

def @func_15739() -> (Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64]) {
  %525 = fn () -> (Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64]) {
    %520 = @func_9385() /* ty=(Tensor[(8, 2, 3), float64], Tensor[(13), float64]) */;
    %521 = @func_9508() /* ty=(Tensor[(78), float64],) */;
    %522 = %520.1;
    %523 = %521.0;
    %524 = @func_14917() /* ty=Tensor[(8, 6, 10), float64] */;
    (%522, %523, %524)
  };
  %525() /* ty=(Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_8454(%var_8452: Tensor[(567), uint32], %var_8453: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(567), bool], Tensor[(567), int8], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), float64], Tensor[(8, 6, 10), float64], Tensor[(528), float64]) {
  @func_8450(%var_8452, %var_8453) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(567), bool], Tensor[(567), int8], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), float64], Tensor[(8, 6, 10), float64], Tensor[(528), float64]) */
}

def @func_4411() -> Tensor[(8, 6, 10), float64] {
  @func_3944() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_7045() -> (Tensor[(8, 6, 10), float32],) {
  %526 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %527 = %526.0;
  %528 = cast(%527, dtype="float32") /* ty=Tensor[(8, 6, 10), float32] */;
  %529 = atanh(%528) /* ty=Tensor[(8, 6, 10), float32] */;
  (%529,)
}

def @func_16322() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %537 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %530 = @func_7968() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %531 = @func_13780() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %532 = @func_16072() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %533 = %530.0;
    %534 = %531.0;
    %535 = @func_13553() /* ty=Tensor[(8, 6, 10), float64] */;
    %536 = %532.1;
    (%533, %534, %535, %536)
  };
  %537() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_14604(%var_14602: uint64, %var_14603: Tensor[(13, 10, 11), uint64]) -> (Tensor[(13, 10, 11), uint64], Tensor[(13, 10, 11), float64]) {
  %543 = fn (%var_14577: uint64, %var_14578: Tensor[(13, 10, 11), uint64]) -> (Tensor[(13, 10, 11), uint64], Tensor[(13, 10, 11), float64]) {
    %538 = cast(%var_14577, dtype="uint64") /* ty=uint64 */;
    %539 = cast(%var_14578, dtype="uint64") /* ty=Tensor[(13, 10, 11), uint64] */;
    %540 = cast(%var_14578, dtype="float64") /* ty=Tensor[(13, 10, 11), float64] */;
    %541 = left_shift(%538, %539) /* ty=Tensor[(13, 10, 11), uint64] */;
    %542 = rsqrt(%540) /* ty=Tensor[(13, 10, 11), float64] */;
    (%541, %542)
  };
  %543(%var_14602, %var_14603) /* ty=(Tensor[(13, 10, 11), uint64], Tensor[(13, 10, 11), float64]) */
}

def @func_14826(%var_14824: Tensor[(9, 6), float64], %var_14825: Tensor[(432), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 9), float64], Tensor[(9, 6), float64], Tensor[(432), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %559 = fn (%var_14794: Tensor[(9, 6), float64], %var_14795: Tensor[(432), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 9), float64], Tensor[(9, 6), float64], Tensor[(432), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %544 = cast(%var_14794, dtype="float64") /* ty=Tensor[(9, 6), float64] */;
    %545 = cast(%var_14795, dtype="float64") /* ty=Tensor[(432), float64] */;
    %546 = reshape(%544, newshape=[1, 6, 9]) /* ty=Tensor[(1, 6, 9), float64] */;
    %547 = reshape(%545, newshape=[8, 6, 9]) /* ty=Tensor[(8, 6, 9), float64] */;
    %548 = @func_8871(%546, %547) /* ty=(Tensor[(8, 6, 9), float64],) */;
    %549 = cast(meta[relay.Constant][27] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %550 = reshape(%549, newshape=[1008]) /* ty=Tensor[(1008), uint16] */;
    %551 = @func_11992(%550) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(1, 567), float32]) */;
    %552 = @func_9051() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %553 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
    %554 = %548.0;
    %555 = @func_6662() /* ty=Tensor[(8, 6, 10), float64] */;
    %556 = %551.1;
    %557 = %552.0;
    %558 = @func_6415() /* ty=Tensor[(8, 6, 10), float64] */;
    (%553, %554, %var_14794, %var_14795, %555, %556, meta[relay.Constant][27] /* ty=Tensor[(1008), uint16] */, %557, %558)
  };
  %559(%var_14824, %var_14825) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 9), float64], Tensor[(9, 6), float64], Tensor[(432), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_16667() -> Tensor[(8, 6, 10), float64] {
  @func_16665() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_634(%var_632: Tensor[(1, 1, 13), float64], %var_633: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) {
  @func_630(%var_632, %var_633) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */
}

def @func_12192() -> Tensor[(1, 13), float64] {
  %561 = fn () -> Tensor[(1, 13), float64] {
    %560 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
    %560.1
  };
  %561() /* ty=Tensor[(1, 13), float64] */
}

def @func_17258() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64]) {
  %562 = @func_7002() /* ty=(Tensor[(78), float64],) */;
  %563 = %562.0;
  %564 = @func_11291() /* ty=Tensor[(8, 6, 10), float64] */;
  (%563, %564)
}

def @func_18682(%var_18681: Tensor[(1, 11, 15), float64]) -> (Tensor[(1, 11, 15), float64], Tensor[(8, 6, 10), float64]) {
  %569 = fn (%var_18673: Tensor[(1, 11, 15), float64]) -> (Tensor[(1, 11, 15), float64], Tensor[(8, 6, 10), float64]) {
    %565 = cast(%var_18673, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
    %566 = @func_7968() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %567 = asinh(%565) /* ty=Tensor[(1, 11, 15), float64] */;
    %568 = %566.0;
    (%567, %568)
  };
  %569(%var_18681) /* ty=(Tensor[(1, 11, 15), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_16422() -> Tensor[(8, 6, 10), float32] {
  @func_16420() /* ty=Tensor[(8, 6, 10), float32] */
}

def @func_3941() -> Tensor[(8, 6, 10), float64] {
  @func_3939() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_16523(%var_16521: Tensor[(54), float64], %var_16522: Tensor[(432), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567, 1), uint32], Tensor[(9, 6), float64], Tensor[(54), float64], Tensor[(432), float64], Tensor[(8, 6, 10), float64]) {
  %588 = fn (%var_16508: Tensor[(54), float64], %var_16509: Tensor[(432), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567, 1), uint32], Tensor[(9, 6), float64], Tensor[(54), float64], Tensor[(432), float64], Tensor[(8, 6, 10), float64]) {
    %570 = @func_14641() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %571 = cast(meta[relay.Constant][28] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %572 = cast(meta[relay.Constant][29] /* ty=Tensor[(567, 1), uint32] */, dtype="uint32") /* ty=Tensor[(567, 1), uint32] */;
    %573 = reshape(%571, newshape=[1008]) /* ty=Tensor[(1008), uint16] */;
    %574 = reshape(%572, newshape=[567]) /* ty=Tensor[(567), uint32] */;
    %575 = @func_7551(%573, %574) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
    %576 = cast(%var_16508, dtype="float64") /* ty=Tensor[(54), float64] */;
    %577 = cast(%var_16509, dtype="float64") /* ty=Tensor[(432), float64] */;
    %578 = reshape(%576, newshape=[9, 6]) /* ty=Tensor[(9, 6), float64] */;
    %579 = reshape(%577, newshape=[432]) /* ty=Tensor[(432), float64] */;
    %580 = @func_14823(%578, %579) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 9), float64], Tensor[(9, 6), float64], Tensor[(432), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %581 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %582 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
    %583 = @func_14532() /* ty=Tensor[(8, 6, 10), float64] */;
    %584 = %570.0;
    %585 = %575.3;
    %586 = %580.2;
    %587 = %581.0;
    (%582, %583, %584, %585, meta[relay.Constant][28] /* ty=Tensor[(1008), uint16] */, meta[relay.Constant][29] /* ty=Tensor[(567, 1), uint32] */, %586, %var_16508, %var_16509, %587)
  };
  %588(%var_16521, %var_16522) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567, 1), uint32], Tensor[(9, 6), float64], Tensor[(54), float64], Tensor[(432), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_6437() -> (Tensor[(8, 6, 10), float64],) {
  %591 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %589 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %590 = %589.0;
    (%590,)
  };
  %591() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_9206() -> Tensor[(192), float32] {
  %592 = @func_6471() /* ty=(Tensor[(192), float32], Tensor[(8, 6, 10), float32], Tensor[(13), float64]) */;
  %592.0
}

def @func_16471() -> Tensor[(8, 6, 10), float64] {
  %593 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %593.0
}

def @func_11230() -> (Tensor[(8, 6, 10), float64],) {
  %594 = @func_5087() /* ty=Tensor[(8, 6, 10), float64] */;
  (%594,)
}

def @func_11487() -> (Tensor[(8, 6, 10), float64], Tensor[(26, 3), float64], Tensor[(78), float64]) {
  %595 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %596 = @func_8085() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */;
  %597 = @func_9508() /* ty=(Tensor[(78), float64],) */;
  %598 = %595.0;
  %599 = %596.4;
  %600 = %597.0;
  (%598, %599, %600)
}

def @func_4326() -> (Tensor[(8, 6, 10), float64],) {
  %601 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
  (%601,)
}

def @func_12708() -> Tensor[(12, 2, 8), int32] {
  @func_6677() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_5087() -> Tensor[(8, 6, 10), float64] {
  @func_4937() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_8450(%var_8398: Tensor[(567), uint32], %var_8406: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(567), bool], Tensor[(567), int8], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), float64], Tensor[(8, 6, 10), float64], Tensor[(528), float64]) {
  %602 = @func_6761() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %603 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %604 = cast(%var_8398, dtype="bool") /* ty=Tensor[(567), bool] */;
  %605 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(567), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %606 = cast(meta[relay.Constant][30] /* ty=Tensor[(567), uint32] */, dtype="bool") /* ty=Tensor[(567), bool] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?), bool] */;
  %608 = cast(%var_8406, dtype="int8") /* ty=Tensor[(567), int8] */;
  %609 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(567), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %610 = cast(meta[relay.Constant][30] /* ty=Tensor[(567), uint32] */, dtype="int8") /* ty=Tensor[(567), int8] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?), int8] */;
  %612 = @func_6436() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %613 = cast(meta[relay.Constant][30] /* ty=Tensor[(567), uint32] */, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %614 = reshape(%613, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %615 = @func_7667(%614) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
  %616 = %615.2;
  %617 = cast(%616, dtype="float64") /* ty=Tensor[(7, 9, 16), float64] */;
  %618 = @func_8152() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %619 = %602.0;
  %620 = %603.0;
  %621 = greater_equal(%606, %607) /* ty=Tensor[(567), bool] */;
  %622 = add(%610, %611) /* ty=Tensor[(567), int8] */;
  %623 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
  %624 = %612.0;
  %625 = asin(%617) /* ty=Tensor[(7, 9, 16), float64] */;
  %626 = %618.1;
  %627 = @func_6391() /* ty=Tensor[(528), float64] */;
  (%619, %620, %621, %622, %623, %624, %625, %626, %627)
}

def @func_15133() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %632 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %628 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %629 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %630 = %628.0;
    %631 = %629.0;
    (%630, %631)
  };
  %632() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_18927() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64]) {
  @func_18925() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_4230() -> (Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) {
  %648 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) {
    %633 = cast(meta[relay.Constant][33] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %634 = reshape(%633, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), float64] */;
    %635 = @func_2373(%634) /* ty=(Tensor[(12, 4, 11), float64],) */;
    %636 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
    %637 = cast(meta[relay.Constant][32] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %638 = reshape(%636, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
    %639 = reshape(%637, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
    %640 = @func_630(%638, %639) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */;
    %641 = %640.0;
    %642 = cast(%641, dtype="float32") /* ty=Tensor[(3, 2, 13), float32] */;
    %643 = tan(%642) /* ty=Tensor[(3, 2, 13), float32] */;
    %644 = cast(%643, dtype="float64") /* ty=Tensor[(3, 2, 13), float64] */;
    %645 = @func_3939() /* ty=Tensor[(8, 6, 10), float64] */;
    %646 = %635.0;
    %647 = rsqrt(%644) /* ty=Tensor[(3, 2, 13), float64] */;
    (%645, meta[relay.Constant][31] /* ty=Tensor[(1, 13), float64] */, meta[relay.Constant][32] /* ty=Tensor[(78), float64] */, %646, meta[relay.Constant][33] /* ty=Tensor[(528), float64] */, %647)
  };
  %648() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */
}

def @func_4646() -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) {
  @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */
}

def @func_14677() -> (Tensor[(8, 6, 10), float64],) {
  %651 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %649 = @func_14471() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %650 = %649.1;
    (%650,)
  };
  %651() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_18272() -> (Tensor[(8, 6, 10), int64],) {
  %652 = @func_17224() /* ty=(Tensor[(8, 6, 10), int64], Tensor[(2, 4, 7), float64]) */;
  %653 = %652.0;
  (%653,)
}

def @func_13525() -> Tensor[(12, 2, 8), int32] {
  @func_6677() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_4388(%var_4386: Tensor[(567, 1), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(78), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567, 1), uint32]) {
  @func_4385(%var_4386) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(78), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567, 1), uint32]) */
}

def @func_19379(%var_19378: Tensor[(11, 15, 12), float64]) -> (Tensor[(11, 15, 12), float64], Tensor[(8, 6, 10), float64]) {
  %658 = fn (%var_19349: Tensor[(11, 15, 12), float64]) -> (Tensor[(11, 15, 12), float64], Tensor[(8, 6, 10), float64]) {
    %654 = cast(%var_19349, dtype="float64") /* ty=Tensor[(11, 15, 12), float64] */;
    %655 = @func_19020() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %656 = log10(%654) /* ty=Tensor[(11, 15, 12), float64] */;
    %657 = %655.0;
    (%656, %657)
  };
  %658(%var_19378) /* ty=(Tensor[(11, 15, 12), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_11291() -> Tensor[(8, 6, 10), float64] {
  @func_6415() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_19686() -> Tensor[(8, 6, 10), float64] {
  %660 = fn () -> Tensor[(8, 6, 10), float64] {
    %659 = @func_11397() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
    %659.0
  };
  %660() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_4315() -> Tensor[(8, 6, 10), float64] {
  @func_3939() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_12568() -> (Tensor[(2, 4, 7), float64],) {
  @func_12566() /* ty=(Tensor[(2, 4, 7), float64],) */
}

def @func_4009(%var_4006: Tensor[(7, 9, 16), uint16], %var_4007: Tensor[(7, 9, 16), uint16], %var_4008: Tensor[(567), uint32]) -> (Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) {
  @func_4004(%var_4006, %var_4007, %var_4008) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */
}

def @func_6761() -> (Tensor[(8, 6, 10), float64],) {
  %661 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
  (%661,)
}

def @func_8153() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %665 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %662 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %663 = %662.0;
    %664 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
    (%663, %664)
  };
  %665() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_14643() -> (Tensor[(8, 6, 10), float64],) {
  @func_14641() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_5673() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) {
  %666 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %667 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %668 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
  %669 = %668.3;
  %670 = cast(%669, dtype="float64") /* ty=Tensor[(12, 4, 11), float64] */;
  %671 = %666.0;
  %672 = %667.1;
  %673 = cos(%670) /* ty=Tensor[(12, 4, 11), float64] */;
  (%671, %672, %673)
}

def @func_10329() -> (Tensor[(8, 6, 10), float64], uint64, Tensor[(21, 6), uint16], uint64) {
  @func_10327() /* ty=(Tensor[(8, 6, 10), float64], uint64, Tensor[(21, 6), uint16], uint64) */
}

def @func_9321() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  %674 = @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %675 = %674.1;
  %676 = @func_4315() /* ty=Tensor[(8, 6, 10), float64] */;
  (%675, %676)
}

def @func_19095() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %679 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %677 = @func_16665() /* ty=Tensor[(8, 6, 10), float64] */;
    %678 = @func_16471() /* ty=Tensor[(8, 6, 10), float64] */;
    (%677, %678)
  };
  %679() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_14755() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %684 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %680 = @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %681 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %682 = %680.0;
    %683 = %681.0;
    (%682, %683)
  };
  %684() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_8545() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) {
  @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */
}

def @func_19597() -> (Tensor[(12, 4, 11), float64],) {
  %685 = @func_12945() /* ty=Tensor[(12, 4, 11), float64] */;
  (%685,)
}

def @func_19527() -> (Tensor[(8, 6, 10), float64], Tensor[(78), float32]) {
  @func_19525() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float32]) */
}

def @func_4004(%var_3962: Tensor[(7, 9, 16), uint16], %var_3963: Tensor[(7, 9, 16), uint16], %var_3977: Tensor[(567), uint32]) -> (Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) {
  %686 = cast(%var_3963, dtype="bool") /* ty=Tensor[(7, 9, 16), bool] */;
  %687 = shape_of(%var_3962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%var_3962, dtype="bool") /* ty=Tensor[(7, 9, 16), bool] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %690 = cast(%var_3977, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %691 = reshape(%690, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint32] */;
  %692 = @func_1145(%691) /* ty=Tensor[(9, 9, 7), uint32] */;
  %693 = cast(%692, dtype="float64") /* ty=Tensor[(9, 9, 7), float64] */;
  %694 = greater(%688, %689) /* ty=Tensor[(7, 9, 16), bool] */;
  %695 = asin(%693) /* ty=Tensor[(9, 9, 7), float64] */;
  (%694, %var_3977, %695)
}

def @func_17872() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 6), bool], uint64, Tensor[(72), uint64], Tensor[(9, 5, 9), float64], Tensor[(78, 1), float64], Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(78), float64]) {
  %716 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 6), bool], uint64, Tensor[(72), uint64], Tensor[(9, 5, 9), float64], Tensor[(78, 1), float64], Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(78), float64]) {
    %696 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %697 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
    %698 = cast(meta[relay.Constant][34] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %699 = cast(meta[relay.Constant][35] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %700 = reshape(%698, newshape=[]) /* ty=uint64 */;
    %701 = reshape(%699, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), uint64] */;
    %702 = @func_2598(%700, %701) /* ty=(Tensor[(12, 2, 6), bool], Tensor[(12, 2, 6), bool]) */;
    %703 = cast(meta[relay.Constant][36] /* ty=Tensor[(78, 1), float64] */, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
    %704 = reshape(%703, newshape=[78]) /* ty=Tensor[(78), float64] */;
    %705 = @func_5351(%704) /* ty=(Tensor[(8, 6, 10), bool], Tensor[(9, 5, 9), float32], Tensor[(240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(9, 5, 9), float64]) */;
    %706 = @func_14376() /* ty=(Tensor[(8, 6, 10), float32],) */;
    %707 = @func_5520() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %708 = @func_17258() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64]) */;
    %709 = %696.1;
    %710 = %697.4;
    %711 = %702.0;
    %712 = %705.5;
    %713 = %706.0;
    %714 = %707.0;
    %715 = %708.0;
    (%709, %710, %711, meta[relay.Constant][34] /* ty=uint64 */, meta[relay.Constant][35] /* ty=Tensor[(72), uint64] */, %712, meta[relay.Constant][36] /* ty=Tensor[(78, 1), float64] */, %713, %714, %715)
  };
  %716() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 6), bool], uint64, Tensor[(72), uint64], Tensor[(9, 5, 9), float64], Tensor[(78, 1), float64], Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(78), float64]) */
}

def @func_16249() -> (Tensor[(8, 6, 10), float64],) {
  @func_16247() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_16859() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %720 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %717 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %718 = @func_16689() /* ty=Tensor[(8, 6, 10), float64] */;
    %719 = %717.0;
    (%718, %719)
  };
  %720() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_10983(%var_10981: Tensor[(5, 1, 16), float64], %var_10982: Tensor[(528), float64]) -> (Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(8, 6, 10), float64], Tensor[(5, ?, 16), float32]) {
  @func_10979(%var_10981, %var_10982) /* ty=(Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(8, 6, 10), float64], Tensor[(5, ?, 16), float32]) */
}

def @func_13404() -> Tensor[(12, 2, 8), int32] {
  @func_6677() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_13809() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  %721 = @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %722 = %721.1;
  %723 = @func_5087() /* ty=Tensor[(8, 6, 10), float64] */;
  (%722, %723)
}

def @func_7340() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  @func_7338() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_16645() -> (Tensor[(234), float64], Tensor[(8, 6, 10), float64], Tensor[(1008), uint16], Tensor[(1, 13), float64]) {
  @func_16643() /* ty=(Tensor[(234), float64], Tensor[(8, 6, 10), float64], Tensor[(1008), uint16], Tensor[(1, 13), float64]) */
}

def @func_7431() -> (Tensor[(8, 6, 10), float64],) {
  %726 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %724 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %725 = %724.0;
    (%725,)
  };
  %726() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_4413() -> Tensor[(8, 6, 10), float64] {
  @func_4411() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_6727(%var_6692: Tensor[(14, 3, 3), uint16], %var_6693: Tensor[(14, 3, 3), uint16], %var_6717: uint64) -> (Tensor[(14, 3, 3), uint16], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 6), bool], uint64, Tensor[(6, 12), uint64]) {
  %727 = cast(%var_6693, dtype="uint16") /* ty=Tensor[(14, 3, 3), uint16] */;
  %728 = shape_of(%var_6692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%var_6692, dtype="uint16") /* ty=Tensor[(14, 3, 3), uint16] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %731 = @func_5378() /* ty=(Tensor[(12, 2, 8), int32],) */;
  %732 = cast(%var_6717, dtype="uint64") /* ty=uint64 */;
  %733 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 12), uint64] */, dtype="uint64") /* ty=Tensor[(6, 12), uint64] */;
  %734 = reshape(%732, newshape=[]) /* ty=uint64 */;
  %735 = reshape(%733, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), uint64] */;
  %736 = @func_2598(%734, %735) /* ty=(Tensor[(12, 2, 6), bool], Tensor[(12, 2, 6), bool]) */;
  %737 = logical_xor(%729, %730) /* ty=Tensor[(14, 3, 3), uint16] */;
  %738 = %731.0;
  %739 = @func_4315() /* ty=Tensor[(8, 6, 10), float64] */;
  %740 = %736.0;
  (%737, %738, %739, %740, %var_6717, meta[relay.Constant][37] /* ty=Tensor[(6, 12), uint64] */)
}

def @func_6584(%var_6581: Tensor[(2, 10, 3), int16], %var_6582: Tensor[(2, 10, 3), int16], %var_6583: Tensor[(480), float64]) -> (Tensor[(2, 10, 3), bool], Tensor[(8, 6, 10), bool], Tensor[(480), float64]) {
  %750 = fn (%var_6570: Tensor[(2, 10, 3), int16], %var_6571: Tensor[(2, 10, 3), int16], %var_6578: Tensor[(480), float64]) -> (Tensor[(2, 10, 3), bool], Tensor[(8, 6, 10), bool], Tensor[(480), float64]) {
    %741 = cast(%var_6571, dtype="bool") /* ty=Tensor[(2, 10, 3), bool] */;
    %742 = shape_of(%var_6570, dtype="int32") /* ty=Tensor[(3), int32] */;
    %743 = cast(%var_6570, dtype="bool") /* ty=Tensor[(2, 10, 3), bool] */;
    %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %745 = cast(%var_6578, dtype="float64") /* ty=Tensor[(480), float64] */;
    %746 = reshape(%745, newshape=[8, 6, 10]) /* ty=Tensor[(8, 6, 10), float64] */;
    %747 = @func_5708(%746) /* ty=(Tensor[(8, 6, 10), bool],) */;
    %748 = less_equal(%743, %744) /* ty=Tensor[(2, 10, 3), bool] */;
    %749 = %747.0;
    (%748, %749, %var_6578)
  };
  %750(%var_6581, %var_6582, %var_6583) /* ty=(Tensor[(2, 10, 3), bool], Tensor[(8, 6, 10), bool], Tensor[(480), float64]) */
}

def @func_14290() -> (Tensor[(8, 6, 10), float64],) {
  @func_14288() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_12946() -> Tensor[(12, 4, 11), float64] {
  %752 = fn () -> Tensor[(12, 4, 11), float64] {
    %751 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
    %751.2
  };
  %752() /* ty=Tensor[(12, 4, 11), float64] */
}

def @func_13763() -> Tensor[(8, 6, 10), float64] {
  %753 = @func_8098() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %753.0
}

def @func_12096() -> Tensor[(8, 6, 10), float32] {
  %755 = fn () -> Tensor[(8, 6, 10), float32] {
    %754 = @func_9896() /* ty=(Tensor[(8, 6, 10), float32],) */;
    %754.0
  };
  %755() /* ty=Tensor[(8, 6, 10), float32] */
}

def @func_11227() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) {
  %763 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) {
    %756 = @func_9051() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %757 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
    %758 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
    %759 = %756.0;
    %760 = %757.0;
    %761 = @func_6415() /* ty=Tensor[(8, 6, 10), float64] */;
    %762 = %758.3;
    (%759, %760, %761, %762)
  };
  %763() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */
}

def @func_4385(%var_4379: Tensor[(567, 1), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(78), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567, 1), uint32]) {
  %764 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %765 = cast(meta[relay.Constant][38] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %766 = reshape(%765, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %767 = @func_1638(%766) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
  %768 = cast(meta[relay.Constant][39] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %769 = cast(meta[relay.Constant][39] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %770 = cast(%var_4379, dtype="uint32") /* ty=Tensor[(567, 1), uint32] */;
  %771 = reshape(%768, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %772 = reshape(%769, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
  %773 = reshape(%770, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %774 = @func_4004(%771, %772, %773) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */;
  %775 = %764.0;
  %776 = %767.5;
  %777 = %774.0;
  (%775, %776, meta[relay.Constant][38] /* ty=Tensor[(78), float64] */, %777, meta[relay.Constant][39] /* ty=Tensor[(1008), uint16] */, %var_4379)
}

def @func_15038(%var_15037: Tensor[(11, 1, 13), float64]) -> (Tensor[(11, 1, 13), float64], Tensor[(8, 6, 10), float64]) {
  %781 = fn (%var_15017: Tensor[(11, 1, 13), float64]) -> (Tensor[(11, 1, 13), float64], Tensor[(8, 6, 10), float64]) {
    %778 = cast(%var_15017, dtype="float64") /* ty=Tensor[(11, 1, 13), float64] */;
    %779 = sqrt(%778) /* ty=Tensor[(11, 1, 13), float64] */;
    %780 = @func_6415() /* ty=Tensor[(8, 6, 10), float64] */;
    (%779, %780)
  };
  %781(%var_15037) /* ty=(Tensor[(11, 1, 13), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_19584(%var_19582: Tensor[(8, 5, 7), int8], %var_19583: Tensor[(8, 5, 7), int8]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 5, 7), float32], Tensor[(8, 5, 7), float32]) {
  %798 = fn (%var_19531: Tensor[(8, 5, 7), int8], %var_19532: Tensor[(8, 5, 7), int8]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 5, 7), float32], Tensor[(8, 5, 7), float32]) {
    %782 = @func_14423() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %783 = cast(%var_19532, dtype="int8") /* ty=Tensor[(8, 5, 7), int8] */;
    %784 = shape_of(%var_19531, dtype="int32") /* ty=Tensor[(3), int32] */;
    %785 = cast(%var_19531, dtype="int8") /* ty=Tensor[(8, 5, 7), int8] */;
    %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %787 = right_shift(%785, %786) /* ty=Tensor[(8, 5, 7), int8] */;
    %788 = cast(%787, dtype="float32") /* ty=Tensor[(8, 5, 7), float32] */;
    %789 = shape_of(%var_19532, dtype="int32") /* ty=Tensor[(3), int32] */;
    %790 = cast(%var_19532, dtype="float32") /* ty=Tensor[(8, 5, 7), float32] */;
    %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %792 = cast(%var_19531, dtype="float64") /* ty=Tensor[(8, 5, 7), float64] */;
    %793 = log2(%792) /* ty=Tensor[(8, 5, 7), float64] */;
    %794 = cast(%793, dtype="float32") /* ty=Tensor[(8, 5, 7), float32] */;
    %795 = %782.1;
    %796 = floor_mod(%790, %791) /* ty=Tensor[(8, 5, 7), float32] */;
    %797 = atanh(%794) /* ty=Tensor[(8, 5, 7), float32] */;
    (%795, %796, %797)
  };
  %798(%var_19582, %var_19583) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 5, 7), float32], Tensor[(8, 5, 7), float32]) */
}

def @func_14074(%var_14049: Tensor[(9, 45), float32], %var_14050: Tensor[(13), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(13), float64], Tensor[(13, 55), int8], Tensor[(9, 45), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) {
  %799 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 55), int8] */, dtype="int8") /* ty=Tensor[(13, 55), int8] */;
  %800 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 55), int8] */, dtype="int8") /* ty=Tensor[(13, 55), int8] */;
  %801 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 55), int8] */, dtype="int8") /* ty=Tensor[(13, 55), int8] */;
  %802 = cast(%var_14049, dtype="float32") /* ty=Tensor[(9, 45), float32] */;
  %803 = cast(%var_14050, dtype="float64") /* ty=Tensor[(13), float64] */;
  %804 = reshape(%799, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %805 = reshape(%800, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %806 = reshape(%801, newshape=[5, 13, 11]) /* ty=Tensor[(5, 13, 11), int8] */;
  %807 = reshape(%802, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %808 = reshape(%803, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %809 = @func_11570(%804, %805, %806, %807, %808) /* ty=(Tensor[(9, 9, 7), uint32], Tensor[(63, 9), uint32], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(405), float32], Tensor[(1, 240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(5, 13, 11), bool]) */;
  %810 = @func_11770() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %811 = @func_6415() /* ty=Tensor[(8, 6, 10), float64] */;
  %812 = %809.6;
  %813 = %810.0;
  (%811, %812, meta[relay.Constant][40] /* ty=Tensor[(13, 55), int8] */, %var_14049, %var_14050, %813)
}

def @func_18472() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(192), float32]) {
  %819 = fn () -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(192), float32]) {
    %814 = @func_12525() /* ty=(Tensor[(8, 6, 10), float32],) */;
    %815 = @func_17192() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %816 = %814.0;
    %817 = %815.0;
    %818 = @func_5993() /* ty=Tensor[(192), float32] */;
    (%816, %817, %818)
  };
  %819() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(192), float32]) */
}

def @func_5837(%var_5836: Tensor[(405), float32]) -> (Tensor[(192), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) {
  %834 = fn (%var_5825: Tensor[(405), float32]) -> (Tensor[(192), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) {
    %820 = @func_4714() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */;
    %821 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
    %822 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %823 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %824 = cast(%var_5825, dtype="float32") /* ty=Tensor[(405), float32] */;
    %825 = reshape(%824, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
    %826 = @func_305(%825) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
    %827 = @func_5520() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %828 = %820.2;
    %829 = %821.0;
    %830 = %822.0;
    %831 = %823.0;
    %832 = %826.0;
    %833 = %827.0;
    (%828, %829, %830, %831, %832, %var_5825, %833)
  };
  %834(%var_5836) /* ty=(Tensor[(192), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) */
}

def @func_13811() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  @func_13809() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */
}

def @func_11926() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %835 = @func_11135() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %836 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
  %837 = %835.1;
  %838 = %836.0;
  (%837, %838)
}

def @func_9387() -> (Tensor[(8, 2, 3), float64], Tensor[(13), float64]) {
  @func_9385() /* ty=(Tensor[(8, 2, 3), float64], Tensor[(13), float64]) */
}

def @func_13527() -> Tensor[(12, 2, 8), int32] {
  @func_13525() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_5031() -> Tensor[(8, 6, 10), float64] {
  @func_5029() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_6763() -> (Tensor[(8, 6, 10), float64],) {
  @func_6761() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_12050() -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(13, 6), float64], Tensor[(8, 6, 10), float64]) {
  %846 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(13, 6), float64], Tensor[(8, 6, 10), float64]) {
    %839 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 6), float64] */, dtype="float64") /* ty=Tensor[(13, 6), float64] */;
    %840 = reshape(%839, newshape=[78]) /* ty=Tensor[(78), float64] */;
    %841 = @func_11820(%840) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(78), float64]) */;
    %842 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %843 = @func_6792() /* ty=Tensor[(8, 6, 10), float64] */;
    %844 = %841.1;
    %845 = %842.0;
    (%843, %844, meta[relay.Constant][41] /* ty=Tensor[(13, 6), float64] */, %845)
  };
  %846() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(13, 6), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_630(%var_600: Tensor[(1, 1, 13), float64], %var_601: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) {
  %847 = cast(%var_600, dtype="bool") /* ty=Tensor[(1, 1, 13), bool] */;
  %848 = cast(%var_601, dtype="bool") /* ty=Tensor[(3, 2, 13), bool] */;
  %849 = cast(meta[relay.Constant][42] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %850 = reshape(%849, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %851 = @func_305(%850) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %852 = not_equal(%847, %848) /* ty=Tensor[(3, 2, 13), bool] */;
  %853 = %851.1;
  (%852, %853, meta[relay.Constant][42] /* ty=Tensor[(405), float32] */)
}

def @func_9898() -> (Tensor[(8, 6, 10), float32],) {
  @func_9896() /* ty=(Tensor[(8, 6, 10), float32],) */
}

def @func_11489() -> (Tensor[(8, 6, 10), float64], Tensor[(26, 3), float64], Tensor[(78), float64]) {
  @func_11487() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(26, 3), float64], Tensor[(78), float64]) */
}

def @func_16940(%var_16925: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(405), float32], Tensor[(405), float32]) {
  %854 = @func_6530() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */;
  %855 = cast(%var_16925, dtype="float32") /* ty=Tensor[(405), float32] */;
  %856 = reshape(%855, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %857 = @func_15258(%856) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %858 = %854.1;
  %859 = %857.3;
  (%858, %859, %var_16925)
}

def @func_4598() -> (Tensor[(8, 6, 10), float64],) {
  %860 = @func_4411() /* ty=Tensor[(8, 6, 10), float64] */;
  (%860,)
}

def @func_16073() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %865 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %861 = @func_7958() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %862 = @func_13151() /* ty=(Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %863 = %861.0;
    %864 = %862.2;
    (%863, %864)
  };
  %865() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_5708(%var_5690: Tensor[(8, 6, 10), float64]) -> (Tensor[(8, 6, 10), bool],) {
  %866 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %867 = %866.0;
  %868 = cast(%var_5690, dtype="bool") /* ty=Tensor[(8, 6, 10), bool] */;
  %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%867, dtype="bool") /* ty=Tensor[(8, 6, 10), bool] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %872 = equal(%870, %871) /* ty=Tensor[(8, 6, 10), bool] */;
  (%872,)
}

def @func_6392() -> Tensor[(528), float64] {
  %874 = fn () -> Tensor[(528), float64] {
    %873 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
    %873.4
  };
  %874() /* ty=Tensor[(528), float64] */
}

def @func_11890(%var_11883: Tensor[(11, 7, 8), float64]) -> Tensor[(11, 7, 8), float64] {
  %875 = cast(%var_11883, dtype="float64") /* ty=Tensor[(11, 7, 8), float64] */;
  sqrt(%875) /* ty=Tensor[(11, 7, 8), float64] */
}

def @func_9678() -> (Tensor[(2, 4, 7), float64],) {
  %876 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 4, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %877 = acos(%876) /* ty=Tensor[(2, 4, 7), float64] */;
  (%877,)
}

def @func_17173() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) {
  @func_17171() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */
}

def @main(%var_19710: Tensor[(4, 5, 13), float64]) -> Tensor[(4, 5, 13), float64] {
  %878 = cast(%var_19710, dtype="float64") /* ty=Tensor[(4, 5, 13), float64] */;
  log2(%878) /* ty=Tensor[(4, 5, 13), float64] */
}

def @func_7753() -> Tensor[(8, 6, 10), int64] {
  @func_7751() /* ty=Tensor[(8, 6, 10), int64] */
}

def @func_18331() -> (Tensor[(8, 6, 10), float64],) {
  %879 = @func_6212() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %880 = %879.0;
  (%880,)
}

def @func_3939() -> Tensor[(8, 6, 10), float64] {
  %881 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %881.0
}

def @func_582(%var_561: Tensor[(1, 14, 9), float64], %var_562: Tensor[(11, 14, 9), float64]) -> (Tensor[(11, 14, 9), float64],) {
  %882 = cast(%var_561, dtype="float64") /* ty=Tensor[(1, 14, 9), float64] */;
  %883 = cast(%var_562, dtype="float64") /* ty=Tensor[(11, 14, 9), float64] */;
  %884 = floor_divide(%882, %883) /* ty=Tensor[(11, 14, 9), float64] */;
  (%884,)
}

def @func_6689() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %885 = @func_6436() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %886 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %887 = %885.0;
  %888 = %886.0;
  (%887, %888)
}

def @func_11155() -> Tensor[(8, 6, 10), float64] {
  %889 = fn () -> Tensor[(8, 6, 10), float64] {
    @func_9783() /* ty=Tensor[(8, 6, 10), float64] */
  };
  %889() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_17038() -> (Tensor[(8, 6, 10), float64],) {
  %890 = @func_6761() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %891 = %890.0;
  (%891,)
}

def @func_10024() -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32]) {
  %894 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32]) {
    %892 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
    %893 = @func_6677() /* ty=Tensor[(12, 2, 8), int32] */;
    (%892, %893)
  };
  %894() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32]) */
}

def @func_11409() -> (Tensor[(8, 6, 10), float32],) {
  %895 = @func_6530() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */;
  %896 = %895.0;
  (%896,)
}

def @func_14918() -> Tensor[(8, 6, 10), float64] {
  %898 = fn () -> Tensor[(8, 6, 10), float64] {
    %897 = @func_14641() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %897.0
  };
  %898() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_15492() -> (Tensor[(8, 6, 10), int16], Tensor[(405), float32], Tensor[(8, 6, 10), float64]) {
  %899 = @func_7881() /* ty=(Tensor[(8, 6, 10), int16], Tensor[(8, 6, 10), float64]) */;
  %900 = @func_11677() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), int16], Tensor[(405), float32]) */;
  %901 = %899.0;
  %902 = %900.3;
  %903 = @func_11866() /* ty=Tensor[(8, 6, 10), float64] */;
  (%901, %902, %903)
}

def @func_6677() -> Tensor[(12, 2, 8), int32] {
  %904 = @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */;
  %904.1
}

def @func_7136() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) {
  %905 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %906 = @func_7045() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %907 = %905.0;
  %908 = %906.0;
  (%907, %908)
}

def @func_13393() -> Tensor[(8, 6, 10), float64] {
  @func_13391() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_2601(%var_2599: uint64, %var_2600: Tensor[(12, 1, 6), uint64]) -> (Tensor[(12, 2, 6), bool], Tensor[(12, 2, 6), bool]) {
  %918 = fn (%var_2566: uint64, %var_2567: Tensor[(12, 1, 6), uint64]) -> (Tensor[(12, 2, 6), bool], Tensor[(12, 2, 6), bool]) {
    %909 = cast(%var_2566, dtype="uint64") /* ty=uint64 */;
    %910 = cast(%var_2567, dtype="uint64") /* ty=Tensor[(12, 1, 6), uint64] */;
    %911 = add(%909, %910) /* ty=Tensor[(12, 1, 6), uint64] */;
    %912 = cast(%911, dtype="bool") /* ty=Tensor[(12, 1, 6), bool] */;
    %913 = cast(meta[relay.Constant][44] /* ty=Tensor[(12, 2, 6), uint64] */, dtype="bool") /* ty=Tensor[(12, 2, 6), bool] */;
    %914 = cast(meta[relay.Constant][44] /* ty=Tensor[(12, 2, 6), uint64] */, dtype="bool") /* ty=Tensor[(12, 2, 6), bool] */;
    %915 = cast(%911, dtype="bool") /* ty=Tensor[(12, 1, 6), bool] */;
    %916 = greater(%912, %913) /* ty=Tensor[(12, 2, 6), bool] */;
    %917 = greater_equal(%914, %915) /* ty=Tensor[(12, 2, 6), bool] */;
    (%916, %917)
  };
  %918(%var_2599, %var_2600) /* ty=(Tensor[(12, 2, 6), bool], Tensor[(12, 2, 6), bool]) */
}

def @func_17021() -> (Tensor[(8, 6, 10), float64],) {
  %921 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %919 = @func_12632() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %920 = %919.0;
    (%920,)
  };
  %921() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_11398() -> (Tensor[(8, 6, 10), float64], Tensor[(405), float32]) {
  %925 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(405), float32]) {
    %922 = @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */;
    %923 = @func_6415() /* ty=Tensor[(8, 6, 10), float64] */;
    %924 = %922.2;
    (%923, %924)
  };
  %925() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */
}

def @func_6664() -> Tensor[(8, 6, 10), float64] {
  @func_6662() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_6212() -> (Tensor[(8, 6, 10), float64],) {
  %926 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  (%926,)
}

def @func_6794() -> Tensor[(8, 6, 10), float64] {
  @func_6792() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_13030() -> (Tensor[(8, 6, 10), float64],) {
  @func_13028() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_6679() -> Tensor[(12, 2, 8), int32] {
  @func_6677() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_12554() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(4, 60), int16], Tensor[(13), float64], Tensor[(234), float64], Tensor[(405), float32]) {
  %927 = @func_11487() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(26, 3), float64], Tensor[(78), float64]) */;
  %928 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 60), int16] */, dtype="int16") /* ty=Tensor[(4, 60), int16] */;
  %929 = cast(meta[relay.Constant][46] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %930 = cast(meta[relay.Constant][47] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %931 = cast(meta[relay.Constant][48] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %932 = reshape(%928, newshape=[8, 30]) /* ty=Tensor[(8, 30), int16] */;
  %933 = reshape(%929, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %934 = reshape(%930, newshape=[78, 3]) /* ty=Tensor[(78, 3), float64] */;
  %935 = reshape(%931, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %936 = @func_8262(%932, %933, %934, %935) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 30), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(1008), uint16], Tensor[(3, 189), uint32], Tensor[(9, 5, 9), float64], Tensor[(1, 405), float32]) */;
  %937 = %927.2;
  %938 = %936.0;
  (%937, %938, meta[relay.Constant][45] /* ty=Tensor[(4, 60), int16] */, meta[relay.Constant][46] /* ty=Tensor[(13), float64] */, meta[relay.Constant][47] /* ty=Tensor[(234), float64] */, meta[relay.Constant][48] /* ty=Tensor[(405), float32] */)
}

def @func_12566() -> (Tensor[(2, 4, 7), float64],) {
  %939 = @func_9714() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %940 = %939.0;
  (%940,)
}

def @func_15879() -> Tensor[(8, 6, 10), float64] {
  @func_15877() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_18274() -> (Tensor[(8, 6, 10), int64],) {
  @func_18272() /* ty=(Tensor[(8, 6, 10), int64],) */
}

def @func_18132() -> (Tensor[(8, 6, 10), float64],) {
  %943 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %941 = @func_15079() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %942 = %941.0;
    (%942,)
  };
  %943() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_18916() -> Tensor[(8, 6, 10), float64] {
  %945 = fn () -> Tensor[(8, 6, 10), float64] {
    %944 = @func_6436() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %944.0
  };
  %945() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_4716() -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) {
  @func_4714() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */
}

def @func_4828() -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) {
  %952 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) {
    %946 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %947 = cast(meta[relay.Constant][49] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
    %948 = reshape(%947, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
    %949 = @func_305(%948) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
    %950 = %946.0;
    %951 = %949.0;
    (%950, %951, meta[relay.Constant][49] /* ty=Tensor[(405), float32] */)
  };
  %952() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) */
}

def @func_3699(%var_3694: Tensor[(3, 5, 16), int16], %var_3695: Tensor[(3, 5, 16), int16], %var_3696: Tensor[(1, 13), float64], %var_3697: Tensor[(78, 1), float64], %var_3698: Tensor[(3, 5, 16), int16]) -> (Tensor[(26, 3), float64], Tensor[(1, 13), float64], Tensor[(78, 1), float64], Tensor[(3, 5, 16), uint64], Tensor[(405), float32], Tensor[(9, 5, 9), float32], Tensor[(3, 5, 16), bool], Tensor[(13), float64]) {
  %990 = fn (%var_3628: Tensor[(3, 5, 16), int16], %var_3629: Tensor[(3, 5, 16), int16], %var_3639: Tensor[(1, 13), float64], %var_3640: Tensor[(78, 1), float64], %var_3646: Tensor[(3, 5, 16), int16]) -> (Tensor[(26, 3), float64], Tensor[(1, 13), float64], Tensor[(78, 1), float64], Tensor[(3, 5, 16), uint64], Tensor[(405), float32], Tensor[(9, 5, 9), float32], Tensor[(3, 5, 16), bool], Tensor[(13), float64]) {
    %953 = cast(%var_3639, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
    %954 = cast(%var_3640, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
    %955 = reshape(%953, newshape=[13]) /* ty=Tensor[(13), float64] */;
    %956 = reshape(%954, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
    %957 = @func_1057(%955, %956) /* ty=(Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) */;
    %958 = cast(%var_3646, dtype="uint64") /* ty=Tensor[(3, 5, 16), uint64] */;
    %959 = shape_of(%var_3629, dtype="int32") /* ty=Tensor[(3), int32] */;
    %960 = cast(%var_3629, dtype="uint64") /* ty=Tensor[(3, 5, 16), uint64] */;
    %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %962 = cast(%var_3639, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
    %963 = %957.4;
    %964 = cast(%963, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
    %965 = reshape(%962, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
    %966 = reshape(%964, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
    %967 = @func_630(%965, %966) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */;
    %968 = cast(%var_3640, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
    %969 = reshape(%968, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
    %970 = @func_1638(%969) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
    %971 = cast(%var_3629, dtype="int16") /* ty=Tensor[(3, 5, 16), int16] */;
    %972 = shape_of(%var_3628, dtype="int32") /* ty=Tensor[(3), int32] */;
    %973 = cast(%var_3628, dtype="int16") /* ty=Tensor[(3, 5, 16), int16] */;
    %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %975 = maximum(%973, %974) /* ty=Tensor[(3, 5, 16), int16] */;
    %976 = cast(%975, dtype="bool") /* ty=Tensor[(3, 5, 16), bool] */;
    %977 = shape_of(%var_3646, dtype="int32") /* ty=Tensor[(3), int32] */;
    %978 = cast(%var_3646, dtype="bool") /* ty=Tensor[(3, 5, 16), bool] */;
    %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %980 = cast(%var_3639, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
    %981 = cast(%var_3640, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
    %982 = reshape(%980, newshape=[13]) /* ty=Tensor[(13), float64] */;
    %983 = reshape(%981, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
    %984 = @func_1057(%982, %983) /* ty=(Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) */;
    %985 = bitwise_or(%960, %961) /* ty=Tensor[(3, 5, 16), uint64] */;
    %986 = %967.2;
    %987 = %970.4;
    %988 = greater_equal(%978, %979) /* ty=Tensor[(3, 5, 16), bool] */;
    %989 = %984.3;
    (%963, %var_3639, %var_3640, %985, %986, %987, %988, %989)
  };
  %990(%var_3694, %var_3695, %var_3696, %var_3697, %var_3698) /* ty=(Tensor[(26, 3), float64], Tensor[(1, 13), float64], Tensor[(78, 1), float64], Tensor[(3, 5, 16), uint64], Tensor[(405), float32], Tensor[(9, 5, 9), float32], Tensor[(3, 5, 16), bool], Tensor[(13), float64]) */
}

def @func_5428() -> Tensor[(8, 6, 10), float64] {
  @func_5426() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_13554() -> Tensor[(8, 6, 10), float64] {
  %992 = fn () -> Tensor[(8, 6, 10), float64] {
    %991 = @func_11135() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %991.0
  };
  %992() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_17284() -> (Tensor[(2, 4, 7), float64],) {
  %993 = @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %994 = %993.0;
  (%994,)
}

def @func_12078(%var_12070: Tensor[(13, 10, 14), int64], %var_12071: Tensor[(13, 10, 14), int64]) -> (Tensor[(13, 10, 14), int64],) {
  %995 = cast(%var_12071, dtype="int64") /* ty=Tensor[(13, 10, 14), int64] */;
  %996 = shape_of(%var_12070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %997 = cast(%var_12070, dtype="int64") /* ty=Tensor[(13, 10, 14), int64] */;
  %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %999 = bitwise_and(%997, %998) /* ty=Tensor[(13, 10, 14), int64] */;
  (%999,)
}

def @func_19709() -> Tensor[(8, 6, 10), float64] {
  %1001 = fn () -> Tensor[(8, 6, 10), float64] {
    %1000 = @func_10635() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1000.0
  };
  %1001() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_14007(%var_14006: Tensor[(15, 4), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(15, 4), float64], Tensor[(8, 6, 10), float64]) {
  %1009 = fn (%var_13981: Tensor[(15, 4), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(15, 4), float64], Tensor[(8, 6, 10), float64]) {
    %1002 = cast(%var_13981, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
    %1003 = reshape(%1002, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), float64] */;
    %1004 = @func_6041(%1003) /* ty=(Tensor[(2, 2, 15), bool], Tensor[(8, 6, 10), float64]) */;
    %1005 = @func_5587() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), uint32]) */;
    %1006 = @func_6554() /* ty=Tensor[(8, 6, 10), float64] */;
    %1007 = %1004.1;
    %1008 = %1005.6;
    (%1006, %1007, %var_13981, %1008)
  };
  %1009(%var_14006) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(15, 4), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_16384() -> (Tensor[(8, 6, 10), float64],) {
  %1011 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %1010 = @func_13553() /* ty=Tensor[(8, 6, 10), float64] */;
    (%1010,)
  };
  %1011() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_4328() -> (Tensor[(8, 6, 10), float64],) {
  @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_10327() -> (Tensor[(8, 6, 10), float64], uint64, Tensor[(21, 6), uint16], uint64) {
  %1012 = @func_7430() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1013 = cast(meta[relay.Constant][50] /* ty=Tensor[(21, 6), uint16] */, dtype="uint16") /* ty=Tensor[(21, 6), uint16] */;
  %1014 = cast(meta[relay.Constant][50] /* ty=Tensor[(21, 6), uint16] */, dtype="uint16") /* ty=Tensor[(21, 6), uint16] */;
  %1015 = cast(meta[relay.Constant][51] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1016 = reshape(%1013, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint16] */;
  %1017 = reshape(%1014, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), uint16] */;
  %1018 = reshape(%1015, newshape=[]) /* ty=uint64 */;
  %1019 = @func_6727(%1016, %1017, %1018) /* ty=(Tensor[(14, 3, 3), uint16], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 6), bool], uint64, Tensor[(6, 12), uint64]) */;
  %1020 = %1012.0;
  %1021 = %1019.4;
  (%1020, %1021, meta[relay.Constant][50] /* ty=Tensor[(21, 6), uint16] */, meta[relay.Constant][51] /* ty=uint64 */)
}

def @func_9052() -> (Tensor[(8, 6, 10), float64],) {
  %1023 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %1022 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
    (%1022,)
  };
  %1023() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_10979(%var_10940: Tensor[(5, 1, 16), float64], %var_10944: Tensor[(528), float64]) -> (Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(8, 6, 10), float64], Tensor[(5, ?, 16), float32]) {
  %1024 = cast(%var_10944, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1025 = reshape(%1024, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), float64] */;
  %1026 = @func_2373(%1025) /* ty=(Tensor[(12, 4, 11), float64],) */;
  %1027 = @func_8152() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1028 = cast(%var_10940, dtype="float64") /* ty=Tensor[(5, 1, 16), float64] */;
  %1029 = sigmoid(%1028) /* ty=Tensor[(5, 1, 16), float64] */;
  %1030 = cast(%1029, dtype="float32") /* ty=Tensor[(5, 1, 16), float32] */;
  %1031 = shape_of(%var_10940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1032 = cast(%var_10940, dtype="float32") /* ty=Tensor[(5, 1, 16), float32] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1034 = %1026.0;
  %1035 = %1027.0;
  %1036 = floor_mod(%1032, %1033) /* ty=Tensor[(5, ?, 16), float32] */;
  (%1034, %var_10944, %1035, %1036)
}

def @func_6473() -> (Tensor[(192), float32], Tensor[(8, 6, 10), float32], Tensor[(13), float64]) {
  @func_6471() /* ty=(Tensor[(192), float32], Tensor[(8, 6, 10), float32], Tensor[(13), float64]) */
}

def @func_11771() -> (Tensor[(8, 6, 10), float64],) {
  %1039 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %1037 = @func_7593() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
    %1038 = %1037.0;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_13838() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1043 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %1040 = @func_6212() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1041 = @func_6554() /* ty=Tensor[(8, 6, 10), float64] */;
    %1042 = %1040.0;
    (%1041, %1042)
  };
  %1043() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_14376() -> (Tensor[(8, 6, 10), float32],) {
  %1044 = @func_9896() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %1045 = %1044.0;
  (%1045,)
}

def @func_19599() -> (Tensor[(12, 4, 11), float64],) {
  @func_19597() /* ty=(Tensor[(12, 4, 11), float64],) */
}

def @func_305(%var_267: Tensor[(9, 5, 9), float32]) -> (Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) {
  %1046 = cast(-6.546f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1047 = cast(%var_267, dtype="float32") /* ty=Tensor[(9, 5, 9), float32] */;
  %1048 = cast(%var_267, dtype="float64") /* ty=Tensor[(9, 5, 9), float64] */;
  %1049 = divide(%1046, %1047) /* ty=Tensor[(9, 5, 9), float32] */;
  %1050 = sinh(%1048) /* ty=Tensor[(9, 5, 9), float64] */;
  (%1049, %1050)
}

def @func_14424() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1054 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %1051 = @func_8152() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1052 = %1051.1;
    %1053 = @func_11866() /* ty=Tensor[(8, 6, 10), float64] */;
    (%1052, %1053)
  };
  %1054() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_12821() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(2, 4, 7), float64]) {
  @func_12819() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(2, 4, 7), float64]) */
}

def @func_1147(%var_1146: Tensor[(9, 9, 7), uint32]) -> Tensor[(9, 9, 7), uint32] {
  %1059 = fn (%var_1139: Tensor[(9, 9, 7), uint32]) -> Tensor[(9, 9, 7), uint32] {
    %1055 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 9, 7), uint32] */, dtype="uint32") /* ty=Tensor[(9, 9, 7), uint32] */;
    %1056 = shape_of(%var_1139, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1057 = cast(%var_1139, dtype="uint32") /* ty=Tensor[(9, 9, 7), uint32] */;
    %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_or(%1057, %1058) /* ty=Tensor[(9, 9, 7), uint32] */
  };
  %1059(%var_1146) /* ty=Tensor[(9, 9, 7), uint32] */
}

def @func_12819() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(2, 4, 7), float64]) {
  %1060 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
  %1061 = @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %1062 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  %1063 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
  %1064 = %1060.0;
  %1065 = %1061.0;
  (%1062, %1063, %1064, %1065)
}

def @func_13702() -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) {
  @func_13700() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) */
}

def @func_12556() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(4, 60), int16], Tensor[(13), float64], Tensor[(234), float64], Tensor[(405), float32]) {
  @func_12554() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(4, 60), int16], Tensor[(13), float64], Tensor[(234), float64], Tensor[(405), float32]) */
}

def @func_16643() -> (Tensor[(234), float64], Tensor[(8, 6, 10), float64], Tensor[(1008), uint16], Tensor[(1, 13), float64]) {
  %1066 = @func_12554() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(4, 60), int16], Tensor[(13), float64], Tensor[(234), float64], Tensor[(405), float32]) */;
  %1067 = cast(meta[relay.Constant][53] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %1068 = reshape(%1067, newshape=[1008]) /* ty=Tensor[(1008), uint16] */;
  %1069 = @func_15001(%1068) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(1008), uint16], Tensor[(567), float32]) */;
  %1070 = %1066.4;
  %1071 = %1069.2;
  %1072 = @func_12191() /* ty=Tensor[(1, 13), float64] */;
  (%1070, %1071, meta[relay.Constant][53] /* ty=Tensor[(1008), uint16] */, %1072)
}

def @func_9950() -> (Tensor[(528), float64], Tensor[(8, 6, 10), float64]) {
  %1073 = @func_9321() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */;
  %1074 = @func_6391() /* ty=Tensor[(528), float64] */;
  %1075 = %1073.1;
  (%1074, %1075)
}

def @func_11738(%var_11737: Tensor[(432), int32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(6, 6, 12), bool]) {
  %1090 = fn (%var_11712: Tensor[(432), int32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(6, 6, 12), bool]) {
    %1076 = @func_11397() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
    %1077 = cast(%var_11712, dtype="int32") /* ty=Tensor[(432), int32] */;
    %1078 = reshape(%1077, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int32] */;
    %1079 = @func_5879(%1078) /* ty=Tensor[(6, 6, 12), bool] */;
    %1080 = cast(%1079, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
    %1081 = log2(%1080) /* ty=Tensor[(6, 6, 12), float32] */;
    %1082 = cast(%var_11712, dtype="bool") /* ty=Tensor[(432), bool] */;
    %1083 = shape_of(%1081, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1084 = cast(%1081, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
    %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1086 = %1076.0;
    %1087 = @func_6792() /* ty=Tensor[(8, 6, 10), float64] */;
    %1088 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
    %1089 = logical_or(%1084, %1085) /* ty=Tensor[(6, 6, 12), bool] */;
    (%1086, %1087, %1088, %1089)
  };
  %1090(%var_11737) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(6, 6, 12), bool]) */
}

def @func_6416() -> Tensor[(8, 6, 10), float64] {
  %1091 = fn () -> Tensor[(8, 6, 10), float64] {
    @func_5426() /* ty=Tensor[(8, 6, 10), float64] */
  };
  %1091() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_12710() -> Tensor[(12, 2, 8), int32] {
  @func_12708() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_18299(%var_18297: Tensor[(2, 4, 2), float32], %var_18298: Tensor[(2, 4, 2), float32]) -> (Tensor[(2, 4, 2), bool], Tensor[(8, 6, 10), float32]) {
  %1098 = fn (%var_18284: Tensor[(2, 4, 2), float32], %var_18285: Tensor[(2, 4, 2), float32]) -> (Tensor[(2, 4, 2), bool], Tensor[(8, 6, 10), float32]) {
    %1092 = cast(%var_18285, dtype="bool") /* ty=Tensor[(2, 4, 2), bool] */;
    %1093 = shape_of(%var_18284, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1094 = cast(%var_18284, dtype="bool") /* ty=Tensor[(2, 4, 2), bool] */;
    %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1096 = not_equal(%1094, %1095) /* ty=Tensor[(2, 4, 2), bool] */;
    %1097 = @func_16420() /* ty=Tensor[(8, 6, 10), float32] */;
    (%1096, %1097)
  };
  %1098(%var_18297, %var_18298) /* ty=(Tensor[(2, 4, 2), bool], Tensor[(8, 6, 10), float32]) */
}

def @func_6196(%var_6195: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) {
  %1111 = fn (%var_6190: Tensor[(567), uint32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) {
    %1099 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1100 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1101 = cast(meta[relay.Constant][54] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %1102 = cast(meta[relay.Constant][54] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %1103 = cast(%var_6190, dtype="uint32") /* ty=Tensor[(567), uint32] */;
    %1104 = reshape(%1101, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
    %1105 = reshape(%1102, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
    %1106 = reshape(%1103, newshape=[567]) /* ty=Tensor[(567), uint32] */;
    %1107 = @func_4004(%1104, %1105, %1106) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */;
    %1108 = %1099.0;
    %1109 = %1100.0;
    %1110 = %1107.0;
    (%1108, %1109, %1110, meta[relay.Constant][54] /* ty=Tensor[(1008), uint16] */, %var_6190)
  };
  %1111(%var_6195) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) */
}

def @func_18904(%var_18900: Tensor[(234), float64], %var_18901: Tensor[(98), int16], %var_18902: Tensor[(78), float64], %var_18903: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(240), int16], Tensor[(13), float64], Tensor[(234), float64], Tensor[(78), float64], Tensor[(56), float64], Tensor[(98), int16], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32], Tensor[(405), int8]) {
  @func_18898(%var_18900, %var_18901, %var_18902, %var_18903) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(240), int16], Tensor[(13), float64], Tensor[(234), float64], Tensor[(78), float64], Tensor[(56), float64], Tensor[(98), int16], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32], Tensor[(405), int8]) */
}

def @func_13334() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float32], Tensor[(405), float32]) {
  @func_13332() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float32], Tensor[(405), float32]) */
}

def @func_7047() -> (Tensor[(8, 6, 10), float32],) {
  @func_7045() /* ty=(Tensor[(8, 6, 10), float32],) */
}

def @func_15443() -> (Tensor[(2, 4, 7), float64],) {
  %1112 = @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %1113 = %1112.0;
  (%1113,)
}

def @func_12082(%var_12080: Tensor[(13, 10, 14), int64], %var_12081: Tensor[(13, 10, 14), int64]) -> (Tensor[(13, 10, 14), int64],) {
  @func_12078(%var_12080, %var_12081) /* ty=(Tensor[(13, 10, 14), int64],) */
}

def @func_15877() -> Tensor[(8, 6, 10), float64] {
  @func_6554() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_8748(%var_8685: Tensor[(216, 2), int32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(6, 6, 12), bool], Tensor[(216, 2), int32], Tensor[(12, 2, 8), int32], Tensor[(13), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(8, 6, 10), float64]) {
  %1114 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1115 = %1114.0;
  %1116 = cast(%1115, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %1117 = acosh(%1116) /* ty=Tensor[(8, 6, 10), float64] */;
  %1118 = cast(%1117, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %1119 = cast(%var_8685, dtype="int32") /* ty=Tensor[(216, 2), int32] */;
  %1120 = reshape(%1119, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int32] */;
  %1121 = @func_6471() /* ty=(Tensor[(192), float32], Tensor[(8, 6, 10), float32], Tensor[(13), float64]) */;
  %1122 = @func_4827() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) */;
  %1123 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1124 = atan(%1118) /* ty=Tensor[(8, 6, 10), float64] */;
  %1125 = @func_4965() /* ty=Tensor[(8, 6, 10), float64] */;
  %1126 = @func_5879(%1120) /* ty=Tensor[(6, 6, 12), bool] */;
  %1127 = @func_6677() /* ty=Tensor[(12, 2, 8), int32] */;
  %1128 = %1121.2;
  %1129 = @func_8583() /* ty=Tensor[(8, 6, 10), float64] */;
  %1130 = %1122.1;
  %1131 = %1123.0;
  (%1124, %1125, %1126, %var_8685, %1127, %1128, %1129, %1130, %1131)
}

def @func_11293() -> Tensor[(8, 6, 10), float64] {
  @func_11291() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_8543() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) {
  %1132 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1133 = @func_7593() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %1134 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1135 = @func_5378() /* ty=(Tensor[(12, 2, 8), int32],) */;
  %1136 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1137 = %1132.0;
  %1138 = %1133.0;
  %1139 = %1134.0;
  %1140 = %1135.0;
  %1141 = %1136.0;
  (%1137, %1138, %1139, %1140, %1141)
}

def @func_5588() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), uint32]) {
  %1161 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), uint32]) {
    %1142 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1143 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1144 = @func_4336() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1145 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
    %1146 = cast(meta[relay.Constant][56] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %1147 = reshape(%1145, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
    %1148 = reshape(%1146, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
    %1149 = @func_630(%1147, %1148) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */;
    %1150 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1151 = cast(meta[relay.Constant][56] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %1152 = reshape(%1151, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
    %1153 = @func_1638(%1152) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
    %1154 = %1142.0;
    %1155 = %1143.0;
    %1156 = %1144.0;
    %1157 = %1149.1;
    %1158 = %1150.0;
    %1159 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
    %1160 = %1153.6;
    (%1154, %1155, %1156, %1157, meta[relay.Constant][55] /* ty=Tensor[(1, 13), float64] */, meta[relay.Constant][56] /* ty=Tensor[(78), float64] */, %1158, %1159, %1160)
  };
  %1161() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), uint32]) */
}

def @func_5128() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1165 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %1162 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1163 = @func_5029() /* ty=Tensor[(8, 6, 10), float64] */;
    %1164 = %1162.0;
    (%1163, %1164)
  };
  %1165() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_9509() -> (Tensor[(78), float64],) {
  %1168 = fn () -> (Tensor[(78), float64],) {
    %1166 = @func_5587() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), uint32]) */;
    %1167 = %1166.5;
    (%1167,)
  };
  %1168() /* ty=(Tensor[(78), float64],) */
}

def @func_13391() -> Tensor[(8, 6, 10), float64] {
  @func_9783() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_16420() -> Tensor[(8, 6, 10), float32] {
  %1169 = @func_14376() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %1169.0
}

def @func_18333() -> (Tensor[(8, 6, 10), float64],) {
  @func_18331() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_7595() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) {
  @func_7593() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */
}

def @func_15296() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  @func_15294() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */
}

def @func_3908() -> (Tensor[(8, 6, 10), float64],) {
  @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_4600() -> (Tensor[(8, 6, 10), float64],) {
  @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_9455() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1170 = @func_4557() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1171 = @func_6436() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1172 = %1170.0;
  %1173 = %1171.0;
  (%1172, %1173)
}

def @func_6531() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) {
  %1184 = fn () -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) {
    %1174 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1175 = %1174.1;
    %1176 = cast(%1175, dtype="float32") /* ty=Tensor[(8, 6, 10), float32] */;
    %1177 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1178 = cast(%1175, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
    %1179 = reshape(%1178, newshape=[8, 6, 10]) /* ty=Tensor[(8, 6, 10), float64] */;
    %1180 = @func_5708(%1179) /* ty=(Tensor[(8, 6, 10), bool],) */;
    %1181 = log10(%1176) /* ty=Tensor[(8, 6, 10), float32] */;
    %1182 = %1177.1;
    %1183 = %1180.0;
    (%1181, %1182, %1183)
  };
  %1184() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */
}

def @func_586(%var_584: Tensor[(1, 14, 9), float64], %var_585: Tensor[(11, 14, 9), float64]) -> (Tensor[(11, 14, 9), float64],) {
  @func_582(%var_584, %var_585) /* ty=(Tensor[(11, 14, 9), float64],) */
}

def @func_7959() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1191 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %1185 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1186 = @func_5127() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1187 = @func_6761() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1188 = %1185.0;
    %1189 = %1186.0;
    %1190 = %1187.0;
    (%1188, %1189, %1190)
  };
  %1191() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_14288() -> (Tensor[(8, 6, 10), float64],) {
  %1192 = @func_11770() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1193 = %1192.0;
  (%1193,)
}

def @func_17194() -> (Tensor[(8, 6, 10), float64],) {
  @func_17192() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_15629() -> (Tensor[(12, 4, 11), float64], Tensor[(12, 4, 11), float64], Tensor[(8, 6, 10), float64]) {
  %1200 = fn () -> (Tensor[(12, 4, 11), float64], Tensor[(12, 4, 11), float64], Tensor[(8, 6, 10), float64]) {
    %1194 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
    %1195 = @func_4229() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(12, 4, 11), float64], Tensor[(528), float64], Tensor[(3, 2, 13), float64]) */;
    %1196 = @func_5181() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1197 = %1194.2;
    %1198 = %1195.3;
    %1199 = %1196.0;
    (%1197, %1198, %1199)
  };
  %1200() /* ty=(Tensor[(12, 4, 11), float64], Tensor[(12, 4, 11), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_12363(%var_12362: Tensor[(14, 15, 2), int64]) -> (Tensor[(14, 15, 2), bool], Tensor[(8, 6, 10), float64], Tensor[(14, 15, 2), float64]) {
  %1208 = fn (%var_12329: Tensor[(14, 15, 2), int64]) -> (Tensor[(14, 15, 2), bool], Tensor[(8, 6, 10), float64], Tensor[(14, 15, 2), float64]) {
    %1201 = cast(meta[relay.Constant][57] /* ty=Tensor[(14, 15, 1), int64] */, dtype="bool") /* ty=Tensor[(14, 15, 1), bool] */;
    %1202 = cast(%var_12329, dtype="bool") /* ty=Tensor[(14, 15, 2), bool] */;
    %1203 = @func_4598() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1204 = cast(%var_12329, dtype="float64") /* ty=Tensor[(14, 15, 2), float64] */;
    %1205 = not_equal(%1201, %1202) /* ty=Tensor[(14, 15, 2), bool] */;
    %1206 = %1203.0;
    %1207 = log(%1204) /* ty=Tensor[(14, 15, 2), float64] */;
    (%1205, %1206, %1207)
  };
  %1208(%var_12362) /* ty=(Tensor[(14, 15, 2), bool], Tensor[(8, 6, 10), float64], Tensor[(14, 15, 2), float64]) */
}

def @func_17138() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  @func_17136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_4337() -> (Tensor[(8, 6, 10), float64],) {
  %1211 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %1209 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1210 = %1209.0;
    (%1210,)
  };
  %1211() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_7502() -> (Tensor[(8, 6, 10), float64],) {
  %1213 = fn () -> (Tensor[(8, 6, 10), float64],) {
    %1212 = @func_4937() /* ty=Tensor[(8, 6, 10), float64] */;
    (%1212,)
  };
  %1213() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_9680() -> (Tensor[(2, 4, 7), float64],) {
  @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */
}

def @func_5993() -> Tensor[(192), float32] {
  %1214 = @func_4714() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */;
  %1214.2
}

def @func_13028() -> (Tensor[(8, 6, 10), float64],) {
  %1215 = @func_10607() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1216 = %1215.1;
  (%1216,)
}

def @func_16119() -> (Tensor[(405), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) {
  %1217 = @func_14352() /* ty=(Tensor[(405), float32], Tensor[(2, 4, 7), float64]) */;
  %1218 = @func_8085() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */;
  %1219 = %1217.0;
  %1220 = %1218.5;
  %1221 = @func_13553() /* ty=Tensor[(8, 6, 10), float64] */;
  (%1219, %1220, %1221)
}

def @func_15261(%var_15259: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32]) {
  @func_15258(%var_15259) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */
}

def @func_6792() -> Tensor[(8, 6, 10), float64] {
  @func_6415() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_16690() -> Tensor[(8, 6, 10), float64] {
  %1222 = fn () -> Tensor[(8, 6, 10), float64] {
    @func_4965() /* ty=Tensor[(8, 6, 10), float64] */
  };
  %1222() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_4966() -> Tensor[(8, 6, 10), float64] {
  %1223 = fn () -> Tensor[(8, 6, 10), float64] {
    @func_3939() /* ty=Tensor[(8, 6, 10), float64] */
  };
  %1223() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_15992() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1228 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %1224 = @func_5520() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1225 = @func_4937() /* ty=Tensor[(8, 6, 10), float64] */;
    %1226 = @func_6662() /* ty=Tensor[(8, 6, 10), float64] */;
    %1227 = %1224.0;
    (%1225, %1226, %1227)
  };
  %1228() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_18792() -> (Tensor[(405), float32], Tensor[(78), float32], Tensor[(8, 6, 10), float64], Tensor[(135, 3), float64], Tensor[(2, 2, 15), bool], Tensor[(1, 60), float64], Tensor[(2, 4, 7), float64], Tensor[(8, 6, 10), float64]) {
  %1229 = cast(meta[relay.Constant][58] /* ty=Tensor[(135, 3), float32] */, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %1230 = reshape(%1229, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %1231 = @func_15258(%1230) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %1232 = @func_10550() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1233 = %1232.0;
  %1234 = cast(%1233, dtype="float32") /* ty=Tensor[(78), float32] */;
  %1235 = cast(meta[relay.Constant][58] /* ty=Tensor[(135, 3), float32] */, dtype="float64") /* ty=Tensor[(135, 3), float64] */;
  %1236 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %1237 = reshape(%1236, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), float64] */;
  %1238 = @func_6041(%1237) /* ty=(Tensor[(2, 2, 15), bool], Tensor[(8, 6, 10), float64]) */;
  %1239 = @func_9678() /* ty=(Tensor[(2, 4, 7), float64],) */;
  %1240 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1241 = %1231.3;
  %1242 = erf(%1234) /* ty=Tensor[(78), float32] */;
  %1243 = @func_17468() /* ty=Tensor[(8, 6, 10), float64] */;
  %1244 = asin(%1235) /* ty=Tensor[(135, 3), float64] */;
  %1245 = %1238.0;
  %1246 = %1239.0;
  %1247 = %1240.0;
  (%1241, %1242, %1243, %1244, %1245, meta[relay.Constant][59] /* ty=Tensor[(1, 60), float64] */, %1246, %1247)
}

def @func_9457() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  @func_9455() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_16033(%var_16032: Tensor[(13), float64]) -> (Tensor[(8, 6, 10), float32], Tensor[(9, 45), float32], Tensor[(405), float32], Tensor[(13), float64]) {
  %1255 = fn (%var_16028: Tensor[(13), float64]) -> (Tensor[(8, 6, 10), float32], Tensor[(9, 45), float32], Tensor[(405), float32], Tensor[(13), float64]) {
    %1248 = cast(meta[relay.Constant][60] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
    %1249 = cast(%var_16028, dtype="float64") /* ty=Tensor[(13), float64] */;
    %1250 = reshape(%1248, newshape=[9, 45]) /* ty=Tensor[(9, 45), float32] */;
    %1251 = reshape(%1249, newshape=[13]) /* ty=Tensor[(13), float64] */;
    %1252 = @func_14074(%1250, %1251) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(13), float64], Tensor[(13, 55), int8], Tensor[(9, 45), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) */;
    %1253 = @func_12095() /* ty=Tensor[(8, 6, 10), float32] */;
    %1254 = %1252.3;
    (%1253, %1254, meta[relay.Constant][60] /* ty=Tensor[(405), float32] */, %var_16028)
  };
  %1255(%var_16032) /* ty=(Tensor[(8, 6, 10), float32], Tensor[(9, 45), float32], Tensor[(405), float32], Tensor[(13), float64]) */
}

def @func_14914() -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) {
  %1262 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) {
    %1256 = @func_13780() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1257 = @func_10023() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32]) */;
    %1258 = @func_4827() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) */;
    %1259 = %1256.0;
    %1260 = %1257.1;
    %1261 = %1258.0;
    (%1259, %1260, %1261)
  };
  %1262() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */
}

def @func_14352() -> (Tensor[(405), float32], Tensor[(2, 4, 7), float64]) {
  %1263 = @func_13332() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float32], Tensor[(405), float32]) */;
  %1264 = @func_12324() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(2, 4, 7), float64]) */;
  %1265 = %1263.2;
  %1266 = %1264.1;
  (%1265, %1266)
}

def @func_8564() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1267 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1268 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1269 = %1267.0;
  %1270 = %1268.0;
  (%1269, %1270)
}

def @func_6471() -> (Tensor[(192), float32], Tensor[(8, 6, 10), float32], Tensor[(13), float64]) {
  %1271 = cast(meta[relay.Constant][61] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1272 = reshape(%1271, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %1273 = @func_4298(%1272) /* ty=(Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float32]) */;
  %1274 = @func_5993() /* ty=Tensor[(192), float32] */;
  %1275 = %1273.3;
  (%1274, %1275, meta[relay.Constant][61] /* ty=Tensor[(13), float64] */)
}

def @func_10836(%var_10835: Tensor[(78), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(240), int16], Tensor[(78), float64]) {
  %1281 = fn (%var_10832: Tensor[(78), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(240), int16], Tensor[(78), float64]) {
    %1276 = cast(%var_10832, dtype="float64") /* ty=Tensor[(78), float64] */;
    %1277 = reshape(%1276, newshape=[78]) /* ty=Tensor[(78), float64] */;
    %1278 = @func_5351(%1277) /* ty=(Tensor[(8, 6, 10), bool], Tensor[(9, 5, 9), float32], Tensor[(240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(9, 5, 9), float64]) */;
    %1279 = @func_9783() /* ty=Tensor[(8, 6, 10), float64] */;
    %1280 = %1278.2;
    (%1279, %1280, %var_10832)
  };
  %1281(%var_10835) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(240), int16], Tensor[(78), float64]) */
}

def @func_5881(%var_5880: Tensor[(6, 6, 12), int32]) -> Tensor[(6, 6, 12), bool] {
  %1286 = fn (%var_5868: Tensor[(6, 6, 12), int32]) -> Tensor[(6, 6, 12), bool] {
    %1282 = cast(%var_5868, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
    %1283 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(6, 6, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1284 = cast(meta[relay.Constant][62] /* ty=Tensor[(6, 6, 12), int32] */, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
    %1285 = dyn.reshape(%1282, %1283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%1284, %1285) /* ty=Tensor[(6, 6, 12), bool] */
  };
  %1286(%var_5880) /* ty=Tensor[(6, 6, 12), bool] */
}

def @func_16665() -> Tensor[(8, 6, 10), float64] {
  %1287 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
  %1287.4
}

def @func_11994(%var_11993: Tensor[(1008), uint16]) -> (Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(1, 567), float32]) {
  %1300 = fn (%var_11971: Tensor[(1008), uint16]) -> (Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(1, 567), float32]) {
    %1288 = @func_5673() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
    %1289 = cast(%var_11971, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %1290 = cast(%var_11971, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %1291 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 567), uint32] */, dtype="uint32") /* ty=Tensor[(1, 567), uint32] */;
    %1292 = reshape(%1289, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
    %1293 = reshape(%1290, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), uint16] */;
    %1294 = reshape(%1291, newshape=[567]) /* ty=Tensor[(567), uint32] */;
    %1295 = @func_4004(%1292, %1293, %1294) /* ty=(Tensor[(7, 9, 16), bool], Tensor[(567), uint32], Tensor[(9, 9, 7), float64]) */;
    %1296 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 567), uint32] */, dtype="float32") /* ty=Tensor[(1, 567), float32] */;
    %1297 = %1288.0;
    %1298 = %1295.2;
    %1299 = erf(%1296) /* ty=Tensor[(1, 567), float32] */;
    (%1297, %1298, %var_11971, %1299)
  };
  %1300(%var_11993) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), float64], Tensor[(1008), uint16], Tensor[(1, 567), float32]) */
}

def @func_15258(%var_15191: Tensor[(405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(405), float32]) {
  %1301 = @func_11226() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
  %1302 = @func_11397() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(405), float32]) */;
  %1303 = @func_8543() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64]) */;
  %1304 = @func_14352() /* ty=(Tensor[(405), float32], Tensor[(2, 4, 7), float64]) */;
  %1305 = %1304.0;
  %1306 = cast(%var_15191, dtype="uint16") /* ty=Tensor[(405), uint16] */;
  %1307 = shape_of(%1305, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1308 = cast(%1305, dtype="uint16") /* ty=Tensor[(405), uint16] */;
  %1309 = dyn.reshape(%1306, %1307, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1310 = minimum(%1308, %1309) /* ty=Tensor[(405), uint16] */;
  %1311 = cast(%1310, dtype="float64") /* ty=Tensor[(405), float64] */;
  %1312 = tan(%1311) /* ty=Tensor[(405), float64] */;
  %1313 = cast(%1312, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1314 = %1301.1;
  %1315 = %1302.0;
  %1316 = %1303.0;
  %1317 = sin(%1313) /* ty=Tensor[(405), float32] */;
  (%1314, %1315, %1316, %1317)
}

def @func_4714() -> (Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) {
  %1318 = @func_4326() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1319 = cast(meta[relay.Constant][64] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1320 = cast(meta[relay.Constant][64] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1321 = cast(meta[relay.Constant][64] /* ty=Tensor[(192), float32] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1322 = reshape(%1319, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %1323 = reshape(%1320, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %1324 = reshape(%1321, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float64] */;
  %1325 = @func_1559(%1322, %1323, %1324) /* ty=(Tensor[(12, 2, 8), int32],) */;
  %1326 = %1318.0;
  %1327 = %1325.0;
  (%1326, %1327, meta[relay.Constant][64] /* ty=Tensor[(192), float32] */)
}

def @func_11576(%var_11571: Tensor[(5, 13, 11), int8], %var_11572: Tensor[(5, 13, 11), int8], %var_11573: Tensor[(5, 13, 11), int8], %var_11574: Tensor[(405), float32], %var_11575: Tensor[(13), float64]) -> (Tensor[(9, 9, 7), uint32], Tensor[(63, 9), uint32], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(405), float32], Tensor[(1, 240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(5, 13, 11), bool]) {
  %1366 = fn (%var_11515: Tensor[(5, 13, 11), int8], %var_11516: Tensor[(5, 13, 11), int8], %var_11532: Tensor[(5, 13, 11), int8], %var_11545: Tensor[(405), float32], %var_11552: Tensor[(13), float64]) -> (Tensor[(9, 9, 7), uint32], Tensor[(63, 9), uint32], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(405), float32], Tensor[(1, 240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(5, 13, 11), bool]) {
    %1328 = cast(meta[relay.Constant][65] /* ty=Tensor[(63, 9), uint32] */, dtype="uint32") /* ty=Tensor[(63, 9), uint32] */;
    %1329 = reshape(%1328, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint32] */;
    %1330 = cast(%var_11545, dtype="float32") /* ty=Tensor[(405), float32] */;
    %1331 = reshape(%1330, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
    %1332 = @func_6012(%1331) /* ty=(Tensor[(9, 5, 9), int16],) */;
    %1333 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 240), int16] */, dtype="int16") /* ty=Tensor[(1, 240), int16] */;
    %1334 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 240), int16] */, dtype="int16") /* ty=Tensor[(1, 240), int16] */;
    %1335 = cast(%var_11552, dtype="float64") /* ty=Tensor[(13), float64] */;
    %1336 = cast(meta[relay.Constant][67] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %1337 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 240), int16] */, dtype="int16") /* ty=Tensor[(1, 240), int16] */;
    %1338 = reshape(%1333, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
    %1339 = reshape(%1334, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
    %1340 = reshape(%1335, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
    %1341 = reshape(%1336, newshape=[78, 1]) /* ty=Tensor[(78, 1), float64] */;
    %1342 = reshape(%1337, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
    %1343 = @func_3693(%1338, %1339, %1340, %1341, %1342) /* ty=(Tensor[(26, 3), float64], Tensor[(1, 13), float64], Tensor[(78, 1), float64], Tensor[(3, 5, 16), uint64], Tensor[(405), float32], Tensor[(9, 5, 9), float32], Tensor[(3, 5, 16), bool], Tensor[(13), float64]) */;
    %1344 = cast(%var_11532, dtype="bool") /* ty=Tensor[(5, 13, 11), bool] */;
    %1345 = shape_of(%var_11515, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1346 = cast(%var_11515, dtype="bool") /* ty=Tensor[(5, 13, 11), bool] */;
    %1347 = dyn.reshape(%1344, %1345, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1348 = equal(%1346, %1347) /* ty=Tensor[(5, 13, 11), bool] */;
    %1349 = cast(%1348, dtype="float64") /* ty=Tensor[(5, 13, 11), float64] */;
    %1350 = cosh(%1349) /* ty=Tensor[(5, 13, 11), float64] */;
    %1351 = cast(%1350, dtype="float32") /* ty=Tensor[(5, 13, 11), float32] */;
    %1352 = log2(%1351) /* ty=Tensor[(5, 13, 11), float32] */;
    %1353 = cast(%var_11516, dtype="int8") /* ty=Tensor[(5, 13, 11), int8] */;
    %1354 = shape_of(%var_11515, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1355 = cast(%var_11515, dtype="int8") /* ty=Tensor[(5, 13, 11), int8] */;
    %1356 = dyn.reshape(%1353, %1354, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1357 = add(%1355, %1356) /* ty=Tensor[(5, 13, 11), int8] */;
    %1358 = cast(%1357, dtype="bool") /* ty=Tensor[(5, 13, 11), bool] */;
    %1359 = shape_of(%1352, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1360 = cast(%1352, dtype="bool") /* ty=Tensor[(5, 13, 11), bool] */;
    %1361 = dyn.reshape(%1358, %1359, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1362 = @func_1145(%1329) /* ty=Tensor[(9, 9, 7), uint32] */;
    %1363 = %1332.0;
    %1364 = %1343.4;
    %1365 = not_equal(%1360, %1361) /* ty=Tensor[(5, 13, 11), bool] */;
    (%1362, meta[relay.Constant][65] /* ty=Tensor[(63, 9), uint32] */, %1363, %var_11545, %1364, meta[relay.Constant][66] /* ty=Tensor[(1, 240), int16] */, %var_11552, meta[relay.Constant][67] /* ty=Tensor[(78), float64] */, %1365)
  };
  %1366(%var_11571, %var_11572, %var_11573, %var_11574, %var_11575) /* ty=(Tensor[(9, 9, 7), uint32], Tensor[(63, 9), uint32], Tensor[(9, 5, 9), int16], Tensor[(405), float32], Tensor[(405), float32], Tensor[(1, 240), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(5, 13, 11), bool]) */
}

def @func_9986() -> (Tensor[(78), float64],) {
  %1367 = @func_9508() /* ty=(Tensor[(78), float64],) */;
  %1368 = %1367.0;
  (%1368,)
}

def @func_18417() -> Tensor[(8, 6, 10), float64] {
  %1369 = @func_6530() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), bool]) */;
  %1369.1
}

def @func_10749() -> Tensor[(12, 2, 8), int32] {
  %1370 = @func_10023() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32]) */;
  %1370.1
}

def @func_5711(%var_5709: Tensor[(8, 6, 10), float64]) -> (Tensor[(8, 6, 10), bool],) {
  @func_5708(%var_5709) /* ty=(Tensor[(8, 6, 10), bool],) */
}

def @func_10087(%var_10062: Tensor[(7, 7, 2), int16], %var_10063: Tensor[(7, 7, 2), int16]) -> (Tensor[(7, 7, 2), int16], Tensor[(78), float64]) {
  %1371 = cast(%var_10063, dtype="int16") /* ty=Tensor[(7, 7, 2), int16] */;
  %1372 = shape_of(%var_10062, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1373 = cast(%var_10062, dtype="int16") /* ty=Tensor[(7, 7, 2), int16] */;
  %1374 = dyn.reshape(%1371, %1372, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1375 = @func_9986() /* ty=(Tensor[(78), float64],) */;
  %1376 = left_shift(%1373, %1374) /* ty=Tensor[(7, 7, 2), int16] */;
  %1377 = %1375.0;
  (%1376, %1377)
}

def @func_2376(%var_2374: Tensor[(12, 4, 11), float64]) -> (Tensor[(12, 4, 11), float64],) {
  @func_2373(%var_2374) /* ty=(Tensor[(12, 4, 11), float64],) */
}

def @func_1559(%var_1526: Tensor[(12, 2, 8), float32], %var_1527: Tensor[(12, 2, 8), float32], %var_1545: Tensor[(12, 2, 8), float64]) -> (Tensor[(12, 2, 8), int32],) {
  %1378 = cast(%var_1527, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %1379 = shape_of(%var_1526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1380 = cast(%var_1526, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %1381 = dyn.reshape(%1378, %1379, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1382 = mod(%1380, %1381) /* ty=Tensor[(12, 2, 8), float32] */;
  %1383 = cast(%1382, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %1384 = acosh(%1383) /* ty=Tensor[(12, 2, 8), float64] */;
  %1385 = cast(%var_1545, dtype="int32") /* ty=Tensor[(12, 2, 8), int32] */;
  %1386 = shape_of(%1384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1387 = cast(%1384, dtype="int32") /* ty=Tensor[(12, 2, 8), int32] */;
  %1388 = dyn.reshape(%1385, %1386, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1389 = right_shift(%1387, %1388) /* ty=Tensor[(12, 2, 8), int32] */;
  (%1389,)
}

def @func_17040() -> (Tensor[(8, 6, 10), float64],) {
  @func_17038() /* ty=(Tensor[(8, 6, 10), float64],) */
}

def @func_8796() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1390 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1391 = @func_6662() /* ty=Tensor[(8, 6, 10), float64] */;
  %1392 = %1390.0;
  %1393 = @func_6792() /* ty=Tensor[(8, 6, 10), float64] */;
  (%1391, %1392, %1393)
}

def @func_18124() -> (Tensor[(8, 6, 10), int64],) {
  %1395 = fn () -> (Tensor[(8, 6, 10), int64],) {
    %1394 = @func_7751() /* ty=Tensor[(8, 6, 10), int64] */;
    (%1394,)
  };
  %1395() /* ty=(Tensor[(8, 6, 10), int64],) */
}

def @func_10550() -> (Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1396 = @func_9986() /* ty=(Tensor[(78), float64],) */;
  %1397 = @func_4688() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1398 = @func_5439() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1399 = @func_4644() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(12, 2, 8), int32], Tensor[(405), float32]) */;
  %1400 = @func_7958() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1401 = %1396.0;
  %1402 = %1397.0;
  %1403 = %1398.0;
  %1404 = %1399.0;
  %1405 = %1400.2;
  (%1401, %1402, %1403, %1404, %1405)
}

def @func_17225() -> (Tensor[(8, 6, 10), int64], Tensor[(2, 4, 7), float64]) {
  %1409 = fn () -> (Tensor[(8, 6, 10), int64], Tensor[(2, 4, 7), float64]) {
    %1406 = @func_14352() /* ty=(Tensor[(405), float32], Tensor[(2, 4, 7), float64]) */;
    %1407 = @func_7751() /* ty=Tensor[(8, 6, 10), int64] */;
    %1408 = %1406.1;
    (%1407, %1408)
  };
  %1409() /* ty=(Tensor[(8, 6, 10), int64], Tensor[(2, 4, 7), float64]) */
}

def @func_16452() -> Tensor[(8, 6, 10), float64] {
  %1410 = @func_7356() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1410.0
}

def @func_10157(%var_10155: Tensor[(405), float32], %var_10156: Tensor[(234), float64]) -> (Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(240), int16], Tensor[(1, 13), float64], Tensor[(405), float32], Tensor[(8, 6, 10), float64], Tensor[(234), float64]) {
  @func_10153(%var_10155, %var_10156) /* ty=(Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(240), int16], Tensor[(1, 13), float64], Tensor[(405), float32], Tensor[(8, 6, 10), float64], Tensor[(234), float64]) */
}

def @func_18419() -> Tensor[(8, 6, 10), float64] {
  @func_18417() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_12404() -> Tensor[(9, 5, 9), int16] {
  @func_12402() /* ty=Tensor[(9, 5, 9), int16] */
}

def @func_17756() -> Tensor[(8, 6, 10), float64] {
  %1412 = fn () -> Tensor[(8, 6, 10), float64] {
    %1411 = @func_12632() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1411.0
  };
  %1412() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_16225() -> Tensor[(8, 6, 10), float64] {
  %1414 = fn () -> Tensor[(8, 6, 10), float64] {
    %1413 = @func_6427() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1413.0
  };
  %1414() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_8875(%var_8873: Tensor[(1, 6, 9), float64], %var_8874: Tensor[(8, 6, 9), float64]) -> (Tensor[(8, 6, 9), float64],) {
  @func_8871(%var_8873, %var_8874) /* ty=(Tensor[(8, 6, 9), float64],) */
}

def @func_12914(%var_12913: Tensor[(11, 15, 14), float32]) -> (Tensor[(11, 15, 14), float32],) {
  %1417 = fn (%var_12909: Tensor[(11, 15, 14), float32]) -> (Tensor[(11, 15, 14), float32],) {
    %1415 = cast(%var_12909, dtype="float32") /* ty=Tensor[(11, 15, 14), float32] */;
    %1416 = asinh(%1415) /* ty=Tensor[(11, 15, 14), float32] */;
    (%1416,)
  };
  %1417(%var_12913) /* ty=(Tensor[(11, 15, 14), float32],) */
}

def @func_13700() -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) {
  %1418 = @func_10176() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1419 = %1418.0;
  %1420 = cast(%1419, dtype="float64") /* ty=Tensor[(8, 6, 10), float64] */;
  %1421 = cast(meta[relay.Constant][68] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1422 = reshape(%1420, newshape=[8, 6, 10]) /* ty=Tensor[(8, 6, 10), float64] */;
  %1423 = reshape(%1421, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %1424 = @func_4090(%1422, %1423) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(12, 2, 8), int32], Tensor[(192), float32]) */;
  %1425 = %1424.2;
  (%1419, %1425, meta[relay.Constant][68] /* ty=Tensor[(405), float32] */)
}

def @func_7882() -> (Tensor[(8, 6, 10), int16], Tensor[(8, 6, 10), float64]) {
  %1434 = fn () -> (Tensor[(8, 6, 10), int16], Tensor[(8, 6, 10), float64]) {
    %1426 = @func_5087() /* ty=Tensor[(8, 6, 10), float64] */;
    %1427 = cast(meta[relay.Constant][69] /* ty=Tensor[(8, 6, 10), float64] */, dtype="int16") /* ty=Tensor[(8, 6, 10), int16] */;
    %1428 = shape_of(%1426, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1429 = cast(%1426, dtype="int16") /* ty=Tensor[(8, 6, 10), int16] */;
    %1430 = dyn.reshape(%1427, %1428, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1431 = @func_7338() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1432 = bitwise_xor(%1429, %1430) /* ty=Tensor[(8, 6, 10), int16] */;
    %1433 = %1431.1;
    (%1432, %1433)
  };
  %1434() /* ty=(Tensor[(8, 6, 10), int16], Tensor[(8, 6, 10), float64]) */
}

def @func_14441(%var_14439: Tensor[(11, 1, 10), int32]) -> Tensor[(11, 12, 10), int16] {
  @func_14438(%var_14439) /* ty=Tensor[(11, 12, 10), int16] */
}

def @func_10608() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  %1438 = fn () -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
    %1435 = @func_7501() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1436 = %1435.0;
    %1437 = @func_6554() /* ty=Tensor[(8, 6, 10), float64] */;
    (%1436, %1437)
  };
  %1438() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_7002() -> (Tensor[(78), float64],) {
  %1439 = @func_5587() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float64], Tensor[(1, 13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 9, 7), uint32]) */;
  %1440 = %1439.5;
  (%1440,)
}

def @func_9323() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  @func_9321() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */
}

def @func_18390() -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
  %1445 = fn () -> (Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) {
    %1441 = @func_7593() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
    %1442 = @func_13151() /* ty=(Tensor[(12, 2, 8), int32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1443 = %1441.1;
    %1444 = %1442.1;
    (%1443, %1444)
  };
  %1445() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64]) */
}

def @func_15360() -> Tensor[(8, 6, 10), float64] {
  %1447 = fn () -> Tensor[(8, 6, 10), float64] {
    %1446 = @func_14851() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
    %1446.0
  };
  %1447() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_1638(%var_1622: Tensor[(26, 3), float64]) -> (Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) {
  %1448 = cast(meta[relay.Constant][70] /* ty=Tensor[(5, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(5, 4, 11), float64] */;
  %1449 = cast(meta[relay.Constant][71] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1450 = cast(%var_1622, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
  %1451 = reshape(%1449, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %1452 = reshape(%1450, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %1453 = @func_1057(%1451, %1452) /* ty=(Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) */;
  %1454 = cast(meta[relay.Constant][72] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1455 = reshape(%1454, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %1456 = @func_305(%1455) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %1457 = cast(meta[relay.Constant][73] /* ty=Tensor[(9, 63), uint32] */, dtype="uint32") /* ty=Tensor[(9, 63), uint32] */;
  %1458 = reshape(%1457, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint32] */;
  %1459 = erf(%1448) /* ty=Tensor[(5, 4, 11), float64] */;
  %1460 = %1453.4;
  %1461 = %1456.0;
  %1462 = @func_1145(%1458) /* ty=Tensor[(9, 9, 7), uint32] */;
  (%1459, %1460, meta[relay.Constant][71] /* ty=Tensor[(13), float64] */, %var_1622, %1461, meta[relay.Constant][72] /* ty=Tensor[(405), float32] */, %1462, meta[relay.Constant][73] /* ty=Tensor[(9, 63), uint32] */)
}

def @func_11411() -> (Tensor[(8, 6, 10), float32],) {
  @func_11409() /* ty=(Tensor[(8, 6, 10), float32],) */
}

def @func_10178() -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) {
  @func_10176() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_9385() -> (Tensor[(8, 2, 3), float64], Tensor[(13), float64]) {
  %1463 = cast(meta[relay.Constant][74] /* ty=Tensor[(8, 2, 3), float64] */, dtype="float64") /* ty=Tensor[(8, 2, 3), float64] */;
  %1464 = @func_8085() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(13), float64]) */;
  %1465 = asin(%1463) /* ty=Tensor[(8, 2, 3), float64] */;
  %1466 = %1464.3;
  (%1465, %1466)
}

def @func_18191() -> Tensor[(8, 6, 10), float64] {
  %1468 = fn () -> Tensor[(8, 6, 10), float64] {
    %1467 = @func_11226() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(12, 4, 11), float64]) */;
    %1467.2
  };
  %1468() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_5029() -> Tensor[(8, 6, 10), float64] {
  @func_4411() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_6014(%var_6013: Tensor[(9, 5, 9), float32]) -> (Tensor[(9, 5, 9), int16],) {
  %1476 = fn (%var_6003: Tensor[(9, 5, 9), float32]) -> (Tensor[(9, 5, 9), int16],) {
    %1469 = @func_4827() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32]) */;
    %1470 = %1469.1;
    %1471 = cast(%var_6003, dtype="int16") /* ty=Tensor[(9, 5, 9), int16] */;
    %1472 = shape_of(%1470, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1473 = cast(%1470, dtype="int16") /* ty=Tensor[(9, 5, 9), int16] */;
    %1474 = dyn.reshape(%1471, %1472, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1475 = subtract(%1473, %1474) /* ty=Tensor[(9, 5, 9), int16] */;
    (%1475,)
  };
  %1476(%var_6013) /* ty=(Tensor[(9, 5, 9), int16],) */
}

def @func_19525() -> (Tensor[(8, 6, 10), float64], Tensor[(78), float32]) {
  %1477 = @func_18925() /* ty=(Tensor[(78), float64], Tensor[(8, 6, 10), float64]) */;
  %1478 = %1477.0;
  %1479 = cast(meta[relay.Constant][75] /* ty=Tensor[(78), float64] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %1480 = shape_of(%1478, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1481 = cast(%1478, dtype="float32") /* ty=Tensor[(78), float32] */;
  %1482 = dyn.reshape(%1479, %1480, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1483 = @func_14532() /* ty=Tensor[(8, 6, 10), float64] */;
  %1484 = multiply(%1481, %1482) /* ty=Tensor[(78), float32] */;
  (%1483, %1484)
}

def @func_8262(%var_8204: Tensor[(8, 30), int16], %var_8205: Tensor[(13), float64], %var_8220: Tensor[(78, 3), float64], %var_8252: Tensor[(1, 405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 30), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(1008), uint16], Tensor[(3, 189), uint32], Tensor[(9, 5, 9), float64], Tensor[(1, 405), float32]) {
  %1485 = @func_7136() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
  %1486 = @func_7356() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1487 = cast(%var_8204, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %1488 = cast(%var_8204, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %1489 = cast(%var_8205, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1490 = cast(meta[relay.Constant][76] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %1491 = cast(%var_8204, dtype="int16") /* ty=Tensor[(8, 30), int16] */;
  %1492 = reshape(%1487, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %1493 = reshape(%1488, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %1494 = reshape(%1489, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %1495 = reshape(%1490, newshape=[78, 1]) /* ty=Tensor[(78, 1), float64] */;
  %1496 = reshape(%1491, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), int16] */;
  %1497 = @func_3693(%1492, %1493, %1494, %1495, %1496) /* ty=(Tensor[(26, 3), float64], Tensor[(1, 13), float64], Tensor[(78, 1), float64], Tensor[(3, 5, 16), uint64], Tensor[(405), float32], Tensor[(9, 5, 9), float32], Tensor[(3, 5, 16), bool], Tensor[(13), float64]) */;
  %1498 = %1497.2;
  %1499 = cast(%1498, dtype="int64") /* ty=Tensor[(78, 1), int64] */;
  %1500 = cast(%var_8220, dtype="int64") /* ty=Tensor[(78, 3), int64] */;
  %1501 = cast(meta[relay.Constant][77] /* ty=Tensor[(3, 189), uint32] */, dtype="uint32") /* ty=Tensor[(3, 189), uint32] */;
  %1502 = reshape(%1501, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %1503 = @func_7667(%1502) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(7, 9, 16), bool], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
  %1504 = cast(%var_8252, dtype="float32") /* ty=Tensor[(1, 405), float32] */;
  %1505 = reshape(%1504, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float32] */;
  %1506 = @func_305(%1505) /* ty=(Tensor[(9, 5, 9), float32], Tensor[(9, 5, 9), float64]) */;
  %1507 = %1485.0;
  %1508 = %1486.0;
  %1509 = subtract(%1499, %1500) /* ty=Tensor[(78, 3), int64] */;
  %1510 = %1503.3;
  %1511 = %1506.1;
  (%1507, %1508, %var_8204, %var_8205, meta[relay.Constant][76] /* ty=Tensor[(78), float64] */, %1509, %1510, meta[relay.Constant][77] /* ty=Tensor[(3, 189), uint32] */, %1511, %var_8252)
}

def @func_17734() -> (Tensor[(8, 6, 10), float64], Tensor[(7, 7, 2), int16], Tensor[(98), int16]) {
  %1512 = @func_16202() /* ty=(Tensor[(8, 6, 10), float64],) */;
  %1513 = cast(meta[relay.Constant][78] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %1514 = cast(meta[relay.Constant][78] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %1515 = reshape(%1513, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), int16] */;
  %1516 = reshape(%1514, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), int16] */;
  %1517 = @func_10087(%1515, %1516) /* ty=(Tensor[(7, 7, 2), int16], Tensor[(78), float64]) */;
  %1518 = %1512.0;
  %1519 = %1517.0;
  (%1518, %1519, meta[relay.Constant][78] /* ty=Tensor[(98), int16] */)
}

def @func_1061(%var_1059: Tensor[(13), float64], %var_1060: Tensor[(26, 3), float64]) -> (Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) {
  @func_1057(%var_1059, %var_1060) /* ty=(Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) */
}

def @func_8268(%var_8264: Tensor[(8, 30), int16], %var_8265: Tensor[(13), float64], %var_8266: Tensor[(78, 3), float64], %var_8267: Tensor[(1, 405), float32]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 30), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(1008), uint16], Tensor[(3, 189), uint32], Tensor[(9, 5, 9), float64], Tensor[(1, 405), float32]) {
  @func_8262(%var_8264, %var_8265, %var_8266, %var_8267) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 30), int16], Tensor[(13), float64], Tensor[(78), float64], Tensor[(78, 3), int64], Tensor[(1008), uint16], Tensor[(3, 189), uint32], Tensor[(9, 5, 9), float64], Tensor[(1, 405), float32]) */
}

def @func_4300(%var_4299: Tensor[(13), float64]) -> (Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float32]) {
  %1530 = fn (%var_4276: Tensor[(13), float64]) -> (Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float32]) {
    %1520 = cast(%var_4276, dtype="float64") /* ty=Tensor[(13), float64] */;
    %1521 = cast(meta[relay.Constant][79] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %1522 = reshape(%1520, newshape=[13]) /* ty=Tensor[(13), float64] */;
    %1523 = reshape(%1521, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
    %1524 = @func_1057(%1522, %1523) /* ty=(Tensor[(4, 13, 9), bool], Tensor[(4, 13, 9), float64], Tensor[(405), float32], Tensor[(13), float64], Tensor[(26, 3), float64]) */;
    %1525 = @func_3906() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1526 = %1525.0;
    %1527 = cast(%1526, dtype="float32") /* ty=Tensor[(8, 6, 10), float32] */;
    %1528 = %1524.4;
    %1529 = exp(%1527) /* ty=Tensor[(8, 6, 10), float32] */;
    (%1528, %var_4276, meta[relay.Constant][79] /* ty=Tensor[(78), float64] */, %1529)
  };
  %1530(%var_4299) /* ty=(Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(78), float64], Tensor[(8, 6, 10), float32]) */
}

def @func_18794() -> (Tensor[(405), float32], Tensor[(78), float32], Tensor[(8, 6, 10), float64], Tensor[(135, 3), float64], Tensor[(2, 2, 15), bool], Tensor[(1, 60), float64], Tensor[(2, 4, 7), float64], Tensor[(8, 6, 10), float64]) {
  @func_18792() /* ty=(Tensor[(405), float32], Tensor[(78), float32], Tensor[(8, 6, 10), float64], Tensor[(135, 3), float64], Tensor[(2, 2, 15), bool], Tensor[(1, 60), float64], Tensor[(2, 4, 7), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_11867() -> Tensor[(8, 6, 10), float64] {
  %1531 = fn () -> Tensor[(8, 6, 10), float64] {
    @func_6662() /* ty=Tensor[(8, 6, 10), float64] */
  };
  %1531() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_11822(%var_11821: Tensor[(78), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(78), float64]) {
  %1537 = fn (%var_11808: Tensor[(78), float64]) -> (Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(78), float64]) {
    %1532 = cast(%var_11808, dtype="float64") /* ty=Tensor[(78), float64] */;
    %1533 = reshape(%1532, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
    %1534 = @func_1638(%1533) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(26, 3), float64], Tensor[(13), float64], Tensor[(26, 3), float64], Tensor[(9, 5, 9), float32], Tensor[(405), float32], Tensor[(9, 9, 7), uint32], Tensor[(9, 63), uint32]) */;
    %1535 = @func_6554() /* ty=Tensor[(8, 6, 10), float64] */;
    %1536 = %1534.4;
    (%1535, %1536, %var_11808)
  };
  %1537(%var_11821) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(78), float64]) */
}

def @func_13765() -> Tensor[(8, 6, 10), float64] {
  @func_13763() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_2373(%var_2358: Tensor[(12, 4, 11), float64]) -> (Tensor[(12, 4, 11), float64],) {
  %1538 = cast(%var_2358, dtype="float64") /* ty=Tensor[(12, 4, 11), float64] */;
  %1539 = log(%1538) /* ty=Tensor[(12, 4, 11), float64] */;
  (%1539,)
}

def @func_12494(%var_12490: Tensor[(2, 4, 7), float64], %var_12491: Tensor[(98), int16], %var_12492: Tensor[(78), float64], %var_12493: Tensor[(405), float32]) -> (Tensor[(2, 4, 7), uint64], Tensor[(7, 7, 2), int16], Tensor[(98), int16], Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(9, 9, 7), uint32], Tensor[(715), int8], Tensor[(405), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) {
  @func_12488(%var_12490, %var_12491, %var_12492, %var_12493) /* ty=(Tensor[(2, 4, 7), uint64], Tensor[(7, 7, 2), int16], Tensor[(98), int16], Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(9, 9, 7), uint32], Tensor[(715), int8], Tensor[(405), float32], Tensor[(13), float64], Tensor[(8, 6, 10), float64]) */
}

def @func_12525() -> (Tensor[(8, 6, 10), float32],) {
  %1540 = @func_11409() /* ty=(Tensor[(8, 6, 10), float32],) */;
  %1541 = %1540.0;
  (%1541,)
}

def @func_15001(%var_14969: Tensor[(1008), uint16]) -> (Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(1008), uint16], Tensor[(567), float32]) {
  %1542 = @func_14851() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64]) */;
  %1543 = cast(%var_14969, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %1544 = cast(meta[relay.Constant][80] /* ty=Tensor[(567), uint32] */, dtype="uint32") /* ty=Tensor[(567), uint32] */;
  %1545 = reshape(%1543, newshape=[1008]) /* ty=Tensor[(1008), uint16] */;
  %1546 = reshape(%1544, newshape=[567]) /* ty=Tensor[(567), uint32] */;
  %1547 = @func_7551(%1545, %1546) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(567), uint32], Tensor[(1008), uint16], Tensor[(567), uint32]) */;
  %1548 = cast(meta[relay.Constant][80] /* ty=Tensor[(567), uint32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %1549 = @func_8981() /* ty=Tensor[(8, 6, 10), float64] */;
  %1550 = %1542.0;
  %1551 = %1547.0;
  %1552 = sigmoid(%1548) /* ty=Tensor[(567), float32] */;
  (%1549, %1550, %1551, %var_14969, %1552)
}

def @func_17286() -> (Tensor[(2, 4, 7), float64],) {
  @func_17284() /* ty=(Tensor[(2, 4, 7), float64],) */
}

def @func_17317(%var_17305: Tensor[(11, 14, 11), float64]) -> (Tensor[(11, 14, 11), float64], Tensor[(8, 6, 10), float64]) {
  %1553 = cast(%var_17305, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
  %1554 = tan(%1553) /* ty=Tensor[(11, 14, 11), float64] */;
  %1555 = @func_3944() /* ty=Tensor[(8, 6, 10), float64] */;
  (%1554, %1555)
}

def @func_17736() -> (Tensor[(8, 6, 10), float64], Tensor[(7, 7, 2), int16], Tensor[(98), int16]) {
  @func_17734() /* ty=(Tensor[(8, 6, 10), float64], Tensor[(7, 7, 2), int16], Tensor[(98), int16]) */
}

def @func_9208() -> Tensor[(192), float32] {
  @func_9206() /* ty=Tensor[(192), float32] */
}

def @func_19048() -> Tensor[(8, 6, 10), float64] {
  @func_19046() /* ty=Tensor[(8, 6, 10), float64] */
}

def @func_18215() -> Tensor[(8, 6, 10), float32] {
  %1557 = fn () -> Tensor[(8, 6, 10), float32] {
    %1556 = @func_17171() /* ty=(Tensor[(8, 6, 10), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float32]) */;
    %1556.0
  };
  %1557() /* ty=Tensor[(8, 6, 10), float32] */
}

def @func_10751() -> Tensor[(12, 2, 8), int32] {
  @func_10749() /* ty=Tensor[(12, 2, 8), int32] */
}

def @func_12303(%var_12301: Tensor[(7, 16, 12), float32], %var_12302: Tensor[(78), float64]) -> (Tensor[(7, 16, 12), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(3, 2, 13), bool], Tensor[(1, 13), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(432), int32]) {
  %1578 = fn (%var_12249: Tensor[(7, 16, 12), float32], %var_12273: Tensor[(78), float64]) -> (Tensor[(7, 16, 12), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(3, 2, 13), bool], Tensor[(1, 13), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(432), int32]) {
    %1558 = cast(%var_12249, dtype="float32") /* ty=Tensor[(7, 16, 12), float32] */;
    %1559 = @func_5520() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1560 = cast(%var_12273, dtype="float64") /* ty=Tensor[(78), float64] */;
    %1561 = reshape(%1560, newshape=[78]) /* ty=Tensor[(78), float64] */;
    %1562 = @func_10834(%1561) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(240), int16], Tensor[(78), float64]) */;
    %1563 = cast(meta[relay.Constant][81] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
    %1564 = cast(%var_12273, dtype="float64") /* ty=Tensor[(78), float64] */;
    %1565 = reshape(%1563, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
    %1566 = reshape(%1564, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
    %1567 = @func_630(%1565, %1566) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(9, 5, 9), float64], Tensor[(405), float32]) */;
    %1568 = @func_9051() /* ty=(Tensor[(8, 6, 10), float64],) */;
    %1569 = cast(meta[relay.Constant][82] /* ty=Tensor[(432), int32] */, dtype="int32") /* ty=Tensor[(432), int32] */;
    %1570 = reshape(%1569, newshape=[216, 2]) /* ty=Tensor[(216, 2), int32] */;
    %1571 = @func_8748(%1570) /* ty=(Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(6, 6, 12), bool], Tensor[(216, 2), int32], Tensor[(12, 2, 8), int32], Tensor[(13), float64], Tensor[(8, 6, 10), float64], Tensor[(9, 5, 9), float32], Tensor[(8, 6, 10), float64]) */;
    %1572 = asin(%1558) /* ty=Tensor[(7, 16, 12), float32] */;
    %1573 = %1559.0;
    %1574 = %1562.0;
    %1575 = %1567.0;
    %1576 = %1568.0;
    %1577 = %1571.8;
    (%1572, %1573, %1574, %var_12273, %1575, meta[relay.Constant][81] /* ty=Tensor[(1, 13), float64] */, %1576, %1577, meta[relay.Constant][82] /* ty=Tensor[(432), int32] */)
  };
  %1578(%var_12301, %var_12302) /* ty=(Tensor[(7, 16, 12), float32], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(78), float64], Tensor[(3, 2, 13), bool], Tensor[(1, 13), float64], Tensor[(8, 6, 10), float64], Tensor[(8, 6, 10), float64], Tensor[(432), int32]) */
}

def @func_16806() -> Tensor[(8, 6, 10), float64] {
  @func_16804() /* ty=Tensor[(8, 6, 10), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen793/build/output.py:5321: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen793/build/output.py", line 5326, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(260) tvmgen_default_fused_log2_kernel0(double* __restrict__ T_log2, double* __restrict__ placeholder) {
  T_log2[(((int)threadIdx.x))] = log2(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_2529(%var_2519: Tensor[(10, 2, 9), uint8], %var_2520: Tensor[(10, 2, 9), uint8]) -> (Tensor[(10, 2, 9), uint8],) {
  %0 = cast(%var_2520, dtype="uint8") /* ty=Tensor[(10, 2, 9), uint8] */;
  %1 = shape_of(%var_2519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_2519, dtype="uint8") /* ty=Tensor[(10, 2, 9), uint8] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %4 = bitwise_xor(%2, %3) /* ty=Tensor[(10, 2, 9), uint8] */;
  (%4,)
}

def @func_16075(%var_16072: Tensor[(1, 220), uint64]) -> (Tensor[(3, 2, 9), int16], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(10, 2, 11), float64], Tensor[(1, 220), uint64]) {
  %5 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %7 = reshape(%6, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %8 = @func_5655(%7) /* ty=(Tensor[(13, 11, 6), float64],) */;
  %9 = cast(%var_16072, dtype="uint64") /* ty=Tensor[(1, 220), uint64] */;
  %10 = cast(%var_16072, dtype="uint64") /* ty=Tensor[(1, 220), uint64] */;
  %11 = reshape(%9, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %12 = reshape(%10, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %13 = @func_2054(%11, %12) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */;
  %14 = %5.0;
  %15 = %8.0;
  %16 = %13.2;
  (%14, %15, meta[relay.Constant][0] /* ty=Tensor[(858), float64] */, %16, %var_16072)
}

def @func_4131(%var_4023: Tensor[(10, 2, 7), float64], %var_4047: Tensor[(560), int64]) -> (Tensor[(10, 2, 7), float64], Tensor[(672), uint32], Tensor[(3072, 1), bool], int64, Tensor[(220, 1), uint64], Tensor[(9, 2, 16), float64], Tensor[(28), int64], Tensor[(560), int64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64], Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), float64], Tensor[(672), uint32]) {
  %17 = cast(%var_4023, dtype="float64") /* ty=Tensor[(10, 2, 7), float64] */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
  %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
  %20 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %21 = reshape(%18, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %22 = reshape(%19, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %23 = reshape(%20, newshape=[]) /* ty=int64 */;
  %24 = @func_3844(%21, %22, %23) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
  %27 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %28 = reshape(%25, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %29 = reshape(%26, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %30 = reshape(%27, newshape=[]) /* ty=int64 */;
  %31 = @func_3844(%28, %29, %30) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */;
  %32 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(28), int64] */, dtype="int64") /* ty=Tensor[(28), int64] */;
  %34 = cast(%var_4047, dtype="int64") /* ty=Tensor[(560), int64] */;
  %35 = reshape(%32, newshape=[]) /* ty=int64 */;
  %36 = reshape(%33, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), int64] */;
  %37 = reshape(%34, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %38 = @func_1326(%35, %36, %37) /* ty=(Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) */;
  %39 = cast(-1 /* ty=int64 */, dtype="uint8") /* ty=uint8 */;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(2288), uint8] */, dtype="uint8") /* ty=Tensor[(2288), uint8] */;
  %41 = reshape(%39, newshape=[]) /* ty=uint8 */;
  %42 = reshape(%40, newshape=[13, 11, 16]) /* ty=Tensor[(13, 11, 16), uint8] */;
  %43 = @func_3382(%41, %42) /* ty=(Tensor[(13, 11, 16), bool],) */;
  %44 = %38.2;
  %45 = cast(%44, dtype="float64") /* ty=Tensor[(9, 2, 16), float64] */;
  %46 = %31.2;
  %47 = cast(%46, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
  %48 = reshape(%45, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %49 = reshape(%47, newshape=[220, 1]) /* ty=Tensor[(220, 1), uint64] */;
  %50 = @func_3077(%48, %49) /* ty=(Tensor[(9, 1, 6), int64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64]) */;
  %51 = cast(%46, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
  %52 = cast(%46, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
  %53 = reshape(%51, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %54 = reshape(%52, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %55 = @func_2054(%53, %54) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */;
  %56 = cast(%44, dtype="float64") /* ty=Tensor[(9, 2, 16), float64] */;
  %57 = cast(%var_4047, dtype="int64") /* ty=Tensor[(560), int64] */;
  %58 = reshape(%56, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
  %59 = reshape(%57, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %60 = @func_948(%58, %59) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
  %61 = cast(%var_4047, dtype="int64") /* ty=Tensor[(560), int64] */;
  %62 = cast(%var_4047, dtype="int64") /* ty=Tensor[(560), int64] */;
  %63 = reshape(%61, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %64 = reshape(%62, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %65 = @func_794(%63, %64) /* ty=(Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) */;
  %66 = cast(meta[relay.Constant][1] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
  %67 = cast(meta[relay.Constant][1] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
  %68 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %69 = reshape(%66, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %70 = reshape(%67, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %71 = reshape(%68, newshape=[]) /* ty=int64 */;
  %72 = @func_3844(%69, %70, %71) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */;
  %73 = acosh(%17) /* ty=Tensor[(10, 2, 7), float64] */;
  %74 = %24.8;
  %75 = %43.0;
  %76 = %50.4;
  %77 = %55.1;
  %78 = %60.0;
  %79 = %65.1;
  %80 = %72.8;
  (%73, %74, meta[relay.Constant][1] /* ty=Tensor[(3072, 1), bool] */, -1 /* ty=int64 */, %46, %44, meta[relay.Constant][2] /* ty=Tensor[(28), int64] */, %var_4047, %75, meta[relay.Constant][3] /* ty=Tensor[(2288), uint8] */, %76, %77, %78, %79, %80)
}

def @func_9481(%var_9423: Tensor[(2, 8, 9), float64], %var_9441: Tensor[(2400), float64]) -> (Tensor[(2, 8, 9), float64], Tensor[(14, 8, 5), int64], Tensor[(2400), float64], Tensor[(288), float64], Tensor[(14, 8, 5), int64], Tensor[(5, 3, 16), float64], float64, Tensor[(240, 1), float64]) {
  %81 = cast(%var_9423, dtype="float64") /* ty=Tensor[(2, 8, 9), float64] */;
  %82 = cast(%var_9441, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %83 = cast(%var_9441, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %84 = cast(meta[relay.Constant][4] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %85 = reshape(%82, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %86 = reshape(%83, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %87 = reshape(%84, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %88 = @func_2786(%85, %86, %87) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %89 = %88.4;
  %90 = cast(%89, dtype="int64") /* ty=Tensor[(14, 8, 5), int64] */;
  %91 = cast(%89, dtype="int64") /* ty=Tensor[(14, 8, 5), int64] */;
  %92 = reshape(%90, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %93 = reshape(%91, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %94 = @func_794(%92, %93) /* ty=(Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) */;
  %95 = cast(-6.96544f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(240, 1), float64] */, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %97 = reshape(%95, newshape=[]) /* ty=float64 */;
  %98 = reshape(%96, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), float64] */;
  %99 = @func_4680(%97, %98) /* ty=(Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) */;
  %100 = log2(%81) /* ty=Tensor[(2, 8, 9), float64] */;
  %101 = %94.0;
  %102 = %99.0;
  (%100, %89, %var_9441, meta[relay.Constant][4] /* ty=Tensor[(288), float64] */, %101, %102, -6.96544f64 /* ty=float64 */, meta[relay.Constant][5] /* ty=Tensor[(240, 1), float64] */)
}

def @func_9325(%var_9279: Tensor[(4, 6, 4), float64], %var_9319: Tensor[(560), int64]) -> (Tensor[(4, 6, 4), float64], Tensor[(14, 8, 5), int64], Tensor[(24, 12), float64], Tensor[(560), int64]) {
  %103 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 4), float64] */;
  %104 = shape_of(%var_9279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%var_9279, dtype="float64") /* ty=Tensor[(4, 6, 4), float64] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %107 = cast(meta[relay.Constant][7] /* ty=Tensor[(24, 12), float64] */, dtype="float64") /* ty=Tensor[(24, 12), float64] */;
  %108 = cast(%var_9319, dtype="int64") /* ty=Tensor[(560), int64] */;
  %109 = reshape(%107, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
  %110 = reshape(%108, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %111 = @func_948(%109, %110) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
  %112 = floor_divide(%105, %106) /* ty=Tensor[(4, 6, 4), float64] */;
  %113 = %111.1;
  (%112, %113, meta[relay.Constant][7] /* ty=Tensor[(24, 12), float64] */, %var_9319)
}

def @func_17572(%var_17565: Tensor[(104, 20), float32]) -> (Tensor[(16, 13, 5), float32], Tensor[(1040), float32], Tensor[(10, 2, 11), float32], Tensor[(16, 10, 13), float32], Tensor[(104, 20), float32]) {
  %114 = cast(meta[relay.Constant][8] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %115 = reshape(%114, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), float32] */;
  %116 = @func_16146() /* ty=(Tensor[(10, 2, 11), int16],) */;
  %117 = %116.0;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %119 = cast(%var_17565, dtype="float32") /* ty=Tensor[(104, 20), float32] */;
  %120 = reshape(%119, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), float32] */;
  %121 = @func_8650(%120) /* ty=(Tensor[(16, 10, 13), float32],) */;
  %122 = @func_10649(%115) /* ty=Tensor[(16, 13, 5), float32] */;
  %123 = cos(%118) /* ty=Tensor[(10, 2, 11), float32] */;
  %124 = %121.0;
  (%122, meta[relay.Constant][8] /* ty=Tensor[(1040), float32] */, %123, %124, %var_17565)
}

def @func_17408(%var_17382: float64, %var_17383: Tensor[(13, 10, 7), float64], %var_17390: Tensor[(3072), bool], %var_17392: Tensor[(240), float64], %var_17393: Tensor[(2400), float64]) -> (Tensor[(13, 10, 7), bool], Tensor[(6, 13, 13), bool], Tensor[(3072), bool], Tensor[(140), float64], Tensor[(240), float64], Tensor[(2400), float64], Tensor[(3, 2, 9), int16]) {
  %125 = cast(%var_17382, dtype="bool") /* ty=bool */;
  %126 = cast(%var_17383, dtype="bool") /* ty=Tensor[(13, 10, 7), bool] */;
  %127 = greater(%125, %126) /* ty=Tensor[(13, 10, 7), bool] */;
  %128 = cast(%127, dtype="float32") /* ty=Tensor[(13, 10, 7), float32] */;
  %129 = cast(%var_17390, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %130 = cast(meta[relay.Constant][9] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %131 = cast(%var_17392, dtype="float64") /* ty=Tensor[(240), float64] */;
  %132 = cast(%var_17393, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %133 = reshape(%128, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %134 = reshape(%129, newshape=[3072]) /* ty=Tensor[(3072), bool] */;
  %135 = reshape(%130, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %136 = reshape(%131, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %137 = reshape(%132, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %138 = @func_5904(%133, %134, %135, %136, %137) /* ty=(Tensor[(14, 13, 5), float32], Tensor[(16, 16, 12), bool], Tensor[(3072), bool], int64, Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(220, 1), uint64], Tensor[(140), float64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(240), float64], Tensor[(288, 1), float64], Tensor[(2400), float64]) */;
  %139 = @func_16686() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %140 = %138.4;
  %141 = %139.0;
  (%127, %140, %var_17390, meta[relay.Constant][9] /* ty=Tensor[(140), float64] */, %var_17392, %var_17393, %141)
}

def @func_15188() -> (Tensor[(3, 2, 9), int16],) {
  %142 = @func_14284() /* ty=Tensor[(3, 2, 9), int16] */;
  (%142,)
}

def @func_17874() -> Tensor[(3, 2, 9), int16] {
  @func_14466() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_13588(%var_13566: Tensor[(2400), float64], %var_13567: Tensor[(288), float64], %var_13583: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(288), float64], Tensor[(288, 1), float32], Tensor[(2400), float32]) {
  %143 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %144 = cast(%var_13566, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %145 = cast(%var_13566, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %146 = cast(%var_13567, dtype="float64") /* ty=Tensor[(288), float64] */;
  %147 = reshape(%144, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %148 = reshape(%145, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %149 = reshape(%146, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %150 = @func_2786(%147, %148, %149) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %151 = %150.2;
  %152 = cast(%151, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %153 = cast(%var_13583, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %154 = shape_of(%var_13566, dtype="int32") /* ty=Tensor[(1), int32] */;
  %155 = cast(%var_13566, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?), float32] */;
  %157 = %143.0;
  %158 = tan(%152) /* ty=Tensor[(288, 1), float32] */;
  %159 = floor_mod(%155, %156) /* ty=Tensor[(2400), float32] */;
  (%157, %var_13567, %158, %159)
}

def @func_5655(%var_5644: Tensor[(13, 11, 6), float64]) -> (Tensor[(13, 11, 6), float64],) {
  %160 = cast(%var_5644, dtype="float64") /* ty=Tensor[(13, 11, 6), float64] */;
  %161 = atanh(%160) /* ty=Tensor[(13, 11, 6), float64] */;
  (%161,)
}

def @func_17626(%var_17624: Tensor[(520), uint8]) -> (Tensor[(3, 2, 9), int16], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) {
  %162 = cast(%var_17624, dtype="uint8") /* ty=Tensor[(520), uint8] */;
  %163 = cast(%var_17624, dtype="uint8") /* ty=Tensor[(520), uint8] */;
  %164 = reshape(%162, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), uint8] */;
  %165 = reshape(%163, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), uint8] */;
  %166 = @func_13402(%164, %165) /* ty=(Tensor[(8, 13, 5), bool],) */;
  %167 = @func_14175() /* ty=Tensor[(3, 2, 9), int16] */;
  %168 = %166.0;
  (%167, %168, %var_17624)
}

def @func_18075() -> (Tensor[(3, 2, 9), int16],) {
  %169 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %170 = %169.0;
  (%170,)
}

def @func_7167(%var_7158: Tensor[(8, 16, 7), uint8], %var_7159: Tensor[(8, 16, 7), uint8]) -> Tensor[(8, 16, 7), uint8] {
  %171 = cast(%var_7159, dtype="uint8") /* ty=Tensor[(8, 16, 7), uint8] */;
  %172 = shape_of(%var_7158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%var_7158, dtype="uint8") /* ty=Tensor[(8, 16, 7), uint8] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  left_shift(%173, %174) /* ty=Tensor[(8, 16, 7), uint8] */
}

def @func_15730(%var_15721: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), float32], int64, int64, Tensor[(2400), float32], Tensor[(10, 2, 11), float64]) {
  %175 = @func_15335() /* ty=(Tensor[(3, 2, 9), float32],) */;
  %176 = cast(meta[relay.Constant][10] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %177 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %178 = reshape(%176, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %179 = reshape(%177, newshape=[]) /* ty=int64 */;
  %180 = @func_8860(%178, %179) /* ty=(Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) */;
  %181 = cast(%var_15721, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %182 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(2400), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %183 = cast(meta[relay.Constant][10] /* ty=Tensor[(2400), float64] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?), float32] */;
  %185 = @func_13909() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) */;
  %186 = %175.0;
  %187 = %180.3;
  %188 = power(%183, %184) /* ty=Tensor[(2400), float32] */;
  %189 = %185.1;
  (%186, %187, 7 /* ty=int64 */, %188, %189)
}

def @func_9656(%var_9653: Tensor[(13, 10, 9), float32]) -> (Tensor[(13, 10, 9), float32],) {
  %190 = cast(%var_9653, dtype="float32") /* ty=Tensor[(13, 10, 9), float32] */;
  %191 = cos(%190) /* ty=Tensor[(13, 10, 9), float32] */;
  (%191,)
}

def @func_14830() -> Tensor[(3, 2, 9), int16] {
  %192 = @func_14412() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */;
  %192.1
}

def @func_17969(%var_17898: Tensor[(3072), bool], %var_17920: Tensor[(1, 231), float64], %var_17922: Tensor[(288), float64], %var_17948: Tensor[(2, 231), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(455, 2), float32], Tensor[(910), float32], Tensor[(3072), bool], Tensor[(2400), float64], Tensor[(10, 2, 11), int16], int64, int64, Tensor[(288), float64], Tensor[(429, 2), int8], Tensor[(858), float64], Tensor[(3, 2, 9), int16], Tensor[(2, 231), bool]) {
  %193 = @func_15612() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %195 = cast(%var_17898, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %196 = cast(meta[relay.Constant][12] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %197 = reshape(%194, newshape=[455, 2]) /* ty=Tensor[(455, 2), float32] */;
  %198 = reshape(%195, newshape=[3072]) /* ty=Tensor[(3072), bool] */;
  %199 = reshape(%196, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %200 = @func_16348(%197, %198, %199) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(14, 13, 5), float32], Tensor[(455, 2), float32], Tensor[(3072), bool], Tensor[(140), float64], Tensor[(8, 30), float64], Tensor[(2400), float64]) */;
  %201 = @func_16146() /* ty=(Tensor[(10, 2, 11), int16],) */;
  %202 = cast(%var_17920, dtype="float64") /* ty=Tensor[(1, 231), float64] */;
  %203 = cast(%var_17920, dtype="float64") /* ty=Tensor[(1, 231), float64] */;
  %204 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %205 = cast(%var_17922, dtype="float64") /* ty=Tensor[(288), float64] */;
  %206 = reshape(%202, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %207 = reshape(%203, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %208 = reshape(%204, newshape=[]) /* ty=int64 */;
  %209 = reshape(%205, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %210 = @func_12890(%206, %207, %208, %209) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) */;
  %211 = cast(-7 /* ty=int64 */, dtype="int8") /* ty=int8 */;
  %212 = cast(meta[relay.Constant][13] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %213 = cast(meta[relay.Constant][12] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %214 = reshape(%211, newshape=[]) /* ty=int8 */;
  %215 = reshape(%212, newshape=[429, 2]) /* ty=Tensor[(429, 2), float64] */;
  %216 = reshape(%213, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %217 = @func_16872(%214, %215, %216) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(7, 3, 11), float64], Tensor[(288), float64], Tensor[(2400), float64], Tensor[(429, 2), int8], Tensor[(3, 2, 9), int16]) */;
  %218 = @func_15612() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %219 = cast(%var_17920, dtype="int32") /* ty=Tensor[(1, 231), int32] */;
  %220 = cast(%var_17948, dtype="int32") /* ty=Tensor[(2, 231), int32] */;
  %221 = bitwise_xor(%219, %220) /* ty=Tensor[(2, 231), int32] */;
  %222 = cast(%221, dtype="bool") /* ty=Tensor[(2, 231), bool] */;
  %223 = shape_of(%var_17948, dtype="int32") /* ty=Tensor[(2), int32] */;
  %224 = cast(%var_17948, dtype="bool") /* ty=Tensor[(2, 231), bool] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %226 = %193.0;
  %227 = %200.2;
  %228 = %201.0;
  %229 = %210.5;
  %230 = %217.4;
  %231 = %218.0;
  %232 = logical_or(%224, %225) /* ty=Tensor[(2, 231), bool] */;
  (%226, %227, meta[relay.Constant][11] /* ty=Tensor[(910), float32] */, %var_17898, meta[relay.Constant][12] /* ty=Tensor[(2400), float64] */, %228, %229, -7 /* ty=int64 */, %var_17922, %230, meta[relay.Constant][13] /* ty=Tensor[(858), float64] */, %231, %232)
}

def @func_13835() -> (Tensor[(3, 2, 9), int16],) {
  %233 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %234 = %233.0;
  (%234,)
}

def @func_948(%var_941: Tensor[(9, 2, 16), float64], %var_945: Tensor[(560), int64]) -> (Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) {
  %235 = cast(%var_941, dtype="float64") /* ty=Tensor[(9, 2, 16), float64] */;
  %236 = cast(%var_945, dtype="int64") /* ty=Tensor[(560), int64] */;
  %237 = cast(%var_945, dtype="int64") /* ty=Tensor[(560), int64] */;
  %238 = reshape(%236, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %239 = reshape(%237, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %240 = @func_794(%238, %239) /* ty=(Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) */;
  %241 = sinh(%235) /* ty=Tensor[(9, 2, 16), float64] */;
  %242 = %240.0;
  (%241, %242, %var_945)
}

def @func_16348(%var_16326: Tensor[(455, 2), float32], %var_16327: Tensor[(3072), bool], %var_16330: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(14, 13, 5), float32], Tensor[(455, 2), float32], Tensor[(3072), bool], Tensor[(140), float64], Tensor[(8, 30), float64], Tensor[(2400), float64]) {
  %243 = @func_14759() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %244 = cast(%var_16326, dtype="float32") /* ty=Tensor[(455, 2), float32] */;
  %245 = cast(%var_16327, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %246 = cast(meta[relay.Constant][14] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %247 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 30), float64] */, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %248 = cast(%var_16330, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %249 = reshape(%244, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %250 = reshape(%245, newshape=[3072]) /* ty=Tensor[(3072), bool] */;
  %251 = reshape(%246, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %252 = reshape(%247, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %253 = reshape(%248, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %254 = @func_5904(%249, %250, %251, %252, %253) /* ty=(Tensor[(14, 13, 5), float32], Tensor[(16, 16, 12), bool], Tensor[(3072), bool], int64, Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(220, 1), uint64], Tensor[(140), float64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(240), float64], Tensor[(288, 1), float64], Tensor[(2400), float64]) */;
  %255 = %243.0;
  %256 = %254.0;
  (%255, %256, %var_16326, %var_16327, meta[relay.Constant][14] /* ty=Tensor[(140), float64] */, meta[relay.Constant][15] /* ty=Tensor[(8, 30), float64] */, %var_16330)
}

def @func_17310() -> (Tensor[(3, 2, 9), int16],) {
  %257 = @func_14759() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %258 = %257.0;
  (%258,)
}

def @func_17881() -> (Tensor[(3, 2, 9), int16],) {
  %259 = @func_17874() /* ty=Tensor[(3, 2, 9), int16] */;
  (%259,)
}

def @func_14466() -> Tensor[(3, 2, 9), int16] {
  @func_14284() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_8860(%var_8824: Tensor[(16, 15, 10), float64], %var_8831: int64) -> (Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) {
  %260 = cast(%var_8824, dtype="float64") /* ty=Tensor[(16, 15, 10), float64] */;
  %261 = cast(meta[relay.Constant][16] /* ty=Tensor[(3072), bool] */, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %262 = cast(meta[relay.Constant][16] /* ty=Tensor[(3072), bool] */, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %263 = cast(%var_8831, dtype="int64") /* ty=int64 */;
  %264 = reshape(%261, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %265 = reshape(%262, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %266 = reshape(%263, newshape=[]) /* ty=int64 */;
  %267 = @func_3844(%264, %265, %266) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */;
  %268 = log(%260) /* ty=Tensor[(16, 15, 10), float64] */;
  %269 = %267.1;
  (%268, %269, meta[relay.Constant][16] /* ty=Tensor[(3072), bool] */, %var_8831)
}

def @func_14759() -> (Tensor[(3, 2, 9), int16],) {
  %270 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %271 = %270.0;
  (%271,)
}

def @func_16394() -> (Tensor[(14, 13, 9), float32], Tensor[(14, 13, 9), float32]) {
  %272 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 13, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 13, 9), float32] */;
  %273 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 13, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 13, 9), float32] */;
  %274 = sinh(%272) /* ty=Tensor[(14, 13, 9), float32] */;
  %275 = cosh(%273) /* ty=Tensor[(14, 13, 9), float32] */;
  (%274, %275)
}

def @func_13429() -> (Tensor[(3, 2, 9), int16],) {
  %276 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %277 = %276.0;
  (%277,)
}

def @func_16719(%var_16710: Tensor[(288), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(768), float32], Tensor[(231), float64], int64, Tensor[(288), float64]) {
  %278 = cast(meta[relay.Constant][18] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %279 = cast(meta[relay.Constant][18] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %280 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %281 = cast(%var_16710, dtype="float64") /* ty=Tensor[(288), float64] */;
  %282 = reshape(%278, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %283 = reshape(%279, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %284 = reshape(%280, newshape=[]) /* ty=int64 */;
  %285 = reshape(%281, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %286 = @func_12890(%282, %283, %284, %285) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) */;
  %287 = @func_14830() /* ty=Tensor[(3, 2, 9), int16] */;
  %288 = %286.7;
  (%287, %288, meta[relay.Constant][18] /* ty=Tensor[(231), float64] */, 8 /* ty=int64 */, %var_16710)
}

def @func_9561(%var_9549: Tensor[(2400), float64]) -> (Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) {
  %289 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
  %290 = cast(meta[relay.Constant][20] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %291 = cast(%var_9549, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %292 = reshape(%290, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), float64] */;
  %293 = reshape(%291, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %294 = @func_9481(%292, %293) /* ty=(Tensor[(2, 8, 9), float64], Tensor[(14, 8, 5), int64], Tensor[(2400), float64], Tensor[(288), float64], Tensor[(14, 8, 5), int64], Tensor[(5, 3, 16), float64], float64, Tensor[(240, 1), float64]) */;
  %295 = asinh(%289) /* ty=Tensor[(2, 4, 11), float32] */;
  %296 = %294.1;
  (%295, %296, meta[relay.Constant][20] /* ty=Tensor[(144), float64] */, %var_9549)
}

def @func_794(%var_787: Tensor[(14, 8, 5), int64], %var_788: Tensor[(14, 8, 5), int64]) -> (Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) {
  %297 = cast(%var_788, dtype="int64") /* ty=Tensor[(14, 8, 5), int64] */;
  %298 = shape_of(%var_787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%var_787, dtype="int64") /* ty=Tensor[(14, 8, 5), int64] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %301 = cast(%var_788, dtype="float64") /* ty=Tensor[(14, 8, 5), float64] */;
  %302 = bitwise_and(%299, %300) /* ty=Tensor[(14, 8, 5), int64] */;
  %303 = atan(%301) /* ty=Tensor[(14, 8, 5), float64] */;
  (%302, %303)
}

def @func_10929(%var_10869: Tensor[(7, 15, 11), float64], %var_10918: Tensor[(1170), float32]) -> (Tensor[(7, 15, 11), bool], Tensor[(28), int64], Tensor[(300), int32], Tensor[(2, 336), uint32], Tensor[(13, 10, 9), float32], Tensor[(1170), float32]) {
  %304 = cast(%var_10869, dtype="float64") /* ty=Tensor[(7, 15, 11), float64] */;
  %305 = log(%304) /* ty=Tensor[(7, 15, 11), float64] */;
  %306 = cast(%var_10869, dtype="bool") /* ty=Tensor[(7, 15, 11), bool] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%305, dtype="bool") /* ty=Tensor[(7, 15, 11), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %310 = cast(meta[relay.Constant][21] /* ty=Tensor[(300), int32] */, dtype="int32") /* ty=Tensor[(300), int32] */;
  %311 = cast(meta[relay.Constant][21] /* ty=Tensor[(300), int32] */, dtype="int32") /* ty=Tensor[(300), int32] */;
  %312 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 336), uint32] */, dtype="uint32") /* ty=Tensor[(2, 336), uint32] */;
  %313 = reshape(%310, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), int32] */;
  %314 = reshape(%311, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), int32] */;
  %315 = reshape(%312, newshape=[672]) /* ty=Tensor[(672), uint32] */;
  %316 = @func_6369(%313, %314, %315) /* ty=(Tensor[(10, 15, 2), int32], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 16, 6), bool], Tensor[(672), uint32], int64, Tensor[(28), int64], Tensor[(560), int64]) */;
  %317 = cast(%var_10918, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %318 = reshape(%317, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float32] */;
  %319 = @func_9656(%318) /* ty=(Tensor[(13, 10, 9), float32],) */;
  %320 = greater(%308, %309) /* ty=Tensor[(7, 15, 11), bool] */;
  %321 = %316.6;
  %322 = %319.0;
  (%320, %321, meta[relay.Constant][21] /* ty=Tensor[(300), int32] */, meta[relay.Constant][22] /* ty=Tensor[(2, 336), uint32] */, %322, %var_10918)
}

def @func_18365(%var_18344: Tensor[(858), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(858), bool]) {
  %323 = @func_16261() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %324 = @func_18075() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %325 = cast(%var_18344, dtype="float64") /* ty=Tensor[(858), float64] */;
  %326 = reshape(%325, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %327 = @func_5655(%326) /* ty=(Tensor[(13, 11, 6), float64],) */;
  %328 = %327.0;
  %329 = cast(%328, dtype="bool") /* ty=Tensor[(13, 11, 6), bool] */;
  %330 = shape_of(%var_18344, dtype="int32") /* ty=Tensor[(1), int32] */;
  %331 = cast(%var_18344, dtype="bool") /* ty=Tensor[(858), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?), bool] */;
  %333 = %323.0;
  %334 = %324.0;
  %335 = less(%331, %332) /* ty=Tensor[(858), bool] */;
  (%333, %334, %335)
}

def @func_15612() -> (Tensor[(3, 2, 9), int16],) {
  %336 = @func_14284() /* ty=Tensor[(3, 2, 9), int16] */;
  (%336,)
}

def @func_2054(%var_1998: Tensor[(10, 2, 11), uint64], %var_1999: Tensor[(10, 2, 11), uint64]) -> (Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) {
  %337 = cast(%var_1999, dtype="uint64") /* ty=Tensor[(10, 2, 11), uint64] */;
  %338 = shape_of(%var_1998, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%var_1998, dtype="uint64") /* ty=Tensor[(10, 2, 11), uint64] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %341 = left_shift(%339, %340) /* ty=Tensor[(10, 2, 11), uint64] */;
  %342 = cast(%341, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %343 = rsqrt(%342) /* ty=Tensor[(10, 2, 11), float32] */;
  %344 = cast(%343, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %345 = sinh(%344) /* ty=Tensor[(10, 2, 11), float32] */;
  %346 = cast(%var_1999, dtype="uint8") /* ty=Tensor[(10, 2, 11), uint8] */;
  %347 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%341, dtype="uint8") /* ty=Tensor[(10, 2, 11), uint8] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %350 = right_shift(%348, %349) /* ty=Tensor[(10, 2, 11), uint8] */;
  %351 = cast(%350, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %352 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%345, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %355 = cast(%343, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
  %356 = cast(%343, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
  %357 = floor_divide(%353, %354) /* ty=Tensor[(10, 2, 11), float32] */;
  %358 = sqrt(%355) /* ty=Tensor[(10, 2, 11), float64] */;
  %359 = asinh(%356) /* ty=Tensor[(10, 2, 11), float64] */;
  (%357, %358, %359)
}

def @func_14268(%var_14260: float64, %var_14266: Tensor[(288), float64]) -> (Tensor[(7, 1), float32], Tensor[(7), float32], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), float32], Tensor[(8, ?, ?), int32], float64, Tensor[(8), float64], Tensor[(55, 4), uint64], Tensor[(768), float32], Tensor[(288), float64]) {
  %360 = cast(meta[relay.Constant][23] /* ty=Tensor[(7), float32] */, dtype="float32") /* ty=Tensor[(7), float32] */;
  %361 = reshape(%360, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
  %362 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %363 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %364 = %363.0;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
  %366 = cast(%var_14260, dtype="float64") /* ty=float64 */;
  %367 = cast(meta[relay.Constant][24] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %368 = reshape(%366, newshape=[]) /* ty=float64 */;
  %369 = reshape(%367, newshape=[8, 1, 1]) /* ty=Tensor[(8, 1, 1), float64] */;
  %370 = cast(meta[relay.Constant][25] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %371 = cast(%var_14266, dtype="float64") /* ty=Tensor[(288), float64] */;
  %372 = reshape(%370, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float32] */;
  %373 = reshape(%371, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %374 = @func_7586(%372, %373) /* ty=(Tensor[(6, 8, 16), uint16], Tensor[(9, 1, 6), int64], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 8, 16), float64]) */;
  %375 = @func_8211(%361) /* ty=Tensor[(7, 1), float32] */;
  %376 = %362.0;
  %377 = erf(%365) /* ty=Tensor[(3, 2, 9), float32] */;
  %378 = @func_10413(%368, %369) /* ty=Tensor[(8, ?, ?), int32] */;
  %379 = %374.3;
  (%375, meta[relay.Constant][23] /* ty=Tensor[(7), float32] */, %376, %377, %378, %var_14260, meta[relay.Constant][24] /* ty=Tensor[(8), float64] */, %379, meta[relay.Constant][25] /* ty=Tensor[(768), float32] */, %var_14266)
}

def @func_3844(%var_3802: Tensor[(16, 16, 12), bool], %var_3803: Tensor[(16, 16, 12), bool], %var_3820: int64) -> (Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) {
  %380 = cast(%var_3803, dtype="bool") /* ty=Tensor[(16, 16, 12), bool] */;
  %381 = shape_of(%var_3802, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_3802, dtype="bool") /* ty=Tensor[(16, 16, 12), bool] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %384 = cast(meta[relay.Constant][26] /* ty=Tensor[(220, 1), uint64] */, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
  %385 = cast(meta[relay.Constant][26] /* ty=Tensor[(220, 1), uint64] */, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
  %386 = reshape(%384, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %387 = reshape(%385, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %388 = @func_2054(%386, %387) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */;
  %389 = cast(%var_3820, dtype="int64") /* ty=int64 */;
  %390 = cast(meta[relay.Constant][27] /* ty=Tensor[(28), int64] */, dtype="int64") /* ty=Tensor[(28), int64] */;
  %391 = cast(meta[relay.Constant][28] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %392 = reshape(%389, newshape=[]) /* ty=int64 */;
  %393 = reshape(%390, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), int64] */;
  %394 = reshape(%391, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %395 = @func_1326(%392, %393, %394) /* ty=(Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) */;
  %396 = cast(meta[relay.Constant][29] /* ty=Tensor[(672), uint32] */, dtype="uint32") /* ty=Tensor[(672), uint32] */;
  %397 = cast(meta[relay.Constant][29] /* ty=Tensor[(672), uint32] */, dtype="uint32") /* ty=Tensor[(672), uint32] */;
  %398 = cast(%var_3820, dtype="int64") /* ty=int64 */;
  %399 = %395.1;
  %400 = cast(%399, dtype="int64") /* ty=Tensor[(7, 1, 4), int64] */;
  %401 = cast(meta[relay.Constant][28] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %402 = reshape(%396, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
  %403 = reshape(%397, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
  %404 = reshape(%398, newshape=[]) /* ty=int64 */;
  %405 = reshape(%400, newshape=[28]) /* ty=Tensor[(28), int64] */;
  %406 = reshape(%401, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %407 = @func_2677(%402, %403, %404, %405, %406) /* ty=(Tensor[(7, 16, 6), bool], Tensor[(28), int64], Tensor[(560), int64], Tensor[(144, 2), bool]) */;
  %408 = logical_and(%382, %383) /* ty=Tensor[(16, 16, 12), bool] */;
  %409 = %388.1;
  %410 = %407.1;
  (%408, %409, meta[relay.Constant][26] /* ty=Tensor[(220, 1), uint64] */, %399, %var_3820, meta[relay.Constant][27] /* ty=Tensor[(28), int64] */, meta[relay.Constant][28] /* ty=Tensor[(560), int64] */, %410, meta[relay.Constant][29] /* ty=Tensor[(672), uint32] */)
}

def @func_15021(%var_14969: int8, %var_14978: Tensor[(858), float64], %var_14998: Tensor[(2, 144), float64], %var_15015: Tensor[(2400), float64]) -> (Tensor[(9, 5, 2), int8], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(2, 144), float64], Tensor[(560), int64], Tensor[(2400), float64]) {
  %411 = cast(%var_14969, dtype="int8") /* ty=int8 */;
  %412 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 5, 2), int8] */, dtype="int8") /* ty=Tensor[(9, 5, 2), int8] */;
  %413 = cast(%var_14978, dtype="float64") /* ty=Tensor[(858), float64] */;
  %414 = reshape(%413, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %415 = @func_5655(%414) /* ty=(Tensor[(13, 11, 6), float64],) */;
  %416 = cast(meta[relay.Constant][31] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %417 = cast(meta[relay.Constant][31] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %418 = cast(%var_14969, dtype="int64") /* ty=int64 */;
  %419 = cast(%var_14998, dtype="float64") /* ty=Tensor[(2, 144), float64] */;
  %420 = reshape(%416, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %421 = reshape(%417, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %422 = reshape(%418, newshape=[]) /* ty=int64 */;
  %423 = reshape(%419, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %424 = @func_12890(%420, %421, %422, %423) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) */;
  %425 = cast(%var_15015, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %426 = cast(%var_15015, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %427 = cast(%var_14998, dtype="float64") /* ty=Tensor[(2, 144), float64] */;
  %428 = reshape(%425, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %429 = reshape(%426, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %430 = reshape(%427, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %431 = @func_2786(%428, %429, %430) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %432 = right_shift(%411, %412) /* ty=Tensor[(9, 5, 2), int8] */;
  %433 = %415.0;
  %434 = %424.0;
  %435 = %431.3;
  (%432, %433, %var_14978, %434, meta[relay.Constant][31] /* ty=Tensor[(231), float64] */, %var_14998, %435, %var_15015)
}

def @func_14526() -> (Tensor[(3, 2, 9), int16], Tensor[(4, 6, 4), float64], Tensor[(96), float64], Tensor[(560), int64], Tensor[(16, 15, 10), float64], Tensor[(2400), float64], int64) {
  %436 = cast(meta[relay.Constant][32] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %437 = cast(meta[relay.Constant][33] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %438 = reshape(%436, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), float64] */;
  %439 = reshape(%437, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %440 = @func_9325(%438, %439) /* ty=(Tensor[(4, 6, 4), float64], Tensor[(14, 8, 5), int64], Tensor[(24, 12), float64], Tensor[(560), int64]) */;
  %441 = cast(meta[relay.Constant][34] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %442 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %443 = reshape(%441, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %444 = reshape(%442, newshape=[]) /* ty=int64 */;
  %445 = @func_8860(%443, %444) /* ty=(Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) */;
  %446 = @func_14284() /* ty=Tensor[(3, 2, 9), int16] */;
  %447 = %440.0;
  %448 = %445.0;
  (%446, %447, meta[relay.Constant][32] /* ty=Tensor[(96), float64] */, meta[relay.Constant][33] /* ty=Tensor[(560), int64] */, %448, meta[relay.Constant][34] /* ty=Tensor[(2400), float64] */, -8 /* ty=int64 */)
}

def @func_7586(%var_7565: Tensor[(6, 8, 16), float32], %var_7572: Tensor[(288), float64]) -> (Tensor[(6, 8, 16), uint16], Tensor[(9, 1, 6), int64], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 8, 16), float64]) {
  %449 = cast(meta[relay.Constant][35] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %450 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 8, 16), uint16] */, dtype="uint16") /* ty=Tensor[(6, 8, 16), uint16] */;
  %451 = cast(%var_7572, dtype="float64") /* ty=Tensor[(288), float64] */;
  %452 = cast(meta[relay.Constant][37] /* ty=Tensor[(55, 4), uint64] */, dtype="uint64") /* ty=Tensor[(55, 4), uint64] */;
  %453 = reshape(%451, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %454 = reshape(%452, newshape=[220, 1]) /* ty=Tensor[(220, 1), uint64] */;
  %455 = @func_3077(%453, %454) /* ty=(Tensor[(9, 1, 6), int64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64]) */;
  %456 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 8, 16), uint16] */, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
  %457 = tan(%456) /* ty=Tensor[(6, 8, 16), float32] */;
  %458 = cast(%var_7565, dtype="uint8") /* ty=Tensor[(6, 8, 16), uint8] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="uint8") /* ty=Tensor[(6, 8, 16), uint8] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %462 = left_shift(%460, %461) /* ty=Tensor[(6, 8, 16), uint8] */;
  %463 = cast(%462, dtype="float64") /* ty=Tensor[(6, 8, 16), float64] */;
  %464 = cast(meta[relay.Constant][35] /* ty=uint16 */, dtype="float64") /* ty=float64 */;
  %465 = right_shift(%449, %450) /* ty=Tensor[(6, 8, 16), uint16] */;
  %466 = %455.0;
  %467 = floor_divide(%463, %464) /* ty=Tensor[(6, 8, 16), float64] */;
  (%465, %466, %var_7572, meta[relay.Constant][37] /* ty=Tensor[(55, 4), uint64] */, %467)
}

def @func_15517() -> Tensor[(3, 2, 9), int16] {
  @func_13853() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_18233() -> (Tensor[(3, 2, 9), int16], Tensor[(2400), float64], Tensor[(3, 2, 9), int16], Tensor[(288), float64], Tensor[(11, 21), float64], int64, Tensor[(4, 72), float64]) {
  %468 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %469 = @func_14526() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(4, 6, 4), float64], Tensor[(96), float64], Tensor[(560), int64], Tensor[(16, 15, 10), float64], Tensor[(2400), float64], int64) */;
  %470 = @func_14412() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */;
  %471 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 21), float64] */, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
  %472 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 21), float64] */, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
  %473 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %474 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 72), float64] */, dtype="float64") /* ty=Tensor[(4, 72), float64] */;
  %475 = reshape(%471, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %476 = reshape(%472, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %477 = reshape(%473, newshape=[]) /* ty=int64 */;
  %478 = reshape(%474, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %479 = @func_12890(%475, %476, %477, %478) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) */;
  %480 = %468.0;
  %481 = %469.5;
  %482 = %470.1;
  %483 = %479.6;
  (%480, %481, %482, %483, meta[relay.Constant][38] /* ty=Tensor[(11, 21), float64] */, -7 /* ty=int64 */, meta[relay.Constant][39] /* ty=Tensor[(4, 72), float64] */)
}

def @func_18113() -> (Tensor[(8, 13, 5), bool],) {
  %484 = @func_16586() /* ty=(Tensor[(8, 13, 5), bool], Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(13, 11, 6), float64], Tensor[(1, 858), float64]) */;
  %485 = %484.0;
  (%485,)
}

def @func_14718(%var_14661: float64, %var_14662: Tensor[(72, 2), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], float64, Tensor[(72, 2), float64], Tensor[(3, 2, 9), int16], Tensor[(2400), float64], Tensor[(2400), float64]) {
  %486 = @func_14412() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */;
  %487 = cast(meta[relay.Constant][40] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %488 = cast(%var_14661, dtype="float64") /* ty=float64 */;
  %489 = cast(%var_14662, dtype="float64") /* ty=Tensor[(72, 2), float64] */;
  %490 = reshape(%487, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %491 = reshape(%488, newshape=[]) /* ty=float64 */;
  %492 = reshape(%489, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %493 = @func_14125(%490, %491, %492) /* ty=(Tensor[(3, 2, 9), float32], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], Tensor[(288), float64], float64, Tensor[(240), float64], Tensor[(240, 1), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(13, 11, 16), bool], Tensor[(1144, 2), uint8]) */;
  %494 = @func_14299() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %495 = cast(meta[relay.Constant][41] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %496 = reshape(%495, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %497 = @func_9561(%496) /* ty=(Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) */;
  %498 = %486.1;
  %499 = %493.1;
  %500 = %494.0;
  %501 = %497.3;
  (%498, %499, meta[relay.Constant][40] /* ty=Tensor[(420), uint8] */, %var_14661, %var_14662, %500, %501, meta[relay.Constant][41] /* ty=Tensor[(2400), float64] */)
}

def @func_10413(%var_10369: float64, %var_10370: Tensor[(8, 1, 1), float64]) -> Tensor[(8, ?, ?), int32] {
  %502 = cast(%var_10369, dtype="float64") /* ty=float64 */;
  %503 = cast(%var_10370, dtype="float64") /* ty=Tensor[(8, 1, 1), float64] */;
  %504 = floor_divide(%502, %503) /* ty=Tensor[(8, 1, 1), float64] */;
  %505 = cast(%504, dtype="float64") /* ty=Tensor[(8, 1, 1), float64] */;
  %506 = log2(%505) /* ty=Tensor[(8, 1, 1), float64] */;
  %507 = cast(%504, dtype="bool") /* ty=Tensor[(8, 1, 1), bool] */;
  %508 = shape_of(%506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%506, dtype="bool") /* ty=Tensor[(8, 1, 1), bool] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %511 = not_equal(%509, %510) /* ty=Tensor[(8, ?, ?), bool] */;
  %512 = cast(%511, dtype="int32") /* ty=Tensor[(8, ?, ?), int32] */;
  %513 = shape_of(%506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %514 = cast(%506, dtype="int32") /* ty=Tensor[(8, 1, 1), int32] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%514, %515) /* ty=Tensor[(8, ?, ?), int32] */
}

def @func_16686() -> (Tensor[(3, 2, 9), int16],) {
  %516 = @func_16261() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %517 = %516.0;
  (%517,)
}

def @func_13853() -> Tensor[(3, 2, 9), int16] {
  %518 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %518.0
}

def @func_5009(%var_5003: Tensor[(6, 13, 13), uint64], %var_5004: Tensor[(6, 13, 13), uint64]) -> Tensor[(6, 13, 13), bool] {
  %519 = cast(%var_5004, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %520 = shape_of(%var_5003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%var_5003, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%521, %522) /* ty=Tensor[(6, 13, 13), bool] */
}

def @func_6629(%var_6624: Tensor[(14, 5, 6), uint8], %var_6625: Tensor[(14, 5, 6), uint8]) -> (Tensor[(14, 5, 6), uint8],) {
  %523 = cast(%var_6625, dtype="uint8") /* ty=Tensor[(14, 5, 6), uint8] */;
  %524 = shape_of(%var_6624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%var_6624, dtype="uint8") /* ty=Tensor[(14, 5, 6), uint8] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %527 = maximum(%525, %526) /* ty=Tensor[(14, 5, 6), uint8] */;
  (%527,)
}

def @func_6369(%var_6323: Tensor[(10, 15, 2), int32], %var_6324: Tensor[(10, 15, 2), int32], %var_6351: Tensor[(672), uint32]) -> (Tensor[(10, 15, 2), int32], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 16, 6), bool], Tensor[(672), uint32], int64, Tensor[(28), int64], Tensor[(560), int64]) {
  %528 = cast(%var_6324, dtype="int32") /* ty=Tensor[(10, 15, 2), int32] */;
  %529 = shape_of(%var_6323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%var_6323, dtype="int32") /* ty=Tensor[(10, 15, 2), int32] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %532 = cast(meta[relay.Constant][42] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %533 = reshape(%532, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %534 = @func_5655(%533) /* ty=(Tensor[(13, 11, 6), float64],) */;
  %535 = cast(%var_6351, dtype="uint32") /* ty=Tensor[(672), uint32] */;
  %536 = cast(%var_6351, dtype="uint32") /* ty=Tensor[(672), uint32] */;
  %537 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %538 = cast(meta[relay.Constant][43] /* ty=Tensor[(28), int64] */, dtype="int64") /* ty=Tensor[(28), int64] */;
  %539 = cast(meta[relay.Constant][44] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %540 = reshape(%535, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
  %541 = reshape(%536, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
  %542 = reshape(%537, newshape=[]) /* ty=int64 */;
  %543 = reshape(%538, newshape=[28]) /* ty=Tensor[(28), int64] */;
  %544 = reshape(%539, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %545 = @func_2677(%540, %541, %542, %543, %544) /* ty=(Tensor[(7, 16, 6), bool], Tensor[(28), int64], Tensor[(560), int64], Tensor[(144, 2), bool]) */;
  %546 = bitwise_or(%530, %531) /* ty=Tensor[(10, 15, 2), int32] */;
  %547 = %534.0;
  %548 = %545.0;
  (%546, %547, meta[relay.Constant][42] /* ty=Tensor[(858), float64] */, %548, %var_6351, 5 /* ty=int64 */, meta[relay.Constant][43] /* ty=Tensor[(28), int64] */, meta[relay.Constant][44] /* ty=Tensor[(560), int64] */)
}

def @func_15335() -> (Tensor[(3, 2, 9), float32],) {
  %549 = @func_15161() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
  %552 = atan(%551) /* ty=Tensor[(3, 2, 9), float32] */;
  (%552,)
}

def @func_13347() -> (Tensor[(3, 2, 9), int16],) {
  %553 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 1, 1), int16] */, dtype="int16") /* ty=Tensor[(3, 1, 1), int16] */;
  %554 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 2, 9), int16] */, dtype="int16") /* ty=Tensor[(3, 2, 9), int16] */;
  %555 = bitwise_xor(%553, %554) /* ty=Tensor[(3, 2, 9), int16] */;
  (%555,)
}

def @func_17377(%var_17369: Tensor[(1, 9, 7), float32]) -> Tensor[(1, 9, 7), float32] {
  %556 = cast(%var_17369, dtype="float32") /* ty=Tensor[(1, 9, 7), float32] */;
  cosh(%556) /* ty=Tensor[(1, 9, 7), float32] */
}

def @func_17772() -> Tensor[(3, 2, 9), int16] {
  %557 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %557.0
}

def @func_16032(%var_16016: Tensor[(72, 4), float64], %var_16017: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(9, 5, 2), int8], int8, Tensor[(858), float64], Tensor[(72, 4), float64], Tensor[(2400), float64], Tensor[(16, 10, 13), float32], Tensor[(2080), float32]) {
  %558 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %559 = cast(meta[relay.Constant][47] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %560 = cast(meta[relay.Constant][48] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %561 = cast(%var_16016, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
  %562 = cast(%var_16017, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %563 = reshape(%559, newshape=[]) /* ty=int8 */;
  %564 = reshape(%560, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %565 = reshape(%561, newshape=[2, 144]) /* ty=Tensor[(2, 144), float64] */;
  %566 = reshape(%562, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %567 = @func_15021(%563, %564, %565, %566) /* ty=(Tensor[(9, 5, 2), int8], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(2, 144), float64], Tensor[(560), int64], Tensor[(2400), float64]) */;
  %568 = cast(meta[relay.Constant][49] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %569 = reshape(%568, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), float32] */;
  %570 = @func_8650(%569) /* ty=(Tensor[(16, 10, 13), float32],) */;
  %571 = %558.0;
  %572 = %567.0;
  %573 = %570.0;
  (%571, %572, meta[relay.Constant][47] /* ty=int8 */, meta[relay.Constant][48] /* ty=Tensor[(858), float64] */, %var_16016, %var_16017, %573, meta[relay.Constant][49] /* ty=Tensor[(2080), float32] */)
}

def @func_13402(%var_13372: Tensor[(8, 13, 5), uint8], %var_13373: Tensor[(8, 13, 5), uint8]) -> (Tensor[(8, 13, 5), bool],) {
  %574 = cast(%var_13373, dtype="bool") /* ty=Tensor[(8, 13, 5), bool] */;
  %575 = shape_of(%var_13372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%var_13372, dtype="bool") /* ty=Tensor[(8, 13, 5), bool] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %578 = equal(%576, %577) /* ty=Tensor[(8, 13, 5), bool] */;
  (%578,)
}

def @func_16220(%var_16171: Tensor[(3, 11, 3), float64], %var_16185: Tensor[(384), float32], %var_16197: Tensor[(3, 11, 3), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(384), float32], Tensor[(2, 520), float32], Tensor[(3, 11, 3), float32]) {
  %579 = cast(%var_16185, dtype="float32") /* ty=Tensor[(384), float32] */;
  %580 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 520), float32] */, dtype="float32") /* ty=Tensor[(2, 520), float32] */;
  %581 = reshape(%579, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %582 = reshape(%580, newshape=[40, 26]) /* ty=Tensor[(40, 26), float32] */;
  %583 = @func_14891(%581, %582) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(6, 8, 8), float32], Tensor[(384), float32], Tensor[(40, 26), float32], Tensor[(3, 2, 9), int16], Tensor[(16, 13, 5), float64]) */;
  %584 = cast(%var_16171, dtype="float64") /* ty=Tensor[(3, 11, 3), float64] */;
  %585 = asinh(%584) /* ty=Tensor[(3, 11, 3), float64] */;
  %586 = cast(%var_16197, dtype="float32") /* ty=Tensor[(3, 11, 3), float32] */;
  %587 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
  %588 = cast(%585, dtype="float32") /* ty=Tensor[(3, 11, 3), float32] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %590 = %583.5;
  %591 = power(%588, %589) /* ty=Tensor[(3, 11, 3), float32] */;
  (%590, %var_16185, meta[relay.Constant][50] /* ty=Tensor[(2, 520), float32] */, %591)
}

def @func_14299() -> (Tensor[(3, 2, 9), int16],) {
  %592 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %593 = %592.0;
  (%593,)
}

def @func_17811() -> (Tensor[(3, 2, 9), int16],) {
  %594 = @func_17191() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %595 = %594.0;
  (%595,)
}

def @main() -> (Tensor[(3, 2, 9), int16], Tensor[(14, 8, 5), int16]) {
  %596 = @func_16622() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %597 = cast(meta[relay.Constant][51] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %598 = cast(meta[relay.Constant][51] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %599 = reshape(%597, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %600 = reshape(%598, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %601 = @func_794(%599, %600) /* ty=(Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) */;
  %602 = %601.1;
  %603 = cast(meta[relay.Constant][51] /* ty=Tensor[(560), int64] */, dtype="int16") /* ty=Tensor[(560), int16] */;
  %604 = shape_of(%602, dtype="int32") /* ty=Tensor[(3), int32] */;
  %605 = cast(%602, dtype="int16") /* ty=Tensor[(14, 8, 5), int16] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %607 = %596.0;
  %608 = left_shift(%605, %606) /* ty=Tensor[(14, 8, 5), int16] */;
  (%607, %608)
}

def @func_3382(%var_3361: uint8, %var_3362: Tensor[(13, 11, 16), uint8]) -> (Tensor[(13, 11, 16), bool],) {
  %609 = cast(%var_3361, dtype="bool") /* ty=bool */;
  %610 = cast(%var_3362, dtype="bool") /* ty=Tensor[(13, 11, 16), bool] */;
  %611 = less_equal(%609, %610) /* ty=Tensor[(13, 11, 16), bool] */;
  (%611,)
}

def @func_1326(%var_1301: int64, %var_1302: Tensor[(7, 1, 4), int64], %var_1323: Tensor[(560), int64]) -> (Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) {
  %612 = cast(%var_1301, dtype="int64") /* ty=int64 */;
  %613 = cast(%var_1302, dtype="int64") /* ty=Tensor[(7, 1, 4), int64] */;
  %614 = cast(%var_1302, dtype="float32") /* ty=Tensor[(7, 1, 4), float32] */;
  %615 = cast(%var_1301, dtype="float32") /* ty=float32 */;
  %616 = cast(meta[relay.Constant][52] /* ty=Tensor[(144, 2), float64] */, dtype="float64") /* ty=Tensor[(144, 2), float64] */;
  %617 = cast(%var_1323, dtype="int64") /* ty=Tensor[(560), int64] */;
  %618 = reshape(%616, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
  %619 = reshape(%617, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %620 = @func_948(%618, %619) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
  %621 = right_shift(%612, %613) /* ty=Tensor[(7, 1, 4), int64] */;
  %622 = power(%614, %615) /* ty=Tensor[(7, 1, 4), float32] */;
  %623 = %620.0;
  (%621, %622, %623, meta[relay.Constant][52] /* ty=Tensor[(144, 2), float64] */, %var_1323)
}

def @func_14175() -> Tensor[(3, 2, 9), int16] {
  %624 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %624.0
}

def @func_16146() -> (Tensor[(10, 2, 11), int16],) {
  %625 = @func_14412() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */;
  %626 = %625.0;
  (%626,)
}

def @func_15563(%var_15534: Tensor[(300, 8), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(144), float64], Tensor[(300, 8), float64], Tensor[(300, 8), int32], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16]) {
  %627 = @func_15188() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %628 = cast(%var_15534, dtype="float64") /* ty=Tensor[(300, 8), float64] */;
  %629 = reshape(%628, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %630 = @func_9561(%629) /* ty=(Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) */;
  %631 = cast(%var_15534, dtype="float64") /* ty=Tensor[(300, 8), float64] */;
  %632 = acos(%631) /* ty=Tensor[(300, 8), float64] */;
  %633 = cast(%632, dtype="float64") /* ty=Tensor[(300, 8), float64] */;
  %634 = cast(%632, dtype="float64") /* ty=Tensor[(300, 8), float64] */;
  %635 = log2(%634) /* ty=Tensor[(300, 8), float64] */;
  %636 = cast(%var_15534, dtype="int32") /* ty=Tensor[(300, 8), int32] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(2), int32] */;
  %638 = cast(%635, dtype="int32") /* ty=Tensor[(300, 8), int32] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %640 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %641 = %627.0;
  %642 = %630.2;
  %643 = exp(%633) /* ty=Tensor[(300, 8), float64] */;
  %644 = maximum(%638, %639) /* ty=Tensor[(300, 8), int32] */;
  %645 = @func_15067() /* ty=Tensor[(3, 2, 9), int16] */;
  %646 = %640.0;
  (%641, %642, %643, %644, %645, %646)
}

def @func_17191() -> (Tensor[(3, 2, 9), int16],) {
  %647 = @func_15839() /* ty=Tensor[(3, 2, 9), int16] */;
  (%647,)
}

def @func_13551(%var_13538: float64, %var_13546: Tensor[(144), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(15, 16, 10), bool], float64, Tensor[(240), float64], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], Tensor[(14, 8, 5), int64], Tensor[(144), float64]) {
  %648 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %649 = cast(%var_13538, dtype="float64") /* ty=float64 */;
  %650 = cast(meta[relay.Constant][53] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %651 = reshape(%649, newshape=[]) /* ty=float64 */;
  %652 = reshape(%650, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), float64] */;
  %653 = @func_4680(%651, %652) /* ty=(Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) */;
  %654 = cast(meta[relay.Constant][54] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %655 = cast(meta[relay.Constant][54] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %656 = reshape(%654, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %657 = reshape(%655, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %658 = @func_6629(%656, %657) /* ty=(Tensor[(14, 5, 6), uint8],) */;
  %659 = cast(%var_13546, dtype="float64") /* ty=Tensor[(144), float64] */;
  %660 = %653.1;
  %661 = cast(%660, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %662 = reshape(%659, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), float64] */;
  %663 = reshape(%661, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %664 = @func_9481(%662, %663) /* ty=(Tensor[(2, 8, 9), float64], Tensor[(14, 8, 5), int64], Tensor[(2400), float64], Tensor[(288), float64], Tensor[(14, 8, 5), int64], Tensor[(5, 3, 16), float64], float64, Tensor[(240, 1), float64]) */;
  %665 = %648.0;
  %666 = %658.0;
  %667 = %664.4;
  (%665, %660, %var_13538, meta[relay.Constant][53] /* ty=Tensor[(240), float64] */, %666, meta[relay.Constant][54] /* ty=Tensor[(420), uint8] */, %667, %var_13546)
}

def @func_8211(%var_8204: Tensor[(7, 1), float32]) -> Tensor[(7, 1), float32] {
  %668 = cast(-7.05227f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %669 = cast(%var_8204, dtype="float32") /* ty=Tensor[(7, 1), float32] */;
  minimum(%668, %669) /* ty=Tensor[(7, 1), float32] */
}

def @func_17993() -> Tensor[(3, 2, 9), int16] {
  @func_17874() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_10649(%var_10644: Tensor[(16, 13, 5), float32]) -> Tensor[(16, 13, 5), float32] {
  %670 = cast(%var_10644, dtype="float32") /* ty=Tensor[(16, 13, 5), float32] */;
  %671 = asinh(%670) /* ty=Tensor[(16, 13, 5), float32] */;
  %672 = cast(%671, dtype="float32") /* ty=Tensor[(16, 13, 5), float32] */;
  erf(%672) /* ty=Tensor[(16, 13, 5), float32] */
}

def @func_18177() -> (Tensor[(3, 2, 9), int16],) {
  %673 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %674 = %673.0;
  (%674,)
}

def @func_11719(%var_11632: Tensor[(8, 12, 13), int8], %var_11678: Tensor[(2288), uint8], %var_11710: Tensor[(10, 42), uint8], %var_11713: Tensor[(10, 117), bool]) -> (Tensor[(8, 12, 13), bool], Tensor[(2, 336), uint32], Tensor[(1155), float64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 117), float64], Tensor[(16, 10, 13), float32], Tensor[(1040, 2), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(220), uint64], Tensor[(8, ?, ?), int32], Tensor[(8), float64], Tensor[(8, ?, ?), int32], Tensor[(14, 5, 6), uint8], Tensor[(10, 42), uint8], Tensor[(10, 117), uint16]) {
  %675 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %676 = cast(%var_11632, dtype="bool") /* ty=Tensor[(8, 12, 13), bool] */;
  %677 = cast(meta[relay.Constant][56] /* ty=Tensor[(1155), float64] */, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %678 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 117), float32] */, dtype="float32") /* ty=Tensor[(10, 117), float32] */;
  %679 = reshape(%677, newshape=[7, 15, 11]) /* ty=Tensor[(7, 15, 11), float64] */;
  %680 = reshape(%678, newshape=[1170]) /* ty=Tensor[(1170), float32] */;
  %681 = @func_10929(%679, %680) /* ty=(Tensor[(7, 15, 11), bool], Tensor[(28), int64], Tensor[(300), int32], Tensor[(2, 336), uint32], Tensor[(13, 10, 9), float32], Tensor[(1170), float32]) */;
  %682 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %683 = cast(%var_11678, dtype="uint8") /* ty=Tensor[(2288), uint8] */;
  %684 = reshape(%682, newshape=[]) /* ty=uint8 */;
  %685 = reshape(%683, newshape=[13, 11, 16]) /* ty=Tensor[(13, 11, 16), uint8] */;
  %686 = @func_3382(%684, %685) /* ty=(Tensor[(13, 11, 16), bool],) */;
  %687 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 117), float32] */, dtype="uint8") /* ty=Tensor[(10, 117), uint8] */;
  %688 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %689 = minimum(%687, %688) /* ty=Tensor[(10, 117), uint8] */;
  %690 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %691 = cast(%689, dtype="bool") /* ty=Tensor[(10, 117), bool] */;
  %692 = logical_and(%690, %691) /* ty=Tensor[(10, 117), bool] */;
  %693 = cast(%692, dtype="float64") /* ty=Tensor[(10, 117), float64] */;
  %694 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %695 = cast(meta[relay.Constant][58] /* ty=Tensor[(1040, 2), float32] */, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
  %696 = reshape(%695, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), float32] */;
  %697 = @func_8650(%696) /* ty=(Tensor[(16, 10, 13), float32],) */;
  %698 = cast(meta[relay.Constant][59] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %699 = cast(meta[relay.Constant][60] /* ty=Tensor[(220), uint64] */, dtype="uint64") /* ty=Tensor[(220), uint64] */;
  %700 = reshape(%698, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %701 = reshape(%699, newshape=[220, 1]) /* ty=Tensor[(220, 1), uint64] */;
  %702 = @func_3077(%700, %701) /* ty=(Tensor[(9, 1, 6), int64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64]) */;
  %703 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %704 = cast(meta[relay.Constant][61] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %705 = reshape(%703, newshape=[]) /* ty=float64 */;
  %706 = reshape(%704, newshape=[8, 1, 1]) /* ty=Tensor[(8, 1, 1), float64] */;
  %707 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %708 = cast(meta[relay.Constant][61] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %709 = reshape(%707, newshape=[]) /* ty=float64 */;
  %710 = reshape(%708, newshape=[8, 1, 1]) /* ty=Tensor[(8, 1, 1), float64] */;
  %711 = cast(%var_11710, dtype="uint8") /* ty=Tensor[(10, 42), uint8] */;
  %712 = cast(%var_11710, dtype="uint8") /* ty=Tensor[(10, 42), uint8] */;
  %713 = reshape(%711, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %714 = reshape(%712, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %715 = @func_6629(%713, %714) /* ty=(Tensor[(14, 5, 6), uint8],) */;
  %716 = cast(%var_11713, dtype="uint16") /* ty=Tensor[(10, 117), uint16] */;
  %717 = shape_of(%692, dtype="int32") /* ty=Tensor[(2), int32] */;
  %718 = cast(%692, dtype="uint16") /* ty=Tensor[(10, 117), uint16] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %720 = less_equal(%675, %676) /* ty=Tensor[(8, 12, 13), bool] */;
  %721 = %681.3;
  %722 = %686.0;
  %723 = floor_divide(%693, %694) /* ty=Tensor[(10, 117), float64] */;
  %724 = %697.0;
  %725 = %702.2;
  %726 = @func_10413(%705, %706) /* ty=Tensor[(8, ?, ?), int32] */;
  %727 = @func_10413(%709, %710) /* ty=Tensor[(8, ?, ?), int32] */;
  %728 = %715.0;
  %729 = maximum(%718, %719) /* ty=Tensor[(10, 117), uint16] */;
  (%720, %721, meta[relay.Constant][56] /* ty=Tensor[(1155), float64] */, %722, %var_11678, %723, %724, meta[relay.Constant][58] /* ty=Tensor[(1040, 2), float32] */, %725, meta[relay.Constant][59] /* ty=Tensor[(288), float64] */, meta[relay.Constant][60] /* ty=Tensor[(220), uint64] */, %726, meta[relay.Constant][61] /* ty=Tensor[(8), float64] */, %727, %728, %var_11710, %729)
}

def @func_16261() -> (Tensor[(3, 2, 9), int16],) {
  %730 = @func_13853() /* ty=Tensor[(3, 2, 9), int16] */;
  (%730,)
}

def @func_15303(%var_15274: Tensor[(3, 2, 9), int16]) -> (Tensor[(3, 2, 9), uint8], Tensor[(4, 6, 4), float64]) {
  %731 = @func_15067() /* ty=Tensor[(3, 2, 9), int16] */;
  %732 = cast(%var_15274, dtype="uint8") /* ty=Tensor[(3, 2, 9), uint8] */;
  %733 = shape_of(%731, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%731, dtype="uint8") /* ty=Tensor[(3, 2, 9), uint8] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %736 = @func_14526() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(4, 6, 4), float64], Tensor[(96), float64], Tensor[(560), int64], Tensor[(16, 15, 10), float64], Tensor[(2400), float64], int64) */;
  %737 = %736.1;
  %738 = cast(%737, dtype="float64") /* ty=Tensor[(4, 6, 4), float64] */;
  %739 = minimum(%734, %735) /* ty=Tensor[(3, 2, 9), uint8] */;
  %740 = erf(%738) /* ty=Tensor[(4, 6, 4), float64] */;
  (%739, %740)
}

def @func_17293() -> Tensor[(3, 2, 9), int16] {
  %741 = @func_16739() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %741.0
}

def @func_17695() -> (Tensor[(3, 2, 9), int16],) {
  %742 = @func_14299() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %743 = %742.0;
  (%743,)
}

def @func_15148(%var_15075: int64, %var_15077: Tensor[(560), int64]) -> (Tensor[(3, 2, 9), int16], Tensor[(9, 2, 16), float64], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(14, 5, 6), uint8], Tensor[(560), int64], Tensor[(2, 1200), float64], Tensor[(420, 7), float32], Tensor[(2288), uint8], Tensor[(1170), bool], Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(13, 11, 16), bool], Tensor[(16, 13, 5), float32], Tensor[(1040), float32]) {
  %744 = @func_14299() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %745 = cast(%var_15075, dtype="int64") /* ty=int64 */;
  %746 = cast(meta[relay.Constant][62] /* ty=Tensor[(28), int64] */, dtype="int64") /* ty=Tensor[(28), int64] */;
  %747 = cast(%var_15077, dtype="int64") /* ty=Tensor[(560), int64] */;
  %748 = reshape(%745, newshape=[]) /* ty=int64 */;
  %749 = reshape(%746, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), int64] */;
  %750 = reshape(%747, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %751 = @func_1326(%748, %749, %750) /* ty=(Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) */;
  %752 = cast(meta[relay.Constant][63] /* ty=Tensor[(420, 1), uint8] */, dtype="uint8") /* ty=Tensor[(420, 1), uint8] */;
  %753 = cast(meta[relay.Constant][63] /* ty=Tensor[(420, 1), uint8] */, dtype="uint8") /* ty=Tensor[(420, 1), uint8] */;
  %754 = reshape(%752, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %755 = reshape(%753, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %756 = @func_6629(%754, %755) /* ty=(Tensor[(14, 5, 6), uint8],) */;
  %757 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 1200), float64] */, dtype="float64") /* ty=Tensor[(2, 1200), float64] */;
  %758 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 1200), float64] */, dtype="float64") /* ty=Tensor[(2, 1200), float64] */;
  %759 = %751.2;
  %760 = cast(%759, dtype="float64") /* ty=Tensor[(9, 2, 16), float64] */;
  %761 = reshape(%757, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %762 = reshape(%758, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %763 = reshape(%760, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %764 = @func_2786(%761, %762, %763) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %765 = cast(meta[relay.Constant][63] /* ty=Tensor[(420, 1), uint8] */, dtype="float32") /* ty=Tensor[(420, 1), float32] */;
  %766 = cast(meta[relay.Constant][65] /* ty=Tensor[(420, 7), uint8] */, dtype="float32") /* ty=Tensor[(420, 7), float32] */;
  %767 = cast(meta[relay.Constant][66] /* ty=Tensor[(1170), bool] */, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %768 = reshape(%767, newshape=[1170]) /* ty=Tensor[(1170), bool] */;
  %769 = @func_14930(%768) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(1248), int8], Tensor[(2288), uint8], Tensor[(420), uint8], Tensor[(1170), bool]) */;
  %770 = cast(meta[relay.Constant][67] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %771 = cast(meta[relay.Constant][67] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %772 = reshape(%770, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %773 = reshape(%771, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %774 = cast(%var_15075, dtype="uint8") /* ty=uint8 */;
  %775 = %769.1;
  %776 = cast(%775, dtype="uint8") /* ty=Tensor[(2288), uint8] */;
  %777 = reshape(%774, newshape=[]) /* ty=uint8 */;
  %778 = reshape(%776, newshape=[13, 11, 16]) /* ty=Tensor[(13, 11, 16), uint8] */;
  %779 = @func_3382(%777, %778) /* ty=(Tensor[(13, 11, 16), bool],) */;
  %780 = cast(meta[relay.Constant][68] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %781 = reshape(%780, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), float32] */;
  %782 = %744.0;
  %783 = %756.0;
  %784 = %764.3;
  %785 = multiply(%765, %766) /* ty=Tensor[(420, 7), float32] */;
  %786 = @func_5009(%772, %773) /* ty=Tensor[(6, 13, 13), bool] */;
  %787 = %779.0;
  %788 = @func_10649(%781) /* ty=Tensor[(16, 13, 5), float32] */;
  (%782, %759, %var_15075, meta[relay.Constant][62] /* ty=Tensor[(28), int64] */, %var_15077, %783, %784, meta[relay.Constant][64] /* ty=Tensor[(2, 1200), float64] */, %785, %775, meta[relay.Constant][66] /* ty=Tensor[(1170), bool] */, %786, meta[relay.Constant][67] /* ty=Tensor[(1014), uint64] */, %787, %788, meta[relay.Constant][68] /* ty=Tensor[(1040), float32] */)
}

def @func_14125(%var_14101: Tensor[(420), uint8], %var_14108: float64, %var_14112: Tensor[(144), float64]) -> (Tensor[(3, 2, 9), float32], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], Tensor[(288), float64], float64, Tensor[(240), float64], Tensor[(240, 1), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(13, 11, 16), bool], Tensor[(1144, 2), uint8]) {
  %789 = @func_13853() /* ty=Tensor[(3, 2, 9), int16] */;
  %790 = cast(%789, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
  %791 = cast(%var_14101, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %792 = cast(%var_14101, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %793 = reshape(%791, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %794 = reshape(%792, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %795 = @func_6629(%793, %794) /* ty=(Tensor[(14, 5, 6), uint8],) */;
  %796 = cast(%var_14108, dtype="float64") /* ty=float64 */;
  %797 = cast(meta[relay.Constant][69] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %798 = reshape(%796, newshape=[]) /* ty=float64 */;
  %799 = reshape(%797, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), float64] */;
  %800 = @func_4680(%798, %799) /* ty=(Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) */;
  %801 = cast(%var_14112, dtype="float64") /* ty=Tensor[(144), float64] */;
  %802 = cast(meta[relay.Constant][70] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %803 = reshape(%801, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), float64] */;
  %804 = reshape(%802, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %805 = @func_9481(%803, %804) /* ty=(Tensor[(2, 8, 9), float64], Tensor[(14, 8, 5), int64], Tensor[(2400), float64], Tensor[(288), float64], Tensor[(14, 8, 5), int64], Tensor[(5, 3, 16), float64], float64, Tensor[(240, 1), float64]) */;
  %806 = cast(%var_14108, dtype="uint8") /* ty=uint8 */;
  %807 = cast(meta[relay.Constant][71] /* ty=Tensor[(1144, 2), uint8] */, dtype="uint8") /* ty=Tensor[(1144, 2), uint8] */;
  %808 = reshape(%806, newshape=[]) /* ty=uint8 */;
  %809 = reshape(%807, newshape=[13, 11, 16]) /* ty=Tensor[(13, 11, 16), uint8] */;
  %810 = @func_3382(%808, %809) /* ty=(Tensor[(13, 11, 16), bool],) */;
  %811 = log(%790) /* ty=Tensor[(3, 2, 9), float32] */;
  %812 = %795.0;
  %813 = %800.3;
  %814 = %805.7;
  %815 = %810.0;
  (%811, %812, %var_14101, %813, %var_14108, meta[relay.Constant][69] /* ty=Tensor[(240), float64] */, %814, %var_14112, meta[relay.Constant][70] /* ty=Tensor[(2400), float64] */, %815, meta[relay.Constant][71] /* ty=Tensor[(1144, 2), uint8] */)
}

def @func_17023(%var_17001: Tensor[(7, 4), int64], %var_17016: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(28, 1), int64], Tensor[(216), float64], Tensor[(7, 4), int64], Tensor[(144), float64], Tensor[(2400), float64]) {
  %816 = cast(meta[relay.Constant][72] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %817 = cast(%var_17001, dtype="int64") /* ty=Tensor[(7, 4), int64] */;
  %818 = cast(meta[relay.Constant][72] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %819 = reshape(%816, newshape=[9, 3, 8]) /* ty=Tensor[(9, 3, 8), float64] */;
  %820 = reshape(%817, newshape=[28, 1]) /* ty=Tensor[(28, 1), int64] */;
  %821 = reshape(%818, newshape=[9, 3, 8]) /* ty=Tensor[(9, 3, 8), float64] */;
  %822 = @func_7945(%819, %820, %821) /* ty=(Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(560), int64], Tensor[(672), uint32], int64, Tensor[(28, 1), int64], Tensor[(8, 16, 7), uint8], Tensor[(896), uint8], Tensor[(9, 3, 8), uint32]) */;
  %823 = cast(%var_17016, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %824 = reshape(%823, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %825 = @func_9561(%824) /* ty=(Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) */;
  %826 = @func_15839() /* ty=Tensor[(3, 2, 9), int16] */;
  %827 = @func_16156() /* ty=Tensor[(3, 2, 9), int16] */;
  %828 = %822.6;
  %829 = %825.2;
  (%826, %827, %828, meta[relay.Constant][72] /* ty=Tensor[(216), float64] */, %var_17001, %829, %var_17016)
}

def @func_15839() -> Tensor[(3, 2, 9), int16] {
  %830 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %830.0
}

def @func_18408(%var_18373: Tensor[(390, 3), bool]) -> (Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(390, 3), bool]) {
  %831 = @func_17881() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %832 = cast(%var_18373, dtype="bool") /* ty=Tensor[(390, 3), bool] */;
  %833 = reshape(%832, newshape=[1170]) /* ty=Tensor[(1170), bool] */;
  %834 = @func_14930(%833) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(1248), int8], Tensor[(2288), uint8], Tensor[(420), uint8], Tensor[(1170), bool]) */;
  %835 = %831.0;
  %836 = %834.1;
  (%835, %836, %var_18373)
}

def @func_12988(%var_12983: Tensor[(16, 9, 13), float32]) -> (Tensor[(16, 9, 13), float32],) {
  %837 = cast(%var_12983, dtype="float32") /* ty=Tensor[(16, 9, 13), float32] */;
  %838 = exp(%837) /* ty=Tensor[(16, 9, 13), float32] */;
  (%838,)
}

def @func_14891(%var_14846: Tensor[(384), float32], %var_14864: Tensor[(40, 26), float32]) -> (Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(6, 8, 8), float32], Tensor[(384), float32], Tensor[(40, 26), float32], Tensor[(3, 2, 9), int16], Tensor[(16, 13, 5), float64]) {
  %839 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %840 = @func_14299() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %841 = cast(%var_14846, dtype="float32") /* ty=Tensor[(384), float32] */;
  %842 = reshape(%841, newshape=[6, 8, 8]) /* ty=Tensor[(6, 8, 8), float32] */;
  %843 = @func_11993(%842) /* ty=(Tensor[(6, 8, 8), float32],) */;
  %844 = @func_14412() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */;
  %845 = cast(%var_14864, dtype="float32") /* ty=Tensor[(40, 26), float32] */;
  %846 = reshape(%845, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), float32] */;
  %847 = @func_10649(%846) /* ty=Tensor[(16, 13, 5), float32] */;
  %848 = cast(%847, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %849 = %839.0;
  %850 = %840.0;
  %851 = %843.0;
  %852 = %844.1;
  %853 = log10(%848) /* ty=Tensor[(16, 13, 5), float64] */;
  (%849, %850, %851, %var_14846, %var_14864, %852, %853)
}

def @func_16739() -> (Tensor[(3, 2, 9), int16],) {
  %854 = @func_16622() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %855 = %854.0;
  (%855,)
}

def @func_2677(%var_2641: Tensor[(7, 16, 6), uint32], %var_2642: Tensor[(7, 16, 6), uint32], %var_2663: int64, %var_2664: Tensor[(28), int64], %var_2665: Tensor[(560), int64]) -> (Tensor[(7, 16, 6), bool], Tensor[(28), int64], Tensor[(560), int64], Tensor[(144, 2), bool]) {
  %856 = cast(%var_2642, dtype="bool") /* ty=Tensor[(7, 16, 6), bool] */;
  %857 = shape_of(%var_2641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%var_2641, dtype="bool") /* ty=Tensor[(7, 16, 6), bool] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %860 = cast(%var_2663, dtype="int64") /* ty=int64 */;
  %861 = cast(%var_2664, dtype="int64") /* ty=Tensor[(28), int64] */;
  %862 = cast(%var_2665, dtype="int64") /* ty=Tensor[(560), int64] */;
  %863 = reshape(%860, newshape=[]) /* ty=int64 */;
  %864 = reshape(%861, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), int64] */;
  %865 = reshape(%862, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %866 = @func_1326(%863, %864, %865) /* ty=(Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) */;
  %867 = %866.3;
  %868 = cast(%867, dtype="bool") /* ty=Tensor[(144, 2), bool] */;
  %869 = cast(%var_2663, dtype="bool") /* ty=bool */;
  %870 = less(%858, %859) /* ty=Tensor[(7, 16, 6), bool] */;
  %871 = less_equal(%868, %869) /* ty=Tensor[(144, 2), bool] */;
  (%870, %var_2664, %var_2665, %871)
}

def @func_15767(%var_15741: Tensor[(1, 12), float64]) -> Tensor[(1, 12), float64] {
  %872 = cast(7.77036f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %873 = cast(%var_15741, dtype="float64") /* ty=Tensor[(1, 12), float64] */;
  maximum(%872, %873) /* ty=Tensor[(1, 12), float64] */
}

def @func_16872(%var_16855: int8, %var_16856: Tensor[(429, 2), float64], %var_16858: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(7, 3, 11), float64], Tensor[(288), float64], Tensor[(2400), float64], Tensor[(429, 2), int8], Tensor[(3, 2, 9), int16]) {
  %874 = @func_16739() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %875 = cast(%var_16855, dtype="int8") /* ty=int8 */;
  %876 = cast(%var_16856, dtype="float64") /* ty=Tensor[(429, 2), float64] */;
  %877 = cast(meta[relay.Constant][73] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %878 = cast(%var_16858, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %879 = reshape(%875, newshape=[]) /* ty=int8 */;
  %880 = reshape(%876, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %881 = reshape(%877, newshape=[2, 144]) /* ty=Tensor[(2, 144), float64] */;
  %882 = reshape(%878, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %883 = @func_15021(%879, %880, %881, %882) /* ty=(Tensor[(9, 5, 2), int8], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(2, 144), float64], Tensor[(560), int64], Tensor[(2400), float64]) */;
  %884 = cast(%var_16856, dtype="int8") /* ty=Tensor[(429, 2), int8] */;
  %885 = cast(%var_16855, dtype="int8") /* ty=int8 */;
  %886 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %887 = %874.0;
  %888 = %883.3;
  %889 = logical_xor(%884, %885) /* ty=Tensor[(429, 2), int8] */;
  %890 = %886.0;
  (%887, %888, meta[relay.Constant][73] /* ty=Tensor[(288), float64] */, %var_16858, %889, %890)
}

def @func_18277(%var_18255: Tensor[(520), uint8]) -> (Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16], Tensor[(520), uint8]) {
  %891 = @func_16146() /* ty=(Tensor[(10, 2, 11), int16],) */;
  %892 = cast(%var_18255, dtype="uint8") /* ty=Tensor[(520), uint8] */;
  %893 = reshape(%892, newshape=[520]) /* ty=Tensor[(520), uint8] */;
  %894 = @func_17626(%893) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) */;
  %895 = %891.0;
  %896 = %894.0;
  (%895, %896, %var_18255)
}

def @func_15067() -> Tensor[(3, 2, 9), int16] {
  %897 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %897.0
}

def @func_8650(%var_8635: Tensor[(16, 10, 13), float32]) -> (Tensor[(16, 10, 13), float32],) {
  %898 = cast(%var_8635, dtype="float32") /* ty=Tensor[(16, 10, 13), float32] */;
  %899 = sigmoid(%898) /* ty=Tensor[(16, 10, 13), float32] */;
  (%899,)
}

def @func_11993(%var_11966: Tensor[(6, 8, 8), float32]) -> (Tensor[(6, 8, 8), float32],) {
  %900 = cast(%var_11966, dtype="float32") /* ty=Tensor[(6, 8, 8), float32] */;
  %901 = sqrt(%900) /* ty=Tensor[(6, 8, 8), float32] */;
  (%901,)
}

def @func_3077(%var_3062: Tensor[(288), float64], %var_3069: Tensor[(220, 1), uint64]) -> (Tensor[(9, 1, 6), int64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64]) {
  %902 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %903 = cast(meta[relay.Constant][74] /* ty=Tensor[(9, 1, 6), int64] */, dtype="int64") /* ty=Tensor[(9, 1, 6), int64] */;
  %904 = cast(%var_3062, dtype="float64") /* ty=Tensor[(288), float64] */;
  %905 = cast(meta[relay.Constant][75] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %906 = reshape(%904, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
  %907 = reshape(%905, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %908 = @func_948(%906, %907) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
  %909 = cast(%var_3069, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
  %910 = cast(%var_3069, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
  %911 = reshape(%909, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %912 = reshape(%910, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %913 = @func_2054(%911, %912) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */;
  %914 = add(%902, %903) /* ty=Tensor[(9, 1, 6), int64] */;
  %915 = %908.2;
  %916 = %913.2;
  (%914, %915, %var_3062, meta[relay.Constant][75] /* ty=Tensor[(560), int64] */, %916, %var_3069)
}

def @func_4680(%var_4662: float64, %var_4663: Tensor[(5, 3, 16), float64]) -> (Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) {
  %917 = cast(%var_4662, dtype="float64") /* ty=float64 */;
  %918 = cast(%var_4663, dtype="float64") /* ty=Tensor[(5, 3, 16), float64] */;
  %919 = cast(meta[relay.Constant][76] /* ty=Tensor[(10, 240), float64] */, dtype="float64") /* ty=Tensor[(10, 240), float64] */;
  %920 = cast(meta[relay.Constant][76] /* ty=Tensor[(10, 240), float64] */, dtype="float64") /* ty=Tensor[(10, 240), float64] */;
  %921 = cast(meta[relay.Constant][77] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %922 = reshape(%919, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %923 = reshape(%920, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %924 = reshape(%921, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %925 = @func_2786(%922, %923, %924) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %926 = divide(%917, %918) /* ty=Tensor[(5, 3, 16), float64] */;
  %927 = %925.0;
  (%926, %927, meta[relay.Constant][76] /* ty=Tensor[(10, 240), float64] */, meta[relay.Constant][77] /* ty=Tensor[(288), float64] */)
}

def @func_13909() -> (Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) {
  %928 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %929 = cast(meta[relay.Constant][78] /* ty=Tensor[(220), uint64] */, dtype="uint64") /* ty=Tensor[(220), uint64] */;
  %930 = cast(meta[relay.Constant][78] /* ty=Tensor[(220), uint64] */, dtype="uint64") /* ty=Tensor[(220), uint64] */;
  %931 = reshape(%929, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %932 = reshape(%930, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %933 = @func_2054(%931, %932) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */;
  %934 = %928.0;
  %935 = %933.2;
  (%934, %935, meta[relay.Constant][78] /* ty=Tensor[(220), uint64] */)
}

def @func_15353() -> (Tensor[(3, 2, 9), int16],) {
  %936 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %937 = %936.0;
  (%937,)
}

def @func_16622() -> (Tensor[(3, 2, 9), int16],) {
  %938 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %939 = %938.0;
  (%939,)
}

def @func_16156() -> Tensor[(3, 2, 9), int16] {
  @func_15839() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_7945(%var_7902: Tensor[(9, 3, 8), float64], %var_7919: Tensor[(28, 1), int64], %var_7933: Tensor[(9, 3, 8), float64]) -> (Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(560), int64], Tensor[(672), uint32], int64, Tensor[(28, 1), int64], Tensor[(8, 16, 7), uint8], Tensor[(896), uint8], Tensor[(9, 3, 8), uint32]) {
  %940 = cast(meta[relay.Constant][79] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %941 = cast(meta[relay.Constant][80] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %942 = reshape(%940, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
  %943 = reshape(%941, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %944 = @func_948(%942, %943) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
  %945 = cast(meta[relay.Constant][81] /* ty=Tensor[(672), uint32] */, dtype="uint32") /* ty=Tensor[(672), uint32] */;
  %946 = cast(meta[relay.Constant][81] /* ty=Tensor[(672), uint32] */, dtype="uint32") /* ty=Tensor[(672), uint32] */;
  %947 = cast(-9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %948 = cast(%var_7919, dtype="int64") /* ty=Tensor[(28, 1), int64] */;
  %949 = %944.2;
  %950 = cast(%949, dtype="int64") /* ty=Tensor[(560), int64] */;
  %951 = reshape(%945, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
  %952 = reshape(%946, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
  %953 = reshape(%947, newshape=[]) /* ty=int64 */;
  %954 = reshape(%948, newshape=[28]) /* ty=Tensor[(28), int64] */;
  %955 = reshape(%950, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %956 = @func_2677(%951, %952, %953, %954, %955) /* ty=(Tensor[(7, 16, 6), bool], Tensor[(28), int64], Tensor[(560), int64], Tensor[(144, 2), bool]) */;
  %957 = cast(meta[relay.Constant][82] /* ty=Tensor[(896), uint8] */, dtype="uint8") /* ty=Tensor[(896), uint8] */;
  %958 = cast(meta[relay.Constant][82] /* ty=Tensor[(896), uint8] */, dtype="uint8") /* ty=Tensor[(896), uint8] */;
  %959 = reshape(%957, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), uint8] */;
  %960 = reshape(%958, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), uint8] */;
  %961 = cast(%var_7902, dtype="float64") /* ty=Tensor[(9, 3, 8), float64] */;
  %962 = cosh(%961) /* ty=Tensor[(9, 3, 8), float64] */;
  %963 = cast(%var_7933, dtype="uint32") /* ty=Tensor[(9, 3, 8), uint32] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="uint32") /* ty=Tensor[(9, 3, 8), uint32] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %967 = %956.2;
  %968 = @func_7167(%959, %960) /* ty=Tensor[(8, 16, 7), uint8] */;
  %969 = maximum(%965, %966) /* ty=Tensor[(9, 3, 8), uint32] */;
  (%949, meta[relay.Constant][79] /* ty=Tensor[(288), float64] */, meta[relay.Constant][80] /* ty=Tensor[(560), int64] */, %967, meta[relay.Constant][81] /* ty=Tensor[(672), uint32] */, -9 /* ty=int64 */, %var_7919, %968, meta[relay.Constant][82] /* ty=Tensor[(896), uint8] */, %969)
}

def @func_15907(%var_15902: Tensor[(560, 1), int64]) -> (Tensor[(3, 2, 9), bool], Tensor[(16, 9, 13), float32], Tensor[(1872), float32], Tensor[(1170), bool], int64, Tensor[(560, 1), int64]) {
  %970 = @func_14759() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %971 = %970.0;
  %972 = @func_15161() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %973 = %972.0;
  %974 = cast(%973, dtype="bool") /* ty=Tensor[(3, 2, 9), bool] */;
  %975 = shape_of(%971, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%971, dtype="bool") /* ty=Tensor[(3, 2, 9), bool] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %978 = cast(meta[relay.Constant][83] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %979 = reshape(%978, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), float32] */;
  %980 = @func_12988(%979) /* ty=(Tensor[(16, 9, 13), float32],) */;
  %981 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %982 = cast(%var_15902, dtype="int64") /* ty=Tensor[(560, 1), int64] */;
  %983 = reshape(%981, newshape=[]) /* ty=int64 */;
  %984 = reshape(%982, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %985 = @func_15148(%983, %984) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(9, 2, 16), float64], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(14, 5, 6), uint8], Tensor[(560), int64], Tensor[(2, 1200), float64], Tensor[(420, 7), float32], Tensor[(2288), uint8], Tensor[(1170), bool], Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(13, 11, 16), bool], Tensor[(16, 13, 5), float32], Tensor[(1040), float32]) */;
  %986 = logical_and(%976, %977) /* ty=Tensor[(3, 2, 9), bool] */;
  %987 = %980.0;
  %988 = %985.10;
  (%986, %987, meta[relay.Constant][83] /* ty=Tensor[(1872), float32] */, %988, -10 /* ty=int64 */, %var_15902)
}

def @func_16586() -> (Tensor[(8, 13, 5), bool], Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(13, 11, 6), float64], Tensor[(1, 858), float64]) {
  %989 = @func_16300() /* ty=(Tensor[(220), uint64], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) */;
  %990 = @func_16146() /* ty=(Tensor[(10, 2, 11), int16],) */;
  %991 = cast(meta[relay.Constant][84] /* ty=Tensor[(1, 858), float64] */, dtype="float64") /* ty=Tensor[(1, 858), float64] */;
  %992 = reshape(%991, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %993 = @func_5655(%992) /* ty=(Tensor[(13, 11, 6), float64],) */;
  %994 = %989.1;
  %995 = @func_15839() /* ty=Tensor[(3, 2, 9), int16] */;
  %996 = %990.0;
  %997 = @func_15517() /* ty=Tensor[(3, 2, 9), int16] */;
  %998 = @func_14830() /* ty=Tensor[(3, 2, 9), int16] */;
  %999 = %993.0;
  (%994, %995, %996, %997, %998, %999, meta[relay.Constant][84] /* ty=Tensor[(1, 858), float64] */)
}

def @func_13739(%var_13634: int64, %var_13660: Tensor[(6, 12, 14), int64]) -> (Tensor[(3, 2, 9), int16], Tensor[(2400), float64], int64, Tensor[(15, 16, 10), bool], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 12, 14), float64], Tensor[(15, 16, 10), bool], Tensor[(1, 768), float64], Tensor[(3, 2, 9), int16]) {
  %1000 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1001 = cast(meta[relay.Constant][85] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1002 = cast(meta[relay.Constant][85] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1003 = cast(meta[relay.Constant][86] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1004 = reshape(%1001, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %1005 = reshape(%1002, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %1006 = reshape(%1003, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %1007 = @func_2786(%1004, %1005, %1006) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %1008 = cast(meta[relay.Constant][87] /* ty=Tensor[(1, 768), float32] */, dtype="float32") /* ty=Tensor[(1, 768), float32] */;
  %1009 = cast(meta[relay.Constant][86] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1010 = reshape(%1008, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float32] */;
  %1011 = reshape(%1009, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %1012 = @func_7586(%1010, %1011) /* ty=(Tensor[(6, 8, 16), uint16], Tensor[(9, 1, 6), int64], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 8, 16), float64]) */;
  %1013 = cast(meta[relay.Constant][85] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1014 = cast(%var_13634, dtype="int64") /* ty=int64 */;
  %1015 = reshape(%1013, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %1016 = reshape(%1014, newshape=[]) /* ty=int64 */;
  %1017 = @func_8860(%1015, %1016) /* ty=(Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) */;
  %1018 = %1017.3;
  %1019 = cast(%1018, dtype="float64") /* ty=float64 */;
  %1020 = cast(%var_13660, dtype="float64") /* ty=Tensor[(6, 12, 14), float64] */;
  %1021 = subtract(%1019, %1020) /* ty=Tensor[(6, 12, 14), float64] */;
  %1022 = cast(%1021, dtype="float64") /* ty=Tensor[(6, 12, 14), float64] */;
  %1023 = %1007.0;
  %1024 = cast(%1023, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %1025 = cast(%1023, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %1026 = cast(meta[relay.Constant][86] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1027 = reshape(%1024, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %1028 = reshape(%1025, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %1029 = reshape(%1026, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %1030 = @func_2786(%1027, %1028, %1029) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %1031 = cast(meta[relay.Constant][87] /* ty=Tensor[(1, 768), float32] */, dtype="float64") /* ty=Tensor[(1, 768), float64] */;
  %1032 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1033 = %1000.0;
  %1034 = %1012.3;
  %1035 = log10(%1022) /* ty=Tensor[(6, 12, 14), float64] */;
  %1036 = %1030.0;
  %1037 = asinh(%1031) /* ty=Tensor[(1, 768), float64] */;
  %1038 = %1032.0;
  (%1033, meta[relay.Constant][85] /* ty=Tensor[(2400), float64] */, %var_13634, %1023, meta[relay.Constant][86] /* ty=Tensor[(288), float64] */, %1034, %1035, %1036, %1037, %1038)
}

def @func_12890(%var_12841: Tensor[(7, 3, 11), float64], %var_12842: Tensor[(7, 3, 11), float64], %var_12872: int64, %var_12876: Tensor[(288), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) {
  %1039 = cast(%var_12842, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %1040 = shape_of(%var_12841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1041 = cast(%var_12841, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1043 = cast(%var_12841, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %1044 = cast(meta[relay.Constant][88] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1045 = reshape(%1044, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %1046 = @func_9561(%1045) /* ty=(Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) */;
  %1047 = cast(meta[relay.Constant][88] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1048 = cast(%var_12872, dtype="int64") /* ty=int64 */;
  %1049 = reshape(%1047, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %1050 = reshape(%1048, newshape=[]) /* ty=int64 */;
  %1051 = @func_8860(%1049, %1050) /* ty=(Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) */;
  %1052 = cast(meta[relay.Constant][89] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1053 = cast(%var_12876, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1054 = reshape(%1052, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float32] */;
  %1055 = reshape(%1053, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %1056 = @func_7586(%1054, %1055) /* ty=(Tensor[(6, 8, 16), uint16], Tensor[(9, 1, 6), int64], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 8, 16), float64]) */;
  %1057 = divide(%1041, %1042) /* ty=Tensor[(7, 3, 11), float64] */;
  %1058 = log10(%1043) /* ty=Tensor[(7, 3, 11), float64] */;
  %1059 = %1046.2;
  %1060 = %1051.2;
  %1061 = %1056.2;
  (%1057, %1058, %1059, meta[relay.Constant][88] /* ty=Tensor[(2400), float64] */, %1060, %var_12872, %1061, meta[relay.Constant][89] /* ty=Tensor[(768), float32] */, %var_12876)
}

def @func_10748(%var_10697: uint32) -> (Tensor[(6, 13, 13), bool], Tensor[(13, 8, 1), uint64], Tensor[(1014), float64]) {
  %1062 = cast(meta[relay.Constant][90] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %1063 = cast(meta[relay.Constant][90] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %1064 = reshape(%1062, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %1065 = reshape(%1063, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %1066 = cast(%var_10697, dtype="bool") /* ty=bool */;
  %1067 = cast(meta[relay.Constant][91] /* ty=Tensor[(13, 8, 1), uint32] */, dtype="bool") /* ty=Tensor[(13, 8, 1), bool] */;
  %1068 = equal(%1066, %1067) /* ty=Tensor[(13, 8, 1), bool] */;
  %1069 = cast(%var_10697, dtype="uint64") /* ty=uint64 */;
  %1070 = cast(%1068, dtype="uint64") /* ty=Tensor[(13, 8, 1), uint64] */;
  %1071 = cast(meta[relay.Constant][90] /* ty=Tensor[(1014), uint64] */, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %1072 = @func_5009(%1064, %1065) /* ty=Tensor[(6, 13, 13), bool] */;
  %1073 = maximum(%1069, %1070) /* ty=Tensor[(13, 8, 1), uint64] */;
  %1074 = log(%1071) /* ty=Tensor[(1014), float64] */;
  (%1072, %1073, %1074)
}

def @func_13885(%var_13868: Tensor[(140), float64], %var_13869: Tensor[(560), int64]) -> (Tensor[(3, 2, 9), float32], Tensor[(2288), uint8], Tensor[(140), float64], Tensor[(560), int64]) {
  %1075 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1076 = %1075.0;
  %1077 = cast(%1076, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
  %1078 = cast(%var_13868, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1079 = cast(%var_13869, dtype="int64") /* ty=Tensor[(560), int64] */;
  %1080 = reshape(%1078, newshape=[10, 2, 7]) /* ty=Tensor[(10, 2, 7), float64] */;
  %1081 = reshape(%1079, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %1082 = @func_4131(%1080, %1081) /* ty=(Tensor[(10, 2, 7), float64], Tensor[(672), uint32], Tensor[(3072, 1), bool], int64, Tensor[(220, 1), uint64], Tensor[(9, 2, 16), float64], Tensor[(28), int64], Tensor[(560), int64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64], Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), float64], Tensor[(672), uint32]) */;
  %1083 = acosh(%1077) /* ty=Tensor[(3, 2, 9), float32] */;
  %1084 = %1082.9;
  (%1083, %1084, %var_13868, %var_13869)
}

def @func_16300() -> (Tensor[(220), uint64], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) {
  %1085 = @func_13909() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) */;
  %1086 = cast(meta[relay.Constant][92] /* ty=Tensor[(520), uint8] */, dtype="uint8") /* ty=Tensor[(520), uint8] */;
  %1087 = cast(meta[relay.Constant][92] /* ty=Tensor[(520), uint8] */, dtype="uint8") /* ty=Tensor[(520), uint8] */;
  %1088 = reshape(%1086, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), uint8] */;
  %1089 = reshape(%1087, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), uint8] */;
  %1090 = @func_13402(%1088, %1089) /* ty=(Tensor[(8, 13, 5), bool],) */;
  %1091 = %1085.2;
  %1092 = %1090.0;
  (%1091, %1092, meta[relay.Constant][92] /* ty=Tensor[(520), uint8] */)
}

def @func_17457() -> Tensor[(3, 2, 9), int16] {
  @func_17293() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_14412() -> (Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) {
  %1093 = @func_13909() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) */;
  %1094 = %1093.1;
  %1095 = cast(%1094, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %1096 = acos(%1095) /* ty=Tensor[(10, 2, 11), float32] */;
  %1097 = cast(%1096, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
  %1098 = log(%1097) /* ty=Tensor[(10, 2, 11), float64] */;
  %1099 = cast(%1096, dtype="int16") /* ty=Tensor[(10, 2, 11), int16] */;
  %1100 = shape_of(%1098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1101 = cast(%1098, dtype="int16") /* ty=Tensor[(10, 2, 11), int16] */;
  %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1103 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1104 = bitwise_and(%1101, %1102) /* ty=Tensor[(10, 2, 11), int16] */;
  %1105 = %1103.0;
  (%1104, %1105)
}

def @func_14930(%var_14912: Tensor[(1170), bool]) -> (Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(1248), int8], Tensor[(2288), uint8], Tensor[(420), uint8], Tensor[(1170), bool]) {
  %1106 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1107 = cast(meta[relay.Constant][93] /* ty=Tensor[(1248), int8] */, dtype="int8") /* ty=Tensor[(1248), int8] */;
  %1108 = cast(meta[relay.Constant][94] /* ty=Tensor[(2288), uint8] */, dtype="uint8") /* ty=Tensor[(2288), uint8] */;
  %1109 = cast(meta[relay.Constant][95] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %1110 = cast(%var_14912, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %1111 = reshape(%1107, newshape=[8, 12, 13]) /* ty=Tensor[(8, 12, 13), int8] */;
  %1112 = reshape(%1108, newshape=[2288]) /* ty=Tensor[(2288), uint8] */;
  %1113 = reshape(%1109, newshape=[10, 42]) /* ty=Tensor[(10, 42), uint8] */;
  %1114 = reshape(%1110, newshape=[10, 117]) /* ty=Tensor[(10, 117), bool] */;
  %1115 = @func_11719(%1111, %1112, %1113, %1114) /* ty=(Tensor[(8, 12, 13), bool], Tensor[(2, 336), uint32], Tensor[(1155), float64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 117), float64], Tensor[(16, 10, 13), float32], Tensor[(1040, 2), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(220), uint64], Tensor[(8, ?, ?), int32], Tensor[(8), float64], Tensor[(8, ?, ?), int32], Tensor[(14, 5, 6), uint8], Tensor[(10, 42), uint8], Tensor[(10, 117), uint16]) */;
  %1116 = %1106.0;
  %1117 = %1115.4;
  (%1116, %1117, meta[relay.Constant][93] /* ty=Tensor[(1248), int8] */, meta[relay.Constant][94] /* ty=Tensor[(2288), uint8] */, meta[relay.Constant][95] /* ty=Tensor[(420), uint8] */, %var_14912)
}

def @func_5904(%var_5837: Tensor[(14, 13, 5), float32], %var_5855: Tensor[(3072), bool], %var_5884: Tensor[(140), float64], %var_5894: Tensor[(240), float64], %var_5898: Tensor[(2400), float64]) -> (Tensor[(14, 13, 5), float32], Tensor[(16, 16, 12), bool], Tensor[(3072), bool], int64, Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(220, 1), uint64], Tensor[(140), float64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(240), float64], Tensor[(288, 1), float64], Tensor[(2400), float64]) {
  %1118 = cast(%var_5837, dtype="float32") /* ty=Tensor[(14, 13, 5), float32] */;
  %1119 = cast(%var_5855, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %1120 = cast(%var_5855, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %1121 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1122 = reshape(%1119, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %1123 = reshape(%1120, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %1124 = reshape(%1121, newshape=[]) /* ty=int64 */;
  %1125 = @func_3844(%1122, %1123, %1124) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */;
  %1126 = cast(meta[relay.Constant][96] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %1127 = cast(meta[relay.Constant][96] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %1128 = reshape(%1126, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %1129 = reshape(%1127, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %1130 = cast(%var_5884, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1131 = cast(meta[relay.Constant][97] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %1132 = reshape(%1130, newshape=[10, 2, 7]) /* ty=Tensor[(10, 2, 7), float64] */;
  %1133 = reshape(%1131, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %1134 = @func_4131(%1132, %1133) /* ty=(Tensor[(10, 2, 7), float64], Tensor[(672), uint32], Tensor[(3072, 1), bool], int64, Tensor[(220, 1), uint64], Tensor[(9, 2, 16), float64], Tensor[(28), int64], Tensor[(560), int64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64], Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), float64], Tensor[(672), uint32]) */;
  %1135 = cast(-1 /* ty=int64 */, dtype="float64") /* ty=float64 */;
  %1136 = cast(%var_5894, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1137 = reshape(%1135, newshape=[]) /* ty=float64 */;
  %1138 = reshape(%1136, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), float64] */;
  %1139 = @func_4680(%1137, %1138) /* ty=(Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) */;
  %1140 = cast(%var_5898, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1141 = cast(%var_5898, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1142 = %1139.3;
  %1143 = cast(%1142, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1144 = reshape(%1140, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %1145 = reshape(%1141, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %1146 = reshape(%1143, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %1147 = @func_2786(%1144, %1145, %1146) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %1148 = acos(%1118) /* ty=Tensor[(14, 13, 5), float32] */;
  %1149 = %1125.0;
  %1150 = @func_5009(%1128, %1129) /* ty=Tensor[(6, 13, 13), bool] */;
  %1151 = %1134.4;
  %1152 = %1147.2;
  (%1148, %1149, %var_5855, -1 /* ty=int64 */, %1150, meta[relay.Constant][96] /* ty=Tensor[(1014), uint64] */, %1151, %var_5884, meta[relay.Constant][97] /* ty=Tensor[(560), int64] */, %1142, %var_5894, %1152, %var_5898)
}

def @func_17247(%var_17229: Tensor[(1, 144), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(2400), float64], float64, Tensor[(1, 144), float64]) {
  %1153 = @func_13909() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) */;
  %1154 = cast(5.23301f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1155 = cast(%var_17229, dtype="float64") /* ty=Tensor[(1, 144), float64] */;
  %1156 = reshape(%1154, newshape=[]) /* ty=float64 */;
  %1157 = reshape(%1155, newshape=[72, 2]) /* ty=Tensor[(72, 2), float64] */;
  %1158 = @func_14718(%1156, %1157) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], float64, Tensor[(72, 2), float64], Tensor[(3, 2, 9), int16], Tensor[(2400), float64], Tensor[(2400), float64]) */;
  %1159 = %1153.0;
  %1160 = %1158.6;
  (%1159, %1160, 5.23301f64 /* ty=float64 */, %var_17229)
}

def @func_14284() -> Tensor[(3, 2, 9), int16] {
  @func_13853() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_16656(%var_16646: Tensor[(7, 2, 14), float32], %var_16651: int8, %var_16652: Tensor[(858), float64], %var_16653: Tensor[(288), float64]) -> (Tensor[(7, 2, 14), float32], Tensor[(560), int64], int8, Tensor[(858), float64], Tensor[(288), float64], Tensor[(2400, 1), float64]) {
  %1161 = cast(%var_16646, dtype="float32") /* ty=Tensor[(7, 2, 14), float32] */;
  %1162 = cast(%var_16651, dtype="int8") /* ty=int8 */;
  %1163 = cast(%var_16652, dtype="float64") /* ty=Tensor[(858), float64] */;
  %1164 = cast(%var_16653, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1165 = cast(meta[relay.Constant][98] /* ty=Tensor[(2400, 1), float64] */, dtype="float64") /* ty=Tensor[(2400, 1), float64] */;
  %1166 = reshape(%1162, newshape=[]) /* ty=int8 */;
  %1167 = reshape(%1163, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %1168 = reshape(%1164, newshape=[2, 144]) /* ty=Tensor[(2, 144), float64] */;
  %1169 = reshape(%1165, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %1170 = @func_15021(%1166, %1167, %1168, %1169) /* ty=(Tensor[(9, 5, 2), int8], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(2, 144), float64], Tensor[(560), int64], Tensor[(2400), float64]) */;
  %1171 = acosh(%1161) /* ty=Tensor[(7, 2, 14), float32] */;
  %1172 = %1170.6;
  (%1171, %1172, %var_16651, %var_16652, %var_16653, meta[relay.Constant][98] /* ty=Tensor[(2400, 1), float64] */)
}

def @func_2786(%var_2730: Tensor[(15, 16, 10), float64], %var_2749: Tensor[(15, 16, 10), float64], %var_2767: Tensor[(288, 1), float64]) -> (Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) {
  %1173 = cast(%var_2730, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %1174 = cos(%1173) /* ty=Tensor[(15, 16, 10), float64] */;
  %1175 = cast(%var_2749, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %1176 = shape_of(%1174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1177 = cast(%1174, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1179 = cast(%var_2767, dtype="float64") /* ty=Tensor[(288, 1), float64] */;
  %1180 = cast(meta[relay.Constant][99] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %1181 = reshape(%1179, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
  %1182 = reshape(%1180, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %1183 = @func_948(%1181, %1182) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
  %1184 = cast(%var_2767, dtype="float64") /* ty=Tensor[(288, 1), float64] */;
  %1185 = cast(meta[relay.Constant][99] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %1186 = reshape(%1184, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
  %1187 = reshape(%1185, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %1188 = @func_948(%1186, %1187) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
  %1189 = logical_or(%1177, %1178) /* ty=Tensor[(15, 16, 10), bool] */;
  %1190 = %1183.2;
  %1191 = %1188.1;
  (%1189, %1190, %var_2767, meta[relay.Constant][99] /* ty=Tensor[(560), int64] */, %1191)
}

def @func_15161() -> (Tensor[(3, 2, 9), int16],) {
  %1192 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1193 = %1192.0;
  (%1193,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13910() -> (Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) {
  %8 = fn () -> (Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) {
    %0 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(220), uint64] */, dtype="uint64") /* ty=Tensor[(220), uint64] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(220), uint64] */, dtype="uint64") /* ty=Tensor[(220), uint64] */;
    %3 = reshape(%1, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
    %4 = reshape(%2, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
    %5 = @func_2054(%3, %4) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */;
    %6 = %0.0;
    %7 = %5.2;
    (%6, %7, meta[relay.Constant][0] /* ty=Tensor[(220), uint64] */)
  };
  %8() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) */
}

def @func_15152(%var_15150: int64, %var_15151: Tensor[(560), int64]) -> (Tensor[(3, 2, 9), int16], Tensor[(9, 2, 16), float64], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(14, 5, 6), uint8], Tensor[(560), int64], Tensor[(2, 1200), float64], Tensor[(420, 7), float32], Tensor[(2288), uint8], Tensor[(1170), bool], Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(13, 11, 16), bool], Tensor[(16, 13, 5), float32], Tensor[(1040), float32]) {
  @func_15148(%var_15150, %var_15151) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(9, 2, 16), float64], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(14, 5, 6), uint8], Tensor[(560), int64], Tensor[(2, 1200), float64], Tensor[(420, 7), float32], Tensor[(2288), uint8], Tensor[(1170), bool], Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(13, 11, 16), bool], Tensor[(16, 13, 5), float32], Tensor[(1040), float32]) */
}

def @func_16686() -> (Tensor[(3, 2, 9), int16],) {
  %9 = @func_16261() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %10 = %9.0;
  (%10,)
}

def @func_16262() -> (Tensor[(3, 2, 9), int16],) {
  %12 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %11 = @func_13853() /* ty=Tensor[(3, 2, 9), int16] */;
    (%11,)
  };
  %12() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_11725(%var_11721: Tensor[(8, 12, 13), int8], %var_11722: Tensor[(2288), uint8], %var_11723: Tensor[(10, 42), uint8], %var_11724: Tensor[(10, 117), bool]) -> (Tensor[(8, 12, 13), bool], Tensor[(2, 336), uint32], Tensor[(1155), float64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 117), float64], Tensor[(16, 10, 13), float32], Tensor[(1040, 2), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(220), uint64], Tensor[(8, ?, ?), int32], Tensor[(8), float64], Tensor[(8, ?, ?), int32], Tensor[(14, 5, 6), uint8], Tensor[(10, 42), uint8], Tensor[(10, 117), uint16]) {
  @func_11719(%var_11721, %var_11722, %var_11723, %var_11724) /* ty=(Tensor[(8, 12, 13), bool], Tensor[(2, 336), uint32], Tensor[(1155), float64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 117), float64], Tensor[(16, 10, 13), float32], Tensor[(1040, 2), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(220), uint64], Tensor[(8, ?, ?), int32], Tensor[(8), float64], Tensor[(8, ?, ?), int32], Tensor[(14, 5, 6), uint8], Tensor[(10, 42), uint8], Tensor[(10, 117), uint16]) */
}

def @func_10748(%var_10697: uint32) -> (Tensor[(6, 13, 13), bool], Tensor[(13, 8, 1), uint64], Tensor[(1014), float64]) {
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %15 = reshape(%13, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %16 = reshape(%14, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %17 = cast(%var_10697, dtype="bool") /* ty=bool */;
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 8, 1), uint32] */, dtype="bool") /* ty=Tensor[(13, 8, 1), bool] */;
  %19 = equal(%17, %18) /* ty=Tensor[(13, 8, 1), bool] */;
  %20 = cast(%var_10697, dtype="uint64") /* ty=uint64 */;
  %21 = cast(%19, dtype="uint64") /* ty=Tensor[(13, 8, 1), uint64] */;
  %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(1014), uint64] */, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %23 = @func_5009(%15, %16) /* ty=Tensor[(6, 13, 13), bool] */;
  %24 = maximum(%20, %21) /* ty=Tensor[(13, 8, 1), uint64] */;
  %25 = log(%22) /* ty=Tensor[(1014), float64] */;
  (%23, %24, %25)
}

def @func_15162() -> (Tensor[(3, 2, 9), int16],) {
  %28 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %26 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %27 = %26.0;
    (%27,)
  };
  %28() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_15909(%var_15908: Tensor[(560, 1), int64]) -> (Tensor[(3, 2, 9), bool], Tensor[(16, 9, 13), float32], Tensor[(1872), float32], Tensor[(1170), bool], int64, Tensor[(560, 1), int64]) {
  %48 = fn (%var_15902: Tensor[(560, 1), int64]) -> (Tensor[(3, 2, 9), bool], Tensor[(16, 9, 13), float32], Tensor[(1872), float32], Tensor[(1170), bool], int64, Tensor[(560, 1), int64]) {
    %29 = @func_14759() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %30 = %29.0;
    %31 = @func_15161() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %32 = %31.0;
    %33 = cast(%32, dtype="bool") /* ty=Tensor[(3, 2, 9), bool] */;
    %34 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
    %35 = cast(%30, dtype="bool") /* ty=Tensor[(3, 2, 9), bool] */;
    %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
    %38 = reshape(%37, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), float32] */;
    %39 = @func_12988(%38) /* ty=(Tensor[(16, 9, 13), float32],) */;
    %40 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %41 = cast(%var_15902, dtype="int64") /* ty=Tensor[(560, 1), int64] */;
    %42 = reshape(%40, newshape=[]) /* ty=int64 */;
    %43 = reshape(%41, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %44 = @func_15148(%42, %43) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(9, 2, 16), float64], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(14, 5, 6), uint8], Tensor[(560), int64], Tensor[(2, 1200), float64], Tensor[(420, 7), float32], Tensor[(2288), uint8], Tensor[(1170), bool], Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(13, 11, 16), bool], Tensor[(16, 13, 5), float32], Tensor[(1040), float32]) */;
    %45 = logical_and(%35, %36) /* ty=Tensor[(3, 2, 9), bool] */;
    %46 = %39.0;
    %47 = %44.10;
    (%45, %46, meta[relay.Constant][3] /* ty=Tensor[(1872), float32] */, %47, -10 /* ty=int64 */, %var_15902)
  };
  %48(%var_15908) /* ty=(Tensor[(3, 2, 9), bool], Tensor[(16, 9, 13), float32], Tensor[(1872), float32], Tensor[(1170), bool], int64, Tensor[(560, 1), int64]) */
}

def @func_18367(%var_18366: Tensor[(858), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(858), bool]) {
  %62 = fn (%var_18344: Tensor[(858), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(858), bool]) {
    %49 = @func_16261() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %50 = @func_18075() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %51 = cast(%var_18344, dtype="float64") /* ty=Tensor[(858), float64] */;
    %52 = reshape(%51, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
    %53 = @func_5655(%52) /* ty=(Tensor[(13, 11, 6), float64],) */;
    %54 = %53.0;
    %55 = cast(%54, dtype="bool") /* ty=Tensor[(13, 11, 6), bool] */;
    %56 = shape_of(%var_18344, dtype="int32") /* ty=Tensor[(1), int32] */;
    %57 = cast(%var_18344, dtype="bool") /* ty=Tensor[(858), bool] */;
    %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?), bool] */;
    %59 = %49.0;
    %60 = %50.0;
    %61 = less(%57, %58) /* ty=Tensor[(858), bool] */;
    (%59, %60, %61)
  };
  %62(%var_18366) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(858), bool]) */
}

def @func_9328(%var_9326: Tensor[(4, 6, 4), float64], %var_9327: Tensor[(560), int64]) -> (Tensor[(4, 6, 4), float64], Tensor[(14, 8, 5), int64], Tensor[(24, 12), float64], Tensor[(560), int64]) {
  %74 = fn (%var_9279: Tensor[(4, 6, 4), float64], %var_9319: Tensor[(560), int64]) -> (Tensor[(4, 6, 4), float64], Tensor[(14, 8, 5), int64], Tensor[(24, 12), float64], Tensor[(560), int64]) {
    %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 4), float64] */;
    %64 = shape_of(%var_9279, dtype="int32") /* ty=Tensor[(3), int32] */;
    %65 = cast(%var_9279, dtype="float64") /* ty=Tensor[(4, 6, 4), float64] */;
    %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %67 = cast(meta[relay.Constant][5] /* ty=Tensor[(24, 12), float64] */, dtype="float64") /* ty=Tensor[(24, 12), float64] */;
    %68 = cast(%var_9319, dtype="int64") /* ty=Tensor[(560), int64] */;
    %69 = reshape(%67, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
    %70 = reshape(%68, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %71 = @func_948(%69, %70) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
    %72 = floor_divide(%65, %66) /* ty=Tensor[(4, 6, 4), float64] */;
    %73 = %71.1;
    (%72, %73, meta[relay.Constant][5] /* ty=Tensor[(24, 12), float64] */, %var_9319)
  };
  %74(%var_9326, %var_9327) /* ty=(Tensor[(4, 6, 4), float64], Tensor[(14, 8, 5), int64], Tensor[(24, 12), float64], Tensor[(560), int64]) */
}

def @func_11993(%var_11966: Tensor[(6, 8, 8), float32]) -> (Tensor[(6, 8, 8), float32],) {
  %75 = cast(%var_11966, dtype="float32") /* ty=Tensor[(6, 8, 8), float32] */;
  %76 = sqrt(%75) /* ty=Tensor[(6, 8, 8), float32] */;
  (%76,)
}

def @func_14722(%var_14720: float64, %var_14721: Tensor[(72, 2), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], float64, Tensor[(72, 2), float64], Tensor[(3, 2, 9), int16], Tensor[(2400), float64], Tensor[(2400), float64]) {
  @func_14718(%var_14720, %var_14721) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], float64, Tensor[(72, 2), float64], Tensor[(3, 2, 9), int16], Tensor[(2400), float64], Tensor[(2400), float64]) */
}

def @func_7170(%var_7168: Tensor[(8, 16, 7), uint8], %var_7169: Tensor[(8, 16, 7), uint8]) -> Tensor[(8, 16, 7), uint8] {
  %81 = fn (%var_7158: Tensor[(8, 16, 7), uint8], %var_7159: Tensor[(8, 16, 7), uint8]) -> Tensor[(8, 16, 7), uint8] {
    %77 = cast(%var_7159, dtype="uint8") /* ty=Tensor[(8, 16, 7), uint8] */;
    %78 = shape_of(%var_7158, dtype="int32") /* ty=Tensor[(3), int32] */;
    %79 = cast(%var_7158, dtype="uint8") /* ty=Tensor[(8, 16, 7), uint8] */;
    %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    left_shift(%79, %80) /* ty=Tensor[(8, 16, 7), uint8] */
  };
  %81(%var_7168, %var_7169) /* ty=Tensor[(8, 16, 7), uint8] */
}

def @func_13837() -> (Tensor[(3, 2, 9), int16],) {
  @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_15614() -> (Tensor[(3, 2, 9), int16],) {
  @func_15612() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_15612() -> (Tensor[(3, 2, 9), int16],) {
  %82 = @func_14284() /* ty=Tensor[(3, 2, 9), int16] */;
  (%82,)
}

def @func_13430() -> (Tensor[(3, 2, 9), int16],) {
  %85 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %83 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %84 = %83.0;
    (%84,)
  };
  %85() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_9481(%var_9423: Tensor[(2, 8, 9), float64], %var_9441: Tensor[(2400), float64]) -> (Tensor[(2, 8, 9), float64], Tensor[(14, 8, 5), int64], Tensor[(2400), float64], Tensor[(288), float64], Tensor[(14, 8, 5), int64], Tensor[(5, 3, 16), float64], float64, Tensor[(240, 1), float64]) {
  %86 = cast(%var_9423, dtype="float64") /* ty=Tensor[(2, 8, 9), float64] */;
  %87 = cast(%var_9441, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %88 = cast(%var_9441, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %89 = cast(meta[relay.Constant][6] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %90 = reshape(%87, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %91 = reshape(%88, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %92 = reshape(%89, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %93 = @func_2786(%90, %91, %92) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %94 = %93.4;
  %95 = cast(%94, dtype="int64") /* ty=Tensor[(14, 8, 5), int64] */;
  %96 = cast(%94, dtype="int64") /* ty=Tensor[(14, 8, 5), int64] */;
  %97 = reshape(%95, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %98 = reshape(%96, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %99 = @func_794(%97, %98) /* ty=(Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) */;
  %100 = cast(-6.96544f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(240, 1), float64] */, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %102 = reshape(%100, newshape=[]) /* ty=float64 */;
  %103 = reshape(%101, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), float64] */;
  %104 = @func_4680(%102, %103) /* ty=(Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) */;
  %105 = log2(%86) /* ty=Tensor[(2, 8, 9), float64] */;
  %106 = %99.0;
  %107 = %104.0;
  (%105, %94, %var_9441, meta[relay.Constant][6] /* ty=Tensor[(288), float64] */, %106, %107, -6.96544f64 /* ty=float64 */, meta[relay.Constant][7] /* ty=Tensor[(240, 1), float64] */)
}

def @func_15770(%var_15768: Tensor[(1, 12), float64]) -> Tensor[(1, 12), float64] {
  @func_15767(%var_15768) /* ty=Tensor[(1, 12), float64] */
}

def @func_2533(%var_2531: Tensor[(10, 2, 9), uint8], %var_2532: Tensor[(10, 2, 9), uint8]) -> (Tensor[(10, 2, 9), uint8],) {
  @func_2529(%var_2531, %var_2532) /* ty=(Tensor[(10, 2, 9), uint8],) */
}

def @func_17312() -> (Tensor[(3, 2, 9), int16],) {
  @func_17310() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_18178() -> (Tensor[(3, 2, 9), int16],) {
  %110 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %108 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %109 = %108.0;
    (%109,)
  };
  %110() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_17026(%var_17024: Tensor[(7, 4), int64], %var_17025: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(28, 1), int64], Tensor[(216), float64], Tensor[(7, 4), int64], Tensor[(144), float64], Tensor[(2400), float64]) {
  %125 = fn (%var_17001: Tensor[(7, 4), int64], %var_17016: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(28, 1), int64], Tensor[(216), float64], Tensor[(7, 4), int64], Tensor[(144), float64], Tensor[(2400), float64]) {
    %111 = cast(meta[relay.Constant][8] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %112 = cast(%var_17001, dtype="int64") /* ty=Tensor[(7, 4), int64] */;
    %113 = cast(meta[relay.Constant][8] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %114 = reshape(%111, newshape=[9, 3, 8]) /* ty=Tensor[(9, 3, 8), float64] */;
    %115 = reshape(%112, newshape=[28, 1]) /* ty=Tensor[(28, 1), int64] */;
    %116 = reshape(%113, newshape=[9, 3, 8]) /* ty=Tensor[(9, 3, 8), float64] */;
    %117 = @func_7945(%114, %115, %116) /* ty=(Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(560), int64], Tensor[(672), uint32], int64, Tensor[(28, 1), int64], Tensor[(8, 16, 7), uint8], Tensor[(896), uint8], Tensor[(9, 3, 8), uint32]) */;
    %118 = cast(%var_17016, dtype="float64") /* ty=Tensor[(2400), float64] */;
    %119 = reshape(%118, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
    %120 = @func_9561(%119) /* ty=(Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) */;
    %121 = @func_15839() /* ty=Tensor[(3, 2, 9), int16] */;
    %122 = @func_16156() /* ty=Tensor[(3, 2, 9), int16] */;
    %123 = %117.6;
    %124 = %120.2;
    (%121, %122, %123, meta[relay.Constant][8] /* ty=Tensor[(216), float64] */, %var_17001, %124, %var_17016)
  };
  %125(%var_17024, %var_17025) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(28, 1), int64], Tensor[(216), float64], Tensor[(7, 4), int64], Tensor[(144), float64], Tensor[(2400), float64]) */
}

def @func_15188() -> (Tensor[(3, 2, 9), int16],) {
  %126 = @func_14284() /* ty=Tensor[(3, 2, 9), int16] */;
  (%126,)
}

def @func_13406(%var_13404: Tensor[(8, 13, 5), uint8], %var_13405: Tensor[(8, 13, 5), uint8]) -> (Tensor[(8, 13, 5), bool],) {
  @func_13402(%var_13404, %var_13405) /* ty=(Tensor[(8, 13, 5), bool],) */
}

def @func_15021(%var_14969: int8, %var_14978: Tensor[(858), float64], %var_14998: Tensor[(2, 144), float64], %var_15015: Tensor[(2400), float64]) -> (Tensor[(9, 5, 2), int8], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(2, 144), float64], Tensor[(560), int64], Tensor[(2400), float64]) {
  %127 = cast(%var_14969, dtype="int8") /* ty=int8 */;
  %128 = cast(meta[relay.Constant][9] /* ty=Tensor[(9, 5, 2), int8] */, dtype="int8") /* ty=Tensor[(9, 5, 2), int8] */;
  %129 = cast(%var_14978, dtype="float64") /* ty=Tensor[(858), float64] */;
  %130 = reshape(%129, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %131 = @func_5655(%130) /* ty=(Tensor[(13, 11, 6), float64],) */;
  %132 = cast(meta[relay.Constant][10] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %133 = cast(meta[relay.Constant][10] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %134 = cast(%var_14969, dtype="int64") /* ty=int64 */;
  %135 = cast(%var_14998, dtype="float64") /* ty=Tensor[(2, 144), float64] */;
  %136 = reshape(%132, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %137 = reshape(%133, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %138 = reshape(%134, newshape=[]) /* ty=int64 */;
  %139 = reshape(%135, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %140 = @func_12890(%136, %137, %138, %139) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) */;
  %141 = cast(%var_15015, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %142 = cast(%var_15015, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %143 = cast(%var_14998, dtype="float64") /* ty=Tensor[(2, 144), float64] */;
  %144 = reshape(%141, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %145 = reshape(%142, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %146 = reshape(%143, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %147 = @func_2786(%144, %145, %146) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %148 = right_shift(%127, %128) /* ty=Tensor[(9, 5, 2), int8] */;
  %149 = %131.0;
  %150 = %140.0;
  %151 = %147.3;
  (%148, %149, %var_14978, %150, meta[relay.Constant][10] /* ty=Tensor[(231), float64] */, %var_14998, %151, %var_15015)
}

def @func_16740() -> (Tensor[(3, 2, 9), int16],) {
  %154 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %152 = @func_16622() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %153 = %152.0;
    (%153,)
  };
  %154() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_5657(%var_5656: Tensor[(13, 11, 6), float64]) -> (Tensor[(13, 11, 6), float64],) {
  %157 = fn (%var_5644: Tensor[(13, 11, 6), float64]) -> (Tensor[(13, 11, 6), float64],) {
    %155 = cast(%var_5644, dtype="float64") /* ty=Tensor[(13, 11, 6), float64] */;
    %156 = atanh(%155) /* ty=Tensor[(13, 11, 6), float64] */;
    (%156,)
  };
  %157(%var_5656) /* ty=(Tensor[(13, 11, 6), float64],) */
}

def @func_13555(%var_13553: float64, %var_13554: Tensor[(144), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(15, 16, 10), bool], float64, Tensor[(240), float64], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], Tensor[(14, 8, 5), int64], Tensor[(144), float64]) {
  @func_13551(%var_13553, %var_13554) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(15, 16, 10), bool], float64, Tensor[(240), float64], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], Tensor[(14, 8, 5), int64], Tensor[(144), float64]) */
}

def @func_17193() -> (Tensor[(3, 2, 9), int16],) {
  @func_17191() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_4684(%var_4682: float64, %var_4683: Tensor[(5, 3, 16), float64]) -> (Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) {
  @func_4680(%var_4682, %var_4683) /* ty=(Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) */
}

def @func_14285() -> Tensor[(3, 2, 9), int16] {
  %158 = fn () -> Tensor[(3, 2, 9), int16] {
    @func_13853() /* ty=Tensor[(3, 2, 9), int16] */
  };
  %158() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_16157() -> Tensor[(3, 2, 9), int16] {
  %159 = fn () -> Tensor[(3, 2, 9), int16] {
    @func_15839() /* ty=Tensor[(3, 2, 9), int16] */
  };
  %159() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_17293() -> Tensor[(3, 2, 9), int16] {
  %160 = @func_16739() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %160.0
}

def @func_9563(%var_9562: Tensor[(2400), float64]) -> (Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) {
  %169 = fn (%var_9549: Tensor[(2400), float64]) -> (Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) {
    %161 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(2, 4, 11), float32] */;
    %162 = cast(meta[relay.Constant][12] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %163 = cast(%var_9549, dtype="float64") /* ty=Tensor[(2400), float64] */;
    %164 = reshape(%162, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), float64] */;
    %165 = reshape(%163, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
    %166 = @func_9481(%164, %165) /* ty=(Tensor[(2, 8, 9), float64], Tensor[(14, 8, 5), int64], Tensor[(2400), float64], Tensor[(288), float64], Tensor[(14, 8, 5), int64], Tensor[(5, 3, 16), float64], float64, Tensor[(240, 1), float64]) */;
    %167 = asinh(%161) /* ty=Tensor[(2, 4, 11), float32] */;
    %168 = %166.1;
    (%167, %168, meta[relay.Constant][12] /* ty=Tensor[(144), float64] */, %var_9549)
  };
  %169(%var_9562) /* ty=(Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) */
}

def @func_15733(%var_15731: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), float32], int64, int64, Tensor[(2400), float32], Tensor[(10, 2, 11), float64]) {
  @func_15730(%var_15731) /* ty=(Tensor[(3, 2, 9), float32], int64, int64, Tensor[(2400), float32], Tensor[(10, 2, 11), float64]) */
}

def @func_2790(%var_2787: Tensor[(15, 16, 10), float64], %var_2788: Tensor[(15, 16, 10), float64], %var_2789: Tensor[(288, 1), float64]) -> (Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) {
  %189 = fn (%var_2730: Tensor[(15, 16, 10), float64], %var_2749: Tensor[(15, 16, 10), float64], %var_2767: Tensor[(288, 1), float64]) -> (Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) {
    %170 = cast(%var_2730, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
    %171 = cos(%170) /* ty=Tensor[(15, 16, 10), float64] */;
    %172 = cast(%var_2749, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
    %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
    %174 = cast(%171, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
    %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %176 = cast(%var_2767, dtype="float64") /* ty=Tensor[(288, 1), float64] */;
    %177 = cast(meta[relay.Constant][13] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %178 = reshape(%176, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
    %179 = reshape(%177, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %180 = @func_948(%178, %179) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
    %181 = cast(%var_2767, dtype="float64") /* ty=Tensor[(288, 1), float64] */;
    %182 = cast(meta[relay.Constant][13] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %183 = reshape(%181, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
    %184 = reshape(%182, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %185 = @func_948(%183, %184) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
    %186 = logical_or(%174, %175) /* ty=Tensor[(15, 16, 10), bool] */;
    %187 = %180.2;
    %188 = %185.1;
    (%186, %187, %var_2767, meta[relay.Constant][13] /* ty=Tensor[(560), int64] */, %188)
  };
  %189(%var_2787, %var_2788, %var_2789) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */
}

def @func_16224(%var_16221: Tensor[(3, 11, 3), float64], %var_16222: Tensor[(384), float32], %var_16223: Tensor[(3, 11, 3), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(384), float32], Tensor[(2, 520), float32], Tensor[(3, 11, 3), float32]) {
  %203 = fn (%var_16171: Tensor[(3, 11, 3), float64], %var_16185: Tensor[(384), float32], %var_16197: Tensor[(3, 11, 3), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(384), float32], Tensor[(2, 520), float32], Tensor[(3, 11, 3), float32]) {
    %190 = cast(%var_16185, dtype="float32") /* ty=Tensor[(384), float32] */;
    %191 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 520), float32] */, dtype="float32") /* ty=Tensor[(2, 520), float32] */;
    %192 = reshape(%190, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %193 = reshape(%191, newshape=[40, 26]) /* ty=Tensor[(40, 26), float32] */;
    %194 = @func_14891(%192, %193) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(6, 8, 8), float32], Tensor[(384), float32], Tensor[(40, 26), float32], Tensor[(3, 2, 9), int16], Tensor[(16, 13, 5), float64]) */;
    %195 = cast(%var_16171, dtype="float64") /* ty=Tensor[(3, 11, 3), float64] */;
    %196 = asinh(%195) /* ty=Tensor[(3, 11, 3), float64] */;
    %197 = cast(%var_16197, dtype="float32") /* ty=Tensor[(3, 11, 3), float32] */;
    %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
    %199 = cast(%196, dtype="float32") /* ty=Tensor[(3, 11, 3), float32] */;
    %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %201 = %194.5;
    %202 = power(%199, %200) /* ty=Tensor[(3, 11, 3), float32] */;
    (%201, %var_16185, meta[relay.Constant][14] /* ty=Tensor[(2, 520), float32] */, %202)
  };
  %203(%var_16221, %var_16222, %var_16223) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(384), float32], Tensor[(2, 520), float32], Tensor[(3, 11, 3), float32]) */
}

def @func_17874() -> Tensor[(3, 2, 9), int16] {
  @func_14466() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_17250(%var_17248: Tensor[(1, 144), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(2400), float64], float64, Tensor[(1, 144), float64]) {
  @func_17247(%var_17248) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(2400), float64], float64, Tensor[(1, 144), float64]) */
}

def @func_16147() -> (Tensor[(10, 2, 11), int16],) {
  %206 = fn () -> (Tensor[(10, 2, 11), int16],) {
    %204 = @func_14412() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */;
    %205 = %204.0;
    (%205,)
  };
  %206() /* ty=(Tensor[(10, 2, 11), int16],) */
}

def @func_7589(%var_7587: Tensor[(6, 8, 16), float32], %var_7588: Tensor[(288), float64]) -> (Tensor[(6, 8, 16), uint16], Tensor[(9, 1, 6), int64], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 8, 16), float64]) {
  %226 = fn (%var_7565: Tensor[(6, 8, 16), float32], %var_7572: Tensor[(288), float64]) -> (Tensor[(6, 8, 16), uint16], Tensor[(9, 1, 6), int64], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 8, 16), float64]) {
    %207 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %208 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 8, 16), uint16] */, dtype="uint16") /* ty=Tensor[(6, 8, 16), uint16] */;
    %209 = cast(%var_7572, dtype="float64") /* ty=Tensor[(288), float64] */;
    %210 = cast(meta[relay.Constant][17] /* ty=Tensor[(55, 4), uint64] */, dtype="uint64") /* ty=Tensor[(55, 4), uint64] */;
    %211 = reshape(%209, newshape=[288]) /* ty=Tensor[(288), float64] */;
    %212 = reshape(%210, newshape=[220, 1]) /* ty=Tensor[(220, 1), uint64] */;
    %213 = @func_3077(%211, %212) /* ty=(Tensor[(9, 1, 6), int64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64]) */;
    %214 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 8, 16), uint16] */, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
    %215 = tan(%214) /* ty=Tensor[(6, 8, 16), float32] */;
    %216 = cast(%var_7565, dtype="uint8") /* ty=Tensor[(6, 8, 16), uint8] */;
    %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %218 = cast(%215, dtype="uint8") /* ty=Tensor[(6, 8, 16), uint8] */;
    %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %220 = left_shift(%218, %219) /* ty=Tensor[(6, 8, 16), uint8] */;
    %221 = cast(%220, dtype="float64") /* ty=Tensor[(6, 8, 16), float64] */;
    %222 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="float64") /* ty=float64 */;
    %223 = right_shift(%207, %208) /* ty=Tensor[(6, 8, 16), uint16] */;
    %224 = %213.0;
    %225 = floor_divide(%221, %222) /* ty=Tensor[(6, 8, 16), float64] */;
    (%223, %224, %var_7572, meta[relay.Constant][17] /* ty=Tensor[(55, 4), uint64] */, %225)
  };
  %226(%var_7587, %var_7588) /* ty=(Tensor[(6, 8, 16), uint16], Tensor[(9, 1, 6), int64], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 8, 16), float64]) */
}

def @func_10932(%var_10930: Tensor[(7, 15, 11), float64], %var_10931: Tensor[(1170), float32]) -> (Tensor[(7, 15, 11), bool], Tensor[(28), int64], Tensor[(300), int32], Tensor[(2, 336), uint32], Tensor[(13, 10, 9), float32], Tensor[(1170), float32]) {
  %246 = fn (%var_10869: Tensor[(7, 15, 11), float64], %var_10918: Tensor[(1170), float32]) -> (Tensor[(7, 15, 11), bool], Tensor[(28), int64], Tensor[(300), int32], Tensor[(2, 336), uint32], Tensor[(13, 10, 9), float32], Tensor[(1170), float32]) {
    %227 = cast(%var_10869, dtype="float64") /* ty=Tensor[(7, 15, 11), float64] */;
    %228 = log(%227) /* ty=Tensor[(7, 15, 11), float64] */;
    %229 = cast(%var_10869, dtype="bool") /* ty=Tensor[(7, 15, 11), bool] */;
    %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
    %231 = cast(%228, dtype="bool") /* ty=Tensor[(7, 15, 11), bool] */;
    %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %233 = cast(meta[relay.Constant][18] /* ty=Tensor[(300), int32] */, dtype="int32") /* ty=Tensor[(300), int32] */;
    %234 = cast(meta[relay.Constant][18] /* ty=Tensor[(300), int32] */, dtype="int32") /* ty=Tensor[(300), int32] */;
    %235 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 336), uint32] */, dtype="uint32") /* ty=Tensor[(2, 336), uint32] */;
    %236 = reshape(%233, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), int32] */;
    %237 = reshape(%234, newshape=[10, 15, 2]) /* ty=Tensor[(10, 15, 2), int32] */;
    %238 = reshape(%235, newshape=[672]) /* ty=Tensor[(672), uint32] */;
    %239 = @func_6369(%236, %237, %238) /* ty=(Tensor[(10, 15, 2), int32], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 16, 6), bool], Tensor[(672), uint32], int64, Tensor[(28), int64], Tensor[(560), int64]) */;
    %240 = cast(%var_10918, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %241 = reshape(%240, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float32] */;
    %242 = @func_9656(%241) /* ty=(Tensor[(13, 10, 9), float32],) */;
    %243 = greater(%231, %232) /* ty=Tensor[(7, 15, 11), bool] */;
    %244 = %239.6;
    %245 = %242.0;
    (%243, %244, meta[relay.Constant][18] /* ty=Tensor[(300), int32] */, meta[relay.Constant][19] /* ty=Tensor[(2, 336), uint32] */, %245, %var_10918)
  };
  %246(%var_10930, %var_10931) /* ty=(Tensor[(7, 15, 11), bool], Tensor[(28), int64], Tensor[(300), int32], Tensor[(2, 336), uint32], Tensor[(13, 10, 9), float32], Tensor[(1170), float32]) */
}

def @func_3077(%var_3062: Tensor[(288), float64], %var_3069: Tensor[(220, 1), uint64]) -> (Tensor[(9, 1, 6), int64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64]) {
  %247 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %248 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 1, 6), int64] */, dtype="int64") /* ty=Tensor[(9, 1, 6), int64] */;
  %249 = cast(%var_3062, dtype="float64") /* ty=Tensor[(288), float64] */;
  %250 = cast(meta[relay.Constant][21] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %251 = reshape(%249, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
  %252 = reshape(%250, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %253 = @func_948(%251, %252) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
  %254 = cast(%var_3069, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
  %255 = cast(%var_3069, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
  %256 = reshape(%254, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %257 = reshape(%255, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %258 = @func_2054(%256, %257) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */;
  %259 = add(%247, %248) /* ty=Tensor[(9, 1, 6), int64] */;
  %260 = %253.2;
  %261 = %258.2;
  (%259, %260, %var_3062, meta[relay.Constant][21] /* ty=Tensor[(560), int64] */, %261, %var_3069)
}

def @func_12896(%var_12892: Tensor[(7, 3, 11), float64], %var_12893: Tensor[(7, 3, 11), float64], %var_12894: int64, %var_12895: Tensor[(288), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) {
  @func_12890(%var_12892, %var_12893, %var_12894, %var_12895) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) */
}

def @func_14272(%var_14270: float64, %var_14271: Tensor[(288), float64]) -> (Tensor[(7, 1), float32], Tensor[(7), float32], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), float32], Tensor[(8, ?, ?), int32], float64, Tensor[(8), float64], Tensor[(55, 4), uint64], Tensor[(768), float32], Tensor[(288), float64]) {
  @func_14268(%var_14270, %var_14271) /* ty=(Tensor[(7, 1), float32], Tensor[(7), float32], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), float32], Tensor[(8, ?, ?), int32], float64, Tensor[(8), float64], Tensor[(55, 4), uint64], Tensor[(768), float32], Tensor[(288), float64]) */
}

def @func_8653(%var_8651: Tensor[(16, 10, 13), float32]) -> (Tensor[(16, 10, 13), float32],) {
  @func_8650(%var_8651) /* ty=(Tensor[(16, 10, 13), float32],) */
}

def @func_17191() -> (Tensor[(3, 2, 9), int16],) {
  %262 = @func_15839() /* ty=Tensor[(3, 2, 9), int16] */;
  (%262,)
}

def @func_14895(%var_14893: Tensor[(384), float32], %var_14894: Tensor[(40, 26), float32]) -> (Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(6, 8, 8), float32], Tensor[(384), float32], Tensor[(40, 26), float32], Tensor[(3, 2, 9), int16], Tensor[(16, 13, 5), float64]) {
  @func_14891(%var_14893, %var_14894) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(6, 8, 8), float32], Tensor[(384), float32], Tensor[(40, 26), float32], Tensor[(3, 2, 9), int16], Tensor[(16, 13, 5), float64]) */
}

def @func_17414(%var_17409: float64, %var_17410: Tensor[(13, 10, 7), float64], %var_17411: Tensor[(3072), bool], %var_17412: Tensor[(240), float64], %var_17413: Tensor[(2400), float64]) -> (Tensor[(13, 10, 7), bool], Tensor[(6, 13, 13), bool], Tensor[(3072), bool], Tensor[(140), float64], Tensor[(240), float64], Tensor[(2400), float64], Tensor[(3, 2, 9), int16]) {
  %280 = fn (%var_17382: float64, %var_17383: Tensor[(13, 10, 7), float64], %var_17390: Tensor[(3072), bool], %var_17392: Tensor[(240), float64], %var_17393: Tensor[(2400), float64]) -> (Tensor[(13, 10, 7), bool], Tensor[(6, 13, 13), bool], Tensor[(3072), bool], Tensor[(140), float64], Tensor[(240), float64], Tensor[(2400), float64], Tensor[(3, 2, 9), int16]) {
    %263 = cast(%var_17382, dtype="bool") /* ty=bool */;
    %264 = cast(%var_17383, dtype="bool") /* ty=Tensor[(13, 10, 7), bool] */;
    %265 = greater(%263, %264) /* ty=Tensor[(13, 10, 7), bool] */;
    %266 = cast(%265, dtype="float32") /* ty=Tensor[(13, 10, 7), float32] */;
    %267 = cast(%var_17390, dtype="bool") /* ty=Tensor[(3072), bool] */;
    %268 = cast(meta[relay.Constant][22] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %269 = cast(%var_17392, dtype="float64") /* ty=Tensor[(240), float64] */;
    %270 = cast(%var_17393, dtype="float64") /* ty=Tensor[(2400), float64] */;
    %271 = reshape(%266, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
    %272 = reshape(%267, newshape=[3072]) /* ty=Tensor[(3072), bool] */;
    %273 = reshape(%268, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %274 = reshape(%269, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %275 = reshape(%270, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
    %276 = @func_5904(%271, %272, %273, %274, %275) /* ty=(Tensor[(14, 13, 5), float32], Tensor[(16, 16, 12), bool], Tensor[(3072), bool], int64, Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(220, 1), uint64], Tensor[(140), float64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(240), float64], Tensor[(288, 1), float64], Tensor[(2400), float64]) */;
    %277 = @func_16686() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %278 = %276.4;
    %279 = %277.0;
    (%265, %278, %var_17390, meta[relay.Constant][22] /* ty=Tensor[(140), float64] */, %var_17392, %var_17393, %279)
  };
  %280(%var_17409, %var_17410, %var_17411, %var_17412, %var_17413) /* ty=(Tensor[(13, 10, 7), bool], Tensor[(6, 13, 13), bool], Tensor[(3072), bool], Tensor[(140), float64], Tensor[(240), float64], Tensor[(2400), float64], Tensor[(3, 2, 9), int16]) */
}

def @func_17574(%var_17573: Tensor[(104, 20), float32]) -> (Tensor[(16, 13, 5), float32], Tensor[(1040), float32], Tensor[(10, 2, 11), float32], Tensor[(16, 10, 13), float32], Tensor[(104, 20), float32]) {
  %292 = fn (%var_17565: Tensor[(104, 20), float32]) -> (Tensor[(16, 13, 5), float32], Tensor[(1040), float32], Tensor[(10, 2, 11), float32], Tensor[(16, 10, 13), float32], Tensor[(104, 20), float32]) {
    %281 = cast(meta[relay.Constant][23] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %282 = reshape(%281, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), float32] */;
    %283 = @func_16146() /* ty=(Tensor[(10, 2, 11), int16],) */;
    %284 = %283.0;
    %285 = cast(%284, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
    %286 = cast(%var_17565, dtype="float32") /* ty=Tensor[(104, 20), float32] */;
    %287 = reshape(%286, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), float32] */;
    %288 = @func_8650(%287) /* ty=(Tensor[(16, 10, 13), float32],) */;
    %289 = @func_10649(%282) /* ty=Tensor[(16, 13, 5), float32] */;
    %290 = cos(%285) /* ty=Tensor[(10, 2, 11), float32] */;
    %291 = %288.0;
    (%289, meta[relay.Constant][23] /* ty=Tensor[(1040), float32] */, %290, %291, %var_17565)
  };
  %292(%var_17573) /* ty=(Tensor[(16, 13, 5), float32], Tensor[(1040), float32], Tensor[(10, 2, 11), float32], Tensor[(16, 10, 13), float32], Tensor[(104, 20), float32]) */
}

def @func_15190() -> (Tensor[(3, 2, 9), int16],) {
  @func_15188() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_14527() -> (Tensor[(3, 2, 9), int16], Tensor[(4, 6, 4), float64], Tensor[(96), float64], Tensor[(560), int64], Tensor[(16, 15, 10), float64], Tensor[(2400), float64], int64) {
  %306 = fn () -> (Tensor[(3, 2, 9), int16], Tensor[(4, 6, 4), float64], Tensor[(96), float64], Tensor[(560), int64], Tensor[(16, 15, 10), float64], Tensor[(2400), float64], int64) {
    %293 = cast(meta[relay.Constant][24] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %294 = cast(meta[relay.Constant][25] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %295 = reshape(%293, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), float64] */;
    %296 = reshape(%294, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %297 = @func_9325(%295, %296) /* ty=(Tensor[(4, 6, 4), float64], Tensor[(14, 8, 5), int64], Tensor[(24, 12), float64], Tensor[(560), int64]) */;
    %298 = cast(meta[relay.Constant][26] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
    %299 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %300 = reshape(%298, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
    %301 = reshape(%299, newshape=[]) /* ty=int64 */;
    %302 = @func_8860(%300, %301) /* ty=(Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) */;
    %303 = @func_14284() /* ty=Tensor[(3, 2, 9), int16] */;
    %304 = %297.0;
    %305 = %302.0;
    (%303, %304, meta[relay.Constant][24] /* ty=Tensor[(96), float64] */, meta[relay.Constant][25] /* ty=Tensor[(560), int64] */, %305, meta[relay.Constant][26] /* ty=Tensor[(2400), float64] */, -8 /* ty=int64 */)
  };
  %306() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(4, 6, 4), float64], Tensor[(96), float64], Tensor[(560), int64], Tensor[(16, 15, 10), float64], Tensor[(2400), float64], int64) */
}

def @func_18410(%var_18409: Tensor[(390, 3), bool]) -> (Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(390, 3), bool]) {
  %313 = fn (%var_18373: Tensor[(390, 3), bool]) -> (Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(390, 3), bool]) {
    %307 = @func_17881() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %308 = cast(%var_18373, dtype="bool") /* ty=Tensor[(390, 3), bool] */;
    %309 = reshape(%308, newshape=[1170]) /* ty=Tensor[(1170), bool] */;
    %310 = @func_14930(%309) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(1248), int8], Tensor[(2288), uint8], Tensor[(420), uint8], Tensor[(1170), bool]) */;
    %311 = %307.0;
    %312 = %310.1;
    (%311, %312, %var_18373)
  };
  %313(%var_18409) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(390, 3), bool]) */
}

def @func_10751(%var_10749: uint32) -> (Tensor[(6, 13, 13), bool], Tensor[(13, 8, 1), uint64], Tensor[(1014), float64]) {
  @func_10748(%var_10749) /* ty=(Tensor[(6, 13, 13), bool], Tensor[(13, 8, 1), uint64], Tensor[(1014), float64]) */
}

def @func_14830() -> Tensor[(3, 2, 9), int16] {
  %314 = @func_14412() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */;
  %314.1
}

def @func_3081(%var_3079: Tensor[(288), float64], %var_3080: Tensor[(220, 1), uint64]) -> (Tensor[(9, 1, 6), int64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64]) {
  @func_3077(%var_3079, %var_3080) /* ty=(Tensor[(9, 1, 6), int64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64]) */
}

def @func_15069() -> Tensor[(3, 2, 9), int16] {
  @func_15067() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_15148(%var_15075: int64, %var_15077: Tensor[(560), int64]) -> (Tensor[(3, 2, 9), int16], Tensor[(9, 2, 16), float64], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(14, 5, 6), uint8], Tensor[(560), int64], Tensor[(2, 1200), float64], Tensor[(420, 7), float32], Tensor[(2288), uint8], Tensor[(1170), bool], Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(13, 11, 16), bool], Tensor[(16, 13, 5), float32], Tensor[(1040), float32]) {
  %315 = @func_14299() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %316 = cast(%var_15075, dtype="int64") /* ty=int64 */;
  %317 = cast(meta[relay.Constant][27] /* ty=Tensor[(28), int64] */, dtype="int64") /* ty=Tensor[(28), int64] */;
  %318 = cast(%var_15077, dtype="int64") /* ty=Tensor[(560), int64] */;
  %319 = reshape(%316, newshape=[]) /* ty=int64 */;
  %320 = reshape(%317, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), int64] */;
  %321 = reshape(%318, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %322 = @func_1326(%319, %320, %321) /* ty=(Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) */;
  %323 = cast(meta[relay.Constant][28] /* ty=Tensor[(420, 1), uint8] */, dtype="uint8") /* ty=Tensor[(420, 1), uint8] */;
  %324 = cast(meta[relay.Constant][28] /* ty=Tensor[(420, 1), uint8] */, dtype="uint8") /* ty=Tensor[(420, 1), uint8] */;
  %325 = reshape(%323, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %326 = reshape(%324, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %327 = @func_6629(%325, %326) /* ty=(Tensor[(14, 5, 6), uint8],) */;
  %328 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 1200), float64] */, dtype="float64") /* ty=Tensor[(2, 1200), float64] */;
  %329 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 1200), float64] */, dtype="float64") /* ty=Tensor[(2, 1200), float64] */;
  %330 = %322.2;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(9, 2, 16), float64] */;
  %332 = reshape(%328, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %333 = reshape(%329, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %334 = reshape(%331, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %335 = @func_2786(%332, %333, %334) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %336 = cast(meta[relay.Constant][28] /* ty=Tensor[(420, 1), uint8] */, dtype="float32") /* ty=Tensor[(420, 1), float32] */;
  %337 = cast(meta[relay.Constant][30] /* ty=Tensor[(420, 7), uint8] */, dtype="float32") /* ty=Tensor[(420, 7), float32] */;
  %338 = cast(meta[relay.Constant][31] /* ty=Tensor[(1170), bool] */, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %339 = reshape(%338, newshape=[1170]) /* ty=Tensor[(1170), bool] */;
  %340 = @func_14930(%339) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(1248), int8], Tensor[(2288), uint8], Tensor[(420), uint8], Tensor[(1170), bool]) */;
  %341 = cast(meta[relay.Constant][32] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %342 = cast(meta[relay.Constant][32] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %343 = reshape(%341, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %344 = reshape(%342, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %345 = cast(%var_15075, dtype="uint8") /* ty=uint8 */;
  %346 = %340.1;
  %347 = cast(%346, dtype="uint8") /* ty=Tensor[(2288), uint8] */;
  %348 = reshape(%345, newshape=[]) /* ty=uint8 */;
  %349 = reshape(%347, newshape=[13, 11, 16]) /* ty=Tensor[(13, 11, 16), uint8] */;
  %350 = @func_3382(%348, %349) /* ty=(Tensor[(13, 11, 16), bool],) */;
  %351 = cast(meta[relay.Constant][33] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %352 = reshape(%351, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), float32] */;
  %353 = %315.0;
  %354 = %327.0;
  %355 = %335.3;
  %356 = multiply(%336, %337) /* ty=Tensor[(420, 7), float32] */;
  %357 = @func_5009(%343, %344) /* ty=Tensor[(6, 13, 13), bool] */;
  %358 = %350.0;
  %359 = @func_10649(%352) /* ty=Tensor[(16, 13, 5), float32] */;
  (%353, %330, %var_15075, meta[relay.Constant][27] /* ty=Tensor[(28), int64] */, %var_15077, %354, %355, meta[relay.Constant][29] /* ty=Tensor[(2, 1200), float64] */, %356, %346, meta[relay.Constant][31] /* ty=Tensor[(1170), bool] */, %357, meta[relay.Constant][32] /* ty=Tensor[(1014), uint64] */, %358, %359, meta[relay.Constant][33] /* ty=Tensor[(1040), float32] */)
}

def @main() -> (Tensor[(3, 2, 9), int16], Tensor[(14, 8, 5), int16]) {
  %360 = @func_16624() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %361 = cast(meta[relay.Constant][34] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %362 = cast(meta[relay.Constant][34] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %363 = reshape(%361, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %364 = reshape(%362, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
  %365 = @func_797(%363, %364) /* ty=(Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) */;
  %366 = %365.1;
  %367 = cast(meta[relay.Constant][34] /* ty=Tensor[(560), int64] */, dtype="int16") /* ty=Tensor[(560), int16] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%366, dtype="int16") /* ty=Tensor[(14, 8, 5), int16] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %371 = %360.0;
  %372 = left_shift(%369, %370) /* ty=Tensor[(14, 8, 5), int16] */;
  (%371, %372)
}

def @func_2683(%var_2678: Tensor[(7, 16, 6), uint32], %var_2679: Tensor[(7, 16, 6), uint32], %var_2680: int64, %var_2681: Tensor[(28), int64], %var_2682: Tensor[(560), int64]) -> (Tensor[(7, 16, 6), bool], Tensor[(28), int64], Tensor[(560), int64], Tensor[(144, 2), bool]) {
  %389 = fn (%var_2641: Tensor[(7, 16, 6), uint32], %var_2642: Tensor[(7, 16, 6), uint32], %var_2663: int64, %var_2664: Tensor[(28), int64], %var_2665: Tensor[(560), int64]) -> (Tensor[(7, 16, 6), bool], Tensor[(28), int64], Tensor[(560), int64], Tensor[(144, 2), bool]) {
    %373 = cast(%var_2642, dtype="bool") /* ty=Tensor[(7, 16, 6), bool] */;
    %374 = shape_of(%var_2641, dtype="int32") /* ty=Tensor[(3), int32] */;
    %375 = cast(%var_2641, dtype="bool") /* ty=Tensor[(7, 16, 6), bool] */;
    %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %377 = cast(%var_2663, dtype="int64") /* ty=int64 */;
    %378 = cast(%var_2664, dtype="int64") /* ty=Tensor[(28), int64] */;
    %379 = cast(%var_2665, dtype="int64") /* ty=Tensor[(560), int64] */;
    %380 = reshape(%377, newshape=[]) /* ty=int64 */;
    %381 = reshape(%378, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), int64] */;
    %382 = reshape(%379, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %383 = @func_1326(%380, %381, %382) /* ty=(Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) */;
    %384 = %383.3;
    %385 = cast(%384, dtype="bool") /* ty=Tensor[(144, 2), bool] */;
    %386 = cast(%var_2663, dtype="bool") /* ty=bool */;
    %387 = less(%375, %376) /* ty=Tensor[(7, 16, 6), bool] */;
    %388 = less_equal(%385, %386) /* ty=Tensor[(144, 2), bool] */;
    (%387, %var_2664, %var_2665, %388)
  };
  %389(%var_2678, %var_2679, %var_2680, %var_2681, %var_2682) /* ty=(Tensor[(7, 16, 6), bool], Tensor[(28), int64], Tensor[(560), int64], Tensor[(144, 2), bool]) */
}

def @func_6629(%var_6624: Tensor[(14, 5, 6), uint8], %var_6625: Tensor[(14, 5, 6), uint8]) -> (Tensor[(14, 5, 6), uint8],) {
  %390 = cast(%var_6625, dtype="uint8") /* ty=Tensor[(14, 5, 6), uint8] */;
  %391 = shape_of(%var_6624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%var_6624, dtype="uint8") /* ty=Tensor[(14, 5, 6), uint8] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %394 = maximum(%392, %393) /* ty=Tensor[(14, 5, 6), uint8] */;
  (%394,)
}

def @func_15067() -> Tensor[(3, 2, 9), int16] {
  %395 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %395.0
}

def @func_797(%var_795: Tensor[(14, 8, 5), int64], %var_796: Tensor[(14, 8, 5), int64]) -> (Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) {
  %403 = fn (%var_787: Tensor[(14, 8, 5), int64], %var_788: Tensor[(14, 8, 5), int64]) -> (Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) {
    %396 = cast(%var_788, dtype="int64") /* ty=Tensor[(14, 8, 5), int64] */;
    %397 = shape_of(%var_787, dtype="int32") /* ty=Tensor[(3), int32] */;
    %398 = cast(%var_787, dtype="int64") /* ty=Tensor[(14, 8, 5), int64] */;
    %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %400 = cast(%var_788, dtype="float64") /* ty=Tensor[(14, 8, 5), float64] */;
    %401 = bitwise_and(%398, %399) /* ty=Tensor[(14, 8, 5), int64] */;
    %402 = atan(%400) /* ty=Tensor[(14, 8, 5), float64] */;
    (%401, %402)
  };
  %403(%var_795, %var_796) /* ty=(Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) */
}

def @func_4134(%var_4132: Tensor[(10, 2, 7), float64], %var_4133: Tensor[(560), int64]) -> (Tensor[(10, 2, 7), float64], Tensor[(672), uint32], Tensor[(3072, 1), bool], int64, Tensor[(220, 1), uint64], Tensor[(9, 2, 16), float64], Tensor[(28), int64], Tensor[(560), int64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64], Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), float64], Tensor[(672), uint32]) {
  %468 = fn (%var_4023: Tensor[(10, 2, 7), float64], %var_4047: Tensor[(560), int64]) -> (Tensor[(10, 2, 7), float64], Tensor[(672), uint32], Tensor[(3072, 1), bool], int64, Tensor[(220, 1), uint64], Tensor[(9, 2, 16), float64], Tensor[(28), int64], Tensor[(560), int64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64], Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), float64], Tensor[(672), uint32]) {
    %404 = cast(%var_4023, dtype="float64") /* ty=Tensor[(10, 2, 7), float64] */;
    %405 = cast(meta[relay.Constant][35] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
    %406 = cast(meta[relay.Constant][35] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
    %407 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %408 = reshape(%405, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
    %409 = reshape(%406, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
    %410 = reshape(%407, newshape=[]) /* ty=int64 */;
    %411 = @func_3844(%408, %409, %410) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */;
    %412 = cast(meta[relay.Constant][35] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
    %413 = cast(meta[relay.Constant][35] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
    %414 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %415 = reshape(%412, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
    %416 = reshape(%413, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
    %417 = reshape(%414, newshape=[]) /* ty=int64 */;
    %418 = @func_3844(%415, %416, %417) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */;
    %419 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %420 = cast(meta[relay.Constant][36] /* ty=Tensor[(28), int64] */, dtype="int64") /* ty=Tensor[(28), int64] */;
    %421 = cast(%var_4047, dtype="int64") /* ty=Tensor[(560), int64] */;
    %422 = reshape(%419, newshape=[]) /* ty=int64 */;
    %423 = reshape(%420, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), int64] */;
    %424 = reshape(%421, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %425 = @func_1326(%422, %423, %424) /* ty=(Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) */;
    %426 = cast(-1 /* ty=int64 */, dtype="uint8") /* ty=uint8 */;
    %427 = cast(meta[relay.Constant][37] /* ty=Tensor[(2288), uint8] */, dtype="uint8") /* ty=Tensor[(2288), uint8] */;
    %428 = reshape(%426, newshape=[]) /* ty=uint8 */;
    %429 = reshape(%427, newshape=[13, 11, 16]) /* ty=Tensor[(13, 11, 16), uint8] */;
    %430 = @func_3382(%428, %429) /* ty=(Tensor[(13, 11, 16), bool],) */;
    %431 = %425.2;
    %432 = cast(%431, dtype="float64") /* ty=Tensor[(9, 2, 16), float64] */;
    %433 = %418.2;
    %434 = cast(%433, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
    %435 = reshape(%432, newshape=[288]) /* ty=Tensor[(288), float64] */;
    %436 = reshape(%434, newshape=[220, 1]) /* ty=Tensor[(220, 1), uint64] */;
    %437 = @func_3077(%435, %436) /* ty=(Tensor[(9, 1, 6), int64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64]) */;
    %438 = cast(%433, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
    %439 = cast(%433, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
    %440 = reshape(%438, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
    %441 = reshape(%439, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
    %442 = @func_2054(%440, %441) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */;
    %443 = cast(%431, dtype="float64") /* ty=Tensor[(9, 2, 16), float64] */;
    %444 = cast(%var_4047, dtype="int64") /* ty=Tensor[(560), int64] */;
    %445 = reshape(%443, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
    %446 = reshape(%444, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %447 = @func_948(%445, %446) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
    %448 = cast(%var_4047, dtype="int64") /* ty=Tensor[(560), int64] */;
    %449 = cast(%var_4047, dtype="int64") /* ty=Tensor[(560), int64] */;
    %450 = reshape(%448, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
    %451 = reshape(%449, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
    %452 = @func_794(%450, %451) /* ty=(Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) */;
    %453 = cast(meta[relay.Constant][35] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
    %454 = cast(meta[relay.Constant][35] /* ty=Tensor[(3072, 1), bool] */, dtype="bool") /* ty=Tensor[(3072, 1), bool] */;
    %455 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %456 = reshape(%453, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
    %457 = reshape(%454, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
    %458 = reshape(%455, newshape=[]) /* ty=int64 */;
    %459 = @func_3844(%456, %457, %458) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */;
    %460 = acosh(%404) /* ty=Tensor[(10, 2, 7), float64] */;
    %461 = %411.8;
    %462 = %430.0;
    %463 = %437.4;
    %464 = %442.1;
    %465 = %447.0;
    %466 = %452.1;
    %467 = %459.8;
    (%460, %461, meta[relay.Constant][35] /* ty=Tensor[(3072, 1), bool] */, -1 /* ty=int64 */, %433, %431, meta[relay.Constant][36] /* ty=Tensor[(28), int64] */, %var_4047, %462, meta[relay.Constant][37] /* ty=Tensor[(2288), uint8] */, %463, %464, %465, %466, %467)
  };
  %468(%var_4132, %var_4133) /* ty=(Tensor[(10, 2, 7), float64], Tensor[(672), uint32], Tensor[(3072, 1), bool], int64, Tensor[(220, 1), uint64], Tensor[(9, 2, 16), float64], Tensor[(28), int64], Tensor[(560), int64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64], Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), float64], Tensor[(672), uint32]) */
}

def @func_16688() -> (Tensor[(3, 2, 9), int16],) {
  @func_16686() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_10649(%var_10644: Tensor[(16, 13, 5), float32]) -> Tensor[(16, 13, 5), float32] {
  %469 = cast(%var_10644, dtype="float32") /* ty=Tensor[(16, 13, 5), float32] */;
  %470 = asinh(%469) /* ty=Tensor[(16, 13, 5), float32] */;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(16, 13, 5), float32] */;
  erf(%471) /* ty=Tensor[(16, 13, 5), float32] */
}

def @func_18077() -> (Tensor[(3, 2, 9), int16],) {
  @func_18075() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_2529(%var_2519: Tensor[(10, 2, 9), uint8], %var_2520: Tensor[(10, 2, 9), uint8]) -> (Tensor[(10, 2, 9), uint8],) {
  %472 = cast(%var_2520, dtype="uint8") /* ty=Tensor[(10, 2, 9), uint8] */;
  %473 = shape_of(%var_2519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%var_2519, dtype="uint8") /* ty=Tensor[(10, 2, 9), uint8] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %476 = bitwise_xor(%474, %475) /* ty=Tensor[(10, 2, 9), uint8] */;
  (%476,)
}

def @func_16301() -> (Tensor[(220), uint64], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) {
  %485 = fn () -> (Tensor[(220), uint64], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) {
    %477 = @func_13909() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) */;
    %478 = cast(meta[relay.Constant][38] /* ty=Tensor[(520), uint8] */, dtype="uint8") /* ty=Tensor[(520), uint8] */;
    %479 = cast(meta[relay.Constant][38] /* ty=Tensor[(520), uint8] */, dtype="uint8") /* ty=Tensor[(520), uint8] */;
    %480 = reshape(%478, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), uint8] */;
    %481 = reshape(%479, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), uint8] */;
    %482 = @func_13402(%480, %481) /* ty=(Tensor[(8, 13, 5), bool],) */;
    %483 = %477.2;
    %484 = %482.0;
    (%483, %484, meta[relay.Constant][38] /* ty=Tensor[(520), uint8] */)
  };
  %485() /* ty=(Tensor[(220), uint64], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) */
}

def @func_15519() -> Tensor[(3, 2, 9), int16] {
  @func_15517() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_10417(%var_10415: float64, %var_10416: Tensor[(8, 1, 1), float64]) -> Tensor[(8, ?, ?), int32] {
  @func_10413(%var_10415, %var_10416) /* ty=Tensor[(8, ?, ?), int32] */
}

def @func_3386(%var_3384: uint8, %var_3385: Tensor[(13, 11, 16), uint8]) -> (Tensor[(13, 11, 16), bool],) {
  @func_3382(%var_3384, %var_3385) /* ty=(Tensor[(13, 11, 16), bool],) */
}

def @func_15306(%var_15304: Tensor[(3, 2, 9), int16]) -> (Tensor[(3, 2, 9), uint8], Tensor[(4, 6, 4), float64]) {
  @func_15303(%var_15304) /* ty=(Tensor[(3, 2, 9), uint8], Tensor[(4, 6, 4), float64]) */
}

def @func_18075() -> (Tensor[(3, 2, 9), int16],) {
  %486 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %487 = %486.0;
  (%487,)
}

def @func_16588() -> (Tensor[(8, 13, 5), bool], Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(13, 11, 6), float64], Tensor[(1, 858), float64]) {
  @func_16586() /* ty=(Tensor[(8, 13, 5), bool], Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(13, 11, 6), float64], Tensor[(1, 858), float64]) */
}

def @func_12990(%var_12989: Tensor[(16, 9, 13), float32]) -> (Tensor[(16, 9, 13), float32],) {
  %490 = fn (%var_12983: Tensor[(16, 9, 13), float32]) -> (Tensor[(16, 9, 13), float32],) {
    %488 = cast(%var_12983, dtype="float32") /* ty=Tensor[(16, 9, 13), float32] */;
    %489 = exp(%488) /* ty=Tensor[(16, 9, 13), float32] */;
    (%489,)
  };
  %490(%var_12989) /* ty=(Tensor[(16, 9, 13), float32],) */
}

def @func_17628(%var_17627: Tensor[(520), uint8]) -> (Tensor[(3, 2, 9), int16], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) {
  %498 = fn (%var_17624: Tensor[(520), uint8]) -> (Tensor[(3, 2, 9), int16], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) {
    %491 = cast(%var_17624, dtype="uint8") /* ty=Tensor[(520), uint8] */;
    %492 = cast(%var_17624, dtype="uint8") /* ty=Tensor[(520), uint8] */;
    %493 = reshape(%491, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), uint8] */;
    %494 = reshape(%492, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), uint8] */;
    %495 = @func_13402(%493, %494) /* ty=(Tensor[(8, 13, 5), bool],) */;
    %496 = @func_14175() /* ty=Tensor[(3, 2, 9), int16] */;
    %497 = %495.0;
    (%496, %497, %var_17624)
  };
  %498(%var_17627) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) */
}

def @func_13593(%var_13590: Tensor[(2400), float64], %var_13591: Tensor[(288), float64], %var_13592: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(288), float64], Tensor[(288, 1), float32], Tensor[(2400), float32]) {
  @func_13588(%var_13590, %var_13591, %var_13592) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(288), float64], Tensor[(288, 1), float32], Tensor[(2400), float32]) */
}

def @func_13854() -> Tensor[(3, 2, 9), int16] {
  %500 = fn () -> Tensor[(3, 2, 9), int16] {
    %499 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %499.0
  };
  %500() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_2058(%var_2056: Tensor[(10, 2, 11), uint64], %var_2057: Tensor[(10, 2, 11), uint64]) -> (Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) {
  @func_2054(%var_2056, %var_2057) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */
}

def @func_4680(%var_4662: float64, %var_4663: Tensor[(5, 3, 16), float64]) -> (Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) {
  %501 = cast(%var_4662, dtype="float64") /* ty=float64 */;
  %502 = cast(%var_4663, dtype="float64") /* ty=Tensor[(5, 3, 16), float64] */;
  %503 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 240), float64] */, dtype="float64") /* ty=Tensor[(10, 240), float64] */;
  %504 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 240), float64] */, dtype="float64") /* ty=Tensor[(10, 240), float64] */;
  %505 = cast(meta[relay.Constant][40] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %506 = reshape(%503, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %507 = reshape(%504, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %508 = reshape(%505, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %509 = @func_2786(%506, %507, %508) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %510 = divide(%501, %502) /* ty=Tensor[(5, 3, 16), float64] */;
  %511 = %509.0;
  (%510, %511, meta[relay.Constant][39] /* ty=Tensor[(10, 240), float64] */, meta[relay.Constant][40] /* ty=Tensor[(288), float64] */)
}

def @func_10413(%var_10369: float64, %var_10370: Tensor[(8, 1, 1), float64]) -> Tensor[(8, ?, ?), int32] {
  %512 = cast(%var_10369, dtype="float64") /* ty=float64 */;
  %513 = cast(%var_10370, dtype="float64") /* ty=Tensor[(8, 1, 1), float64] */;
  %514 = floor_divide(%512, %513) /* ty=Tensor[(8, 1, 1), float64] */;
  %515 = cast(%514, dtype="float64") /* ty=Tensor[(8, 1, 1), float64] */;
  %516 = log2(%515) /* ty=Tensor[(8, 1, 1), float64] */;
  %517 = cast(%514, dtype="bool") /* ty=Tensor[(8, 1, 1), bool] */;
  %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%516, dtype="bool") /* ty=Tensor[(8, 1, 1), bool] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %521 = not_equal(%519, %520) /* ty=Tensor[(8, ?, ?), bool] */;
  %522 = cast(%521, dtype="int32") /* ty=Tensor[(8, ?, ?), int32] */;
  %523 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%516, dtype="int32") /* ty=Tensor[(8, 1, 1), int32] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%524, %525) /* ty=Tensor[(8, ?, ?), int32] */
}

def @func_16035(%var_16033: Tensor[(72, 4), float64], %var_16034: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(9, 5, 2), int8], int8, Tensor[(858), float64], Tensor[(72, 4), float64], Tensor[(2400), float64], Tensor[(16, 10, 13), float32], Tensor[(2080), float32]) {
  %542 = fn (%var_16016: Tensor[(72, 4), float64], %var_16017: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(9, 5, 2), int8], int8, Tensor[(858), float64], Tensor[(72, 4), float64], Tensor[(2400), float64], Tensor[(16, 10, 13), float32], Tensor[(2080), float32]) {
    %526 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %527 = cast(meta[relay.Constant][41] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %528 = cast(meta[relay.Constant][42] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
    %529 = cast(%var_16016, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
    %530 = cast(%var_16017, dtype="float64") /* ty=Tensor[(2400), float64] */;
    %531 = reshape(%527, newshape=[]) /* ty=int8 */;
    %532 = reshape(%528, newshape=[858]) /* ty=Tensor[(858), float64] */;
    %533 = reshape(%529, newshape=[2, 144]) /* ty=Tensor[(2, 144), float64] */;
    %534 = reshape(%530, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
    %535 = @func_15021(%531, %532, %533, %534) /* ty=(Tensor[(9, 5, 2), int8], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(2, 144), float64], Tensor[(560), int64], Tensor[(2400), float64]) */;
    %536 = cast(meta[relay.Constant][43] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
    %537 = reshape(%536, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), float32] */;
    %538 = @func_8650(%537) /* ty=(Tensor[(16, 10, 13), float32],) */;
    %539 = %526.0;
    %540 = %535.0;
    %541 = %538.0;
    (%539, %540, meta[relay.Constant][41] /* ty=int8 */, meta[relay.Constant][42] /* ty=Tensor[(858), float64] */, %var_16016, %var_16017, %541, meta[relay.Constant][43] /* ty=Tensor[(2080), float32] */)
  };
  %542(%var_16033, %var_16034) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(9, 5, 2), int8], int8, Tensor[(858), float64], Tensor[(72, 4), float64], Tensor[(2400), float64], Tensor[(16, 10, 13), float32], Tensor[(2080), float32]) */
}

def @func_17969(%var_17898: Tensor[(3072), bool], %var_17920: Tensor[(1, 231), float64], %var_17922: Tensor[(288), float64], %var_17948: Tensor[(2, 231), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(455, 2), float32], Tensor[(910), float32], Tensor[(3072), bool], Tensor[(2400), float64], Tensor[(10, 2, 11), int16], int64, int64, Tensor[(288), float64], Tensor[(429, 2), int8], Tensor[(858), float64], Tensor[(3, 2, 9), int16], Tensor[(2, 231), bool]) {
  %543 = @func_15612() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %544 = cast(meta[relay.Constant][44] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %545 = cast(%var_17898, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %546 = cast(meta[relay.Constant][45] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %547 = reshape(%544, newshape=[455, 2]) /* ty=Tensor[(455, 2), float32] */;
  %548 = reshape(%545, newshape=[3072]) /* ty=Tensor[(3072), bool] */;
  %549 = reshape(%546, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %550 = @func_16348(%547, %548, %549) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(14, 13, 5), float32], Tensor[(455, 2), float32], Tensor[(3072), bool], Tensor[(140), float64], Tensor[(8, 30), float64], Tensor[(2400), float64]) */;
  %551 = @func_16146() /* ty=(Tensor[(10, 2, 11), int16],) */;
  %552 = cast(%var_17920, dtype="float64") /* ty=Tensor[(1, 231), float64] */;
  %553 = cast(%var_17920, dtype="float64") /* ty=Tensor[(1, 231), float64] */;
  %554 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %555 = cast(%var_17922, dtype="float64") /* ty=Tensor[(288), float64] */;
  %556 = reshape(%552, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %557 = reshape(%553, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %558 = reshape(%554, newshape=[]) /* ty=int64 */;
  %559 = reshape(%555, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %560 = @func_12890(%556, %557, %558, %559) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) */;
  %561 = cast(-7 /* ty=int64 */, dtype="int8") /* ty=int8 */;
  %562 = cast(meta[relay.Constant][46] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %563 = cast(meta[relay.Constant][45] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %564 = reshape(%561, newshape=[]) /* ty=int8 */;
  %565 = reshape(%562, newshape=[429, 2]) /* ty=Tensor[(429, 2), float64] */;
  %566 = reshape(%563, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %567 = @func_16872(%564, %565, %566) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(7, 3, 11), float64], Tensor[(288), float64], Tensor[(2400), float64], Tensor[(429, 2), int8], Tensor[(3, 2, 9), int16]) */;
  %568 = @func_15612() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %569 = cast(%var_17920, dtype="int32") /* ty=Tensor[(1, 231), int32] */;
  %570 = cast(%var_17948, dtype="int32") /* ty=Tensor[(2, 231), int32] */;
  %571 = bitwise_xor(%569, %570) /* ty=Tensor[(2, 231), int32] */;
  %572 = cast(%571, dtype="bool") /* ty=Tensor[(2, 231), bool] */;
  %573 = shape_of(%var_17948, dtype="int32") /* ty=Tensor[(2), int32] */;
  %574 = cast(%var_17948, dtype="bool") /* ty=Tensor[(2, 231), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %576 = %543.0;
  %577 = %550.2;
  %578 = %551.0;
  %579 = %560.5;
  %580 = %567.4;
  %581 = %568.0;
  %582 = logical_or(%574, %575) /* ty=Tensor[(2, 231), bool] */;
  (%576, %577, meta[relay.Constant][44] /* ty=Tensor[(910), float32] */, %var_17898, meta[relay.Constant][45] /* ty=Tensor[(2400), float64] */, %578, %579, -7 /* ty=int64 */, %var_17922, %580, meta[relay.Constant][46] /* ty=Tensor[(858), float64] */, %581, %582)
}

def @func_15517() -> Tensor[(3, 2, 9), int16] {
  @func_13853() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_16722(%var_16720: Tensor[(288), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(768), float32], Tensor[(231), float64], int64, Tensor[(288), float64]) {
  @func_16719(%var_16720) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(768), float32], Tensor[(231), float64], int64, Tensor[(288), float64]) */
}

def @func_9485(%var_9483: Tensor[(2, 8, 9), float64], %var_9484: Tensor[(2400), float64]) -> (Tensor[(2, 8, 9), float64], Tensor[(14, 8, 5), int64], Tensor[(2400), float64], Tensor[(288), float64], Tensor[(14, 8, 5), int64], Tensor[(5, 3, 16), float64], float64, Tensor[(240, 1), float64]) {
  @func_9481(%var_9483, %var_9484) /* ty=(Tensor[(2, 8, 9), float64], Tensor[(14, 8, 5), int64], Tensor[(2400), float64], Tensor[(288), float64], Tensor[(14, 8, 5), int64], Tensor[(5, 3, 16), float64], float64, Tensor[(240, 1), float64]) */
}

def @func_6633(%var_6631: Tensor[(14, 5, 6), uint8], %var_6632: Tensor[(14, 5, 6), uint8]) -> (Tensor[(14, 5, 6), uint8],) {
  @func_6629(%var_6631, %var_6632) /* ty=(Tensor[(14, 5, 6), uint8],) */
}

def @func_16622() -> (Tensor[(3, 2, 9), int16],) {
  %583 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %584 = %583.0;
  (%584,)
}

def @func_17458() -> Tensor[(3, 2, 9), int16] {
  %585 = fn () -> Tensor[(3, 2, 9), int16] {
    @func_17293() /* ty=Tensor[(3, 2, 9), int16] */
  };
  %585() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_16586() -> (Tensor[(8, 13, 5), bool], Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(13, 11, 6), float64], Tensor[(1, 858), float64]) {
  %586 = @func_16300() /* ty=(Tensor[(220), uint64], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) */;
  %587 = @func_16146() /* ty=(Tensor[(10, 2, 11), int16],) */;
  %588 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 858), float64] */, dtype="float64") /* ty=Tensor[(1, 858), float64] */;
  %589 = reshape(%588, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %590 = @func_5655(%589) /* ty=(Tensor[(13, 11, 6), float64],) */;
  %591 = %586.1;
  %592 = @func_15839() /* ty=Tensor[(3, 2, 9), int16] */;
  %593 = %587.0;
  %594 = @func_15517() /* ty=Tensor[(3, 2, 9), int16] */;
  %595 = @func_14830() /* ty=Tensor[(3, 2, 9), int16] */;
  %596 = %590.0;
  (%591, %592, %593, %594, %595, %596, meta[relay.Constant][47] /* ty=Tensor[(1, 858), float64] */)
}

def @func_8650(%var_8635: Tensor[(16, 10, 13), float32]) -> (Tensor[(16, 10, 13), float32],) {
  %597 = cast(%var_8635, dtype="float32") /* ty=Tensor[(16, 10, 13), float32] */;
  %598 = sigmoid(%597) /* ty=Tensor[(16, 10, 13), float32] */;
  (%598,)
}

def @func_18234() -> (Tensor[(3, 2, 9), int16], Tensor[(2400), float64], Tensor[(3, 2, 9), int16], Tensor[(288), float64], Tensor[(11, 21), float64], int64, Tensor[(4, 72), float64]) {
  %615 = fn () -> (Tensor[(3, 2, 9), int16], Tensor[(2400), float64], Tensor[(3, 2, 9), int16], Tensor[(288), float64], Tensor[(11, 21), float64], int64, Tensor[(4, 72), float64]) {
    %599 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %600 = @func_14526() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(4, 6, 4), float64], Tensor[(96), float64], Tensor[(560), int64], Tensor[(16, 15, 10), float64], Tensor[(2400), float64], int64) */;
    %601 = @func_14412() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */;
    %602 = cast(meta[relay.Constant][48] /* ty=Tensor[(11, 21), float64] */, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
    %603 = cast(meta[relay.Constant][48] /* ty=Tensor[(11, 21), float64] */, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
    %604 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %605 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 72), float64] */, dtype="float64") /* ty=Tensor[(4, 72), float64] */;
    %606 = reshape(%602, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
    %607 = reshape(%603, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
    %608 = reshape(%604, newshape=[]) /* ty=int64 */;
    %609 = reshape(%605, newshape=[288]) /* ty=Tensor[(288), float64] */;
    %610 = @func_12890(%606, %607, %608, %609) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) */;
    %611 = %599.0;
    %612 = %600.5;
    %613 = %601.1;
    %614 = %610.6;
    (%611, %612, %613, %614, meta[relay.Constant][48] /* ty=Tensor[(11, 21), float64] */, -7 /* ty=int64 */, meta[relay.Constant][49] /* ty=Tensor[(4, 72), float64] */)
  };
  %615() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(2400), float64], Tensor[(3, 2, 9), int16], Tensor[(288), float64], Tensor[(11, 21), float64], int64, Tensor[(4, 72), float64]) */
}

def @func_16352(%var_16349: Tensor[(455, 2), float32], %var_16350: Tensor[(3072), bool], %var_16351: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(14, 13, 5), float32], Tensor[(455, 2), float32], Tensor[(3072), bool], Tensor[(140), float64], Tensor[(8, 30), float64], Tensor[(2400), float64]) {
  %630 = fn (%var_16326: Tensor[(455, 2), float32], %var_16327: Tensor[(3072), bool], %var_16330: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(14, 13, 5), float32], Tensor[(455, 2), float32], Tensor[(3072), bool], Tensor[(140), float64], Tensor[(8, 30), float64], Tensor[(2400), float64]) {
    %616 = @func_14759() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %617 = cast(%var_16326, dtype="float32") /* ty=Tensor[(455, 2), float32] */;
    %618 = cast(%var_16327, dtype="bool") /* ty=Tensor[(3072), bool] */;
    %619 = cast(meta[relay.Constant][50] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %620 = cast(meta[relay.Constant][51] /* ty=Tensor[(8, 30), float64] */, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
    %621 = cast(%var_16330, dtype="float64") /* ty=Tensor[(2400), float64] */;
    %622 = reshape(%617, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
    %623 = reshape(%618, newshape=[3072]) /* ty=Tensor[(3072), bool] */;
    %624 = reshape(%619, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %625 = reshape(%620, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %626 = reshape(%621, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
    %627 = @func_5904(%622, %623, %624, %625, %626) /* ty=(Tensor[(14, 13, 5), float32], Tensor[(16, 16, 12), bool], Tensor[(3072), bool], int64, Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(220, 1), uint64], Tensor[(140), float64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(240), float64], Tensor[(288, 1), float64], Tensor[(2400), float64]) */;
    %628 = %616.0;
    %629 = %627.0;
    (%628, %629, %var_16326, %var_16327, meta[relay.Constant][50] /* ty=Tensor[(140), float64] */, meta[relay.Constant][51] /* ty=Tensor[(8, 30), float64] */, %var_16330)
  };
  %630(%var_16349, %var_16350, %var_16351) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(14, 13, 5), float32], Tensor[(455, 2), float32], Tensor[(3072), bool], Tensor[(140), float64], Tensor[(8, 30), float64], Tensor[(2400), float64]) */
}

def @func_17380(%var_17378: Tensor[(1, 9, 7), float32]) -> Tensor[(1, 9, 7), float32] {
  @func_17377(%var_17378) /* ty=Tensor[(1, 9, 7), float32] */
}

def @func_16661(%var_16657: Tensor[(7, 2, 14), float32], %var_16658: int8, %var_16659: Tensor[(858), float64], %var_16660: Tensor[(288), float64]) -> (Tensor[(7, 2, 14), float32], Tensor[(560), int64], int8, Tensor[(858), float64], Tensor[(288), float64], Tensor[(2400, 1), float64]) {
  %643 = fn (%var_16646: Tensor[(7, 2, 14), float32], %var_16651: int8, %var_16652: Tensor[(858), float64], %var_16653: Tensor[(288), float64]) -> (Tensor[(7, 2, 14), float32], Tensor[(560), int64], int8, Tensor[(858), float64], Tensor[(288), float64], Tensor[(2400, 1), float64]) {
    %631 = cast(%var_16646, dtype="float32") /* ty=Tensor[(7, 2, 14), float32] */;
    %632 = cast(%var_16651, dtype="int8") /* ty=int8 */;
    %633 = cast(%var_16652, dtype="float64") /* ty=Tensor[(858), float64] */;
    %634 = cast(%var_16653, dtype="float64") /* ty=Tensor[(288), float64] */;
    %635 = cast(meta[relay.Constant][52] /* ty=Tensor[(2400, 1), float64] */, dtype="float64") /* ty=Tensor[(2400, 1), float64] */;
    %636 = reshape(%632, newshape=[]) /* ty=int8 */;
    %637 = reshape(%633, newshape=[858]) /* ty=Tensor[(858), float64] */;
    %638 = reshape(%634, newshape=[2, 144]) /* ty=Tensor[(2, 144), float64] */;
    %639 = reshape(%635, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
    %640 = @func_15021(%636, %637, %638, %639) /* ty=(Tensor[(9, 5, 2), int8], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(2, 144), float64], Tensor[(560), int64], Tensor[(2400), float64]) */;
    %641 = acosh(%631) /* ty=Tensor[(7, 2, 14), float32] */;
    %642 = %640.6;
    (%641, %642, %var_16651, %var_16652, %var_16653, meta[relay.Constant][52] /* ty=Tensor[(2400, 1), float64] */)
  };
  %643(%var_16657, %var_16658, %var_16659, %var_16660) /* ty=(Tensor[(7, 2, 14), float32], Tensor[(560), int64], int8, Tensor[(858), float64], Tensor[(288), float64], Tensor[(2400, 1), float64]) */
}

def @func_13889(%var_13887: Tensor[(140), float64], %var_13888: Tensor[(560), int64]) -> (Tensor[(3, 2, 9), float32], Tensor[(2288), uint8], Tensor[(140), float64], Tensor[(560), int64]) {
  @func_13885(%var_13887, %var_13888) /* ty=(Tensor[(3, 2, 9), float32], Tensor[(2288), uint8], Tensor[(140), float64], Tensor[(560), int64]) */
}

def @func_15303(%var_15274: Tensor[(3, 2, 9), int16]) -> (Tensor[(3, 2, 9), uint8], Tensor[(4, 6, 4), float64]) {
  %644 = @func_15067() /* ty=Tensor[(3, 2, 9), int16] */;
  %645 = cast(%var_15274, dtype="uint8") /* ty=Tensor[(3, 2, 9), uint8] */;
  %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%644, dtype="uint8") /* ty=Tensor[(3, 2, 9), uint8] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %649 = @func_14526() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(4, 6, 4), float64], Tensor[(96), float64], Tensor[(560), int64], Tensor[(16, 15, 10), float64], Tensor[(2400), float64], int64) */;
  %650 = %649.1;
  %651 = cast(%650, dtype="float64") /* ty=Tensor[(4, 6, 4), float64] */;
  %652 = minimum(%647, %648) /* ty=Tensor[(3, 2, 9), uint8] */;
  %653 = erf(%651) /* ty=Tensor[(4, 6, 4), float64] */;
  (%652, %653)
}

def @func_15841() -> Tensor[(3, 2, 9), int16] {
  @func_15839() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_17310() -> (Tensor[(3, 2, 9), int16],) {
  %654 = @func_14759() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %655 = %654.0;
  (%655,)
}

def @func_16394() -> (Tensor[(14, 13, 9), float32], Tensor[(14, 13, 9), float32]) {
  %656 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 13, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 13, 9), float32] */;
  %657 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 13, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 13, 9), float32] */;
  %658 = sinh(%656) /* ty=Tensor[(14, 13, 9), float32] */;
  %659 = cosh(%657) /* ty=Tensor[(14, 13, 9), float32] */;
  (%658, %659)
}

def @func_17247(%var_17229: Tensor[(1, 144), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(2400), float64], float64, Tensor[(1, 144), float64]) {
  %660 = @func_13909() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) */;
  %661 = cast(5.23301f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %662 = cast(%var_17229, dtype="float64") /* ty=Tensor[(1, 144), float64] */;
  %663 = reshape(%661, newshape=[]) /* ty=float64 */;
  %664 = reshape(%662, newshape=[72, 2]) /* ty=Tensor[(72, 2), float64] */;
  %665 = @func_14718(%663, %664) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], float64, Tensor[(72, 2), float64], Tensor[(3, 2, 9), int16], Tensor[(2400), float64], Tensor[(2400), float64]) */;
  %666 = %660.0;
  %667 = %665.6;
  (%666, %667, 5.23301f64 /* ty=float64 */, %var_17229)
}

def @func_17377(%var_17369: Tensor[(1, 9, 7), float32]) -> Tensor[(1, 9, 7), float32] {
  %668 = cast(%var_17369, dtype="float32") /* ty=Tensor[(1, 9, 7), float32] */;
  cosh(%668) /* ty=Tensor[(1, 9, 7), float32] */
}

def @func_16877(%var_16874: int8, %var_16875: Tensor[(429, 2), float64], %var_16876: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(7, 3, 11), float64], Tensor[(288), float64], Tensor[(2400), float64], Tensor[(429, 2), int8], Tensor[(3, 2, 9), int16]) {
  @func_16872(%var_16874, %var_16875, %var_16876) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(7, 3, 11), float64], Tensor[(288), float64], Tensor[(2400), float64], Tensor[(429, 2), int8], Tensor[(3, 2, 9), int16]) */
}

def @func_16078(%var_16076: Tensor[(1, 220), uint64]) -> (Tensor[(3, 2, 9), int16], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(10, 2, 11), float64], Tensor[(1, 220), uint64]) {
  @func_16075(%var_16076) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(10, 2, 11), float64], Tensor[(1, 220), uint64]) */
}

def @func_18114() -> (Tensor[(8, 13, 5), bool],) {
  %671 = fn () -> (Tensor[(8, 13, 5), bool],) {
    %669 = @func_16586() /* ty=(Tensor[(8, 13, 5), bool], Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(13, 11, 6), float64], Tensor[(1, 858), float64]) */;
    %670 = %669.0;
    (%670,)
  };
  %671() /* ty=(Tensor[(8, 13, 5), bool],) */
}

def @func_18280(%var_18278: Tensor[(520), uint8]) -> (Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16], Tensor[(520), uint8]) {
  @func_18277(%var_18278) /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16], Tensor[(520), uint8]) */
}

def @func_14930(%var_14912: Tensor[(1170), bool]) -> (Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(1248), int8], Tensor[(2288), uint8], Tensor[(420), uint8], Tensor[(1170), bool]) {
  %672 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %673 = cast(meta[relay.Constant][54] /* ty=Tensor[(1248), int8] */, dtype="int8") /* ty=Tensor[(1248), int8] */;
  %674 = cast(meta[relay.Constant][55] /* ty=Tensor[(2288), uint8] */, dtype="uint8") /* ty=Tensor[(2288), uint8] */;
  %675 = cast(meta[relay.Constant][56] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %676 = cast(%var_14912, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %677 = reshape(%673, newshape=[8, 12, 13]) /* ty=Tensor[(8, 12, 13), int8] */;
  %678 = reshape(%674, newshape=[2288]) /* ty=Tensor[(2288), uint8] */;
  %679 = reshape(%675, newshape=[10, 42]) /* ty=Tensor[(10, 42), uint8] */;
  %680 = reshape(%676, newshape=[10, 117]) /* ty=Tensor[(10, 117), bool] */;
  %681 = @func_11719(%677, %678, %679, %680) /* ty=(Tensor[(8, 12, 13), bool], Tensor[(2, 336), uint32], Tensor[(1155), float64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 117), float64], Tensor[(16, 10, 13), float32], Tensor[(1040, 2), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(220), uint64], Tensor[(8, ?, ?), int32], Tensor[(8), float64], Tensor[(8, ?, ?), int32], Tensor[(14, 5, 6), uint8], Tensor[(10, 42), uint8], Tensor[(10, 117), uint16]) */;
  %682 = %672.0;
  %683 = %681.4;
  (%682, %683, meta[relay.Constant][54] /* ty=Tensor[(1248), int8] */, meta[relay.Constant][55] /* ty=Tensor[(2288), uint8] */, meta[relay.Constant][56] /* ty=Tensor[(420), uint8] */, %var_14912)
}

def @func_17995() -> Tensor[(3, 2, 9), int16] {
  @func_17993() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_16719(%var_16710: Tensor[(288), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(768), float32], Tensor[(231), float64], int64, Tensor[(288), float64]) {
  %684 = cast(meta[relay.Constant][57] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %685 = cast(meta[relay.Constant][57] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %686 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %687 = cast(%var_16710, dtype="float64") /* ty=Tensor[(288), float64] */;
  %688 = reshape(%684, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %689 = reshape(%685, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %690 = reshape(%686, newshape=[]) /* ty=int64 */;
  %691 = reshape(%687, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %692 = @func_12890(%688, %689, %690, %691) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) */;
  %693 = @func_14830() /* ty=Tensor[(3, 2, 9), int16] */;
  %694 = %692.7;
  (%693, %694, meta[relay.Constant][57] /* ty=Tensor[(231), float64] */, 8 /* ty=int64 */, %var_16710)
}

def @func_18277(%var_18255: Tensor[(520), uint8]) -> (Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16], Tensor[(520), uint8]) {
  %695 = @func_16146() /* ty=(Tensor[(10, 2, 11), int16],) */;
  %696 = cast(%var_18255, dtype="uint8") /* ty=Tensor[(520), uint8] */;
  %697 = reshape(%696, newshape=[520]) /* ty=Tensor[(520), uint8] */;
  %698 = @func_17626(%697) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(8, 13, 5), bool], Tensor[(520), uint8]) */;
  %699 = %695.0;
  %700 = %698.0;
  (%699, %700, %var_18255)
}

def @func_1330(%var_1327: int64, %var_1328: Tensor[(7, 1, 4), int64], %var_1329: Tensor[(560), int64]) -> (Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) {
  %713 = fn (%var_1301: int64, %var_1302: Tensor[(7, 1, 4), int64], %var_1323: Tensor[(560), int64]) -> (Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) {
    %701 = cast(%var_1301, dtype="int64") /* ty=int64 */;
    %702 = cast(%var_1302, dtype="int64") /* ty=Tensor[(7, 1, 4), int64] */;
    %703 = cast(%var_1302, dtype="float32") /* ty=Tensor[(7, 1, 4), float32] */;
    %704 = cast(%var_1301, dtype="float32") /* ty=float32 */;
    %705 = cast(meta[relay.Constant][58] /* ty=Tensor[(144, 2), float64] */, dtype="float64") /* ty=Tensor[(144, 2), float64] */;
    %706 = cast(%var_1323, dtype="int64") /* ty=Tensor[(560), int64] */;
    %707 = reshape(%705, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
    %708 = reshape(%706, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %709 = @func_948(%707, %708) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
    %710 = right_shift(%701, %702) /* ty=Tensor[(7, 1, 4), int64] */;
    %711 = power(%703, %704) /* ty=Tensor[(7, 1, 4), float32] */;
    %712 = %709.0;
    (%710, %711, %712, meta[relay.Constant][58] /* ty=Tensor[(144, 2), float64] */, %var_1323)
  };
  %713(%var_1327, %var_1328, %var_1329) /* ty=(Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) */
}

def @func_17812() -> (Tensor[(3, 2, 9), int16],) {
  %716 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %714 = @func_17191() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %715 = %714.0;
    (%715,)
  };
  %716() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_5911(%var_5906: Tensor[(14, 13, 5), float32], %var_5907: Tensor[(3072), bool], %var_5908: Tensor[(140), float64], %var_5909: Tensor[(240), float64], %var_5910: Tensor[(2400), float64]) -> (Tensor[(14, 13, 5), float32], Tensor[(16, 16, 12), bool], Tensor[(3072), bool], int64, Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(220, 1), uint64], Tensor[(140), float64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(240), float64], Tensor[(288, 1), float64], Tensor[(2400), float64]) {
  @func_5904(%var_5906, %var_5907, %var_5908, %var_5909, %var_5910) /* ty=(Tensor[(14, 13, 5), float32], Tensor[(16, 16, 12), bool], Tensor[(3072), bool], int64, Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(220, 1), uint64], Tensor[(140), float64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(240), float64], Tensor[(288, 1), float64], Tensor[(2400), float64]) */
}

def @func_9656(%var_9653: Tensor[(13, 10, 9), float32]) -> (Tensor[(13, 10, 9), float32],) {
  %717 = cast(%var_9653, dtype="float32") /* ty=Tensor[(13, 10, 9), float32] */;
  %718 = cos(%717) /* ty=Tensor[(13, 10, 9), float32] */;
  (%718,)
}

def @func_13588(%var_13566: Tensor[(2400), float64], %var_13567: Tensor[(288), float64], %var_13583: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(288), float64], Tensor[(288, 1), float32], Tensor[(2400), float32]) {
  %719 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %720 = cast(%var_13566, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %721 = cast(%var_13566, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %722 = cast(%var_13567, dtype="float64") /* ty=Tensor[(288), float64] */;
  %723 = reshape(%720, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %724 = reshape(%721, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %725 = reshape(%722, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %726 = @func_2786(%723, %724, %725) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %727 = %726.2;
  %728 = cast(%727, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %729 = cast(%var_13583, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %730 = shape_of(%var_13566, dtype="int32") /* ty=Tensor[(1), int32] */;
  %731 = cast(%var_13566, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?), float32] */;
  %733 = %719.0;
  %734 = tan(%728) /* ty=Tensor[(288, 1), float32] */;
  %735 = floor_mod(%731, %732) /* ty=Tensor[(2400), float32] */;
  (%733, %var_13567, %734, %735)
}

def @func_16624() -> (Tensor[(3, 2, 9), int16],) {
  @func_16622() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_13402(%var_13372: Tensor[(8, 13, 5), uint8], %var_13373: Tensor[(8, 13, 5), uint8]) -> (Tensor[(8, 13, 5), bool],) {
  %736 = cast(%var_13373, dtype="bool") /* ty=Tensor[(8, 13, 5), bool] */;
  %737 = shape_of(%var_13372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_13372, dtype="bool") /* ty=Tensor[(8, 13, 5), bool] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %740 = equal(%738, %739) /* ty=Tensor[(8, 13, 5), bool] */;
  (%740,)
}

def @func_15565(%var_15564: Tensor[(300, 8), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(144), float64], Tensor[(300, 8), float64], Tensor[(300, 8), int32], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16]) {
  %761 = fn (%var_15534: Tensor[(300, 8), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(144), float64], Tensor[(300, 8), float64], Tensor[(300, 8), int32], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16]) {
    %741 = @func_15188() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %742 = cast(%var_15534, dtype="float64") /* ty=Tensor[(300, 8), float64] */;
    %743 = reshape(%742, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
    %744 = @func_9561(%743) /* ty=(Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) */;
    %745 = cast(%var_15534, dtype="float64") /* ty=Tensor[(300, 8), float64] */;
    %746 = acos(%745) /* ty=Tensor[(300, 8), float64] */;
    %747 = cast(%746, dtype="float64") /* ty=Tensor[(300, 8), float64] */;
    %748 = cast(%746, dtype="float64") /* ty=Tensor[(300, 8), float64] */;
    %749 = log2(%748) /* ty=Tensor[(300, 8), float64] */;
    %750 = cast(%var_15534, dtype="int32") /* ty=Tensor[(300, 8), int32] */;
    %751 = shape_of(%749, dtype="int32") /* ty=Tensor[(2), int32] */;
    %752 = cast(%749, dtype="int32") /* ty=Tensor[(300, 8), int32] */;
    %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %754 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %755 = %741.0;
    %756 = %744.2;
    %757 = exp(%747) /* ty=Tensor[(300, 8), float64] */;
    %758 = maximum(%752, %753) /* ty=Tensor[(300, 8), int32] */;
    %759 = @func_15067() /* ty=Tensor[(3, 2, 9), int16] */;
    %760 = %754.0;
    (%755, %756, %757, %758, %759, %760)
  };
  %761(%var_15564) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(144), float64], Tensor[(300, 8), float64], Tensor[(300, 8), int32], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16]) */
}

def @func_13885(%var_13868: Tensor[(140), float64], %var_13869: Tensor[(560), int64]) -> (Tensor[(3, 2, 9), float32], Tensor[(2288), uint8], Tensor[(140), float64], Tensor[(560), int64]) {
  %762 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %763 = %762.0;
  %764 = cast(%763, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
  %765 = cast(%var_13868, dtype="float64") /* ty=Tensor[(140), float64] */;
  %766 = cast(%var_13869, dtype="int64") /* ty=Tensor[(560), int64] */;
  %767 = reshape(%765, newshape=[10, 2, 7]) /* ty=Tensor[(10, 2, 7), float64] */;
  %768 = reshape(%766, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %769 = @func_4131(%767, %768) /* ty=(Tensor[(10, 2, 7), float64], Tensor[(672), uint32], Tensor[(3072, 1), bool], int64, Tensor[(220, 1), uint64], Tensor[(9, 2, 16), float64], Tensor[(28), int64], Tensor[(560), int64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64], Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), float64], Tensor[(672), uint32]) */;
  %770 = acosh(%764) /* ty=Tensor[(3, 2, 9), float32] */;
  %771 = %769.9;
  (%770, %771, %var_13868, %var_13869)
}

def @func_16396() -> (Tensor[(14, 13, 9), float32], Tensor[(14, 13, 9), float32]) {
  @func_16394() /* ty=(Tensor[(14, 13, 9), float32], Tensor[(14, 13, 9), float32]) */
}

def @func_14933(%var_14931: Tensor[(1170), bool]) -> (Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(1248), int8], Tensor[(2288), uint8], Tensor[(420), uint8], Tensor[(1170), bool]) {
  @func_14930(%var_14931) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(2288), uint8], Tensor[(1248), int8], Tensor[(2288), uint8], Tensor[(420), uint8], Tensor[(1170), bool]) */
}

def @func_17882() -> (Tensor[(3, 2, 9), int16],) {
  %773 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %772 = @func_17874() /* ty=Tensor[(3, 2, 9), int16] */;
    (%772,)
  };
  %773() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_11719(%var_11632: Tensor[(8, 12, 13), int8], %var_11678: Tensor[(2288), uint8], %var_11710: Tensor[(10, 42), uint8], %var_11713: Tensor[(10, 117), bool]) -> (Tensor[(8, 12, 13), bool], Tensor[(2, 336), uint32], Tensor[(1155), float64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 117), float64], Tensor[(16, 10, 13), float32], Tensor[(1040, 2), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(220), uint64], Tensor[(8, ?, ?), int32], Tensor[(8), float64], Tensor[(8, ?, ?), int32], Tensor[(14, 5, 6), uint8], Tensor[(10, 42), uint8], Tensor[(10, 117), uint16]) {
  %774 = cast(meta[relay.Constant][59] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %775 = cast(%var_11632, dtype="bool") /* ty=Tensor[(8, 12, 13), bool] */;
  %776 = cast(meta[relay.Constant][60] /* ty=Tensor[(1155), float64] */, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %777 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 117), float32] */, dtype="float32") /* ty=Tensor[(10, 117), float32] */;
  %778 = reshape(%776, newshape=[7, 15, 11]) /* ty=Tensor[(7, 15, 11), float64] */;
  %779 = reshape(%777, newshape=[1170]) /* ty=Tensor[(1170), float32] */;
  %780 = @func_10929(%778, %779) /* ty=(Tensor[(7, 15, 11), bool], Tensor[(28), int64], Tensor[(300), int32], Tensor[(2, 336), uint32], Tensor[(13, 10, 9), float32], Tensor[(1170), float32]) */;
  %781 = cast(meta[relay.Constant][59] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %782 = cast(%var_11678, dtype="uint8") /* ty=Tensor[(2288), uint8] */;
  %783 = reshape(%781, newshape=[]) /* ty=uint8 */;
  %784 = reshape(%782, newshape=[13, 11, 16]) /* ty=Tensor[(13, 11, 16), uint8] */;
  %785 = @func_3382(%783, %784) /* ty=(Tensor[(13, 11, 16), bool],) */;
  %786 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 117), float32] */, dtype="uint8") /* ty=Tensor[(10, 117), uint8] */;
  %787 = cast(meta[relay.Constant][59] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %788 = minimum(%786, %787) /* ty=Tensor[(10, 117), uint8] */;
  %789 = cast(meta[relay.Constant][59] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %790 = cast(%788, dtype="bool") /* ty=Tensor[(10, 117), bool] */;
  %791 = logical_and(%789, %790) /* ty=Tensor[(10, 117), bool] */;
  %792 = cast(%791, dtype="float64") /* ty=Tensor[(10, 117), float64] */;
  %793 = cast(meta[relay.Constant][59] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %794 = cast(meta[relay.Constant][62] /* ty=Tensor[(1040, 2), float32] */, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
  %795 = reshape(%794, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), float32] */;
  %796 = @func_8650(%795) /* ty=(Tensor[(16, 10, 13), float32],) */;
  %797 = cast(meta[relay.Constant][63] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %798 = cast(meta[relay.Constant][64] /* ty=Tensor[(220), uint64] */, dtype="uint64") /* ty=Tensor[(220), uint64] */;
  %799 = reshape(%797, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %800 = reshape(%798, newshape=[220, 1]) /* ty=Tensor[(220, 1), uint64] */;
  %801 = @func_3077(%799, %800) /* ty=(Tensor[(9, 1, 6), int64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64]) */;
  %802 = cast(meta[relay.Constant][59] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %803 = cast(meta[relay.Constant][65] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %804 = reshape(%802, newshape=[]) /* ty=float64 */;
  %805 = reshape(%803, newshape=[8, 1, 1]) /* ty=Tensor[(8, 1, 1), float64] */;
  %806 = cast(meta[relay.Constant][59] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %807 = cast(meta[relay.Constant][65] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %808 = reshape(%806, newshape=[]) /* ty=float64 */;
  %809 = reshape(%807, newshape=[8, 1, 1]) /* ty=Tensor[(8, 1, 1), float64] */;
  %810 = cast(%var_11710, dtype="uint8") /* ty=Tensor[(10, 42), uint8] */;
  %811 = cast(%var_11710, dtype="uint8") /* ty=Tensor[(10, 42), uint8] */;
  %812 = reshape(%810, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %813 = reshape(%811, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %814 = @func_6629(%812, %813) /* ty=(Tensor[(14, 5, 6), uint8],) */;
  %815 = cast(%var_11713, dtype="uint16") /* ty=Tensor[(10, 117), uint16] */;
  %816 = shape_of(%791, dtype="int32") /* ty=Tensor[(2), int32] */;
  %817 = cast(%791, dtype="uint16") /* ty=Tensor[(10, 117), uint16] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %819 = less_equal(%774, %775) /* ty=Tensor[(8, 12, 13), bool] */;
  %820 = %780.3;
  %821 = %785.0;
  %822 = floor_divide(%792, %793) /* ty=Tensor[(10, 117), float64] */;
  %823 = %796.0;
  %824 = %801.2;
  %825 = @func_10413(%804, %805) /* ty=Tensor[(8, ?, ?), int32] */;
  %826 = @func_10413(%808, %809) /* ty=Tensor[(8, ?, ?), int32] */;
  %827 = %814.0;
  %828 = maximum(%817, %818) /* ty=Tensor[(10, 117), uint16] */;
  (%819, %820, meta[relay.Constant][60] /* ty=Tensor[(1155), float64] */, %821, %var_11678, %822, %823, meta[relay.Constant][62] /* ty=Tensor[(1040, 2), float32] */, %824, meta[relay.Constant][63] /* ty=Tensor[(288), float64] */, meta[relay.Constant][64] /* ty=Tensor[(220), uint64] */, %825, meta[relay.Constant][65] /* ty=Tensor[(8), float64] */, %826, %827, %var_11710, %828)
}

def @func_14467() -> Tensor[(3, 2, 9), int16] {
  %829 = fn () -> Tensor[(3, 2, 9), int16] {
    @func_14284() /* ty=Tensor[(3, 2, 9), int16] */
  };
  %829() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_13739(%var_13634: int64, %var_13660: Tensor[(6, 12, 14), int64]) -> (Tensor[(3, 2, 9), int16], Tensor[(2400), float64], int64, Tensor[(15, 16, 10), bool], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 12, 14), float64], Tensor[(15, 16, 10), bool], Tensor[(1, 768), float64], Tensor[(3, 2, 9), int16]) {
  %830 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %831 = cast(meta[relay.Constant][66] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %832 = cast(meta[relay.Constant][66] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %833 = cast(meta[relay.Constant][67] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %834 = reshape(%831, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %835 = reshape(%832, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %836 = reshape(%833, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %837 = @func_2786(%834, %835, %836) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %838 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 768), float32] */, dtype="float32") /* ty=Tensor[(1, 768), float32] */;
  %839 = cast(meta[relay.Constant][67] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %840 = reshape(%838, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float32] */;
  %841 = reshape(%839, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %842 = @func_7586(%840, %841) /* ty=(Tensor[(6, 8, 16), uint16], Tensor[(9, 1, 6), int64], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 8, 16), float64]) */;
  %843 = cast(meta[relay.Constant][66] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %844 = cast(%var_13634, dtype="int64") /* ty=int64 */;
  %845 = reshape(%843, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %846 = reshape(%844, newshape=[]) /* ty=int64 */;
  %847 = @func_8860(%845, %846) /* ty=(Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) */;
  %848 = %847.3;
  %849 = cast(%848, dtype="float64") /* ty=float64 */;
  %850 = cast(%var_13660, dtype="float64") /* ty=Tensor[(6, 12, 14), float64] */;
  %851 = subtract(%849, %850) /* ty=Tensor[(6, 12, 14), float64] */;
  %852 = cast(%851, dtype="float64") /* ty=Tensor[(6, 12, 14), float64] */;
  %853 = %837.0;
  %854 = cast(%853, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %855 = cast(%853, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %856 = cast(meta[relay.Constant][67] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %857 = reshape(%854, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %858 = reshape(%855, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %859 = reshape(%856, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %860 = @func_2786(%857, %858, %859) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %861 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 768), float32] */, dtype="float64") /* ty=Tensor[(1, 768), float64] */;
  %862 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %863 = %830.0;
  %864 = %842.3;
  %865 = log10(%852) /* ty=Tensor[(6, 12, 14), float64] */;
  %866 = %860.0;
  %867 = asinh(%861) /* ty=Tensor[(1, 768), float64] */;
  %868 = %862.0;
  (%863, meta[relay.Constant][66] /* ty=Tensor[(2400), float64] */, %var_13634, %853, meta[relay.Constant][67] /* ty=Tensor[(288), float64] */, %864, %865, %866, %867, %868)
}

def @func_6373(%var_6370: Tensor[(10, 15, 2), int32], %var_6371: Tensor[(10, 15, 2), int32], %var_6372: Tensor[(672), uint32]) -> (Tensor[(10, 15, 2), int32], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 16, 6), bool], Tensor[(672), uint32], int64, Tensor[(28), int64], Tensor[(560), int64]) {
  %890 = fn (%var_6323: Tensor[(10, 15, 2), int32], %var_6324: Tensor[(10, 15, 2), int32], %var_6351: Tensor[(672), uint32]) -> (Tensor[(10, 15, 2), int32], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 16, 6), bool], Tensor[(672), uint32], int64, Tensor[(28), int64], Tensor[(560), int64]) {
    %869 = cast(%var_6324, dtype="int32") /* ty=Tensor[(10, 15, 2), int32] */;
    %870 = shape_of(%var_6323, dtype="int32") /* ty=Tensor[(3), int32] */;
    %871 = cast(%var_6323, dtype="int32") /* ty=Tensor[(10, 15, 2), int32] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %873 = cast(meta[relay.Constant][69] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
    %874 = reshape(%873, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
    %875 = @func_5655(%874) /* ty=(Tensor[(13, 11, 6), float64],) */;
    %876 = cast(%var_6351, dtype="uint32") /* ty=Tensor[(672), uint32] */;
    %877 = cast(%var_6351, dtype="uint32") /* ty=Tensor[(672), uint32] */;
    %878 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %879 = cast(meta[relay.Constant][70] /* ty=Tensor[(28), int64] */, dtype="int64") /* ty=Tensor[(28), int64] */;
    %880 = cast(meta[relay.Constant][71] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %881 = reshape(%876, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
    %882 = reshape(%877, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
    %883 = reshape(%878, newshape=[]) /* ty=int64 */;
    %884 = reshape(%879, newshape=[28]) /* ty=Tensor[(28), int64] */;
    %885 = reshape(%880, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %886 = @func_2677(%881, %882, %883, %884, %885) /* ty=(Tensor[(7, 16, 6), bool], Tensor[(28), int64], Tensor[(560), int64], Tensor[(144, 2), bool]) */;
    %887 = bitwise_or(%871, %872) /* ty=Tensor[(10, 15, 2), int32] */;
    %888 = %875.0;
    %889 = %886.0;
    (%887, %888, meta[relay.Constant][69] /* ty=Tensor[(858), float64] */, %889, %var_6351, 5 /* ty=int64 */, meta[relay.Constant][70] /* ty=Tensor[(28), int64] */, meta[relay.Constant][71] /* ty=Tensor[(560), int64] */)
  };
  %890(%var_6370, %var_6371, %var_6372) /* ty=(Tensor[(10, 15, 2), int32], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 16, 6), bool], Tensor[(672), uint32], int64, Tensor[(28), int64], Tensor[(560), int64]) */
}

def @func_7949(%var_7946: Tensor[(9, 3, 8), float64], %var_7947: Tensor[(28, 1), int64], %var_7948: Tensor[(9, 3, 8), float64]) -> (Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(560), int64], Tensor[(672), uint32], int64, Tensor[(28, 1), int64], Tensor[(8, 16, 7), uint8], Tensor[(896), uint8], Tensor[(9, 3, 8), uint32]) {
  %921 = fn (%var_7902: Tensor[(9, 3, 8), float64], %var_7919: Tensor[(28, 1), int64], %var_7933: Tensor[(9, 3, 8), float64]) -> (Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(560), int64], Tensor[(672), uint32], int64, Tensor[(28, 1), int64], Tensor[(8, 16, 7), uint8], Tensor[(896), uint8], Tensor[(9, 3, 8), uint32]) {
    %891 = cast(meta[relay.Constant][72] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
    %892 = cast(meta[relay.Constant][73] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %893 = reshape(%891, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float64] */;
    %894 = reshape(%892, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %895 = @func_948(%893, %894) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */;
    %896 = cast(meta[relay.Constant][74] /* ty=Tensor[(672), uint32] */, dtype="uint32") /* ty=Tensor[(672), uint32] */;
    %897 = cast(meta[relay.Constant][74] /* ty=Tensor[(672), uint32] */, dtype="uint32") /* ty=Tensor[(672), uint32] */;
    %898 = cast(-9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %899 = cast(%var_7919, dtype="int64") /* ty=Tensor[(28, 1), int64] */;
    %900 = %895.2;
    %901 = cast(%900, dtype="int64") /* ty=Tensor[(560), int64] */;
    %902 = reshape(%896, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
    %903 = reshape(%897, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
    %904 = reshape(%898, newshape=[]) /* ty=int64 */;
    %905 = reshape(%899, newshape=[28]) /* ty=Tensor[(28), int64] */;
    %906 = reshape(%901, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %907 = @func_2677(%902, %903, %904, %905, %906) /* ty=(Tensor[(7, 16, 6), bool], Tensor[(28), int64], Tensor[(560), int64], Tensor[(144, 2), bool]) */;
    %908 = cast(meta[relay.Constant][75] /* ty=Tensor[(896), uint8] */, dtype="uint8") /* ty=Tensor[(896), uint8] */;
    %909 = cast(meta[relay.Constant][75] /* ty=Tensor[(896), uint8] */, dtype="uint8") /* ty=Tensor[(896), uint8] */;
    %910 = reshape(%908, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), uint8] */;
    %911 = reshape(%909, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), uint8] */;
    %912 = cast(%var_7902, dtype="float64") /* ty=Tensor[(9, 3, 8), float64] */;
    %913 = cosh(%912) /* ty=Tensor[(9, 3, 8), float64] */;
    %914 = cast(%var_7933, dtype="uint32") /* ty=Tensor[(9, 3, 8), uint32] */;
    %915 = shape_of(%913, dtype="int32") /* ty=Tensor[(3), int32] */;
    %916 = cast(%913, dtype="uint32") /* ty=Tensor[(9, 3, 8), uint32] */;
    %917 = dyn.reshape(%914, %915, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %918 = %907.2;
    %919 = @func_7167(%910, %911) /* ty=Tensor[(8, 16, 7), uint8] */;
    %920 = maximum(%916, %917) /* ty=Tensor[(9, 3, 8), uint32] */;
    (%900, meta[relay.Constant][72] /* ty=Tensor[(288), float64] */, meta[relay.Constant][73] /* ty=Tensor[(560), int64] */, %918, meta[relay.Constant][74] /* ty=Tensor[(672), uint32] */, -9 /* ty=int64 */, %var_7919, %919, meta[relay.Constant][75] /* ty=Tensor[(896), uint8] */, %920)
  };
  %921(%var_7946, %var_7947, %var_7948) /* ty=(Tensor[(560), int64], Tensor[(288), float64], Tensor[(560), int64], Tensor[(560), int64], Tensor[(672), uint32], int64, Tensor[(28, 1), int64], Tensor[(8, 16, 7), uint8], Tensor[(896), uint8], Tensor[(9, 3, 8), uint32]) */
}

def @func_8214(%var_8212: Tensor[(7, 1), float32]) -> Tensor[(7, 1), float32] {
  @func_8211(%var_8212) /* ty=Tensor[(7, 1), float32] */
}

def @func_15839() -> Tensor[(3, 2, 9), int16] {
  %922 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %922.0
}

def @func_9659(%var_9657: Tensor[(13, 10, 9), float32]) -> (Tensor[(13, 10, 9), float32],) {
  @func_9656(%var_9657) /* ty=(Tensor[(13, 10, 9), float32],) */
}

def @func_17975(%var_17971: Tensor[(3072), bool], %var_17972: Tensor[(1, 231), float64], %var_17973: Tensor[(288), float64], %var_17974: Tensor[(2, 231), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(455, 2), float32], Tensor[(910), float32], Tensor[(3072), bool], Tensor[(2400), float64], Tensor[(10, 2, 11), int16], int64, int64, Tensor[(288), float64], Tensor[(429, 2), int8], Tensor[(858), float64], Tensor[(3, 2, 9), int16], Tensor[(2, 231), bool]) {
  @func_17969(%var_17971, %var_17972, %var_17973, %var_17974) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(455, 2), float32], Tensor[(910), float32], Tensor[(3072), bool], Tensor[(2400), float64], Tensor[(10, 2, 11), int16], int64, int64, Tensor[(288), float64], Tensor[(429, 2), int8], Tensor[(858), float64], Tensor[(3, 2, 9), int16], Tensor[(2, 231), bool]) */
}

def @func_3848(%var_3845: Tensor[(16, 16, 12), bool], %var_3846: Tensor[(16, 16, 12), bool], %var_3847: int64) -> (Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) {
  %954 = fn (%var_3802: Tensor[(16, 16, 12), bool], %var_3803: Tensor[(16, 16, 12), bool], %var_3820: int64) -> (Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) {
    %923 = cast(%var_3803, dtype="bool") /* ty=Tensor[(16, 16, 12), bool] */;
    %924 = shape_of(%var_3802, dtype="int32") /* ty=Tensor[(3), int32] */;
    %925 = cast(%var_3802, dtype="bool") /* ty=Tensor[(16, 16, 12), bool] */;
    %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %927 = cast(meta[relay.Constant][76] /* ty=Tensor[(220, 1), uint64] */, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
    %928 = cast(meta[relay.Constant][76] /* ty=Tensor[(220, 1), uint64] */, dtype="uint64") /* ty=Tensor[(220, 1), uint64] */;
    %929 = reshape(%927, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
    %930 = reshape(%928, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
    %931 = @func_2054(%929, %930) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */;
    %932 = cast(%var_3820, dtype="int64") /* ty=int64 */;
    %933 = cast(meta[relay.Constant][77] /* ty=Tensor[(28), int64] */, dtype="int64") /* ty=Tensor[(28), int64] */;
    %934 = cast(meta[relay.Constant][78] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %935 = reshape(%932, newshape=[]) /* ty=int64 */;
    %936 = reshape(%933, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), int64] */;
    %937 = reshape(%934, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %938 = @func_1326(%935, %936, %937) /* ty=(Tensor[(7, 1, 4), int64], Tensor[(7, 1, 4), float32], Tensor[(9, 2, 16), float64], Tensor[(144, 2), float64], Tensor[(560), int64]) */;
    %939 = cast(meta[relay.Constant][79] /* ty=Tensor[(672), uint32] */, dtype="uint32") /* ty=Tensor[(672), uint32] */;
    %940 = cast(meta[relay.Constant][79] /* ty=Tensor[(672), uint32] */, dtype="uint32") /* ty=Tensor[(672), uint32] */;
    %941 = cast(%var_3820, dtype="int64") /* ty=int64 */;
    %942 = %938.1;
    %943 = cast(%942, dtype="int64") /* ty=Tensor[(7, 1, 4), int64] */;
    %944 = cast(meta[relay.Constant][78] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %945 = reshape(%939, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
    %946 = reshape(%940, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint32] */;
    %947 = reshape(%941, newshape=[]) /* ty=int64 */;
    %948 = reshape(%943, newshape=[28]) /* ty=Tensor[(28), int64] */;
    %949 = reshape(%944, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %950 = @func_2677(%945, %946, %947, %948, %949) /* ty=(Tensor[(7, 16, 6), bool], Tensor[(28), int64], Tensor[(560), int64], Tensor[(144, 2), bool]) */;
    %951 = logical_and(%925, %926) /* ty=Tensor[(16, 16, 12), bool] */;
    %952 = %931.1;
    %953 = %950.1;
    (%951, %952, meta[relay.Constant][76] /* ty=Tensor[(220, 1), uint64] */, %942, %var_3820, meta[relay.Constant][77] /* ty=Tensor[(28), int64] */, meta[relay.Constant][78] /* ty=Tensor[(560), int64] */, %953, meta[relay.Constant][79] /* ty=Tensor[(672), uint32] */)
  };
  %954(%var_3845, %var_3846, %var_3847) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */
}

def @func_12890(%var_12841: Tensor[(7, 3, 11), float64], %var_12842: Tensor[(7, 3, 11), float64], %var_12872: int64, %var_12876: Tensor[(288), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(7, 3, 11), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(3072), bool], int64, Tensor[(288), float64], Tensor[(768), float32], Tensor[(288), float64]) {
  %955 = cast(%var_12842, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %956 = shape_of(%var_12841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(%var_12841, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %959 = cast(%var_12841, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %960 = cast(meta[relay.Constant][80] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %961 = reshape(%960, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %962 = @func_9561(%961) /* ty=(Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) */;
  %963 = cast(meta[relay.Constant][80] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %964 = cast(%var_12872, dtype="int64") /* ty=int64 */;
  %965 = reshape(%963, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %966 = reshape(%964, newshape=[]) /* ty=int64 */;
  %967 = @func_8860(%965, %966) /* ty=(Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) */;
  %968 = cast(meta[relay.Constant][81] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %969 = cast(%var_12876, dtype="float64") /* ty=Tensor[(288), float64] */;
  %970 = reshape(%968, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float32] */;
  %971 = reshape(%969, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %972 = @func_7586(%970, %971) /* ty=(Tensor[(6, 8, 16), uint16], Tensor[(9, 1, 6), int64], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 8, 16), float64]) */;
  %973 = divide(%957, %958) /* ty=Tensor[(7, 3, 11), float64] */;
  %974 = log10(%959) /* ty=Tensor[(7, 3, 11), float64] */;
  %975 = %962.2;
  %976 = %967.2;
  %977 = %972.2;
  (%973, %974, %975, meta[relay.Constant][80] /* ty=Tensor[(2400), float64] */, %976, %var_12872, %977, meta[relay.Constant][81] /* ty=Tensor[(768), float32] */, %var_12876)
}

def @func_10652(%var_10650: Tensor[(16, 13, 5), float32]) -> Tensor[(16, 13, 5), float32] {
  @func_10649(%var_10650) /* ty=Tensor[(16, 13, 5), float32] */
}

def @func_17876() -> Tensor[(3, 2, 9), int16] {
  @func_17874() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_15767(%var_15741: Tensor[(1, 12), float64]) -> Tensor[(1, 12), float64] {
  %978 = cast(7.77036f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %979 = cast(%var_15741, dtype="float64") /* ty=Tensor[(1, 12), float64] */;
  maximum(%978, %979) /* ty=Tensor[(1, 12), float64] */
}

def @func_13835() -> (Tensor[(3, 2, 9), int16],) {
  %980 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %981 = %980.0;
  (%981,)
}

def @func_14176() -> Tensor[(3, 2, 9), int16] {
  %983 = fn () -> Tensor[(3, 2, 9), int16] {
    %982 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %982.0
  };
  %983() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_13551(%var_13538: float64, %var_13546: Tensor[(144), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(15, 16, 10), bool], float64, Tensor[(240), float64], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], Tensor[(14, 8, 5), int64], Tensor[(144), float64]) {
  %984 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %985 = cast(%var_13538, dtype="float64") /* ty=float64 */;
  %986 = cast(meta[relay.Constant][82] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %987 = reshape(%985, newshape=[]) /* ty=float64 */;
  %988 = reshape(%986, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), float64] */;
  %989 = @func_4680(%987, %988) /* ty=(Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) */;
  %990 = cast(meta[relay.Constant][83] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %991 = cast(meta[relay.Constant][83] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %992 = reshape(%990, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %993 = reshape(%991, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
  %994 = @func_6629(%992, %993) /* ty=(Tensor[(14, 5, 6), uint8],) */;
  %995 = cast(%var_13546, dtype="float64") /* ty=Tensor[(144), float64] */;
  %996 = %989.1;
  %997 = cast(%996, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %998 = reshape(%995, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), float64] */;
  %999 = reshape(%997, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %1000 = @func_9481(%998, %999) /* ty=(Tensor[(2, 8, 9), float64], Tensor[(14, 8, 5), int64], Tensor[(2400), float64], Tensor[(288), float64], Tensor[(14, 8, 5), int64], Tensor[(5, 3, 16), float64], float64, Tensor[(240, 1), float64]) */;
  %1001 = %984.0;
  %1002 = %994.0;
  %1003 = %1000.4;
  (%1001, %996, %var_13538, meta[relay.Constant][82] /* ty=Tensor[(240), float64] */, %1002, meta[relay.Constant][83] /* ty=Tensor[(420), uint8] */, %1003, %var_13546)
}

def @func_14300() -> (Tensor[(3, 2, 9), int16],) {
  %1006 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %1004 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %1005 = %1004.0;
    (%1005,)
  };
  %1006() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_951(%var_949: Tensor[(9, 2, 16), float64], %var_950: Tensor[(560), int64]) -> (Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) {
  %1015 = fn (%var_941: Tensor[(9, 2, 16), float64], %var_945: Tensor[(560), int64]) -> (Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) {
    %1007 = cast(%var_941, dtype="float64") /* ty=Tensor[(9, 2, 16), float64] */;
    %1008 = cast(%var_945, dtype="int64") /* ty=Tensor[(560), int64] */;
    %1009 = cast(%var_945, dtype="int64") /* ty=Tensor[(560), int64] */;
    %1010 = reshape(%1008, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
    %1011 = reshape(%1009, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int64] */;
    %1012 = @func_794(%1010, %1011) /* ty=(Tensor[(14, 8, 5), int64], Tensor[(14, 8, 5), float64]) */;
    %1013 = sinh(%1007) /* ty=Tensor[(9, 2, 16), float64] */;
    %1014 = %1012.0;
    (%1013, %1014, %var_945)
  };
  %1015(%var_949, %var_950) /* ty=(Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), int64], Tensor[(560), int64]) */
}

def @func_17993() -> Tensor[(3, 2, 9), int16] {
  @func_17874() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_13743(%var_13741: int64, %var_13742: Tensor[(6, 12, 14), int64]) -> (Tensor[(3, 2, 9), int16], Tensor[(2400), float64], int64, Tensor[(15, 16, 10), bool], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 12, 14), float64], Tensor[(15, 16, 10), bool], Tensor[(1, 768), float64], Tensor[(3, 2, 9), int16]) {
  @func_13739(%var_13741, %var_13742) /* ty=(Tensor[(3, 2, 9), int16], Tensor[(2400), float64], int64, Tensor[(15, 16, 10), bool], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 12, 14), float64], Tensor[(15, 16, 10), bool], Tensor[(1, 768), float64], Tensor[(3, 2, 9), int16]) */
}

def @func_16872(%var_16855: int8, %var_16856: Tensor[(429, 2), float64], %var_16858: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(7, 3, 11), float64], Tensor[(288), float64], Tensor[(2400), float64], Tensor[(429, 2), int8], Tensor[(3, 2, 9), int16]) {
  %1016 = @func_16739() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1017 = cast(%var_16855, dtype="int8") /* ty=int8 */;
  %1018 = cast(%var_16856, dtype="float64") /* ty=Tensor[(429, 2), float64] */;
  %1019 = cast(meta[relay.Constant][84] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1020 = cast(%var_16858, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1021 = reshape(%1017, newshape=[]) /* ty=int8 */;
  %1022 = reshape(%1018, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %1023 = reshape(%1019, newshape=[2, 144]) /* ty=Tensor[(2, 144), float64] */;
  %1024 = reshape(%1020, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %1025 = @func_15021(%1021, %1022, %1023, %1024) /* ty=(Tensor[(9, 5, 2), int8], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(2, 144), float64], Tensor[(560), int64], Tensor[(2400), float64]) */;
  %1026 = cast(%var_16856, dtype="int8") /* ty=Tensor[(429, 2), int8] */;
  %1027 = cast(%var_16855, dtype="int8") /* ty=int8 */;
  %1028 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1029 = %1016.0;
  %1030 = %1025.3;
  %1031 = logical_xor(%1026, %1027) /* ty=Tensor[(429, 2), int8] */;
  %1032 = %1028.0;
  (%1029, %1030, meta[relay.Constant][84] /* ty=Tensor[(288), float64] */, %var_16858, %1031, %1032)
}

def @func_14760() -> (Tensor[(3, 2, 9), int16],) {
  %1035 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %1033 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %1034 = %1033.0;
    (%1034,)
  };
  %1035() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_5904(%var_5837: Tensor[(14, 13, 5), float32], %var_5855: Tensor[(3072), bool], %var_5884: Tensor[(140), float64], %var_5894: Tensor[(240), float64], %var_5898: Tensor[(2400), float64]) -> (Tensor[(14, 13, 5), float32], Tensor[(16, 16, 12), bool], Tensor[(3072), bool], int64, Tensor[(6, 13, 13), bool], Tensor[(1014), uint64], Tensor[(220, 1), uint64], Tensor[(140), float64], Tensor[(560), int64], Tensor[(288), float64], Tensor[(240), float64], Tensor[(288, 1), float64], Tensor[(2400), float64]) {
  %1036 = cast(%var_5837, dtype="float32") /* ty=Tensor[(14, 13, 5), float32] */;
  %1037 = cast(%var_5855, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %1038 = cast(%var_5855, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %1039 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1040 = reshape(%1037, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %1041 = reshape(%1038, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
  %1042 = reshape(%1039, newshape=[]) /* ty=int64 */;
  %1043 = @func_3844(%1040, %1041, %1042) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */;
  %1044 = cast(meta[relay.Constant][85] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %1045 = cast(meta[relay.Constant][85] /* ty=Tensor[(1014), uint64] */, dtype="uint64") /* ty=Tensor[(1014), uint64] */;
  %1046 = reshape(%1044, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %1047 = reshape(%1045, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), uint64] */;
  %1048 = cast(%var_5884, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1049 = cast(meta[relay.Constant][86] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %1050 = reshape(%1048, newshape=[10, 2, 7]) /* ty=Tensor[(10, 2, 7), float64] */;
  %1051 = reshape(%1049, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %1052 = @func_4131(%1050, %1051) /* ty=(Tensor[(10, 2, 7), float64], Tensor[(672), uint32], Tensor[(3072, 1), bool], int64, Tensor[(220, 1), uint64], Tensor[(9, 2, 16), float64], Tensor[(28), int64], Tensor[(560), int64], Tensor[(13, 11, 16), bool], Tensor[(2288), uint8], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64], Tensor[(9, 2, 16), float64], Tensor[(14, 8, 5), float64], Tensor[(672), uint32]) */;
  %1053 = cast(-1 /* ty=int64 */, dtype="float64") /* ty=float64 */;
  %1054 = cast(%var_5894, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1055 = reshape(%1053, newshape=[]) /* ty=float64 */;
  %1056 = reshape(%1054, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), float64] */;
  %1057 = @func_4680(%1055, %1056) /* ty=(Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) */;
  %1058 = cast(%var_5898, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1059 = cast(%var_5898, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1060 = %1057.3;
  %1061 = cast(%1060, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1062 = reshape(%1058, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %1063 = reshape(%1059, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), float64] */;
  %1064 = reshape(%1061, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %1065 = @func_2786(%1062, %1063, %1064) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(560), int64], Tensor[(288, 1), float64], Tensor[(560), int64], Tensor[(14, 8, 5), int64]) */;
  %1066 = acos(%1036) /* ty=Tensor[(14, 13, 5), float32] */;
  %1067 = %1043.0;
  %1068 = @func_5009(%1046, %1047) /* ty=Tensor[(6, 13, 13), bool] */;
  %1069 = %1052.4;
  %1070 = %1065.2;
  (%1066, %1067, %var_5855, -1 /* ty=int64 */, %1068, meta[relay.Constant][85] /* ty=Tensor[(1014), uint64] */, %1069, %var_5884, meta[relay.Constant][86] /* ty=Tensor[(560), int64] */, %1060, %var_5894, %1070, %var_5898)
}

def @func_16075(%var_16072: Tensor[(1, 220), uint64]) -> (Tensor[(3, 2, 9), int16], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(10, 2, 11), float64], Tensor[(1, 220), uint64]) {
  %1071 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1072 = cast(meta[relay.Constant][87] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %1073 = reshape(%1072, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %1074 = @func_5655(%1073) /* ty=(Tensor[(13, 11, 6), float64],) */;
  %1075 = cast(%var_16072, dtype="uint64") /* ty=Tensor[(1, 220), uint64] */;
  %1076 = cast(%var_16072, dtype="uint64") /* ty=Tensor[(1, 220), uint64] */;
  %1077 = reshape(%1075, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %1078 = reshape(%1076, newshape=[10, 2, 11]) /* ty=Tensor[(10, 2, 11), uint64] */;
  %1079 = @func_2054(%1077, %1078) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) */;
  %1080 = %1071.0;
  %1081 = %1074.0;
  %1082 = %1079.2;
  (%1080, %1081, meta[relay.Constant][87] /* ty=Tensor[(858), float64] */, %1082, %var_16072)
}

def @func_14413() -> (Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) {
  %1096 = fn () -> (Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) {
    %1083 = @func_13909() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) */;
    %1084 = %1083.1;
    %1085 = cast(%1084, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
    %1086 = acos(%1085) /* ty=Tensor[(10, 2, 11), float32] */;
    %1087 = cast(%1086, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
    %1088 = log(%1087) /* ty=Tensor[(10, 2, 11), float64] */;
    %1089 = cast(%1086, dtype="int16") /* ty=Tensor[(10, 2, 11), int16] */;
    %1090 = shape_of(%1088, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1091 = cast(%1088, dtype="int16") /* ty=Tensor[(10, 2, 11), int16] */;
    %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1093 = @func_13429() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %1094 = bitwise_and(%1091, %1092) /* ty=Tensor[(10, 2, 11), int16] */;
    %1095 = %1093.0;
    (%1094, %1095)
  };
  %1096() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */
}

def @func_14129(%var_14126: Tensor[(420), uint8], %var_14127: float64, %var_14128: Tensor[(144), float64]) -> (Tensor[(3, 2, 9), float32], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], Tensor[(288), float64], float64, Tensor[(240), float64], Tensor[(240, 1), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(13, 11, 16), bool], Tensor[(1144, 2), uint8]) {
  %1124 = fn (%var_14101: Tensor[(420), uint8], %var_14108: float64, %var_14112: Tensor[(144), float64]) -> (Tensor[(3, 2, 9), float32], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], Tensor[(288), float64], float64, Tensor[(240), float64], Tensor[(240, 1), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(13, 11, 16), bool], Tensor[(1144, 2), uint8]) {
    %1097 = @func_13853() /* ty=Tensor[(3, 2, 9), int16] */;
    %1098 = cast(%1097, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
    %1099 = cast(%var_14101, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %1100 = cast(%var_14101, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %1101 = reshape(%1099, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
    %1102 = reshape(%1100, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), uint8] */;
    %1103 = @func_6629(%1101, %1102) /* ty=(Tensor[(14, 5, 6), uint8],) */;
    %1104 = cast(%var_14108, dtype="float64") /* ty=float64 */;
    %1105 = cast(meta[relay.Constant][88] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %1106 = reshape(%1104, newshape=[]) /* ty=float64 */;
    %1107 = reshape(%1105, newshape=[5, 3, 16]) /* ty=Tensor[(5, 3, 16), float64] */;
    %1108 = @func_4680(%1106, %1107) /* ty=(Tensor[(5, 3, 16), float64], Tensor[(15, 16, 10), bool], Tensor[(10, 240), float64], Tensor[(288), float64]) */;
    %1109 = cast(%var_14112, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1110 = cast(meta[relay.Constant][89] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
    %1111 = reshape(%1109, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), float64] */;
    %1112 = reshape(%1110, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
    %1113 = @func_9481(%1111, %1112) /* ty=(Tensor[(2, 8, 9), float64], Tensor[(14, 8, 5), int64], Tensor[(2400), float64], Tensor[(288), float64], Tensor[(14, 8, 5), int64], Tensor[(5, 3, 16), float64], float64, Tensor[(240, 1), float64]) */;
    %1114 = cast(%var_14108, dtype="uint8") /* ty=uint8 */;
    %1115 = cast(meta[relay.Constant][90] /* ty=Tensor[(1144, 2), uint8] */, dtype="uint8") /* ty=Tensor[(1144, 2), uint8] */;
    %1116 = reshape(%1114, newshape=[]) /* ty=uint8 */;
    %1117 = reshape(%1115, newshape=[13, 11, 16]) /* ty=Tensor[(13, 11, 16), uint8] */;
    %1118 = @func_3382(%1116, %1117) /* ty=(Tensor[(13, 11, 16), bool],) */;
    %1119 = log(%1098) /* ty=Tensor[(3, 2, 9), float32] */;
    %1120 = %1103.0;
    %1121 = %1108.3;
    %1122 = %1113.7;
    %1123 = %1118.0;
    (%1119, %1120, %var_14101, %1121, %var_14108, meta[relay.Constant][88] /* ty=Tensor[(240), float64] */, %1122, %var_14112, meta[relay.Constant][89] /* ty=Tensor[(2400), float64] */, %1123, meta[relay.Constant][90] /* ty=Tensor[(1144, 2), uint8] */)
  };
  %1124(%var_14126, %var_14127, %var_14128) /* ty=(Tensor[(3, 2, 9), float32], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], Tensor[(288), float64], float64, Tensor[(240), float64], Tensor[(240, 1), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(13, 11, 16), bool], Tensor[(1144, 2), uint8]) */
}

def @func_14891(%var_14846: Tensor[(384), float32], %var_14864: Tensor[(40, 26), float32]) -> (Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), int16], Tensor[(6, 8, 8), float32], Tensor[(384), float32], Tensor[(40, 26), float32], Tensor[(3, 2, 9), int16], Tensor[(16, 13, 5), float64]) {
  %1125 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1126 = @func_14299() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1127 = cast(%var_14846, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1128 = reshape(%1127, newshape=[6, 8, 8]) /* ty=Tensor[(6, 8, 8), float32] */;
  %1129 = @func_11993(%1128) /* ty=(Tensor[(6, 8, 8), float32],) */;
  %1130 = @func_14412() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */;
  %1131 = cast(%var_14864, dtype="float32") /* ty=Tensor[(40, 26), float32] */;
  %1132 = reshape(%1131, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), float32] */;
  %1133 = @func_10649(%1132) /* ty=Tensor[(16, 13, 5), float32] */;
  %1134 = cast(%1133, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %1135 = %1125.0;
  %1136 = %1126.0;
  %1137 = %1129.0;
  %1138 = %1130.1;
  %1139 = log10(%1134) /* ty=Tensor[(16, 13, 5), float64] */;
  (%1135, %1136, %1137, %var_14846, %var_14864, %1138, %1139)
}

def @func_14268(%var_14260: float64, %var_14266: Tensor[(288), float64]) -> (Tensor[(7, 1), float32], Tensor[(7), float32], Tensor[(3, 2, 9), int16], Tensor[(3, 2, 9), float32], Tensor[(8, ?, ?), int32], float64, Tensor[(8), float64], Tensor[(55, 4), uint64], Tensor[(768), float32], Tensor[(288), float64]) {
  %1140 = cast(meta[relay.Constant][91] /* ty=Tensor[(7), float32] */, dtype="float32") /* ty=Tensor[(7), float32] */;
  %1141 = reshape(%1140, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
  %1142 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1143 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1144 = %1143.0;
  %1145 = cast(%1144, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
  %1146 = cast(%var_14260, dtype="float64") /* ty=float64 */;
  %1147 = cast(meta[relay.Constant][92] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %1148 = reshape(%1146, newshape=[]) /* ty=float64 */;
  %1149 = reshape(%1147, newshape=[8, 1, 1]) /* ty=Tensor[(8, 1, 1), float64] */;
  %1150 = cast(meta[relay.Constant][93] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1151 = cast(%var_14266, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1152 = reshape(%1150, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float32] */;
  %1153 = reshape(%1151, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %1154 = @func_7586(%1152, %1153) /* ty=(Tensor[(6, 8, 16), uint16], Tensor[(9, 1, 6), int64], Tensor[(288), float64], Tensor[(55, 4), uint64], Tensor[(6, 8, 16), float64]) */;
  %1155 = @func_8211(%1141) /* ty=Tensor[(7, 1), float32] */;
  %1156 = %1142.0;
  %1157 = erf(%1145) /* ty=Tensor[(3, 2, 9), float32] */;
  %1158 = @func_10413(%1148, %1149) /* ty=Tensor[(8, ?, ?), int32] */;
  %1159 = %1154.3;
  (%1155, meta[relay.Constant][91] /* ty=Tensor[(7), float32] */, %1156, %1157, %1158, %var_14260, meta[relay.Constant][92] /* ty=Tensor[(8), float64] */, %1159, meta[relay.Constant][93] /* ty=Tensor[(768), float32] */, %var_14266)
}

def @func_17696() -> (Tensor[(3, 2, 9), int16],) {
  %1162 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %1160 = @func_14299() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %1161 = %1160.0;
    (%1161,)
  };
  %1162() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_2054(%var_1998: Tensor[(10, 2, 11), uint64], %var_1999: Tensor[(10, 2, 11), uint64]) -> (Tensor[(10, 2, 11), float32], Tensor[(10, 2, 11), float64], Tensor[(10, 2, 11), float64]) {
  %1163 = cast(%var_1999, dtype="uint64") /* ty=Tensor[(10, 2, 11), uint64] */;
  %1164 = shape_of(%var_1998, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1165 = cast(%var_1998, dtype="uint64") /* ty=Tensor[(10, 2, 11), uint64] */;
  %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1167 = left_shift(%1165, %1166) /* ty=Tensor[(10, 2, 11), uint64] */;
  %1168 = cast(%1167, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %1169 = rsqrt(%1168) /* ty=Tensor[(10, 2, 11), float32] */;
  %1170 = cast(%1169, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %1171 = sinh(%1170) /* ty=Tensor[(10, 2, 11), float32] */;
  %1172 = cast(%var_1999, dtype="uint8") /* ty=Tensor[(10, 2, 11), uint8] */;
  %1173 = shape_of(%1167, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1174 = cast(%1167, dtype="uint8") /* ty=Tensor[(10, 2, 11), uint8] */;
  %1175 = dyn.reshape(%1172, %1173, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1176 = right_shift(%1174, %1175) /* ty=Tensor[(10, 2, 11), uint8] */;
  %1177 = cast(%1176, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %1178 = shape_of(%1171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1179 = cast(%1171, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %1180 = dyn.reshape(%1177, %1178, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1181 = cast(%1169, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
  %1182 = cast(%1169, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
  %1183 = floor_divide(%1179, %1180) /* ty=Tensor[(10, 2, 11), float32] */;
  %1184 = sqrt(%1181) /* ty=Tensor[(10, 2, 11), float64] */;
  %1185 = asinh(%1182) /* ty=Tensor[(10, 2, 11), float64] */;
  (%1183, %1184, %1185)
}

def @func_17773() -> Tensor[(3, 2, 9), int16] {
  %1187 = fn () -> Tensor[(3, 2, 9), int16] {
    %1186 = @func_13347() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %1186.0
  };
  %1187() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_14718(%var_14661: float64, %var_14662: Tensor[(72, 2), float64]) -> (Tensor[(3, 2, 9), int16], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], float64, Tensor[(72, 2), float64], Tensor[(3, 2, 9), int16], Tensor[(2400), float64], Tensor[(2400), float64]) {
  %1188 = @func_14412() /* ty=(Tensor[(10, 2, 11), int16], Tensor[(3, 2, 9), int16]) */;
  %1189 = cast(meta[relay.Constant][94] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %1190 = cast(%var_14661, dtype="float64") /* ty=float64 */;
  %1191 = cast(%var_14662, dtype="float64") /* ty=Tensor[(72, 2), float64] */;
  %1192 = reshape(%1189, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %1193 = reshape(%1190, newshape=[]) /* ty=float64 */;
  %1194 = reshape(%1191, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1195 = @func_14125(%1192, %1193, %1194) /* ty=(Tensor[(3, 2, 9), float32], Tensor[(14, 5, 6), uint8], Tensor[(420), uint8], Tensor[(288), float64], float64, Tensor[(240), float64], Tensor[(240, 1), float64], Tensor[(144), float64], Tensor[(2400), float64], Tensor[(13, 11, 16), bool], Tensor[(1144, 2), uint8]) */;
  %1196 = @func_14299() /* ty=(Tensor[(3, 2, 9), int16],) */;
  %1197 = cast(meta[relay.Constant][95] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1198 = reshape(%1197, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %1199 = @func_9561(%1198) /* ty=(Tensor[(2, 4, 11), float32], Tensor[(14, 8, 5), int64], Tensor[(144), float64], Tensor[(2400), float64]) */;
  %1200 = %1188.1;
  %1201 = %1195.1;
  %1202 = %1196.0;
  %1203 = %1199.3;
  (%1200, %1201, meta[relay.Constant][94] /* ty=Tensor[(420), uint8] */, %var_14661, %var_14662, %1202, %1203, meta[relay.Constant][95] /* ty=Tensor[(2400), float64] */)
}

def @func_14832() -> Tensor[(3, 2, 9), int16] {
  @func_14830() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_3382(%var_3361: uint8, %var_3362: Tensor[(13, 11, 16), uint8]) -> (Tensor[(13, 11, 16), bool],) {
  %1204 = cast(%var_3361, dtype="bool") /* ty=bool */;
  %1205 = cast(%var_3362, dtype="bool") /* ty=Tensor[(13, 11, 16), bool] */;
  %1206 = less_equal(%1204, %1205) /* ty=Tensor[(13, 11, 16), bool] */;
  (%1206,)
}

def @func_8211(%var_8204: Tensor[(7, 1), float32]) -> Tensor[(7, 1), float32] {
  %1207 = cast(-7.05227f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1208 = cast(%var_8204, dtype="float32") /* ty=Tensor[(7, 1), float32] */;
  minimum(%1207, %1208) /* ty=Tensor[(7, 1), float32] */
}

def @func_17295() -> Tensor[(3, 2, 9), int16] {
  @func_17293() /* ty=Tensor[(3, 2, 9), int16] */
}

def @func_11996(%var_11994: Tensor[(6, 8, 8), float32]) -> (Tensor[(6, 8, 8), float32],) {
  @func_11993(%var_11994) /* ty=(Tensor[(6, 8, 8), float32],) */
}

def @func_15336() -> (Tensor[(3, 2, 9), float32],) {
  %1213 = fn () -> (Tensor[(3, 2, 9), float32],) {
    %1209 = @func_15161() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %1210 = %1209.0;
    %1211 = cast(%1210, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
    %1212 = atan(%1211) /* ty=Tensor[(3, 2, 9), float32] */;
    (%1212,)
  };
  %1213() /* ty=(Tensor[(3, 2, 9), float32],) */
}

def @func_15730(%var_15721: Tensor[(2400), float64]) -> (Tensor[(3, 2, 9), float32], int64, int64, Tensor[(2400), float32], Tensor[(10, 2, 11), float64]) {
  %1214 = @func_15335() /* ty=(Tensor[(3, 2, 9), float32],) */;
  %1215 = cast(meta[relay.Constant][96] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %1216 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1217 = reshape(%1215, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %1218 = reshape(%1216, newshape=[]) /* ty=int64 */;
  %1219 = @func_8860(%1217, %1218) /* ty=(Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) */;
  %1220 = cast(%var_15721, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %1221 = shape_of(meta[relay.Constant][96] /* ty=Tensor[(2400), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1222 = cast(meta[relay.Constant][96] /* ty=Tensor[(2400), float64] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %1223 = dyn.reshape(%1220, %1221, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1224 = @func_13909() /* ty=(Tensor[(3, 2, 9), int16], Tensor[(10, 2, 11), float64], Tensor[(220), uint64]) */;
  %1225 = %1214.0;
  %1226 = %1219.3;
  %1227 = power(%1222, %1223) /* ty=Tensor[(2400), float32] */;
  %1228 = %1224.1;
  (%1225, %1226, 7 /* ty=int64 */, %1227, %1228)
}

def @func_5012(%var_5010: Tensor[(6, 13, 13), uint64], %var_5011: Tensor[(6, 13, 13), uint64]) -> Tensor[(6, 13, 13), bool] {
  %1233 = fn (%var_5003: Tensor[(6, 13, 13), uint64], %var_5004: Tensor[(6, 13, 13), uint64]) -> Tensor[(6, 13, 13), bool] {
    %1229 = cast(%var_5004, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
    %1230 = shape_of(%var_5003, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1231 = cast(%var_5003, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
    %1232 = dyn.reshape(%1229, %1230, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1231, %1232) /* ty=Tensor[(6, 13, 13), bool] */
  };
  %1233(%var_5010, %var_5011) /* ty=Tensor[(6, 13, 13), bool] */
}

def @func_13348() -> (Tensor[(3, 2, 9), int16],) {
  %1237 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %1234 = cast(meta[relay.Constant][97] /* ty=Tensor[(3, 1, 1), int16] */, dtype="int16") /* ty=Tensor[(3, 1, 1), int16] */;
    %1235 = cast(meta[relay.Constant][98] /* ty=Tensor[(3, 2, 9), int16] */, dtype="int16") /* ty=Tensor[(3, 2, 9), int16] */;
    %1236 = bitwise_xor(%1234, %1235) /* ty=Tensor[(3, 2, 9), int16] */;
    (%1236,)
  };
  %1237() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_15354() -> (Tensor[(3, 2, 9), int16],) {
  %1240 = fn () -> (Tensor[(3, 2, 9), int16],) {
    %1238 = @func_13835() /* ty=(Tensor[(3, 2, 9), int16],) */;
    %1239 = %1238.0;
    (%1239,)
  };
  %1240() /* ty=(Tensor[(3, 2, 9), int16],) */
}

def @func_8863(%var_8861: Tensor[(16, 15, 10), float64], %var_8862: int64) -> (Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) {
  %1251 = fn (%var_8824: Tensor[(16, 15, 10), float64], %var_8831: int64) -> (Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) {
    %1241 = cast(%var_8824, dtype="float64") /* ty=Tensor[(16, 15, 10), float64] */;
    %1242 = cast(meta[relay.Constant][99] /* ty=Tensor[(3072), bool] */, dtype="bool") /* ty=Tensor[(3072), bool] */;
    %1243 = cast(meta[relay.Constant][99] /* ty=Tensor[(3072), bool] */, dtype="bool") /* ty=Tensor[(3072), bool] */;
    %1244 = cast(%var_8831, dtype="int64") /* ty=int64 */;
    %1245 = reshape(%1242, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
    %1246 = reshape(%1243, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), bool] */;
    %1247 = reshape(%1244, newshape=[]) /* ty=int64 */;
    %1248 = @func_3844(%1245, %1246, %1247) /* ty=(Tensor[(16, 16, 12), bool], Tensor[(10, 2, 11), float64], Tensor[(220, 1), uint64], Tensor[(7, 1, 4), float32], int64, Tensor[(28), int64], Tensor[(560), int64], Tensor[(28), int64], Tensor[(672), uint32]) */;
    %1249 = log(%1241) /* ty=Tensor[(16, 15, 10), float64] */;
    %1250 = %1248.1;
    (%1249, %1250, meta[relay.Constant][99] /* ty=Tensor[(3072), bool] */, %var_8831)
  };
  %1251(%var_8861, %var_8862) /* ty=(Tensor[(16, 15, 10), float64], Tensor[(10, 2, 11), float64], Tensor[(3072), bool], int64) */
}

def @func_15027(%var_15023: int8, %var_15024: Tensor[(858), float64], %var_15025: Tensor[(2, 144), float64], %var_15026: Tensor[(2400), float64]) -> (Tensor[(9, 5, 2), int8], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(2, 144), float64], Tensor[(560), int64], Tensor[(2400), float64]) {
  @func_15021(%var_15023, %var_15024, %var_15025, %var_15026) /* ty=(Tensor[(9, 5, 2), int8], Tensor[(13, 11, 6), float64], Tensor[(858), float64], Tensor[(7, 3, 11), float64], Tensor[(231), float64], Tensor[(2, 144), float64], Tensor[(560), int64], Tensor[(2400), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen849/build/output.py", line 2606, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:28:12] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


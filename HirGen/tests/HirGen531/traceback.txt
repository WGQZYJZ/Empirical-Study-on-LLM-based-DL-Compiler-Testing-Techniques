==========mod==========
#[version = "0.0.5"]
def @func_11580() -> Tensor[(180), float64] {
  @func_11321() /* ty=Tensor[(180), float64] */
}

def @func_10582() -> (Tensor[(180), float64],) {
  %0 = @func_9727() /* ty=(Tensor[(180), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_2444(%var_2431: Tensor[(12, 2, 3), int8], %var_2432: Tensor[(12, 2, 3), int8]) -> (Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
  %2 = cast(%var_2432, dtype="int8") /* ty=Tensor[(12, 2, 3), int8] */;
  %3 = shape_of(%var_2431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%var_2431, dtype="int8") /* ty=Tensor[(12, 2, 3), int8] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %7 = reshape(%6, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
  %8 = subtract(%4, %5) /* ty=Tensor[(12, 2, 3), int8] */;
  %9 = @func_1894(%7) /* ty=Tensor[(4, 3, 15), float64] */;
  (%8, %9, meta[relay.Constant][0] /* ty=Tensor[(180), float64] */)
}

def @func_9162() -> (Tensor[(324), float32],) {
  %10 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
  %11 = %10.2;
  (%11,)
}

def @func_7924(%var_7835: Tensor[(14, 14, 13), float32], %var_7836: Tensor[(14, 14, 13), float32], %var_7851: Tensor[(1950), float32], %var_7856: Tensor[(3, 108), float32], %var_7870: Tensor[(144), float32], %var_7876: Tensor[(72), int8]) -> (Tensor[(14, 14, 13), float32], Tensor[(6, 15, 2), float64], Tensor[(180, 1), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(15, 10, 13), float32], Tensor[(3, 108), float32], Tensor[(16, 10, 9), float32], Tensor[(144), float32], Tensor[(9, 12, 16), int64], Tensor[(8, 216), uint32], Tensor[(72), int8], Tensor[(14, 2, 8), float64], Tensor[(1, 224), float64], Tensor[(30), uint64], Tensor[(16, 10, 9), float32], Tensor[(9, 12, 16), bool]) {
  %12 = cast(%var_7836, dtype="float32") /* ty=Tensor[(14, 14, 13), float32] */;
  %13 = shape_of(%var_7835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%var_7835, dtype="float32") /* ty=Tensor[(14, 14, 13), float32] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(180, 1), float64] */, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %17 = reshape(%16, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), float64] */;
  %18 = @func_5916(%17) /* ty=(Tensor[(6, 15, 2), float64],) */;
  %19 = cast(%var_7851, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %20 = reshape(%19, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
  %21 = @func_201(%20) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */;
  %22 = cast(%var_7856, dtype="float32") /* ty=Tensor[(3, 108), float32] */;
  %23 = reshape(%22, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %24 = @func_1380(%23) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %25 = cast(%var_7870, dtype="float32") /* ty=Tensor[(144), float32] */;
  %26 = reshape(%25, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), float32] */;
  %27 = @func_5760(%26) /* ty=(Tensor[(16, 10, 9), float32],) */;
  %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 216), uint32] */, dtype="uint32") /* ty=Tensor[(8, 216), uint32] */;
  %29 = cast(%var_7876, dtype="int8") /* ty=Tensor[(72), int8] */;
  %30 = reshape(%28, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), uint32] */;
  %31 = reshape(%29, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %32 = @func_5639(%30, %31) /* ty=(Tensor[(9, 12, 16), bool], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(9, 12, 16), int64]) */;
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 224), float64] */, dtype="float64") /* ty=Tensor[(1, 224), float64] */;
  %34 = cast(meta[relay.Constant][4] /* ty=Tensor[(30), uint64] */, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %35 = reshape(%33, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %36 = reshape(%34, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint64] */;
  %37 = @func_3051(%35, %36) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(1, 10, 3), uint64], uint64, Tensor[(5, 6), uint64]) */;
  %38 = cast(%var_7870, dtype="float32") /* ty=Tensor[(144), float32] */;
  %39 = reshape(%38, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), float32] */;
  %40 = @func_5760(%39) /* ty=(Tensor[(16, 10, 9), float32],) */;
  %41 = %32.3;
  %42 = cast(%41, dtype="uint32") /* ty=Tensor[(9, 12, 16), uint32] */;
  %43 = cast(%var_7876, dtype="int8") /* ty=Tensor[(72), int8] */;
  %44 = reshape(%42, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), uint32] */;
  %45 = reshape(%43, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %46 = @func_5639(%44, %45) /* ty=(Tensor[(9, 12, 16), bool], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(9, 12, 16), int64]) */;
  %47 = power(%14, %15) /* ty=Tensor[(14, 14, 13), float32] */;
  %48 = %18.0;
  %49 = %21.1;
  %50 = %24.1;
  %51 = %27.0;
  %52 = %37.0;
  %53 = %40.0;
  %54 = %46.0;
  (%47, %48, meta[relay.Constant][1] /* ty=Tensor[(180, 1), float64] */, %49, %var_7851, %50, %var_7856, %51, %var_7870, %41, meta[relay.Constant][2] /* ty=Tensor[(8, 216), uint32] */, %var_7876, %52, meta[relay.Constant][3] /* ty=Tensor[(1, 224), float64] */, meta[relay.Constant][4] /* ty=Tensor[(30), uint64] */, %53, %54)
}

def @func_6038(%var_6010: Tensor[(6, 12, 12), float32], %var_6028: Tensor[(30), uint64], %var_6036: Tensor[(180), float64]) -> (Tensor[(6, 12, 12), bool], uint64, Tensor[(224), float64], Tensor[(30), uint64], Tensor[(1, 10, 3), uint64], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
  %55 = cast(%var_6010, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %56 = log10(%55) /* ty=Tensor[(6, 12, 12), float32] */;
  %57 = cast(%56, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
  %58 = erf(%57) /* ty=Tensor[(6, 12, 12), float64] */;
  %59 = cast(%56, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %63 = cast(meta[relay.Constant][5] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %64 = cast(%var_6028, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %65 = reshape(%63, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %66 = reshape(%64, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint64] */;
  %67 = @func_3051(%65, %66) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(1, 10, 3), uint64], uint64, Tensor[(5, 6), uint64]) */;
  %68 = %67.2;
  %69 = cast(%68, dtype="uint64") /* ty=uint64 */;
  %70 = cast(%var_6028, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %71 = reshape(%69, newshape=[]) /* ty=uint64 */;
  %72 = reshape(%70, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), uint64] */;
  %73 = @func_2376(%71, %72) /* ty=(Tensor[(1, 10, 3), uint64],) */;
  %74 = cast(%var_6036, dtype="float64") /* ty=Tensor[(180), float64] */;
  %75 = reshape(%74, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
  %76 = greater(%61, %62) /* ty=Tensor[(6, 12, 12), bool] */;
  %77 = %73.0;
  %78 = @func_1894(%75) /* ty=Tensor[(4, 3, 15), float64] */;
  (%76, %68, meta[relay.Constant][5] /* ty=Tensor[(224), float64] */, %var_6028, %77, %78, %var_6036)
}

def @func_11773() -> (Tensor[(10, 13, 6), float32],) {
  %79 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
  %80 = %79.5;
  (%80,)
}

def @func_11162() -> (Tensor[(180), float64],) {
  %81 = @func_10686() /* ty=Tensor[(180), float64] */;
  (%81,)
}

def @func_12176() -> (Tensor[(324), float32], Tensor[(5, 13, 4), float32], Tensor[(130, 2), float32]) {
  %82 = @func_11991() /* ty=(Tensor[(324), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(144), float32], Tensor[(1568), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64]) */;
  %83 = cast(meta[relay.Constant][6] /* ty=Tensor[(130, 2), float32] */, dtype="float32") /* ty=Tensor[(130, 2), float32] */;
  %84 = reshape(%83, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), float32] */;
  %85 = %82.0;
  %86 = @func_2978(%84) /* ty=Tensor[(5, 13, 4), float32] */;
  (%85, %86, meta[relay.Constant][6] /* ty=Tensor[(130, 2), float32] */)
}

def @func_8469(%var_8463: Tensor[(1, 1568), float32]) -> (Tensor[(10, 13, 6), float64], Tensor[(7, 16, 14), float32], Tensor[(128), float32], Tensor[(1, 1568), float32]) {
  %87 = cast(meta[relay.Constant][7] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %88 = cast(%var_8463, dtype="float32") /* ty=Tensor[(1, 1568), float32] */;
  %89 = reshape(%87, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), float32] */;
  %90 = reshape(%88, newshape=[1568]) /* ty=Tensor[(1568), float32] */;
  %91 = @func_7711(%89, %90) /* ty=(Tensor[(8, 4, 4), float32], Tensor[(7, 16, 14), float32], Tensor[(1568), float32]) */;
  %92 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  %93 = %91.1;
  (%92, %93, meta[relay.Constant][7] /* ty=Tensor[(128), float32] */, %var_8463)
}

def @func_2376(%var_2364: uint64, %var_2365: Tensor[(1, 10, 3), uint64]) -> (Tensor[(1, 10, 3), uint64],) {
  %94 = cast(%var_2364, dtype="uint64") /* ty=uint64 */;
  %95 = cast(%var_2365, dtype="uint64") /* ty=Tensor[(1, 10, 3), uint64] */;
  %96 = bitwise_or(%94, %95) /* ty=Tensor[(1, 10, 3), uint64] */;
  (%96,)
}

def @func_10867() -> (Tensor[(10, 13, 6), float32], Tensor[(60), float32], Tensor[(15, 10, 13), float32], Tensor[(4, 3, 15), float64], Tensor[(30, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(450), uint8]) {
  %97 = cast(meta[relay.Constant][8] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %98 = reshape(%97, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %99 = @func_266(%98) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
  %100 = %99.1;
  %101 = cast(%100, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
  %102 = cast(meta[relay.Constant][9] /* ty=Tensor[(30, 6), float64] */, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
  %103 = reshape(%102, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
  %104 = cast(meta[relay.Constant][9] /* ty=Tensor[(30, 6), float64] */, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
  %105 = cast(%100, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
  %106 = reshape(%105, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
  %107 = @func_201(%106) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */;
  %108 = @func_8828() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %109 = @func_8605() /* ty=Tensor[(10, 13, 6), float32] */;
  %110 = sin(%101) /* ty=Tensor[(15, 10, 13), float32] */;
  %111 = @func_1894(%103) /* ty=Tensor[(4, 3, 15), float64] */;
  %112 = tan(%104) /* ty=Tensor[(30, 6), float32] */;
  %113 = %107.0;
  %114 = %108.0;
  (%109, meta[relay.Constant][8] /* ty=Tensor[(60), float32] */, %110, %111, %112, %113, %114)
}

def @func_1380(%var_1345: Tensor[(6, 6, 9), float32]) -> (Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) {
  %115 = cast(%var_1345, dtype="float32") /* ty=Tensor[(6, 6, 9), float32] */;
  %116 = cast(meta[relay.Constant][10] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %117 = reshape(%116, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %118 = @func_1034(%117) /* ty=(Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %119 = sqrt(%115) /* ty=Tensor[(6, 6, 9), float32] */;
  %120 = %118.1;
  (%119, %120, meta[relay.Constant][10] /* ty=Tensor[(60), float32] */)
}

def @func_6517(%var_6510: uint8, %var_6511: Tensor[(13, 1), uint8]) -> (Tensor[(13, 1), bool],) {
  %121 = cast(%var_6510, dtype="bool") /* ty=bool */;
  %122 = cast(%var_6511, dtype="bool") /* ty=Tensor[(13, 1), bool] */;
  %123 = not_equal(%121, %122) /* ty=Tensor[(13, 1), bool] */;
  (%123,)
}

def @func_9727() -> (Tensor[(180), float64],) {
  %124 = @func_8828() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %125 = %124.2;
  (%125,)
}

def @func_10312(%var_10308: Tensor[(560), float32]) -> (Tensor[(450), uint8], Tensor[(8, 14, 5), float64], Tensor[(560), float32], Tensor[(60), float32]) {
  %126 = @func_9216() /* ty=(Tensor[(450), uint8], Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) */;
  %127 = cast(%var_10308, dtype="float32") /* ty=Tensor[(560), float32] */;
  %128 = cast(meta[relay.Constant][11] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %129 = reshape(%127, newshape=[8, 14, 5]) /* ty=Tensor[(8, 14, 5), float32] */;
  %130 = reshape(%128, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %131 = @func_7390(%129, %130) /* ty=(Tensor[(8, 14, 5), float64], Tensor[(8, 14, 5), float32], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %132 = %126.0;
  %133 = %131.0;
  (%132, %133, %var_10308, meta[relay.Constant][11] /* ty=Tensor[(60), float32] */)
}

def @func_11570(%var_11565: float32) -> Tensor[(10, 6, 1), float32] {
  %134 = cast(%var_11565, dtype="float32") /* ty=float32 */;
  %135 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 1), float32] */;
  mod(%134, %135) /* ty=Tensor[(10, 6, 1), float32] */
}

def @func_11321() -> Tensor[(180), float64] {
  %136 = @func_11303() /* ty=(Tensor[(180), float64],) */;
  %136.0
}

def @func_12069() -> (Tensor[(1950), uint16], Tensor[(5, 7, 15), float64], Tensor[(60), float32], Tensor[(72), int16], Tensor[(450), uint8], Tensor[(324), float32]) {
  %137 = @func_11991() /* ty=(Tensor[(324), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(144), float32], Tensor[(1568), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64]) */;
  %138 = %137.2;
  %139 = cast(meta[relay.Constant][13] /* ty=Tensor[(1950), float32] */, dtype="uint16") /* ty=Tensor[(1950), uint16] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(1), int32] */;
  %141 = cast(%138, dtype="uint16") /* ty=Tensor[(1950), uint16] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %143 = cast(meta[relay.Constant][14] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %144 = reshape(%143, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %145 = @func_1034(%144) /* ty=(Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %146 = cast(meta[relay.Constant][15] /* ty=Tensor[(450), uint8] */, dtype="uint8") /* ty=Tensor[(450), uint8] */;
  %147 = cast(meta[relay.Constant][16] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %148 = reshape(%146, newshape=[15, 5, 6]) /* ty=Tensor[(15, 5, 6), uint8] */;
  %149 = reshape(%147, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %150 = @func_2137(%148, %149) /* ty=(Tensor[(15, 5, 6), uint8], Tensor[(60), float32], Tensor[(72), int16], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(60), float32]) */;
  %151 = maximum(%141, %142) /* ty=Tensor[(1950), uint16] */;
  %152 = %145.0;
  %153 = %150.2;
  (%151, %152, meta[relay.Constant][14] /* ty=Tensor[(60), float32] */, %153, meta[relay.Constant][15] /* ty=Tensor[(450), uint8] */, meta[relay.Constant][16] /* ty=Tensor[(324), float32] */)
}

def @func_10956(%var_10930: Tensor[(13, 1, 9), float64]) -> (Tensor[(13, 1, 9), float64], Tensor[(72), int8], Tensor[(1728), uint32], Tensor[(72), int8]) {
  %154 = cast(%var_10930, dtype="float64") /* ty=Tensor[(13, 1, 9), float64] */;
  %155 = cast(meta[relay.Constant][17] /* ty=Tensor[(1728), uint32] */, dtype="uint32") /* ty=Tensor[(1728), uint32] */;
  %156 = cast(meta[relay.Constant][18] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %157 = reshape(%155, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), uint32] */;
  %158 = reshape(%156, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %159 = @func_5639(%157, %158) /* ty=(Tensor[(9, 12, 16), bool], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(9, 12, 16), int64]) */;
  %160 = exp(%154) /* ty=Tensor[(13, 1, 9), float64] */;
  %161 = %159.2;
  (%160, %161, meta[relay.Constant][17] /* ty=Tensor[(1728), uint32] */, meta[relay.Constant][18] /* ty=Tensor[(72), int8] */)
}

def @func_266(%var_248: Tensor[(4, 15, 1), float32]) -> (Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) {
  %162 = cast(%var_248, dtype="float32") /* ty=Tensor[(4, 15, 1), float32] */;
  %163 = cast(meta[relay.Constant][19] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %164 = reshape(%163, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
  %165 = @func_201(%164) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */;
  %166 = log2(%162) /* ty=Tensor[(4, 15, 1), float32] */;
  %167 = %165.1;
  (%166, %167, meta[relay.Constant][19] /* ty=Tensor[(1950), float32] */)
}

def @func_2137(%var_2112: Tensor[(15, 5, 6), uint8], %var_2122: Tensor[(324), float32]) -> (Tensor[(15, 5, 6), uint8], Tensor[(60), float32], Tensor[(72), int16], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(60), float32]) {
  %168 = cast(%var_2112, dtype="uint8") /* ty=Tensor[(15, 5, 6), uint8] */;
  %169 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(15, 5, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 5, 6), uint8] */, dtype="uint8") /* ty=Tensor[(15, 5, 6), uint8] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %172 = cast(meta[relay.Constant][21] /* ty=Tensor[(72), int16] */, dtype="int16") /* ty=Tensor[(72), int16] */;
  %173 = reshape(%172, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), int16] */;
  %174 = @func_779(%173) /* ty=(Tensor[(3, 4, 6), int16], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %175 = cast(%var_2122, dtype="float32") /* ty=Tensor[(324), float32] */;
  %176 = reshape(%175, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %177 = @func_1380(%176) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %178 = %174.2;
  %179 = cast(%178, dtype="float32") /* ty=Tensor[(60), float32] */;
  %180 = reshape(%179, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %181 = @func_1034(%180) /* ty=(Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %182 = right_shift(%170, %171) /* ty=Tensor[(15, 5, 6), uint8] */;
  %183 = %177.0;
  %184 = %181.2;
  (%182, %178, meta[relay.Constant][21] /* ty=Tensor[(72), int16] */, %183, %var_2122, %184)
}

def @func_5869(%var_5865: Tensor[(13, 15, 12), float64]) -> (Tensor[(13, 15, 12), float64],) {
  %185 = cast(%var_5865, dtype="float64") /* ty=Tensor[(13, 15, 12), float64] */;
  %186 = atan(%185) /* ty=Tensor[(13, 15, 12), float64] */;
  (%186,)
}

def @func_10231(%var_10198: Tensor[(10, 13, 12), uint8]) -> (Tensor[(10, 13, 12), uint8], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(2, 5, 12), float32], Tensor[(120, 1), bool], Tensor[(180), float64], Tensor[(2, 5, 12), float32]) {
  %187 = cast(meta[relay.Constant][22] /* ty=Tensor[(10, 13, 12), uint8] */, dtype="uint8") /* ty=Tensor[(10, 13, 12), uint8] */;
  %188 = shape_of(%var_10198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%var_10198, dtype="uint8") /* ty=Tensor[(10, 13, 12), uint8] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %191 = cast(meta[relay.Constant][23] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %192 = cast(meta[relay.Constant][23] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %193 = reshape(%191, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %194 = reshape(%192, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %195 = @func_2444(%193, %194) /* ty=(Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %196 = cast(meta[relay.Constant][24] /* ty=Tensor[(120, 1), bool] */, dtype="bool") /* ty=Tensor[(120, 1), bool] */;
  %197 = reshape(%196, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), bool] */;
  %198 = @func_9371(%197) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(2, 5, 12), float32]) */;
  %199 = @func_9727() /* ty=(Tensor[(180), float64],) */;
  %200 = cast(meta[relay.Constant][24] /* ty=Tensor[(120, 1), bool] */, dtype="bool") /* ty=Tensor[(120, 1), bool] */;
  %201 = reshape(%200, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), bool] */;
  %202 = @func_9371(%201) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(2, 5, 12), float32]) */;
  %203 = bitwise_or(%189, %190) /* ty=Tensor[(10, 13, 12), uint8] */;
  %204 = %195.0;
  %205 = %198.1;
  %206 = %199.0;
  %207 = %202.1;
  (%203, %204, meta[relay.Constant][23] /* ty=Tensor[(72), int8] */, %205, meta[relay.Constant][24] /* ty=Tensor[(120, 1), bool] */, %206, %207)
}

def @func_1034(%var_1027: Tensor[(60), float32]) -> (Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) {
  %208 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 7, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 15), float64] */;
  %209 = cast(%var_1027, dtype="float32") /* ty=Tensor[(60), float32] */;
  %210 = reshape(%209, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %211 = @func_266(%210) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
  %212 = sin(%208) /* ty=Tensor[(5, 7, 15), float64] */;
  %213 = %211.1;
  (%212, %213, %var_1027)
}

def @func_11031(%var_11007: Tensor[(30), uint64]) -> (Tensor[(182), float64], Tensor[(30), uint64], Tensor[(30), float32]) {
  %214 = @func_9711() /* ty=(Tensor[(182), float64], Tensor[(13, 15, 12), float64], Tensor[(1170, 2), float64]) */;
  %215 = cast(%var_11007, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %216 = reshape(%215, newshape=[30]) /* ty=Tensor[(30), uint64] */;
  %217 = @func_4464(%216) /* ty=(Tensor[(15, 8, 7), uint32], Tensor[(15, 8, 7), float64], Tensor[(60), float32], Tensor[(324), float32], Tensor[(1, 10, 3), uint64], uint64, Tensor[(30), uint64]) */;
  %218 = cast(%var_11007, dtype="float32") /* ty=Tensor[(30), float32] */;
  %219 = %214.0;
  %220 = %217.6;
  %221 = asinh(%218) /* ty=Tensor[(30), float32] */;
  (%219, %220, %221)
}

def @func_10130(%var_10087: Tensor[(2548), float32], %var_10088: Tensor[(1950, 1), float32], %var_10089: Tensor[(144), float32], %var_10090: Tensor[(3, 24), int8], %var_10096: Tensor[(3, 24), int8]) -> (Tensor[(324), float32], Tensor[(15, 10, 13), float32], Tensor[(144), float32], Tensor[(3, 24), float32], Tensor[(1950, 2548), int16]) {
  %222 = @func_9162() /* ty=(Tensor[(324), float32],) */;
  %223 = cast(%var_10087, dtype="float32") /* ty=Tensor[(2548), float32] */;
  %224 = cast(%var_10087, dtype="float32") /* ty=Tensor[(2548), float32] */;
  %225 = cast(%var_10088, dtype="float32") /* ty=Tensor[(1950, 1), float32] */;
  %226 = %222.0;
  %227 = cast(%226, dtype="float32") /* ty=Tensor[(324), float32] */;
  %228 = cast(%var_10089, dtype="float32") /* ty=Tensor[(144), float32] */;
  %229 = cast(%var_10090, dtype="int8") /* ty=Tensor[(3, 24), int8] */;
  %230 = reshape(%223, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
  %231 = reshape(%224, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
  %232 = reshape(%225, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %233 = reshape(%227, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
  %234 = reshape(%228, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %235 = reshape(%229, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %236 = @func_7924(%230, %231, %232, %233, %234, %235) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(6, 15, 2), float64], Tensor[(180, 1), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(15, 10, 13), float32], Tensor[(3, 108), float32], Tensor[(16, 10, 9), float32], Tensor[(144), float32], Tensor[(9, 12, 16), int64], Tensor[(8, 216), uint32], Tensor[(72), int8], Tensor[(14, 2, 8), float64], Tensor[(1, 224), float64], Tensor[(30), uint64], Tensor[(16, 10, 9), float32], Tensor[(9, 12, 16), bool]) */;
  %237 = cast(%var_10096, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %238 = shape_of(%var_10090, dtype="int32") /* ty=Tensor[(2), int32] */;
  %239 = cast(%var_10090, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %241 = cast(%var_10087, dtype="int16") /* ty=Tensor[(2548), int16] */;
  %242 = cast(%var_10088, dtype="int16") /* ty=Tensor[(1950, 1), int16] */;
  %243 = %236.3;
  %244 = divide(%239, %240) /* ty=Tensor[(3, 24), float32] */;
  %245 = bitwise_xor(%241, %242) /* ty=Tensor[(1950, 2548), int16] */;
  (%226, %243, %var_10089, %244, %245)
}

def @func_9627() -> (Tensor[(10, 13, 6), float32], Tensor[(16, 10, 9), float32], Tensor[(24, 6), float32]) {
  %246 = cast(meta[relay.Constant][26] /* ty=Tensor[(24, 6), float32] */, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %247 = reshape(%246, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), float32] */;
  %248 = @func_5760(%247) /* ty=(Tensor[(16, 10, 9), float32],) */;
  %249 = @func_8605() /* ty=Tensor[(10, 13, 6), float32] */;
  %250 = %248.0;
  (%249, %250, meta[relay.Constant][26] /* ty=Tensor[(24, 6), float32] */)
}

def @func_1331(%var_1326: Tensor[(7, 16, 14), float32], %var_1327: Tensor[(7, 16, 14), float32]) -> Tensor[(7, 16, 14), float32] {
  %251 = cast(%var_1327, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %252 = shape_of(%var_1326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%var_1326, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  minimum(%253, %254) /* ty=Tensor[(7, 16, 14), float32] */
}

def @func_9135(%var_9110: Tensor[(504), float32], %var_9111: Tensor[(1, 60), float32], %var_9113: Tensor[(16, 60), float32]) -> (Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(16, 60), float32], Tensor[(180), float64], Tensor[(864), float32], Tensor[(30), uint64], Tensor[(6, 30), float64], Tensor[(10, 13, 6), float64]) {
  %255 = cast(%var_9110, dtype="float32") /* ty=Tensor[(504), float32] */;
  %256 = cast(%var_9111, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %257 = reshape(%255, newshape=[14, 3, 12]) /* ty=Tensor[(14, 3, 12), float32] */;
  %258 = reshape(%256, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %259 = @func_6259(%257, %258) /* ty=(Tensor[(14, 3, 12), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(4, 15, 1), float32], Tensor[(60, 1), float32]) */;
  %260 = cast(%var_9111, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %261 = cast(%var_9113, dtype="float32") /* ty=Tensor[(16, 60), float32] */;
  %262 = cast(meta[relay.Constant][27] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %263 = cast(meta[relay.Constant][28] /* ty=Tensor[(30), uint64] */, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %264 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 30), float64] */, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
  %265 = reshape(%262, newshape=[6, 12, 12]) /* ty=Tensor[(6, 12, 12), float32] */;
  %266 = reshape(%263, newshape=[30]) /* ty=Tensor[(30), uint64] */;
  %267 = reshape(%264, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %268 = @func_6038(%265, %266, %267) /* ty=(Tensor[(6, 12, 12), bool], uint64, Tensor[(224), float64], Tensor[(30), uint64], Tensor[(1, 10, 3), uint64], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %269 = @func_8605() /* ty=Tensor[(10, 13, 6), float32] */;
  %270 = %259.1;
  %271 = divide(%260, %261) /* ty=Tensor[(16, 60), float32] */;
  %272 = %268.6;
  %273 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  (%269, %270, %var_9110, %271, %272, meta[relay.Constant][27] /* ty=Tensor[(864), float32] */, meta[relay.Constant][28] /* ty=Tensor[(30), uint64] */, meta[relay.Constant][29] /* ty=Tensor[(6, 30), float64] */, %273)
}

def @main(%var_12196: Tensor[(3, 7, 4), float32]) -> (Tensor[(3, 7, 4), float32],) {
  %274 = cast(%var_12196, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %275 = sigmoid(%274) /* ty=Tensor[(3, 7, 4), float32] */;
  (%275,)
}

def @func_8785() -> (Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) {
  %276 = cast(meta[relay.Constant][30] /* ty=Tensor[(450), uint8] */, dtype="uint8") /* ty=Tensor[(450), uint8] */;
  %277 = cast(meta[relay.Constant][31] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %278 = reshape(%276, newshape=[15, 5, 6]) /* ty=Tensor[(15, 5, 6), uint8] */;
  %279 = reshape(%277, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %280 = @func_2137(%278, %279) /* ty=(Tensor[(15, 5, 6), uint8], Tensor[(60), float32], Tensor[(72), int16], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(60), float32]) */;
  %281 = cast(meta[relay.Constant][32] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %282 = reshape(%281, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), float64] */;
  %283 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
  %284 = %283.0;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %286 = sinh(%285) /* ty=Tensor[(10, 13, 6), float64] */;
  %287 = cast(%286, dtype="float32") /* ty=Tensor[(10, 13, 6), float32] */;
  %288 = %280.1;
  %289 = @func_7463(%282) /* ty=Tensor[(13, 1, 14), float64] */;
  %290 = log10(%287) /* ty=Tensor[(10, 13, 6), float32] */;
  (%288, meta[relay.Constant][30] /* ty=Tensor[(450), uint8] */, meta[relay.Constant][31] /* ty=Tensor[(324), float32] */, %289, meta[relay.Constant][32] /* ty=Tensor[(182), float64] */, %290)
}

def @func_9310() -> Tensor[(324), float32] {
  %291 = @func_9162() /* ty=(Tensor[(324), float32],) */;
  %291.0
}

def @func_11679() -> (Tensor[(180), float64],) {
  %292 = @func_10582() /* ty=(Tensor[(180), float64],) */;
  %293 = %292.0;
  (%293,)
}

def @func_5639(%var_5614: Tensor[(9, 12, 16), uint32], %var_5628: Tensor[(72), int8]) -> (Tensor[(9, 12, 16), bool], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(9, 12, 16), int64]) {
  %294 = cast(%var_5614, dtype="bool") /* ty=Tensor[(9, 12, 16), bool] */;
  %295 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(9, 12, 16), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 12, 16), uint32] */, dtype="bool") /* ty=Tensor[(9, 12, 16), bool] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %298 = cast(%var_5628, dtype="int8") /* ty=Tensor[(72), int8] */;
  %299 = cast(%var_5628, dtype="int8") /* ty=Tensor[(72), int8] */;
  %300 = reshape(%298, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %301 = reshape(%299, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %302 = @func_2444(%300, %301) /* ty=(Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %303 = cast(%var_5614, dtype="int64") /* ty=Tensor[(9, 12, 16), int64] */;
  %304 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(9, 12, 16), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 12, 16), uint32] */, dtype="int64") /* ty=Tensor[(9, 12, 16), int64] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %307 = greater(%296, %297) /* ty=Tensor[(9, 12, 16), bool] */;
  %308 = %302.0;
  %309 = bitwise_and(%305, %306) /* ty=Tensor[(9, 12, 16), int64] */;
  (%307, %308, %var_5628, %309)
}

def @func_11429(%var_11383: Tensor[(1950), float32], %var_11385: Tensor[(144), float32], %var_11397: Tensor[(1568, 1), float32]) -> (Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(324), float32], Tensor[(144), float32], Tensor[(72), int8], Tensor[(7, 16, 14), float32], Tensor[(1568, 1), float32], Tensor[(10, 13, 6), float64], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(60), float32]) {
  %310 = @func_9216() /* ty=(Tensor[(450), uint8], Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) */;
  %311 = %310.1;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %313 = reshape(%312, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), float64] */;
  %314 = @func_8927(%313) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32]) */;
  %315 = cast(meta[relay.Constant][34] /* ty=Tensor[(2548), float32] */, dtype="float32") /* ty=Tensor[(2548), float32] */;
  %316 = cast(meta[relay.Constant][34] /* ty=Tensor[(2548), float32] */, dtype="float32") /* ty=Tensor[(2548), float32] */;
  %317 = cast(%var_11383, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %318 = cast(meta[relay.Constant][35] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %319 = cast(%var_11385, dtype="float32") /* ty=Tensor[(144), float32] */;
  %320 = cast(meta[relay.Constant][36] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %321 = reshape(%315, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
  %322 = reshape(%316, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
  %323 = reshape(%317, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %324 = reshape(%318, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
  %325 = reshape(%319, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %326 = reshape(%320, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %327 = @func_7924(%321, %322, %323, %324, %325, %326) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(6, 15, 2), float64], Tensor[(180, 1), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(15, 10, 13), float32], Tensor[(3, 108), float32], Tensor[(16, 10, 9), float32], Tensor[(144), float32], Tensor[(9, 12, 16), int64], Tensor[(8, 216), uint32], Tensor[(72), int8], Tensor[(14, 2, 8), float64], Tensor[(1, 224), float64], Tensor[(30), uint64], Tensor[(16, 10, 9), float32], Tensor[(9, 12, 16), bool]) */;
  %328 = cast(%var_11397, dtype="float32") /* ty=Tensor[(1568, 1), float32] */;
  %329 = cast(%var_11397, dtype="float32") /* ty=Tensor[(1568, 1), float32] */;
  %330 = reshape(%328, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %331 = reshape(%329, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %332 = @func_11290() /* ty=(Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) */;
  %333 = cast(meta[relay.Constant][37] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %334 = cast(meta[relay.Constant][38] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %335 = reshape(%333, newshape=[14, 3, 12]) /* ty=Tensor[(14, 3, 12), float32] */;
  %336 = reshape(%334, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %337 = @func_6259(%335, %336) /* ty=(Tensor[(14, 3, 12), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(4, 15, 1), float32], Tensor[(60, 1), float32]) */;
  %338 = %314.1;
  %339 = %327.3;
  %340 = @func_1331(%330, %331) /* ty=Tensor[(7, 16, 14), float32] */;
  %341 = %332.0;
  %342 = %337.1;
  (%311, %338, %339, meta[relay.Constant][34] /* ty=Tensor[(2548), float32] */, %var_11383, meta[relay.Constant][35] /* ty=Tensor[(324), float32] */, %var_11385, meta[relay.Constant][36] /* ty=Tensor[(72), int8] */, %340, %var_11397, %341, %342, meta[relay.Constant][37] /* ty=Tensor[(504), float32] */, meta[relay.Constant][38] /* ty=Tensor[(60), float32] */)
}

def @func_10034(%var_9885: Tensor[(720), float32], %var_9905: Tensor[(72), int8], %var_9962: Tensor[(1188), int8], %var_9988: Tensor[(1, 560), float32], %var_10003: Tensor[(128), float32], %var_10004: Tensor[(1568), float32], %var_10032: Tensor[(528), uint64]) -> (Tensor[(8, 6, 15), float32], Tensor[(720), float32], Tensor[(324), bool], Tensor[(180), float64], Tensor[(72), int8], Tensor[(1, 10, 3), uint64], Tensor[(30), uint64], Tensor[(60), float32], Tensor[(260), float32], Tensor[(1188), int8], Tensor[(260), float32], Tensor[(324), uint64], Tensor[(8, 14, 5), float64], Tensor[(1, 560), float32], Tensor[(1568), float32], Tensor[(128), float32], Tensor[(1568), float32], Tensor[(4, 11, 12), uint64], Tensor[(44), uint64], Tensor[(528), uint64]) {
  %343 = cast(%var_9885, dtype="float32") /* ty=Tensor[(720), float32] */;
  %344 = reshape(%343, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float32] */;
  %345 = @func_4792(%344) /* ty=(Tensor[(8, 6, 15), float32],) */;
  %346 = @func_9182() /* ty=(Tensor[(324), float32],) */;
  %347 = %346.0;
  %348 = cast(meta[relay.Constant][39] /* ty=Tensor[(324), float32] */, dtype="bool") /* ty=Tensor[(324), bool] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(1), int32] */;
  %350 = cast(%347, dtype="bool") /* ty=Tensor[(324), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?), bool] */;
  %352 = cast(%var_9905, dtype="int8") /* ty=Tensor[(72), int8] */;
  %353 = cast(%var_9905, dtype="int8") /* ty=Tensor[(72), int8] */;
  %354 = reshape(%352, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %355 = reshape(%353, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %356 = @func_2444(%354, %355) /* ty=(Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %357 = cast(meta[relay.Constant][40] /* ty=Tensor[(30), uint64] */, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %358 = reshape(%357, newshape=[30]) /* ty=Tensor[(30), uint64] */;
  %359 = @func_4464(%358) /* ty=(Tensor[(15, 8, 7), uint32], Tensor[(15, 8, 7), float64], Tensor[(60), float32], Tensor[(324), float32], Tensor[(1, 10, 3), uint64], uint64, Tensor[(30), uint64]) */;
  %360 = cast(%347, dtype="float32") /* ty=Tensor[(324), float32] */;
  %361 = reshape(%360, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %362 = @func_1380(%361) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %363 = cast(%var_9962, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %364 = cast(meta[relay.Constant][41] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %365 = cast(%var_9962, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %366 = reshape(%363, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), int8] */;
  %367 = reshape(%364, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %368 = reshape(%365, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), float32] */;
  %369 = @func_9848(%366, %367, %368) /* ty=(Tensor[(8, 6, 15), float32], Tensor[(180, 4), float32], Tensor[(13, 1, 14), float64], Tensor[(7, 16, 14), float32], Tensor[(56, 28), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32], Tensor[(7, 16, 14), float32], Tensor[(12, 11, 9), int32]) */;
  %370 = cast(meta[relay.Constant][39] /* ty=Tensor[(324), float32] */, dtype="uint64") /* ty=Tensor[(324), uint64] */;
  %371 = shape_of(%347, dtype="int32") /* ty=Tensor[(1), int32] */;
  %372 = cast(%347, dtype="uint64") /* ty=Tensor[(324), uint64] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %374 = cast(%var_9988, dtype="float32") /* ty=Tensor[(1, 560), float32] */;
  %375 = %362.2;
  %376 = cast(%375, dtype="float32") /* ty=Tensor[(60), float32] */;
  %377 = reshape(%374, newshape=[8, 14, 5]) /* ty=Tensor[(8, 14, 5), float32] */;
  %378 = reshape(%376, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %379 = @func_7390(%377, %378) /* ty=(Tensor[(8, 14, 5), float64], Tensor[(8, 14, 5), float32], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %380 = cast(%var_10003, dtype="float32") /* ty=Tensor[(128), float32] */;
  %381 = cast(%var_10004, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %382 = reshape(%380, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), float32] */;
  %383 = reshape(%381, newshape=[1568]) /* ty=Tensor[(1568), float32] */;
  %384 = @func_7711(%382, %383) /* ty=(Tensor[(8, 4, 4), float32], Tensor[(7, 16, 14), float32], Tensor[(1568), float32]) */;
  %385 = cast(meta[relay.Constant][42] /* ty=Tensor[(44), uint64] */, dtype="uint64") /* ty=Tensor[(44), uint64] */;
  %386 = cast(%var_10032, dtype="uint64") /* ty=Tensor[(528), uint64] */;
  %387 = reshape(%385, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), uint64] */;
  %388 = reshape(%386, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), uint64] */;
  %389 = @func_988(%387, %388) /* ty=(Tensor[(4, 11, 12), uint64],) */;
  %390 = %345.0;
  %391 = logical_or(%350, %351) /* ty=Tensor[(324), bool] */;
  %392 = %356.2;
  %393 = %359.4;
  %394 = %369.6;
  %395 = bitwise_and(%372, %373) /* ty=Tensor[(324), uint64] */;
  %396 = %379.0;
  %397 = %384.2;
  %398 = %389.0;
  (%390, %var_9885, %391, %392, %var_9905, %393, meta[relay.Constant][40] /* ty=Tensor[(30), uint64] */, %375, %394, %var_9962, meta[relay.Constant][41] /* ty=Tensor[(260), float32] */, %395, %396, %var_9988, %397, %var_10003, %var_10004, %398, meta[relay.Constant][42] /* ty=Tensor[(44), uint64] */, %var_10032)
}

def @func_9216() -> (Tensor[(450), uint8], Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) {
  %399 = @func_8828() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %400 = cast(meta[relay.Constant][43] /* ty=Tensor[(784, 2), float32] */, dtype="float32") /* ty=Tensor[(784, 2), float32] */;
  %401 = reshape(%400, newshape=[1, 1568]) /* ty=Tensor[(1, 1568), float32] */;
  %402 = @func_8469(%401) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(7, 16, 14), float32], Tensor[(128), float32], Tensor[(1, 1568), float32]) */;
  %403 = %399.0;
  %404 = %402.0;
  (%403, %404, meta[relay.Constant][43] /* ty=Tensor[(784, 2), float32] */)
}

def @func_11303() -> (Tensor[(180), float64],) {
  %405 = @func_10758() /* ty=Tensor[(180), float64] */;
  (%405,)
}

def @func_988(%var_982: Tensor[(4, 11, 1), uint64], %var_983: Tensor[(4, 11, 12), uint64]) -> (Tensor[(4, 11, 12), uint64],) {
  %406 = cast(%var_982, dtype="uint64") /* ty=Tensor[(4, 11, 1), uint64] */;
  %407 = cast(%var_983, dtype="uint64") /* ty=Tensor[(4, 11, 12), uint64] */;
  %408 = right_shift(%406, %407) /* ty=Tensor[(4, 11, 12), uint64] */;
  (%408,)
}

def @func_3051(%var_3026: Tensor[(14, 2, 8), float64], %var_3040: Tensor[(5, 6), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(1, 10, 3), uint64], uint64, Tensor[(5, 6), uint64]) {
  %409 = cast(%var_3026, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %410 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %411 = cast(%var_3040, dtype="uint64") /* ty=Tensor[(5, 6), uint64] */;
  %412 = reshape(%410, newshape=[]) /* ty=uint64 */;
  %413 = reshape(%411, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), uint64] */;
  %414 = @func_2376(%412, %413) /* ty=(Tensor[(1, 10, 3), uint64],) */;
  %415 = atanh(%409) /* ty=Tensor[(14, 2, 8), float64] */;
  %416 = %414.0;
  (%415, %416, meta[relay.Constant][44] /* ty=uint64 */, %var_3040)
}

def @func_10062() -> (Tensor[(182), float64],) {
  %417 = @func_9711() /* ty=(Tensor[(182), float64], Tensor[(13, 15, 12), float64], Tensor[(1170, 2), float64]) */;
  %418 = %417.0;
  (%418,)
}

def @func_8193(%var_8160: uint32, %var_8161: Tensor[(15, 2, 8), uint32], %var_8180: Tensor[(2548), float32], %var_8182: Tensor[(9, 36), float32], %var_8184: Tensor[(72), int8]) -> (Tensor[(15, 2, 8), float32], Tensor[(15, 2, 8), float64], Tensor[(72), int8], Tensor[(2548), float32], Tensor[(1950, 1), float32], Tensor[(9, 36), float32], Tensor[(144), float32], Tensor[(72), int8]) {
  %419 = cast(%var_8160, dtype="bool") /* ty=bool */;
  %420 = cast(%var_8161, dtype="bool") /* ty=Tensor[(15, 2, 8), bool] */;
  %421 = greater_equal(%419, %420) /* ty=Tensor[(15, 2, 8), bool] */;
  %422 = cast(%421, dtype="float32") /* ty=Tensor[(15, 2, 8), float32] */;
  %423 = shape_of(%var_8161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%var_8161, dtype="float32") /* ty=Tensor[(15, 2, 8), float32] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %426 = cast(%var_8161, dtype="float64") /* ty=Tensor[(15, 2, 8), float64] */;
  %427 = cast(%var_8180, dtype="float32") /* ty=Tensor[(2548), float32] */;
  %428 = cast(%var_8180, dtype="float32") /* ty=Tensor[(2548), float32] */;
  %429 = cast(meta[relay.Constant][45] /* ty=Tensor[(1950, 1), float32] */, dtype="float32") /* ty=Tensor[(1950, 1), float32] */;
  %430 = cast(%var_8182, dtype="float32") /* ty=Tensor[(9, 36), float32] */;
  %431 = cast(meta[relay.Constant][46] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %432 = cast(%var_8184, dtype="int8") /* ty=Tensor[(72), int8] */;
  %433 = reshape(%427, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
  %434 = reshape(%428, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
  %435 = reshape(%429, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %436 = reshape(%430, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
  %437 = reshape(%431, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %438 = reshape(%432, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %439 = @func_7924(%433, %434, %435, %436, %437, %438) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(6, 15, 2), float64], Tensor[(180, 1), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(15, 10, 13), float32], Tensor[(3, 108), float32], Tensor[(16, 10, 9), float32], Tensor[(144), float32], Tensor[(9, 12, 16), int64], Tensor[(8, 216), uint32], Tensor[(72), int8], Tensor[(14, 2, 8), float64], Tensor[(1, 224), float64], Tensor[(30), uint64], Tensor[(16, 10, 9), float32], Tensor[(9, 12, 16), bool]) */;
  %440 = power(%424, %425) /* ty=Tensor[(15, 2, 8), float32] */;
  %441 = atanh(%426) /* ty=Tensor[(15, 2, 8), float64] */;
  %442 = %439.11;
  (%440, %441, %442, %var_8180, meta[relay.Constant][45] /* ty=Tensor[(1950, 1), float32] */, %var_8182, meta[relay.Constant][46] /* ty=Tensor[(144), float32] */, %var_8184)
}

def @func_2978(%var_2954: Tensor[(5, 13, 4), float32]) -> Tensor[(5, 13, 4), float32] {
  %443 = cast(%var_2954, dtype="float32") /* ty=Tensor[(5, 13, 4), float32] */;
  %444 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(5, 13, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 13, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 13, 4), float32] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%445, %446) /* ty=Tensor[(5, 13, 4), float32] */
}

def @func_4464(%var_4462: Tensor[(30), uint64]) -> (Tensor[(15, 8, 7), uint32], Tensor[(15, 8, 7), float64], Tensor[(60), float32], Tensor[(324), float32], Tensor[(1, 10, 3), uint64], uint64, Tensor[(30), uint64]) {
  %447 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 8, 7), float32] */, dtype="float32") /* ty=Tensor[(15, 8, 7), float32] */;
  %448 = acosh(%447) /* ty=Tensor[(15, 8, 7), float32] */;
  %449 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 8, 7), float32] */, dtype="uint32") /* ty=Tensor[(15, 8, 7), uint32] */;
  %450 = shape_of(%448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%448, dtype="uint32") /* ty=Tensor[(15, 8, 7), uint32] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %453 = cast(%448, dtype="float64") /* ty=Tensor[(15, 8, 7), float64] */;
  %454 = cast(meta[relay.Constant][49] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %455 = reshape(%454, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %456 = @func_1380(%455) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %457 = cast(meta[relay.Constant][50] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %458 = cast(%var_4462, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %459 = reshape(%457, newshape=[]) /* ty=uint64 */;
  %460 = reshape(%458, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), uint64] */;
  %461 = @func_2376(%459, %460) /* ty=(Tensor[(1, 10, 3), uint64],) */;
  %462 = maximum(%451, %452) /* ty=Tensor[(15, 8, 7), uint32] */;
  %463 = asinh(%453) /* ty=Tensor[(15, 8, 7), float64] */;
  %464 = %456.2;
  %465 = %461.0;
  (%462, %463, %464, meta[relay.Constant][49] /* ty=Tensor[(324), float32] */, %465, meta[relay.Constant][50] /* ty=uint64 */, %var_4462)
}

def @func_10260(%var_10250: Tensor[(3, 1, 14), float64]) -> Tensor[(3, ?, 14), bool] {
  %466 = cast(%var_10250, dtype="float64") /* ty=Tensor[(3, 1, 14), float64] */;
  %467 = sin(%466) /* ty=Tensor[(3, 1, 14), float64] */;
  %468 = cast(%var_10250, dtype="bool") /* ty=Tensor[(3, 1, 14), bool] */;
  %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%467, dtype="bool") /* ty=Tensor[(3, 1, 14), bool] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%470, %471) /* ty=Tensor[(3, ?, 14), bool] */
}

def @func_5246(%var_5185: uint8, %var_5194: Tensor[(324), float32]) -> (Tensor[(60), float32], Tensor[(324), float32], Tensor[(?, 5, 3), bool], Tensor[(1, 5, 3), float64], Tensor[(13, 4, 13), bool], Tensor[(169, 4), int32]) {
  %472 = cast(%var_5194, dtype="float32") /* ty=Tensor[(324), float32] */;
  %473 = reshape(%472, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %474 = @func_1380(%473) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %475 = cast(%var_5185, dtype="uint8") /* ty=uint8 */;
  %476 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 5, 3), uint8] */, dtype="uint8") /* ty=Tensor[(1, 5, 3), uint8] */;
  %477 = logical_xor(%475, %476) /* ty=Tensor[(1, 5, 3), uint8] */;
  %478 = cast(%477, dtype="uint32") /* ty=Tensor[(1, 5, 3), uint32] */;
  %479 = cast(%var_5185, dtype="uint32") /* ty=uint32 */;
  %480 = left_shift(%478, %479) /* ty=Tensor[(1, 5, 3), uint32] */;
  %481 = cast(%480, dtype="float64") /* ty=Tensor[(1, 5, 3), float64] */;
  %482 = sigmoid(%481) /* ty=Tensor[(1, 5, 3), float64] */;
  %483 = cast(%480, dtype="bool") /* ty=Tensor[(1, 5, 3), bool] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%482, dtype="bool") /* ty=Tensor[(1, 5, 3), bool] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %487 = greater(%485, %486) /* ty=Tensor[(?, 5, 3), bool] */;
  %488 = cast(%477, dtype="bool") /* ty=Tensor[(1, 5, 3), bool] */;
  %489 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(%487, dtype="bool") /* ty=Tensor[(?, 5, 3), bool] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %492 = cast(%482, dtype="float64") /* ty=Tensor[(1, 5, 3), float64] */;
  %493 = cast(meta[relay.Constant][52] /* ty=Tensor[(169, 4), int32] */, dtype="int32") /* ty=Tensor[(169, 4), int32] */;
  %494 = cast(meta[relay.Constant][52] /* ty=Tensor[(169, 4), int32] */, dtype="int32") /* ty=Tensor[(169, 4), int32] */;
  %495 = reshape(%493, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %496 = reshape(%494, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %497 = %474.2;
  %498 = less(%490, %491) /* ty=Tensor[(?, 5, 3), bool] */;
  %499 = log10(%492) /* ty=Tensor[(1, 5, 3), float64] */;
  %500 = @func_4351(%495, %496) /* ty=Tensor[(13, 4, 13), bool] */;
  (%497, %var_5194, %498, %499, %500, meta[relay.Constant][52] /* ty=Tensor[(169, 4), int32] */)
}

def @func_3394(%var_3332: Tensor[(3, 14, 8), float32], %var_3360: Tensor[(224), float64], %var_3361: Tensor[(30), uint64], %var_3368: Tensor[(72), int8], %var_3385: Tensor[(60), float32], %var_3392: Tensor[(260), float32]) -> (Tensor[(4, 3, 15), float64], Tensor[(180), float64], Tensor[(3, 14, 8), float32], Tensor[(5, 6), uint64], Tensor[(224), float64], Tensor[(30), uint64], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(3, 14, 8), float64], Tensor[(3, 14, 8), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32]) {
  %501 = cast(meta[relay.Constant][53] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %502 = reshape(%501, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
  %503 = cast(%var_3332, dtype="float32") /* ty=Tensor[(3, 14, 8), float32] */;
  %504 = cos(%503) /* ty=Tensor[(3, 14, 8), float32] */;
  %505 = cast(%var_3332, dtype="float32") /* ty=Tensor[(3, 14, 8), float32] */;
  %506 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %507 = cast(%504, dtype="float32") /* ty=Tensor[(3, 14, 8), float32] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %509 = cast(%var_3360, dtype="float64") /* ty=Tensor[(224), float64] */;
  %510 = cast(%var_3361, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %511 = reshape(%509, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %512 = reshape(%510, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint64] */;
  %513 = @func_3051(%511, %512) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(1, 10, 3), uint64], uint64, Tensor[(5, 6), uint64]) */;
  %514 = cast(%var_3368, dtype="int8") /* ty=Tensor[(72), int8] */;
  %515 = cast(%var_3368, dtype="int8") /* ty=Tensor[(72), int8] */;
  %516 = reshape(%514, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %517 = reshape(%515, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %518 = @func_2444(%516, %517) /* ty=(Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %519 = cast(%504, dtype="float64") /* ty=Tensor[(3, 14, 8), float64] */;
  %520 = cast(%var_3332, dtype="float64") /* ty=Tensor[(3, 14, 8), float64] */;
  %521 = cast(%var_3385, dtype="float32") /* ty=Tensor[(60), float32] */;
  %522 = reshape(%521, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %523 = @func_1034(%522) /* ty=(Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %524 = cast(%var_3392, dtype="float32") /* ty=Tensor[(260), float32] */;
  %525 = reshape(%524, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), float32] */;
  %526 = @func_1894(%502) /* ty=Tensor[(4, 3, 15), float64] */;
  %527 = mod(%507, %508) /* ty=Tensor[(3, 14, 8), float32] */;
  %528 = %513.3;
  %529 = %518.0;
  %530 = tan(%519) /* ty=Tensor[(3, 14, 8), float64] */;
  %531 = atan(%520) /* ty=Tensor[(3, 14, 8), float64] */;
  %532 = %523.1;
  %533 = @func_2978(%525) /* ty=Tensor[(5, 13, 4), float32] */;
  (%526, meta[relay.Constant][53] /* ty=Tensor[(180), float64] */, %527, %528, %var_3360, %var_3361, %529, %var_3368, %530, %531, %532, %var_3385, %533, %var_3392)
}

def @func_11193() -> Tensor[(180), float64] {
  %534 = @func_8828() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %534.2
}

def @func_11089() -> (Tensor[(15, 10, 13), float32], Tensor[(10, 13, 6), float64], Tensor[(180), float64]) {
  %535 = @func_10867() /* ty=(Tensor[(10, 13, 6), float32], Tensor[(60), float32], Tensor[(15, 10, 13), float32], Tensor[(4, 3, 15), float64], Tensor[(30, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(450), uint8]) */;
  %536 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
  %537 = @func_8828() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %538 = %535.5;
  %539 = %536.0;
  %540 = %537.2;
  (%538, %539, %540)
}

def @func_9848(%var_9775: Tensor[(12, 11, 9), int8], %var_9824: Tensor[(260), float32], %var_9842: Tensor[(12, 11, 9), float32]) -> (Tensor[(8, 6, 15), float32], Tensor[(180, 4), float32], Tensor[(13, 1, 14), float64], Tensor[(7, 16, 14), float32], Tensor[(56, 28), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32], Tensor[(7, 16, 14), float32], Tensor[(12, 11, 9), int32]) {
  %541 = cast(meta[relay.Constant][54] /* ty=Tensor[(180, 4), float32] */, dtype="float32") /* ty=Tensor[(180, 4), float32] */;
  %542 = reshape(%541, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float32] */;
  %543 = @func_4792(%542) /* ty=(Tensor[(8, 6, 15), float32],) */;
  %544 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
  %545 = cast(meta[relay.Constant][55] /* ty=Tensor[(56, 28), float32] */, dtype="float32") /* ty=Tensor[(56, 28), float32] */;
  %546 = reshape(%545, newshape=[1, 1568]) /* ty=Tensor[(1, 1568), float32] */;
  %547 = @func_8469(%546) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(7, 16, 14), float32], Tensor[(128), float32], Tensor[(1, 1568), float32]) */;
  %548 = cast(%var_9824, dtype="float32") /* ty=Tensor[(260), float32] */;
  %549 = reshape(%548, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), float32] */;
  %550 = %547.1;
  %551 = cast(%550, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %552 = cast(%550, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %553 = reshape(%551, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %554 = reshape(%552, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %555 = cast(meta[relay.Constant][56] /* ty=Tensor[(12, 11, 9), int8] */, dtype="bool") /* ty=Tensor[(12, 11, 9), bool] */;
  %556 = shape_of(%var_9775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%var_9775, dtype="bool") /* ty=Tensor[(12, 11, 9), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %559 = greater_equal(%557, %558) /* ty=Tensor[(12, 11, 9), bool] */;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
  %561 = sin(%560) /* ty=Tensor[(12, 11, 9), float32] */;
  %562 = cast(%var_9775, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
  %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%561, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %566 = power(%564, %565) /* ty=Tensor[(12, 11, 9), float32] */;
  %567 = cast(%566, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
  %568 = rsqrt(%567) /* ty=Tensor[(12, 11, 9), float32] */;
  %569 = cast(%var_9842, dtype="int32") /* ty=Tensor[(12, 11, 9), int32] */;
  %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%568, dtype="int32") /* ty=Tensor[(12, 11, 9), int32] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %573 = %543.0;
  %574 = %544.3;
  %575 = @func_2978(%549) /* ty=Tensor[(5, 13, 4), float32] */;
  %576 = @func_1331(%553, %554) /* ty=Tensor[(7, 16, 14), float32] */;
  %577 = logical_xor(%571, %572) /* ty=Tensor[(12, 11, 9), int32] */;
  (%573, meta[relay.Constant][54] /* ty=Tensor[(180, 4), float32] */, %574, %550, meta[relay.Constant][55] /* ty=Tensor[(56, 28), float32] */, %575, %var_9824, %576, %577)
}

def @func_4792(%var_4789: Tensor[(8, 6, 15), float32]) -> (Tensor[(8, 6, 15), float32],) {
  %578 = cast(%var_4789, dtype="float32") /* ty=Tensor[(8, 6, 15), float32] */;
  %579 = sinh(%578) /* ty=Tensor[(8, 6, 15), float32] */;
  (%579,)
}

def @func_10436(%var_10420: Tensor[(12, 42), float32], %var_10421: Tensor[(60, 1), float32]) -> (Tensor[(10, 13, 6), float64], Tensor[(12, 42), float32], Tensor[(960), float32], Tensor[(60, 180), int8], Tensor[(60, 180), bool]) {
  %580 = cast(%var_10420, dtype="float32") /* ty=Tensor[(12, 42), float32] */;
  %581 = cast(%var_10421, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
  %582 = cast(meta[relay.Constant][57] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %583 = reshape(%580, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %584 = reshape(%581, newshape=[1, 60]) /* ty=Tensor[(1, 60), float32] */;
  %585 = reshape(%582, newshape=[16, 60]) /* ty=Tensor[(16, 60), float32] */;
  %586 = @func_9135(%583, %584, %585) /* ty=(Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(16, 60), float32], Tensor[(180), float64], Tensor[(864), float32], Tensor[(30), uint64], Tensor[(6, 30), float64], Tensor[(10, 13, 6), float64]) */;
  %587 = %586.4;
  %588 = cast(%587, dtype="int8") /* ty=Tensor[(180), int8] */;
  %589 = cast(%var_10421, dtype="int8") /* ty=Tensor[(60, 1), int8] */;
  %590 = cast(%587, dtype="bool") /* ty=Tensor[(180), bool] */;
  %591 = cast(%var_10421, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %592 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  %593 = right_shift(%588, %589) /* ty=Tensor[(60, 180), int8] */;
  %594 = greater(%590, %591) /* ty=Tensor[(60, 180), bool] */;
  (%592, %var_10420, meta[relay.Constant][57] /* ty=Tensor[(960), float32] */, %593, %594)
}

def @func_7463(%var_7459: Tensor[(13, 1, 14), float64]) -> Tensor[(13, 1, 14), float64] {
  %595 = cast(%var_7459, dtype="float64") /* ty=Tensor[(13, 1, 14), float64] */;
  acosh(%595) /* ty=Tensor[(13, 1, 14), float64] */
}

def @func_8828() -> (Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
  %596 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
  %597 = cast(meta[relay.Constant][58] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %598 = reshape(%597, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
  %599 = %596.1;
  %600 = @func_1894(%598) /* ty=Tensor[(4, 3, 15), float64] */;
  (%599, %600, meta[relay.Constant][58] /* ty=Tensor[(180), float64] */)
}

def @func_201(%var_188: Tensor[(15, 10, 13), float32]) -> (Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) {
  %601 = cast(%var_188, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
  %602 = cast(%var_188, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
  %603 = asin(%601) /* ty=Tensor[(15, 10, 13), float32] */;
  %604 = atanh(%602) /* ty=Tensor[(15, 10, 13), float32] */;
  (%603, %604)
}

def @func_6259(%var_6244: Tensor[(14, 3, 12), float32], %var_6256: Tensor[(60, 1), float32]) -> (Tensor[(14, 3, 12), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(4, 15, 1), float32], Tensor[(60, 1), float32]) {
  %605 = cast(%var_6244, dtype="float32") /* ty=Tensor[(14, 3, 12), float32] */;
  %606 = cast(meta[relay.Constant][59] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %607 = reshape(%606, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
  %608 = @func_201(%607) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */;
  %609 = cast(%var_6256, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
  %610 = reshape(%609, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %611 = @func_266(%610) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
  %612 = log2(%605) /* ty=Tensor[(14, 3, 12), float32] */;
  %613 = %608.1;
  %614 = %611.0;
  (%612, %613, meta[relay.Constant][59] /* ty=Tensor[(1950), float32] */, %614, %var_6256)
}

def @func_5916(%var_5909: Tensor[(6, 15, 2), float64]) -> (Tensor[(6, 15, 2), float64],) {
  %615 = cast(%var_5909, dtype="float64") /* ty=Tensor[(6, 15, 2), float64] */;
  %616 = atan(%615) /* ty=Tensor[(6, 15, 2), float64] */;
  (%616,)
}

def @func_11991() -> (Tensor[(324), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(144), float32], Tensor[(1568), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64]) {
  %617 = @func_9162() /* ty=(Tensor[(324), float32],) */;
  %618 = cast(meta[relay.Constant][60] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %619 = cast(meta[relay.Constant][61] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %620 = cast(meta[relay.Constant][62] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %621 = reshape(%618, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %622 = reshape(%619, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %623 = reshape(%620, newshape=[1568, 1]) /* ty=Tensor[(1568, 1), float32] */;
  %624 = @func_11429(%621, %622, %623) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(324), float32], Tensor[(144), float32], Tensor[(72), int8], Tensor[(7, 16, 14), float32], Tensor[(1568, 1), float32], Tensor[(10, 13, 6), float64], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(60), float32]) */;
  %625 = cast(meta[relay.Constant][63] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %626 = reshape(%625, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), float64] */;
  %627 = @func_5916(%626) /* ty=(Tensor[(6, 15, 2), float64],) */;
  %628 = %617.0;
  %629 = %624.3;
  %630 = %627.0;
  (%628, %629, meta[relay.Constant][60] /* ty=Tensor[(1950), float32] */, meta[relay.Constant][61] /* ty=Tensor[(144), float32] */, meta[relay.Constant][62] /* ty=Tensor[(1568), float32] */, %630, meta[relay.Constant][63] /* ty=Tensor[(180), float64] */)
}

def @func_10512() -> (Tensor[(324), float32], Tensor[(1, 13, 16), float64], Tensor[(?, 13, 16), float32]) {
  %631 = @func_9182() /* ty=(Tensor[(324), float32],) */;
  %632 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 208), float64] */, dtype="float64") /* ty=Tensor[(1, 208), float64] */;
  %633 = reshape(%632, newshape=[1, 13, 16]) /* ty=Tensor[(1, 13, 16), float64] */;
  %634 = @func_10360(%633) /* ty=Tensor[(1, 13, 16), float64] */;
  %635 = cast(%634, dtype="float32") /* ty=Tensor[(1, 13, 16), float32] */;
  %636 = sigmoid(%635) /* ty=Tensor[(1, 13, 16), float32] */;
  %637 = cast(%636, dtype="float64") /* ty=Tensor[(1, 13, 16), float64] */;
  %638 = cast(%636, dtype="float64") /* ty=Tensor[(1, 13, 16), float64] */;
  %639 = exp(%638) /* ty=Tensor[(1, 13, 16), float64] */;
  %640 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 208), float64] */, dtype="int16") /* ty=Tensor[(1, 208), int16] */;
  %641 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %642 = cast(%636, dtype="int16") /* ty=Tensor[(1, 13, 16), int16] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %644 = bitwise_xor(%642, %643) /* ty=Tensor[(?, 13, 16), int16] */;
  %645 = cast(%644, dtype="float32") /* ty=Tensor[(?, 13, 16), float32] */;
  %646 = shape_of(%639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%639, dtype="float32") /* ty=Tensor[(1, 13, 16), float32] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %649 = %631.0;
  %650 = cosh(%637) /* ty=Tensor[(1, 13, 16), float64] */;
  %651 = power(%647, %648) /* ty=Tensor[(?, 13, 16), float32] */;
  (%649, %650, %651)
}

def @func_9523(%var_9506: Tensor[(3, 108), float32]) -> (Tensor[(10, 13, 6), float32], Tensor[(169, 4), int32], Tensor[(3, 108), bool]) {
  %652 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
  %653 = cast(meta[relay.Constant][65] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %654 = cast(%var_9506, dtype="float32") /* ty=Tensor[(3, 108), float32] */;
  %655 = reshape(%653, newshape=[]) /* ty=uint8 */;
  %656 = reshape(%654, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %657 = @func_5246(%655, %656) /* ty=(Tensor[(60), float32], Tensor[(324), float32], Tensor[(?, 5, 3), bool], Tensor[(1, 5, 3), float64], Tensor[(13, 4, 13), bool], Tensor[(169, 4), int32]) */;
  %658 = cast(%var_9506, dtype="bool") /* ty=Tensor[(3, 108), bool] */;
  %659 = cast(meta[relay.Constant][65] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %660 = %652.5;
  %661 = %657.5;
  %662 = not_equal(%658, %659) /* ty=Tensor[(3, 108), bool] */;
  (%660, %661, %662)
}

def @func_1894(%var_1876: Tensor[(4, 3, 15), float64]) -> Tensor[(4, 3, 15), float64] {
  %663 = cast(meta[relay.Constant][66] /* ty=Tensor[(4, 3, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 3, 15), float64] */;
  %664 = shape_of(%var_1876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%var_1876, dtype="float64") /* ty=Tensor[(4, 3, 15), float64] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%665, %666) /* ty=Tensor[(4, 3, 15), float64] */
}

def @func_5036(%var_5019: Tensor[(1950), float32]) -> (Tensor[(1, 10, 3), uint64], uint64, Tensor[(30, 1), uint64], Tensor[(15, 14, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) {
  %667 = cast(meta[relay.Constant][67] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %668 = cast(meta[relay.Constant][68] /* ty=Tensor[(30, 1), uint64] */, dtype="uint64") /* ty=Tensor[(30, 1), uint64] */;
  %669 = reshape(%667, newshape=[]) /* ty=uint64 */;
  %670 = reshape(%668, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), uint64] */;
  %671 = @func_2376(%669, %670) /* ty=(Tensor[(1, 10, 3), uint64],) */;
  %672 = cast(meta[relay.Constant][69] /* ty=Tensor[(15, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 14, 15), float64] */;
  %673 = cos(%672) /* ty=Tensor[(15, 14, 15), float64] */;
  %674 = cast(%673, dtype="float64") /* ty=Tensor[(15, 14, 15), float64] */;
  %675 = log(%674) /* ty=Tensor[(15, 14, 15), float64] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(15, 14, 15), float64] */;
  %677 = cast(%var_5019, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %678 = reshape(%677, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
  %679 = @func_201(%678) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */;
  %680 = %671.0;
  %681 = cosh(%676) /* ty=Tensor[(15, 14, 15), float64] */;
  %682 = %679.0;
  (%680, meta[relay.Constant][67] /* ty=uint64 */, meta[relay.Constant][68] /* ty=Tensor[(30, 1), uint64] */, %681, %682, %var_5019)
}

def @func_7569(%var_7555: Tensor[(13, 6, 12), uint16], %var_7556: Tensor[(13, 6, 12), uint16]) -> Tensor[(13, 6, 12), float64] {
  %683 = cast(%var_7556, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
  %684 = shape_of(%var_7555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%var_7555, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %687 = not_equal(%685, %686) /* ty=Tensor[(13, 6, 12), bool] */;
  %688 = cast(%687, dtype="float64") /* ty=Tensor[(13, 6, 12), float64] */;
  %689 = shape_of(%var_7555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%var_7555, dtype="float64") /* ty=Tensor[(13, 6, 12), float64] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%690, %691) /* ty=Tensor[(13, 6, 12), float64] */
}

def @func_11700(%var_11688: Tensor[(324), float32]) -> (Tensor[(182), float64], Tensor[(324), float32], uint8, Tensor[(324), float32]) {
  %692 = @func_10062() /* ty=(Tensor[(182), float64],) */;
  %693 = cast(meta[relay.Constant][70] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %694 = cast(%var_11688, dtype="float32") /* ty=Tensor[(324), float32] */;
  %695 = reshape(%693, newshape=[]) /* ty=uint8 */;
  %696 = reshape(%694, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %697 = @func_5246(%695, %696) /* ty=(Tensor[(60), float32], Tensor[(324), float32], Tensor[(?, 5, 3), bool], Tensor[(1, 5, 3), float64], Tensor[(13, 4, 13), bool], Tensor[(169, 4), int32]) */;
  %698 = %692.0;
  %699 = %697.1;
  (%698, %699, meta[relay.Constant][70] /* ty=uint8 */, %var_11688)
}

def @func_8507() -> (Tensor[(10, 13, 6), float64],) {
  %700 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  (%700,)
}

def @func_10345() -> (Tensor[(10, 13, 6), float64],) {
  %701 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
  %702 = %701.0;
  (%702,)
}

def @func_8605() -> Tensor[(10, 13, 6), float32] {
  %703 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
  %704 = %703.0;
  %705 = cast(meta[relay.Constant][71] /* ty=Tensor[(10, 13, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%704, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %709 = floor_divide(%707, %708) /* ty=Tensor[(10, 13, 6), float64] */;
  %710 = cast(%709, dtype="float32") /* ty=Tensor[(10, 13, 6), float32] */;
  cosh(%710) /* ty=Tensor[(10, 13, 6), float32] */
}

def @func_6988(%var_6918: Tensor[(8, 6, 7), float32], %var_6919: Tensor[(8, 6, 7), float32], %var_6948: Tensor[(180), float64], %var_6982: Tensor[(65, 4), float32]) -> (Tensor[(8, 6, 7), bool], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64], Tensor[(3, 14, 8), float64], Tensor[(224), float64], Tensor[(30), uint64], Tensor[(1, 72), int8], Tensor[(15, 4), float32], Tensor[(65, 4), bool]) {
  %711 = cast(%var_6919, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %712 = shape_of(%var_6918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%var_6918, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %715 = cast(meta[relay.Constant][72] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %716 = reshape(%715, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %717 = @func_1380(%716) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %718 = cast(%var_6948, dtype="float64") /* ty=Tensor[(180), float64] */;
  %719 = reshape(%718, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), float64] */;
  %720 = @func_5916(%719) /* ty=(Tensor[(6, 15, 2), float64],) */;
  %721 = cast(%var_6919, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %722 = cast(meta[relay.Constant][73] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %723 = cast(meta[relay.Constant][74] /* ty=Tensor[(30), uint64] */, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %724 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 72), int8] */, dtype="int8") /* ty=Tensor[(1, 72), int8] */;
  %725 = cast(meta[relay.Constant][76] /* ty=Tensor[(15, 4), float32] */, dtype="float32") /* ty=Tensor[(15, 4), float32] */;
  %726 = cast(meta[relay.Constant][77] /* ty=Tensor[(65, 4), float32] */, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
  %727 = reshape(%721, newshape=[3, 14, 8]) /* ty=Tensor[(3, 14, 8), float32] */;
  %728 = reshape(%722, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %729 = reshape(%723, newshape=[30]) /* ty=Tensor[(30), uint64] */;
  %730 = reshape(%724, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %731 = reshape(%725, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %732 = reshape(%726, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %733 = @func_3394(%727, %728, %729, %730, %731, %732) /* ty=(Tensor[(4, 3, 15), float64], Tensor[(180), float64], Tensor[(3, 14, 8), float32], Tensor[(5, 6), uint64], Tensor[(224), float64], Tensor[(30), uint64], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(3, 14, 8), float64], Tensor[(3, 14, 8), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32]) */;
  %734 = cast(%var_6982, dtype="bool") /* ty=Tensor[(65, 4), bool] */;
  %735 = shape_of(meta[relay.Constant][77] /* ty=Tensor[(65, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %736 = cast(meta[relay.Constant][77] /* ty=Tensor[(65, 4), float32] */, dtype="bool") /* ty=Tensor[(65, 4), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %738 = equal(%713, %714) /* ty=Tensor[(8, 6, 7), bool] */;
  %739 = %717.0;
  %740 = %720.0;
  %741 = %733.8;
  %742 = less_equal(%736, %737) /* ty=Tensor[(65, 4), bool] */;
  (%738, %739, meta[relay.Constant][72] /* ty=Tensor[(324), float32] */, %740, %var_6948, %741, meta[relay.Constant][73] /* ty=Tensor[(224), float64] */, meta[relay.Constant][74] /* ty=Tensor[(30), uint64] */, meta[relay.Constant][75] /* ty=Tensor[(1, 72), int8] */, meta[relay.Constant][76] /* ty=Tensor[(15, 4), float32] */, %742)
}

def @func_11636(%var_11631: Tensor[(1950), float32]) -> (Tensor[(13, 4, 13), uint8], Tensor[(1, 10, 3), uint64], Tensor[(1950), float32]) {
  %743 = @func_11140() /* ty=(Tensor[(10, 13, 6), float32], Tensor[(676, 1), int32], Tensor[(13, 4, 13), uint8]) */;
  %744 = cast(%var_11631, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %745 = reshape(%744, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %746 = @func_5036(%745) /* ty=(Tensor[(1, 10, 3), uint64], uint64, Tensor[(30, 1), uint64], Tensor[(15, 14, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
  %747 = %743.2;
  %748 = %746.0;
  (%747, %748, %var_11631)
}

def @func_4351(%var_4340: Tensor[(13, 4, 13), int32], %var_4341: Tensor[(13, 4, 13), int32]) -> Tensor[(13, 4, 13), bool] {
  %749 = cast(%var_4341, dtype="bool") /* ty=Tensor[(13, 4, 13), bool] */;
  %750 = shape_of(%var_4340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%var_4340, dtype="bool") /* ty=Tensor[(13, 4, 13), bool] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%751, %752) /* ty=Tensor[(13, 4, 13), bool] */
}

def @func_9182() -> (Tensor[(324), float32],) {
  %753 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
  %754 = %753.2;
  (%754,)
}

def @func_9711() -> (Tensor[(182), float64], Tensor[(13, 15, 12), float64], Tensor[(1170, 2), float64]) {
  %755 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
  %756 = cast(meta[relay.Constant][78] /* ty=Tensor[(1170, 2), float64] */, dtype="float64") /* ty=Tensor[(1170, 2), float64] */;
  %757 = reshape(%756, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float64] */;
  %758 = @func_5869(%757) /* ty=(Tensor[(13, 15, 12), float64],) */;
  %759 = %755.4;
  %760 = %758.0;
  (%759, %760, meta[relay.Constant][78] /* ty=Tensor[(1170, 2), float64] */)
}

def @func_8927(%var_8904: Tensor[(10, 13, 6), float64]) -> (Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32]) {
  %761 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  %762 = cast(%var_8904, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %763 = shape_of(%761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(%761, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %766 = cast(%var_8904, dtype="float32") /* ty=Tensor[(10, 13, 6), float32] */;
  %767 = multiply(%764, %765) /* ty=Tensor[(10, 13, 6), float64] */;
  %768 = asinh(%766) /* ty=Tensor[(10, 13, 6), float32] */;
  (%767, %768)
}

def @func_5760(%var_5755: Tensor[(16, 1, 9), float32]) -> (Tensor[(16, 10, 9), float32],) {
  %769 = cast(%var_5755, dtype="float32") /* ty=Tensor[(16, 1, 9), float32] */;
  %770 = cast(meta[relay.Constant][79] /* ty=Tensor[(16, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 9), float32] */;
  %771 = power(%769, %770) /* ty=Tensor[(16, 10, 9), float32] */;
  (%771,)
}

def @func_11260() -> Tensor[(180), float64] {
  @func_10686() /* ty=Tensor[(180), float64] */
}

def @func_11290() -> (Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) {
  %772 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
  %773 = @func_9216() /* ty=(Tensor[(450), uint8], Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) */;
  %774 = %772.0;
  %775 = %773.2;
  (%774, %775)
}

def @func_7711(%var_7700: Tensor[(8, 4, 4), float32], %var_7705: Tensor[(1568), float32]) -> (Tensor[(8, 4, 4), float32], Tensor[(7, 16, 14), float32], Tensor[(1568), float32]) {
  %776 = cast(%var_7700, dtype="float32") /* ty=Tensor[(8, 4, 4), float32] */;
  %777 = cast(%var_7705, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %778 = cast(%var_7705, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %779 = reshape(%777, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %780 = reshape(%778, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %781 = sigmoid(%776) /* ty=Tensor[(8, 4, 4), float32] */;
  %782 = @func_1331(%779, %780) /* ty=Tensor[(7, 16, 14), float32] */;
  (%781, %782, %var_7705)
}

def @func_10360(%var_10349: Tensor[(1, 13, 16), float64]) -> Tensor[(1, 13, 16), float64] {
  %783 = cast(%var_10349, dtype="float64") /* ty=Tensor[(1, 13, 16), float64] */;
  asin(%783) /* ty=Tensor[(1, 13, 16), float64] */
}

def @func_7390(%var_7350: Tensor[(8, 14, 5), float32], %var_7364: Tensor[(60), float32]) -> (Tensor[(8, 14, 5), float64], Tensor[(8, 14, 5), float32], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
  %784 = cast(meta[relay.Constant][80] /* ty=Tensor[(8, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %785 = exp(%784) /* ty=Tensor[(8, 14, 5), float32] */;
  %786 = cast(meta[relay.Constant][81] /* ty=Tensor[(8, 14, 5), float32] */, dtype="float64") /* ty=Tensor[(8, 14, 5), float64] */;
  %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%785, dtype="float64") /* ty=Tensor[(8, 14, 5), float64] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %790 = cast(%var_7350, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %791 = shape_of(%785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%785, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %794 = cast(%var_7364, dtype="float32") /* ty=Tensor[(60), float32] */;
  %795 = reshape(%794, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %796 = @func_266(%795) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
  %797 = cast(meta[relay.Constant][82] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %798 = reshape(%797, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
  %799 = divide(%788, %789) /* ty=Tensor[(8, 14, 5), float64] */;
  %800 = floor_divide(%792, %793) /* ty=Tensor[(8, 14, 5), float32] */;
  %801 = %796.0;
  %802 = @func_1894(%798) /* ty=Tensor[(4, 3, 15), float64] */;
  (%799, %800, %801, %var_7364, %802, meta[relay.Constant][82] /* ty=Tensor[(180), float64] */)
}

def @func_779(%var_757: Tensor[(3, 4, 6), int16]) -> (Tensor[(3, 4, 6), int16], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) {
  %803 = cast(meta[relay.Constant][83] /* ty=Tensor[(3, 4, 1), int16] */, dtype="int16") /* ty=Tensor[(3, 4, 1), int16] */;
  %804 = cast(%var_757, dtype="int16") /* ty=Tensor[(3, 4, 6), int16] */;
  %805 = cast(meta[relay.Constant][84] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %806 = reshape(%805, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %807 = @func_266(%806) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
  %808 = bitwise_xor(%803, %804) /* ty=Tensor[(3, 4, 6), int16] */;
  %809 = %807.1;
  (%808, %809, meta[relay.Constant][84] /* ty=Tensor[(60), float32] */)
}

def @func_8428() -> Tensor[(10, 13, 6), float64] {
  %810 = cast(meta[relay.Constant][85] /* ty=Tensor[(10, 13, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  cos(%810) /* ty=Tensor[(10, 13, 6), float64] */
}

def @func_10656(%var_10635: Tensor[(1, 120), bool]) -> (Tensor[(10, 13, 6), float64], Tensor[(2, 5, 12), float64], Tensor[(1, 120), bool]) {
  %811 = cast(%var_10635, dtype="bool") /* ty=Tensor[(1, 120), bool] */;
  %812 = reshape(%811, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), bool] */;
  %813 = @func_9371(%812) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(2, 5, 12), float32]) */;
  %814 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  %815 = %813.0;
  (%814, %815, %var_10635)
}

def @func_9371(%var_9352: Tensor[(2, 5, 12), bool]) -> (Tensor[(2, 5, 12), float64], Tensor[(2, 5, 12), float32]) {
  %816 = cast(%var_9352, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %817 = shape_of(meta[relay.Constant][86] /* ty=Tensor[(2, 5, 12), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(meta[relay.Constant][86] /* ty=Tensor[(2, 5, 12), bool] */, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %820 = logical_or(%818, %819) /* ty=Tensor[(2, 5, 12), bool] */;
  %821 = cast(%820, dtype="float64") /* ty=Tensor[(2, 5, 12), float64] */;
  %822 = cast(%var_9352, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
  %823 = cos(%821) /* ty=Tensor[(2, 5, 12), float64] */;
  %824 = sigmoid(%822) /* ty=Tensor[(2, 5, 12), float32] */;
  (%823, %824)
}

def @func_11540(%var_11521: Tensor[(10, 13, 6), float64]) -> (Tensor[(10, 13, 6), bool], Tensor[(180), float64]) {
  %825 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
  %826 = %825.0;
  %827 = cast(%var_11521, dtype="bool") /* ty=Tensor[(10, 13, 6), bool] */;
  %828 = shape_of(%826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %829 = cast(%826, dtype="bool") /* ty=Tensor[(10, 13, 6), bool] */;
  %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %831 = @func_9727() /* ty=(Tensor[(180), float64],) */;
  %832 = logical_or(%829, %830) /* ty=Tensor[(10, 13, 6), bool] */;
  %833 = %831.0;
  (%832, %833)
}

def @func_10758() -> Tensor[(180), float64] {
  %834 = @func_9727() /* ty=(Tensor[(180), float64],) */;
  %834.0
}

def @func_11140() -> (Tensor[(10, 13, 6), float32], Tensor[(676, 1), int32], Tensor[(13, 4, 13), uint8]) {
  %835 = cast(meta[relay.Constant][87] /* ty=Tensor[(676, 1), int32] */, dtype="int32") /* ty=Tensor[(676, 1), int32] */;
  %836 = cast(meta[relay.Constant][87] /* ty=Tensor[(676, 1), int32] */, dtype="int32") /* ty=Tensor[(676, 1), int32] */;
  %837 = reshape(%835, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %838 = reshape(%836, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %839 = @func_4351(%837, %838) /* ty=Tensor[(13, 4, 13), bool] */;
  %840 = cast(%839, dtype="float64") /* ty=Tensor[(13, 4, 13), float64] */;
  %841 = tan(%840) /* ty=Tensor[(13, 4, 13), float64] */;
  %842 = cast(%839, dtype="uint8") /* ty=Tensor[(13, 4, 13), uint8] */;
  %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%841, dtype="uint8") /* ty=Tensor[(13, 4, 13), uint8] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %846 = @func_8605() /* ty=Tensor[(10, 13, 6), float32] */;
  %847 = multiply(%844, %845) /* ty=Tensor[(13, 4, 13), uint8] */;
  (%846, meta[relay.Constant][87] /* ty=Tensor[(676, 1), int32] */, %847)
}

def @func_8284(%var_8245: Tensor[(10, 4, 5), float64], %var_8246: Tensor[(10, 4, 5), float64], %var_8258: Tensor[(676), int32]) -> (Tensor[(10, 4, 5), float64], Tensor[(13, 4, 13), bool], Tensor[(676), int32]) {
  %848 = cast(%var_8246, dtype="float64") /* ty=Tensor[(10, 4, 5), float64] */;
  %849 = shape_of(%var_8245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%var_8245, dtype="float64") /* ty=Tensor[(10, 4, 5), float64] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %852 = cast(%var_8258, dtype="int32") /* ty=Tensor[(676), int32] */;
  %853 = cast(%var_8258, dtype="int32") /* ty=Tensor[(676), int32] */;
  %854 = reshape(%852, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %855 = reshape(%853, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %856 = floor_mod(%850, %851) /* ty=Tensor[(10, 4, 5), float64] */;
  %857 = @func_4351(%854, %855) /* ty=Tensor[(13, 4, 13), bool] */;
  (%856, %857, %var_8258)
}

def @func_10686() -> Tensor[(180), float64] {
  %858 = @func_9727() /* ty=(Tensor[(180), float64],) */;
  %858.0
}

def @func_9039(%var_9032: Tensor[(6, 11, 7), float64]) -> Tensor[(6, 11, 7), float64] {
  %859 = cast(%var_9032, dtype="float64") /* ty=Tensor[(6, 11, 7), float64] */;
  cos(%859) /* ty=Tensor[(6, 11, 7), float64] */
}

def @func_9336(%var_9327: Tensor[(1, 676), int32]) -> (Tensor[(324), float32], Tensor[(13, 4, 13), bool], Tensor[(1, 676), int32]) {
  %860 = cast(%var_9327, dtype="int32") /* ty=Tensor[(1, 676), int32] */;
  %861 = cast(%var_9327, dtype="int32") /* ty=Tensor[(1, 676), int32] */;
  %862 = reshape(%860, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %863 = reshape(%861, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %864 = @func_9310() /* ty=Tensor[(324), float32] */;
  %865 = @func_4351(%862, %863) /* ty=Tensor[(13, 4, 13), bool] */;
  (%864, %865, %var_9327)
}

def @func_11483(%var_11469: Tensor[(60), float32]) -> (Tensor[(324), float32], Tensor[(16, 60), float32], Tensor[(60), float32], Tensor[(960), float32], Tensor[(504), uint16]) {
  %866 = @func_9182() /* ty=(Tensor[(324), float32],) */;
  %867 = cast(meta[relay.Constant][88] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %868 = cast(%var_11469, dtype="float32") /* ty=Tensor[(60), float32] */;
  %869 = cast(meta[relay.Constant][89] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %870 = reshape(%867, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %871 = reshape(%868, newshape=[1, 60]) /* ty=Tensor[(1, 60), float32] */;
  %872 = reshape(%869, newshape=[16, 60]) /* ty=Tensor[(16, 60), float32] */;
  %873 = @func_9135(%870, %871, %872) /* ty=(Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(16, 60), float32], Tensor[(180), float64], Tensor[(864), float32], Tensor[(30), uint64], Tensor[(6, 30), float64], Tensor[(10, 13, 6), float64]) */;
  %874 = cast(meta[relay.Constant][90] /* ty=Tensor[(504), float32] */, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %875 = shape_of(meta[relay.Constant][88] /* ty=Tensor[(504), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %876 = cast(meta[relay.Constant][88] /* ty=Tensor[(504), float32] */, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %878 = %866.0;
  %879 = %873.3;
  %880 = bitwise_and(%876, %877) /* ty=Tensor[(504), uint16] */;
  (%878, %879, %var_11469, meta[relay.Constant][89] /* ty=Tensor[(960), float32] */, %880)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8607() -> Tensor[(10, 13, 6), float32] {
  @func_8605() /* ty=Tensor[(10, 13, 6), float32] */
}

def @func_5762(%var_5761: Tensor[(16, 1, 9), float32]) -> (Tensor[(16, 10, 9), float32],) {
  %3 = fn (%var_5755: Tensor[(16, 1, 9), float32]) -> (Tensor[(16, 10, 9), float32],) {
    %0 = cast(%var_5755, dtype="float32") /* ty=Tensor[(16, 1, 9), float32] */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 9), float32] */;
    %2 = power(%0, %1) /* ty=Tensor[(16, 10, 9), float32] */;
    (%2,)
  };
  %3(%var_5761) /* ty=(Tensor[(16, 10, 9), float32],) */
}

def @func_10868() -> (Tensor[(10, 13, 6), float32], Tensor[(60), float32], Tensor[(15, 10, 13), float32], Tensor[(4, 3, 15), float64], Tensor[(30, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(450), uint8]) {
  %22 = fn () -> (Tensor[(10, 13, 6), float32], Tensor[(60), float32], Tensor[(15, 10, 13), float32], Tensor[(4, 3, 15), float64], Tensor[(30, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(450), uint8]) {
    %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %5 = reshape(%4, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
    %6 = @func_266(%5) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
    %7 = %6.1;
    %8 = cast(%7, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
    %9 = cast(meta[relay.Constant][2] /* ty=Tensor[(30, 6), float64] */, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
    %10 = reshape(%9, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
    %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(30, 6), float64] */, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
    %12 = cast(%7, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
    %13 = reshape(%12, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
    %14 = @func_201(%13) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */;
    %15 = @func_8828() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
    %16 = @func_8605() /* ty=Tensor[(10, 13, 6), float32] */;
    %17 = sin(%8) /* ty=Tensor[(15, 10, 13), float32] */;
    %18 = @func_1894(%10) /* ty=Tensor[(4, 3, 15), float64] */;
    %19 = tan(%11) /* ty=Tensor[(30, 6), float32] */;
    %20 = %14.0;
    %21 = %15.0;
    (%16, meta[relay.Constant][1] /* ty=Tensor[(60), float32] */, %17, %18, %19, %20, %21)
  };
  %22() /* ty=(Tensor[(10, 13, 6), float32], Tensor[(60), float32], Tensor[(15, 10, 13), float32], Tensor[(4, 3, 15), float64], Tensor[(30, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(450), uint8]) */
}

def @func_268(%var_267: Tensor[(4, 15, 1), float32]) -> (Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) {
  %29 = fn (%var_248: Tensor[(4, 15, 1), float32]) -> (Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) {
    %23 = cast(%var_248, dtype="float32") /* ty=Tensor[(4, 15, 1), float32] */;
    %24 = cast(meta[relay.Constant][3] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %25 = reshape(%24, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
    %26 = @func_201(%25) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */;
    %27 = log2(%23) /* ty=Tensor[(4, 15, 1), float32] */;
    %28 = %26.1;
    (%27, %28, meta[relay.Constant][3] /* ty=Tensor[(1950), float32] */)
  };
  %29(%var_267) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */
}

def @func_9712() -> (Tensor[(182), float64], Tensor[(13, 15, 12), float64], Tensor[(1170, 2), float64]) {
  %36 = fn () -> (Tensor[(182), float64], Tensor[(13, 15, 12), float64], Tensor[(1170, 2), float64]) {
    %30 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
    %31 = cast(meta[relay.Constant][4] /* ty=Tensor[(1170, 2), float64] */, dtype="float64") /* ty=Tensor[(1170, 2), float64] */;
    %32 = reshape(%31, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float64] */;
    %33 = @func_5869(%32) /* ty=(Tensor[(13, 15, 12), float64],) */;
    %34 = %30.4;
    %35 = %33.0;
    (%34, %35, meta[relay.Constant][4] /* ty=Tensor[(1170, 2), float64] */)
  };
  %36() /* ty=(Tensor[(182), float64], Tensor[(13, 15, 12), float64], Tensor[(1170, 2), float64]) */
}

def @func_5038(%var_5037: Tensor[(1950), float32]) -> (Tensor[(1, 10, 3), uint64], uint64, Tensor[(30, 1), uint64], Tensor[(15, 14, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) {
  %53 = fn (%var_5019: Tensor[(1950), float32]) -> (Tensor[(1, 10, 3), uint64], uint64, Tensor[(30, 1), uint64], Tensor[(15, 14, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) {
    %37 = cast(meta[relay.Constant][5] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %38 = cast(meta[relay.Constant][6] /* ty=Tensor[(30, 1), uint64] */, dtype="uint64") /* ty=Tensor[(30, 1), uint64] */;
    %39 = reshape(%37, newshape=[]) /* ty=uint64 */;
    %40 = reshape(%38, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), uint64] */;
    %41 = @func_2376(%39, %40) /* ty=(Tensor[(1, 10, 3), uint64],) */;
    %42 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 14, 15), float64] */;
    %43 = cos(%42) /* ty=Tensor[(15, 14, 15), float64] */;
    %44 = cast(%43, dtype="float64") /* ty=Tensor[(15, 14, 15), float64] */;
    %45 = log(%44) /* ty=Tensor[(15, 14, 15), float64] */;
    %46 = cast(%45, dtype="float64") /* ty=Tensor[(15, 14, 15), float64] */;
    %47 = cast(%var_5019, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %48 = reshape(%47, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
    %49 = @func_201(%48) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */;
    %50 = %41.0;
    %51 = cosh(%46) /* ty=Tensor[(15, 14, 15), float64] */;
    %52 = %49.0;
    (%50, meta[relay.Constant][5] /* ty=uint64 */, meta[relay.Constant][6] /* ty=Tensor[(30, 1), uint64] */, %51, %52, %var_5019)
  };
  %53(%var_5037) /* ty=(Tensor[(1, 10, 3), uint64], uint64, Tensor[(30, 1), uint64], Tensor[(15, 14, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */
}

def @func_7711(%var_7700: Tensor[(8, 4, 4), float32], %var_7705: Tensor[(1568), float32]) -> (Tensor[(8, 4, 4), float32], Tensor[(7, 16, 14), float32], Tensor[(1568), float32]) {
  %54 = cast(%var_7700, dtype="float32") /* ty=Tensor[(8, 4, 4), float32] */;
  %55 = cast(%var_7705, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %56 = cast(%var_7705, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %57 = reshape(%55, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %58 = reshape(%56, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %59 = sigmoid(%54) /* ty=Tensor[(8, 4, 4), float32] */;
  %60 = @func_1331(%57, %58) /* ty=Tensor[(7, 16, 14), float32] */;
  (%59, %60, %var_7705)
}

def @func_10688() -> Tensor[(180), float64] {
  @func_10686() /* ty=Tensor[(180), float64] */
}

def @func_8605() -> Tensor[(10, 13, 6), float32] {
  %61 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
  %62 = %61.0;
  %63 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 13, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%62, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %67 = floor_divide(%65, %66) /* ty=Tensor[(10, 13, 6), float64] */;
  %68 = cast(%67, dtype="float32") /* ty=Tensor[(10, 13, 6), float32] */;
  cosh(%68) /* ty=Tensor[(10, 13, 6), float32] */
}

def @func_8469(%var_8463: Tensor[(1, 1568), float32]) -> (Tensor[(10, 13, 6), float64], Tensor[(7, 16, 14), float32], Tensor[(128), float32], Tensor[(1, 1568), float32]) {
  %69 = cast(meta[relay.Constant][9] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %70 = cast(%var_8463, dtype="float32") /* ty=Tensor[(1, 1568), float32] */;
  %71 = reshape(%69, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), float32] */;
  %72 = reshape(%70, newshape=[1568]) /* ty=Tensor[(1568), float32] */;
  %73 = @func_7711(%71, %72) /* ty=(Tensor[(8, 4, 4), float32], Tensor[(7, 16, 14), float32], Tensor[(1568), float32]) */;
  %74 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  %75 = %73.1;
  (%74, %75, meta[relay.Constant][9] /* ty=Tensor[(128), float32] */, %var_8463)
}

def @func_8199(%var_8194: uint32, %var_8195: Tensor[(15, 2, 8), uint32], %var_8196: Tensor[(2548), float32], %var_8197: Tensor[(9, 36), float32], %var_8198: Tensor[(72), int8]) -> (Tensor[(15, 2, 8), float32], Tensor[(15, 2, 8), float64], Tensor[(72), int8], Tensor[(2548), float32], Tensor[(1950, 1), float32], Tensor[(9, 36), float32], Tensor[(144), float32], Tensor[(72), int8]) {
  %100 = fn (%var_8160: uint32, %var_8161: Tensor[(15, 2, 8), uint32], %var_8180: Tensor[(2548), float32], %var_8182: Tensor[(9, 36), float32], %var_8184: Tensor[(72), int8]) -> (Tensor[(15, 2, 8), float32], Tensor[(15, 2, 8), float64], Tensor[(72), int8], Tensor[(2548), float32], Tensor[(1950, 1), float32], Tensor[(9, 36), float32], Tensor[(144), float32], Tensor[(72), int8]) {
    %76 = cast(%var_8160, dtype="bool") /* ty=bool */;
    %77 = cast(%var_8161, dtype="bool") /* ty=Tensor[(15, 2, 8), bool] */;
    %78 = greater_equal(%76, %77) /* ty=Tensor[(15, 2, 8), bool] */;
    %79 = cast(%78, dtype="float32") /* ty=Tensor[(15, 2, 8), float32] */;
    %80 = shape_of(%var_8161, dtype="int32") /* ty=Tensor[(3), int32] */;
    %81 = cast(%var_8161, dtype="float32") /* ty=Tensor[(15, 2, 8), float32] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %83 = cast(%var_8161, dtype="float64") /* ty=Tensor[(15, 2, 8), float64] */;
    %84 = cast(%var_8180, dtype="float32") /* ty=Tensor[(2548), float32] */;
    %85 = cast(%var_8180, dtype="float32") /* ty=Tensor[(2548), float32] */;
    %86 = cast(meta[relay.Constant][10] /* ty=Tensor[(1950, 1), float32] */, dtype="float32") /* ty=Tensor[(1950, 1), float32] */;
    %87 = cast(%var_8182, dtype="float32") /* ty=Tensor[(9, 36), float32] */;
    %88 = cast(meta[relay.Constant][11] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %89 = cast(%var_8184, dtype="int8") /* ty=Tensor[(72), int8] */;
    %90 = reshape(%84, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
    %91 = reshape(%85, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
    %92 = reshape(%86, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %93 = reshape(%87, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
    %94 = reshape(%88, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %95 = reshape(%89, newshape=[72]) /* ty=Tensor[(72), int8] */;
    %96 = @func_7924(%90, %91, %92, %93, %94, %95) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(6, 15, 2), float64], Tensor[(180, 1), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(15, 10, 13), float32], Tensor[(3, 108), float32], Tensor[(16, 10, 9), float32], Tensor[(144), float32], Tensor[(9, 12, 16), int64], Tensor[(8, 216), uint32], Tensor[(72), int8], Tensor[(14, 2, 8), float64], Tensor[(1, 224), float64], Tensor[(30), uint64], Tensor[(16, 10, 9), float32], Tensor[(9, 12, 16), bool]) */;
    %97 = power(%81, %82) /* ty=Tensor[(15, 2, 8), float32] */;
    %98 = atanh(%83) /* ty=Tensor[(15, 2, 8), float64] */;
    %99 = %96.11;
    (%97, %98, %99, %var_8180, meta[relay.Constant][10] /* ty=Tensor[(1950, 1), float32] */, %var_8182, meta[relay.Constant][11] /* ty=Tensor[(144), float32] */, %var_8184)
  };
  %100(%var_8194, %var_8195, %var_8196, %var_8197, %var_8198) /* ty=(Tensor[(15, 2, 8), float32], Tensor[(15, 2, 8), float64], Tensor[(72), int8], Tensor[(2548), float32], Tensor[(1950, 1), float32], Tensor[(9, 36), float32], Tensor[(144), float32], Tensor[(72), int8]) */
}

def @func_11581() -> Tensor[(180), float64] {
  %101 = fn () -> Tensor[(180), float64] {
    @func_11321() /* ty=Tensor[(180), float64] */
  };
  %101() /* ty=Tensor[(180), float64] */
}

def @func_9310() -> Tensor[(324), float32] {
  %102 = @func_9162() /* ty=(Tensor[(324), float32],) */;
  %102.0
}

def @func_779(%var_757: Tensor[(3, 4, 6), int16]) -> (Tensor[(3, 4, 6), int16], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) {
  %103 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 4, 1), int16] */, dtype="int16") /* ty=Tensor[(3, 4, 1), int16] */;
  %104 = cast(%var_757, dtype="int16") /* ty=Tensor[(3, 4, 6), int16] */;
  %105 = cast(meta[relay.Constant][13] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %106 = reshape(%105, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %107 = @func_266(%106) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
  %108 = bitwise_xor(%103, %104) /* ty=Tensor[(3, 4, 6), int16] */;
  %109 = %107.1;
  (%108, %109, meta[relay.Constant][13] /* ty=Tensor[(60), float32] */)
}

def @func_11195() -> Tensor[(180), float64] {
  @func_11193() /* ty=Tensor[(180), float64] */
}

def @func_9523(%var_9506: Tensor[(3, 108), float32]) -> (Tensor[(10, 13, 6), float32], Tensor[(169, 4), int32], Tensor[(3, 108), bool]) {
  %110 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
  %111 = cast(meta[relay.Constant][14] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %112 = cast(%var_9506, dtype="float32") /* ty=Tensor[(3, 108), float32] */;
  %113 = reshape(%111, newshape=[]) /* ty=uint8 */;
  %114 = reshape(%112, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %115 = @func_5246(%113, %114) /* ty=(Tensor[(60), float32], Tensor[(324), float32], Tensor[(?, 5, 3), bool], Tensor[(1, 5, 3), float64], Tensor[(13, 4, 13), bool], Tensor[(169, 4), int32]) */;
  %116 = cast(%var_9506, dtype="bool") /* ty=Tensor[(3, 108), bool] */;
  %117 = cast(meta[relay.Constant][14] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %118 = %110.5;
  %119 = %115.5;
  %120 = not_equal(%116, %117) /* ty=Tensor[(3, 108), bool] */;
  (%118, %119, %120)
}

def @func_10436(%var_10420: Tensor[(12, 42), float32], %var_10421: Tensor[(60, 1), float32]) -> (Tensor[(10, 13, 6), float64], Tensor[(12, 42), float32], Tensor[(960), float32], Tensor[(60, 180), int8], Tensor[(60, 180), bool]) {
  %121 = cast(%var_10420, dtype="float32") /* ty=Tensor[(12, 42), float32] */;
  %122 = cast(%var_10421, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
  %123 = cast(meta[relay.Constant][15] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %124 = reshape(%121, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %125 = reshape(%122, newshape=[1, 60]) /* ty=Tensor[(1, 60), float32] */;
  %126 = reshape(%123, newshape=[16, 60]) /* ty=Tensor[(16, 60), float32] */;
  %127 = @func_9135(%124, %125, %126) /* ty=(Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(16, 60), float32], Tensor[(180), float64], Tensor[(864), float32], Tensor[(30), uint64], Tensor[(6, 30), float64], Tensor[(10, 13, 6), float64]) */;
  %128 = %127.4;
  %129 = cast(%128, dtype="int8") /* ty=Tensor[(180), int8] */;
  %130 = cast(%var_10421, dtype="int8") /* ty=Tensor[(60, 1), int8] */;
  %131 = cast(%128, dtype="bool") /* ty=Tensor[(180), bool] */;
  %132 = cast(%var_10421, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %133 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  %134 = right_shift(%129, %130) /* ty=Tensor[(60, 180), int8] */;
  %135 = greater(%131, %132) /* ty=Tensor[(60, 180), bool] */;
  (%133, %var_10420, meta[relay.Constant][15] /* ty=Tensor[(960), float32] */, %134, %135)
}

def @func_10234(%var_10232: Tensor[(10, 13, 12), uint8]) -> (Tensor[(10, 13, 12), uint8], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(2, 5, 12), float32], Tensor[(120, 1), bool], Tensor[(180), float64], Tensor[(2, 5, 12), float32]) {
  @func_10231(%var_10232) /* ty=(Tensor[(10, 13, 12), uint8], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(2, 5, 12), float32], Tensor[(120, 1), bool], Tensor[(180), float64], Tensor[(2, 5, 12), float32]) */
}

def @func_10231(%var_10198: Tensor[(10, 13, 12), uint8]) -> (Tensor[(10, 13, 12), uint8], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(2, 5, 12), float32], Tensor[(120, 1), bool], Tensor[(180), float64], Tensor[(2, 5, 12), float32]) {
  %136 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 13, 12), uint8] */, dtype="uint8") /* ty=Tensor[(10, 13, 12), uint8] */;
  %137 = shape_of(%var_10198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%var_10198, dtype="uint8") /* ty=Tensor[(10, 13, 12), uint8] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %140 = cast(meta[relay.Constant][17] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %141 = cast(meta[relay.Constant][17] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %142 = reshape(%140, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %143 = reshape(%141, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %144 = @func_2444(%142, %143) /* ty=(Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %145 = cast(meta[relay.Constant][18] /* ty=Tensor[(120, 1), bool] */, dtype="bool") /* ty=Tensor[(120, 1), bool] */;
  %146 = reshape(%145, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), bool] */;
  %147 = @func_9371(%146) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(2, 5, 12), float32]) */;
  %148 = @func_9727() /* ty=(Tensor[(180), float64],) */;
  %149 = cast(meta[relay.Constant][18] /* ty=Tensor[(120, 1), bool] */, dtype="bool") /* ty=Tensor[(120, 1), bool] */;
  %150 = reshape(%149, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), bool] */;
  %151 = @func_9371(%150) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(2, 5, 12), float32]) */;
  %152 = bitwise_or(%138, %139) /* ty=Tensor[(10, 13, 12), uint8] */;
  %153 = %144.0;
  %154 = %147.1;
  %155 = %148.0;
  %156 = %151.1;
  (%152, %153, meta[relay.Constant][17] /* ty=Tensor[(72), int8] */, %154, meta[relay.Constant][18] /* ty=Tensor[(120, 1), bool] */, %155, %156)
}

def @func_11142() -> (Tensor[(10, 13, 6), float32], Tensor[(676, 1), int32], Tensor[(13, 4, 13), uint8]) {
  @func_11140() /* ty=(Tensor[(10, 13, 6), float32], Tensor[(676, 1), int32], Tensor[(13, 4, 13), uint8]) */
}

def @func_6259(%var_6244: Tensor[(14, 3, 12), float32], %var_6256: Tensor[(60, 1), float32]) -> (Tensor[(14, 3, 12), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(4, 15, 1), float32], Tensor[(60, 1), float32]) {
  %157 = cast(%var_6244, dtype="float32") /* ty=Tensor[(14, 3, 12), float32] */;
  %158 = cast(meta[relay.Constant][19] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %159 = reshape(%158, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
  %160 = @func_201(%159) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */;
  %161 = cast(%var_6256, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
  %162 = reshape(%161, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %163 = @func_266(%162) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
  %164 = log2(%157) /* ty=Tensor[(14, 3, 12), float32] */;
  %165 = %160.1;
  %166 = %163.0;
  (%164, %165, meta[relay.Constant][19] /* ty=Tensor[(1950), float32] */, %166, %var_6256)
}

def @func_8930(%var_8928: Tensor[(10, 13, 6), float64]) -> (Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32]) {
  @func_8927(%var_8928) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32]) */
}

def @func_9164() -> (Tensor[(324), float32],) {
  @func_9162() /* ty=(Tensor[(324), float32],) */
}

def @func_9183() -> (Tensor[(324), float32],) {
  %169 = fn () -> (Tensor[(324), float32],) {
    %167 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
    %168 = %167.2;
    (%168,)
  };
  %169() /* ty=(Tensor[(324), float32],) */
}

def @func_2980(%var_2979: Tensor[(5, 13, 4), float32]) -> Tensor[(5, 13, 4), float32] {
  %174 = fn (%var_2954: Tensor[(5, 13, 4), float32]) -> Tensor[(5, 13, 4), float32] {
    %170 = cast(%var_2954, dtype="float32") /* ty=Tensor[(5, 13, 4), float32] */;
    %171 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(5, 13, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %172 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 13, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 13, 4), float32] */;
    %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%172, %173) /* ty=Tensor[(5, 13, 4), float32] */
  };
  %174(%var_2979) /* ty=Tensor[(5, 13, 4), float32] */
}

def @func_11485(%var_11484: Tensor[(60), float32]) -> (Tensor[(324), float32], Tensor[(16, 60), float32], Tensor[(60), float32], Tensor[(960), float32], Tensor[(504), uint16]) {
  %190 = fn (%var_11469: Tensor[(60), float32]) -> (Tensor[(324), float32], Tensor[(16, 60), float32], Tensor[(60), float32], Tensor[(960), float32], Tensor[(504), uint16]) {
    %175 = @func_9182() /* ty=(Tensor[(324), float32],) */;
    %176 = cast(meta[relay.Constant][21] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %177 = cast(%var_11469, dtype="float32") /* ty=Tensor[(60), float32] */;
    %178 = cast(meta[relay.Constant][22] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
    %179 = reshape(%176, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %180 = reshape(%177, newshape=[1, 60]) /* ty=Tensor[(1, 60), float32] */;
    %181 = reshape(%178, newshape=[16, 60]) /* ty=Tensor[(16, 60), float32] */;
    %182 = @func_9135(%179, %180, %181) /* ty=(Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(16, 60), float32], Tensor[(180), float64], Tensor[(864), float32], Tensor[(30), uint64], Tensor[(6, 30), float64], Tensor[(10, 13, 6), float64]) */;
    %183 = cast(meta[relay.Constant][23] /* ty=Tensor[(504), float32] */, dtype="uint16") /* ty=Tensor[(504), uint16] */;
    %184 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(504), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %185 = cast(meta[relay.Constant][21] /* ty=Tensor[(504), float32] */, dtype="uint16") /* ty=Tensor[(504), uint16] */;
    %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %187 = %175.0;
    %188 = %182.3;
    %189 = bitwise_and(%185, %186) /* ty=Tensor[(504), uint16] */;
    (%187, %188, %var_11469, meta[relay.Constant][22] /* ty=Tensor[(960), float32] */, %189)
  };
  %190(%var_11484) /* ty=(Tensor[(324), float32], Tensor[(16, 60), float32], Tensor[(60), float32], Tensor[(960), float32], Tensor[(504), uint16]) */
}

def @func_1331(%var_1326: Tensor[(7, 16, 14), float32], %var_1327: Tensor[(7, 16, 14), float32]) -> Tensor[(7, 16, 14), float32] {
  %191 = cast(%var_1327, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %192 = shape_of(%var_1326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%var_1326, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  minimum(%193, %194) /* ty=Tensor[(7, 16, 14), float32] */
}

def @func_991(%var_989: Tensor[(4, 11, 1), uint64], %var_990: Tensor[(4, 11, 12), uint64]) -> (Tensor[(4, 11, 12), uint64],) {
  %198 = fn (%var_982: Tensor[(4, 11, 1), uint64], %var_983: Tensor[(4, 11, 12), uint64]) -> (Tensor[(4, 11, 12), uint64],) {
    %195 = cast(%var_982, dtype="uint64") /* ty=Tensor[(4, 11, 1), uint64] */;
    %196 = cast(%var_983, dtype="uint64") /* ty=Tensor[(4, 11, 12), uint64] */;
    %197 = right_shift(%195, %196) /* ty=Tensor[(4, 11, 12), uint64] */;
    (%197,)
  };
  %198(%var_989, %var_990) /* ty=(Tensor[(4, 11, 12), uint64],) */
}

def @func_1335(%var_1333: Tensor[(7, 16, 14), float32], %var_1334: Tensor[(7, 16, 14), float32]) -> Tensor[(7, 16, 14), float32] {
  @func_1331(%var_1333, %var_1334) /* ty=Tensor[(7, 16, 14), float32] */
}

def @func_11570(%var_11565: float32) -> Tensor[(10, 6, 1), float32] {
  %199 = cast(%var_11565, dtype="float32") /* ty=float32 */;
  %200 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 1), float32] */;
  mod(%199, %200) /* ty=Tensor[(10, 6, 1), float32] */
}

def @func_11636(%var_11631: Tensor[(1950), float32]) -> (Tensor[(13, 4, 13), uint8], Tensor[(1, 10, 3), uint64], Tensor[(1950), float32]) {
  %201 = @func_11140() /* ty=(Tensor[(10, 13, 6), float32], Tensor[(676, 1), int32], Tensor[(13, 4, 13), uint8]) */;
  %202 = cast(%var_11631, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %203 = reshape(%202, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %204 = @func_5036(%203) /* ty=(Tensor[(1, 10, 3), uint64], uint64, Tensor[(30, 1), uint64], Tensor[(15, 14, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
  %205 = %201.2;
  %206 = %204.0;
  (%205, %206, %var_11631)
}

def @func_782(%var_780: Tensor[(3, 4, 6), int16]) -> (Tensor[(3, 4, 6), int16], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) {
  @func_779(%var_780) /* ty=(Tensor[(3, 4, 6), int16], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */
}

def @func_7393(%var_7391: Tensor[(8, 14, 5), float32], %var_7392: Tensor[(60), float32]) -> (Tensor[(8, 14, 5), float64], Tensor[(8, 14, 5), float32], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
  %226 = fn (%var_7350: Tensor[(8, 14, 5), float32], %var_7364: Tensor[(60), float32]) -> (Tensor[(8, 14, 5), float64], Tensor[(8, 14, 5), float32], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
    %207 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
    %208 = exp(%207) /* ty=Tensor[(8, 14, 5), float32] */;
    %209 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 14, 5), float32] */, dtype="float64") /* ty=Tensor[(8, 14, 5), float64] */;
    %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
    %211 = cast(%208, dtype="float64") /* ty=Tensor[(8, 14, 5), float64] */;
    %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %213 = cast(%var_7350, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
    %214 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
    %215 = cast(%208, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
    %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %217 = cast(%var_7364, dtype="float32") /* ty=Tensor[(60), float32] */;
    %218 = reshape(%217, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
    %219 = @func_266(%218) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
    %220 = cast(meta[relay.Constant][27] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %221 = reshape(%220, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
    %222 = divide(%211, %212) /* ty=Tensor[(8, 14, 5), float64] */;
    %223 = floor_divide(%215, %216) /* ty=Tensor[(8, 14, 5), float32] */;
    %224 = %219.0;
    %225 = @func_1894(%221) /* ty=Tensor[(4, 3, 15), float64] */;
    (%222, %223, %224, %var_7364, %225, meta[relay.Constant][27] /* ty=Tensor[(180), float64] */)
  };
  %226(%var_7391, %var_7392) /* ty=(Tensor[(8, 14, 5), float64], Tensor[(8, 14, 5), float32], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */
}

def @func_10063() -> (Tensor[(182), float64],) {
  %229 = fn () -> (Tensor[(182), float64],) {
    %227 = @func_9711() /* ty=(Tensor[(182), float64], Tensor[(13, 15, 12), float64], Tensor[(1170, 2), float64]) */;
    %228 = %227.0;
    (%228,)
  };
  %229() /* ty=(Tensor[(182), float64],) */
}

def @func_10043(%var_10036: Tensor[(720), float32], %var_10037: Tensor[(72), int8], %var_10038: Tensor[(1188), int8], %var_10039: Tensor[(1, 560), float32], %var_10040: Tensor[(128), float32], %var_10041: Tensor[(1568), float32], %var_10042: Tensor[(528), uint64]) -> (Tensor[(8, 6, 15), float32], Tensor[(720), float32], Tensor[(324), bool], Tensor[(180), float64], Tensor[(72), int8], Tensor[(1, 10, 3), uint64], Tensor[(30), uint64], Tensor[(60), float32], Tensor[(260), float32], Tensor[(1188), int8], Tensor[(260), float32], Tensor[(324), uint64], Tensor[(8, 14, 5), float64], Tensor[(1, 560), float32], Tensor[(1568), float32], Tensor[(128), float32], Tensor[(1568), float32], Tensor[(4, 11, 12), uint64], Tensor[(44), uint64], Tensor[(528), uint64]) {
  @func_10034(%var_10036, %var_10037, %var_10038, %var_10039, %var_10040, %var_10041, %var_10042) /* ty=(Tensor[(8, 6, 15), float32], Tensor[(720), float32], Tensor[(324), bool], Tensor[(180), float64], Tensor[(72), int8], Tensor[(1, 10, 3), uint64], Tensor[(30), uint64], Tensor[(60), float32], Tensor[(260), float32], Tensor[(1188), int8], Tensor[(260), float32], Tensor[(324), uint64], Tensor[(8, 14, 5), float64], Tensor[(1, 560), float32], Tensor[(1568), float32], Tensor[(128), float32], Tensor[(1568), float32], Tensor[(4, 11, 12), uint64], Tensor[(44), uint64], Tensor[(528), uint64]) */
}

def @func_5249(%var_5247: uint8, %var_5248: Tensor[(324), float32]) -> (Tensor[(60), float32], Tensor[(324), float32], Tensor[(?, 5, 3), bool], Tensor[(1, 5, 3), float64], Tensor[(13, 4, 13), bool], Tensor[(169, 4), int32]) {
  %259 = fn (%var_5185: uint8, %var_5194: Tensor[(324), float32]) -> (Tensor[(60), float32], Tensor[(324), float32], Tensor[(?, 5, 3), bool], Tensor[(1, 5, 3), float64], Tensor[(13, 4, 13), bool], Tensor[(169, 4), int32]) {
    %230 = cast(%var_5194, dtype="float32") /* ty=Tensor[(324), float32] */;
    %231 = reshape(%230, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
    %232 = @func_1380(%231) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
    %233 = cast(%var_5185, dtype="uint8") /* ty=uint8 */;
    %234 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 5, 3), uint8] */, dtype="uint8") /* ty=Tensor[(1, 5, 3), uint8] */;
    %235 = logical_xor(%233, %234) /* ty=Tensor[(1, 5, 3), uint8] */;
    %236 = cast(%235, dtype="uint32") /* ty=Tensor[(1, 5, 3), uint32] */;
    %237 = cast(%var_5185, dtype="uint32") /* ty=uint32 */;
    %238 = left_shift(%236, %237) /* ty=Tensor[(1, 5, 3), uint32] */;
    %239 = cast(%238, dtype="float64") /* ty=Tensor[(1, 5, 3), float64] */;
    %240 = sigmoid(%239) /* ty=Tensor[(1, 5, 3), float64] */;
    %241 = cast(%238, dtype="bool") /* ty=Tensor[(1, 5, 3), bool] */;
    %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
    %243 = cast(%240, dtype="bool") /* ty=Tensor[(1, 5, 3), bool] */;
    %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %245 = greater(%243, %244) /* ty=Tensor[(?, 5, 3), bool] */;
    %246 = cast(%235, dtype="bool") /* ty=Tensor[(1, 5, 3), bool] */;
    %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
    %248 = cast(%245, dtype="bool") /* ty=Tensor[(?, 5, 3), bool] */;
    %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %250 = cast(%240, dtype="float64") /* ty=Tensor[(1, 5, 3), float64] */;
    %251 = cast(meta[relay.Constant][29] /* ty=Tensor[(169, 4), int32] */, dtype="int32") /* ty=Tensor[(169, 4), int32] */;
    %252 = cast(meta[relay.Constant][29] /* ty=Tensor[(169, 4), int32] */, dtype="int32") /* ty=Tensor[(169, 4), int32] */;
    %253 = reshape(%251, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
    %254 = reshape(%252, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
    %255 = %232.2;
    %256 = less(%248, %249) /* ty=Tensor[(?, 5, 3), bool] */;
    %257 = log10(%250) /* ty=Tensor[(1, 5, 3), float64] */;
    %258 = @func_4351(%253, %254) /* ty=Tensor[(13, 4, 13), bool] */;
    (%255, %var_5194, %256, %257, %258, meta[relay.Constant][29] /* ty=Tensor[(169, 4), int32] */)
  };
  %259(%var_5247, %var_5248) /* ty=(Tensor[(60), float32], Tensor[(324), float32], Tensor[(?, 5, 3), bool], Tensor[(1, 5, 3), float64], Tensor[(13, 4, 13), bool], Tensor[(169, 4), int32]) */
}

def @func_9042(%var_9040: Tensor[(6, 11, 7), float64]) -> Tensor[(6, 11, 7), float64] {
  @func_9039(%var_9040) /* ty=Tensor[(6, 11, 7), float64] */
}

def @func_7715(%var_7713: Tensor[(8, 4, 4), float32], %var_7714: Tensor[(1568), float32]) -> (Tensor[(8, 4, 4), float32], Tensor[(7, 16, 14), float32], Tensor[(1568), float32]) {
  @func_7711(%var_7713, %var_7714) /* ty=(Tensor[(8, 4, 4), float32], Tensor[(7, 16, 14), float32], Tensor[(1568), float32]) */
}

def @func_11303() -> (Tensor[(180), float64],) {
  %260 = @func_10758() /* ty=Tensor[(180), float64] */;
  (%260,)
}

def @func_11774() -> (Tensor[(10, 13, 6), float32],) {
  %263 = fn () -> (Tensor[(10, 13, 6), float32],) {
    %261 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
    %262 = %261.5;
    (%262,)
  };
  %263() /* ty=(Tensor[(10, 13, 6), float32],) */
}

def @func_1380(%var_1345: Tensor[(6, 6, 9), float32]) -> (Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) {
  %264 = cast(%var_1345, dtype="float32") /* ty=Tensor[(6, 6, 9), float32] */;
  %265 = cast(meta[relay.Constant][30] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %266 = reshape(%265, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %267 = @func_1034(%266) /* ty=(Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %268 = sqrt(%264) /* ty=Tensor[(6, 6, 9), float32] */;
  %269 = %267.1;
  (%268, %269, meta[relay.Constant][30] /* ty=Tensor[(60), float32] */)
}

def @func_4795(%var_4793: Tensor[(8, 6, 15), float32]) -> (Tensor[(8, 6, 15), float32],) {
  @func_4792(%var_4793) /* ty=(Tensor[(8, 6, 15), float32],) */
}

def @func_10758() -> Tensor[(180), float64] {
  %270 = @func_9727() /* ty=(Tensor[(180), float64],) */;
  %270.0
}

def @func_10315(%var_10313: Tensor[(560), float32]) -> (Tensor[(450), uint8], Tensor[(8, 14, 5), float64], Tensor[(560), float32], Tensor[(60), float32]) {
  @func_10312(%var_10313) /* ty=(Tensor[(450), uint8], Tensor[(8, 14, 5), float64], Tensor[(560), float32], Tensor[(60), float32]) */
}

def @func_8288(%var_8285: Tensor[(10, 4, 5), float64], %var_8286: Tensor[(10, 4, 5), float64], %var_8287: Tensor[(676), int32]) -> (Tensor[(10, 4, 5), float64], Tensor[(13, 4, 13), bool], Tensor[(676), int32]) {
  %281 = fn (%var_8245: Tensor[(10, 4, 5), float64], %var_8246: Tensor[(10, 4, 5), float64], %var_8258: Tensor[(676), int32]) -> (Tensor[(10, 4, 5), float64], Tensor[(13, 4, 13), bool], Tensor[(676), int32]) {
    %271 = cast(%var_8246, dtype="float64") /* ty=Tensor[(10, 4, 5), float64] */;
    %272 = shape_of(%var_8245, dtype="int32") /* ty=Tensor[(3), int32] */;
    %273 = cast(%var_8245, dtype="float64") /* ty=Tensor[(10, 4, 5), float64] */;
    %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %275 = cast(%var_8258, dtype="int32") /* ty=Tensor[(676), int32] */;
    %276 = cast(%var_8258, dtype="int32") /* ty=Tensor[(676), int32] */;
    %277 = reshape(%275, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
    %278 = reshape(%276, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
    %279 = floor_mod(%273, %274) /* ty=Tensor[(10, 4, 5), float64] */;
    %280 = @func_4351(%277, %278) /* ty=Tensor[(13, 4, 13), bool] */;
    (%279, %280, %var_8258)
  };
  %281(%var_8285, %var_8286, %var_8287) /* ty=(Tensor[(10, 4, 5), float64], Tensor[(13, 4, 13), bool], Tensor[(676), int32]) */
}

def @func_10346() -> (Tensor[(10, 13, 6), float64],) {
  %284 = fn () -> (Tensor[(10, 13, 6), float64],) {
    %282 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
    %283 = %282.0;
    (%283,)
  };
  %284() /* ty=(Tensor[(10, 13, 6), float64],) */
}

def @func_8429() -> Tensor[(10, 13, 6), float64] {
  %286 = fn () -> Tensor[(10, 13, 6), float64] {
    %285 = cast(meta[relay.Constant][31] /* ty=Tensor[(10, 13, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
    cos(%285) /* ty=Tensor[(10, 13, 6), float64] */
  };
  %286() /* ty=Tensor[(10, 13, 6), float64] */
}

def @func_5871(%var_5870: Tensor[(13, 15, 12), float64]) -> (Tensor[(13, 15, 12), float64],) {
  %289 = fn (%var_5865: Tensor[(13, 15, 12), float64]) -> (Tensor[(13, 15, 12), float64],) {
    %287 = cast(%var_5865, dtype="float64") /* ty=Tensor[(13, 15, 12), float64] */;
    %288 = atan(%287) /* ty=Tensor[(13, 15, 12), float64] */;
    (%288,)
  };
  %289(%var_5870) /* ty=(Tensor[(13, 15, 12), float64],) */
}

def @func_11089() -> (Tensor[(15, 10, 13), float32], Tensor[(10, 13, 6), float64], Tensor[(180), float64]) {
  %290 = @func_10867() /* ty=(Tensor[(10, 13, 6), float32], Tensor[(60), float32], Tensor[(15, 10, 13), float32], Tensor[(4, 3, 15), float64], Tensor[(30, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(450), uint8]) */;
  %291 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
  %292 = @func_8828() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %293 = %290.5;
  %294 = %291.0;
  %295 = %292.2;
  (%293, %294, %295)
}

def @func_10513() -> (Tensor[(324), float32], Tensor[(1, 13, 16), float64], Tensor[(?, 13, 16), float32]) {
  %317 = fn () -> (Tensor[(324), float32], Tensor[(1, 13, 16), float64], Tensor[(?, 13, 16), float32]) {
    %296 = @func_9182() /* ty=(Tensor[(324), float32],) */;
    %297 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 208), float64] */, dtype="float64") /* ty=Tensor[(1, 208), float64] */;
    %298 = reshape(%297, newshape=[1, 13, 16]) /* ty=Tensor[(1, 13, 16), float64] */;
    %299 = @func_10360(%298) /* ty=Tensor[(1, 13, 16), float64] */;
    %300 = cast(%299, dtype="float32") /* ty=Tensor[(1, 13, 16), float32] */;
    %301 = sigmoid(%300) /* ty=Tensor[(1, 13, 16), float32] */;
    %302 = cast(%301, dtype="float64") /* ty=Tensor[(1, 13, 16), float64] */;
    %303 = cast(%301, dtype="float64") /* ty=Tensor[(1, 13, 16), float64] */;
    %304 = exp(%303) /* ty=Tensor[(1, 13, 16), float64] */;
    %305 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 208), float64] */, dtype="int16") /* ty=Tensor[(1, 208), int16] */;
    %306 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
    %307 = cast(%301, dtype="int16") /* ty=Tensor[(1, 13, 16), int16] */;
    %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %309 = bitwise_xor(%307, %308) /* ty=Tensor[(?, 13, 16), int16] */;
    %310 = cast(%309, dtype="float32") /* ty=Tensor[(?, 13, 16), float32] */;
    %311 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(%304, dtype="float32") /* ty=Tensor[(1, 13, 16), float32] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %314 = %296.0;
    %315 = cosh(%302) /* ty=Tensor[(1, 13, 16), float64] */;
    %316 = power(%312, %313) /* ty=Tensor[(?, 13, 16), float32] */;
    (%314, %315, %316)
  };
  %317() /* ty=(Tensor[(324), float32], Tensor[(1, 13, 16), float64], Tensor[(?, 13, 16), float32]) */
}

def @func_11034(%var_11032: Tensor[(30), uint64]) -> (Tensor[(182), float64], Tensor[(30), uint64], Tensor[(30), float32]) {
  @func_11031(%var_11032) /* ty=(Tensor[(182), float64], Tensor[(30), uint64], Tensor[(30), float32]) */
}

def @func_11163() -> (Tensor[(180), float64],) {
  %319 = fn () -> (Tensor[(180), float64],) {
    %318 = @func_10686() /* ty=Tensor[(180), float64] */;
    (%318,)
  };
  %319() /* ty=(Tensor[(180), float64],) */
}

def @func_10137(%var_10132: Tensor[(2548), float32], %var_10133: Tensor[(1950, 1), float32], %var_10134: Tensor[(144), float32], %var_10135: Tensor[(3, 24), int8], %var_10136: Tensor[(3, 24), int8]) -> (Tensor[(324), float32], Tensor[(15, 10, 13), float32], Tensor[(144), float32], Tensor[(3, 24), float32], Tensor[(1950, 2548), int16]) {
  @func_10130(%var_10132, %var_10133, %var_10134, %var_10135, %var_10136) /* ty=(Tensor[(324), float32], Tensor[(15, 10, 13), float32], Tensor[(144), float32], Tensor[(3, 24), float32], Tensor[(1950, 2548), int16]) */
}

def @func_6038(%var_6010: Tensor[(6, 12, 12), float32], %var_6028: Tensor[(30), uint64], %var_6036: Tensor[(180), float64]) -> (Tensor[(6, 12, 12), bool], uint64, Tensor[(224), float64], Tensor[(30), uint64], Tensor[(1, 10, 3), uint64], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
  %320 = cast(%var_6010, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %321 = log10(%320) /* ty=Tensor[(6, 12, 12), float32] */;
  %322 = cast(%321, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
  %323 = erf(%322) /* ty=Tensor[(6, 12, 12), float64] */;
  %324 = cast(%321, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
  %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%323, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %328 = cast(meta[relay.Constant][33] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %329 = cast(%var_6028, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %330 = reshape(%328, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %331 = reshape(%329, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint64] */;
  %332 = @func_3051(%330, %331) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(1, 10, 3), uint64], uint64, Tensor[(5, 6), uint64]) */;
  %333 = %332.2;
  %334 = cast(%333, dtype="uint64") /* ty=uint64 */;
  %335 = cast(%var_6028, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %336 = reshape(%334, newshape=[]) /* ty=uint64 */;
  %337 = reshape(%335, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), uint64] */;
  %338 = @func_2376(%336, %337) /* ty=(Tensor[(1, 10, 3), uint64],) */;
  %339 = cast(%var_6036, dtype="float64") /* ty=Tensor[(180), float64] */;
  %340 = reshape(%339, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
  %341 = greater(%326, %327) /* ty=Tensor[(6, 12, 12), bool] */;
  %342 = %338.0;
  %343 = @func_1894(%340) /* ty=Tensor[(4, 3, 15), float64] */;
  (%341, %333, meta[relay.Constant][33] /* ty=Tensor[(224), float64] */, %var_6028, %342, %343, %var_6036)
}

def @func_5918(%var_5917: Tensor[(6, 15, 2), float64]) -> (Tensor[(6, 15, 2), float64],) {
  %346 = fn (%var_5909: Tensor[(6, 15, 2), float64]) -> (Tensor[(6, 15, 2), float64],) {
    %344 = cast(%var_5909, dtype="float64") /* ty=Tensor[(6, 15, 2), float64] */;
    %345 = atan(%344) /* ty=Tensor[(6, 15, 2), float64] */;
    (%345,)
  };
  %346(%var_5917) /* ty=(Tensor[(6, 15, 2), float64],) */
}

def @func_8508() -> (Tensor[(10, 13, 6), float64],) {
  %348 = fn () -> (Tensor[(10, 13, 6), float64],) {
    %347 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
    (%347,)
  };
  %348() /* ty=(Tensor[(10, 13, 6), float64],) */
}

def @func_8785() -> (Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) {
  %349 = cast(meta[relay.Constant][34] /* ty=Tensor[(450), uint8] */, dtype="uint8") /* ty=Tensor[(450), uint8] */;
  %350 = cast(meta[relay.Constant][35] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %351 = reshape(%349, newshape=[15, 5, 6]) /* ty=Tensor[(15, 5, 6), uint8] */;
  %352 = reshape(%350, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %353 = @func_2137(%351, %352) /* ty=(Tensor[(15, 5, 6), uint8], Tensor[(60), float32], Tensor[(72), int16], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(60), float32]) */;
  %354 = cast(meta[relay.Constant][36] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %355 = reshape(%354, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), float64] */;
  %356 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
  %357 = %356.0;
  %358 = cast(%357, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %359 = sinh(%358) /* ty=Tensor[(10, 13, 6), float64] */;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(10, 13, 6), float32] */;
  %361 = %353.1;
  %362 = @func_7463(%355) /* ty=Tensor[(13, 1, 14), float64] */;
  %363 = log10(%360) /* ty=Tensor[(10, 13, 6), float32] */;
  (%361, meta[relay.Constant][34] /* ty=Tensor[(450), uint8] */, meta[relay.Constant][35] /* ty=Tensor[(324), float32] */, %362, meta[relay.Constant][36] /* ty=Tensor[(182), float64] */, %363)
}

def @func_10686() -> Tensor[(180), float64] {
  %364 = @func_9727() /* ty=(Tensor[(180), float64],) */;
  %364.0
}

def @func_9216() -> (Tensor[(450), uint8], Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) {
  %365 = @func_8828() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %366 = cast(meta[relay.Constant][37] /* ty=Tensor[(784, 2), float32] */, dtype="float32") /* ty=Tensor[(784, 2), float32] */;
  %367 = reshape(%366, newshape=[1, 1568]) /* ty=Tensor[(1, 1568), float32] */;
  %368 = @func_8469(%367) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(7, 16, 14), float32], Tensor[(128), float32], Tensor[(1, 1568), float32]) */;
  %369 = %365.0;
  %370 = %368.0;
  (%369, %370, meta[relay.Constant][37] /* ty=Tensor[(784, 2), float32] */)
}

def @func_2140(%var_2138: Tensor[(15, 5, 6), uint8], %var_2139: Tensor[(324), float32]) -> (Tensor[(15, 5, 6), uint8], Tensor[(60), float32], Tensor[(72), int16], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(60), float32]) {
  %388 = fn (%var_2112: Tensor[(15, 5, 6), uint8], %var_2122: Tensor[(324), float32]) -> (Tensor[(15, 5, 6), uint8], Tensor[(60), float32], Tensor[(72), int16], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(60), float32]) {
    %371 = cast(%var_2112, dtype="uint8") /* ty=Tensor[(15, 5, 6), uint8] */;
    %372 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(15, 5, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %373 = cast(meta[relay.Constant][38] /* ty=Tensor[(15, 5, 6), uint8] */, dtype="uint8") /* ty=Tensor[(15, 5, 6), uint8] */;
    %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %375 = cast(meta[relay.Constant][39] /* ty=Tensor[(72), int16] */, dtype="int16") /* ty=Tensor[(72), int16] */;
    %376 = reshape(%375, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), int16] */;
    %377 = @func_779(%376) /* ty=(Tensor[(3, 4, 6), int16], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
    %378 = cast(%var_2122, dtype="float32") /* ty=Tensor[(324), float32] */;
    %379 = reshape(%378, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
    %380 = @func_1380(%379) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
    %381 = %377.2;
    %382 = cast(%381, dtype="float32") /* ty=Tensor[(60), float32] */;
    %383 = reshape(%382, newshape=[60]) /* ty=Tensor[(60), float32] */;
    %384 = @func_1034(%383) /* ty=(Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
    %385 = right_shift(%373, %374) /* ty=Tensor[(15, 5, 6), uint8] */;
    %386 = %380.0;
    %387 = %384.2;
    (%385, %381, meta[relay.Constant][39] /* ty=Tensor[(72), int16] */, %386, %var_2122, %387)
  };
  %388(%var_2138, %var_2139) /* ty=(Tensor[(15, 5, 6), uint8], Tensor[(60), float32], Tensor[(72), int16], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(60), float32]) */
}

def @func_1896(%var_1895: Tensor[(4, 3, 15), float64]) -> Tensor[(4, 3, 15), float64] {
  %393 = fn (%var_1876: Tensor[(4, 3, 15), float64]) -> Tensor[(4, 3, 15), float64] {
    %389 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 3, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 3, 15), float64] */;
    %390 = shape_of(%var_1876, dtype="int32") /* ty=Tensor[(3), int32] */;
    %391 = cast(%var_1876, dtype="float64") /* ty=Tensor[(4, 3, 15), float64] */;
    %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%391, %392) /* ty=Tensor[(4, 3, 15), float64] */
  };
  %393(%var_1895) /* ty=Tensor[(4, 3, 15), float64] */
}

def @func_8787() -> (Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) {
  @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */
}

def @func_11991() -> (Tensor[(324), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(144), float32], Tensor[(1568), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64]) {
  %394 = @func_9162() /* ty=(Tensor[(324), float32],) */;
  %395 = cast(meta[relay.Constant][41] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %396 = cast(meta[relay.Constant][42] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %397 = cast(meta[relay.Constant][43] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %398 = reshape(%395, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %399 = reshape(%396, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %400 = reshape(%397, newshape=[1568, 1]) /* ty=Tensor[(1568, 1), float32] */;
  %401 = @func_11429(%398, %399, %400) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(324), float32], Tensor[(144), float32], Tensor[(72), int8], Tensor[(7, 16, 14), float32], Tensor[(1568, 1), float32], Tensor[(10, 13, 6), float64], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(60), float32]) */;
  %402 = cast(meta[relay.Constant][44] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %403 = reshape(%402, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), float64] */;
  %404 = @func_5916(%403) /* ty=(Tensor[(6, 15, 2), float64],) */;
  %405 = %394.0;
  %406 = %401.3;
  %407 = %404.0;
  (%405, %406, meta[relay.Constant][41] /* ty=Tensor[(1950), float32] */, meta[relay.Constant][42] /* ty=Tensor[(144), float32] */, meta[relay.Constant][43] /* ty=Tensor[(1568), float32] */, %407, meta[relay.Constant][44] /* ty=Tensor[(180), float64] */)
}

def @func_6043(%var_6040: Tensor[(6, 12, 12), float32], %var_6041: Tensor[(30), uint64], %var_6042: Tensor[(180), float64]) -> (Tensor[(6, 12, 12), bool], uint64, Tensor[(224), float64], Tensor[(30), uint64], Tensor[(1, 10, 3), uint64], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
  @func_6038(%var_6040, %var_6041, %var_6042) /* ty=(Tensor[(6, 12, 12), bool], uint64, Tensor[(224), float64], Tensor[(30), uint64], Tensor[(1, 10, 3), uint64], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */
}

def @func_11291() -> (Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) {
  %412 = fn () -> (Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) {
    %408 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
    %409 = @func_9216() /* ty=(Tensor[(450), uint8], Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) */;
    %410 = %408.0;
    %411 = %409.2;
    (%410, %411)
  };
  %412() /* ty=(Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) */
}

def @func_8829() -> (Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
  %418 = fn () -> (Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
    %413 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
    %414 = cast(meta[relay.Constant][45] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %415 = reshape(%414, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
    %416 = %413.1;
    %417 = @func_1894(%415) /* ty=Tensor[(4, 3, 15), float64] */;
    (%416, %417, meta[relay.Constant][45] /* ty=Tensor[(180), float64] */)
  };
  %418() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */
}

def @func_6521(%var_6519: uint8, %var_6520: Tensor[(13, 1), uint8]) -> (Tensor[(13, 1), bool],) {
  @func_6517(%var_6519, %var_6520) /* ty=(Tensor[(13, 1), bool],) */
}

def @func_10130(%var_10087: Tensor[(2548), float32], %var_10088: Tensor[(1950, 1), float32], %var_10089: Tensor[(144), float32], %var_10090: Tensor[(3, 24), int8], %var_10096: Tensor[(3, 24), int8]) -> (Tensor[(324), float32], Tensor[(15, 10, 13), float32], Tensor[(144), float32], Tensor[(3, 24), float32], Tensor[(1950, 2548), int16]) {
  %419 = @func_9162() /* ty=(Tensor[(324), float32],) */;
  %420 = cast(%var_10087, dtype="float32") /* ty=Tensor[(2548), float32] */;
  %421 = cast(%var_10087, dtype="float32") /* ty=Tensor[(2548), float32] */;
  %422 = cast(%var_10088, dtype="float32") /* ty=Tensor[(1950, 1), float32] */;
  %423 = %419.0;
  %424 = cast(%423, dtype="float32") /* ty=Tensor[(324), float32] */;
  %425 = cast(%var_10089, dtype="float32") /* ty=Tensor[(144), float32] */;
  %426 = cast(%var_10090, dtype="int8") /* ty=Tensor[(3, 24), int8] */;
  %427 = reshape(%420, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
  %428 = reshape(%421, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
  %429 = reshape(%422, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %430 = reshape(%424, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
  %431 = reshape(%425, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %432 = reshape(%426, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %433 = @func_7924(%427, %428, %429, %430, %431, %432) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(6, 15, 2), float64], Tensor[(180, 1), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(15, 10, 13), float32], Tensor[(3, 108), float32], Tensor[(16, 10, 9), float32], Tensor[(144), float32], Tensor[(9, 12, 16), int64], Tensor[(8, 216), uint32], Tensor[(72), int8], Tensor[(14, 2, 8), float64], Tensor[(1, 224), float64], Tensor[(30), uint64], Tensor[(16, 10, 9), float32], Tensor[(9, 12, 16), bool]) */;
  %434 = cast(%var_10096, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %435 = shape_of(%var_10090, dtype="int32") /* ty=Tensor[(2), int32] */;
  %436 = cast(%var_10090, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %438 = cast(%var_10087, dtype="int16") /* ty=Tensor[(2548), int16] */;
  %439 = cast(%var_10088, dtype="int16") /* ty=Tensor[(1950, 1), int16] */;
  %440 = %433.3;
  %441 = divide(%436, %437) /* ty=Tensor[(3, 24), float32] */;
  %442 = bitwise_xor(%438, %439) /* ty=Tensor[(1950, 2548), int16] */;
  (%423, %440, %var_10089, %441, %442)
}

def @func_9627() -> (Tensor[(10, 13, 6), float32], Tensor[(16, 10, 9), float32], Tensor[(24, 6), float32]) {
  %443 = cast(meta[relay.Constant][46] /* ty=Tensor[(24, 6), float32] */, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %444 = reshape(%443, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), float32] */;
  %445 = @func_5760(%444) /* ty=(Tensor[(16, 10, 9), float32],) */;
  %446 = @func_8605() /* ty=Tensor[(10, 13, 6), float32] */;
  %447 = %445.0;
  (%446, %447, meta[relay.Constant][46] /* ty=Tensor[(24, 6), float32] */)
}

def @func_1037(%var_1035: Tensor[(60), float32]) -> (Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) {
  @func_1034(%var_1035) /* ty=(Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */
}

def @func_3394(%var_3332: Tensor[(3, 14, 8), float32], %var_3360: Tensor[(224), float64], %var_3361: Tensor[(30), uint64], %var_3368: Tensor[(72), int8], %var_3385: Tensor[(60), float32], %var_3392: Tensor[(260), float32]) -> (Tensor[(4, 3, 15), float64], Tensor[(180), float64], Tensor[(3, 14, 8), float32], Tensor[(5, 6), uint64], Tensor[(224), float64], Tensor[(30), uint64], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(3, 14, 8), float64], Tensor[(3, 14, 8), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32]) {
  %448 = cast(meta[relay.Constant][47] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %449 = reshape(%448, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
  %450 = cast(%var_3332, dtype="float32") /* ty=Tensor[(3, 14, 8), float32] */;
  %451 = cos(%450) /* ty=Tensor[(3, 14, 8), float32] */;
  %452 = cast(%var_3332, dtype="float32") /* ty=Tensor[(3, 14, 8), float32] */;
  %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%451, dtype="float32") /* ty=Tensor[(3, 14, 8), float32] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %456 = cast(%var_3360, dtype="float64") /* ty=Tensor[(224), float64] */;
  %457 = cast(%var_3361, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %458 = reshape(%456, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %459 = reshape(%457, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint64] */;
  %460 = @func_3051(%458, %459) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(1, 10, 3), uint64], uint64, Tensor[(5, 6), uint64]) */;
  %461 = cast(%var_3368, dtype="int8") /* ty=Tensor[(72), int8] */;
  %462 = cast(%var_3368, dtype="int8") /* ty=Tensor[(72), int8] */;
  %463 = reshape(%461, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %464 = reshape(%462, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %465 = @func_2444(%463, %464) /* ty=(Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %466 = cast(%451, dtype="float64") /* ty=Tensor[(3, 14, 8), float64] */;
  %467 = cast(%var_3332, dtype="float64") /* ty=Tensor[(3, 14, 8), float64] */;
  %468 = cast(%var_3385, dtype="float32") /* ty=Tensor[(60), float32] */;
  %469 = reshape(%468, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %470 = @func_1034(%469) /* ty=(Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %471 = cast(%var_3392, dtype="float32") /* ty=Tensor[(260), float32] */;
  %472 = reshape(%471, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), float32] */;
  %473 = @func_1894(%449) /* ty=Tensor[(4, 3, 15), float64] */;
  %474 = mod(%454, %455) /* ty=Tensor[(3, 14, 8), float32] */;
  %475 = %460.3;
  %476 = %465.0;
  %477 = tan(%466) /* ty=Tensor[(3, 14, 8), float64] */;
  %478 = atan(%467) /* ty=Tensor[(3, 14, 8), float64] */;
  %479 = %470.1;
  %480 = @func_2978(%472) /* ty=Tensor[(5, 13, 4), float32] */;
  (%473, meta[relay.Constant][47] /* ty=Tensor[(180), float64] */, %474, %475, %var_3360, %var_3361, %476, %var_3368, %477, %478, %479, %var_3385, %480, %var_3392)
}

def @func_9629() -> (Tensor[(10, 13, 6), float32], Tensor[(16, 10, 9), float32], Tensor[(24, 6), float32]) {
  @func_9627() /* ty=(Tensor[(10, 13, 6), float32], Tensor[(16, 10, 9), float32], Tensor[(24, 6), float32]) */
}

def @func_11091() -> (Tensor[(15, 10, 13), float32], Tensor[(10, 13, 6), float64], Tensor[(180), float64]) {
  @func_11089() /* ty=(Tensor[(15, 10, 13), float32], Tensor[(10, 13, 6), float64], Tensor[(180), float64]) */
}

def @func_8927(%var_8904: Tensor[(10, 13, 6), float64]) -> (Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32]) {
  %481 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  %482 = cast(%var_8904, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%481, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %486 = cast(%var_8904, dtype="float32") /* ty=Tensor[(10, 13, 6), float32] */;
  %487 = multiply(%484, %485) /* ty=Tensor[(10, 13, 6), float64] */;
  %488 = asinh(%486) /* ty=Tensor[(10, 13, 6), float32] */;
  (%487, %488)
}

def @func_11993() -> (Tensor[(324), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(144), float32], Tensor[(1568), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64]) {
  @func_11991() /* ty=(Tensor[(324), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(144), float32], Tensor[(1568), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64]) */
}

def @func_9727() -> (Tensor[(180), float64],) {
  %489 = @func_8828() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %490 = %489.2;
  (%490,)
}

def @func_4792(%var_4789: Tensor[(8, 6, 15), float32]) -> (Tensor[(8, 6, 15), float32],) {
  %491 = cast(%var_4789, dtype="float32") /* ty=Tensor[(8, 6, 15), float32] */;
  %492 = sinh(%491) /* ty=Tensor[(8, 6, 15), float32] */;
  (%492,)
}

def @func_10440(%var_10438: Tensor[(12, 42), float32], %var_10439: Tensor[(60, 1), float32]) -> (Tensor[(10, 13, 6), float64], Tensor[(12, 42), float32], Tensor[(960), float32], Tensor[(60, 180), int8], Tensor[(60, 180), bool]) {
  @func_10436(%var_10438, %var_10439) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(12, 42), float32], Tensor[(960), float32], Tensor[(60, 180), int8], Tensor[(60, 180), bool]) */
}

def @func_11321() -> Tensor[(180), float64] {
  %493 = @func_11303() /* ty=(Tensor[(180), float64],) */;
  %493.0
}

def @func_6994(%var_6990: Tensor[(8, 6, 7), float32], %var_6991: Tensor[(8, 6, 7), float32], %var_6992: Tensor[(180), float64], %var_6993: Tensor[(65, 4), float32]) -> (Tensor[(8, 6, 7), bool], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64], Tensor[(3, 14, 8), float64], Tensor[(224), float64], Tensor[(30), uint64], Tensor[(1, 72), int8], Tensor[(15, 4), float32], Tensor[(65, 4), bool]) {
  @func_6988(%var_6990, %var_6991, %var_6992, %var_6993) /* ty=(Tensor[(8, 6, 7), bool], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64], Tensor[(3, 14, 8), float64], Tensor[(224), float64], Tensor[(30), uint64], Tensor[(1, 72), int8], Tensor[(15, 4), float32], Tensor[(65, 4), bool]) */
}

def @func_10034(%var_9885: Tensor[(720), float32], %var_9905: Tensor[(72), int8], %var_9962: Tensor[(1188), int8], %var_9988: Tensor[(1, 560), float32], %var_10003: Tensor[(128), float32], %var_10004: Tensor[(1568), float32], %var_10032: Tensor[(528), uint64]) -> (Tensor[(8, 6, 15), float32], Tensor[(720), float32], Tensor[(324), bool], Tensor[(180), float64], Tensor[(72), int8], Tensor[(1, 10, 3), uint64], Tensor[(30), uint64], Tensor[(60), float32], Tensor[(260), float32], Tensor[(1188), int8], Tensor[(260), float32], Tensor[(324), uint64], Tensor[(8, 14, 5), float64], Tensor[(1, 560), float32], Tensor[(1568), float32], Tensor[(128), float32], Tensor[(1568), float32], Tensor[(4, 11, 12), uint64], Tensor[(44), uint64], Tensor[(528), uint64]) {
  %494 = cast(%var_9885, dtype="float32") /* ty=Tensor[(720), float32] */;
  %495 = reshape(%494, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float32] */;
  %496 = @func_4792(%495) /* ty=(Tensor[(8, 6, 15), float32],) */;
  %497 = @func_9182() /* ty=(Tensor[(324), float32],) */;
  %498 = %497.0;
  %499 = cast(meta[relay.Constant][48] /* ty=Tensor[(324), float32] */, dtype="bool") /* ty=Tensor[(324), bool] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(1), int32] */;
  %501 = cast(%498, dtype="bool") /* ty=Tensor[(324), bool] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?), bool] */;
  %503 = cast(%var_9905, dtype="int8") /* ty=Tensor[(72), int8] */;
  %504 = cast(%var_9905, dtype="int8") /* ty=Tensor[(72), int8] */;
  %505 = reshape(%503, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %506 = reshape(%504, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
  %507 = @func_2444(%505, %506) /* ty=(Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %508 = cast(meta[relay.Constant][49] /* ty=Tensor[(30), uint64] */, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %509 = reshape(%508, newshape=[30]) /* ty=Tensor[(30), uint64] */;
  %510 = @func_4464(%509) /* ty=(Tensor[(15, 8, 7), uint32], Tensor[(15, 8, 7), float64], Tensor[(60), float32], Tensor[(324), float32], Tensor[(1, 10, 3), uint64], uint64, Tensor[(30), uint64]) */;
  %511 = cast(%498, dtype="float32") /* ty=Tensor[(324), float32] */;
  %512 = reshape(%511, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %513 = @func_1380(%512) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %514 = cast(%var_9962, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %515 = cast(meta[relay.Constant][50] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %516 = cast(%var_9962, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %517 = reshape(%514, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), int8] */;
  %518 = reshape(%515, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %519 = reshape(%516, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), float32] */;
  %520 = @func_9848(%517, %518, %519) /* ty=(Tensor[(8, 6, 15), float32], Tensor[(180, 4), float32], Tensor[(13, 1, 14), float64], Tensor[(7, 16, 14), float32], Tensor[(56, 28), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32], Tensor[(7, 16, 14), float32], Tensor[(12, 11, 9), int32]) */;
  %521 = cast(meta[relay.Constant][48] /* ty=Tensor[(324), float32] */, dtype="uint64") /* ty=Tensor[(324), uint64] */;
  %522 = shape_of(%498, dtype="int32") /* ty=Tensor[(1), int32] */;
  %523 = cast(%498, dtype="uint64") /* ty=Tensor[(324), uint64] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %525 = cast(%var_9988, dtype="float32") /* ty=Tensor[(1, 560), float32] */;
  %526 = %513.2;
  %527 = cast(%526, dtype="float32") /* ty=Tensor[(60), float32] */;
  %528 = reshape(%525, newshape=[8, 14, 5]) /* ty=Tensor[(8, 14, 5), float32] */;
  %529 = reshape(%527, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %530 = @func_7390(%528, %529) /* ty=(Tensor[(8, 14, 5), float64], Tensor[(8, 14, 5), float32], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %531 = cast(%var_10003, dtype="float32") /* ty=Tensor[(128), float32] */;
  %532 = cast(%var_10004, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %533 = reshape(%531, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), float32] */;
  %534 = reshape(%532, newshape=[1568]) /* ty=Tensor[(1568), float32] */;
  %535 = @func_7711(%533, %534) /* ty=(Tensor[(8, 4, 4), float32], Tensor[(7, 16, 14), float32], Tensor[(1568), float32]) */;
  %536 = cast(meta[relay.Constant][51] /* ty=Tensor[(44), uint64] */, dtype="uint64") /* ty=Tensor[(44), uint64] */;
  %537 = cast(%var_10032, dtype="uint64") /* ty=Tensor[(528), uint64] */;
  %538 = reshape(%536, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), uint64] */;
  %539 = reshape(%537, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), uint64] */;
  %540 = @func_988(%538, %539) /* ty=(Tensor[(4, 11, 12), uint64],) */;
  %541 = %496.0;
  %542 = logical_or(%501, %502) /* ty=Tensor[(324), bool] */;
  %543 = %507.2;
  %544 = %510.4;
  %545 = %520.6;
  %546 = bitwise_and(%523, %524) /* ty=Tensor[(324), uint64] */;
  %547 = %530.0;
  %548 = %535.2;
  %549 = %540.0;
  (%541, %var_9885, %542, %543, %var_9905, %544, meta[relay.Constant][49] /* ty=Tensor[(30), uint64] */, %526, %545, %var_9962, meta[relay.Constant][50] /* ty=Tensor[(260), float32] */, %546, %547, %var_9988, %548, %var_10003, %var_10004, %549, meta[relay.Constant][51] /* ty=Tensor[(44), uint64] */, %var_10032)
}

def @func_7572(%var_7570: Tensor[(13, 6, 12), uint16], %var_7571: Tensor[(13, 6, 12), uint16]) -> Tensor[(13, 6, 12), float64] {
  %559 = fn (%var_7555: Tensor[(13, 6, 12), uint16], %var_7556: Tensor[(13, 6, 12), uint16]) -> Tensor[(13, 6, 12), float64] {
    %550 = cast(%var_7556, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
    %551 = shape_of(%var_7555, dtype="int32") /* ty=Tensor[(3), int32] */;
    %552 = cast(%var_7555, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
    %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %554 = not_equal(%552, %553) /* ty=Tensor[(13, 6, 12), bool] */;
    %555 = cast(%554, dtype="float64") /* ty=Tensor[(13, 6, 12), float64] */;
    %556 = shape_of(%var_7555, dtype="int32") /* ty=Tensor[(3), int32] */;
    %557 = cast(%var_7555, dtype="float64") /* ty=Tensor[(13, 6, 12), float64] */;
    %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%557, %558) /* ty=Tensor[(13, 6, 12), float64] */
  };
  %559(%var_7570, %var_7571) /* ty=Tensor[(13, 6, 12), float64] */
}

def @func_9526(%var_9524: Tensor[(3, 108), float32]) -> (Tensor[(10, 13, 6), float32], Tensor[(169, 4), int32], Tensor[(3, 108), bool]) {
  @func_9523(%var_9524) /* ty=(Tensor[(10, 13, 6), float32], Tensor[(169, 4), int32], Tensor[(3, 108), bool]) */
}

def @func_11542(%var_11541: Tensor[(10, 13, 6), float64]) -> (Tensor[(10, 13, 6), bool], Tensor[(180), float64]) {
  %569 = fn (%var_11521: Tensor[(10, 13, 6), float64]) -> (Tensor[(10, 13, 6), bool], Tensor[(180), float64]) {
    %560 = @func_8507() /* ty=(Tensor[(10, 13, 6), float64],) */;
    %561 = %560.0;
    %562 = cast(%var_11521, dtype="bool") /* ty=Tensor[(10, 13, 6), bool] */;
    %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
    %564 = cast(%561, dtype="bool") /* ty=Tensor[(10, 13, 6), bool] */;
    %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %566 = @func_9727() /* ty=(Tensor[(180), float64],) */;
    %567 = logical_or(%564, %565) /* ty=Tensor[(10, 13, 6), bool] */;
    %568 = %566.0;
    (%567, %568)
  };
  %569(%var_11541) /* ty=(Tensor[(10, 13, 6), bool], Tensor[(180), float64]) */
}

def @func_4351(%var_4340: Tensor[(13, 4, 13), int32], %var_4341: Tensor[(13, 4, 13), int32]) -> Tensor[(13, 4, 13), bool] {
  %570 = cast(%var_4341, dtype="bool") /* ty=Tensor[(13, 4, 13), bool] */;
  %571 = shape_of(%var_4340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%var_4340, dtype="bool") /* ty=Tensor[(13, 4, 13), bool] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%572, %573) /* ty=Tensor[(13, 4, 13), bool] */
}

def @func_203(%var_202: Tensor[(15, 10, 13), float32]) -> (Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) {
  %578 = fn (%var_188: Tensor[(15, 10, 13), float32]) -> (Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) {
    %574 = cast(%var_188, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
    %575 = cast(%var_188, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
    %576 = asin(%574) /* ty=Tensor[(15, 10, 13), float32] */;
    %577 = atanh(%575) /* ty=Tensor[(15, 10, 13), float32] */;
    (%576, %577)
  };
  %578(%var_202) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */
}

def @func_1383(%var_1381: Tensor[(6, 6, 9), float32]) -> (Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) {
  @func_1380(%var_1381) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */
}

def @func_11573(%var_11571: float32) -> Tensor[(10, 6, 1), float32] {
  @func_11570(%var_11571) /* ty=Tensor[(10, 6, 1), float32] */
}

def @func_7465(%var_7464: Tensor[(13, 1, 14), float64]) -> Tensor[(13, 1, 14), float64] {
  %580 = fn (%var_7459: Tensor[(13, 1, 14), float64]) -> Tensor[(13, 1, 14), float64] {
    %579 = cast(%var_7459, dtype="float64") /* ty=Tensor[(13, 1, 14), float64] */;
    acosh(%579) /* ty=Tensor[(13, 1, 14), float64] */
  };
  %580(%var_7464) /* ty=Tensor[(13, 1, 14), float64] */
}

def @func_11639(%var_11637: Tensor[(1950), float32]) -> (Tensor[(13, 4, 13), uint8], Tensor[(1, 10, 3), uint64], Tensor[(1950), float32]) {
  @func_11636(%var_11637) /* ty=(Tensor[(13, 4, 13), uint8], Tensor[(1, 10, 3), uint64], Tensor[(1950), float32]) */
}

def @func_10312(%var_10308: Tensor[(560), float32]) -> (Tensor[(450), uint8], Tensor[(8, 14, 5), float64], Tensor[(560), float32], Tensor[(60), float32]) {
  %581 = @func_9216() /* ty=(Tensor[(450), uint8], Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) */;
  %582 = cast(%var_10308, dtype="float32") /* ty=Tensor[(560), float32] */;
  %583 = cast(meta[relay.Constant][52] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %584 = reshape(%582, newshape=[8, 14, 5]) /* ty=Tensor[(8, 14, 5), float32] */;
  %585 = reshape(%583, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %586 = @func_7390(%584, %585) /* ty=(Tensor[(8, 14, 5), float64], Tensor[(8, 14, 5), float32], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %587 = %581.0;
  %588 = %586.0;
  (%587, %588, %var_10308, meta[relay.Constant][52] /* ty=Tensor[(60), float32] */)
}

def @func_3402(%var_3396: Tensor[(3, 14, 8), float32], %var_3397: Tensor[(224), float64], %var_3398: Tensor[(30), uint64], %var_3399: Tensor[(72), int8], %var_3400: Tensor[(60), float32], %var_3401: Tensor[(260), float32]) -> (Tensor[(4, 3, 15), float64], Tensor[(180), float64], Tensor[(3, 14, 8), float32], Tensor[(5, 6), uint64], Tensor[(224), float64], Tensor[(30), uint64], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(3, 14, 8), float64], Tensor[(3, 14, 8), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32]) {
  @func_3394(%var_3396, %var_3397, %var_3398, %var_3399, %var_3400, %var_3401) /* ty=(Tensor[(4, 3, 15), float64], Tensor[(180), float64], Tensor[(3, 14, 8), float32], Tensor[(5, 6), uint64], Tensor[(224), float64], Tensor[(30), uint64], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(3, 14, 8), float64], Tensor[(3, 14, 8), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32]) */
}

def @func_11305() -> (Tensor[(180), float64],) {
  @func_11303() /* ty=(Tensor[(180), float64],) */
}

def @func_6517(%var_6510: uint8, %var_6511: Tensor[(13, 1), uint8]) -> (Tensor[(13, 1), bool],) {
  %589 = cast(%var_6510, dtype="bool") /* ty=bool */;
  %590 = cast(%var_6511, dtype="bool") /* ty=Tensor[(13, 1), bool] */;
  %591 = not_equal(%589, %590) /* ty=Tensor[(13, 1), bool] */;
  (%591,)
}

def @func_9218() -> (Tensor[(450), uint8], Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) {
  @func_9216() /* ty=(Tensor[(450), uint8], Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) */
}

def @func_9336(%var_9327: Tensor[(1, 676), int32]) -> (Tensor[(324), float32], Tensor[(13, 4, 13), bool], Tensor[(1, 676), int32]) {
  %592 = cast(%var_9327, dtype="int32") /* ty=Tensor[(1, 676), int32] */;
  %593 = cast(%var_9327, dtype="int32") /* ty=Tensor[(1, 676), int32] */;
  %594 = reshape(%592, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %595 = reshape(%593, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %596 = @func_9310() /* ty=Tensor[(324), float32] */;
  %597 = @func_4351(%594, %595) /* ty=Tensor[(13, 4, 13), bool] */;
  (%596, %597, %var_9327)
}

def @func_10760() -> Tensor[(180), float64] {
  @func_10758() /* ty=Tensor[(180), float64] */
}

def @func_2444(%var_2431: Tensor[(12, 2, 3), int8], %var_2432: Tensor[(12, 2, 3), int8]) -> (Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
  %598 = cast(%var_2432, dtype="int8") /* ty=Tensor[(12, 2, 3), int8] */;
  %599 = shape_of(%var_2431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %600 = cast(%var_2431, dtype="int8") /* ty=Tensor[(12, 2, 3), int8] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %602 = cast(meta[relay.Constant][53] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %603 = reshape(%602, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float64] */;
  %604 = subtract(%600, %601) /* ty=Tensor[(12, 2, 3), int8] */;
  %605 = @func_1894(%603) /* ty=Tensor[(4, 3, 15), float64] */;
  (%604, %605, meta[relay.Constant][53] /* ty=Tensor[(180), float64] */)
}

def @func_10656(%var_10635: Tensor[(1, 120), bool]) -> (Tensor[(10, 13, 6), float64], Tensor[(2, 5, 12), float64], Tensor[(1, 120), bool]) {
  %606 = cast(%var_10635, dtype="bool") /* ty=Tensor[(1, 120), bool] */;
  %607 = reshape(%606, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), bool] */;
  %608 = @func_9371(%607) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(2, 5, 12), float32]) */;
  %609 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  %610 = %608.0;
  (%609, %610, %var_10635)
}

def @func_12177() -> (Tensor[(324), float32], Tensor[(5, 13, 4), float32], Tensor[(130, 2), float32]) {
  %616 = fn () -> (Tensor[(324), float32], Tensor[(5, 13, 4), float32], Tensor[(130, 2), float32]) {
    %611 = @func_11991() /* ty=(Tensor[(324), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(144), float32], Tensor[(1568), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64]) */;
    %612 = cast(meta[relay.Constant][54] /* ty=Tensor[(130, 2), float32] */, dtype="float32") /* ty=Tensor[(130, 2), float32] */;
    %613 = reshape(%612, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), float32] */;
    %614 = %611.0;
    %615 = @func_2978(%613) /* ty=Tensor[(5, 13, 4), float32] */;
    (%614, %615, meta[relay.Constant][54] /* ty=Tensor[(130, 2), float32] */)
  };
  %616() /* ty=(Tensor[(324), float32], Tensor[(5, 13, 4), float32], Tensor[(130, 2), float32]) */
}

def @func_2379(%var_2377: uint64, %var_2378: Tensor[(1, 10, 3), uint64]) -> (Tensor[(1, 10, 3), uint64],) {
  %620 = fn (%var_2364: uint64, %var_2365: Tensor[(1, 10, 3), uint64]) -> (Tensor[(1, 10, 3), uint64],) {
    %617 = cast(%var_2364, dtype="uint64") /* ty=uint64 */;
    %618 = cast(%var_2365, dtype="uint64") /* ty=Tensor[(1, 10, 3), uint64] */;
    %619 = bitwise_or(%617, %618) /* ty=Tensor[(1, 10, 3), uint64] */;
    (%619,)
  };
  %620(%var_2377, %var_2378) /* ty=(Tensor[(1, 10, 3), uint64],) */
}

def @func_10362(%var_10361: Tensor[(1, 13, 16), float64]) -> Tensor[(1, 13, 16), float64] {
  %622 = fn (%var_10349: Tensor[(1, 13, 16), float64]) -> Tensor[(1, 13, 16), float64] {
    %621 = cast(%var_10349, dtype="float64") /* ty=Tensor[(1, 13, 16), float64] */;
    asin(%621) /* ty=Tensor[(1, 13, 16), float64] */
  };
  %622(%var_10361) /* ty=Tensor[(1, 13, 16), float64] */
}

def @func_12070() -> (Tensor[(1950), uint16], Tensor[(5, 7, 15), float64], Tensor[(60), float32], Tensor[(72), int16], Tensor[(450), uint8], Tensor[(324), float32]) {
  %640 = fn () -> (Tensor[(1950), uint16], Tensor[(5, 7, 15), float64], Tensor[(60), float32], Tensor[(72), int16], Tensor[(450), uint8], Tensor[(324), float32]) {
    %623 = @func_11991() /* ty=(Tensor[(324), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(144), float32], Tensor[(1568), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64]) */;
    %624 = %623.2;
    %625 = cast(meta[relay.Constant][55] /* ty=Tensor[(1950), float32] */, dtype="uint16") /* ty=Tensor[(1950), uint16] */;
    %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(1), int32] */;
    %627 = cast(%624, dtype="uint16") /* ty=Tensor[(1950), uint16] */;
    %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %629 = cast(meta[relay.Constant][56] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %630 = reshape(%629, newshape=[60]) /* ty=Tensor[(60), float32] */;
    %631 = @func_1034(%630) /* ty=(Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
    %632 = cast(meta[relay.Constant][57] /* ty=Tensor[(450), uint8] */, dtype="uint8") /* ty=Tensor[(450), uint8] */;
    %633 = cast(meta[relay.Constant][58] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
    %634 = reshape(%632, newshape=[15, 5, 6]) /* ty=Tensor[(15, 5, 6), uint8] */;
    %635 = reshape(%633, newshape=[324]) /* ty=Tensor[(324), float32] */;
    %636 = @func_2137(%634, %635) /* ty=(Tensor[(15, 5, 6), uint8], Tensor[(60), float32], Tensor[(72), int16], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(60), float32]) */;
    %637 = maximum(%627, %628) /* ty=Tensor[(1950), uint16] */;
    %638 = %631.0;
    %639 = %636.2;
    (%637, %638, meta[relay.Constant][56] /* ty=Tensor[(60), float32] */, %639, meta[relay.Constant][57] /* ty=Tensor[(450), uint8] */, meta[relay.Constant][58] /* ty=Tensor[(324), float32] */)
  };
  %640() /* ty=(Tensor[(1950), uint16], Tensor[(5, 7, 15), float64], Tensor[(60), float32], Tensor[(72), int16], Tensor[(450), uint8], Tensor[(324), float32]) */
}

def @func_3055(%var_3053: Tensor[(14, 2, 8), float64], %var_3054: Tensor[(5, 6), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(1, 10, 3), uint64], uint64, Tensor[(5, 6), uint64]) {
  @func_3051(%var_3053, %var_3054) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(1, 10, 3), uint64], uint64, Tensor[(5, 6), uint64]) */
}

def @func_9162() -> (Tensor[(324), float32],) {
  %641 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
  %642 = %641.2;
  (%642,)
}

def @func_6988(%var_6918: Tensor[(8, 6, 7), float32], %var_6919: Tensor[(8, 6, 7), float32], %var_6948: Tensor[(180), float64], %var_6982: Tensor[(65, 4), float32]) -> (Tensor[(8, 6, 7), bool], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(6, 15, 2), float64], Tensor[(180), float64], Tensor[(3, 14, 8), float64], Tensor[(224), float64], Tensor[(30), uint64], Tensor[(1, 72), int8], Tensor[(15, 4), float32], Tensor[(65, 4), bool]) {
  %643 = cast(%var_6919, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %644 = shape_of(%var_6918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%var_6918, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %647 = cast(meta[relay.Constant][59] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %648 = reshape(%647, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %649 = @func_1380(%648) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
  %650 = cast(%var_6948, dtype="float64") /* ty=Tensor[(180), float64] */;
  %651 = reshape(%650, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), float64] */;
  %652 = @func_5916(%651) /* ty=(Tensor[(6, 15, 2), float64],) */;
  %653 = cast(%var_6919, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %654 = cast(meta[relay.Constant][60] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %655 = cast(meta[relay.Constant][61] /* ty=Tensor[(30), uint64] */, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %656 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 72), int8] */, dtype="int8") /* ty=Tensor[(1, 72), int8] */;
  %657 = cast(meta[relay.Constant][63] /* ty=Tensor[(15, 4), float32] */, dtype="float32") /* ty=Tensor[(15, 4), float32] */;
  %658 = cast(meta[relay.Constant][64] /* ty=Tensor[(65, 4), float32] */, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
  %659 = reshape(%653, newshape=[3, 14, 8]) /* ty=Tensor[(3, 14, 8), float32] */;
  %660 = reshape(%654, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %661 = reshape(%655, newshape=[30]) /* ty=Tensor[(30), uint64] */;
  %662 = reshape(%656, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %663 = reshape(%657, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %664 = reshape(%658, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %665 = @func_3394(%659, %660, %661, %662, %663, %664) /* ty=(Tensor[(4, 3, 15), float64], Tensor[(180), float64], Tensor[(3, 14, 8), float32], Tensor[(5, 6), uint64], Tensor[(224), float64], Tensor[(30), uint64], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(3, 14, 8), float64], Tensor[(3, 14, 8), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32]) */;
  %666 = cast(%var_6982, dtype="bool") /* ty=Tensor[(65, 4), bool] */;
  %667 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(65, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %668 = cast(meta[relay.Constant][64] /* ty=Tensor[(65, 4), float32] */, dtype="bool") /* ty=Tensor[(65, 4), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %670 = equal(%645, %646) /* ty=Tensor[(8, 6, 7), bool] */;
  %671 = %649.0;
  %672 = %652.0;
  %673 = %665.8;
  %674 = less_equal(%668, %669) /* ty=Tensor[(65, 4), bool] */;
  (%670, %671, meta[relay.Constant][59] /* ty=Tensor[(324), float32] */, %672, %var_6948, %673, meta[relay.Constant][60] /* ty=Tensor[(224), float64] */, meta[relay.Constant][61] /* ty=Tensor[(30), uint64] */, meta[relay.Constant][62] /* ty=Tensor[(1, 72), int8] */, meta[relay.Constant][63] /* ty=Tensor[(15, 4), float32] */, %674)
}

def @func_11193() -> Tensor[(180), float64] {
  %675 = @func_8828() /* ty=(Tensor[(450), uint8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %675.2
}

def @func_9140(%var_9137: Tensor[(504), float32], %var_9138: Tensor[(1, 60), float32], %var_9139: Tensor[(16, 60), float32]) -> (Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(16, 60), float32], Tensor[(180), float64], Tensor[(864), float32], Tensor[(30), uint64], Tensor[(6, 30), float64], Tensor[(10, 13, 6), float64]) {
  @func_9135(%var_9137, %var_9138, %var_9139) /* ty=(Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(16, 60), float32], Tensor[(180), float64], Tensor[(864), float32], Tensor[(30), uint64], Tensor[(6, 30), float64], Tensor[(10, 13, 6), float64]) */
}

def @func_7931(%var_7925: Tensor[(14, 14, 13), float32], %var_7926: Tensor[(14, 14, 13), float32], %var_7927: Tensor[(1950), float32], %var_7928: Tensor[(3, 108), float32], %var_7929: Tensor[(144), float32], %var_7930: Tensor[(72), int8]) -> (Tensor[(14, 14, 13), float32], Tensor[(6, 15, 2), float64], Tensor[(180, 1), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(15, 10, 13), float32], Tensor[(3, 108), float32], Tensor[(16, 10, 9), float32], Tensor[(144), float32], Tensor[(9, 12, 16), int64], Tensor[(8, 216), uint32], Tensor[(72), int8], Tensor[(14, 2, 8), float64], Tensor[(1, 224), float64], Tensor[(30), uint64], Tensor[(16, 10, 9), float32], Tensor[(9, 12, 16), bool]) {
  %719 = fn (%var_7835: Tensor[(14, 14, 13), float32], %var_7836: Tensor[(14, 14, 13), float32], %var_7851: Tensor[(1950), float32], %var_7856: Tensor[(3, 108), float32], %var_7870: Tensor[(144), float32], %var_7876: Tensor[(72), int8]) -> (Tensor[(14, 14, 13), float32], Tensor[(6, 15, 2), float64], Tensor[(180, 1), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(15, 10, 13), float32], Tensor[(3, 108), float32], Tensor[(16, 10, 9), float32], Tensor[(144), float32], Tensor[(9, 12, 16), int64], Tensor[(8, 216), uint32], Tensor[(72), int8], Tensor[(14, 2, 8), float64], Tensor[(1, 224), float64], Tensor[(30), uint64], Tensor[(16, 10, 9), float32], Tensor[(9, 12, 16), bool]) {
    %676 = cast(%var_7836, dtype="float32") /* ty=Tensor[(14, 14, 13), float32] */;
    %677 = shape_of(%var_7835, dtype="int32") /* ty=Tensor[(3), int32] */;
    %678 = cast(%var_7835, dtype="float32") /* ty=Tensor[(14, 14, 13), float32] */;
    %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %680 = cast(meta[relay.Constant][65] /* ty=Tensor[(180, 1), float64] */, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
    %681 = reshape(%680, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), float64] */;
    %682 = @func_5916(%681) /* ty=(Tensor[(6, 15, 2), float64],) */;
    %683 = cast(%var_7851, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %684 = reshape(%683, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
    %685 = @func_201(%684) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(15, 10, 13), float32]) */;
    %686 = cast(%var_7856, dtype="float32") /* ty=Tensor[(3, 108), float32] */;
    %687 = reshape(%686, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
    %688 = @func_1380(%687) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
    %689 = cast(%var_7870, dtype="float32") /* ty=Tensor[(144), float32] */;
    %690 = reshape(%689, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), float32] */;
    %691 = @func_5760(%690) /* ty=(Tensor[(16, 10, 9), float32],) */;
    %692 = cast(meta[relay.Constant][66] /* ty=Tensor[(8, 216), uint32] */, dtype="uint32") /* ty=Tensor[(8, 216), uint32] */;
    %693 = cast(%var_7876, dtype="int8") /* ty=Tensor[(72), int8] */;
    %694 = reshape(%692, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), uint32] */;
    %695 = reshape(%693, newshape=[72]) /* ty=Tensor[(72), int8] */;
    %696 = @func_5639(%694, %695) /* ty=(Tensor[(9, 12, 16), bool], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(9, 12, 16), int64]) */;
    %697 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 224), float64] */, dtype="float64") /* ty=Tensor[(1, 224), float64] */;
    %698 = cast(meta[relay.Constant][68] /* ty=Tensor[(30), uint64] */, dtype="uint64") /* ty=Tensor[(30), uint64] */;
    %699 = reshape(%697, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %700 = reshape(%698, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint64] */;
    %701 = @func_3051(%699, %700) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(1, 10, 3), uint64], uint64, Tensor[(5, 6), uint64]) */;
    %702 = cast(%var_7870, dtype="float32") /* ty=Tensor[(144), float32] */;
    %703 = reshape(%702, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), float32] */;
    %704 = @func_5760(%703) /* ty=(Tensor[(16, 10, 9), float32],) */;
    %705 = %696.3;
    %706 = cast(%705, dtype="uint32") /* ty=Tensor[(9, 12, 16), uint32] */;
    %707 = cast(%var_7876, dtype="int8") /* ty=Tensor[(72), int8] */;
    %708 = reshape(%706, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), uint32] */;
    %709 = reshape(%707, newshape=[72]) /* ty=Tensor[(72), int8] */;
    %710 = @func_5639(%708, %709) /* ty=(Tensor[(9, 12, 16), bool], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(9, 12, 16), int64]) */;
    %711 = power(%678, %679) /* ty=Tensor[(14, 14, 13), float32] */;
    %712 = %682.0;
    %713 = %685.1;
    %714 = %688.1;
    %715 = %691.0;
    %716 = %701.0;
    %717 = %704.0;
    %718 = %710.0;
    (%711, %712, meta[relay.Constant][65] /* ty=Tensor[(180, 1), float64] */, %713, %var_7851, %714, %var_7856, %715, %var_7870, %705, meta[relay.Constant][66] /* ty=Tensor[(8, 216), uint32] */, %var_7876, %716, meta[relay.Constant][67] /* ty=Tensor[(1, 224), float64] */, meta[relay.Constant][68] /* ty=Tensor[(30), uint64] */, %717, %718)
  };
  %719(%var_7925, %var_7926, %var_7927, %var_7928, %var_7929, %var_7930) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(6, 15, 2), float64], Tensor[(180, 1), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(15, 10, 13), float32], Tensor[(3, 108), float32], Tensor[(16, 10, 9), float32], Tensor[(144), float32], Tensor[(9, 12, 16), int64], Tensor[(8, 216), uint32], Tensor[(72), int8], Tensor[(14, 2, 8), float64], Tensor[(1, 224), float64], Tensor[(30), uint64], Tensor[(16, 10, 9), float32], Tensor[(9, 12, 16), bool]) */
}

def @func_9312() -> Tensor[(324), float32] {
  @func_9310() /* ty=Tensor[(324), float32] */
}

def @func_9135(%var_9110: Tensor[(504), float32], %var_9111: Tensor[(1, 60), float32], %var_9113: Tensor[(16, 60), float32]) -> (Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(16, 60), float32], Tensor[(180), float64], Tensor[(864), float32], Tensor[(30), uint64], Tensor[(6, 30), float64], Tensor[(10, 13, 6), float64]) {
  %720 = cast(%var_9110, dtype="float32") /* ty=Tensor[(504), float32] */;
  %721 = cast(%var_9111, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %722 = reshape(%720, newshape=[14, 3, 12]) /* ty=Tensor[(14, 3, 12), float32] */;
  %723 = reshape(%721, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %724 = @func_6259(%722, %723) /* ty=(Tensor[(14, 3, 12), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(4, 15, 1), float32], Tensor[(60, 1), float32]) */;
  %725 = cast(%var_9111, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %726 = cast(%var_9113, dtype="float32") /* ty=Tensor[(16, 60), float32] */;
  %727 = cast(meta[relay.Constant][69] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %728 = cast(meta[relay.Constant][70] /* ty=Tensor[(30), uint64] */, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %729 = cast(meta[relay.Constant][71] /* ty=Tensor[(6, 30), float64] */, dtype="float64") /* ty=Tensor[(6, 30), float64] */;
  %730 = reshape(%727, newshape=[6, 12, 12]) /* ty=Tensor[(6, 12, 12), float32] */;
  %731 = reshape(%728, newshape=[30]) /* ty=Tensor[(30), uint64] */;
  %732 = reshape(%729, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %733 = @func_6038(%730, %731, %732) /* ty=(Tensor[(6, 12, 12), bool], uint64, Tensor[(224), float64], Tensor[(30), uint64], Tensor[(1, 10, 3), uint64], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
  %734 = @func_8605() /* ty=Tensor[(10, 13, 6), float32] */;
  %735 = %724.1;
  %736 = divide(%725, %726) /* ty=Tensor[(16, 60), float32] */;
  %737 = %733.6;
  %738 = @func_8428() /* ty=Tensor[(10, 13, 6), float64] */;
  (%734, %735, %var_9110, %736, %737, meta[relay.Constant][69] /* ty=Tensor[(864), float32] */, meta[relay.Constant][70] /* ty=Tensor[(30), uint64] */, meta[relay.Constant][71] /* ty=Tensor[(6, 30), float64] */, %738)
}

def @func_11140() -> (Tensor[(10, 13, 6), float32], Tensor[(676, 1), int32], Tensor[(13, 4, 13), uint8]) {
  %739 = cast(meta[relay.Constant][72] /* ty=Tensor[(676, 1), int32] */, dtype="int32") /* ty=Tensor[(676, 1), int32] */;
  %740 = cast(meta[relay.Constant][72] /* ty=Tensor[(676, 1), int32] */, dtype="int32") /* ty=Tensor[(676, 1), int32] */;
  %741 = reshape(%739, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %742 = reshape(%740, newshape=[13, 4, 13]) /* ty=Tensor[(13, 4, 13), int32] */;
  %743 = @func_4351(%741, %742) /* ty=Tensor[(13, 4, 13), bool] */;
  %744 = cast(%743, dtype="float64") /* ty=Tensor[(13, 4, 13), float64] */;
  %745 = tan(%744) /* ty=Tensor[(13, 4, 13), float64] */;
  %746 = cast(%743, dtype="uint8") /* ty=Tensor[(13, 4, 13), uint8] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%745, dtype="uint8") /* ty=Tensor[(13, 4, 13), uint8] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %750 = @func_8605() /* ty=Tensor[(10, 13, 6), float32] */;
  %751 = multiply(%748, %749) /* ty=Tensor[(13, 4, 13), uint8] */;
  (%750, meta[relay.Constant][72] /* ty=Tensor[(676, 1), int32] */, %751)
}

def @func_9039(%var_9032: Tensor[(6, 11, 7), float64]) -> Tensor[(6, 11, 7), float64] {
  %752 = cast(%var_9032, dtype="float64") /* ty=Tensor[(6, 11, 7), float64] */;
  cos(%752) /* ty=Tensor[(6, 11, 7), float64] */
}

def @func_2448(%var_2446: Tensor[(12, 2, 3), int8], %var_2447: Tensor[(12, 2, 3), int8]) -> (Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) {
  @func_2444(%var_2446, %var_2447) /* ty=(Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */
}

def @func_10958(%var_10957: Tensor[(13, 1, 9), float64]) -> (Tensor[(13, 1, 9), float64], Tensor[(72), int8], Tensor[(1728), uint32], Tensor[(72), int8]) {
  %761 = fn (%var_10930: Tensor[(13, 1, 9), float64]) -> (Tensor[(13, 1, 9), float64], Tensor[(72), int8], Tensor[(1728), uint32], Tensor[(72), int8]) {
    %753 = cast(%var_10930, dtype="float64") /* ty=Tensor[(13, 1, 9), float64] */;
    %754 = cast(meta[relay.Constant][73] /* ty=Tensor[(1728), uint32] */, dtype="uint32") /* ty=Tensor[(1728), uint32] */;
    %755 = cast(meta[relay.Constant][74] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
    %756 = reshape(%754, newshape=[9, 12, 16]) /* ty=Tensor[(9, 12, 16), uint32] */;
    %757 = reshape(%755, newshape=[72]) /* ty=Tensor[(72), int8] */;
    %758 = @func_5639(%756, %757) /* ty=(Tensor[(9, 12, 16), bool], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(9, 12, 16), int64]) */;
    %759 = exp(%753) /* ty=Tensor[(13, 1, 9), float64] */;
    %760 = %758.2;
    (%759, %760, meta[relay.Constant][73] /* ty=Tensor[(1728), uint32] */, meta[relay.Constant][74] /* ty=Tensor[(72), int8] */)
  };
  %761(%var_10957) /* ty=(Tensor[(13, 1, 9), float64], Tensor[(72), int8], Tensor[(1728), uint32], Tensor[(72), int8]) */
}

def @func_10659(%var_10657: Tensor[(1, 120), bool]) -> (Tensor[(10, 13, 6), float64], Tensor[(2, 5, 12), float64], Tensor[(1, 120), bool]) {
  @func_10656(%var_10657) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(2, 5, 12), float64], Tensor[(1, 120), bool]) */
}

def @main(%var_12196: Tensor[(3, 7, 4), float32]) -> (Tensor[(3, 7, 4), float32],) {
  %762 = cast(%var_12196, dtype="float32") /* ty=Tensor[(3, 7, 4), float32] */;
  %763 = sigmoid(%762) /* ty=Tensor[(3, 7, 4), float32] */;
  (%763,)
}

def @func_11680() -> (Tensor[(180), float64],) {
  %766 = fn () -> (Tensor[(180), float64],) {
    %764 = @func_10582() /* ty=(Tensor[(180), float64],) */;
    %765 = %764.0;
    (%765,)
  };
  %766() /* ty=(Tensor[(180), float64],) */
}

def @func_11433(%var_11430: Tensor[(1950), float32], %var_11431: Tensor[(144), float32], %var_11432: Tensor[(1568, 1), float32]) -> (Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(324), float32], Tensor[(144), float32], Tensor[(72), int8], Tensor[(7, 16, 14), float32], Tensor[(1568, 1), float32], Tensor[(10, 13, 6), float64], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(60), float32]) {
  %800 = fn (%var_11383: Tensor[(1950), float32], %var_11385: Tensor[(144), float32], %var_11397: Tensor[(1568, 1), float32]) -> (Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(324), float32], Tensor[(144), float32], Tensor[(72), int8], Tensor[(7, 16, 14), float32], Tensor[(1568, 1), float32], Tensor[(10, 13, 6), float64], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(60), float32]) {
    %767 = @func_9216() /* ty=(Tensor[(450), uint8], Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) */;
    %768 = %767.1;
    %769 = cast(%768, dtype="float64") /* ty=Tensor[(10, 13, 6), float64] */;
    %770 = reshape(%769, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), float64] */;
    %771 = @func_8927(%770) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32]) */;
    %772 = cast(meta[relay.Constant][75] /* ty=Tensor[(2548), float32] */, dtype="float32") /* ty=Tensor[(2548), float32] */;
    %773 = cast(meta[relay.Constant][75] /* ty=Tensor[(2548), float32] */, dtype="float32") /* ty=Tensor[(2548), float32] */;
    %774 = cast(%var_11383, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %775 = cast(meta[relay.Constant][76] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
    %776 = cast(%var_11385, dtype="float32") /* ty=Tensor[(144), float32] */;
    %777 = cast(meta[relay.Constant][77] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
    %778 = reshape(%772, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
    %779 = reshape(%773, newshape=[14, 14, 13]) /* ty=Tensor[(14, 14, 13), float32] */;
    %780 = reshape(%774, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %781 = reshape(%775, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
    %782 = reshape(%776, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %783 = reshape(%777, newshape=[72]) /* ty=Tensor[(72), int8] */;
    %784 = @func_7924(%778, %779, %780, %781, %782, %783) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(6, 15, 2), float64], Tensor[(180, 1), float64], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(15, 10, 13), float32], Tensor[(3, 108), float32], Tensor[(16, 10, 9), float32], Tensor[(144), float32], Tensor[(9, 12, 16), int64], Tensor[(8, 216), uint32], Tensor[(72), int8], Tensor[(14, 2, 8), float64], Tensor[(1, 224), float64], Tensor[(30), uint64], Tensor[(16, 10, 9), float32], Tensor[(9, 12, 16), bool]) */;
    %785 = cast(%var_11397, dtype="float32") /* ty=Tensor[(1568, 1), float32] */;
    %786 = cast(%var_11397, dtype="float32") /* ty=Tensor[(1568, 1), float32] */;
    %787 = reshape(%785, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
    %788 = reshape(%786, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
    %789 = @func_11290() /* ty=(Tensor[(10, 13, 6), float64], Tensor[(784, 2), float32]) */;
    %790 = cast(meta[relay.Constant][78] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %791 = cast(meta[relay.Constant][79] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %792 = reshape(%790, newshape=[14, 3, 12]) /* ty=Tensor[(14, 3, 12), float32] */;
    %793 = reshape(%791, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
    %794 = @func_6259(%792, %793) /* ty=(Tensor[(14, 3, 12), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(4, 15, 1), float32], Tensor[(60, 1), float32]) */;
    %795 = %771.1;
    %796 = %784.3;
    %797 = @func_1331(%787, %788) /* ty=Tensor[(7, 16, 14), float32] */;
    %798 = %789.0;
    %799 = %794.1;
    (%768, %795, %796, meta[relay.Constant][75] /* ty=Tensor[(2548), float32] */, %var_11383, meta[relay.Constant][76] /* ty=Tensor[(324), float32] */, %var_11385, meta[relay.Constant][77] /* ty=Tensor[(72), int8] */, %797, %var_11397, %798, %799, meta[relay.Constant][78] /* ty=Tensor[(504), float32] */, meta[relay.Constant][79] /* ty=Tensor[(60), float32] */)
  };
  %800(%var_11430, %var_11431, %var_11432) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(10, 13, 6), float32], Tensor[(15, 10, 13), float32], Tensor[(2548), float32], Tensor[(1950), float32], Tensor[(324), float32], Tensor[(144), float32], Tensor[(72), int8], Tensor[(7, 16, 14), float32], Tensor[(1568, 1), float32], Tensor[(10, 13, 6), float64], Tensor[(15, 10, 13), float32], Tensor[(504), float32], Tensor[(60), float32]) */
}

def @func_4466(%var_4465: Tensor[(30), uint64]) -> (Tensor[(15, 8, 7), uint32], Tensor[(15, 8, 7), float64], Tensor[(60), float32], Tensor[(324), float32], Tensor[(1, 10, 3), uint64], uint64, Tensor[(30), uint64]) {
  %820 = fn (%var_4462: Tensor[(30), uint64]) -> (Tensor[(15, 8, 7), uint32], Tensor[(15, 8, 7), float64], Tensor[(60), float32], Tensor[(324), float32], Tensor[(1, 10, 3), uint64], uint64, Tensor[(30), uint64]) {
    %801 = cast(meta[relay.Constant][80] /* ty=Tensor[(15, 8, 7), float32] */, dtype="float32") /* ty=Tensor[(15, 8, 7), float32] */;
    %802 = acosh(%801) /* ty=Tensor[(15, 8, 7), float32] */;
    %803 = cast(meta[relay.Constant][80] /* ty=Tensor[(15, 8, 7), float32] */, dtype="uint32") /* ty=Tensor[(15, 8, 7), uint32] */;
    %804 = shape_of(%802, dtype="int32") /* ty=Tensor[(3), int32] */;
    %805 = cast(%802, dtype="uint32") /* ty=Tensor[(15, 8, 7), uint32] */;
    %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %807 = cast(%802, dtype="float64") /* ty=Tensor[(15, 8, 7), float64] */;
    %808 = cast(meta[relay.Constant][81] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
    %809 = reshape(%808, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
    %810 = @func_1380(%809) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) */;
    %811 = cast(meta[relay.Constant][82] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %812 = cast(%var_4462, dtype="uint64") /* ty=Tensor[(30), uint64] */;
    %813 = reshape(%811, newshape=[]) /* ty=uint64 */;
    %814 = reshape(%812, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), uint64] */;
    %815 = @func_2376(%813, %814) /* ty=(Tensor[(1, 10, 3), uint64],) */;
    %816 = maximum(%805, %806) /* ty=Tensor[(15, 8, 7), uint32] */;
    %817 = asinh(%807) /* ty=Tensor[(15, 8, 7), float64] */;
    %818 = %810.2;
    %819 = %815.0;
    (%816, %817, %818, meta[relay.Constant][81] /* ty=Tensor[(324), float32] */, %819, meta[relay.Constant][82] /* ty=uint64 */, %var_4462)
  };
  %820(%var_4465) /* ty=(Tensor[(15, 8, 7), uint32], Tensor[(15, 8, 7), float64], Tensor[(60), float32], Tensor[(324), float32], Tensor[(1, 10, 3), uint64], uint64, Tensor[(30), uint64]) */
}

def @func_9852(%var_9849: Tensor[(12, 11, 9), int8], %var_9850: Tensor[(260), float32], %var_9851: Tensor[(12, 11, 9), float32]) -> (Tensor[(8, 6, 15), float32], Tensor[(180, 4), float32], Tensor[(13, 1, 14), float64], Tensor[(7, 16, 14), float32], Tensor[(56, 28), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32], Tensor[(7, 16, 14), float32], Tensor[(12, 11, 9), int32]) {
  %858 = fn (%var_9775: Tensor[(12, 11, 9), int8], %var_9824: Tensor[(260), float32], %var_9842: Tensor[(12, 11, 9), float32]) -> (Tensor[(8, 6, 15), float32], Tensor[(180, 4), float32], Tensor[(13, 1, 14), float64], Tensor[(7, 16, 14), float32], Tensor[(56, 28), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32], Tensor[(7, 16, 14), float32], Tensor[(12, 11, 9), int32]) {
    %821 = cast(meta[relay.Constant][83] /* ty=Tensor[(180, 4), float32] */, dtype="float32") /* ty=Tensor[(180, 4), float32] */;
    %822 = reshape(%821, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), float32] */;
    %823 = @func_4792(%822) /* ty=(Tensor[(8, 6, 15), float32],) */;
    %824 = @func_8785() /* ty=(Tensor[(60), float32], Tensor[(450), uint8], Tensor[(324), float32], Tensor[(13, 1, 14), float64], Tensor[(182), float64], Tensor[(10, 13, 6), float32]) */;
    %825 = cast(meta[relay.Constant][84] /* ty=Tensor[(56, 28), float32] */, dtype="float32") /* ty=Tensor[(56, 28), float32] */;
    %826 = reshape(%825, newshape=[1, 1568]) /* ty=Tensor[(1, 1568), float32] */;
    %827 = @func_8469(%826) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(7, 16, 14), float32], Tensor[(128), float32], Tensor[(1, 1568), float32]) */;
    %828 = cast(%var_9824, dtype="float32") /* ty=Tensor[(260), float32] */;
    %829 = reshape(%828, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), float32] */;
    %830 = %827.1;
    %831 = cast(%830, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
    %832 = cast(%830, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
    %833 = reshape(%831, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
    %834 = reshape(%832, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
    %835 = cast(meta[relay.Constant][85] /* ty=Tensor[(12, 11, 9), int8] */, dtype="bool") /* ty=Tensor[(12, 11, 9), bool] */;
    %836 = shape_of(%var_9775, dtype="int32") /* ty=Tensor[(3), int32] */;
    %837 = cast(%var_9775, dtype="bool") /* ty=Tensor[(12, 11, 9), bool] */;
    %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %839 = greater_equal(%837, %838) /* ty=Tensor[(12, 11, 9), bool] */;
    %840 = cast(%839, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
    %841 = sin(%840) /* ty=Tensor[(12, 11, 9), float32] */;
    %842 = cast(%var_9775, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
    %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
    %844 = cast(%841, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
    %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %846 = power(%844, %845) /* ty=Tensor[(12, 11, 9), float32] */;
    %847 = cast(%846, dtype="float32") /* ty=Tensor[(12, 11, 9), float32] */;
    %848 = rsqrt(%847) /* ty=Tensor[(12, 11, 9), float32] */;
    %849 = cast(%var_9842, dtype="int32") /* ty=Tensor[(12, 11, 9), int32] */;
    %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
    %851 = cast(%848, dtype="int32") /* ty=Tensor[(12, 11, 9), int32] */;
    %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %853 = %823.0;
    %854 = %824.3;
    %855 = @func_2978(%829) /* ty=Tensor[(5, 13, 4), float32] */;
    %856 = @func_1331(%833, %834) /* ty=Tensor[(7, 16, 14), float32] */;
    %857 = logical_xor(%851, %852) /* ty=Tensor[(12, 11, 9), int32] */;
    (%853, meta[relay.Constant][83] /* ty=Tensor[(180, 4), float32] */, %854, %830, meta[relay.Constant][84] /* ty=Tensor[(56, 28), float32] */, %855, %var_9824, %856, %857)
  };
  %858(%var_9849, %var_9850, %var_9851) /* ty=(Tensor[(8, 6, 15), float32], Tensor[(180, 4), float32], Tensor[(13, 1, 14), float64], Tensor[(7, 16, 14), float32], Tensor[(56, 28), float32], Tensor[(5, 13, 4), float32], Tensor[(260), float32], Tensor[(7, 16, 14), float32], Tensor[(12, 11, 9), int32]) */
}

def @func_10583() -> (Tensor[(180), float64],) {
  %861 = fn () -> (Tensor[(180), float64],) {
    %859 = @func_9727() /* ty=(Tensor[(180), float64],) */;
    %860 = %859.0;
    (%860,)
  };
  %861() /* ty=(Tensor[(180), float64],) */
}

def @func_9729() -> (Tensor[(180), float64],) {
  @func_9727() /* ty=(Tensor[(180), float64],) */
}

def @func_11261() -> Tensor[(180), float64] {
  %862 = fn () -> Tensor[(180), float64] {
    @func_10686() /* ty=Tensor[(180), float64] */
  };
  %862() /* ty=Tensor[(180), float64] */
}

def @func_11702(%var_11701: Tensor[(324), float32]) -> (Tensor[(182), float64], Tensor[(324), float32], uint8, Tensor[(324), float32]) {
  %871 = fn (%var_11688: Tensor[(324), float32]) -> (Tensor[(182), float64], Tensor[(324), float32], uint8, Tensor[(324), float32]) {
    %863 = @func_10062() /* ty=(Tensor[(182), float64],) */;
    %864 = cast(meta[relay.Constant][86] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %865 = cast(%var_11688, dtype="float32") /* ty=Tensor[(324), float32] */;
    %866 = reshape(%864, newshape=[]) /* ty=uint8 */;
    %867 = reshape(%865, newshape=[324]) /* ty=Tensor[(324), float32] */;
    %868 = @func_5246(%866, %867) /* ty=(Tensor[(60), float32], Tensor[(324), float32], Tensor[(?, 5, 3), bool], Tensor[(1, 5, 3), float64], Tensor[(13, 4, 13), bool], Tensor[(169, 4), int32]) */;
    %869 = %863.0;
    %870 = %868.1;
    (%869, %870, meta[relay.Constant][86] /* ty=uint8 */, %var_11688)
  };
  %871(%var_11701) /* ty=(Tensor[(182), float64], Tensor[(324), float32], uint8, Tensor[(324), float32]) */
}

def @func_5642(%var_5640: Tensor[(9, 12, 16), uint32], %var_5641: Tensor[(72), int8]) -> (Tensor[(9, 12, 16), bool], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(9, 12, 16), int64]) {
  %888 = fn (%var_5614: Tensor[(9, 12, 16), uint32], %var_5628: Tensor[(72), int8]) -> (Tensor[(9, 12, 16), bool], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(9, 12, 16), int64]) {
    %872 = cast(%var_5614, dtype="bool") /* ty=Tensor[(9, 12, 16), bool] */;
    %873 = shape_of(meta[relay.Constant][87] /* ty=Tensor[(9, 12, 16), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %874 = cast(meta[relay.Constant][87] /* ty=Tensor[(9, 12, 16), uint32] */, dtype="bool") /* ty=Tensor[(9, 12, 16), bool] */;
    %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %876 = cast(%var_5628, dtype="int8") /* ty=Tensor[(72), int8] */;
    %877 = cast(%var_5628, dtype="int8") /* ty=Tensor[(72), int8] */;
    %878 = reshape(%876, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
    %879 = reshape(%877, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), int8] */;
    %880 = @func_2444(%878, %879) /* ty=(Tensor[(12, 2, 3), int8], Tensor[(4, 3, 15), float64], Tensor[(180), float64]) */;
    %881 = cast(%var_5614, dtype="int64") /* ty=Tensor[(9, 12, 16), int64] */;
    %882 = shape_of(meta[relay.Constant][87] /* ty=Tensor[(9, 12, 16), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %883 = cast(meta[relay.Constant][87] /* ty=Tensor[(9, 12, 16), uint32] */, dtype="int64") /* ty=Tensor[(9, 12, 16), int64] */;
    %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %885 = greater(%874, %875) /* ty=Tensor[(9, 12, 16), bool] */;
    %886 = %880.0;
    %887 = bitwise_and(%883, %884) /* ty=Tensor[(9, 12, 16), int64] */;
    (%885, %886, %var_5628, %887)
  };
  %888(%var_5640, %var_5641) /* ty=(Tensor[(9, 12, 16), bool], Tensor[(12, 2, 3), int8], Tensor[(72), int8], Tensor[(9, 12, 16), int64]) */
}

def @func_6263(%var_6261: Tensor[(14, 3, 12), float32], %var_6262: Tensor[(60, 1), float32]) -> (Tensor[(14, 3, 12), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(4, 15, 1), float32], Tensor[(60, 1), float32]) {
  @func_6259(%var_6261, %var_6262) /* ty=(Tensor[(14, 3, 12), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32], Tensor[(4, 15, 1), float32], Tensor[(60, 1), float32]) */
}

def @func_11031(%var_11007: Tensor[(30), uint64]) -> (Tensor[(182), float64], Tensor[(30), uint64], Tensor[(30), float32]) {
  %889 = @func_9711() /* ty=(Tensor[(182), float64], Tensor[(13, 15, 12), float64], Tensor[(1170, 2), float64]) */;
  %890 = cast(%var_11007, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %891 = reshape(%890, newshape=[30]) /* ty=Tensor[(30), uint64] */;
  %892 = @func_4464(%891) /* ty=(Tensor[(15, 8, 7), uint32], Tensor[(15, 8, 7), float64], Tensor[(60), float32], Tensor[(324), float32], Tensor[(1, 10, 3), uint64], uint64, Tensor[(30), uint64]) */;
  %893 = cast(%var_11007, dtype="float32") /* ty=Tensor[(30), float32] */;
  %894 = %889.0;
  %895 = %892.6;
  %896 = asinh(%893) /* ty=Tensor[(30), float32] */;
  (%894, %895, %896)
}

def @func_1034(%var_1027: Tensor[(60), float32]) -> (Tensor[(5, 7, 15), float64], Tensor[(15, 10, 13), float32], Tensor[(60), float32]) {
  %897 = cast(meta[relay.Constant][88] /* ty=Tensor[(5, 7, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 15), float64] */;
  %898 = cast(%var_1027, dtype="float32") /* ty=Tensor[(60), float32] */;
  %899 = reshape(%898, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %900 = @func_266(%899) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(15, 10, 13), float32], Tensor[(1950), float32]) */;
  %901 = sin(%897) /* ty=Tensor[(5, 7, 15), float64] */;
  %902 = %900.1;
  (%901, %902, %var_1027)
}

def @func_11323() -> Tensor[(180), float64] {
  @func_11321() /* ty=Tensor[(180), float64] */
}

def @func_9339(%var_9337: Tensor[(1, 676), int32]) -> (Tensor[(324), float32], Tensor[(13, 4, 13), bool], Tensor[(1, 676), int32]) {
  @func_9336(%var_9337) /* ty=(Tensor[(324), float32], Tensor[(13, 4, 13), bool], Tensor[(1, 676), int32]) */
}

def @func_8472(%var_8470: Tensor[(1, 1568), float32]) -> (Tensor[(10, 13, 6), float64], Tensor[(7, 16, 14), float32], Tensor[(128), float32], Tensor[(1, 1568), float32]) {
  @func_8469(%var_8470) /* ty=(Tensor[(10, 13, 6), float64], Tensor[(7, 16, 14), float32], Tensor[(128), float32], Tensor[(1, 1568), float32]) */
}

def @func_3051(%var_3026: Tensor[(14, 2, 8), float64], %var_3040: Tensor[(5, 6), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(1, 10, 3), uint64], uint64, Tensor[(5, 6), uint64]) {
  %903 = cast(%var_3026, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %904 = cast(meta[relay.Constant][89] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %905 = cast(%var_3040, dtype="uint64") /* ty=Tensor[(5, 6), uint64] */;
  %906 = reshape(%904, newshape=[]) /* ty=uint64 */;
  %907 = reshape(%905, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), uint64] */;
  %908 = @func_2376(%906, %907) /* ty=(Tensor[(1, 10, 3), uint64],) */;
  %909 = atanh(%903) /* ty=Tensor[(14, 2, 8), float64] */;
  %910 = %908.0;
  (%909, %910, meta[relay.Constant][89] /* ty=uint64 */, %var_3040)
}

def @func_4355(%var_4353: Tensor[(13, 4, 13), int32], %var_4354: Tensor[(13, 4, 13), int32]) -> Tensor[(13, 4, 13), bool] {
  @func_4351(%var_4353, %var_4354) /* ty=Tensor[(13, 4, 13), bool] */
}

def @func_10262(%var_10261: Tensor[(3, 1, 14), float64]) -> Tensor[(3, ?, 14), bool] {
  %917 = fn (%var_10250: Tensor[(3, 1, 14), float64]) -> Tensor[(3, ?, 14), bool] {
    %911 = cast(%var_10250, dtype="float64") /* ty=Tensor[(3, 1, 14), float64] */;
    %912 = sin(%911) /* ty=Tensor[(3, 1, 14), float64] */;
    %913 = cast(%var_10250, dtype="bool") /* ty=Tensor[(3, 1, 14), bool] */;
    %914 = shape_of(%912, dtype="int32") /* ty=Tensor[(3), int32] */;
    %915 = cast(%912, dtype="bool") /* ty=Tensor[(3, 1, 14), bool] */;
    %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%915, %916) /* ty=Tensor[(3, ?, 14), bool] */
  };
  %917(%var_10261) /* ty=Tensor[(3, ?, 14), bool] */
}

def @func_9373(%var_9372: Tensor[(2, 5, 12), bool]) -> (Tensor[(2, 5, 12), float64], Tensor[(2, 5, 12), float32]) {
  %927 = fn (%var_9352: Tensor[(2, 5, 12), bool]) -> (Tensor[(2, 5, 12), float64], Tensor[(2, 5, 12), float32]) {
    %918 = cast(%var_9352, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
    %919 = shape_of(meta[relay.Constant][90] /* ty=Tensor[(2, 5, 12), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %920 = cast(meta[relay.Constant][90] /* ty=Tensor[(2, 5, 12), bool] */, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
    %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %922 = logical_or(%920, %921) /* ty=Tensor[(2, 5, 12), bool] */;
    %923 = cast(%922, dtype="float64") /* ty=Tensor[(2, 5, 12), float64] */;
    %924 = cast(%var_9352, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
    %925 = cos(%923) /* ty=Tensor[(2, 5, 12), float64] */;
    %926 = sigmoid(%924) /* ty=Tensor[(2, 5, 12), float32] */;
    (%925, %926)
  };
  %927(%var_9372) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(2, 5, 12), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen531/build/output.py:2040: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen531/build/output.py", line 2045, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(84) tvmgen_default_fused_sigmoid_kernel0(float* __restrict__ T_sigmoid, float* __restrict__ placeholder) {
  T_sigmoid[(((int)threadIdx.x))] = (1.000000e+00f / (1.000000e+00f + __expf((0.000000e+00f - placeholder[(((int)threadIdx.x))]))));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


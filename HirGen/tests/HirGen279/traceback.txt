==========mod==========
#[version = "0.0.5"]
def @func_4958(%var_4952: Tensor[(10, 8, 5), float64]) -> (Tensor[(10, 8, 5), float64],) {
  %0 = cast(%var_4952, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %1 = asin(%0) /* ty=Tensor[(10, 8, 5), float64] */;
  (%1,)
}

def @func_6165(%var_6159: Tensor[(7, 12, 16), float64]) -> Tensor[(7, 12, 16), float64] {
  %2 = cast(%var_6159, dtype="float64") /* ty=Tensor[(7, 12, 16), float64] */;
  atanh(%2) /* ty=Tensor[(7, 12, 16), float64] */
}

def @func_5277() -> Tensor[(14, 9, 13), int16] {
  %3 = @func_2915() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %3.0
}

def @func_5843() -> (Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(14, 9, 13), int16]) {
  %4 = @func_5504() /* ty=Tensor[(14, 9, 13), int16] */;
  %5 = cast(%4, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %6 = reshape(%5, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %7 = @func_2609(%6) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) */;
  %8 = @func_4639() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %9 = %7.3;
  %10 = %8.1;
  (%4, %9, %10)
}

def @func_6746() -> Tensor[(14, 9, 13), int16] {
  @func_2398() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_6411() -> (Tensor[(14, 9, 13), int8],) {
  %11 = @func_6156() /* ty=(Tensor[(14, 9, 13), int8],) */;
  %12 = %11.0;
  (%12,)
}

def @func_7336() -> (Tensor[(14, 9, 13), int16],) {
  %13 = @func_6599() /* ty=Tensor[(14, 9, 13), int16] */;
  (%13,)
}

def @func_2696(%var_2686: float32) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(14, 9, 13), int16], float32) {
  %14 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %16 = reshape(%15, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %17 = @func_2069(%16) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
  %18 = cast(%var_2686, dtype="float32") /* ty=float32 */;
  %19 = reshape(%18, newshape=[]) /* ty=float32 */;
  %20 = @func_2495(%19) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(14, 1), float32], float32, Tensor[(14), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %21 = %14.0;
  %22 = %17.0;
  %23 = %20.5;
  (%21, %22, meta[relay.Constant][0] /* ty=Tensor[(200), float64] */, %23, %var_2686)
}

def @func_4739() -> (Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16]) {
  %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 6, 7), float32] */, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %25 = tan(%24) /* ty=Tensor[(8, 6, 7), float32] */;
  %26 = @func_4050() /* ty=Tensor[(14, 9, 13), int16] */;
  (%25, %26)
}

def @func_5399() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) {
  %27 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
  %28 = cast(%27, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %29 = reshape(%28, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %30 = @func_2609(%29) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) */;
  %31 = %30.5;
  (%27, %31)
}

def @func_8751() -> Tensor[(14, 9, 13), int16] {
  %32 = @func_7695() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %32.0
}

def @func_4305() -> (Tensor[(?, 208), float32],) {
  %33 = @func_3484() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */;
  %34 = %33.2;
  %35 = cast(%34, dtype="float64") /* ty=Tensor[(1, 208), float64] */;
  %36 = rsqrt(%35) /* ty=Tensor[(1, 208), float64] */;
  %37 = cast(%34, dtype="float32") /* ty=Tensor[(1, 208), float32] */;
  %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(2), int32] */;
  %39 = cast(%36, dtype="float32") /* ty=Tensor[(1, 208), float32] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %41 = floor_divide(%39, %40) /* ty=Tensor[(?, 208), float32] */;
  (%41,)
}

def @func_6054() -> Tensor[(14, 9, 13), int16] {
  @func_5277() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_3689() -> (Tensor[(14, 9, 13), int16],) {
  %42 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %43 = %42.0;
  (%43,)
}

def @func_8893(%var_8885: Tensor[(11, 2, 13), float64]) -> Tensor[(11, 2, 13), float64] {
  %44 = cast(%var_8885, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
  rsqrt(%44) /* ty=Tensor[(11, 2, 13), float64] */
}

def @func_296(%var_290: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(1, 200), float32], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), bool]) {
  %45 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 200), float64] */, dtype="float64") /* ty=Tensor[(1, 200), float64] */;
  %47 = reshape(%46, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), float64] */;
  %48 = @func_167(%47) /* ty=(Tensor[(5, 4, 10), float64],) */;
  %49 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 200), float64] */, dtype="float32") /* ty=Tensor[(1, 200), float32] */;
  %51 = %48.0;
  %52 = cast(%51, dtype="float64") /* ty=Tensor[(5, 4, 10), float64] */;
  %53 = reshape(%52, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), float64] */;
  %54 = @func_167(%53) /* ty=(Tensor[(5, 4, 10), float64],) */;
  %55 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %56 = %55.0;
  %57 = cast(%56, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %58 = cast(%var_290, dtype="bool") /* ty=Tensor[(14, 9, 13), bool] */;
  %59 = shape_of(%56, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%56, dtype="bool") /* ty=Tensor[(14, 9, 13), bool] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %62 = %45.0;
  %63 = %49.0;
  %64 = atanh(%50) /* ty=Tensor[(1, 200), float32] */;
  %65 = %54.0;
  %66 = asinh(%57) /* ty=Tensor[(14, 9, 13), float64] */;
  %67 = less_equal(%60, %61) /* ty=Tensor[(14, 9, 13), bool] */;
  (%62, %51, %63, %64, %65, %66, %67)
}

def @func_2443(%var_2412: Tensor[(15, 12, 14), bool], %var_2413: Tensor[(15, 12, 14), bool], %var_2421: Tensor[(200), float64], %var_2434: float32) -> (Tensor[(15, 12, 14), bool], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(200), float32], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) {
  %68 = cast(%var_2413, dtype="bool") /* ty=Tensor[(15, 12, 14), bool] */;
  %69 = shape_of(%var_2412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%var_2412, dtype="bool") /* ty=Tensor[(15, 12, 14), bool] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %72 = cast(%var_2421, dtype="float64") /* ty=Tensor[(200), float64] */;
  %73 = reshape(%72, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), float64] */;
  %74 = @func_167(%73) /* ty=(Tensor[(5, 4, 10), float64],) */;
  %75 = cast(%var_2421, dtype="float32") /* ty=Tensor[(200), float32] */;
  %76 = cast(%var_2434, dtype="float32") /* ty=float32 */;
  %77 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
  %78 = reshape(%76, newshape=[]) /* ty=float32 */;
  %79 = reshape(%77, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
  %80 = @func_1903(%78, %79) /* ty=(Tensor[(14, 1), float32],) */;
  %81 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %82 = logical_or(%70, %71) /* ty=Tensor[(15, 12, 14), bool] */;
  %83 = %74.0;
  %84 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
  %85 = log(%75) /* ty=Tensor[(200), float32] */;
  %86 = %80.0;
  %87 = %81.0;
  (%82, %83, %84, %85, %86, %var_2434, meta[relay.Constant][3] /* ty=Tensor[(1, 14), float32] */, %87)
}

def @func_6156() -> (Tensor[(14, 9, 13), int8],) {
  %88 = @func_2712() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */;
  %89 = %88.1;
  (%89,)
}

def @func_1117(%var_1098: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), int8],) {
  %90 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %91 = %90.0;
  %92 = cast(%var_1098, dtype="int8") /* ty=Tensor[(14, 9, 13), int8] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%91, dtype="int8") /* ty=Tensor[(14, 9, 13), int8] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %96 = subtract(%94, %95) /* ty=Tensor[(14, 9, 13), int8] */;
  (%96,)
}

def @func_3772(%var_3741: Tensor[(182, 10), int32]) -> (Tensor[(14, 9, 13), int16], Tensor[(10, 13, 14), bool], Tensor[(182, 10), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8]) {
  %97 = @func_2888() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %98 = cast(%var_3741, dtype="int32") /* ty=Tensor[(182, 10), int32] */;
  %99 = reshape(%98, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), int32] */;
  %100 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
  %101 = cast(%100, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %102 = reshape(%101, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %103 = @func_682(%102) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %104 = cast(%100, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %105 = reshape(%104, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %106 = %97.0;
  %107 = @func_3719(%99) /* ty=Tensor[(10, 13, 14), bool] */;
  %108 = %103.0;
  %109 = @func_1322(%105) /* ty=Tensor[(14, 9, 13), uint8] */;
  (%106, %107, %var_3741, %100, %108, %109)
}

def @func_2552(%var_2535: Tensor[(10, 20), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(208), float64], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16]) {
  %110 = @func_1975() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %111 = %110.1;
  %112 = cast(%111, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %113 = cast(%var_2535, dtype="float64") /* ty=Tensor[(10, 20), float64] */;
  %114 = reshape(%113, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %115 = @func_2069(%114) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
  %116 = @func_1423() /* ty=Tensor[(14, 9, 13), int16] */;
  %117 = tan(%112) /* ty=Tensor[(14, 9, 13), float64] */;
  %118 = %115.3;
  %119 = @func_2231() /* ty=Tensor[(14, 9, 13), int16] */;
  (%116, %117, %118, %var_2535, %119)
}

def @func_3293(%var_3291: float32) -> (Tensor[(14, 9, 13), float32], Tensor[(14), float32], float32) {
  %120 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %121 = cast(%var_3291, dtype="float32") /* ty=float32 */;
  %122 = reshape(%121, newshape=[]) /* ty=float32 */;
  %123 = @func_2495(%122) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(14, 1), float32], float32, Tensor[(14), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %124 = %120.1;
  %125 = %123.3;
  (%124, %125, %var_3291)
}

def @func_389(%var_369: Tensor[(2, 7, 1), float64], %var_377: Tensor[(1638), int16]) -> (Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) {
  %126 = cast(%var_377, dtype="int16") /* ty=Tensor[(1638), int16] */;
  %127 = reshape(%126, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %128 = @func_296(%127) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(1, 200), float32], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), bool]) */;
  %129 = cast(%var_369, dtype="float64") /* ty=Tensor[(2, 7, 1), float64] */;
  %130 = sin(%129) /* ty=Tensor[(2, 7, 1), float64] */;
  %131 = cast(%130, dtype="float64") /* ty=Tensor[(2, 7, 1), float64] */;
  %132 = %128.2;
  %133 = asin(%131) /* ty=Tensor[(2, 7, 1), float64] */;
  (%132, %var_377, %133)
}

def @func_5748(%var_5735: int8, %var_5736: Tensor[(4, 10, 1), int8], %var_5740: Tensor[(4, 10, 13), int8]) -> (Tensor[(4, 10, 1), int8], Tensor[(4, 10, 13), uint64], Tensor[(14, 9, 13), float64]) {
  %134 = cast(%var_5735, dtype="int8") /* ty=int8 */;
  %135 = cast(%var_5736, dtype="int8") /* ty=Tensor[(4, 10, 1), int8] */;
  %136 = cast(%var_5736, dtype="uint64") /* ty=Tensor[(4, 10, 1), uint64] */;
  %137 = cast(%var_5740, dtype="uint64") /* ty=Tensor[(4, 10, 13), uint64] */;
  %138 = @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %139 = logical_xor(%134, %135) /* ty=Tensor[(4, 10, 1), int8] */;
  %140 = subtract(%136, %137) /* ty=Tensor[(4, 10, 13), uint64] */;
  %141 = %138.1;
  (%139, %140, %141)
}

def @func_10455() -> (Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %142 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
  %143 = @func_9393() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %144 = @func_7850() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %145 = %142.0;
  %146 = %143.0;
  %147 = %144.0;
  (%145, %146, %147)
}

def @func_3137(%var_3132: Tensor[(315), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(13, 8, 2), float64], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(315), float64]) {
  %148 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %149 = cast(meta[relay.Constant][4] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %150 = reshape(%149, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float64] */;
  %151 = @func_512(%150) /* ty=(Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) */;
  %152 = cast(%var_3132, dtype="float64") /* ty=Tensor[(315), float64] */;
  %153 = reshape(%152, newshape=[7, 3, 15]) /* ty=Tensor[(7, 3, 15), float64] */;
  %154 = @func_2129(%153) /* ty=(Tensor[(7, 3, 15), uint64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(14, 9, 13), int16]) */;
  %155 = %148.0;
  %156 = %151.0;
  %157 = %154.3;
  (%155, %156, meta[relay.Constant][4] /* ty=Tensor[(208), float64] */, %157, %var_3132)
}

def @func_9393() -> (Tensor[(14, 9, 13), int16],) {
  %158 = @func_6054() /* ty=Tensor[(14, 9, 13), int16] */;
  (%158,)
}

def @func_2653(%var_2645: Tensor[(6, 3, 14), uint32]) -> (Tensor[(6, 3, 14), uint32],) {
  %159 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 1, 14), uint32] */, dtype="uint32") /* ty=Tensor[(6, 1, 14), uint32] */;
  %160 = cast(%var_2645, dtype="uint32") /* ty=Tensor[(6, 3, 14), uint32] */;
  %161 = bitwise_or(%159, %160) /* ty=Tensor[(6, 3, 14), uint32] */;
  (%161,)
}

def @func_2231() -> Tensor[(14, 9, 13), int16] {
  %162 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %162.0
}

def @func_7695() -> (Tensor[(14, 9, 13), int16],) {
  %163 = @func_4720() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %164 = %163.0;
  (%164,)
}

def @func_10078(%var_10049: Tensor[(14, 3, 8), int16], %var_10050: Tensor[(14, 3, 8), int16]) -> (Tensor[(14, 3, 8), float32], Tensor[(14, 3, 8), float32]) {
  %165 = cast(%var_10049, dtype="float32") /* ty=Tensor[(14, 3, 8), float32] */;
  %166 = cast(%var_10050, dtype="int16") /* ty=Tensor[(14, 3, 8), int16] */;
  %167 = shape_of(%var_10049, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%var_10049, dtype="int16") /* ty=Tensor[(14, 3, 8), int16] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %170 = bitwise_xor(%168, %169) /* ty=Tensor[(14, 3, 8), int16] */;
  %171 = cast(%var_10049, dtype="float32") /* ty=Tensor[(14, 3, 8), float32] */;
  %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%170, dtype="float32") /* ty=Tensor[(14, 3, 8), float32] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %175 = tan(%165) /* ty=Tensor[(14, 3, 8), float32] */;
  %176 = mod(%173, %174) /* ty=Tensor[(14, 3, 8), float32] */;
  (%175, %176)
}

def @func_10268(%var_10242: Tensor[(5, 4, 10), float64]) -> (Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), bool], Tensor[(14, 9, 13), uint8]) {
  %177 = cast(meta[relay.Constant][6] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %178 = reshape(%177, newshape=[200, 1]) /* ty=Tensor[(200, 1), float64] */;
  %179 = @func_1071(%178) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) */;
  %180 = cast(meta[relay.Constant][6] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %181 = reshape(%180, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), float64] */;
  %182 = @func_167(%181) /* ty=(Tensor[(5, 4, 10), float64],) */;
  %183 = %182.0;
  %184 = cast(%var_10242, dtype="bool") /* ty=Tensor[(5, 4, 10), bool] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%183, dtype="bool") /* ty=Tensor[(5, 4, 10), bool] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %188 = @func_7556() /* ty=Tensor[(14, 9, 13), float64] */;
  %189 = %179.1;
  %190 = greater(%186, %187) /* ty=Tensor[(5, 4, 10), bool] */;
  %191 = @func_5001() /* ty=Tensor[(14, 9, 13), uint8] */;
  (%188, meta[relay.Constant][6] /* ty=Tensor[(200), float64] */, %189, %190, %191)
}

def @func_4183(%var_4177: Tensor[(14), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(2, 7, 1), float64], Tensor[(14), float64]) {
  %192 = @func_2915() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %193 = %192.0;
  %194 = cast(%193, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %195 = reshape(%194, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %196 = @func_1117(%195) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %197 = %196.0;
  %198 = cast(%197, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %199 = cast(%var_4177, dtype="float64") /* ty=Tensor[(14), float64] */;
  %200 = cast(%197, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %201 = reshape(%199, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
  %202 = reshape(%200, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
  %203 = @func_389(%201, %202) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
  %204 = log(%198) /* ty=Tensor[(14, 9, 13), float32] */;
  %205 = %203.2;
  (%193, %204, %205, %var_4177)
}

def @func_6399() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %206 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %207 = @func_2888() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %208 = %206.0;
  %209 = %207.0;
  (%208, %209)
}

def @func_8083() -> (Tensor[(14, 9, 13), int16],) {
  %210 = @func_7011() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %211 = %210.0;
  (%211,)
}

def @func_7253() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %212 = @func_6536() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %213 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
  %214 = %212.0;
  %215 = %213.4;
  (%214, %215)
}

def @func_3484() -> (Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) {
  %216 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 208), float64] */, dtype="float64") /* ty=Tensor[(1, 208), float64] */;
  %217 = reshape(%216, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %218 = @func_876(%217) /* ty=(Tensor[(14, 9, 13), bool], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(208), float64]) */;
  %219 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 208), float64] */, dtype="float64") /* ty=Tensor[(1, 208), float64] */;
  %220 = @func_2855() /* ty=Tensor[(14, 9, 13), int16] */;
  %221 = %218.1;
  %222 = acos(%219) /* ty=Tensor[(1, 208), float64] */;
  (%220, %221, %222)
}

def @func_2398() -> Tensor[(14, 9, 13), int16] {
  %223 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %223.0
}

def @func_9727() -> Tensor[(14, 9, 13), int16] {
  @func_5132() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_9863() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int64], Tensor[(200), float64]) {
  %224 = cast(meta[relay.Constant][8] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %225 = reshape(%224, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %226 = @func_1714(%225) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int64], Tensor[(200), float64], Tensor[(14, 9, 13), float64]) */;
  %227 = @func_9727() /* ty=Tensor[(14, 9, 13), int16] */;
  %228 = %226.2;
  (%227, %228, meta[relay.Constant][8] /* ty=Tensor[(200), float64] */)
}

def @func_2609(%var_2564: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) {
  %229 = @func_1423() /* ty=Tensor[(14, 9, 13), int16] */;
  %230 = cast(%var_2564, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %231 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%229, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %234 = cast(0.173057f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %235 = cast(meta[relay.Constant][9] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %236 = reshape(%234, newshape=[]) /* ty=float32 */;
  %237 = reshape(%235, newshape=[12, 15, 2]) /* ty=Tensor[(12, 15, 2), float32] */;
  %238 = @func_1423() /* ty=Tensor[(14, 9, 13), int16] */;
  %239 = cast(%238, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %240 = reshape(%239, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %241 = @func_1117(%240) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %242 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %243 = floor_divide(%232, %233) /* ty=Tensor[(14, 9, 13), float64] */;
  %244 = @func_2269(%236, %237) /* ty=Tensor[(12, 15, 2), float32] */;
  %245 = %241.0;
  %246 = %242.0;
  (%243, %244, 0.173057f /* ty=float32 */, meta[relay.Constant][9] /* ty=Tensor[(360), float32] */, %238, %245, %246)
}

def @func_6175() -> Tensor[(14, 9, 13), float64] {
  %247 = @func_1975() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %247.1
}

def @func_1273(%var_1222: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), float32], Tensor[(208), float64], Tensor[(208), float64], Tensor[(14, 9, 13), int8]) {
  %248 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %249 = %248.0;
  %250 = cast(%var_1222, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %254 = cast(meta[relay.Constant][10] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %255 = reshape(%254, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %256 = @func_876(%255) /* ty=(Tensor[(14, 9, 13), bool], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(208), float64]) */;
  %257 = multiply(%252, %253) /* ty=Tensor[(14, 9, 13), float32] */;
  %258 = cast(%257, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %259 = reshape(%258, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %260 = @func_1117(%259) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %261 = %256.3;
  %262 = %260.0;
  (%257, %261, meta[relay.Constant][10] /* ty=Tensor[(208), float64] */, %262)
}

def @func_3543(%var_3499: Tensor[(14, 12, 2), float64], %var_3523: Tensor[(990), float32]) -> (Tensor[(14, 12, 2), float64], Tensor[(14, 1), float64], Tensor[(990), float32], Tensor[(50, 4), float64], Tensor[(7, 2), float64]) {
  %263 = cast(%var_3499, dtype="float64") /* ty=Tensor[(14, 12, 2), float64] */;
  %264 = cast(%var_3523, dtype="float32") /* ty=Tensor[(990), float32] */;
  %265 = cast(meta[relay.Constant][11] /* ty=Tensor[(50, 4), float64] */, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %266 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 2), float64] */;
  %267 = reshape(%264, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %268 = reshape(%265, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %269 = reshape(%266, newshape=[14, 1]) /* ty=Tensor[(14, 1), float64] */;
  %270 = @func_3179(%267, %268, %269) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(990), float32], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 1), float64]) */;
  %271 = log(%263) /* ty=Tensor[(14, 12, 2), float64] */;
  %272 = %270.5;
  (%271, %272, %var_3523, meta[relay.Constant][11] /* ty=Tensor[(50, 4), float64] */, meta[relay.Constant][12] /* ty=Tensor[(7, 2), float64] */)
}

def @func_1423() -> Tensor[(14, 9, 13), int16] {
  @func_610() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_6660() -> (Tensor[(14, 9, 13), int16],) {
  %273 = @func_5132() /* ty=Tensor[(14, 9, 13), int16] */;
  (%273,)
}

def @func_9066(%var_9057: Tensor[(8, 14, 3), float32], %var_9058: Tensor[(8, 14, 3), float32]) -> Tensor[(8, 14, 3), float32] {
  %274 = cast(%var_9058, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
  %275 = shape_of(%var_9057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%var_9057, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%276, %277) /* ty=Tensor[(8, 14, 3), float32] */
}

def @func_1865() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) {
  %278 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %279 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %280 = %279.0;
  %281 = cast(%280, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %282 = %278.0;
  %283 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
  %284 = rsqrt(%281) /* ty=Tensor[(14, 9, 13), float32] */;
  (%282, %283, %284)
}

def @func_1193() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
  %285 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %286 = %285.0;
  %287 = cast(%286, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %288 = reshape(%287, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %289 = @func_682(%288) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %290 = %289.0;
  (%286, %290)
}

def @func_2978(%var_2963: uint16, %var_2964: Tensor[(6, 12, 4), uint16]) -> (Tensor[(6, 12, 4), uint16],) {
  %291 = cast(%var_2963, dtype="uint16") /* ty=uint16 */;
  %292 = cast(%var_2964, dtype="uint16") /* ty=Tensor[(6, 12, 4), uint16] */;
  %293 = logical_xor(%291, %292) /* ty=Tensor[(6, 12, 4), uint16] */;
  (%293,)
}

def @main() -> (Tensor[(13, 8, 9), float32],) {
  %294 = @func_10455() /* ty=(Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %295 = %294.0;
  %296 = cast(%295, dtype="float32") /* ty=Tensor[(13, 8, 9), float32] */;
  %297 = log(%296) /* ty=Tensor[(13, 8, 9), float32] */;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(13, 8, 9), float32] */;
  %299 = tan(%298) /* ty=Tensor[(13, 8, 9), float32] */;
  (%299,)
}

def @func_2915() -> (Tensor[(14, 9, 13), int16],) {
  %300 = @func_2855() /* ty=Tensor[(14, 9, 13), int16] */;
  (%300,)
}

def @func_6975(%var_6915: Tensor[(16, 208), float32]) -> (Tensor[(16, 208), bool], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(16, 208), int64], Tensor[(7, 12, 16), float64], Tensor[(1344), float64], Tensor[(?, 208), float64]) {
  %301 = @func_4305() /* ty=(Tensor[(?, 208), float32],) */;
  %302 = %301.0;
  %303 = cast(%302, dtype="bool") /* ty=Tensor[(?, 208), bool] */;
  %304 = cast(%var_6915, dtype="bool") /* ty=Tensor[(16, 208), bool] */;
  %305 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
  %306 = cast(meta[relay.Constant][13] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %307 = reshape(%306, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %308 = @func_2069(%307) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
  %309 = cast(%302, dtype="int64") /* ty=Tensor[(?, 208), int64] */;
  %310 = cast(%var_6915, dtype="int64") /* ty=Tensor[(16, 208), int64] */;
  %311 = cast(meta[relay.Constant][14] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %312 = reshape(%311, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), float64] */;
  %313 = cast(%302, dtype="float64") /* ty=Tensor[(?, 208), float64] */;
  %314 = greater(%303, %304) /* ty=Tensor[(16, 208), bool] */;
  %315 = %305.0;
  %316 = %308.0;
  %317 = bitwise_and(%309, %310) /* ty=Tensor[(16, 208), int64] */;
  %318 = @func_6165(%312) /* ty=Tensor[(7, 12, 16), float64] */;
  %319 = log(%313) /* ty=Tensor[(?, 208), float64] */;
  (%314, %315, %316, meta[relay.Constant][13] /* ty=Tensor[(200), float64] */, %317, %318, meta[relay.Constant][14] /* ty=Tensor[(1344), float64] */, %319)
}

def @func_512(%var_488: Tensor[(13, 8, 2), float64]) -> (Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) {
  %320 = cast(%var_488, dtype="float64") /* ty=Tensor[(13, 8, 2), float64] */;
  %321 = acosh(%320) /* ty=Tensor[(13, 8, 2), float64] */;
  %322 = cast(%321, dtype="float64") /* ty=Tensor[(13, 8, 2), float64] */;
  %323 = cast(meta[relay.Constant][15] /* ty=Tensor[(1638), int16] */, dtype="int16") /* ty=Tensor[(1638), int16] */;
  %324 = reshape(%323, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %325 = @func_296(%324) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(1, 200), float32], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), bool]) */;
  %326 = atan(%322) /* ty=Tensor[(13, 8, 2), float64] */;
  %327 = %325.6;
  (%326, %327, meta[relay.Constant][15] /* ty=Tensor[(1638), int16] */)
}

def @func_2817() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) {
  %328 = @func_2231() /* ty=Tensor[(14, 9, 13), int16] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %330 = cast(-2.97386f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %331 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
  %332 = reshape(%330, newshape=[]) /* ty=float32 */;
  %333 = reshape(%331, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
  %334 = @func_1903(%332, %333) /* ty=(Tensor[(14, 1), float32],) */;
  %335 = atan(%329) /* ty=Tensor[(14, 9, 13), float64] */;
  %336 = %334.0;
  %337 = @func_2398() /* ty=Tensor[(14, 9, 13), int16] */;
  (%335, %336, -2.97386f /* ty=float32 */, meta[relay.Constant][16] /* ty=Tensor[(1, 14), float32] */, %337)
}

def @func_2712() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) {
  %338 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
  %339 = cast(%338, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %340 = reshape(%339, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %341 = @func_1117(%340) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %342 = %341.0;
  (%338, %342)
}

def @func_3987() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %343 = @func_1193() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %344 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %345 = %343.0;
  %346 = %344.0;
  (%345, %346)
}

def @func_4639() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %347 = @func_3689() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %348 = @func_2855() /* ty=Tensor[(14, 9, 13), int16] */;
  %349 = %347.0;
  (%348, %349)
}

def @func_7073() -> Tensor[(14, 9, 13), float64] {
  %350 = @func_1975() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %350.1
}

def @func_7325() -> (Tensor[(14, 9, 13), int16],) {
  %351 = @func_6617() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %352 = %351.0;
  (%352,)
}

def @func_1714(%var_1702: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int64], Tensor[(200), float64], Tensor[(14, 9, 13), float64]) {
  %353 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
  %354 = cast(%353, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %355 = reshape(%354, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %356 = @func_1322(%355) /* ty=Tensor[(14, 9, 13), uint8] */;
  %357 = cast(%356, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %358 = cast(%var_1702, dtype="float64") /* ty=Tensor[(200), float64] */;
  %359 = reshape(%358, newshape=[200, 1]) /* ty=Tensor[(200, 1), float64] */;
  %360 = @func_1071(%359) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) */;
  %361 = cast(%356, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %362 = reshape(%361, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %363 = @func_682(%362) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %364 = exp(%357) /* ty=Tensor[(14, 9, 13), float64] */;
  %365 = %360.9;
  %366 = %363.1;
  (%353, %364, %365, %var_1702, %366)
}

def @func_3224() -> (Tensor[(14, 9, 13), int16],) {
  %367 = @func_2398() /* ty=Tensor[(14, 9, 13), int16] */;
  (%367,)
}

def @func_6459() -> (Tensor[(14, 9, 13), int16],) {
  %368 = @func_5399() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */;
  %369 = %368.0;
  (%369,)
}

def @func_7809(%var_7803: uint8) -> (Tensor[(1, 1, 2), uint8],) {
  %370 = cast(%var_7803, dtype="uint8") /* ty=uint8 */;
  %371 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 1, 2), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1, 2), uint8] */;
  %372 = bitwise_xor(%370, %371) /* ty=Tensor[(1, 1, 2), uint8] */;
  (%372,)
}

def @func_8319() -> (Tensor[(14, 9, 13), int16], Tensor[(208), float64], Tensor[(325, 3), int64]) {
  %373 = @func_4924() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %374 = cast(meta[relay.Constant][18] /* ty=Tensor[(325, 3), int64] */, dtype="int64") /* ty=Tensor[(325, 3), int64] */;
  %375 = cast(meta[relay.Constant][18] /* ty=Tensor[(325, 3), int64] */, dtype="int64") /* ty=Tensor[(325, 3), int64] */;
  %376 = reshape(%374, newshape=[5, 13, 15]) /* ty=Tensor[(5, 13, 15), int64] */;
  %377 = reshape(%375, newshape=[5, 13, 15]) /* ty=Tensor[(5, 13, 15), int64] */;
  %378 = @func_5564(%376, %377) /* ty=(Tensor[(5, 13, 15), int64], Tensor[(?, 208), float32], Tensor[(208), float64], Tensor[(105, 3), float64]) */;
  %379 = %373.0;
  %380 = %378.2;
  (%379, %380, meta[relay.Constant][18] /* ty=Tensor[(325, 3), int64] */)
}

def @func_9497() -> Tensor[(13, 8, 9), float64] {
  %381 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
  %382 = %381.0;
  %383 = cast(%382, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
  atan(%383) /* ty=Tensor[(13, 8, 9), float64] */
}

def @func_7776() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(200), float64]) {
  %384 = @func_3689() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %385 = @func_3484() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */;
  %386 = cast(meta[relay.Constant][19] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %387 = reshape(%386, newshape=[50, 4]) /* ty=Tensor[(50, 4), float64] */;
  %388 = @func_5624(%387) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(50, 4), float64], Tensor[(14), float64]) */;
  %389 = %384.0;
  %390 = %385.0;
  %391 = %388.2;
  (%389, %390, %391, meta[relay.Constant][19] /* ty=Tensor[(200), float64] */)
}

def @func_4504(%var_4502: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(200), float64]) {
  %392 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %393 = @func_2712() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */;
  %394 = cast(%var_4502, dtype="float64") /* ty=Tensor[(200), float64] */;
  %395 = reshape(%394, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %396 = @func_1506(%395) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8], Tensor[(200), float64], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %397 = %392.1;
  %398 = %393.1;
  %399 = %396.4;
  (%397, %398, %399, %var_4502)
}

def @func_5132() -> Tensor[(14, 9, 13), int16] {
  %400 = @func_3404() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %400.0
}

def @func_748() -> (Tensor[(14, 9, 13), int16],) {
  %401 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %402 = %401.0;
  (%402,)
}

def @func_6014(%var_6001: Tensor[(360), float32]) -> (Tensor[(14, 9, 13), int16], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32]) {
  %403 = @func_4924() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %404 = cast(-1.19483f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %405 = cast(%var_6001, dtype="float32") /* ty=Tensor[(360), float32] */;
  %406 = reshape(%404, newshape=[]) /* ty=float32 */;
  %407 = reshape(%405, newshape=[12, 15, 2]) /* ty=Tensor[(12, 15, 2), float32] */;
  %408 = %403.0;
  %409 = @func_2269(%406, %407) /* ty=Tensor[(12, 15, 2), float32] */;
  (%408, %409, -1.19483f /* ty=float32 */, %var_6001)
}

def @func_9280(%var_9268: Tensor[(5, 6, 5), int16]) -> (Tensor[(5, 6, 5), int16],) {
  %410 = cast(%var_9268, dtype="int16") /* ty=Tensor[(5, 6, 5), int16] */;
  %411 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(5, 6, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 6, 5), int16] */, dtype="int16") /* ty=Tensor[(5, 6, 5), int16] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %414 = right_shift(%412, %413) /* ty=Tensor[(5, 6, 5), int16] */;
  (%414,)
}

def @func_10289() -> (Tensor[(14, 9, 13), int16],) {
  %415 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
  %416 = %415.1;
  (%416,)
}

def @func_7282() -> (Tensor[(?, 208), float32], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), float64]) {
  %417 = @func_4427() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(7, 2), float64], Tensor[(14, 9, 13), int16], Tensor[(?, 208), float32]) */;
  %418 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
  %419 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %420 = %417.4;
  %421 = %418.0;
  %422 = %419.2;
  (%420, %421, %422)
}

def @func_10307() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16]) {
  %423 = @func_9095() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %424 = @func_7556() /* ty=Tensor[(14, 9, 13), float64] */;
  %425 = %423.0;
  (%424, %425)
}

def @func_7044(%var_7028: Tensor[(252), uint32]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(6, 3, 14), uint32], Tensor[(252), uint32]) {
  %426 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %427 = @func_6263() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %428 = cast(%var_7028, dtype="uint32") /* ty=Tensor[(252), uint32] */;
  %429 = reshape(%428, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), uint32] */;
  %430 = @func_2653(%429) /* ty=(Tensor[(6, 3, 14), uint32],) */;
  %431 = %426.0;
  %432 = %427.0;
  %433 = %430.0;
  (%431, %432, %433, %var_7028)
}

def @func_9047() -> Tensor[(14, 9, 13), int16] {
  %434 = @func_7336() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %434.0
}

def @func_9162() -> Tensor[(14, 9, 13), int16] {
  @func_2398() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_4924() -> (Tensor[(14, 9, 13), int16],) {
  %435 = @func_2817() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) */;
  %436 = %435.4;
  (%436,)
}

def @func_359(%var_346: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), int64],) {
  %437 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %438 = %437.0;
  %439 = cast(%var_346, dtype="int64") /* ty=Tensor[(14, 9, 13), int64] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%438, dtype="int64") /* ty=Tensor[(14, 9, 13), int64] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %443 = bitwise_xor(%441, %442) /* ty=Tensor[(14, 9, 13), int64] */;
  (%443,)
}

def @func_5504() -> Tensor[(14, 9, 13), int16] {
  %444 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
  %444.1
}

def @func_7443(%var_7432: Tensor[(576), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(576), float32]) {
  %445 = @func_3484() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */;
  %446 = @func_3579() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(200), float64]) */;
  %447 = cast(%var_7432, dtype="float64") /* ty=Tensor[(576), float64] */;
  %448 = cast(%var_7432, dtype="float64") /* ty=Tensor[(576), float64] */;
  %449 = reshape(%447, newshape=[12, 16, 3]) /* ty=Tensor[(12, 16, 3), float64] */;
  %450 = reshape(%448, newshape=[12, 16, 3]) /* ty=Tensor[(12, 16, 3), float64] */;
  %451 = @func_6478(%449, %450) /* ty=(Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64]) */;
  %452 = %451.2;
  %453 = cast(%452, dtype="float32") /* ty=Tensor[(12, 16, 3), float32] */;
  %454 = shape_of(%var_7432, dtype="int32") /* ty=Tensor[(1), int32] */;
  %455 = cast(%var_7432, dtype="float32") /* ty=Tensor[(576), float32] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?), float32] */;
  %457 = @func_2398() /* ty=Tensor[(14, 9, 13), int16] */;
  %458 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
  %459 = @func_6599() /* ty=Tensor[(14, 9, 13), int16] */;
  %460 = %445.1;
  %461 = %446.1;
  %462 = maximum(%455, %456) /* ty=Tensor[(576), float32] */;
  (%457, %458, %459, %460, %461, %462)
}

def @func_9578() -> Tensor[(14, 9, 13), int16] {
  @func_4102() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_2379(%var_2348: Tensor[(11, 6, 15), float32], %var_2377: Tensor[(200), float64]) -> (Tensor[(11, 6, 15), float64], Tensor[(14, 9, 13), float32], Tensor[(200), float64]) {
  %463 = cast(%var_2348, dtype="float32") /* ty=Tensor[(11, 6, 15), float32] */;
  %464 = asin(%463) /* ty=Tensor[(11, 6, 15), float32] */;
  %465 = cast(%var_2348, dtype="float64") /* ty=Tensor[(11, 6, 15), float64] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%464, dtype="float64") /* ty=Tensor[(11, 6, 15), float64] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %469 = cast(%var_2377, dtype="float64") /* ty=Tensor[(200), float64] */;
  %470 = reshape(%469, newshape=[200, 1]) /* ty=Tensor[(200, 1), float64] */;
  %471 = @func_1071(%470) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) */;
  %472 = maximum(%467, %468) /* ty=Tensor[(11, 6, 15), float64] */;
  %473 = %471.2;
  (%472, %473, %var_2377)
}

def @func_7556() -> Tensor[(14, 9, 13), float64] {
  %474 = @func_2817() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) */;
  %474.0
}

def @func_6255() -> Tensor[(14, 9, 13), int16] {
  @func_6234() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_1975() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
  %475 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %476 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %477 = %475.0;
  %478 = %476.2;
  (%477, %478)
}

def @func_6499(%var_6493: float32) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], float32, Tensor[(16, 10, 10), float64]) {
  %479 = @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %480 = cast(%var_6493, dtype="float32") /* ty=float32 */;
  %481 = reshape(%480, newshape=[]) /* ty=float32 */;
  %482 = @func_3346(%481) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(14, 9, 13), bool]) */;
  %483 = %482.0;
  %484 = cast(%483, dtype="float64") /* ty=Tensor[(16, 10, 10), float64] */;
  %485 = @func_4050() /* ty=Tensor[(14, 9, 13), int16] */;
  %486 = %479.1;
  %487 = rsqrt(%484) /* ty=Tensor[(16, 10, 10), float64] */;
  (%485, %486, %var_6493, %487)
}

def @func_9417() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %488 = @func_7695() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %489 = @func_6054() /* ty=Tensor[(14, 9, 13), int16] */;
  %490 = %488.0;
  (%489, %490)
}

def @func_4102() -> Tensor[(14, 9, 13), int16] {
  %491 = @func_3579() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(200), float64]) */;
  %491.1
}

def @func_1592() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) {
  %492 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %493 = %492.0;
  %494 = cast(%493, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %495 = reshape(%494, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %496 = @func_1117(%495) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %497 = %496.0;
  %498 = cast(%497, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %499 = cast(%497, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %500 = reshape(%499, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %501 = @func_682(%500) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %502 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %503 = cast(%497, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %504 = reshape(%503, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %505 = acosh(%498) /* ty=Tensor[(14, 9, 13), float32] */;
  %506 = %501.0;
  %507 = %502.0;
  %508 = @func_1322(%504) /* ty=Tensor[(14, 9, 13), uint8] */;
  (%493, %505, %506, %507, %508)
}

def @func_3404() -> (Tensor[(14, 9, 13), int16],) {
  %509 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %510 = %509.0;
  (%510,)
}

def @func_5184(%var_5177: Tensor[(1638), int16]) -> (Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16], Tensor[(1638), int16]) {
  %511 = @func_4739() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16]) */;
  %512 = cast(%var_5177, dtype="int16") /* ty=Tensor[(1638), int16] */;
  %513 = reshape(%512, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %514 = @func_2609(%513) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) */;
  %515 = %511.0;
  %516 = %514.4;
  (%515, %516, %var_5177)
}

def @func_6599() -> Tensor[(14, 9, 13), int16] {
  %517 = @func_4657() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %517.0
}

def @func_4427() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(7, 2), float64], Tensor[(14, 9, 13), int16], Tensor[(?, 208), float32]) {
  %518 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
  %519 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 2), float64] */;
  %520 = %518.0;
  %521 = cast(%520, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %522 = reshape(%519, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
  %523 = reshape(%521, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
  %524 = @func_389(%522, %523) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
  %525 = @func_3484() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */;
  %526 = @func_4305() /* ty=(Tensor[(?, 208), float32],) */;
  %527 = %524.0;
  %528 = %525.0;
  %529 = %526.0;
  (%520, %527, meta[relay.Constant][21] /* ty=Tensor[(7, 2), float64] */, %528, %529)
}

def @func_316() -> (Tensor[(14, 9, 13), int16],) {
  %530 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %531 = %530.0;
  (%531,)
}

def @func_6143(%var_6118: Tensor[(40), int8]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], int8, Tensor[(40), int8], Tensor[(520), int8]) {
  %532 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %533 = cast(meta[relay.Constant][22] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %534 = cast(%var_6118, dtype="int8") /* ty=Tensor[(40), int8] */;
  %535 = cast(meta[relay.Constant][23] /* ty=Tensor[(520), int8] */, dtype="int8") /* ty=Tensor[(520), int8] */;
  %536 = reshape(%533, newshape=[]) /* ty=int8 */;
  %537 = reshape(%534, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), int8] */;
  %538 = reshape(%535, newshape=[4, 10, 13]) /* ty=Tensor[(4, 10, 13), int8] */;
  %539 = @func_5748(%536, %537, %538) /* ty=(Tensor[(4, 10, 1), int8], Tensor[(4, 10, 13), uint64], Tensor[(14, 9, 13), float64]) */;
  %540 = @func_2855() /* ty=Tensor[(14, 9, 13), int16] */;
  %541 = %532.0;
  %542 = %539.2;
  (%540, %541, %542, meta[relay.Constant][22] /* ty=int8 */, %var_6118, meta[relay.Constant][23] /* ty=Tensor[(520), int8] */)
}

def @func_6048(%var_6021: Tensor[(8, 16, 6), int32]) -> (Tensor[(8, 16, 6), int32], Tensor[(14, 9, 13), int16]) {
  %543 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 16, 6), int32] */, dtype="int32") /* ty=Tensor[(8, 16, 6), int32] */;
  %544 = shape_of(%var_6021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%var_6021, dtype="int32") /* ty=Tensor[(8, 16, 6), int32] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %547 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %548 = left_shift(%545, %546) /* ty=Tensor[(8, 16, 6), int32] */;
  %549 = %547.0;
  (%548, %549)
}

def @func_8705(%var_8672: Tensor[(576), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(576), float32], Tensor[(14, 9, 13), float64], Tensor[(576), float32]) {
  %550 = @func_2326() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
  %551 = cast(%var_8672, dtype="float64") /* ty=Tensor[(576), float64] */;
  %552 = reshape(%551, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %553 = @func_7443(%552) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(576), float32]) */;
  %554 = @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %555 = cast(%var_8672, dtype="float32") /* ty=Tensor[(576), float32] */;
  %556 = @func_2398() /* ty=Tensor[(14, 9, 13), int16] */;
  %557 = %550.0;
  %558 = %553.5;
  %559 = %554.1;
  %560 = asinh(%555) /* ty=Tensor[(576), float32] */;
  (%556, %557, %558, %559, %560)
}

def @func_9695() -> (Tensor[(14, 9, 13), int16],) {
  %561 = @func_4435() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %562 = %561.0;
  (%562,)
}

def @func_7228() -> (Tensor[(14, 9, 13), int16],) {
  %563 = @func_6234() /* ty=Tensor[(14, 9, 13), int16] */;
  (%563,)
}

def @func_6234() -> Tensor[(14, 9, 13), int16] {
  %564 = @func_4739() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16]) */;
  %564.1
}

def @func_6905() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %565 = @func_4435() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %566 = @func_2231() /* ty=Tensor[(14, 9, 13), int16] */;
  %567 = %565.0;
  (%566, %567)
}

def @func_1071(%var_1035: Tensor[(200, 1), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) {
  %568 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %569 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %570 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %571 = %570.0;
  %572 = cast(%571, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %573 = atanh(%572) /* ty=Tensor[(14, 9, 13), float32] */;
  %574 = cast(%571, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%573, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %578 = maximum(%576, %577) /* ty=Tensor[(14, 9, 13), float32] */;
  %579 = cast(%578, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %580 = cast(%var_1035, dtype="float64") /* ty=Tensor[(200, 1), float64] */;
  %581 = reshape(%580, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), float64] */;
  %582 = @func_167(%581) /* ty=(Tensor[(5, 4, 10), float64],) */;
  %583 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %584 = %583.0;
  %585 = cast(%584, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %586 = sqrt(%585) /* ty=Tensor[(14, 9, 13), float64] */;
  %587 = cast(%586, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %588 = log10(%587) /* ty=Tensor[(14, 9, 13), float64] */;
  %589 = cast(%571, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %590 = reshape(%589, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %591 = @func_359(%590) /* ty=(Tensor[(14, 9, 13), int64],) */;
  %592 = %591.0;
  %593 = cast(%592, dtype="uint8") /* ty=Tensor[(14, 9, 13), uint8] */;
  %594 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%588, dtype="uint8") /* ty=Tensor[(14, 9, 13), uint8] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %597 = cast(meta[relay.Constant][25] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
  %598 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
  %599 = cast(%598, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %600 = reshape(%597, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
  %601 = reshape(%599, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
  %602 = @func_389(%600, %601) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
  %603 = cast(%578, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %604 = reshape(%603, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %605 = @func_359(%604) /* ty=(Tensor[(14, 9, 13), int64],) */;
  %606 = %568.0;
  %607 = %569.0;
  %608 = cos(%579) /* ty=Tensor[(14, 9, 13), float32] */;
  %609 = %582.0;
  %610 = right_shift(%595, %596) /* ty=Tensor[(14, 9, 13), uint8] */;
  %611 = %602.2;
  %612 = %605.0;
  (%606, %607, %608, %598, %609, %var_1035, %610, %611, meta[relay.Constant][25] /* ty=Tensor[(14), float64] */, %612)
}

def @func_9264() -> Tensor[(14, 9, 13), int16] {
  %613 = @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %613.0
}

def @func_1322(%var_1311: Tensor[(14, 9, 13), int16]) -> Tensor[(14, 9, 13), uint8] {
  %614 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %615 = %614.0;
  %616 = cast(%var_1311, dtype="uint8") /* ty=Tensor[(14, 9, 13), uint8] */;
  %617 = shape_of(%615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(%615, dtype="uint8") /* ty=Tensor[(14, 9, 13), uint8] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%618, %619) /* ty=Tensor[(14, 9, 13), uint8] */
}

def @func_5031() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %620 = @func_1865() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) */;
  %621 = @func_4657() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %622 = %620.0;
  %623 = %621.0;
  (%622, %623)
}

def @func_3719(%var_3707: Tensor[(10, 13, 14), int32]) -> Tensor[(10, 13, 14), bool] {
  %624 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 13, 14), int32] */, dtype="bool") /* ty=Tensor[(10, 13, 14), bool] */;
  %625 = shape_of(%var_3707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%var_3707, dtype="bool") /* ty=Tensor[(10, 13, 14), bool] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%626, %627) /* ty=Tensor[(10, 13, 14), bool] */
}

def @func_3609(%var_3589: Tensor[(4, 16, 14), int8]) -> Tensor[(4, 16, 14), float32] {
  %628 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 16, 14), int8] */, dtype="int8") /* ty=Tensor[(4, 16, 14), int8] */;
  %629 = shape_of(%var_3589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%var_3589, dtype="int8") /* ty=Tensor[(4, 16, 14), int8] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %632 = multiply(%630, %631) /* ty=Tensor[(4, 16, 14), int8] */;
  %633 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 16, 14), int8] */, dtype="float32") /* ty=Tensor[(4, 16, 14), float32] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%632, dtype="float32") /* ty=Tensor[(4, 16, 14), float32] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%635, %636) /* ty=Tensor[(4, 16, 14), float32] */
}

def @func_7606() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(14, 9, 13), int16]) {
  %637 = @func_6054() /* ty=Tensor[(14, 9, 13), int16] */;
  %638 = cast(%637, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %639 = reshape(%638, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %640 = @func_7325() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %641 = @func_1322(%639) /* ty=Tensor[(14, 9, 13), uint8] */;
  %642 = %640.0;
  (%637, %641, %642)
}

def @func_4657() -> (Tensor[(14, 9, 13), int16],) {
  %643 = @func_4639() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %644 = %643.1;
  (%644,)
}

def @func_4906(%var_4867: Tensor[(200), float64], %var_4875: Tensor[(14), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(200), float64], Tensor[(14, 9, 13), float32], Tensor[(14), float64], Tensor[(14, 9, 13), int16]) {
  %645 = @func_3404() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %646 = cast(%var_4867, dtype="float64") /* ty=Tensor[(200), float64] */;
  %647 = reshape(%646, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %648 = @func_1506(%647) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8], Tensor[(200), float64], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %649 = cast(%var_4875, dtype="float64") /* ty=Tensor[(14), float64] */;
  %650 = reshape(%649, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %651 = @func_4030(%650) /* ty=(Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(2, 7, 1), float64], Tensor[(14), float64]) */;
  %652 = @func_4657() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %653 = %645.0;
  %654 = %648.8;
  %655 = %651.0;
  %656 = %652.0;
  (%653, %654, %var_4867, %655, %var_4875, %656)
}

def @func_8432() -> Tensor[(14, 9, 13), int8] {
  %657 = @func_2712() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */;
  %657.1
}

def @func_6617() -> (Tensor[(14, 9, 13), int16],) {
  %658 = @func_3224() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %659 = %658.0;
  (%659,)
}

def @func_7115(%var_7110: Tensor[(7, 6, 5), float64], %var_7111: Tensor[(7, 6, 5), float64]) -> (Tensor[(7, 6, 5), float64],) {
  %660 = cast(%var_7111, dtype="float64") /* ty=Tensor[(7, 6, 5), float64] */;
  %661 = shape_of(%var_7110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%var_7110, dtype="float64") /* ty=Tensor[(7, 6, 5), float64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %664 = floor_divide(%662, %663) /* ty=Tensor[(7, 6, 5), float64] */;
  (%664,)
}

def @func_3346(%var_3336: float32) -> (Tensor[(16, 10, 10), float32], Tensor[(14, 9, 13), bool]) {
  %665 = cast(%var_3336, dtype="float32") /* ty=float32 */;
  %666 = reshape(%665, newshape=[]) /* ty=float32 */;
  %667 = @func_2495(%666) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(14, 1), float32], float32, Tensor[(14), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %668 = @func_2888() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %669 = %668.0;
  %670 = cast(%669, dtype="bool") /* ty=Tensor[(14, 9, 13), bool] */;
  %671 = cast(%var_3336, dtype="bool") /* ty=bool */;
  %672 = %667.0;
  %673 = less(%670, %671) /* ty=Tensor[(14, 9, 13), bool] */;
  (%672, %673)
}

def @func_3922() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) {
  %674 = @func_1193() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %675 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 20), float64] */, dtype="float64") /* ty=Tensor[(10, 20), float64] */;
  %676 = reshape(%675, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %677 = @func_2069(%676) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
  %678 = @func_2326() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
  %679 = cast(meta[relay.Constant][29] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %680 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 20), float64] */, dtype="float64") /* ty=Tensor[(10, 20), float64] */;
  %681 = cast(meta[relay.Constant][30] /* ty=Tensor[(14, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 1), float64] */;
  %682 = reshape(%679, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %683 = reshape(%680, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %684 = reshape(%681, newshape=[14, 1]) /* ty=Tensor[(14, 1), float64] */;
  %685 = @func_3179(%682, %683, %684) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(990), float32], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 1), float64]) */;
  %686 = %674.1;
  %687 = %677.0;
  %688 = %678.0;
  %689 = %685.0;
  (%686, %687, meta[relay.Constant][28] /* ty=Tensor[(10, 20), float64] */, %688, %689, meta[relay.Constant][29] /* ty=Tensor[(990), float32] */, meta[relay.Constant][30] /* ty=Tensor[(14, 1), float64] */)
}

def @func_9295(%var_9284: Tensor[(4, 3, 10), uint32], %var_9285: Tensor[(4, 3, 10), uint32]) -> (Tensor[(4, 3, 10), float64],) {
  %690 = cast(%var_9285, dtype="uint32") /* ty=Tensor[(4, 3, 10), uint32] */;
  %691 = shape_of(%var_9284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%var_9284, dtype="uint32") /* ty=Tensor[(4, 3, 10), uint32] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %694 = bitwise_or(%692, %693) /* ty=Tensor[(4, 3, 10), uint32] */;
  %695 = cast(%694, dtype="float64") /* ty=Tensor[(4, 3, 10), float64] */;
  %696 = asinh(%695) /* ty=Tensor[(4, 3, 10), float64] */;
  (%696,)
}

def @func_8928() -> (Tensor[(14, 9, 13), int16],) {
  %697 = @func_7011() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %698 = %697.0;
  (%698,)
}

def @func_7212() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(360), float32]) {
  %699 = @func_1193() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %700 = @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %701 = cast(meta[relay.Constant][31] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %702 = reshape(%701, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %703 = @func_6014(%702) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32]) */;
  %704 = %699.1;
  %705 = %700.0;
  %706 = %703.3;
  (%704, %705, %706, meta[relay.Constant][31] /* ty=Tensor[(360), float32] */)
}

def @func_7986() -> (Tensor[(14, 9, 13), int16], float32, Tensor[(13, 8, 9), int32]) {
  %707 = @func_6617() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %708 = @func_2817() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) */;
  %709 = @func_7282() /* ty=(Tensor[(?, 208), float32], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), float64]) */;
  %710 = %707.0;
  %711 = %708.2;
  %712 = %709.1;
  (%710, %711, %712)
}

def @func_4030(%var_4026: Tensor[(14), float64]) -> (Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(2, 7, 1), float64], Tensor[(14), float64]) {
  %713 = @func_3404() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %714 = %713.0;
  %715 = cast(%714, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %716 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %717 = cast(%var_4026, dtype="float64") /* ty=Tensor[(14), float64] */;
  %718 = cast(%714, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %719 = reshape(%717, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
  %720 = reshape(%718, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
  %721 = @func_389(%719, %720) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
  %722 = acos(%715) /* ty=Tensor[(14, 9, 13), float32] */;
  %723 = %716.0;
  %724 = %721.2;
  (%722, %723, %724, %var_4026)
}

def @func_7940() -> Tensor[(13, 8, 9), int32] {
  %725 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
  %725.0
}

def @func_2069(%var_2066: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) {
  %726 = @func_1975() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %727 = cast(meta[relay.Constant][32] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %728 = reshape(%727, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float64] */;
  %729 = @func_512(%728) /* ty=(Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) */;
  %730 = cast(%var_2066, dtype="float64") /* ty=Tensor[(200), float64] */;
  %731 = reshape(%730, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %732 = @func_1714(%731) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int64], Tensor[(200), float64], Tensor[(14, 9, 13), float64]) */;
  %733 = %726.0;
  %734 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
  %735 = %729.1;
  %736 = %732.3;
  (%733, %734, %735, meta[relay.Constant][32] /* ty=Tensor[(208), float64] */, %736, %var_2066)
}

def @func_3579() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(200), float64]) {
  %737 = @func_1975() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %738 = cast(meta[relay.Constant][33] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %739 = reshape(%738, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %740 = @func_2069(%739) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
  %741 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
  %742 = %737.0;
  %743 = %740.4;
  (%741, %742, %743, meta[relay.Constant][33] /* ty=Tensor[(200), float64] */)
}

def @func_6263() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %744 = @func_5443() /* ty=Tensor[(14, 9, 13), int16] */;
  %745 = @func_6255() /* ty=Tensor[(14, 9, 13), int16] */;
  (%744, %745)
}

def @func_3672(%var_3643: int16, %var_3644: Tensor[(9, 15, 11), int16], %var_3666: Tensor[(330, 3), float32]) -> (Tensor[(9, 15, 11), int16], Tensor[(990), float32], Tensor[(336), float64], Tensor[(330, 3), float32]) {
  %746 = cast(%var_3643, dtype="int16") /* ty=int16 */;
  %747 = cast(%var_3644, dtype="int16") /* ty=Tensor[(9, 15, 11), int16] */;
  %748 = cast(meta[relay.Constant][34] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %749 = cast(%var_3666, dtype="float32") /* ty=Tensor[(330, 3), float32] */;
  %750 = reshape(%748, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), float64] */;
  %751 = reshape(%749, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %752 = @func_3543(%750, %751) /* ty=(Tensor[(14, 12, 2), float64], Tensor[(14, 1), float64], Tensor[(990), float32], Tensor[(50, 4), float64], Tensor[(7, 2), float64]) */;
  %753 = minimum(%746, %747) /* ty=Tensor[(9, 15, 11), int16] */;
  %754 = %752.2;
  (%753, %754, meta[relay.Constant][34] /* ty=Tensor[(336), float64] */, %var_3666)
}

def @func_9627() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %755 = @func_2915() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %756 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
  %757 = %755.0;
  %758 = %756.1;
  (%757, %758)
}

def @func_4365() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(1820), int32], Tensor[(896), int8], Tensor[(4, 16, 14), float64]) {
  %759 = @func_2915() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %760 = cast(meta[relay.Constant][35] /* ty=Tensor[(1820), int32] */, dtype="int32") /* ty=Tensor[(1820), int32] */;
  %761 = reshape(%760, newshape=[182, 10]) /* ty=Tensor[(182, 10), int32] */;
  %762 = @func_3772(%761) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(10, 13, 14), bool], Tensor[(182, 10), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8]) */;
  %763 = cast(meta[relay.Constant][36] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %764 = reshape(%763, newshape=[4, 16, 14]) /* ty=Tensor[(4, 16, 14), int8] */;
  %765 = @func_3609(%764) /* ty=Tensor[(4, 16, 14), float32] */;
  %766 = cast(%765, dtype="float64") /* ty=Tensor[(4, 16, 14), float64] */;
  %767 = %759.0;
  %768 = %762.5;
  %769 = log10(%766) /* ty=Tensor[(4, 16, 14), float64] */;
  (%767, %768, meta[relay.Constant][35] /* ty=Tensor[(1820), int32] */, meta[relay.Constant][36] /* ty=Tensor[(896), int8] */, %769)
}

def @func_7629() -> Tensor[(14, 9, 13), int16] {
  @func_6746() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_3179(%var_3170: Tensor[(990), float32], %var_3171: Tensor[(200), float64], %var_3176: Tensor[(14, 1), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(990), float32], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 1), float64]) {
  %770 = cast(%var_3170, dtype="float32") /* ty=Tensor[(990), float32] */;
  %771 = cast(%var_3171, dtype="float64") /* ty=Tensor[(200), float64] */;
  %772 = reshape(%770, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %773 = reshape(%771, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %774 = @func_2379(%772, %773) /* ty=(Tensor[(11, 6, 15), float64], Tensor[(14, 9, 13), float32], Tensor[(200), float64]) */;
  %775 = cast(%var_3176, dtype="float64") /* ty=Tensor[(14, 1), float64] */;
  %776 = %774.1;
  %777 = cast(%776, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %778 = reshape(%775, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
  %779 = reshape(%777, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
  %780 = @func_389(%778, %779) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
  %781 = @func_2231() /* ty=Tensor[(14, 9, 13), int16] */;
  %782 = %780.0;
  (%781, %776, %var_3170, %var_3171, %782, %var_3176)
}

def @func_610() -> Tensor[(14, 9, 13), int16] {
  %783 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %783.0
}

def @func_10357() -> (Tensor[(14, 9, 13), int16],) {
  %784 = @func_9695() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %785 = %784.0;
  (%785,)
}

def @func_4720() -> (Tensor[(14, 9, 13), int16],) {
  %786 = @func_3579() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(200), float64]) */;
  %787 = %786.1;
  (%787,)
}

def @func_8119() -> (Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16]) {
  %788 = @func_7986() /* ty=(Tensor[(14, 9, 13), int16], float32, Tensor[(13, 8, 9), int32]) */;
  %789 = %788.2;
  %790 = @func_5382() /* ty=Tensor[(14, 9, 13), int16] */;
  (%789, %790)
}

def @func_5001() -> Tensor[(14, 9, 13), uint8] {
  %791 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %791.4
}

def @func_5365() -> (Tensor[(14, 9, 13), int16],) {
  %792 = @func_4720() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %793 = %792.0;
  (%793,)
}

def @func_9095() -> (Tensor[(14, 9, 13), int16],) {
  %794 = @func_6617() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %795 = %794.0;
  (%795,)
}

def @func_2495(%var_2467: float32) -> (Tensor[(16, 10, 10), float32], Tensor[(14, 1), float32], float32, Tensor[(14), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %796 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 10, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 10), float32] */;
  %797 = cast(%var_2467, dtype="float32") /* ty=float32 */;
  %798 = cast(meta[relay.Constant][38] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %799 = reshape(%797, newshape=[]) /* ty=float32 */;
  %800 = reshape(%798, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
  %801 = @func_1903(%799, %800) /* ty=(Tensor[(14, 1), float32],) */;
  %802 = @func_1865() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) */;
  %803 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %804 = cosh(%796) /* ty=Tensor[(16, 10, 10), float32] */;
  %805 = %801.0;
  %806 = %802.0;
  %807 = %803.0;
  (%804, %805, %var_2467, meta[relay.Constant][38] /* ty=Tensor[(14), float32] */, %806, %807)
}

def @func_2855() -> Tensor[(14, 9, 13), int16] {
  @func_2231() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_213() -> (Tensor[(14, 9, 13), int16],) {
  %808 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 9, 13), float32] */, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %809 = sin(%808) /* ty=Tensor[(14, 9, 13), float32] */;
  %810 = cast(%809, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %811 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(14, 9, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 9, 13), float32] */, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %814 = add(%812, %813) /* ty=Tensor[(14, 9, 13), int16] */;
  (%814,)
}

def @func_2888() -> (Tensor[(14, 9, 13), int16],) {
  %815 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %816 = %815.0;
  (%816,)
}

def @func_3372() -> (Tensor[(14, 9, 13), int16],) {
  %817 = @func_2398() /* ty=Tensor[(14, 9, 13), int16] */;
  (%817,)
}

def @func_6478(%var_6463: Tensor[(12, 16, 3), float64], %var_6464: Tensor[(12, 16, 3), float64]) -> (Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64]) {
  %818 = cast(%var_6464, dtype="float64") /* ty=Tensor[(12, 16, 3), float64] */;
  %819 = shape_of(%var_6463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%var_6463, dtype="float64") /* ty=Tensor[(12, 16, 3), float64] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %822 = cast(%var_6464, dtype="float64") /* ty=Tensor[(12, 16, 3), float64] */;
  %823 = shape_of(%var_6463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %824 = cast(%var_6463, dtype="float64") /* ty=Tensor[(12, 16, 3), float64] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %826 = cast(%var_6463, dtype="float64") /* ty=Tensor[(12, 16, 3), float64] */;
  %827 = floor_mod(%820, %821) /* ty=Tensor[(12, 16, 3), float64] */;
  %828 = power(%824, %825) /* ty=Tensor[(12, 16, 3), float64] */;
  %829 = exp(%826) /* ty=Tensor[(12, 16, 3), float64] */;
  (%827, %828, %829)
}

def @func_1903(%var_1879: float32, %var_1880: Tensor[(14, 1), float32]) -> (Tensor[(14, 1), float32],) {
  %830 = cast(%var_1879, dtype="float32") /* ty=float32 */;
  %831 = cast(%var_1880, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %832 = mod(%830, %831) /* ty=Tensor[(14, 1), float32] */;
  (%832,)
}

def @func_4435() -> (Tensor[(14, 9, 13), int16],) {
  %833 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %834 = %833.0;
  (%834,)
}

def @func_5443() -> Tensor[(14, 9, 13), int16] {
  %835 = @func_3689() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %835.0
}

def @func_9370() -> Tensor[(14, 9, 13), float64] {
  %836 = @func_9318() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(8, 6, 7), float32]) */;
  %836.0
}

def @func_10221(%var_10174: Tensor[(910), bool]) -> (Tensor[(14, 9, 13), int64], float32, Tensor[(14, 9, 13), int16], Tensor[(14, 5, 13), float32], Tensor[(910), bool]) {
  %837 = @func_9863() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int64], Tensor[(200), float64]) */;
  %838 = %837.1;
  %839 = cast(%838, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %840 = reshape(%839, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %841 = @func_2609(%840) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) */;
  %842 = cast(%var_10174, dtype="bool") /* ty=Tensor[(910), bool] */;
  %843 = cast(%var_10174, dtype="bool") /* ty=Tensor[(910), bool] */;
  %844 = reshape(%842, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), bool] */;
  %845 = reshape(%843, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), bool] */;
  %846 = %841.2;
  %847 = @func_6054() /* ty=Tensor[(14, 9, 13), int16] */;
  %848 = @func_6635(%844, %845) /* ty=Tensor[(14, 5, 13), float32] */;
  (%838, %846, %847, %848, %var_10174)
}

def @func_8993(%var_8984: Tensor[(6, 208), float32]) -> (Tensor[(6, 208), float32],) {
  %849 = @func_7282() /* ty=(Tensor[(?, 208), float32], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), float64]) */;
  %850 = %849.0;
  %851 = cast(%850, dtype="float32") /* ty=Tensor[(?, 208), float32] */;
  %852 = cast(%var_8984, dtype="float32") /* ty=Tensor[(6, 208), float32] */;
  %853 = add(%851, %852) /* ty=Tensor[(6, 208), float32] */;
  (%853,)
}

def @func_5902() -> Tensor[(5, 1, 16), float32] {
  %854 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 16), float32] */;
  tan(%854) /* ty=Tensor[(5, 1, 16), float32] */
}

def @func_6536() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
  %855 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
  %856 = @func_3484() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */;
  %857 = %856.0;
  %858 = cast(%857, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %859 = %855.3;
  %860 = cosh(%858) /* ty=Tensor[(14, 9, 13), float64] */;
  (%859, %860)
}

def @func_8564() -> (Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64]) {
  %861 = @func_2888() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %862 = @func_7776() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(200), float64]) */;
  %863 = %862.2;
  %864 = cast(meta[relay.Constant][41] /* ty=Tensor[(50, 4), float64] */, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(2), int32] */;
  %866 = cast(%863, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %868 = @func_7212() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(360), float32]) */;
  %869 = cast(meta[relay.Constant][41] /* ty=Tensor[(50, 4), float64] */, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %870 = %861.0;
  %871 = floor_divide(%866, %867) /* ty=Tensor[(50, 4), float64] */;
  %872 = @func_6175() /* ty=Tensor[(14, 9, 13), float64] */;
  %873 = %868.1;
  %874 = log2(%869) /* ty=Tensor[(50, 4), float64] */;
  (%870, %871, %872, %873, %874)
}

def @func_9318() -> (Tensor[(14, 9, 13), float64], Tensor[(8, 6, 7), float32]) {
  %875 = @func_7556() /* ty=Tensor[(14, 9, 13), float64] */;
  %876 = cast(%875, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %877 = reshape(%876, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
  %878 = @func_5184(%877) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16], Tensor[(1638), int16]) */;
  %879 = %878.0;
  (%875, %879)
}

def @func_2326() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(200), float64]) {
  %880 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %881 = %880.0;
  %882 = cast(%881, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %883 = reshape(%882, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %884 = @func_682(%883) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %885 = cast(meta[relay.Constant][42] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %886 = reshape(%885, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %887 = @func_2069(%886) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
  %888 = %884.1;
  %889 = %887.5;
  (%881, %888, %889, meta[relay.Constant][42] /* ty=Tensor[(200), float64] */)
}

def @func_4050() -> Tensor[(14, 9, 13), int16] {
  %890 = @func_1865() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) */;
  %890.1
}

def @func_6672() -> (Tensor[(10, 20), float64],) {
  %891 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
  %892 = %891.2;
  (%892,)
}

def @func_8411() -> (Tensor[(14, 9, 13), int16],) {
  %893 = @func_2855() /* ty=Tensor[(14, 9, 13), int16] */;
  (%893,)
}

def @func_8196(%var_8171: Tensor[(15, 16, 8), float32], %var_8172: Tensor[(15, 16, 8), float32]) -> (Tensor[(15, 16, 8), bool], Tensor[(14, 9, 13), int16], Tensor[(13, 8, 9), int32]) {
  %894 = cast(%var_8172, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %895 = shape_of(%var_8171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%var_8171, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %898 = @func_7776() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(200), float64]) */;
  %899 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
  %900 = less_equal(%896, %897) /* ty=Tensor[(15, 16, 8), bool] */;
  %901 = %898.1;
  %902 = %899.0;
  (%900, %901, %902)
}

def @func_167(%var_157: Tensor[(5, 4, 10), float64]) -> (Tensor[(5, 4, 10), float64],) {
  %903 = cast(%var_157, dtype="float64") /* ty=Tensor[(5, 4, 10), float64] */;
  %904 = acos(%903) /* ty=Tensor[(5, 4, 10), float64] */;
  (%904,)
}

def @func_5624(%var_5593: Tensor[(50, 4), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(50, 4), float64], Tensor[(14), float64]) {
  %905 = cast(%var_5593, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %906 = cast(meta[relay.Constant][43] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
  %907 = reshape(%905, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %908 = reshape(%906, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %909 = @func_4906(%907, %908) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(200), float64], Tensor[(14, 9, 13), float32], Tensor[(14), float64], Tensor[(14, 9, 13), int16]) */;
  %910 = @func_5132() /* ty=Tensor[(14, 9, 13), int16] */;
  %911 = %909.3;
  (%910, %911, %var_5593, meta[relay.Constant][43] /* ty=Tensor[(14), float64] */)
}

def @func_6369() -> Tensor[(14, 9, 13), int16] {
  %912 = @func_5365() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %912.0
}

def @func_7896() -> (Tensor[(360), float32], Tensor[(14, 9, 13), int16]) {
  %913 = @func_7212() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(360), float32]) */;
  %914 = %913.3;
  %915 = @func_6599() /* ty=Tensor[(14, 9, 13), int16] */;
  (%914, %915)
}

def @func_5564(%var_5518: Tensor[(5, 13, 15), int64], %var_5519: Tensor[(5, 13, 15), int64]) -> (Tensor[(5, 13, 15), int64], Tensor[(?, 208), float32], Tensor[(208), float64], Tensor[(105, 3), float64]) {
  %916 = cast(%var_5519, dtype="int64") /* ty=Tensor[(5, 13, 15), int64] */;
  %917 = shape_of(%var_5518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(%var_5518, dtype="int64") /* ty=Tensor[(5, 13, 15), int64] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %920 = @func_4305() /* ty=(Tensor[(?, 208), float32],) */;
  %921 = cast(meta[relay.Constant][44] /* ty=Tensor[(105, 3), float64] */, dtype="float64") /* ty=Tensor[(105, 3), float64] */;
  %922 = reshape(%921, newshape=[315]) /* ty=Tensor[(315), float64] */;
  %923 = @func_3137(%922) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(13, 8, 2), float64], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(315), float64]) */;
  %924 = left_shift(%918, %919) /* ty=Tensor[(5, 13, 15), int64] */;
  %925 = %920.0;
  %926 = %923.2;
  (%924, %925, %926, meta[relay.Constant][44] /* ty=Tensor[(105, 3), float64] */)
}

def @func_6070(%var_6065: Tensor[(9, 10, 11), float64], %var_6066: Tensor[(9, 10, 11), float64]) -> (Tensor[(9, 10, 11), float64],) {
  %927 = cast(%var_6066, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  %928 = shape_of(%var_6065, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%var_6065, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %931 = divide(%929, %930) /* ty=Tensor[(9, 10, 11), float64] */;
  (%931,)
}

def @func_7011() -> (Tensor[(14, 9, 13), int16],) {
  %932 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %933 = %932.0;
  (%933,)
}

def @func_876(%var_839: Tensor[(208), float64]) -> (Tensor[(14, 9, 13), bool], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(208), float64]) {
  %934 = cast(%var_839, dtype="float64") /* ty=Tensor[(208), float64] */;
  %935 = reshape(%934, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float64] */;
  %936 = @func_512(%935) /* ty=(Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) */;
  %937 = %936.1;
  %938 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %939 = %938.0;
  %940 = cast(%939, dtype="bool") /* ty=Tensor[(14, 9, 13), bool] */;
  %941 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%937, dtype="bool") /* ty=Tensor[(14, 9, 13), bool] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %944 = cast(meta[relay.Constant][45] /* ty=Tensor[(208), float64] */, dtype="bool") /* ty=Tensor[(208), bool] */;
  %945 = shape_of(%var_839, dtype="int32") /* ty=Tensor[(1), int32] */;
  %946 = cast(%var_839, dtype="bool") /* ty=Tensor[(208), bool] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?), bool] */;
  %948 = cast(meta[relay.Constant][45] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %949 = equal(%942, %943) /* ty=Tensor[(14, 9, 13), bool] */;
  %950 = equal(%946, %947) /* ty=Tensor[(208), bool] */;
  %951 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
  %952 = exp(%948) /* ty=Tensor[(208), float64] */;
  (%949, %950, %951, %952)
}

def @func_9386() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) {
  %953 = @func_6617() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %954 = %953.0;
  %955 = @func_8432() /* ty=Tensor[(14, 9, 13), int8] */;
  (%954, %955)
}

def @func_5216() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
  %956 = @func_4050() /* ty=Tensor[(14, 9, 13), int16] */;
  %957 = cast(%956, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %958 = reshape(%957, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %959 = @func_682(%958) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %960 = %959.0;
  (%956, %960)
}

def @func_6705(%var_6687: Tensor[(11, 10, 5), float64], %var_6688: Tensor[(11, 10, 5), float64]) -> (Tensor[(11, 10, 5), float64], Tensor[(11, 10, 5), float64]) {
  %961 = cast(%var_6688, dtype="float64") /* ty=Tensor[(11, 10, 5), float64] */;
  %962 = shape_of(%var_6687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %963 = cast(%var_6687, dtype="float64") /* ty=Tensor[(11, 10, 5), float64] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %965 = cast(%var_6687, dtype="float64") /* ty=Tensor[(11, 10, 5), float64] */;
  %966 = power(%963, %964) /* ty=Tensor[(11, 10, 5), float64] */;
  %967 = atan(%965) /* ty=Tensor[(11, 10, 5), float64] */;
  (%966, %967)
}

def @func_4228(%var_4200: Tensor[(3, 6, 10), float32]) -> (Tensor[(3, 6, 10), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14), float64], Tensor[(50, 4), float64], Tensor[(336), float64], Tensor[(990), float32]) {
  %968 = cast(9.5246f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %969 = cast(%var_4200, dtype="float32") /* ty=Tensor[(3, 6, 10), float32] */;
  %970 = @func_2712() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */;
  %971 = cast(meta[relay.Constant][46] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
  %972 = %970.0;
  %973 = cast(%972, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %974 = reshape(%971, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
  %975 = reshape(%973, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
  %976 = @func_389(%974, %975) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
  %977 = cast(meta[relay.Constant][47] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %978 = cast(meta[relay.Constant][48] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %979 = reshape(%977, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), float64] */;
  %980 = reshape(%978, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %981 = @func_3543(%979, %980) /* ty=(Tensor[(14, 12, 2), float64], Tensor[(14, 1), float64], Tensor[(990), float32], Tensor[(50, 4), float64], Tensor[(7, 2), float64]) */;
  %982 = floor_divide(%968, %969) /* ty=Tensor[(3, 6, 10), float32] */;
  %983 = %976.0;
  %984 = %981.3;
  (%982, %972, %983, meta[relay.Constant][46] /* ty=Tensor[(14), float64] */, %984, meta[relay.Constant][47] /* ty=Tensor[(336), float64] */, meta[relay.Constant][48] /* ty=Tensor[(990), float32] */)
}

def @func_5469() -> (Tensor[(13, 8, 9), int32],) {
  %985 = cast(meta[relay.Constant][49] /* ty=Tensor[(13, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
  %986 = sin(%985) /* ty=Tensor[(13, 8, 9), float64] */;
  %987 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 8, 9), float64] */, dtype="int32") /* ty=Tensor[(13, 8, 9), int32] */;
  %988 = shape_of(%986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%986, dtype="int32") /* ty=Tensor[(13, 8, 9), int32] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %991 = subtract(%989, %990) /* ty=Tensor[(13, 8, 9), int32] */;
  (%991,)
}

def @func_682(%var_645: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) {
  %992 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %993 = %992.0;
  %994 = cast(%var_645, dtype="int32") /* ty=Tensor[(14, 9, 13), int32] */;
  %995 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(%993, dtype="int32") /* ty=Tensor[(14, 9, 13), int32] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %998 = bitwise_and(%996, %997) /* ty=Tensor[(14, 9, 13), int32] */;
  %999 = cast(%998, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %1000 = cast(%var_645, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %1001 = sinh(%999) /* ty=Tensor[(14, 9, 13), float64] */;
  %1002 = asin(%1000) /* ty=Tensor[(14, 9, 13), float64] */;
  (%1001, %1002)
}

def @func_5712(%var_5708: Tensor[(180), float32]) -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(180), float32]) {
  %1003 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %1004 = @func_3987() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %1005 = cast(%var_5708, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1006 = reshape(%1005, newshape=[3, 6, 10]) /* ty=Tensor[(3, 6, 10), float32] */;
  %1007 = @func_4228(%1006) /* ty=(Tensor[(3, 6, 10), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14), float64], Tensor[(50, 4), float64], Tensor[(336), float64], Tensor[(990), float32]) */;
  %1008 = %1003.2;
  %1009 = %1004.1;
  %1010 = %1007.1;
  (%1008, %1009, %1010, %var_5708)
}

def @func_2269(%var_2257: float32, %var_2258: Tensor[(12, 15, 2), float32]) -> Tensor[(12, 15, 2), float32] {
  %1011 = cast(%var_2257, dtype="float32") /* ty=float32 */;
  %1012 = cast(%var_2258, dtype="float32") /* ty=Tensor[(12, 15, 2), float32] */;
  floor_mod(%1011, %1012) /* ty=Tensor[(12, 15, 2), float32] */
}

def @func_2129(%var_2087: Tensor[(7, 3, 15), float64]) -> (Tensor[(7, 3, 15), uint64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(14, 9, 13), int16]) {
  %1013 = cast(%var_2087, dtype="float64") /* ty=Tensor[(7, 3, 15), float64] */;
  %1014 = exp(%1013) /* ty=Tensor[(7, 3, 15), float64] */;
  %1015 = cast(%1014, dtype="uint64") /* ty=Tensor[(7, 3, 15), uint64] */;
  %1016 = shape_of(%var_2087, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%var_2087, dtype="uint64") /* ty=Tensor[(7, 3, 15), uint64] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1019 = @func_1865() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) */;
  %1020 = %1019.0;
  %1021 = cast(%1020, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %1022 = reshape(%1021, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %1023 = minimum(%1017, %1018) /* ty=Tensor[(7, 3, 15), uint64] */;
  %1024 = @func_1322(%1022) /* ty=Tensor[(14, 9, 13), uint8] */;
  %1025 = @func_1423() /* ty=Tensor[(14, 9, 13), int16] */;
  (%1023, %1020, %1024, %1025)
}

def @func_6635(%var_6621: Tensor[(14, 5, 13), bool], %var_6622: Tensor[(14, 5, 13), bool]) -> Tensor[(14, 5, 13), float32] {
  %1026 = cast(%var_6622, dtype="bool") /* ty=Tensor[(14, 5, 13), bool] */;
  %1027 = shape_of(%var_6621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1028 = cast(%var_6621, dtype="bool") /* ty=Tensor[(14, 5, 13), bool] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1030 = logical_or(%1028, %1029) /* ty=Tensor[(14, 5, 13), bool] */;
  %1031 = cast(%1030, dtype="float32") /* ty=Tensor[(14, 5, 13), float32] */;
  cosh(%1031) /* ty=Tensor[(14, 5, 13), float32] */
}

def @func_5382() -> Tensor[(14, 9, 13), int16] {
  %1032 = @func_3224() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %1032.0
}

def @func_1340() -> Tensor[(14, 9, 13), int16] {
  %1033 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %1033.0
}

def @func_10371(%var_10362: Tensor[(5, 12, 14), int16], %var_10363: Tensor[(5, 12, 14), int16]) -> (Tensor[(5, 12, 14), int16],) {
  %1034 = cast(%var_10363, dtype="int16") /* ty=Tensor[(5, 12, 14), int16] */;
  %1035 = shape_of(%var_10362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1036 = cast(%var_10362, dtype="int16") /* ty=Tensor[(5, 12, 14), int16] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1038 = maximum(%1036, %1037) /* ty=Tensor[(5, 12, 14), int16] */;
  (%1038,)
}

def @func_1506(%var_1471: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8], Tensor[(200), float64], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) {
  %1039 = cast(meta[relay.Constant][51] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1040 = reshape(%1039, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float64] */;
  %1041 = @func_512(%1040) /* ty=(Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) */;
  %1042 = @func_1193() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %1043 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
  %1044 = cast(%1043, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %1045 = reshape(%1044, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %1046 = @func_682(%1045) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %1047 = cast(%var_1471, dtype="float64") /* ty=Tensor[(200), float64] */;
  %1048 = reshape(%1047, newshape=[200, 1]) /* ty=Tensor[(200, 1), float64] */;
  %1049 = @func_1071(%1048) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) */;
  %1050 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
  %1051 = cast(%1050, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %1052 = reshape(%1051, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %1053 = @func_1117(%1052) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %1054 = %1041.2;
  %1055 = cast(%1054, dtype="int16") /* ty=Tensor[(1638), int16] */;
  %1056 = reshape(%1055, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %1057 = %1042.0;
  %1058 = %1046.0;
  %1059 = %1049.6;
  %1060 = %1053.0;
  %1061 = @func_1423() /* ty=Tensor[(14, 9, 13), int16] */;
  %1062 = @func_1322(%1056) /* ty=Tensor[(14, 9, 13), uint8] */;
  (%1043, %1050, %1054, meta[relay.Constant][51] /* ty=Tensor[(208), float64] */, %1057, %1058, %1059, %var_1471, %1060, %1061, %1062)
}

def @func_7850() -> (Tensor[(14, 9, 13), int16],) {
  %1063 = @func_4102() /* ty=Tensor[(14, 9, 13), int16] */;
  (%1063,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7284() -> (Tensor[(?, 208), float32], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), float64]) {
  @func_7282() /* ty=(Tensor[(?, 208), float32], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), float64]) */
}

def @func_3691() -> (Tensor[(14, 9, 13), int16],) {
  @func_3689() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_3772(%var_3741: Tensor[(182, 10), int32]) -> (Tensor[(14, 9, 13), int16], Tensor[(10, 13, 14), bool], Tensor[(182, 10), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8]) {
  %0 = @func_2888() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %1 = cast(%var_3741, dtype="int32") /* ty=Tensor[(182, 10), int32] */;
  %2 = reshape(%1, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), int32] */;
  %3 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
  %4 = cast(%3, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %5 = reshape(%4, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %6 = @func_682(%5) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %7 = cast(%3, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %8 = reshape(%7, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %9 = %0.0;
  %10 = @func_3719(%2) /* ty=Tensor[(10, 13, 14), bool] */;
  %11 = %6.0;
  %12 = @func_1322(%8) /* ty=Tensor[(14, 9, 13), uint8] */;
  (%9, %10, %var_3741, %3, %11, %12)
}

def @func_6175() -> Tensor[(14, 9, 13), float64] {
  %13 = @func_1975() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %13.1
}

def @func_2655(%var_2654: Tensor[(6, 3, 14), uint32]) -> (Tensor[(6, 3, 14), uint32],) {
  %17 = fn (%var_2645: Tensor[(6, 3, 14), uint32]) -> (Tensor[(6, 3, 14), uint32],) {
    %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 1, 14), uint32] */, dtype="uint32") /* ty=Tensor[(6, 1, 14), uint32] */;
    %15 = cast(%var_2645, dtype="uint32") /* ty=Tensor[(6, 3, 14), uint32] */;
    %16 = bitwise_or(%14, %15) /* ty=Tensor[(6, 3, 14), uint32] */;
    (%16,)
  };
  %17(%var_2654) /* ty=(Tensor[(6, 3, 14), uint32],) */
}

def @func_4740() -> (Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16]) {
  %21 = fn () -> (Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16]) {
    %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 6, 7), float32] */, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
    %19 = tan(%18) /* ty=Tensor[(8, 6, 7), float32] */;
    %20 = @func_4050() /* ty=Tensor[(14, 9, 13), int16] */;
    (%19, %20)
  };
  %21() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16]) */
}

def @func_3547(%var_3545: Tensor[(14, 12, 2), float64], %var_3546: Tensor[(990), float32]) -> (Tensor[(14, 12, 2), float64], Tensor[(14, 1), float64], Tensor[(990), float32], Tensor[(50, 4), float64], Tensor[(7, 2), float64]) {
  @func_3543(%var_3545, %var_3546) /* ty=(Tensor[(14, 12, 2), float64], Tensor[(14, 1), float64], Tensor[(990), float32], Tensor[(50, 4), float64], Tensor[(7, 2), float64]) */
}

def @func_5752(%var_5749: int8, %var_5750: Tensor[(4, 10, 1), int8], %var_5751: Tensor[(4, 10, 13), int8]) -> (Tensor[(4, 10, 1), int8], Tensor[(4, 10, 13), uint64], Tensor[(14, 9, 13), float64]) {
  %30 = fn (%var_5735: int8, %var_5736: Tensor[(4, 10, 1), int8], %var_5740: Tensor[(4, 10, 13), int8]) -> (Tensor[(4, 10, 1), int8], Tensor[(4, 10, 13), uint64], Tensor[(14, 9, 13), float64]) {
    %22 = cast(%var_5735, dtype="int8") /* ty=int8 */;
    %23 = cast(%var_5736, dtype="int8") /* ty=Tensor[(4, 10, 1), int8] */;
    %24 = cast(%var_5736, dtype="uint64") /* ty=Tensor[(4, 10, 1), uint64] */;
    %25 = cast(%var_5740, dtype="uint64") /* ty=Tensor[(4, 10, 13), uint64] */;
    %26 = @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
    %27 = logical_xor(%22, %23) /* ty=Tensor[(4, 10, 1), int8] */;
    %28 = subtract(%24, %25) /* ty=Tensor[(4, 10, 13), uint64] */;
    %29 = %26.1;
    (%27, %28, %29)
  };
  %30(%var_5749, %var_5750, %var_5751) /* ty=(Tensor[(4, 10, 1), int8], Tensor[(4, 10, 13), uint64], Tensor[(14, 9, 13), float64]) */
}

def @func_2498(%var_2496: float32) -> (Tensor[(16, 10, 10), float32], Tensor[(14, 1), float32], float32, Tensor[(14), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  @func_2495(%var_2496) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(14, 1), float32], float32, Tensor[(14), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_4961(%var_4959: Tensor[(10, 8, 5), float64]) -> (Tensor[(10, 8, 5), float64],) {
  @func_4958(%var_4959) /* ty=(Tensor[(10, 8, 5), float64],) */
}

def @func_2379(%var_2348: Tensor[(11, 6, 15), float32], %var_2377: Tensor[(200), float64]) -> (Tensor[(11, 6, 15), float64], Tensor[(14, 9, 13), float32], Tensor[(200), float64]) {
  %31 = cast(%var_2348, dtype="float32") /* ty=Tensor[(11, 6, 15), float32] */;
  %32 = asin(%31) /* ty=Tensor[(11, 6, 15), float32] */;
  %33 = cast(%var_2348, dtype="float64") /* ty=Tensor[(11, 6, 15), float64] */;
  %34 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%32, dtype="float64") /* ty=Tensor[(11, 6, 15), float64] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %37 = cast(%var_2377, dtype="float64") /* ty=Tensor[(200), float64] */;
  %38 = reshape(%37, newshape=[200, 1]) /* ty=Tensor[(200, 1), float64] */;
  %39 = @func_1071(%38) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) */;
  %40 = maximum(%35, %36) /* ty=Tensor[(11, 6, 15), float64] */;
  %41 = %39.2;
  (%40, %41, %var_2377)
}

def @func_10359() -> (Tensor[(14, 9, 13), int16],) {
  @func_10357() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_8121() -> (Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16]) {
  @func_8119() /* ty=(Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16]) */
}

def @func_3581() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(200), float64]) {
  @func_3579() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(200), float64]) */
}

def @func_6257() -> Tensor[(14, 9, 13), int16] {
  @func_6255() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_7255() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  @func_7253() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_6158() -> (Tensor[(14, 9, 13), int8],) {
  @func_6156() /* ty=(Tensor[(14, 9, 13), int8],) */
}

def @func_2856() -> Tensor[(14, 9, 13), int16] {
  %42 = fn () -> Tensor[(14, 9, 13), int16] {
    @func_2231() /* ty=Tensor[(14, 9, 13), int16] */
  };
  %42() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_515(%var_513: Tensor[(13, 8, 2), float64]) -> (Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) {
  @func_512(%var_513) /* ty=(Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) */
}

def @func_1322(%var_1311: Tensor[(14, 9, 13), int16]) -> Tensor[(14, 9, 13), uint8] {
  %43 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %44 = %43.0;
  %45 = cast(%var_1311, dtype="uint8") /* ty=Tensor[(14, 9, 13), uint8] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%44, dtype="uint8") /* ty=Tensor[(14, 9, 13), uint8] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%47, %48) /* ty=Tensor[(14, 9, 13), uint8] */
}

def @func_5002() -> Tensor[(14, 9, 13), uint8] {
  %50 = fn () -> Tensor[(14, 9, 13), uint8] {
    %49 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
    %49.4
  };
  %50() /* ty=Tensor[(14, 9, 13), uint8] */
}

def @func_9295(%var_9284: Tensor[(4, 3, 10), uint32], %var_9285: Tensor[(4, 3, 10), uint32]) -> (Tensor[(4, 3, 10), float64],) {
  %51 = cast(%var_9285, dtype="uint32") /* ty=Tensor[(4, 3, 10), uint32] */;
  %52 = shape_of(%var_9284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%var_9284, dtype="uint32") /* ty=Tensor[(4, 3, 10), uint32] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %55 = bitwise_or(%53, %54) /* ty=Tensor[(4, 3, 10), uint32] */;
  %56 = cast(%55, dtype="float64") /* ty=Tensor[(4, 3, 10), float64] */;
  %57 = asinh(%56) /* ty=Tensor[(4, 3, 10), float64] */;
  (%57,)
}

def @func_3923() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) {
  %74 = fn () -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) {
    %58 = @func_1193() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
    %59 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 20), float64] */, dtype="float64") /* ty=Tensor[(10, 20), float64] */;
    %60 = reshape(%59, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %61 = @func_2069(%60) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
    %62 = @func_2326() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
    %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
    %64 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 20), float64] */, dtype="float64") /* ty=Tensor[(10, 20), float64] */;
    %65 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 1), float64] */;
    %66 = reshape(%63, newshape=[990]) /* ty=Tensor[(990), float32] */;
    %67 = reshape(%64, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %68 = reshape(%65, newshape=[14, 1]) /* ty=Tensor[(14, 1), float64] */;
    %69 = @func_3179(%66, %67, %68) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(990), float32], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 1), float64]) */;
    %70 = %58.1;
    %71 = %61.0;
    %72 = %62.0;
    %73 = %69.0;
    (%70, %71, meta[relay.Constant][2] /* ty=Tensor[(10, 20), float64] */, %72, %73, meta[relay.Constant][3] /* ty=Tensor[(990), float32] */, meta[relay.Constant][4] /* ty=Tensor[(14, 1), float64] */)
  };
  %74() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */
}

def @func_7337() -> (Tensor[(14, 9, 13), int16],) {
  %76 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %75 = @func_6599() /* ty=Tensor[(14, 9, 13), int16] */;
    (%75,)
  };
  %76() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_7074() -> Tensor[(14, 9, 13), float64] {
  %78 = fn () -> Tensor[(14, 9, 13), float64] {
    %77 = @func_1975() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
    %77.1
  };
  %78() /* ty=Tensor[(14, 9, 13), float64] */
}

def @func_2888() -> (Tensor[(14, 9, 13), int16],) {
  %79 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %80 = %79.0;
  (%80,)
}

def @func_512(%var_488: Tensor[(13, 8, 2), float64]) -> (Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) {
  %81 = cast(%var_488, dtype="float64") /* ty=Tensor[(13, 8, 2), float64] */;
  %82 = acosh(%81) /* ty=Tensor[(13, 8, 2), float64] */;
  %83 = cast(%82, dtype="float64") /* ty=Tensor[(13, 8, 2), float64] */;
  %84 = cast(meta[relay.Constant][5] /* ty=Tensor[(1638), int16] */, dtype="int16") /* ty=Tensor[(1638), int16] */;
  %85 = reshape(%84, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %86 = @func_296(%85) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(1, 200), float32], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), bool]) */;
  %87 = atan(%83) /* ty=Tensor[(13, 8, 2), float64] */;
  %88 = %86.6;
  (%87, %88, meta[relay.Constant][5] /* ty=Tensor[(1638), int16] */)
}

def @func_612() -> Tensor[(14, 9, 13), int16] {
  @func_610() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_2890() -> (Tensor[(14, 9, 13), int16],) {
  @func_2888() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_8083() -> (Tensor[(14, 9, 13), int16],) {
  %89 = @func_7011() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %90 = %89.0;
  (%90,)
}

def @func_1325(%var_1323: Tensor[(14, 9, 13), int16]) -> Tensor[(14, 9, 13), uint8] {
  @func_1322(%var_1323) /* ty=Tensor[(14, 9, 13), uint8] */
}

def @func_317() -> (Tensor[(14, 9, 13), int16],) {
  %93 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %91 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %92 = %91.0;
    (%92,)
  };
  %93() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_1119(%var_1118: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), int8],) {
  %101 = fn (%var_1098: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), int8],) {
    %94 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %95 = %94.0;
    %96 = cast(%var_1098, dtype="int8") /* ty=Tensor[(14, 9, 13), int8] */;
    %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
    %98 = cast(%95, dtype="int8") /* ty=Tensor[(14, 9, 13), int8] */;
    %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %100 = subtract(%98, %99) /* ty=Tensor[(14, 9, 13), int8] */;
    (%100,)
  };
  %101(%var_1118) /* ty=(Tensor[(14, 9, 13), int8],) */
}

def @func_2400() -> Tensor[(14, 9, 13), int16] {
  @func_2398() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_5845() -> (Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(14, 9, 13), int16]) {
  @func_5843() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(14, 9, 13), int16]) */
}

def @func_7556() -> Tensor[(14, 9, 13), float64] {
  %102 = @func_2817() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) */;
  %102.0
}

def @func_4033(%var_4031: Tensor[(14), float64]) -> (Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(2, 7, 1), float64], Tensor[(14), float64]) {
  @func_4030(%var_4031) /* ty=(Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(2, 7, 1), float64], Tensor[(14), float64]) */
}

def @func_2232() -> Tensor[(14, 9, 13), int16] {
  %104 = fn () -> Tensor[(14, 9, 13), int16] {
    %103 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %103.0
  };
  %104() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_7630() -> Tensor[(14, 9, 13), int16] {
  %105 = fn () -> Tensor[(14, 9, 13), int16] {
    @func_6746() /* ty=Tensor[(14, 9, 13), int16] */
  };
  %105() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_10357() -> (Tensor[(14, 9, 13), int16],) {
  %106 = @func_9695() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %107 = %106.0;
  (%107,)
}

def @func_6905() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %108 = @func_4435() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %109 = @func_2231() /* ty=Tensor[(14, 9, 13), int16] */;
  %110 = %108.0;
  (%109, %110)
}

def @func_10371(%var_10362: Tensor[(5, 12, 14), int16], %var_10363: Tensor[(5, 12, 14), int16]) -> (Tensor[(5, 12, 14), int16],) {
  %111 = cast(%var_10363, dtype="int16") /* ty=Tensor[(5, 12, 14), int16] */;
  %112 = shape_of(%var_10362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%var_10362, dtype="int16") /* ty=Tensor[(5, 12, 14), int16] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %115 = maximum(%113, %114) /* ty=Tensor[(5, 12, 14), int16] */;
  (%115,)
}

def @func_1976() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
  %120 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
    %116 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %117 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
    %118 = %116.0;
    %119 = %117.2;
    (%118, %119)
  };
  %120() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */
}

def @func_5134() -> Tensor[(14, 9, 13), int16] {
  @func_5132() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_6050(%var_6049: Tensor[(8, 16, 6), int32]) -> (Tensor[(8, 16, 6), int32], Tensor[(14, 9, 13), int16]) {
  %128 = fn (%var_6021: Tensor[(8, 16, 6), int32]) -> (Tensor[(8, 16, 6), int32], Tensor[(14, 9, 13), int16]) {
    %121 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 16, 6), int32] */, dtype="int32") /* ty=Tensor[(8, 16, 6), int32] */;
    %122 = shape_of(%var_6021, dtype="int32") /* ty=Tensor[(3), int32] */;
    %123 = cast(%var_6021, dtype="int32") /* ty=Tensor[(8, 16, 6), int32] */;
    %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %125 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
    %126 = left_shift(%123, %124) /* ty=Tensor[(8, 16, 6), int32] */;
    %127 = %125.0;
    (%126, %127)
  };
  %128(%var_6049) /* ty=(Tensor[(8, 16, 6), int32], Tensor[(14, 9, 13), int16]) */
}

def @func_5505() -> Tensor[(14, 9, 13), int16] {
  %130 = fn () -> Tensor[(14, 9, 13), int16] {
    %129 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
    %129.1
  };
  %130() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_3989() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  @func_3987() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_4228(%var_4200: Tensor[(3, 6, 10), float32]) -> (Tensor[(3, 6, 10), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14), float64], Tensor[(50, 4), float64], Tensor[(336), float64], Tensor[(990), float32]) {
  %131 = cast(9.5246f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %132 = cast(%var_4200, dtype="float32") /* ty=Tensor[(3, 6, 10), float32] */;
  %133 = @func_2712() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */;
  %134 = cast(meta[relay.Constant][7] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
  %135 = %133.0;
  %136 = cast(%135, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %137 = reshape(%134, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
  %138 = reshape(%136, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
  %139 = @func_389(%137, %138) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
  %140 = cast(meta[relay.Constant][8] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %141 = cast(meta[relay.Constant][9] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %142 = reshape(%140, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), float64] */;
  %143 = reshape(%141, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %144 = @func_3543(%142, %143) /* ty=(Tensor[(14, 12, 2), float64], Tensor[(14, 1), float64], Tensor[(990), float32], Tensor[(50, 4), float64], Tensor[(7, 2), float64]) */;
  %145 = floor_divide(%131, %132) /* ty=Tensor[(3, 6, 10), float32] */;
  %146 = %139.0;
  %147 = %144.3;
  (%145, %135, %146, meta[relay.Constant][7] /* ty=Tensor[(14), float64] */, %147, meta[relay.Constant][8] /* ty=Tensor[(336), float64] */, meta[relay.Constant][9] /* ty=Tensor[(990), float32] */)
}

def @func_8321() -> (Tensor[(14, 9, 13), int16], Tensor[(208), float64], Tensor[(325, 3), int64]) {
  @func_8319() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), float64], Tensor[(325, 3), int64]) */
}

def @func_3721(%var_3720: Tensor[(10, 13, 14), int32]) -> Tensor[(10, 13, 14), bool] {
  %152 = fn (%var_3707: Tensor[(10, 13, 14), int32]) -> Tensor[(10, 13, 14), bool] {
    %148 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 13, 14), int32] */, dtype="bool") /* ty=Tensor[(10, 13, 14), bool] */;
    %149 = shape_of(%var_3707, dtype="int32") /* ty=Tensor[(3), int32] */;
    %150 = cast(%var_3707, dtype="bool") /* ty=Tensor[(10, 13, 14), bool] */;
    %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%150, %151) /* ty=Tensor[(10, 13, 14), bool] */
  };
  %152(%var_3720) /* ty=Tensor[(10, 13, 14), bool] */
}

def @func_6168(%var_6166: Tensor[(7, 12, 16), float64]) -> Tensor[(7, 12, 16), float64] {
  @func_6165(%var_6166) /* ty=Tensor[(7, 12, 16), float64] */
}

def @main() -> (Tensor[(13, 8, 9), float32],) {
  %153 = @func_10456() /* ty=(Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %154 = %153.0;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(13, 8, 9), float32] */;
  %156 = log(%155) /* ty=Tensor[(13, 8, 9), float32] */;
  %157 = cast(%156, dtype="float32") /* ty=Tensor[(13, 8, 9), float32] */;
  %158 = tan(%157) /* ty=Tensor[(13, 8, 9), float32] */;
  (%158,)
}

def @func_10270(%var_10269: Tensor[(5, 4, 10), float64]) -> (Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), bool], Tensor[(14, 9, 13), uint8]) {
  %174 = fn (%var_10242: Tensor[(5, 4, 10), float64]) -> (Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), bool], Tensor[(14, 9, 13), uint8]) {
    %159 = cast(meta[relay.Constant][11] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
    %160 = reshape(%159, newshape=[200, 1]) /* ty=Tensor[(200, 1), float64] */;
    %161 = @func_1071(%160) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) */;
    %162 = cast(meta[relay.Constant][11] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
    %163 = reshape(%162, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), float64] */;
    %164 = @func_167(%163) /* ty=(Tensor[(5, 4, 10), float64],) */;
    %165 = %164.0;
    %166 = cast(%var_10242, dtype="bool") /* ty=Tensor[(5, 4, 10), bool] */;
    %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
    %168 = cast(%165, dtype="bool") /* ty=Tensor[(5, 4, 10), bool] */;
    %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %170 = @func_7556() /* ty=Tensor[(14, 9, 13), float64] */;
    %171 = %161.1;
    %172 = greater(%168, %169) /* ty=Tensor[(5, 4, 10), bool] */;
    %173 = @func_5001() /* ty=Tensor[(14, 9, 13), uint8] */;
    (%170, meta[relay.Constant][11] /* ty=Tensor[(200), float64] */, %171, %172, %173)
  };
  %174(%var_10269) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), bool], Tensor[(14, 9, 13), uint8]) */
}

def @func_1073(%var_1072: Tensor[(200, 1), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) {
  %220 = fn (%var_1035: Tensor[(200, 1), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) {
    %175 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %176 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %177 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %178 = %177.0;
    %179 = cast(%178, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
    %180 = atanh(%179) /* ty=Tensor[(14, 9, 13), float32] */;
    %181 = cast(%178, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
    %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
    %183 = cast(%180, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
    %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %185 = maximum(%183, %184) /* ty=Tensor[(14, 9, 13), float32] */;
    %186 = cast(%185, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
    %187 = cast(%var_1035, dtype="float64") /* ty=Tensor[(200, 1), float64] */;
    %188 = reshape(%187, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), float64] */;
    %189 = @func_167(%188) /* ty=(Tensor[(5, 4, 10), float64],) */;
    %190 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %191 = %190.0;
    %192 = cast(%191, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
    %193 = sqrt(%192) /* ty=Tensor[(14, 9, 13), float64] */;
    %194 = cast(%193, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
    %195 = log10(%194) /* ty=Tensor[(14, 9, 13), float64] */;
    %196 = cast(%178, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %197 = reshape(%196, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
    %198 = @func_359(%197) /* ty=(Tensor[(14, 9, 13), int64],) */;
    %199 = %198.0;
    %200 = cast(%199, dtype="uint8") /* ty=Tensor[(14, 9, 13), uint8] */;
    %201 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
    %202 = cast(%195, dtype="uint8") /* ty=Tensor[(14, 9, 13), uint8] */;
    %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %204 = cast(meta[relay.Constant][12] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
    %205 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
    %206 = cast(%205, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %207 = reshape(%204, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
    %208 = reshape(%206, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
    %209 = @func_389(%207, %208) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
    %210 = cast(%185, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %211 = reshape(%210, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
    %212 = @func_359(%211) /* ty=(Tensor[(14, 9, 13), int64],) */;
    %213 = %175.0;
    %214 = %176.0;
    %215 = cos(%186) /* ty=Tensor[(14, 9, 13), float32] */;
    %216 = %189.0;
    %217 = right_shift(%202, %203) /* ty=Tensor[(14, 9, 13), uint8] */;
    %218 = %209.2;
    %219 = %212.0;
    (%213, %214, %215, %205, %216, %var_1035, %217, %218, meta[relay.Constant][12] /* ty=Tensor[(14), float64] */, %219)
  };
  %220(%var_1072) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) */
}

def @func_4428() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(7, 2), float64], Tensor[(14, 9, 13), int16], Tensor[(?, 208), float32]) {
  %233 = fn () -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(7, 2), float64], Tensor[(14, 9, 13), int16], Tensor[(?, 208), float32]) {
    %221 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
    %222 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 2), float64] */;
    %223 = %221.0;
    %224 = cast(%223, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %225 = reshape(%222, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
    %226 = reshape(%224, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
    %227 = @func_389(%225, %226) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
    %228 = @func_3484() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */;
    %229 = @func_4305() /* ty=(Tensor[(?, 208), float32],) */;
    %230 = %227.0;
    %231 = %228.0;
    %232 = %229.0;
    (%223, %230, meta[relay.Constant][13] /* ty=Tensor[(7, 2), float64] */, %231, %232)
  };
  %233() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(7, 2), float64], Tensor[(14, 9, 13), int16], Tensor[(?, 208), float32]) */
}

def @func_4910(%var_4908: Tensor[(200), float64], %var_4909: Tensor[(14), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(200), float64], Tensor[(14, 9, 13), float32], Tensor[(14), float64], Tensor[(14, 9, 13), int16]) {
  @func_4906(%var_4908, %var_4909) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(200), float64], Tensor[(14, 9, 13), float32], Tensor[(14), float64], Tensor[(14, 9, 13), int16]) */
}

def @func_3689() -> (Tensor[(14, 9, 13), int16],) {
  %234 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %235 = %234.0;
  (%235,)
}

def @func_5032() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %240 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
    %236 = @func_1865() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) */;
    %237 = @func_4657() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %238 = %236.0;
    %239 = %237.0;
    (%238, %239)
  };
  %240() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_361(%var_360: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), int64],) {
  %248 = fn (%var_346: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), int64],) {
    %241 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %242 = %241.0;
    %243 = cast(%var_346, dtype="int64") /* ty=Tensor[(14, 9, 13), int64] */;
    %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %245 = cast(%242, dtype="int64") /* ty=Tensor[(14, 9, 13), int64] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %247 = bitwise_xor(%245, %246) /* ty=Tensor[(14, 9, 13), int64] */;
    (%247,)
  };
  %248(%var_360) /* ty=(Tensor[(14, 9, 13), int64],) */
}

def @func_9419() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  @func_9417() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_2916() -> (Tensor[(14, 9, 13), int16],) {
  %250 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %249 = @func_2855() /* ty=Tensor[(14, 9, 13), int16] */;
    (%249,)
  };
  %250() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_3372() -> (Tensor[(14, 9, 13), int16],) {
  %251 = @func_2398() /* ty=Tensor[(14, 9, 13), int16] */;
  (%251,)
}

def @func_684(%var_683: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) {
  %263 = fn (%var_645: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) {
    %252 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %253 = %252.0;
    %254 = cast(%var_645, dtype="int32") /* ty=Tensor[(14, 9, 13), int32] */;
    %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
    %256 = cast(%253, dtype="int32") /* ty=Tensor[(14, 9, 13), int32] */;
    %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %258 = bitwise_and(%256, %257) /* ty=Tensor[(14, 9, 13), int32] */;
    %259 = cast(%258, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
    %260 = cast(%var_645, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
    %261 = sinh(%259) /* ty=Tensor[(14, 9, 13), float64] */;
    %262 = asin(%260) /* ty=Tensor[(14, 9, 13), float64] */;
    (%261, %262)
  };
  %263(%var_683) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */
}

def @func_8434() -> Tensor[(14, 9, 13), int8] {
  @func_8432() /* ty=Tensor[(14, 9, 13), int8] */
}

def @func_1594() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) {
  @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */
}

def @func_8119() -> (Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16]) {
  %264 = @func_7986() /* ty=(Tensor[(14, 9, 13), int16], float32, Tensor[(13, 8, 9), int32]) */;
  %265 = %264.2;
  %266 = @func_5382() /* ty=Tensor[(14, 9, 13), int16] */;
  (%265, %266)
}

def @func_5843() -> (Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(14, 9, 13), int16]) {
  %267 = @func_5504() /* ty=Tensor[(14, 9, 13), int16] */;
  %268 = cast(%267, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %269 = reshape(%268, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %270 = @func_2609(%269) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) */;
  %271 = @func_4639() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %272 = %270.3;
  %273 = %271.1;
  (%267, %272, %273)
}

def @func_6501(%var_6500: float32) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], float32, Tensor[(16, 10, 10), float64]) {
  %283 = fn (%var_6493: float32) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], float32, Tensor[(16, 10, 10), float64]) {
    %274 = @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
    %275 = cast(%var_6493, dtype="float32") /* ty=float32 */;
    %276 = reshape(%275, newshape=[]) /* ty=float32 */;
    %277 = @func_3346(%276) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(14, 9, 13), bool]) */;
    %278 = %277.0;
    %279 = cast(%278, dtype="float64") /* ty=Tensor[(16, 10, 10), float64] */;
    %280 = @func_4050() /* ty=Tensor[(14, 9, 13), int16] */;
    %281 = %274.1;
    %282 = rsqrt(%279) /* ty=Tensor[(16, 10, 10), float64] */;
    (%280, %281, %var_6493, %282)
  };
  %283(%var_6500) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], float32, Tensor[(16, 10, 10), float64]) */
}

def @func_7811(%var_7810: uint8) -> (Tensor[(1, 1, 2), uint8],) {
  %287 = fn (%var_7803: uint8) -> (Tensor[(1, 1, 2), uint8],) {
    %284 = cast(%var_7803, dtype="uint8") /* ty=uint8 */;
    %285 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 1, 2), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1, 2), uint8] */;
    %286 = bitwise_xor(%284, %285) /* ty=Tensor[(1, 1, 2), uint8] */;
    (%286,)
  };
  %287(%var_7810) /* ty=(Tensor[(1, 1, 2), uint8],) */
}

def @func_10375(%var_10373: Tensor[(5, 12, 14), int16], %var_10374: Tensor[(5, 12, 14), int16]) -> (Tensor[(5, 12, 14), int16],) {
  @func_10371(%var_10373, %var_10374) /* ty=(Tensor[(5, 12, 14), int16],) */
}

def @func_2071(%var_2070: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) {
  %299 = fn (%var_2066: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) {
    %288 = @func_1975() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
    %289 = cast(meta[relay.Constant][15] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %290 = reshape(%289, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float64] */;
    %291 = @func_512(%290) /* ty=(Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) */;
    %292 = cast(%var_2066, dtype="float64") /* ty=Tensor[(200), float64] */;
    %293 = reshape(%292, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %294 = @func_1714(%293) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int64], Tensor[(200), float64], Tensor[(14, 9, 13), float64]) */;
    %295 = %288.0;
    %296 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
    %297 = %291.1;
    %298 = %294.3;
    (%295, %296, %297, meta[relay.Constant][15] /* ty=Tensor[(208), float64] */, %298, %var_2066)
  };
  %299(%var_2070) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */
}

def @func_6255() -> Tensor[(14, 9, 13), int16] {
  @func_6234() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_7118(%var_7116: Tensor[(7, 6, 5), float64], %var_7117: Tensor[(7, 6, 5), float64]) -> (Tensor[(7, 6, 5), float64],) {
  %305 = fn (%var_7110: Tensor[(7, 6, 5), float64], %var_7111: Tensor[(7, 6, 5), float64]) -> (Tensor[(7, 6, 5), float64],) {
    %300 = cast(%var_7111, dtype="float64") /* ty=Tensor[(7, 6, 5), float64] */;
    %301 = shape_of(%var_7110, dtype="int32") /* ty=Tensor[(3), int32] */;
    %302 = cast(%var_7110, dtype="float64") /* ty=Tensor[(7, 6, 5), float64] */;
    %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %304 = floor_divide(%302, %303) /* ty=Tensor[(7, 6, 5), float64] */;
    (%304,)
  };
  %305(%var_7116, %var_7117) /* ty=(Tensor[(7, 6, 5), float64],) */
}

def @func_6618() -> (Tensor[(14, 9, 13), int16],) {
  %308 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %306 = @func_3224() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %307 = %306.0;
    (%307,)
  };
  %308() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_6482(%var_6480: Tensor[(12, 16, 3), float64], %var_6481: Tensor[(12, 16, 3), float64]) -> (Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64]) {
  @func_6478(%var_6480, %var_6481) /* ty=(Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64]) */
}

def @func_749() -> (Tensor[(14, 9, 13), int16],) {
  %311 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %309 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %310 = %309.0;
    (%310,)
  };
  %311() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_1592() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) {
  %312 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %313 = %312.0;
  %314 = cast(%313, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %315 = reshape(%314, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %316 = @func_1117(%315) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %317 = %316.0;
  %318 = cast(%317, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %319 = cast(%317, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %320 = reshape(%319, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %321 = @func_682(%320) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %322 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %323 = cast(%317, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %324 = reshape(%323, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %325 = acosh(%318) /* ty=Tensor[(14, 9, 13), float32] */;
  %326 = %321.0;
  %327 = %322.0;
  %328 = @func_1322(%324) /* ty=Tensor[(14, 9, 13), uint8] */;
  (%313, %325, %326, %327, %328)
}

def @func_3183(%var_3180: Tensor[(990), float32], %var_3181: Tensor[(200), float64], %var_3182: Tensor[(14, 1), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(990), float32], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 1), float64]) {
  %342 = fn (%var_3170: Tensor[(990), float32], %var_3171: Tensor[(200), float64], %var_3176: Tensor[(14, 1), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(990), float32], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 1), float64]) {
    %329 = cast(%var_3170, dtype="float32") /* ty=Tensor[(990), float32] */;
    %330 = cast(%var_3171, dtype="float64") /* ty=Tensor[(200), float64] */;
    %331 = reshape(%329, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
    %332 = reshape(%330, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %333 = @func_2379(%331, %332) /* ty=(Tensor[(11, 6, 15), float64], Tensor[(14, 9, 13), float32], Tensor[(200), float64]) */;
    %334 = cast(%var_3176, dtype="float64") /* ty=Tensor[(14, 1), float64] */;
    %335 = %333.1;
    %336 = cast(%335, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %337 = reshape(%334, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
    %338 = reshape(%336, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
    %339 = @func_389(%337, %338) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
    %340 = @func_2231() /* ty=Tensor[(14, 9, 13), int16] */;
    %341 = %339.0;
    (%340, %335, %var_3170, %var_3171, %341, %var_3176)
  };
  %342(%var_3180, %var_3181, %var_3182) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(990), float32], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 1), float64]) */
}

def @func_9069(%var_9067: Tensor[(8, 14, 3), float32], %var_9068: Tensor[(8, 14, 3), float32]) -> Tensor[(8, 14, 3), float32] {
  %347 = fn (%var_9057: Tensor[(8, 14, 3), float32], %var_9058: Tensor[(8, 14, 3), float32]) -> Tensor[(8, 14, 3), float32] {
    %343 = cast(%var_9058, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
    %344 = shape_of(%var_9057, dtype="int32") /* ty=Tensor[(3), int32] */;
    %345 = cast(%var_9057, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
    %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%345, %346) /* ty=Tensor[(8, 14, 3), float32] */
  };
  %347(%var_9067, %var_9068) /* ty=Tensor[(8, 14, 3), float32] */
}

def @func_6705(%var_6687: Tensor[(11, 10, 5), float64], %var_6688: Tensor[(11, 10, 5), float64]) -> (Tensor[(11, 10, 5), float64], Tensor[(11, 10, 5), float64]) {
  %348 = cast(%var_6688, dtype="float64") /* ty=Tensor[(11, 10, 5), float64] */;
  %349 = shape_of(%var_6687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%var_6687, dtype="float64") /* ty=Tensor[(11, 10, 5), float64] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %352 = cast(%var_6687, dtype="float64") /* ty=Tensor[(11, 10, 5), float64] */;
  %353 = power(%350, %351) /* ty=Tensor[(11, 10, 5), float64] */;
  %354 = atan(%352) /* ty=Tensor[(11, 10, 5), float64] */;
  (%353, %354)
}

def @func_10221(%var_10174: Tensor[(910), bool]) -> (Tensor[(14, 9, 13), int64], float32, Tensor[(14, 9, 13), int16], Tensor[(14, 5, 13), float32], Tensor[(910), bool]) {
  %355 = @func_9863() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int64], Tensor[(200), float64]) */;
  %356 = %355.1;
  %357 = cast(%356, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %358 = reshape(%357, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %359 = @func_2609(%358) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) */;
  %360 = cast(%var_10174, dtype="bool") /* ty=Tensor[(910), bool] */;
  %361 = cast(%var_10174, dtype="bool") /* ty=Tensor[(910), bool] */;
  %362 = reshape(%360, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), bool] */;
  %363 = reshape(%361, newshape=[14, 5, 13]) /* ty=Tensor[(14, 5, 13), bool] */;
  %364 = %359.2;
  %365 = @func_6054() /* ty=Tensor[(14, 9, 13), int16] */;
  %366 = @func_6635(%362, %363) /* ty=Tensor[(14, 5, 13), float32] */;
  (%356, %364, %365, %366, %var_10174)
}

def @func_1273(%var_1222: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), float32], Tensor[(208), float64], Tensor[(208), float64], Tensor[(14, 9, 13), int8]) {
  %367 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %368 = %367.0;
  %369 = cast(%var_1222, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %373 = cast(meta[relay.Constant][16] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %374 = reshape(%373, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %375 = @func_876(%374) /* ty=(Tensor[(14, 9, 13), bool], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(208), float64]) */;
  %376 = multiply(%371, %372) /* ty=Tensor[(14, 9, 13), float32] */;
  %377 = cast(%376, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %378 = reshape(%377, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %379 = @func_1117(%378) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %380 = %375.3;
  %381 = %379.0;
  (%376, %380, meta[relay.Constant][16] /* ty=Tensor[(208), float64] */, %381)
}

def @func_9370() -> Tensor[(14, 9, 13), float64] {
  %382 = @func_9318() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(8, 6, 7), float32]) */;
  %382.0
}

def @func_6599() -> Tensor[(14, 9, 13), int16] {
  %383 = @func_4657() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %383.0
}

def @func_4958(%var_4952: Tensor[(10, 8, 5), float64]) -> (Tensor[(10, 8, 5), float64],) {
  %384 = cast(%var_4952, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %385 = asin(%384) /* ty=Tensor[(10, 8, 5), float64] */;
  (%385,)
}

def @func_4659() -> (Tensor[(14, 9, 13), int16],) {
  @func_4657() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_9388() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) {
  @func_9386() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */
}

def @func_1340() -> Tensor[(14, 9, 13), int16] {
  %386 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %386.0
}

def @func_9864() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int64], Tensor[(200), float64]) {
  %392 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int64], Tensor[(200), float64]) {
    %387 = cast(meta[relay.Constant][17] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
    %388 = reshape(%387, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %389 = @func_1714(%388) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int64], Tensor[(200), float64], Tensor[(14, 9, 13), float64]) */;
    %390 = @func_9727() /* ty=Tensor[(14, 9, 13), int16] */;
    %391 = %389.2;
    (%390, %391, meta[relay.Constant][17] /* ty=Tensor[(200), float64] */)
  };
  %392() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int64], Tensor[(200), float64]) */
}

def @func_6177() -> Tensor[(14, 9, 13), float64] {
  @func_6175() /* ty=Tensor[(14, 9, 13), float64] */
}

def @func_9386() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) {
  %393 = @func_6617() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %394 = %393.0;
  %395 = @func_8432() /* ty=Tensor[(14, 9, 13), int8] */;
  (%394, %395)
}

def @func_8566() -> (Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64]) {
  @func_8564() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64]) */
}

def @func_7898() -> (Tensor[(360), float32], Tensor[(14, 9, 13), int16]) {
  @func_7896() /* ty=(Tensor[(360), float32], Tensor[(14, 9, 13), int16]) */
}

def @func_3139(%var_3138: Tensor[(315), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(13, 8, 2), float64], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(315), float64]) {
  %406 = fn (%var_3132: Tensor[(315), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(13, 8, 2), float64], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(315), float64]) {
    %396 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %397 = cast(meta[relay.Constant][18] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %398 = reshape(%397, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float64] */;
    %399 = @func_512(%398) /* ty=(Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) */;
    %400 = cast(%var_3132, dtype="float64") /* ty=Tensor[(315), float64] */;
    %401 = reshape(%400, newshape=[7, 3, 15]) /* ty=Tensor[(7, 3, 15), float64] */;
    %402 = @func_2129(%401) /* ty=(Tensor[(7, 3, 15), uint64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(14, 9, 13), int16]) */;
    %403 = %396.0;
    %404 = %399.0;
    %405 = %402.3;
    (%403, %404, meta[relay.Constant][18] /* ty=Tensor[(208), float64] */, %405, %var_3132)
  };
  %406(%var_3138) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(13, 8, 2), float64], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(315), float64]) */
}

def @func_8432() -> Tensor[(14, 9, 13), int8] {
  %407 = @func_2712() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */;
  %407.1
}

def @func_5277() -> Tensor[(14, 9, 13), int16] {
  %408 = @func_2915() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %408.0
}

def @func_4367() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(1820), int32], Tensor[(896), int8], Tensor[(4, 16, 14), float64]) {
  @func_4365() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(1820), int32], Tensor[(896), int8], Tensor[(4, 16, 14), float64]) */
}

def @func_1276(%var_1274: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), float32], Tensor[(208), float64], Tensor[(208), float64], Tensor[(14, 9, 13), int8]) {
  @func_1273(%var_1274) /* ty=(Tensor[(14, 9, 13), float32], Tensor[(208), float64], Tensor[(208), float64], Tensor[(14, 9, 13), int8]) */
}

def @func_4103() -> Tensor[(14, 9, 13), int16] {
  %410 = fn () -> Tensor[(14, 9, 13), int16] {
    %409 = @func_3579() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(200), float64]) */;
    %409.1
  };
  %410() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_6538() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
  @func_6536() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */
}

def @func_6673() -> (Tensor[(10, 20), float64],) {
  %413 = fn () -> (Tensor[(10, 20), float64],) {
    %411 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
    %412 = %411.2;
    (%412,)
  };
  %413() /* ty=(Tensor[(10, 20), float64],) */
}

def @func_7012() -> (Tensor[(14, 9, 13), int16],) {
  %416 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %414 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %415 = %414.0;
    (%415,)
  };
  %416() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_7047(%var_7045: Tensor[(252), uint32]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(6, 3, 14), uint32], Tensor[(252), uint32]) {
  @func_7044(%var_7045) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(6, 3, 14), uint32], Tensor[(252), uint32]) */
}

def @func_298(%var_297: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(1, 200), float32], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), bool]) {
  %440 = fn (%var_290: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(1, 200), float32], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), bool]) {
    %417 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %418 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 200), float64] */, dtype="float64") /* ty=Tensor[(1, 200), float64] */;
    %419 = reshape(%418, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), float64] */;
    %420 = @func_167(%419) /* ty=(Tensor[(5, 4, 10), float64],) */;
    %421 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %422 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 200), float64] */, dtype="float32") /* ty=Tensor[(1, 200), float32] */;
    %423 = %420.0;
    %424 = cast(%423, dtype="float64") /* ty=Tensor[(5, 4, 10), float64] */;
    %425 = reshape(%424, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), float64] */;
    %426 = @func_167(%425) /* ty=(Tensor[(5, 4, 10), float64],) */;
    %427 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %428 = %427.0;
    %429 = cast(%428, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
    %430 = cast(%var_290, dtype="bool") /* ty=Tensor[(14, 9, 13), bool] */;
    %431 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
    %432 = cast(%428, dtype="bool") /* ty=Tensor[(14, 9, 13), bool] */;
    %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %434 = %417.0;
    %435 = %421.0;
    %436 = atanh(%422) /* ty=Tensor[(1, 200), float32] */;
    %437 = %426.0;
    %438 = asinh(%429) /* ty=Tensor[(14, 9, 13), float64] */;
    %439 = less_equal(%432, %433) /* ty=Tensor[(14, 9, 13), bool] */;
    (%434, %423, %435, %436, %437, %438, %439)
  };
  %440(%var_297) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(1, 200), float32], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), bool]) */
}

def @func_4231(%var_4229: Tensor[(3, 6, 10), float32]) -> (Tensor[(3, 6, 10), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14), float64], Tensor[(50, 4), float64], Tensor[(336), float64], Tensor[(990), float32]) {
  @func_4228(%var_4229) /* ty=(Tensor[(3, 6, 10), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14), float64], Tensor[(50, 4), float64], Tensor[(336), float64], Tensor[(990), float32]) */
}

def @func_4435() -> (Tensor[(14, 9, 13), int16],) {
  %441 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %442 = %441.0;
  (%442,)
}

def @func_6235() -> Tensor[(14, 9, 13), int16] {
  %444 = fn () -> Tensor[(14, 9, 13), int16] {
    %443 = @func_4739() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16]) */;
    %443.1
  };
  %444() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_9163() -> Tensor[(14, 9, 13), int16] {
  %445 = fn () -> Tensor[(14, 9, 13), int16] {
    @func_2398() /* ty=Tensor[(14, 9, 13), int16] */
  };
  %445() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_2713() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) {
  %451 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) {
    %446 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
    %447 = cast(%446, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %448 = reshape(%447, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
    %449 = @func_1117(%448) /* ty=(Tensor[(14, 9, 13), int8],) */;
    %450 = %449.0;
    (%446, %450)
  };
  %451() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */
}

def @func_4504(%var_4502: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(200), float64]) {
  %452 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %453 = @func_2712() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */;
  %454 = cast(%var_4502, dtype="float64") /* ty=Tensor[(200), float64] */;
  %455 = reshape(%454, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %456 = @func_1506(%455) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8], Tensor[(200), float64], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %457 = %452.1;
  %458 = %453.1;
  %459 = %456.4;
  (%457, %458, %459, %var_4502)
}

def @func_9372() -> Tensor[(14, 9, 13), float64] {
  @func_9370() /* ty=Tensor[(14, 9, 13), float64] */
}

def @func_6460() -> (Tensor[(14, 9, 13), int16],) {
  %462 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %460 = @func_5399() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */;
    %461 = %460.0;
    (%461,)
  };
  %462() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_5626(%var_5625: Tensor[(50, 4), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(50, 4), float64], Tensor[(14), float64]) {
  %470 = fn (%var_5593: Tensor[(50, 4), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(50, 4), float64], Tensor[(14), float64]) {
    %463 = cast(%var_5593, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
    %464 = cast(meta[relay.Constant][20] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
    %465 = reshape(%463, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %466 = reshape(%464, newshape=[14]) /* ty=Tensor[(14), float64] */;
    %467 = @func_4906(%465, %466) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(200), float64], Tensor[(14, 9, 13), float32], Tensor[(14), float64], Tensor[(14, 9, 13), int16]) */;
    %468 = @func_5132() /* ty=Tensor[(14, 9, 13), int16] */;
    %469 = %467.3;
    (%468, %469, %var_5593, meta[relay.Constant][20] /* ty=Tensor[(14), float64] */)
  };
  %470(%var_5625) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(50, 4), float64], Tensor[(14), float64]) */
}

def @func_2273(%var_2271: float32, %var_2272: Tensor[(12, 15, 2), float32]) -> Tensor[(12, 15, 2), float32] {
  @func_2269(%var_2271, %var_2272) /* ty=Tensor[(12, 15, 2), float32] */
}

def @func_6074(%var_6072: Tensor[(9, 10, 11), float64], %var_6073: Tensor[(9, 10, 11), float64]) -> (Tensor[(9, 10, 11), float64],) {
  @func_6070(%var_6072, %var_6073) /* ty=(Tensor[(9, 10, 11), float64],) */
}

def @func_6056() -> Tensor[(14, 9, 13), int16] {
  @func_6054() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_7940() -> Tensor[(13, 8, 9), int32] {
  %471 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
  %471.0
}

def @func_6146(%var_6144: Tensor[(40), int8]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], int8, Tensor[(40), int8], Tensor[(520), int8]) {
  @func_6143(%var_6144) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], int8, Tensor[(40), int8], Tensor[(520), int8]) */
}

def @func_5383() -> Tensor[(14, 9, 13), int16] {
  %473 = fn () -> Tensor[(14, 9, 13), int16] {
    %472 = @func_3224() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %472.0
  };
  %473() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_2449(%var_2445: Tensor[(15, 12, 14), bool], %var_2446: Tensor[(15, 12, 14), bool], %var_2447: Tensor[(200), float64], %var_2448: float32) -> (Tensor[(15, 12, 14), bool], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(200), float32], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) {
  @func_2443(%var_2445, %var_2446, %var_2447, %var_2448) /* ty=(Tensor[(15, 12, 14), bool], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(200), float32], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) */
}

def @func_8085() -> (Tensor[(14, 9, 13), int16],) {
  @func_8083() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_1424() -> Tensor[(14, 9, 13), int16] {
  %474 = fn () -> Tensor[(14, 9, 13), int16] {
    @func_610() /* ty=Tensor[(14, 9, 13), int16] */
  };
  %474() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_10224(%var_10222: Tensor[(910), bool]) -> (Tensor[(14, 9, 13), int64], float32, Tensor[(14, 9, 13), int16], Tensor[(14, 5, 13), float32], Tensor[(910), bool]) {
  @func_10221(%var_10222) /* ty=(Tensor[(14, 9, 13), int64], float32, Tensor[(14, 9, 13), int16], Tensor[(14, 5, 13), float32], Tensor[(910), bool]) */
}

def @func_5399() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) {
  %475 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
  %476 = cast(%475, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %477 = reshape(%476, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %478 = @func_2609(%477) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) */;
  %479 = %478.5;
  (%475, %479)
}

def @func_2612(%var_2610: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) {
  @func_2609(%var_2610) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) */
}

def @func_3405() -> (Tensor[(14, 9, 13), int16],) {
  %482 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %480 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
    %481 = %480.0;
    (%481,)
  };
  %482() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_8895(%var_8894: Tensor[(11, 2, 13), float64]) -> Tensor[(11, 2, 13), float64] {
  %484 = fn (%var_8885: Tensor[(11, 2, 13), float64]) -> Tensor[(11, 2, 13), float64] {
    %483 = cast(%var_8885, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
    rsqrt(%483) /* ty=Tensor[(11, 2, 13), float64] */
  };
  %484(%var_8894) /* ty=Tensor[(11, 2, 13), float64] */
}

def @func_6748() -> Tensor[(14, 9, 13), int16] {
  @func_6746() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_8752() -> Tensor[(14, 9, 13), int16] {
  %486 = fn () -> Tensor[(14, 9, 13), int16] {
    %485 = @func_7695() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %485.0
  };
  %486() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_4657() -> (Tensor[(14, 9, 13), int16],) {
  %487 = @func_4639() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %488 = %487.1;
  (%488,)
}

def @func_215() -> (Tensor[(14, 9, 13), int16],) {
  @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_7558() -> Tensor[(14, 9, 13), float64] {
  @func_7556() /* ty=Tensor[(14, 9, 13), float64] */
}

def @func_2981(%var_2979: uint16, %var_2980: Tensor[(6, 12, 4), uint16]) -> (Tensor[(6, 12, 4), uint16],) {
  %492 = fn (%var_2963: uint16, %var_2964: Tensor[(6, 12, 4), uint16]) -> (Tensor[(6, 12, 4), uint16],) {
    %489 = cast(%var_2963, dtype="uint16") /* ty=uint16 */;
    %490 = cast(%var_2964, dtype="uint16") /* ty=Tensor[(6, 12, 4), uint16] */;
    %491 = logical_xor(%489, %490) /* ty=Tensor[(6, 12, 4), uint16] */;
    (%491,)
  };
  %492(%var_2979, %var_2980) /* ty=(Tensor[(6, 12, 4), uint16],) */
}

def @func_3543(%var_3499: Tensor[(14, 12, 2), float64], %var_3523: Tensor[(990), float32]) -> (Tensor[(14, 12, 2), float64], Tensor[(14, 1), float64], Tensor[(990), float32], Tensor[(50, 4), float64], Tensor[(7, 2), float64]) {
  %493 = cast(%var_3499, dtype="float64") /* ty=Tensor[(14, 12, 2), float64] */;
  %494 = cast(%var_3523, dtype="float32") /* ty=Tensor[(990), float32] */;
  %495 = cast(meta[relay.Constant][21] /* ty=Tensor[(50, 4), float64] */, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %496 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 2), float64] */;
  %497 = reshape(%494, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %498 = reshape(%495, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %499 = reshape(%496, newshape=[14, 1]) /* ty=Tensor[(14, 1), float64] */;
  %500 = @func_3179(%497, %498, %499) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(990), float32], Tensor[(200), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 1), float64]) */;
  %501 = log(%493) /* ty=Tensor[(14, 12, 2), float64] */;
  %502 = %500.5;
  (%501, %502, %var_3523, meta[relay.Constant][21] /* ty=Tensor[(50, 4), float64] */, meta[relay.Constant][22] /* ty=Tensor[(7, 2), float64] */)
}

def @func_4906(%var_4867: Tensor[(200), float64], %var_4875: Tensor[(14), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(200), float64], Tensor[(14, 9, 13), float32], Tensor[(14), float64], Tensor[(14, 9, 13), int16]) {
  %503 = @func_3404() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %504 = cast(%var_4867, dtype="float64") /* ty=Tensor[(200), float64] */;
  %505 = reshape(%504, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %506 = @func_1506(%505) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8], Tensor[(200), float64], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %507 = cast(%var_4875, dtype="float64") /* ty=Tensor[(14), float64] */;
  %508 = reshape(%507, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %509 = @func_4030(%508) /* ty=(Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(2, 7, 1), float64], Tensor[(14), float64]) */;
  %510 = @func_4657() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %511 = %503.0;
  %512 = %506.8;
  %513 = %509.0;
  %514 = %510.0;
  (%511, %512, %var_4867, %513, %var_4875, %514)
}

def @func_5279() -> Tensor[(14, 9, 13), int16] {
  @func_5277() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_4305() -> (Tensor[(?, 208), float32],) {
  %515 = @func_3484() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */;
  %516 = %515.2;
  %517 = cast(%516, dtype="float64") /* ty=Tensor[(1, 208), float64] */;
  %518 = rsqrt(%517) /* ty=Tensor[(1, 208), float64] */;
  %519 = cast(%516, dtype="float32") /* ty=Tensor[(1, 208), float32] */;
  %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(2), int32] */;
  %521 = cast(%518, dtype="float32") /* ty=Tensor[(1, 208), float32] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %523 = floor_divide(%521, %522) /* ty=Tensor[(?, 208), float32] */;
  (%523,)
}

def @func_7445(%var_7444: Tensor[(576), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(576), float32]) {
  %542 = fn (%var_7432: Tensor[(576), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(576), float32]) {
    %524 = @func_3484() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */;
    %525 = @func_3579() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(200), float64]) */;
    %526 = cast(%var_7432, dtype="float64") /* ty=Tensor[(576), float64] */;
    %527 = cast(%var_7432, dtype="float64") /* ty=Tensor[(576), float64] */;
    %528 = reshape(%526, newshape=[12, 16, 3]) /* ty=Tensor[(12, 16, 3), float64] */;
    %529 = reshape(%527, newshape=[12, 16, 3]) /* ty=Tensor[(12, 16, 3), float64] */;
    %530 = @func_6478(%528, %529) /* ty=(Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64]) */;
    %531 = %530.2;
    %532 = cast(%531, dtype="float32") /* ty=Tensor[(12, 16, 3), float32] */;
    %533 = shape_of(%var_7432, dtype="int32") /* ty=Tensor[(1), int32] */;
    %534 = cast(%var_7432, dtype="float32") /* ty=Tensor[(576), float32] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?), float32] */;
    %536 = @func_2398() /* ty=Tensor[(14, 9, 13), int16] */;
    %537 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
    %538 = @func_6599() /* ty=Tensor[(14, 9, 13), int16] */;
    %539 = %524.1;
    %540 = %525.1;
    %541 = maximum(%534, %535) /* ty=Tensor[(576), float32] */;
    (%536, %537, %538, %539, %540, %541)
  };
  %542(%var_7444) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(576), float32]) */
}

def @func_4051() -> Tensor[(14, 9, 13), int16] {
  %544 = fn () -> Tensor[(14, 9, 13), int16] {
    %543 = @func_1865() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) */;
    %543.1
  };
  %544() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_5469() -> (Tensor[(13, 8, 9), int32],) {
  %545 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
  %546 = sin(%545) /* ty=Tensor[(13, 8, 9), float64] */;
  %547 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 8, 9), float64] */, dtype="int32") /* ty=Tensor[(13, 8, 9), int32] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%546, dtype="int32") /* ty=Tensor[(13, 8, 9), int32] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %551 = subtract(%549, %550) /* ty=Tensor[(13, 8, 9), int32] */;
  (%551,)
}

def @func_4640() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %555 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
    %552 = @func_3689() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %553 = @func_2855() /* ty=Tensor[(14, 9, 13), int16] */;
    %554 = %552.0;
    (%553, %554)
  };
  %555() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_10081(%var_10079: Tensor[(14, 3, 8), int16], %var_10080: Tensor[(14, 3, 8), int16]) -> (Tensor[(14, 3, 8), float32], Tensor[(14, 3, 8), float32]) {
  %568 = fn (%var_10049: Tensor[(14, 3, 8), int16], %var_10050: Tensor[(14, 3, 8), int16]) -> (Tensor[(14, 3, 8), float32], Tensor[(14, 3, 8), float32]) {
    %556 = cast(%var_10049, dtype="float32") /* ty=Tensor[(14, 3, 8), float32] */;
    %557 = cast(%var_10050, dtype="int16") /* ty=Tensor[(14, 3, 8), int16] */;
    %558 = shape_of(%var_10049, dtype="int32") /* ty=Tensor[(3), int32] */;
    %559 = cast(%var_10049, dtype="int16") /* ty=Tensor[(14, 3, 8), int16] */;
    %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %561 = bitwise_xor(%559, %560) /* ty=Tensor[(14, 3, 8), int16] */;
    %562 = cast(%var_10049, dtype="float32") /* ty=Tensor[(14, 3, 8), float32] */;
    %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
    %564 = cast(%561, dtype="float32") /* ty=Tensor[(14, 3, 8), float32] */;
    %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %566 = tan(%556) /* ty=Tensor[(14, 3, 8), float32] */;
    %567 = mod(%564, %565) /* ty=Tensor[(14, 3, 8), float32] */;
    (%566, %567)
  };
  %568(%var_10079, %var_10080) /* ty=(Tensor[(14, 3, 8), float32], Tensor[(14, 3, 8), float32]) */
}

def @func_3374() -> (Tensor[(14, 9, 13), int16],) {
  @func_3372() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_8196(%var_8171: Tensor[(15, 16, 8), float32], %var_8172: Tensor[(15, 16, 8), float32]) -> (Tensor[(15, 16, 8), bool], Tensor[(14, 9, 13), int16], Tensor[(13, 8, 9), int32]) {
  %569 = cast(%var_8172, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %570 = shape_of(%var_8171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%var_8171, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %573 = @func_7776() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(200), float64]) */;
  %574 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
  %575 = less_equal(%571, %572) /* ty=Tensor[(15, 16, 8), bool] */;
  %576 = %573.1;
  %577 = %574.0;
  (%575, %576, %577)
}

def @func_4365() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(1820), int32], Tensor[(896), int8], Tensor[(4, 16, 14), float64]) {
  %578 = @func_2915() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %579 = cast(meta[relay.Constant][25] /* ty=Tensor[(1820), int32] */, dtype="int32") /* ty=Tensor[(1820), int32] */;
  %580 = reshape(%579, newshape=[182, 10]) /* ty=Tensor[(182, 10), int32] */;
  %581 = @func_3772(%580) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(10, 13, 14), bool], Tensor[(182, 10), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8]) */;
  %582 = cast(meta[relay.Constant][26] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %583 = reshape(%582, newshape=[4, 16, 14]) /* ty=Tensor[(4, 16, 14), int8] */;
  %584 = @func_3609(%583) /* ty=Tensor[(4, 16, 14), float32] */;
  %585 = cast(%584, dtype="float64") /* ty=Tensor[(4, 16, 14), float64] */;
  %586 = %578.0;
  %587 = %581.5;
  %588 = log10(%585) /* ty=Tensor[(4, 16, 14), float64] */;
  (%586, %587, meta[relay.Constant][25] /* ty=Tensor[(1820), int32] */, meta[relay.Constant][26] /* ty=Tensor[(896), int8] */, %588)
}

def @func_389(%var_369: Tensor[(2, 7, 1), float64], %var_377: Tensor[(1638), int16]) -> (Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) {
  %589 = cast(%var_377, dtype="int16") /* ty=Tensor[(1638), int16] */;
  %590 = reshape(%589, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %591 = @func_296(%590) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(1, 200), float32], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), bool]) */;
  %592 = cast(%var_369, dtype="float64") /* ty=Tensor[(2, 7, 1), float64] */;
  %593 = sin(%592) /* ty=Tensor[(2, 7, 1), float64] */;
  %594 = cast(%593, dtype="float64") /* ty=Tensor[(2, 7, 1), float64] */;
  %595 = %591.2;
  %596 = asin(%594) /* ty=Tensor[(2, 7, 1), float64] */;
  (%595, %var_377, %596)
}

def @func_5367() -> (Tensor[(14, 9, 13), int16],) {
  @func_5365() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_6746() -> Tensor[(14, 9, 13), int16] {
  @func_2398() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_6638(%var_6636: Tensor[(14, 5, 13), bool], %var_6637: Tensor[(14, 5, 13), bool]) -> Tensor[(14, 5, 13), float32] {
  %603 = fn (%var_6621: Tensor[(14, 5, 13), bool], %var_6622: Tensor[(14, 5, 13), bool]) -> Tensor[(14, 5, 13), float32] {
    %597 = cast(%var_6622, dtype="bool") /* ty=Tensor[(14, 5, 13), bool] */;
    %598 = shape_of(%var_6621, dtype="int32") /* ty=Tensor[(3), int32] */;
    %599 = cast(%var_6621, dtype="bool") /* ty=Tensor[(14, 5, 13), bool] */;
    %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %601 = logical_or(%599, %600) /* ty=Tensor[(14, 5, 13), bool] */;
    %602 = cast(%601, dtype="float32") /* ty=Tensor[(14, 5, 13), float32] */;
    cosh(%602) /* ty=Tensor[(14, 5, 13), float32] */
  };
  %603(%var_6636, %var_6637) /* ty=Tensor[(14, 5, 13), float32] */
}

def @func_1509(%var_1507: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8], Tensor[(200), float64], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) {
  @func_1506(%var_1507) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8], Tensor[(200), float64], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */
}

def @func_3485() -> (Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) {
  %611 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) {
    %604 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 208), float64] */, dtype="float64") /* ty=Tensor[(1, 208), float64] */;
    %605 = reshape(%604, newshape=[208]) /* ty=Tensor[(208), float64] */;
    %606 = @func_876(%605) /* ty=(Tensor[(14, 9, 13), bool], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(208), float64]) */;
    %607 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 208), float64] */, dtype="float64") /* ty=Tensor[(1, 208), float64] */;
    %608 = @func_2855() /* ty=Tensor[(14, 9, 13), int16] */;
    %609 = %606.1;
    %610 = acos(%607) /* ty=Tensor[(1, 208), float64] */;
    (%608, %609, %610)
  };
  %611() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */
}

def @func_7229() -> (Tensor[(14, 9, 13), int16],) {
  %613 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %612 = @func_6234() /* ty=Tensor[(14, 9, 13), int16] */;
    (%612,)
  };
  %613() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_9095() -> (Tensor[(14, 9, 13), int16],) {
  %614 = @func_6617() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %615 = %614.0;
  (%615,)
}

def @func_7608() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(14, 9, 13), int16]) {
  @func_7606() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(14, 9, 13), int16]) */
}

def @func_8564() -> (Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64]) {
  %616 = @func_2888() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %617 = @func_7776() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(200), float64]) */;
  %618 = %617.2;
  %619 = cast(meta[relay.Constant][28] /* ty=Tensor[(50, 4), float64] */, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(2), int32] */;
  %621 = cast(%618, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %623 = @func_7212() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(360), float32]) */;
  %624 = cast(meta[relay.Constant][28] /* ty=Tensor[(50, 4), float64] */, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %625 = %616.0;
  %626 = floor_divide(%621, %622) /* ty=Tensor[(50, 4), float64] */;
  %627 = @func_6175() /* ty=Tensor[(14, 9, 13), float64] */;
  %628 = %623.1;
  %629 = log2(%624) /* ty=Tensor[(50, 4), float64] */;
  (%625, %626, %627, %628, %629)
}

def @func_9417() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %630 = @func_7695() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %631 = @func_6054() /* ty=Tensor[(14, 9, 13), int16] */;
  %632 = %630.0;
  (%631, %632)
}

def @func_6070(%var_6065: Tensor[(9, 10, 11), float64], %var_6066: Tensor[(9, 10, 11), float64]) -> (Tensor[(9, 10, 11), float64],) {
  %633 = cast(%var_6066, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  %634 = shape_of(%var_6065, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%var_6065, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %637 = divide(%635, %636) /* ty=Tensor[(9, 10, 11), float64] */;
  (%637,)
}

def @func_8707(%var_8706: Tensor[(576), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(576), float32], Tensor[(14, 9, 13), float64], Tensor[(576), float32]) {
  %649 = fn (%var_8672: Tensor[(576), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(576), float32], Tensor[(14, 9, 13), float64], Tensor[(576), float32]) {
    %638 = @func_2326() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
    %639 = cast(%var_8672, dtype="float64") /* ty=Tensor[(576), float64] */;
    %640 = reshape(%639, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %641 = @func_7443(%640) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(576), float32]) */;
    %642 = @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
    %643 = cast(%var_8672, dtype="float32") /* ty=Tensor[(576), float32] */;
    %644 = @func_2398() /* ty=Tensor[(14, 9, 13), int16] */;
    %645 = %638.0;
    %646 = %641.5;
    %647 = %642.1;
    %648 = asinh(%643) /* ty=Tensor[(576), float32] */;
    (%644, %645, %646, %647, %648)
  };
  %649(%var_8706) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(576), float32], Tensor[(14, 9, 13), float64], Tensor[(576), float32]) */
}

def @func_2131(%var_2130: Tensor[(7, 3, 15), float64]) -> (Tensor[(7, 3, 15), uint64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(14, 9, 13), int16]) {
  %663 = fn (%var_2087: Tensor[(7, 3, 15), float64]) -> (Tensor[(7, 3, 15), uint64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(14, 9, 13), int16]) {
    %650 = cast(%var_2087, dtype="float64") /* ty=Tensor[(7, 3, 15), float64] */;
    %651 = exp(%650) /* ty=Tensor[(7, 3, 15), float64] */;
    %652 = cast(%651, dtype="uint64") /* ty=Tensor[(7, 3, 15), uint64] */;
    %653 = shape_of(%var_2087, dtype="int32") /* ty=Tensor[(3), int32] */;
    %654 = cast(%var_2087, dtype="uint64") /* ty=Tensor[(7, 3, 15), uint64] */;
    %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %656 = @func_1865() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) */;
    %657 = %656.0;
    %658 = cast(%657, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %659 = reshape(%658, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
    %660 = minimum(%654, %655) /* ty=Tensor[(7, 3, 15), uint64] */;
    %661 = @func_1322(%659) /* ty=Tensor[(14, 9, 13), uint8] */;
    %662 = @func_1423() /* ty=Tensor[(14, 9, 13), int16] */;
    (%660, %657, %661, %662)
  };
  %663(%var_2130) /* ty=(Tensor[(7, 3, 15), uint64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(14, 9, 13), int16]) */
}

def @func_3579() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(200), float64]) {
  %664 = @func_1975() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %665 = cast(meta[relay.Constant][29] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %666 = reshape(%665, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %667 = @func_2069(%666) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
  %668 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
  %669 = %664.0;
  %670 = %667.4;
  (%668, %669, %670, meta[relay.Constant][29] /* ty=Tensor[(200), float64] */)
}

def @func_6400() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %675 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
    %671 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %672 = @func_2888() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %673 = %671.0;
    %674 = %672.0;
    (%673, %674)
  };
  %675() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_6264() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %678 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
    %676 = @func_5443() /* ty=Tensor[(14, 9, 13), int16] */;
    %677 = @func_6255() /* ty=Tensor[(14, 9, 13), int16] */;
    (%676, %677)
  };
  %678() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_6662() -> (Tensor[(14, 9, 13), int16],) {
  @func_6660() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_393(%var_391: Tensor[(2, 7, 1), float64], %var_392: Tensor[(1638), int16]) -> (Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) {
  @func_389(%var_391, %var_392) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */
}

def @func_7213() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(360), float32]) {
  %687 = fn () -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(360), float32]) {
    %679 = @func_1193() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
    %680 = @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
    %681 = cast(meta[relay.Constant][30] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %682 = reshape(%681, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %683 = @func_6014(%682) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32]) */;
    %684 = %679.1;
    %685 = %680.0;
    %686 = %683.3;
    (%684, %685, %686, meta[relay.Constant][30] /* ty=Tensor[(360), float32] */)
  };
  %687() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_5904() -> Tensor[(5, 1, 16), float32] {
  @func_5902() /* ty=Tensor[(5, 1, 16), float32] */
}

def @func_2609(%var_2564: Tensor[(14, 9, 13), int16]) -> (Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) {
  %688 = @func_1423() /* ty=Tensor[(14, 9, 13), int16] */;
  %689 = cast(%var_2564, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%688, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %693 = cast(0.173057f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %694 = cast(meta[relay.Constant][31] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %695 = reshape(%693, newshape=[]) /* ty=float32 */;
  %696 = reshape(%694, newshape=[12, 15, 2]) /* ty=Tensor[(12, 15, 2), float32] */;
  %697 = @func_1423() /* ty=Tensor[(14, 9, 13), int16] */;
  %698 = cast(%697, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %699 = reshape(%698, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %700 = @func_1117(%699) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %701 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %702 = floor_divide(%691, %692) /* ty=Tensor[(14, 9, 13), float64] */;
  %703 = @func_2269(%695, %696) /* ty=Tensor[(12, 15, 2), float32] */;
  %704 = %700.0;
  %705 = %701.0;
  (%702, %703, 0.173057f /* ty=float32 */, meta[relay.Constant][31] /* ty=Tensor[(360), float32] */, %697, %704, %705)
}

def @func_6660() -> (Tensor[(14, 9, 13), int16],) {
  %706 = @func_5132() /* ty=Tensor[(14, 9, 13), int16] */;
  (%706,)
}

def @func_9728() -> Tensor[(14, 9, 13), int16] {
  %707 = fn () -> Tensor[(14, 9, 13), int16] {
    @func_5132() /* ty=Tensor[(14, 9, 13), int16] */
  };
  %707() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_6907() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  @func_6905() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_3348(%var_3347: float32) -> (Tensor[(16, 10, 10), float32], Tensor[(14, 9, 13), bool]) {
  %717 = fn (%var_3336: float32) -> (Tensor[(16, 10, 10), float32], Tensor[(14, 9, 13), bool]) {
    %708 = cast(%var_3336, dtype="float32") /* ty=float32 */;
    %709 = reshape(%708, newshape=[]) /* ty=float32 */;
    %710 = @func_2495(%709) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(14, 1), float32], float32, Tensor[(14), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
    %711 = @func_2888() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %712 = %711.0;
    %713 = cast(%712, dtype="bool") /* ty=Tensor[(14, 9, 13), bool] */;
    %714 = cast(%var_3336, dtype="bool") /* ty=bool */;
    %715 = %710.0;
    %716 = less(%713, %714) /* ty=Tensor[(14, 9, 13), bool] */;
    (%715, %716)
  };
  %717(%var_3347) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(14, 9, 13), bool]) */
}

def @func_6978(%var_6976: Tensor[(16, 208), float32]) -> (Tensor[(16, 208), bool], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(16, 208), int64], Tensor[(7, 12, 16), float64], Tensor[(1344), float64], Tensor[(?, 208), float64]) {
  @func_6975(%var_6976) /* ty=(Tensor[(16, 208), bool], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(16, 208), int64], Tensor[(7, 12, 16), float64], Tensor[(1344), float64], Tensor[(?, 208), float64]) */
}

def @func_4437() -> (Tensor[(14, 9, 13), int16],) {
  @func_4435() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_5186(%var_5185: Tensor[(1638), int16]) -> (Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16], Tensor[(1638), int16]) {
  %724 = fn (%var_5177: Tensor[(1638), int16]) -> (Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16], Tensor[(1638), int16]) {
    %718 = @func_4739() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16]) */;
    %719 = cast(%var_5177, dtype="int16") /* ty=Tensor[(1638), int16] */;
    %720 = reshape(%719, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
    %721 = @func_2609(%720) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16]) */;
    %722 = %718.0;
    %723 = %721.4;
    (%722, %723, %var_5177)
  };
  %724(%var_5185) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16], Tensor[(1638), int16]) */
}

def @func_6601() -> Tensor[(14, 9, 13), int16] {
  @func_6599() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_5902() -> Tensor[(5, 1, 16), float32] {
  %725 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 16), float32] */;
  tan(%725) /* ty=Tensor[(5, 1, 16), float32] */
}

def @func_9047() -> Tensor[(14, 9, 13), int16] {
  %726 = @func_7336() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %726.0
}

def @func_2327() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(200), float64]) {
  %737 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(200), float64]) {
    %727 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %728 = %727.0;
    %729 = cast(%728, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %730 = reshape(%729, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
    %731 = @func_682(%730) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
    %732 = cast(meta[relay.Constant][33] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
    %733 = reshape(%732, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %734 = @func_2069(%733) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
    %735 = %731.1;
    %736 = %734.5;
    (%728, %735, %736, meta[relay.Constant][33] /* ty=Tensor[(200), float64] */)
  };
  %737() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(200), float64], Tensor[(200), float64]) */
}

def @func_4721() -> (Tensor[(14, 9, 13), int16],) {
  %740 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %738 = @func_3579() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(200), float64]) */;
    %739 = %738.1;
    (%739,)
  };
  %740() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_5443() -> Tensor[(14, 9, 13), int16] {
  %741 = @func_3689() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %741.0
}

def @func_2269(%var_2257: float32, %var_2258: Tensor[(12, 15, 2), float32]) -> Tensor[(12, 15, 2), float32] {
  %742 = cast(%var_2257, dtype="float32") /* ty=float32 */;
  %743 = cast(%var_2258, dtype="float32") /* ty=Tensor[(12, 15, 2), float32] */;
  floor_mod(%742, %743) /* ty=Tensor[(12, 15, 2), float32] */
}

def @func_7896() -> (Tensor[(360), float32], Tensor[(14, 9, 13), int16]) {
  %744 = @func_7212() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(360), float32], Tensor[(360), float32]) */;
  %745 = %744.3;
  %746 = @func_6599() /* ty=Tensor[(14, 9, 13), int16] */;
  (%745, %746)
}

def @func_6156() -> (Tensor[(14, 9, 13), int8],) {
  %747 = @func_2712() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */;
  %748 = %747.1;
  (%748,)
}

def @func_169(%var_168: Tensor[(5, 4, 10), float64]) -> (Tensor[(5, 4, 10), float64],) {
  %751 = fn (%var_157: Tensor[(5, 4, 10), float64]) -> (Tensor[(5, 4, 10), float64],) {
    %749 = cast(%var_157, dtype="float64") /* ty=Tensor[(5, 4, 10), float64] */;
    %750 = acos(%749) /* ty=Tensor[(5, 4, 10), float64] */;
    (%750,)
  };
  %751(%var_168) /* ty=(Tensor[(5, 4, 10), float64],) */
}

def @func_610() -> Tensor[(14, 9, 13), int16] {
  %752 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %752.0
}

def @func_9579() -> Tensor[(14, 9, 13), int16] {
  %753 = fn () -> Tensor[(14, 9, 13), int16] {
    @func_4102() /* ty=Tensor[(14, 9, 13), int16] */
  };
  %753() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_1194() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
  %760 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
    %754 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %755 = %754.0;
    %756 = cast(%755, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %757 = reshape(%756, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
    %758 = @func_682(%757) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
    %759 = %758.0;
    (%755, %759)
  };
  %760() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */
}

def @func_9319() -> (Tensor[(14, 9, 13), float64], Tensor[(8, 6, 7), float32]) {
  %766 = fn () -> (Tensor[(14, 9, 13), float64], Tensor[(8, 6, 7), float32]) {
    %761 = @func_7556() /* ty=Tensor[(14, 9, 13), float64] */;
    %762 = cast(%761, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %763 = reshape(%762, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
    %764 = @func_5184(%763) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(14, 9, 13), int16], Tensor[(1638), int16]) */;
    %765 = %764.0;
    (%761, %765)
  };
  %766() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(8, 6, 7), float32]) */
}

def @func_6709(%var_6707: Tensor[(11, 10, 5), float64], %var_6708: Tensor[(11, 10, 5), float64]) -> (Tensor[(11, 10, 5), float64], Tensor[(11, 10, 5), float64]) {
  @func_6705(%var_6707, %var_6708) /* ty=(Tensor[(11, 10, 5), float64], Tensor[(11, 10, 5), float64]) */
}

def @func_10456() -> (Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %773 = fn () -> (Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
    %767 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
    %768 = @func_9393() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %769 = @func_7850() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %770 = %767.0;
    %771 = %768.0;
    %772 = %769.0;
    (%770, %771, %772)
  };
  %773() /* ty=(Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_6370() -> Tensor[(14, 9, 13), int16] {
  %775 = fn () -> Tensor[(14, 9, 13), int16] {
    %774 = @func_5365() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %774.0
  };
  %775() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_2698(%var_2697: float32) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(14, 9, 13), int16], float32) {
  %786 = fn (%var_2686: float32) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(14, 9, 13), int16], float32) {
    %776 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %777 = cast(meta[relay.Constant][34] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
    %778 = reshape(%777, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %779 = @func_2069(%778) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
    %780 = cast(%var_2686, dtype="float32") /* ty=float32 */;
    %781 = reshape(%780, newshape=[]) /* ty=float32 */;
    %782 = @func_2495(%781) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(14, 1), float32], float32, Tensor[(14), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
    %783 = %776.0;
    %784 = %779.0;
    %785 = %782.5;
    (%783, %784, meta[relay.Constant][34] /* ty=Tensor[(200), float64] */, %785, %var_2686)
  };
  %786(%var_2697) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(14, 9, 13), int16], float32) */
}

def @func_6054() -> Tensor[(14, 9, 13), int16] {
  @func_5277() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_5365() -> (Tensor[(14, 9, 13), int16],) {
  %787 = @func_4720() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %788 = %787.0;
  (%788,)
}

def @func_7777() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(200), float64]) {
  %797 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(200), float64]) {
    %789 = @func_3689() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %790 = @func_3484() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */;
    %791 = cast(meta[relay.Constant][35] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
    %792 = reshape(%791, newshape=[50, 4]) /* ty=Tensor[(50, 4), float64] */;
    %793 = @func_5624(%792) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(50, 4), float64], Tensor[(14), float64]) */;
    %794 = %789.0;
    %795 = %790.0;
    %796 = %793.2;
    (%794, %795, %796, meta[relay.Constant][35] /* ty=Tensor[(200), float64] */)
  };
  %797() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(50, 4), float64], Tensor[(200), float64]) */
}

def @func_8929() -> (Tensor[(14, 9, 13), int16],) {
  %800 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %798 = @func_7011() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %799 = %798.0;
    (%799,)
  };
  %800() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_3225() -> (Tensor[(14, 9, 13), int16],) {
  %802 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %801 = @func_2398() /* ty=Tensor[(14, 9, 13), int16] */;
    (%801,)
  };
  %802() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_5715(%var_5713: Tensor[(180), float32]) -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(180), float32]) {
  @func_5712(%var_5713) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(180), float32]) */
}

def @func_6143(%var_6118: Tensor[(40), int8]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], int8, Tensor[(40), int8], Tensor[(520), int8]) {
  %803 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %804 = cast(meta[relay.Constant][36] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %805 = cast(%var_6118, dtype="int8") /* ty=Tensor[(40), int8] */;
  %806 = cast(meta[relay.Constant][37] /* ty=Tensor[(520), int8] */, dtype="int8") /* ty=Tensor[(520), int8] */;
  %807 = reshape(%804, newshape=[]) /* ty=int8 */;
  %808 = reshape(%805, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), int8] */;
  %809 = reshape(%806, newshape=[4, 10, 13]) /* ty=Tensor[(4, 10, 13), int8] */;
  %810 = @func_5748(%807, %808, %809) /* ty=(Tensor[(4, 10, 1), int8], Tensor[(4, 10, 13), uint64], Tensor[(14, 9, 13), float64]) */;
  %811 = @func_2855() /* ty=Tensor[(14, 9, 13), int16] */;
  %812 = %803.0;
  %813 = %810.2;
  (%811, %812, %813, meta[relay.Constant][36] /* ty=int8 */, %var_6118, meta[relay.Constant][37] /* ty=Tensor[(520), int8] */)
}

def @func_3987() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %814 = @func_1193() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %815 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %816 = %814.0;
  %817 = %815.0;
  (%816, %817)
}

def @func_7327() -> (Tensor[(14, 9, 13), int16],) {
  @func_7325() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_5218() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
  @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */
}

def @func_5132() -> Tensor[(14, 9, 13), int16] {
  %818 = @func_3404() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %818.0
}

def @func_2819() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) {
  @func_2817() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) */
}

def @func_8993(%var_8984: Tensor[(6, 208), float32]) -> (Tensor[(6, 208), float32],) {
  %819 = @func_7282() /* ty=(Tensor[(?, 208), float32], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), float64]) */;
  %820 = %819.0;
  %821 = cast(%820, dtype="float32") /* ty=Tensor[(?, 208), float32] */;
  %822 = cast(%var_8984, dtype="float32") /* ty=Tensor[(6, 208), float32] */;
  %823 = add(%821, %822) /* ty=Tensor[(6, 208), float32] */;
  (%823,)
}

def @func_4925() -> (Tensor[(14, 9, 13), int16],) {
  %826 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %824 = @func_2817() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) */;
    %825 = %824.4;
    (%825,)
  };
  %826() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_10289() -> (Tensor[(14, 9, 13), int16],) {
  %827 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
  %828 = %827.1;
  (%828,)
}

def @func_4307() -> (Tensor[(?, 208), float32],) {
  @func_4305() /* ty=(Tensor[(?, 208), float32],) */
}

def @func_9266() -> Tensor[(14, 9, 13), int16] {
  @func_9264() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_9498() -> Tensor[(13, 8, 9), float64] {
  %832 = fn () -> Tensor[(13, 8, 9), float64] {
    %829 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
    %830 = %829.0;
    %831 = cast(%830, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
    atan(%831) /* ty=Tensor[(13, 8, 9), float64] */
  };
  %832() /* ty=Tensor[(13, 8, 9), float64] */
}

def @func_6478(%var_6463: Tensor[(12, 16, 3), float64], %var_6464: Tensor[(12, 16, 3), float64]) -> (Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64], Tensor[(12, 16, 3), float64]) {
  %833 = cast(%var_6464, dtype="float64") /* ty=Tensor[(12, 16, 3), float64] */;
  %834 = shape_of(%var_6463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%var_6463, dtype="float64") /* ty=Tensor[(12, 16, 3), float64] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %837 = cast(%var_6464, dtype="float64") /* ty=Tensor[(12, 16, 3), float64] */;
  %838 = shape_of(%var_6463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%var_6463, dtype="float64") /* ty=Tensor[(12, 16, 3), float64] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %841 = cast(%var_6463, dtype="float64") /* ty=Tensor[(12, 16, 3), float64] */;
  %842 = floor_mod(%835, %836) /* ty=Tensor[(12, 16, 3), float64] */;
  %843 = power(%839, %840) /* ty=Tensor[(12, 16, 3), float64] */;
  %844 = exp(%841) /* ty=Tensor[(12, 16, 3), float64] */;
  (%842, %843, %844)
}

def @func_9628() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %849 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
    %845 = @func_2915() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %846 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
    %847 = %845.0;
    %848 = %846.1;
    (%847, %848)
  };
  %849() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */
}

def @func_1716(%var_1715: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int64], Tensor[(200), float64], Tensor[(14, 9, 13), float64]) {
  %864 = fn (%var_1702: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int64], Tensor[(200), float64], Tensor[(14, 9, 13), float64]) {
    %850 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
    %851 = cast(%850, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %852 = reshape(%851, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
    %853 = @func_1322(%852) /* ty=Tensor[(14, 9, 13), uint8] */;
    %854 = cast(%853, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
    %855 = cast(%var_1702, dtype="float64") /* ty=Tensor[(200), float64] */;
    %856 = reshape(%855, newshape=[200, 1]) /* ty=Tensor[(200, 1), float64] */;
    %857 = @func_1071(%856) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) */;
    %858 = cast(%853, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
    %859 = reshape(%858, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
    %860 = @func_682(%859) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
    %861 = exp(%854) /* ty=Tensor[(14, 9, 13), float64] */;
    %862 = %857.9;
    %863 = %860.1;
    (%850, %861, %862, %var_1702, %863)
  };
  %864(%var_1715) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int64], Tensor[(200), float64], Tensor[(14, 9, 13), float64]) */
}

def @func_7987() -> (Tensor[(14, 9, 13), int16], float32, Tensor[(13, 8, 9), int32]) {
  %871 = fn () -> (Tensor[(14, 9, 13), int16], float32, Tensor[(13, 8, 9), int32]) {
    %865 = @func_6617() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %866 = @func_2817() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) */;
    %867 = @func_7282() /* ty=(Tensor[(?, 208), float32], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), float64]) */;
    %868 = %865.0;
    %869 = %866.2;
    %870 = %867.1;
    (%868, %869, %870)
  };
  %871() /* ty=(Tensor[(14, 9, 13), int16], float32, Tensor[(13, 8, 9), int32]) */
}

def @func_2554(%var_2553: Tensor[(10, 20), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(208), float64], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16]) {
  %882 = fn (%var_2535: Tensor[(10, 20), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(208), float64], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16]) {
    %872 = @func_1975() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
    %873 = %872.1;
    %874 = cast(%873, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
    %875 = cast(%var_2535, dtype="float64") /* ty=Tensor[(10, 20), float64] */;
    %876 = reshape(%875, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %877 = @func_2069(%876) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
    %878 = @func_1423() /* ty=Tensor[(14, 9, 13), int16] */;
    %879 = tan(%874) /* ty=Tensor[(14, 9, 13), float64] */;
    %880 = %877.3;
    %881 = @func_2231() /* ty=Tensor[(14, 9, 13), int16] */;
    (%878, %879, %880, %var_2535, %881)
  };
  %882(%var_2553) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(208), float64], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16]) */
}

def @func_7696() -> (Tensor[(14, 9, 13), int16],) {
  %885 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %883 = @func_4720() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %884 = %883.0;
    (%884,)
  };
  %885() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_7851() -> (Tensor[(14, 9, 13), int16],) {
  %887 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %886 = @func_4102() /* ty=Tensor[(14, 9, 13), int16] */;
    (%886,)
  };
  %887() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_6165(%var_6159: Tensor[(7, 12, 16), float64]) -> Tensor[(7, 12, 16), float64] {
  %888 = cast(%var_6159, dtype="float64") /* ty=Tensor[(7, 12, 16), float64] */;
  atanh(%888) /* ty=Tensor[(7, 12, 16), float64] */
}

def @func_9097() -> (Tensor[(14, 9, 13), int16],) {
  @func_9095() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_2383(%var_2381: Tensor[(11, 6, 15), float32], %var_2382: Tensor[(200), float64]) -> (Tensor[(11, 6, 15), float64], Tensor[(14, 9, 13), float32], Tensor[(200), float64]) {
  @func_2379(%var_2381, %var_2382) /* ty=(Tensor[(11, 6, 15), float64], Tensor[(14, 9, 13), float32], Tensor[(200), float64]) */
}

def @func_1866() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) {
  %896 = fn () -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) {
    %889 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %890 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %891 = %890.0;
    %892 = cast(%891, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
    %893 = %889.0;
    %894 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
    %895 = rsqrt(%892) /* ty=Tensor[(14, 9, 13), float32] */;
    (%893, %894, %895)
  };
  %896() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) */
}

def @func_3775(%var_3773: Tensor[(182, 10), int32]) -> (Tensor[(14, 9, 13), int16], Tensor[(10, 13, 14), bool], Tensor[(182, 10), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8]) {
  @func_3772(%var_3773) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(10, 13, 14), bool], Tensor[(182, 10), int32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8]) */
}

def @func_4507(%var_4505: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(200), float64]) {
  @func_4504(%var_4505) /* ty=(Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(200), float64]) */
}

def @func_3676(%var_3673: int16, %var_3674: Tensor[(9, 15, 11), int16], %var_3675: Tensor[(330, 3), float32]) -> (Tensor[(9, 15, 11), int16], Tensor[(990), float32], Tensor[(336), float64], Tensor[(330, 3), float32]) {
  %906 = fn (%var_3643: int16, %var_3644: Tensor[(9, 15, 11), int16], %var_3666: Tensor[(330, 3), float32]) -> (Tensor[(9, 15, 11), int16], Tensor[(990), float32], Tensor[(336), float64], Tensor[(330, 3), float32]) {
    %897 = cast(%var_3643, dtype="int16") /* ty=int16 */;
    %898 = cast(%var_3644, dtype="int16") /* ty=Tensor[(9, 15, 11), int16] */;
    %899 = cast(meta[relay.Constant][38] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %900 = cast(%var_3666, dtype="float32") /* ty=Tensor[(330, 3), float32] */;
    %901 = reshape(%899, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), float64] */;
    %902 = reshape(%900, newshape=[990]) /* ty=Tensor[(990), float32] */;
    %903 = @func_3543(%901, %902) /* ty=(Tensor[(14, 12, 2), float64], Tensor[(14, 1), float64], Tensor[(990), float32], Tensor[(50, 4), float64], Tensor[(7, 2), float64]) */;
    %904 = minimum(%897, %898) /* ty=Tensor[(9, 15, 11), int16] */;
    %905 = %903.2;
    (%904, %905, meta[relay.Constant][38] /* ty=Tensor[(336), float64] */, %var_3666)
  };
  %906(%var_3673, %var_3674, %var_3675) /* ty=(Tensor[(9, 15, 11), int16], Tensor[(990), float32], Tensor[(336), float64], Tensor[(330, 3), float32]) */
}

def @func_213() -> (Tensor[(14, 9, 13), int16],) {
  %907 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 9, 13), float32] */, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %908 = sin(%907) /* ty=Tensor[(14, 9, 13), float32] */;
  %909 = cast(%908, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %910 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(14, 9, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 9, 13), float32] */, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %913 = add(%911, %912) /* ty=Tensor[(14, 9, 13), int16] */;
  (%913,)
}

def @func_2817() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) {
  %914 = @func_2231() /* ty=Tensor[(14, 9, 13), int16] */;
  %915 = cast(%914, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %916 = cast(-2.97386f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %917 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
  %918 = reshape(%916, newshape=[]) /* ty=float32 */;
  %919 = reshape(%917, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
  %920 = @func_1903(%918, %919) /* ty=(Tensor[(14, 1), float32],) */;
  %921 = atan(%915) /* ty=Tensor[(14, 9, 13), float64] */;
  %922 = %920.0;
  %923 = @func_2398() /* ty=Tensor[(14, 9, 13), int16] */;
  (%921, %922, -2.97386f /* ty=float32 */, meta[relay.Constant][40] /* ty=Tensor[(1, 14), float32] */, %923)
}

def @func_2495(%var_2467: float32) -> (Tensor[(16, 10, 10), float32], Tensor[(14, 1), float32], float32, Tensor[(14), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %924 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 10, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 10), float32] */;
  %925 = cast(%var_2467, dtype="float32") /* ty=float32 */;
  %926 = cast(meta[relay.Constant][42] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %927 = reshape(%925, newshape=[]) /* ty=float32 */;
  %928 = reshape(%926, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
  %929 = @func_1903(%927, %928) /* ty=(Tensor[(14, 1), float32],) */;
  %930 = @func_1865() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32]) */;
  %931 = @func_748() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %932 = cosh(%924) /* ty=Tensor[(16, 10, 10), float32] */;
  %933 = %929.0;
  %934 = %930.0;
  %935 = %931.0;
  (%932, %933, %var_2467, meta[relay.Constant][42] /* ty=Tensor[(14), float32] */, %934, %935)
}

def @func_6412() -> (Tensor[(14, 9, 13), int8],) {
  %938 = fn () -> (Tensor[(14, 9, 13), int8],) {
    %936 = @func_6156() /* ty=(Tensor[(14, 9, 13), int8],) */;
    %937 = %936.0;
    (%937,)
  };
  %938() /* ty=(Tensor[(14, 9, 13), int8],) */
}

def @func_4183(%var_4177: Tensor[(14), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(2, 7, 1), float64], Tensor[(14), float64]) {
  %939 = @func_2915() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %940 = %939.0;
  %941 = cast(%940, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %942 = reshape(%941, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %943 = @func_1117(%942) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %944 = %943.0;
  %945 = cast(%944, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %946 = cast(%var_4177, dtype="float64") /* ty=Tensor[(14), float64] */;
  %947 = cast(%944, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %948 = reshape(%946, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
  %949 = reshape(%947, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
  %950 = @func_389(%948, %949) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
  %951 = log(%945) /* ty=Tensor[(14, 9, 13), float32] */;
  %952 = %950.2;
  (%940, %951, %952, %var_4177)
}

def @func_5445() -> Tensor[(14, 9, 13), int16] {
  @func_5443() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_3612(%var_3610: Tensor[(4, 16, 14), int8]) -> Tensor[(4, 16, 14), float32] {
  @func_3609(%var_3610) /* ty=Tensor[(4, 16, 14), float32] */
}

def @func_9282(%var_9281: Tensor[(5, 6, 5), int16]) -> (Tensor[(5, 6, 5), int16],) {
  %958 = fn (%var_9268: Tensor[(5, 6, 5), int16]) -> (Tensor[(5, 6, 5), int16],) {
    %953 = cast(%var_9268, dtype="int16") /* ty=Tensor[(5, 6, 5), int16] */;
    %954 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(5, 6, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %955 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 6, 5), int16] */, dtype="int16") /* ty=Tensor[(5, 6, 5), int16] */;
    %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %957 = right_shift(%955, %956) /* ty=Tensor[(5, 6, 5), int16] */;
    (%957,)
  };
  %958(%var_9281) /* ty=(Tensor[(5, 6, 5), int16],) */
}

def @func_6975(%var_6915: Tensor[(16, 208), float32]) -> (Tensor[(16, 208), bool], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), int16], Tensor[(200), float64], Tensor[(16, 208), int64], Tensor[(7, 12, 16), float64], Tensor[(1344), float64], Tensor[(?, 208), float64]) {
  %959 = @func_4305() /* ty=(Tensor[(?, 208), float32],) */;
  %960 = %959.0;
  %961 = cast(%960, dtype="bool") /* ty=Tensor[(?, 208), bool] */;
  %962 = cast(%var_6915, dtype="bool") /* ty=Tensor[(16, 208), bool] */;
  %963 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
  %964 = cast(meta[relay.Constant][44] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %965 = reshape(%964, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %966 = @func_2069(%965) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), bool], Tensor[(208), float64], Tensor[(200), float64], Tensor[(200), float64]) */;
  %967 = cast(%960, dtype="int64") /* ty=Tensor[(?, 208), int64] */;
  %968 = cast(%var_6915, dtype="int64") /* ty=Tensor[(16, 208), int64] */;
  %969 = cast(meta[relay.Constant][45] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %970 = reshape(%969, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), float64] */;
  %971 = cast(%960, dtype="float64") /* ty=Tensor[(?, 208), float64] */;
  %972 = greater(%961, %962) /* ty=Tensor[(16, 208), bool] */;
  %973 = %963.0;
  %974 = %966.0;
  %975 = bitwise_and(%967, %968) /* ty=Tensor[(16, 208), int64] */;
  %976 = @func_6165(%970) /* ty=Tensor[(7, 12, 16), float64] */;
  %977 = log(%971) /* ty=Tensor[(?, 208), float64] */;
  (%972, %973, %974, meta[relay.Constant][44] /* ty=Tensor[(200), float64] */, %975, %976, meta[relay.Constant][45] /* ty=Tensor[(1344), float64] */, %977)
}

def @func_2398() -> Tensor[(14, 9, 13), int16] {
  %978 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %978.0
}

def @func_5567(%var_5565: Tensor[(5, 13, 15), int64], %var_5566: Tensor[(5, 13, 15), int64]) -> (Tensor[(5, 13, 15), int64], Tensor[(?, 208), float32], Tensor[(208), float64], Tensor[(105, 3), float64]) {
  %990 = fn (%var_5518: Tensor[(5, 13, 15), int64], %var_5519: Tensor[(5, 13, 15), int64]) -> (Tensor[(5, 13, 15), int64], Tensor[(?, 208), float32], Tensor[(208), float64], Tensor[(105, 3), float64]) {
    %979 = cast(%var_5519, dtype="int64") /* ty=Tensor[(5, 13, 15), int64] */;
    %980 = shape_of(%var_5518, dtype="int32") /* ty=Tensor[(3), int32] */;
    %981 = cast(%var_5518, dtype="int64") /* ty=Tensor[(5, 13, 15), int64] */;
    %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %983 = @func_4305() /* ty=(Tensor[(?, 208), float32],) */;
    %984 = cast(meta[relay.Constant][46] /* ty=Tensor[(105, 3), float64] */, dtype="float64") /* ty=Tensor[(105, 3), float64] */;
    %985 = reshape(%984, newshape=[315]) /* ty=Tensor[(315), float64] */;
    %986 = @func_3137(%985) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(13, 8, 2), float64], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(315), float64]) */;
    %987 = left_shift(%981, %982) /* ty=Tensor[(5, 13, 15), int64] */;
    %988 = %983.0;
    %989 = %986.2;
    (%987, %988, %989, meta[relay.Constant][46] /* ty=Tensor[(105, 3), float64] */)
  };
  %990(%var_5565, %var_5566) /* ty=(Tensor[(5, 13, 15), int64], Tensor[(?, 208), float32], Tensor[(208), float64], Tensor[(105, 3), float64]) */
}

def @func_5712(%var_5708: Tensor[(180), float32]) -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(180), float32]) {
  %991 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %992 = @func_3987() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %993 = cast(%var_5708, dtype="float32") /* ty=Tensor[(180), float32] */;
  %994 = reshape(%993, newshape=[3, 6, 10]) /* ty=Tensor[(3, 6, 10), float32] */;
  %995 = @func_4228(%994) /* ty=(Tensor[(3, 6, 10), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14), float64], Tensor[(50, 4), float64], Tensor[(336), float64], Tensor[(990), float32]) */;
  %996 = %991.2;
  %997 = %992.1;
  %998 = %995.1;
  (%996, %997, %998, %var_5708)
}

def @func_9299(%var_9297: Tensor[(4, 3, 10), uint32], %var_9298: Tensor[(4, 3, 10), uint32]) -> (Tensor[(4, 3, 10), float64],) {
  @func_9295(%var_9297, %var_9298) /* ty=(Tensor[(4, 3, 10), float64],) */
}

def @func_1342() -> Tensor[(14, 9, 13), int16] {
  @func_1340() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_7325() -> (Tensor[(14, 9, 13), int16],) {
  %999 = @func_6617() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %1000 = %999.0;
  (%1000,)
}

def @func_10291() -> (Tensor[(14, 9, 13), int16],) {
  @func_10289() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_878(%var_877: Tensor[(208), float64]) -> (Tensor[(14, 9, 13), bool], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(208), float64]) {
  %1020 = fn (%var_839: Tensor[(208), float64]) -> (Tensor[(14, 9, 13), bool], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(208), float64]) {
    %1001 = cast(%var_839, dtype="float64") /* ty=Tensor[(208), float64] */;
    %1002 = reshape(%1001, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float64] */;
    %1003 = @func_512(%1002) /* ty=(Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) */;
    %1004 = %1003.1;
    %1005 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %1006 = %1005.0;
    %1007 = cast(%1006, dtype="bool") /* ty=Tensor[(14, 9, 13), bool] */;
    %1008 = shape_of(%1004, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1009 = cast(%1004, dtype="bool") /* ty=Tensor[(14, 9, 13), bool] */;
    %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1011 = cast(meta[relay.Constant][47] /* ty=Tensor[(208), float64] */, dtype="bool") /* ty=Tensor[(208), bool] */;
    %1012 = shape_of(%var_839, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1013 = cast(%var_839, dtype="bool") /* ty=Tensor[(208), bool] */;
    %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1015 = cast(meta[relay.Constant][47] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %1016 = equal(%1009, %1010) /* ty=Tensor[(14, 9, 13), bool] */;
    %1017 = equal(%1013, %1014) /* ty=Tensor[(208), bool] */;
    %1018 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
    %1019 = exp(%1015) /* ty=Tensor[(208), float64] */;
    (%1016, %1017, %1018, %1019)
  };
  %1020(%var_877) /* ty=(Tensor[(14, 9, 13), bool], Tensor[(208), bool], Tensor[(14, 9, 13), int16], Tensor[(208), float64]) */
}

def @func_4186(%var_4184: Tensor[(14), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(2, 7, 1), float64], Tensor[(14), float64]) {
  @func_4183(%var_4184) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(2, 7, 1), float64], Tensor[(14), float64]) */
}

def @func_8996(%var_8994: Tensor[(6, 208), float32]) -> (Tensor[(6, 208), float32],) {
  @func_8993(%var_8994) /* ty=(Tensor[(6, 208), float32],) */
}

def @func_7942() -> Tensor[(13, 8, 9), int32] {
  @func_7940() /* ty=Tensor[(13, 8, 9), int32] */
}

def @func_1506(%var_1471: Tensor[(200), float64]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(208), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), uint8], Tensor[(200), float64], Tensor[(14, 9, 13), int8], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) {
  %1021 = cast(meta[relay.Constant][48] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1022 = reshape(%1021, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float64] */;
  %1023 = @func_512(%1022) /* ty=(Tensor[(13, 8, 2), float64], Tensor[(14, 9, 13), bool], Tensor[(1638), int16]) */;
  %1024 = @func_1193() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %1025 = @func_610() /* ty=Tensor[(14, 9, 13), int16] */;
  %1026 = cast(%1025, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %1027 = reshape(%1026, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %1028 = @func_682(%1027) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %1029 = cast(%var_1471, dtype="float64") /* ty=Tensor[(200), float64] */;
  %1030 = reshape(%1029, newshape=[200, 1]) /* ty=Tensor[(200, 1), float64] */;
  %1031 = @func_1071(%1030) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(5, 4, 10), float64], Tensor[(200, 1), float64], Tensor[(14, 9, 13), uint8], Tensor[(2, 7, 1), float64], Tensor[(14), float64], Tensor[(14, 9, 13), int64]) */;
  %1032 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
  %1033 = cast(%1032, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %1034 = reshape(%1033, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %1035 = @func_1117(%1034) /* ty=(Tensor[(14, 9, 13), int8],) */;
  %1036 = %1023.2;
  %1037 = cast(%1036, dtype="int16") /* ty=Tensor[(1638), int16] */;
  %1038 = reshape(%1037, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %1039 = %1024.0;
  %1040 = %1028.0;
  %1041 = %1031.6;
  %1042 = %1035.0;
  %1043 = @func_1423() /* ty=Tensor[(14, 9, 13), int16] */;
  %1044 = @func_1322(%1038) /* ty=Tensor[(14, 9, 13), uint8] */;
  (%1025, %1032, %1036, meta[relay.Constant][48] /* ty=Tensor[(208), float64] */, %1039, %1040, %1041, %var_1471, %1042, %1043, %1044)
}

def @func_9394() -> (Tensor[(14, 9, 13), int16],) {
  %1046 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %1045 = @func_6054() /* ty=Tensor[(14, 9, 13), int16] */;
    (%1045,)
  };
  %1046() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_5401() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) {
  @func_5399() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int8]) */
}

def @func_1906(%var_1904: float32, %var_1905: Tensor[(14, 1), float32]) -> (Tensor[(14, 1), float32],) {
  %1050 = fn (%var_1879: float32, %var_1880: Tensor[(14, 1), float32]) -> (Tensor[(14, 1), float32],) {
    %1047 = cast(%var_1879, dtype="float32") /* ty=float32 */;
    %1048 = cast(%var_1880, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
    %1049 = mod(%1047, %1048) /* ty=Tensor[(14, 1), float32] */;
    (%1049,)
  };
  %1050(%var_1904, %var_1905) /* ty=(Tensor[(14, 1), float32],) */
}

def @func_3609(%var_3589: Tensor[(4, 16, 14), int8]) -> Tensor[(4, 16, 14), float32] {
  %1051 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 16, 14), int8] */, dtype="int8") /* ty=Tensor[(4, 16, 14), int8] */;
  %1052 = shape_of(%var_3589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1053 = cast(%var_3589, dtype="int8") /* ty=Tensor[(4, 16, 14), int8] */;
  %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1055 = multiply(%1053, %1054) /* ty=Tensor[(4, 16, 14), int8] */;
  %1056 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 16, 14), int8] */, dtype="float32") /* ty=Tensor[(4, 16, 14), float32] */;
  %1057 = shape_of(%1055, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1058 = cast(%1055, dtype="float32") /* ty=Tensor[(4, 16, 14), float32] */;
  %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%1058, %1059) /* ty=Tensor[(4, 16, 14), float32] */
}

def @func_6016(%var_6015: Tensor[(360), float32]) -> (Tensor[(14, 9, 13), int16], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32]) {
  %1067 = fn (%var_6001: Tensor[(360), float32]) -> (Tensor[(14, 9, 13), int16], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32]) {
    %1060 = @func_4924() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %1061 = cast(-1.19483f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1062 = cast(%var_6001, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1063 = reshape(%1061, newshape=[]) /* ty=float32 */;
    %1064 = reshape(%1062, newshape=[12, 15, 2]) /* ty=Tensor[(12, 15, 2), float32] */;
    %1065 = %1060.0;
    %1066 = @func_2269(%1063, %1064) /* ty=Tensor[(12, 15, 2), float32] */;
    (%1065, %1066, -1.19483f /* ty=float32 */, %var_6001)
  };
  %1067(%var_6015) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(12, 15, 2), float32], float32, Tensor[(360), float32]) */
}

def @func_8200(%var_8198: Tensor[(15, 16, 8), float32], %var_8199: Tensor[(15, 16, 8), float32]) -> (Tensor[(15, 16, 8), bool], Tensor[(14, 9, 13), int16], Tensor[(13, 8, 9), int32]) {
  @func_8196(%var_8198, %var_8199) /* ty=(Tensor[(15, 16, 8), bool], Tensor[(14, 9, 13), int16], Tensor[(13, 8, 9), int32]) */
}

def @func_9696() -> (Tensor[(14, 9, 13), int16],) {
  %1070 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %1068 = @func_4435() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %1069 = %1068.0;
    (%1069,)
  };
  %1070() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_9049() -> Tensor[(14, 9, 13), int16] {
  @func_9047() /* ty=Tensor[(14, 9, 13), int16] */
}

def @func_7606() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8], Tensor[(14, 9, 13), int16]) {
  %1071 = @func_6054() /* ty=Tensor[(14, 9, 13), int16] */;
  %1072 = cast(%1071, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %1073 = reshape(%1072, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %1074 = @func_7325() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %1075 = @func_1322(%1073) /* ty=Tensor[(14, 9, 13), uint8] */;
  %1076 = %1074.0;
  (%1071, %1075, %1076)
}

def @func_5471() -> (Tensor[(13, 8, 9), int32],) {
  @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */
}

def @func_8319() -> (Tensor[(14, 9, 13), int16], Tensor[(208), float64], Tensor[(325, 3), int64]) {
  %1077 = @func_4924() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %1078 = cast(meta[relay.Constant][50] /* ty=Tensor[(325, 3), int64] */, dtype="int64") /* ty=Tensor[(325, 3), int64] */;
  %1079 = cast(meta[relay.Constant][50] /* ty=Tensor[(325, 3), int64] */, dtype="int64") /* ty=Tensor[(325, 3), int64] */;
  %1080 = reshape(%1078, newshape=[5, 13, 15]) /* ty=Tensor[(5, 13, 15), int64] */;
  %1081 = reshape(%1079, newshape=[5, 13, 15]) /* ty=Tensor[(5, 13, 15), int64] */;
  %1082 = @func_5564(%1080, %1081) /* ty=(Tensor[(5, 13, 15), int64], Tensor[(?, 208), float32], Tensor[(208), float64], Tensor[(105, 3), float64]) */;
  %1083 = %1077.0;
  %1084 = %1082.2;
  (%1083, %1084, meta[relay.Constant][50] /* ty=Tensor[(325, 3), int64] */)
}

def @func_2443(%var_2412: Tensor[(15, 12, 14), bool], %var_2413: Tensor[(15, 12, 14), bool], %var_2421: Tensor[(200), float64], %var_2434: float32) -> (Tensor[(15, 12, 14), bool], Tensor[(5, 4, 10), float64], Tensor[(14, 9, 13), int16], Tensor[(200), float32], Tensor[(14, 1), float32], float32, Tensor[(1, 14), float32], Tensor[(14, 9, 13), int16]) {
  %1085 = cast(%var_2413, dtype="bool") /* ty=Tensor[(15, 12, 14), bool] */;
  %1086 = shape_of(%var_2412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1087 = cast(%var_2412, dtype="bool") /* ty=Tensor[(15, 12, 14), bool] */;
  %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1089 = cast(%var_2421, dtype="float64") /* ty=Tensor[(200), float64] */;
  %1090 = reshape(%1089, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), float64] */;
  %1091 = @func_167(%1090) /* ty=(Tensor[(5, 4, 10), float64],) */;
  %1092 = cast(%var_2421, dtype="float32") /* ty=Tensor[(200), float32] */;
  %1093 = cast(%var_2434, dtype="float32") /* ty=float32 */;
  %1094 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
  %1095 = reshape(%1093, newshape=[]) /* ty=float32 */;
  %1096 = reshape(%1094, newshape=[14, 1]) /* ty=Tensor[(14, 1), float32] */;
  %1097 = @func_1903(%1095, %1096) /* ty=(Tensor[(14, 1), float32],) */;
  %1098 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %1099 = logical_or(%1087, %1088) /* ty=Tensor[(15, 12, 14), bool] */;
  %1100 = %1091.0;
  %1101 = @func_1340() /* ty=Tensor[(14, 9, 13), int16] */;
  %1102 = log(%1092) /* ty=Tensor[(200), float32] */;
  %1103 = %1097.0;
  %1104 = %1098.0;
  (%1099, %1100, %1101, %1102, %1103, %var_2434, meta[relay.Constant][51] /* ty=Tensor[(1, 14), float32] */, %1104)
}

def @func_10308() -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16]) {
  %1108 = fn () -> (Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16]) {
    %1105 = @func_9095() /* ty=(Tensor[(14, 9, 13), int16],) */;
    %1106 = @func_7556() /* ty=Tensor[(14, 9, 13), float64] */;
    %1107 = %1105.0;
    (%1106, %1107)
  };
  %1108() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16]) */
}

def @func_6536() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
  %1109 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
  %1110 = @func_3484() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(208), bool], Tensor[(1, 208), float64]) */;
  %1111 = %1110.0;
  %1112 = cast(%1111, dtype="float64") /* ty=Tensor[(14, 9, 13), float64] */;
  %1113 = %1109.3;
  %1114 = cosh(%1112) /* ty=Tensor[(14, 9, 13), float64] */;
  (%1113, %1114)
}

def @func_7282() -> (Tensor[(?, 208), float32], Tensor[(13, 8, 9), int32], Tensor[(14, 9, 13), float64]) {
  %1115 = @func_4427() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(7, 2), float64], Tensor[(14, 9, 13), int16], Tensor[(?, 208), float32]) */;
  %1116 = @func_5469() /* ty=(Tensor[(13, 8, 9), int32],) */;
  %1117 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
  %1118 = %1115.4;
  %1119 = %1116.0;
  %1120 = %1117.2;
  (%1118, %1119, %1120)
}

def @func_8412() -> (Tensor[(14, 9, 13), int16],) {
  %1122 = fn () -> (Tensor[(14, 9, 13), int16],) {
    %1121 = @func_2855() /* ty=Tensor[(14, 9, 13), int16] */;
    (%1121,)
  };
  %1122() /* ty=(Tensor[(14, 9, 13), int16],) */
}

def @func_7044(%var_7028: Tensor[(252), uint32]) -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(6, 3, 14), uint32], Tensor[(252), uint32]) {
  %1123 = @func_316() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %1124 = @func_6263() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
  %1125 = cast(%var_7028, dtype="uint32") /* ty=Tensor[(252), uint32] */;
  %1126 = reshape(%1125, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), uint32] */;
  %1127 = @func_2653(%1126) /* ty=(Tensor[(6, 3, 14), uint32],) */;
  %1128 = %1123.0;
  %1129 = %1124.0;
  %1130 = %1127.0;
  (%1128, %1129, %1130, %var_7028)
}

def @func_9264() -> Tensor[(14, 9, 13), int16] {
  %1131 = @func_5216() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %1131.0
}

def @func_7253() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) {
  %1132 = @func_6536() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) */;
  %1133 = @func_3922() /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(10, 20), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16], Tensor[(990), float32], Tensor[(14, 1), float64]) */;
  %1134 = %1132.0;
  %1135 = %1133.4;
  (%1134, %1135)
}

def @func_5216() -> (Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float64]) {
  %1136 = @func_4050() /* ty=Tensor[(14, 9, 13), int16] */;
  %1137 = cast(%1136, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %1138 = reshape(%1137, newshape=[14, 9, 13]) /* ty=Tensor[(14, 9, 13), int16] */;
  %1139 = @func_682(%1138) /* ty=(Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), float64]) */;
  %1140 = %1139.0;
  (%1136, %1140)
}

def @func_3295(%var_3294: float32) -> (Tensor[(14, 9, 13), float32], Tensor[(14), float32], float32) {
  %1147 = fn (%var_3291: float32) -> (Tensor[(14, 9, 13), float32], Tensor[(14), float32], float32) {
    %1141 = @func_1592() /* ty=(Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), float64], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), uint8]) */;
    %1142 = cast(%var_3291, dtype="float32") /* ty=float32 */;
    %1143 = reshape(%1142, newshape=[]) /* ty=float32 */;
    %1144 = @func_2495(%1143) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(14, 1), float32], float32, Tensor[(14), float32], Tensor[(14, 9, 13), int16], Tensor[(14, 9, 13), int16]) */;
    %1145 = %1141.1;
    %1146 = %1144.3;
    (%1145, %1146, %var_3291)
  };
  %1147(%var_3294) /* ty=(Tensor[(14, 9, 13), float32], Tensor[(14), float32], float32) */
}

def @func_4030(%var_4026: Tensor[(14), float64]) -> (Tensor[(14, 9, 13), float32], Tensor[(14, 9, 13), int16], Tensor[(2, 7, 1), float64], Tensor[(14), float64]) {
  %1148 = @func_3404() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %1149 = %1148.0;
  %1150 = cast(%1149, dtype="float32") /* ty=Tensor[(14, 9, 13), float32] */;
  %1151 = @func_213() /* ty=(Tensor[(14, 9, 13), int16],) */;
  %1152 = cast(%var_4026, dtype="float64") /* ty=Tensor[(14), float64] */;
  %1153 = cast(%1149, dtype="int16") /* ty=Tensor[(14, 9, 13), int16] */;
  %1154 = reshape(%1152, newshape=[2, 7, 1]) /* ty=Tensor[(2, 7, 1), float64] */;
  %1155 = reshape(%1153, newshape=[1638]) /* ty=Tensor[(1638), int16] */;
  %1156 = @func_389(%1154, %1155) /* ty=(Tensor[(14, 9, 13), int16], Tensor[(1638), int16], Tensor[(2, 7, 1), float64]) */;
  %1157 = acos(%1150) /* ty=Tensor[(14, 9, 13), float32] */;
  %1158 = %1151.0;
  %1159 = %1156.2;
  (%1157, %1158, %1159, %var_4026)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen279/build/output.py", line 3640, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:03:15] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


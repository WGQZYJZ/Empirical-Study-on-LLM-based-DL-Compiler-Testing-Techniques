import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_142 = relay.var("var_142", dtype = "float32", shape = (3, 7, 9))#candidate|142|(3, 7, 9)|var|float32
uop_143 = relay.cos(var_142.astype('float32')) # shape=(3, 7, 9)
uop_145 = relay.sin(var_142.astype('float64')) # shape=(3, 7, 9)
output = relay.Tuple([uop_143,uop_145,])
output2 = relay.Tuple([uop_143,uop_145,])
func_160 = relay.Function([var_142,], output)
mod['func_160'] = func_160
mod = relay.transform.InferType()(mod)
mutated_mod['func_160'] = func_160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_161 = relay.var("var_161", dtype = "float32", shape = (3, 7, 9))#candidate|161|(3, 7, 9)|var|float32
func_160_call = mutated_mod.get_global_var('func_160')
call_162 = func_160_call(var_161)
output = call_162
func_163 = relay.Function([var_161], output)
mutated_mod['func_163'] = func_163
mutated_mod = relay.transform.InferType()(mutated_mod)
const_228 = relay.const([[[-6.833147,7.286219,3.092495,6.208047,6.198402,-1.438336,-1.456105,9.869717,1.532706],[1.651365,-7.399782,7.582732,9.165919,-4.695143,-7.092585,8.249408,-0.154836,-5.073620],[-6.063587,-9.043993,-1.764025,5.038606,8.381449,5.417210,9.005279,7.337438,-6.574338],[-9.410258,3.766643,-2.271764,4.225576,-2.627760,-1.358122,1.743547,-3.319030,9.998687],[1.790425,3.262444,2.651712,5.786148,-9.393884,-5.364458,6.843950,-3.006487,-1.932340],[-4.941451,-6.828204,4.454230,8.418349,6.843147,2.543959,-0.162931,3.443330,9.072154],[-0.446121,4.879428,-9.825425,2.189068,6.823215,-1.117031,-3.540776,6.406935,7.896312],[-8.387720,4.396452,6.867431,-6.243351,7.152720,0.029069,-6.133711,-9.341170,-7.100747],[-8.771700,-0.397988,6.483621,7.620383,-9.359592,8.433020,4.402340,-5.688239,3.846147],[8.993436,-3.377806,-2.789027,-6.190974,3.600891,-5.407658,6.032249,-5.119818,-3.080459],[-0.181796,6.381843,-8.956039,-0.344286,-1.086298,4.436368,-7.855277,3.916619,2.055339],[1.027419,9.880799,-8.372974,-2.907082,-9.534704,-8.025385,1.185274,-2.509746,5.428981],[5.120885,-5.196435,-1.939758,8.793560,5.955421,3.760988,-1.962743,-6.556164,-8.641212],[-1.328043,-7.543602,8.501793,1.582600,7.941132,4.886916,5.441851,-8.644231,1.841889]],[[4.332927,-4.950735,0.628476,5.298269,-5.748224,9.383064,6.848635,4.894522,-9.092793],[-5.553651,2.068805,4.421199,-8.254256,8.088132,2.627618,7.644078,-3.046602,6.441656],[-1.788775,5.310111,-5.893255,3.108316,-9.340783,3.656846,4.879283,7.997371,0.448158],[8.011618,5.076240,-4.882200,4.128343,0.428529,5.825519,-4.888525,6.785510,-7.533239],[-3.510704,8.069298,0.601611,-1.410660,-3.208407,8.391671,-3.736777,9.778585,-7.235252],[-9.304129,-1.305564,3.827538,-0.579415,7.462812,5.158055,6.373013,7.876148,5.274412],[7.171102,3.394981,5.631527,8.729210,4.111296,0.841648,0.072272,-6.407916,7.613712],[0.449558,7.267085,7.551309,9.390782,-4.489042,-0.402110,3.946099,6.419639,2.532854],[4.443489,2.082393,-8.711799,-2.507096,-5.820569,5.669287,-3.350258,-7.309853,6.680860],[3.294384,-1.382270,4.603554,5.993102,6.664059,8.912026,8.309627,4.724787,7.774250],[8.284023,8.488575,-0.105672,8.813929,-4.651971,-5.958804,4.863370,-4.638321,-3.312654],[-7.993944,-9.021817,-7.396401,0.726994,-3.679193,-0.568862,-4.143406,-2.804676,-2.120016],[-3.154172,7.819407,5.841920,-7.409329,5.271303,-1.629683,-5.829637,7.354995,-7.923839],[-9.739457,9.579667,3.044902,-8.003186,7.266554,4.552569,-0.029289,1.125300,-9.032177]],[[2.463888,-9.351139,8.759352,-8.078267,9.491833,-5.191992,-5.185498,8.431229,-8.640233],[6.308731,-8.467536,2.368132,-8.015200,7.570336,6.633072,-9.245778,-8.089337,-8.174827],[-3.483810,0.406525,-6.317680,1.669969,-8.327614,1.722570,6.300432,-9.989124,8.361841],[-5.413700,6.995354,-3.159824,4.137779,1.352426,9.668753,-1.252794,2.853800,8.896980],[0.482012,-0.602041,-8.973736,-8.042233,-1.776475,3.535715,-3.617759,-6.313544,-8.474169],[3.162620,7.757478,7.124659,-6.943851,-6.697629,-0.557708,6.453900,8.796911,5.701876],[3.548527,6.119587,-9.167876,-1.869493,-2.078714,-4.122367,3.845754,5.507356,1.190360],[6.591524,-1.415484,5.935905,9.117337,-7.719728,-4.443223,-5.474225,-6.079926,0.958771],[3.112310,5.513285,-8.858888,-1.057703,4.389019,1.854517,-0.891093,-3.627255,-9.785033],[8.098293,4.269167,-3.673597,-9.289985,9.426825,5.890534,7.742485,-7.407828,-0.816676],[4.380572,-7.117831,-4.812031,0.869305,-5.474617,8.985009,2.808476,0.144081,2.807608],[-5.108903,-6.644863,-8.110599,-3.456014,-8.757385,-5.647037,-0.363955,0.007507,6.248640],[-2.728247,3.667320,-9.668082,0.218139,7.018502,-8.301464,6.350245,-7.710448,7.328803],[1.686732,6.705661,-9.324354,-9.388767,0.091919,-4.109094,-2.499686,5.978148,3.821848]],[[-3.961687,3.019927,8.206152,-5.599703,-9.227459,4.619052,2.898921,1.905237,-4.091560],[1.683231,-4.174471,5.532615,2.556905,9.135949,5.808454,-1.418623,-3.098663,2.135930],[-0.386324,-5.623145,9.318161,-8.415170,-6.789369,9.333143,4.000014,8.158060,8.177296],[-2.661279,-8.952399,8.553750,5.747557,-9.335422,8.516897,3.018084,4.404725,-4.859470],[0.585330,-2.563752,-9.036637,7.927865,-8.435100,-8.918740,5.017355,-3.096818,-6.765290],[6.904947,6.964161,3.950270,1.846270,-2.666089,-6.277348,9.856017,9.283559,0.483874],[2.820114,-0.928582,-9.047941,3.093592,6.620319,6.988726,4.854222,5.642001,-2.554030],[4.407684,-4.601228,9.548817,-4.980345,-8.130150,-1.801947,-4.108992,-1.191438,7.189208],[1.371008,-9.624970,-3.412079,-1.773283,-9.570617,-2.057611,0.126473,6.941740,-2.105202],[-0.690444,6.383062,-8.641754,6.820147,-6.967745,6.665204,-3.916534,-4.871008,-7.831928],[-2.918232,0.002409,-2.889830,-9.730927,7.775768,5.868602,-5.917325,7.464829,5.004675],[6.666093,-7.205241,-7.685423,3.959344,-0.506363,-5.340981,-2.269410,0.741538,7.821973],[4.734281,4.654310,7.017155,-7.113030,6.757846,-0.636997,-4.050126,8.970678,7.474525],[-2.364786,-5.887056,-8.116217,9.392992,0.382889,-7.790894,5.472253,-1.516229,6.608893]],[[4.397478,0.351643,0.194200,9.518436,1.416113,-4.307600,8.073031,4.061299,1.278018],[-3.079772,-0.719442,1.208429,-7.773596,1.698880,-7.891195,8.437548,-9.962099,-3.893803],[-5.921408,2.634300,-4.435316,-0.019158,1.141240,7.063037,1.494094,6.710734,6.686236],[5.876135,4.134304,5.969925,9.706429,-2.790496,1.798341,0.970123,-7.233753,-1.646587],[-8.914057,-9.718201,-6.819871,-0.218500,9.239361,-7.765056,-0.210602,0.716568,-6.379240],[4.715847,8.137928,9.281981,-6.559826,-2.705991,-7.651931,4.905361,0.542518,-0.458567],[9.758537,7.713366,-9.710779,-4.222559,8.180209,9.506719,-4.060295,4.396664,-5.025816],[-2.813315,0.590216,5.099469,7.590823,-6.007941,2.223184,0.847983,1.657968,4.604834],[-7.826051,9.453656,3.337535,4.497507,2.290723,4.105795,6.726521,3.183195,-4.753083],[-0.095812,7.344884,-1.231136,3.710255,-9.318606,0.344522,5.626664,7.073241,4.383528],[1.526080,-8.906214,-1.044916,-7.215942,0.056061,-2.854632,-8.433750,-5.971339,-2.431294],[-9.882912,-1.177812,-4.486530,5.036193,5.364035,-3.486140,9.358879,5.716691,7.633108],[-8.431561,9.445696,2.295651,5.975051,1.960740,0.555643,9.906050,1.394180,-4.107574],[9.947820,8.416060,-3.043382,5.710870,9.664827,0.590649,-3.175493,-5.470817,-7.515275]],[[-8.466088,-8.745217,5.021123,5.063757,3.609367,-4.803472,-7.232765,4.938870,-3.429546],[-8.511226,-1.241927,-5.220669,-0.607230,5.494813,-2.296879,-0.044241,8.430065,-2.839155],[-1.007261,4.957316,0.120793,-1.990533,0.009199,4.906700,6.954438,-6.862124,-3.044078],[-2.081515,1.201069,7.749192,9.566117,-3.670984,-9.987851,0.251044,-6.195657,4.130455],[-7.770781,-8.413073,3.946373,4.379193,9.333080,-8.838632,-7.194891,-6.904215,-1.993969],[1.104886,4.398298,4.450458,7.078314,-8.501793,2.785452,5.826235,0.040779,-6.736658],[3.363321,-6.959434,5.710821,-8.102153,4.555590,3.873726,5.949037,2.896569,9.813810],[-5.694486,2.487027,-6.755208,-4.444502,-1.820336,4.109524,1.125468,-0.715693,2.615941],[-7.222448,7.931451,-6.316191,-5.883603,2.365242,-5.054935,-3.266821,7.309780,-0.614286],[-7.102217,0.197163,-7.711314,2.126438,-8.153867,7.628630,2.829566,4.351501,2.247766],[-5.107492,3.686684,9.055877,-4.109435,9.948754,5.140306,1.826315,-2.390741,-1.713484],[-1.564591,-0.921414,6.137761,-6.469050,-6.241454,8.819146,-7.715434,4.155522,-9.545863],[3.985239,-3.075184,-4.356489,-6.154136,9.616058,3.131246,-4.599454,-0.550005,-5.955617],[-3.432420,-3.906077,-0.196623,4.367561,8.491455,4.739830,8.720948,-9.195186,3.248578]],[[-0.312037,1.769180,-2.307863,2.080668,-0.517886,-5.734892,-9.154263,5.631077,3.009436],[-2.477157,-9.484917,6.699215,1.948208,9.456257,-2.698194,4.718201,-5.694206,-1.532165],[4.018446,8.415888,9.986749,-3.297889,5.820451,7.261558,3.493587,4.744954,4.375336],[9.028222,6.289603,1.305781,0.195257,-7.053611,9.099492,0.933812,8.132702,-3.258473],[-9.840917,-4.278365,-9.426170,-1.098312,8.825536,-6.630205,-2.608698,-4.757979,-2.783102],[6.931422,-8.655671,5.039218,-4.229895,-9.873914,-6.238538,7.766642,0.124985,-9.426140],[4.070524,2.758609,-3.853082,5.781274,-9.576761,-6.883543,1.007226,-8.010640,-9.505495],[8.650236,-6.209575,-0.298109,-6.322578,3.591199,0.772900,-9.495926,-6.916462,9.157561],[5.677141,9.402799,-0.197322,-9.524564,9.913235,4.750344,-6.612487,9.939504,-5.845115],[5.476568,3.200115,-0.386426,-5.296358,9.164380,6.394414,9.235552,2.283547,-9.593377],[0.432941,-4.834290,7.204021,-5.578716,-6.536367,2.934556,0.889044,-5.178652,5.669728],[8.613183,5.947992,2.586387,1.637669,7.413627,7.314635,3.788616,-1.699014,-1.871122],[7.109317,6.501461,-4.316585,7.518151,-6.651335,-0.652852,-2.713844,4.073718,-7.878584],[-2.693339,-4.594960,-0.970964,8.231199,-5.934434,1.076737,-0.250127,5.834438,9.486644]],[[-6.769488,6.924832,-2.661061,-9.345318,8.362785,-7.045215,-0.287817,0.622760,-6.285359],[6.918372,4.774005,4.972519,-8.242845,-5.447168,6.051847,9.348038,-3.135832,-8.081392],[-5.839792,2.760311,3.892922,0.206605,1.048028,-8.420958,-7.853590,6.174900,6.093283],[3.849292,-4.122144,6.407500,4.194754,3.363994,2.112722,-8.172182,4.158724,9.669660],[8.103454,-9.986213,9.571183,-8.102101,-6.207099,-4.596454,-9.399163,6.735708,4.787289],[-8.662214,8.848377,-6.012437,-6.587747,-0.402195,-3.323527,-6.079217,-1.996384,-9.502004],[3.550854,-4.846147,6.359668,3.407609,-7.169826,-1.273950,0.293297,-7.987487,3.927873],[9.601724,1.435092,3.800460,8.997166,6.281117,-4.603595,9.150769,-6.841064,-4.565524],[-8.944006,1.597720,-6.954594,-1.437621,-8.832144,9.230718,8.130548,7.248006,-7.894706],[6.677628,-2.416003,-4.785800,-8.110220,-3.166146,7.387193,-7.720144,-3.347191,-0.265455],[-6.731034,-4.003182,7.906419,-5.093832,-2.329752,5.243351,-5.037363,-4.326125,8.192520],[6.864259,5.708651,-9.058429,-6.353683,-3.929583,-2.590055,-5.698736,-7.114957,1.960509],[-2.120408,-5.138616,-9.894066,0.417147,-8.747273,4.485609,-5.745096,-8.049478,0.778782],[-4.971370,3.722341,-8.612909,6.951864,-9.841732,-9.089943,1.019830,3.540489,0.645568]],[[1.417897,-5.479954,4.786265,1.244934,9.831640,4.707695,-6.016450,-9.737176,-1.450871],[3.203970,6.166404,2.385050,-5.327249,-7.241907,7.092879,9.569156,4.320390,-0.923114],[4.058520,-9.911526,2.796170,0.785060,-4.756676,-0.318930,4.467703,-4.591470,5.860674],[-7.818292,9.476382,-8.834910,-7.125518,5.406151,0.482405,-3.063812,-4.362832,2.376611],[-9.226405,0.773595,8.849732,-1.512523,-9.803105,4.621905,-3.302139,2.484689,0.558548],[-1.788341,8.092365,1.182763,-1.602031,5.483051,-1.899609,-8.539171,-9.281915,6.298828],[1.107944,-9.176692,3.620978,-3.643117,8.785435,3.357121,5.577514,-2.945703,1.229009],[6.511870,-0.752359,-3.101278,-7.965110,8.004682,5.385914,-7.126305,-6.887279,-7.053521],[-3.658199,-3.171961,-8.415260,-4.476242,3.320182,-8.119441,-7.127753,-9.134101,-9.381829],[-3.017158,-8.354210,3.313996,-2.286308,-7.480531,-0.686148,-1.616568,0.507642,-7.914288],[-4.477666,3.761841,-3.008284,5.145099,-3.584650,3.003991,-7.449818,4.795213,8.609020],[-7.353826,-8.399997,4.032626,0.010681,0.358353,-5.051618,-6.076241,1.624069,-9.687867],[5.225838,-9.182563,-3.112315,4.013607,0.205540,2.821919,4.425848,9.140468,-9.848199],[6.734401,-2.837418,4.669613,-2.906405,-7.058187,9.079836,0.327960,-9.118702,-2.185371]],[[8.936333,0.292199,-5.248433,-5.151129,6.596516,9.793593,-1.454783,6.084859,-0.826186],[5.571927,1.522889,-3.368674,-0.085717,4.315755,5.222302,6.498460,1.236391,-3.072795],[7.942070,-2.686184,-0.463740,1.561898,-9.973474,2.202138,6.427480,4.394876,-1.612183],[9.984537,-3.396525,7.947965,3.560162,-3.661425,-2.938193,-5.685132,7.982528,-3.681581],[5.415292,-8.740645,-8.740525,-3.914198,-7.630034,-7.379107,6.359690,-5.422938,4.307752],[5.529850,-5.291010,2.455146,-7.413232,5.524288,-4.446448,9.781276,0.050600,4.695397],[-9.312515,9.002010,-9.499246,9.546777,6.812844,9.035698,-8.034780,3.560121,-2.747484],[1.452669,3.156784,0.601099,-0.002501,0.426246,-8.965819,0.827304,-9.872411,-8.599504],[8.273044,-1.986518,8.333014,5.968389,-0.478865,-5.769168,3.956253,-2.359029,-3.963939],[7.279851,-2.231069,-8.327544,7.330029,7.037648,-7.918059,-9.094680,-0.156276,2.148694],[-0.594702,9.277070,3.630258,-3.249941,3.483769,9.828474,-4.435547,-2.411602,2.933445],[4.476051,-0.543119,-8.899906,-9.121842,-3.122390,8.258170,-9.267210,-8.541909,8.026246],[-2.513438,1.829578,-3.108566,4.375580,2.439921,1.536708,9.092993,7.996029,-7.316601],[-7.386068,0.662684,6.148272,-1.434710,-8.518805,5.979934,3.341726,5.370949,4.660257]]], dtype = "float64")#candidate|228|(10, 14, 9)|const|float64
uop_229 = relay.cosh(const_228.astype('float64')) # shape=(10, 14, 9)
func_160_call = mod.get_global_var('func_160')
func_163_call = mutated_mod.get_global_var('func_163')
var_233 = relay.var("var_233", dtype = "float32", shape = (1, 189))#candidate|233|(1, 189)|var|float32
call_232 = relay.TupleGetItem(func_160_call(relay.reshape(var_233.astype('float32'), [3, 7, 9])), 1)
call_234 = relay.TupleGetItem(func_163_call(relay.reshape(var_233.astype('float32'), [3, 7, 9])), 1)
var_240 = relay.var("var_240", dtype = "float64", shape = (10, 14, 9))#candidate|240|(10, 14, 9)|var|float64
bop_241 = relay.divide(uop_229.astype('float32'), relay.reshape(var_240.astype('float32'), relay.shape_of(uop_229))) # shape=(10, 14, 9)
output = relay.Tuple([call_232,var_233,bop_241,])
output2 = relay.Tuple([call_234,var_233,bop_241,])
func_246 = relay.Function([var_233,var_240,], output)
mod['func_246'] = func_246
mod = relay.transform.InferType()(mod)
var_247 = relay.var("var_247", dtype = "float32", shape = (1, 189))#candidate|247|(1, 189)|var|float32
var_248 = relay.var("var_248", dtype = "float64", shape = (10, 14, 9))#candidate|248|(10, 14, 9)|var|float64
output = func_246(var_247,var_248,)
func_249 = relay.Function([var_247,var_248,], output)
mutated_mod['func_249'] = func_249
mutated_mod = relay.transform.InferType()(mutated_mod)
const_320 = relay.const(3, dtype = "int32")#candidate|320|()|const|int32
var_321 = relay.var("var_321", dtype = "int32", shape = (2, 14, 14))#candidate|321|(2, 14, 14)|var|int32
bop_322 = relay.not_equal(const_320.astype('bool'), var_321.astype('bool')) # shape=(2, 14, 14)
uop_330 = relay.sinh(bop_322.astype('float64')) # shape=(2, 14, 14)
output = relay.Tuple([uop_330,])
output2 = relay.Tuple([uop_330,])
func_333 = relay.Function([var_321,], output)
mod['func_333'] = func_333
mod = relay.transform.InferType()(mod)
var_334 = relay.var("var_334", dtype = "int32", shape = (2, 14, 14))#candidate|334|(2, 14, 14)|var|int32
output = func_333(var_334)
func_335 = relay.Function([var_334], output)
mutated_mod['func_335'] = func_335
mutated_mod = relay.transform.InferType()(mutated_mod)
var_360 = relay.var("var_360", dtype = "float64", shape = (8, 4, 8))#candidate|360|(8, 4, 8)|var|float64
uop_361 = relay.log10(var_360.astype('float64')) # shape=(8, 4, 8)
bop_377 = relay.greater(uop_361.astype('bool'), relay.reshape(var_360.astype('bool'), relay.shape_of(uop_361))) # shape=(8, 4, 8)
output = relay.Tuple([bop_377,])
output2 = relay.Tuple([bop_377,])
func_387 = relay.Function([var_360,], output)
mod['func_387'] = func_387
mod = relay.transform.InferType()(mod)
var_388 = relay.var("var_388", dtype = "float64", shape = (8, 4, 8))#candidate|388|(8, 4, 8)|var|float64
output = func_387(var_388)
func_389 = relay.Function([var_388], output)
mutated_mod['func_389'] = func_389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_394 = relay.var("var_394", dtype = "uint8", shape = (3, 9, 1))#candidate|394|(3, 9, 1)|var|uint8
var_395 = relay.var("var_395", dtype = "uint8", shape = (3, 9, 7))#candidate|395|(3, 9, 7)|var|uint8
bop_396 = relay.greater_equal(var_394.astype('bool'), var_395.astype('bool')) # shape=(3, 9, 7)
func_387_call = mod.get_global_var('func_387')
func_389_call = mutated_mod.get_global_var('func_389')
var_403 = relay.var("var_403", dtype = "float64", shape = (1, 256))#candidate|403|(1, 256)|var|float64
call_402 = relay.TupleGetItem(func_387_call(relay.reshape(var_403.astype('float64'), [8, 4, 8])), 0)
call_404 = relay.TupleGetItem(func_389_call(relay.reshape(var_403.astype('float64'), [8, 4, 8])), 0)
uop_428 = relay.atan(var_403.astype('float32')) # shape=(1, 256)
func_160_call = mod.get_global_var('func_160')
func_163_call = mutated_mod.get_global_var('func_163')
call_441 = relay.TupleGetItem(func_160_call(relay.reshape(var_395.astype('float32'), [3, 7, 9])), 0)
call_442 = relay.TupleGetItem(func_163_call(relay.reshape(var_395.astype('float32'), [3, 7, 9])), 0)
func_246_call = mod.get_global_var('func_246')
func_249_call = mutated_mod.get_global_var('func_249')
var_446 = relay.var("var_446", dtype = "float64", shape = (9, 140))#candidate|446|(9, 140)|var|float64
call_445 = relay.TupleGetItem(func_246_call(relay.reshape(call_441.astype('float32'), [1, 189]), relay.reshape(var_446.astype('float64'), [10, 14, 9]), ), 2)
call_447 = relay.TupleGetItem(func_249_call(relay.reshape(call_441.astype('float32'), [1, 189]), relay.reshape(var_446.astype('float64'), [10, 14, 9]), ), 2)
func_387_call = mod.get_global_var('func_387')
func_389_call = mutated_mod.get_global_var('func_389')
call_453 = relay.TupleGetItem(func_387_call(relay.reshape(var_403.astype('float64'), [8, 4, 8])), 0)
call_454 = relay.TupleGetItem(func_389_call(relay.reshape(var_403.astype('float64'), [8, 4, 8])), 0)
output = relay.Tuple([bop_396,call_402,uop_428,call_441,call_445,var_446,call_453,])
output2 = relay.Tuple([bop_396,call_404,uop_428,call_442,call_447,var_446,call_454,])
func_455 = relay.Function([var_394,var_395,var_403,var_446,], output)
mod['func_455'] = func_455
mod = relay.transform.InferType()(mod)
var_456 = relay.var("var_456", dtype = "uint8", shape = (3, 9, 1))#candidate|456|(3, 9, 1)|var|uint8
var_457 = relay.var("var_457", dtype = "uint8", shape = (3, 9, 7))#candidate|457|(3, 9, 7)|var|uint8
var_458 = relay.var("var_458", dtype = "float64", shape = (1, 256))#candidate|458|(1, 256)|var|float64
var_459 = relay.var("var_459", dtype = "float64", shape = (9, 140))#candidate|459|(9, 140)|var|float64
output = func_455(var_456,var_457,var_458,var_459,)
func_460 = relay.Function([var_456,var_457,var_458,var_459,], output)
mutated_mod['func_460'] = func_460
mutated_mod = relay.transform.InferType()(mutated_mod)
const_673 = relay.const([[[6.129301,4.968257,4.440679,-9.224585,-3.801623,-7.326567,-2.524255,-1.496701,-0.805222,6.294420],[-4.297000,-6.821765,7.147381,0.478053,0.856207,-6.307781,-7.956650,-3.440887,4.128152,6.574494],[-5.124456,7.034816,-7.945739,-3.407911,-0.330660,-3.197497,4.008933,-5.322555,-9.963898,9.538272],[-7.523819,-8.883985,4.135101,-6.847515,8.119326,-4.113388,-0.153205,1.946266,3.839061,5.965249],[0.921231,-2.462207,7.727285,9.561398,4.255291,6.858168,-3.546985,-0.123468,-2.522890,8.223419],[-1.401946,3.491975,5.459869,5.500946,9.249508,-3.942751,9.607754,2.857280,2.413629,-2.102464],[8.192926,-7.033041,-2.892289,-3.911588,-0.078770,-9.896284,5.504365,9.574438,-0.298428,-4.805822],[6.099242,-0.752078,9.536146,0.049949,0.488894,3.390763,0.492726,-6.538444,-9.238875,-9.085608],[-0.481322,-3.659321,9.133681,-6.067497,-3.727203,1.554098,-8.638951,-8.209362,9.828290,-6.946798],[-5.661778,-8.242893,-2.826982,3.736989,7.418561,3.102996,-8.716381,4.529238,6.873693,-3.142287],[-4.577732,7.574255,9.388273,9.295384,-1.639268,2.262227,5.255017,-9.861578,8.485443,8.118012]],[[-0.691185,-2.958501,-0.487907,-2.396660,-9.370581,1.581003,-8.438602,0.268639,9.236951,-0.006696],[-9.017407,-7.259053,4.933747,1.500861,-5.712716,2.254624,8.901950,6.322964,-8.508030,3.620429],[-9.011654,6.726140,-7.901785,6.260919,5.120032,9.370860,7.426578,-4.803789,-0.725526,4.794850],[-7.075211,4.905811,2.153924,1.367142,-4.907387,-7.932361,6.595160,9.765169,-3.662168,2.998270],[2.812922,6.835121,-2.488535,5.241658,-1.518361,7.141797,-1.732574,-3.079683,-6.604277,8.300538],[2.209628,2.379476,6.967324,-1.563752,9.484630,-1.194176,-2.064808,-9.018998,2.557165,2.920233],[-2.738350,-0.393873,-7.997677,-3.954688,-7.833787,0.462263,2.564213,-5.942725,-0.937974,-3.719660],[2.429193,-7.970725,2.507578,-8.483797,-8.773344,-4.632567,0.043764,4.720149,6.896341,-6.889159],[1.240974,1.437247,-8.996416,-7.422182,-7.131890,5.300696,9.160998,3.110297,-3.047993,8.081511],[-2.429847,2.095391,-6.013556,2.977457,0.768165,9.444381,0.021068,4.335611,-7.528683,-0.801023],[5.821809,-4.469734,3.343954,1.680649,-6.129438,8.994032,-2.415063,-1.000155,3.919733,-2.155441]],[[8.580306,-0.384738,8.487379,-3.358053,1.821712,-9.963094,-7.269924,6.800985,2.108024,2.338817],[8.911999,-2.480064,-1.235936,-2.917747,-4.904507,-3.875527,-8.303872,-8.613809,-7.031820,2.942173],[-3.323920,-0.586828,9.237293,-7.692306,-7.387377,-6.937692,-4.078603,2.232040,0.623572,4.677622],[6.821455,0.832815,-5.182987,8.261663,-7.387696,-9.322635,-5.089966,-3.425760,-5.130872,-8.294555],[-9.906417,-3.381765,0.916758,7.681347,9.391355,-7.255494,-6.147918,-3.903828,-6.622430,-5.058543],[-4.003874,3.822686,3.095133,-0.774332,-5.544998,8.277623,1.861505,-4.637130,4.699480,4.875135],[-1.910569,0.117763,7.328354,7.855106,8.886547,7.400004,-9.565748,3.497095,-3.602210,2.562706],[-5.209284,8.059474,-1.440838,9.040979,-6.309391,-7.671175,-3.920846,9.816089,3.858825,3.328482],[-4.069005,-1.619096,9.713524,4.811004,-5.308685,5.965597,8.360740,-8.868830,-1.822210,9.012985],[9.054589,7.378889,-8.686575,5.870112,1.383682,-8.594559,1.919161,-4.935773,-8.441281,-0.109697],[-6.817910,-2.919918,2.561436,6.174695,-5.259097,-7.696793,-7.039279,7.366236,-3.618483,-6.560718]],[[-6.192825,-6.718888,2.884272,-7.204753,-7.169422,-5.201328,-8.113146,-6.824153,-0.497920,3.224045],[-3.623153,-4.310856,8.649332,4.856480,-5.890327,8.125091,8.787173,8.106706,-7.622819,-6.857744],[-1.216227,6.484522,0.109259,-9.681747,5.606577,-3.849568,5.933566,-1.442177,8.778276,1.991925],[1.424374,-8.052731,-4.119541,-5.738575,0.221890,6.386884,0.490740,0.206804,-6.576296,-1.331316],[9.949943,3.256655,0.521919,-0.545010,-7.042616,8.865441,-3.983353,-0.042972,3.774952,-7.754758],[3.354419,-8.587069,-9.400460,-5.454059,-8.959397,5.154458,3.194431,-5.714938,-4.431677,0.741769],[-6.433566,4.839758,-2.655501,2.556784,-0.852819,1.519185,2.586878,-6.880087,2.824212,-2.390991],[-8.660325,9.707934,0.559409,-8.961539,-3.262149,-9.991203,-7.379832,-9.847255,6.172078,-2.674034],[7.227715,3.180350,-7.235676,-3.801061,-7.398019,9.902797,-0.438969,0.209183,-4.899866,-4.766778],[5.107505,-6.726269,-1.480330,0.769938,-5.937264,2.151955,4.229387,4.338969,-9.841520,0.993311],[-3.498343,6.703046,6.585855,-2.530770,3.935472,5.310688,4.218633,-0.959567,-8.703999,7.260400]],[[-8.029443,-8.409732,-0.644243,0.975475,7.083814,9.322496,1.480089,7.113941,2.070314,-5.206749],[-0.508123,-2.686103,4.025255,4.845514,-1.757696,0.396228,7.032510,-8.507555,7.798942,-8.611023],[-8.400761,-3.453289,1.557777,-2.499813,-9.251736,1.214258,-3.468289,-0.897753,-1.081920,5.086108],[8.070356,2.364419,-6.485827,-7.262433,5.427237,0.974730,-0.145066,8.958953,2.372943,1.687151],[4.249349,-3.090687,-8.126947,0.133885,-6.445580,3.309937,6.976857,-8.622119,-4.686466,1.161495],[5.246033,1.472650,9.243216,6.955794,-4.055603,-6.845645,5.323666,-9.586870,2.048295,1.596577],[-6.462743,1.493187,3.140905,-3.004095,-9.667039,-5.895148,-0.702628,-7.527574,-9.176415,-4.867419],[-9.790202,-9.602124,5.353763,0.302493,9.224488,-7.101101,9.300315,3.868598,1.947284,-1.892013],[-4.389901,4.701998,-0.571142,-3.631263,-9.558964,4.545372,6.015311,-2.872719,-8.044502,5.123221],[-0.517776,-6.494648,-6.178587,3.176966,7.905340,4.957942,-0.455594,-9.054966,-6.978539,0.802134],[7.256469,7.955705,9.910161,6.263030,1.827004,3.595364,-6.671763,9.659447,6.530871,-6.013336]],[[-4.198727,-0.580410,-9.681785,7.846840,0.546458,9.124261,-9.798710,0.215150,7.729339,8.915411],[-6.123999,-1.642776,-0.524129,1.755144,-2.951097,-2.842123,0.954638,6.184435,7.519854,9.532606],[-0.076193,0.231483,8.704087,-2.265199,1.518561,-0.710882,-3.603016,-8.713526,-9.019674,-6.694946],[0.506056,-1.212580,-5.271777,9.413200,-8.561480,-0.057319,5.337105,7.457072,8.563766,8.572711],[-1.272383,-1.039561,7.911723,8.072297,-6.706722,-9.145388,0.997544,-3.646748,1.639548,9.724082],[-2.181746,-0.066543,-1.639054,7.598956,2.422314,-2.396384,-4.205952,-0.961485,-1.395481,4.281403],[8.941137,-5.123556,-1.651034,-2.440526,-8.084673,-6.058803,-2.875318,0.639242,-9.718045,-9.056635],[0.626761,0.790367,7.947778,8.684568,-9.220985,-2.965769,8.557297,-1.013593,1.082041,1.933288],[-6.073240,8.563617,-7.616900,7.850477,1.907664,-2.980774,5.993470,-6.300788,2.968499,-5.813835],[-0.917104,4.521917,7.826189,-9.293383,0.362836,2.921231,0.407799,-1.683137,7.591473,-7.439213],[9.294897,9.000466,9.093031,6.128390,-5.440262,-3.577068,-8.369306,-1.566030,1.359312,-4.412320]],[[-1.376725,-2.483840,-3.513429,2.755472,9.329668,-5.030917,-0.588702,5.684657,7.190698,-7.996134],[-8.357063,3.149256,-6.747347,-5.655375,-1.491458,-1.349010,-9.509617,-8.640688,0.099674,-5.003351],[6.839468,7.226473,4.244239,5.020222,7.337212,-5.857327,-6.453732,-4.208011,5.365055,-8.182789],[-0.027095,-3.570033,-7.593080,3.653457,-3.319487,-1.804768,4.522012,1.313939,-2.369918,2.810619],[-8.083901,0.456001,1.508743,6.565450,-6.441020,-8.961228,6.586064,-8.200781,4.592443,2.485421],[8.566502,-5.038990,-7.657029,1.941292,-1.187503,-6.720384,-5.949309,-5.806298,-0.060642,-8.262094],[4.408758,4.051509,1.912230,-2.860122,9.951556,-9.195182,2.117343,9.097759,-1.636915,-7.413361],[-2.509864,4.679325,-4.710413,-0.958182,-0.433669,-5.292050,-3.966804,-8.170494,2.769271,-6.032693],[-5.102988,6.899457,5.280459,9.726189,-9.143419,9.195356,2.246920,4.605957,-5.694088,-1.746137],[9.051541,-7.330426,-6.103796,2.680949,-9.363898,-2.755898,1.044835,-3.623582,3.782306,-7.947042],[-6.412240,-0.601255,5.058607,5.733270,6.510753,-1.549749,-8.905524,-7.002325,2.020172,-9.219059]],[[-8.077780,-5.435826,6.932316,-5.997012,2.964776,-4.034136,-1.388055,0.097720,-5.301574,1.453962],[-5.504570,-7.191498,8.261110,1.736846,7.777288,-5.131657,-0.023408,8.220744,7.885316,-1.507333],[-4.923574,-5.243378,8.793740,-7.177634,9.843195,-7.256285,5.339933,-7.968313,5.894795,2.155633],[-4.401058,-1.896802,8.526566,-5.583324,-5.667635,2.369212,5.509667,2.583125,5.760678,-8.759791],[-2.818429,-1.592948,-8.579885,-2.309951,-1.329353,-0.196944,3.760671,7.081011,-6.632894,7.553201],[6.121663,6.104767,1.950748,9.256087,1.790469,8.848348,-9.822164,0.555471,-1.410497,4.844974],[-6.713517,9.436017,-3.683922,-5.771057,-6.804185,3.309189,-5.136853,-5.102521,-8.380087,-4.475161],[-1.068521,0.263679,7.097168,2.147075,-4.263256,-6.590860,-6.697649,-4.454288,-8.972797,0.829172],[-8.544905,-3.227259,4.446536,-9.354567,7.543729,7.030116,-5.529301,-9.741266,-4.521757,-9.409884],[-0.146312,0.492800,-4.482359,-4.513421,-2.553842,-6.588317,-0.979939,9.361153,2.336880,8.040275],[-4.358980,-6.453210,6.682254,-5.085309,-7.286805,-5.084273,9.052686,2.496025,6.810149,-6.367591]],[[2.442245,1.278898,-7.096733,-6.557231,-4.807599,-9.853851,-7.149714,-2.377175,5.219091,2.101196],[2.985052,2.035637,5.035231,-4.606347,-5.973471,-7.913383,7.388927,6.967825,-1.704067,-3.456000],[-7.361546,3.637040,5.724508,-1.530465,-4.767857,0.413503,-2.313523,-4.825498,6.803379,-2.089076],[-4.154139,-7.344482,-6.239555,7.595423,7.842399,-3.726706,-1.155714,-6.388925,8.800158,-8.011914],[3.555206,1.517249,-3.121110,0.993635,-7.225374,2.578810,5.824840,8.256161,-0.370542,-1.106902],[-3.838006,1.458456,1.884847,-0.927858,-2.899719,-5.251441,-0.138340,4.427709,-0.415765,0.093185],[1.963230,0.437982,-0.233308,-1.941233,4.816419,-5.605497,9.097996,-6.707747,3.264591,1.199229],[2.632963,6.187076,5.141214,4.963608,-0.412507,2.765217,9.919729,-9.118071,4.633805,-1.527915],[8.359818,-1.781610,-0.004120,7.561794,6.563951,-0.158894,0.759552,7.584503,-6.944790,-4.255841],[5.781807,-4.065986,-9.345210,-7.426243,-5.464244,-0.285626,0.598700,-0.134128,3.628182,1.029763],[0.295214,4.878077,-5.984874,2.910847,2.626007,3.501491,8.470141,-0.815321,-4.995481,7.017732]],[[2.886098,-8.242529,-1.617029,0.448045,1.704317,5.080136,-4.839903,1.229738,6.514640,1.335595],[-6.277631,6.849854,3.781132,7.491078,-8.375922,-6.964980,-1.100340,-6.459198,7.744950,-1.577792],[-8.025983,2.741251,-4.058814,5.902571,-5.651393,3.799420,4.744046,-3.727400,-4.501214,-2.880702],[4.476558,-8.154647,-8.843447,-4.381021,-5.807269,-4.225451,-8.364501,1.788106,-7.237653,-7.211552],[-5.871246,0.667358,-4.455714,-6.159756,2.086684,2.885145,5.000646,-5.955030,-2.048685,0.524583],[0.420755,-2.394349,-0.017549,-8.264532,-0.845334,5.746806,-2.349505,0.355926,-7.620163,6.186929],[-6.354722,-7.221220,2.019759,4.346354,-5.622835,-9.880811,-1.538575,3.387094,2.277961,7.242217],[9.860056,-6.678236,1.198711,-9.789415,5.285851,5.199713,5.849765,2.553036,-2.945825,-4.164026],[4.651703,-7.227187,3.311211,-8.744559,-1.852016,6.404480,-0.463263,1.810550,6.678369,-1.782198],[-1.971194,-6.424053,0.759183,-4.438650,8.811300,-5.824610,1.984810,-4.756438,4.860528,5.014948],[3.109322,6.067255,-3.280139,3.051393,-1.279430,-5.961757,-2.941712,-1.734329,-5.209961,8.633869]]], dtype = "float64")#candidate|673|(10, 11, 10)|const|float64
uop_674 = relay.atan(const_673.astype('float64')) # shape=(10, 11, 10)
output = uop_674
output2 = uop_674
func_676 = relay.Function([], output)
mod['func_676'] = func_676
mod = relay.transform.InferType()(mod)
output = func_676()
func_677 = relay.Function([], output)
mutated_mod['func_677'] = func_677
mutated_mod = relay.transform.InferType()(mutated_mod)
const_707 = relay.const(4, dtype = "int32")#candidate|707|()|const|int32
var_708 = relay.var("var_708", dtype = "int32", shape = (3, 3, 15))#candidate|708|(3, 3, 15)|var|int32
bop_709 = relay.add(const_707.astype('int32'), var_708.astype('int32')) # shape=(3, 3, 15)
output = bop_709
output2 = bop_709
func_714 = relay.Function([var_708,], output)
mod['func_714'] = func_714
mod = relay.transform.InferType()(mod)
mutated_mod['func_714'] = func_714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_715 = relay.var("var_715", dtype = "int32", shape = (3, 3, 15))#candidate|715|(3, 3, 15)|var|int32
func_714_call = mutated_mod.get_global_var('func_714')
call_716 = func_714_call(var_715)
output = call_716
func_717 = relay.Function([var_715], output)
mutated_mod['func_717'] = func_717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_807 = func_676_call()
call_808 = func_676_call()
output = relay.Tuple([call_807,])
output2 = relay.Tuple([call_808,])
func_815 = relay.Function([], output)
mod['func_815'] = func_815
mod = relay.transform.InferType()(mod)
output = func_815()
func_816 = relay.Function([], output)
mutated_mod['func_816'] = func_816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_861 = func_676_call()
call_862 = func_676_call()
output = relay.Tuple([call_861,])
output2 = relay.Tuple([call_862,])
func_865 = relay.Function([], output)
mod['func_865'] = func_865
mod = relay.transform.InferType()(mod)
output = func_865()
func_866 = relay.Function([], output)
mutated_mod['func_866'] = func_866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_815_call = mod.get_global_var('func_815')
func_816_call = mutated_mod.get_global_var('func_816')
call_874 = relay.TupleGetItem(func_815_call(), 0)
call_875 = relay.TupleGetItem(func_816_call(), 0)
output = relay.Tuple([call_874,])
output2 = relay.Tuple([call_875,])
func_878 = relay.Function([], output)
mod['func_878'] = func_878
mod = relay.transform.InferType()(mod)
output = func_878()
func_879 = relay.Function([], output)
mutated_mod['func_879'] = func_879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mod.get_global_var('func_865')
func_866_call = mutated_mod.get_global_var('func_866')
call_929 = relay.TupleGetItem(func_865_call(), 0)
call_930 = relay.TupleGetItem(func_866_call(), 0)
const_942 = relay.const([[[6.715747,-9.380612,-2.687564,4.143420,-8.274397,5.661694,9.328983,3.235206,-4.322390,7.905636],[-4.413854,2.155885,5.409424,0.474707,2.763660,-2.704041,4.733035,-0.258229,5.450998,4.520362],[1.423920,-5.429723,7.569051,-4.066396,-8.904685,-9.460264,6.973941,-3.413598,5.622123,-4.230858],[-7.654944,2.451377,-2.270661,-4.723612,0.524396,4.878104,-4.996671,-7.381258,-2.598446,4.581370],[-3.531098,0.898899,-1.967937,-9.779910,6.111605,-0.248401,4.685351,-1.700834,9.727107,5.298705],[-5.321465,5.155080,8.638255,-6.313796,-0.236354,-1.606240,5.730366,9.724495,5.264901,-4.455761],[-6.759443,6.452710,-5.348683,6.815905,-7.019957,1.634898,-5.355356,8.463573,-5.177147,9.510406],[-7.806153,0.626156,0.447551,3.213414,-3.617569,9.063773,-4.504619,-8.480382,-5.341943,-4.054215],[1.065405,-4.973570,2.873306,0.447305,4.659545,-8.071169,-6.051499,-6.655550,-6.816232,1.588084],[6.497393,-2.589130,1.765816,-0.462869,-0.081187,-7.213255,-0.364739,1.453097,-5.214449,2.424844],[6.072910,6.295175,1.027455,2.895526,5.237755,-1.606127,-9.950633,-5.828750,-3.048993,4.639843]],[[-1.711127,-2.804692,-3.429179,-3.171363,-9.702715,1.212943,0.754271,2.851304,-0.112724,9.394683],[4.379949,-2.050882,-4.808111,0.899754,8.426754,6.748681,-2.940034,5.308669,-2.858960,-3.870302],[8.851982,-0.055060,-7.960767,-6.458512,7.406682,0.808278,6.384100,-8.241902,-8.168928,-3.148374],[-6.290432,6.960678,7.957821,-4.520293,-4.980975,-7.147508,-5.870802,1.366875,9.279593,1.231125],[4.289136,4.332620,-6.008947,-3.617746,-6.797861,-3.653281,-5.025896,5.475356,-5.071146,4.388324],[-5.227251,5.947608,9.350588,-4.218698,-7.210647,6.156379,-8.492318,-0.156775,-9.644388,8.017384],[-7.366015,9.694426,-6.955089,-4.216203,-0.477874,9.179256,-2.966435,2.308241,9.523446,-1.207111],[0.775741,7.583915,-0.723097,-2.421188,-9.250032,2.736196,-1.303773,-2.753574,-7.651165,8.407704],[-6.253520,0.491661,0.427856,-4.249610,-8.567248,-0.091538,-8.584887,5.922509,-2.444911,8.502185],[-6.521983,8.338996,-1.446036,5.394968,-5.848529,5.910541,7.974957,7.876636,-2.805116,-0.655131],[-3.887411,-6.652982,-9.659628,-9.967415,-4.674166,-8.255749,-9.902520,8.544342,4.174332,0.774207]],[[1.198990,-1.661668,-6.094395,-7.328441,-5.951703,0.258865,7.334553,3.114230,-1.136549,-5.447439],[-5.086012,2.583269,-7.654327,1.469507,3.640820,-6.939184,6.786768,5.476710,-0.427343,-8.580185],[-4.567444,-2.711032,-4.014660,-6.586440,2.636105,9.262281,7.701671,-6.706579,4.242745,4.445004],[0.500562,5.778741,-1.918145,-4.920612,-3.268126,9.082765,-2.193250,6.671668,-6.313911,7.933427],[-4.525548,6.911935,0.141759,-8.285663,5.172742,0.560589,0.470908,9.420799,-1.724214,-7.582471],[0.438259,1.583009,4.947952,-5.276943,-6.361110,2.030480,-8.980492,-5.747249,1.372290,-3.999035],[-1.794530,6.910248,-3.502835,-6.158603,-3.889334,-4.516732,-8.428769,3.519009,-5.403938,3.401592],[-0.466763,6.435463,1.070398,-4.807454,-3.823434,8.988493,3.543458,-5.333249,-6.288003,-3.514580],[-4.497325,-7.772786,-8.778703,-3.794403,0.524781,-7.329967,6.879768,-1.653676,5.388862,3.040350],[4.397062,8.218359,8.603256,-3.896452,-3.932677,-6.735455,9.870141,7.892426,-4.169551,-5.945882],[-3.386983,0.074936,3.306618,-4.127362,2.873895,-2.092831,8.487039,4.166477,-2.368837,-1.350384]],[[-7.443025,3.004605,6.951057,3.542955,-2.840405,4.048281,-5.132720,-4.125757,-3.338571,4.886672],[-1.904012,-9.323369,9.872503,-8.923160,3.650177,-8.719260,2.414952,-8.724819,-3.479398,5.963009],[8.936626,9.071142,4.254594,2.572837,3.808382,6.786748,9.642394,5.410380,4.293499,-2.019341],[-1.369595,-6.740029,-1.323269,-7.805474,7.742517,5.356328,-8.128915,-9.000442,7.305434,8.074885],[-3.557908,-1.539806,-5.987108,-4.344597,-8.756648,-3.812521,3.059170,-9.706311,8.667840,3.932854],[-7.649520,-4.060641,2.283526,4.349533,-1.118082,5.791482,2.517563,-9.283578,1.728498,-5.339208],[9.074999,-8.487445,1.819395,-5.222346,4.334214,0.681421,0.267145,-8.647349,5.721792,7.443839],[-3.636456,-1.137354,-5.414348,9.250230,-4.324244,7.346838,5.293390,-8.638426,5.116143,9.766346],[-1.839738,-9.795068,-3.459793,9.780931,-9.734391,-1.253577,6.209256,7.100126,5.105527,-6.781057],[-6.718091,-8.068883,6.830389,-5.226261,0.275444,-8.542311,1.353369,4.804811,1.795413,0.692477],[7.169583,2.045202,-5.665970,3.832797,1.607673,4.206871,1.245140,8.332446,5.799160,8.743026]],[[-8.650659,-9.719025,3.694800,2.575222,-9.641471,-7.613678,-2.202219,9.312279,-2.699027,7.676236],[-6.450848,5.323923,-2.703944,-2.958174,1.462684,-4.301452,2.328537,5.961809,4.911831,-8.907985],[5.760016,0.253023,-3.096500,-0.376648,3.431467,-1.427963,5.567645,-9.422984,4.831713,9.875491],[-6.317452,-1.945786,-4.075180,-2.270930,-8.075175,-7.806480,-8.640961,-6.311883,-9.335413,4.969241],[-0.609794,2.813419,-5.598281,5.237098,-8.032781,-9.777160,-4.072502,5.797565,-8.562404,-2.603686],[-1.992862,-7.423943,8.447843,3.554844,6.995957,3.766076,-6.764920,8.864775,-9.904688,-5.537526],[5.498779,-9.136674,4.257229,6.913896,8.290377,9.572678,-7.351026,-5.021750,-4.152937,0.181973],[0.240720,5.023363,9.488695,-9.276537,4.550876,-7.484454,5.512651,-4.852584,-1.403019,-7.754667],[-4.897474,2.174335,3.421634,-3.365853,5.827218,4.034683,-2.573524,9.691964,-9.767346,-5.377790],[-8.663324,-6.003986,0.291296,7.830488,-2.101949,8.753277,0.658723,7.447961,1.352411,-9.350684],[6.331390,8.621000,-6.864221,3.956278,-1.851004,-6.824409,0.232434,-0.283808,9.413278,-1.166803]],[[5.160996,-6.599228,0.358924,9.236252,5.987473,9.820599,5.901862,2.584391,2.915127,-8.953602],[-0.731876,9.486707,-6.763356,-5.608404,8.187157,0.599773,-4.330322,2.274433,-6.291738,-3.102708],[-8.317610,-9.013881,-6.266662,7.379933,4.098375,3.862371,-2.382143,7.659025,-3.464951,-2.347264],[-4.843814,-8.525130,-8.130793,-7.623494,-7.795476,-8.984372,8.142683,5.577191,-4.775367,2.591726],[-0.976090,5.551717,4.170991,8.582889,-8.997835,9.815137,-3.471572,-4.927761,3.558174,7.574262],[4.014783,-0.277330,-4.247159,1.376306,-7.002376,-0.139276,9.303400,0.251305,-7.393881,3.771982],[4.154149,-4.986614,-3.095470,-1.244340,5.490299,-9.193089,2.952427,0.203928,-2.586820,4.562882],[-3.540195,9.171330,3.463566,-5.195444,-6.324547,4.044708,4.307637,9.428416,-2.016082,7.531108],[0.677490,-6.199957,4.019604,-0.239420,-1.644098,-5.646296,-5.094429,5.764429,1.916000,0.931524],[7.935478,4.142939,-1.004909,-4.404764,-0.949290,5.957548,0.576483,-1.848132,1.951291,-4.640521],[-7.181594,-8.676330,8.958566,0.135579,-2.026713,-8.249119,1.245578,-7.125282,-5.036219,-5.375945]],[[-4.082774,-7.215007,7.868637,-1.006978,1.638217,3.736693,-0.647458,-6.476669,7.866763,-2.813035],[4.923789,0.734098,-6.607161,-6.325945,-5.435598,3.818365,-3.286899,5.509138,-8.433189,6.345327],[-6.888636,-7.423351,-2.907602,-7.421962,-3.434754,8.197416,4.390184,-8.067867,-0.148124,-0.349775],[2.053160,-6.317480,0.472452,1.553437,1.673409,-5.393951,9.733183,-5.035284,0.494002,5.232994],[8.547337,5.986660,5.554519,-8.098277,1.526042,6.056694,-8.828202,-8.273672,9.477719,-5.442805],[-5.390709,-6.068431,8.699235,-3.569673,-6.373569,-8.385830,-0.236431,-6.402310,7.896153,-3.199578],[-1.421800,7.809800,1.058322,-2.314903,9.437215,2.950418,6.758774,-4.109923,4.158382,-6.504679],[-3.475051,4.148735,-4.427783,9.383994,9.681906,-1.492872,9.196480,-6.046395,-7.786237,1.887047],[2.781729,9.019310,-0.782280,0.441203,-8.605198,9.069780,-7.368726,-1.420596,9.722605,-4.755977],[1.045100,-0.629984,-6.745264,3.046982,2.168114,8.039713,3.306698,-3.160046,-9.657870,3.129586],[8.585571,5.282653,-8.712383,-9.082433,5.891867,-9.467833,-2.138150,2.262413,4.123885,9.968935]],[[8.036623,-5.290938,8.139971,7.736598,-7.241105,7.653591,9.690495,-4.560378,-6.698276,9.293415],[7.546141,-8.216361,-1.018065,6.508168,-1.667194,2.562871,5.898803,-2.531480,-2.517692,-4.513362],[6.669126,-7.224639,-5.299571,-9.547894,3.765956,1.731213,3.128484,-9.757586,8.411844,9.564167],[-5.550779,-1.286314,-5.241108,6.440187,-9.510402,-6.162174,9.371643,-2.984497,8.869673,-1.041688],[3.951713,6.463395,2.081931,-9.355646,0.451809,-1.194084,-5.615630,8.737276,3.166106,2.372799],[-8.627392,3.549226,-0.616418,-1.456133,-8.110707,1.371445,-7.018434,-8.733772,-0.816688,-7.458229],[3.968316,-9.765512,7.303461,-6.060541,-0.542365,-5.205380,7.236391,-5.955168,-5.323863,0.755334],[4.867471,-9.994607,-9.277489,7.046063,8.866410,-1.444381,-2.597676,6.715531,3.894919,-6.577858],[2.400273,-7.999225,9.430205,4.040815,3.645698,-3.109942,4.515747,-8.679519,-0.167667,-3.817559],[-9.792563,-3.347554,2.750193,-3.502875,9.943397,-9.115333,-8.356008,-0.561122,5.521912,5.976195],[-3.098465,8.733533,-0.801917,1.533661,4.432062,-3.310075,9.498189,-4.962137,-2.984968,0.306964]],[[-2.500309,0.415117,-8.405612,-5.600533,2.669899,4.800005,1.814495,6.665777,-2.375557,-0.470359],[-8.566593,5.791592,9.833671,6.215272,9.790971,-3.296467,-3.614054,-2.547301,0.774799,9.721854],[-4.832119,-2.386287,6.082112,8.969902,1.918066,-0.150113,-3.422711,8.960421,5.537570,-8.641458],[9.095550,-9.562241,-7.637211,-4.299855,0.122996,-6.238257,-9.735968,-5.557549,-2.305907,-6.685960],[4.028408,9.959312,-0.588576,-4.586805,4.700345,-0.576597,3.944704,6.166057,3.866531,6.366020],[1.457880,-8.644602,-8.598080,9.006799,-9.522917,-0.366919,-4.450908,-2.195992,-2.658510,8.574671],[6.968228,-5.817003,-0.084527,-1.645994,-7.705408,5.114696,8.289367,9.278956,-9.168544,-3.177449],[-8.975921,-0.542692,-1.743031,-1.366190,3.083653,6.677069,2.150984,6.289613,2.514232,-1.947257],[1.738845,7.594726,4.150502,8.065533,5.068592,9.094539,-5.158327,8.992600,-1.433324,-3.145990],[8.851283,-1.087457,1.960196,-1.631642,8.879892,-6.017123,-8.020534,4.201771,3.222605,5.932367],[-9.140391,-3.807743,3.177475,9.949961,8.890520,0.692384,9.119527,-3.134275,-0.819882,6.073471]],[[5.243501,-8.573089,4.144792,1.118481,-2.748272,-2.808627,9.387439,-5.545523,-9.123271,-3.973582],[4.388676,-2.502794,6.988386,8.510559,8.818970,8.176107,3.626729,3.046552,6.629034,7.470316],[4.708197,-7.043699,-0.080390,5.504130,3.506183,1.613602,-5.953731,1.629036,-6.219362,9.390539],[-4.507874,-5.280140,-9.113545,-0.160878,-7.355689,-8.083219,2.630267,0.913211,4.621938,-0.371629],[-8.051053,2.893297,9.614731,1.122446,2.090879,-8.423724,0.604472,7.536551,-3.421615,-9.500067],[4.381082,-3.185013,3.881892,7.673879,5.861607,1.251921,7.795082,-7.490059,-4.419193,-2.317564],[-3.915000,7.594569,9.649872,7.997353,-8.008353,-2.769635,-3.875379,9.394816,-3.378573,-0.342259],[-7.397904,-0.843896,-6.115597,3.447498,-3.312718,7.105598,-5.325691,-5.847261,9.064203,7.393995],[3.466177,-4.937380,-2.511613,-6.544417,-9.294015,-1.789586,-8.923385,-6.878592,0.948817,0.116263],[4.576895,-6.165386,8.318253,6.022612,6.061211,7.714481,-5.938141,-5.535738,5.063482,-5.206967],[-6.546494,-2.012096,7.313843,0.159583,-3.764060,-3.130452,2.129216,8.245916,8.461984,-2.648642]]], dtype = "float64")#candidate|942|(10, 11, 10)|const|float64
bop_943 = relay.right_shift(call_929.astype('uint8'), relay.reshape(const_942.astype('uint8'), relay.shape_of(call_929))) # shape=(10, 11, 10)
bop_946 = relay.right_shift(call_930.astype('uint8'), relay.reshape(const_942.astype('uint8'), relay.shape_of(call_930))) # shape=(10, 11, 10)
uop_954 = relay.sqrt(call_929.astype('float32')) # shape=(10, 11, 10)
uop_956 = relay.sqrt(call_930.astype('float32')) # shape=(10, 11, 10)
output = relay.Tuple([bop_943,uop_954,])
output2 = relay.Tuple([bop_946,uop_956,])
func_963 = relay.Function([], output)
mod['func_963'] = func_963
mod = relay.transform.InferType()(mod)
mutated_mod['func_963'] = func_963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_963_call = mutated_mod.get_global_var('func_963')
call_964 = func_963_call()
output = call_964
func_965 = relay.Function([], output)
mutated_mod['func_965'] = func_965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_963_call = mod.get_global_var('func_963')
func_965_call = mutated_mod.get_global_var('func_965')
call_982 = relay.TupleGetItem(func_963_call(), 1)
call_983 = relay.TupleGetItem(func_965_call(), 1)
func_714_call = mod.get_global_var('func_714')
func_717_call = mutated_mod.get_global_var('func_717')
var_1007 = relay.var("var_1007", dtype = "int32", shape = (135,))#candidate|1007|(135,)|var|int32
call_1006 = func_714_call(relay.reshape(var_1007.astype('int32'), [3, 3, 15]))
call_1008 = func_714_call(relay.reshape(var_1007.astype('int32'), [3, 3, 15]))
func_160_call = mod.get_global_var('func_160')
func_163_call = mutated_mod.get_global_var('func_163')
var_1020 = relay.var("var_1020", dtype = "float32", shape = (189,))#candidate|1020|(189,)|var|float32
call_1019 = relay.TupleGetItem(func_160_call(relay.reshape(var_1020.astype('float32'), [3, 7, 9])), 0)
call_1021 = relay.TupleGetItem(func_163_call(relay.reshape(var_1020.astype('float32'), [3, 7, 9])), 0)
output = relay.Tuple([call_982,call_1006,var_1007,call_1019,var_1020,])
output2 = relay.Tuple([call_983,call_1008,var_1007,call_1021,var_1020,])
func_1023 = relay.Function([var_1007,var_1020,], output)
mod['func_1023'] = func_1023
mod = relay.transform.InferType()(mod)
mutated_mod['func_1023'] = func_1023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1023_call = mutated_mod.get_global_var('func_1023')
var_1025 = relay.var("var_1025", dtype = "int32", shape = (135,))#candidate|1025|(135,)|var|int32
var_1026 = relay.var("var_1026", dtype = "float32", shape = (189,))#candidate|1026|(189,)|var|float32
call_1024 = func_1023_call(var_1025,var_1026,)
output = call_1024
func_1027 = relay.Function([var_1025,var_1026,], output)
mutated_mod['func_1027'] = func_1027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_815_call = mod.get_global_var('func_815')
func_816_call = mutated_mod.get_global_var('func_816')
call_1058 = relay.TupleGetItem(func_815_call(), 0)
call_1059 = relay.TupleGetItem(func_816_call(), 0)
output = call_1058
output2 = call_1059
func_1065 = relay.Function([], output)
mod['func_1065'] = func_1065
mod = relay.transform.InferType()(mod)
mutated_mod['func_1065'] = func_1065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1066 = func_1065_call()
output = call_1066
func_1067 = relay.Function([], output)
mutated_mod['func_1067'] = func_1067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_1091 = func_676_call()
call_1092 = func_676_call()
output = call_1091
output2 = call_1092
func_1099 = relay.Function([], output)
mod['func_1099'] = func_1099
mod = relay.transform.InferType()(mod)
output = func_1099()
func_1100 = relay.Function([], output)
mutated_mod['func_1100'] = func_1100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_878_call = mod.get_global_var('func_878')
func_879_call = mutated_mod.get_global_var('func_879')
call_1130 = relay.TupleGetItem(func_878_call(), 0)
call_1131 = relay.TupleGetItem(func_879_call(), 0)
uop_1152 = relay.erf(call_1130.astype('float64')) # shape=(10, 11, 10)
uop_1154 = relay.erf(call_1131.astype('float64')) # shape=(10, 11, 10)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1155 = func_1065_call()
call_1156 = func_1065_call()
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
var_1162 = relay.var("var_1162", dtype = "int32", shape = (98, 4))#candidate|1162|(98, 4)|var|int32
call_1161 = relay.TupleGetItem(func_333_call(relay.reshape(var_1162.astype('int32'), [2, 14, 14])), 0)
call_1163 = relay.TupleGetItem(func_335_call(relay.reshape(var_1162.astype('int32'), [2, 14, 14])), 0)
output = relay.Tuple([uop_1152,call_1155,call_1161,var_1162,])
output2 = relay.Tuple([uop_1154,call_1156,call_1163,var_1162,])
func_1175 = relay.Function([var_1162,], output)
mod['func_1175'] = func_1175
mod = relay.transform.InferType()(mod)
mutated_mod['func_1175'] = func_1175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1176 = relay.var("var_1176", dtype = "int32", shape = (98, 4))#candidate|1176|(98, 4)|var|int32
func_1175_call = mutated_mod.get_global_var('func_1175')
call_1177 = func_1175_call(var_1176)
output = call_1177
func_1178 = relay.Function([var_1176], output)
mutated_mod['func_1178'] = func_1178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_1232 = func_676_call()
call_1233 = func_676_call()
func_878_call = mod.get_global_var('func_878')
func_879_call = mutated_mod.get_global_var('func_879')
call_1241 = relay.TupleGetItem(func_878_call(), 0)
call_1242 = relay.TupleGetItem(func_879_call(), 0)
uop_1244 = relay.cos(call_1241.astype('float32')) # shape=(10, 11, 10)
uop_1246 = relay.cos(call_1242.astype('float32')) # shape=(10, 11, 10)
output = relay.Tuple([call_1232,uop_1244,])
output2 = relay.Tuple([call_1233,uop_1246,])
func_1250 = relay.Function([], output)
mod['func_1250'] = func_1250
mod = relay.transform.InferType()(mod)
mutated_mod['func_1250'] = func_1250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mutated_mod.get_global_var('func_1250')
call_1251 = func_1250_call()
output = call_1251
func_1252 = relay.Function([], output)
mutated_mod['func_1252'] = func_1252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1475 = relay.var("var_1475", dtype = "float64", shape = (10, 7, 5))#candidate|1475|(10, 7, 5)|var|float64
var_1476 = relay.var("var_1476", dtype = "float64", shape = (10, 7, 5))#candidate|1476|(10, 7, 5)|var|float64
bop_1477 = relay.floor_divide(var_1475.astype('float64'), relay.reshape(var_1476.astype('float64'), relay.shape_of(var_1475))) # shape=(10, 7, 5)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1488 = func_1065_call()
call_1489 = func_1065_call()
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
var_1499 = relay.var("var_1499", dtype = "int32", shape = (392,))#candidate|1499|(392,)|var|int32
call_1498 = relay.TupleGetItem(func_333_call(relay.reshape(var_1499.astype('int32'), [2, 14, 14])), 0)
call_1500 = relay.TupleGetItem(func_335_call(relay.reshape(var_1499.astype('int32'), [2, 14, 14])), 0)
func_815_call = mod.get_global_var('func_815')
func_816_call = mutated_mod.get_global_var('func_816')
call_1506 = relay.TupleGetItem(func_815_call(), 0)
call_1507 = relay.TupleGetItem(func_816_call(), 0)
output = relay.Tuple([bop_1477,call_1488,call_1498,var_1499,call_1506,])
output2 = relay.Tuple([bop_1477,call_1489,call_1500,var_1499,call_1507,])
func_1512 = relay.Function([var_1475,var_1476,var_1499,], output)
mod['func_1512'] = func_1512
mod = relay.transform.InferType()(mod)
mutated_mod['func_1512'] = func_1512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1512_call = mutated_mod.get_global_var('func_1512')
var_1514 = relay.var("var_1514", dtype = "float64", shape = (10, 7, 5))#candidate|1514|(10, 7, 5)|var|float64
var_1515 = relay.var("var_1515", dtype = "float64", shape = (10, 7, 5))#candidate|1515|(10, 7, 5)|var|float64
var_1516 = relay.var("var_1516", dtype = "int32", shape = (392,))#candidate|1516|(392,)|var|int32
call_1513 = func_1512_call(var_1514,var_1515,var_1516,)
output = call_1513
func_1517 = relay.Function([var_1514,var_1515,var_1516,], output)
mutated_mod['func_1517'] = func_1517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1564 = func_1065_call()
call_1565 = func_1065_call()
uop_1566 = relay.atanh(call_1564.astype('float64')) # shape=(10, 11, 10)
uop_1568 = relay.atanh(call_1565.astype('float64')) # shape=(10, 11, 10)
bop_1586 = relay.not_equal(uop_1566.astype('bool'), relay.reshape(call_1564.astype('bool'), relay.shape_of(uop_1566))) # shape=(10, 11, 10)
bop_1589 = relay.not_equal(uop_1568.astype('bool'), relay.reshape(call_1565.astype('bool'), relay.shape_of(uop_1568))) # shape=(10, 11, 10)
uop_1596 = relay.sinh(call_1564.astype('float64')) # shape=(10, 11, 10)
uop_1598 = relay.sinh(call_1565.astype('float64')) # shape=(10, 11, 10)
bop_1602 = relay.less(bop_1586.astype('bool'), relay.reshape(uop_1566.astype('bool'), relay.shape_of(bop_1586))) # shape=(10, 11, 10)
bop_1605 = relay.less(bop_1589.astype('bool'), relay.reshape(uop_1568.astype('bool'), relay.shape_of(bop_1589))) # shape=(10, 11, 10)
output = relay.Tuple([uop_1596,bop_1602,])
output2 = relay.Tuple([uop_1598,bop_1605,])
func_1616 = relay.Function([], output)
mod['func_1616'] = func_1616
mod = relay.transform.InferType()(mod)
output = func_1616()
func_1617 = relay.Function([], output)
mutated_mod['func_1617'] = func_1617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1616_call = mod.get_global_var('func_1616')
func_1617_call = mutated_mod.get_global_var('func_1617')
call_1623 = relay.TupleGetItem(func_1616_call(), 0)
call_1624 = relay.TupleGetItem(func_1617_call(), 0)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_1635 = func_676_call()
call_1636 = func_676_call()
output = relay.Tuple([call_1623,call_1635,])
output2 = relay.Tuple([call_1624,call_1636,])
func_1646 = relay.Function([], output)
mod['func_1646'] = func_1646
mod = relay.transform.InferType()(mod)
mutated_mod['func_1646'] = func_1646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1646_call = mutated_mod.get_global_var('func_1646')
call_1647 = func_1646_call()
output = call_1647
func_1648 = relay.Function([], output)
mutated_mod['func_1648'] = func_1648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1099_call = mod.get_global_var('func_1099')
func_1100_call = mutated_mod.get_global_var('func_1100')
call_1732 = func_1099_call()
call_1733 = func_1099_call()
uop_1736 = relay.tan(call_1732.astype('float64')) # shape=(10, 11, 10)
uop_1738 = relay.tan(call_1733.astype('float64')) # shape=(10, 11, 10)
func_246_call = mod.get_global_var('func_246')
func_249_call = mutated_mod.get_global_var('func_249')
const_1742 = relay.const([3.723519,5.116077,1.145806,-3.602778,-8.692342,-7.011869,-5.250254,-1.356321,3.588961,7.938521,-8.052652,-1.423720,-5.447601,-8.627447,3.426574,1.844965,-9.568107,2.641163,3.816011,-0.085030,-8.459583,-2.138852,-7.758817,-2.551399,7.652767,8.457560,-7.759460,9.674038,-9.258886,5.548084,-3.035932,-4.231669,9.181018,-2.489061,-3.364007,1.700476,0.501509,4.090036,-1.621583,-6.081779,6.719616,3.345896,5.961057,-7.564192,9.672287,2.633345,0.446398,-8.991538,7.961497,2.927372,-6.750928,9.315455,9.547617,9.473497,-4.368434,9.071817,-4.346204,5.345474,1.365687,2.377593,5.890156,-0.586519,-2.197095,-2.955993,-0.626477,2.447559,-1.825634,-1.912716,6.489562,6.266415,8.787531,-4.337291,-1.586680,1.577590,7.223202,-5.302767,-9.358348,6.152240,4.425306,-3.611004,-9.634291,-9.621587,-8.670532,-5.532360,2.395671,6.685670,-5.192204,-6.882087,-0.136955,6.269956,-1.436291,-9.926382,-5.436180,2.486574,8.706638,7.293457,-8.886825,-8.768155,7.513056,-1.218065,3.891975,2.048980,7.674046,-2.177193,-4.550374,-6.560708,1.800464,6.178086,-1.527094,6.403784,-8.931545,8.348280,2.897622,-9.379938,-6.562814,4.913576,-6.069186,-8.425396,-7.219734,5.207433,-0.986776,6.678887,3.461736,3.356033,5.804794,3.726686,-8.885853,-4.034684,5.726673,-2.737582,-2.941850,3.298535,-6.600148,-5.818751,-0.193218,7.873784,0.025133,-1.249905,4.124530,9.429707,-3.606692,9.143897,2.865282,-5.881352,-0.457229,4.072548,-5.779736,8.687643,-3.370689,6.894900,-5.543280,3.056727,8.427595,-7.616205,2.918803,-8.266366,-4.095320,-1.441691,4.017621,-0.832310,4.830291,-4.323582,-2.313339,0.878591,-9.862975,2.659838,1.798604,-4.655392,-9.381985,-9.831555,-8.534717,-5.905930,-5.033590,2.028804,8.739091,7.358228,0.182818,0.054716,3.479790,-7.928760,1.147146,-3.606629,-8.448656,-4.636619,1.411098,-8.148449,5.028411,0.865364,-3.112259], dtype = "float32")#candidate|1742|(189,)|const|float32
const_1743 = relay.const([-4.187352,4.882341,-5.011420,-4.013208,-1.316158,-9.578043,2.867069,3.173522,-0.771868,-4.443060,6.036333,2.313656,4.256791,0.751487,3.930843,7.005077,5.635587,3.339773,7.959661,-8.911732,-1.236119,6.084208,7.086319,8.999160,3.825139,-3.026482,5.182144,9.839061,1.948548,3.456184,6.816289,5.208842,4.948790,-5.434789,-8.840114,-3.628098,0.483838,-1.102031,2.477652,-8.742534,2.808438,7.277440,-4.570272,0.754915,8.731757,5.751647,9.424839,6.943221,8.668589,-2.231939,-8.868577,-2.472856,-7.619645,-2.602853,-4.315357,-1.453113,4.935794,-3.857723,4.384701,-7.375229,0.066823,2.861092,-3.014435,3.241418,-2.270738,3.670821,2.594226,-9.319052,9.795700,9.304414,-7.610129,0.021976,3.602930,5.313638,-9.119540,3.571084,9.969677,-8.613501,2.784860,-7.120253,3.513040,-0.517123,4.170437,-8.014229,8.734925,8.604213,-6.529423,7.584432,-4.423846,-0.916425,-3.658026,-2.626211,-0.044868,3.597013,3.002495,9.810667,-2.653173,3.846217,-9.955218,-2.301578,7.851127,1.785752,-5.221368,4.014810,-5.648278,3.614762,1.122035,-5.617524,1.618382,6.844592,9.525374,4.407101,-4.903045,-1.945451,1.573097,-4.854806,-0.134159,-5.315976,-6.875033,9.392452,8.227123,-4.229499,8.732104,-0.356892,-6.750461,8.540823,-4.441664,5.296201,7.137475,4.057363,-0.116827,6.165469,-7.005130,-1.203854,3.853853,7.208853,-8.230653,9.368792,-7.914675,-6.765647,7.317565,3.277287,9.523821,-4.096125,-4.297313,9.505910,4.009095,4.135319,-1.149585,-2.549103,7.389189,-4.726789,5.700010,2.039553,2.720480,3.258460,2.272448,-6.166602,3.143238,3.670503,-0.692079,2.042579,3.469898,4.210743,-8.582327,5.736686,0.505541,1.406321,5.258353,0.584800,8.859414,3.134334,5.267984,5.367480,-5.920936,-6.081720,2.401917,-3.343533,-9.853621,-3.607135,-6.919835,-8.099528,9.877800,-5.794821,0.517407,6.574002,-6.746503,8.566398,-2.780027,4.649907,-1.066870,1.755052,9.655842,-2.959744,-3.711580,-5.666545,2.618622,-5.485302,-3.295809,4.216744,-2.503549,-5.428763,-2.725281,-8.662271,-3.867455,8.935396,1.086697,-3.138088,1.972830,-0.335522,8.365290,-3.462042,-7.237287,9.761666,1.716228,-7.643607,1.868490,9.679185,-2.685251,-7.818023,7.473951,2.766314,1.151833,7.376628,2.320745,-4.267535,-6.073215,0.632170,6.479865,9.444023,1.791993,4.713185,3.959534,-8.139475,-6.963563,-0.106058,6.227233,4.684330,-1.897185,5.141817,-9.617060,-5.717582,-9.477800,2.327847,9.457525,-8.049742,-8.393217,6.150823,-8.063473,-5.760002,2.710549,-4.376101,-8.716557,3.978901,-4.883066,-0.558664,-3.333183,3.211612,-0.808711,-3.939296,-4.091093,2.410595,-9.994182,-1.965079,-8.392133,-6.194393,0.638912,-7.076017,-7.201456,-3.608818,-5.901896,8.645435,-2.253573,1.788472,-7.382522,-6.686943,0.261034,5.198833,-1.291466,-9.641561,-9.397523,-8.590087,-0.948468,-6.861342,-6.072638,2.262319,0.131530,6.427312,-8.311589,6.022822,6.208016,1.974799,3.576616,-0.989710,-0.511760,-2.722554,2.111534,-4.922575,-2.167483,-5.173673,-3.387398,4.745576,7.867068,6.274200,-0.656137,-7.200556,-8.653035,-0.168038,-6.781172,9.217844,3.240942,-1.842960,4.928512,-1.251828,4.057014,-0.087974,6.823538,1.636663,0.956987,-9.246400,5.501593,0.346581,-7.773767,3.580851,-9.484529,5.049611,8.130054,2.007911,-0.403248,-1.761458,-9.750916,5.394201,-1.279616,-6.278850,1.045597,2.980189,0.095928,-6.107539,-1.947275,8.821972,6.223823,1.399034,-0.997807,2.112934,-1.808955,-7.810783,-9.974041,-1.477190,-4.193036,-9.141501,0.720312,2.448563,-8.481212,-1.506906,8.285442,-1.280354,-4.430355,4.629636,-2.373510,-2.758423,-9.972521,3.035127,-2.798819,-8.271977,1.856257,3.469654,-2.320881,6.595664,-0.403753,-3.218852,2.016973,-0.891222,-0.665451,-3.105613,-8.016743,2.655150,0.796282,-3.194900,3.976965,1.496706,1.767583,7.380872,3.101197,1.860966,8.229332,6.343047,-9.712005,-1.042214,-4.218643,8.200191,7.487342,8.362986,7.636322,2.170526,-7.264107,6.979903,5.331013,-6.351256,-7.295592,-2.845651,7.710840,-5.420506,-0.376598,-2.741614,-6.934853,4.904209,-6.898529,-3.322195,-4.832784,-3.934767,-3.638799,1.821378,3.944519,-9.666133,1.986043,8.834879,6.090714,-1.819772,-4.168308,-7.218837,-6.732606,4.304318,-2.464363,-9.031580,9.504303,-5.512414,0.940574,9.666520,3.420122,-2.032138,-0.250532,7.281867,6.354292,7.815799,-4.464499,-8.068860,-8.504369,2.998131,-9.117590,9.887811,9.228380,9.995897,5.985908,2.913478,2.890504,6.771672,7.996052,5.433625,-4.877320,-4.880349,-2.461405,5.198580,-7.237650,8.772787,3.954331,-0.055092,-7.904850,6.620499,-9.659526,-4.278560,-7.869388,-5.577600,-8.598124,-8.277887,-1.449639,8.201707,-5.808844,6.239627,-1.525074,2.035757,-3.902070,-4.184230,9.217531,-6.687625,-1.607182,0.966993,0.586506,-6.799984,4.802388,-1.488954,3.998358,-6.040727,0.434788,7.292317,8.768158,3.268274,-1.485173,-4.378624,4.205448,-1.453506,-5.682683,-1.170311,9.966258,6.152585,0.347077,-5.348686,-2.506188,-2.630076,1.893977,8.361396,-3.663793,-2.171731,-0.168408,6.453692,3.193261,2.521513,8.601226,6.795467,-9.208333,-4.939180,6.580497,-9.554175,7.467071,9.105032,-2.497923,0.047132,6.961303,-3.103835,4.510074,5.998173,6.509042,-2.977657,-3.924779,2.827363,-8.603594,-5.136083,-2.004566,0.774660,-7.454991,-6.209814,1.340060,5.558285,6.684677,-9.978870,1.330255,-2.835444,-4.707490,-7.716038,-7.249624,3.169351,0.100416,-6.104282,3.364176,3.182320,-5.357094,-1.792215,-3.434638,-0.971070,3.799772,-5.826273,-6.885233,6.935242,3.470473,6.655714,0.873188,-9.311382,3.701448,9.940000,1.685329,-1.986612,-4.731225,6.638061,-4.984530,7.252199,2.416911,0.267050,-1.252455,-2.545042,-5.093035,8.452430,1.837836,-6.522358,6.257272,0.059394,-6.857918,-3.734784,-3.183010,7.978073,-8.461679,0.139151,-3.943469,1.451119,6.412789,-2.319763,-0.474356,-9.139799,-7.299335,-2.545018,-1.280278,-1.287977,4.395816,8.300235,-8.705415,-8.855828,6.476945,-2.175289,-7.734450,-9.853496,-8.657252,4.887438,3.504065,-7.904352,-7.680953,7.464554,-2.814302,-3.359575,-3.635394,9.562599,-7.989572,9.506067,3.105655,-2.538580,-2.811884,-0.184047,7.745045,6.682752,5.224197,-5.674485,-3.673061,-8.791961,9.483070,-5.615988,-3.011429,1.309496,7.806586,6.499244,-4.870966,1.882265,-5.465163,5.950147,7.680583,-6.756969,-5.016787,2.126916,-6.149365,6.466600,-7.758756,-0.808056,-8.565758,1.424194,-3.151843,-0.348003,-2.413747,7.483215,0.792526,7.473827,4.354681,0.183470,-4.313791,-2.714298,-9.549069,9.258030,9.773315,-1.420154,7.483013,-1.761822,-8.193357,-8.648401,-4.887785,1.124106,4.777267,-5.339320,8.735176,-1.984575,-6.620806,-3.801152,6.221669,1.882152,5.117541,-0.230478,-6.552182,6.917149,5.659817,1.928150,5.432681,-1.759441,6.365745,-0.203873,-6.880295,7.103230,6.757626,-2.039286,3.483041,-7.163773,9.693604,7.242890,6.375879,-4.940539,-7.439644,-8.647890,-5.449244,-9.809201,4.751262,-1.645211,-1.881802,0.927570,-0.778869,-9.663706,4.382389,-3.733749,9.937367,-9.141836,-5.622071,4.542916,6.296431,4.740775,-4.726883,2.537700,-2.185221,-7.571142,4.715394,-8.378394,4.782585,2.919733,6.119235,5.490212,2.728735,7.150892,-7.864312,7.447736,-0.225151,2.838142,-9.498927,6.314602,8.446914,3.587361,1.635271,-8.670558,-1.430267,4.469930,1.627907,-1.038461,3.310204,9.966496,8.558200,0.716423,7.859781,-3.634965,2.175494,-7.236297,5.923717,-1.337834,1.302151,8.117078,-9.305703,-3.597278,9.450856,7.391497,-9.728521,-2.828790,0.663093,-6.702151,7.093559,-9.207199,-9.800943,6.210513,8.588669,-1.648348,-6.300631,-9.501105,-0.822283,-0.887032,-7.986199,-9.511443,-5.988749,-2.919363,-7.681567,-6.835245,2.231297,2.711768,2.483058,-0.227374,-6.242458,-0.039340,-3.704534,2.958270,8.613346,8.922985,8.971276,-2.396950,-6.972478,5.712035,4.512340,-4.830975,7.729426,-5.602415,-9.366886,8.345193,7.466825,7.753059,-4.116874,2.624315,3.217404,1.489431,-1.362958,-9.209380,-6.251261,-2.046061,-6.228255,9.078802,-6.963014,-2.272513,-6.623119,1.993910,6.866545,2.672064,1.081258,0.775351,2.444275,-8.907556,7.194982,7.230089,-1.129663,1.973255,-6.767408,-3.753273,0.475970,-8.065632,-5.911121,5.337173,-6.591563,-4.420512,3.460460,-5.516323,-2.035971,6.275372,-9.924922,-2.738469,-0.804129,7.073806,-9.109493,5.389356,-9.420442,7.344265,5.325774,3.187201,4.847926,8.485757,4.625361,-3.097028,-2.634539,8.352774,-8.428596,-5.446433,-2.624816,7.873728,0.585026,-0.820693,-8.163557,6.837187,-8.414528,-5.226621,-4.772301,2.918217,8.556203,5.861620,6.275870,-5.959631,-2.878683,-1.225043,-6.613747,4.980674,-9.623889,-7.811689,5.463207,-4.213368,-1.976592,-2.325972,-9.687960,-3.956289,7.035411,-2.719358,0.446320,-7.633210,0.663490,-8.234407,-2.949429,9.919992,6.213788,-8.699619,5.217009,-5.774913,6.424016,-9.209652,-7.887992,3.194548,8.762522,-3.537642,6.014863,-2.915101,2.882521,-8.596236,5.426978,-6.023159,3.212062,4.617295,0.312693,-9.733952,-6.637743,3.315390,-4.974371,-4.167850,-8.129995,-6.711891,9.353957,-6.833729,5.808428,7.561106,-8.108946,2.383704,-8.818391,4.023342,-1.395260,-9.811349,-3.821439,-6.368951,-7.460029,-5.232599,3.454436,-4.294679,-9.143054,-7.316706,-0.280004,-5.055163,3.519430,-8.389759,-6.738952,-9.832060,-3.583915,-1.904956,-1.097548,2.403316,6.716344,0.952931,-1.812424,-9.004928,-2.098884,-3.958946,-8.617889,4.762908,-0.107006,9.714997,4.116886,3.819627,-1.851786,8.190303,-6.298427,6.038543,-2.576664,3.114828,2.186489,8.491438,-2.487777,-1.642987,-1.105124,-5.511551,0.527077,-3.414703,6.803710,-9.285277,1.443856,-6.257662,-3.989379,1.455478,-0.059945,9.517325,-8.007513,8.161280,-1.429101,1.511549,-3.458996,8.483659,9.226093,-2.439281,-4.509762,-4.989278,-4.140910,3.846384,6.258659,-6.019632,5.604098,9.958970,-0.818887,-3.537950,-4.716127,-1.660305,-9.477560,-7.868864,4.531104,-7.174254,-5.255044,8.267603,-6.611808,5.803687,1.794732,5.278307,-3.987204,3.777160,-2.283041,2.156073,5.383443,9.355177,-8.711241,-5.563978,-2.031800,9.038936,6.894143,-1.597291,5.652586,1.613215,5.100497,-0.242197,8.781166,-6.774855,0.913041,-7.855711,1.166437,-4.172280,-1.143540,5.780880,-6.624704,1.848804,4.680666,7.446079,9.636404,-1.135736,7.705783,-0.923259,-4.642245,-1.707517,9.693977,-6.789411,-9.856456,-1.588778,3.378782,-3.610282,-5.426668,-2.823326,8.265496,-1.291772,-5.774604,0.261077,7.390114,8.917643,-6.061168,-4.488907,-0.734020,2.181954,8.001552,9.605829,8.790009,-4.280965,6.604490,-7.078956,-8.657989,-5.082343,2.450276,9.638798,7.385054,-5.359664,-0.066740,5.320797,5.005359,-1.804832,-5.868591,-1.067932,1.333962,6.312434,6.002056,7.487369,2.668430,-5.665148,7.032119,0.475351,-0.313325,-4.412798,-6.140557,-8.847152,-7.482988,3.333284,-0.734050,7.380210,-1.467350,2.915204,-2.791280,-2.558134,-7.876354,-3.742516,-7.581959,-1.860104,8.365754,0.373169,3.078046,0.880818,-0.112215,-8.146409,-9.456946,-5.800730,4.929495,-1.428200,-2.969938,7.135481,-7.878206,-0.195615,9.736238,3.919467,-2.234020,9.387439,-1.776903,7.767447,4.412163,-4.986191,8.075780,-6.147488,-4.423425,-5.926020,8.799462,0.650880,2.620784,-4.772004,-7.158700,4.910752,0.039304,-8.593509,-5.900413,-2.658264,-0.660351,5.913832,-4.963192,-7.441942,0.769781,8.958456,-5.206465,-1.271515,1.362196,-9.406907,-2.682000,-6.651134,-4.477194,-1.992817,-4.749616,-0.669169,6.679078,8.872708,-8.101513,-9.533546,-2.394012,-8.148146,-9.858745,8.176936,-0.024763,4.114993,9.596337,-3.829423,2.029800,-8.158767,1.267956,-8.882759,9.729696,-0.561139,0.697313,8.770349,4.387007,-5.077687,-3.183438,8.107287,0.289274,7.234269,-8.826929,1.093485,-8.506363,3.476104,-7.647845,-5.810248,7.188787,4.679993,6.377514,0.349479,6.151009,-1.844238,5.029587,-7.824092,7.304511,4.165923,5.231541,3.483338,7.755842,7.877161,-0.601729,1.468046,5.436011,-4.417454,6.724809,9.598769,2.364029,-6.738365,1.928949,8.790782,-8.474786,-2.915087,0.068995,-0.016146,-1.343023,5.289238,5.985033,7.316207,5.626747,-4.422515,7.672431,0.091301,0.666492,5.755767,-3.603230,6.825549,9.270960,-0.793310,3.603310,1.926466,9.468116,-0.796197,7.098642,3.341706,1.652155,7.670253,7.604832,6.595432,-1.463469,4.203292,-0.999771,-0.542062,-8.175348,-6.453070,2.495569,9.585034,-6.553949,0.105076,4.768000,7.519548,-7.164593,9.626536,5.269570,9.611685,4.378077,0.114509,1.404073,-2.840969,-5.337934,-3.598035,-9.673166,-0.522471,3.042675,1.683735,-2.526251,-3.929672,7.345612,-7.959677,-1.922479,9.220091,-7.035356,1.994854], dtype = "float64")#candidate|1743|(1260,)|const|float64
call_1741 = relay.TupleGetItem(func_246_call(relay.reshape(const_1742.astype('float32'), [1, 189]), relay.reshape(const_1743.astype('float64'), [10, 14, 9]), ), 2)
call_1744 = relay.TupleGetItem(func_249_call(relay.reshape(const_1742.astype('float32'), [1, 189]), relay.reshape(const_1743.astype('float64'), [10, 14, 9]), ), 2)
output = relay.Tuple([uop_1736,call_1741,const_1742,const_1743,])
output2 = relay.Tuple([uop_1738,call_1744,const_1742,const_1743,])
func_1747 = relay.Function([], output)
mod['func_1747'] = func_1747
mod = relay.transform.InferType()(mod)
mutated_mod['func_1747'] = func_1747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1747_call = mutated_mod.get_global_var('func_1747')
call_1748 = func_1747_call()
output = call_1748
func_1749 = relay.Function([], output)
mutated_mod['func_1749'] = func_1749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_1757 = relay.TupleGetItem(func_1250_call(), 1)
call_1758 = relay.TupleGetItem(func_1252_call(), 1)
output = relay.Tuple([call_1757,])
output2 = relay.Tuple([call_1758,])
func_1759 = relay.Function([], output)
mod['func_1759'] = func_1759
mod = relay.transform.InferType()(mod)
mutated_mod['func_1759'] = func_1759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1759_call = mutated_mod.get_global_var('func_1759')
call_1760 = func_1759_call()
output = call_1760
func_1761 = relay.Function([], output)
mutated_mod['func_1761'] = func_1761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_815_call = mod.get_global_var('func_815')
func_816_call = mutated_mod.get_global_var('func_816')
call_1777 = relay.TupleGetItem(func_815_call(), 0)
call_1778 = relay.TupleGetItem(func_816_call(), 0)
output = call_1777
output2 = call_1778
func_1779 = relay.Function([], output)
mod['func_1779'] = func_1779
mod = relay.transform.InferType()(mod)
mutated_mod['func_1779'] = func_1779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1779_call = mutated_mod.get_global_var('func_1779')
call_1780 = func_1779_call()
output = call_1780
func_1781 = relay.Function([], output)
mutated_mod['func_1781'] = func_1781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1789 = func_1065_call()
call_1790 = func_1065_call()
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_1800 = relay.TupleGetItem(func_1250_call(), 0)
call_1801 = relay.TupleGetItem(func_1252_call(), 0)
func_1099_call = mod.get_global_var('func_1099')
func_1100_call = mutated_mod.get_global_var('func_1100')
call_1804 = func_1099_call()
call_1805 = func_1099_call()
bop_1807 = relay.greater(call_1789.astype('bool'), relay.reshape(call_1800.astype('bool'), relay.shape_of(call_1789))) # shape=(10, 11, 10)
bop_1810 = relay.greater(call_1790.astype('bool'), relay.reshape(call_1801.astype('bool'), relay.shape_of(call_1790))) # shape=(10, 11, 10)
output = relay.Tuple([call_1804,bop_1807,])
output2 = relay.Tuple([call_1805,bop_1810,])
func_1826 = relay.Function([], output)
mod['func_1826'] = func_1826
mod = relay.transform.InferType()(mod)
output = func_1826()
func_1827 = relay.Function([], output)
mutated_mod['func_1827'] = func_1827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1646_call = mod.get_global_var('func_1646')
func_1648_call = mutated_mod.get_global_var('func_1648')
call_1841 = relay.TupleGetItem(func_1646_call(), 0)
call_1842 = relay.TupleGetItem(func_1648_call(), 0)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1846 = func_1065_call()
call_1847 = func_1065_call()
uop_1877 = relay.sin(call_1841.astype('float32')) # shape=(10, 11, 10)
uop_1879 = relay.sin(call_1842.astype('float32')) # shape=(10, 11, 10)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_1882 = func_676_call()
call_1883 = func_676_call()
bop_1884 = relay.power(uop_1877.astype('float64'), relay.reshape(call_1882.astype('float64'), relay.shape_of(uop_1877))) # shape=(10, 11, 10)
bop_1887 = relay.power(uop_1879.astype('float64'), relay.reshape(call_1883.astype('float64'), relay.shape_of(uop_1879))) # shape=(10, 11, 10)
func_1175_call = mod.get_global_var('func_1175')
func_1178_call = mutated_mod.get_global_var('func_1178')
const_1910 = relay.const([-2,-10,-9,-3,10,-4,1,-8,-10,-6,8,10,-4,6,-4,10,1,8,8,-3,-7,1,8,3,-4,-8,9,-10,9,-2,3,10,-3,-6,-2,-9,-9,-6,-2,7,-8,-10,3,1,-8,-8,6,-6,6,1,-4,-6,-3,-2,-1,-10,-5,7,2,1,-2,10,-5,-8,10,-1,-10,-9,-1,-7,-1,-3,-7,4,10,-9,4,-10,-8,2,-8,4,3,-8,-6,9,1,-6,6,-10,-7,9,-8,10,9,-6,8,2,5,6,-4,1,-10,-6,8,3,4,-5,-2,10,7,-6,-8,-6,10,-6,-10,-2,5,5,5,-7,1,-3,4,-4,-9,-6,1,-10,6,5,-3,4,-8,-9,10,-2,-7,4,6,4,8,-2,4,10,-8,-5,4,10,2,-5,-7,-3,-1,8,7,-5,-4,6,9,-9,10,9,-7,8,-10,4,-1,4,6,-9,3,-9,-1,6,-8,-6,-1,6,5,9,-10,-3,-10,3,8,-8,-6,-8,10,6,1,10,-8,-1,-2,-6,-3,-3,7,-8,8,4,3,-10,7,4,-7,-9,-1,-7,3,7,-4,1,-6,6,5,9,-3,-2,4,-8,2,-7,-10,-8,-8,10,-5,5,8,-7,-3,-2,5,7,-3,4,2,8,6,4,-1,7,-3,-9,-4,-5,-3,3,4,9,3,-3,-5,-7,-7,4,-5,-5,-3,-9,-3,4,-5,5,-7,7,8,-6,-8,-3,-6,-4,7,-7,-6,-7,-3,4,-10,-7,5,-8,3,7,9,-8,-6,3,-2,6,-9,6,6,1,-10,2,2,8,7,9,-5,10,9,-7,-8,-8,5,-10,-3,4,1,7,-9,-1,10,2,-6,7,8,8,-4,-4,10,8,6,5,2,-3,6,-7,3,-2,-2,8,-10,7,-1,-2,6,4,-4,1,10,-8,7,5,-5,-3,-5,-10,-5,8,7,-9,-2,6,4,3,-3,-2,-6,-2,-5,7,-6,-2,3,1,2,6,-4,1,10,-2,4,-5,3,9,-4,6,5,-5,10,2,-7,-7,1,-9], dtype = "int32")#candidate|1910|(392,)|const|int32
call_1909 = relay.TupleGetItem(func_1175_call(relay.reshape(const_1910.astype('int32'), [98, 4])), 3)
call_1911 = relay.TupleGetItem(func_1178_call(relay.reshape(const_1910.astype('int32'), [98, 4])), 3)
func_1616_call = mod.get_global_var('func_1616')
func_1617_call = mutated_mod.get_global_var('func_1617')
call_1917 = relay.TupleGetItem(func_1616_call(), 1)
call_1918 = relay.TupleGetItem(func_1617_call(), 1)
func_878_call = mod.get_global_var('func_878')
func_879_call = mutated_mod.get_global_var('func_879')
call_1919 = relay.TupleGetItem(func_878_call(), 0)
call_1920 = relay.TupleGetItem(func_879_call(), 0)
output = relay.Tuple([call_1846,bop_1884,call_1909,const_1910,call_1917,call_1919,])
output2 = relay.Tuple([call_1847,bop_1887,call_1911,const_1910,call_1918,call_1920,])
func_1932 = relay.Function([], output)
mod['func_1932'] = func_1932
mod = relay.transform.InferType()(mod)
output = func_1932()
func_1933 = relay.Function([], output)
mutated_mod['func_1933'] = func_1933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1949 = relay.var("var_1949", dtype = "float32", shape = (8, 8, 5))#candidate|1949|(8, 8, 5)|var|float32
uop_1950 = relay.sinh(var_1949.astype('float32')) # shape=(8, 8, 5)
bop_1962 = relay.left_shift(var_1949.astype('int8'), relay.reshape(uop_1950.astype('int8'), relay.shape_of(var_1949))) # shape=(8, 8, 5)
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
const_1969 = relay.const([[2,-2,7,5],[8,-2,7,-3],[6,1,-4,-8],[2,10,9,-10],[1,3,7,-2],[9,-3,-7,-3],[10,10,10,4],[9,-7,-1,9],[-1,1,-2,5],[8,-10,-8,10],[9,-9,-10,-9],[8,-7,-7,2],[9,-7,8,-2],[2,3,-5,6],[-5,-10,-10,5],[-9,7,-1,3],[2,-10,-2,9],[6,-3,-7,4],[-6,8,-5,1],[7,9,7,-7],[4,1,10,1],[4,-7,-5,-2],[7,-4,-4,8],[5,9,-1,-4],[2,4,-7,-7],[9,9,-5,4],[2,-4,-4,-10],[-2,-2,-3,-2],[2,-6,1,8],[-7,5,-2,4],[6,2,2,9],[-9,1,-5,-7],[-6,-6,6,8],[-2,7,-1,-8],[1,-7,2,-9],[8,2,-2,2],[2,7,-3,3],[-6,-1,-3,4],[-1,-9,10,5],[-9,-3,6,8],[-5,-9,-8,6],[-5,2,6,-2],[-6,1,8,-6],[-2,7,-4,7],[-10,8,1,3],[-10,3,-1,-4],[-7,-5,-10,-1],[9,10,5,-5],[-6,-4,-8,2],[-3,6,4,-3],[7,-4,-8,-1],[5,2,-1,-4],[9,-5,-6,-5],[-5,-5,10,-8],[5,-4,-8,-1],[6,-2,8,5],[5,-4,-8,10],[-7,10,2,-4],[9,1,3,-2],[-5,8,-2,3],[-5,-8,4,-6],[-4,8,-6,4],[-10,-5,-9,4],[1,1,8,-9],[-1,-8,7,-7],[2,-7,-8,4],[-6,-3,-3,-10],[10,6,-5,1],[-3,10,2,-9],[3,-3,-6,10],[-3,6,-9,-10],[8,-5,2,7],[-4,7,4,-2],[-3,9,9,1],[10,6,4,8],[-4,4,-10,3],[-10,2,6,3],[7,9,1,8],[7,-1,-1,-2],[-2,1,1,-8],[4,-7,3,10],[-3,-8,8,6],[-9,6,-5,-5],[9,1,-9,1],[8,-4,1,5],[-4,8,8,-9],[10,8,-8,-2],[-6,6,-9,-9],[-4,-10,-10,9],[-7,-5,-3,-1],[-2,8,-2,4],[1,-5,7,-9],[-8,8,-5,1],[-5,6,-3,-1],[-8,4,7,-7],[-7,1,8,-7],[-3,6,1,2],[4,-2,-9,-3]], dtype = "int32")#candidate|1969|(98, 4)|const|int32
call_1968 = relay.TupleGetItem(func_333_call(relay.reshape(const_1969.astype('int32'), [2, 14, 14])), 0)
call_1970 = relay.TupleGetItem(func_335_call(relay.reshape(const_1969.astype('int32'), [2, 14, 14])), 0)
func_246_call = mod.get_global_var('func_246')
func_249_call = mutated_mod.get_global_var('func_249')
var_1994 = relay.var("var_1994", dtype = "float32", shape = (189,))#candidate|1994|(189,)|var|float32
const_1995 = relay.const([-2.246502,-7.441917,-4.364322,-9.783094,-5.733945,5.754878,-9.198145,2.009936,5.590837,8.277442,-7.911716,-6.416294,1.733259,-1.399822,-2.228235,-9.691425,-2.889636,8.447433,-0.670524,3.123739,-9.161756,0.613212,7.442609,6.446777,-7.835055,-0.248793,-7.350511,3.410262,-9.500767,4.986527,-7.139854,5.589995,-8.014845,1.148705,-7.637106,6.217290,4.866963,1.766189,-7.821791,7.190196,-1.831463,6.669089,-8.196257,-8.113904,-0.176018,2.874420,2.540418,-5.867690,7.993638,-0.617550,-9.574256,-1.107023,0.328029,2.766668,-7.345155,-2.491841,-6.760629,-8.856449,-9.167656,-7.687665,-4.593092,3.202638,-8.655753,0.233480,7.408367,-4.877004,3.574731,7.898593,-3.158096,-4.498964,4.058324,9.647599,5.422701,-8.632239,-9.597897,-0.016475,1.234127,-5.020083,2.165269,6.090499,-2.209804,3.799761,7.545830,-1.902731,7.720239,-7.325376,8.198880,-7.737084,8.870160,-9.004504,8.925672,-6.425878,-4.492166,7.036920,-4.129515,-9.018714,-9.522156,1.106733,-0.458037,1.852960,-7.163047,-4.993444,-8.501401,-5.536091,4.301036,3.417379,-5.740797,3.634819,8.874511,-2.716014,-0.970323,-2.615972,-5.383896,-6.773579,4.420681,-4.872388,7.844416,0.371874,-4.911349,-4.579233,-0.297238,-5.608986,7.663660,7.467484,-5.826991,7.609997,-2.446303,8.235093,5.166356,9.060372,-4.519134,-8.115544,-5.955683,2.169130,-6.099866,-0.579737,9.353908,9.434345,6.375397,5.353797,-0.724791,-8.029309,-3.392709,-4.590557,8.480104,-1.934499,6.587335,7.163094,-9.537420,-2.610250,-7.955538,7.606642,-0.347349,2.113961,4.163558,8.068414,7.612303,-0.871356,-5.957153,2.000354,-3.485192,5.108182,-5.009108,7.055856,9.903981,2.187892,0.935044,8.479522,4.645818,7.261822,-3.362833,8.311185,-1.731454,2.093063,-9.773101,-7.871594,2.048377,-4.630108,-8.019798,-7.509024,-5.575108,-8.402199,2.934401,1.317488,-4.907770,9.581963,5.935040,-9.500755,6.498409,-0.536430,-6.586199,-5.598842,-5.389296,9.313815,9.117496,-6.528938,-7.908742,8.994541,1.435800,-9.603657,4.898941,-3.028265,-0.953195,-7.889543,-5.937114,7.097551,0.912511,-5.292510,8.139265,-3.328134,-0.997334,-0.742135,6.808862,-6.171914,-3.476979,-5.547414,-0.308279,-5.504708,9.279267,-8.074222,-4.355422,-6.525990,-9.545782,6.173815,0.184343,-6.232829,4.014889,-7.697092,-7.871121,3.327965,1.777779,-8.146926,-5.105982,8.500552,6.611261,7.297686,2.098960,5.256526,0.098331,4.674369,-9.308469,-7.683674,-1.191070,2.420727,1.765690,5.274672,-6.675372,-3.514354,5.681482,7.377304,-0.251195,-1.570215,-5.239812,7.988561,-1.966236,-0.421231,-0.078083,-5.127191,1.406352,6.503758,-9.072223,-9.733698,-2.173763,6.194961,-2.927143,-4.093412,-5.846763,-9.407752,-6.339161,-4.387610,6.075637,8.536384,1.937332,-6.528801,9.941198,1.977260,0.594392,8.250523,-5.247550,1.337007,2.094079,5.666330,-9.249904,-3.653808,7.039116,0.366264,-7.296105,-0.609839,9.446637,-8.207650,-3.792791,-1.001386,0.756806,6.401131,4.547089,-4.341941,-5.137437,-2.480505,-4.186708,5.663051,2.243945,-5.150973,-2.927508,0.822133,9.026919,-6.414628,9.560066,7.887305,-5.024855,-5.693618,0.474218,-8.116242,9.617000,-9.770760,-1.413839,9.268487,5.007098,1.271596,6.897376,2.893741,-9.993559,-2.495228,-5.691230,6.600954,7.804406,-5.694800,-2.270682,-7.587775,1.374607,8.707042,0.128986,0.090611,-9.969568,-9.329434,3.227726,3.612165,0.981111,9.806499,4.792296,4.356771,8.347104,-3.721406,-8.593267,3.879796,7.180450,7.374952,4.630695,6.646309,5.863741,2.650627,0.145580,0.491436,8.536328,0.390321,0.075727,0.157086,-8.281392,-2.503482,-7.307621,5.603915,4.279765,-5.794830,7.372000,-3.874873,4.730288,-3.752299,-6.552129,-8.152466,-5.945030,1.917340,-7.623298,-1.913055,-3.665160,2.406371,-9.748518,-5.928272,-6.474281,6.433241,5.365356,-3.197820,0.564423,4.322346,-3.128945,1.384208,6.402161,-0.953746,8.498815,6.720599,-0.402145,0.933028,4.726708,-4.313066,-5.247352,8.325605,4.490818,4.275853,-3.152882,2.027235,-1.394525,-2.028015,0.826782,7.485554,9.448913,-3.757776,7.084507,4.770969,9.343007,-5.200136,1.164484,8.377321,-9.153427,0.845888,-4.593505,7.738493,-2.646161,-6.958904,9.908936,-4.428968,-1.647498,-0.024121,-7.892963,-8.338520,5.941210,-9.487394,3.392774,3.024884,-9.885595,-7.366847,7.932399,2.962016,6.780798,4.461013,9.244171,-1.616586,-5.602936,6.084003,-7.046880,4.017213,7.913914,-4.439684,9.737401,-1.742585,-0.346643,-2.982677,-5.212176,8.746883,-0.865644,-4.940019,4.003823,2.053597,3.952141,-6.322624,6.170053,5.994517,1.533817,8.591607,-9.564255,-5.089886,-6.270831,-9.349479,-9.626642,3.602153,3.950964,-6.860434,-2.663637,-3.278281,6.441700,8.619503,-6.961959,5.826540,-0.990480,0.246173,-2.532622,1.684691,-1.307062,0.936329,-0.445057,7.997916,9.017501,-4.109166,-8.718499,7.003870,4.247292,-2.539087,-5.390136,-1.573490,-9.323882,9.483539,4.831153,0.128683,-6.635288,2.089918,6.683626,-3.880922,-3.740730,-0.262505,-4.338131,-3.001100,-1.723742,1.060232,-4.915724,1.563655,5.595405,4.966122,-8.058993,1.870778,-9.996658,7.581391,9.222085,-2.932032,-8.898340,-6.483960,-8.207971,-9.309607,5.041310,5.381065,0.128888,-9.679065,9.831265,-5.430971,8.483204,8.982718,-8.152624,6.718977,-7.390338,6.953314,3.529318,1.388707,5.431586,-8.830335,-1.799131,-8.355995,9.659965,-5.267285,8.626020,-5.024985,-0.902518,-8.539285,-1.823505,5.115041,5.977154,1.803361,-4.596621,-0.976144,-8.264240,8.344196,7.186135,6.119316,-6.328442,9.544935,-5.469242,-0.057805,7.798176,3.065547,0.735346,2.071088,6.109641,8.039319,5.117584,7.505958,-3.829481,-0.562522,0.453043,-0.058025,-1.836128,7.774216,1.916405,6.861171,-3.354837,-5.645485,6.871946,-6.876937,-6.483983,9.644824,7.589175,-7.349393,8.413583,0.598416,-1.990088,-7.967075,-8.979258,6.321586,-1.086153,-6.129898,8.625533,-7.120298,-3.552785,8.523920,-0.194849,5.285333,-4.577915,6.888055,-1.194716,-1.501059,4.862687,7.709573,-0.061959,6.751977,-9.355276,6.371293,6.262119,-9.423581,-9.761793,-0.453075,-2.681239,-0.765848,9.810570,-3.805928,5.542084,-6.208182,-9.994145,-7.530718,-7.578395,9.232120,1.450135,-0.515580,-5.188956,1.366430,2.943397,8.651298,7.672006,-7.463782,8.717362,-9.805937,1.492541,1.131758,4.468800,-1.577786,-1.950501,-8.020357,-3.078415,-7.668337,8.489573,9.282725,0.380506,8.909763,-7.492132,-0.535906,-4.540329,-8.219865,0.232196,6.695430,3.935530,7.428321,4.128199,-9.679533,-3.943264,-5.882633,-4.134532,-1.265626,-1.351651,-4.336456,8.179331,9.003501,9.099682,4.022602,4.985466,3.605606,-9.112881,-9.279924,-0.394674,4.458470,8.667396,2.607177,1.619435,-7.377627,8.546534,1.769995,2.074016,-2.165397,-4.699015,9.924809,8.466345,1.895248,9.662120,8.207196,-0.036556,8.164677,5.911989,2.444777,-5.805331,-7.967575,-0.272381,9.100100,-3.919854,-5.812406,1.686018,1.418642,9.617118,5.961710,-8.014234,-8.887820,6.605753,9.325602,-9.158518,-8.317324,-9.947824,-5.914451,-8.185308,-2.811826,-9.369766,4.004798,-2.166014,-5.390656,6.747311,0.506751,-9.079483,-2.146340,7.012209,-1.023351,-6.010796,-0.385279,-1.003368,4.692474,-9.805286,0.921062,7.181913,7.687167,7.834617,8.951745,0.956115,4.037737,-8.555196,4.683111,1.474168,-1.109059,-5.267345,-0.555511,9.305812,7.295682,2.107084,-7.932985,-4.075480,-5.936527,1.501545,-6.290062,-6.002477,4.776365,-5.520724,-0.846833,-7.616247,7.921151,-0.667043,5.204930,-6.456650,9.064765,-8.224270,-8.599387,1.882736,-4.079020,-0.820847,1.860499,-9.716888,3.766305,-0.954059,-8.340656,-6.617957,4.392046,9.816782,1.385788,-2.264434,2.861536,-6.152928,1.199099,2.893030,6.070495,-5.694318,-5.290770,2.718277,4.362245,-8.454202,-8.789739,-1.283253,1.346658,8.379457,7.136675,6.438331,-6.985944,-1.363985,-6.952633,9.249566,3.581716,-5.477968,9.016572,8.004298,0.206852,-6.836641,1.837819,-8.597936,1.361064,9.549251,4.018935,1.328975,-1.071279,0.487602,8.258729,-5.933727,-9.813912,1.669392,-3.010955,7.945920,-8.980132,-9.528810,-5.576236,-7.047030,-2.585257,-9.363067,-9.124124,6.706228,8.120889,0.510111,4.165153,6.371448,6.570125,8.760663,5.443354,4.044305,4.954187,0.907780,-6.032965,3.199422,7.832779,-2.032475,0.862476,1.945828,-7.122755,-4.154450,-9.716670,-2.941691,-9.286646,-0.219902,-2.462058,8.174401,7.441600,8.008634,-7.849129,-3.721675,-2.165547,7.150254,-7.886936,-9.178654,-0.381778,-6.920771,-7.565669,-3.892657,8.091067,-8.967204,-4.094837,2.721655,4.777037,-4.763602,6.305443,6.049791,8.938243,5.445324,6.308407,2.596287,-9.027054,4.185570,-7.733921,7.126738,-8.763976,2.681135,7.699794,-4.381784,1.857462,-1.459023,0.653752,-0.248062,3.839104,-3.871205,8.891720,-5.030024,1.258293,-0.502705,5.823480,4.573722,3.189271,-7.391526,0.824581,5.017231,6.835517,5.903098,-8.690775,-2.150282,-9.091141,-5.562083,-6.396187,7.625917,-3.626999,8.774385,-8.632130,1.738911,3.415563,-8.727697,-4.235965,1.676894,-5.842527,-4.990093,-9.534271,-2.791638,1.410445,-1.999293,1.114287,-1.459933,1.601105,9.194614,-7.692693,5.930984,-2.971021,8.539324,-2.115066,4.352843,3.824229,9.512840,-8.013382,-1.039525,-0.220427,9.475393,1.785357,-0.146228,7.498079,-5.871376,-8.219078,5.149233,7.330779,-7.566608,3.844184,-4.524123,6.429887,-3.739039,7.716756,-3.798512,4.260129,7.853903,2.388084,4.357223,2.213674,-6.708693,8.663294,5.902321,-5.391394,-3.310735,8.767746,0.014736,-0.775675,-0.538966,-0.831416,-0.370405,-8.277636,-0.595765,6.235631,-5.972245,4.565847,-1.049545,-2.885464,-6.161132,0.845741,-0.950784,8.655500,-8.112288,2.606109,-5.491181,0.428335,3.965601,-3.258128,3.558334,9.698170,7.811014,-6.656490,0.931201,6.736403,-5.934187,1.398549,5.616695,-0.378585,-8.152489,-1.757571,8.260623,7.198302,9.171382,4.959987,4.599174,-0.604163,3.243735,7.146866,6.945696,-2.499500,9.636093,-1.542705,6.906593,-7.638017,-2.174596,-2.751989,-7.960064,-7.061631,6.074791,-0.996693,-9.451693,1.207235,-8.949414,-0.123196,2.049082,5.971044,-7.038359,7.396178,-6.748190,-5.599465,-7.422491,-2.823846,-6.457188,-8.118424,-8.645200,6.673666,8.428938,5.983728,8.886485,7.431267,-3.581026,9.274498,-0.208665,-7.878540,2.198830,9.064502,3.350410,-9.343628,-6.647546,-8.966309,-1.571020,2.874946,-1.769411,0.383263,2.446201,2.782426,0.643868,-5.869107,5.104400,-8.402416,8.514443,5.404577,3.816786,4.702520,-0.841662,4.924413,3.503754,5.656407,3.559234,2.905491,8.205910,-5.991599,4.092931,5.443984,-7.360302,9.312302,3.648030,-7.131492,2.803455,3.421665,0.515850,-8.442279,4.736140,0.370356,-7.216590,1.956377,5.204166,-3.498781,8.442818,2.732617,6.996734,9.322619,0.957835,1.805623,9.121549,3.105928,1.177285,8.817891,8.346901,2.311419,6.764798,3.598959,8.175813,-3.617050,8.321646,-3.756626,-7.554743,-4.645602,9.391628,-3.055789,-4.634842,-1.157603,5.705777,-3.661489,-7.314837,-2.011078,9.805285,-1.665597,3.657327,6.991750,-3.681053,2.487293,1.246260,0.466341,-0.556956,-7.734204,6.135268,-3.357120,-9.310613,6.751242,5.954483,7.161804,7.474315,8.879563,-2.720105,-7.219270,-5.972344,1.166118,9.042513,-7.043860,1.891594,-6.270643,5.329807,7.729556,4.375531,-2.720869,5.679411,6.040506,3.745638,6.245108,5.484311,0.791720,-8.270883,-7.328851,9.065395,9.820449,8.032501,3.423198,-3.209527,-1.252301,2.437460,-6.187179,-4.765247,2.166171,-0.887131,1.679766,-2.005564,3.300401,-7.682391,-8.072110,9.816295,-7.657802,4.122807,6.352121,-8.092828,-6.285236,6.149692,-7.696330,-9.284909,8.295135,5.855556,7.202869,1.923663,-6.406208,-0.692068,1.035146,-1.392426,-8.047131,2.145990,9.346222,2.179465,0.331229,4.374397,9.667856,-3.367369,-4.280382,7.901519,0.567838,0.841674,-2.876397,8.693250,1.151963,3.444540,6.248890,3.611067,6.774668,-5.316624,1.839826,-7.822974,-9.257103,-3.147492,-2.021828,-7.554995,-1.259273,9.925103,5.205246,9.302008,-1.018920,-1.779968,3.485307,7.467125,-2.649390,-2.221529,9.389692,-0.207810,6.140709,-4.876155,7.830001,1.039273,-3.272305,-8.071145,5.287438,-2.827428,2.775906,-8.018393,6.807420,8.896290,4.755316,1.372513,-3.764150,-4.259953,-9.645961,-4.033263,2.967220,-1.081033,-8.761282,2.243578,-8.649183,-2.096405,-6.917770,-1.463170,-3.681821,-7.470238,9.213859,-2.292954,4.187533,6.546387,2.670695,9.737331,-0.730335,6.020251,5.259127,-1.763451,-5.898100,0.077087,6.938798,-4.448938,1.557986,-2.906296,9.846215,-1.832826,0.269947,-0.775825,1.953651,-4.703339,8.474863,9.529593,-8.512334,-1.320121,-3.114436,-1.579197,-8.968633], dtype = "float64")#candidate|1995|(1260,)|const|float64
call_1993 = relay.TupleGetItem(func_246_call(relay.reshape(var_1994.astype('float32'), [1, 189]), relay.reshape(const_1995.astype('float64'), [10, 14, 9]), ), 2)
call_1996 = relay.TupleGetItem(func_249_call(relay.reshape(var_1994.astype('float32'), [1, 189]), relay.reshape(const_1995.astype('float64'), [10, 14, 9]), ), 2)
var_2017 = relay.var("var_2017", dtype = "float32", shape = (189,))#candidate|2017|(189,)|var|float32
bop_2018 = relay.floor_mod(var_1994.astype('float64'), relay.reshape(var_2017.astype('float64'), relay.shape_of(var_1994))) # shape=(189,)
uop_2022 = relay.asinh(bop_1962.astype('float64')) # shape=(8, 8, 5)
var_2024 = relay.var("var_2024", dtype = "float64", shape = (8, 8, 5))#candidate|2024|(8, 8, 5)|var|float64
bop_2025 = relay.subtract(uop_2022.astype('uint32'), relay.reshape(var_2024.astype('uint32'), relay.shape_of(uop_2022))) # shape=(8, 8, 5)
output = relay.Tuple([call_1968,const_1969,call_1993,const_1995,bop_2018,bop_2025,])
output2 = relay.Tuple([call_1970,const_1969,call_1996,const_1995,bop_2018,bop_2025,])
func_2030 = relay.Function([var_1949,var_1994,var_2017,var_2024,], output)
mod['func_2030'] = func_2030
mod = relay.transform.InferType()(mod)
mutated_mod['func_2030'] = func_2030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2030_call = mutated_mod.get_global_var('func_2030')
var_2032 = relay.var("var_2032", dtype = "float32", shape = (8, 8, 5))#candidate|2032|(8, 8, 5)|var|float32
var_2033 = relay.var("var_2033", dtype = "float32", shape = (189,))#candidate|2033|(189,)|var|float32
var_2034 = relay.var("var_2034", dtype = "float32", shape = (189,))#candidate|2034|(189,)|var|float32
var_2035 = relay.var("var_2035", dtype = "float64", shape = (8, 8, 5))#candidate|2035|(8, 8, 5)|var|float64
call_2031 = func_2030_call(var_2032,var_2033,var_2034,var_2035,)
output = call_2031
func_2036 = relay.Function([var_2032,var_2033,var_2034,var_2035,], output)
mutated_mod['func_2036'] = func_2036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_963_call = mod.get_global_var('func_963')
func_965_call = mutated_mod.get_global_var('func_965')
call_2067 = relay.TupleGetItem(func_963_call(), 0)
call_2068 = relay.TupleGetItem(func_965_call(), 0)
uop_2073 = relay.log2(call_2067.astype('float64')) # shape=(10, 11, 10)
uop_2075 = relay.log2(call_2068.astype('float64')) # shape=(10, 11, 10)
output = uop_2073
output2 = uop_2075
func_2078 = relay.Function([], output)
mod['func_2078'] = func_2078
mod = relay.transform.InferType()(mod)
output = func_2078()
func_2079 = relay.Function([], output)
mutated_mod['func_2079'] = func_2079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_963_call = mod.get_global_var('func_963')
func_965_call = mutated_mod.get_global_var('func_965')
call_2090 = relay.TupleGetItem(func_963_call(), 1)
call_2091 = relay.TupleGetItem(func_965_call(), 1)
output = relay.Tuple([call_2090,])
output2 = relay.Tuple([call_2091,])
func_2109 = relay.Function([], output)
mod['func_2109'] = func_2109
mod = relay.transform.InferType()(mod)
mutated_mod['func_2109'] = func_2109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2109_call = mutated_mod.get_global_var('func_2109')
call_2110 = func_2109_call()
output = call_2110
func_2111 = relay.Function([], output)
mutated_mod['func_2111'] = func_2111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2109_call = mod.get_global_var('func_2109')
func_2111_call = mutated_mod.get_global_var('func_2111')
call_2117 = relay.TupleGetItem(func_2109_call(), 0)
call_2118 = relay.TupleGetItem(func_2111_call(), 0)
func_1826_call = mod.get_global_var('func_1826')
func_1827_call = mutated_mod.get_global_var('func_1827')
call_2143 = relay.TupleGetItem(func_1826_call(), 1)
call_2144 = relay.TupleGetItem(func_1827_call(), 1)
output = relay.Tuple([call_2117,call_2143,])
output2 = relay.Tuple([call_2118,call_2144,])
func_2156 = relay.Function([], output)
mod['func_2156'] = func_2156
mod = relay.transform.InferType()(mod)
mutated_mod['func_2156'] = func_2156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2156_call = mutated_mod.get_global_var('func_2156')
call_2157 = func_2156_call()
output = call_2157
func_2158 = relay.Function([], output)
mutated_mod['func_2158'] = func_2158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_2182 = func_676_call()
call_2183 = func_676_call()
func_1747_call = mod.get_global_var('func_1747')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_2185 = relay.TupleGetItem(func_1747_call(), 3)
call_2186 = relay.TupleGetItem(func_1749_call(), 3)
func_1759_call = mod.get_global_var('func_1759')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_2188 = relay.TupleGetItem(func_1759_call(), 0)
call_2189 = relay.TupleGetItem(func_1761_call(), 0)
func_1747_call = mod.get_global_var('func_1747')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_2191 = relay.TupleGetItem(func_1747_call(), 2)
call_2192 = relay.TupleGetItem(func_1749_call(), 2)
func_865_call = mod.get_global_var('func_865')
func_866_call = mutated_mod.get_global_var('func_866')
call_2202 = relay.TupleGetItem(func_865_call(), 0)
call_2203 = relay.TupleGetItem(func_866_call(), 0)
var_2208 = relay.var("var_2208", dtype = "float32", shape = (189,))#candidate|2208|(189,)|var|float32
bop_2209 = relay.floor_divide(call_2191.astype('float32'), relay.reshape(var_2208.astype('float32'), relay.shape_of(call_2191))) # shape=(189,)
bop_2212 = relay.floor_divide(call_2192.astype('float32'), relay.reshape(var_2208.astype('float32'), relay.shape_of(call_2192))) # shape=(189,)
func_1826_call = mod.get_global_var('func_1826')
func_1827_call = mutated_mod.get_global_var('func_1827')
call_2221 = relay.TupleGetItem(func_1826_call(), 0)
call_2222 = relay.TupleGetItem(func_1827_call(), 0)
output = relay.Tuple([call_2182,call_2185,call_2188,call_2202,bop_2209,call_2221,])
output2 = relay.Tuple([call_2183,call_2186,call_2189,call_2203,bop_2212,call_2222,])
func_2225 = relay.Function([var_2208,], output)
mod['func_2225'] = func_2225
mod = relay.transform.InferType()(mod)
var_2226 = relay.var("var_2226", dtype = "float32", shape = (189,))#candidate|2226|(189,)|var|float32
output = func_2225(var_2226)
func_2227 = relay.Function([var_2226], output)
mutated_mod['func_2227'] = func_2227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2267 = relay.var("var_2267", dtype = "uint8", shape = (7, 3, 5))#candidate|2267|(7, 3, 5)|var|uint8
var_2268 = relay.var("var_2268", dtype = "uint8", shape = (7, 3, 5))#candidate|2268|(7, 3, 5)|var|uint8
bop_2269 = relay.greater_equal(var_2267.astype('bool'), relay.reshape(var_2268.astype('bool'), relay.shape_of(var_2267))) # shape=(7, 3, 5)
func_1616_call = mod.get_global_var('func_1616')
func_1617_call = mutated_mod.get_global_var('func_1617')
call_2282 = relay.TupleGetItem(func_1616_call(), 1)
call_2283 = relay.TupleGetItem(func_1617_call(), 1)
uop_2296 = relay.asinh(call_2282.astype('float32')) # shape=(10, 11, 10)
uop_2298 = relay.asinh(call_2283.astype('float32')) # shape=(10, 11, 10)
output = relay.Tuple([bop_2269,uop_2296,])
output2 = relay.Tuple([bop_2269,uop_2298,])
func_2300 = relay.Function([var_2267,var_2268,], output)
mod['func_2300'] = func_2300
mod = relay.transform.InferType()(mod)
var_2301 = relay.var("var_2301", dtype = "uint8", shape = (7, 3, 5))#candidate|2301|(7, 3, 5)|var|uint8
var_2302 = relay.var("var_2302", dtype = "uint8", shape = (7, 3, 5))#candidate|2302|(7, 3, 5)|var|uint8
output = func_2300(var_2301,var_2302,)
func_2303 = relay.Function([var_2301,var_2302,], output)
mutated_mod['func_2303'] = func_2303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_878_call = mod.get_global_var('func_878')
func_879_call = mutated_mod.get_global_var('func_879')
call_2351 = relay.TupleGetItem(func_878_call(), 0)
call_2352 = relay.TupleGetItem(func_879_call(), 0)
func_1826_call = mod.get_global_var('func_1826')
func_1827_call = mutated_mod.get_global_var('func_1827')
call_2361 = relay.TupleGetItem(func_1826_call(), 1)
call_2362 = relay.TupleGetItem(func_1827_call(), 1)
output = relay.Tuple([call_2351,call_2361,])
output2 = relay.Tuple([call_2352,call_2362,])
func_2380 = relay.Function([], output)
mod['func_2380'] = func_2380
mod = relay.transform.InferType()(mod)
output = func_2380()
func_2381 = relay.Function([], output)
mutated_mod['func_2381'] = func_2381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2380_call = mod.get_global_var('func_2380')
func_2381_call = mutated_mod.get_global_var('func_2381')
call_2397 = relay.TupleGetItem(func_2380_call(), 1)
call_2398 = relay.TupleGetItem(func_2381_call(), 1)
func_246_call = mod.get_global_var('func_246')
func_249_call = mutated_mod.get_global_var('func_249')
var_2408 = relay.var("var_2408", dtype = "float32", shape = (189, 1))#candidate|2408|(189, 1)|var|float32
const_2409 = relay.const([-8.189542,-5.137495,-6.174038,2.945800,-1.269684,4.843829,0.993532,-9.320640,-2.423987,7.678226,-0.249306,-0.838422,-8.644599,2.408863,2.925039,2.398633,-9.533419,1.440803,3.483368,8.510172,0.582514,1.920470,4.286192,9.803259,-0.110564,-1.275352,-1.631739,8.240579,-8.100137,9.129890,0.130777,-2.091415,-0.051520,5.810898,-7.515108,1.549481,2.039763,-8.943792,-9.472257,-3.605927,9.185948,2.231720,7.336776,-6.451254,-3.645681,9.123996,-1.923392,9.503263,4.097986,-4.644114,-9.612358,-5.117820,1.596689,-9.200968,-0.428539,-6.042503,9.932537,-0.678040,2.322685,6.328535,-5.471312,2.974689,-8.325340,1.366542,1.575920,6.708208,0.386070,6.871400,0.895722,-3.724964,-2.434644,8.751644,0.313270,-2.265543,-7.338338,-4.832003,-9.569875,-0.320211,-5.600194,7.834705,6.616738,5.932549,-9.902634,8.199236,-9.909065,8.290881,8.069428,9.107243,-5.132389,7.882278,7.489687,0.417252,9.236581,-8.390172,1.734217,-7.221114,-6.254916,6.823369,-0.406476,-9.242952,6.546837,-3.833778,-0.050011,3.000629,5.128423,-4.240435,-6.479359,8.320198,1.630479,5.383267,1.807718,9.186561,-1.120227,-3.125064,-5.953008,0.482415,-5.252280,-5.036524,3.012248,-0.961151,-1.430112,6.438041,-0.772510,-3.602903,-6.992003,5.374944,9.858306,-0.924481,5.389972,3.606377,7.114916,9.639100,-1.625685,7.544005,9.193920,-1.297597,-8.247260,-1.949462,-1.166516,-3.050914,6.208202,-3.719487,-0.245256,-5.173394,9.205767,8.379018,-9.896973,3.783199,-3.052719,4.858614,-1.643263,4.135337,5.557982,2.711561,8.531868,7.645062,4.990672,9.500767,-5.983508,-7.894982,6.896971,-6.209569,-3.368604,-2.098780,-7.202830,6.304130,-8.874332,4.831973,-2.090132,0.863046,-0.764437,-4.944165,8.636624,-4.767336,6.989707,5.333880,-6.516707,1.437934,0.379491,-7.359742,4.882097,-4.684257,-6.300407,1.430145,6.669408,-0.507862,5.275221,5.407661,3.956086,-4.166815,-2.756851,3.993429,-1.740988,-1.833491,4.889214,3.175719,-5.451509,-1.430897,-8.139350,6.649627,-3.403298,7.211120,8.967468,-2.734564,-6.055419,1.376599,4.607428,-8.638250,7.185988,8.546115,5.215117,8.381312,4.002605,-4.187823,-0.274952,4.163718,-6.553133,-8.982789,2.442439,-0.497127,-2.651179,4.612840,-9.254925,7.255679,-2.395044,-8.270452,6.527898,0.378150,7.853331,-1.998507,4.557553,4.959840,5.722535,0.326989,-9.086903,-2.420299,-6.957636,-1.084314,5.080387,-1.133925,8.959820,1.144376,2.668862,7.365356,9.327618,-7.623182,1.951205,-7.495070,5.681973,7.121964,8.156056,-2.991882,6.563862,-9.183090,-8.539798,-2.750692,-9.886171,7.541199,-0.827205,-4.738612,-1.123184,0.468692,-1.948898,-2.713987,8.735644,-1.001237,-1.716297,-3.735968,7.256678,-5.952112,-9.529640,0.062840,4.102738,-6.995081,7.359279,2.607733,7.583760,1.829814,-6.799712,3.246649,-2.120854,-7.236972,8.461492,-9.877383,1.194308,-3.421024,-9.101209,-1.385576,-9.911311,6.203185,-4.809400,-6.784782,0.770931,8.348593,1.654222,-1.426038,-3.768100,-2.708023,4.844626,7.408491,-7.520264,-1.843318,6.472211,-6.846954,8.601874,-9.515584,-1.453034,1.082300,-9.755138,2.369823,-6.994137,1.052183,-6.155948,-2.701499,5.985655,-9.415362,1.314169,-7.992038,-2.982064,0.108566,-0.200139,1.048974,-0.901622,9.057341,8.852821,-4.282769,-6.060683,0.887800,-9.257794,-7.560424,0.989158,2.479974,-7.105525,0.302784,-2.528205,-9.716591,-5.639589,8.365781,2.823055,-3.903234,6.973430,-7.121399,-3.542825,-7.485499,7.770027,-8.068226,0.215543,3.684868,1.038278,-4.779659,0.366354,4.416640,-3.989133,-2.898014,5.693553,2.298592,-3.850836,-5.782798,6.319472,4.514494,8.386321,3.503888,0.858253,-3.026627,2.569708,-0.528101,-7.260602,5.650582,-7.928234,-0.274280,-2.257864,-4.443346,2.626654,6.890013,1.378341,3.332043,0.030454,8.477065,8.142087,0.712294,5.700109,-5.632736,3.760377,-2.898093,7.423238,0.728343,-0.612412,-9.452978,-7.315826,-7.357241,-4.131582,3.671551,-1.163042,-1.708606,-2.328208,3.131526,5.653329,3.976867,5.581730,-8.796529,-9.012548,-9.059094,9.142585,-1.561327,-3.939322,2.412443,-4.131978,-2.741679,-8.637169,1.915199,9.371298,-6.546244,-5.443524,3.729253,9.770578,-8.628376,-4.019351,9.994099,-3.686837,4.365066,-9.069109,7.660532,0.423962,-5.415175,8.693900,2.171284,-4.068855,4.710644,9.758779,-0.983817,5.690241,4.359881,9.910826,3.351699,-0.838196,-1.471916,-5.800382,-6.119991,-6.310503,0.216842,-0.344344,-0.391779,-3.673206,7.685737,-8.227417,-4.872633,-0.894483,2.818385,-9.866835,4.526338,-2.178787,-6.897964,-9.027448,-0.827536,5.063205,-1.413313,-8.332543,-9.927089,-4.495720,5.092239,5.865253,-8.437436,9.977918,8.745426,0.680372,-7.374662,-2.014084,-1.889146,6.801327,1.308938,-0.214803,-3.550231,-3.168992,7.026351,-1.153519,-8.644052,-7.325755,-7.404211,-1.314793,-7.203806,-3.552787,3.093568,5.981735,2.103901,5.690012,9.577401,-6.515293,-4.929770,-2.446123,-5.404156,-5.396056,-5.942658,4.503223,-7.039099,-2.392402,4.163925,-5.593836,0.348551,-9.218865,-2.869593,-9.928934,9.812609,-0.922248,7.883345,0.684066,4.701114,-2.354250,5.888486,-8.206771,-1.123749,-5.996050,-7.924240,-9.304234,-9.596158,-3.665900,-8.312796,-4.489743,-2.081811,-9.476522,3.812871,2.263670,0.857789,-4.638771,9.720565,8.154749,5.202403,-8.857626,-1.552740,2.867267,4.566544,6.629971,-5.237353,-4.259042,-3.779681,1.868070,-2.143664,4.095422,-0.094792,-1.111269,-9.490557,7.598139,0.084863,2.085485,8.890016,-4.545546,0.884362,-9.268297,6.361531,-2.345118,1.172776,3.889076,-6.990680,-6.826531,-0.816832,-2.892197,-0.719395,-9.198353,7.465082,1.428731,7.280499,-5.931942,7.936884,-2.552762,4.439296,1.629274,-8.766656,-0.343490,6.918619,-0.261996,-6.657736,-4.905592,-1.540900,-6.574218,0.140626,-2.540065,-4.734077,7.977927,-9.989030,-4.838975,-8.027100,-4.063992,4.848112,6.860184,9.337455,-4.206899,-9.841145,-3.539181,-1.035317,2.377770,-7.983883,-8.128852,-8.631944,7.089430,8.906196,-5.355250,8.655991,6.245216,0.457975,6.917079,-9.104863,-3.419422,-3.535024,5.879462,-4.175508,-3.967361,7.845485,8.356530,-4.997579,-6.881492,-0.798842,0.339250,4.984072,-3.608628,7.066866,-8.316914,-6.368983,6.021854,2.969384,1.641265,2.635445,6.358813,-4.304161,-3.482682,8.502588,-0.972632,1.605871,6.576090,-9.173507,8.568958,0.545130,8.169432,3.300087,-3.918826,-1.571671,-2.289031,-0.330863,-6.359415,-9.701947,7.577337,1.768637,4.006086,-5.628387,5.152111,3.937424,-8.597355,-3.151666,-3.661476,-9.663267,1.977500,-8.969660,-0.276258,4.585802,0.375633,8.275430,8.034688,-1.997195,8.860458,4.282027,-5.613591,-8.467539,1.830602,-1.476166,-2.275769,-3.128388,5.969599,1.889394,9.955800,-5.217789,-9.999251,-6.513497,-4.050052,-6.079892,8.340511,1.375102,-0.101396,-6.172056,-7.639030,9.308256,-6.178640,-4.742770,-0.663523,3.110681,-0.513419,-6.029574,-3.498817,-1.555843,-7.208463,-5.597105,-6.038840,2.110447,3.050307,-8.376776,-8.241130,-2.509224,-0.751647,1.190446,-6.804889,-0.217998,-4.174250,3.474635,6.660155,-8.320870,3.546440,8.489968,-0.073951,-2.899624,2.702410,4.448127,4.111126,-7.714433,9.766316,-4.791965,-5.898735,-3.138287,-8.622694,8.042441,-5.638249,4.256141,3.164420,1.533086,6.602037,7.777871,4.637658,-8.332024,5.954478,-6.386195,-3.082587,-2.899385,0.378761,-7.987801,3.916340,-7.662790,2.376491,3.234734,-3.842927,-2.256181,-0.422235,-6.868010,-6.988424,-0.327229,7.007309,-5.491081,-1.888796,0.138409,-9.408208,1.606905,4.834298,6.251968,8.264992,2.159696,7.339511,4.510676,-0.103506,4.064599,-1.892565,-6.432765,-7.185990,-7.629065,2.793565,4.418185,3.907948,6.472424,-2.625034,5.648231,3.190115,1.404504,-4.000697,3.129180,7.827883,6.063503,-1.357967,1.769199,3.995731,7.824449,7.208647,-4.871198,8.624781,-6.189514,-6.678348,1.274459,-8.144552,-7.771097,6.691194,4.244271,8.638569,3.163156,-4.336336,-7.515174,-2.122150,9.271182,-8.110472,-3.272910,4.047438,5.634378,-3.766714,-4.924409,-7.731042,5.047827,-1.984686,-0.869509,4.229057,4.762575,-0.917891,1.062691,-3.484392,5.550822,-5.392016,-6.726176,-8.821655,6.426585,9.866113,2.580421,7.632723,8.746272,-1.710213,0.974938,9.183026,9.015780,-3.246300,-0.061781,8.330678,-9.359659,1.637709,-2.841053,-6.936575,-3.619228,1.890771,2.052537,-8.302336,-8.986178,-5.155135,2.325710,-7.622747,-7.655890,8.884745,4.441465,-6.678540,2.262488,1.504891,0.895139,1.884708,5.428670,2.343571,8.896480,3.488109,-3.685638,8.018901,-9.334449,5.583011,1.630079,0.817432,3.951335,-6.667050,-9.820434,-5.014979,9.078047,8.860385,-3.709794,-2.103312,0.931695,7.293265,7.186573,4.280699,1.289886,-8.383988,1.112981,0.118142,3.879514,4.304719,1.050437,8.800798,-7.699492,7.486131,-6.612505,-1.364481,-6.708397,0.745792,3.748422,7.924821,2.830713,9.872347,2.400652,-9.720411,-9.237711,-7.156501,6.782390,-0.396761,7.003429,7.196318,3.145913,2.454274,8.109660,-8.058364,3.723685,9.587096,1.152543,8.381024,-1.385176,-4.028269,-0.543113,-6.285413,-4.926220,7.924648,2.826613,1.342524,-2.336967,-5.955573,-2.420221,-8.654559,-7.876361,-6.789380,-3.263729,-0.841519,0.525091,5.864181,-1.714981,-8.515573,4.605612,-7.839529,-7.792668,8.415775,-7.747719,-4.997230,-0.377191,-0.971800,9.517257,2.257494,-1.438520,-0.928913,-5.189799,4.052224,8.996563,7.605926,8.494591,1.550211,-2.215213,4.005860,-1.772493,7.774431,-5.544119,7.341496,-5.325424,-0.768099,9.761805,7.428869,-2.872602,-5.680851,-1.475971,-7.113784,8.286505,0.755202,4.069311,-4.903729,-6.723833,-2.345462,8.743679,-6.660715,-2.695887,-7.387173,5.116105,5.571221,5.617935,-1.171926,-4.035428,9.308214,-2.568450,7.335598,6.153101,-2.190551,1.237564,2.477971,-0.220358,-7.525366,-8.331976,-7.928238,-5.593083,5.663567,8.238925,6.814226,5.934603,4.855491,7.797994,7.437732,-1.295600,1.016465,-3.683571,-5.910670,-0.053518,-1.984647,-7.976581,4.136014,-3.628910,-3.207372,-5.508018,3.349080,-5.046356,0.320765,4.650795,2.030907,-9.523889,4.433922,3.375770,-3.387762,0.978903,-0.135287,0.355616,-3.207772,-7.954849,-2.767252,8.048761,-9.726519,-7.547405,7.192123,-7.699946,-2.373219,0.856808,-7.702222,3.621294,4.778586,9.129204,-3.627600,1.091649,-0.564007,6.405811,-2.500416,8.600287,9.029837,-8.986038,5.943602,4.386786,-1.986950,-7.535760,8.140102,1.953005,-2.968260,-6.011034,3.240524,3.567871,9.699997,-3.797824,2.083072,6.378602,-0.837311,-5.836269,-7.644362,5.618158,-3.335782,4.210391,6.224683,-3.845130,7.908673,5.453318,-7.071467,4.020220,3.076590,9.733422,4.011842,8.956990,6.481663,7.030060,7.156795,-2.630689,-5.719633,5.897796,-5.194420,4.383127,-7.527362,-3.943045,-1.744635,2.132122,-7.345191,-6.819531,3.434642,1.330552,8.472636,-2.761575,9.915696,0.101369,6.902182,4.669669,-0.427717,9.433536,8.319075,-2.082040,6.608665,-8.894621,-8.115646,6.966101,-4.296365,-8.204284,-4.721687,3.799398,4.356153,1.282298,8.888606,-2.505110,-3.139511,6.165665,-7.169610,0.557726,7.699966,1.482795,-7.714896,8.712266,6.057552,4.795996,-1.996800,3.978029,5.960020,-3.956484,2.106120,-8.473991,1.556527,-6.600206,7.393990,2.240202,8.620281,0.893145,-9.038461,-6.236180,-9.789561,8.654877,-0.573268,7.132682,9.857668,8.309047,-4.283211,-6.181012,4.703464,0.883389,-3.143626,4.789488,8.708238,-3.121070,0.502696,8.244701,-1.407607,-3.932018,7.819050,-7.190723,-1.993243,-2.257562,0.547695,-1.374522,7.543385,-1.079451,-6.011942,3.022995,-4.100547,0.740236,-2.568129,5.283550,0.014091,-8.212807,8.090874,-1.962848,-7.948610,8.723889,9.345198,-3.250532,7.240006,8.272381,-9.161715,-1.027434,-1.078472,-8.787000,-9.978050,9.503608,0.839419,5.313183,-7.185398,-4.242930,-2.505618,-9.534719,3.614532,-8.469737,6.792399,9.749640,-9.625310,-7.007414,4.460284,5.747582,5.674479,-5.683436,-3.439255,7.177447,7.466899,3.128182,3.102142,1.768500,-4.680647,-9.224503,3.913355,0.293871,2.140124,-1.544898,-4.676827,-5.820276,-4.670713,8.593115,-2.681809,0.046158,-5.097327,5.541714,2.038082,8.397266,-8.252024,2.874718,9.903768,7.637045,3.465735,3.250577,-8.341642,1.639919,-0.034356,1.960906,8.814131,-4.646582,-6.333769,-4.482251,1.904004,9.854903,6.580493,7.564137,-5.094235,0.395848,1.298291,9.928446,-5.872303,-7.475859,8.356273,-6.629123,6.503692,7.810858,-7.476017,7.777774,8.137483,-9.396336,6.386465,8.872152,-3.493557,3.362581,3.043964,8.688774,0.639219,5.009131,-9.014039,-9.994848,-4.658753,1.706413,1.483710,-6.419306,5.370708,1.000003,0.146713,-2.744085,2.886035,6.087503,3.989655,-0.100516], dtype = "float64")#candidate|2409|(1260,)|const|float64
call_2407 = relay.TupleGetItem(func_246_call(relay.reshape(var_2408.astype('float32'), [1, 189]), relay.reshape(const_2409.astype('float64'), [10, 14, 9]), ), 1)
call_2410 = relay.TupleGetItem(func_249_call(relay.reshape(var_2408.astype('float32'), [1, 189]), relay.reshape(const_2409.astype('float64'), [10, 14, 9]), ), 1)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_2419 = relay.TupleGetItem(func_2225_call(relay.reshape(var_2408.astype('float32'), [189,])), 5)
call_2420 = relay.TupleGetItem(func_2227_call(relay.reshape(var_2408.astype('float32'), [189,])), 5)
output = relay.Tuple([call_2397,call_2407,var_2408,const_2409,call_2419,])
output2 = relay.Tuple([call_2398,call_2410,var_2408,const_2409,call_2420,])
func_2421 = relay.Function([var_2408,], output)
mod['func_2421'] = func_2421
mod = relay.transform.InferType()(mod)
mutated_mod['func_2421'] = func_2421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2422 = relay.var("var_2422", dtype = "float32", shape = (189, 1))#candidate|2422|(189, 1)|var|float32
func_2421_call = mutated_mod.get_global_var('func_2421')
call_2423 = func_2421_call(var_2422)
output = call_2423
func_2424 = relay.Function([var_2422], output)
mutated_mod['func_2424'] = func_2424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1759_call = mod.get_global_var('func_1759')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_2431 = relay.TupleGetItem(func_1759_call(), 0)
call_2432 = relay.TupleGetItem(func_1761_call(), 0)
output = call_2431
output2 = call_2432
func_2433 = relay.Function([], output)
mod['func_2433'] = func_2433
mod = relay.transform.InferType()(mod)
mutated_mod['func_2433'] = func_2433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2433_call = mutated_mod.get_global_var('func_2433')
call_2434 = func_2433_call()
output = call_2434
func_2435 = relay.Function([], output)
mutated_mod['func_2435'] = func_2435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2463 = relay.var("var_2463", dtype = "uint64", shape = ())#candidate|2463|()|var|uint64
var_2464 = relay.var("var_2464", dtype = "uint64", shape = (3, 13, 7))#candidate|2464|(3, 13, 7)|var|uint64
bop_2465 = relay.greater_equal(var_2463.astype('bool'), var_2464.astype('bool')) # shape=(3, 13, 7)
bop_2490 = relay.not_equal(var_2464.astype('bool'), relay.reshape(bop_2465.astype('bool'), relay.shape_of(var_2464))) # shape=(3, 13, 7)
uop_2503 = relay.exp(var_2464.astype('float32')) # shape=(3, 13, 7)
output = relay.Tuple([bop_2490,uop_2503,])
output2 = relay.Tuple([bop_2490,uop_2503,])
func_2513 = relay.Function([var_2463,var_2464,], output)
mod['func_2513'] = func_2513
mod = relay.transform.InferType()(mod)
mutated_mod['func_2513'] = func_2513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2513_call = mutated_mod.get_global_var('func_2513')
var_2515 = relay.var("var_2515", dtype = "uint64", shape = ())#candidate|2515|()|var|uint64
var_2516 = relay.var("var_2516", dtype = "uint64", shape = (3, 13, 7))#candidate|2516|(3, 13, 7)|var|uint64
call_2514 = func_2513_call(var_2515,var_2516,)
output = call_2514
func_2517 = relay.Function([var_2515,var_2516,], output)
mutated_mod['func_2517'] = func_2517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2380_call = mod.get_global_var('func_2380')
func_2381_call = mutated_mod.get_global_var('func_2381')
call_2556 = relay.TupleGetItem(func_2380_call(), 1)
call_2557 = relay.TupleGetItem(func_2381_call(), 1)
func_2421_call = mod.get_global_var('func_2421')
func_2424_call = mutated_mod.get_global_var('func_2424')
const_2562 = relay.const([[-1.376714],[3.399737],[-6.280777],[6.688198],[4.353609],[-0.363145],[-1.379152],[1.133111],[5.405817],[6.074659],[-9.981095],[4.691340],[-5.862722],[-3.161199],[8.026027],[-3.355946],[-3.365563],[-6.528798],[-7.582936],[8.511468],[-9.032825],[-1.737343],[-9.827967],[-5.682968],[-4.084002],[7.185319],[4.817445],[1.906360],[7.415512],[-5.500814],[-7.772681],[-9.912076],[7.229750],[5.817573],[-6.850369],[9.237842],[-1.078065],[8.895612],[3.967651],[-5.161201],[2.291930],[-6.217277],[7.988161],[-5.866123],[8.004808],[1.674855],[9.288054],[-7.931851],[-7.193149],[-4.003319],[7.385301],[9.207245],[5.804062],[-2.853450],[-5.755643],[-4.710520],[-3.709705],[-3.662511],[-8.319667],[-2.574974],[-1.593011],[0.380729],[0.801379],[-5.988246],[4.068462],[-7.378328],[-4.453804],[8.450821],[1.677845],[-0.012460],[-2.830141],[9.272104],[3.022634],[-5.219483],[7.168625],[-5.150087],[-3.120026],[3.856720],[9.634134],[6.885166],[7.444533],[2.044224],[5.774375],[9.962861],[8.674583],[-8.881377],[6.980804],[-2.088273],[-1.862562],[-0.344062],[-3.585980],[2.976329],[1.612326],[-9.006729],[-6.440669],[9.906553],[-8.420285],[0.452040],[4.510375],[-1.843759],[-7.847178],[3.816044],[-7.414487],[-3.423815],[-3.017761],[-0.121664],[8.517049],[-4.146065],[8.246541],[-7.918837],[-5.093575],[7.069503],[-9.809814],[7.299237],[8.785231],[-3.494288],[-6.534260],[2.357763],[-4.546011],[9.652112],[3.904112],[2.527298],[1.044425],[4.790345],[-9.469969],[-1.028808],[7.657286],[6.242204],[-7.929854],[-0.559393],[-3.481827],[2.995368],[-3.037914],[-2.050525],[0.939952],[3.494899],[7.482902],[2.697398],[-2.041601],[5.477869],[-9.409057],[-5.107626],[4.423250],[-6.399054],[-1.206096],[-1.898596],[8.951416],[0.096394],[-8.744244],[-1.372430],[-1.319604],[-8.488468],[-8.892857],[-5.998079],[-3.657124],[-1.900542],[-2.441702],[2.783597],[-3.940259],[1.627573],[-8.148801],[-2.856441],[-6.457365],[9.207867],[2.475810],[-1.096581],[0.795902],[9.726406],[-2.037162],[8.427330],[-1.809936],[-7.070238],[-5.203720],[-8.309166],[1.646216],[1.165985],[8.036291],[5.216076],[7.757007],[4.689135],[5.935966],[-3.209764],[-5.934507],[-7.382207],[-8.208316],[-5.698655],[5.186856],[2.556573],[-0.493534]], dtype = "float32")#candidate|2562|(189, 1)|const|float32
call_2561 = relay.TupleGetItem(func_2421_call(relay.reshape(const_2562.astype('float32'), [189, 1])), 0)
call_2563 = relay.TupleGetItem(func_2424_call(relay.reshape(const_2562.astype('float32'), [189, 1])), 0)
const_2574 = relay.const([[4.269942,-6.572553,1.234736,-6.664887,8.450012,-3.522825,6.202463,1.010803,-3.562527],[4.565443,-6.951968,-8.534945,7.292319,6.415565,-1.116745,9.098628,-3.592575,0.422974],[-1.570858,1.579501,-8.642614,4.449154,2.170513,-1.834557,2.930369,-6.816924,-0.465988],[6.377013,-3.416361,-3.903750,0.911844,-1.110168,-8.278920,-9.345061,8.823901,-7.598837],[3.722497,-9.245675,-4.114524,6.873887,-3.596786,-3.643669,-2.231366,-8.503449,-5.931873],[-5.609419,-7.631017,1.219023,-9.605504,2.169981,9.951933,4.573638,-9.794509,6.302111],[-2.009450,-1.505582,-6.564177,-2.431275,-1.564094,5.141670,6.705471,-9.739786,9.670256],[-6.618077,2.141843,3.035428,4.219638,-1.203411,-9.816354,1.980722,-2.465839,8.981162],[-6.564093,0.689898,5.907398,1.611158,-1.889124,-7.861611,7.697747,9.432950,2.055006],[9.611090,3.229469,-3.574506,3.535588,8.020979,0.072344,-9.705395,-9.732911,-6.316616],[-5.609543,-4.780508,2.117727,-8.704444,-5.648790,-0.721966,1.642961,-0.588331,4.760227],[-8.253063,-0.513274,-0.161871,9.962071,8.246869,-7.595342,9.074927,0.849247,-2.989723],[-9.540513,1.925787,-8.156083,-0.102703,4.610124,0.636396,7.889385,3.097042,6.983846],[6.074580,-0.719517,-7.479755,-7.413278,-4.394104,0.397599,0.173541,7.818325,-5.167666],[-7.403164,0.934427,-1.391564,-5.133504,3.516145,9.549526,9.949773,1.191315,-2.009220],[-7.701871,1.320614,-8.036475,0.834199,-2.096760,7.577658,2.216088,-5.723209,9.532220],[1.468927,-7.646794,-1.497486,0.658806,1.657427,7.292717,-8.978896,-3.345047,-1.711564],[-5.748209,-7.900030,4.423631,-5.264492,4.894693,0.391504,9.052741,-1.072461,2.908196],[1.473162,-9.190513,7.247500,-8.134812,-4.636032,8.996134,-4.717944,-7.790306,3.425587],[-7.930556,-6.447562,-8.728465,-3.415819,-2.133543,1.495251,3.886780,-8.081850,7.038555],[-0.412272,8.608026,2.089833,6.165222,8.588388,-7.595622,6.419301,-0.578330,3.183937],[-7.334772,-1.979093,-8.717549,-0.999296,-0.937628,-9.845718,4.227390,-6.720181,8.086509],[5.296826,8.579286,-4.952980,9.422397,-6.570457,-1.142085,-8.309651,0.124992,6.364805],[1.656535,-7.057863,7.899946,2.583291,2.882133,8.202446,7.301180,9.681668,1.037940],[9.545569,-2.506702,-1.183355,4.580721,2.710134,2.611428,-0.202567,-1.416044,1.078965],[6.882334,-8.521595,-0.502115,3.303389,2.002045,-0.282411,7.520485,8.923797,0.958617],[-3.847689,6.403309,6.077285,-2.019894,0.704558,-3.474461,-4.874178,8.342905,-7.037778],[2.073419,-0.262234,4.924528,2.840936,-7.002302,-3.065737,8.497026,-2.246631,-3.720996],[0.855320,3.024967,3.040932,7.233827,-4.582665,4.265557,-2.810217,-0.537729,0.668024],[3.152137,-9.575937,1.462324,1.324724,3.490872,7.568604,-3.239927,2.561687,8.634338],[4.238660,-2.620562,-5.186523,2.470467,-4.740210,1.034995,3.235843,2.003361,-5.541608],[-7.552839,9.958286,7.284728,0.999628,5.853284,8.250437,8.090650,-6.687371,-4.025163],[2.297075,0.927615,-8.435383,1.795522,-2.301255,8.428368,-6.682470,-7.103776,-0.582717],[-3.144796,7.466389,-7.924487,8.232044,-1.968283,6.722522,-0.942902,-5.327794,4.226559],[-3.829744,-5.695982,1.911649,7.971262,9.120614,9.374844,1.938450,0.645123,3.970258],[4.837182,6.851441,-2.264749,8.589779,-1.091177,9.859334,-7.643597,-5.132950,-6.378116],[-6.350355,4.832420,0.293328,0.537751,7.969727,-5.689644,-4.250724,6.277341,2.518785],[9.827265,-6.976206,-5.464564,5.119874,0.980740,6.428907,1.660356,4.333074,4.466929],[2.581442,0.307162,2.910065,0.064322,6.675523,5.782634,3.023766,5.873345,-7.500883],[5.574811,-4.978333,-1.892758,-0.544612,-5.652718,-6.456400,-8.294019,-9.074433,-9.336317],[6.174473,-9.231013,-0.742708,2.562206,-3.955879,7.564681,-0.124335,-3.727068,2.085159],[-2.144352,-1.843348,3.029438,-5.207265,-7.556384,7.507419,-2.242492,-7.890622,-6.854284],[1.960319,-0.477424,-7.118321,-0.809665,-2.488602,-2.932152,9.409257,6.115338,2.873672],[5.501655,7.113429,-6.925162,-6.052035,9.492856,8.919018,-8.292279,-9.706746,-3.034588],[-3.474729,9.593330,3.268401,1.753727,8.821902,-4.507976,9.981492,-6.525514,1.840903],[-4.249207,-3.793224,9.135416,7.116753,-0.430578,-8.622301,-7.418487,2.685787,-5.604089],[5.505346,-7.783857,-6.871067,1.310628,-7.600255,-7.100848,7.536382,2.071363,5.124095],[9.784482,-3.899174,-5.171916,3.951440,-1.394006,-1.648496,0.418125,-1.775479,-9.248984],[4.967390,-6.823475,-2.113934,9.513653,7.520770,9.608566,6.823681,1.051447,-1.819660],[8.821930,6.871273,-3.222119,-5.047071,7.353285,0.003999,5.432183,-8.401851,-9.087426],[6.840853,-0.962983,9.697067,1.267019,-3.764116,-2.367421,-1.596039,-7.047787,0.784829],[0.887025,3.098843,-6.029933,5.012560,2.612589,-0.804303,-1.169176,7.544059,-0.605006],[-9.640842,-7.109731,9.989964,9.281496,-3.057887,9.205583,-8.125210,5.198097,9.299923],[5.423814,7.124753,-5.971487,-7.326751,7.506835,6.202269,-6.757246,0.933897,2.717505],[-7.328893,-8.753050,-4.842053,-4.337891,9.574757,-9.394599,-9.797205,3.402263,-8.490831],[6.041252,-1.336484,8.673113,-0.020238,5.756181,-4.544215,-9.023232,5.389005,9.666141],[-7.003200,-3.256721,4.911402,3.354076,-4.148835,1.951147,-7.782522,-9.149683,-8.574183],[3.362927,3.132060,-1.497423,5.971672,-7.987384,-9.954749,-1.318951,-5.557467,-4.517804],[-5.575399,8.714048,-1.346042,6.425421,4.603126,0.875357,4.369536,-3.664564,4.905676],[-6.861934,-5.363385,2.210327,-3.373916,9.282887,-2.712577,-3.121786,6.610384,-7.391804],[9.757186,0.524020,5.805031,-5.660640,4.280161,6.013043,1.086458,6.412504,1.263871],[-0.492994,-2.679735,-9.188772,2.089474,4.325183,-9.844866,-2.018090,-3.003832,-0.674532],[-7.135476,-3.173703,5.631335,-7.730278,-9.085674,-6.170212,-4.047863,6.962830,4.367747],[-5.517684,6.976965,1.961964,2.168727,8.901715,6.962496,3.283282,-1.425280,0.551176],[8.726139,-3.777416,4.649456,7.173072,-6.334033,4.791753,-0.539957,-8.913093,3.465766],[2.510557,-4.195530,-6.647217,-4.829469,6.208281,-4.194632,5.459038,0.978097,9.048628],[-2.230406,-6.861822,1.706895,-7.976399,6.715557,8.321173,4.663602,0.836596,3.311367],[1.771605,3.006192,-9.424142,-7.091937,-5.737014,-1.360870,-0.067658,-0.839350,1.496902],[-3.689904,-1.243053,-9.712531,7.781500,-4.463051,8.196533,-3.710357,-8.152915,-0.217815],[9.929840,-2.808342,-4.535541,4.077499,0.109642,0.196437,-3.851207,7.093956,-3.963532],[-5.561061,8.277270,-4.354827,6.711426,0.344725,4.009762,-5.263515,-1.864354,-9.020045],[9.347168,-2.141861,8.890304,6.146879,6.022971,-3.678075,2.803228,8.827144,-9.111776],[9.737943,7.012297,9.957106,-4.825962,5.724167,-8.317489,4.797093,-5.277047,-0.338539],[-6.918931,9.504192,-9.712167,8.421145,-3.875016,-1.858625,-7.177672,-0.758873,4.124889],[-7.443989,-4.119381,-7.275026,0.184674,-6.931230,9.590718,-7.975531,2.603071,-0.962544],[2.516122,5.358835,-3.909383,-4.947098,2.878651,-4.689041,-0.128776,3.073319,0.842132],[3.592050,3.295637,-2.977632,6.182078,-9.213366,-9.124899,-2.972004,-0.829738,2.226439],[-5.307937,-8.944263,7.588195,-8.410673,8.953384,-2.495188,0.238151,-4.075736,3.440783],[-1.475195,7.520889,0.559890,4.239361,7.966688,7.764815,-8.168331,9.049432,-6.859617],[-5.804633,-0.356374,-6.216236,-1.952716,1.501301,-4.022140,8.429584,3.226894,-9.072756],[-4.477311,-3.331851,8.865757,-7.950978,6.475679,-4.128329,-7.602945,-7.691363,0.456019],[9.199536,6.703025,-6.340220,-5.917626,-4.357679,-8.615390,-8.928864,-1.676186,-3.646966],[8.404921,7.125945,-7.039212,-9.983393,-6.466834,-2.696085,5.591897,4.328225,-0.669785],[-0.282264,0.623012,-8.830928,3.900704,-1.942399,1.787815,-8.390836,-4.608890,-7.149965],[9.028133,7.610712,5.033906,8.911976,-6.171938,7.219451,-6.980498,9.613839,-1.092808],[9.633049,-1.370853,1.064704,5.493503,-3.300643,-6.290290,-8.826345,7.783132,4.198444],[1.714995,3.644812,-1.494728,-1.754192,7.428686,-5.191313,9.436655,6.926130,-5.749739],[-8.923089,-5.794350,0.684955,2.044400,0.013107,7.729187,4.022014,7.590682,-8.624562],[-3.037764,7.317249,-9.137700,3.864264,8.070747,-2.272465,-1.651734,9.220311,1.884171],[8.230798,1.068513,-1.672310,0.899922,0.015573,-7.179793,-9.141875,7.702240,-9.485457],[-4.317090,4.961578,1.662685,1.606825,-9.480701,-5.943223,0.809658,-0.762170,-1.624900],[0.225233,0.723731,2.011680,4.060696,-5.658322,2.239706,-6.141102,-3.864746,3.886434],[3.417154,3.224220,-1.371088,-8.855426,3.364542,-7.189430,5.215611,-9.176377,-0.124338],[-5.711299,3.936810,-7.398101,-4.699119,-8.481903,7.022847,-8.216119,-3.448917,-4.559479],[3.038485,-6.951209,-8.092820,5.686323,8.253399,-7.369649,8.658127,8.026522,0.094674],[7.168487,-5.746799,-6.979148,7.414306,3.357850,4.305551,-9.105618,-7.073130,1.846176],[5.940134,-8.577277,-7.169673,4.539784,3.124105,3.608171,-6.738255,-5.606169,-4.601403],[-6.308273,1.746233,-2.303951,-2.805684,-9.179948,5.610437,6.218425,-1.687926,9.474939],[-7.590127,-0.253857,4.546299,-3.685546,-9.510237,3.075187,4.633172,-2.582645,6.846014],[7.556721,-3.890536,-5.912213,-3.573876,-5.274334,8.074315,6.459092,-0.209925,3.634208],[0.466153,-3.077210,6.477068,7.890918,3.681194,1.676163,-4.224561,-8.290526,-2.867037],[-0.444843,-2.906360,5.795478,4.014227,1.672857,-0.427842,6.678062,-4.797937,7.918442],[4.265674,6.509080,7.535907,7.781875,3.220270,-6.483967,-4.971899,-5.299891,1.950727],[-9.281667,5.343296,3.714175,1.181579,2.112678,-8.472641,3.347359,6.111633,-1.628660],[3.774297,-5.040949,-3.170801,2.261952,-6.326753,5.546204,1.679272,-0.178600,-9.524351],[3.301564,-6.603164,6.751025,7.238386,0.241325,8.738653,6.892924,1.375911,-3.481387],[-7.375806,5.500068,3.262712,7.118147,-6.476859,2.739972,0.809965,-7.696742,-1.415946],[-8.825723,-2.560644,-6.691984,0.988948,3.470771,-9.582708,-8.378439,3.841474,8.938304],[7.997226,3.412456,-0.510807,-9.283532,7.842225,8.830346,-5.088969,-9.841319,6.961100],[7.760522,-7.963099,-8.818767,-4.607610,-6.507035,-9.693592,-8.945508,-2.495099,3.244224],[5.929589,-4.899620,0.140596,-9.670010,1.954553,-5.689180,7.894668,8.564066,-4.123541],[-7.576564,6.827737,-9.709753,-8.174265,9.024760,6.568308,4.315715,-3.535737,8.986440],[-6.559962,7.228965,-1.334851,-1.190910,7.681864,-3.302681,8.102686,-9.979650,3.131918],[-6.471878,-6.867598,-2.753905,1.085566,-9.638154,9.441588,2.440777,4.328417,7.854653],[-1.343026,1.450945,8.336121,-4.799108,8.981753,1.502901,7.095587,-8.905263,2.653558],[8.848123,2.268024,-4.451601,-7.811996,-8.314877,1.356129,3.949584,7.822920,8.096383],[-2.402002,-9.446032,6.262971,-1.093518,6.628790,-6.595453,4.726498,7.304493,4.932396],[2.299936,2.397622,2.263396,3.226767,0.198247,6.115234,-6.460091,-5.877835,4.088271],[-0.346473,-3.121368,4.963857,7.872749,0.514223,7.423081,-0.363791,-5.878860,-7.366072],[-7.434773,-3.604769,-3.445347,2.971008,-1.837787,6.028817,0.363249,3.787511,-5.207337],[-3.124640,-3.206102,-9.643052,-7.969474,-8.664386,1.118423,-8.710426,8.727218,4.820430],[-9.241230,-6.117779,-5.575582,0.093680,6.337060,7.104522,1.454338,3.368567,9.703026],[1.274885,3.466557,-7.588076,-5.931249,-3.823552,-2.618908,1.599255,-5.948714,4.281017],[-8.171816,-7.050766,8.481680,2.222481,5.467442,-4.901216,-6.091993,-7.553710,-4.596966],[-9.437260,8.476895,-6.017569,-2.888482,3.397922,3.344236,9.272791,3.851916,2.647131],[-1.996480,5.212035,-8.473150,-8.085013,9.485350,-7.642771,-8.853529,-0.172556,7.592765],[2.144223,-0.043846,1.024335,7.168437,2.984217,-4.822757,8.241147,4.457923,7.611148],[3.266775,3.701032,-5.697189,-3.490984,-6.988112,5.410336,8.942815,-2.687652,2.279471],[3.510606,-7.460203,4.256351,2.268185,4.715943,7.651594,-2.976227,5.014908,0.799991],[2.231150,-6.483107,-8.013204,-8.706317,-5.796321,0.663709,-4.728987,-9.211904,-7.403508],[1.180164,-8.465184,-2.694151,2.141103,-1.235841,-8.839696,2.084860,1.514658,-9.571485],[4.587149,4.562037,6.820272,7.242124,9.331831,-6.046976,3.475212,-1.072507,5.193295],[0.006116,5.822445,2.137356,3.910320,-5.188530,-0.120796,-2.758419,9.624368,2.958592],[-7.514506,-1.233561,-4.019734,4.482569,-3.420378,8.535088,8.464432,5.992553,6.189892],[-4.306295,5.062026,4.228429,0.650027,2.764128,-2.615324,1.977800,2.081407,-8.584275],[5.703932,3.898058,8.259773,7.317127,4.303965,-5.557202,0.460916,6.691904,1.126242],[-5.214946,-8.847475,3.568198,-8.450580,5.251192,-8.247922,0.165235,-3.084741,9.997619],[0.530966,-9.483183,2.416823,2.166238,0.071655,2.632041,-9.074506,-9.162670,8.002083],[6.098575,-2.965666,5.957245,-3.338605,-6.776265,6.201098,9.558349,-2.723164,6.636625],[-5.266152,-2.316994,0.761247,-3.274494,5.937064,-2.615509,-8.211220,-9.097261,1.847010],[0.392431,-0.826853,-9.723296,2.155744,7.510882,0.506451,-4.186640,7.331922,2.312493],[-2.358234,-1.180251,-8.247720,4.727749,-9.889471,-8.411349,7.639854,-3.692418,8.864316],[-7.086975,-1.572052,2.446414,-9.858213,4.107259,-7.032093,0.083820,-0.801120,9.136978],[-2.255941,5.337389,-9.942919,-2.675496,0.096912,-8.188983,5.585140,3.637813,-9.899548],[8.262283,-7.336250,-3.235476,-0.006290,-0.093864,-8.971705,6.756771,-3.280903,8.749941],[-9.519460,-6.844132,-9.441609,6.428433,1.314760,1.743336,6.658000,9.740056,4.122332],[-1.176038,7.386548,-5.295478,-1.489478,-1.640782,-1.137038,-8.602906,-9.126617,-6.371766],[7.697985,-8.358814,4.292386,-5.090139,8.331719,-5.998468,9.671768,-0.396559,1.244727],[-7.278126,-6.943806,-0.350991,3.193052,-3.211382,-9.186164,-2.350943,-3.130260,-6.567940],[9.284680,-0.886081,-6.773087,0.032753,4.984712,-4.275803,7.627439,6.528718,-8.546351],[-6.085549,-2.758263,5.697418,-0.510058,-6.397678,-4.143880,-6.465301,8.054601,-6.469357],[7.957622,2.204422,0.279647,-5.757305,6.037427,2.628133,8.757190,0.768695,-2.407848],[-6.577282,-2.680144,7.193456,-5.395135,-5.493246,-7.761388,8.044210,1.649102,-1.212924],[6.086034,5.972156,-6.574171,-5.800730,-3.625643,7.626751,-8.238007,0.188318,-5.118266],[5.628102,-9.910837,-1.743300,5.797323,2.621527,5.252633,0.171699,-3.051048,0.206147],[8.796324,-1.174753,3.138440,-4.153831,-8.234783,-4.017319,-7.738995,6.326302,-4.149348],[3.008784,5.336449,-1.566041,1.869821,9.634360,-3.585707,-2.893314,-6.847943,1.458460],[8.129336,5.436453,-8.264701,-6.243273,-3.850891,5.092159,-8.823610,-1.368842,5.518433],[-0.810975,-7.654942,-1.512671,-7.877764,0.745349,-4.076053,-5.989966,-7.862703,0.750175],[2.792472,-5.891859,8.012517,-5.337448,-0.726143,4.342365,4.352265,-5.441340,-1.393273],[-4.241852,-4.986998,3.409872,6.898000,-9.494803,-2.301421,-9.043457,6.263478,6.642703],[-9.567034,-8.153693,-0.859966,0.928365,0.822285,8.465689,-1.998558,-6.962786,1.578051],[3.883197,8.168092,0.740361,3.826450,-1.153433,-5.115254,9.305842,8.916095,5.859320],[-3.953711,-2.201070,3.655308,9.963340,1.679424,-4.734153,4.675184,8.576612,4.627721],[-8.769427,-0.805146,5.473753,-3.403861,-0.850712,8.642215,3.223780,-6.175226,6.175140],[-7.418336,2.360751,5.937106,-9.393058,-4.680194,4.805571,-4.651948,-7.210259,-6.980522],[2.497754,8.930277,5.426641,-0.190631,-8.787038,-8.918955,-6.190843,-7.038648,-4.032802],[7.841279,-4.254481,3.812513,0.330779,-2.648430,-6.691637,5.447644,1.687489,8.249971],[7.963974,-0.292822,-2.913710,-0.420078,0.850765,6.676909,-3.526338,-8.415451,-4.482223],[-3.190138,-2.873785,8.565210,-4.301212,-3.807678,8.052529,-8.341579,7.270463,-5.373089],[6.663260,-6.767341,6.433519,-8.941359,-9.237511,6.919639,-8.592120,-7.871505,-2.807410],[-9.958199,7.948803,-0.830103,-9.233165,6.149109,6.413087,-0.123707,-1.308981,5.292734],[-1.729998,0.789009,0.184484,8.140562,0.671359,-0.612508,4.822760,-8.547608,5.144905],[-8.627444,9.605059,-1.551382,3.527248,7.290374,0.457133,-7.897598,-4.505401,9.652062],[-6.432132,-9.087969,-3.235787,2.827715,0.639769,-5.132932,-9.767770,-5.411684,6.992897],[4.721314,6.021921,-6.017670,5.263667,-3.021234,4.048667,6.823601,-6.699409,4.390268],[-0.636500,6.412613,-2.220191,3.449413,-3.657194,-8.834779,-0.250541,-7.207472,-4.619451],[-4.541042,6.871914,3.786025,-2.876745,-3.671697,-4.150863,-0.146303,-6.793021,-1.528917],[9.206943,-3.441809,-0.245685,1.081806,-1.047866,-9.756338,4.463915,-9.518689,-6.404324],[4.775842,4.986493,2.355822,8.140829,-4.973969,3.857944,-1.479504,-5.329000,-0.827274],[2.171788,6.469570,-5.458423,-2.796261,3.381953,-7.733493,-0.415724,-7.725680,-7.367636],[-4.113123,1.594787,5.655584,8.551576,-4.592697,-8.401261,-5.743478,-1.397738,7.323950],[-5.641367,-5.100253,5.806151,9.725753,-5.520563,3.878099,5.201441,-7.605135,-1.175860],[-8.354244,6.665232,-0.800750,8.641725,5.157842,-2.902643,-6.768721,-6.658760,-0.958468],[-8.086819,-0.686370,-8.775378,9.000219,7.422698,-3.252075,9.970450,1.879927,1.091260],[6.925089,1.859060,7.998848,4.927410,-3.343687,-9.409097,4.670042,-2.157424,-7.369551],[9.030739,-9.319869,1.216374,1.057870,3.653391,-0.476289,-4.793886,-6.464530,-4.346066],[3.205171,2.434936,-3.314136,0.956640,-0.225779,5.186430,-2.648622,-6.522849,8.297918],[2.413967,0.476391,0.081988,-3.333911,5.392433,0.620014,-2.278421,3.470485,-6.311571]], dtype = "float32")#candidate|2574|(189, 9)|const|float32
bop_2575 = relay.right_shift(const_2562.astype('uint8'), const_2574.astype('uint8')) # shape=(189, 9)
bop_2582 = relay.floor_divide(const_2574.astype('float64'), const_2562.astype('float64')) # shape=(189, 9)
func_2300_call = mod.get_global_var('func_2300')
func_2303_call = mutated_mod.get_global_var('func_2303')
const_2590 = relay.const([-6,-10,-1,7,-1,1,10,6,-4,5,-2,8,-4,7,1,-7,-3,10,-3,-3,9,-6,-5,8,-1,7,-5,-9,4,-10,1,4,4,1,-4,-2,8,3,2,5,8,5,1,-2,-9,1,-10,8,-2,1,-3,8,1,-5,3,-6,-5,4,-4,-10,9,-5,-10,-10,1,-8,-4,-6,-8,-8,4,-3,7,-5,-2,-6,-10,-9,-5,1,-2,-10,5,-1,-10,5,-5,3,4,4,4,-8,-10,-3,7,1,-6,6,-1,-6,8,-5,8,4,7], dtype = "uint8")#candidate|2590|(105,)|const|uint8
call_2589 = relay.TupleGetItem(func_2300_call(relay.reshape(const_2590.astype('uint8'), [7, 3, 5]), relay.reshape(const_2590.astype('uint8'), [7, 3, 5]), ), 1)
call_2591 = relay.TupleGetItem(func_2303_call(relay.reshape(const_2590.astype('uint8'), [7, 3, 5]), relay.reshape(const_2590.astype('uint8'), [7, 3, 5]), ), 1)
func_160_call = mod.get_global_var('func_160')
func_163_call = mutated_mod.get_global_var('func_163')
call_2595 = relay.TupleGetItem(func_160_call(relay.reshape(const_2562.astype('float32'), [3, 7, 9])), 1)
call_2596 = relay.TupleGetItem(func_163_call(relay.reshape(const_2562.astype('float32'), [3, 7, 9])), 1)
func_1175_call = mod.get_global_var('func_1175')
func_1178_call = mutated_mod.get_global_var('func_1178')
const_2606 = relay.const([8,1,-1,1,-9,10,7,2,-1,3,7,9,7,9,3,-3,3,4,-1,9,9,6,7,5,3,5,-6,-9,-10,-9,8,4,8,-5,-1,2,8,-10,-4,-3,3,-6,4,-3,8,5,-6,7,-7,6,1,-9,-4,3,4,-6,4,9,1,-2,6,5,6,-9,-8,-10,10,5,-8,3,-4,2,-1,8,5,-3,7,6,-1,6,-7,-8,8,3,2,2,5,6,7,9,1,-6,9,-2,4,-2,8,9,3,-6,10,-1,-3,10,-10,-3,-1,9,-10,10,3,-6,2,-9,-9,-8,-2,-3,-5,-5,4,-5,-9,-2,-9,3,-4,3,6,1,-4,6,9,10,-4,8,-5,10,-1,-10,-7,-10,-4,9,4,5,6,-3,1,-10,8,-3,-2,4,-3,4,9,-3,7,-3,9,-9,3,1,-5,9,8,4,-4,5,-7,9,1,1,1,10,-5,-4,-1,2,-3,-7,4,-3,2,-6,-5,4,-5,5,-10,6,4,-2,5,10,5,-1,1,-5,-1,1,-6,-3,2,8,5,-7,-4,-5,-3,8,-2,-6,2,7,6,1,-7,-4,-4,-10,6,7,8,-8,-7,-8,-5,2,-10,5,9,8,10,-4,4,-3,-3,2,-2,-2,-9,8,9,-5,10,-4,6,4,4,10,4,-10,-4,8,-5,5,-3,9,-4,2,4,5,-10,6,7,-3,9,-7,8,-1,8,-6,-8,4,9,9,3,-5,-3,6,9,2,-3,-1,6,3,-7,-4,3,-10,-5,-10,-1,9,6,-7,-5,2,-7,10,-6,-7,1,9,-1,-10,6,-5,5,-4,-1,5,-7,7,-2,9,-9,1,10,-8,7,-7,8,-3,-8,-3,5,7,8,7,-1,8,-5,-2,8,-5,-5,-9,6,5,6,-1,9,2,1,7,-10,-4,3,9,3,6,8,-5,9,8,-10,-6,-8,6,2,1,-8,4,-10,-5,-8,-5,8,3,-9,-3,-10,8,9,-9,-9,10,5,1,8,-10,-6,-7,2,2,-10,10,3,-2], dtype = "int32")#candidate|2606|(392,)|const|int32
call_2605 = relay.TupleGetItem(func_1175_call(relay.reshape(const_2606.astype('int32'), [98, 4])), 1)
call_2607 = relay.TupleGetItem(func_1178_call(relay.reshape(const_2606.astype('int32'), [98, 4])), 1)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_2615 = func_1065_call()
call_2616 = func_1065_call()
output = relay.Tuple([call_2556,call_2561,bop_2575,bop_2582,call_2589,const_2590,call_2595,call_2605,const_2606,call_2615,])
output2 = relay.Tuple([call_2557,call_2563,bop_2575,bop_2582,call_2591,const_2590,call_2596,call_2607,const_2606,call_2616,])
func_2621 = relay.Function([], output)
mod['func_2621'] = func_2621
mod = relay.transform.InferType()(mod)
mutated_mod['func_2621'] = func_2621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2621_call = mutated_mod.get_global_var('func_2621')
call_2622 = func_2621_call()
output = call_2622
func_2623 = relay.Function([], output)
mutated_mod['func_2623'] = func_2623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_2803 = func_2078_call()
call_2804 = func_2078_call()
output = call_2803
output2 = call_2804
func_2805 = relay.Function([], output)
mod['func_2805'] = func_2805
mod = relay.transform.InferType()(mod)
output = func_2805()
func_2806 = relay.Function([], output)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1779_call = mod.get_global_var('func_1779')
func_1781_call = mutated_mod.get_global_var('func_1781')
call_2913 = func_1779_call()
call_2914 = func_1779_call()
output = relay.Tuple([call_2913,])
output2 = relay.Tuple([call_2914,])
func_2916 = relay.Function([], output)
mod['func_2916'] = func_2916
mod = relay.transform.InferType()(mod)
mutated_mod['func_2916'] = func_2916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2916_call = mutated_mod.get_global_var('func_2916')
call_2917 = func_2916_call()
output = call_2917
func_2918 = relay.Function([], output)
mutated_mod['func_2918'] = func_2918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1779_call = mod.get_global_var('func_1779')
func_1781_call = mutated_mod.get_global_var('func_1781')
call_2988 = func_1779_call()
call_2989 = func_1779_call()
func_2300_call = mod.get_global_var('func_2300')
func_2303_call = mutated_mod.get_global_var('func_2303')
var_2991 = relay.var("var_2991", dtype = "uint8", shape = (1, 105))#candidate|2991|(1, 105)|var|uint8
call_2990 = relay.TupleGetItem(func_2300_call(relay.reshape(var_2991.astype('uint8'), [7, 3, 5]), relay.reshape(var_2991.astype('uint8'), [7, 3, 5]), ), 0)
call_2992 = relay.TupleGetItem(func_2303_call(relay.reshape(var_2991.astype('uint8'), [7, 3, 5]), relay.reshape(var_2991.astype('uint8'), [7, 3, 5]), ), 0)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_2993 = func_676_call()
call_2994 = func_676_call()
uop_2997 = relay.rsqrt(call_2993.astype('float64')) # shape=(10, 11, 10)
uop_2999 = relay.rsqrt(call_2994.astype('float64')) # shape=(10, 11, 10)
output = relay.Tuple([call_2988,call_2990,var_2991,uop_2997,])
output2 = relay.Tuple([call_2989,call_2992,var_2991,uop_2999,])
func_3005 = relay.Function([var_2991,], output)
mod['func_3005'] = func_3005
mod = relay.transform.InferType()(mod)
mutated_mod['func_3005'] = func_3005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3006 = relay.var("var_3006", dtype = "uint8", shape = (1, 105))#candidate|3006|(1, 105)|var|uint8
func_3005_call = mutated_mod.get_global_var('func_3005')
call_3007 = func_3005_call(var_3006)
output = call_3007
func_3008 = relay.Function([var_3006], output)
mutated_mod['func_3008'] = func_3008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_3010 = relay.TupleGetItem(func_1932_call(), 4)
call_3011 = relay.TupleGetItem(func_1933_call(), 4)
output = relay.Tuple([call_3010,])
output2 = relay.Tuple([call_3011,])
func_3014 = relay.Function([], output)
mod['func_3014'] = func_3014
mod = relay.transform.InferType()(mod)
output = func_3014()
func_3015 = relay.Function([], output)
mutated_mod['func_3015'] = func_3015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1616_call = mod.get_global_var('func_1616')
func_1617_call = mutated_mod.get_global_var('func_1617')
call_3132 = relay.TupleGetItem(func_1616_call(), 1)
call_3133 = relay.TupleGetItem(func_1617_call(), 1)
output = call_3132
output2 = call_3133
func_3145 = relay.Function([], output)
mod['func_3145'] = func_3145
mod = relay.transform.InferType()(mod)
output = func_3145()
func_3146 = relay.Function([], output)
mutated_mod['func_3146'] = func_3146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1616_call = mod.get_global_var('func_1616')
func_1617_call = mutated_mod.get_global_var('func_1617')
call_3166 = relay.TupleGetItem(func_1616_call(), 1)
call_3167 = relay.TupleGetItem(func_1617_call(), 1)
var_3172 = relay.var("var_3172", dtype = "bool", shape = (10, 11, 10))#candidate|3172|(10, 11, 10)|var|bool
bop_3173 = relay.logical_or(call_3166.astype('bool'), relay.reshape(var_3172.astype('bool'), relay.shape_of(call_3166))) # shape=(10, 11, 10)
bop_3176 = relay.logical_or(call_3167.astype('bool'), relay.reshape(var_3172.astype('bool'), relay.shape_of(call_3167))) # shape=(10, 11, 10)
output = relay.Tuple([bop_3173,])
output2 = relay.Tuple([bop_3176,])
func_3193 = relay.Function([var_3172,], output)
mod['func_3193'] = func_3193
mod = relay.transform.InferType()(mod)
mutated_mod['func_3193'] = func_3193
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3194 = relay.var("var_3194", dtype = "bool", shape = (10, 11, 10))#candidate|3194|(10, 11, 10)|var|bool
func_3193_call = mutated_mod.get_global_var('func_3193')
call_3195 = func_3193_call(var_3194)
output = call_3195
func_3196 = relay.Function([var_3194], output)
mutated_mod['func_3196'] = func_3196
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3241 = relay.var("var_3241", dtype = "float32", shape = (16, 7, 14))#candidate|3241|(16, 7, 14)|var|float32
uop_3242 = relay.erf(var_3241.astype('float32')) # shape=(16, 7, 14)
func_1616_call = mod.get_global_var('func_1616')
func_1617_call = mutated_mod.get_global_var('func_1617')
call_3253 = relay.TupleGetItem(func_1616_call(), 0)
call_3254 = relay.TupleGetItem(func_1617_call(), 0)
output = relay.Tuple([uop_3242,call_3253,])
output2 = relay.Tuple([uop_3242,call_3254,])
func_3263 = relay.Function([var_3241,], output)
mod['func_3263'] = func_3263
mod = relay.transform.InferType()(mod)
var_3264 = relay.var("var_3264", dtype = "float32", shape = (16, 7, 14))#candidate|3264|(16, 7, 14)|var|float32
output = func_3263(var_3264)
func_3265 = relay.Function([var_3264], output)
mutated_mod['func_3265'] = func_3265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_878_call = mod.get_global_var('func_878')
func_879_call = mutated_mod.get_global_var('func_879')
call_3334 = relay.TupleGetItem(func_878_call(), 0)
call_3335 = relay.TupleGetItem(func_879_call(), 0)
func_2805_call = mod.get_global_var('func_2805')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_3338 = func_2805_call()
call_3339 = func_2805_call()
output = relay.Tuple([call_3334,call_3338,])
output2 = relay.Tuple([call_3335,call_3339,])
func_3340 = relay.Function([], output)
mod['func_3340'] = func_3340
mod = relay.transform.InferType()(mod)
output = func_3340()
func_3341 = relay.Function([], output)
mutated_mod['func_3341'] = func_3341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2916_call = mod.get_global_var('func_2916')
func_2918_call = mutated_mod.get_global_var('func_2918')
call_3365 = relay.TupleGetItem(func_2916_call(), 0)
call_3366 = relay.TupleGetItem(func_2918_call(), 0)
func_3340_call = mod.get_global_var('func_3340')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_3369 = relay.TupleGetItem(func_3340_call(), 1)
call_3370 = relay.TupleGetItem(func_3341_call(), 1)
func_455_call = mod.get_global_var('func_455')
func_460_call = mutated_mod.get_global_var('func_460')
const_3372 = relay.const([4,6,-7,-10,-7,8,-6,10,-2,-7,6,-10,9,-7,3,-9,-9,4,2,-2,7,-2,5,-10,5,-3,1], dtype = "uint8")#candidate|3372|(27,)|const|uint8
var_3373 = relay.var("var_3373", dtype = "uint8", shape = (189,))#candidate|3373|(189,)|var|uint8
const_3374 = relay.const([[2.529417],[-2.766943],[-6.332479],[-6.788406],[-5.904944],[-2.609089],[8.778219],[-7.833581],[6.461123],[-8.233347],[2.567464],[-1.757007],[-3.683106],[2.622734],[-2.199760],[9.486038],[4.583352],[-4.135638],[-7.970684],[-1.891543],[-0.936823],[-1.070983],[9.912801],[-2.563691],[-6.174713],[4.910495],[9.372627],[-5.121098],[5.793462],[-7.795660],[6.640158],[-2.692025],[9.795758],[3.611438],[1.223139],[-3.604823],[-7.927157],[-8.129759],[8.777994],[-6.467910],[5.425609],[3.506364],[9.462637],[-0.166129],[7.459594],[-9.644288],[-8.832239],[-2.809345],[-3.649644],[1.258948],[2.006514],[9.403707],[1.531156],[4.175298],[-8.500267],[-1.462107],[1.864347],[-2.375947],[-4.933558],[-8.586374],[9.724961],[-8.639840],[6.230104],[8.865730],[-5.072632],[9.414404],[-1.839870],[4.491404],[-9.650157],[-8.752134],[-3.803808],[-2.722732],[-3.187351],[2.268050],[8.244705],[6.176082],[-7.279215],[-0.038779],[-7.522072],[5.776020],[7.107455],[-0.298702],[-7.092288],[0.797826],[7.300846],[0.748377],[-8.366821],[4.752977],[6.983530],[0.092116],[-3.537664],[6.943314],[7.677229],[-8.102850],[-2.776226],[-9.070029],[0.640653],[1.476097],[1.944367],[-7.794131],[7.219598],[-1.545436],[-5.601640],[-3.452253],[-6.389647],[-4.978293],[-3.584137],[-5.489367],[-0.967064],[8.665628],[-9.120256],[-7.600738],[7.399591],[0.012910],[-9.672460],[7.545967],[-0.635577],[2.430751],[9.022810],[-0.163164],[-3.493186],[2.440984],[-9.237491],[-0.788174],[-5.555638],[8.178641],[9.977995],[-9.506329],[-0.785420],[7.501918],[-2.082941],[-8.452509],[4.720009],[9.236020],[8.281971],[-3.368512],[-5.406325],[7.161996],[3.383929],[7.916864],[9.223723],[6.059125],[-6.349576],[9.666655],[4.104758],[1.158390],[8.958423],[-9.421212],[-3.060268],[-2.693288],[5.710660],[5.582395],[-6.758806],[7.287456],[-0.128800],[6.046638],[8.062437],[-8.291354],[3.039861],[-2.415752],[9.066346],[-8.922094],[8.533972],[3.542306],[-4.014298],[-9.677230],[-4.648789],[5.894170],[-9.002017],[5.689084],[-0.115277],[-5.899639],[8.040304],[0.793815],[9.626264],[8.656268],[-2.712982],[2.263451],[7.883413],[0.212232],[-3.969053],[2.195715],[9.618827],[2.004508],[1.441775],[-7.440503],[-5.663254],[-6.139678],[8.586702],[-7.904839],[6.846708],[0.111081],[7.952899],[-4.691204],[7.640179],[-4.719222],[0.675898],[3.286104],[-5.087246],[-9.547105],[3.516379],[6.014840],[3.970932],[0.449111],[-4.522407],[1.370707],[4.804555],[7.749047],[-9.197055],[7.474101],[5.938200],[5.282878],[-0.625100],[7.292796],[-8.857453],[-6.186920],[-5.435258],[2.292659],[8.752169],[-4.360448],[-3.001963],[-9.591390],[0.142442],[-7.562662],[0.843313],[4.867839],[9.200042],[0.941106],[8.812954],[-3.872964],[-3.680441],[3.223345],[3.193442],[-3.768928],[5.334255],[-7.833175],[3.223488],[-2.489035],[-9.896374],[-9.682073],[-1.212287],[-2.026807],[-0.726353],[8.782782],[-7.077336],[6.694721],[7.342881],[7.036471],[6.495086],[2.948286],[-3.474873],[-5.976348],[-5.996565],[-6.864634],[2.108660],[-8.280918]], dtype = "float64")#candidate|3374|(256, 1)|const|float64
const_3375 = relay.const([-2.826665,6.137008,0.861532,2.576534,-1.479133,7.985296,9.493962,-9.176689,-5.008512,6.593707,5.448535,1.574923,-9.652635,6.010462,-1.405952,3.804269,0.211837,7.151037,-4.041544,4.957024,9.595007,-0.423282,-9.895469,-5.307689,-1.289631,5.487154,-5.296103,-3.762008,5.837692,-1.166051,3.569415,-3.204801,-4.928216,2.200061,6.242649,8.775497,6.197561,5.680770,9.885115,-0.403234,4.898549,0.785292,-3.086870,-1.561112,9.020886,5.746422,-0.822632,-9.984664,2.028426,0.708058,-8.177405,0.835978,6.871747,7.602024,-0.597448,-2.710643,-2.726419,5.048731,7.262004,-4.358497,-5.243702,4.530342,7.044877,-6.984356,4.986954,1.447511,-3.805738,7.743656,0.344141,-7.640644,-5.445532,8.928615,8.954457,7.182246,-8.393919,2.735668,7.178480,-2.514788,-0.449378,6.912096,-3.178502,-1.961618,4.246077,-1.432701,-7.667254,9.307536,4.488777,7.504745,4.420151,-5.167965,-0.479743,2.537429,-1.369425,4.377424,-9.641286,0.187920,4.788490,2.587367,5.121636,-8.474167,2.111286,4.166695,-0.342033,9.962320,8.293732,-4.245553,3.522923,-7.757068,6.538398,2.820944,-8.813044,-1.639943,-4.715317,9.894749,-6.097322,5.457560,1.240972,-2.815679,-9.764270,7.529381,3.751462,6.431468,4.831805,6.903876,8.228858,-0.624670,6.734575,-5.024436,4.197104,2.354184,9.358152,9.967973,0.640227,-1.869261,8.541114,-6.901260,8.654972,0.918554,4.507776,4.702129,1.870050,-6.344281,1.401301,-1.316427,-5.945027,-0.638852,8.296219,-4.071123,1.873169,-9.349204,3.582830,-9.566269,-1.126675,8.008626,-0.101914,4.549197,2.025600,-8.801768,-8.363747,3.190497,-3.740344,-9.161496,3.886921,6.836889,6.342430,8.180250,-2.293507,-1.009841,1.610603,-7.974641,-6.157893,-8.995347,9.678358,-3.309461,7.573364,6.651184,1.562787,6.433009,-7.613033,-8.164024,-0.210725,-0.757763,1.127295,-5.323861,5.567631,-0.770570,-0.824711,7.066035,3.447389,9.019266,6.113516,-2.871278,-0.223009,0.961690,-6.862393,-7.773069,7.076402,6.094171,1.610646,1.210615,-7.663575,6.177308,-2.290797,8.164232,-6.699401,5.864943,6.222578,7.930036,2.985654,-6.045985,-2.693306,0.326808,-5.004641,-6.592848,-3.870432,-2.630557,1.775114,7.457552,-1.635166,8.170812,4.823239,-4.277398,-8.278655,-0.402916,-8.246083,-3.647792,3.151132,-9.770592,-4.194659,-6.534297,-5.546203,-5.800354,-3.065447,-4.810215,-3.494342,1.521305,-9.006978,-8.549099,2.488452,-1.565994,2.055944,-5.194726,-7.463420,-8.265495,9.852061,2.287018,0.509176,3.341004,8.679670,-9.693917,1.377945,8.028045,6.377330,6.719072,-8.175479,-8.149849,-0.883019,3.826654,9.034042,2.746884,-5.990670,8.013241,-8.919688,4.238953,-8.811510,2.915356,7.832115,6.229172,-3.928951,-7.128466,-4.798945,7.276978,3.222384,-4.042851,-1.142538,-3.584230,-2.491723,5.924495,-1.623089,5.359757,-9.703007,3.429466,7.570735,2.308585,3.681482,0.667174,-9.869040,-3.670457,3.143976,3.862612,-3.671175,-6.309015,6.215763,-6.735333,-5.288547,-8.538227,-3.338718,-2.479985,-8.774552,-7.385685,1.479162,3.469760,-5.635011,-4.856759,-5.371101,1.388011,2.791933,-6.007754,6.998396,-6.389242,-1.722047,3.577298,-0.849103,-5.231340,2.989799,-4.387399,-7.973360,-7.080699,6.065426,-7.993128,-6.588067,6.600985,2.905784,-8.095105,-0.346250,-1.378953,7.878526,5.325859,-0.833148,-4.733828,-9.984901,-0.775490,8.443478,5.957998,1.216349,-6.239459,-5.595229,6.526180,4.996391,-2.569174,4.920511,-1.321420,-8.081686,-3.612966,-2.917458,-3.500140,-4.701359,0.733088,-8.495955,-5.048439,4.261739,3.571692,-6.216148,1.521193,8.759792,2.387490,8.338665,0.214881,-3.958802,-4.821520,8.374666,6.386087,8.838365,8.695298,-7.912624,-8.270713,-7.594107,7.611128,-0.389339,2.982101,-8.636269,-7.851713,-1.761660,-7.633360,-5.705622,3.087314,4.517769,0.587379,-0.037397,-7.873125,-3.963070,-8.856521,4.596584,-0.431650,-3.737963,8.002963,-5.539918,-2.874853,4.159322,2.961683,2.835874,1.619215,-8.108368,-2.814901,7.324682,1.521764,7.111189,7.844819,3.094127,-9.462587,2.924212,-5.635511,-0.384631,-4.112959,0.375426,0.926229,0.534050,-0.432372,8.757265,-5.997567,8.146305,-2.714061,3.498289,5.045769,2.082808,-3.797146,2.554086,1.963680,-9.552094,-6.656950,8.373792,-6.570748,-7.758221,-0.269901,6.939918,0.405783,-8.834949,8.572725,7.654813,-1.084622,1.291873,1.117133,-2.199844,-4.678530,-4.527148,-5.866656,-4.711493,-9.330435,9.692999,-1.309633,5.434799,-5.259827,0.570290,9.001490,-0.606425,-8.874600,4.496422,8.474728,-0.450985,-0.698044,-8.459319,-5.830851,3.714932,1.552855,-2.309759,-7.351779,4.697302,8.102813,-8.172348,8.473386,1.676226,-0.516784,4.310858,-8.183424,8.253200,6.866549,5.417874,-5.063001,-4.693066,-6.553320,0.111476,7.717287,1.924257,-9.913215,5.318008,-0.955547,0.356269,2.386635,-5.955692,-0.862046,-6.284490,8.547272,7.585075,8.575764,-8.640693,-3.040797,-7.482027,-4.133205,4.129220,8.757168,4.289743,8.612080,6.685797,2.448089,-4.820705,2.213285,3.140180,-3.413828,7.747912,3.672723,5.292972,3.480027,4.261070,2.000389,-7.996518,1.251049,6.635404,-0.049720,-5.189246,-8.347213,9.045366,5.159690,6.143935,-6.401539,6.643298,-1.337383,9.083554,-5.085141,2.053404,9.785956,0.407509,3.862422,0.247306,5.408875,-3.322614,-0.344303,4.104582,-7.092295,-1.228019,4.097868,-6.944813,-7.675618,-9.988900,-9.297153,7.041538,6.308068,0.090955,6.933435,2.400391,-6.161783,-1.780145,4.631858,-3.993126,-6.950104,-7.208646,0.492923,5.206771,7.226030,-7.607248,-8.935156,7.730019,-1.723791,-8.739938,-9.388278,-1.532841,2.765792,1.790087,3.864210,2.364613,-6.933044,3.645223,-5.901379,-2.608072,-7.649663,-4.987512,-2.814963,9.325171,-4.467299,-5.124090,7.747521,7.572585,4.562529,3.175334,-1.532675,7.648555,7.779515,-2.750785,4.915924,5.437697,-5.090208,-2.089346,0.004873,3.655958,-1.822013,-5.431108,4.790630,-8.387347,9.311495,6.502783,-4.491375,-1.641401,5.130405,-7.052250,4.823481,9.616432,5.003586,-2.764950,3.668735,-3.217361,6.289161,8.684924,-0.597338,-1.734855,0.644616,2.637516,-8.552042,0.900645,1.056457,-1.671675,1.691345,-4.270827,-4.156365,-4.132849,-6.692553,3.973405,3.285073,-0.676378,-7.270936,1.119621,-5.248885,-3.694533,8.903603,2.284019,9.178895,8.064929,8.346813,5.487394,7.085735,5.892502,-2.554049,3.918890,8.070898,0.190622,-4.338200,3.231007,5.081616,4.719816,-2.849982,2.561228,6.099448,-5.274211,-5.169888,-3.639422,1.725595,-9.534164,-1.202620,-5.323588,4.536399,2.992626,-9.916505,1.819910,-5.665616,-6.598085,7.352203,-1.316548,5.289764,4.154104,-6.973277,4.739399,1.018090,5.933244,5.046632,3.721268,4.999719,9.461524,3.716714,-0.495106,3.911948,-4.052203,-4.696193,9.338363,-1.628025,-4.394576,-5.874850,-5.530185,9.752543,1.495962,5.758577,1.374374,-6.818278,7.836842,5.869264,2.677118,-0.781297,2.192592,2.919205,-0.364310,1.697960,-0.250673,-0.438990,9.058968,5.404905,4.453565,5.619566,7.475732,9.231378,-7.598596,-4.731737,8.674814,6.991898,-7.853836,-7.183948,-6.630789,1.437053,1.939053,-5.968311,6.553954,-3.944935,-4.285947,0.286905,1.403094,-1.975786,-8.253396,0.676651,-2.994128,-7.027369,7.168344,2.596658,8.004816,8.594079,3.359777,2.728798,6.760764,4.893542,-7.445312,9.013951,3.755983,1.966736,1.969812,1.172132,1.911735,-9.159210,-6.458378,8.884708,-9.934754,4.411810,-0.530909,-3.134036,-3.588491,6.444649,-2.626620,-3.556202,1.262950,9.178390,-7.588801,-5.927838,6.242288,5.641883,-3.733798,9.350493,3.828319,-0.400533,9.590357,8.645727,-9.703737,-1.817863,6.311231,-0.312044,-1.532492,4.036806,4.717148,9.764845,-7.309367,-0.183046,1.186900,3.175642,-1.282374,-5.775176,-3.053122,1.728798,-5.034401,-4.268774,-9.551010,-6.459342,-0.078911,-8.527818,6.212132,-1.557486,-8.715992,7.158972,-2.331163,-1.277968,-6.664916,6.035573,-9.140730,-5.551240,-0.986615,-7.821062,8.212514,-5.800279,5.894701,5.658387,-0.656295,-5.642940,9.926040,-0.691355,8.744007,-5.394579,7.830999,-3.806562,2.467783,-5.888137,6.021121,-9.498008,-5.731743,7.709099,9.941033,-9.850529,-5.923563,-7.680924,-4.053866,-3.555073,9.804272,-4.043111,-9.241666,-5.443511,5.079203,9.087449,-4.274215,1.595982,-4.968049,-2.465749,-9.234014,9.269986,4.848438,-0.906090,-4.962464,5.905474,9.921860,-5.940415,9.892900,6.394557,-0.451147,1.260832,8.350625,6.575887,6.623490,3.651622,-0.999203,1.343366,0.507018,-6.212405,-5.323651,7.233806,0.335737,3.159825,1.108378,7.953194,5.209382,-1.482787,7.547747,5.379528,8.108386,-8.536459,0.048763,7.081149,1.304355,0.461149,-4.832684,-3.346142,-6.404436,-3.514412,-6.583703,5.502344,-9.761617,-1.772280,2.096158,3.207637,2.648797,1.042933,8.682718,5.627401,-2.854590,-6.991030,2.924224,-8.241222,-9.023517,6.006305,-3.587974,-2.537367,-7.872823,-1.778485,-0.017083,-7.785140,-2.501955,5.269712,9.591294,-5.471577,7.326564,-4.710867,4.950030,-2.555243,7.685269,8.584077,9.973110,-3.749023,-4.325065,4.090210,-1.513838,-3.449413,5.677029,-6.354009,-9.096259,-0.362320,4.525308,5.706714,4.011368,-9.329605,3.586606,-8.756336,-0.200203,9.814536,-1.364021,6.148660,-8.349356,1.986246,3.531497,-8.642101,-3.780590,8.563426,7.711053,0.957043,1.532560,5.377678,4.094642,3.992400,1.153821,-7.526051,8.754177,-1.089213,-3.755731,-7.983837,-6.002889,8.247516,9.535833,-0.288818,8.815934,-9.873021,-0.031300,-5.258249,9.075554,2.888051,-9.435290,-2.216187,7.941921,3.461808,-6.456422,-1.124219,5.542879,-8.817104,-1.997625,1.455996,-4.071973,-6.371702,-9.470751,-2.819693,-6.906497,-1.648255,1.389848,5.487070,4.602549,-7.186461,-5.060991,-2.955370,7.339866,-1.255071,-5.493482,7.908819,4.125862,4.729832,-6.342503,-3.663744,2.962803,8.335316,5.857895,5.268894,-3.579224,6.901655,-2.702813,-6.701697,-8.055466,-9.503859,-7.781962,6.647680,6.841087,9.360464,-7.746009,8.617679,-5.681874,-0.039563,8.660408,0.810230,-3.148828,-2.250302,-5.460715,-7.709278,7.570079,3.674822,-6.649177,-7.310746,0.124900,-2.219966,9.041997,0.386243,-8.852685,7.734445,-2.010152,6.882773,6.169345,4.451783,-8.298924,-2.925388,-1.553855,-7.860679,-2.216048,6.548245,-9.590751,3.601756,6.233118,-9.879745,1.491063,6.240648,-0.023523,-0.414728,-1.660368,1.254334,1.673393,-8.783897,-8.206240,-8.298601,4.318091,-8.352200,1.625062,1.171920,7.117861,9.547534,-8.373629,-2.416648,7.748146,-0.081180,-2.808385,5.695515,-6.478285,-4.266808,-2.016431,5.733035,-6.016953,3.629408,-5.921281,-9.134944,-0.204767,-0.815793,-6.336285,7.552492,8.834350,6.424675,-4.274958,8.163947,-4.128066,3.704463,-8.491517,1.884527,-1.000273,6.243606,3.818619,-3.847895,3.618872,-2.603405,8.934328,5.743018,-0.170895,3.971894,4.765458,0.498442,-1.540991,-7.455868,3.546788,4.703071,1.755912,-7.941637,-1.709546,-8.787206,6.245965,3.304932,5.166290,3.921526,9.088635,-7.118803,2.784447,-5.787832,-7.006870,8.641362,-4.009358,6.990626,6.687176,2.913217,0.473930,2.627919,-1.094770,5.149725,4.624788,1.935696,2.827339,-5.085340,7.594296,-4.941194,1.142125,-0.108976,-2.313630,0.511792,0.610098,2.982054,3.057921,-5.988561,2.725885,4.274398,-6.470516,7.570266,-6.796464,4.738092,5.792999,3.232762,1.436128,-6.635050,6.967589,7.246389,-6.351554,7.404450,8.646654,-3.780446,-2.964232,6.963463,-9.015522,-4.020171,-2.303514,8.021634,-4.427236,9.536606,-2.023276,8.600758,6.621352,-9.681763,-2.810981,9.767226,2.788404,-3.760782,6.412109,1.863953,7.721290,-5.974516,6.118540,3.516415,-6.858742,2.084786,-1.982299,1.223586,1.854313,-1.055005,8.780784,3.303296,8.011058,-0.218843,5.700252,-5.944720,-9.141297,8.096374,-7.242268,4.942033,6.759901,7.778718,1.645574,2.513963,0.139385,-0.670715,-9.674618,8.037381,-2.881807,-6.809737,1.493461,-2.373652,-0.715873,4.773569,-1.493037,3.940277,4.787135,4.312162,6.535254,6.193850,-8.295590,-1.390378,5.272035,-4.052806,8.058554,-7.141819,-3.450410,-5.383521,-4.495524,1.831176,-6.632652,-5.257653,-5.065521,5.379429,-0.612260,-2.816743,-1.199997,0.398367,-2.949963,3.817451,1.527789,3.896199,-0.691932,-6.024960,2.062952,3.096508,-5.991238,-2.973811,-8.997744,6.848824,-3.857499,3.793067,-2.926604,5.358721,6.123002,-8.268821,-5.436065,-6.343456,-6.462218,7.362635,-8.163429,4.775631,-8.809265,5.711531,1.902743,2.178397,-8.113443,6.353799,-3.728694,-4.144526,6.912183,-0.279832,-8.417672,3.697725,0.260559,-2.069919,9.782624,-4.355805,6.997491,-3.924635,-0.977176,8.840031,4.978065,6.300241,5.253757,5.448022,7.511780,-6.502241,-9.064174,-9.465759,-9.385726,3.553805], dtype = "float64")#candidate|3375|(1260,)|const|float64
call_3371 = relay.TupleGetItem(func_455_call(relay.reshape(const_3372.astype('uint8'), [3, 9, 1]), relay.reshape(var_3373.astype('uint8'), [3, 9, 7]), relay.reshape(const_3374.astype('float64'), [1, 256]), relay.reshape(const_3375.astype('float64'), [9, 140]), ), 1)
call_3376 = relay.TupleGetItem(func_460_call(relay.reshape(const_3372.astype('uint8'), [3, 9, 1]), relay.reshape(var_3373.astype('uint8'), [3, 9, 7]), relay.reshape(const_3374.astype('float64'), [1, 256]), relay.reshape(const_3375.astype('float64'), [9, 140]), ), 1)
func_2805_call = mod.get_global_var('func_2805')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_3386 = func_2805_call()
call_3387 = func_2805_call()
bop_3397 = relay.floor_divide(call_3371.astype('float32'), relay.reshape(const_3374.astype('float32'), relay.shape_of(call_3371))) # shape=(8, 4, 8)
bop_3400 = relay.floor_divide(call_3376.astype('float32'), relay.reshape(const_3374.astype('float32'), relay.shape_of(call_3376))) # shape=(8, 4, 8)
bop_3403 = relay.not_equal(const_3375.astype('bool'), const_3374.astype('bool')) # shape=(256, 1260)
uop_3408 = relay.erf(var_3373.astype('float32')) # shape=(189,)
output = relay.Tuple([call_3365,call_3369,const_3372,call_3386,bop_3397,bop_3403,uop_3408,])
output2 = relay.Tuple([call_3366,call_3370,const_3372,call_3387,bop_3400,bop_3403,uop_3408,])
func_3419 = relay.Function([var_3373,], output)
mod['func_3419'] = func_3419
mod = relay.transform.InferType()(mod)
var_3420 = relay.var("var_3420", dtype = "uint8", shape = (189,))#candidate|3420|(189,)|var|uint8
output = func_3419(var_3420)
func_3421 = relay.Function([var_3420], output)
mutated_mod['func_3421'] = func_3421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1646_call = mod.get_global_var('func_1646')
func_1648_call = mutated_mod.get_global_var('func_1648')
call_3441 = relay.TupleGetItem(func_1646_call(), 0)
call_3442 = relay.TupleGetItem(func_1648_call(), 0)
var_3446 = relay.var("var_3446", dtype = "float64", shape = (10, 11, 10))#candidate|3446|(10, 11, 10)|var|float64
bop_3447 = relay.minimum(call_3441.astype('int16'), relay.reshape(var_3446.astype('int16'), relay.shape_of(call_3441))) # shape=(10, 11, 10)
bop_3450 = relay.minimum(call_3442.astype('int16'), relay.reshape(var_3446.astype('int16'), relay.shape_of(call_3442))) # shape=(10, 11, 10)
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_3461 = func_2078_call()
call_3462 = func_2078_call()
func_1099_call = mod.get_global_var('func_1099')
func_1100_call = mutated_mod.get_global_var('func_1100')
call_3469 = func_1099_call()
call_3470 = func_1099_call()
output = relay.Tuple([bop_3447,call_3461,call_3469,])
output2 = relay.Tuple([bop_3450,call_3462,call_3470,])
func_3483 = relay.Function([var_3446,], output)
mod['func_3483'] = func_3483
mod = relay.transform.InferType()(mod)
var_3484 = relay.var("var_3484", dtype = "float64", shape = (10, 11, 10))#candidate|3484|(10, 11, 10)|var|float64
output = func_3483(var_3484)
func_3485 = relay.Function([var_3484], output)
mutated_mod['func_3485'] = func_3485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_3502 = relay.TupleGetItem(func_1932_call(), 0)
call_3503 = relay.TupleGetItem(func_1933_call(), 0)
func_1175_call = mod.get_global_var('func_1175')
func_1178_call = mutated_mod.get_global_var('func_1178')
var_3511 = relay.var("var_3511", dtype = "int32", shape = (392,))#candidate|3511|(392,)|var|int32
call_3510 = relay.TupleGetItem(func_1175_call(relay.reshape(var_3511.astype('int32'), [98, 4])), 1)
call_3512 = relay.TupleGetItem(func_1178_call(relay.reshape(var_3511.astype('int32'), [98, 4])), 1)
output = relay.Tuple([call_3502,call_3510,var_3511,])
output2 = relay.Tuple([call_3503,call_3512,var_3511,])
func_3544 = relay.Function([var_3511,], output)
mod['func_3544'] = func_3544
mod = relay.transform.InferType()(mod)
mutated_mod['func_3544'] = func_3544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3545 = relay.var("var_3545", dtype = "int32", shape = (392,))#candidate|3545|(392,)|var|int32
func_3544_call = mutated_mod.get_global_var('func_3544')
call_3546 = func_3544_call(var_3545)
output = call_3546
func_3547 = relay.Function([var_3545], output)
mutated_mod['func_3547'] = func_3547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1826_call = mod.get_global_var('func_1826')
func_1827_call = mutated_mod.get_global_var('func_1827')
call_3551 = relay.TupleGetItem(func_1826_call(), 0)
call_3552 = relay.TupleGetItem(func_1827_call(), 0)
func_2805_call = mod.get_global_var('func_2805')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_3557 = func_2805_call()
call_3558 = func_2805_call()
uop_3562 = relay.log10(call_3551.astype('float64')) # shape=(10, 11, 10)
uop_3564 = relay.log10(call_3552.astype('float64')) # shape=(10, 11, 10)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_3575 = relay.TupleGetItem(func_1250_call(), 1)
call_3576 = relay.TupleGetItem(func_1252_call(), 1)
output = relay.Tuple([call_3557,uop_3562,call_3575,])
output2 = relay.Tuple([call_3558,uop_3564,call_3576,])
func_3597 = relay.Function([], output)
mod['func_3597'] = func_3597
mod = relay.transform.InferType()(mod)
output = func_3597()
func_3598 = relay.Function([], output)
mutated_mod['func_3598'] = func_3598
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3617 = relay.var("var_3617", dtype = "uint32", shape = ())#candidate|3617|()|var|uint32
var_3618 = relay.var("var_3618", dtype = "uint32", shape = (16, 16, 14))#candidate|3618|(16, 16, 14)|var|uint32
bop_3619 = relay.subtract(var_3617.astype('uint32'), var_3618.astype('uint32')) # shape=(16, 16, 14)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_3627 = relay.TupleGetItem(func_1250_call(), 0)
call_3628 = relay.TupleGetItem(func_1252_call(), 0)
func_714_call = mod.get_global_var('func_714')
func_717_call = mutated_mod.get_global_var('func_717')
var_3633 = relay.var("var_3633", dtype = "int32", shape = (135,))#candidate|3633|(135,)|var|int32
call_3632 = func_714_call(relay.reshape(var_3633.astype('int32'), [3, 3, 15]))
call_3634 = func_714_call(relay.reshape(var_3633.astype('int32'), [3, 3, 15]))
output = relay.Tuple([bop_3619,call_3627,call_3632,var_3633,])
output2 = relay.Tuple([bop_3619,call_3628,call_3634,var_3633,])
func_3653 = relay.Function([var_3617,var_3618,var_3633,], output)
mod['func_3653'] = func_3653
mod = relay.transform.InferType()(mod)
var_3654 = relay.var("var_3654", dtype = "uint32", shape = ())#candidate|3654|()|var|uint32
var_3655 = relay.var("var_3655", dtype = "uint32", shape = (16, 16, 14))#candidate|3655|(16, 16, 14)|var|uint32
var_3656 = relay.var("var_3656", dtype = "int32", shape = (135,))#candidate|3656|(135,)|var|int32
output = func_3653(var_3654,var_3655,var_3656,)
func_3657 = relay.Function([var_3654,var_3655,var_3656,], output)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2380_call = mod.get_global_var('func_2380')
func_2381_call = mutated_mod.get_global_var('func_2381')
call_3674 = relay.TupleGetItem(func_2380_call(), 0)
call_3675 = relay.TupleGetItem(func_2381_call(), 0)
func_2156_call = mod.get_global_var('func_2156')
func_2158_call = mutated_mod.get_global_var('func_2158')
call_3677 = relay.TupleGetItem(func_2156_call(), 1)
call_3678 = relay.TupleGetItem(func_2158_call(), 1)
output = relay.Tuple([call_3674,call_3677,])
output2 = relay.Tuple([call_3675,call_3678,])
func_3682 = relay.Function([], output)
mod['func_3682'] = func_3682
mod = relay.transform.InferType()(mod)
mutated_mod['func_3682'] = func_3682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3682_call = mutated_mod.get_global_var('func_3682')
call_3683 = func_3682_call()
output = call_3683
func_3684 = relay.Function([], output)
mutated_mod['func_3684'] = func_3684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_3706 = relay.TupleGetItem(func_1250_call(), 1)
call_3707 = relay.TupleGetItem(func_1252_call(), 1)
func_2513_call = mod.get_global_var('func_2513')
func_2517_call = mutated_mod.get_global_var('func_2517')
const_3719 = relay.const(-6, dtype = "uint64")#candidate|3719|()|const|uint64
const_3720 = relay.const([5,-7,6,10,-10,-9,-4,5,3,4,8,-9,5,-10,4,-2,-1,1,-4,7,9,-8,10,-6,9,7,9,8,-9,-6,8,-9,7,-8,-10,-9,-1,-3,-2,6,-10,9,-8,7,5,-10,1,6,1,3,9,4,10,-2,10,-4,-4,-2,-1,-10,2,1,-1,-5,1,6,9,1,-9,2,3,-10,10,-9,-10,-9,-1,8,-7,4,1,9,2,-9,-3,8,10,2,9,1,2,-2,2,5,-2,-7,-3,-3,6,-5,5,-4,-1,-5,8,10,7,3,1,-9,10,-4,-4,-7,-8,-9,6,-8,-10,7,-10,-9,6,-8,-1,2,7,-4,2,3,-4,5,-6,6,7,-5,8,-5,8,-3,-10,-10,-10,10,-8,6,-5,-9,-5,8,-8,-10,-9,-3,8,-5,1,-7,-2,5,-10,-9,1,8,4,-9,-1,9,5,6,-7,6,-8,9,2,7,6,-8,7,4,-4,-6,-5,6,6,-5,-4,-1,6,2,5,-9,-9,-7,-5,-8,7,3,-8,1,-4,8,-7,-10,-8,-10,-4,-3,8,-9,-4,-9,2,10,4,5,10,-5,2,-10,8,3,-9,-4,8,-9,10,-3,3,-4,7,-2,-5,-3,-2,7,-3,1,7,-10,-9,-9,-8,-3,6,-7,-9,9,7,8,5,9,-6,-3,-8,-1,-3,-7,-3,-3,10,-1,10,-2,3,4,7,-9,6,9,-4,-2,-1], dtype = "uint64")#candidate|3720|(273,)|const|uint64
call_3718 = relay.TupleGetItem(func_2513_call(relay.reshape(const_3719.astype('uint64'), []), relay.reshape(const_3720.astype('uint64'), [3, 13, 7]), ), 1)
call_3721 = relay.TupleGetItem(func_2517_call(relay.reshape(const_3719.astype('uint64'), []), relay.reshape(const_3720.astype('uint64'), [3, 13, 7]), ), 1)
func_2805_call = mod.get_global_var('func_2805')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_3726 = func_2805_call()
call_3727 = func_2805_call()
output = relay.Tuple([call_3706,call_3718,const_3719,const_3720,call_3726,])
output2 = relay.Tuple([call_3707,call_3721,const_3719,const_3720,call_3727,])
func_3734 = relay.Function([], output)
mod['func_3734'] = func_3734
mod = relay.transform.InferType()(mod)
mutated_mod['func_3734'] = func_3734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3734_call = mutated_mod.get_global_var('func_3734')
call_3735 = func_3734_call()
output = call_3735
func_3736 = relay.Function([], output)
mutated_mod['func_3736'] = func_3736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1616_call = mod.get_global_var('func_1616')
func_1617_call = mutated_mod.get_global_var('func_1617')
call_3754 = relay.TupleGetItem(func_1616_call(), 0)
call_3755 = relay.TupleGetItem(func_1617_call(), 0)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_3763 = func_676_call()
call_3764 = func_676_call()
func_3193_call = mod.get_global_var('func_3193')
func_3196_call = mutated_mod.get_global_var('func_3196')
call_3787 = relay.TupleGetItem(func_3193_call(relay.reshape(call_3754.astype('bool'), [10, 11, 10])), 0)
call_3788 = relay.TupleGetItem(func_3196_call(relay.reshape(call_3754.astype('bool'), [10, 11, 10])), 0)
func_3005_call = mod.get_global_var('func_3005')
func_3008_call = mutated_mod.get_global_var('func_3008')
const_3791 = relay.const([-2,-5,2,7,-6,-4,3,6,1,6,-9,-4,-10,-5,1,4,-6,2,-8,10,7,2,9,9,8,-1,-10,-3,-5,-3,-4,-2,8,10,3,2,3,-2,-6,2,6,-2,-2,1,5,4,10,2,1,8,10,-6,5,-5,8,-4,5,-3,3,2,7,-9,-5,-7,-3,-2,4,-5,-3,10,2,-6,-10,-3,2,-2,3,-5,2,-7,-8,7,-5,1,-7,-1,-4,5,7,-8,-3,-7,-2,7,6,-9,10,-6,-10,-5,9,5,5,9,8], dtype = "uint8")#candidate|3791|(105,)|const|uint8
call_3790 = relay.TupleGetItem(func_3005_call(relay.reshape(const_3791.astype('uint8'), [1, 105])), 1)
call_3792 = relay.TupleGetItem(func_3008_call(relay.reshape(const_3791.astype('uint8'), [1, 105])), 1)
func_3193_call = mod.get_global_var('func_3193')
func_3196_call = mutated_mod.get_global_var('func_3196')
call_3797 = relay.TupleGetItem(func_3193_call(relay.reshape(call_3787.astype('bool'), [10, 11, 10])), 0)
call_3798 = relay.TupleGetItem(func_3196_call(relay.reshape(call_3787.astype('bool'), [10, 11, 10])), 0)
output = relay.Tuple([call_3754,call_3763,call_3787,call_3790,const_3791,call_3797,])
output2 = relay.Tuple([call_3755,call_3764,call_3788,call_3792,const_3791,call_3798,])
func_3810 = relay.Function([], output)
mod['func_3810'] = func_3810
mod = relay.transform.InferType()(mod)
mutated_mod['func_3810'] = func_3810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3810_call = mutated_mod.get_global_var('func_3810')
call_3811 = func_3810_call()
output = call_3811
func_3812 = relay.Function([], output)
mutated_mod['func_3812'] = func_3812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2433_call = mod.get_global_var('func_2433')
func_2435_call = mutated_mod.get_global_var('func_2435')
call_3822 = func_2433_call()
call_3823 = func_2433_call()
output = relay.Tuple([call_3822,])
output2 = relay.Tuple([call_3823,])
func_3841 = relay.Function([], output)
mod['func_3841'] = func_3841
mod = relay.transform.InferType()(mod)
mutated_mod['func_3841'] = func_3841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mutated_mod.get_global_var('func_3841')
call_3842 = func_3841_call()
output = call_3842
func_3843 = relay.Function([], output)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3597_call = mod.get_global_var('func_3597')
func_3598_call = mutated_mod.get_global_var('func_3598')
call_3878 = relay.TupleGetItem(func_3597_call(), 1)
call_3879 = relay.TupleGetItem(func_3598_call(), 1)
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
const_3887 = relay.const([5,-2,2,4,-9,6,1,-2,-4,-1,1,6,-10,-2,-2,-3,-4,10,2,-5,5,9,-9,-6,1,7,-7,-10,5,7,8,4,7,-7,-8,-10,-6,-6,-9,1,2,-3,-2,7,6,3,-6,-5,-3,-1,-7,-1,-1,1,1,-1,-9,-1,7,6,-6,9,-8,-6,-9,1,8,-10,-8,1,2,-2,6,1,5,-1,8,10,6,-8,-3,-10,8,-1,2,8,6,4,5,-9,5,-9,2,1,-7,5,-6,4,7,-2,9,-1,-10,-9,2,-5,-8,10,-8,-7,7,-7,-7,7,-8,2,-9,-4,-10,3,-1,-9,-7,-10,-7,1,1,9,1,-3,-4,-6,-10,1,-3,3,5,6,10,-8,-5,3,9,5,7,-8,-4,6,-5,7,-3,6,2,-1,-8,-9,8,-10,-3,6,2,5,-10,-4,-7,-5,-9,10,2,4,-8,2,5,4,6,10,-6,8,5,1,2,4,-8,3,-6,10,9,2,6,2,6,2,6,-7,1,-6,-3,-4,-7,-9,-5,-6,2,8,4,10,1,-3,3,1,6,-6,-10,-2,-9,-9,-1,-9,-5,-1,-7,10,-4,-9,2,10,7,-1,-6,5,3,10,-1,6,-5,4,9,-2,-8,9,-10,10,-3,-6,3,4,7,9,-2,5,-4,-1,-4,6,-3,4,4,-1,-4,-7,8,2,-5,5,-5,-7,9,4,1,5,-6,5,2,8,1,-4,9,8,4,3,4,-10,6,-8,3,10,4,-9,9,4,-5,3,-2,-9,-6,10,2,5,-4,-4,-8,-8,10,-9,-7,3,9,7,6,-10,8,-4,-9,-8,-2,2,9,-2,-7,9,4,-7,7,6,2,8,5,-8,-1,-7,-1,2,-9,10,-7,-10,-1,4,3,-5,-6,-4,-5,3,-1,8,1,3,-6,6,3,4,4,-4,-10,3,4,-4,2,-6,2,-6,-5,1,-3,9,-4,10,3,-9,4,6,9,-8,9,-5,-9,-4,-9,8,-3,-6,9,6,-1,-4,7,7,-10,-9,9,10], dtype = "int32")#candidate|3887|(392,)|const|int32
call_3886 = relay.TupleGetItem(func_333_call(relay.reshape(const_3887.astype('int32'), [2, 14, 14])), 0)
call_3888 = relay.TupleGetItem(func_335_call(relay.reshape(const_3887.astype('int32'), [2, 14, 14])), 0)
var_3919 = relay.var("var_3919", dtype = "float64", shape = (10, 11, 10))#candidate|3919|(10, 11, 10)|var|float64
bop_3920 = relay.greater_equal(call_3878.astype('bool'), relay.reshape(var_3919.astype('bool'), relay.shape_of(call_3878))) # shape=(10, 11, 10)
bop_3923 = relay.greater_equal(call_3879.astype('bool'), relay.reshape(var_3919.astype('bool'), relay.shape_of(call_3879))) # shape=(10, 11, 10)
output = relay.Tuple([call_3886,const_3887,bop_3920,])
output2 = relay.Tuple([call_3888,const_3887,bop_3923,])
func_3927 = relay.Function([var_3919,], output)
mod['func_3927'] = func_3927
mod = relay.transform.InferType()(mod)
var_3928 = relay.var("var_3928", dtype = "float64", shape = (10, 11, 10))#candidate|3928|(10, 11, 10)|var|float64
output = func_3927(var_3928)
func_3929 = relay.Function([var_3928], output)
mutated_mod['func_3929'] = func_3929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4017 = relay.var("var_4017", dtype = "float32", shape = (14, 2, 14))#candidate|4017|(14, 2, 14)|var|float32
uop_4018 = relay.exp(var_4017.astype('float32')) # shape=(14, 2, 14)
output = relay.Tuple([uop_4018,])
output2 = relay.Tuple([uop_4018,])
func_4023 = relay.Function([var_4017,], output)
mod['func_4023'] = func_4023
mod = relay.transform.InferType()(mod)
mutated_mod['func_4023'] = func_4023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4024 = relay.var("var_4024", dtype = "float32", shape = (14, 2, 14))#candidate|4024|(14, 2, 14)|var|float32
func_4023_call = mutated_mod.get_global_var('func_4023')
call_4025 = func_4023_call(var_4024)
output = call_4025
func_4026 = relay.Function([var_4024], output)
mutated_mod['func_4026'] = func_4026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_4028 = relay.TupleGetItem(func_3841_call(), 0)
call_4029 = relay.TupleGetItem(func_3843_call(), 0)
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
const_4040 = relay.const([4,-4,9,1,-6,2,3,-2,-9,-4,2,1,-8,-4,-4,8,2,-4,9,9,-4,5,-7,2,10,10,-3,-8,2,7,-10,-1,-6,3,10,-3,3,2,3,-5,3,8,8,8,-9,3,7,-2,-1,-8,-7,5,-9,1,2,-8,3,10,2,-9,-2,-2,8,-2,9,10,-3,5,4,5,-3,-1,-8,6,-1,-3,-9,4,1,4,7,5,9,-3,7,8,-2,-4,4,-4,-7,7,-4,-3,8,2,-1,7,-8,-2,-10,-2,-1,-5,-10,-9,-8,3,9,4,3,-1,4,6,-10,-6,9,5,6,-5,10,3,10,7,-4,-5,10,3,5,5,-8,-8,-9,-8,-2,1,-5,-8,-10,4,-8,1,8,4,-5,-1,-2,-1,1,-7,-10,-4,1,-2,7,-7,9,-4,3,-2,-9,-1,-3,1,10,4,-4,-9,-10,-8,-8,-5,4,-6,7,5,-1,6,-9,-8,5,-2,-10,-6,1,9,-10,8,6,-10,10,-1,-2,-6,4,-1,-6,9,-2,-8,10,2,-4,5,4,4,-3,-8,-2,5,8,6,-8,2,10,3,-9,-2,-7,4,-4,-7,5,-1,8,2,1,10,3,-9,3,-2,1,7,1,-9,-2,-2,-10,4,9,5,-4,-9,-10,7,-2,-4,-3,1,2,10,6,1,-3,7,-10,1,-1,10,-1,-3,-8,-8,-9,4,10,-7,6,-6,4,-2,-8,-8,-5,10,-7,-1,-1,-5,-7,-4,-5,-5,1,-9,-5,-7,5,-1,6,-4,-8,8,-3,2,4,-9,6,-9,5,2,-10,-2,6,3,9,-7,-4,6,9,-9,3,1,6,-6,9,-3,-9,-6,-2,-9,8,-8,2,-2,-10,-4,-3,-2,-9,9,10,-9,-9,-6,-5,2,10,8,3,-2,10,-6,5,1,-10,-3,6,-9,-8,8,7,-9,-1,10,-4,7,-2,-9,2,-2,4,-3,9,5,-5,3,4,-3,-6,7,7,7,6,8,-8,10,-8,-2,3,6,-2,-1,10,9,7,7,-9,-5,10,3], dtype = "int32")#candidate|4040|(392,)|const|int32
call_4039 = relay.TupleGetItem(func_333_call(relay.reshape(const_4040.astype('int32'), [2, 14, 14])), 0)
call_4041 = relay.TupleGetItem(func_335_call(relay.reshape(const_4040.astype('int32'), [2, 14, 14])), 0)
output = relay.Tuple([call_4028,call_4039,const_4040,])
output2 = relay.Tuple([call_4029,call_4041,const_4040,])
func_4044 = relay.Function([], output)
mod['func_4044'] = func_4044
mod = relay.transform.InferType()(mod)
output = func_4044()
func_4045 = relay.Function([], output)
mutated_mod['func_4045'] = func_4045
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4098 = relay.const(-1, dtype = "uint8")#candidate|4098|()|const|uint8
const_4099 = relay.const([[[9,-5,1],[-6,10,-3],[-1,-10,-2],[-5,-4,-9],[-7,-3,4],[-7,1,-9],[-10,3,2],[8,6,8],[3,-9,6],[-5,6,8],[-8,-2,-8],[1,3,10],[2,9,-6],[-8,-10,-7],[6,1,-1]],[[-1,-5,6],[-5,3,-1],[-5,1,-2],[1,-7,8],[7,-5,5],[7,-5,-10],[-6,-9,3],[2,-4,-10],[-3,6,-1],[-3,8,7],[3,9,8],[10,2,-3],[-9,3,-1],[10,5,1],[10,-4,-3]]], dtype = "uint8")#candidate|4099|(2, 15, 3)|const|uint8
bop_4100 = relay.not_equal(const_4098.astype('bool'), const_4099.astype('bool')) # shape=(2, 15, 3)
output = relay.Tuple([bop_4100,])
output2 = relay.Tuple([bop_4100,])
func_4107 = relay.Function([], output)
mod['func_4107'] = func_4107
mod = relay.transform.InferType()(mod)
output = func_4107()
func_4108 = relay.Function([], output)
mutated_mod['func_4108'] = func_4108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4111 = relay.var("var_4111", dtype = "float32", shape = (6, 13, 8))#candidate|4111|(6, 13, 8)|var|float32
uop_4112 = relay.sigmoid(var_4111.astype('float32')) # shape=(6, 13, 8)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
var_4115 = relay.var("var_4115", dtype = "float32", shape = (189,))#candidate|4115|(189,)|var|float32
call_4114 = relay.TupleGetItem(func_2225_call(relay.reshape(var_4115.astype('float32'), [189,])), 3)
call_4116 = relay.TupleGetItem(func_2227_call(relay.reshape(var_4115.astype('float32'), [189,])), 3)
func_2433_call = mod.get_global_var('func_2433')
func_2435_call = mutated_mod.get_global_var('func_2435')
call_4126 = func_2433_call()
call_4127 = func_2433_call()
func_2805_call = mod.get_global_var('func_2805')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_4130 = func_2805_call()
call_4131 = func_2805_call()
uop_4136 = relay.log(uop_4112.astype('float64')) # shape=(6, 13, 8)
output = relay.Tuple([call_4114,var_4115,call_4126,call_4130,uop_4136,])
output2 = relay.Tuple([call_4116,var_4115,call_4127,call_4131,uop_4136,])
func_4158 = relay.Function([var_4111,var_4115,], output)
mod['func_4158'] = func_4158
mod = relay.transform.InferType()(mod)
var_4159 = relay.var("var_4159", dtype = "float32", shape = (6, 13, 8))#candidate|4159|(6, 13, 8)|var|float32
var_4160 = relay.var("var_4160", dtype = "float32", shape = (189,))#candidate|4160|(189,)|var|float32
output = func_4158(var_4159,var_4160,)
func_4161 = relay.Function([var_4159,var_4160,], output)
mutated_mod['func_4161'] = func_4161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1747_call = mod.get_global_var('func_1747')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_4186 = relay.TupleGetItem(func_1747_call(), 1)
call_4187 = relay.TupleGetItem(func_1749_call(), 1)
output = call_4186
output2 = call_4187
func_4202 = relay.Function([], output)
mod['func_4202'] = func_4202
mod = relay.transform.InferType()(mod)
output = func_4202()
func_4203 = relay.Function([], output)
mutated_mod['func_4203'] = func_4203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3734_call = mod.get_global_var('func_3734')
func_3736_call = mutated_mod.get_global_var('func_3736')
call_4209 = relay.TupleGetItem(func_3734_call(), 2)
call_4210 = relay.TupleGetItem(func_3736_call(), 2)
output = relay.Tuple([call_4209,])
output2 = relay.Tuple([call_4210,])
func_4220 = relay.Function([], output)
mod['func_4220'] = func_4220
mod = relay.transform.InferType()(mod)
mutated_mod['func_4220'] = func_4220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4220_call = mutated_mod.get_global_var('func_4220')
call_4221 = func_4220_call()
output = call_4221
func_4222 = relay.Function([], output)
mutated_mod['func_4222'] = func_4222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4107_call = mod.get_global_var('func_4107')
func_4108_call = mutated_mod.get_global_var('func_4108')
call_4228 = relay.TupleGetItem(func_4107_call(), 0)
call_4229 = relay.TupleGetItem(func_4108_call(), 0)
output = relay.Tuple([call_4228,])
output2 = relay.Tuple([call_4229,])
func_4230 = relay.Function([], output)
mod['func_4230'] = func_4230
mod = relay.transform.InferType()(mod)
output = func_4230()
func_4231 = relay.Function([], output)
mutated_mod['func_4231'] = func_4231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4285 = relay.var("var_4285", dtype = "float64", shape = (10, 11, 16))#candidate|4285|(10, 11, 16)|var|float64
uop_4286 = relay.acos(var_4285.astype('float64')) # shape=(10, 11, 16)
output = relay.Tuple([uop_4286,])
output2 = relay.Tuple([uop_4286,])
func_4291 = relay.Function([var_4285,], output)
mod['func_4291'] = func_4291
mod = relay.transform.InferType()(mod)
mutated_mod['func_4291'] = func_4291
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4292 = relay.var("var_4292", dtype = "float64", shape = (10, 11, 16))#candidate|4292|(10, 11, 16)|var|float64
func_4291_call = mutated_mod.get_global_var('func_4291')
call_4293 = func_4291_call(var_4292)
output = call_4293
func_4294 = relay.Function([var_4292], output)
mutated_mod['func_4294'] = func_4294
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4307 = relay.const([[[8.162724,5.950645,2.741940,7.579094,4.986539,8.837936,-8.715489,3.127686,8.251048,-4.850078,-4.049865,-4.199957,4.935978,-8.142406,-9.357240],[-5.494127,-9.192999,-9.207860,0.250298,-6.856923,-3.890115,-8.534650,3.601476,9.309736,-9.097728,-0.911512,-6.152375,-3.593186,4.095692,-5.069799],[-2.601321,9.626114,-7.328041,-5.414881,0.395623,-9.097217,2.634522,-9.042603,-6.326443,5.795197,-5.303348,0.070129,-2.341804,-8.823447,-8.739004],[0.776437,-7.139299,-4.718323,2.130022,-3.949335,4.441065,-0.952794,-5.922222,0.778732,-0.832662,2.658677,-4.556245,6.993033,-8.962477,-2.810532],[-1.595688,4.795910,2.864111,6.230081,-8.564325,3.362503,-3.130110,-3.001782,8.574483,-5.017028,5.379652,-6.347081,-0.672822,-1.271395,4.289051],[-8.061194,1.509810,-5.597120,8.578315,9.139028,-0.418053,2.055302,-6.045242,5.786588,2.782024,-7.727841,4.852869,1.549536,-4.890249,-1.464967],[-5.701888,-9.815539,-7.208313,-3.896197,-8.022213,2.173037,7.687643,-3.376602,6.768894,1.815636,0.133233,4.016663,-3.502780,-0.619410,-4.978719],[-4.247244,4.400163,-1.927029,-9.311275,5.785790,-2.923175,2.463413,3.228205,-8.947670,5.559778,-1.161985,5.492699,8.117483,-9.783222,-3.497950],[-4.806897,6.808139,4.283928,6.647796,9.458078,6.401045,3.309647,2.527104,-8.329167,0.305040,0.250903,-4.573029,7.865099,-1.321538,8.728863],[4.363630,5.999025,-5.424479,-5.814419,-7.674109,-5.892513,-8.857463,-5.958380,9.697305,7.146015,-9.692341,-2.076298,3.665070,-3.881317,0.142977]],[[-0.979739,4.743099,7.878234,0.944510,6.180853,8.843662,0.957400,-3.497071,8.105977,-0.757348,-6.375344,3.972985,1.807542,7.336203,-0.072166],[4.488232,9.814117,0.945653,-2.592394,-3.285600,-9.415529,-6.948399,5.228123,-0.731952,-9.376723,0.594681,4.884851,5.196317,2.724077,3.833936],[9.913342,5.285615,2.790528,7.493480,1.516007,-6.312734,-4.025129,8.632261,4.810821,-5.975383,-4.128979,-3.263263,5.307729,-3.670699,-0.648300],[-8.687251,-9.326459,-2.906983,-8.256167,-1.111546,-0.186280,-4.839165,3.007163,-0.769603,8.266035,-3.764861,3.168633,1.525769,-5.157102,4.147258],[3.334938,-3.797855,9.934103,-4.195022,-1.625583,0.624123,4.598099,8.232850,3.674678,7.065123,7.550378,-7.291349,-6.270724,7.527751,1.364850],[-1.774071,-7.149576,4.821617,3.720873,-1.088637,-8.496051,-6.710398,7.130565,-3.763368,-5.728085,0.754184,0.627198,-0.382332,5.874919,-6.268620],[-4.715779,-8.829303,2.206540,8.826989,1.914238,-8.486474,4.513795,9.785816,4.049521,-6.295571,9.493458,0.046640,8.427411,-0.953601,2.193258],[-0.281761,5.157108,-3.192017,-0.880965,-5.092168,5.546217,4.150025,4.256320,6.469076,-8.376213,-6.783711,3.284014,-6.577499,1.268034,-5.637692],[8.172628,9.804766,4.441310,0.434374,3.188253,0.382563,-0.021769,8.407902,5.657957,-5.848583,-3.730244,1.060253,-7.811174,1.911735,-9.799322],[-6.248461,-9.047925,6.946097,-8.750592,5.680965,-6.905520,-8.827384,0.823402,-6.752575,5.657932,-5.667424,-7.490221,8.298588,7.255681,-9.769423]],[[-3.461195,5.106917,-8.250137,-3.725583,7.233209,-7.537917,-4.977296,-6.993716,4.168399,-8.725976,-8.218407,-6.580992,-4.693167,2.790607,-1.266132],[-0.157572,4.222024,6.721803,-3.906673,-7.148956,8.473763,0.985968,8.489186,1.688213,-6.995406,3.518134,-8.567157,5.911174,-3.996623,-7.768417],[7.150142,7.557772,-8.089945,-7.972072,9.246813,-4.491867,-5.552471,-8.722005,-2.698352,-9.613621,-3.948364,8.531634,9.519710,9.232196,1.058644],[6.078128,-0.430652,2.178515,1.231786,2.657252,-8.600612,-6.885188,8.710684,7.205511,-6.479511,7.891142,1.928171,-3.635406,2.745281,-5.124299],[6.123481,8.272509,5.622119,1.200749,9.981936,4.324197,-9.710355,-8.012879,-9.951725,0.036157,6.606030,6.148207,2.146529,9.612875,-5.009204],[-1.624444,0.744456,6.128583,-5.441036,-6.165616,-0.225374,-2.013108,7.511469,-2.819895,-3.632516,-0.962986,-8.831682,-9.937618,8.633387,2.077905],[-3.317722,-5.385908,7.905303,-2.051628,-6.045492,7.613919,-8.460547,1.060409,-9.972821,2.639731,-5.737426,-5.929592,-5.734870,-3.045894,4.867292],[6.846989,1.732015,6.335737,5.801184,7.731279,-0.977634,-3.523209,-5.254254,-6.048882,-6.449548,3.092236,-3.125873,9.418095,-2.039592,-9.077739],[4.731762,8.868092,1.715338,-5.581838,-2.907705,-2.572405,-0.408391,2.931241,5.649731,-0.390147,-6.333907,-9.886608,1.875249,4.429368,7.120883],[6.521515,5.600142,-8.336468,-2.922221,7.543537,-9.204919,0.993170,2.096742,1.878689,3.104197,-2.893429,1.557358,-0.542410,-4.810571,-9.291707]],[[6.224558,7.283192,0.381581,-3.755319,-1.495483,-4.546763,7.635591,2.422428,7.329368,2.251288,-8.713111,-1.367019,-9.820802,9.461687,-6.365734],[2.361662,9.834220,-4.306765,-7.743869,-9.558344,-8.428049,2.547868,3.657172,-2.575701,1.214238,4.346855,1.515063,0.726351,-1.995912,5.609377],[-1.211053,-3.944244,6.633926,-5.674255,7.869088,-2.260955,-8.760945,-8.868336,-0.528885,-0.407401,-8.986075,-2.214202,6.931123,-0.842696,-2.944624],[-3.527253,-8.213345,-4.688397,4.432293,3.191649,-0.961255,-8.883252,4.750287,-4.130330,-4.686165,4.281361,-9.621293,-1.503754,5.242699,2.250734],[-8.553533,-6.678618,-0.156748,-4.862515,-0.377748,8.586623,0.275186,1.172106,-9.221503,4.386955,-4.129474,8.397253,-2.836695,-8.154825,-5.628314],[7.713106,9.427673,7.395261,-8.439469,6.462830,1.611779,9.058629,-1.393306,1.199530,-6.598688,9.121406,6.079125,7.298505,4.481383,4.630413],[8.635920,-9.546573,7.718378,1.224039,-6.525367,-6.400568,2.430178,-0.714572,-3.257314,-8.282077,-7.899674,8.969385,-7.679144,6.708829,-2.236461],[-9.444908,2.326649,-1.617730,-9.578885,5.300189,-2.831710,9.937449,8.592736,7.249740,9.814006,0.838505,-2.346860,-2.127946,6.458697,-2.111080],[-1.089582,-6.178332,6.708097,-9.269663,-1.972811,-4.310897,4.750883,-1.880975,-0.476444,-6.409674,4.627091,9.961136,-9.803157,-3.811676,-1.608764],[0.984099,7.105103,-4.912612,-0.224440,2.895302,-8.689325,3.040334,7.721586,9.408162,-0.664322,1.015796,8.097920,6.271751,-9.617407,4.131816]],[[-7.663146,-4.028278,-5.703997,-9.497169,9.861593,1.912055,-3.367711,-3.575649,-5.350745,7.069631,1.410322,-8.249001,3.844088,5.052366,-4.954433],[-4.097547,3.031764,-6.179429,-9.218722,3.019773,-9.432381,8.189570,3.565183,-2.446974,2.329967,-1.854714,4.712244,4.821669,-0.766780,-2.138987],[-2.775477,3.760192,3.513548,9.776184,9.042009,-5.465189,-3.973972,-0.176644,3.661486,1.680604,-2.321800,7.937739,2.062987,-1.648099,1.969395],[-5.385392,-6.451060,-9.501025,5.889978,1.363860,-0.273492,8.658325,1.421335,-0.542102,-9.523740,-4.047657,-5.349034,-8.084528,-2.275866,3.827192],[-0.568745,9.196823,-5.172837,-5.000736,-1.209030,-0.913581,2.906139,5.813842,7.920902,2.935013,6.981711,-7.286940,-8.215127,4.357017,1.416521],[-1.447880,-5.698251,-4.701392,2.502569,8.542111,-5.909593,-9.510853,1.596183,1.091655,-9.410794,-2.820949,-0.068999,9.524819,-9.871120,4.717469],[4.091995,3.754080,-2.744079,-4.689785,-7.853277,2.276877,6.761752,7.855902,0.372111,8.707416,9.958027,1.754791,-9.221094,-3.050638,-0.843403],[8.048280,-2.930814,0.142206,-9.060509,-5.877987,7.987420,-9.255682,-5.166243,3.086402,-4.025098,7.484240,9.553242,4.032622,9.790746,-5.109288],[5.118204,4.532639,-5.709888,-9.983651,5.745157,3.554021,-7.984850,8.710810,8.069967,-8.703088,-6.170655,-4.083722,0.948779,2.191689,6.028795],[-8.367414,0.193471,-1.821836,-4.213875,4.591571,-6.898278,2.255555,-7.637767,3.872087,9.410930,7.869262,5.962502,4.141386,6.636991,0.065149]]], dtype = "float64")#candidate|4307|(5, 10, 15)|const|float64
uop_4308 = relay.erf(const_4307.astype('float64')) # shape=(5, 10, 15)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_4310 = func_676_call()
call_4311 = func_676_call()
output = relay.Tuple([uop_4308,call_4310,])
output2 = relay.Tuple([uop_4308,call_4311,])
func_4316 = relay.Function([], output)
mod['func_4316'] = func_4316
mod = relay.transform.InferType()(mod)
output = func_4316()
func_4317 = relay.Function([], output)
mutated_mod['func_4317'] = func_4317
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4318 = relay.var("var_4318", dtype = "uint32", shape = (1, 13, 12))#candidate|4318|(1, 13, 12)|var|uint32
var_4319 = relay.var("var_4319", dtype = "uint32", shape = (13, 13, 12))#candidate|4319|(13, 13, 12)|var|uint32
bop_4320 = relay.multiply(var_4318.astype('uint32'), var_4319.astype('uint32')) # shape=(13, 13, 12)
func_1175_call = mod.get_global_var('func_1175')
func_1178_call = mutated_mod.get_global_var('func_1178')
var_4334 = relay.var("var_4334", dtype = "int32", shape = (392,))#candidate|4334|(392,)|var|int32
call_4333 = relay.TupleGetItem(func_1175_call(relay.reshape(var_4334.astype('int32'), [98, 4])), 1)
call_4335 = relay.TupleGetItem(func_1178_call(relay.reshape(var_4334.astype('int32'), [98, 4])), 1)
func_3810_call = mod.get_global_var('func_3810')
func_3812_call = mutated_mod.get_global_var('func_3812')
call_4346 = relay.TupleGetItem(func_3810_call(), 1)
call_4347 = relay.TupleGetItem(func_3812_call(), 1)
func_3734_call = mod.get_global_var('func_3734')
func_3736_call = mutated_mod.get_global_var('func_3736')
call_4356 = relay.TupleGetItem(func_3734_call(), 0)
call_4357 = relay.TupleGetItem(func_3736_call(), 0)
output = relay.Tuple([bop_4320,call_4333,var_4334,call_4346,call_4356,])
output2 = relay.Tuple([bop_4320,call_4335,var_4334,call_4347,call_4357,])
func_4358 = relay.Function([var_4318,var_4319,var_4334,], output)
mod['func_4358'] = func_4358
mod = relay.transform.InferType()(mod)
var_4359 = relay.var("var_4359", dtype = "uint32", shape = (1, 13, 12))#candidate|4359|(1, 13, 12)|var|uint32
var_4360 = relay.var("var_4360", dtype = "uint32", shape = (13, 13, 12))#candidate|4360|(13, 13, 12)|var|uint32
var_4361 = relay.var("var_4361", dtype = "int32", shape = (392,))#candidate|4361|(392,)|var|int32
output = func_4358(var_4359,var_4360,var_4361,)
func_4362 = relay.Function([var_4359,var_4360,var_4361,], output)
mutated_mod['func_4362'] = func_4362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_4388 = func_2078_call()
call_4389 = func_2078_call()
output = call_4388
output2 = call_4389
func_4393 = relay.Function([], output)
mod['func_4393'] = func_4393
mod = relay.transform.InferType()(mod)
mutated_mod['func_4393'] = func_4393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mutated_mod.get_global_var('func_4393')
call_4394 = func_4393_call()
output = call_4394
func_4395 = relay.Function([], output)
mutated_mod['func_4395'] = func_4395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_4401 = func_2078_call()
call_4402 = func_2078_call()
output = call_4401
output2 = call_4402
func_4414 = relay.Function([], output)
mod['func_4414'] = func_4414
mod = relay.transform.InferType()(mod)
output = func_4414()
func_4415 = relay.Function([], output)
mutated_mod['func_4415'] = func_4415
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4463 = relay.var("var_4463", dtype = "uint64", shape = (10, 14, 8))#candidate|4463|(10, 14, 8)|var|uint64
var_4464 = relay.var("var_4464", dtype = "uint64", shape = (10, 14, 8))#candidate|4464|(10, 14, 8)|var|uint64
bop_4465 = relay.greater_equal(var_4463.astype('bool'), relay.reshape(var_4464.astype('bool'), relay.shape_of(var_4463))) # shape=(10, 14, 8)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_4471 = func_4414_call()
call_4472 = func_4414_call()
var_4484 = relay.var("var_4484", dtype = "uint64", shape = (10, 14, 8))#candidate|4484|(10, 14, 8)|var|uint64
bop_4485 = relay.power(var_4463.astype('float64'), relay.reshape(var_4484.astype('float64'), relay.shape_of(var_4463))) # shape=(10, 14, 8)
func_3810_call = mod.get_global_var('func_3810')
func_3812_call = mutated_mod.get_global_var('func_3812')
call_4488 = relay.TupleGetItem(func_3810_call(), 2)
call_4489 = relay.TupleGetItem(func_3812_call(), 2)
func_4393_call = mod.get_global_var('func_4393')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_4494 = func_4393_call()
call_4495 = func_4393_call()
output = relay.Tuple([bop_4465,call_4471,bop_4485,call_4488,call_4494,])
output2 = relay.Tuple([bop_4465,call_4472,bop_4485,call_4489,call_4495,])
func_4500 = relay.Function([var_4463,var_4464,var_4484,], output)
mod['func_4500'] = func_4500
mod = relay.transform.InferType()(mod)
mutated_mod['func_4500'] = func_4500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4500_call = mutated_mod.get_global_var('func_4500')
var_4502 = relay.var("var_4502", dtype = "uint64", shape = (10, 14, 8))#candidate|4502|(10, 14, 8)|var|uint64
var_4503 = relay.var("var_4503", dtype = "uint64", shape = (10, 14, 8))#candidate|4503|(10, 14, 8)|var|uint64
var_4504 = relay.var("var_4504", dtype = "uint64", shape = (10, 14, 8))#candidate|4504|(10, 14, 8)|var|uint64
call_4501 = func_4500_call(var_4502,var_4503,var_4504,)
output = call_4501
func_4505 = relay.Function([var_4502,var_4503,var_4504,], output)
mutated_mod['func_4505'] = func_4505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2380_call = mod.get_global_var('func_2380')
func_2381_call = mutated_mod.get_global_var('func_2381')
call_4519 = relay.TupleGetItem(func_2380_call(), 0)
call_4520 = relay.TupleGetItem(func_2381_call(), 0)
var_4528 = relay.var("var_4528", dtype = "float64", shape = (10, 11, 10))#candidate|4528|(10, 11, 10)|var|float64
bop_4529 = relay.left_shift(call_4519.astype('int32'), relay.reshape(var_4528.astype('int32'), relay.shape_of(call_4519))) # shape=(10, 11, 10)
bop_4532 = relay.left_shift(call_4520.astype('int32'), relay.reshape(var_4528.astype('int32'), relay.shape_of(call_4520))) # shape=(10, 11, 10)
output = relay.Tuple([bop_4529,])
output2 = relay.Tuple([bop_4532,])
func_4535 = relay.Function([var_4528,], output)
mod['func_4535'] = func_4535
mod = relay.transform.InferType()(mod)
var_4536 = relay.var("var_4536", dtype = "float64", shape = (10, 11, 10))#candidate|4536|(10, 11, 10)|var|float64
output = func_4535(var_4536)
func_4537 = relay.Function([var_4536], output)
mutated_mod['func_4537'] = func_4537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3014_call = mod.get_global_var('func_3014')
func_3015_call = mutated_mod.get_global_var('func_3015')
call_4543 = relay.TupleGetItem(func_3014_call(), 0)
call_4544 = relay.TupleGetItem(func_3015_call(), 0)
func_4107_call = mod.get_global_var('func_4107')
func_4108_call = mutated_mod.get_global_var('func_4108')
call_4560 = relay.TupleGetItem(func_4107_call(), 0)
call_4561 = relay.TupleGetItem(func_4108_call(), 0)
func_3544_call = mod.get_global_var('func_3544')
func_3547_call = mutated_mod.get_global_var('func_3547')
const_4565 = relay.const([[-5,4,-7,2,-5,-6,-10,2,-2,1,7,9,-10,3,-8,-1,-3,3,-9,10,3,5,-4,7,9,4,-3,-7],[5,8,-2,8,-6,-3,-6,-1,9,-4,6,-1,-9,-10,9,-5,5,10,2,3,9,-5,1,5,5,-4,-1,3],[-1,-2,10,7,-9,-5,6,-1,5,1,-1,7,6,-4,-8,8,-1,2,-8,-7,5,-9,9,6,-5,10,-3,-1],[-8,-7,5,-8,8,8,-8,-2,-6,-1,-3,8,4,-6,-5,-10,-6,-1,-4,7,-10,5,-1,-8,2,-1,8,2],[7,1,-7,-5,9,3,-7,-3,-7,-3,-7,-5,-4,-3,8,-6,-5,9,7,-4,1,10,-8,-5,3,-3,-8,-9],[-7,-5,-10,-3,8,-5,-7,-3,-6,6,-6,-9,8,-9,-2,-1,1,-5,-6,5,8,1,9,-6,7,-9,3,-1],[-1,9,9,2,7,2,-6,9,7,1,-6,-10,-9,7,8,6,6,-3,-7,-4,4,10,-3,4,-1,-5,-2,-1],[6,6,5,3,7,-8,-3,-9,-8,-7,-7,10,-7,-6,-2,1,-6,1,-9,3,-2,-10,-3,4,-7,-4,-3,2],[-1,-1,5,8,1,3,4,5,8,3,-4,7,-7,6,5,-9,6,9,2,-5,7,-2,-7,-8,-10,-10,-7,6],[8,-1,-9,1,-8,1,8,-2,7,7,-1,-10,-8,-7,-5,-7,4,6,-8,-1,7,-8,-9,9,6,-9,-3,-8],[-7,-3,8,5,-10,7,10,-8,-1,10,-9,-5,5,4,1,8,-8,2,3,-10,-10,2,-5,5,-7,4,-5,2],[3,9,-7,3,8,-1,-3,-1,-6,-1,3,6,4,-7,1,1,5,-7,7,-8,-5,3,2,9,8,10,9,-1],[-6,-1,6,-10,-2,-5,-6,3,4,7,1,-3,-9,8,8,10,8,2,5,-6,6,-7,6,2,-7,7,7,7],[-4,-4,6,8,-7,-7,10,-1,-7,-9,-10,7,1,5,4,6,7,-2,-3,-7,1,-5,9,7,8,-3,8,8]], dtype = "int32")#candidate|4565|(14, 28)|const|int32
call_4564 = relay.TupleGetItem(func_3544_call(relay.reshape(const_4565.astype('int32'), [392,])), 2)
call_4566 = relay.TupleGetItem(func_3547_call(relay.reshape(const_4565.astype('int32'), [392,])), 2)
func_4358_call = mod.get_global_var('func_4358')
func_4362_call = mutated_mod.get_global_var('func_4362')
const_4581 = relay.const([[-7,1,-2,1],[-2,-8,7,9],[9,-1,10,-2],[1,-1,-9,-2],[7,-2,-4,1],[-5,6,8,-2],[-3,-9,-2,-7],[3,3,4,8],[-1,-10,-3,-8],[-1,4,2,-6],[10,7,4,-6],[6,9,-7,9],[9,-2,2,5],[-6,3,-5,-2],[-4,-9,-7,-7],[6,-10,5,10],[1,-10,-4,6],[-4,-10,8,5],[5,2,3,-2],[7,2,3,10],[6,7,-5,-1],[-2,7,5,5],[8,-1,-9,9],[-6,10,5,-5],[9,2,-5,-10],[-4,-10,-1,-10],[-2,-1,3,-7],[-3,10,6,-8],[9,9,-2,4],[8,-6,7,-9],[6,-10,-1,10],[3,-9,-7,-3],[8,-2,-3,-8],[-10,-1,2,-8],[1,9,-2,-4],[-7,3,4,2],[-8,-2,-3,-1],[9,-2,3,9],[-5,-5,-7,3]], dtype = "uint32")#candidate|4581|(39, 4)|const|uint32
var_4582 = relay.var("var_4582", dtype = "uint32", shape = (2028,))#candidate|4582|(2028,)|var|uint32
call_4580 = relay.TupleGetItem(func_4358_call(relay.reshape(const_4581.astype('uint32'), [1, 13, 12]), relay.reshape(var_4582.astype('uint32'), [13, 13, 12]), relay.reshape(call_4564.astype('int32'), [392,]), ), 2)
call_4583 = relay.TupleGetItem(func_4362_call(relay.reshape(const_4581.astype('uint32'), [1, 13, 12]), relay.reshape(var_4582.astype('uint32'), [13, 13, 12]), relay.reshape(call_4564.astype('int32'), [392,]), ), 2)
var_4587 = relay.var("var_4587", dtype = "bool", shape = (2, 15, 3))#candidate|4587|(2, 15, 3)|var|bool
bop_4588 = relay.add(call_4560.astype('float64'), relay.reshape(var_4587.astype('float64'), relay.shape_of(call_4560))) # shape=(2, 15, 3)
bop_4591 = relay.add(call_4561.astype('float64'), relay.reshape(var_4587.astype('float64'), relay.shape_of(call_4561))) # shape=(2, 15, 3)
output = relay.Tuple([call_4543,call_4564,const_4565,call_4580,const_4581,var_4582,bop_4588,])
output2 = relay.Tuple([call_4544,call_4566,const_4565,call_4583,const_4581,var_4582,bop_4591,])
func_4592 = relay.Function([var_4582,var_4587,], output)
mod['func_4592'] = func_4592
mod = relay.transform.InferType()(mod)
mutated_mod['func_4592'] = func_4592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4592_call = mutated_mod.get_global_var('func_4592')
var_4594 = relay.var("var_4594", dtype = "uint32", shape = (2028,))#candidate|4594|(2028,)|var|uint32
var_4595 = relay.var("var_4595", dtype = "bool", shape = (2, 15, 3))#candidate|4595|(2, 15, 3)|var|bool
call_4593 = func_4592_call(var_4594,var_4595,)
output = call_4593
func_4596 = relay.Function([var_4594,var_4595,], output)
mutated_mod['func_4596'] = func_4596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mod.get_global_var('func_4393')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_4605 = func_4393_call()
call_4606 = func_4393_call()
output = call_4605
output2 = call_4606
func_4625 = relay.Function([], output)
mod['func_4625'] = func_4625
mod = relay.transform.InferType()(mod)
output = func_4625()
func_4626 = relay.Function([], output)
mutated_mod['func_4626'] = func_4626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1099_call = mod.get_global_var('func_1099')
func_1100_call = mutated_mod.get_global_var('func_1100')
call_4647 = func_1099_call()
call_4648 = func_1099_call()
func_3145_call = mod.get_global_var('func_3145')
func_3146_call = mutated_mod.get_global_var('func_3146')
call_4653 = func_3145_call()
call_4654 = func_3145_call()
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_4659 = relay.TupleGetItem(func_1932_call(), 0)
call_4660 = relay.TupleGetItem(func_1933_call(), 0)
output = relay.Tuple([call_4647,call_4653,call_4659,])
output2 = relay.Tuple([call_4648,call_4654,call_4660,])
func_4675 = relay.Function([], output)
mod['func_4675'] = func_4675
mod = relay.transform.InferType()(mod)
mutated_mod['func_4675'] = func_4675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4675_call = mutated_mod.get_global_var('func_4675')
call_4676 = func_4675_call()
output = call_4676
func_4677 = relay.Function([], output)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4230_call = mod.get_global_var('func_4230')
func_4231_call = mutated_mod.get_global_var('func_4231')
call_4683 = relay.TupleGetItem(func_4230_call(), 0)
call_4684 = relay.TupleGetItem(func_4231_call(), 0)
var_4685 = relay.var("var_4685", dtype = "bool", shape = (2, 15, 3))#candidate|4685|(2, 15, 3)|var|bool
bop_4686 = relay.right_shift(call_4683.astype('uint16'), relay.reshape(var_4685.astype('uint16'), relay.shape_of(call_4683))) # shape=(2, 15, 3)
bop_4689 = relay.right_shift(call_4684.astype('uint16'), relay.reshape(var_4685.astype('uint16'), relay.shape_of(call_4684))) # shape=(2, 15, 3)
output = relay.Tuple([bop_4686,])
output2 = relay.Tuple([bop_4689,])
func_4703 = relay.Function([var_4685,], output)
mod['func_4703'] = func_4703
mod = relay.transform.InferType()(mod)
var_4704 = relay.var("var_4704", dtype = "bool", shape = (2, 15, 3))#candidate|4704|(2, 15, 3)|var|bool
output = func_4703(var_4704)
func_4705 = relay.Function([var_4704], output)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4707 = relay.var("var_4707", dtype = "int8", shape = (13, 14, 7))#candidate|4707|(13, 14, 7)|var|int8
var_4708 = relay.var("var_4708", dtype = "int8", shape = (13, 14, 7))#candidate|4708|(13, 14, 7)|var|int8
bop_4709 = relay.right_shift(var_4707.astype('int8'), relay.reshape(var_4708.astype('int8'), relay.shape_of(var_4707))) # shape=(13, 14, 7)
uop_4722 = relay.sin(var_4708.astype('float64')) # shape=(13, 14, 7)
output = relay.Tuple([bop_4709,uop_4722,])
output2 = relay.Tuple([bop_4709,uop_4722,])
func_4726 = relay.Function([var_4707,var_4708,], output)
mod['func_4726'] = func_4726
mod = relay.transform.InferType()(mod)
var_4727 = relay.var("var_4727", dtype = "int8", shape = (13, 14, 7))#candidate|4727|(13, 14, 7)|var|int8
var_4728 = relay.var("var_4728", dtype = "int8", shape = (13, 14, 7))#candidate|4728|(13, 14, 7)|var|int8
output = func_4726(var_4727,var_4728,)
func_4729 = relay.Function([var_4727,var_4728,], output)
mutated_mod['func_4729'] = func_4729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_4759 = func_4414_call()
call_4760 = func_4414_call()
func_3597_call = mod.get_global_var('func_3597')
func_3598_call = mutated_mod.get_global_var('func_3598')
call_4771 = relay.TupleGetItem(func_3597_call(), 2)
call_4772 = relay.TupleGetItem(func_3598_call(), 2)
func_2030_call = mod.get_global_var('func_2030')
func_2036_call = mutated_mod.get_global_var('func_2036')
const_4781 = relay.const([-3.971332,4.320693,-1.232337,-5.519086,5.532575,4.085123,2.300484,-1.069991,8.697476,6.889191,-4.627428,-7.884789,-7.052878,7.438254,-9.397827,-8.419238,-1.331307,9.871406,5.525654,3.941863,-4.609426,5.991029,-3.492866,4.570560,4.033591,-8.412456,5.957833,3.714595,8.139892,4.789551,-9.405123,-7.850432,-5.987702,7.586259,2.341449,-7.031436,1.237668,7.316743,7.329928,9.565815,6.768888,8.718090,-7.064130,-4.153411,6.602305,-9.290846,-4.273379,-4.303269,-2.608775,-4.503195,4.302300,6.514094,-9.767065,-5.027398,6.606753,-1.915924,9.907532,0.748536,-9.912264,8.218178,-7.381153,3.218020,-4.438457,5.696543,6.173516,-9.963940,-8.214329,7.519194,-0.461231,8.929420,-4.833095,-1.358269,6.229339,9.550790,-1.029904,6.111260,-1.820182,3.878672,-1.415585,1.138277,-3.005512,-3.474215,9.969623,7.127211,8.695621,-5.230234,7.289367,-9.664333,-3.067110,-3.543603,-1.901375,7.739132,4.377479,-0.140571,7.583733,6.350012,8.850814,4.773282,-3.109590,2.008803,1.544875,5.060459,-1.088080,9.031149,3.709794,2.433896,4.576903,1.729213,8.531420,-9.176330,4.790624,-9.145877,-7.844931,-1.574343,4.962971,-3.094300,1.714629,1.674587,9.019335,-9.918765,-4.255589,3.194896,6.334785,-5.540993,-8.002010,1.528811,0.651601,-5.788356,2.022725,-4.878717,-7.111535,2.342595,-7.276436,-6.720492,1.213059,-9.895091,-7.180529,8.777571,-4.695821,4.381184,8.460732,8.932215,-8.572673,-8.192167,-4.058574,-9.195718,8.642771,-8.359211,-0.532164,-2.453121,6.267167,-6.604933,-2.259997,1.052752,9.602699,2.250556,-7.398616,9.468504,-4.854757,-3.957890,-9.876301,-3.650305,1.123335,1.075654,1.911573,2.621273,6.891703,-2.228864,-7.844917,-2.061484,-8.308750,-6.456395,-0.300459,-4.128943,2.150512,8.382892,1.065089,1.871427,-1.497248,5.192554,-6.683120,9.384968,-6.858263,1.613168,3.001517,-4.367625,9.175860,-1.793956,9.679150,3.771926,-2.450036,-3.565253,-9.008864,-7.903615,7.895550,-5.550878,-1.910426,7.051639,3.444125,4.610685,-4.501759,9.095146,-7.746321,-7.687680,-3.450743,-3.633771,-7.489041,-2.320674,9.939309,-7.240296,-4.744028,-4.105220,-8.322060,2.674186,9.096678,-1.464366,8.795251,1.789323,-1.530448,8.849635,0.922853,7.821187,-9.683738,-7.426112,-8.147330,-0.853720,5.005430,4.189070,-9.685404,-7.494867,-7.689003,-7.789884,-8.304159,1.097347,7.756891,5.190077,4.522682,-6.833556,-3.087677,8.128131,1.302305,-8.174557,-3.006966,-8.326015,-5.464865,-8.570831,-5.011381,-3.578310,3.321992,0.614033,-7.717964,6.087097,3.190555,-3.243236,2.023215,-8.924312,2.452497,2.726831,-0.003805,8.116298,-8.628733,4.171052,-8.764556,4.530612,-5.791763,-7.404686,8.169195,-3.719018,9.505923,4.376271,-1.041561,-4.864707,-2.170587,0.605513,1.173571,7.788144,9.430422,-9.125617,6.903495,6.186897,-9.151666,-5.672036,4.207629,-6.899779,1.805475,0.943495,9.210312,-4.164489,-2.018747,6.339207,-0.719565,0.908860,4.782151,0.280823,-9.285880,-1.560141,-4.048563,-8.656344,9.030903,-7.348522,-0.159822,-3.258038,1.685613,5.743679,4.524766,-9.079161,-6.664620,3.558559,5.680978,-3.184713,5.403003,0.870701,3.756024,6.601348,-8.077963,-2.801612,-1.529393,7.259396,7.200593,0.433910], dtype = "float32")#candidate|4781|(320,)|const|float32
const_4782 = relay.const([[7.596117,-9.751643,-0.703165,7.349772,6.661186,-9.219196,2.135993,-4.065230,1.002056,9.159947,2.326290,-6.175278,3.352107,-4.621177,1.890682,7.142655,-1.026918,-5.578129,0.095606,-8.785954,-0.583375,2.577591,-0.285975,3.118842,-9.751636,-5.156218,7.515199,-6.622955,-1.233743,-3.017306,7.389939,-5.861920,2.255894,-5.702701,-2.242608,8.243669,4.205702,8.973616,1.405993,-5.726962,9.034118,8.792703,2.251442,7.797821,-6.046438,0.923967,9.680723,5.379409,-1.849048,3.812292,3.624330,9.695638,1.014347,-4.037410,-3.180906,1.808176,8.177433,-9.695344,-6.905304,-0.400055,-9.495901,-5.804755,9.381381],[-9.326529,-2.765135,4.691130,0.187163,-6.007709,5.523774,6.985591,3.402332,7.633662,6.698213,2.790179,1.301798,-0.927740,1.020214,3.458120,-6.336372,-7.454245,1.277672,-4.412499,1.987232,7.275496,0.181186,-0.370161,4.642920,6.616311,9.970067,5.031940,-2.067754,-5.584230,-7.940939,1.116337,-2.396048,9.223643,5.219429,-7.844548,9.870165,0.478811,-8.747515,3.229094,0.443982,-8.988532,-3.512878,1.616575,6.027548,-4.724883,6.588635,-5.716730,-3.347713,2.297803,-3.361694,-8.337016,6.232523,-3.718182,6.419633,-6.034036,8.010924,4.879510,-1.386478,-2.379995,5.208465,9.097963,-3.916000,-1.159952],[-8.739524,-0.782278,2.654031,-9.403921,-4.372920,-9.455058,-9.699426,-3.863697,6.876773,8.890928,-5.441910,7.998332,0.724055,-0.820434,-3.297516,-1.776209,-1.336888,5.271710,4.705522,2.851700,0.493943,8.510840,-7.169752,9.242630,6.934946,0.050324,-8.538794,5.624293,6.066697,-5.886793,-4.266015,-0.901370,1.198576,-2.966608,2.881221,9.639661,5.771813,0.689932,-1.981386,9.116554,1.129460,-1.259840,4.060295,2.926429,3.183177,3.318577,-0.525478,5.758510,8.411290,-5.288310,8.249903,9.100997,-7.489949,-8.680401,1.065363,3.935094,-4.857490,7.112998,7.336131,-8.780063,-7.632658,9.151756,-3.169262]], dtype = "float32")#candidate|4782|(3, 63)|const|float32
call_4780 = relay.TupleGetItem(func_2030_call(relay.reshape(const_4781.astype('float32'), [8, 8, 5]), relay.reshape(const_4782.astype('float32'), [189,]), relay.reshape(const_4782.astype('float32'), [189,]), relay.reshape(const_4781.astype('float64'), [8, 8, 5]), ), 4)
call_4783 = relay.TupleGetItem(func_2036_call(relay.reshape(const_4781.astype('float32'), [8, 8, 5]), relay.reshape(const_4782.astype('float32'), [189,]), relay.reshape(const_4782.astype('float32'), [189,]), relay.reshape(const_4781.astype('float64'), [8, 8, 5]), ), 4)
output = relay.Tuple([call_4759,call_4771,call_4780,const_4781,const_4782,])
output2 = relay.Tuple([call_4760,call_4772,call_4783,const_4781,const_4782,])
func_4784 = relay.Function([], output)
mod['func_4784'] = func_4784
mod = relay.transform.InferType()(mod)
output = func_4784()
func_4785 = relay.Function([], output)
mutated_mod['func_4785'] = func_4785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2621_call = mod.get_global_var('func_2621')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_4804 = relay.TupleGetItem(func_2621_call(), 0)
call_4805 = relay.TupleGetItem(func_2623_call(), 0)
func_3483_call = mod.get_global_var('func_3483')
func_3485_call = mutated_mod.get_global_var('func_3485')
call_4806 = relay.TupleGetItem(func_3483_call(relay.reshape(call_4804.astype('float64'), [10, 11, 10])), 0)
call_4807 = relay.TupleGetItem(func_3485_call(relay.reshape(call_4804.astype('float64'), [10, 11, 10])), 0)
func_4316_call = mod.get_global_var('func_4316')
func_4317_call = mutated_mod.get_global_var('func_4317')
call_4814 = relay.TupleGetItem(func_4316_call(), 0)
call_4815 = relay.TupleGetItem(func_4317_call(), 0)
func_4784_call = mod.get_global_var('func_4784')
func_4785_call = mutated_mod.get_global_var('func_4785')
call_4818 = relay.TupleGetItem(func_4784_call(), 4)
call_4819 = relay.TupleGetItem(func_4785_call(), 4)
func_4675_call = mod.get_global_var('func_4675')
func_4677_call = mutated_mod.get_global_var('func_4677')
call_4823 = relay.TupleGetItem(func_4675_call(), 2)
call_4824 = relay.TupleGetItem(func_4677_call(), 2)
output = relay.Tuple([call_4804,call_4806,call_4814,call_4818,call_4823,])
output2 = relay.Tuple([call_4805,call_4807,call_4815,call_4819,call_4824,])
func_4825 = relay.Function([], output)
mod['func_4825'] = func_4825
mod = relay.transform.InferType()(mod)
output = func_4825()
func_4826 = relay.Function([], output)
mutated_mod['func_4826'] = func_4826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mod.get_global_var('func_4393')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_4841 = func_4393_call()
call_4842 = func_4393_call()
output = relay.Tuple([call_4841,])
output2 = relay.Tuple([call_4842,])
func_4850 = relay.Function([], output)
mod['func_4850'] = func_4850
mod = relay.transform.InferType()(mod)
output = func_4850()
func_4851 = relay.Function([], output)
mutated_mod['func_4851'] = func_4851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_4852 = relay.TupleGetItem(func_1932_call(), 2)
call_4853 = relay.TupleGetItem(func_1933_call(), 2)
uop_4856 = relay.log(call_4852.astype('float32')) # shape=(98, 4)
uop_4858 = relay.log(call_4853.astype('float32')) # shape=(98, 4)
uop_4861 = relay.erf(call_4852.astype('float64')) # shape=(98, 4)
uop_4863 = relay.erf(call_4853.astype('float64')) # shape=(98, 4)
func_1826_call = mod.get_global_var('func_1826')
func_1827_call = mutated_mod.get_global_var('func_1827')
call_4868 = relay.TupleGetItem(func_1826_call(), 1)
call_4869 = relay.TupleGetItem(func_1827_call(), 1)
bop_4871 = relay.less(call_4852.astype('bool'), relay.reshape(uop_4861.astype('bool'), relay.shape_of(call_4852))) # shape=(98, 4)
bop_4874 = relay.less(call_4853.astype('bool'), relay.reshape(uop_4863.astype('bool'), relay.shape_of(call_4853))) # shape=(98, 4)
var_4878 = relay.var("var_4878", dtype = "bool", shape = (10, 11, 10))#candidate|4878|(10, 11, 10)|var|bool
bop_4879 = relay.subtract(call_4868.astype('uint64'), relay.reshape(var_4878.astype('uint64'), relay.shape_of(call_4868))) # shape=(10, 11, 10)
bop_4882 = relay.subtract(call_4869.astype('uint64'), relay.reshape(var_4878.astype('uint64'), relay.shape_of(call_4869))) # shape=(10, 11, 10)
output = relay.Tuple([uop_4856,bop_4871,bop_4879,])
output2 = relay.Tuple([uop_4858,bop_4874,bop_4882,])
func_4887 = relay.Function([var_4878,], output)
mod['func_4887'] = func_4887
mod = relay.transform.InferType()(mod)
var_4888 = relay.var("var_4888", dtype = "bool", shape = (10, 11, 10))#candidate|4888|(10, 11, 10)|var|bool
output = func_4887(var_4888)
func_4889 = relay.Function([var_4888], output)
mutated_mod['func_4889'] = func_4889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2156_call = mod.get_global_var('func_2156')
func_2158_call = mutated_mod.get_global_var('func_2158')
call_4899 = relay.TupleGetItem(func_2156_call(), 0)
call_4900 = relay.TupleGetItem(func_2158_call(), 0)
func_3810_call = mod.get_global_var('func_3810')
func_3812_call = mutated_mod.get_global_var('func_3812')
call_4901 = relay.TupleGetItem(func_3810_call(), 1)
call_4902 = relay.TupleGetItem(func_3812_call(), 1)
output = relay.Tuple([call_4899,call_4901,])
output2 = relay.Tuple([call_4900,call_4902,])
func_4905 = relay.Function([], output)
mod['func_4905'] = func_4905
mod = relay.transform.InferType()(mod)
output = func_4905()
func_4906 = relay.Function([], output)
mutated_mod['func_4906'] = func_4906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4044_call = mod.get_global_var('func_4044')
func_4045_call = mutated_mod.get_global_var('func_4045')
call_4917 = relay.TupleGetItem(func_4044_call(), 2)
call_4918 = relay.TupleGetItem(func_4045_call(), 2)
func_3145_call = mod.get_global_var('func_3145')
func_3146_call = mutated_mod.get_global_var('func_3146')
call_4928 = func_3145_call()
call_4929 = func_3145_call()
output = relay.Tuple([call_4917,call_4928,])
output2 = relay.Tuple([call_4918,call_4929,])
func_4933 = relay.Function([], output)
mod['func_4933'] = func_4933
mod = relay.transform.InferType()(mod)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4933_call = mutated_mod.get_global_var('func_4933')
call_4934 = func_4933_call()
output = call_4934
func_4935 = relay.Function([], output)
mutated_mod['func_4935'] = func_4935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_4950 = func_2078_call()
call_4951 = func_2078_call()
output = call_4950
output2 = call_4951
func_4958 = relay.Function([], output)
mod['func_4958'] = func_4958
mod = relay.transform.InferType()(mod)
output = func_4958()
func_4959 = relay.Function([], output)
mutated_mod['func_4959'] = func_4959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2109_call = mod.get_global_var('func_2109')
func_2111_call = mutated_mod.get_global_var('func_2111')
call_4990 = relay.TupleGetItem(func_2109_call(), 0)
call_4991 = relay.TupleGetItem(func_2111_call(), 0)
output = relay.Tuple([call_4990,])
output2 = relay.Tuple([call_4991,])
func_4996 = relay.Function([], output)
mod['func_4996'] = func_4996
mod = relay.transform.InferType()(mod)
mutated_mod['func_4996'] = func_4996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4996_call = mutated_mod.get_global_var('func_4996')
call_4997 = func_4996_call()
output = call_4997
func_4998 = relay.Function([], output)
mutated_mod['func_4998'] = func_4998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1646_call = mod.get_global_var('func_1646')
func_1648_call = mutated_mod.get_global_var('func_1648')
call_5047 = relay.TupleGetItem(func_1646_call(), 1)
call_5048 = relay.TupleGetItem(func_1648_call(), 1)
func_3927_call = mod.get_global_var('func_3927')
func_3929_call = mutated_mod.get_global_var('func_3929')
call_5051 = relay.TupleGetItem(func_3927_call(relay.reshape(call_5047.astype('float64'), [10, 11, 10])), 1)
call_5052 = relay.TupleGetItem(func_3929_call(relay.reshape(call_5047.astype('float64'), [10, 11, 10])), 1)
output = relay.Tuple([call_5047,call_5051,])
output2 = relay.Tuple([call_5048,call_5052,])
func_5059 = relay.Function([], output)
mod['func_5059'] = func_5059
mod = relay.transform.InferType()(mod)
mutated_mod['func_5059'] = func_5059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5059_call = mutated_mod.get_global_var('func_5059')
call_5060 = func_5059_call()
output = call_5060
func_5061 = relay.Function([], output)
mutated_mod['func_5061'] = func_5061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_5067 = relay.TupleGetItem(func_3841_call(), 0)
call_5068 = relay.TupleGetItem(func_3843_call(), 0)
output = call_5067
output2 = call_5068
func_5073 = relay.Function([], output)
mod['func_5073'] = func_5073
mod = relay.transform.InferType()(mod)
mutated_mod['func_5073'] = func_5073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5073_call = mutated_mod.get_global_var('func_5073')
call_5074 = func_5073_call()
output = call_5074
func_5075 = relay.Function([], output)
mutated_mod['func_5075'] = func_5075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_5084 = func_1065_call()
call_5085 = func_1065_call()
var_5087 = relay.var("var_5087", dtype = "float64", shape = (10, 11, 10))#candidate|5087|(10, 11, 10)|var|float64
bop_5088 = relay.mod(call_5084.astype('float32'), relay.reshape(var_5087.astype('float32'), relay.shape_of(call_5084))) # shape=(10, 11, 10)
bop_5091 = relay.mod(call_5085.astype('float32'), relay.reshape(var_5087.astype('float32'), relay.shape_of(call_5085))) # shape=(10, 11, 10)
output = relay.Tuple([bop_5088,])
output2 = relay.Tuple([bop_5091,])
func_5093 = relay.Function([var_5087,], output)
mod['func_5093'] = func_5093
mod = relay.transform.InferType()(mod)
var_5094 = relay.var("var_5094", dtype = "float64", shape = (10, 11, 10))#candidate|5094|(10, 11, 10)|var|float64
output = func_5093(var_5094)
func_5095 = relay.Function([var_5094], output)
mutated_mod['func_5095'] = func_5095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_5109 = func_1065_call()
call_5110 = func_1065_call()
output = call_5109
output2 = call_5110
func_5122 = relay.Function([], output)
mod['func_5122'] = func_5122
mod = relay.transform.InferType()(mod)
output = func_5122()
func_5123 = relay.Function([], output)
mutated_mod['func_5123'] = func_5123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1747_call = mod.get_global_var('func_1747')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_5138 = relay.TupleGetItem(func_1747_call(), 1)
call_5139 = relay.TupleGetItem(func_1749_call(), 1)
func_3927_call = mod.get_global_var('func_3927')
func_3929_call = mutated_mod.get_global_var('func_3929')
var_5145 = relay.var("var_5145", dtype = "float64", shape = (1100,))#candidate|5145|(1100,)|var|float64
call_5144 = relay.TupleGetItem(func_3927_call(relay.reshape(var_5145.astype('float64'), [10, 11, 10])), 0)
call_5146 = relay.TupleGetItem(func_3929_call(relay.reshape(var_5145.astype('float64'), [10, 11, 10])), 0)
uop_5154 = relay.sqrt(call_5138.astype('float32')) # shape=(10, 14, 9)
uop_5156 = relay.sqrt(call_5139.astype('float32')) # shape=(10, 14, 9)
output = relay.Tuple([call_5144,var_5145,uop_5154,])
output2 = relay.Tuple([call_5146,var_5145,uop_5156,])
func_5167 = relay.Function([var_5145,], output)
mod['func_5167'] = func_5167
mod = relay.transform.InferType()(mod)
var_5168 = relay.var("var_5168", dtype = "float64", shape = (1100,))#candidate|5168|(1100,)|var|float64
output = func_5167(var_5168)
func_5169 = relay.Function([var_5168], output)
mutated_mod['func_5169'] = func_5169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5059_call = mod.get_global_var('func_5059')
func_5061_call = mutated_mod.get_global_var('func_5061')
call_5177 = relay.TupleGetItem(func_5059_call(), 1)
call_5178 = relay.TupleGetItem(func_5061_call(), 1)
output = call_5177
output2 = call_5178
func_5183 = relay.Function([], output)
mod['func_5183'] = func_5183
mod = relay.transform.InferType()(mod)
mutated_mod['func_5183'] = func_5183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5183_call = mutated_mod.get_global_var('func_5183')
call_5184 = func_5183_call()
output = call_5184
func_5185 = relay.Function([], output)
mutated_mod['func_5185'] = func_5185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4675_call = mod.get_global_var('func_4675')
func_4677_call = mutated_mod.get_global_var('func_4677')
call_5227 = relay.TupleGetItem(func_4675_call(), 1)
call_5228 = relay.TupleGetItem(func_4677_call(), 1)
output = call_5227
output2 = call_5228
func_5240 = relay.Function([], output)
mod['func_5240'] = func_5240
mod = relay.transform.InferType()(mod)
mutated_mod['func_5240'] = func_5240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5240_call = mutated_mod.get_global_var('func_5240')
call_5241 = func_5240_call()
output = call_5241
func_5242 = relay.Function([], output)
mutated_mod['func_5242'] = func_5242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4202_call = mod.get_global_var('func_4202')
func_4203_call = mutated_mod.get_global_var('func_4203')
call_5245 = func_4202_call()
call_5246 = func_4202_call()
var_5266 = relay.var("var_5266", dtype = "float32", shape = (10, 14, 9))#candidate|5266|(10, 14, 9)|var|float32
bop_5267 = relay.mod(call_5245.astype('float64'), relay.reshape(var_5266.astype('float64'), relay.shape_of(call_5245))) # shape=(10, 14, 9)
bop_5270 = relay.mod(call_5246.astype('float64'), relay.reshape(var_5266.astype('float64'), relay.shape_of(call_5246))) # shape=(10, 14, 9)
func_1759_call = mod.get_global_var('func_1759')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_5282 = relay.TupleGetItem(func_1759_call(), 0)
call_5283 = relay.TupleGetItem(func_1761_call(), 0)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
var_5293 = relay.var("var_5293", dtype = "uint8", shape = (189,))#candidate|5293|(189,)|var|uint8
call_5292 = relay.TupleGetItem(func_3419_call(relay.reshape(var_5293.astype('uint8'), [189,])), 4)
call_5294 = relay.TupleGetItem(func_3421_call(relay.reshape(var_5293.astype('uint8'), [189,])), 4)
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
var_5307 = relay.var("var_5307", dtype = "bool", shape = (90,))#candidate|5307|(90,)|var|bool
call_5306 = relay.TupleGetItem(func_4703_call(relay.reshape(var_5307.astype('bool'), [2, 15, 3])), 0)
call_5308 = relay.TupleGetItem(func_4705_call(relay.reshape(var_5307.astype('bool'), [2, 15, 3])), 0)
func_3810_call = mod.get_global_var('func_3810')
func_3812_call = mutated_mod.get_global_var('func_3812')
call_5317 = relay.TupleGetItem(func_3810_call(), 3)
call_5318 = relay.TupleGetItem(func_3812_call(), 3)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_5321 = relay.TupleGetItem(func_1250_call(), 0)
call_5322 = relay.TupleGetItem(func_1252_call(), 0)
output = relay.Tuple([bop_5267,call_5282,call_5292,var_5293,call_5306,var_5307,call_5317,call_5321,])
output2 = relay.Tuple([bop_5270,call_5283,call_5294,var_5293,call_5308,var_5307,call_5318,call_5322,])
func_5340 = relay.Function([var_5266,var_5293,var_5307,], output)
mod['func_5340'] = func_5340
mod = relay.transform.InferType()(mod)
mutated_mod['func_5340'] = func_5340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mutated_mod.get_global_var('func_5340')
var_5342 = relay.var("var_5342", dtype = "float32", shape = (10, 14, 9))#candidate|5342|(10, 14, 9)|var|float32
var_5343 = relay.var("var_5343", dtype = "uint8", shape = (189,))#candidate|5343|(189,)|var|uint8
var_5344 = relay.var("var_5344", dtype = "bool", shape = (90,))#candidate|5344|(90,)|var|bool
call_5341 = func_5340_call(var_5342,var_5343,var_5344,)
output = call_5341
func_5345 = relay.Function([var_5342,var_5343,var_5344,], output)
mutated_mod['func_5345'] = func_5345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_5480 = func_4414_call()
call_5481 = func_4414_call()
output = relay.Tuple([call_5480,])
output2 = relay.Tuple([call_5481,])
func_5505 = relay.Function([], output)
mod['func_5505'] = func_5505
mod = relay.transform.InferType()(mod)
mutated_mod['func_5505'] = func_5505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5505_call = mutated_mod.get_global_var('func_5505')
call_5506 = func_5505_call()
output = call_5506
func_5507 = relay.Function([], output)
mutated_mod['func_5507'] = func_5507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5073_call = mod.get_global_var('func_5073')
func_5075_call = mutated_mod.get_global_var('func_5075')
call_5561 = func_5073_call()
call_5562 = func_5073_call()
func_2513_call = mod.get_global_var('func_2513')
func_2517_call = mutated_mod.get_global_var('func_2517')
const_5575 = relay.const(2, dtype = "uint64")#candidate|5575|()|const|uint64
var_5576 = relay.var("var_5576", dtype = "uint64", shape = (1, 273))#candidate|5576|(1, 273)|var|uint64
call_5574 = relay.TupleGetItem(func_2513_call(relay.reshape(const_5575.astype('uint64'), []), relay.reshape(var_5576.astype('uint64'), [3, 13, 7]), ), 0)
call_5577 = relay.TupleGetItem(func_2517_call(relay.reshape(const_5575.astype('uint64'), []), relay.reshape(var_5576.astype('uint64'), [3, 13, 7]), ), 0)
func_1099_call = mod.get_global_var('func_1099')
func_1100_call = mutated_mod.get_global_var('func_1100')
call_5585 = func_1099_call()
call_5586 = func_1099_call()
func_4291_call = mod.get_global_var('func_4291')
func_4294_call = mutated_mod.get_global_var('func_4294')
var_5592 = relay.var("var_5592", dtype = "float64", shape = (1760,))#candidate|5592|(1760,)|var|float64
call_5591 = relay.TupleGetItem(func_4291_call(relay.reshape(var_5592.astype('float64'), [10, 11, 16])), 0)
call_5593 = relay.TupleGetItem(func_4294_call(relay.reshape(var_5592.astype('float64'), [10, 11, 16])), 0)
func_5059_call = mod.get_global_var('func_5059')
func_5061_call = mutated_mod.get_global_var('func_5061')
call_5594 = relay.TupleGetItem(func_5059_call(), 1)
call_5595 = relay.TupleGetItem(func_5061_call(), 1)
func_4044_call = mod.get_global_var('func_4044')
func_4045_call = mutated_mod.get_global_var('func_4045')
call_5605 = relay.TupleGetItem(func_4044_call(), 0)
call_5606 = relay.TupleGetItem(func_4045_call(), 0)
output = relay.Tuple([call_5561,call_5574,const_5575,var_5576,call_5585,call_5591,var_5592,call_5594,call_5605,])
output2 = relay.Tuple([call_5562,call_5577,const_5575,var_5576,call_5586,call_5593,var_5592,call_5595,call_5606,])
func_5613 = relay.Function([var_5576,var_5592,], output)
mod['func_5613'] = func_5613
mod = relay.transform.InferType()(mod)
var_5614 = relay.var("var_5614", dtype = "uint64", shape = (1, 273))#candidate|5614|(1, 273)|var|uint64
var_5615 = relay.var("var_5615", dtype = "float64", shape = (1760,))#candidate|5615|(1760,)|var|float64
output = func_5613(var_5614,var_5615,)
func_5616 = relay.Function([var_5614,var_5615,], output)
mutated_mod['func_5616'] = func_5616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2621_call = mod.get_global_var('func_2621')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_5642 = relay.TupleGetItem(func_2621_call(), 6)
call_5643 = relay.TupleGetItem(func_2623_call(), 6)
output = relay.Tuple([call_5642,])
output2 = relay.Tuple([call_5643,])
func_5647 = relay.Function([], output)
mod['func_5647'] = func_5647
mod = relay.transform.InferType()(mod)
mutated_mod['func_5647'] = func_5647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5647_call = mutated_mod.get_global_var('func_5647')
call_5648 = func_5647_call()
output = call_5648
func_5649 = relay.Function([], output)
mutated_mod['func_5649'] = func_5649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_5756 = relay.TupleGetItem(func_3841_call(), 0)
call_5757 = relay.TupleGetItem(func_3843_call(), 0)
func_4202_call = mod.get_global_var('func_4202')
func_4203_call = mutated_mod.get_global_var('func_4203')
call_5761 = func_4202_call()
call_5762 = func_4202_call()
func_5183_call = mod.get_global_var('func_5183')
func_5185_call = mutated_mod.get_global_var('func_5185')
call_5777 = func_5183_call()
call_5778 = func_5183_call()
output = relay.Tuple([call_5756,call_5761,call_5777,])
output2 = relay.Tuple([call_5757,call_5762,call_5778,])
func_5805 = relay.Function([], output)
mod['func_5805'] = func_5805
mod = relay.transform.InferType()(mod)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5805_call = mutated_mod.get_global_var('func_5805')
call_5806 = func_5805_call()
output = call_5806
func_5807 = relay.Function([], output)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5813 = relay.var("var_5813", dtype = "int8", shape = ())#candidate|5813|()|var|int8
var_5814 = relay.var("var_5814", dtype = "int8", shape = (11, 1, 12))#candidate|5814|(11, 1, 12)|var|int8
bop_5815 = relay.right_shift(var_5813.astype('int8'), var_5814.astype('int8')) # shape=(11, 1, 12)
func_5805_call = mod.get_global_var('func_5805')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_5818 = relay.TupleGetItem(func_5805_call(), 2)
call_5819 = relay.TupleGetItem(func_5807_call(), 2)
func_1099_call = mod.get_global_var('func_1099')
func_1100_call = mutated_mod.get_global_var('func_1100')
call_5826 = func_1099_call()
call_5827 = func_1099_call()
func_815_call = mod.get_global_var('func_815')
func_816_call = mutated_mod.get_global_var('func_816')
call_5833 = relay.TupleGetItem(func_815_call(), 0)
call_5834 = relay.TupleGetItem(func_816_call(), 0)
func_1779_call = mod.get_global_var('func_1779')
func_1781_call = mutated_mod.get_global_var('func_1781')
call_5835 = func_1779_call()
call_5836 = func_1779_call()
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_5843 = relay.TupleGetItem(func_1932_call(), 3)
call_5844 = relay.TupleGetItem(func_1933_call(), 3)
output = relay.Tuple([bop_5815,call_5818,call_5826,call_5833,call_5835,call_5843,])
output2 = relay.Tuple([bop_5815,call_5819,call_5827,call_5834,call_5836,call_5844,])
func_5846 = relay.Function([var_5813,var_5814,], output)
mod['func_5846'] = func_5846
mod = relay.transform.InferType()(mod)
mutated_mod['func_5846'] = func_5846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5846_call = mutated_mod.get_global_var('func_5846')
var_5848 = relay.var("var_5848", dtype = "int8", shape = ())#candidate|5848|()|var|int8
var_5849 = relay.var("var_5849", dtype = "int8", shape = (11, 1, 12))#candidate|5849|(11, 1, 12)|var|int8
call_5847 = func_5846_call(var_5848,var_5849,)
output = call_5847
func_5850 = relay.Function([var_5848,var_5849,], output)
mutated_mod['func_5850'] = func_5850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4933_call = mod.get_global_var('func_4933')
func_4935_call = mutated_mod.get_global_var('func_4935')
call_5887 = relay.TupleGetItem(func_4933_call(), 0)
call_5888 = relay.TupleGetItem(func_4935_call(), 0)
output = call_5887
output2 = call_5888
func_5889 = relay.Function([], output)
mod['func_5889'] = func_5889
mod = relay.transform.InferType()(mod)
mutated_mod['func_5889'] = func_5889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5889_call = mutated_mod.get_global_var('func_5889')
call_5890 = func_5889_call()
output = call_5890
func_5891 = relay.Function([], output)
mutated_mod['func_5891'] = func_5891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_5908 = func_1065_call()
call_5909 = func_1065_call()
uop_5924 = relay.acos(call_5908.astype('float32')) # shape=(10, 11, 10)
uop_5926 = relay.acos(call_5909.astype('float32')) # shape=(10, 11, 10)
uop_5937 = relay.exp(uop_5924.astype('float64')) # shape=(10, 11, 10)
uop_5939 = relay.exp(uop_5926.astype('float64')) # shape=(10, 11, 10)
output = relay.Tuple([uop_5937,])
output2 = relay.Tuple([uop_5939,])
func_5945 = relay.Function([], output)
mod['func_5945'] = func_5945
mod = relay.transform.InferType()(mod)
mutated_mod['func_5945'] = func_5945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5945_call = mutated_mod.get_global_var('func_5945')
call_5946 = func_5945_call()
output = call_5946
func_5947 = relay.Function([], output)
mutated_mod['func_5947'] = func_5947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4784_call = mod.get_global_var('func_4784')
func_4785_call = mutated_mod.get_global_var('func_4785')
call_5951 = relay.TupleGetItem(func_4784_call(), 1)
call_5952 = relay.TupleGetItem(func_4785_call(), 1)
output = call_5951
output2 = call_5952
func_5955 = relay.Function([], output)
mod['func_5955'] = func_5955
mod = relay.transform.InferType()(mod)
mutated_mod['func_5955'] = func_5955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5955_call = mutated_mod.get_global_var('func_5955')
call_5956 = func_5955_call()
output = call_5956
func_5957 = relay.Function([], output)
mutated_mod['func_5957'] = func_5957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_6081 = relay.TupleGetItem(func_1932_call(), 4)
call_6082 = relay.TupleGetItem(func_1933_call(), 4)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_6106 = func_1065_call()
call_6107 = func_1065_call()
output = relay.Tuple([call_6081,call_6106,])
output2 = relay.Tuple([call_6082,call_6107,])
func_6110 = relay.Function([], output)
mod['func_6110'] = func_6110
mod = relay.transform.InferType()(mod)
mutated_mod['func_6110'] = func_6110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6110_call = mutated_mod.get_global_var('func_6110')
call_6111 = func_6110_call()
output = call_6111
func_6112 = relay.Function([], output)
mutated_mod['func_6112'] = func_6112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2156_call = mod.get_global_var('func_2156')
func_2158_call = mutated_mod.get_global_var('func_2158')
call_6131 = relay.TupleGetItem(func_2156_call(), 0)
call_6132 = relay.TupleGetItem(func_2158_call(), 0)
func_4905_call = mod.get_global_var('func_4905')
func_4906_call = mutated_mod.get_global_var('func_4906')
call_6135 = relay.TupleGetItem(func_4905_call(), 1)
call_6136 = relay.TupleGetItem(func_4906_call(), 1)
output = relay.Tuple([call_6131,call_6135,])
output2 = relay.Tuple([call_6132,call_6136,])
func_6146 = relay.Function([], output)
mod['func_6146'] = func_6146
mod = relay.transform.InferType()(mod)
output = func_6146()
func_6147 = relay.Function([], output)
mutated_mod['func_6147'] = func_6147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_6176 = func_1065_call()
call_6177 = func_1065_call()
func_4023_call = mod.get_global_var('func_4023')
func_4026_call = mutated_mod.get_global_var('func_4026')
const_6181 = relay.const([[8.265367,7.545038,6.547246,-9.451627,0.873322,-3.275178,-0.684962,7.820257,6.243059,-3.930986,8.884302,1.235757,5.132738,7.857445,0.401432,1.689166,-4.336069,4.886473,6.790871,-5.031423,-4.081005,-4.026681,8.455968,4.555073,-3.066250,8.554840,-0.523965,7.205655],[6.791452,0.386977,-5.222826,-6.190847,3.222691,-8.213995,8.377718,2.547940,8.145275,0.749592,-6.008771,1.868031,-6.508465,-8.788513,-6.537612,-9.199846,-0.131560,-5.868767,-4.986998,-7.282041,-2.224141,7.712954,0.774801,3.631769,-7.758705,-7.860349,-6.617893,-3.320181],[-2.466721,0.877904,-4.417469,-4.746907,-2.031570,2.917717,6.240567,-1.599994,-7.645823,-1.230993,4.941418,-2.540809,-7.374698,-2.885617,6.259374,9.840830,3.130361,-8.288668,-6.428042,2.711762,5.013860,-8.166739,-1.527828,4.275159,-1.546728,-0.955275,1.356555,3.829135],[8.134732,-2.860387,-7.874876,-5.009886,3.825359,-8.590255,-7.342579,-8.916030,-0.397698,-5.199542,4.836780,-9.177086,7.756495,1.780936,6.498388,-5.337173,-5.903152,3.892625,-6.887428,3.480142,-8.777974,-3.928045,8.053794,2.736138,9.504900,-8.801519,1.940181,-7.658661],[1.525262,2.256760,-8.975095,-7.011824,2.410171,-2.140697,9.344439,8.268640,6.505829,-9.603308,-3.019845,-2.919311,-2.004993,-9.155744,9.097024,-2.665796,2.672852,-6.483386,-0.757535,-5.176344,-2.600972,6.303193,-6.656174,-6.154971,-8.138317,-5.286286,-2.322355,-9.456013],[0.226959,-6.978196,5.566538,-5.780846,-2.097393,3.459199,8.526255,-9.900786,-8.434297,1.499842,-7.250255,-9.764518,3.185645,5.359617,9.456989,-0.296578,1.043471,-8.537031,3.110506,3.644377,6.680274,-2.537903,-6.150468,-7.026693,7.795995,-7.053576,4.999079,-1.933523],[3.632154,-1.314444,-7.404637,-1.129735,3.911590,-4.706468,5.050684,4.404699,-3.409944,3.953422,-8.634086,5.893568,7.157672,-3.435762,-5.615344,5.398746,-5.338864,2.536043,-9.763750,-0.688151,-8.204221,5.872154,-9.365391,-9.124424,-5.123032,-3.574295,3.581460,-8.003576],[2.734522,-5.026926,-5.432027,9.699941,5.039642,5.350733,-2.127121,-3.303061,-5.109421,-8.333826,-5.379393,-0.012031,-7.805866,6.898620,-5.132539,6.919351,-1.334242,-1.696471,1.875266,-0.672576,-0.796517,9.055580,3.291962,9.223696,4.439197,9.537516,-6.245834,-2.277974],[-2.000367,-5.956213,-1.005180,-0.152264,3.986173,9.828132,-9.334406,-1.644618,2.948687,-3.865270,0.277423,-7.290013,0.365266,-6.908410,5.090380,8.317891,-0.821392,7.415812,9.624548,-8.341025,-1.841520,8.346352,7.155550,2.298755,7.664001,6.029014,5.694965,2.237606],[6.060669,-9.875168,0.584805,-2.332053,5.497130,-1.388690,8.423288,-9.346646,-1.670467,0.069731,4.003009,-9.742082,-5.006991,7.167893,7.401790,-1.385039,-7.635980,-1.282177,-6.773154,8.281778,-8.570811,-1.674747,-1.255411,7.380762,3.139369,-9.759613,2.039815,6.167197],[1.240789,2.885050,-6.799682,9.085254,-7.984145,-9.761899,8.333297,-8.703026,3.987379,5.590185,0.787101,-3.004929,8.276207,2.606331,5.063489,-6.332743,7.328564,1.756918,-7.027153,-1.262037,-2.006371,3.613416,8.177810,0.687573,8.292021,-2.789098,9.446239,8.443028],[-8.867549,9.586468,2.111027,-0.157584,4.348939,-6.952808,-9.850655,-9.762656,8.693923,-0.675444,-0.966327,1.787638,7.426706,-6.474812,-0.426634,5.306493,0.381760,-3.533683,4.032362,1.601833,4.317706,-3.045367,8.755970,-4.756641,-0.723056,7.516765,9.554079,-4.375695],[-7.370595,2.630221,-7.203312,8.705941,-4.091813,2.585594,-9.292749,-9.440746,-0.217029,-3.176527,-4.137829,9.599179,2.991205,6.286997,7.844496,4.928522,-8.034958,8.560768,-9.038079,-8.442523,-5.970017,-4.140152,8.486557,-5.356832,2.418865,0.895893,-5.128430,-8.203789],[0.405246,-2.173485,-5.323343,-6.676367,-0.841801,1.918637,2.370026,7.029839,9.719268,-8.580207,6.397269,9.746962,4.759559,-5.088241,8.731727,-4.802740,-7.148041,9.285728,-8.492941,6.907947,0.450233,5.588164,2.226666,6.596577,-2.471717,7.087789,-7.931657,-5.741480]], dtype = "float32")#candidate|6181|(14, 28)|const|float32
call_6180 = relay.TupleGetItem(func_4023_call(relay.reshape(const_6181.astype('float32'), [14, 2, 14])), 0)
call_6182 = relay.TupleGetItem(func_4026_call(relay.reshape(const_6181.astype('float32'), [14, 2, 14])), 0)
func_246_call = mod.get_global_var('func_246')
func_249_call = mutated_mod.get_global_var('func_249')
const_6185 = relay.const([-8.951737,-8.961221,-5.585237,-1.688894,-4.658466,-3.606157,0.610864,-5.123284,7.659469,-2.083548,-6.183441,0.515931,7.601104,1.601415,0.590379,9.797938,0.415950,5.711583,6.691520,-7.510993,-8.911522,8.866831,4.896910,2.784722,8.179846,-2.332322,6.315615,-7.466958,5.050318,-6.488857,-3.895192,2.233492,4.647806,8.488194,-7.068576,-2.917190,-7.700232,2.128495,5.911430,5.476090,-0.159336,-7.480302,0.260383,-6.651221,-1.873967,8.343651,-3.105989,-4.294187,5.315825,-7.391582,-7.914676,4.021897,-7.207427,-6.215378,6.503503,-0.076806,9.499138,-7.473578,-0.169424,-6.616015,0.903509,4.868221,-4.834328,4.977290,2.600302,7.729441,-8.993829,-8.536300,5.967018,-9.142659,-2.367006,9.167579,5.854399,-9.174424,-2.110929,1.007822,6.088659,-8.291902,-1.029576,9.313978,1.247109,5.405645,7.956159,3.968342,-4.634762,-7.754913,-9.489353,7.254922,6.093206,2.126118,-2.796002,9.527165,0.661853,0.020850,6.942537,6.816804,8.839031,-6.913524,9.529829,-9.840826,0.594584,-0.518014,-3.235901,1.804144,-8.938871,8.585503,8.185468,-0.729384,-1.294402,5.330216,-3.703036,3.182773,6.827809,5.860036,3.257383,9.465475,-5.861976,-2.655999,9.456390,-1.480186,8.628297,-1.627966,-9.125648,3.932545,-2.854878,-5.485795,-8.819398,-9.394337,1.318713,-4.469493,1.732842,4.888959,4.152343,-4.690404,0.837047,-0.894816,0.064387,-0.736061,4.297828,-9.624545,-5.749797,0.576690,-1.181887,-4.408878,6.120026,-3.916552,-1.642494,-1.839398,-1.998937,-2.881930,0.061461,-6.317740,0.776712,-3.330067,-0.107643,-4.833558,1.068867,2.674332,-9.666659,7.475388,-4.974331,-1.379467,7.604931,7.717336,-1.845362,9.000395,-2.441360,-6.857113,-3.186256,6.469539,1.925820,2.967295,4.297180,2.507428,3.630933,3.625586,-3.244938,-4.930304,-3.055956,6.326483,-9.951487,-5.945342,-2.965821,-3.865647,3.064028,-3.107013,-8.483283,5.242376,-3.949837], dtype = "float32")#candidate|6185|(189,)|const|float32
const_6186 = relay.const([-9.994354,-7.915292,3.167366,-0.189110,2.367943,9.990189,6.135760,-5.708924,9.654613,5.502264,7.787178,5.595928,3.720972,3.242610,3.773782,5.129052,-5.719311,9.779300,-4.528105,7.835541,-3.438496,4.382060,-0.222209,4.177021,9.711199,9.937174,-2.812208,6.111884,9.457992,-7.434182,3.754816,-6.956874,-3.900354,7.222267,1.832691,-5.545778,-0.927247,9.563692,-5.640262,-1.162897,-7.497693,-1.928247,-3.070871,-3.535583,-5.020082,4.034919,0.640508,1.734633,2.518386,-7.814511,1.321265,-4.027848,3.560087,6.436328,-9.511742,0.277030,3.585415,-0.244084,-3.340487,3.396955,6.218089,-8.422343,-3.294236,-0.684328,7.804089,-2.752688,-9.239702,-9.378965,9.122425,2.878469,8.397697,-5.909550,-2.988378,-9.852766,3.673904,0.130428,-2.698005,4.450833,4.161902,-8.143287,3.906359,-0.138741,8.910002,9.330896,-5.088780,1.731895,2.038813,-7.995402,-6.068386,-4.790560,8.825414,-7.256491,-1.707909,-7.814509,-1.178963,-3.578122,-8.470799,6.285054,5.268285,-5.357586,4.091356,3.997466,5.598192,-8.200082,-2.910396,0.186160,-6.715246,-5.451696,-4.281319,-9.737537,0.783161,-0.767452,3.526522,-6.831863,-8.140435,-3.776054,-9.853072,-0.044369,-2.791508,7.670767,-8.664061,-7.256879,-0.841876,3.229470,3.822184,7.213794,-1.733273,-9.435851,9.813231,-5.047297,1.168135,0.428854,-9.300642,0.884259,-0.374293,6.339404,-8.644134,6.285269,-9.104617,7.750981,8.393842,5.025279,-9.157486,4.417328,-5.026860,3.136985,8.135043,9.616338,-5.205994,-0.559435,7.091005,7.061080,2.873060,-1.932052,9.603881,2.979080,8.892510,-0.440234,0.672898,7.094703,9.775250,8.991354,-0.950936,-4.587962,-8.500634,3.937396,6.240569,1.239971,-4.959972,-6.780637,6.893850,-4.962034,-2.036394,-4.514071,-4.164260,1.793256,-2.875308,-0.069914,8.198397,9.886111,2.784644,3.350909,-5.862705,7.980338,2.243861,-6.108453,-0.280455,4.757991,-2.664863,-3.064180,5.542043,-7.010286,-5.462862,-7.618008,-2.619053,7.722515,1.922486,-1.314529,4.080522,-3.890027,3.080525,3.006460,2.670332,8.849901,-6.130669,-3.827611,0.129918,0.108361,-4.120082,-4.636855,-7.844499,-6.210236,-5.093980,1.855925,8.340770,-9.375731,-7.561850,-6.156020,-2.233828,8.845481,4.381860,3.210506,3.438964,-7.392825,-7.066787,-7.449889,4.598588,-2.933432,8.276354,2.963668,5.814720,4.879001,-2.208195,2.182666,6.967247,7.797848,4.142870,-6.013170,-2.316976,-4.512501,9.039586,8.754700,7.109318,-7.831646,1.716829,5.292444,-7.983825,-2.661337,-2.378090,1.521383,6.051983,-6.151730,2.778716,3.952202,-9.920735,2.455756,-6.935171,-7.008775,-0.528688,-0.563110,-6.027860,9.715991,-4.410264,1.139446,0.086247,4.761863,-2.777565,6.503488,-4.551600,2.622281,-8.001975,-8.480982,4.225142,6.783334,2.640792,6.264231,9.524543,-3.819791,-9.089041,4.136903,8.220680,-7.583149,-0.500221,2.841519,-5.905894,8.703251,8.671784,4.951749,-0.240303,1.649649,-4.850368,-1.130966,3.829809,-3.276695,-3.081637,4.356862,-6.194616,1.123852,-2.997888,7.186983,3.987252,6.052585,-5.351918,8.379514,4.348016,-1.599469,8.048457,-1.921855,-1.783388,5.920265,-0.996552,-8.383524,-4.616230,0.599681,-2.697329,-0.297573,-7.548211,2.550521,-9.736209,9.243836,0.856503,-1.355451,-2.184582,6.866043,5.240348,-3.214044,1.226160,-8.202398,-9.115937,-0.141388,-9.785166,4.718016,7.900975,9.810316,2.315124,3.954257,-1.498195,-9.860873,-1.513689,1.640206,-9.175195,3.976495,-3.991802,6.131816,-8.215157,-8.550052,-6.019965,2.546238,-9.177700,-3.707943,2.794213,-4.047189,4.954422,9.815340,-5.650229,3.648632,-8.327576,-3.635721,-3.312912,5.832514,-4.662252,1.655975,7.870506,-4.021779,2.109380,-0.709251,-5.592109,-9.099312,6.130670,-9.618228,4.055887,-9.218811,-7.980017,-4.796270,-1.890371,5.221280,5.548601,-4.270088,3.744929,-0.010843,7.879266,-3.848389,3.899493,9.747007,-1.357579,-6.188229,0.824233,9.271148,-2.555786,-5.016743,4.034129,9.207474,-0.864201,-9.278596,-3.494663,-6.936759,5.081338,9.517372,2.643210,2.687375,-4.237797,6.072284,-5.240849,-2.495317,9.550012,5.976592,-8.402443,3.919715,-4.169393,0.389743,1.798777,-3.580555,-7.726829,8.107300,-4.324071,9.765900,2.979464,-5.926728,3.774717,-2.080308,6.419680,7.737566,-0.493062,-1.184473,-4.789966,7.877351,0.815229,-8.809622,0.648139,-6.400636,-6.736087,9.468300,-7.525344,7.654827,-6.127325,-4.150196,-7.956598,9.383397,9.843404,7.166225,9.060928,7.618486,9.878037,-3.738948,8.815947,-1.149207,-6.458422,7.181827,-6.178164,-6.338536,-9.767735,-3.623696,7.580532,5.829846,-5.585413,-0.674865,5.109934,-2.259789,-1.155075,-3.372799,7.599599,3.373016,-6.781735,2.911752,-2.551533,9.791184,-8.326108,5.665836,4.104626,-5.999131,9.065386,-2.657112,-1.920599,4.137430,1.596668,8.344085,8.484119,7.258801,2.482342,-5.534757,-7.149206,1.788592,6.782857,-6.404258,0.039685,-4.032012,-7.006679,-3.532538,-3.731290,5.504240,5.605863,-4.593176,9.730299,-5.657031,-0.087798,-9.726644,-7.106954,-0.898380,-3.220854,-0.155071,9.452117,1.468648,6.943849,4.245405,4.206407,-3.855769,0.772587,9.158537,-6.519493,0.366358,-5.910826,2.522590,7.804587,9.445543,3.231024,-5.036022,-4.725550,-2.259786,3.253027,4.601495,-3.792752,8.374508,6.188175,-1.335237,-0.835998,-0.599398,-0.238095,1.786295,5.660036,9.091884,-4.961286,-6.632894,7.678799,0.283373,-1.479901,-3.742160,-1.776680,-1.676634,-3.457681,5.847109,-3.794342,-0.423260,7.629611,4.161414,-3.675625,5.590160,-5.129282,7.316227,-9.960325,-6.414937,-3.768540,2.921682,-1.330668,-3.321865,1.143229,1.177074,0.742185,-1.428538,8.298521,-2.555929,-9.744428,-1.859505,4.407082,8.936413,-2.361477,-7.628010,-2.664552,0.517555,8.609064,6.912068,9.582396,-1.119939,-4.232694,-4.998800,-4.748873,4.078131,-7.547924,1.239267,-5.058040,-4.675948,-7.094825,1.528638,-5.814217,9.210553,-3.253976,-8.346506,8.725818,-2.472778,5.127403,9.144142,7.533239,4.005777,3.388950,0.156612,6.180616,-9.205588,-6.304261,-9.808235,5.530154,-2.331474,-5.479754,7.666217,-2.612234,-8.380181,-5.172908,7.280079,-5.702368,-4.803447,-4.201502,2.044939,0.895859,3.318424,8.326774,-1.596660,-6.319278,-3.610241,-5.878716,-7.731336,-9.373900,-5.274039,2.665750,-4.344123,-9.489968,2.715137,1.673727,-9.788201,-0.500433,-9.999154,7.187286,-8.330235,-7.686190,3.219322,5.552620,4.157248,-4.604093,-2.145826,3.805115,0.815417,5.409397,-2.049151,-7.371542,7.959001,9.307264,-2.410297,5.869763,-9.443208,-5.124132,-4.225556,2.454460,2.334400,7.327071,6.543552,-7.778674,8.280357,6.853407,-3.976271,-7.225662,2.274371,-5.391224,3.382160,-6.267429,1.450170,4.176990,-7.329430,4.080577,-8.944766,-1.200712,0.906813,-6.715418,-5.232993,6.779751,3.104265,3.366212,8.744126,5.376663,3.359821,-7.742776,-2.317052,-8.577844,-7.357096,-8.405661,-6.094334,9.724445,9.235106,-9.354057,9.669376,2.499638,-9.018682,0.581646,-6.549362,-1.030399,1.372958,-6.353474,-1.951042,-7.807342,-0.110547,9.189555,5.341599,-6.817856,-8.030501,3.563622,-4.281527,0.403947,0.242145,-8.055582,5.207848,4.429192,1.231309,-8.512918,-1.352813,1.480554,1.312661,5.864018,4.933643,0.959747,3.531852,0.025563,0.947687,-0.144077,-2.712630,-6.384952,7.347178,-6.355733,2.846689,-0.839545,6.606666,-2.679919,-4.969904,-4.775294,-7.512645,6.513437,-8.326505,8.257491,6.195489,-0.719209,6.610407,0.574211,-5.511541,3.605485,-0.050039,7.559738,8.220129,-9.037749,2.253546,2.472606,4.166738,3.751343,-4.663709,7.824392,-3.381503,2.650705,0.676862,-4.451020,-3.634233,8.391456,3.041066,-3.860391,7.292178,-7.585763,6.228072,-9.513237,5.452828,-9.551624,-8.976422,0.853950,9.312193,-9.584753,-9.793212,-2.047289,8.363201,2.169280,-4.885097,4.938821,4.952432,4.836695,-5.750108,8.787201,9.220332,3.723912,2.236377,9.756092,7.623672,3.714589,-6.777001,-8.175939,-6.506026,2.575754,7.467023,-0.638341,-2.931273,-0.795119,0.604880,-8.558918,6.092018,-9.503190,1.950325,-5.162259,-7.983728,-4.973504,6.602303,-9.059225,-7.438140,7.991939,-4.899129,-5.792326,1.845515,6.873182,-9.538798,7.291655,9.191717,0.966881,7.644395,3.643927,9.027548,7.682681,-3.043459,-5.020572,6.352287,4.180547,0.370887,-6.594564,-1.064919,0.321255,-0.130999,-7.800840,8.351583,-1.439768,4.311265,-5.891277,7.819601,-9.646417,5.833054,-7.934369,-4.844871,-1.910617,-9.377906,-9.562603,9.646120,0.436842,-0.047576,4.788421,4.628684,6.914591,-1.025014,-4.452770,7.702881,6.522324,3.731488,3.346529,8.593079,-9.463440,-4.408680,-5.579451,-5.169520,1.636761,-7.072978,-4.979473,-0.173493,-0.043336,4.451588,-6.681018,1.789785,0.569241,-8.482071,-3.083658,2.233236,5.587089,8.059750,0.425235,2.182011,2.963599,4.397497,-0.029947,9.051882,-2.844896,9.772588,0.150284,9.997623,2.272878,9.566439,7.059644,-8.786827,-5.628136,5.196115,-6.775935,8.395003,-4.770956,4.827630,-0.925791,1.259329,-3.316125,-8.696349,-2.786290,-9.253928,2.816163,6.439036,-0.998244,8.810601,-6.120887,-4.338924,2.626264,-5.387223,3.197548,-1.242090,-7.706292,-9.322073,-5.430878,-2.793655,-4.677040,5.011131,-9.062458,8.677773,-4.702628,8.922424,2.006439,1.819398,8.659808,-6.925883,-3.462444,5.884567,-2.230059,2.146681,-2.802994,9.407658,-5.734226,-4.656215,-3.244230,-8.294773,-6.718867,2.429242,0.425562,-8.087095,-3.588767,8.794506,-7.062287,7.727377,7.243918,9.743048,-5.070506,-7.935854,1.412434,0.752438,-4.717762,3.091354,7.586674,-7.369114,1.402384,-7.582782,6.174998,-0.681010,-0.689417,5.218463,-1.488442,0.760686,8.845394,-9.008107,-7.147144,-8.070745,3.129224,8.732910,-7.152540,5.371698,-4.207607,2.404670,-8.886408,8.978011,3.017466,-7.353682,-3.331730,-8.250579,5.067211,-7.775951,-5.097457,4.369231,-8.109516,9.239370,-1.046432,6.594027,-4.786825,7.386200,-0.263198,9.433086,0.332070,-7.060417,4.747756,5.149917,9.567704,-8.280367,8.109581,4.211930,-9.152332,-8.406058,9.759203,9.500343,5.141043,-0.791740,-9.797783,8.326025,7.806321,2.206028,0.319249,-4.531906,-7.564515,-7.892139,-8.391376,-0.236704,-9.310267,5.147764,-9.883912,0.649249,4.464221,4.736200,3.388880,5.070134,-0.415851,7.401494,-9.888697,-9.174750,-0.919929,-2.637166,-2.975910,4.235567,4.428835,0.285116,-5.801957,0.409890,-6.695285,4.523775,-9.610062,1.947616,2.477177,-0.543886,-9.117162,-7.304166,7.658051,4.381536,3.078065,9.844006,5.644034,-5.634982,0.105225,-6.706383,2.716658,-5.657051,-0.259392,-1.207798,-1.360601,2.757245,-3.327727,-7.087682,-6.046973,8.463692,-0.300038,8.905395,8.509844,5.512094,0.635259,6.065144,3.287074,-7.663292,1.136110,8.956871,3.052367,-0.587242,7.938037,-5.104722,-0.222079,7.441656,-5.891907,-8.071051,0.131581,-5.584482,5.468731,0.009407,3.029271,0.380697,-7.089540,1.670547,1.013899,2.858211,-7.898489,5.600598,-6.860572,4.946682,3.521158,-3.941356,-9.114935,4.232752,-9.505534,-7.225013,4.134514,-9.043343,9.474507,3.102864,7.015364,6.420813,-2.951744,-6.963326,3.975994,0.593691,-4.760132,5.257663,5.818822,-6.835451,8.005019,9.280444,-3.872929,1.105790,4.462428,7.713170,2.211777,-3.516507,5.300718,-7.371083,5.475714,2.369163,-8.608481,-1.934845,1.837778,4.001177,6.154358,5.753019,6.518073,1.437786,-2.554294,4.176145,4.679178,2.165457,2.600767,-2.119831,-5.042197,-6.305393,-3.135937,-7.174592,6.842385,5.225761,-8.270078,5.338491,3.379511,8.876036,2.343049,5.126246,-5.661413,6.154889,3.758570,-8.223310,9.254168,-0.339181,3.273291,8.866912,-1.974522,-6.079220,-9.891038,-9.011233,-3.678257,4.770348,9.491572,7.621533,3.519369,1.390511,-8.758081,-6.607906,-6.502444,1.833873,6.587229,-1.601258,6.480490,7.144941,-5.535978,2.211774,3.363667,-9.540591,-2.576295,-9.247577,-8.080357,-3.860307,-7.694340,-4.128802,8.240978,-2.020954,8.467607,-9.212743,2.471094,-7.745489,-0.759074,8.152461,-6.465941,-2.309753,6.003246,-8.820559,-7.135188,-7.921293,-3.203267,2.450785,-1.840372,-0.741958,-6.277583,0.552244,-2.615093,-5.490805,8.623324,-1.310486,1.395074,-2.343018,-6.884456,9.325538,3.703157,4.262653,-8.631981,9.653179,-7.867672,-0.958897,1.797395,9.610429,0.697182,-6.402867,8.803455,-0.950413,5.854332,3.429667,-1.443461,-9.678146,-6.088207,9.849710,-9.359823,6.175868,-8.637673,3.422772,7.199822,-2.156965,-4.313952,-5.530018,6.230488,6.307808,5.534961,-3.210805,6.000432,-2.571055,-5.532204,-2.774573,-9.129476,-4.282919,-2.744903,-5.886580,-0.768697,-5.613378,7.275433,-0.839355,-7.130358,0.184159,-5.796355,0.747848,-5.575860,3.867077,0.220335,5.713517,3.121055,-3.017293,-5.239801,-3.893070], dtype = "float64")#candidate|6186|(1260,)|const|float64
call_6184 = relay.TupleGetItem(func_246_call(relay.reshape(const_6185.astype('float32'), [1, 189]), relay.reshape(const_6186.astype('float64'), [10, 14, 9]), ), 0)
call_6187 = relay.TupleGetItem(func_249_call(relay.reshape(const_6185.astype('float32'), [1, 189]), relay.reshape(const_6186.astype('float64'), [10, 14, 9]), ), 0)
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
var_6189 = relay.var("var_6189", dtype = "bool", shape = (90,))#candidate|6189|(90,)|var|bool
call_6188 = relay.TupleGetItem(func_4703_call(relay.reshape(var_6189.astype('bool'), [2, 15, 3])), 0)
call_6190 = relay.TupleGetItem(func_4705_call(relay.reshape(var_6189.astype('bool'), [2, 15, 3])), 0)
func_2621_call = mod.get_global_var('func_2621')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_6197 = relay.TupleGetItem(func_2621_call(), 2)
call_6198 = relay.TupleGetItem(func_2623_call(), 2)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_6207 = func_676_call()
call_6208 = func_676_call()
bop_6211 = relay.add(const_6181.astype('uint32'), relay.reshape(call_6180.astype('uint32'), relay.shape_of(const_6181))) # shape=(14, 28)
bop_6214 = relay.add(const_6181.astype('uint32'), relay.reshape(call_6182.astype('uint32'), relay.shape_of(const_6181))) # shape=(14, 28)
uop_6216 = relay.acos(call_6197.astype('float64')) # shape=(189, 9)
uop_6218 = relay.acos(call_6198.astype('float64')) # shape=(189, 9)
func_2621_call = mod.get_global_var('func_2621')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_6232 = relay.TupleGetItem(func_2621_call(), 2)
call_6233 = relay.TupleGetItem(func_2623_call(), 2)
output = relay.Tuple([call_6176,call_6184,const_6185,const_6186,call_6188,var_6189,call_6207,bop_6211,uop_6216,call_6232,])
output2 = relay.Tuple([call_6177,call_6187,const_6185,const_6186,call_6190,var_6189,call_6208,bop_6214,uop_6218,call_6233,])
func_6236 = relay.Function([var_6189,], output)
mod['func_6236'] = func_6236
mod = relay.transform.InferType()(mod)
mutated_mod['func_6236'] = func_6236
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6237 = relay.var("var_6237", dtype = "bool", shape = (90,))#candidate|6237|(90,)|var|bool
func_6236_call = mutated_mod.get_global_var('func_6236')
call_6238 = func_6236_call(var_6237)
output = call_6238
func_6239 = relay.Function([var_6237], output)
mutated_mod['func_6239'] = func_6239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mod.get_global_var('func_676')
func_677_call = mutated_mod.get_global_var('func_677')
call_6333 = func_676_call()
call_6334 = func_676_call()
var_6342 = relay.var("var_6342", dtype = "float64", shape = (10, 11, 10))#candidate|6342|(10, 11, 10)|var|float64
bop_6343 = relay.floor_divide(call_6333.astype('float64'), relay.reshape(var_6342.astype('float64'), relay.shape_of(call_6333))) # shape=(10, 11, 10)
bop_6346 = relay.floor_divide(call_6334.astype('float64'), relay.reshape(var_6342.astype('float64'), relay.shape_of(call_6334))) # shape=(10, 11, 10)
func_4675_call = mod.get_global_var('func_4675')
func_4677_call = mutated_mod.get_global_var('func_4677')
call_6363 = relay.TupleGetItem(func_4675_call(), 0)
call_6364 = relay.TupleGetItem(func_4677_call(), 0)
func_2621_call = mod.get_global_var('func_2621')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_6369 = relay.TupleGetItem(func_2621_call(), 2)
call_6370 = relay.TupleGetItem(func_2623_call(), 2)
func_5167_call = mod.get_global_var('func_5167')
func_5169_call = mutated_mod.get_global_var('func_5169')
call_6383 = relay.TupleGetItem(func_5167_call(relay.reshape(call_6363.astype('float64'), [1100,])), 1)
call_6384 = relay.TupleGetItem(func_5169_call(relay.reshape(call_6363.astype('float64'), [1100,])), 1)
uop_6391 = relay.log10(call_6369.astype('float64')) # shape=(189, 9)
uop_6393 = relay.log10(call_6370.astype('float64')) # shape=(189, 9)
output = relay.Tuple([bop_6343,call_6363,call_6383,uop_6391,])
output2 = relay.Tuple([bop_6346,call_6364,call_6384,uop_6393,])
func_6394 = relay.Function([var_6342,], output)
mod['func_6394'] = func_6394
mod = relay.transform.InferType()(mod)
var_6395 = relay.var("var_6395", dtype = "float64", shape = (10, 11, 10))#candidate|6395|(10, 11, 10)|var|float64
output = func_6394(var_6395)
func_6396 = relay.Function([var_6395], output)
mutated_mod['func_6396'] = func_6396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1826_call = mod.get_global_var('func_1826')
func_1827_call = mutated_mod.get_global_var('func_1827')
call_6415 = relay.TupleGetItem(func_1826_call(), 1)
call_6416 = relay.TupleGetItem(func_1827_call(), 1)
func_4784_call = mod.get_global_var('func_4784')
func_4785_call = mutated_mod.get_global_var('func_4785')
call_6424 = relay.TupleGetItem(func_4784_call(), 3)
call_6425 = relay.TupleGetItem(func_4785_call(), 3)
output = relay.Tuple([call_6415,call_6424,])
output2 = relay.Tuple([call_6416,call_6425,])
func_6439 = relay.Function([], output)
mod['func_6439'] = func_6439
mod = relay.transform.InferType()(mod)
output = func_6439()
func_6440 = relay.Function([], output)
mutated_mod['func_6440'] = func_6440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5059_call = mod.get_global_var('func_5059')
func_5061_call = mutated_mod.get_global_var('func_5061')
call_6445 = relay.TupleGetItem(func_5059_call(), 1)
call_6446 = relay.TupleGetItem(func_5061_call(), 1)
func_5183_call = mod.get_global_var('func_5183')
func_5185_call = mutated_mod.get_global_var('func_5185')
call_6449 = func_5183_call()
call_6450 = func_5183_call()
var_6459 = relay.var("var_6459", dtype = "int32", shape = (392,))#candidate|6459|(392,)|var|int32
bop_6460 = relay.subtract(call_6445.astype('uint8'), relay.reshape(var_6459.astype('uint8'), relay.shape_of(call_6445))) # shape=(392,)
bop_6463 = relay.subtract(call_6446.astype('uint8'), relay.reshape(var_6459.astype('uint8'), relay.shape_of(call_6446))) # shape=(392,)
output = relay.Tuple([call_6449,bop_6460,])
output2 = relay.Tuple([call_6450,bop_6463,])
func_6468 = relay.Function([var_6459,], output)
mod['func_6468'] = func_6468
mod = relay.transform.InferType()(mod)
var_6469 = relay.var("var_6469", dtype = "int32", shape = (392,))#candidate|6469|(392,)|var|int32
output = func_6468(var_6469)
func_6470 = relay.Function([var_6469], output)
mutated_mod['func_6470'] = func_6470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1747_call = mod.get_global_var('func_1747')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_6477 = relay.TupleGetItem(func_1747_call(), 1)
call_6478 = relay.TupleGetItem(func_1749_call(), 1)
output = relay.Tuple([call_6477,])
output2 = relay.Tuple([call_6478,])
func_6484 = relay.Function([], output)
mod['func_6484'] = func_6484
mod = relay.transform.InferType()(mod)
mutated_mod['func_6484'] = func_6484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6484_call = mutated_mod.get_global_var('func_6484')
call_6485 = func_6484_call()
output = call_6485
func_6486 = relay.Function([], output)
mutated_mod['func_6486'] = func_6486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6110_call = mod.get_global_var('func_6110')
func_6112_call = mutated_mod.get_global_var('func_6112')
call_6487 = relay.TupleGetItem(func_6110_call(), 1)
call_6488 = relay.TupleGetItem(func_6112_call(), 1)
func_4726_call = mod.get_global_var('func_4726')
func_4729_call = mutated_mod.get_global_var('func_4729')
var_6496 = relay.var("var_6496", dtype = "int8", shape = (1274,))#candidate|6496|(1274,)|var|int8
call_6495 = relay.TupleGetItem(func_4726_call(relay.reshape(var_6496.astype('int8'), [13, 14, 7]), relay.reshape(var_6496.astype('int8'), [13, 14, 7]), ), 0)
call_6497 = relay.TupleGetItem(func_4729_call(relay.reshape(var_6496.astype('int8'), [13, 14, 7]), relay.reshape(var_6496.astype('int8'), [13, 14, 7]), ), 0)
output = relay.Tuple([call_6487,call_6495,var_6496,])
output2 = relay.Tuple([call_6488,call_6497,var_6496,])
func_6509 = relay.Function([var_6496,], output)
mod['func_6509'] = func_6509
mod = relay.transform.InferType()(mod)
mutated_mod['func_6509'] = func_6509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6510 = relay.var("var_6510", dtype = "int8", shape = (1274,))#candidate|6510|(1274,)|var|int8
func_6509_call = mutated_mod.get_global_var('func_6509')
call_6511 = func_6509_call(var_6510)
output = call_6511
func_6512 = relay.Function([var_6510], output)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6146_call = mod.get_global_var('func_6146')
func_6147_call = mutated_mod.get_global_var('func_6147')
call_6517 = relay.TupleGetItem(func_6146_call(), 0)
call_6518 = relay.TupleGetItem(func_6147_call(), 0)
func_3544_call = mod.get_global_var('func_3544')
func_3547_call = mutated_mod.get_global_var('func_3547')
const_6537 = relay.const([[7],[10],[3],[5],[1],[-7],[6],[-6],[-9],[3],[4],[8],[-8],[-5],[-4],[-5],[6],[-10],[-3],[-3],[2],[-1],[-2],[-5],[6],[6],[-7],[-5],[7],[-7],[-10],[3],[8],[-7],[8],[-7],[-9],[-3],[5],[-3],[5],[2],[2],[-9],[9],[1],[8],[7],[7],[9],[5],[-8],[-4],[7],[-8],[-2],[-8],[6],[-4],[-8],[-1],[-2],[2],[9],[3],[-5],[-3],[5],[3],[-9],[-2],[7],[-5],[-9],[-8],[-2],[5],[1],[3],[-5],[7],[-7],[2],[-2],[-3],[9],[1],[-5],[-8],[7],[-3],[-8],[3],[6],[-9],[-4],[-2],[1],[-4],[10],[-3],[5],[4],[10],[6],[10],[6],[-8],[7],[-7],[-4],[5],[6],[1],[-8],[-9],[1],[-4],[-8],[8],[2],[5],[-8],[-9],[6],[3],[10],[7],[5],[-8],[-8],[-5],[3],[-3],[4],[4],[1],[-5],[2],[-4],[-3],[10],[7],[9],[-5],[9],[4],[-10],[1],[-7],[-7],[2],[10],[-5],[-5],[-3],[-9],[2],[-10],[10],[-10],[7],[-2],[2],[-2],[-10],[-9],[7],[4],[-4],[-4],[-7],[-9],[9],[-2],[5],[7],[-7],[-2],[-4],[-7],[5],[9],[-7],[-3],[-1],[-9],[-10],[-7],[-10],[-5],[2],[-10],[2],[-9],[6],[1],[6],[-3],[-2],[-6],[-5],[-1],[-5],[-1],[9],[3],[-7],[2],[5],[-6],[-1],[-2],[8],[10],[4],[-2],[2],[2],[-2],[-6],[7],[2],[-2],[-5],[-10],[-10],[9],[-8],[9],[-8],[-5],[-10],[6],[6],[-4],[-8],[-2],[9],[7],[-1],[-7],[7],[-4],[5],[-4],[-4],[3],[-8],[7],[6],[-8],[2],[-7],[4],[-5],[2],[-7],[-9],[6],[2],[-5],[1],[-2],[5],[-4],[-9],[-5],[10],[2],[-7],[-10],[-8],[-10],[8],[9],[7],[8],[-1],[8],[-10],[-9],[3],[-1],[-8],[-1],[-9],[-6],[8],[6],[-1],[5],[10],[-8],[4],[1],[8],[-4],[-3],[-8],[-8],[-6],[7],[-6],[7],[2],[8],[7],[-3],[-10],[-3],[-2],[10],[4],[10],[4],[8],[-7],[-3],[4],[6],[7],[-7],[3],[-3],[8],[4],[9],[-7],[7],[4],[7],[3],[-10],[6],[6],[2],[-5],[10],[-9],[-1],[-1],[9],[8],[4],[5],[-9],[1],[-8],[-8],[-5],[-8],[8],[5],[3],[2],[-1],[8],[-2],[9],[-4],[-3],[9],[-4],[-5],[1],[7],[-8],[-3],[2],[5],[10],[7],[-9],[8],[5],[4],[-6],[-4],[-2],[-5],[10],[2],[-4],[8],[-3],[-9],[10],[-2],[-5],[9],[-4]], dtype = "int32")#candidate|6537|(392, 1)|const|int32
call_6536 = relay.TupleGetItem(func_3544_call(relay.reshape(const_6537.astype('int32'), [392,])), 1)
call_6538 = relay.TupleGetItem(func_3547_call(relay.reshape(const_6537.astype('int32'), [392,])), 1)
output = relay.Tuple([call_6517,call_6536,const_6537,])
output2 = relay.Tuple([call_6518,call_6538,const_6537,])
func_6539 = relay.Function([], output)
mod['func_6539'] = func_6539
mod = relay.transform.InferType()(mod)
output = func_6539()
func_6540 = relay.Function([], output)
mutated_mod['func_6540'] = func_6540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3682_call = mod.get_global_var('func_3682')
func_3684_call = mutated_mod.get_global_var('func_3684')
call_6661 = relay.TupleGetItem(func_3682_call(), 0)
call_6662 = relay.TupleGetItem(func_3684_call(), 0)
output = call_6661
output2 = call_6662
func_6677 = relay.Function([], output)
mod['func_6677'] = func_6677
mod = relay.transform.InferType()(mod)
output = func_6677()
func_6678 = relay.Function([], output)
mutated_mod['func_6678'] = func_6678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4784_call = mod.get_global_var('func_4784')
func_4785_call = mutated_mod.get_global_var('func_4785')
call_6702 = relay.TupleGetItem(func_4784_call(), 3)
call_6703 = relay.TupleGetItem(func_4785_call(), 3)
output = call_6702
output2 = call_6703
func_6716 = relay.Function([], output)
mod['func_6716'] = func_6716
mod = relay.transform.InferType()(mod)
mutated_mod['func_6716'] = func_6716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6716_call = mutated_mod.get_global_var('func_6716')
call_6717 = func_6716_call()
output = call_6717
func_6718 = relay.Function([], output)
mutated_mod['func_6718'] = func_6718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_6766 = func_1065_call()
call_6767 = func_1065_call()
output = relay.Tuple([call_6766,])
output2 = relay.Tuple([call_6767,])
func_6780 = relay.Function([], output)
mod['func_6780'] = func_6780
mod = relay.transform.InferType()(mod)
output = func_6780()
func_6781 = relay.Function([], output)
mutated_mod['func_6781'] = func_6781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_6797 = func_4625_call()
call_6798 = func_4625_call()
output = call_6797
output2 = call_6798
func_6801 = relay.Function([], output)
mod['func_6801'] = func_6801
mod = relay.transform.InferType()(mod)
mutated_mod['func_6801'] = func_6801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6801_call = mutated_mod.get_global_var('func_6801')
call_6802 = func_6801_call()
output = call_6802
func_6803 = relay.Function([], output)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3145_call = mod.get_global_var('func_3145')
func_3146_call = mutated_mod.get_global_var('func_3146')
call_6810 = func_3145_call()
call_6811 = func_3145_call()
func_6716_call = mod.get_global_var('func_6716')
func_6718_call = mutated_mod.get_global_var('func_6718')
call_6812 = func_6716_call()
call_6813 = func_6716_call()
func_4675_call = mod.get_global_var('func_4675')
func_4677_call = mutated_mod.get_global_var('func_4677')
call_6821 = relay.TupleGetItem(func_4675_call(), 1)
call_6822 = relay.TupleGetItem(func_4677_call(), 1)
func_4996_call = mod.get_global_var('func_4996')
func_4998_call = mutated_mod.get_global_var('func_4998')
call_6823 = relay.TupleGetItem(func_4996_call(), 0)
call_6824 = relay.TupleGetItem(func_4998_call(), 0)
output = relay.Tuple([call_6810,call_6812,call_6821,call_6823,])
output2 = relay.Tuple([call_6811,call_6813,call_6822,call_6824,])
func_6825 = relay.Function([], output)
mod['func_6825'] = func_6825
mod = relay.transform.InferType()(mod)
mutated_mod['func_6825'] = func_6825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6825_call = mutated_mod.get_global_var('func_6825')
call_6826 = func_6825_call()
output = call_6826
func_6827 = relay.Function([], output)
mutated_mod['func_6827'] = func_6827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mod.get_global_var('func_865')
func_866_call = mutated_mod.get_global_var('func_866')
call_6867 = relay.TupleGetItem(func_865_call(), 0)
call_6868 = relay.TupleGetItem(func_866_call(), 0)
output = call_6867
output2 = call_6868
func_6884 = relay.Function([], output)
mod['func_6884'] = func_6884
mod = relay.transform.InferType()(mod)
output = func_6884()
func_6885 = relay.Function([], output)
mutated_mod['func_6885'] = func_6885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6900 = relay.var("var_6900", dtype = "float64", shape = (15, 13, 7))#candidate|6900|(15, 13, 7)|var|float64
uop_6901 = relay.exp(var_6900.astype('float64')) # shape=(15, 13, 7)
bop_6904 = relay.bitwise_xor(uop_6901.astype('int8'), relay.reshape(var_6900.astype('int8'), relay.shape_of(uop_6901))) # shape=(15, 13, 7)
func_5955_call = mod.get_global_var('func_5955')
func_5957_call = mutated_mod.get_global_var('func_5957')
call_6913 = func_5955_call()
call_6914 = func_5955_call()
bop_6916 = relay.add(bop_6904.astype('int8'), relay.reshape(uop_6901.astype('int8'), relay.shape_of(bop_6904))) # shape=(15, 13, 7)
bop_6921 = relay.mod(var_6900.astype('float32'), relay.reshape(bop_6916.astype('float32'), relay.shape_of(var_6900))) # shape=(15, 13, 7)
output = relay.Tuple([call_6913,bop_6921,])
output2 = relay.Tuple([call_6914,bop_6921,])
func_6942 = relay.Function([var_6900,], output)
mod['func_6942'] = func_6942
mod = relay.transform.InferType()(mod)
mutated_mod['func_6942'] = func_6942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6943 = relay.var("var_6943", dtype = "float64", shape = (15, 13, 7))#candidate|6943|(15, 13, 7)|var|float64
func_6942_call = mutated_mod.get_global_var('func_6942')
call_6944 = func_6942_call(var_6943)
output = call_6944
func_6945 = relay.Function([var_6943], output)
mutated_mod['func_6945'] = func_6945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_6954 = relay.TupleGetItem(func_3841_call(), 0)
call_6955 = relay.TupleGetItem(func_3843_call(), 0)
const_6972 = relay.const([[[-2.513677,7.361039,3.392883,7.041155,7.094774,-6.527880,8.050215,-9.129937,-9.873876,8.101030],[-0.882903,-0.068020,1.899324,-0.606086,-7.676431,-4.748765,-2.946880,-6.501736,1.824459,3.615670],[-4.212509,-8.807362,-9.490331,1.527592,3.743177,9.912530,-3.357790,-6.659118,5.583361,-1.186231],[6.777829,-5.110701,-2.145258,9.513328,-7.700724,-8.742588,2.469811,6.982935,3.837889,-7.136789],[2.382109,3.036039,3.309212,-7.879518,-9.093894,-2.263536,4.875488,3.709382,8.139736,-5.053165],[6.587309,-8.270726,4.369608,-5.091693,-3.200074,-8.286933,2.112645,4.251326,0.566298,9.115759],[7.768557,2.689860,-7.349932,-2.239426,-1.517605,-2.531039,-5.568152,-0.284023,-7.402907,-8.724525],[3.691022,-7.652543,-9.542403,6.050602,6.019322,4.653941,-3.861703,-1.908041,-8.283791,-7.849768],[9.041172,-1.047234,7.875873,0.176659,-4.341697,-2.836366,-1.602423,-6.946101,-8.312170,5.169767],[-7.922990,-0.388159,6.343057,8.305760,-6.355323,-6.836615,-8.964798,3.000280,5.404935,7.559937],[-9.118497,8.460218,9.599380,-5.918864,3.476952,8.372002,-8.360216,-6.908137,-7.451921,6.494364]],[[4.156087,-8.717430,7.052402,9.764759,4.253515,-7.354862,-1.427451,-8.811207,3.791728,-8.498493],[-5.185994,-5.706742,8.946406,7.395444,-7.341760,-7.548397,-9.886224,-4.808665,-5.296344,2.200276],[-3.524324,-8.574773,6.186600,-0.118333,1.554159,-7.218971,6.143415,-3.547318,8.518519,-6.597050],[2.220851,-6.049514,-9.701484,5.752490,-1.899528,-6.110315,-5.846504,-8.164174,2.416269,-6.714430],[2.159731,6.237866,7.662043,2.911700,1.116130,-3.021199,3.873504,-2.647933,8.293082,-9.663080],[-3.884278,7.294840,7.536977,2.000329,-2.890177,1.346072,-3.232416,-7.901977,8.994019,-8.198811],[-7.420515,9.282654,1.584942,5.117696,8.079846,3.638700,-6.898526,-3.247983,-0.018262,-5.239516],[2.994740,-0.959496,-0.397271,6.952121,-8.206279,-0.564591,-9.701401,-6.602108,-4.997474,1.483401],[-7.178499,4.704292,1.075717,-2.996044,6.608026,-4.580883,5.334847,-7.694945,-2.454730,2.849048],[-1.119798,9.241498,9.695185,-7.604849,5.878455,4.110986,-3.442354,-2.883003,-8.189878,3.576533],[1.876852,-7.483150,-8.741844,7.122449,-8.339624,-5.006196,-4.494269,5.507748,7.529153,3.059760]],[[1.923924,-5.043288,-3.286367,9.922201,-4.501421,-8.964319,9.002481,-1.724721,-0.122280,-3.311135],[-6.657410,5.835577,-5.750314,-5.655117,-1.458551,-5.275865,-7.060274,-9.860390,8.111133,9.464267],[-5.500176,2.763479,-3.718779,-5.414648,8.224943,3.737792,7.025621,2.071934,1.691764,9.465775],[2.224714,-6.424829,0.894220,-7.350890,-0.423903,-3.929817,-1.919513,-3.256721,8.223679,6.354363],[1.837134,-2.001687,5.992672,-9.203513,8.799695,-3.176231,0.426648,-9.805805,1.519278,4.083013],[-3.526266,0.317945,-1.869875,8.177470,-4.327131,-0.949229,9.381438,-0.933272,-8.842628,9.988518],[-3.129969,9.351675,-7.419628,-3.847710,-5.767107,-4.664367,2.712244,5.854142,3.827118,7.103682],[6.812118,-8.187770,-7.109290,3.249700,7.137311,-5.614021,6.640108,-7.409129,6.787199,5.286481],[-3.437023,-8.415013,2.338786,5.759117,-2.034505,-4.210732,6.825463,-1.532200,6.159749,-3.492536],[6.889985,7.310295,-7.208317,-8.680118,-4.322464,-8.987662,7.990859,1.113362,-9.795744,-8.224837],[0.851470,7.110348,0.719944,6.216060,3.474091,9.567189,-0.648321,2.052171,-1.354855,8.431159]],[[-7.727662,-1.481366,-4.422769,-6.156548,-4.889776,-9.282219,-5.558943,-3.140884,0.521292,-5.723681],[-7.945903,0.194855,-9.589901,6.689454,3.068286,-0.039897,-1.951927,6.597710,-6.346542,-9.823888],[-8.582695,-6.614872,-3.030827,-7.701994,-2.733489,-7.536896,0.309631,-9.583488,4.187280,-2.618381],[-5.764026,-7.265006,3.752325,3.636914,2.323131,8.548526,-4.216587,-8.357878,-3.694226,1.407150],[-6.607509,5.180183,1.690090,7.613349,-1.186533,7.592201,-1.721781,9.426159,-6.461631,8.941897],[-1.734926,0.250360,7.553564,0.313296,2.381954,-0.670612,9.019062,3.412439,5.863464,2.131140],[-4.792149,-0.125008,-5.107359,5.676896,3.259546,-1.488116,8.911831,-7.784357,-5.327261,-4.131321],[-8.217593,4.269324,7.376955,7.012827,2.883698,-5.508589,9.657418,1.267080,-9.188319,-1.788146],[5.730657,-4.544021,0.274973,4.605706,-6.837638,2.156507,8.370336,-7.938269,4.219335,1.353758],[-9.117828,-2.119416,7.308358,4.887996,-9.232523,2.672711,7.585238,-7.620578,-6.741751,-6.495622],[-7.890313,-3.837760,-9.241524,-4.466686,-8.691060,-5.937111,0.891193,-8.336389,-0.268131,-6.782415]],[[-9.266335,8.618952,5.749983,-2.284903,2.154391,6.932805,-9.036573,8.781252,-1.822348,-8.973363],[-9.290125,-3.570353,8.786316,-7.492878,-0.340737,8.588186,-3.476730,-9.724113,-6.601853,1.166692],[3.713023,7.420052,-5.690319,-1.309584,-8.587778,5.348037,-1.265319,-5.387952,9.384609,6.352672],[-9.122188,-5.698853,3.842007,-8.168948,8.178925,-2.638275,-9.313469,-2.452400,-5.530902,-9.350613],[8.949615,1.664770,9.111910,3.233027,-1.920690,-2.097432,5.642187,9.210284,-2.642269,8.440316],[-9.246344,-7.328811,1.391244,0.607888,-9.845799,9.017010,-7.569063,4.452286,-1.244786,-3.125560],[3.187514,7.249525,7.511192,-0.426926,7.319342,5.651205,8.723774,-6.383355,-4.635580,-5.125116],[0.993362,-0.986496,9.118112,1.683851,-4.327972,-6.499961,8.637816,0.802388,4.344301,-5.887633],[9.659346,-7.586713,1.624427,1.986730,-5.896632,-1.543187,0.246092,1.692118,-5.700505,6.027426],[-6.789566,6.752799,9.140013,-5.143357,-7.177847,9.242295,-9.760075,-7.948750,3.287071,2.683206],[3.658275,9.912900,-4.787421,4.046865,-8.132757,-9.065852,8.916114,-7.334866,-9.010578,1.873867]],[[3.958378,-4.172792,-5.147095,1.796282,-5.655292,9.713010,7.605540,5.816326,-4.598875,-6.727826],[9.700542,2.164765,-3.139312,8.821167,3.853483,9.604389,-0.177618,-0.531591,-6.760922,-1.271267],[0.500844,9.700971,-3.845312,-4.819507,4.623978,2.716333,2.304709,1.989400,-1.741395,-5.779550],[4.000045,-3.970105,6.591744,-7.546906,7.246215,9.074536,8.042435,0.912861,3.799483,-2.073324],[-9.519524,2.699565,-6.045163,-6.307972,4.399688,-9.210125,-7.853871,-8.553375,-8.818209,-2.910375],[5.981423,-2.643062,-2.008842,6.893928,7.496533,-6.949316,0.657810,-4.844671,3.145071,9.525866],[5.792519,2.561328,-4.325348,-6.976965,6.167252,-8.743175,-7.351559,7.822826,-6.377920,-0.105984],[-8.711129,-7.717821,-4.632771,0.263343,9.657659,-4.921827,1.236183,-6.652210,-5.724399,-1.976202],[7.124210,-8.066711,4.867019,-0.926419,-0.721511,6.038080,-9.117964,4.747385,-7.656561,-2.239026],[8.123079,1.191884,-1.714092,-5.831243,-2.415571,-9.902587,-7.418232,4.127026,-1.160719,6.738620],[-5.363014,5.474923,-6.177133,3.539857,-3.016582,-4.483191,-9.542865,-0.755722,-3.863691,6.530958]],[[6.713692,-0.806217,2.554175,8.719432,-2.612351,-4.386210,1.844725,5.842956,-4.473762,3.895189],[-0.068798,-3.288810,9.767271,1.863764,-8.641557,-1.135554,7.626121,4.000229,-3.216031,-8.930682],[7.655315,7.279543,4.839995,1.566350,2.574920,-2.203245,-5.205955,-2.984826,9.162792,5.324703],[7.127986,3.110235,7.410095,8.026719,7.266492,-4.494488,-8.249940,1.638548,-7.280272,-8.467615],[7.718370,0.096213,8.691089,0.773230,2.338386,-2.987394,-0.301645,4.971182,-2.582140,5.119835],[3.072028,8.591642,9.599829,7.443257,8.327631,1.373370,-0.533287,-6.075120,6.079457,-1.903609],[0.691187,3.420802,-6.597802,8.962734,4.772319,-5.025807,-9.356162,-2.571682,-8.007999,7.700955],[2.754613,0.260808,5.687961,-6.785907,7.119778,2.963417,8.894566,8.314126,-1.155776,2.637791],[2.230146,-5.014239,8.246777,-3.334686,-5.453793,2.379370,-4.943517,8.486446,-1.959395,-7.728219],[-6.514213,-5.742864,-0.939272,1.539626,-6.153302,-4.574027,-4.413744,9.193879,-7.974680,4.423414],[4.080932,-0.669265,4.946268,1.942815,1.469517,-6.061059,-6.257664,-1.507049,-8.757268,5.791617]],[[-9.897618,-4.942580,-7.297936,-9.096272,9.947114,4.921408,-5.735755,6.339339,8.191142,0.301294],[-9.759740,-0.792592,6.930623,-6.627175,-0.201772,-1.451607,5.239315,3.970920,4.618923,-7.863750],[4.452999,1.017926,-9.129725,-0.203606,-1.223834,-4.854300,3.074787,5.475661,7.883372,-4.422835],[4.404943,-3.819273,4.852412,-1.898525,9.944291,-6.407058,-3.650613,-4.966742,-1.796917,-9.835585],[7.124514,3.987036,9.981914,4.301261,-5.934313,-8.307582,-0.573918,9.385624,-5.239753,-7.048826],[-1.951148,-8.717162,1.929494,2.418890,2.044709,-7.438946,4.743548,1.416553,-9.330087,9.038409],[-1.747849,-9.373609,0.791828,9.990511,9.036799,8.464625,-5.619746,-2.836449,9.696727,8.875924],[5.157038,0.434784,1.028781,3.027267,2.021623,6.622805,-6.784053,-4.353019,1.593885,2.387528],[-6.327810,-2.690320,-5.565181,-3.204023,9.760622,3.949681,6.438285,1.150765,9.317288,-2.759913],[5.372909,4.749527,8.246117,0.926065,2.925310,4.528288,-4.453075,-0.272159,-9.514078,-8.592402],[-8.238296,-9.325394,-2.340616,-7.041766,-1.521903,-2.228929,-2.385474,8.449547,1.210246,-3.178794]],[[5.504873,-9.023354,-2.408412,-6.738301,6.613551,-4.065418,-7.000225,3.106132,-0.866145,6.337190],[-9.593051,-7.204532,1.399670,-3.060415,5.084862,9.222607,-2.369530,-3.442925,-2.112897,4.287240],[9.396924,0.029822,-2.559551,-1.981387,-0.638484,7.883735,0.270831,-3.610393,7.629206,1.546099],[4.682460,8.172462,0.671481,-8.968971,0.077859,9.854132,5.461853,-5.248620,-5.303063,-3.522284],[-7.840436,5.256127,-1.322120,-8.786671,3.341876,-7.359219,-2.815861,-5.532660,3.126216,9.280996],[6.257532,3.589726,2.386813,-5.654380,-6.937235,0.176927,4.702465,-8.087861,-6.493423,4.158248],[-0.831761,-0.445284,-9.841237,-1.289525,-1.129356,-6.036560,9.107520,-3.482564,7.432284,-8.767977],[-9.029163,3.724262,-3.744669,0.670687,-3.684870,-8.759035,-1.415635,-6.005980,-2.242514,-7.763517],[-9.296367,-2.644271,-3.553472,9.984477,0.153358,1.257952,0.952565,3.809202,-3.453294,-5.919236],[-7.265578,8.277529,9.080871,8.498059,7.980161,-2.534267,-1.390897,2.473167,-2.104331,-4.591939],[-8.856643,6.410711,-4.657444,0.544825,3.647110,-5.356960,0.312063,-3.003387,8.104397,-7.193975]],[[9.189772,-9.388150,2.048380,-5.176711,-2.950663,3.230150,-4.631437,-8.483496,-2.838633,8.201352],[1.557242,2.442379,9.222389,-0.398607,7.823043,3.293630,8.978857,-5.398671,0.432836,-0.045769],[0.779848,-9.978418,-7.846756,9.100789,5.947840,-7.699492,-4.189113,3.271330,3.847077,-4.330467],[-5.773650,8.227062,9.834108,-6.057787,-7.474224,1.683767,-7.558987,7.706919,-5.595195,0.732394],[4.261715,7.167832,6.789945,-8.189013,-6.183465,7.579441,-2.259815,-9.050226,-8.954718,6.388481],[-4.950789,0.601947,-4.892992,7.694884,9.776044,-3.475837,7.137028,-9.799206,-0.289426,9.342719],[3.814227,7.384712,-8.524070,7.942377,-9.434864,2.109510,5.917956,-6.418609,-9.108044,3.706284],[-2.629330,-8.732730,9.683421,1.714708,2.801390,-6.725838,2.406596,4.795742,0.041571,1.950012],[1.231934,-3.063957,2.525660,-8.312786,6.143586,1.339589,-8.621805,6.638821,-1.393807,7.007990],[3.859674,-9.373198,-9.659943,-0.380673,-0.183616,5.665440,8.899185,7.421476,-3.286276,-7.147217],[7.320046,-9.910287,4.670237,2.147107,-6.820261,-6.071648,-4.869373,-9.128203,-7.775319,-4.686104]]], dtype = "float32")#candidate|6972|(10, 11, 10)|const|float32
bop_6973 = relay.divide(call_6954.astype('float32'), relay.reshape(const_6972.astype('float32'), relay.shape_of(call_6954))) # shape=(10, 11, 10)
bop_6976 = relay.divide(call_6955.astype('float32'), relay.reshape(const_6972.astype('float32'), relay.shape_of(call_6955))) # shape=(10, 11, 10)
output = relay.Tuple([bop_6973,])
output2 = relay.Tuple([bop_6976,])
func_6987 = relay.Function([], output)
mod['func_6987'] = func_6987
mod = relay.transform.InferType()(mod)
mutated_mod['func_6987'] = func_6987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6987_call = mutated_mod.get_global_var('func_6987')
call_6988 = func_6987_call()
output = call_6988
func_6989 = relay.Function([], output)
mutated_mod['func_6989'] = func_6989
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7029 = relay.const([[[-6.957626],[1.760969],[0.370297],[8.228817],[3.080949]],[[0.602544],[-7.784479],[3.499270],[-0.975523],[8.688827]],[[-7.669119],[-2.091076],[-1.147701],[3.431759],[-9.557078]],[[9.388981],[-3.971283],[-7.938467],[-3.358981],[-1.909663]],[[-2.206838],[9.864703],[4.104936],[6.364201],[-9.535705]],[[-8.897155],[8.993530],[-1.463661],[-9.196954],[3.568477]],[[-9.117291],[4.572649],[3.623772],[-9.925514],[-2.759787]],[[-8.162370],[-8.828488],[7.049738],[-7.837472],[2.804661]],[[0.866610],[5.653789],[3.058219],[0.822901],[-5.855223]],[[-3.701309],[7.733289],[4.066463],[4.012417],[-3.945537]],[[-6.769290],[-4.044462],[-7.308541],[-3.144648],[-5.498376]]], dtype = "float32")#candidate|7029|(11, 5, 1)|const|float32
uop_7030 = relay.rsqrt(const_7029.astype('float32')) # shape=(11, 5, 1)
uop_7041 = relay.acosh(const_7029.astype('float32')) # shape=(11, 5, 1)
output = relay.Tuple([uop_7030,uop_7041,])
output2 = relay.Tuple([uop_7030,uop_7041,])
func_7043 = relay.Function([], output)
mod['func_7043'] = func_7043
mod = relay.transform.InferType()(mod)
mutated_mod['func_7043'] = func_7043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7043_call = mutated_mod.get_global_var('func_7043')
call_7044 = func_7043_call()
output = call_7044
func_7045 = relay.Function([], output)
mutated_mod['func_7045'] = func_7045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7059 = relay.var("var_7059", dtype = "int16", shape = (11, 12, 9))#candidate|7059|(11, 12, 9)|var|int16
var_7060 = relay.var("var_7060", dtype = "int16", shape = (11, 12, 9))#candidate|7060|(11, 12, 9)|var|int16
bop_7061 = relay.greater(var_7059.astype('bool'), relay.reshape(var_7060.astype('bool'), relay.shape_of(var_7059))) # shape=(11, 12, 9)
func_6110_call = mod.get_global_var('func_6110')
func_6112_call = mutated_mod.get_global_var('func_6112')
call_7065 = relay.TupleGetItem(func_6110_call(), 1)
call_7066 = relay.TupleGetItem(func_6112_call(), 1)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_7069 = func_4414_call()
call_7070 = func_4414_call()
output = relay.Tuple([bop_7061,call_7065,call_7069,])
output2 = relay.Tuple([bop_7061,call_7066,call_7070,])
func_7073 = relay.Function([var_7059,var_7060,], output)
mod['func_7073'] = func_7073
mod = relay.transform.InferType()(mod)
mutated_mod['func_7073'] = func_7073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7073_call = mutated_mod.get_global_var('func_7073')
var_7075 = relay.var("var_7075", dtype = "int16", shape = (11, 12, 9))#candidate|7075|(11, 12, 9)|var|int16
var_7076 = relay.var("var_7076", dtype = "int16", shape = (11, 12, 9))#candidate|7076|(11, 12, 9)|var|int16
call_7074 = func_7073_call(var_7075,var_7076,)
output = call_7074
func_7077 = relay.Function([var_7075,var_7076,], output)
mutated_mod['func_7077'] = func_7077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_7126 = relay.TupleGetItem(func_1932_call(), 5)
call_7127 = relay.TupleGetItem(func_1933_call(), 5)
func_3597_call = mod.get_global_var('func_3597')
func_3598_call = mutated_mod.get_global_var('func_3598')
call_7130 = relay.TupleGetItem(func_3597_call(), 1)
call_7131 = relay.TupleGetItem(func_3598_call(), 1)
output = relay.Tuple([call_7126,call_7130,])
output2 = relay.Tuple([call_7127,call_7131,])
func_7136 = relay.Function([], output)
mod['func_7136'] = func_7136
mod = relay.transform.InferType()(mod)
mutated_mod['func_7136'] = func_7136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7136_call = mutated_mod.get_global_var('func_7136')
call_7137 = func_7136_call()
output = call_7137
func_7138 = relay.Function([], output)
mutated_mod['func_7138'] = func_7138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4996_call = mod.get_global_var('func_4996')
func_4998_call = mutated_mod.get_global_var('func_4998')
call_7187 = relay.TupleGetItem(func_4996_call(), 0)
call_7188 = relay.TupleGetItem(func_4998_call(), 0)
output = relay.Tuple([call_7187,])
output2 = relay.Tuple([call_7188,])
func_7208 = relay.Function([], output)
mod['func_7208'] = func_7208
mod = relay.transform.InferType()(mod)
mutated_mod['func_7208'] = func_7208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7208_call = mutated_mod.get_global_var('func_7208')
call_7209 = func_7208_call()
output = call_7209
func_7210 = relay.Function([], output)
mutated_mod['func_7210'] = func_7210
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7232 = relay.var("var_7232", dtype = "uint32", shape = (7, 9, 6))#candidate|7232|(7, 9, 6)|var|uint32
var_7233 = relay.var("var_7233", dtype = "uint32", shape = (7, 9, 6))#candidate|7233|(7, 9, 6)|var|uint32
bop_7234 = relay.greater_equal(var_7232.astype('bool'), relay.reshape(var_7233.astype('bool'), relay.shape_of(var_7232))) # shape=(7, 9, 6)
func_4933_call = mod.get_global_var('func_4933')
func_4935_call = mutated_mod.get_global_var('func_4935')
call_7238 = relay.TupleGetItem(func_4933_call(), 1)
call_7239 = relay.TupleGetItem(func_4935_call(), 1)
func_878_call = mod.get_global_var('func_878')
func_879_call = mutated_mod.get_global_var('func_879')
call_7242 = relay.TupleGetItem(func_878_call(), 0)
call_7243 = relay.TupleGetItem(func_879_call(), 0)
func_1099_call = mod.get_global_var('func_1099')
func_1100_call = mutated_mod.get_global_var('func_1100')
call_7254 = func_1099_call()
call_7255 = func_1099_call()
var_7256 = relay.var("var_7256", dtype = "uint32", shape = (7, 9, 6))#candidate|7256|(7, 9, 6)|var|uint32
bop_7257 = relay.add(var_7232.astype('uint8'), relay.reshape(var_7256.astype('uint8'), relay.shape_of(var_7232))) # shape=(7, 9, 6)
output = relay.Tuple([bop_7234,call_7238,call_7242,call_7254,bop_7257,])
output2 = relay.Tuple([bop_7234,call_7239,call_7243,call_7255,bop_7257,])
func_7263 = relay.Function([var_7232,var_7233,var_7256,], output)
mod['func_7263'] = func_7263
mod = relay.transform.InferType()(mod)
var_7264 = relay.var("var_7264", dtype = "uint32", shape = (7, 9, 6))#candidate|7264|(7, 9, 6)|var|uint32
var_7265 = relay.var("var_7265", dtype = "uint32", shape = (7, 9, 6))#candidate|7265|(7, 9, 6)|var|uint32
var_7266 = relay.var("var_7266", dtype = "uint32", shape = (7, 9, 6))#candidate|7266|(7, 9, 6)|var|uint32
output = func_7263(var_7264,var_7265,var_7266,)
func_7267 = relay.Function([var_7264,var_7265,var_7266,], output)
mutated_mod['func_7267'] = func_7267
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7297 = relay.var("var_7297", dtype = "bool", shape = (4, 14, 13))#candidate|7297|(4, 14, 13)|var|bool
var_7298 = relay.var("var_7298", dtype = "bool", shape = (4, 14, 13))#candidate|7298|(4, 14, 13)|var|bool
bop_7299 = relay.logical_or(var_7297.astype('bool'), relay.reshape(var_7298.astype('bool'), relay.shape_of(var_7297))) # shape=(4, 14, 13)
func_1023_call = mod.get_global_var('func_1023')
func_1027_call = mutated_mod.get_global_var('func_1027')
const_7306 = relay.const([-7,-5,2,9,-8,7,-7,3,-1,-7,-4,6,10,10,1,8,-6,9,3,-6,-9,4,7,7,10,3,-8,-7,2,8,1,-1,1,4,10,-4,-3,4,-6,6,-6,1,7,4,-3,3,8,-10,-6,2,-4,-6,5,-9,-4,8,-5,5,6,3,2,5,10,3,-2,3,-1,5,10,8,10,-5,4,-8,9,-10,-7,-5,2,2,-10,10,-5,-9,10,8,-5,4,3,10,3,-5,6,-7,5,-10,6,10,6,6,-9,5,-9,5,-3,6,-6,-8,10,-1,-5,-1,3,-4,-1,5,7,3,-9,10,3,9,8,4,-3,2,-7,10,-2,-9,5,2,3,9,-4], dtype = "int32")#candidate|7306|(135,)|const|int32
const_7307 = relay.const([-3.435183,-8.531922,-1.498153,4.574049,-4.963330,5.329816,3.745274,-9.098374,-5.528947,-0.813767,-5.644046,7.036844,-1.149123,8.896757,4.677155,0.197074,-1.159330,2.255705,2.224984,-6.423274,4.423652,-0.264425,-1.474236,-0.800180,-0.168020,8.963688,-0.137560,3.908749,-4.228072,2.599720,6.371386,-2.289121,-0.647704,-9.367257,-0.393001,5.779688,8.707780,2.043985,-2.534175,-5.060094,-5.168906,1.857683,-0.388355,3.261084,4.823289,1.211671,-6.368277,3.818592,4.300587,-6.094073,-9.929906,-5.145219,0.107271,-1.244749,7.597107,5.660768,-7.088630,-8.948787,1.335601,1.351033,-2.718342,6.846856,-0.449910,8.121788,7.234119,-6.491598,5.140957,7.082580,-5.924127,-8.934647,-8.848456,4.526113,-1.578886,-7.329512,-5.449249,2.716315,-1.683831,3.834393,7.672147,-5.094129,-2.373762,-0.076247,3.685907,-5.891242,4.716616,8.512840,-6.259589,-7.521280,5.326858,8.351712,0.593467,-5.406119,7.475246,-5.835385,4.932770,1.914130,8.941711,4.366194,0.285572,-7.051537,8.508699,5.334052,2.318057,-2.747020,-9.397111,-4.410005,-8.404890,2.272762,-1.672092,-9.558391,-9.418441,0.309713,-8.015310,8.848347,-6.670845,-8.893939,9.405662,-2.272967,-4.516353,1.962321,-5.799002,-4.767579,1.006410,-9.471148,1.625414,9.074499,3.404917,-7.580135,3.140965,7.078958,5.637120,0.194039,5.028790,8.181588,7.439632,-7.295039,-8.481231,-1.530066,-9.276244,7.038963,-4.154559,-0.855097,9.837853,5.524464,-4.381686,8.764860,-3.609195,-4.867485,-8.443429,0.862097,9.673820,0.638312,-5.751929,2.118883,-1.479243,8.596299,9.282450,-7.592386,-7.503960,7.105518,8.723961,-2.335169,-9.727284,8.977226,3.585286,-1.316039,7.104531,-7.777357,0.761743,-8.451508,5.599505,-7.723090,2.579709,6.424423,-1.385404,-9.873824,6.532495,-1.555139,-1.787333,-1.484373,-2.403586,-9.832680,-0.944932,-6.169637,-3.601575,-2.489309,-1.704485,-6.527914,9.534406], dtype = "float32")#candidate|7307|(189,)|const|float32
call_7305 = relay.TupleGetItem(func_1023_call(relay.reshape(const_7306.astype('int32'), [135,]), relay.reshape(const_7307.astype('float32'), [189,]), ), 1)
call_7308 = relay.TupleGetItem(func_1027_call(relay.reshape(const_7306.astype('int32'), [135,]), relay.reshape(const_7307.astype('float32'), [189,]), ), 1)
output = relay.Tuple([bop_7299,call_7305,const_7306,const_7307,])
output2 = relay.Tuple([bop_7299,call_7308,const_7306,const_7307,])
func_7319 = relay.Function([var_7297,var_7298,], output)
mod['func_7319'] = func_7319
mod = relay.transform.InferType()(mod)
var_7320 = relay.var("var_7320", dtype = "bool", shape = (4, 14, 13))#candidate|7320|(4, 14, 13)|var|bool
var_7321 = relay.var("var_7321", dtype = "bool", shape = (4, 14, 13))#candidate|7321|(4, 14, 13)|var|bool
output = func_7319(var_7320,var_7321,)
func_7322 = relay.Function([var_7320,var_7321,], output)
mutated_mod['func_7322'] = func_7322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7345 = relay.var("var_7345", dtype = "float32", shape = (5, 3, 7))#candidate|7345|(5, 3, 7)|var|float32
var_7346 = relay.var("var_7346", dtype = "float32", shape = (5, 3, 7))#candidate|7346|(5, 3, 7)|var|float32
bop_7347 = relay.power(var_7345.astype('float32'), relay.reshape(var_7346.astype('float32'), relay.shape_of(var_7345))) # shape=(5, 3, 7)
bop_7367 = relay.subtract(bop_7347.astype('uint8'), relay.reshape(var_7346.astype('uint8'), relay.shape_of(bop_7347))) # shape=(5, 3, 7)
func_2156_call = mod.get_global_var('func_2156')
func_2158_call = mutated_mod.get_global_var('func_2158')
call_7370 = relay.TupleGetItem(func_2156_call(), 1)
call_7371 = relay.TupleGetItem(func_2158_call(), 1)
bop_7375 = relay.floor_divide(bop_7367.astype('float32'), relay.reshape(var_7346.astype('float32'), relay.shape_of(bop_7367))) # shape=(5, 3, 7)
bop_7390 = relay.less_equal(bop_7347.astype('bool'), relay.reshape(bop_7367.astype('bool'), relay.shape_of(bop_7347))) # shape=(5, 3, 7)
output = relay.Tuple([call_7370,bop_7375,bop_7390,])
output2 = relay.Tuple([call_7371,bop_7375,bop_7390,])
func_7399 = relay.Function([var_7345,var_7346,], output)
mod['func_7399'] = func_7399
mod = relay.transform.InferType()(mod)
var_7400 = relay.var("var_7400", dtype = "float32", shape = (5, 3, 7))#candidate|7400|(5, 3, 7)|var|float32
var_7401 = relay.var("var_7401", dtype = "float32", shape = (5, 3, 7))#candidate|7401|(5, 3, 7)|var|float32
output = func_7399(var_7400,var_7401,)
func_7402 = relay.Function([var_7400,var_7401,], output)
mutated_mod['func_7402'] = func_7402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7208_call = mod.get_global_var('func_7208')
func_7210_call = mutated_mod.get_global_var('func_7210')
call_7424 = relay.TupleGetItem(func_7208_call(), 0)
call_7425 = relay.TupleGetItem(func_7210_call(), 0)
func_7136_call = mod.get_global_var('func_7136')
func_7138_call = mutated_mod.get_global_var('func_7138')
call_7428 = relay.TupleGetItem(func_7136_call(), 1)
call_7429 = relay.TupleGetItem(func_7138_call(), 1)
func_3653_call = mod.get_global_var('func_3653')
func_3657_call = mutated_mod.get_global_var('func_3657')
var_7439 = relay.var("var_7439", dtype = "uint32", shape = ())#candidate|7439|()|var|uint32
const_7440 = relay.const([-3,7,-1,5,5,5,1,-8,-8,4,10,6,-7,6,6,-8,-6,-8,7,9,7,6,1,4,-7,-5,-6,-6,-5,-2,8,1,7,10,-7,8,4,1,-7,7,5,-3,-2,-1,1,-10,-5,4,-2,-6,5,2,-7,5,8,-8,-3,-4,-7,-1,-10,1,2,9,-2,-3,-10,-4,-6,1,-10,-6,7,7,-7,-6,9,-6,5,-5,4,-3,4,1,8,-5,2,-3,-3,7,-1,1,-10,-1,2,-1,-7,-1,2,1,6,10,9,-9,6,-2,-6,-6,-10,3,-6,-10,-9,-4,-5,-2,-10,10,-8,2,2,-2,9,-7,7,-2,-4,-8,3,3,6,8,-8,7,-5,9,-5,8,-8,-4,6,-10,8,1,-9,-9,10,2,6,-3,8,-10,4,8,4,-9,-8,9,8,-7,-4,1,-4,1,2,-2,-7,-5,10,-3,5,-3,4,1,1,8,-6,9,-1,1,6,4,-4,2,-2,6,-8,10,-10,3,-9,-7,9,-7,10,-4,9,-10,6,-7,-9,-6,2,1,9,3,5,4,-10,4,9,8,5,1,2,-10,10,9,5,6,-6,-3,1,-4,-10,-4,-6,7,10,1,-5,-2,8,-9,-3,-9,3,1,1,6,-4,10,-3,-1,6,-3,-4,6,-8,9,7,4,9,-6,1,-4,2,-6,3,-8,-9,10,7,9,2,-9,-3,-10,6,-5,-6,3,4,-5,-5,6,3,1,-5,-3,6,5,-5,-4,-1,-10,-7,-6,-2,-8,3,3,3,4,-4,-2,-1,10,3,8,4,-10,-3,-1,-9,-2,-4,-6,10,-4,7,3,-4,3,-10,1,1,4,-2,-8,4,3,8,-7,-9,1,7,-3,10,10,9,1,-7,-3,-9,-9,-3,-3,10,-7,10,-5,5,-8,6,-4,-1,2,-9,-4,7,5,6,9,7,6,-8,-4,1,-6,2,-9,-5,9,-7,6,8,2,-9,-1,10,4,8,-1,-2,3,6,-6,-4,-9,-10,3,-6,6,-9,-2,4,-7,5,-1,-6,10,-8,-7,1,-3,10,-3,-4,-10,3,2,-7,10,-8,9,-7,7,5,-8,-7,1,9,-4,2,6,5,3,-8,3,5,-3,1,8,4,-4,8,-10,9,10,7,7,3,-3,-4,-10,-8,-3,-10,5,-6,-7,-6,1,-1,5,4,-10,-3,-9,-1,7,-1,8,-9,5,6,10,-9,5,10,7,-3,3,4,-2,1,4,-8,-3,-7,-4,4,-3,5,-2,2,-10,-8,1,-7,7,-4,1,-3,-1,-7,-3,1,2,6,2,5,2,-7,7,10,1,5,8,-6,-10,5,4,1,-3,-1,-4,-7,4,-1,-5,7,5,-9,1,3,8,7,6,-9,-3,-2,-9,-3,-2,-3,5,4,-1,-4,-8,-6,-7,-10,10,-1,-10,-10,-3,-1,9,-3,-4,-6,-10,9,-7,6,-7,6,6,10,2,6,-5,10,10,8,-8,9,3,6,3,4,10,7,9,5,-5,5,-7,4,8,-3,6,-6,10,-3,-6,2,8,4,-5,9,8,-4,8,-4,1,5,-9,-10,-3,-3,9,6,5,7,9,-3,-9,-3,4,5,5,3,-1,5,6,-4,3,4,-10,-7,-6,-7,5,6,-9,5,1,10,-10,7,-2,3,-2,1,-10,10,-1,3,-7,5,9,10,7,3,6,5,10,-1,-5,-4,-3,10,-3,9,-3,-6,4,2,9,-9,5,10,2,-8,6,-1,-8,10,-6,-1,-3,1,6,-9,1,7,5,-1,-1,-3,3,-3,-7,-2,3,-3,-2,-6,-2,-3,-4,-8,10,-6,-2,-7,5,8,6,-6,-3,7,-5,-6,-7,-9,9,-10,9,-1,4,-6,1,-10,3,-8,-5,4,6,-9,8,4,7,8,1,-9,-1,-6,10,-1,-2,-1,-2,10,-4,-10,7,2,9,2,-9,-5,-5,-3,6,7,-3,-6,-5,4,5,4,10,-8,3,-9,10,-5,4,1,3,2,8,2,6,3,-2,5,-2,-10,-4,9,2,10,-5,-10,9,-6,-9,10,-6,5,9,-9,5,-6,-8,-3,-3,8,4,-8,-9,-1,3,-2,-4,7,8,-4,5,10,-7,6,5,-7,2,-1,-10,-9,-4,3,9,1,8,-10,7,6,4,3,-6,8,8,10,2,4,-8,3,-9,-5,-2,-9,7,-1,9,-2,-8,4,-10,7,-4,9,10,-1,8,7,3,7,3,-2,-5,9,3,-1,-10,6,-1,-7,-6,-9,6,-4,-2,-10,-8,7,-7,9,10,4,10,3,4,2,10,-6,-9,-5,9,8,-10,-3,1,-8,1,2,-1,-3,-7,-6,-8,3,-3,8,8,1,1,4,5,-5,-1,8,-2,-10,7,7,-10,-1,-1,-5,7,6,2,-9,9,3,-1,-5,-3,-3,2,-6,-10,-7,7,1,-10,1,-8,-8,6,-10,-6,3,1,10,6,8,-4,-1,7,-7,1,-10,2,-8,1,7,-3,7,-6,7,-4,10,-10,-10,-4,-5,-7,-4,2,9,-9,9,7,-4,-2,7,-6,3,-7,-2,-10,-6,1,-7,-3,4,-5,2,10,6,-8,9,1,1,-5,-9,-9,5,6,-3,-8,-10,2,4,-1,8,-5,-5,-9,4,-1,-2,-9,-2,-8,-5,2,9,9,-9,-6,-10,-2,-7,3,-6,4,7,-4,2,2,8,5,9,3,-6,3,-9,-3,7,-6,2,-2,7,8,9,9,3,7,1,1,8,-5,10,-3,-8,3,-3,9,-2,9,6,-9,3,-2,-5,-4,-9,-9,-9,-8,-3,6,-6,4,-1,-9,3,7,-5,4,4,-4,7,3,-6,-2,4,5,-3,9,-3,3,10,6,9,-5,8,-7,3,-10,3,-9,1,10,-4,10,-9,5,-2,-5,1,-3,9,1,-2,-2,6,-3,-7,1,-9,-9,3,-8,-5,6,-2,2,-1,-5,7,-7,3,9,10,-9,10,-9,-2,-10,1,2,6,-7,8,-7,3,7,1,-4,-6,2,-3,-1,-2,-3,-6,8,-10,9,9,2,-10,-10,6,6,8,-8,-10,9,9,-5,-6,8,-8,-3,-5,-10,7,9,-5,3,-2,-6,9,4,-7,6,-2,1,-5,6,1,-6,8,-2,-8,-6,-8,-1,-8,-9,-4,10,1,-5,-6,-6,-8,7,-6,9,-4,4,-9,-10,-2,2,2,-3,1,-1,10,6,-10,6,-2,1,1,-9,-2,7,-6,1,1,2,3,-1,-1,-3,-1,-8,-7,10,-4,-10,6,2,8,-1,-9,-3,8,-7,2,-1,-10,-6,8,5,-5,-10,-4,-4,-8,-9,1,1,-5,-8,10,-10,8,7,1,10,1,-8,4,5,-8,1,6,9,-2,-2,8,-3,9,-6,6,-8,-8,9,-8,-6,-1,-8,-10,-10,-7,3,4,4,7,-6,6,9,-10,-5,-5,7,-9,2,-3,10,-7,-5,-2,-6,9,-2,-6,10,-3,4,-8,-3,5,6,10,-6,-2,9,2,-3,-9,-7,-9,-1,-1,-10,6,-8,9,-1,-2,7,9,-8,-5,-1,5,1,2,6,-7,-4,10,-7,6,9,4,1,-5,-4,9,7,3,10,2,-1,-2,3,7,-10,-8,10,-6,5,2,-4,-5,7,-10,5,2,-10,-1,6,-5,-2,5,4,6,7,-9,1,3,-3,-6,5,-2,-4,-10,-4,7,7,-1,7,8,-5,4,-2,5,-2,-2,3,-3,-1,-7,7,3,8,-3,-9,-9,-2,2,2,1,-10,-10,-9,2,-8,-6,-5,-9,1,7,6,6,-9,-2,-8,2,8,-3,-6,8,3,9,3,10,1,-5,3,5,-10,2,1,-7,9,5,-4,9,7,5,7,3,5,7,9,-2,10,-8,10,-10,-7,4,10,-1,3,-8,-3,10,-8,8,8,8,-3,-7,-4,-10,3,-4,-9,-3,-1,3,-1,4,10,7,-9,6,-1,-7,-1,6,2,1,3,4,-3,9,-1,-5,2,-1,-7,5,9,1,-8,5,6,-1,-8,-2,1,-6,4,-5,3,9,2,-6,-7,-10,5,-7,1,-10,3,1,5,8,1,6,-9,4,1,2,-8,-3,10,-5,-7,10,-9,4,8,-3,-5,-3,-6,-6,6,2,-2,8,-4,3,-8,-3,-3,10,1,2,-4,2,1,-6,-8,2,5,4,-3,-3,9,7,-5,3,10,-3,2,6,-3,-2,-3,3,-6,-7,3,9,10,-5,-3,-2,-6,9,8,3,10,-4,-2,10,3,7,1,-9,-2,-3,-5,-7,-10,8,4,1,7,-8,2,6,-7,-3,-1,-7,-9,7,7,-2,2,7,1,1,-1,6,-9,9,7,2,4,-10,-2,-6,1,-6,-10,-1,10,1,-1,5,9,-5,5,2,-9,-4,-9,1,-10,5,1,3,7,3,10,9,-1,6,2,-7,2,3,4,3,1,6,-3,-3,2,8,3,9,-2,10,-5,-6,-8,8,2,-6,9,-7,10,3,-6,-3,-10,1,-9,5,-7,9,-1,7,-10,8,-4,2,-5,-7,-5,7,3,7,-8,6,-5,-1,3,10,3,-3,-3,3,9,6,-10,-9,-1,-7,-1,4,-7,4,5,7,4,-4,-4,-2,7,-9,10,-10,-6,-2,9,7,-3,9,-7,-7,-6,-7,-8,-5,8,1,-4,1,-9,9,8,-5,-6,-10,-9,-5,8,5,-2,2,-6,10,-6,-10,-3,-5,6,4,4,-7,3,-10,-6,8,5,8,2,1,-10,-5,1,-5,-9,9,5,8,7,-8,3,1,-5,-1,-8,5,5,-2,-1,3,6,-5,7,-10,1,9,5,4,-10,6,-7,-5,-2,-9,4,3,4,-4,1,-7,-3,6,6,-9,-5,4,8,6,-6,3,7,-1,-3,-1,-8,-9,-3,-10,-5,5,6,5,1,-1,6,-9,9,-3,-3,-9,1,4,2,-4,5,-10,1,2,-5,-8,-9,4,-5,2,-1,2,10,-7,10,-1,1,5,-7,3,-9,2,8,-10,7,4,5,-2,-2,5,-10,-8,-10,-4,-7,8,10,8,8,-2,9,2,3,-7,3,-8,10,4,6,-4,7,-3,-2,4,8,-6,5,9,4,-1,-9,9,-5,-9,5,6,-7,-8,7,-10,1,1,8,1,7,-10,-3,6,-4,-8,8,10,10,-4,-3,3,-4,7,4,5,-4,-6,4,4,6,-8,4,2,7,3,2,-3,2,-10,9,-8,10,9,-7,-3,-3,-9,-10,-4,-9,-8,-5,-9,10,3,-5,-2,4,-9,4,-6,-5,-5,8,-4,6,-9,-3,-8,-10,-2,-2,9,8,9,-2,-9,1,-3,-5,7,-9,4,5,-4,-5,-9,5,-4,-8,4,-7,-8,-9,7,-10,-5,1,2,3,10,-4,-4,-8,1,1,-7,-8,-7,8,1,10,-8,7,-8,5,6,-8,-8,9,4,3,-8,-6,8,-1,-3,-6,4,8,2,2,3,-10,-8,-10,-9,-4,6,2,-6,-4,3,-10,3,-1,-1,5,-2,-7,-4,-3,-10,9,-8,3,-3,-3,-6,5,2,6,-8,-9,4,1,3,-10,-2,10,-10,-2,-9,-1,-9,-6,-4,-4,3,-5,9,6,1,-4,7,-2,6,-1,-10,-2,3,-10,2,1,7,-2,-1,8,-4,-4,-8,-9,-10,-9,-5,1,-3,-2,5,8,-9,-10,-1,-10,-1,-8,-3,-3,-7,5,-5,7,9,3,-5,8,3,4,-6,-1,-1,4,-7,-6,9,-6,10,-4,-5,3,-8,-5,10,-7,4,-1,-10,-8,4,-1,7,-9,3,6,-10,9,1,-1,3,-5,-9,-3,-3,-3,-5,10,-4,-9,-4,-6,-3,2,-10,4,4,-2,8,-9,-8,-8,9,-5,8,-9,-6,-7,-9,-4,6,4,-7,-1,4,8,4,-5,5,-5,3,-7,8,-9,-7,-8,10,10,-10,4,3,-8,-9,10,-2,-9,1,-3,2,-8,4,1,-1,1,4,-7,-9,-5,-7,-4,-10,-3,1,-9,-1,-3,6,1,6,9,9,-8,3,7,-8,3,6,-8,4,-3,6,-2,-9,-10,-4,7,-8,-2,-10,-5,1,-8,-3,-5,6,4,3,6,6,1,8,-3,-4,-7,7,-3,-9,-7,-7,-9,-2,7,-6,9,1,-4,-7,3,-4,-6,-4,9,-1,-6,-1,-3,8,10,3,10,1,-10,10,2,6,7,10,-5,-4,-1,-8,2,4,-3,-3,-8,-6,-5,-2,2,-6,1,-7,-8,9,-8,4,4,1,-5,-10,-9,1,-5,-2,2,8,-5,-10,-5,-10,6,4,4,-9,10,-9,-6,-2,5,9,-1,3,-1,-6,-3,-1,4,1,9,-4,9,-7,-6,-5,-4,-10,-3,-10,7,-1,4,-1,7,6,-4,-6,-6,8,-5,-2,-9,-3,-7,-7,9,-7,9,-3,2,4,-10,6,7,-7,-9,9,-5,-10,-7,9,4,1,3,-2,5,-10,-10,2,-10,-8,-10,-7,-1,-7,4,6,-3,-3,-3,3,5,-7,-10,10,8,1,7,2,6,8,-7,-2,-3,7,2,-8,-3,-1,3,-5,9,8,-5,-8,2,-5,-2,9,1,-3,-6,-9,-3,-4,-10,-7,6,-9,-10,3,2,-10,4,10,-3,-6,2,-10,4,3,-2,6,-8,8,-9,9,-1,-6,8,8,-6,2,10,5,5,-1,-8,4,2,-5,5,4,5,-10,-5,4,-5,-1,10,10,-4,2,-9,-10,-10,-4,1,2,-10,-8,-3,8,9,-4,5,-4,-6,-3,-3,-6,9,8,9,-5,2,-4,6,-4,1,-3,1,-7,6,-2,2,9,-9,1,-9,-5,-10,8,2,10,-10,-4,-2,10,1,-6,1,4,4,-7,2,4,4,-5,-3,-10,9,6,4,-1,9,10,5,-1,9,-2,2,2,-9,10,3,-7,-5,8,-10,-6,8,-8,-10,-2,6,10,1,4,9,1,6,-6,4,4,-5,-2,6,4,10,-5,-1,4,6,-1,4,9,-2,2,-9,10,7,-6,6,9,7,2,-10,7,6,3,10,9,6,-9,-8,-10,-5,-9,8,4,-3,-1,-5,-3,8,1,7,-1,-3,-2,3,7,-10,-6,-6,4,-7,4,-5,2,-4,-3,-5,6,7,1,1,8,6,-8,4,-2,6,2,-5,-7,9,10,4,-2,-3,3,-4,-5,-4,-3,-6,-9,2,-6,-6,-6,10,-9,-1,9,5,-9,-4,-9,9,7,6,-6,7,-5,-4,8,-6,-10,9,2,3,4,6,-6,-7,8,8,4,-7,-8,2,7,-4,-5,-8,8,-8,1,-8,-9,-1,-8,3,4,-3,-3,10,-10,-6,-7,2,8,-10,4,-7,10,-9,6,-2,-2,-7,-9,4,1,-4,6,8,8,4,-5,-2,-8,-5,3,-9,4,1,-2,3,-4,-4,5,-6,-9,4,1,10,6,-6,-5,-5,8,10,-10,-5,-2,-7,-2,-9,-5,-6,-8,8,2,-5,8,5,6,7,-10,2,-3,10,-4,-8,-3,-7,-1,-5,8,9,1,-1,-9,3,-3,3,4,1,2,8,4,-6,-10,-7,2,4,9,-10,-6,-2,-10,6,8,-3,-7,-6,6,-7,5,-5,-1,10,-8,2,5,-4,-9,-8,-8,-5,-2,7,5,4,-1,6,-10,3,9,2,9,1,-6,3,2,8,-1,1,2,-5,-6,4,7,6,3,2,-5,8,-1,-7,10,-6,2,-6,-5,-9,10,-9,-3,3,-6,-7,-7,4,9,9,-9,-10,-2,-7,-7,-8,-10,-6,-3,-8,-3,1,4,-7,9,10,-3,-8,9,4,10,5,-10,-4,9,3,8,3,1,5,-8,-5,7,7,-9,-2,-2,10,7,6,-5,-1,5,7,5,-6,-8,5,-4,-3,-3,3,-3,7,8,-7,4,-8,-3,-5,-8,3,-1,5,-1,10,5,-9,-8,-10,4,1,-5,-7,5,-9,2,-3,2,-10,-8,9,4,6,8,8,3,-10,-8,9,10,10,-1,6,-3,-8,-7,-8,9,-2,-8,-9,-2,1,7,-5,9,-10,10,-6,4,-4,5,1,4,8,-8,4,7,9,-5,-10,2,5,-8,3,-6,-1,8,4,-9,-7,1,-4,7,2,-10,8,-2,3,5,10,-4,-4,-6,8,1,10,-9,10,-2,9,5,-5,2,7,-6,1,-1,-6,-5,10,-2,-10,9,-6,-2,-2,-4,-6,-4,4,-1,4,3,-8,-4,4,3,6,4,2,9,-3,-10,9,-1,8,1,-5,-1,1,-3,1,9,-5,-1,8,-2,5,9,8,1,3,7,4,-9,3,-4,-8,-4,-5,-2,7,4,-6,7,3,1,10,4,-7,-1,-6,5,-9,7,-5,6,2,3,-5,1,8,3,-1,-2,-1,9,1,9,2,-1,-6,-9,9,4,4,-1,9,-2,5,1,10,-1,-3,-8,-10,-3,10,-3,-6,2,-4,4,-10,-6,-10,-1,6,-1,6,-3,10,1,8,8,2,-3,4,-2,4,1,6,4,4,10,-7,-6,-10,5,-2,-3,-3,-1,-4,5,-10,3,8,9,-5,4,3,-6,-9,-3,6,-3,2,9,-6,5,-1,-3,6,-5,-10,-2,10,-6,-1,-8,-2,-7,5,-2,10,-9,6,2,-4,2,7,-9,-1,6,3,-8,-4,-1,1,-2,-1,-4,4,8,4,-4,-1,7,-7,4,6,-4,7,1,-9,10,5,6,9,-9,-1,3,-5,5,-5,1,1,2,-1,9,-10,-9,-1,6,8,-5,10,2,-10,7,-6,-7,-6,-8,-5,-6,-5,10,1,-8,-3,9,-2,-9,9,-8,-8,5,-5,8,9,-3,-10,-2,2,7,4,-9,8,7,-7,2,1,7,10,5,1,8,2,-2,2,10,-7,10,-10,-3,-3,10,2,-1,-7,6,4,-1,3,-1,-5,9,-1,-7,8,-7,5,-9,9,1,-6,-5,-10,9,2,-8,-2,-8,8,5,5,10,-1,9,7,-5,-1,-5,9,-6,-3,-7,-5,-9,2,10,-6,-9,9,7,2,-1,4,-3,8,-5,6,-6,-7,-6,7,-8,6,1,7,-3,2,9,-10,1,2,8,8,-10,7,5,2,10,-1,5,-1,-5,10,8,-8,7,7,-9,9,1,5,-1,-1,7,2,-2,-8,-5,-2,-10,6,-10,3,7,1,8,-5,-7,2,8,5,6,-6,-4,5,-9,-1,3,2,-6,7,-3,2,7,-3,7,-7,-1,-5,-3,7,3,-5,-2,6,2,-9,-6,-4,-7,1,4,9,1,8,-6,8,-3,-8,9,-2,-9,-5,-3,9,-7,4,-6,-5,-8,-3,-8,-6,1,7,-7,-1,9,1,-7,4,9,-5,2,4,-3,-6,5,3,7,-7,8,-3,6,-10,4,-6,3,-10,1,9,-10,-4,-9,4,-6,10,-9,-10,-7,-9,-6,4,6,8,-9,-1,10,-5,-2,-4,-9,2,-9,4,-5,-9,-8,4,-6,-1,-7,-3,8,7,6,-8,-10,-5,-5,7,2,4,-8,5], dtype = "uint32")#candidate|7440|(3584,)|const|uint32
const_7441 = relay.const([[7,2,-10,-3,7,-10,6,-8,-7],[4,-1,10,7,7,-9,-10,6,2],[-2,-7,-5,-3,8,-9,-2,-2,3],[6,-4,-1,-8,9,-4,10,-8,-8],[3,-3,-5,-7,-7,-1,-4,2,1],[-9,6,-5,-9,-8,-1,1,8,-6],[-8,1,3,-6,2,-3,3,4,-1],[10,1,8,-6,5,-3,-8,-3,8],[2,2,-4,-7,-8,4,7,9,4],[9,6,-6,4,-2,5,-2,6,1],[1,-4,-8,-8,4,2,-7,-10,4],[6,1,2,9,-3,9,4,-1,-7],[-9,-3,-6,-3,-3,-8,10,-4,5],[7,1,9,-3,8,-1,10,-1,3],[7,2,10,8,5,10,-7,4,-6]], dtype = "int32")#candidate|7441|(15, 9)|const|int32
call_7438 = relay.TupleGetItem(func_3653_call(relay.reshape(var_7439.astype('uint32'), []), relay.reshape(const_7440.astype('uint32'), [16, 16, 14]), relay.reshape(const_7441.astype('int32'), [135,]), ), 0)
call_7442 = relay.TupleGetItem(func_3657_call(relay.reshape(var_7439.astype('uint32'), []), relay.reshape(const_7440.astype('uint32'), [16, 16, 14]), relay.reshape(const_7441.astype('int32'), [135,]), ), 0)
output = relay.Tuple([call_7424,call_7428,call_7438,var_7439,const_7440,const_7441,])
output2 = relay.Tuple([call_7425,call_7429,call_7442,var_7439,const_7440,const_7441,])
func_7449 = relay.Function([var_7439,], output)
mod['func_7449'] = func_7449
mod = relay.transform.InferType()(mod)
mutated_mod['func_7449'] = func_7449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7450 = relay.var("var_7450", dtype = "uint32", shape = ())#candidate|7450|()|var|uint32
func_7449_call = mutated_mod.get_global_var('func_7449')
call_7451 = func_7449_call(var_7450)
output = call_7451
func_7452 = relay.Function([var_7450], output)
mutated_mod['func_7452'] = func_7452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4825_call = mod.get_global_var('func_4825')
func_4826_call = mutated_mod.get_global_var('func_4826')
call_7505 = relay.TupleGetItem(func_4825_call(), 4)
call_7506 = relay.TupleGetItem(func_4826_call(), 4)
output = call_7505
output2 = call_7506
func_7525 = relay.Function([], output)
mod['func_7525'] = func_7525
mod = relay.transform.InferType()(mod)
output = func_7525()
func_7526 = relay.Function([], output)
mutated_mod['func_7526'] = func_7526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7043_call = mod.get_global_var('func_7043')
func_7045_call = mutated_mod.get_global_var('func_7045')
call_7535 = relay.TupleGetItem(func_7043_call(), 1)
call_7536 = relay.TupleGetItem(func_7045_call(), 1)
func_4535_call = mod.get_global_var('func_4535')
func_4537_call = mutated_mod.get_global_var('func_4537')
const_7539 = relay.const([[3.149852,-8.629766,8.795882,7.387147,5.856686,-5.863512,1.660086,6.901581,-7.622919,-9.791569,4.335120,-2.274053,-9.503965,5.032747,5.129412,6.156966,1.783667,4.097389,-3.872492,3.050339,-6.314740,-5.182863,0.703865,-9.306199,5.617888,0.310477,-1.899899,-6.702563,3.044969,7.761902,-0.771258,8.124623,-8.096241,7.994869,-3.971329,2.859081,-8.766097,-5.906354,9.266244,6.024153,-4.612092,-0.712489,1.101525,4.557844,-4.600910,3.397066,4.691559,-1.155882,6.834096,-9.482786,-5.875775,6.493629,-0.103416,-0.213284,-9.201201,-4.997526,-8.221606,7.784438,1.300137,9.829921,2.521996,1.766908,7.746215,-3.112652,7.424621,-4.744975,-1.987103,-1.356859,-6.348793,7.125142,-5.714928,0.986770,-5.307777,-9.131091,8.409029,2.411751,6.824519,-4.566358,-3.154904,8.266295,0.447759,9.550187,0.976070,-8.459399,-8.401075,-5.533395,-8.690161,-8.618309,-8.552004,-5.894902,-8.193531,-5.292468,-6.836936,-1.622490,-8.052196,-6.532571,-6.985655,8.420828,5.310845,1.138952,7.327735,3.712730,2.826074,-0.873982,-9.965538,8.446405,-4.461098,-1.392020,-3.279615,3.641279,0.615541,9.013482,0.762811,5.742841,-8.117973,6.384249,2.654021,4.268444,-9.354291,-0.457664,1.252694,2.692047,-3.860509,-0.546012,-2.567156,5.047535,-2.438783,6.557361,4.362089,-5.012720,6.807896,-3.438806,-5.721779,5.387737,8.045554,-0.156322,-5.661688,8.898215,5.684522,4.951543,5.163223,0.950105,1.713728,-2.290009,-3.414774,7.403613,-4.927583,-1.391653,7.426075,9.716775,6.532228,8.146585,4.889238,-4.001683,4.836224,-6.782625,-3.287534,-4.264712,1.723682,8.916728,6.967036,7.423416,-4.287488,1.138214,-8.404070,-8.600984,-7.930556,5.457176,-6.756219,-5.249216,7.580551,8.490156,5.054165,-3.356761,-1.292550,-0.008398,-7.132342,2.257510,6.291812,-1.249842,2.164166,9.003392,3.497468,5.170476,2.884111,2.709687,-9.925399,-3.526710,-8.149402,-6.123303,-2.110851,-5.011022,5.668448,9.147862,-2.233128,-3.231094,8.032723,5.781541,-8.170753,-8.596511,2.737624,-6.279061,-5.509310,3.342665,1.859480,8.314516,-9.255052,-1.373254,6.529467,-0.624447,-5.709932,7.345975,-5.014396,-2.728958,7.493039,-2.781422,-3.638194,1.941144,-3.832196,0.794497,-9.314768,1.509755,-6.899204,-1.318225,-2.556594,-8.495563,0.794894,-1.293712,-8.133456,-2.538697,2.896235,-7.603352,-7.624556,2.642540,-4.771576,-9.397805,7.874997,7.110727,-2.805816,-8.228136,-5.055821,2.475097,-8.303904,-6.130417,-8.650343,6.491252,5.655782,5.062533,7.468354,-0.533194,3.375349,-3.755034,1.271784,-6.413157,-3.187679,-9.348474,5.316885,-6.839730,0.779062,4.792527,-7.998916,6.644221,-9.879622,4.476541,7.301380,-5.590578,-6.111646,-8.840234,-8.751130,3.003577,6.697434,-8.945153,6.729101,-6.845184,4.216494,-2.700121,-1.001910,9.242010,-8.394222,-8.426330,4.491389,-6.873312,-4.398405,3.833736,-5.261442,2.219174,-0.728410,-7.374332,-5.613210,-3.487381,-9.310062,6.822455,-5.589493,-9.915316,7.511267,5.002642,9.411059,3.676028,-3.109481,-3.107653,7.117778,-5.031054,7.516417,-8.413555,8.075140,0.950955,9.502962,8.555242,-4.229977,1.915606,-8.918515,-0.044399,-8.477608,8.100031,-8.710856,8.578500,2.093812,9.437828,9.770603,8.227974,-0.256210,-7.438190,5.449438,3.533071,5.294909,-6.350348,9.239261,7.915866,-4.059430,-1.829790,1.278832,-9.835783,7.930278,3.258985,2.894214,-2.483248,-8.767097,-5.569933,-9.567334,9.127295,-6.804086,5.044997,-6.879325,6.900260,-6.075425,2.912002,-5.919244,-9.481380,8.883837,-1.552268,-3.752321,-7.236723,8.288945,6.189943,-8.793948,-2.071504,-4.988442,1.878519,-5.937696,0.016381,-6.433640,-4.986383,-2.315683,3.895585,2.939603,9.118792,-3.805351,-5.458771,-6.276079,1.443487,-0.164970,5.889109,4.674519,7.651076,5.347756,-1.767938,4.176159,-1.227638,-8.074244,0.676220,0.994653,2.177728,-0.697427,-7.197718,0.404281,3.602706,1.683311,-6.985412,1.504822,-8.292944,-1.782202,2.076390,-5.874136,-0.477283,4.331788,-6.156212,-0.388947,-2.374027,1.284653,5.051263,-2.721489,-2.336757,1.848299,-6.443193,-4.447714,0.069599,-8.286330,-2.065767,0.210298,6.862607,-7.769345,5.531434,4.747466,1.496971,-4.564927,-3.705637,1.170075,-1.798957,9.494471,-2.134016,-2.439604,1.513644,-5.538012,0.739756,-8.080318,-7.308645,-8.682418,7.038453,6.167916,-7.488325,5.450477,-4.076277,6.704552,4.015055,3.022311,-7.764078,8.779284,-0.714235,3.148153,0.209297,-0.582172,-9.503184,-0.334767,0.777002,-9.404715,5.810300,-9.577806,-4.316928,5.027609,-2.961627,7.436620,-3.958509,-2.820749,-2.373854,-9.755381,9.161870,3.969078,6.851201,9.040140,3.825027,-3.407091,1.272401,-2.296740,-4.590786,1.454255,3.717045,1.232148,-3.096414,-0.521570,8.019167,-6.156189,-1.857464,-0.012808,1.645435,-5.456097,1.737675,-6.524904,6.219520,-8.668189,-4.243593,-6.440532,3.559429,2.783763,-1.212644,-1.331695,-7.467644,-5.454905,4.308535,-7.686685,1.724504,3.315549,9.514754,8.342561,1.865748,-9.514616,-0.373515,0.513555,-8.611830,5.242502,-2.411814,-1.188663,-6.713324,0.019439,1.711086,4.131375,-2.607873,0.362817,-1.079070,-6.705907,-6.537193,4.392299,-9.086311,-2.757620,8.525653,1.790842,-4.584982,-1.419526,-7.566490,-2.111019,7.363530,-7.852187,-3.903756,2.459831,8.921667,-4.302073,-7.151643,-0.169488,-4.297114,6.300472,-3.052115,-5.429475,-2.577716,8.847317,-0.582033,-5.542942,3.699437,-4.113959,-3.980666,-0.780575,9.667536,7.414942,-1.656481,-6.818704,0.170280,-8.488855,-2.391769,-0.254640,3.070857,-4.851804,0.950043,6.779100,2.614700,-0.405905,0.272714,4.450192,-1.317175,-3.232668,-2.705574,0.517988,-7.195315,7.154512,-0.834940,0.920306,-2.588159,-5.596282,-1.010936,-7.325090,1.844229,9.071637,-7.540754,2.171643,-6.346448,8.799256,2.094190,-6.161170,4.528128,-1.376762,9.416042,5.096121,9.051275,5.819185,-6.650642,-5.933679,-6.078690,-5.210565,-1.627033,6.135535,-8.638236,-6.011296,-2.277059,1.441071,-5.434852,7.803416,-6.796011,1.456890,-8.309287,0.623188,3.278836,-2.211633,-0.738154,-4.939280,1.233681,1.965647,-5.463297,4.905970,-2.039963,-0.297192,-8.444144,-4.025692,9.236978,3.557547,-6.287062,-2.299032,-9.713959,4.517033,4.803624,7.672492,-3.700659,-9.075670,-4.587455,1.815446,0.408905,-1.971021,1.239796,-3.636404,-3.084497,1.189059,-0.845239,-4.124767,-4.907850,2.961693,0.971221,-3.243288,8.526896,1.741745,-5.958231,-6.423263,-8.541280,-0.637769,7.273785,-7.642566,-5.767395,-8.902690,3.889464,5.226521,1.080971,-8.019171,1.286936,-6.456354,9.609564,1.251361,-0.630119,2.362436,-7.088701,-3.646000,-8.396115,7.229315,-7.744620,-0.389598,0.443272,-2.916052,-1.826446,6.293204,5.700499,5.440288,8.737547,3.674943,-4.689141,0.471142,-6.069943,8.640618,-8.963268,5.961923,-6.439933,1.701760,2.111484,-5.967553,-5.319295,4.073066,4.249399,-8.959876,9.266362,-1.038469,2.346365,-4.391456,-3.191425,-2.291656,2.200006,7.498727,7.727321,3.634988,-8.583946,4.928950,7.608012,3.750133,6.230525,-0.434019,0.003403,-1.239406,-5.193709,-2.520882,-4.311931,7.486648,-0.976420,-1.748245,3.494671,-0.196577,5.208934,-2.315683,-3.526293,-5.716330,-1.150059,1.458200,3.742388,-9.821554,-0.704697,-9.237145,2.864191,-0.625120,6.742552,-1.537058,-9.747375,-9.051750,-7.623230,8.551141,-7.490863,-0.223812,-6.890898,-2.815575,8.456197,6.900465,2.072956,0.925512,4.929052,-1.290376,-7.593045,-3.741529,4.695647,-4.163441,8.464328,0.771867,1.650132,-1.565149,2.221603,-3.884292,4.009628,-1.005519,5.406295,-9.285724,-2.462177,9.570786,2.790763,9.065709,1.124267,-1.010918,4.732062,-0.144615,9.410186,-0.329590,-0.969513,5.962119,-4.772004,-0.628295,5.011502,2.105981,-0.090765,-6.522654,-5.922267,-2.936350,-1.380751,-6.713359,-7.728728,-7.033525,-6.108048,-3.435491,0.246958,-1.203815,-5.679150,-1.622928,4.020352,1.588223,-5.475855,5.812551,3.297261,-8.296528,-1.080392,-7.802335,-2.999730,-9.113019,9.461255,8.472402,4.571590,2.041945,-6.376379,6.296515,3.759437,8.865114,8.116310,-7.538264,2.120409,-6.790237,9.114905,-0.847298,3.330194,-1.393138,-2.068331,-2.904640,-0.879891,0.870326,8.310742,-8.886806,1.206956,-8.180103,3.411162,1.534692,-1.994453,-4.823447,-6.151603,8.759357,-5.736207,7.786902,4.607873,-5.747238,1.151916,-9.873775,-0.511411,0.038374,3.919704,-0.359993,-6.149219,2.382677,7.902057,-6.630501,-6.722856,-8.747272,-3.012158,2.631063,8.617268,3.599180,2.186110,2.433381,-2.251127,3.475374,-7.529888,-8.906618,-1.128457,1.483899,-2.698952,5.820121,0.799763,6.809358,7.155139,3.993777,-9.101024,0.394026,3.489422,4.570166,6.756915,8.883602,5.543806,-1.589053,7.872399,1.217530,-7.994762,-4.361466,-4.636117,8.421972,9.981926,-4.944255,5.169430,2.877141,-9.724556,-0.134932,-0.895404,-9.818870,-0.734169,6.121853,-4.242486,8.903950,3.728132,5.250569,7.314616,-1.337472,2.477698,-8.762869,-5.156328,0.446539,-5.760517,8.750113,3.454011,-3.784833,-4.712353,3.635039,5.245047,2.943149,3.710493,-4.863251,7.038118,6.340362,-2.252145,8.123803,2.798585,6.541489,1.111709,-3.707108,-5.097936,-5.143898,-0.008501,-4.593278,-9.015024,7.237020,-6.015706,-1.114201,-3.513502,-2.468695,9.159045,0.240157,6.481836,-2.491218,5.091085,8.971191,-1.596475,4.705973,-2.454936,-1.613194,8.524952,-2.055176,2.268299,-5.493610,-0.656402,-7.730673,-6.226941,-7.917202,5.412015,-0.187658,-7.053821,-7.065119,7.884750,9.081472,8.925154,-7.898794,0.685478,-5.082887,0.705860,-8.406551,-4.101938,5.923807,9.751554,-7.443546,9.104384,3.717933,-2.935958,-9.237772,8.333130,2.967606,0.429889,-4.810656,-1.022291,7.310935,4.639230,4.383581,7.774265,-2.950501,8.279828,9.541698,-5.635827,-1.416434,-6.190095,-0.254852,-2.509691,9.333761,-7.495262,2.472092,-6.977552,-5.113000,-9.917376,8.100232,8.707640,-2.074017,-1.975829,0.295867,2.892015,-8.780340,-9.956802,6.903460,-8.085283,-9.373475,-9.199626,-7.038846,-3.731271,-9.729636,-4.858228,-8.558835,-7.036305,-2.381891,-0.403272,1.003678,3.358517,-0.634526,-9.965969,6.432749,-4.209019,6.801578,6.322949,4.269918,8.103529,-0.062143,-2.537596,8.344358,-0.668567,2.567622,6.797610,-9.658650,-2.918345,-5.379499,-0.008651,-0.986691,4.595152,-3.436145,6.672651,-3.800964,4.194405,-0.434744,-7.384474,-6.972014,-0.035514,9.045383,-3.184743,-7.553479,-8.888724,-5.242718,-5.672486,4.076684,-2.030711,-6.332843,-3.521283,-5.268227,-7.823129,2.683246,-0.507528,2.026146,9.512395,-6.821021,-8.277043,1.400719,6.022137,0.257490,-7.291227,6.742546,-0.710132,-2.512946,1.087684,8.753760,7.363278,-3.786650,-2.633465,-2.921673,-2.132809,-5.622785,-8.136010,-1.323398,6.501595,4.059855,-1.559889,-0.712218,5.315974,6.445778,-5.642953,-5.408368,2.407145,8.119458,-9.909873,-1.782914,7.873287,8.517207,-1.439499,7.577683,9.782894,0.203056,-7.833310,4.022064,-6.334709,-5.667940,3.868677,-2.477210,7.253952,-3.956115,-8.754753,-3.110143,4.958045,0.187108,3.725237,3.174905,1.457493,4.917690,2.652200,5.904162,0.333042,-6.589454,-1.074737]], dtype = "float64")#candidate|7539|(1, 1100)|const|float64
call_7538 = relay.TupleGetItem(func_4535_call(relay.reshape(const_7539.astype('float64'), [10, 11, 10])), 0)
call_7540 = relay.TupleGetItem(func_4537_call(relay.reshape(const_7539.astype('float64'), [10, 11, 10])), 0)
bop_7552 = relay.power(const_7539.astype('float64'), relay.reshape(call_7538.astype('float64'), relay.shape_of(const_7539))) # shape=(1, 1100)
bop_7555 = relay.power(const_7539.astype('float64'), relay.reshape(call_7540.astype('float64'), relay.shape_of(const_7539))) # shape=(1, 1100)
bop_7559 = relay.less(call_7535.astype('bool'), bop_7552.astype('bool')) # shape=(11, 5, 1100)
bop_7562 = relay.less(call_7536.astype('bool'), bop_7555.astype('bool')) # shape=(11, 5, 1100)
output = relay.Tuple([bop_7559,])
output2 = relay.Tuple([bop_7562,])
func_7564 = relay.Function([], output)
mod['func_7564'] = func_7564
mod = relay.transform.InferType()(mod)
output = func_7564()
func_7565 = relay.Function([], output)
mutated_mod['func_7565'] = func_7565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6884_call = mod.get_global_var('func_6884')
func_6885_call = mutated_mod.get_global_var('func_6885')
call_7602 = func_6884_call()
call_7603 = func_6884_call()
output = relay.Tuple([call_7602,])
output2 = relay.Tuple([call_7603,])
func_7608 = relay.Function([], output)
mod['func_7608'] = func_7608
mod = relay.transform.InferType()(mod)
mutated_mod['func_7608'] = func_7608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7608_call = mutated_mod.get_global_var('func_7608')
call_7609 = func_7608_call()
output = call_7609
func_7610 = relay.Function([], output)
mutated_mod['func_7610'] = func_7610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7136_call = mod.get_global_var('func_7136')
func_7138_call = mutated_mod.get_global_var('func_7138')
call_7673 = relay.TupleGetItem(func_7136_call(), 0)
call_7674 = relay.TupleGetItem(func_7138_call(), 0)
func_4825_call = mod.get_global_var('func_4825')
func_4826_call = mutated_mod.get_global_var('func_4826')
call_7693 = relay.TupleGetItem(func_4825_call(), 2)
call_7694 = relay.TupleGetItem(func_4826_call(), 2)
func_7136_call = mod.get_global_var('func_7136')
func_7138_call = mutated_mod.get_global_var('func_7138')
call_7697 = relay.TupleGetItem(func_7136_call(), 0)
call_7698 = relay.TupleGetItem(func_7138_call(), 0)
output = relay.Tuple([call_7673,call_7693,call_7697,])
output2 = relay.Tuple([call_7674,call_7694,call_7698,])
func_7704 = relay.Function([], output)
mod['func_7704'] = func_7704
mod = relay.transform.InferType()(mod)
mutated_mod['func_7704'] = func_7704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7704_call = mutated_mod.get_global_var('func_7704')
call_7705 = func_7704_call()
output = call_7705
func_7706 = relay.Function([], output)
mutated_mod['func_7706'] = func_7706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_815_call = mod.get_global_var('func_815')
func_816_call = mutated_mod.get_global_var('func_816')
call_7707 = relay.TupleGetItem(func_815_call(), 0)
call_7708 = relay.TupleGetItem(func_816_call(), 0)
output = call_7707
output2 = call_7708
func_7709 = relay.Function([], output)
mod['func_7709'] = func_7709
mod = relay.transform.InferType()(mod)
mutated_mod['func_7709'] = func_7709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7709_call = mutated_mod.get_global_var('func_7709')
call_7710 = func_7709_call()
output = call_7710
func_7711 = relay.Function([], output)
mutated_mod['func_7711'] = func_7711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6987_call = mod.get_global_var('func_6987')
func_6989_call = mutated_mod.get_global_var('func_6989')
call_7751 = relay.TupleGetItem(func_6987_call(), 0)
call_7752 = relay.TupleGetItem(func_6989_call(), 0)
func_6801_call = mod.get_global_var('func_6801')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_7757 = func_6801_call()
call_7758 = func_6801_call()
func_6394_call = mod.get_global_var('func_6394')
func_6396_call = mutated_mod.get_global_var('func_6396')
call_7759 = relay.TupleGetItem(func_6394_call(relay.reshape(call_7751.astype('float64'), [10, 11, 10])), 1)
call_7760 = relay.TupleGetItem(func_6396_call(relay.reshape(call_7751.astype('float64'), [10, 11, 10])), 1)
output = relay.Tuple([call_7751,call_7757,call_7759,])
output2 = relay.Tuple([call_7752,call_7758,call_7760,])
func_7761 = relay.Function([], output)
mod['func_7761'] = func_7761
mod = relay.transform.InferType()(mod)
output = func_7761()
func_7762 = relay.Function([], output)
mutated_mod['func_7762'] = func_7762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2621_call = mod.get_global_var('func_2621')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_7766 = relay.TupleGetItem(func_2621_call(), 7)
call_7767 = relay.TupleGetItem(func_2623_call(), 7)
func_5167_call = mod.get_global_var('func_5167')
func_5169_call = mutated_mod.get_global_var('func_5169')
call_7775 = relay.TupleGetItem(func_5167_call(relay.reshape(call_7766.astype('float64'), [1100,])), 1)
call_7776 = relay.TupleGetItem(func_5169_call(relay.reshape(call_7766.astype('float64'), [1100,])), 1)
output = relay.Tuple([call_7766,call_7775,])
output2 = relay.Tuple([call_7767,call_7776,])
func_7781 = relay.Function([], output)
mod['func_7781'] = func_7781
mod = relay.transform.InferType()(mod)
output = func_7781()
func_7782 = relay.Function([], output)
mutated_mod['func_7782'] = func_7782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7790 = relay.var("var_7790", dtype = "int16", shape = (6, 8, 14))#candidate|7790|(6, 8, 14)|var|int16
var_7791 = relay.var("var_7791", dtype = "int16", shape = (6, 8, 14))#candidate|7791|(6, 8, 14)|var|int16
bop_7792 = relay.logical_xor(var_7790.astype('int16'), relay.reshape(var_7791.astype('int16'), relay.shape_of(var_7790))) # shape=(6, 8, 14)
func_1099_call = mod.get_global_var('func_1099')
func_1100_call = mutated_mod.get_global_var('func_1100')
call_7797 = func_1099_call()
call_7798 = func_1099_call()
output = relay.Tuple([bop_7792,call_7797,])
output2 = relay.Tuple([bop_7792,call_7798,])
func_7811 = relay.Function([var_7790,var_7791,], output)
mod['func_7811'] = func_7811
mod = relay.transform.InferType()(mod)
mutated_mod['func_7811'] = func_7811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7811_call = mutated_mod.get_global_var('func_7811')
var_7813 = relay.var("var_7813", dtype = "int16", shape = (6, 8, 14))#candidate|7813|(6, 8, 14)|var|int16
var_7814 = relay.var("var_7814", dtype = "int16", shape = (6, 8, 14))#candidate|7814|(6, 8, 14)|var|int16
call_7812 = func_7811_call(var_7813,var_7814,)
output = call_7812
func_7815 = relay.Function([var_7813,var_7814,], output)
mutated_mod['func_7815'] = func_7815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4230_call = mod.get_global_var('func_4230')
func_4231_call = mutated_mod.get_global_var('func_4231')
call_7827 = relay.TupleGetItem(func_4230_call(), 0)
call_7828 = relay.TupleGetItem(func_4231_call(), 0)
output = relay.Tuple([call_7827,])
output2 = relay.Tuple([call_7828,])
func_7829 = relay.Function([], output)
mod['func_7829'] = func_7829
mod = relay.transform.InferType()(mod)
output = func_7829()
func_7830 = relay.Function([], output)
mutated_mod['func_7830'] = func_7830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1250_call = mod.get_global_var('func_1250')
func_1252_call = mutated_mod.get_global_var('func_1252')
call_7831 = relay.TupleGetItem(func_1250_call(), 0)
call_7832 = relay.TupleGetItem(func_1252_call(), 0)
output = relay.Tuple([call_7831,])
output2 = relay.Tuple([call_7832,])
func_7845 = relay.Function([], output)
mod['func_7845'] = func_7845
mod = relay.transform.InferType()(mod)
mutated_mod['func_7845'] = func_7845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7845_call = mutated_mod.get_global_var('func_7845')
call_7846 = func_7845_call()
output = call_7846
func_7847 = relay.Function([], output)
mutated_mod['func_7847'] = func_7847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6539_call = mod.get_global_var('func_6539')
func_6540_call = mutated_mod.get_global_var('func_6540')
call_7905 = relay.TupleGetItem(func_6539_call(), 1)
call_7906 = relay.TupleGetItem(func_6540_call(), 1)
func_4933_call = mod.get_global_var('func_4933')
func_4935_call = mutated_mod.get_global_var('func_4935')
call_7910 = relay.TupleGetItem(func_4933_call(), 0)
call_7911 = relay.TupleGetItem(func_4935_call(), 0)
output = relay.Tuple([call_7905,call_7910,])
output2 = relay.Tuple([call_7906,call_7911,])
func_7924 = relay.Function([], output)
mod['func_7924'] = func_7924
mod = relay.transform.InferType()(mod)
mutated_mod['func_7924'] = func_7924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7924_call = mutated_mod.get_global_var('func_7924')
call_7925 = func_7924_call()
output = call_7925
func_7926 = relay.Function([], output)
mutated_mod['func_7926'] = func_7926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_7940 = func_2078_call()
call_7941 = func_2078_call()
output = call_7940
output2 = call_7941
func_7944 = relay.Function([], output)
mod['func_7944'] = func_7944
mod = relay.transform.InferType()(mod)
output = func_7944()
func_7945 = relay.Function([], output)
mutated_mod['func_7945'] = func_7945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4316_call = mod.get_global_var('func_4316')
func_4317_call = mutated_mod.get_global_var('func_4317')
call_8007 = relay.TupleGetItem(func_4316_call(), 1)
call_8008 = relay.TupleGetItem(func_4317_call(), 1)
func_6236_call = mod.get_global_var('func_6236')
func_6239_call = mutated_mod.get_global_var('func_6239')
const_8015 = relay.const([True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True], dtype = "bool")#candidate|8015|(90,)|const|bool
call_8014 = relay.TupleGetItem(func_6236_call(relay.reshape(const_8015.astype('bool'), [90,])), 2)
call_8016 = relay.TupleGetItem(func_6239_call(relay.reshape(const_8015.astype('bool'), [90,])), 2)
uop_8017 = relay.sqrt(call_8014.astype('float64')) # shape=(189,)
uop_8019 = relay.sqrt(call_8016.astype('float64')) # shape=(189,)
func_7564_call = mod.get_global_var('func_7564')
func_7565_call = mutated_mod.get_global_var('func_7565')
call_8023 = relay.TupleGetItem(func_7564_call(), 0)
call_8024 = relay.TupleGetItem(func_7565_call(), 0)
var_8036 = relay.var("var_8036", dtype = "bool", shape = (11, 5, 1100))#candidate|8036|(11, 5, 1100)|var|bool
bop_8037 = relay.power(call_8023.astype('float32'), relay.reshape(var_8036.astype('float32'), relay.shape_of(call_8023))) # shape=(11, 5, 1100)
bop_8040 = relay.power(call_8024.astype('float32'), relay.reshape(var_8036.astype('float32'), relay.shape_of(call_8024))) # shape=(11, 5, 1100)
output = relay.Tuple([call_8007,const_8015,uop_8017,bop_8037,])
output2 = relay.Tuple([call_8008,const_8015,uop_8019,bop_8040,])
func_8046 = relay.Function([var_8036,], output)
mod['func_8046'] = func_8046
mod = relay.transform.InferType()(mod)
mutated_mod['func_8046'] = func_8046
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8047 = relay.var("var_8047", dtype = "bool", shape = (11, 5, 1100))#candidate|8047|(11, 5, 1100)|var|bool
func_8046_call = mutated_mod.get_global_var('func_8046')
call_8048 = func_8046_call(var_8047)
output = call_8048
func_8049 = relay.Function([var_8047], output)
mutated_mod['func_8049'] = func_8049
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8096 = relay.var("var_8096", dtype = "float64", shape = (7, 1, 4))#candidate|8096|(7, 1, 4)|var|float64
uop_8097 = relay.rsqrt(var_8096.astype('float64')) # shape=(7, 1, 4)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_8112 = func_4625_call()
call_8113 = func_4625_call()
var_8115 = relay.var("var_8115", dtype = "float64", shape = (7, 10, 4))#candidate|8115|(7, 10, 4)|var|float64
bop_8116 = relay.multiply(uop_8097.astype('float64'), var_8115.astype('float64')) # shape=(7, 10, 4)
output = relay.Tuple([call_8112,bop_8116,])
output2 = relay.Tuple([call_8113,bop_8116,])
F = relay.Function([var_8096,var_8115,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8096,var_8115,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

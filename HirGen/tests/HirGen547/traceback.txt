==========mod==========
#[version = "0.0.5"]
def @func_2636() -> (Tensor[(7, 15, 13), float64],) {
  %0 = @func_2563() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %3 = exp(%2) /* ty=Tensor[(7, 15, 13), float64] */;
  (%3,)
}

def @func_3328() -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) {
  %4 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %5 = %4.0;
  %6 = cast(%5, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %7 = rsqrt(%6) /* ty=Tensor[(7, 15, 13), float64] */;
  %8 = cast(%5, dtype="bool") /* ty=Tensor[(7, 15, 13), bool] */;
  %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%7, dtype="bool") /* ty=Tensor[(7, 15, 13), bool] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %12 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %13 = less_equal(%10, %11) /* ty=Tensor[(7, 15, 13), bool] */;
  %14 = %12.1;
  (%13, %14)
}

def @func_11741(%var_11735: Tensor[(3, 13, 11), uint32]) -> (Tensor[(3, 13, 11), uint32],) {
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 13, 11), uint32] */, dtype="uint32") /* ty=Tensor[(3, 13, 11), uint32] */;
  %16 = shape_of(%var_11735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%var_11735, dtype="uint32") /* ty=Tensor[(3, 13, 11), uint32] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %19 = logical_xor(%17, %18) /* ty=Tensor[(3, 13, 11), uint32] */;
  (%19,)
}

def @func_9706() -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) {
  %20 = @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %21 = @func_9322() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %22 = %20.0;
  %23 = %21.0;
  (%22, %23)
}

def @func_1729(%var_1642: Tensor[(396), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(16, ?, 5), bool], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(16, ?, 5), bool], Tensor[(16, ?, 5), float32], Tensor[(16, ?, 5), float64], Tensor[(16, ?, 5), bool]) {
  %24 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
  %25 = cast(%24, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %26 = reshape(%25, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %27 = @func_1493(%26) /* ty=(Tensor[(7, 15, 13), uint8],) */;
  %28 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %29 = %28.0;
  %30 = cast(%29, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %31 = rsqrt(%30) /* ty=Tensor[(16, 1, 5), float64] */;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %33 = erf(%32) /* ty=Tensor[(16, 1, 5), float64] */;
  %34 = cast(%29, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %35 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
  %36 = cast(%33, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %38 = floor_divide(%36, %37) /* ty=Tensor[(16, ?, 5), float64] */;
  %39 = cast(%38, dtype="bool") /* ty=Tensor[(16, ?, 5), bool] */;
  %40 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%33, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %43 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %44 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %45 = %43.1;
  %46 = cast(%45, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %47 = @func_1378() /* ty=Tensor[(7, 15, 13), int16] */;
  %48 = cast(%47, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %49 = reshape(%46, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %50 = reshape(%48, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %51 = cast(%var_1642, dtype="float64") /* ty=Tensor[(396), float64] */;
  %52 = reshape(%51, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
  %53 = @func_517(%52) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
  %54 = cast(%31, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %55 = log10(%54) /* ty=Tensor[(16, 1, 5), float64] */;
  %56 = cast(%55, dtype="int64") /* ty=Tensor[(16, 1, 5), int64] */;
  %57 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(%31, dtype="int64") /* ty=Tensor[(16, 1, 5), int64] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %60 = bitwise_and(%58, %59) /* ty=Tensor[(16, ?, 5), int64] */;
  %61 = cast(%38, dtype="bool") /* ty=Tensor[(16, ?, 5), bool] */;
  %62 = shape_of(%60, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%60, dtype="bool") /* ty=Tensor[(16, ?, 5), bool] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %65 = cast(%60, dtype="float32") /* ty=Tensor[(16, ?, 5), float32] */;
  %66 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%55, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %69 = cast(%29, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
  %70 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%31, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %73 = floor_mod(%71, %72) /* ty=Tensor[(16, ?, 5), float32] */;
  %74 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %75 = %74.0;
  %76 = cast(%75, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %77 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%73, dtype="float64") /* ty=Tensor[(16, ?, 5), float64] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %80 = cast(%31, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
  %81 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%55, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %84 = %27.0;
  %85 = not_equal(%41, %42) /* ty=Tensor[(16, ?, 5), bool] */;
  %86 = %44.2;
  %87 = @func_24(%49, %50) /* ty=Tensor[(7, 15, 13), int16] */;
  %88 = %53.2;
  %89 = logical_or(%63, %64) /* ty=Tensor[(16, ?, 5), bool] */;
  %90 = multiply(%67, %68) /* ty=Tensor[(16, ?, 5), float32] */;
  %91 = power(%78, %79) /* ty=Tensor[(16, ?, 5), float64] */;
  %92 = equal(%82, %83) /* ty=Tensor[(16, ?, 5), bool] */;
  (%47, %24, %84, %85, %45, %86, %87, %88, %var_1642, %89, %90, %91, %92)
}

def @func_6500() -> Tensor[(7, 15, 13), int16] {
  @func_6325() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_9339(%var_9326: Tensor[(1, 9, 16), float64], %var_9327: Tensor[(3, 9, 16), float64]) -> (Tensor[(3, 9, 16), float64],) {
  %93 = cast(%var_9326, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
  %94 = cast(%var_9327, dtype="float64") /* ty=Tensor[(3, 9, 16), float64] */;
  %95 = mod(%93, %94) /* ty=Tensor[(3, 9, 16), float64] */;
  %96 = cast(%95, dtype="float64") /* ty=Tensor[(3, 9, 16), float64] */;
  %97 = sinh(%96) /* ty=Tensor[(3, 9, 16), float64] */;
  (%97,)
}

def @func_8280() -> Tensor[(7, 15, 13), float32] {
  %98 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %98.0
}

def @func_6576() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32]) {
  %99 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %100 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %101 = cast(meta[relay.Constant][1] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %102 = reshape(%101, newshape=[4, 8]) /* ty=Tensor[(4, 8), float32] */;
  %103 = @func_3531(%102) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(4, 8), float32]) */;
  %104 = %99.0;
  %105 = %100.0;
  %106 = %103.3;
  (%104, %105, %106, meta[relay.Constant][1] /* ty=Tensor[(32), float32] */)
}

def @func_3028() -> Tensor[(7, 15, 13), int16] {
  %107 = @func_2492() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint16]) */;
  %107.1
}

def @func_9361() -> (Tensor[(7, 15, 13), int16],) {
  %108 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
  (%108,)
}

def @func_1874() -> Tensor[(7, 15, 13), int16] {
  @func_914() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_2312() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %109 = @func_2225() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */;
  %110 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %111 = @func_2072() /* ty=Tensor[(7, 15, 13), float32] */;
  %112 = %109.0;
  %113 = %110.0;
  (%111, %112, %113)
}

def @func_8828(%var_8815: Tensor[(1, 4, 9), float64]) -> (Tensor[(1, 4, 9), float32],) {
  %114 = cast(%var_8815, dtype="float64") /* ty=Tensor[(1, 4, 9), float64] */;
  %115 = asin(%114) /* ty=Tensor[(1, 4, 9), float64] */;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(1, 4, 9), float32] */;
  %117 = atan(%116) /* ty=Tensor[(1, 4, 9), float32] */;
  (%117,)
}

def @func_4538() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %118 = @func_3233() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %119 = @func_3347() /* ty=Tensor[(7, 15, 13), int16] */;
  %120 = %118.2;
  (%119, %120)
}

def @func_6094(%var_6068: Tensor[(5, 12, 8), float32], %var_6085: Tensor[(198, 2), float64]) -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float64], Tensor[(5, 12, 8), int32], Tensor[(5, 12, 8), float64], Tensor[(11, 6, 6), float64], Tensor[(198, 2), float64]) {
  %121 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
  %122 = @func_3470() /* ty=(Tensor[(5, 12, 8), float32],) */;
  %123 = %122.0;
  %124 = cast(%var_6068, dtype="int32") /* ty=Tensor[(5, 12, 8), int32] */;
  %125 = shape_of(%123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%123, dtype="int32") /* ty=Tensor[(5, 12, 8), int32] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %128 = cast(%var_6068, dtype="float64") /* ty=Tensor[(5, 12, 8), float64] */;
  %129 = cast(%var_6085, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %130 = reshape(%129, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
  %131 = @func_517(%130) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
  %132 = @func_5311() /* ty=Tensor[(7, 15, 13), float64] */;
  %133 = %121.1;
  %134 = bitwise_and(%126, %127) /* ty=Tensor[(5, 12, 8), int32] */;
  %135 = asin(%128) /* ty=Tensor[(5, 12, 8), float64] */;
  %136 = %131.0;
  (%132, %133, %134, %135, %136, %var_6085)
}

def @func_1323() -> (Tensor[(7, 15, 13), float32],) {
  %137 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %138 = %137.0;
  %139 = cast(%138, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
  %140 = asin(%139) /* ty=Tensor[(7, 15, 13), float32] */;
  (%140,)
}

def @func_6325() -> Tensor[(7, 15, 13), int16] {
  %141 = @func_3328() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */;
  %141.1
}

def @func_10946() -> (Tensor[(11, 6, 6), float32], Tensor[(8, 9, 5), float32], Tensor[(360), float32]) {
  %142 = @func_9617() /* ty=(Tensor[(11, 6, 6), bool],) */;
  %143 = %142.0;
  %144 = cast(%143, dtype="float32") /* ty=Tensor[(11, 6, 6), float32] */;
  %145 = cast(meta[relay.Constant][2] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %146 = cast(meta[relay.Constant][2] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %147 = reshape(%145, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
  %148 = reshape(%146, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
  %149 = @func_5832(%147, %148) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */;
  %150 = tan(%144) /* ty=Tensor[(11, 6, 6), float32] */;
  %151 = %149.0;
  (%150, %151, meta[relay.Constant][2] /* ty=Tensor[(360), float32] */)
}

def @func_8028() -> (Tensor[(7, 15, 13), float32],) {
  %152 = @func_8001() /* ty=Tensor[(7, 15, 13), float32] */;
  (%152,)
}

def @func_2678() -> Tensor[(11, 6, 6), bool] {
  %153 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %153.1
}

def @func_6256(%var_6233: Tensor[(12, 16, 6), int8]) -> (Tensor[(12, 16, 6), uint16], Tensor[(7, 15, 13), int16]) {
  %154 = cast(meta[relay.Constant][3] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %155 = cast(%var_6233, dtype="int8") /* ty=Tensor[(12, 16, 6), int8] */;
  %156 = maximum(%154, %155) /* ty=Tensor[(12, 16, 6), int8] */;
  %157 = cast(%var_6233, dtype="uint16") /* ty=Tensor[(12, 16, 6), uint16] */;
  %158 = shape_of(%156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%156, dtype="uint16") /* ty=Tensor[(12, 16, 6), uint16] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %161 = bitwise_and(%159, %160) /* ty=Tensor[(12, 16, 6), uint16] */;
  %162 = @func_2994() /* ty=Tensor[(7, 15, 13), int16] */;
  (%161, %162)
}

def @func_5311() -> Tensor[(7, 15, 13), float64] {
  %163 = @func_2636() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %163.0
}

def @func_797(%var_775: Tensor[(396), float64], %var_793: Tensor[(16), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(32), float32]) {
  %164 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %165 = cast(%var_775, dtype="float64") /* ty=Tensor[(396), float64] */;
  %166 = reshape(%165, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
  %167 = @func_517(%166) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
  %168 = cast(%var_775, dtype="float32") /* ty=Tensor[(396), float32] */;
  %169 = cast(%var_775, dtype="float64") /* ty=Tensor[(396), float64] */;
  %170 = reshape(%169, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
  %171 = @func_517(%170) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
  %172 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %173 = cast(%var_793, dtype="float32") /* ty=Tensor[(16), float32] */;
  %174 = cast(meta[relay.Constant][4] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %175 = reshape(%173, newshape=[1, 2, 8]) /* ty=Tensor[(1, 2, 8), float32] */;
  %176 = reshape(%174, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), float32] */;
  %177 = @func_214(%175, %176) /* ty=(Tensor[(2, 2, 8), float32],) */;
  %178 = %164.3;
  %179 = %167.2;
  %180 = tan(%168) /* ty=Tensor[(396), float32] */;
  %181 = %171.1;
  %182 = %172.1;
  %183 = %177.0;
  (%178, %179, %180, %181, %182, %183, %var_793, meta[relay.Constant][4] /* ty=Tensor[(32), float32] */)
}

def @func_6809() -> (Tensor[(7, 15, 13), int16],) {
  %184 = @func_5195() /* ty=Tensor[(7, 15, 13), int16] */;
  (%184,)
}

def @func_12248(%var_12231: Tensor[(8, 2), float32], %var_12232: Tensor[(1, 32), float32]) -> (Tensor[(7, 15, 13), float32], Tensor[(2, 2, 8), float32], Tensor[(8, 2), float32], Tensor[(1, 32), float32], Tensor[(7, 15, 13), int16]) {
  %185 = @func_8657() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(5, 12, 8), float32]) */;
  %186 = cast(%var_12231, dtype="float32") /* ty=Tensor[(8, 2), float32] */;
  %187 = cast(%var_12232, dtype="float32") /* ty=Tensor[(1, 32), float32] */;
  %188 = reshape(%186, newshape=[1, 2, 8]) /* ty=Tensor[(1, 2, 8), float32] */;
  %189 = reshape(%187, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), float32] */;
  %190 = @func_214(%188, %189) /* ty=(Tensor[(2, 2, 8), float32],) */;
  %191 = @func_2225() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */;
  %192 = %185.0;
  %193 = %190.0;
  %194 = %191.0;
  (%192, %193, %var_12231, %var_12232, %194)
}

def @func_8576() -> (Tensor[(7, 15, 13), int16],) {
  %195 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %196 = %195.0;
  (%196,)
}

def @func_6835() -> (Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %197 = @func_4368() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %198 = @func_6809() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %199 = %197.1;
  %200 = @func_2871() /* ty=Tensor[(7, 15, 13), int16] */;
  %201 = %198.0;
  (%199, %200, %201)
}

def @func_6472(%var_6424: bool) -> (Tensor[(3, 14, 3), bool], Tensor[(3, 14, 3), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(168), float32]) {
  %202 = cast(%var_6424, dtype="bool") /* ty=bool */;
  %203 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 14, 3), bool] */, dtype="bool") /* ty=Tensor[(3, 14, 3), bool] */;
  %204 = cast(%var_6424, dtype="bool") /* ty=bool */;
  %205 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 14, 3), bool] */, dtype="bool") /* ty=Tensor[(3, 14, 3), bool] */;
  %206 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %207 = cast(meta[relay.Constant][6] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %208 = reshape(%207, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %209 = @func_5401(%208) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */;
  %210 = logical_or(%202, %203) /* ty=Tensor[(3, 14, 3), bool] */;
  %211 = greater(%204, %205) /* ty=Tensor[(3, 14, 3), bool] */;
  %212 = %206.1;
  %213 = %209.1;
  (%210, %211, %212, %213, meta[relay.Constant][6] /* ty=Tensor[(168), float32] */)
}

def @func_9811() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(168), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %214 = @func_8028() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %215 = @func_4417() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %216 = cast(meta[relay.Constant][7] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %217 = reshape(%216, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %218 = @func_5401(%217) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */;
  %219 = @func_7720() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %220 = %214.0;
  %221 = %215.0;
  %222 = %218.1;
  %223 = @func_3633() /* ty=Tensor[(7, 15, 13), int16] */;
  %224 = %219.0;
  (%220, %221, %222, meta[relay.Constant][7] /* ty=Tensor[(168), float32] */, %223, %224)
}

def @func_10645() -> Tensor[(7, 15, 13), int16] {
  @func_6500() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_7455() -> (Tensor[(7, 15, 13), int16],) {
  %225 = @func_5984() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %226 = %225.0;
  (%226,)
}

def @func_9897() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %227 = @func_6228() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %228 = @func_2225() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */;
  %229 = @func_5296() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) */;
  %230 = %227.0;
  %231 = %228.0;
  %232 = %229.1;
  (%230, %231, %232)
}

def @func_3633() -> Tensor[(7, 15, 13), int16] {
  %233 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %233.0
}

def @func_5012(%var_4966: Tensor[(3, 10, 9), float64], %var_4967: Tensor[(3, 10, 9), float64]) -> (Tensor[(3, 10, 9), float64], Tensor[(7, 15, 13), float32]) {
  %234 = cast(%var_4967, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %235 = shape_of(%var_4966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%var_4966, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %238 = floor_divide(%236, %237) /* ty=Tensor[(3, 10, 9), float64] */;
  %239 = @func_2072() /* ty=Tensor[(7, 15, 13), float32] */;
  (%238, %239)
}

def @func_10480() -> Tensor[(7, 15, 13), float64] {
  %240 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
  %240.1
}

def @func_2036(%var_2031: Tensor[(7, 15, 13), int16]) -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), uint8]) {
  %241 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %242 = %241.0;
  %243 = cast(%242, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %244 = cast(%var_2031, dtype="uint8") /* ty=Tensor[(7, 15, 13), uint8] */;
  %245 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%242, dtype="uint8") /* ty=Tensor[(7, 15, 13), uint8] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %248 = acosh(%243) /* ty=Tensor[(7, 15, 13), float64] */;
  %249 = add(%246, %247) /* ty=Tensor[(7, 15, 13), uint8] */;
  (%248, %249)
}

def @func_8253(%var_8199: Tensor[(9, 3, 6), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(9, 3, 6), bool], Tensor[(9, 3, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) {
  %250 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %251 = cast(%var_8199, dtype="float64") /* ty=Tensor[(9, 3, 6), float64] */;
  %252 = acosh(%251) /* ty=Tensor[(9, 3, 6), float64] */;
  %253 = cast(%var_8199, dtype="bool") /* ty=Tensor[(9, 3, 6), bool] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="bool") /* ty=Tensor[(9, 3, 6), bool] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %257 = cast(%252, dtype="float64") /* ty=Tensor[(9, 3, 6), float64] */;
  %258 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %259 = @func_3961() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %260 = %250.1;
  %261 = less(%255, %256) /* ty=Tensor[(9, 3, 6), bool] */;
  %262 = acos(%257) /* ty=Tensor[(9, 3, 6), float64] */;
  %263 = @func_5195() /* ty=Tensor[(7, 15, 13), int16] */;
  %264 = %258.1;
  %265 = %259.1;
  (%260, %261, %262, %263, %264, %265)
}

def @func_3531(%var_3528: Tensor[(4, 8), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(4, 8), float32]) {
  %266 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %267 = %266.0;
  %268 = cast(%267, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %269 = reshape(%268, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %270 = @func_2036(%269) /* ty=(Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), uint8]) */;
  %271 = cast(meta[relay.Constant][8] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %272 = cast(%var_3528, dtype="float32") /* ty=Tensor[(4, 8), float32] */;
  %273 = reshape(%271, newshape=[1, 2, 8]) /* ty=Tensor[(1, 2, 8), float32] */;
  %274 = reshape(%272, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), float32] */;
  %275 = @func_214(%273, %274) /* ty=(Tensor[(2, 2, 8), float32],) */;
  %276 = %270.0;
  %277 = %275.0;
  (%267, %276, %277, meta[relay.Constant][8] /* ty=Tensor[(16), float32] */, %var_3528)
}

def @func_3607(%var_3599: Tensor[(14, 10), uint64], %var_3600: Tensor[(14, 10), uint64]) -> (Tensor[(14, 10), uint64],) {
  %278 = cast(%var_3600, dtype="uint64") /* ty=Tensor[(14, 10), uint64] */;
  %279 = shape_of(%var_3599, dtype="int32") /* ty=Tensor[(2), int32] */;
  %280 = cast(%var_3599, dtype="uint64") /* ty=Tensor[(14, 10), uint64] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %282 = left_shift(%280, %281) /* ty=Tensor[(14, 10), uint64] */;
  (%282,)
}

def @func_3390() -> (Tensor[(7, 15, 13), bool],) {
  %283 = @func_3328() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */;
  %284 = %283.0;
  (%284,)
}

def @func_5880() -> Tensor[(7, 15, 13), float32] {
  %285 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %285.0
}

def @func_3808() -> (Tensor[(7, 15, 13), int16],) {
  %286 = @func_2994() /* ty=Tensor[(7, 15, 13), int16] */;
  (%286,)
}

def @func_2253() -> (Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) {
  %287 = @func_2047() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %288 = cast(meta[relay.Constant][9] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %289 = reshape(%288, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %290 = @func_744(%289) /* ty=(Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(11, 6, 6), float32]) */;
  %291 = %290.3;
  %292 = cast(meta[relay.Constant][9] /* ty=Tensor[(396), float64] */, dtype="bool") /* ty=Tensor[(396), bool] */;
  %293 = shape_of(%291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%291, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %296 = %287.0;
  %297 = greater(%294, %295) /* ty=Tensor[(11, 6, 6), bool] */;
  (%296, %297)
}

def @func_12750() -> (Tensor[(7, 15, 13), int16],) {
  %298 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %299 = %298.0;
  (%299,)
}

def @func_11960() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %300 = @func_2047() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %301 = @func_2312() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %302 = %300.0;
  %303 = %301.2;
  (%302, %303)
}

def @func_4218() -> (Tensor[(7, 15, 13), float64],) {
  %304 = @func_3764() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %305 = %304.0;
  %306 = cast(%305, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %307 = cosh(%306) /* ty=Tensor[(7, 15, 13), float64] */;
  (%307,)
}

def @func_2492() -> (Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint16]) {
  %308 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
  %309 = @func_2225() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */;
  %310 = %309.1;
  %311 = cast(%310, dtype="int32") /* ty=Tensor[(7, 15, 13), int32] */;
  %312 = shape_of(%308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%308, dtype="int32") /* ty=Tensor[(7, 15, 13), int32] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %315 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %316 = cast(%308, dtype="uint16") /* ty=Tensor[(7, 15, 13), uint16] */;
  %317 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(%310, dtype="uint16") /* ty=Tensor[(7, 15, 13), uint16] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %320 = subtract(%313, %314) /* ty=Tensor[(7, 15, 13), int32] */;
  %321 = %315.0;
  %322 = minimum(%318, %319) /* ty=Tensor[(7, 15, 13), uint16] */;
  (%320, %321, %322)
}

def @func_6395() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %323 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %324 = @func_4570() /* ty=Tensor[(7, 15, 13), int16] */;
  %325 = %323.0;
  (%324, %325)
}

def @func_992() -> (Tensor[(7, 15, 13), int16],) {
  %326 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
  (%326,)
}

def @func_12479(%var_12474: Tensor[(66, 6), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(66, 6), float64], Tensor[(2, 8), float32]) {
  %327 = @func_9473() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %328 = cast(%var_12474, dtype="float64") /* ty=Tensor[(66, 6), float64] */;
  %329 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 8), float32] */, dtype="float32") /* ty=Tensor[(2, 8), float32] */;
  %330 = reshape(%328, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %331 = reshape(%329, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %332 = @func_797(%330, %331) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(32), float32]) */;
  %333 = %327.0;
  %334 = %332.5;
  (%333, %334, %var_12474, meta[relay.Constant][10] /* ty=Tensor[(2, 8), float32] */)
}

def @func_8360() -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), float32], Tensor[(5, 12, 8), float64]) {
  %335 = @func_7939() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %336 = @func_6576() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32]) */;
  %337 = @func_3470() /* ty=(Tensor[(5, 12, 8), float32],) */;
  %338 = %337.0;
  %339 = cast(%338, dtype="float32") /* ty=Tensor[(5, 12, 8), float32] */;
  %340 = cast(%338, dtype="float64") /* ty=Tensor[(5, 12, 8), float64] */;
  %341 = %335.0;
  %342 = %336.0;
  %343 = cosh(%339) /* ty=Tensor[(5, 12, 8), float32] */;
  %344 = tan(%340) /* ty=Tensor[(5, 12, 8), float64] */;
  (%341, %342, %343, %344)
}

def @func_11536(%var_11530: Tensor[(7, 3, 16), float32]) -> (Tensor[(7, 3, 16), float32],) {
  %345 = cast(%var_11530, dtype="float32") /* ty=Tensor[(7, 3, 16), float32] */;
  %346 = asin(%345) /* ty=Tensor[(7, 3, 16), float32] */;
  (%346,)
}

def @func_12579() -> Tensor[(7, 15, 13), int16] {
  @func_4570() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_6519(%var_6508: Tensor[(14, 9, 5), float64], %var_6515: bool) -> (Tensor[(14, 9, 5), float64], Tensor[(3, 14, 3), bool], bool) {
  %347 = cast(%var_6508, dtype="float64") /* ty=Tensor[(14, 9, 5), float64] */;
  %348 = cast(%var_6515, dtype="bool") /* ty=bool */;
  %349 = reshape(%348, newshape=[]) /* ty=bool */;
  %350 = @func_6472(%349) /* ty=(Tensor[(3, 14, 3), bool], Tensor[(3, 14, 3), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(168), float32]) */;
  %351 = erf(%347) /* ty=Tensor[(14, 9, 5), float64] */;
  %352 = %350.1;
  (%351, %352, %var_6515)
}

def @func_2047() -> (Tensor[(7, 15, 13), int16],) {
  %353 = @func_1874() /* ty=Tensor[(7, 15, 13), int16] */;
  (%353,)
}

def @func_9672() -> (Tensor[(7, 15, 13), int16],) {
  %354 = @func_8148() /* ty=Tensor[(7, 15, 13), int16] */;
  (%354,)
}

def @func_8686() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) {
  %355 = @func_5865() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %356 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %357 = %355.0;
  %358 = %356.1;
  (%357, %358)
}

def @func_4570() -> Tensor[(7, 15, 13), int16] {
  %359 = @func_4014() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %359.0
}

def @func_10458(%var_10430: Tensor[(11, 6, 10), int64], %var_10431: Tensor[(11, 6, 10), int64]) -> (Tensor[(11, 6, 10), bool], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), uint8], Tensor[(7, 195), int16]) {
  %360 = cast(%var_10431, dtype="bool") /* ty=Tensor[(11, 6, 10), bool] */;
  %361 = shape_of(%var_10430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%var_10430, dtype="bool") /* ty=Tensor[(11, 6, 10), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = @func_3978() /* ty=(Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) */;
  %365 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 195), int16] */, dtype="int16") /* ty=Tensor[(7, 195), int16] */;
  %366 = reshape(%365, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %367 = @func_1493(%366) /* ty=(Tensor[(7, 15, 13), uint8],) */;
  %368 = greater_equal(%362, %363) /* ty=Tensor[(11, 6, 10), bool] */;
  %369 = %364.0;
  %370 = %367.0;
  (%368, %369, %370, meta[relay.Constant][11] /* ty=Tensor[(7, 195), int16] */)
}

def @func_744(%var_737: Tensor[(396), float64]) -> (Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(11, 6, 6), float32]) {
  %371 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %372 = %371.2;
  %373 = cast(%372, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %374 = cast(%372, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %375 = reshape(%373, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %376 = reshape(%374, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %377 = cast(%var_737, dtype="float64") /* ty=Tensor[(396), float64] */;
  %378 = reshape(%377, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
  %379 = @func_517(%378) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
  %380 = %379.0;
  %381 = cast(%380, dtype="float32") /* ty=Tensor[(11, 6, 6), float32] */;
  %382 = @func_24(%375, %376) /* ty=Tensor[(7, 15, 13), int16] */;
  %383 = rsqrt(%381) /* ty=Tensor[(11, 6, 6), float32] */;
  (%372, %382, %var_737, %383)
}

def @func_5515() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16]) {
  %384 = @func_5296() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) */;
  %385 = %384.0;
  %386 = @func_3015() /* ty=Tensor[(7, 15, 13), int16] */;
  (%385, %386)
}

def @func_8148() -> Tensor[(7, 15, 13), int16] {
  @func_4392() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_517(%var_510: Tensor[(11, 6, 6), float64]) -> (Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) {
  %387 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 6, 6), float64] */, dtype="float64") /* ty=Tensor[(1, 6, 6), float64] */;
  %388 = cast(%var_510, dtype="float64") /* ty=Tensor[(11, 6, 6), float64] */;
  %389 = cast(meta[relay.Constant][13] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %390 = cast(meta[relay.Constant][13] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %391 = reshape(%389, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %392 = reshape(%390, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %393 = floor_divide(%387, %388) /* ty=Tensor[(11, 6, 6), float64] */;
  %394 = @func_24(%391, %392) /* ty=Tensor[(7, 15, 13), int16] */;
  (%393, %394, meta[relay.Constant][13] /* ty=Tensor[(1365), int16] */)
}

def @func_3939() -> Tensor[(7, 15, 13), int16] {
  %395 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %395.1
}

def @func_10901() -> Tensor[(7, 15, 13), int16] {
  @func_10064() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_4638() -> Tensor[(7, 15, 13), float64] {
  %396 = @func_4368() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %397 = %396.1;
  %398 = cast(%397, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %399 = atan(%398) /* ty=Tensor[(7, 15, 13), float64] */;
  %400 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 15, 13), int32] */, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
  %401 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%397, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %404 = divide(%402, %403) /* ty=Tensor[(7, 15, 13), float32] */;
  %405 = cast(%404, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %406 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%399, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%407, %408) /* ty=Tensor[(7, 15, 13), float64] */
}

def @func_5532(%var_5525: Tensor[(5, 16, 12), int64]) -> Tensor[(5, 16, 12), int64] {
  %409 = cast(%var_5525, dtype="int64") /* ty=Tensor[(5, 16, 12), int64] */;
  %410 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(5, 16, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 16, 12), int64] */, dtype="int64") /* ty=Tensor[(5, 16, 12), int64] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%411, %412) /* ty=Tensor[(5, 16, 12), int64] */
}

def @func_5832(%var_5800: Tensor[(8, 9, 5), float32], %var_5801: Tensor[(8, 9, 5), float32]) -> (Tensor[(8, 9, 5), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) {
  %413 = cast(%var_5801, dtype="float32") /* ty=Tensor[(8, 9, 5), float32] */;
  %414 = shape_of(%var_5800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%var_5800, dtype="float32") /* ty=Tensor[(8, 9, 5), float32] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %417 = @func_5567() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */;
  %418 = @func_5567() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */;
  %419 = power(%415, %416) /* ty=Tensor[(8, 9, 5), float32] */;
  %420 = %417.2;
  %421 = %418.3;
  (%419, %420, %421)
}

def @func_12168() -> Tensor[(16, 1, 5), float64] {
  %422 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %422.0
}

def @func_4311(%var_4264: Tensor[(11, 6, 6), bool]) -> (Tensor[(11, 6, 6), bool], Tensor[(11, 6, 6), bool], Tensor[(5, 12, 8), float32]) {
  %423 = @func_2678() /* ty=Tensor[(11, 6, 6), bool] */;
  %424 = cast(%var_4264, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%423, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %428 = greater_equal(%426, %427) /* ty=Tensor[(11, 6, 6), bool] */;
  %429 = cast(%428, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %430 = shape_of(%var_4264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%var_4264, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %433 = cast(%423, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %434 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%428, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %437 = @func_3470() /* ty=(Tensor[(5, 12, 8), float32],) */;
  %438 = less(%431, %432) /* ty=Tensor[(11, 6, 6), bool] */;
  %439 = logical_and(%435, %436) /* ty=Tensor[(11, 6, 6), bool] */;
  %440 = %437.0;
  (%438, %439, %440)
}

def @func_9429(%var_9417: Tensor[(396), float64], %var_9418: Tensor[(16), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(16), float32]) {
  %441 = @func_5984() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %442 = cast(%var_9417, dtype="float64") /* ty=Tensor[(396), float64] */;
  %443 = cast(%var_9418, dtype="float32") /* ty=Tensor[(16), float32] */;
  %444 = reshape(%442, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %445 = reshape(%443, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %446 = @func_797(%444, %445) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(32), float32]) */;
  %447 = %441.0;
  %448 = %446.0;
  (%447, %448, %var_9417, %var_9418)
}

def @func_7429(%var_7419: Tensor[(360), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(8, 9, 5), float32], Tensor[(360), float32]) {
  %449 = cast(%var_7419, dtype="float32") /* ty=Tensor[(360), float32] */;
  %450 = cast(%var_7419, dtype="float32") /* ty=Tensor[(360), float32] */;
  %451 = reshape(%449, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
  %452 = reshape(%450, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
  %453 = @func_5832(%451, %452) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */;
  %454 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
  %455 = %453.0;
  (%454, %455, %var_7419)
}

def @func_9990() -> (Tensor[(7, 15, 13), int16],) {
  %456 = @func_6776() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %457 = %456.0;
  (%457,)
}

def @func_4417() -> (Tensor[(7, 15, 13), float32],) {
  %458 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %459 = %458.0;
  (%459,)
}

def @func_5296() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) {
  %460 = @func_4168() /* ty=(Tensor[(7, 15, 13), int8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(396), float64]) */;
  %461 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %462 = %461.1;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
  %464 = @func_2563() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %465 = %460.3;
  %466 = sinh(%463) /* ty=Tensor[(7, 15, 13), float32] */;
  %467 = %464.0;
  (%465, %466, %467)
}

def @func_8853() -> Tensor[(7, 15, 13), float32] {
  %468 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %468.0
}

def @func_6756(%var_6730: Tensor[(2, 16, 2), uint32]) -> Tensor[(2, 16, 2), uint32] {
  %469 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 16, 2), uint32] */, dtype="uint32") /* ty=Tensor[(2, 16, 2), uint32] */;
  %470 = shape_of(%var_6730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%var_6730, dtype="uint32") /* ty=Tensor[(2, 16, 2), uint32] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%471, %472) /* ty=Tensor[(2, 16, 2), uint32] */
}

def @func_12557(%var_12552: uint8, %var_12553: Tensor[(15, 1, 13), uint8]) -> Tensor[(15, 1, 13), uint8] {
  %473 = cast(%var_12552, dtype="uint8") /* ty=uint8 */;
  %474 = cast(%var_12553, dtype="uint8") /* ty=Tensor[(15, 1, 13), uint8] */;
  subtract(%473, %474) /* ty=Tensor[(15, 1, 13), uint8] */
}

def @func_7791() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %475 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
  %476 = @func_4750() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %477 = @func_2591() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */;
  %478 = %475.0;
  %479 = %476.0;
  %480 = %477.0;
  (%478, %479, %480)
}

def @func_8657() -> (Tensor[(7, 15, 13), float32], Tensor[(5, 12, 8), float32]) {
  %481 = @func_8028() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %482 = @func_3470() /* ty=(Tensor[(5, 12, 8), float32],) */;
  %483 = %481.0;
  %484 = %482.0;
  (%483, %484)
}

def @func_4392() -> Tensor[(7, 15, 13), int16] {
  %485 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %485.0
}

def @func_12807() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 16, 2), uint32], Tensor[(64, 1), float64]) {
  %486 = @func_4368() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %487 = cast(meta[relay.Constant][17] /* ty=Tensor[(64, 1), uint32] */, dtype="uint32") /* ty=Tensor[(64, 1), uint32] */;
  %488 = reshape(%487, newshape=[2, 16, 2]) /* ty=Tensor[(2, 16, 2), uint32] */;
  %489 = cast(meta[relay.Constant][17] /* ty=Tensor[(64, 1), uint32] */, dtype="float64") /* ty=Tensor[(64, 1), float64] */;
  %490 = @func_4475() /* ty=Tensor[(7, 15, 13), int16] */;
  %491 = %486.0;
  %492 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
  %493 = @func_6756(%488) /* ty=Tensor[(2, 16, 2), uint32] */;
  %494 = cosh(%489) /* ty=Tensor[(64, 1), float64] */;
  (%490, %491, %492, %493, %494)
}

def @func_9829() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) {
  %495 = @func_4538() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %496 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %497 = %495.0;
  %498 = %496.1;
  (%497, %498)
}

def @func_3961() -> (Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) {
  %499 = @func_3808() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %500 = @func_2844() /* ty=(Tensor[(11, 6, 6), bool],) */;
  %501 = %499.0;
  %502 = %500.0;
  (%501, %502)
}

def @func_885() -> Tensor[(7, 15, 13), int16] {
  %503 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %503.3
}

def @func_5195() -> Tensor[(7, 15, 13), int16] {
  %504 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %504.0
}

def @func_2225() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) {
  %505 = @func_2047() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %506 = cast(meta[relay.Constant][18] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %507 = reshape(%506, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %508 = @func_823(%507) /* ty=(Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(396), float64]) */;
  %509 = cast(meta[relay.Constant][18] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %510 = reshape(%509, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %511 = @func_744(%510) /* ty=(Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(11, 6, 6), float32]) */;
  %512 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
  %513 = %505.0;
  %514 = %508.1;
  %515 = %511.0;
  (%512, %513, %514, meta[relay.Constant][18] /* ty=Tensor[(396), float64] */, %515)
}

def @func_7939() -> (Tensor[(7, 15, 13), bool],) {
  %516 = @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %517 = %516.0;
  (%517,)
}

def @func_24(%var_12: Tensor[(7, 15, 13), int16], %var_13: Tensor[(7, 15, 13), int16]) -> Tensor[(7, 15, 13), int16] {
  %518 = cast(%var_13, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %519 = shape_of(%var_12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%var_12, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%520, %521) /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_823(%var_816: Tensor[(396), float64]) -> (Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(396), float64]) {
  %522 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %523 = cast(%var_816, dtype="float64") /* ty=Tensor[(396), float64] */;
  %524 = reshape(%523, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
  %525 = @func_517(%524) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
  %526 = %522.2;
  %527 = %525.2;
  (%526, %527, %var_816)
}

def @func_5166() -> (Tensor[(7, 15, 13), int16],) {
  %528 = @func_1378() /* ty=Tensor[(7, 15, 13), int16] */;
  (%528,)
}

def @func_8937() -> (Tensor[(16), float32], Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16]) {
  %529 = @func_5670() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(16), float32]) */;
  %530 = @func_4368() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %531 = @func_3808() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %532 = %529.6;
  %533 = %530.1;
  %534 = %531.0;
  (%532, %533, %534)
}

def @func_9156(%var_9138: Tensor[(750), float32]) -> (Tensor[(7, 15, 13), float64], Tensor[(5, 15, 10), float32], Tensor[(750), float32], Tensor[(7, 15, 13), float64]) {
  %535 = cast(%var_9138, dtype="float32") /* ty=Tensor[(750), float32] */;
  %536 = reshape(%535, newshape=[5, 15, 10]) /* ty=Tensor[(5, 15, 10), float32] */;
  %537 = @func_5311() /* ty=Tensor[(7, 15, 13), float64] */;
  %538 = @func_5450(%536) /* ty=Tensor[(5, 15, 10), float32] */;
  %539 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
  (%537, %538, %var_9138, %539)
}

def @func_11860(%var_11841: Tensor[(32), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(16), float32], Tensor[(32), float32], Tensor[(7, 15, 13), int16], Tensor[(9, 15, 9), int16]) {
  %540 = cast(%var_11841, dtype="float32") /* ty=Tensor[(32), float32] */;
  %541 = reshape(%540, newshape=[4, 8]) /* ty=Tensor[(4, 8), float32] */;
  %542 = @func_3531(%541) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(4, 8), float32]) */;
  %543 = @func_8796() /* ty=(Tensor[(11, 6, 6), float32], Tensor[(7, 15, 13), int16]) */;
  %544 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 15, 9), float64] */;
  %545 = erf(%544) /* ty=Tensor[(9, 15, 9), float64] */;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(9, 15, 9), float32] */;
  %547 = sigmoid(%546) /* ty=Tensor[(9, 15, 9), float32] */;
  %548 = cast(%545, dtype="int16") /* ty=Tensor[(9, 15, 9), int16] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%547, dtype="int16") /* ty=Tensor[(9, 15, 9), int16] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %552 = @func_8398() /* ty=Tensor[(7, 15, 13), int16] */;
  %553 = %542.3;
  %554 = %543.1;
  %555 = bitwise_and(%550, %551) /* ty=Tensor[(9, 15, 9), int16] */;
  (%552, %553, %var_11841, %554, %555)
}

def @func_7374() -> Tensor[(7, 15, 13), int16] {
  @func_3633() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_7660() -> (Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) {
  %556 = @func_2225() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */;
  %557 = @func_7374() /* ty=Tensor[(7, 15, 13), int16] */;
  %558 = %556.2;
  (%557, %558)
}

def @func_10145() -> (Tensor[(7, 15, 13), int16],) {
  %559 = @func_5865() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %560 = %559.0;
  (%560,)
}

def @func_2908() -> (Tensor[(7, 15, 13), int16],) {
  %561 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %562 = %561.1;
  (%562,)
}

def @func_10048() -> (Tensor[(7, 15, 13), int16],) {
  %563 = @func_6500() /* ty=Tensor[(7, 15, 13), int16] */;
  (%563,)
}

def @func_6606() -> Tensor[(11, 6, 6), bool] {
  @func_2678() /* ty=Tensor[(11, 6, 6), bool] */
}

def @func_12286() -> Tensor[(7, 15, 13), int16] {
  @func_8148() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_12317() -> (Tensor[(7, 15, 13), int16],) {
  %564 = @func_5195() /* ty=Tensor[(7, 15, 13), int16] */;
  (%564,)
}

def @func_966() -> (Tensor[(7, 15, 13), int16],) {
  %565 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
  (%565,)
}

def @func_8796() -> (Tensor[(11, 6, 6), float32], Tensor[(7, 15, 13), int16]) {
  %566 = @func_8726() /* ty=(Tensor[(11, 6, 6), uint32], Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16]) */;
  %567 = %566.0;
  %568 = cast(%567, dtype="float32") /* ty=Tensor[(11, 6, 6), float32] */;
  %569 = exp(%568) /* ty=Tensor[(11, 6, 6), float32] */;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(11, 6, 6), float64] */;
  %571 = reshape(%570, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %572 = @func_1729(%571) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(16, ?, 5), bool], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(16, ?, 5), bool], Tensor[(16, ?, 5), float32], Tensor[(16, ?, 5), float64], Tensor[(16, ?, 5), bool]) */;
  %573 = %572.6;
  (%569, %573)
}

def @func_7610(%var_7541: Tensor[(1, 2, 10), int16], %var_7542: Tensor[(16, 2, 10), int16], %var_7583: Tensor[(16, 2, 10), int16]) -> (Tensor[(7, 15, 13), int16], Tensor[(16, 2, 10), uint16], Tensor[(7, 15, 13), float32]) {
  %574 = @func_6896() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %575 = cast(%var_7541, dtype="int16") /* ty=Tensor[(1, 2, 10), int16] */;
  %576 = cast(%var_7542, dtype="int16") /* ty=Tensor[(16, 2, 10), int16] */;
  %577 = bitwise_or(%575, %576) /* ty=Tensor[(16, 2, 10), int16] */;
  %578 = cast(%var_7583, dtype="uint16") /* ty=Tensor[(16, 2, 10), uint16] */;
  %579 = shape_of(%577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%577, dtype="uint16") /* ty=Tensor[(16, 2, 10), uint16] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %582 = @func_2591() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */;
  %583 = %574.1;
  %584 = multiply(%580, %581) /* ty=Tensor[(16, 2, 10), uint16] */;
  %585 = %582.0;
  (%583, %584, %585)
}

def @func_2844() -> (Tensor[(11, 6, 6), bool],) {
  %586 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %587 = %586.1;
  (%587,)
}

def @func_9473() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %588 = @func_4014() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %589 = %588.0;
  %590 = @func_6500() /* ty=Tensor[(7, 15, 13), int16] */;
  (%589, %590)
}

def @func_4813() -> Tensor[(7, 15, 13), int16] {
  @func_3028() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_9746() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %591 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %592 = @func_6325() /* ty=Tensor[(7, 15, 13), int16] */;
  %593 = %591.0;
  (%592, %593)
}

def @func_11293() -> Tensor[(7, 15, 13), int16] {
  %594 = @func_7455() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %594.0
}

def @func_9227(%var_9219: Tensor[(11, 6, 6), bool]) -> Tensor[(11, 6, 6), uint16] {
  %595 = @func_2678() /* ty=Tensor[(11, 6, 6), bool] */;
  %596 = cast(%var_9219, dtype="uint16") /* ty=Tensor[(11, 6, 6), uint16] */;
  %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%595, dtype="uint16") /* ty=Tensor[(11, 6, 6), uint16] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_xor(%598, %599) /* ty=Tensor[(11, 6, 6), uint16] */
}

def @func_6972(%var_6903: Tensor[(6, 8, 14), uint8], %var_6904: Tensor[(6, 8, 14), uint8], %var_6947: Tensor[(168), float32]) -> (Tensor[(6, 8, 14), uint8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), int16]) {
  %600 = cast(%var_6904, dtype="uint8") /* ty=Tensor[(6, 8, 14), uint8] */;
  %601 = shape_of(%var_6903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(%var_6903, dtype="uint8") /* ty=Tensor[(6, 8, 14), uint8] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %604 = cast(%var_6947, dtype="float32") /* ty=Tensor[(168), float32] */;
  %605 = reshape(%604, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), float32] */;
  %606 = @func_4606(%605) /* ty=(Tensor[(12, 7, 2), float32], Tensor[(11, 6, 6), bool]) */;
  %607 = @func_4949() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %608 = bitwise_and(%602, %603) /* ty=Tensor[(6, 8, 14), uint8] */;
  %609 = @func_2994() /* ty=Tensor[(7, 15, 13), int16] */;
  %610 = @func_1874() /* ty=Tensor[(7, 15, 13), int16] */;
  %611 = %606.1;
  %612 = %607.0;
  (%608, %609, %610, %611, %var_6947, %612)
}

def @func_9322() -> (Tensor[(7, 15, 13), int16],) {
  %613 = @func_4392() /* ty=Tensor[(7, 15, 13), int16] */;
  (%613,)
}

def @func_10623() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), float64]) {
  %614 = @func_6896() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %615 = @func_3961() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %616 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
  %617 = %614.1;
  %618 = %615.1;
  %619 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
  (%616, %617, %618, %619)
}

def @func_7193() -> (Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %620 = @func_3233() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %621 = @func_6621() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %622 = @func_2678() /* ty=Tensor[(11, 6, 6), bool] */;
  %623 = %620.3;
  %624 = %621.0;
  (%622, %623, %624)
}

def @func_8473() -> Tensor[(7, 15, 13), int16] {
  %625 = @func_3233() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %625.0
}

def @func_3470() -> (Tensor[(5, 12, 8), float32],) {
  %626 = @func_3354() /* ty=(Tensor[(5, 12, 8), bool],) */;
  %627 = %626.0;
  %628 = cast(%627, dtype="float32") /* ty=Tensor[(5, 12, 8), float32] */;
  %629 = sin(%628) /* ty=Tensor[(5, 12, 8), float32] */;
  (%629,)
}

def @func_8136(%var_8095: Tensor[(20), int16], %var_8114: Tensor[(2, 160), int16]) -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(20), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 160), uint64]) {
  %630 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %631 = cast(%var_8095, dtype="int16") /* ty=Tensor[(20), int16] */;
  %632 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 160), int16] */, dtype="int16") /* ty=Tensor[(2, 160), int16] */;
  %633 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 160), int16] */, dtype="int16") /* ty=Tensor[(2, 160), int16] */;
  %634 = reshape(%631, newshape=[1, 2, 10]) /* ty=Tensor[(1, 2, 10), int16] */;
  %635 = reshape(%632, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), int16] */;
  %636 = reshape(%633, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), int16] */;
  %637 = @func_7610(%634, %635, %636) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(16, 2, 10), uint16], Tensor[(7, 15, 13), float32]) */;
  %638 = @func_3328() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */;
  %639 = cast(%var_8114, dtype="uint64") /* ty=Tensor[(2, 160), uint64] */;
  %640 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(2, 160), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %641 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 160), int16] */, dtype="uint64") /* ty=Tensor[(2, 160), uint64] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %643 = %630.1;
  %644 = @func_5880() /* ty=Tensor[(7, 15, 13), float32] */;
  %645 = %637.2;
  %646 = @func_4813() /* ty=Tensor[(7, 15, 13), int16] */;
  %647 = %638.1;
  %648 = subtract(%641, %642) /* ty=Tensor[(2, 160), uint64] */;
  (%643, %644, %645, %var_8095, %646, %647, %648)
}

def @func_4168() -> (Tensor[(7, 15, 13), int8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(396), float64]) {
  %649 = @func_3684() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8]) */;
  %650 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %651 = @func_2563() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %652 = @func_2312() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %653 = @func_2839() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %654 = cast(meta[relay.Constant][21] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %655 = reshape(%654, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
  %656 = @func_4112(%655) /* ty=(Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(11, 6, 6), float64], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */;
  %657 = %649.2;
  %658 = %650.3;
  %659 = %651.0;
  %660 = %652.0;
  %661 = %653.0;
  %662 = %656.2;
  (%657, %658, %659, %660, %661, %662, meta[relay.Constant][21] /* ty=Tensor[(396), float64] */)
}

def @func_12002() -> (Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), bool]) {
  %663 = @func_2844() /* ty=(Tensor[(11, 6, 6), bool],) */;
  %664 = @func_8686() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %665 = %663.0;
  %666 = %664.1;
  (%665, %666)
}

def @func_12053() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %667 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
  %668 = @func_4475() /* ty=Tensor[(7, 15, 13), int16] */;
  (%667, %668)
}

def @func_10828() -> Tensor[(7, 15, 13), float64] {
  %669 = @func_2636() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %669.0
}

def @func_12522() -> Tensor[(7, 15, 13), int16] {
  @func_2994() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_1493(%var_1487: Tensor[(7, 15, 13), int16]) -> (Tensor[(7, 15, 13), uint8],) {
  %670 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %671 = %670.0;
  %672 = cast(%var_1487, dtype="uint8") /* ty=Tensor[(7, 15, 13), uint8] */;
  %673 = shape_of(%671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%671, dtype="uint8") /* ty=Tensor[(7, 15, 13), uint8] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %676 = right_shift(%674, %675) /* ty=Tensor[(7, 15, 13), uint8] */;
  (%676,)
}

def @func_914() -> Tensor[(7, 15, 13), int16] {
  %677 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %677.1
}

def @func_12879(%var_12861: Tensor[(36), float64]) -> (Tensor[(7, 15, 13), float32], Tensor[(1, 4, 9), float32], Tensor[(36), float64]) {
  %678 = @func_10512() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %679 = cast(%var_12861, dtype="float64") /* ty=Tensor[(36), float64] */;
  %680 = reshape(%679, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), float64] */;
  %681 = @func_8828(%680) /* ty=(Tensor[(1, 4, 9), float32],) */;
  %682 = %678.0;
  %683 = %681.0;
  (%682, %683, %var_12861)
}

def @func_2122(%var_2110: Tensor[(7, 15, 13), int16]) -> (Tensor[(7, 15, 13), bool],) {
  %684 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
  %685 = cast(%var_2110, dtype="bool") /* ty=Tensor[(7, 15, 13), bool] */;
  %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%684, dtype="bool") /* ty=Tensor[(7, 15, 13), bool] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %689 = logical_or(%687, %688) /* ty=Tensor[(7, 15, 13), bool] */;
  (%689,)
}

def @func_4475() -> Tensor[(7, 15, 13), int16] {
  %690 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %690.0
}

def @func_10732() -> Tensor[(7, 15, 13), bool] {
  %691 = @func_4168() /* ty=(Tensor[(7, 15, 13), int8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(396), float64]) */;
  %691.2
}

def @func_5567() -> (Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) {
  %692 = @func_2187() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %693 = cast(meta[relay.Constant][22] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %694 = reshape(%693, newshape=[4, 8]) /* ty=Tensor[(4, 8), float32] */;
  %695 = @func_3531(%694) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(4, 8), float32]) */;
  %696 = @func_2844() /* ty=(Tensor[(11, 6, 6), bool],) */;
  %697 = %692.0;
  %698 = %695.3;
  %699 = %696.0;
  (%697, %698, meta[relay.Constant][22] /* ty=Tensor[(32), float32] */, %699)
}

def @func_12728() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) {
  %700 = @func_7356() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %701 = @func_1874() /* ty=Tensor[(7, 15, 13), int16] */;
  %702 = %700.1;
  (%701, %702)
}

def @main() -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16], Tensor[(20), int16], Tensor[(7, 15, 13), int16], Tensor[(4, 80), float64]) {
  %703 = @func_2636() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %704 = cast(meta[relay.Constant][23] /* ty=Tensor[(20), int16] */, dtype="int16") /* ty=Tensor[(20), int16] */;
  %705 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 80), int16] */, dtype="int16") /* ty=Tensor[(4, 80), int16] */;
  %706 = reshape(%704, newshape=[20]) /* ty=Tensor[(20), int16] */;
  %707 = reshape(%705, newshape=[2, 160]) /* ty=Tensor[(2, 160), int16] */;
  %708 = @func_8136(%706, %707) /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(20), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 160), uint64]) */;
  %709 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 80), int16] */, dtype="float64") /* ty=Tensor[(4, 80), float64] */;
  %710 = %703.0;
  %711 = %708.5;
  %712 = @func_8473() /* ty=Tensor[(7, 15, 13), int16] */;
  %713 = acos(%709) /* ty=Tensor[(4, 80), float64] */;
  (%710, %711, meta[relay.Constant][23] /* ty=Tensor[(20), int16] */, %712, %713)
}

def @func_10060() -> (Tensor[(7, 15, 13), int16],) {
  %714 = @func_9000() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %715 = %714.0;
  (%715,)
}

def @func_9499() -> (Tensor[(7, 15, 13), int16],) {
  %716 = @func_7374() /* ty=Tensor[(7, 15, 13), int16] */;
  (%716,)
}

def @func_6228() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %717 = @func_4014() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %718 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
  %719 = cast(%718, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
  %720 = %717.0;
  %721 = log2(%719) /* ty=Tensor[(7, 15, 13), float32] */;
  (%720, %721)
}

def @func_214(%var_202: Tensor[(1, 2, 8), float32], %var_203: Tensor[(2, 2, 8), float32]) -> (Tensor[(2, 2, 8), float32],) {
  %722 = cast(%var_202, dtype="float32") /* ty=Tensor[(1, 2, 8), float32] */;
  %723 = cast(%var_203, dtype="float32") /* ty=Tensor[(2, 2, 8), float32] */;
  %724 = subtract(%722, %723) /* ty=Tensor[(2, 2, 8), float32] */;
  (%724,)
}

def @func_9182() -> (Tensor[(7, 15, 13), int16],) {
  %725 = @func_7791() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %726 = %725.0;
  (%726,)
}

def @func_11187() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) {
  %727 = @func_10512() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %728 = %727.0;
  %729 = @func_10254() /* ty=Tensor[(7, 15, 13), bool] */;
  (%728, %729)
}

def @func_2871() -> Tensor[(7, 15, 13), int16] {
  %730 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %730.0
}

def @func_2591() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) {
  %731 = @func_2187() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %732 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %733 = %732.0;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
  %735 = %731.0;
  %736 = cos(%734) /* ty=Tensor[(7, 15, 13), float32] */;
  (%735, %736)
}

def @func_3764() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %737 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %738 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %739 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %740 = %737.0;
  %741 = %738.0;
  %742 = %739.0;
  %743 = @func_3028() /* ty=Tensor[(7, 15, 13), int16] */;
  %744 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
  %745 = @func_3028() /* ty=Tensor[(7, 15, 13), int16] */;
  (%740, %741, %742, %743, %744, %745)
}

def @func_3233() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %746 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %747 = @func_2187() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %748 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %749 = @func_3015() /* ty=Tensor[(7, 15, 13), int16] */;
  %750 = %746.0;
  %751 = %747.0;
  %752 = %748.0;
  %753 = @func_1378() /* ty=Tensor[(7, 15, 13), int16] */;
  (%749, %750, %751, %752, %753)
}

def @func_12496() -> (Tensor[(7, 15, 13), int16],) {
  %754 = @func_7455() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %755 = %754.0;
  (%755,)
}

def @func_1378() -> Tensor[(7, 15, 13), int16] {
  %756 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %756.0
}

def @func_2839() -> (Tensor[(7, 15, 13), bool],) {
  %757 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %758 = %757.1;
  (%758,)
}

def @func_10385() -> (Tensor[(7, 15, 13), float32],) {
  %759 = @func_8280() /* ty=Tensor[(7, 15, 13), float32] */;
  (%759,)
}

def @func_3139(%var_3133: Tensor[(6, 1, 14), uint16], %var_3134: Tensor[(6, 1, 14), uint16]) -> Tensor[(6, ?, 14), bool] {
  %760 = cast(%var_3134, dtype="bool") /* ty=Tensor[(6, 1, 14), bool] */;
  %761 = shape_of(%var_3133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%var_3133, dtype="bool") /* ty=Tensor[(6, 1, 14), bool] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%762, %763) /* ty=Tensor[(6, ?, 14), bool] */
}

def @func_7356() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) {
  %764 = @func_6835() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %765 = @func_3347() /* ty=Tensor[(7, 15, 13), int16] */;
  %766 = %764.0;
  (%765, %766)
}

def @func_3291() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %767 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %768 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
  %769 = %767.0;
  (%768, %769)
}

def @func_5984() -> (Tensor[(7, 15, 13), int16],) {
  %770 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
  (%770,)
}

def @func_6193() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %771 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %772 = %771.0;
  %773 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
  (%772, %773)
}

def @func_5670() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(16), float32]) {
  %774 = @func_2312() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %775 = @func_4168() /* ty=(Tensor[(7, 15, 13), int8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(396), float64]) */;
  %776 = @func_3978() /* ty=(Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) */;
  %777 = cast(meta[relay.Constant][25] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %778 = cast(meta[relay.Constant][26] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %779 = reshape(%777, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %780 = reshape(%778, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %781 = @func_797(%779, %780) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(32), float32]) */;
  %782 = @func_2994() /* ty=Tensor[(7, 15, 13), int16] */;
  %783 = %774.1;
  %784 = %775.2;
  %785 = %776.1;
  %786 = %781.3;
  (%782, %783, %784, %785, %786, meta[relay.Constant][25] /* ty=Tensor[(396), float64] */, meta[relay.Constant][26] /* ty=Tensor[(16), float32] */)
}

def @func_7720() -> (Tensor[(7, 15, 13), int16],) {
  %787 = @func_4538() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %788 = %787.0;
  (%788,)
}

def @func_2441() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) {
  %789 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
  %790 = cast(%789, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %791 = reshape(%790, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %792 = @func_2122(%791) /* ty=(Tensor[(7, 15, 13), bool],) */;
  %793 = %792.0;
  (%789, %793)
}

def @func_5181(%var_5179: Tensor[(140), uint64]) -> (Tensor[(7, 15, 13), bool], Tensor[(14, 10), uint64], Tensor[(140), uint64]) {
  %794 = @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %795 = cast(%var_5179, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %796 = cast(%var_5179, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %797 = reshape(%795, newshape=[14, 10]) /* ty=Tensor[(14, 10), uint64] */;
  %798 = reshape(%796, newshape=[14, 10]) /* ty=Tensor[(14, 10), uint64] */;
  %799 = @func_3607(%797, %798) /* ty=(Tensor[(14, 10), uint64],) */;
  %800 = %794.0;
  %801 = %799.0;
  (%800, %801, %var_5179)
}

def @func_5401(%var_5390: Tensor[(168), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) {
  %802 = @func_3978() /* ty=(Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) */;
  %803 = @func_4392() /* ty=Tensor[(7, 15, 13), int16] */;
  %804 = cast(%803, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %805 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
  %806 = cast(%805, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %807 = reshape(%804, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %808 = reshape(%806, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %809 = @func_3684() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8]) */;
  %810 = cast(%var_5390, dtype="float32") /* ty=Tensor[(168), float32] */;
  %811 = reshape(%810, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), float32] */;
  %812 = @func_4606(%811) /* ty=(Tensor[(12, 7, 2), float32], Tensor[(11, 6, 6), bool]) */;
  %813 = @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %814 = @func_2047() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %815 = %802.0;
  %816 = @func_24(%807, %808) /* ty=Tensor[(7, 15, 13), int16] */;
  %817 = %809.2;
  %818 = %812.1;
  %819 = %813.0;
  %820 = %814.0;
  (%803, %805, %815, %816, %817, %818, %var_5390, %819, %820)
}

def @func_8001() -> Tensor[(7, 15, 13), float32] {
  %821 = @func_6576() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32]) */;
  %821.1
}

def @func_4112(%var_4098: Tensor[(11, 6, 6), float64]) -> (Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(11, 6, 6), float64], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) {
  %822 = @func_2844() /* ty=(Tensor[(11, 6, 6), bool],) */;
  %823 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %824 = @func_3233() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %825 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %826 = %825.1;
  %827 = cast(%826, dtype="float64") /* ty=Tensor[(11, 6, 6), float64] */;
  %828 = acosh(%827) /* ty=Tensor[(11, 6, 6), float64] */;
  %829 = cast(%828, dtype="float64") /* ty=Tensor[(11, 6, 6), float64] */;
  %830 = cast(%828, dtype="float32") /* ty=Tensor[(11, 6, 6), float32] */;
  %831 = sigmoid(%830) /* ty=Tensor[(11, 6, 6), float32] */;
  %832 = cast(%831, dtype="float64") /* ty=Tensor[(11, 6, 6), float64] */;
  %833 = erf(%832) /* ty=Tensor[(11, 6, 6), float64] */;
  %834 = cast(%var_4098, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %835 = shape_of(%833, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(%833, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %838 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %839 = %822.0;
  %840 = %823.0;
  %841 = %824.0;
  %842 = @func_2072() /* ty=Tensor[(7, 15, 13), float32] */;
  %843 = sinh(%829) /* ty=Tensor[(11, 6, 6), float64] */;
  %844 = less_equal(%836, %837) /* ty=Tensor[(11, 6, 6), bool] */;
  %845 = @func_2072() /* ty=Tensor[(7, 15, 13), float32] */;
  %846 = %838.0;
  (%839, %840, %841, %842, %843, %844, %845, %846)
}

def @func_9617() -> (Tensor[(11, 6, 6), bool],) {
  %847 = @func_3961() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %848 = %847.1;
  (%848,)
}

def @func_8726() -> (Tensor[(11, 6, 6), uint32], Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16]) {
  %849 = @func_2678() /* ty=Tensor[(11, 6, 6), bool] */;
  %850 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 6, 6), bool] */, dtype="uint32") /* ty=Tensor[(11, 6, 6), uint32] */;
  %851 = shape_of(%849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(%849, dtype="uint32") /* ty=Tensor[(11, 6, 6), uint32] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %854 = @func_7018() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %855 = logical_xor(%852, %853) /* ty=Tensor[(11, 6, 6), uint32] */;
  %856 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
  %857 = %854.0;
  (%855, %856, %857)
}

def @func_5114() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) {
  %858 = @func_3764() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %859 = @func_4218() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %860 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %861 = %858.0;
  %862 = %859.0;
  %863 = %860.0;
  (%861, %862, %863)
}

def @func_2187() -> (Tensor[(7, 15, 13), float32],) {
  %864 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %865 = %864.0;
  (%865,)
}

def @func_8738() -> Tensor[(7, 15, 13), int16] {
  @func_2871() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_5865() -> (Tensor[(7, 15, 13), int16],) {
  %866 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %867 = %866.1;
  (%867,)
}

def @func_11473() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64]) {
  %868 = @func_8360() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), float32], Tensor[(5, 12, 8), float64]) */;
  %869 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
  %870 = %868.1;
  %871 = %869.1;
  (%870, %871)
}

def @func_6621() -> (Tensor[(7, 15, 13), int16],) {
  %872 = @func_4392() /* ty=Tensor[(7, 15, 13), int16] */;
  (%872,)
}

def @func_2722(%var_2711: Tensor[(66, 6), float64]) -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(66, 6), float64], Tensor[(7, 15, 13), float32]) {
  %873 = @func_2636() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %874 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %875 = cast(%var_2711, dtype="float64") /* ty=Tensor[(66, 6), float64] */;
  %876 = reshape(%875, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %877 = @func_1729(%876) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(16, ?, 5), bool], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(16, ?, 5), bool], Tensor[(16, ?, 5), float32], Tensor[(16, ?, 5), float64], Tensor[(16, ?, 5), bool]) */;
  %878 = %873.0;
  %879 = %874.0;
  %880 = %877.2;
  %881 = @func_2072() /* ty=Tensor[(7, 15, 13), float32] */;
  (%878, %879, %880, %var_2711, %881)
}

def @func_10676() -> (Tensor[(5, 12, 8), float32],) {
  %882 = @func_3354() /* ty=(Tensor[(5, 12, 8), bool],) */;
  %883 = %882.0;
  %884 = cast(%883, dtype="float32") /* ty=Tensor[(5, 12, 8), float32] */;
  %885 = sqrt(%884) /* ty=Tensor[(5, 12, 8), float32] */;
  (%885,)
}

def @func_4368() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) {
  %886 = @func_2492() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint16]) */;
  %887 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
  %888 = %886.0;
  (%887, %888)
}

def @func_4949() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %889 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %890 = @func_3633() /* ty=Tensor[(7, 15, 13), int16] */;
  %891 = %889.0;
  (%890, %891)
}

def @func_2994() -> Tensor[(7, 15, 13), int16] {
  %892 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %892.0
}

def @func_8496(%var_8483: Tensor[(16, 7, 5), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(1152), int8], Tensor[(16, 7, 5), bool]) {
  %893 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), int8] */, dtype="int8") /* ty=Tensor[(1152), int8] */;
  %894 = reshape(%893, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), int8] */;
  %895 = @func_6256(%894) /* ty=(Tensor[(12, 16, 6), uint16], Tensor[(7, 15, 13), int16]) */;
  %896 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
  %897 = %896.2;
  %898 = cast(%897, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
  %899 = cast(%var_8483, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
  %900 = %895.1;
  %901 = equal(%898, %899) /* ty=Tensor[(16, 7, 5), bool] */;
  (%900, meta[relay.Constant][28] /* ty=Tensor[(1152), int8] */, %901)
}

def @func_4644() -> Tensor[(7, 15, 13), int16] {
  %902 = @func_3978() /* ty=(Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) */;
  %902.1
}

def @func_8526(%var_8512: Tensor[(6, 6, 15), float64]) -> (Tensor[(6, 6, 15), float64],) {
  %903 = cast(%var_8512, dtype="float64") /* ty=Tensor[(6, 6, 15), float64] */;
  %904 = rsqrt(%903) /* ty=Tensor[(6, 6, 15), float64] */;
  (%904,)
}

def @func_10853() -> Tensor[(7, 15, 13), int16] {
  @func_3633() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_3347() -> Tensor[(7, 15, 13), int16] {
  @func_2871() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_10813() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %905 = @func_4014() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %906 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %907 = %905.0;
  %908 = %906.0;
  (%907, %908)
}

def @func_5450(%var_5447: Tensor[(5, 15, 10), float32]) -> Tensor[(5, 15, 10), float32] {
  %909 = cast(%var_5447, dtype="float32") /* ty=Tensor[(5, 15, 10), float32] */;
  cosh(%909) /* ty=Tensor[(5, 15, 10), float32] */
}

def @func_11122() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %910 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %911 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %912 = %910.0;
  %913 = %911.0;
  (%912, %913)
}

def @func_3354() -> (Tensor[(5, 12, 8), bool],) {
  %914 = cast(meta[relay.Constant][29] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %915 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 12, 8), int16] */, dtype="bool") /* ty=Tensor[(5, 12, 8), bool] */;
  %916 = greater_equal(%914, %915) /* ty=Tensor[(5, 12, 8), bool] */;
  (%916,)
}

def @func_7878() -> (Tensor[(7, 15, 13), int16],) {
  %917 = @func_4570() /* ty=Tensor[(7, 15, 13), int16] */;
  (%917,)
}

def @func_11425() -> (Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) {
  %918 = @func_7301() /* ty=(Tensor[(5, 12, 8), bool],) */;
  %919 = @func_9746() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %920 = %918.0;
  %921 = %919.0;
  (%920, %921)
}

def @func_1248() -> (Tensor[(7, 15, 13), int16],) {
  %922 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %923 = %922.0;
  (%923,)
}

def @func_4591() -> (Tensor[(13, 3, 8), bool],) {
  %924 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 3, 8), float32] */;
  %925 = asin(%924) /* ty=Tensor[(13, 3, 8), float32] */;
  %926 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 3, 8), float32] */, dtype="bool") /* ty=Tensor[(13, 3, 8), bool] */;
  %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%925, dtype="bool") /* ty=Tensor[(13, 3, 8), bool] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %930 = less_equal(%928, %929) /* ty=Tensor[(13, 3, 8), bool] */;
  (%930,)
}

def @func_7018() -> (Tensor[(7, 15, 13), int16],) {
  %931 = @func_2871() /* ty=Tensor[(7, 15, 13), int16] */;
  (%931,)
}

def @func_9107() -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float64]) {
  %932 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
  %933 = @func_8280() /* ty=Tensor[(7, 15, 13), float32] */;
  %934 = @func_5311() /* ty=Tensor[(7, 15, 13), float64] */;
  (%932, %933, %934)
}

def @func_10064() -> Tensor[(7, 15, 13), int16] {
  %935 = @func_6835() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %935.2
}

def @func_11923() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %936 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %937 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %938 = %936.0;
  %939 = %937.0;
  (%938, %939)
}

def @func_7301() -> (Tensor[(5, 12, 8), bool],) {
  %940 = @func_3354() /* ty=(Tensor[(5, 12, 8), bool],) */;
  %941 = %940.0;
  (%941,)
}

def @func_10981() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %942 = @func_7018() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %943 = @func_4392() /* ty=Tensor[(7, 15, 13), int16] */;
  %944 = %942.0;
  (%943, %944)
}

def @func_3978() -> (Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) {
  %945 = @func_3354() /* ty=(Tensor[(5, 12, 8), bool],) */;
  %946 = %945.0;
  %947 = @func_3028() /* ty=Tensor[(7, 15, 13), int16] */;
  (%946, %947)
}

def @func_9982() -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16]) {
  %948 = @func_2636() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %949 = @func_7791() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %950 = %948.0;
  %951 = %949.0;
  (%950, %951)
}

def @func_11697(%var_11577: Tensor[(5, 10, 14), float32], %var_11611: Tensor[(11, 6, 6), bool]) -> (Tensor[(7, 15, 13), float32], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 10, 14), uint32], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) {
  %952 = @func_2678() /* ty=Tensor[(11, 6, 6), bool] */;
  %953 = cast(%var_11611, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %954 = shape_of(%952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(%952, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %957 = @func_3764() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %958 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 10, 14), float32] */, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %959 = shape_of(%var_11577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%var_11577, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %962 = mod(%960, %961) /* ty=Tensor[(5, 10, 14), float32] */;
  %963 = cast(%962, dtype="int8") /* ty=Tensor[(5, 10, 14), int8] */;
  %964 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(5, 10, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 10, 14), float32] */, dtype="int8") /* ty=Tensor[(5, 10, 14), int8] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %967 = subtract(%965, %966) /* ty=Tensor[(5, 10, 14), int8] */;
  %968 = cast(%967, dtype="uint32") /* ty=Tensor[(5, 10, 14), uint32] */;
  %969 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(5, 10, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %970 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 10, 14), float32] */, dtype="uint32") /* ty=Tensor[(5, 10, 14), uint32] */;
  %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %972 = @func_7660() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
  %973 = @func_5880() /* ty=Tensor[(7, 15, 13), float32] */;
  %974 = equal(%955, %956) /* ty=Tensor[(11, 6, 6), bool] */;
  %975 = @func_2871() /* ty=Tensor[(7, 15, 13), int16] */;
  %976 = %957.1;
  %977 = @func_2994() /* ty=Tensor[(7, 15, 13), int16] */;
  %978 = maximum(%970, %971) /* ty=Tensor[(5, 10, 14), uint32] */;
  %979 = @func_6325() /* ty=Tensor[(7, 15, 13), int16] */;
  %980 = %972.1;
  (%973, %974, %975, %976, %977, %978, %979, %980)
}

def @func_12645() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(6, 12, 2), float64], Tensor[(7, 15, 13), float32]) {
  %981 = @func_12053() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %982 = @func_9897() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %983 = @func_9672() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %984 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 12, 2), float32] */, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %985 = asin(%984) /* ty=Tensor[(6, 12, 2), float32] */;
  %986 = cast(%985, dtype="float64") /* ty=Tensor[(6, 12, 2), float64] */;
  %987 = %981.0;
  %988 = @func_11293() /* ty=Tensor[(7, 15, 13), int16] */;
  %989 = %982.0;
  %990 = %983.0;
  %991 = acos(%986) /* ty=Tensor[(6, 12, 2), float64] */;
  %992 = @func_10087() /* ty=Tensor[(7, 15, 13), float32] */;
  (%987, %988, %989, %990, %991, %992)
}

def @func_12397() -> (Tensor[(7, 15, 13), float64], Tensor[(32), float32], Tensor[(32), float32]) {
  %993 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
  %994 = cast(meta[relay.Constant][34] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %995 = reshape(%994, newshape=[32]) /* ty=Tensor[(32), float32] */;
  %996 = @func_11860(%995) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(16), float32], Tensor[(32), float32], Tensor[(7, 15, 13), int16], Tensor[(9, 15, 9), int16]) */;
  %997 = %993.1;
  %998 = %996.2;
  (%997, %998, meta[relay.Constant][34] /* ty=Tensor[(32), float32] */)
}

def @func_8895() -> (Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float32]) {
  %999 = @func_4368() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %1000 = @func_2591() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */;
  %1001 = %999.1;
  %1002 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
  %1003 = %1000.0;
  (%1001, %1002, %1003)
}

def @func_10254() -> Tensor[(7, 15, 13), bool] {
  %1004 = @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %1004.0
}

def @func_12945() -> Tensor[(7, 15, 13), int16] {
  %1005 = @func_5984() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1005.0
}

def @func_4750() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %1006 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1007 = @func_3347() /* ty=Tensor[(7, 15, 13), int16] */;
  %1008 = %1006.0;
  (%1007, %1008)
}

def @func_4606(%var_4596: Tensor[(12, 7, 2), float32]) -> (Tensor[(12, 7, 2), float32], Tensor[(11, 6, 6), bool]) {
  %1009 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 7, 2), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 2), float32] */;
  %1010 = shape_of(%var_4596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%var_4596, dtype="float32") /* ty=Tensor[(12, 7, 2), float32] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1013 = @func_2844() /* ty=(Tensor[(11, 6, 6), bool],) */;
  %1014 = divide(%1011, %1012) /* ty=Tensor[(12, 7, 2), float32] */;
  %1015 = %1013.0;
  (%1014, %1015)
}

def @func_3015() -> Tensor[(7, 15, 13), int16] {
  %1016 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1016.0
}

def @func_6776() -> (Tensor[(7, 15, 13), int16],) {
  %1017 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1018 = %1017.0;
  (%1018,)
}

def @func_6896() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %1019 = @func_6621() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1020 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1021 = %1019.0;
  %1022 = %1020.0;
  (%1021, %1022)
}

def @func_10161() -> Tensor[(7, 15, 13), int32] {
  %1023 = @func_7356() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %1023.1
}

def @func_10512() -> (Tensor[(7, 15, 13), float32],) {
  %1024 = @func_5880() /* ty=Tensor[(7, 15, 13), float32] */;
  (%1024,)
}

def @func_3684() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8]) {
  %1025 = @func_2591() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */;
  %1026 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %1027 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %1028 = %1027.0;
  %1029 = cast(%1028, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
  %1030 = asinh(%1029) /* ty=Tensor[(7, 15, 13), float32] */;
  %1031 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 15, 13), float32] */, dtype="int8") /* ty=Tensor[(7, 15, 13), int8] */;
  %1032 = shape_of(%1030, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1033 = cast(%1030, dtype="int8") /* ty=Tensor[(7, 15, 13), int8] */;
  %1034 = dyn.reshape(%1031, %1032, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1035 = %1025.1;
  %1036 = %1026.1;
  %1037 = maximum(%1033, %1034) /* ty=Tensor[(7, 15, 13), int8] */;
  (%1035, %1036, %1037)
}

def @func_7125(%var_7099: Tensor[(360), float32], %var_7113: Tensor[(140), uint64]) -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float64], Tensor[(360), float32], Tensor[(14, 10), uint64], Tensor[(140), uint64], Tensor[(8, 9, 5), float64]) {
  %1038 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %1039 = @func_4218() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %1040 = cast(%var_7113, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %1041 = cast(%var_7113, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %1042 = reshape(%1040, newshape=[14, 10]) /* ty=Tensor[(14, 10), uint64] */;
  %1043 = reshape(%1041, newshape=[14, 10]) /* ty=Tensor[(14, 10), uint64] */;
  %1044 = @func_3607(%1042, %1043) /* ty=(Tensor[(14, 10), uint64],) */;
  %1045 = cast(%var_7099, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1046 = cast(%var_7099, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1047 = reshape(%1045, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
  %1048 = reshape(%1046, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
  %1049 = @func_5832(%1047, %1048) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */;
  %1050 = %1049.0;
  %1051 = cast(%1050, dtype="float64") /* ty=Tensor[(8, 9, 5), float64] */;
  %1052 = %1038.0;
  %1053 = %1039.0;
  %1054 = %1044.0;
  %1055 = sin(%1051) /* ty=Tensor[(8, 9, 5), float64] */;
  (%1052, %1053, %var_7099, %1054, %var_7113, %1055)
}

def @func_682() -> (Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) {
  %1056 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %1057 = cast(meta[relay.Constant][38] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %1058 = cast(meta[relay.Constant][38] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %1059 = reshape(%1057, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %1060 = reshape(%1058, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %1061 = cast(meta[relay.Constant][38] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
  %1062 = @func_24(%1059, %1060) /* ty=Tensor[(7, 15, 13), int16] */;
  %1063 = cast(%1062, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %1064 = reshape(%1061, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %1065 = reshape(%1063, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %1066 = exp(%1056) /* ty=Tensor[(16, 1, 5), float64] */;
  %1067 = @func_24(%1064, %1065) /* ty=Tensor[(7, 15, 13), int16] */;
  (%1066, %1062, meta[relay.Constant][38] /* ty=Tensor[(1365), int16] */, %1067)
}

def @func_1403() -> (Tensor[(7, 15, 13), float32],) {
  %1068 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %1069 = %1068.0;
  (%1069,)
}

def @func_9000() -> (Tensor[(7, 15, 13), int16],) {
  %1070 = @func_8937() /* ty=(Tensor[(16), float32], Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16]) */;
  %1071 = %1070.2;
  (%1071,)
}

def @func_10087() -> Tensor[(7, 15, 13), float32] {
  %1072 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %1072.0
}

def @func_4014() -> (Tensor[(7, 15, 13), int16],) {
  %1073 = @func_3015() /* ty=Tensor[(7, 15, 13), int16] */;
  (%1073,)
}

def @func_2563() -> (Tensor[(7, 15, 13), bool],) {
  %1074 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %1075 = %1074.1;
  (%1075,)
}

def @func_2072() -> Tensor[(7, 15, 13), float32] {
  %1076 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %1076.0
}

def @func_8398() -> Tensor[(7, 15, 13), int16] {
  %1077 = @func_2492() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint16]) */;
  %1077.1
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8149() -> Tensor[(7, 15, 13), int16] {
  %0 = fn () -> Tensor[(7, 15, 13), int16] {
    @func_4392() /* ty=Tensor[(7, 15, 13), int16] */
  };
  %0() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_12581() -> Tensor[(7, 15, 13), int16] {
  @func_12579() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_5984() -> (Tensor[(7, 15, 13), int16],) {
  %1 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
  (%1,)
}

def @func_1731(%var_1730: Tensor[(396), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(16, ?, 5), bool], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(16, ?, 5), bool], Tensor[(16, ?, 5), float32], Tensor[(16, ?, 5), float64], Tensor[(16, ?, 5), bool]) {
  %71 = fn (%var_1642: Tensor[(396), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(16, ?, 5), bool], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(16, ?, 5), bool], Tensor[(16, ?, 5), float32], Tensor[(16, ?, 5), float64], Tensor[(16, ?, 5), bool]) {
    %2 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
    %3 = cast(%2, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
    %4 = reshape(%3, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %5 = @func_1493(%4) /* ty=(Tensor[(7, 15, 13), uint8],) */;
    %6 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
    %7 = %6.0;
    %8 = cast(%7, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
    %9 = rsqrt(%8) /* ty=Tensor[(16, 1, 5), float64] */;
    %10 = cast(%9, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
    %11 = erf(%10) /* ty=Tensor[(16, 1, 5), float64] */;
    %12 = cast(%7, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
    %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
    %14 = cast(%11, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
    %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %16 = floor_divide(%14, %15) /* ty=Tensor[(16, ?, 5), float64] */;
    %17 = cast(%16, dtype="bool") /* ty=Tensor[(16, ?, 5), bool] */;
    %18 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
    %19 = cast(%11, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %21 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
    %22 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
    %23 = %21.1;
    %24 = cast(%23, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
    %25 = @func_1378() /* ty=Tensor[(7, 15, 13), int16] */;
    %26 = cast(%25, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
    %27 = reshape(%24, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %28 = reshape(%26, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %29 = cast(%var_1642, dtype="float64") /* ty=Tensor[(396), float64] */;
    %30 = reshape(%29, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
    %31 = @func_517(%30) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
    %32 = cast(%9, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
    %33 = log10(%32) /* ty=Tensor[(16, 1, 5), float64] */;
    %34 = cast(%33, dtype="int64") /* ty=Tensor[(16, 1, 5), int64] */;
    %35 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
    %36 = cast(%9, dtype="int64") /* ty=Tensor[(16, 1, 5), int64] */;
    %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %38 = bitwise_and(%36, %37) /* ty=Tensor[(16, ?, 5), int64] */;
    %39 = cast(%16, dtype="bool") /* ty=Tensor[(16, ?, 5), bool] */;
    %40 = shape_of(%38, dtype="int32") /* ty=Tensor[(3), int32] */;
    %41 = cast(%38, dtype="bool") /* ty=Tensor[(16, ?, 5), bool] */;
    %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %43 = cast(%38, dtype="float32") /* ty=Tensor[(16, ?, 5), float32] */;
    %44 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
    %45 = cast(%33, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
    %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %47 = cast(%7, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
    %48 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
    %49 = cast(%9, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
    %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %51 = floor_mod(%49, %50) /* ty=Tensor[(16, ?, 5), float32] */;
    %52 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
    %53 = %52.0;
    %54 = cast(%53, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
    %55 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
    %56 = cast(%51, dtype="float64") /* ty=Tensor[(16, ?, 5), float64] */;
    %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %58 = cast(%9, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
    %59 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
    %60 = cast(%33, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
    %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %62 = %5.0;
    %63 = not_equal(%19, %20) /* ty=Tensor[(16, ?, 5), bool] */;
    %64 = %22.2;
    %65 = @func_24(%27, %28) /* ty=Tensor[(7, 15, 13), int16] */;
    %66 = %31.2;
    %67 = logical_or(%41, %42) /* ty=Tensor[(16, ?, 5), bool] */;
    %68 = multiply(%45, %46) /* ty=Tensor[(16, ?, 5), float32] */;
    %69 = power(%56, %57) /* ty=Tensor[(16, ?, 5), float64] */;
    %70 = equal(%60, %61) /* ty=Tensor[(16, ?, 5), bool] */;
    (%25, %2, %62, %63, %23, %64, %65, %66, %var_1642, %67, %68, %69, %70)
  };
  %71(%var_1730) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(16, ?, 5), bool], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(16, ?, 5), bool], Tensor[(16, ?, 5), float32], Tensor[(16, ?, 5), float64], Tensor[(16, ?, 5), bool]) */
}

def @func_2839() -> (Tensor[(7, 15, 13), bool],) {
  %72 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %73 = %72.1;
  (%73,)
}

def @func_9183() -> (Tensor[(7, 15, 13), int16],) {
  %76 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %74 = @func_7791() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
    %75 = %74.0;
    (%75,)
  };
  %76() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_6475(%var_6473: bool) -> (Tensor[(3, 14, 3), bool], Tensor[(3, 14, 3), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(168), float32]) {
  @func_6472(%var_6473) /* ty=(Tensor[(3, 14, 3), bool], Tensor[(3, 14, 3), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(168), float32]) */
}

def @func_5515() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16]) {
  %77 = @func_5296() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) */;
  %78 = %77.0;
  %79 = @func_3015() /* ty=Tensor[(7, 15, 13), int16] */;
  (%78, %79)
}

def @func_8256(%var_8254: Tensor[(9, 3, 6), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(9, 3, 6), bool], Tensor[(9, 3, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) {
  @func_8253(%var_8254) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(9, 3, 6), bool], Tensor[(9, 3, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */
}

def @func_7376() -> Tensor[(7, 15, 13), int16] {
  @func_7374() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_10089() -> Tensor[(7, 15, 13), float32] {
  @func_10087() /* ty=Tensor[(7, 15, 13), float32] */
}

def @func_2845() -> (Tensor[(11, 6, 6), bool],) {
  %82 = fn () -> (Tensor[(11, 6, 6), bool],) {
    %80 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
    %81 = %80.1;
    (%81,)
  };
  %82() /* ty=(Tensor[(11, 6, 6), bool],) */
}

def @func_12251(%var_12249: Tensor[(8, 2), float32], %var_12250: Tensor[(1, 32), float32]) -> (Tensor[(7, 15, 13), float32], Tensor[(2, 2, 8), float32], Tensor[(8, 2), float32], Tensor[(1, 32), float32], Tensor[(7, 15, 13), int16]) {
  %93 = fn (%var_12231: Tensor[(8, 2), float32], %var_12232: Tensor[(1, 32), float32]) -> (Tensor[(7, 15, 13), float32], Tensor[(2, 2, 8), float32], Tensor[(8, 2), float32], Tensor[(1, 32), float32], Tensor[(7, 15, 13), int16]) {
    %83 = @func_8657() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(5, 12, 8), float32]) */;
    %84 = cast(%var_12231, dtype="float32") /* ty=Tensor[(8, 2), float32] */;
    %85 = cast(%var_12232, dtype="float32") /* ty=Tensor[(1, 32), float32] */;
    %86 = reshape(%84, newshape=[1, 2, 8]) /* ty=Tensor[(1, 2, 8), float32] */;
    %87 = reshape(%85, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), float32] */;
    %88 = @func_214(%86, %87) /* ty=(Tensor[(2, 2, 8), float32],) */;
    %89 = @func_2225() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */;
    %90 = %83.0;
    %91 = %88.0;
    %92 = %89.0;
    (%90, %91, %var_12231, %var_12232, %92)
  };
  %93(%var_12249, %var_12250) /* ty=(Tensor[(7, 15, 13), float32], Tensor[(2, 2, 8), float32], Tensor[(8, 2), float32], Tensor[(1, 32), float32], Tensor[(7, 15, 13), int16]) */
}

def @func_9673() -> (Tensor[(7, 15, 13), int16],) {
  %95 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %94 = @func_8148() /* ty=Tensor[(7, 15, 13), int16] */;
    (%94,)
  };
  %95() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_5195() -> Tensor[(7, 15, 13), int16] {
  %96 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %96.0
}

def @func_8361() -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), float32], Tensor[(5, 12, 8), float64]) {
  %107 = fn () -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), float32], Tensor[(5, 12, 8), float64]) {
    %97 = @func_7939() /* ty=(Tensor[(7, 15, 13), bool],) */;
    %98 = @func_6576() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32]) */;
    %99 = @func_3470() /* ty=(Tensor[(5, 12, 8), float32],) */;
    %100 = %99.0;
    %101 = cast(%100, dtype="float32") /* ty=Tensor[(5, 12, 8), float32] */;
    %102 = cast(%100, dtype="float64") /* ty=Tensor[(5, 12, 8), float64] */;
    %103 = %97.0;
    %104 = %98.0;
    %105 = cosh(%101) /* ty=Tensor[(5, 12, 8), float32] */;
    %106 = tan(%102) /* ty=Tensor[(5, 12, 8), float64] */;
    (%103, %104, %105, %106)
  };
  %107() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), float32], Tensor[(5, 12, 8), float64]) */
}

def @func_8854() -> Tensor[(7, 15, 13), float32] {
  %109 = fn () -> Tensor[(7, 15, 13), float32] {
    %108 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %108.0
  };
  %109() /* ty=Tensor[(7, 15, 13), float32] */
}

def @func_1405() -> (Tensor[(7, 15, 13), float32],) {
  @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */
}

def @func_11960() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %110 = @func_2047() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %111 = @func_2312() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %112 = %110.0;
  %113 = %111.2;
  (%112, %113)
}

def @func_10461(%var_10459: Tensor[(11, 6, 10), int64], %var_10460: Tensor[(11, 6, 10), int64]) -> (Tensor[(11, 6, 10), bool], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), uint8], Tensor[(7, 195), int16]) {
  %125 = fn (%var_10430: Tensor[(11, 6, 10), int64], %var_10431: Tensor[(11, 6, 10), int64]) -> (Tensor[(11, 6, 10), bool], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), uint8], Tensor[(7, 195), int16]) {
    %114 = cast(%var_10431, dtype="bool") /* ty=Tensor[(11, 6, 10), bool] */;
    %115 = shape_of(%var_10430, dtype="int32") /* ty=Tensor[(3), int32] */;
    %116 = cast(%var_10430, dtype="bool") /* ty=Tensor[(11, 6, 10), bool] */;
    %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %118 = @func_3978() /* ty=(Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) */;
    %119 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 195), int16] */, dtype="int16") /* ty=Tensor[(7, 195), int16] */;
    %120 = reshape(%119, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %121 = @func_1493(%120) /* ty=(Tensor[(7, 15, 13), uint8],) */;
    %122 = greater_equal(%116, %117) /* ty=Tensor[(11, 6, 10), bool] */;
    %123 = %118.0;
    %124 = %121.0;
    (%122, %123, %124, meta[relay.Constant][0] /* ty=Tensor[(7, 195), int16] */)
  };
  %125(%var_10459, %var_10460) /* ty=(Tensor[(11, 6, 10), bool], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), uint8], Tensor[(7, 195), int16]) */
}

def @func_4813() -> Tensor[(7, 15, 13), int16] {
  @func_3028() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_3472() -> (Tensor[(5, 12, 8), float32],) {
  @func_3470() /* ty=(Tensor[(5, 12, 8), float32],) */
}

def @func_5114() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) {
  %126 = @func_3764() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %127 = @func_4218() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %128 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %129 = %126.0;
  %130 = %127.0;
  %131 = %128.0;
  (%129, %130, %131)
}

def @func_9362() -> (Tensor[(7, 15, 13), int16],) {
  %133 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %132 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
    (%132,)
  };
  %133() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_4218() -> (Tensor[(7, 15, 13), float64],) {
  %134 = @func_3764() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %135 = %134.0;
  %136 = cast(%135, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %137 = cosh(%136) /* ty=Tensor[(7, 15, 13), float64] */;
  (%137,)
}

def @func_8688() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) {
  @func_8686() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */
}

def @func_10734() -> Tensor[(7, 15, 13), bool] {
  @func_10732() /* ty=Tensor[(7, 15, 13), bool] */
}

def @func_4539() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %141 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
    %138 = @func_3233() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
    %139 = @func_3347() /* ty=Tensor[(7, 15, 13), int16] */;
    %140 = %138.2;
    (%139, %140)
  };
  %141() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */
}

def @func_5452(%var_5451: Tensor[(5, 15, 10), float32]) -> Tensor[(5, 15, 10), float32] {
  %143 = fn (%var_5447: Tensor[(5, 15, 10), float32]) -> Tensor[(5, 15, 10), float32] {
    %142 = cast(%var_5447, dtype="float32") /* ty=Tensor[(5, 15, 10), float32] */;
    cosh(%142) /* ty=Tensor[(5, 15, 10), float32] */
  };
  %143(%var_5451) /* ty=Tensor[(5, 15, 10), float32] */
}

def @func_10254() -> Tensor[(7, 15, 13), bool] {
  %144 = @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %144.0
}

def @func_10948() -> (Tensor[(11, 6, 6), float32], Tensor[(8, 9, 5), float32], Tensor[(360), float32]) {
  @func_10946() /* ty=(Tensor[(11, 6, 6), float32], Tensor[(8, 9, 5), float32], Tensor[(360), float32]) */
}

def @func_2254() -> (Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) {
  %156 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) {
    %145 = @func_2047() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %146 = cast(meta[relay.Constant][1] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %147 = reshape(%146, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %148 = @func_744(%147) /* ty=(Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(11, 6, 6), float32]) */;
    %149 = %148.3;
    %150 = cast(meta[relay.Constant][1] /* ty=Tensor[(396), float64] */, dtype="bool") /* ty=Tensor[(396), bool] */;
    %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(3), int32] */;
    %152 = cast(%149, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
    %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %154 = %145.0;
    %155 = greater(%152, %153) /* ty=Tensor[(11, 6, 6), bool] */;
    (%154, %155)
  };
  %156() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */
}

def @func_11962() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  @func_11960() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */
}

def @func_800(%var_798: Tensor[(396), float64], %var_799: Tensor[(16), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(32), float32]) {
  %177 = fn (%var_775: Tensor[(396), float64], %var_793: Tensor[(16), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(32), float32]) {
    %157 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
    %158 = cast(%var_775, dtype="float64") /* ty=Tensor[(396), float64] */;
    %159 = reshape(%158, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
    %160 = @func_517(%159) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
    %161 = cast(%var_775, dtype="float32") /* ty=Tensor[(396), float32] */;
    %162 = cast(%var_775, dtype="float64") /* ty=Tensor[(396), float64] */;
    %163 = reshape(%162, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
    %164 = @func_517(%163) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
    %165 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
    %166 = cast(%var_793, dtype="float32") /* ty=Tensor[(16), float32] */;
    %167 = cast(meta[relay.Constant][2] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
    %168 = reshape(%166, newshape=[1, 2, 8]) /* ty=Tensor[(1, 2, 8), float32] */;
    %169 = reshape(%167, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), float32] */;
    %170 = @func_214(%168, %169) /* ty=(Tensor[(2, 2, 8), float32],) */;
    %171 = %157.3;
    %172 = %160.2;
    %173 = tan(%161) /* ty=Tensor[(396), float32] */;
    %174 = %164.1;
    %175 = %165.1;
    %176 = %170.0;
    (%171, %172, %173, %174, %175, %176, %var_793, meta[relay.Constant][2] /* ty=Tensor[(32), float32] */)
  };
  %177(%var_798, %var_799) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(32), float32]) */
}

def @func_4646() -> Tensor[(7, 15, 13), int16] {
  @func_4644() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_10385() -> (Tensor[(7, 15, 13), float32],) {
  %178 = @func_8280() /* ty=Tensor[(7, 15, 13), float32] */;
  (%178,)
}

def @func_10902() -> Tensor[(7, 15, 13), int16] {
  %179 = fn () -> Tensor[(7, 15, 13), int16] {
    @func_10064() /* ty=Tensor[(7, 15, 13), int16] */
  };
  %179() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_3234() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %188 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %180 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %181 = @func_2187() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %182 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %183 = @func_3015() /* ty=Tensor[(7, 15, 13), int16] */;
    %184 = %180.0;
    %185 = %181.0;
    %186 = %182.0;
    %187 = @func_1378() /* ty=Tensor[(7, 15, 13), int16] */;
    (%183, %184, %185, %186, %187)
  };
  %188() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_10814() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %193 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %189 = @func_4014() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %190 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %191 = %189.0;
    %192 = %190.0;
    (%191, %192)
  };
  %193() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_6756(%var_6730: Tensor[(2, 16, 2), uint32]) -> Tensor[(2, 16, 2), uint32] {
  %194 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 16, 2), uint32] */, dtype="uint32") /* ty=Tensor[(2, 16, 2), uint32] */;
  %195 = shape_of(%var_6730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %196 = cast(%var_6730, dtype="uint32") /* ty=Tensor[(2, 16, 2), uint32] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%196, %197) /* ty=Tensor[(2, 16, 2), uint32] */
}

def @func_12479(%var_12474: Tensor[(66, 6), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(66, 6), float64], Tensor[(2, 8), float32]) {
  %198 = @func_9473() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %199 = cast(%var_12474, dtype="float64") /* ty=Tensor[(66, 6), float64] */;
  %200 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 8), float32] */, dtype="float32") /* ty=Tensor[(2, 8), float32] */;
  %201 = reshape(%199, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %202 = reshape(%200, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %203 = @func_797(%201, %202) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(32), float32]) */;
  %204 = %198.0;
  %205 = %203.5;
  (%204, %205, %var_12474, meta[relay.Constant][4] /* ty=Tensor[(2, 8), float32] */)
}

def @func_1874() -> Tensor[(7, 15, 13), int16] {
  @func_914() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_6778() -> (Tensor[(7, 15, 13), int16],) {
  @func_6776() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_7662() -> (Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) {
  @func_7660() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */
}

def @func_6258(%var_6257: Tensor[(12, 16, 6), int8]) -> (Tensor[(12, 16, 6), uint16], Tensor[(7, 15, 13), int16]) {
  %215 = fn (%var_6233: Tensor[(12, 16, 6), int8]) -> (Tensor[(12, 16, 6), uint16], Tensor[(7, 15, 13), int16]) {
    %206 = cast(meta[relay.Constant][5] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %207 = cast(%var_6233, dtype="int8") /* ty=Tensor[(12, 16, 6), int8] */;
    %208 = maximum(%206, %207) /* ty=Tensor[(12, 16, 6), int8] */;
    %209 = cast(%var_6233, dtype="uint16") /* ty=Tensor[(12, 16, 6), uint16] */;
    %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
    %211 = cast(%208, dtype="uint16") /* ty=Tensor[(12, 16, 6), uint16] */;
    %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %213 = bitwise_and(%211, %212) /* ty=Tensor[(12, 16, 6), uint16] */;
    %214 = @func_2994() /* ty=Tensor[(7, 15, 13), int16] */;
    (%213, %214)
  };
  %215(%var_6257) /* ty=(Tensor[(12, 16, 6), uint16], Tensor[(7, 15, 13), int16]) */
}

def @func_7019() -> (Tensor[(7, 15, 13), int16],) {
  %217 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %216 = @func_2871() /* ty=Tensor[(7, 15, 13), int16] */;
    (%216,)
  };
  %217() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_2996() -> Tensor[(7, 15, 13), int16] {
  @func_2994() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_12053() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %218 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
  %219 = @func_4475() /* ty=Tensor[(7, 15, 13), int16] */;
  (%218, %219)
}

def @func_1378() -> Tensor[(7, 15, 13), int16] {
  %220 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %220.0
}

def @func_12168() -> Tensor[(16, 1, 5), float64] {
  %221 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %221.0
}

def @func_8897() -> (Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float32]) {
  @func_8895() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float32]) */
}

def @func_5016(%var_5014: Tensor[(3, 10, 9), float64], %var_5015: Tensor[(3, 10, 9), float64]) -> (Tensor[(3, 10, 9), float64], Tensor[(7, 15, 13), float32]) {
  @func_5012(%var_5014, %var_5015) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(7, 15, 13), float32]) */
}

def @func_2592() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) {
  %228 = fn () -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) {
    %222 = @func_2187() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %223 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %224 = %223.0;
    %225 = cast(%224, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
    %226 = %222.0;
    %227 = cos(%225) /* ty=Tensor[(7, 15, 13), float32] */;
    (%226, %227)
  };
  %228() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */
}

def @func_7793() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  @func_7791() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */
}

def @func_2636() -> (Tensor[(7, 15, 13), float64],) {
  %229 = @func_2563() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %230 = %229.0;
  %231 = cast(%230, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %232 = exp(%231) /* ty=Tensor[(7, 15, 13), float64] */;
  (%232,)
}

def @func_11474() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64]) {
  %237 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64]) {
    %233 = @func_8360() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), float32], Tensor[(5, 12, 8), float64]) */;
    %234 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
    %235 = %233.1;
    %236 = %234.1;
    (%235, %236)
  };
  %237() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64]) */
}

def @func_10829() -> Tensor[(7, 15, 13), float64] {
  %239 = fn () -> Tensor[(7, 15, 13), float64] {
    %238 = @func_2636() /* ty=(Tensor[(7, 15, 13), float64],) */;
    %238.0
  };
  %239() /* ty=Tensor[(7, 15, 13), float64] */
}

def @func_9433(%var_9431: Tensor[(396), float64], %var_9432: Tensor[(16), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(16), float32]) {
  @func_9429(%var_9431, %var_9432) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(16), float32]) */
}

def @func_12397() -> (Tensor[(7, 15, 13), float64], Tensor[(32), float32], Tensor[(32), float32]) {
  %240 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
  %241 = cast(meta[relay.Constant][6] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %242 = reshape(%241, newshape=[32]) /* ty=Tensor[(32), float32] */;
  %243 = @func_11860(%242) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(16), float32], Tensor[(32), float32], Tensor[(7, 15, 13), int16], Tensor[(9, 15, 9), int16]) */;
  %244 = %240.1;
  %245 = %243.2;
  (%244, %245, meta[relay.Constant][6] /* ty=Tensor[(32), float32] */)
}

def @func_4608(%var_4607: Tensor[(12, 7, 2), float32]) -> (Tensor[(12, 7, 2), float32], Tensor[(11, 6, 6), bool]) {
  %253 = fn (%var_4596: Tensor[(12, 7, 2), float32]) -> (Tensor[(12, 7, 2), float32], Tensor[(11, 6, 6), bool]) {
    %246 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 7, 2), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 2), float32] */;
    %247 = shape_of(%var_4596, dtype="int32") /* ty=Tensor[(3), int32] */;
    %248 = cast(%var_4596, dtype="float32") /* ty=Tensor[(12, 7, 2), float32] */;
    %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %250 = @func_2844() /* ty=(Tensor[(11, 6, 6), bool],) */;
    %251 = divide(%248, %249) /* ty=Tensor[(12, 7, 2), float32] */;
    %252 = %250.0;
    (%251, %252)
  };
  %253(%var_4607) /* ty=(Tensor[(12, 7, 2), float32], Tensor[(11, 6, 6), bool]) */
}

def @func_6519(%var_6508: Tensor[(14, 9, 5), float64], %var_6515: bool) -> (Tensor[(14, 9, 5), float64], Tensor[(3, 14, 3), bool], bool) {
  %254 = cast(%var_6508, dtype="float64") /* ty=Tensor[(14, 9, 5), float64] */;
  %255 = cast(%var_6515, dtype="bool") /* ty=bool */;
  %256 = reshape(%255, newshape=[]) /* ty=bool */;
  %257 = @func_6472(%256) /* ty=(Tensor[(3, 14, 3), bool], Tensor[(3, 14, 3), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(168), float32]) */;
  %258 = erf(%254) /* ty=Tensor[(14, 9, 5), float64] */;
  %259 = %257.1;
  (%258, %259, %var_6515)
}

def @func_3330() -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) {
  @func_3328() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */
}

def @func_8831(%var_8829: Tensor[(1, 4, 9), float64]) -> (Tensor[(1, 4, 9), float32],) {
  @func_8828(%var_8829) /* ty=(Tensor[(1, 4, 9), float32],) */
}

def @func_11189() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) {
  @func_11187() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) */
}

def @func_12560(%var_12558: uint8, %var_12559: Tensor[(15, 1, 13), uint8]) -> Tensor[(15, 1, 13), uint8] {
  %262 = fn (%var_12552: uint8, %var_12553: Tensor[(15, 1, 13), uint8]) -> Tensor[(15, 1, 13), uint8] {
    %260 = cast(%var_12552, dtype="uint8") /* ty=uint8 */;
    %261 = cast(%var_12553, dtype="uint8") /* ty=Tensor[(15, 1, 13), uint8] */;
    subtract(%260, %261) /* ty=Tensor[(15, 1, 13), uint8] */
  };
  %262(%var_12558, %var_12559) /* ty=Tensor[(15, 1, 13), uint8] */
}

def @func_2122(%var_2110: Tensor[(7, 15, 13), int16]) -> (Tensor[(7, 15, 13), bool],) {
  %263 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
  %264 = cast(%var_2110, dtype="bool") /* ty=Tensor[(7, 15, 13), bool] */;
  %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%263, dtype="bool") /* ty=Tensor[(7, 15, 13), bool] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %268 = logical_or(%266, %267) /* ty=Tensor[(7, 15, 13), bool] */;
  (%268,)
}

def @func_6776() -> (Tensor[(7, 15, 13), int16],) {
  %269 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %270 = %269.0;
  (%270,)
}

def @func_746(%var_745: Tensor[(396), float64]) -> (Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(11, 6, 6), float32]) {
  %284 = fn (%var_737: Tensor[(396), float64]) -> (Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(11, 6, 6), float32]) {
    %271 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
    %272 = %271.2;
    %273 = cast(%272, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %274 = cast(%272, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %275 = reshape(%273, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %276 = reshape(%274, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %277 = cast(%var_737, dtype="float64") /* ty=Tensor[(396), float64] */;
    %278 = reshape(%277, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
    %279 = @func_517(%278) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
    %280 = %279.0;
    %281 = cast(%280, dtype="float32") /* ty=Tensor[(11, 6, 6), float32] */;
    %282 = @func_24(%275, %276) /* ty=Tensor[(7, 15, 13), int16] */;
    %283 = rsqrt(%281) /* ty=Tensor[(11, 6, 6), float32] */;
    (%272, %282, %var_737, %283)
  };
  %284(%var_745) /* ty=(Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(11, 6, 6), float32]) */
}

def @func_8499(%var_8497: Tensor[(16, 7, 5), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(1152), int8], Tensor[(16, 7, 5), bool]) {
  @func_8496(%var_8497) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1152), int8], Tensor[(16, 7, 5), bool]) */
}

def @func_7374() -> Tensor[(7, 15, 13), int16] {
  @func_3633() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_12524() -> Tensor[(7, 15, 13), int16] {
  @func_12522() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_10512() -> (Tensor[(7, 15, 13), float32],) {
  %285 = @func_5880() /* ty=Tensor[(7, 15, 13), float32] */;
  (%285,)
}

def @func_11293() -> Tensor[(7, 15, 13), int16] {
  %286 = @func_7455() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %286.0
}

def @func_10256() -> Tensor[(7, 15, 13), bool] {
  @func_10254() /* ty=Tensor[(7, 15, 13), bool] */
}

def @func_5166() -> (Tensor[(7, 15, 13), int16],) {
  %287 = @func_1378() /* ty=Tensor[(7, 15, 13), int16] */;
  (%287,)
}

def @func_11295() -> Tensor[(7, 15, 13), int16] {
  @func_11293() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_7614(%var_7611: Tensor[(1, 2, 10), int16], %var_7612: Tensor[(16, 2, 10), int16], %var_7613: Tensor[(16, 2, 10), int16]) -> (Tensor[(7, 15, 13), int16], Tensor[(16, 2, 10), uint16], Tensor[(7, 15, 13), float32]) {
  %300 = fn (%var_7541: Tensor[(1, 2, 10), int16], %var_7542: Tensor[(16, 2, 10), int16], %var_7583: Tensor[(16, 2, 10), int16]) -> (Tensor[(7, 15, 13), int16], Tensor[(16, 2, 10), uint16], Tensor[(7, 15, 13), float32]) {
    %288 = @func_6896() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
    %289 = cast(%var_7541, dtype="int16") /* ty=Tensor[(1, 2, 10), int16] */;
    %290 = cast(%var_7542, dtype="int16") /* ty=Tensor[(16, 2, 10), int16] */;
    %291 = bitwise_or(%289, %290) /* ty=Tensor[(16, 2, 10), int16] */;
    %292 = cast(%var_7583, dtype="uint16") /* ty=Tensor[(16, 2, 10), uint16] */;
    %293 = shape_of(%291, dtype="int32") /* ty=Tensor[(3), int32] */;
    %294 = cast(%291, dtype="uint16") /* ty=Tensor[(16, 2, 10), uint16] */;
    %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %296 = @func_2591() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */;
    %297 = %288.1;
    %298 = multiply(%294, %295) /* ty=Tensor[(16, 2, 10), uint16] */;
    %299 = %296.0;
    (%297, %298, %299)
  };
  %300(%var_7611, %var_7612, %var_7613) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(16, 2, 10), uint16], Tensor[(7, 15, 13), float32]) */
}

def @func_8738() -> Tensor[(7, 15, 13), int16] {
  @func_2871() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_4951() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  @func_4949() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_3392() -> (Tensor[(7, 15, 13), bool],) {
  @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */
}

def @func_3962() -> (Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) {
  %305 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) {
    %301 = @func_3808() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %302 = @func_2844() /* ty=(Tensor[(11, 6, 6), bool],) */;
    %303 = %301.0;
    %304 = %302.0;
    (%303, %304)
  };
  %305() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */
}

def @func_5866() -> (Tensor[(7, 15, 13), int16],) {
  %308 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %306 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
    %307 = %306.1;
    (%307,)
  };
  %308() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_3941() -> Tensor[(7, 15, 13), int16] {
  @func_3939() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_8740() -> Tensor[(7, 15, 13), int16] {
  @func_8738() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_8398() -> Tensor[(7, 15, 13), int16] {
  %309 = @func_2492() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint16]) */;
  %309.1
}

def @func_9159(%var_9157: Tensor[(750), float32]) -> (Tensor[(7, 15, 13), float64], Tensor[(5, 15, 10), float32], Tensor[(750), float32], Tensor[(7, 15, 13), float64]) {
  @func_9156(%var_9157) /* ty=(Tensor[(7, 15, 13), float64], Tensor[(5, 15, 10), float32], Tensor[(750), float32], Tensor[(7, 15, 13), float64]) */
}

def @func_993() -> (Tensor[(7, 15, 13), int16],) {
  %311 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %310 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
    (%310,)
  };
  %311() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_5012(%var_4966: Tensor[(3, 10, 9), float64], %var_4967: Tensor[(3, 10, 9), float64]) -> (Tensor[(3, 10, 9), float64], Tensor[(7, 15, 13), float32]) {
  %312 = cast(%var_4967, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %313 = shape_of(%var_4966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%var_4966, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %316 = floor_divide(%314, %315) /* ty=Tensor[(3, 10, 9), float64] */;
  %317 = @func_2072() /* ty=Tensor[(7, 15, 13), float32] */;
  (%316, %317)
}

def @func_12318() -> (Tensor[(7, 15, 13), int16],) {
  %319 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %318 = @func_5195() /* ty=Tensor[(7, 15, 13), int16] */;
    (%318,)
  };
  %319() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_5832(%var_5800: Tensor[(8, 9, 5), float32], %var_5801: Tensor[(8, 9, 5), float32]) -> (Tensor[(8, 9, 5), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) {
  %320 = cast(%var_5801, dtype="float32") /* ty=Tensor[(8, 9, 5), float32] */;
  %321 = shape_of(%var_5800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%var_5800, dtype="float32") /* ty=Tensor[(8, 9, 5), float32] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %324 = @func_5567() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */;
  %325 = @func_5567() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */;
  %326 = power(%322, %323) /* ty=Tensor[(8, 9, 5), float32] */;
  %327 = %324.2;
  %328 = %325.3;
  (%326, %327, %328)
}

def @func_9429(%var_9417: Tensor[(396), float64], %var_9418: Tensor[(16), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(16), float32]) {
  %329 = @func_5984() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %330 = cast(%var_9417, dtype="float64") /* ty=Tensor[(396), float64] */;
  %331 = cast(%var_9418, dtype="float32") /* ty=Tensor[(16), float32] */;
  %332 = reshape(%330, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %333 = reshape(%331, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %334 = @func_797(%332, %333) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(32), float32]) */;
  %335 = %329.0;
  %336 = %334.0;
  (%335, %336, %var_9417, %var_9418)
}

def @func_10677() -> (Tensor[(5, 12, 8), float32],) {
  %341 = fn () -> (Tensor[(5, 12, 8), float32],) {
    %337 = @func_3354() /* ty=(Tensor[(5, 12, 8), bool],) */;
    %338 = %337.0;
    %339 = cast(%338, dtype="float32") /* ty=Tensor[(5, 12, 8), float32] */;
    %340 = sqrt(%339) /* ty=Tensor[(5, 12, 8), float32] */;
    (%340,)
  };
  %341() /* ty=(Tensor[(5, 12, 8), float32],) */
}

def @func_5517() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16]) {
  @func_5515() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16]) */
}

def @func_8496(%var_8483: Tensor[(16, 7, 5), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(1152), int8], Tensor[(16, 7, 5), bool]) {
  %342 = cast(meta[relay.Constant][8] /* ty=Tensor[(1152), int8] */, dtype="int8") /* ty=Tensor[(1152), int8] */;
  %343 = reshape(%342, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), int8] */;
  %344 = @func_6256(%343) /* ty=(Tensor[(12, 16, 6), uint16], Tensor[(7, 15, 13), int16]) */;
  %345 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
  %346 = %345.2;
  %347 = cast(%346, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
  %348 = cast(%var_8483, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
  %349 = %344.1;
  %350 = equal(%347, %348) /* ty=Tensor[(16, 7, 5), bool] */;
  (%349, meta[relay.Constant][8] /* ty=Tensor[(1152), int8] */, %350)
}

def @func_11187() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) {
  %351 = @func_10512() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %352 = %351.0;
  %353 = @func_10254() /* ty=Tensor[(7, 15, 13), bool] */;
  (%352, %353)
}

def @func_4170() -> (Tensor[(7, 15, 13), int8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(396), float64]) {
  @func_4168() /* ty=(Tensor[(7, 15, 13), int8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(396), float64]) */
}

def @func_10982() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %357 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %354 = @func_7018() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %355 = @func_4392() /* ty=Tensor[(7, 15, 13), int16] */;
    %356 = %354.0;
    (%355, %356)
  };
  %357() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_10161() -> Tensor[(7, 15, 13), int32] {
  %358 = @func_7356() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %358.1
}

def @func_6977(%var_6974: Tensor[(6, 8, 14), uint8], %var_6975: Tensor[(6, 8, 14), uint8], %var_6976: Tensor[(168), float32]) -> (Tensor[(6, 8, 14), uint8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), int16]) {
  @func_6972(%var_6974, %var_6975, %var_6976) /* ty=(Tensor[(6, 8, 14), uint8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), int16]) */
}

def @func_8796() -> (Tensor[(11, 6, 6), float32], Tensor[(7, 15, 13), int16]) {
  %359 = @func_8726() /* ty=(Tensor[(11, 6, 6), uint32], Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16]) */;
  %360 = %359.0;
  %361 = cast(%360, dtype="float32") /* ty=Tensor[(11, 6, 6), float32] */;
  %362 = exp(%361) /* ty=Tensor[(11, 6, 6), float32] */;
  %363 = cast(%362, dtype="float64") /* ty=Tensor[(11, 6, 6), float64] */;
  %364 = reshape(%363, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %365 = @func_1729(%364) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(16, ?, 5), bool], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(16, ?, 5), bool], Tensor[(16, ?, 5), float32], Tensor[(16, ?, 5), float64], Tensor[(16, ?, 5), bool]) */;
  %366 = %365.6;
  (%362, %366)
}

def @func_11124() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  @func_11122() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */
}

def @func_3534(%var_3532: Tensor[(4, 8), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(4, 8), float32]) {
  @func_3531(%var_3532) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(4, 8), float32]) */
}

def @func_6622() -> (Tensor[(7, 15, 13), int16],) {
  %368 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %367 = @func_4392() /* ty=Tensor[(7, 15, 13), int16] */;
    (%367,)
  };
  %368() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_12399() -> (Tensor[(7, 15, 13), float64], Tensor[(32), float32], Tensor[(32), float32]) {
  @func_12397() /* ty=(Tensor[(7, 15, 13), float64], Tensor[(32), float32], Tensor[(32), float32]) */
}

def @func_5197() -> Tensor[(7, 15, 13), int16] {
  @func_5195() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_9991() -> (Tensor[(7, 15, 13), int16],) {
  %371 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %369 = @func_6776() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %370 = %369.0;
    (%370,)
  };
  %371() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_5535(%var_5533: Tensor[(5, 16, 12), int64]) -> Tensor[(5, 16, 12), int64] {
  @func_5532(%var_5533) /* ty=Tensor[(5, 16, 12), int64] */
}

def @func_12751() -> (Tensor[(7, 15, 13), int16],) {
  %374 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %372 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %373 = %372.0;
    (%373,)
  };
  %374() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_967() -> (Tensor[(7, 15, 13), int16],) {
  %376 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %375 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
    (%375,)
  };
  %376() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_9001() -> (Tensor[(7, 15, 13), int16],) {
  %379 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %377 = @func_8937() /* ty=(Tensor[(16), float32], Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16]) */;
    %378 = %377.2;
    (%378,)
  };
  %379() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_3028() -> Tensor[(7, 15, 13), int16] {
  %380 = @func_2492() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint16]) */;
  %380.1
}

def @func_4015() -> (Tensor[(7, 15, 13), int16],) {
  %382 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %381 = @func_3015() /* ty=Tensor[(7, 15, 13), int16] */;
    (%381,)
  };
  %382() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_683() -> (Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) {
  %395 = fn () -> (Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) {
    %383 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
    %384 = cast(meta[relay.Constant][10] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %385 = cast(meta[relay.Constant][10] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %386 = reshape(%384, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %387 = reshape(%385, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %388 = cast(meta[relay.Constant][10] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %389 = @func_24(%386, %387) /* ty=Tensor[(7, 15, 13), int16] */;
    %390 = cast(%389, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
    %391 = reshape(%388, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %392 = reshape(%390, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %393 = exp(%383) /* ty=Tensor[(16, 1, 5), float64] */;
    %394 = @func_24(%391, %392) /* ty=Tensor[(7, 15, 13), int16] */;
    (%393, %389, meta[relay.Constant][10] /* ty=Tensor[(1365), int16] */, %394)
  };
  %395() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_7457() -> (Tensor[(7, 15, 13), int16],) {
  @func_7455() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_10064() -> Tensor[(7, 15, 13), int16] {
  %396 = @func_6835() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %396.2
}

def @func_12728() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) {
  %397 = @func_7356() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %398 = @func_1874() /* ty=Tensor[(7, 15, 13), int16] */;
  %399 = %397.1;
  (%398, %399)
}

def @func_10732() -> Tensor[(7, 15, 13), bool] {
  %400 = @func_4168() /* ty=(Tensor[(7, 15, 13), int8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(396), float64]) */;
  %400.2
}

def @func_8253(%var_8199: Tensor[(9, 3, 6), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(9, 3, 6), bool], Tensor[(9, 3, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) {
  %401 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %402 = cast(%var_8199, dtype="float64") /* ty=Tensor[(9, 3, 6), float64] */;
  %403 = acosh(%402) /* ty=Tensor[(9, 3, 6), float64] */;
  %404 = cast(%var_8199, dtype="bool") /* ty=Tensor[(9, 3, 6), bool] */;
  %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%403, dtype="bool") /* ty=Tensor[(9, 3, 6), bool] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %408 = cast(%403, dtype="float64") /* ty=Tensor[(9, 3, 6), float64] */;
  %409 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %410 = @func_3961() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %411 = %401.1;
  %412 = less(%406, %407) /* ty=Tensor[(9, 3, 6), bool] */;
  %413 = acos(%408) /* ty=Tensor[(9, 3, 6), float64] */;
  %414 = @func_5195() /* ty=Tensor[(7, 15, 13), int16] */;
  %415 = %409.1;
  %416 = %410.1;
  (%411, %412, %413, %414, %415, %416)
}

def @func_9707() -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) {
  %421 = fn () -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) {
    %417 = @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */;
    %418 = @func_9322() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %419 = %417.0;
    %420 = %418.0;
    (%419, %420)
  };
  %421() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */
}

def @func_10048() -> (Tensor[(7, 15, 13), int16],) {
  %422 = @func_6500() /* ty=Tensor[(7, 15, 13), int16] */;
  (%422,)
}

def @func_8400() -> Tensor[(7, 15, 13), int16] {
  @func_8398() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_9983() -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16]) {
  %427 = fn () -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16]) {
    %423 = @func_2636() /* ty=(Tensor[(7, 15, 13), float64],) */;
    %424 = @func_7791() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
    %425 = %423.0;
    %426 = %424.0;
    (%425, %426)
  };
  %427() /* ty=(Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16]) */
}

def @func_6523(%var_6521: Tensor[(14, 9, 5), float64], %var_6522: bool) -> (Tensor[(14, 9, 5), float64], Tensor[(3, 14, 3), bool], bool) {
  @func_6519(%var_6521, %var_6522) /* ty=(Tensor[(14, 9, 5), float64], Tensor[(3, 14, 3), bool], bool) */
}

def @func_7429(%var_7419: Tensor[(360), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(8, 9, 5), float32], Tensor[(360), float32]) {
  %428 = cast(%var_7419, dtype="float32") /* ty=Tensor[(360), float32] */;
  %429 = cast(%var_7419, dtype="float32") /* ty=Tensor[(360), float32] */;
  %430 = reshape(%428, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
  %431 = reshape(%429, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
  %432 = @func_5832(%430, %431) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */;
  %433 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
  %434 = %432.0;
  (%433, %434, %var_7419)
}

def @func_886() -> Tensor[(7, 15, 13), int16] {
  %436 = fn () -> Tensor[(7, 15, 13), int16] {
    %435 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
    %435.3
  };
  %436() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_11860(%var_11841: Tensor[(32), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(16), float32], Tensor[(32), float32], Tensor[(7, 15, 13), int16], Tensor[(9, 15, 9), int16]) {
  %437 = cast(%var_11841, dtype="float32") /* ty=Tensor[(32), float32] */;
  %438 = reshape(%437, newshape=[4, 8]) /* ty=Tensor[(4, 8), float32] */;
  %439 = @func_3531(%438) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(4, 8), float32]) */;
  %440 = @func_8796() /* ty=(Tensor[(11, 6, 6), float32], Tensor[(7, 15, 13), int16]) */;
  %441 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 15, 9), float64] */;
  %442 = erf(%441) /* ty=Tensor[(9, 15, 9), float64] */;
  %443 = cast(%442, dtype="float32") /* ty=Tensor[(9, 15, 9), float32] */;
  %444 = sigmoid(%443) /* ty=Tensor[(9, 15, 9), float32] */;
  %445 = cast(%442, dtype="int16") /* ty=Tensor[(9, 15, 9), int16] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%444, dtype="int16") /* ty=Tensor[(9, 15, 9), int16] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %449 = @func_8398() /* ty=Tensor[(7, 15, 13), int16] */;
  %450 = %439.3;
  %451 = %440.1;
  %452 = bitwise_and(%447, %448) /* ty=Tensor[(9, 15, 9), int16] */;
  (%449, %450, %var_11841, %451, %452)
}

def @func_7432(%var_7430: Tensor[(360), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(8, 9, 5), float32], Tensor[(360), float32]) {
  @func_7429(%var_7430) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(8, 9, 5), float32], Tensor[(360), float32]) */
}

def @func_1248() -> (Tensor[(7, 15, 13), int16],) {
  %453 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %454 = %453.0;
  (%454,)
}

def @func_12881(%var_12880: Tensor[(36), float64]) -> (Tensor[(7, 15, 13), float32], Tensor[(1, 4, 9), float32], Tensor[(36), float64]) {
  %461 = fn (%var_12861: Tensor[(36), float64]) -> (Tensor[(7, 15, 13), float32], Tensor[(1, 4, 9), float32], Tensor[(36), float64]) {
    %455 = @func_10512() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %456 = cast(%var_12861, dtype="float64") /* ty=Tensor[(36), float64] */;
    %457 = reshape(%456, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), float64] */;
    %458 = @func_8828(%457) /* ty=(Tensor[(1, 4, 9), float32],) */;
    %459 = %455.0;
    %460 = %458.0;
    (%459, %460, %var_12861)
  };
  %461(%var_12880) /* ty=(Tensor[(7, 15, 13), float32], Tensor[(1, 4, 9), float32], Tensor[(36), float64]) */
}

def @func_2678() -> Tensor[(11, 6, 6), bool] {
  %462 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %462.1
}

def @func_519(%var_518: Tensor[(11, 6, 6), float64]) -> (Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) {
  %471 = fn (%var_510: Tensor[(11, 6, 6), float64]) -> (Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) {
    %463 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 6, 6), float64] */, dtype="float64") /* ty=Tensor[(1, 6, 6), float64] */;
    %464 = cast(%var_510, dtype="float64") /* ty=Tensor[(11, 6, 6), float64] */;
    %465 = cast(meta[relay.Constant][13] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %466 = cast(meta[relay.Constant][13] /* ty=Tensor[(1365), int16] */, dtype="int16") /* ty=Tensor[(1365), int16] */;
    %467 = reshape(%465, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %468 = reshape(%466, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %469 = floor_divide(%463, %464) /* ty=Tensor[(11, 6, 6), float64] */;
    %470 = @func_24(%467, %468) /* ty=Tensor[(7, 15, 13), int16] */;
    (%469, %470, meta[relay.Constant][13] /* ty=Tensor[(1365), int16] */)
  };
  %471(%var_518) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */
}

def @func_9323() -> (Tensor[(7, 15, 13), int16],) {
  %473 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %472 = @func_4392() /* ty=Tensor[(7, 15, 13), int16] */;
    (%472,)
  };
  %473() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_6759(%var_6757: Tensor[(2, 16, 2), uint32]) -> Tensor[(2, 16, 2), uint32] {
  @func_6756(%var_6757) /* ty=Tensor[(2, 16, 2), uint32] */
}

def @func_1876() -> Tensor[(7, 15, 13), int16] {
  @func_1874() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_3142(%var_3140: Tensor[(6, 1, 14), uint16], %var_3141: Tensor[(6, 1, 14), uint16]) -> Tensor[(6, ?, 14), bool] {
  %478 = fn (%var_3133: Tensor[(6, 1, 14), uint16], %var_3134: Tensor[(6, 1, 14), uint16]) -> Tensor[(6, ?, 14), bool] {
    %474 = cast(%var_3134, dtype="bool") /* ty=Tensor[(6, 1, 14), bool] */;
    %475 = shape_of(%var_3133, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(%var_3133, dtype="bool") /* ty=Tensor[(6, 1, 14), bool] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%476, %477) /* ty=Tensor[(6, ?, 14), bool] */
  };
  %478(%var_3140, %var_3141) /* ty=Tensor[(6, ?, 14), bool] */
}

def @func_12482(%var_12480: Tensor[(66, 6), float64]) -> (Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(66, 6), float64], Tensor[(2, 8), float32]) {
  @func_12479(%var_12480) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(66, 6), float64], Tensor[(2, 8), float32]) */
}

def @func_5836(%var_5834: Tensor[(8, 9, 5), float32], %var_5835: Tensor[(8, 9, 5), float32]) -> (Tensor[(8, 9, 5), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) {
  @func_5832(%var_5834, %var_5835) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */
}

def @func_3017() -> Tensor[(7, 15, 13), int16] {
  @func_3015() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_12945() -> Tensor[(7, 15, 13), int16] {
  %479 = @func_5984() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %479.0
}

def @func_11122() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %480 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %481 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %482 = %480.0;
  %483 = %481.0;
  (%482, %483)
}

def @func_2563() -> (Tensor[(7, 15, 13), bool],) {
  %484 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %485 = %484.1;
  (%485,)
}

def @func_10514() -> (Tensor[(7, 15, 13), float32],) {
  @func_10512() /* ty=(Tensor[(7, 15, 13), float32],) */
}

def @func_1250() -> (Tensor[(7, 15, 13), int16],) {
  @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_9342(%var_9340: Tensor[(1, 9, 16), float64], %var_9341: Tensor[(3, 9, 16), float64]) -> (Tensor[(3, 9, 16), float64],) {
  %491 = fn (%var_9326: Tensor[(1, 9, 16), float64], %var_9327: Tensor[(3, 9, 16), float64]) -> (Tensor[(3, 9, 16), float64],) {
    %486 = cast(%var_9326, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
    %487 = cast(%var_9327, dtype="float64") /* ty=Tensor[(3, 9, 16), float64] */;
    %488 = mod(%486, %487) /* ty=Tensor[(3, 9, 16), float64] */;
    %489 = cast(%488, dtype="float64") /* ty=Tensor[(3, 9, 16), float64] */;
    %490 = sinh(%489) /* ty=Tensor[(3, 9, 16), float64] */;
    (%490,)
  };
  %491(%var_9340, %var_9341) /* ty=(Tensor[(3, 9, 16), float64],) */
}

def @func_12647() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(6, 12, 2), float64], Tensor[(7, 15, 13), float32]) {
  @func_12645() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(6, 12, 2), float64], Tensor[(7, 15, 13), float32]) */
}

def @func_6836() -> (Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %497 = fn () -> (Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %492 = @func_4368() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
    %493 = @func_6809() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %494 = %492.1;
    %495 = @func_2871() /* ty=Tensor[(7, 15, 13), int16] */;
    %496 = %493.0;
    (%494, %495, %496)
  };
  %497() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_2226() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) {
  %509 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) {
    %498 = @func_2047() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %499 = cast(meta[relay.Constant][14] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %500 = reshape(%499, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %501 = @func_823(%500) /* ty=(Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(396), float64]) */;
    %502 = cast(meta[relay.Constant][14] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %503 = reshape(%502, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %504 = @func_744(%503) /* ty=(Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(11, 6, 6), float32]) */;
    %505 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
    %506 = %498.0;
    %507 = %501.1;
    %508 = %504.0;
    (%505, %506, %507, meta[relay.Constant][14] /* ty=Tensor[(396), float64] */, %508)
  };
  %509() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */
}

def @func_7660() -> (Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) {
  %510 = @func_2225() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */;
  %511 = @func_7374() /* ty=Tensor[(7, 15, 13), int16] */;
  %512 = %510.2;
  (%511, %512)
}

def @func_2725(%var_2723: Tensor[(66, 6), float64]) -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(66, 6), float64], Tensor[(7, 15, 13), float32]) {
  @func_2722(%var_2723) /* ty=(Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(66, 6), float64], Tensor[(7, 15, 13), float32]) */
}

def @func_4949() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %513 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %514 = @func_3633() /* ty=Tensor[(7, 15, 13), int16] */;
  %515 = %513.0;
  (%514, %515)
}

def @func_8029() -> (Tensor[(7, 15, 13), float32],) {
  %517 = fn () -> (Tensor[(7, 15, 13), float32],) {
    %516 = @func_8001() /* ty=Tensor[(7, 15, 13), float32] */;
    (%516,)
  };
  %517() /* ty=(Tensor[(7, 15, 13), float32],) */
}

def @func_9830() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) {
  %522 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) {
    %518 = @func_4538() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
    %519 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
    %520 = %518.0;
    %521 = %519.1;
    (%520, %521)
  };
  %522() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */
}

def @func_4815() -> Tensor[(7, 15, 13), int16] {
  @func_4813() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_10050() -> (Tensor[(7, 15, 13), int16],) {
  @func_10048() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_12807() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 16, 2), uint32], Tensor[(64, 1), float64]) {
  %523 = @func_4368() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %524 = cast(meta[relay.Constant][15] /* ty=Tensor[(64, 1), uint32] */, dtype="uint32") /* ty=Tensor[(64, 1), uint32] */;
  %525 = reshape(%524, newshape=[2, 16, 2]) /* ty=Tensor[(2, 16, 2), uint32] */;
  %526 = cast(meta[relay.Constant][15] /* ty=Tensor[(64, 1), uint32] */, dtype="float64") /* ty=Tensor[(64, 1), float64] */;
  %527 = @func_4475() /* ty=Tensor[(7, 15, 13), int16] */;
  %528 = %523.0;
  %529 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
  %530 = @func_6756(%525) /* ty=Tensor[(2, 16, 2), uint32] */;
  %531 = cosh(%526) /* ty=Tensor[(64, 1), float64] */;
  (%527, %528, %529, %530, %531)
}

def @func_2188() -> (Tensor[(7, 15, 13), float32],) {
  %534 = fn () -> (Tensor[(7, 15, 13), float32],) {
    %532 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %533 = %532.0;
    (%533,)
  };
  %534() /* ty=(Tensor[(7, 15, 13), float32],) */
}

def @func_8727() -> (Tensor[(11, 6, 6), uint32], Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16]) {
  %544 = fn () -> (Tensor[(11, 6, 6), uint32], Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16]) {
    %535 = @func_2678() /* ty=Tensor[(11, 6, 6), bool] */;
    %536 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 6, 6), bool] */, dtype="uint32") /* ty=Tensor[(11, 6, 6), uint32] */;
    %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
    %538 = cast(%535, dtype="uint32") /* ty=Tensor[(11, 6, 6), uint32] */;
    %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %540 = @func_7018() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %541 = logical_xor(%538, %539) /* ty=Tensor[(11, 6, 6), uint32] */;
    %542 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
    %543 = %540.0;
    (%541, %542, %543)
  };
  %544() /* ty=(Tensor[(11, 6, 6), uint32], Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16]) */
}

def @func_8686() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) {
  %545 = @func_5865() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %546 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %547 = %545.0;
  %548 = %546.1;
  (%547, %548)
}

def @func_7791() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %549 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
  %550 = @func_4750() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %551 = @func_2591() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */;
  %552 = %549.0;
  %553 = %550.0;
  %554 = %551.0;
  (%552, %553, %554)
}

def @func_12498() -> (Tensor[(7, 15, 13), int16],) {
  @func_12496() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_1496(%var_1494: Tensor[(7, 15, 13), int16]) -> (Tensor[(7, 15, 13), uint8],) {
  @func_1493(%var_1494) /* ty=(Tensor[(7, 15, 13), uint8],) */
}

def @func_2073() -> Tensor[(7, 15, 13), float32] {
  %556 = fn () -> Tensor[(7, 15, 13), float32] {
    %555 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %555.0
  };
  %556() /* ty=Tensor[(7, 15, 13), float32] */
}

def @func_9618() -> (Tensor[(11, 6, 6), bool],) {
  %559 = fn () -> (Tensor[(11, 6, 6), bool],) {
    %557 = @func_3961() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
    %558 = %557.1;
    (%558,)
  };
  %559() /* ty=(Tensor[(11, 6, 6), bool],) */
}

def @func_6397() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  @func_6395() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_2125(%var_2123: Tensor[(7, 15, 13), int16]) -> (Tensor[(7, 15, 13), bool],) {
  @func_2122(%var_2123) /* ty=(Tensor[(7, 15, 13), bool],) */
}

def @func_3348() -> Tensor[(7, 15, 13), int16] {
  %560 = fn () -> Tensor[(7, 15, 13), int16] {
    @func_2871() /* ty=Tensor[(7, 15, 13), int16] */
  };
  %560() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_10163() -> Tensor[(7, 15, 13), int32] {
  @func_10161() /* ty=Tensor[(7, 15, 13), int32] */
}

def @func_5311() -> Tensor[(7, 15, 13), float64] {
  %561 = @func_2636() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %561.0
}

def @func_3292() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %565 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %562 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
    %563 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
    %564 = %562.0;
    (%563, %564)
  };
  %565() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_4593() -> (Tensor[(13, 3, 8), bool],) {
  @func_4591() /* ty=(Tensor[(13, 3, 8), bool],) */
}

def @func_12645() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(6, 12, 2), float64], Tensor[(7, 15, 13), float32]) {
  %566 = @func_12053() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %567 = @func_9897() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %568 = @func_9672() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %569 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 12, 2), float32] */, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %570 = asin(%569) /* ty=Tensor[(6, 12, 2), float32] */;
  %571 = cast(%570, dtype="float64") /* ty=Tensor[(6, 12, 2), float64] */;
  %572 = %566.0;
  %573 = @func_11293() /* ty=Tensor[(7, 15, 13), int16] */;
  %574 = %567.0;
  %575 = %568.0;
  %576 = acos(%571) /* ty=Tensor[(6, 12, 2), float64] */;
  %577 = @func_10087() /* ty=Tensor[(7, 15, 13), float32] */;
  (%572, %573, %574, %575, %576, %577)
}

def @func_4220() -> (Tensor[(7, 15, 13), float64],) {
  @func_4218() /* ty=(Tensor[(7, 15, 13), float64],) */
}

def @func_3607(%var_3599: Tensor[(14, 10), uint64], %var_3600: Tensor[(14, 10), uint64]) -> (Tensor[(14, 10), uint64],) {
  %578 = cast(%var_3600, dtype="uint64") /* ty=Tensor[(14, 10), uint64] */;
  %579 = shape_of(%var_3599, dtype="int32") /* ty=Tensor[(2), int32] */;
  %580 = cast(%var_3599, dtype="uint64") /* ty=Tensor[(14, 10), uint64] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %582 = left_shift(%580, %581) /* ty=Tensor[(14, 10), uint64] */;
  (%582,)
}

def @func_8658() -> (Tensor[(7, 15, 13), float32], Tensor[(5, 12, 8), float32]) {
  %587 = fn () -> (Tensor[(7, 15, 13), float32], Tensor[(5, 12, 8), float32]) {
    %583 = @func_8028() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %584 = @func_3470() /* ty=(Tensor[(5, 12, 8), float32],) */;
    %585 = %583.0;
    %586 = %584.0;
    (%585, %586)
  };
  %587() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(5, 12, 8), float32]) */
}

def @func_4639() -> Tensor[(7, 15, 13), float64] {
  %601 = fn () -> Tensor[(7, 15, 13), float64] {
    %588 = @func_4368() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
    %589 = %588.1;
    %590 = cast(%589, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
    %591 = atan(%590) /* ty=Tensor[(7, 15, 13), float64] */;
    %592 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 15, 13), int32] */, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
    %593 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
    %594 = cast(%589, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
    %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %596 = divide(%594, %595) /* ty=Tensor[(7, 15, 13), float32] */;
    %597 = cast(%596, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
    %598 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %599 = cast(%591, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
    %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%599, %600) /* ty=Tensor[(7, 15, 13), float64] */
  };
  %601() /* ty=Tensor[(7, 15, 13), float64] */
}

def @func_10946() -> (Tensor[(11, 6, 6), float32], Tensor[(8, 9, 5), float32], Tensor[(360), float32]) {
  %602 = @func_9617() /* ty=(Tensor[(11, 6, 6), bool],) */;
  %603 = %602.0;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(11, 6, 6), float32] */;
  %605 = cast(meta[relay.Constant][19] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %606 = cast(meta[relay.Constant][19] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %607 = reshape(%605, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
  %608 = reshape(%606, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
  %609 = @func_5832(%607, %608) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */;
  %610 = tan(%604) /* ty=Tensor[(11, 6, 6), float32] */;
  %611 = %609.0;
  (%610, %611, meta[relay.Constant][19] /* ty=Tensor[(360), float32] */)
}

def @func_3808() -> (Tensor[(7, 15, 13), int16],) {
  %612 = @func_2994() /* ty=Tensor[(7, 15, 13), int16] */;
  (%612,)
}

def @func_218(%var_216: Tensor[(1, 2, 8), float32], %var_217: Tensor[(2, 2, 8), float32]) -> (Tensor[(2, 2, 8), float32],) {
  @func_214(%var_216, %var_217) /* ty=(Tensor[(2, 2, 8), float32],) */
}

def @func_2680() -> Tensor[(11, 6, 6), bool] {
  @func_2678() /* ty=Tensor[(11, 6, 6), bool] */
}

def @func_3470() -> (Tensor[(5, 12, 8), float32],) {
  %613 = @func_3354() /* ty=(Tensor[(5, 12, 8), bool],) */;
  %614 = %613.0;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(5, 12, 8), float32] */;
  %616 = sin(%615) /* ty=Tensor[(5, 12, 8), float32] */;
  (%616,)
}

def @func_6325() -> Tensor[(7, 15, 13), int16] {
  %617 = @func_3328() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */;
  %617.1
}

def @func_6395() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %618 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %619 = @func_4570() /* ty=Tensor[(7, 15, 13), int16] */;
  %620 = %618.0;
  (%619, %620)
}

def @func_4311(%var_4264: Tensor[(11, 6, 6), bool]) -> (Tensor[(11, 6, 6), bool], Tensor[(11, 6, 6), bool], Tensor[(5, 12, 8), float32]) {
  %621 = @func_2678() /* ty=Tensor[(11, 6, 6), bool] */;
  %622 = cast(%var_4264, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %626 = greater_equal(%624, %625) /* ty=Tensor[(11, 6, 6), bool] */;
  %627 = cast(%626, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %628 = shape_of(%var_4264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%var_4264, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %631 = cast(%621, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %632 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%626, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %635 = @func_3470() /* ty=(Tensor[(5, 12, 8), float32],) */;
  %636 = less(%629, %630) /* ty=Tensor[(11, 6, 6), bool] */;
  %637 = logical_and(%633, %634) /* ty=Tensor[(11, 6, 6), bool] */;
  %638 = %635.0;
  (%636, %637, %638)
}

def @func_4314(%var_4312: Tensor[(11, 6, 6), bool]) -> (Tensor[(11, 6, 6), bool], Tensor[(11, 6, 6), bool], Tensor[(5, 12, 8), float32]) {
  @func_4311(%var_4312) /* ty=(Tensor[(11, 6, 6), bool], Tensor[(11, 6, 6), bool], Tensor[(5, 12, 8), float32]) */
}

def @func_7356() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) {
  %639 = @func_6835() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %640 = @func_3347() /* ty=Tensor[(7, 15, 13), int16] */;
  %641 = %639.0;
  (%640, %641)
}

def @func_5568() -> (Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) {
  %650 = fn () -> (Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) {
    %642 = @func_2187() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %643 = cast(meta[relay.Constant][20] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
    %644 = reshape(%643, newshape=[4, 8]) /* ty=Tensor[(4, 8), float32] */;
    %645 = @func_3531(%644) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(4, 8), float32]) */;
    %646 = @func_2844() /* ty=(Tensor[(11, 6, 6), bool],) */;
    %647 = %642.0;
    %648 = %645.3;
    %649 = %646.0;
    (%647, %648, meta[relay.Constant][20] /* ty=Tensor[(32), float32] */, %649)
  };
  %650() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */
}

def @func_3354() -> (Tensor[(5, 12, 8), bool],) {
  %651 = cast(meta[relay.Constant][21] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %652 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 12, 8), int16] */, dtype="bool") /* ty=Tensor[(5, 12, 8), bool] */;
  %653 = greater_equal(%651, %652) /* ty=Tensor[(5, 12, 8), bool] */;
  (%653,)
}

def @func_4392() -> Tensor[(7, 15, 13), int16] {
  %654 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %654.0
}

def @func_4168() -> (Tensor[(7, 15, 13), int8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(396), float64]) {
  %655 = @func_3684() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8]) */;
  %656 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %657 = @func_2563() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %658 = @func_2312() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
  %659 = @func_2839() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %660 = cast(meta[relay.Constant][23] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %661 = reshape(%660, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
  %662 = @func_4112(%661) /* ty=(Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(11, 6, 6), float64], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */;
  %663 = %655.2;
  %664 = %656.3;
  %665 = %657.0;
  %666 = %658.0;
  %667 = %659.0;
  %668 = %662.2;
  (%663, %664, %665, %666, %667, %668, meta[relay.Constant][23] /* ty=Tensor[(396), float64] */)
}

def @func_916() -> Tensor[(7, 15, 13), int16] {
  @func_914() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_11743(%var_11742: Tensor[(3, 13, 11), uint32]) -> (Tensor[(3, 13, 11), uint32],) {
  %674 = fn (%var_11735: Tensor[(3, 13, 11), uint32]) -> (Tensor[(3, 13, 11), uint32],) {
    %669 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 13, 11), uint32] */, dtype="uint32") /* ty=Tensor[(3, 13, 11), uint32] */;
    %670 = shape_of(%var_11735, dtype="int32") /* ty=Tensor[(3), int32] */;
    %671 = cast(%var_11735, dtype="uint32") /* ty=Tensor[(3, 13, 11), uint32] */;
    %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %673 = logical_xor(%671, %672) /* ty=Tensor[(3, 13, 11), uint32] */;
    (%673,)
  };
  %674(%var_11742) /* ty=(Tensor[(3, 13, 11), uint32],) */
}

def @func_2908() -> (Tensor[(7, 15, 13), int16],) {
  %675 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %676 = %675.1;
  (%676,)
}

def @func_6472(%var_6424: bool) -> (Tensor[(3, 14, 3), bool], Tensor[(3, 14, 3), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(168), float32]) {
  %677 = cast(%var_6424, dtype="bool") /* ty=bool */;
  %678 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 14, 3), bool] */, dtype="bool") /* ty=Tensor[(3, 14, 3), bool] */;
  %679 = cast(%var_6424, dtype="bool") /* ty=bool */;
  %680 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 14, 3), bool] */, dtype="bool") /* ty=Tensor[(3, 14, 3), bool] */;
  %681 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %682 = cast(meta[relay.Constant][26] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %683 = reshape(%682, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %684 = @func_5401(%683) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */;
  %685 = logical_or(%677, %678) /* ty=Tensor[(3, 14, 3), bool] */;
  %686 = greater(%679, %680) /* ty=Tensor[(3, 14, 3), bool] */;
  %687 = %681.1;
  %688 = %684.1;
  (%685, %686, %687, %688, meta[relay.Constant][26] /* ty=Tensor[(168), float32] */)
}

def @func_1380() -> Tensor[(7, 15, 13), int16] {
  @func_1378() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_4419() -> (Tensor[(7, 15, 13), float32],) {
  @func_4417() /* ty=(Tensor[(7, 15, 13), float32],) */
}

def @func_10854() -> Tensor[(7, 15, 13), int16] {
  %689 = fn () -> Tensor[(7, 15, 13), int16] {
    @func_3633() /* ty=Tensor[(7, 15, 13), int16] */
  };
  %689() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_6097(%var_6095: Tensor[(5, 12, 8), float32], %var_6096: Tensor[(198, 2), float64]) -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float64], Tensor[(5, 12, 8), int32], Tensor[(5, 12, 8), float64], Tensor[(11, 6, 6), float64], Tensor[(198, 2), float64]) {
  %706 = fn (%var_6068: Tensor[(5, 12, 8), float32], %var_6085: Tensor[(198, 2), float64]) -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float64], Tensor[(5, 12, 8), int32], Tensor[(5, 12, 8), float64], Tensor[(11, 6, 6), float64], Tensor[(198, 2), float64]) {
    %690 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
    %691 = @func_3470() /* ty=(Tensor[(5, 12, 8), float32],) */;
    %692 = %691.0;
    %693 = cast(%var_6068, dtype="int32") /* ty=Tensor[(5, 12, 8), int32] */;
    %694 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
    %695 = cast(%692, dtype="int32") /* ty=Tensor[(5, 12, 8), int32] */;
    %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %697 = cast(%var_6068, dtype="float64") /* ty=Tensor[(5, 12, 8), float64] */;
    %698 = cast(%var_6085, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
    %699 = reshape(%698, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
    %700 = @func_517(%699) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
    %701 = @func_5311() /* ty=Tensor[(7, 15, 13), float64] */;
    %702 = %690.1;
    %703 = bitwise_and(%695, %696) /* ty=Tensor[(5, 12, 8), int32] */;
    %704 = asin(%697) /* ty=Tensor[(5, 12, 8), float64] */;
    %705 = %700.0;
    (%701, %702, %703, %704, %705, %var_6085)
  };
  %706(%var_6095, %var_6096) /* ty=(Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float64], Tensor[(5, 12, 8), int32], Tensor[(5, 12, 8), float64], Tensor[(11, 6, 6), float64], Tensor[(198, 2), float64]) */
}

def @main() -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16], Tensor[(20), int16], Tensor[(7, 15, 13), int16], Tensor[(4, 80), float64]) {
  %707 = @func_2638() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %708 = cast(meta[relay.Constant][27] /* ty=Tensor[(20), int16] */, dtype="int16") /* ty=Tensor[(20), int16] */;
  %709 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 80), int16] */, dtype="int16") /* ty=Tensor[(4, 80), int16] */;
  %710 = reshape(%708, newshape=[20]) /* ty=Tensor[(20), int16] */;
  %711 = reshape(%709, newshape=[2, 160]) /* ty=Tensor[(2, 160), int16] */;
  %712 = @func_8139(%710, %711) /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(20), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 160), uint64]) */;
  %713 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 80), int16] */, dtype="float64") /* ty=Tensor[(4, 80), float64] */;
  %714 = %707.0;
  %715 = %712.5;
  %716 = @func_8473() /* ty=Tensor[(7, 15, 13), int16] */;
  %717 = acos(%713) /* ty=Tensor[(4, 80), float64] */;
  (%714, %715, meta[relay.Constant][27] /* ty=Tensor[(20), int16] */, %716, %717)
}

def @func_5168() -> (Tensor[(7, 15, 13), int16],) {
  @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_8828(%var_8815: Tensor[(1, 4, 9), float64]) -> (Tensor[(1, 4, 9), float32],) {
  %718 = cast(%var_8815, dtype="float64") /* ty=Tensor[(1, 4, 9), float64] */;
  %719 = asin(%718) /* ty=Tensor[(1, 4, 9), float64] */;
  %720 = cast(%719, dtype="float32") /* ty=Tensor[(1, 4, 9), float32] */;
  %721 = atan(%720) /* ty=Tensor[(1, 4, 9), float32] */;
  (%721,)
}

def @func_6194() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %725 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %722 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %723 = %722.0;
    %724 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
    (%723, %724)
  };
  %725() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_6229() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %731 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
    %726 = @func_4014() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %727 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
    %728 = cast(%727, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
    %729 = %726.0;
    %730 = log2(%728) /* ty=Tensor[(7, 15, 13), float32] */;
    (%729, %730)
  };
  %731() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */
}

def @func_7358() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) {
  @func_7356() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */
}

def @func_214(%var_202: Tensor[(1, 2, 8), float32], %var_203: Tensor[(2, 2, 8), float32]) -> (Tensor[(2, 2, 8), float32],) {
  %732 = cast(%var_202, dtype="float32") /* ty=Tensor[(1, 2, 8), float32] */;
  %733 = cast(%var_203, dtype="float32") /* ty=Tensor[(2, 2, 8), float32] */;
  %734 = subtract(%732, %733) /* ty=Tensor[(2, 2, 8), float32] */;
  (%734,)
}

def @func_3611(%var_3609: Tensor[(14, 10), uint64], %var_3610: Tensor[(14, 10), uint64]) -> (Tensor[(14, 10), uint64],) {
  @func_3607(%var_3609, %var_3610) /* ty=(Tensor[(14, 10), uint64],) */
}

def @func_3939() -> Tensor[(7, 15, 13), int16] {
  %735 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %735.1
}

def @func_9229(%var_9228: Tensor[(11, 6, 6), bool]) -> Tensor[(11, 6, 6), uint16] {
  %741 = fn (%var_9219: Tensor[(11, 6, 6), bool]) -> Tensor[(11, 6, 6), uint16] {
    %736 = @func_2678() /* ty=Tensor[(11, 6, 6), bool] */;
    %737 = cast(%var_9219, dtype="uint16") /* ty=Tensor[(11, 6, 6), uint16] */;
    %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%736, dtype="uint16") /* ty=Tensor[(11, 6, 6), uint16] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    bitwise_xor(%739, %740) /* ty=Tensor[(11, 6, 6), uint16] */
  };
  %741(%var_9228) /* ty=Tensor[(11, 6, 6), uint16] */
}

def @func_3764() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %742 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %743 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %744 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %745 = %742.0;
  %746 = %743.0;
  %747 = %744.0;
  %748 = @func_3028() /* ty=Tensor[(7, 15, 13), int16] */;
  %749 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
  %750 = @func_3028() /* ty=Tensor[(7, 15, 13), int16] */;
  (%745, %746, %747, %748, %749, %750)
}

def @func_8895() -> (Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float32]) {
  %751 = @func_4368() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
  %752 = @func_2591() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */;
  %753 = %751.1;
  %754 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
  %755 = %752.0;
  (%753, %754, %755)
}

def @func_9474() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %759 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %756 = @func_4014() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %757 = %756.0;
    %758 = @func_6500() /* ty=Tensor[(7, 15, 13), int16] */;
    (%757, %758)
  };
  %759() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_5880() -> Tensor[(7, 15, 13), float32] {
  %760 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %760.0
}

def @func_10481() -> Tensor[(7, 15, 13), float64] {
  %762 = fn () -> Tensor[(7, 15, 13), float64] {
    %761 = @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */;
    %761.1
  };
  %762() /* ty=Tensor[(7, 15, 13), float64] */
}

def @func_11426() -> (Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) {
  %767 = fn () -> (Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) {
    %763 = @func_7301() /* ty=(Tensor[(5, 12, 8), bool],) */;
    %764 = @func_9746() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
    %765 = %763.0;
    %766 = %764.0;
    (%765, %766)
  };
  %767() /* ty=(Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) */
}

def @func_7302() -> (Tensor[(5, 12, 8), bool],) {
  %770 = fn () -> (Tensor[(5, 12, 8), bool],) {
    %768 = @func_3354() /* ty=(Tensor[(5, 12, 8), bool],) */;
    %769 = %768.0;
    (%769,)
  };
  %770() /* ty=(Tensor[(5, 12, 8), bool],) */
}

def @func_2049() -> (Tensor[(7, 15, 13), int16],) {
  @func_2047() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_3531(%var_3528: Tensor[(4, 8), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(4, 8), float32]) {
  %771 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %772 = %771.0;
  %773 = cast(%772, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
  %774 = reshape(%773, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
  %775 = @func_2036(%774) /* ty=(Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), uint8]) */;
  %776 = cast(meta[relay.Constant][29] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %777 = cast(%var_3528, dtype="float32") /* ty=Tensor[(4, 8), float32] */;
  %778 = reshape(%776, newshape=[1, 2, 8]) /* ty=Tensor[(1, 2, 8), float32] */;
  %779 = reshape(%777, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), float32] */;
  %780 = @func_214(%778, %779) /* ty=(Tensor[(2, 2, 8), float32],) */;
  %781 = %775.0;
  %782 = %780.0;
  (%772, %781, %782, meta[relay.Constant][29] /* ty=Tensor[(16), float32] */, %var_3528)
}

def @func_10147() -> (Tensor[(7, 15, 13), int16],) {
  @func_10145() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_2565() -> (Tensor[(7, 15, 13), bool],) {
  @func_2563() /* ty=(Tensor[(7, 15, 13), bool],) */
}

def @func_2872() -> Tensor[(7, 15, 13), int16] {
  %784 = fn () -> Tensor[(7, 15, 13), int16] {
    %783 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %783.0
  };
  %784() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_6327() -> Tensor[(7, 15, 13), int16] {
  @func_6325() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_7940() -> (Tensor[(7, 15, 13), bool],) {
  %787 = fn () -> (Tensor[(7, 15, 13), bool],) {
    %785 = @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */;
    %786 = %785.0;
    (%786,)
  };
  %787() /* ty=(Tensor[(7, 15, 13), bool],) */
}

def @func_2047() -> (Tensor[(7, 15, 13), int16],) {
  %788 = @func_1874() /* ty=Tensor[(7, 15, 13), int16] */;
  (%788,)
}

def @func_5296() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) {
  %789 = @func_4168() /* ty=(Tensor[(7, 15, 13), int8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(396), float64]) */;
  %790 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %791 = %790.1;
  %792 = cast(%791, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
  %793 = @func_2563() /* ty=(Tensor[(7, 15, 13), bool],) */;
  %794 = %789.3;
  %795 = sinh(%792) /* ty=Tensor[(7, 15, 13), float32] */;
  %796 = %793.0;
  (%794, %795, %796)
}

def @func_5403(%var_5402: Tensor[(168), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) {
  %816 = fn (%var_5390: Tensor[(168), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) {
    %797 = @func_3978() /* ty=(Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) */;
    %798 = @func_4392() /* ty=Tensor[(7, 15, 13), int16] */;
    %799 = cast(%798, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
    %800 = @func_885() /* ty=Tensor[(7, 15, 13), int16] */;
    %801 = cast(%800, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
    %802 = reshape(%799, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %803 = reshape(%801, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %804 = @func_3684() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8]) */;
    %805 = cast(%var_5390, dtype="float32") /* ty=Tensor[(168), float32] */;
    %806 = reshape(%805, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), float32] */;
    %807 = @func_4606(%806) /* ty=(Tensor[(12, 7, 2), float32], Tensor[(11, 6, 6), bool]) */;
    %808 = @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */;
    %809 = @func_2047() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %810 = %797.0;
    %811 = @func_24(%802, %803) /* ty=Tensor[(7, 15, 13), int16] */;
    %812 = %804.2;
    %813 = %807.1;
    %814 = %808.0;
    %815 = %809.0;
    (%798, %800, %810, %811, %812, %813, %var_5390, %814, %815)
  };
  %816(%var_5402) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */
}

def @func_2841() -> (Tensor[(7, 15, 13), bool],) {
  @func_2839() /* ty=(Tensor[(7, 15, 13), bool],) */
}

def @func_9501() -> (Tensor[(7, 15, 13), int16],) {
  @func_9499() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_10145() -> (Tensor[(7, 15, 13), int16],) {
  %817 = @func_5865() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %818 = %817.0;
  (%818,)
}

def @func_914() -> Tensor[(7, 15, 13), int16] {
  %819 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %819.1
}

def @func_9499() -> (Tensor[(7, 15, 13), int16],) {
  %820 = @func_7374() /* ty=Tensor[(7, 15, 13), int16] */;
  (%820,)
}

def @func_9812() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(168), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %832 = fn () -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(168), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %821 = @func_8028() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %822 = @func_4417() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %823 = cast(meta[relay.Constant][30] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %824 = reshape(%823, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %825 = @func_5401(%824) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */;
    %826 = @func_7720() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %827 = %821.0;
    %828 = %822.0;
    %829 = %825.1;
    %830 = @func_3633() /* ty=Tensor[(7, 15, 13), int16] */;
    %831 = %826.0;
    (%827, %828, %829, meta[relay.Constant][30] /* ty=Tensor[(168), float32] */, %830, %831)
  };
  %832() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(168), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_12947() -> Tensor[(7, 15, 13), int16] {
  @func_12945() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_3810() -> (Tensor[(7, 15, 13), int16],) {
  @func_3808() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_8002() -> Tensor[(7, 15, 13), float32] {
  %834 = fn () -> Tensor[(7, 15, 13), float32] {
    %833 = @func_6576() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32]) */;
    %833.1
  };
  %834() /* ty=Tensor[(7, 15, 13), float32] */
}

def @func_9108() -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float64]) {
  %838 = fn () -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float64]) {
    %835 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
    %836 = @func_8280() /* ty=Tensor[(7, 15, 13), float32] */;
    %837 = @func_5311() /* ty=Tensor[(7, 15, 13), float64] */;
    (%835, %836, %837)
  };
  %838() /* ty=(Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float64]) */
}

def @func_12055() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  @func_12053() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_2910() -> (Tensor[(7, 15, 13), int16],) {
  @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_7455() -> (Tensor[(7, 15, 13), int16],) {
  %839 = @func_5984() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %840 = %839.0;
  (%840,)
}

def @func_8938() -> (Tensor[(16), float32], Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16]) {
  %847 = fn () -> (Tensor[(16), float32], Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16]) {
    %841 = @func_5670() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(16), float32]) */;
    %842 = @func_4368() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */;
    %843 = @func_3808() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %844 = %841.6;
    %845 = %842.1;
    %846 = %843.0;
    (%844, %845, %846)
  };
  %847() /* ty=(Tensor[(16), float32], Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16]) */
}

def @func_3390() -> (Tensor[(7, 15, 13), bool],) {
  %848 = @func_3328() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */;
  %849 = %848.0;
  (%849,)
}

def @func_12496() -> (Tensor[(7, 15, 13), int16],) {
  %850 = @func_7455() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %851 = %850.0;
  (%851,)
}

def @func_3015() -> Tensor[(7, 15, 13), int16] {
  %852 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %852.0
}

def @func_11923() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %853 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %854 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %855 = %853.0;
  %856 = %854.0;
  (%855, %856)
}

def @func_4571() -> Tensor[(7, 15, 13), int16] {
  %858 = fn () -> Tensor[(7, 15, 13), int16] {
    %857 = @func_4014() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %857.0
  };
  %858() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_12579() -> Tensor[(7, 15, 13), int16] {
  @func_4570() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_4417() -> (Tensor[(7, 15, 13), float32],) {
  %859 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %860 = %859.0;
  (%860,)
}

def @func_10061() -> (Tensor[(7, 15, 13), int16],) {
  %863 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %861 = @func_9000() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %862 = %861.0;
    (%862,)
  };
  %863() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_3979() -> (Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) {
  %867 = fn () -> (Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) {
    %864 = @func_3354() /* ty=(Tensor[(5, 12, 8), bool],) */;
    %865 = %864.0;
    %866 = @func_3028() /* ty=Tensor[(7, 15, 13), int16] */;
    (%865, %866)
  };
  %867() /* ty=(Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) */
}

def @func_10624() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), float64]) {
  %874 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), float64]) {
    %868 = @func_6896() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
    %869 = @func_3961() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
    %870 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
    %871 = %868.1;
    %872 = %869.1;
    %873 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
    (%870, %871, %872, %873)
  };
  %874() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), float64]) */
}

def @func_6897() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %879 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %875 = @func_6621() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %876 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %877 = %875.0;
    %878 = %876.0;
    (%877, %878)
  };
  %879() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_2638() -> (Tensor[(7, 15, 13), float64],) {
  @func_2636() /* ty=(Tensor[(7, 15, 13), float64],) */
}

def @func_10087() -> Tensor[(7, 15, 13), float32] {
  %880 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %880.0
}

def @func_6972(%var_6903: Tensor[(6, 8, 14), uint8], %var_6904: Tensor[(6, 8, 14), uint8], %var_6947: Tensor[(168), float32]) -> (Tensor[(6, 8, 14), uint8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool], Tensor[(168), float32], Tensor[(7, 15, 13), int16]) {
  %881 = cast(%var_6904, dtype="uint8") /* ty=Tensor[(6, 8, 14), uint8] */;
  %882 = shape_of(%var_6903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%var_6903, dtype="uint8") /* ty=Tensor[(6, 8, 14), uint8] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %885 = cast(%var_6947, dtype="float32") /* ty=Tensor[(168), float32] */;
  %886 = reshape(%885, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), float32] */;
  %887 = @func_4606(%886) /* ty=(Tensor[(12, 7, 2), float32], Tensor[(11, 6, 6), bool]) */;
  %888 = @func_4949() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %889 = bitwise_and(%883, %884) /* ty=Tensor[(6, 8, 14), uint8] */;
  %890 = @func_2994() /* ty=Tensor[(7, 15, 13), int16] */;
  %891 = @func_1874() /* ty=Tensor[(7, 15, 13), int16] */;
  %892 = %887.1;
  %893 = %888.0;
  (%889, %890, %891, %892, %var_6947, %893)
}

def @func_4591() -> (Tensor[(13, 3, 8), bool],) {
  %894 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 3, 8), float32] */;
  %895 = asin(%894) /* ty=Tensor[(13, 3, 8), float32] */;
  %896 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 3, 8), float32] */, dtype="bool") /* ty=Tensor[(13, 3, 8), bool] */;
  %897 = shape_of(%895, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%895, dtype="bool") /* ty=Tensor[(13, 3, 8), bool] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %900 = less_equal(%898, %899) /* ty=Tensor[(13, 3, 8), bool] */;
  (%900,)
}

def @func_8282() -> Tensor[(7, 15, 13), float32] {
  @func_8280() /* ty=Tensor[(7, 15, 13), float32] */
}

def @func_8475() -> Tensor[(7, 15, 13), int16] {
  @func_8473() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_4644() -> Tensor[(7, 15, 13), int16] {
  %901 = @func_3978() /* ty=(Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) */;
  %901.1
}

def @func_8280() -> Tensor[(7, 15, 13), float32] {
  %902 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %902.0
}

def @func_10646() -> Tensor[(7, 15, 13), int16] {
  %903 = fn () -> Tensor[(7, 15, 13), int16] {
    @func_6500() /* ty=Tensor[(7, 15, 13), int16] */
  };
  %903() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_8577() -> (Tensor[(7, 15, 13), int16],) {
  %906 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %904 = @func_2908() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %905 = %904.0;
    (%905,)
  };
  %906() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_12522() -> Tensor[(7, 15, 13), int16] {
  @func_2994() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_7721() -> (Tensor[(7, 15, 13), int16],) {
  %909 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %907 = @func_4538() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
    %908 = %907.0;
    (%908,)
  };
  %909() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_7128(%var_7126: Tensor[(360), float32], %var_7127: Tensor[(140), uint64]) -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float64], Tensor[(360), float32], Tensor[(14, 10), uint64], Tensor[(140), uint64], Tensor[(8, 9, 5), float64]) {
  %928 = fn (%var_7099: Tensor[(360), float32], %var_7113: Tensor[(140), uint64]) -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float64], Tensor[(360), float32], Tensor[(14, 10), uint64], Tensor[(140), uint64], Tensor[(8, 9, 5), float64]) {
    %910 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %911 = @func_4218() /* ty=(Tensor[(7, 15, 13), float64],) */;
    %912 = cast(%var_7113, dtype="uint64") /* ty=Tensor[(140), uint64] */;
    %913 = cast(%var_7113, dtype="uint64") /* ty=Tensor[(140), uint64] */;
    %914 = reshape(%912, newshape=[14, 10]) /* ty=Tensor[(14, 10), uint64] */;
    %915 = reshape(%913, newshape=[14, 10]) /* ty=Tensor[(14, 10), uint64] */;
    %916 = @func_3607(%914, %915) /* ty=(Tensor[(14, 10), uint64],) */;
    %917 = cast(%var_7099, dtype="float32") /* ty=Tensor[(360), float32] */;
    %918 = cast(%var_7099, dtype="float32") /* ty=Tensor[(360), float32] */;
    %919 = reshape(%917, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
    %920 = reshape(%918, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), float32] */;
    %921 = @func_5832(%919, %920) /* ty=(Tensor[(8, 9, 5), float32], Tensor[(32), float32], Tensor[(11, 6, 6), bool]) */;
    %922 = %921.0;
    %923 = cast(%922, dtype="float64") /* ty=Tensor[(8, 9, 5), float64] */;
    %924 = %910.0;
    %925 = %911.0;
    %926 = %916.0;
    %927 = sin(%923) /* ty=Tensor[(8, 9, 5), float64] */;
    (%924, %925, %var_7099, %926, %var_7113, %927)
  };
  %928(%var_7126, %var_7127) /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float64], Tensor[(360), float32], Tensor[(14, 10), uint64], Tensor[(140), uint64], Tensor[(8, 9, 5), float64]) */
}

def @func_2039(%var_2037: Tensor[(7, 15, 13), int16]) -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), uint8]) {
  @func_2036(%var_2037) /* ty=(Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), uint8]) */
}

def @func_4394() -> Tensor[(7, 15, 13), int16] {
  @func_4392() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_5532(%var_5525: Tensor[(5, 16, 12), int64]) -> Tensor[(5, 16, 12), int64] {
  %929 = cast(%var_5525, dtype="int64") /* ty=Tensor[(5, 16, 12), int64] */;
  %930 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(5, 16, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 16, 12), int64] */, dtype="int64") /* ty=Tensor[(5, 16, 12), int64] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%931, %932) /* ty=Tensor[(5, 16, 12), int64] */
}

def @func_7879() -> (Tensor[(7, 15, 13), int16],) {
  %934 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %933 = @func_4570() /* ty=Tensor[(7, 15, 13), int16] */;
    (%933,)
  };
  %934() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_5671() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(16), float32]) {
  %948 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(16), float32]) {
    %935 = @func_2312() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
    %936 = @func_4168() /* ty=(Tensor[(7, 15, 13), int8], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(396), float64]) */;
    %937 = @func_3978() /* ty=(Tensor[(5, 12, 8), bool], Tensor[(7, 15, 13), int16]) */;
    %938 = cast(meta[relay.Constant][33] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %939 = cast(meta[relay.Constant][34] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %940 = reshape(%938, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %941 = reshape(%939, newshape=[16]) /* ty=Tensor[(16), float32] */;
    %942 = @func_797(%940, %941) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(32), float32]) */;
    %943 = @func_2994() /* ty=Tensor[(7, 15, 13), int16] */;
    %944 = %935.1;
    %945 = %936.2;
    %946 = %937.1;
    %947 = %942.3;
    (%943, %944, %945, %946, %947, meta[relay.Constant][33] /* ty=Tensor[(396), float64] */, meta[relay.Constant][34] /* ty=Tensor[(16), float32] */)
  };
  %948() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(396), float64], Tensor[(16), float32]) */
}

def @func_4369() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) {
  %952 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) {
    %949 = @func_2492() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint16]) */;
    %950 = @func_3939() /* ty=Tensor[(7, 15, 13), int16] */;
    %951 = %949.0;
    (%950, %951)
  };
  %952() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */
}

def @func_825(%var_824: Tensor[(396), float64]) -> (Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(396), float64]) {
  %959 = fn (%var_816: Tensor[(396), float64]) -> (Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(396), float64]) {
    %953 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
    %954 = cast(%var_816, dtype="float64") /* ty=Tensor[(396), float64] */;
    %955 = reshape(%954, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float64] */;
    %956 = @func_517(%955) /* ty=(Tensor[(11, 6, 6), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
    %957 = %953.2;
    %958 = %956.2;
    (%957, %958, %var_816)
  };
  %959(%var_824) /* ty=(Tensor[(1365), int16], Tensor[(1365), int16], Tensor[(396), float64]) */
}

def @func_27(%var_25: Tensor[(7, 15, 13), int16], %var_26: Tensor[(7, 15, 13), int16]) -> Tensor[(7, 15, 13), int16] {
  %964 = fn (%var_12: Tensor[(7, 15, 13), int16], %var_13: Tensor[(7, 15, 13), int16]) -> Tensor[(7, 15, 13), int16] {
    %960 = cast(%var_13, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
    %961 = shape_of(%var_12, dtype="int32") /* ty=Tensor[(3), int32] */;
    %962 = cast(%var_12, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
    %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    left_shift(%962, %963) /* ty=Tensor[(7, 15, 13), int16] */
  };
  %964(%var_25, %var_26) /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_12002() -> (Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), bool]) {
  %965 = @func_2844() /* ty=(Tensor[(11, 6, 6), bool],) */;
  %966 = @func_8686() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
  %967 = %965.0;
  %968 = %966.1;
  (%967, %968)
}

def @func_12287() -> Tensor[(7, 15, 13), int16] {
  %969 = fn () -> Tensor[(7, 15, 13), int16] {
    @func_8148() /* ty=Tensor[(7, 15, 13), int16] */
  };
  %969() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_2313() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %975 = fn () -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
    %970 = @func_2225() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */;
    %971 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %972 = @func_2072() /* ty=Tensor[(7, 15, 13), float32] */;
    %973 = %970.0;
    %974 = %971.0;
    (%972, %973, %974)
  };
  %975() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */
}

def @func_3030() -> Tensor[(7, 15, 13), int16] {
  @func_3028() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_4114(%var_4113: Tensor[(11, 6, 6), float64]) -> (Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(11, 6, 6), float64], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) {
  %1001 = fn (%var_4098: Tensor[(11, 6, 6), float64]) -> (Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(11, 6, 6), float64], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) {
    %976 = @func_2844() /* ty=(Tensor[(11, 6, 6), bool],) */;
    %977 = @func_966() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %978 = @func_3233() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
    %979 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
    %980 = %979.1;
    %981 = cast(%980, dtype="float64") /* ty=Tensor[(11, 6, 6), float64] */;
    %982 = acosh(%981) /* ty=Tensor[(11, 6, 6), float64] */;
    %983 = cast(%982, dtype="float64") /* ty=Tensor[(11, 6, 6), float64] */;
    %984 = cast(%982, dtype="float32") /* ty=Tensor[(11, 6, 6), float32] */;
    %985 = sigmoid(%984) /* ty=Tensor[(11, 6, 6), float32] */;
    %986 = cast(%985, dtype="float64") /* ty=Tensor[(11, 6, 6), float64] */;
    %987 = erf(%986) /* ty=Tensor[(11, 6, 6), float64] */;
    %988 = cast(%var_4098, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
    %989 = shape_of(%987, dtype="int32") /* ty=Tensor[(3), int32] */;
    %990 = cast(%987, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
    %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %992 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %993 = %976.0;
    %994 = %977.0;
    %995 = %978.0;
    %996 = @func_2072() /* ty=Tensor[(7, 15, 13), float32] */;
    %997 = sinh(%983) /* ty=Tensor[(11, 6, 6), float64] */;
    %998 = less_equal(%990, %991) /* ty=Tensor[(11, 6, 6), bool] */;
    %999 = @func_2072() /* ty=Tensor[(7, 15, 13), float32] */;
    %1000 = %992.0;
    (%993, %994, %995, %996, %997, %998, %999, %1000)
  };
  %1001(%var_4113) /* ty=(Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(11, 6, 6), float64], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */
}

def @func_7194() -> (Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %1007 = fn () -> (Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %1002 = @func_3233() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
    %1003 = @func_6621() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %1004 = @func_2678() /* ty=Tensor[(11, 6, 6), bool] */;
    %1005 = %1002.3;
    %1006 = %1003.0;
    (%1004, %1005, %1006)
  };
  %1007() /* ty=(Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_9156(%var_9138: Tensor[(750), float32]) -> (Tensor[(7, 15, 13), float64], Tensor[(5, 15, 10), float32], Tensor[(750), float32], Tensor[(7, 15, 13), float64]) {
  %1008 = cast(%var_9138, dtype="float32") /* ty=Tensor[(750), float32] */;
  %1009 = reshape(%1008, newshape=[5, 15, 10]) /* ty=Tensor[(5, 15, 10), float32] */;
  %1010 = @func_5311() /* ty=Tensor[(7, 15, 13), float64] */;
  %1011 = @func_5450(%1009) /* ty=Tensor[(5, 15, 10), float32] */;
  %1012 = @func_4638() /* ty=Tensor[(7, 15, 13), float64] */;
  (%1010, %1011, %var_9138, %1012)
}

def @func_8528(%var_8527: Tensor[(6, 6, 15), float64]) -> (Tensor[(6, 6, 15), float64],) {
  %1015 = fn (%var_8512: Tensor[(6, 6, 15), float64]) -> (Tensor[(6, 6, 15), float64],) {
    %1013 = cast(%var_8512, dtype="float64") /* ty=Tensor[(6, 6, 15), float64] */;
    %1014 = rsqrt(%1013) /* ty=Tensor[(6, 6, 15), float64] */;
    (%1014,)
  };
  %1015(%var_8527) /* ty=(Tensor[(6, 6, 15), float64],) */
}

def @func_3634() -> Tensor[(7, 15, 13), int16] {
  %1017 = fn () -> Tensor[(7, 15, 13), int16] {
    %1016 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %1016.0
  };
  %1017() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_8798() -> (Tensor[(11, 6, 6), float32], Tensor[(7, 15, 13), int16]) {
  @func_8796() /* ty=(Tensor[(11, 6, 6), float32], Tensor[(7, 15, 13), int16]) */
}

def @func_6810() -> (Tensor[(7, 15, 13), int16],) {
  %1019 = fn () -> (Tensor[(7, 15, 13), int16],) {
    %1018 = @func_5195() /* ty=Tensor[(7, 15, 13), int16] */;
    (%1018,)
  };
  %1019() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_9898() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
  %1026 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) {
    %1020 = @func_6228() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */;
    %1021 = @func_2225() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */;
    %1022 = @func_5296() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) */;
    %1023 = %1020.0;
    %1024 = %1021.0;
    %1025 = %1022.1;
    (%1023, %1024, %1025)
  };
  %1026() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32]) */
}

def @func_5116() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) {
  @func_5114() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(16, 1, 5), float64]) */
}

def @func_11538(%var_11537: Tensor[(7, 3, 16), float32]) -> (Tensor[(7, 3, 16), float32],) {
  %1029 = fn (%var_11530: Tensor[(7, 3, 16), float32]) -> (Tensor[(7, 3, 16), float32],) {
    %1027 = cast(%var_11530, dtype="float32") /* ty=Tensor[(7, 3, 16), float32] */;
    %1028 = asin(%1027) /* ty=Tensor[(7, 3, 16), float32] */;
    (%1028,)
  };
  %1029(%var_11537) /* ty=(Tensor[(7, 3, 16), float32],) */
}

def @func_6607() -> Tensor[(11, 6, 6), bool] {
  %1030 = fn () -> Tensor[(11, 6, 6), bool] {
    @func_2678() /* ty=Tensor[(11, 6, 6), bool] */
  };
  %1030() /* ty=Tensor[(11, 6, 6), bool] */
}

def @func_11925() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  @func_11923() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_3328() -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) {
  %1031 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1032 = %1031.0;
  %1033 = cast(%1032, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %1034 = rsqrt(%1033) /* ty=Tensor[(7, 15, 13), float64] */;
  %1035 = cast(%1032, dtype="bool") /* ty=Tensor[(7, 15, 13), bool] */;
  %1036 = shape_of(%1034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1037 = cast(%1034, dtype="bool") /* ty=Tensor[(7, 15, 13), bool] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1039 = @func_682() /* ty=(Tensor[(16, 1, 5), float64], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16]) */;
  %1040 = less_equal(%1037, %1038) /* ty=Tensor[(7, 15, 13), bool] */;
  %1041 = %1039.1;
  (%1040, %1041)
}

def @func_8139(%var_8137: Tensor[(20), int16], %var_8138: Tensor[(2, 160), int16]) -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(20), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 160), uint64]) {
  %1061 = fn (%var_8095: Tensor[(20), int16], %var_8114: Tensor[(2, 160), int16]) -> (Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(20), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 160), uint64]) {
    %1042 = @func_2441() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */;
    %1043 = cast(%var_8095, dtype="int16") /* ty=Tensor[(20), int16] */;
    %1044 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 160), int16] */, dtype="int16") /* ty=Tensor[(2, 160), int16] */;
    %1045 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 160), int16] */, dtype="int16") /* ty=Tensor[(2, 160), int16] */;
    %1046 = reshape(%1043, newshape=[1, 2, 10]) /* ty=Tensor[(1, 2, 10), int16] */;
    %1047 = reshape(%1044, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), int16] */;
    %1048 = reshape(%1045, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), int16] */;
    %1049 = @func_7610(%1046, %1047, %1048) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(16, 2, 10), uint16], Tensor[(7, 15, 13), float32]) */;
    %1050 = @func_3328() /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), int16]) */;
    %1051 = cast(%var_8114, dtype="uint64") /* ty=Tensor[(2, 160), uint64] */;
    %1052 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(2, 160), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1053 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 160), int16] */, dtype="uint64") /* ty=Tensor[(2, 160), uint64] */;
    %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %1055 = %1042.1;
    %1056 = @func_5880() /* ty=Tensor[(7, 15, 13), float32] */;
    %1057 = %1049.2;
    %1058 = @func_4813() /* ty=Tensor[(7, 15, 13), int16] */;
    %1059 = %1050.1;
    %1060 = subtract(%1053, %1054) /* ty=Tensor[(2, 160), uint64] */;
    (%1055, %1056, %1057, %var_8095, %1058, %1059, %1060)
  };
  %1061(%var_8137, %var_8138) /* ty=(Tensor[(7, 15, 13), bool], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(20), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 160), uint64]) */
}

def @func_4476() -> Tensor[(7, 15, 13), int16] {
  %1063 = fn () -> Tensor[(7, 15, 13), int16] {
    %1062 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %1062.0
  };
  %1063() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_12730() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) {
  @func_12728() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int32]) */
}

def @func_12170() -> Tensor[(16, 1, 5), float64] {
  @func_12168() /* ty=Tensor[(16, 1, 5), float64] */
}

def @func_2722(%var_2711: Tensor[(66, 6), float64]) -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(66, 6), float64], Tensor[(7, 15, 13), float32]) {
  %1064 = @func_2636() /* ty=(Tensor[(7, 15, 13), float64],) */;
  %1065 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1066 = cast(%var_2711, dtype="float64") /* ty=Tensor[(66, 6), float64] */;
  %1067 = reshape(%1066, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %1068 = @func_1729(%1067) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint8], Tensor[(16, ?, 5), bool], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(16, ?, 5), bool], Tensor[(16, ?, 5), float32], Tensor[(16, ?, 5), float64], Tensor[(16, ?, 5), bool]) */;
  %1069 = %1064.0;
  %1070 = %1065.0;
  %1071 = %1068.2;
  %1072 = @func_2072() /* ty=Tensor[(7, 15, 13), float32] */;
  (%1069, %1070, %1071, %var_2711, %1072)
}

def @func_1325() -> (Tensor[(7, 15, 13), float32],) {
  @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */
}

def @func_5313() -> Tensor[(7, 15, 13), float64] {
  @func_5311() /* ty=Tensor[(7, 15, 13), float64] */
}

def @func_5882() -> Tensor[(7, 15, 13), float32] {
  @func_5880() /* ty=Tensor[(7, 15, 13), float32] */
}

def @func_11700(%var_11698: Tensor[(5, 10, 14), float32], %var_11699: Tensor[(11, 6, 6), bool]) -> (Tensor[(7, 15, 13), float32], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 10, 14), uint32], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) {
  %1102 = fn (%var_11577: Tensor[(5, 10, 14), float32], %var_11611: Tensor[(11, 6, 6), bool]) -> (Tensor[(7, 15, 13), float32], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 10, 14), uint32], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) {
    %1073 = @func_2678() /* ty=Tensor[(11, 6, 6), bool] */;
    %1074 = cast(%var_11611, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
    %1075 = shape_of(%1073, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1076 = cast(%1073, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
    %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1078 = @func_3764() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
    %1079 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 10, 14), float32] */, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
    %1080 = shape_of(%var_11577, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1081 = cast(%var_11577, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
    %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1083 = mod(%1081, %1082) /* ty=Tensor[(5, 10, 14), float32] */;
    %1084 = cast(%1083, dtype="int8") /* ty=Tensor[(5, 10, 14), int8] */;
    %1085 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(5, 10, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1086 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 10, 14), float32] */, dtype="int8") /* ty=Tensor[(5, 10, 14), int8] */;
    %1087 = dyn.reshape(%1084, %1085, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1088 = subtract(%1086, %1087) /* ty=Tensor[(5, 10, 14), int8] */;
    %1089 = cast(%1088, dtype="uint32") /* ty=Tensor[(5, 10, 14), uint32] */;
    %1090 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(5, 10, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1091 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 10, 14), float32] */, dtype="uint32") /* ty=Tensor[(5, 10, 14), uint32] */;
    %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1093 = @func_7660() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */;
    %1094 = @func_5880() /* ty=Tensor[(7, 15, 13), float32] */;
    %1095 = equal(%1076, %1077) /* ty=Tensor[(11, 6, 6), bool] */;
    %1096 = @func_2871() /* ty=Tensor[(7, 15, 13), int16] */;
    %1097 = %1078.1;
    %1098 = @func_2994() /* ty=Tensor[(7, 15, 13), int16] */;
    %1099 = maximum(%1091, %1092) /* ty=Tensor[(5, 10, 14), uint32] */;
    %1100 = @func_6325() /* ty=Tensor[(7, 15, 13), int16] */;
    %1101 = %1093.1;
    (%1094, %1095, %1096, %1097, %1098, %1099, %1100, %1101)
  };
  %1102(%var_11698, %var_11699) /* ty=(Tensor[(7, 15, 13), float32], Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(5, 10, 14), uint32], Tensor[(7, 15, 13), int16], Tensor[(1365), int16]) */
}

def @func_5298() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) {
  @func_5296() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), bool]) */
}

def @func_2036(%var_2031: Tensor[(7, 15, 13), int16]) -> (Tensor[(7, 15, 13), float64], Tensor[(7, 15, 13), uint8]) {
  %1103 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1104 = %1103.0;
  %1105 = cast(%1104, dtype="float64") /* ty=Tensor[(7, 15, 13), float64] */;
  %1106 = cast(%var_2031, dtype="uint8") /* ty=Tensor[(7, 15, 13), uint8] */;
  %1107 = shape_of(%1104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1108 = cast(%1104, dtype="uint8") /* ty=Tensor[(7, 15, 13), uint8] */;
  %1109 = dyn.reshape(%1106, %1107, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1110 = acosh(%1105) /* ty=Tensor[(7, 15, 13), float64] */;
  %1111 = add(%1108, %1109) /* ty=Tensor[(7, 15, 13), uint8] */;
  (%1110, %1111)
}

def @func_6501() -> Tensor[(7, 15, 13), int16] {
  %1112 = fn () -> Tensor[(7, 15, 13), int16] {
    @func_6325() /* ty=Tensor[(7, 15, 13), int16] */
  };
  %1112() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_5183(%var_5182: Tensor[(140), uint64]) -> (Tensor[(7, 15, 13), bool], Tensor[(14, 10), uint64], Tensor[(140), uint64]) {
  %1121 = fn (%var_5179: Tensor[(140), uint64]) -> (Tensor[(7, 15, 13), bool], Tensor[(14, 10), uint64], Tensor[(140), uint64]) {
    %1113 = @func_3390() /* ty=(Tensor[(7, 15, 13), bool],) */;
    %1114 = cast(%var_5179, dtype="uint64") /* ty=Tensor[(140), uint64] */;
    %1115 = cast(%var_5179, dtype="uint64") /* ty=Tensor[(140), uint64] */;
    %1116 = reshape(%1114, newshape=[14, 10]) /* ty=Tensor[(14, 10), uint64] */;
    %1117 = reshape(%1115, newshape=[14, 10]) /* ty=Tensor[(14, 10), uint64] */;
    %1118 = @func_3607(%1116, %1117) /* ty=(Tensor[(14, 10), uint64],) */;
    %1119 = %1113.0;
    %1120 = %1118.0;
    (%1119, %1120, %var_5179)
  };
  %1121(%var_5182) /* ty=(Tensor[(7, 15, 13), bool], Tensor[(14, 10), uint64], Tensor[(140), uint64]) */
}

def @func_8473() -> Tensor[(7, 15, 13), int16] {
  %1122 = @func_3233() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
  %1122.0
}

def @func_4751() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %1126 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
    %1123 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %1124 = @func_3347() /* ty=Tensor[(7, 15, 13), int16] */;
    %1125 = %1123.0;
    (%1124, %1125)
  };
  %1126() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_10066() -> Tensor[(7, 15, 13), int16] {
  @func_10064() /* ty=Tensor[(7, 15, 13), int16] */
}

def @func_9748() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  @func_9746() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_2994() -> Tensor[(7, 15, 13), int16] {
  %1127 = @func_2253() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(11, 6, 6), bool]) */;
  %1127.0
}

def @func_1493(%var_1487: Tensor[(7, 15, 13), int16]) -> (Tensor[(7, 15, 13), uint8],) {
  %1128 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1129 = %1128.0;
  %1130 = cast(%var_1487, dtype="uint8") /* ty=Tensor[(7, 15, 13), uint8] */;
  %1131 = shape_of(%1129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1132 = cast(%1129, dtype="uint8") /* ty=Tensor[(7, 15, 13), uint8] */;
  %1133 = dyn.reshape(%1130, %1131, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1134 = right_shift(%1132, %1133) /* ty=Tensor[(7, 15, 13), uint8] */;
  (%1134,)
}

def @func_2442() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) {
  %1140 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) {
    %1135 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
    %1136 = cast(%1135, dtype="int16") /* ty=Tensor[(7, 15, 13), int16] */;
    %1137 = reshape(%1136, newshape=[7, 15, 13]) /* ty=Tensor[(7, 15, 13), int16] */;
    %1138 = @func_2122(%1137) /* ty=(Tensor[(7, 15, 13), bool],) */;
    %1139 = %1138.0;
    (%1135, %1139)
  };
  %1140() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), bool]) */
}

def @func_10387() -> (Tensor[(7, 15, 13), float32],) {
  @func_10385() /* ty=(Tensor[(7, 15, 13), float32],) */
}

def @func_12004() -> (Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), bool]) {
  @func_12002() /* ty=(Tensor[(11, 6, 6), bool], Tensor[(7, 15, 13), bool]) */
}

def @func_11863(%var_11861: Tensor[(32), float32]) -> (Tensor[(7, 15, 13), int16], Tensor[(16), float32], Tensor[(32), float32], Tensor[(7, 15, 13), int16], Tensor[(9, 15, 9), int16]) {
  @func_11860(%var_11861) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(16), float32], Tensor[(32), float32], Tensor[(7, 15, 13), int16], Tensor[(9, 15, 9), int16]) */
}

def @func_3766() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  @func_3764() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */
}

def @func_1403() -> (Tensor[(7, 15, 13), float32],) {
  %1141 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
  %1142 = %1141.0;
  (%1142,)
}

def @func_6577() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32]) {
  %1151 = fn () -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32]) {
    %1143 = @func_5166() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %1144 = @func_1403() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %1145 = cast(meta[relay.Constant][37] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
    %1146 = reshape(%1145, newshape=[4, 8]) /* ty=Tensor[(4, 8), float32] */;
    %1147 = @func_3531(%1146) /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float64], Tensor[(2, 2, 8), float32], Tensor[(16), float32], Tensor[(4, 8), float32]) */;
    %1148 = %1143.0;
    %1149 = %1144.0;
    %1150 = %1147.3;
    (%1148, %1149, %1150, meta[relay.Constant][37] /* ty=Tensor[(32), float32] */)
  };
  %1151() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), float32], Tensor[(16), float32], Tensor[(32), float32]) */
}

def @func_3356() -> (Tensor[(5, 12, 8), bool],) {
  @func_3354() /* ty=(Tensor[(5, 12, 8), bool],) */
}

def @func_9746() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) {
  %1152 = @func_992() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1153 = @func_6325() /* ty=Tensor[(7, 15, 13), int16] */;
  %1154 = %1152.0;
  (%1153, %1154)
}

def @func_3685() -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8]) {
  %1168 = fn () -> (Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8]) {
    %1155 = @func_2591() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), float32]) */;
    %1156 = @func_3291() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16]) */;
    %1157 = @func_1323() /* ty=(Tensor[(7, 15, 13), float32],) */;
    %1158 = %1157.0;
    %1159 = cast(%1158, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
    %1160 = asinh(%1159) /* ty=Tensor[(7, 15, 13), float32] */;
    %1161 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 15, 13), float32] */, dtype="int8") /* ty=Tensor[(7, 15, 13), int8] */;
    %1162 = shape_of(%1160, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1163 = cast(%1160, dtype="int8") /* ty=Tensor[(7, 15, 13), int8] */;
    %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1165 = %1155.1;
    %1166 = %1156.1;
    %1167 = maximum(%1163, %1164) /* ty=Tensor[(7, 15, 13), int8] */;
    (%1165, %1166, %1167)
  };
  %1168() /* ty=(Tensor[(7, 15, 13), float32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int8]) */
}

def @func_5986() -> (Tensor[(7, 15, 13), int16],) {
  @func_5984() /* ty=(Tensor[(7, 15, 13), int16],) */
}

def @func_1323() -> (Tensor[(7, 15, 13), float32],) {
  %1169 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
  %1170 = %1169.0;
  %1171 = cast(%1170, dtype="float32") /* ty=Tensor[(7, 15, 13), float32] */;
  %1172 = asin(%1171) /* ty=Tensor[(7, 15, 13), float32] */;
  (%1172,)
}

def @func_12809() -> (Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 16, 2), uint32], Tensor[(64, 1), float64]) {
  @func_12807() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(2, 16, 2), uint32], Tensor[(64, 1), float64]) */
}

def @func_2493() -> (Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint16]) {
  %1188 = fn () -> (Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint16]) {
    %1173 = @func_914() /* ty=Tensor[(7, 15, 13), int16] */;
    %1174 = @func_2225() /* ty=(Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), int16], Tensor[(1365), int16], Tensor[(396), float64], Tensor[(1365), int16]) */;
    %1175 = %1174.1;
    %1176 = cast(%1175, dtype="int32") /* ty=Tensor[(7, 15, 13), int32] */;
    %1177 = shape_of(%1173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1178 = cast(%1173, dtype="int32") /* ty=Tensor[(7, 15, 13), int32] */;
    %1179 = dyn.reshape(%1176, %1177, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1180 = @func_1248() /* ty=(Tensor[(7, 15, 13), int16],) */;
    %1181 = cast(%1173, dtype="uint16") /* ty=Tensor[(7, 15, 13), uint16] */;
    %1182 = shape_of(%1175, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1183 = cast(%1175, dtype="uint16") /* ty=Tensor[(7, 15, 13), uint16] */;
    %1184 = dyn.reshape(%1181, %1182, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1185 = subtract(%1178, %1179) /* ty=Tensor[(7, 15, 13), int32] */;
    %1186 = %1180.0;
    %1187 = minimum(%1183, %1184) /* ty=Tensor[(7, 15, 13), uint16] */;
    (%1185, %1186, %1187)
  };
  %1188() /* ty=(Tensor[(7, 15, 13), int32], Tensor[(7, 15, 13), int16], Tensor[(7, 15, 13), uint16]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_3711(%var_3701: Tensor[(11, 2, 6), float64]) -> (Tensor[(11, 2, 6), float64],) {
  %0 = cast(%var_3701, dtype="float64") /* ty=Tensor[(11, 2, 6), float64] */;
  %1 = rsqrt(%0) /* ty=Tensor[(11, 2, 6), float64] */;
  (%1,)
}

def @func_8357() -> Tensor[(13, 14, 12), float64] {
  @func_4231() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_10604() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  %2 = @func_8149() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %3 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %4 = @func_8149() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %5 = %2.0;
  %6 = %3.1;
  %7 = @func_10538() /* ty=Tensor[(13, ?, 8), float32] */;
  %8 = %4.0;
  (%5, %6, %7, %8)
}

def @func_3274() -> (Tensor[(13, 14, 12), float64],) {
  %9 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %10 = %9.0;
  (%10,)
}

def @func_4043() -> (Tensor[(13, 6, 8), uint32], Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(1, 234), float64], Tensor[(8, 7, 1), bool]) {
  %11 = @func_1697() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %12 = %11.0;
  %13 = cast(%12, dtype="uint32") /* ty=Tensor[(13, ?, 8), uint32] */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 6, 8), float32] */, dtype="uint32") /* ty=Tensor[(13, 6, 8), uint32] */;
  %15 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %16 = cast(meta[relay.Constant][2] /* ty=Tensor[(660), int16] */, dtype="int16") /* ty=Tensor[(660), int16] */;
  %17 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 234), float64] */, dtype="float64") /* ty=Tensor[(1, 234), float64] */;
  %18 = reshape(%16, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int16] */;
  %19 = reshape(%17, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %20 = @func_2427(%18, %19) /* ty=(Tensor[(12, 5, 11), uint16], Tensor[(13, 9, 2), bool]) */;
  %21 = cast(meta[relay.Constant][4] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(56), uint32] */, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %23 = reshape(%21, newshape=[]) /* ty=uint32 */;
  %24 = reshape(%22, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint32] */;
  %25 = @func_2042(%23, %24) /* ty=(Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %26 = %25.0;
  %27 = cast(%26, dtype="bool") /* ty=Tensor[(8, 7, 1), bool] */;
  %28 = cast(meta[relay.Constant][4] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %29 = subtract(%13, %14) /* ty=Tensor[(13, 6, 8), uint32] */;
  %30 = %15.0;
  %31 = %20.1;
  %32 = logical_and(%27, %28) /* ty=Tensor[(8, 7, 1), bool] */;
  (%29, meta[relay.Constant][1] /* ty=Tensor[(56), uint32] */, %30, %31, meta[relay.Constant][2] /* ty=Tensor[(660), int16] */, meta[relay.Constant][3] /* ty=Tensor[(1, 234), float64] */, %32)
}

def @func_3626() -> Tensor[(13, ?, 8), float32] {
  @func_2799() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_4779() -> Tensor[(13, ?, 8), float32] {
  %33 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %33.2
}

def @func_5800() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %34 = @func_4794() /* ty=Tensor[(13, 14, 12), float64] */;
  %35 = cast(%34, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %36 = asinh(%35) /* ty=Tensor[(13, 14, 12), float64] */;
  %37 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %38 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  %39 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
  (%36, %37, %38, %39)
}

def @func_11486() -> (Tensor[(13, 14, 12), float64], Tensor[(11, 4, 16), float32]) {
  %40 = @func_7332() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %41 = @func_10099() /* ty=(Tensor[(11, 4, 16), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %42 = %40.0;
  %43 = %41.0;
  (%42, %43)
}

def @func_3134() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %44 = @func_2311() /* ty=Tensor[(13, 14, 12), float64] */;
  %45 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
  %46 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  (%44, %45, %46)
}

def @func_4794() -> Tensor[(13, 14, 12), float64] {
  %47 = @func_2491() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %47.2
}

def @func_74(%var_34: Tensor[(13, 1, 8), float64]) -> (Tensor[(13, ?, 8), float32],) {
  %48 = cast(%var_34, dtype="float64") /* ty=Tensor[(13, 1, 8), float64] */;
  %49 = rsqrt(%48) /* ty=Tensor[(13, 1, 8), float64] */;
  %50 = cast(%var_34, dtype="float64") /* ty=Tensor[(13, 1, 8), float64] */;
  %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%49, dtype="float64") /* ty=Tensor[(13, 1, 8), float64] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %54 = minimum(%52, %53) /* ty=Tensor[(13, ?, 8), float64] */;
  %55 = cast(%var_34, dtype="float32") /* ty=Tensor[(13, 1, 8), float32] */;
  %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%54, dtype="float32") /* ty=Tensor[(13, ?, 8), float32] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %59 = power(%57, %58) /* ty=Tensor[(13, ?, 8), float32] */;
  (%59,)
}

def @func_10170() -> Tensor[(13, ?, 8), float32] {
  %60 = @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %61 = %60.0;
  %62 = cast(%61, dtype="float32") /* ty=Tensor[(13, ?, 8), float32] */;
  asin(%62) /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_12041() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %63 = @func_10481() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool]) */;
  %64 = @func_10604() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %65 = %63.0;
  %66 = %64.1;
  (%65, %66)
}

def @func_7045() -> Tensor[(13, ?, 8), float32] {
  @func_4779() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_8890() -> (Tensor[(13, 14, 12), float64],) {
  %67 = @func_8838() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %68 = %67.0;
  (%68,)
}

def @func_5809() -> Tensor[(13, 14, 12), float64] {
  %69 = @func_3134() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %69.1
}

def @func_2311() -> Tensor[(13, 14, 12), float64] {
  @func_666() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_2362(%var_2355: Tensor[(26, 4), float64]) -> (Tensor[(26, 4), float64], Tensor[(104), float64]) {
  %70 = @func_891() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */;
  %71 = %70.1;
  %72 = cast(%var_2355, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(2), int32] */;
  %74 = cast(%71, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %76 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %77 = mod(%74, %75) /* ty=Tensor[(26, 4), float64] */;
  %78 = %76.2;
  (%77, %78)
}

def @func_9091() -> (Tensor[(13, ?, 8), float32], Tensor[(6, 364), float32]) {
  %79 = @func_7559() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %80 = @func_5952() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
  %81 = %80.2;
  %82 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 364), float64] */, dtype="float32") /* ty=Tensor[(6, 364), float32] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(2), int32] */;
  %84 = cast(%81, dtype="float32") /* ty=Tensor[(6, 364), float32] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %86 = floor_mod(%84, %85) /* ty=Tensor[(6, 364), float32] */;
  %87 = cast(%86, dtype="float32") /* ty=Tensor[(6, 364), float32] */;
  %88 = %79.1;
  %89 = exp(%87) /* ty=Tensor[(6, 364), float32] */;
  (%88, %89)
}

def @func_4412() -> (Tensor[(13, 14, 12), float64],) {
  %90 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
  (%90,)
}

def @func_5893() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) {
  %91 = @func_4231() /* ty=Tensor[(13, 14, 12), float64] */;
  %92 = @func_845() /* ty=Tensor[(13, 14, 12), float32] */;
  (%91, %92)
}

def @func_6199() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) {
  %93 = @func_5303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %94 = @func_5952() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
  %95 = %93.0;
  %96 = @func_4231() /* ty=Tensor[(13, 14, 12), float64] */;
  %97 = %94.2;
  (%95, %96, %97)
}

def @func_666() -> Tensor[(13, 14, 12), float64] {
  %98 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %98.0
}

def @func_3693() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) {
  %99 = @func_3046() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(660), int16] */, dtype="int16") /* ty=Tensor[(660), int16] */;
  %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %102 = reshape(%100, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int16] */;
  %103 = reshape(%101, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %104 = @func_2427(%102, %103) /* ty=(Tensor[(12, 5, 11), uint16], Tensor[(13, 9, 2), bool]) */;
  %105 = %99.0;
  %106 = @func_1769() /* ty=Tensor[(13, 14, 12), float64] */;
  %107 = %104.1;
  %108 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
  (%105, %106, %107, meta[relay.Constant][6] /* ty=Tensor[(660), int16] */, meta[relay.Constant][7] /* ty=Tensor[(234), float64] */, %108)
}

def @func_6589(%var_6570: uint32, %var_6571: Tensor[(56), uint32]) -> (Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(56), uint32], Tensor[(13, 14, 12), int8]) {
  %109 = cast(%var_6570, dtype="uint32") /* ty=uint32 */;
  %110 = cast(%var_6571, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %111 = reshape(%109, newshape=[]) /* ty=uint32 */;
  %112 = reshape(%110, newshape=[56]) /* ty=Tensor[(56), uint32] */;
  %113 = @func_5472(%111, %112) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(660), int16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
  %114 = cast(meta[relay.Constant][8] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %115 = cast(meta[relay.Constant][8] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %116 = reshape(%114, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %117 = reshape(%115, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %118 = @func_377(%116, %117) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %119 = %118.1;
  %120 = cast(%119, dtype="int8") /* ty=Tensor[(13, 14, 12), int8] */;
  %121 = cast(%var_6570, dtype="int8") /* ty=int8 */;
  %122 = @func_3593() /* ty=Tensor[(13, 14, 12), float64] */;
  %123 = %113.6;
  %124 = add(%120, %121) /* ty=Tensor[(13, 14, 12), int8] */;
  (%122, meta[relay.Constant][8] /* ty=Tensor[(40), float32] */, %123, %var_6571, %124)
}

def @func_6220() -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  %125 = @func_4666() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %126 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %127 = %125.0;
  (%126, %127)
}

def @func_304() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) {
  %128 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %129 = cast(%128, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %130 = reshape(%129, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %131 = @func_277(%130) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %132 = cast(meta[relay.Constant][9] /* ty=Tensor[(26, 4), float64] */, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %133 = reshape(%132, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %134 = @func_74(%133) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %135 = %131.0;
  %136 = %134.0;
  (%128, %135, %136, meta[relay.Constant][9] /* ty=Tensor[(26, 4), float64] */)
}

def @func_7754(%var_7746: float32, %var_7747: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32]) {
  %137 = @func_5800() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %138 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
  %139 = cast(%var_7746, dtype="float32") /* ty=float32 */;
  %140 = cast(%var_7747, dtype="float32") /* ty=Tensor[(780), float32] */;
  %141 = reshape(%139, newshape=[]) /* ty=float32 */;
  %142 = reshape(%140, newshape=[6, 13, 10]) /* ty=Tensor[(6, 13, 10), float32] */;
  %143 = @func_542(%141, %142) /* ty=(Tensor[(6, 13, 10), float32],) */;
  %144 = %137.2;
  %145 = %138.0;
  %146 = %143.0;
  (%144, %145, %146, %var_7746, %var_7747)
}

def @func_1452(%var_1419: Tensor[(13, 9, 2), float64], %var_1431: Tensor[(13, 9, 2), float64]) -> (Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float32]) {
  %147 = cast(%var_1419, dtype="float64") /* ty=Tensor[(13, 9, 2), float64] */;
  %148 = cast(%var_1431, dtype="float64") /* ty=Tensor[(13, 9, 2), float64] */;
  %149 = shape_of(%var_1419, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%var_1419, dtype="float64") /* ty=Tensor[(13, 9, 2), float64] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %152 = cast(%var_1419, dtype="float32") /* ty=Tensor[(13, 9, 2), float32] */;
  %153 = cosh(%147) /* ty=Tensor[(13, 9, 2), float64] */;
  %154 = add(%150, %151) /* ty=Tensor[(13, 9, 2), float64] */;
  %155 = log(%152) /* ty=Tensor[(13, 9, 2), float32] */;
  (%153, %154, %155)
}

def @func_7332() -> (Tensor[(13, 14, 12), float64],) {
  %156 = @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %157 = %156.0;
  (%157,)
}

def @func_4483(%var_4475: Tensor[(40), float32]) -> (Tensor[(13, ?, 8), float32], Tensor[(6, 40), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) {
  %158 = cast(%var_4475, dtype="float32") /* ty=Tensor[(40), float32] */;
  %159 = reshape(%158, newshape=[1, 40]) /* ty=Tensor[(1, 40), float32] */;
  %160 = @func_1813(%159) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), bool], Tensor[(6, 40), float32]) */;
  %161 = @func_2721() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) */;
  %162 = @func_2799() /* ty=Tensor[(13, ?, 8), float32] */;
  %163 = %160.3;
  %164 = %161.1;
  (%162, %163, %var_4475, %164)
}

def @func_3789(%var_3748: Tensor[(40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(40), float32]) {
  %165 = @func_2227() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %166 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %167 = cast(%var_3748, dtype="float32") /* ty=Tensor[(40), float32] */;
  %168 = %166.2;
  %169 = cast(%168, dtype="float64") /* ty=Tensor[(104), float64] */;
  %170 = reshape(%167, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %171 = reshape(%169, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %172 = @func_1261(%170, %171) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */;
  %173 = %165.2;
  %174 = %172.6;
  (%173, %168, %174, %var_3748)
}

def @func_9837() -> (Tensor[(13, 14, 12), float64],) {
  %175 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
  (%175,)
}

def @func_6897() -> (Tensor[(13, 14, 12), float64],) {
  %176 = @func_4794() /* ty=Tensor[(13, 14, 12), float64] */;
  (%176,)
}

def @func_11835() -> (Tensor[(13, 12, 8), int8], Tensor[(8, 4, 13), float64], Tensor[(13, 14, 12), float64]) {
  %177 = @func_10871() /* ty=(Tensor[(13, 12, 8), int8],) */;
  %178 = @func_6325() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) */;
  %179 = @func_2883() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) */;
  %180 = %177.0;
  %181 = %178.2;
  %182 = %179.0;
  (%180, %181, %182)
}

def @func_12656(%var_12582: Tensor[(132), float64], %var_12631: Tensor[(104), float64]) -> (Tensor[(132), float64], Tensor[(11, 2, 6), float64], Tensor[(660), int16], Tensor[(104), float64], Tensor[(26, 4), float64], Tensor[(13, 12, 8), int64]) {
  %183 = cast(%var_12582, dtype="float64") /* ty=Tensor[(132), float64] */;
  %184 = reshape(%183, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float64] */;
  %185 = @func_3711(%184) /* ty=(Tensor[(11, 2, 6), float64],) */;
  %186 = %185.0;
  %187 = cast(%186, dtype="float64") /* ty=Tensor[(11, 2, 6), float64] */;
  %188 = shape_of(%var_12582, dtype="int32") /* ty=Tensor[(1), int32] */;
  %189 = cast(%var_12582, dtype="float64") /* ty=Tensor[(132), float64] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?), float64] */;
  %191 = cast(%186, dtype="float64") /* ty=Tensor[(11, 2, 6), float64] */;
  %192 = reshape(%191, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float64] */;
  %193 = @func_3711(%192) /* ty=(Tensor[(11, 2, 6), float64],) */;
  %194 = @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */;
  %195 = cast(%var_12631, dtype="float64") /* ty=Tensor[(104), float64] */;
  %196 = reshape(%195, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %197 = @func_2362(%196) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */;
  %198 = %197.0;
  %199 = cast(%198, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %200 = @func_7836() /* ty=Tensor[(13, 12, 8), int8] */;
  %201 = cast(%200, dtype="float64") /* ty=Tensor[(13, 12, 8), float64] */;
  %202 = cos(%201) /* ty=Tensor[(13, 12, 8), float64] */;
  %203 = cast(%202, dtype="int32") /* ty=Tensor[(13, 12, 8), int32] */;
  %204 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%200, dtype="int32") /* ty=Tensor[(13, 12, 8), int32] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %207 = multiply(%205, %206) /* ty=Tensor[(13, 12, 8), int32] */;
  %208 = cast(%207, dtype="uint32") /* ty=Tensor[(13, 12, 8), uint32] */;
  %209 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%200, dtype="uint32") /* ty=Tensor[(13, 12, 8), uint32] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %212 = subtract(%210, %211) /* ty=Tensor[(13, 12, 8), uint32] */;
  %213 = cast(%212, dtype="int64") /* ty=Tensor[(13, 12, 8), int64] */;
  %214 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%207, dtype="int64") /* ty=Tensor[(13, 12, 8), int64] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %217 = power(%189, %190) /* ty=Tensor[(132), float64] */;
  %218 = %193.0;
  %219 = %194.3;
  %220 = log2(%199) /* ty=Tensor[(26, 4), float64] */;
  %221 = logical_xor(%215, %216) /* ty=Tensor[(13, 12, 8), int64] */;
  (%217, %218, %219, %var_12631, %220, %221)
}

def @func_11262() -> (Tensor[(13, ?, 8), float32],) {
  %222 = @func_7239() /* ty=Tensor[(13, ?, 8), float32] */;
  (%222,)
}

def @func_10099() -> (Tensor[(11, 4, 16), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %223 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 4, 16), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %224 = @func_7344() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %225 = @func_5303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %226 = @func_6261() /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */;
  %227 = exp(%223) /* ty=Tensor[(11, 4, 16), float32] */;
  %228 = %224.0;
  %229 = %225.0;
  %230 = %226.1;
  (%227, %228, %229, %230)
}

def @func_4666() -> (Tensor[(13, 14, 12), float64],) {
  %231 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
  (%231,)
}

def @func_6817(%var_6752: Tensor[(1, 40), float32], %var_6770: Tensor[(8, 52), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(8, 52), float64], Tensor[(13, 14, 12), float64], Tensor[(?, 40), bool], Tensor[(13, 14, 12), float64]) {
  %232 = cast(%var_6752, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
  %233 = reshape(%232, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %234 = @func_632(%233) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32]) */;
  %235 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %236 = cast(%var_6770, dtype="float64") /* ty=Tensor[(8, 52), float64] */;
  %237 = reshape(%236, newshape=[8, 4, 13]) /* ty=Tensor[(8, 4, 13), float64] */;
  %238 = @func_5835(%237) /* ty=(Tensor[(8, 4, 13), float64],) */;
  %239 = cast(%var_6752, dtype="float64") /* ty=Tensor[(1, 40), float64] */;
  %240 = log10(%239) /* ty=Tensor[(1, 40), float64] */;
  %241 = cast(%var_6752, dtype="bool") /* ty=Tensor[(1, 40), bool] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(2), int32] */;
  %243 = cast(%240, dtype="bool") /* ty=Tensor[(1, 40), bool] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %245 = @func_4505() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %246 = @func_4231() /* ty=Tensor[(13, 14, 12), float64] */;
  %247 = %234.0;
  %248 = %235.0;
  %249 = %238.0;
  %250 = @func_4538() /* ty=Tensor[(13, 14, 12), float64] */;
  %251 = not_equal(%243, %244) /* ty=Tensor[(?, 40), bool] */;
  %252 = %245.0;
  (%246, %247, %248, %249, %var_6770, %250, %251, %252)
}

def @func_9384(%var_9379: Tensor[(11, 7, 3), float64], %var_9380: Tensor[(11, 7, 3), float64]) -> (Tensor[(11, 7, 3), float64],) {
  %253 = cast(%var_9380, dtype="float64") /* ty=Tensor[(11, 7, 3), float64] */;
  %254 = shape_of(%var_9379, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%var_9379, dtype="float64") /* ty=Tensor[(11, 7, 3), float64] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %257 = minimum(%255, %256) /* ty=Tensor[(11, 7, 3), float64] */;
  (%257,)
}

def @func_7254() -> Tensor[(13, 14, 12), float64] {
  %258 = @func_6897() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %258.0
}

def @func_8816(%var_8800: float32, %var_8801: Tensor[(10, 78), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 4, 8), int8], Tensor[(416), float32], Tensor[(13, 14, 12), float64], float32, Tensor[(10, 78), float32], Tensor[(13, 14, 12), float64]) {
  %259 = cast(meta[relay.Constant][11] /* ty=Tensor[(416), float32] */, dtype="float32") /* ty=Tensor[(416), float32] */;
  %260 = reshape(%259, newshape=[13, 4, 8]) /* ty=Tensor[(13, 4, 8), float32] */;
  %261 = cast(%var_8800, dtype="float32") /* ty=float32 */;
  %262 = cast(%var_8801, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %263 = reshape(%261, newshape=[]) /* ty=float32 */;
  %264 = reshape(%262, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %265 = @func_7754(%263, %264) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32]) */;
  %266 = @func_6220() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %267 = @func_4231() /* ty=Tensor[(13, 14, 12), float64] */;
  %268 = @func_4160(%260) /* ty=Tensor[(13, 4, 8), int8] */;
  %269 = %265.1;
  %270 = %266.1;
  (%267, %268, meta[relay.Constant][11] /* ty=Tensor[(416), float32] */, %269, %var_8800, %var_8801, %270)
}

def @func_9689() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), bool]) {
  %271 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %272 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
  %273 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
  %274 = cast(%273, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %275 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%272, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %278 = %271.0;
  %279 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
  %280 = equal(%276, %277) /* ty=Tensor[(13, ?, 8), bool] */;
  (%278, %279, %280)
}

def @func_8240() -> (Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), float64]) {
  %281 = @func_4443() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(780), float32]) */;
  %282 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %283 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
  %284 = @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %285 = %284.0;
  %286 = @func_4779() /* ty=Tensor[(13, ?, 8), float32] */;
  %287 = cast(%286, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %288 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%285, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %291 = logical_and(%289, %290) /* ty=Tensor[(13, ?, 8), bool] */;
  %292 = cast(%291, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %293 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%285, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %296 = @func_7403() /* ty=Tensor[(13, 14, 12), float64] */;
  %297 = %281.2;
  %298 = %282.0;
  %299 = %283.1;
  %300 = mod(%294, %295) /* ty=Tensor[(13, ?, 8), float64] */;
  (%296, %297, %298, %299, %300)
}

def @func_7852() -> (Tensor[(13, 14, 12), float64],) {
  %301 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %302 = %301.0;
  (%302,)
}

def @func_7536() -> (Tensor[(13, 14, 12), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) {
  %303 = @func_5800() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %304 = @func_7221() /* ty=(Tensor[(11, 2, 6), float64],) */;
  %305 = @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %306 = %303.3;
  %307 = %304.0;
  %308 = %305.2;
  (%306, %307, %308)
}

def @func_8586() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %309 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
  %310 = %309.0;
  %311 = @func_1769() /* ty=Tensor[(13, 14, 12), float64] */;
  (%310, %311)
}

def @func_11124() -> (Tensor[(13, 14, 12), float64], Tensor[(132), float64], Tensor[(13, 14, 12), float64]) {
  %312 = @func_8701() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %313 = @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %314 = %312.0;
  %315 = %313.2;
  %316 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
  (%314, %315, %316)
}

def @func_10067() -> Tensor[(13, 14, 12), float64] {
  @func_6954() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_971() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %317 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %318 = cast(%317, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %319 = reshape(%318, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %320 = @func_277(%319) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %321 = %320.1;
  (%317, %321)
}

def @func_7239() -> Tensor[(13, ?, 8), float32] {
  %322 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %322.2
}

def @func_1107() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) {
  %323 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %324 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %325 = cast(meta[relay.Constant][12] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %326 = reshape(%325, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %327 = @func_74(%326) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %328 = %327.0;
  %329 = cast(%328, dtype="float32") /* ty=Tensor[(13, ?, 8), float32] */;
  %330 = %323.0;
  %331 = %324.0;
  %332 = erf(%329) /* ty=Tensor[(13, ?, 8), float32] */;
  (%330, %331, meta[relay.Constant][12] /* ty=Tensor[(104), float64] */, %332)
}

def @func_9233(%var_9138: Tensor[(13, 7, 8), float32], %var_9197: Tensor[(13, 7, 8), float32]) -> (Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), bool], Tensor[(13, 7, 8), int8], Tensor[(13, 14, 12), float64], Tensor[(13, 7, 8), int8]) {
  %333 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
  %334 = @func_5618() /* ty=Tensor[(13, ?, 8), float32] */;
  %335 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %336 = %335.2;
  %337 = cast(%336, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %338 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%334, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %341 = cast(%var_9197, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
  %342 = shape_of(%var_9138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%var_9138, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %345 = @func_4412() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %346 = cast(%336, dtype="int32") /* ty=Tensor[(13, ?, 8), int32] */;
  %347 = cast(%var_9138, dtype="int32") /* ty=Tensor[(13, 7, 8), int32] */;
  %348 = bitwise_xor(%346, %347) /* ty=Tensor[(13, 7, 8), int32] */;
  %349 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 7, 8), int32] */, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(%348, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %353 = floor_divide(%351, %352) /* ty=Tensor[(13, 7, 8), float32] */;
  %354 = cast(%353, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %355 = atan(%354) /* ty=Tensor[(13, 7, 8), float64] */;
  %356 = cast(%355, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %357 = cosh(%356) /* ty=Tensor[(13, 7, 8), float64] */;
  %358 = cast(%var_9138, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %362 = %333.1;
  %363 = not_equal(%339, %340) /* ty=Tensor[(13, ?, 8), bool] */;
  %364 = bitwise_or(%343, %344) /* ty=Tensor[(13, 7, 8), int8] */;
  %365 = %345.0;
  %366 = left_shift(%360, %361) /* ty=Tensor[(13, 7, 8), int8] */;
  (%362, %363, %364, %365, %366)
}

def @func_3046() -> (Tensor[(13, 14, 12), float64],) {
  %367 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %368 = %367.0;
  (%368,)
}

def @func_8751() -> (Tensor[(13, ?, 8), float32], Tensor[(132), float64]) {
  %369 = @func_1697() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %370 = @func_7536() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %371 = %369.0;
  %372 = %370.2;
  (%371, %372)
}

def @func_3262() -> Tensor[(13, 14, 12), bool] {
  %373 = @func_2883() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) */;
  %373.1
}

def @func_2775(%var_2772: float32, %var_2773: Tensor[(390, 2), float32]) -> (Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) {
  %374 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %375 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %376 = cast(%var_2772, dtype="float32") /* ty=float32 */;
  %377 = cast(%var_2773, dtype="float32") /* ty=Tensor[(390, 2), float32] */;
  %378 = reshape(%376, newshape=[]) /* ty=float32 */;
  %379 = reshape(%377, newshape=[6, 13, 10]) /* ty=Tensor[(6, 13, 10), float32] */;
  %380 = @func_542(%378, %379) /* ty=(Tensor[(6, 13, 10), float32],) */;
  %381 = %374.2;
  %382 = @func_2311() /* ty=Tensor[(13, 14, 12), float64] */;
  %383 = %375.3;
  %384 = %380.0;
  (%381, %382, %383, %384, %var_2772, %var_2773)
}

def @func_3593() -> Tensor[(13, 14, 12), float64] {
  %385 = @func_2491() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %385.2
}

def @func_9796() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(728), float32], Tensor[(13, ?, 8), float32]) {
  %386 = @func_8838() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %387 = @func_4666() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %388 = @func_5319() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %389 = @func_8586() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %390 = cast(meta[relay.Constant][14] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %391 = cast(meta[relay.Constant][14] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %392 = reshape(%390, newshape=[13, 7, 8]) /* ty=Tensor[(13, 7, 8), float32] */;
  %393 = reshape(%391, newshape=[13, 7, 8]) /* ty=Tensor[(13, 7, 8), float32] */;
  %394 = @func_9233(%392, %393) /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), bool], Tensor[(13, 7, 8), int8], Tensor[(13, 14, 12), float64], Tensor[(13, 7, 8), int8]) */;
  %395 = %386.0;
  %396 = %387.0;
  %397 = @func_2311() /* ty=Tensor[(13, 14, 12), float64] */;
  %398 = %388.1;
  %399 = %389.0;
  %400 = %394.1;
  %401 = @func_4580() /* ty=Tensor[(13, ?, 8), float32] */;
  (%395, %396, %397, %398, %399, %400, meta[relay.Constant][14] /* ty=Tensor[(728), float32] */, %401)
}

def @func_6984(%var_6982: Tensor[(1, 104), float64]) -> (Tensor[(4, 11, 10), float32], Tensor[(104), float64], Tensor[(1, 104), float64]) {
  %402 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 10), float32] */;
  %403 = cast(%var_6982, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %404 = reshape(%403, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %405 = @func_2362(%404) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */;
  %406 = acos(%402) /* ty=Tensor[(4, 11, 10), float32] */;
  %407 = %405.1;
  (%406, %407, %var_6982)
}

def @func_10355(%var_10344: Tensor[(512), int32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(8, 16, 4), int32], Tensor[(512), int32], Tensor[(13, ?, 8), bool], Tensor[(40), float32]) {
  %408 = @func_3274() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %409 = @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %410 = cast(%var_10344, dtype="int32") /* ty=Tensor[(512), int32] */;
  %411 = cast(%var_10344, dtype="int32") /* ty=Tensor[(512), int32] */;
  %412 = reshape(%410, newshape=[8, 16, 4]) /* ty=Tensor[(8, 16, 4), int32] */;
  %413 = reshape(%411, newshape=[8, 16, 4]) /* ty=Tensor[(8, 16, 4), int32] */;
  %414 = @func_4386(%412, %413) /* ty=(Tensor[(8, 16, 4), int32],) */;
  %415 = cast(meta[relay.Constant][16] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %416 = cast(meta[relay.Constant][16] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %417 = reshape(%415, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %418 = reshape(%416, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %419 = @func_377(%417, %418) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %420 = %408.0;
  %421 = %409.0;
  %422 = %414.0;
  %423 = %419.2;
  (%420, %421, %422, %var_10344, %423, meta[relay.Constant][16] /* ty=Tensor[(40), float32] */)
}

def @func_5618() -> Tensor[(13, ?, 8), float32] {
  @func_2799() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_6954() -> Tensor[(13, 14, 12), float64] {
  %424 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %424.0
}

def @func_11245() -> (Tensor[(13, 14, 12), float64],) {
  %425 = @func_8981() /* ty=Tensor[(13, 14, 12), float64] */;
  (%425,)
}

def @func_5237() -> Tensor[(13, 14, 12), float64] {
  %426 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %426.0
}

def @func_4303() -> (Tensor[(13, 14, 12), float64],) {
  %427 = @func_3500() /* ty=(Tensor[(13, 12, 8), int8], Tensor[(13, 14, 12), float64]) */;
  %428 = %427.1;
  %429 = cast(%428, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %430 = atanh(%429) /* ty=Tensor[(13, 14, 12), float64] */;
  (%430,)
}

def @func_8838() -> (Tensor[(13, 14, 12), float64],) {
  %431 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
  (%431,)
}

def @func_7559() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %432 = @func_3932() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
  %433 = @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */;
  %434 = %432.2;
  %435 = %433.5;
  (%434, %435)
}

def @func_11292() -> Tensor[(13, 14, 12), float64] {
  %436 = @func_11245() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %436.0
}

def @func_12716(%var_12699: Tensor[(231), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(231), bool]) {
  %437 = @func_8838() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %438 = cast(%var_12699, dtype="float64") /* ty=Tensor[(231), float64] */;
  %439 = cast(%var_12699, dtype="float64") /* ty=Tensor[(231), float64] */;
  %440 = reshape(%438, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float64] */;
  %441 = reshape(%439, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float64] */;
  %442 = @func_9384(%440, %441) /* ty=(Tensor[(11, 7, 3), float64],) */;
  %443 = %442.0;
  %444 = cast(%443, dtype="bool") /* ty=Tensor[(11, 7, 3), bool] */;
  %445 = shape_of(%var_12699, dtype="int32") /* ty=Tensor[(1), int32] */;
  %446 = cast(%var_12699, dtype="bool") /* ty=Tensor[(231), bool] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?), bool] */;
  %448 = @func_12458() /* ty=Tensor[(13, 14, 12), float64] */;
  %449 = %437.0;
  %450 = logical_and(%446, %447) /* ty=Tensor[(231), bool] */;
  (%448, %449, %450)
}

def @func_7836() -> Tensor[(13, 12, 8), int8] {
  %451 = @func_3500() /* ty=(Tensor[(13, 12, 8), int8], Tensor[(13, 14, 12), float64]) */;
  %451.0
}

def @func_7344() -> (Tensor[(13, 14, 12), float64],) {
  %452 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %453 = %452.1;
  (%453,)
}

def @func_9899() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) {
  %454 = @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %455 = %454.0;
  %456 = @func_3262() /* ty=Tensor[(13, 14, 12), bool] */;
  (%455, %456)
}

def @func_258() -> Tensor[(13, 14, 12), float64] {
  %457 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 14, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  sinh(%457) /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_7403() -> Tensor[(13, 14, 12), float64] {
  %458 = @func_5087() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %458.0
}

def @func_10295(%var_10237: Tensor[(14, 12, 9), float32], %var_10238: Tensor[(14, 12, 9), float32], %var_10275: float32) -> (Tensor[(14, 12, 9), float32], Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) {
  %459 = cast(%var_10238, dtype="float32") /* ty=Tensor[(14, 12, 9), float32] */;
  %460 = shape_of(%var_10237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%var_10237, dtype="float32") /* ty=Tensor[(14, 12, 9), float32] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %463 = floor_divide(%461, %462) /* ty=Tensor[(14, 12, 9), float32] */;
  %464 = cast(%var_10237, dtype="float32") /* ty=Tensor[(14, 12, 9), float32] */;
  %465 = shape_of(%463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%463, dtype="float32") /* ty=Tensor[(14, 12, 9), float32] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %468 = @func_6199() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
  %469 = cast(%var_10275, dtype="float32") /* ty=float32 */;
  %470 = cast(meta[relay.Constant][18] /* ty=Tensor[(390, 2), float32] */, dtype="float32") /* ty=Tensor[(390, 2), float32] */;
  %471 = reshape(%469, newshape=[]) /* ty=float32 */;
  %472 = reshape(%470, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
  %473 = @func_2775(%471, %472) /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) */;
  %474 = floor_mod(%466, %467) /* ty=Tensor[(14, 12, 9), float32] */;
  %475 = %468.0;
  %476 = %473.3;
  (%474, %475, %476, %var_10275, meta[relay.Constant][18] /* ty=Tensor[(390, 2), float32] */)
}

def @func_2335() -> (Tensor[(13, 14, 12), float64],) {
  %477 = @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %478 = %477.0;
  (%478,)
}

def @func_9337() -> (Tensor[(416), float64], Tensor[(104), float64]) {
  %479 = @func_7970() /* ty=Tensor[(416), float64] */;
  %480 = @func_4323() /* ty=Tensor[(104), float64] */;
  (%479, %480)
}

def @func_4231() -> Tensor[(13, 14, 12), float64] {
  %481 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %481.0
}

def @func_9031() -> Tensor[(104), float64] {
  @func_4323() /* ty=Tensor[(104), float64] */
}

def @func_1769() -> Tensor[(13, 14, 12), float64] {
  @func_258() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_7033() -> (Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32]) {
  %482 = @func_6142() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %483 = %482.1;
  %484 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 14, 12), float64] */, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
  %485 = shape_of(%483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%483, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %488 = @func_5719() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */;
  %489 = less_equal(%486, %487) /* ty=Tensor[(13, 14, 12), bool] */;
  %490 = %488.0;
  (%489, %490)
}

def @func_2883() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) {
  %491 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %493 = reshape(%492, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %494 = @func_277(%493) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %495 = %494.0;
  (%491, %495)
}

def @func_7635(%var_7629: Tensor[(104), float64]) -> (Tensor[(8, 4, 13), float32], Tensor[(4, 11, 10), float32], Tensor[(104), float64]) {
  %496 = @func_6325() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) */;
  %497 = %496.2;
  %498 = cast(%497, dtype="float32") /* ty=Tensor[(8, 4, 13), float32] */;
  %499 = cast(%var_7629, dtype="float64") /* ty=Tensor[(104), float64] */;
  %500 = reshape(%499, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
  %501 = @func_6984(%500) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(104), float64], Tensor[(1, 104), float64]) */;
  %502 = cos(%498) /* ty=Tensor[(8, 4, 13), float32] */;
  %503 = %501.0;
  (%502, %503, %var_7629)
}

def @func_10525() -> (Tensor[(13, ?, 8), float32],) {
  %504 = @func_5319() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %505 = %504.1;
  (%505,)
}

def @func_707() -> Tensor[(13, 14, 12), float64] {
  %506 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  %507 = cast(%506, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %508 = tan(%507) /* ty=Tensor[(13, 14, 12), float64] */;
  %509 = cast(%506, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %510 = shape_of(%508, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(%508, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%511, %512) /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_10453() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %513 = @func_3955() /* ty=Tensor[(13, 14, 12), float64] */;
  %514 = @func_5809() /* ty=Tensor[(13, 14, 12), float64] */;
  (%513, %514)
}

def @func_9641(%var_9614: Tensor[(40), float32]) -> (Tensor[(104), float64], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) {
  %515 = @func_5392() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(6, 40), float32], Tensor[(10, 4), float32], Tensor[(104), float64], Tensor[(104), float64]) */;
  %516 = cast(meta[relay.Constant][20] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %517 = cast(meta[relay.Constant][21] /* ty=Tensor[(56), uint32] */, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %518 = reshape(%516, newshape=[]) /* ty=uint32 */;
  %519 = reshape(%517, newshape=[56]) /* ty=Tensor[(56), uint32] */;
  %520 = @func_5472(%518, %519) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(660), int16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
  %521 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %522 = cast(%var_9614, dtype="float32") /* ty=Tensor[(40), float32] */;
  %523 = reshape(%522, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %524 = @func_3789(%523) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(40), float32]) */;
  %525 = @func_1697() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %526 = %515.3;
  %527 = %520.1;
  %528 = %521.0;
  %529 = %524.1;
  %530 = %525.0;
  (%526, %527, meta[relay.Constant][20] /* ty=uint32 */, meta[relay.Constant][21] /* ty=Tensor[(56), uint32] */, %528, %529, %var_9614, %530)
}

def @func_1619(%var_1614: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32]) {
  %531 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %532 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  %533 = cast(%var_1614, dtype="int32") /* ty=Tensor[(13, 14, 12), int32] */;
  %534 = shape_of(%532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %535 = cast(%532, dtype="int32") /* ty=Tensor[(13, 14, 12), int32] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %537 = %531.0;
  %538 = minimum(%535, %536) /* ty=Tensor[(13, 14, 12), int32] */;
  (%537, %538)
}

def @func_5696() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %539 = @func_2491() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %540 = @func_2491() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %541 = %539.0;
  %542 = %540.0;
  (%541, %542)
}

def @func_11231() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) {
  %543 = @func_7536() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %544 = @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %545 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
  %546 = %543.0;
  %547 = @func_3593() /* ty=Tensor[(13, 14, 12), float64] */;
  %548 = %544.0;
  %549 = %545.1;
  (%546, %547, %548, %549)
}

def @func_5472(%var_5449: uint32, %var_5450: Tensor[(56), uint32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(660), int16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) {
  %550 = @func_5087() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %551 = cast(%var_5449, dtype="uint32") /* ty=uint32 */;
  %552 = cast(%var_5450, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %553 = reshape(%551, newshape=[]) /* ty=uint32 */;
  %554 = reshape(%552, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint32] */;
  %555 = @func_2042(%553, %554) /* ty=(Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %556 = @func_4043() /* ty=(Tensor[(13, 6, 8), uint32], Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(1, 234), float64], Tensor[(8, 7, 1), bool]) */;
  %557 = cast(meta[relay.Constant][22] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %558 = cast(meta[relay.Constant][22] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %559 = reshape(%557, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %560 = reshape(%558, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %561 = @func_377(%559, %560) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %562 = @func_4412() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %563 = %550.0;
  %564 = @func_3626() /* ty=Tensor[(13, ?, 8), float32] */;
  %565 = %555.1;
  %566 = %556.4;
  %567 = %561.1;
  %568 = %562.0;
  (%563, %564, %565, %var_5449, %var_5450, %566, %567, meta[relay.Constant][22] /* ty=Tensor[(40), float32] */, %568)
}

def @func_4690(%var_4675: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), int32], Tensor[(13, 14, 12), bool]) {
  %569 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
  %570 = cast(%var_4675, dtype="int32") /* ty=Tensor[(13, 14, 12), int32] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="int32") /* ty=Tensor[(13, 14, 12), int32] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %574 = @func_2721() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) */;
  %575 = %574.2;
  %576 = cast(%var_4675, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
  %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%575, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %580 = bitwise_or(%572, %573) /* ty=Tensor[(13, 14, 12), int32] */;
  %581 = greater_equal(%578, %579) /* ty=Tensor[(13, 14, 12), bool] */;
  (%580, %581)
}

def @main(%var_12739: Tensor[(11, 4, 4), float64]) -> (Tensor[(11, 4, 4), float64],) {
  %582 = cast(%var_12739, dtype="float64") /* ty=Tensor[(11, 4, 4), float64] */;
  %583 = sigmoid(%582) /* ty=Tensor[(11, 4, 4), float64] */;
  (%583,)
}

def @func_1333(%var_1306: Tensor[(40), float32]) -> (Tensor[(40), float32], Tensor[(13, ?, 8), bool]) {
  %584 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %585 = cast(%var_1306, dtype="float32") /* ty=Tensor[(40), float32] */;
  %586 = cast(%584, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %587 = reshape(%585, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %588 = reshape(%586, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %589 = @func_1261(%587, %588) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */;
  %590 = %589.5;
  %591 = cast(%590, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %592 = shape_of(%584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%584, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %595 = greater_equal(%593, %594) /* ty=Tensor[(13, ?, 8), bool] */;
  (%var_1306, %595)
}

def @func_10129(%var_10122: Tensor[(40), float32], %var_10123: Tensor[(416), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(416), float64]) {
  %596 = @func_5319() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %597 = cast(%var_10122, dtype="float32") /* ty=Tensor[(40), float32] */;
  %598 = cast(%var_10123, dtype="float64") /* ty=Tensor[(416), float64] */;
  %599 = reshape(%597, newshape=[1, 40]) /* ty=Tensor[(1, 40), float32] */;
  %600 = reshape(%598, newshape=[8, 52]) /* ty=Tensor[(8, 52), float64] */;
  %601 = @func_6817(%599, %600) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(8, 52), float64], Tensor[(13, 14, 12), float64], Tensor[(?, 40), bool], Tensor[(13, 14, 12), float64]) */;
  %602 = %596.0;
  %603 = %601.0;
  (%602, %603, %var_10122, %var_10123)
}

def @func_3291() -> (Tensor[(13, ?, 8), float32],) {
  %604 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  (%604,)
}

def @func_6682() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %605 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %606 = cast(meta[relay.Constant][23] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %607 = reshape(%606, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %608 = @func_1333(%607) /* ty=(Tensor[(40), float32], Tensor[(13, ?, 8), bool]) */;
  %609 = @func_6261() /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */;
  %610 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %611 = %605.0;
  %612 = %608.1;
  %613 = %609.1;
  %614 = %610.4;
  (%611, %612, meta[relay.Constant][23] /* ty=Tensor[(40), float32] */, %613, %614)
}

def @func_12677() -> Tensor[(416), float64] {
  @func_7970() /* ty=Tensor[(416), float64] */
}

def @func_5991() -> (Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) {
  %615 = @func_845() /* ty=Tensor[(13, 14, 12), float32] */;
  %616 = @func_3955() /* ty=Tensor[(13, 14, 12), float64] */;
  (%615, %616)
}

def @func_6424(%var_6402: Tensor[(13, 8, 8), float32]) -> (Tensor[(13, 8, 8), float32], Tensor[(13, ?, 8), float32]) {
  %617 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %618 = cast(%617, dtype="float32") /* ty=Tensor[(13, ?, 8), float32] */;
  %619 = cast(%var_6402, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  %620 = @func_5570() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %621 = floor_mod(%618, %619) /* ty=Tensor[(13, 8, 8), float32] */;
  %622 = %620.0;
  (%621, %622)
}

def @func_12308(%var_12223: Tensor[(13, 9, 8), float32], %var_12238: Tensor[(1144), float32], %var_12239: Tensor[(1, 416), float64], %var_12243: Tensor[(13, 15, 8), float32], %var_12275: Tensor[(234), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(1144), float32], Tensor[(1, 416), float64], Tensor[(13, 15, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 8), float32], Tensor[(13, 9, 2), float64], Tensor[(234), float64]) {
  %623 = @func_11245() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %624 = cast(%var_12238, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %625 = cast(%var_12239, dtype="float64") /* ty=Tensor[(1, 416), float64] */;
  %626 = reshape(%624, newshape=[13, 11, 8]) /* ty=Tensor[(13, 11, 8), float32] */;
  %627 = reshape(%625, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %628 = @func_11350(%626, %627) /* ty=(Tensor[(13, 11, 8), bool], Tensor[(1, 234), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) */;
  %629 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %630 = %629.3;
  %631 = cast(%630, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %632 = cast(%var_12243, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
  %633 = @func_12147() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(13, 14, 12), float64]) */;
  %634 = cast(%630, dtype="uint16") /* ty=Tensor[(13, ?, 8), uint16] */;
  %635 = cast(%var_12223, dtype="uint16") /* ty=Tensor[(13, 9, 8), uint16] */;
  %636 = bitwise_xor(%634, %635) /* ty=Tensor[(13, 9, 8), uint16] */;
  %637 = cast(%636, dtype="float32") /* ty=Tensor[(13, 9, 8), float32] */;
  %638 = cast(%var_12275, dtype="float64") /* ty=Tensor[(234), float64] */;
  %639 = cast(%var_12275, dtype="float64") /* ty=Tensor[(234), float64] */;
  %640 = reshape(%638, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), float64] */;
  %641 = reshape(%639, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), float64] */;
  %642 = @func_1452(%640, %641) /* ty=(Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float32]) */;
  %643 = %623.0;
  %644 = %628.2;
  %645 = minimum(%631, %632) /* ty=Tensor[(13, 15, 8), float64] */;
  %646 = %633.2;
  %647 = atanh(%637) /* ty=Tensor[(13, 9, 8), float32] */;
  %648 = %642.1;
  (%643, %644, %var_12238, %var_12239, %645, %646, %647, %648, %var_12275)
}

def @func_8981() -> Tensor[(13, 14, 12), float64] {
  %649 = @func_5991() /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */;
  %649.1
}

def @func_3557() -> Tensor[(13, ?, 8), float32] {
  @func_389() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_1697() -> (Tensor[(13, ?, 8), float32],) {
  %650 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %651 = %650.3;
  (%651,)
}

def @func_5303() -> (Tensor[(13, 14, 12), float64],) {
  %652 = @func_5237() /* ty=Tensor[(13, 14, 12), float64] */;
  (%652,)
}

def @func_3955() -> Tensor[(13, 14, 12), float64] {
  %653 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %653.0
}

def @func_12405() -> (Tensor[(13, 14, 12), float64], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(13, 14, 12), float64]) {
  %654 = @func_5696() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %655 = cast(meta[relay.Constant][24] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %656 = reshape(%655, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %657 = @func_690(%656) /* ty=(Tensor[(16, 7, 9), float32],) */;
  %658 = @func_6199() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
  %659 = %654.1;
  %660 = %657.0;
  %661 = %658.1;
  (%659, %660, meta[relay.Constant][24] /* ty=Tensor[(1008), float32] */, %661)
}

def @func_7070(%var_7064: Tensor[(234), float64]) -> (Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(12, 5, 11), uint16], Tensor[(660), int16], Tensor[(234), float64]) {
  %662 = cast(meta[relay.Constant][25] /* ty=Tensor[(660), int16] */, dtype="int16") /* ty=Tensor[(660), int16] */;
  %663 = cast(%var_7064, dtype="float64") /* ty=Tensor[(234), float64] */;
  %664 = reshape(%662, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int16] */;
  %665 = reshape(%663, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %666 = @func_2427(%664, %665) /* ty=(Tensor[(12, 5, 11), uint16], Tensor[(13, 9, 2), bool]) */;
  %667 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
  %668 = @func_4376() /* ty=Tensor[(40), float32] */;
  %669 = %666.0;
  (%667, %668, %669, meta[relay.Constant][25] /* ty=Tensor[(660), int16] */, %var_7064)
}

def @func_8559() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %670 = @func_5952() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
  %671 = %670.1;
  %672 = @func_3593() /* ty=Tensor[(13, 14, 12), float64] */;
  (%671, %672)
}

def @func_4160(%var_4153: Tensor[(13, 4, 8), float32]) -> Tensor[(13, 4, 8), int8] {
  %673 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %674 = cast(%673, dtype="int8") /* ty=Tensor[(13, ?, 8), int8] */;
  %675 = cast(%var_4153, dtype="int8") /* ty=Tensor[(13, 4, 8), int8] */;
  bitwise_and(%674, %675) /* ty=Tensor[(13, 4, 8), int8] */
}

def @func_4538() -> Tensor[(13, 14, 12), float64] {
  %676 = @func_891() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */;
  %676.0
}

def @func_4505() -> (Tensor[(13, 14, 12), float64],) {
  %677 = @func_4303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %678 = %677.0;
  (%678,)
}

def @func_5164(%var_5152: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(390, 2), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64]) {
  %679 = @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %680 = @func_3274() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %681 = cast(-1.75459f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %682 = cast(%var_5152, dtype="float32") /* ty=Tensor[(780), float32] */;
  %683 = reshape(%681, newshape=[]) /* ty=float32 */;
  %684 = reshape(%682, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
  %685 = @func_2775(%683, %684) /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) */;
  %686 = %679.0;
  %687 = @func_4231() /* ty=Tensor[(13, 14, 12), float64] */;
  %688 = %680.0;
  %689 = %685.5;
  %690 = @func_4794() /* ty=Tensor[(13, 14, 12), float64] */;
  (%686, %687, %688, %689, -1.75459f /* ty=float32 */, %var_5152, %690)
}

def @func_1410() -> Tensor[(26, 4), float64] {
  %691 = @func_891() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */;
  %691.1
}

def @func_2227() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %692 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %693 = %692.1;
  %694 = cast(%693, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %695 = reshape(%694, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %696 = @func_277(%695) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %697 = %696.0;
  %698 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  %699 = @func_1769() /* ty=Tensor[(13, 14, 12), float64] */;
  (%693, %697, %698, %699)
}

def @func_10871() -> (Tensor[(13, 12, 8), int8],) {
  %700 = @func_7836() /* ty=Tensor[(13, 12, 8), int8] */;
  (%700,)
}

def @func_277(%var_263: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) {
  %701 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %702 = cast(%var_263, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
  %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%701, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %706 = not_equal(%704, %705) /* ty=Tensor[(13, 14, 12), bool] */;
  %707 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  (%706, %707)
}

def @func_6142() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %708 = @func_5800() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %709 = @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %710 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  %711 = %708.3;
  %712 = %709.0;
  (%710, %711, %712)
}

def @func_5423() -> (Tensor[(13, 14, 12), float64],) {
  %713 = @func_4505() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %714 = %713.0;
  (%714,)
}

def @func_1813(%var_1793: Tensor[(1, 40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), bool], Tensor[(6, 40), float32]) {
  %715 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %716 = cast(%var_1793, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
  %717 = reshape(%716, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %718 = @func_632(%717) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32]) */;
  %719 = cast(%var_1793, dtype="bool") /* ty=Tensor[(1, 40), bool] */;
  %720 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 40), float32] */, dtype="bool") /* ty=Tensor[(6, 40), bool] */;
  %721 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 40), float32] */, dtype="float32") /* ty=Tensor[(6, 40), float32] */;
  %722 = %715.0;
  %723 = %718.0;
  %724 = greater(%719, %720) /* ty=Tensor[(6, 40), bool] */;
  %725 = acosh(%721) /* ty=Tensor[(6, 40), float32] */;
  (%722, %723, %724, %725)
}

def @func_377(%var_323: Tensor[(5, 4, 2), float32], %var_324: Tensor[(5, 4, 2), float32]) -> (Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  %726 = cast(%var_324, dtype="float32") /* ty=Tensor[(5, 4, 2), float32] */;
  %727 = shape_of(%var_323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%var_323, dtype="float32") /* ty=Tensor[(5, 4, 2), float32] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %730 = cast(meta[relay.Constant][27] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %731 = reshape(%730, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %732 = @func_74(%731) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %733 = %732.0;
  %734 = cast(meta[relay.Constant][27] /* ty=Tensor[(104), float64] */, dtype="bool") /* ty=Tensor[(104), bool] */;
  %735 = shape_of(%733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(%733, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %738 = cast(%733, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %739 = reshape(%738, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %740 = @func_74(%739) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %741 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %742 = cast(%741, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %743 = reshape(%742, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %744 = @func_277(%743) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %745 = floor_divide(%728, %729) /* ty=Tensor[(5, 4, 2), float32] */;
  %746 = greater(%736, %737) /* ty=Tensor[(13, ?, 8), bool] */;
  %747 = %740.0;
  %748 = %744.1;
  (%745, %741, %746, %747, %748)
}

def @func_1927() -> (Tensor[(13, 14, 12), float64],) {
  %749 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  (%749,)
}

def @func_9416() -> (Tensor[(7, 2, 3), float32], Tensor[(11, 7, 3), float64], Tensor[(231), float64]) {
  %750 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 3), float32] */;
  %751 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(7, 2, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %752 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 3), float32] */;
  %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %754 = cast(meta[relay.Constant][30] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %755 = cast(meta[relay.Constant][30] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %756 = reshape(%754, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float64] */;
  %757 = reshape(%755, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float64] */;
  %758 = @func_9384(%756, %757) /* ty=(Tensor[(11, 7, 3), float64],) */;
  %759 = mod(%752, %753) /* ty=Tensor[(7, 2, 3), float32] */;
  %760 = %758.0;
  (%759, %760, meta[relay.Constant][30] /* ty=Tensor[(231), float64] */)
}

def @func_4376() -> Tensor[(40), float32] {
  %761 = @func_3932() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
  %761.3
}

def @func_8149() -> (Tensor[(13, 14, 12), float64],) {
  %762 = @func_5809() /* ty=Tensor[(13, 14, 12), float64] */;
  (%762,)
}

def @func_2822() -> Tensor[(13, 14, 12), float64] {
  @func_2311() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_2721() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) {
  %763 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %764 = %763.0;
  %765 = cast(%764, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %766 = reshape(%765, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %767 = @func_277(%766) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %768 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %769 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %770 = reshape(%769, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %771 = @func_74(%770) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %772 = %767.1;
  %773 = cast(%772, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %774 = reshape(%773, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %775 = @func_1619(%774) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32]) */;
  %776 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 1680), float64] */, dtype="float64") /* ty=Tensor[(1, 1680), float64] */;
  %777 = reshape(%776, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float64] */;
  %778 = @func_2559(%777) /* ty=(Tensor[(12, 10, 14), float64],) */;
  %779 = cast(meta[relay.Constant][33] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %780 = cast(meta[relay.Constant][33] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %781 = reshape(%779, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %782 = reshape(%780, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %783 = @func_377(%781, %782) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %784 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %785 = %768.0;
  %786 = %771.0;
  %787 = %775.0;
  %788 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  %789 = %778.0;
  %790 = %783.0;
  %791 = %784.2;
  (%764, %772, %785, %786, meta[relay.Constant][31] /* ty=Tensor[(1, 104), float64] */, %787, %788, %789, meta[relay.Constant][32] /* ty=Tensor[(1, 1680), float64] */, %790, meta[relay.Constant][33] /* ty=Tensor[(40), float32] */, %791)
}

def @func_5319() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %792 = @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %793 = @func_4538() /* ty=Tensor[(13, 14, 12), float64] */;
  %794 = %792.0;
  (%793, %794)
}

def @func_6325() -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) {
  %795 = cast(meta[relay.Constant][34] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %796 = reshape(%795, newshape=[8, 4, 13]) /* ty=Tensor[(8, 4, 13), float64] */;
  %797 = @func_5835(%796) /* ty=(Tensor[(8, 4, 13), float64],) */;
  %798 = @func_3626() /* ty=Tensor[(13, ?, 8), float32] */;
  %799 = @func_5809() /* ty=Tensor[(13, 14, 12), float64] */;
  %800 = %797.0;
  (%798, %799, %800, meta[relay.Constant][34] /* ty=Tensor[(416), float64] */)
}

def @func_5719() -> (Tensor[(13, ?, 8), float32], Tensor[(104), float64]) {
  %801 = @func_5570() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %802 = %801.0;
  %803 = cast(%802, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %804 = reshape(%803, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %805 = @func_2362(%804) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */;
  %806 = %805.1;
  (%802, %806)
}

def @func_11738(%var_11731: Tensor[(40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(5, 4, 2), float32], Tensor[(40), float32]) {
  %807 = @func_5800() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %808 = cast(%var_11731, dtype="float32") /* ty=Tensor[(40), float32] */;
  %809 = cast(%var_11731, dtype="float32") /* ty=Tensor[(40), float32] */;
  %810 = reshape(%808, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %811 = reshape(%809, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %812 = @func_377(%810, %811) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %813 = %807.0;
  %814 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
  %815 = @func_7045() /* ty=Tensor[(13, ?, 8), float32] */;
  %816 = %812.0;
  (%813, %814, %815, %816, %var_11731)
}

def @func_632(%var_623: Tensor[(40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32]) {
  %817 = cast(%var_623, dtype="float32") /* ty=Tensor[(40), float32] */;
  %818 = cast(%var_623, dtype="float32") /* ty=Tensor[(40), float32] */;
  %819 = reshape(%817, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %820 = reshape(%818, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %821 = @func_377(%819, %820) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %822 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %823 = %821.4;
  (%822, %823, %var_623)
}

def @func_10538() -> Tensor[(13, ?, 8), float32] {
  @func_2799() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_2427(%var_2372: Tensor[(12, 5, 11), int16], %var_2379: Tensor[(234), float64]) -> (Tensor[(12, 5, 11), uint16], Tensor[(13, 9, 2), bool]) {
  %824 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 5, 11), int16] */, dtype="bool") /* ty=Tensor[(12, 5, 11), bool] */;
  %825 = shape_of(%var_2372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%var_2372, dtype="bool") /* ty=Tensor[(12, 5, 11), bool] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %828 = greater(%826, %827) /* ty=Tensor[(12, 5, 11), bool] */;
  %829 = cast(%var_2372, dtype="uint16") /* ty=Tensor[(12, 5, 11), uint16] */;
  %830 = shape_of(%828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%828, dtype="uint16") /* ty=Tensor[(12, 5, 11), uint16] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %833 = cast(%var_2379, dtype="float64") /* ty=Tensor[(234), float64] */;
  %834 = cast(%var_2379, dtype="float64") /* ty=Tensor[(234), float64] */;
  %835 = reshape(%833, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), float64] */;
  %836 = reshape(%834, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), float64] */;
  %837 = @func_1452(%835, %836) /* ty=(Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float32]) */;
  %838 = %837.0;
  %839 = cast(%var_2379, dtype="bool") /* ty=Tensor[(234), bool] */;
  %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%838, dtype="bool") /* ty=Tensor[(13, 9, 2), bool] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %843 = multiply(%831, %832) /* ty=Tensor[(12, 5, 11), uint16] */;
  %844 = equal(%841, %842) /* ty=Tensor[(13, 9, 2), bool] */;
  (%843, %844)
}

def @func_389() -> Tensor[(13, ?, 8), float32] {
  %845 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %845.2
}

def @func_7970() -> Tensor[(416), float64] {
  %846 = @func_6325() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) */;
  %846.3
}

def @func_2799() -> Tensor[(13, ?, 8), float32] {
  %847 = @func_1697() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %847.0
}

def @func_9051() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %848 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %849 = @func_5303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %850 = %848.0;
  %851 = %849.0;
  (%850, %851)
}

def @func_7454() -> Tensor[(13, 14, 12), float64] {
  %852 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %852.0
}

def @func_11897() -> (Tensor[(13, 14, 12), float64],) {
  %853 = @func_11835() /* ty=(Tensor[(13, 12, 8), int8], Tensor[(8, 4, 13), float64], Tensor[(13, 14, 12), float64]) */;
  %854 = %853.2;
  (%854,)
}

def @func_4386(%var_4381: Tensor[(8, 16, 4), int32], %var_4382: Tensor[(8, 16, 4), int32]) -> (Tensor[(8, 16, 4), int32],) {
  %855 = cast(%var_4382, dtype="int32") /* ty=Tensor[(8, 16, 4), int32] */;
  %856 = shape_of(%var_4381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%var_4381, dtype="int32") /* ty=Tensor[(8, 16, 4), int32] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %859 = subtract(%857, %858) /* ty=Tensor[(8, 16, 4), int32] */;
  (%859,)
}

def @func_8705() -> Tensor[(13, 14, 12), float64] {
  @func_7182() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_10481() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool]) {
  %860 = @func_8240() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), float64]) */;
  %861 = @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */;
  %862 = %860.2;
  %863 = %861.2;
  (%862, %863)
}

def @func_6106() -> (Tensor[(13, ?, 8), float32],) {
  %864 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  (%864,)
}

def @func_7692() -> (Tensor[(13, 14, 12), bool],) {
  %865 = @func_2883() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) */;
  %866 = %865.1;
  (%866,)
}

def @func_1261(%var_1247: Tensor[(40), float32], %var_1259: Tensor[(104), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) {
  %867 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
  %868 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
  %869 = cast(%868, dtype="uint16") /* ty=Tensor[(13, 14, 12), uint16] */;
  %870 = shape_of(%867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%867, dtype="uint16") /* ty=Tensor[(13, 14, 12), uint16] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %873 = cast(%var_1247, dtype="float32") /* ty=Tensor[(40), float32] */;
  %874 = cast(%var_1247, dtype="float32") /* ty=Tensor[(40), float32] */;
  %875 = reshape(%873, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %876 = reshape(%874, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %877 = @func_377(%875, %876) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %878 = cast(%var_1259, dtype="float64") /* ty=Tensor[(104), float64] */;
  %879 = reshape(%878, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %880 = @func_74(%879) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %881 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
  %882 = bitwise_xor(%871, %872) /* ty=Tensor[(13, 14, 12), uint16] */;
  %883 = %877.4;
  %884 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
  %885 = %880.0;
  (%881, %882, %883, %var_1247, %884, %885, %var_1259)
}

def @func_2559(%var_2554: Tensor[(12, 10, 14), float64]) -> (Tensor[(12, 10, 14), float64],) {
  %886 = cast(%var_2554, dtype="float64") /* ty=Tensor[(12, 10, 14), float64] */;
  %887 = acos(%886) /* ty=Tensor[(12, 10, 14), float64] */;
  (%887,)
}

def @func_11668(%var_11540: Tensor[(10, 9, 9), float32], %var_11549: float32, %var_11550: Tensor[(780), float32], %var_11614: Tensor[(8, 64), int32]) -> (Tensor[(13, 14, 12), float64], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(2, 28), uint32], Tensor[(13, 14, 12), float64], Tensor[(10, 9, 9), float32], Tensor[(40), float32], Tensor[(8, 64), int32], Tensor[(13, ?, 8), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(10, 9, 9), float64]) {
  %888 = cast(%var_11549, dtype="float32") /* ty=float32 */;
  %889 = cast(%var_11550, dtype="float32") /* ty=Tensor[(780), float32] */;
  %890 = reshape(%888, newshape=[]) /* ty=float32 */;
  %891 = reshape(%889, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
  %892 = @func_2775(%890, %891) /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) */;
  %893 = cast(%var_11549, dtype="uint32") /* ty=uint32 */;
  %894 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 28), uint32] */, dtype="uint32") /* ty=Tensor[(2, 28), uint32] */;
  %895 = reshape(%893, newshape=[]) /* ty=uint32 */;
  %896 = reshape(%894, newshape=[56]) /* ty=Tensor[(56), uint32] */;
  %897 = @func_6589(%895, %896) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(56), uint32], Tensor[(13, 14, 12), int8]) */;
  %898 = @func_2721() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) */;
  %899 = cast(%var_11540, dtype="float32") /* ty=Tensor[(10, 9, 9), float32] */;
  %900 = cast(%var_11614, dtype="int32") /* ty=Tensor[(8, 64), int32] */;
  %901 = reshape(%900, newshape=[512]) /* ty=Tensor[(512), int32] */;
  %902 = @func_4870(%901) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 16, 4), int32], Tensor[(13, 14, 12), float64], Tensor[(512), float64]) */;
  %903 = @func_6220() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %904 = cast(meta[relay.Constant][37] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %905 = reshape(%904, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %906 = @func_6424(%905) /* ty=(Tensor[(13, 8, 8), float32], Tensor[(13, ?, 8), float32]) */;
  %907 = %892.1;
  %908 = cast(%907, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %909 = reshape(%908, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %910 = @func_1619(%909) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32]) */;
  %911 = cast(%var_11540, dtype="float32") /* ty=Tensor[(10, 9, 9), float32] */;
  %912 = atan(%911) /* ty=Tensor[(10, 9, 9), float32] */;
  %913 = cast(%912, dtype="float32") /* ty=Tensor[(10, 9, 9), float32] */;
  %914 = rsqrt(%913) /* ty=Tensor[(10, 9, 9), float32] */;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(10, 9, 9), float32] */;
  %916 = asin(%915) /* ty=Tensor[(10, 9, 9), float32] */;
  %917 = cast(%916, dtype="float64") /* ty=Tensor[(10, 9, 9), float64] */;
  %918 = %897.2;
  %919 = %898.5;
  %920 = sigmoid(%899) /* ty=Tensor[(10, 9, 9), float32] */;
  %921 = %902.4;
  %922 = %903.0;
  %923 = %906.0;
  %924 = %910.0;
  %925 = @func_4376() /* ty=Tensor[(40), float32] */;
  %926 = log(%917) /* ty=Tensor[(10, 9, 9), float64] */;
  (%907, %var_11549, %var_11550, %918, meta[relay.Constant][36] /* ty=Tensor[(2, 28), uint32] */, %919, %920, %921, %var_11614, %922, %923, meta[relay.Constant][37] /* ty=Tensor[(832), float32] */, %924, %925, %926)
}

def @func_4132() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 8), bool]) {
  %927 = @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %928 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %929 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %930 = %929.2;
  %931 = cast(%930, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %932 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 14, 8), float32] */, dtype="bool") /* ty=Tensor[(13, 14, 8), bool] */;
  %933 = %927.1;
  %934 = %928.0;
  %935 = equal(%931, %932) /* ty=Tensor[(13, 14, 8), bool] */;
  (%933, %934, %935)
}

def @func_3174() -> Tensor[(13, 14, 12), float64] {
  %936 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %936.0
}

def @func_891() -> (Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) {
  %937 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %938 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  %939 = %937.3;
  (%938, %939)
}

def @func_4580() -> Tensor[(13, ?, 8), float32] {
  @func_2799() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_6738(%var_6733: Tensor[(56), uint32]) -> (Tensor[(104), float64], Tensor[(40), float32], uint32, Tensor[(56), uint32]) {
  %940 = cast(meta[relay.Constant][39] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %941 = cast(%var_6733, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %942 = reshape(%940, newshape=[]) /* ty=uint32 */;
  %943 = reshape(%941, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint32] */;
  %944 = @func_2042(%942, %943) /* ty=(Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %945 = @func_4323() /* ty=Tensor[(104), float64] */;
  %946 = %944.2;
  (%945, %946, meta[relay.Constant][39] /* ty=uint32 */, %var_6733)
}

def @func_5392() -> (Tensor[(13, 14, 12), float64], Tensor[(6, 40), float32], Tensor[(10, 4), float32], Tensor[(104), float64], Tensor[(104), float64]) {
  %947 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 4), float32] */, dtype="float32") /* ty=Tensor[(10, 4), float32] */;
  %948 = reshape(%947, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %949 = @func_4483(%948) /* ty=(Tensor[(13, ?, 8), float32], Tensor[(6, 40), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
  %950 = cast(meta[relay.Constant][41] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %951 = reshape(%950, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %952 = @func_2362(%951) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */;
  %953 = @func_3593() /* ty=Tensor[(13, 14, 12), float64] */;
  %954 = %949.1;
  %955 = %952.1;
  (%953, %954, meta[relay.Constant][40] /* ty=Tensor[(10, 4), float32] */, %955, meta[relay.Constant][41] /* ty=Tensor[(104), float64] */)
}

def @func_2042(%var_1986: uint32, %var_1987: Tensor[(8, 7, 1), uint32]) -> (Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %956 = cast(%var_1986, dtype="uint32") /* ty=uint32 */;
  %957 = cast(%var_1987, dtype="uint32") /* ty=Tensor[(8, 7, 1), uint32] */;
  %958 = maximum(%956, %957) /* ty=Tensor[(8, 7, 1), uint32] */;
  %959 = cast(%var_1986, dtype="float64") /* ty=float64 */;
  %960 = cast(%958, dtype="float64") /* ty=Tensor[(8, 7, 1), float64] */;
  %961 = cast(meta[relay.Constant][42] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %962 = cast(meta[relay.Constant][42] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %963 = reshape(%961, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %964 = reshape(%962, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %965 = @func_377(%963, %964) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %966 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %967 = @func_891() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */;
  %968 = mod(%959, %960) /* ty=Tensor[(8, 7, 1), float64] */;
  %969 = %965.3;
  %970 = %966.1;
  %971 = %967.0;
  (%968, %969, meta[relay.Constant][42] /* ty=Tensor[(40), float32] */, %970, %971)
}

def @func_12204() -> Tensor[(13, 14, 12), float64] {
  @func_2822() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_4870(%var_4812: Tensor[(512), int32]) -> (Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 16, 4), int32], Tensor[(13, 14, 12), float64], Tensor[(512), float64]) {
  %972 = @func_4303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %973 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %974 = cast(meta[relay.Constant][43] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %975 = reshape(%974, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %976 = @func_74(%975) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %977 = %973.3;
  %978 = cast(%977, dtype="float32") /* ty=Tensor[(40), float32] */;
  %979 = reshape(%978, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %980 = @func_1333(%979) /* ty=(Tensor[(40), float32], Tensor[(13, ?, 8), bool]) */;
  %981 = @func_4303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %982 = cast(%var_4812, dtype="int32") /* ty=Tensor[(512), int32] */;
  %983 = cast(%var_4812, dtype="int32") /* ty=Tensor[(512), int32] */;
  %984 = reshape(%982, newshape=[8, 16, 4]) /* ty=Tensor[(8, 16, 4), int32] */;
  %985 = reshape(%983, newshape=[8, 16, 4]) /* ty=Tensor[(8, 16, 4), int32] */;
  %986 = @func_4386(%984, %985) /* ty=(Tensor[(8, 16, 4), int32],) */;
  %987 = @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %988 = cast(%var_4812, dtype="float64") /* ty=Tensor[(512), float64] */;
  %989 = %972.0;
  %990 = %976.0;
  %991 = %980.0;
  %992 = %981.0;
  %993 = %986.0;
  %994 = %987.1;
  %995 = cosh(%988) /* ty=Tensor[(512), float64] */;
  (%989, %977, %990, meta[relay.Constant][43] /* ty=Tensor[(104), float64] */, %991, %992, %993, %994, %995)
}

def @func_5570() -> (Tensor[(13, ?, 8), float32],) {
  %996 = @func_4779() /* ty=Tensor[(13, ?, 8), float32] */;
  (%996,)
}

def @func_11807() -> (Tensor[(13, 14, 12), float64],) {
  %997 = @func_5303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %998 = %997.0;
  (%998,)
}

def @func_12539() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64]) {
  %999 = @func_12328() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1000 = @func_11835() /* ty=(Tensor[(13, 12, 8), int8], Tensor[(8, 4, 13), float64], Tensor[(13, 14, 12), float64]) */;
  %1001 = @func_8423() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(20, 2), float32], Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), float64]) */;
  %1002 = %999.0;
  %1003 = %1000.2;
  %1004 = %1001.2;
  (%1002, %1003, %1004)
}

def @func_10832() -> (Tensor[(13, 14, 12), float64], Tensor[(56), uint32], Tensor[(13, ?, 8), bool], Tensor[(13, 14, 12), bool]) {
  %1005 = cast(meta[relay.Constant][45] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1006 = cast(meta[relay.Constant][44] /* ty=Tensor[(56), uint32] */, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %1007 = reshape(%1005, newshape=[]) /* ty=uint32 */;
  %1008 = reshape(%1006, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint32] */;
  %1009 = @func_2042(%1007, %1008) /* ty=(Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1010 = %1009.1;
  %1011 = cast(%1010, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %1012 = cast(meta[relay.Constant][45] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %1013 = @func_7692() /* ty=(Tensor[(13, 14, 12), bool],) */;
  %1014 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %1015 = less_equal(%1011, %1012) /* ty=Tensor[(13, ?, 8), bool] */;
  %1016 = %1013.0;
  (%1014, meta[relay.Constant][44] /* ty=Tensor[(56), uint32] */, %1015, %1016)
}

def @func_8048(%var_8006: Tensor[(416), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64], Tensor[(104), float64], Tensor[(104, 1), float64], Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) {
  %1017 = @func_5087() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1018 = cast(%var_8006, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1019 = reshape(%1018, newshape=[8, 4, 13]) /* ty=Tensor[(8, 4, 13), float64] */;
  %1020 = @func_5835(%1019) /* ty=(Tensor[(8, 4, 13), float64],) */;
  %1021 = cast(meta[relay.Constant][46] /* ty=Tensor[(104, 1), float64] */, dtype="float64") /* ty=Tensor[(104, 1), float64] */;
  %1022 = reshape(%1021, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1023 = @func_7635(%1022) /* ty=(Tensor[(8, 4, 13), float32], Tensor[(4, 11, 10), float32], Tensor[(104), float64]) */;
  %1024 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
  %1025 = @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %1026 = %1017.1;
  %1027 = %1020.0;
  %1028 = %1023.2;
  %1029 = %1024.1;
  %1030 = %1025.1;
  (%1026, %1027, %var_8006, %1028, meta[relay.Constant][46] /* ty=Tensor[(104, 1), float64] */, %1029, %1030)
}

def @func_7221() -> (Tensor[(11, 2, 6), float64],) {
  %1031 = @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %1032 = %1031.1;
  (%1032,)
}

def @func_7182() -> Tensor[(13, 14, 12), float64] {
  %1033 = @func_3274() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1033.0
}

def @func_690(%var_687: Tensor[(16, 7, 9), float32]) -> (Tensor[(16, 7, 9), float32],) {
  %1034 = cast(%var_687, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  %1035 = acosh(%1034) /* ty=Tensor[(16, 7, 9), float32] */;
  (%1035,)
}

def @func_8701() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1036 = @func_3274() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1037 = @func_6261() /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */;
  %1038 = %1036.0;
  %1039 = %1037.1;
  (%1038, %1039)
}

def @func_12458() -> Tensor[(13, 14, 12), float64] {
  @func_666() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_5835(%var_5825: Tensor[(8, 4, 13), float64]) -> (Tensor[(8, 4, 13), float64],) {
  %1040 = cast(%var_5825, dtype="float64") /* ty=Tensor[(8, 4, 13), float64] */;
  %1041 = acosh(%1040) /* ty=Tensor[(8, 4, 13), float64] */;
  (%1041,)
}

def @func_9356() -> Tensor[(13, 14, 12), float64] {
  @func_8981() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_2151() -> (Tensor[(13, 14, 12), float64],) {
  %1042 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %1043 = %1042.1;
  (%1043,)
}

def @func_819(%var_770: Tensor[(780), float32]) -> (Tensor[(13, ?, 8), float32], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  %1044 = cast(-7.48448f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1045 = cast(%var_770, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1046 = reshape(%1044, newshape=[]) /* ty=float32 */;
  %1047 = reshape(%1045, newshape=[6, 13, 10]) /* ty=Tensor[(6, 13, 10), float32] */;
  %1048 = @func_542(%1046, %1047) /* ty=(Tensor[(6, 13, 10), float32],) */;
  %1049 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %1050 = cast(%1049, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %1051 = rsqrt(%1050) /* ty=Tensor[(13, 14, 12), float64] */;
  %1052 = cast(%1051, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %1053 = reshape(%1052, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %1054 = @func_277(%1053) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %1055 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %1056 = %1048.0;
  %1057 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %1058 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %1059 = %1054.1;
  (%1055, %1056, -7.48448f /* ty=float32 */, %var_770, %1051, %1057, %1058, %1059)
}

def @func_8423() -> (Tensor[(13, 14, 12), float64], Tensor[(20, 2), float32], Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), float64]) {
  %1060 = @func_2227() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1061 = @func_5952() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
  %1062 = @func_5696() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1063 = cast(meta[relay.Constant][47] /* ty=Tensor[(20, 2), float32] */, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %1064 = reshape(%1063, newshape=[1, 40]) /* ty=Tensor[(1, 40), float32] */;
  %1065 = @func_1813(%1064) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), bool], Tensor[(6, 40), float32]) */;
  %1066 = %1065.2;
  %1067 = cast(%1066, dtype="float64") /* ty=Tensor[(6, 40), float64] */;
  %1068 = %1060.0;
  %1069 = %1061.0;
  %1070 = %1062.1;
  %1071 = log(%1067) /* ty=Tensor[(6, 40), float64] */;
  (%1068, meta[relay.Constant][47] /* ty=Tensor[(20, 2), float32] */, %1069, %1070, %1071)
}

def @func_11359() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %1072 = @func_6220() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %1073 = @func_1769() /* ty=Tensor[(13, 14, 12), float64] */;
  %1074 = %1072.0;
  (%1073, %1074)
}

def @func_8964() -> Tensor[(13, 14, 12), bool] {
  %1075 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %1075.1
}

def @func_10620() -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1076 = @func_8838() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1077 = @func_3626() /* ty=Tensor[(13, ?, 8), float32] */;
  %1078 = @func_1769() /* ty=Tensor[(13, 14, 12), float64] */;
  %1079 = %1076.0;
  (%1077, %1078, %1079)
}

def @func_4323() -> Tensor[(104), float64] {
  %1080 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %1080.2
}

def @func_5000(%var_4992: Tensor[(11, 2, 6), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32], Tensor[(11, 2, 6), float64], Tensor[(11, 2, 6), uint16]) {
  %1081 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
  %1082 = cast(%1081, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %1083 = reshape(%1082, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %1084 = @func_4690(%1083) /* ty=(Tensor[(13, 14, 12), int32], Tensor[(13, 14, 12), bool]) */;
  %1085 = @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %1086 = %1085.1;
  %1087 = cast(%1086, dtype="float64") /* ty=Tensor[(11, 2, 6), float64] */;
  %1088 = cast(%var_4992, dtype="uint16") /* ty=Tensor[(11, 2, 6), uint16] */;
  %1089 = shape_of(%1086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(%1086, dtype="uint16") /* ty=Tensor[(11, 2, 6), uint16] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1092 = %1084.0;
  %1093 = log10(%1087) /* ty=Tensor[(11, 2, 6), float64] */;
  %1094 = left_shift(%1090, %1091) /* ty=Tensor[(11, 2, 6), uint16] */;
  (%1081, %1092, %1093, %1094)
}

def @func_12147() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(13, 14, 12), float64]) {
  %1095 = @func_7332() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1096 = @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */;
  %1097 = %1095.0;
  %1098 = %1096.2;
  %1099 = @func_6954() /* ty=Tensor[(13, 14, 12), float64] */;
  (%1097, %1098, %1099)
}

def @func_2491() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1100 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1101 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1102 = %1100.1;
  %1103 = %1101.0;
  %1104 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
  (%1102, %1103, %1104)
}

def @func_10895() -> (Tensor[(26, 4), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1105 = @func_891() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */;
  %1106 = @func_5319() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %1107 = %1105.1;
  %1108 = %1106.0;
  %1109 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  (%1107, %1108, %1109)
}

def @func_8093(%var_8078: Tensor[(780), float32]) -> (Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(780), float32], Tensor[(780), float32]) {
  %1110 = @func_2721() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) */;
  %1111 = @func_5570() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %1112 = cast(%var_8078, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1113 = reshape(%1112, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %1114 = @func_5164(%1113) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(390, 2), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64]) */;
  %1115 = %1110.3;
  %1116 = %1111.0;
  %1117 = %1114.5;
  (%1115, %1116, %1117, %var_8078)
}

def @func_3416() -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  %1118 = @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %1119 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1120 = %1118.0;
  %1121 = %1119.0;
  (%1120, %1121)
}

def @func_845() -> Tensor[(13, 14, 12), float32] {
  %1122 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %1123 = cast(%1122, dtype="float32") /* ty=Tensor[(13, 14, 12), float32] */;
  atan(%1123) /* ty=Tensor[(13, 14, 12), float32] */
}

def @func_3500() -> (Tensor[(13, 12, 8), int8], Tensor[(13, 14, 12), float64]) {
  %1124 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %1125 = cast(%1124, dtype="int8") /* ty=Tensor[(13, ?, 8), int8] */;
  %1126 = cast(meta[relay.Constant][48] /* ty=Tensor[(13, 12, 8), float32] */, dtype="int8") /* ty=Tensor[(13, 12, 8), int8] */;
  %1127 = @func_3046() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1128 = bitwise_or(%1125, %1126) /* ty=Tensor[(13, 12, 8), int8] */;
  %1129 = %1127.0;
  (%1128, %1129)
}

def @func_9942() -> (Tensor[(13, 14, 12), float64],) {
  %1130 = @func_9051() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1131 = %1130.1;
  (%1131,)
}

def @func_542(%var_517: float32, %var_518: Tensor[(6, 13, 10), float32]) -> (Tensor[(6, 13, 10), float32],) {
  %1132 = cast(%var_517, dtype="float32") /* ty=float32 */;
  %1133 = cast(%var_518, dtype="float32") /* ty=Tensor[(6, 13, 10), float32] */;
  %1134 = power(%1132, %1133) /* ty=Tensor[(6, 13, 10), float32] */;
  (%1134,)
}

def @func_7388() -> Tensor[(13, 14, 12), float64] {
  @func_4231() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_6025(%var_6021: Tensor[(104), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 10, 8), float32], Tensor[(104), float64], Tensor[(104), float64]) {
  %1135 = @func_5087() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1136 = @func_3932() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
  %1137 = %1136.0;
  %1138 = cast(%1137, dtype="float32") /* ty=Tensor[(13, 10, 8), float32] */;
  %1139 = cast(%var_6021, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1140 = reshape(%1139, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %1141 = @func_2362(%1140) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */;
  %1142 = %1135.1;
  %1143 = cosh(%1138) /* ty=Tensor[(13, 10, 8), float32] */;
  %1144 = %1141.1;
  (%1142, %1143, %1144, %var_6021)
}

def @func_12432(%var_12415: Tensor[(10, 15, 6), uint16], %var_12416: Tensor[(10, 15, 6), uint16]) -> Tensor[(10, 15, 6), uint16] {
  %1145 = cast(%var_12416, dtype="uint16") /* ty=Tensor[(10, 15, 6), uint16] */;
  %1146 = shape_of(%var_12415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1147 = cast(%var_12415, dtype="uint16") /* ty=Tensor[(10, 15, 6), uint16] */;
  %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%1147, %1148) /* ty=Tensor[(10, 15, 6), uint16] */
}

def @func_5087() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1149 = @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */;
  %1150 = @func_3593() /* ty=Tensor[(13, 14, 12), float64] */;
  %1151 = %1149.0;
  (%1150, %1151)
}

def @func_3877() -> (Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) {
  %1152 = @func_3626() /* ty=Tensor[(13, ?, 8), float32] */;
  %1153 = cast(%1152, dtype="float32") /* ty=Tensor[(13, ?, 8), float32] */;
  %1154 = atanh(%1153) /* ty=Tensor[(13, ?, 8), float32] */;
  %1155 = cast(%1154, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %1156 = cast(meta[relay.Constant][49] /* ty=Tensor[(13, 10, 8), float32] */, dtype="bool") /* ty=Tensor[(13, 10, 8), bool] */;
  %1157 = equal(%1155, %1156) /* ty=Tensor[(13, 10, 8), bool] */;
  %1158 = cast(%1157, dtype="float64") /* ty=Tensor[(13, 10, 8), float64] */;
  %1159 = cast(meta[relay.Constant][50] /* ty=Tensor[(132), float64] */, dtype="float64") /* ty=Tensor[(132), float64] */;
  %1160 = reshape(%1159, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float64] */;
  %1161 = @func_3711(%1160) /* ty=(Tensor[(11, 2, 6), float64],) */;
  %1162 = atan(%1158) /* ty=Tensor[(13, 10, 8), float64] */;
  %1163 = %1161.0;
  (%1162, %1163, meta[relay.Constant][50] /* ty=Tensor[(132), float64] */)
}

def @func_4443() -> (Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(780), float32]) {
  %1164 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1165 = cast(meta[relay.Constant][51] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1166 = reshape(%1165, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %1167 = @func_819(%1166) /* ty=(Tensor[(13, ?, 8), float32], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %1168 = %1164.0;
  %1169 = %1167.3;
  (%1168, %1169, meta[relay.Constant][51] /* ty=Tensor[(780), float32] */)
}

def @func_3388(%var_3296: Tensor[(1, 14, 8), float64], %var_3362: float32, %var_3363: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 8), uint32], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32], Tensor[(?, 14, 8), float64]) {
  %1170 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %1171 = @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %1172 = %1171.0;
  %1173 = cast(%1172, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %1174 = reshape(%1173, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %1175 = @func_74(%1174) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %1176 = cast(%1172, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %1177 = cosh(%1176) /* ty=Tensor[(13, ?, 8), float64] */;
  %1178 = cast(%var_3296, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  %1179 = cosh(%1178) /* ty=Tensor[(1, 14, 8), float32] */;
  %1180 = cast(%1177, dtype="uint32") /* ty=Tensor[(13, ?, 8), uint32] */;
  %1181 = cast(%1179, dtype="uint32") /* ty=Tensor[(1, 14, 8), uint32] */;
  %1182 = cast(%var_3362, dtype="float32") /* ty=float32 */;
  %1183 = cast(%var_3363, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1184 = reshape(%1182, newshape=[]) /* ty=float32 */;
  %1185 = reshape(%1183, newshape=[6, 13, 10]) /* ty=Tensor[(6, 13, 10), float32] */;
  %1186 = @func_542(%1184, %1185) /* ty=(Tensor[(6, 13, 10), float32],) */;
  %1187 = cast(%var_3296, dtype="float64") /* ty=Tensor[(1, 14, 8), float64] */;
  %1188 = acos(%1187) /* ty=Tensor[(1, 14, 8), float64] */;
  %1189 = cast(%var_3296, dtype="bool") /* ty=Tensor[(1, 14, 8), bool] */;
  %1190 = shape_of(%1188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1191 = cast(%1188, dtype="bool") /* ty=Tensor[(1, 14, 8), bool] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1193 = greater(%1191, %1192) /* ty=Tensor[(?, 14, 8), bool] */;
  %1194 = cast(%1193, dtype="float64") /* ty=Tensor[(?, 14, 8), float64] */;
  %1195 = %1170.1;
  %1196 = %1175.0;
  %1197 = bitwise_and(%1180, %1181) /* ty=Tensor[(13, 14, 8), uint32] */;
  %1198 = %1186.0;
  %1199 = log(%1194) /* ty=Tensor[(?, 14, 8), float64] */;
  (%1195, %1196, %1197, %1198, %var_3362, %var_3363, %1199)
}

def @func_12328() -> (Tensor[(13, 14, 12), float64],) {
  %1200 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1201 = %1200.0;
  (%1201,)
}

def @func_10915() -> Tensor[(13, 14, 12), float64] {
  @func_5809() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_3218(%var_3214: Tensor[(40), float32]) -> (Tensor[(26, 4), float64], Tensor[(104), float64], Tensor[(40), float32]) {
  %1202 = @func_1410() /* ty=Tensor[(26, 4), float64] */;
  %1203 = cast(%1202, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %1204 = cast(%var_3214, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1205 = cast(%1202, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %1206 = reshape(%1204, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %1207 = reshape(%1205, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1208 = @func_1261(%1206, %1207) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */;
  %1209 = log(%1203) /* ty=Tensor[(26, 4), float64] */;
  %1210 = %1208.6;
  (%1209, %1210, %var_3214)
}

def @func_6179() -> (Tensor[(13, 14, 12), float64], Tensor[(104), float64]) {
  %1211 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %1212 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
  %1213 = %1211.2;
  (%1212, %1213)
}

def @func_12354() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1214 = @func_11807() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1215 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
  %1216 = %1214.0;
  (%1215, %1216)
}

def @func_11350(%var_11314: Tensor[(13, 11, 8), float32], %var_11343: Tensor[(416), float64]) -> (Tensor[(13, 11, 8), bool], Tensor[(1, 234), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) {
  %1217 = @func_6142() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %1218 = %1217.2;
  %1219 = cast(%1218, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %1220 = cast(%var_11314, dtype="bool") /* ty=Tensor[(13, 11, 8), bool] */;
  %1221 = @func_4043() /* ty=(Tensor[(13, 6, 8), uint32], Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(1, 234), float64], Tensor[(8, 7, 1), bool]) */;
  %1222 = cast(%var_11343, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1223 = reshape(%1222, newshape=[8, 4, 13]) /* ty=Tensor[(8, 4, 13), float64] */;
  %1224 = @func_5835(%1223) /* ty=(Tensor[(8, 4, 13), float64],) */;
  %1225 = greater(%1219, %1220) /* ty=Tensor[(13, 11, 8), bool] */;
  %1226 = %1221.5;
  %1227 = %1224.0;
  (%1225, %1226, %1227, %var_11343)
}

def @func_6243() -> (Tensor[(13, 14, 12), float64],) {
  %1228 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1229 = %1228.0;
  (%1229,)
}

def @func_10953(%var_10949: float32, %var_10950: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32]) {
  %1230 = @func_6682() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %1231 = cast(%var_10949, dtype="float32") /* ty=float32 */;
  %1232 = cast(%var_10950, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1233 = reshape(%1231, newshape=[]) /* ty=float32 */;
  %1234 = reshape(%1232, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
  %1235 = @func_2775(%1233, %1234) /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) */;
  %1236 = %1230.3;
  %1237 = %1235.3;
  (%1236, %1237, %var_10949, %var_10950)
}

def @func_5952() -> (Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) {
  %1238 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %1239 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 364), float64] */, dtype="float64") /* ty=Tensor[(6, 364), float64] */;
  %1240 = reshape(%1239, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %1241 = @func_1619(%1240) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32]) */;
  %1242 = %1238.2;
  %1243 = %1241.0;
  (%1242, %1243, meta[relay.Constant][52] /* ty=Tensor[(6, 364), float64] */)
}

def @func_11511() -> Tensor[(13, ?, 8), float32] {
  %1244 = @func_11359() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %1244.1
}

def @func_6261() -> (Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) {
  %1245 = @func_5087() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1246 = @func_845() /* ty=Tensor[(13, 14, 12), float32] */;
  %1247 = %1245.1;
  (%1246, %1247)
}

def @func_10314() -> Tensor[(40), float32] {
  @func_4376() /* ty=Tensor[(40), float32] */
}

def @func_2106() -> (Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) {
  %1248 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %1249 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1250 = cast(meta[relay.Constant][53] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1251 = %1248.2;
  %1252 = cast(%1251, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1253 = reshape(%1250, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %1254 = reshape(%1252, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %1255 = @func_1261(%1253, %1254) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */;
  %1256 = %1249.0;
  %1257 = %1255.6;
  %1258 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  (%1251, %1256, %1257, meta[relay.Constant][53] /* ty=Tensor[(40), float32] */, %1258)
}

def @func_3932() -> (Tensor[(13, 10, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) {
  %1259 = @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %1260 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1261 = cast(meta[relay.Constant][54] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1262 = reshape(%1261, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %1263 = @func_632(%1262) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32]) */;
  %1264 = @func_3046() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1265 = %1259.0;
  %1266 = %1260.0;
  %1267 = %1263.0;
  %1268 = %1264.0;
  (%1265, %1266, %1267, meta[relay.Constant][54] /* ty=Tensor[(40), float32] */, %1268)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12541() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64]) {
  @func_12539() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64]) */
}

def @func_10355(%var_10344: Tensor[(512), int32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(8, 16, 4), int32], Tensor[(512), int32], Tensor[(13, ?, 8), bool], Tensor[(40), float32]) {
  %0 = @func_3274() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1 = @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %2 = cast(%var_10344, dtype="int32") /* ty=Tensor[(512), int32] */;
  %3 = cast(%var_10344, dtype="int32") /* ty=Tensor[(512), int32] */;
  %4 = reshape(%2, newshape=[8, 16, 4]) /* ty=Tensor[(8, 16, 4), int32] */;
  %5 = reshape(%3, newshape=[8, 16, 4]) /* ty=Tensor[(8, 16, 4), int32] */;
  %6 = @func_4386(%4, %5) /* ty=(Tensor[(8, 16, 4), int32],) */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %9 = reshape(%7, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %10 = reshape(%8, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %11 = @func_377(%9, %10) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %12 = %0.0;
  %13 = %1.0;
  %14 = %6.0;
  %15 = %11.2;
  (%12, %13, %14, %var_10344, %15, meta[relay.Constant][0] /* ty=Tensor[(40), float32] */)
}

def @func_10453() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %16 = @func_3955() /* ty=Tensor[(13, 14, 12), float64] */;
  %17 = @func_5809() /* ty=Tensor[(13, 14, 12), float64] */;
  (%16, %17)
}

def @func_8753() -> (Tensor[(13, ?, 8), float32], Tensor[(132), float64]) {
  @func_8751() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(132), float64]) */
}

def @func_11232() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) {
  %25 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) {
    %18 = @func_7536() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
    %19 = @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %20 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
    %21 = %18.0;
    %22 = @func_3593() /* ty=Tensor[(13, 14, 12), float64] */;
    %23 = %19.0;
    %24 = %20.1;
    (%21, %22, %23, %24)
  };
  %25() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */
}

def @func_3628() -> Tensor[(13, ?, 8), float32] {
  @func_3626() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_5238() -> Tensor[(13, 14, 12), float64] {
  %27 = fn () -> Tensor[(13, 14, 12), float64] {
    %26 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %26.0
  };
  %27() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_6263() -> (Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) {
  @func_6261() /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_10099() -> (Tensor[(11, 4, 16), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 4, 16), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %29 = @func_7344() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %30 = @func_5303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %31 = @func_6261() /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */;
  %32 = exp(%28) /* ty=Tensor[(11, 4, 16), float32] */;
  %33 = %29.0;
  %34 = %30.0;
  %35 = %31.1;
  (%32, %33, %34, %35)
}

def @func_6820(%var_6818: Tensor[(1, 40), float32], %var_6819: Tensor[(8, 52), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(8, 52), float64], Tensor[(13, 14, 12), float64], Tensor[(?, 40), bool], Tensor[(13, 14, 12), float64]) {
  %57 = fn (%var_6752: Tensor[(1, 40), float32], %var_6770: Tensor[(8, 52), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(8, 52), float64], Tensor[(13, 14, 12), float64], Tensor[(?, 40), bool], Tensor[(13, 14, 12), float64]) {
    %36 = cast(%var_6752, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
    %37 = reshape(%36, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %38 = @func_632(%37) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32]) */;
    %39 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %40 = cast(%var_6770, dtype="float64") /* ty=Tensor[(8, 52), float64] */;
    %41 = reshape(%40, newshape=[8, 4, 13]) /* ty=Tensor[(8, 4, 13), float64] */;
    %42 = @func_5835(%41) /* ty=(Tensor[(8, 4, 13), float64],) */;
    %43 = cast(%var_6752, dtype="float64") /* ty=Tensor[(1, 40), float64] */;
    %44 = log10(%43) /* ty=Tensor[(1, 40), float64] */;
    %45 = cast(%var_6752, dtype="bool") /* ty=Tensor[(1, 40), bool] */;
    %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(2), int32] */;
    %47 = cast(%44, dtype="bool") /* ty=Tensor[(1, 40), bool] */;
    %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %49 = @func_4505() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %50 = @func_4231() /* ty=Tensor[(13, 14, 12), float64] */;
    %51 = %38.0;
    %52 = %39.0;
    %53 = %42.0;
    %54 = @func_4538() /* ty=Tensor[(13, 14, 12), float64] */;
    %55 = not_equal(%47, %48) /* ty=Tensor[(?, 40), bool] */;
    %56 = %49.0;
    (%50, %51, %52, %53, %var_6770, %54, %55, %56)
  };
  %57(%var_6818, %var_6819) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(8, 52), float64], Tensor[(13, 14, 12), float64], Tensor[(?, 40), bool], Tensor[(13, 14, 12), float64]) */
}

def @func_12314(%var_12309: Tensor[(13, 9, 8), float32], %var_12310: Tensor[(1144), float32], %var_12311: Tensor[(1, 416), float64], %var_12312: Tensor[(13, 15, 8), float32], %var_12313: Tensor[(234), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(1144), float32], Tensor[(1, 416), float64], Tensor[(13, 15, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 8), float32], Tensor[(13, 9, 2), float64], Tensor[(234), float64]) {
  %84 = fn (%var_12223: Tensor[(13, 9, 8), float32], %var_12238: Tensor[(1144), float32], %var_12239: Tensor[(1, 416), float64], %var_12243: Tensor[(13, 15, 8), float32], %var_12275: Tensor[(234), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(1144), float32], Tensor[(1, 416), float64], Tensor[(13, 15, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 8), float32], Tensor[(13, 9, 2), float64], Tensor[(234), float64]) {
    %58 = @func_11245() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %59 = cast(%var_12238, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %60 = cast(%var_12239, dtype="float64") /* ty=Tensor[(1, 416), float64] */;
    %61 = reshape(%59, newshape=[13, 11, 8]) /* ty=Tensor[(13, 11, 8), float32] */;
    %62 = reshape(%60, newshape=[416]) /* ty=Tensor[(416), float64] */;
    %63 = @func_11350(%61, %62) /* ty=(Tensor[(13, 11, 8), bool], Tensor[(1, 234), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) */;
    %64 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
    %65 = %64.3;
    %66 = cast(%65, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
    %67 = cast(%var_12243, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
    %68 = @func_12147() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(13, 14, 12), float64]) */;
    %69 = cast(%65, dtype="uint16") /* ty=Tensor[(13, ?, 8), uint16] */;
    %70 = cast(%var_12223, dtype="uint16") /* ty=Tensor[(13, 9, 8), uint16] */;
    %71 = bitwise_xor(%69, %70) /* ty=Tensor[(13, 9, 8), uint16] */;
    %72 = cast(%71, dtype="float32") /* ty=Tensor[(13, 9, 8), float32] */;
    %73 = cast(%var_12275, dtype="float64") /* ty=Tensor[(234), float64] */;
    %74 = cast(%var_12275, dtype="float64") /* ty=Tensor[(234), float64] */;
    %75 = reshape(%73, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), float64] */;
    %76 = reshape(%74, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), float64] */;
    %77 = @func_1452(%75, %76) /* ty=(Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float32]) */;
    %78 = %58.0;
    %79 = %63.2;
    %80 = minimum(%66, %67) /* ty=Tensor[(13, 15, 8), float64] */;
    %81 = %68.2;
    %82 = atanh(%72) /* ty=Tensor[(13, 9, 8), float32] */;
    %83 = %77.1;
    (%78, %79, %var_12238, %var_12239, %80, %81, %82, %83, %var_12275)
  };
  %84(%var_12309, %var_12310, %var_12311, %var_12312, %var_12313) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(1144), float32], Tensor[(1, 416), float64], Tensor[(13, 15, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 8), float32], Tensor[(13, 9, 2), float64], Tensor[(234), float64]) */
}

def @func_12718(%var_12717: Tensor[(231), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(231), bool]) {
  %99 = fn (%var_12699: Tensor[(231), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(231), bool]) {
    %85 = @func_8838() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %86 = cast(%var_12699, dtype="float64") /* ty=Tensor[(231), float64] */;
    %87 = cast(%var_12699, dtype="float64") /* ty=Tensor[(231), float64] */;
    %88 = reshape(%86, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float64] */;
    %89 = reshape(%87, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float64] */;
    %90 = @func_9384(%88, %89) /* ty=(Tensor[(11, 7, 3), float64],) */;
    %91 = %90.0;
    %92 = cast(%91, dtype="bool") /* ty=Tensor[(11, 7, 3), bool] */;
    %93 = shape_of(%var_12699, dtype="int32") /* ty=Tensor[(1), int32] */;
    %94 = cast(%var_12699, dtype="bool") /* ty=Tensor[(231), bool] */;
    %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?), bool] */;
    %96 = @func_12458() /* ty=Tensor[(13, 14, 12), float64] */;
    %97 = %85.0;
    %98 = logical_and(%94, %95) /* ty=Tensor[(231), bool] */;
    (%96, %97, %98)
  };
  %99(%var_12717) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(231), bool]) */
}

def @func_1698() -> (Tensor[(13, ?, 8), float32],) {
  %102 = fn () -> (Tensor[(13, ?, 8), float32],) {
    %100 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
    %101 = %100.3;
    (%101,)
  };
  %102() /* ty=(Tensor[(13, ?, 8), float32],) */
}

def @func_3135() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %106 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
    %103 = @func_2311() /* ty=Tensor[(13, 14, 12), float64] */;
    %104 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
    %105 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
    (%103, %104, %105)
  };
  %106() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */
}

def @func_5304() -> (Tensor[(13, 14, 12), float64],) {
  %108 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %107 = @func_5237() /* ty=Tensor[(13, 14, 12), float64] */;
    (%107,)
  };
  %108() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_8702() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %113 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
    %109 = @func_3274() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %110 = @func_6261() /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */;
    %111 = %109.0;
    %112 = %110.1;
    (%111, %112)
  };
  %113() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_11292() -> Tensor[(13, 14, 12), float64] {
  %114 = @func_11245() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %114.0
}

def @func_2492() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %120 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
    %115 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %116 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %117 = %115.1;
    %118 = %116.0;
    %119 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
    (%117, %118, %119)
  };
  %120() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_10916() -> Tensor[(13, 14, 12), float64] {
  %121 = fn () -> Tensor[(13, 14, 12), float64] {
    @func_5809() /* ty=Tensor[(13, 14, 12), float64] */
  };
  %121() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_1264(%var_1262: Tensor[(40), float32], %var_1263: Tensor[(104), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) {
  %141 = fn (%var_1247: Tensor[(40), float32], %var_1259: Tensor[(104), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) {
    %122 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
    %123 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
    %124 = cast(%123, dtype="uint16") /* ty=Tensor[(13, 14, 12), uint16] */;
    %125 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
    %126 = cast(%122, dtype="uint16") /* ty=Tensor[(13, 14, 12), uint16] */;
    %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %128 = cast(%var_1247, dtype="float32") /* ty=Tensor[(40), float32] */;
    %129 = cast(%var_1247, dtype="float32") /* ty=Tensor[(40), float32] */;
    %130 = reshape(%128, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %131 = reshape(%129, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %132 = @func_377(%130, %131) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %133 = cast(%var_1259, dtype="float64") /* ty=Tensor[(104), float64] */;
    %134 = reshape(%133, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
    %135 = @func_74(%134) /* ty=(Tensor[(13, ?, 8), float32],) */;
    %136 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
    %137 = bitwise_xor(%126, %127) /* ty=Tensor[(13, 14, 12), uint16] */;
    %138 = %132.4;
    %139 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
    %140 = %135.0;
    (%136, %137, %138, %var_1247, %139, %140, %var_1259)
  };
  %141(%var_1262, %var_1263) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */
}

def @func_11513() -> Tensor[(13, ?, 8), float32] {
  @func_11511() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_3220(%var_3219: Tensor[(40), float32]) -> (Tensor[(26, 4), float64], Tensor[(104), float64], Tensor[(40), float32]) {
  %151 = fn (%var_3214: Tensor[(40), float32]) -> (Tensor[(26, 4), float64], Tensor[(104), float64], Tensor[(40), float32]) {
    %142 = @func_1410() /* ty=Tensor[(26, 4), float64] */;
    %143 = cast(%142, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
    %144 = cast(%var_3214, dtype="float32") /* ty=Tensor[(40), float32] */;
    %145 = cast(%142, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
    %146 = reshape(%144, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %147 = reshape(%145, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %148 = @func_1261(%146, %147) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */;
    %149 = log(%143) /* ty=Tensor[(26, 4), float64] */;
    %150 = %148.6;
    (%149, %150, %var_3214)
  };
  %151(%var_3219) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64], Tensor[(40), float32]) */
}

def @func_1928() -> (Tensor[(13, 14, 12), float64],) {
  %153 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %152 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
    (%152,)
  };
  %153() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_6181() -> (Tensor[(13, 14, 12), float64], Tensor[(104), float64]) {
  @func_6179() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(104), float64]) */
}

def @func_3877() -> (Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) {
  %154 = @func_3626() /* ty=Tensor[(13, ?, 8), float32] */;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(13, ?, 8), float32] */;
  %156 = atanh(%155) /* ty=Tensor[(13, ?, 8), float32] */;
  %157 = cast(%156, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %158 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 10, 8), float32] */, dtype="bool") /* ty=Tensor[(13, 10, 8), bool] */;
  %159 = equal(%157, %158) /* ty=Tensor[(13, 10, 8), bool] */;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(13, 10, 8), float64] */;
  %161 = cast(meta[relay.Constant][3] /* ty=Tensor[(132), float64] */, dtype="float64") /* ty=Tensor[(132), float64] */;
  %162 = reshape(%161, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float64] */;
  %163 = @func_3711(%162) /* ty=(Tensor[(11, 2, 6), float64],) */;
  %164 = atan(%160) /* ty=Tensor[(13, 10, 8), float64] */;
  %165 = %163.0;
  (%164, %165, meta[relay.Constant][3] /* ty=Tensor[(132), float64] */)
}

def @func_8819(%var_8817: float32, %var_8818: Tensor[(10, 78), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 4, 8), int8], Tensor[(416), float32], Tensor[(13, 14, 12), float64], float32, Tensor[(10, 78), float32], Tensor[(13, 14, 12), float64]) {
  %178 = fn (%var_8800: float32, %var_8801: Tensor[(10, 78), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 4, 8), int8], Tensor[(416), float32], Tensor[(13, 14, 12), float64], float32, Tensor[(10, 78), float32], Tensor[(13, 14, 12), float64]) {
    %166 = cast(meta[relay.Constant][4] /* ty=Tensor[(416), float32] */, dtype="float32") /* ty=Tensor[(416), float32] */;
    %167 = reshape(%166, newshape=[13, 4, 8]) /* ty=Tensor[(13, 4, 8), float32] */;
    %168 = cast(%var_8800, dtype="float32") /* ty=float32 */;
    %169 = cast(%var_8801, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
    %170 = reshape(%168, newshape=[]) /* ty=float32 */;
    %171 = reshape(%169, newshape=[780]) /* ty=Tensor[(780), float32] */;
    %172 = @func_7754(%170, %171) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32]) */;
    %173 = @func_6220() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %174 = @func_4231() /* ty=Tensor[(13, 14, 12), float64] */;
    %175 = @func_4160(%167) /* ty=Tensor[(13, 4, 8), int8] */;
    %176 = %172.1;
    %177 = %173.1;
    (%174, %175, meta[relay.Constant][4] /* ty=Tensor[(416), float32] */, %176, %var_8800, %var_8801, %177)
  };
  %178(%var_8817, %var_8818) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 4, 8), int8], Tensor[(416), float32], Tensor[(13, 14, 12), float64], float32, Tensor[(10, 78), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_10526() -> (Tensor[(13, ?, 8), float32],) {
  %181 = fn () -> (Tensor[(13, ?, 8), float32],) {
    %179 = @func_5319() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
    %180 = %179.1;
    (%180,)
  };
  %181() /* ty=(Tensor[(13, ?, 8), float32],) */
}

def @func_9416() -> (Tensor[(7, 2, 3), float32], Tensor[(11, 7, 3), float64], Tensor[(231), float64]) {
  %182 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 3), float32] */;
  %183 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(7, 2, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 3), float32] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %186 = cast(meta[relay.Constant][7] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %187 = cast(meta[relay.Constant][7] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %188 = reshape(%186, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float64] */;
  %189 = reshape(%187, newshape=[11, 7, 3]) /* ty=Tensor[(11, 7, 3), float64] */;
  %190 = @func_9384(%188, %189) /* ty=(Tensor[(11, 7, 3), float64],) */;
  %191 = mod(%184, %185) /* ty=Tensor[(7, 2, 3), float32] */;
  %192 = %190.0;
  (%191, %192, meta[relay.Constant][7] /* ty=Tensor[(231), float64] */)
}

def @func_542(%var_517: float32, %var_518: Tensor[(6, 13, 10), float32]) -> (Tensor[(6, 13, 10), float32],) {
  %193 = cast(%var_517, dtype="float32") /* ty=float32 */;
  %194 = cast(%var_518, dtype="float32") /* ty=Tensor[(6, 13, 10), float32] */;
  %195 = power(%193, %194) /* ty=Tensor[(6, 13, 10), float32] */;
  (%195,)
}

def @func_7559() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %196 = @func_3932() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
  %197 = @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */;
  %198 = %196.2;
  %199 = %197.5;
  (%198, %199)
}

def @func_12042() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %204 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
    %200 = @func_10481() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool]) */;
    %201 = @func_10604() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %202 = %200.0;
    %203 = %201.1;
    (%202, %203)
  };
  %204() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_8751() -> (Tensor[(13, ?, 8), float32], Tensor[(132), float64]) {
  %205 = @func_1697() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %206 = @func_7536() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %207 = %205.0;
  %208 = %206.2;
  (%207, %208)
}

def @func_3416() -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  %209 = @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %210 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %211 = %209.0;
  %212 = %210.0;
  (%211, %212)
}

def @func_8241() -> (Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), float64]) {
  %233 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), float64]) {
    %213 = @func_4443() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(780), float32]) */;
    %214 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %215 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
    %216 = @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */;
    %217 = %216.0;
    %218 = @func_4779() /* ty=Tensor[(13, ?, 8), float32] */;
    %219 = cast(%218, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
    %220 = shape_of(%217, dtype="int32") /* ty=Tensor[(3), int32] */;
    %221 = cast(%217, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
    %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %223 = logical_and(%221, %222) /* ty=Tensor[(13, ?, 8), bool] */;
    %224 = cast(%223, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
    %225 = shape_of(%217, dtype="int32") /* ty=Tensor[(3), int32] */;
    %226 = cast(%217, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
    %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %228 = @func_7403() /* ty=Tensor[(13, 14, 12), float64] */;
    %229 = %213.2;
    %230 = %214.0;
    %231 = %215.1;
    %232 = mod(%226, %227) /* ty=Tensor[(13, ?, 8), float64] */;
    (%228, %229, %230, %231, %232)
  };
  %233() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), float64]) */
}

def @func_5002(%var_5001: Tensor[(11, 2, 6), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32], Tensor[(11, 2, 6), float64], Tensor[(11, 2, 6), uint16]) {
  %248 = fn (%var_4992: Tensor[(11, 2, 6), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32], Tensor[(11, 2, 6), float64], Tensor[(11, 2, 6), uint16]) {
    %234 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
    %235 = cast(%234, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %236 = reshape(%235, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
    %237 = @func_4690(%236) /* ty=(Tensor[(13, 14, 12), int32], Tensor[(13, 14, 12), bool]) */;
    %238 = @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
    %239 = %238.1;
    %240 = cast(%239, dtype="float64") /* ty=Tensor[(11, 2, 6), float64] */;
    %241 = cast(%var_4992, dtype="uint16") /* ty=Tensor[(11, 2, 6), uint16] */;
    %242 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
    %243 = cast(%239, dtype="uint16") /* ty=Tensor[(11, 2, 6), uint16] */;
    %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %245 = %237.0;
    %246 = log10(%240) /* ty=Tensor[(11, 2, 6), float64] */;
    %247 = left_shift(%243, %244) /* ty=Tensor[(11, 2, 6), uint16] */;
    (%234, %245, %246, %247)
  };
  %248(%var_5001) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32], Tensor[(11, 2, 6), float64], Tensor[(11, 2, 6), uint16]) */
}

def @func_6107() -> (Tensor[(13, ?, 8), float32],) {
  %250 = fn () -> (Tensor[(13, ?, 8), float32],) {
    %249 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
    (%249,)
  };
  %250() /* ty=(Tensor[(13, ?, 8), float32],) */
}

def @func_12436(%var_12434: Tensor[(10, 15, 6), uint16], %var_12435: Tensor[(10, 15, 6), uint16]) -> Tensor[(10, 15, 6), uint16] {
  @func_12432(%var_12434, %var_12435) /* ty=Tensor[(10, 15, 6), uint16] */
}

def @func_819(%var_770: Tensor[(780), float32]) -> (Tensor[(13, ?, 8), float32], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  %251 = cast(-7.48448f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %252 = cast(%var_770, dtype="float32") /* ty=Tensor[(780), float32] */;
  %253 = reshape(%251, newshape=[]) /* ty=float32 */;
  %254 = reshape(%252, newshape=[6, 13, 10]) /* ty=Tensor[(6, 13, 10), float32] */;
  %255 = @func_542(%253, %254) /* ty=(Tensor[(6, 13, 10), float32],) */;
  %256 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %257 = cast(%256, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %258 = rsqrt(%257) /* ty=Tensor[(13, 14, 12), float64] */;
  %259 = cast(%258, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %260 = reshape(%259, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %261 = @func_277(%260) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %262 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %263 = %255.0;
  %264 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %265 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %266 = %261.1;
  (%262, %263, -7.48448f /* ty=float32 */, %var_770, %258, %264, %265, %266)
}

def @func_6144() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  @func_6142() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */
}

def @func_2313() -> Tensor[(13, 14, 12), float64] {
  @func_2311() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_12328() -> (Tensor[(13, 14, 12), float64],) {
  %267 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %268 = %267.0;
  (%268,)
}

def @func_304() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) {
  %269 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %270 = cast(%269, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %271 = reshape(%270, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %272 = @func_277(%271) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %273 = cast(meta[relay.Constant][8] /* ty=Tensor[(26, 4), float64] */, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %274 = reshape(%273, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %275 = @func_74(%274) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %276 = %272.0;
  %277 = %275.0;
  (%269, %276, %277, meta[relay.Constant][8] /* ty=Tensor[(26, 4), float64] */)
}

def @func_12432(%var_12415: Tensor[(10, 15, 6), uint16], %var_12416: Tensor[(10, 15, 6), uint16]) -> Tensor[(10, 15, 6), uint16] {
  %278 = cast(%var_12416, dtype="uint16") /* ty=Tensor[(10, 15, 6), uint16] */;
  %279 = shape_of(%var_12415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%var_12415, dtype="uint16") /* ty=Tensor[(10, 15, 6), uint16] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%280, %281) /* ty=Tensor[(10, 15, 6), uint16] */
}

def @func_380(%var_378: Tensor[(5, 4, 2), float32], %var_379: Tensor[(5, 4, 2), float32]) -> (Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  %305 = fn (%var_323: Tensor[(5, 4, 2), float32], %var_324: Tensor[(5, 4, 2), float32]) -> (Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
    %282 = cast(%var_324, dtype="float32") /* ty=Tensor[(5, 4, 2), float32] */;
    %283 = shape_of(%var_323, dtype="int32") /* ty=Tensor[(3), int32] */;
    %284 = cast(%var_323, dtype="float32") /* ty=Tensor[(5, 4, 2), float32] */;
    %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %286 = cast(meta[relay.Constant][9] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %287 = reshape(%286, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
    %288 = @func_74(%287) /* ty=(Tensor[(13, ?, 8), float32],) */;
    %289 = %288.0;
    %290 = cast(meta[relay.Constant][9] /* ty=Tensor[(104), float64] */, dtype="bool") /* ty=Tensor[(104), bool] */;
    %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
    %292 = cast(%289, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
    %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %294 = cast(%289, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
    %295 = reshape(%294, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
    %296 = @func_74(%295) /* ty=(Tensor[(13, ?, 8), float32],) */;
    %297 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
    %298 = cast(%297, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %299 = reshape(%298, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
    %300 = @func_277(%299) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
    %301 = floor_divide(%284, %285) /* ty=Tensor[(5, 4, 2), float32] */;
    %302 = greater(%292, %293) /* ty=Tensor[(13, ?, 8), bool] */;
    %303 = %296.0;
    %304 = %300.1;
    (%301, %297, %302, %303, %304)
  };
  %305(%var_378, %var_379) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_2824() -> Tensor[(13, 14, 12), float64] {
  @func_2822() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_4413() -> (Tensor[(13, 14, 12), float64],) {
  %307 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %306 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
    (%306,)
  };
  %307() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_822(%var_820: Tensor[(780), float32]) -> (Tensor[(13, ?, 8), float32], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  @func_819(%var_820) /* ty=(Tensor[(13, ?, 8), float32], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_2311() -> Tensor[(13, 14, 12), float64] {
  @func_666() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_2227() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %308 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %309 = %308.1;
  %310 = cast(%309, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %311 = reshape(%310, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %312 = @func_277(%311) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %313 = %312.0;
  %314 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  %315 = @func_1769() /* ty=Tensor[(13, 14, 12), float64] */;
  (%309, %313, %314, %315)
}

def @func_8966() -> Tensor[(13, 14, 12), bool] {
  @func_8964() /* ty=Tensor[(13, 14, 12), bool] */
}

def @func_8561() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_8559() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_5698() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_5696() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_10481() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool]) {
  %316 = @func_8240() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), float64]) */;
  %317 = @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */;
  %318 = %316.2;
  %319 = %317.2;
  (%318, %319)
}

def @func_8891() -> (Tensor[(13, 14, 12), float64],) {
  %322 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %320 = @func_8838() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %321 = %320.0;
    (%321,)
  };
  %322() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_3558() -> Tensor[(13, ?, 8), float32] {
  %323 = fn () -> Tensor[(13, ?, 8), float32] {
    @func_389() /* ty=Tensor[(13, ?, 8), float32] */
  };
  %323() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_1333(%var_1306: Tensor[(40), float32]) -> (Tensor[(40), float32], Tensor[(13, ?, 8), bool]) {
  %324 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %325 = cast(%var_1306, dtype="float32") /* ty=Tensor[(40), float32] */;
  %326 = cast(%324, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %327 = reshape(%325, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %328 = reshape(%326, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %329 = @func_1261(%327, %328) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */;
  %330 = %329.5;
  %331 = cast(%330, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %332 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%324, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = greater_equal(%333, %334) /* ty=Tensor[(13, ?, 8), bool] */;
  (%var_1306, %335)
}

def @func_971() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %336 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %337 = cast(%336, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %338 = reshape(%337, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %339 = @func_277(%338) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %340 = %339.1;
  (%336, %340)
}

def @func_4044() -> (Tensor[(13, 6, 8), uint32], Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(1, 234), float64], Tensor[(8, 7, 1), bool]) {
  %363 = fn () -> (Tensor[(13, 6, 8), uint32], Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(1, 234), float64], Tensor[(8, 7, 1), bool]) {
    %341 = @func_1697() /* ty=(Tensor[(13, ?, 8), float32],) */;
    %342 = %341.0;
    %343 = cast(%342, dtype="uint32") /* ty=Tensor[(13, ?, 8), uint32] */;
    %344 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 6, 8), float32] */, dtype="uint32") /* ty=Tensor[(13, 6, 8), uint32] */;
    %345 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %346 = cast(meta[relay.Constant][12] /* ty=Tensor[(660), int16] */, dtype="int16") /* ty=Tensor[(660), int16] */;
    %347 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 234), float64] */, dtype="float64") /* ty=Tensor[(1, 234), float64] */;
    %348 = reshape(%346, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int16] */;
    %349 = reshape(%347, newshape=[234]) /* ty=Tensor[(234), float64] */;
    %350 = @func_2427(%348, %349) /* ty=(Tensor[(12, 5, 11), uint16], Tensor[(13, 9, 2), bool]) */;
    %351 = cast(meta[relay.Constant][14] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %352 = cast(meta[relay.Constant][11] /* ty=Tensor[(56), uint32] */, dtype="uint32") /* ty=Tensor[(56), uint32] */;
    %353 = reshape(%351, newshape=[]) /* ty=uint32 */;
    %354 = reshape(%352, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint32] */;
    %355 = @func_2042(%353, %354) /* ty=(Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %356 = %355.0;
    %357 = cast(%356, dtype="bool") /* ty=Tensor[(8, 7, 1), bool] */;
    %358 = cast(meta[relay.Constant][14] /* ty=uint32 */, dtype="bool") /* ty=bool */;
    %359 = subtract(%343, %344) /* ty=Tensor[(13, 6, 8), uint32] */;
    %360 = %345.0;
    %361 = %350.1;
    %362 = logical_and(%357, %358) /* ty=Tensor[(8, 7, 1), bool] */;
    (%359, meta[relay.Constant][11] /* ty=Tensor[(56), uint32] */, %360, %361, meta[relay.Constant][12] /* ty=Tensor[(660), int16] */, meta[relay.Constant][13] /* ty=Tensor[(1, 234), float64] */, %362)
  };
  %363() /* ty=(Tensor[(13, 6, 8), uint32], Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(1, 234), float64], Tensor[(8, 7, 1), bool]) */
}

def @func_74(%var_34: Tensor[(13, 1, 8), float64]) -> (Tensor[(13, ?, 8), float32],) {
  %364 = cast(%var_34, dtype="float64") /* ty=Tensor[(13, 1, 8), float64] */;
  %365 = rsqrt(%364) /* ty=Tensor[(13, 1, 8), float64] */;
  %366 = cast(%var_34, dtype="float64") /* ty=Tensor[(13, 1, 8), float64] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%365, dtype="float64") /* ty=Tensor[(13, 1, 8), float64] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %370 = minimum(%368, %369) /* ty=Tensor[(13, ?, 8), float64] */;
  %371 = cast(%var_34, dtype="float32") /* ty=Tensor[(13, 1, 8), float32] */;
  %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%370, dtype="float32") /* ty=Tensor[(13, ?, 8), float32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %375 = power(%373, %374) /* ty=Tensor[(13, ?, 8), float32] */;
  (%375,)
}

def @func_7240() -> Tensor[(13, ?, 8), float32] {
  %377 = fn () -> Tensor[(13, ?, 8), float32] {
    %376 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
    %376.2
  };
  %377() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_8559() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %378 = @func_5952() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
  %379 = %378.1;
  %380 = @func_3593() /* ty=Tensor[(13, 14, 12), float64] */;
  (%379, %380)
}

def @func_9033() -> Tensor[(104), float64] {
  @func_9031() /* ty=Tensor[(104), float64] */
}

def @func_11245() -> (Tensor[(13, 14, 12), float64],) {
  %381 = @func_8981() /* ty=Tensor[(13, 14, 12), float64] */;
  (%381,)
}

def @func_8588() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_8586() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_77(%var_75: Tensor[(13, 1, 8), float64]) -> (Tensor[(13, ?, 8), float32],) {
  @func_74(%var_75) /* ty=(Tensor[(13, ?, 8), float32],) */
}

def @func_3595() -> Tensor[(13, 14, 12), float64] {
  @func_3593() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_5319() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %382 = @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %383 = @func_4538() /* ty=Tensor[(13, 14, 12), float64] */;
  %384 = %382.0;
  (%383, %384)
}

def @func_11126() -> (Tensor[(13, 14, 12), float64], Tensor[(132), float64], Tensor[(13, 14, 12), float64]) {
  @func_11124() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(132), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_4667() -> (Tensor[(13, 14, 12), float64],) {
  %386 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %385 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
    (%385,)
  };
  %386() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_7255() -> Tensor[(13, 14, 12), float64] {
  %388 = fn () -> Tensor[(13, 14, 12), float64] {
    %387 = @func_6897() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %387.0
  };
  %388() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_668() -> Tensor[(13, 14, 12), float64] {
  @func_666() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_2883() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) {
  %389 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %391 = reshape(%390, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %392 = @func_277(%391) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
  %393 = %392.0;
  (%389, %393)
}

def @func_5424() -> (Tensor[(13, 14, 12), float64],) {
  %396 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %394 = @func_4505() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %395 = %394.0;
    (%395,)
  };
  %396() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_7536() -> (Tensor[(13, 14, 12), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) {
  %397 = @func_5800() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %398 = @func_7221() /* ty=(Tensor[(11, 2, 6), float64],) */;
  %399 = @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %400 = %397.3;
  %401 = %398.0;
  %402 = %399.2;
  (%400, %401, %402)
}

def @func_7344() -> (Tensor[(13, 14, 12), float64],) {
  %403 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %404 = %403.1;
  (%404,)
}

def @func_6592(%var_6590: uint32, %var_6591: Tensor[(56), uint32]) -> (Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(56), uint32], Tensor[(13, 14, 12), int8]) {
  %421 = fn (%var_6570: uint32, %var_6571: Tensor[(56), uint32]) -> (Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(56), uint32], Tensor[(13, 14, 12), int8]) {
    %405 = cast(%var_6570, dtype="uint32") /* ty=uint32 */;
    %406 = cast(%var_6571, dtype="uint32") /* ty=Tensor[(56), uint32] */;
    %407 = reshape(%405, newshape=[]) /* ty=uint32 */;
    %408 = reshape(%406, newshape=[56]) /* ty=Tensor[(56), uint32] */;
    %409 = @func_5472(%407, %408) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(660), int16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
    %410 = cast(meta[relay.Constant][15] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %411 = cast(meta[relay.Constant][15] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %412 = reshape(%410, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %413 = reshape(%411, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %414 = @func_377(%412, %413) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %415 = %414.1;
    %416 = cast(%415, dtype="int8") /* ty=Tensor[(13, 14, 12), int8] */;
    %417 = cast(%var_6570, dtype="int8") /* ty=int8 */;
    %418 = @func_3593() /* ty=Tensor[(13, 14, 12), float64] */;
    %419 = %409.6;
    %420 = add(%416, %417) /* ty=Tensor[(13, 14, 12), int8] */;
    (%418, meta[relay.Constant][15] /* ty=Tensor[(40), float32] */, %419, %var_6571, %420)
  };
  %421(%var_6590, %var_6591) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(56), uint32], Tensor[(13, 14, 12), int8]) */
}

def @func_7183() -> Tensor[(13, 14, 12), float64] {
  %423 = fn () -> Tensor[(13, 14, 12), float64] {
    %422 = @func_3274() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %422.0
  };
  %423() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_5321() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  @func_5319() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */
}

def @func_5810() -> Tensor[(13, 14, 12), float64] {
  %425 = fn () -> Tensor[(13, 14, 12), float64] {
    %424 = @func_3134() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
    %424.1
  };
  %425() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_2336() -> (Tensor[(13, 14, 12), float64],) {
  %428 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %426 = @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %427 = %426.0;
    (%427,)
  };
  %428() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_3388(%var_3296: Tensor[(1, 14, 8), float64], %var_3362: float32, %var_3363: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 8), uint32], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32], Tensor[(?, 14, 8), float64]) {
  %429 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %430 = @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %431 = %430.0;
  %432 = cast(%431, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %433 = reshape(%432, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %434 = @func_74(%433) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %435 = cast(%431, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %436 = cosh(%435) /* ty=Tensor[(13, ?, 8), float64] */;
  %437 = cast(%var_3296, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  %438 = cosh(%437) /* ty=Tensor[(1, 14, 8), float32] */;
  %439 = cast(%436, dtype="uint32") /* ty=Tensor[(13, ?, 8), uint32] */;
  %440 = cast(%438, dtype="uint32") /* ty=Tensor[(1, 14, 8), uint32] */;
  %441 = cast(%var_3362, dtype="float32") /* ty=float32 */;
  %442 = cast(%var_3363, dtype="float32") /* ty=Tensor[(780), float32] */;
  %443 = reshape(%441, newshape=[]) /* ty=float32 */;
  %444 = reshape(%442, newshape=[6, 13, 10]) /* ty=Tensor[(6, 13, 10), float32] */;
  %445 = @func_542(%443, %444) /* ty=(Tensor[(6, 13, 10), float32],) */;
  %446 = cast(%var_3296, dtype="float64") /* ty=Tensor[(1, 14, 8), float64] */;
  %447 = acos(%446) /* ty=Tensor[(1, 14, 8), float64] */;
  %448 = cast(%var_3296, dtype="bool") /* ty=Tensor[(1, 14, 8), bool] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="bool") /* ty=Tensor[(1, 14, 8), bool] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %452 = greater(%450, %451) /* ty=Tensor[(?, 14, 8), bool] */;
  %453 = cast(%452, dtype="float64") /* ty=Tensor[(?, 14, 8), float64] */;
  %454 = %429.1;
  %455 = %434.0;
  %456 = bitwise_and(%439, %440) /* ty=Tensor[(13, 14, 8), uint32] */;
  %457 = %445.0;
  %458 = log(%453) /* ty=Tensor[(?, 14, 8), float64] */;
  (%454, %455, %456, %457, %var_3362, %var_3363, %458)
}

def @func_7454() -> Tensor[(13, 14, 12), float64] {
  %459 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %459.0
}

def @func_11674(%var_11670: Tensor[(10, 9, 9), float32], %var_11671: float32, %var_11672: Tensor[(780), float32], %var_11673: Tensor[(8, 64), int32]) -> (Tensor[(13, 14, 12), float64], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(2, 28), uint32], Tensor[(13, 14, 12), float64], Tensor[(10, 9, 9), float32], Tensor[(40), float32], Tensor[(8, 64), int32], Tensor[(13, ?, 8), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(10, 9, 9), float64]) {
  @func_11668(%var_11670, %var_11671, %var_11672, %var_11673) /* ty=(Tensor[(13, 14, 12), float64], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(2, 28), uint32], Tensor[(13, 14, 12), float64], Tensor[(10, 9, 9), float32], Tensor[(40), float32], Tensor[(8, 64), int32], Tensor[(13, ?, 8), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(10, 9, 9), float64]) */
}

def @func_10132(%var_10130: Tensor[(40), float32], %var_10131: Tensor[(416), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(416), float64]) {
  %468 = fn (%var_10122: Tensor[(40), float32], %var_10123: Tensor[(416), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(416), float64]) {
    %460 = @func_5319() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
    %461 = cast(%var_10122, dtype="float32") /* ty=Tensor[(40), float32] */;
    %462 = cast(%var_10123, dtype="float64") /* ty=Tensor[(416), float64] */;
    %463 = reshape(%461, newshape=[1, 40]) /* ty=Tensor[(1, 40), float32] */;
    %464 = reshape(%462, newshape=[8, 52]) /* ty=Tensor[(8, 52), float64] */;
    %465 = @func_6817(%463, %464) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(8, 52), float64], Tensor[(13, 14, 12), float64], Tensor[(?, 40), bool], Tensor[(13, 14, 12), float64]) */;
    %466 = %460.0;
    %467 = %465.0;
    (%466, %467, %var_10122, %var_10123)
  };
  %468(%var_10130, %var_10131) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(416), float64]) */
}

def @func_6221() -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  %472 = fn () -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
    %469 = @func_4666() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %470 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
    %471 = %469.0;
    (%470, %471)
  };
  %472() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_4795() -> Tensor[(13, 14, 12), float64] {
  %474 = fn () -> Tensor[(13, 14, 12), float64] {
    %473 = @func_2491() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %473.2
  };
  %474() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_1621(%var_1620: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32]) {
  %483 = fn (%var_1614: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32]) {
    %475 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %476 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
    %477 = cast(%var_1614, dtype="int32") /* ty=Tensor[(13, 14, 12), int32] */;
    %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
    %479 = cast(%476, dtype="int32") /* ty=Tensor[(13, 14, 12), int32] */;
    %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %481 = %475.0;
    %482 = minimum(%479, %480) /* ty=Tensor[(13, 14, 12), int32] */;
    (%481, %482)
  };
  %483(%var_1620) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32]) */
}

def @func_9418() -> (Tensor[(7, 2, 3), float32], Tensor[(11, 7, 3), float64], Tensor[(231), float64]) {
  @func_9416() /* ty=(Tensor[(7, 2, 3), float32], Tensor[(11, 7, 3), float64], Tensor[(231), float64]) */
}

def @func_5620() -> Tensor[(13, ?, 8), float32] {
  @func_5618() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_4873(%var_4871: Tensor[(512), int32]) -> (Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 16, 4), int32], Tensor[(13, 14, 12), float64], Tensor[(512), float64]) {
  @func_4870(%var_4871) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 16, 4), int32], Tensor[(13, 14, 12), float64], Tensor[(512), float64]) */
}

def @func_708() -> Tensor[(13, 14, 12), float64] {
  %491 = fn () -> Tensor[(13, 14, 12), float64] {
    %484 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
    %485 = cast(%484, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %486 = tan(%485) /* ty=Tensor[(13, 14, 12), float64] */;
    %487 = cast(%484, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %488 = shape_of(%486, dtype="int32") /* ty=Tensor[(3), int32] */;
    %489 = cast(%486, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%489, %490) /* ty=Tensor[(13, 14, 12), float64] */
  };
  %491() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_2151() -> (Tensor[(13, 14, 12), float64],) {
  %492 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %493 = %492.1;
  (%493,)
}

def @func_7971() -> Tensor[(416), float64] {
  %495 = fn () -> Tensor[(416), float64] {
    %494 = @func_6325() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) */;
    %494.3
  };
  %495() /* ty=Tensor[(416), float64] */
}

def @func_8982() -> Tensor[(13, 14, 12), float64] {
  %497 = fn () -> Tensor[(13, 14, 12), float64] {
    %496 = @func_5991() /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */;
    %496.1
  };
  %497() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_1452(%var_1419: Tensor[(13, 9, 2), float64], %var_1431: Tensor[(13, 9, 2), float64]) -> (Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float32]) {
  %498 = cast(%var_1419, dtype="float64") /* ty=Tensor[(13, 9, 2), float64] */;
  %499 = cast(%var_1431, dtype="float64") /* ty=Tensor[(13, 9, 2), float64] */;
  %500 = shape_of(%var_1419, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%var_1419, dtype="float64") /* ty=Tensor[(13, 9, 2), float64] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %503 = cast(%var_1419, dtype="float32") /* ty=Tensor[(13, 9, 2), float32] */;
  %504 = cosh(%498) /* ty=Tensor[(13, 9, 2), float64] */;
  %505 = add(%501, %502) /* ty=Tensor[(13, 9, 2), float64] */;
  %506 = log(%503) /* ty=Tensor[(13, 9, 2), float32] */;
  (%504, %505, %506)
}

def @func_7538() -> (Tensor[(13, 14, 12), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) {
  @func_7536() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */
}

def @func_2822() -> Tensor[(13, 14, 12), float64] {
  @func_2311() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_3264() -> Tensor[(13, 14, 12), bool] {
  @func_3262() /* ty=Tensor[(13, 14, 12), bool] */
}

def @func_4233() -> Tensor[(13, 14, 12), float64] {
  @func_4231() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_892() -> (Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) {
  %510 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) {
    %507 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
    %508 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
    %509 = %507.3;
    (%508, %509)
  };
  %510() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */
}

def @func_3174() -> Tensor[(13, 14, 12), float64] {
  %511 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %511.0
}

def @func_11361() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  @func_11359() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */
}

def @func_4692(%var_4691: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), int32], Tensor[(13, 14, 12), bool]) {
  %525 = fn (%var_4675: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), int32], Tensor[(13, 14, 12), bool]) {
    %512 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
    %513 = cast(%var_4675, dtype="int32") /* ty=Tensor[(13, 14, 12), int32] */;
    %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
    %515 = cast(%512, dtype="int32") /* ty=Tensor[(13, 14, 12), int32] */;
    %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %517 = @func_2721() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) */;
    %518 = %517.2;
    %519 = cast(%var_4675, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
    %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
    %521 = cast(%518, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
    %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %523 = bitwise_or(%515, %516) /* ty=Tensor[(13, 14, 12), int32] */;
    %524 = greater_equal(%521, %522) /* ty=Tensor[(13, 14, 12), bool] */;
    (%523, %524)
  };
  %525(%var_4691) /* ty=(Tensor[(13, 14, 12), int32], Tensor[(13, 14, 12), bool]) */
}

def @func_7561() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  @func_7559() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */
}

def @func_5837(%var_5836: Tensor[(8, 4, 13), float64]) -> (Tensor[(8, 4, 13), float64],) {
  %528 = fn (%var_5825: Tensor[(8, 4, 13), float64]) -> (Tensor[(8, 4, 13), float64],) {
    %526 = cast(%var_5825, dtype="float64") /* ty=Tensor[(8, 4, 13), float64] */;
    %527 = acosh(%526) /* ty=Tensor[(8, 4, 13), float64] */;
    (%527,)
  };
  %528(%var_5836) /* ty=(Tensor[(8, 4, 13), float64],) */
}

def @func_7047() -> Tensor[(13, ?, 8), float32] {
  @func_7045() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_10538() -> Tensor[(13, ?, 8), float32] {
  @func_2799() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_3695() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) {
  @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */
}

def @func_5952() -> (Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) {
  %529 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %530 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 364), float64] */, dtype="float64") /* ty=Tensor[(6, 364), float64] */;
  %531 = reshape(%530, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %532 = @func_1619(%531) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32]) */;
  %533 = %529.2;
  %534 = %532.0;
  (%533, %534, meta[relay.Constant][16] /* ty=Tensor[(6, 364), float64] */)
}

def @func_3046() -> (Tensor[(13, 14, 12), float64],) {
  %535 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %536 = %535.0;
  (%536,)
}

def @func_9358() -> Tensor[(13, 14, 12), float64] {
  @func_9356() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_4445() -> (Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(780), float32]) {
  @func_4443() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(780), float32]) */
}

def @func_6984(%var_6982: Tensor[(1, 104), float64]) -> (Tensor[(4, 11, 10), float32], Tensor[(104), float64], Tensor[(1, 104), float64]) {
  %537 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 10), float32] */;
  %538 = cast(%var_6982, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %539 = reshape(%538, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %540 = @func_2362(%539) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */;
  %541 = acos(%537) /* ty=Tensor[(4, 11, 10), float32] */;
  %542 = %540.1;
  (%541, %542, %var_6982)
}

def @func_12405() -> (Tensor[(13, 14, 12), float64], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(13, 14, 12), float64]) {
  %543 = @func_5696() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %544 = cast(meta[relay.Constant][18] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %545 = reshape(%544, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %546 = @func_690(%545) /* ty=(Tensor[(16, 7, 9), float32],) */;
  %547 = @func_6199() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
  %548 = %543.1;
  %549 = %546.0;
  %550 = %547.1;
  (%548, %549, meta[relay.Constant][18] /* ty=Tensor[(1008), float32] */, %550)
}

def @func_12407() -> (Tensor[(13, 14, 12), float64], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(13, 14, 12), float64]) {
  @func_12405() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_4325() -> Tensor[(104), float64] {
  @func_4323() /* ty=Tensor[(104), float64] */
}

def @func_12356() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_12354() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_2046(%var_2044: uint32, %var_2045: Tensor[(8, 7, 1), uint32]) -> (Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_2042(%var_2044, %var_2045) /* ty=(Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_1108() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) {
  %561 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) {
    %551 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
    %552 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %553 = cast(meta[relay.Constant][19] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %554 = reshape(%553, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
    %555 = @func_74(%554) /* ty=(Tensor[(13, ?, 8), float32],) */;
    %556 = %555.0;
    %557 = cast(%556, dtype="float32") /* ty=Tensor[(13, ?, 8), float32] */;
    %558 = %551.0;
    %559 = %552.0;
    %560 = erf(%557) /* ty=Tensor[(13, ?, 8), float32] */;
    (%558, %559, meta[relay.Constant][19] /* ty=Tensor[(104), float64] */, %560)
  };
  %561() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */
}

def @func_9691() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), bool]) {
  @func_9689() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), bool]) */
}

def @func_10101() -> (Tensor[(11, 4, 16), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_10099() /* ty=(Tensor[(11, 4, 16), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_2722() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) {
  %591 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) {
    %562 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
    %563 = %562.0;
    %564 = cast(%563, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %565 = reshape(%564, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
    %566 = @func_277(%565) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */;
    %567 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %568 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
    %569 = reshape(%568, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
    %570 = @func_74(%569) /* ty=(Tensor[(13, ?, 8), float32],) */;
    %571 = %566.1;
    %572 = cast(%571, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %573 = reshape(%572, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
    %574 = @func_1619(%573) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32]) */;
    %575 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 1680), float64] */, dtype="float64") /* ty=Tensor[(1, 1680), float64] */;
    %576 = reshape(%575, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float64] */;
    %577 = @func_2559(%576) /* ty=(Tensor[(12, 10, 14), float64],) */;
    %578 = cast(meta[relay.Constant][22] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %579 = cast(meta[relay.Constant][22] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %580 = reshape(%578, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %581 = reshape(%579, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %582 = @func_377(%580, %581) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %583 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
    %584 = %567.0;
    %585 = %570.0;
    %586 = %574.0;
    %587 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
    %588 = %577.0;
    %589 = %582.0;
    %590 = %583.2;
    (%563, %571, %584, %585, meta[relay.Constant][20] /* ty=Tensor[(1, 104), float64] */, %586, %587, %588, meta[relay.Constant][21] /* ty=Tensor[(1, 1680), float64] */, %589, meta[relay.Constant][22] /* ty=Tensor[(40), float32] */, %590)
  };
  %591() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) */
}

def @func_10171() -> Tensor[(13, ?, 8), float32] {
  %595 = fn () -> Tensor[(13, ?, 8), float32] {
    %592 = @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %593 = %592.0;
    %594 = cast(%593, dtype="float32") /* ty=Tensor[(13, ?, 8), float32] */;
    asin(%594) /* ty=Tensor[(13, ?, 8), float32] */
  };
  %595() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_6261() -> (Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) {
  %596 = @func_5087() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %597 = @func_845() /* ty=Tensor[(13, 14, 12), float32] */;
  %598 = %596.1;
  (%597, %598)
}

def @func_9233(%var_9138: Tensor[(13, 7, 8), float32], %var_9197: Tensor[(13, 7, 8), float32]) -> (Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), bool], Tensor[(13, 7, 8), int8], Tensor[(13, 14, 12), float64], Tensor[(13, 7, 8), int8]) {
  %599 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
  %600 = @func_5618() /* ty=Tensor[(13, ?, 8), float32] */;
  %601 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %602 = %601.2;
  %603 = cast(%602, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %604 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %605 = cast(%600, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %607 = cast(%var_9197, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
  %608 = shape_of(%var_9138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(%var_9138, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %611 = @func_4412() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %612 = cast(%602, dtype="int32") /* ty=Tensor[(13, ?, 8), int32] */;
  %613 = cast(%var_9138, dtype="int32") /* ty=Tensor[(13, 7, 8), int32] */;
  %614 = bitwise_xor(%612, %613) /* ty=Tensor[(13, 7, 8), int32] */;
  %615 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 7, 8), int32] */, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%614, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %619 = floor_divide(%617, %618) /* ty=Tensor[(13, 7, 8), float32] */;
  %620 = cast(%619, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %621 = atan(%620) /* ty=Tensor[(13, 7, 8), float64] */;
  %622 = cast(%621, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %623 = cosh(%622) /* ty=Tensor[(13, 7, 8), float64] */;
  %624 = cast(%var_9138, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%623, dtype="int8") /* ty=Tensor[(13, 7, 8), int8] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %628 = %599.1;
  %629 = not_equal(%605, %606) /* ty=Tensor[(13, ?, 8), bool] */;
  %630 = bitwise_or(%609, %610) /* ty=Tensor[(13, 7, 8), int8] */;
  %631 = %611.0;
  %632 = left_shift(%626, %627) /* ty=Tensor[(13, 7, 8), int8] */;
  (%628, %629, %630, %631, %632)
}

def @func_8839() -> (Tensor[(13, 14, 12), float64],) {
  %634 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %633 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
    (%633,)
  };
  %634() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_5618() -> Tensor[(13, ?, 8), float32] {
  @func_2799() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_10358(%var_10356: Tensor[(512), int32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(8, 16, 4), int32], Tensor[(512), int32], Tensor[(13, ?, 8), bool], Tensor[(40), float32]) {
  @func_10355(%var_10356) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(8, 16, 4), int32], Tensor[(512), int32], Tensor[(13, ?, 8), bool], Tensor[(40), float32]) */
}

def @func_5801() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %641 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
    %635 = @func_4794() /* ty=Tensor[(13, 14, 12), float64] */;
    %636 = cast(%635, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %637 = asinh(%636) /* ty=Tensor[(13, 14, 12), float64] */;
    %638 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
    %639 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
    %640 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
    (%637, %638, %639, %640)
  };
  %641() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_4443() -> (Tensor[(13, 14, 12), float64], Tensor[(780), float32], Tensor[(780), float32]) {
  %642 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %643 = cast(meta[relay.Constant][24] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %644 = reshape(%643, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %645 = @func_819(%644) /* ty=(Tensor[(13, ?, 8), float32], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %646 = %642.0;
  %647 = %645.3;
  (%646, %647, meta[relay.Constant][24] /* ty=Tensor[(780), float32] */)
}

def @func_5895() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) {
  @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */
}

def @func_10621() -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %652 = fn () -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
    %648 = @func_8838() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %649 = @func_3626() /* ty=Tensor[(13, ?, 8), float32] */;
    %650 = @func_1769() /* ty=Tensor[(13, 14, 12), float64] */;
    %651 = %648.0;
    (%649, %650, %651)
  };
  %652() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_7072(%var_7071: Tensor[(234), float64]) -> (Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(12, 5, 11), uint16], Tensor[(660), int16], Tensor[(234), float64]) {
  %661 = fn (%var_7064: Tensor[(234), float64]) -> (Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(12, 5, 11), uint16], Tensor[(660), int16], Tensor[(234), float64]) {
    %653 = cast(meta[relay.Constant][25] /* ty=Tensor[(660), int16] */, dtype="int16") /* ty=Tensor[(660), int16] */;
    %654 = cast(%var_7064, dtype="float64") /* ty=Tensor[(234), float64] */;
    %655 = reshape(%653, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int16] */;
    %656 = reshape(%654, newshape=[234]) /* ty=Tensor[(234), float64] */;
    %657 = @func_2427(%655, %656) /* ty=(Tensor[(12, 5, 11), uint16], Tensor[(13, 9, 2), bool]) */;
    %658 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
    %659 = @func_4376() /* ty=Tensor[(40), float32] */;
    %660 = %657.0;
    (%658, %659, %660, meta[relay.Constant][25] /* ty=Tensor[(660), int16] */, %var_7064)
  };
  %661(%var_7071) /* ty=(Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(12, 5, 11), uint16], Tensor[(660), int16], Tensor[(234), float64]) */
}

def @func_2775(%var_2772: float32, %var_2773: Tensor[(390, 2), float32]) -> (Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) {
  %662 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %663 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %664 = cast(%var_2772, dtype="float32") /* ty=float32 */;
  %665 = cast(%var_2773, dtype="float32") /* ty=Tensor[(390, 2), float32] */;
  %666 = reshape(%664, newshape=[]) /* ty=float32 */;
  %667 = reshape(%665, newshape=[6, 13, 10]) /* ty=Tensor[(6, 13, 10), float32] */;
  %668 = @func_542(%666, %667) /* ty=(Tensor[(6, 13, 10), float32],) */;
  %669 = %662.2;
  %670 = @func_2311() /* ty=Tensor[(13, 14, 12), float64] */;
  %671 = %663.3;
  %672 = %668.0;
  (%669, %670, %671, %672, %var_2772, %var_2773)
}

def @func_3418() -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_4781() -> Tensor[(13, ?, 8), float32] {
  @func_4779() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_7045() -> Tensor[(13, ?, 8), float32] {
  @func_4779() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_10540() -> Tensor[(13, ?, 8), float32] {
  @func_10538() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_7389() -> Tensor[(13, 14, 12), float64] {
  %673 = fn () -> Tensor[(13, 14, 12), float64] {
    @func_4231() /* ty=Tensor[(13, 14, 12), float64] */
  };
  %673() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_8964() -> Tensor[(13, 14, 12), bool] {
  %674 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %674.1
}

def @func_12659(%var_12657: Tensor[(132), float64], %var_12658: Tensor[(104), float64]) -> (Tensor[(132), float64], Tensor[(11, 2, 6), float64], Tensor[(660), int16], Tensor[(104), float64], Tensor[(26, 4), float64], Tensor[(13, 12, 8), int64]) {
  %714 = fn (%var_12582: Tensor[(132), float64], %var_12631: Tensor[(104), float64]) -> (Tensor[(132), float64], Tensor[(11, 2, 6), float64], Tensor[(660), int16], Tensor[(104), float64], Tensor[(26, 4), float64], Tensor[(13, 12, 8), int64]) {
    %675 = cast(%var_12582, dtype="float64") /* ty=Tensor[(132), float64] */;
    %676 = reshape(%675, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float64] */;
    %677 = @func_3711(%676) /* ty=(Tensor[(11, 2, 6), float64],) */;
    %678 = %677.0;
    %679 = cast(%678, dtype="float64") /* ty=Tensor[(11, 2, 6), float64] */;
    %680 = shape_of(%var_12582, dtype="int32") /* ty=Tensor[(1), int32] */;
    %681 = cast(%var_12582, dtype="float64") /* ty=Tensor[(132), float64] */;
    %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?), float64] */;
    %683 = cast(%678, dtype="float64") /* ty=Tensor[(11, 2, 6), float64] */;
    %684 = reshape(%683, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float64] */;
    %685 = @func_3711(%684) /* ty=(Tensor[(11, 2, 6), float64],) */;
    %686 = @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */;
    %687 = cast(%var_12631, dtype="float64") /* ty=Tensor[(104), float64] */;
    %688 = reshape(%687, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
    %689 = @func_2362(%688) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */;
    %690 = %689.0;
    %691 = cast(%690, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
    %692 = @func_7836() /* ty=Tensor[(13, 12, 8), int8] */;
    %693 = cast(%692, dtype="float64") /* ty=Tensor[(13, 12, 8), float64] */;
    %694 = cos(%693) /* ty=Tensor[(13, 12, 8), float64] */;
    %695 = cast(%694, dtype="int32") /* ty=Tensor[(13, 12, 8), int32] */;
    %696 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
    %697 = cast(%692, dtype="int32") /* ty=Tensor[(13, 12, 8), int32] */;
    %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %699 = multiply(%697, %698) /* ty=Tensor[(13, 12, 8), int32] */;
    %700 = cast(%699, dtype="uint32") /* ty=Tensor[(13, 12, 8), uint32] */;
    %701 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
    %702 = cast(%692, dtype="uint32") /* ty=Tensor[(13, 12, 8), uint32] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %704 = subtract(%702, %703) /* ty=Tensor[(13, 12, 8), uint32] */;
    %705 = cast(%704, dtype="int64") /* ty=Tensor[(13, 12, 8), int64] */;
    %706 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
    %707 = cast(%699, dtype="int64") /* ty=Tensor[(13, 12, 8), int64] */;
    %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %709 = power(%681, %682) /* ty=Tensor[(132), float64] */;
    %710 = %685.0;
    %711 = %686.3;
    %712 = log2(%691) /* ty=Tensor[(26, 4), float64] */;
    %713 = logical_xor(%707, %708) /* ty=Tensor[(13, 12, 8), int64] */;
    (%709, %710, %711, %var_12631, %712, %713)
  };
  %714(%var_12657, %var_12658) /* ty=(Tensor[(132), float64], Tensor[(11, 2, 6), float64], Tensor[(660), int16], Tensor[(104), float64], Tensor[(26, 4), float64], Tensor[(13, 12, 8), int64]) */
}

def @func_7403() -> Tensor[(13, 14, 12), float64] {
  %715 = @func_5087() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %715.0
}

def @func_279(%var_278: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) {
  %723 = fn (%var_263: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) {
    %716 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
    %717 = cast(%var_263, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
    %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(3), int32] */;
    %719 = cast(%716, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
    %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %721 = not_equal(%719, %720) /* ty=Tensor[(13, 14, 12), bool] */;
    %722 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
    (%721, %722)
  };
  %723(%var_278) /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64]) */
}

def @func_6200() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) {
  %729 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) {
    %724 = @func_5303() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %725 = @func_5952() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
    %726 = %724.0;
    %727 = @func_4231() /* ty=Tensor[(13, 14, 12), float64] */;
    %728 = %725.2;
    (%726, %727, %728)
  };
  %729() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */
}

def @func_9338() -> (Tensor[(416), float64], Tensor[(104), float64]) {
  %732 = fn () -> (Tensor[(416), float64], Tensor[(104), float64]) {
    %730 = @func_7970() /* ty=Tensor[(416), float64] */;
    %731 = @func_4323() /* ty=Tensor[(104), float64] */;
    (%730, %731)
  };
  %732() /* ty=(Tensor[(416), float64], Tensor[(104), float64]) */
}

def @func_2800() -> Tensor[(13, ?, 8), float32] {
  %734 = fn () -> Tensor[(13, ?, 8), float32] {
    %733 = @func_1697() /* ty=(Tensor[(13, ?, 8), float32],) */;
    %733.0
  };
  %734() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_3275() -> (Tensor[(13, 14, 12), float64],) {
  %737 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %735 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %736 = %735.0;
    (%736,)
  };
  %737() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_666() -> Tensor[(13, 14, 12), float64] {
  %738 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %738.0
}

def @func_6683() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %749 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
    %739 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %740 = cast(meta[relay.Constant][26] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %741 = reshape(%740, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %742 = @func_1333(%741) /* ty=(Tensor[(40), float32], Tensor[(13, ?, 8), bool]) */;
    %743 = @func_6261() /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */;
    %744 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
    %745 = %739.0;
    %746 = %742.1;
    %747 = %743.1;
    %748 = %744.4;
    (%745, %746, meta[relay.Constant][26] /* ty=Tensor[(40), float32] */, %747, %748)
  };
  %749() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */
}

def @func_10299(%var_10296: Tensor[(14, 12, 9), float32], %var_10297: Tensor[(14, 12, 9), float32], %var_10298: float32) -> (Tensor[(14, 12, 9), float32], Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) {
  %768 = fn (%var_10237: Tensor[(14, 12, 9), float32], %var_10238: Tensor[(14, 12, 9), float32], %var_10275: float32) -> (Tensor[(14, 12, 9), float32], Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) {
    %750 = cast(%var_10238, dtype="float32") /* ty=Tensor[(14, 12, 9), float32] */;
    %751 = shape_of(%var_10237, dtype="int32") /* ty=Tensor[(3), int32] */;
    %752 = cast(%var_10237, dtype="float32") /* ty=Tensor[(14, 12, 9), float32] */;
    %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %754 = floor_divide(%752, %753) /* ty=Tensor[(14, 12, 9), float32] */;
    %755 = cast(%var_10237, dtype="float32") /* ty=Tensor[(14, 12, 9), float32] */;
    %756 = shape_of(%754, dtype="int32") /* ty=Tensor[(3), int32] */;
    %757 = cast(%754, dtype="float32") /* ty=Tensor[(14, 12, 9), float32] */;
    %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %759 = @func_6199() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
    %760 = cast(%var_10275, dtype="float32") /* ty=float32 */;
    %761 = cast(meta[relay.Constant][27] /* ty=Tensor[(390, 2), float32] */, dtype="float32") /* ty=Tensor[(390, 2), float32] */;
    %762 = reshape(%760, newshape=[]) /* ty=float32 */;
    %763 = reshape(%761, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
    %764 = @func_2775(%762, %763) /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) */;
    %765 = floor_mod(%757, %758) /* ty=Tensor[(14, 12, 9), float32] */;
    %766 = %759.0;
    %767 = %764.3;
    (%765, %766, %767, %var_10275, meta[relay.Constant][27] /* ty=Tensor[(390, 2), float32] */)
  };
  %768(%var_10296, %var_10297, %var_10298) /* ty=(Tensor[(14, 12, 9), float32], Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) */
}

def @func_4581() -> Tensor[(13, ?, 8), float32] {
  %769 = fn () -> Tensor[(13, ?, 8), float32] {
    @func_2799() /* ty=Tensor[(13, ?, 8), float32] */
  };
  %769() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_4506() -> (Tensor[(13, 14, 12), float64],) {
  %772 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %770 = @func_4303() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %771 = %770.0;
    (%771,)
  };
  %772() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_5954() -> (Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) {
  @func_5952() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */
}

def @func_5475(%var_5473: uint32, %var_5474: Tensor[(56), uint32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(660), int16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) {
  %792 = fn (%var_5449: uint32, %var_5450: Tensor[(56), uint32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(660), int16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) {
    %773 = @func_5087() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %774 = cast(%var_5449, dtype="uint32") /* ty=uint32 */;
    %775 = cast(%var_5450, dtype="uint32") /* ty=Tensor[(56), uint32] */;
    %776 = reshape(%774, newshape=[]) /* ty=uint32 */;
    %777 = reshape(%775, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint32] */;
    %778 = @func_2042(%776, %777) /* ty=(Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %779 = @func_4043() /* ty=(Tensor[(13, 6, 8), uint32], Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(1, 234), float64], Tensor[(8, 7, 1), bool]) */;
    %780 = cast(meta[relay.Constant][28] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %781 = cast(meta[relay.Constant][28] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %782 = reshape(%780, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %783 = reshape(%781, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %784 = @func_377(%782, %783) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %785 = @func_4412() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %786 = %773.0;
    %787 = @func_3626() /* ty=Tensor[(13, ?, 8), float32] */;
    %788 = %778.1;
    %789 = %779.4;
    %790 = %784.1;
    %791 = %785.0;
    (%786, %787, %788, %var_5449, %var_5450, %789, %790, meta[relay.Constant][28] /* ty=Tensor[(40), float32] */, %791)
  };
  %792(%var_5473, %var_5474) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(660), int16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_8050(%var_8049: Tensor[(416), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64], Tensor[(104), float64], Tensor[(104, 1), float64], Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) {
  %807 = fn (%var_8006: Tensor[(416), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64], Tensor[(104), float64], Tensor[(104, 1), float64], Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) {
    %793 = @func_5087() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %794 = cast(%var_8006, dtype="float64") /* ty=Tensor[(416), float64] */;
    %795 = reshape(%794, newshape=[8, 4, 13]) /* ty=Tensor[(8, 4, 13), float64] */;
    %796 = @func_5835(%795) /* ty=(Tensor[(8, 4, 13), float64],) */;
    %797 = cast(meta[relay.Constant][29] /* ty=Tensor[(104, 1), float64] */, dtype="float64") /* ty=Tensor[(104, 1), float64] */;
    %798 = reshape(%797, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %799 = @func_7635(%798) /* ty=(Tensor[(8, 4, 13), float32], Tensor[(4, 11, 10), float32], Tensor[(104), float64]) */;
    %800 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
    %801 = @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %802 = %793.1;
    %803 = %796.0;
    %804 = %799.2;
    %805 = %800.1;
    %806 = %801.1;
    (%802, %803, %var_8006, %804, meta[relay.Constant][29] /* ty=Tensor[(104, 1), float64] */, %805, %806)
  };
  %807(%var_8049) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64], Tensor[(104), float64], Tensor[(104, 1), float64], Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_3593() -> Tensor[(13, 14, 12), float64] {
  %808 = @func_2491() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %808.2
}

def @func_3934() -> (Tensor[(13, 10, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) {
  @func_3932() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_6427(%var_6425: Tensor[(13, 8, 8), float32]) -> (Tensor[(13, 8, 8), float32], Tensor[(13, ?, 8), float32]) {
  @func_6424(%var_6425) /* ty=(Tensor[(13, 8, 8), float32], Tensor[(13, ?, 8), float32]) */
}

def @func_6955() -> Tensor[(13, 14, 12), float64] {
  %810 = fn () -> Tensor[(13, 14, 12), float64] {
    %809 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %809.0
  };
  %810() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_1411() -> Tensor[(26, 4), float64] {
  %812 = fn () -> Tensor[(26, 4), float64] {
    %811 = @func_891() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */;
    %811.1
  };
  %812() /* ty=Tensor[(26, 4), float64] */
}

def @func_4304() -> (Tensor[(13, 14, 12), float64],) {
  %817 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %813 = @func_3500() /* ty=(Tensor[(13, 12, 8), int8], Tensor[(13, 14, 12), float64]) */;
    %814 = %813.1;
    %815 = cast(%814, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %816 = atanh(%815) /* ty=Tensor[(13, 14, 12), float64] */;
    (%816,)
  };
  %817() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_9237(%var_9235: Tensor[(13, 7, 8), float32], %var_9236: Tensor[(13, 7, 8), float32]) -> (Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), bool], Tensor[(13, 7, 8), int8], Tensor[(13, 14, 12), float64], Tensor[(13, 7, 8), int8]) {
  @func_9233(%var_9235, %var_9236) /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), bool], Tensor[(13, 7, 8), int8], Tensor[(13, 14, 12), float64], Tensor[(13, 7, 8), int8]) */
}

def @func_10832() -> (Tensor[(13, 14, 12), float64], Tensor[(56), uint32], Tensor[(13, ?, 8), bool], Tensor[(13, 14, 12), bool]) {
  %818 = cast(meta[relay.Constant][31] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %819 = cast(meta[relay.Constant][30] /* ty=Tensor[(56), uint32] */, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %820 = reshape(%818, newshape=[]) /* ty=uint32 */;
  %821 = reshape(%819, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint32] */;
  %822 = @func_2042(%820, %821) /* ty=(Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %823 = %822.1;
  %824 = cast(%823, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %825 = cast(meta[relay.Constant][31] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %826 = @func_7692() /* ty=(Tensor[(13, 14, 12), bool],) */;
  %827 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
  %828 = less_equal(%824, %825) /* ty=Tensor[(13, ?, 8), bool] */;
  %829 = %826.0;
  (%827, meta[relay.Constant][30] /* ty=Tensor[(56), uint32] */, %828, %829)
}

def @func_11487() -> (Tensor[(13, 14, 12), float64], Tensor[(11, 4, 16), float32]) {
  %834 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(11, 4, 16), float32]) {
    %830 = @func_7332() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %831 = @func_10099() /* ty=(Tensor[(11, 4, 16), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %832 = %830.0;
    %833 = %831.0;
    (%832, %833)
  };
  %834() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(11, 4, 16), float32]) */
}

def @func_11124() -> (Tensor[(13, 14, 12), float64], Tensor[(132), float64], Tensor[(13, 14, 12), float64]) {
  %835 = @func_8701() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %836 = @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %837 = %835.0;
  %838 = %836.2;
  %839 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
  (%837, %838, %839)
}

def @func_7635(%var_7629: Tensor[(104), float64]) -> (Tensor[(8, 4, 13), float32], Tensor[(4, 11, 10), float32], Tensor[(104), float64]) {
  %840 = @func_6325() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) */;
  %841 = %840.2;
  %842 = cast(%841, dtype="float32") /* ty=Tensor[(8, 4, 13), float32] */;
  %843 = cast(%var_7629, dtype="float64") /* ty=Tensor[(104), float64] */;
  %844 = reshape(%843, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
  %845 = @func_6984(%844) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(104), float64], Tensor[(1, 104), float64]) */;
  %846 = cos(%842) /* ty=Tensor[(8, 4, 13), float32] */;
  %847 = %845.0;
  (%846, %847, %var_7629)
}

def @func_6326() -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) {
  %854 = fn () -> (Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) {
    %848 = cast(meta[relay.Constant][32] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %849 = reshape(%848, newshape=[8, 4, 13]) /* ty=Tensor[(8, 4, 13), float64] */;
    %850 = @func_5835(%849) /* ty=(Tensor[(8, 4, 13), float64],) */;
    %851 = @func_3626() /* ty=Tensor[(13, ?, 8), float32] */;
    %852 = @func_5809() /* ty=Tensor[(13, 14, 12), float64] */;
    %853 = %850.0;
    (%851, %852, %853, meta[relay.Constant][32] /* ty=Tensor[(416), float64] */)
  };
  %854() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) */
}

def @func_260() -> Tensor[(13, 14, 12), float64] {
  @func_258() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_6738(%var_6733: Tensor[(56), uint32]) -> (Tensor[(104), float64], Tensor[(40), float32], uint32, Tensor[(56), uint32]) {
  %855 = cast(meta[relay.Constant][33] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %856 = cast(%var_6733, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %857 = reshape(%855, newshape=[]) /* ty=uint32 */;
  %858 = reshape(%856, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint32] */;
  %859 = @func_2042(%857, %858) /* ty=(Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %860 = @func_4323() /* ty=Tensor[(104), float64] */;
  %861 = %859.2;
  (%860, %861, meta[relay.Constant][33] /* ty=uint32 */, %var_6733)
}

def @func_4389(%var_4387: Tensor[(8, 16, 4), int32], %var_4388: Tensor[(8, 16, 4), int32]) -> (Tensor[(8, 16, 4), int32],) {
  %867 = fn (%var_4381: Tensor[(8, 16, 4), int32], %var_4382: Tensor[(8, 16, 4), int32]) -> (Tensor[(8, 16, 4), int32],) {
    %862 = cast(%var_4382, dtype="int32") /* ty=Tensor[(8, 16, 4), int32] */;
    %863 = shape_of(%var_4381, dtype="int32") /* ty=Tensor[(3), int32] */;
    %864 = cast(%var_4381, dtype="int32") /* ty=Tensor[(8, 16, 4), int32] */;
    %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %866 = subtract(%864, %865) /* ty=Tensor[(8, 16, 4), int32] */;
    (%866,)
  };
  %867(%var_4387, %var_4388) /* ty=(Tensor[(8, 16, 4), int32],) */
}

def @func_5719() -> (Tensor[(13, ?, 8), float32], Tensor[(104), float64]) {
  %868 = @func_5570() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %869 = %868.0;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(13, ?, 8), float64] */;
  %871 = reshape(%870, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %872 = @func_2362(%871) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */;
  %873 = %872.1;
  (%869, %873)
}

def @func_9356() -> Tensor[(13, 14, 12), float64] {
  @func_8981() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_7692() -> (Tensor[(13, 14, 12), bool],) {
  %874 = @func_2883() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) */;
  %875 = %874.1;
  (%875,)
}

def @func_12148() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(13, 14, 12), float64]) {
  %881 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(13, 14, 12), float64]) {
    %876 = @func_7332() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %877 = @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */;
    %878 = %876.0;
    %879 = %877.2;
    %880 = @func_6954() /* ty=Tensor[(13, 14, 12), float64] */;
    (%878, %879, %880)
  };
  %881() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(13, 14, 12), float64]) */
}

def @func_12679() -> Tensor[(416), float64] {
  @func_12677() /* ty=Tensor[(416), float64] */
}

def @func_9796() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(728), float32], Tensor[(13, ?, 8), float32]) {
  %882 = @func_8838() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %883 = @func_4666() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %884 = @func_5319() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %885 = @func_8586() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %886 = cast(meta[relay.Constant][34] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %887 = cast(meta[relay.Constant][34] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %888 = reshape(%886, newshape=[13, 7, 8]) /* ty=Tensor[(13, 7, 8), float32] */;
  %889 = reshape(%887, newshape=[13, 7, 8]) /* ty=Tensor[(13, 7, 8), float32] */;
  %890 = @func_9233(%888, %889) /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, ?, 8), bool], Tensor[(13, 7, 8), int8], Tensor[(13, 14, 12), float64], Tensor[(13, 7, 8), int8]) */;
  %891 = %882.0;
  %892 = %883.0;
  %893 = @func_2311() /* ty=Tensor[(13, 14, 12), float64] */;
  %894 = %884.1;
  %895 = %885.0;
  %896 = %890.1;
  %897 = @func_4580() /* ty=Tensor[(13, ?, 8), float32] */;
  (%891, %892, %893, %894, %895, %896, meta[relay.Constant][34] /* ty=Tensor[(728), float32] */, %897)
}

def @func_4485(%var_4484: Tensor[(40), float32]) -> (Tensor[(13, ?, 8), float32], Tensor[(6, 40), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) {
  %905 = fn (%var_4475: Tensor[(40), float32]) -> (Tensor[(13, ?, 8), float32], Tensor[(6, 40), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) {
    %898 = cast(%var_4475, dtype="float32") /* ty=Tensor[(40), float32] */;
    %899 = reshape(%898, newshape=[1, 40]) /* ty=Tensor[(1, 40), float32] */;
    %900 = @func_1813(%899) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), bool], Tensor[(6, 40), float32]) */;
    %901 = @func_2721() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) */;
    %902 = @func_2799() /* ty=Tensor[(13, ?, 8), float32] */;
    %903 = %900.3;
    %904 = %901.1;
    (%902, %903, %var_4475, %904)
  };
  %905(%var_4484) /* ty=(Tensor[(13, ?, 8), float32], Tensor[(6, 40), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_11263() -> (Tensor[(13, ?, 8), float32],) {
  %907 = fn () -> (Tensor[(13, ?, 8), float32],) {
    %906 = @func_7239() /* ty=Tensor[(13, ?, 8), float32] */;
    (%906,)
  };
  %907() /* ty=(Tensor[(13, ?, 8), float32],) */
}

def @func_11837() -> (Tensor[(13, 12, 8), int8], Tensor[(8, 4, 13), float64], Tensor[(13, 14, 12), float64]) {
  @func_11835() /* ty=(Tensor[(13, 12, 8), int8], Tensor[(8, 4, 13), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_9900() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) {
  %911 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) {
    %908 = @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %909 = %908.0;
    %910 = @func_3262() /* ty=Tensor[(13, 14, 12), bool] */;
    (%909, %910)
  };
  %911() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) */
}

def @func_6142() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %912 = @func_5800() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %913 = @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %914 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  %915 = %912.3;
  %916 = %913.0;
  (%914, %915, %916)
}

def @func_11668(%var_11540: Tensor[(10, 9, 9), float32], %var_11549: float32, %var_11550: Tensor[(780), float32], %var_11614: Tensor[(8, 64), int32]) -> (Tensor[(13, 14, 12), float64], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64], Tensor[(2, 28), uint32], Tensor[(13, 14, 12), float64], Tensor[(10, 9, 9), float32], Tensor[(40), float32], Tensor[(8, 64), int32], Tensor[(13, ?, 8), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(10, 9, 9), float64]) {
  %917 = cast(%var_11549, dtype="float32") /* ty=float32 */;
  %918 = cast(%var_11550, dtype="float32") /* ty=Tensor[(780), float32] */;
  %919 = reshape(%917, newshape=[]) /* ty=float32 */;
  %920 = reshape(%918, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
  %921 = @func_2775(%919, %920) /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) */;
  %922 = cast(%var_11549, dtype="uint32") /* ty=uint32 */;
  %923 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 28), uint32] */, dtype="uint32") /* ty=Tensor[(2, 28), uint32] */;
  %924 = reshape(%922, newshape=[]) /* ty=uint32 */;
  %925 = reshape(%923, newshape=[56]) /* ty=Tensor[(56), uint32] */;
  %926 = @func_6589(%924, %925) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(56), uint32], Tensor[(13, 14, 12), int8]) */;
  %927 = @func_2721() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) */;
  %928 = cast(%var_11540, dtype="float32") /* ty=Tensor[(10, 9, 9), float32] */;
  %929 = cast(%var_11614, dtype="int32") /* ty=Tensor[(8, 64), int32] */;
  %930 = reshape(%929, newshape=[512]) /* ty=Tensor[(512), int32] */;
  %931 = @func_4870(%930) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 16, 4), int32], Tensor[(13, 14, 12), float64], Tensor[(512), float64]) */;
  %932 = @func_6220() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %933 = cast(meta[relay.Constant][36] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %934 = reshape(%933, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %935 = @func_6424(%934) /* ty=(Tensor[(13, 8, 8), float32], Tensor[(13, ?, 8), float32]) */;
  %936 = %921.1;
  %937 = cast(%936, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %938 = reshape(%937, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %939 = @func_1619(%938) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), int32]) */;
  %940 = cast(%var_11540, dtype="float32") /* ty=Tensor[(10, 9, 9), float32] */;
  %941 = atan(%940) /* ty=Tensor[(10, 9, 9), float32] */;
  %942 = cast(%941, dtype="float32") /* ty=Tensor[(10, 9, 9), float32] */;
  %943 = rsqrt(%942) /* ty=Tensor[(10, 9, 9), float32] */;
  %944 = cast(%943, dtype="float32") /* ty=Tensor[(10, 9, 9), float32] */;
  %945 = asin(%944) /* ty=Tensor[(10, 9, 9), float32] */;
  %946 = cast(%945, dtype="float64") /* ty=Tensor[(10, 9, 9), float64] */;
  %947 = %926.2;
  %948 = %927.5;
  %949 = sigmoid(%928) /* ty=Tensor[(10, 9, 9), float32] */;
  %950 = %931.4;
  %951 = %932.0;
  %952 = %935.0;
  %953 = %939.0;
  %954 = @func_4376() /* ty=Tensor[(40), float32] */;
  %955 = log(%946) /* ty=Tensor[(10, 9, 9), float64] */;
  (%936, %var_11549, %var_11550, %947, meta[relay.Constant][35] /* ty=Tensor[(2, 28), uint32] */, %948, %949, %950, %var_11614, %951, %952, meta[relay.Constant][36] /* ty=Tensor[(832), float32] */, %953, %954, %955)
}

def @func_5993() -> (Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) {
  @func_5991() /* ty=(Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_8706() -> Tensor[(13, 14, 12), float64] {
  %956 = fn () -> Tensor[(13, 14, 12), float64] {
    @func_7182() /* ty=Tensor[(13, 14, 12), float64] */
  };
  %956() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_5572() -> (Tensor[(13, ?, 8), float32],) {
  @func_5570() /* ty=(Tensor[(13, ?, 8), float32],) */
}

def @func_4779() -> Tensor[(13, ?, 8), float32] {
  %957 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %957.2
}

def @func_3501() -> (Tensor[(13, 12, 8), int8], Tensor[(13, 14, 12), float64]) {
  %964 = fn () -> (Tensor[(13, 12, 8), int8], Tensor[(13, 14, 12), float64]) {
    %958 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
    %959 = cast(%958, dtype="int8") /* ty=Tensor[(13, ?, 8), int8] */;
    %960 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 12, 8), float32] */, dtype="int8") /* ty=Tensor[(13, 12, 8), int8] */;
    %961 = @func_3046() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %962 = bitwise_or(%959, %960) /* ty=Tensor[(13, 12, 8), int8] */;
    %963 = %961.0;
    (%962, %963)
  };
  %964() /* ty=(Tensor[(13, 12, 8), int8], Tensor[(13, 14, 12), float64]) */
}

def @func_5570() -> (Tensor[(13, ?, 8), float32],) {
  %965 = @func_4779() /* ty=Tensor[(13, ?, 8), float32] */;
  (%965,)
}

def @func_4323() -> Tensor[(104), float64] {
  %966 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %966.2
}

def @func_973() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_5696() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %967 = @func_2491() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %968 = @func_2491() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %969 = %967.0;
  %970 = %968.0;
  (%969, %970)
}

def @func_7638(%var_7636: Tensor[(104), float64]) -> (Tensor[(8, 4, 13), float32], Tensor[(4, 11, 10), float32], Tensor[(104), float64]) {
  @func_7635(%var_7636) /* ty=(Tensor[(8, 4, 13), float32], Tensor[(4, 11, 10), float32], Tensor[(104), float64]) */
}

def @func_3711(%var_3701: Tensor[(11, 2, 6), float64]) -> (Tensor[(11, 2, 6), float64],) {
  %971 = cast(%var_3701, dtype="float64") /* ty=Tensor[(11, 2, 6), float64] */;
  %972 = rsqrt(%971) /* ty=Tensor[(11, 2, 6), float64] */;
  (%972,)
}

def @func_9689() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), bool]) {
  %973 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %974 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
  %975 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
  %976 = cast(%975, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %977 = shape_of(%974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %978 = cast(%974, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %980 = %973.0;
  %981 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
  %982 = equal(%978, %979) /* ty=Tensor[(13, ?, 8), bool] */;
  (%980, %981, %982)
}

def @func_9641(%var_9614: Tensor[(40), float32]) -> (Tensor[(104), float64], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) {
  %983 = @func_5392() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(6, 40), float32], Tensor[(10, 4), float32], Tensor[(104), float64], Tensor[(104), float64]) */;
  %984 = cast(meta[relay.Constant][38] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %985 = cast(meta[relay.Constant][39] /* ty=Tensor[(56), uint32] */, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %986 = reshape(%984, newshape=[]) /* ty=uint32 */;
  %987 = reshape(%985, newshape=[56]) /* ty=Tensor[(56), uint32] */;
  %988 = @func_5472(%986, %987) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(660), int16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
  %989 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %990 = cast(%var_9614, dtype="float32") /* ty=Tensor[(40), float32] */;
  %991 = reshape(%990, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %992 = @func_3789(%991) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(40), float32]) */;
  %993 = @func_1697() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %994 = %983.3;
  %995 = %988.1;
  %996 = %989.0;
  %997 = %992.1;
  %998 = %993.0;
  (%994, %995, meta[relay.Constant][38] /* ty=uint32 */, meta[relay.Constant][39] /* ty=Tensor[(56), uint32] */, %996, %997, %var_9614, %998)
}

def @func_6244() -> (Tensor[(13, 14, 12), float64],) {
  %1001 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %999 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %1000 = %999.0;
    (%1000,)
  };
  %1001() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_11898() -> (Tensor[(13, 14, 12), float64],) {
  %1004 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %1002 = @func_11835() /* ty=(Tensor[(13, 12, 8), int8], Tensor[(8, 4, 13), float64], Tensor[(13, 14, 12), float64]) */;
    %1003 = %1002.2;
    (%1003,)
  };
  %1004() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_12677() -> Tensor[(416), float64] {
  @func_7970() /* ty=Tensor[(416), float64] */
}

def @func_5991() -> (Tensor[(13, 14, 12), float32], Tensor[(13, 14, 12), float64]) {
  %1005 = @func_845() /* ty=Tensor[(13, 14, 12), float32] */;
  %1006 = @func_3955() /* ty=Tensor[(13, 14, 12), float64] */;
  (%1005, %1006)
}

def @func_389() -> Tensor[(13, ?, 8), float32] {
  %1007 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
  %1007.2
}

def @func_4540() -> Tensor[(13, 14, 12), float64] {
  @func_4538() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_7346() -> (Tensor[(13, 14, 12), float64],) {
  @func_7344() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_12205() -> Tensor[(13, 14, 12), float64] {
  %1008 = fn () -> Tensor[(13, 14, 12), float64] {
    @func_2822() /* ty=Tensor[(13, 14, 12), float64] */
  };
  %1008() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_12458() -> Tensor[(13, 14, 12), float64] {
  @func_666() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_3879() -> (Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) {
  @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */
}

def @func_2559(%var_2554: Tensor[(12, 10, 14), float64]) -> (Tensor[(12, 10, 14), float64],) {
  %1009 = cast(%var_2554, dtype="float64") /* ty=Tensor[(12, 10, 14), float64] */;
  %1010 = acos(%1009) /* ty=Tensor[(12, 10, 14), float64] */;
  (%1010,)
}

def @func_12330() -> (Tensor[(13, 14, 12), float64],) {
  @func_12328() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_2430(%var_2428: Tensor[(12, 5, 11), int16], %var_2429: Tensor[(234), float64]) -> (Tensor[(12, 5, 11), uint16], Tensor[(13, 9, 2), bool]) {
  %1032 = fn (%var_2372: Tensor[(12, 5, 11), int16], %var_2379: Tensor[(234), float64]) -> (Tensor[(12, 5, 11), uint16], Tensor[(13, 9, 2), bool]) {
    %1011 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 5, 11), int16] */, dtype="bool") /* ty=Tensor[(12, 5, 11), bool] */;
    %1012 = shape_of(%var_2372, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1013 = cast(%var_2372, dtype="bool") /* ty=Tensor[(12, 5, 11), bool] */;
    %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1015 = greater(%1013, %1014) /* ty=Tensor[(12, 5, 11), bool] */;
    %1016 = cast(%var_2372, dtype="uint16") /* ty=Tensor[(12, 5, 11), uint16] */;
    %1017 = shape_of(%1015, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1018 = cast(%1015, dtype="uint16") /* ty=Tensor[(12, 5, 11), uint16] */;
    %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1020 = cast(%var_2379, dtype="float64") /* ty=Tensor[(234), float64] */;
    %1021 = cast(%var_2379, dtype="float64") /* ty=Tensor[(234), float64] */;
    %1022 = reshape(%1020, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), float64] */;
    %1023 = reshape(%1021, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), float64] */;
    %1024 = @func_1452(%1022, %1023) /* ty=(Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float32]) */;
    %1025 = %1024.0;
    %1026 = cast(%var_2379, dtype="bool") /* ty=Tensor[(234), bool] */;
    %1027 = shape_of(%1025, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1028 = cast(%1025, dtype="bool") /* ty=Tensor[(13, 9, 2), bool] */;
    %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1030 = multiply(%1018, %1019) /* ty=Tensor[(12, 5, 11), uint16] */;
    %1031 = equal(%1028, %1029) /* ty=Tensor[(13, 9, 2), bool] */;
    (%1030, %1031)
  };
  %1032(%var_2428, %var_2429) /* ty=(Tensor[(12, 5, 11), uint16], Tensor[(13, 9, 2), bool]) */
}

def @func_10953(%var_10949: float32, %var_10950: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32]) {
  %1033 = @func_6682() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %1034 = cast(%var_10949, dtype="float32") /* ty=float32 */;
  %1035 = cast(%var_10950, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1036 = reshape(%1034, newshape=[]) /* ty=float32 */;
  %1037 = reshape(%1035, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
  %1038 = @func_2775(%1036, %1037) /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) */;
  %1039 = %1033.3;
  %1040 = %1038.3;
  (%1039, %1040, %var_10949, %var_10950)
}

def @func_7456() -> Tensor[(13, 14, 12), float64] {
  @func_7454() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_7034() -> (Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32]) {
  %1050 = fn () -> (Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32]) {
    %1041 = @func_6142() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
    %1042 = %1041.1;
    %1043 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 14, 12), float64] */, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
    %1044 = shape_of(%1042, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1045 = cast(%1042, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
    %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1047 = @func_5719() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */;
    %1048 = less_equal(%1045, %1046) /* ty=Tensor[(13, 14, 12), bool] */;
    %1049 = %1047.0;
    (%1048, %1049)
  };
  %1050() /* ty=(Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32]) */
}

def @func_5721() -> (Tensor[(13, ?, 8), float32], Tensor[(104), float64]) {
  @func_5719() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */
}

def @func_10605() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
  %1058 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) {
    %1051 = @func_8149() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %1052 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %1053 = @func_8149() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %1054 = %1051.0;
    %1055 = %1052.1;
    %1056 = @func_10538() /* ty=Tensor[(13, ?, 8), float32] */;
    %1057 = %1053.0;
    (%1054, %1055, %1056, %1057)
  };
  %1058() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_3791(%var_3790: Tensor[(40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(40), float32]) {
  %1069 = fn (%var_3748: Tensor[(40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(40), float32]) {
    %1059 = @func_2227() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %1060 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
    %1061 = cast(%var_3748, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1062 = %1060.2;
    %1063 = cast(%1062, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1064 = reshape(%1061, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %1065 = reshape(%1063, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %1066 = @func_1261(%1064, %1065) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */;
    %1067 = %1059.2;
    %1068 = %1066.6;
    (%1067, %1062, %1068, %var_3748)
  };
  %1069(%var_3790) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(104), float64], Tensor[(40), float32]) */
}

def @func_10957(%var_10955: float32, %var_10956: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32]) {
  @func_10953(%var_10955, %var_10956) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32]) */
}

def @func_9387(%var_9385: Tensor[(11, 7, 3), float64], %var_9386: Tensor[(11, 7, 3), float64]) -> (Tensor[(11, 7, 3), float64],) {
  %1075 = fn (%var_9379: Tensor[(11, 7, 3), float64], %var_9380: Tensor[(11, 7, 3), float64]) -> (Tensor[(11, 7, 3), float64],) {
    %1070 = cast(%var_9380, dtype="float64") /* ty=Tensor[(11, 7, 3), float64] */;
    %1071 = shape_of(%var_9379, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1072 = cast(%var_9379, dtype="float64") /* ty=Tensor[(11, 7, 3), float64] */;
    %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1074 = minimum(%1072, %1073) /* ty=Tensor[(11, 7, 3), float64] */;
    (%1074,)
  };
  %1075(%var_9385, %var_9386) /* ty=(Tensor[(11, 7, 3), float64],) */
}

def @func_10315() -> Tensor[(40), float32] {
  %1076 = fn () -> Tensor[(40), float32] {
    @func_4376() /* ty=Tensor[(40), float32] */
  };
  %1076() /* ty=Tensor[(40), float32] */
}

def @func_10872() -> (Tensor[(13, 12, 8), int8],) {
  %1078 = fn () -> (Tensor[(13, 12, 8), int8],) {
    %1077 = @func_7836() /* ty=Tensor[(13, 12, 8), int8] */;
    (%1077,)
  };
  %1078() /* ty=(Tensor[(13, 12, 8), int8],) */
}

def @func_7222() -> (Tensor[(11, 2, 6), float64],) {
  %1081 = fn () -> (Tensor[(11, 2, 6), float64],) {
    %1079 = @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
    %1080 = %1079.1;
    (%1080,)
  };
  %1081() /* ty=(Tensor[(11, 2, 6), float64],) */
}

def @func_11511() -> Tensor[(13, ?, 8), float32] {
  %1082 = @func_11359() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %1082.1
}

def @func_8424() -> (Tensor[(13, 14, 12), float64], Tensor[(20, 2), float32], Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), float64]) {
  %1095 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(20, 2), float32], Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), float64]) {
    %1083 = @func_2227() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %1084 = @func_5952() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
    %1085 = @func_5696() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %1086 = cast(meta[relay.Constant][42] /* ty=Tensor[(20, 2), float32] */, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
    %1087 = reshape(%1086, newshape=[1, 40]) /* ty=Tensor[(1, 40), float32] */;
    %1088 = @func_1813(%1087) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), bool], Tensor[(6, 40), float32]) */;
    %1089 = %1088.2;
    %1090 = cast(%1089, dtype="float64") /* ty=Tensor[(6, 40), float64] */;
    %1091 = %1083.0;
    %1092 = %1084.0;
    %1093 = %1085.1;
    %1094 = log(%1090) /* ty=Tensor[(6, 40), float64] */;
    (%1091, meta[relay.Constant][42] /* ty=Tensor[(20, 2), float32] */, %1092, %1093, %1094)
  };
  %1095() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(20, 2), float32], Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), float64]) */
}

def @func_7853() -> (Tensor[(13, 14, 12), float64],) {
  %1098 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %1096 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %1097 = %1096.0;
    (%1097,)
  };
  %1098() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_6987(%var_6985: Tensor[(1, 104), float64]) -> (Tensor[(4, 11, 10), float32], Tensor[(104), float64], Tensor[(1, 104), float64]) {
  @func_6984(%var_6985) /* ty=(Tensor[(4, 11, 10), float32], Tensor[(104), float64], Tensor[(1, 104), float64]) */
}

def @func_11809() -> (Tensor[(13, 14, 12), float64],) {
  @func_11807() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_3176() -> Tensor[(13, 14, 12), float64] {
  @func_3174() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_3714(%var_3712: Tensor[(11, 2, 6), float64]) -> (Tensor[(11, 2, 6), float64],) {
  @func_3711(%var_3712) /* ty=(Tensor[(11, 2, 6), float64],) */
}

def @func_1336(%var_1334: Tensor[(40), float32]) -> (Tensor[(40), float32], Tensor[(13, ?, 8), bool]) {
  @func_1333(%var_1334) /* ty=(Tensor[(40), float32], Tensor[(13, ?, 8), bool]) */
}

def @func_10834() -> (Tensor[(13, 14, 12), float64], Tensor[(56), uint32], Tensor[(13, ?, 8), bool], Tensor[(13, 14, 12), bool]) {
  @func_10832() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(56), uint32], Tensor[(13, ?, 8), bool], Tensor[(13, 14, 12), bool]) */
}

def @func_11740(%var_11739: Tensor[(40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(5, 4, 2), float32], Tensor[(40), float32]) {
  %1109 = fn (%var_11731: Tensor[(40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(5, 4, 2), float32], Tensor[(40), float32]) {
    %1099 = @func_5800() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %1100 = cast(%var_11731, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1101 = cast(%var_11731, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1102 = reshape(%1100, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %1103 = reshape(%1101, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %1104 = @func_377(%1102, %1103) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %1105 = %1099.0;
    %1106 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
    %1107 = @func_7045() /* ty=Tensor[(13, ?, 8), float32] */;
    %1108 = %1104.0;
    (%1105, %1106, %1107, %1108, %var_11731)
  };
  %1109(%var_11739) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(5, 4, 2), float32], Tensor[(40), float32]) */
}

def @func_2885() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) {
  @func_2883() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) */
}

def @func_10897() -> (Tensor[(26, 4), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_10895() /* ty=(Tensor[(26, 4), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_4162(%var_4161: Tensor[(13, 4, 8), float32]) -> Tensor[(13, 4, 8), int8] {
  %1113 = fn (%var_4153: Tensor[(13, 4, 8), float32]) -> Tensor[(13, 4, 8), int8] {
    %1110 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
    %1111 = cast(%1110, dtype="int8") /* ty=Tensor[(13, ?, 8), int8] */;
    %1112 = cast(%var_4153, dtype="int8") /* ty=Tensor[(13, 4, 8), int8] */;
    bitwise_and(%1111, %1112) /* ty=Tensor[(13, 4, 8), int8] */
  };
  %1113(%var_4161) /* ty=Tensor[(13, 4, 8), int8] */
}

def @func_5088() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1117 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
    %1114 = @func_3693() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) */;
    %1115 = @func_3593() /* ty=Tensor[(13, 14, 12), float64] */;
    %1116 = %1114.0;
    (%1115, %1116)
  };
  %1117() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_11835() -> (Tensor[(13, 12, 8), int8], Tensor[(8, 4, 13), float64], Tensor[(13, 14, 12), float64]) {
  %1118 = @func_10871() /* ty=(Tensor[(13, 12, 8), int8],) */;
  %1119 = @func_6325() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) */;
  %1120 = @func_2883() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) */;
  %1121 = %1118.0;
  %1122 = %1119.2;
  %1123 = %1120.0;
  (%1121, %1122, %1123)
}

def @main(%var_12739: Tensor[(11, 4, 4), float64]) -> (Tensor[(11, 4, 4), float64],) {
  %1124 = cast(%var_12739, dtype="float64") /* ty=Tensor[(11, 4, 4), float64] */;
  %1125 = sigmoid(%1124) /* ty=Tensor[(11, 4, 4), float64] */;
  (%1125,)
}

def @func_3957() -> Tensor[(13, 14, 12), float64] {
  @func_3955() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_846() -> Tensor[(13, 14, 12), float32] {
  %1128 = fn () -> Tensor[(13, 14, 12), float32] {
    %1126 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
    %1127 = cast(%1126, dtype="float32") /* ty=Tensor[(13, 14, 12), float32] */;
    atan(%1127) /* ty=Tensor[(13, 14, 12), float32] */
  };
  %1128() /* ty=Tensor[(13, 14, 12), float32] */
}

def @func_8095(%var_8094: Tensor[(780), float32]) -> (Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(780), float32], Tensor[(780), float32]) {
  %1137 = fn (%var_8078: Tensor[(780), float32]) -> (Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(780), float32], Tensor[(780), float32]) {
    %1129 = @func_2721() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(1, 104), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(12, 10, 14), float64], Tensor[(1, 1680), float64], Tensor[(5, 4, 2), float32], Tensor[(40), float32], Tensor[(104), float64]) */;
    %1130 = @func_5570() /* ty=(Tensor[(13, ?, 8), float32],) */;
    %1131 = cast(%var_8078, dtype="float32") /* ty=Tensor[(780), float32] */;
    %1132 = reshape(%1131, newshape=[780]) /* ty=Tensor[(780), float32] */;
    %1133 = @func_5164(%1132) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(390, 2), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64]) */;
    %1134 = %1129.3;
    %1135 = %1130.0;
    %1136 = %1133.5;
    (%1134, %1135, %1136, %var_8078)
  };
  %1137(%var_8094) /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, ?, 8), float32], Tensor[(780), float32], Tensor[(780), float32]) */
}

def @func_3262() -> Tensor[(13, 14, 12), bool] {
  %1138 = @func_2883() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool]) */;
  %1138.1
}

def @func_6898() -> (Tensor[(13, 14, 12), float64],) {
  %1140 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %1139 = @func_4794() /* ty=Tensor[(13, 14, 12), float64] */;
    (%1139,)
  };
  %1140() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_3048() -> (Tensor[(13, 14, 12), float64],) {
  @func_3046() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_2042(%var_1986: uint32, %var_1987: Tensor[(8, 7, 1), uint32]) -> (Tensor[(8, 7, 1), float64], Tensor[(13, ?, 8), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1141 = cast(%var_1986, dtype="uint32") /* ty=uint32 */;
  %1142 = cast(%var_1987, dtype="uint32") /* ty=Tensor[(8, 7, 1), uint32] */;
  %1143 = maximum(%1141, %1142) /* ty=Tensor[(8, 7, 1), uint32] */;
  %1144 = cast(%var_1986, dtype="float64") /* ty=float64 */;
  %1145 = cast(%1143, dtype="float64") /* ty=Tensor[(8, 7, 1), float64] */;
  %1146 = cast(meta[relay.Constant][43] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1147 = cast(meta[relay.Constant][43] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1148 = reshape(%1146, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %1149 = reshape(%1147, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %1150 = @func_377(%1148, %1149) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %1151 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1152 = @func_891() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */;
  %1153 = mod(%1144, %1145) /* ty=Tensor[(8, 7, 1), float64] */;
  %1154 = %1150.3;
  %1155 = %1151.1;
  %1156 = %1152.0;
  (%1153, %1154, meta[relay.Constant][43] /* ty=Tensor[(40), float32] */, %1155, %1156)
}

def @func_306() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) {
  @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */
}

def @func_10483() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool]) {
  @func_10481() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool]) */
}

def @func_4378() -> Tensor[(40), float32] {
  @func_4376() /* ty=Tensor[(40), float32] */
}

def @func_3291() -> (Tensor[(13, ?, 8), float32],) {
  %1157 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  (%1157,)
}

def @func_5164(%var_5152: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(390, 2), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64]) {
  %1158 = @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1159 = @func_3274() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1160 = cast(-1.75459f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1161 = cast(%var_5152, dtype="float32") /* ty=Tensor[(780), float32] */;
  %1162 = reshape(%1160, newshape=[]) /* ty=float32 */;
  %1163 = reshape(%1161, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
  %1164 = @func_2775(%1162, %1163) /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) */;
  %1165 = %1158.0;
  %1166 = @func_4231() /* ty=Tensor[(13, 14, 12), float64] */;
  %1167 = %1159.0;
  %1168 = %1164.5;
  %1169 = @func_4794() /* ty=Tensor[(13, 14, 12), float64] */;
  (%1165, %1166, %1167, %1168, -1.75459f /* ty=float32 */, %var_5152, %1169)
}

def @func_546(%var_544: float32, %var_545: Tensor[(6, 13, 10), float32]) -> (Tensor[(6, 13, 10), float32],) {
  @func_542(%var_544, %var_545) /* ty=(Tensor[(6, 13, 10), float32],) */
}

def @func_3393(%var_3390: Tensor[(1, 14, 8), float64], %var_3391: float32, %var_3392: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 8), uint32], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32], Tensor[(?, 14, 8), float64]) {
  @func_3388(%var_3390, %var_3391, %var_3392) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 8), uint32], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32], Tensor[(?, 14, 8), float64]) */
}

def @func_9644(%var_9642: Tensor[(40), float32]) -> (Tensor[(104), float64], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) {
  @func_9641(%var_9642) /* ty=(Tensor[(104), float64], Tensor[(13, ?, 8), float32], uint32, Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */
}

def @func_634(%var_633: Tensor[(40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32]) {
  %1177 = fn (%var_623: Tensor[(40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32]) {
    %1170 = cast(%var_623, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1171 = cast(%var_623, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1172 = reshape(%1170, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %1173 = reshape(%1171, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %1174 = @func_377(%1172, %1173) /* ty=(Tensor[(5, 4, 2), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %1175 = @func_258() /* ty=Tensor[(13, 14, 12), float64] */;
    %1176 = %1174.4;
    (%1175, %1176, %var_623)
  };
  %1177(%var_633) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32]) */
}

def @func_7694() -> (Tensor[(13, 14, 12), bool],) {
  @func_7692() /* ty=(Tensor[(13, 14, 12), bool],) */
}

def @func_10455() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_10453() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_11359() -> (Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) {
  %1178 = @func_6220() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %1179 = @func_1769() /* ty=Tensor[(13, 14, 12), float64] */;
  %1180 = %1178.0;
  (%1179, %1180)
}

def @func_2364(%var_2363: Tensor[(26, 4), float64]) -> (Tensor[(26, 4), float64], Tensor[(104), float64]) {
  %1190 = fn (%var_2355: Tensor[(26, 4), float64]) -> (Tensor[(26, 4), float64], Tensor[(104), float64]) {
    %1181 = @func_891() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */;
    %1182 = %1181.1;
    %1183 = cast(%var_2355, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
    %1184 = shape_of(%1182, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1185 = cast(%1182, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
    %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1187 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
    %1188 = mod(%1185, %1186) /* ty=Tensor[(26, 4), float64] */;
    %1189 = %1187.2;
    (%1188, %1189)
  };
  %1190(%var_2363) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */
}

def @func_5893() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) {
  %1191 = @func_4231() /* ty=Tensor[(13, 14, 12), float64] */;
  %1192 = @func_845() /* ty=Tensor[(13, 14, 12), float32] */;
  (%1191, %1192)
}

def @func_7332() -> (Tensor[(13, 14, 12), float64],) {
  %1193 = @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1194 = %1193.0;
  (%1194,)
}

def @func_6741(%var_6739: Tensor[(56), uint32]) -> (Tensor[(104), float64], Tensor[(40), float32], uint32, Tensor[(56), uint32]) {
  @func_6738(%var_6739) /* ty=(Tensor[(104), float64], Tensor[(40), float32], uint32, Tensor[(56), uint32]) */
}

def @func_2779(%var_2777: float32, %var_2778: Tensor[(390, 2), float32]) -> (Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) {
  @func_2775(%var_2777, %var_2778) /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(390, 2), float32]) */
}

def @func_1770() -> Tensor[(13, 14, 12), float64] {
  %1195 = fn () -> Tensor[(13, 14, 12), float64] {
    @func_258() /* ty=Tensor[(13, 14, 12), float64] */
  };
  %1195() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_6025(%var_6021: Tensor[(104), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 10, 8), float32], Tensor[(104), float64], Tensor[(104), float64]) {
  %1196 = @func_5087() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1197 = @func_3932() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
  %1198 = %1197.0;
  %1199 = cast(%1198, dtype="float32") /* ty=Tensor[(13, 10, 8), float32] */;
  %1200 = cast(%var_6021, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1201 = reshape(%1200, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
  %1202 = @func_2362(%1201) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */;
  %1203 = %1196.1;
  %1204 = cosh(%1199) /* ty=Tensor[(13, 10, 8), float32] */;
  %1205 = %1202.1;
  (%1203, %1204, %1205, %var_6021)
}

def @func_12539() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64]) {
  %1206 = @func_12328() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1207 = @func_11835() /* ty=(Tensor[(13, 12, 8), int8], Tensor[(8, 4, 13), float64], Tensor[(13, 14, 12), float64]) */;
  %1208 = @func_8423() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(20, 2), float32], Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), float64]) */;
  %1209 = %1206.0;
  %1210 = %1207.2;
  %1211 = %1208.2;
  (%1209, %1210, %1211)
}

def @func_4376() -> Tensor[(40), float32] {
  %1212 = @func_3932() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
  %1212.3
}

def @func_2107() -> (Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) {
  %1224 = fn () -> (Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) {
    %1213 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
    %1214 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %1215 = cast(meta[relay.Constant][44] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1216 = %1213.2;
    %1217 = cast(%1216, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1218 = reshape(%1215, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %1219 = reshape(%1217, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %1220 = @func_1261(%1218, %1219) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), uint16], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(104), float64]) */;
    %1221 = %1214.0;
    %1222 = %1220.6;
    %1223 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
    (%1216, %1221, %1222, meta[relay.Constant][44] /* ty=Tensor[(40), float32] */, %1223)
  };
  %1224() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */
}

def @func_7837() -> Tensor[(13, 12, 8), int8] {
  %1226 = fn () -> Tensor[(13, 12, 8), int8] {
    %1225 = @func_3500() /* ty=(Tensor[(13, 12, 8), int8], Tensor[(13, 14, 12), float64]) */;
    %1225.0
  };
  %1226() /* ty=Tensor[(13, 12, 8), int8] */
}

def @func_3693() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(234), float64], Tensor[(13, ?, 8), float32]) {
  %1227 = @func_3046() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1228 = cast(meta[relay.Constant][45] /* ty=Tensor[(660), int16] */, dtype="int16") /* ty=Tensor[(660), int16] */;
  %1229 = cast(meta[relay.Constant][46] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %1230 = reshape(%1228, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int16] */;
  %1231 = reshape(%1229, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %1232 = @func_2427(%1230, %1231) /* ty=(Tensor[(12, 5, 11), uint16], Tensor[(13, 9, 2), bool]) */;
  %1233 = %1227.0;
  %1234 = @func_1769() /* ty=Tensor[(13, 14, 12), float64] */;
  %1235 = %1232.1;
  %1236 = @func_3557() /* ty=Tensor[(13, ?, 8), float32] */;
  (%1233, %1234, %1235, meta[relay.Constant][45] /* ty=Tensor[(660), int16] */, meta[relay.Constant][46] /* ty=Tensor[(234), float64] */, %1236)
}

def @func_9093() -> (Tensor[(13, ?, 8), float32], Tensor[(6, 364), float32]) {
  @func_9091() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(6, 364), float32]) */
}

def @func_3932() -> (Tensor[(13, 10, 8), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) {
  %1237 = @func_3877() /* ty=(Tensor[(13, 10, 8), float64], Tensor[(11, 2, 6), float64], Tensor[(132), float64]) */;
  %1238 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1239 = cast(meta[relay.Constant][47] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1240 = reshape(%1239, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %1241 = @func_632(%1240) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32]) */;
  %1242 = @func_3046() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1243 = %1237.0;
  %1244 = %1238.0;
  %1245 = %1241.0;
  %1246 = %1242.0;
  (%1243, %1244, %1245, meta[relay.Constant][47] /* ty=Tensor[(40), float32] */, %1246)
}

def @func_258() -> Tensor[(13, 14, 12), float64] {
  %1247 = cast(meta[relay.Constant][48] /* ty=Tensor[(13, 14, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  sinh(%1247) /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_5167(%var_5165: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(390, 2), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64]) {
  @func_5164(%var_5165) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(390, 2), float32], float32, Tensor[(780), float32], Tensor[(13, 14, 12), float64]) */
}

def @func_9053() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_9051() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_1815(%var_1814: Tensor[(1, 40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), bool], Tensor[(6, 40), float32]) {
  %1259 = fn (%var_1793: Tensor[(1, 40), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), bool], Tensor[(6, 40), float32]) {
    %1248 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %1249 = cast(%var_1793, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
    %1250 = reshape(%1249, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %1251 = @func_632(%1250) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(40), float32]) */;
    %1252 = cast(%var_1793, dtype="bool") /* ty=Tensor[(1, 40), bool] */;
    %1253 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 40), float32] */, dtype="bool") /* ty=Tensor[(6, 40), bool] */;
    %1254 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 40), float32] */, dtype="float32") /* ty=Tensor[(6, 40), float32] */;
    %1255 = %1248.0;
    %1256 = %1251.0;
    %1257 = greater(%1252, %1253) /* ty=Tensor[(6, 40), bool] */;
    %1258 = acosh(%1254) /* ty=Tensor[(6, 40), float32] */;
    (%1255, %1256, %1257, %1258)
  };
  %1259(%var_1814) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 40), bool], Tensor[(6, 40), float32]) */
}

def @func_8150() -> (Tensor[(13, 14, 12), float64],) {
  %1261 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %1260 = @func_5809() /* ty=Tensor[(13, 14, 12), float64] */;
    (%1260,)
  };
  %1261() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_7334() -> (Tensor[(13, 14, 12), float64],) {
  @func_7332() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_4538() -> Tensor[(13, 14, 12), float64] {
  %1262 = @func_891() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */;
  %1262.0
}

def @func_12354() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1263 = @func_11807() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1264 = @func_707() /* ty=Tensor[(13, 14, 12), float64] */;
  %1265 = %1263.0;
  (%1264, %1265)
}

def @func_3293() -> (Tensor[(13, ?, 8), float32],) {
  @func_3291() /* ty=(Tensor[(13, ?, 8), float32],) */
}

def @func_4133() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 8), bool]) {
  %1275 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 8), bool]) {
    %1266 = @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
    %1267 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %1268 = @func_304() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, ?, 8), float32], Tensor[(26, 4), float64]) */;
    %1269 = %1268.2;
    %1270 = cast(%1269, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
    %1271 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 14, 8), float32] */, dtype="bool") /* ty=Tensor[(13, 14, 8), bool] */;
    %1272 = %1266.1;
    %1273 = %1267.0;
    %1274 = equal(%1270, %1271) /* ty=Tensor[(13, 14, 8), bool] */;
    (%1272, %1273, %1274)
  };
  %1275() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 8), bool]) */
}

def @func_9091() -> (Tensor[(13, ?, 8), float32], Tensor[(6, 364), float32]) {
  %1276 = @func_7559() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %1277 = @func_5952() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 364), float64]) */;
  %1278 = %1277.2;
  %1279 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 364), float64] */, dtype="float32") /* ty=Tensor[(6, 364), float32] */;
  %1280 = shape_of(%1278, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1281 = cast(%1278, dtype="float32") /* ty=Tensor[(6, 364), float32] */;
  %1282 = dyn.reshape(%1279, %1280, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1283 = floor_mod(%1281, %1282) /* ty=Tensor[(6, 364), float32] */;
  %1284 = cast(%1283, dtype="float32") /* ty=Tensor[(6, 364), float32] */;
  %1285 = %1276.1;
  %1286 = exp(%1284) /* ty=Tensor[(6, 364), float32] */;
  (%1285, %1286)
}

def @func_391() -> Tensor[(13, ?, 8), float32] {
  @func_389() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_7405() -> Tensor[(13, 14, 12), float64] {
  @func_7403() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_12460() -> Tensor[(13, 14, 12), float64] {
  @func_12458() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_7757(%var_7755: float32, %var_7756: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32]) {
  %1297 = fn (%var_7746: float32, %var_7747: Tensor[(780), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32]) {
    %1287 = @func_5800() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %1288 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
    %1289 = cast(%var_7746, dtype="float32") /* ty=float32 */;
    %1290 = cast(%var_7747, dtype="float32") /* ty=Tensor[(780), float32] */;
    %1291 = reshape(%1289, newshape=[]) /* ty=float32 */;
    %1292 = reshape(%1290, newshape=[6, 13, 10]) /* ty=Tensor[(6, 13, 10), float32] */;
    %1293 = @func_542(%1291, %1292) /* ty=(Tensor[(6, 13, 10), float32],) */;
    %1294 = %1287.2;
    %1295 = %1288.0;
    %1296 = %1293.0;
    (%1294, %1295, %1296, %var_7746, %var_7747)
  };
  %1297(%var_7755, %var_7756) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(6, 13, 10), float32], float32, Tensor[(780), float32]) */
}

def @func_692(%var_691: Tensor[(16, 7, 9), float32]) -> (Tensor[(16, 7, 9), float32],) {
  %1300 = fn (%var_687: Tensor[(16, 7, 9), float32]) -> (Tensor[(16, 7, 9), float32],) {
    %1298 = cast(%var_687, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
    %1299 = acosh(%1298) /* ty=Tensor[(16, 7, 9), float32] */;
    (%1299,)
  };
  %1300(%var_691) /* ty=(Tensor[(16, 7, 9), float32],) */
}

def @func_3955() -> Tensor[(13, 14, 12), float64] {
  %1301 = @func_2335() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1301.0
}

def @func_8358() -> Tensor[(13, 14, 12), float64] {
  %1302 = fn () -> Tensor[(13, 14, 12), float64] {
    @func_4231() /* ty=Tensor[(13, 14, 12), float64] */
  };
  %1302() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_10068() -> Tensor[(13, 14, 12), float64] {
  %1303 = fn () -> Tensor[(13, 14, 12), float64] {
    @func_6954() /* ty=Tensor[(13, 14, 12), float64] */
  };
  %1303() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_4870(%var_4812: Tensor[(512), int32]) -> (Tensor[(13, 14, 12), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, 14, 12), float64], Tensor[(8, 16, 4), int32], Tensor[(13, 14, 12), float64], Tensor[(512), float64]) {
  %1304 = @func_4303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1305 = @func_2106() /* ty=(Tensor[(104), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(40), float32], Tensor[(13, ?, 8), float32]) */;
  %1306 = cast(meta[relay.Constant][52] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1307 = reshape(%1306, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float64] */;
  %1308 = @func_74(%1307) /* ty=(Tensor[(13, ?, 8), float32],) */;
  %1309 = %1305.3;
  %1310 = cast(%1309, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1311 = reshape(%1310, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %1312 = @func_1333(%1311) /* ty=(Tensor[(40), float32], Tensor[(13, ?, 8), bool]) */;
  %1313 = @func_4303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1314 = cast(%var_4812, dtype="int32") /* ty=Tensor[(512), int32] */;
  %1315 = cast(%var_4812, dtype="int32") /* ty=Tensor[(512), int32] */;
  %1316 = reshape(%1314, newshape=[8, 16, 4]) /* ty=Tensor[(8, 16, 4), int32] */;
  %1317 = reshape(%1315, newshape=[8, 16, 4]) /* ty=Tensor[(8, 16, 4), int32] */;
  %1318 = @func_4386(%1316, %1317) /* ty=(Tensor[(8, 16, 4), int32],) */;
  %1319 = @func_3416() /* ty=(Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64]) */;
  %1320 = cast(%var_4812, dtype="float64") /* ty=Tensor[(512), float64] */;
  %1321 = %1304.0;
  %1322 = %1308.0;
  %1323 = %1312.0;
  %1324 = %1313.0;
  %1325 = %1318.0;
  %1326 = %1319.1;
  %1327 = cosh(%1320) /* ty=Tensor[(512), float64] */;
  (%1321, %1309, %1322, meta[relay.Constant][52] /* ty=Tensor[(104), float64] */, %1323, %1324, %1325, %1326, %1327)
}

def @func_6179() -> (Tensor[(13, 14, 12), float64], Tensor[(104), float64]) {
  %1328 = @func_1107() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(104), float64], Tensor[(13, ?, 8), float32]) */;
  %1329 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
  %1330 = %1328.2;
  (%1329, %1330)
}

def @func_2229() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  @func_2227() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */
}

def @func_3626() -> Tensor[(13, ?, 8), float32] {
  @func_2799() /* ty=Tensor[(13, ?, 8), float32] */
}

def @func_8586() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1331 = @func_5893() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float32]) */;
  %1332 = %1331.0;
  %1333 = @func_1769() /* ty=Tensor[(13, 14, 12), float64] */;
  (%1332, %1333)
}

def @func_11294() -> Tensor[(13, 14, 12), float64] {
  @func_11292() /* ty=Tensor[(13, 14, 12), float64] */
}

def @func_11247() -> (Tensor[(13, 14, 12), float64],) {
  @func_11245() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_9838() -> (Tensor[(13, 14, 12), float64],) {
  %1335 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %1334 = @func_2822() /* ty=Tensor[(13, 14, 12), float64] */;
    (%1334,)
  };
  %1335() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_10895() -> (Tensor[(26, 4), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1336 = @func_891() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(26, 4), float64]) */;
  %1337 = @func_5319() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
  %1338 = %1336.1;
  %1339 = %1337.0;
  %1340 = @func_666() /* ty=Tensor[(13, 14, 12), float64] */;
  (%1338, %1339, %1340)
}

def @func_5393() -> (Tensor[(13, 14, 12), float64], Tensor[(6, 40), float32], Tensor[(10, 4), float32], Tensor[(104), float64], Tensor[(104), float64]) {
  %1350 = fn () -> (Tensor[(13, 14, 12), float64], Tensor[(6, 40), float32], Tensor[(10, 4), float32], Tensor[(104), float64], Tensor[(104), float64]) {
    %1341 = cast(meta[relay.Constant][53] /* ty=Tensor[(10, 4), float32] */, dtype="float32") /* ty=Tensor[(10, 4), float32] */;
    %1342 = reshape(%1341, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %1343 = @func_4483(%1342) /* ty=(Tensor[(13, ?, 8), float32], Tensor[(6, 40), float32], Tensor[(40), float32], Tensor[(13, 14, 12), float64]) */;
    %1344 = cast(meta[relay.Constant][54] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %1345 = reshape(%1344, newshape=[26, 4]) /* ty=Tensor[(26, 4), float64] */;
    %1346 = @func_2362(%1345) /* ty=(Tensor[(26, 4), float64], Tensor[(104), float64]) */;
    %1347 = @func_3593() /* ty=Tensor[(13, 14, 12), float64] */;
    %1348 = %1343.1;
    %1349 = %1346.1;
    (%1347, %1348, meta[relay.Constant][53] /* ty=Tensor[(10, 4), float32] */, %1349, meta[relay.Constant][54] /* ty=Tensor[(104), float64] */)
  };
  %1350() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(6, 40), float32], Tensor[(10, 4), float32], Tensor[(104), float64], Tensor[(104), float64]) */
}

def @func_6424(%var_6402: Tensor[(13, 8, 8), float32]) -> (Tensor[(13, 8, 8), float32], Tensor[(13, ?, 8), float32]) {
  %1351 = @func_389() /* ty=Tensor[(13, ?, 8), float32] */;
  %1352 = cast(%1351, dtype="float32") /* ty=Tensor[(13, ?, 8), float32] */;
  %1353 = cast(%var_6402, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  %1354 = @func_5570() /* ty=(Tensor[(13, ?, 8), float32],) */;
  %1355 = floor_mod(%1352, %1353) /* ty=Tensor[(13, 8, 8), float32] */;
  %1356 = %1354.0;
  (%1355, %1356)
}

def @func_2153() -> (Tensor[(13, 14, 12), float64],) {
  @func_2151() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_11353(%var_11351: Tensor[(13, 11, 8), float32], %var_11352: Tensor[(416), float64]) -> (Tensor[(13, 11, 8), bool], Tensor[(1, 234), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) {
  %1368 = fn (%var_11314: Tensor[(13, 11, 8), float32], %var_11343: Tensor[(416), float64]) -> (Tensor[(13, 11, 8), bool], Tensor[(1, 234), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) {
    %1357 = @func_6142() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32]) */;
    %1358 = %1357.2;
    %1359 = cast(%1358, dtype="bool") /* ty=Tensor[(13, ?, 8), bool] */;
    %1360 = cast(%var_11314, dtype="bool") /* ty=Tensor[(13, 11, 8), bool] */;
    %1361 = @func_4043() /* ty=(Tensor[(13, 6, 8), uint32], Tensor[(56), uint32], Tensor[(13, 14, 12), float64], Tensor[(13, 9, 2), bool], Tensor[(660), int16], Tensor[(1, 234), float64], Tensor[(8, 7, 1), bool]) */;
    %1362 = cast(%var_11343, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1363 = reshape(%1362, newshape=[8, 4, 13]) /* ty=Tensor[(8, 4, 13), float64] */;
    %1364 = @func_5835(%1363) /* ty=(Tensor[(8, 4, 13), float64],) */;
    %1365 = greater(%1359, %1360) /* ty=Tensor[(13, 11, 8), bool] */;
    %1366 = %1361.5;
    %1367 = %1364.0;
    (%1365, %1366, %1367, %var_11343)
  };
  %1368(%var_11351, %var_11352) /* ty=(Tensor[(13, 11, 8), bool], Tensor[(1, 234), float64], Tensor[(8, 4, 13), float64], Tensor[(416), float64]) */
}

def @func_2562(%var_2560: Tensor[(12, 10, 14), float64]) -> (Tensor[(12, 10, 14), float64],) {
  @func_2559(%var_2560) /* ty=(Tensor[(12, 10, 14), float64],) */
}

def @func_9031() -> Tensor[(104), float64] {
  @func_4323() /* ty=Tensor[(104), float64] */
}

def @func_9943() -> (Tensor[(13, 14, 12), float64],) {
  %1371 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %1369 = @func_9051() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
    %1370 = %1369.1;
    (%1370,)
  };
  %1371() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_4231() -> Tensor[(13, 14, 12), float64] {
  %1372 = @func_971() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) */;
  %1372.0
}

def @func_9051() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64]) {
  %1373 = @func_1927() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1374 = @func_5303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1375 = %1373.0;
  %1376 = %1374.0;
  (%1375, %1376)
}

def @func_1456(%var_1454: Tensor[(13, 9, 2), float64], %var_1455: Tensor[(13, 9, 2), float64]) -> (Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float32]) {
  @func_1452(%var_1454, %var_1455) /* ty=(Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float64], Tensor[(13, 9, 2), float32]) */
}

def @func_9798() -> (Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(728), float32], Tensor[(13, ?, 8), float32]) {
  @func_9796() /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), float32], Tensor[(13, 14, 12), float64], Tensor[(13, ?, 8), bool], Tensor[(728), float32], Tensor[(13, ?, 8), float32]) */
}

def @func_11807() -> (Tensor[(13, 14, 12), float64],) {
  %1377 = @func_5303() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %1378 = %1377.0;
  (%1378,)
}

def @func_6028(%var_6026: Tensor[(104), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(13, 10, 8), float32], Tensor[(104), float64], Tensor[(104), float64]) {
  @func_6025(%var_6026) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(13, 10, 8), float32], Tensor[(104), float64], Tensor[(104), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen776/build/output.py:4414: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen776/build/output.py", line 4419, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(176) tvmgen_default_fused_sigmoid_kernel0(double* __restrict__ T_sigmoid, double* __restrict__ placeholder) {
  T_sigmoid[(((int)threadIdx.x))] = (1.000000e+00 / (1.000000e+00 + exp((0.000000e+00 - placeholder[(((int)threadIdx.x))]))));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


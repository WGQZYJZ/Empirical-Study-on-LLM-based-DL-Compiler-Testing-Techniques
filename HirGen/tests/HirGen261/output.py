import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_336 = relay.var("var_336", dtype = "float32", shape = (10, 16, 1))#candidate|336|(10, 16, 1)|var|float32
uop_337 = relay.sigmoid(var_336.astype('float32')) # shape=(10, 16, 1)
const_360 = relay.const([[[2.951271,4.054750,-5.922216,-8.511082,9.862818],[9.340946,5.201554,-2.792928,1.384874,-9.449929],[-3.344499,-7.711696,-5.159928,8.520486,-0.571011],[3.323092,3.135112,5.952963,-9.748522,-5.894495],[-9.706109,-7.201165,1.271666,-0.413122,9.438756],[0.193168,6.286445,2.811974,-6.484072,-2.075647],[0.412880,-3.530503,-8.526415,3.491872,7.747841],[5.527114,1.553326,-6.543237,-9.381434,5.010330],[2.372559,8.031504,-7.240302,2.345494,0.125645],[-4.396220,9.210852,5.241429,-2.700906,8.806791],[1.688074,5.242456,-5.926885,6.100459,3.444582],[1.659823,8.225029,8.689494,8.494180,-6.405467],[-0.531047,4.904836,0.668833,-5.314393,4.148734],[-0.946568,-6.182671,8.130222,8.832350,5.966758],[-3.241796,5.499611,6.138303,3.408792,6.130456],[2.987231,-5.999599,-0.029421,-4.539453,2.180587]],[[-3.629668,-2.904294,-1.870014,8.644250,-0.916349],[-6.853369,8.392699,-5.870769,-0.022161,7.155878],[-5.197525,-6.054892,-3.762309,-9.865290,2.026702],[-2.890143,8.478049,-6.658707,1.285109,7.611913],[-6.195660,-5.150493,-4.808496,-0.392957,-2.520624],[-6.926927,-8.753418,-5.033198,8.705665,9.134416],[-8.543271,-2.083561,-7.277408,0.947853,3.492483],[8.933488,-1.514113,2.065171,5.628719,-5.145613],[-0.057705,-7.231127,4.852465,7.699616,4.044555],[9.815635,-4.376477,-9.867382,-7.160493,-3.631680],[-0.260707,3.945281,9.324849,3.808839,-2.327568],[7.807968,1.216425,0.750571,-7.604114,0.864128],[-9.570466,6.512181,3.035021,6.186251,-4.377029],[3.075603,-0.078610,9.271976,5.212893,-5.843228],[-2.372840,-2.387280,0.263317,-9.980425,-0.165550],[1.786937,-0.031927,-2.849694,-7.806908,2.919536]],[[8.833669,-7.575625,4.637794,-9.007292,-4.781416],[-5.340215,-8.641919,-2.712003,0.500722,2.185081],[5.863686,-0.194193,8.195010,4.732588,-2.415161],[-0.516349,5.031361,8.211600,4.054066,1.818198],[-1.230714,-4.758288,3.671666,-3.339089,-2.736245],[-3.784852,7.249797,4.606028,6.866771,-9.620570],[-9.552084,-3.811653,1.197659,-0.981752,2.163271],[1.125959,-9.852519,-3.784458,-1.566790,-7.300648],[-9.287630,-4.382227,8.606836,-7.913919,-4.313841],[-0.346801,-8.393451,-7.374813,1.428358,-5.393468],[6.522531,-4.284837,6.460733,3.704074,-8.200761],[-1.864443,-2.123710,-4.658273,6.060673,5.737883],[3.046707,-5.571373,-4.303803,-1.871712,0.176786],[-7.315512,-2.338520,-6.028173,9.174819,0.930160],[7.915875,-5.585364,6.015524,0.973347,7.216092],[-8.779674,2.857071,-6.127045,-1.431507,0.622511]],[[6.376448,-8.375167,-4.074679,-3.589722,-9.886647],[4.685691,8.113766,4.715751,-8.187321,7.475146],[4.876406,2.203627,-8.532514,-7.270394,-3.398446],[3.135524,0.776753,0.342584,-4.529262,3.913759],[9.169851,7.542057,-1.427363,2.562085,0.070766],[7.025002,3.098746,1.925419,-7.761944,-6.627371],[3.494420,5.252770,8.184281,2.518696,-0.774974],[-2.450548,8.244811,-9.486797,-0.551435,5.390263],[0.717263,0.217580,7.945370,-5.835193,-2.681847],[-0.235566,-0.971758,8.805937,-2.605297,-5.949027],[4.900841,-2.340840,-9.287788,6.247484,1.869419],[-4.257486,3.980169,5.060831,3.372471,-4.758528],[-1.599840,0.336582,-4.566743,-6.081972,0.810099],[5.673078,4.415347,-9.487225,8.913322,-5.127177],[-0.915992,1.452765,-2.121827,-1.733451,-7.188693],[-6.448711,9.069429,-7.037337,-4.213135,-5.803689]],[[7.497601,-5.444033,5.579329,-7.332808,-7.085970],[3.162674,2.680207,-2.782053,5.232556,9.312859],[-0.182546,-7.259719,-7.860886,3.490908,1.939807],[-9.653943,-2.283217,0.445143,9.273180,-8.961744],[6.363158,-5.766509,-9.546873,-6.937981,9.790611],[0.587656,7.019745,1.691739,-0.544303,-8.262646],[-7.118947,-4.386458,-7.169018,3.611436,8.124768],[9.344934,4.771005,-7.530727,3.963500,-4.909544],[-2.434493,-2.850671,3.083890,0.646715,-4.098761],[-1.787221,2.225187,4.203268,-7.263527,8.703278],[-6.505700,-1.905623,9.543647,6.978993,-7.260356],[8.278780,-9.758580,-7.994213,-0.840826,4.901055],[-9.237749,3.984557,0.150347,8.145113,2.902157],[8.078748,3.475607,-9.725320,-4.737003,1.035370],[9.894825,-6.369967,-8.167723,4.979014,-8.699990],[-1.873683,-0.018709,-4.275223,-0.390454,-6.341468]],[[5.150994,-8.780337,0.708479,0.372880,-5.771967],[-2.817547,1.038646,9.656435,-8.836850,-0.059376],[-9.328335,8.166708,0.940052,-3.752827,6.636661],[1.408309,-0.366268,2.919040,-8.960616,-7.203907],[-2.860536,-6.883032,2.043683,3.426485,8.630417],[-3.450732,-3.070930,-6.760399,-8.695370,-2.478063],[0.947363,-0.005371,6.406979,-1.100740,-0.390488],[-9.937124,5.086741,-8.365903,1.468795,-3.311643],[-1.853067,-6.162364,-8.154870,-2.592505,3.851488],[-4.236110,-5.530819,-8.290118,0.025717,-0.321534],[1.481478,-3.738823,7.976361,5.297412,-0.724140],[8.077082,8.236722,-5.698105,0.945095,-2.217451],[7.155467,1.000247,6.557003,2.215062,-0.620045],[-6.040236,-7.322852,3.709586,2.744993,-9.466830],[-9.657039,-0.665702,1.087458,-6.507989,1.502762],[4.396151,4.477434,3.659861,9.054189,2.457242]],[[-7.469569,9.827442,-7.692208,-5.250066,-3.680421],[-5.080543,6.703912,-9.641177,8.888743,3.924257],[2.702581,1.942993,1.980809,9.673647,0.597914],[8.314546,-1.771194,-9.105971,3.153878,-2.155038],[-3.633112,-7.420553,-2.694453,-8.124495,7.445018],[-8.940589,9.207832,-2.893145,-3.022368,4.891594],[-6.673033,3.166103,1.050924,-2.668794,3.212995],[-6.814742,8.784492,6.760395,0.133139,6.047210],[4.492459,8.061039,2.761419,4.692024,7.175596],[7.652055,5.944767,-2.880543,-7.027961,3.014411],[-0.366427,1.459990,6.460639,0.332197,4.197863],[8.012148,-1.427286,9.298128,-2.194629,-0.812991],[6.250947,-6.614258,-9.565858,3.014577,8.725569],[-2.955492,2.160309,9.013409,-0.627772,8.457294],[3.930144,-2.240051,-5.440963,3.566739,3.139535],[-1.495880,6.123314,3.655903,-7.243884,-9.004281]],[[-1.573785,7.186151,5.840099,-5.732507,5.452174],[1.672816,-1.653793,-1.876824,5.304661,-4.121637],[6.064401,3.043230,1.807641,3.232336,9.109812],[4.469068,-9.114133,1.024721,6.225288,-9.681920],[-7.076132,3.282697,2.775675,8.787501,9.524644],[4.182696,-5.251703,3.505872,-2.797027,5.722199],[-1.839543,3.951322,6.140573,-5.989371,-7.207078],[4.559591,-7.859973,8.329583,1.055652,-9.984333],[-2.165350,3.026712,-2.300963,-1.527316,3.955371],[3.019358,-6.407623,8.560347,8.015709,-4.533212],[-7.836305,-6.822151,-7.966436,-7.987913,-4.657908],[-4.308813,0.060867,-3.132231,-8.726320,-5.817264],[-0.243771,-6.750848,-1.901961,7.681103,0.134554],[3.969191,1.816389,0.388393,2.054151,3.567105],[-2.198642,9.675295,-5.084774,-4.970568,-2.359714],[-4.619485,-1.585275,-5.427166,-4.870263,-1.991384]],[[7.056784,9.110535,-3.592664,0.853147,9.575960],[9.857598,-3.496003,8.263895,-1.633339,-3.436928],[-6.444945,-0.210478,1.158162,2.150988,-7.624075],[8.468544,3.457649,-5.897424,8.518972,2.552754],[9.160270,8.720772,7.299976,-0.639615,-3.795238],[1.248140,1.738510,2.383273,-5.123634,1.295323],[-2.002266,-7.905354,6.293529,8.389795,-1.678016],[9.838233,-6.116336,-1.909348,5.026909,0.944663],[7.333479,-6.780612,-3.146825,2.100688,-1.509312],[3.736131,2.241750,-7.091593,0.341451,-8.824041],[3.469371,9.637684,-9.662368,7.647350,-9.676166],[4.931815,7.522200,-7.058692,4.526478,-4.956412],[-4.407581,-4.518249,-4.500766,2.072445,8.573618],[6.386092,7.973712,-4.641192,-5.925066,-8.602198],[-8.763248,-7.346732,2.909310,-1.745649,-6.820933],[4.455148,-3.606149,1.954529,-0.133474,-7.306225]],[[-6.157925,-8.083027,-7.925203,6.866080,1.571021],[7.841674,1.302069,8.773844,0.368515,5.245962],[3.848894,-4.434238,-1.926874,-2.154309,-2.343410],[-1.210511,-2.835222,4.539524,9.778974,-9.014037],[-8.843954,9.744539,7.244279,-3.875967,-4.954360],[6.334649,-8.754103,9.602727,8.050657,-4.774339],[7.605264,-9.432229,7.681055,-2.104975,-2.072278],[6.522672,6.490139,-0.169447,-2.137565,2.074115],[-3.828739,-2.452076,-8.502144,2.253315,9.137453],[-1.697018,0.803092,-3.737345,-0.985455,8.955295],[0.691212,3.600791,8.884166,-2.401294,-9.051324],[-3.710673,-9.466992,-9.172698,3.856868,-4.664674],[3.385244,2.666903,5.308131,1.057848,-8.398596],[-4.192212,-4.750736,-8.390860,1.401158,1.741648],[-8.848373,-6.728422,-0.429086,-7.030229,-9.209851],[-8.029390,5.530510,-8.957225,9.880271,-8.050909]]], dtype = "float32")#candidate|360|(10, 16, 5)|const|float32
bop_361 = relay.bitwise_and(var_336.astype('int32'), const_360.astype('int32')) # shape=(10, 16, 5)
output = relay.Tuple([uop_337,bop_361,])
output2 = relay.Tuple([uop_337,bop_361,])
func_375 = relay.Function([var_336,], output)
mod['func_375'] = func_375
mod = relay.transform.InferType()(mod)
var_376 = relay.var("var_376", dtype = "float32", shape = (10, 16, 1))#candidate|376|(10, 16, 1)|var|float32
output = func_375(var_376)
func_377 = relay.Function([var_376], output)
mutated_mod['func_377'] = func_377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_501 = relay.var("var_501", dtype = "int16", shape = ())#candidate|501|()|var|int16
const_502 = relay.const([[[7,-9,5,-2,10,-3,7,6,-3,3,6,-8,3,-9,-8,-10],[-8,3,5,-4,1,-7,-5,2,-8,5,-8,2,-4,-2,-5,-7],[-1,6,-8,-3,10,-9,-7,-10,-7,8,7,-7,-10,-3,-3,-7],[3,-4,-6,9,-9,8,1,-10,4,-4,-7,-1,-9,-3,5,9],[-3,-8,-10,-4,7,-4,1,-7,-1,7,-1,6,-3,4,-8,7],[-6,2,-1,-6,8,7,3,4,4,-3,-2,-4,-7,-4,-3,-8],[-5,6,5,-2,-1,2,-2,5,2,10,-6,-8,5,10,2,-7],[-6,-2,-7,6,5,10,-8,3,5,-1,-10,-6,10,2,-3,8],[-6,-2,7,8,10,1,-5,6,-10,2,8,4,3,-10,7,-8],[10,-5,-10,9,3,7,-6,7,-2,5,-9,7,-7,8,5,-8],[-8,2,-5,7,10,-5,9,-2,3,10,-8,-3,2,-10,7,-1],[-10,4,-3,3,-5,2,2,-4,1,8,10,4,-3,10,4,-7],[-4,2,-2,-1,-5,2,6,4,-1,-7,-2,-5,-7,6,-6,-8],[4,6,-4,2,1,-9,-1,4,-5,-2,-4,-1,2,4,10,6]],[[3,9,-2,-9,6,-10,8,6,-5,-10,5,-1,1,-5,-1,-7],[7,-2,-9,-2,6,2,3,9,8,10,5,10,-9,8,-8,-4],[3,3,-6,8,4,10,-10,9,10,-1,1,10,-8,1,3,10],[1,7,6,-1,-5,-10,-10,3,8,-5,-5,8,1,-1,5,10],[5,-5,-3,5,-7,-3,4,7,9,-1,-6,10,-8,-4,4,-9],[5,2,-2,8,-2,6,-6,-9,6,-9,-9,-10,2,10,-1,-5],[-4,-4,3,-6,2,2,7,-3,1,5,-3,-7,-10,2,-5,-8],[5,-3,-4,5,1,2,-1,10,8,-4,-10,-7,5,2,6,8],[1,-2,-2,-9,-4,-10,-7,-9,-4,6,-3,4,10,-9,-7,-10],[10,-1,8,-5,2,-9,8,4,10,-7,2,-10,-9,-1,-8,3],[2,10,8,2,5,-1,-9,4,-6,4,-2,10,-5,-8,-1,-1],[-8,5,-10,-8,-8,7,-5,-1,-4,6,-9,-9,-9,-9,9,5],[3,-5,-7,-10,-1,4,-10,8,-10,-1,-3,5,-9,-2,4,-8],[-9,4,8,-1,-10,7,-10,5,-9,8,9,4,8,8,5,-1]],[[-1,-8,-8,7,4,10,-9,3,-3,10,4,2,9,-4,-8,-7],[-9,-9,6,6,2,-5,1,8,8,-6,1,-2,7,-5,10,-5],[10,7,2,7,7,4,9,4,2,-8,9,5,6,1,3,5],[10,1,-3,-7,-8,2,4,5,-7,1,2,10,-6,-4,-8,4],[10,3,4,8,8,-9,6,-10,-6,-7,-7,-6,1,-3,8,-1],[5,-6,2,10,3,-4,-3,2,-5,8,9,4,2,10,-9,10],[5,-2,9,-6,-3,-3,-7,8,7,4,7,-7,7,1,-8,-1],[-9,9,7,2,8,-10,10,4,3,-3,-8,-3,8,3,7,9],[7,3,3,-7,1,-3,7,-10,7,-3,4,2,-2,-7,8,-4],[-6,-2,2,-10,-9,6,2,6,-9,-6,7,-6,2,-5,-1,-7],[5,6,9,2,8,-3,4,-2,8,-6,6,3,5,-2,6,5],[-9,1,-6,-7,9,-5,-7,5,-4,2,5,10,3,8,1,3],[4,-1,4,-5,8,-7,-6,2,-5,10,8,-2,3,-10,-5,6],[4,-10,-5,-5,-6,8,5,9,-4,2,10,3,-3,-8,6,8]],[[3,-2,6,1,-10,-1,1,-6,1,-9,1,-6,6,5,-10,-4],[4,3,-3,-9,7,7,1,5,3,-5,-7,-3,7,-7,-2,1],[-8,5,1,4,5,6,-7,8,-4,-6,-5,5,6,8,4,-5],[6,-6,3,4,1,4,2,8,8,-8,5,-5,-7,1,4,6],[6,-8,-1,-9,-4,-10,6,2,-4,-6,-4,-1,4,4,10,10],[3,-6,-10,-7,-1,-1,-7,-10,-3,-1,9,-10,6,3,-4,-3],[-10,-1,8,-7,5,6,10,2,-4,10,6,6,-4,9,1,6],[3,-6,-5,7,-10,1,-9,-3,7,6,-3,-7,-3,-4,-8,-8],[8,-9,-6,5,9,5,-3,3,-2,-5,-3,-10,1,-3,-4,10],[-6,9,5,-7,1,4,-2,6,-8,-1,-7,9,6,-5,-4,6],[-3,-1,8,5,-4,5,-6,2,-6,-4,3,-9,7,1,8,-1],[-2,-1,2,2,-3,-2,10,10,6,-10,-7,-9,-4,6,-10,5],[9,10,10,-5,-9,-1,-10,8,6,6,9,-10,8,7,2,9],[7,-3,3,1,7,-4,4,-5,-10,-4,8,1,9,-5,-1,-4]],[[-6,-7,-9,3,-4,-4,-9,-9,-2,7,8,-8,-8,-9,9,-9],[-10,-4,-7,-4,-1,9,9,-8,-10,1,-5,-4,1,-3,-7,-5],[-1,8,5,-8,2,6,-5,2,-1,5,1,-2,5,3,10,-10],[7,8,2,8,-5,-7,1,8,-2,2,6,-6,-9,-4,-8,-9],[-6,9,-3,4,-3,8,10,-10,3,-6,3,-2,2,3,-4,-9],[7,8,6,8,1,-5,-4,-3,-6,3,-10,6,-3,-6,-9,-5],[4,6,5,9,-2,7,1,10,-9,-1,-10,-3,-3,-9,-5,-1],[-10,-8,3,-3,4,-10,1,6,-4,1,1,-8,4,-9,4,7],[-6,-10,-2,3,-4,3,-2,-5,4,-10,-9,-1,6,1,7,5],[-3,-4,2,1,10,-9,-4,9,-2,5,5,-4,4,-2,-3,6],[-6,1,8,1,-7,-2,-7,-1,10,-10,-9,-8,2,-6,7,-1],[2,10,-5,10,1,2,-1,-9,-8,7,-3,-2,5,10,-4,4],[4,-6,4,10,7,5,7,-10,3,2,-2,-1,-4,8,5,-4],[7,7,-7,9,10,-2,10,-10,9,10,-6,-6,-3,8,6,6]],[[-3,5,1,4,9,-8,9,-3,10,10,4,8,-10,-7,10,10],[-8,5,-10,-1,-8,8,-7,-6,4,-2,-1,8,-9,-8,8,-4],[2,6,-2,-10,5,8,1,-8,-9,3,-3,1,-6,10,-4,2],[8,9,6,10,1,3,3,5,2,-4,-1,-4,4,2,-10,8],[-6,-8,8,4,-8,-9,8,3,-6,-4,3,-3,-4,5,-1,4],[9,8,9,-7,10,-8,-4,10,-9,4,-4,9,1,-4,8,-8],[1,6,-9,-9,-1,-9,9,2,2,9,2,-6,5,-3,-9,2],[8,-1,1,6,-6,-6,4,2,3,-4,1,-7,-9,9,-3,9],[9,8,8,1,-1,-9,-4,-1,-2,5,4,-2,-4,2,-2,-9],[-8,10,-3,2,-9,-8,-1,1,3,-9,-7,9,-1,-1,9,3],[-6,-7,-5,2,-1,-8,-9,-8,-4,7,-7,5,7,-3,5,-8],[-3,2,6,-2,4,9,-9,-6,-3,6,-9,-2,-8,-7,-2,-6],[9,-3,-1,10,-4,-9,-8,-8,7,-3,-7,-5,9,-10,6,-6],[-1,10,3,-7,10,10,10,9,1,4,-6,-7,-2,7,-2,-2]],[[9,6,1,9,-1,7,6,-9,-7,-7,5,-9,-2,6,9,-6],[10,-2,-7,-4,9,-10,-9,-2,-3,1,-4,4,9,9,-9,-8],[-8,2,1,-4,7,-5,-2,-3,7,-4,6,-8,-9,3,-3,7],[-1,-7,-6,3,4,10,-7,2,8,-9,-3,1,6,-9,5,8],[-6,-10,-5,-6,3,4,10,7,9,6,3,-5,-1,7,10,-4],[2,9,-7,6,-2,3,6,1,4,-9,-5,7,9,-2,1,7],[7,1,-10,7,5,3,-8,9,4,-10,-2,-4,2,2,-9,-5],[5,-2,2,7,7,-9,4,6,5,6,-4,-2,4,10,-3,10],[10,2,-1,-9,9,-5,7,-1,-9,4,9,10,10,-7,-4,2],[10,5,-3,2,-6,6,-8,8,6,-1,-7,-8,-8,9,-3,3],[7,7,-6,-3,-7,4,6,3,5,4,-2,9,9,-9,1,8],[-3,9,5,10,8,7,9,5,3,-5,4,-4,-4,-5,-8,2],[-7,1,-2,6,-6,-4,-5,8,-10,3,-5,-9,4,3,-7,3],[7,-8,4,8,8,-4,3,-9,3,9,2,8,-1,8,-7,4]],[[3,-10,7,-7,-2,-8,-3,9,10,5,-5,-8,3,6,4,-3],[-5,6,-2,9,-5,10,3,-7,9,-4,6,-3,-7,8,-1,2],[3,10,-2,1,5,7,-1,8,8,-4,-6,-5,6,-6,-4,4],[4,-5,2,-6,-7,4,9,8,6,4,-9,-4,-2,-3,-9,-8],[-1,-1,-8,10,10,-3,-6,8,3,3,-1,-6,-9,3,-5,3],[1,9,-9,-7,4,9,5,3,1,9,-5,7,7,4,-1,8],[-8,-3,7,-7,-4,-1,6,-6,-10,-1,3,10,7,9,-8,-10],[-5,5,-7,-3,1,-7,-7,-5,7,3,3,-7,7,8,5,4],[-5,2,-1,10,-8,-2,9,4,-1,-7,10,5,-1,3,-5,4],[5,-1,-10,10,-9,2,10,-7,3,-5,7,10,-5,2,9,-9],[3,-1,-2,-10,5,-2,-8,-4,-2,-5,9,4,8,3,3,2],[-1,-8,3,-5,-10,3,-5,-10,-8,-5,-10,-10,-7,6,6,-8],[10,-1,4,3,-4,-3,-5,-7,9,1,-10,-10,5,-9,-3,-7],[4,7,-5,-1,9,1,6,9,9,5,-1,8,-10,-5,7,7]],[[2,-9,-6,-10,-6,-9,1,10,-7,1,1,-2,-10,5,10,7],[5,3,-8,-4,-3,9,-2,4,-3,5,-6,-4,-5,4,-8,-1],[8,-4,-4,3,5,3,-8,-7,4,4,1,6,4,3,-10,-4],[-8,-7,9,2,-1,-1,2,9,-10,-5,8,6,3,3,-6,4],[-7,4,2,-2,-1,-1,9,-8,-2,9,-6,3,4,3,-4,4],[9,-9,-6,-1,4,-9,-1,-1,1,4,-4,-7,4,8,8,-9],[-10,5,1,-2,-7,7,9,2,7,7,4,10,5,-3,-10,9],[5,7,-1,1,1,9,-4,-7,-8,2,8,7,-10,8,7,3],[3,-9,8,-6,6,8,-6,-10,-9,6,4,5,-6,-3,2,8],[-5,-4,5,-3,-3,10,6,-4,4,-4,-3,-10,4,3,-1,-1],[-8,-9,-5,3,-3,-7,-6,-6,9,9,-1,-1,4,8,7,-2],[-6,-5,5,-9,2,1,-5,8,-7,5,6,2,2,-7,-3,3],[2,-2,-7,-9,-7,6,-7,7,9,-3,-2,7,7,4,-3,-9],[6,-3,-2,-1,-3,10,-9,-4,-3,-5,4,-8,6,-8,8,5]],[[1,-6,-10,-2,5,-3,-3,5,5,-8,2,9,9,-6,-9,2],[8,-2,6,-3,8,-5,6,4,10,2,9,1,-1,4,7,-7],[-5,-5,-5,-1,-6,-3,-6,6,10,-1,9,8,8,-9,9,2],[-7,2,-7,4,-1,10,3,-5,-3,-3,-8,-2,2,-3,-9,2],[4,-7,-10,8,7,9,3,-4,-2,-9,-7,-9,4,9,-9,-9],[-8,-7,1,-10,-3,-10,-2,-1,3,-7,2,-9,-9,2,-3,4],[1,-2,7,1,-8,4,-7,-6,-8,-1,8,9,-10,7,5,-9],[-1,9,2,7,10,1,8,-6,-8,-7,8,-6,-8,-4,-2,-9],[3,-2,7,6,-1,-7,-2,-5,1,-9,-7,-7,-7,10,-5,6],[-9,4,6,-7,5,-5,-6,-1,2,6,-6,6,6,-5,-7,9],[-7,-1,-3,1,-2,-6,9,-7,-9,2,-10,9,6,-6,-2,8],[10,-6,8,10,6,-10,5,-9,4,10,-2,9,2,3,-2,7],[10,2,1,-10,8,-5,9,7,-5,-5,-7,-5,10,5,8,-2],[3,8,8,2,-10,-10,9,2,6,1,2,2,-5,-5,-7,1]],[[3,-4,9,-6,3,8,3,7,7,-5,-5,2,4,-5,4,-10],[7,-7,-2,-3,-9,8,-1,3,3,9,-5,-10,-10,-9,-8,3],[-7,-2,-1,5,-6,-4,-9,4,-5,10,6,10,-4,10,9,9],[-4,-6,-6,5,-5,-10,5,6,9,-1,-7,-8,-1,-3,4,8],[-1,-2,-5,-8,7,-5,-3,2,7,4,-6,5,5,-10,9,4],[2,6,5,10,-3,-2,-5,6,-2,8,-5,5,-10,-8,5,-9],[-9,6,3,4,10,2,-4,7,-3,2,-7,-7,-4,-6,-8,-7],[1,9,-9,10,10,-3,2,-10,5,2,-1,-1,-5,-5,1,8],[-3,-4,3,-2,-5,9,4,-2,-1,3,3,-6,-10,-1,-3,4],[9,10,3,-7,6,-6,3,-3,4,8,-9,-8,-7,1,2,-8],[3,-3,2,5,-5,-10,2,-5,-9,-4,7,-1,-2,6,8,-5],[2,9,9,1,8,-4,-7,7,-2,-6,2,5,10,10,-5,-10],[4,-10,5,8,-7,4,-1,-9,1,-4,-1,-10,10,8,4,2],[-9,-4,-8,-8,7,6,-4,-3,-10,-9,-7,1,-9,-5,-9,3]],[[-1,-10,1,3,-3,-6,-6,1,7,5,9,3,7,10,-5,1],[2,-7,3,-9,-1,-3,-5,10,-6,-5,-3,4,-4,-5,9,-7],[9,-4,-3,1,1,10,-8,-5,5,1,8,-9,2,-3,10,-4],[3,-5,2,-2,-10,8,-3,4,4,-8,-3,-7,1,-7,-8,-3],[-8,9,4,4,2,-4,4,-4,5,1,1,4,7,-4,-10,-8],[-5,10,-8,3,-6,-6,-5,1,4,-10,9,8,5,3,-9,6],[7,3,-2,-7,5,1,6,2,1,5,-5,-7,5,8,10,7],[-1,5,1,2,-5,-6,4,-1,9,6,-10,-4,5,-8,5,-6],[-10,-2,3,4,8,9,7,6,7,-2,6,-2,10,-8,9,-3],[-5,7,8,5,3,-7,-5,8,4,-1,-8,3,-6,2,7,2],[8,-1,5,4,2,-10,-2,-1,10,9,8,5,7,7,1,-7],[3,9,5,-5,3,-4,-4,3,10,4,-6,-9,-4,-6,-10,-8],[-2,-10,-8,-4,8,6,-6,10,1,-1,10,-7,-8,1,-9,-10],[6,7,-5,-5,-10,7,-9,1,10,6,-4,6,9,2,8,8]],[[4,-8,-8,-1,5,4,4,6,7,-4,7,3,-9,4,8,1],[-7,10,3,4,9,4,5,-7,-3,3,3,6,2,-9,-1,-2],[-9,-4,4,-4,7,-6,9,-5,8,-4,8,3,1,-2,-2,3],[-9,-6,4,-5,8,-5,7,-1,2,6,-9,-1,10,-3,10,-6],[2,9,3,-10,5,10,-7,-7,-10,6,9,-10,-1,-3,-10,7],[10,9,-1,-4,4,10,-7,-10,-7,4,4,-7,8,5,9,-9],[1,10,-9,-10,-10,-4,-7,-4,3,-2,-4,3,1,8,-3,6],[-5,5,3,-6,-6,-2,7,9,5,-8,-2,-1,-8,-2,-7,4],[-7,7,6,4,6,-7,1,-4,7,5,2,2,-6,2,3,5],[-6,-1,-6,4,-1,6,9,6,3,-5,7,6,4,-5,5,-6],[-4,3,1,1,-10,-2,8,-7,1,-7,-1,-2,-2,-1,-8,-10],[-5,-2,2,-8,2,-3,2,-3,-2,-9,-3,8,-7,4,10,-8],[7,-1,3,3,-3,-6,-4,8,-9,-1,-8,-8,9,-2,8,-4],[-2,-3,-8,2,3,-6,9,5,1,-10,4,-5,2,4,9,-4]],[[-4,-10,5,4,10,-7,4,-6,-9,-5,4,7,-9,-5,-8,-1],[-8,-3,-1,-3,6,1,-3,8,-3,4,-5,3,-2,10,9,-10],[-2,-2,-9,5,6,-9,5,8,2,-5,-4,9,-9,6,2,-7],[-9,7,-7,-7,-10,-9,-6,3,2,3,6,-2,2,-5,5,1],[4,-4,-2,-1,9,-9,10,1,2,7,-5,-5,8,3,1,-7],[-2,5,4,-10,7,-8,-3,-8,-2,-5,6,7,-7,7,-4,2],[-9,-2,2,-8,3,-5,-6,3,7,-6,-5,9,3,9,-2,5],[-9,-6,9,9,1,-10,6,4,9,-8,-5,6,3,-7,-10,8],[-9,2,10,2,7,8,-3,-1,-4,-9,-6,-9,4,-7,6,4],[2,3,-9,-3,7,2,-6,4,-9,-1,8,7,-5,6,10,9],[8,-5,-9,3,-10,5,5,-7,10,3,-9,-2,5,-8,-10,8],[-10,-6,1,-4,4,8,9,-6,-5,-1,-9,9,-10,10,5,-9],[1,6,5,-5,-3,8,10,3,5,8,-4,10,5,6,-10,-6],[8,-4,-6,-2,4,1,6,-7,-9,-8,3,8,10,9,7,-2]]], dtype = "int16")#candidate|502|(14, 14, 16)|const|int16
bop_503 = relay.bitwise_or(var_501.astype('int16'), const_502.astype('int16')) # shape=(14, 14, 16)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
var_513 = relay.var("var_513", dtype = "float32", shape = (1, 160))#candidate|513|(1, 160)|var|float32
call_512 = relay.TupleGetItem(func_375_call(relay.reshape(var_513.astype('float32'), [10, 16, 1])), 1)
call_514 = relay.TupleGetItem(func_377_call(relay.reshape(var_513.astype('float32'), [10, 16, 1])), 1)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_532 = relay.TupleGetItem(func_375_call(relay.reshape(var_513.astype('float32'), [10, 16, 1])), 0)
call_533 = relay.TupleGetItem(func_377_call(relay.reshape(var_513.astype('float32'), [10, 16, 1])), 0)
var_537 = relay.var("var_537", dtype = "float32", shape = (13, 160))#candidate|537|(13, 160)|var|float32
bop_538 = relay.bitwise_xor(var_513.astype('uint32'), var_537.astype('uint32')) # shape=(13, 160)
uop_547 = relay.sinh(bop_538.astype('float32')) # shape=(13, 160)
output = relay.Tuple([bop_503,call_512,call_532,uop_547,])
output2 = relay.Tuple([bop_503,call_514,call_533,uop_547,])
func_549 = relay.Function([var_501,var_513,var_537,], output)
mod['func_549'] = func_549
mod = relay.transform.InferType()(mod)
var_550 = relay.var("var_550", dtype = "int16", shape = ())#candidate|550|()|var|int16
var_551 = relay.var("var_551", dtype = "float32", shape = (1, 160))#candidate|551|(1, 160)|var|float32
var_552 = relay.var("var_552", dtype = "float32", shape = (13, 160))#candidate|552|(13, 160)|var|float32
output = func_549(var_550,var_551,var_552,)
func_553 = relay.Function([var_550,var_551,var_552,], output)
mutated_mod['func_553'] = func_553
mutated_mod = relay.transform.InferType()(mutated_mod)
const_571 = relay.const([[[-7.126740,3.719513,7.081184,-3.028955],[-3.404088,-7.503326,5.510901,-7.269690],[-0.935066,4.082009,6.401993,-3.237198]],[[3.854255,-2.900104,8.811076,-2.257001],[-2.058812,3.614889,-7.191913,1.150139],[9.314390,4.701444,1.775476,6.492663]],[[1.583373,3.482228,-5.972988,5.779264],[-6.736057,-4.071781,3.729260,2.024291],[-6.443407,-5.229245,-2.309863,6.882669]],[[8.618197,-2.938754,3.916336,-7.872224],[1.069144,0.557966,6.558071,9.836951],[-6.418562,2.496176,-0.734510,8.528680]],[[6.937253,0.326006,-6.982155,-2.274808],[-7.780214,-6.306607,-7.877645,-3.300399],[-7.668258,5.239583,-2.182225,0.814765]],[[-7.401970,7.401029,2.185007,-0.594523],[-3.450533,-8.173222,-3.065568,-7.163833],[-0.944430,-5.202353,9.471936,-5.886645]],[[-7.188486,4.780462,-6.116055,1.298966],[-5.243492,1.871654,-8.260933,-2.347818],[-5.953116,9.921938,3.717484,6.920482]],[[-3.125214,-6.948720,-2.854565,3.761385],[0.159381,-5.011759,-3.574527,-3.627028],[-9.146457,-0.136129,8.763618,8.671850]],[[-1.598000,7.576126,-7.151280,1.534376],[-1.316602,-1.854205,-8.743667,-5.214344],[-6.375562,0.155368,-7.077181,8.760439]],[[6.794022,6.393905,8.408713,-3.275590],[8.121918,0.221455,-2.627033,-7.579300],[5.600165,-0.074965,2.264870,9.820818]],[[4.397642,-3.659751,-7.663113,-3.218813],[4.306118,5.343768,-4.342153,-3.393263],[4.677017,3.262682,-2.427386,-9.789559]],[[-6.169406,7.100694,7.902244,8.508820],[3.182296,4.840049,-8.850391,-2.580955],[9.396962,-2.012315,3.156910,-1.861695]],[[-8.316573,9.877610,5.578071,-5.690970],[-2.856823,0.854620,-7.572092,-1.830309],[-0.165323,-8.268335,6.360434,7.809771]],[[-4.928267,-6.919809,-7.907569,-8.724893],[-8.081254,-7.565802,1.121090,5.529001],[-5.225575,-3.321219,5.459298,3.184836]],[[-9.617155,-5.045802,-3.982764,-8.212750],[7.311806,-7.595477,0.705150,5.406267],[-2.423547,-0.751374,-8.249220,7.061877]],[[-1.664560,-9.390156,-5.297060,-4.758011],[6.474220,-0.331145,-6.420998,-3.594121],[6.651066,3.727253,2.688388,-1.681822]]], dtype = "float64")#candidate|571|(16, 3, 4)|const|float64
uop_572 = relay.asinh(const_571.astype('float64')) # shape=(16, 3, 4)
uop_574 = relay.tan(const_571.astype('float32')) # shape=(16, 3, 4)
uop_590 = relay.cos(const_571.astype('float64')) # shape=(16, 3, 4)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
var_594 = relay.var("var_594", dtype = "float32", shape = (4, 40))#candidate|594|(4, 40)|var|float32
call_593 = relay.TupleGetItem(func_375_call(relay.reshape(var_594.astype('float32'), [10, 16, 1])), 1)
call_595 = relay.TupleGetItem(func_377_call(relay.reshape(var_594.astype('float32'), [10, 16, 1])), 1)
var_604 = relay.var("var_604", dtype = "float64", shape = (16, 3, 4))#candidate|604|(16, 3, 4)|var|float64
bop_605 = relay.not_equal(const_571.astype('bool'), relay.reshape(var_604.astype('bool'), relay.shape_of(const_571))) # shape=(16, 3, 4)
bop_611 = relay.mod(uop_572.astype('float64'), relay.reshape(uop_574.astype('float64'), relay.shape_of(uop_572))) # shape=(16, 3, 4)
output = relay.Tuple([uop_590,call_593,var_594,bop_605,bop_611,])
output2 = relay.Tuple([uop_590,call_595,var_594,bop_605,bop_611,])
func_618 = relay.Function([var_594,var_604,], output)
mod['func_618'] = func_618
mod = relay.transform.InferType()(mod)
var_619 = relay.var("var_619", dtype = "float32", shape = (4, 40))#candidate|619|(4, 40)|var|float32
var_620 = relay.var("var_620", dtype = "float64", shape = (16, 3, 4))#candidate|620|(16, 3, 4)|var|float64
output = func_618(var_619,var_620,)
func_621 = relay.Function([var_619,var_620,], output)
mutated_mod['func_621'] = func_621
mutated_mod = relay.transform.InferType()(mutated_mod)
const_698 = relay.const([[[9,-5,4,10,-3,4,5,3,-6,3,10,8],[-7,-8,4,-10,4,3,-9,-2,1,2,-3,-6],[-8,8,5,7,-10,2,10,9,9,-4,7,9],[-1,6,7,-2,10,-4,-5,6,9,1,10,-5],[-2,-7,4,-8,8,8,5,2,-9,-2,-1,-2],[-8,10,-3,-7,4,5,-2,3,-9,5,1,1],[4,-6,2,5,-1,8,-2,10,-10,3,9,10],[-9,2,-2,9,4,1,5,6,3,-1,-8,10],[-7,-10,3,4,4,-1,9,-4,-7,-9,-3,10],[8,2,4,3,-6,-8,2,-10,-8,-5,-1,9],[6,-10,-4,6,2,7,-1,-5,-3,6,5,-6]],[[-5,9,1,-3,10,7,-4,8,-2,-9,-7,-10],[9,8,1,8,-4,-3,-9,-4,-2,2,8,9],[7,5,-6,4,2,-1,5,-1,10,-8,2,7],[4,7,1,2,-6,10,3,-9,-8,-7,4,6],[2,3,3,-8,-9,-9,-3,-6,7,2,2,4],[-4,6,9,-1,3,6,2,-5,1,1,4,-4],[5,-2,1,-8,-4,-4,4,5,9,-5,5,2],[-3,-1,-10,7,-3,2,-4,-1,-7,-1,-8,8],[8,-8,3,-9,5,-3,-5,10,-9,1,7,2],[-7,-2,-1,-2,-6,-10,-4,-5,-8,-6,9,10],[10,-3,-5,10,-10,-7,-5,-8,3,1,-8,8]],[[7,7,-2,5,-10,1,-3,-5,3,2,3,10],[9,-5,10,-2,-7,-2,-6,1,5,-1,-2,1],[-10,-3,4,-1,7,-1,9,-5,-4,7,5,-6],[-1,1,3,9,7,-8,-9,8,-7,4,-4,-4],[7,-8,1,-7,1,6,-9,9,10,9,-8,-5],[5,1,-10,6,8,2,-10,-2,8,-6,4,3],[5,-1,-8,-6,-6,2,3,5,-4,9,-7,-4],[10,2,-7,7,-8,5,-5,-8,-7,8,10,9],[10,9,-2,2,5,5,-8,4,-1,1,9,8],[2,5,-9,6,-6,-7,-8,-10,3,-6,8,-7],[10,-4,9,-4,7,-1,-8,6,-3,-4,-3,5]],[[2,9,3,6,5,-2,-3,3,10,8,2,3],[10,8,4,9,7,5,-5,-3,2,-3,2,6],[-2,1,10,-9,3,-2,-3,2,-3,7,-9,-6],[-6,5,9,-1,6,4,7,-6,3,9,1,5],[10,1,4,8,8,-9,7,-7,3,-10,-9,1],[4,-9,1,10,5,9,-9,-1,-4,-6,-10,5],[8,-4,-4,8,-4,5,-10,9,6,-7,8,-4],[8,-3,-6,-6,6,9,6,7,8,-7,7,-6],[-5,10,2,-6,-5,-3,-7,-5,-8,10,4,3],[-9,10,10,1,-2,-9,-4,-7,1,-1,-6,1],[1,-5,1,8,-2,-8,-8,-8,-9,-5,1,3]],[[1,-2,8,-8,-7,5,4,-7,-4,9,-3,2],[-5,4,-8,-7,9,-5,-3,8,-7,7,8,10],[-9,6,9,2,7,-9,3,4,-7,10,2,-9],[5,-4,10,-7,-4,-10,2,-6,-10,-4,1,4],[8,8,-4,-1,-5,-1,9,-5,-2,-6,7,-5],[-7,9,-8,-3,-8,6,-8,-2,2,-7,3,5],[-6,-2,-5,9,8,9,10,-4,-3,-2,-9,-3],[8,-3,-3,-6,3,2,-7,-9,1,-2,-10,-9],[9,5,4,1,9,2,-4,10,8,-5,-5,1],[2,6,2,-4,-7,-8,-6,-4,3,-8,-4,-4],[4,-9,-6,4,-6,10,8,-8,5,-7,-3,8]],[[6,-4,-6,-5,10,9,6,3,-4,9,-1,8],[-1,6,5,-1,-8,5,3,-4,6,8,7,-4],[-8,-4,10,-4,-6,-8,-2,3,-1,-6,10,9],[3,10,1,-2,8,10,5,-2,2,-1,-6,6],[5,-4,-4,-1,-10,-9,-4,4,5,2,7,3],[4,6,10,-9,-6,10,-6,8,-1,-1,-8,-8],[10,-6,-4,8,5,-7,-8,10,9,-5,-10,-5],[2,7,-2,6,5,-8,-1,6,-10,2,9,-3],[1,-7,5,-3,9,-8,5,4,-5,8,1,-3],[8,1,7,-8,-4,-3,-7,5,-8,-9,-8,-2],[7,1,5,1,9,-9,-5,-7,1,7,8,-8]],[[-6,9,1,-7,1,-8,-1,-8,-10,7,5,6],[5,8,7,8,-4,-9,8,5,3,-6,10,-5],[2,-8,7,6,9,-5,-9,-2,-10,10,-7,7],[-6,-6,-8,9,-2,-8,-10,1,8,6,9,-4],[10,-8,9,-9,-2,-3,6,2,-10,-9,7,-8],[5,4,-3,-6,-2,-2,-2,8,-7,-4,-5,-1],[7,3,-9,8,-8,-2,3,-6,2,8,2,-8],[6,-2,-6,-4,-4,-4,-10,10,7,9,-10,6],[4,6,9,4,3,4,10,2,-9,-6,-1,6],[-8,9,-1,-10,9,2,-7,1,2,-1,7,4],[-2,-4,-9,-10,-7,-5,-3,7,8,-10,-4,6]],[[8,8,-1,-1,5,5,-8,-2,-5,5,-9,-10],[2,3,10,-3,7,6,-4,-8,-4,4,7,7],[3,7,-6,1,6,-3,-1,5,-8,5,-7,2],[3,3,3,1,-4,8,-9,8,-2,2,-7,-3],[-7,6,9,-7,-7,-4,10,6,8,-6,4,-10],[2,2,-10,-4,-1,-3,2,5,-10,-10,8,6],[4,1,-3,6,7,-7,-1,2,-5,4,-4,-5],[-10,7,-2,2,-5,4,7,5,8,-9,-5,2],[-7,-5,5,-7,6,-1,-5,2,7,7,-8,8],[-4,-6,7,7,4,6,4,6,-5,6,-1,1],[-8,2,9,-3,-6,-2,-9,-8,2,4,-7,-6]],[[7,-4,2,-6,2,-8,7,-5,-10,-5,-9,2],[7,9,-6,6,-9,-2,6,3,6,-10,-3,-8],[-6,-4,8,-8,3,10,-10,-5,-9,-2,-4,4],[6,-7,-2,4,9,-3,-5,1,8,-7,10,-9],[-8,-3,-4,6,-2,1,-7,-2,-4,-3,-7,6],[8,4,-7,6,-4,2,5,-9,1,10,4,4],[6,6,-4,9,-10,-7,-5,-4,1,6,6,-2],[5,4,-4,9,8,3,10,1,4,8,-10,-8],[-10,8,2,-2,-1,-6,7,-5,3,-4,-10,2],[4,3,4,-8,8,10,-5,6,-1,1,10,-10],[5,-5,-10,9,8,-1,-3,-7,-2,-2,-1,2]],[[-1,-7,-8,3,2,8,-6,7,9,4,-4,5],[-2,-2,-5,5,7,8,-1,-1,-10,5,8,-8],[8,10,-7,-10,4,-1,6,7,-8,-1,10,1],[4,6,8,6,-7,9,-3,-2,1,-6,-9,-10],[-7,-7,-6,-7,-6,10,-6,-7,-5,9,-5,5],[-6,1,-3,4,6,9,2,2,-8,2,-1,8],[-7,-5,10,6,-10,-3,2,5,9,-1,9,-10],[8,-10,1,6,-7,-8,-3,-4,3,-8,-3,4],[6,-6,9,-1,-8,-7,-10,-4,-5,5,1,5],[-5,1,-7,-3,-10,-7,4,7,8,10,-6,5],[9,1,9,3,8,-3,1,-9,6,-4,-5,-2]]], dtype = "uint8")#candidate|698|(10, 11, 12)|const|uint8
var_699 = relay.var("var_699", dtype = "uint8", shape = (10, 11, 12))#candidate|699|(10, 11, 12)|var|uint8
bop_700 = relay.bitwise_and(const_698.astype('uint8'), relay.reshape(var_699.astype('uint8'), relay.shape_of(const_698))) # shape=(10, 11, 12)
func_549_call = mod.get_global_var('func_549')
func_553_call = mutated_mod.get_global_var('func_553')
const_710 = relay.const(-1, dtype = "int16")#candidate|710|()|const|int16
const_711 = relay.const([-7.470068,9.342863,-6.060835,-6.374270,3.951871,4.618391,6.933091,1.359897,-8.745097,3.673085,-3.910589,-2.852335,-4.601820,-8.947384,5.992243,-4.360709,4.971293,-5.898053,-3.833315,-8.186273,-8.708186,-1.070364,-0.162139,-9.131733,-9.201459,-3.648301,-2.745270,-7.152564,9.783545,-1.123152,-3.593467,-6.298523,-1.633335,5.918880,0.237986,-3.039111,4.891038,-0.577542,1.839652,-2.943752,-9.320249,-7.205652,-6.502128,8.679748,2.669881,-3.948232,-5.659391,-4.478591,9.905149,1.066901,9.859520,6.197533,-9.855895,-5.288264,-0.948564,0.385690,0.602106,-9.324388,-9.041411,5.658219,9.349143,8.724577,-2.814203,8.619953,2.960251,8.677672,-8.276849,-7.085017,-7.815616,-2.955635,1.257328,2.095424,4.600031,-9.786987,1.165368,-0.591736,-8.401523,-9.912925,9.752100,-0.796850,-3.174161,3.431618,-9.720027,-1.800084,-6.405627,-2.254324,-3.212371,-6.915697,6.526607,-8.307110,-8.901163,5.117133,-3.208564,9.681853,3.736694,2.238736,9.418495,8.018802,-2.966684,-7.000373,-3.133530,-3.967215,-7.681142,1.232216,-7.117401,-8.064461,-3.921154,2.385140,2.080063,-5.377801,-8.398040,2.279587,-8.126596,-2.233786,-8.973945,5.828447,4.637637,8.197819,-0.522076,1.952247,-4.484330,1.442995,7.428903,-0.461263,9.764635,-8.481777,-1.239142,-2.988370,-4.131228,4.794337,2.557841,5.063919,-4.022651,6.208180,7.114006,5.708767,-9.901676,-0.771828,3.410189,8.878117,8.146635,6.435745,5.044125,-7.809341,-8.076538,-4.305868,-1.832747,-5.211953,-2.371099,5.152723,-9.124602,-5.615102,9.096198,-3.013719,5.101888,-2.194335,4.171712,-4.701509,6.635449,-2.937304], dtype = "float32")#candidate|711|(160,)|const|float32
var_712 = relay.var("var_712", dtype = "float32", shape = (2080,))#candidate|712|(2080,)|var|float32
call_709 = relay.TupleGetItem(func_549_call(relay.reshape(const_710.astype('int16'), []), relay.reshape(const_711.astype('float32'), [1, 160]), relay.reshape(var_712.astype('float32'), [13, 160]), ), 2)
call_713 = relay.TupleGetItem(func_553_call(relay.reshape(const_710.astype('int16'), []), relay.reshape(const_711.astype('float32'), [1, 160]), relay.reshape(var_712.astype('float32'), [13, 160]), ), 2)
output = relay.Tuple([bop_700,call_709,const_710,const_711,var_712,])
output2 = relay.Tuple([bop_700,call_713,const_710,const_711,var_712,])
func_714 = relay.Function([var_699,var_712,], output)
mod['func_714'] = func_714
mod = relay.transform.InferType()(mod)
mutated_mod['func_714'] = func_714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_714_call = mutated_mod.get_global_var('func_714')
var_716 = relay.var("var_716", dtype = "uint8", shape = (10, 11, 12))#candidate|716|(10, 11, 12)|var|uint8
var_717 = relay.var("var_717", dtype = "float32", shape = (2080,))#candidate|717|(2080,)|var|float32
call_715 = func_714_call(var_716,var_717,)
output = call_715
func_718 = relay.Function([var_716,var_717,], output)
mutated_mod['func_718'] = func_718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_918 = relay.var("var_918", dtype = "float64", shape = (4, 2, 4))#candidate|918|(4, 2, 4)|var|float64
const_919 = relay.const([[[-6.406903,-7.721229,-9.662050,4.399071],[-4.538828,0.250159,6.932131,9.290632]],[[5.785183,-0.201542,6.892750,-9.885414],[-4.334385,8.663090,5.905426,9.524749]],[[8.063225,-5.555976,1.053769,-6.550097],[-9.682724,6.676708,4.727106,-7.863421]],[[3.312004,-7.682117,3.685780,3.256248],[2.996466,-5.306753,2.787654,5.142981]]], dtype = "float64")#candidate|919|(4, 2, 4)|const|float64
bop_920 = relay.floor_mod(var_918.astype('float64'), relay.reshape(const_919.astype('float64'), relay.shape_of(var_918))) # shape=(4, 2, 4)
uop_926 = relay.exp(const_919.astype('float64')) # shape=(4, 2, 4)
func_549_call = mod.get_global_var('func_549')
func_553_call = mutated_mod.get_global_var('func_553')
const_931 = relay.const(4, dtype = "int16")#candidate|931|()|const|int16
const_932 = relay.const([-5.118202,-6.833033,-3.976384,-6.855398,9.940789,3.185271,-4.699210,4.247189,-5.931672,-0.183866,2.063063,0.172836,-8.701723,-0.801502,6.732593,9.488264,-7.473403,6.300189,4.469721,-9.655552,-8.739617,7.792115,-3.735027,5.923341,-9.209616,-2.399441,4.996631,0.531216,-5.298489,-6.168022,0.617385,-3.579050,5.980320,1.873096,6.480812,6.404550,2.489073,-6.994501,-9.820720,-9.983482,4.428451,-2.925960,-6.993549,-3.852574,7.456038,-3.338465,-2.936365,-1.360707,9.740899,0.461744,-8.245076,-4.857569,1.261022,3.823283,-4.755840,-9.580089,5.828491,4.964466,-4.221958,-9.213095,-2.143134,1.467368,2.623805,-7.329328,0.123871,6.130444,-7.762059,4.784674,-5.429039,6.897378,-1.388656,-8.618055,-1.191324,-1.356470,6.661717,-7.260280,6.340122,0.696579,-9.491587,8.307550,4.414550,8.644002,3.280875,1.641449,9.166668,-5.155880,-2.449574,1.554609,-8.536793,9.273001,2.444293,3.644713,3.920489,3.370623,-3.546738,0.814853,-9.357612,-8.866949,8.924686,2.583096,-6.805705,9.063065,5.743974,-7.826729,-1.218518,0.434333,8.248369,-4.161509,0.502532,-7.538795,1.938706,9.347199,-4.690174,9.961425,8.537862,6.975407,-1.795878,-7.478282,5.279293,-5.695803,6.872071,6.203253,-3.407865,7.415257,-5.527070,-6.902580,-2.425507,1.295813,6.576280,-9.643366,0.440774,-8.670616,-9.582495,6.070420,6.721018,3.302522,-3.722920,-1.823055,0.894705,-2.554665,3.896765,3.638280,6.356711,8.591547,6.038905,0.214621,5.597403,-6.705622,5.155698,8.708140,6.765208,4.373318,-0.172397,6.025027,7.708826,5.944668,-3.644970,-3.169983,5.361573,-3.690643], dtype = "float32")#candidate|932|(160,)|const|float32
var_933 = relay.var("var_933", dtype = "float32", shape = (2080,))#candidate|933|(2080,)|var|float32
call_930 = relay.TupleGetItem(func_549_call(relay.reshape(const_931.astype('int16'), []), relay.reshape(const_932.astype('float32'), [1, 160]), relay.reshape(var_933.astype('float32'), [13, 160]), ), 0)
call_934 = relay.TupleGetItem(func_553_call(relay.reshape(const_931.astype('int16'), []), relay.reshape(const_932.astype('float32'), [1, 160]), relay.reshape(var_933.astype('float32'), [13, 160]), ), 0)
func_618_call = mod.get_global_var('func_618')
func_621_call = mutated_mod.get_global_var('func_621')
var_936 = relay.var("var_936", dtype = "float64", shape = (192,))#candidate|936|(192,)|var|float64
call_935 = relay.TupleGetItem(func_618_call(relay.reshape(const_932.astype('float32'), [4, 40]), relay.reshape(var_936.astype('float64'), [16, 3, 4]), ), 0)
call_937 = relay.TupleGetItem(func_621_call(relay.reshape(const_932.astype('float32'), [4, 40]), relay.reshape(var_936.astype('float64'), [16, 3, 4]), ), 0)
func_549_call = mod.get_global_var('func_549')
func_553_call = mutated_mod.get_global_var('func_553')
call_938 = relay.TupleGetItem(func_549_call(relay.reshape(const_931.astype('int16'), []), relay.reshape(const_932.astype('float32'), [1, 160]), relay.reshape(var_933.astype('float32'), [13, 160]), ), 1)
call_939 = relay.TupleGetItem(func_553_call(relay.reshape(const_931.astype('int16'), []), relay.reshape(const_932.astype('float32'), [1, 160]), relay.reshape(var_933.astype('float32'), [13, 160]), ), 1)
func_714_call = mod.get_global_var('func_714')
func_718_call = mutated_mod.get_global_var('func_718')
const_941 = relay.const([-9,10,-1,5,9,-1,10,-2,6,-3,-7,-2,1,-4,7,3,-8,-1,-9,6,-4,6,6,-2,6,-1,-8,9,7,10,-7,-2,-5,5,-1,-3,-9,-10,-7,-9,-8,3,-3,5,8,-6,10,1,2,1,-10,-8,-3,3,-1,-2,3,4,10,6,9,-4,-1,-6,4,6,-2,-10,-5,9,-5,4,8,2,9,9,-1,9,-7,-2,-2,4,5,3,7,3,-2,-10,6,10,1,3,2,1,-7,-2,-3,5,2,-7,7,-1,-8,-9,2,-8,-1,-4,-5,4,-9,-10,-5,-10,10,-6,-7,8,-9,-8,8,-5,-10,-4,3,6,-6,-4,-1,8,2,-2,2,-4,5,-5,1,4,8,-6,-5,2,-1,2,3,-5,5,-5,5,9,3,-5,-3,-6,6,-1,4,-2,-2,-7,4,9,9,-6,3,-8,-9,-9,-1,-1,-6,-8,6,7,4,-2,-6,-8,2,1,9,-2,-2,9,7,-10,4,5,-10,9,-6,2,1,9,4,-1,-9,3,3,7,-4,4,7,-8,-2,10,-8,-10,-2,2,-8,1,5,3,8,9,6,-9,-5,-1,6,6,4,4,-4,-4,-1,-4,-10,6,6,9,-1,7,7,-4,3,-8,-6,5,-1,4,5,-8,-6,3,10,-4,-2,8,10,4,-9,-10,-7,5,-5,9,1,-5,2,7,-9,4,1,-3,-3,6,-3,9,3,-9,-4,-6,-6,10,-8,9,-7,1,6,-10,-10,2,-5,3,-4,-6,-1,-3,-5,4,-1,1,7,-5,5,-3,-2,-8,6,4,-6,-10,5,3,-8,3,9,7,-7,8,-8,7,-5,-8,8,1,-2,-10,-4,-5,7,2,-2,-3,-1,-1,3,-10,4,-9,10,6,-1,-9,9,-9,-3,-4,2,-6,-10,4,6,10,-2,2,-9,3,7,8,7,-2,-8,5,-4,5,-7,-7,-2,5,-8,-5,-7,10,2,10,3,8,-8,3,4,-8,-6,-6,-4,2,9,-2,8,10,7,-7,-2,4,-10,2,5,-8,6,9,4,3,-1,-10,6,8,2,6,2,3,-8,-7,6,-6,-9,4,6,-9,-4,-5,10,6,9,-5,-3,-3,3,6,5,-4,8,-8,-7,3,-7,-4,4,-9,1,5,2,4,10,-9,-5,9,-2,10,-5,3,-3,-9,6,-1,-3,10,4,3,8,-9,6,6,5,9,1,2,-10,3,8,-4,8,-8,-10,6,-4,8,-1,10,-2,-7,-1,-9,9,-7,-3,10,5,-4,1,-2,3,7,-6,-3,3,3,9,5,1,-9,-2,-6,8,-3,-9,6,-5,-9,7,1,-2,-4,-6,10,-10,2,7,3,9,6,9,4,-2,-6,5,-9,-4,7,-1,-7,-4,-6,-10,-8,-3,1,-6,-7,-7,9,4,8,-10,-8,-2,5,8,8,-10,-7,5,-6,-2,-1,-10,3,-6,-4,8,1,-8,5,-8,4,-3,3,-8,9,6,10,-8,-1,-6,3,6,-3,10,10,4,8,-4,3,3,-3,2,4,8,6,-8,-9,3,-9,-1,3,-3,-3,3,1,10,5,-9,1,6,-1,-6,-1,2,6,-8,-1,1,10,-3,-1,4,4,7,-1,5,-9,4,-4,9,2,-6,-10,8,-2,-10,-2,1,10,-5,10,4,-3,-9,-5,-4,6,9,-10,6,5,-4,-2,7,2,-2,-2,-4,-5,3,-9,-6,-10,1,-1,9,-2,-5,8,6,-3,-2,5,3,9,1,-4,5,1,1,4,7,5,-10,-5,-4,-5,5,-2,-1,4,-9,8,-2,1,-10,-5,10,-1,6,-5,4,7,-9,8,10,-1,-2,-2,-7,-8,-7,-3,5,-5,8,1,1,1,-5,-9,5,-3,-8,-1,-9,9,-2,-2,6,9,-9,-6,-8,-10,8,-9,9,9,-8,-10,7,-4,-4,7,-4,-2,9,-3,6,4,-3,6,5,-1,4,-2,3,-2,-2,4,7,9,7,7,-7,7,3,4,-9,-5,-6,-3,-2,-5,6,-10,-9,-3,3,10,-10,-2,10,-3,10,-1,-4,9,-1,-10,-6,-2,-1,1,-4,4,10,6,-1,-1,6,1,-8,6,5,-8,8,7,-4,5,-3,-3,4,-3,8,-10,-5,6,3,5,-10,10,3,-9,-10,-7,3,6,-9,6,2,-6,9,10,-4,2,6,-5,-1,-7,1,6,6,-3,8,4,5,6,-2,8,9,-1,1,-7,-10,-5,-10,5,2,1,-7,-9,5,-8,2,-2,-5,-10,-10,-1,1,3,9,-5,8,-1,3,1,7,-4,5,-2,10,9,6,2,5,7,5,-5,2,-10,-7,-10,10,5,-1,-8,-8,-4,-4,-2,-4,-5,2,2,7,8,10,-10,3,8,2,-8,-10,5,-9,-4,-5,-9,-10,-3,-2,-3,-9,7,-10,-8,8,3,8,-1,-4,-9,-6,7,1,5,1,10,-10,-1,-9,-5,5,-4,-5,-2,-3,-1,9,-7,8,-6,9,-8,-2,-1,10,-9,-3,9,-1,8,-2,-3,7,-3,-1,5,-6,8,5,-2,-5,-1,-5,6,-1,-2,-5,4,-4,-8,-6,4,9,-2,3,-9,-5,5,-1,10,7,-5,-6,4,-5,-6,7,-7,-3,-9,2,-3,8,-1,-8,9,10,6,4,-7,-2,2,-2,-4,-7,-9,10,-10,-9,7,1,-3,-1,-10,-10,-4,7,-2,4,-3,-8,3,-4,8,5,3,3,-8,6,7,-4,-8,6,1,-3,-10,9,-3,-6,8,-8,7,6,4,-5,8,2,2,4,-6,10,-2,-1,1,5,9,2,-3,-5,-10,7,-2,4,7,-7,-6,8,3,-2,7,6,1,3,-6,-2,-9,-6,10,-2,7,9,-6,1,6,-8,1,10,3,7,-2,-8,1,-1,-2,-7,4,-2,5,-2,9,6,5,3,1,-7,-2,-3,7,-4,-9,-9,9,3,-7,4,6,-5,8,-7,9,-10,-9,3,-7,6,-10,-8,6,-4,8,-8,-10,3,10,-4,6,-9,-9,2,1,-3,-10,-1,-2,-9,3,-5,10,-8,10,1,-8,-2,7,4,-9,-9,5,7,-3,8,-4,6,2,6,7,-9,-2,-3,-4,-4,-1,-6,-1,4,7,-1,-6,5,-2,-2,-10,6,-4,10,-4,-5,-7,1,-1,-3,10,1,10,6,9,-3,-10,3,-9,-6,-7,-10,-9,2,8,10,9,4,7,3,9,-7,6,7,-2,8,1,2,9,-9,9,-6,9,8,-1,6,-9,-1,2,2,-10,-3,-8,-8,-1,5,6,-8,3,-5,-1,4,-3,-6,-4,8,9,-4,8,-6,-1,-9,-4,4,-7,10,9,7,-3,-6,9,3,-7,5,-1,4,-3,10,2,-5,-4,-6,-10,-4,3,-4,-4,-10,-5,6,-7,-7,5,-8,-3,7,-7,-10,-5,-2,4,1,-4,-7,-8,-3,3,-3,-9,-7,-3,2,7,-7,-8,-1,8,8,-6,8,-10,-9,5,3,-3,8,5,8,-4], dtype = "uint8")#candidate|941|(1320,)|const|uint8
call_940 = relay.TupleGetItem(func_714_call(relay.reshape(const_941.astype('uint8'), [10, 11, 12]), relay.reshape(var_933.astype('float32'), [2080,]), ), 2)
call_942 = relay.TupleGetItem(func_718_call(relay.reshape(const_941.astype('uint8'), [10, 11, 12]), relay.reshape(var_933.astype('float32'), [2080,]), ), 2)
var_943 = relay.var("var_943", dtype = "float64", shape = (4, 2, 4))#candidate|943|(4, 2, 4)|var|float64
bop_944 = relay.bitwise_xor(uop_926.astype('int16'), relay.reshape(var_943.astype('int16'), relay.shape_of(uop_926))) # shape=(4, 2, 4)
output = relay.Tuple([bop_920,call_930,const_931,const_932,var_933,call_935,var_936,call_938,call_940,const_941,bop_944,])
output2 = relay.Tuple([bop_920,call_934,const_931,const_932,var_933,call_937,var_936,call_939,call_942,const_941,bop_944,])
func_949 = relay.Function([var_918,var_933,var_936,var_943,], output)
mod['func_949'] = func_949
mod = relay.transform.InferType()(mod)
var_950 = relay.var("var_950", dtype = "float64", shape = (4, 2, 4))#candidate|950|(4, 2, 4)|var|float64
var_951 = relay.var("var_951", dtype = "float32", shape = (2080,))#candidate|951|(2080,)|var|float32
var_952 = relay.var("var_952", dtype = "float64", shape = (192,))#candidate|952|(192,)|var|float64
var_953 = relay.var("var_953", dtype = "float64", shape = (4, 2, 4))#candidate|953|(4, 2, 4)|var|float64
output = func_949(var_950,var_951,var_952,var_953,)
func_954 = relay.Function([var_950,var_951,var_952,var_953,], output)
mutated_mod['func_954'] = func_954
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1567 = relay.var("var_1567", dtype = "float32", shape = (11, 16, 3))#candidate|1567|(11, 16, 3)|var|float32
uop_1568 = relay.log2(var_1567.astype('float32')) # shape=(11, 16, 3)
const_1572 = relay.const([[[0.141715,3.588610,0.066222],[5.639658,-4.835846,-0.668777],[-5.107507,-1.146690,4.397162],[9.628195,6.686385,7.309666],[-6.028441,-0.221055,-0.588331],[-6.844832,-4.723376,-2.825119],[-1.620361,4.548262,-2.204115],[-7.285853,1.110089,-1.870327],[8.404924,4.999468,-9.634255],[-6.859274,0.898320,-2.518046],[-2.743151,1.714917,-1.423404],[1.497927,-8.509137,-9.008302],[-5.723619,1.446727,5.958356],[7.739481,2.380104,9.956933],[3.238241,1.926507,-4.576396],[1.860580,-8.719720,2.811688]],[[-0.479644,9.871254,3.130123],[7.198658,0.621398,-0.559391],[2.466558,5.604585,-6.373066],[-4.026350,-0.815781,-2.485991],[3.221020,5.166115,8.348338],[3.499596,5.753173,-8.469623],[-0.243481,1.018115,-8.151375],[-1.427495,4.927713,8.747838],[-7.522125,4.260026,4.835683],[-6.713312,5.993384,-5.614971],[-0.949851,-6.597915,3.078469],[8.427802,1.572213,0.604536],[-9.655755,2.238127,5.993743],[1.687871,-9.582119,-6.301193],[-0.874759,8.003062,-2.212639],[-4.783178,1.219708,6.196833]],[[8.337380,-0.720100,4.157798],[5.207060,4.225044,7.541916],[8.449249,-9.432224,8.447984],[2.028094,6.661664,-3.388527],[-6.535038,3.428594,9.970117],[-2.179040,5.674262,3.897283],[-9.086907,-2.407931,1.891937],[-3.588526,-8.672804,1.660958],[7.459619,5.540779,5.146562],[7.853185,6.726101,1.624279],[3.556083,9.254208,-7.715378],[1.126033,1.268510,-3.587638],[7.307551,5.201735,1.267703],[6.632043,6.511609,-6.611028],[-5.152125,2.786950,-9.719457],[5.762751,-5.826747,-4.764371]],[[6.704558,-2.812478,9.521493],[-8.635601,4.451712,-9.328927],[-3.876766,-9.471798,-2.042082],[-6.354926,-5.470969,-3.513397],[-9.574255,-7.651076,7.979858],[2.403755,-5.653543,9.654414],[-0.750156,-6.093118,-3.103616],[-3.135123,-8.117456,-7.677712],[1.459723,-6.113296,-5.142367],[-2.458720,-7.066361,-3.055070],[6.516541,-9.868980,2.027389],[3.884025,2.586573,7.738647],[-3.893472,-2.645345,-7.553324],[-5.183491,2.236617,4.004160],[6.798144,-8.364111,-8.090218],[6.251849,-0.079182,4.288096]],[[-0.495217,4.793302,-2.989049],[1.427727,2.800550,-8.647511],[-9.205987,0.255122,5.689664],[-1.633465,3.373798,-7.806513],[0.087335,2.059489,9.699795],[2.095620,-8.805963,-0.373247],[8.241965,4.545597,4.273127],[2.936593,-9.541529,-5.964219],[2.444633,3.810221,7.172824],[4.237821,4.662469,0.723945],[3.922137,-5.289634,7.202804],[4.652097,-2.180220,6.932745],[-4.498199,-1.380607,-5.537925],[-0.153777,1.567425,-0.513127],[4.821781,1.579378,-0.919710],[7.314855,8.561749,1.657704]],[[-2.616477,8.104849,-7.873697],[1.205939,7.085364,6.105030],[-8.144710,-8.782067,4.070500],[-7.692684,-0.889273,-0.532383],[-4.781888,-6.731361,0.942640],[7.835052,-9.261492,2.922924],[0.655700,2.577451,-2.139403],[-6.612861,-7.788812,-9.754390],[3.194924,-8.055237,-5.773971],[9.867992,6.460784,-6.029132],[8.864003,-4.833430,-4.684923],[-1.639730,-2.625407,8.974840],[2.645557,3.210695,-2.599556],[8.967782,5.647106,7.140597],[-9.060987,-1.791244,-1.979465],[8.034895,-1.573856,-6.728895]],[[6.374843,5.547496,-3.731852],[-0.944733,-4.942557,-2.697522],[9.899161,9.249951,9.965733],[-5.016871,8.780451,6.391004],[3.559171,7.920477,6.245207],[-9.286139,8.453903,-1.968696],[-2.871021,5.129804,4.692758],[0.127572,2.682872,6.741516],[0.381280,5.484370,-6.692362],[5.617113,4.516257,-8.627468],[-0.239558,4.209597,-2.503935],[4.169687,-4.151723,5.385491],[-2.707270,-8.221616,2.555706],[8.754525,4.364339,6.478792],[7.325958,2.286720,-6.995634],[5.970635,-6.751668,-4.662356]],[[9.077455,-5.764892,-0.796073],[3.143794,-5.726854,-7.011925],[2.227831,9.364075,-5.900191],[-4.427172,5.157457,-4.653596],[0.239665,-8.144997,-2.343436],[-2.343885,-3.669563,2.853658],[9.524374,-2.054300,-9.706235],[5.712300,-5.582863,-4.212362],[-6.942041,-8.415978,-6.296217],[5.164081,9.773682,-4.474975],[-2.158628,9.350845,9.199758],[3.532707,4.413734,-5.444045],[-9.410695,9.507154,-6.374170],[-1.686110,-7.911798,-2.094226],[2.310489,5.564959,6.980439],[7.884949,-8.951339,7.860380]],[[5.596370,-4.873953,-8.076344],[4.019796,1.332639,2.678583],[-0.346321,-0.951539,-0.912098],[-6.441817,-0.342157,-5.668625],[0.888626,7.439615,-7.777379],[1.621446,1.265620,-9.189926],[-2.998856,-6.342719,-0.149728],[-3.904335,8.207905,-8.458567],[6.689620,-1.605959,-7.155425],[-0.055068,-7.091678,3.764634],[-8.256828,-4.761956,2.102764],[3.127420,-3.436284,0.783129],[0.287597,-4.807596,-4.715718],[-7.226047,3.609607,5.497610],[-1.691650,8.684378,3.987671],[7.909847,6.708727,0.898333]],[[5.760720,-4.554852,-2.077557],[-2.319388,5.547775,8.831796],[8.628088,-9.272089,-7.381192],[-5.504013,0.902908,1.392169],[3.087260,-7.848941,-5.143405],[7.518464,-3.114277,-0.479729],[6.582957,-4.077974,2.403026],[-9.344879,6.408620,8.659142],[-5.541109,-5.704139,9.515164],[-0.687041,0.275147,7.110381],[-3.389483,0.226219,-5.831969],[9.026747,-3.026441,0.535704],[0.266718,7.857248,-4.130060],[-5.821214,-1.037930,-2.803572],[-4.000732,-8.608622,8.192247],[-0.893073,-3.122110,-8.126112]],[[6.678898,-2.327377,8.389066],[7.834329,1.683860,9.505580],[2.245498,-9.939773,1.558696],[5.381289,3.495296,9.463709],[0.945655,-1.147580,7.817652],[-6.243976,8.959396,-6.422055],[-9.892995,5.423359,-5.756420],[6.083523,4.824891,-8.928842],[-4.970034,-3.986308,3.024684],[-8.077791,2.762174,9.059042],[8.953165,2.384829,-5.410337],[2.589563,7.121967,4.593789],[-2.582893,1.123775,-2.449122],[-9.258576,9.387289,4.828357],[-0.314478,8.868277,-3.141803],[-7.795757,3.946856,-3.920410]]], dtype = "float32")#candidate|1572|(11, 16, 3)|const|float32
bop_1573 = relay.floor_mod(var_1567.astype('float64'), relay.reshape(const_1572.astype('float64'), relay.shape_of(var_1567))) # shape=(11, 16, 3)
output = relay.Tuple([uop_1568,bop_1573,])
output2 = relay.Tuple([uop_1568,bop_1573,])
func_1576 = relay.Function([var_1567,], output)
mod['func_1576'] = func_1576
mod = relay.transform.InferType()(mod)
mutated_mod['func_1576'] = func_1576
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1577 = relay.var("var_1577", dtype = "float32", shape = (11, 16, 3))#candidate|1577|(11, 16, 3)|var|float32
func_1576_call = mutated_mod.get_global_var('func_1576')
call_1578 = func_1576_call(var_1577)
output = call_1578
func_1579 = relay.Function([var_1577], output)
mutated_mod['func_1579'] = func_1579
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1793 = relay.var("var_1793", dtype = "float32", shape = (7, 8, 13))#candidate|1793|(7, 8, 13)|var|float32
uop_1794 = relay.log10(var_1793.astype('float32')) # shape=(7, 8, 13)
func_1576_call = mod.get_global_var('func_1576')
func_1579_call = mutated_mod.get_global_var('func_1579')
var_1799 = relay.var("var_1799", dtype = "float32", shape = (528,))#candidate|1799|(528,)|var|float32
call_1798 = relay.TupleGetItem(func_1576_call(relay.reshape(var_1799.astype('float32'), [11, 16, 3])), 0)
call_1800 = relay.TupleGetItem(func_1579_call(relay.reshape(var_1799.astype('float32'), [11, 16, 3])), 0)
func_1576_call = mod.get_global_var('func_1576')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_1803 = relay.TupleGetItem(func_1576_call(relay.reshape(call_1798.astype('float32'), [11, 16, 3])), 1)
call_1804 = relay.TupleGetItem(func_1579_call(relay.reshape(call_1798.astype('float32'), [11, 16, 3])), 1)
output = relay.Tuple([uop_1794,call_1798,var_1799,call_1803,])
output2 = relay.Tuple([uop_1794,call_1800,var_1799,call_1804,])
func_1805 = relay.Function([var_1793,var_1799,], output)
mod['func_1805'] = func_1805
mod = relay.transform.InferType()(mod)
var_1806 = relay.var("var_1806", dtype = "float32", shape = (7, 8, 13))#candidate|1806|(7, 8, 13)|var|float32
var_1807 = relay.var("var_1807", dtype = "float32", shape = (528,))#candidate|1807|(528,)|var|float32
output = func_1805(var_1806,var_1807,)
func_1808 = relay.Function([var_1806,var_1807,], output)
mutated_mod['func_1808'] = func_1808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2044 = relay.var("var_2044", dtype = "int64", shape = (10, 9, 5))#candidate|2044|(10, 9, 5)|var|int64
var_2045 = relay.var("var_2045", dtype = "int64", shape = (10, 9, 5))#candidate|2045|(10, 9, 5)|var|int64
bop_2046 = relay.multiply(var_2044.astype('int64'), relay.reshape(var_2045.astype('int64'), relay.shape_of(var_2044))) # shape=(10, 9, 5)
output = bop_2046
output2 = bop_2046
func_2056 = relay.Function([var_2044,var_2045,], output)
mod['func_2056'] = func_2056
mod = relay.transform.InferType()(mod)
mutated_mod['func_2056'] = func_2056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2056_call = mutated_mod.get_global_var('func_2056')
var_2058 = relay.var("var_2058", dtype = "int64", shape = (10, 9, 5))#candidate|2058|(10, 9, 5)|var|int64
var_2059 = relay.var("var_2059", dtype = "int64", shape = (10, 9, 5))#candidate|2059|(10, 9, 5)|var|int64
call_2057 = func_2056_call(var_2058,var_2059,)
output = call_2057
func_2060 = relay.Function([var_2058,var_2059,], output)
mutated_mod['func_2060'] = func_2060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2308 = relay.var("var_2308", dtype = "float32", shape = (9, 16, 7))#candidate|2308|(9, 16, 7)|var|float32
uop_2309 = relay.log10(var_2308.astype('float32')) # shape=(9, 16, 7)
func_549_call = mod.get_global_var('func_549')
func_553_call = mutated_mod.get_global_var('func_553')
var_2312 = relay.var("var_2312", dtype = "int16", shape = ())#candidate|2312|()|var|int16
const_2313 = relay.const([[-9.071116,-7.465318,-0.842152,-0.937128,-7.385616,7.988184,3.908601,1.498048,-7.961779,-9.746650,2.320002,-5.284974,-2.789128,6.992813,-4.572454,-8.776386,-3.969509,8.409571,9.991907,-2.237696,-2.370500,-8.947537,-8.439656,9.843050,2.386144,5.248363,-7.851662,4.689421,7.710280,3.147928,1.671427,2.608748,-4.299541,-2.601267,-6.043129,9.172479,-4.388849,-3.347118,-3.537484,-8.465844,1.458667,-2.285400,9.978166,0.629980,3.175792,3.127730,-8.963915,-0.269538,5.792317,-2.902776,-4.031868,7.548205,0.564179,7.970043,9.823617,-7.681972,-1.510781,-0.172462,-0.900236,-8.137617,2.891421,-7.347446,-6.067012,-5.881838,-1.190979,4.131287,1.832134,6.627720,-9.630108,-6.662105,-8.673965,3.192194,3.340684,6.070917,3.174066,4.062810,0.349139,-3.992777,9.428414,2.793235,2.701881,-2.467429,5.164556,-0.526496,-3.641139,-2.175222,7.067510,8.622205,3.235945,-1.048846,5.751628,8.765248,3.153064,-6.945995,1.199972,-9.164354,1.902937,2.742017,9.961570,-1.301848,-3.221253,-9.087245,-6.015205,-6.966240,-1.071475,-4.290482,7.616592,-6.419390,6.129595,9.699284,1.578769,-8.906258,-2.492776,1.696149,5.313479,3.117379,-8.069367,6.047379,-0.047067,2.478240,-8.415569,-0.051056,2.426114,-4.808931,7.516911,3.906609,-9.768652,2.109370,4.123597,-7.658648,1.776471,-4.943576,1.325033,-5.217975,-3.129641,4.560172,-1.966472,-8.060238,-8.392537,-6.569165,-4.902452,-3.051043,9.797607,3.311496,4.741630,5.932257,7.019150,-1.828720,3.325721,-9.715754,-7.746228,-2.831125,8.727988,1.163636,-7.930662,-8.156029,2.221666,3.789356,-2.824852,-5.603919]], dtype = "float32")#candidate|2313|(1, 160)|const|float32
var_2314 = relay.var("var_2314", dtype = "float32", shape = (1040, 2))#candidate|2314|(1040, 2)|var|float32
call_2311 = relay.TupleGetItem(func_549_call(relay.reshape(var_2312.astype('int16'), []), relay.reshape(const_2313.astype('float32'), [1, 160]), relay.reshape(var_2314.astype('float32'), [13, 160]), ), 0)
call_2315 = relay.TupleGetItem(func_553_call(relay.reshape(var_2312.astype('int16'), []), relay.reshape(const_2313.astype('float32'), [1, 160]), relay.reshape(var_2314.astype('float32'), [13, 160]), ), 0)
output = relay.Tuple([uop_2309,call_2311,var_2312,const_2313,var_2314,])
output2 = relay.Tuple([uop_2309,call_2315,var_2312,const_2313,var_2314,])
func_2316 = relay.Function([var_2308,var_2312,var_2314,], output)
mod['func_2316'] = func_2316
mod = relay.transform.InferType()(mod)
var_2317 = relay.var("var_2317", dtype = "float32", shape = (9, 16, 7))#candidate|2317|(9, 16, 7)|var|float32
var_2318 = relay.var("var_2318", dtype = "int16", shape = ())#candidate|2318|()|var|int16
var_2319 = relay.var("var_2319", dtype = "float32", shape = (1040, 2))#candidate|2319|(1040, 2)|var|float32
output = func_2316(var_2317,var_2318,var_2319,)
func_2320 = relay.Function([var_2317,var_2318,var_2319,], output)
mutated_mod['func_2320'] = func_2320
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2404 = relay.const([[[-10,-3,6,7,-1,-9,9,1,4,-9,1,8,7,-10,5,-7],[8,-8,-9,-8,3,5,5,-8,-9,1,-8,-5,6,-8,-5,6],[6,-10,10,-7,9,3,-9,-4,-9,-8,5,-2,3,2,4,3],[-1,-4,3,3,3,-8,8,-1,-9,4,6,-5,-7,-9,4,-10],[5,5,7,-1,-4,5,3,9,-6,-5,10,-1,4,7,-10,-2],[-2,4,-5,-2,-6,-2,-2,2,-5,-8,5,-1,9,-9,-4,-5],[-10,-6,4,5,-4,10,8,-1,8,-10,-1,4,-1,-9,5,-3],[-3,-9,8,10,9,-5,-1,-1,-8,-2,4,-8,-10,-1,-1,10],[-5,2,3,5,-1,10,-1,-10,4,7,-9,-4,-2,-4,1,-10],[2,-4,-5,6,1,9,-7,-10,-3,10,4,3,-10,10,8,2],[1,5,-4,1,5,7,8,-4,6,5,9,-5,-2,10,4,-1],[7,10,-7,7,10,-5,-5,1,4,-1,-3,-1,1,8,5,-10],[-5,4,-3,3,8,2,-8,3,9,4,10,7,-9,9,-4,8]],[[3,-3,-4,-10,6,-4,-6,-6,-2,-7,8,-6,-10,-2,-5,-8],[-10,-3,-9,7,-4,2,9,-5,2,3,-7,-6,-3,-3,-7,-7],[2,-5,4,8,2,-9,10,2,-7,2,6,-3,6,-9,7,-4],[-9,-9,9,-2,7,-4,9,-9,-2,2,-6,-7,1,7,-4,-4],[-8,-6,10,1,-3,-4,-2,-9,-1,2,-4,-2,-3,-2,2,9],[-8,-8,-5,6,4,8,-1,10,-8,1,-1,8,6,2,5,-7],[-6,-3,-3,-7,-9,5,-4,3,-9,-3,-1,-6,-8,-2,-8,7],[-3,-5,9,5,8,7,-9,3,7,8,-4,3,-3,-4,4,-4],[-2,-3,-2,-7,10,-4,6,-9,-3,9,1,9,6,4,-7,-7],[9,9,10,-6,10,9,9,-9,5,10,-9,-2,4,-7,6,9],[-5,9,-4,6,-6,2,-3,8,8,-5,-6,-5,3,-1,-7,-4],[-9,-6,9,1,-6,-3,-3,-8,8,7,2,-6,4,-4,10,-3],[-1,3,10,-7,6,-7,2,7,1,-6,8,8,9,-4,9,7]],[[-6,-2,-4,-5,1,-9,-7,5,-2,3,-2,5,4,-10,7,-5],[-10,1,7,6,8,-3,2,7,8,6,-2,1,10,-10,-9,-2],[-3,-4,-1,-10,-4,3,10,9,-9,-6,-6,10,-8,-5,-7,-7],[1,5,-10,10,10,9,3,-6,3,-7,10,-4,-8,-7,-7,-9],[8,2,-1,-3,6,-8,9,3,-9,2,-10,10,-7,-4,5,-5],[-9,10,-9,-8,-4,4,-2,7,1,-3,-6,-8,-3,-9,8,-1],[1,5,-4,-7,-1,4,-9,-7,10,1,6,-1,4,7,-6,-8],[-8,8,-8,-2,5,-2,-7,-9,10,7,1,-5,9,-6,-8,3],[7,-8,6,4,6,-10,-5,-1,8,3,7,-4,-7,3,-5,1],[-10,9,-1,-1,-8,-1,9,10,-2,-7,-8,-7,-1,8,9,-8],[-10,-6,9,-7,6,10,10,5,10,10,4,2,-10,-1,-2,5],[-5,3,8,-1,-6,2,-8,7,-10,9,-4,9,-3,-2,-9,-9],[10,10,-9,-2,9,-2,-2,8,-6,6,-8,-6,5,-8,-5,-9]],[[-6,-10,-10,-4,8,-10,7,-2,5,-4,5,5,-8,-4,-9,-7],[-4,2,1,4,3,2,2,-2,-4,-1,8,8,-9,10,-5,-5],[-6,-2,-4,-8,10,9,-6,10,-9,8,9,5,6,7,2,10],[-10,7,-9,-5,5,-3,-4,10,8,-3,3,6,-5,3,-7,-7],[7,5,9,7,3,-4,4,2,-3,8,7,7,9,9,-5,6],[-10,-10,-10,-2,8,10,1,4,9,10,-10,-7,-9,6,5,-5],[-3,-4,1,-8,6,-1,-1,1,-8,5,-9,6,9,1,-6,-8],[1,-3,-2,9,8,4,-6,-9,-5,-2,-7,2,2,9,-10,-8],[1,-1,-2,-8,2,-2,-7,3,-7,8,-7,7,6,9,5,4],[9,-6,8,5,-7,8,-10,-8,8,-9,10,4,4,-9,1,4],[1,-4,5,10,-6,6,1,-1,1,4,9,-7,-3,1,-2,-5],[4,-3,-7,-9,-3,-9,10,-3,-3,2,7,5,8,4,-1,-4],[-8,-4,-3,-10,-9,-1,2,-9,1,6,-3,-7,-7,2,2,4]],[[6,-7,-10,-5,9,-7,-10,-5,-10,-8,-2,-5,-10,8,4,3],[10,8,8,-9,9,-9,2,1,-5,-4,-6,7,-5,-7,6,8],[-2,6,-2,-9,10,-2,-2,-4,-2,7,7,-5,10,3,3,-4],[10,7,4,4,3,-8,-7,-3,1,6,-3,-2,2,-1,-9,-10],[-4,2,2,-3,10,-2,-2,-5,-7,2,-3,-3,2,-1,-8,1],[-9,-9,8,8,1,-6,-6,-7,5,3,6,6,9,-10,-10,8],[-5,-2,8,3,-9,4,2,-6,-1,-5,-4,-4,10,-1,-4,-2],[5,1,4,-5,-3,-8,-10,-1,5,7,-9,-4,4,9,-4,6],[5,-5,1,1,6,-8,6,-9,-5,2,-9,3,4,3,3,9],[9,8,-3,4,10,8,-1,-1,-5,-2,-9,-10,-9,3,6,-1],[-8,-5,-9,4,10,7,1,8,1,2,5,5,7,-5,1,-8],[-4,-2,1,-2,8,-10,7,4,-6,-10,-8,-4,-2,-10,4,4],[10,-10,-9,-3,4,-7,1,-1,-10,9,-5,-5,-1,-3,-2,2]],[[-10,6,-9,-10,10,5,9,-2,6,-6,-4,1,-7,-10,-9,4],[7,3,-7,-8,-10,-10,-9,-9,4,8,-10,1,3,-6,-4,-6],[-10,-8,3,4,8,-6,6,2,3,-6,-10,10,-10,8,9,-6],[4,-4,1,2,-1,6,4,-7,-9,9,2,3,-6,-6,4,1],[-10,-6,-2,10,-5,-1,4,5,1,-3,3,-4,8,5,-4,1],[-3,2,-5,1,9,-10,-1,8,-1,4,-8,5,8,9,6,5],[7,5,2,-2,9,5,9,2,6,-3,4,-10,8,6,9,3],[1,-8,5,5,3,6,5,1,-3,6,2,2,7,-4,-1,4],[9,6,-5,-10,1,2,3,7,-10,7,-3,4,9,8,-6,-2],[6,9,-9,2,4,-7,-7,-6,9,1,-2,-2,2,9,-2,-3],[8,-2,10,6,5,-4,8,-3,1,9,-8,4,-10,-8,-3,3],[-4,8,-8,-9,-6,9,-2,8,-4,-9,-7,2,6,-2,-2,2],[-9,-9,3,-9,-2,-2,1,-10,-7,9,9,-3,-3,6,9,3]]], dtype = "uint64")#candidate|2404|(6, 13, 16)|const|uint64
var_2405 = relay.var("var_2405", dtype = "uint64", shape = (6, 13, 16))#candidate|2405|(6, 13, 16)|var|uint64
bop_2406 = relay.bitwise_and(const_2404.astype('uint64'), relay.reshape(var_2405.astype('uint64'), relay.shape_of(const_2404))) # shape=(6, 13, 16)
uop_2409 = relay.tan(const_2404.astype('float32')) # shape=(6, 13, 16)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
const_2423 = relay.const([1.370818,-6.946163,-9.183247,0.629147,-7.899822,9.748007,-0.815696,6.668886,-4.561478,9.724977,-6.683799,2.081044,-5.000689,-6.819196,4.700502,-6.763552,3.713818,-1.719335,-1.453080,-3.535514,-1.049416,1.120427,4.918584,1.599006,-8.126755,-9.872717,6.824735,2.511726,5.781299,-1.129896,8.873672,-2.477541,2.212644,-3.410032,-8.194236,-1.976659,6.610273,-0.642354,-8.195107,-7.536403,-5.877203,4.393611,-7.546226,6.505096,-9.310661,-6.834084,-8.013940,-6.150894,5.810047,-3.635702,-6.619887,5.750046,-3.664840,-1.662706,0.577647,8.534298,2.189485,-0.542493,3.589034,-0.825393,1.852704,6.889546,4.927136,9.647774,-0.237847,-9.497136,1.903889,-9.777550,7.568309,-5.352077,8.863187,-9.301743,4.682149,-8.941287,4.287650,-2.340564,-5.890827,-6.169446,-7.285838,-8.701238,6.309079,7.799506,-9.637979,-8.761920,-8.032106,5.402725,-9.203112,-3.403636,-3.980700,-5.672163,6.551755,-3.503168,-9.487081,1.466332,-5.843151,-6.195314,8.225373,-3.995549,7.307039,0.641922,-1.924279,-7.021263,6.845195,-8.659950,5.740593,1.776292,8.496525,-5.413575,-9.999097,-8.533727,-1.015587,6.717754,-7.581061,9.287576,-0.755671,9.614048,9.290321,-0.834286,8.547526,-5.864898,7.396003,6.650529,7.699953,8.613664,-2.306624,1.707776,-6.019782,-0.431097,-9.462350,-5.708460,-6.401653,8.540131,4.549726,-5.351345,-9.903498,-0.881981,-0.341679,6.614590,1.024752,-8.899403,-2.318927,-8.480706,-1.982856,-1.780623,8.236279,3.643027,-4.364444,9.176677,-6.932869,-7.463428,2.847738,5.614451,8.204748,4.402131,8.872423,-2.273094,0.716415,-1.193332,9.888985,1.305114], dtype = "float32")#candidate|2423|(160,)|const|float32
call_2422 = relay.TupleGetItem(func_375_call(relay.reshape(const_2423.astype('float32'), [10, 16, 1])), 1)
call_2424 = relay.TupleGetItem(func_377_call(relay.reshape(const_2423.astype('float32'), [10, 16, 1])), 1)
uop_2435 = relay.log(uop_2409.astype('float32')) # shape=(6, 13, 16)
bop_2437 = relay.divide(uop_2435.astype('float64'), relay.reshape(bop_2406.astype('float64'), relay.shape_of(uop_2435))) # shape=(6, 13, 16)
uop_2444 = relay.cosh(uop_2435.astype('float32')) # shape=(6, 13, 16)
output = relay.Tuple([call_2422,const_2423,bop_2437,uop_2444,])
output2 = relay.Tuple([call_2424,const_2423,bop_2437,uop_2444,])
func_2447 = relay.Function([var_2405,], output)
mod['func_2447'] = func_2447
mod = relay.transform.InferType()(mod)
mutated_mod['func_2447'] = func_2447
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2448 = relay.var("var_2448", dtype = "uint64", shape = (6, 13, 16))#candidate|2448|(6, 13, 16)|var|uint64
func_2447_call = mutated_mod.get_global_var('func_2447')
call_2449 = func_2447_call(var_2448)
output = call_2449
func_2450 = relay.Function([var_2448], output)
mutated_mod['func_2450'] = func_2450
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2557 = relay.const([[[-9.750701,-6.748663,7.708656,-7.184526,-4.990051,-6.522442,-3.229742,1.508449],[4.871015,-1.886164,6.902452,4.058198,9.498485,4.736907,2.239209,-8.720075],[-3.868319,8.202498,6.923011,-9.414453,-6.774798,0.660430,-6.991884,2.020474],[-0.507518,2.380019,-9.845494,-1.403025,9.875072,9.347735,-4.562686,-0.119020],[-2.650833,-8.623846,2.533379,1.895071,5.783420,-5.942418,-6.653383,4.096077]],[[-6.046589,-4.233701,-8.421835,-4.027125,-3.141930,-3.526475,-1.192871,-4.533665],[-5.741294,-5.270789,7.814816,1.287448,-7.047113,-9.927024,6.546585,9.103697],[-7.571914,-2.529094,3.602432,-4.164265,-7.096373,-8.449887,9.297902,-1.815016],[-2.136917,7.168168,-9.102890,-5.185830,-6.566551,0.979985,1.936359,2.115396],[-9.980026,-3.756346,1.280226,-4.329450,7.318139,-5.931146,8.611251,9.432177]],[[1.874819,0.281398,4.024140,2.571743,-4.670240,-5.506619,2.952937,7.120350],[2.734654,6.451609,-6.282825,9.370180,3.492721,-5.467851,-1.405756,-9.472734],[-8.202520,4.922341,7.442531,3.260046,-4.996224,1.473726,-2.205539,7.751109],[-9.294514,-1.245508,-7.849398,6.385546,3.130907,-2.150559,9.805555,8.222150],[-1.124230,8.062350,7.597981,7.189501,-3.568165,-8.575197,3.191291,8.853692]],[[-1.955383,-4.684961,6.392215,-4.384650,3.566375,-2.580134,5.543678,-1.543900],[-5.710458,-6.616493,3.123263,8.987145,-9.968374,-9.621890,-3.617324,-0.378697],[5.653569,0.246503,-8.491454,7.859578,2.271413,-5.681160,5.723935,-2.071511],[-2.519412,-0.871132,3.280819,-1.947684,2.876668,1.917257,-5.381903,-0.799097],[6.857011,-1.919651,-0.419925,9.500940,1.254288,-0.200018,0.291456,-2.662156]],[[7.189517,8.348356,1.103109,5.843033,-3.451895,-7.098630,-2.281350,-5.953905],[-5.842549,1.172111,-7.350261,-5.405535,-0.210948,-9.458688,-0.053815,1.665844],[6.349324,-3.818241,-1.311725,0.280456,-5.250576,7.572249,2.192758,-6.663315],[-9.729594,-1.000415,5.550139,-2.823784,5.195062,0.184660,-6.937138,-8.478960],[2.478835,-0.350108,-1.895792,-7.068138,8.741672,6.975315,6.274699,-2.758757]],[[7.038604,-8.223318,-6.296663,-6.963949,3.321289,9.897209,-5.200483,-0.469302],[-3.973861,-4.973570,-1.480568,1.041677,-2.145987,-2.631544,7.916411,-9.317737],[4.487316,8.950726,2.097049,-6.861737,0.055415,-4.559567,1.823431,8.561935],[1.099384,-0.755008,-3.904483,7.820059,-1.938997,-9.704154,0.349736,-9.498368],[2.852069,-2.093987,8.337208,9.036469,-2.708289,-7.392665,-0.467112,1.824537]],[[6.766756,-4.760586,3.932929,2.148689,0.991849,3.175944,-1.765852,-2.204900],[2.601808,-3.528121,2.257467,2.393422,-7.004369,9.273964,6.257654,-3.500340],[-5.129070,-5.943299,1.322068,2.015305,7.561634,9.185418,-2.536717,3.857147],[-6.016620,-1.785497,-1.109763,8.302958,2.472041,3.914248,9.541068,-0.482652],[-4.583827,6.179236,-7.280945,7.684532,-5.552123,6.784242,-6.590027,-2.489138]],[[-9.267804,-2.052361,2.956733,6.571346,-6.196694,8.067562,3.097773,5.653888],[9.831997,7.720579,7.382942,4.599648,0.534665,-2.555606,-7.542947,-4.065237],[3.604343,4.926038,-5.710677,7.925400,0.395886,-0.944850,-1.953265,1.467171],[-4.149638,6.857968,0.436772,3.811442,4.603753,-6.764275,7.287168,5.628474],[0.836551,1.908365,2.052629,-9.398314,7.683051,7.389353,-5.346860,5.646394]],[[1.793709,-2.106983,-6.667771,1.211636,7.324270,1.943395,-7.317664,5.634367],[2.251955,5.844565,1.629516,3.622219,-8.562189,3.390222,8.229709,-4.669212],[3.094319,1.663659,-8.677817,-7.862931,-4.026403,-2.797891,-4.846471,-6.361091],[-8.617423,-0.680876,6.786759,2.157131,2.971607,-8.043509,9.099167,4.571535],[8.654119,-1.889878,-3.253644,4.228815,-5.552270,8.206948,7.284225,-0.189889]],[[-4.196249,-1.655639,5.362903,9.883664,-5.676724,6.371667,-4.069360,-3.861741],[-3.967479,-5.953095,5.979893,8.295770,3.668460,-4.937621,3.178841,3.420328],[-6.661018,0.096111,0.026576,-0.228751,5.052633,1.900806,-0.563581,6.072631],[4.233799,5.336981,-1.825948,-4.761594,-6.423402,-0.117987,-8.363920,7.373157],[1.238151,-7.467441,3.255074,-1.092935,-8.194156,3.551223,-0.159142,0.399714]],[[-1.736688,-2.754655,-3.593136,-8.341432,-9.155177,-4.029471,-7.501924,0.225939],[-3.720747,-1.602638,-2.609904,-8.079281,6.044462,8.945445,1.480343,2.255155],[-8.983916,-8.413544,-8.861733,0.755346,6.483787,2.663559,9.997678,-4.647760],[-6.592518,2.533165,2.319858,-1.234226,4.415309,-3.008968,-7.691774,-9.907197],[-1.867886,5.776279,-5.220875,9.834407,-8.850418,8.508589,1.566891,-1.897004]]], dtype = "float32")#candidate|2557|(11, 5, 8)|const|float32
uop_2558 = relay.atanh(const_2557.astype('float32')) # shape=(11, 5, 8)
bop_2561 = relay.subtract(const_2557.astype('uint64'), relay.reshape(uop_2558.astype('uint64'), relay.shape_of(const_2557))) # shape=(11, 5, 8)
bop_2564 = relay.greater_equal(uop_2558.astype('bool'), relay.reshape(bop_2561.astype('bool'), relay.shape_of(uop_2558))) # shape=(11, 5, 8)
var_2586 = relay.var("var_2586", dtype = "float32", shape = (11, 5, 8))#candidate|2586|(11, 5, 8)|var|float32
bop_2587 = relay.mod(const_2557.astype('float32'), relay.reshape(var_2586.astype('float32'), relay.shape_of(const_2557))) # shape=(11, 5, 8)
func_618_call = mod.get_global_var('func_618')
func_621_call = mutated_mod.get_global_var('func_621')
const_2591 = relay.const([6.673402,-2.298839,6.478990,8.741816,6.495013,-6.458195,1.847785,0.958165,3.913842,-7.754272,-4.407440,-8.534523,-4.285928,5.536514,9.385775,-9.450252,5.344153,-6.330829,1.319689,4.761367,8.968712,8.497187,-3.875947,1.801209,9.868315,0.489519,3.312737,6.037417,-5.791693,2.022516,-9.271310,-8.429064,4.319919,-6.250672,2.708403,4.018106,0.820602,4.569411,9.119610,-0.756446,8.033801,-4.759757,0.462530,-2.722071,-1.017625,2.918278,6.013103,-3.866847,-8.426336,-0.708026,5.303876,2.610659,-9.285841,-9.651056,9.117873,-9.269618,-0.676417,2.024534,-9.789520,9.011015,-5.614004,-6.533293,0.619059,-1.921655,1.355057,0.333295,-9.204129,-5.761015,2.594843,-0.151475,2.613550,7.973786,-4.467542,5.342523,-0.970813,2.736661,1.914922,2.021889,6.242990,5.802940,-3.595188,2.997728,8.910743,1.005582,-2.799639,0.039451,-8.471547,4.069781,7.222847,0.462880,-6.824898,-8.748770,-0.989792,-7.827049,2.612901,3.983155,-7.203493,-8.057776,-8.399172,-4.631423,-2.333589,-1.542681,4.717999,4.576773,-7.355556,-9.872253,9.492611,-0.952764,-0.849677,9.117351,-2.245264,2.866435,2.540728,-8.002681,3.196543,-3.575857,-2.358592,-7.484585,6.198070,8.308884,8.116980,-2.860583,-8.849530,-4.459411,6.619484,0.011964,-1.250362,-1.480515,-9.738466,6.053999,4.874931,5.418804,-4.795323,7.537596,1.200533,5.495289,2.572358,-4.770571,5.067090,-4.703747,-6.766803,-9.615729,4.891152,5.231879,-9.641904,8.605603,-7.797162,1.735394,8.157487,-3.916363,3.437941,1.106409,6.882190,0.791581,-4.029947,3.844907,9.170981,-1.936604,-4.090201,-3.648034], dtype = "float32")#candidate|2591|(160,)|const|float32
var_2592 = relay.var("var_2592", dtype = "float64", shape = (192,))#candidate|2592|(192,)|var|float64
call_2590 = relay.TupleGetItem(func_618_call(relay.reshape(const_2591.astype('float32'), [4, 40]), relay.reshape(var_2592.astype('float64'), [16, 3, 4]), ), 4)
call_2593 = relay.TupleGetItem(func_621_call(relay.reshape(const_2591.astype('float32'), [4, 40]), relay.reshape(var_2592.astype('float64'), [16, 3, 4]), ), 4)
output = relay.Tuple([bop_2564,bop_2587,call_2590,const_2591,var_2592,])
output2 = relay.Tuple([bop_2564,bop_2587,call_2593,const_2591,var_2592,])
func_2614 = relay.Function([var_2586,var_2592,], output)
mod['func_2614'] = func_2614
mod = relay.transform.InferType()(mod)
mutated_mod['func_2614'] = func_2614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2614_call = mutated_mod.get_global_var('func_2614')
var_2616 = relay.var("var_2616", dtype = "float32", shape = (11, 5, 8))#candidate|2616|(11, 5, 8)|var|float32
var_2617 = relay.var("var_2617", dtype = "float64", shape = (192,))#candidate|2617|(192,)|var|float64
call_2615 = func_2614_call(var_2616,var_2617,)
output = call_2615
func_2618 = relay.Function([var_2616,var_2617,], output)
mutated_mod['func_2618'] = func_2618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2640 = relay.var("var_2640", dtype = "float64", shape = (4, 12, 4))#candidate|2640|(4, 12, 4)|var|float64
const_2641 = relay.const([[[1.156945,8.794889,-3.316657,-5.071659],[4.097159,5.907935,1.146753,9.495303],[-0.514406,9.539184,-6.209918,-3.409862],[4.810030,6.134088,4.718790,-3.429226],[2.609651,-5.727698,1.519177,-0.160472],[2.578670,2.912828,-1.044904,-2.588767],[3.293891,2.441539,8.711538,1.632230],[-0.894666,3.157146,2.841043,-2.692237],[6.186538,9.639277,-1.858921,7.669711],[8.076469,-5.962979,3.790482,3.150737],[-0.719906,-4.621206,-8.773574,-5.791824],[-3.013735,5.317592,7.705678,-2.276177]],[[-4.129400,-0.636191,3.094913,9.368417],[-6.353601,-1.807375,-4.398551,7.438731],[-3.729754,-3.017003,9.291320,-0.535461],[-7.185162,2.226542,4.653008,-6.403474],[4.842017,-5.388387,-9.630946,-7.610025],[8.163140,8.968196,-8.223492,1.970308],[-6.417324,5.248738,-2.856173,-5.030509],[0.252495,5.942053,0.079088,6.039474],[-1.960691,-3.112955,5.785304,2.978246],[3.368772,-9.421431,2.764046,6.618958],[3.615496,1.720402,-6.008724,5.519675],[-7.749944,-0.547610,-5.239622,-8.937968]],[[-9.892975,-4.136117,6.787575,-2.251174],[-8.625514,-6.135682,-4.059256,7.789847],[4.109451,-7.076982,-9.769793,1.619789],[-9.664589,0.309640,1.301995,8.967015],[-6.966922,5.270929,4.267891,-0.736799],[-2.144898,-5.709212,-8.372205,3.325876],[-4.636047,4.148708,8.269417,2.063672],[4.901608,-8.641985,5.250811,-3.407997],[1.953876,9.798486,5.333913,-4.861535],[2.152968,6.908851,8.824379,1.518152],[-5.169070,-5.782845,9.000295,7.266807],[-2.586030,-1.369517,8.702373,9.811331]],[[-5.935012,4.947970,6.675126,-9.257535],[-3.468577,-7.570530,-0.189067,-4.850807],[7.388790,-9.434110,-7.895974,5.810247],[1.310028,-4.696593,-5.434805,-9.316361],[0.967103,-8.590070,2.714058,9.516152],[-3.124569,6.385135,2.590875,8.254520],[0.713214,0.967860,1.743531,-3.912796],[-1.055402,4.887277,9.227121,-6.941803],[-9.147976,4.317904,2.102688,5.669533],[-4.843727,-9.603731,-9.131259,-9.948350],[2.516601,-8.032291,-8.350166,6.957136],[9.725274,8.753957,-4.783089,7.717218]]], dtype = "float64")#candidate|2641|(4, 12, 4)|const|float64
bop_2642 = relay.power(var_2640.astype('float64'), relay.reshape(const_2641.astype('float64'), relay.shape_of(var_2640))) # shape=(4, 12, 4)
func_2056_call = mod.get_global_var('func_2056')
func_2060_call = mutated_mod.get_global_var('func_2060')
const_2653 = relay.const([-1,6,-9,3,-10,-3,5,7,4,-10,4,2,-5,-6,-5,2,1,10,-9,-7,-7,9,6,-2,8,5,-3,-6,7,-1,-8,8,3,3,-4,2,3,-5,-9,-1,9,1,-4,10,10,4,8,-9,-4,4,-3,1,-10,-6,5,6,-3,8,5,-7,-1,2,4,10,-6,-8,-1,-6,5,-1,-7,-6,5,8,-2,-4,-7,-2,-10,1,-7,4,7,-2,-9,-5,-2,-9,-3,-9,-3,7,9,-2,-4,-4,1,-2,5,-1,6,5,6,-7,2,-3,-8,6,2,6,-3,8,6,2,-3,-10,-8,-9,10,3,-3,-8,9,-6,-1,8,3,-8,5,2,3,-6,-6,7,-2,-9,-9,4,10,10,4,-5,-3,6,3,3,-10,10,6,6,-10,-1,-2,8,8,-3,-5,9,-3,5,5,-3,8,4,1,-2,-5,-9,-9,-8,4,-9,-4,-6,-5,1,10,6,-7,2,10,-6,-6,-1,1,-9,-5,-3,-7,3,1,-4,10,-9,-2,-5,-6,7,-8,-6,-10,-4,-5,3,8,-8,4,10,-1,10,-1,-6,-6,10,1,-2,4,7,5,-5,-10,1,-4,7,-9,1,-10,8,9,-9,-5,5,-7,1,4,6,-9,-7,6,-8,-9,-7,-5,-4,-3,7,3,9,4,-3,-6,-2,6,7,1,8,-4,8,10,-4,-6,2,2,-1,-1,-3,-7,-3,-2,6,-6,5,9,-9,-7,3,5,5,7,2,-4,7,9,4,-10,9,5,6,-7,-3,10,-10,-1,2,2,-8,-10,10,6,-3,4,-10,5,-1,1,-5,-1,-7,9,-10,3,9,-4,-3,3,-7,-9,6,-3,6,-2,-6,-7,5,10,9,3,9,7,10,-9,6,3,3,10,9,-2,5,8,5,3,-3,4,-8,5,2,4,-3,-2,3,10,4,-9,-1,-6,6,2,8,3,-8,5,-2,10,5,6,3,-10,-7,-3,5,-7,-9,-2,7,-4,-4,5,-7,3,-6,-10,4,4,-10,-10,-6,-7,5,3,-5,-7,7,4,6,6,4,-10,5,-10,5,-1,8,-8,-7,7,10,-10,-5,-1,-2,4,10,-6,2,-1,7,-7,-1,-8,-6,2,-6,-4,-9,-5,-9,-6,-4,7,8,10,1,-8,2,3,-10,5,9,8,-4,6,-1,4,5,-9,1,-8,-7,-7,2], dtype = "int64")#candidate|2653|(450,)|const|int64
call_2652 = func_2056_call(relay.reshape(const_2653.astype('int64'), [10, 9, 5]), relay.reshape(const_2653.astype('int64'), [10, 9, 5]), )
call_2654 = func_2056_call(relay.reshape(const_2653.astype('int64'), [10, 9, 5]), relay.reshape(const_2653.astype('int64'), [10, 9, 5]), )
output = relay.Tuple([bop_2642,call_2652,const_2653,])
output2 = relay.Tuple([bop_2642,call_2654,const_2653,])
func_2668 = relay.Function([var_2640,], output)
mod['func_2668'] = func_2668
mod = relay.transform.InferType()(mod)
mutated_mod['func_2668'] = func_2668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2669 = relay.var("var_2669", dtype = "float64", shape = (4, 12, 4))#candidate|2669|(4, 12, 4)|var|float64
func_2668_call = mutated_mod.get_global_var('func_2668')
call_2670 = func_2668_call(var_2669)
output = call_2670
func_2671 = relay.Function([var_2669], output)
mutated_mod['func_2671'] = func_2671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2863 = relay.var("var_2863", dtype = "int32", shape = (13, 7, 13))#candidate|2863|(13, 7, 13)|var|int32
var_2864 = relay.var("var_2864", dtype = "int32", shape = (13, 7, 13))#candidate|2864|(13, 7, 13)|var|int32
bop_2865 = relay.maximum(var_2863.astype('int32'), relay.reshape(var_2864.astype('int32'), relay.shape_of(var_2863))) # shape=(13, 7, 13)
output = relay.Tuple([bop_2865,])
output2 = relay.Tuple([bop_2865,])
func_2873 = relay.Function([var_2863,var_2864,], output)
mod['func_2873'] = func_2873
mod = relay.transform.InferType()(mod)
mutated_mod['func_2873'] = func_2873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2873_call = mutated_mod.get_global_var('func_2873')
var_2875 = relay.var("var_2875", dtype = "int32", shape = (13, 7, 13))#candidate|2875|(13, 7, 13)|var|int32
var_2876 = relay.var("var_2876", dtype = "int32", shape = (13, 7, 13))#candidate|2876|(13, 7, 13)|var|int32
call_2874 = func_2873_call(var_2875,var_2876,)
output = call_2874
func_2877 = relay.Function([var_2875,var_2876,], output)
mutated_mod['func_2877'] = func_2877
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3048 = relay.var("var_3048", dtype = "float64", shape = (15, 13, 11))#candidate|3048|(15, 13, 11)|var|float64
uop_3049 = relay.atanh(var_3048.astype('float64')) # shape=(15, 13, 11)
uop_3060 = relay.cosh(uop_3049.astype('float64')) # shape=(15, 13, 11)
func_949_call = mod.get_global_var('func_949')
func_954_call = mutated_mod.get_global_var('func_954')
const_3064 = relay.const([5.355853,-3.589532,-5.620680,-8.148931,-9.298498,-5.847826,-1.854752,1.399696,8.976616,-7.345189,-3.214727,8.741529,-7.418461,6.650369,1.111071,-3.077242,5.238831,4.946049,-6.399670,-1.815840,-7.793678,4.133967,-5.735065,-5.935251,-5.093527,-4.181043,-4.592483,-9.239653,-7.848190,-1.219835,4.021670,-1.538203], dtype = "float64")#candidate|3064|(32,)|const|float64
const_3065 = relay.const([3.273173,2.755384,-6.366792,8.447010,4.331902,-9.385873,-1.882638,-4.146012,-9.934435,9.359390,-3.084102,7.034360,-0.702686,-8.215158,7.530250,0.856656,-0.050888,-5.247033,-9.519519,4.551854,0.385311,4.022204,7.414050,-1.978950,-3.722483,-4.507748,-3.037277,0.720131,4.735733,-4.704171,2.374635,-3.507617,-6.957953,-1.131083,-8.609689,8.048791,4.516131,9.301380,-2.490527,6.146644,2.409872,-8.443611,9.321442,5.561350,6.126794,9.151671,3.171488,-0.589775,4.687259,-6.760098,0.629151,9.797018,-3.815727,4.099019,8.410206,-8.242508,-8.979718,-2.384466,-4.007782,-7.085461,2.644815,-7.865642,9.132543,0.884076,6.111111,-3.417814,3.384378,8.843255,-7.997489,-9.467557,0.624389,3.869320,7.535630,3.414200,0.400842,-2.974244,-4.470729,0.676981,5.159508,-4.756016,1.566876,3.228338,-0.443002,-9.535670,7.925964,-9.000146,8.470080,-3.750876,1.533873,-4.409654,-4.011218,-1.042649,3.135990,-1.274550,-7.428599,6.561760,-2.347423,-4.313478,-6.050584,7.508656,6.870176,-6.068087,7.703430,-1.317706,1.572493,8.218280,1.436370,-2.988085,-9.531648,8.835101,6.490524,-4.047093,-3.646482,-7.711713,5.162961,-8.536705,-1.220267,-4.589254,-6.130081,-2.605230,9.249694,4.875652,8.929752,-1.091025,-7.612403,-9.558402,-0.400211,9.293371,3.899938,7.428912,-2.188753,-0.618522,8.902789,-6.113896,3.119222,4.864963,7.918942,1.553466,-4.581707,-4.538690,9.953912,-2.737181,4.256095,-6.805518,5.292286,3.658895,-8.232513,-0.838343,-3.506077,3.402597,-8.190487,4.026852,4.898767,-3.292598,-4.770970,-2.283167,-5.606746,7.503166,0.486425,-0.986138,-9.284382,-7.941613,4.358992,-0.407093,3.860760,4.152946,-8.498491,5.527449,3.046775,6.412930,-3.263570,-5.541764,-3.614498,-3.498127,1.415420,-6.805135,9.332852,-5.671540,-3.867847,-2.211986,-8.021518,9.334300,-7.746422,-3.217056,-7.468869,0.850753,-3.399037,1.554473,-9.040216,-9.736586,1.173293,9.813917,9.699588,7.603170,-4.210772,8.903148,-0.953288,6.275135,-6.532961,-9.438049,4.614649,7.277991,4.155415,-5.894435,1.649818,-9.599005,8.277519,4.726717,2.339539,-8.220679,-8.885035,0.043839,-7.168588,-0.404564,-1.921769,-5.192230,-2.780553,1.987786,-1.943882,3.792266,-8.454055,-3.866059,9.323240,-6.935923,7.491469,-1.343601,5.121870,-3.681258,-8.973403,-8.079436,7.612805,-7.442023,-9.476882,-2.038298,7.886090,-4.977292,4.314553,-4.703186,-7.826619,9.410541,8.275108,-5.732625,9.928657,9.476772,3.511082,6.758564,-3.303765,-5.787298,9.618730,3.383654,8.306716,2.345354,0.368471,6.009092,-8.433640,8.058653,7.345829,-3.061168,-6.266344,-9.720777,2.837586,-1.020174,-6.359836,4.820373,3.053121,-3.918994,-3.834769,1.094467,0.095119,-0.553213,-8.395213,-4.984865,9.090859,-7.269065,-0.292884,8.991811,-7.600491,4.953784,-4.831193,1.085362,5.261774,-5.479450,0.042281,7.450587,2.777816,-8.606571,2.490011,7.677405,-0.450284,-0.447941,-5.634617,-5.459681,-9.252338,5.913308,-8.430297,-8.101925,4.417693,-3.379562,4.428528,0.490979,6.049473,-4.512251,-2.738731,0.695304,9.964031,6.220314,1.795262,3.213697,9.722097,-7.284804,0.159405,-2.023460,-3.648101,0.936989,-6.165536,-7.223621,-8.950379,1.361139,-4.960877,9.502946,-3.655021,8.479929,4.109001,8.588235,-6.570796,-9.085403,9.213602,-2.188182,5.161361,9.323180,-6.763291,3.935233,-9.226705,-9.687882,2.791857,-5.839525,-6.414539,1.406142,-6.534962,7.439339,7.597652,-0.741568,-3.685488,-5.849398,-7.195405,0.744302,1.151845,-6.002491,0.462945,-2.577184,-4.839560,0.679467,-3.614868,-0.557594,2.207621,9.724637,-0.706393,0.187456,-4.472489,-5.491843,5.236824,-2.079312,4.245288,-9.331197,9.226411,2.534252,-7.686189,-0.386771,-8.490481,1.145807,-2.996910,-1.366017,9.514476,5.147537,0.627951,-5.541088,-3.386861,3.808581,1.801435,-0.077560,-2.121402,4.596522,-9.196684,8.601584,-5.039673,5.507342,-2.696615,0.170352,5.137640,2.923141,7.737169,-0.262439,-6.350737,4.601209,6.947802,-8.214264,5.573388,-4.031188,-8.628132,-5.649763,8.899853,7.150916,8.263567,0.313172,-7.936913,6.646224,-7.587393,2.500337,7.749555,8.889011,-4.431227,-2.504064,6.529972,-2.499927,5.430555,-9.575497,-4.998070,-9.778724,8.017002,-4.307018,-3.351962,1.144104,3.065145,-2.409582,9.936007,-8.369000,7.265645,8.739646,4.934882,-4.086522,4.416033,8.554203,0.176113,1.900806,2.595594,-1.193162,-1.430946,1.400600,-1.207060,-9.243565,6.655538,5.131519,-8.204574,2.471583,-4.417181,-3.901222,-2.797757,0.535573,5.330215,-3.726542,3.922254,-5.020813,-1.550502,7.198358,1.085963,-7.188952,-4.550033,-3.606675,7.392469,9.863630,8.237253,6.255424,2.006620,3.527625,9.172069,-3.735342,-6.894530,-2.246541,-7.175205,9.534941,-4.492860,-2.636169,-1.410983,5.352061,-9.970181,2.568727,-9.961046,1.794421,-7.093007,-5.503118,4.009887,-0.525233,4.842400,-0.911315,-5.225774,-9.417125,-1.282863,-3.861269,5.181774,-9.986985,-9.874524,7.439953,-8.478971,-4.497460,-9.440756,-6.109806,1.325748,1.837411,-8.328356,-6.438245,-4.554209,9.537500,8.919527,4.285635,4.964613,-6.092436,5.065147,-5.814198,1.465477,-9.295324,2.667219,2.977153,7.304295,1.887536,-3.318171,1.739417,-1.691726,3.179738,-3.025605,-0.116706,-7.975031,8.862946,2.319816,7.971704,-1.580039,-9.234790,8.371134,5.697829,-4.591511,-3.711237,-7.687219,5.265649,-5.043675,8.631780,0.450796,-6.353262,-4.184334,-3.887578,9.350179,-4.558834,8.036826,9.405989,-0.540054,-0.428718,2.121250,-5.518853,-7.476134,3.278414,-0.629637,2.912870,-1.366341,-0.024426,8.105824,-1.512047,-0.357846,-0.008367,3.670308,-4.302327,-5.665371,9.084033,5.948626,-2.155507,1.964462,-6.002031,-3.912250,-2.187672,2.452711,0.310902,6.190393,3.769817,7.724255,6.136707,1.141215,-7.231171,-9.685613,-0.048950,0.621761,9.192324,-2.004126,1.611334,9.573294,1.942012,-2.437368,3.070099,9.182701,1.015929,5.301861,2.217311,1.504226,-3.309548,2.466363,8.819122,7.902353,-9.912229,1.276184,-5.751730,2.425742,7.177246,9.060200,6.067452,-6.355664,4.346939,6.247603,-0.211907,-6.052277,2.618783,7.227758,2.101597,0.887983,-7.027222,7.682508,-7.783788,8.947872,-0.463234,-1.134579,9.554630,-5.360105,-8.888408,4.261617,-1.424930,-1.057216,-5.887574,7.070411,-2.326439,8.659192,7.729514,-1.429314,5.697683,5.100313,-0.925610,8.844744,-4.787179,-2.731204,6.341537,-3.637691,7.743999,9.189758,-0.013946,7.655500,-6.846896,-1.926555,1.908001,5.465622,-3.721944,-9.172168,-0.922445,-9.494618,-5.249703,-1.310348,-9.405356,9.990517,1.825052,7.815288,2.195837,-0.951562,9.220030,7.931812,4.248747,3.144483,-0.213920,-3.106547,9.407798,3.481554,1.634123,-8.957139,-3.518262,-3.809181,-8.513339,-1.678335,-3.747385,4.347188,6.077157,8.728113,1.229521,-5.928755,-4.160723,6.702825,0.405029,5.466234,-4.034176,-2.966858,-6.226354,-6.332446,9.490759,-5.876527,0.411077,3.636214,5.108160,-5.639620,-2.373205,-9.469207,4.286422,-4.168220,-2.824130,-0.754817,1.391884,-3.379821,9.509430,4.185531,7.161630,-5.785471,2.998218,2.539837,-6.233201,-3.665998,-2.194585,-1.007215,-5.611461,-0.347733,-9.932602,0.180477,3.565686,8.121270,-4.744911,8.801596,9.708226,-8.387704,-8.920424,1.904904,4.988756,6.221422,-0.556032,-5.463925,-7.254623,7.314720,4.949151,2.464096,-6.253227,9.931372,9.288137,-3.070902,-2.894231,4.989085,-6.795986,-4.666831,-4.959924,7.480959,2.393210,6.115614,-1.315376,-6.809096,8.155498,5.712708,6.249301,-6.275560,8.532864,7.748601,-2.151732,-8.205059,4.260003,-1.816995,-8.434055,-8.120476,4.288627,-8.892604,-2.249199,5.857570,-0.427978,-4.283932,4.810160,-6.382702,5.560161,9.284810,-4.667887,3.438901,-6.584888,-5.568613,9.781083,-0.197177,-3.894453,0.089597,7.415738,6.570501,6.015376,8.432770,-3.522806,4.923742,5.206452,2.506501,7.514149,2.289362,8.327619,-8.525671,-0.890974,4.661715,4.457330,-9.818337,-0.858008,-0.466221,7.985177,-8.660610,6.754057,4.574969,-5.028342,6.473930,1.686471,3.696423,-2.538301,-4.095695,-4.620498,6.212425,-9.604214,7.245369,7.773561,-8.665859,9.285551,5.575927,-2.158126,-1.850812,2.465012,-8.863095,-9.025090,3.634393,-9.446717,-7.661268,-2.730254,-6.789369,2.295075,3.358225,-5.596838,2.846296,-2.914870,-4.927470,4.887276,-8.104495,-3.147930,-6.993175,-8.374888,1.544322,6.467257,-5.175516,-3.058506,-2.485381,-7.805024,-9.231485,4.125841,-2.082351,-3.719476,-6.513378,3.541398,6.795278,-8.239035,7.295040,7.443214,8.087303,-7.695871,-0.848434,-7.419847,-3.479865,-1.786361,2.884533,-8.176158,-4.792104,3.578179,-4.773978,8.485306,-3.463137,6.295147,-3.960139,4.856513,0.906121,8.250869,-4.224273,-1.481450,-5.958978,5.299705,-6.342853,-1.256721,5.801426,-2.312992,-0.010900,3.147714,9.379908,-3.937140,0.111564,8.572937,6.285301,3.156112,-3.975063,-6.894936,-8.514759,9.247423,5.857436,4.264575,7.327714,7.916395,3.496797,-2.910600,5.292229,7.021610,-8.301791,-7.113602,1.648587,4.318240,0.935699,2.354379,-8.888571,7.474404,-1.081071,-3.514622,-3.244835,7.268431,-4.583737,-9.435359,1.619192,-0.327078,-5.643912,4.097005,-1.035351,1.425871,6.794536,-4.152485,1.640462,3.316967,-2.340306,8.085887,0.159568,7.586125,6.715784,-2.291285,3.050508,-2.569802,4.741330,1.326857,7.708717,1.784651,1.334070,-4.930799,0.615113,-5.459837,7.782668,-4.362019,9.203920,-9.332891,2.765385,1.312763,8.654289,-7.334973,6.632387,8.316244,8.006382,1.752637,-9.278716,3.288610,-2.182987,1.273684,-6.248973,-6.018019,0.802254,-9.650889,3.998852,5.591499,6.682712,1.429863,-5.711344,7.012423,-3.373331,-8.841730,-6.835811,-8.614759,-1.944772,-1.210965,-8.375854,-4.845521,1.010050,-2.046488,-2.909697,-4.791776,-2.510344,-3.036060,-1.284349,-6.917183,0.325463,1.179145,-4.528387,-0.218894,2.549165,1.929177,3.924959,-0.731139,-4.538938,-9.206087,-1.139181,6.245823,-7.950538,8.253859,5.494355,5.904649,9.374252,7.038506,5.215325,-2.194172,-9.859666,-1.921791,8.940296,6.630672,5.338359,-5.976283,-4.188399,-6.109861,9.173880,9.702723,4.856586,7.307993,6.125162,6.259328,-6.463885,2.262611,1.590706,8.419687,-2.523349,6.480757,-4.846412,-9.521991,7.611935,0.790205,-0.644771,0.527407,-8.883614,-5.359196,3.603942,-4.708154,6.091669,3.605694,8.075053,6.616836,1.136050,6.143107,-2.516719,-3.872967,0.577560,8.085329,-9.140538,9.024841,9.642140,-3.013883,3.578001,6.925181,-7.554774,-5.374002,3.175021,-5.594433,-3.055461,-2.266602,7.443285,-2.557816,-7.760037,-0.640616,-0.844619,3.796663,-6.179956,5.147337,-2.988604,-3.372053,8.814353,-6.769345,9.468213,4.018692,7.602561,-9.574897,-7.383947,3.498741,-1.458136,0.650281,8.742371,8.116426,-7.195573,-8.961357,5.166277,7.477977,7.676386,5.122628,-8.730381,-3.091371,-9.177252,-5.527001,1.811882,2.127780,-6.097273,-7.364609,-0.097249,6.961499,-9.054952,8.768958,-9.326584,-3.713016,1.042969,-2.835985,-4.866981,0.316037,-8.903143,3.560359,2.664772,9.825361,9.435712,6.433450,5.638951,-9.842013,-5.292863,3.831838,2.775387,-2.526094,3.178568,-3.082078,0.601921,-9.101400,-8.631594,9.764077,9.078038,2.231128,9.989026,-4.138138,1.860950,-7.631575,-5.215314,-5.332662,-9.849191,-4.747691,-5.802088,8.848993,-2.741469,4.207382,-6.481332,-7.049650,2.773813,-2.626652,2.573890,-7.033941,-9.257945,-9.411765,-5.170627,-4.266730,-5.946073,0.492941,9.056105,-6.619122,-1.877550,-8.023696,2.352870,-0.764067,-7.225438,6.405774,9.567964,-9.422720,-4.245211,4.057414,-8.165292,4.563226,-5.265916,2.478094,-6.382603,-3.415151,1.775472,8.548603,7.776875,9.275190,-7.613859,0.054046,-8.735950,2.799271,6.154851,-1.469411,-2.178976,-2.393464,-3.365336,9.944251,5.430868,0.963463,-4.617655,7.141213,3.577998,-4.956311,5.074505,9.839945,2.651559,1.117218,2.750068,-0.511536,8.730321,6.679023,-1.335684,-4.178767,-8.419267,-8.262024,-3.483353,-1.951636,8.099773,-4.202358,5.598677,-3.051248,-3.408834,9.211379,5.451167,-6.925623,-9.857460,-8.623259,-8.655066,-9.916277,1.681584,1.364537,6.925764,4.222359,-5.843139,4.049357,7.023112,6.678527,9.559320,-8.713429,-1.826104,-9.236063,-6.143202,-4.032413,4.826767,4.048537,2.104468,2.963122,-8.598110,7.419504,-3.790770,-7.797323,7.309552,2.312052,-7.037202,1.203695,-4.100490,1.299905,0.096170,6.403156,2.081377,4.818588,-0.034072,1.034157,3.773260,5.808101,3.018297,6.709463,6.639253,-8.448838,-3.531045,8.182682,8.857855,5.328358,-9.994944,2.036392,5.162767,-1.735822,7.301763,7.031350,6.506193,-1.143417,-6.371178,3.129448,9.110804,-1.787859,2.121328,-5.954766,-1.733096,7.089367,7.484219,-7.007918,7.011453,-1.494547,-3.559725,5.943706,-7.786385,9.792528,-4.256615,1.701351,-8.811315,1.869016,3.304773,-5.644807,-3.254691,-0.069898,-3.730643,-6.620322,2.853392,2.531410,-6.026360,7.227269,-4.680404,-2.625977,4.169639,-4.462304,4.315784,-2.219416,-1.839829,-4.902926,-1.296447,-4.527483,-1.133743,6.377160,1.936177,0.714832,9.295001,-6.737544,7.962410,-1.456627,-1.113425,-3.186499,5.069272,-0.155901,7.884487,-6.792239,2.913719,4.018389,8.882225,-0.849570,4.305471,5.892586,-1.755321,-6.792975,-7.720119,8.649553,-9.879834,-7.850930,-8.446043,6.660834,9.179243,3.999313,-1.243040,-1.492678,8.954738,-3.096894,6.427730,-5.215007,5.202526,0.529118,3.492928,4.359072,8.702449,4.028914,-1.601032,0.513040,-1.678619,0.464654,9.228711,0.278056,-8.619265,0.280637,9.668859,7.638472,5.489796,-6.997886,5.918351,-7.627382,7.409361,-9.877114,-2.323094,0.178649,1.659078,7.616534,7.412861,7.928771,-0.473034,9.520658,-4.384902,-2.861091,2.791991,9.544783,-5.661145,4.247345,3.106926,-6.457207,-7.858935,6.254929,-9.028585,-0.164296,3.295671,3.599968,8.837380,3.167072,4.295615,2.305786,-8.831138,-6.590896,-2.575801,-4.744964,1.749034,8.754258,-8.820545,0.757337,8.835312,-8.447575,-0.410483,-0.926298,-1.896811,3.123899,1.993111,7.821508,7.497682,7.157000,5.965638,-6.010064,-0.938143,-0.288826,-8.988668,5.818490,-5.973767,-3.210878,2.984872,-9.478099,-2.674327,9.721396,-0.583494,7.832244,-8.798285,3.814572,-8.828819,9.065218,7.651825,8.575048,8.476812,1.871079,3.098857,-3.318401,-4.985823,-2.883094,3.412720,-5.074331,-7.114760,1.235477,-5.372994,1.466799,-9.994654,4.116269,-3.679912,5.618118,0.304703,2.114938,-8.805194,6.285736,-5.832775,1.672524,-5.602831,3.936516,6.542026,2.076192,2.486678,-6.406056,8.465963,0.198282,6.515614,-9.648287,8.768110,7.362034,1.599270,-8.274948,-5.230495,5.446109,-0.022510,-9.105574,-4.440090,7.749438,-2.161509,8.957877,-0.611333,7.611139,-3.280318,-4.501278,-8.772447,4.617855,4.737436,3.754962,-1.061145,-6.502745,-3.911817,-8.712291,-5.416826,-5.991844,-6.416766,8.483669,5.504561,-3.654492,-0.885516,5.173843,-9.992269,-7.799561,4.733631,4.488666,1.693879,-0.377037,-4.813740,-5.597415,-1.614017,7.270253,-1.058945,5.226360,-6.069059,2.436475,5.779453,7.068546,-7.754787,2.593922,2.020710,3.377440,-4.700884,-3.507324,-3.105895,9.165183,-1.090883,9.825632,2.611694,-7.256973,-3.675394,-7.700664,-0.925753,2.244326,-2.118685,-2.344322,-2.568069,-2.908679,3.252145,8.873631,8.076754,3.189614,-7.860468,-9.028033,9.207458,6.230989,0.413112,7.281878,2.073588,-5.856538,6.735712,4.228252,-2.724172,-3.997521,6.874117,4.084165,2.268107,-2.685729,-3.477675,2.265073,4.185028,7.770105,2.283533,-3.438680,-9.593072,-3.586046,-1.290788,2.601284,5.962760,-3.880445,5.682767,4.800608,-3.197228,-4.038698,-0.518656,4.121248,-1.031729,-3.562534,5.714079,-2.181013,7.947535,-3.741348,5.160573,-1.421476,4.823442,8.781896,8.536115,7.971404,-8.925326,-1.938554,-7.635203,-6.165158,-2.250273,-4.548647,1.201861,0.671764,6.971008,-7.215442,7.924992,7.645660,-2.226685,-5.667390,8.642974,3.909128,8.390029,-5.804345,7.390292,8.136141,-5.654766,-4.520374,-4.958839,-7.502686,6.675205,-2.203754,-1.196867,3.630464,-1.584000,-4.002989,-3.160308,4.500874,0.125219,4.906514,-8.398191,-6.522698,-2.827637,8.659968,6.399241,-4.051298,-0.254776,1.740126,-4.201343,4.153007,-5.208767,-5.774506,-6.070196,2.486431,7.002176,-4.833370,1.112334,-3.144693,0.906344,-2.665711,-9.143276,6.756930,-6.577830,0.375585,-7.172616,4.689018,-5.045401,0.264763,-5.850589,-9.090555,8.394038,8.301951,9.374552,-8.923370,7.956621,6.227848,8.933819,5.928284,-3.947460,-3.288640,2.203263,4.152882,8.665636,-5.138320,8.148926,1.396340,-3.044729,6.444577,5.262607,-3.928766,1.494112,-1.918018,3.913151,-4.502093,-0.543401,-2.223195,-1.572845,0.452377,-7.929162,6.465705,-0.105941,-2.436741,-9.234222,-2.296464,0.250813,-0.052086,4.116382,1.620111,-4.705475,-1.847427,-3.486160,4.914822,-5.740849,-3.889033,-2.621218,6.060235,-8.071891,3.954902,3.968911,-5.625799,7.174714,2.179427,9.301505,4.865703,-0.908416,-2.149623,-7.864660,-3.496888,-3.451702,2.672157,-7.980341,3.323987,-7.338658,0.634906,0.520740,-3.929016,6.879089,1.767106,-5.762040,-1.994620,-7.954525,7.665809,-1.085809,9.641674,-1.243494,-8.993962,8.464623,1.889542,-8.978580,-4.085612,3.669431,-8.032752,-3.311341,2.521566,-6.469326,-2.757515,0.872553,8.304973,4.614300,-8.132379,5.440888,-3.033850,2.567366,-6.700647,6.771524,0.300341,9.250378,8.368230,0.200792,-7.194107,-5.470811,-0.827310,-3.491534,-5.271788,-6.652435,3.290624,5.184120,7.234779,-1.422920,-2.830972,-4.379289,-6.682723,-4.477228,7.241906,-7.224804,0.606180,-7.452594,-9.768459,-9.241168,-4.513529,-4.389796,-5.697540,-0.868300,-4.291589,-5.227686,-7.571095,-1.865903,-6.949904,-7.709583,-0.541905,-7.037472,8.940128,6.893951,7.605933,-8.290762,-5.133057,-6.615509,-8.636403,-9.785407,7.325570,-4.279223,5.308863,-6.902542,2.434365,-1.944404,4.239446,2.083674,2.494020,9.394100,-6.221191,7.578381,-1.952462,-0.742886,-5.592139,9.853543,5.672573,0.472599,-5.114947,-1.509173,-5.798475,5.021555,1.077150,-0.090065,4.504592,-3.766824,-6.472131,-2.016013,1.868451,3.378266,-2.193866,6.893328,-4.746150,-9.884801,-2.928304,-4.774176,4.844543,-0.993820,3.087721,-6.427371,-4.469938,-5.386372,-6.654371,6.279081,8.773127,9.040045,2.440168,6.238287,3.165144,-6.486084,1.085039,-9.557537,-1.773170,7.638163,8.106460,-6.282703,-2.879895,-9.974446,-7.541261,-5.781403,1.843462,8.285056,-3.532814,-2.107911,-1.364250,6.651199,-6.814980,3.713193,8.162926,-8.319018,-1.811706,-0.966828,6.322756,0.930147,6.811407,-3.884461,4.416748,3.958380,-8.378704,9.137973,9.430257,-0.557407,-2.031135,-0.685403,9.143763,-2.543145,-7.635853,-1.145137,-9.407835,8.831502,-2.424140,-9.511124,9.951030,8.031898,3.022654,-4.719139,-0.313732,-7.684535,-6.616498,-2.676240,9.530527,4.505121,0.959633,-0.827546,6.946110,1.588021,8.184579,7.595252,-2.080174,-8.786015,9.562987,-0.341684,-1.755476,-0.874464,5.646137,-2.277143,-8.758608,-1.591424,8.203961,2.104119,-6.021732,-9.238129,-5.467730,-3.014017,7.838300,-4.812149,-5.653240,-5.726381,-1.973917,7.021742,7.624823,-5.747194,-0.803653,0.196099,0.726211,-2.287817,-2.187720,0.321601,9.509086,8.236572,6.550527,5.994160,-1.920091,-9.259888,9.001254,-4.887372,9.472744,-4.422545,-3.168077,1.593296,-3.033996,4.809689,2.438247,0.136306,9.468085,3.972178,-4.808532,-1.325901,-5.505122,1.864522,-5.556341,-3.904339,4.000888,5.103793,-7.035051,0.497637,6.332243,4.907087,-5.310215,9.222689,5.593948,-7.027418,1.728993,-8.887749,3.698526,4.637201,-8.721039,5.884464,-4.660427,6.023556,0.512974,3.318934,4.967374,0.706722,5.713088,4.995550,9.432954,6.513014,-2.611176,-0.046071,7.430278,-2.792154,1.492563,9.715071,-7.135912,6.668303,-4.958160,-4.801541,1.929329,8.522051,-6.127743,-1.774254,-2.128960,5.130284,7.436124,-0.585085,1.634792,-4.788981,-2.430036,0.882287,-7.053378,-6.945535,6.598307,5.654093,5.739125,-7.858541,5.555820,3.922418,-9.408429,1.944642,9.490505,-6.750534,-1.872439,1.144017,3.756628,2.770381,8.297125,-5.042694,7.116918,-9.855223,-9.394650,-6.079425,0.142059,9.513070,-1.272111,8.503788,-8.230182,9.255357,4.798617,1.896481,8.065027,-9.334943,-3.103949,4.928659,-5.321343,-5.871202,-0.592938,2.794532,6.740319,8.243853,6.116573,4.041983,6.715595,-8.140418,1.424214,8.364347,-9.421433,-3.683342,-9.779920,-9.812405,7.383906,4.317452,-6.420999,1.442267,4.125662,3.993539,1.452611,-1.700940,7.470176,2.248973,-2.203700,5.086193,0.361535,8.058644,-3.725823,-7.361815,4.423302,7.461450,-9.066291,5.942129,-7.498113,-9.012402,0.796369,-4.608717,7.863922,8.885640,-7.484776,0.230365,-9.509460,5.009808,-3.430748,-4.254515,8.797044,4.915073,-4.568566,7.574901,-6.502892,3.114581,-7.394273,-5.107850,0.114633,1.493776,4.981588,5.479067,9.048473,-8.869177,7.862079,8.558780,-4.822993,-0.692507,9.011119,6.339623,-0.095233,8.011746,-9.083708], dtype = "float32")#candidate|3065|(2080,)|const|float32
var_3066 = relay.var("var_3066", dtype = "float64", shape = (1, 192))#candidate|3066|(1, 192)|var|float64
call_3063 = relay.TupleGetItem(func_949_call(relay.reshape(const_3064.astype('float64'), [4, 2, 4]), relay.reshape(const_3065.astype('float32'), [2080,]), relay.reshape(var_3066.astype('float64'), [192,]), relay.reshape(const_3064.astype('float64'), [4, 2, 4]), ), 10)
call_3067 = relay.TupleGetItem(func_954_call(relay.reshape(const_3064.astype('float64'), [4, 2, 4]), relay.reshape(const_3065.astype('float32'), [2080,]), relay.reshape(var_3066.astype('float64'), [192,]), relay.reshape(const_3064.astype('float64'), [4, 2, 4]), ), 10)
func_2056_call = mod.get_global_var('func_2056')
func_2060_call = mutated_mod.get_global_var('func_2060')
const_3070 = relay.const([-8,1,2,5,4,3,-3,-10,8,9,8,-10,-2,5,7,8,-5,-9,6,10,4,-7,-2,7,5,-6,3,-5,10,-9,-4,-2,-7,-5,5,-2,-1,-5,8,-2,7,-3,3,-7,8,10,2,-2,-3,3,-6,-6,-4,9,2,-4,-7,-9,-6,3,-4,-7,-5,7,-10,5,-5,-3,3,-2,3,-3,-4,-3,1,-6,9,1,-4,1,9,10,-8,-3,-8,5,3,-4,-4,-9,4,-10,-9,-8,-3,7,-6,6,-3,-4,-5,2,9,-5,2,-10,9,1,2,1,8,-7,-6,-8,-3,-1,3,6,-7,7,-7,8,-6,6,-8,-5,-6,1,-7,-2,-3,-9,-4,10,-8,-5,-3,-2,3,1,4,10,-2,1,-1,-10,-8,3,-3,-7,2,-7,6,6,-9,3,-6,-3,-7,6,1,-4,-4,-1,10,10,-8,6,8,5,10,-3,4,-5,-4,9,-6,2,-10,8,1,-1,-7,-4,1,-6,-9,9,7,-4,-4,6,-8,1,1,7,9,2,-4,-3,-8,-6,-8,-2,-9,-5,1,-1,8,-6,-1,-3,-10,-6,-1,-9,-8,6,2,-10,-4,1,4,4,-6,-5,3,9,2,8,-4,2,4,9,-6,4,-4,5,1,-4,-10,-7,-8,4,2,5,9,-10,-5,-6,10,1,8,-5,-5,-7,-9,-8,9,-9,4,-6,1,-3,-7,-7,2,2,-6,-9,6,-6,10,-4,-5,-1,6,1,5,6,-6,10,3,-6,-9,-9,-2,-1,-10,3,-7,4,4,-3,-1,3,-3,5,-5,6,7,8,-2,-4,-6,-10,1,-8,-1,-4,-9,-2,-1,10,-8,-9,-4,6,8,10,7,6,-4,-3,-5,-7,-5,9,-6,2,-7,-8,-10,7,-4,-1,-7,-9,1,-5,-2,-3,3,-4,2,2,-9,-10,-5,-6,-8,-2,-7,-7,4,7,6,4,1,-10,-6,-4,-5,1,-5,-10,7,7,2,2,-6,3,-8,-5,7,-4,10,-7,6,4,6,-4,4,6,-5,-4,-5,7,8,-4,7,-9,8,9,-3,-5,7,-1,-3,8,3,-1,3,-4,7,-7,8,1,-1,1,-5,2,-8,-2,-9,-10,-6,-3,-8,1,6,2,-5,9,-5,-7,-9,-10,-1,-9,-7,-3,10,6,-4,3,-7,2,-8,-6,-3,3,4,-8,-10,-7,6,1,-9,-3], dtype = "int64")#candidate|3070|(450,)|const|int64
call_3069 = func_2056_call(relay.reshape(const_3070.astype('int64'), [10, 9, 5]), relay.reshape(const_3070.astype('int64'), [10, 9, 5]), )
call_3071 = func_2056_call(relay.reshape(const_3070.astype('int64'), [10, 9, 5]), relay.reshape(const_3070.astype('int64'), [10, 9, 5]), )
func_2316_call = mod.get_global_var('func_2316')
func_2320_call = mutated_mod.get_global_var('func_2320')
var_3079 = relay.var("var_3079", dtype = "float32", shape = (1008,))#candidate|3079|(1008,)|var|float32
var_3080 = relay.var("var_3080", dtype = "int16", shape = ())#candidate|3080|()|var|int16
call_3078 = relay.TupleGetItem(func_2316_call(relay.reshape(var_3079.astype('float32'), [9, 16, 7]), relay.reshape(var_3080.astype('int16'), []), relay.reshape(const_3065.astype('float32'), [1040, 2]), ), 4)
call_3081 = relay.TupleGetItem(func_2320_call(relay.reshape(var_3079.astype('float32'), [9, 16, 7]), relay.reshape(var_3080.astype('int16'), []), relay.reshape(const_3065.astype('float32'), [1040, 2]), ), 4)
func_2056_call = mod.get_global_var('func_2056')
func_2060_call = mutated_mod.get_global_var('func_2060')
call_3092 = func_2056_call(relay.reshape(call_3069.astype('int64'), [10, 9, 5]), relay.reshape(call_3069.astype('int64'), [10, 9, 5]), )
call_3093 = func_2056_call(relay.reshape(call_3069.astype('int64'), [10, 9, 5]), relay.reshape(call_3069.astype('int64'), [10, 9, 5]), )
var_3094 = relay.var("var_3094", dtype = "int64", shape = (10, 9, 5))#candidate|3094|(10, 9, 5)|var|int64
bop_3095 = relay.floor_mod(call_3069.astype('float32'), relay.reshape(var_3094.astype('float32'), relay.shape_of(call_3069))) # shape=(10, 9, 5)
bop_3098 = relay.floor_mod(call_3071.astype('float32'), relay.reshape(var_3094.astype('float32'), relay.shape_of(call_3071))) # shape=(10, 9, 5)
func_2873_call = mod.get_global_var('func_2873')
func_2877_call = mutated_mod.get_global_var('func_2877')
const_3100 = relay.const([-6,-5,-7,6,-6,-1,-8,2,-9,-8,-5,4,8,9,5,-5,7,1,-1,-7,-2,2,9,9,8,10,-2,7,10,-3,8,-4,-6,-6,4,7,-4,-5,3,-10,-1,-6,5,-2,-3,-10,5,-3,10,9,5,-1,5,3,-10,-8,-5,4,2,-5,-3,6,-8,10,-10,-10,-4,-5,7,-6,-1,9,-3,-6,-1,9,-5,-1,-4,8,9,-9,1,2,10,-6,-4,-8,10,-9,-6,-4,-3,-3,7,1,1,8,1,-9,-10,5,2,1,9,2,10,6,10,-10,-1,2,10,4,-4,4,10,9,5,5,-10,9,2,3,7,8,6,-1,-1,-8,8,8,3,3,5,-2,-6,7,8,-1,-3,4,10,-6,8,6,9,-7,9,-10,9,-3,1,-4,-10,-6,5,-4,3,6,5,-1,-5,-7,-8,1,7,4,-4,8,5,-6,-2,-5,-10,10,2,10,-10,4,-1,7,10,7,2,-7,7,-7,-6,6,5,3,-7,-7,-9,-7,7,-10,7,-1,3,6,-5,-1,-7,-9,2,10,-5,8,-7,6,-1,10,-6,-7,-1,6,-7,-9,3,7,-7,9,-3,8,4,-1,-2,4,-2,-4,-5,-10,-9,-9,6,10,-10,-7,-5,-2,-1,-5,5,-3,-10,1,9,-10,-10,-3,-4,10,-1,8,2,-9,2,-7,3,4,-7,1,-6,-6,-1,-1,-1,8,5,-2,-3,-3,-4,3,-10,-3,2,5,-6,-4,-10,-1,-3,-5,-4,-9,-5,-3,3,-6,-5,-2,-2,6,-9,-6,-5,-10,-5,-9,1,5,10,-6,-8,-8,3,1,-10,-5,9,-10,8,1,6,-2,9,4,9,-4,4,1,5,-3,1,6,9,2,-7,-3,-6,9,-6,7,-4,-4,7,6,-9,9,-8,10,2,-7,9,-1,8,-10,-4,2,8,-8,5,-8,-2,-4,1,-10,-8,-9,8,1,9,-2,8,3,-4,-2,-5,-1,5,-9,-1,-9,-5,-7,-10,1,-10,4,-9,-4,10,-1,-4,1,-10,-8,-9,-2,-7,7,7,-1,-1,3,-4,4,-2,-8,-7,-8,1,-2,2,7,4,9,2,-8,-4,6,9,3,-2,10,2,-10,1,-5,5,4,-6,1,-2,-4,2,-6,7,-4,10,10,-1,7,10,7,-4,5,4,9,-4,2,-10,-9,-10,5,5,4,-6,10,-2,3,7,-5,5,7,-4,7,1,-10,7,1,-3,-9,-7,-6,5,-3,7,-5,2,2,-3,2,3,5,9,3,2,-2,-1,7,10,-2,10,9,-9,9,-2,-6,-3,6,-8,8,10,-10,-10,1,-7,-9,10,8,-1,-1,-8,-7,-9,-4,1,-8,4,4,-3,6,-7,8,2,-9,2,5,9,2,-4,-9,-8,8,5,8,6,-1,-6,2,-2,1,1,6,8,1,4,-9,-7,6,6,1,7,-6,-8,1,7,7,-5,-9,-1,-7,8,-9,10,8,-9,-7,-10,9,1,-1,-9,-6,1,9,6,7,1,-1,-3,-6,-8,9,8,-8,-8,-5,5,-5,-9,-8,-2,10,-3,4,-10,10,-5,-5,-9,-10,-2,-5,-10,-3,7,-5,10,-2,-8,1,-9,5,-10,-7,-5,-5,5,2,-10,-4,10,-6,7,-3,6,-3,5,-1,10,1,6,-10,7,8,-1,-4,2,-1,-10,3,8,-3,4,5,1,-9,5,-9,3,10,10,5,6,2,-10,-3,3,-1,-7,2,6,6,1,4,7,-10,-9,-10,2,-10,8,-3,7,-7,4,-4,-1,4,10,-9,-3,3,-5,7,-6,10,-10,7,8,-4,5,5,-2,1,-8,-10,-9,-2,-7,-2,6,9,8,5,-3,-10,-1,-6,5,-7,-6,-3,10,-1,-4,10,-8,8,-6,-2,4,-7,9,9,1,-7,3,-3,-7,7,-7,1,-7,-1,-2,2,-7,10,-4,-1,5,9,-10,-8,-7,8,4,-1,-8,4,5,5,-6,-1,-6,-5,-2,8,9,9,-2,1,-6,-9,-3,2,10,4,-4,8,7,8,8,-1,1,2,-7,-1,3,5,2,8,7,-10,6,9,-1,-3,5,7,-6,-1,-2,-5,-4,-3,-10,-10,2,7,10,-1,5,2,-10,7,-8,6,-5,-4,-5,-7,7,-3,-9,-9,8,-2,6,2,2,9,-10,-7,9,-3,-10,9,-10,-8,-3,-2,9,-4,9,-10,-7,-1,7,3,-1,8,9,-9,-10,-9,-8,-5,-6,-3,-7,4,-3,3,2,3,4,-5,1,-3,-4,5,5,8,-1,4,3,3,2,-3,-2,10,-10,-9,10,3,4,4,9,9,-3,9,-3,-2,-8,1,-3,-6,-7,-5,6,-1,-7,-10,-8,-8,3,7,-10,3,5,-8,7,3,-10,1,8,8,8,2,10,7,7,-1,4,-5,-8,-9,-8,10,-1,-5,2,4,5,6,-4,-9,8,10,-4,10,1,-8,2,-8,-9,-1,8,3,-1,-7,3,-8,7,-10,4,-4,9,-3,-10,-3,-5,3,2,-7,8,-8,3,9,-5,-1,-3,3,7,-5,8,-7,4,6,-8,9,-10,-7,4,-1,7,7,4,-3,7,-7,6,9,6,6,-10,-9,3,-3,2,-5,5,10,-1,2,9,-6,-3,-4,2,-2,8,-5,7,-5,2,-9,-1,8,-2,-3,-10,-7,-4,4,3,-10,-7,-2,-3,-3,-9,1,3,-4,-2,7,6,4,5,5,4,-10,8,-5,-9,5,-3,7,-10,1,8,1,-2,-3,5,-6,3,9,-6,-4,7,4,-10,7,4,9,8,7,8,-6,7,-1,-5,-2,7,9,-7,-5,8,4,-2,5,6,-7,-1,7,-4,-8,1,2,-8,-5,6,10,1,-5,9,-2,-1,1,-1,-1,9,4,1,-1,8,4,5,9,9,9,-3,7,10,-7,-6,-6,8,-8,-5,-10,4,-9,9,5,2,-8,-4,9,10,-5,-4,5,10,-1,-2,-9,4,-5,6,10,3,10,-2,-3,7,-1,10,5,9,4,8,10,-1,-4,5,2,-2,5,-5,6,-8,-5,5,10,-5,-7,-10,-4,2,-8,1,-4,6,5,-2,3,10,-10,-7,8,7,-4,4,7,-3,-2,-9,-7,10,8,5,-1,9], dtype = "int32")#candidate|3100|(1183,)|const|int32
call_3099 = relay.TupleGetItem(func_2873_call(relay.reshape(const_3100.astype('int32'), [13, 7, 13]), relay.reshape(const_3100.astype('int32'), [13, 7, 13]), ), 0)
call_3101 = relay.TupleGetItem(func_2877_call(relay.reshape(const_3100.astype('int32'), [13, 7, 13]), relay.reshape(const_3100.astype('int32'), [13, 7, 13]), ), 0)
var_3114 = relay.var("var_3114", dtype = "float64", shape = (15, 13, 11))#candidate|3114|(15, 13, 11)|var|float64
bop_3115 = relay.logical_and(uop_3060.astype('bool'), relay.reshape(var_3114.astype('bool'), relay.shape_of(uop_3060))) # shape=(15, 13, 11)
output = relay.Tuple([call_3063,const_3064,const_3065,var_3066,const_3070,call_3078,var_3079,var_3080,call_3092,bop_3095,call_3099,const_3100,bop_3115,])
output2 = relay.Tuple([call_3067,const_3064,const_3065,var_3066,const_3070,call_3081,var_3079,var_3080,call_3093,bop_3098,call_3101,const_3100,bop_3115,])
func_3128 = relay.Function([var_3048,var_3066,var_3079,var_3080,var_3094,var_3114,], output)
mod['func_3128'] = func_3128
mod = relay.transform.InferType()(mod)
var_3129 = relay.var("var_3129", dtype = "float64", shape = (15, 13, 11))#candidate|3129|(15, 13, 11)|var|float64
var_3130 = relay.var("var_3130", dtype = "float64", shape = (1, 192))#candidate|3130|(1, 192)|var|float64
var_3131 = relay.var("var_3131", dtype = "float32", shape = (1008,))#candidate|3131|(1008,)|var|float32
var_3132 = relay.var("var_3132", dtype = "int16", shape = ())#candidate|3132|()|var|int16
var_3133 = relay.var("var_3133", dtype = "int64", shape = (10, 9, 5))#candidate|3133|(10, 9, 5)|var|int64
var_3134 = relay.var("var_3134", dtype = "float64", shape = (15, 13, 11))#candidate|3134|(15, 13, 11)|var|float64
output = func_3128(var_3129,var_3130,var_3131,var_3132,var_3133,var_3134,)
func_3135 = relay.Function([var_3129,var_3130,var_3131,var_3132,var_3133,var_3134,], output)
mutated_mod['func_3135'] = func_3135
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3221 = relay.var("var_3221", dtype = "float32", shape = (6, 2, 5))#candidate|3221|(6, 2, 5)|var|float32
uop_3222 = relay.rsqrt(var_3221.astype('float32')) # shape=(6, 2, 5)
output = relay.Tuple([uop_3222,])
output2 = relay.Tuple([uop_3222,])
func_3227 = relay.Function([var_3221,], output)
mod['func_3227'] = func_3227
mod = relay.transform.InferType()(mod)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3228 = relay.var("var_3228", dtype = "float32", shape = (6, 2, 5))#candidate|3228|(6, 2, 5)|var|float32
func_3227_call = mutated_mod.get_global_var('func_3227')
call_3229 = func_3227_call(var_3228)
output = call_3229
func_3230 = relay.Function([var_3228], output)
mutated_mod['func_3230'] = func_3230
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3341 = relay.var("var_3341", dtype = "float64", shape = (11, 10, 1))#candidate|3341|(11, 10, 1)|var|float64
const_3342 = relay.const([[[7.288935,9.130421,-2.356784,4.461908,0.351874,-2.408146,8.589545,-4.613856,-9.880023,-0.815705,-1.280797],[-9.203941,-4.199925,6.768998,-9.416069,4.956202,-7.633264,-3.444729,-7.503165,3.483867,-2.554486,-0.974588],[5.047587,-7.115298,-6.710603,1.555179,7.601188,-8.018153,-3.402327,5.599892,0.497786,5.887037,3.419290],[-9.912862,6.147776,-8.514020,4.789435,7.952251,5.422801,-8.444538,-7.669417,8.399198,-8.090722,1.039551],[1.127829,5.254201,-0.995682,0.732962,3.360613,7.032421,9.163123,-4.434516,-5.132858,5.252406,9.278623],[9.269090,-7.680095,6.540790,4.442072,6.868682,0.949328,7.865094,6.743322,6.731842,-3.986158,8.671466],[-3.880840,-4.977524,-0.143294,7.593820,-7.523022,0.578284,1.500027,5.456171,-4.282095,6.769786,6.365085],[1.856004,1.183919,1.357133,2.235610,-1.396682,-8.131033,-7.487754,-3.001919,-6.087549,3.202574,2.937672],[-2.558602,0.879157,-8.770542,-7.087896,6.080762,-4.978391,0.289294,-8.125029,3.506472,-5.822076,3.650152],[-8.461204,-9.036705,-3.220712,-1.648920,-4.365132,-7.598036,1.640155,4.238545,8.067249,8.285322,8.753952]],[[3.319012,5.855620,-3.357601,1.262976,1.369286,-0.306202,-8.724238,3.559634,-9.874560,-4.733825,5.676807],[6.184786,4.822503,6.033248,1.535708,6.352823,-2.503605,3.802577,1.959569,-3.951165,-7.946203,-2.311715],[-7.658721,1.502584,-3.819119,6.225189,-5.912043,-4.795336,7.904272,-2.788278,-3.313173,-3.692473,2.667177],[-5.845637,-4.646436,8.227834,8.457725,1.980722,5.972013,-0.233445,-3.726518,4.254458,4.731309,7.846628],[3.092437,4.895134,8.642623,-0.423576,4.219000,7.955709,5.648733,-8.316000,5.450945,-8.934211,-0.330079],[-7.326845,4.698440,3.678014,0.835207,4.479852,2.190432,-2.796531,-2.168728,0.949668,5.960944,4.809619],[2.639155,7.450612,-7.366795,5.569412,6.676226,6.427128,4.795859,9.192910,7.257161,6.102463,5.298332],[-1.092638,-8.310490,5.613263,-6.567200,-1.901393,-6.797549,-3.767801,-4.781442,0.102099,4.645307,-2.676879],[-4.655988,3.593897,-9.493208,-6.518312,7.745693,-1.211091,-0.920825,6.338220,-7.199896,-2.413929,-4.997279],[0.136208,-4.665504,-9.191994,-8.894089,-7.184851,-1.177970,-3.810645,-1.134624,-0.950459,7.428357,3.578207]],[[-4.907609,2.328281,-2.613393,8.796660,-1.010726,5.108483,6.488682,7.055618,-5.687528,-4.451219,5.730411],[-0.727947,4.145770,5.017302,7.617469,-5.979451,-6.823157,-6.575561,3.735788,1.882074,6.881379,-3.781136],[-7.865545,-3.479690,6.816428,0.715438,0.291402,-8.739584,-9.135905,-7.272252,-1.550409,7.080189,-3.683683],[-8.704234,5.074967,5.460397,-1.338448,8.018135,8.932691,-7.429692,1.490484,-2.195968,9.488346,2.602035],[-6.155196,8.221333,4.518653,0.265792,-5.814479,0.821651,8.942143,-7.527044,9.112192,-7.129353,6.105712],[0.572875,-4.267585,-1.582721,0.872115,8.321648,5.197942,-0.558503,8.072050,-3.683799,0.749417,4.751393],[-1.390068,6.978532,-9.856974,3.058485,-3.340984,-0.751386,-1.092144,-5.982967,-9.936138,5.262745,-1.814349],[-9.649682,-9.876418,8.495909,6.067368,-5.305093,1.133051,8.232296,-8.336609,1.035551,2.938044,5.421102],[-2.823904,9.929133,-1.266000,-7.429102,1.431011,-1.530333,2.629726,4.281718,6.167260,5.760948,0.984133],[-1.023690,7.517728,-8.526189,5.725934,-0.770354,5.044949,-9.046768,-8.104042,-4.257773,-8.597277,7.641819]],[[5.316514,-5.238957,3.393459,0.175926,-8.202464,-0.778256,1.893170,-1.358769,-5.988084,5.362697,1.243486],[0.281592,-8.190281,2.440121,3.808136,8.792082,4.425805,4.473648,6.458561,-4.212452,-4.334693,0.013799],[4.417901,-4.739155,-3.606295,-0.666957,1.416808,5.462805,2.587976,-8.871202,-9.270040,4.391507,5.075301],[-6.727641,8.651039,-4.582161,6.675557,-7.294869,-3.462751,-4.101466,-0.892716,-8.801175,2.440688,3.203567],[-8.765992,4.870256,1.689765,-6.209275,3.554112,2.779228,2.131323,-9.122809,5.202245,-8.395331,5.138258],[-0.258051,1.471746,3.871714,5.417582,1.355278,3.893544,-0.371136,-4.429131,0.578564,3.350855,-4.478840],[5.580970,3.153322,6.018069,-4.467749,-2.366864,-5.121170,0.343009,-7.195382,3.698635,-8.347386,-3.920018],[9.407186,6.317254,-6.378028,-0.130443,-4.690309,3.279636,-9.744766,8.067500,3.860254,-9.179781,3.665454],[-0.368893,-3.007355,4.467825,-7.445014,8.257991,-7.061466,-0.608698,5.679918,-3.478460,-1.495770,8.198421],[-7.482004,8.207117,-0.551102,-6.788891,9.110241,-5.353856,-4.102633,-5.517111,4.546299,-7.305675,6.068360]],[[4.747604,2.769593,-5.661218,8.641142,2.082232,-1.031337,-5.317303,-1.553480,-8.393335,8.890643,4.327801],[-7.559623,-8.610840,0.142376,-5.080535,9.501200,4.145171,1.826883,0.353036,1.242130,-8.291532,8.117687],[-6.794638,8.032423,-6.805651,1.098804,-9.409832,5.831642,-4.949022,-0.863236,1.331234,-5.003940,-3.481932],[-7.985665,-5.015746,-6.210026,7.066045,9.004136,7.918094,-5.290306,0.626748,9.022627,-6.596261,-6.800549],[9.794498,6.241003,3.787640,5.942467,1.588381,0.729275,1.310889,-9.702890,7.251491,1.680158,6.237028],[-3.906649,7.934021,-4.335469,4.008546,-0.115240,0.715857,6.501272,8.892578,4.900012,1.814569,6.793934],[-1.986056,5.804011,2.162474,7.818487,7.289807,-9.307725,4.328717,-9.373987,8.079515,-2.223958,-5.013673],[7.102704,-2.997140,-6.292401,7.793572,8.395972,3.351982,-0.006871,0.070834,7.661818,7.098177,8.972889],[6.230490,2.933067,8.134898,5.583811,-0.716694,2.202678,2.599889,-7.950026,6.107849,1.321747,-8.503692],[-1.346943,2.655743,-5.188407,3.103182,1.005899,7.679707,8.038163,-1.677324,-2.080475,-3.822955,-3.619832]],[[1.101496,-6.310323,-8.502123,-8.224430,2.465561,-8.093897,-5.504407,-2.187541,-2.232651,-5.333302,-1.150865],[-7.357077,9.891631,8.262563,1.760653,7.154599,-7.968171,0.616627,7.646351,-0.914110,-8.143246,1.165828],[5.866252,-3.093758,-0.705067,-1.443155,2.669093,8.592991,1.471114,-1.314331,-3.721161,-5.778657,6.611733],[4.295889,7.975999,-4.824348,-2.161021,-3.107074,8.216580,-2.859390,-9.776403,-8.949070,6.736607,-2.439847],[1.678587,8.550463,-3.765000,-9.923937,-9.890115,1.844525,0.838989,6.067715,5.801052,-4.536147,2.926950],[-6.209655,0.888740,4.433669,7.225867,0.630350,-6.220199,-1.645309,-6.365992,-3.319575,1.013653,-6.217322],[5.537395,-3.388768,-0.466751,3.148178,2.264417,5.460140,2.973162,-8.333729,-2.751807,4.230955,-3.136962],[6.152176,-7.556360,9.885966,4.128411,9.572775,-7.996180,-2.704817,-5.396941,-0.204427,9.557142,-1.005764],[-5.999246,1.132119,-9.219113,7.466915,1.998529,-2.640763,-5.508657,8.106627,6.883621,7.980315,-1.087058],[-5.990751,1.277486,5.164146,-6.221515,7.337718,-7.710042,8.011628,6.917439,5.891865,-1.727276,8.867522]],[[-9.666977,-5.140125,0.864856,1.008648,5.299275,-2.736492,-0.623408,-5.811299,3.425032,7.174621,-4.614877],[-3.808223,7.607576,-3.207690,5.812444,-8.785215,-4.195519,-7.857054,-5.715534,-6.526799,1.796669,6.770459],[-6.033518,5.106494,6.189036,7.138371,9.924456,-8.912428,0.907535,-0.157854,-5.538917,-5.430687,-5.143890],[-1.455714,-2.335704,-6.105359,5.338218,0.058799,0.667142,4.323432,6.560695,4.903470,-7.999914,3.473498],[-4.570936,4.641025,4.409344,-0.747124,-6.963278,-4.085195,1.856464,-4.359138,-1.168179,-2.329116,-1.268959],[7.457524,-2.414781,8.408334,-8.829467,-0.426268,-1.804872,0.284693,-7.565571,6.431012,-6.995650,3.680052],[8.550828,-0.006510,-3.614569,0.022442,-3.344974,-1.627350,2.769890,9.627865,6.443570,0.829746,9.023227],[1.525331,-3.918982,-8.205103,-4.915953,-0.361809,-5.245609,-5.959768,5.113493,7.036132,-0.189494,-8.880358],[6.986800,5.358409,0.162942,7.880607,9.285244,-7.526999,0.555537,-9.694595,6.151329,3.481137,3.330857],[-7.336567,-1.339024,-0.431723,0.096963,-2.541300,-1.100892,2.789596,-0.013754,0.303919,0.445503,0.268023]],[[-2.771253,8.568812,-0.102104,2.278577,-0.056792,-5.689299,-8.584925,1.181026,3.312205,-4.774983,5.297504],[-3.530285,-9.284369,8.275135,1.070928,2.261136,-2.439336,9.970831,4.577005,-9.358219,-7.217859,-4.080368],[6.999260,3.919071,-0.363841,-6.556052,3.473111,8.470892,-2.818255,-3.623464,-4.239376,-5.166449,-3.208198],[8.916657,-4.785357,8.449663,0.860095,1.707779,0.279238,7.831224,4.172258,1.980443,-5.186453,-6.792120],[7.835132,9.628324,-3.131312,-8.899548,7.840871,0.605521,8.171918,3.431974,-8.771450,9.737686,3.155335],[3.966237,-9.879457,3.527804,-2.845964,-2.159197,-3.598390,5.494445,9.448348,6.975158,5.506007,-0.693158],[0.735750,5.340116,3.341711,2.329706,-6.560063,7.209347,9.177656,3.519823,-3.352212,8.267542,8.589384],[-7.940066,-1.853333,-7.719222,-2.931827,-1.445461,-2.668468,2.107327,-3.703392,-2.248465,-4.241036,-7.553468],[-2.775668,7.112770,8.163940,-6.308758,6.671631,5.137463,-6.899300,2.979591,-5.250436,5.008955,-9.443203],[-8.701058,0.164987,0.595643,-6.016180,-2.571539,9.945852,-6.724032,-2.642753,-5.064920,5.590471,-5.338061]],[[3.569595,-1.896929,2.707229,-5.531122,-1.901911,0.897872,9.295341,2.560315,-9.695232,-5.815423,4.956197],[-2.719310,4.411951,1.028282,-6.636190,6.813531,-2.248661,6.155948,5.732973,1.064724,0.503909,2.838780],[3.031996,-1.297927,-4.484049,9.637359,2.712096,-9.259208,-2.581237,0.069062,5.355776,-2.917798,-0.216206],[8.658654,5.711614,-7.589220,1.444683,2.289610,-3.550612,-6.141511,6.847762,7.652002,0.654813,9.225858],[1.967164,-8.306376,1.774085,-7.091523,0.170522,2.952348,-5.438407,1.016019,-5.218152,-7.378439,-2.194590],[2.423229,2.552929,6.947421,-4.549083,-5.567067,7.681682,-7.390951,-4.682290,9.790560,2.917148,-8.842043],[-6.317527,7.747990,8.297103,4.193244,7.064535,2.842045,5.753756,8.861727,3.231356,-4.604015,0.680325],[-8.842580,6.956411,6.816965,-8.040767,4.239821,9.164184,0.111494,-1.138753,-7.042959,-6.118155,-4.041646],[-2.788715,8.066236,-3.062290,0.259883,3.471438,4.452779,8.948387,4.557050,-6.738508,-1.784893,3.560194],[-5.477747,-7.439462,2.912922,-0.472634,9.015787,-6.585579,0.563412,-7.742969,-0.255379,-6.294708,-7.389449]],[[-8.309062,0.799795,-9.552795,-5.815662,-2.693397,-8.961492,7.771421,3.140445,2.899030,2.667285,9.529562],[-2.713037,0.097049,9.993836,-3.177943,5.077985,5.807624,-7.358202,-6.884518,-2.221146,9.156815,6.785129],[-8.066112,1.238851,9.514199,8.038967,9.269582,-2.153893,-1.012145,-6.349905,-3.675969,5.221141,-1.704108],[3.209960,-2.775095,6.271458,-8.200554,0.690510,0.183968,9.740654,0.479956,-6.797827,-1.030408,4.551451],[-1.975035,-6.301934,3.812018,0.202057,9.009732,-1.288727,-2.418234,2.641852,-2.399668,9.319434,5.016318],[8.073393,-2.927952,2.854461,-6.121826,9.267675,-7.876550,2.798892,-2.678119,-0.638800,-4.303025,9.125987],[-3.348363,2.830660,6.301804,1.284298,2.049172,2.341732,-6.714046,9.231298,0.774642,3.587924,-3.088532],[3.513223,7.700294,-7.479773,-7.508049,-3.200041,-5.625657,-2.742841,5.129741,4.473880,-7.828611,-1.125892],[3.362350,0.054243,-9.466959,3.548432,-7.601673,8.624271,-9.846582,4.612294,-7.578165,4.175605,0.209735],[-7.784048,6.489540,-6.655939,5.343513,-5.157552,-7.205080,6.480818,9.281968,7.493413,-9.937185,0.018607]],[[-1.149561,6.924945,6.494227,3.208479,-2.780393,5.358650,9.400849,0.479174,-1.989543,-4.991638,-3.146727],[4.669481,-7.042874,0.740953,-4.551181,9.599876,2.655300,1.145073,0.670441,4.933096,-7.235180,-4.893642],[-5.137686,-0.792764,3.354283,0.623445,2.113594,3.809105,6.690035,-4.799390,-6.740920,-7.758069,-0.031456],[-1.590462,4.542323,-0.671926,-4.564457,2.907106,-8.757043,5.089648,-7.782622,6.747024,7.798859,6.605566],[4.338792,-9.557441,1.250949,8.988699,-9.304875,-2.552174,-1.884970,-8.336665,4.782264,2.805774,7.335868],[5.764675,-9.434125,3.737676,-1.770824,-3.419866,-3.846050,0.787246,-8.644618,-1.392908,-0.596952,-2.296639],[9.918141,6.869782,-9.136214,-0.655113,2.448805,-0.514908,8.054432,5.228554,-5.980024,7.233708,6.845152],[1.733044,-6.490577,-7.394892,-4.449521,4.358228,1.595931,-0.544763,3.129580,-1.823505,-4.342409,-4.068575],[-9.489735,8.483453,-3.524818,-2.747865,9.140341,1.972767,5.136417,-3.951930,-2.285735,6.196666,-1.507248],[2.583862,-7.607556,-4.925323,-6.696426,-0.130372,5.353643,-4.239089,6.884485,9.886852,-5.179157,-5.968006]]], dtype = "float64")#candidate|3342|(11, 10, 11)|const|float64
bop_3343 = relay.add(var_3341.astype('float64'), const_3342.astype('float64')) # shape=(11, 10, 11)
output = bop_3343
output2 = bop_3343
func_3348 = relay.Function([var_3341,], output)
mod['func_3348'] = func_3348
mod = relay.transform.InferType()(mod)
var_3349 = relay.var("var_3349", dtype = "float64", shape = (11, 10, 1))#candidate|3349|(11, 10, 1)|var|float64
output = func_3348(var_3349)
func_3350 = relay.Function([var_3349], output)
mutated_mod['func_3350'] = func_3350
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3440 = relay.const([[[9,4,-7,9,1,6,5,8],[1,-10,4,10,-7,-4,6,-10],[2,-6,-8,-2,2,3,-4,-7],[-6,9,2,7,4,8,5,-6],[-3,-9,-9,1,9,-9,7,-7],[2,-7,5,-6,9,-2,-3,3],[-3,10,-3,3,5,4,-9,6],[-7,8,7,3,-9,10,5,9],[-8,-10,-7,3,-7,5,10,-9],[-4,-10,-8,-9,-10,-8,-4,1],[-7,-3,5,8,4,2,-5,-10]],[[-6,10,-5,-3,-9,8,-2,-5],[3,3,1,2,5,9,4,8],[2,-8,-8,2,3,-9,10,-4],[-2,-2,10,-8,9,6,-9,-5],[-2,-7,-3,-6,-10,1,-10,4],[-4,5,-2,1,-2,-5,1,1],[-3,4,7,4,6,9,2,10],[-10,4,-9,1,3,-4,8,-10],[6,-10,-3,-2,2,6,5,-2],[2,6,2,-5,-7,-9,-6,7],[2,-7,-2,5,2,-7,-9,3]],[[6,5,9,3,10,-1,3,-10],[-7,-10,-8,4,8,9,2,-1],[1,8,-5,-4,-5,3,4,4],[10,10,-1,-10,-6,8,-10,8],[-6,-1,-9,6,-9,3,2,-5],[-3,4,9,-5,-4,-3,-4,8],[-9,-1,-4,-4,9,8,-7,6],[8,-4,-6,2,-1,-4,7,-7],[9,-7,-8,-7,8,-8,10,3],[-4,5,-7,9,3,5,5,8],[-1,-8,4,5,3,-7,7,-1]],[[8,-10,2,-2,-3,6,-10,-2],[7,-1,-7,5,8,-3,1,-6],[9,-3,-5,7,-4,4,7,-5],[7,-7,2,6,-3,5,-4,-4],[-6,5,4,9,-5,3,10,6],[6,6,7,-8,-3,-6,-3,-10],[-9,-10,5,2,2,-1,5,-2],[1,9,-9,8,-9,7,-5,10],[-9,9,-8,3,-8,4,2,-4],[-3,-2,-7,2,-7,5,5,-5],[6,10,7,-5,10,6,-5,-6]],[[1,-1,-10,-6,4,-8,9,-5],[9,10,-9,-9,-4,10,7,-10],[-5,9,-3,-2,-6,-6,-4,-9],[-6,-7,4,3,-2,1,-10,8],[-1,-3,-1,3,-7,-4,2,4],[-2,3,10,8,-1,-1,-10,-10],[-7,-7,-10,-10,3,-8,7,3],[4,7,-3,5,-4,9,-9,-6],[4,7,-6,-2,10,4,-3,-7],[4,-2,1,-3,6,-8,2,1],[9,-3,4,-4,5,-2,-6,5]],[[2,-6,-5,-7,-2,-7,-3,4],[6,-7,-1,7,-10,4,7,-5],[-7,4,-2,4,-10,-10,-9,2],[-10,-8,-3,-6,-5,10,-10,-4],[6,10,3,-1,6,3,-6,3],[-8,-8,9,4,6,7,-9,-4],[1,2,-9,6,-4,1,7,-5],[-6,-6,9,-8,-5,1,-5,8],[9,9,-3,-3,5,-7,7,-7],[-7,7,-2,10,-9,-1,6,-10],[9,4,4,1,1,-2,-3,3]],[[-10,7,7,-1,-8,1,-2,-10],[-10,-5,10,-6,7,1,-4,2],[-9,10,-4,-4,-3,-8,-6,8],[-1,-2,10,-3,-5,8,3,5],[-7,-7,4,-5,6,2,2,-10],[2,5,10,-10,6,-4,6,-10],[4,7,-1,-7,-6,1,-10,2],[-4,5,-8,-1,-10,5,4,-2],[7,8,-2,6,-3,-7,-1,4],[-9,-1,3,1,-7,-1,4,-1],[3,-10,4,4,-5,10,-3,3]]], dtype = "uint16")#candidate|3440|(7, 11, 8)|const|uint16
const_3441 = relay.const([[[-4,-8,-9,-4,-2,-1,-8,-10],[1,2,-10,5,-3,-5,4,3],[-3,5,-1,-10,-5,2,5,2],[10,3,-6,6,-1,-8,-7,5],[9,3,-10,5,-5,1,-10,5],[1,-4,8,-6,-10,-4,-5,-8],[-10,6,-5,9,9,1,5,3],[-6,2,-6,-3,-5,5,9,-6],[-6,10,3,-3,-1,6,-10,1],[8,2,-6,-2,3,10,-3,-2],[9,2,3,-8,2,8,3,-10]],[[7,-4,-6,-3,-6,-2,1,9],[5,-2,9,-1,-4,-6,2,-7],[-7,-1,9,-5,-1,5,-10,10],[6,-4,-3,-9,-7,3,1,10],[5,5,9,9,7,-10,8,2],[3,10,-4,3,4,-3,-10,-4],[-6,8,-9,5,-3,-2,-4,-5],[-2,-3,6,8,-3,-6,3,5],[9,7,10,-5,-9,-4,-9,2],[-5,-8,2,-2,6,-8,-8,-10],[-6,-6,-3,1,-5,-4,5,-8]],[[2,3,1,-9,-3,-7,9,7],[-6,-4,-3,-10,-4,-7,-2,-9],[-2,-8,-10,-9,1,-4,-3,8],[4,-10,-8,7,9,-1,10,5],[6,4,-10,9,-9,4,1,-3],[3,-4,-8,-5,7,-7,-7,7],[-8,9,4,-1,-8,4,6,-6],[3,-2,-3,7,4,-6,-8,6],[4,6,-1,10,2,1,-3,7],[-7,8,-9,-9,-1,-5,8,5],[-7,1,-7,-9,4,7,7,3]],[[6,-5,8,-7,10,6,-5,1],[3,10,-2,-7,9,4,-9,-9],[10,-9,9,-7,-7,-7,5,4],[10,6,-3,8,8,-7,1,-1],[1,9,-5,6,-9,-6,-1,-2],[6,-2,-2,2,-2,-8,-6,-4],[-10,-4,-1,-9,-3,7,-9,6],[-5,-6,-9,-9,-7,6,6,2],[-4,3,7,8,-8,6,3,3],[-2,-5,7,-4,10,10,1,-4],[-8,-2,8,7,-6,5,6,-5]],[[7,1,-5,8,6,-3,-10,2],[3,-5,6,9,6,9,-10,-2],[8,10,-10,-1,8,3,-1,8],[-1,-7,4,8,7,-3,4,5],[1,-5,4,1,-10,-10,1,6],[-10,8,-8,7,4,4,7,9],[-5,-1,10,2,6,2,-1,-9],[3,8,-6,7,-3,7,10,-8],[-10,-7,2,-2,-1,-6,-5,5],[6,7,6,-3,5,-1,-8,2],[-1,-8,-8,1,-5,4,-6,7]],[[-2,-6,-8,-1,1,-10,4,-6],[-10,-8,-7,10,10,1,2,-9],[-2,-5,6,-7,-10,7,-8,-9],[-9,9,-9,-5,10,4,6,6],[-8,2,7,-2,-6,-10,-2,-3],[7,-5,8,5,8,9,5,-3],[6,-9,-5,-1,8,5,2,10],[-9,-10,-7,-8,6,-10,-5,-6],[-8,-6,-5,-4,-10,-4,-7,6],[9,7,-10,-2,2,-7,-7,-8],[9,-10,4,-9,2,-9,-8,-5]],[[10,5,-6,-6,1,5,-8,4],[8,-2,-5,9,6,6,-4,5],[4,-5,8,-9,7,-6,-9,-4],[4,1,1,-9,-7,-3,8,6],[7,-2,-3,4,5,8,-10,-10],[2,-6,-1,-10,-9,-1,10,-7],[-9,1,-10,-3,-7,-10,5,3],[-1,-8,1,-3,10,7,1,8],[5,-1,6,-1,-5,10,-2,7],[2,-8,-3,5,-6,5,8,-7],[-3,-7,4,-10,10,-9,4,6]]], dtype = "uint16")#candidate|3441|(7, 11, 8)|const|uint16
bop_3442 = relay.bitwise_and(const_3440.astype('uint16'), relay.reshape(const_3441.astype('uint16'), relay.shape_of(const_3440))) # shape=(7, 11, 8)
func_2447_call = mod.get_global_var('func_2447')
func_2450_call = mutated_mod.get_global_var('func_2450')
var_3471 = relay.var("var_3471", dtype = "uint64", shape = (1248,))#candidate|3471|(1248,)|var|uint64
call_3470 = relay.TupleGetItem(func_2447_call(relay.reshape(var_3471.astype('uint64'), [6, 13, 16])), 2)
call_3472 = relay.TupleGetItem(func_2450_call(relay.reshape(var_3471.astype('uint64'), [6, 13, 16])), 2)
func_2668_call = mod.get_global_var('func_2668')
func_2671_call = mutated_mod.get_global_var('func_2671')
const_3474 = relay.const([[0.096103],[6.342801],[-2.456839],[4.136403],[1.101545],[-6.779941],[6.376450],[0.826553],[-5.147961],[6.413301],[-0.104401],[-3.678594],[-8.304895],[9.205502],[-6.878352],[-5.753365],[-5.053522],[7.020163],[-4.454633],[-3.479991],[-4.111912],[-6.748472],[-4.852467],[6.513765],[-4.793698],[-6.714150],[-7.198114],[-4.476182],[-7.914823],[-4.627119],[8.806489],[-8.136072],[-6.965875],[6.496623],[-0.752250],[4.729341],[-9.482251],[-6.239738],[7.869144],[-5.538105],[-5.169626],[7.025330],[6.826340],[-2.959855],[9.221140],[8.757105],[1.981653],[-0.927122],[8.629145],[-1.644010],[4.667293],[7.763527],[4.431491],[4.776347],[6.849095],[3.603412],[-5.252218],[8.057800],[-4.469777],[6.482497],[-9.788581],[-8.885261],[-9.871913],[0.391159],[-5.289492],[5.778316],[7.915949],[-3.490236],[-8.339579],[-3.684191],[8.116452],[2.000684],[-9.747787],[4.274598],[-6.274071],[-9.066740],[5.462500],[-5.463246],[3.214645],[-6.036191],[-4.472810],[7.705471],[-5.042588],[-3.589725],[7.350331],[-4.631568],[-7.814516],[-0.186127],[-5.239861],[4.857249],[-9.781801],[5.007792],[5.736687],[9.376943],[-7.371472],[-7.490611],[0.727675],[-5.048390],[0.723319],[-3.184979],[2.034317],[9.423148],[0.551119],[-6.214981],[-1.867388],[-4.129483],[3.215319],[-0.534616],[-7.345923],[2.712341],[4.422291],[2.640605],[-0.522584],[-0.461893],[-8.091335],[-9.776975],[-4.075607],[-4.056822],[-7.503645],[6.128250],[-5.115744],[3.505847],[-1.801401],[-7.329573],[-0.961591],[9.373110],[-0.369419],[-2.626540],[-7.924303],[-6.884715],[-5.550634],[9.923968],[1.928275],[-6.138883],[-9.096848],[-7.442124],[6.039374],[3.588854],[6.161034],[-8.526611],[2.204150],[-3.256926],[-5.579772],[-3.223202],[8.905747],[-9.252071],[-6.528310],[-4.237720],[3.298918],[7.536969],[6.280968],[-3.538524],[2.437862],[-5.847779],[-2.907949],[-6.413975],[-0.743913],[9.049006],[-9.083716],[1.941121],[-5.185625],[1.775897],[4.159283],[-3.620089],[-2.659849],[2.398391],[1.059011],[-3.817850],[3.736021],[-2.966894],[-4.185875],[2.735101],[6.173867],[7.583269],[9.777653],[3.053940],[-2.126371],[-3.030819],[0.963598],[-8.175376],[-8.501851],[1.740459],[-0.530891],[-7.843974],[-5.180561],[4.121909],[-5.487220],[1.836223],[6.104323],[5.723765],[7.980333],[-7.946655]], dtype = "float64")#candidate|3474|(192, 1)|const|float64
call_3473 = relay.TupleGetItem(func_2668_call(relay.reshape(const_3474.astype('float64'), [4, 12, 4])), 0)
call_3475 = relay.TupleGetItem(func_2671_call(relay.reshape(const_3474.astype('float64'), [4, 12, 4])), 0)
func_949_call = mod.get_global_var('func_949')
func_954_call = mutated_mod.get_global_var('func_954')
var_3498 = relay.var("var_3498", dtype = "float64", shape = (32,))#candidate|3498|(32,)|var|float64
const_3499 = relay.const([5.100061,-5.037256,-4.185647,-0.074825,-3.869980,5.482866,7.156863,7.530017,-1.664264,7.381715,-9.871540,-9.951472,-8.160075,-9.365220,7.018093,-3.849324,9.503830,-9.897154,-0.060523,-2.508816,-4.490933,-3.174991,-8.453385,-5.734226,2.607472,-0.511447,8.713065,-1.460117,1.097078,9.587423,-6.884618,-9.428987,-0.155371,1.841250,6.229898,-6.672393,9.373933,-4.679095,-7.135288,3.425340,-9.008931,2.221343,-5.104861,1.431862,-5.557672,-7.278840,-6.851139,-2.294233,8.071889,-7.621977,2.459410,9.723049,5.916582,-9.069063,-7.021666,9.548380,-0.873463,-3.185684,0.748181,-1.972781,4.470598,-3.808460,0.935806,-1.696151,-2.949733,-6.406944,8.258816,-6.983804,0.185803,-0.692296,-5.691558,-7.981226,0.370703,3.504997,-1.514893,-5.051056,2.377974,-5.536428,-5.595721,8.594309,6.431508,-6.522626,3.842766,0.019320,-7.051617,1.752291,4.115484,5.140061,-8.289329,2.912269,-9.266930,-6.631020,-7.299101,3.877949,-9.990654,2.268480,-5.938921,-9.656354,9.349319,-6.526663,-4.641899,-6.269553,1.892341,-1.713688,9.388078,-1.215380,0.392656,6.143486,0.592470,-4.388667,2.056993,8.344688,-5.413710,-0.615028,9.417741,2.813429,-6.663329,-6.063478,1.463431,1.431070,-6.266811,-4.176596,1.556554,-7.852636,-5.594544,-2.006160,-6.953482,0.307499,5.337176,-2.229506,-0.711937,-9.629758,-4.584205,-5.433207,4.652613,-6.556431,-3.154014,-3.829511,-8.045886,-8.078652,5.291223,-1.537907,9.284310,-8.677498,6.128877,6.573693,-9.746809,-9.446300,-4.247026,-8.593885,7.581838,-3.792494,-1.491919,1.019423,9.805669,3.464531,-8.557007,-9.538682,-8.711602,-0.750175,-8.136916,1.580408,-8.702290,2.574858,9.057472,-9.680699,-9.813562,-3.598590,5.457416,9.181010,6.762398,-6.061072,-8.744442,6.667272,9.583928,9.140710,-5.277058,2.651753,-7.481887,5.941731,-9.426308,-4.705584,-9.276224,9.337803,-0.044767,-6.697488,-2.829443,2.120149,-0.401278,7.275436,6.818687,4.942741,5.557321,-5.336224,5.280480,3.086782,3.755948,-0.940180,-3.247578,-1.022245,-3.549402,0.623772,8.951610,8.735224,1.311155,0.373882,1.623368,-1.155191,4.677943,4.957345,2.202672,6.036129,-2.295267,-9.441769,6.084111,-8.722812,-6.488260,-2.820656,-4.977414,7.956348,-5.193339,-0.318227,3.729991,2.473635,5.156573,7.959254,6.026039,-5.318161,-0.131053,4.470726,9.544679,9.865466,1.389450,4.286189,1.112480,8.427175,1.856632,-0.749911,2.408813,-8.495785,-7.837485,5.861407,-7.104418,6.838704,-4.511147,-0.589985,-7.299589,4.296676,-1.489002,-5.624915,4.131397,5.759978,2.112104,3.348605,4.052354,-8.887265,0.033530,-3.467418,6.086695,-6.885758,-8.259253,1.455175,-5.320974,-3.254589,4.307029,2.415147,-5.607769,4.502433,-1.576811,-6.674404,-7.663828,3.171746,-9.538540,3.566661,6.977639,-8.020976,7.483260,0.209853,-1.718058,-2.093913,-8.849776,8.897968,-0.385753,-4.188316,9.312380,7.151402,4.527713,-0.299348,-9.404379,9.251357,2.342072,7.783177,6.479396,6.916146,-2.970007,5.400578,8.294630,7.839750,-4.272846,-6.604468,3.622272,6.989079,-8.886988,-8.079798,-1.544286,-6.446412,7.118329,-2.309102,-5.729329,2.963880,9.210262,2.656518,7.425297,-4.004310,2.618998,8.117536,-5.849695,8.574631,-6.971877,6.701735,-9.160980,3.294183,7.126561,-0.270405,8.442968,-7.388859,1.857202,4.641729,3.881160,-5.859086,-3.556205,8.370334,-9.010133,4.947661,-9.736823,4.870138,-5.767645,5.327059,-8.686977,-0.217193,8.343941,-8.076378,-3.113687,8.209226,-3.986584,-5.189439,0.557407,2.724039,4.398223,4.958404,-4.093111,-1.941810,7.028396,-2.770583,4.063719,1.471234,-3.955099,3.289224,6.357220,-2.753072,-7.711713,-3.197326,-1.413671,-1.925135,-9.951355,1.041137,-4.718100,6.905178,5.825366,-4.818763,-4.447631,6.941849,6.567002,-6.026663,5.230284,-8.586308,7.838241,-5.893431,8.458160,2.260564,-8.729966,-2.559912,-6.049147,-2.881668,1.545944,3.053869,-4.401202,-9.744966,9.509383,-1.760519,6.538567,3.620969,2.578503,-3.602879,-3.571872,-8.992775,7.138151,3.545427,-5.587958,3.199429,-2.335275,-6.788711,-5.297422,4.741295,9.696712,-4.190192,-3.848845,7.991142,5.521922,-6.435436,-2.943129,-4.017667,0.390338,5.463495,1.047969,-8.276430,0.834536,-6.494557,2.452079,-4.061905,6.913670,-1.560705,-6.827058,7.433493,1.006248,8.561718,-0.434381,7.877071,6.438598,-5.386989,-5.719191,8.440247,2.951456,2.565133,8.160494,3.159489,-1.426320,-6.653804,9.649967,8.973753,-3.122883,-3.339434,-7.110803,-3.755754,8.871705,8.818592,4.123192,6.874340,-4.901608,-2.821485,-9.608126,1.990227,9.378548,9.837725,7.396051,4.759115,8.818251,0.807697,-3.912134,-8.907884,-4.880884,4.520555,-7.314042,-7.235382,9.605520,-5.831316,-2.592889,-6.426736,1.656157,-8.528917,-6.798555,-4.648066,-2.030043,-4.648112,-0.436903,-6.501744,-9.321233,-9.828132,-2.901046,2.153279,6.316460,-2.272469,0.593626,5.392357,-5.815560,-2.820839,-7.608880,0.005225,-9.551853,7.984051,-4.239476,8.677008,8.148360,9.252876,-2.030537,2.461709,-6.660378,4.120020,-1.195709,-5.768768,-5.628249,-0.853348,-2.467657,4.354129,8.274592,3.314090,-8.187653,-3.812693,-2.804599,-2.561420,-5.172256,9.182561,0.052297,8.702867,3.248797,-9.010961,-5.859771,-6.652607,-3.313523,9.864705,-2.256914,8.393882,8.014199,-8.706437,3.439665,-4.466289,-3.928090,-2.446146,-7.850090,-4.773728,-8.470257,8.803391,4.139915,9.349455,-0.370074,5.864729,9.911762,0.305262,-1.481591,-5.373168,-4.123502,9.312054,-6.050966,-6.369909,2.448265,4.838550,-0.247483,-6.205043,-2.002908,4.990677,-7.802156,-6.427804,-0.055043,-9.717487,7.042912,-9.391457,4.620177,5.303294,-6.169612,-3.387741,-8.013635,3.993696,6.001236,-0.113453,2.247888,-7.110158,-7.469881,1.487905,-4.422569,0.556386,-7.082768,-5.496441,6.041154,-7.252295,6.153726,-2.427069,-7.495351,-8.533488,9.101602,3.691109,2.952618,5.890631,-0.016579,-0.855638,-9.592616,2.422639,8.278120,6.315034,2.288252,-9.279664,-0.047001,-8.456859,-8.248160,-9.093514,0.890915,-5.555204,6.134723,-6.095495,-9.760749,2.312333,-7.357363,-8.682903,-0.212845,-2.592307,0.229542,-6.315582,0.689549,-5.527480,-9.060390,-0.790237,-9.283443,-4.068088,-4.715636,-1.371912,5.629781,2.432100,-2.585146,5.274985,1.672931,-9.562203,1.582613,3.393656,0.451023,-9.096705,-8.767359,7.322524,-4.759251,0.097122,-3.866974,2.366603,1.427760,3.161244,-7.457588,-7.659281,-1.439832,-4.170633,1.506852,7.232802,8.085887,-7.787863,-5.960885,1.467177,8.436229,2.290060,-2.445912,0.705511,9.761785,6.732299,-1.470413,-7.644798,-7.090723,-0.362036,-4.804502,-2.886715,6.837212,6.536570,-2.336178,-3.626879,0.108920,3.469591,4.778952,1.345497,3.519706,-2.730759,-3.401953,-5.478741,-7.320471,7.090940,-9.261549,-1.183676,-4.522060,7.955278,-5.943963,8.001153,0.735466,7.422942,5.489159,-8.261537,0.755611,-7.880404,5.093187,-5.925068,2.436070,-6.025964,4.371655,-8.869357,-9.107258,-7.765328,6.229587,6.358220,-9.369133,9.760983,4.646471,-5.188321,6.564013,2.978877,-8.343157,-7.503935,8.550203,9.862973,3.259421,-0.678923,-4.897063,3.858441,-7.748735,-3.868818,2.354381,8.030094,4.572161,-8.166208,-1.157921,2.469345,1.678248,9.358652,-9.231139,-3.471967,-4.596218,-5.968923,9.045590,-6.794997,-7.818202,4.499574,5.173588,-9.885765,-4.998760,0.156493,-0.628057,1.558644,-1.032880,-0.177867,-9.729203,-2.169099,-0.314067,2.824561,-1.402624,7.738162,-7.387310,0.388421,7.224885,2.764033,-5.954247,8.875780,7.073496,-4.935768,0.450286,4.581956,8.267863,-2.051565,-3.967726,-1.079736,9.275524,1.458519,-6.316268,5.032121,-4.449156,8.719080,5.819524,-1.193459,-5.865905,-7.915786,3.138061,2.370701,-2.367045,-1.751615,3.679545,1.930066,1.855581,-3.779587,0.586914,3.196306,-6.557969,-4.700353,4.892674,9.069802,-5.090348,6.938060,6.664531,-7.316626,-1.362268,-4.519489,9.026407,9.062722,-7.864492,-6.101750,4.040422,4.251778,9.708636,-4.162010,-0.681289,-7.091396,4.114854,6.648250,-8.961204,-7.557786,-9.856279,-8.801686,1.103859,-4.532178,2.921721,2.570690,4.680128,5.461532,3.234225,6.532928,8.289518,-5.950953,-7.950513,6.521915,5.738723,3.920583,-0.319235,-9.524382,4.565082,1.556317,7.064891,-4.910869,4.697289,1.593535,8.453683,6.190676,-9.665274,6.904604,0.480973,3.991342,3.274432,-2.875194,-3.182772,9.023611,-7.341652,0.322347,8.779712,-0.225544,2.902533,5.375255,-5.710412,6.526435,-1.495062,1.239704,3.224890,5.148191,-1.758224,-1.843949,-8.482571,-6.480869,-7.980339,-0.160743,5.626963,-5.894230,4.696235,6.321244,-3.842306,-9.058239,-0.713820,-1.328870,0.134548,-0.245276,-1.088620,-1.398305,-0.918031,7.268719,-4.248752,-8.319506,-9.864728,-6.702388,2.411272,7.426232,-3.241049,-5.555336,-2.887066,-9.381648,-8.938301,2.171764,8.573602,2.334571,-1.016253,-6.756434,9.322309,0.523780,-4.851828,1.759966,9.198251,5.050729,-3.872841,-1.512541,0.069798,-0.804630,1.645880,-6.880080,-1.215942,-8.849642,-4.025718,6.974455,-9.707543,1.467007,7.607777,-0.835775,3.584615,-0.826642,6.090428,-8.225475,-4.468198,1.748723,-7.513605,-1.095261,4.239798,-4.266784,-9.841039,5.046011,-7.766298,5.315352,4.267946,-1.565997,1.934815,6.773435,-7.468401,0.904214,-0.377351,-1.193123,-2.934331,4.781043,-0.542407,5.467187,-5.810888,3.922110,4.425119,-9.362199,-8.486773,-2.585049,6.165065,-6.516048,5.824200,-7.409138,-0.553056,6.312142,-4.797342,9.093470,-8.649299,5.600937,6.591386,9.749850,8.883333,-3.473386,-3.930268,3.439431,-2.413377,9.271255,-9.710066,4.948016,3.829907,3.170510,-6.333666,-5.390966,-6.632491,8.425725,-5.903552,-5.915553,-7.689875,8.846354,0.231627,-7.307690,-6.973192,-7.864978,-0.478383,-7.445467,-3.355719,9.402823,-4.413786,6.698679,7.951259,-7.722670,0.417413,4.776372,3.617429,-4.053016,6.444916,-5.671125,0.832748,-1.816024,0.473056,9.747977,8.769580,-4.941589,-5.839872,-5.038093,-0.975172,2.637826,1.314023,9.093828,8.478186,-1.438652,-6.745619,-0.105569,5.833422,4.470166,3.536908,-6.190311,2.603524,-2.051202,-2.267487,3.244351,-2.642094,-7.344700,3.782250,-2.045930,8.915280,-8.055526,-3.583564,1.474990,5.749191,-5.283770,5.672346,5.543186,3.306950,-5.752230,-4.184617,-5.862988,-7.181940,5.039498,-5.580757,-2.364649,-1.953925,8.208759,-6.657112,-2.324661,-6.681037,-3.487129,0.265644,-8.201515,-7.314048,-5.766058,1.473987,0.499608,6.493734,1.352157,-3.116306,4.510631,-2.941741,5.038616,-5.593551,7.836933,-0.128441,-5.870387,5.531586,-3.618339,-5.260582,4.736846,0.127241,9.217943,4.182503,-9.668729,8.729786,-1.714763,0.124638,-4.212467,2.945885,-4.942919,6.192236,0.942510,9.525728,-3.116176,-0.331153,2.063635,-5.987650,-2.485448,-3.785390,-0.112782,-6.727217,2.371485,-3.879328,0.607767,9.330095,-1.358460,2.079621,-8.353043,3.995830,-8.933182,-8.802175,-4.834828,-0.721358,-5.007366,8.924697,-5.048440,9.656304,1.951440,6.635549,4.442518,-8.527514,-5.786824,6.395443,0.147649,1.915725,-0.285626,9.669249,4.595790,4.536736,-7.198812,-0.590697,-4.790572,4.449574,9.267898,4.557925,6.558407,-8.021080,6.317871,-4.528990,3.133195,-2.386911,4.882921,-7.765164,1.595789,-2.406548,-0.707001,8.426882,-1.405526,4.466283,1.424004,-3.696362,-8.680066,-4.525819,-2.281669,-3.308052,0.961695,0.117410,5.533725,9.711456,5.521655,-0.613564,-1.693103,5.883731,-0.722697,-9.124604,3.166118,8.017633,-8.764053,5.298129,-2.036361,-8.194873,-9.825609,5.002590,8.401836,-2.295034,-0.704544,-9.112919,-0.901465,-7.924928,-6.607389,7.397081,6.528968,-1.147392,-6.074693,0.663422,5.744889,-4.156211,2.064832,7.844531,-8.931942,-6.371961,3.587113,2.630356,-5.013421,-5.124132,2.471257,-3.871688,-0.496458,-7.097931,-9.181628,-5.844928,1.694212,5.066444,-8.393733,2.931176,-6.401804,4.388877,-1.908732,-7.403415,-3.346784,-8.497447,-2.310417,7.021026,4.442640,6.623950,4.660429,0.298790,1.033477,3.082077,-0.813838,-6.391646,-2.507995,-3.384349,1.634257,1.252156,0.660863,3.032316,-6.590625,2.467462,-4.072552,1.826851,-4.122644,-0.912500,6.293927,2.861768,-0.820081,6.229030,8.141768,6.114231,-2.398880,6.782093,-5.312884,8.785114,1.230606,-5.391581,0.083300,5.022933,8.079677,0.434116,5.533921,-1.587794,5.310083,1.997632,6.570003,3.881025,1.438756,9.745743,8.250169,3.996363,7.068782,-7.465675,7.903772,-9.089315,7.167551,-8.178978,-8.119072,-8.414562,-6.035232,2.475475,-4.572142,0.850594,2.387837,-0.696622,8.710011,9.176767,7.110424,1.738933,5.866300,4.221650,-8.839729,1.156054,-9.084542,-6.317710,2.781821,-6.500861,-3.583965,-5.998742,6.446758,-9.407133,-7.080484,9.113146,1.134155,-4.708362,8.765125,1.804783,0.068019,-0.221447,-3.763529,-8.826878,-9.761329,0.253606,-8.170613,-8.153928,-5.760748,-5.039938,-5.727668,8.097020,6.664469,-3.551849,4.353533,-5.461339,5.822312,3.388262,4.048644,3.181359,-9.261150,-8.917726,-8.618217,-1.051432,3.921862,7.421357,8.736611,1.504675,4.476612,1.940033,5.964644,3.105771,-2.801027,-3.200174,3.034081,-6.247563,-9.574245,-9.784114,4.915753,-3.439740,-6.882453,7.213894,-5.765416,-3.001692,-5.853815,-2.880019,1.497163,-7.387356,-2.648788,5.930600,6.395756,-4.461796,-4.017565,-3.823557,9.413468,-9.418201,1.344153,8.616566,-9.691288,8.814792,3.524228,-2.856273,7.058784,0.979904,5.215200,5.246907,-9.331400,-9.414378,3.062327,-6.394546,4.646374,-9.439846,-3.573035,-4.442975,5.484153,-4.539060,-7.233170,9.945350,7.766112,8.093442,3.043368,9.786083,-4.268395,-3.186203,7.542204,3.537046,8.321981,4.827996,9.471663,-0.800219,7.024550,-6.629664,9.089738,4.879845,-8.556775,0.436054,-5.512851,4.053411,-5.761251,-1.361459,-3.294379,1.773096,7.272598,-0.789907,-0.066314,0.344141,0.278860,6.534510,0.349043,2.659174,-6.119177,7.231801,-4.136488,1.752389,-6.132922,-1.469983,1.811414,-9.781220,-7.449993,-7.302283,2.974436,-0.763295,6.036654,2.884710,-3.043446,-4.193566,4.908249,8.254312,-0.098586,-6.817454,-1.930015,6.113072,-3.358482,-9.844544,-7.710170,-6.103043,-2.981151,-4.004808,-8.187390,-4.570784,6.391732,8.179702,-8.962299,-5.465850,-5.907927,0.269456,0.303239,-1.965798,-3.877210,-4.363821,1.787650,-1.607484,8.297922,5.635450,-8.730690,-7.974387,-5.677642,-1.989223,3.202977,4.994930,-9.872969,-6.724338,-0.198189,3.992493,-9.325774,5.171504,-1.649338,8.754518,4.296820,-0.724463,6.636094,6.379262,-1.119382,-7.189065,-9.144300,2.974918,1.116956,-5.148147,5.182706,-5.704914,7.437047,5.593689,-5.286086,3.391239,-1.113439,3.230976,-7.197738,4.453123,9.542431,-0.995630,-8.393436,-7.167148,-9.195482,3.495765,-6.105766,6.125048,4.958023,-0.115541,1.816602,2.470578,3.427784,4.618237,2.742330,-7.428949,2.205884,-6.900554,4.228111,1.155079,5.146168,5.308138,-7.897629,7.887657,5.333006,4.140020,8.976494,-3.776077,-8.903394,5.398544,1.176972,-7.498721,-5.692367,-8.637527,3.456870,2.690143,-1.929895,-2.881058,2.635207,-2.801209,8.555699,-7.895736,6.319403,3.371121,-7.911683,9.947403,5.045636,-1.655808,1.704287,0.629294,-2.754482,4.416841,3.959076,-8.200125,-8.682677,7.338557,-3.264998,-1.755111,7.620491,8.216521,-7.493603,1.299816,-8.914388,-0.241035,-9.418609,-5.883601,-4.913858,7.640707,-1.938932,9.612665,-5.185930,-7.310150,-2.801777,-1.658266,0.582662,0.856416,7.339319,2.857195,8.986480,5.190439,6.916792,-1.496708,0.953297,9.640698,7.891537,-4.137387,7.103527,3.355180,-1.861147,0.533788,0.498196,5.019232,2.937929,3.258620,-2.698913,-8.060378,-6.007210,-2.758738,-5.311689,8.655086,-2.547511,-8.291338,5.725252,6.438530,3.013352,2.636839,7.461113,8.698864,1.034529,2.087985,1.687530,0.558876,6.471799,-4.491515,7.223760,9.233068,3.536799,1.592723,8.490547,-4.408598,-4.884098,-2.145379,5.029582,-1.484232,-4.114657,-7.583055,-3.626142,6.658298,4.066988,5.373705,-8.118683,-7.202607,-5.247924,-7.196010,-5.380953,9.019716,-2.466615,7.415950,7.420180,-8.581117,9.227138,-2.528939,-5.540435,6.169956,7.710922,-4.600058,-9.738678,4.652250,-4.922926,-0.699824,9.706904,4.157292,3.695186,1.726396,6.730461,-8.995425,-9.516886,-8.741618,5.025106,5.281277,-9.640587,-0.653341,-1.260297,-3.380815,5.323484,-4.914483,-9.238659,-9.689592,-1.822053,-5.513683,3.145522,-3.032690,7.127618,-3.482509,7.173759,9.080622,1.262171,-9.407413,-6.759992,-5.706639,0.397044,-8.412055,8.014213,-8.242096,-6.515482,8.327207,6.884992,1.821464,-3.609318,2.536343,7.985445,6.091849,-5.930031,5.196944,-2.594192,-8.818100,-6.679139,3.678343,3.729206,8.065066,8.306502,9.299329,-9.273342,1.591535,-3.891947,-6.715202,-1.298742,-9.511221,3.286880,7.307865,-1.624177,-4.998042,-9.833785,-2.588209,7.332261,5.351325,-0.247207,4.474303,4.837035,1.217315,-1.094504,-4.261696,1.609668,2.033165,-1.459803,1.123057,1.328369,1.428621,8.867265,2.063389,4.810752,7.781195,-3.685043,-6.733191,-5.119078,3.801106,-0.056135,6.798399,1.550769,-9.876202,1.478526,-1.864901,9.019886,-9.922600,4.523513,7.136532,-7.732713,-7.844036,-5.995721,-0.528845,-9.022185,7.239923,6.473184,-7.910673,2.951826,-1.967316,-0.610864,2.792159,-6.844946,7.213058,-9.302733,-5.168235,6.712597,9.756134,-1.664831,-9.472176,7.057827,7.123473,-1.426489,8.679300,-8.130102,-3.775382,-9.185750,5.835313,5.283243,-0.489238,0.183283,-4.195654,0.542639,-2.323453,-2.396400,-1.329934,-2.300653,-2.761187,-2.426156,9.435801,-7.362242,0.808220,0.417150,8.249133,4.404265,-6.913008,9.648420,-1.784655,-9.833981,-6.664005,2.443577,2.069382,-1.727313,2.507092,1.377481,8.056758,-3.745180,4.174920,4.032359,4.313969,-0.672236,-4.942287,-4.574716,5.810741,5.847520,5.114616,-8.441417,8.886372,0.494915,5.807115,5.929538,-8.678426,-6.357986,6.780333,-9.366677,-4.686624,0.265299,-2.473884,7.027376,-0.680917,2.312597,-4.747571,-2.930833,-6.056589,-9.079915,9.163812,1.888118,4.319117,7.021023,5.948455,7.160943,-2.273001,-8.346390,7.996628,-6.046795,9.801877,3.625963,-2.337001,9.760871,6.188118,-6.284169,1.165536,-8.112613,3.430225,2.478579,-2.326694,6.075976,5.181567,2.978097,9.523786,2.008679,-6.266118,-3.406216,-0.553446,2.715611,9.649669,-6.523159,6.908776,-5.749513,-3.747050,-3.028964,-4.846370,-2.820776,6.428465,-2.534514,4.866598,7.787801,1.469538,-7.455002,0.463474,0.781264,-9.598839,1.380839,4.612203,-4.855837,-7.289075,-1.934766,-5.876419,-3.716290,-1.149953,7.234967,-1.085371,8.261254,-1.250012,-8.428469,-2.768034,3.397076,6.669612,-2.338613,-8.827484,3.496278,3.814262,6.605304,-3.478014,-8.911503,0.086625,-8.878857,-3.335254,1.160332,-6.978277,2.591002,9.971091,3.029071,0.250185,6.662185,-4.651538,-9.165728,-2.151703,-9.968518,-7.407217,-0.651973,-0.995089,3.414689,-9.673856,6.311340,-6.888461,9.986051,5.815905,5.608826,1.057872,-2.888450,5.733722,1.073362,5.805834,-2.966678,-8.155785,9.171775,9.580879,-5.787201,0.143072,-9.271884,-7.980217,2.920276,-2.306925,-2.702805,-9.642648,-8.734708,-3.094037,2.876877,1.314817,9.306013,-8.565393,-3.113553,2.019277,-3.400429,-0.668998,2.092655,-0.361163,3.413793,3.798299,-9.759489,-9.291620,5.884660,0.248977,-0.817489,-2.421533,-2.294921,-0.322799,-9.114793,6.981640,-0.694988,-7.552017,-2.983592,7.646117,4.505056,-4.124893,-3.370460,-2.103386,7.163472,-8.787645,-0.294863,6.102671,-9.365752,3.336095,1.097698,6.793849,2.924086,6.320249,-3.663423,9.922677,2.185236,-7.509130,-8.525874,1.845690,-3.724371,-6.056515,-5.366885,0.547173,5.954355,-7.568279,-6.920869,2.710753,3.744403,9.802311,2.611142,3.254209,-9.192432,-2.491081,6.596999,-3.369839,7.887945,-3.760656,-5.989016,-3.360436,9.023131,7.766681,-0.001187,4.358640,2.581717,-5.997443,2.538350,-4.940024,0.716993,-2.237044,-4.542793,-4.722649,2.705078,-7.834182,-7.637525,-6.940048,7.507133,4.916498,-9.191770,7.551481,-8.248142,-8.467466,3.939881,9.718589,8.657485,5.229718,0.751789,9.741061,1.743091,-2.181018,3.449809,9.730868,-8.959371,-2.437869,8.398443,7.003132,1.177399,1.673764,-4.673458,3.370851,-1.488804,9.744794,-1.929642,6.058378,-2.886351,-3.952723,-9.638966,-2.538902,-2.087427,4.172704,-9.543824,6.108964,-8.230214,3.630557,-8.575200,-3.894716,6.426599,-9.446714,-8.174676,3.821571,1.408734,-6.194249,7.462572,6.236646,-4.096899,1.470932,4.133262,-1.055480,9.672449,-5.269677,0.460433,0.486133,-8.939814,-5.802160,3.443263,-9.513197,3.160568,-2.736532,7.431527,7.407595,-1.292040,2.366484,3.088239,0.593989,6.973394,-4.390513,-5.106012,8.709965,1.784044,4.299038,-6.182750,-5.079309,6.609104,-6.335847,-1.944349,-6.555812,5.778502,-5.379724,5.596550,3.817037,6.659097,1.316289,0.919425,-2.629906,4.336024,2.621101,3.202042,7.916879,-9.981571,-7.688161,4.893497,7.267001,-4.089827,-2.117595,8.911672,-3.445335,4.944807,-8.349401,-3.579478,-9.620836,7.823017], dtype = "float32")#candidate|3499|(2080,)|const|float32
call_3497 = relay.TupleGetItem(func_949_call(relay.reshape(var_3498.astype('float64'), [4, 2, 4]), relay.reshape(const_3499.astype('float32'), [2080,]), relay.reshape(const_3474.astype('float64'), [192,]), relay.reshape(var_3498.astype('float64'), [4, 2, 4]), ), 6)
call_3500 = relay.TupleGetItem(func_954_call(relay.reshape(var_3498.astype('float64'), [4, 2, 4]), relay.reshape(const_3499.astype('float32'), [2080,]), relay.reshape(const_3474.astype('float64'), [192,]), relay.reshape(var_3498.astype('float64'), [4, 2, 4]), ), 6)
bop_3504 = relay.floor_mod(const_3474.astype('float32'), relay.reshape(call_3497.astype('float32'), relay.shape_of(const_3474))) # shape=(192, 1)
bop_3507 = relay.floor_mod(const_3474.astype('float32'), relay.reshape(call_3500.astype('float32'), relay.shape_of(const_3474))) # shape=(192, 1)
output = relay.Tuple([bop_3442,call_3470,var_3471,call_3473,var_3498,const_3499,bop_3504,])
output2 = relay.Tuple([bop_3442,call_3472,var_3471,call_3475,var_3498,const_3499,bop_3507,])
func_3513 = relay.Function([var_3471,var_3498,], output)
mod['func_3513'] = func_3513
mod = relay.transform.InferType()(mod)
var_3514 = relay.var("var_3514", dtype = "uint64", shape = (1248,))#candidate|3514|(1248,)|var|uint64
var_3515 = relay.var("var_3515", dtype = "float64", shape = (32,))#candidate|3515|(32,)|var|float64
output = func_3513(var_3514,var_3515,)
func_3516 = relay.Function([var_3514,var_3515,], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3903 = relay.var("var_3903", dtype = "float32", shape = (9, 9, 5))#candidate|3903|(9, 9, 5)|var|float32
uop_3904 = relay.sinh(var_3903.astype('float32')) # shape=(9, 9, 5)
bop_3909 = relay.maximum(var_3903.astype('float64'), relay.reshape(uop_3904.astype('float64'), relay.shape_of(var_3903))) # shape=(9, 9, 5)
uop_3912 = relay.erf(bop_3909.astype('float64')) # shape=(9, 9, 5)
func_1576_call = mod.get_global_var('func_1576')
func_1579_call = mutated_mod.get_global_var('func_1579')
const_3920 = relay.const([-8.635978,9.665695,4.934027,-2.983350,-1.114909,-3.579695,2.998312,7.573122,-3.116433,-4.502433,1.763714,9.312870,-1.705401,-8.677221,6.885645,7.816020,-1.753669,4.675411,1.865009,8.922174,-8.479549,1.803408,-9.000772,7.115227,8.829570,8.601293,-9.707013,-5.772232,2.365176,-6.897117,1.067324,-9.429264,-0.884219,6.265382,4.057917,5.323990,7.454980,-5.865049,3.628846,-4.429326,3.439717,0.444125,-6.813662,6.346237,4.231407,-5.859374,4.349966,-1.491199,2.288320,2.741080,-9.716247,-4.111696,6.192277,6.068443,-6.759685,-4.090227,2.080540,2.068270,9.082473,5.762615,-1.630472,-8.025774,-4.216532,1.393456,-8.071391,1.353175,-6.458307,-2.457701,-2.254084,-7.622997,-6.038947,-0.676444,5.970325,6.803421,-9.768185,0.781035,1.181042,-1.332449,-5.070421,9.300814,-7.747903,0.177351,-4.048422,5.755051,5.197604,8.374569,-7.345311,1.620046,1.477679,-1.812222,7.676285,-5.244347,2.579095,-0.655453,-7.499337,8.762184,-8.102954,9.164834,-4.881699,8.515396,7.981807,2.138837,4.223940,0.699088,-8.423134,-0.443803,5.276209,-0.802669,-3.271697,-9.182552,-0.368489,1.450697,-8.172914,3.559528,1.320657,-7.037364,6.838931,-4.567928,-8.545564,3.219164,-6.105442,-1.520082,-2.870546,-1.603792,1.382206,3.170073,-7.339836,2.640964,-4.525688,-0.300989,1.622404,-1.820298,-2.598383,6.469801,-9.044480,1.063400,4.160318,-1.487835,-2.211079,-9.893038,0.893981,0.194080,-9.268375,-0.079782,5.746648,4.776694,1.699826,8.712993,-2.861167,-8.780953,2.644139,5.017849,6.161813,-5.937669,0.674066,8.602821,0.138953,-3.162618,9.319245,-7.777650,3.298599,-9.775975,6.504765,1.289213,-5.191427,-1.711210,4.678818,-8.469137,1.907149,5.356297,7.119054,8.436479,3.146585,5.442834,-4.997644,-2.547257,8.151047,-3.219847,-3.511665,-2.151392,5.722116,1.070600,9.929318,5.163101,-8.023145,0.770483,7.542291,-9.898742,-2.858223,-1.876338,9.578053,2.343891,2.222742,5.203915,6.732813,-9.180283,-2.560455,9.925891,-9.841091,-1.563582,9.828895,-3.571623,-4.188742,-0.339281,-4.418785,9.466317,9.362243,-8.225479,-6.356552,-3.208177,-9.779355,-1.044878,-0.586798,-8.552910,-4.945246,-9.266550,-5.728544,4.344794,9.832413,5.934308,-4.846755,-8.158105,4.085238,-6.095184,-1.748447,1.964192,8.551524,-5.430066,-1.694802,-7.795588,4.747074,-1.089266,-3.947314,3.090932,6.125528,7.548007,6.397059,4.646617,5.363885,0.454666,3.144365,-1.161425,-9.477142,-5.559931,7.064389,-9.003607,5.549346,-5.134393,-5.217658,-1.832552,-2.458515,0.587107,4.403273,6.127771,-8.156274,-4.186081,4.908563,-0.436665,7.689697,-4.775072,-5.383924,-8.790981,-7.292778,0.723688,-6.445987,-0.377765,8.249809,-1.218684,9.853195,8.763585,-3.333253,9.188570,-7.266145,-2.562905,-5.959306,-7.107162,4.486952,2.637012,8.050369,-7.309800,-0.743634,7.441193,-0.036683,-6.748432,6.842035,6.696611,8.795108,5.113228,-8.339086,-0.784768,2.414178,0.840563,4.725704,-1.764726,1.658087,-1.443681,1.501522,-7.314203,0.060605,9.776217,-8.141657,8.885823,8.174863,-5.246330,-2.731254,1.349246,0.548884,-8.556556,8.871311,-1.209531,6.333075,-5.198668,-9.774616,-1.916120,9.313545,-5.773153,-8.088216,2.840269,-4.572903,2.901665,-8.720980,-1.729010,-4.798075,-7.101884,8.745070,-3.360174,8.612012,-3.220062,4.359952,-1.820272,-4.939369,2.280383,-4.651872,1.404371,-2.465052,6.539258,8.444948,-7.772005,-0.971640,7.786225,7.005478,-7.023461,-0.602511,-9.365423,2.696587,-6.914763,6.485907,-5.878062,-5.032199,2.941235,-0.819378,-9.288921,-6.833135,9.859527,9.028467,4.906819,9.420872,-9.359162,-4.782120,2.024091,9.624037,0.800694,2.958194,-7.829900,1.291276,-5.465962,-6.919854,1.954793,-8.974620,7.601537,9.263822,-0.779687,-3.887569,-3.822534,-9.675692,-4.868863,9.717639,-3.440787,7.321748,0.082556,-1.237178,-8.759117,-4.144648,-7.134923,0.850173,-6.138116,-8.643239,4.210898,3.927589,5.366974,0.617629,7.022182,4.769790,-8.700760,-5.501887,-2.562313,2.424616,4.411927,-1.751334,-8.947185,6.716543,3.080729,-5.536778,-6.931817,-6.518284,4.097430,0.982909,1.480932,-6.440092,2.145710,1.740832,-5.747717,4.109796,-3.098796,4.701980,0.887172,9.382954,-3.208936,2.902127,-2.485439,-9.826729,4.364413,-1.031772,-8.025961,-7.137826,-3.027618,0.786027,5.357546,-8.997204,3.056780,-6.869354,4.594016,5.093668,1.621270,-9.664642,-5.016759,5.582755,0.003377,-5.992227,3.475267,1.483329,-6.436005,-3.702108,9.503438,5.851516,-9.399966,0.133355,-1.878416,3.439653,7.141195,2.959868,-3.684944,-1.565771,-6.467552,0.438187,4.089435,2.387696,-3.494783,7.228312,1.499850,-1.417244,0.055192,7.683998,-4.566704,5.434501,-6.524820,4.007423,-8.112015,-8.849986,7.752245,-1.060794,3.816832,-7.529485,7.083119,8.792030,2.079478,-9.667393,-1.641425,-2.114042,-6.688332,-4.816288,-6.421748,0.809194,7.593399,7.493015,8.265546,-0.565750,-2.222518,-2.663333,-6.422722,-4.748818,3.730002,-4.392948,-7.180075,-2.545975,7.187177,9.236040,3.561071,-6.480603,7.216414,8.683896,1.018062,9.964521,-3.502056,5.613242,0.332366,-9.850748,-5.354806,-6.620847,0.864444,0.732163,-5.067520,-8.903215,6.586541,-0.069924,8.307137,7.181936,6.473184,-8.209125,9.301795,6.857456,1.779471,7.994163,-1.467803,-3.418431,3.786477,-5.449682,-3.912518], dtype = "float32")#candidate|3920|(528,)|const|float32
call_3919 = relay.TupleGetItem(func_1576_call(relay.reshape(const_3920.astype('float32'), [11, 16, 3])), 0)
call_3921 = relay.TupleGetItem(func_1579_call(relay.reshape(const_3920.astype('float32'), [11, 16, 3])), 0)
output = relay.Tuple([uop_3912,call_3919,const_3920,])
output2 = relay.Tuple([uop_3912,call_3921,const_3920,])
func_3933 = relay.Function([var_3903,], output)
mod['func_3933'] = func_3933
mod = relay.transform.InferType()(mod)
mutated_mod['func_3933'] = func_3933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3934 = relay.var("var_3934", dtype = "float32", shape = (9, 9, 5))#candidate|3934|(9, 9, 5)|var|float32
func_3933_call = mutated_mod.get_global_var('func_3933')
call_3935 = func_3933_call(var_3934)
output = call_3935
func_3936 = relay.Function([var_3934], output)
mutated_mod['func_3936'] = func_3936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3951 = relay.var("var_3951", dtype = "uint64", shape = (13, 1))#candidate|3951|(13, 1)|var|uint64
var_3952 = relay.var("var_3952", dtype = "uint64", shape = (13, 1))#candidate|3952|(13, 1)|var|uint64
bop_3953 = relay.subtract(var_3951.astype('uint64'), relay.reshape(var_3952.astype('uint64'), relay.shape_of(var_3951))) # shape=(13, 1)
output = relay.Tuple([bop_3953,])
output2 = relay.Tuple([bop_3953,])
func_4004 = relay.Function([var_3951,var_3952,], output)
mod['func_4004'] = func_4004
mod = relay.transform.InferType()(mod)
mutated_mod['func_4004'] = func_4004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4004_call = mutated_mod.get_global_var('func_4004')
var_4006 = relay.var("var_4006", dtype = "uint64", shape = (13, 1))#candidate|4006|(13, 1)|var|uint64
var_4007 = relay.var("var_4007", dtype = "uint64", shape = (13, 1))#candidate|4007|(13, 1)|var|uint64
call_4005 = func_4004_call(var_4006,var_4007,)
output = call_4005
func_4008 = relay.Function([var_4006,var_4007,], output)
mutated_mod['func_4008'] = func_4008
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4360 = relay.const([[[-5,9,-5,6,-9,2,4,7,2,-8,-1,-1,6],[9,-10,-10,-3,4,-3,7,-1,-4,-3,-4,4,2],[-3,-8,8,3,-10,-10,-9,2,5,6,10,-10,10],[10,7,1,6,-3,7,-10,-6,-9,-7,8,8,-7],[-1,-3,-4,-7,6,-3,7,7,-9,-8,-9,9,-8],[7,1,6,4,3,2,-9,7,-1,7,6,-4,10],[-3,-9,-7,9,-2,-10,-4,-4,-2,-5,4,-3,5],[-8,6,-10,8,2,-8,5,-7,8,-7,-10,-7,10],[-2,-4,-2,5,10,-1,-7,-6,-5,8,-8,-3,-1],[6,9,-9,10,-7,-6,2,-8,-4,5,1,-3,-2],[-5,5,-10,-4,-10,-10,-6,3,-9,-8,8,-1,2],[-5,-3,5,3,-6,5,-2,2,-3,8,2,1,-4]],[[10,3,9,8,-8,10,4,-6,5,-4,-1,7,3],[7,-7,-4,-8,10,7,-1,-10,-8,-8,-3,-2,10],[-6,-5,4,4,2,-8,-6,-10,-4,-10,2,9,2],[-3,-1,-10,-7,7,-6,5,-10,10,1,9,-1,-2],[-6,-2,-4,-3,-7,-5,7,-8,-4,10,-5,-8,-10],[-4,5,-3,8,9,2,1,4,-4,10,3,4,-8],[4,7,-4,-7,10,1,-7,2,-2,-7,-10,9,-2],[4,6,4,7,-3,6,-9,10,-2,10,-6,-8,-9],[1,-8,10,8,-1,3,-8,8,-8,8,-7,-7,-8],[-9,4,-5,-8,10,5,2,-4,4,5,4,1,3],[4,-6,1,-9,5,-3,-6,-9,-5,-7,-5,-9,-4],[-4,-6,-2,-7,5,4,-4,-9,-2,-4,-8,-1,5]],[[7,-8,8,-4,9,9,2,3,-7,5,-5,-2,7],[7,-4,-5,8,-10,5,3,9,9,5,9,10,7],[-10,-6,9,-6,8,4,3,2,-7,2,-8,-9,-7],[-4,-2,-4,-2,-1,8,5,-7,1,4,-9,-2,-9],[4,-1,6,-9,8,3,6,2,1,9,8,-1,-5],[3,1,-8,-10,7,-4,-6,-10,4,-3,1,4,6],[-1,-4,7,-6,9,-5,-2,-7,-1,-1,-2,-8,-1],[-2,10,-9,-5,1,-2,2,10,-2,-2,-1,2,3],[-6,10,1,-6,-10,-3,-10,6,-1,3,8,6,-4],[2,-8,9,-5,5,9,-6,-6,3,-5,-8,-9,-2],[6,-6,4,6,4,-9,-4,-6,6,3,3,8,7],[6,6,-5,-5,-3,-9,-2,6,-4,4,7,-4,-1]],[[-10,-6,-6,-5,2,7,10,-8,-2,-4,10,1,9],[-5,10,-9,9,-7,10,1,1,9,9,2,8,10],[-5,-5,8,-7,-7,9,2,3,8,-3,-2,-2,-10],[2,2,7,4,-2,-1,1,5,-8,-7,-10,4,6],[6,9,-2,-7,7,-10,5,3,2,7,-5,-6,-5],[7,-10,7,9,-5,1,5,-3,6,8,-5,3,-8],[7,1,10,3,-1,5,8,-10,1,4,-2,-3,10],[-1,-2,-3,6,-10,2,-6,4,2,3,-1,-1,8],[9,-4,-1,-4,-7,-1,1,-7,5,-7,-7,10,-4],[2,-10,-7,-2,-10,7,4,-2,-4,6,-7,7,9],[4,-1,2,4,-4,3,-3,8,8,3,-7,-3,10],[-4,-6,8,2,-10,5,-10,-6,-4,7,-8,-4,-5]],[[8,5,-7,-5,-2,5,-4,-10,-9,-9,-5,-4,7],[-7,5,-3,9,-2,-7,-1,2,2,-3,7,3,6],[1,10,4,-8,-9,-3,-8,-5,4,5,6,-3,10],[-10,8,-2,-8,6,10,-2,-6,7,9,-1,10,8],[3,-4,3,-9,1,-9,-4,2,2,2,8,2,-3],[-4,-10,10,4,-8,7,-8,-9,-7,4,6,5,4],[9,-5,-10,5,9,-5,1,-2,1,9,6,4,7],[-8,9,-6,-9,-1,9,-8,3,-5,-7,3,6,-9],[-7,-4,2,-9,-5,9,7,2,-8,-4,4,-5,6],[-10,-1,-5,-3,-5,1,5,-8,-10,6,10,-10,7],[6,8,4,-2,-8,-5,6,-3,-3,-4,7,-7,4],[9,2,2,1,-9,8,10,-8,5,5,2,-10,-3]],[[10,10,-5,-2,6,-4,3,-2,5,-7,8,-9,-3],[3,1,10,5,-7,-2,7,4,7,-7,8,-2,8],[-8,3,10,-5,-3,2,9,-8,10,-9,1,2,4],[1,-5,-5,6,4,-7,8,-8,-10,2,5,5,8],[9,-3,10,-8,5,-7,3,-8,4,2,6,8,10],[-2,9,-1,10,1,2,-4,-5,7,-6,-2,-10,-4],[-6,6,8,-3,10,5,-9,-9,-8,-7,7,4,-10],[-6,9,-9,-2,3,7,-9,1,6,-2,3,1,4],[-6,1,-5,8,-7,-10,-6,-1,10,-9,-3,1,3],[5,5,-1,-8,-9,-9,6,6,5,1,-6,-5,2],[-1,3,-8,-5,8,6,-8,8,1,-3,3,10,7],[5,-10,-10,-1,-4,-9,-3,-5,-2,5,-2,7,-5]],[[7,-4,-3,6,9,6,-9,10,9,7,-6,9,-3],[8,-8,10,-2,10,5,-1,-2,-4,-7,-10,-2,10],[-8,-7,-2,10,-10,5,-5,7,1,-6,-7,5,-7],[-10,-2,6,3,-10,8,5,10,-10,-7,9,-9,2],[-5,9,1,-2,-4,-4,2,2,-6,10,8,-3,8],[-6,6,10,6,7,1,-4,-10,1,-4,3,-9,8],[-2,-6,-4,7,2,-1,-9,8,8,6,-2,-9,10],[-8,7,-10,-8,9,-9,-10,-6,-1,-9,-8,3,-6],[-2,1,9,3,-7,4,9,7,-4,1,10,-6,3],[10,9,-2,3,5,3,9,-10,5,-10,1,1,-3],[-6,-4,10,-6,9,10,-1,5,2,6,-7,-5,-7],[-1,8,1,-1,-2,8,2,8,-9,-6,5,-8,-3]],[[-5,-2,-5,-1,6,-5,-9,-10,9,-4,5,-7,8],[2,-4,1,-3,4,-9,-9,8,-4,4,-2,7,9],[-9,-6,8,-5,2,4,10,-3,4,3,-7,9,-10],[-4,8,10,8,6,-1,8,8,9,1,-6,6,-7],[8,-6,-8,5,2,5,1,-5,4,-8,-9,-10,-2],[5,8,1,-7,-4,7,-1,7,10,7,2,3,4],[10,-2,2,10,-9,-6,10,-3,1,8,8,-8,7],[8,2,10,4,6,-9,-6,9,-7,3,-10,2,4],[7,-8,-2,2,6,9,6,-8,2,-5,7,4,2],[6,-1,7,-10,10,-9,7,-6,7,-10,9,10,-6],[8,7,-1,5,3,10,6,7,-2,-3,9,-4,-7],[-2,9,-2,-8,-8,-3,-3,-4,2,-10,-7,1,5]],[[-10,-10,4,-3,-2,1,-5,-10,-3,-7,-3,8,5],[-10,-5,-8,-3,-3,-4,1,1,-7,2,-5,2,5],[8,-1,-1,3,7,3,2,9,10,4,-2,8,-10],[-1,4,8,-9,8,3,6,-3,-9,2,-4,10,6],[7,-7,6,9,-4,-1,-7,3,-10,-7,-7,-1,8],[5,-1,9,-4,5,4,9,1,3,9,-6,-6,-2],[-3,5,-6,7,-1,7,5,-7,-6,-7,6,-4,7],[-6,5,7,10,-7,-2,6,-3,3,5,-6,-6,-9],[-4,-9,-3,3,2,-3,-2,1,-7,9,3,9,-2],[10,-10,10,10,-7,4,-8,-10,1,3,7,-2,-3],[8,3,-7,-8,10,2,-9,2,9,-4,-4,2,-8],[9,-7,2,-6,-7,-8,1,7,9,-4,-1,-4,3]],[[-9,-7,-4,-4,-1,-8,3,-10,-2,-10,-6,-5,1],[-3,-3,5,1,-7,-8,-8,1,-6,3,7,6,-4],[-8,3,7,8,-2,1,3,-10,3,2,6,-8,3],[-6,-7,-1,1,6,-10,9,-7,7,10,-3,-7,-7],[-2,-4,4,-3,-2,6,8,5,-8,2,-7,-5,8],[2,-2,10,5,8,6,10,4,3,-10,2,3,1],[-2,-8,6,-6,10,4,-10,7,-4,3,-5,-1,-7],[10,8,-1,-10,3,-3,-4,-4,10,-1,-1,-6,-2],[-3,7,-8,9,8,6,-10,-4,7,6,6,-7,-5],[-9,-3,3,6,5,6,-9,3,-2,4,6,4,3],[7,5,8,-2,-9,-6,-4,-8,-4,-5,-2,-10,3],[-6,-7,4,-10,-4,7,9,1,-8,8,-3,4,-1]],[[-3,3,-6,-2,9,-7,-7,5,-6,-7,-2,10,-4],[4,1,4,-6,-1,-7,7,10,-3,6,-2,-4,9],[-5,-10,4,-9,-1,10,-10,-2,-5,-3,5,-4,5],[3,-5,9,-3,-1,5,5,-2,3,-7,1,4,-1],[-1,9,-10,-9,-7,7,7,1,7,-6,-3,3,4],[6,-9,10,-1,-7,-3,8,-5,2,-2,-6,8,-7],[2,3,-5,7,-3,3,-6,-4,7,9,-6,7,-5],[-6,6,-4,-5,-6,5,6,8,1,-10,-5,7,-2],[-6,-1,-2,3,-2,4,-5,10,4,7,5,-8,-3],[3,-8,4,-4,4,-2,3,4,-1,-8,9,7,5],[-4,-7,5,-10,7,-6,9,-8,-5,-2,8,1,4],[-9,-6,1,7,-10,9,5,3,8,1,2,-5,-6]],[[8,1,7,-3,4,6,3,4,-7,-8,10,2,-2],[-7,7,-9,3,8,-10,7,-6,-5,-1,3,-6,8],[-8,7,-3,6,10,-8,7,-2,-9,-3,2,-4,-5],[-10,-9,-8,7,5,-2,3,-6,2,6,-10,-3,-8],[1,9,-10,-8,5,5,3,-3,1,-4,4,-2,-2],[-5,-7,9,6,3,-6,6,7,3,-3,5,-4,-3],[-5,-1,7,-1,9,-10,9,-5,-4,-6,4,3,10],[1,6,-2,-9,9,7,10,-1,4,-4,5,-10,1],[2,3,-1,-4,10,-10,-9,5,-9,3,-5,-10,-6],[9,5,1,-3,9,-9,-2,1,10,-3,7,9,-9],[-8,5,3,-9,-3,6,-5,3,10,-6,9,10,-10],[3,-8,8,-1,-10,-7,5,-1,8,-7,-1,6,7]],[[-3,7,-5,-7,-3,9,-9,2,-7,-8,7,-4,6],[-1,-5,2,-7,-5,1,7,8,10,6,3,-9,2],[6,-10,5,9,-2,-10,-9,-5,-9,-4,10,-6,8],[-2,10,-4,-1,-1,8,8,10,-10,5,9,8,4],[-9,-4,10,7,1,-8,-8,9,-8,5,-7,7,8],[7,-9,-4,1,-7,-6,-3,-6,9,10,9,7,8],[-6,-5,10,10,10,10,-4,2,-3,-4,6,2,-1],[5,-4,-1,7,7,-5,9,-1,-7,-5,-2,6,7],[1,-9,2,-2,1,9,7,-7,2,-10,-2,7,-9],[-6,-9,8,-4,-4,-5,5,8,-1,-1,-1,-4,-8],[-9,-4,8,-3,4,-6,-10,-7,5,-8,9,1,-10],[4,1,-8,7,-1,3,9,-5,8,-5,8,-10,-4]],[[8,8,6,-1,2,-1,3,-3,4,-6,8,6,-8],[5,3,-6,5,-8,-3,-1,-8,5,2,8,1,7],[-7,-5,7,2,9,10,1,6,5,-1,8,4,6],[-8,-5,10,-7,-6,7,6,-5,2,2,-2,-5,-10],[10,5,-6,-7,-9,3,-2,-2,-7,4,3,-2,6],[-4,8,6,-7,-6,-7,4,-1,-1,5,1,4,-8],[3,-3,-3,-2,8,8,10,-8,8,2,-8,2,8],[5,-1,8,2,-3,-8,-3,2,4,7,10,4,7],[-6,-5,-4,-8,-5,7,10,2,6,6,9,1,-4],[3,4,9,-9,-8,-9,6,-5,-1,6,6,-1,9],[2,3,-4,3,-6,-9,1,8,4,-3,-8,7,-10],[-3,5,8,-3,-5,-9,4,-3,10,2,5,1,-6]],[[-4,10,-6,-4,6,-8,5,7,-2,-9,6,2,-7],[-4,4,-7,5,-2,-2,-1,10,-9,-5,-9,1,-3],[-1,-5,-9,-7,2,-3,1,9,-2,2,-2,-7,1],[-3,7,-9,8,-9,4,-3,-1,-5,-2,6,5,-7],[2,1,1,-4,-9,-9,7,-7,3,9,-6,6,7],[3,-3,8,-4,9,-4,-8,-7,1,4,-9,7,2],[-2,-9,-2,4,3,-3,2,4,8,-10,-8,3,8],[8,-9,7,1,-4,-10,-10,-10,-10,6,10,-6,1],[3,6,5,7,6,-7,3,10,2,6,3,-4,-2],[3,5,3,-7,9,7,-5,-1,-2,8,8,3,1],[2,7,10,-3,5,4,7,3,9,-6,4,5,-9],[-1,-6,8,-8,1,6,-4,10,-2,-1,-8,5,-3]],[[10,-3,2,1,6,6,-4,-3,-1,-1,7,7,-8],[-10,-8,4,-2,9,10,-4,9,10,8,-6,-2,-9],[10,-7,-10,-3,-2,8,-3,2,7,10,5,-1,-5],[2,-4,8,-7,-2,4,5,2,3,-2,-9,-8,-7],[8,6,7,-1,-8,-4,-4,2,-4,5,4,-1,3],[-5,6,-6,4,-8,-9,-3,-7,-4,7,-10,-6,-7],[5,5,8,10,6,10,7,2,-6,5,-5,-6,-6],[3,3,10,-10,5,9,-3,1,-4,1,4,-2,-1],[-9,-9,-3,-7,-4,4,6,-1,-7,1,-8,-6,-10],[4,-1,-10,4,-7,2,5,5,-8,-1,9,3,-5],[2,10,2,-5,-1,-7,-4,3,-2,-2,8,-9,10],[8,-5,-6,4,2,-2,-1,2,9,4,-4,10,3]]], dtype = "int32")#candidate|4360|(16, 12, 13)|const|int32
var_4361 = relay.var("var_4361", dtype = "int32", shape = (16, 12, 13))#candidate|4361|(16, 12, 13)|var|int32
bop_4362 = relay.subtract(const_4360.astype('int32'), relay.reshape(var_4361.astype('int32'), relay.shape_of(const_4360))) # shape=(16, 12, 13)
output = relay.Tuple([bop_4362,])
output2 = relay.Tuple([bop_4362,])
func_4365 = relay.Function([var_4361,], output)
mod['func_4365'] = func_4365
mod = relay.transform.InferType()(mod)
var_4366 = relay.var("var_4366", dtype = "int32", shape = (16, 12, 13))#candidate|4366|(16, 12, 13)|var|int32
output = func_4365(var_4366)
func_4367 = relay.Function([var_4366], output)
mutated_mod['func_4367'] = func_4367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4378 = relay.var("var_4378", dtype = "int32", shape = (14, 14, 5))#candidate|4378|(14, 14, 5)|var|int32
const_4379 = relay.const([[[-6,1,10,6,-10],[-2,-1,7,1,-10],[8,9,1,-1,7],[8,-8,1,-7,-10],[5,8,-4,-5,-3],[-10,-1,2,-2,8],[8,3,7,4,3],[8,7,-2,-5,6],[2,-10,8,-4,5],[-10,-9,9,-8,-7],[10,-9,-5,7,-9],[-7,-2,-3,-3,1],[-8,10,-5,-3,-3],[-8,-10,-1,-9,5]],[[3,9,3,6,-1],[-3,-9,8,4,-10],[6,2,-4,-10,-1],[-3,7,2,5,5],[6,-9,-10,10,10],[1,-8,1,5,-7],[6,-5,-1,2,-4],[4,-4,-4,1,8],[-3,-9,-3,-5,2],[7,1,1,-8,7],[-2,1,-5,-2,-8],[-10,-1,-2,-9,-5],[8,-9,5,-10,-4],[2,-2,-2,7,-3]],[[-6,5,-2,-4,-5],[-4,-10,-3,-2,7],[-4,2,1,10,9],[2,-8,5,-6,-3],[-7,-6,-9,-3,6],[6,8,-3,-1,-8],[8,-8,-8,8,-1],[7,-7,4,-5,-8],[-6,8,-10,4,6],[2,3,-10,-2,-7],[9,-8,10,-4,-10],[6,7,-1,-7,-8],[6,-6,-1,-1,5],[5,-3,-4,-6,10]],[[1,3,3,4,-8],[2,-6,2,5,10],[1,-5,8,-9,-8],[-4,8,8,3,1],[6,-5,10,-2,1],[4,-7,8,8,4],[10,-4,5,-10,-4],[2,-2,6,6,-8],[10,-1,-3,-4,10],[-7,-6,-7,-5,-1],[-7,10,-4,3,4],[9,5,1,-10,-1],[5,-1,10,-3,-6],[-3,9,-2,2,3]],[[9,10,-3,-2,-7],[5,10,2,3,-7],[2,-2,5,-6,-9],[5,-2,-2,7,9],[-8,6,10,9,7],[-4,6,-2,10,-2],[-10,9,-1,6,-6],[1,-1,3,9,9],[-10,7,-1,-8,8],[1,6,-9,-2,4],[1,-3,4,-8,-2],[1,9,7,-6,10],[5,-9,3,8,2],[-5,-9,7,-6,8]],[[-1,-9,6,2,-3],[3,6,-10,1,-4],[2,-10,-8,4,-4],[-4,-3,7,9,1],[-2,1,-8,6,-9],[-6,10,1,3,-3],[-2,-3,-10,-4,10],[10,-10,1,-1,1],[9,-2,3,10,3],[-2,10,9,6,8],[9,-9,10,8,6],[5,7,6,-3,6],[10,10,-5,-2,4],[-6,-2,1,4,-5]],[[-9,8,8,-3,-2],[8,9,4,8,-5],[-7,-3,-6,1,6],[-10,6,10,-4,6],[4,-8,1,4,-9],[10,-10,5,9,-5],[1,9,-3,-3,2],[3,-5,-8,6,-6],[1,-2,-2,8,-2],[8,10,3,6,2],[-7,-5,-7,-9,-5],[9,2,8,8,-7],[10,-4,-3,-4,2],[9,1,2,-5,5]],[[7,-7,-5,2,2],[4,5,2,4,6],[-2,-7,-9,4,-9],[5,3,6,-8,3],[-8,-3,6,2,3],[-10,-5,1,6,-7],[4,-3,-5,-7,7],[-4,-9,-9,-6,9],[-1,4,3,-7,1],[-6,-9,4,-7,-8],[2,-1,-10,-10,-1],[6,5,7,7,1],[-9,5,-5,1,-1],[-6,10,-8,8,-7]],[[-4,-3,2,10,-4],[-7,5,3,2,-2],[3,-10,5,-5,3],[-4,-4,-7,-6,6],[-8,-7,9,-7,-3],[6,8,1,3,8],[8,2,-10,-8,9],[-8,-1,4,-4,10],[9,-3,1,4,-2],[9,-6,-1,3,-3],[-5,1,-6,5,3],[7,-3,-3,-6,8],[9,7,-10,10,-8],[-6,-5,-9,10,-1]],[[1,-9,10,-9,-8],[4,6,-1,-10,10],[7,10,-2,3,7],[9,3,2,-9,-2],[10,4,-9,-4,9],[6,-3,6,-9,9],[4,-4,3,2,9],[-9,-10,-8,-10,-8],[10,3,-2,7,9],[-7,-2,-1,9,9],[5,-10,2,4,2],[-1,7,4,-4,-3],[8,7,3,7,1],[-3,-7,-1,-2,-3]],[[8,5,-1,-5,1],[-9,9,1,3,-5],[5,1,2,-10,-7],[-9,8,-10,-4,-3],[2,5,9,-3,-3],[9,8,-1,1,5],[6,-5,-7,-3,-10],[7,10,5,-10,-2],[-9,-3,10,-9,5],[1,9,6,-2,8],[-7,6,-9,-7,-1],[3,9,-9,10,-1],[4,-8,9,9,-5],[3,-4,-9,2,-1]],[[4,-5,2,1,-3],[-10,-4,2,-2,-5],[7,-1,9,-5,6],[5,2,3,3,-7],[-6,-5,-5,6,-7],[-6,-10,-7,-7,-1],[-8,4,-6,3,1],[-8,-7,7,-10,-9],[3,1,-4,-4,1],[-5,4,9,4,-1],[-4,-2,-4,2,2],[-8,1,-8,-10,-6],[-8,1,10,-3,-4],[1,-5,-10,2,2]],[[-7,8,-2,1,-7],[-6,-9,8,-9,-8],[-5,-2,2,1,7],[-9,-4,2,-3,1],[-1,-6,3,4,3],[4,10,10,1,-9],[5,-3,-5,4,-8],[-8,1,3,-6,-6],[8,-10,-10,-4,4],[-9,9,5,-7,-10],[5,5,-1,-1,-5],[9,1,-4,2,1],[-9,-2,-10,-2,7],[1,-1,-9,5,1]],[[-1,3,-10,10,-5],[7,-9,2,-5,8],[8,5,8,-4,-5],[2,5,-5,-4,-6],[-8,-3,-1,8,-9],[7,8,9,-5,-8],[7,-8,9,9,10],[2,-10,7,-10,-5],[-3,-8,-6,8,9],[-4,8,-1,5,2],[-5,3,1,-5,5],[10,6,-1,-5,4],[5,-10,-7,-1,1],[8,-10,-1,3,2]]], dtype = "int32")#candidate|4379|(14, 14, 5)|const|int32
bop_4380 = relay.less_equal(var_4378.astype('bool'), relay.reshape(const_4379.astype('bool'), relay.shape_of(var_4378))) # shape=(14, 14, 5)
output = bop_4380
output2 = bop_4380
func_4387 = relay.Function([var_4378,], output)
mod['func_4387'] = func_4387
mod = relay.transform.InferType()(mod)
mutated_mod['func_4387'] = func_4387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4388 = relay.var("var_4388", dtype = "int32", shape = (14, 14, 5))#candidate|4388|(14, 14, 5)|var|int32
func_4387_call = mutated_mod.get_global_var('func_4387')
call_4389 = func_4387_call(var_4388)
output = call_4389
func_4390 = relay.Function([var_4388], output)
mutated_mod['func_4390'] = func_4390
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4809 = relay.var("var_4809", dtype = "int8", shape = (12, 10, 9))#candidate|4809|(12, 10, 9)|var|int8
var_4810 = relay.var("var_4810", dtype = "int8", shape = (12, 10, 9))#candidate|4810|(12, 10, 9)|var|int8
bop_4811 = relay.left_shift(var_4809.astype('int8'), relay.reshape(var_4810.astype('int8'), relay.shape_of(var_4809))) # shape=(12, 10, 9)
func_3128_call = mod.get_global_var('func_3128')
func_3135_call = mutated_mod.get_global_var('func_3135')
var_4819 = relay.var("var_4819", dtype = "float64", shape = (11, 195))#candidate|4819|(11, 195)|var|float64
const_4820 = relay.const([4.284816,1.456350,8.855134,-4.603107,0.958228,4.999375,0.629976,6.319151,4.993872,0.327336,5.567119,0.698521,-6.869085,-5.990297,6.644930,-1.912163,-4.193966,4.699605,-3.846940,4.862449,6.471126,-2.311907,4.510876,-9.556034,0.881297,-3.292059,6.249788,-5.268095,5.416869,1.299393,0.654685,-8.312562,5.253043,4.930822,8.736428,2.765316,7.015580,-8.481137,1.936136,9.338220,-9.725550,9.253564,0.735604,4.411133,-3.923910,4.505864,8.568197,-7.470747,1.709100,-0.494983,-2.052251,-9.973815,9.964846,-8.604989,8.387482,6.259266,7.363572,4.824935,7.120567,-2.281498,8.472984,9.809307,1.885450,3.390833,3.575469,6.121611,3.799959,8.047193,-6.072368,6.682727,0.310990,-7.837171,9.915851,5.843084,-0.051899,-6.046257,2.016453,-2.067807,9.322995,8.941661,-1.205787,0.356952,-2.218534,-9.570106,-9.079629,-9.081466,6.412658,1.647541,-5.441952,4.177313,-4.594374,-4.606947,2.326303,-6.610968,-8.422778,4.163552,-5.524455,-4.670089,4.259630,-1.699420,-9.567552,0.321831,0.065665,-5.287925,3.633438,-4.080762,-7.542962,2.733959,-9.845419,-3.654590,9.750867,4.458496,-2.537049,9.957826,-9.205587,-7.279513,-3.440948,-0.127965,-5.165256,-1.308635,-5.585188,7.913349,5.237184,-1.205910,-6.882011,0.980337,-1.116455,3.310255,-7.106672,-8.023955,-2.197194,-5.325188,-0.743482,-9.001168,1.263699,-3.560292,-1.400304,-0.195982,-6.094701,6.821642,-3.846250,6.793783,6.932582,5.695908,2.879589,-6.920331,-4.063807,-6.297710,-5.101263,5.045160,9.248204,4.555904,3.764076,-1.301098,6.759765,-2.413239,-2.226534,-8.618329,1.628503,6.060201,-6.163336,-5.221249,-3.186832,7.349198,-0.150859,3.351814,6.934424,0.850155,-5.588285,-5.750085,0.953816,3.172087,-8.212367,8.857155,-6.905480,-6.878017,-0.981464,9.778184,-3.996949,0.462542,-4.736741,-2.666689,-1.456049,-6.770566,3.747260,-3.375580,-8.903367,-3.526023,6.003594,-1.102133,2.204718,-1.869365], dtype = "float64")#candidate|4820|(192,)|const|float64
const_4821 = relay.const([6.765853,-7.485473,-3.982453,9.118588,-7.536701,-9.860959,-1.646554,-5.431344,-7.161574,-4.308355,-0.524335,3.167779,3.056880,-8.634108,-7.793908,-6.979457,-3.972436,2.922794,-4.330781,2.483411,-8.987412,-7.177727,-4.065232,3.383712,-9.765341,4.658957,-1.197627,-2.042278,-7.800312,8.515626,8.940169,-5.675016,-4.237798,5.376684,-6.194766,-8.218512,-4.699512,-5.279779,1.254501,5.594852,2.333003,0.374442,-8.045782,9.355146,-4.543278,8.770756,4.254452,9.710044,4.037150,-1.702889,-2.648740,-2.829715,0.254038,3.076984,5.379357,-9.986463,5.349546,-7.908487,3.592610,1.224723,-3.037961,-8.624840,-6.858262,-4.747034,-4.620089,-2.414423,4.822514,3.770654,8.400857,1.000580,1.398569,2.888862,3.288054,-9.224889,8.615138,-3.090142,-5.539405,5.046682,3.284186,-3.658064,-8.838090,-8.241040,-2.712089,3.904343,-5.351709,-3.858201,-7.811131,4.275859,3.646954,8.965381,5.081800,3.208230,-5.566921,-3.851714,-0.900133,5.123301,0.100383,-3.254303,3.713927,9.670609,-6.981747,9.281066,9.271973,7.262396,5.651653,-8.488299,-6.455735,-3.473699,-6.677421,-5.103174,-1.288526,-3.348675,9.262379,8.169046,-3.009722,1.119614,-9.403701,0.605482,2.307880,-8.518039,8.534766,5.904891,-5.122091,-0.914309,-7.710097,2.414387,-3.686416,9.898334,-4.525140,-2.179054,3.540160,-0.328606,6.462386,-5.178736,-3.372355,6.683063,7.455392,1.067483,-0.644291,-7.142636,9.164487,7.558774,3.526005,7.248104,0.005264,-9.442202,2.733035,-2.469498,2.290612,8.106429,-7.753383,1.729157,4.068111,1.667646,3.908275,1.885255,-6.558089,-6.207720,5.001439,9.320414,-1.807703,3.285610,-6.230207,-7.656979,-6.388985,2.640586,-0.372127,-6.217878,-0.991141,6.655595,-5.294609,-9.380561,-5.611317,-1.009634,-2.878909,-1.803018,-6.448200,5.382010,-0.462082,-5.020865,9.754575,1.296969,-3.442390,-5.250725,9.710886,-5.143079,-6.564561,-9.285444,-4.910983,-1.566339,7.226377,2.839464,-2.247332,-6.347363,-1.385570,-5.590472,4.571841,5.290907,5.831257,-7.343567,5.587902,-7.457008,2.932127,-3.725698,-2.689505,-0.901983,-5.152866,3.220481,-5.813753,4.617713,-8.303026,6.536408,0.590876,1.590448,-7.100115,7.108083,4.934275,4.656333,7.276530,-1.279349,-8.598137,5.635620,-1.146960,3.806923,-7.598289,6.294093,-6.111724,-5.400879,1.319696,2.946970,3.128174,5.516413,-6.409745,9.274313,2.235005,4.888333,6.757927,-1.507600,0.327153,-3.347271,-0.023198,-5.231203,-8.826352,-4.598544,7.655132,2.867803,-0.246315,9.089827,5.060506,-6.125822,-0.798176,-3.880655,-6.382294,3.873214,9.266823,-1.229062,3.860199,-4.798031,8.812937,0.172880,-5.130655,-0.112874,4.705698,-7.909361,-7.487997,2.917220,-8.557412,-4.225376,-9.856015,3.535652,-0.131515,3.865724,-7.322097,7.026831,-0.902059,-3.304234,-8.472119,-6.979886,-3.599105,-1.335808,3.513030,5.995492,-3.990846,6.462403,2.688190,-9.057021,-7.341058,2.798731,1.191090,-1.894214,6.412711,0.945978,5.676276,-4.483871,-0.453123,5.855535,-3.757949,4.477695,-0.535092,-5.780654,7.206178,8.306926,-0.917479,0.349002,-1.153260,-4.308232,-1.982446,5.170109,3.957418,-2.010192,-2.875523,7.410501,-1.125320,9.858089,0.738733,7.520167,-8.357742,-5.324260,8.622792,6.870359,-5.622391,-6.057801,4.843957,-6.977481,4.174641,-9.620809,-5.581926,-0.097594,-0.608981,-8.528281,0.631927,1.023375,-9.445766,6.605569,4.758721,7.550298,-5.196657,-0.539358,5.937821,-9.111762,2.052394,0.285573,-1.564292,7.943432,1.443935,3.399219,3.730500,2.325980,-8.259389,5.565161,3.432727,3.992891,-3.605907,6.136962,0.049548,-6.434670,-3.720864,-4.054228,-6.837975,1.623302,5.093657,-9.333936,5.763659,1.809457,-5.542572,7.607094,7.345608,9.298393,4.460781,-1.540922,-4.678765,0.714659,-9.310890,-5.996717,0.380708,-2.513171,-0.447588,6.295196,-3.279337,1.842102,-4.431217,-1.780776,-0.047878,8.046793,-3.664789,-1.964774,5.698210,9.153804,0.905664,-9.557197,-5.686153,-1.325426,3.751090,-5.359118,-6.204488,1.713378,3.658705,-4.249616,3.052360,9.462168,1.338402,3.477656,9.806378,-2.233702,-5.385139,-0.621876,-9.654597,4.203001,-1.618029,9.686563,8.059427,1.345852,5.414346,-4.823283,-6.708111,-9.075032,7.624644,-3.183459,0.831204,-4.512510,2.294754,-9.901968,3.153183,2.583465,4.885601,-5.124997,3.334762,6.231669,2.766342,-7.177500,9.665380,-9.589667,-9.093076,-3.893998,6.576198,9.199753,1.786748,-1.910690,3.041257,-4.362001,9.346020,5.682809,1.605499,2.844902,5.824517,-5.513110,-9.351972,6.068624,6.137614,-5.036750,-1.154648,8.338900,3.293696,-1.200812,4.614041,-6.131250,8.482711,-1.131962,-9.667317,-9.406618,7.262991,3.879549,2.815625,-5.008732,-4.325876,0.711802,-5.893977,-1.516609,6.025760,-0.106275,4.615757,1.368892,-2.268268,1.351097,2.503144,-4.306249,-3.440132,-7.409983,9.842508,-8.675727,-2.653477,-3.339702,-3.880486,-8.147696,-2.243310,4.146363,1.940455,-6.522592,-5.329965,9.149620,0.440762,-8.043712,5.342795,3.142368,2.998375,-5.165097,-3.552766,-2.715536,5.202040,-7.451213,3.347211,1.579946,-5.555398,-8.659101,-5.632446,-8.407822,-9.338333,6.255239,1.744942,-9.958913,5.623496,-7.812109,9.836930,-3.210519,-7.012486,-1.965175,-1.464085,-5.717475,-1.460961,3.723147,-7.641391,-4.434262,-5.195889,-4.674285,8.170227,-7.892542,2.697700,-4.261350,8.364303,9.331920,5.843452,1.158337,-7.708042,-5.207407,8.560355,5.840909,6.225078,-9.331732,9.884909,3.037866,1.949025,1.219856,8.330226,5.605331,7.169053,-5.882899,7.855712,-9.207776,5.526434,-3.248287,3.617519,2.661852,0.869222,-5.842220,-6.833557,5.578202,-3.109598,7.091241,-3.810307,-0.581364,2.930485,-1.345283,4.456154,-6.130509,3.182809,3.320840,-9.726960,4.151366,-9.219510,9.555249,-3.700246,-7.700185,3.505080,-2.725650,-3.850401,0.982233,0.517865,-3.645109,4.356522,0.910826,1.329279,6.599208,8.259096,-6.821447,-5.818404,8.821915,-3.187832,8.512952,9.729045,-1.695405,8.964583,8.673377,2.825624,9.934599,3.742438,-3.187502,6.594964,-9.467678,-0.113357,-8.761573,-4.018353,9.853765,3.421138,6.777352,-3.502158,-9.729552,4.646902,-7.337003,-3.464269,1.337059,9.709270,-8.516629,0.131463,0.116692,9.040825,8.593213,0.427166,5.022101,4.447077,5.583660,-3.406115,8.315318,-5.654880,-8.437127,7.043850,-8.248992,9.823169,2.260969,3.551392,7.259931,-8.027847,8.455415,7.058553,-1.505167,6.661252,4.000362,-7.217883,6.864547,-2.238428,2.822068,-7.678530,-2.554568,-6.688898,-7.757387,2.227210,7.088831,-2.034841,6.795397,8.314519,3.296348,-5.667162,-7.994956,4.727587,8.210396,2.272380,-2.628237,-6.494421,-6.851815,-2.340670,-7.547170,-8.705894,-7.356661,-5.996449,-1.357042,0.497436,-0.514116,-8.521734,-5.721665,7.644634,-6.550897,-1.674984,-7.792921,4.111809,-6.335845,9.061046,9.100939,-0.333828,8.400058,-5.076337,-5.593442,7.395869,9.309730,8.885370,2.102586,8.567022,9.113419,-4.456283,-5.569481,-6.574662,-9.062384,6.120227,0.738801,9.924084,2.621358,1.937882,2.374625,-0.909903,-2.354334,5.380768,-0.270449,3.612315,-5.530007,8.979600,-1.754469,4.803731,-9.405827,-6.433352,-6.897656,-0.994032,7.548994,3.475486,-1.266077,8.842368,5.876731,-1.968115,9.367002,-9.846839,-5.673803,-6.344583,0.899856,8.378090,1.441473,-8.223559,7.669667,6.549834,-4.078889,5.544136,-9.553021,4.304526,1.717040,-7.073560,-6.826151,8.948371,-7.993542,9.384527,3.512888,9.106978,-9.451266,6.544743,-5.975483,1.097805,8.750605,9.339323,7.568426,-7.379311,8.679024,-3.389507,6.963702,-4.187911,5.695311,8.733375,-4.495547,9.766229,-0.830547,-3.551368,5.066670,9.067951,-8.087787,6.534205,-2.655095,3.244409,-1.547668,1.712902,7.163232,5.130654,1.181197,3.760408,-4.654721,-8.371400,0.545300,7.387513,-8.594997,-6.797179,-5.995813,1.971485,2.728850,-3.253780,-2.595632,1.555865,6.592319,-2.214579,8.926238,-0.947492,5.985806,5.025957,9.267304,4.960016,1.778227,-6.904498,9.252680,-6.778196,-0.838419,-2.142261,-1.321179,-9.443352,0.065555,-9.098857,3.512602,-6.691737,-6.646339,4.630905,-7.188448,1.701559,-2.522458,3.681274,0.453354,-8.913248,-0.370878,-2.625923,-2.907116,-1.392780,-8.032519,6.390326,4.623344,-2.145434,9.940133,7.277338,-6.787410,1.483208,0.387382,6.774261,6.068731,-0.937297,-9.144164,-6.570819,-2.057462,-3.207354,-7.959399,-0.386969,0.069451,9.075582,-3.695311,9.406332,1.322348,-6.201994,0.473058,-9.861439,5.612724,4.388017,1.255492,1.090148,-3.439408,-0.335269,6.429174,1.724088,8.909873,9.814163,6.944675,7.524422,3.066430,7.881748,9.048244,8.700102,6.785108,-7.817852,6.894633,-6.443779,-7.788258,-8.774072,7.874231,-0.504237,-7.354287,-4.610390,-8.239683,-8.240598,7.506829,6.411815,0.295971,-6.642918,9.823263,-5.795668,-8.406989,-4.656914,0.060441,-7.615543,-3.806020,-0.164018,-9.821626,3.913065,-1.325811,-0.658138,8.917121,-4.611700,7.971305,2.496616,0.657920,7.272859,-0.607866,-9.543756,-1.704845,-2.023030,-2.406791,8.222838,-6.792833,4.253252,-5.972082,-5.384359,4.027747,0.621066,8.352022,8.863679,-3.941758,-2.262627,5.882542,-0.386502,7.908692,-6.783630,5.009787,-7.199745,-6.696525,-0.857772,-0.570013,2.682173,8.602355,-4.175686,8.367400,-7.175928,-4.193149,1.046221,7.260934,0.442831,-0.179802,-2.014116,8.572531,9.312223,3.591319,-8.885057,3.161968,5.186459,-9.687420,8.170560,-0.952590,7.214428,1.729642,-2.479698,9.864960,1.683539,6.618502,4.289716,3.936309,0.362657,7.729085,-4.832866,1.443428,1.531037,8.218135,7.832114,-5.444363,-4.288698,8.194731,3.214507,-2.612651,8.804268,-9.410686,-7.764626,6.820649,-5.143195,2.358897,4.886994,8.670500,5.686872,-5.465779,-2.617450,4.066850,-1.857968,0.291859,6.365597,-7.815180,4.485011,-5.390824,-8.425849,9.084490,-6.560215,7.468664,2.168991,-2.918133,8.312508,-4.930976,-3.187314,-4.990646,-1.270017,-5.709764,3.280535,-7.488681,3.636329,-5.609341,9.000129,2.068732,2.396935,3.371023,4.677815,5.122002,-4.911339,-3.531274,6.360950,3.760836,-3.010775,-9.312321,4.914737,-0.583469,9.661042,-4.191211,2.069616,-6.063773,2.462523,1.406697,7.277650,3.134539], dtype = "float32")#candidate|4821|(1008,)|const|float32
var_4822 = relay.var("var_4822", dtype = "int16", shape = ())#candidate|4822|()|var|int16
var_4823 = relay.var("var_4823", dtype = "int64", shape = (450,))#candidate|4823|(450,)|var|int64
call_4818 = relay.TupleGetItem(func_3128_call(relay.reshape(var_4819.astype('float64'), [15, 13, 11]), relay.reshape(const_4820.astype('float64'), [1, 192]), relay.reshape(const_4821.astype('float32'), [1008,]), relay.reshape(var_4822.astype('int16'), []), relay.reshape(var_4823.astype('int64'), [10, 9, 5]), relay.reshape(var_4819.astype('float64'), [15, 13, 11]), ), 6)
call_4824 = relay.TupleGetItem(func_3135_call(relay.reshape(var_4819.astype('float64'), [15, 13, 11]), relay.reshape(const_4820.astype('float64'), [1, 192]), relay.reshape(const_4821.astype('float32'), [1008,]), relay.reshape(var_4822.astype('int16'), []), relay.reshape(var_4823.astype('int64'), [10, 9, 5]), relay.reshape(var_4819.astype('float64'), [15, 13, 11]), ), 6)
bop_4834 = relay.logical_xor(bop_4811.astype('int64'), relay.reshape(var_4809.astype('int64'), relay.shape_of(bop_4811))) # shape=(12, 10, 9)
output = relay.Tuple([call_4818,var_4819,const_4820,const_4821,var_4822,var_4823,bop_4834,])
output2 = relay.Tuple([call_4824,var_4819,const_4820,const_4821,var_4822,var_4823,bop_4834,])
func_4855 = relay.Function([var_4809,var_4810,var_4819,var_4822,var_4823,], output)
mod['func_4855'] = func_4855
mod = relay.transform.InferType()(mod)
mutated_mod['func_4855'] = func_4855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4855_call = mutated_mod.get_global_var('func_4855')
var_4857 = relay.var("var_4857", dtype = "int8", shape = (12, 10, 9))#candidate|4857|(12, 10, 9)|var|int8
var_4858 = relay.var("var_4858", dtype = "int8", shape = (12, 10, 9))#candidate|4858|(12, 10, 9)|var|int8
var_4859 = relay.var("var_4859", dtype = "float64", shape = (11, 195))#candidate|4859|(11, 195)|var|float64
var_4860 = relay.var("var_4860", dtype = "int16", shape = ())#candidate|4860|()|var|int16
var_4861 = relay.var("var_4861", dtype = "int64", shape = (450,))#candidate|4861|(450,)|var|int64
call_4856 = func_4855_call(var_4857,var_4858,var_4859,var_4860,var_4861,)
output = call_4856
func_4862 = relay.Function([var_4857,var_4858,var_4859,var_4860,var_4861,], output)
mutated_mod['func_4862'] = func_4862
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5074 = relay.var("var_5074", dtype = "uint64", shape = (2, 4, 12))#candidate|5074|(2, 4, 12)|var|uint64
const_5075 = relay.const([[[9,-4,-4,-3,-4,10,1,-3,-5,4,7,-5],[-2,-6,3,-4,-1,-3,3,-10,10,-2,9,-5],[-6,-8,9,-3,-10,5,1,8,-8,-1,-6,6],[2,-6,-3,-7,10,-3,-9,-1,-9,4,6,4]],[[-4,4,7,-5,-8,-9,-4,2,-2,-4,-5,-1],[3,-4,9,4,-2,-3,-8,7,-1,-9,-5,-10],[9,-9,1,7,-7,-7,-9,-2,-9,2,-3,-5],[5,9,6,8,-3,10,-9,10,-9,6,7,-1]]], dtype = "uint64")#candidate|5075|(2, 4, 12)|const|uint64
bop_5076 = relay.left_shift(var_5074.astype('uint64'), relay.reshape(const_5075.astype('uint64'), relay.shape_of(var_5074))) # shape=(2, 4, 12)
output = relay.Tuple([bop_5076,])
output2 = relay.Tuple([bop_5076,])
func_5080 = relay.Function([var_5074,], output)
mod['func_5080'] = func_5080
mod = relay.transform.InferType()(mod)
mutated_mod['func_5080'] = func_5080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5081 = relay.var("var_5081", dtype = "uint64", shape = (2, 4, 12))#candidate|5081|(2, 4, 12)|var|uint64
func_5080_call = mutated_mod.get_global_var('func_5080')
call_5082 = func_5080_call(var_5081)
output = call_5082
func_5083 = relay.Function([var_5081], output)
mutated_mod['func_5083'] = func_5083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5827 = relay.var("var_5827", dtype = "int64", shape = (12, 6, 1))#candidate|5827|(12, 6, 1)|var|int64
const_5828 = relay.const([[[8,-6,-4,6,1,9,2,10,6,-4,3,8,-3,4],[3,8,9,-6,2,3,3,-5,-4,6,6,-9,-8,-6],[5,-10,1,10,3,1,8,-1,7,-8,3,-1,4,10],[8,2,6,-10,2,-7,5,-10,-3,4,9,3,7,-2],[5,-2,10,4,8,4,-5,-6,-10,-5,-9,7,2,1],[5,8,-7,-10,-6,2,-10,5,9,8,-10,-4,-2,7]],[[2,-1,3,-6,-4,5,3,-6,-4,-10,4,2,-3,-3],[1,8,9,-10,-3,-1,5,6,3,-10,-7,-10,10,-5],[10,7,7,5,-7,6,-3,8,3,3,8,-3,-4,5],[6,-7,7,10,-9,8,1,-5,-3,2,7,-1,1,-1],[6,-10,-6,-1,-1,5,-3,6,-10,-10,-6,-8,10,-9],[5,9,-7,-6,-8,-4,-5,8,5,-5,7,-8,8,5]],[[9,-10,-5,8,9,-5,-10,-5,9,6,-9,8,6,6],[-6,-1,-8,-9,-1,-5,10,9,-10,-4,10,-2,1,-3],[-10,1,2,10,7,3,6,-10,9,-6,-6,7,-2,-4],[-2,2,-8,9,6,-1,9,-3,-5,1,2,4,-8,5],[1,5,-6,7,-9,-7,-6,-10,-4,1,-5,5,2,9],[-2,1,2,1,2,-6,-2,8,1,4,2,-7,10,8]],[[5,1,10,3,10,3,-1,3,-10,-1,10,8,-1,-10],[-9,2,-6,1,6,1,9,-8,-1,-4,-1,-3,2,-4],[6,-5,-2,9,9,5,8,-3,-8,-7,-9,1,8,2],[3,5,10,6,-7,10,-7,-5,-1,-3,-7,-9,1,-8],[-1,-3,8,6,9,10,7,4,-4,-2,-5,-3,5,-1],[-9,-7,3,7,-9,-9,-6,-6,6,-10,7,5,-5,6]],[[-10,6,10,-2,-7,-4,5,-5,-10,-4,1,9,6,-1],[4,-10,-8,6,4,-3,-8,-7,10,-3,-5,9,3,-3],[5,9,-5,6,7,-3,1,-2,-3,-3,1,3,3,1],[1,-2,-1,-6,1,-2,-5,1,-3,6,-4,-8,4,-2],[-3,-10,8,-1,-6,7,-10,-8,-6,-2,4,4,6,4],[3,-7,-8,9,1,-6,6,4,4,2,1,-8,1,-4]],[[4,-8,-3,-1,10,-8,1,-9,9,6,3,1,1,10],[3,-10,-1,4,-1,-4,9,3,-6,-9,-6,-8,3,5],[-1,4,1,1,-10,6,9,4,2,8,-10,4,-3,4],[-4,-8,6,-8,-5,8,3,-9,-6,2,10,7,-8,5],[5,-5,-10,3,4,4,-10,7,8,8,8,-1,10,10],[3,9,-9,-7,7,7,-3,3,3,9,-7,-5,-4,5]],[[6,-2,-3,7,5,-10,-5,-6,-8,-2,-8,-2,7,-3],[-6,7,-6,-3,9,-2,5,9,-1,-10,3,-9,4,-7],[1,-2,-8,8,-7,4,10,-2,-8,-9,-5,9,1,-8],[-1,6,7,-8,-6,-9,-9,10,-1,-6,-3,-9,4,-6],[-5,-9,-1,6,-2,3,3,8,-8,-1,1,7,2,4],[-3,-10,7,3,-4,-8,-5,2,-6,8,-9,3,6,-5]],[[6,-2,-2,-7,2,8,1,2,-10,2,5,2,-8,-5],[4,1,-9,-3,7,-9,2,-5,-5,8,9,3,-1,9],[9,4,-2,-7,9,-2,-10,5,8,4,7,1,2,-2],[-9,4,5,-5,-4,9,-2,2,-10,3,-9,3,9,-5],[-8,-5,10,-6,7,1,4,7,-1,-8,-7,2,10,-1],[-9,-1,5,-5,7,-9,5,-8,-2,-4,5,5,-5,-6]],[[-2,3,5,-10,3,-5,-9,7,-4,4,1,8,-10,-5],[-10,9,2,-3,7,9,-1,10,-9,-5,-3,9,-6,9],[-2,10,-9,-5,-10,-10,-2,-7,-3,4,-6,-5,7,-3],[4,9,-10,9,-8,10,3,-5,1,9,-2,6,-3,7],[6,2,-3,6,-10,3,-9,5,5,6,-3,9,-9,3],[7,-1,9,-3,-6,6,-7,-3,-5,8,-10,5,-1,-9]],[[1,-2,2,-1,7,-3,-4,9,1,-8,10,-6,2,4],[-8,-6,6,5,-1,9,10,-1,3,8,1,8,-3,4],[8,1,-2,4,6,4,-8,5,4,-6,5,-1,-9,-8],[5,-10,-9,-10,-9,-6,6,2,2,-3,3,-3,3,-3],[-3,7,-2,-1,-7,1,-5,-10,-7,-8,10,-7,-3,1],[6,-10,-6,9,3,10,-2,7,8,-2,-10,7,-2,-6]],[[9,-2,-3,6,-9,-9,8,2,2,9,9,-8,2,10],[2,-10,3,-5,-4,8,-7,-6,8,-5,9,2,-5,-6],[6,2,4,-8,-6,5,-4,-3,-10,6,-7,10,-4,6],[5,-8,-10,10,4,2,10,2,-10,7,-4,-10,5,-8],[4,-8,-6,9,-9,-9,-6,-7,-10,-10,-1,-2,1,7],[4,3,-7,-9,1,8,-7,-5,10,1,10,-10,-10,6]],[[-6,5,8,10,-3,10,-6,-4,-7,-8,-2,7,-10,-2],[9,10,-3,-5,-5,6,-3,3,-5,2,7,-9,9,-10],[-2,9,-2,-9,6,-6,1,2,-10,-1,2,-7,3,10],[3,-1,6,-8,-3,-3,-3,1,-3,-5,-7,-10,-2,-10],[4,-7,1,9,1,6,-4,-2,-2,-10,7,-9,-4,3],[-5,-10,-2,3,-6,1,-2,1,7,-5,-6,5,-10,8]]], dtype = "int64")#candidate|5828|(12, 6, 14)|const|int64
bop_5829 = relay.bitwise_or(var_5827.astype('int64'), const_5828.astype('int64')) # shape=(12, 6, 14)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
const_5845 = relay.const([[4],[10],[-7],[-1],[7],[9],[8],[5],[-2],[-8],[-4],[-8],[8],[-6],[-3],[-9],[-4],[5],[7],[10],[-3],[3],[-10],[9],[9],[-4],[2],[4],[6],[-6],[-8],[-8],[-5],[6],[2],[5],[-7],[-9],[7],[9],[-5],[9],[-7],[-1],[2],[-1],[-4],[7],[-3],[1],[-10],[-1],[5],[6],[-7],[-1],[7],[4],[-4],[-4],[2],[-9],[4],[6],[-8],[5],[3],[7],[-7],[3],[-7],[10],[4],[-6],[9],[-3],[7],[9],[-9],[-1],[2],[-6],[-3],[3],[5],[3],[8],[-6],[7],[9],[3],[-1],[7],[4],[-5],[-2],[4],[-1],[1],[6],[-10],[2],[2],[2],[-9],[7],[6],[-6],[8],[-6],[6],[1],[6],[-4],[8],[6],[1],[-7],[5],[4],[2],[-8],[1],[-1],[4],[5],[7],[-10],[8],[1],[6],[-3],[5],[-9],[1],[4],[7],[4],[-8],[9],[6],[1],[-8],[6],[7],[-3],[7],[9],[7],[-2],[-3],[2],[10],[8],[-4],[-7],[-8],[4],[1],[5],[9],[2],[-1],[-8],[1],[7],[-8],[-4],[8],[4],[8],[2],[4],[-4],[-8],[-5],[-5],[3],[-10],[-6],[-4],[-6],[3],[-9],[-1],[-3],[-8],[5],[-1],[-7],[7],[5],[8],[10],[10],[-8],[-9],[7],[4],[3],[10],[-4],[-2],[-10],[-7],[-1],[-8],[-6],[6],[-2],[-2],[-3],[5],[-4],[-7],[-4],[-4],[-7],[7],[-9],[-6],[-1],[-9],[-1],[-3],[-5],[5],[7],[-7],[7],[-8],[3],[9],[-8],[9],[1],[2],[-10],[-10],[-7],[-5],[-9],[2],[8],[-7],[-5],[8],[-8],[-8],[-3],[6],[2],[7],[10],[-2],[10],[1],[6],[5],[5],[1],[-6],[-6],[5],[-1],[-10],[-2],[6],[4],[-5],[-4],[4],[4],[9],[7],[9],[1],[-6],[10],[-4],[-8],[1],[-7],[-7],[4],[9],[-9],[-3],[4],[2],[5],[-1],[9],[-5],[9],[-3],[4],[-6],[10],[3],[-9],[1],[-5],[1],[-6],[3],[6],[-8],[-1],[5],[2],[6],[-1],[-8],[8],[-6],[4],[-5],[2],[10],[-10],[-7],[-9],[3],[-8],[10],[8],[8],[10],[2],[-7],[-5],[6],[10],[7],[-3],[-5],[3],[-5],[-3],[-7],[-3],[-1],[-4],[-6],[1],[5],[-2],[7],[8],[-4],[-8],[1],[-2],[-10],[-9],[2],[-1],[2],[-3],[4],[-10],[9],[1],[-6],[9],[9],[-8],[1],[-9],[8],[7],[10],[2],[3],[-10],[9],[-7],[4],[4],[6],[9],[-1],[8],[-8],[2],[-4],[4],[6],[6],[1],[-6],[6],[1],[-1],[1],[8],[-5],[-8],[2],[9],[-1],[-4],[-7],[-3],[2],[6],[4],[-3],[-3],[10],[4],[-5],[-9],[-1],[8],[9],[-2],[-4],[-5],[-9],[1],[-9],[9],[-10],[8],[8],[9],[10],[-4],[-1],[10],[-2],[2],[1],[-3],[6],[-8],[-8],[9],[-1],[7],[-1],[-3],[-4],[-4],[1],[-2],[-8],[9],[2],[2],[5],[-5],[8],[1],[4],[-1],[4],[-8],[4],[3],[7],[8],[-2],[5],[-8],[-3],[8],[6],[-5],[7],[4],[-4],[3],[7],[5],[-1],[-7],[-10],[-6],[2],[1],[-7],[-5],[-4],[7],[-10],[9],[-9],[8],[-10],[-8],[-7],[-9],[-4],[3],[9],[3],[-4],[-8],[-1],[-10],[-7],[-4],[1],[-4],[7],[1],[-7],[-3],[5],[8],[10],[1],[-10],[-2],[3],[-1],[-1],[7],[-7],[3],[3],[9],[2],[2],[8],[3],[-9],[-1],[3],[-1],[7],[7],[5],[10],[-4],[-7],[4],[-8],[8],[8],[-8],[-3],[7],[-8],[-1],[-7],[9],[4],[7],[-7],[4],[-10],[9],[-7],[-6],[4],[-5],[-2],[3],[3],[1],[10],[-3],[5],[8],[-4],[7],[3],[2],[5],[-4],[-3],[-6],[-1],[9],[2],[-3],[9],[9],[-9],[9],[1],[7],[-3],[5],[-8],[-9],[-10],[-8],[-3],[-7],[6],[-1],[10],[-2],[-9],[4],[6],[-6],[-2],[-7],[2],[3],[-10],[-4],[-9],[-1],[-3],[-3],[-2],[-1],[3],[-1],[-9],[-10],[-9],[-1],[-2],[2],[-5],[-8],[-7],[1],[-1],[2],[7],[-4],[-1],[1],[-3],[-8],[7],[-1],[4],[-4],[2],[-3],[-9],[9],[-7],[3],[6],[-6],[2],[6],[-10],[8],[-6],[8],[-4],[8],[4],[-5],[8],[-5],[4],[-10],[-5],[7],[8],[5],[-10],[5],[3],[3],[-8],[3],[4],[5],[1],[8],[-7],[-8],[-7],[-2],[-10],[2],[1],[3],[3],[-1],[-1],[-10],[-2],[9],[-2],[1],[-5],[2],[5],[6],[-4],[-5],[-8],[-10],[8],[-9],[-6],[4],[-4],[3],[9],[-7],[-2],[8],[-6],[3],[5],[-4],[-10],[-3],[6],[5],[-2],[1],[-3],[-4],[-8],[-7],[-2],[8],[-1],[8],[2],[-8],[-10],[9],[2],[-9],[-5],[2],[7],[-10],[-1],[-7],[-4],[-2],[7],[1],[-6],[2],[-10],[2],[-8],[-8],[-3],[3],[-8],[-5],[2],[1],[7],[2],[-3],[-7],[-2],[5],[-1],[3],[7],[-2],[-2],[10],[-8],[7],[7],[9],[-1],[-1],[-4],[5],[7],[-5],[6],[8],[7],[-2],[5],[-7],[7],[6],[-3],[-1],[3],[-1],[8],[2],[-6],[4],[3],[5],[-3],[1],[9],[2],[3],[3],[10],[2],[-3],[2],[-1],[-7],[-9],[8],[4],[-6],[-10],[-7],[-4],[-8],[-5],[-4],[-4],[10],[-1],[9],[7],[8],[-10],[2],[2],[2],[-2],[3],[-6],[-4],[2],[9],[6],[1],[4],[-9],[9],[-8],[6],[2],[-5],[-1],[3],[-6],[5],[-3],[-2],[10],[2],[7],[-5],[-6],[6],[3],[2],[-1],[2],[-8],[4],[-6],[-6],[5],[-9],[-5],[-8],[6],[9],[-6],[-6],[8],[-4],[8],[8],[1],[-2],[2],[-3],[-5],[2],[5],[2],[-1],[-5],[-5],[-6],[10],[-1],[6],[-6],[5],[3],[3],[4],[2],[10],[6],[-1],[3],[4],[9],[-3],[1],[-9],[5],[-5],[1],[-8],[6],[4],[8],[5],[6],[-10],[4],[-8],[-7],[-1],[-5],[7],[-4],[-8],[2],[1],[10],[6],[-1],[-1],[-7],[-5],[9],[3],[2],[-6],[4],[5],[-8],[5],[1],[-8],[5],[-8],[-4],[-3],[-1],[1],[10],[8],[8],[9],[5],[-2],[-10],[-3],[-6],[1],[-4],[6],[-9],[-9],[7],[-2],[6],[9],[2],[-5],[-5],[-2],[-5],[4],[-7],[-1],[-6],[-8],[-7],[-5],[9],[-1],[5],[-8],[-9],[4],[2],[-7],[-10],[-6],[-7],[-7],[-5],[-8],[-4],[-5],[8],[7],[-6],[-8],[7],[-1],[9],[-6],[10],[-5],[9],[2],[9],[-6],[-10],[-5],[9],[-10],[6],[-1],[4],[-4],[9],[-2],[-1],[8],[1],[6],[7],[-10],[-5],[5],[-6],[10],[-7],[-6],[5],[1],[-9],[-5],[-10],[-2],[2],[-10],[2],[-5],[-4],[2],[9],[3],[-4],[-4],[1],[3],[10],[2],[-10],[10],[4],[10],[-9],[-4],[7],[-4],[-9],[2],[-8],[-2],[-6],[8],[-4],[6],[5],[-5],[-8],[-7],[-10],[-2],[9],[5],[7],[-3],[6],[1],[-2],[-5],[-9],[10],[9],[-7],[10],[5],[-4],[-1],[7],[3],[3],[-6],[-1],[8],[5],[-2],[6],[-2],[-9],[1],[-2],[-1],[3],[1],[6],[-3],[-2],[-8],[5],[-8],[9],[9],[-2],[-10],[10],[10],[8],[-10],[1],[-3],[9],[-8],[5],[4],[1],[-2],[-10],[8],[2],[2],[-9],[-3],[4],[-10],[-7],[2],[8],[-5],[-5],[5],[-10],[8],[6],[3],[2],[-9],[10],[10],[7],[8],[2],[10],[-1],[5],[5],[-2],[6],[5],[6],[9],[7],[-10],[2],[-10],[-9],[-1],[-8],[3],[7],[7],[-9],[-6],[-9],[-7],[1],[2],[6],[5],[-2],[-4],[-1],[2],[-7],[1],[6],[-5],[7],[9],[2],[-2],[4],[1],[5],[-7],[-10],[8],[8],[-3],[8],[9],[1],[8],[-3],[5],[-5],[-8],[-10],[10],[-6],[-4],[9],[-10],[-3],[-4],[-8],[-4],[6],[9],[9],[5],[-1],[-4],[6],[6],[-2],[-8],[2],[10],[10],[8],[-6],[9],[6],[-1],[9],[10],[1],[-1],[-9],[-8],[-7],[4],[6],[-9],[-7],[-6],[-1],[6],[2],[4],[-3],[1],[10],[2],[-9],[2],[9],[-7],[9],[5],[3],[2],[-6],[-1],[6],[-10],[-10],[5],[-7],[9],[7],[3],[-7],[-3],[6],[-4],[-9],[5],[5],[-6],[3],[-9],[10],[-5],[1],[10],[5],[-4],[-4],[1],[-2],[3],[1],[9],[-5],[-6],[10],[1],[9],[5],[-10],[-8],[10],[9],[8],[8],[-5],[3],[6],[-4],[6],[9],[-7],[-6],[-6],[6],[7],[3],[5],[-3],[-2],[-3],[9],[-4],[8],[8],[-10],[-10],[9],[3],[6],[-3],[3],[-2],[10],[1],[8],[10],[10],[4],[6],[9],[-1],[2],[4],[5],[-5],[5],[-6],[8],[4],[-9],[-3],[-10],[7],[-8],[8],[-8],[8],[-8],[5],[4],[-4],[10],[6],[8],[-5],[-10],[8],[-1],[8],[5],[-1],[-6],[2],[1],[7],[-7],[-4],[3],[-5],[8],[5],[-10],[10],[7],[3],[3],[-4],[-10],[2],[4],[-9],[-2],[-8],[-3],[-3],[-4],[-10],[3],[-6],[-7],[2],[-10],[10],[-5],[-5],[6],[9],[-9],[5],[1],[2],[8],[2],[2],[-4],[6],[3],[-4],[-9],[-9],[-9],[-2],[-5],[7],[-2],[7],[6],[8],[9],[-5],[-2],[-10],[-10],[-10],[-5],[-5],[6],[-3],[8],[-8],[-8],[6],[10],[-1],[5],[3],[10],[4],[8],[-9],[5],[-7],[1],[9],[-2],[2],[1],[6],[-4],[-2],[5],[-8],[-1],[-5],[8],[-3],[-7],[-1],[2],[10],[8],[4],[1],[-1],[-6],[-8],[10],[-8],[-8],[-1],[-6],[-9],[-5],[-1],[-2],[-9],[-4],[10],[-2],[2],[5],[3],[-6],[8],[1],[-2],[2],[-9],[-2],[3],[3],[6],[6],[5],[-6],[8],[-7],[-7],[-1],[6],[-4],[10],[-2],[4],[1],[-9],[3],[4],[-1],[9],[-3],[7],[9],[2],[-10],[-3],[-9],[-4],[-2],[-4],[-8],[-7],[-8],[2],[7],[-7],[10],[2],[-9],[-9],[-3],[7],[5],[-4],[10],[8],[-2],[-10],[-8],[-2],[-6],[7],[2],[-5],[-4],[-1],[-9],[10],[10],[9],[-1],[-1],[-3],[-3],[-5],[-6],[-3],[-7],[4],[7],[-8],[-6],[9],[-9],[1],[10],[-4],[-7],[1],[-8],[7],[7],[10],[-5],[6],[2],[-2],[-9],[6],[9],[-5],[-1],[9],[-7],[-8],[-7],[2],[-4],[-8],[5],[-3],[-7],[7],[6],[-5],[1],[4],[-10],[10],[5],[4],[-4],[8],[7],[9],[1],[10],[6],[6],[-3],[7],[-1],[-7],[-5],[-8],[-6],[4],[7],[8],[-7],[7],[-10],[4],[6],[-10],[-10],[-4],[9],[2],[8],[-4],[-10],[-4],[10],[10],[-2],[3],[-6],[8],[8],[-3],[-4],[-9],[-8],[-6],[-1],[-3],[-1],[-10],[3],[-6],[9],[-5],[-8],[-8],[-2],[7],[8],[8],[9],[4],[-6],[-2],[6],[-8],[4],[-3],[7],[7],[-2],[2],[-6],[7],[-4],[-7],[1],[-2],[-10],[6],[6],[6],[9],[-2],[-7],[2],[4],[1],[-2],[1],[7],[1],[-3],[5],[-7],[1],[6],[-1],[9],[3],[-2],[5],[-10],[5],[7],[10],[-8],[-2],[-3],[-4],[9],[-2],[-5],[1],[-6],[-9],[-1],[4],[3],[3],[-7],[-5],[-5],[-4],[7],[9],[-5],[2],[5],[5],[-10],[-10],[1],[10],[5],[-5],[10],[5],[-9],[6],[-9],[2],[7],[6],[-7],[-5],[-7],[8],[1],[1],[3],[8],[8],[-9],[-4],[-4],[9],[9],[-10],[-9],[-5],[-6],[1],[8],[1],[-8],[9],[-10],[-1],[7],[3],[8],[-7],[-9],[1],[-6],[4],[7],[-3],[7],[-8],[10],[3],[6],[8],[-9],[3],[2],[-6],[7],[-9],[-4],[-4],[-8],[7],[2],[-4],[-5],[-4],[-1],[4],[-3],[9],[9],[6],[-1],[-10],[10],[7],[2],[7],[1],[8],[-8],[-9],[-5],[9],[4],[-5],[3],[10],[8],[8],[-3],[-10],[-9],[8],[-6],[-8],[-1],[5],[1],[-3],[-2],[-7],[-10],[9],[-8],[-10],[2],[-7],[4],[-4],[4],[-7],[8],[10],[-6],[4],[1],[-4],[-10],[-3],[-2],[9],[-10],[8],[2],[6],[-4],[8],[5],[-3],[10],[10],[1],[-4],[-9],[-9],[-9],[-6],[5],[-5],[-3],[-4],[4],[-9],[9],[-1],[-1],[2],[-6],[-5],[5],[-5],[-4],[-3],[2],[7],[-9],[-2],[-2],[-3],[3],[4],[6],[6],[-4],[7],[6],[-6],[-3],[-9],[-9],[10],[-7],[2],[-5],[4],[8],[4],[4],[5],[4],[9],[-4],[-8],[4],[-9],[6],[-10],[6],[-4],[-6],[3],[-6],[7],[10],[8],[-4],[1],[10],[4],[-7],[-8],[6],[7],[9],[-5],[2],[8],[-6],[6],[8],[9],[10],[1],[-9],[7],[-10],[10],[2],[-8],[-1],[-5],[-2],[8],[1],[3],[9],[5],[-3],[-3],[-3],[-2],[-3],[9],[-2],[-8],[3],[-5],[-8],[2],[-9],[9],[10],[-1],[-10],[7],[3],[8],[-2],[3],[5],[6],[-5],[-2],[3],[2],[-2],[2],[-7],[-3],[7],[2],[-9],[-6],[-9],[-4],[10],[-4],[-10],[8],[2],[-7],[-3],[6],[-4],[-10],[-1],[9],[-5],[1],[-5],[8],[-7],[-10],[9],[-10],[10],[-7],[6],[4],[2],[-1],[8],[-3],[6],[-5],[-8],[-8],[-5],[4],[8],[9],[1],[10],[9],[9],[10],[4],[-1],[-1],[10],[-10],[8],[5],[-8],[-9],[3],[2],[-4],[-5],[-10],[4],[-4],[8],[-5],[4],[4],[6],[-2],[5],[-10],[-6],[-4],[8],[3],[-1],[-8],[3],[-3],[-9],[1],[-6],[7],[-8],[2],[1],[-10],[6],[-7],[4],[-8],[3],[1],[-7],[-10],[-5],[-10],[-7],[-4],[6],[-8],[10],[3],[-4],[10],[10],[-4],[-3],[-10],[9],[9],[-2],[-8],[3],[-4],[10],[7],[-2],[7],[1],[-3],[-7],[-6],[1],[-1],[8],[8],[-8],[-1],[-10],[2],[-6],[9],[-1],[5],[6],[-5],[-4],[1],[6],[8],[3],[-4],[-2],[-2],[9],[-2],[4],[5],[10],[9],[8],[8],[2],[-9],[-3],[-2],[3],[-7],[-2],[-7],[6],[-8],[-3],[-8],[-2],[8],[9],[-4],[-5],[-1],[8],[-7],[1],[7],[-5],[-4],[6],[-1],[-4],[-9],[-6],[-8],[2],[7],[-3],[-8],[-2],[-5],[8],[-8],[-6],[2],[-4],[-8],[-4],[7],[-7],[4],[-5],[9],[-7],[-10],[-3],[-4],[6],[-4],[4],[-4],[-10],[9],[3],[-1],[-8],[-10],[-6],[-10],[9],[4],[6],[-2],[9],[5],[-1],[4],[-3],[-7],[-6],[7],[-5],[-9],[-7],[4],[1],[-7],[-3],[9],[5],[7],[-5],[1],[-3],[-4],[-7],[5],[7],[1],[-4],[-1],[10],[-2],[-7],[6],[7],[1],[-4],[9],[9],[8],[-4],[7],[8],[-7],[-2],[5],[-6],[-6],[-2],[-6],[8],[2],[-10],[-1],[6],[-4],[-2],[-4],[-9],[-1],[1],[3],[-5],[-2],[-3],[-7],[-8],[5],[9],[6],[3],[6],[10],[-6],[-2],[8],[-4],[-1],[-1],[-7],[3],[-7],[2],[8],[8],[-9],[-3],[8],[6],[2],[4],[-1],[2],[9],[-7],[2],[-2],[-3],[-3],[-8],[-5],[3],[3],[-1],[7],[6],[3],[10],[-3],[1],[-7],[2],[-1],[4],[5],[4],[8],[-8],[-9],[9],[-4],[9],[-4],[5],[8],[-7],[-10],[-4],[5],[-5],[-9],[-2],[8],[-7],[1],[-5],[1],[-2],[-1],[-4],[2],[5],[2],[3],[7],[-10],[10],[-5],[-2],[-5],[8],[-7],[2],[-8],[6],[-3],[3],[2],[-9],[-5],[-6],[-3],[4],[3],[10],[-8],[6],[1],[-5],[-2],[-9],[3],[4],[9],[2],[-10],[-8],[-3],[2],[-8],[-3],[-3],[4],[-8],[1],[1],[-4],[-5],[-2],[4],[10],[-10],[-6],[1],[-10],[10],[-7],[-6],[-7],[1],[-4],[-1],[9],[-9],[-10],[-4],[-6],[9],[1],[1],[10],[7],[-6],[-10],[7],[2],[-6],[-2],[-9],[-7],[-3],[-9],[7],[-2],[-7],[10],[-4],[-5],[-1],[-3],[6],[10],[10],[-10],[-4],[-10],[-10],[-5],[-9],[5],[-7],[1],[3],[-2],[-1],[-3],[-4],[-3],[-6],[5],[-10],[6],[-6],[-6],[7],[10],[6],[7],[-7],[4],[-8],[7],[1],[-8],[2],[6],[10],[1],[4],[-2],[-7],[-8],[2],[-2],[6],[9]], dtype = "int32")#candidate|5845|(2496, 1)|const|int32
call_5844 = relay.TupleGetItem(func_4365_call(relay.reshape(const_5845.astype('int32'), [16, 12, 13])), 0)
call_5846 = relay.TupleGetItem(func_4367_call(relay.reshape(const_5845.astype('int32'), [16, 12, 13])), 0)
output = relay.Tuple([bop_5829,call_5844,const_5845,])
output2 = relay.Tuple([bop_5829,call_5846,const_5845,])
func_5869 = relay.Function([var_5827,], output)
mod['func_5869'] = func_5869
mod = relay.transform.InferType()(mod)
mutated_mod['func_5869'] = func_5869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5870 = relay.var("var_5870", dtype = "int64", shape = (12, 6, 1))#candidate|5870|(12, 6, 1)|var|int64
func_5869_call = mutated_mod.get_global_var('func_5869')
call_5871 = func_5869_call(var_5870)
output = call_5871
func_5872 = relay.Function([var_5870], output)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6333 = relay.var("var_6333", dtype = "uint64", shape = (10, 10, 6))#candidate|6333|(10, 10, 6)|var|uint64
var_6334 = relay.var("var_6334", dtype = "uint64", shape = (10, 10, 6))#candidate|6334|(10, 10, 6)|var|uint64
bop_6335 = relay.add(var_6333.astype('uint64'), relay.reshape(var_6334.astype('uint64'), relay.shape_of(var_6333))) # shape=(10, 10, 6)
uop_6349 = relay.cosh(bop_6335.astype('float32')) # shape=(10, 10, 6)
output = relay.Tuple([uop_6349,])
output2 = relay.Tuple([uop_6349,])
func_6352 = relay.Function([var_6333,var_6334,], output)
mod['func_6352'] = func_6352
mod = relay.transform.InferType()(mod)
var_6353 = relay.var("var_6353", dtype = "uint64", shape = (10, 10, 6))#candidate|6353|(10, 10, 6)|var|uint64
var_6354 = relay.var("var_6354", dtype = "uint64", shape = (10, 10, 6))#candidate|6354|(10, 10, 6)|var|uint64
output = func_6352(var_6353,var_6354,)
func_6355 = relay.Function([var_6353,var_6354,], output)
mutated_mod['func_6355'] = func_6355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6391 = relay.var("var_6391", dtype = "uint32", shape = ())#candidate|6391|()|var|uint32
const_6392 = relay.const([[[7,9,3,3]],[[1,-3,3,9]],[[5,2,-8,7]],[[6,-4,7,-10]],[[-9,-8,-2,-8]],[[-10,-6,-6,10]],[[8,7,4,5]],[[-5,-2,10,1]],[[-3,-2,9,-10]],[[2,-5,-10,10]],[[-8,-4,-2,6]],[[-10,4,-10,-1]],[[-1,10,2,-10]],[[-3,-1,-9,-2]],[[9,-1,9,-10]]], dtype = "uint32")#candidate|6392|(15, 1, 4)|const|uint32
bop_6393 = relay.logical_xor(var_6391.astype('uint32'), const_6392.astype('uint32')) # shape=(15, 1, 4)
func_4387_call = mod.get_global_var('func_4387')
func_4390_call = mutated_mod.get_global_var('func_4390')
const_6403 = relay.const([-8,9,-6,-6,2,-10,5,-3,-8,-10,-6,-7,-9,-9,3,-6,-10,8,9,-1,-3,3,8,-2,-2,-9,7,-7,2,-9,-1,5,-2,-5,8,-4,-8,-10,-5,-3,5,5,-7,10,-10,4,6,1,2,-10,4,5,1,10,-8,-2,4,8,-10,9,-9,-1,2,-4,-8,7,8,-5,7,-6,-6,-9,6,2,-8,-7,-5,2,10,2,-2,-1,-10,1,2,4,6,10,3,-9,4,7,-4,-7,-5,-4,7,-7,-4,6,-6,7,6,-3,1,7,7,7,3,6,2,-6,7,-9,4,8,8,3,5,10,-7,5,2,-7,-3,-4,-3,5,-6,1,-10,9,6,-1,-7,9,9,-1,-4,-8,9,4,-4,4,-3,-9,5,2,-1,4,-3,3,-7,-7,-3,1,-10,-6,6,-4,6,-6,5,-4,-1,4,3,8,-4,-10,1,-8,8,5,5,-5,-7,6,8,-8,-10,3,-2,1,7,2,7,-10,6,-9,7,4,2,7,1,9,8,5,2,-7,-1,8,8,1,5,7,-3,-7,-2,-6,-10,6,-6,9,9,8,2,6,-6,-8,-6,-3,7,-5,-6,3,4,3,10,-8,5,-9,-2,1,-1,-8,-3,7,3,-8,-10,5,2,-4,10,-3,9,-6,-6,-10,-3,5,1,5,-3,5,7,9,-9,-4,-6,8,1,-6,-8,-6,-5,8,-5,2,-7,1,-8,-3,-5,8,8,-5,-9,-5,-7,9,-2,-10,1,4,10,3,-8,-4,7,-4,-7,1,-2,-2,-7,-3,-9,7,6,9,-9,-1,-1,9,9,3,4,4,10,5,9,8,2,8,-7,3,1,4,-10,-2,-8,-7,-8,-8,-6,-8,2,3,-1,1,1,-3,-9,6,10,10,-2,-10,-7,9,-1,8,-4,7,-3,-3,-4,7,-5,-3,-3,-5,-10,-3,3,-2,-10,-8,-3,-10,-5,3,1,-5,4,-3,10,10,-7,7,-9,-6,9,-3,-1,1,6,-7,3,-5,-9,4,10,-9,8,-7,-7,8,-7,10,-4,5,-4,-8,6,2,4,5,1,-9,4,-8,8,-8,-6,4,1,1,6,10,3,-7,9,10,-8,1,-6,-2,4,1,10,10,-9,-7,-10,-6,3,7,5,-4,-8,-4,1,-1,8,4,9,1,5,-2,-9,8,-10,-5,-4,-8,1,9,10,8,-1,-7,-8,-10,-10,-10,9,-10,2,-5,-4,1,7,-1,7,6,-4,10,-3,5,-3,4,-2,4,-2,10,-4,-3,-10,-7,-4,7,-5,-9,1,4,10,7,-4,6,10,2,-9,-4,-9,-6,-5,10,3,-10,3,8,4,5,-4,4,9,9,-10,4,7,2,-6,4,4,-4,10,2,7,3,-8,-7,-2,-4,-9,-4,10,-8,10,6,8,3,-1,-3,2,-2,-5,-7,5,-9,-10,1,-1,-6,3,-7,3,-8,-4,-5,-10,-7,5,-10,-5,-5,6,-5,-6,-7,5,9,-3,4,-1,4,-5,-4,4,1,7,-6,-1,-7,4,-6,-10,-6,-4,-2,9,-4,-8,-7,2,-4,3,1,1,-8,6,3,-9,-10,-1,-5,8,-7,8,1,-3,3,4,-7,-4,1,1,5,-5,2,-7,6,-8,4,-8,-10,-9,-4,-4,8,-8,-7,5,10,9,5,10,-3,-6,-6,9,5,6,-1,-2,10,9,10,1,1,-1,6,-8,10,4,-8,2,3,3,-2,-4,-7,-2,-7,9,5,-4,1,-9,-6,9,-8,-7,2,-8,7,9,-4,-2,-5,9,-3,10,9,-7,2,10,10,2,9,6,-1,1,5,-6,-6,-10,-2,-3,8,5,-7,-2,2,8,-4,-7,-1,-2,-2,9,-5,-7,9,-5,1,9,-5,-4,4,8,10,5,-4,10,-5,-5,7,-5,-3,5,10,-1,-6,-4,1,-10,-7,-2,2,-8,10,7,-7,-6,-3,-4,7,-2,4,-3,7,-6,8,9,10,7,1,7,-6,-8,-4,-4,10,5,-3,9,-2,6,2,2,-3,2,-2,-3,4,7,-6,8,-10,-9,1,-3,-2,-5,-6,-6,5,-4,9,-7,-9,-10,7,10,-2,8,-7,-8,-2,3,1,5,-9,5,8,-2,6,1,-1,3,-10,-9,-4,5,-10,-1,10,-9,7,-9,-7,10,-5,9,4,1,2,10,-7,-9,-5,-9,6,-6,-3,-6,7,4,-10,10,-2,5,-1,10,-2,-6,-9,2,1,6,2,-4,1,3,-10,3,-5,8,5,-5,-6,4,6,-9,-3,-2,-1,5,4,-3,-4,8,7,7,-3,9,-5,-3,8,-7,8,-7,6,1,4,6,-10,-5,-10,7,9,1,8,5,7,-6,-3,-4,-6,1,-8,-8,-3,3,7,9,7,-10,-5,10,6,6,2,-8,-4,-8,10,-1,9,8,-6,-4,8,-10,6,4,-10,1,2,-10,-10,1,4,-5,-5,-3,-10,6,8,1,-5,-7,-7,7,-2,10,-5,4,-2,-4,-9,-8,3,-7,7,6,4,9,6,5,-2,9,-5,-7,-1,-3,-10,-1,4,-6,9,5,5,-7,1,-8,4,-8,-2,5,10,6,-9,-2,7,4,-10], dtype = "int32")#candidate|6403|(980,)|const|int32
call_6402 = func_4387_call(relay.reshape(const_6403.astype('int32'), [14, 14, 5]))
call_6404 = func_4387_call(relay.reshape(const_6403.astype('int32'), [14, 14, 5]))
func_2873_call = mod.get_global_var('func_2873')
func_2877_call = mutated_mod.get_global_var('func_2877')
const_6416 = relay.const([-4,-7,-5,-6,-9,2,4,2,9,10,6,6,-2,7,9,5,2,-2,4,8,6,-1,-1,8,-2,8,4,3,1,7,4,3,-5,3,-5,-3,10,3,9,-5,-2,3,5,1,6,7,-10,-5,7,4,-8,-7,3,4,-1,-4,-10,-8,-3,-2,-7,-8,-9,-9,3,-10,-2,-1,-7,8,-2,9,-1,6,6,-2,6,7,5,4,3,8,1,10,-2,5,5,7,-3,-2,2,-1,6,-6,7,-8,3,6,5,3,-6,-5,-4,-9,-7,7,2,10,9,-10,3,7,-6,-2,-8,-10,5,7,8,-8,4,-6,5,-8,-9,1,6,10,10,3,-6,6,8,1,-9,3,-6,4,3,4,-8,-6,2,6,-7,-3,2,6,-3,6,-6,7,-5,3,-3,-2,3,-5,3,10,10,6,-1,10,9,-7,-6,-9,5,9,-1,1,8,-1,-9,4,4,-1,-10,10,8,4,-2,-5,5,7,4,1,5,-6,5,-6,-7,6,10,7,-1,-2,-6,-10,-10,8,-6,-9,-3,7,-2,-8,2,6,-10,-9,-4,6,5,-10,4,10,-6,-2,3,-6,-4,2,8,7,-1,-1,-7,-2,2,9,9,-5,-10,4,6,-6,4,-6,8,-10,-2,-1,-7,-1,-4,-2,-2,7,-4,3,1,-10,-7,-9,2,3,10,2,8,4,-4,6,7,-5,-4,-1,-8,-2,-9,-2,-10,-6,-9,-10,10,1,-4,9,10,-10,-4,1,-4,-9,-6,8,7,10,10,5,4,5,10,-7,10,7,2,6,-5,-3,-7,8,-2,-10,-6,4,8,8,-5,-8,-6,-9,-5,6,-9,8,7,7,-4,-4,1,-2,9,-5,-7,-9,10,-3,2,-4,8,8,9,9,-4,4,2,2,-6,-8,-2,9,-5,-8,2,2,3,7,5,5,-10,-3,-5,-4,4,7,8,-9,-6,4,8,-10,-5,-2,7,-10,-6,-9,-9,-3,6,-10,-6,9,-7,-2,8,5,2,-4,5,-6,-8,-4,-8,2,9,-8,1,6,2,-3,3,4,7,6,3,-5,-7,-7,-5,8,-1,8,-4,9,6,6,2,-7,-9,1,7,2,6,-8,10,-7,-2,2,1,4,5,-7,10,-6,-10,-9,-4,10,2,-2,-4,1,2,-4,7,10,-5,-7,-2,-6,-1,-9,7,6,9,-10,-5,-9,-4,-1,10,-3,10,-2,4,-7,2,-1,-7,-6,2,-9,7,-5,-2,4,-8,7,-6,2,-6,4,-7,6,-1,-10,10,-2,-9,10,3,-1,8,1,-6,3,-4,-1,3,4,-2,6,4,-9,-5,4,10,1,5,3,6,5,-4,-10,-4,8,1,-7,2,-9,2,4,-9,1,8,-7,-1,-6,-1,-9,-5,2,-1,-10,-3,-9,-2,-1,10,7,6,-6,-8,-2,-1,5,-8,-1,-4,-3,9,5,6,4,-8,6,7,-10,4,-6,-3,-10,-8,9,3,-2,-3,-6,1,-7,-5,2,2,-8,4,-1,7,-7,6,8,9,4,6,-2,-1,5,-1,7,1,-10,-1,3,6,-4,9,2,1,1,-5,6,2,-2,-10,-8,4,7,1,-5,1,9,-1,-7,4,-2,1,-5,-9,7,5,10,3,7,7,-1,9,-8,9,-3,-3,4,-2,8,5,1,-1,1,6,8,-10,-4,8,-1,1,-4,10,-8,-6,-4,-4,-2,5,10,1,-7,-8,-4,-6,5,-1,-10,6,3,-8,2,-1,-6,-10,-10,-6,-4,7,-3,2,-10,9,-4,-2,7,-4,-2,5,-3,-6,-6,9,9,7,-1,-9,2,3,-3,2,4,10,5,4,8,3,4,-5,10,-2,3,-1,1,2,8,-3,10,-6,7,-4,-2,1,9,-9,-10,-9,4,9,-6,1,-2,6,-8,-8,-4,1,9,4,-10,6,-5,4,-5,-9,1,-4,-2,9,-5,-4,9,-7,-9,-6,-7,10,7,3,6,-2,-2,2,-7,4,7,-10,-5,-7,-1,7,7,-8,-3,6,-5,-8,5,10,10,5,-6,-4,-4,-7,-3,-1,-4,-5,-3,8,-7,4,-8,-7,2,4,7,-9,10,-3,2,3,4,5,-9,5,3,10,-6,8,7,6,-1,-4,-10,-3,-3,-8,-6,-6,10,-1,-3,-2,7,8,3,9,-6,-4,4,-9,-6,5,2,7,3,2,-8,-4,4,3,6,1,7,-10,-7,-7,6,6,-3,9,-10,3,-7,5,9,-1,1,8,-9,10,-9,-10,-1,4,-9,2,-8,-7,2,-6,-3,-9,-1,4,-7,-8,3,1,2,8,10,1,6,1,-4,-2,-6,-1,8,-8,2,-1,-2,9,-8,7,10,4,-8,6,5,-8,9,-9,7,-3,-3,-3,7,-1,8,4,8,4,4,7,-7,2,6,-6,9,1,-6,-9,6,-9,-7,-2,1,-10,-7,-6,-4,2,-10,-1,8,10,-6,-6,-8,7,-9,2,-7,7,-1,-10,-1,-3,3,-9,5,4,10,-4,-6,-6,1,5,10,4,4,4,-8,-8,10,1,-9,-9,-4,7,-5,5,9,-4,3,-10,-3,4,-3,4,2,-1,10,-9,-4,-6,-7,2,2,-7,-7,-6,1,-4,4,8,-1,4,10,6,10,-2,5,-5,2,-4,8,9,-9,6,1,9,4,3,-9,-7,-3,5,2,4,1,3,7,-1,-7,2,-10,9,-6,-5,1,3,-10,1,10,6,-3,-3,2,-9,-8,6,1,9,8,-4,7,-3,8,6,9,-9,10,-5,5,-3,6,-10,-3,-6,-4,-9,8,5,8,-3,-3,3,6,8,-3,-4,-10,-6,7,3,-4,2,6,5,-3,5,1,-1,-6,-8,-2,6,1,7,5,9,4,-1,-1,6,-5,9,-9,-4,-3,-1,-7,9,2,3,-5,9,4,-10,6,-8,-9,6,-1,-10,-3,9,10,5,5,-9,10,10,8,10,7,3,-7,1,-1,2,4,3,1,-7,-8,7,-6,6,6,-6,-4,-9,1,-10,-5,-8,6,-4,-1,-3,9,1,-6,9,-2,7,7,-8,-9,3,-3,-2,2,5,-9,6,-8,-5,-3,8,-1,-1,10,7,2,-3,8,-3,3,8,8,-10,-1,3,-9,-1,-6,7,4,7], dtype = "int32")#candidate|6416|(1183,)|const|int32
call_6415 = relay.TupleGetItem(func_2873_call(relay.reshape(const_6416.astype('int32'), [13, 7, 13]), relay.reshape(const_6416.astype('int32'), [13, 7, 13]), ), 0)
call_6417 = relay.TupleGetItem(func_2877_call(relay.reshape(const_6416.astype('int32'), [13, 7, 13]), relay.reshape(const_6416.astype('int32'), [13, 7, 13]), ), 0)
bop_6429 = relay.bitwise_and(bop_6393.astype('int64'), var_6391.astype('int64')) # shape=(15, 1, 4)
bop_6433 = relay.greater(bop_6393.astype('bool'), relay.reshape(const_6392.astype('bool'), relay.shape_of(bop_6393))) # shape=(15, 1, 4)
func_618_call = mod.get_global_var('func_618')
func_621_call = mutated_mod.get_global_var('func_621')
var_6449 = relay.var("var_6449", dtype = "float32", shape = (160,))#candidate|6449|(160,)|var|float32
const_6450 = relay.const([3.582768,-3.178822,8.523516,9.772547,-4.886374,8.651615,0.089134,5.881057,-0.673028,-2.673575,-2.218491,6.632522,-7.386685,6.435797,-1.535825,6.717894,-0.657714,-2.335786,7.270121,2.507855,1.282873,0.913975,-3.056921,-6.473141,2.491452,7.681120,3.792441,-8.316214,-9.645972,3.910916,9.989468,-4.641656,-0.661249,6.019351,5.994874,-9.870589,-0.083044,4.458583,-7.738876,2.795064,-0.422906,2.034821,1.248005,8.183166,9.574617,9.319718,9.756231,6.851825,-7.749362,9.745307,9.151262,-9.873211,-9.597181,-3.148862,-6.217804,-3.800269,8.005523,-6.776035,-9.661542,-5.753744,-0.523218,-5.484265,-7.532315,0.219294,3.665763,-2.274602,-8.316822,-8.808032,-3.802087,5.225104,-7.076913,0.485110,-1.417215,-2.531822,9.634662,-0.448714,-3.355067,7.151154,-4.459175,3.686905,6.700315,-5.549919,0.426148,-3.322789,-5.292390,-7.877144,-3.961698,-6.186401,0.641651,6.271149,8.504875,-3.162324,-8.655570,-6.345731,-4.411368,-2.380491,8.494220,-7.967160,2.643278,-1.664414,-0.997915,-8.508829,-2.740732,5.833220,-5.228739,-4.875510,4.214056,8.733245,-0.663141,-1.142989,-4.780716,7.197432,-8.098894,-0.335798,-4.571630,6.716647,7.365451,5.029942,-1.423041,1.317523,2.326155,-1.633914,-2.874246,7.935713,-5.423832,2.418313,-4.643273,-3.347000,-2.732120,4.071819,-1.665172,-0.130436,-4.499819,8.495518,-6.967706,7.822482,8.154552,-3.076354,-2.067931,-0.576803,-0.924058,2.585663,-5.503003,4.286471,-6.466918,-3.581337,0.951722,-5.302027,-0.573336,-5.434997,-9.429916,5.185940,4.269529,3.251424,6.342247,-0.938861,2.938144,-7.184971,-2.478553,7.857381,-3.722191,3.991949,-0.410205,-4.116983,3.478058,5.149462,-0.541293,9.619624,1.658315,5.779141,0.092911,-7.678574,2.720604,-6.906839,-6.899230,-1.237185,5.126024,-4.751635,4.485706,9.762054,3.343633,-2.932125,2.031982,5.313821,-3.420250,0.165603,3.641884,1.340958,-7.246562,-1.101399,2.562142,-4.401270], dtype = "float64")#candidate|6450|(192,)|const|float64
call_6448 = relay.TupleGetItem(func_618_call(relay.reshape(var_6449.astype('float32'), [4, 40]), relay.reshape(const_6450.astype('float64'), [16, 3, 4]), ), 4)
call_6451 = relay.TupleGetItem(func_621_call(relay.reshape(var_6449.astype('float32'), [4, 40]), relay.reshape(const_6450.astype('float64'), [16, 3, 4]), ), 4)
output = relay.Tuple([call_6402,const_6403,call_6415,const_6416,bop_6429,bop_6433,call_6448,var_6449,const_6450,])
output2 = relay.Tuple([call_6404,const_6403,call_6417,const_6416,bop_6429,bop_6433,call_6451,var_6449,const_6450,])
func_6475 = relay.Function([var_6391,var_6449,], output)
mod['func_6475'] = func_6475
mod = relay.transform.InferType()(mod)
var_6476 = relay.var("var_6476", dtype = "uint32", shape = ())#candidate|6476|()|var|uint32
var_6477 = relay.var("var_6477", dtype = "float32", shape = (160,))#candidate|6477|(160,)|var|float32
output = func_6475(var_6476,var_6477,)
func_6478 = relay.Function([var_6476,var_6477,], output)
mutated_mod['func_6478'] = func_6478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6897 = relay.var("var_6897", dtype = "int32", shape = (12, 5, 13))#candidate|6897|(12, 5, 13)|var|int32
var_6898 = relay.var("var_6898", dtype = "int32", shape = (12, 5, 13))#candidate|6898|(12, 5, 13)|var|int32
bop_6899 = relay.bitwise_and(var_6897.astype('int32'), relay.reshape(var_6898.astype('int32'), relay.shape_of(var_6897))) # shape=(12, 5, 13)
output = relay.Tuple([bop_6899,])
output2 = relay.Tuple([bop_6899,])
func_6902 = relay.Function([var_6897,var_6898,], output)
mod['func_6902'] = func_6902
mod = relay.transform.InferType()(mod)
mutated_mod['func_6902'] = func_6902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6902_call = mutated_mod.get_global_var('func_6902')
var_6904 = relay.var("var_6904", dtype = "int32", shape = (12, 5, 13))#candidate|6904|(12, 5, 13)|var|int32
var_6905 = relay.var("var_6905", dtype = "int32", shape = (12, 5, 13))#candidate|6905|(12, 5, 13)|var|int32
call_6903 = func_6902_call(var_6904,var_6905,)
output = call_6903
func_6906 = relay.Function([var_6904,var_6905,], output)
mutated_mod['func_6906'] = func_6906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6946 = relay.var("var_6946", dtype = "float32", shape = (1, 11, 7))#candidate|6946|(1, 11, 7)|var|float32
uop_6947 = relay.log10(var_6946.astype('float32')) # shape=(1, 11, 7)
output = uop_6947
output2 = uop_6947
func_6953 = relay.Function([var_6946,], output)
mod['func_6953'] = func_6953
mod = relay.transform.InferType()(mod)
mutated_mod['func_6953'] = func_6953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6954 = relay.var("var_6954", dtype = "float32", shape = (1, 11, 7))#candidate|6954|(1, 11, 7)|var|float32
func_6953_call = mutated_mod.get_global_var('func_6953')
call_6955 = func_6953_call(var_6954)
output = call_6955
func_6956 = relay.Function([var_6954], output)
mutated_mod['func_6956'] = func_6956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7300 = relay.var("var_7300", dtype = "float32", shape = ())#candidate|7300|()|var|float32
const_7301 = relay.const([[[-6.732649,0.840489,0.936970,1.541197,-8.550440,-7.688112,0.298431,-2.095222,-1.251856,0.123890,-0.289360,3.264814],[2.390757,6.051884,7.587615,0.345052,-1.770227,-9.134736,-8.019169,-9.431526,-3.175319,-4.124409,6.478498,4.695515],[-3.894277,-7.357471,-6.812280,5.178927,9.911863,-8.663626,0.010445,-0.355779,-1.777042,7.247323,-3.746904,4.253576],[-3.275392,-9.835324,5.532956,4.656242,-2.435716,-7.335888,2.971992,6.194631,3.931636,-2.065956,5.642246,-6.466794],[4.789351,0.349412,6.777920,-1.537213,-2.675961,6.392354,-6.360826,5.422644,-6.993014,-2.997810,3.120846,-4.829466],[1.708989,6.030254,3.807071,-3.305852,3.471771,-6.278017,2.091600,2.955758,7.987793,4.660375,8.518489,0.789665],[-4.576878,-1.084538,0.696603,-3.084815,1.919206,3.871494,7.109184,7.860188,8.491601,1.901854,3.422552,-1.419378],[8.016312,-9.358421,1.381830,5.151356,0.359335,6.881203,-2.145881,9.420603,-4.647972,7.465755,3.080080,-5.253221],[-3.852148,3.101205,-7.301775,8.942202,9.464933,9.396617,2.140631,-9.537104,-6.535355,9.890146,-8.393526,-8.303367],[7.403370,-7.026861,-4.170515,-8.953579,4.058299,-5.978025,8.708105,5.456730,-5.217845,1.280428,8.746586,-6.006474],[-5.349316,9.329442,7.559219,3.992940,1.363994,9.559990,-6.133598,-7.674087,6.044582,-6.366355,-0.198090,7.866209]],[[-2.968458,-5.907852,-8.031782,0.488016,-1.523649,3.103605,-0.430373,1.890852,1.329124,3.279035,-9.401971,5.117307],[8.316260,-9.348145,7.432269,-4.395722,9.928291,-9.812680,3.463954,-2.537917,-5.788329,5.866170,-8.984287,-0.450582],[9.874473,4.368327,5.326212,3.445338,-7.415502,9.085664,8.426826,1.029250,-4.862303,8.894463,0.391439,-4.767255],[5.701166,-7.950102,-1.172144,6.681256,1.867848,1.443959,9.726148,8.651679,-3.545903,-5.561871,-7.495957,-1.830490],[4.828894,-6.223954,8.799289,-9.325914,5.204455,-1.435743,8.209783,2.092645,0.638902,0.245609,-6.801409,-2.511172],[7.272938,-4.992658,3.276461,0.386693,-1.467363,1.242562,-0.254504,5.193734,6.105944,2.776881,5.489917,7.276040],[3.935932,-6.672054,4.153931,-6.713808,3.851472,-4.290193,-4.765652,3.488344,3.728558,-0.014436,-8.609368,2.497419],[-1.778076,-8.228122,-3.392917,-0.494493,-0.012057,6.496851,0.562328,1.511453,-1.682852,0.666674,9.377186,-1.265544],[-9.385769,-1.554175,-2.001849,-8.269950,-2.741326,-2.925456,-5.602033,-7.793155,0.207028,-2.129286,8.544718,7.240804],[3.764498,-9.119368,5.840660,0.070960,-7.774650,-0.974368,-8.858867,2.500390,2.429259,0.316660,-9.279416,2.427005],[0.598458,-5.770351,4.172598,-9.146730,8.127497,2.520270,4.824474,-6.355949,-9.150973,-4.436978,8.135867,1.784483]],[[-8.228363,-5.375262,-5.262307,-0.546763,4.403758,-9.779182,6.635977,4.044316,-3.080988,2.237326,8.795814,7.401521],[2.379290,-7.359565,3.605537,7.001178,-5.335603,-5.686682,3.024880,-3.334446,6.453417,7.234731,-4.996123,4.115072],[8.026355,-1.471249,-0.893888,-5.062232,-4.523500,-4.364115,-5.647221,4.173261,0.500503,8.996791,-1.426294,9.164847],[5.986300,-3.798896,1.654171,-5.612350,5.527315,-2.947837,-3.978768,8.092417,0.463193,-5.135225,9.981815,6.550316],[3.045290,-5.998130,-1.993787,4.733696,-5.771852,8.636297,-1.589907,3.337626,8.439055,2.089706,-0.318276,-5.742796],[1.755086,-4.172597,-1.528192,6.938858,-8.199455,5.286568,-6.619364,-4.567421,6.871688,-0.327150,2.191877,7.578689],[7.913420,-5.435733,5.632245,-6.278812,9.453416,1.532355,-9.046458,6.559089,-0.868161,8.374170,-9.854050,-8.043002],[-8.140626,8.623451,-9.749028,-7.887465,8.204492,4.742166,8.715788,1.862597,-4.545745,-2.774604,-2.997819,-4.362504],[-5.658767,4.546491,6.263535,-0.788296,-6.124005,-8.117542,-1.343522,1.897477,7.705250,-2.317617,-7.327346,-6.691906],[4.878506,7.006891,-8.522698,-6.391365,1.317433,7.455548,5.677507,-8.853710,8.708609,-2.657318,6.645035,-8.810800],[2.778365,9.646931,-0.747871,-7.535763,-8.758215,2.977169,5.766320,-9.366022,9.053740,-0.488251,6.983463,9.378043]],[[6.448848,9.062480,4.328449,9.730608,-7.691521,-6.977918,-5.310251,-6.779496,-1.057157,-4.418381,-5.312606,-7.312517],[-8.437724,-7.746829,-0.859992,2.514505,-9.221482,-7.920670,-6.583855,-8.283104,5.491897,4.327125,6.311861,-2.667725],[-3.473962,-7.520340,3.865978,-0.060630,3.133270,-4.308292,-0.664394,4.694739,-2.943168,-4.946350,7.810908,7.482634],[6.548442,5.146124,5.092096,-1.309195,-8.801784,-1.891278,-4.578674,3.901795,3.597914,4.247806,0.253123,-8.363266],[-7.547353,-7.079846,6.409321,-8.699739,7.941196,-7.438933,-6.478369,-8.776060,3.992659,-9.704091,9.260148,5.824491],[6.883631,3.726621,7.946888,-0.321621,-3.326024,8.766912,3.804300,1.252087,3.208901,2.881873,-1.354335,-9.720102],[-4.330171,8.658218,0.075024,-9.877268,8.915884,4.804556,-7.054635,0.907070,2.374627,-1.484220,-1.804246,4.783877],[4.437888,0.687131,-4.482451,6.325470,3.642459,-6.045882,3.378226,9.375284,-6.794745,6.508076,0.664057,-9.986695],[-1.546829,2.362792,-1.621576,-2.266249,2.713267,6.213565,-7.200679,-6.960138,-1.572551,-4.938428,8.339723,-5.053512],[-3.421080,-5.866279,-8.105927,-7.913931,-7.365813,-8.335844,-2.223673,-8.537297,-8.262480,3.950893,1.830449,-2.650766],[3.957091,1.445810,3.728520,-3.323357,-1.373601,2.191988,2.690529,4.205174,4.085669,-3.767606,-0.350539,1.475272]],[[0.797090,2.319149,-8.934902,-3.323111,-1.230393,-3.168378,7.805900,-7.031313,-1.748981,5.673486,3.267483,9.930071],[-6.568737,9.393589,-2.801022,8.281120,4.658487,-7.215324,6.374159,6.510563,9.001373,2.942427,1.462047,-4.526794],[8.189371,9.611733,-1.233286,6.825354,5.230919,1.720690,2.038353,2.547553,-3.922047,-3.758254,-3.493008,0.853111],[3.885328,-3.991264,-6.862554,-4.608084,-1.362151,0.522496,-8.250500,1.467972,7.909364,-9.099719,-4.010508,6.630013],[4.615881,-4.275463,-6.537674,0.178191,-5.177464,-5.586486,-7.160383,-5.231045,-5.354062,9.757408,-0.459111,-3.921647],[-1.438014,-7.547538,-9.539730,6.362784,3.894116,9.342253,1.016436,8.724630,0.570625,5.871924,4.770503,-9.334436],[6.114085,-5.890507,6.480817,9.278270,5.928565,-8.073741,7.668137,-9.350908,5.759984,-3.150041,-9.244713,-8.904592],[5.880906,-1.124117,4.580278,4.976783,-2.098957,-2.654570,-0.637399,0.309287,3.896348,-2.605008,6.054622,3.766767],[-0.291114,-0.577396,0.037413,-7.190076,-0.497996,1.432823,-1.934114,-7.424995,3.560677,-7.278829,-5.479436,9.561449],[5.686809,-0.650881,-9.235955,0.651224,-4.687085,-4.655552,-3.632302,-8.330351,2.403222,-0.470134,-3.305832,-5.636054],[3.834131,-7.559896,3.745115,2.216123,6.487759,2.931360,2.986100,-8.285561,-0.505178,1.207902,-4.899570,5.075268]],[[-7.444001,0.020688,-8.163383,-4.443424,-6.754610,0.699897,-3.540754,-5.886255,6.566142,-5.174846,-2.496771,-8.220300],[0.316107,5.212597,2.316546,5.197632,-9.779357,4.114121,-4.369156,-9.857190,-1.906134,-5.533587,-0.741819,-0.044842],[8.020972,-4.482842,4.886091,-0.692340,-9.831886,-8.105781,6.637516,1.579495,-8.350082,-2.714029,-7.173972,1.376467],[7.712929,-3.957700,-3.863602,7.812572,8.985993,7.727391,-8.969668,5.282404,0.522813,-9.395517,0.354931,-9.697868],[-7.390355,-8.349328,5.932084,1.784414,-7.806219,-8.778078,-6.622523,-7.957348,9.970485,2.304012,0.690004,0.045751],[-0.894621,3.597194,1.733637,-5.401886,5.975823,5.368554,-9.281433,2.624459,-6.105344,-5.730769,6.521261,-6.120801],[-6.343329,-3.920009,-4.398668,3.651830,8.634578,-1.778402,-7.809660,2.235176,9.747736,3.112321,0.011183,-4.022079],[-9.004751,7.963349,8.492147,4.839668,0.830751,-9.810270,0.364746,-0.840516,-6.916139,1.855910,0.520034,-6.629444],[3.872778,3.285533,-2.842159,-8.163404,-3.930865,-4.504992,0.887008,6.401514,6.996387,-2.294890,5.388407,-1.440836],[9.129250,2.717419,-7.062080,-2.903173,4.062090,-4.789303,1.639294,-2.628763,-2.821854,-5.137609,-9.858351,-8.472933],[4.126056,-8.593515,-8.694455,-4.747259,3.537678,-6.337040,-4.347096,7.528117,-9.857528,0.282861,4.313377,5.810358]],[[3.321394,2.695972,-1.647725,1.402506,7.487899,-0.893457,-1.839669,4.457373,-3.284657,2.713308,-7.762197,-7.101135],[3.021125,9.850043,-3.345059,-5.780150,-9.320124,4.733707,-4.372439,-8.512636,8.776899,9.681198,4.254445,5.465666],[-5.053603,-9.893951,8.863603,-4.878388,9.027431,7.433045,-5.477777,5.318539,-9.634084,0.564989,0.785013,-6.234441],[0.240864,7.777720,-6.836428,-1.487397,7.658970,-9.296054,-7.437042,7.533982,-8.024632,2.431195,0.321350,5.120234],[1.668689,-6.405611,-1.527399,0.026031,-8.089323,-3.761712,8.443997,2.570779,-4.273570,-8.154923,-7.339886,-7.149896],[-6.656705,-9.555079,-0.979987,4.765783,-1.940630,-8.849840,-8.843248,-0.686994,-3.495211,-6.201051,-3.066008,1.968151],[1.077861,5.981738,7.677398,-8.237528,1.561027,3.075994,-0.937781,3.874441,-7.454808,6.827892,-7.321442,0.461072],[-9.155939,-2.227142,-3.679376,2.359178,8.378365,5.337460,-6.057320,1.634941,-5.092533,7.378546,9.093795,-5.423143],[1.733833,4.553048,7.273400,-6.377129,-4.470187,-6.133093,-0.661651,-7.634836,-9.963832,3.049930,6.881066,-8.231818],[3.498538,-3.198926,0.660384,8.695056,-4.467549,-8.914940,4.086000,9.976845,4.511664,-3.314158,-3.237334,-7.558375],[3.554740,6.713125,-4.012618,-2.215223,-1.412562,-2.092469,1.406689,-0.209687,-0.432763,-0.673823,9.720306,4.469263]],[[5.965661,5.356344,-0.097896,0.148287,4.432729,-9.157898,-7.649471,5.614199,4.722939,-5.574976,0.992984,-9.455439],[5.199554,-3.816912,2.454576,-8.072003,7.032130,-7.464947,8.921942,1.100883,-9.810427,-2.289966,7.983243,1.467059],[3.518033,5.932088,-4.769226,4.283383,-3.311060,3.577305,7.417733,3.890940,3.359063,9.646955,6.394227,3.783820],[-5.431006,-1.368941,9.461726,8.693252,-1.702860,-8.799576,-9.362093,-5.198926,2.867277,-3.995298,2.765116,5.813418],[5.137753,1.833820,-6.670442,9.478215,-6.101365,-3.113992,8.535870,4.563727,-1.435957,1.769253,1.985550,-5.204708],[3.260539,9.427709,-3.512261,1.600848,6.937125,-0.531521,0.556532,8.075960,6.890451,7.324177,7.735814,-0.885880],[-9.690282,-6.688306,-1.083072,-1.286065,-5.815561,-0.209672,4.177604,-9.885727,7.555832,-6.509588,-4.363769,-7.380252],[6.908551,1.581230,-0.353980,-1.470477,4.660232,-4.146549,9.421963,1.075145,6.515272,-0.202566,2.059376,4.876612],[0.807914,9.246888,6.420995,-4.739213,5.849558,1.351011,9.124822,9.000304,4.083424,-4.473232,-3.430509,-4.107141],[-6.615168,-4.120983,2.932022,-2.958450,0.813883,3.840525,9.146981,5.369728,6.541253,5.133608,9.424589,7.695769],[-6.721867,0.792332,6.674122,-7.921240,6.141943,7.243984,6.584699,2.611739,9.845160,2.090792,-3.442631,0.892075]],[[-1.394069,3.269096,8.488396,-5.049874,-7.735110,2.572060,3.221153,2.067234,-1.084042,8.842265,-9.280816,7.419624],[4.009463,2.113929,0.340171,3.400610,3.097779,2.464471,6.521287,-9.202919,-3.421065,3.256419,-5.430562,-7.087863],[7.230776,-5.324058,-3.598165,8.415384,-6.609086,-6.449988,-7.686260,0.097245,-5.765673,-8.693601,-1.873112,5.863851],[-5.898771,-6.493918,-5.180268,-4.900110,9.563564,4.293954,-9.802925,4.680658,5.252929,-8.070962,-4.058365,6.850263],[4.723009,-5.125694,2.820446,-7.880856,7.187951,-9.570847,0.430581,1.896727,4.596870,-3.730100,-7.289329,-9.388616],[0.372479,8.883000,7.214189,-9.837105,-5.964333,-0.958217,4.950665,-9.314944,-9.636501,-3.807653,4.197924,-2.833334],[-2.763819,-3.558151,-9.485499,5.830698,6.164362,1.218457,1.030702,0.036269,0.654648,4.694171,-2.124113,4.778333],[-5.702745,-3.150483,3.162107,-8.404663,-6.628692,-2.089349,-8.873051,-5.083721,-2.549000,-1.824991,-0.810369,-2.805533],[3.087285,-0.675519,0.619459,-6.891764,8.377354,2.836071,2.177678,-5.316822,-9.539835,1.693757,-1.324669,-8.539412],[0.810478,7.144465,4.259823,7.790625,2.267332,-0.628059,2.400058,7.995364,-4.070554,-2.946831,-5.835973,5.473046],[0.373028,8.292582,-0.211962,7.832463,-7.752107,8.213389,-9.519579,4.771000,-9.460775,-2.874064,-0.382854,-5.184283]],[[-9.036350,1.818566,-8.425414,9.623429,6.931074,7.591454,-3.770119,0.907419,8.883070,-7.279510,-3.881047,-5.161030],[-5.669087,-6.700118,-9.396152,5.357463,9.139635,2.561449,8.461539,-1.799318,-0.733222,-6.820797,-5.960868,5.206432],[6.338573,6.737886,9.218108,-3.293595,-2.148972,4.764592,-3.366518,0.635115,8.215501,0.971137,5.733470,5.523308],[1.220820,-3.445660,5.300308,-4.898194,-5.749390,-0.986322,8.916716,0.285457,-5.021233,-5.296550,1.286793,-5.000026],[-0.938116,5.710957,3.211885,0.640960,-0.561428,-8.043657,-8.631483,-3.108086,-7.471739,-1.659078,-1.296982,0.421289],[-8.765459,1.112496,3.716163,-8.231035,2.031256,6.118240,-0.241262,5.460279,7.421932,8.153572,-1.751498,-3.409263],[-5.917455,-0.878820,-6.282072,2.093207,3.221714,-9.166265,4.063753,9.182069,-1.658772,5.290902,2.337053,0.808250],[4.810223,-7.985968,0.763378,-8.830990,-0.756844,-5.295835,9.074528,6.199821,-2.420748,4.762156,5.882401,-7.467736],[-6.574860,-2.209025,-4.480221,-2.626943,-4.063128,-2.729860,4.206999,-6.319824,8.660703,-6.071618,-5.171435,-4.504998],[2.130237,-3.408386,-9.426919,-6.299015,4.462375,-8.618984,-4.383931,0.458389,-1.386167,-1.694626,-6.142522,6.546275],[6.993089,-8.424155,9.722695,-3.008192,4.271191,4.936483,0.328903,-1.472612,3.217916,2.778809,5.191591,-0.052881]],[[-7.900597,4.212495,5.377982,-5.299450,-6.662553,5.517032,9.489843,-7.057900,-5.000612,-5.241552,3.960105,-0.066296],[-4.063862,-7.012405,-8.254248,6.179198,-4.793807,-2.971240,7.403405,-7.064340,9.653473,7.762193,-3.854874,2.482808],[-3.798114,-6.724376,-2.101381,-9.664638,-4.432670,-2.750511,0.360545,0.162287,-6.382380,-5.382355,6.765417,4.571375],[-7.206333,2.579555,-4.633039,0.033873,6.050146,-6.441732,2.943092,-4.374397,-7.985772,-7.095006,-5.844388,4.877585],[6.654699,-0.929915,-7.675657,-9.029982,-9.896304,1.585042,-3.237416,3.454223,1.155709,-2.350804,-2.397827,-1.535901],[0.183731,3.617786,0.641691,8.053766,-6.697211,2.059525,3.116242,7.675790,8.989936,4.866006,9.180398,1.350351],[-0.850656,8.217185,-3.494262,3.494268,2.520105,2.239911,9.925319,8.073115,-4.960301,0.798675,-4.869560,-1.458267],[7.697143,-6.830411,-5.219283,5.000933,6.226273,-1.068102,6.555898,0.378740,-2.130309,8.850738,3.942162,9.789583],[8.961378,-8.999752,4.713403,6.585908,-4.040126,7.369298,-1.389386,6.986261,-3.724198,7.360067,-9.730686,-2.791494],[-6.589241,-5.594526,-6.378969,9.109920,-1.017378,-3.378248,-6.649089,4.051143,5.107695,-9.675392,9.014137,1.883271],[5.268850,8.653223,8.735160,-3.483292,7.732450,-4.975980,-5.678581,9.771711,3.524469,-0.489381,-7.288153,-6.728167]],[[-0.243081,7.752859,-1.683696,8.314878,2.824618,4.093527,-4.860656,-1.087638,7.655889,-6.448902,8.096701,-9.136797],[0.187242,-9.550924,-8.673212,7.932011,1.478658,4.593254,3.311884,8.587739,4.105180,4.261101,-5.378920,-0.028067],[-1.409864,1.028382,-3.091375,-5.465311,-6.323160,6.912529,0.957925,-9.665362,7.012010,0.019247,-7.184763,-4.603660],[0.915756,-8.817773,9.490362,2.154663,7.476143,8.265074,1.072745,6.840157,5.305381,-5.390672,1.012289,1.763699],[-5.769951,4.289966,-3.428258,5.988018,7.468332,5.808883,-4.855171,7.210807,-6.735415,1.691035,-4.778216,6.137216],[-2.484764,4.393288,-4.303961,-6.808447,2.717858,-6.132073,0.438287,2.543955,4.961545,-8.826938,-1.275354,7.239362],[-3.256165,-3.514630,4.050066,-7.602683,7.455813,8.242152,0.501427,2.535007,0.657646,-3.537550,9.187164,8.532842],[-3.167593,-8.115175,3.493372,9.859142,-9.608238,5.625834,-2.776927,0.318459,2.169626,7.461177,7.970544,0.602146],[-0.743932,9.114232,3.793354,-7.195085,-4.615740,-4.748391,-7.612006,-3.745198,3.639490,-7.934457,9.332194,-9.606486],[-2.919722,4.637582,-3.643066,-0.096067,-0.110637,-6.340886,8.757071,-3.203760,4.424177,7.817222,-2.075287,-9.376483],[9.985535,2.959428,0.292340,4.573542,-4.368858,1.745732,9.261524,9.466399,2.269165,-0.422832,4.920936,6.321445]],[[5.697017,-1.015229,-6.716897,-7.535623,-8.552281,-3.063661,3.792035,6.929251,9.059491,-0.173353,8.441286,-9.873154],[0.475381,7.877190,2.196119,7.859353,7.175527,7.457514,-8.258883,-0.133206,3.218977,-1.532125,-4.374198,-7.759926],[-6.478450,3.122379,9.761446,7.114915,-5.515738,9.445083,6.679788,-6.020522,-0.106762,-8.147420,8.333288,8.206124],[3.904508,2.872128,-3.720726,2.141519,-2.882530,-5.196979,3.153540,-6.138855,-8.760648,2.566624,-5.884494,-5.739474],[7.866219,-6.023751,7.764046,-6.639654,1.347692,2.141874,4.311028,2.697190,6.866505,2.364943,8.140607,-0.243329],[1.289745,0.049490,9.643216,2.118285,-1.655585,-5.230473,1.605107,-5.762207,-7.566088,-3.333468,9.851925,-8.477776],[8.756613,1.075159,9.916521,-7.569783,2.155717,3.805926,-3.225726,-0.678514,-7.384770,-4.480393,8.293481,-1.895818],[-6.488540,8.924429,-3.603344,-6.745478,-1.045894,-0.387979,4.416408,-3.694666,-3.591161,-4.174791,-9.793923,9.183548],[2.597054,9.898599,6.266707,-6.367329,-8.531947,5.938295,0.268315,5.421788,1.258491,-1.122517,-1.991514,4.167100],[-0.966323,4.409364,-1.859881,3.177955,7.228251,-0.013069,-0.453851,-1.791850,1.133293,-8.425400,-4.362484,-0.724250],[6.238797,-3.979213,0.373916,6.417212,9.235051,2.989426,1.168061,0.482457,7.948740,0.384710,0.080214,-6.953785]],[[4.147157,0.884808,-6.485027,7.940639,-7.186939,-5.959770,-1.015780,2.414261,-4.616530,3.827915,7.774388,-7.571576],[7.410622,2.613198,-1.679119,8.724231,-2.469804,9.367519,-0.769466,-2.328708,-8.464843,-9.142187,-1.547838,9.697636],[-5.887832,9.764175,6.072329,-0.651905,3.973618,4.117486,-5.453723,-3.312367,-4.767366,7.546354,-5.238834,5.622413],[-6.735556,8.017414,-9.337073,-7.972149,-0.839334,-5.504566,3.922141,-4.386233,-2.856106,-5.196745,-9.686629,4.372522],[-4.795693,4.043728,6.077543,-9.968969,-4.915071,-4.300945,-3.535382,-2.557608,-5.633820,-4.175908,8.407352,0.640733],[0.594311,-2.486096,-3.384146,-2.566699,2.054008,5.181054,-7.531689,-0.430297,-5.728799,5.904524,8.280860,6.686573],[5.598156,-4.999922,-3.511043,-8.916579,3.817744,0.132138,0.207904,7.259940,5.973512,8.183543,-8.742663,-3.232674],[-2.302108,2.258978,5.998556,-3.527317,-2.648189,-5.689003,-1.231072,-0.239436,4.644162,1.610328,7.798025,9.862437],[8.645038,8.041061,4.880037,-7.872926,3.382034,7.037277,-7.636123,6.968809,-7.791166,5.360214,0.602417,9.615665],[4.113664,2.287205,4.210756,5.330757,3.289985,-1.851517,1.341363,-0.304083,-8.272288,5.174382,3.018685,9.462638],[-1.444319,-6.778110,8.301196,1.209185,-7.918757,8.243771,0.983451,6.093140,4.053097,6.193002,-0.139280,-3.970157]],[[-6.738068,-2.177024,-7.898788,5.428806,-9.012729,-0.902597,7.075476,4.449863,-2.790279,8.914073,2.733237,-8.245914],[-4.115564,2.212038,-3.390287,8.782976,-9.017750,-8.151482,-5.326196,3.706214,-5.964886,-9.694717,4.312384,0.253111],[-1.411447,-6.730152,5.900768,0.357713,-6.458639,7.970944,-8.127113,6.241910,-5.829451,5.761022,-9.832244,2.896716],[5.932675,-7.037328,7.770976,-6.999212,5.873229,-6.618172,-8.751473,-8.385598,-0.409078,6.489422,1.723764,0.105694],[-3.949984,-2.266741,-3.520977,1.478711,5.823846,-4.119693,-9.300014,-7.051003,5.388739,-5.583068,-1.802838,0.961763],[-0.099172,5.822449,5.611114,4.464382,-8.115537,-5.668099,-7.828353,-0.250377,-5.768771,-9.374696,7.252203,-0.519889],[3.945124,-8.515131,6.099219,4.528145,-6.319022,7.456700,9.228482,-0.435837,-8.579508,-6.546793,-4.808480,-2.137577],[-7.993481,1.123939,-0.733765,-9.529266,8.068305,7.511624,-4.083261,-4.653237,-0.039375,4.764984,1.535582,0.284569],[-6.396395,-4.712136,-1.552567,3.555482,0.620553,-5.955798,-4.056025,-3.467479,-0.208937,4.546208,-6.504344,7.613896],[6.978725,-0.834221,-9.532658,3.616070,-5.798246,-3.005957,-1.998597,5.773734,-2.068337,6.244002,-3.873290,-1.768198],[-8.114395,-5.732203,-8.178904,2.906989,-7.130207,-3.925615,6.627805,6.418349,6.773652,-4.450604,-5.546917,7.312396]]], dtype = "float32")#candidate|7301|(15, 11, 12)|const|float32
bop_7302 = relay.mod(var_7300.astype('float32'), const_7301.astype('float32')) # shape=(15, 11, 12)
uop_7307 = relay.asin(const_7301.astype('float32')) # shape=(15, 11, 12)
func_3348_call = mod.get_global_var('func_3348')
func_3350_call = mutated_mod.get_global_var('func_3350')
var_7318 = relay.var("var_7318", dtype = "float64", shape = (110,))#candidate|7318|(110,)|var|float64
call_7317 = func_3348_call(relay.reshape(var_7318.astype('float64'), [11, 10, 1]))
call_7319 = func_3348_call(relay.reshape(var_7318.astype('float64'), [11, 10, 1]))
func_6902_call = mod.get_global_var('func_6902')
func_6906_call = mutated_mod.get_global_var('func_6906')
const_7321 = relay.const([-4,-10,8,3,10,4,8,-7,-4,-2,-2,-2,-1,5,8,6,4,9,3,8,4,3,7,-6,6,-8,2,9,7,-9,9,-8,-3,-8,1,-2,-6,-6,6,-6,1,1,5,7,3,8,-5,-8,7,7,-10,2,5,-2,1,-3,3,-6,-5,10,-8,3,-9,2,-5,-2,7,2,6,-2,4,-9,-9,-5,5,4,8,-9,-8,-10,9,9,-10,7,-7,-10,4,9,-4,2,4,7,3,6,6,-6,10,10,-8,-3,-7,7,-4,-9,-3,-10,-8,6,2,5,-9,-2,6,-8,-10,-3,-6,2,-9,8,3,8,6,3,9,5,-8,-5,-8,3,4,9,-6,-9,4,-8,5,8,-1,9,-10,-6,-9,7,5,-7,5,10,9,-8,-7,9,2,5,-2,-3,-9,5,1,-7,-1,9,2,-9,1,3,-2,3,-2,7,-5,8,-9,-5,-4,-1,9,-3,1,2,-9,-9,-7,-7,3,3,-4,3,4,6,-2,-5,6,2,9,-9,-8,1,3,4,-2,5,10,9,-7,1,1,10,3,-7,7,5,6,-9,-6,6,-2,3,-8,3,9,-5,-2,-10,-7,9,4,-9,10,9,3,-3,6,-4,-8,10,-2,8,7,9,6,10,-2,10,7,9,7,-2,7,5,-4,3,-9,-8,-10,2,4,7,1,9,9,7,-9,-6,6,2,-8,5,-7,-4,1,6,-10,-3,-10,-8,-10,2,-3,-6,2,8,-2,-7,-8,-7,-9,-6,3,7,-4,2,-9,3,-5,-2,6,6,4,6,-4,-1,-5,-9,6,4,2,-4,-4,-4,8,7,7,4,7,-3,5,4,-1,-10,3,-7,-2,6,9,-7,6,-3,-7,4,6,-7,-3,1,-5,3,5,-5,-4,-4,-10,10,-5,9,-1,-8,-10,10,-5,9,1,2,-5,-6,-5,-2,1,3,6,-8,4,-3,-10,-10,-3,-8,5,2,-4,-9,-9,6,-2,6,8,4,-1,-6,10,-7,-7,9,3,-1,2,-8,10,2,2,1,-5,1,4,8,-5,8,10,-3,-9,-3,-4,-3,-4,6,5,3,-2,6,6,-9,9,-5,5,3,4,-4,-7,-3,-1,5,6,-6,6,4,3,3,1,10,-5,9,-1,8,-1,8,-9,10,3,-6,5,1,3,10,9,7,5,5,-8,-3,-3,-3,-6,-2,6,-7,5,-8,1,2,8,-6,-7,8,-2,-6,-5,-9,-1,-9,-8,9,4,2,5,-7,-5,-5,-2,8,7,-10,3,1,-2,-3,9,-4,9,-10,1,-7,-10,9,-9,-7,2,-9,9,-1,2,-1,-5,-8,4,9,5,4,-10,7,-1,-8,-2,-2,-8,-3,-6,-3,-1,5,9,1,-10,1,-9,1,-3,-4,5,7,8,6,-4,7,2,-3,8,6,10,-9,-4,-10,9,-1,10,10,7,4,-6,1,6,8,-9,-1,-10,9,-1,2,-2,8,2,-2,3,10,-10,7,4,-8,-8,5,9,5,-4,-4,9,-10,2,-9,1,-4,10,-7,-7,-1,-3,-4,-2,-6,5,3,-4,6,-7,10,-6,-7,8,-3,8,-9,-10,-7,3,7,5,-3,-2,-4,-5,5,3,-8,-7,-5,4,-9,-8,-5,2,-10,-3,-6,3,4,-8,-1,-4,-1,9,7,9,-6,-4,9,-4,-3,-1,1,-10,-4,-5,-9,-4,-9,6,6,4,2,4,4,-10,6,7,-7,-2,7,-8,6,9,-4,-3,-2,-4,-7,-8,8,-9,9,-4,4,9,-3,2,-8,-7,7,5,-9,4,9,10,-9,-4,6,7,3,-3,-3,-8,-5,-5,4,-10,1,10,7,9,-8,6,-10,4,-9,2,2,-2,4,9,-7,3,-4,-8,-3,-1,-10,7,-2,-3,-9,-2,4,10,-3,-8,-8,8,5,7,5,-3,4,6,2,-6,4,-4,4,-6,10,7,6,4,-5,1,8,6,-3,-8,10,6,4,2,-3,-4,4,-3,-1,2,-7,-6,7,6,4,5,-8,10,10,-3,-10,-7,10,-5,-8,-5,-9,7,4,-8,-7,-2,5,-10,-4], dtype = "int32")#candidate|7321|(780,)|const|int32
call_7320 = relay.TupleGetItem(func_6902_call(relay.reshape(const_7321.astype('int32'), [12, 5, 13]), relay.reshape(const_7321.astype('int32'), [12, 5, 13]), ), 0)
call_7322 = relay.TupleGetItem(func_6906_call(relay.reshape(const_7321.astype('int32'), [12, 5, 13]), relay.reshape(const_7321.astype('int32'), [12, 5, 13]), ), 0)
output = relay.Tuple([bop_7302,uop_7307,call_7317,var_7318,call_7320,const_7321,])
output2 = relay.Tuple([bop_7302,uop_7307,call_7319,var_7318,call_7322,const_7321,])
func_7346 = relay.Function([var_7300,var_7318,], output)
mod['func_7346'] = func_7346
mod = relay.transform.InferType()(mod)
var_7347 = relay.var("var_7347", dtype = "float32", shape = ())#candidate|7347|()|var|float32
var_7348 = relay.var("var_7348", dtype = "float64", shape = (110,))#candidate|7348|(110,)|var|float64
output = func_7346(var_7347,var_7348,)
func_7349 = relay.Function([var_7347,var_7348,], output)
mutated_mod['func_7349'] = func_7349
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7521 = relay.var("var_7521", dtype = "int8", shape = (1, 7, 4))#candidate|7521|(1, 7, 4)|var|int8
var_7522 = relay.var("var_7522", dtype = "int8", shape = (11, 7, 4))#candidate|7522|(11, 7, 4)|var|int8
bop_7523 = relay.greater_equal(var_7521.astype('bool'), var_7522.astype('bool')) # shape=(11, 7, 4)
func_949_call = mod.get_global_var('func_949')
func_954_call = mutated_mod.get_global_var('func_954')
var_7545 = relay.var("var_7545", dtype = "float64", shape = (2, 16))#candidate|7545|(2, 16)|var|float64
var_7546 = relay.var("var_7546", dtype = "float32", shape = (2080,))#candidate|7546|(2080,)|var|float32
const_7547 = relay.const([-4.333615,-7.822535,-7.581092,-5.781754,-3.718187,-7.248574,2.894359,-7.996951,-0.820560,-3.908156,3.524461,8.614685,-8.422281,6.945448,7.222206,-6.712992,0.676655,-1.130437,-7.082109,-1.435260,-9.717243,-3.979704,0.367056,-2.693218,6.391483,-1.183564,4.054253,8.863152,8.723092,0.999440,7.356351,-9.789158,-8.010225,-7.602993,4.685872,6.173442,-6.826211,2.218781,-5.851085,0.727582,0.231765,-6.817073,5.111161,-0.609374,2.480307,1.260223,9.797229,9.256958,6.399681,-1.955454,-8.662717,-1.557077,5.990472,-3.141100,0.636908,-9.316911,4.499405,3.349393,-2.179923,8.670816,9.361950,-1.324441,-3.732277,-4.481252,-6.145547,4.049761,-4.529197,5.572777,3.164058,7.833671,3.927602,7.194724,8.934075,5.332000,-5.494073,9.603256,6.509264,4.807131,6.807620,7.807917,-6.973054,-6.632727,-4.869186,0.251789,5.115893,-5.897070,-6.892018,7.229502,-9.244288,5.957657,-2.803411,-3.704458,-2.589492,4.515033,3.342166,5.403907,0.122135,-2.198329,5.922240,-7.973431,9.509382,3.988042,-1.837179,0.828084,4.372908,-6.575217,9.051952,-0.992495,-5.680469,6.682135,-5.312319,7.991430,-2.767693,-7.088477,9.735365,-4.948918,5.011764,-7.281737,-8.069798,4.044494,-7.351615,6.350444,-0.704241,-3.019307,-2.386785,2.476489,-8.712005,-1.707911,-4.668754,9.475575,6.584789,-2.491203,8.379131,4.701604,-4.626234,-5.055325,-4.778766,-1.094268,7.151264,1.469609,-4.713902,-1.083741,6.713666,1.293026,9.927639,-0.895366,-9.977373,-8.013507,5.413837,-7.508743,-7.134987,2.993747,-2.239812,1.718570,-0.830764,8.473871,1.571995,1.529515,7.320288,7.044374,6.530690,6.848633,-2.048193,-3.746307,9.713095,-7.943474,6.846427,-8.180206,0.380446,2.538736,-3.933173,6.703525,-7.663879,2.925851,0.533339,1.913760,-3.874245,0.910326,-5.542060,-1.528377,-2.488498,3.529270,-3.343960,3.076348,0.922106,2.801165,-7.796319,-3.665246,-9.844863,-2.611125,-7.994865,-9.489445], dtype = "float64")#candidate|7547|(192,)|const|float64
call_7544 = relay.TupleGetItem(func_949_call(relay.reshape(var_7545.astype('float64'), [4, 2, 4]), relay.reshape(var_7546.astype('float32'), [2080,]), relay.reshape(const_7547.astype('float64'), [192,]), relay.reshape(var_7545.astype('float64'), [4, 2, 4]), ), 4)
call_7548 = relay.TupleGetItem(func_954_call(relay.reshape(var_7545.astype('float64'), [4, 2, 4]), relay.reshape(var_7546.astype('float32'), [2080,]), relay.reshape(const_7547.astype('float64'), [192,]), relay.reshape(var_7545.astype('float64'), [4, 2, 4]), ), 4)
func_5080_call = mod.get_global_var('func_5080')
func_5083_call = mutated_mod.get_global_var('func_5083')
var_7551 = relay.var("var_7551", dtype = "uint64", shape = (96,))#candidate|7551|(96,)|var|uint64
call_7550 = relay.TupleGetItem(func_5080_call(relay.reshape(var_7551.astype('uint64'), [2, 4, 12])), 0)
call_7552 = relay.TupleGetItem(func_5083_call(relay.reshape(var_7551.astype('uint64'), [2, 4, 12])), 0)
func_3513_call = mod.get_global_var('func_3513')
func_3516_call = mutated_mod.get_global_var('func_3516')
var_7579 = relay.var("var_7579", dtype = "uint64", shape = (1248,))#candidate|7579|(1248,)|var|uint64
call_7578 = relay.TupleGetItem(func_3513_call(relay.reshape(var_7579.astype('uint64'), [1248,]), relay.reshape(var_7545.astype('float64'), [32,]), ), 5)
call_7580 = relay.TupleGetItem(func_3516_call(relay.reshape(var_7579.astype('uint64'), [1248,]), relay.reshape(var_7545.astype('float64'), [32,]), ), 5)
uop_7581 = relay.acos(call_7544.astype('float32')) # shape=(2080,)
uop_7583 = relay.acos(call_7548.astype('float32')) # shape=(2080,)
func_549_call = mod.get_global_var('func_549')
func_553_call = mutated_mod.get_global_var('func_553')
var_7595 = relay.var("var_7595", dtype = "int16", shape = ())#candidate|7595|()|var|int16
var_7596 = relay.var("var_7596", dtype = "float32", shape = (160,))#candidate|7596|(160,)|var|float32
call_7594 = relay.TupleGetItem(func_549_call(relay.reshape(var_7595.astype('int16'), []), relay.reshape(var_7596.astype('float32'), [1, 160]), relay.reshape(var_7546.astype('float32'), [13, 160]), ), 1)
call_7597 = relay.TupleGetItem(func_553_call(relay.reshape(var_7595.astype('int16'), []), relay.reshape(var_7596.astype('float32'), [1, 160]), relay.reshape(var_7546.astype('float32'), [13, 160]), ), 1)
uop_7610 = relay.tan(uop_7581.astype('float32')) # shape=(2080,)
uop_7612 = relay.tan(uop_7583.astype('float32')) # shape=(2080,)
output = relay.Tuple([bop_7523,var_7545,var_7546,const_7547,call_7550,var_7551,call_7578,var_7579,call_7594,var_7595,var_7596,uop_7610,])
output2 = relay.Tuple([bop_7523,var_7545,var_7546,const_7547,call_7552,var_7551,call_7580,var_7579,call_7597,var_7595,var_7596,uop_7612,])
func_7621 = relay.Function([var_7521,var_7522,var_7545,var_7546,var_7551,var_7579,var_7595,var_7596,], output)
mod['func_7621'] = func_7621
mod = relay.transform.InferType()(mod)
mutated_mod['func_7621'] = func_7621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7621_call = mutated_mod.get_global_var('func_7621')
var_7623 = relay.var("var_7623", dtype = "int8", shape = (1, 7, 4))#candidate|7623|(1, 7, 4)|var|int8
var_7624 = relay.var("var_7624", dtype = "int8", shape = (11, 7, 4))#candidate|7624|(11, 7, 4)|var|int8
var_7625 = relay.var("var_7625", dtype = "float64", shape = (2, 16))#candidate|7625|(2, 16)|var|float64
var_7626 = relay.var("var_7626", dtype = "float32", shape = (2080,))#candidate|7626|(2080,)|var|float32
var_7627 = relay.var("var_7627", dtype = "uint64", shape = (96,))#candidate|7627|(96,)|var|uint64
var_7628 = relay.var("var_7628", dtype = "uint64", shape = (1248,))#candidate|7628|(1248,)|var|uint64
var_7629 = relay.var("var_7629", dtype = "int16", shape = ())#candidate|7629|()|var|int16
var_7630 = relay.var("var_7630", dtype = "float32", shape = (160,))#candidate|7630|(160,)|var|float32
call_7622 = func_7621_call(var_7623,var_7624,var_7625,var_7626,var_7627,var_7628,var_7629,var_7630,)
output = call_7622
func_7631 = relay.Function([var_7623,var_7624,var_7625,var_7626,var_7627,var_7628,var_7629,var_7630,], output)
mutated_mod['func_7631'] = func_7631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7709 = relay.var("var_7709", dtype = "int16", shape = (9, 2, 7))#candidate|7709|(9, 2, 7)|var|int16
var_7710 = relay.var("var_7710", dtype = "int16", shape = (9, 2, 7))#candidate|7710|(9, 2, 7)|var|int16
bop_7711 = relay.bitwise_and(var_7709.astype('int16'), relay.reshape(var_7710.astype('int16'), relay.shape_of(var_7709))) # shape=(9, 2, 7)
output = bop_7711
output2 = bop_7711
func_7722 = relay.Function([var_7709,var_7710,], output)
mod['func_7722'] = func_7722
mod = relay.transform.InferType()(mod)
mutated_mod['func_7722'] = func_7722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7722_call = mutated_mod.get_global_var('func_7722')
var_7724 = relay.var("var_7724", dtype = "int16", shape = (9, 2, 7))#candidate|7724|(9, 2, 7)|var|int16
var_7725 = relay.var("var_7725", dtype = "int16", shape = (9, 2, 7))#candidate|7725|(9, 2, 7)|var|int16
call_7723 = func_7722_call(var_7724,var_7725,)
output = call_7723
func_7726 = relay.Function([var_7724,var_7725,], output)
mutated_mod['func_7726'] = func_7726
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7728 = relay.constdtype = "float32")#candidate|7728|(16, 11, 11)|const|float32
uop_7729 = relay.sqrt(const_7728.astype('float32')) # shape=(16, 11, 11)
output = relay.Tuple([uop_7729,])
output2 = relay.Tuple([uop_7729,])
func_7735 = relay.Function([], output)
mod['func_7735'] = func_7735
mod = relay.transform.InferType()(mod)
output = func_7735()
func_7736 = relay.Function([], output)
mutated_mod['func_7736'] = func_7736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_7801 = relay.TupleGetItem(func_7735_call(), 0)
call_7802 = relay.TupleGetItem(func_7736_call(), 0)
func_6902_call = mod.get_global_var('func_6902')
func_6906_call = mutated_mod.get_global_var('func_6906')
const_7810 = relay.const([10,-5,-1,-8,-9,10,-8,7,4,9,6,3,-10,6,4,9,-3,2,1,1,-6,3,5,1,3,-1,7,1,-2,1,10,-10,6,-7,2,8,-10,-4,-2,-6,7,4,-3,3,3,1,-6,6,-3,-9,-2,4,10,9,-5,7,-4,5,-5,3,6,1,3,4,-2,-2,1,-8,-4,-3,6,10,-10,-7,5,4,4,-5,-3,-4,3,-1,9,-7,8,1,-9,-6,-6,-5,3,-4,3,5,-10,2,4,-10,-5,-6,-7,9,-6,5,7,4,-9,8,-8,9,3,-1,-7,10,8,-6,-2,2,-9,-1,7,8,-4,10,-1,-7,-4,-1,-9,-4,-6,-3,5,-8,2,-9,-5,-9,-5,-10,-9,1,5,-4,-3,-3,-9,7,2,6,-5,7,4,-10,2,-7,4,4,-10,-6,-7,1,-5,-9,4,-5,2,10,7,-7,9,-1,4,4,4,-6,-9,8,-5,-5,4,-7,-3,4,-8,-10,-7,-2,6,4,8,-2,6,2,-7,-2,8,-7,6,-2,4,-1,-3,-1,-1,-1,-4,-5,-3,4,6,2,5,7,-3,-8,-1,8,-4,-4,-4,1,8,-8,4,2,8,-6,-3,6,1,3,-5,-7,9,-3,6,1,-1,-4,3,-5,-10,-5,3,9,5,8,-4,-10,-8,-6,-10,-10,-5,6,-2,8,1,7,5,9,-9,-2,4,5,-7,-8,-5,-8,5,-8,-4,-9,2,-10,-3,6,6,4,-2,-3,8,-3,-2,-5,4,3,2,4,7,10,3,-1,-6,8,-2,4,-4,4,8,2,5,-2,7,-2,2,-4,7,-3,-10,10,3,3,3,-5,9,4,5,2,2,6,-5,8,-8,5,-1,10,-1,3,-10,-6,8,-4,6,4,-9,1,-3,-4,-7,8,5,3,-3,-9,-5,-4,5,-5,-4,-8,-7,5,-5,10,-9,1,8,-10,-8,-6,6,-7,7,-1,-9,4,-5,8,9,3,10,-1,-5,9,-2,10,6,10,-7,4,7,6,8,-3,3,4,9,2,-8,9,6,9,-7,5,7,2,9,7,1,4,-5,7,-6,8,-10,4,-6,-9,-2,-7,-6,-5,6,-6,-2,-2,1,-1,-8,8,5,5,-7,-6,-1,-9,3,-5,8,7,2,-8,-7,-7,-7,-5,9,6,4,-6,-5,3,-1,-7,8,10,3,2,-7,7,5,8,1,3,-4,-10,6,-6,-2,7,-9,9,-6,-6,-9,9,-4,-2,-1,-2,-4,3,-6,6,-4,-7,9,-8,6,-10,-4,10,5,5,-7,-10,-9,-8,4,4,-6,-2,6,9,-2,6,-7,-8,-8,-8,-1,-5,-3,-7,6,4,2,-6,6,10,-6,7,-5,-6,9,-10,-4,1,10,2,-9,10,4,2,3,9,-10,-3,-1,-10,4,-1,8,4,9,-4,4,-2,1,-8,7,4,-4,-4,5,-7,5,5,-9,-1,-7,-7,-10,9,2,-4,5,-6,-4,-3,-6,7,-8,7,3,6,-3,-3,1,-2,7,3,5,-10,2,9,-6,9,1,1,-4,-6,-9,9,10,4,9,-9,9,-5,-5,-6,3,2,3,-9,-10,5,-5,1,6,-5,5,3,-5,2,5,8,-7,-3,6,9,-9,9,-7,-9,8,-1,-10,-4,3,3,-5,-5,3,-3,9,9,6,-2,-10,7,-7,-8,3,9,9,-5,5,7,9,1,3,8,1,2,2,-7,10,-7,-9,-2,-10,-3,8,-7,1,6,9,5,5,1,-9,-8,6,-3,-2,5,1,-9,7,7,-3,4,-7,3,-6,-1,3,-3,5,-5,-8,-10,-6,9,4,-3,-9,10,8,9,-8,-9,10,-1,6,1,-6,-5,10,8,-10,-3,-10,4,-8,1,1,-6,-10,5,3,-3,7,-1,-4,10,-2,2,6,1,6,2,2,10,7,9,1,8,2,2,-10,9,-7,-5,6,9,-6,3,8,-1,9,4,-1,-6,2,10,-4,6,-1,-4,-5,-1,3,10,-7,6,-10,-4,3,-6,1,8,7,7,-5,5,6,-10,9,-2,-2,2,1,2,9,-10], dtype = "int32")#candidate|7810|(780,)|const|int32
call_7809 = relay.TupleGetItem(func_6902_call(relay.reshape(const_7810.astype('int32'), [12, 5, 13]), relay.reshape(const_7810.astype('int32'), [12, 5, 13]), ), 0)
call_7811 = relay.TupleGetItem(func_6906_call(relay.reshape(const_7810.astype('int32'), [12, 5, 13]), relay.reshape(const_7810.astype('int32'), [12, 5, 13]), ), 0)
func_6902_call = mod.get_global_var('func_6902')
func_6906_call = mutated_mod.get_global_var('func_6906')
call_7817 = relay.TupleGetItem(func_6902_call(relay.reshape(const_7810.astype('int32'), [12, 5, 13]), relay.reshape(const_7810.astype('int32'), [12, 5, 13]), ), 0)
call_7818 = relay.TupleGetItem(func_6906_call(relay.reshape(const_7810.astype('int32'), [12, 5, 13]), relay.reshape(const_7810.astype('int32'), [12, 5, 13]), ), 0)
func_6902_call = mod.get_global_var('func_6902')
func_6906_call = mutated_mod.get_global_var('func_6906')
call_7820 = relay.TupleGetItem(func_6902_call(relay.reshape(call_7809.astype('int32'), [12, 5, 13]), relay.reshape(const_7810.astype('int32'), [12, 5, 13]), ), 0)
call_7821 = relay.TupleGetItem(func_6906_call(relay.reshape(call_7809.astype('int32'), [12, 5, 13]), relay.reshape(const_7810.astype('int32'), [12, 5, 13]), ), 0)
func_714_call = mod.get_global_var('func_714')
func_718_call = mutated_mod.get_global_var('func_718')
var_7831 = relay.var("var_7831", dtype = "uint8", shape = (1320,))#candidate|7831|(1320,)|var|uint8
const_7832 = relay.const([4.906663,-4.177631,-7.657118,-6.078078,5.763864,-0.167423,-0.478964,3.009611,-4.918083,-7.771749,-6.827668,-7.596861,-1.147159,1.646412,0.942374,-8.776558,5.712685,6.172703,-8.727651,1.309650,9.304428,6.224078,-7.626763,0.629123,-5.467703,-2.490460,-9.416096,8.059093,1.789467,5.632562,6.471025,5.415379,-3.552386,8.858256,-5.709370,5.976416,-7.426698,-6.244568,4.013179,4.987490,8.137218,-5.139819,-0.757368,4.673455,-4.634177,4.633788,-1.013112,2.665196,6.100888,0.095334,4.918197,7.130662,7.212215,5.315733,8.787990,-1.428582,-2.844679,-2.445758,3.417895,-7.547057,-8.656737,8.487780,7.160042,-5.075919,8.205907,-0.793835,-5.380653,2.316366,4.808887,-3.113880,0.997876,-9.269076,-7.923210,2.130653,-7.599815,5.208500,6.661496,8.952771,0.031909,7.206603,0.695301,-9.069106,9.852531,2.503651,-2.095456,7.612379,-2.530272,3.197683,-7.055921,-2.681419,-8.185385,-0.545113,7.773159,-3.377479,4.408157,2.028258,-5.535180,-0.754190,3.707724,-8.505509,2.871455,-7.228592,2.740361,-0.316986,-5.846043,-6.557560,8.796052,-1.485748,-0.476191,5.127425,-1.227944,-2.401752,-8.558534,-5.768002,-4.235009,4.085606,-6.846914,-4.028788,3.773715,9.462550,1.867608,8.583381,-7.360839,5.354215,-1.455160,-6.530885,-0.625168,7.857216,6.310626,-6.036977,1.518719,-1.060858,9.714572,7.827761,0.638083,-2.985425,1.232882,8.580170,4.790637,-8.037357,-7.891619,-7.675021,-5.360371,8.213174,6.537961,3.133312,-2.153240,-0.111993,-9.262856,-4.742664,4.294381,0.500142,-1.239481,-7.958834,0.275020,-7.683211,-2.377361,-1.362380,-8.190766,-8.581508,-1.297313,-2.806870,3.793978,-3.144676,3.523163,-1.423359,-1.661134,4.554066,-7.876389,-0.259282,-5.957391,1.684952,-2.309995,1.258249,-0.207037,-9.041058,-6.283916,9.632560,-0.699192,7.313104,-3.312467,-3.189041,3.733143,-9.461087,3.505306,-4.218998,3.771625,-5.351604,3.747407,-4.267240,-2.809205,-9.137438,-0.753185,-2.237452,-1.280717,-3.355108,0.324167,9.056385,-9.264996,5.081340,-4.880806,8.234855,1.704669,3.872903,-8.239386,-8.136755,0.214754,7.500754,-4.060137,-2.475623,1.487001,-9.944759,2.349712,-9.696053,7.114590,7.086593,4.736928,7.422702,4.078304,9.493897,-3.836252,-9.692435,7.467317,4.730079,8.974185,-3.515266,-2.625926,-5.441018,-4.904460,9.461237,-7.879320,2.827218,-2.287396,-6.962384,-3.548911,1.274653,-4.617400,-1.433157,2.292241,8.495385,3.217146,3.884186,-8.564178,2.772995,-8.917611,-4.575758,4.049268,-1.505128,-6.465982,0.140716,3.484902,-4.119747,-9.712667,5.995332,-4.223083,3.976841,-5.416216,-6.283585,-6.970568,8.355403,-4.468047,6.795295,7.819114,3.558828,-1.369051,-7.829660,2.439082,1.818722,1.893419,2.995454,-1.754191,6.670153,-8.213733,7.815721,8.399982,6.419788,1.516999,-5.981785,0.020494,-3.341754,-2.700049,9.738877,3.055227,-9.529973,9.201265,2.402058,-3.881160,-0.064052,-7.738504,5.066139,-6.538497,1.743504,1.386839,-6.960242,-5.263290,-3.042290,-3.306140,-9.486902,0.180518,-5.208379,7.365542,-3.718629,1.855161,-0.179895,-2.656384,5.283820,-5.125367,-8.050864,-8.454860,-3.431848,-4.341408,-9.189643,-4.089241,-2.843111,6.044279,-8.508894,-5.597798,-1.500344,2.339666,0.788569,-0.671840,-2.853242,-8.510489,-1.552866,-8.481280,1.639811,8.286050,3.300795,-5.445559,8.277632,-0.166944,-1.111297,-1.833000,-8.781851,0.511635,-8.765702,5.615482,0.138758,5.560829,-8.227433,-8.505738,-2.870117,0.274844,-1.637262,-7.424999,4.345760,9.524545,3.747991,-4.008696,-7.222019,-5.331153,1.995411,9.480758,6.080484,-7.181787,-4.154948,6.585404,1.718638,-6.030676,-4.239650,4.209482,-7.432281,-9.045391,2.018746,9.548344,-0.559264,-4.244069,3.672771,-4.261382,-3.220487,9.635993,-4.151072,-6.533861,5.498201,1.814201,3.377703,-3.778422,3.589655,6.671292,5.847899,-2.108127,-2.018437,-1.891333,4.038339,-1.402657,5.110619,-6.322256,-1.898729,5.013670,-6.673228,-3.456207,-1.200457,8.807794,8.610441,-2.298912,3.185922,-1.848571,5.204925,-7.918815,-3.022256,-3.551766,-1.796983,9.819450,0.896335,-6.665847,4.644510,9.075066,9.213519,6.732721,-9.917283,-3.395012,0.551011,2.730597,2.397888,3.692042,2.314109,0.021922,-3.483873,-9.908858,-6.083783,6.920134,5.703053,4.508487,5.796444,4.634410,-3.445886,-6.587641,5.776020,-2.063982,3.514416,-2.379910,8.690961,-6.689917,-1.743072,-7.727509,0.669964,-5.428215,-4.679901,-6.511353,-5.261807,1.833802,1.216829,-8.080044,-4.946363,3.434882,-9.127127,-7.825475,9.455078,-8.109465,0.983245,-8.984615,-0.478045,-0.058247,-5.753568,8.834918,-8.357959,6.285863,-1.040921,-7.695784,-3.454376,-3.224576,7.204386,7.384209,5.627393,-5.619170,-3.232094,2.708337,3.260588,9.047203,-4.676587,8.359904,-0.182361,-3.497841,-0.866001,7.249088,-4.954198,-3.745848,-4.774470,5.628873,0.461020,-5.306066,-8.306120,-8.499737,6.085817,-8.046470,-7.023720,5.967239,-9.391902,7.503317,-1.962973,-0.879271,-7.066619,8.597326,-2.386056,-7.375248,-7.409972,5.865995,4.973953,4.984296,3.361676,-0.228531,0.538279,-2.711813,-5.173716,-6.975193,-2.866968,3.911211,3.813527,2.660483,6.709976,9.969099,3.656550,0.607293,3.663413,9.971190,-7.801425,-6.846730,2.178959,0.014967,4.911621,8.466467,-6.035834,-3.558917,9.921639,1.830189,-4.159816,-7.884445,0.342881,-6.019365,-9.425366,-2.220359,8.027611,-7.518477,0.346472,-2.487081,-2.288986,3.288264,3.625035,-5.791582,9.554572,6.673226,3.759508,1.589727,1.706482,1.551477,-8.048435,-0.986607,-5.038007,-0.347225,5.247854,-3.811293,-4.344267,-8.805137,-4.375643,-0.901419,3.299496,5.815222,-0.451369,1.064524,-4.640994,6.285100,-0.806569,-2.024806,4.599404,7.839264,-7.215563,-4.795700,3.402715,-2.694354,9.822595,2.944407,-9.835307,2.632534,-7.427035,9.020855,1.911557,6.136058,-5.049988,2.967322,-0.984125,-1.075441,-1.743622,-8.645349,-7.863904,7.339876,9.693756,-3.643530,3.805661,-7.837959,-7.670794,-1.044319,2.308676,-9.332181,-3.390844,0.951192,-2.635673,9.769381,-2.106119,-7.575333,-0.917703,-6.467342,-4.858790,5.424230,2.793176,6.279894,5.457966,5.438753,0.708429,4.904030,3.885464,2.802924,-6.080415,5.021901,-5.277378,1.270784,9.661595,-0.451642,-8.937452,-1.790950,-7.589539,-5.149245,0.087841,-8.182712,9.579085,-3.131077,-5.661556,-2.804646,-5.362015,2.580695,6.894595,1.356518,-6.981617,-6.413932,-3.141833,-2.817708,7.393937,-8.000546,2.751431,5.784705,-9.527768,3.560559,4.048161,-7.734262,8.751989,-5.112849,-7.172142,-8.460559,-9.158388,-7.642939,9.814688,3.013143,1.530340,5.395057,-8.229359,4.396781,6.578259,7.756451,-8.961584,-1.413602,5.042733,-6.059407,2.967032,-3.809384,1.752302,-4.129423,-0.511712,1.697694,9.111694,-6.903945,-4.441405,5.259590,-0.376848,-0.884535,-5.815996,6.415557,-5.062089,0.105278,-6.490002,4.362753,-9.638662,-1.514080,5.800502,-8.632055,-7.289050,-3.673729,-2.359294,-5.481169,-0.516759,7.696888,-7.481674,-9.236621,-4.965764,-2.897073,2.202593,6.038625,7.191530,-9.802425,9.530341,6.108215,3.725235,-1.068785,1.182163,0.296974,-2.836167,-5.971161,8.560403,7.730440,4.788574,-3.120093,3.750299,-5.957976,4.830725,6.405172,-1.019945,-0.578688,-8.962065,4.522989,-0.011055,3.903476,-6.355748,6.287884,-3.324493,0.907416,-5.772593,-6.485766,6.399065,-2.337355,-2.671775,-1.893333,-0.024088,-1.579453,5.048200,9.315930,-8.773762,-2.803158,-4.418327,-0.003294,-7.887595,-6.580272,0.293901,-0.864426,-7.007992,9.620761,-0.893245,7.050876,8.858026,2.363305,1.587460,-3.417283,5.773494,-6.768459,-6.454254,-4.686608,6.247590,0.693261,-6.310713,5.124554,-1.799835,8.129962,-9.629884,2.366872,-3.863330,2.296388,1.737464,-6.138321,-0.897921,9.181550,5.131751,-4.341312,-8.472164,-3.080421,3.966439,0.934719,-4.847994,2.179496,6.608008,-2.658800,7.097373,-3.609609,7.530379,-0.398235,8.535878,-5.911868,2.831725,7.717677,-0.939551,-5.845337,-4.919401,5.955497,-4.685344,5.230813,-9.898074,-3.734871,6.113580,-3.001553,4.688688,9.326551,-4.850436,4.338169,-2.078456,-5.800243,-1.300319,-4.895861,-6.359351,-6.429337,-0.503564,5.778342,6.792934,8.020620,-0.917455,-7.443663,-9.549057,-4.093450,1.544527,-3.959794,5.834839,4.277416,-5.150813,-5.259336,8.632537,9.894379,-4.587083,-1.103653,-6.216946,4.906416,-5.115919,-7.840326,1.644991,9.138390,5.381558,-7.584142,-9.649087,-1.782239,7.182631,-9.254917,2.954922,5.365999,-1.366871,-4.517751,0.316575,2.856398,6.721672,-0.801338,-6.133482,8.356825,4.020660,-3.937636,5.187010,-7.151491,9.634620,-8.996731,7.623421,4.361178,6.918291,-4.428342,1.333175,-5.847596,-0.484813,8.857002,9.534764,-1.584565,-7.391080,-0.878175,7.273294,-4.948147,3.582161,-4.588519,-2.109164,-8.186737,4.869115,-1.093900,-0.946184,0.650292,2.180342,-1.628925,2.613358,-5.788699,5.575008,-0.512144,8.143557,-5.331980,7.862061,0.481215,-3.779359,0.256810,3.845737,-8.291903,4.778671,-5.364339,-0.265192,7.806706,7.577942,6.981278,-0.977056,5.068523,-0.155167,1.856604,-1.659368,-4.943527,-1.739635,-8.608693,6.662291,-4.303340,-6.621359,-7.097348,6.758399,4.188488,7.836780,9.025222,-3.162618,8.439981,-5.073432,-8.406338,-3.879607,4.505129,-2.152375,-1.779587,-4.302097,-0.030001,8.652838,5.515518,-6.930823,7.935852,5.220765,-3.039325,6.868904,6.709535,-7.815478,2.476528,-0.859881,4.765990,-1.775796,-2.795557,-0.875854,-0.212891,7.434800,-4.015816,-2.658986,1.853746,5.274443,5.426859,-5.928327,-2.818883,-9.688245,8.732078,0.167748,9.564911,-4.156885,-6.309201,1.264727,-3.899318,5.899762,-6.427227,-3.116103,8.621405,8.661131,-4.920369,6.715078,-2.107304,-9.729317,-9.439636,3.639586,-1.259191,-6.957614,-4.140858,3.543615,-1.465733,-1.934458,-3.182139,7.309346,-6.344916,-9.271264,-3.966458,3.382952,7.224995,-7.903177,2.424531,4.361289,0.864495,6.596450,1.929433,-5.652038,4.001630,3.008185,6.716096,3.847530,5.145925,-3.732958,-1.793860,0.468497,-8.444966,2.657280,5.089858,5.208440,-3.541660,-0.563238,5.747232,-4.503466,7.752688,-4.771714,-8.600183,-9.583953,1.397583,3.374380,4.571145,7.102260,-2.956011,1.304351,1.996035,-4.071634,4.863415,-4.404667,8.023177,7.046710,-6.024457,3.043568,-4.029239,-6.131088,-2.758531,8.710425,-9.958177,0.391555,6.532508,-5.279976,3.845049,3.350137,-0.483929,7.151515,-2.082673,-9.410504,-8.965506,5.376494,-1.560384,-1.091636,6.506755,-6.423606,-5.704410,-2.612603,-2.936462,6.375974,3.450054,8.233762,-4.698509,3.981576,6.436684,7.841202,6.216430,-7.844943,-5.426822,-0.454862,-7.948668,-3.922296,9.060539,4.545751,5.650998,2.791844,6.324384,-4.771806,-2.019189,-9.175774,-3.796309,1.629653,-2.648563,2.179856,4.862057,-4.130414,-6.863560,-0.661776,6.089213,1.995646,-3.726608,1.860414,5.270818,2.153363,4.592318,-3.460512,4.162253,6.749136,5.368369,2.698920,-2.370113,5.864611,-3.476404,-9.814144,2.597835,-2.788036,5.269713,9.016811,-7.526869,-8.896307,-1.057077,5.587204,-1.793085,0.128740,7.510123,-5.081046,-0.197033,-1.407953,-0.822599,-3.306005,-5.978409,8.874816,-4.438971,6.224376,-8.481975,-7.853118,-8.189491,-4.390430,-2.770190,-4.712165,-3.473200,1.715913,-3.902915,5.557406,2.870395,-6.813986,7.211484,3.817233,-1.775900,-3.748432,-4.038309,5.939422,-7.714330,7.403957,7.963831,-7.537457,8.246072,-7.112180,0.007371,-5.787374,2.992002,-6.891235,-4.417910,-6.110322,-8.139251,9.347331,0.999352,5.317482,4.088201,-1.637255,5.706214,-1.284723,0.303705,-9.996542,7.176362,6.701289,-3.869544,1.818654,0.712202,0.745669,-7.092591,-9.074592,-0.975291,7.633760,-1.875963,-1.698419,-7.767672,-4.286815,-2.085994,-4.709917,3.130976,-7.219767,4.121464,8.390966,-9.870388,5.328122,3.370517,-1.587002,8.975381,5.769311,-4.417269,7.694460,2.558003,-2.369810,1.433220,4.821946,-8.678988,-1.525973,3.652348,-2.040037,-3.224885,-3.003975,4.705461,0.205497,-9.492687,-1.416872,2.668843,2.865863,-5.003628,-4.824886,-9.703855,-4.133531,3.679537,-9.737613,-8.370567,-9.483620,-8.487626,9.075461,-9.053622,5.999430,0.105946,4.696384,6.831039,0.679718,-5.598606,2.696843,6.291605,0.263734,-1.920905,7.359627,-2.657286,-4.443152,-0.929752,-0.394943,-9.374495,4.566454,8.232773,-7.095205,6.169887,-0.925793,7.894681,-5.948214,-9.699859,-8.497543,-0.773937,7.632298,6.262776,9.535847,9.745606,-7.005843,5.260078,-2.219856,-3.363690,-5.595088,-0.684665,3.292420,-3.606209,1.660923,9.714966,-6.446985,2.287535,-9.316470,3.309612,6.344312,3.483025,-9.062922,4.573553,-8.747094,-6.923198,-3.036822,8.443179,-4.178906,5.985129,-7.124144,0.931845,-9.969461,1.070565,-9.051406,8.540762,9.974036,4.503797,4.220450,-0.890155,4.212879,-2.425707,-4.772371,0.676185,-4.948019,-3.609998,-9.507807,2.974611,-6.685203,1.537665,9.121790,-8.016555,-1.798977,-5.964519,1.682263,4.991647,2.588430,-3.326105,4.391117,9.850424,-1.585059,7.892399,7.292706,-2.110787,3.366704,-0.055335,-8.182175,0.382291,0.237667,-3.498934,1.203931,8.766304,-3.982426,-5.127096,0.657497,9.593328,0.588574,-7.958772,9.610861,-6.535909,4.089329,8.258205,-0.044261,-5.794633,-8.111688,-2.235106,-0.719194,3.578276,2.785992,-2.165660,5.343600,-3.092684,-5.100038,4.498518,4.203913,-2.451020,3.088150,-6.943326,9.142538,9.439587,-4.172598,8.517434,9.054621,0.295020,-8.234398,8.610630,1.675878,-7.071140,5.755872,6.905614,9.837187,3.735168,0.628462,-6.342829,-4.491686,-3.231661,0.746034,0.575019,-7.144557,1.588688,-2.946912,-0.339951,2.520195,-3.144050,3.789921,1.766373,6.698679,3.124227,7.964682,3.273105,1.679171,-1.626164,2.115585,0.730675,-3.819463,-7.196847,5.003051,-2.111895,3.489035,0.876984,-0.198886,-7.294855,2.286669,-0.871843,6.049813,-0.889614,0.516932,-2.078757,-8.069625,4.608292,-2.068583,-1.039629,-6.934669,-4.317053,6.356082,-8.305741,2.834142,9.046951,-7.633399,1.616003,-2.471631,-8.800382,-7.189283,-9.546969,-3.317732,0.534623,-1.303507,2.198115,-0.875771,-7.514353,6.128850,4.872850,4.401252,-8.098053,-7.542556,-2.910256,6.971282,-5.271727,7.595431,9.932663,-1.497170,-4.520436,-2.116606,-5.590237,-9.683389,-7.723874,2.889879,-5.416447,-2.743754,5.841032,-4.741196,0.186862,-8.346377,5.935925,9.241214,-9.754448,4.977513,-7.531288,-1.666435,-6.717824,3.076765,-0.956536,-6.526037,-5.218370,7.706552,3.098270,4.386459,-7.479127,-8.234968,5.971392,-3.104381,-6.540342,-9.710985,8.391789,4.366207,7.783565,-5.458926,3.341662,-3.429470,8.499013,5.784753,9.200645,-8.478954,9.594851,2.205465,-7.805223,-1.520213,9.117649,3.386977,6.138128,-4.215428,6.852654,-4.677543,2.311911,-7.449964,4.202981,5.138348,-1.165025,-5.642485,7.699036,-4.985079,5.940418,-1.652605,-0.321771,0.072968,-0.246675,-3.682330,-6.698053,-5.060350,-2.614876,-4.307078,2.647655,-9.641801,6.126700,2.658118,7.140503,-7.470802,-8.818773,8.659733,-3.507621,-3.664031,7.951611,2.693664,6.607909,7.817776,-6.802689,1.409719,-6.663908,-7.620458,-0.150639,-6.856642,6.434563,-6.134176,6.031969,-4.452243,-0.541993,-7.056357,-5.404382,4.073804,1.911289,8.627282,2.132022,7.420373,-4.511605,0.866484,6.040228,-3.388864,4.697457,-5.149704,6.247045,-8.310149,0.640274,8.835972,-7.021348,-9.863075,6.488044,-0.250926,-7.971028,-4.753831,1.233550,-3.390168,6.272484,4.633376,8.747613,2.952793,3.379026,0.421381,-4.192610,-3.805835,8.550146,4.454582,-9.273509,8.959810,8.422212,5.266130,-6.622881,-1.832145,9.885126,-7.155920,5.106949,5.100187,7.606569,-3.224064,5.472237,7.550027,1.476814,8.011346,-3.221373,-9.237129,3.397979,-1.238438,0.246728,4.720630,-6.246332,-9.967733,-7.041139,-0.601885,-0.999851,7.438249,6.788302,-5.587960,4.168134,-8.713233,6.785334,-3.948152,5.488769,-8.294069,1.041931,4.455338,6.590682,7.211178,1.781654,2.753864,-0.641307,9.320991,0.287148,-4.909484,1.293976,-8.264895,-3.190204,5.928443,1.047353,-0.771415,-8.144595,5.309988,6.830197,7.682669,-6.403712,-7.794794,3.451459,7.041349,-5.558969,-0.815436,-1.494440,-5.348793,1.940160,-3.007921,4.167200,2.514492,-8.997229,0.019327,7.857463,-8.989939,5.047097,2.827703,-6.167667,-9.386021,-4.040100,5.567979,2.524888,7.707904,1.340104,-3.369832,1.584700,-8.258865,-2.896516,8.643680,-2.537593,1.529127,1.558778,7.758288,6.337361,-3.736426,-7.577365,5.253880,2.629977,-9.407204,-1.316979,7.386371,-6.728732,-0.869399,7.071494,-2.793833,8.674462,0.317914,-2.996105,5.411937,-1.164923,-2.491935,6.953222,1.069333,-2.550840,7.907731,-4.080445,-6.303202,1.409376,7.623062,9.507773,-5.696632,4.049998,6.568044,-4.588359,-2.227459,-6.536457,1.867309,-5.371701,-7.276538,-7.056155,2.475420,-3.611735,9.083007,-8.738772,-7.351698,6.051360,4.647873,-5.989379,-8.758292,0.359459,-5.450431,8.805600,5.099635,-2.336908,8.898103,8.959846,9.600022,-9.517868,9.254774,2.891326,-2.865264,6.905293,5.989983,-5.564782,-9.458986,-1.396069,0.469897,9.680516,9.179503,-9.569532,-1.355099,-7.195975,7.204953,0.115137,4.772861,-8.507206,1.388316,9.612745,-7.241444,-8.675774,0.229391,3.699446,9.641163,9.714870,-0.516341,5.197547,-7.751156,-8.006353,-4.368431,-6.867706,-0.101990,-1.796024,-6.072266,-8.623938,0.682778,-4.313361,-7.883151,-6.820468,-7.350384,-9.113300,3.299229,9.485312,3.649431,-6.942513,1.268914,-6.444057,0.016390,9.323478,-3.380280,-4.340948,7.990709,3.340744,-9.853804,0.081844,9.118453,9.391044,1.382504,-9.404653,-3.651644,-7.510981,-6.332144,9.222675,9.046789,6.825257,7.353317,-0.995350,-1.324248,-5.836753,2.608736,4.961746,1.951195,8.669707,-2.421387,-8.545225,-0.126086,-0.657697,8.684347,4.612113,9.195209,-5.859686,-0.040385,4.790429,-3.531650,-1.912945,3.370922,2.785156,-4.551147,5.413257,-9.024224,-3.192160,-2.031817,2.051179,-7.947391,1.658426,-8.041668,-5.635623,-8.734085,4.998766,2.776134,-0.450010,-4.809924,-3.267386,-4.559645,6.589791,5.252654,-8.615935,-0.223433,3.231683,-7.043953,-2.000951,-2.250700,0.200718,-9.107534,-7.141505,-2.092652,-3.349792,-8.619901,-4.095836,-2.790648,4.443899,9.695875,-1.566445,-6.702135,-1.636836,-5.428829,1.792729,-7.157365,7.481734,6.855680,-0.098105,-1.649936,-5.404986,8.481715,3.027673,-5.553583,3.812391,-0.795778,-4.066410,4.705562,6.693512,4.020917,2.004762,-9.172733,4.898277,-1.866689,5.108800,-2.656778,7.123729,-9.870026,-6.694155,3.538305,-2.081354,6.438162,-0.299345,-5.476491,-2.639185,-3.655607,2.618281,-0.947220,1.932996,-1.644381,7.465946,-2.714591,3.862521,1.870099,-2.711703,2.745954,7.404271,7.323918,-1.519686,0.475162,2.419984,-1.651316,-1.301654,2.777693,8.956828,2.544864,8.018850,0.218495,-6.044354,-7.511560,1.829993,-7.970135,-9.211942,3.959766,6.163403,1.873375,-0.154389,7.196246,-7.366627,-8.238992,-2.717790,-3.992038,-0.059909,-1.290789,-0.433941,0.740833,1.411388,-1.233680,8.454134,-0.947859,2.781890,6.130208,5.763003,-6.208518,-5.775413,9.659179,-9.478721,-2.001445,9.066687,-6.100978,2.846119,3.807399,2.197636,-7.670039,7.310316,9.185431,-5.202087,1.448652,9.613458,1.372754,-8.182359,-8.506515,-5.048245,7.382394,-6.838007,1.313636,6.819934,-6.099252,2.146032,5.139100,1.888875,0.758690,-5.457660,2.667272,-4.057460,0.991015,6.343416,-1.153853,-0.068196,1.876495,6.796505,-5.627789,0.068934,9.165313,4.473596,-1.618419,1.881506,-4.772910,-2.889789,5.985619,-4.024136,3.650038,-9.420600,5.025198,-7.606601,6.224247,9.770468,-4.790158,-7.982627,8.086662,4.616968,-2.335491,2.150263,-5.419175,-1.875764,9.149734,-4.506233,-5.006454,-0.986325,5.372946,-3.045904,-0.771944,-1.809090,9.521091,-9.144216,-1.323109,-8.794044,-3.297919,5.643351,1.123246,-1.202454,-5.535843,7.591555,0.190556,-1.062131,-9.097123,-9.561493,-3.159674,-8.645379,8.958539,3.680628,-6.034538,4.076027,8.403683,3.976793,-8.706505,8.942934,-6.999809,-6.337667,-3.922996,-1.690129,2.543460,5.723098,5.161472,6.276258,-5.523307,-8.139565,-8.050041,8.283817,-9.264580,-9.953184,-9.346478,1.658944,4.047389,6.841691,-3.604373,-2.447514,-4.576635,4.647066,9.465701,-1.965784,8.296690,-8.698062,-8.368690,-6.067306,-2.817711,-2.977782,-5.501928,0.301491,9.357329,-5.573764,-3.141969,8.162006,-4.288006,-8.690984,-6.996013,-1.193557,2.527655,5.949654,-5.770062,-9.233572,7.742422,-7.530527,-3.321006,4.028344,-9.565697,6.982251,-8.970674,9.208151,-0.419306,1.389926,-9.934814,-1.130932,-2.239116,-8.421887,1.331481,-4.570100,0.416643,5.053457,-0.461641,2.065746,-6.244261,-8.507565,5.777104,7.943448,8.836104,-5.230067,-3.312331,-3.028653,4.117074,-5.425518,7.822067,9.645857,5.894294,8.159610,1.530423,-6.479663,5.306155,-2.341721,-9.678686,-7.280108,-3.591515,2.994798,-3.272327,-2.032258,-9.394605,-4.748257,7.071535,-3.429858,-9.152430,-9.934807,-6.953610,7.302286,1.459992,9.977006,-8.071436,-4.263982,-4.863253], dtype = "float32")#candidate|7832|(2080,)|const|float32
call_7830 = relay.TupleGetItem(func_714_call(relay.reshape(var_7831.astype('uint8'), [10, 11, 12]), relay.reshape(const_7832.astype('float32'), [2080,]), ), 4)
call_7833 = relay.TupleGetItem(func_718_call(relay.reshape(var_7831.astype('uint8'), [10, 11, 12]), relay.reshape(const_7832.astype('float32'), [2080,]), ), 4)
func_4387_call = mod.get_global_var('func_4387')
func_4390_call = mutated_mod.get_global_var('func_4390')
const_7865 = relay.const([-1,10,-5,-2,10,8,-9,7,9,8,-6,7,-7,-6,-2,-7,-3,4,7,-6,7,-4,-6,-2,9,-6,-4,-3,-3,-4,-9,-8,1,10,-8,-7,-10,-1,2,-3,7,5,10,10,8,10,8,-10,10,9,6,-4,6,5,1,8,9,7,3,5,-5,1,-3,-2,-2,-4,8,-7,3,2,-1,-10,-8,-2,-4,4,-1,3,-9,8,8,10,-8,-10,-8,-3,-5,-1,-9,3,9,-5,6,4,-2,5,-4,6,1,-3,10,-9,-10,-7,-3,-4,-10,3,-6,-9,7,10,8,-3,4,9,-3,-9,9,4,6,6,-9,-2,-4,-5,7,-4,3,-4,-5,-3,1,3,-7,4,9,3,-9,-4,6,-5,5,7,-7,7,4,-2,9,7,-6,-3,-2,-2,-1,-3,-6,-9,-6,-8,-9,-6,-2,-10,-6,1,9,-7,-10,2,-5,-8,1,-1,6,-3,2,-10,10,7,8,-7,2,9,-3,3,4,-1,1,-6,-9,3,-6,8,-4,1,-5,-8,4,-8,8,7,5,9,-7,-6,-3,10,4,7,-4,-10,9,-5,5,2,-7,7,6,-9,-2,3,-3,-5,10,-5,-2,-3,-2,4,2,-3,4,10,-10,4,5,7,10,-7,4,7,8,7,-8,9,8,8,4,1,-10,-5,-4,-7,4,7,7,-8,-5,4,7,-3,5,-6,-1,4,3,8,-4,4,-6,-10,4,-7,2,-2,5,1,-7,1,-5,1,6,7,-2,-10,1,-3,-7,-4,2,-5,3,6,-4,-10,-4,8,8,-2,6,9,1,4,4,4,-4,-2,-6,7,-7,-2,7,1,-5,6,-2,-3,-8,-10,3,-10,-4,5,3,1,-2,9,2,5,-10,3,7,-6,10,-9,9,-3,-4,-2,-4,-4,-5,-6,-2,6,-1,5,-4,-4,6,-9,-5,-7,-3,-3,-1,3,-10,3,-9,6,-8,7,4,8,7,5,2,-8,-1,3,-7,-6,-7,-3,-9,-6,1,-1,-7,7,6,5,-5,2,3,8,4,-9,4,-7,2,-10,-9,10,-7,1,10,-1,8,-1,-9,-2,-2,1,-4,6,2,-9,-6,8,-5,-7,6,7,1,6,6,10,3,-3,10,5,7,4,2,-9,4,1,5,-3,-8,4,-10,-2,-8,10,-6,1,-8,9,10,8,-3,1,6,4,-6,8,5,-9,-8,-10,-5,-10,-7,-6,8,-8,-2,10,-6,2,3,7,3,-8,6,-7,-8,-5,-7,-1,-4,7,1,-4,2,-8,-7,2,1,-10,9,-10,-6,3,8,8,6,-6,5,-3,-7,1,-5,3,-4,-7,-2,-3,1,-2,1,-1,-9,5,8,-8,-10,-8,-3,-3,7,3,6,-10,1,8,-5,-10,-9,-6,-4,3,-7,-1,3,1,-5,-1,-8,9,-4,1,7,2,8,-4,-6,8,-7,6,-2,-2,-9,5,-4,7,3,-7,-3,8,-1,-6,7,-10,1,-4,1,10,-9,-9,1,-10,8,-5,-8,-4,5,-6,4,-7,-2,-9,-7,6,4,-8,3,-7,7,2,7,4,8,6,-8,8,-4,-4,4,6,5,-10,3,-1,-3,6,1,-4,2,10,3,-1,-4,7,-6,5,8,-4,-7,1,-8,-2,9,-9,-5,4,-8,4,-1,-10,-7,-10,4,-8,-9,-1,-8,-7,10,-1,-6,3,-9,5,-10,-8,-2,2,2,-7,8,9,2,4,-1,-6,-7,10,6,7,10,2,4,6,-3,9,2,9,4,-7,-8,2,2,3,-5,5,-4,7,-1,5,7,-9,-10,4,-4,8,4,9,-2,-3,3,-4,4,-6,-4,9,5,-10,-6,8,3,-2,-8,2,-3,6,-2,-4,2,1,3,5,10,2,10,-8,7,-10,10,4,-7,-1,3,-9,-7,8,2,5,-9,-10,8,1,-5,-10,-3,10,7,2,7,4,2,2,-7,6,4,4,3,7,8,-4,-4,-2,-6,-2,6,6,9,-1,-7,-4,-4,-4,6,4,-1,-5,-3,-9,-3,-3,-8,-6,9,5,6,-8,8,5,5,9,8,-4,-3,9,5,-5,-2,-2,-8,-8,8,3,10,-1,-9,-3,-6,-7,10,-5,9,8,8,-4,-8,-1,8,4,3,-3,6,9,-2,1,4,7,-5,-5,-6,1,1,2,-5,-7,10,1,7,9,6,-5,5,6,-6,3,9,-6,6,-2,-4,1,1,1,-4,1,-2,2,6,-7,8,6,6,10,2,6,10,-10,-1,-9,5,7,-6,-5,9,-7,-4,6,5,-3,-9,2,8,10,-5,4,-1,-7,4,-9,4,7,7,9,1,-8,2,-10,2,-8,9,6,7,-6,5,-1,9,6,-5,-7,-6,-5,-5,-7,-4,-3,-10,-4,-4,7,4,-6,-10,-1,7,9,3,4,-10,-4,-7,-7,9,6,-2,3,-3,-10,-3,-7,-9,6,4,-9,-2,-9,1,7,-9,-3,6,-6,-7,3,9,10,10,-7,9,-9,10,-9,-7,-3,1,-7,4,-7,4,-8,-2,9,8,6,-4,8,4,7,6,-8,-5,-4,-10,7,3,-5,8,6,-1,-5,7,1,1,-3,-5,5,-7,9], dtype = "int32")#candidate|7865|(980,)|const|int32
call_7864 = func_4387_call(relay.reshape(const_7865.astype('int32'), [14, 14, 5]))
call_7866 = func_4387_call(relay.reshape(const_7865.astype('int32'), [14, 14, 5]))
output = relay.Tuple([call_7801,call_7809,const_7810,call_7817,call_7820,call_7830,var_7831,const_7832,call_7864,const_7865,])
output2 = relay.Tuple([call_7802,call_7811,const_7810,call_7818,call_7821,call_7833,var_7831,const_7832,call_7866,const_7865,])
func_7871 = relay.Function([var_7831,], output)
mod['func_7871'] = func_7871
mod = relay.transform.InferType()(mod)
mutated_mod['func_7871'] = func_7871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7872 = relay.var("var_7872", dtype = "uint8", shape = (1320,))#candidate|7872|(1320,)|var|uint8
func_7871_call = mutated_mod.get_global_var('func_7871')
call_7873 = func_7871_call(var_7872)
output = call_7873
func_7874 = relay.Function([var_7872], output)
mutated_mod['func_7874'] = func_7874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_7946 = relay.TupleGetItem(func_7735_call(), 0)
call_7947 = relay.TupleGetItem(func_7736_call(), 0)
func_7871_call = mod.get_global_var('func_7871')
func_7874_call = mutated_mod.get_global_var('func_7874')
var_7952 = relay.var("var_7952", dtype = "uint8", shape = (1320,))#candidate|7952|(1320,)|var|uint8
call_7951 = relay.TupleGetItem(func_7871_call(relay.reshape(var_7952.astype('uint8'), [1320,])), 3)
call_7953 = relay.TupleGetItem(func_7874_call(relay.reshape(var_7952.astype('uint8'), [1320,])), 3)
output = relay.Tuple([call_7946,call_7951,var_7952,])
output2 = relay.Tuple([call_7947,call_7953,var_7952,])
func_7978 = relay.Function([var_7952,], output)
mod['func_7978'] = func_7978
mod = relay.transform.InferType()(mod)
var_7979 = relay.var("var_7979", dtype = "uint8", shape = (1320,))#candidate|7979|(1320,)|var|uint8
output = func_7978(var_7979)
func_7980 = relay.Function([var_7979], output)
mutated_mod['func_7980'] = func_7980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_8056 = relay.TupleGetItem(func_7735_call(), 0)
call_8057 = relay.TupleGetItem(func_7736_call(), 0)
uop_8068 = relay.log2(call_8056.astype('float32')) # shape=(16, 11, 11)
uop_8070 = relay.log2(call_8057.astype('float32')) # shape=(16, 11, 11)
output = uop_8068
output2 = uop_8070
func_8075 = relay.Function([], output)
mod['func_8075'] = func_8075
mod = relay.transform.InferType()(mod)
output = func_8075()
func_8076 = relay.Function([], output)
mutated_mod['func_8076'] = func_8076
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8098 = relay.var("var_8098", dtype = "float32", shape = (4, 5, 12))#candidate|8098|(4, 5, 12)|var|float32
uop_8099 = relay.sin(var_8098.astype('float32')) # shape=(4, 5, 12)
func_7722_call = mod.get_global_var('func_7722')
func_7726_call = mutated_mod.get_global_var('func_7726')
const_8106 = relay.const([[-6,-8,-9,8,-10,-9],[-4,5,5,-8,-2,-8],[-4,-5,-9,-9,-4,-5],[9,6,-2,10,-3,-5],[-7,-7,4,9,10,-10],[-1,-3,-9,-5,-2,10],[7,1,6,-6,9,-6],[-1,-4,-1,2,-7,-6],[-3,-5,-5,10,-6,1],[9,7,-5,2,9,6],[2,3,-3,6,-3,3],[-7,-9,-6,-4,-8,-2],[5,-8,1,6,4,-3],[-2,4,-1,3,-2,10],[5,-2,7,5,-1,6],[-10,5,4,10,-6,-1],[-3,-4,9,2,8,-6],[-1,8,-7,-2,-9,-1],[-7,-10,7,-10,8,-5],[8,10,3,-4,8,-6],[6,-1,7,1,5,6]], dtype = "int16")#candidate|8106|(21, 6)|const|int16
call_8105 = func_7722_call(relay.reshape(const_8106.astype('int16'), [9, 2, 7]), relay.reshape(const_8106.astype('int16'), [9, 2, 7]), )
call_8107 = func_7722_call(relay.reshape(const_8106.astype('int16'), [9, 2, 7]), relay.reshape(const_8106.astype('int16'), [9, 2, 7]), )
bop_8127 = relay.equal(uop_8099.astype('bool'), relay.reshape(var_8098.astype('bool'), relay.shape_of(uop_8099))) # shape=(4, 5, 12)
output = relay.Tuple([call_8105,const_8106,bop_8127,])
output2 = relay.Tuple([call_8107,const_8106,bop_8127,])
func_8137 = relay.Function([var_8098,], output)
mod['func_8137'] = func_8137
mod = relay.transform.InferType()(mod)
mutated_mod['func_8137'] = func_8137
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8138 = relay.var("var_8138", dtype = "float32", shape = (4, 5, 12))#candidate|8138|(4, 5, 12)|var|float32
func_8137_call = mutated_mod.get_global_var('func_8137')
call_8139 = func_8137_call(var_8138)
output = call_8139
func_8140 = relay.Function([var_8138], output)
mutated_mod['func_8140'] = func_8140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_8175 = relay.TupleGetItem(func_7735_call(), 0)
call_8176 = relay.TupleGetItem(func_7736_call(), 0)
func_3227_call = mod.get_global_var('func_3227')
func_3230_call = mutated_mod.get_global_var('func_3230')
const_8178 = relay.const([5.994001,9.718947,-1.955806,-6.072652,4.493224,-3.596475,-1.562734,2.998527,-8.591641,3.964690,8.730255,-8.954592,8.568485,7.127091,3.893131,-8.015198,0.553454,-2.165367,5.689550,0.182958,7.385673,-7.354727,-2.081369,4.712663,-4.768923,7.162089,-6.333752,-0.645350,-7.741327,-7.241138,-7.113075,-2.158970,-4.707515,9.766895,5.980722,-2.015837,1.724583,1.121624,-1.462805,-6.737379,9.950540,-8.273513,-7.550490,-9.163481,6.433286,-0.547104,3.927835,8.389947,-2.678343,2.161926,8.516810,-5.158395,-4.318850,-5.069805,-8.910700,3.349694,-6.927552,3.217652,3.467607,5.841582], dtype = "float32")#candidate|8178|(60,)|const|float32
call_8177 = relay.TupleGetItem(func_3227_call(relay.reshape(const_8178.astype('float32'), [6, 2, 5])), 0)
call_8179 = relay.TupleGetItem(func_3230_call(relay.reshape(const_8178.astype('float32'), [6, 2, 5])), 0)
output = relay.Tuple([call_8175,call_8177,const_8178,])
output2 = relay.Tuple([call_8176,call_8179,const_8178,])
func_8190 = relay.Function([], output)
mod['func_8190'] = func_8190
mod = relay.transform.InferType()(mod)
output = func_8190()
func_8191 = relay.Function([], output)
mutated_mod['func_8191'] = func_8191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_8194 = relay.TupleGetItem(func_7735_call(), 0)
call_8195 = relay.TupleGetItem(func_7736_call(), 0)
output = relay.Tuple([call_8194,])
output2 = relay.Tuple([call_8195,])
func_8207 = relay.Function([], output)
mod['func_8207'] = func_8207
mod = relay.transform.InferType()(mod)
output = func_8207()
func_8208 = relay.Function([], output)
mutated_mod['func_8208'] = func_8208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8207_call = mod.get_global_var('func_8207')
func_8208_call = mutated_mod.get_global_var('func_8208')
call_8217 = relay.TupleGetItem(func_8207_call(), 0)
call_8218 = relay.TupleGetItem(func_8208_call(), 0)
output = relay.Tuple([call_8217,])
output2 = relay.Tuple([call_8218,])
func_8229 = relay.Function([], output)
mod['func_8229'] = func_8229
mod = relay.transform.InferType()(mod)
mutated_mod['func_8229'] = func_8229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8229_call = mutated_mod.get_global_var('func_8229')
call_8230 = func_8229_call()
output = call_8230
func_8231 = relay.Function([], output)
mutated_mod['func_8231'] = func_8231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_8271 = relay.TupleGetItem(func_7735_call(), 0)
call_8272 = relay.TupleGetItem(func_7736_call(), 0)
func_8137_call = mod.get_global_var('func_8137')
func_8140_call = mutated_mod.get_global_var('func_8140')
const_8285 = relay.const([1.229643,-3.773945,6.120567,-6.588800,3.481254,-3.060282,7.560609,4.987111,1.915216,3.167388,-0.817280,8.846986,2.420723,2.899309,-2.964522,0.126213,4.448852,-2.833365,-9.613558,-3.070564,-2.361992,8.206825,7.714679,1.618457,-2.976641,1.979060,9.868836,8.444940,1.737714,-5.121099,-9.165657,-9.826087,6.140491,-0.388705,8.753773,3.197925,0.489222,1.833724,6.869612,1.637890,2.304126,-1.361880,1.204143,7.275929,1.167853,4.144348,-0.682290,8.618356,-9.296123,8.206336,6.272573,6.888561,8.697919,3.999224,2.051959,-6.810375,-9.453072,-0.708544,-3.014777,-5.381547,4.380504,-5.360716,6.854867,5.987681,9.278199,6.207931,8.504816,-0.917081,-3.587868,5.835095,-4.293963,-4.253914,-5.499651,3.010916,9.106136,-6.901524,1.508662,-3.204310,5.518856,-4.691527,-1.559826,4.288321,-9.444437,5.790428,7.137081,1.793780,-2.341660,-1.164551,-9.619831,-4.910562,-6.171877,-8.522346,7.907776,-3.585572,-9.934435,6.068765,6.990594,-9.630322,-2.543551,-8.404465,-1.333182,-5.099576,7.858216,8.345123,-2.496540,7.406705,7.096999,-3.482987,-5.790155,2.157949,7.467231,-3.781495,2.660483,-1.411916,-0.244504,2.306799,-0.277407,3.600258,6.444647,4.625471,-9.988177,-8.318432,-5.166439,-4.130774,1.764751,6.198734,8.554177,2.335127,-0.351574,-3.892886,-5.995031,7.591929,5.323749,4.759640,-0.358606,-4.445159,8.403306,-9.435175,2.631792,0.880494,-0.175413,0.688789,-5.888059,-4.895273,8.301558,0.367345,-9.567679,-2.739817,3.075677,-1.987152,9.687564,6.978788,1.183960,-7.474531,-4.386655,-4.911718,8.768989,-2.182796,-2.410947,-1.782370,-5.602626,-7.571786,6.263025,-7.311195,-0.998538,-1.985468,-5.577798,-6.256924,8.960291,-3.042317,-3.614039,-7.636373,8.085137,9.867001,7.659722,5.454113,0.237621,-6.624124,-5.682272,-4.619141,-2.014296,-2.376276,-8.475680,-8.564042,-8.896437,9.785979,5.587316,-7.985106,3.846063,5.421059,0.582140,-6.057463,-0.093421,9.962463,5.482411,8.293906,-3.290247,-1.610904,-7.304416,-1.881921,-6.211826,-4.207788,2.171491,-3.317936,-8.958880,2.384725,-4.766369,3.648367,2.540120,2.764707,-6.800910,-7.800389,4.870035,4.386465,1.791465,-2.127789,8.675473,-4.339682,3.668480,0.066672,-7.455908,8.195074,-8.807749,0.492629,-0.388202,8.611859,1.736960,2.604936,-4.606423,-9.445353,8.274690,8.394375,3.440335,0.191427,-1.880954,6.877428,-9.203412,9.342162,9.445281,-7.129325], dtype = "float32")#candidate|8285|(240,)|const|float32
call_8284 = relay.TupleGetItem(func_8137_call(relay.reshape(const_8285.astype('float32'), [4, 5, 12])), 0)
call_8286 = relay.TupleGetItem(func_8140_call(relay.reshape(const_8285.astype('float32'), [4, 5, 12])), 0)
var_8301 = relay.var("var_8301", dtype = "int16", shape = (9, 2, 7))#candidate|8301|(9, 2, 7)|var|int16
bop_8302 = relay.right_shift(call_8284.astype('int32'), relay.reshape(var_8301.astype('int32'), relay.shape_of(call_8284))) # shape=(9, 2, 7)
bop_8305 = relay.right_shift(call_8286.astype('int32'), relay.reshape(var_8301.astype('int32'), relay.shape_of(call_8286))) # shape=(9, 2, 7)
func_6352_call = mod.get_global_var('func_6352')
func_6355_call = mutated_mod.get_global_var('func_6355')
var_8307 = relay.var("var_8307", dtype = "uint64", shape = (600,))#candidate|8307|(600,)|var|uint64
call_8306 = relay.TupleGetItem(func_6352_call(relay.reshape(var_8307.astype('uint64'), [10, 10, 6]), relay.reshape(var_8307.astype('uint64'), [10, 10, 6]), ), 0)
call_8308 = relay.TupleGetItem(func_6355_call(relay.reshape(var_8307.astype('uint64'), [10, 10, 6]), relay.reshape(var_8307.astype('uint64'), [10, 10, 6]), ), 0)
func_8229_call = mod.get_global_var('func_8229')
func_8231_call = mutated_mod.get_global_var('func_8231')
call_8309 = relay.TupleGetItem(func_8229_call(), 0)
call_8310 = relay.TupleGetItem(func_8231_call(), 0)
func_6352_call = mod.get_global_var('func_6352')
func_6355_call = mutated_mod.get_global_var('func_6355')
call_8333 = relay.TupleGetItem(func_6352_call(relay.reshape(call_8306.astype('uint64'), [10, 10, 6]), relay.reshape(call_8306.astype('uint64'), [10, 10, 6]), ), 0)
call_8334 = relay.TupleGetItem(func_6355_call(relay.reshape(call_8306.astype('uint64'), [10, 10, 6]), relay.reshape(call_8306.astype('uint64'), [10, 10, 6]), ), 0)
var_8336 = relay.var("var_8336", dtype = "float32", shape = (16, 11, 11))#candidate|8336|(16, 11, 11)|var|float32
bop_8337 = relay.maximum(call_8271.astype('uint16'), relay.reshape(var_8336.astype('uint16'), relay.shape_of(call_8271))) # shape=(16, 11, 11)
bop_8340 = relay.maximum(call_8272.astype('uint16'), relay.reshape(var_8336.astype('uint16'), relay.shape_of(call_8272))) # shape=(16, 11, 11)
var_8348 = relay.var("var_8348", dtype = "float32", shape = (16, 11, 11))#candidate|8348|(16, 11, 11)|var|float32
bop_8349 = relay.floor_divide(call_8309.astype('float32'), relay.reshape(var_8348.astype('float32'), relay.shape_of(call_8309))) # shape=(16, 11, 11)
bop_8352 = relay.floor_divide(call_8310.astype('float32'), relay.reshape(var_8348.astype('float32'), relay.shape_of(call_8310))) # shape=(16, 11, 11)
func_6352_call = mod.get_global_var('func_6352')
func_6355_call = mutated_mod.get_global_var('func_6355')
call_8368 = relay.TupleGetItem(func_6352_call(relay.reshape(call_8306.astype('uint64'), [10, 10, 6]), relay.reshape(call_8306.astype('uint64'), [10, 10, 6]), ), 0)
call_8369 = relay.TupleGetItem(func_6355_call(relay.reshape(call_8306.astype('uint64'), [10, 10, 6]), relay.reshape(call_8306.astype('uint64'), [10, 10, 6]), ), 0)
output = relay.Tuple([const_8285,bop_8302,call_8306,var_8307,call_8333,bop_8337,bop_8349,call_8368,])
output2 = relay.Tuple([const_8285,bop_8305,call_8308,var_8307,call_8334,bop_8340,bop_8352,call_8369,])
func_8371 = relay.Function([var_8301,var_8307,var_8336,var_8348,], output)
mod['func_8371'] = func_8371
mod = relay.transform.InferType()(mod)
mutated_mod['func_8371'] = func_8371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8371_call = mutated_mod.get_global_var('func_8371')
var_8373 = relay.var("var_8373", dtype = "int16", shape = (9, 2, 7))#candidate|8373|(9, 2, 7)|var|int16
var_8374 = relay.var("var_8374", dtype = "uint64", shape = (600,))#candidate|8374|(600,)|var|uint64
var_8375 = relay.var("var_8375", dtype = "float32", shape = (16, 11, 11))#candidate|8375|(16, 11, 11)|var|float32
var_8376 = relay.var("var_8376", dtype = "float32", shape = (16, 11, 11))#candidate|8376|(16, 11, 11)|var|float32
call_8372 = func_8371_call(var_8373,var_8374,var_8375,var_8376,)
output = call_8372
func_8377 = relay.Function([var_8373,var_8374,var_8375,var_8376,], output)
mutated_mod['func_8377'] = func_8377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8395 = relay.var("var_8395", dtype = "float64", shape = (8, 9, 14))#candidate|8395|(8, 9, 14)|var|float64
uop_8396 = relay.log(var_8395.astype('float64')) # shape=(8, 9, 14)
output = relay.Tuple([uop_8396,])
output2 = relay.Tuple([uop_8396,])
func_8400 = relay.Function([var_8395,], output)
mod['func_8400'] = func_8400
mod = relay.transform.InferType()(mod)
var_8401 = relay.var("var_8401", dtype = "float64", shape = (8, 9, 14))#candidate|8401|(8, 9, 14)|var|float64
output = func_8400(var_8401)
func_8402 = relay.Function([var_8401], output)
mutated_mod['func_8402'] = func_8402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8190_call = mod.get_global_var('func_8190')
func_8191_call = mutated_mod.get_global_var('func_8191')
call_8453 = relay.TupleGetItem(func_8190_call(), 1)
call_8454 = relay.TupleGetItem(func_8191_call(), 1)
func_3513_call = mod.get_global_var('func_3513')
func_3516_call = mutated_mod.get_global_var('func_3516')
const_8491 = relay.const([5,-7,3,-10,6,9,2,4,-9,2,4,3,-10,10,-3,3,10,5,-5,-10,-3,-2,6,-10,8,4,-4,3,-1,7,7,4,-2,-3,-5,6,4,5,-4,3,-9,-6,-8,-10,-2,-5,-8,8,-9,5,-4,4,-10,7,5,6,9,-8,2,5,4,-5,-8,-2,-6,1,-9,9,5,1,-6,-4,10,-1,8,8,-6,4,-8,3,3,-5,10,-2,-1,-4,2,1,8,6,-10,9,5,-1,10,-8,-9,-7,-8,3,2,6,5,-7,1,-10,6,-8,3,-8,5,-7,-9,-5,-3,-6,-8,-10,2,-6,1,-4,5,1,-3,-10,3,3,2,-10,-8,10,3,-7,-7,7,-8,6,5,9,6,-6,-1,-2,-9,-7,-3,1,7,10,-10,6,8,-1,-9,10,-2,-4,-9,5,3,5,1,1,-5,-3,-5,-4,3,5,6,7,4,-2,-2,-1,8,-8,-3,8,9,4,2,-7,3,-7,9,-6,7,-6,-4,-3,-4,-3,1,6,5,-4,-9,-10,-6,1,2,8,5,10,2,6,-4,4,2,-5,-3,-2,3,5,10,5,-5,-3,7,-2,5,-7,-6,-6,5,5,-2,10,-10,5,3,4,-2,-8,10,-2,-7,6,1,4,-3,4,8,3,1,10,9,-9,2,-2,7,-7,-4,-10,3,3,-2,3,2,-10,3,4,5,-3,-3,1,-10,6,3,8,-9,4,-7,3,-1,2,-2,-6,-2,-8,-5,-6,-9,-6,6,8,7,9,7,3,7,-3,-4,8,9,4,4,10,2,-4,2,-6,-4,-2,8,-2,-3,-4,6,-6,7,-1,-9,6,9,-10,4,7,-10,2,6,-1,-8,7,-6,-1,2,7,4,-3,-5,-1,8,8,9,-5,3,6,-2,7,8,2,1,3,5,6,8,9,-7,3,-9,3,-8,-5,-3,-8,-2,1,2,-7,-10,4,-2,4,-4,-9,7,6,2,4,8,8,-4,1,3,-10,-3,-10,1,-6,1,9,7,3,-9,-7,-1,-4,4,-1,-5,1,-7,-3,-7,5,-6,7,-10,-5,9,5,-6,5,6,8,-6,1,2,-6,-5,-8,-5,-4,-7,-5,2,-6,-1,-8,-6,-10,7,-10,7,9,-8,3,-2,-10,8,5,7,10,-4,-7,-7,7,-10,5,4,7,1,-5,9,-3,-3,8,-2,10,-7,6,-5,7,1,-1,6,-7,10,-3,1,7,-4,6,3,4,2,-3,-5,10,-6,1,9,-10,-9,-7,9,-4,8,1,-5,-1,-4,-2,9,-5,3,7,-3,2,-10,-4,-4,3,8,5,-8,-8,5,3,2,-8,-3,8,4,10,10,4,-2,-7,-9,-4,9,1,-4,7,-2,4,2,5,-3,-1,-9,-8,-1,3,-7,9,3,-9,4,-4,3,-4,-1,2,-4,-8,7,3,-8,8,-5,1,-6,-4,10,-7,-9,9,-1,-3,-5,7,-6,-2,9,2,-8,4,7,4,-8,-2,5,-7,4,1,-3,-3,-1,7,-6,5,-4,-8,9,-8,-5,5,2,4,4,-5,-6,-9,-5,8,-3,-3,-4,-8,5,1,8,9,8,6,-1,-2,-1,-3,-7,-6,-3,-9,-2,-1,5,-6,-8,3,-8,-1,-9,-5,3,-7,-8,1,1,-10,9,1,-3,-6,-2,8,-9,-9,1,-9,2,7,8,-3,7,4,-7,9,2,5,-6,3,2,-4,-6,1,10,7,-5,-8,6,-8,7,-6,-5,-2,-4,6,7,-10,6,10,-9,-3,9,-7,-5,9,4,-2,6,10,1,5,8,10,7,10,-6,2,-6,10,6,5,7,-1,-5,1,8,3,-1,2,2,-6,6,-4,7,-6,-5,2,-10,3,5,3,-9,-1,-1,8,4,-4,2,-3,-1,-1,-9,8,-8,-7,6,6,6,6,10,-1,-10,5,2,-8,-6,-1,3,-8,-2,-4,5,-6,7,8,-7,-10,-5,-8,2,2,-6,4,-2,-10,7,3,-6,-3,-2,-10,2,-6,6,4,2,7,8,-7,4,-5,5,-3,8,4,4,10,4,3,-2,8,-4,1,-6,2,-8,-3,4,2,9,-3,9,-1,1,-5,-2,6,9,7,8,7,6,-8,3,4,7,-7,3,9,3,-9,-8,10,-4,3,6,-7,10,-3,-5,-9,6,-9,3,5,4,10,8,-9,8,-4,4,7,7,10,-6,-6,-4,-3,5,-4,9,2,5,10,5,-8,-5,4,-4,6,1,6,9,4,-5,-6,2,4,9,-1,-7,-5,5,-8,4,-10,-8,-2,-6,-2,5,-5,-5,-6,-2,3,7,6,7,-10,-8,8,7,-4,6,-3,-7,8,7,8,-1,1,-1,10,10,9,-8,-5,-6,-7,-8,-3,-9,9,-5,7,10,-5,-6,-6,-3,-6,3,8,-4,-2,-5,9,6,-4,-5,-8,-1,-3,-6,-5,8,-9,-5,-10,4,-3,-9,-7,-8,-7,-1,7,7,-1,1,-1,-9,9,9,-5,3,4,-8,-8,-9,3,-9,-4,-2,-7,-2,3,-3,5,4,-7,-8,1,-1,4,4,-3,-8,7,-3,3,7,7,8,1,2,3,10,-5,4,2,9,-9,2,8,-4,-1,9,-8,9,-1,9,2,7,-10,-9,9,10,8,5,7,7,8,-7,-2,-10,-9,8,-8,-9,6,-3,-7,-4,-6,10,-8,-3,-4,-7,-7,1,3,5,6,2,-3,8,9,-4,-1,-10,3,5,4,-6,-8,6,10,-5,-7,-8,-3,2,-6,-8,-3,6,-2,5,-5,-8,2,4,-9,-8,-7,9,-1,-3,5,6,10,6,-2,-9,-6,10,2,9,5,8,-4,-4,-7,-3,-10,2,10,-3,1,-7,-10,-4,-1,6,10,7,-2,-10,10,1,4,-10,-1,5,5,-6,1,9,-3,-9,8,7,-9,-9,2,-6,1,-9,9,4,-7,10,10,-1,4,-6,-6,-4,-1,3,-1,8,-7,4,-2,-9,-9,-7,8,-2,8,5,-2,-8,-10,-6,9,4,-4,3,7,5,1,-6,1,-1,7,-2,5,-2,2,7,-6,9,-9,6,-4,-3,4,-6,-9,-4,3,5,-10,4,-7,-3,-9,-4,3,-6,10,4,1,1,-6,-6,2,10,8,-4,-4,1,7,4,5,1,-1,1,4,4,6,-3,-1,2,5,-6,1,2,3,2,-6,-5,-7,-1,-10,-2,-4,7,-8,-5,-5,1,8,-5,-1,-1,9,6,-4,-6,-1,-1,5,-10,-6,-5,-6,6,2,-7,8,2,3,3,6,-2,-10,-3,8,8,-8,5,-1,-10,-2], dtype = "uint64")#candidate|8491|(1248,)|const|uint64
var_8492 = relay.var("var_8492", dtype = "float64", shape = (8, 4))#candidate|8492|(8, 4)|var|float64
call_8490 = relay.TupleGetItem(func_3513_call(relay.reshape(const_8491.astype('uint64'), [1248,]), relay.reshape(var_8492.astype('float64'), [32,]), ), 5)
call_8493 = relay.TupleGetItem(func_3516_call(relay.reshape(const_8491.astype('uint64'), [1248,]), relay.reshape(var_8492.astype('float64'), [32,]), ), 5)
output = relay.Tuple([call_8453,call_8490,const_8491,var_8492,])
output2 = relay.Tuple([call_8454,call_8493,const_8491,var_8492,])
func_8497 = relay.Function([var_8492,], output)
mod['func_8497'] = func_8497
mod = relay.transform.InferType()(mod)
var_8498 = relay.var("var_8498", dtype = "float64", shape = (8, 4))#candidate|8498|(8, 4)|var|float64
output = func_8497(var_8498)
func_8499 = relay.Function([var_8498], output)
mutated_mod['func_8499'] = func_8499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8075_call = mod.get_global_var('func_8075')
func_8076_call = mutated_mod.get_global_var('func_8076')
call_8577 = func_8075_call()
call_8578 = func_8075_call()
func_714_call = mod.get_global_var('func_714')
func_718_call = mutated_mod.get_global_var('func_718')
var_8580 = relay.var("var_8580", dtype = "uint8", shape = (1320,))#candidate|8580|(1320,)|var|uint8
var_8581 = relay.var("var_8581", dtype = "float32", shape = (2080,))#candidate|8581|(2080,)|var|float32
call_8579 = relay.TupleGetItem(func_714_call(relay.reshape(var_8580.astype('uint8'), [10, 11, 12]), relay.reshape(var_8581.astype('float32'), [2080,]), ), 3)
call_8582 = relay.TupleGetItem(func_718_call(relay.reshape(var_8580.astype('uint8'), [10, 11, 12]), relay.reshape(var_8581.astype('float32'), [2080,]), ), 3)
uop_8608 = relay.log10(var_8581.astype('float32')) # shape=(2080,)
output = relay.Tuple([call_8577,call_8579,var_8580,uop_8608,])
output2 = relay.Tuple([call_8578,call_8582,var_8580,uop_8608,])
func_8611 = relay.Function([var_8580,var_8581,], output)
mod['func_8611'] = func_8611
mod = relay.transform.InferType()(mod)
mutated_mod['func_8611'] = func_8611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8611_call = mutated_mod.get_global_var('func_8611')
var_8613 = relay.var("var_8613", dtype = "uint8", shape = (1320,))#candidate|8613|(1320,)|var|uint8
var_8614 = relay.var("var_8614", dtype = "float32", shape = (2080,))#candidate|8614|(2080,)|var|float32
call_8612 = func_8611_call(var_8613,var_8614,)
output = call_8612
func_8615 = relay.Function([var_8613,var_8614,], output)
mutated_mod['func_8615'] = func_8615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8190_call = mod.get_global_var('func_8190')
func_8191_call = mutated_mod.get_global_var('func_8191')
call_8716 = relay.TupleGetItem(func_8190_call(), 1)
call_8717 = relay.TupleGetItem(func_8191_call(), 1)
uop_8719 = relay.sin(call_8716.astype('float64')) # shape=(6, 2, 5)
uop_8721 = relay.sin(call_8717.astype('float64')) # shape=(6, 2, 5)
output = relay.Tuple([uop_8719,])
output2 = relay.Tuple([uop_8721,])
func_8730 = relay.Function([], output)
mod['func_8730'] = func_8730
mod = relay.transform.InferType()(mod)
mutated_mod['func_8730'] = func_8730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8730_call = mutated_mod.get_global_var('func_8730')
call_8731 = func_8730_call()
output = call_8731
func_8732 = relay.Function([], output)
mutated_mod['func_8732'] = func_8732
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8742 = relay.var("var_8742", dtype = "float64", shape = (12, 2, 8))#candidate|8742|(12, 2, 8)|var|float64
var_8743 = relay.var("var_8743", dtype = "float64", shape = (12, 2, 8))#candidate|8743|(12, 2, 8)|var|float64
bop_8744 = relay.floor_divide(var_8742.astype('float64'), relay.reshape(var_8743.astype('float64'), relay.shape_of(var_8742))) # shape=(12, 2, 8)
func_3513_call = mod.get_global_var('func_3513')
func_3516_call = mutated_mod.get_global_var('func_3516')
const_8756 = relay.const([-3,-5,7,7,5,-5,3,-4,-5,1,10,5,-3,8,9,-5,2,-3,5,2,-7,-8,6,-5,9,-3,9,8,2,-10,-5,-5,6,7,8,-3,4,-5,5,3,9,-4,1,-2,6,-8,-6,-8,-3,-4,-4,-7,-8,9,4,9,6,-2,5,-4,6,4,8,-6,6,-3,-9,-9,5,-2,9,-4,5,4,2,3,-1,-1,8,10,-9,6,-3,7,-2,9,-2,-6,9,-7,9,10,-6,1,-10,9,5,-9,2,-8,-9,-8,8,-6,-6,-9,-4,9,9,5,2,-1,3,5,10,-10,10,7,-1,-6,-7,-4,-3,-2,-2,2,-3,10,6,1,-9,-4,8,7,-6,10,8,-6,-6,3,-5,3,9,4,-1,1,6,10,-7,-7,2,6,-9,2,1,5,-2,4,4,-9,2,8,5,4,-7,-5,-6,8,3,3,5,10,10,9,1,-10,7,-1,-6,-6,-3,9,-4,-7,8,1,-1,3,2,-5,9,5,1,-2,-10,9,9,-7,8,-10,-5,2,-1,-5,-8,-7,6,-4,-10,6,-5,7,5,-7,-7,9,-7,8,-7,-2,-3,-1,2,6,2,-4,-8,-10,-5,4,-3,4,6,-9,-4,10,-9,6,8,3,-5,6,-10,-4,5,-6,3,-10,1,3,-10,3,-4,1,1,2,3,-7,6,7,-1,2,3,2,3,1,8,3,1,6,1,5,-7,6,-6,-7,-8,-1,-2,6,8,-9,1,10,7,3,-3,-2,3,-6,-3,-7,3,-1,-1,-8,-6,5,8,-9,-1,-5,-1,5,-6,-6,-3,9,1,8,-9,-8,5,2,1,10,-2,-6,-3,10,9,8,8,-7,7,10,-2,-1,-4,-2,-2,6,-9,-10,3,-4,5,6,9,-2,-9,-4,-3,-9,10,1,-4,-10,1,-7,-8,-9,-3,6,-8,-10,-1,9,-3,-10,-10,7,-1,-8,4,7,8,-5,-2,-3,-7,7,-1,-3,-5,-7,5,-8,8,-9,1,4,-1,-10,-10,-3,-8,-7,7,3,-5,6,2,-8,-7,-5,-2,-10,8,8,-5,-6,-3,1,-5,1,-5,-1,10,9,4,-8,3,-1,-9,8,10,-8,9,3,6,-5,3,-7,-5,2,10,-8,-9,-3,-8,4,-9,10,-2,3,1,8,-3,-6,-3,8,10,8,4,10,4,-9,6,10,-4,-5,-10,8,-10,-2,7,-8,-7,-6,10,3,10,9,-5,4,-4,6,-2,9,-3,4,-2,-6,-1,-10,-8,4,-8,6,2,5,-10,9,-7,3,9,9,4,-10,8,3,-6,-6,10,8,-3,-7,3,-5,6,10,9,-9,-3,-5,1,-6,5,-1,-7,6,-1,-5,10,-7,-1,-2,-8,-3,-9,1,6,-7,3,-5,-7,2,-5,6,-8,10,2,10,-2,-1,1,1,3,-10,7,7,-8,4,8,7,-5,-5,-10,8,-8,-2,-3,6,-4,2,-2,5,-10,1,3,3,-6,8,3,-7,5,10,6,-3,10,4,-6,10,-10,-5,-3,-2,7,5,5,3,-5,9,-6,-4,2,8,6,6,-1,2,9,2,-5,-8,-3,2,1,-1,-8,5,2,-7,-1,6,-4,-5,2,7,-6,-8,5,7,3,-4,1,-10,1,1,2,2,-6,9,6,-5,-2,-1,5,2,6,-1,-3,1,-2,-4,2,10,-6,-7,-4,5,7,10,4,2,-8,-6,-5,5,-9,-10,6,8,9,-4,-10,-1,-3,-9,-3,-4,5,1,6,7,-4,6,-9,2,2,4,-5,8,-6,-6,1,9,9,-6,-6,10,-2,-2,3,-10,1,8,7,-3,-5,1,8,-2,1,-4,2,9,-2,-4,6,-1,-6,-3,5,5,5,-7,-7,4,8,-7,3,4,-6,2,2,8,-2,-2,-7,8,4,-6,6,-9,9,-7,-1,-8,1,10,3,3,7,2,-4,-5,-6,1,3,8,-7,4,6,-6,4,-10,2,-2,-1,-10,-3,-5,-7,10,-6,2,3,-1,10,8,3,-10,-3,3,-7,9,1,-10,8,-8,10,10,-6,4,10,9,-2,-10,5,9,8,3,-9,8,7,-4,4,10,-6,-7,8,10,6,5,3,3,-1,3,-3,9,-4,7,-8,-9,3,1,-1,1,8,9,9,5,10,2,-8,3,6,2,-7,8,-9,1,-9,7,10,1,2,1,-3,-7,-4,2,10,-3,7,7,2,5,-10,-9,10,10,-5,6,-4,8,3,9,4,-10,-5,4,-5,-7,1,5,-5,5,-8,7,-6,-1,4,2,-3,-8,7,6,-1,7,8,-7,-9,-4,-5,-10,-7,-8,2,-9,-2,3,-9,3,1,-3,-4,-3,-3,1,-9,9,-3,-5,8,-1,-10,-2,-5,-8,5,-7,-4,-3,9,-6,-4,-4,-3,3,4,-4,10,5,10,-6,-7,-5,5,-1,-9,-5,-4,-9,2,10,8,2,1,5,-1,8,4,-10,-1,-7,7,-5,-3,-10,10,10,-6,-6,-8,-10,-4,6,4,-10,6,-9,-9,6,1,-6,-5,-9,-9,-10,7,-5,-8,10,-8,9,6,-8,2,-9,-9,-6,-3,7,-9,8,-7,-7,-5,-1,7,-6,-7,10,-8,6,5,-4,-4,-10,-10,-9,1,-3,2,7,5,-2,8,6,4,5,-2,8,10,1,4,6,-5,-10,-7,6,-2,4,2,-10,-2,6,4,1,9,3,-9,9,-9,1,-9,8,5,5,-2,6,10,9,5,5,2,-9,6,-5,8,1,-2,1,10,7,-1,-7,6,-2,-6,6,6,8,-5,8,-10,-3,9,2,-1,3,-3,-10,8,9,-10,3,10,7,8,-9,4,1,-7,5,1,8,10,-2,-2,4,5,8,-1,-3,8,-7,5,8,-2,-1,-10,-8,9,-9,-10,2,10,-5,5,-10,-1,9,-5,-9,1,2,9,4,-10,10,7,7,4,-8,9,3,-5,5,9,-8,6,-4,8,4,10,-7,-7,-4,-8,1,-2,-7,-7,10,-8,8,8,8,9,-5,-5,-4,9,-5,-10,-2,1,1,4,5,10,4,5,-4,-4,-1,-1,1,-5,-7,-3,7,-10,1,10,6,9,-5,-1,-1,10,-4,-9,1,3,8,8,-1,6,2,10,-3,7,-5,1,-3,-8,-9,4,-10,9,3,3,-8,8,4,-8,-6,7,3,-7,-8,-3,-3,-9,4,-1,9,-2,5,-7,-7,8,-1,-7,4,1,1,8,-1,-9,9,3,-7,5,5,1,-8,-5,3,-3,8,-8,8,-4,-3,5,6,9,2,-5,7,-9,4], dtype = "uint64")#candidate|8756|(1248,)|const|uint64
var_8757 = relay.var("var_8757", dtype = "float64", shape = (32,))#candidate|8757|(32,)|var|float64
call_8755 = relay.TupleGetItem(func_3513_call(relay.reshape(const_8756.astype('uint64'), [1248,]), relay.reshape(var_8757.astype('float64'), [32,]), ), 1)
call_8758 = relay.TupleGetItem(func_3516_call(relay.reshape(const_8756.astype('uint64'), [1248,]), relay.reshape(var_8757.astype('float64'), [32,]), ), 1)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_8775 = relay.TupleGetItem(func_7735_call(), 0)
call_8776 = relay.TupleGetItem(func_7736_call(), 0)
output = relay.Tuple([bop_8744,call_8755,const_8756,var_8757,call_8775,])
output2 = relay.Tuple([bop_8744,call_8758,const_8756,var_8757,call_8776,])
func_8784 = relay.Function([var_8742,var_8743,var_8757,], output)
mod['func_8784'] = func_8784
mod = relay.transform.InferType()(mod)
var_8785 = relay.var("var_8785", dtype = "float64", shape = (12, 2, 8))#candidate|8785|(12, 2, 8)|var|float64
var_8786 = relay.var("var_8786", dtype = "float64", shape = (12, 2, 8))#candidate|8786|(12, 2, 8)|var|float64
var_8787 = relay.var("var_8787", dtype = "float64", shape = (32,))#candidate|8787|(32,)|var|float64
output = func_8784(var_8785,var_8786,var_8787,)
func_8788 = relay.Function([var_8785,var_8786,var_8787,], output)
mutated_mod['func_8788'] = func_8788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8229_call = mod.get_global_var('func_8229')
func_8231_call = mutated_mod.get_global_var('func_8231')
call_8817 = relay.TupleGetItem(func_8229_call(), 0)
call_8818 = relay.TupleGetItem(func_8231_call(), 0)
output = call_8817
output2 = call_8818
func_8830 = relay.Function([], output)
mod['func_8830'] = func_8830
mod = relay.transform.InferType()(mod)
output = func_8830()
func_8831 = relay.Function([], output)
mutated_mod['func_8831'] = func_8831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8190_call = mod.get_global_var('func_8190')
func_8191_call = mutated_mod.get_global_var('func_8191')
call_8832 = relay.TupleGetItem(func_8190_call(), 0)
call_8833 = relay.TupleGetItem(func_8191_call(), 0)
func_8497_call = mod.get_global_var('func_8497')
func_8499_call = mutated_mod.get_global_var('func_8499')
var_8844 = relay.var("var_8844", dtype = "float64", shape = (4, 8))#candidate|8844|(4, 8)|var|float64
call_8843 = relay.TupleGetItem(func_8497_call(relay.reshape(var_8844.astype('float64'), [8, 4])), 2)
call_8845 = relay.TupleGetItem(func_8499_call(relay.reshape(var_8844.astype('float64'), [8, 4])), 2)
func_4004_call = mod.get_global_var('func_4004')
func_4008_call = mutated_mod.get_global_var('func_4008')
const_8853 = relay.const([6,-5,3,-5,8,-2,4,3,-4,4,-8,9,-1], dtype = "uint64")#candidate|8853|(13,)|const|uint64
call_8852 = relay.TupleGetItem(func_4004_call(relay.reshape(const_8853.astype('uint64'), [13, 1]), relay.reshape(const_8853.astype('uint64'), [13, 1]), ), 0)
call_8854 = relay.TupleGetItem(func_4008_call(relay.reshape(const_8853.astype('uint64'), [13, 1]), relay.reshape(const_8853.astype('uint64'), [13, 1]), ), 0)
func_8611_call = mod.get_global_var('func_8611')
func_8615_call = mutated_mod.get_global_var('func_8615')
const_8866 = relay.const([1,-5,-1,7,-10,-1,8,2,1,9,-8,-7,4,6,-3,7,2,-4,-10,10,-3,-6,-7,10,-2,6,-8,9,-2,-5,3,9,-3,-2,-2,-6,-3,8,9,-10,7,-5,6,-8,8,-3,5,-10,-7,-3,3,5,-2,-8,3,5,1,-4,3,-7,-5,-4,4,-1,6,-1,-5,-5,-9,7,-8,-1,-2,7,-9,8,5,-6,-10,2,-5,3,9,-7,2,10,6,-10,-8,-6,1,3,-10,7,-8,-5,9,-2,-7,-7,-3,-10,2,-9,-7,9,3,-6,-3,-2,-1,5,-5,10,-6,-3,-6,9,-5,8,5,1,-9,10,9,4,-1,2,6,1,7,-10,-9,2,-9,-7,10,-4,-5,1,-8,-6,4,6,7,1,-1,10,-1,-3,3,-7,-8,-1,7,10,9,-6,-3,-4,-2,-6,-7,5,7,2,-8,4,-10,-10,9,2,-6,-2,3,-9,10,-9,2,-8,-2,10,7,-7,-8,-4,8,6,6,-3,3,-3,-9,-3,6,9,-2,-9,2,-8,6,-9,9,10,-5,-6,7,5,-2,5,10,8,-5,-10,5,-9,-1,-5,6,-10,8,-1,-5,-3,3,-7,-3,4,1,5,6,-9,4,9,-9,5,5,6,-10,-5,6,9,-6,-7,9,-7,8,1,-1,-6,-1,10,6,-4,-5,-1,-4,2,3,10,-3,-8,2,7,-2,-6,5,-1,-3,7,-7,-1,-9,10,2,6,7,-10,-5,-2,1,2,-3,-5,9,4,-10,-6,8,1,-5,7,2,1,-4,4,3,1,10,-6,-10,4,7,-9,5,-7,10,4,-3,7,2,-5,7,4,-4,6,-1,3,2,3,5,-10,5,-7,1,-6,-5,-7,-8,2,1,5,-10,-10,-4,10,2,-4,-3,5,-5,6,-3,4,4,-5,-6,7,-1,-6,9,-4,-5,-7,-7,2,-5,-2,1,-2,-4,2,-7,5,5,3,-9,-4,-3,-5,-5,-4,5,-1,-4,3,-9,-7,3,6,-5,-1,-6,-9,8,-3,10,5,5,-4,-10,6,-2,-8,7,3,5,-6,-1,-1,-8,-3,-2,-4,6,-6,2,6,9,1,9,9,9,2,10,-10,10,7,-4,8,6,6,8,-4,-7,-4,-10,-10,-8,-1,-8,9,8,9,-4,4,3,-7,-4,-9,-7,-7,7,6,-2,6,-1,7,10,1,-2,-3,5,-7,3,9,-10,7,-6,5,-3,7,7,-3,-9,-8,-1,10,-10,-6,5,-5,4,4,-4,-9,1,10,1,2,10,-2,10,-7,-9,7,10,10,-1,-5,3,-3,1,2,-7,-3,4,-7,7,9,9,-1,8,-3,4,-6,-4,-3,2,-9,10,5,-7,-10,-6,-2,5,-6,-3,-3,-8,7,-8,9,6,9,7,-1,6,-1,-10,-9,-4,-9,-3,7,-1,-3,5,-1,7,-8,-3,1,10,-4,-2,-9,-8,-7,-3,2,1,7,7,-8,9,1,6,-3,-3,-1,10,5,-8,-10,-9,9,10,-5,-3,3,2,1,-7,6,-1,-7,5,-10,-4,-8,-7,-4,-10,-5,-3,-2,-2,3,-9,-9,6,-3,8,5,-8,-9,-9,-3,2,-1,-8,-10,-8,-2,-3,-9,-9,-9,-8,2,-7,-2,-2,5,-6,-8,7,-7,-4,4,-1,6,5,-10,-10,-10,3,-3,-10,-10,-5,1,10,-9,-8,-10,5,-3,-1,-7,5,-10,-1,5,3,8,-6,10,-6,8,3,4,-6,-10,10,-10,5,3,-2,9,-2,3,-5,-1,3,6,-9,-6,7,-4,5,2,-3,-8,-1,-10,4,-2,6,2,5,7,-10,9,-1,6,6,-6,3,3,2,9,-7,-7,-4,-4,8,-3,4,-6,4,1,-10,-8,-2,6,-4,-10,-6,4,7,-9,9,3,-3,-10,-3,-8,9,-5,-6,-5,-8,1,-3,3,1,6,3,5,10,-2,8,5,5,10,-3,-2,-9,4,-8,-3,9,10,9,-6,3,-2,-8,-10,-7,6,5,-10,3,-8,8,-1,-3,1,-8,-2,6,4,1,7,-6,9,-1,8,10,4,-7,7,5,1,6,4,9,6,-4,9,7,3,-6,3,-7,6,-1,-6,-2,2,2,9,-6,1,-7,-1,-10,-2,7,10,2,10,10,2,2,-9,-1,-6,-3,-8,7,5,-6,-4,4,-7,-2,2,2,4,-9,10,1,-7,-3,5,4,9,-8,-3,7,-9,-8,10,6,-3,7,2,-9,2,-4,2,-6,-10,-4,-7,4,9,-8,1,3,8,7,-9,1,-8,6,-4,1,-7,6,5,9,-3,2,-10,8,-6,1,3,7,-6,-3,7,4,-8,-7,2,6,-2,9,-5,1,-4,-9,4,-10,10,3,-7,1,-9,10,-4,-7,5,10,3,-1,4,3,7,2,-9,7,4,-3,8,-6,-10,-9,-9,4,10,8,-7,-6,6,-4,-5,-1,8,-5,7,-9,4,-1,8,-4,3,4,5,-8,10,-6,-10,-5,2,7,9,4,5,-8,-3,3,4,-9,9,-10,7,3,4,10,-6,-5,4,-10,-7,3,-3,-5,4,-8,9,-2,-5,-6,1,-6,2,3,1,8,-4,-5,7,-5,-5,-6,10,-3,-4,-5,6,3,-1,5,-2,9,3,-2,-5,5,-10,6,-10,-9,9,-1,-5,2,-3,-9,9,-10,3,5,10,10,3,-4,-7,9,-6,1,-7,9,-2,-4,8,7,9,-9,-4,-1,-9,1,-7,-1,1,4,9,-7,-2,3,-6,-1,-4,3,3,4,8,-7,-6,-8,2,-4,-7,-1,-3,-1,7,-3,2,9,-2,7,-10,7,-3,-2,8,6,-6,-6,-3,7,7,-1,8,6,2,-1,8,-8,-4,-7,-6,-10,10,-3,-1,3,2,10,-3,-1,-10,7,2,-10,-6,1,-10,4,6,-4,-8,8,-10,-2,-5,-10,-7,4,2,8,-8,2,9,-9,3,-4,10,-5,-8,-5,-1,-7,-2,10,4,-6,8,-4,3,-1,-5,-9,5,-7,-2,8,-7,-4,8,7,-3,-8,-8,-5,4,-7,-1,3,-2,-10,3,8,5,-1,5,6,-8,6,-7,-6,8,-1,10,6,-6,-6,6,-1,3,3,9,-5,-6,-2,3,5,1,-10,-1,3,-3,-6,-3,8,-8,-4,-2,3,-10,-8,-5,2,-8,7,9,7,-10,-10,10,9,-1,-5,1,-1,-3,4,4,3,2,-3,9,2,-3,-2,-4,-10,-5,-10,-3,9,-1,-3,3,-9,6,-6,2,-6,-2,-7,-3,-3,-4,-7,3,-2,-1,9,10,8,10,3,-2,6,-1,-2,1,-3,10,1,-5,8,-5,9,7,-3,1,-6,7,9,-6,-2,-8,-4,-4,2,6,-5,-10,-8,2,-1,-1,8,-10,8,9,5,-5,-8,3,-8,1,-10,8,6,-3,-2,6,2,6,4,-10,-5,-9,3,2,-1,-5,-3,-10,10,8,8,2,1,-8,5,5,2,-10,8,-8,-4,9,-3,-6,2,7], dtype = "uint8")#candidate|8866|(1320,)|const|uint8
const_8867 = relay.const([[-0.043320,-5.110609,5.377580,6.963271],[2.206812,3.822040,-4.324000,6.879520],[-4.684341,-2.002424,4.249731,1.005654],[7.274781,2.813011,7.528720,-5.223781],[0.247472,-6.132299,-5.246763,9.082360],[3.923593,-1.793828,-5.402446,-1.217887],[8.834534,8.758729,-7.256131,-0.431495],[3.556520,6.786553,6.839462,-7.857158],[1.010454,4.008506,6.553652,6.489222],[7.768486,-7.361630,6.932554,-7.855678],[6.556406,0.442802,-9.393346,-7.573514],[-8.166152,-4.984218,1.495541,-1.717820],[-2.774104,7.623149,-6.774772,-7.301730],[-5.222344,8.851502,5.485769,-4.301943],[6.385517,9.967640,7.637797,-4.126952],[1.105380,2.331720,0.943036,0.858140],[8.204021,8.482534,1.131492,0.643672],[-3.687815,-6.752203,-1.420635,9.905205],[-3.932573,-0.211587,-5.278195,2.322047],[7.118462,-3.229701,-3.420064,-6.312085],[-8.659472,3.248135,4.865690,9.460789],[-2.287121,-4.630133,5.658800,-7.248458],[-5.641147,2.472720,0.591404,-6.446194],[-0.622417,-9.777356,3.575779,-7.943257],[-0.253947,7.225488,1.471068,-9.461097],[-5.353685,-2.735413,-4.042369,-9.748607],[4.695427,2.063912,-5.314764,-4.536788],[-8.346105,-7.103283,4.778536,-4.825046],[-5.038994,-6.311367,-3.402137,3.635810],[1.283270,-3.912871,0.914879,-1.461121],[7.188123,7.443635,2.941546,-5.757630],[-1.391567,7.052684,1.762176,-2.604163],[-3.523266,3.215803,8.838560,1.619642],[0.362884,-8.904700,-8.156907,2.259706],[-6.455958,-6.707530,-8.982235,9.507501],[0.727082,8.660460,-7.734961,-6.210745],[-1.652944,-5.814787,2.015770,-6.667183],[7.050465,5.748247,9.422971,9.193762],[7.488245,6.096320,-2.923571,2.294493],[-1.275637,0.328190,-0.746058,4.616130],[8.674591,-8.486925,4.907286,9.360937],[1.404411,2.646913,-1.959078,-2.889783],[-7.906876,9.046231,-8.527158,-6.804355],[9.796854,-5.956527,9.141928,-1.079738],[9.983427,6.543469,2.061706,6.385092],[8.533027,5.102522,-7.793100,-2.134718],[-2.815359,8.153303,-3.598309,0.769905],[2.348329,8.623066,5.258966,-0.291212],[-6.375386,1.311449,-9.086838,-3.816697],[4.900953,0.247409,4.318863,-9.619788],[-8.548086,-7.879496,4.591452,-3.388366],[7.068133,-9.070268,-7.451123,9.179202],[-0.971899,-4.464605,-6.787463,4.455021],[8.528733,0.366955,-1.185853,-1.329553],[0.620793,4.752645,-9.735819,-4.107723],[8.290461,-0.227098,0.406966,-1.595056],[-3.970102,-3.815684,2.371247,6.137961],[7.539435,2.926171,-4.091493,-3.706804],[-6.952939,2.217057,0.361797,8.619831],[-7.712734,-0.166145,1.581619,6.888954],[-6.989191,-4.287143,4.731667,-7.329941],[-9.820072,-7.992827,3.482846,5.496727],[-9.431294,-7.493388,-6.442664,-6.183548],[0.961936,-7.093046,4.780373,-1.708422],[8.091939,7.721155,-5.089818,1.079452],[6.828725,-0.421786,-3.812577,8.529724],[-0.092929,2.120111,1.605800,5.423159],[-1.250791,1.446806,6.763106,7.224674],[5.750335,-1.914013,-6.045087,-3.061456],[2.512490,-2.068704,-7.842941,3.605272],[0.266203,2.083936,-6.354899,2.949130],[-7.507068,7.211331,0.766559,0.340567],[9.505261,-8.620896,1.817924,-1.250032],[2.564262,0.928157,-9.916304,-3.682347],[1.617002,-5.312415,-1.695855,-3.946595],[-7.867372,4.454020,2.435539,-5.425128],[-5.085785,-3.640524,-7.181841,-6.630228],[-2.486785,6.523598,-7.788617,-5.609413],[-5.844364,-3.875414,4.420929,5.849206],[-9.042234,1.527105,6.226824,-2.855443],[-5.526398,-1.692654,3.187468,9.294094],[-1.078364,-6.749113,-5.749673,-7.298187],[5.260230,-2.540660,9.390945,7.802892],[-7.476339,1.463031,-5.169065,1.391887],[4.694481,7.620592,-9.481901,-1.240131],[-4.513940,-7.398447,7.875783,8.834587],[3.083899,5.529012,2.363826,-6.698288],[3.390521,-6.513099,3.386207,0.011250],[8.810055,-9.599753,1.174115,-3.638691],[9.923886,-4.440099,2.172171,-6.251791],[0.477985,7.666044,-5.305264,-9.479643],[-0.967541,2.671079,-0.642124,-4.876787],[-7.675302,-6.135109,4.317255,5.428009],[0.110402,5.874320,4.659126,7.592913],[-6.319722,6.865933,-9.747780,-3.918331],[-1.165428,-8.210908,-4.796471,-4.237170],[7.699965,-8.343138,8.088696,-2.713187],[-7.899155,5.413767,2.752325,-1.480843],[-4.488071,-0.075545,-1.712607,7.800503],[-0.804826,6.800570,-2.991540,8.628810],[-6.878102,-5.594697,3.865648,-6.297290],[-3.125257,7.672137,-0.718911,4.379013],[-5.379171,5.324048,7.149733,1.801134],[0.898484,-8.813582,5.439731,2.538647],[-4.128955,2.582633,-0.185046,0.636937],[-6.247969,-4.047110,-5.028073,2.522750],[4.819897,2.887613,5.807637,7.933527],[-0.340415,-1.431663,2.024647,1.200487],[8.796122,-4.790597,7.533252,-5.925662],[-3.548514,-6.213514,7.817227,4.461939],[4.324800,7.155022,-0.320190,3.622119],[-3.107560,-9.040706,5.726833,0.592380],[-8.547025,7.769021,6.668552,1.701762],[-1.367136,4.027546,4.709213,2.105911],[7.159716,5.713215,5.384631,-1.273481],[-6.773856,0.012286,9.194048,-0.261384],[-9.799897,3.780994,-7.386141,-4.335295],[-8.109160,-9.714972,-4.544445,-0.790780],[-5.265919,1.424813,-0.149057,6.534673],[-5.718425,3.838793,-3.400500,-1.156722],[6.240376,-8.942838,-1.089504,-1.724787],[-6.816371,1.301018,-8.359743,9.945276],[4.280909,-0.226754,-6.830722,1.974165],[0.271401,-1.638631,-8.093060,-6.496440],[-6.856757,0.784919,5.545568,-0.012573],[-6.164043,2.792892,3.723626,7.064416],[7.020574,8.269060,-9.420477,3.792625],[0.458012,6.804488,-3.779778,0.851552],[-8.121638,8.919454,-0.167335,-6.320571],[9.986347,-2.517874,-6.233494,-5.747466],[2.069151,2.917817,-3.645002,5.882106],[4.272925,2.126466,3.780273,-4.979839],[-2.646733,3.363014,7.449293,3.045813],[5.285779,-3.507507,-2.443368,-2.546379],[-4.807234,9.372548,-1.719847,-8.416884],[2.287453,2.904697,-3.900898,-9.527096],[5.996001,2.982009,8.986105,-7.327694],[-6.995242,-2.089508,6.423413,5.877838],[9.855493,-7.476913,8.565437,0.870176],[-0.611326,5.710005,-1.540370,5.925868],[-4.638741,1.073682,-7.268900,-2.967794],[-3.785938,4.462255,1.181025,0.107792],[3.916560,-4.623297,-9.957958,8.251806],[-8.219533,0.814013,-8.434163,0.013839],[5.832814,9.368575,-9.403159,4.495395],[-6.020523,-8.873296,1.591664,-8.521547],[9.490428,7.333275,-0.070304,-9.194782],[-6.023998,-3.497255,8.738272,0.576235],[-5.514787,-6.075522,-1.192911,5.569372],[-1.474371,2.350034,1.633651,-5.095175],[-3.635481,-3.785217,-9.963619,-8.265106],[-2.779602,4.127168,-2.580455,-2.397020],[5.100875,5.301400,-4.590009,0.603534],[-6.299113,-3.117992,-7.866726,-0.306896],[4.118754,-7.805482,5.543477,-0.681507],[0.660636,0.532218,-9.672643,-9.782546],[-7.084583,0.147121,-8.412185,3.503843],[1.807980,-2.254336,-7.269585,7.218288],[9.590478,9.062990,-2.132463,-9.603417],[-8.745088,1.327386,5.623856,-0.764906],[5.756226,4.552637,-0.350492,-6.512894],[-0.656946,-1.301693,3.118012,-9.908587],[5.597048,2.797005,6.593774,7.842050],[-4.297535,-6.958938,-9.500916,3.079887],[8.580530,0.703182,-3.688442,2.400211],[-4.261498,2.843228,2.713391,-6.432393],[-8.834166,-3.502025,6.464893,3.431003],[-9.792347,0.187267,-5.489257,-3.934931],[6.023237,-9.712953,1.852708,7.268420],[6.246619,1.614707,-2.718357,7.731800],[-2.822131,1.951963,1.540559,5.098367],[-6.442000,-6.329235,4.338596,-7.411195],[-7.615045,-7.249080,3.200626,1.453671],[2.015187,9.558776,-3.490589,-4.614210],[0.039522,-3.416057,-1.845022,-9.782892],[-2.454071,2.296243,-2.395454,1.171470],[-2.917744,-1.815868,4.341923,-3.228785],[5.643128,-0.419780,-3.453332,-8.575458],[-7.742032,-0.859781,-7.219002,-2.818766],[9.997830,-0.963986,0.846602,-4.349185],[-1.260151,1.672829,-5.228925,-7.026364],[-3.040596,8.792926,2.018158,-0.855479],[-1.921416,-5.592195,7.928544,-7.659505],[-6.447132,-5.583105,-5.786261,-7.877409],[-0.153420,-2.944072,0.817918,-1.372171],[1.649042,1.283787,5.912937,5.024518],[-8.580662,-3.097767,-4.943919,2.899958],[1.973325,-5.778698,-4.363325,-7.406235],[6.696583,-5.824528,7.242386,-0.754147],[-9.178507,5.474882,3.982770,-2.426790],[-5.982335,5.280376,9.049370,-7.350681],[3.592552,-1.886505,4.761557,-0.476287],[4.538472,3.242678,3.279679,9.445744],[9.367449,8.607501,9.314990,6.549214],[-7.017122,-2.568183,8.948415,-5.817562],[-5.101767,-1.229532,-1.269833,-7.664395],[4.692547,-3.109342,0.334017,8.969585],[6.453139,4.315699,-3.934632,-1.635455],[9.550142,-1.541947,5.137448,1.155769],[0.621151,5.526062,-5.820111,8.094449],[-7.670298,-1.779047,7.196860,-1.327788],[-9.290850,-4.484302,-3.320647,3.411617],[4.420636,-7.527109,9.509693,-9.334519],[-4.076699,-8.055821,1.646742,-2.682131],[3.248077,4.317368,-7.408493,3.964513],[4.015442,5.885493,1.964758,-5.149013],[-8.112399,1.252299,-0.516127,-1.450729],[-7.151143,-8.132047,-3.096491,0.839914],[8.165132,7.872616,-7.171859,2.773581],[-3.693198,-9.570379,9.655296,-5.124583],[4.998984,4.437260,-0.539310,-3.208228],[-6.517537,-3.320714,-2.995408,0.510232],[7.781410,5.795061,8.018374,2.323327],[-1.588452,1.708295,-2.429237,7.206449],[-5.583066,-1.297017,0.400995,8.502491],[3.155691,-4.714300,0.739918,4.643398],[-7.377612,-7.602994,7.451576,5.986443],[4.813072,-7.257972,3.321545,-2.181095],[-9.251704,-8.361850,1.241947,-1.089928],[5.758336,-1.385089,-2.577748,2.306764],[0.843246,-9.261575,-6.422737,-0.958104],[8.063803,1.549526,-1.532397,-1.234861],[-6.633201,-8.171879,-3.451687,-3.021428],[-6.040886,-5.930096,8.838911,3.404363],[7.629628,7.164741,-0.841346,-8.504612],[-6.644789,-2.723964,6.708431,-9.895161],[1.326078,9.145896,4.416134,5.436925],[9.572743,-5.359742,-8.629301,8.498822],[8.672543,8.953036,-2.395188,2.008924],[5.272068,1.434189,-1.865148,4.348229],[5.409554,1.186782,-9.755064,-4.331380],[-5.509552,-8.671168,-6.660416,3.482464],[3.921218,0.707069,-4.755300,-3.199713],[-5.913926,-2.639111,3.527388,-4.697456],[-6.409269,3.253080,5.102495,-2.572562],[-2.602654,-3.339195,-5.169687,5.310532],[-5.132312,9.530610,6.383756,-6.034192],[-9.581114,0.619336,-5.927426,-8.617327],[8.606074,-7.555087,8.165608,1.629391],[3.340145,-5.089458,1.904660,0.742648],[0.565943,-2.436257,6.215948,-8.849196],[5.105545,6.871297,-6.430420,-6.169314],[-0.981796,-4.878597,-3.811556,4.138072],[3.842801,9.123111,4.895288,-3.245517],[-4.013373,-9.193460,9.250649,7.096376],[-7.618866,9.891436,-9.023288,-2.607829],[-0.534071,-0.329851,-6.567972,-3.633152],[2.470895,-8.596916,0.868699,3.142563],[9.631910,8.310301,0.926867,9.943848],[8.925298,-8.794805,0.094538,-3.736321],[9.313133,-9.543868,8.540448,9.126886],[-8.633167,4.948146,-0.096364,0.449026],[-0.400474,-6.445506,6.402087,5.639194],[-5.893961,-8.703102,0.081994,4.282407],[0.162041,-0.112549,2.609148,-9.054660],[-7.922181,2.482110,-9.885158,-9.902761],[8.593305,-2.480589,0.644240,5.374797],[7.800588,6.136810,2.886504,4.417567],[-0.057771,2.893306,9.219241,2.535147],[8.341060,-5.685410,-7.298889,0.681705],[-7.409789,-8.252578,7.550128,0.961561],[-4.032378,7.223535,-4.787809,-7.898286],[8.197223,-3.806279,9.714828,-1.350092],[-7.122952,5.031011,2.437857,-9.247384],[-6.036973,0.115480,-9.841544,0.403089],[6.241582,-5.760290,5.803686,-4.592467],[-5.952217,-7.582221,0.883839,2.347577],[4.918341,-8.445739,3.827083,-7.235620],[8.667368,1.541640,6.062250,-9.302913],[-4.865565,-9.019730,-1.469379,-1.559043],[8.016700,-3.009107,0.907782,-3.297217],[-7.633937,2.736172,4.594988,-6.031081],[-4.617143,-0.914448,-1.348702,-6.430752],[-2.629848,-6.740378,-3.120403,2.634835],[6.921488,-6.274834,1.862961,-4.655654],[2.739644,4.026750,1.920107,7.789457],[-7.315158,7.336502,4.766296,4.659811],[-5.458244,-1.705401,-9.888629,-9.020933],[9.982555,-0.357882,9.546045,5.887622],[-7.890083,6.243323,-0.066083,5.484494],[3.786837,1.595936,6.073082,-6.261249],[-0.606641,-9.643637,-9.057182,6.493563],[8.158200,0.966031,-3.339530,0.405120],[9.229019,-0.144939,7.769260,-0.615928],[2.324440,2.529371,-0.848779,-8.258244],[-6.729044,3.116334,-8.431620,6.136909],[-7.688366,-6.738843,3.239835,-6.836718],[4.411787,-1.211448,-9.945835,3.406019],[-9.404115,-7.658710,-1.758036,2.208210],[8.356504,3.040686,8.906554,9.360443],[0.558702,-3.588334,7.202822,-1.187368],[-0.664427,-8.760644,8.831041,-9.854939],[-6.921646,3.994369,3.121280,-9.051288],[1.885816,-2.408746,-1.169197,3.708643],[-8.619924,-1.746104,-9.863060,-2.288863],[8.267948,8.179868,-5.160077,-7.450824],[0.999591,6.926135,-1.720860,7.774674],[6.626678,6.040416,-8.817469,-1.341735],[-2.272353,-3.368659,6.323937,7.862108],[4.083737,8.654301,-2.855309,1.135405],[0.309674,2.318697,-1.984699,-2.090683],[-7.720264,9.499482,-3.716726,0.974159],[-6.078045,9.375681,-7.080750,-4.438866],[6.133233,5.568203,9.362813,0.222642],[8.792358,-4.020863,-7.087858,-2.818325],[-2.209070,4.626979,1.513589,-0.436481],[-6.567579,7.887340,-1.835550,6.119308],[6.922233,-3.056552,3.743440,-9.702602],[-1.835274,-6.073241,9.547775,8.271920],[-2.264573,-1.334606,-6.098141,7.355170],[-4.661155,0.327028,-5.273010,-7.597429],[-9.931775,-6.357219,8.881717,-4.390134],[9.943496,-7.526429,1.439170,1.835847],[-5.550788,8.343844,-3.300149,7.978806],[2.483340,3.435794,8.928610,-8.603522],[-4.622876,8.002336,0.198618,1.972567],[-2.512343,7.816174,-9.183709,1.373740],[-0.364523,6.670355,8.124382,9.943048],[4.500544,-0.942674,-2.065718,-5.018831],[7.235520,-6.943514,-2.094475,-0.518411],[9.527587,-2.115109,-8.947308,-3.944646],[2.537565,6.700961,7.106816,6.863157],[5.514340,7.843339,-3.443658,0.456085],[-2.401459,-8.286594,4.285296,1.750364],[-0.667066,-4.864852,-4.205271,0.145368],[-7.056980,-3.057862,7.200867,6.950217],[-0.796830,8.825791,-9.996421,-2.205942],[-7.914550,5.688809,1.417083,5.494028],[7.998637,-0.063131,-0.051554,8.524910],[-3.775715,-7.132952,0.168301,6.688945],[3.848176,9.088863,4.132206,-5.711139],[-1.226675,2.719186,-2.311687,-6.775944],[8.710209,0.689358,-6.090441,-0.820708],[8.677054,2.546713,-8.990923,-2.717170],[6.602640,-1.766528,6.031843,-0.842089],[-7.044965,-8.636719,-4.410520,-4.573354],[0.504426,-9.218645,-7.010894,7.471350],[1.581427,9.472847,2.402127,6.047772],[7.390081,5.046937,-9.243266,-6.041017],[4.607462,-6.812039,5.395907,9.586606],[-0.191798,3.383142,0.050427,-8.904725],[0.822575,-1.768419,3.961316,2.975836],[2.270768,-8.675197,-2.071171,2.037500],[3.586855,-6.229587,-5.169938,0.696522],[4.727562,-4.966265,2.393322,4.959875],[-9.146623,9.510804,-2.723505,-1.540534],[5.259944,9.552048,9.422298,-0.557927],[-7.961687,-0.274882,-9.357238,-6.471308],[-0.740547,-6.519456,3.081512,-3.344336],[-2.941272,-3.287834,-5.954312,-9.540492],[6.822805,4.678134,-6.258830,4.250950],[-7.309229,-9.376143,6.427854,-7.323096],[3.540291,-7.897411,5.422225,-0.911716],[-9.901759,-1.111052,7.484990,3.379541],[-5.362147,3.056876,-3.513450,-9.191208],[-6.844645,3.044856,1.734490,1.742680],[1.622023,5.876081,-4.576680,-7.949446],[-3.001688,6.030529,7.457803,-9.007353],[-8.254058,8.943281,-6.038141,2.556229],[-4.600811,2.114807,2.885518,-9.704106],[-5.531372,0.953997,6.166485,5.137683],[-3.192845,7.119182,4.931125,1.591869],[3.336920,-3.199380,-5.490766,1.579543],[8.039925,-4.411219,5.485675,6.557742],[4.791670,3.540720,-4.958719,-0.225077],[7.462639,-0.286850,-3.706033,-2.448501],[-3.880884,5.068674,4.046565,2.493601],[4.151031,9.355468,-9.279541,-2.347071],[1.113550,-6.210267,8.060779,-1.778990],[-2.290456,1.629602,-5.040969,6.145295],[7.606654,-8.722459,4.151538,1.384771],[2.726704,9.884394,9.366230,1.033269],[6.102812,-0.693226,6.775819,-8.441274],[0.215284,-3.769022,6.332793,3.795766],[-9.769389,2.990143,6.828195,9.865593],[9.087620,7.489419,-6.537387,7.604865],[-2.085320,-7.962787,-2.818359,-3.926849],[7.500726,-2.805526,-3.475479,0.014425],[4.395521,-8.773589,0.103177,8.114746],[-4.497693,4.230234,-4.072177,4.654530],[-5.225073,-7.660083,-8.181346,-0.327533],[5.389508,-0.003293,-0.207762,-5.951290],[9.728323,4.339048,-8.998287,4.061078],[7.848596,-8.231639,-5.829277,-5.881681],[4.106010,2.416194,7.803921,4.796995],[-9.495188,-5.357433,8.311228,-2.697056],[7.231435,1.635251,6.234420,1.267238],[6.816235,-5.417883,3.661959,-3.162730],[5.590446,-8.206028,-4.540215,0.178532],[7.980607,3.157406,-0.549123,8.419977],[8.618717,-6.882302,-7.081378,0.506087],[4.930147,8.678847,8.920716,5.951636],[7.096558,3.390065,-8.519668,1.697871],[4.127945,-7.230390,-6.183473,8.534999],[2.466823,-5.552919,4.512210,7.853317],[2.704151,8.177262,4.585770,8.286486],[-1.154771,-0.277789,5.356482,3.175912],[-0.329624,2.605922,6.599535,0.876244],[-1.131891,-0.882143,8.202394,-9.212021],[-8.427725,9.334781,-1.354319,5.326234],[-9.373132,1.085345,5.285844,-3.567487],[9.186557,-1.364253,-0.408697,7.479827],[-7.082444,4.483408,6.566069,-8.603433],[4.946739,6.831294,0.484459,5.138423],[-4.921071,0.484887,3.921461,-4.926137],[6.564379,7.902233,-2.779773,-0.763975],[6.412920,-4.805807,9.248967,-2.954527],[3.473087,4.252565,-3.722483,-0.207036],[4.193578,-2.799816,9.077362,0.552099],[-4.861270,-0.090436,1.277388,3.760187],[-2.128938,-3.403312,-0.087893,1.592351],[-6.133306,-7.093551,9.662385,-7.715548],[4.255246,9.324713,7.674225,3.534158],[1.832672,-1.003340,2.701724,5.022407],[2.555022,7.266610,9.676740,2.825396],[6.990699,-0.505383,-0.780497,-2.602418],[-6.627840,-7.582132,-8.331769,0.515756],[-5.792290,9.576052,7.974327,6.700366],[-6.582625,-4.029200,5.783087,5.084088],[-2.867649,5.629368,-5.849700,-4.055205],[9.332647,-9.784380,-2.176428,-5.667513],[5.642375,-0.531967,-5.437292,-7.788316],[5.313716,-7.152743,-4.867973,9.184499],[-7.005878,-4.786134,-7.800784,2.517848],[8.543727,-2.802530,0.462030,-9.607079],[-4.743607,1.555584,1.245212,5.254561],[-0.410920,4.385500,6.383123,8.570107],[-2.296702,6.708182,-2.518992,-1.059230],[-6.731836,-9.773832,4.407623,6.063763],[0.582021,4.492109,-6.359388,6.664579],[-3.446140,0.404980,-3.481933,6.883805],[-7.457779,5.664747,6.198318,5.486855],[-0.996241,6.110790,-2.876346,7.135033],[5.510385,-8.333922,3.008379,3.729891],[0.142370,-9.002603,5.950293,-9.211391],[-2.462982,0.585318,0.621501,6.856071],[-4.941531,-5.487011,2.927132,-7.815714],[-4.023794,-4.985684,4.872451,9.157567],[5.772697,-2.616609,-3.265625,-3.599297],[-4.886995,-7.220378,-4.975033,-5.491538],[4.934603,-6.011315,-2.216995,6.958777],[4.987543,3.118386,9.672737,7.637654],[-5.146065,-6.977152,-7.415741,9.704627],[-1.692119,2.372173,4.969845,8.433563],[-0.389536,-0.396658,-6.181913,8.688867],[7.765706,-2.148782,1.452441,7.575555],[7.699587,-4.649802,8.732459,9.037741],[-8.390011,-6.877399,-8.162731,-1.068940],[4.428150,6.693570,-1.302876,-0.341536],[3.176836,1.128595,-8.712025,-2.914955],[-5.430026,-5.407975,-6.068729,1.569960],[-9.258411,0.987162,1.331352,4.883258],[-2.052556,-1.610242,4.756004,-5.524049],[-2.548075,9.203305,9.301663,-9.853847],[2.573627,7.974778,-7.820233,-0.796809],[-0.185323,4.902798,8.598923,1.249074],[-8.523736,-7.278161,-4.631846,-5.962449],[-7.409184,9.046221,-9.279365,8.677272],[-8.880855,8.655274,1.691513,5.059876],[2.475110,8.741337,8.162280,-0.577637],[5.662000,4.765466,-2.434619,-7.808374],[-3.750885,-0.998178,2.750638,-7.484971],[-8.412326,0.069502,0.047027,0.372266],[0.555264,1.683118,0.486780,-1.880206],[-0.284805,-6.929257,-5.286192,-9.985452],[4.193187,2.162645,-0.938007,-4.338437],[6.437940,1.434282,3.962886,-9.163364],[9.198656,0.433374,8.151653,9.385332],[-7.937452,-8.581357,-6.614466,4.425840],[6.337947,9.824873,-1.733541,-5.955263],[3.793994,-3.429155,3.376609,7.323947],[-0.274529,6.290466,4.198258,5.863138],[1.640642,-8.591705,-4.943208,6.477442],[-0.523035,-5.163063,-0.945428,-3.831601],[-5.199041,-2.168633,6.419119,-1.025969],[8.343977,-0.931370,9.201172,-5.871244],[7.446083,-2.573852,-8.850617,-8.916401],[-8.692105,0.769877,0.026120,-1.387256],[-0.458548,7.484920,8.546205,6.625716],[-4.820530,7.291125,4.218939,-3.266019],[-8.002430,8.262595,-7.237533,1.313378],[-1.204174,7.719167,-3.201304,6.299363],[7.177430,3.877937,-5.694852,0.106867],[-0.714360,-9.130724,-7.278501,-6.265882],[-0.203809,4.605545,1.905212,2.872499],[1.497230,-7.931009,0.874176,-6.617195],[-3.626509,9.251112,-0.246739,1.180361],[3.222839,-9.047257,-9.914788,-3.050548],[-0.782964,7.695930,-8.836086,4.243775],[-2.687045,7.740333,8.553597,-3.017283],[1.432200,4.665235,-5.952296,-4.912405],[-4.777525,0.622282,-6.801865,0.801375],[7.876696,-1.656218,-8.961490,8.442950],[6.922359,-0.217977,-9.692415,0.448792],[-5.960208,1.534794,9.628909,-0.224048],[-7.133396,5.468938,8.744718,-7.840185],[9.891904,-6.735304,-2.132366,-7.354112],[-8.705484,0.838384,3.109275,9.327026],[0.828953,-4.195730,-6.677943,-5.861948],[-9.190984,6.706174,5.642053,-5.471810],[0.235994,-0.626598,-6.960028,1.652824],[2.832342,3.074864,6.338912,-7.706616],[5.099990,-6.647434,9.151628,0.795621],[-9.717294,8.684243,-7.860284,-2.124946],[-1.159803,3.231917,-4.761323,9.244939],[6.920024,-0.407172,0.254652,2.007876],[-2.253942,7.138100,4.352562,8.722702],[5.695338,9.954058,2.496018,2.610388],[-0.936692,-1.682456,-7.068620,-2.504566],[7.380426,-8.767679,4.320977,8.902024],[5.149437,6.927377,9.733427,-9.286659],[0.199800,-3.078835,-1.777193,-7.763529],[5.526067,1.096351,-1.304492,8.535789],[-5.718842,7.984113,-8.765950,6.496216],[7.290877,-7.632927,-1.613598,1.366875],[-3.959155,-1.091712,-0.834396,7.376303],[0.171452,9.397325,-2.427637,1.540600],[-9.268858,-9.589990,-3.615263,9.208513],[-6.451158,-2.423047,-9.477427,-5.703879],[-9.554431,4.126384,5.810481,-2.698531]], dtype = "float32")#candidate|8867|(520, 4)|const|float32
call_8865 = relay.TupleGetItem(func_8611_call(relay.reshape(const_8866.astype('uint8'), [1320,]), relay.reshape(const_8867.astype('float32'), [2080,]), ), 0)
call_8868 = relay.TupleGetItem(func_8615_call(relay.reshape(const_8866.astype('uint8'), [1320,]), relay.reshape(const_8867.astype('float32'), [2080,]), ), 0)
output = relay.Tuple([call_8832,call_8843,var_8844,call_8852,const_8853,call_8865,const_8866,const_8867,])
output2 = relay.Tuple([call_8833,call_8845,var_8844,call_8854,const_8853,call_8868,const_8866,const_8867,])
func_8874 = relay.Function([var_8844,], output)
mod['func_8874'] = func_8874
mod = relay.transform.InferType()(mod)
mutated_mod['func_8874'] = func_8874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8875 = relay.var("var_8875", dtype = "float64", shape = (4, 8))#candidate|8875|(4, 8)|var|float64
func_8874_call = mutated_mod.get_global_var('func_8874')
call_8876 = func_8874_call(var_8875)
output = call_8876
func_8877 = relay.Function([var_8875], output)
mutated_mod['func_8877'] = func_8877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8190_call = mod.get_global_var('func_8190')
func_8191_call = mutated_mod.get_global_var('func_8191')
call_8898 = relay.TupleGetItem(func_8190_call(), 2)
call_8899 = relay.TupleGetItem(func_8191_call(), 2)
func_8207_call = mod.get_global_var('func_8207')
func_8208_call = mutated_mod.get_global_var('func_8208')
call_8924 = relay.TupleGetItem(func_8207_call(), 0)
call_8925 = relay.TupleGetItem(func_8208_call(), 0)
output = relay.Tuple([call_8898,call_8924,])
output2 = relay.Tuple([call_8899,call_8925,])
func_8933 = relay.Function([], output)
mod['func_8933'] = func_8933
mod = relay.transform.InferType()(mod)
output = func_8933()
func_8934 = relay.Function([], output)
mutated_mod['func_8934'] = func_8934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8075_call = mod.get_global_var('func_8075')
func_8076_call = mutated_mod.get_global_var('func_8076')
call_8940 = func_8075_call()
call_8941 = func_8075_call()
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
const_8947 = relay.const([2,-7,7,-6,-5,5,6,-7,9,6,5,-2,-7,-3,-8,-6,8,-3,1,9,-4,-1,-4,-1,2,-2,9,6,-2,-1,-9,-3,10,1,-5,9,-9,-10,-9,-8,10,7,-6,7,4,-10,-7,-10,-9,10,3,3,-10,-5,-6,9,2,9,-1,-6,4,-7,-1,10,10,-5,-1,-7,3,-1,6,7,8,-6,2,-3,1,9,-1,-3,-9,5,7,1,5,-1,2,9,-3,8,-10,-6,-4,-5,4,-7,-6,-2,-4,5,7,-2,-3,10,7,-5,-10,8,-6,9,10,-2,8,-1,1,6,3,8,9,6,-7,-5,-10,2,-5,-5,-9,-3,-2,-1,-4,2,5,5,-9,9,2,4,-6,-7,7,8,-8,3,9,3,-3,1,5,9,7,-10,2,10,-10,9,-8,3,1,-5,2,-2,-3,10,-10,-3,-6,5,-9,-6,-3,-6,3,6,5,-4,9,1,-10,-1,-9,9,-9,5,-1,-7,-7,5,10,6,3,4,6,6,-6,8,3,-3,2,-10,-9,9,-8,6,6,-5,1,-2,7,-5,-7,8,-10,2,-9,7,7,-3,-2,5,10,8,-1,8,-10,-1,-6,9,-2,-8,-5,-10,-2,-9,10,4,-6,-3,5,-7,4,4,-8,6,7,-2,10,5,5,-8,-10,6,7,4,-1,-6,10,-7,-6,10,-8,6,-6,-3,6,5,6,-3,1,2,10,-8,-10,9,-7,-9,-1,4,5,8,9,-9,-5,7,-2,1,-8,2,-4,-4,-10,-8,8,-10,-9,4,2,-2,-6,6,-7,9,3,-3,-4,10,2,7,-9,-2,-7,-6,-10,7,-7,-3,9,-2,-5,1,-4,3,10,7,-7,8,3,-3,6,8,-5,10,3,6,6,7,-2,-7,8,-2,3,9,7,9,-1,7,-8,-10,8,8,7,6,-4,10,9,9,3,7,9,3,3,-8,6,1,-3,-8,4,10,10,-2,-3,10,8,-5,-3,8,8,-6,-1,-8,4,7,-1,6,6,-10,-8,2,-10,-2,7,9,-4,-10,2,3,4,-3,-4,6,-10,6,9,-3,-9,1,7,-1,-5,-7,-1,-2,-10,-9,8,4,-4,-6,-10,-3,8,-5,4,-5,1,7,-2,-4,-5,-7,-10,3,-3,8,-9,-4,-5,-9,9,9,8,9,-6,-4,-9,6,-4,-3,7,10,-4,-3,5,7,8,1,5,-7,6,2,4,5,6,-5,-1,10,-1,-2,7,-8,9,-2,-1,5,-2,-3,4,4,-5,-4,-4,-10,7,9,5,-10,9,9,3,-7,1,-1,7,-7,-4,9,-5,-3,2,8,-1,2,-2,-10,-6,-8,-7,2,-6,-6,-7,-8,-3,7,-3,3,-5,4,9,-10,2,-10,9,-3,-8,-5,2,-9,4,-10,-5,3,-9,7,2,3,-7,3,4,3,4,10,1,1,-9,2,-4,-2,-1,-3,8,7,8,3,5,-7,-4,-5,8,10,-6,1,-7,-7,4,1,5,-7,-7,6,-6,9,1,7,-9,-7,9,-7,3,-3,3,6,2,-2,4,9,2,-10,-3,4,-3,-8,-1,9,10,-8,7,-2,9,-10,-3,-3,-8,-10,1,2,7,6,-5,-1,-8,10,4,6,8,-8,-4,8,3,2,5,8,4,-9,1,-5,-8,-4,-9,-10,6,-9,-7,2,-8,6,8,5,-9,2,6,-9,-4,-9,-3,9,-6,-2,7,5,-8,-9,6,-10,-10,-5,2,1,6,9,10,1,-8,9,6,-3,8,3,-5,10,-7,-4,-10,-5,6,10,-3,3,3,-9,7,-3,3,10,-1,5,-7,5,3,-6,5,6,6,-1,3,-9,-1,7,10,-2,-8,-7,6,-4,3,8,7,-7,-5,-3,-8,9,5,-3,-3,-6,-4,8,4,-8,6,-6,-2,-8,-3,3,3,1,8,-5,-1,-4,3,-2,5,-5,-6,2,3,-4,10,8,-1,-5,4,-2,2,-9,-7,1,3,-1,-6,6,4,6,9,-1,-6,9,-6,-7,6,-3,-9,7,10,-10,2,6,5,-1,-7,-5,9,-2,-7,-5,-5,8,-3,-3,-4,9,-8,-3,6,-9,8,-7,8,-4,-8,-9,-7,4,-3,-7,9,-2,-1,-2,-1,-2,-5,-6,6,-9,8,7,7,9,8,5,-10,-4,2,-7,-9,1,-6,8,-6,-8,4,-2,-5,-1,5,-10,-6,7,4,-2,3,-4,10,-4,-8,-1,-8,-7,3,7,5,6,-6,9,7,1,-5,-10,9,-1,6,3,-4,6,8,7,3,-7,6,-6,-7,4,4,-7,8,1,-10,8,5,-3,-9,8,-4,8,-1,5,-3,-2,-1,-1,-8,4,9,4,-6,-6,-9,-5,-7,5,9,-8,6,-9,-8,7,3,4,1,-5,-6,4,-5,-8,-3,-2,10,-3,7,-3,-2,-1,-2,-8,-4,4,4,-5,6,-3,6,-1,3,-3,8,7,8,7,-4,7,-8,10,-8,10,8,-2,1,1,7,-6,1,5,1,3,6,5,-2,5,2,3,3,6,-1,7,4,3,7,7,1,-5,-2,3,7,-6,-7,1,-6,-1,-6,5,10,-5,7,4,4,8,-2,-1,-1,8,-6,6,-5,-1,5,-1,3,3,10,9,-9,-1,8,-9,-1,-4,5,-10,-9,3,6,-1,10,10,-3,5,8,2,9,2,8,8,-10,-6,-1,4,-3,-8,-1,4,-9,-8,6,-2,3,5,-2,7,-3,-2,1,2,3,6,10,9,-8,6,-1,9,2,7,8,7,-6,6,5,1,9,1,7,1,-9,9,7,3,-3,5,-4,-3,-1,10,-8,-3,8,10,-6,-1,8,-4,-10,-4,7,2,-4,-4,7,-3,6,-4,2,2,-5,-2,6,7,2,7,-3,-3,-8,-1,2,10,10,6,7,9,-2,-4,8,4,-3,1,2,2,-2,2,5,-6,5,-6,-10,4,-7,-2,-10,-4,5,-10,3,6,-2,-1,-10,3,-9,-8,5,2,-10,6,-1,4,8,-5,-5,6,9,6,6,-7,-6,5,8,-3,4,-10,-10,10,-10,10,-6,-3,-6,6,-6,-9,7,6,-3,-4,8,1,8,-5,6,4,-4,7,-5,1,4,-6,6,-6,10,-8,-4,6,10,-2,9,-6,-4,2,-4,3,-5,-10,-2,1,-6,10,-8,4,10,-4,-4,1,-3,-9,3,6,-10,10,3,-6,10,1,-4,6,4,2,-10,6,-3,-10,-7,-6,-3,1,-6,6,-4,-6,3,10,-1,5,-5,-5,-8,-7,-3,3,7,-1,2,-3,-4,5,-10,-5,9,-4,-1,-3,6,-3,10,3,2,4,-3,10,-3,-7,10,-6,9,3,9,-8,-3,3,9,-3,-2,-4,-4,-6,-1,-2,4,10,-7,5,9,2,6,-5,1,-5,7,-2,6,-7,-1,-8,6,8,2,-1,9,-1,9,10,-6,-7,-4,3,6,-7,-1,-2,2,10,5,3,5,9,-3,-5,1,3,8,-5,8,-3,-6,7,7,2,-9,8,-10,-9,5,4,-4,3,-5,-8,2,-3,8,-6,7,1,-4,3,5,9,-6,7,-1,3,9,-8,-7,-1,1,2,-7,6,-1,9,1,-7,2,8,-2,-9,6,-6,-8,-6,4,9,-10,-5,5,6,-4,6,6,-9,-7,-1,-6,4,4,5,9,-1,10,-9,-2,3,-9,-1,-3,3,-1,-10,3,-10,-5,5,8,2,-6,5,7,3,6,-1,8,-8,-10,5,4,10,-10,-5,5,-10,-8,8,-2,-3,8,-1,2,5,-10,5,6,5,-2,-6,-8,7,-1,3,-5,6,-4,10,-6,8,-5,-2,-10,-9,-7,-9,-3,-1,3,-10,4,-4,4,-2,10,8,3,-6,-7,5,-2,-9,5,9,-7,6,8,-10,3,3,-4,-1,-1,9,-4,3,3,8,5,-3,8,-4,9,-9,5,-8,-4,-5,-5,-4,3,4,-1,-3,10,9,-7,-6,-6,-1,-6,-2,-7,5,5,3,-7,3,9,-2,-2,-9,-3,-5,8,2,4,-4,2,5,1,5,-2,5,2,10,-10,1,6,2,2,9,9,7,5,9,9,-5,2,-2,-7,8,-5,-1,-7,-4,1,4,-7,1,4,-9,6,4,3,-2,-2,10,-1,8,-5,6,-6,-6,-3,6,-9,-8,8,-4,-2,3,-9,1,3,-10,2,6,6,10,9,5,-2,4,9,-2,4,-4,6,5,-5,-10,10,-6,8,-8,-1,-4,7,4,3,6,-1,4,-8,-9,-5,1,-4,4,2,-8,6,-5,-7,-1,-4,2,7,-3,5,9,2,7,-6,8,2,10,-8,-1,3,9,-8,5,7,2,9,-3,-1,6,1,3,2,1,8,8,5,1,8,-3,-3,8,6,4,2,-5,6,8,1,1,-3,-3,4,-4,-1,9,1,7,-9,-5,2,3,7,-9,3,8,-9,-4,6,-7,-4,10,-2,-1,1,-1,7,3,7,4,2,-4,2,3,-8,4,7,-5,4,-9,5,8,-5,-6,10,10,2,2,6,4,8,-3,-6,3,8,5,-3,3,-3,-10,-1,-7,-8,8,4,7,-4,6,-1,-1,10,-2,10,-3,-6,-6,-7,1,1,9,-5,-9,7,10,4,-8,-9,1,6,2,9,3,2,1,-5,-3,7,1,7,1,-3,10,-9,-3,5,9,5,9,-7,-3,1,3,7,-1,5,8,2,2,-10,-6,-10,8,8,3,10,-8,-1,8,-6,4,2,3,-1,3,2,6,-8,-9,2,2,9,4,4,8,10,5,-4,-5,-3,-6,-10,7,7,-4,8,-10,9,-7,-5,-3,6,8,-6,7,-3,-4,-3,3,-7,-8,5,3,3,7,4,-6,9,2,-9,5,-2,-7,2,-7,-6,-5,5,5,8,8,1,6,-8,-3,7,-8,-9,-4,-2,-9,5,9,3,-10,3,5,-1,-4,-9,-7,7,3,-10,-6,-9,-3,8,-4,6,-2,-3,-5,-7,-5,-5,3,10,7,-5,4,-7,-8,-9,-8,8,3,6,-8,-6,1,7,-5,-8,-5,-5,-6,-6,-9,-9,-9,6,8,2,9,9,1,-2,1,9,4,6,8,6,-6,-4,-2,9,-6,-4,-8,3,-6,-6,-6,4,-10,-1,2,-8,2,3,4,-4,4,-5,8,4,4,3,-6,9,-7,4,8,8,-6,6,7,-10,7,-3,-5,10,-6,9,-10,-8,9,-6,6,8,9,1,5,4,9,6,-4,-5,-1,-10,3,8,2,8,2,-9,4,-4,3,9,-7,8,-3,-2,5,5,-10,9,-9,-9,5,-1,-9,-7,4,4,3,5,-5,10,8,8,-10,-1,6,-9,9,-1,4,-1,-4,-2,-7,2,-3,-3,-10,9,10,1,2,-8,-10,1,8,6,7,8,-6,-9,7,-10,-3,-8,-10,10,1,-5,8,8,-10,-8,2,-4,-8,-7,-2,-3,7,9,-4,-1,6,7,6,10,8,2,5,8,6,10,2,5,7,-9,3,-6,-10,5,-8,1,-4,-6,8,2,-9,3,8,-3,10,-7,-5,-1,6,10,-10,10,1,-3,-9,-4,7,-2,-3,-9,-8,-7,-9,-8,4,-9,-9,10,-4,-1,-8,-1,-2,10,-9,-10,5,-2,6,1,9,8,-10,10,-1,-7,5,6,3,3,-4,9,-10,6,-2,-10,9,-9,-4,3,9,6,9,3,7,4,-1,-5,-3,-9,-9,3,6,-9,10,-8,3,5,8,-4,4,-8,-10,-7,5,-7,6,-4,-4,5,-4,-3,8,9,-5,-1,-10,5,-2,-4,-2,-1,10,3,8,-8,-10,7,8,-2,-10,2,-9,-1,-1,8,-3,2,-6,-9,-10,5,7,-5,-2,8,9,-2,-8,1,-8,-1,-10,6,7,-8,-4,8,-9,-8,2,-10,7,1,-7,-3,1,-5,6,-7,-9,-1,-2,-4,-1,-9,-8,4,-3,1,7,-4,-7,-1,2,-7,5,-4,6,-7,10,-10,4,-6,-8,6,10,-4,-1,-3,5,4,7,-8,-5,9,-10,4,4,-3,-6,8,1,4,-8,-4,6,-4,3,-7,4,4,9,-10,-7,-5,-3,8,8,-7,8,1,9,-8,-5,3,-4,-5,-4,-4,-7,-3,-4,8,10,8,7,1,-3,8,-5,-9,-7,-10,9,-1,4,9,-2,8,2,-1,3,5,-2,-4,-4,-8,7,-2,-1,-3,5,-3,-8,-1,4,9,6,3,-7,-9,-2,-3,-4,-3,6,-1,5,9,4,-4,-4,8,-7,1,10,6,-6,10,4,6,9,-10,-1,10,9,-4,6,-4,-4,8,3,-7,3,-1,-1,6,4,6,6,-1,-9,9,-8,10,-8,-8,-4,-1,2,-5,-7,-5,-8,-6,-5,3,-1,-1,5,-1,-2,5,-3,5,8,-8,-1,-6,4,-5,-9,4,1,1,9,-1,2,-6,-2,-10,-9,5,-1,-10,5,5,2,-7,5,10,-1,-2,5,-8,9,7,-6,9,-7,4,4,7,-9,10,-2,5,-9,8,6,-3,4,6,-4,1,6,3,-7,6,5,-7,6,10,-2,9,6,5,-2,2,-8,7,-2,-3,-1,2,-7,-2,-4,8,3,-6,-9], dtype = "int32")#candidate|8947|(2496,)|const|int32
call_8946 = relay.TupleGetItem(func_4365_call(relay.reshape(const_8947.astype('int32'), [16, 12, 13])), 0)
call_8948 = relay.TupleGetItem(func_4367_call(relay.reshape(const_8947.astype('int32'), [16, 12, 13])), 0)
output = relay.Tuple([call_8940,call_8946,const_8947,])
output2 = relay.Tuple([call_8941,call_8948,const_8947,])
func_8955 = relay.Function([], output)
mod['func_8955'] = func_8955
mod = relay.transform.InferType()(mod)
output = func_8955()
func_8956 = relay.Function([], output)
mutated_mod['func_8956'] = func_8956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8730_call = mod.get_global_var('func_8730')
func_8732_call = mutated_mod.get_global_var('func_8732')
call_9031 = relay.TupleGetItem(func_8730_call(), 0)
call_9032 = relay.TupleGetItem(func_8732_call(), 0)
var_9047 = relay.var("var_9047", dtype = "float64", shape = (6, 2, 5))#candidate|9047|(6, 2, 5)|var|float64
bop_9048 = relay.mod(call_9031.astype('float64'), relay.reshape(var_9047.astype('float64'), relay.shape_of(call_9031))) # shape=(6, 2, 5)
bop_9051 = relay.mod(call_9032.astype('float64'), relay.reshape(var_9047.astype('float64'), relay.shape_of(call_9032))) # shape=(6, 2, 5)
bop_9055 = relay.left_shift(call_9031.astype('int16'), relay.reshape(bop_9048.astype('int16'), relay.shape_of(call_9031))) # shape=(6, 2, 5)
bop_9058 = relay.left_shift(call_9032.astype('int16'), relay.reshape(bop_9051.astype('int16'), relay.shape_of(call_9032))) # shape=(6, 2, 5)
output = bop_9055
output2 = bop_9058
func_9080 = relay.Function([var_9047,], output)
mod['func_9080'] = func_9080
mod = relay.transform.InferType()(mod)
mutated_mod['func_9080'] = func_9080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9081 = relay.var("var_9081", dtype = "float64", shape = (6, 2, 5))#candidate|9081|(6, 2, 5)|var|float64
func_9080_call = mutated_mod.get_global_var('func_9080')
call_9082 = func_9080_call(var_9081)
output = call_9082
func_9083 = relay.Function([var_9081], output)
mutated_mod['func_9083'] = func_9083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8207_call = mod.get_global_var('func_8207')
func_8208_call = mutated_mod.get_global_var('func_8208')
call_9156 = relay.TupleGetItem(func_8207_call(), 0)
call_9157 = relay.TupleGetItem(func_8208_call(), 0)
output = call_9156
output2 = call_9157
func_9158 = relay.Function([], output)
mod['func_9158'] = func_9158
mod = relay.transform.InferType()(mod)
output = func_9158()
func_9159 = relay.Function([], output)
mutated_mod['func_9159'] = func_9159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8075_call = mod.get_global_var('func_8075')
func_8076_call = mutated_mod.get_global_var('func_8076')
call_9171 = func_8075_call()
call_9172 = func_8075_call()
output = relay.Tuple([call_9171,])
output2 = relay.Tuple([call_9172,])
func_9173 = relay.Function([], output)
mod['func_9173'] = func_9173
mod = relay.transform.InferType()(mod)
output = func_9173()
func_9174 = relay.Function([], output)
mutated_mod['func_9174'] = func_9174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9211 = relay.var("var_9211", dtype = "float64", shape = (2, 6, 3))#candidate|9211|(2, 6, 3)|var|float64
uop_9212 = relay.exp(var_9211.astype('float64')) # shape=(2, 6, 3)
bop_9221 = relay.minimum(var_9211.astype('int16'), relay.reshape(uop_9212.astype('int16'), relay.shape_of(var_9211))) # shape=(2, 6, 3)
bop_9229 = relay.greater_equal(uop_9212.astype('bool'), relay.reshape(var_9211.astype('bool'), relay.shape_of(uop_9212))) # shape=(2, 6, 3)
output = relay.Tuple([bop_9221,bop_9229,])
output2 = relay.Tuple([bop_9221,bop_9229,])
func_9245 = relay.Function([var_9211,], output)
mod['func_9245'] = func_9245
mod = relay.transform.InferType()(mod)
mutated_mod['func_9245'] = func_9245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9246 = relay.var("var_9246", dtype = "float64", shape = (2, 6, 3))#candidate|9246|(2, 6, 3)|var|float64
func_9245_call = mutated_mod.get_global_var('func_9245')
call_9247 = func_9245_call(var_9246)
output = call_9247
func_9248 = relay.Function([var_9246], output)
mutated_mod['func_9248'] = func_9248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8830_call = mod.get_global_var('func_8830')
func_8831_call = mutated_mod.get_global_var('func_8831')
call_9257 = func_8830_call()
call_9258 = func_8830_call()
var_9278 = relay.var("var_9278", dtype = "float32", shape = (16, 11, 11))#candidate|9278|(16, 11, 11)|var|float32
bop_9279 = relay.bitwise_xor(call_9257.astype('uint16'), relay.reshape(var_9278.astype('uint16'), relay.shape_of(call_9257))) # shape=(16, 11, 11)
bop_9282 = relay.bitwise_xor(call_9258.astype('uint16'), relay.reshape(var_9278.astype('uint16'), relay.shape_of(call_9258))) # shape=(16, 11, 11)
func_8371_call = mod.get_global_var('func_8371')
func_8377_call = mutated_mod.get_global_var('func_8377')
const_9284 = relay.const([1,-7,-6,8,-1,4,-5,-10,-8,-3,-9,4,-4,-2,-3,7,3,-7,-5,7,-5,1,-5,-7,1,-10,10,4,7,9,3,7,9,4,-8,-1,1,3,3,1,-9,-6,-4,-5,8,-2,9,6,-5,4,-1,-4,-9,10,-8,-5,1,6,-2,6,-4,-1,-10,-2,7,-8,-5,3,-1,3,6,-6,1,-10,-2,3,7,-10,-10,1,10,-8,-2,-8,-5,-2,-1,6,10,-5,4,-8,-3,-7,-1,-2,6,8,2,2,-7,8,5,-9,4,7,3,9,6,-1,-4,9,-3,-9,3,2,-10,-7,6,9,-2,-8,-4,1,2,-8], dtype = "int16")#candidate|9284|(126,)|const|int16
var_9285 = relay.var("var_9285", dtype = "uint64", shape = (600,))#candidate|9285|(600,)|var|uint64
call_9283 = relay.TupleGetItem(func_8371_call(relay.reshape(const_9284.astype('int16'), [9, 2, 7]), relay.reshape(var_9285.astype('uint64'), [600,]), relay.reshape(call_9257.astype('float32'), [16, 11, 11]), relay.reshape(var_9278.astype('float32'), [16, 11, 11]), ), 6)
call_9286 = relay.TupleGetItem(func_8377_call(relay.reshape(const_9284.astype('int16'), [9, 2, 7]), relay.reshape(var_9285.astype('uint64'), [600,]), relay.reshape(call_9257.astype('float32'), [16, 11, 11]), relay.reshape(var_9278.astype('float32'), [16, 11, 11]), ), 6)
func_5869_call = mod.get_global_var('func_5869')
func_5872_call = mutated_mod.get_global_var('func_5872')
var_9293 = relay.var("var_9293", dtype = "int64", shape = (72,))#candidate|9293|(72,)|var|int64
call_9292 = relay.TupleGetItem(func_5869_call(relay.reshape(var_9293.astype('int64'), [12, 6, 1])), 0)
call_9294 = relay.TupleGetItem(func_5872_call(relay.reshape(var_9293.astype('int64'), [12, 6, 1])), 0)
func_549_call = mod.get_global_var('func_549')
func_553_call = mutated_mod.get_global_var('func_553')
const_9305 = relay.const(4, dtype = "int16")#candidate|9305|()|const|int16
const_9306 = relay.const([-6.393604,8.455871,-4.431033,2.499254,-1.661022,-5.255527,2.886064,1.411251,-3.576758,1.131255,-8.678956,-0.984625,-5.438560,8.898438,5.518471,-1.614818,-9.031630,-6.159168,-3.853682,1.210973,8.945145,-3.247675,-2.426272,5.213715,-7.033758,1.006934,0.827794,2.918189,2.774954,7.063004,4.118688,-2.966844,-3.083984,6.632030,-7.399634,4.658348,-2.865584,-5.856780,-1.761749,-1.360469,-3.845743,5.848280,0.891100,6.783142,6.385033,3.675271,-0.369972,2.132812,9.364294,2.137048,7.785719,1.848455,-1.859305,1.497082,3.555243,7.976579,6.619240,-8.106992,2.050599,-1.548261,-6.030739,-9.786228,1.394951,4.793124,-4.661662,4.188085,-0.960808,9.318268,-9.057584,1.760955,-4.793112,-3.181651,1.071334,8.490388,-2.441988,4.541270,3.659706,-9.292756,4.070650,4.172015,-4.564140,-2.209296,4.474637,-9.582964,-2.128425,-3.282933,-7.719856,-2.851182,0.216441,9.653530,3.987514,-6.318926,-7.753645,-8.289985,9.488526,7.299583,-3.093572,-2.932451,9.396044,6.125589,-4.959926,2.030608,-4.014267,-3.168831,2.567157,-3.693963,-9.332554,9.610062,2.419723,4.510640,-6.971927,-3.763237,-2.307357,-9.079877,1.707858,6.176107,2.718078,2.778619,-8.829616,3.465014,0.773790,7.378573,9.290513,-9.382282,-4.667844,8.669125,-6.757894,2.311403,-6.121790,-3.473810,3.989250,4.516310,-1.850431,4.774028,-0.719238,-7.875661,-1.131193,5.713987,0.279011,-9.503146,0.956328,-0.347850,8.244704,-6.851205,9.083752,-9.216403,-7.193852,-8.469950,-3.936547,-4.332655,-6.243437,-1.020002,-5.894394,-6.359116,4.116514,2.629986,-1.483213,-7.470615,0.618372,7.338690], dtype = "float32")#candidate|9306|(160,)|const|float32
const_9307 = relay.const([1.565880,6.996705,2.316654,-8.382973,-9.154200,-5.258902,8.646482,-9.501776,1.204039,7.815689,3.870741,-4.035778,1.356899,-1.995535,0.743269,-7.863015,6.844662,-8.128294,9.974230,-9.773991,2.243134,-7.130423,-1.552959,0.495384,-4.449963,4.545965,-1.679301,-0.819394,-2.123721,-0.654663,5.660548,-9.877877,-7.948076,0.309903,-9.722406,-9.687452,0.646126,-9.023111,8.825188,5.038359,-9.543343,-9.961420,-1.513446,-8.411438,1.379152,-4.291426,-2.127767,8.503273,1.374461,-3.889769,-8.484305,4.490280,-4.170475,5.266223,4.088524,4.982807,-0.332274,-3.236279,7.971228,6.697637,-0.573623,0.539375,-1.746717,0.944452,3.114107,0.566712,-7.881410,8.377542,-9.739104,8.244201,-4.641892,-4.471450,-3.948926,0.196519,5.234646,-4.596977,5.608038,-5.984815,-1.046687,0.830471,-0.489497,7.783253,-3.475141,6.822858,-0.143808,-1.260413,6.956094,7.036583,-5.371849,7.427164,5.938168,8.056675,7.434634,-0.048229,8.935439,-4.857977,6.081440,3.431274,-1.851680,-8.133769,0.412151,2.692744,1.442474,-4.217122,-3.138906,-5.125299,4.199477,-4.849979,5.887547,-7.866207,-3.314821,-0.799263,-6.315624,5.036913,-4.471465,7.789703,5.045902,0.320767,1.506849,-2.987531,4.663303,2.947856,-1.140609,-5.816006,6.927622,-0.584421,6.910775,8.646904,-6.602872,-6.953537,-8.024787,-3.015251,1.594924,4.584032,5.287167,-4.530528,-7.190446,4.856310,4.570107,-3.366319,-0.675135,-3.860311,-5.385108,-4.580907,4.974871,0.090787,-9.227432,0.422592,0.188859,0.210513,-5.085178,-2.718957,9.246290,3.856851,0.511123,2.198126,-5.304457,9.236232,3.047761,-8.062315,-7.418924,8.621921,2.270953,-6.138730,2.502413,-9.642732,7.873173,-9.389380,-0.745459,5.936600,7.722635,-7.209888,8.341419,-6.404635,6.050980,6.536964,3.456021,-7.301125,0.575311,9.940598,-5.804400,-8.604228,-1.084667,6.561420,-0.744752,-3.515547,9.279413,3.996849,-5.910506,-3.444469,-1.538794,-0.569712,-6.004504,9.337102,2.552158,-3.781794,-4.614561,-0.211558,8.939562,6.620508,-9.428576,3.309404,-5.062100,-0.758554,0.518903,-8.585680,-5.246242,2.740135,-0.060164,-4.517532,9.104944,0.897663,4.923542,5.482025,3.610349,-9.041705,-2.163771,-5.104789,9.225698,-8.027520,3.799070,-3.025689,5.827338,-0.161363,-1.431587,8.370736,6.345202,9.123801,-6.925822,8.450409,-0.355899,-4.145999,0.008509,1.299312,6.228466,5.950920,0.653681,8.673195,3.026491,-8.038838,-3.607099,-5.435930,-7.148428,6.597997,-8.575803,6.821213,-7.590052,6.528626,-9.762678,-6.088873,-5.282934,-5.151985,-2.431732,-4.171941,2.050595,3.499697,5.934275,6.994363,-4.447222,-0.864117,1.673439,9.333360,7.540575,5.809559,4.088191,-2.606813,-4.903455,3.105708,-9.322977,-0.780191,-9.316939,0.720322,8.695691,-8.904638,7.064314,-3.974874,-4.847398,5.825825,7.669376,9.624732,-7.635521,-5.796163,-7.641319,8.497949,-1.011125,-3.656416,-6.080609,-7.910805,-2.292551,0.164122,2.215472,-3.108169,3.488575,-9.447399,-1.436271,2.959459,5.770573,3.915121,-6.260972,-8.304153,0.724737,2.856042,-9.219385,7.200206,-0.123896,9.746743,0.799160,7.277154,5.961831,1.090904,9.181740,-0.721666,-0.970481,-9.406125,9.772794,5.217368,1.889305,-6.016558,-6.092991,-8.179209,-7.904412,6.449169,5.068098,-3.817170,-0.173799,1.670631,-9.714329,-7.057809,8.810496,7.026055,8.733452,7.487479,-6.765796,-6.344912,-4.880970,3.085335,-0.467625,-0.138507,-8.368410,-1.103875,-4.168619,-6.729597,-3.811673,7.385235,-3.659527,-0.726016,-9.166194,-3.957140,4.526822,0.693757,-7.376401,-3.037237,9.228787,-3.686378,9.971220,-3.680375,-1.183877,-7.831130,3.664222,7.895377,7.137074,6.565815,4.912158,-2.551837,1.121323,-8.519530,-2.656308,-2.012678,4.074732,1.950721,-1.759013,-2.079026,0.843040,5.062292,5.360567,-5.371302,-4.781117,-5.964203,8.193856,-6.929180,-1.658331,-0.279983,0.784652,2.282891,-0.341510,6.028075,-3.811718,4.344473,-7.422250,5.759055,7.613407,-1.373522,4.241837,-5.119864,9.148845,9.305546,4.408279,1.971487,5.607933,-3.702566,1.899595,-0.060097,5.503223,6.605526,-0.785433,5.718273,-7.254540,4.483363,-7.500727,9.593807,-6.489490,-8.205934,-6.634654,-7.030341,-8.917869,8.097335,-4.000246,1.270201,-4.865410,8.606677,0.447221,-7.613847,7.502642,-5.352775,3.776339,5.465230,-2.035933,-2.151877,0.228766,-8.544492,3.852499,-0.965966,4.134443,1.894646,-4.399478,-7.669528,-3.108022,-5.773619,-6.530614,9.042607,-3.750750,0.848528,-1.013950,6.630966,-0.667151,0.357954,-0.896788,7.192238,-0.437354,5.508972,-9.525339,-7.264630,-5.839436,-0.665875,7.795669,5.851972,-5.507793,6.497435,-8.656197,4.796511,-6.196811,-2.468863,-2.682453,0.474063,-9.767299,8.044913,-7.826927,9.419904,-1.403443,-1.695722,-8.947252,1.497816,-6.230417,5.406677,-4.824889,-6.904493,-7.933033,4.170371,-3.923313,5.878525,9.923229,8.209702,-5.721721,-3.330747,-1.927499,4.637420,-1.364296,-1.827670,8.458815,6.991864,-3.936218,-4.260832,-5.537619,4.090616,-7.204156,-1.513989,7.233479,-9.610435,-8.683649,9.509829,3.167701,1.736287,9.824623,-8.832010,-5.929255,-2.024372,7.646297,5.125539,-8.970262,1.692709,6.377695,-9.139631,9.126155,-3.210219,-0.428389,9.398322,-1.078663,9.235106,-6.409892,-9.494925,-7.245869,3.162436,-8.907065,1.216397,8.358329,8.138909,-9.421817,5.552063,-7.381307,-9.251529,5.075286,-5.206579,-7.875019,-1.361485,-6.798871,6.749186,8.740484,-8.191701,0.756773,4.585763,-3.347341,0.215895,-6.493206,2.949873,8.440071,5.475717,5.736534,-5.388907,-3.435821,-3.995569,-3.897178,2.622942,-3.368352,6.305515,4.436689,-6.312181,8.199547,7.300982,-1.084041,0.279142,-6.644993,7.123170,-0.397331,3.606764,-9.189436,6.824975,-6.972020,-6.913635,1.269814,-1.094471,-2.988555,-7.237912,0.257290,-7.088137,-6.978301,9.491663,-8.205069,-7.229003,-9.600154,1.079592,2.189710,8.347613,7.882059,-3.804643,2.667366,-6.721782,6.952578,-7.091258,-7.414369,6.432306,-8.166325,5.281032,2.395685,3.905036,9.655602,-6.547125,-3.894873,-2.728133,0.116924,-9.814285,-4.027173,7.806371,1.793674,-9.508340,-9.512261,3.122230,-1.886224,7.378766,-2.115536,3.157987,-7.137608,0.798921,-5.171768,-3.332545,-3.779170,-0.365810,5.805160,6.596800,8.886371,-1.349206,5.221554,-2.206268,-3.582128,7.309107,5.457456,1.921066,-7.358028,-4.810611,-2.347015,-1.278815,5.241903,4.364048,-5.779941,0.053207,-2.905066,3.542073,6.748923,3.703868,-7.478716,6.136664,-5.503963,3.101486,4.497167,0.317651,-0.478598,-9.075495,-8.022960,4.772464,-4.294475,7.781668,-1.405204,-0.540666,-3.709527,-4.952889,-0.487185,-8.303345,-9.219925,0.435305,1.359039,7.747786,7.710269,3.930184,-5.064233,-1.178449,-7.050312,4.120263,1.166041,-6.269332,-0.013524,-2.278889,-2.430050,8.394466,-7.197499,-8.009217,4.251224,3.373014,-4.869877,-1.109228,8.108321,6.678874,-8.023146,8.766021,2.411276,-4.936922,-6.868609,-7.309113,0.085409,3.814651,0.402751,-2.048941,1.030400,6.238999,-5.967144,-5.081085,-3.401845,4.043816,8.294539,-8.090165,9.369895,-0.860656,4.250813,-9.143493,-2.410785,-8.430302,-5.646991,-7.058651,5.671255,1.111260,9.781684,7.365609,9.329533,9.550743,5.944933,1.068587,-3.569048,-7.810006,1.325326,-4.306712,-0.925924,6.439508,9.814224,8.805678,2.061719,9.620170,-6.489125,-7.942205,9.472483,-5.871559,-7.740320,2.947857,8.419443,-8.618653,6.336185,-5.201061,-5.590776,-2.146292,4.476858,-8.731712,-1.264200,-1.113877,-6.342903,-3.399591,-2.993646,7.857486,8.848462,2.717916,-5.167813,4.585316,-5.888376,-2.484411,5.628918,0.213235,-8.053000,1.661399,7.500310,8.632808,-2.913970,3.542496,3.042682,2.249121,-3.525877,6.141245,0.445567,-3.178184,8.577892,-6.843342,1.905792,2.938977,4.806499,-6.347148,-9.211831,-2.201623,7.782379,4.050963,-3.777556,8.941569,7.510064,-5.277080,1.584672,0.044971,4.754898,0.240698,8.934708,-0.017592,7.184518,9.311229,-6.941657,5.370665,2.286944,-8.902980,9.848831,-0.591479,0.304109,1.695271,0.114282,9.844650,-8.245583,2.740482,0.484902,-1.172254,-0.969530,3.146464,-7.471849,3.664633,7.673948,4.323287,7.269639,-4.821320,-3.184897,-5.135903,-0.425389,-1.609068,-5.203760,-7.857054,4.612514,4.219013,-2.006520,1.822608,6.443599,-3.317478,-8.761568,8.467871,-6.593905,-8.871980,-2.246058,-2.235746,-3.646934,1.537086,5.101147,0.104014,2.590096,-2.002186,3.297375,-3.381818,-3.839353,3.569398,-1.595233,2.617787,-7.657072,-1.295002,-2.773684,7.342340,3.568937,4.432798,-3.227422,-8.443167,0.391019,6.097703,-2.692807,4.881500,6.303180,8.225268,-6.876001,-3.532040,9.279779,3.138737,2.430814,-9.314034,6.330345,7.424773,-6.773711,3.035728,5.231239,-5.181572,-8.468989,-1.823257,2.746121,-3.004777,-5.722781,-1.212115,0.081062,3.942703,4.816069,8.189232,-3.798006,-0.544824,-8.823688,-7.536593,3.168635,2.796804,8.102097,8.945137,-1.161359,-0.697304,-9.840416,-1.945217,-5.120399,-4.144957,5.816723,-9.183442,7.604936,0.546092,4.623141,6.548991,-0.317363,-5.747337,-9.038233,-2.111161,0.380658,-0.674679,-6.520677,4.403203,-6.992484,-2.002464,-9.191099,8.661308,0.059128,3.233440,3.836105,3.732924,-2.387441,8.448087,5.655439,9.844799,-3.716175,-3.197276,-1.879719,3.098354,-4.274157,-7.700891,-9.355536,-4.089504,-8.511940,-8.931924,-0.927096,-9.461485,-1.638485,8.223390,4.252649,-0.265517,-4.264188,-3.350172,6.052717,-2.613448,4.411629,-1.731638,-9.606814,-9.724081,-8.802808,-5.157458,-6.508688,2.844352,-4.773231,4.604950,8.829309,8.424377,-9.757017,-1.220959,5.849360,3.676499,-1.053262,2.688244,-1.614335,8.622974,-1.254124,7.999396,-5.684734,7.915867,-7.389180,7.289675,0.149226,0.529226,-1.681280,3.903551,-6.511904,8.162837,-6.196247,-2.224659,-6.412782,8.462864,4.509150,4.309358,-2.522761,3.120758,5.690347,-2.355570,8.569584,3.741401,-8.085514,-7.972208,6.893521,9.284249,-8.703152,7.906600,3.435330,3.728694,5.277129,6.480548,-3.663198,-1.582574,7.344389,-9.364924,4.210099,-0.447316,-9.668569,-0.348765,-9.486365,4.692804,5.204701,6.871167,3.982828,-1.268668,-8.824688,-8.082051,-1.209426,-4.907594,-9.418062,-7.300606,-8.818818,3.861804,4.864410,3.880236,1.538005,-0.808353,3.757715,7.117925,7.341278,0.723381,2.716154,-9.322882,1.376241,2.549001,1.320025,1.932258,1.816429,-6.253530,-7.412585,-3.440052,-1.283966,6.454417,6.498643,-1.607273,-5.872769,-6.343934,-6.754023,0.670607,4.802084,9.406194,-2.762083,1.887133,5.910886,8.077852,1.009010,2.515998,-4.904789,1.798422,5.578641,-2.453942,2.840424,-2.248414,4.433131,1.222613,-9.709783,1.862890,1.987600,-6.240018,-8.067261,0.151856,-6.109094,3.182969,1.890611,-3.283054,7.945977,-0.761380,2.898449,-9.012315,-0.981830,8.648828,-4.596480,2.821493,7.745963,-1.392045,2.567261,5.603827,-6.216159,9.359007,7.718918,-9.236105,-4.454091,-6.539248,1.664037,5.031881,-4.246596,2.167511,6.790094,8.641791,-0.957241,3.244222,4.242451,1.266073,6.569445,7.621887,-5.056171,4.085236,-5.998173,-9.498239,-6.220885,9.825945,2.938333,7.484004,3.503934,6.413110,-2.495162,-6.959884,-0.600703,7.042335,-4.377556,-2.146469,9.978237,8.449625,9.159518,8.818086,4.187131,7.442523,8.872039,-9.376278,9.776952,2.952046,-7.646366,4.040236,8.966021,-6.042646,1.958221,5.583423,5.461745,-8.542595,-1.020014,-2.081197,-9.814087,-7.699664,7.134954,-5.789299,6.639131,-4.685705,7.777621,-8.303509,2.619422,-4.631625,2.968551,7.815254,3.425692,-7.991755,1.293467,7.891036,-3.681564,-5.767222,-9.079621,-2.304248,-4.649613,5.471565,-7.639538,-4.001437,3.012623,-2.679423,-8.153032,1.967068,2.274136,-0.519584,-3.765665,-3.581315,1.008267,-6.189605,9.338708,3.838104,-2.035668,-6.675552,-3.506760,-4.624243,7.704750,6.333803,-4.875738,1.513337,-7.605761,-5.867614,-1.147240,5.233073,9.505996,4.324862,-5.501447,-0.893771,-5.801697,3.092996,-8.651722,-8.280916,-3.934510,1.225954,-6.809603,-5.470075,-5.494109,7.403838,4.819168,1.449488,2.652445,0.798523,2.040482,-8.001657,-4.968748,3.601625,0.483530,9.943305,8.659912,-0.041528,5.059935,-2.897120,5.345976,-2.408533,-1.811492,-8.799603,3.179631,3.317699,8.348472,-0.005168,1.643947,-2.862027,9.229609,-9.940755,2.304381,-4.405082,4.544747,-2.148793,-1.875722,2.881097,-2.061709,-9.019687,8.940136,3.329338,9.657230,6.487345,4.903661,5.437381,6.977762,4.691345,-7.684604,8.801572,-1.473162,5.012580,4.056605,4.520900,-0.590701,6.816997,5.277808,-4.257919,-5.696982,4.902475,-2.459758,-2.677843,-8.740830,-5.601222,3.560254,-1.383268,1.623866,-1.016922,-8.835415,6.396449,-6.768430,-5.140005,4.994343,-3.804669,-0.510320,3.417616,2.775411,-0.270827,6.320404,-7.430805,9.774886,-8.515452,-1.775740,2.747162,-3.572812,0.734138,1.445500,-5.448515,1.681873,-0.395334,-2.367053,-0.685859,7.719535,2.657823,3.956325,3.368450,-7.240669,7.457915,-3.821821,8.567211,8.406765,9.320945,-3.313776,1.611042,2.579551,-6.997842,4.398444,1.885171,3.266844,4.463543,-2.735343,7.174609,-8.783842,-1.035509,5.584588,0.666289,-8.339700,0.598028,-6.794595,-6.820598,-6.508425,3.093238,4.792278,-7.951347,0.986134,5.487710,-0.746126,-6.717075,-0.077842,-4.365738,-8.578773,-4.554177,-0.812160,-6.320024,0.687219,-8.239685,3.902090,3.815052,-2.660276,4.652178,-4.546183,-4.085873,-9.569227,2.378349,7.033756,-5.829978,-5.315609,-2.463141,8.695682,5.931457,-4.668059,-5.281549,-6.440328,-8.930558,-1.618995,-6.295881,5.295369,9.534370,-6.456663,-9.321252,-0.492888,2.386706,4.688287,-8.667751,-6.168718,1.349343,1.795316,-0.957148,-0.147222,7.703323,1.244507,1.428285,-1.897818,-0.317962,9.513905,-8.684834,2.630619,-0.688160,1.755317,8.133008,0.865735,-4.601016,1.556480,-6.006039,-5.475786,-8.221968,5.475348,-4.946324,-1.021526,-3.984793,6.540539,-2.229998,2.969447,9.317320,8.174546,-6.772819,-1.940531,4.144764,-6.389468,0.877798,3.104457,-8.250344,2.603831,-3.082728,1.793216,2.131179,0.301259,0.320462,3.754689,-9.027775,-2.373698,6.056541,1.105348,-4.391818,-3.924969,-2.080342,1.705937,-5.530709,4.447862,-6.749367,-6.985186,9.758865,7.309860,-3.439488,-8.826711,8.017410,9.325339,5.930952,-2.776809,-4.143310,3.006315,-2.918700,9.846893,5.095663,-1.292302,8.581305,6.116462,-2.395974,-7.789555,9.714382,5.794861,3.838567,1.595793,-7.259675,-5.074765,-6.671056,6.758689,-5.925036,-6.865004,-7.891742,0.843533,3.080801,-7.451635,-9.322097,-5.871957,7.591833,-1.505682,-1.379979,8.222090,6.288817,-9.165632,5.825633,1.561100,-1.643770,4.713662,-9.984528,9.479170,-4.069799,6.431967,-0.546121,-3.005418,-9.170035,-7.432013,3.244406,8.993672,4.792096,-1.697901,4.292151,-8.283298,2.664788,-5.468925,-8.451485,3.628747,-8.355820,6.713311,-3.780606,-8.053703,2.413020,-5.853659,7.123661,0.994115,5.372048,9.927525,7.026555,-6.871209,-5.328114,-0.195115,-5.531696,7.887221,3.362287,6.377194,-6.896707,-5.516807,-4.981612,-6.577562,-7.595305,-8.697558,-7.408177,-2.971515,4.132303,-8.731075,-2.434194,4.098720,7.729916,2.394609,1.147818,-4.380426,-9.327694,2.252097,6.924618,-6.764777,-5.699977,2.028591,6.143049,-5.247418,3.911734,-0.618223,-7.827506,-0.308717,-1.648492,-7.327620,3.900833,5.694972,8.922258,-4.780275,8.053682,-5.033960,-3.499955,-9.083698,7.481261,-8.346100,2.961197,-0.806817,-9.540588,1.911247,-9.857902,0.590816,4.076292,-1.447919,9.991363,3.155469,3.152624,-5.624066,-6.728518,3.628227,-0.537500,-7.105010,-6.222066,6.726955,6.772932,4.555809,-4.682283,6.797750,-6.510509,-5.238105,3.001604,-4.867235,0.332251,-0.849008,6.473132,0.623806,7.933479,5.884935,1.139911,1.191044,-1.272905,-8.790991,7.419135,-2.365184,2.799120,9.607197,-6.636820,-1.889088,3.762229,7.144541,-5.429177,-7.854876,-8.983303,-2.149571,-7.211318,3.432867,-2.399517,2.609645,2.490072,2.593248,-8.793093,4.092248,-0.645102,-6.870447,-1.619704,-7.972915,-0.068981,6.783575,4.390585,-1.575365,7.289262,-2.507704,-3.036765,4.169473,2.912039,-8.075588,5.833381,-6.402374,8.733905,0.442452,5.289063,9.227231,-0.017760,-1.356233,-9.730431,9.923434,-5.140362,2.328613,6.168676,0.843115,-0.619447,-5.844808,7.700743,6.876961,6.669373,9.794394,7.134619,2.843049,6.560087,9.682719,-6.433354,5.791206,-6.781204,2.371755,2.317999,-9.948854,9.126373,5.422720,2.840617,5.621486,-0.269290,7.934379,1.539397,4.402487,5.365999,-4.674152,-6.478989,-7.758049,3.202703,-6.467284,-3.428257,-7.712526,-2.725076,5.911696,-3.351126,-4.696312,8.098580,-8.928082,-6.089024,7.398012,-8.514040,-2.694673,7.440714,4.222877,-1.494601,8.219682,-2.893734,-2.189614,8.752217,9.760806,2.316878,-0.608275,1.932494,6.053958,1.456624,8.000933,2.431248,-7.411062,1.802633,3.483787,8.592639,-6.026042,-3.739650,-1.255732,-2.868520,0.442368,-0.390905,-2.096162,2.733167,0.374067,-4.466702,-1.876907,-5.978099,-3.316454,6.798726,-4.844556,-4.374568,-8.355618,2.097887,6.462309,-5.115020,8.432261,-4.582435,2.028702,-7.688247,-1.376549,2.373938,-4.833709,6.569324,3.606806,-7.632432,-3.484532,7.096458,2.229498,1.425379,-9.736857,8.289820,-4.123780,-4.018265,7.405610,1.661793,2.047432,1.256313,-5.277632,0.887379,4.960670,0.466546,-1.575958,-8.761764,-9.724270,-2.504159,-2.976846,-0.943442,-4.408742,-9.433074,2.022691,2.342052,-8.363971,-9.740542,-5.223434,9.375452,9.095594,0.538502,9.811906,7.277586,0.185551,-5.337168,-9.878946,0.794671,4.407833,-2.890961,8.864193,-4.844094,-7.387059,-9.413684,-9.446344,-2.822272,9.389920,6.110132,-3.875837,-8.111300,4.204647,6.073945,9.976530,-0.396131,-5.694654,-8.905835,-9.407022,8.631480,9.683918,5.556532,6.481485,-0.061247,1.029645,0.180396,-8.973515,-7.638184,0.361544,3.728566,-6.406331,6.543719,0.166013,-4.733856,-6.358576,-0.884370,0.465473,0.844450,-2.684446,0.394088,-6.856877,3.338783,-2.325368,-0.597039,8.020208,8.253605,9.809967,-5.046991,-7.904469,-4.427395,-8.730331,-3.667659,9.452328,3.869236,0.862099,9.210813,5.560512,5.510453,-7.956939,5.555660,3.947381,9.563822,-4.211998,7.709461,-3.149005,5.832305,5.772281,9.302029,-5.229790,-8.614851,1.205142,7.312141,-8.002085,0.061682,-0.748153,-7.931511,9.772316,-8.179831,8.069002,-5.772450,0.012690,-1.596062,0.128276,3.356010,-7.062576,-8.040571,-6.904105,9.778074,-9.796481,7.802936,0.475224,-9.428809,-7.747626,-6.887141,5.854604,3.703238,3.125772,5.872569,7.089091,-0.603419,-8.049848,-2.718699,-1.492600,2.977472,-7.814832,2.780669,-4.582659,-8.033339,-4.767588,-8.417291,9.189560,-3.932984,6.867838,6.239778,3.565999,1.706963,-1.424225,-8.060336,2.434447,2.570932,-4.652348,0.488514,1.481156,7.894519,0.657571,8.271337,-5.750786,4.496533,0.465801,-5.086001,-0.787518,-8.748292,9.169640,7.855301,-9.349547,-1.915932,6.270879,2.590522,7.010722,-6.056995,-2.446866,6.088555,1.668588,-4.680639,-3.912927,4.973215,-6.547950,2.940066,-8.634303,-2.975856,-9.457847,-5.632912,8.720064,-7.435149,-6.359739,7.362190,-7.931647,9.610908,7.556500,-7.064781,5.514781,-0.684408,4.731033,4.240599,-0.812307,-2.264257,8.653852,-7.024009,-6.610807,0.446899,3.570565,2.554044,-5.984645,7.971876,-1.503398,9.088397,-1.884346,-9.459266,5.759265,2.433245,4.292609,-2.974824,-1.793695,3.866029,7.973085,-5.994027,6.993451,-9.295010,-8.047316,8.464568,1.230136,-0.798111,-8.679538,7.955088,1.160806,0.676225,-0.083746,8.097001,-6.853779,6.579682,4.854129,-8.905874,8.704145,-9.879230,0.599794,2.590547,-9.241070,-6.934174,-9.753751,6.775463,-6.030948,-9.972719,-1.072789,-5.060878,2.209517,7.243080,2.939850,3.346659,-5.022354,-1.429692,-6.025253,2.604203,-3.755642,6.088361,1.760425,-9.175615,-3.693450,6.340415,-4.009039,5.638052,1.494019,-4.443715,0.243300,-8.038509,-0.127065,6.757810,-0.114760,4.743212,-7.820094,0.642584,6.863283,9.632999,-9.819549,6.646546,-6.346930,-2.160702,6.412219,-1.646761,4.524581,-6.629823,-1.037669,-9.617607,-9.449272,4.600170,-4.860563,3.224584,-3.762889,1.592015,2.323001,7.215913,-3.860511,2.086647,-8.968103,-8.258831,-4.891198,4.133620,-1.436985,9.159399,-3.616139,4.180047,9.365426,-8.914263,2.009087,3.640400,-4.106504,8.810215,-9.122690,-9.339556,-6.972322,-2.068219,-3.908846,9.819620,7.295074,4.471881,0.989909,6.853658,9.427107,-1.650141,4.261438,1.493945,-2.022569,-9.927192,-3.675843,-4.556115,7.776806,9.623438,-4.857838,-1.776341,-7.786613,6.126250,-2.588618,-6.418054,3.618944,9.043598,-8.556260,-3.273343,7.423911,-3.594759,-6.820729,-8.925131,6.252882,2.905105,6.613436,-3.658960,3.803685,1.095203,-0.689923,-5.981605,8.672387,-6.703999,-8.028673,-3.421907,-7.850851,8.159966,3.717495,-8.905902,-0.962591,2.916325,-4.073294,9.356235,8.659690,4.927277,-1.498013,9.715153,4.467409,-7.407880,3.509329,2.556756,8.167065,-5.021752,4.303904,3.477180], dtype = "float32")#candidate|9307|(2080,)|const|float32
call_9304 = relay.TupleGetItem(func_549_call(relay.reshape(const_9305.astype('int16'), []), relay.reshape(const_9306.astype('float32'), [1, 160]), relay.reshape(const_9307.astype('float32'), [13, 160]), ), 1)
call_9308 = relay.TupleGetItem(func_553_call(relay.reshape(const_9305.astype('int16'), []), relay.reshape(const_9306.astype('float32'), [1, 160]), relay.reshape(const_9307.astype('float32'), [13, 160]), ), 1)
func_2614_call = mod.get_global_var('func_2614')
func_2618_call = mutated_mod.get_global_var('func_2618')
var_9321 = relay.var("var_9321", dtype = "float32", shape = (440,))#candidate|9321|(440,)|var|float32
var_9322 = relay.var("var_9322", dtype = "float64", shape = (192,))#candidate|9322|(192,)|var|float64
call_9320 = relay.TupleGetItem(func_2614_call(relay.reshape(var_9321.astype('float32'), [11, 5, 8]), relay.reshape(var_9322.astype('float64'), [192,]), ), 2)
call_9323 = relay.TupleGetItem(func_2618_call(relay.reshape(var_9321.astype('float32'), [11, 5, 8]), relay.reshape(var_9322.astype('float64'), [192,]), ), 2)
func_7621_call = mod.get_global_var('func_7621')
func_7631_call = mutated_mod.get_global_var('func_7631')
var_9340 = relay.var("var_9340", dtype = "int8", shape = (28,))#candidate|9340|(28,)|var|int8
var_9341 = relay.var("var_9341", dtype = "int8", shape = (308,))#candidate|9341|(308,)|var|int8
var_9342 = relay.var("var_9342", dtype = "float64", shape = (32,))#candidate|9342|(32,)|var|float64
var_9343 = relay.var("var_9343", dtype = "uint64", shape = (8, 12))#candidate|9343|(8, 12)|var|uint64
const_9344 = relay.const([9,-2,4,10,7,5,-9,3,-9,-8,3,-10,-2,1,9,5,-5,-4,-10,3,2,-3,2,-6,4,-6,6,2,-6,-7,3,2,-9,-7,5,-6,7,-7,-5,10,5,-6,9,-8,-3,3,-6,-5,3,4,3,4,-9,-9,-2,-6,4,-7,-4,-1,1,-4,-10,2,5,1,7,-10,-6,3,-9,-6,-4,7,9,4,3,-5,-9,6,4,-3,-5,-7,1,1,-10,-2,-2,-2,-10,-9,6,-8,2,10,5,4,6,3,3,7,2,8,10,-3,6,-5,-7,-7,9,6,1,-4,-3,-4,2,10,1,-10,-7,3,-6,-6,-1,3,-10,-4,8,8,6,8,5,3,-3,9,5,-3,-10,5,2,3,-6,-5,-4,8,6,9,-1,9,5,-5,-10,3,-9,-3,-8,-5,3,1,-4,7,-2,-3,-9,6,-10,8,9,-4,-2,9,5,-6,-5,-6,-5,-9,1,1,-4,-8,8,-8,7,-7,-9,1,-2,2,4,-6,-5,8,-9,-8,6,1,1,-2,9,1,8,2,1,-9,4,-5,-4,-4,2,8,-9,-3,-8,1,6,7,-6,-8,-5,-1,4,-9,-1,-1,-7,2,-8,6,-9,5,-3,-3,-3,5,10,8,-3,4,10,-6,4,2,-2,2,-7,9,9,-8,-5,-10,-8,8,-5,-5,10,9,9,8,2,-3,6,1,-5,8,2,4,-6,1,-7,-6,10,-10,9,-2,-9,9,8,1,-9,-5,8,-10,2,-8,10,7,-1,8,-7,10,5,1,1,9,2,-2,-3,-7,-6,5,8,3,-9,9,1,-1,-1,2,-6,-4,2,1,8,2,4,7,9,3,-3,3,-2,-2,7,-6,2,-1,6,2,1,-8,-1,-9,7,8,4,7,6,-10,-3,5,-6,4,10,6,9,-10,-10,-3,-1,-8,4,5,-5,2,1,3,-8,1,-2,1,2,-4,-10,-9,7,8,-5,1,7,-7,-5,-8,-9,10,8,5,-3,-2,7,6,3,7,-6,-7,4,-3,-6,1,-4,7,2,-3,2,-8,9,2,7,-9,8,7,-1,2,-5,-3,1,10,3,-8,1,3,-9,3,4,10,7,5,-10,-5,1,-2,9,8,7,6,-2,-7,2,7,-1,10,-6,4,-6,-1,-9,9,-6,8,3,-9,-3,-5,6,2,1,-5,-1,-3,10,-3,-6,4,9,3,-8,-6,1,-7,-7,4,5,7,8,2,-3,-6,-9,-2,4,2,-10,-4,-2,-7,2,-7,3,-4,3,1,-2,6,5,2,3,-3,2,3,-8,3,6,-8,5,9,7,7,-7,3,-2,3,-6,-8,4,2,-6,2,6,-10,-2,-10,-1,10,-9,9,-7,7,-1,-4,8,4,1,-5,-8,10,6,-10,-7,2,-5,-7,5,6,1,-8,-5,5,10,5,-7,-7,6,-7,-8,-1,1,-5,-4,-4,-2,5,7,-5,10,-7,6,-9,3,-7,4,-6,-6,3,4,4,-2,-5,-9,-7,10,-7,10,-1,1,-8,6,1,-4,3,-4,8,-5,4,-3,4,-7,-2,-6,-1,-10,1,-2,-9,9,-8,8,8,9,7,4,-5,-2,-7,-1,5,-9,9,-1,10,10,-4,4,-4,-5,-2,4,-10,-6,5,9,-1,8,-2,10,-2,9,-1,-9,5,5,5,-7,-6,-3,-2,-2,-3,-3,-3,6,-3,3,-10,-8,8,-4,-3,-9,-8,1,-7,1,5,-2,6,4,-2,5,9,7,-7,2,6,8,-4,-1,1,-10,7,7,-1,-5,9,-7,3,8,6,1,-1,-3,-7,-7,-8,9,2,-9,8,-8,-5,-5,-8,2,1,6,-2,9,5,2,-5,-9,6,10,5,8,2,2,-6,-3,-6,1,2,-1,-5,2,-3,-7,-10,-2,-4,7,-6,5,3,-1,1,-9,1,9,3,8,-2,-3,-1,-9,7,-10,-5,3,4,-7,5,7,-5,3,-8,4,-5,4,3,-10,7,1,6,-8,-9,5,-10,-1,-9,-5,-7,-6,-3,10,-2,-6,2,-3,-1,-1,7,-4,10,-3,4,-5,4,-5,4,5,-6,8,-6,8,-1,8,7,-6,1,-8,-7,6,-8,10,-4,9,6,8,6,3,-7,7,5,2,3,1,-5,-1,9,5,8,3,-9,8,-1,3,4,-3,-1,6,-7,4,-5,-4,-8,-8,-3,10,6,-5,1,-4,-10,-3,-3,7,-8,-3,5,7,-6,-10,8,1,10,-8,6,5,8,-6,-6,3,3,-7,3,4,9,-8,-3,-10,5,-3,1,-6,7,1,7,7,10,-10,8,-2,-7,-7,-9,3,-6,-4,6,7,4,-7,2,10,-8,4,-4,6,-7,2,-9,-10,1,1,6,1,5,-10,3,-10,-10,-8,1,4,8,-5,-10,1,9,-1,7,-4,1,1,3,7,-8,-6,1,-8,-7,-6,-8,-10,-7,5,-4,-8,2,-1,3,-8,2,-1,-7,2,5,-1,-2,-1,2,7,-4,3,6,-5,-3,-1,9,8,4,2,-7,-2,3,-2,-1,3,3,5,3,10,3,8,7,9,-7,3,-3,-3,-10,3,3,9,3,7,4,-9,3,8,-5,-3,8,-6,-3,-7,-5,6,-6,4,-1,-5,-10,-9,-4,-3,5,-3,2,-4,-2,7,1,5,-8,-7,2,3,6,3,10,9,1,-8,3,9,-3,3,10,1,9,-9,10,2,-6,6,-2,1,10,10,1,9,4,8,-1,3,9,-2,-2,4,1,3,-8,-9,-6,-2,-8,3,-4,-7,-1,5,-10,8,-1,-1,-4,-6,-3,-1,-5,7,5,-7,-4,1,5,-3,3,9,6,6,6,-4,-10,7,-9,1,8,-2,4,-6,-3,4,-2,2,4,-10,2,1,-1,7,5,-6,8,5,-5,-1,-4,4,9,-6,4,5,-9,5,-5,2,2,4,7,-4,-2,1,-9,2,1,-10,3,10,-2,-2,9,8,3,3,-3,4,-1,9,-2,-7,8,-9,-3,-3,-1,-1,-10,-4,-2,4,-4,-1,7,-7,3,-3,5,2,-10,2,-1,-4,3,5,-4,3,9,-7,5,7,-9,-9,-2,-2,-7,6,1,-10,-7,-2,-3,-1,8,-1,1,1,10,-6,-2,-7,-5,10,2,-10,4,-9,6,1,5,9,2,6,9,-4,-10,-1,-3,-1,-10,3,-5,-10,10,7,5,-1,-5,9,-1,-4,-6,-8,-7,-4,-9,10,9,5,1,-7,9,3,7,7,-5,-10,7,9,-6,2,2,-9,1,-4,-7,1,1,9,4,-7,-6,-9,5,-8,3], dtype = "uint64")#candidate|9344|(1248,)|const|uint64
call_9339 = relay.TupleGetItem(func_7621_call(relay.reshape(var_9340.astype('int8'), [1, 7, 4]), relay.reshape(var_9341.astype('int8'), [11, 7, 4]), relay.reshape(var_9342.astype('float64'), [2, 16]), relay.reshape(const_9307.astype('float32'), [2080,]), relay.reshape(var_9343.astype('uint64'), [96,]), relay.reshape(const_9344.astype('uint64'), [1248,]), relay.reshape(const_9305.astype('int16'), []), relay.reshape(const_9306.astype('float32'), [160,]), ), 6)
call_9345 = relay.TupleGetItem(func_7631_call(relay.reshape(var_9340.astype('int8'), [1, 7, 4]), relay.reshape(var_9341.astype('int8'), [11, 7, 4]), relay.reshape(var_9342.astype('float64'), [2, 16]), relay.reshape(const_9307.astype('float32'), [2080,]), relay.reshape(var_9343.astype('uint64'), [96,]), relay.reshape(const_9344.astype('uint64'), [1248,]), relay.reshape(const_9305.astype('int16'), []), relay.reshape(const_9306.astype('float32'), [160,]), ), 6)
func_6475_call = mod.get_global_var('func_6475')
func_6478_call = mutated_mod.get_global_var('func_6478')
call_9347 = relay.TupleGetItem(func_6475_call(relay.reshape(const_9305.astype('uint32'), []), relay.reshape(const_9306.astype('float32'), [160,]), ), 3)
call_9348 = relay.TupleGetItem(func_6478_call(relay.reshape(const_9305.astype('uint32'), []), relay.reshape(const_9306.astype('float32'), [160,]), ), 3)
uop_9358 = relay.atanh(call_9347.astype('float64')) # shape=(1183,)
uop_9360 = relay.atanh(call_9348.astype('float64')) # shape=(1183,)
output = relay.Tuple([bop_9279,call_9283,const_9284,var_9285,call_9292,var_9293,call_9304,const_9305,const_9306,const_9307,call_9320,var_9321,var_9322,call_9339,var_9340,var_9341,var_9342,var_9343,const_9344,uop_9358,])
output2 = relay.Tuple([bop_9282,call_9286,const_9284,var_9285,call_9294,var_9293,call_9308,const_9305,const_9306,const_9307,call_9323,var_9321,var_9322,call_9345,var_9340,var_9341,var_9342,var_9343,const_9344,uop_9360,])
func_9375 = relay.Function([var_9278,var_9285,var_9293,var_9321,var_9322,var_9340,var_9341,var_9342,var_9343,], output)
mod['func_9375'] = func_9375
mod = relay.transform.InferType()(mod)
mutated_mod['func_9375'] = func_9375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9375_call = mutated_mod.get_global_var('func_9375')
var_9377 = relay.var("var_9377", dtype = "float32", shape = (16, 11, 11))#candidate|9377|(16, 11, 11)|var|float32
var_9378 = relay.var("var_9378", dtype = "uint64", shape = (600,))#candidate|9378|(600,)|var|uint64
var_9379 = relay.var("var_9379", dtype = "int64", shape = (72,))#candidate|9379|(72,)|var|int64
var_9380 = relay.var("var_9380", dtype = "float32", shape = (440,))#candidate|9380|(440,)|var|float32
var_9381 = relay.var("var_9381", dtype = "float64", shape = (192,))#candidate|9381|(192,)|var|float64
var_9382 = relay.var("var_9382", dtype = "int8", shape = (28,))#candidate|9382|(28,)|var|int8
var_9383 = relay.var("var_9383", dtype = "int8", shape = (308,))#candidate|9383|(308,)|var|int8
var_9384 = relay.var("var_9384", dtype = "float64", shape = (32,))#candidate|9384|(32,)|var|float64
var_9385 = relay.var("var_9385", dtype = "uint64", shape = (8, 12))#candidate|9385|(8, 12)|var|uint64
call_9376 = func_9375_call(var_9377,var_9378,var_9379,var_9380,var_9381,var_9382,var_9383,var_9384,var_9385,)
output = call_9376
func_9386 = relay.Function([var_9377,var_9378,var_9379,var_9380,var_9381,var_9382,var_9383,var_9384,var_9385,], output)
mutated_mod['func_9386'] = func_9386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8229_call = mod.get_global_var('func_8229')
func_8231_call = mutated_mod.get_global_var('func_8231')
call_9411 = relay.TupleGetItem(func_8229_call(), 0)
call_9412 = relay.TupleGetItem(func_8231_call(), 0)
output = relay.Tuple([call_9411,])
output2 = relay.Tuple([call_9412,])
func_9420 = relay.Function([], output)
mod['func_9420'] = func_9420
mod = relay.transform.InferType()(mod)
output = func_9420()
func_9421 = relay.Function([], output)
mutated_mod['func_9421'] = func_9421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9425 = relay.var("var_9425", dtype = "float32", shape = (8, 2, 11))#candidate|9425|(8, 2, 11)|var|float32
var_9426 = relay.var("var_9426", dtype = "float32", shape = (8, 2, 11))#candidate|9426|(8, 2, 11)|var|float32
bop_9427 = relay.subtract(var_9425.astype('float32'), relay.reshape(var_9426.astype('float32'), relay.shape_of(var_9425))) # shape=(8, 2, 11)
func_7722_call = mod.get_global_var('func_7722')
func_7726_call = mutated_mod.get_global_var('func_7726')
const_9437 = relay.const([-9,-5,-9,8,-5,-8,2,-6,7,-10,-9,10,-9,-4,-8,-1,7,-7,-2,-8,5,1,-3,10,4,-6,2,8,7,-10,-5,1,-6,-10,3,-5,-1,8,5,4,9,2,-8,-5,-2,-1,7,-1,-2,1,-9,4,3,6,1,7,1,-3,2,5,4,-3,10,4,-6,-7,-3,7,-4,-4,-4,-7,2,4,-8,8,-7,-3,-6,8,3,-7,8,-2,8,7,7,-6,2,3,-1,1,1,-6,10,6,-1,8,8,2,-6,-5,3,-1,1,6,-4,-1,-1,-1,5,6,4,-7,-6,6,6,-6,-3,5,-3,-8,-7,4,-10,-1], dtype = "int16")#candidate|9437|(126,)|const|int16
call_9436 = func_7722_call(relay.reshape(const_9437.astype('int16'), [9, 2, 7]), relay.reshape(const_9437.astype('int16'), [9, 2, 7]), )
call_9438 = func_7722_call(relay.reshape(const_9437.astype('int16'), [9, 2, 7]), relay.reshape(const_9437.astype('int16'), [9, 2, 7]), )
uop_9449 = relay.sin(bop_9427.astype('float64')) # shape=(8, 2, 11)
func_8611_call = mod.get_global_var('func_8611')
func_8615_call = mutated_mod.get_global_var('func_8615')
const_9455 = relay.const([[6,-10,1,-8,-9,2,-10,6,7,5,9,-5,6,7,-1,-4,7,3,1,10,-6,4],[3,-5,-5,8,4,2,-1,-5,-4,-3,-4,6,-8,9,-1,7,2,-4,-4,-1,-8,-8],[2,3,-4,-6,1,-6,-2,-2,-8,9,-2,-7,5,-3,-8,2,-6,-7,-1,9,-9,-2],[1,-6,-2,-9,5,-1,3,-3,-6,-3,2,-3,3,7,-10,-4,3,-2,-4,1,6,-2],[-7,9,2,6,-2,-6,-2,8,4,-2,2,3,-4,7,-6,8,2,7,-3,-7,-3,-1],[-8,4,3,-8,-10,2,5,4,6,7,3,-3,8,-9,-5,-5,-1,4,6,8,-2,10],[10,1,7,-4,-1,-5,7,1,6,4,6,1,9,-10,2,8,-5,7,-4,-2,-8,-7],[1,-6,5,-4,7,5,-7,-4,-8,-2,-1,4,-10,2,3,2,7,-3,-5,3,4,-7],[-4,1,-3,-4,-2,10,5,7,-1,-2,-4,-9,1,2,-10,8,9,-6,4,9,-8,-7],[2,1,-2,10,-7,8,2,5,8,8,5,-10,-5,5,9,-6,-6,2,9,6,2,-6],[-4,8,4,-9,-1,-6,-9,10,2,7,-5,6,3,-10,5,-9,6,-1,3,-7,-9,1],[-5,4,-6,-7,-9,5,-8,7,2,2,-5,-8,3,3,2,9,-4,7,3,-3,1,-4],[-6,4,-9,7,1,2,-3,-5,-10,2,-7,-8,-7,5,-10,8,-2,-3,9,2,-5,2],[-1,5,-3,-7,-8,-1,5,-2,6,10,-2,-8,-3,1,-7,10,-1,-1,-1,-3,3,-1],[-3,-3,7,-9,-8,-10,-9,3,-3,6,-5,8,-7,-5,6,-9,3,10,-7,8,5,-6],[-10,-10,1,7,-5,4,-6,2,-6,-3,-5,8,-1,7,4,-10,-4,7,8,-3,-1,-7],[-7,2,-10,-2,-9,6,7,-6,7,-7,-6,-8,10,-9,10,9,5,-1,-6,9,-3,5],[-8,-3,5,-8,4,-5,-7,5,-10,-3,4,9,8,5,-3,-3,1,8,8,7,9,-6],[6,-4,-6,1,-2,1,-8,-3,-9,4,6,6,-7,6,2,-4,3,-5,6,10,6,-10],[-10,-7,-3,10,4,-3,-8,-7,-1,9,9,-3,-9,5,-6,10,-1,-4,-10,4,-10,-5],[6,-9,2,-10,-1,8,-8,7,-1,10,6,8,10,-9,1,-7,5,3,-3,8,8,7],[-10,-9,-1,-5,-5,-2,5,5,5,-2,-7,6,7,-7,-4,10,9,7,10,-5,-2,-10],[-6,10,7,2,6,6,-5,-8,-9,3,10,6,-9,-5,-7,8,9,7,-2,2,8,-3],[2,2,-2,9,-6,-1,7,-7,-2,8,-5,-9,-3,-8,8,-5,-3,-4,-3,-6,-10,-3],[-5,-9,-7,10,1,10,-10,-8,10,-9,-10,7,-7,-2,1,2,-8,-5,-8,-7,-4,-7],[-5,-3,8,-5,6,-4,6,8,3,-3,10,4,-3,-1,7,-1,10,-7,-5,-7,-6,-4],[8,10,-1,-2,1,1,6,10,7,-8,-5,-7,9,1,-6,-10,6,-6,4,-8,-4,8],[-10,-5,-2,-5,-10,-5,-8,-8,1,9,-9,2,2,8,-8,6,-7,-6,4,5,-6,4],[-7,10,-10,5,5,3,-9,1,-7,5,8,4,5,-7,-10,-4,-3,6,3,-3,9,6],[-4,5,-6,9,4,-7,5,-9,-4,5,-7,-9,2,-9,-5,-1,3,-4,8,4,-9,2],[-4,-10,-4,-4,-7,1,6,-2,-6,1,9,-2,-1,1,-9,3,-4,2,1,8,10,5],[9,6,-10,-9,-4,-6,-7,-2,-1,-8,1,2,-7,-10,-8,-2,4,-4,-6,-3,-2,-3],[7,-3,-4,3,2,-7,-4,5,-2,8,-6,-10,5,-3,4,6,-3,10,-4,3,6,7],[9,-1,1,-8,-2,-9,4,4,6,-9,-10,6,-2,2,-1,10,-10,-2,8,8,-10,9],[-9,-2,-4,5,10,10,2,-1,-8,2,2,1,-6,2,-5,10,3,-10,2,10,7,-5],[-1,-2,9,-9,2,1,-8,-5,-3,9,-8,-2,4,-4,2,-2,8,-4,-9,-6,-2,8],[1,2,-10,-1,-10,9,-6,7,-2,3,-2,-7,-7,-10,1,8,3,5,3,-2,-10,10],[-5,4,-5,-7,3,8,6,-10,9,-8,-9,6,10,8,-2,-6,5,-4,8,-9,-3,10],[6,6,-9,8,1,10,5,-3,-6,3,8,2,-9,4,8,3,5,1,-6,-2,6,-8],[1,9,-10,-7,-2,-4,-9,-4,4,5,9,-5,-9,-1,10,8,-1,-7,3,-9,2,-7],[2,2,-1,9,-4,-4,-1,8,4,-3,4,8,-5,-2,10,9,-3,10,-9,3,-3,-6],[1,8,-9,4,2,-3,-9,-3,6,-1,-5,2,-1,-7,3,-9,-7,-2,9,-2,-8,-5],[1,5,1,6,-8,10,-7,-4,-8,7,-1,4,4,10,-10,-8,4,-8,-1,1,-7,3],[-5,4,-1,1,-9,3,-10,7,1,-4,-1,7,9,5,8,9,4,-1,2,8,-8,7],[5,1,-7,10,7,2,-7,3,-5,-9,6,4,3,-1,3,10,-10,-4,5,-7,-1,-10],[7,4,-8,9,-4,-3,-4,-7,-4,5,-7,3,10,4,-2,-10,10,1,6,3,2,6],[-2,-3,1,2,-4,9,8,7,-10,9,10,9,9,-7,-7,8,-7,8,8,7,-7,-8],[-10,5,4,1,3,2,-9,4,4,-9,-3,-1,9,3,-4,10,-5,-3,8,-3,-3,2],[5,-2,-8,-2,-8,-1,10,-4,4,8,1,-10,-7,-10,9,-4,10,3,-7,-10,-9,3],[-5,-6,2,-10,-9,-2,3,-9,-7,-7,1,6,9,4,-7,9,-5,-2,-1,10,5,6],[-7,2,-10,-3,-3,8,5,9,-8,-3,-3,1,-1,4,6,-6,5,-9,9,5,-2,-3],[4,6,-2,6,-8,-9,-10,5,-5,9,10,-4,-1,-2,-3,-8,1,-10,7,-8,4,3],[2,-10,-10,-6,8,-1,10,-1,-2,-1,-5,4,6,-8,-9,4,9,-8,-2,9,-6,-8],[4,1,-8,-9,-3,8,4,10,7,7,-8,2,9,2,2,2,-9,3,5,-4,-2,-8],[8,-2,-3,-10,-1,-3,-6,6,4,5,10,3,-8,6,1,8,1,4,-6,7,9,-10],[6,2,-5,-5,4,2,7,4,9,9,4,6,-10,-9,-4,3,-6,-9,-3,-6,2,-1],[-6,-9,8,7,-1,-4,-9,-9,4,2,-8,-1,-5,10,-6,8,-7,-7,3,7,-8,-5],[3,-9,-8,9,1,-9,-8,8,1,4,-3,10,-4,1,9,-8,-10,1,7,3,9,-6],[2,-9,-10,-8,-3,-10,-9,-8,7,-1,2,-6,-2,-6,-3,-8,-6,8,9,8,6,8],[9,2,-3,-4,4,1,-10,-7,-9,8,1,1,1,3,-9,1,-8,-3,-5,-3,8,-7]], dtype = "uint8")#candidate|9455|(60, 22)|const|uint8
var_9456 = relay.var("var_9456", dtype = "float32", shape = (2080,))#candidate|9456|(2080,)|var|float32
call_9454 = relay.TupleGetItem(func_8611_call(relay.reshape(const_9455.astype('uint8'), [1320,]), relay.reshape(var_9456.astype('float32'), [2080,]), ), 1)
call_9457 = relay.TupleGetItem(func_8615_call(relay.reshape(const_9455.astype('uint8'), [1320,]), relay.reshape(var_9456.astype('float32'), [2080,]), ), 1)
output = relay.Tuple([call_9436,const_9437,uop_9449,call_9454,const_9455,var_9456,])
output2 = relay.Tuple([call_9438,const_9437,uop_9449,call_9457,const_9455,var_9456,])
func_9459 = relay.Function([var_9425,var_9426,var_9456,], output)
mod['func_9459'] = func_9459
mod = relay.transform.InferType()(mod)
var_9460 = relay.var("var_9460", dtype = "float32", shape = (8, 2, 11))#candidate|9460|(8, 2, 11)|var|float32
var_9461 = relay.var("var_9461", dtype = "float32", shape = (8, 2, 11))#candidate|9461|(8, 2, 11)|var|float32
var_9462 = relay.var("var_9462", dtype = "float32", shape = (2080,))#candidate|9462|(2080,)|var|float32
output = func_9459(var_9460,var_9461,var_9462,)
func_9463 = relay.Function([var_9460,var_9461,var_9462,], output)
mutated_mod['func_9463'] = func_9463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8955_call = mod.get_global_var('func_8955')
func_8956_call = mutated_mod.get_global_var('func_8956')
call_9511 = relay.TupleGetItem(func_8955_call(), 2)
call_9512 = relay.TupleGetItem(func_8956_call(), 2)
func_9080_call = mod.get_global_var('func_9080')
func_9083_call = mutated_mod.get_global_var('func_9083')
var_9531 = relay.var("var_9531", dtype = "float64", shape = (60,))#candidate|9531|(60,)|var|float64
call_9530 = func_9080_call(relay.reshape(var_9531.astype('float64'), [6, 2, 5]))
call_9532 = func_9080_call(relay.reshape(var_9531.astype('float64'), [6, 2, 5]))
output = relay.Tuple([call_9511,call_9530,var_9531,])
output2 = relay.Tuple([call_9512,call_9532,var_9531,])
func_9534 = relay.Function([var_9531,], output)
mod['func_9534'] = func_9534
mod = relay.transform.InferType()(mod)
var_9535 = relay.var("var_9535", dtype = "float64", shape = (60,))#candidate|9535|(60,)|var|float64
output = func_9534(var_9535)
func_9536 = relay.Function([var_9535], output)
mutated_mod['func_9536'] = func_9536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9158_call = mod.get_global_var('func_9158')
func_9159_call = mutated_mod.get_global_var('func_9159')
call_9557 = func_9158_call()
call_9558 = func_9158_call()
const_9562 = relay.const([[[-8.009371,-5.687327,-5.838510,7.132799,-1.331002,8.054557,-5.238520,-7.275728,-3.842256,6.768673,-8.702220],[-4.312844,-9.753323,-2.041293,8.519293,-2.062078,-4.113041,3.823247,-3.310183,9.174900,-2.652658,-5.736755],[2.020018,-2.556291,-1.512119,1.967211,5.970091,-4.570598,8.050463,8.268643,-3.994538,-6.741536,-9.067019],[1.622022,9.745762,-8.311451,1.876557,-1.675345,6.771979,-8.209609,-9.849214,7.621100,1.474151,-1.532516],[-4.807458,3.804478,3.645433,-3.892167,-0.123844,-1.804173,-3.821185,1.438468,5.714493,-9.614491,-6.790769],[0.087846,-9.620394,-0.757247,-5.534467,-7.085077,-8.808944,2.876182,-3.195116,-6.873476,2.944718,-5.413808],[9.509020,6.589129,8.929491,0.972426,7.891862,-0.995122,3.682422,4.676725,2.098578,6.136671,-7.857430],[-0.993960,-5.135692,7.656855,7.185091,5.780321,1.589123,-6.915109,-6.391645,9.575313,-9.504459,3.549561],[-2.108666,2.593398,7.175773,-3.878796,5.603397,-6.457422,4.104339,7.122019,0.991508,2.148321,9.602767],[7.599945,4.492952,8.731734,-0.088039,-3.530564,-8.877696,6.235670,-2.122313,7.636591,-4.056663,3.027081],[6.285720,-1.536487,0.429953,1.935527,3.650394,-5.127024,1.316850,-5.985573,-8.972912,1.026091,-9.063796]],[[-0.492192,-6.525497,-0.571033,2.823243,-0.258518,-4.952478,9.986466,-7.507086,5.887598,3.596716,-8.597294],[7.397312,3.584969,8.525183,-7.991213,5.253873,-0.490535,-3.776683,-8.125460,-1.841760,-4.704549,5.848868],[-0.131017,0.995383,-3.640483,4.254701,1.061341,8.652584,9.080151,5.033184,3.068111,-6.930308,-0.980980],[-5.337722,3.914580,1.152104,-9.226203,9.090195,-5.580845,-9.123252,-8.006287,-7.424734,-1.064313,-9.629752],[-8.535247,-3.213349,-8.299647,-0.512334,0.319778,4.154178,4.412446,2.495608,6.302625,5.519548,6.600710],[-5.575720,9.317003,7.685822,9.623421,1.986442,-6.227185,2.712584,9.635876,7.038317,-5.781929,6.493612],[-0.446867,1.762819,8.289155,2.133888,-8.391966,-3.179271,-7.603932,-5.224069,9.260568,-4.038239,9.135632],[-4.981765,2.513898,8.655353,-5.018819,7.608308,4.112333,0.519931,8.071757,6.422045,-6.325160,-2.551926],[-5.223934,-1.789409,-6.864541,9.077766,-0.025426,-2.529255,0.498097,-8.065174,-2.423613,-3.170079,-8.845620],[4.906867,2.774476,-6.057623,-7.594983,-0.523459,6.118641,4.104310,9.209515,4.492588,-8.649491,8.365965],[7.201505,-1.210584,-1.088765,-2.381412,-6.751873,-9.566337,-1.225479,2.170776,1.273834,5.073043,4.705953]],[[2.441129,1.545186,-8.755167,-7.331504,-1.590694,9.483287,-2.381489,2.832760,9.745534,-9.775936,1.055909],[-8.532084,6.222362,2.145246,-0.802045,6.914800,0.590870,-9.292556,8.113424,-4.149908,-5.645032,-4.489850],[1.864993,9.532604,2.355669,-8.001790,7.228071,3.449247,6.758985,6.877894,0.713682,6.015664,-3.561490],[4.749859,-6.472004,0.990468,8.216023,1.961967,9.506057,7.002519,-8.036689,-7.267176,-7.757331,9.446092],[-2.278760,8.840465,4.232953,-6.556541,-4.849433,0.839718,0.283093,-3.117345,-6.900289,3.147109,-4.702847],[-4.669987,4.443756,-7.339151,2.389912,2.072518,9.983539,0.050573,4.458803,-2.435013,3.229702,-6.581838],[-6.526937,-9.625820,2.842933,-1.808203,-6.339441,-9.892860,5.548604,-3.203148,-4.561305,-4.466218,-6.210159],[0.047638,-8.518595,-0.598753,8.072885,-6.552499,5.766520,1.659250,9.259163,-8.604348,-9.088086,8.857603],[-2.502013,-4.304831,4.730529,-4.407757,1.161974,4.979299,2.647653,4.895471,-6.328272,-8.858212,-3.604037],[-3.069299,3.120610,-8.373167,-9.723517,-6.331262,7.848211,2.814200,6.726602,-6.579762,1.238522,-2.630312],[6.277323,-0.186499,-4.794390,2.154342,-4.329338,-7.449052,3.309139,2.648071,-1.444535,-5.216165,6.947055]],[[-7.585710,5.862588,6.526741,-8.073656,0.680872,5.188644,3.056681,-2.080542,9.894100,4.547002,-6.983256],[-7.307767,-6.916549,5.323953,-0.455619,-4.831147,-6.387183,9.283119,3.151726,1.571272,-0.746005,-7.514074],[-9.331400,-0.241615,2.462631,1.666114,-9.713654,6.332360,-4.935951,6.813428,7.669127,9.671560,8.927180],[2.142301,-8.681594,6.925085,-3.141597,9.006197,-2.949496,-1.634982,1.458941,-1.809024,0.688971,-5.762680],[-3.407380,-4.655659,4.366580,6.538260,-3.817349,3.817128,-8.014293,6.650525,-9.238310,7.440124,5.850912],[-2.937752,-4.752252,-1.004652,6.530259,9.991873,7.558962,7.647710,-2.629315,7.459949,-6.577288,1.412350],[-9.199760,9.132996,5.003648,9.192577,-1.524470,7.465675,-8.175292,-9.102081,-8.431958,-5.276325,8.496757],[9.005360,-7.309157,-4.457867,4.721272,0.077851,1.280940,1.831215,-2.375444,9.437267,-5.660795,4.225875],[-6.692394,-6.117156,3.468060,-6.916280,9.187174,-0.511394,0.383936,-7.520291,2.392336,-6.213512,-9.467640],[9.253299,-8.936290,5.174526,-5.906173,-9.669441,-0.304268,2.851015,5.825240,-6.495639,9.430635,-6.809556],[0.906531,-5.738033,5.261583,1.591551,-0.359257,-6.522276,1.522430,5.256913,-9.342369,2.506057,6.965119]],[[-7.452712,-8.711452,3.457073,-4.203669,-2.375765,-0.810680,-9.506733,9.300487,4.900608,-8.201941,1.554006],[5.863970,3.048957,-3.164534,-3.807048,-6.677937,-6.412106,3.685077,-1.966295,6.181441,8.861777,7.012235],[4.246003,-2.530421,-2.812178,-8.409185,-2.663838,5.505235,4.507875,-3.660941,7.075331,5.489475,-4.690401],[7.009257,-2.232620,9.339081,-7.746967,9.503763,-0.596446,-5.173029,-5.121699,-3.423530,-0.561691,3.978306],[1.486447,0.759248,-6.327377,-4.760112,7.210106,4.834034,-7.913011,7.852358,-1.259644,4.070332,-2.601266],[8.006467,-0.255449,-4.636542,9.347643,8.574137,1.020621,0.029558,1.742122,-9.802243,3.551569,-3.358249],[9.251102,-6.309005,-8.989305,-8.400751,7.589847,3.240052,8.882773,-4.258267,8.471627,1.562331,-4.173606],[-2.154449,-7.176434,-0.487509,9.910492,2.320656,8.788609,-8.032667,1.691366,-9.010828,-2.759090,0.390355],[3.229682,6.055775,0.197419,-4.225825,8.080784,2.038972,6.126252,-2.183339,-8.705628,6.185997,9.698392],[5.126714,-7.537798,-3.318834,0.022610,-4.487610,4.279821,-1.588081,-5.215058,1.799812,2.853294,9.429076],[-9.572277,7.922819,-2.246416,-8.383315,-9.540697,-4.165351,-6.472468,-4.655585,-8.313489,-9.718235,-8.322360]],[[-6.961051,7.491141,-5.427527,-8.084612,-7.728756,4.303546,8.435668,-8.072635,-6.429831,0.628832,-6.967535],[9.685620,-5.458214,5.987417,2.875789,0.127531,5.588347,0.662186,3.439960,4.290538,6.473375,-7.803072],[-8.769284,-6.254265,9.088610,-8.135569,7.495819,-3.155736,5.310521,1.217491,7.015825,0.020125,6.014981],[2.842638,-6.077232,-3.001918,0.859723,9.817391,-2.755813,-7.365567,0.326690,8.243172,-5.126877,-6.488195],[3.292790,7.772417,-4.604472,1.453250,6.144434,3.671001,-7.736641,2.062207,-0.616160,1.903469,3.829768],[-7.770401,-8.253172,8.434133,-3.459339,1.679021,5.818526,-2.438550,5.580845,-0.914394,-2.760162,-1.291180],[9.234568,2.417579,-4.345890,-3.233053,-1.934972,4.423474,-2.383353,-7.350164,-2.806650,3.801740,-3.078589],[-2.891941,6.956385,-8.907579,-6.925282,-6.968853,9.585163,5.389831,3.063702,0.229315,-9.863457,-4.948382],[2.611087,5.934725,-6.313383,-5.673709,0.597820,-4.220485,7.615052,-1.628525,-5.683261,8.769807,-3.350395],[5.216148,8.141283,-3.286833,1.829535,-5.842519,5.113967,2.830186,-6.200327,-6.557567,-7.063063,9.730831],[2.599677,2.895113,-9.008511,4.816289,1.234885,-9.758401,9.683068,-1.812678,-5.486192,-1.174726,8.705875]],[[8.969826,7.559903,5.941292,5.397533,6.282603,-4.747631,-7.577964,4.090482,-7.985514,-3.759776,4.423505],[8.013033,9.435076,5.591178,9.559912,0.625828,-8.135465,-5.192493,-4.953793,-3.225261,-0.176799,-7.549680],[-9.499066,8.473101,-2.603308,3.183741,4.732638,5.275395,-4.245782,-3.963039,7.266917,3.802997,-7.567682],[3.784934,1.830069,-2.419922,3.961336,-0.497584,8.891763,-0.405328,5.942277,2.904262,-4.674710,7.578867],[7.734907,-3.225583,4.011937,9.764247,2.137140,-9.536485,-8.434408,-9.700797,2.388128,9.441031,-7.128826],[-1.185894,-2.505170,0.491072,6.973994,9.471982,-3.921768,9.032268,3.712265,-1.736898,-6.571408,9.695080],[1.862528,-9.518131,-8.786354,0.574707,1.736344,7.128759,-4.125678,-5.942042,8.462990,-3.504922,3.443381],[-0.805232,-9.612547,8.543821,4.293120,-1.062699,-2.352630,-9.575332,-3.015477,-2.275199,6.809349,2.974358],[-6.159643,1.484861,-0.023195,0.140249,-7.989565,-6.287076,-8.320298,7.433091,1.958239,4.899878,-4.673991],[-5.322862,4.752794,-7.081706,-4.087900,-8.300590,1.581199,5.227856,-6.386389,5.255830,-4.213428,8.573326],[6.743356,-9.394317,-4.631011,-5.789095,4.433801,-9.764512,7.014731,-2.961372,-2.486372,-8.326678,-8.858718]],[[3.877311,9.128399,4.273307,9.075379,-2.153951,4.635369,8.715352,-7.655759,-3.601578,-8.618688,1.499245],[2.673589,-8.946139,-0.509510,2.609752,-9.940071,8.512477,0.976049,7.909006,-0.390519,0.440705,-2.990550],[1.939663,4.680285,7.059224,-1.056236,3.246587,-0.885935,-3.156271,5.398842,0.754590,-7.340671,6.562861],[-3.417133,-3.115879,-1.011408,-3.768251,-8.328885,-7.781111,-7.460793,-2.671895,-5.274821,-9.638166,6.624698],[8.044754,7.881316,-5.080721,-6.068569,4.994235,-0.122637,7.281533,-1.215568,6.225760,7.045732,-6.920626],[2.657880,8.987738,-7.459730,-6.817103,-0.934316,-0.999592,5.630633,2.088573,-4.257024,-7.216511,9.774351],[-5.164921,6.653416,-7.369756,2.469556,-3.341353,3.344341,-8.813569,-0.459373,4.480568,-7.883919,-6.754782],[-2.115179,6.563057,-9.574858,6.337380,3.016098,6.815613,-9.192799,-3.380449,-3.186124,-9.678544,-2.121800],[-7.317576,-7.695278,2.355111,2.693876,-7.721912,7.358811,8.897427,7.538262,3.959021,-7.626415,0.112681],[2.240494,-4.452603,9.414763,4.678910,6.172684,-4.000727,-6.652571,-1.059949,5.143142,9.361916,1.977900],[-1.561676,-1.473244,0.396600,0.927972,8.821564,-8.156539,-6.885425,-1.001327,8.135987,7.079059,6.485713]],[[0.985237,-1.629881,-0.528652,-2.774051,-1.836908,-0.785375,-4.874893,4.291693,0.661744,-8.146422,-2.689941],[1.450850,4.778460,-8.879956,-3.765298,-0.887264,5.550117,-9.701892,-0.331409,4.470929,2.878213,8.674248],[-3.613863,1.472893,3.497541,2.515730,4.111686,1.551468,-9.950972,5.001088,5.670635,-5.276742,-6.274269],[7.987938,6.227866,1.590984,-5.474071,2.227203,3.366786,-1.410968,-4.544641,-3.481507,-8.327719,-7.689608],[7.251390,1.091747,5.987834,-2.383346,-2.935800,8.250569,-6.939472,7.940624,7.606235,9.190396,1.039885],[-6.845298,-5.826899,8.250056,-8.539363,7.038565,-0.190484,-6.701070,-5.003658,7.712102,-6.665109,7.895437],[-2.027100,-9.564482,7.994125,-8.043724,8.921842,-9.979313,-6.011045,8.164403,-0.703884,-4.548230,3.633536],[-0.274467,2.938306,5.650282,-8.686682,3.480392,6.069128,2.298125,2.200518,3.096102,-1.163554,-3.152000],[-2.258562,4.147561,-4.049864,2.559542,-4.758962,-5.220493,1.220181,-1.837430,-8.643361,-5.022235,1.683519],[-4.668896,-7.098607,8.805874,8.852313,0.107226,4.433197,-1.814573,-5.518127,-3.792143,-8.975524,8.143706],[-9.817853,1.289972,6.630895,-5.232094,3.154649,8.734045,-8.547576,-6.466402,2.691962,0.530953,-4.614525]],[[-2.651043,2.560924,-2.111671,7.187907,-2.939380,2.873293,-1.214971,6.140274,2.080933,5.022310,-7.705590],[2.244490,-3.519037,-6.112673,-0.462267,3.612198,-4.497228,0.625742,-7.919237,-0.272354,-7.448805,9.941244],[-3.768431,2.464735,6.322213,-0.110790,-3.232600,3.499109,-4.139230,9.246754,-0.875509,-5.291964,8.356104],[6.296054,-2.335103,-6.468240,6.089448,-6.191907,1.188695,6.517186,-1.367065,-0.450888,-4.962568,1.124358],[-1.409814,6.495956,-4.815278,9.609669,2.431219,6.461087,-3.598514,-1.531811,8.292088,3.940867,-8.941114],[-0.753715,-0.268458,5.876427,-4.351708,-3.336960,0.923930,8.805620,9.802182,-7.950731,-5.634578,-4.732323],[2.833292,-1.966018,1.340028,8.961618,9.905821,1.864977,5.663608,-5.038707,6.606478,-3.965486,-8.209410],[-7.231189,-8.442989,-9.895334,1.875682,5.625637,7.640182,3.578280,4.943295,-8.429505,-7.820913,-2.783320],[-3.030522,8.244075,3.050612,6.656996,-0.925246,9.292623,-4.198889,5.075782,5.295713,-1.855750,-6.158645],[9.613905,6.189667,-2.826990,3.670068,8.067832,5.489270,-7.695922,-9.807933,-2.834357,2.893775,2.914722],[6.599986,3.273343,0.164620,1.721116,-4.676564,3.739227,-5.996337,4.770953,-7.128972,-8.763828,-3.922778]],[[8.072187,-3.481142,7.554456,0.508069,2.448865,3.996569,9.615118,-9.510103,-5.219467,-8.481012,-6.726016],[-0.477825,-5.019954,-6.797672,-4.055611,5.286885,7.091008,-3.011908,-2.960242,6.167306,-7.877147,-2.841641],[1.949376,4.957562,3.394262,3.514549,-6.214012,-9.676200,6.012366,4.961730,2.453619,1.876251,-7.653207],[9.998042,5.989913,-9.275799,3.760214,-2.672439,-6.219578,-8.138958,2.149292,7.265505,1.687420,-7.954562],[7.244222,9.414685,9.084256,5.953990,-9.034607,-0.226225,-6.983524,3.109845,2.611359,-0.285350,3.057150],[-8.512915,7.581940,5.033076,3.173428,8.433965,9.753840,5.786375,9.588477,5.575141,2.920866,1.375549],[-9.096382,2.473554,-5.044400,8.003169,-0.563466,-9.811947,-7.313450,0.176878,-2.914455,-8.241243,5.598640],[-2.130706,-9.384486,-9.955889,1.018035,0.206271,-0.365039,2.257932,4.496781,8.121565,-9.342202,3.125188],[6.497071,-7.617876,8.233769,8.647085,-8.660457,4.624711,7.959954,-0.577242,8.876753,6.089008,-4.506227],[4.369041,7.189893,-3.540056,-4.981547,-0.798905,-2.694391,9.574174,6.650569,-9.881848,-4.213009,7.002740],[9.225346,-3.436842,8.275764,-6.403349,6.216059,4.146882,-7.809624,-2.968992,7.898468,-0.451328,-9.015712]],[[3.003230,8.402261,6.328016,3.172023,0.423640,1.629766,-6.603861,5.059369,-4.907873,-3.951266,-2.254285],[8.617803,7.326059,6.836869,-6.882041,-4.866118,-3.959708,5.106479,7.428677,-7.582460,4.425672,2.108860],[-8.030549,9.478910,6.569766,3.092184,-6.107832,-6.310123,9.512393,-4.297181,8.102091,-0.653794,-8.608241],[-1.584196,-7.729883,-0.733443,-6.492326,6.420109,5.526889,7.336883,-4.363796,-5.026939,-3.232941,8.775428],[-7.269814,1.538664,-9.795834,6.716723,-4.692713,-0.864825,-3.367163,-3.468765,-0.404341,-3.647814,-6.685434],[-2.885921,-1.265730,-5.845391,-4.271889,-4.889542,1.041910,-2.695236,6.150830,-3.053636,3.972049,9.323405],[2.996829,-2.266278,5.077577,8.006808,5.588730,7.273974,-9.294774,-1.858839,7.214022,-9.195826,-1.487749],[-0.095608,-9.729728,0.790914,5.685294,-8.042968,3.318746,4.218619,3.955469,-6.250023,-8.288251,-7.842795],[7.501694,1.028500,8.683803,8.232291,1.941672,-3.784737,-2.793246,3.775709,-2.803383,2.279494,8.328549],[-2.930876,1.042668,7.079629,-6.706999,9.712724,-9.372968,-3.487570,-7.022356,9.372480,6.433555,9.488537],[-5.105861,-8.432061,-0.355778,-1.996757,-2.511833,-6.833513,9.130990,3.505009,9.129464,-8.075420,-4.729541]],[[-7.283818,-5.923192,-1.731883,0.750733,-3.766665,-4.036328,-3.910965,-5.009700,-1.119806,9.505685,-9.296285],[-5.286167,8.332387,-4.807030,0.331839,-4.222406,0.322269,-7.172595,9.330995,-9.675367,9.397085,-5.773092],[1.775009,-4.136605,7.730390,0.023159,-2.146154,7.017808,0.015567,9.631186,-9.309646,-1.629976,7.891105],[1.068579,-5.931749,-3.573355,0.466192,8.845975,4.212152,-5.120375,-9.050808,-7.917543,-7.585772,-4.733253],[-0.560154,-7.476018,9.034938,-9.756013,2.191980,0.267409,1.740938,7.727975,-1.133299,-3.103527,-6.311753],[-4.071655,-7.831488,-0.762020,7.657340,-0.268468,-2.702966,-4.538057,-0.844878,-5.037175,4.131226,5.549467],[2.961389,4.196952,-7.064001,5.313871,-4.615682,7.181646,4.102762,9.282446,-2.483524,-6.198354,3.654314],[-5.918222,8.093806,0.569480,9.521317,-6.714348,-8.012507,-2.209500,5.889586,9.097878,-9.117687,-1.345526],[-2.530853,-7.230284,2.022896,-9.656971,9.561726,-7.647188,6.086856,1.379350,9.185340,-7.020774,8.500976],[-6.005544,-8.003376,2.407079,-5.927201,-9.411644,7.435772,6.545773,2.529792,1.494777,-7.805624,-7.984949],[-5.778944,-9.362985,5.353453,1.889606,-3.639829,5.842832,0.136273,9.591470,-6.004884,4.656958,-3.588044]],[[-4.451235,-3.103590,-2.661390,-2.990333,-3.523519,9.988054,-1.515399,7.445086,9.021098,3.592454,1.612743],[7.050328,-7.805489,-8.657396,-8.930829,-2.090495,2.179341,-4.699328,0.642794,-4.002181,2.140011,8.103809],[-0.319130,4.541421,-3.832077,-0.065981,-2.409102,-3.803324,0.349497,-9.646895,1.770933,-0.968713,0.485987],[-1.732289,2.444816,-3.954865,-6.992377,-8.663548,2.290485,5.962242,-5.999118,1.215431,6.951719,0.930578],[-6.362951,-0.819940,-2.156044,-6.439532,-7.030797,4.661635,4.860682,-1.681499,9.325387,-7.632765,1.471078],[-2.732710,6.857778,-3.086498,7.397497,6.806278,6.369446,4.992384,2.637787,0.678252,-0.186226,6.443102],[-5.190095,-1.331301,1.470706,-3.782838,-6.878922,-1.959328,-7.119090,-1.656650,7.412411,-9.878592,-6.043819],[-4.882818,3.242178,0.075785,-4.685351,-3.384495,-6.441191,-0.103974,3.960323,-2.788108,2.303406,-6.105349],[3.605779,6.951934,-3.834125,8.491384,8.087535,-8.020892,6.943508,0.547304,2.176393,5.327500,-2.102497],[0.101433,-4.902343,2.655826,-1.012469,-8.411859,-1.999176,-5.473511,2.364180,4.497451,-1.464826,6.428465],[1.933191,4.473568,-6.266888,4.529222,3.480629,2.582645,-8.320568,7.695795,-4.106552,0.262933,-7.100394]],[[0.137074,1.218418,-7.128106,5.281783,-2.310482,-6.897313,0.640191,-2.254596,5.353455,8.297497,7.486221],[4.742952,-4.175369,-3.225717,8.033075,-2.091214,-5.667431,2.294488,4.622071,5.044201,-9.282089,4.151018],[-8.369464,-5.205250,1.477072,-1.831545,7.746750,-9.963328,5.989642,5.840774,5.922393,-7.966498,-7.242952],[-0.604086,-7.035530,5.799083,-1.153869,-2.151638,-0.862481,-9.882448,-7.795152,-8.109444,7.113350,5.147109],[-6.694058,0.791712,-1.762786,3.514923,9.893543,-8.469803,0.011835,-5.397927,2.635615,2.133590,9.915269],[4.559228,-7.514038,-3.849981,-9.921990,7.902374,-4.817378,-5.068393,-5.702834,3.535795,-5.005205,4.342345],[6.221044,5.584821,-5.815254,-4.901366,-7.006827,5.021292,-7.200680,-9.822287,8.214840,5.359097,-9.878696],[7.674963,8.033160,8.581106,-2.274971,-2.309248,-4.660323,-5.439812,-7.709272,4.090554,5.374896,3.913528],[-4.279456,-5.333312,9.006591,8.795862,-0.148354,-3.716775,-2.298043,9.151439,-7.152367,-6.904559,7.580823],[6.999999,-3.158042,-4.931029,5.840248,8.304231,-8.380564,-2.380279,8.415152,6.052394,-5.349118,4.174949],[5.901965,6.042981,-6.632016,1.540680,1.386270,3.757364,1.711325,8.665038,-0.737201,-1.166772,-9.822520]],[[-1.173469,-9.630200,0.704216,-7.731371,5.009764,3.763034,4.684526,3.310757,2.161901,-6.833496,-6.903780],[8.683188,-4.203653,-9.346342,-4.557601,8.862623,-8.449645,-6.945258,-3.334246,-8.683521,5.107397,5.661512],[-8.037479,7.870017,4.574461,-1.204424,0.342189,9.474178,8.419456,-2.519526,-0.672417,7.887918,8.097296],[0.094314,-6.742709,-2.050915,0.608317,-6.076410,-1.320514,-0.563037,6.867317,8.862594,-5.803124,5.365393],[-3.344315,7.392285,7.720966,7.205385,-8.314052,9.845368,-4.929587,-0.886718,7.727559,1.272029,-2.252848],[2.898347,1.629415,-9.571764,1.183693,1.593901,4.422237,-8.930852,9.892044,-8.345918,-6.385403,-4.466286],[0.096163,6.507151,-1.712874,-2.258138,-8.774782,-9.741271,-1.998863,9.720533,-8.866987,3.046367,9.356713],[2.230069,9.539898,-1.408796,7.808731,-2.733912,-3.808892,4.496972,3.316994,5.043916,4.649471,7.443215],[7.708475,4.469100,8.530120,0.880202,-4.683384,-9.571898,-0.720679,-8.718930,8.259839,-7.389448,-4.055843],[-2.314149,5.190239,3.777470,-1.208195,-0.419677,8.183109,7.323772,-7.233040,3.198865,0.506135,-4.161645],[-5.623416,9.009085,-9.998302,4.772288,3.769840,-6.623138,-3.787359,4.913935,-0.646489,-3.163990,5.568095]]], dtype = "float32")#candidate|9562|(16, 11, 11)|const|float32
bop_9563 = relay.bitwise_and(call_9557.astype('uint32'), relay.reshape(const_9562.astype('uint32'), relay.shape_of(call_9557))) # shape=(16, 11, 11)
bop_9566 = relay.bitwise_and(call_9558.astype('uint32'), relay.reshape(const_9562.astype('uint32'), relay.shape_of(call_9558))) # shape=(16, 11, 11)
uop_9582 = relay.atan(const_9562.astype('float32')) # shape=(16, 11, 11)
output = relay.Tuple([bop_9563,uop_9582,])
output2 = relay.Tuple([bop_9566,uop_9582,])
func_9586 = relay.Function([], output)
mod['func_9586'] = func_9586
mod = relay.transform.InferType()(mod)
mutated_mod['func_9586'] = func_9586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9586_call = mutated_mod.get_global_var('func_9586')
call_9587 = func_9586_call()
output = call_9587
func_9588 = relay.Function([], output)
mutated_mod['func_9588'] = func_9588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_9596 = relay.TupleGetItem(func_7735_call(), 0)
call_9597 = relay.TupleGetItem(func_7736_call(), 0)
output = call_9596
output2 = call_9597
func_9614 = relay.Function([], output)
mod['func_9614'] = func_9614
mod = relay.transform.InferType()(mod)
mutated_mod['func_9614'] = func_9614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9614_call = mutated_mod.get_global_var('func_9614')
call_9615 = func_9614_call()
output = call_9615
func_9616 = relay.Function([], output)
mutated_mod['func_9616'] = func_9616
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9628 = relay.var("var_9628", dtype = "uint16", shape = (11, 11, 7))#candidate|9628|(11, 11, 7)|var|uint16
var_9629 = relay.var("var_9629", dtype = "uint16", shape = (11, 11, 7))#candidate|9629|(11, 11, 7)|var|uint16
bop_9630 = relay.left_shift(var_9628.astype('uint16'), relay.reshape(var_9629.astype('uint16'), relay.shape_of(var_9628))) # shape=(11, 11, 7)
output = relay.Tuple([bop_9630,])
output2 = relay.Tuple([bop_9630,])
func_9634 = relay.Function([var_9628,var_9629,], output)
mod['func_9634'] = func_9634
mod = relay.transform.InferType()(mod)
var_9635 = relay.var("var_9635", dtype = "uint16", shape = (11, 11, 7))#candidate|9635|(11, 11, 7)|var|uint16
var_9636 = relay.var("var_9636", dtype = "uint16", shape = (11, 11, 7))#candidate|9636|(11, 11, 7)|var|uint16
output = func_9634(var_9635,var_9636,)
func_9637 = relay.Function([var_9635,var_9636,], output)
mutated_mod['func_9637'] = func_9637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9689 = relay.var("var_9689", dtype = "uint32", shape = (4, 5, 11))#candidate|9689|(4, 5, 11)|var|uint32
var_9690 = relay.var("var_9690", dtype = "uint32", shape = (4, 5, 11))#candidate|9690|(4, 5, 11)|var|uint32
bop_9691 = relay.equal(var_9689.astype('bool'), relay.reshape(var_9690.astype('bool'), relay.shape_of(var_9689))) # shape=(4, 5, 11)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_9705 = relay.TupleGetItem(func_7735_call(), 0)
call_9706 = relay.TupleGetItem(func_7736_call(), 0)
func_6475_call = mod.get_global_var('func_6475')
func_6478_call = mutated_mod.get_global_var('func_6478')
var_9708 = relay.var("var_9708", dtype = "uint32", shape = ())#candidate|9708|()|var|uint32
var_9709 = relay.var("var_9709", dtype = "float32", shape = (160,))#candidate|9709|(160,)|var|float32
call_9707 = relay.TupleGetItem(func_6475_call(relay.reshape(var_9708.astype('uint32'), []), relay.reshape(var_9709.astype('float32'), [160,]), ), 8)
call_9710 = relay.TupleGetItem(func_6478_call(relay.reshape(var_9708.astype('uint32'), []), relay.reshape(var_9709.astype('float32'), [160,]), ), 8)
func_8207_call = mod.get_global_var('func_8207')
func_8208_call = mutated_mod.get_global_var('func_8208')
call_9711 = relay.TupleGetItem(func_8207_call(), 0)
call_9712 = relay.TupleGetItem(func_8208_call(), 0)
func_5869_call = mod.get_global_var('func_5869')
func_5872_call = mutated_mod.get_global_var('func_5872')
var_9717 = relay.var("var_9717", dtype = "int64", shape = (72,))#candidate|9717|(72,)|var|int64
call_9716 = relay.TupleGetItem(func_5869_call(relay.reshape(var_9717.astype('int64'), [12, 6, 1])), 1)
call_9718 = relay.TupleGetItem(func_5872_call(relay.reshape(var_9717.astype('int64'), [12, 6, 1])), 1)
bop_9727 = relay.power(call_9705.astype('float64'), relay.reshape(call_9711.astype('float64'), relay.shape_of(call_9705))) # shape=(16, 11, 11)
bop_9730 = relay.power(call_9706.astype('float64'), relay.reshape(call_9712.astype('float64'), relay.shape_of(call_9706))) # shape=(16, 11, 11)
output = relay.Tuple([bop_9691,call_9707,var_9708,var_9709,call_9716,var_9717,bop_9727,])
output2 = relay.Tuple([bop_9691,call_9710,var_9708,var_9709,call_9718,var_9717,bop_9730,])
func_9731 = relay.Function([var_9689,var_9690,var_9708,var_9709,var_9717,], output)
mod['func_9731'] = func_9731
mod = relay.transform.InferType()(mod)
mutated_mod['func_9731'] = func_9731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9731_call = mutated_mod.get_global_var('func_9731')
var_9733 = relay.var("var_9733", dtype = "uint32", shape = (4, 5, 11))#candidate|9733|(4, 5, 11)|var|uint32
var_9734 = relay.var("var_9734", dtype = "uint32", shape = (4, 5, 11))#candidate|9734|(4, 5, 11)|var|uint32
var_9735 = relay.var("var_9735", dtype = "uint32", shape = ())#candidate|9735|()|var|uint32
var_9736 = relay.var("var_9736", dtype = "float32", shape = (160,))#candidate|9736|(160,)|var|float32
var_9737 = relay.var("var_9737", dtype = "int64", shape = (72,))#candidate|9737|(72,)|var|int64
call_9732 = func_9731_call(var_9733,var_9734,var_9735,var_9736,var_9737,)
output = call_9732
func_9738 = relay.Function([var_9733,var_9734,var_9735,var_9736,var_9737,], output)
mutated_mod['func_9738'] = func_9738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9586_call = mod.get_global_var('func_9586')
func_9588_call = mutated_mod.get_global_var('func_9588')
call_9743 = relay.TupleGetItem(func_9586_call(), 0)
call_9744 = relay.TupleGetItem(func_9588_call(), 0)
func_8371_call = mod.get_global_var('func_8371')
func_8377_call = mutated_mod.get_global_var('func_8377')
const_9758 = relay.const([-1,3,5,3,-4,-7,-5,9,8,-8,1,-5,-10,9,10,-7,-2,5,6,-7,4,3,4,3,7,2,-1,-8,-10,1,10,-1,10,-10,-5,-9,10,10,3,7,-7,9,-7,-8,-2,9,9,-6,7,5,4,10,-7,9,6,-9,4,10,3,-10,-7,8,-10,-4,10,-10,-5,-10,3,-10,5,9,-7,3,-6,-6,-4,10,-9,-5,-4,-3,5,3,1,6,-5,7,5,6,5,-6,-6,-4,-1,-4,-4,-5,-10,-9,-2,-9,4,-10,6,-10,-8,1,-3,1,-4,8,-1,8,-1,-2,-6,1,9,-6,-7,-5,5,1,10,1], dtype = "int16")#candidate|9758|(126,)|const|int16
var_9759 = relay.var("var_9759", dtype = "uint64", shape = (600, 1))#candidate|9759|(600, 1)|var|uint64
call_9757 = relay.TupleGetItem(func_8371_call(relay.reshape(const_9758.astype('int16'), [9, 2, 7]), relay.reshape(var_9759.astype('uint64'), [600,]), relay.reshape(call_9743.astype('float32'), [16, 11, 11]), relay.reshape(call_9743.astype('float32'), [16, 11, 11]), ), 2)
call_9760 = relay.TupleGetItem(func_8377_call(relay.reshape(const_9758.astype('int16'), [9, 2, 7]), relay.reshape(var_9759.astype('uint64'), [600,]), relay.reshape(call_9743.astype('float32'), [16, 11, 11]), relay.reshape(call_9743.astype('float32'), [16, 11, 11]), ), 2)
uop_9761 = relay.log10(call_9757.astype('float32')) # shape=(10, 10, 6)
uop_9763 = relay.log10(call_9760.astype('float32')) # shape=(10, 10, 6)
func_3227_call = mod.get_global_var('func_3227')
func_3230_call = mutated_mod.get_global_var('func_3230')
var_9770 = relay.var("var_9770", dtype = "float32", shape = (1, 60))#candidate|9770|(1, 60)|var|float32
call_9769 = relay.TupleGetItem(func_3227_call(relay.reshape(var_9770.astype('float32'), [6, 2, 5])), 0)
call_9771 = relay.TupleGetItem(func_3230_call(relay.reshape(var_9770.astype('float32'), [6, 2, 5])), 0)
func_618_call = mod.get_global_var('func_618')
func_621_call = mutated_mod.get_global_var('func_621')
var_9782 = relay.var("var_9782", dtype = "float32", shape = (160,))#candidate|9782|(160,)|var|float32
const_9783 = relay.const([9.703644,5.975632,-7.890193,4.334499,0.873868,-9.019347,0.161299,4.929453,0.525713,3.489730,4.176652,-3.612624,0.135491,3.624616,9.533695,3.087574,-5.572682,-3.413797,7.631286,-9.571918,8.763896,-0.642982,8.873107,8.500630,2.162407,0.064037,-9.537509,1.328892,3.890862,-8.567756,6.778628,7.351099,-0.813255,-5.176362,5.825479,3.365506,2.424215,2.496616,8.773149,-2.067777,-0.211351,0.646439,0.380207,-8.955560,7.489271,8.353784,5.049881,-7.356217,-0.522036,6.271351,3.029616,-5.043667,-2.163967,8.265321,6.914911,2.202311,3.527011,-2.507831,0.761344,-4.473527,4.181021,1.768178,-2.605441,-4.952680,-1.136827,6.366995,-7.453444,7.508887,0.335619,-9.349055,-8.969282,-0.624789,-5.002993,-9.401364,-6.316380,-7.324490,3.262603,-6.043173,1.207385,-8.389792,-6.601833,7.839403,-0.453687,2.464811,8.755511,-0.924094,2.938938,-3.049483,5.633280,0.994238,7.940890,8.742421,6.205601,-2.286591,-3.990429,1.212465,-1.386054,-2.769583,9.927516,3.850121,0.058659,-3.319788,-2.494464,9.057394,4.114952,7.936762,-8.248495,3.316046,-1.447852,8.285381,2.810861,7.558210,3.602673,-8.430188,-6.824554,-4.586173,9.977852,-1.943283,3.299034,0.571323,4.789327,8.171360,4.070757,4.114133,-3.173539,-3.833952,7.533472,-5.717112,5.554169,0.726214,-6.434823,-3.812229,-4.783166,0.230821,-5.430949,5.690403,-0.238083,7.087929,0.945139,3.183449,5.827043,9.985172,-5.468923,-4.465681,-3.287933,5.268131,4.957161,-1.407805,-9.869620,9.045989,-4.172280,-3.703447,9.887670,-0.104841,2.172769,-1.906728,-7.965154,9.219985,4.048893,-4.989793,-7.045098,-3.871617,2.289872,8.522445,3.613754,-0.264766,4.818327,-7.694294,0.627324,-6.427078,-2.529097,4.032611,-7.561325,1.511137,-5.823123,-5.776820,0.488672,-0.663414,8.296255,2.082393,-8.849190,0.845590,-0.591524,-7.974202,-9.588269,-0.204311,-6.615919,4.535704,7.814215,-6.172835,3.488840,-1.309656], dtype = "float64")#candidate|9783|(192,)|const|float64
call_9781 = relay.TupleGetItem(func_618_call(relay.reshape(var_9782.astype('float32'), [4, 40]), relay.reshape(const_9783.astype('float64'), [16, 3, 4]), ), 3)
call_9784 = relay.TupleGetItem(func_621_call(relay.reshape(var_9782.astype('float32'), [4, 40]), relay.reshape(const_9783.astype('float64'), [16, 3, 4]), ), 3)
bop_9788 = relay.logical_and(call_9769.astype('bool'), relay.reshape(var_9770.astype('bool'), relay.shape_of(call_9769))) # shape=(6, 2, 5)
bop_9791 = relay.logical_and(call_9771.astype('bool'), relay.reshape(var_9770.astype('bool'), relay.shape_of(call_9771))) # shape=(6, 2, 5)
func_8933_call = mod.get_global_var('func_8933')
func_8934_call = mutated_mod.get_global_var('func_8934')
call_9797 = relay.TupleGetItem(func_8933_call(), 1)
call_9798 = relay.TupleGetItem(func_8934_call(), 1)
func_8207_call = mod.get_global_var('func_8207')
func_8208_call = mutated_mod.get_global_var('func_8208')
call_9800 = relay.TupleGetItem(func_8207_call(), 0)
call_9801 = relay.TupleGetItem(func_8208_call(), 0)
output = relay.Tuple([call_9743,const_9758,var_9759,uop_9761,call_9781,var_9782,const_9783,bop_9788,call_9797,call_9800,])
output2 = relay.Tuple([call_9744,const_9758,var_9759,uop_9763,call_9784,var_9782,const_9783,bop_9791,call_9798,call_9801,])
func_9812 = relay.Function([var_9759,var_9770,var_9782,], output)
mod['func_9812'] = func_9812
mod = relay.transform.InferType()(mod)
mutated_mod['func_9812'] = func_9812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9812_call = mutated_mod.get_global_var('func_9812')
var_9814 = relay.var("var_9814", dtype = "uint64", shape = (600, 1))#candidate|9814|(600, 1)|var|uint64
var_9815 = relay.var("var_9815", dtype = "float32", shape = (1, 60))#candidate|9815|(1, 60)|var|float32
var_9816 = relay.var("var_9816", dtype = "float32", shape = (160,))#candidate|9816|(160,)|var|float32
call_9813 = func_9812_call(var_9814,var_9815,var_9816,)
output = call_9813
func_9817 = relay.Function([var_9814,var_9815,var_9816,], output)
mutated_mod['func_9817'] = func_9817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8830_call = mod.get_global_var('func_8830')
func_8831_call = mutated_mod.get_global_var('func_8831')
call_9842 = func_8830_call()
call_9843 = func_8830_call()
func_2668_call = mod.get_global_var('func_2668')
func_2671_call = mutated_mod.get_global_var('func_2671')
const_9894 = relay.const([-4.674346,-8.803644,-4.641290,6.138002,-0.709238,-2.106139,-4.793268,5.690643,-5.432684,2.272228,-3.643198,4.109309,-9.319260,-5.128339,1.982186,6.709350,1.380488,-9.368926,-9.859255,-9.142377,-5.468507,-2.844292,-2.225500,-0.621571,2.176603,8.934548,-5.521726,2.710476,-9.163470,7.262728,4.854668,1.584262,-8.624061,-4.914934,-5.335167,-2.255945,8.621859,0.574929,-2.766015,-2.162755,7.674333,9.949480,-5.025164,9.200047,-5.848607,-7.099776,4.194291,-0.003440,-9.261663,-2.502555,5.379432,4.585566,2.112114,8.977039,-4.101668,-3.891617,5.431170,-4.385663,-6.703616,5.766319,-7.402780,-0.381259,9.558884,1.957432,5.350424,-2.817759,-1.858784,5.451867,4.796550,0.994290,-6.456901,1.814270,-4.991800,-5.584945,2.770957,0.064737,2.512188,-8.017802,3.116973,-3.363268,4.153513,5.429519,-7.413840,-5.746525,5.252203,-9.828620,1.479448,-7.935489,9.770649,-9.181981,-1.658047,-9.274593,1.439345,-5.813205,-8.313373,3.278302,-3.229695,-8.352757,8.161661,-7.600534,-7.901826,-1.237125,-5.616077,3.223422,2.910261,5.585797,-7.436635,-3.309859,-7.082631,-7.153909,3.911214,-0.705736,-8.844797,1.735572,5.063799,1.714507,-4.629140,4.249641,-1.232637,-7.252675,-0.555596,4.047438,5.898184,-1.955605,-9.763827,-4.736766,-9.405131,2.010186,4.620490,-8.887151,-4.779590,5.639158,-0.426014,-0.376373,1.981169,-7.872184,-5.637346,-0.868956,0.121192,8.336083,3.464377,-4.479566,-3.980375,1.051893,-5.138913,6.736640,3.520801,9.305984,6.146066,-2.011105,-7.686734,9.309207,-7.598976,-2.005383,-8.302045,1.693535,8.631358,-9.192433,-5.390489,-7.711239,7.633081,2.270472,-7.430267,-4.909316,-6.779045,-0.056973,-7.196911,6.996629,-5.640621,-5.435357,6.664807,-9.096824,8.563477,9.389100,-9.194966,-6.053868,6.417636,-3.721327,-6.236800,7.568727,0.676269,9.759668,0.129970,-4.030612,-3.825681,0.422703,9.882868,4.141532,-5.639036,-3.168512,-8.978449,-6.355583], dtype = "float64")#candidate|9894|(192,)|const|float64
call_9893 = relay.TupleGetItem(func_2668_call(relay.reshape(const_9894.astype('float64'), [4, 12, 4])), 1)
call_9895 = relay.TupleGetItem(func_2671_call(relay.reshape(const_9894.astype('float64'), [4, 12, 4])), 1)
func_8371_call = mod.get_global_var('func_8371')
func_8377_call = mutated_mod.get_global_var('func_8377')
var_9898 = relay.var("var_9898", dtype = "int16", shape = (126,))#candidate|9898|(126,)|var|int16
const_9899 = relay.const([-7,4,-8,-5,-10,-2,-10,8,3,-10,3,-9,5,1,9,7,-4,1,7,1,-2,8,7,7,5,2,3,-10,-5,6,-10,-9,5,-6,-7,4,9,3,-9,7,10,-1,-1,3,-2,9,3,-8,-1,5,-1,-7,-2,-8,3,-6,-3,5,-9,-9,9,-5,-9,3,7,-7,-8,1,-7,2,4,-2,-8,-2,-7,-2,-2,-9,9,-10,1,-7,6,-10,6,-4,3,-7,4,9,-10,-8,-7,-3,10,-5,3,-1,-9,-3,-4,-5,-2,7,2,5,-7,6,9,-2,-5,1,8,-8,-2,4,-5,-10,-1,-2,3,9,-2,5,4,-2,4,-8,5,1,-6,-1,6,-9,10,-2,-3,-6,5,8,-1,-2,-6,-9,-8,-8,7,-7,-5,-2,2,-10,6,-1,9,4,-2,7,9,-10,-8,1,-10,-10,7,-1,-9,-5,7,8,5,-8,-10,-6,-10,-6,-5,-6,7,1,10,-4,-3,4,3,7,-5,7,-9,6,9,6,1,10,-7,-4,5,6,7,9,1,9,3,3,9,1,-1,4,8,2,7,4,5,7,9,3,-3,8,-10,-8,-2,9,-6,7,-4,-1,6,10,-7,-5,-4,8,3,-3,-9,-2,-8,6,1,-7,-4,-8,6,-2,-9,-9,5,10,7,1,-2,7,-5,1,-6,-2,7,-1,-2,-5,-9,-3,4,-4,-5,-7,9,7,8,-9,6,-5,5,-5,-8,-5,-7,-3,2,-1,4,3,3,9,-10,6,-2,-1,6,4,-6,-2,9,-3,-5,-7,-6,6,2,3,-4,10,-1,-4,4,-10,7,5,-9,7,5,-7,-6,-2,-8,10,3,9,10,-10,1,7,2,-6,-2,-7,6,-8,6,-1,-5,6,3,-2,9,7,2,8,8,8,-6,7,-10,-2,-6,-3,-6,-9,-4,-9,-4,3,-4,3,4,10,-6,-1,3,-5,6,10,-4,-10,1,-3,8,3,6,4,7,9,-2,-10,-4,1,-10,4,1,6,5,-1,5,5,-9,-3,-4,10,5,-8,-4,2,2,-1,10,-9,7,10,-3,7,-3,-10,5,2,1,-2,10,2,2,9,1,8,7,1,-2,-3,9,3,-5,-7,-4,-3,4,10,-9,9,6,-7,3,10,6,-2,7,10,-8,-8,7,1,-7,9,-8,3,6,-7,-7,6,-2,-8,-4,1,-7,-6,-2,-8,-6,2,-5,-9,6,2,5,-9,-6,6,-7,-2,7,1,-5,-6,-5,-8,-7,3,-3,7,3,-4,2,7,-6,6,-6,-3,-7,3,-9,-4,8,-10,-2,-10,4,4,-4,9,-9,-5,3,6,-7,4,2,4,7,2,4,6,7,-6,-2,-3,10,-6,6,-3,-2,10,-6,5,-10,-5,-2,2,3,-2,-3,-6,5,-5,3,-3,-4,-3,9,4,-7,-6,1,8,-8,-9,-7,3,6,-2,-6,7,10,-10,6,-8,2,1,4,9,10,-4,-2,9,-6,6,6,2,3,-4,-8,3,-8,5,-2,7,-2,-8,-1,4,-8,9,-6,-1,-7,-8,-9,4,5,-1,-4,10,-1,-2,-7,-8,-7,-10,-2,-1,-8,-1,-2,-4], dtype = "uint64")#candidate|9899|(600,)|const|uint64
call_9897 = relay.TupleGetItem(func_8371_call(relay.reshape(var_9898.astype('int16'), [9, 2, 7]), relay.reshape(const_9899.astype('uint64'), [600,]), relay.reshape(call_9842.astype('float32'), [16, 11, 11]), relay.reshape(call_9842.astype('float32'), [16, 11, 11]), ), 4)
call_9900 = relay.TupleGetItem(func_8377_call(relay.reshape(var_9898.astype('int16'), [9, 2, 7]), relay.reshape(const_9899.astype('uint64'), [600,]), relay.reshape(call_9842.astype('float32'), [16, 11, 11]), relay.reshape(call_9842.astype('float32'), [16, 11, 11]), ), 4)
output = relay.Tuple([call_9842,call_9893,const_9894,call_9897,var_9898,const_9899,])
output2 = relay.Tuple([call_9843,call_9895,const_9894,call_9900,var_9898,const_9899,])
func_9907 = relay.Function([var_9898,], output)
mod['func_9907'] = func_9907
mod = relay.transform.InferType()(mod)
var_9908 = relay.var("var_9908", dtype = "int16", shape = (126,))#candidate|9908|(126,)|var|int16
output = func_9907(var_9908)
func_9909 = relay.Function([var_9908], output)
mutated_mod['func_9909'] = func_9909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8190_call = mod.get_global_var('func_8190')
func_8191_call = mutated_mod.get_global_var('func_8191')
call_9920 = relay.TupleGetItem(func_8190_call(), 2)
call_9921 = relay.TupleGetItem(func_8191_call(), 2)
output = call_9920
output2 = call_9921
func_9928 = relay.Function([], output)
mod['func_9928'] = func_9928
mod = relay.transform.InferType()(mod)
mutated_mod['func_9928'] = func_9928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9928_call = mutated_mod.get_global_var('func_9928')
call_9929 = func_9928_call()
output = call_9929
func_9930 = relay.Function([], output)
mutated_mod['func_9930'] = func_9930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9173_call = mod.get_global_var('func_9173')
func_9174_call = mutated_mod.get_global_var('func_9174')
call_9950 = relay.TupleGetItem(func_9173_call(), 0)
call_9951 = relay.TupleGetItem(func_9174_call(), 0)
uop_9983 = relay.erf(call_9950.astype('float32')) # shape=(16, 11, 11)
uop_9985 = relay.erf(call_9951.astype('float32')) # shape=(16, 11, 11)
output = uop_9983
output2 = uop_9985
func_10011 = relay.Function([], output)
mod['func_10011'] = func_10011
mod = relay.transform.InferType()(mod)
mutated_mod['func_10011'] = func_10011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10011_call = mutated_mod.get_global_var('func_10011')
call_10012 = func_10011_call()
output = call_10012
func_10013 = relay.Function([], output)
mutated_mod['func_10013'] = func_10013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8075_call = mod.get_global_var('func_8075')
func_8076_call = mutated_mod.get_global_var('func_8076')
call_10020 = func_8075_call()
call_10021 = func_8075_call()
var_10027 = relay.var("var_10027", dtype = "float32", shape = (16, 11, 11))#candidate|10027|(16, 11, 11)|var|float32
bop_10028 = relay.less(call_10020.astype('bool'), relay.reshape(var_10027.astype('bool'), relay.shape_of(call_10020))) # shape=(16, 11, 11)
bop_10031 = relay.less(call_10021.astype('bool'), relay.reshape(var_10027.astype('bool'), relay.shape_of(call_10021))) # shape=(16, 11, 11)
func_9534_call = mod.get_global_var('func_9534')
func_9536_call = mutated_mod.get_global_var('func_9536')
var_10043 = relay.var("var_10043", dtype = "float64", shape = (60,))#candidate|10043|(60,)|var|float64
call_10042 = relay.TupleGetItem(func_9534_call(relay.reshape(var_10043.astype('float64'), [60,])), 1)
call_10044 = relay.TupleGetItem(func_9536_call(relay.reshape(var_10043.astype('float64'), [60,])), 1)
func_9907_call = mod.get_global_var('func_9907')
func_9909_call = mutated_mod.get_global_var('func_9909')
var_10067 = relay.var("var_10067", dtype = "int16", shape = (126, 1))#candidate|10067|(126, 1)|var|int16
call_10066 = relay.TupleGetItem(func_9907_call(relay.reshape(var_10067.astype('int16'), [126,])), 2)
call_10068 = relay.TupleGetItem(func_9909_call(relay.reshape(var_10067.astype('int16'), [126,])), 2)
func_8955_call = mod.get_global_var('func_8955')
func_8956_call = mutated_mod.get_global_var('func_8956')
call_10070 = relay.TupleGetItem(func_8955_call(), 2)
call_10071 = relay.TupleGetItem(func_8956_call(), 2)
output = relay.Tuple([bop_10028,call_10042,var_10043,call_10066,var_10067,call_10070,])
output2 = relay.Tuple([bop_10031,call_10044,var_10043,call_10068,var_10067,call_10071,])
func_10074 = relay.Function([var_10027,var_10043,var_10067,], output)
mod['func_10074'] = func_10074
mod = relay.transform.InferType()(mod)
mutated_mod['func_10074'] = func_10074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10074_call = mutated_mod.get_global_var('func_10074')
var_10076 = relay.var("var_10076", dtype = "float32", shape = (16, 11, 11))#candidate|10076|(16, 11, 11)|var|float32
var_10077 = relay.var("var_10077", dtype = "float64", shape = (60,))#candidate|10077|(60,)|var|float64
var_10078 = relay.var("var_10078", dtype = "int16", shape = (126, 1))#candidate|10078|(126, 1)|var|int16
call_10075 = func_10074_call(var_10076,var_10077,var_10078,)
output = call_10075
func_10079 = relay.Function([var_10076,var_10077,var_10078,], output)
mutated_mod['func_10079'] = func_10079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8830_call = mod.get_global_var('func_8830')
func_8831_call = mutated_mod.get_global_var('func_8831')
call_10159 = func_8830_call()
call_10160 = func_8830_call()
output = call_10159
output2 = call_10160
func_10166 = relay.Function([], output)
mod['func_10166'] = func_10166
mod = relay.transform.InferType()(mod)
output = func_10166()
func_10167 = relay.Function([], output)
mutated_mod['func_10167'] = func_10167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9173_call = mod.get_global_var('func_9173')
func_9174_call = mutated_mod.get_global_var('func_9174')
call_10188 = relay.TupleGetItem(func_9173_call(), 0)
call_10189 = relay.TupleGetItem(func_9174_call(), 0)
output = relay.Tuple([call_10188,])
output2 = relay.Tuple([call_10189,])
func_10194 = relay.Function([], output)
mod['func_10194'] = func_10194
mod = relay.transform.InferType()(mod)
mutated_mod['func_10194'] = func_10194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10194_call = mutated_mod.get_global_var('func_10194')
call_10195 = func_10194_call()
output = call_10195
func_10196 = relay.Function([], output)
mutated_mod['func_10196'] = func_10196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10011_call = mod.get_global_var('func_10011')
func_10013_call = mutated_mod.get_global_var('func_10013')
call_10292 = func_10011_call()
call_10293 = func_10011_call()
output = relay.Tuple([call_10292,])
output2 = relay.Tuple([call_10293,])
func_10294 = relay.Function([], output)
mod['func_10294'] = func_10294
mod = relay.transform.InferType()(mod)
mutated_mod['func_10294'] = func_10294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10294_call = mutated_mod.get_global_var('func_10294')
call_10295 = func_10294_call()
output = call_10295
func_10296 = relay.Function([], output)
mutated_mod['func_10296'] = func_10296
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10340 = relay.const([[[-2.478831,8.300790,9.269995],[-8.035294,-8.680614,4.827515],[-6.113531,-0.221346,-6.559825],[-6.230950,1.835779,-5.426370],[-7.671617,4.349436,5.773330],[4.443646,-0.787455,-7.760079],[-0.679429,9.856891,-5.797838],[3.587107,-2.389835,8.168846],[3.341495,8.927407,-0.183463],[-7.640622,6.724758,-3.500752],[-5.546014,-1.552561,-0.651985],[-4.866742,0.831619,7.428283],[9.880515,-0.925968,-3.480226],[-3.030460,-4.113795,4.853409],[7.359543,5.846236,6.889332]],[[-0.817194,-8.486375,-8.635498],[6.825161,1.024925,-9.580026],[-0.609714,-1.553681,7.622472],[-0.462162,-2.866431,3.039257],[3.138383,9.624638,6.785233],[-8.909075,-9.042157,1.948403],[9.252841,-0.695651,2.818309],[1.235350,-6.634843,9.295045],[4.971012,9.866357,-1.448205],[9.340749,-9.002661,-8.189759],[2.783244,8.127673,0.721302],[-1.964481,0.435273,-9.203717],[-2.815801,-1.108207,8.286656],[-2.478824,-7.308119,-2.806523],[0.997846,-5.708957,8.103353]],[[4.443778,-5.272371,-1.958199],[4.569965,-2.087698,4.569595],[-9.920207,5.130780,-6.624116],[-2.761812,9.904005,4.459557],[3.176177,0.385270,-8.152571],[-2.004576,0.779124,-8.816450],[7.715375,-3.607409,-2.175815],[-7.039247,2.664505,7.454086],[-5.440069,6.424849,-6.700696],[0.883679,2.391851,-3.402405],[0.820802,3.395846,4.458508],[2.323674,-0.311433,-6.534598],[0.046329,5.571705,-1.827899],[5.371753,-7.806857,-3.223042],[3.753784,-7.915612,-0.753984]],[[-7.718065,2.518007,-5.182601],[6.834801,9.750657,-8.328642],[-6.312558,-1.440733,-1.677022],[-0.139634,9.985981,-3.101205],[-0.665936,-0.646890,-2.828047],[7.619102,-1.420199,7.541793],[6.090002,-5.584394,-5.218869],[-5.396794,8.763639,-3.110197],[-9.352709,4.118621,9.454034],[6.512622,6.867675,-2.068107],[9.880089,-0.171424,-4.480328],[-9.036450,-3.172908,3.828062],[5.802930,1.648486,-3.271412],[9.049661,-8.429376,5.287327],[-0.210655,7.858698,-6.422724]],[[-3.222494,6.367355,5.763405],[-2.010264,8.598862,6.737921],[1.201533,5.198661,9.226109],[-2.444557,-1.031306,3.633840],[-2.715316,-2.581106,4.264889],[4.292999,-1.378767,-5.082386],[-4.589594,-5.190273,2.610230],[-0.145187,-8.841685,3.947152],[-1.163315,-4.328837,-9.600004],[-2.049924,-5.503529,8.015481],[7.046009,1.728270,9.220523],[7.440780,-3.713282,-6.084792],[3.556496,-1.414165,-8.915996],[2.102612,8.966601,4.961225],[1.053265,-2.018572,-7.519616]],[[0.560631,-9.601576,-6.258596],[-9.916495,1.908191,0.582145],[-2.716140,2.596310,-8.115777],[-1.500824,-4.771726,-1.767780],[-1.649812,1.769074,7.229119],[-4.221533,5.831016,9.143003],[-7.963087,9.641033,-6.303925],[0.344250,-3.033879,1.413477],[-6.004457,-0.831611,9.588307],[-8.771057,4.303098,-2.678145],[-4.980760,9.027518,6.923465],[0.712892,5.840275,4.933741],[6.126020,-5.770919,0.360626],[-2.103741,-1.398946,-1.182449],[9.556546,0.980680,-2.836782]],[[5.163700,-8.404860,-8.247798],[7.426640,1.427831,3.937056],[-1.576704,-1.073616,-2.674456],[-1.725863,4.986223,1.381666],[-2.185873,4.997487,9.069604],[8.237990,-3.929314,-2.179291],[0.129592,-9.534967,-9.307825],[-4.254246,-2.815547,4.297517],[-3.833227,5.255765,-5.984156],[-5.160266,-2.294277,-2.567127],[4.851995,-1.319196,6.531404],[1.674080,9.007658,-3.990561],[2.650538,-1.937069,3.967333],[-8.378566,-3.142705,7.009478],[-3.955051,2.226850,1.126787]],[[7.065282,-8.414619,-6.359203],[-9.861224,-4.543580,6.670442],[8.389095,2.802576,-8.835193],[2.917202,2.603954,4.273089],[4.599875,-0.084386,-6.850687],[-8.559762,-4.180103,9.658247],[5.499176,-0.947224,1.228557],[-9.102681,-8.072986,7.757543],[-7.310518,4.636174,-1.860472],[-8.432319,2.913217,-5.498798],[4.505854,5.274940,6.335408],[-1.661020,-8.907912,7.799358],[5.541842,-7.033241,3.685160],[-7.423017,-3.262112,3.766639],[-2.317426,-5.292161,-0.295406]],[[3.496132,-1.421281,-4.601057],[-6.405618,-3.588894,6.805866],[-6.403714,5.061319,8.240173],[-4.945192,-1.072008,0.854231],[6.566244,1.618717,8.926707],[3.397751,1.509203,3.647535],[5.970303,4.934359,-5.580028],[6.011174,8.370167,6.133175],[-5.000973,-2.434337,4.705228],[-3.519402,-3.120368,-7.106785],[-4.955786,-2.742391,8.899315],[2.197066,8.877181,-0.130530],[3.587787,2.048816,-0.899566],[8.885866,-9.122899,1.862092],[-8.760740,6.494474,-1.053415]]], dtype = "float32")#candidate|10340|(9, 15, 3)|const|float32
var_10341 = relay.var("var_10341", dtype = "float32", shape = (9, 15, 3))#candidate|10341|(9, 15, 3)|var|float32
bop_10342 = relay.subtract(const_10340.astype('float32'), relay.reshape(var_10341.astype('float32'), relay.shape_of(const_10340))) # shape=(9, 15, 3)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
var_10350 = relay.var("var_10350", dtype = "int32", shape = (2496,))#candidate|10350|(2496,)|var|int32
call_10349 = relay.TupleGetItem(func_4365_call(relay.reshape(var_10350.astype('int32'), [16, 12, 13])), 0)
call_10351 = relay.TupleGetItem(func_4367_call(relay.reshape(var_10350.astype('int32'), [16, 12, 13])), 0)
output = relay.Tuple([bop_10342,call_10349,var_10350,])
output2 = relay.Tuple([bop_10342,call_10351,var_10350,])
func_10366 = relay.Function([var_10341,var_10350,], output)
mod['func_10366'] = func_10366
mod = relay.transform.InferType()(mod)
mutated_mod['func_10366'] = func_10366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10366_call = mutated_mod.get_global_var('func_10366')
var_10368 = relay.var("var_10368", dtype = "float32", shape = (9, 15, 3))#candidate|10368|(9, 15, 3)|var|float32
var_10369 = relay.var("var_10369", dtype = "int32", shape = (2496,))#candidate|10369|(2496,)|var|int32
call_10367 = func_10366_call(var_10368,var_10369,)
output = call_10367
func_10370 = relay.Function([var_10368,var_10369,], output)
mutated_mod['func_10370'] = func_10370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9614_call = mod.get_global_var('func_9614')
func_9616_call = mutated_mod.get_global_var('func_9616')
call_10397 = func_9614_call()
call_10398 = func_9614_call()
output = relay.Tuple([call_10397,])
output2 = relay.Tuple([call_10398,])
func_10411 = relay.Function([], output)
mod['func_10411'] = func_10411
mod = relay.transform.InferType()(mod)
mutated_mod['func_10411'] = func_10411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10411_call = mutated_mod.get_global_var('func_10411')
call_10412 = func_10411_call()
output = call_10412
func_10413 = relay.Function([], output)
mutated_mod['func_10413'] = func_10413
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10457 = relay.var("var_10457", dtype = "float32", shape = (3, 3, 5))#candidate|10457|(3, 3, 5)|var|float32
uop_10458 = relay.sinh(var_10457.astype('float32')) # shape=(3, 3, 5)
func_7871_call = mod.get_global_var('func_7871')
func_7874_call = mutated_mod.get_global_var('func_7874')
const_10462 = relay.const([[6,9,-1,-2,2,9,8,-3,8,2,-8,-8,-1,7,-1,-3,-5,1,-1,7,4,-5,2,3,-7,7,-7,10,10,-7,4,-7,4,7,8,-3,9,-5,6,-2,-4,-8,-4,2,-8,6,-10,-3,1,-2,-1,1,10,1,-5,-9,-2,1,-9,-3,-1,1,1,8,3,1,6,5,6,-4,-1,-10,-1,-10,-6,-7,1,10,1,4,-9,-9,-6,1,-10,-3,-7,5,-5,-8,7,10,5,-2,8,-2,2,2,-6,10,-9,9,7,5,9,5,-3,6,4,6,-5,-9,-10,6,5,3,8,-1,6,-7,1,10,6,2,5,2,-4,8,-3,1,-8,-1,8,1,7,-6,-9,-2,2,3,-2,7,5,4,-10,5,1,6,7,1,3,-4,-6,7,2,5,-6,-2,10,8,-10,7,8,-1,1,1,-1,-6,1,5,5,9,-4,2,-8,-3,-5,10,-4,-8,-4,8,-4,-2,-2,-10,9,-8,-2,-7,1,9,-10,9,3,-10,-6,2,-5,-5,-1,3,6,-3,2,-9,7,8,10,-3,7,-9,2,-3,6,-3,2,-7,7,-7],[7,3,5,-3,-1,9,10,10,-9,-8,-10,-2,-6,1,8,-4,5,10,9,8,-10,5,-2,1,-8,6,7,-10,-4,10,-2,-8,-10,-8,2,8,-2,-3,9,-6,10,-5,-8,3,10,6,6,9,-4,6,5,-9,8,-1,-5,-4,-7,-3,-5,-10,8,7,2,1,-6,-2,-10,8,-3,4,6,-5,6,1,-4,8,-7,-5,2,-2,2,1,-5,1,8,9,5,10,-2,5,-9,8,-8,4,-1,-10,10,-7,10,6,5,-3,-9,-2,-3,-7,-7,-8,-9,7,-7,-3,10,-6,9,-10,7,-3,-8,9,9,4,2,5,2,-1,10,-10,5,-1,-7,-7,6,-5,4,-6,2,10,-1,5,-6,-4,2,7,9,-2,-8,-3,8,9,-1,-4,4,-7,9,-8,-10,-1,8,2,5,6,-2,10,-6,-3,-5,-2,-2,-3,2,-8,-6,7,-7,3,-4,9,-7,-7,7,2,10,2,2,5,-9,-8,-3,10,5,-6,-10,4,-2,-2,4,3,-7,-8,-10,-5,-7,5,8,-2,9,-2,10,8,-9,-3,4,7,-10,-2,-9,1,-8,7],[-4,-10,4,-5,8,-8,-4,1,8,-1,4,-1,8,8,10,3,4,-8,5,-3,-7,-9,-4,10,10,-10,-5,-7,3,-1,1,-7,-9,-3,8,-7,-9,-5,9,-4,-9,3,-5,6,-6,-1,3,1,-4,-6,10,-5,-2,-3,10,-9,-10,-2,3,-3,5,3,5,-9,8,-1,-9,-9,-9,-3,8,7,-4,-4,-6,-5,4,-10,4,8,-5,10,5,8,-2,4,-2,-9,-9,3,-2,8,-6,3,-8,-2,9,-10,3,-8,-6,6,-5,-4,8,2,8,3,10,4,8,2,9,-2,9,-7,4,5,-6,6,8,3,-9,8,6,-7,9,2,3,-10,1,1,9,-5,-5,-3,8,-7,-4,-6,8,-5,-5,6,-8,-2,6,-6,-9,3,3,-5,2,10,8,6,-9,6,7,-4,10,6,9,-2,7,2,-9,-1,-10,7,-6,5,-4,-1,-5,-10,1,1,-9,10,-8,6,-3,6,-9,-3,-6,10,9,4,6,-9,9,-9,-4,-6,3,-10,10,-10,-1,-2,1,-10,5,6,-8,-10,-8,-7,10,-7,-7,1,-6,-4,6,-5,-2,-9],[9,-10,-4,-7,-1,-7,8,-6,-2,2,-8,3,4,2,5,3,-9,-2,-5,-5,3,-7,-5,-8,10,3,6,-3,-5,6,-6,-3,-4,-10,-6,-3,-7,2,5,-7,7,2,-7,4,8,2,-9,-1,-2,1,-5,4,7,2,-5,-5,-10,-6,2,8,1,7,5,-2,8,4,10,-3,-6,-8,-5,-3,-4,3,10,7,1,1,2,2,9,-1,-4,7,-1,-8,10,5,-2,-9,8,-6,-9,-5,-2,-9,3,-9,6,6,1,-8,-7,4,-9,-4,8,-8,-6,-8,-1,9,-8,-10,6,-4,2,-9,-4,8,7,-2,1,4,4,8,-10,7,7,2,5,-2,9,6,6,9,-8,-2,1,-6,9,-10,3,5,-7,5,5,7,-9,-7,8,10,-7,3,-10,4,-5,6,-2,-7,-10,-10,-10,-10,1,5,5,3,10,3,7,9,2,1,8,2,10,4,-1,8,4,-9,-1,-5,8,-10,5,-10,-5,-10,9,-3,-4,-1,-5,-6,4,-10,-8,7,2,5,-9,2,-6,-8,-6,5,2,-4,-7,-6,6,6,-10,1,2,-9,1,-6],[-4,1,7,-10,4,-4,8,9,-5,-9,-10,8,8,-5,-9,-5,5,-4,4,9,-2,8,-4,-4,-4,5,3,7,3,10,3,8,3,-8,8,4,2,-9,-9,-7,-6,-8,-8,-2,-9,4,10,-9,3,-10,9,-10,6,-9,-2,9,-9,-9,-5,5,-5,-7,-10,-8,8,-4,3,-9,-5,5,5,7,2,8,-9,3,-5,-1,-1,-7,-8,-5,7,10,-2,-1,-9,-10,6,-10,4,-9,8,-3,-8,7,9,8,7,8,-3,10,-7,4,-10,-8,-2,5,-8,10,-7,3,10,-2,9,10,-8,3,1,-9,-6,7,-6,9,-1,10,-5,-3,-4,5,8,-3,-6,-4,-6,9,-1,-9,9,9,-6,-7,1,7,9,-7,7,-3,-6,1,-9,-5,7,7,3,-5,4,9,3,1,8,-7,7,10,-7,9,-1,10,10,5,3,10,3,-5,5,-8,-5,8,5,7,-8,1,1,-9,-9,2,-4,1,4,-2,3,2,5,10,-9,-5,3,8,7,5,-10,8,-3,-9,-5,6,5,4,9,1,10,6,-3,-7,10,6,1,3,-3,1],[-7,5,-6,-1,4,-4,9,-8,-4,1,-1,5,-1,7,3,1,6,2,-7,-8,5,5,-4,6,-2,-2,-6,-4,-5,2,-9,-8,10,-9,-2,-8,-1,-3,-8,2,6,10,1,10,4,-4,4,10,-1,-1,-5,2,-3,-10,-3,-10,6,-2,5,3,-1,-4,8,-9,2,3,-8,-1,9,-2,4,3,4,-9,7,-10,-10,5,8,-8,-3,-8,-8,-4,2,1,-7,-8,-10,-10,8,7,-4,-9,-8,5,-9,-4,1,4,-3,-9,-1,-1,-3,-10,-9,-2,-1,7,7,-1,-4,3,-3,9,4,-8,7,6,10,-5,-4,4,-6,-3,3,-1,-8,-2,-3,-7,-1,4,4,-1,7,-3,-1,-4,-10,-9,-10,-9,5,9,2,-7,-1,-4,2,-1,-9,7,1,-6,8,-3,-8,-7,4,4,-2,-3,-3,-1,-2,3,-5,3,2,9,9,-10,-6,1,-3,-6,-6,-9,7,4,-10,-1,7,-5,5,1,-7,10,-10,-3,-6,7,9,-4,7,6,-5,4,-2,5,2,9,8,3,2,10,-5,1,4,10,5,9,-4,-4,-2,2,-4,5]], dtype = "uint8")#candidate|10462|(6, 220)|const|uint8
call_10461 = relay.TupleGetItem(func_7871_call(relay.reshape(const_10462.astype('uint8'), [1320,])), 8)
call_10463 = relay.TupleGetItem(func_7874_call(relay.reshape(const_10462.astype('uint8'), [1320,])), 8)
func_10294_call = mod.get_global_var('func_10294')
func_10296_call = mutated_mod.get_global_var('func_10296')
call_10474 = relay.TupleGetItem(func_10294_call(), 0)
call_10475 = relay.TupleGetItem(func_10296_call(), 0)
uop_10497 = relay.sin(uop_10458.astype('float32')) # shape=(3, 3, 5)
func_2056_call = mod.get_global_var('func_2056')
func_2060_call = mutated_mod.get_global_var('func_2060')
var_10505 = relay.var("var_10505", dtype = "int64", shape = (450, 1))#candidate|10505|(450, 1)|var|int64
call_10504 = func_2056_call(relay.reshape(var_10505.astype('int64'), [10, 9, 5]), relay.reshape(var_10505.astype('int64'), [10, 9, 5]), )
call_10506 = func_2056_call(relay.reshape(var_10505.astype('int64'), [10, 9, 5]), relay.reshape(var_10505.astype('int64'), [10, 9, 5]), )
var_10508 = relay.var("var_10508", dtype = "float32", shape = (3, 3, 5))#candidate|10508|(3, 3, 5)|var|float32
bop_10509 = relay.less(uop_10458.astype('bool'), relay.reshape(var_10508.astype('bool'), relay.shape_of(uop_10458))) # shape=(3, 3, 5)
uop_10518 = relay.sigmoid(uop_10458.astype('float64')) # shape=(3, 3, 5)
output = relay.Tuple([call_10461,const_10462,call_10474,uop_10497,call_10504,var_10505,bop_10509,uop_10518,])
output2 = relay.Tuple([call_10463,const_10462,call_10475,uop_10497,call_10506,var_10505,bop_10509,uop_10518,])
func_10529 = relay.Function([var_10457,var_10505,var_10508,], output)
mod['func_10529'] = func_10529
mod = relay.transform.InferType()(mod)
var_10530 = relay.var("var_10530", dtype = "float32", shape = (3, 3, 5))#candidate|10530|(3, 3, 5)|var|float32
var_10531 = relay.var("var_10531", dtype = "int64", shape = (450, 1))#candidate|10531|(450, 1)|var|int64
var_10532 = relay.var("var_10532", dtype = "float32", shape = (3, 3, 5))#candidate|10532|(3, 3, 5)|var|float32
output = func_10529(var_10530,var_10531,var_10532,)
func_10533 = relay.Function([var_10530,var_10531,var_10532,], output)
mutated_mod['func_10533'] = func_10533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9173_call = mod.get_global_var('func_9173')
func_9174_call = mutated_mod.get_global_var('func_9174')
call_10542 = relay.TupleGetItem(func_9173_call(), 0)
call_10543 = relay.TupleGetItem(func_9174_call(), 0)
func_10294_call = mod.get_global_var('func_10294')
func_10296_call = mutated_mod.get_global_var('func_10296')
call_10555 = relay.TupleGetItem(func_10294_call(), 0)
call_10556 = relay.TupleGetItem(func_10296_call(), 0)
output = relay.Tuple([call_10542,call_10555,])
output2 = relay.Tuple([call_10543,call_10556,])
func_10572 = relay.Function([], output)
mod['func_10572'] = func_10572
mod = relay.transform.InferType()(mod)
output = func_10572()
func_10573 = relay.Function([], output)
mutated_mod['func_10573'] = func_10573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8207_call = mod.get_global_var('func_8207')
func_8208_call = mutated_mod.get_global_var('func_8208')
call_10585 = relay.TupleGetItem(func_8207_call(), 0)
call_10586 = relay.TupleGetItem(func_8208_call(), 0)
output = relay.Tuple([call_10585,])
output2 = relay.Tuple([call_10586,])
func_10587 = relay.Function([], output)
mod['func_10587'] = func_10587
mod = relay.transform.InferType()(mod)
mutated_mod['func_10587'] = func_10587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10587_call = mutated_mod.get_global_var('func_10587')
call_10588 = func_10587_call()
output = call_10588
func_10589 = relay.Function([], output)
mutated_mod['func_10589'] = func_10589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10011_call = mod.get_global_var('func_10011')
func_10013_call = mutated_mod.get_global_var('func_10013')
call_10590 = func_10011_call()
call_10591 = func_10011_call()
output = relay.Tuple([call_10590,])
output2 = relay.Tuple([call_10591,])
func_10593 = relay.Function([], output)
mod['func_10593'] = func_10593
mod = relay.transform.InferType()(mod)
mutated_mod['func_10593'] = func_10593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10593_call = mutated_mod.get_global_var('func_10593')
call_10594 = func_10593_call()
output = call_10594
func_10595 = relay.Function([], output)
mutated_mod['func_10595'] = func_10595
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10725 = relay.var("var_10725", dtype = "float64", shape = (12, 12, 10))#candidate|10725|(12, 12, 10)|var|float64
var_10726 = relay.var("var_10726", dtype = "float64", shape = (12, 12, 10))#candidate|10726|(12, 12, 10)|var|float64
bop_10727 = relay.power(var_10725.astype('float64'), relay.reshape(var_10726.astype('float64'), relay.shape_of(var_10725))) # shape=(12, 12, 10)
uop_10734 = relay.exp(bop_10727.astype('float32')) # shape=(12, 12, 10)
output = relay.Tuple([uop_10734,])
output2 = relay.Tuple([uop_10734,])
func_10737 = relay.Function([var_10725,var_10726,], output)
mod['func_10737'] = func_10737
mod = relay.transform.InferType()(mod)
var_10738 = relay.var("var_10738", dtype = "float64", shape = (12, 12, 10))#candidate|10738|(12, 12, 10)|var|float64
var_10739 = relay.var("var_10739", dtype = "float64", shape = (12, 12, 10))#candidate|10739|(12, 12, 10)|var|float64
output = func_10737(var_10738,var_10739,)
func_10740 = relay.Function([var_10738,var_10739,], output)
mutated_mod['func_10740'] = func_10740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9586_call = mod.get_global_var('func_9586')
func_9588_call = mutated_mod.get_global_var('func_9588')
call_10753 = relay.TupleGetItem(func_9586_call(), 1)
call_10754 = relay.TupleGetItem(func_9588_call(), 1)
output = relay.Tuple([call_10753,])
output2 = relay.Tuple([call_10754,])
func_10755 = relay.Function([], output)
mod['func_10755'] = func_10755
mod = relay.transform.InferType()(mod)
mutated_mod['func_10755'] = func_10755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10755_call = mutated_mod.get_global_var('func_10755')
call_10756 = func_10755_call()
output = call_10756
func_10757 = relay.Function([], output)
mutated_mod['func_10757'] = func_10757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10572_call = mod.get_global_var('func_10572')
func_10573_call = mutated_mod.get_global_var('func_10573')
call_10892 = relay.TupleGetItem(func_10572_call(), 0)
call_10893 = relay.TupleGetItem(func_10573_call(), 0)
func_949_call = mod.get_global_var('func_949')
func_954_call = mutated_mod.get_global_var('func_954')
var_10907 = relay.var("var_10907", dtype = "float64", shape = (32,))#candidate|10907|(32,)|var|float64
const_10908 = relay.const([-0.597320,-4.793392,8.456893,3.927434,-6.905908,6.790042,0.038787,-5.497017,-5.068218,4.420285,-9.186265,9.760142,0.119470,8.546715,-5.719233,5.644689,-4.420110,-4.366300,-1.139341,0.662567,-9.506476,8.373728,9.279917,-4.184085,1.896151,-2.859244,4.876243,-1.114091,3.064639,1.516705,4.674458,0.001883,-7.866367,-4.335050,1.081757,-5.005693,-7.550095,0.934613,5.926885,0.725557,-7.938372,-5.759674,0.941028,-3.634073,-7.204622,-9.922071,-9.266529,-7.269217,8.122359,6.316661,-5.210170,4.963594,6.542274,-0.999988,-7.179163,-2.627703,5.583938,-6.660423,5.306043,1.242871,9.084196,-3.415112,0.350737,-9.551087,3.840615,-5.813290,8.732852,-2.222061,-7.698285,7.465184,3.758686,9.940681,6.069320,8.438032,-6.080114,-6.277519,4.048841,2.965889,8.258510,0.429263,-0.634325,-2.647573,5.135079,-8.287594,0.970603,-7.406518,2.065630,5.911408,-0.133695,-0.065236,-3.391485,-0.151596,2.797207,-6.295149,3.329316,5.652235,1.473539,-8.532281,-9.243707,2.717080,-6.205740,-7.543839,1.368558,-9.248075,7.118554,5.153476,-0.682108,5.478747,8.107091,-5.162494,6.498793,-7.827958,-7.869901,-4.947971,-9.001083,-2.185973,8.538583,-2.109592,7.991962,-3.061026,6.710805,-1.904639,3.687663,0.742574,7.681512,-5.216037,5.575864,-0.349599,9.705565,9.297356,-7.279806,-5.447670,-1.160555,-3.703211,-3.934544,-6.640390,-0.356127,2.271334,-5.003769,4.739527,-7.851450,3.850997,-8.802060,8.467418,-9.692655,5.388553,1.031581,-5.091865,9.539024,1.567901,-6.683294,3.557410,-5.385153,-3.806542,-1.407679,-8.188413,8.713658,-6.046736,4.791284,3.061279,-2.516618,-7.032497,1.299661,-3.771129,-1.171443,-3.710703,8.694867,7.385024,-7.176305,7.627714,6.515291,8.405101,7.616633,7.616381,-9.855117,-3.568714,7.589807,-6.436910,5.491678,4.107931,-2.794998,-5.872677,-8.161256,7.144316,-3.828022,2.220640,-8.975628,-2.984091,-4.875102,3.365628,4.613052,-0.329813,-9.175833,5.105288,7.523620,0.878070,-3.832827,1.152643,-5.519326,7.451980,4.772135,-5.983952,6.656166,3.597643,-0.820769,-2.004082,-6.885109,6.903014,0.522427,3.547757,2.182036,-3.444652,-8.794497,-6.140780,-0.146115,7.310284,-8.880827,-0.478028,6.256110,-3.499088,-1.658663,2.161767,6.811373,8.027358,0.587828,8.115467,-6.289069,-8.820532,6.525234,6.475655,-7.860398,-3.489717,-2.755815,-8.954291,-1.972578,-9.407576,-8.470302,-7.148566,-2.795857,-9.457875,-5.364818,-3.008655,-6.919266,7.004713,-6.076499,5.318576,-9.452306,4.540350,-5.386482,-7.670724,-4.574771,4.991101,-7.214634,-9.007997,-3.605186,-1.762709,-1.970242,7.800501,3.298686,0.096880,1.561372,-5.760493,-6.258723,-7.481767,4.853407,4.346379,7.410434,-8.468574,-7.538900,-2.366390,-3.761970,3.490723,-5.164260,3.845062,-1.226576,7.555062,0.323679,0.468819,4.367244,2.490831,-4.254143,4.416853,1.044177,2.356715,-6.769554,-9.666661,-7.483900,-5.017824,-7.218375,-6.208285,-3.225230,-0.843288,5.000336,5.787949,-6.073109,5.389471,2.517240,-1.412343,9.896193,0.872692,-7.986749,-9.814417,0.067059,0.074387,-0.316049,-6.454208,4.706329,-5.554070,-4.372473,3.394847,-6.725061,0.164631,0.616453,4.541500,1.356547,8.637633,-3.950152,-8.567344,-7.971575,-2.763323,3.158325,8.243078,4.889243,5.644130,0.611486,-5.913251,-5.079537,4.573147,-4.100058,-0.078689,9.022913,2.017415,5.560041,-8.503701,9.866006,-9.215631,3.184024,1.636571,9.878284,9.211214,4.963955,9.230536,1.288683,-7.836436,9.162359,-6.964920,-4.833899,-7.600531,7.489312,4.330774,8.819384,-5.600976,6.789203,-1.607744,-2.864102,2.767029,4.819244,5.459215,3.859117,-4.420452,-4.127727,-1.402675,-9.101024,-7.707107,6.004480,-7.094216,4.955336,0.092104,-2.864282,-4.646082,6.032462,5.724007,-2.700968,-9.122234,-6.244594,-7.744590,3.214283,6.545753,6.328410,6.620758,6.006154,-5.431118,-2.892342,3.808451,6.194184,-0.657092,8.575567,9.461074,-1.893702,0.105920,6.408122,-8.982762,-3.323958,-4.832834,2.579951,-3.855189,-5.170694,-3.025526,5.768706,3.771854,4.965346,4.941673,2.006337,-5.013767,-9.676499,-4.891626,4.518607,-3.251514,-8.627854,5.653087,8.609519,-4.856576,-5.776240,-9.731533,-1.462626,-2.694057,5.167581,-5.387408,3.368520,7.011697,0.552020,7.182611,-9.083677,-5.707896,-9.455386,-5.894317,-0.056258,8.166223,8.328880,-8.709289,-9.598183,8.804522,-0.829960,-0.915109,-2.311766,-3.637100,-5.969333,-4.133698,4.135473,8.820981,5.464108,2.560820,6.846345,-7.059596,3.159340,-6.603535,-7.441756,0.924932,-0.499800,-5.212397,7.440413,-6.891543,-5.464475,-7.537012,8.439348,2.646946,-6.061646,-6.747946,-0.010430,-7.786786,5.873416,7.377172,7.071641,9.689925,-5.664938,-1.534024,-5.388531,1.352824,-2.649887,-5.012799,-1.885662,-0.089196,1.147432,-6.212182,7.824958,6.117986,2.556700,-3.494557,7.271505,-0.548757,1.953081,-1.385056,0.410133,-2.361854,4.857927,-1.018782,3.176394,-5.709059,9.686562,-6.543006,-8.892779,-9.950607,-1.969977,-2.942512,-0.564247,1.233436,0.512555,7.964640,-4.503495,-4.378133,-2.962718,7.520659,4.141605,-1.185667,-1.169234,-1.297381,-5.794692,-4.228757,9.181743,6.653555,-6.975543,-9.891693,-3.333829,-8.899741,0.952840,-7.005348,1.571161,1.572965,-1.041078,-2.688926,-0.235157,4.759344,0.562601,7.789591,-2.500288,-1.839189,-4.289766,-2.277963,-8.896003,3.270448,-0.191458,8.076536,2.555001,-6.173594,6.466673,-6.864298,3.853755,-9.693717,2.842860,-6.534140,-5.111070,-6.220294,8.644359,2.705170,-5.838099,6.646799,1.961047,-9.419193,-5.014510,-9.258605,6.506395,5.589848,-6.800860,6.377082,-8.584649,1.622293,-7.800979,7.717817,-3.221191,4.584636,3.367570,4.057018,-1.222464,1.269251,2.619646,-3.168985,-9.335187,2.942100,5.553019,-3.224425,-6.282370,4.281187,-7.145368,-8.102937,0.766136,7.399512,0.458888,9.991490,-8.993630,-7.066046,-9.744977,9.905859,-4.980513,8.965365,5.086026,4.287687,1.061820,3.949045,8.888480,8.928606,4.245704,9.051232,2.936383,-6.523859,4.896828,1.265615,0.220033,-0.105976,-4.939971,-9.376457,-6.923881,2.785287,-4.233670,0.130719,2.920450,-9.746601,0.914165,6.645092,7.770152,-3.690678,-3.222535,-3.968892,-9.103048,0.300326,9.409123,0.915184,-6.177986,0.373142,6.762068,-6.852851,6.758906,6.822906,0.801618,-0.774817,4.463027,2.299552,-6.195697,3.993289,1.651620,5.477304,-6.905016,-4.331916,-8.626918,3.829792,-7.365985,-5.565999,5.573513,-4.114262,-3.780948,2.983011,7.693605,2.064779,-7.112583,7.051163,4.013429,-0.372532,0.399885,-1.802404,9.538569,0.728955,-0.469867,8.672665,3.801638,-2.043438,-9.397024,1.108145,-1.129201,-7.048227,-3.849953,-4.322987,-9.088714,6.924226,6.856088,6.854245,-4.475335,-4.911904,-9.116725,-9.909260,5.323031,1.032435,-3.112746,-3.346481,1.621451,7.550559,-5.967490,-0.292537,1.200702,-7.518995,1.620799,1.969743,-2.157491,-9.325987,6.206006,-8.681207,0.089673,3.218903,9.463944,9.123508,-1.365303,-5.800658,-9.963153,0.710320,-6.252482,5.075901,-0.693472,0.914919,-9.148074,4.671023,-8.514506,6.699785,-9.214886,9.828716,-4.613378,-8.622221,-9.457678,7.292693,3.101232,-1.896170,-0.138491,-3.727436,-2.083129,4.153497,3.111813,-5.355814,-1.375194,-2.403173,-1.982868,-8.091926,-5.605967,7.536297,2.096014,4.624654,-5.143122,5.529176,4.257134,2.741317,5.754682,7.489234,7.535467,4.386588,0.683877,-3.999895,9.116876,-1.928036,-3.144191,-9.680849,-4.960968,-7.863074,3.014151,4.584776,9.066568,-4.475610,0.668502,-1.447113,-9.453935,-5.504163,2.833657,5.160599,-6.535815,-4.962606,-5.447259,-4.085821,-2.498221,2.838752,-5.480682,8.438703,0.950596,1.911531,4.044428,0.091962,8.816868,8.014852,4.557612,0.879784,-7.297498,-0.521242,1.278494,0.081879,5.431676,8.367529,5.501134,-3.921780,3.280389,3.494670,9.004384,-6.545337,-6.541190,0.457470,-9.736065,8.480126,-7.530011,8.663780,1.954945,8.167265,3.830717,-4.993086,6.317355,0.254054,-6.513320,4.539076,-6.457654,-5.337469,8.612310,-8.230450,3.668846,-6.925578,1.960624,4.286250,-1.670782,1.418496,7.069425,-5.648517,-7.096724,7.569261,-6.458465,-8.258914,-0.474141,-5.046242,-5.875527,-7.426975,-3.616575,1.893479,-6.618163,-2.512305,-8.022055,4.558477,-1.693035,-7.914536,2.265549,6.427638,1.335779,-4.666465,3.470113,5.855240,1.760600,8.659893,1.370284,7.683597,5.632715,-1.442663,-0.998195,9.040685,-8.561890,1.468845,-0.088596,1.119052,8.568244,0.270195,-3.832780,-5.029982,-8.133679,-1.017991,2.990201,-6.448438,2.727046,-5.170307,-8.662309,-4.361468,3.052052,-9.259671,3.218196,8.816865,-7.382645,9.594664,-2.835956,-5.531678,3.959139,-0.662320,3.033443,4.306195,5.939416,-6.158167,5.410483,-9.410872,-2.582249,-4.427716,3.243041,-2.348806,3.624925,-8.007451,-1.593955,-5.307314,1.660027,-4.678021,4.341857,-3.932588,4.642944,-2.957508,6.152230,7.120160,-8.637877,3.415030,-5.562810,9.775568,7.838902,7.191501,-3.596182,3.748622,-4.767904,-3.537516,2.111042,-0.731026,9.293324,-2.593109,-3.674216,1.676161,3.245590,-7.883368,-1.774087,0.715267,6.870798,3.815514,6.290282,-0.116645,-4.544218,4.773384,7.010343,-0.223325,2.708037,5.046267,4.719713,-2.809326,-9.212838,-5.257421,-8.174813,-0.644021,-1.221646,3.119939,4.798461,2.980010,2.442160,8.060532,-0.833030,5.458406,-8.876336,7.628885,1.280587,6.926726,-4.887034,7.772780,1.215033,3.618875,0.766266,3.541191,-5.036560,5.051713,-6.690277,-9.920225,-6.834075,-0.885830,-2.481497,-3.690226,4.320441,7.055332,9.186716,-0.727155,5.541670,-5.226673,-7.302388,8.074474,-3.813928,-5.403853,0.588706,-4.784921,4.032435,5.007005,-4.881729,3.421586,1.620258,-0.129962,8.354204,4.922076,-1.832508,-9.424489,-0.581343,3.020669,-2.645452,9.009926,-7.050370,4.516788,-7.298106,6.315092,1.783484,-4.204653,-5.088540,4.284113,5.847758,-2.884333,6.782133,-2.456805,-1.547109,-2.075068,-9.205624,-2.840112,2.754065,-3.367136,-0.205120,7.627594,-2.229503,-9.711149,-5.569721,1.564633,5.213817,5.434442,-5.953250,-8.344838,1.084699,1.185402,-4.966219,-1.178803,4.828425,6.259996,-4.502823,0.076094,-5.864803,7.896612,-5.457509,-9.241454,-6.994457,-5.014921,9.548191,5.488424,1.402007,-9.990280,5.401681,-3.563105,4.080395,-9.738840,-0.233505,2.132625,-1.613369,5.453307,4.201856,-2.108948,1.007038,-6.283974,3.259522,1.524577,-1.434699,-1.124601,-7.714934,-6.824840,-3.243572,1.913309,0.985529,1.641585,-0.837309,-7.275090,-2.071630,8.862806,5.138447,-2.196011,-7.656915,6.407308,-7.903704,-1.986770,-0.653590,-1.532011,2.881182,6.692594,-6.200692,-2.169045,5.005922,-2.287956,7.109007,1.168979,2.301713,5.575923,6.180766,-4.915288,-3.604006,-1.278196,-6.744973,5.254506,8.616593,-9.284198,9.973990,-9.133020,7.968757,-5.677820,-6.642799,5.082566,-0.114693,9.855461,6.696225,7.279615,-0.514482,0.066599,-6.887606,8.255764,1.661523,-1.262010,-3.911853,-7.125853,3.040523,4.851321,-5.598721,-7.164170,2.317045,6.381852,9.403674,6.083764,-4.540761,-4.728165,1.131740,-5.581749,5.356407,-0.204752,1.867578,1.988113,5.102250,5.355886,6.416977,-0.282537,9.975992,-0.993019,-2.764721,0.666502,-4.575340,-6.306593,7.530695,-4.026612,4.242314,-7.282464,6.381989,9.137444,-0.854470,2.270251,-8.676961,6.856654,8.109072,5.611741,0.183078,-4.401485,-8.385053,1.334879,-5.841605,0.057098,-5.342262,-3.824245,3.425425,3.355002,-5.558463,-6.212335,-2.147411,9.965664,4.499026,-6.819006,7.149935,-9.387614,8.669314,3.061469,6.177485,6.522275,-0.316498,-2.385921,9.274740,-8.265746,-1.555165,9.953529,-1.150100,-5.884159,4.104197,-1.177816,1.964370,-2.702530,-8.251905,-4.888071,-3.883124,-7.184359,-3.143643,2.947917,-0.401111,3.954929,-7.325586,7.315473,4.208967,-9.640738,-6.956555,2.002883,2.817508,-7.354330,5.731256,9.992778,-7.359895,1.033226,-7.279155,4.849977,-7.095061,1.310974,8.676836,4.785039,-5.686461,6.152275,-0.616188,3.549989,-8.962843,1.517652,-2.449802,-4.739680,-4.328213,0.944010,-0.071742,1.338350,-5.843191,2.318533,-8.407478,-9.112882,-9.697606,7.409642,3.259470,-3.317911,8.680555,2.723003,-7.660321,-2.351280,8.916947,-7.268896,-9.247854,-8.248385,-1.934111,-8.850392,-0.670872,-8.988803,-8.215847,4.088899,-2.238787,-0.370279,-2.088419,2.256493,6.213502,7.985655,-0.139701,-4.188636,-7.024732,9.278523,-8.288858,7.719179,-3.386853,6.070111,2.822858,-3.347857,-2.296237,1.610231,7.580967,0.980584,7.727836,0.431486,-3.353679,-9.807204,3.690704,-0.060294,-5.590909,-6.131456,8.978308,4.136795,8.334252,-5.714133,-7.806486,-0.173265,-0.749195,-3.489536,-0.424830,6.071989,3.085626,6.897856,2.281869,-8.239198,6.399833,3.650758,-1.906764,-7.661401,-6.530563,5.230754,-0.474939,-9.770096,-8.178414,-0.588182,0.037397,1.709781,-3.610428,6.551168,-4.451780,9.791867,-4.731006,-0.624314,2.418168,-9.036592,0.714700,1.031055,6.310338,5.947074,-7.897897,9.712425,4.967581,0.097144,7.406197,-1.139708,-2.855195,-1.115976,-3.114777,-0.555996,4.760048,9.109296,-6.952607,-2.836822,0.277256,6.824105,-6.782736,7.922188,-6.747593,9.140238,4.389318,5.385185,0.157600,-5.152030,6.428371,9.338089,-8.411953,9.473143,3.773209,-2.126416,4.273399,4.231965,-7.644563,-0.317395,6.004931,4.141463,2.133832,-1.672383,-1.218974,-6.833925,7.984462,-5.347504,-9.825640,3.149352,5.649938,-1.495006,6.465525,-7.135255,-4.889134,-0.131020,-3.022325,-0.747080,3.429584,-7.124437,-1.838855,5.063978,5.466046,7.310529,1.738592,6.626021,-4.457738,-8.021719,4.875906,-5.140107,3.375780,2.615091,-5.618550,6.780838,4.992199,3.401735,-9.210713,1.407938,-1.139975,4.496769,9.912246,-8.874405,2.792062,-0.272224,-8.090033,-7.917324,8.674899,3.463233,-3.394425,3.358356,8.629520,6.642486,2.321989,7.974474,7.848988,-0.014071,3.725939,-9.898506,1.993529,-2.407734,5.317377,2.498069,-0.543717,-5.525879,3.369558,-5.986939,-0.859331,-2.901958,6.952669,7.065021,-4.884755,4.003636,4.777187,-2.526132,-2.996514,-7.504597,-3.892873,6.261131,-0.167559,7.551561,1.791662,-4.919165,6.433507,-6.872743,-3.796134,0.518877,3.261056,8.551281,-5.995867,4.726913,-8.131926,5.388646,0.800048,6.288296,-1.180819,0.937354,7.960235,-6.612049,-8.670856,1.435189,-0.702924,1.070239,3.349235,-4.346048,9.936729,7.449508,3.636450,-8.772036,4.096091,5.867797,-4.929481,7.310740,-9.276733,-7.441626,-0.673375,-8.275909,-3.404759,-2.530585,-9.606575,2.405190,-1.979997,7.067643,4.396208,-4.756364,0.276724,1.219772,-9.611975,4.296612,-2.104562,4.401804,2.646230,5.592253,-9.957244,-4.845247,3.536411,-6.467117,-3.652531,9.686249,0.324589,-0.550381,0.141789,-3.524978,-8.109817,4.412118,1.099093,-1.518403,-8.899536,-1.248520,4.966951,7.268495,-8.160891,3.530034,4.749326,0.314450,-0.955441,3.562445,5.920415,-7.321210,-0.890854,-6.314220,-3.585963,-4.658603,-0.549771,4.948947,9.223461,-4.926291,-3.822198,-5.805817,0.388191,-1.641080,9.401155,3.555376,7.136434,2.140209,5.246524,9.637019,-5.738580,-8.402119,-9.014464,-9.618006,-7.828736,-2.031471,-4.296198,-3.814392,-9.386069,-0.221865,4.382080,-1.596673,1.383449,-0.968219,5.768313,-9.612424,4.095002,-1.792311,0.242497,-0.115722,-1.091006,-3.207148,0.594901,-1.416193,-9.328312,-1.300685,-7.131993,-8.970985,-7.518326,0.604138,4.588754,9.202891,-5.579290,-8.140109,-0.726716,-2.154634,1.713784,-8.147707,5.049421,-5.463187,1.014355,3.112217,8.102842,2.921282,-3.327128,9.545752,-4.299390,9.415990,1.475421,-0.591812,-2.618447,-7.593759,-5.750853,-0.517988,8.448800,8.772570,1.995458,-0.778371,-8.659886,-8.848011,-0.320059,-7.332466,-6.184485,-2.689839,-6.993522,-4.564893,9.396184,-7.305652,5.522690,8.200621,-7.163394,9.991356,-3.755162,-4.454021,8.346940,0.583866,3.290975,-3.880024,8.693388,6.945874,-1.197574,-3.479371,-7.219243,8.666703,-3.672532,-4.638241,0.144052,-3.782135,2.108400,-9.099621,-1.677143,3.047847,-1.360876,1.029269,-3.682923,8.600659,-8.686439,-7.124682,-4.602056,-9.476680,-0.060116,7.753910,-1.785121,7.861155,6.523393,-2.993843,-0.352564,2.281801,-9.356138,-3.658062,0.799186,2.114446,-4.150661,-8.895499,8.722415,8.047101,3.475464,6.968593,-9.063619,6.861043,-7.276933,8.827844,8.190211,6.664478,-2.943348,-2.585367,8.876758,1.564808,0.249950,4.224090,8.974592,1.132167,5.385331,-4.405124,6.421013,6.507183,-2.173435,-1.342085,7.986627,7.083739,-6.000087,9.458832,8.351900,4.598677,-1.459032,9.172016,3.930690,-2.924700,5.652695,-3.248680,7.313373,-9.294321,3.443171,3.381825,1.913373,-3.206263,8.124514,4.305032,-7.593790,9.382133,4.164370,-2.547309,0.123443,-3.760347,-3.815449,-7.177873,-2.438898,5.223309,0.586410,2.039432,5.317688,-9.046381,0.488812,7.513582,-7.987197,8.642058,0.970485,-4.395429,-0.804549,6.036907,-1.691972,-9.262577,-3.554233,-3.400777,9.339793,-1.220447,4.006051,2.324490,3.786924,-9.439539,3.927886,4.136006,-1.506731,-7.733284,-0.050797,2.701426,8.979649,-1.664416,2.327959,9.138190,-0.060863,6.941688,8.174382,-6.970560,4.784972,-7.335999,-6.752759,4.199457,-5.802372,-2.466123,7.073649,7.102784,6.343025,-1.359391,-5.692593,3.344160,-4.037920,-4.735273,2.923706,-7.824186,1.179991,-1.968793,-3.474429,-0.567236,9.916516,-1.628499,-4.011376,4.263409,5.574899,-3.058119,3.437277,-3.898603,-4.828121,3.111378,2.796292,-5.953637,5.843395,1.374917,-7.691583,-3.767708,-0.497510,-2.637197,-4.040560,-8.069970,-8.524313,5.154541,9.508818,9.379242,-7.509038,3.791270,-0.435424,-9.897941,-0.814926,6.061568,-5.255627,-0.775392,-2.853851,0.694805,-1.328856,-0.388762,5.095798,9.687844,3.817649,-3.900132,2.262847,-1.092080,-1.105988,8.178812,-9.712920,2.431974,-8.973760,0.614753,2.140924,0.309425,-1.108580,-3.189075,2.198872,-3.826601,-1.282542,-3.505027,6.740857,3.122654,-8.864036,-6.668701,7.854423,2.602106,-4.966325,7.164402,5.383331,1.766726,-7.569639,4.556301,4.482004,8.037252,7.806660,-6.609398,-1.389717,-1.009787,-3.169052,4.230024,-4.606804,-3.320438,2.523324,-7.127779,-7.251821,-1.842580,8.433076,4.608601,-8.672120,-9.315810,-1.524721,-0.186589,-5.792032,9.985355,8.497670,6.306126,7.442154,-0.287603,1.655204,-0.859338,6.578691,-9.805968,-7.901084,3.208170,-9.280036,-2.985830,-6.703372,5.207872,9.926722,-8.965671,8.681679,1.756962,6.020868,4.697858,-3.747622,-6.778620,9.412846,3.488394,-3.180675,-3.252887,-2.862962,-4.852389,7.262620,-5.725418,-3.592206,8.889869,-5.530733,2.517974,9.789158,-0.941320,-5.384929,8.101818,3.758848,2.959539,5.538150,9.175671,2.705907,2.706908,0.722924,0.962467,-0.523535,-0.756534,7.716064,-1.610440,-7.871762,5.591091,6.192474,-3.942380,5.866248,5.276866,8.103400,-7.261037,-9.760807,4.613586,4.769584,3.262239,-9.934127,-2.812946,3.133835,-8.235419,5.438717,-6.315166,-5.715587,-2.086557,1.159121,-1.340740,-8.320414,9.923244,-2.682931,-1.325044,7.304246,9.856765,2.240052,-7.519084,-2.103281,8.975727,-0.249880,2.133430,-2.844705,-4.329842,0.824648,2.647273,3.258217,-0.474797,0.770780,-5.607844,-0.891600,-5.514401,2.706660,1.590889,0.466036,-1.024858,-5.852359,-4.987651,8.238184,-0.127210,-5.980922,-3.355559,-2.054738,0.589208,7.612940,5.248196,-2.440900,-6.512052,-9.663684,6.052403,-3.170970,0.030343,4.484643,4.717296,-0.876513,6.552738,3.630321,-6.689832,-5.152185,-1.871283,6.947163,-1.316136,2.568291,-0.282553,-8.420345,-9.429514,0.335518,4.516188,7.737874,4.483769,1.634119,-8.582133,-8.656815,-7.724065,8.666635,-8.153281,-7.784563,-3.499103,5.924638,8.374924,-5.022503,-7.471845,1.836636,2.617343,4.629315,-7.655203,1.822793,7.630604,-0.704866,6.496325,-1.844355,-0.061022,-0.805355,7.846410,6.991465,3.960794,-4.633662,1.997388,7.683225,-3.759138,4.155957,7.794020,-1.087576,-7.497087,4.032980,-9.122468,-9.628045,-8.322137,7.328569,-6.417482,6.699900,-1.589532,-4.596819,8.493026,-6.103652,-5.009540,5.717652,8.852334,-6.074289,-2.020265,0.415500,-4.227217,6.664757,-3.311391,-4.081831,-3.398490,-1.426518,9.992008,-8.187321,-6.619257,-9.589482,4.638026,3.981576,6.818911,-6.993506,1.755403,-8.680566,9.592632,-3.983454,-2.963872,5.963902,-0.785559,-3.923243,-3.408841,0.070001,3.630836,9.384886,5.105084,6.558522,-5.669838,-1.014050,9.767091,6.300080,-3.507998,-1.558892,-9.885385,0.710095,3.764718,-4.728492,5.966729,1.611473,-7.539676,5.624275,1.637701,-1.446520,-7.492136,1.672514,-6.855349,2.090994,-1.962481,8.768467,5.328534,-6.328380,-2.062281,-4.727426,-6.475301,8.683028,-0.497352,-1.299879,5.407530,2.751636,3.491888,-9.527864,-9.466343,-9.733584,4.176376,8.835698,9.136658,-6.112947,4.458243,9.472127,-2.110069,-1.621657,1.381045,-2.832496,6.735280,-6.642602,-7.296176,-4.256531,-8.940055,5.937712,8.166580,-0.083982,-5.764589,-7.011322,3.635166,1.684068,-3.758923,-0.879079,-3.460140,1.226028,9.103845], dtype = "float32")#candidate|10908|(2080,)|const|float32
var_10909 = relay.var("var_10909", dtype = "float64", shape = (192,))#candidate|10909|(192,)|var|float64
call_10906 = relay.TupleGetItem(func_949_call(relay.reshape(var_10907.astype('float64'), [4, 2, 4]), relay.reshape(const_10908.astype('float32'), [2080,]), relay.reshape(var_10909.astype('float64'), [192,]), relay.reshape(var_10907.astype('float64'), [4, 2, 4]), ), 5)
call_10910 = relay.TupleGetItem(func_954_call(relay.reshape(var_10907.astype('float64'), [4, 2, 4]), relay.reshape(const_10908.astype('float32'), [2080,]), relay.reshape(var_10909.astype('float64'), [192,]), relay.reshape(var_10907.astype('float64'), [4, 2, 4]), ), 5)
output = relay.Tuple([call_10892,call_10906,var_10907,const_10908,var_10909,])
output2 = relay.Tuple([call_10893,call_10910,var_10907,const_10908,var_10909,])
func_10913 = relay.Function([var_10907,var_10909,], output)
mod['func_10913'] = func_10913
mod = relay.transform.InferType()(mod)
var_10914 = relay.var("var_10914", dtype = "float64", shape = (32,))#candidate|10914|(32,)|var|float64
var_10915 = relay.var("var_10915", dtype = "float64", shape = (192,))#candidate|10915|(192,)|var|float64
output = func_10913(var_10914,var_10915,)
func_10916 = relay.Function([var_10914,var_10915,], output)
mutated_mod['func_10916'] = func_10916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10166_call = mod.get_global_var('func_10166')
func_10167_call = mutated_mod.get_global_var('func_10167')
call_10977 = func_10166_call()
call_10978 = func_10166_call()
output = relay.Tuple([call_10977,])
output2 = relay.Tuple([call_10978,])
func_10979 = relay.Function([], output)
mod['func_10979'] = func_10979
mod = relay.transform.InferType()(mod)
output = func_10979()
func_10980 = relay.Function([], output)
mutated_mod['func_10980'] = func_10980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9420_call = mod.get_global_var('func_9420')
func_9421_call = mutated_mod.get_global_var('func_9421')
call_10981 = relay.TupleGetItem(func_9420_call(), 0)
call_10982 = relay.TupleGetItem(func_9421_call(), 0)
output = relay.Tuple([call_10981,])
output2 = relay.Tuple([call_10982,])
func_10987 = relay.Function([], output)
mod['func_10987'] = func_10987
mod = relay.transform.InferType()(mod)
mutated_mod['func_10987'] = func_10987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10987_call = mutated_mod.get_global_var('func_10987')
call_10988 = func_10987_call()
output = call_10988
func_10989 = relay.Function([], output)
mutated_mod['func_10989'] = func_10989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10411_call = mod.get_global_var('func_10411')
func_10413_call = mutated_mod.get_global_var('func_10413')
call_10990 = relay.TupleGetItem(func_10411_call(), 0)
call_10991 = relay.TupleGetItem(func_10413_call(), 0)
func_2056_call = mod.get_global_var('func_2056')
func_2060_call = mutated_mod.get_global_var('func_2060')
var_10993 = relay.var("var_10993", dtype = "int64", shape = (10, 45))#candidate|10993|(10, 45)|var|int64
call_10992 = func_2056_call(relay.reshape(var_10993.astype('int64'), [10, 9, 5]), relay.reshape(var_10993.astype('int64'), [10, 9, 5]), )
call_10994 = func_2056_call(relay.reshape(var_10993.astype('int64'), [10, 9, 5]), relay.reshape(var_10993.astype('int64'), [10, 9, 5]), )
func_6352_call = mod.get_global_var('func_6352')
func_6355_call = mutated_mod.get_global_var('func_6355')
const_10996 = relay.const([4,-8,-6,-7,-8,5,7,8,-9,-10,-4,-8,4,-5,9,-7,-6,5,3,-2,-1,8,-8,-9,7,-10,10,5,-5,2,-6,8,5,3,7,1,-2,-8,-5,7,-8,5,6,-3,2,-6,-8,10,10,-1,9,-7,-1,3,-3,10,-9,1,-4,-6,-2,5,-7,-3,-8,-1,8,-2,-4,5,-7,-9,9,-2,4,9,10,-8,-1,-1,-7,8,2,-4,-6,2,-3,10,10,-5,9,2,10,-6,3,9,-2,7,10,-2,2,10,6,-7,1,3,-6,1,7,8,-7,-3,-8,6,-4,4,4,-1,-3,7,8,6,-4,-3,-6,-2,10,3,8,7,6,7,-5,-10,-7,-4,6,-3,1,-3,9,-10,-3,-8,-10,4,-4,8,1,10,5,-3,8,-5,-3,5,-6,-10,6,1,-1,-4,7,-6,1,6,-4,1,6,10,-4,9,8,10,-5,1,-7,-3,-10,5,-9,-7,2,4,4,7,-8,8,6,-1,-1,1,9,6,-4,-1,2,7,-8,1,-4,-9,-5,-8,7,3,2,-7,9,10,-4,8,1,-9,-6,-10,-7,5,-6,-4,-4,10,-1,9,-10,-3,2,-10,9,-1,-10,-7,9,-8,9,-5,-8,-1,2,1,10,6,-7,6,-8,3,9,-2,6,-1,-3,-7,1,-2,-9,3,-8,1,7,-3,6,2,6,4,-5,6,-1,-9,-3,5,3,-1,-9,6,2,3,-3,-5,-9,2,4,-2,-5,9,-1,9,-4,-2,-5,-9,6,-6,6,-2,2,9,-4,-3,1,8,-8,-5,-9,5,5,-2,-7,2,4,8,-7,-2,-9,1,-10,-1,8,-3,5,3,-2,-1,-5,-2,-8,-3,-9,-8,-1,-8,10,1,7,4,-10,2,-2,-2,-7,-6,-7,1,-5,4,-10,8,4,-7,-1,-3,-8,4,-9,8,3,2,-6,-7,2,8,-4,3,6,-8,-2,10,7,1,10,-3,-7,4,8,4,-5,-3,9,-8,5,-1,-9,7,5,-2,-1,-10,10,10,9,9,6,-2,9,9,-6,-2,-1,10,1,3,-9,-8,8,10,-4,9,4,-5,1,-8,4,1,1,1,7,1,6,-8,1,-2,-8,7,4,4,5,4,2,-7,7,4,-2,10,8,4,6,4,-1,-4,2,2,-10,9,2,-4,3,-2,4,-7,-2,10,9,1,-7,-4,-5,-10,-3,-6,4,3,-9,-6,-9,-3,-4,-10,-1,2,8,-10,-2,-7,-9,9,4,-5,-7,5,-4,8,3,10,6,3,7,6,-4,-4,5,-6,-5,1,-2,7,-5,5,-10,-2,-6,-2,-8,2,-1,-5,-10,-3,-4,7,9,3,9,-1,-2,7,10,10,-10,-2,-9,-5,-7,-5,5,8,-8,-7,8,5,-5,-7,6,4,10,-6,2,1,2,-2,-8,10,-1,2,-6,-1,-1,-7,8,10,-9,8,-10,3,-4,8,5,-7,-4,6,-6,-5,5,-4,5,-2,2,6,-8,-1,-5,-4,6,7,-10,4,-1,-5,-10,1,2,-10,1,6,6,-2,8,-1,7,8,2,5,2,-10,-8,-10,4,5,-7,-5,-8,-3], dtype = "uint64")#candidate|10996|(600,)|const|uint64
call_10995 = relay.TupleGetItem(func_6352_call(relay.reshape(const_10996.astype('uint64'), [10, 10, 6]), relay.reshape(const_10996.astype('uint64'), [10, 10, 6]), ), 0)
call_10997 = relay.TupleGetItem(func_6355_call(relay.reshape(const_10996.astype('uint64'), [10, 10, 6]), relay.reshape(const_10996.astype('uint64'), [10, 10, 6]), ), 0)
func_9173_call = mod.get_global_var('func_9173')
func_9174_call = mutated_mod.get_global_var('func_9174')
call_11009 = relay.TupleGetItem(func_9173_call(), 0)
call_11010 = relay.TupleGetItem(func_9174_call(), 0)
func_8955_call = mod.get_global_var('func_8955')
func_8956_call = mutated_mod.get_global_var('func_8956')
call_11011 = relay.TupleGetItem(func_8955_call(), 2)
call_11012 = relay.TupleGetItem(func_8956_call(), 2)
bop_11013 = relay.floor_mod(call_10990.astype('float64'), relay.reshape(call_11009.astype('float64'), relay.shape_of(call_10990))) # shape=(16, 11, 11)
bop_11016 = relay.floor_mod(call_10991.astype('float64'), relay.reshape(call_11010.astype('float64'), relay.shape_of(call_10991))) # shape=(16, 11, 11)
output = relay.Tuple([call_10992,var_10993,call_10995,const_10996,call_11011,bop_11013,])
output2 = relay.Tuple([call_10994,var_10993,call_10997,const_10996,call_11012,bop_11016,])
func_11021 = relay.Function([var_10993,], output)
mod['func_11021'] = func_11021
mod = relay.transform.InferType()(mod)
mutated_mod['func_11021'] = func_11021
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11022 = relay.var("var_11022", dtype = "int64", shape = (10, 45))#candidate|11022|(10, 45)|var|int64
func_11021_call = mutated_mod.get_global_var('func_11021')
call_11023 = func_11021_call(var_11022)
output = call_11023
func_11024 = relay.Function([var_11022], output)
mutated_mod['func_11024'] = func_11024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10411_call = mod.get_global_var('func_10411')
func_10413_call = mutated_mod.get_global_var('func_10413')
call_11039 = relay.TupleGetItem(func_10411_call(), 0)
call_11040 = relay.TupleGetItem(func_10413_call(), 0)
uop_11043 = relay.acos(call_11039.astype('float32')) # shape=(16, 11, 11)
uop_11045 = relay.acos(call_11040.astype('float32')) # shape=(16, 11, 11)
output = relay.Tuple([uop_11043,])
output2 = relay.Tuple([uop_11045,])
func_11046 = relay.Function([], output)
mod['func_11046'] = func_11046
mod = relay.transform.InferType()(mod)
output = func_11046()
func_11047 = relay.Function([], output)
mutated_mod['func_11047'] = func_11047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11046_call = mod.get_global_var('func_11046')
func_11047_call = mutated_mod.get_global_var('func_11047')
call_11074 = relay.TupleGetItem(func_11046_call(), 0)
call_11075 = relay.TupleGetItem(func_11047_call(), 0)
func_2873_call = mod.get_global_var('func_2873')
func_2877_call = mutated_mod.get_global_var('func_2877')
const_11077 = relay.const([[-6,-9,4,-4,1,-4,-5,-10,-8,5,-3,-9,3],[8,1,2,-5,-10,10,-9,-5,-4,2,3,8,-1],[3,3,10,-6,3,2,8,-6,-7,-1,-10,7,10],[-3,8,-3,-5,-6,6,-10,1,9,-4,-10,-4,7],[6,5,4,4,3,2,4,7,-2,-2,-8,2,8],[5,3,-7,6,2,-1,9,-6,3,8,1,-6,-5],[-6,6,-9,7,5,-10,5,10,-10,9,1,-7,4],[1,1,-4,-2,-2,-3,4,10,-10,6,10,-10,-4],[-2,4,-9,4,2,8,10,7,-6,1,9,-10,3],[2,10,6,7,6,4,5,-9,2,-2,3,1,5],[-7,-4,-6,6,2,-5,-2,4,-4,4,5,-3,4],[-4,-1,-7,-5,-9,-9,6,6,2,-4,-6,9,-2],[-5,-1,10,-5,6,1,5,2,-4,-7,10,8,10],[-10,5,3,-6,10,2,9,1,1,10,10,-2,4],[-8,7,10,7,9,7,4,3,7,6,-4,4,10],[7,2,-7,-6,8,-2,-1,-7,-8,10,-9,-7,-2],[9,2,1,5,-1,-4,5,-4,9,7,6,8,-1],[2,1,-9,-2,-2,-10,-4,7,1,2,-8,3,-8],[5,4,3,5,1,-4,5,-6,3,10,-10,4,6],[-4,1,7,-9,3,-8,6,10,-2,6,-10,8,2],[10,-1,-10,-5,-8,-9,3,9,-8,-1,-4,3,-9],[-2,-6,-4,-10,3,9,-3,8,5,1,3,10,-10],[-4,-8,-10,1,-5,-10,-9,7,1,-8,9,2,-9],[9,-8,-4,2,7,-2,-5,5,-2,-10,-4,-6,-10],[8,-4,9,-4,2,1,-10,5,-7,9,-10,6,-7],[-1,-7,-9,-4,-9,6,-10,-3,-2,7,7,10,8],[4,-9,6,-7,2,-7,-8,-9,-2,-1,-8,-2,-10],[3,-2,1,-4,-10,-10,-5,-2,7,1,-4,-5,-9],[-8,7,7,-2,-10,-8,3,7,6,4,-4,-10,8],[-9,-9,-5,-9,-6,4,-7,9,9,3,5,-7,9],[-1,8,1,2,6,-4,2,1,-8,-10,-6,-8,4],[10,2,7,-6,-3,-4,6,6,5,2,4,8,4],[3,-5,-5,2,-4,-1,4,7,2,-8,-3,-6,10],[-2,4,-2,-2,-7,2,4,-6,6,10,-8,7,1],[-8,5,-9,-8,-5,-1,7,-3,7,5,-4,-5,-4],[-9,8,9,8,-8,10,-9,6,1,-10,-2,-4,2],[8,2,-10,-1,2,-6,5,-7,-10,4,-8,7,1],[-7,-6,3,-6,-6,-8,5,-10,-10,5,-3,-4,8],[2,-2,-7,-10,-9,9,-7,-10,-3,-7,-5,9,2],[2,-9,-10,8,-5,-10,-9,7,-4,2,-1,8,9],[3,-1,10,-3,-6,1,4,10,-1,4,-5,-2,2],[-4,-1,4,-1,-1,10,9,8,1,-7,7,-8,-6],[9,3,-3,-2,8,-10,-10,-9,8,8,1,7,10],[6,5,4,1,-5,-2,1,-2,-10,-6,7,-10,-10],[-4,-7,-3,6,-4,-3,-6,9,5,2,1,-4,-1],[-10,5,2,-9,6,9,-1,2,5,-2,8,4,-7],[-1,1,1,5,-3,5,-3,3,3,-6,-8,5,-7],[9,2,-6,8,-7,1,5,6,-6,-1,2,5,-10],[-10,4,9,-7,-1,4,-2,-6,-2,9,-3,8,5],[9,-9,-4,-8,-4,-4,-6,6,2,-2,5,1,1],[-10,-7,10,-7,-9,-9,1,-1,-6,8,8,2,-10],[3,10,5,-4,6,-10,-4,6,-3,-7,-4,3,5],[-3,1,-5,-7,8,-4,6,-8,-3,-5,-8,-7,-5],[7,4,7,-2,-1,3,-9,-1,5,3,2,-10,8],[-7,2,-8,8,-3,-9,5,10,-9,-3,4,-6,3],[-6,6,10,10,3,-1,8,-8,-10,7,3,1,-4],[5,-5,-9,1,6,7,3,2,1,-7,6,-1,9],[9,-1,-6,-5,5,1,-9,9,-3,-6,-4,4,5],[1,3,2,-10,6,-9,9,7,10,-7,4,1,4],[6,-9,7,8,9,-3,3,7,2,-6,5,9,-6],[3,-2,3,4,2,3,3,-2,-3,6,8,5,1],[1,6,-4,5,8,7,-1,5,-8,5,5,-6,-7],[2,-10,6,4,1,10,3,5,2,-6,-9,5,6],[-10,-2,-7,-3,-7,10,-10,9,-8,-10,10,-8,-8],[5,-1,-3,3,9,10,-9,-2,10,10,4,2,1],[-3,-10,-8,-4,6,-9,5,-1,2,5,10,6,5],[-8,-3,10,-1,-6,-7,-7,10,-4,-8,1,6,5],[-9,6,10,-2,-4,-8,-5,4,-9,-5,-9,-3,3],[-6,-7,-6,2,4,-5,-7,-9,2,1,5,6,-8],[-8,-1,-4,3,8,10,9,-3,10,-1,-5,6,10],[-8,3,1,-7,-4,9,-6,5,8,2,10,9,3],[-6,-10,2,1,3,7,-4,5,-8,-10,-7,-1,-10],[-10,-2,-3,-4,5,10,-9,7,5,7,-5,-8,-2],[-5,-1,3,4,-6,2,-7,-6,-4,-9,3,4,-3],[6,6,-6,2,8,1,-9,-6,-9,-9,-1,1,3],[6,-3,8,10,-1,7,-4,-7,6,1,8,-6,-4],[9,10,9,-9,5,-6,-1,9,-8,-4,5,-10,3],[-6,-4,-9,8,-5,5,1,-1,-5,2,4,-7,5],[-10,10,-3,-2,9,-10,-1,3,-8,6,-9,-6,4],[-3,10,-3,-2,-2,1,2,7,6,6,4,6,-7],[-10,8,-5,-5,6,3,-10,5,-1,1,10,8,9],[-1,-1,-9,-5,6,-7,-7,8,-3,7,10,-6,7],[-10,-1,6,-3,-4,9,1,-9,8,-3,6,-5,-5],[-2,-5,4,-2,4,9,-5,10,-2,1,9,-9,-6],[-8,9,-7,4,-8,9,5,9,1,-9,-10,-3,-4],[2,5,-10,8,-8,-10,9,3,1,-1,6,-4,4],[7,7,-10,-7,-7,-7,8,-2,-10,-10,10,2,2],[5,4,2,-9,-3,7,5,8,-1,-9,-5,-5,-1],[6,6,3,4,5,9,6,-4,-1,-7,2,5,10],[-10,5,-9,7,7,-9,9,8,7,-9,8,-1,-1],[4,6,-6,-10,10,-1,5,10,2,7,9,-5,6]], dtype = "int32")#candidate|11077|(91, 13)|const|int32
call_11076 = relay.TupleGetItem(func_2873_call(relay.reshape(const_11077.astype('int32'), [13, 7, 13]), relay.reshape(const_11077.astype('int32'), [13, 7, 13]), ), 0)
call_11078 = relay.TupleGetItem(func_2877_call(relay.reshape(const_11077.astype('int32'), [13, 7, 13]), relay.reshape(const_11077.astype('int32'), [13, 7, 13]), ), 0)
uop_11080 = relay.atanh(const_11077.astype('float32')) # shape=(91, 13)
output = relay.Tuple([call_11074,call_11076,uop_11080,])
output2 = relay.Tuple([call_11075,call_11078,uop_11080,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

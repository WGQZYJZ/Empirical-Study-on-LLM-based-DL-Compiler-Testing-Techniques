==========mod==========
#[version = "0.0.5"]
def @func_8955() -> (Tensor[(16, 11, 11), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(2496), int32] */, dtype="int32") /* ty=Tensor[(2496), int32] */;
  %1 = reshape(%0, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), int32] */;
  %2 = @func_4365(%1) /* ty=(Tensor[(16, 12, 13), int32],) */;
  %3 = @func_8075() /* ty=Tensor[(16, 11, 11), float32] */;
  %4 = %2.0;
  (%3, %4, meta[relay.Constant][0] /* ty=Tensor[(2496), int32] */)
}

def @func_5080(%var_5074: Tensor[(2, 4, 12), uint64]) -> (Tensor[(2, 4, 12), uint64],) {
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 4, 12), uint64] */, dtype="uint64") /* ty=Tensor[(2, 4, 12), uint64] */;
  %6 = shape_of(%var_5074, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%var_5074, dtype="uint64") /* ty=Tensor[(2, 4, 12), uint64] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %9 = left_shift(%7, %8) /* ty=Tensor[(2, 4, 12), uint64] */;
  (%9,)
}

def @func_1576(%var_1567: Tensor[(11, 16, 3), float32]) -> (Tensor[(11, 16, 3), float32], Tensor[(11, 16, 3), float64]) {
  %10 = cast(%var_1567, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
  %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 16, 3), float32] */, dtype="float64") /* ty=Tensor[(11, 16, 3), float64] */;
  %12 = shape_of(%var_1567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(%var_1567, dtype="float64") /* ty=Tensor[(11, 16, 3), float64] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %15 = log2(%10) /* ty=Tensor[(11, 16, 3), float32] */;
  %16 = floor_mod(%13, %14) /* ty=Tensor[(11, 16, 3), float64] */;
  (%15, %16)
}

def @func_2668(%var_2640: Tensor[(4, 12, 4), float64]) -> (Tensor[(4, 12, 4), float64], Tensor[(10, 9, 5), int64], Tensor[(450), int64]) {
  %17 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 12, 4), float64] */;
  %18 = shape_of(%var_2640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%var_2640, dtype="float64") /* ty=Tensor[(4, 12, 4), float64] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %21 = cast(meta[relay.Constant][4] /* ty=Tensor[(450), int64] */, dtype="int64") /* ty=Tensor[(450), int64] */;
  %22 = cast(meta[relay.Constant][4] /* ty=Tensor[(450), int64] */, dtype="int64") /* ty=Tensor[(450), int64] */;
  %23 = reshape(%21, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %24 = reshape(%22, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %25 = power(%19, %20) /* ty=Tensor[(4, 12, 4), float64] */;
  %26 = @func_2056(%23, %24) /* ty=Tensor[(10, 9, 5), int64] */;
  (%25, %26, meta[relay.Constant][4] /* ty=Tensor[(450), int64] */)
}

def @func_7735() -> (Tensor[(16, 11, 11), float32],) {
  %27 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %28 = sqrt(%27) /* ty=Tensor[(16, 11, 11), float32] */;
  (%28,)
}

def @func_2447(%var_2405: Tensor[(6, 13, 16), uint64]) -> (Tensor[(10, 16, 5), int32], Tensor[(160), float32], Tensor[(6, 13, 16), float64], Tensor[(6, 13, 16), float32]) {
  %29 = cast(meta[relay.Constant][6] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %30 = reshape(%29, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
  %31 = @func_375(%30) /* ty=(Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) */;
  %32 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 13, 16), uint64] */, dtype="float32") /* ty=Tensor[(6, 13, 16), float32] */;
  %33 = tan(%32) /* ty=Tensor[(6, 13, 16), float32] */;
  %34 = cast(%33, dtype="float32") /* ty=Tensor[(6, 13, 16), float32] */;
  %35 = log(%34) /* ty=Tensor[(6, 13, 16), float32] */;
  %36 = cast(%var_2405, dtype="uint64") /* ty=Tensor[(6, 13, 16), uint64] */;
  %37 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(6, 13, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 13, 16), uint64] */, dtype="uint64") /* ty=Tensor[(6, 13, 16), uint64] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %40 = bitwise_and(%38, %39) /* ty=Tensor[(6, 13, 16), uint64] */;
  %41 = cast(%40, dtype="float64") /* ty=Tensor[(6, 13, 16), float64] */;
  %42 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%35, dtype="float64") /* ty=Tensor[(6, 13, 16), float64] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %45 = cast(%35, dtype="float32") /* ty=Tensor[(6, 13, 16), float32] */;
  %46 = %31.1;
  %47 = divide(%43, %44) /* ty=Tensor[(6, 13, 16), float64] */;
  %48 = cosh(%45) /* ty=Tensor[(6, 13, 16), float32] */;
  (%46, meta[relay.Constant][6] /* ty=Tensor[(160), float32] */, %47, %48)
}

def @func_3128(%var_3048: Tensor[(15, 13, 11), float64], %var_3066: Tensor[(1, 192), float64], %var_3079: Tensor[(1008), float32], %var_3080: int16, %var_3094: Tensor[(10, 9, 5), int64], %var_3114: Tensor[(15, 13, 11), float64]) -> (Tensor[(4, 2, 4), int16], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(1, 192), float64], Tensor[(450), int64], Tensor[(1040, 2), float32], Tensor[(1008), float32], int16, Tensor[(10, 9, 5), int64], Tensor[(10, 9, 5), float32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 13, 11), bool]) {
  %49 = cast(meta[relay.Constant][8] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %50 = cast(meta[relay.Constant][9] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %51 = cast(%var_3066, dtype="float64") /* ty=Tensor[(1, 192), float64] */;
  %52 = cast(meta[relay.Constant][8] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %53 = reshape(%49, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
  %54 = reshape(%50, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %55 = reshape(%51, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %56 = reshape(%52, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
  %57 = @func_949(%53, %54, %55, %56) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) */;
  %58 = cast(%var_3079, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %59 = cast(%var_3080, dtype="int16") /* ty=int16 */;
  %60 = cast(meta[relay.Constant][9] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %61 = reshape(%58, newshape=[9, 16, 7]) /* ty=Tensor[(9, 16, 7), float32] */;
  %62 = reshape(%59, newshape=[]) /* ty=int16 */;
  %63 = reshape(%60, newshape=[1040, 2]) /* ty=Tensor[(1040, 2), float32] */;
  %64 = @func_2316(%61, %62, %63) /* ty=(Tensor[(9, 16, 7), float32], Tensor[(14, 14, 16), int16], int16, Tensor[(1, 160), float32], Tensor[(1040, 2), float32]) */;
  %65 = cast(meta[relay.Constant][10] /* ty=Tensor[(450), int64] */, dtype="int64") /* ty=Tensor[(450), int64] */;
  %66 = cast(meta[relay.Constant][10] /* ty=Tensor[(450), int64] */, dtype="int64") /* ty=Tensor[(450), int64] */;
  %67 = reshape(%65, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %68 = reshape(%66, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %69 = @func_2056(%67, %68) /* ty=Tensor[(10, 9, 5), int64] */;
  %70 = cast(%69, dtype="int64") /* ty=Tensor[(10, 9, 5), int64] */;
  %71 = cast(%69, dtype="int64") /* ty=Tensor[(10, 9, 5), int64] */;
  %72 = reshape(%70, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %73 = reshape(%71, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %74 = cast(%var_3094, dtype="float32") /* ty=Tensor[(10, 9, 5), float32] */;
  %75 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%69, dtype="float32") /* ty=Tensor[(10, 9, 5), float32] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %78 = cast(meta[relay.Constant][11] /* ty=Tensor[(1183), int32] */, dtype="int32") /* ty=Tensor[(1183), int32] */;
  %79 = cast(meta[relay.Constant][11] /* ty=Tensor[(1183), int32] */, dtype="int32") /* ty=Tensor[(1183), int32] */;
  %80 = reshape(%78, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
  %81 = reshape(%79, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
  %82 = @func_2873(%80, %81) /* ty=(Tensor[(13, 7, 13), int32],) */;
  %83 = cast(%var_3048, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %84 = atanh(%83) /* ty=Tensor[(15, 13, 11), float64] */;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %86 = cosh(%85) /* ty=Tensor[(15, 13, 11), float64] */;
  %87 = cast(%var_3114, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %91 = %57.10;
  %92 = %64.4;
  %93 = @func_2056(%72, %73) /* ty=Tensor[(10, 9, 5), int64] */;
  %94 = floor_mod(%76, %77) /* ty=Tensor[(10, 9, 5), float32] */;
  %95 = %82.0;
  %96 = logical_and(%89, %90) /* ty=Tensor[(15, 13, 11), bool] */;
  (%91, meta[relay.Constant][8] /* ty=Tensor[(32), float64] */, meta[relay.Constant][9] /* ty=Tensor[(2080), float32] */, %var_3066, meta[relay.Constant][10] /* ty=Tensor[(450), int64] */, %92, %var_3079, %var_3080, %93, %94, %95, meta[relay.Constant][11] /* ty=Tensor[(1183), int32] */, %96)
}

def @func_8229() -> (Tensor[(16, 11, 11), float32],) {
  %97 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %98 = %97.0;
  (%98,)
}

def @func_10755() -> (Tensor[(16, 11, 11), float32],) {
  %99 = @func_9586() /* ty=(Tensor[(16, 11, 11), uint32], Tensor[(16, 11, 11), float32]) */;
  %100 = %99.1;
  (%100,)
}

def @func_9173() -> (Tensor[(16, 11, 11), float32],) {
  %101 = @func_8075() /* ty=Tensor[(16, 11, 11), float32] */;
  (%101,)
}

def @func_10294() -> (Tensor[(16, 11, 11), float32],) {
  %102 = @func_10011() /* ty=Tensor[(16, 11, 11), float32] */;
  (%102,)
}

def @func_6902(%var_6897: Tensor[(12, 5, 13), int32], %var_6898: Tensor[(12, 5, 13), int32]) -> (Tensor[(12, 5, 13), int32],) {
  %103 = cast(%var_6898, dtype="int32") /* ty=Tensor[(12, 5, 13), int32] */;
  %104 = shape_of(%var_6897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%var_6897, dtype="int32") /* ty=Tensor[(12, 5, 13), int32] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %107 = bitwise_and(%105, %106) /* ty=Tensor[(12, 5, 13), int32] */;
  (%107,)
}

def @func_10011() -> Tensor[(16, 11, 11), float32] {
  %108 = @func_9173() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %109 = %108.0;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  erf(%110) /* ty=Tensor[(16, 11, 11), float32] */
}

def @func_8933() -> (Tensor[(60), float32], Tensor[(16, 11, 11), float32]) {
  %111 = @func_8190() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */;
  %112 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %113 = %111.2;
  %114 = %112.0;
  (%113, %114)
}

def @func_9586() -> (Tensor[(16, 11, 11), uint32], Tensor[(16, 11, 11), float32]) {
  %115 = @func_9158() /* ty=Tensor[(16, 11, 11), float32] */;
  %116 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 11, 11), float32] */, dtype="uint32") /* ty=Tensor[(16, 11, 11), uint32] */;
  %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%115, dtype="uint32") /* ty=Tensor[(16, 11, 11), uint32] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %120 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %121 = bitwise_and(%118, %119) /* ty=Tensor[(16, 11, 11), uint32] */;
  %122 = atan(%120) /* ty=Tensor[(16, 11, 11), float32] */;
  (%121, %122)
}

def @func_10593() -> (Tensor[(16, 11, 11), float32],) {
  %123 = @func_10011() /* ty=Tensor[(16, 11, 11), float32] */;
  (%123,)
}

def @func_8730() -> (Tensor[(6, 2, 5), float64],) {
  %124 = @func_8190() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */;
  %125 = %124.1;
  %126 = cast(%125, dtype="float64") /* ty=Tensor[(6, 2, 5), float64] */;
  %127 = sin(%126) /* ty=Tensor[(6, 2, 5), float64] */;
  (%127,)
}

def @func_7871(%var_7831: Tensor[(1320), uint8]) -> (Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(780), int32], Tensor[(12, 5, 13), int32], Tensor[(12, 5, 13), int32], Tensor[(2080), float32], Tensor[(1320), uint8], Tensor[(2080), float32], Tensor[(14, 14, 5), bool], Tensor[(980), int32]) {
  %128 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %129 = cast(meta[relay.Constant][13] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %130 = cast(meta[relay.Constant][13] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %131 = reshape(%129, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %132 = reshape(%130, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %133 = @func_6902(%131, %132) /* ty=(Tensor[(12, 5, 13), int32],) */;
  %134 = cast(meta[relay.Constant][13] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %135 = cast(meta[relay.Constant][13] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %136 = reshape(%134, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %137 = reshape(%135, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %138 = @func_6902(%136, %137) /* ty=(Tensor[(12, 5, 13), int32],) */;
  %139 = %133.0;
  %140 = cast(%139, dtype="int32") /* ty=Tensor[(12, 5, 13), int32] */;
  %141 = cast(meta[relay.Constant][13] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %142 = reshape(%140, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %143 = reshape(%141, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %144 = @func_6902(%142, %143) /* ty=(Tensor[(12, 5, 13), int32],) */;
  %145 = cast(%var_7831, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %146 = cast(meta[relay.Constant][14] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %147 = reshape(%145, newshape=[10, 11, 12]) /* ty=Tensor[(10, 11, 12), uint8] */;
  %148 = reshape(%146, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %149 = @func_714(%147, %148) /* ty=(Tensor[(10, 11, 12), uint8], Tensor[(10, 16, 1), float32], int16, Tensor[(160), float32], Tensor[(2080), float32]) */;
  %150 = cast(meta[relay.Constant][15] /* ty=Tensor[(980), int32] */, dtype="int32") /* ty=Tensor[(980), int32] */;
  %151 = reshape(%150, newshape=[14, 14, 5]) /* ty=Tensor[(14, 14, 5), int32] */;
  %152 = %128.0;
  %153 = %138.0;
  %154 = %144.0;
  %155 = %149.4;
  %156 = @func_4387(%151) /* ty=Tensor[(14, 14, 5), bool] */;
  (%152, %139, meta[relay.Constant][13] /* ty=Tensor[(780), int32] */, %153, %154, %155, %var_7831, meta[relay.Constant][14] /* ty=Tensor[(2080), float32] */, %156, meta[relay.Constant][15] /* ty=Tensor[(980), int32] */)
}

def @func_6352(%var_6333: Tensor[(10, 10, 6), uint64], %var_6334: Tensor[(10, 10, 6), uint64]) -> (Tensor[(10, 10, 6), float32],) {
  %157 = cast(%var_6334, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
  %158 = shape_of(%var_6333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%var_6333, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %161 = add(%159, %160) /* ty=Tensor[(10, 10, 6), uint64] */;
  %162 = cast(%161, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
  %163 = cosh(%162) /* ty=Tensor[(10, 10, 6), float32] */;
  (%163,)
}

def @func_375(%var_336: Tensor[(10, 16, 1), float32]) -> (Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) {
  %164 = cast(%var_336, dtype="float32") /* ty=Tensor[(10, 16, 1), float32] */;
  %165 = cast(%var_336, dtype="int32") /* ty=Tensor[(10, 16, 1), int32] */;
  %166 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 16, 5), float32] */, dtype="int32") /* ty=Tensor[(10, 16, 5), int32] */;
  %167 = sigmoid(%164) /* ty=Tensor[(10, 16, 1), float32] */;
  %168 = bitwise_and(%165, %166) /* ty=Tensor[(10, 16, 5), int32] */;
  (%167, %168)
}

def @func_8075() -> Tensor[(16, 11, 11), float32] {
  %169 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %170 = %169.0;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  log2(%171) /* ty=Tensor[(16, 11, 11), float32] */
}

def @func_9459(%var_9425: Tensor[(8, 2, 11), float32], %var_9426: Tensor[(8, 2, 11), float32], %var_9456: Tensor[(2080), float32]) -> (Tensor[(9, 2, 7), int16], Tensor[(126), int16], Tensor[(8, 2, 11), float64], Tensor[(160), float32], Tensor[(60, 22), uint8], Tensor[(2080), float32]) {
  %172 = cast(meta[relay.Constant][17] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %173 = cast(meta[relay.Constant][17] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %174 = reshape(%172, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %175 = reshape(%173, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %176 = cast(%var_9426, dtype="float32") /* ty=Tensor[(8, 2, 11), float32] */;
  %177 = shape_of(%var_9425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%var_9425, dtype="float32") /* ty=Tensor[(8, 2, 11), float32] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %180 = subtract(%178, %179) /* ty=Tensor[(8, 2, 11), float32] */;
  %181 = cast(%180, dtype="float64") /* ty=Tensor[(8, 2, 11), float64] */;
  %182 = cast(meta[relay.Constant][18] /* ty=Tensor[(60, 22), uint8] */, dtype="uint8") /* ty=Tensor[(60, 22), uint8] */;
  %183 = cast(%var_9456, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %184 = reshape(%182, newshape=[1320]) /* ty=Tensor[(1320), uint8] */;
  %185 = reshape(%183, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %186 = @func_8611(%184, %185) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(160), float32], Tensor[(1320), uint8], Tensor[(2080), float32]) */;
  %187 = @func_7722(%174, %175) /* ty=Tensor[(9, 2, 7), int16] */;
  %188 = sin(%181) /* ty=Tensor[(8, 2, 11), float64] */;
  %189 = %186.1;
  (%187, meta[relay.Constant][17] /* ty=Tensor[(126), int16] */, %188, %189, meta[relay.Constant][18] /* ty=Tensor[(60, 22), uint8] */, %var_9456)
}

def @func_8497(%var_8492: Tensor[(8, 4), float64]) -> (Tensor[(6, 2, 5), float32], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(8, 4), float64]) {
  %190 = @func_8190() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */;
  %191 = cast(meta[relay.Constant][19] /* ty=Tensor[(1248), uint64] */, dtype="uint64") /* ty=Tensor[(1248), uint64] */;
  %192 = cast(%var_8492, dtype="float64") /* ty=Tensor[(8, 4), float64] */;
  %193 = reshape(%191, newshape=[1248]) /* ty=Tensor[(1248), uint64] */;
  %194 = reshape(%192, newshape=[32]) /* ty=Tensor[(32), float64] */;
  %195 = @func_3513(%193, %194) /* ty=(Tensor[(7, 11, 8), uint16], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(4, 12, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192, ?), float32]) */;
  %196 = %190.1;
  %197 = %195.5;
  (%196, %197, meta[relay.Constant][19] /* ty=Tensor[(1248), uint64] */, %var_8492)
}

def @func_3227(%var_3221: Tensor[(6, 2, 5), float32]) -> (Tensor[(6, 2, 5), float32],) {
  %198 = cast(%var_3221, dtype="float32") /* ty=Tensor[(6, 2, 5), float32] */;
  %199 = rsqrt(%198) /* ty=Tensor[(6, 2, 5), float32] */;
  (%199,)
}

def @func_10411() -> (Tensor[(16, 11, 11), float32],) {
  %200 = @func_9614() /* ty=Tensor[(16, 11, 11), float32] */;
  (%200,)
}

def @func_3348(%var_3341: Tensor[(11, 10, 1), float64]) -> Tensor[(11, 10, 11), float64] {
  %201 = cast(%var_3341, dtype="float64") /* ty=Tensor[(11, 10, 1), float64] */;
  %202 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 10, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 10, 11), float64] */;
  add(%201, %202) /* ty=Tensor[(11, 10, 11), float64] */
}

def @func_10366(%var_10341: Tensor[(9, 15, 3), float32], %var_10350: Tensor[(2496), int32]) -> (Tensor[(9, 15, 3), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) {
  %203 = cast(%var_10341, dtype="float32") /* ty=Tensor[(9, 15, 3), float32] */;
  %204 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(9, 15, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(9, 15, 3), float32] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %207 = cast(%var_10350, dtype="int32") /* ty=Tensor[(2496), int32] */;
  %208 = reshape(%207, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), int32] */;
  %209 = @func_4365(%208) /* ty=(Tensor[(16, 12, 13), int32],) */;
  %210 = subtract(%205, %206) /* ty=Tensor[(9, 15, 3), float32] */;
  %211 = %209.0;
  (%210, %211, %var_10350)
}

def @func_9634(%var_9628: Tensor[(11, 11, 7), uint16], %var_9629: Tensor[(11, 11, 7), uint16]) -> (Tensor[(11, 11, 7), uint16],) {
  %212 = cast(%var_9629, dtype="uint16") /* ty=Tensor[(11, 11, 7), uint16] */;
  %213 = shape_of(%var_9628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%var_9628, dtype="uint16") /* ty=Tensor[(11, 11, 7), uint16] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %216 = left_shift(%214, %215) /* ty=Tensor[(11, 11, 7), uint16] */;
  (%216,)
}

def @func_10587() -> (Tensor[(16, 11, 11), float32],) {
  %217 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %218 = %217.0;
  (%218,)
}

def @func_2873(%var_2863: Tensor[(13, 7, 13), int32], %var_2864: Tensor[(13, 7, 13), int32]) -> (Tensor[(13, 7, 13), int32],) {
  %219 = cast(%var_2864, dtype="int32") /* ty=Tensor[(13, 7, 13), int32] */;
  %220 = shape_of(%var_2863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%var_2863, dtype="int32") /* ty=Tensor[(13, 7, 13), int32] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %223 = maximum(%221, %222) /* ty=Tensor[(13, 7, 13), int32] */;
  (%223,)
}

def @func_9731(%var_9689: Tensor[(4, 5, 11), uint32], %var_9690: Tensor[(4, 5, 11), uint32], %var_9708: uint32, %var_9709: Tensor[(160), float32], %var_9717: Tensor[(72), int64]) -> (Tensor[(4, 5, 11), bool], Tensor[(192), float64], uint32, Tensor[(160), float32], Tensor[(16, 12, 13), int32], Tensor[(72), int64], Tensor[(16, 11, 11), float64]) {
  %224 = cast(%var_9690, dtype="bool") /* ty=Tensor[(4, 5, 11), bool] */;
  %225 = shape_of(%var_9689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%var_9689, dtype="bool") /* ty=Tensor[(4, 5, 11), bool] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %228 = cast(%var_9708, dtype="uint32") /* ty=uint32 */;
  %229 = cast(%var_9709, dtype="float32") /* ty=Tensor[(160), float32] */;
  %230 = reshape(%228, newshape=[]) /* ty=uint32 */;
  %231 = reshape(%229, newshape=[160]) /* ty=Tensor[(160), float32] */;
  %232 = @func_6475(%230, %231) /* ty=(Tensor[(14, 14, 5), bool], Tensor[(980), int32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 1, 4), int64], Tensor[(15, ?, 4), bool], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) */;
  %233 = cast(%var_9717, dtype="int64") /* ty=Tensor[(72), int64] */;
  %234 = reshape(%233, newshape=[12, 6, 1]) /* ty=Tensor[(12, 6, 1), int64] */;
  %235 = @func_5869(%234) /* ty=(Tensor[(12, 6, 14), int64], Tensor[(16, 12, 13), int32], Tensor[(2496, 1), int32]) */;
  %236 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %237 = %236.0;
  %238 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %239 = %238.0;
  %240 = cast(%239, dtype="float64") /* ty=Tensor[(16, 11, 11), float64] */;
  %241 = shape_of(%237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%237, dtype="float64") /* ty=Tensor[(16, 11, 11), float64] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %244 = equal(%226, %227) /* ty=Tensor[(4, 5, 11), bool] */;
  %245 = %232.8;
  %246 = %235.1;
  %247 = power(%242, %243) /* ty=Tensor[(16, 11, 11), float64] */;
  (%244, %245, %var_9708, %var_9709, %246, %var_9717, %247)
}

def @func_2056(%var_2044: Tensor[(10, 9, 5), int64], %var_2045: Tensor[(10, 9, 5), int64]) -> Tensor[(10, 9, 5), int64] {
  %248 = cast(%var_2045, dtype="int64") /* ty=Tensor[(10, 9, 5), int64] */;
  %249 = shape_of(%var_2044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%var_2044, dtype="int64") /* ty=Tensor[(10, 9, 5), int64] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%250, %251) /* ty=Tensor[(10, 9, 5), int64] */
}

def @func_9928() -> Tensor[(60), float32] {
  %252 = @func_8190() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */;
  %252.2
}

def @func_1805(%var_1793: Tensor[(7, 8, 13), float32], %var_1799: Tensor[(528), float32]) -> (Tensor[(7, 8, 13), float32], Tensor[(11, 16, 3), float32], Tensor[(528), float32], Tensor[(11, 16, 3), float64]) {
  %253 = cast(%var_1793, dtype="float32") /* ty=Tensor[(7, 8, 13), float32] */;
  %254 = cast(%var_1799, dtype="float32") /* ty=Tensor[(528), float32] */;
  %255 = reshape(%254, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), float32] */;
  %256 = @func_1576(%255) /* ty=(Tensor[(11, 16, 3), float32], Tensor[(11, 16, 3), float64]) */;
  %257 = %256.0;
  %258 = cast(%257, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
  %259 = reshape(%258, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), float32] */;
  %260 = @func_1576(%259) /* ty=(Tensor[(11, 16, 3), float32], Tensor[(11, 16, 3), float64]) */;
  %261 = log10(%253) /* ty=Tensor[(7, 8, 13), float32] */;
  %262 = %260.1;
  (%261, %257, %var_1799, %262)
}

def @func_6475(%var_6391: uint32, %var_6449: Tensor[(160), float32]) -> (Tensor[(14, 14, 5), bool], Tensor[(980), int32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 1, 4), int64], Tensor[(15, ?, 4), bool], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) {
  %263 = cast(meta[relay.Constant][22] /* ty=Tensor[(980), int32] */, dtype="int32") /* ty=Tensor[(980), int32] */;
  %264 = reshape(%263, newshape=[14, 14, 5]) /* ty=Tensor[(14, 14, 5), int32] */;
  %265 = cast(meta[relay.Constant][23] /* ty=Tensor[(1183), int32] */, dtype="int32") /* ty=Tensor[(1183), int32] */;
  %266 = cast(meta[relay.Constant][23] /* ty=Tensor[(1183), int32] */, dtype="int32") /* ty=Tensor[(1183), int32] */;
  %267 = reshape(%265, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
  %268 = reshape(%266, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
  %269 = @func_2873(%267, %268) /* ty=(Tensor[(13, 7, 13), int32],) */;
  %270 = cast(%var_6391, dtype="uint32") /* ty=uint32 */;
  %271 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 1, 4), uint32] */, dtype="uint32") /* ty=Tensor[(15, 1, 4), uint32] */;
  %272 = logical_xor(%270, %271) /* ty=Tensor[(15, 1, 4), uint32] */;
  %273 = cast(%272, dtype="int64") /* ty=Tensor[(15, 1, 4), int64] */;
  %274 = cast(%var_6391, dtype="int64") /* ty=int64 */;
  %275 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 1, 4), uint32] */, dtype="bool") /* ty=Tensor[(15, 1, 4), bool] */;
  %276 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%272, dtype="bool") /* ty=Tensor[(15, 1, 4), bool] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %279 = cast(%var_6449, dtype="float32") /* ty=Tensor[(160), float32] */;
  %280 = cast(meta[relay.Constant][25] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %281 = reshape(%279, newshape=[4, 40]) /* ty=Tensor[(4, 40), float32] */;
  %282 = reshape(%280, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
  %283 = @func_618(%281, %282) /* ty=(Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) */;
  %284 = @func_4387(%264) /* ty=Tensor[(14, 14, 5), bool] */;
  %285 = %269.0;
  %286 = bitwise_and(%273, %274) /* ty=Tensor[(15, 1, 4), int64] */;
  %287 = greater(%277, %278) /* ty=Tensor[(15, ?, 4), bool] */;
  %288 = %283.4;
  (%284, meta[relay.Constant][22] /* ty=Tensor[(980), int32] */, %285, meta[relay.Constant][23] /* ty=Tensor[(1183), int32] */, %286, %287, %288, %var_6449, meta[relay.Constant][25] /* ty=Tensor[(192), float64] */)
}

def @func_6953(%var_6946: Tensor[(1, 11, 7), float32]) -> Tensor[(1, 11, 7), float32] {
  %289 = cast(%var_6946, dtype="float32") /* ty=Tensor[(1, 11, 7), float32] */;
  log10(%289) /* ty=Tensor[(1, 11, 7), float32] */
}

def @func_8207() -> (Tensor[(16, 11, 11), float32],) {
  %290 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %291 = %290.0;
  (%291,)
}

def @func_9080(%var_9047: Tensor[(6, 2, 5), float64]) -> Tensor[(6, 2, 5), int16] {
  %292 = @func_8730() /* ty=(Tensor[(6, 2, 5), float64],) */;
  %293 = %292.0;
  %294 = cast(%var_9047, dtype="float64") /* ty=Tensor[(6, 2, 5), float64] */;
  %295 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%293, dtype="float64") /* ty=Tensor[(6, 2, 5), float64] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %298 = mod(%296, %297) /* ty=Tensor[(6, 2, 5), float64] */;
  %299 = cast(%298, dtype="int16") /* ty=Tensor[(6, 2, 5), int16] */;
  %300 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%293, dtype="int16") /* ty=Tensor[(6, 2, 5), int16] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%301, %302) /* ty=Tensor[(6, 2, 5), int16] */
}

def @func_9534(%var_9531: Tensor[(60), float64]) -> (Tensor[(2496), int32], Tensor[(6, 2, 5), int16], Tensor[(60), float64]) {
  %303 = @func_8955() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) */;
  %304 = cast(%var_9531, dtype="float64") /* ty=Tensor[(60), float64] */;
  %305 = reshape(%304, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), float64] */;
  %306 = %303.2;
  %307 = @func_9080(%305) /* ty=Tensor[(6, 2, 5), int16] */;
  (%306, %307, %var_9531)
}

def @func_8874(%var_8844: Tensor[(4, 8), float64]) -> (Tensor[(16, 11, 11), float32], Tensor[(1248), uint64], Tensor[(4, 8), float64], Tensor[(13, ?), uint64], Tensor[(13), uint64], Tensor[(16, 11, 11), float32], Tensor[(1320), uint8], Tensor[(520, 4), float32]) {
  %308 = @func_8190() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */;
  %309 = cast(%var_8844, dtype="float64") /* ty=Tensor[(4, 8), float64] */;
  %310 = reshape(%309, newshape=[8, 4]) /* ty=Tensor[(8, 4), float64] */;
  %311 = @func_8497(%310) /* ty=(Tensor[(6, 2, 5), float32], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(8, 4), float64]) */;
  %312 = cast(meta[relay.Constant][26] /* ty=Tensor[(13), uint64] */, dtype="uint64") /* ty=Tensor[(13), uint64] */;
  %313 = cast(meta[relay.Constant][26] /* ty=Tensor[(13), uint64] */, dtype="uint64") /* ty=Tensor[(13), uint64] */;
  %314 = reshape(%312, newshape=[13, 1]) /* ty=Tensor[(13, 1), uint64] */;
  %315 = reshape(%313, newshape=[13, 1]) /* ty=Tensor[(13, 1), uint64] */;
  %316 = @func_4004(%314, %315) /* ty=(Tensor[(13, ?), uint64],) */;
  %317 = cast(meta[relay.Constant][27] /* ty=Tensor[(1320), uint8] */, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %318 = cast(meta[relay.Constant][28] /* ty=Tensor[(520, 4), float32] */, dtype="float32") /* ty=Tensor[(520, 4), float32] */;
  %319 = reshape(%317, newshape=[1320]) /* ty=Tensor[(1320), uint8] */;
  %320 = reshape(%318, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %321 = @func_8611(%319, %320) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(160), float32], Tensor[(1320), uint8], Tensor[(2080), float32]) */;
  %322 = %308.0;
  %323 = %311.2;
  %324 = %316.0;
  %325 = %321.0;
  (%322, %323, %var_8844, %324, meta[relay.Constant][26] /* ty=Tensor[(13), uint64] */, %325, meta[relay.Constant][27] /* ty=Tensor[(1320), uint8] */, meta[relay.Constant][28] /* ty=Tensor[(520, 4), float32] */)
}

def @func_10194() -> (Tensor[(16, 11, 11), float32],) {
  %326 = @func_9173() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %327 = %326.0;
  (%327,)
}

def @func_714(%var_699: Tensor[(10, 11, 12), uint8], %var_712: Tensor[(2080), float32]) -> (Tensor[(10, 11, 12), uint8], Tensor[(10, 16, 1), float32], int16, Tensor[(160), float32], Tensor[(2080), float32]) {
  %328 = cast(%var_699, dtype="uint8") /* ty=Tensor[(10, 11, 12), uint8] */;
  %329 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(10, 11, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 11, 12), uint8] */, dtype="uint8") /* ty=Tensor[(10, 11, 12), uint8] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %332 = cast(meta[relay.Constant][30] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %333 = cast(meta[relay.Constant][31] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %334 = cast(%var_712, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %335 = reshape(%332, newshape=[]) /* ty=int16 */;
  %336 = reshape(%333, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
  %337 = reshape(%334, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
  %338 = @func_549(%335, %336, %337) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
  %339 = bitwise_and(%330, %331) /* ty=Tensor[(10, 11, 12), uint8] */;
  %340 = %338.2;
  (%339, %340, meta[relay.Constant][30] /* ty=int16 */, meta[relay.Constant][31] /* ty=Tensor[(160), float32] */, %var_712)
}

def @func_2316(%var_2308: Tensor[(9, 16, 7), float32], %var_2312: int16, %var_2314: Tensor[(1040, 2), float32]) -> (Tensor[(9, 16, 7), float32], Tensor[(14, 14, 16), int16], int16, Tensor[(1, 160), float32], Tensor[(1040, 2), float32]) {
  %341 = cast(%var_2308, dtype="float32") /* ty=Tensor[(9, 16, 7), float32] */;
  %342 = cast(%var_2312, dtype="int16") /* ty=int16 */;
  %343 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 160), float32] */, dtype="float32") /* ty=Tensor[(1, 160), float32] */;
  %344 = cast(%var_2314, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
  %345 = reshape(%342, newshape=[]) /* ty=int16 */;
  %346 = reshape(%343, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
  %347 = reshape(%344, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
  %348 = @func_549(%345, %346, %347) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
  %349 = log10(%341) /* ty=Tensor[(9, 16, 7), float32] */;
  %350 = %348.0;
  (%349, %350, %var_2312, meta[relay.Constant][32] /* ty=Tensor[(1, 160), float32] */, %var_2314)
}

def @func_7722(%var_7709: Tensor[(9, 2, 7), int16], %var_7710: Tensor[(9, 2, 7), int16]) -> Tensor[(9, 2, 7), int16] {
  %351 = cast(%var_7710, dtype="int16") /* ty=Tensor[(9, 2, 7), int16] */;
  %352 = shape_of(%var_7709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%var_7709, dtype="int16") /* ty=Tensor[(9, 2, 7), int16] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%353, %354) /* ty=Tensor[(9, 2, 7), int16] */
}

def @func_4004(%var_3951: Tensor[(13, 1), uint64], %var_3952: Tensor[(13, 1), uint64]) -> (Tensor[(13, ?), uint64],) {
  %355 = cast(%var_3952, dtype="uint64") /* ty=Tensor[(13, 1), uint64] */;
  %356 = shape_of(%var_3951, dtype="int32") /* ty=Tensor[(2), int32] */;
  %357 = cast(%var_3951, dtype="uint64") /* ty=Tensor[(13, 1), uint64] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %359 = subtract(%357, %358) /* ty=Tensor[(13, ?), uint64] */;
  (%359,)
}

def @func_8784(%var_8742: Tensor[(12, 2, 8), float64], %var_8743: Tensor[(12, 2, 8), float64], %var_8757: Tensor[(32), float64]) -> (Tensor[(12, 2, 8), float64], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(32), float64], Tensor[(16, 11, 11), float32]) {
  %360 = cast(%var_8743, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %361 = shape_of(%var_8742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%var_8742, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %364 = cast(meta[relay.Constant][33] /* ty=Tensor[(1248), uint64] */, dtype="uint64") /* ty=Tensor[(1248), uint64] */;
  %365 = cast(%var_8757, dtype="float64") /* ty=Tensor[(32), float64] */;
  %366 = reshape(%364, newshape=[1248]) /* ty=Tensor[(1248), uint64] */;
  %367 = reshape(%365, newshape=[32]) /* ty=Tensor[(32), float64] */;
  %368 = @func_3513(%366, %367) /* ty=(Tensor[(7, 11, 8), uint16], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(4, 12, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192, ?), float32]) */;
  %369 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %370 = floor_divide(%362, %363) /* ty=Tensor[(12, 2, 8), float64] */;
  %371 = %368.1;
  %372 = %369.0;
  (%370, %371, meta[relay.Constant][33] /* ty=Tensor[(1248), uint64] */, %var_8757, %372)
}

def @func_4387(%var_4378: Tensor[(14, 14, 5), int32]) -> Tensor[(14, 14, 5), bool] {
  %373 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 14, 5), int32] */, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %374 = shape_of(%var_4378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%var_4378, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%375, %376) /* ty=Tensor[(14, 14, 5), bool] */
}

def @func_618(%var_594: Tensor[(4, 40), float32], %var_604: Tensor[(16, 3, 4), float64]) -> (Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) {
  %377 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
  %378 = cast(%var_594, dtype="float32") /* ty=Tensor[(4, 40), float32] */;
  %379 = reshape(%378, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
  %380 = @func_375(%379) /* ty=(Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) */;
  %381 = cast(%var_604, dtype="bool") /* ty=Tensor[(16, 3, 4), bool] */;
  %382 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(16, 3, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 3, 4), float64] */, dtype="bool") /* ty=Tensor[(16, 3, 4), bool] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %385 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
  %386 = asinh(%385) /* ty=Tensor[(16, 3, 4), float64] */;
  %387 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 3, 4), float64] */, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
  %388 = tan(%387) /* ty=Tensor[(16, 3, 4), float32] */;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
  %390 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%386, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %393 = cos(%377) /* ty=Tensor[(16, 3, 4), float64] */;
  %394 = %380.1;
  %395 = not_equal(%383, %384) /* ty=Tensor[(16, 3, 4), bool] */;
  %396 = mod(%391, %392) /* ty=Tensor[(16, 3, 4), float64] */;
  (%393, %394, %var_594, %395, %396)
}

def @func_10913(%var_10907: Tensor[(32), float64], %var_10909: Tensor[(192), float64]) -> (Tensor[(16, 11, 11), float32], Tensor[(16, 3, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192), float64]) {
  %397 = @func_10572() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 11, 11), float32]) */;
  %398 = cast(%var_10907, dtype="float64") /* ty=Tensor[(32), float64] */;
  %399 = cast(meta[relay.Constant][36] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %400 = cast(%var_10909, dtype="float64") /* ty=Tensor[(192), float64] */;
  %401 = cast(%var_10907, dtype="float64") /* ty=Tensor[(32), float64] */;
  %402 = reshape(%398, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
  %403 = reshape(%399, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %404 = reshape(%400, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %405 = reshape(%401, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
  %406 = @func_949(%402, %403, %404, %405) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) */;
  %407 = %397.0;
  %408 = %406.5;
  (%407, %408, %var_10907, meta[relay.Constant][36] /* ty=Tensor[(2080), float32] */, %var_10909)
}

def @func_8830() -> Tensor[(16, 11, 11), float32] {
  %409 = @func_8229() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %409.0
}

def @func_9907(%var_9898: Tensor[(126), int16]) -> (Tensor[(16, 11, 11), float32], Tensor[(10, 9, 5), int64], Tensor[(192), float64], Tensor[(10, 10, 6), float32], Tensor[(126), int16], Tensor[(600), uint64]) {
  %410 = cast(meta[relay.Constant][37] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %411 = reshape(%410, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), float64] */;
  %412 = @func_2668(%411) /* ty=(Tensor[(4, 12, 4), float64], Tensor[(10, 9, 5), int64], Tensor[(450), int64]) */;
  %413 = cast(%var_9898, dtype="int16") /* ty=Tensor[(126), int16] */;
  %414 = cast(meta[relay.Constant][38] /* ty=Tensor[(600), uint64] */, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %415 = @func_8830() /* ty=Tensor[(16, 11, 11), float32] */;
  %416 = cast(%415, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %417 = cast(%415, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %418 = reshape(%413, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %419 = reshape(%414, newshape=[600]) /* ty=Tensor[(600), uint64] */;
  %420 = reshape(%416, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
  %421 = reshape(%417, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
  %422 = @func_8371(%418, %419, %420, %421) /* ty=(Tensor[(240), float32], Tensor[(9, 2, 7), int32], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(10, 10, 6), float32]) */;
  %423 = %412.1;
  %424 = %422.4;
  (%415, %423, meta[relay.Constant][37] /* ty=Tensor[(192), float64] */, %424, %var_9898, meta[relay.Constant][38] /* ty=Tensor[(600), uint64] */)
}

def @func_4365(%var_4361: Tensor[(16, 12, 13), int32]) -> (Tensor[(16, 12, 13), int32],) {
  %425 = cast(%var_4361, dtype="int32") /* ty=Tensor[(16, 12, 13), int32] */;
  %426 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(16, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(16, 12, 13), int32] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %429 = subtract(%427, %428) /* ty=Tensor[(16, 12, 13), int32] */;
  (%429,)
}

def @main() -> (Tensor[(16, 11, 11), float32], Tensor[(13, 7, 13), int32], Tensor[(91, 13), float32]) {
  %430 = @func_11046() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %431 = cast(meta[relay.Constant][40] /* ty=Tensor[(91, 13), int32] */, dtype="int32") /* ty=Tensor[(91, 13), int32] */;
  %432 = cast(meta[relay.Constant][40] /* ty=Tensor[(91, 13), int32] */, dtype="int32") /* ty=Tensor[(91, 13), int32] */;
  %433 = reshape(%431, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
  %434 = reshape(%432, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
  %435 = @func_2873(%433, %434) /* ty=(Tensor[(13, 7, 13), int32],) */;
  %436 = cast(meta[relay.Constant][40] /* ty=Tensor[(91, 13), int32] */, dtype="float32") /* ty=Tensor[(91, 13), float32] */;
  %437 = %430.0;
  %438 = %435.0;
  %439 = atanh(%436) /* ty=Tensor[(91, 13), float32] */;
  (%437, %438, %439)
}

def @func_4855(%var_4809: Tensor[(12, 10, 9), int8], %var_4810: Tensor[(12, 10, 9), int8], %var_4819: Tensor[(11, 195), float64], %var_4822: int16, %var_4823: Tensor[(450), int64]) -> (Tensor[(1008), float32], Tensor[(11, 195), float64], Tensor[(192), float64], Tensor[(1008), float32], int16, Tensor[(450), int64], Tensor[(12, 10, 9), int64]) {
  %440 = cast(%var_4819, dtype="float64") /* ty=Tensor[(11, 195), float64] */;
  %441 = cast(meta[relay.Constant][41] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %442 = cast(meta[relay.Constant][42] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %443 = cast(%var_4822, dtype="int16") /* ty=int16 */;
  %444 = cast(%var_4823, dtype="int64") /* ty=Tensor[(450), int64] */;
  %445 = cast(%var_4819, dtype="float64") /* ty=Tensor[(11, 195), float64] */;
  %446 = reshape(%440, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float64] */;
  %447 = reshape(%441, newshape=[1, 192]) /* ty=Tensor[(1, 192), float64] */;
  %448 = reshape(%442, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %449 = reshape(%443, newshape=[]) /* ty=int16 */;
  %450 = reshape(%444, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %451 = reshape(%445, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float64] */;
  %452 = @func_3128(%446, %447, %448, %449, %450, %451) /* ty=(Tensor[(4, 2, 4), int16], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(1, 192), float64], Tensor[(450), int64], Tensor[(1040, 2), float32], Tensor[(1008), float32], int16, Tensor[(10, 9, 5), int64], Tensor[(10, 9, 5), float32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 13, 11), bool]) */;
  %453 = cast(%var_4810, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
  %454 = shape_of(%var_4809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%var_4809, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %457 = left_shift(%455, %456) /* ty=Tensor[(12, 10, 9), int8] */;
  %458 = cast(%var_4809, dtype="int64") /* ty=Tensor[(12, 10, 9), int64] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="int64") /* ty=Tensor[(12, 10, 9), int64] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %462 = %452.6;
  %463 = logical_xor(%460, %461) /* ty=Tensor[(12, 10, 9), int64] */;
  (%462, %var_4819, meta[relay.Constant][41] /* ty=Tensor[(192), float64] */, meta[relay.Constant][42] /* ty=Tensor[(1008), float32] */, %var_4822, %var_4823, %463)
}

def @func_10987() -> (Tensor[(16, 11, 11), float32],) {
  %464 = @func_9420() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %465 = %464.0;
  (%465,)
}

def @func_9614() -> Tensor[(16, 11, 11), float32] {
  %466 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %466.0
}

def @func_9158() -> Tensor[(16, 11, 11), float32] {
  %467 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %467.0
}

def @func_549(%var_501: int16, %var_513: Tensor[(1, 160), float32], %var_537: Tensor[(13, 160), float32]) -> (Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) {
  %468 = cast(%var_501, dtype="int16") /* ty=int16 */;
  %469 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 14, 16), int16] */, dtype="int16") /* ty=Tensor[(14, 14, 16), int16] */;
  %470 = cast(%var_513, dtype="float32") /* ty=Tensor[(1, 160), float32] */;
  %471 = reshape(%470, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
  %472 = @func_375(%471) /* ty=(Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) */;
  %473 = cast(%var_513, dtype="float32") /* ty=Tensor[(1, 160), float32] */;
  %474 = reshape(%473, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
  %475 = @func_375(%474) /* ty=(Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) */;
  %476 = cast(%var_513, dtype="uint32") /* ty=Tensor[(1, 160), uint32] */;
  %477 = cast(%var_537, dtype="uint32") /* ty=Tensor[(13, 160), uint32] */;
  %478 = bitwise_xor(%476, %477) /* ty=Tensor[(13, 160), uint32] */;
  %479 = cast(%478, dtype="float32") /* ty=Tensor[(13, 160), float32] */;
  %480 = bitwise_or(%468, %469) /* ty=Tensor[(14, 14, 16), int16] */;
  %481 = %472.1;
  %482 = %475.0;
  %483 = sinh(%479) /* ty=Tensor[(13, 160), float32] */;
  (%480, %481, %482, %483)
}

def @func_7621(%var_7521: Tensor[(1, 7, 4), int8], %var_7522: Tensor[(11, 7, 4), int8], %var_7545: Tensor[(2, 16), float64], %var_7546: Tensor[(2080), float32], %var_7551: Tensor[(96), uint64], %var_7579: Tensor[(1248), uint64], %var_7595: int16, %var_7596: Tensor[(160), float32]) -> (Tensor[(11, 7, 4), bool], Tensor[(2, 16), float64], Tensor[(2080), float32], Tensor[(192), float64], Tensor[(2, 4, 12), uint64], Tensor[(96), uint64], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(10, 16, 5), int32], int16, Tensor[(160), float32], Tensor[(2080), float32]) {
  %484 = cast(%var_7521, dtype="bool") /* ty=Tensor[(1, 7, 4), bool] */;
  %485 = cast(%var_7522, dtype="bool") /* ty=Tensor[(11, 7, 4), bool] */;
  %486 = cast(%var_7551, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %487 = reshape(%486, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), uint64] */;
  %488 = @func_5080(%487) /* ty=(Tensor[(2, 4, 12), uint64],) */;
  %489 = cast(%var_7579, dtype="uint64") /* ty=Tensor[(1248), uint64] */;
  %490 = cast(%var_7545, dtype="float64") /* ty=Tensor[(2, 16), float64] */;
  %491 = reshape(%489, newshape=[1248]) /* ty=Tensor[(1248), uint64] */;
  %492 = reshape(%490, newshape=[32]) /* ty=Tensor[(32), float64] */;
  %493 = @func_3513(%491, %492) /* ty=(Tensor[(7, 11, 8), uint16], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(4, 12, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192, ?), float32]) */;
  %494 = cast(%var_7595, dtype="int16") /* ty=int16 */;
  %495 = cast(%var_7596, dtype="float32") /* ty=Tensor[(160), float32] */;
  %496 = cast(%var_7546, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %497 = reshape(%494, newshape=[]) /* ty=int16 */;
  %498 = reshape(%495, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
  %499 = reshape(%496, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
  %500 = @func_549(%497, %498, %499) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
  %501 = cast(%var_7545, dtype="float64") /* ty=Tensor[(2, 16), float64] */;
  %502 = cast(%var_7546, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %503 = cast(meta[relay.Constant][44] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %504 = cast(%var_7545, dtype="float64") /* ty=Tensor[(2, 16), float64] */;
  %505 = reshape(%501, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
  %506 = reshape(%502, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %507 = reshape(%503, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %508 = reshape(%504, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
  %509 = @func_949(%505, %506, %507, %508) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) */;
  %510 = %509.4;
  %511 = cast(%510, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %512 = acos(%511) /* ty=Tensor[(2080), float32] */;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %514 = greater_equal(%484, %485) /* ty=Tensor[(11, 7, 4), bool] */;
  %515 = %488.0;
  %516 = %493.5;
  %517 = %500.1;
  %518 = tan(%513) /* ty=Tensor[(2080), float32] */;
  (%514, %var_7545, %var_7546, meta[relay.Constant][44] /* ty=Tensor[(192), float64] */, %515, %var_7551, %516, %var_7579, %517, %var_7595, %var_7596, %518)
}

def @func_9375(%var_9278: Tensor[(16, 11, 11), float32], %var_9285: Tensor[(600), uint64], %var_9293: Tensor[(72), int64], %var_9321: Tensor[(440), float32], %var_9322: Tensor[(192), float64], %var_9340: Tensor[(28), int8], %var_9341: Tensor[(308), int8], %var_9342: Tensor[(32), float64], %var_9343: Tensor[(8, 12), uint64]) -> (Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(126), int16], Tensor[(600), uint64], Tensor[(12, 6, 14), int64], Tensor[(72), int64], Tensor[(10, 16, 5), int32], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(440), float32], Tensor[(192), float64], Tensor[(2080), float32], Tensor[(28), int8], Tensor[(308), int8], Tensor[(32), float64], Tensor[(8, 12), uint64], Tensor[(1248), uint64], Tensor[(1183), float64]) {
  %519 = @func_8830() /* ty=Tensor[(16, 11, 11), float32] */;
  %520 = cast(%var_9278, dtype="uint16") /* ty=Tensor[(16, 11, 11), uint16] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%519, dtype="uint16") /* ty=Tensor[(16, 11, 11), uint16] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %524 = cast(meta[relay.Constant][45] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %525 = cast(%var_9285, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %526 = cast(%519, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %527 = cast(%var_9278, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %528 = reshape(%524, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %529 = reshape(%525, newshape=[600]) /* ty=Tensor[(600), uint64] */;
  %530 = reshape(%526, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
  %531 = reshape(%527, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
  %532 = @func_8371(%528, %529, %530, %531) /* ty=(Tensor[(240), float32], Tensor[(9, 2, 7), int32], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(10, 10, 6), float32]) */;
  %533 = cast(%var_9293, dtype="int64") /* ty=Tensor[(72), int64] */;
  %534 = reshape(%533, newshape=[12, 6, 1]) /* ty=Tensor[(12, 6, 1), int64] */;
  %535 = @func_5869(%534) /* ty=(Tensor[(12, 6, 14), int64], Tensor[(16, 12, 13), int32], Tensor[(2496, 1), int32]) */;
  %536 = cast(meta[relay.Constant][46] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %537 = cast(meta[relay.Constant][47] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %538 = cast(meta[relay.Constant][48] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %539 = reshape(%536, newshape=[]) /* ty=int16 */;
  %540 = reshape(%537, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
  %541 = reshape(%538, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
  %542 = @func_549(%539, %540, %541) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
  %543 = cast(%var_9321, dtype="float32") /* ty=Tensor[(440), float32] */;
  %544 = cast(%var_9322, dtype="float64") /* ty=Tensor[(192), float64] */;
  %545 = reshape(%543, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %546 = reshape(%544, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %547 = @func_2614(%545, %546) /* ty=(Tensor[(11, 5, 8), bool], Tensor[(11, 5, 8), float32], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) */;
  %548 = cast(%var_9340, dtype="int8") /* ty=Tensor[(28), int8] */;
  %549 = cast(%var_9341, dtype="int8") /* ty=Tensor[(308), int8] */;
  %550 = cast(%var_9342, dtype="float64") /* ty=Tensor[(32), float64] */;
  %551 = cast(meta[relay.Constant][48] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %552 = cast(%var_9343, dtype="uint64") /* ty=Tensor[(8, 12), uint64] */;
  %553 = cast(meta[relay.Constant][49] /* ty=Tensor[(1248), uint64] */, dtype="uint64") /* ty=Tensor[(1248), uint64] */;
  %554 = cast(meta[relay.Constant][46] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %555 = cast(meta[relay.Constant][47] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %556 = reshape(%548, newshape=[1, 7, 4]) /* ty=Tensor[(1, 7, 4), int8] */;
  %557 = reshape(%549, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), int8] */;
  %558 = reshape(%550, newshape=[2, 16]) /* ty=Tensor[(2, 16), float64] */;
  %559 = reshape(%551, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %560 = reshape(%552, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %561 = reshape(%553, newshape=[1248]) /* ty=Tensor[(1248), uint64] */;
  %562 = reshape(%554, newshape=[]) /* ty=int16 */;
  %563 = reshape(%555, newshape=[160]) /* ty=Tensor[(160), float32] */;
  %564 = @func_7621(%556, %557, %558, %559, %560, %561, %562, %563) /* ty=(Tensor[(11, 7, 4), bool], Tensor[(2, 16), float64], Tensor[(2080), float32], Tensor[(192), float64], Tensor[(2, 4, 12), uint64], Tensor[(96), uint64], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(10, 16, 5), int32], int16, Tensor[(160), float32], Tensor[(2080), float32]) */;
  %565 = cast(meta[relay.Constant][46] /* ty=int16 */, dtype="uint32") /* ty=uint32 */;
  %566 = cast(meta[relay.Constant][47] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %567 = reshape(%565, newshape=[]) /* ty=uint32 */;
  %568 = reshape(%566, newshape=[160]) /* ty=Tensor[(160), float32] */;
  %569 = @func_6475(%567, %568) /* ty=(Tensor[(14, 14, 5), bool], Tensor[(980), int32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 1, 4), int64], Tensor[(15, ?, 4), bool], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) */;
  %570 = %569.3;
  %571 = cast(%570, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %572 = bitwise_xor(%522, %523) /* ty=Tensor[(16, 11, 11), uint16] */;
  %573 = %532.6;
  %574 = %535.0;
  %575 = %542.1;
  %576 = %547.2;
  %577 = %564.6;
  %578 = atanh(%571) /* ty=Tensor[(1183), float64] */;
  (%572, %573, meta[relay.Constant][45] /* ty=Tensor[(126), int16] */, %var_9285, %574, %var_9293, %575, meta[relay.Constant][46] /* ty=int16 */, meta[relay.Constant][47] /* ty=Tensor[(160), float32] */, meta[relay.Constant][48] /* ty=Tensor[(2080), float32] */, %576, %var_9321, %var_9322, %577, %var_9340, %var_9341, %var_9342, %var_9343, meta[relay.Constant][49] /* ty=Tensor[(1248), uint64] */, %578)
}

def @func_9245(%var_9211: Tensor[(2, 6, 3), float64]) -> (Tensor[(2, 6, 3), int16], Tensor[(2, 6, 3), bool]) {
  %579 = cast(%var_9211, dtype="float64") /* ty=Tensor[(2, 6, 3), float64] */;
  %580 = exp(%579) /* ty=Tensor[(2, 6, 3), float64] */;
  %581 = cast(%580, dtype="int16") /* ty=Tensor[(2, 6, 3), int16] */;
  %582 = shape_of(%var_9211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%var_9211, dtype="int16") /* ty=Tensor[(2, 6, 3), int16] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %585 = cast(%var_9211, dtype="bool") /* ty=Tensor[(2, 6, 3), bool] */;
  %586 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%580, dtype="bool") /* ty=Tensor[(2, 6, 3), bool] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %589 = minimum(%583, %584) /* ty=Tensor[(2, 6, 3), int16] */;
  %590 = greater_equal(%587, %588) /* ty=Tensor[(2, 6, 3), bool] */;
  (%589, %590)
}

def @func_9420() -> (Tensor[(16, 11, 11), float32],) {
  %591 = @func_8229() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %592 = %591.0;
  (%592,)
}

def @func_10572() -> (Tensor[(16, 11, 11), float32], Tensor[(16, 11, 11), float32]) {
  %593 = @func_9173() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %594 = @func_10294() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %595 = %593.0;
  %596 = %594.0;
  (%595, %596)
}

def @func_3513(%var_3471: Tensor[(1248), uint64], %var_3498: Tensor[(32), float64]) -> (Tensor[(7, 11, 8), uint16], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(4, 12, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192, ?), float32]) {
  %597 = cast(meta[relay.Constant][51] /* ty=Tensor[(7, 11, 8), uint16] */, dtype="uint16") /* ty=Tensor[(7, 11, 8), uint16] */;
  %598 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(7, 11, 8), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 11, 8), uint16] */, dtype="uint16") /* ty=Tensor[(7, 11, 8), uint16] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %601 = cast(%var_3471, dtype="uint64") /* ty=Tensor[(1248), uint64] */;
  %602 = reshape(%601, newshape=[6, 13, 16]) /* ty=Tensor[(6, 13, 16), uint64] */;
  %603 = @func_2447(%602) /* ty=(Tensor[(10, 16, 5), int32], Tensor[(160), float32], Tensor[(6, 13, 16), float64], Tensor[(6, 13, 16), float32]) */;
  %604 = cast(meta[relay.Constant][52] /* ty=Tensor[(192, 1), float64] */, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %605 = reshape(%604, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), float64] */;
  %606 = @func_2668(%605) /* ty=(Tensor[(4, 12, 4), float64], Tensor[(10, 9, 5), int64], Tensor[(450), int64]) */;
  %607 = cast(%var_3498, dtype="float64") /* ty=Tensor[(32), float64] */;
  %608 = cast(meta[relay.Constant][53] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %609 = cast(meta[relay.Constant][52] /* ty=Tensor[(192, 1), float64] */, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %610 = cast(%var_3498, dtype="float64") /* ty=Tensor[(32), float64] */;
  %611 = reshape(%607, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
  %612 = reshape(%608, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %613 = reshape(%609, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %614 = reshape(%610, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
  %615 = @func_949(%611, %612, %613, %614) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) */;
  %616 = %615.6;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(192), float32] */;
  %618 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(192, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %619 = cast(meta[relay.Constant][52] /* ty=Tensor[(192, 1), float64] */, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %621 = bitwise_and(%599, %600) /* ty=Tensor[(7, 11, 8), uint16] */;
  %622 = %603.2;
  %623 = %606.0;
  %624 = floor_mod(%619, %620) /* ty=Tensor[(192, ?), float32] */;
  (%621, %622, %var_3471, %623, %var_3498, meta[relay.Constant][53] /* ty=Tensor[(2080), float32] */, %624)
}

def @func_8137(%var_8098: Tensor[(4, 5, 12), float32]) -> (Tensor[(9, 2, 7), int16], Tensor[(21, 6), int16], Tensor[(4, 5, 12), bool]) {
  %625 = cast(meta[relay.Constant][54] /* ty=Tensor[(21, 6), int16] */, dtype="int16") /* ty=Tensor[(21, 6), int16] */;
  %626 = cast(meta[relay.Constant][54] /* ty=Tensor[(21, 6), int16] */, dtype="int16") /* ty=Tensor[(21, 6), int16] */;
  %627 = reshape(%625, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %628 = reshape(%626, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %629 = cast(%var_8098, dtype="float32") /* ty=Tensor[(4, 5, 12), float32] */;
  %630 = sin(%629) /* ty=Tensor[(4, 5, 12), float32] */;
  %631 = cast(%var_8098, dtype="bool") /* ty=Tensor[(4, 5, 12), bool] */;
  %632 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%630, dtype="bool") /* ty=Tensor[(4, 5, 12), bool] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %635 = @func_7722(%627, %628) /* ty=Tensor[(9, 2, 7), int16] */;
  %636 = equal(%633, %634) /* ty=Tensor[(4, 5, 12), bool] */;
  (%635, meta[relay.Constant][54] /* ty=Tensor[(21, 6), int16] */, %636)
}

def @func_8371(%var_8301: Tensor[(9, 2, 7), int16], %var_8307: Tensor[(600), uint64], %var_8336: Tensor[(16, 11, 11), float32], %var_8348: Tensor[(16, 11, 11), float32]) -> (Tensor[(240), float32], Tensor[(9, 2, 7), int32], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(10, 10, 6), float32]) {
  %637 = cast(meta[relay.Constant][55] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %638 = reshape(%637, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), float32] */;
  %639 = @func_8137(%638) /* ty=(Tensor[(9, 2, 7), int16], Tensor[(21, 6), int16], Tensor[(4, 5, 12), bool]) */;
  %640 = %639.0;
  %641 = cast(%var_8301, dtype="int32") /* ty=Tensor[(9, 2, 7), int32] */;
  %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%640, dtype="int32") /* ty=Tensor[(9, 2, 7), int32] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %645 = cast(%var_8307, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %646 = cast(%var_8307, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %647 = reshape(%645, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %648 = reshape(%646, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %649 = @func_6352(%647, %648) /* ty=(Tensor[(10, 10, 6), float32],) */;
  %650 = %649.0;
  %651 = cast(%650, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
  %652 = cast(%650, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
  %653 = reshape(%651, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %654 = reshape(%652, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %655 = @func_6352(%653, %654) /* ty=(Tensor[(10, 10, 6), float32],) */;
  %656 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %657 = %656.0;
  %658 = cast(%var_8336, dtype="uint16") /* ty=Tensor[(16, 11, 11), uint16] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%657, dtype="uint16") /* ty=Tensor[(16, 11, 11), uint16] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %662 = @func_8229() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %663 = %662.0;
  %664 = cast(%var_8348, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%663, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %668 = cast(%650, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
  %669 = cast(%650, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
  %670 = reshape(%668, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %671 = reshape(%669, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %672 = @func_6352(%670, %671) /* ty=(Tensor[(10, 10, 6), float32],) */;
  %673 = right_shift(%643, %644) /* ty=Tensor[(9, 2, 7), int32] */;
  %674 = %655.0;
  %675 = maximum(%660, %661) /* ty=Tensor[(16, 11, 11), uint16] */;
  %676 = floor_divide(%666, %667) /* ty=Tensor[(16, 11, 11), float32] */;
  %677 = %672.0;
  (meta[relay.Constant][55] /* ty=Tensor[(240), float32] */, %673, %650, %var_8307, %674, %675, %676, %677)
}

def @func_7978(%var_7952: Tensor[(1320), uint8]) -> (Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(1320), uint8]) {
  %678 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %679 = cast(%var_7952, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %680 = reshape(%679, newshape=[1320]) /* ty=Tensor[(1320), uint8] */;
  %681 = @func_7871(%680) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(780), int32], Tensor[(12, 5, 13), int32], Tensor[(12, 5, 13), int32], Tensor[(2080), float32], Tensor[(1320), uint8], Tensor[(2080), float32], Tensor[(14, 14, 5), bool], Tensor[(980), int32]) */;
  %682 = %678.0;
  %683 = %681.3;
  (%682, %683, %var_7952)
}

def @func_8400(%var_8395: Tensor[(8, 9, 14), float64]) -> (Tensor[(8, 9, 14), float64],) {
  %684 = cast(%var_8395, dtype="float64") /* ty=Tensor[(8, 9, 14), float64] */;
  %685 = log(%684) /* ty=Tensor[(8, 9, 14), float64] */;
  (%685,)
}

def @func_9812(%var_9759: Tensor[(600, 1), uint64], %var_9770: Tensor[(1, 60), float32], %var_9782: Tensor[(160), float32]) -> (Tensor[(16, 11, 11), uint32], Tensor[(126), int16], Tensor[(600, 1), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 3, 4), bool], Tensor[(160), float32], Tensor[(192), float64], Tensor[(6, 2, 5), bool], Tensor[(16, 11, 11), float32], Tensor[(16, 11, 11), float32]) {
  %686 = @func_9586() /* ty=(Tensor[(16, 11, 11), uint32], Tensor[(16, 11, 11), float32]) */;
  %687 = cast(meta[relay.Constant][56] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %688 = cast(%var_9759, dtype="uint64") /* ty=Tensor[(600, 1), uint64] */;
  %689 = %686.0;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %691 = cast(%689, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %692 = reshape(%687, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %693 = reshape(%688, newshape=[600]) /* ty=Tensor[(600), uint64] */;
  %694 = reshape(%690, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
  %695 = reshape(%691, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
  %696 = @func_8371(%692, %693, %694, %695) /* ty=(Tensor[(240), float32], Tensor[(9, 2, 7), int32], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(10, 10, 6), float32]) */;
  %697 = %696.2;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
  %699 = cast(%var_9782, dtype="float32") /* ty=Tensor[(160), float32] */;
  %700 = cast(meta[relay.Constant][57] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %701 = reshape(%699, newshape=[4, 40]) /* ty=Tensor[(4, 40), float32] */;
  %702 = reshape(%700, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
  %703 = @func_618(%701, %702) /* ty=(Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) */;
  %704 = cast(%var_9770, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %705 = reshape(%704, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), float32] */;
  %706 = @func_3227(%705) /* ty=(Tensor[(6, 2, 5), float32],) */;
  %707 = %706.0;
  %708 = cast(%var_9770, dtype="bool") /* ty=Tensor[(1, 60), bool] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%707, dtype="bool") /* ty=Tensor[(6, 2, 5), bool] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %712 = @func_8933() /* ty=(Tensor[(60), float32], Tensor[(16, 11, 11), float32]) */;
  %713 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %714 = log10(%698) /* ty=Tensor[(10, 10, 6), float32] */;
  %715 = %703.3;
  %716 = logical_and(%710, %711) /* ty=Tensor[(6, 2, 5), bool] */;
  %717 = %712.1;
  %718 = %713.0;
  (%689, meta[relay.Constant][56] /* ty=Tensor[(126), int16] */, %var_9759, %714, %715, %var_9782, meta[relay.Constant][57] /* ty=Tensor[(192), float64] */, %716, %717, %718)
}

def @func_10979() -> (Tensor[(16, 11, 11), float32],) {
  %719 = @func_10166() /* ty=Tensor[(16, 11, 11), float32] */;
  (%719,)
}

def @func_7346(%var_7300: float32, %var_7318: Tensor[(110), float64]) -> (Tensor[(15, 11, 12), float32], Tensor[(15, 11, 12), float32], Tensor[(11, 10, 11), float64], Tensor[(110), float64], Tensor[(12, 5, 13), int32], Tensor[(780), int32]) {
  %720 = cast(%var_7300, dtype="float32") /* ty=float32 */;
  %721 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 12), float32] */;
  %722 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 12), float32] */;
  %723 = cast(%var_7318, dtype="float64") /* ty=Tensor[(110), float64] */;
  %724 = reshape(%723, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float64] */;
  %725 = cast(meta[relay.Constant][59] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %726 = cast(meta[relay.Constant][59] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %727 = reshape(%725, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %728 = reshape(%726, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %729 = @func_6902(%727, %728) /* ty=(Tensor[(12, 5, 13), int32],) */;
  %730 = mod(%720, %721) /* ty=Tensor[(15, 11, 12), float32] */;
  %731 = asin(%722) /* ty=Tensor[(15, 11, 12), float32] */;
  %732 = @func_3348(%724) /* ty=Tensor[(11, 10, 11), float64] */;
  %733 = %729.0;
  (%730, %731, %732, %var_7318, %733, meta[relay.Constant][59] /* ty=Tensor[(780), int32] */)
}

def @func_11046() -> (Tensor[(16, 11, 11), float32],) {
  %734 = @func_10411() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %735 = %734.0;
  %736 = cast(%735, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %737 = acos(%736) /* ty=Tensor[(16, 11, 11), float32] */;
  (%737,)
}

def @func_10737(%var_10725: Tensor[(12, 12, 10), float64], %var_10726: Tensor[(12, 12, 10), float64]) -> (Tensor[(12, 12, 10), float32],) {
  %738 = cast(%var_10726, dtype="float64") /* ty=Tensor[(12, 12, 10), float64] */;
  %739 = shape_of(%var_10725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%var_10725, dtype="float64") /* ty=Tensor[(12, 12, 10), float64] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %742 = power(%740, %741) /* ty=Tensor[(12, 12, 10), float64] */;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(12, 12, 10), float32] */;
  %744 = exp(%743) /* ty=Tensor[(12, 12, 10), float32] */;
  (%744,)
}

def @func_11021(%var_10993: Tensor[(10, 45), int64]) -> (Tensor[(10, 9, 5), int64], Tensor[(10, 45), int64], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(2496), int32], Tensor[(16, 11, 11), float64]) {
  %745 = cast(%var_10993, dtype="int64") /* ty=Tensor[(10, 45), int64] */;
  %746 = cast(%var_10993, dtype="int64") /* ty=Tensor[(10, 45), int64] */;
  %747 = reshape(%745, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %748 = reshape(%746, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %749 = cast(meta[relay.Constant][60] /* ty=Tensor[(600), uint64] */, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %750 = cast(meta[relay.Constant][60] /* ty=Tensor[(600), uint64] */, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %751 = reshape(%749, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %752 = reshape(%750, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %753 = @func_6352(%751, %752) /* ty=(Tensor[(10, 10, 6), float32],) */;
  %754 = @func_8955() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) */;
  %755 = @func_10411() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %756 = %755.0;
  %757 = @func_9173() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %758 = %757.0;
  %759 = cast(%758, dtype="float64") /* ty=Tensor[(16, 11, 11), float64] */;
  %760 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%756, dtype="float64") /* ty=Tensor[(16, 11, 11), float64] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %763 = @func_2056(%747, %748) /* ty=Tensor[(10, 9, 5), int64] */;
  %764 = %753.0;
  %765 = %754.2;
  %766 = floor_mod(%761, %762) /* ty=Tensor[(16, 11, 11), float64] */;
  (%763, %var_10993, %764, meta[relay.Constant][60] /* ty=Tensor[(600), uint64] */, %765, %766)
}

def @func_3933(%var_3903: Tensor[(9, 9, 5), float32]) -> (Tensor[(9, 9, 5), float64], Tensor[(11, 16, 3), float32], Tensor[(528), float32]) {
  %767 = cast(%var_3903, dtype="float32") /* ty=Tensor[(9, 9, 5), float32] */;
  %768 = sinh(%767) /* ty=Tensor[(9, 9, 5), float32] */;
  %769 = cast(%768, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
  %770 = shape_of(%var_3903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%var_3903, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %773 = maximum(%771, %772) /* ty=Tensor[(9, 9, 5), float64] */;
  %774 = cast(%773, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
  %775 = cast(meta[relay.Constant][61] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %776 = reshape(%775, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), float32] */;
  %777 = @func_1576(%776) /* ty=(Tensor[(11, 16, 3), float32], Tensor[(11, 16, 3), float64]) */;
  %778 = erf(%774) /* ty=Tensor[(9, 9, 5), float64] */;
  %779 = %777.0;
  (%778, %779, meta[relay.Constant][61] /* ty=Tensor[(528), float32] */)
}

def @func_8190() -> (Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) {
  %780 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %781 = cast(meta[relay.Constant][62] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %782 = reshape(%781, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), float32] */;
  %783 = @func_3227(%782) /* ty=(Tensor[(6, 2, 5), float32],) */;
  %784 = %780.0;
  %785 = %783.0;
  (%784, %785, meta[relay.Constant][62] /* ty=Tensor[(60), float32] */)
}

def @func_10529(%var_10457: Tensor[(3, 3, 5), float32], %var_10505: Tensor[(450, 1), int64], %var_10508: Tensor[(3, 3, 5), float32]) -> (Tensor[(14, 14, 5), bool], Tensor[(6, 220), uint8], Tensor[(16, 11, 11), float32], Tensor[(3, 3, 5), float32], Tensor[(10, 9, 5), int64], Tensor[(450, 1), int64], Tensor[(3, 3, 5), bool], Tensor[(3, 3, 5), float64]) {
  %786 = cast(meta[relay.Constant][63] /* ty=Tensor[(6, 220), uint8] */, dtype="uint8") /* ty=Tensor[(6, 220), uint8] */;
  %787 = reshape(%786, newshape=[1320]) /* ty=Tensor[(1320), uint8] */;
  %788 = @func_7871(%787) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(780), int32], Tensor[(12, 5, 13), int32], Tensor[(12, 5, 13), int32], Tensor[(2080), float32], Tensor[(1320), uint8], Tensor[(2080), float32], Tensor[(14, 14, 5), bool], Tensor[(980), int32]) */;
  %789 = @func_10294() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %790 = cast(%var_10457, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
  %791 = sinh(%790) /* ty=Tensor[(3, 3, 5), float32] */;
  %792 = cast(%791, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
  %793 = cast(%var_10505, dtype="int64") /* ty=Tensor[(450, 1), int64] */;
  %794 = cast(%var_10505, dtype="int64") /* ty=Tensor[(450, 1), int64] */;
  %795 = reshape(%793, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %796 = reshape(%794, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %797 = cast(%var_10508, dtype="bool") /* ty=Tensor[(3, 3, 5), bool] */;
  %798 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%791, dtype="bool") /* ty=Tensor[(3, 3, 5), bool] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %801 = cast(%791, dtype="float64") /* ty=Tensor[(3, 3, 5), float64] */;
  %802 = %788.8;
  %803 = %789.0;
  %804 = sin(%792) /* ty=Tensor[(3, 3, 5), float32] */;
  %805 = @func_2056(%795, %796) /* ty=Tensor[(10, 9, 5), int64] */;
  %806 = less(%799, %800) /* ty=Tensor[(3, 3, 5), bool] */;
  %807 = sigmoid(%801) /* ty=Tensor[(3, 3, 5), float64] */;
  (%802, meta[relay.Constant][63] /* ty=Tensor[(6, 220), uint8] */, %803, %804, %805, %var_10505, %806, %807)
}

def @func_8611(%var_8580: Tensor[(1320), uint8], %var_8581: Tensor[(2080), float32]) -> (Tensor[(16, 11, 11), float32], Tensor[(160), float32], Tensor[(1320), uint8], Tensor[(2080), float32]) {
  %808 = cast(%var_8580, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %809 = cast(%var_8581, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %810 = reshape(%808, newshape=[10, 11, 12]) /* ty=Tensor[(10, 11, 12), uint8] */;
  %811 = reshape(%809, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %812 = @func_714(%810, %811) /* ty=(Tensor[(10, 11, 12), uint8], Tensor[(10, 16, 1), float32], int16, Tensor[(160), float32], Tensor[(2080), float32]) */;
  %813 = cast(%var_8581, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %814 = @func_8075() /* ty=Tensor[(16, 11, 11), float32] */;
  %815 = %812.3;
  %816 = log10(%813) /* ty=Tensor[(2080), float32] */;
  (%814, %815, %var_8580, %816)
}

def @func_2614(%var_2586: Tensor[(11, 5, 8), float32], %var_2592: Tensor[(192), float64]) -> (Tensor[(11, 5, 8), bool], Tensor[(11, 5, 8), float32], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) {
  %817 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 5, 8), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %818 = atanh(%817) /* ty=Tensor[(11, 5, 8), float32] */;
  %819 = cast(%818, dtype="uint64") /* ty=Tensor[(11, 5, 8), uint64] */;
  %820 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(11, 5, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 5, 8), float32] */, dtype="uint64") /* ty=Tensor[(11, 5, 8), uint64] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %823 = subtract(%821, %822) /* ty=Tensor[(11, 5, 8), uint64] */;
  %824 = cast(%823, dtype="bool") /* ty=Tensor[(11, 5, 8), bool] */;
  %825 = shape_of(%818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%818, dtype="bool") /* ty=Tensor[(11, 5, 8), bool] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %828 = cast(%var_2586, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %829 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(11, 5, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 5, 8), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %832 = cast(meta[relay.Constant][65] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %833 = cast(%var_2592, dtype="float64") /* ty=Tensor[(192), float64] */;
  %834 = reshape(%832, newshape=[4, 40]) /* ty=Tensor[(4, 40), float32] */;
  %835 = reshape(%833, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
  %836 = @func_618(%834, %835) /* ty=(Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) */;
  %837 = greater_equal(%826, %827) /* ty=Tensor[(11, 5, 8), bool] */;
  %838 = mod(%830, %831) /* ty=Tensor[(11, 5, 8), float32] */;
  %839 = %836.4;
  (%837, %838, %839, meta[relay.Constant][65] /* ty=Tensor[(160), float32] */, %var_2592)
}

def @func_949(%var_918: Tensor[(4, 2, 4), float64], %var_933: Tensor[(2080), float32], %var_936: Tensor[(192), float64], %var_943: Tensor[(4, 2, 4), float64]) -> (Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) {
  %840 = cast(meta[relay.Constant][66] /* ty=Tensor[(4, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
  %841 = shape_of(%var_918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%var_918, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %844 = cast(meta[relay.Constant][67] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %845 = cast(meta[relay.Constant][68] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %846 = cast(%var_933, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %847 = reshape(%844, newshape=[]) /* ty=int16 */;
  %848 = reshape(%845, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
  %849 = reshape(%846, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
  %850 = @func_549(%847, %848, %849) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
  %851 = cast(meta[relay.Constant][68] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %852 = cast(%var_936, dtype="float64") /* ty=Tensor[(192), float64] */;
  %853 = reshape(%851, newshape=[4, 40]) /* ty=Tensor[(4, 40), float32] */;
  %854 = reshape(%852, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
  %855 = @func_618(%853, %854) /* ty=(Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) */;
  %856 = cast(meta[relay.Constant][67] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %857 = cast(meta[relay.Constant][68] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %858 = cast(%var_933, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %859 = reshape(%856, newshape=[]) /* ty=int16 */;
  %860 = reshape(%857, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
  %861 = reshape(%858, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
  %862 = @func_549(%859, %860, %861) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
  %863 = cast(meta[relay.Constant][69] /* ty=Tensor[(1320), uint8] */, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %864 = cast(%var_933, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %865 = reshape(%863, newshape=[10, 11, 12]) /* ty=Tensor[(10, 11, 12), uint8] */;
  %866 = reshape(%864, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %867 = @func_714(%865, %866) /* ty=(Tensor[(10, 11, 12), uint8], Tensor[(10, 16, 1), float32], int16, Tensor[(160), float32], Tensor[(2080), float32]) */;
  %868 = cast(meta[relay.Constant][66] /* ty=Tensor[(4, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
  %869 = exp(%868) /* ty=Tensor[(4, 2, 4), float64] */;
  %870 = cast(%var_943, dtype="int16") /* ty=Tensor[(4, 2, 4), int16] */;
  %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%869, dtype="int16") /* ty=Tensor[(4, 2, 4), int16] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %874 = floor_mod(%842, %843) /* ty=Tensor[(4, 2, 4), float64] */;
  %875 = %850.0;
  %876 = %855.0;
  %877 = %862.1;
  %878 = %867.2;
  %879 = bitwise_xor(%872, %873) /* ty=Tensor[(4, 2, 4), int16] */;
  (%874, %875, meta[relay.Constant][67] /* ty=int16 */, meta[relay.Constant][68] /* ty=Tensor[(160), float32] */, %var_933, %876, %var_936, %877, %878, meta[relay.Constant][69] /* ty=Tensor[(1320), uint8] */, %879)
}

def @func_10166() -> Tensor[(16, 11, 11), float32] {
  @func_8830() /* ty=Tensor[(16, 11, 11), float32] */
}

def @func_10074(%var_10027: Tensor[(16, 11, 11), float32], %var_10043: Tensor[(60), float64], %var_10067: Tensor[(126, 1), int16]) -> (Tensor[(16, 11, 11), bool], Tensor[(6, 2, 5), int16], Tensor[(60), float64], Tensor[(192), float64], Tensor[(126, 1), int16], Tensor[(2496), int32]) {
  %880 = @func_8075() /* ty=Tensor[(16, 11, 11), float32] */;
  %881 = cast(%var_10027, dtype="bool") /* ty=Tensor[(16, 11, 11), bool] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="bool") /* ty=Tensor[(16, 11, 11), bool] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %885 = cast(%var_10043, dtype="float64") /* ty=Tensor[(60), float64] */;
  %886 = reshape(%885, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %887 = @func_9534(%886) /* ty=(Tensor[(2496), int32], Tensor[(6, 2, 5), int16], Tensor[(60), float64]) */;
  %888 = cast(%var_10067, dtype="int16") /* ty=Tensor[(126, 1), int16] */;
  %889 = reshape(%888, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %890 = @func_9907(%889) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(10, 9, 5), int64], Tensor[(192), float64], Tensor[(10, 10, 6), float32], Tensor[(126), int16], Tensor[(600), uint64]) */;
  %891 = @func_8955() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) */;
  %892 = less(%883, %884) /* ty=Tensor[(16, 11, 11), bool] */;
  %893 = %887.1;
  %894 = %890.2;
  %895 = %891.2;
  (%892, %893, %var_10043, %894, %var_10067, %895)
}

def @func_5869(%var_5827: Tensor[(12, 6, 1), int64]) -> (Tensor[(12, 6, 14), int64], Tensor[(16, 12, 13), int32], Tensor[(2496, 1), int32]) {
  %896 = cast(%var_5827, dtype="int64") /* ty=Tensor[(12, 6, 1), int64] */;
  %897 = cast(meta[relay.Constant][70] /* ty=Tensor[(12, 6, 14), int64] */, dtype="int64") /* ty=Tensor[(12, 6, 14), int64] */;
  %898 = cast(meta[relay.Constant][71] /* ty=Tensor[(2496, 1), int32] */, dtype="int32") /* ty=Tensor[(2496, 1), int32] */;
  %899 = reshape(%898, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), int32] */;
  %900 = @func_4365(%899) /* ty=(Tensor[(16, 12, 13), int32],) */;
  %901 = bitwise_or(%896, %897) /* ty=Tensor[(12, 6, 14), int64] */;
  %902 = %900.0;
  (%901, %902, meta[relay.Constant][71] /* ty=Tensor[(2496, 1), int32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6902(%var_6897: Tensor[(12, 5, 13), int32], %var_6898: Tensor[(12, 5, 13), int32]) -> (Tensor[(12, 5, 13), int32],) {
  %0 = cast(%var_6898, dtype="int32") /* ty=Tensor[(12, 5, 13), int32] */;
  %1 = shape_of(%var_6897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_6897, dtype="int32") /* ty=Tensor[(12, 5, 13), int32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %4 = bitwise_and(%2, %3) /* ty=Tensor[(12, 5, 13), int32] */;
  (%4,)
}

def @main() -> (Tensor[(16, 11, 11), float32], Tensor[(13, 7, 13), int32], Tensor[(91, 13), float32]) {
  %5 = @func_11047() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(91, 13), int32] */, dtype="int32") /* ty=Tensor[(91, 13), int32] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(91, 13), int32] */, dtype="int32") /* ty=Tensor[(91, 13), int32] */;
  %8 = reshape(%6, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
  %9 = reshape(%7, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
  %10 = @func_2877(%8, %9) /* ty=(Tensor[(13, 7, 13), int32],) */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(91, 13), int32] */, dtype="float32") /* ty=Tensor[(91, 13), float32] */;
  %12 = %5.0;
  %13 = %10.0;
  %14 = atanh(%11) /* ty=Tensor[(91, 13), float32] */;
  (%12, %13, %14)
}

def @func_9731(%var_9689: Tensor[(4, 5, 11), uint32], %var_9690: Tensor[(4, 5, 11), uint32], %var_9708: uint32, %var_9709: Tensor[(160), float32], %var_9717: Tensor[(72), int64]) -> (Tensor[(4, 5, 11), bool], Tensor[(192), float64], uint32, Tensor[(160), float32], Tensor[(16, 12, 13), int32], Tensor[(72), int64], Tensor[(16, 11, 11), float64]) {
  %15 = cast(%var_9690, dtype="bool") /* ty=Tensor[(4, 5, 11), bool] */;
  %16 = shape_of(%var_9689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%var_9689, dtype="bool") /* ty=Tensor[(4, 5, 11), bool] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %19 = cast(%var_9708, dtype="uint32") /* ty=uint32 */;
  %20 = cast(%var_9709, dtype="float32") /* ty=Tensor[(160), float32] */;
  %21 = reshape(%19, newshape=[]) /* ty=uint32 */;
  %22 = reshape(%20, newshape=[160]) /* ty=Tensor[(160), float32] */;
  %23 = @func_6475(%21, %22) /* ty=(Tensor[(14, 14, 5), bool], Tensor[(980), int32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 1, 4), int64], Tensor[(15, ?, 4), bool], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) */;
  %24 = cast(%var_9717, dtype="int64") /* ty=Tensor[(72), int64] */;
  %25 = reshape(%24, newshape=[12, 6, 1]) /* ty=Tensor[(12, 6, 1), int64] */;
  %26 = @func_5869(%25) /* ty=(Tensor[(12, 6, 14), int64], Tensor[(16, 12, 13), int32], Tensor[(2496, 1), int32]) */;
  %27 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %28 = %27.0;
  %29 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %30 = %29.0;
  %31 = cast(%30, dtype="float64") /* ty=Tensor[(16, 11, 11), float64] */;
  %32 = shape_of(%28, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%28, dtype="float64") /* ty=Tensor[(16, 11, 11), float64] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %35 = equal(%17, %18) /* ty=Tensor[(4, 5, 11), bool] */;
  %36 = %23.8;
  %37 = %26.1;
  %38 = power(%33, %34) /* ty=Tensor[(16, 11, 11), float64] */;
  (%35, %36, %var_9708, %var_9709, %37, %var_9717, %38)
}

def @func_9586() -> (Tensor[(16, 11, 11), uint32], Tensor[(16, 11, 11), float32]) {
  %39 = @func_9158() /* ty=Tensor[(16, 11, 11), float32] */;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 11, 11), float32] */, dtype="uint32") /* ty=Tensor[(16, 11, 11), uint32] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="uint32") /* ty=Tensor[(16, 11, 11), uint32] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %45 = bitwise_and(%42, %43) /* ty=Tensor[(16, 11, 11), uint32] */;
  %46 = atan(%44) /* ty=Tensor[(16, 11, 11), float32] */;
  (%45, %46)
}

def @func_2060(%var_2058: Tensor[(10, 9, 5), int64], %var_2059: Tensor[(10, 9, 5), int64]) -> Tensor[(10, 9, 5), int64] {
  @func_2056(%var_2058, %var_2059) /* ty=Tensor[(10, 9, 5), int64] */
}

def @func_8231() -> (Tensor[(16, 11, 11), float32],) {
  @func_8229() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_3936(%var_3934: Tensor[(9, 9, 5), float32]) -> (Tensor[(9, 9, 5), float64], Tensor[(11, 16, 3), float32], Tensor[(528), float32]) {
  @func_3933(%var_3934) /* ty=(Tensor[(9, 9, 5), float64], Tensor[(11, 16, 3), float32], Tensor[(528), float32]) */
}

def @func_10196() -> (Tensor[(16, 11, 11), float32],) {
  @func_10194() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_7736() -> (Tensor[(16, 11, 11), float32],) {
  %49 = fn () -> (Tensor[(16, 11, 11), float32],) {
    %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
    %48 = sqrt(%47) /* ty=Tensor[(16, 11, 11), float32] */;
    (%48,)
  };
  %49() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_8076() -> Tensor[(16, 11, 11), float32] {
  %53 = fn () -> Tensor[(16, 11, 11), float32] {
    %50 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %51 = %50.0;
    %52 = cast(%51, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
    log2(%52) /* ty=Tensor[(16, 11, 11), float32] */
  };
  %53() /* ty=Tensor[(16, 11, 11), float32] */
}

def @func_11024(%var_11022: Tensor[(10, 45), int64]) -> (Tensor[(10, 9, 5), int64], Tensor[(10, 45), int64], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(2496), int32], Tensor[(16, 11, 11), float64]) {
  @func_11021(%var_11022) /* ty=(Tensor[(10, 9, 5), int64], Tensor[(10, 45), int64], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(2496), int32], Tensor[(16, 11, 11), float64]) */
}

def @func_10296() -> (Tensor[(16, 11, 11), float32],) {
  @func_10294() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_1579(%var_1577: Tensor[(11, 16, 3), float32]) -> (Tensor[(11, 16, 3), float32], Tensor[(11, 16, 3), float64]) {
  @func_1576(%var_1577) /* ty=(Tensor[(11, 16, 3), float32], Tensor[(11, 16, 3), float64]) */
}

def @func_10533(%var_10530: Tensor[(3, 3, 5), float32], %var_10531: Tensor[(450, 1), int64], %var_10532: Tensor[(3, 3, 5), float32]) -> (Tensor[(14, 14, 5), bool], Tensor[(6, 220), uint8], Tensor[(16, 11, 11), float32], Tensor[(3, 3, 5), float32], Tensor[(10, 9, 5), int64], Tensor[(450, 1), int64], Tensor[(3, 3, 5), bool], Tensor[(3, 3, 5), float64]) {
  %76 = fn (%var_10457: Tensor[(3, 3, 5), float32], %var_10505: Tensor[(450, 1), int64], %var_10508: Tensor[(3, 3, 5), float32]) -> (Tensor[(14, 14, 5), bool], Tensor[(6, 220), uint8], Tensor[(16, 11, 11), float32], Tensor[(3, 3, 5), float32], Tensor[(10, 9, 5), int64], Tensor[(450, 1), int64], Tensor[(3, 3, 5), bool], Tensor[(3, 3, 5), float64]) {
    %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 220), uint8] */, dtype="uint8") /* ty=Tensor[(6, 220), uint8] */;
    %55 = reshape(%54, newshape=[1320]) /* ty=Tensor[(1320), uint8] */;
    %56 = @func_7871(%55) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(780), int32], Tensor[(12, 5, 13), int32], Tensor[(12, 5, 13), int32], Tensor[(2080), float32], Tensor[(1320), uint8], Tensor[(2080), float32], Tensor[(14, 14, 5), bool], Tensor[(980), int32]) */;
    %57 = @func_10294() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %58 = cast(%var_10457, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
    %59 = sinh(%58) /* ty=Tensor[(3, 3, 5), float32] */;
    %60 = cast(%59, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
    %61 = cast(%var_10505, dtype="int64") /* ty=Tensor[(450, 1), int64] */;
    %62 = cast(%var_10505, dtype="int64") /* ty=Tensor[(450, 1), int64] */;
    %63 = reshape(%61, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
    %64 = reshape(%62, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
    %65 = cast(%var_10508, dtype="bool") /* ty=Tensor[(3, 3, 5), bool] */;
    %66 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%59, dtype="bool") /* ty=Tensor[(3, 3, 5), bool] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %69 = cast(%59, dtype="float64") /* ty=Tensor[(3, 3, 5), float64] */;
    %70 = %56.8;
    %71 = %57.0;
    %72 = sin(%60) /* ty=Tensor[(3, 3, 5), float32] */;
    %73 = @func_2056(%63, %64) /* ty=Tensor[(10, 9, 5), int64] */;
    %74 = less(%67, %68) /* ty=Tensor[(3, 3, 5), bool] */;
    %75 = sigmoid(%69) /* ty=Tensor[(3, 3, 5), float64] */;
    (%70, meta[relay.Constant][3] /* ty=Tensor[(6, 220), uint8] */, %71, %72, %73, %var_10505, %74, %75)
  };
  %76(%var_10530, %var_10531, %var_10532) /* ty=(Tensor[(14, 14, 5), bool], Tensor[(6, 220), uint8], Tensor[(16, 11, 11), float32], Tensor[(3, 3, 5), float32], Tensor[(10, 9, 5), int64], Tensor[(450, 1), int64], Tensor[(3, 3, 5), bool], Tensor[(3, 3, 5), float64]) */
}

def @func_2873(%var_2863: Tensor[(13, 7, 13), int32], %var_2864: Tensor[(13, 7, 13), int32]) -> (Tensor[(13, 7, 13), int32],) {
  %77 = cast(%var_2864, dtype="int32") /* ty=Tensor[(13, 7, 13), int32] */;
  %78 = shape_of(%var_2863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%var_2863, dtype="int32") /* ty=Tensor[(13, 7, 13), int32] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %81 = maximum(%79, %80) /* ty=Tensor[(13, 7, 13), int32] */;
  (%81,)
}

def @func_7631(%var_7623: Tensor[(1, 7, 4), int8], %var_7624: Tensor[(11, 7, 4), int8], %var_7625: Tensor[(2, 16), float64], %var_7626: Tensor[(2080), float32], %var_7627: Tensor[(96), uint64], %var_7628: Tensor[(1248), uint64], %var_7629: int16, %var_7630: Tensor[(160), float32]) -> (Tensor[(11, 7, 4), bool], Tensor[(2, 16), float64], Tensor[(2080), float32], Tensor[(192), float64], Tensor[(2, 4, 12), uint64], Tensor[(96), uint64], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(10, 16, 5), int32], int16, Tensor[(160), float32], Tensor[(2080), float32]) {
  @func_7621(%var_7623, %var_7624, %var_7625, %var_7626, %var_7627, %var_7628, %var_7629, %var_7630) /* ty=(Tensor[(11, 7, 4), bool], Tensor[(2, 16), float64], Tensor[(2080), float32], Tensor[(192), float64], Tensor[(2, 4, 12), uint64], Tensor[(96), uint64], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(10, 16, 5), int32], int16, Tensor[(160), float32], Tensor[(2080), float32]) */
}

def @func_10411() -> (Tensor[(16, 11, 11), float32],) {
  %82 = @func_9614() /* ty=Tensor[(16, 11, 11), float32] */;
  (%82,)
}

def @func_9637(%var_9635: Tensor[(11, 11, 7), uint16], %var_9636: Tensor[(11, 11, 7), uint16]) -> (Tensor[(11, 11, 7), uint16],) {
  %88 = fn (%var_9628: Tensor[(11, 11, 7), uint16], %var_9629: Tensor[(11, 11, 7), uint16]) -> (Tensor[(11, 11, 7), uint16],) {
    %83 = cast(%var_9629, dtype="uint16") /* ty=Tensor[(11, 11, 7), uint16] */;
    %84 = shape_of(%var_9628, dtype="int32") /* ty=Tensor[(3), int32] */;
    %85 = cast(%var_9628, dtype="uint16") /* ty=Tensor[(11, 11, 7), uint16] */;
    %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %87 = left_shift(%85, %86) /* ty=Tensor[(11, 11, 7), uint16] */;
    (%87,)
  };
  %88(%var_9635, %var_9636) /* ty=(Tensor[(11, 11, 7), uint16],) */
}

def @func_8377(%var_8373: Tensor[(9, 2, 7), int16], %var_8374: Tensor[(600), uint64], %var_8375: Tensor[(16, 11, 11), float32], %var_8376: Tensor[(16, 11, 11), float32]) -> (Tensor[(240), float32], Tensor[(9, 2, 7), int32], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(10, 10, 6), float32]) {
  @func_8371(%var_8373, %var_8374, %var_8375, %var_8376) /* ty=(Tensor[(240), float32], Tensor[(9, 2, 7), int32], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(10, 10, 6), float32]) */
}

def @func_3516(%var_3514: Tensor[(1248), uint64], %var_3515: Tensor[(32), float64]) -> (Tensor[(7, 11, 8), uint16], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(4, 12, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192, ?), float32]) {
  %117 = fn (%var_3471: Tensor[(1248), uint64], %var_3498: Tensor[(32), float64]) -> (Tensor[(7, 11, 8), uint16], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(4, 12, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192, ?), float32]) {
    %89 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 11, 8), uint16] */, dtype="uint16") /* ty=Tensor[(7, 11, 8), uint16] */;
    %90 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(7, 11, 8), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %91 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 11, 8), uint16] */, dtype="uint16") /* ty=Tensor[(7, 11, 8), uint16] */;
    %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %93 = cast(%var_3471, dtype="uint64") /* ty=Tensor[(1248), uint64] */;
    %94 = reshape(%93, newshape=[6, 13, 16]) /* ty=Tensor[(6, 13, 16), uint64] */;
    %95 = @func_2447(%94) /* ty=(Tensor[(10, 16, 5), int32], Tensor[(160), float32], Tensor[(6, 13, 16), float64], Tensor[(6, 13, 16), float32]) */;
    %96 = cast(meta[relay.Constant][6] /* ty=Tensor[(192, 1), float64] */, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
    %97 = reshape(%96, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), float64] */;
    %98 = @func_2668(%97) /* ty=(Tensor[(4, 12, 4), float64], Tensor[(10, 9, 5), int64], Tensor[(450), int64]) */;
    %99 = cast(%var_3498, dtype="float64") /* ty=Tensor[(32), float64] */;
    %100 = cast(meta[relay.Constant][7] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
    %101 = cast(meta[relay.Constant][6] /* ty=Tensor[(192, 1), float64] */, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
    %102 = cast(%var_3498, dtype="float64") /* ty=Tensor[(32), float64] */;
    %103 = reshape(%99, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
    %104 = reshape(%100, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
    %105 = reshape(%101, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %106 = reshape(%102, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
    %107 = @func_949(%103, %104, %105, %106) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) */;
    %108 = %107.6;
    %109 = cast(%108, dtype="float32") /* ty=Tensor[(192), float32] */;
    %110 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(192, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %111 = cast(meta[relay.Constant][6] /* ty=Tensor[(192, 1), float64] */, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
    %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %113 = bitwise_and(%91, %92) /* ty=Tensor[(7, 11, 8), uint16] */;
    %114 = %95.2;
    %115 = %98.0;
    %116 = floor_mod(%111, %112) /* ty=Tensor[(192, ?), float32] */;
    (%113, %114, %var_3471, %115, %var_3498, meta[relay.Constant][7] /* ty=Tensor[(2080), float32] */, %116)
  };
  %117(%var_3514, %var_3515) /* ty=(Tensor[(7, 11, 8), uint16], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(4, 12, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192, ?), float32]) */
}

def @func_10980() -> (Tensor[(16, 11, 11), float32],) {
  %119 = fn () -> (Tensor[(16, 11, 11), float32],) {
    %118 = @func_10166() /* ty=Tensor[(16, 11, 11), float32] */;
    (%118,)
  };
  %119() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_9375(%var_9278: Tensor[(16, 11, 11), float32], %var_9285: Tensor[(600), uint64], %var_9293: Tensor[(72), int64], %var_9321: Tensor[(440), float32], %var_9322: Tensor[(192), float64], %var_9340: Tensor[(28), int8], %var_9341: Tensor[(308), int8], %var_9342: Tensor[(32), float64], %var_9343: Tensor[(8, 12), uint64]) -> (Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(126), int16], Tensor[(600), uint64], Tensor[(12, 6, 14), int64], Tensor[(72), int64], Tensor[(10, 16, 5), int32], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(440), float32], Tensor[(192), float64], Tensor[(2080), float32], Tensor[(28), int8], Tensor[(308), int8], Tensor[(32), float64], Tensor[(8, 12), uint64], Tensor[(1248), uint64], Tensor[(1183), float64]) {
  %120 = @func_8830() /* ty=Tensor[(16, 11, 11), float32] */;
  %121 = cast(%var_9278, dtype="uint16") /* ty=Tensor[(16, 11, 11), uint16] */;
  %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%120, dtype="uint16") /* ty=Tensor[(16, 11, 11), uint16] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %125 = cast(meta[relay.Constant][8] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %126 = cast(%var_9285, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %127 = cast(%120, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %128 = cast(%var_9278, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %129 = reshape(%125, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %130 = reshape(%126, newshape=[600]) /* ty=Tensor[(600), uint64] */;
  %131 = reshape(%127, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
  %132 = reshape(%128, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
  %133 = @func_8371(%129, %130, %131, %132) /* ty=(Tensor[(240), float32], Tensor[(9, 2, 7), int32], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(10, 10, 6), float32]) */;
  %134 = cast(%var_9293, dtype="int64") /* ty=Tensor[(72), int64] */;
  %135 = reshape(%134, newshape=[12, 6, 1]) /* ty=Tensor[(12, 6, 1), int64] */;
  %136 = @func_5869(%135) /* ty=(Tensor[(12, 6, 14), int64], Tensor[(16, 12, 13), int32], Tensor[(2496, 1), int32]) */;
  %137 = cast(meta[relay.Constant][9] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %138 = cast(meta[relay.Constant][10] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %139 = cast(meta[relay.Constant][11] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %140 = reshape(%137, newshape=[]) /* ty=int16 */;
  %141 = reshape(%138, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
  %142 = reshape(%139, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
  %143 = @func_549(%140, %141, %142) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
  %144 = cast(%var_9321, dtype="float32") /* ty=Tensor[(440), float32] */;
  %145 = cast(%var_9322, dtype="float64") /* ty=Tensor[(192), float64] */;
  %146 = reshape(%144, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %147 = reshape(%145, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %148 = @func_2614(%146, %147) /* ty=(Tensor[(11, 5, 8), bool], Tensor[(11, 5, 8), float32], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) */;
  %149 = cast(%var_9340, dtype="int8") /* ty=Tensor[(28), int8] */;
  %150 = cast(%var_9341, dtype="int8") /* ty=Tensor[(308), int8] */;
  %151 = cast(%var_9342, dtype="float64") /* ty=Tensor[(32), float64] */;
  %152 = cast(meta[relay.Constant][11] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %153 = cast(%var_9343, dtype="uint64") /* ty=Tensor[(8, 12), uint64] */;
  %154 = cast(meta[relay.Constant][12] /* ty=Tensor[(1248), uint64] */, dtype="uint64") /* ty=Tensor[(1248), uint64] */;
  %155 = cast(meta[relay.Constant][9] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %156 = cast(meta[relay.Constant][10] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %157 = reshape(%149, newshape=[1, 7, 4]) /* ty=Tensor[(1, 7, 4), int8] */;
  %158 = reshape(%150, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), int8] */;
  %159 = reshape(%151, newshape=[2, 16]) /* ty=Tensor[(2, 16), float64] */;
  %160 = reshape(%152, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %161 = reshape(%153, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %162 = reshape(%154, newshape=[1248]) /* ty=Tensor[(1248), uint64] */;
  %163 = reshape(%155, newshape=[]) /* ty=int16 */;
  %164 = reshape(%156, newshape=[160]) /* ty=Tensor[(160), float32] */;
  %165 = @func_7621(%157, %158, %159, %160, %161, %162, %163, %164) /* ty=(Tensor[(11, 7, 4), bool], Tensor[(2, 16), float64], Tensor[(2080), float32], Tensor[(192), float64], Tensor[(2, 4, 12), uint64], Tensor[(96), uint64], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(10, 16, 5), int32], int16, Tensor[(160), float32], Tensor[(2080), float32]) */;
  %166 = cast(meta[relay.Constant][9] /* ty=int16 */, dtype="uint32") /* ty=uint32 */;
  %167 = cast(meta[relay.Constant][10] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %168 = reshape(%166, newshape=[]) /* ty=uint32 */;
  %169 = reshape(%167, newshape=[160]) /* ty=Tensor[(160), float32] */;
  %170 = @func_6475(%168, %169) /* ty=(Tensor[(14, 14, 5), bool], Tensor[(980), int32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 1, 4), int64], Tensor[(15, ?, 4), bool], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) */;
  %171 = %170.3;
  %172 = cast(%171, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %173 = bitwise_xor(%123, %124) /* ty=Tensor[(16, 11, 11), uint16] */;
  %174 = %133.6;
  %175 = %136.0;
  %176 = %143.1;
  %177 = %148.2;
  %178 = %165.6;
  %179 = atanh(%172) /* ty=Tensor[(1183), float64] */;
  (%173, %174, meta[relay.Constant][8] /* ty=Tensor[(126), int16] */, %var_9285, %175, %var_9293, %176, meta[relay.Constant][9] /* ty=int16 */, meta[relay.Constant][10] /* ty=Tensor[(160), float32] */, meta[relay.Constant][11] /* ty=Tensor[(2080), float32] */, %177, %var_9321, %var_9322, %178, %var_9340, %var_9341, %var_9342, %var_9343, meta[relay.Constant][12] /* ty=Tensor[(1248), uint64] */, %179)
}

def @func_8615(%var_8613: Tensor[(1320), uint8], %var_8614: Tensor[(2080), float32]) -> (Tensor[(16, 11, 11), float32], Tensor[(160), float32], Tensor[(1320), uint8], Tensor[(2080), float32]) {
  @func_8611(%var_8613, %var_8614) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(160), float32], Tensor[(1320), uint8], Tensor[(2080), float32]) */
}

def @func_11021(%var_10993: Tensor[(10, 45), int64]) -> (Tensor[(10, 9, 5), int64], Tensor[(10, 45), int64], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(2496), int32], Tensor[(16, 11, 11), float64]) {
  %180 = cast(%var_10993, dtype="int64") /* ty=Tensor[(10, 45), int64] */;
  %181 = cast(%var_10993, dtype="int64") /* ty=Tensor[(10, 45), int64] */;
  %182 = reshape(%180, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %183 = reshape(%181, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %184 = cast(meta[relay.Constant][13] /* ty=Tensor[(600), uint64] */, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %185 = cast(meta[relay.Constant][13] /* ty=Tensor[(600), uint64] */, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %186 = reshape(%184, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %187 = reshape(%185, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %188 = @func_6352(%186, %187) /* ty=(Tensor[(10, 10, 6), float32],) */;
  %189 = @func_8955() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) */;
  %190 = @func_10411() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %191 = %190.0;
  %192 = @func_9173() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %193 = %192.0;
  %194 = cast(%193, dtype="float64") /* ty=Tensor[(16, 11, 11), float64] */;
  %195 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %196 = cast(%191, dtype="float64") /* ty=Tensor[(16, 11, 11), float64] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %198 = @func_2056(%182, %183) /* ty=Tensor[(10, 9, 5), int64] */;
  %199 = %188.0;
  %200 = %189.2;
  %201 = floor_mod(%196, %197) /* ty=Tensor[(16, 11, 11), float64] */;
  (%198, %var_10993, %199, meta[relay.Constant][13] /* ty=Tensor[(600), uint64] */, %200, %201)
}

def @func_5083(%var_5081: Tensor[(2, 4, 12), uint64]) -> (Tensor[(2, 4, 12), uint64],) {
  @func_5080(%var_5081) /* ty=(Tensor[(2, 4, 12), uint64],) */
}

def @func_7621(%var_7521: Tensor[(1, 7, 4), int8], %var_7522: Tensor[(11, 7, 4), int8], %var_7545: Tensor[(2, 16), float64], %var_7546: Tensor[(2080), float32], %var_7551: Tensor[(96), uint64], %var_7579: Tensor[(1248), uint64], %var_7595: int16, %var_7596: Tensor[(160), float32]) -> (Tensor[(11, 7, 4), bool], Tensor[(2, 16), float64], Tensor[(2080), float32], Tensor[(192), float64], Tensor[(2, 4, 12), uint64], Tensor[(96), uint64], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(10, 16, 5), int32], int16, Tensor[(160), float32], Tensor[(2080), float32]) {
  %202 = cast(%var_7521, dtype="bool") /* ty=Tensor[(1, 7, 4), bool] */;
  %203 = cast(%var_7522, dtype="bool") /* ty=Tensor[(11, 7, 4), bool] */;
  %204 = cast(%var_7551, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %205 = reshape(%204, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), uint64] */;
  %206 = @func_5080(%205) /* ty=(Tensor[(2, 4, 12), uint64],) */;
  %207 = cast(%var_7579, dtype="uint64") /* ty=Tensor[(1248), uint64] */;
  %208 = cast(%var_7545, dtype="float64") /* ty=Tensor[(2, 16), float64] */;
  %209 = reshape(%207, newshape=[1248]) /* ty=Tensor[(1248), uint64] */;
  %210 = reshape(%208, newshape=[32]) /* ty=Tensor[(32), float64] */;
  %211 = @func_3513(%209, %210) /* ty=(Tensor[(7, 11, 8), uint16], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(4, 12, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192, ?), float32]) */;
  %212 = cast(%var_7595, dtype="int16") /* ty=int16 */;
  %213 = cast(%var_7596, dtype="float32") /* ty=Tensor[(160), float32] */;
  %214 = cast(%var_7546, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %215 = reshape(%212, newshape=[]) /* ty=int16 */;
  %216 = reshape(%213, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
  %217 = reshape(%214, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
  %218 = @func_549(%215, %216, %217) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
  %219 = cast(%var_7545, dtype="float64") /* ty=Tensor[(2, 16), float64] */;
  %220 = cast(%var_7546, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %221 = cast(meta[relay.Constant][14] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %222 = cast(%var_7545, dtype="float64") /* ty=Tensor[(2, 16), float64] */;
  %223 = reshape(%219, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
  %224 = reshape(%220, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %225 = reshape(%221, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %226 = reshape(%222, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
  %227 = @func_949(%223, %224, %225, %226) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) */;
  %228 = %227.4;
  %229 = cast(%228, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %230 = acos(%229) /* ty=Tensor[(2080), float32] */;
  %231 = cast(%230, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %232 = greater_equal(%202, %203) /* ty=Tensor[(11, 7, 4), bool] */;
  %233 = %206.0;
  %234 = %211.5;
  %235 = %218.1;
  %236 = tan(%231) /* ty=Tensor[(2080), float32] */;
  (%232, %var_7545, %var_7546, meta[relay.Constant][14] /* ty=Tensor[(192), float64] */, %233, %var_7551, %234, %var_7579, %235, %var_7595, %var_7596, %236)
}

def @func_4862(%var_4857: Tensor[(12, 10, 9), int8], %var_4858: Tensor[(12, 10, 9), int8], %var_4859: Tensor[(11, 195), float64], %var_4860: int16, %var_4861: Tensor[(450), int64]) -> (Tensor[(1008), float32], Tensor[(11, 195), float64], Tensor[(192), float64], Tensor[(1008), float32], int16, Tensor[(450), int64], Tensor[(12, 10, 9), int64]) {
  @func_4855(%var_4857, %var_4858, %var_4859, %var_4860, %var_4861) /* ty=(Tensor[(1008), float32], Tensor[(11, 195), float64], Tensor[(192), float64], Tensor[(1008), float32], int16, Tensor[(450), int64], Tensor[(12, 10, 9), int64]) */
}

def @func_10366(%var_10341: Tensor[(9, 15, 3), float32], %var_10350: Tensor[(2496), int32]) -> (Tensor[(9, 15, 3), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) {
  %237 = cast(%var_10341, dtype="float32") /* ty=Tensor[(9, 15, 3), float32] */;
  %238 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(9, 15, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(9, 15, 3), float32] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %241 = cast(%var_10350, dtype="int32") /* ty=Tensor[(2496), int32] */;
  %242 = reshape(%241, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), int32] */;
  %243 = @func_4365(%242) /* ty=(Tensor[(16, 12, 13), int32],) */;
  %244 = subtract(%239, %240) /* ty=Tensor[(9, 15, 3), float32] */;
  %245 = %243.0;
  (%244, %245, %var_10350)
}

def @func_9928() -> Tensor[(60), float32] {
  %246 = @func_8190() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */;
  %246.2
}

def @func_10370(%var_10368: Tensor[(9, 15, 3), float32], %var_10369: Tensor[(2496), int32]) -> (Tensor[(9, 15, 3), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) {
  @func_10366(%var_10368, %var_10369) /* ty=(Tensor[(9, 15, 3), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) */
}

def @func_10587() -> (Tensor[(16, 11, 11), float32],) {
  %247 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %248 = %247.0;
  (%248,)
}

def @func_10987() -> (Tensor[(16, 11, 11), float32],) {
  %249 = @func_9420() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %250 = %249.0;
  (%250,)
}

def @func_8956() -> (Tensor[(16, 11, 11), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) {
  %256 = fn () -> (Tensor[(16, 11, 11), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) {
    %251 = cast(meta[relay.Constant][16] /* ty=Tensor[(2496), int32] */, dtype="int32") /* ty=Tensor[(2496), int32] */;
    %252 = reshape(%251, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), int32] */;
    %253 = @func_4365(%252) /* ty=(Tensor[(16, 12, 13), int32],) */;
    %254 = @func_8075() /* ty=Tensor[(16, 11, 11), float32] */;
    %255 = %253.0;
    (%254, %255, meta[relay.Constant][16] /* ty=Tensor[(2496), int32] */)
  };
  %256() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) */
}

def @func_9083(%var_9081: Tensor[(6, 2, 5), float64]) -> Tensor[(6, 2, 5), int16] {
  @func_9080(%var_9081) /* ty=Tensor[(6, 2, 5), int16] */
}

def @func_718(%var_716: Tensor[(10, 11, 12), uint8], %var_717: Tensor[(2080), float32]) -> (Tensor[(10, 11, 12), uint8], Tensor[(10, 16, 1), float32], int16, Tensor[(160), float32], Tensor[(2080), float32]) {
  @func_714(%var_716, %var_717) /* ty=(Tensor[(10, 11, 12), uint8], Tensor[(10, 16, 1), float32], int16, Tensor[(160), float32], Tensor[(2080), float32]) */
}

def @func_9248(%var_9246: Tensor[(2, 6, 3), float64]) -> (Tensor[(2, 6, 3), int16], Tensor[(2, 6, 3), bool]) {
  @func_9245(%var_9246) /* ty=(Tensor[(2, 6, 3), int16], Tensor[(2, 6, 3), bool]) */
}

def @func_9159() -> Tensor[(16, 11, 11), float32] {
  %258 = fn () -> Tensor[(16, 11, 11), float32] {
    %257 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %257.0
  };
  %258() /* ty=Tensor[(16, 11, 11), float32] */
}

def @func_9738(%var_9733: Tensor[(4, 5, 11), uint32], %var_9734: Tensor[(4, 5, 11), uint32], %var_9735: uint32, %var_9736: Tensor[(160), float32], %var_9737: Tensor[(72), int64]) -> (Tensor[(4, 5, 11), bool], Tensor[(192), float64], uint32, Tensor[(160), float32], Tensor[(16, 12, 13), int32], Tensor[(72), int64], Tensor[(16, 11, 11), float64]) {
  @func_9731(%var_9733, %var_9734, %var_9735, %var_9736, %var_9737) /* ty=(Tensor[(4, 5, 11), bool], Tensor[(192), float64], uint32, Tensor[(160), float32], Tensor[(16, 12, 13), int32], Tensor[(72), int64], Tensor[(16, 11, 11), float64]) */
}

def @func_8877(%var_8875: Tensor[(4, 8), float64]) -> (Tensor[(16, 11, 11), float32], Tensor[(1248), uint64], Tensor[(4, 8), float64], Tensor[(13, ?), uint64], Tensor[(13), uint64], Tensor[(16, 11, 11), float32], Tensor[(1320), uint8], Tensor[(520, 4), float32]) {
  @func_8874(%var_8875) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(1248), uint64], Tensor[(4, 8), float64], Tensor[(13, ?), uint64], Tensor[(13), uint64], Tensor[(16, 11, 11), float32], Tensor[(1320), uint8], Tensor[(520, 4), float32]) */
}

def @func_11047() -> (Tensor[(16, 11, 11), float32],) {
  %263 = fn () -> (Tensor[(16, 11, 11), float32],) {
    %259 = @func_10411() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %260 = %259.0;
    %261 = cast(%260, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
    %262 = acos(%261) /* ty=Tensor[(16, 11, 11), float32] */;
    (%262,)
  };
  %263() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_2668(%var_2640: Tensor[(4, 12, 4), float64]) -> (Tensor[(4, 12, 4), float64], Tensor[(10, 9, 5), int64], Tensor[(450), int64]) {
  %264 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 12, 4), float64] */;
  %265 = shape_of(%var_2640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%var_2640, dtype="float64") /* ty=Tensor[(4, 12, 4), float64] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %268 = cast(meta[relay.Constant][18] /* ty=Tensor[(450), int64] */, dtype="int64") /* ty=Tensor[(450), int64] */;
  %269 = cast(meta[relay.Constant][18] /* ty=Tensor[(450), int64] */, dtype="int64") /* ty=Tensor[(450), int64] */;
  %270 = reshape(%268, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %271 = reshape(%269, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %272 = power(%266, %267) /* ty=Tensor[(4, 12, 4), float64] */;
  %273 = @func_2056(%270, %271) /* ty=Tensor[(10, 9, 5), int64] */;
  (%272, %273, meta[relay.Constant][18] /* ty=Tensor[(450), int64] */)
}

def @func_10294() -> (Tensor[(16, 11, 11), float32],) {
  %274 = @func_10011() /* ty=Tensor[(16, 11, 11), float32] */;
  (%274,)
}

def @func_377(%var_376: Tensor[(10, 16, 1), float32]) -> (Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) {
  %280 = fn (%var_336: Tensor[(10, 16, 1), float32]) -> (Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) {
    %275 = cast(%var_336, dtype="float32") /* ty=Tensor[(10, 16, 1), float32] */;
    %276 = cast(%var_336, dtype="int32") /* ty=Tensor[(10, 16, 1), int32] */;
    %277 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 16, 5), float32] */, dtype="int32") /* ty=Tensor[(10, 16, 5), int32] */;
    %278 = sigmoid(%275) /* ty=Tensor[(10, 16, 1), float32] */;
    %279 = bitwise_and(%276, %277) /* ty=Tensor[(10, 16, 5), int32] */;
    (%278, %279)
  };
  %280(%var_376) /* ty=(Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) */
}

def @func_3135(%var_3129: Tensor[(15, 13, 11), float64], %var_3130: Tensor[(1, 192), float64], %var_3131: Tensor[(1008), float32], %var_3132: int16, %var_3133: Tensor[(10, 9, 5), int64], %var_3134: Tensor[(15, 13, 11), float64]) -> (Tensor[(4, 2, 4), int16], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(1, 192), float64], Tensor[(450), int64], Tensor[(1040, 2), float32], Tensor[(1008), float32], int16, Tensor[(10, 9, 5), int64], Tensor[(10, 9, 5), float32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 13, 11), bool]) {
  %329 = fn (%var_3048: Tensor[(15, 13, 11), float64], %var_3066: Tensor[(1, 192), float64], %var_3079: Tensor[(1008), float32], %var_3080: int16, %var_3094: Tensor[(10, 9, 5), int64], %var_3114: Tensor[(15, 13, 11), float64]) -> (Tensor[(4, 2, 4), int16], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(1, 192), float64], Tensor[(450), int64], Tensor[(1040, 2), float32], Tensor[(1008), float32], int16, Tensor[(10, 9, 5), int64], Tensor[(10, 9, 5), float32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 13, 11), bool]) {
    %281 = cast(meta[relay.Constant][20] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
    %282 = cast(meta[relay.Constant][21] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
    %283 = cast(%var_3066, dtype="float64") /* ty=Tensor[(1, 192), float64] */;
    %284 = cast(meta[relay.Constant][20] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
    %285 = reshape(%281, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
    %286 = reshape(%282, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
    %287 = reshape(%283, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %288 = reshape(%284, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
    %289 = @func_949(%285, %286, %287, %288) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) */;
    %290 = cast(%var_3079, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %291 = cast(%var_3080, dtype="int16") /* ty=int16 */;
    %292 = cast(meta[relay.Constant][21] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
    %293 = reshape(%290, newshape=[9, 16, 7]) /* ty=Tensor[(9, 16, 7), float32] */;
    %294 = reshape(%291, newshape=[]) /* ty=int16 */;
    %295 = reshape(%292, newshape=[1040, 2]) /* ty=Tensor[(1040, 2), float32] */;
    %296 = @func_2316(%293, %294, %295) /* ty=(Tensor[(9, 16, 7), float32], Tensor[(14, 14, 16), int16], int16, Tensor[(1, 160), float32], Tensor[(1040, 2), float32]) */;
    %297 = cast(meta[relay.Constant][22] /* ty=Tensor[(450), int64] */, dtype="int64") /* ty=Tensor[(450), int64] */;
    %298 = cast(meta[relay.Constant][22] /* ty=Tensor[(450), int64] */, dtype="int64") /* ty=Tensor[(450), int64] */;
    %299 = reshape(%297, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
    %300 = reshape(%298, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
    %301 = @func_2056(%299, %300) /* ty=Tensor[(10, 9, 5), int64] */;
    %302 = cast(%301, dtype="int64") /* ty=Tensor[(10, 9, 5), int64] */;
    %303 = cast(%301, dtype="int64") /* ty=Tensor[(10, 9, 5), int64] */;
    %304 = reshape(%302, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
    %305 = reshape(%303, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
    %306 = cast(%var_3094, dtype="float32") /* ty=Tensor[(10, 9, 5), float32] */;
    %307 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
    %308 = cast(%301, dtype="float32") /* ty=Tensor[(10, 9, 5), float32] */;
    %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %310 = cast(meta[relay.Constant][23] /* ty=Tensor[(1183), int32] */, dtype="int32") /* ty=Tensor[(1183), int32] */;
    %311 = cast(meta[relay.Constant][23] /* ty=Tensor[(1183), int32] */, dtype="int32") /* ty=Tensor[(1183), int32] */;
    %312 = reshape(%310, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
    %313 = reshape(%311, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
    %314 = @func_2873(%312, %313) /* ty=(Tensor[(13, 7, 13), int32],) */;
    %315 = cast(%var_3048, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
    %316 = atanh(%315) /* ty=Tensor[(15, 13, 11), float64] */;
    %317 = cast(%316, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
    %318 = cosh(%317) /* ty=Tensor[(15, 13, 11), float64] */;
    %319 = cast(%var_3114, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
    %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(3), int32] */;
    %321 = cast(%318, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
    %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %323 = %289.10;
    %324 = %296.4;
    %325 = @func_2056(%304, %305) /* ty=Tensor[(10, 9, 5), int64] */;
    %326 = floor_mod(%308, %309) /* ty=Tensor[(10, 9, 5), float32] */;
    %327 = %314.0;
    %328 = logical_and(%321, %322) /* ty=Tensor[(15, 13, 11), bool] */;
    (%323, meta[relay.Constant][20] /* ty=Tensor[(32), float64] */, meta[relay.Constant][21] /* ty=Tensor[(2080), float32] */, %var_3066, meta[relay.Constant][22] /* ty=Tensor[(450), int64] */, %324, %var_3079, %var_3080, %325, %326, %327, meta[relay.Constant][23] /* ty=Tensor[(1183), int32] */, %328)
  };
  %329(%var_3129, %var_3130, %var_3131, %var_3132, %var_3133, %var_3134) /* ty=(Tensor[(4, 2, 4), int16], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(1, 192), float64], Tensor[(450), int64], Tensor[(1040, 2), float32], Tensor[(1008), float32], int16, Tensor[(10, 9, 5), int64], Tensor[(10, 9, 5), float32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 13, 11), bool]) */
}

def @func_1576(%var_1567: Tensor[(11, 16, 3), float32]) -> (Tensor[(11, 16, 3), float32], Tensor[(11, 16, 3), float64]) {
  %330 = cast(%var_1567, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
  %331 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 16, 3), float32] */, dtype="float64") /* ty=Tensor[(11, 16, 3), float64] */;
  %332 = shape_of(%var_1567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_1567, dtype="float64") /* ty=Tensor[(11, 16, 3), float64] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %335 = log2(%330) /* ty=Tensor[(11, 16, 3), float32] */;
  %336 = floor_mod(%333, %334) /* ty=Tensor[(11, 16, 3), float64] */;
  (%335, %336)
}

def @func_4855(%var_4809: Tensor[(12, 10, 9), int8], %var_4810: Tensor[(12, 10, 9), int8], %var_4819: Tensor[(11, 195), float64], %var_4822: int16, %var_4823: Tensor[(450), int64]) -> (Tensor[(1008), float32], Tensor[(11, 195), float64], Tensor[(192), float64], Tensor[(1008), float32], int16, Tensor[(450), int64], Tensor[(12, 10, 9), int64]) {
  %337 = cast(%var_4819, dtype="float64") /* ty=Tensor[(11, 195), float64] */;
  %338 = cast(meta[relay.Constant][25] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %339 = cast(meta[relay.Constant][26] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %340 = cast(%var_4822, dtype="int16") /* ty=int16 */;
  %341 = cast(%var_4823, dtype="int64") /* ty=Tensor[(450), int64] */;
  %342 = cast(%var_4819, dtype="float64") /* ty=Tensor[(11, 195), float64] */;
  %343 = reshape(%337, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float64] */;
  %344 = reshape(%338, newshape=[1, 192]) /* ty=Tensor[(1, 192), float64] */;
  %345 = reshape(%339, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %346 = reshape(%340, newshape=[]) /* ty=int16 */;
  %347 = reshape(%341, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), int64] */;
  %348 = reshape(%342, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float64] */;
  %349 = @func_3128(%343, %344, %345, %346, %347, %348) /* ty=(Tensor[(4, 2, 4), int16], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(1, 192), float64], Tensor[(450), int64], Tensor[(1040, 2), float32], Tensor[(1008), float32], int16, Tensor[(10, 9, 5), int64], Tensor[(10, 9, 5), float32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 13, 11), bool]) */;
  %350 = cast(%var_4810, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
  %351 = shape_of(%var_4809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %352 = cast(%var_4809, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %354 = left_shift(%352, %353) /* ty=Tensor[(12, 10, 9), int8] */;
  %355 = cast(%var_4809, dtype="int64") /* ty=Tensor[(12, 10, 9), int64] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%354, dtype="int64") /* ty=Tensor[(12, 10, 9), int64] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %359 = %349.6;
  %360 = logical_xor(%357, %358) /* ty=Tensor[(12, 10, 9), int64] */;
  (%359, %var_4819, meta[relay.Constant][25] /* ty=Tensor[(192), float64] */, meta[relay.Constant][26] /* ty=Tensor[(1008), float32] */, %var_4822, %var_4823, %360)
}

def @func_2447(%var_2405: Tensor[(6, 13, 16), uint64]) -> (Tensor[(10, 16, 5), int32], Tensor[(160), float32], Tensor[(6, 13, 16), float64], Tensor[(6, 13, 16), float32]) {
  %361 = cast(meta[relay.Constant][27] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %362 = reshape(%361, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
  %363 = @func_375(%362) /* ty=(Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) */;
  %364 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 13, 16), uint64] */, dtype="float32") /* ty=Tensor[(6, 13, 16), float32] */;
  %365 = tan(%364) /* ty=Tensor[(6, 13, 16), float32] */;
  %366 = cast(%365, dtype="float32") /* ty=Tensor[(6, 13, 16), float32] */;
  %367 = log(%366) /* ty=Tensor[(6, 13, 16), float32] */;
  %368 = cast(%var_2405, dtype="uint64") /* ty=Tensor[(6, 13, 16), uint64] */;
  %369 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(6, 13, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 13, 16), uint64] */, dtype="uint64") /* ty=Tensor[(6, 13, 16), uint64] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %372 = bitwise_and(%370, %371) /* ty=Tensor[(6, 13, 16), uint64] */;
  %373 = cast(%372, dtype="float64") /* ty=Tensor[(6, 13, 16), float64] */;
  %374 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%367, dtype="float64") /* ty=Tensor[(6, 13, 16), float64] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %377 = cast(%367, dtype="float32") /* ty=Tensor[(6, 13, 16), float32] */;
  %378 = %363.1;
  %379 = divide(%375, %376) /* ty=Tensor[(6, 13, 16), float64] */;
  %380 = cosh(%377) /* ty=Tensor[(6, 13, 16), float32] */;
  (%378, meta[relay.Constant][27] /* ty=Tensor[(160), float32] */, %379, %380)
}

def @func_8788(%var_8785: Tensor[(12, 2, 8), float64], %var_8786: Tensor[(12, 2, 8), float64], %var_8787: Tensor[(32), float64]) -> (Tensor[(12, 2, 8), float64], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(32), float64], Tensor[(16, 11, 11), float32]) {
  %394 = fn (%var_8742: Tensor[(12, 2, 8), float64], %var_8743: Tensor[(12, 2, 8), float64], %var_8757: Tensor[(32), float64]) -> (Tensor[(12, 2, 8), float64], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(32), float64], Tensor[(16, 11, 11), float32]) {
    %381 = cast(%var_8743, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
    %382 = shape_of(%var_8742, dtype="int32") /* ty=Tensor[(3), int32] */;
    %383 = cast(%var_8742, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
    %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %385 = cast(meta[relay.Constant][29] /* ty=Tensor[(1248), uint64] */, dtype="uint64") /* ty=Tensor[(1248), uint64] */;
    %386 = cast(%var_8757, dtype="float64") /* ty=Tensor[(32), float64] */;
    %387 = reshape(%385, newshape=[1248]) /* ty=Tensor[(1248), uint64] */;
    %388 = reshape(%386, newshape=[32]) /* ty=Tensor[(32), float64] */;
    %389 = @func_3513(%387, %388) /* ty=(Tensor[(7, 11, 8), uint16], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(4, 12, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192, ?), float32]) */;
    %390 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %391 = floor_divide(%383, %384) /* ty=Tensor[(12, 2, 8), float64] */;
    %392 = %389.1;
    %393 = %390.0;
    (%391, %392, meta[relay.Constant][29] /* ty=Tensor[(1248), uint64] */, %var_8757, %393)
  };
  %394(%var_8785, %var_8786, %var_8787) /* ty=(Tensor[(12, 2, 8), float64], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(32), float64], Tensor[(16, 11, 11), float32]) */
}

def @func_9386(%var_9377: Tensor[(16, 11, 11), float32], %var_9378: Tensor[(600), uint64], %var_9379: Tensor[(72), int64], %var_9380: Tensor[(440), float32], %var_9381: Tensor[(192), float64], %var_9382: Tensor[(28), int8], %var_9383: Tensor[(308), int8], %var_9384: Tensor[(32), float64], %var_9385: Tensor[(8, 12), uint64]) -> (Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(126), int16], Tensor[(600), uint64], Tensor[(12, 6, 14), int64], Tensor[(72), int64], Tensor[(10, 16, 5), int32], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(440), float32], Tensor[(192), float64], Tensor[(2080), float32], Tensor[(28), int8], Tensor[(308), int8], Tensor[(32), float64], Tensor[(8, 12), uint64], Tensor[(1248), uint64], Tensor[(1183), float64]) {
  @func_9375(%var_9377, %var_9378, %var_9379, %var_9380, %var_9381, %var_9382, %var_9383, %var_9384, %var_9385) /* ty=(Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(126), int16], Tensor[(600), uint64], Tensor[(12, 6, 14), int64], Tensor[(72), int64], Tensor[(10, 16, 5), int32], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(440), float32], Tensor[(192), float64], Tensor[(2080), float32], Tensor[(28), int8], Tensor[(308), int8], Tensor[(32), float64], Tensor[(8, 12), uint64], Tensor[(1248), uint64], Tensor[(1183), float64]) */
}

def @func_9421() -> (Tensor[(16, 11, 11), float32],) {
  %397 = fn () -> (Tensor[(16, 11, 11), float32],) {
    %395 = @func_8229() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %396 = %395.0;
    (%396,)
  };
  %397() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_9812(%var_9759: Tensor[(600, 1), uint64], %var_9770: Tensor[(1, 60), float32], %var_9782: Tensor[(160), float32]) -> (Tensor[(16, 11, 11), uint32], Tensor[(126), int16], Tensor[(600, 1), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 3, 4), bool], Tensor[(160), float32], Tensor[(192), float64], Tensor[(6, 2, 5), bool], Tensor[(16, 11, 11), float32], Tensor[(16, 11, 11), float32]) {
  %398 = @func_9586() /* ty=(Tensor[(16, 11, 11), uint32], Tensor[(16, 11, 11), float32]) */;
  %399 = cast(meta[relay.Constant][30] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %400 = cast(%var_9759, dtype="uint64") /* ty=Tensor[(600, 1), uint64] */;
  %401 = %398.0;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %403 = cast(%401, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %404 = reshape(%399, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %405 = reshape(%400, newshape=[600]) /* ty=Tensor[(600), uint64] */;
  %406 = reshape(%402, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
  %407 = reshape(%403, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
  %408 = @func_8371(%404, %405, %406, %407) /* ty=(Tensor[(240), float32], Tensor[(9, 2, 7), int32], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(10, 10, 6), float32]) */;
  %409 = %408.2;
  %410 = cast(%409, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
  %411 = cast(%var_9782, dtype="float32") /* ty=Tensor[(160), float32] */;
  %412 = cast(meta[relay.Constant][31] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %413 = reshape(%411, newshape=[4, 40]) /* ty=Tensor[(4, 40), float32] */;
  %414 = reshape(%412, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
  %415 = @func_618(%413, %414) /* ty=(Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) */;
  %416 = cast(%var_9770, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %417 = reshape(%416, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), float32] */;
  %418 = @func_3227(%417) /* ty=(Tensor[(6, 2, 5), float32],) */;
  %419 = %418.0;
  %420 = cast(%var_9770, dtype="bool") /* ty=Tensor[(1, 60), bool] */;
  %421 = shape_of(%419, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(%419, dtype="bool") /* ty=Tensor[(6, 2, 5), bool] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %424 = @func_8933() /* ty=(Tensor[(60), float32], Tensor[(16, 11, 11), float32]) */;
  %425 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %426 = log10(%410) /* ty=Tensor[(10, 10, 6), float32] */;
  %427 = %415.3;
  %428 = logical_and(%422, %423) /* ty=Tensor[(6, 2, 5), bool] */;
  %429 = %424.1;
  %430 = %425.0;
  (%401, meta[relay.Constant][30] /* ty=Tensor[(126), int16] */, %var_9759, %426, %427, %var_9782, meta[relay.Constant][31] /* ty=Tensor[(192), float64] */, %428, %429, %430)
}

def @func_10074(%var_10027: Tensor[(16, 11, 11), float32], %var_10043: Tensor[(60), float64], %var_10067: Tensor[(126, 1), int16]) -> (Tensor[(16, 11, 11), bool], Tensor[(6, 2, 5), int16], Tensor[(60), float64], Tensor[(192), float64], Tensor[(126, 1), int16], Tensor[(2496), int32]) {
  %431 = @func_8075() /* ty=Tensor[(16, 11, 11), float32] */;
  %432 = cast(%var_10027, dtype="bool") /* ty=Tensor[(16, 11, 11), bool] */;
  %433 = shape_of(%431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %434 = cast(%431, dtype="bool") /* ty=Tensor[(16, 11, 11), bool] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %436 = cast(%var_10043, dtype="float64") /* ty=Tensor[(60), float64] */;
  %437 = reshape(%436, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %438 = @func_9534(%437) /* ty=(Tensor[(2496), int32], Tensor[(6, 2, 5), int16], Tensor[(60), float64]) */;
  %439 = cast(%var_10067, dtype="int16") /* ty=Tensor[(126, 1), int16] */;
  %440 = reshape(%439, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %441 = @func_9907(%440) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(10, 9, 5), int64], Tensor[(192), float64], Tensor[(10, 10, 6), float32], Tensor[(126), int16], Tensor[(600), uint64]) */;
  %442 = @func_8955() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) */;
  %443 = less(%434, %435) /* ty=Tensor[(16, 11, 11), bool] */;
  %444 = %438.1;
  %445 = %441.2;
  %446 = %442.2;
  (%443, %444, %var_10043, %445, %var_10067, %446)
}

def @func_2450(%var_2448: Tensor[(6, 13, 16), uint64]) -> (Tensor[(10, 16, 5), int32], Tensor[(160), float32], Tensor[(6, 13, 16), float64], Tensor[(6, 13, 16), float32]) {
  @func_2447(%var_2448) /* ty=(Tensor[(10, 16, 5), int32], Tensor[(160), float32], Tensor[(6, 13, 16), float64], Tensor[(6, 13, 16), float32]) */
}

def @func_3230(%var_3228: Tensor[(6, 2, 5), float32]) -> (Tensor[(6, 2, 5), float32],) {
  @func_3227(%var_3228) /* ty=(Tensor[(6, 2, 5), float32],) */
}

def @func_7871(%var_7831: Tensor[(1320), uint8]) -> (Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(780), int32], Tensor[(12, 5, 13), int32], Tensor[(12, 5, 13), int32], Tensor[(2080), float32], Tensor[(1320), uint8], Tensor[(2080), float32], Tensor[(14, 14, 5), bool], Tensor[(980), int32]) {
  %447 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %448 = cast(meta[relay.Constant][32] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %449 = cast(meta[relay.Constant][32] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %450 = reshape(%448, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %451 = reshape(%449, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %452 = @func_6902(%450, %451) /* ty=(Tensor[(12, 5, 13), int32],) */;
  %453 = cast(meta[relay.Constant][32] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %454 = cast(meta[relay.Constant][32] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %455 = reshape(%453, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %456 = reshape(%454, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %457 = @func_6902(%455, %456) /* ty=(Tensor[(12, 5, 13), int32],) */;
  %458 = %452.0;
  %459 = cast(%458, dtype="int32") /* ty=Tensor[(12, 5, 13), int32] */;
  %460 = cast(meta[relay.Constant][32] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %461 = reshape(%459, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %462 = reshape(%460, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
  %463 = @func_6902(%461, %462) /* ty=(Tensor[(12, 5, 13), int32],) */;
  %464 = cast(%var_7831, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %465 = cast(meta[relay.Constant][33] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %466 = reshape(%464, newshape=[10, 11, 12]) /* ty=Tensor[(10, 11, 12), uint8] */;
  %467 = reshape(%465, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %468 = @func_714(%466, %467) /* ty=(Tensor[(10, 11, 12), uint8], Tensor[(10, 16, 1), float32], int16, Tensor[(160), float32], Tensor[(2080), float32]) */;
  %469 = cast(meta[relay.Constant][34] /* ty=Tensor[(980), int32] */, dtype="int32") /* ty=Tensor[(980), int32] */;
  %470 = reshape(%469, newshape=[14, 14, 5]) /* ty=Tensor[(14, 14, 5), int32] */;
  %471 = %447.0;
  %472 = %457.0;
  %473 = %463.0;
  %474 = %468.4;
  %475 = @func_4387(%470) /* ty=Tensor[(14, 14, 5), bool] */;
  (%471, %458, meta[relay.Constant][32] /* ty=Tensor[(780), int32] */, %472, %473, %474, %var_7831, meta[relay.Constant][33] /* ty=Tensor[(2080), float32] */, %475, meta[relay.Constant][34] /* ty=Tensor[(980), int32] */)
}

def @func_6906(%var_6904: Tensor[(12, 5, 13), int32], %var_6905: Tensor[(12, 5, 13), int32]) -> (Tensor[(12, 5, 13), int32],) {
  @func_6902(%var_6904, %var_6905) /* ty=(Tensor[(12, 5, 13), int32],) */
}

def @func_954(%var_950: Tensor[(4, 2, 4), float64], %var_951: Tensor[(2080), float32], %var_952: Tensor[(192), float64], %var_953: Tensor[(4, 2, 4), float64]) -> (Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) {
  %516 = fn (%var_918: Tensor[(4, 2, 4), float64], %var_933: Tensor[(2080), float32], %var_936: Tensor[(192), float64], %var_943: Tensor[(4, 2, 4), float64]) -> (Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) {
    %476 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
    %477 = shape_of(%var_918, dtype="int32") /* ty=Tensor[(3), int32] */;
    %478 = cast(%var_918, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
    %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %480 = cast(meta[relay.Constant][36] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %481 = cast(meta[relay.Constant][37] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
    %482 = cast(%var_933, dtype="float32") /* ty=Tensor[(2080), float32] */;
    %483 = reshape(%480, newshape=[]) /* ty=int16 */;
    %484 = reshape(%481, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
    %485 = reshape(%482, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
    %486 = @func_549(%483, %484, %485) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
    %487 = cast(meta[relay.Constant][37] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
    %488 = cast(%var_936, dtype="float64") /* ty=Tensor[(192), float64] */;
    %489 = reshape(%487, newshape=[4, 40]) /* ty=Tensor[(4, 40), float32] */;
    %490 = reshape(%488, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
    %491 = @func_618(%489, %490) /* ty=(Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) */;
    %492 = cast(meta[relay.Constant][36] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %493 = cast(meta[relay.Constant][37] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
    %494 = cast(%var_933, dtype="float32") /* ty=Tensor[(2080), float32] */;
    %495 = reshape(%492, newshape=[]) /* ty=int16 */;
    %496 = reshape(%493, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
    %497 = reshape(%494, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
    %498 = @func_549(%495, %496, %497) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
    %499 = cast(meta[relay.Constant][38] /* ty=Tensor[(1320), uint8] */, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
    %500 = cast(%var_933, dtype="float32") /* ty=Tensor[(2080), float32] */;
    %501 = reshape(%499, newshape=[10, 11, 12]) /* ty=Tensor[(10, 11, 12), uint8] */;
    %502 = reshape(%500, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
    %503 = @func_714(%501, %502) /* ty=(Tensor[(10, 11, 12), uint8], Tensor[(10, 16, 1), float32], int16, Tensor[(160), float32], Tensor[(2080), float32]) */;
    %504 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
    %505 = exp(%504) /* ty=Tensor[(4, 2, 4), float64] */;
    %506 = cast(%var_943, dtype="int16") /* ty=Tensor[(4, 2, 4), int16] */;
    %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(3), int32] */;
    %508 = cast(%505, dtype="int16") /* ty=Tensor[(4, 2, 4), int16] */;
    %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %510 = floor_mod(%478, %479) /* ty=Tensor[(4, 2, 4), float64] */;
    %511 = %486.0;
    %512 = %491.0;
    %513 = %498.1;
    %514 = %503.2;
    %515 = bitwise_xor(%508, %509) /* ty=Tensor[(4, 2, 4), int16] */;
    (%510, %511, meta[relay.Constant][36] /* ty=int16 */, meta[relay.Constant][37] /* ty=Tensor[(160), float32] */, %var_933, %512, %var_936, %513, %514, meta[relay.Constant][38] /* ty=Tensor[(1320), uint8] */, %515)
  };
  %516(%var_950, %var_951, %var_952, %var_953) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) */
}

def @func_1808(%var_1806: Tensor[(7, 8, 13), float32], %var_1807: Tensor[(528), float32]) -> (Tensor[(7, 8, 13), float32], Tensor[(11, 16, 3), float32], Tensor[(528), float32], Tensor[(11, 16, 3), float64]) {
  %527 = fn (%var_1793: Tensor[(7, 8, 13), float32], %var_1799: Tensor[(528), float32]) -> (Tensor[(7, 8, 13), float32], Tensor[(11, 16, 3), float32], Tensor[(528), float32], Tensor[(11, 16, 3), float64]) {
    %517 = cast(%var_1793, dtype="float32") /* ty=Tensor[(7, 8, 13), float32] */;
    %518 = cast(%var_1799, dtype="float32") /* ty=Tensor[(528), float32] */;
    %519 = reshape(%518, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), float32] */;
    %520 = @func_1576(%519) /* ty=(Tensor[(11, 16, 3), float32], Tensor[(11, 16, 3), float64]) */;
    %521 = %520.0;
    %522 = cast(%521, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
    %523 = reshape(%522, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), float32] */;
    %524 = @func_1576(%523) /* ty=(Tensor[(11, 16, 3), float32], Tensor[(11, 16, 3), float64]) */;
    %525 = log10(%517) /* ty=Tensor[(7, 8, 13), float32] */;
    %526 = %524.1;
    (%525, %521, %var_1799, %526)
  };
  %527(%var_1806, %var_1807) /* ty=(Tensor[(7, 8, 13), float32], Tensor[(11, 16, 3), float32], Tensor[(528), float32], Tensor[(11, 16, 3), float64]) */
}

def @func_4004(%var_3951: Tensor[(13, 1), uint64], %var_3952: Tensor[(13, 1), uint64]) -> (Tensor[(13, ?), uint64],) {
  %528 = cast(%var_3952, dtype="uint64") /* ty=Tensor[(13, 1), uint64] */;
  %529 = shape_of(%var_3951, dtype="int32") /* ty=Tensor[(2), int32] */;
  %530 = cast(%var_3951, dtype="uint64") /* ty=Tensor[(13, 1), uint64] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %532 = subtract(%530, %531) /* ty=Tensor[(13, ?), uint64] */;
  (%532,)
}

def @func_8831() -> Tensor[(16, 11, 11), float32] {
  %534 = fn () -> Tensor[(16, 11, 11), float32] {
    %533 = @func_8229() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %533.0
  };
  %534() /* ty=Tensor[(16, 11, 11), float32] */
}

def @func_9588() -> (Tensor[(16, 11, 11), uint32], Tensor[(16, 11, 11), float32]) {
  @func_9586() /* ty=(Tensor[(16, 11, 11), uint32], Tensor[(16, 11, 11), float32]) */
}

def @func_9616() -> Tensor[(16, 11, 11), float32] {
  @func_9614() /* ty=Tensor[(16, 11, 11), float32] */
}

def @func_621(%var_619: Tensor[(4, 40), float32], %var_620: Tensor[(16, 3, 4), float64]) -> (Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) {
  %555 = fn (%var_594: Tensor[(4, 40), float32], %var_604: Tensor[(16, 3, 4), float64]) -> (Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) {
    %535 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
    %536 = cast(%var_594, dtype="float32") /* ty=Tensor[(4, 40), float32] */;
    %537 = reshape(%536, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
    %538 = @func_375(%537) /* ty=(Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) */;
    %539 = cast(%var_604, dtype="bool") /* ty=Tensor[(16, 3, 4), bool] */;
    %540 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(16, 3, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %541 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 3, 4), float64] */, dtype="bool") /* ty=Tensor[(16, 3, 4), bool] */;
    %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %543 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
    %544 = asinh(%543) /* ty=Tensor[(16, 3, 4), float64] */;
    %545 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 3, 4), float64] */, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
    %546 = tan(%545) /* ty=Tensor[(16, 3, 4), float32] */;
    %547 = cast(%546, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
    %548 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
    %549 = cast(%544, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
    %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %551 = cos(%535) /* ty=Tensor[(16, 3, 4), float64] */;
    %552 = %538.1;
    %553 = not_equal(%541, %542) /* ty=Tensor[(16, 3, 4), bool] */;
    %554 = mod(%549, %550) /* ty=Tensor[(16, 3, 4), float64] */;
    (%551, %552, %var_594, %553, %554)
  };
  %555(%var_619, %var_620) /* ty=(Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) */
}

def @func_8208() -> (Tensor[(16, 11, 11), float32],) {
  %558 = fn () -> (Tensor[(16, 11, 11), float32],) {
    %556 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %557 = %556.0;
    (%557,)
  };
  %558() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_8140(%var_8138: Tensor[(4, 5, 12), float32]) -> (Tensor[(9, 2, 7), int16], Tensor[(21, 6), int16], Tensor[(4, 5, 12), bool]) {
  @func_8137(%var_8138) /* ty=(Tensor[(9, 2, 7), int16], Tensor[(21, 6), int16], Tensor[(4, 5, 12), bool]) */
}

def @func_10194() -> (Tensor[(16, 11, 11), float32],) {
  %559 = @func_9173() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %560 = %559.0;
  (%560,)
}

def @func_2056(%var_2044: Tensor[(10, 9, 5), int64], %var_2045: Tensor[(10, 9, 5), int64]) -> Tensor[(10, 9, 5), int64] {
  %561 = cast(%var_2045, dtype="int64") /* ty=Tensor[(10, 9, 5), int64] */;
  %562 = shape_of(%var_2044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%var_2044, dtype="int64") /* ty=Tensor[(10, 9, 5), int64] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%563, %564) /* ty=Tensor[(10, 9, 5), int64] */
}

def @func_6355(%var_6353: Tensor[(10, 10, 6), uint64], %var_6354: Tensor[(10, 10, 6), uint64]) -> (Tensor[(10, 10, 6), float32],) {
  %572 = fn (%var_6333: Tensor[(10, 10, 6), uint64], %var_6334: Tensor[(10, 10, 6), uint64]) -> (Tensor[(10, 10, 6), float32],) {
    %565 = cast(%var_6334, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
    %566 = shape_of(%var_6333, dtype="int32") /* ty=Tensor[(3), int32] */;
    %567 = cast(%var_6333, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
    %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %569 = add(%567, %568) /* ty=Tensor[(10, 10, 6), uint64] */;
    %570 = cast(%569, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
    %571 = cosh(%570) /* ty=Tensor[(10, 10, 6), float32] */;
    (%571,)
  };
  %572(%var_6353, %var_6354) /* ty=(Tensor[(10, 10, 6), float32],) */
}

def @func_7874(%var_7872: Tensor[(1320), uint8]) -> (Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(780), int32], Tensor[(12, 5, 13), int32], Tensor[(12, 5, 13), int32], Tensor[(2080), float32], Tensor[(1320), uint8], Tensor[(2080), float32], Tensor[(14, 14, 5), bool], Tensor[(980), int32]) {
  @func_7871(%var_7872) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(780), int32], Tensor[(12, 5, 13), int32], Tensor[(12, 5, 13), int32], Tensor[(2080), float32], Tensor[(1320), uint8], Tensor[(2080), float32], Tensor[(14, 14, 5), bool], Tensor[(980), int32]) */
}

def @func_8499(%var_8498: Tensor[(8, 4), float64]) -> (Tensor[(6, 2, 5), float32], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(8, 4), float64]) {
  %581 = fn (%var_8492: Tensor[(8, 4), float64]) -> (Tensor[(6, 2, 5), float32], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(8, 4), float64]) {
    %573 = @func_8190() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */;
    %574 = cast(meta[relay.Constant][40] /* ty=Tensor[(1248), uint64] */, dtype="uint64") /* ty=Tensor[(1248), uint64] */;
    %575 = cast(%var_8492, dtype="float64") /* ty=Tensor[(8, 4), float64] */;
    %576 = reshape(%574, newshape=[1248]) /* ty=Tensor[(1248), uint64] */;
    %577 = reshape(%575, newshape=[32]) /* ty=Tensor[(32), float64] */;
    %578 = @func_3513(%576, %577) /* ty=(Tensor[(7, 11, 8), uint16], Tensor[(6, 13, 16), float64], Tensor[(1248), uint64], Tensor[(4, 12, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192, ?), float32]) */;
    %579 = %573.1;
    %580 = %578.5;
    (%579, %580, meta[relay.Constant][40] /* ty=Tensor[(1248), uint64] */, %var_8492)
  };
  %581(%var_8498) /* ty=(Tensor[(6, 2, 5), float32], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(8, 4), float64]) */
}

def @func_6953(%var_6946: Tensor[(1, 11, 7), float32]) -> Tensor[(1, 11, 7), float32] {
  %582 = cast(%var_6946, dtype="float32") /* ty=Tensor[(1, 11, 7), float32] */;
  log10(%582) /* ty=Tensor[(1, 11, 7), float32] */
}

def @func_8611(%var_8580: Tensor[(1320), uint8], %var_8581: Tensor[(2080), float32]) -> (Tensor[(16, 11, 11), float32], Tensor[(160), float32], Tensor[(1320), uint8], Tensor[(2080), float32]) {
  %583 = cast(%var_8580, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %584 = cast(%var_8581, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %585 = reshape(%583, newshape=[10, 11, 12]) /* ty=Tensor[(10, 11, 12), uint8] */;
  %586 = reshape(%584, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %587 = @func_714(%585, %586) /* ty=(Tensor[(10, 11, 12), uint8], Tensor[(10, 16, 1), float32], int16, Tensor[(160), float32], Tensor[(2080), float32]) */;
  %588 = cast(%var_8581, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %589 = @func_8075() /* ty=Tensor[(16, 11, 11), float32] */;
  %590 = %587.3;
  %591 = log10(%588) /* ty=Tensor[(2080), float32] */;
  (%589, %590, %var_8580, %591)
}

def @func_8874(%var_8844: Tensor[(4, 8), float64]) -> (Tensor[(16, 11, 11), float32], Tensor[(1248), uint64], Tensor[(4, 8), float64], Tensor[(13, ?), uint64], Tensor[(13), uint64], Tensor[(16, 11, 11), float32], Tensor[(1320), uint8], Tensor[(520, 4), float32]) {
  %592 = @func_8190() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */;
  %593 = cast(%var_8844, dtype="float64") /* ty=Tensor[(4, 8), float64] */;
  %594 = reshape(%593, newshape=[8, 4]) /* ty=Tensor[(8, 4), float64] */;
  %595 = @func_8497(%594) /* ty=(Tensor[(6, 2, 5), float32], Tensor[(2080), float32], Tensor[(1248), uint64], Tensor[(8, 4), float64]) */;
  %596 = cast(meta[relay.Constant][41] /* ty=Tensor[(13), uint64] */, dtype="uint64") /* ty=Tensor[(13), uint64] */;
  %597 = cast(meta[relay.Constant][41] /* ty=Tensor[(13), uint64] */, dtype="uint64") /* ty=Tensor[(13), uint64] */;
  %598 = reshape(%596, newshape=[13, 1]) /* ty=Tensor[(13, 1), uint64] */;
  %599 = reshape(%597, newshape=[13, 1]) /* ty=Tensor[(13, 1), uint64] */;
  %600 = @func_4004(%598, %599) /* ty=(Tensor[(13, ?), uint64],) */;
  %601 = cast(meta[relay.Constant][42] /* ty=Tensor[(1320), uint8] */, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %602 = cast(meta[relay.Constant][43] /* ty=Tensor[(520, 4), float32] */, dtype="float32") /* ty=Tensor[(520, 4), float32] */;
  %603 = reshape(%601, newshape=[1320]) /* ty=Tensor[(1320), uint8] */;
  %604 = reshape(%602, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %605 = @func_8611(%603, %604) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(160), float32], Tensor[(1320), uint8], Tensor[(2080), float32]) */;
  %606 = %592.0;
  %607 = %595.2;
  %608 = %600.0;
  %609 = %605.0;
  (%606, %607, %var_8844, %608, meta[relay.Constant][41] /* ty=Tensor[(13), uint64] */, %609, meta[relay.Constant][42] /* ty=Tensor[(1320), uint8] */, meta[relay.Constant][43] /* ty=Tensor[(520, 4), float32] */)
}

def @func_7726(%var_7724: Tensor[(9, 2, 7), int16], %var_7725: Tensor[(9, 2, 7), int16]) -> Tensor[(9, 2, 7), int16] {
  @func_7722(%var_7724, %var_7725) /* ty=Tensor[(9, 2, 7), int16] */
}

def @func_9817(%var_9814: Tensor[(600, 1), uint64], %var_9815: Tensor[(1, 60), float32], %var_9816: Tensor[(160), float32]) -> (Tensor[(16, 11, 11), uint32], Tensor[(126), int16], Tensor[(600, 1), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 3, 4), bool], Tensor[(160), float32], Tensor[(192), float64], Tensor[(6, 2, 5), bool], Tensor[(16, 11, 11), float32], Tensor[(16, 11, 11), float32]) {
  @func_9812(%var_9814, %var_9815, %var_9816) /* ty=(Tensor[(16, 11, 11), uint32], Tensor[(126), int16], Tensor[(600, 1), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 3, 4), bool], Tensor[(160), float32], Tensor[(192), float64], Tensor[(6, 2, 5), bool], Tensor[(16, 11, 11), float32], Tensor[(16, 11, 11), float32]) */
}

def @func_9909(%var_9908: Tensor[(126), int16]) -> (Tensor[(16, 11, 11), float32], Tensor[(10, 9, 5), int64], Tensor[(192), float64], Tensor[(10, 10, 6), float32], Tensor[(126), int16], Tensor[(600), uint64]) {
  %625 = fn (%var_9898: Tensor[(126), int16]) -> (Tensor[(16, 11, 11), float32], Tensor[(10, 9, 5), int64], Tensor[(192), float64], Tensor[(10, 10, 6), float32], Tensor[(126), int16], Tensor[(600), uint64]) {
    %610 = cast(meta[relay.Constant][44] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %611 = reshape(%610, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), float64] */;
    %612 = @func_2668(%611) /* ty=(Tensor[(4, 12, 4), float64], Tensor[(10, 9, 5), int64], Tensor[(450), int64]) */;
    %613 = cast(%var_9898, dtype="int16") /* ty=Tensor[(126), int16] */;
    %614 = cast(meta[relay.Constant][45] /* ty=Tensor[(600), uint64] */, dtype="uint64") /* ty=Tensor[(600), uint64] */;
    %615 = @func_8830() /* ty=Tensor[(16, 11, 11), float32] */;
    %616 = cast(%615, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
    %617 = cast(%615, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
    %618 = reshape(%613, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
    %619 = reshape(%614, newshape=[600]) /* ty=Tensor[(600), uint64] */;
    %620 = reshape(%616, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
    %621 = reshape(%617, newshape=[16, 11, 11]) /* ty=Tensor[(16, 11, 11), float32] */;
    %622 = @func_8371(%618, %619, %620, %621) /* ty=(Tensor[(240), float32], Tensor[(9, 2, 7), int32], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(10, 10, 6), float32]) */;
    %623 = %612.1;
    %624 = %622.4;
    (%615, %623, meta[relay.Constant][44] /* ty=Tensor[(192), float64] */, %624, %var_9898, meta[relay.Constant][45] /* ty=Tensor[(600), uint64] */)
  };
  %625(%var_9908) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(10, 9, 5), int64], Tensor[(192), float64], Tensor[(10, 10, 6), float32], Tensor[(126), int16], Tensor[(600), uint64]) */
}

def @func_2320(%var_2317: Tensor[(9, 16, 7), float32], %var_2318: int16, %var_2319: Tensor[(1040, 2), float32]) -> (Tensor[(9, 16, 7), float32], Tensor[(14, 14, 16), int16], int16, Tensor[(1, 160), float32], Tensor[(1040, 2), float32]) {
  %636 = fn (%var_2308: Tensor[(9, 16, 7), float32], %var_2312: int16, %var_2314: Tensor[(1040, 2), float32]) -> (Tensor[(9, 16, 7), float32], Tensor[(14, 14, 16), int16], int16, Tensor[(1, 160), float32], Tensor[(1040, 2), float32]) {
    %626 = cast(%var_2308, dtype="float32") /* ty=Tensor[(9, 16, 7), float32] */;
    %627 = cast(%var_2312, dtype="int16") /* ty=int16 */;
    %628 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 160), float32] */, dtype="float32") /* ty=Tensor[(1, 160), float32] */;
    %629 = cast(%var_2314, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
    %630 = reshape(%627, newshape=[]) /* ty=int16 */;
    %631 = reshape(%628, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
    %632 = reshape(%629, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
    %633 = @func_549(%630, %631, %632) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
    %634 = log10(%626) /* ty=Tensor[(9, 16, 7), float32] */;
    %635 = %633.0;
    (%634, %635, %var_2312, meta[relay.Constant][46] /* ty=Tensor[(1, 160), float32] */, %var_2314)
  };
  %636(%var_2317, %var_2318, %var_2319) /* ty=(Tensor[(9, 16, 7), float32], Tensor[(14, 14, 16), int16], int16, Tensor[(1, 160), float32], Tensor[(1040, 2), float32]) */
}

def @func_10740(%var_10738: Tensor[(12, 12, 10), float64], %var_10739: Tensor[(12, 12, 10), float64]) -> (Tensor[(12, 12, 10), float32],) {
  %644 = fn (%var_10725: Tensor[(12, 12, 10), float64], %var_10726: Tensor[(12, 12, 10), float64]) -> (Tensor[(12, 12, 10), float32],) {
    %637 = cast(%var_10726, dtype="float64") /* ty=Tensor[(12, 12, 10), float64] */;
    %638 = shape_of(%var_10725, dtype="int32") /* ty=Tensor[(3), int32] */;
    %639 = cast(%var_10725, dtype="float64") /* ty=Tensor[(12, 12, 10), float64] */;
    %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %641 = power(%639, %640) /* ty=Tensor[(12, 12, 10), float64] */;
    %642 = cast(%641, dtype="float32") /* ty=Tensor[(12, 12, 10), float32] */;
    %643 = exp(%642) /* ty=Tensor[(12, 12, 10), float32] */;
    (%643,)
  };
  %644(%var_10738, %var_10739) /* ty=(Tensor[(12, 12, 10), float32],) */
}

def @func_10013() -> Tensor[(16, 11, 11), float32] {
  @func_10011() /* ty=Tensor[(16, 11, 11), float32] */
}

def @func_8730() -> (Tensor[(6, 2, 5), float64],) {
  %645 = @func_8190() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */;
  %646 = %645.1;
  %647 = cast(%646, dtype="float64") /* ty=Tensor[(6, 2, 5), float64] */;
  %648 = sin(%647) /* ty=Tensor[(6, 2, 5), float64] */;
  (%648,)
}

def @func_4008(%var_4006: Tensor[(13, 1), uint64], %var_4007: Tensor[(13, 1), uint64]) -> (Tensor[(13, ?), uint64],) {
  @func_4004(%var_4006, %var_4007) /* ty=(Tensor[(13, ?), uint64],) */
}

def @func_10755() -> (Tensor[(16, 11, 11), float32],) {
  %649 = @func_9586() /* ty=(Tensor[(16, 11, 11), uint32], Tensor[(16, 11, 11), float32]) */;
  %650 = %649.1;
  (%650,)
}

def @func_2618(%var_2616: Tensor[(11, 5, 8), float32], %var_2617: Tensor[(192), float64]) -> (Tensor[(11, 5, 8), bool], Tensor[(11, 5, 8), float32], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) {
  @func_2614(%var_2616, %var_2617) /* ty=(Tensor[(11, 5, 8), bool], Tensor[(11, 5, 8), float32], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) */
}

def @func_2614(%var_2586: Tensor[(11, 5, 8), float32], %var_2592: Tensor[(192), float64]) -> (Tensor[(11, 5, 8), bool], Tensor[(11, 5, 8), float32], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) {
  %651 = cast(meta[relay.Constant][47] /* ty=Tensor[(11, 5, 8), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %652 = atanh(%651) /* ty=Tensor[(11, 5, 8), float32] */;
  %653 = cast(%652, dtype="uint64") /* ty=Tensor[(11, 5, 8), uint64] */;
  %654 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(11, 5, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(meta[relay.Constant][47] /* ty=Tensor[(11, 5, 8), float32] */, dtype="uint64") /* ty=Tensor[(11, 5, 8), uint64] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %657 = subtract(%655, %656) /* ty=Tensor[(11, 5, 8), uint64] */;
  %658 = cast(%657, dtype="bool") /* ty=Tensor[(11, 5, 8), bool] */;
  %659 = shape_of(%652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%652, dtype="bool") /* ty=Tensor[(11, 5, 8), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = cast(%var_2586, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %663 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(11, 5, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(meta[relay.Constant][47] /* ty=Tensor[(11, 5, 8), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %666 = cast(meta[relay.Constant][48] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %667 = cast(%var_2592, dtype="float64") /* ty=Tensor[(192), float64] */;
  %668 = reshape(%666, newshape=[4, 40]) /* ty=Tensor[(4, 40), float32] */;
  %669 = reshape(%667, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
  %670 = @func_618(%668, %669) /* ty=(Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) */;
  %671 = greater_equal(%660, %661) /* ty=Tensor[(11, 5, 8), bool] */;
  %672 = mod(%664, %665) /* ty=Tensor[(11, 5, 8), float32] */;
  %673 = %670.4;
  (%671, %672, %673, meta[relay.Constant][48] /* ty=Tensor[(160), float32] */, %var_2592)
}

def @func_5869(%var_5827: Tensor[(12, 6, 1), int64]) -> (Tensor[(12, 6, 14), int64], Tensor[(16, 12, 13), int32], Tensor[(2496, 1), int32]) {
  %674 = cast(%var_5827, dtype="int64") /* ty=Tensor[(12, 6, 1), int64] */;
  %675 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 6, 14), int64] */, dtype="int64") /* ty=Tensor[(12, 6, 14), int64] */;
  %676 = cast(meta[relay.Constant][50] /* ty=Tensor[(2496, 1), int32] */, dtype="int32") /* ty=Tensor[(2496, 1), int32] */;
  %677 = reshape(%676, newshape=[16, 12, 13]) /* ty=Tensor[(16, 12, 13), int32] */;
  %678 = @func_4365(%677) /* ty=(Tensor[(16, 12, 13), int32],) */;
  %679 = bitwise_or(%674, %675) /* ty=Tensor[(12, 6, 14), int64] */;
  %680 = %678.0;
  (%679, %680, meta[relay.Constant][50] /* ty=Tensor[(2496, 1), int32] */)
}

def @func_8402(%var_8401: Tensor[(8, 9, 14), float64]) -> (Tensor[(8, 9, 14), float64],) {
  %683 = fn (%var_8395: Tensor[(8, 9, 14), float64]) -> (Tensor[(8, 9, 14), float64],) {
    %681 = cast(%var_8395, dtype="float64") /* ty=Tensor[(8, 9, 14), float64] */;
    %682 = log(%681) /* ty=Tensor[(8, 9, 14), float64] */;
    (%682,)
  };
  %683(%var_8401) /* ty=(Tensor[(8, 9, 14), float64],) */
}

def @func_9463(%var_9460: Tensor[(8, 2, 11), float32], %var_9461: Tensor[(8, 2, 11), float32], %var_9462: Tensor[(2080), float32]) -> (Tensor[(9, 2, 7), int16], Tensor[(126), int16], Tensor[(8, 2, 11), float64], Tensor[(160), float32], Tensor[(60, 22), uint8], Tensor[(2080), float32]) {
  %702 = fn (%var_9425: Tensor[(8, 2, 11), float32], %var_9426: Tensor[(8, 2, 11), float32], %var_9456: Tensor[(2080), float32]) -> (Tensor[(9, 2, 7), int16], Tensor[(126), int16], Tensor[(8, 2, 11), float64], Tensor[(160), float32], Tensor[(60, 22), uint8], Tensor[(2080), float32]) {
    %684 = cast(meta[relay.Constant][51] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %685 = cast(meta[relay.Constant][51] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %686 = reshape(%684, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
    %687 = reshape(%685, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
    %688 = cast(%var_9426, dtype="float32") /* ty=Tensor[(8, 2, 11), float32] */;
    %689 = shape_of(%var_9425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %690 = cast(%var_9425, dtype="float32") /* ty=Tensor[(8, 2, 11), float32] */;
    %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %692 = subtract(%690, %691) /* ty=Tensor[(8, 2, 11), float32] */;
    %693 = cast(%692, dtype="float64") /* ty=Tensor[(8, 2, 11), float64] */;
    %694 = cast(meta[relay.Constant][52] /* ty=Tensor[(60, 22), uint8] */, dtype="uint8") /* ty=Tensor[(60, 22), uint8] */;
    %695 = cast(%var_9456, dtype="float32") /* ty=Tensor[(2080), float32] */;
    %696 = reshape(%694, newshape=[1320]) /* ty=Tensor[(1320), uint8] */;
    %697 = reshape(%695, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
    %698 = @func_8611(%696, %697) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(160), float32], Tensor[(1320), uint8], Tensor[(2080), float32]) */;
    %699 = @func_7722(%686, %687) /* ty=Tensor[(9, 2, 7), int16] */;
    %700 = sin(%693) /* ty=Tensor[(8, 2, 11), float64] */;
    %701 = %698.1;
    (%699, meta[relay.Constant][51] /* ty=Tensor[(126), int16] */, %700, %701, meta[relay.Constant][52] /* ty=Tensor[(60, 22), uint8] */, %var_9456)
  };
  %702(%var_9460, %var_9461, %var_9462) /* ty=(Tensor[(9, 2, 7), int16], Tensor[(126), int16], Tensor[(8, 2, 11), float64], Tensor[(160), float32], Tensor[(60, 22), uint8], Tensor[(2080), float32]) */
}

def @func_7349(%var_7347: float32, %var_7348: Tensor[(110), float64]) -> (Tensor[(15, 11, 12), float32], Tensor[(15, 11, 12), float32], Tensor[(11, 10, 11), float64], Tensor[(110), float64], Tensor[(12, 5, 13), int32], Tensor[(780), int32]) {
  %717 = fn (%var_7300: float32, %var_7318: Tensor[(110), float64]) -> (Tensor[(15, 11, 12), float32], Tensor[(15, 11, 12), float32], Tensor[(11, 10, 11), float64], Tensor[(110), float64], Tensor[(12, 5, 13), int32], Tensor[(780), int32]) {
    %703 = cast(%var_7300, dtype="float32") /* ty=float32 */;
    %704 = cast(meta[relay.Constant][53] /* ty=Tensor[(15, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 12), float32] */;
    %705 = cast(meta[relay.Constant][53] /* ty=Tensor[(15, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 12), float32] */;
    %706 = cast(%var_7318, dtype="float64") /* ty=Tensor[(110), float64] */;
    %707 = reshape(%706, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float64] */;
    %708 = cast(meta[relay.Constant][54] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
    %709 = cast(meta[relay.Constant][54] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
    %710 = reshape(%708, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
    %711 = reshape(%709, newshape=[12, 5, 13]) /* ty=Tensor[(12, 5, 13), int32] */;
    %712 = @func_6902(%710, %711) /* ty=(Tensor[(12, 5, 13), int32],) */;
    %713 = mod(%703, %704) /* ty=Tensor[(15, 11, 12), float32] */;
    %714 = asin(%705) /* ty=Tensor[(15, 11, 12), float32] */;
    %715 = @func_3348(%707) /* ty=Tensor[(11, 10, 11), float64] */;
    %716 = %712.0;
    (%713, %714, %715, %var_7318, %716, meta[relay.Constant][54] /* ty=Tensor[(780), int32] */)
  };
  %717(%var_7347, %var_7348) /* ty=(Tensor[(15, 11, 12), float32], Tensor[(15, 11, 12), float32], Tensor[(11, 10, 11), float64], Tensor[(110), float64], Tensor[(12, 5, 13), int32], Tensor[(780), int32]) */
}

def @func_9080(%var_9047: Tensor[(6, 2, 5), float64]) -> Tensor[(6, 2, 5), int16] {
  %718 = @func_8730() /* ty=(Tensor[(6, 2, 5), float64],) */;
  %719 = %718.0;
  %720 = cast(%var_9047, dtype="float64") /* ty=Tensor[(6, 2, 5), float64] */;
  %721 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%719, dtype="float64") /* ty=Tensor[(6, 2, 5), float64] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %724 = mod(%722, %723) /* ty=Tensor[(6, 2, 5), float64] */;
  %725 = cast(%724, dtype="int16") /* ty=Tensor[(6, 2, 5), int16] */;
  %726 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%719, dtype="int16") /* ty=Tensor[(6, 2, 5), int16] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%727, %728) /* ty=Tensor[(6, 2, 5), int16] */
}

def @func_714(%var_699: Tensor[(10, 11, 12), uint8], %var_712: Tensor[(2080), float32]) -> (Tensor[(10, 11, 12), uint8], Tensor[(10, 16, 1), float32], int16, Tensor[(160), float32], Tensor[(2080), float32]) {
  %729 = cast(%var_699, dtype="uint8") /* ty=Tensor[(10, 11, 12), uint8] */;
  %730 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(10, 11, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(meta[relay.Constant][55] /* ty=Tensor[(10, 11, 12), uint8] */, dtype="uint8") /* ty=Tensor[(10, 11, 12), uint8] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %733 = cast(meta[relay.Constant][56] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %734 = cast(meta[relay.Constant][57] /* ty=Tensor[(160), float32] */, dtype="float32") /* ty=Tensor[(160), float32] */;
  %735 = cast(%var_712, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %736 = reshape(%733, newshape=[]) /* ty=int16 */;
  %737 = reshape(%734, newshape=[1, 160]) /* ty=Tensor[(1, 160), float32] */;
  %738 = reshape(%735, newshape=[13, 160]) /* ty=Tensor[(13, 160), float32] */;
  %739 = @func_549(%736, %737, %738) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */;
  %740 = bitwise_and(%731, %732) /* ty=Tensor[(10, 11, 12), uint8] */;
  %741 = %739.2;
  (%740, %741, meta[relay.Constant][56] /* ty=int16 */, meta[relay.Constant][57] /* ty=Tensor[(160), float32] */, %var_712)
}

def @func_7722(%var_7709: Tensor[(9, 2, 7), int16], %var_7710: Tensor[(9, 2, 7), int16]) -> Tensor[(9, 2, 7), int16] {
  %742 = cast(%var_7710, dtype="int16") /* ty=Tensor[(9, 2, 7), int16] */;
  %743 = shape_of(%var_7709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%var_7709, dtype="int16") /* ty=Tensor[(9, 2, 7), int16] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%744, %745) /* ty=Tensor[(9, 2, 7), int16] */
}

def @func_2671(%var_2669: Tensor[(4, 12, 4), float64]) -> (Tensor[(4, 12, 4), float64], Tensor[(10, 9, 5), int64], Tensor[(450), int64]) {
  @func_2668(%var_2669) /* ty=(Tensor[(4, 12, 4), float64], Tensor[(10, 9, 5), int64], Tensor[(450), int64]) */
}

def @func_9245(%var_9211: Tensor[(2, 6, 3), float64]) -> (Tensor[(2, 6, 3), int16], Tensor[(2, 6, 3), bool]) {
  %746 = cast(%var_9211, dtype="float64") /* ty=Tensor[(2, 6, 3), float64] */;
  %747 = exp(%746) /* ty=Tensor[(2, 6, 3), float64] */;
  %748 = cast(%747, dtype="int16") /* ty=Tensor[(2, 6, 3), int16] */;
  %749 = shape_of(%var_9211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%var_9211, dtype="int16") /* ty=Tensor[(2, 6, 3), int16] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %752 = cast(%var_9211, dtype="bool") /* ty=Tensor[(2, 6, 3), bool] */;
  %753 = shape_of(%747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%747, dtype="bool") /* ty=Tensor[(2, 6, 3), bool] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %756 = minimum(%750, %751) /* ty=Tensor[(2, 6, 3), int16] */;
  %757 = greater_equal(%754, %755) /* ty=Tensor[(2, 6, 3), bool] */;
  (%756, %757)
}

def @func_10011() -> Tensor[(16, 11, 11), float32] {
  %758 = @func_9173() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %759 = %758.0;
  %760 = cast(%759, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  erf(%760) /* ty=Tensor[(16, 11, 11), float32] */
}

def @func_7980(%var_7979: Tensor[(1320), uint8]) -> (Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(1320), uint8]) {
  %767 = fn (%var_7952: Tensor[(1320), uint8]) -> (Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(1320), uint8]) {
    %761 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %762 = cast(%var_7952, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
    %763 = reshape(%762, newshape=[1320]) /* ty=Tensor[(1320), uint8] */;
    %764 = @func_7871(%763) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(780), int32], Tensor[(12, 5, 13), int32], Tensor[(12, 5, 13), int32], Tensor[(2080), float32], Tensor[(1320), uint8], Tensor[(2080), float32], Tensor[(14, 14, 5), bool], Tensor[(980), int32]) */;
    %765 = %761.0;
    %766 = %764.3;
    (%765, %766, %var_7952)
  };
  %767(%var_7979) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(12, 5, 13), int32], Tensor[(1320), uint8]) */
}

def @func_10593() -> (Tensor[(16, 11, 11), float32],) {
  %768 = @func_10011() /* ty=Tensor[(16, 11, 11), float32] */;
  (%768,)
}

def @func_5872(%var_5870: Tensor[(12, 6, 1), int64]) -> (Tensor[(12, 6, 14), int64], Tensor[(16, 12, 13), int32], Tensor[(2496, 1), int32]) {
  @func_5869(%var_5870) /* ty=(Tensor[(12, 6, 14), int64], Tensor[(16, 12, 13), int32], Tensor[(2496, 1), int32]) */
}

def @func_2877(%var_2875: Tensor[(13, 7, 13), int32], %var_2876: Tensor[(13, 7, 13), int32]) -> (Tensor[(13, 7, 13), int32],) {
  @func_2873(%var_2875, %var_2876) /* ty=(Tensor[(13, 7, 13), int32],) */
}

def @func_8732() -> (Tensor[(6, 2, 5), float64],) {
  @func_8730() /* ty=(Tensor[(6, 2, 5), float64],) */
}

def @func_10413() -> (Tensor[(16, 11, 11), float32],) {
  @func_10411() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_10595() -> (Tensor[(16, 11, 11), float32],) {
  @func_10593() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_10989() -> (Tensor[(16, 11, 11), float32],) {
  @func_10987() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_9536(%var_9535: Tensor[(60), float64]) -> (Tensor[(2496), int32], Tensor[(6, 2, 5), int16], Tensor[(60), float64]) {
  %774 = fn (%var_9531: Tensor[(60), float64]) -> (Tensor[(2496), int32], Tensor[(6, 2, 5), int16], Tensor[(60), float64]) {
    %769 = @func_8955() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 12, 13), int32], Tensor[(2496), int32]) */;
    %770 = cast(%var_9531, dtype="float64") /* ty=Tensor[(60), float64] */;
    %771 = reshape(%770, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), float64] */;
    %772 = %769.2;
    %773 = @func_9080(%771) /* ty=Tensor[(6, 2, 5), int16] */;
    (%772, %773, %var_9531)
  };
  %774(%var_9535) /* ty=(Tensor[(2496), int32], Tensor[(6, 2, 5), int16], Tensor[(60), float64]) */
}

def @func_8371(%var_8301: Tensor[(9, 2, 7), int16], %var_8307: Tensor[(600), uint64], %var_8336: Tensor[(16, 11, 11), float32], %var_8348: Tensor[(16, 11, 11), float32]) -> (Tensor[(240), float32], Tensor[(9, 2, 7), int32], Tensor[(10, 10, 6), float32], Tensor[(600), uint64], Tensor[(10, 10, 6), float32], Tensor[(16, 11, 11), uint16], Tensor[(16, 11, 11), float32], Tensor[(10, 10, 6), float32]) {
  %775 = cast(meta[relay.Constant][58] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %776 = reshape(%775, newshape=[4, 5, 12]) /* ty=Tensor[(4, 5, 12), float32] */;
  %777 = @func_8137(%776) /* ty=(Tensor[(9, 2, 7), int16], Tensor[(21, 6), int16], Tensor[(4, 5, 12), bool]) */;
  %778 = %777.0;
  %779 = cast(%var_8301, dtype="int32") /* ty=Tensor[(9, 2, 7), int32] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%778, dtype="int32") /* ty=Tensor[(9, 2, 7), int32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %783 = cast(%var_8307, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %784 = cast(%var_8307, dtype="uint64") /* ty=Tensor[(600), uint64] */;
  %785 = reshape(%783, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %786 = reshape(%784, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %787 = @func_6352(%785, %786) /* ty=(Tensor[(10, 10, 6), float32],) */;
  %788 = %787.0;
  %789 = cast(%788, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
  %790 = cast(%788, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
  %791 = reshape(%789, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %792 = reshape(%790, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %793 = @func_6352(%791, %792) /* ty=(Tensor[(10, 10, 6), float32],) */;
  %794 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %795 = %794.0;
  %796 = cast(%var_8336, dtype="uint16") /* ty=Tensor[(16, 11, 11), uint16] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%795, dtype="uint16") /* ty=Tensor[(16, 11, 11), uint16] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %800 = @func_8229() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %801 = %800.0;
  %802 = cast(%var_8348, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%801, dtype="float32") /* ty=Tensor[(16, 11, 11), float32] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %806 = cast(%788, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
  %807 = cast(%788, dtype="uint64") /* ty=Tensor[(10, 10, 6), uint64] */;
  %808 = reshape(%806, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %809 = reshape(%807, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), uint64] */;
  %810 = @func_6352(%808, %809) /* ty=(Tensor[(10, 10, 6), float32],) */;
  %811 = right_shift(%781, %782) /* ty=Tensor[(9, 2, 7), int32] */;
  %812 = %793.0;
  %813 = maximum(%798, %799) /* ty=Tensor[(16, 11, 11), uint16] */;
  %814 = floor_divide(%804, %805) /* ty=Tensor[(16, 11, 11), float32] */;
  %815 = %810.0;
  (meta[relay.Constant][58] /* ty=Tensor[(240), float32] */, %811, %788, %var_8307, %812, %813, %814, %815)
}

def @func_10757() -> (Tensor[(16, 11, 11), float32],) {
  @func_10755() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_3933(%var_3903: Tensor[(9, 9, 5), float32]) -> (Tensor[(9, 9, 5), float64], Tensor[(11, 16, 3), float32], Tensor[(528), float32]) {
  %816 = cast(%var_3903, dtype="float32") /* ty=Tensor[(9, 9, 5), float32] */;
  %817 = sinh(%816) /* ty=Tensor[(9, 9, 5), float32] */;
  %818 = cast(%817, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
  %819 = shape_of(%var_3903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%var_3903, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %822 = maximum(%820, %821) /* ty=Tensor[(9, 9, 5), float64] */;
  %823 = cast(%822, dtype="float64") /* ty=Tensor[(9, 9, 5), float64] */;
  %824 = cast(meta[relay.Constant][59] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %825 = reshape(%824, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), float32] */;
  %826 = @func_1576(%825) /* ty=(Tensor[(11, 16, 3), float32], Tensor[(11, 16, 3), float64]) */;
  %827 = erf(%823) /* ty=Tensor[(9, 9, 5), float64] */;
  %828 = %826.0;
  (%827, %828, meta[relay.Constant][59] /* ty=Tensor[(528), float32] */)
}

def @func_6956(%var_6954: Tensor[(1, 11, 7), float32]) -> Tensor[(1, 11, 7), float32] {
  @func_6953(%var_6954) /* ty=Tensor[(1, 11, 7), float32] */
}

def @func_553(%var_550: int16, %var_551: Tensor[(1, 160), float32], %var_552: Tensor[(13, 160), float32]) -> (Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) {
  %845 = fn (%var_501: int16, %var_513: Tensor[(1, 160), float32], %var_537: Tensor[(13, 160), float32]) -> (Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) {
    %829 = cast(%var_501, dtype="int16") /* ty=int16 */;
    %830 = cast(meta[relay.Constant][60] /* ty=Tensor[(14, 14, 16), int16] */, dtype="int16") /* ty=Tensor[(14, 14, 16), int16] */;
    %831 = cast(%var_513, dtype="float32") /* ty=Tensor[(1, 160), float32] */;
    %832 = reshape(%831, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
    %833 = @func_375(%832) /* ty=(Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) */;
    %834 = cast(%var_513, dtype="float32") /* ty=Tensor[(1, 160), float32] */;
    %835 = reshape(%834, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float32] */;
    %836 = @func_375(%835) /* ty=(Tensor[(10, 16, 1), float32], Tensor[(10, 16, 5), int32]) */;
    %837 = cast(%var_513, dtype="uint32") /* ty=Tensor[(1, 160), uint32] */;
    %838 = cast(%var_537, dtype="uint32") /* ty=Tensor[(13, 160), uint32] */;
    %839 = bitwise_xor(%837, %838) /* ty=Tensor[(13, 160), uint32] */;
    %840 = cast(%839, dtype="float32") /* ty=Tensor[(13, 160), float32] */;
    %841 = bitwise_or(%829, %830) /* ty=Tensor[(14, 14, 16), int16] */;
    %842 = %833.1;
    %843 = %836.0;
    %844 = sinh(%840) /* ty=Tensor[(13, 160), float32] */;
    (%841, %842, %843, %844)
  };
  %845(%var_550, %var_551, %var_552) /* ty=(Tensor[(14, 14, 16), int16], Tensor[(10, 16, 5), int32], Tensor[(10, 16, 1), float32], Tensor[(13, 160), float32]) */
}

def @func_5080(%var_5074: Tensor[(2, 4, 12), uint64]) -> (Tensor[(2, 4, 12), uint64],) {
  %846 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 4, 12), uint64] */, dtype="uint64") /* ty=Tensor[(2, 4, 12), uint64] */;
  %847 = shape_of(%var_5074, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%var_5074, dtype="uint64") /* ty=Tensor[(2, 4, 12), uint64] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %850 = left_shift(%848, %849) /* ty=Tensor[(2, 4, 12), uint64] */;
  (%850,)
}

def @func_10079(%var_10076: Tensor[(16, 11, 11), float32], %var_10077: Tensor[(60), float64], %var_10078: Tensor[(126, 1), int16]) -> (Tensor[(16, 11, 11), bool], Tensor[(6, 2, 5), int16], Tensor[(60), float64], Tensor[(192), float64], Tensor[(126, 1), int16], Tensor[(2496), int32]) {
  @func_10074(%var_10076, %var_10077, %var_10078) /* ty=(Tensor[(16, 11, 11), bool], Tensor[(6, 2, 5), int16], Tensor[(60), float64], Tensor[(192), float64], Tensor[(126, 1), int16], Tensor[(2496), int32]) */
}

def @func_4387(%var_4378: Tensor[(14, 14, 5), int32]) -> Tensor[(14, 14, 5), bool] {
  %851 = cast(meta[relay.Constant][62] /* ty=Tensor[(14, 14, 5), int32] */, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %852 = shape_of(%var_4378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%var_4378, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%853, %854) /* ty=Tensor[(14, 14, 5), bool] */
}

def @func_4367(%var_4366: Tensor[(16, 12, 13), int32]) -> (Tensor[(16, 12, 13), int32],) {
  %860 = fn (%var_4361: Tensor[(16, 12, 13), int32]) -> (Tensor[(16, 12, 13), int32],) {
    %855 = cast(%var_4361, dtype="int32") /* ty=Tensor[(16, 12, 13), int32] */;
    %856 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(16, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %857 = cast(meta[relay.Constant][63] /* ty=Tensor[(16, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(16, 12, 13), int32] */;
    %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %859 = subtract(%857, %858) /* ty=Tensor[(16, 12, 13), int32] */;
    (%859,)
  };
  %860(%var_4366) /* ty=(Tensor[(16, 12, 13), int32],) */
}

def @func_10589() -> (Tensor[(16, 11, 11), float32],) {
  @func_10587() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_10916(%var_10914: Tensor[(32), float64], %var_10915: Tensor[(192), float64]) -> (Tensor[(16, 11, 11), float32], Tensor[(16, 3, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192), float64]) {
  %873 = fn (%var_10907: Tensor[(32), float64], %var_10909: Tensor[(192), float64]) -> (Tensor[(16, 11, 11), float32], Tensor[(16, 3, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192), float64]) {
    %861 = @func_10572() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 11, 11), float32]) */;
    %862 = cast(%var_10907, dtype="float64") /* ty=Tensor[(32), float64] */;
    %863 = cast(meta[relay.Constant][64] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
    %864 = cast(%var_10909, dtype="float64") /* ty=Tensor[(192), float64] */;
    %865 = cast(%var_10907, dtype="float64") /* ty=Tensor[(32), float64] */;
    %866 = reshape(%862, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
    %867 = reshape(%863, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
    %868 = reshape(%864, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %869 = reshape(%865, newshape=[4, 2, 4]) /* ty=Tensor[(4, 2, 4), float64] */;
    %870 = @func_949(%866, %867, %868, %869) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 14, 16), int16], int16, Tensor[(160), float32], Tensor[(2080), float32], Tensor[(16, 3, 4), float64], Tensor[(192), float64], Tensor[(10, 16, 5), int32], int16, Tensor[(1320), uint8], Tensor[(4, 2, 4), int16]) */;
    %871 = %861.0;
    %872 = %870.5;
    (%871, %872, %var_10907, meta[relay.Constant][64] /* ty=Tensor[(2080), float32] */, %var_10909)
  };
  %873(%var_10914, %var_10915) /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 3, 4), float64], Tensor[(32), float64], Tensor[(2080), float32], Tensor[(192), float64]) */
}

def @func_10167() -> Tensor[(16, 11, 11), float32] {
  %874 = fn () -> Tensor[(16, 11, 11), float32] {
    @func_8830() /* ty=Tensor[(16, 11, 11), float32] */
  };
  %874() /* ty=Tensor[(16, 11, 11), float32] */
}

def @func_10573() -> (Tensor[(16, 11, 11), float32], Tensor[(16, 11, 11), float32]) {
  %879 = fn () -> (Tensor[(16, 11, 11), float32], Tensor[(16, 11, 11), float32]) {
    %875 = @func_9173() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %876 = @func_10294() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %877 = %875.0;
    %878 = %876.0;
    (%877, %878)
  };
  %879() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(16, 11, 11), float32]) */
}

def @func_3227(%var_3221: Tensor[(6, 2, 5), float32]) -> (Tensor[(6, 2, 5), float32],) {
  %880 = cast(%var_3221, dtype="float32") /* ty=Tensor[(6, 2, 5), float32] */;
  %881 = rsqrt(%880) /* ty=Tensor[(6, 2, 5), float32] */;
  (%881,)
}

def @func_4390(%var_4388: Tensor[(14, 14, 5), int32]) -> Tensor[(14, 14, 5), bool] {
  @func_4387(%var_4388) /* ty=Tensor[(14, 14, 5), bool] */
}

def @func_3350(%var_3349: Tensor[(11, 10, 1), float64]) -> Tensor[(11, 10, 11), float64] {
  %884 = fn (%var_3341: Tensor[(11, 10, 1), float64]) -> Tensor[(11, 10, 11), float64] {
    %882 = cast(%var_3341, dtype="float64") /* ty=Tensor[(11, 10, 1), float64] */;
    %883 = cast(meta[relay.Constant][65] /* ty=Tensor[(11, 10, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 10, 11), float64] */;
    add(%882, %883) /* ty=Tensor[(11, 10, 11), float64] */
  };
  %884(%var_3349) /* ty=Tensor[(11, 10, 11), float64] */
}

def @func_8229() -> (Tensor[(16, 11, 11), float32],) {
  %885 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %886 = %885.0;
  (%886,)
}

def @func_9930() -> Tensor[(60), float32] {
  @func_9928() /* ty=Tensor[(60), float32] */
}

def @func_8137(%var_8098: Tensor[(4, 5, 12), float32]) -> (Tensor[(9, 2, 7), int16], Tensor[(21, 6), int16], Tensor[(4, 5, 12), bool]) {
  %887 = cast(meta[relay.Constant][66] /* ty=Tensor[(21, 6), int16] */, dtype="int16") /* ty=Tensor[(21, 6), int16] */;
  %888 = cast(meta[relay.Constant][66] /* ty=Tensor[(21, 6), int16] */, dtype="int16") /* ty=Tensor[(21, 6), int16] */;
  %889 = reshape(%887, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %890 = reshape(%888, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %891 = cast(%var_8098, dtype="float32") /* ty=Tensor[(4, 5, 12), float32] */;
  %892 = sin(%891) /* ty=Tensor[(4, 5, 12), float32] */;
  %893 = cast(%var_8098, dtype="bool") /* ty=Tensor[(4, 5, 12), bool] */;
  %894 = shape_of(%892, dtype="int32") /* ty=Tensor[(3), int32] */;
  %895 = cast(%892, dtype="bool") /* ty=Tensor[(4, 5, 12), bool] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %897 = @func_7722(%889, %890) /* ty=Tensor[(9, 2, 7), int16] */;
  %898 = equal(%895, %896) /* ty=Tensor[(4, 5, 12), bool] */;
  (%897, meta[relay.Constant][66] /* ty=Tensor[(21, 6), int16] */, %898)
}

def @func_6478(%var_6476: uint32, %var_6477: Tensor[(160), float32]) -> (Tensor[(14, 14, 5), bool], Tensor[(980), int32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 1, 4), int64], Tensor[(15, ?, 4), bool], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) {
  %925 = fn (%var_6391: uint32, %var_6449: Tensor[(160), float32]) -> (Tensor[(14, 14, 5), bool], Tensor[(980), int32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 1, 4), int64], Tensor[(15, ?, 4), bool], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) {
    %899 = cast(meta[relay.Constant][67] /* ty=Tensor[(980), int32] */, dtype="int32") /* ty=Tensor[(980), int32] */;
    %900 = reshape(%899, newshape=[14, 14, 5]) /* ty=Tensor[(14, 14, 5), int32] */;
    %901 = cast(meta[relay.Constant][68] /* ty=Tensor[(1183), int32] */, dtype="int32") /* ty=Tensor[(1183), int32] */;
    %902 = cast(meta[relay.Constant][68] /* ty=Tensor[(1183), int32] */, dtype="int32") /* ty=Tensor[(1183), int32] */;
    %903 = reshape(%901, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
    %904 = reshape(%902, newshape=[13, 7, 13]) /* ty=Tensor[(13, 7, 13), int32] */;
    %905 = @func_2873(%903, %904) /* ty=(Tensor[(13, 7, 13), int32],) */;
    %906 = cast(%var_6391, dtype="uint32") /* ty=uint32 */;
    %907 = cast(meta[relay.Constant][69] /* ty=Tensor[(15, 1, 4), uint32] */, dtype="uint32") /* ty=Tensor[(15, 1, 4), uint32] */;
    %908 = logical_xor(%906, %907) /* ty=Tensor[(15, 1, 4), uint32] */;
    %909 = cast(%908, dtype="int64") /* ty=Tensor[(15, 1, 4), int64] */;
    %910 = cast(%var_6391, dtype="int64") /* ty=int64 */;
    %911 = cast(meta[relay.Constant][69] /* ty=Tensor[(15, 1, 4), uint32] */, dtype="bool") /* ty=Tensor[(15, 1, 4), bool] */;
    %912 = shape_of(%908, dtype="int32") /* ty=Tensor[(3), int32] */;
    %913 = cast(%908, dtype="bool") /* ty=Tensor[(15, 1, 4), bool] */;
    %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %915 = cast(%var_6449, dtype="float32") /* ty=Tensor[(160), float32] */;
    %916 = cast(meta[relay.Constant][70] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %917 = reshape(%915, newshape=[4, 40]) /* ty=Tensor[(4, 40), float32] */;
    %918 = reshape(%916, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
    %919 = @func_618(%917, %918) /* ty=(Tensor[(16, 3, 4), float64], Tensor[(10, 16, 5), int32], Tensor[(4, 40), float32], Tensor[(16, 3, 4), bool], Tensor[(16, 3, 4), float64]) */;
    %920 = @func_4387(%900) /* ty=Tensor[(14, 14, 5), bool] */;
    %921 = %905.0;
    %922 = bitwise_and(%909, %910) /* ty=Tensor[(15, 1, 4), int64] */;
    %923 = greater(%913, %914) /* ty=Tensor[(15, ?, 4), bool] */;
    %924 = %919.4;
    (%920, meta[relay.Constant][67] /* ty=Tensor[(980), int32] */, %921, meta[relay.Constant][68] /* ty=Tensor[(1183), int32] */, %922, %923, %924, %var_6449, meta[relay.Constant][70] /* ty=Tensor[(192), float64] */)
  };
  %925(%var_6476, %var_6477) /* ty=(Tensor[(14, 14, 5), bool], Tensor[(980), int32], Tensor[(13, 7, 13), int32], Tensor[(1183), int32], Tensor[(15, 1, 4), int64], Tensor[(15, ?, 4), bool], Tensor[(16, 3, 4), float64], Tensor[(160), float32], Tensor[(192), float64]) */
}

def @func_8934() -> (Tensor[(60), float32], Tensor[(16, 11, 11), float32]) {
  %930 = fn () -> (Tensor[(60), float32], Tensor[(16, 11, 11), float32]) {
    %926 = @func_8190() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */;
    %927 = @func_8207() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %928 = %926.2;
    %929 = %927.0;
    (%928, %929)
  };
  %930() /* ty=(Tensor[(60), float32], Tensor[(16, 11, 11), float32]) */
}

def @func_9174() -> (Tensor[(16, 11, 11), float32],) {
  %932 = fn () -> (Tensor[(16, 11, 11), float32],) {
    %931 = @func_8075() /* ty=Tensor[(16, 11, 11), float32] */;
    (%931,)
  };
  %932() /* ty=(Tensor[(16, 11, 11), float32],) */
}

def @func_9614() -> Tensor[(16, 11, 11), float32] {
  %933 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
  %933.0
}

def @func_8191() -> (Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) {
  %940 = fn () -> (Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) {
    %934 = @func_7735() /* ty=(Tensor[(16, 11, 11), float32],) */;
    %935 = cast(meta[relay.Constant][71] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %936 = reshape(%935, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), float32] */;
    %937 = @func_3227(%936) /* ty=(Tensor[(6, 2, 5), float32],) */;
    %938 = %934.0;
    %939 = %937.0;
    (%938, %939, meta[relay.Constant][71] /* ty=Tensor[(60), float32] */)
  };
  %940() /* ty=(Tensor[(16, 11, 11), float32], Tensor[(6, 2, 5), float32], Tensor[(60), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_37 = relay.var("var_37", dtype = "float64", shape = (10, 10, 16))#candidate|37|(10, 10, 16)|var|float64
uop_38 = relay.cos(var_37.astype('float64')) # shape=(10, 10, 16)
bop_63 = relay.less_equal(var_37.astype('bool'), relay.reshape(uop_38.astype('bool'), relay.shape_of(var_37))) # shape=(10, 10, 16)
output = relay.Tuple([bop_63,])
output2 = relay.Tuple([bop_63,])
func_66 = relay.Function([var_37,], output)
mod['func_66'] = func_66
mod = relay.transform.InferType()(mod)
mutated_mod['func_66'] = func_66
mutated_mod = relay.transform.InferType()(mutated_mod)
var_67 = relay.var("var_67", dtype = "float64", shape = (10, 10, 16))#candidate|67|(10, 10, 16)|var|float64
func_66_call = mutated_mod.get_global_var('func_66')
call_68 = func_66_call(var_67)
output = call_68
func_69 = relay.Function([var_67], output)
mutated_mod['func_69'] = func_69
mutated_mod = relay.transform.InferType()(mutated_mod)
const_114 = relay.const([[[-5,4,9,3,-7,8,-8,10,4,-6],[9,-10,-9,-9,-2,-10,-7,4,8,-7],[-6,7,-6,5,10,2,7,2,-7,-4],[-5,8,1,-1,1,-3,5,-3,9,-8],[1,10,3,3,4,-9,-2,-2,-10,1]],[[3,10,-6,-6,3,3,5,2,-7,10],[-10,10,-7,-4,-7,10,-1,-7,-5,1],[6,-2,9,-1,-8,-8,9,10,-2,2],[-1,9,-3,8,-9,8,3,8,-3,-10],[9,9,6,3,6,-9,-10,-7,-5,2]],[[4,-1,9,10,-10,3,8,9,-3,-4],[-10,4,-1,2,7,-2,-4,-7,2,-5],[8,2,-9,-2,5,-1,-10,4,7,-1],[-10,5,-6,6,-2,2,10,7,-7,4],[-8,-7,-2,-2,-7,-5,-8,2,5,-3]],[[1,-6,-1,2,4,10,-3,-10,7,3],[-7,-2,9,10,-4,-10,8,7,10,9],[-7,6,7,-4,10,-10,-6,-3,-8,10],[3,8,9,-5,7,5,-5,6,6,6],[-7,-2,-1,-9,-5,-1,-2,-4,-4,-10]],[[-2,-7,-5,-9,-4,5,-3,6,2,-1],[8,-7,-10,-9,-7,9,5,8,-10,-9],[4,-6,2,9,9,3,3,-8,-9,9],[-8,-9,6,-3,4,1,-9,-3,2,7],[1,9,-7,6,3,-6,-6,8,-10,-10]],[[-4,-2,-9,5,6,-3,9,-2,-10,-6],[8,8,7,-7,6,3,8,4,-10,-3],[9,5,9,-8,-10,1,-6,-1,2,10],[-5,9,-8,-5,10,-5,3,8,-1,-8],[-1,-6,-10,10,5,2,-4,-5,2,1]]], dtype = "int64")#candidate|114|(6, 5, 10)|const|int64
const_115 = relay.const([[[-7,9,7,-10,8,-4,-7,-7,1,10],[10,-6,5,-3,9,2,4,-4,9,6],[5,6,-2,-7,-4,-4,-6,7,8,8],[3,-3,-9,-7,-2,8,3,-9,10,8],[1,-10,-4,-8,8,-2,-6,-7,-6,5]],[[-7,7,-8,5,-2,-2,8,-10,3,-7],[-6,2,-7,-6,3,-1,4,-2,-4,-10],[3,9,-8,-4,-1,-9,-1,8,10,-1],[7,7,1,4,6,2,-8,1,-2,-4],[-5,9,-6,3,4,2,7,-1,-7,-4]],[[8,4,-8,9,-9,2,-8,9,-1,1],[-8,5,2,-4,2,4,5,-6,-5,3],[-10,8,-8,-3,1,4,-8,-7,-6,1],[-10,-10,7,7,2,5,-5,-1,2,-1],[9,4,-4,-2,-3,-10,10,-7,-5,8]],[[-4,-9,-8,9,-4,4,-6,5,-1,-10],[-9,-7,-10,3,-9,-3,4,2,-4,-1],[-3,-4,-5,-9,-5,3,1,1,6,-9],[7,-10,7,2,-2,10,9,-4,-2,-5],[4,-10,-9,8,-7,10,2,4,1,9]],[[-10,-1,-2,7,8,2,9,-6,-3,2],[3,3,-4,-5,2,10,-4,2,4,1],[-1,-5,-4,-9,-7,-6,-6,8,-5,-7],[-8,8,-6,9,2,-5,4,5,2,7],[-6,-4,2,-4,-4,4,6,5,4,5]],[[3,-1,9,-6,-10,2,6,10,-7,-4],[5,-4,-2,4,-2,-4,-8,-3,8,10],[10,6,10,-3,10,8,5,-6,-1,-5],[-1,8,-1,-8,8,-1,-4,4,4,-10],[5,10,2,-9,8,5,-2,-7,-4,3]]], dtype = "int64")#candidate|115|(6, 5, 10)|const|int64
bop_116 = relay.bitwise_xor(const_114.astype('int64'), relay.reshape(const_115.astype('int64'), relay.shape_of(const_114))) # shape=(6, 5, 10)
output = relay.Tuple([bop_116,])
output2 = relay.Tuple([bop_116,])
func_120 = relay.Function([], output)
mod['func_120'] = func_120
mod = relay.transform.InferType()(mod)
mutated_mod['func_120'] = func_120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mutated_mod.get_global_var('func_120')
call_121 = func_120_call()
output = call_121
func_122 = relay.Function([], output)
mutated_mod['func_122'] = func_122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_170 = relay.TupleGetItem(func_120_call(), 0)
call_171 = relay.TupleGetItem(func_122_call(), 0)
func_66_call = mod.get_global_var('func_66')
func_69_call = mutated_mod.get_global_var('func_69')
var_175 = relay.var("var_175", dtype = "float64", shape = (1600,))#candidate|175|(1600,)|var|float64
call_174 = relay.TupleGetItem(func_66_call(relay.reshape(var_175.astype('float64'), [10, 10, 16])), 0)
call_176 = relay.TupleGetItem(func_69_call(relay.reshape(var_175.astype('float64'), [10, 10, 16])), 0)
func_66_call = mod.get_global_var('func_66')
func_69_call = mutated_mod.get_global_var('func_69')
call_187 = relay.TupleGetItem(func_66_call(relay.reshape(var_175.astype('float64'), [10, 10, 16])), 0)
call_188 = relay.TupleGetItem(func_69_call(relay.reshape(var_175.astype('float64'), [10, 10, 16])), 0)
bop_208 = relay.maximum(var_175.astype('int16'), relay.reshape(call_174.astype('int16'), relay.shape_of(var_175))) # shape=(1600,)
bop_211 = relay.maximum(var_175.astype('int16'), relay.reshape(call_176.astype('int16'), relay.shape_of(var_175))) # shape=(1600,)
output = relay.Tuple([call_170,call_187,bop_208,])
output2 = relay.Tuple([call_171,call_188,bop_211,])
func_218 = relay.Function([var_175,], output)
mod['func_218'] = func_218
mod = relay.transform.InferType()(mod)
var_219 = relay.var("var_219", dtype = "float64", shape = (1600,))#candidate|219|(1600,)|var|float64
output = func_218(var_219)
func_220 = relay.Function([var_219], output)
mutated_mod['func_220'] = func_220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_274 = relay.TupleGetItem(func_120_call(), 0)
call_275 = relay.TupleGetItem(func_122_call(), 0)
func_66_call = mod.get_global_var('func_66')
func_69_call = mutated_mod.get_global_var('func_69')
var_281 = relay.var("var_281", dtype = "float64", shape = (20, 80))#candidate|281|(20, 80)|var|float64
call_280 = relay.TupleGetItem(func_66_call(relay.reshape(var_281.astype('float64'), [10, 10, 16])), 0)
call_282 = relay.TupleGetItem(func_69_call(relay.reshape(var_281.astype('float64'), [10, 10, 16])), 0)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
call_285 = relay.TupleGetItem(func_218_call(relay.reshape(call_280.astype('float64'), [1600,])), 1)
call_286 = relay.TupleGetItem(func_220_call(relay.reshape(call_280.astype('float64'), [1600,])), 1)
bop_292 = relay.power(var_281.astype('float32'), relay.reshape(call_280.astype('float32'), relay.shape_of(var_281))) # shape=(20, 80)
bop_295 = relay.power(var_281.astype('float32'), relay.reshape(call_282.astype('float32'), relay.shape_of(var_281))) # shape=(20, 80)
output = relay.Tuple([call_274,call_285,bop_292,])
output2 = relay.Tuple([call_275,call_286,bop_295,])
func_296 = relay.Function([var_281,], output)
mod['func_296'] = func_296
mod = relay.transform.InferType()(mod)
mutated_mod['func_296'] = func_296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_297 = relay.var("var_297", dtype = "float64", shape = (20, 80))#candidate|297|(20, 80)|var|float64
func_296_call = mutated_mod.get_global_var('func_296')
call_298 = func_296_call(var_297)
output = call_298
func_299 = relay.Function([var_297], output)
mutated_mod['func_299'] = func_299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_329 = relay.var("var_329", dtype = "uint64", shape = (15, 3, 11))#candidate|329|(15, 3, 11)|var|uint64
var_330 = relay.var("var_330", dtype = "uint64", shape = (15, 3, 11))#candidate|330|(15, 3, 11)|var|uint64
bop_331 = relay.bitwise_or(var_329.astype('uint64'), relay.reshape(var_330.astype('uint64'), relay.shape_of(var_329))) # shape=(15, 3, 11)
bop_347 = relay.subtract(var_330.astype('int16'), relay.reshape(bop_331.astype('int16'), relay.shape_of(var_330))) # shape=(15, 3, 11)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
var_355 = relay.var("var_355", dtype = "float64", shape = (1600,))#candidate|355|(1600,)|var|float64
call_354 = relay.TupleGetItem(func_218_call(relay.reshape(var_355.astype('float64'), [1600,])), 2)
call_356 = relay.TupleGetItem(func_220_call(relay.reshape(var_355.astype('float64'), [1600,])), 2)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
call_381 = relay.TupleGetItem(func_218_call(relay.reshape(call_354.astype('float64'), [1600,])), 0)
call_382 = relay.TupleGetItem(func_220_call(relay.reshape(call_354.astype('float64'), [1600,])), 0)
bop_388 = relay.left_shift(bop_347.astype('int8'), relay.reshape(bop_331.astype('int8'), relay.shape_of(bop_347))) # shape=(15, 3, 11)
var_400 = relay.var("var_400", dtype = "int16", shape = (1600,))#candidate|400|(1600,)|var|int16
bop_401 = relay.subtract(call_354.astype('uint16'), relay.reshape(var_400.astype('uint16'), relay.shape_of(call_354))) # shape=(1600,)
bop_404 = relay.subtract(call_356.astype('uint16'), relay.reshape(var_400.astype('uint16'), relay.shape_of(call_356))) # shape=(1600,)
func_66_call = mod.get_global_var('func_66')
func_69_call = mutated_mod.get_global_var('func_69')
call_407 = relay.TupleGetItem(func_66_call(relay.reshape(var_355.astype('float64'), [10, 10, 16])), 0)
call_408 = relay.TupleGetItem(func_69_call(relay.reshape(var_355.astype('float64'), [10, 10, 16])), 0)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
call_409 = relay.TupleGetItem(func_218_call(relay.reshape(var_400.astype('float64'), [1600,])), 0)
call_410 = relay.TupleGetItem(func_220_call(relay.reshape(var_400.astype('float64'), [1600,])), 0)
output = relay.Tuple([var_355,call_381,bop_388,bop_401,call_407,call_409,])
output2 = relay.Tuple([var_355,call_382,bop_388,bop_404,call_408,call_410,])
func_412 = relay.Function([var_329,var_330,var_355,var_400,], output)
mod['func_412'] = func_412
mod = relay.transform.InferType()(mod)
mutated_mod['func_412'] = func_412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_412_call = mutated_mod.get_global_var('func_412')
var_414 = relay.var("var_414", dtype = "uint64", shape = (15, 3, 11))#candidate|414|(15, 3, 11)|var|uint64
var_415 = relay.var("var_415", dtype = "uint64", shape = (15, 3, 11))#candidate|415|(15, 3, 11)|var|uint64
var_416 = relay.var("var_416", dtype = "float64", shape = (1600,))#candidate|416|(1600,)|var|float64
var_417 = relay.var("var_417", dtype = "int16", shape = (1600,))#candidate|417|(1600,)|var|int16
call_413 = func_412_call(var_414,var_415,var_416,var_417,)
output = call_413
func_418 = relay.Function([var_414,var_415,var_416,var_417,], output)
mutated_mod['func_418'] = func_418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_462 = relay.TupleGetItem(func_120_call(), 0)
call_463 = relay.TupleGetItem(func_122_call(), 0)
output = call_462
output2 = call_463
func_482 = relay.Function([], output)
mod['func_482'] = func_482
mod = relay.transform.InferType()(mod)
output = func_482()
func_483 = relay.Function([], output)
mutated_mod['func_483'] = func_483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_482_call = mod.get_global_var('func_482')
func_483_call = mutated_mod.get_global_var('func_483')
call_489 = func_482_call()
call_490 = func_482_call()
uop_501 = relay.asinh(call_489.astype('float32')) # shape=(6, 5, 10)
uop_503 = relay.asinh(call_490.astype('float32')) # shape=(6, 5, 10)
func_412_call = mod.get_global_var('func_412')
func_418_call = mutated_mod.get_global_var('func_418')
var_509 = relay.var("var_509", dtype = "uint64", shape = (495,))#candidate|509|(495,)|var|uint64
var_510 = relay.var("var_510", dtype = "float64", shape = (1600,))#candidate|510|(1600,)|var|float64
call_508 = relay.TupleGetItem(func_412_call(relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_510.astype('float64'), [1600,]), relay.reshape(var_510.astype('int16'), [1600,]), ), 5)
call_511 = relay.TupleGetItem(func_418_call(relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_510.astype('float64'), [1600,]), relay.reshape(var_510.astype('int16'), [1600,]), ), 5)
uop_515 = relay.atanh(uop_501.astype('float64')) # shape=(6, 5, 10)
uop_517 = relay.atanh(uop_503.astype('float64')) # shape=(6, 5, 10)
func_296_call = mod.get_global_var('func_296')
func_299_call = mutated_mod.get_global_var('func_299')
call_518 = relay.TupleGetItem(func_296_call(relay.reshape(var_510.astype('float64'), [20, 80])), 2)
call_519 = relay.TupleGetItem(func_299_call(relay.reshape(var_510.astype('float64'), [20, 80])), 2)
uop_524 = relay.rsqrt(uop_501.astype('float32')) # shape=(6, 5, 10)
uop_526 = relay.rsqrt(uop_503.astype('float32')) # shape=(6, 5, 10)
func_412_call = mod.get_global_var('func_412')
func_418_call = mutated_mod.get_global_var('func_418')
call_529 = relay.TupleGetItem(func_412_call(relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(call_518.astype('float64'), [1600,]), relay.reshape(var_510.astype('int16'), [1600,]), ), 4)
call_530 = relay.TupleGetItem(func_418_call(relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(call_518.astype('float64'), [1600,]), relay.reshape(var_510.astype('int16'), [1600,]), ), 4)
func_412_call = mod.get_global_var('func_412')
func_418_call = mutated_mod.get_global_var('func_418')
call_535 = relay.TupleGetItem(func_412_call(relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(call_529.astype('float64'), [1600,]), relay.reshape(call_518.astype('int16'), [1600,]), ), 4)
call_536 = relay.TupleGetItem(func_418_call(relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(call_529.astype('float64'), [1600,]), relay.reshape(call_518.astype('int16'), [1600,]), ), 4)
uop_544 = relay.sin(uop_524.astype('float64')) # shape=(6, 5, 10)
uop_546 = relay.sin(uop_526.astype('float64')) # shape=(6, 5, 10)
func_412_call = mod.get_global_var('func_412')
func_418_call = mutated_mod.get_global_var('func_418')
call_548 = relay.TupleGetItem(func_412_call(relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_510.astype('float64'), [1600,]), relay.reshape(call_518.astype('int16'), [1600,]), ), 2)
call_549 = relay.TupleGetItem(func_418_call(relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_509.astype('uint64'), [15, 3, 11]), relay.reshape(var_510.astype('float64'), [1600,]), relay.reshape(call_518.astype('int16'), [1600,]), ), 2)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_552 = relay.TupleGetItem(func_120_call(), 0)
call_553 = relay.TupleGetItem(func_122_call(), 0)
output = relay.Tuple([call_508,var_509,var_510,uop_515,call_518,call_529,call_535,uop_544,call_548,call_552,])
output2 = relay.Tuple([call_511,var_509,var_510,uop_517,call_519,call_530,call_536,uop_546,call_549,call_553,])
func_559 = relay.Function([var_509,var_510,], output)
mod['func_559'] = func_559
mod = relay.transform.InferType()(mod)
mutated_mod['func_559'] = func_559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_559_call = mutated_mod.get_global_var('func_559')
var_561 = relay.var("var_561", dtype = "uint64", shape = (495,))#candidate|561|(495,)|var|uint64
var_562 = relay.var("var_562", dtype = "float64", shape = (1600,))#candidate|562|(1600,)|var|float64
call_560 = func_559_call(var_561,var_562,)
output = call_560
func_563 = relay.Function([var_561,var_562,], output)
mutated_mod['func_563'] = func_563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_576 = relay.TupleGetItem(func_120_call(), 0)
call_577 = relay.TupleGetItem(func_122_call(), 0)
uop_584 = relay.cos(call_576.astype('float64')) # shape=(6, 5, 10)
uop_586 = relay.cos(call_577.astype('float64')) # shape=(6, 5, 10)
bop_599 = relay.logical_and(uop_584.astype('bool'), relay.reshape(call_576.astype('bool'), relay.shape_of(uop_584))) # shape=(6, 5, 10)
bop_602 = relay.logical_and(uop_586.astype('bool'), relay.reshape(call_577.astype('bool'), relay.shape_of(uop_586))) # shape=(6, 5, 10)
uop_604 = relay.acos(call_576.astype('float32')) # shape=(6, 5, 10)
uop_606 = relay.acos(call_577.astype('float32')) # shape=(6, 5, 10)
uop_619 = relay.asin(uop_584.astype('float32')) # shape=(6, 5, 10)
uop_621 = relay.asin(uop_586.astype('float32')) # shape=(6, 5, 10)
func_296_call = mod.get_global_var('func_296')
func_299_call = mutated_mod.get_global_var('func_299')
const_634 = relay.const([[5.407409,-6.022765,-5.456763,0.352563,2.500364,1.210959,-0.910447,-3.139934,2.431447,7.563345,4.841842,-6.497674,5.244658,0.302195,-0.026198,-0.701279,9.215718,1.276381,8.566660,-0.845123,-6.147494,-2.334782,9.363225,1.418612,0.977333,-4.670487,-5.514664,6.768835,-9.990507,-6.182459,-9.444733,2.726482,7.818638,5.865086,6.445539,6.035118,5.590950,-4.802638,0.706082,4.034568,-6.459181,4.323291,-5.573075,1.577079,4.721569,3.073818,-5.590699,1.186023,-2.048280,-0.890924,-6.798091,7.692233,-2.810169,-9.275623,4.972461,-2.399165,6.351388,-8.894363,-1.051421,8.587090,7.017333,6.914488,0.251159,2.785585,6.526965,9.251920,-9.238069,2.737825,-6.833844,-4.152651,-8.451663,4.153337,-1.006119,8.335092,3.422803,-5.691086,-5.930492,2.977039,-3.581790,4.031531],[-9.238171,-5.505436,3.802471,3.494247,4.081011,4.453146,-0.467206,-8.442006,-6.229220,-7.299897,-1.923497,5.047937,-4.325647,-8.378842,7.635945,3.586234,-4.622886,-1.108038,4.933775,9.813597,3.261849,-6.545665,5.524695,-6.001208,7.981783,-9.934115,8.428491,-7.552151,-7.737968,8.665248,-3.995618,7.072725,-2.512499,-8.905439,-3.882285,-8.002960,-3.234871,3.320020,6.074729,2.436209,-8.245861,-2.283320,3.873015,-2.674666,5.162336,-0.078056,-1.565142,-3.271163,5.743457,-5.402310,-2.913984,-9.763284,-4.388105,2.836469,5.530884,-3.569843,-9.319946,-8.676619,7.900161,2.248598,-2.253055,-3.506435,2.837769,7.981640,8.219045,-8.904325,-5.561835,-6.118797,2.090881,7.653228,-5.565509,-7.675232,-7.413225,3.035016,4.001047,4.783068,-6.858303,-2.985158,-4.466712,-6.205899],[-2.026747,-5.236014,4.715873,6.273084,-1.356161,-9.879511,-8.618171,5.602489,5.623259,-6.359431,0.756935,-5.384135,4.222274,9.407586,-3.989643,3.392121,7.871545,1.240544,-5.662486,2.347528,0.432743,5.659842,-2.870744,8.250702,5.884600,1.342782,0.186525,-8.263137,-4.709234,-9.873623,-9.627784,2.243401,5.975955,-0.764693,3.907054,-2.624734,9.258182,-0.243360,-2.072589,1.548001,0.079743,-3.273597,-6.922935,8.379559,6.573576,7.298909,0.978138,8.902965,-5.888994,-5.463122,7.674379,-8.635701,5.287574,-1.911039,-9.602660,6.744652,-2.390398,-7.095191,6.369120,-2.323945,-0.040588,-6.494169,-1.318733,-8.496350,0.404080,8.281218,-8.697412,-8.469029,-9.528030,8.811047,-2.417905,0.858170,2.670647,-7.444090,2.973552,0.765638,-3.310199,-9.828836,2.959107,1.854510],[6.443669,5.188008,1.476542,8.006745,-1.893869,-5.875037,-9.716260,-2.969500,-0.945591,-7.230688,3.666723,0.325151,1.808527,-1.676606,-9.173651,0.958543,-0.275314,4.876535,-2.886621,-2.246321,-2.357504,-4.275559,-5.800680,-1.304467,5.182961,-7.381098,-3.553600,-0.712628,3.604891,-2.228865,7.390157,-8.404812,-6.045005,5.603681,-1.500106,8.699518,-3.766721,0.493062,-7.272510,3.022968,-3.622096,-2.860970,1.383117,-6.554377,-3.510803,4.495521,0.479021,1.077994,7.025155,-5.959876,-2.550067,-8.525108,4.165781,4.215088,1.964588,6.545566,5.281780,-5.025204,3.633839,9.626690,7.784887,8.377386,-7.167283,-5.097567,0.987683,-5.139161,6.780688,-3.841853,-4.876088,-7.193520,1.923067,-0.640199,-3.462757,0.364701,8.680133,2.645081,1.470489,2.073610,2.609375,-5.211929],[1.491203,4.109001,6.378960,0.569622,1.242361,-7.622097,-3.673690,4.647417,6.051314,-2.830746,-9.731811,-1.226923,-9.132998,4.328034,5.595073,-6.807899,-0.139028,3.457515,4.866472,-4.666320,4.414609,4.394611,4.669380,-2.158517,-2.988568,3.795697,-3.774471,-6.550195,-1.968945,-4.867036,3.457118,-5.572096,-6.448587,-5.495711,-6.054887,0.917460,5.642275,4.067695,5.229001,8.740485,-0.400269,-4.608594,-1.118326,3.544333,2.003608,5.113979,-5.605248,-2.386366,5.249460,2.237393,0.928175,1.105636,5.880945,8.682846,-8.474359,-0.468724,-6.789032,4.731346,-5.278730,7.201559,4.191732,-5.290969,-6.843387,-9.552442,6.048266,2.484023,-1.802204,2.668788,-8.194833,6.432434,-5.387317,4.415602,-6.057111,5.518758,-6.534313,-7.161425,7.955800,7.778920,-4.682846,-2.320097],[3.762935,-3.228558,-1.205317,-6.480292,2.365176,-0.557084,5.396251,-7.084920,-3.222237,-5.363960,-3.236708,-8.126156,-4.424674,7.716118,-9.905437,-0.465569,0.033878,8.461103,8.777926,-6.237765,6.553844,-8.502128,0.499129,0.580481,-8.123897,-7.753321,-6.420681,6.629398,-7.852143,3.259443,-8.077715,3.316589,1.783228,5.069712,-4.547371,8.972396,-7.589364,-5.465667,-0.322041,-2.845616,-6.636605,8.893563,8.088052,2.824870,7.985646,-2.295241,-8.150928,4.099276,5.490461,-1.744060,6.348432,0.451907,6.277152,8.607701,1.123527,3.650992,-3.353925,1.595955,0.405624,6.171563,0.516225,-9.391184,7.553379,4.248508,-7.018294,-8.114432,4.229668,-4.889898,-6.073767,-4.979923,9.988676,2.508197,-4.956927,6.029833,6.554726,-9.682201,1.193973,-2.494022,7.316412,2.353844],[-9.036428,8.808746,2.885150,-8.462598,3.112184,-9.459902,-4.497991,-1.748656,-0.396322,-4.384599,-5.595494,-2.565306,2.885373,9.913070,8.791779,8.584246,-9.128355,5.532291,-6.347253,0.673790,2.967942,-7.067585,2.343930,-0.334580,-2.038150,7.480724,-4.042647,-3.460070,4.173820,-0.116605,-2.454017,-5.756894,-0.525735,2.994008,8.926379,-6.748258,-3.916975,9.407030,5.499755,8.516000,-6.497691,-1.742042,-9.675321,3.809496,-6.758960,-0.535581,1.600554,-4.594427,6.583295,-2.450637,-0.008139,7.282158,3.329165,3.202734,-9.965752,-3.614652,7.346931,2.241809,-3.457510,2.299459,-7.178310,3.605476,-6.752826,8.018031,5.363800,6.648488,-5.996135,-7.103977,7.476505,-0.710831,-0.032699,-0.440776,-0.088103,-2.870199,-5.363576,4.564238,4.618824,-8.020846,-3.444620,4.437658],[2.030374,-3.419475,7.153545,9.968701,-3.838494,5.936592,3.588425,-9.816393,9.943532,-1.073987,4.013977,3.052733,-8.666829,-6.982757,3.675101,2.745397,-9.230811,5.465760,-4.637329,-4.420856,-4.940768,-3.598082,-2.368239,3.595614,8.473285,1.001037,-5.073137,3.188816,0.910810,6.529359,-8.811851,0.307646,-2.360240,-9.331627,-7.785517,8.487712,-7.247908,-2.079417,4.246140,4.550416,7.515797,9.535655,3.152511,-3.501024,-8.806496,3.465524,-0.707327,-7.375605,8.983884,-9.154311,8.242732,7.847018,7.166791,-3.634930,2.054242,1.684075,0.069653,-4.892539,5.194602,6.612293,5.562625,-8.236617,6.927736,-7.157052,-4.069752,-7.501484,8.474973,0.858046,8.493875,4.035496,4.289750,0.407888,5.440266,7.996687,1.748886,-1.031323,-3.919986,-4.858685,6.541647,-4.735514],[9.868655,-2.411140,-2.183974,4.613014,4.946999,0.878227,2.185630,6.236319,-3.041207,-1.178294,1.613747,-1.347280,4.261902,-6.598962,-6.445363,-5.100436,6.623507,-5.763498,4.874532,-6.904551,-4.098594,7.644184,-5.964295,-2.870949,-8.995086,-9.648622,1.322541,6.713212,-9.184607,-7.377413,-6.979156,-8.946738,9.698779,-5.047792,1.501738,9.032800,-4.869357,8.008940,-9.563540,3.094647,-2.473158,-6.677174,4.577276,7.888563,1.813143,-1.681727,-9.382104,-0.166766,8.332957,-1.438397,2.269390,-4.170923,4.473346,-9.875819,7.753154,-3.960185,-4.234082,6.110936,-4.566521,7.672220,-6.512094,8.985039,-1.931173,-1.977751,-3.529872,-6.815557,9.110928,1.817524,0.010275,-7.792220,-3.782077,-1.924441,3.676892,-5.881412,-2.496816,-0.038668,9.828031,-3.866108,5.588716,7.732845],[2.736958,5.716126,-7.934498,7.364359,-9.657411,-7.927914,-9.921882,0.077562,-1.799119,1.000496,1.540898,-8.304350,-7.850399,9.950373,9.153936,3.974567,-9.811587,5.086076,-7.246180,-9.347403,-0.507357,4.501814,-1.073993,2.857505,-4.655461,2.197178,-4.838668,-7.174351,-0.477074,-9.072606,-7.198665,0.961331,-1.613439,3.718478,6.824328,8.055168,-0.591323,1.905133,-7.242629,8.822311,9.439442,-3.456851,-5.530105,-0.492437,-7.047487,5.854868,0.616463,-4.319882,1.071574,-8.680554,2.117445,0.115584,-7.453477,-2.517956,2.186237,7.035827,0.543769,-1.562337,-9.003276,-3.317495,0.851240,2.924762,-8.478732,-0.887912,3.028913,4.122258,-0.836832,-6.585455,0.076052,9.288446,-8.943034,5.758092,5.784103,-0.795975,5.394035,-5.814139,-1.079564,9.547963,7.033681,-5.895004],[-0.275532,-6.420883,-3.672455,5.173829,9.171823,-8.347592,9.432802,6.888625,7.216514,-6.186184,4.872991,5.490075,-4.146763,-3.995320,-8.151937,-8.790603,-1.635358,-9.479527,5.391854,-7.141087,-7.094709,-4.599582,1.282148,-1.732200,3.717905,7.056413,-0.486089,-5.705379,8.786705,-2.031105,-1.332020,-8.691713,7.357124,2.655784,-2.848502,-4.938363,7.335655,-0.338984,-2.580078,4.864375,2.895890,-3.794581,-4.247639,-7.934129,-7.420328,7.407742,9.457755,5.588321,-8.118606,0.159108,1.876686,-4.867006,-9.061921,6.308418,5.836663,3.905819,6.696254,-0.512028,-6.172277,7.690910,-1.200451,1.179023,-4.827434,-1.763674,-7.362293,8.415833,4.021848,-1.356214,-5.811333,6.651021,-0.181365,-8.836139,-0.960373,2.829157,7.977157,1.974540,-1.122542,6.729755,-1.477817,6.514868],[4.224159,-0.135311,-2.709080,-9.106305,-6.095078,0.518715,-8.109069,-1.867470,-3.677994,-7.540595,-4.688463,6.008273,-3.447282,8.409006,8.322817,5.841193,9.958121,8.258707,-6.775440,-1.487291,1.922177,-9.531859,3.489624,9.495098,-3.599876,2.158082,1.488229,6.656070,7.690632,-0.944296,-8.766011,5.242183,6.119066,4.035314,-6.322269,-5.486843,9.537562,-7.369197,5.355925,1.113139,0.914161,-3.713728,0.587955,-4.739185,-7.957208,5.691870,7.017998,-4.413836,-2.404805,-1.443337,1.027031,-1.970500,6.468172,5.007255,-3.189714,3.900571,4.960128,1.027036,8.029566,3.020164,-0.926436,-0.103106,8.540114,4.352968,7.281795,0.082961,-6.333462,1.599597,-6.772645,2.465343,9.185647,-3.274468,-3.147068,-8.947237,2.271862,-0.862854,-3.040048,0.249972,6.307257,7.068455],[1.465748,-6.434109,3.147551,3.514655,-7.838277,-5.640847,0.621736,6.195263,-0.481632,-5.147759,2.645326,-4.277907,9.244398,-3.373199,-1.728168,9.190105,-3.536998,8.379438,-6.102619,8.373662,9.448915,-8.042109,-9.858121,3.199941,4.683754,-5.127527,-3.608602,5.310364,1.313241,-4.260713,9.191903,6.131357,5.482831,6.409759,2.738647,4.470015,4.331637,-6.369868,0.433661,-8.103454,9.850870,6.415903,3.758374,4.964389,-7.919140,-2.807700,-7.986090,6.424741,0.141060,3.402943,3.604715,0.272882,-6.618432,-0.637064,7.721356,6.180788,-0.771723,-3.788606,6.295194,-0.373980,-8.664768,7.233746,-2.122664,-7.008376,-1.014522,-2.239544,-6.382280,-6.665962,4.455767,-9.487249,8.702358,1.018491,0.231823,-1.412027,-7.154745,-0.958676,5.278327,9.204325,6.055434,2.550847],[0.154958,8.143647,-7.249929,-9.774600,3.389236,-9.572053,-5.780000,-4.760455,-0.700819,-0.122725,4.150289,1.105625,7.014626,-1.913335,-6.037919,-2.363669,9.543665,-5.585646,6.026952,-1.545956,7.138245,0.607738,-3.715183,6.819768,-4.098866,9.973396,0.668214,5.880932,5.680533,0.015539,7.347173,4.603230,1.144768,-3.987487,4.509128,1.912255,-8.964449,-1.697641,-1.415722,7.231501,-5.920741,-8.602210,0.575854,-9.620210,8.840867,-6.446691,7.643854,-1.177380,3.271264,3.136414,9.095446,-2.366208,0.829720,-8.847961,-5.658121,8.055177,0.836477,-3.109668,4.655504,0.541155,-3.557202,2.267870,-7.765432,5.942206,4.068146,-4.417785,2.067611,-6.027516,8.478188,6.009515,-3.300233,-1.893277,-4.502178,-1.509902,2.683375,8.636856,9.020713,6.222751,-5.963850,-0.532619],[8.347774,-1.408800,0.629974,-5.174257,5.551152,-0.548773,-3.403270,9.319510,-8.320284,-9.031734,-0.810332,4.582259,-0.583476,4.562387,8.028142,-6.221548,-6.872944,-6.223352,6.144078,-4.260616,-0.318615,-8.319171,-9.278651,0.494882,0.890640,-2.781558,7.504442,-4.801842,1.917794,-1.140323,8.471101,1.418831,6.800268,6.471013,-5.091032,-0.714686,-6.671531,9.181330,-0.750581,1.312742,-3.651386,4.670635,-9.383427,-8.748807,1.645103,-4.932200,4.552986,-4.280205,3.073623,-7.714719,-0.866967,-7.043153,1.325692,5.997609,0.528306,-8.279741,-8.055990,9.825858,6.888321,-0.763894,6.158318,4.872832,0.148595,2.337252,2.547418,-5.140939,-8.067281,-5.615619,9.266856,-4.124613,4.709318,-7.157147,-2.747156,-8.470268,2.787286,9.222355,4.641550,-5.371583,-8.772948,-4.332946],[2.911736,1.977159,8.499467,8.316997,9.222597,9.636254,-1.489186,2.907544,-9.337622,-3.581568,-1.689755,-7.122598,-6.032914,-7.276926,-7.283774,-7.871418,-5.181668,-0.170062,-1.617760,-7.814088,8.296961,-4.295813,4.215267,-2.110104,4.930727,-3.841617,-6.670634,3.367302,8.138457,-0.739951,-4.815335,6.433338,-5.444830,3.590107,8.215170,2.241905,0.522713,6.638585,1.567279,-3.082569,-9.511329,-1.449385,1.017315,-6.470796,-7.162739,9.254940,7.535989,8.970398,-0.238231,-1.099737,-7.488375,-0.547983,2.467297,-6.246842,6.707523,1.630017,3.018135,4.200205,-9.573414,3.353514,-8.319397,2.957842,5.977126,7.165200,1.225072,-0.451445,9.866157,-4.381611,-3.353650,3.896434,3.983173,5.404488,2.954037,-5.773550,-5.372320,-6.833857,-4.693864,2.887094,-2.619486,2.939397],[-9.610521,4.919733,-0.965059,6.857339,-4.817973,-1.000550,3.512743,8.431715,-0.786652,-8.221813,3.675322,4.473932,8.803099,-8.903749,-4.317532,9.948399,9.229728,-3.880739,-0.323571,-2.616723,8.626217,1.062329,-2.492948,5.473303,-6.175824,-3.622538,-8.678727,4.631899,-1.989709,3.359914,0.930456,1.452686,6.664216,-3.224251,8.263965,-4.877916,6.682817,-3.455768,-6.216511,8.224206,8.031805,8.638066,3.460091,8.810371,-0.276969,-9.713852,-0.501963,-1.403328,-8.109316,9.015556,7.164845,-5.804560,3.667853,-7.039280,-1.122176,-3.938028,7.211214,6.443632,-5.046817,-7.287645,5.710197,-7.322071,7.617143,9.384926,9.697247,1.932858,-0.872604,-4.340263,-9.415137,-9.832095,-1.537257,7.797826,-4.778254,-2.627911,1.556271,5.791472,-7.069440,-7.398611,-4.919561,1.963070],[3.081423,-9.410236,-1.576137,3.608862,1.683717,4.290120,2.951097,-4.949174,7.861900,-9.604693,4.840811,1.300781,-2.911802,9.970999,9.601710,-0.244936,-9.137120,-5.082197,0.654612,0.393480,7.251295,-4.994682,0.985199,-8.420266,-5.868853,-1.437024,-2.679249,0.191390,8.496640,5.089496,3.611499,5.605132,-5.908773,-9.618004,-1.209962,4.278201,-1.121206,-1.696717,-5.814231,-6.080497,2.748479,-8.132013,-4.061863,-2.672827,6.750263,-1.900630,-3.759077,-8.086124,5.043092,-0.796518,-7.383908,-0.782390,-6.233551,5.836907,9.343327,6.490686,-9.532862,0.169522,3.488310,-0.009010,8.925827,3.291692,5.006131,2.154420,-4.333436,-1.588201,1.170456,7.254286,9.761112,-9.824346,-2.728822,2.600053,6.177844,9.555325,8.515926,6.210360,-6.862108,-4.104096,-8.181774,-8.241073],[9.818929,-4.706119,8.319009,-7.932380,-3.397572,-8.891054,-4.524851,5.848049,-9.003842,-6.434145,-5.387103,-0.813304,-1.658696,-6.500326,-7.133452,7.189559,8.695166,-1.102732,6.455157,2.659674,0.880269,-3.517071,-9.745689,-3.343074,-8.281980,-4.313300,-7.428902,7.241390,6.630097,-5.104905,4.414442,0.748955,3.788440,7.992694,2.305296,-7.919811,-7.953308,-1.926998,-7.082111,6.100439,-0.970796,9.937470,4.258757,3.535678,4.479017,-8.610914,-0.860782,8.391540,-8.788623,-7.447414,-8.867612,-6.640932,-7.939131,8.924796,1.930223,9.814317,-8.070655,7.975112,-7.309340,-7.473658,-0.066774,-4.682713,-4.849373,-2.827178,-3.269855,-4.176655,7.483704,-1.487403,-5.582995,-3.999743,-8.164849,0.528516,-4.545630,-2.459088,3.364041,-8.316675,-2.631961,-9.542157,5.442972,3.961923],[-0.628809,-7.788818,-2.741418,5.664722,-1.599021,2.420987,0.839951,5.215400,7.723882,-8.225855,-2.796847,-6.153174,5.587029,9.308554,7.478023,4.631000,7.022039,5.498670,-1.079148,-4.379202,-3.940951,5.672323,-3.143530,1.436252,8.677624,-8.711203,3.126749,-5.823024,-8.483566,5.715574,-9.229726,6.270706,-0.954755,0.086271,5.642345,4.127466,9.130137,2.581172,8.059950,9.974086,7.634277,-5.352932,-5.834107,7.148735,-4.401508,-4.728537,1.489775,-7.242656,-3.123921,-8.182923,6.077094,8.759756,0.706964,-3.833699,-1.097182,9.315069,-6.150963,-7.840101,-2.096163,2.397546,-3.676610,6.703799,8.813747,4.914048,7.648531,1.639328,5.028517,-6.491525,0.565271,9.365819,-4.293808,6.910609,-9.805473,-3.775452,-9.951963,4.359438,5.029052,-0.285325,6.760691,3.798183]], dtype = "float64")#candidate|634|(20, 80)|const|float64
call_633 = relay.TupleGetItem(func_296_call(relay.reshape(const_634.astype('float64'), [20, 80])), 0)
call_635 = relay.TupleGetItem(func_299_call(relay.reshape(const_634.astype('float64'), [20, 80])), 0)
bop_644 = relay.minimum(uop_619.astype('int8'), relay.reshape(call_633.astype('int8'), relay.shape_of(uop_619))) # shape=(6, 5, 10)
bop_647 = relay.minimum(uop_621.astype('int8'), relay.reshape(call_635.astype('int8'), relay.shape_of(uop_621))) # shape=(6, 5, 10)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
call_648 = relay.TupleGetItem(func_218_call(relay.reshape(const_634.astype('float64'), [1600,])), 1)
call_649 = relay.TupleGetItem(func_220_call(relay.reshape(const_634.astype('float64'), [1600,])), 1)
func_412_call = mod.get_global_var('func_412')
func_418_call = mutated_mod.get_global_var('func_418')
const_669 = relay.const([[2,-9,10,3,-1,3,-9,4,-2],[-1,-1,-1,-3,-3,-5,-3,-4,-3],[2,-2,-8,6,5,-1,-9,9,5],[-6,-1,5,-2,2,-3,-2,4,7],[-8,-9,-5,10,-5,3,1,2,10],[7,-6,-10,7,-3,8,10,2,-9],[-4,-8,7,10,-1,-9,8,3,-8],[-4,-6,3,4,10,-5,-3,-5,7],[-4,-2,-7,-8,-9,-10,3,-2,-10],[3,-10,-2,-1,3,7,7,-7,8],[10,-1,-6,-7,-7,-10,-4,5,-7],[1,3,1,6,-3,9,-8,-7,9],[2,-4,5,-7,6,-4,-10,-10,-1],[-5,1,1,-1,-8,-10,4,2,-2],[-2,5,1,-1,-6,-6,-2,-3,10],[2,3,-2,8,4,3,-7,4,-3],[3,8,6,6,4,2,3,3,-7],[-8,2,5,7,10,-3,-6,10,-6],[7,-6,-9,-3,4,8,-5,-6,-8],[2,-2,7,-9,2,1,8,9,-9],[2,-3,-1,10,7,3,-7,-5,1],[-4,8,-2,5,-7,1,3,1,4],[6,10,-9,3,9,-5,-9,-1,-7],[4,-2,-4,-8,-8,2,-10,5,-2],[-2,8,-10,-2,-2,-5,-7,-10,-1],[-1,1,7,3,-2,5,3,-8,1],[-6,8,-7,8,6,-2,-10,8,-4],[7,-2,8,-10,7,3,-7,-10,-8],[1,-10,2,4,6,-7,6,-10,10],[6,-8,-9,10,10,10,6,4,8],[9,-1,-5,5,-10,-10,10,10,8],[9,-5,7,-6,9,-10,-7,-1,3],[-5,-7,-3,5,4,3,9,1,10],[-1,4,8,9,2,2,-7,-4,-1],[-3,2,6,-1,-7,8,2,-8,3],[10,-9,-3,-8,7,-7,10,-7,-9],[-10,-9,-5,-6,10,5,10,-5,-10],[8,-1,1,-5,9,-7,-8,-1,4],[6,4,6,7,-7,-2,1,4,-7],[9,7,-6,6,-1,-1,-2,-7,-2],[8,-8,2,-9,-4,-6,-7,4,2],[-10,6,-7,6,-3,-6,9,-4,8],[-1,-2,9,7,-4,-9,3,-7,1],[-7,3,-4,-4,-4,10,-8,-8,-5],[8,-2,2,-1,1,5,3,-8,1],[7,5,-8,5,5,6,-2,-3,-9],[6,-2,-9,6,1,8,6,-9,-9],[5,1,-1,3,3,6,2,1,8],[5,10,9,-5,-5,7,1,2,-5],[9,4,3,4,-3,-1,3,-6,9],[-2,4,1,5,-5,-4,-8,6,4],[6,-7,3,2,6,-10,5,1,3],[-9,4,5,-4,-10,9,-2,-4,-1],[-8,4,1,1,7,-5,4,9,10],[5,-9,4,10,10,-6,-2,6,-10]], dtype = "uint64")#candidate|669|(55, 9)|const|uint64
call_668 = relay.TupleGetItem(func_412_call(relay.reshape(const_669.astype('uint64'), [15, 3, 11]), relay.reshape(const_669.astype('uint64'), [15, 3, 11]), relay.reshape(call_648.astype('float64'), [1600,]), relay.reshape(call_648.astype('int16'), [1600,]), ), 1)
call_670 = relay.TupleGetItem(func_418_call(relay.reshape(const_669.astype('uint64'), [15, 3, 11]), relay.reshape(const_669.astype('uint64'), [15, 3, 11]), relay.reshape(call_648.astype('float64'), [1600,]), relay.reshape(call_648.astype('int16'), [1600,]), ), 1)
output = relay.Tuple([bop_599,uop_604,const_634,bop_644,call_648,call_668,const_669,])
output2 = relay.Tuple([bop_602,uop_606,const_634,bop_647,call_649,call_670,const_669,])
func_687 = relay.Function([], output)
mod['func_687'] = func_687
mod = relay.transform.InferType()(mod)
output = func_687()
func_688 = relay.Function([], output)
mutated_mod['func_688'] = func_688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_710 = relay.TupleGetItem(func_120_call(), 0)
call_711 = relay.TupleGetItem(func_122_call(), 0)
output = relay.Tuple([call_710,])
output2 = relay.Tuple([call_711,])
func_717 = relay.Function([], output)
mod['func_717'] = func_717
mod = relay.transform.InferType()(mod)
output = func_717()
func_718 = relay.Function([], output)
mutated_mod['func_718'] = func_718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_482_call = mod.get_global_var('func_482')
func_483_call = mutated_mod.get_global_var('func_483')
call_750 = func_482_call()
call_751 = func_482_call()
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
var_760 = relay.var("var_760", dtype = "float64", shape = (2, 800))#candidate|760|(2, 800)|var|float64
call_759 = relay.TupleGetItem(func_218_call(relay.reshape(var_760.astype('float64'), [1600,])), 1)
call_761 = relay.TupleGetItem(func_220_call(relay.reshape(var_760.astype('float64'), [1600,])), 1)
bop_777 = relay.maximum(var_760.astype('float64'), relay.reshape(call_759.astype('float64'), relay.shape_of(var_760))) # shape=(2, 800)
bop_780 = relay.maximum(var_760.astype('float64'), relay.reshape(call_761.astype('float64'), relay.shape_of(var_760))) # shape=(2, 800)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
call_783 = relay.TupleGetItem(func_218_call(relay.reshape(bop_777.astype('float64'), [1600,])), 2)
call_784 = relay.TupleGetItem(func_220_call(relay.reshape(bop_777.astype('float64'), [1600,])), 2)
uop_791 = relay.log2(var_760.astype('float32')) # shape=(2, 800)
uop_797 = relay.exp(uop_791.astype('float64')) # shape=(2, 800)
output = relay.Tuple([call_750,bop_777,call_783,uop_797,])
output2 = relay.Tuple([call_751,bop_780,call_784,uop_797,])
func_801 = relay.Function([var_760,], output)
mod['func_801'] = func_801
mod = relay.transform.InferType()(mod)
var_802 = relay.var("var_802", dtype = "float64", shape = (2, 800))#candidate|802|(2, 800)|var|float64
output = func_801(var_802)
func_803 = relay.Function([var_802], output)
mutated_mod['func_803'] = func_803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_482_call = mod.get_global_var('func_482')
func_483_call = mutated_mod.get_global_var('func_483')
call_818 = func_482_call()
call_819 = func_482_call()
uop_820 = relay.exp(call_818.astype('float32')) # shape=(6, 5, 10)
uop_822 = relay.exp(call_819.astype('float32')) # shape=(6, 5, 10)
func_66_call = mod.get_global_var('func_66')
func_69_call = mutated_mod.get_global_var('func_69')
const_829 = relay.const([2.334038,4.775580,1.717169,0.828587,-6.709759,-5.248154,-2.963043,8.695462,5.212351,-2.245222,-1.288318,1.399682,6.217580,-9.755752,9.265397,4.790297,7.562748,9.526378,2.805245,2.875716,-8.614478,-5.815642,-3.260655,-6.758757,-6.382282,6.690510,4.144035,-5.148167,9.517270,-9.239937,2.713724,7.980615,-8.190280,6.018572,2.711499,-9.904507,-1.472993,-0.079448,-9.778194,4.856458,3.254478,4.470251,9.274803,5.679123,-2.149761,6.643253,5.307713,-7.436357,8.458167,-1.449804,2.895366,-0.418555,8.770103,-4.335409,3.469048,-8.047974,-3.271572,-0.993097,-9.844546,-9.088772,2.044025,-6.685276,-3.109965,-4.458175,-3.003187,-3.127049,2.783029,0.452044,9.958422,-4.737559,9.776546,8.616830,7.597761,8.394809,2.366277,-2.738581,8.410367,-1.490831,-0.691303,-7.458577,9.479102,-1.597787,8.177624,4.320295,9.229004,-0.758634,-6.620056,2.642391,9.935207,2.482196,-6.946434,7.842647,-1.481946,-4.098448,-4.820967,5.652717,2.008729,5.799515,-2.229048,-4.395169,-1.769437,-6.399071,-2.362906,-9.505650,9.794107,0.593341,-9.036881,6.844043,-9.851978,8.615059,-7.025723,-0.965599,-6.140844,3.987097,-9.593858,-1.933310,-7.667920,7.594032,-0.065161,-7.910681,-0.817158,-6.603275,-9.994767,1.270606,7.004845,9.811574,-7.016605,6.765242,2.108242,3.707612,-2.913330,6.135796,-0.294662,-1.730399,-4.243973,-4.664850,-2.564051,1.906892,6.990275,6.680284,7.512725,-1.517286,-0.245534,-7.394245,-0.936075,1.088345,-2.619049,5.387585,4.006162,2.654266,-7.861473,-1.370513,-8.846329,7.234726,0.699824,-2.564688,-6.847045,-2.613227,1.084106,-5.388526,-7.838252,-2.638507,-0.931673,1.054796,4.191140,-0.471340,8.207933,-4.184905,-9.519764,8.446126,-4.191669,5.453180,-0.368406,4.710168,-5.630919,-3.075909,8.636959,1.642391,-9.310828,-3.493968,-4.286734,-4.553689,8.343284,8.782067,-1.109154,0.647070,9.590703,5.117800,-2.293324,6.899011,9.940531,8.852315,-7.112948,-4.269228,-2.133847,0.498509,8.232123,-2.972763,-6.125790,7.838960,-2.827022,-5.214220,9.559242,4.677357,-4.788506,-5.824662,-3.379797,1.523467,0.849025,-5.979649,-1.463543,-5.032272,8.408966,-3.353291,-5.372608,-5.926172,0.652480,-5.568976,5.110672,-6.163356,-5.706297,4.352671,6.802622,-5.135376,-6.618158,-1.851537,-9.239728,7.485393,2.634959,9.971056,7.225563,-1.247695,-3.258442,4.117814,-1.523799,-7.946295,-7.235805,-7.537883,-0.148162,-9.735478,5.044768,9.276546,0.821329,4.888358,-5.744821,8.065766,-1.731079,-4.804792,-9.711634,-3.561509,-0.280756,-0.344612,-1.563093,-5.239928,0.989436,-8.727889,8.200057,-3.214483,-7.575226,9.377353,-5.615389,-9.790173,-8.253558,-8.178506,-5.206275,4.791590,3.549022,1.353740,-0.084102,-6.602432,7.291404,-8.708635,-8.592820,1.430640,-9.895917,5.692607,5.552631,-2.081316,1.254719,2.969097,7.642920,-1.236462,-1.478201,9.165031,5.370988,-0.364238,-4.229200,7.723358,4.286357,6.808634,2.014015,-1.143675,-7.700706,-3.098625,2.739852,9.544814,-9.698406,7.114144,2.662652,-6.566907,-1.602739,7.848197,3.280324,5.161455,-7.932151,6.702871,-5.780624,-7.474200,-4.425034,-6.677500,-6.156376,-0.862362,3.612838,1.492495,-3.751978,5.997753,-7.461303,3.725758,6.553605,-2.474245,0.042280,6.596147,-8.090077,-9.727004,-7.444866,-0.688240,-3.665122,8.499284,9.544295,7.852023,-2.165748,-9.258343,1.127797,5.597085,1.016127,-3.440234,4.987609,-1.051249,-8.008824,-8.079576,2.191268,7.718159,5.707432,4.301759,-8.785324,7.571106,2.132718,9.591177,9.961204,2.994713,1.469870,-9.017778,8.881935,-3.700817,1.493846,-0.575062,4.335402,7.893350,-4.641638,3.889520,8.161800,-9.242404,2.837680,8.366458,-8.623263,1.421609,5.727792,-7.281446,-3.383498,-4.186902,1.403413,-1.226175,-7.895769,2.701574,-6.396383,0.809108,8.135899,-9.913611,-3.667274,-9.655366,-8.569720,-2.360329,8.105741,-2.237624,1.510743,9.787428,5.121698,2.894738,8.253506,-1.944701,-9.502485,2.521748,1.358830,-5.675506,-5.965809,-2.275245,-7.480561,-2.578904,3.131073,6.870055,8.586116,9.927518,-9.360117,-5.116956,-6.733784,0.579394,2.571099,-7.062811,-6.828854,-9.162308,9.271808,1.769459,9.725062,6.106974,-8.492089,7.040544,-1.583386,-5.062155,3.502494,-4.477983,6.204168,-1.815873,5.575841,-7.929430,0.337009,-9.605197,0.756056,-1.505198,6.344339,-4.738705,-1.924112,4.011482,-1.992463,1.536178,-5.105748,9.959768,4.963891,-0.763938,9.924500,-0.327681,5.381590,8.915584,-1.740587,6.233436,-2.159636,1.331692,1.472418,4.100465,-9.357379,-8.055487,-7.155267,2.962058,3.629696,-2.090272,-1.583125,-6.194388,7.761792,-0.973852,6.971675,9.576641,8.134409,1.568127,5.909950,6.246282,7.532243,4.580338,3.838284,-8.092054,-1.430987,4.987754,4.294197,3.584376,-8.169382,6.234993,7.026204,9.588438,4.591182,-2.343561,5.126088,1.535708,3.059846,-3.795226,4.574647,6.907374,-5.293938,-0.176636,-9.151159,-0.004533,6.126861,7.781712,6.980304,-6.452052,3.660395,9.447433,-9.602956,5.122902,3.761765,-7.029377,-0.599546,0.458620,7.286760,9.483153,5.592221,-9.603688,2.028781,6.182400,-7.227223,4.102683,-7.395673,-6.670606,9.407167,-7.512987,7.490353,0.695499,0.078238,-8.691879,-4.939572,-9.437387,-2.017866,1.533940,-9.446774,-5.880385,-1.496877,-4.467878,-7.867714,6.799663,2.341781,4.794872,-5.530560,-7.455252,4.809749,-9.585103,-2.504128,9.454726,5.196051,-0.751199,6.644147,-2.147297,0.545149,9.624257,6.973595,6.773600,-1.923005,-4.369278,-9.832463,-1.585592,6.289316,1.151854,-5.564256,-4.086259,5.530543,5.278878,0.196561,-9.042689,2.544792,6.050642,-6.474008,9.607198,4.867440,-0.331252,-6.118742,7.445761,6.664312,-5.137969,3.143989,-2.556540,0.552211,6.229593,6.690613,8.590308,7.344468,-9.816830,-5.510216,4.597791,3.315264,7.896589,-3.825162,8.483242,1.468854,1.142733,1.494643,-9.544916,-3.103577,3.453581,4.843741,-9.590386,4.140263,7.918481,-0.851019,2.044593,-5.401292,2.225903,4.485243,-1.783030,-6.161861,6.881990,4.764576,6.315308,-7.573321,-2.753651,8.554052,-9.395415,9.694301,-4.516084,-9.061712,8.786102,-4.934891,-4.776822,8.540079,2.409163,-6.579225,0.455398,-0.485891,6.848927,-1.191146,-5.980674,-5.646408,-5.562577,-2.155551,0.909140,6.140204,8.355712,-1.714046,3.984693,4.381699,7.996109,-0.221550,5.451060,0.757980,5.281849,-5.204849,-1.059893,-8.156677,-8.989105,8.778087,-4.415256,-7.258289,2.699610,4.681792,9.611683,1.466194,-8.124182,2.617115,-8.047167,8.052423,-5.803013,9.951747,-6.042337,-6.012721,7.773766,6.557543,-8.200305,6.812496,-5.852300,-0.094668,0.181908,-9.401773,3.448614,-2.817291,3.449444,4.221465,1.804682,-3.280544,0.933628,9.151106,-5.059319,-6.533722,-8.850162,-0.157616,-9.035919,-1.407716,-7.670534,7.347184,1.213926,9.110024,1.066468,-1.029191,-5.665667,3.575299,2.372253,-6.042778,8.645487,-1.846950,-7.671707,-1.790784,-6.432141,7.279704,8.559584,-4.710470,-8.437728,7.137087,6.531847,-4.872854,-4.718273,5.248587,-5.647385,-7.929177,-6.770299,-8.000454,1.965035,9.691786,3.521389,2.203289,3.638195,0.108189,6.558599,-8.279705,6.244058,-6.868158,-8.572535,5.904497,9.048836,-7.842023,1.736607,9.854706,3.320651,-4.712736,5.248154,0.377454,1.044666,-6.619420,-4.040667,6.510000,4.370191,7.910766,5.351644,7.150292,-8.893825,-4.354561,-6.988561,8.164483,-9.247941,-1.132052,6.384089,7.534568,7.742779,7.919545,-3.476361,3.417387,7.296473,6.497792,5.807384,5.255928,-5.002435,2.339014,8.770602,-3.712208,-2.741776,9.141215,-0.826096,8.347468,-6.049833,2.011133,4.705606,4.047174,-0.254109,-8.050442,6.898149,2.787483,4.491264,-4.377787,1.870072,6.823287,0.148931,3.410085,3.564680,0.397265,-3.191288,-9.616696,5.349949,-8.506190,-9.782707,-0.109864,-3.201953,1.133239,-8.695562,9.717799,-9.043997,-6.388449,4.525771,8.965471,-1.760583,2.745204,-8.692691,-0.857610,8.635788,6.629956,8.839734,4.338115,5.776700,-6.738054,-0.215903,-3.870728,-7.195639,-6.154012,-6.833492,-6.813431,7.769605,5.584618,3.545152,5.396111,-2.124870,-3.651912,-1.993641,-3.756238,-9.001526,-7.594843,-8.708825,4.184416,5.005199,-9.289365,2.228224,-6.316075,-7.303534,-6.326665,1.869826,-6.448576,-6.535342,-5.638192,-5.113551,6.803590,0.118006,9.401805,-8.045090,-3.153566,8.021856,3.208445,4.610359,0.889238,-8.859722,6.148402,1.403330,6.018094,-1.237805,0.524907,-8.695145,6.824672,-5.322701,7.144802,6.445276,-2.232022,9.462547,9.093927,4.356445,-0.723508,9.727111,4.133983,-6.337988,-3.315929,-8.369038,6.098356,-6.205982,-1.905710,-3.825893,4.282418,8.070023,-3.533626,-7.034401,0.285091,-3.981841,1.113385,4.810034,-1.697547,3.439678,-9.733030,-5.627422,2.028989,-0.758962,7.934846,6.465661,-4.865373,-7.043260,2.781275,9.896410,-0.448131,9.148513,3.375431,2.905733,-0.786318,-0.432158,-5.675600,-7.513966,-5.165718,-9.179797,4.507482,-1.461276,-2.327514,-7.166161,8.580023,5.930929,6.019401,2.251094,1.329662,3.514005,-4.081521,6.043897,-3.909265,-5.545823,-5.913496,9.930507,-5.422005,-0.667594,-8.596462,9.055259,-3.457975,-1.272324,0.619676,-0.810554,-8.728195,-9.850104,8.570141,3.265573,1.550958,-0.551900,-2.903123,-9.323806,-3.966925,-9.298896,6.285440,-1.964176,-3.046483,-5.907260,3.041429,-4.120724,-8.738979,-4.219159,-9.280787,5.386264,7.743096,-3.049646,3.853040,-8.814539,3.058485,4.613478,-9.055906,-0.750747,-3.455821,-2.400520,3.874008,6.474113,2.035435,1.408874,8.748421,-9.309100,6.449927,5.867581,2.086199,-9.268823,-3.339566,5.809455,1.098370,3.939499,-5.528531,2.968133,-8.010881,9.453459,-1.913299,-0.216107,-2.916929,-2.129913,9.330862,-4.900809,-3.313526,0.770626,-2.114110,8.638221,-1.298517,1.063909,5.352882,-1.891224,1.618255,4.495133,-5.164767,-4.500986,-2.279845,-1.192062,-6.136207,-5.025420,2.236795,3.425564,7.828314,-8.421732,9.113820,-3.699939,-7.603807,-7.440729,7.511794,-8.312735,7.732171,-8.182949,2.306865,6.695394,7.337214,-2.404974,2.124303,6.003246,9.737889,-1.914667,3.206363,4.717106,1.450436,-7.406714,9.562253,5.910569,1.271849,8.139447,-8.231407,-4.594649,-1.476419,7.458984,-3.016116,-8.594967,-8.992497,-8.812898,-0.321406,3.613197,3.677002,-3.570661,-4.694987,-4.672557,0.816914,1.829830,-6.321764,5.787482,-6.202624,2.528536,1.357492,-8.839628,-8.107943,-9.013060,-5.552228,4.672194,2.822646,7.807986,5.408093,9.732503,5.314197,-6.068894,-4.611028,-5.028626,-5.299396,2.166432,-7.164850,8.591395,-7.017627,3.650465,-3.557413,-7.849041,-6.826940,0.838803,6.046352,-5.718081,7.068293,6.595531,-4.992556,3.846194,8.590692,4.210613,-0.871931,-7.408109,-2.680871,-6.454452,-7.932733,-5.233151,-5.342791,-2.864563,-1.092475,-2.520893,-3.409597,8.521466,7.142025,9.351090,1.591621,-4.066235,-0.810748,-3.356712,-7.123861,9.775168,2.648449,8.170088,7.831239,-5.338764,-9.842696,-8.626469,-2.274266,-3.764361,-7.554638,-6.281558,-6.482561,0.381258,5.178433,8.865662,-5.663916,3.497786,-1.730359,0.769054,-5.887173,9.326504,-3.662966,1.649295,0.191694,6.498982,-9.683916,3.129338,-8.975093,2.348821,-6.162276,-6.774597,3.216683,-3.755163,-7.873402,2.718691,1.565703,-9.281408,-2.286944,-7.911296,8.051344,3.340919,7.398529,-6.918524,-3.320720,-3.133439,-7.151249,1.441434,-8.000809,6.091061,-9.824598,8.730652,5.100901,7.995319,-3.325830,1.305217,5.221866,8.933735,2.153769,2.610908,3.045488,-0.392949,-5.094901,3.329290,7.531457,5.433236,6.542618,-2.859033,-0.256207,9.504486,2.800769,-8.629633,1.106295,-1.224037,7.889564,-2.279293,1.801894,-6.278733,4.683060,-5.577265,-1.348283,-4.339232,-0.997882,-2.948787,-7.467965,0.132546,-6.460197,9.985737,7.698194,-5.278743,8.964294,0.478716,9.187079,-0.403072,8.666558,-0.141988,-7.000182,-7.777238,8.696848,-9.369316,-2.886943,0.628664,5.466180,-2.459783,-6.366478,-2.003372,-0.303978,-6.948085,1.907332,-6.012935,5.645414,5.769816,8.784398,6.919803,-1.251835,-4.449343,9.378272,-3.612047,-0.252966,-0.617100,2.067946,-5.004380,-0.012782,-6.759993,3.212792,2.973566,6.679344,7.112257,-2.936912,9.483979,-4.283932,0.301819,6.549925,-6.888603,-0.065399,6.635217,2.181102,4.288875,-9.940778,-0.859711,-3.850433,0.591310,-1.742991,-7.745644,3.813640,9.548639,-4.746053,0.434563,-8.719267,4.605798,-5.361836,3.193238,6.886929,-6.117270,-8.880842,1.515641,-1.689776,-2.104620,3.944879,7.678359,-1.450740,-2.610988,1.451348,-1.753552,-4.178513,-1.432391,-7.815879,-8.733350,0.376804,-9.428021,0.135671,-2.977684,-5.924946,-6.359474,-2.646583,-2.095688,8.213019,0.080492,-5.479200,-6.741486,8.083103,-1.219715,-4.774736,3.443698,4.430010,9.374703,-6.499766,-9.912641,-7.019587,-1.038278,-4.278535,3.151244,-8.909993,-3.706542,9.631963,9.655653,0.304945,-6.454335,-4.548466,0.747827,9.695553,3.357040,7.450870,-2.541417,-6.536227,-8.060203,3.716730,-4.642071,-0.864971,0.807113,-1.069688,-8.614533,-3.234302,1.197166,2.585088,-1.227548,-9.519616,-3.542432,7.134096,7.267723,5.883280,-4.013195,-9.483426,-9.717424,4.159267,-8.150302,-9.845081,7.514388,8.591394,-1.612288,-9.245871,-3.794756,-6.723080,-4.979604,1.171326,4.199049,4.314287,-0.368890,6.086974,-3.164321,-8.378813,-0.379541,4.369268,9.411037,-6.334592,0.241477,-5.432691,7.570969,-5.196610,-3.287017,-2.404364,0.747410,4.502665,0.961157,-0.723952,6.763170,-8.916201,-5.281372,3.849526,-0.761552,1.000652,-1.531270,7.778097,-2.413506,5.590532,-3.014067,-2.765303,6.768763,8.345043,-0.212073,-8.139664,-0.225608,0.448274,3.247695,-3.918136,0.357314,8.705265,7.335571,6.053671,9.923915,-5.824422,-5.040195,6.592968,-0.053607,-8.419154,-4.502249,-7.264631,5.058037,9.184785,-9.093878,2.773737,1.738578,-2.640330,5.416502,-0.347795,-9.471929,-7.406742,-9.253928,3.030840,-7.402805,4.652567,-0.636957,3.377642,-6.312533,-1.444587,-4.184298,-3.483976,0.153646,-4.235858,-3.910928,5.441930,6.830552,-1.297200,6.412812,-9.364964,9.967599,-3.026811,4.183161,-2.339771,6.961407,5.191272,-2.823756,6.463348,-1.943350,-3.680895,0.367255,4.462427,-2.898949,-5.142625,5.789119,9.034339,-8.412730,8.598774,-3.811911,5.133413,-9.181561,7.567237,-1.869684,-0.860478,8.635545,-5.850289,-0.902805,1.088035,2.653279,-1.313820,6.629153,1.059956,-9.436470,5.359057,-2.378701,-0.722432,6.260832,3.117037,-5.199568,-8.467898,9.400653,-0.520002,8.979456,-1.714059,9.161492,2.856255,-9.216424,0.309837,7.328279,0.320310,4.788105,2.418457,-1.643052,4.323081,-1.824532,-9.386803,-8.676989,-3.161061,-9.106065,-2.684685,6.775009,-1.655083,-0.007634,-9.249007,6.126606,-2.727968,5.115038,0.385781,-7.898488,6.484405,6.399973,-2.187769,-3.647572,5.482773,5.393213,1.929036,5.454798,5.630011,8.842895,-3.739730,4.207271,7.271086,-5.030308,-0.624701,8.441720,6.313947,2.397048,-1.886145,-0.569360,0.082292,7.644653,4.075147,-6.007553,5.588984,-8.203874,-1.658288,-4.806627,6.341953,7.633250,8.547687,4.839612,6.783099,5.307323,-8.943070,6.092802,1.144534,-6.191469,5.737595,4.154137,-3.804575,-3.438821,-5.965993,9.238082,0.016303,9.825320,5.173455,-8.426630,-4.332017,9.166847,1.829375,-5.836530,6.298143,8.085640,9.488245,2.381132,1.950703,6.590867,-8.428671,1.465938,2.290904,3.121571,4.105219,7.705906,7.664909,-4.415218,1.411476,7.037471,-6.530033,7.778180,-5.168686,7.973014,8.444195,3.048958,7.059484,6.610505,5.943987,-8.518248,-8.421946,-1.753081,-4.341393,4.534646,6.416695,-7.895908,3.057824,-7.942741,3.424959,9.390068,-2.961228,-0.059645,1.980424,-4.119422,-9.703222,6.711208,-3.566438,-3.799872,5.469554,-9.007521,6.569645,-8.261772,-7.985606,-7.193143,-3.060352,-8.298253,-3.214427,9.739991,9.748819,-1.785675,-6.132273,-4.762264,-7.047224,5.572487,-2.895828,-4.300875,-2.084051,7.974077,0.307794,-6.210446,0.309069,-3.958775,-8.079653,-7.419317,4.064216,5.555019,-0.036648,-7.889945,7.887170,-6.360629,9.392907,6.137900,8.206822,1.835521,-0.669083,3.582377,-5.860536,5.897775,8.228296,-3.020401,-6.458366,-0.632758], dtype = "float64")#candidate|829|(1600,)|const|float64
call_828 = relay.TupleGetItem(func_66_call(relay.reshape(const_829.astype('float64'), [10, 10, 16])), 0)
call_830 = relay.TupleGetItem(func_69_call(relay.reshape(const_829.astype('float64'), [10, 10, 16])), 0)
output = relay.Tuple([uop_820,call_828,const_829,])
output2 = relay.Tuple([uop_822,call_830,const_829,])
func_847 = relay.Function([], output)
mod['func_847'] = func_847
mod = relay.transform.InferType()(mod)
mutated_mod['func_847'] = func_847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_847_call = mutated_mod.get_global_var('func_847')
call_848 = func_847_call()
output = call_848
func_849 = relay.Function([], output)
mutated_mod['func_849'] = func_849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_863 = relay.TupleGetItem(func_120_call(), 0)
call_864 = relay.TupleGetItem(func_122_call(), 0)
output = relay.Tuple([call_863,])
output2 = relay.Tuple([call_864,])
func_872 = relay.Function([], output)
mod['func_872'] = func_872
mod = relay.transform.InferType()(mod)
output = func_872()
func_873 = relay.Function([], output)
mutated_mod['func_873'] = func_873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
call_959 = relay.TupleGetItem(func_847_call(), 1)
call_960 = relay.TupleGetItem(func_849_call(), 1)
output = call_959
output2 = call_960
func_971 = relay.Function([], output)
mod['func_971'] = func_971
mod = relay.transform.InferType()(mod)
mutated_mod['func_971'] = func_971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mutated_mod.get_global_var('func_971')
call_972 = func_971_call()
output = call_972
func_973 = relay.Function([], output)
mutated_mod['func_973'] = func_973
mutated_mod = relay.transform.InferType()(mutated_mod)
var_996 = relay.var("var_996", dtype = "uint8", shape = ())#candidate|996|()|var|uint8
var_997 = relay.var("var_997", dtype = "uint8", shape = (10, 11, 3))#candidate|997|(10, 11, 3)|var|uint8
bop_998 = relay.equal(var_996.astype('bool'), var_997.astype('bool')) # shape=(10, 11, 3)
output = bop_998
output2 = bop_998
func_1013 = relay.Function([var_996,var_997,], output)
mod['func_1013'] = func_1013
mod = relay.transform.InferType()(mod)
var_1014 = relay.var("var_1014", dtype = "uint8", shape = ())#candidate|1014|()|var|uint8
var_1015 = relay.var("var_1015", dtype = "uint8", shape = (10, 11, 3))#candidate|1015|(10, 11, 3)|var|uint8
output = func_1013(var_1014,var_1015,)
func_1016 = relay.Function([var_1014,var_1015,], output)
mutated_mod['func_1016'] = func_1016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_1034 = func_971_call()
call_1035 = func_971_call()
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
call_1051 = relay.TupleGetItem(func_847_call(), 2)
call_1052 = relay.TupleGetItem(func_849_call(), 2)
output = relay.Tuple([call_1034,call_1051,])
output2 = relay.Tuple([call_1035,call_1052,])
func_1084 = relay.Function([], output)
mod['func_1084'] = func_1084
mod = relay.transform.InferType()(mod)
output = func_1084()
func_1085 = relay.Function([], output)
mutated_mod['func_1085'] = func_1085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_717_call = mod.get_global_var('func_717')
func_718_call = mutated_mod.get_global_var('func_718')
call_1092 = relay.TupleGetItem(func_717_call(), 0)
call_1093 = relay.TupleGetItem(func_718_call(), 0)
uop_1099 = relay.log(call_1092.astype('float32')) # shape=(6, 5, 10)
uop_1101 = relay.log(call_1093.astype('float32')) # shape=(6, 5, 10)
output = relay.Tuple([uop_1099,])
output2 = relay.Tuple([uop_1101,])
func_1102 = relay.Function([], output)
mod['func_1102'] = func_1102
mod = relay.transform.InferType()(mod)
output = func_1102()
func_1103 = relay.Function([], output)
mutated_mod['func_1103'] = func_1103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_687_call = mod.get_global_var('func_687')
func_688_call = mutated_mod.get_global_var('func_688')
call_1115 = relay.TupleGetItem(func_687_call(), 4)
call_1116 = relay.TupleGetItem(func_688_call(), 4)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
call_1133 = relay.TupleGetItem(func_218_call(relay.reshape(call_1115.astype('float64'), [1600,])), 0)
call_1134 = relay.TupleGetItem(func_220_call(relay.reshape(call_1115.astype('float64'), [1600,])), 0)
output = relay.Tuple([call_1115,call_1133,])
output2 = relay.Tuple([call_1116,call_1134,])
func_1139 = relay.Function([], output)
mod['func_1139'] = func_1139
mod = relay.transform.InferType()(mod)
mutated_mod['func_1139'] = func_1139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1139_call = mutated_mod.get_global_var('func_1139')
call_1140 = func_1139_call()
output = call_1140
func_1141 = relay.Function([], output)
mutated_mod['func_1141'] = func_1141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_1225 = func_971_call()
call_1226 = func_971_call()
output = call_1225
output2 = call_1226
func_1231 = relay.Function([], output)
mod['func_1231'] = func_1231
mod = relay.transform.InferType()(mod)
mutated_mod['func_1231'] = func_1231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1231_call = mutated_mod.get_global_var('func_1231')
call_1232 = func_1231_call()
output = call_1232
func_1233 = relay.Function([], output)
mutated_mod['func_1233'] = func_1233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_1397 = func_971_call()
call_1398 = func_971_call()
func_1139_call = mod.get_global_var('func_1139')
func_1141_call = mutated_mod.get_global_var('func_1141')
call_1400 = relay.TupleGetItem(func_1139_call(), 1)
call_1401 = relay.TupleGetItem(func_1141_call(), 1)
const_1406 = relay.const([[[False,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True],[True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True],[False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False],[True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True],[True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True],[False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,False],[False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,False],[True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,True],[True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False],[False,True,False,True,False,True,True,True,True,False,False,False,True,True,True,False]],[[False,True,True,False,False,False,True,False,False,True,False,False,True,True,False,True],[False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True],[False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False],[True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True],[False,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True],[True,False,False,False,True,True,False,False,False,False,False,True,True,True,False,True],[True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True],[True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True],[False,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True],[True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True]],[[True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,True],[False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False],[False,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True],[False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,False],[True,False,False,False,True,True,False,False,True,True,False,False,False,False,False,True],[True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True],[False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True],[True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False],[False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True],[False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,False]],[[False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False],[False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,False],[False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True],[False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True],[False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True],[True,True,True,False,False,False,True,True,False,False,False,True,True,True,False,True],[False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False],[True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True],[False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True],[False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False]],[[True,False,True,False,False,False,False,False,True,True,False,True,True,False,True,True],[False,False,True,False,True,True,False,False,False,False,True,False,False,True,False,True],[True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False],[False,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True],[True,True,False,True,False,False,False,False,False,False,False,False,False,False,True,False],[True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,True],[False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False],[False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,True],[False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False],[False,True,False,False,True,True,False,True,False,True,True,True,False,True,True,False]],[[True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True],[True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True],[False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False],[True,False,False,False,False,False,True,True,False,False,False,False,True,True,False,True],[False,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False],[True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False],[True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,True],[True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True],[True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False],[True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True]],[[True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True],[False,True,True,False,False,False,False,False,False,True,True,False,False,False,True,False],[True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False],[True,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False],[True,True,True,True,True,True,True,False,True,False,False,True,False,False,True,False],[False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False],[False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True],[True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False],[False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False],[False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,False]],[[False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True],[False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True],[True,True,True,False,False,False,True,True,False,False,False,True,True,True,False,True],[True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False],[False,True,False,False,True,True,True,True,True,True,False,True,False,True,False,False],[False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True],[False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True],[True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False],[True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True],[True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False]],[[False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,True],[True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,False],[True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True],[True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True],[True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,False],[True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True],[True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False],[True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False],[False,False,False,False,False,False,False,False,True,True,True,False,False,False,False,False],[False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True]],[[True,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True],[False,True,True,True,True,True,True,False,False,False,False,True,True,False,False,True],[True,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False],[True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False],[True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True],[False,True,False,False,False,True,False,True,False,True,False,False,True,True,False,False],[False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False],[False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,True],[False,False,True,True,False,False,True,True,False,False,True,False,True,True,False,True],[False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,False]]], dtype = "bool")#candidate|1406|(10, 10, 16)|const|bool
bop_1407 = relay.logical_or(call_1397.astype('bool'), relay.reshape(const_1406.astype('bool'), relay.shape_of(call_1397))) # shape=(10, 10, 16)
bop_1410 = relay.logical_or(call_1398.astype('bool'), relay.reshape(const_1406.astype('bool'), relay.shape_of(call_1398))) # shape=(10, 10, 16)
uop_1414 = relay.sqrt(call_1400.astype('float32')) # shape=(6, 5, 10)
uop_1416 = relay.sqrt(call_1401.astype('float32')) # shape=(6, 5, 10)
func_1102_call = mod.get_global_var('func_1102')
func_1103_call = mutated_mod.get_global_var('func_1103')
call_1422 = relay.TupleGetItem(func_1102_call(), 0)
call_1423 = relay.TupleGetItem(func_1103_call(), 0)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_1435 = relay.TupleGetItem(func_120_call(), 0)
call_1436 = relay.TupleGetItem(func_122_call(), 0)
func_482_call = mod.get_global_var('func_482')
func_483_call = mutated_mod.get_global_var('func_483')
call_1439 = func_482_call()
call_1440 = func_482_call()
var_1441 = relay.var("var_1441", dtype = "int64", shape = (6, 5, 10))#candidate|1441|(6, 5, 10)|var|int64
bop_1442 = relay.bitwise_and(call_1435.astype('uint64'), relay.reshape(var_1441.astype('uint64'), relay.shape_of(call_1435))) # shape=(6, 5, 10)
bop_1445 = relay.bitwise_and(call_1436.astype('uint64'), relay.reshape(var_1441.astype('uint64'), relay.shape_of(call_1436))) # shape=(6, 5, 10)
output = relay.Tuple([bop_1407,uop_1414,call_1422,call_1439,bop_1442,])
output2 = relay.Tuple([bop_1410,uop_1416,call_1423,call_1440,bop_1445,])
func_1446 = relay.Function([var_1441,], output)
mod['func_1446'] = func_1446
mod = relay.transform.InferType()(mod)
var_1447 = relay.var("var_1447", dtype = "int64", shape = (6, 5, 10))#candidate|1447|(6, 5, 10)|var|int64
output = func_1446(var_1447)
func_1448 = relay.Function([var_1447], output)
mutated_mod['func_1448'] = func_1448
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1459 = relay.var("var_1459", dtype = "float64", shape = (15, 7, 13))#candidate|1459|(15, 7, 13)|var|float64
uop_1460 = relay.asinh(var_1459.astype('float64')) # shape=(15, 7, 13)
output = uop_1460
output2 = uop_1460
func_1465 = relay.Function([var_1459,], output)
mod['func_1465'] = func_1465
mod = relay.transform.InferType()(mod)
var_1466 = relay.var("var_1466", dtype = "float64", shape = (15, 7, 13))#candidate|1466|(15, 7, 13)|var|float64
output = func_1465(var_1466)
func_1467 = relay.Function([var_1466], output)
mutated_mod['func_1467'] = func_1467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1231_call = mod.get_global_var('func_1231')
func_1233_call = mutated_mod.get_global_var('func_1233')
call_1542 = func_1231_call()
call_1543 = func_1231_call()
func_1013_call = mod.get_global_var('func_1013')
func_1016_call = mutated_mod.get_global_var('func_1016')
const_1547 = relay.const(5, dtype = "uint8")#candidate|1547|()|const|uint8
var_1548 = relay.var("var_1548", dtype = "uint8", shape = (330,))#candidate|1548|(330,)|var|uint8
call_1546 = func_1013_call(relay.reshape(const_1547.astype('uint8'), []), relay.reshape(var_1548.astype('uint8'), [10, 11, 3]), )
call_1549 = func_1013_call(relay.reshape(const_1547.astype('uint8'), []), relay.reshape(var_1548.astype('uint8'), [10, 11, 3]), )
func_482_call = mod.get_global_var('func_482')
func_483_call = mutated_mod.get_global_var('func_483')
call_1557 = func_482_call()
call_1558 = func_482_call()
output = relay.Tuple([call_1542,call_1546,const_1547,var_1548,call_1557,])
output2 = relay.Tuple([call_1543,call_1549,const_1547,var_1548,call_1558,])
func_1562 = relay.Function([var_1548,], output)
mod['func_1562'] = func_1562
mod = relay.transform.InferType()(mod)
var_1563 = relay.var("var_1563", dtype = "uint8", shape = (330,))#candidate|1563|(330,)|var|uint8
output = func_1562(var_1563)
func_1564 = relay.Function([var_1563], output)
mutated_mod['func_1564'] = func_1564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_687_call = mod.get_global_var('func_687')
func_688_call = mutated_mod.get_global_var('func_688')
call_1598 = relay.TupleGetItem(func_687_call(), 1)
call_1599 = relay.TupleGetItem(func_688_call(), 1)
func_412_call = mod.get_global_var('func_412')
func_418_call = mutated_mod.get_global_var('func_418')
var_1601 = relay.var("var_1601", dtype = "uint64", shape = (495,))#candidate|1601|(495,)|var|uint64
var_1602 = relay.var("var_1602", dtype = "float64", shape = (1600,))#candidate|1602|(1600,)|var|float64
call_1600 = relay.TupleGetItem(func_412_call(relay.reshape(var_1601.astype('uint64'), [15, 3, 11]), relay.reshape(var_1601.astype('uint64'), [15, 3, 11]), relay.reshape(var_1602.astype('float64'), [1600,]), relay.reshape(var_1602.astype('int16'), [1600,]), ), 4)
call_1603 = relay.TupleGetItem(func_418_call(relay.reshape(var_1601.astype('uint64'), [15, 3, 11]), relay.reshape(var_1601.astype('uint64'), [15, 3, 11]), relay.reshape(var_1602.astype('float64'), [1600,]), relay.reshape(var_1602.astype('int16'), [1600,]), ), 4)
output = relay.Tuple([call_1598,call_1600,var_1601,var_1602,])
output2 = relay.Tuple([call_1599,call_1603,var_1601,var_1602,])
func_1613 = relay.Function([var_1601,var_1602,], output)
mod['func_1613'] = func_1613
mod = relay.transform.InferType()(mod)
var_1614 = relay.var("var_1614", dtype = "uint64", shape = (495,))#candidate|1614|(495,)|var|uint64
var_1615 = relay.var("var_1615", dtype = "float64", shape = (1600,))#candidate|1615|(1600,)|var|float64
output = func_1613(var_1614,var_1615,)
func_1616 = relay.Function([var_1614,var_1615,], output)
mutated_mod['func_1616'] = func_1616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_482_call = mod.get_global_var('func_482')
func_483_call = mutated_mod.get_global_var('func_483')
call_1648 = func_482_call()
call_1649 = func_482_call()
output = call_1648
output2 = call_1649
func_1650 = relay.Function([], output)
mod['func_1650'] = func_1650
mod = relay.transform.InferType()(mod)
output = func_1650()
func_1651 = relay.Function([], output)
mutated_mod['func_1651'] = func_1651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1102_call = mod.get_global_var('func_1102')
func_1103_call = mutated_mod.get_global_var('func_1103')
call_1652 = relay.TupleGetItem(func_1102_call(), 0)
call_1653 = relay.TupleGetItem(func_1103_call(), 0)
output = relay.Tuple([call_1652,])
output2 = relay.Tuple([call_1653,])
func_1670 = relay.Function([], output)
mod['func_1670'] = func_1670
mod = relay.transform.InferType()(mod)
mutated_mod['func_1670'] = func_1670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1670_call = mutated_mod.get_global_var('func_1670')
call_1671 = func_1670_call()
output = call_1671
func_1672 = relay.Function([], output)
mutated_mod['func_1672'] = func_1672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_872_call = mod.get_global_var('func_872')
func_873_call = mutated_mod.get_global_var('func_873')
call_1673 = relay.TupleGetItem(func_872_call(), 0)
call_1674 = relay.TupleGetItem(func_873_call(), 0)
output = relay.Tuple([call_1673,])
output2 = relay.Tuple([call_1674,])
func_1699 = relay.Function([], output)
mod['func_1699'] = func_1699
mod = relay.transform.InferType()(mod)
mutated_mod['func_1699'] = func_1699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1699_call = mutated_mod.get_global_var('func_1699')
call_1700 = func_1699_call()
output = call_1700
func_1701 = relay.Function([], output)
mutated_mod['func_1701'] = func_1701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
call_1727 = relay.TupleGetItem(func_847_call(), 1)
call_1728 = relay.TupleGetItem(func_849_call(), 1)
func_559_call = mod.get_global_var('func_559')
func_563_call = mutated_mod.get_global_var('func_563')
const_1741 = relay.const([7,-10,-2,-9,6,3,-2,-8,10,4,-10,7,2,9,-10,-3,10,-5,6,7,1,3,6,-6,-7,-6,9,-5,5,-8,-6,-9,4,1,9,-3,-9,2,2,-4,6,-5,5,7,-4,6,-6,8,-10,2,-6,8,1,-3,-7,1,-6,10,6,3,2,10,6,-8,7,-6,2,10,-5,8,9,5,8,9,3,-2,5,3,-9,8,8,1,-9,7,4,-5,-7,-10,-8,-8,5,7,1,-9,-8,6,-2,-8,-8,6,10,-4,-4,3,5,6,-9,-8,-3,-3,-6,9,-6,9,-1,5,-8,10,5,-5,-5,8,6,-6,-3,-9,8,6,-4,9,10,7,-4,10,-2,-10,8,1,-6,-2,-6,7,-9,-1,8,6,-5,-7,-2,10,6,1,10,9,-10,6,-1,1,5,-3,-1,2,4,7,-8,1,9,-7,5,6,6,3,-4,-9,6,4,1,-3,9,2,-7,3,-7,6,8,-9,-3,-4,-9,-7,-5,2,1,2,7,7,-6,-1,-1,-7,8,-3,-8,-9,-2,-2,9,2,3,-10,-7,-6,7,8,-4,-9,10,-3,-1,-5,-1,9,-5,10,6,-10,-6,7,-4,3,9,2,6,-8,-10,-1,4,-10,10,6,-9,10,-3,-1,2,-6,-8,10,6,2,-3,-4,2,5,-4,-9,-9,8,-7,-2,-5,-10,9,-8,10,-8,2,1,7,-7,8,2,6,-3,1,2,6,-8,5,-9,-5,-7,10,-2,-3,6,4,3,9,2,1,-5,-7,-1,8,-7,-8,1,-4,7,-3,-1,2,-8,-9,-1,6,7,-9,-8,-10,-2,-9,8,-8,-3,7,-8,9,10,-8,-10,8,-10,8,4,2,8,-10,7,1,-1,-5,7,-6,-1,1,9,-9,-6,6,4,-5,9,9,5,5,8,6,-3,-4,7,6,-5,-6,3,-1,9,-9,3,-6,10,8,-1,-3,5,1,-5,9,-3,10,-6,-4,9,5,3,-4,-5,1,5,2,-3,3,1,9,6,1,10,-8,1,1,-7,7,7,9,3,-1,4,6,5,-1,-3,-4,-10,-2,-8,-4,-9,-8,-10,8,6,-2,3,-8,-3,1,3,-1,-8,1,7,10,8,-4,-2,-4,2,-1,-3,-5,-9,-2,-10,5,-5,3,-4,2,10,10,8,4,-9,-5,5,-9,-4,7,4,-3,10,5,-10,6,2,-4,2,-10,-3,5,3,-10,-7,-5,1,-3,4,3,-6,-4,6,9,-5,1,4,-4,4,-5,3,5,8,4,-8,7,-5,2,-10,1,2,1,-10,2,-1,6], dtype = "uint64")#candidate|1741|(495,)|const|uint64
call_1740 = relay.TupleGetItem(func_559_call(relay.reshape(const_1741.astype('uint64'), [495,]), relay.reshape(call_1727.astype('float64'), [1600,]), ), 7)
call_1742 = relay.TupleGetItem(func_563_call(relay.reshape(const_1741.astype('uint64'), [495,]), relay.reshape(call_1727.astype('float64'), [1600,]), ), 7)
func_559_call = mod.get_global_var('func_559')
func_563_call = mutated_mod.get_global_var('func_563')
call_1743 = relay.TupleGetItem(func_559_call(relay.reshape(const_1741.astype('uint64'), [495,]), relay.reshape(call_1727.astype('float64'), [1600,]), ), 5)
call_1744 = relay.TupleGetItem(func_563_call(relay.reshape(const_1741.astype('uint64'), [495,]), relay.reshape(call_1727.astype('float64'), [1600,]), ), 5)
output = relay.Tuple([call_1727,call_1740,const_1741,call_1743,])
output2 = relay.Tuple([call_1728,call_1742,const_1741,call_1744,])
func_1763 = relay.Function([], output)
mod['func_1763'] = func_1763
mod = relay.transform.InferType()(mod)
mutated_mod['func_1763'] = func_1763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1763_call = mutated_mod.get_global_var('func_1763')
call_1764 = func_1763_call()
output = call_1764
func_1765 = relay.Function([], output)
mutated_mod['func_1765'] = func_1765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1670_call = mod.get_global_var('func_1670')
func_1672_call = mutated_mod.get_global_var('func_1672')
call_1768 = relay.TupleGetItem(func_1670_call(), 0)
call_1769 = relay.TupleGetItem(func_1672_call(), 0)
output = call_1768
output2 = call_1769
func_1783 = relay.Function([], output)
mod['func_1783'] = func_1783
mod = relay.transform.InferType()(mod)
output = func_1783()
func_1784 = relay.Function([], output)
mutated_mod['func_1784'] = func_1784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_717_call = mod.get_global_var('func_717')
func_718_call = mutated_mod.get_global_var('func_718')
call_1788 = relay.TupleGetItem(func_717_call(), 0)
call_1789 = relay.TupleGetItem(func_718_call(), 0)
output = relay.Tuple([call_1788,])
output2 = relay.Tuple([call_1789,])
func_1790 = relay.Function([], output)
mod['func_1790'] = func_1790
mod = relay.transform.InferType()(mod)
mutated_mod['func_1790'] = func_1790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1790_call = mutated_mod.get_global_var('func_1790')
call_1791 = func_1790_call()
output = call_1791
func_1792 = relay.Function([], output)
mutated_mod['func_1792'] = func_1792
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1799 = relay.const([[[-2.887774,7.173047,5.142731,3.075998,1.219058,-2.235659],[-5.141306,-6.846530,3.577905,-2.482174,-5.336603,4.610178]],[[-3.416123,7.412240,7.422234,-6.599178,3.313813,-2.711590],[8.697037,-4.657268,-6.191372,-6.959207,-8.821782,8.735943]],[[5.796741,9.836623,-1.504435,-9.087511,0.963029,6.774777],[-5.778198,-5.828297,-7.946996,-4.192616,1.627175,-2.658475]],[[-4.968346,-4.985356,3.397111,-7.388135,-0.322039,5.563982],[4.890851,7.656125,9.861068,1.619174,-8.721119,5.361484]],[[-6.903995,-7.420732,-5.555298,-3.056505,-2.911831,-0.828501],[-6.346553,-5.606630,-0.689575,-6.514690,6.652674,-9.004273]],[[-5.376155,-8.978563,-0.171308,9.536753,0.456558,-8.956466],[5.645387,-3.725581,4.524618,8.048076,-0.755986,-5.318248]],[[5.443028,-5.062008,6.352322,1.249782,-6.856715,-7.601534],[-4.969752,5.607356,-0.108028,6.854140,-4.837764,0.921572]],[[-1.977160,-6.217213,-3.325087,-7.423873,2.917513,-4.654521],[5.494169,-5.174214,6.176678,-7.297876,7.252850,9.166843]],[[5.633979,2.785587,2.963278,-0.608311,9.420881,-8.586548],[6.071015,-8.072772,8.095452,1.707991,-3.426372,-3.023005]],[[2.512328,9.544190,-5.794010,-4.853365,-1.465653,-4.834316],[-5.950967,4.549077,7.892642,9.570267,-4.094079,7.710262]],[[-7.599922,9.351458,-5.512031,-3.440987,-5.622744,-9.187084],[-1.037380,2.716290,-0.482313,-9.581583,-8.869541,0.759664]],[[2.991717,-4.261612,-0.996289,6.438007,1.617428,3.430880],[-6.772758,6.733251,-2.422751,-3.789555,-1.852679,6.702478]],[[3.854722,7.675738,1.800221,7.166396,5.345522,0.438623],[6.270026,-9.351991,9.910692,-9.242776,2.552928,-2.192555]],[[-1.862123,-3.939217,-2.200425,2.863740,-9.768123,6.464824],[8.136612,-3.720518,8.084170,-5.404534,6.728574,5.972063]]], dtype = "float32")#candidate|1799|(14, 2, 6)|const|float32
uop_1800 = relay.acosh(const_1799.astype('float32')) # shape=(14, 2, 6)
output = uop_1800
output2 = uop_1800
func_1815 = relay.Function([], output)
mod['func_1815'] = func_1815
mod = relay.transform.InferType()(mod)
mutated_mod['func_1815'] = func_1815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1815_call = mutated_mod.get_global_var('func_1815')
call_1816 = func_1815_call()
output = call_1816
func_1817 = relay.Function([], output)
mutated_mod['func_1817'] = func_1817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1084_call = mod.get_global_var('func_1084')
func_1085_call = mutated_mod.get_global_var('func_1085')
call_1826 = relay.TupleGetItem(func_1084_call(), 0)
call_1827 = relay.TupleGetItem(func_1085_call(), 0)
output = relay.Tuple([call_1826,])
output2 = relay.Tuple([call_1827,])
func_1841 = relay.Function([], output)
mod['func_1841'] = func_1841
mod = relay.transform.InferType()(mod)
mutated_mod['func_1841'] = func_1841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mutated_mod.get_global_var('func_1841')
call_1842 = func_1841_call()
output = call_1842
func_1843 = relay.Function([], output)
mutated_mod['func_1843'] = func_1843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1139_call = mod.get_global_var('func_1139')
func_1141_call = mutated_mod.get_global_var('func_1141')
call_1847 = relay.TupleGetItem(func_1139_call(), 0)
call_1848 = relay.TupleGetItem(func_1141_call(), 0)
output = call_1847
output2 = call_1848
func_1849 = relay.Function([], output)
mod['func_1849'] = func_1849
mod = relay.transform.InferType()(mod)
output = func_1849()
func_1850 = relay.Function([], output)
mutated_mod['func_1850'] = func_1850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_872_call = mod.get_global_var('func_872')
func_873_call = mutated_mod.get_global_var('func_873')
call_1858 = relay.TupleGetItem(func_872_call(), 0)
call_1859 = relay.TupleGetItem(func_873_call(), 0)
uop_1862 = relay.log2(call_1858.astype('float32')) # shape=(6, 5, 10)
uop_1864 = relay.log2(call_1859.astype('float32')) # shape=(6, 5, 10)
func_1102_call = mod.get_global_var('func_1102')
func_1103_call = mutated_mod.get_global_var('func_1103')
call_1870 = relay.TupleGetItem(func_1102_call(), 0)
call_1871 = relay.TupleGetItem(func_1103_call(), 0)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_1874 = relay.TupleGetItem(func_120_call(), 0)
call_1875 = relay.TupleGetItem(func_122_call(), 0)
bop_1884 = relay.less_equal(call_1874.astype('bool'), relay.reshape(call_1858.astype('bool'), relay.shape_of(call_1874))) # shape=(6, 5, 10)
bop_1887 = relay.less_equal(call_1875.astype('bool'), relay.reshape(call_1859.astype('bool'), relay.shape_of(call_1875))) # shape=(6, 5, 10)
func_1763_call = mod.get_global_var('func_1763')
func_1765_call = mutated_mod.get_global_var('func_1765')
call_1898 = relay.TupleGetItem(func_1763_call(), 2)
call_1899 = relay.TupleGetItem(func_1765_call(), 2)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
const_1902 = relay.const([-3.675570,-1.935280,6.035497,-2.352727,7.985717,-7.468721,-9.216608,1.490939,-8.304604,8.744207,-4.822990,-8.674411,5.390765,4.205792,-5.111984,-5.863791,-4.845635,4.519703,-4.951977,-8.055906,-6.376027,-0.390950,8.641384,2.207031,0.220988,8.604695,9.469107,4.738115,-8.987503,-7.112399,-9.984157,3.509053,0.934210,-0.819403,-2.854918,5.025516,-8.814165,-5.181441,-6.799016,4.158040,-6.179405,2.519315,-8.196077,-1.674389,1.892034,6.382741,-1.780027,-6.457051,0.733307,4.205692,5.161599,-2.185149,-3.288654,6.053080,9.676282,-0.325414,2.146043,1.119037,-5.020767,-1.618216,-5.571277,5.667452,-0.433676,6.151350,-5.363431,9.088013,9.685414,9.005507,-6.509506,-2.932962,6.415673,9.004536,-5.343382,-9.925189,5.239006,-5.693696,-5.821836,-0.656304,8.479337,-1.513309,-7.428066,4.731582,-1.820915,6.220217,3.179665,-8.306089,-7.206558,0.758782,-0.949406,6.777681,-3.848973,-7.509157,9.615453,0.528131,-4.152505,-5.876470,-4.982829,-5.618683,3.304760,6.206887,-5.364381,2.601354,-1.357853,2.010389,0.727011,-5.004720,5.630485,-9.489541,0.175580,5.038882,-0.953009,-3.266349,-0.429694,3.751702,-5.482111,-8.965340,-2.638044,6.997397,9.163795,8.069257,1.095678,-9.695719,-7.865887,9.080756,9.861641,5.312957,-1.862481,-6.013508,2.907721,-5.724964,-7.452032,-7.308613,3.769866,2.656725,-3.427877,9.670474,-4.868427,-2.555531,-1.722531,-2.369360,5.491800,4.738986,7.287698,-3.283265,7.510584,-2.536685,3.604092,-4.999921,-9.793079,6.093331,8.418540,-4.205404,7.883810,-0.862813,-0.864270,7.946008,1.144965,-5.692389,-4.324292,2.155651,4.428113,0.130627,-3.585746,7.939911,-8.928645,3.156278,6.635701,9.007902,8.223302,9.733064,2.698093,1.116505,7.607287,2.218349,-8.230915,-7.498279,5.015579,-7.490782,0.082570,-6.708909,1.593106,8.482420,-1.313509,4.805660,4.786594,1.676033,3.687025,8.092751,-1.958863,-9.531803,3.548804,3.897626,-7.565363,-8.747317,3.321531,6.449421,-4.476504,-0.425611,-1.262979,-0.909139,-6.004182,-9.734844,-2.935179,-3.554857,-4.700819,4.070167,1.710834,-1.869701,6.437069,-6.423102,-5.576560,8.408560,-7.833144,8.380944,3.372758,-6.978977,3.875648,7.959592,-6.427425,5.314151,-7.787288,-9.709592,3.827759,8.104433,8.732293,2.861161,-2.464069,4.103574,-0.098685,1.861523,-9.304443,0.907968,-7.348283,-8.508500,8.117143,6.462623,-5.181592,4.312039,8.137326,-5.616349,-3.942484,-4.408364,-5.086529,-1.561090,-0.927016,-6.586599,2.761071,-6.887774,-2.272226,8.675504,-8.995225,0.389128,-9.207958,-3.220359,-8.242284,2.789973,2.866021,4.282996,7.916099,-3.384830,9.404111,-5.446652,4.876973,-6.622257,7.415718,3.997278,-0.686493,8.418919,3.860090,-0.852019,-3.855545,6.850525,1.980044,-6.290820,-9.025037,-5.673630,4.911218,-6.692215,-3.260719,3.914262,-7.118595,3.432444,9.718947,-0.604081,3.651562,-5.794173,-7.531017,7.474240,-4.542576,-5.354896,-8.863809,-6.717089,4.730349,-4.721024,3.832622,-4.260914,-6.736955,4.505082,-4.044604,4.464603,-2.615100,4.967402,2.260974,0.206819,-8.679668,-4.526338,-9.838461,2.591856,8.995659,3.072836,3.281007,8.297667,-5.184679,6.689197,-6.865139,-7.457527,4.292244,7.628411,-0.440087,-6.582935,-0.231528,5.818419,-3.050598,-0.311529,5.814353,-8.620948,1.689911,-1.269891,-3.411454,-9.521731,-4.526436,-0.085521,2.960069,-4.678351,-8.720713,-8.148074,1.809310,9.267899,-6.139375,-8.344784,-4.541349,-4.184233,-0.376672,0.278915,6.420068,8.134560,-1.362354,6.564134,8.154946,4.049160,-0.746308,-4.216629,1.075360,6.226146,2.169601,9.622601,5.488225,-5.112049,4.041010,-7.185285,4.173381,-8.564970,6.202093,1.757136,-0.612312,-0.757557,3.169198,-5.965740,2.379061,-9.964884,2.469670,-2.776453,-3.787934,-2.325536,-6.718301,-6.802110,-5.315138,3.827441,-8.156543,-8.053966,5.275537,1.594877,4.380091,7.144758,-9.819408,-3.476373,-2.248050,-1.618024,4.293910,-7.717868,6.901295,1.529447,0.122006,-3.000612,-0.421734,-2.886421,0.348982,-0.684775,-2.566943,5.693665,0.024272,-4.546541,-9.393016,-3.874289,-2.606516,8.411035,5.574936,9.741497,9.273482,-5.314877,8.733943,0.359578,9.503959,4.043070,-5.531319,-0.286382,-0.855867,8.812993,5.160888,-1.289878,-8.063907,7.498066,8.917297,-1.758176,-8.284923,-4.857278,-9.264591,7.015990,1.731669,1.955010,3.231449,9.587380,-6.399376,2.431585,6.738857,8.901887,3.029677,7.291832,-8.703076,-6.432964,5.945360,-0.313817,-4.738958,8.842482,-2.687969,3.753843,-3.869669,-5.240248,8.272796,-8.226793,0.626564,-0.408865,-1.344220,1.239433,-4.554186,-9.617533,-3.397199,7.293046,-5.990326,-9.409684,6.129970,-3.144088,1.683385,-7.118914,-2.829727,5.539687,9.899236,2.965830,8.597257,-6.802148,-8.132446,4.303510,5.951336,1.968110,6.746216,-2.985541,-9.285607,-5.691274,4.461143,-5.583449,2.107179,-5.036567,-1.849618,1.863760,-6.399596,6.759489,-9.255562,-4.974553,7.095535,7.418786,2.749463,7.761389,-1.350497,3.114884,-7.122395,-2.335105,8.429628,-0.948946,-1.186942,-2.087378,2.086485,7.325345,-8.215170,4.545946,4.104094,7.017689,7.442313,-9.043340,-6.951282,0.993770,-9.415751,2.196866,-4.318466,2.113734,6.869253,-2.041478,1.572168,-5.065176,2.393745,1.242759,-7.764673,4.186480,1.362755,3.775314,-8.346314,-2.120528,-4.834245,-4.055153,-8.851518,3.272194,4.851427,-0.612589,3.768434,4.763361,1.292463,-3.988574,2.672810,9.662036,3.889419,-0.972467,9.489369,-3.836386,-6.244190,3.233372,-0.116435,-6.436404,-3.847849,-3.130127,7.531875,-1.518734,-1.736182,-5.647927,-9.357584,-2.339676,1.184087,1.209743,-3.449582,-7.203356,4.752737,8.107681,6.236107,8.199221,-4.027651,0.001843,8.576366,-6.248470,-5.512214,9.783565,-4.851589,1.172845,2.476464,7.054850,-7.120879,-5.347217,4.123050,-9.936899,-1.603936,-9.646119,5.704647,-7.516857,6.298459,6.883198,-6.324118,-4.191563,-9.845093,-6.050860,3.504489,7.437118,9.193408,1.134080,6.852514,5.412432,2.823006,4.474209,-7.336289,-1.369695,-1.227367,0.805600,-7.490666,-8.223608,5.753695,-9.968101,-5.153411,4.070862,-0.696773,-8.577169,-1.415973,4.557531,7.579326,-4.930066,-8.702722,1.590151,-1.690748,5.553673,-9.845621,-5.085906,-9.075168,-6.907686,-1.635333,7.474728,-8.213147,0.252321,5.129596,7.274781,4.439080,-7.479552,-4.696196,-5.349913,2.601086,0.502939,1.087350,0.176572,3.621691,-2.758460,0.787516,-6.803977,3.901251,-1.142238,-1.988982,5.907426,-4.604039,8.813429,2.715632,9.425865,-2.468677,6.816002,-9.442194,9.392670,-4.201890,-9.135696,7.726214,-9.214531,-7.858331,-5.130384,-5.225609,-5.166037,7.663171,4.625583,6.635387,7.290795,3.981273,-7.969004,-4.802684,8.213717,6.168662,-5.729432,-2.663897,-2.832924,-5.153753,6.438881,-1.140272,9.292720,-2.700067,7.670454,0.973094,8.016339,3.617305,3.120987,4.905215,-3.302828,-5.001457,-9.577409,3.351631,8.066131,3.934577,-0.919924,-2.712010,2.337117,-2.211410,-9.669061,-4.229139,6.716346,0.264499,1.233918,2.022590,-3.354201,-3.171686,1.827880,8.166934,4.410557,2.546115,-6.933255,8.151681,-3.168845,-6.109418,-0.441254,-3.663873,-8.311947,-0.953145,5.192495,-7.153075,1.382750,-3.572061,-8.471311,6.355094,-4.177803,-5.158412,-2.854693,-9.509536,1.318415,4.775078,1.062173,0.655676,-0.326908,8.931368,-7.571644,3.273612,7.851813,-6.907075,5.039482,6.800874,-2.691314,-0.826527,-5.622178,-1.493999,-7.105736,8.024884,8.298574,8.665691,-0.530758,9.825841,-9.541327,-3.555174,-2.866797,-1.194996,-3.287857,3.749207,6.801863,7.279092,9.807524,9.970713,9.754470,1.948145,-4.266533,-3.812756,-0.622538,3.659386,-0.139627,-5.445498,-3.035969,-5.764324,-3.969927,2.639736,-3.845136,6.876372,-2.604741,0.920694,9.621142,5.994238,7.985704,-9.860158,9.199164,9.571867,3.001242,8.852829,-1.173183,-9.533902,8.472643,-5.644017,-7.846873,5.975145,-5.627977,7.196961,-5.286162,7.498127,-1.892468,8.884753,6.768848,-7.738789,-1.110219,-8.992881,4.035639,8.656735,9.096590,-1.351541,-7.860721,-8.967666,-8.243450,-0.994069,-3.092892,5.626394,-1.231431,9.416356,7.346227,-2.533524,7.195468,-9.203469,-8.712143,5.713282,4.203542,6.719636,-0.076243,-2.882086,8.371853,5.496261,6.638170,3.606282,9.077914,3.798801,-3.988912,-4.828854,4.727760,-3.829846,-4.944786,4.739492,-1.113430,2.638227,-6.055605,4.179051,7.039022,-9.380073,8.638071,-3.906015,-5.203174,2.082056,6.128180,-7.096592,-3.819066,-2.232482,-7.587970,-3.771364,8.115960,5.164489,-2.039497,1.877897,3.775411,-7.139622,6.980206,5.830172,-8.734076,-1.254528,-2.722455,-8.836526,-9.554927,-0.011242,-9.884828,4.639393,-5.180450,-9.333419,2.993837,-5.251908,9.176925,-7.471601,6.416063,-7.240619,-4.807131,-6.766472,9.197656,-6.785762,2.164646,-1.304215,5.153111,2.856483,7.330841,-6.041060,-2.742153,3.378495,2.746567,-7.698578,-6.529276,8.753228,-2.538545,2.844850,-0.330483,2.459581,-5.312263,-1.164565,0.834368,-5.180435,0.875302,6.868643,1.515649,9.605363,-8.831771,-4.534490,-7.238058,-1.190692,9.115863,-7.415414,7.345297,7.173166,7.283677,0.946601,-4.955995,8.703852,9.391976,3.346858,-5.905443,1.802077,-9.114928,7.269830,7.144702,0.761359,8.813067,5.284807,9.321679,2.970401,-8.246305,3.203094,-1.469540,-0.738641,-6.093369,-3.476483,-4.941347,5.706765,8.737833,5.787121,-1.932590,6.539962,-1.546505,-3.596833,-1.003218,-6.776436,1.422503,0.463662,4.375952,9.733578,9.179542,-6.569851,3.003484,-8.943360,-6.656575,-4.132916,6.341609,-7.497119,-8.388276,5.455135,-0.877315,8.466518,-6.570741,2.428338,-5.906060,7.535821,0.921694,6.525922,3.885609,9.284419,1.302725,9.287923,-0.450098,-7.254915,-0.015667,6.861886,0.822373,-2.532517,6.315491,4.002661,-6.143366,3.073692,-0.525343,5.283353,-2.708918,3.856223,-1.010973,-1.967915,1.451591,7.004254,0.269721,-1.774549,3.732780,-6.496103,9.518914,-6.850494,-4.170472,0.759742,-8.404388,-9.109673,7.683195,-1.943643,-1.950104,-7.946571,1.405637,-5.397115,-5.519819,2.997435,3.330761,-1.708627,-7.165803,1.579821,-0.950795,2.788967,0.103837,-2.093366,-4.202729,-5.037846,3.904885,-7.402887,-1.447686,0.836902,6.351070,-4.972127,-7.221061,5.573489,4.732555,6.976937,7.804297,-1.493396,4.892921,-4.203485,3.682410,-1.182958,3.513694,9.571187,5.534823,5.890638,8.362605,-5.729459,-8.684211,-0.407646,-1.404458,-0.430915,2.398856,-3.146896,0.038130,-0.875211,7.753740,4.587750,2.261456,-8.609416,-8.120690,8.536228,5.334276,4.318223,-1.289724,9.821453,-3.235352,-7.697345,-9.575130,-7.665041,5.819757,-4.617988,4.567393,-3.771593,-3.806964,-5.258179,-1.300559,-3.919613,1.198781,9.964025,-5.586208,-6.217873,-0.578018,-2.296645,4.206543,-6.134872,8.501677,6.201270,0.641829,5.339028,-3.994482,-8.482749,0.953040,-7.417851,-1.424902,-7.884058,-3.228636,9.279260,-5.321506,1.550208,-7.020091,-7.462432,-1.626322,9.269999,1.278168,7.772108,-8.736413,-8.380776,-4.628154,-7.019209,6.702416,4.700872,2.697998,-2.035864,-3.369683,1.778319,-6.501532,-2.445890,1.860860,-9.169200,-0.669110,-8.464800,6.871221,1.967781,2.621852,-6.474163,-1.433206,-9.106226,9.864905,2.866077,-6.515710,-3.237518,8.475737,1.890682,-6.008910,9.846773,0.071179,8.012479,9.072440,-2.591087,-3.818905,2.434261,6.197295,-0.148046,-2.330977,-7.447359,-7.603999,6.513946,-1.001610,-6.467859,-1.759012,9.447503,2.963737,-2.475163,8.441535,8.385327,-9.710857,9.512611,-2.662181,-7.979451,6.916022,6.071618,7.159048,7.175350,6.951359,9.898879,-9.363473,7.508441,5.392747,-6.219317,0.439867,3.931158,-1.088871,9.875237,-1.083296,1.499974,-6.970647,-6.315533,-8.613993,7.657788,7.149844,9.256807,-6.855959,-4.943670,0.370963,-2.687566,-4.693244,-9.570358,-4.942477,-7.865001,8.314541,8.486628,-8.110798,5.929180,2.398815,6.758585,2.862149,-4.170305,4.275498,-3.941185,3.762617,2.283679,-4.164266,-2.230267,3.785604,6.458800,2.877009,7.619571,-9.569254,-2.827005,5.073810,4.260563,-9.151012,-1.256856,-9.674570,-1.797957,-9.810132,4.920724,9.409391,6.128852,-4.599189,0.020136,7.528620,-7.025202,-3.001982,-9.540449,-4.103052,-6.976246,3.717890,-2.946633,5.060456,-6.064541,1.813001,-2.127470,0.769374,7.522894,6.511319,4.775907,2.623037,-8.894882,-2.628768,-9.846547,-2.864307,-5.441440,7.729530,8.555393,7.796628,-6.417800,-9.424580,-8.798532,5.194371,7.256993,-4.331617,7.308869,-2.146942,6.709998,-0.336188,3.338870,6.824909,8.185681,7.702375,9.080491,-3.621914,4.545871,5.183971,-9.937189,6.158560,6.304746,0.100957,-1.099817,-3.940663,-0.236253,7.699424,-5.326255,7.450564,3.580951,-0.016538,-3.753051,4.908814,2.572668,7.864978,6.927461,-4.949273,-2.131542,3.531416,3.372460,6.089469,5.908362,-1.506679,2.088007,9.341404,-2.393715,3.079231,-6.286434,-5.846680,3.977277,2.412821,-7.839725,0.269620,8.676298,8.968777,5.620931,5.144306,7.419457,-8.171002,7.137537,-6.117417,3.610187,-3.100928,-0.483222,-6.268397,-9.018507,-6.360697,8.759436,-6.887407,-4.350056,8.307700,-8.442462,-2.543130,-0.497374,-1.107271,-6.677999,7.691823,-3.925982,7.685685,-6.600263,6.655868,-5.269689,-3.950171,2.068702,-4.016568,-2.264075,0.092128,-9.712776,8.204932,-2.732184,5.591536,-0.128844,3.210016,-6.597013,9.832612,-3.077151,-8.825642,-3.428674,-1.825359,3.603864,3.897173,-7.260383,-4.666262,4.470396,-7.447454,0.158316,-3.635180,-7.277118,-6.384895,2.850703,-9.799888,-1.212159,-7.538777,0.109833,5.984219,3.220625,-9.748758,7.269022,4.520903,-3.281918,8.092125,6.877825,8.909747,1.197651,-4.554372,5.051413,-3.761697,1.388615,-4.337732,1.894070,9.998541,0.003007,-6.112044,-8.238636,9.950891,6.136295,-9.577019,-1.721648,8.493642,-0.265892,-7.981416,-6.922530,9.686986,2.470101,-0.804617,7.012971,-7.337873,1.436226,-7.626398,-4.911930,4.923714,-5.271942,-5.801354,0.139773,-3.291119,6.237994,-1.041669,1.075924,-9.475769,2.788443,0.297290,-7.352823,7.030982,-2.014608,-2.248525,7.842680,2.970643,3.722039,7.329352,0.823950,-0.140447,-8.135521,-5.956052,8.673581,8.731708,5.858421,2.107858,-5.174443,1.422109,-4.319932,3.173152,8.206749,5.883914,-2.346060,-4.298041,-3.510281,-1.622914,0.949642,-9.054806,5.005421,3.662712,-9.400693,8.904712,-1.122923,-0.996764,-5.423811,-7.535446,-7.980874,-2.618667,-2.434073,-5.091425,-0.582365,-0.535329,8.293081,-0.542842,-8.799847,0.136205,-5.275326,2.157829,4.729831,-9.575699,7.479948,-1.549086,-6.492943,-2.495246,5.254359,-1.763311,4.214691,8.354807,8.515781,-3.550016,1.472952,9.163381,-2.000145,-0.972578,-0.303159,7.878645,-8.097310,5.271866,-5.074922,9.047363,-8.381113,0.226695,-4.671228,-6.983748,-7.055764,3.954951,-1.075231,-0.729108,2.040366,-1.883824,0.031108,9.242731,5.206082,-6.126913,-0.782972,4.353127,2.915620,7.628072,7.151056,-8.127545,-2.816515,-6.112304,-5.653022,0.290146,5.665658,3.154185,1.345508,-6.744850,8.932670,-2.141046,8.889195,-2.278652,4.314576,-2.350741,0.103978,-9.463103,8.771607,-5.182846,2.672289,3.834538,5.586999,8.728020,-9.722688,-1.210200,9.708969,2.763123,-6.280359,2.654344,6.935270,8.113628,-5.338354,-1.766577,-8.325830,0.980026,-2.664921,-6.760839,0.047052,-0.971552,-6.875338,4.787173,-1.476645,-8.885380,-0.663418,-6.689958,6.874802,-6.291580,9.844977,1.061058,6.093680,-1.035708,-5.987181,-5.511779,-9.722818,7.494231,5.274373,-8.277607,5.972219,-8.438931,6.066830,-7.916915,-5.545558,-7.245057,6.678422,0.089366,3.017709,6.198407,0.066420,7.521770,-6.022940,-4.556323,-4.012835,9.703673,1.415826,0.050613,-4.725302,0.884266,6.750449,2.117858,-8.781146,4.097147,-7.019688,0.127024,-9.910789,9.735340,4.049822,-0.374713,5.093478,4.838895,-8.266047,5.820507,-1.442975,5.433771,-9.027013,3.544868,-0.272751,-2.910938,2.273840,-6.943427,5.622350,-4.489877,4.348655,-1.363642,8.797737,7.690860,-7.404735,-5.632128,2.822826,-8.989918,-9.275139,-0.811971,4.875745,0.168721,-7.922529,-1.990568,-9.215525,-7.451888,-2.025220,-7.378782,9.039841,7.032164,-5.959510,-9.463375,8.818438,6.579491], dtype = "float64")#candidate|1902|(1600,)|const|float64
call_1901 = relay.TupleGetItem(func_218_call(relay.reshape(const_1902.astype('float64'), [1600,])), 1)
call_1903 = relay.TupleGetItem(func_220_call(relay.reshape(const_1902.astype('float64'), [1600,])), 1)
output = relay.Tuple([uop_1862,call_1870,bop_1884,call_1898,call_1901,const_1902,])
output2 = relay.Tuple([uop_1864,call_1871,bop_1887,call_1899,call_1903,const_1902,])
func_1908 = relay.Function([], output)
mod['func_1908'] = func_1908
mod = relay.transform.InferType()(mod)
mutated_mod['func_1908'] = func_1908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1908_call = mutated_mod.get_global_var('func_1908')
call_1909 = func_1908_call()
output = call_1909
func_1910 = relay.Function([], output)
mutated_mod['func_1910'] = func_1910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_482_call = mod.get_global_var('func_482')
func_483_call = mutated_mod.get_global_var('func_483')
call_1947 = func_482_call()
call_1948 = func_482_call()
var_1949 = relay.var("var_1949", dtype = "int64", shape = (6, 5, 10))#candidate|1949|(6, 5, 10)|var|int64
bop_1950 = relay.divide(call_1947.astype('float64'), relay.reshape(var_1949.astype('float64'), relay.shape_of(call_1947))) # shape=(6, 5, 10)
bop_1953 = relay.divide(call_1948.astype('float64'), relay.reshape(var_1949.astype('float64'), relay.shape_of(call_1948))) # shape=(6, 5, 10)
output = bop_1950
output2 = bop_1953
func_1963 = relay.Function([var_1949,], output)
mod['func_1963'] = func_1963
mod = relay.transform.InferType()(mod)
var_1964 = relay.var("var_1964", dtype = "int64", shape = (6, 5, 10))#candidate|1964|(6, 5, 10)|var|int64
output = func_1963(var_1964)
func_1965 = relay.Function([var_1964], output)
mutated_mod['func_1965'] = func_1965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1670_call = mod.get_global_var('func_1670')
func_1672_call = mutated_mod.get_global_var('func_1672')
call_2025 = relay.TupleGetItem(func_1670_call(), 0)
call_2026 = relay.TupleGetItem(func_1672_call(), 0)
const_2031 = relay.const([[[-5.404736,-3.601294,-5.645296,3.205797,6.249238,8.595243,1.203121,-0.480545,-4.333006,-5.869505],[-0.911204,6.987561,0.167281,-4.065015,6.239801,-0.228575,-7.403245,-5.963016,-2.104459,0.570627],[-4.571224,9.728623,4.647473,-3.805837,-6.866003,9.427528,5.621167,-4.593949,-4.388836,-2.633617],[-0.275476,4.537040,6.976933,6.173927,0.843429,-3.536858,4.115703,-8.502414,7.937434,5.312358],[4.607522,-2.022910,7.712134,-1.178423,9.037837,5.949332,7.740695,-5.348036,-4.016225,2.655172]],[[-6.985107,4.631658,3.381099,-9.020094,9.972726,-6.594569,-9.552572,7.990789,-7.972076,7.088299],[-1.770450,7.802823,-1.249007,-1.018156,-3.688799,-2.090401,6.922665,-4.578524,3.748934,9.471735],[-7.528029,-3.473444,9.135756,-5.809214,6.655417,7.214260,3.801114,0.681221,5.145350,-4.030442],[6.420700,-9.080576,0.272928,-8.860260,-0.808805,6.789353,2.632343,6.822008,7.732172,-7.830960],[-0.298794,-8.438424,5.264275,6.563800,0.388477,-4.529714,-3.730399,-5.822342,2.999473,9.653306]],[[-0.856337,0.288760,-3.001762,-8.466589,-9.305982,-9.317860,1.083602,-9.860888,-9.294986,6.751069],[-4.544358,9.510102,-5.354070,-6.416598,-0.758314,0.425515,-6.405155,-8.576099,-3.114844,-8.887525],[-7.762566,8.449523,7.542082,-1.379932,2.389570,0.811988,9.998652,-0.320891,-5.204902,8.575889],[-9.670308,-7.388166,1.373578,3.722631,1.082801,2.774539,-7.942709,5.473905,-5.813547,-0.540843],[7.189488,9.719934,-3.348355,0.695831,-5.049775,7.747147,5.640385,2.537637,-2.229310,-8.393086]],[[-7.687403,4.697221,-0.573982,-9.080434,-0.436990,-3.036853,4.327932,-6.891529,-6.602998,-1.608882],[2.221645,5.722653,1.916339,1.593231,-6.033650,-8.070781,3.874818,2.237188,-9.777555,8.328261],[-5.571366,7.039614,1.589868,9.896512,6.423635,5.527985,4.692600,4.776596,9.378140,1.807879],[3.259635,5.858623,3.493633,-3.220826,-6.857862,5.356640,-6.329602,-1.644595,-6.474935,8.117929],[-2.134846,-0.638835,1.161004,-2.475062,3.854568,-4.131709,8.910325,6.890706,1.679504,3.617432]],[[6.825068,-2.138822,8.958030,-8.708637,0.035482,9.562670,-6.665881,9.957647,4.603648,-1.509289],[1.895143,6.211728,-4.164599,-4.575599,5.616888,-6.633682,-7.384309,-7.957818,9.194630,9.468595],[-0.223997,-6.699800,9.622037,-4.196235,-7.634913,6.150834,-8.799022,-2.859116,7.388098,-5.174587],[-7.033278,-8.207519,8.599364,-6.592018,8.791253,2.754735,-1.195366,-9.026836,-3.625319,6.068128],[0.563529,-9.173014,7.172733,6.445455,0.635667,3.838069,-2.795498,-8.001573,-5.840608,-9.983985]],[[7.574574,8.795200,-8.886548,2.588818,2.772918,7.823436,8.241656,-3.035611,-9.470706,0.749834],[9.294277,-2.369211,-1.161439,0.093667,9.374239,-0.978150,-7.418473,0.039923,1.157862,8.967823],[1.222163,-7.798408,-3.198849,8.248143,-8.476321,7.297190,-1.472193,2.270915,-1.177997,7.736953],[-7.225723,-3.314673,-1.601499,1.524819,-9.224090,-4.665603,3.914352,-9.667885,1.497549,0.750110],[7.938059,4.689735,-7.113745,-4.347628,1.476038,-2.124629,-2.304701,-0.250266,-8.505695,-0.868455]]], dtype = "float32")#candidate|2031|(6, 5, 10)|const|float32
bop_2032 = relay.left_shift(call_2025.astype('int8'), relay.reshape(const_2031.astype('int8'), relay.shape_of(call_2025))) # shape=(6, 5, 10)
bop_2035 = relay.left_shift(call_2026.astype('int8'), relay.reshape(const_2031.astype('int8'), relay.shape_of(call_2026))) # shape=(6, 5, 10)
output = relay.Tuple([bop_2032,])
output2 = relay.Tuple([bop_2035,])
func_2040 = relay.Function([], output)
mod['func_2040'] = func_2040
mod = relay.transform.InferType()(mod)
mutated_mod['func_2040'] = func_2040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2040_call = mutated_mod.get_global_var('func_2040')
call_2041 = func_2040_call()
output = call_2041
func_2042 = relay.Function([], output)
mutated_mod['func_2042'] = func_2042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mod.get_global_var('func_1841')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_2075 = relay.TupleGetItem(func_1841_call(), 0)
call_2076 = relay.TupleGetItem(func_1843_call(), 0)
output = relay.Tuple([call_2075,])
output2 = relay.Tuple([call_2076,])
func_2077 = relay.Function([], output)
mod['func_2077'] = func_2077
mod = relay.transform.InferType()(mod)
mutated_mod['func_2077'] = func_2077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2077_call = mutated_mod.get_global_var('func_2077')
call_2078 = func_2077_call()
output = call_2078
func_2079 = relay.Function([], output)
mutated_mod['func_2079'] = func_2079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1815_call = mod.get_global_var('func_1815')
func_1817_call = mutated_mod.get_global_var('func_1817')
call_2086 = func_1815_call()
call_2087 = func_1815_call()
output = relay.Tuple([call_2086,])
output2 = relay.Tuple([call_2087,])
func_2091 = relay.Function([], output)
mod['func_2091'] = func_2091
mod = relay.transform.InferType()(mod)
output = func_2091()
func_2092 = relay.Function([], output)
mutated_mod['func_2092'] = func_2092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2091_call = mod.get_global_var('func_2091')
func_2092_call = mutated_mod.get_global_var('func_2092')
call_2152 = relay.TupleGetItem(func_2091_call(), 0)
call_2153 = relay.TupleGetItem(func_2092_call(), 0)
output = relay.Tuple([call_2152,])
output2 = relay.Tuple([call_2153,])
func_2160 = relay.Function([], output)
mod['func_2160'] = func_2160
mod = relay.transform.InferType()(mod)
mutated_mod['func_2160'] = func_2160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2160_call = mutated_mod.get_global_var('func_2160')
call_2161 = func_2160_call()
output = call_2161
func_2162 = relay.Function([], output)
mutated_mod['func_2162'] = func_2162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
call_2200 = relay.TupleGetItem(func_1699_call(), 0)
call_2201 = relay.TupleGetItem(func_1701_call(), 0)
output = relay.Tuple([call_2200,])
output2 = relay.Tuple([call_2201,])
func_2203 = relay.Function([], output)
mod['func_2203'] = func_2203
mod = relay.transform.InferType()(mod)
mutated_mod['func_2203'] = func_2203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2203_call = mutated_mod.get_global_var('func_2203')
call_2204 = func_2203_call()
output = call_2204
func_2205 = relay.Function([], output)
mutated_mod['func_2205'] = func_2205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1849_call = mod.get_global_var('func_1849')
func_1850_call = mutated_mod.get_global_var('func_1850')
call_2212 = func_1849_call()
call_2213 = func_1849_call()
output = relay.Tuple([call_2212,])
output2 = relay.Tuple([call_2213,])
func_2217 = relay.Function([], output)
mod['func_2217'] = func_2217
mod = relay.transform.InferType()(mod)
mutated_mod['func_2217'] = func_2217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2217_call = mutated_mod.get_global_var('func_2217')
call_2218 = func_2217_call()
output = call_2218
func_2219 = relay.Function([], output)
mutated_mod['func_2219'] = func_2219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2160_call = mod.get_global_var('func_2160')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_2228 = relay.TupleGetItem(func_2160_call(), 0)
call_2229 = relay.TupleGetItem(func_2162_call(), 0)
output = relay.Tuple([call_2228,])
output2 = relay.Tuple([call_2229,])
func_2230 = relay.Function([], output)
mod['func_2230'] = func_2230
mod = relay.transform.InferType()(mod)
output = func_2230()
func_2231 = relay.Function([], output)
mutated_mod['func_2231'] = func_2231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1670_call = mod.get_global_var('func_1670')
func_1672_call = mutated_mod.get_global_var('func_1672')
call_2333 = relay.TupleGetItem(func_1670_call(), 0)
call_2334 = relay.TupleGetItem(func_1672_call(), 0)
output = call_2333
output2 = call_2334
func_2335 = relay.Function([], output)
mod['func_2335'] = func_2335
mod = relay.transform.InferType()(mod)
mutated_mod['func_2335'] = func_2335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2335_call = mutated_mod.get_global_var('func_2335')
call_2336 = func_2335_call()
output = call_2336
func_2337 = relay.Function([], output)
mutated_mod['func_2337'] = func_2337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1849_call = mod.get_global_var('func_1849')
func_1850_call = mutated_mod.get_global_var('func_1850')
call_2355 = func_1849_call()
call_2356 = func_1849_call()
var_2365 = relay.var("var_2365", dtype = "bool", shape = (10, 10, 16))#candidate|2365|(10, 10, 16)|var|bool
bop_2366 = relay.logical_xor(call_2355.astype('uint64'), relay.reshape(var_2365.astype('uint64'), relay.shape_of(call_2355))) # shape=(10, 10, 16)
bop_2369 = relay.logical_xor(call_2356.astype('uint64'), relay.reshape(var_2365.astype('uint64'), relay.shape_of(call_2356))) # shape=(10, 10, 16)
output = relay.Tuple([bop_2366,])
output2 = relay.Tuple([bop_2369,])
func_2377 = relay.Function([var_2365,], output)
mod['func_2377'] = func_2377
mod = relay.transform.InferType()(mod)
var_2378 = relay.var("var_2378", dtype = "bool", shape = (10, 10, 16))#candidate|2378|(10, 10, 16)|var|bool
output = func_2377(var_2378)
func_2379 = relay.Function([var_2378], output)
mutated_mod['func_2379'] = func_2379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2040_call = mod.get_global_var('func_2040')
func_2042_call = mutated_mod.get_global_var('func_2042')
call_2489 = relay.TupleGetItem(func_2040_call(), 0)
call_2490 = relay.TupleGetItem(func_2042_call(), 0)
output = relay.Tuple([call_2489,])
output2 = relay.Tuple([call_2490,])
func_2509 = relay.Function([], output)
mod['func_2509'] = func_2509
mod = relay.transform.InferType()(mod)
mutated_mod['func_2509'] = func_2509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2509_call = mutated_mod.get_global_var('func_2509')
call_2510 = func_2509_call()
output = call_2510
func_2511 = relay.Function([], output)
mutated_mod['func_2511'] = func_2511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2217_call = mod.get_global_var('func_2217')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_2563 = relay.TupleGetItem(func_2217_call(), 0)
call_2564 = relay.TupleGetItem(func_2219_call(), 0)
func_1446_call = mod.get_global_var('func_1446')
func_1448_call = mutated_mod.get_global_var('func_1448')
var_2567 = relay.var("var_2567", dtype = "int64", shape = (300,))#candidate|2567|(300,)|var|int64
call_2566 = relay.TupleGetItem(func_1446_call(relay.reshape(var_2567.astype('int64'), [6, 5, 10])), 3)
call_2568 = relay.TupleGetItem(func_1448_call(relay.reshape(var_2567.astype('int64'), [6, 5, 10])), 3)
uop_2575 = relay.log10(var_2567.astype('float32')) # shape=(300,)
func_2160_call = mod.get_global_var('func_2160')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_2578 = relay.TupleGetItem(func_2160_call(), 0)
call_2579 = relay.TupleGetItem(func_2162_call(), 0)
func_2077_call = mod.get_global_var('func_2077')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_2587 = relay.TupleGetItem(func_2077_call(), 0)
call_2588 = relay.TupleGetItem(func_2079_call(), 0)
output = relay.Tuple([call_2563,call_2566,uop_2575,call_2578,call_2587,])
output2 = relay.Tuple([call_2564,call_2568,uop_2575,call_2579,call_2588,])
func_2592 = relay.Function([var_2567,], output)
mod['func_2592'] = func_2592
mod = relay.transform.InferType()(mod)
var_2593 = relay.var("var_2593", dtype = "int64", shape = (300,))#candidate|2593|(300,)|var|int64
output = func_2592(var_2593)
func_2594 = relay.Function([var_2593], output)
mutated_mod['func_2594'] = func_2594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2040_call = mod.get_global_var('func_2040')
func_2042_call = mutated_mod.get_global_var('func_2042')
call_2624 = relay.TupleGetItem(func_2040_call(), 0)
call_2625 = relay.TupleGetItem(func_2042_call(), 0)
output = relay.Tuple([call_2624,])
output2 = relay.Tuple([call_2625,])
func_2645 = relay.Function([], output)
mod['func_2645'] = func_2645
mod = relay.transform.InferType()(mod)
mutated_mod['func_2645'] = func_2645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mutated_mod.get_global_var('func_2645')
call_2646 = func_2645_call()
output = call_2646
func_2647 = relay.Function([], output)
mutated_mod['func_2647'] = func_2647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_872_call = mod.get_global_var('func_872')
func_873_call = mutated_mod.get_global_var('func_873')
call_2679 = relay.TupleGetItem(func_872_call(), 0)
call_2680 = relay.TupleGetItem(func_873_call(), 0)
output = call_2679
output2 = call_2680
func_2685 = relay.Function([], output)
mod['func_2685'] = func_2685
mod = relay.transform.InferType()(mod)
output = func_2685()
func_2686 = relay.Function([], output)
mutated_mod['func_2686'] = func_2686
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2777 = relay.const(-7, dtype = "uint64")#candidate|2777|()|const|uint64
var_2778 = relay.var("var_2778", dtype = "uint64", shape = (12, 8, 2))#candidate|2778|(12, 8, 2)|var|uint64
bop_2779 = relay.left_shift(const_2777.astype('uint64'), var_2778.astype('uint64')) # shape=(12, 8, 2)
output = relay.Tuple([bop_2779,])
output2 = relay.Tuple([bop_2779,])
func_2785 = relay.Function([var_2778,], output)
mod['func_2785'] = func_2785
mod = relay.transform.InferType()(mod)
var_2786 = relay.var("var_2786", dtype = "uint64", shape = (12, 8, 2))#candidate|2786|(12, 8, 2)|var|uint64
output = func_2785(var_2786)
func_2787 = relay.Function([var_2786], output)
mutated_mod['func_2787'] = func_2787
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2840 = relay.var("var_2840", dtype = "float32", shape = (6, 3, 11))#candidate|2840|(6, 3, 11)|var|float32
uop_2841 = relay.atan(var_2840.astype('float32')) # shape=(6, 3, 11)
bop_2857 = relay.maximum(var_2840.astype('int32'), relay.reshape(uop_2841.astype('int32'), relay.shape_of(var_2840))) # shape=(6, 3, 11)
uop_2869 = relay.atanh(bop_2857.astype('float64')) # shape=(6, 3, 11)
output = uop_2869
output2 = uop_2869
func_2876 = relay.Function([var_2840,], output)
mod['func_2876'] = func_2876
mod = relay.transform.InferType()(mod)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2877 = relay.var("var_2877", dtype = "float32", shape = (6, 3, 11))#candidate|2877|(6, 3, 11)|var|float32
func_2876_call = mutated_mod.get_global_var('func_2876')
call_2878 = func_2876_call(var_2877)
output = call_2878
func_2879 = relay.Function([var_2877], output)
mutated_mod['func_2879'] = func_2879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2910 = relay.var("var_2910", dtype = "int32", shape = (5, 9, 14))#candidate|2910|(5, 9, 14)|var|int32
var_2911 = relay.var("var_2911", dtype = "int32", shape = (5, 9, 14))#candidate|2911|(5, 9, 14)|var|int32
bop_2912 = relay.add(var_2910.astype('int32'), relay.reshape(var_2911.astype('int32'), relay.shape_of(var_2910))) # shape=(5, 9, 14)
var_2915 = relay.var("var_2915", dtype = "int32", shape = (5, 9, 14))#candidate|2915|(5, 9, 14)|var|int32
bop_2916 = relay.bitwise_xor(bop_2912.astype('int32'), relay.reshape(var_2915.astype('int32'), relay.shape_of(bop_2912))) # shape=(5, 9, 14)
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
call_2923 = relay.TupleGetItem(func_847_call(), 0)
call_2924 = relay.TupleGetItem(func_849_call(), 0)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_2936 = func_2685_call()
call_2937 = func_2685_call()
func_2217_call = mod.get_global_var('func_2217')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_2943 = relay.TupleGetItem(func_2217_call(), 0)
call_2944 = relay.TupleGetItem(func_2219_call(), 0)
func_2077_call = mod.get_global_var('func_2077')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_2961 = relay.TupleGetItem(func_2077_call(), 0)
call_2962 = relay.TupleGetItem(func_2079_call(), 0)
output = relay.Tuple([bop_2916,call_2923,call_2936,call_2943,call_2961,])
output2 = relay.Tuple([bop_2916,call_2924,call_2937,call_2944,call_2962,])
func_2966 = relay.Function([var_2910,var_2911,var_2915,], output)
mod['func_2966'] = func_2966
mod = relay.transform.InferType()(mod)
mutated_mod['func_2966'] = func_2966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2966_call = mutated_mod.get_global_var('func_2966')
var_2968 = relay.var("var_2968", dtype = "int32", shape = (5, 9, 14))#candidate|2968|(5, 9, 14)|var|int32
var_2969 = relay.var("var_2969", dtype = "int32", shape = (5, 9, 14))#candidate|2969|(5, 9, 14)|var|int32
var_2970 = relay.var("var_2970", dtype = "int32", shape = (5, 9, 14))#candidate|2970|(5, 9, 14)|var|int32
call_2967 = func_2966_call(var_2968,var_2969,var_2970,)
output = call_2967
func_2971 = relay.Function([var_2968,var_2969,var_2970,], output)
mutated_mod['func_2971'] = func_2971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3055 = relay.var("var_3055", dtype = "int32", shape = (16, 7, 15))#candidate|3055|(16, 7, 15)|var|int32
var_3056 = relay.var("var_3056", dtype = "int32", shape = (16, 7, 15))#candidate|3056|(16, 7, 15)|var|int32
bop_3057 = relay.bitwise_or(var_3055.astype('int32'), relay.reshape(var_3056.astype('int32'), relay.shape_of(var_3055))) # shape=(16, 7, 15)
output = relay.Tuple([bop_3057,])
output2 = relay.Tuple([bop_3057,])
func_3060 = relay.Function([var_3055,var_3056,], output)
mod['func_3060'] = func_3060
mod = relay.transform.InferType()(mod)
mutated_mod['func_3060'] = func_3060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3060_call = mutated_mod.get_global_var('func_3060')
var_3062 = relay.var("var_3062", dtype = "int32", shape = (16, 7, 15))#candidate|3062|(16, 7, 15)|var|int32
var_3063 = relay.var("var_3063", dtype = "int32", shape = (16, 7, 15))#candidate|3063|(16, 7, 15)|var|int32
call_3061 = func_3060_call(var_3062,var_3063,)
output = call_3061
func_3064 = relay.Function([var_3062,var_3063,], output)
mutated_mod['func_3064'] = func_3064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_3066 = relay.TupleGetItem(func_120_call(), 0)
call_3067 = relay.TupleGetItem(func_122_call(), 0)
output = relay.Tuple([call_3066,])
output2 = relay.Tuple([call_3067,])
func_3083 = relay.Function([], output)
mod['func_3083'] = func_3083
mod = relay.transform.InferType()(mod)
mutated_mod['func_3083'] = func_3083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mutated_mod.get_global_var('func_3083')
call_3084 = func_3083_call()
output = call_3084
func_3085 = relay.Function([], output)
mutated_mod['func_3085'] = func_3085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2230_call = mod.get_global_var('func_2230')
func_2231_call = mutated_mod.get_global_var('func_2231')
call_3115 = relay.TupleGetItem(func_2230_call(), 0)
call_3116 = relay.TupleGetItem(func_2231_call(), 0)
uop_3117 = relay.sigmoid(call_3115.astype('float64')) # shape=(14, 2, 6)
uop_3119 = relay.sigmoid(call_3116.astype('float64')) # shape=(14, 2, 6)
func_2377_call = mod.get_global_var('func_2377')
func_2379_call = mutated_mod.get_global_var('func_2379')
var_3129 = relay.var("var_3129", dtype = "bool", shape = (1600,))#candidate|3129|(1600,)|var|bool
call_3128 = relay.TupleGetItem(func_2377_call(relay.reshape(var_3129.astype('bool'), [10, 10, 16])), 0)
call_3130 = relay.TupleGetItem(func_2379_call(relay.reshape(var_3129.astype('bool'), [10, 10, 16])), 0)
output = relay.Tuple([uop_3117,call_3128,var_3129,])
output2 = relay.Tuple([uop_3119,call_3130,var_3129,])
func_3131 = relay.Function([var_3129,], output)
mod['func_3131'] = func_3131
mod = relay.transform.InferType()(mod)
mutated_mod['func_3131'] = func_3131
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3132 = relay.var("var_3132", dtype = "bool", shape = (1600,))#candidate|3132|(1600,)|var|bool
func_3131_call = mutated_mod.get_global_var('func_3131')
call_3133 = func_3131_call(var_3132)
output = call_3133
func_3134 = relay.Function([var_3132], output)
mutated_mod['func_3134'] = func_3134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3158 = relay.var("var_3158", dtype = "uint64", shape = (4, 5, 16))#candidate|3158|(4, 5, 16)|var|uint64
const_3159 = relay.const([[[7,2,-3,5,6,-2,8,-2,-2,-4,2,-6,10,-9,-10,-8],[-4,6,-9,-1,-3,-3,5,-7,-8,5,-8,-6,2,9,4,10],[10,-7,-7,7,-1,2,8,6,-10,-7,-1,-9,8,6,7,-4],[-2,-7,-7,-8,5,-6,-7,8,-3,-8,-7,9,4,1,-1,-6],[4,-1,-8,-1,7,7,-2,-3,-1,1,-7,5,-8,-1,-9,-2]],[[-2,6,-10,-4,-8,4,7,7,8,6,-10,7,5,-7,-6,-9],[-9,-10,-4,9,7,-2,-1,-2,8,-6,-7,6,-2,-8,9,-7],[-2,1,-1,-8,4,-5,-2,5,3,8,-4,-3,7,-5,9,-7],[8,9,-8,2,-10,6,1,9,3,-5,-2,-5,2,-5,1,3],[10,3,-10,2,9,9,-9,6,-6,1,1,-6,6,-5,-5,-10]],[[-2,-5,-7,2,6,8,2,7,4,7,-4,8,6,10,-4,8],[-3,-8,-1,6,2,3,9,1,10,9,-2,-5,-2,2,3,-2],[5,7,-2,3,9,7,8,1,7,1,9,-10,10,7,-5,2],[-10,-6,-3,6,7,-4,-5,-2,-7,4,8,6,-7,5,-5,2],[7,-8,10,-4,1,-3,-3,9,-7,-5,-6,-5,8,-6,7,8]],[[9,4,-2,-6,8,-9,4,2,-10,8,-10,2,-5,10,-8,5],[4,5,-10,1,2,-1,-2,8,2,10,1,1,-10,-5,9,4],[-1,-1,1,1,6,10,6,9,-5,3,1,-9,7,1,-8,-1],[-5,-10,-8,2,4,1,-1,10,-1,2,-1,5,9,-5,-1,3],[-1,-4,5,-3,1,9,-6,10,3,9,4,-1,-10,-7,-3,8]]], dtype = "uint64")#candidate|3159|(4, 5, 16)|const|uint64
bop_3160 = relay.bitwise_xor(var_3158.astype('uint64'), relay.reshape(const_3159.astype('uint64'), relay.shape_of(var_3158))) # shape=(4, 5, 16)
func_559_call = mod.get_global_var('func_559')
func_563_call = mutated_mod.get_global_var('func_563')
var_3172 = relay.var("var_3172", dtype = "uint64", shape = (495,))#candidate|3172|(495,)|var|uint64
var_3173 = relay.var("var_3173", dtype = "float64", shape = (1600,))#candidate|3173|(1600,)|var|float64
call_3171 = relay.TupleGetItem(func_559_call(relay.reshape(var_3172.astype('uint64'), [495,]), relay.reshape(var_3173.astype('float64'), [1600,]), ), 8)
call_3174 = relay.TupleGetItem(func_563_call(relay.reshape(var_3172.astype('uint64'), [495,]), relay.reshape(var_3173.astype('float64'), [1600,]), ), 8)
func_717_call = mod.get_global_var('func_717')
func_718_call = mutated_mod.get_global_var('func_718')
call_3185 = relay.TupleGetItem(func_717_call(), 0)
call_3186 = relay.TupleGetItem(func_718_call(), 0)
var_3190 = relay.var("var_3190", dtype = "float64", shape = (1600,))#candidate|3190|(1600,)|var|float64
bop_3191 = relay.power(var_3173.astype('float32'), relay.reshape(var_3190.astype('float32'), relay.shape_of(var_3173))) # shape=(1600,)
output = relay.Tuple([bop_3160,call_3171,var_3172,call_3185,bop_3191,])
output2 = relay.Tuple([bop_3160,call_3174,var_3172,call_3186,bop_3191,])
func_3203 = relay.Function([var_3158,var_3172,var_3173,var_3190,], output)
mod['func_3203'] = func_3203
mod = relay.transform.InferType()(mod)
mutated_mod['func_3203'] = func_3203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3203_call = mutated_mod.get_global_var('func_3203')
var_3205 = relay.var("var_3205", dtype = "uint64", shape = (4, 5, 16))#candidate|3205|(4, 5, 16)|var|uint64
var_3206 = relay.var("var_3206", dtype = "uint64", shape = (495,))#candidate|3206|(495,)|var|uint64
var_3207 = relay.var("var_3207", dtype = "float64", shape = (1600,))#candidate|3207|(1600,)|var|float64
var_3208 = relay.var("var_3208", dtype = "float64", shape = (1600,))#candidate|3208|(1600,)|var|float64
call_3204 = func_3203_call(var_3205,var_3206,var_3207,var_3208,)
output = call_3204
func_3209 = relay.Function([var_3205,var_3206,var_3207,var_3208,], output)
mutated_mod['func_3209'] = func_3209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1849_call = mod.get_global_var('func_1849')
func_1850_call = mutated_mod.get_global_var('func_1850')
call_3214 = func_1849_call()
call_3215 = func_1849_call()
func_2509_call = mod.get_global_var('func_2509')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_3235 = relay.TupleGetItem(func_2509_call(), 0)
call_3236 = relay.TupleGetItem(func_2511_call(), 0)
var_3243 = relay.var("var_3243", dtype = "int8", shape = (6, 5, 10))#candidate|3243|(6, 5, 10)|var|int8
bop_3244 = relay.multiply(call_3235.astype('int32'), relay.reshape(var_3243.astype('int32'), relay.shape_of(call_3235))) # shape=(6, 5, 10)
bop_3247 = relay.multiply(call_3236.astype('int32'), relay.reshape(var_3243.astype('int32'), relay.shape_of(call_3236))) # shape=(6, 5, 10)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_3264 = relay.TupleGetItem(func_120_call(), 0)
call_3265 = relay.TupleGetItem(func_122_call(), 0)
func_2377_call = mod.get_global_var('func_2377')
func_2379_call = mutated_mod.get_global_var('func_2379')
call_3286 = relay.TupleGetItem(func_2377_call(relay.reshape(call_3214.astype('bool'), [10, 10, 16])), 0)
call_3287 = relay.TupleGetItem(func_2379_call(relay.reshape(call_3214.astype('bool'), [10, 10, 16])), 0)
output = relay.Tuple([call_3214,bop_3244,call_3264,call_3286,])
output2 = relay.Tuple([call_3215,bop_3247,call_3265,call_3287,])
func_3294 = relay.Function([var_3243,], output)
mod['func_3294'] = func_3294
mod = relay.transform.InferType()(mod)
mutated_mod['func_3294'] = func_3294
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3295 = relay.var("var_3295", dtype = "int8", shape = (6, 5, 10))#candidate|3295|(6, 5, 10)|var|int8
func_3294_call = mutated_mod.get_global_var('func_3294')
call_3296 = func_3294_call(var_3295)
output = call_3296
func_3297 = relay.Function([var_3295], output)
mutated_mod['func_3297'] = func_3297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_717_call = mod.get_global_var('func_717')
func_718_call = mutated_mod.get_global_var('func_718')
call_3308 = relay.TupleGetItem(func_717_call(), 0)
call_3309 = relay.TupleGetItem(func_718_call(), 0)
output = relay.Tuple([call_3308,])
output2 = relay.Tuple([call_3309,])
func_3346 = relay.Function([], output)
mod['func_3346'] = func_3346
mod = relay.transform.InferType()(mod)
mutated_mod['func_3346'] = func_3346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3346_call = mutated_mod.get_global_var('func_3346')
call_3347 = func_3346_call()
output = call_3347
func_3348 = relay.Function([], output)
mutated_mod['func_3348'] = func_3348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2203_call = mod.get_global_var('func_2203')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_3381 = relay.TupleGetItem(func_2203_call(), 0)
call_3382 = relay.TupleGetItem(func_2205_call(), 0)
output = call_3381
output2 = call_3382
func_3386 = relay.Function([], output)
mod['func_3386'] = func_3386
mod = relay.transform.InferType()(mod)
mutated_mod['func_3386'] = func_3386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3386_call = mutated_mod.get_global_var('func_3386')
call_3387 = func_3386_call()
output = call_3387
func_3388 = relay.Function([], output)
mutated_mod['func_3388'] = func_3388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1815_call = mod.get_global_var('func_1815')
func_1817_call = mutated_mod.get_global_var('func_1817')
call_3389 = func_1815_call()
call_3390 = func_1815_call()
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_3393 = relay.TupleGetItem(func_3083_call(), 0)
call_3394 = relay.TupleGetItem(func_3085_call(), 0)
func_3131_call = mod.get_global_var('func_3131')
func_3134_call = mutated_mod.get_global_var('func_3134')
const_3398 = relay.const([True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False], dtype = "bool")#candidate|3398|(1600,)|const|bool
call_3397 = relay.TupleGetItem(func_3131_call(relay.reshape(const_3398.astype('bool'), [1600,])), 2)
call_3399 = relay.TupleGetItem(func_3134_call(relay.reshape(const_3398.astype('bool'), [1600,])), 2)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_3404 = func_2685_call()
call_3405 = func_2685_call()
uop_3408 = relay.tan(call_3397.astype('float64')) # shape=(1600,)
uop_3410 = relay.tan(call_3399.astype('float64')) # shape=(1600,)
bop_3415 = relay.logical_and(uop_3408.astype('bool'), relay.reshape(call_3397.astype('bool'), relay.shape_of(uop_3408))) # shape=(1600,)
bop_3418 = relay.logical_and(uop_3410.astype('bool'), relay.reshape(call_3399.astype('bool'), relay.shape_of(uop_3410))) # shape=(1600,)
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_3420 = relay.TupleGetItem(func_3083_call(), 0)
call_3421 = relay.TupleGetItem(func_3085_call(), 0)
output = relay.Tuple([call_3389,call_3393,const_3398,call_3404,bop_3415,call_3420,])
output2 = relay.Tuple([call_3390,call_3394,const_3398,call_3405,bop_3418,call_3421,])
func_3428 = relay.Function([], output)
mod['func_3428'] = func_3428
mod = relay.transform.InferType()(mod)
output = func_3428()
func_3429 = relay.Function([], output)
mutated_mod['func_3429'] = func_3429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2040_call = mod.get_global_var('func_2040')
func_2042_call = mutated_mod.get_global_var('func_2042')
call_3438 = relay.TupleGetItem(func_2040_call(), 0)
call_3439 = relay.TupleGetItem(func_2042_call(), 0)
func_2203_call = mod.get_global_var('func_2203')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_3444 = relay.TupleGetItem(func_2203_call(), 0)
call_3445 = relay.TupleGetItem(func_2205_call(), 0)
func_1446_call = mod.get_global_var('func_1446')
func_1448_call = mutated_mod.get_global_var('func_1448')
call_3451 = relay.TupleGetItem(func_1446_call(relay.reshape(call_3438.astype('int64'), [6, 5, 10])), 0)
call_3452 = relay.TupleGetItem(func_1448_call(relay.reshape(call_3438.astype('int64'), [6, 5, 10])), 0)
func_559_call = mod.get_global_var('func_559')
func_563_call = mutated_mod.get_global_var('func_563')
var_3454 = relay.var("var_3454", dtype = "uint64", shape = (495,))#candidate|3454|(495,)|var|uint64
call_3453 = relay.TupleGetItem(func_559_call(relay.reshape(var_3454.astype('uint64'), [495,]), relay.reshape(call_3451.astype('float64'), [1600,]), ), 7)
call_3455 = relay.TupleGetItem(func_563_call(relay.reshape(var_3454.astype('uint64'), [495,]), relay.reshape(call_3451.astype('float64'), [1600,]), ), 7)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
call_3460 = relay.TupleGetItem(func_1699_call(), 0)
call_3461 = relay.TupleGetItem(func_1701_call(), 0)
output = relay.Tuple([call_3438,call_3444,call_3451,call_3453,var_3454,call_3460,])
output2 = relay.Tuple([call_3439,call_3445,call_3452,call_3455,var_3454,call_3461,])
func_3462 = relay.Function([var_3454,], output)
mod['func_3462'] = func_3462
mod = relay.transform.InferType()(mod)
mutated_mod['func_3462'] = func_3462
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3463 = relay.var("var_3463", dtype = "uint64", shape = (495,))#candidate|3463|(495,)|var|uint64
func_3462_call = mutated_mod.get_global_var('func_3462')
call_3464 = func_3462_call(var_3463)
output = call_3464
func_3465 = relay.Function([var_3463], output)
mutated_mod['func_3465'] = func_3465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2203_call = mod.get_global_var('func_2203')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_3543 = relay.TupleGetItem(func_2203_call(), 0)
call_3544 = relay.TupleGetItem(func_2205_call(), 0)
func_2785_call = mod.get_global_var('func_2785')
func_2787_call = mutated_mod.get_global_var('func_2787')
var_3548 = relay.var("var_3548", dtype = "uint64", shape = (192,))#candidate|3548|(192,)|var|uint64
call_3547 = relay.TupleGetItem(func_2785_call(relay.reshape(var_3548.astype('uint64'), [12, 8, 2])), 0)
call_3549 = relay.TupleGetItem(func_2787_call(relay.reshape(var_3548.astype('uint64'), [12, 8, 2])), 0)
func_1650_call = mod.get_global_var('func_1650')
func_1651_call = mutated_mod.get_global_var('func_1651')
call_3555 = func_1650_call()
call_3556 = func_1650_call()
output = relay.Tuple([call_3543,call_3547,var_3548,call_3555,])
output2 = relay.Tuple([call_3544,call_3549,var_3548,call_3556,])
func_3563 = relay.Function([var_3548,], output)
mod['func_3563'] = func_3563
mod = relay.transform.InferType()(mod)
var_3564 = relay.var("var_3564", dtype = "uint64", shape = (192,))#candidate|3564|(192,)|var|uint64
output = func_3563(var_3564)
func_3565 = relay.Function([var_3564], output)
mutated_mod['func_3565'] = func_3565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_3575 = func_971_call()
call_3576 = func_971_call()
output = call_3575
output2 = call_3576
func_3590 = relay.Function([], output)
mod['func_3590'] = func_3590
mod = relay.transform.InferType()(mod)
mutated_mod['func_3590'] = func_3590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3590_call = mutated_mod.get_global_var('func_3590')
call_3591 = func_3590_call()
output = call_3591
func_3592 = relay.Function([], output)
mutated_mod['func_3592'] = func_3592
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3597 = relay.var("var_3597", dtype = "float64", shape = (3, 13, 11))#candidate|3597|(3, 13, 11)|var|float64
uop_3598 = relay.tan(var_3597.astype('float64')) # shape=(3, 13, 11)
func_66_call = mod.get_global_var('func_66')
func_69_call = mutated_mod.get_global_var('func_69')
var_3601 = relay.var("var_3601", dtype = "float64", shape = (1600,))#candidate|3601|(1600,)|var|float64
call_3600 = relay.TupleGetItem(func_66_call(relay.reshape(var_3601.astype('float64'), [10, 10, 16])), 0)
call_3602 = relay.TupleGetItem(func_69_call(relay.reshape(var_3601.astype('float64'), [10, 10, 16])), 0)
func_412_call = mod.get_global_var('func_412')
func_418_call = mutated_mod.get_global_var('func_418')
var_3605 = relay.var("var_3605", dtype = "uint64", shape = (495,))#candidate|3605|(495,)|var|uint64
call_3604 = relay.TupleGetItem(func_412_call(relay.reshape(var_3605.astype('uint64'), [15, 3, 11]), relay.reshape(var_3605.astype('uint64'), [15, 3, 11]), relay.reshape(var_3601.astype('float64'), [1600,]), relay.reshape(var_3601.astype('int16'), [1600,]), ), 1)
call_3606 = relay.TupleGetItem(func_418_call(relay.reshape(var_3605.astype('uint64'), [15, 3, 11]), relay.reshape(var_3605.astype('uint64'), [15, 3, 11]), relay.reshape(var_3601.astype('float64'), [1600,]), relay.reshape(var_3601.astype('int16'), [1600,]), ), 1)
output = relay.Tuple([uop_3598,call_3600,var_3601,call_3604,var_3605,])
output2 = relay.Tuple([uop_3598,call_3602,var_3601,call_3606,var_3605,])
func_3608 = relay.Function([var_3597,var_3601,var_3605,], output)
mod['func_3608'] = func_3608
mod = relay.transform.InferType()(mod)
mutated_mod['func_3608'] = func_3608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3608_call = mutated_mod.get_global_var('func_3608')
var_3610 = relay.var("var_3610", dtype = "float64", shape = (3, 13, 11))#candidate|3610|(3, 13, 11)|var|float64
var_3611 = relay.var("var_3611", dtype = "float64", shape = (1600,))#candidate|3611|(1600,)|var|float64
var_3612 = relay.var("var_3612", dtype = "uint64", shape = (495,))#candidate|3612|(495,)|var|uint64
call_3609 = func_3608_call(var_3610,var_3611,var_3612,)
output = call_3609
func_3613 = relay.Function([var_3610,var_3611,var_3612,], output)
mutated_mod['func_3613'] = func_3613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_687_call = mod.get_global_var('func_687')
func_688_call = mutated_mod.get_global_var('func_688')
call_3636 = relay.TupleGetItem(func_687_call(), 0)
call_3637 = relay.TupleGetItem(func_688_call(), 0)
output = relay.Tuple([call_3636,])
output2 = relay.Tuple([call_3637,])
func_3639 = relay.Function([], output)
mod['func_3639'] = func_3639
mod = relay.transform.InferType()(mod)
mutated_mod['func_3639'] = func_3639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3639_call = mutated_mod.get_global_var('func_3639')
call_3640 = func_3639_call()
output = call_3640
func_3641 = relay.Function([], output)
mutated_mod['func_3641'] = func_3641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1790_call = mod.get_global_var('func_1790')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_3675 = relay.TupleGetItem(func_1790_call(), 0)
call_3676 = relay.TupleGetItem(func_1792_call(), 0)
func_2509_call = mod.get_global_var('func_2509')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_3679 = relay.TupleGetItem(func_2509_call(), 0)
call_3680 = relay.TupleGetItem(func_2511_call(), 0)
output = relay.Tuple([call_3675,call_3679,])
output2 = relay.Tuple([call_3676,call_3680,])
func_3686 = relay.Function([], output)
mod['func_3686'] = func_3686
mod = relay.transform.InferType()(mod)
output = func_3686()
func_3687 = relay.Function([], output)
mutated_mod['func_3687'] = func_3687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_3693 = relay.TupleGetItem(func_2645_call(), 0)
call_3694 = relay.TupleGetItem(func_2647_call(), 0)
func_3346_call = mod.get_global_var('func_3346')
func_3348_call = mutated_mod.get_global_var('func_3348')
call_3704 = relay.TupleGetItem(func_3346_call(), 0)
call_3705 = relay.TupleGetItem(func_3348_call(), 0)
output = relay.Tuple([call_3693,call_3704,])
output2 = relay.Tuple([call_3694,call_3705,])
func_3706 = relay.Function([], output)
mod['func_3706'] = func_3706
mod = relay.transform.InferType()(mod)
output = func_3706()
func_3707 = relay.Function([], output)
mutated_mod['func_3707'] = func_3707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1815_call = mod.get_global_var('func_1815')
func_1817_call = mutated_mod.get_global_var('func_1817')
call_3775 = func_1815_call()
call_3776 = func_1815_call()
output = call_3775
output2 = call_3776
func_3779 = relay.Function([], output)
mod['func_3779'] = func_3779
mod = relay.transform.InferType()(mod)
output = func_3779()
func_3780 = relay.Function([], output)
mutated_mod['func_3780'] = func_3780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1139_call = mod.get_global_var('func_1139')
func_1141_call = mutated_mod.get_global_var('func_1141')
call_3789 = relay.TupleGetItem(func_1139_call(), 1)
call_3790 = relay.TupleGetItem(func_1141_call(), 1)
output = relay.Tuple([call_3789,])
output2 = relay.Tuple([call_3790,])
func_3797 = relay.Function([], output)
mod['func_3797'] = func_3797
mod = relay.transform.InferType()(mod)
output = func_3797()
func_3798 = relay.Function([], output)
mutated_mod['func_3798'] = func_3798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1783_call = mod.get_global_var('func_1783')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_3844 = func_1783_call()
call_3845 = func_1783_call()
output = relay.Tuple([call_3844,])
output2 = relay.Tuple([call_3845,])
func_3849 = relay.Function([], output)
mod['func_3849'] = func_3849
mod = relay.transform.InferType()(mod)
output = func_3849()
func_3850 = relay.Function([], output)
mutated_mod['func_3850'] = func_3850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1670_call = mod.get_global_var('func_1670')
func_1672_call = mutated_mod.get_global_var('func_1672')
call_3916 = relay.TupleGetItem(func_1670_call(), 0)
call_3917 = relay.TupleGetItem(func_1672_call(), 0)
func_2217_call = mod.get_global_var('func_2217')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_3920 = relay.TupleGetItem(func_2217_call(), 0)
call_3921 = relay.TupleGetItem(func_2219_call(), 0)
func_2335_call = mod.get_global_var('func_2335')
func_2337_call = mutated_mod.get_global_var('func_2337')
call_3978 = func_2335_call()
call_3979 = func_2335_call()
func_3294_call = mod.get_global_var('func_3294')
func_3297_call = mutated_mod.get_global_var('func_3297')
call_4005 = relay.TupleGetItem(func_3294_call(relay.reshape(call_3916.astype('int8'), [6, 5, 10])), 3)
call_4006 = relay.TupleGetItem(func_3297_call(relay.reshape(call_3916.astype('int8'), [6, 5, 10])), 3)
output = relay.Tuple([call_3916,call_3920,call_3978,call_4005,])
output2 = relay.Tuple([call_3917,call_3921,call_3979,call_4006,])
func_4016 = relay.Function([], output)
mod['func_4016'] = func_4016
mod = relay.transform.InferType()(mod)
mutated_mod['func_4016'] = func_4016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mutated_mod.get_global_var('func_4016')
call_4017 = func_4016_call()
output = call_4017
func_4018 = relay.Function([], output)
mutated_mod['func_4018'] = func_4018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mod.get_global_var('func_1841')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_4049 = relay.TupleGetItem(func_1841_call(), 0)
call_4050 = relay.TupleGetItem(func_1843_call(), 0)
func_3131_call = mod.get_global_var('func_3131')
func_3134_call = mutated_mod.get_global_var('func_3134')
call_4057 = relay.TupleGetItem(func_3131_call(relay.reshape(call_4049.astype('bool'), [1600,])), 1)
call_4058 = relay.TupleGetItem(func_3134_call(relay.reshape(call_4049.astype('bool'), [1600,])), 1)
func_3294_call = mod.get_global_var('func_3294')
func_3297_call = mutated_mod.get_global_var('func_3297')
var_4065 = relay.var("var_4065", dtype = "int8", shape = (300,))#candidate|4065|(300,)|var|int8
call_4064 = relay.TupleGetItem(func_3294_call(relay.reshape(var_4065.astype('int8'), [6, 5, 10])), 3)
call_4066 = relay.TupleGetItem(func_3297_call(relay.reshape(var_4065.astype('int8'), [6, 5, 10])), 3)
output = relay.Tuple([call_4049,call_4057,call_4064,var_4065,])
output2 = relay.Tuple([call_4050,call_4058,call_4066,var_4065,])
func_4074 = relay.Function([var_4065,], output)
mod['func_4074'] = func_4074
mod = relay.transform.InferType()(mod)
var_4075 = relay.var("var_4075", dtype = "int8", shape = (300,))#candidate|4075|(300,)|var|int8
output = func_4074(var_4075)
func_4076 = relay.Function([var_4075], output)
mutated_mod['func_4076'] = func_4076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3849_call = mod.get_global_var('func_3849')
func_3850_call = mutated_mod.get_global_var('func_3850')
call_4108 = relay.TupleGetItem(func_3849_call(), 0)
call_4109 = relay.TupleGetItem(func_3850_call(), 0)
func_3294_call = mod.get_global_var('func_3294')
func_3297_call = mutated_mod.get_global_var('func_3297')
call_4143 = relay.TupleGetItem(func_3294_call(relay.reshape(call_4108.astype('int8'), [6, 5, 10])), 1)
call_4144 = relay.TupleGetItem(func_3297_call(relay.reshape(call_4108.astype('int8'), [6, 5, 10])), 1)
func_3849_call = mod.get_global_var('func_3849')
func_3850_call = mutated_mod.get_global_var('func_3850')
call_4145 = relay.TupleGetItem(func_3849_call(), 0)
call_4146 = relay.TupleGetItem(func_3850_call(), 0)
func_1139_call = mod.get_global_var('func_1139')
func_1141_call = mutated_mod.get_global_var('func_1141')
call_4148 = relay.TupleGetItem(func_1139_call(), 1)
call_4149 = relay.TupleGetItem(func_1141_call(), 1)
output = relay.Tuple([call_4108,call_4143,call_4145,call_4148,])
output2 = relay.Tuple([call_4109,call_4144,call_4146,call_4149,])
func_4158 = relay.Function([], output)
mod['func_4158'] = func_4158
mod = relay.transform.InferType()(mod)
output = func_4158()
func_4159 = relay.Function([], output)
mutated_mod['func_4159'] = func_4159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1815_call = mod.get_global_var('func_1815')
func_1817_call = mutated_mod.get_global_var('func_1817')
call_4205 = func_1815_call()
call_4206 = func_1815_call()
uop_4207 = relay.sin(call_4205.astype('float64')) # shape=(14, 2, 6)
uop_4209 = relay.sin(call_4206.astype('float64')) # shape=(14, 2, 6)
bop_4222 = relay.bitwise_and(call_4205.astype('int16'), relay.reshape(uop_4207.astype('int16'), relay.shape_of(call_4205))) # shape=(14, 2, 6)
bop_4225 = relay.bitwise_and(call_4206.astype('int16'), relay.reshape(uop_4209.astype('int16'), relay.shape_of(call_4206))) # shape=(14, 2, 6)
output = relay.Tuple([bop_4222,])
output2 = relay.Tuple([bop_4225,])
func_4237 = relay.Function([], output)
mod['func_4237'] = func_4237
mod = relay.transform.InferType()(mod)
mutated_mod['func_4237'] = func_4237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4237_call = mutated_mod.get_global_var('func_4237')
call_4238 = func_4237_call()
output = call_4238
func_4239 = relay.Function([], output)
mutated_mod['func_4239'] = func_4239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1231_call = mod.get_global_var('func_1231')
func_1233_call = mutated_mod.get_global_var('func_1233')
call_4246 = func_1231_call()
call_4247 = func_1231_call()
output = relay.Tuple([call_4246,])
output2 = relay.Tuple([call_4247,])
func_4258 = relay.Function([], output)
mod['func_4258'] = func_4258
mod = relay.transform.InferType()(mod)
mutated_mod['func_4258'] = func_4258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4258_call = mutated_mod.get_global_var('func_4258')
call_4259 = func_4258_call()
output = call_4259
func_4260 = relay.Function([], output)
mutated_mod['func_4260'] = func_4260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2091_call = mod.get_global_var('func_2091')
func_2092_call = mutated_mod.get_global_var('func_2092')
call_4269 = relay.TupleGetItem(func_2091_call(), 0)
call_4270 = relay.TupleGetItem(func_2092_call(), 0)
output = call_4269
output2 = call_4270
func_4278 = relay.Function([], output)
mod['func_4278'] = func_4278
mod = relay.transform.InferType()(mod)
output = func_4278()
func_4279 = relay.Function([], output)
mutated_mod['func_4279'] = func_4279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4237_call = mod.get_global_var('func_4237')
func_4239_call = mutated_mod.get_global_var('func_4239')
call_4424 = relay.TupleGetItem(func_4237_call(), 0)
call_4425 = relay.TupleGetItem(func_4239_call(), 0)
func_2785_call = mod.get_global_var('func_2785')
func_2787_call = mutated_mod.get_global_var('func_2787')
var_4443 = relay.var("var_4443", dtype = "uint64", shape = (192,))#candidate|4443|(192,)|var|uint64
call_4442 = relay.TupleGetItem(func_2785_call(relay.reshape(var_4443.astype('uint64'), [12, 8, 2])), 0)
call_4444 = relay.TupleGetItem(func_2787_call(relay.reshape(var_4443.astype('uint64'), [12, 8, 2])), 0)
output = relay.Tuple([call_4424,call_4442,var_4443,])
output2 = relay.Tuple([call_4425,call_4444,var_4443,])
func_4445 = relay.Function([var_4443,], output)
mod['func_4445'] = func_4445
mod = relay.transform.InferType()(mod)
var_4446 = relay.var("var_4446", dtype = "uint64", shape = (192,))#candidate|4446|(192,)|var|uint64
output = func_4445(var_4446)
func_4447 = relay.Function([var_4446], output)
mutated_mod['func_4447'] = func_4447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
call_4449 = relay.TupleGetItem(func_847_call(), 0)
call_4450 = relay.TupleGetItem(func_849_call(), 0)
output = relay.Tuple([call_4449,])
output2 = relay.Tuple([call_4450,])
func_4466 = relay.Function([], output)
mod['func_4466'] = func_4466
mod = relay.transform.InferType()(mod)
output = func_4466()
func_4467 = relay.Function([], output)
mutated_mod['func_4467'] = func_4467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2509_call = mod.get_global_var('func_2509')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_4548 = relay.TupleGetItem(func_2509_call(), 0)
call_4549 = relay.TupleGetItem(func_2511_call(), 0)
func_717_call = mod.get_global_var('func_717')
func_718_call = mutated_mod.get_global_var('func_718')
call_4576 = relay.TupleGetItem(func_717_call(), 0)
call_4577 = relay.TupleGetItem(func_718_call(), 0)
func_2230_call = mod.get_global_var('func_2230')
func_2231_call = mutated_mod.get_global_var('func_2231')
call_4585 = relay.TupleGetItem(func_2230_call(), 0)
call_4586 = relay.TupleGetItem(func_2231_call(), 0)
output = relay.Tuple([call_4548,call_4576,call_4585,])
output2 = relay.Tuple([call_4549,call_4577,call_4586,])
func_4587 = relay.Function([], output)
mod['func_4587'] = func_4587
mod = relay.transform.InferType()(mod)
mutated_mod['func_4587'] = func_4587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4587_call = mutated_mod.get_global_var('func_4587')
call_4588 = func_4587_call()
output = call_4588
func_4589 = relay.Function([], output)
mutated_mod['func_4589'] = func_4589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1783_call = mod.get_global_var('func_1783')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_4607 = func_1783_call()
call_4608 = func_1783_call()
output = relay.Tuple([call_4607,])
output2 = relay.Tuple([call_4608,])
func_4640 = relay.Function([], output)
mod['func_4640'] = func_4640
mod = relay.transform.InferType()(mod)
mutated_mod['func_4640'] = func_4640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4640_call = mutated_mod.get_global_var('func_4640')
call_4641 = func_4640_call()
output = call_4641
func_4642 = relay.Function([], output)
mutated_mod['func_4642'] = func_4642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1815_call = mod.get_global_var('func_1815')
func_1817_call = mutated_mod.get_global_var('func_1817')
call_4656 = func_1815_call()
call_4657 = func_1815_call()
var_4674 = relay.var("var_4674", dtype = "float32", shape = (14, 2, 6))#candidate|4674|(14, 2, 6)|var|float32
bop_4675 = relay.power(call_4656.astype('float64'), relay.reshape(var_4674.astype('float64'), relay.shape_of(call_4656))) # shape=(14, 2, 6)
bop_4678 = relay.power(call_4657.astype('float64'), relay.reshape(var_4674.astype('float64'), relay.shape_of(call_4657))) # shape=(14, 2, 6)
uop_4682 = relay.sinh(bop_4675.astype('float64')) # shape=(14, 2, 6)
uop_4684 = relay.sinh(bop_4678.astype('float64')) # shape=(14, 2, 6)
uop_4686 = relay.log10(uop_4682.astype('float64')) # shape=(14, 2, 6)
uop_4688 = relay.log10(uop_4684.astype('float64')) # shape=(14, 2, 6)
func_2592_call = mod.get_global_var('func_2592')
func_2594_call = mutated_mod.get_global_var('func_2594')
const_4690 = relay.const([7,9,2,3,3,6,8,-9,-1,4,9,-3,-8,-10,-4,-3,8,10,-5,-8,5,-2,-7,4,6,-5,10,1,-5,-1,1,10,6,-1,-5,1,4,2,6,7,-6,8,-4,-7,1,-8,4,4,-9,2,2,3,9,-7,-3,-7,-1,-8,6,-6,3,-9,-3,6,-6,8,-4,-5,-8,7,7,4,-1,-2,6,-1,-3,6,3,-10,2,6,10,-8,4,-4,9,10,10,6,2,-7,-10,-1,-6,-10,10,2,-9,-2,6,-7,-6,7,-1,-2,-2,7,3,-5,-10,7,2,4,2,8,2,4,-2,-3,-6,7,-5,2,-4,-5,3,-8,1,-8,-8,10,-4,9,7,-1,9,3,-4,-10,-3,5,-8,10,-7,-4,-9,-6,-1,8,-6,-1,7,-9,-10,-9,5,-8,1,4,-8,-10,5,9,10,3,8,-3,9,-6,-2,-1,-1,1,7,-9,-4,-4,-4,4,-2,-1,1,5,-5,-1,6,-3,-3,10,-8,6,7,-10,5,-8,-10,-9,-3,3,5,-5,7,1,-2,9,9,3,-7,10,6,-3,5,9,6,5,5,-2,8,2,4,10,-9,1,6,10,-9,8,4,-1,-9,-2,6,9,-9,2,4,-9,4,9,-3,-2,5,-6,9,-1,-8,7,9,8,8,-3,1,-5,6,-5,-6,-1,8,10,-9,-8,-6,-10,2,2,7,4,9,-5,5,4,-8,2,4,-5,-5,-9,9,-5,-7,-1,-4,4,-6,8,8,5,-5,-4,-1,4,-4,-8,-2,4,-1,4,1,9], dtype = "int64")#candidate|4690|(300,)|const|int64
call_4689 = relay.TupleGetItem(func_2592_call(relay.reshape(const_4690.astype('int64'), [300,])), 0)
call_4691 = relay.TupleGetItem(func_2594_call(relay.reshape(const_4690.astype('int64'), [300,])), 0)
uop_4703 = relay.log2(uop_4686.astype('float64')) # shape=(14, 2, 6)
uop_4705 = relay.log2(uop_4688.astype('float64')) # shape=(14, 2, 6)
func_687_call = mod.get_global_var('func_687')
func_688_call = mutated_mod.get_global_var('func_688')
call_4706 = relay.TupleGetItem(func_687_call(), 2)
call_4707 = relay.TupleGetItem(func_688_call(), 2)
func_1815_call = mod.get_global_var('func_1815')
func_1817_call = mutated_mod.get_global_var('func_1817')
call_4719 = func_1815_call()
call_4720 = func_1815_call()
output = relay.Tuple([call_4689,const_4690,uop_4703,call_4706,call_4719,])
output2 = relay.Tuple([call_4691,const_4690,uop_4705,call_4707,call_4720,])
func_4723 = relay.Function([var_4674,], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
var_4724 = relay.var("var_4724", dtype = "float32", shape = (14, 2, 6))#candidate|4724|(14, 2, 6)|var|float32
output = func_4723(var_4724)
func_4725 = relay.Function([var_4724], output)
mutated_mod['func_4725'] = func_4725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_4729 = relay.TupleGetItem(func_120_call(), 0)
call_4730 = relay.TupleGetItem(func_122_call(), 0)
func_1465_call = mod.get_global_var('func_1465')
func_1467_call = mutated_mod.get_global_var('func_1467')
var_4742 = relay.var("var_4742", dtype = "float64", shape = (1365,))#candidate|4742|(1365,)|var|float64
call_4741 = func_1465_call(relay.reshape(var_4742.astype('float64'), [15, 7, 13]))
call_4743 = func_1465_call(relay.reshape(var_4742.astype('float64'), [15, 7, 13]))
var_4746 = relay.var("var_4746", dtype = "float64", shape = (15, 7, 13))#candidate|4746|(15, 7, 13)|var|float64
bop_4747 = relay.floor_divide(call_4741.astype('float64'), relay.reshape(var_4746.astype('float64'), relay.shape_of(call_4741))) # shape=(15, 7, 13)
bop_4750 = relay.floor_divide(call_4743.astype('float64'), relay.reshape(var_4746.astype('float64'), relay.shape_of(call_4743))) # shape=(15, 7, 13)
var_4754 = relay.var("var_4754", dtype = "float64", shape = (1365,))#candidate|4754|(1365,)|var|float64
bop_4755 = relay.maximum(var_4742.astype('float64'), relay.reshape(var_4754.astype('float64'), relay.shape_of(var_4742))) # shape=(1365,)
output = relay.Tuple([call_4729,bop_4747,bop_4755,])
output2 = relay.Tuple([call_4730,bop_4750,bop_4755,])
func_4764 = relay.Function([var_4742,var_4746,var_4754,], output)
mod['func_4764'] = func_4764
mod = relay.transform.InferType()(mod)
var_4765 = relay.var("var_4765", dtype = "float64", shape = (1365,))#candidate|4765|(1365,)|var|float64
var_4766 = relay.var("var_4766", dtype = "float64", shape = (15, 7, 13))#candidate|4766|(15, 7, 13)|var|float64
var_4767 = relay.var("var_4767", dtype = "float64", shape = (1365,))#candidate|4767|(1365,)|var|float64
output = func_4764(var_4765,var_4766,var_4767,)
func_4768 = relay.Function([var_4765,var_4766,var_4767,], output)
mutated_mod['func_4768'] = func_4768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1908_call = mod.get_global_var('func_1908')
func_1910_call = mutated_mod.get_global_var('func_1910')
call_4833 = relay.TupleGetItem(func_1908_call(), 4)
call_4834 = relay.TupleGetItem(func_1910_call(), 4)
var_4847 = relay.var("var_4847", dtype = "bool", shape = (10, 10, 16))#candidate|4847|(10, 10, 16)|var|bool
bop_4848 = relay.logical_and(call_4833.astype('bool'), relay.reshape(var_4847.astype('bool'), relay.shape_of(call_4833))) # shape=(10, 10, 16)
bop_4851 = relay.logical_and(call_4834.astype('bool'), relay.reshape(var_4847.astype('bool'), relay.shape_of(call_4834))) # shape=(10, 10, 16)
output = relay.Tuple([bop_4848,])
output2 = relay.Tuple([bop_4851,])
func_4859 = relay.Function([var_4847,], output)
mod['func_4859'] = func_4859
mod = relay.transform.InferType()(mod)
var_4860 = relay.var("var_4860", dtype = "bool", shape = (10, 10, 16))#candidate|4860|(10, 10, 16)|var|bool
output = func_4859(var_4860)
func_4861 = relay.Function([var_4860], output)
mutated_mod['func_4861'] = func_4861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_4879 = relay.TupleGetItem(func_3083_call(), 0)
call_4880 = relay.TupleGetItem(func_3085_call(), 0)
output = call_4879
output2 = call_4880
func_4885 = relay.Function([], output)
mod['func_4885'] = func_4885
mod = relay.transform.InferType()(mod)
output = func_4885()
func_4886 = relay.Function([], output)
mutated_mod['func_4886'] = func_4886
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4947 = relay.var("var_4947", dtype = "float64", shape = (7, 14, 16))#candidate|4947|(7, 14, 16)|var|float64
uop_4948 = relay.tan(var_4947.astype('float64')) # shape=(7, 14, 16)
bop_4950 = relay.floor_divide(uop_4948.astype('float32'), relay.reshape(var_4947.astype('float32'), relay.shape_of(uop_4948))) # shape=(7, 14, 16)
output = relay.Tuple([bop_4950,])
output2 = relay.Tuple([bop_4950,])
func_4953 = relay.Function([var_4947,], output)
mod['func_4953'] = func_4953
mod = relay.transform.InferType()(mod)
mutated_mod['func_4953'] = func_4953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4954 = relay.var("var_4954", dtype = "float64", shape = (7, 14, 16))#candidate|4954|(7, 14, 16)|var|float64
func_4953_call = mutated_mod.get_global_var('func_4953')
call_4955 = func_4953_call(var_4954)
output = call_4955
func_4956 = relay.Function([var_4954], output)
mutated_mod['func_4956'] = func_4956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4466_call = mod.get_global_var('func_4466')
func_4467_call = mutated_mod.get_global_var('func_4467')
call_4958 = relay.TupleGetItem(func_4466_call(), 0)
call_4959 = relay.TupleGetItem(func_4467_call(), 0)
func_3706_call = mod.get_global_var('func_3706')
func_3707_call = mutated_mod.get_global_var('func_3707')
call_4970 = relay.TupleGetItem(func_3706_call(), 1)
call_4971 = relay.TupleGetItem(func_3707_call(), 1)
func_1849_call = mod.get_global_var('func_1849')
func_1850_call = mutated_mod.get_global_var('func_1850')
call_4990 = func_1849_call()
call_4991 = func_1849_call()
output = relay.Tuple([call_4958,call_4970,call_4990,])
output2 = relay.Tuple([call_4959,call_4971,call_4991,])
func_5004 = relay.Function([], output)
mod['func_5004'] = func_5004
mod = relay.transform.InferType()(mod)
output = func_5004()
func_5005 = relay.Function([], output)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3386_call = mod.get_global_var('func_3386')
func_3388_call = mutated_mod.get_global_var('func_3388')
call_5092 = func_3386_call()
call_5093 = func_3386_call()
func_3686_call = mod.get_global_var('func_3686')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_5098 = relay.TupleGetItem(func_3686_call(), 0)
call_5099 = relay.TupleGetItem(func_3687_call(), 0)
output = relay.Tuple([call_5092,call_5098,])
output2 = relay.Tuple([call_5093,call_5099,])
func_5105 = relay.Function([], output)
mod['func_5105'] = func_5105
mod = relay.transform.InferType()(mod)
mutated_mod['func_5105'] = func_5105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5105_call = mutated_mod.get_global_var('func_5105')
call_5106 = func_5105_call()
output = call_5106
func_5107 = relay.Function([], output)
mutated_mod['func_5107'] = func_5107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5157 = relay.var("var_5157", dtype = "uint32", shape = (10, 5, 5))#candidate|5157|(10, 5, 5)|var|uint32
const_5158 = relay.const([[[7,-4,1,8,-5],[-2,3,6,8,-4],[-5,-9,-5,5,-8],[-1,-10,1,-9,9],[-9,-2,8,10,6]],[[-10,-6,-5,2,6],[-4,-5,2,-6,-7],[2,8,8,2,2],[2,2,3,-9,-7],[6,-4,8,9,6]],[[10,1,3,-4,7],[-4,-9,7,4,-8],[-4,4,7,3,-7],[3,-8,5,-6,-6],[-6,4,-5,-9,8]],[[1,4,-10,-7,-9],[4,2,-6,5,6],[7,-4,-7,-1,-9],[6,2,3,-2,-7],[-7,-3,-4,5,-3]],[[5,-3,10,-7,10],[1,-3,-7,7,9],[10,-6,8,-4,-1],[4,-6,4,-10,-6],[-4,6,1,6,-3]],[[-1,-4,8,7,2],[10,6,4,-1,-9],[-5,-3,2,4,-2],[-4,10,8,-7,9],[-4,9,4,-10,-10]],[[-1,3,3,9,-5],[4,2,7,-3,6],[6,-2,10,10,2],[-8,-2,8,8,5],[-6,3,5,9,-4]],[[2,3,-7,-2,4],[7,-7,-4,-8,-2],[-6,-4,-10,6,-8],[2,-2,-6,1,-10],[-1,6,-7,7,-3]],[[-8,9,7,-10,-9],[-5,8,8,-10,1],[-2,6,4,-8,-1],[-10,-9,1,-10,-9],[1,10,3,3,-6]],[[1,1,-10,3,4],[9,2,-4,-4,-8],[-3,-8,6,10,-3],[6,-8,3,1,-6],[-9,10,-4,6,9]]], dtype = "uint32")#candidate|5158|(10, 5, 5)|const|uint32
bop_5159 = relay.bitwise_xor(var_5157.astype('uint32'), relay.reshape(const_5158.astype('uint32'), relay.shape_of(var_5157))) # shape=(10, 5, 5)
func_66_call = mod.get_global_var('func_66')
func_69_call = mutated_mod.get_global_var('func_69')
var_5175 = relay.var("var_5175", dtype = "float64", shape = (1600,))#candidate|5175|(1600,)|var|float64
call_5174 = relay.TupleGetItem(func_66_call(relay.reshape(var_5175.astype('float64'), [10, 10, 16])), 0)
call_5176 = relay.TupleGetItem(func_69_call(relay.reshape(var_5175.astype('float64'), [10, 10, 16])), 0)
func_1790_call = mod.get_global_var('func_1790')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_5182 = relay.TupleGetItem(func_1790_call(), 0)
call_5183 = relay.TupleGetItem(func_1792_call(), 0)
uop_5184 = relay.log2(const_5158.astype('float64')) # shape=(10, 5, 5)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
call_5189 = relay.TupleGetItem(func_1699_call(), 0)
call_5190 = relay.TupleGetItem(func_1701_call(), 0)
output = relay.Tuple([bop_5159,call_5174,var_5175,call_5182,uop_5184,call_5189,])
output2 = relay.Tuple([bop_5159,call_5176,var_5175,call_5183,uop_5184,call_5190,])
func_5194 = relay.Function([var_5157,var_5175,], output)
mod['func_5194'] = func_5194
mod = relay.transform.InferType()(mod)
mutated_mod['func_5194'] = func_5194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5194_call = mutated_mod.get_global_var('func_5194')
var_5196 = relay.var("var_5196", dtype = "uint32", shape = (10, 5, 5))#candidate|5196|(10, 5, 5)|var|uint32
var_5197 = relay.var("var_5197", dtype = "float64", shape = (1600,))#candidate|5197|(1600,)|var|float64
call_5195 = func_5194_call(var_5196,var_5197,)
output = call_5195
func_5198 = relay.Function([var_5196,var_5197,], output)
mutated_mod['func_5198'] = func_5198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_5257 = func_2685_call()
call_5258 = func_2685_call()
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
var_5293 = relay.var("var_5293", dtype = "float64", shape = (1600,))#candidate|5293|(1600,)|var|float64
call_5292 = relay.TupleGetItem(func_218_call(relay.reshape(var_5293.astype('float64'), [1600,])), 0)
call_5294 = relay.TupleGetItem(func_220_call(relay.reshape(var_5293.astype('float64'), [1600,])), 0)
output = relay.Tuple([call_5257,call_5292,var_5293,])
output2 = relay.Tuple([call_5258,call_5294,var_5293,])
func_5297 = relay.Function([var_5293,], output)
mod['func_5297'] = func_5297
mod = relay.transform.InferType()(mod)
mutated_mod['func_5297'] = func_5297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5298 = relay.var("var_5298", dtype = "float64", shape = (1600,))#candidate|5298|(1600,)|var|float64
func_5297_call = mutated_mod.get_global_var('func_5297')
call_5299 = func_5297_call(var_5298)
output = call_5299
func_5300 = relay.Function([var_5298], output)
mutated_mod['func_5300'] = func_5300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2217_call = mod.get_global_var('func_2217')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_5322 = relay.TupleGetItem(func_2217_call(), 0)
call_5323 = relay.TupleGetItem(func_2219_call(), 0)
func_4859_call = mod.get_global_var('func_4859')
func_4861_call = mutated_mod.get_global_var('func_4861')
call_5335 = relay.TupleGetItem(func_4859_call(relay.reshape(call_5322.astype('bool'), [10, 10, 16])), 0)
call_5336 = relay.TupleGetItem(func_4861_call(relay.reshape(call_5322.astype('bool'), [10, 10, 16])), 0)
func_2217_call = mod.get_global_var('func_2217')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_5345 = relay.TupleGetItem(func_2217_call(), 0)
call_5346 = relay.TupleGetItem(func_2219_call(), 0)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_5352 = relay.TupleGetItem(func_120_call(), 0)
call_5353 = relay.TupleGetItem(func_122_call(), 0)
output = relay.Tuple([call_5322,call_5335,call_5345,call_5352,])
output2 = relay.Tuple([call_5323,call_5336,call_5346,call_5353,])
func_5354 = relay.Function([], output)
mod['func_5354'] = func_5354
mod = relay.transform.InferType()(mod)
output = func_5354()
func_5355 = relay.Function([], output)
mutated_mod['func_5355'] = func_5355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1763_call = mod.get_global_var('func_1763')
func_1765_call = mutated_mod.get_global_var('func_1765')
call_5366 = relay.TupleGetItem(func_1763_call(), 2)
call_5367 = relay.TupleGetItem(func_1765_call(), 2)
output = relay.Tuple([call_5366,])
output2 = relay.Tuple([call_5367,])
func_5378 = relay.Function([], output)
mod['func_5378'] = func_5378
mod = relay.transform.InferType()(mod)
mutated_mod['func_5378'] = func_5378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5378_call = mutated_mod.get_global_var('func_5378')
call_5379 = func_5378_call()
output = call_5379
func_5380 = relay.Function([], output)
mutated_mod['func_5380'] = func_5380
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5400 = relay.const([[[-9.543625,-4.815033,-3.478444,4.947871,-7.218890,-6.202871],[-1.112021,-2.508419,6.745154,-0.534829,-6.108420,-0.749406],[1.104029,6.234814,5.977077,-0.384828,-9.469195,3.348797],[1.788924,-2.608421,3.169255,2.269813,2.386482,0.942346],[6.900721,2.127649,-4.399899,6.418413,8.978968,-4.760218]],[[9.100364,-3.362088,3.468561,-3.829038,0.259554,-9.663464],[6.590464,-5.894010,-6.436832,-0.156437,4.809486,2.046281],[5.590168,-5.695617,4.492496,6.212208,7.023223,8.808835],[-8.446720,-7.951402,-9.362580,-7.398985,-5.983092,9.351489],[2.185113,-1.182300,7.258713,-6.602646,-0.400424,7.603085]],[[4.337901,-3.510583,-0.342218,-1.337445,4.934203,-5.660492],[6.903833,9.069787,5.832594,-1.149276,-4.458717,-5.515557],[3.402141,-0.154798,4.386017,4.454466,6.530921,6.465420],[6.663655,-2.135463,-8.823631,1.447660,4.557195,1.985165],[4.549423,2.414503,-6.512416,9.559929,0.096340,2.463387]],[[2.513241,2.593870,-0.797795,-7.856818,-3.405966,-2.762748],[-9.284815,0.060994,2.279932,-3.665565,-7.433415,-5.271822],[2.096024,-6.425320,-6.727261,7.466076,8.832551,-0.285301],[-9.258486,9.552089,4.878252,4.513630,3.058652,9.577282],[-6.328659,7.582559,-9.079215,9.110791,3.097660,-9.267388]],[[-6.044528,2.885003,-5.244658,0.447046,3.101789,-3.668854],[9.233671,-8.395592,-0.137560,6.777798,5.597541,0.097090],[-0.322771,-9.531963,5.731957,8.005646,-4.218607,0.498647],[-2.247565,0.035085,2.270698,-7.530298,-9.738273,-0.827868],[5.595594,6.927924,-4.109541,-3.091602,7.402944,9.053148]],[[5.919878,-4.644900,0.162997,-9.276279,0.188982,7.540240],[1.293448,8.342390,-9.818012,-9.387702,8.953870,4.167214],[7.597538,-9.163125,-5.880706,1.835186,7.081860,4.671394],[6.714804,-5.495733,-3.223951,1.278653,-1.160805,1.639464],[-8.197908,-6.136230,5.034041,-8.481371,9.670664,7.484847]],[[-3.780549,6.294891,7.123040,-6.325142,-9.992100,2.253950],[1.102703,3.159129,3.160107,-8.808189,-8.584886,8.007723],[-5.425638,-2.459308,-9.299290,4.476595,-3.635728,-8.421056],[-5.115859,-6.082419,-2.075621,6.799594,8.122597,5.687593],[0.014887,-3.082685,-7.713440,0.144313,7.632555,-4.732224]],[[8.881176,-7.381546,-7.781686,7.531250,-1.218720,3.806840],[4.642287,-1.587307,5.669169,8.468207,5.697363,4.086059],[6.440618,4.259948,-6.581878,2.316298,5.774611,-9.258231],[-6.355633,-8.444568,2.061984,7.367073,-6.809634,5.727434],[1.647523,-4.324818,1.681270,-4.200497,-9.636764,8.137407]],[[8.295371,3.919081,3.894821,-6.012564,5.607599,-4.069847],[6.745613,-8.731369,0.823784,3.667875,-5.217411,2.198848],[2.460381,2.352799,9.375914,7.227861,2.137510,-4.699059],[-0.585018,-9.375890,5.085515,-5.924774,8.799725,3.986305],[5.193998,6.806882,-1.043093,0.328635,9.430222,-8.454373]],[[7.427833,4.887618,-9.627022,5.668251,4.143259,-2.047017],[-0.230785,2.101733,0.360958,-5.738943,4.857081,1.622020],[2.077404,-0.446642,5.374529,7.311770,-7.263070,0.687342],[-8.485149,2.086535,-7.715569,1.045690,-0.557781,-0.874298],[7.282514,-5.395313,8.638294,-2.131881,-6.344775,8.008110]],[[8.381299,0.787223,6.770920,-2.163711,6.348994,9.196612],[-5.984168,8.180169,8.786878,-4.257033,-8.512640,-0.815102],[-8.900725,-1.430938,0.329417,-0.040880,2.647984,-4.492835],[-1.512192,-1.338474,-6.855057,-2.487295,-2.621149,0.776280],[8.823440,-7.345492,3.260031,1.018629,-7.362614,-3.079501]],[[8.932300,-3.385781,-0.860469,-5.689091,-1.474177,9.697506],[-1.402606,4.553852,2.380668,8.816755,-4.232746,-7.101540],[-9.973487,-1.483182,-8.894980,-2.051500,5.460650,-1.896584],[7.799503,4.383003,2.378439,-5.206749,-1.207474,9.023189],[-4.109209,-8.339838,-6.497410,-3.184683,2.384868,3.225457]],[[-7.017713,0.254201,0.275235,5.704427,-6.135280,-9.623075],[0.122608,-3.056634,-4.899177,6.297971,-7.297176,0.791913],[9.252759,1.036903,-1.071240,-4.717053,-3.572258,3.648488],[8.738313,-5.189027,1.177747,4.784928,0.644228,-1.008808],[1.209618,-7.368414,5.384837,0.015301,-7.712990,7.114335]],[[4.453635,7.626529,-8.051759,6.678650,0.406172,0.968737],[-8.909354,-7.414375,-2.956542,5.747272,-4.255510,2.948759],[-8.801980,-2.036486,2.382560,5.538950,8.698154,-1.653491],[7.324182,2.964128,7.003582,0.314683,-2.984328,6.799369],[-7.579219,-1.213937,6.833485,0.751796,-3.909304,-1.562438]],[[4.340618,1.954091,-5.542845,-8.572184,7.668882,-3.173401],[7.232371,0.818341,0.257999,-1.199865,0.964038,3.072678],[0.589412,-0.096568,-0.045787,1.311737,8.166332,8.625240],[6.721761,2.233396,4.479948,3.400600,-9.811281,-9.579408],[-8.829638,7.990354,-3.233777,-8.631991,7.899771,1.009389]]], dtype = "float32")#candidate|5400|(15, 5, 6)|const|float32
var_5401 = relay.var("var_5401", dtype = "float32", shape = (15, 5, 6))#candidate|5401|(15, 5, 6)|var|float32
bop_5402 = relay.equal(const_5400.astype('bool'), relay.reshape(var_5401.astype('bool'), relay.shape_of(const_5400))) # shape=(15, 5, 6)
func_4764_call = mod.get_global_var('func_4764')
func_4768_call = mutated_mod.get_global_var('func_4768')
var_5407 = relay.var("var_5407", dtype = "float64", shape = (1365,))#candidate|5407|(1365,)|var|float64
call_5406 = relay.TupleGetItem(func_4764_call(relay.reshape(var_5407.astype('float64'), [1365,]), relay.reshape(var_5407.astype('float64'), [15, 7, 13]), relay.reshape(var_5407.astype('float64'), [1365,]), ), 2)
call_5408 = relay.TupleGetItem(func_4768_call(relay.reshape(var_5407.astype('float64'), [1365,]), relay.reshape(var_5407.astype('float64'), [15, 7, 13]), relay.reshape(var_5407.astype('float64'), [1365,]), ), 2)
output = relay.Tuple([bop_5402,call_5406,var_5407,])
output2 = relay.Tuple([bop_5402,call_5408,var_5407,])
func_5427 = relay.Function([var_5401,var_5407,], output)
mod['func_5427'] = func_5427
mod = relay.transform.InferType()(mod)
mutated_mod['func_5427'] = func_5427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5427_call = mutated_mod.get_global_var('func_5427')
var_5429 = relay.var("var_5429", dtype = "float32", shape = (15, 5, 6))#candidate|5429|(15, 5, 6)|var|float32
var_5430 = relay.var("var_5430", dtype = "float64", shape = (1365,))#candidate|5430|(1365,)|var|float64
call_5428 = func_5427_call(var_5429,var_5430,)
output = call_5428
func_5431 = relay.Function([var_5429,var_5430,], output)
mutated_mod['func_5431'] = func_5431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4237_call = mod.get_global_var('func_4237')
func_4239_call = mutated_mod.get_global_var('func_4239')
call_5487 = relay.TupleGetItem(func_4237_call(), 0)
call_5488 = relay.TupleGetItem(func_4239_call(), 0)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_5489 = func_971_call()
call_5490 = func_971_call()
output = relay.Tuple([call_5487,call_5489,])
output2 = relay.Tuple([call_5488,call_5490,])
func_5509 = relay.Function([], output)
mod['func_5509'] = func_5509
mod = relay.transform.InferType()(mod)
mutated_mod['func_5509'] = func_5509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5509_call = mutated_mod.get_global_var('func_5509')
call_5510 = func_5509_call()
output = call_5510
func_5511 = relay.Function([], output)
mutated_mod['func_5511'] = func_5511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mod.get_global_var('func_1841')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_5517 = relay.TupleGetItem(func_1841_call(), 0)
call_5518 = relay.TupleGetItem(func_1843_call(), 0)
func_4953_call = mod.get_global_var('func_4953')
func_4956_call = mutated_mod.get_global_var('func_4956')
var_5523 = relay.var("var_5523", dtype = "float64", shape = (1568,))#candidate|5523|(1568,)|var|float64
call_5522 = relay.TupleGetItem(func_4953_call(relay.reshape(var_5523.astype('float64'), [7, 14, 16])), 0)
call_5524 = relay.TupleGetItem(func_4956_call(relay.reshape(var_5523.astype('float64'), [7, 14, 16])), 0)
bop_5530 = relay.minimum(call_5522.astype('float32'), relay.reshape(var_5523.astype('float32'), relay.shape_of(call_5522))) # shape=(7, 14, 16)
bop_5533 = relay.minimum(call_5524.astype('float32'), relay.reshape(var_5523.astype('float32'), relay.shape_of(call_5524))) # shape=(7, 14, 16)
output = relay.Tuple([call_5517,bop_5530,])
output2 = relay.Tuple([call_5518,bop_5533,])
func_5537 = relay.Function([var_5523,], output)
mod['func_5537'] = func_5537
mod = relay.transform.InferType()(mod)
mutated_mod['func_5537'] = func_5537
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5538 = relay.var("var_5538", dtype = "float64", shape = (1568,))#candidate|5538|(1568,)|var|float64
func_5537_call = mutated_mod.get_global_var('func_5537')
call_5539 = func_5537_call(var_5538)
output = call_5539
func_5540 = relay.Function([var_5538], output)
mutated_mod['func_5540'] = func_5540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3346_call = mod.get_global_var('func_3346')
func_3348_call = mutated_mod.get_global_var('func_3348')
call_5547 = relay.TupleGetItem(func_3346_call(), 0)
call_5548 = relay.TupleGetItem(func_3348_call(), 0)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
var_5587 = relay.var("var_5587", dtype = "float64", shape = (1600,))#candidate|5587|(1600,)|var|float64
call_5586 = relay.TupleGetItem(func_218_call(relay.reshape(var_5587.astype('float64'), [1600,])), 2)
call_5588 = relay.TupleGetItem(func_220_call(relay.reshape(var_5587.astype('float64'), [1600,])), 2)
output = relay.Tuple([call_5547,call_5586,var_5587,])
output2 = relay.Tuple([call_5548,call_5588,var_5587,])
func_5600 = relay.Function([var_5587,], output)
mod['func_5600'] = func_5600
mod = relay.transform.InferType()(mod)
var_5601 = relay.var("var_5601", dtype = "float64", shape = (1600,))#candidate|5601|(1600,)|var|float64
output = func_5600(var_5601)
func_5602 = relay.Function([var_5601], output)
mutated_mod['func_5602'] = func_5602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1908_call = mod.get_global_var('func_1908')
func_1910_call = mutated_mod.get_global_var('func_1910')
call_5624 = relay.TupleGetItem(func_1908_call(), 0)
call_5625 = relay.TupleGetItem(func_1910_call(), 0)
var_5627 = relay.var("var_5627", dtype = "float32", shape = (6, 5, 10))#candidate|5627|(6, 5, 10)|var|float32
bop_5628 = relay.less(call_5624.astype('bool'), relay.reshape(var_5627.astype('bool'), relay.shape_of(call_5624))) # shape=(6, 5, 10)
bop_5631 = relay.less(call_5625.astype('bool'), relay.reshape(var_5627.astype('bool'), relay.shape_of(call_5625))) # shape=(6, 5, 10)
func_5600_call = mod.get_global_var('func_5600')
func_5602_call = mutated_mod.get_global_var('func_5602')
var_5636 = relay.var("var_5636", dtype = "float64", shape = (1600,))#candidate|5636|(1600,)|var|float64
call_5635 = relay.TupleGetItem(func_5600_call(relay.reshape(var_5636.astype('float64'), [1600,])), 1)
call_5637 = relay.TupleGetItem(func_5602_call(relay.reshape(var_5636.astype('float64'), [1600,])), 1)
uop_5639 = relay.rsqrt(call_5635.astype('float32')) # shape=(1600,)
uop_5641 = relay.rsqrt(call_5637.astype('float32')) # shape=(1600,)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_5642 = relay.TupleGetItem(func_2645_call(), 0)
call_5643 = relay.TupleGetItem(func_2647_call(), 0)
func_4640_call = mod.get_global_var('func_4640')
func_4642_call = mutated_mod.get_global_var('func_4642')
call_5646 = relay.TupleGetItem(func_4640_call(), 0)
call_5647 = relay.TupleGetItem(func_4642_call(), 0)
func_296_call = mod.get_global_var('func_296')
func_299_call = mutated_mod.get_global_var('func_299')
call_5657 = relay.TupleGetItem(func_296_call(relay.reshape(var_5636.astype('float64'), [20, 80])), 2)
call_5658 = relay.TupleGetItem(func_299_call(relay.reshape(var_5636.astype('float64'), [20, 80])), 2)
output = relay.Tuple([bop_5628,var_5636,uop_5639,call_5642,call_5646,call_5657,])
output2 = relay.Tuple([bop_5631,var_5636,uop_5641,call_5643,call_5647,call_5658,])
func_5660 = relay.Function([var_5627,var_5636,], output)
mod['func_5660'] = func_5660
mod = relay.transform.InferType()(mod)
mutated_mod['func_5660'] = func_5660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5660_call = mutated_mod.get_global_var('func_5660')
var_5662 = relay.var("var_5662", dtype = "float32", shape = (6, 5, 10))#candidate|5662|(6, 5, 10)|var|float32
var_5663 = relay.var("var_5663", dtype = "float64", shape = (1600,))#candidate|5663|(1600,)|var|float64
call_5661 = func_5660_call(var_5662,var_5663,)
output = call_5661
func_5664 = relay.Function([var_5662,var_5663,], output)
mutated_mod['func_5664'] = func_5664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1231_call = mod.get_global_var('func_1231')
func_1233_call = mutated_mod.get_global_var('func_1233')
call_5686 = func_1231_call()
call_5687 = func_1231_call()
output = call_5686
output2 = call_5687
func_5688 = relay.Function([], output)
mod['func_5688'] = func_5688
mod = relay.transform.InferType()(mod)
output = func_5688()
func_5689 = relay.Function([], output)
mutated_mod['func_5689'] = func_5689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1908_call = mod.get_global_var('func_1908')
func_1910_call = mutated_mod.get_global_var('func_1910')
call_5700 = relay.TupleGetItem(func_1908_call(), 2)
call_5701 = relay.TupleGetItem(func_1910_call(), 2)
func_5509_call = mod.get_global_var('func_5509')
func_5511_call = mutated_mod.get_global_var('func_5511')
call_5719 = relay.TupleGetItem(func_5509_call(), 1)
call_5720 = relay.TupleGetItem(func_5511_call(), 1)
func_5600_call = mod.get_global_var('func_5600')
func_5602_call = mutated_mod.get_global_var('func_5602')
call_5731 = relay.TupleGetItem(func_5600_call(relay.reshape(call_5719.astype('float64'), [1600,])), 0)
call_5732 = relay.TupleGetItem(func_5602_call(relay.reshape(call_5719.astype('float64'), [1600,])), 0)
bop_5742 = relay.greater_equal(call_5700.astype('bool'), relay.reshape(call_5731.astype('bool'), relay.shape_of(call_5700))) # shape=(6, 5, 10)
bop_5745 = relay.greater_equal(call_5701.astype('bool'), relay.reshape(call_5732.astype('bool'), relay.shape_of(call_5701))) # shape=(6, 5, 10)
output = relay.Tuple([call_5719,bop_5742,])
output2 = relay.Tuple([call_5720,bop_5745,])
func_5750 = relay.Function([], output)
mod['func_5750'] = func_5750
mod = relay.transform.InferType()(mod)
mutated_mod['func_5750'] = func_5750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5750_call = mutated_mod.get_global_var('func_5750')
call_5751 = func_5750_call()
output = call_5751
func_5752 = relay.Function([], output)
mutated_mod['func_5752'] = func_5752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2509_call = mod.get_global_var('func_2509')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_5801 = relay.TupleGetItem(func_2509_call(), 0)
call_5802 = relay.TupleGetItem(func_2511_call(), 0)
output = relay.Tuple([call_5801,])
output2 = relay.Tuple([call_5802,])
func_5812 = relay.Function([], output)
mod['func_5812'] = func_5812
mod = relay.transform.InferType()(mod)
output = func_5812()
func_5813 = relay.Function([], output)
mutated_mod['func_5813'] = func_5813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_5814 = relay.TupleGetItem(func_3083_call(), 0)
call_5815 = relay.TupleGetItem(func_3085_call(), 0)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
var_5832 = relay.var("var_5832", dtype = "float64", shape = (1600,))#candidate|5832|(1600,)|var|float64
call_5831 = relay.TupleGetItem(func_218_call(relay.reshape(var_5832.astype('float64'), [1600,])), 1)
call_5833 = relay.TupleGetItem(func_220_call(relay.reshape(var_5832.astype('float64'), [1600,])), 1)
func_4074_call = mod.get_global_var('func_4074')
func_4076_call = mutated_mod.get_global_var('func_4076')
call_5835 = relay.TupleGetItem(func_4074_call(relay.reshape(call_5814.astype('int8'), [300,])), 1)
call_5836 = relay.TupleGetItem(func_4076_call(relay.reshape(call_5814.astype('int8'), [300,])), 1)
func_5378_call = mod.get_global_var('func_5378')
func_5380_call = mutated_mod.get_global_var('func_5380')
call_5838 = relay.TupleGetItem(func_5378_call(), 0)
call_5839 = relay.TupleGetItem(func_5380_call(), 0)
func_3386_call = mod.get_global_var('func_3386')
func_3388_call = mutated_mod.get_global_var('func_3388')
call_5876 = func_3386_call()
call_5877 = func_3386_call()
func_2785_call = mod.get_global_var('func_2785')
func_2787_call = mutated_mod.get_global_var('func_2787')
const_5882 = relay.const([6,-1,7,6,-9,-5,2,2,4,6,8,4,4,7,1,7,3,6,2,-4,-5,-5,-4,5,-2,-7,-6,4,-1,3,-2,-9,8,3,-7,10,-5,-9,4,6,-2,6,3,1,-2,4,-7,-9,6,5,-10,-5,4,3,-7,-5,1,10,3,6,8,-1,4,-9,1,-4,-1,-7,5,2,-10,-3,-8,5,-6,9,4,8,8,-8,3,2,-3,6,1,-7,5,-4,-5,-6,-1,-5,-5,-10,-2,3,-10,-9,8,-8,5,9,-7,7,-1,5,8,-6,-4,-7,5,-4,-7,-8,10,3,3,-7,7,4,-9,-2,8,-1,4,-1,-7,6,9,10,-9,-5,7,5,-10,-1,-10,5,3,-2,-3,8,9,-4,7,8,-7,10,-6,7,6,4,-5,1,4,-4,6,7,-9,4,6,-4,4,8,-9,-8,5,8,-1,-7,-4,-2,-7,6,1,-2,1,-2,7,6,5,10,6,-9,7,-3,-10,-1,-5,1,-8,-5], dtype = "uint64")#candidate|5882|(192,)|const|uint64
call_5881 = relay.TupleGetItem(func_2785_call(relay.reshape(const_5882.astype('uint64'), [12, 8, 2])), 0)
call_5883 = relay.TupleGetItem(func_2787_call(relay.reshape(const_5882.astype('uint64'), [12, 8, 2])), 0)
func_1908_call = mod.get_global_var('func_1908')
func_1910_call = mutated_mod.get_global_var('func_1910')
call_5906 = relay.TupleGetItem(func_1908_call(), 2)
call_5907 = relay.TupleGetItem(func_1910_call(), 2)
output = relay.Tuple([call_5814,call_5831,var_5832,call_5835,call_5838,call_5876,call_5881,const_5882,call_5906,])
output2 = relay.Tuple([call_5815,call_5833,var_5832,call_5836,call_5839,call_5877,call_5883,const_5882,call_5907,])
func_5916 = relay.Function([var_5832,], output)
mod['func_5916'] = func_5916
mod = relay.transform.InferType()(mod)
var_5917 = relay.var("var_5917", dtype = "float64", shape = (1600,))#candidate|5917|(1600,)|var|float64
output = func_5916(var_5917)
func_5918 = relay.Function([var_5917], output)
mutated_mod['func_5918'] = func_5918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3779_call = mod.get_global_var('func_3779')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_5940 = func_3779_call()
call_5941 = func_3779_call()
output = relay.Tuple([call_5940,])
output2 = relay.Tuple([call_5941,])
func_5945 = relay.Function([], output)
mod['func_5945'] = func_5945
mod = relay.transform.InferType()(mod)
mutated_mod['func_5945'] = func_5945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5945_call = mutated_mod.get_global_var('func_5945')
call_5946 = func_5945_call()
output = call_5946
func_5947 = relay.Function([], output)
mutated_mod['func_5947'] = func_5947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_5968 = func_2685_call()
call_5969 = func_2685_call()
uop_5972 = relay.cosh(call_5968.astype('float32')) # shape=(6, 5, 10)
uop_5974 = relay.cosh(call_5969.astype('float32')) # shape=(6, 5, 10)
output = relay.Tuple([uop_5972,])
output2 = relay.Tuple([uop_5974,])
func_5977 = relay.Function([], output)
mod['func_5977'] = func_5977
mod = relay.transform.InferType()(mod)
output = func_5977()
func_5978 = relay.Function([], output)
mutated_mod['func_5978'] = func_5978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5990 = relay.var("var_5990", dtype = "uint8", shape = (14, 3, 5))#candidate|5990|(14, 3, 5)|var|uint8
var_5991 = relay.var("var_5991", dtype = "uint8", shape = (14, 3, 5))#candidate|5991|(14, 3, 5)|var|uint8
bop_5992 = relay.less_equal(var_5990.astype('bool'), relay.reshape(var_5991.astype('bool'), relay.shape_of(var_5990))) # shape=(14, 3, 5)
uop_5996 = relay.log10(var_5991.astype('float32')) # shape=(14, 3, 5)
output = relay.Tuple([bop_5992,uop_5996,])
output2 = relay.Tuple([bop_5992,uop_5996,])
func_6007 = relay.Function([var_5990,var_5991,], output)
mod['func_6007'] = func_6007
mod = relay.transform.InferType()(mod)
var_6008 = relay.var("var_6008", dtype = "uint8", shape = (14, 3, 5))#candidate|6008|(14, 3, 5)|var|uint8
var_6009 = relay.var("var_6009", dtype = "uint8", shape = (14, 3, 5))#candidate|6009|(14, 3, 5)|var|uint8
output = func_6007(var_6008,var_6009,)
func_6010 = relay.Function([var_6008,var_6009,], output)
mutated_mod['func_6010'] = func_6010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_6034 = relay.TupleGetItem(func_120_call(), 0)
call_6035 = relay.TupleGetItem(func_122_call(), 0)
func_5660_call = mod.get_global_var('func_5660')
func_5664_call = mutated_mod.get_global_var('func_5664')
var_6062 = relay.var("var_6062", dtype = "float64", shape = (1600,))#candidate|6062|(1600,)|var|float64
call_6061 = relay.TupleGetItem(func_5660_call(relay.reshape(call_6034.astype('float32'), [6, 5, 10]), relay.reshape(var_6062.astype('float64'), [1600,]), ), 5)
call_6063 = relay.TupleGetItem(func_5664_call(relay.reshape(call_6034.astype('float32'), [6, 5, 10]), relay.reshape(var_6062.astype('float64'), [1600,]), ), 5)
bop_6064 = relay.maximum(call_6061.astype('float64'), relay.reshape(var_6062.astype('float64'), relay.shape_of(call_6061))) # shape=(20, 80)
bop_6067 = relay.maximum(call_6063.astype('float64'), relay.reshape(var_6062.astype('float64'), relay.shape_of(call_6063))) # shape=(20, 80)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
call_6071 = relay.TupleGetItem(func_218_call(relay.reshape(var_6062.astype('float64'), [1600,])), 2)
call_6072 = relay.TupleGetItem(func_220_call(relay.reshape(var_6062.astype('float64'), [1600,])), 2)
func_4764_call = mod.get_global_var('func_4764')
func_4768_call = mutated_mod.get_global_var('func_4768')
const_6076 = relay.const([8.603903,-5.677390,6.483783,-8.624668,3.426319,-9.782734,6.085221,5.245823,7.216882,-8.101666,1.324767,9.129216,4.986974,-9.004194,1.935810,6.882666,4.364364,-0.326805,4.752666,9.386551,-6.284174,-6.479046,-3.837006,8.924248,-8.645557,-9.708821,5.608777,-3.076013,-6.960356,2.799603,5.548616,-9.621994,-9.523603,0.184712,7.389592,3.358330,-7.879788,6.754768,1.687604,-5.496443,-8.773584,0.926420,5.049906,5.761541,3.464986,6.876003,6.425348,2.171787,-1.805208,9.558942,-3.806621,1.100860,-8.228709,9.650368,3.443847,6.653370,-3.132429,-3.765574,-7.253520,0.093222,-8.647484,-3.845436,-6.733470,-9.124521,0.905817,4.269989,-4.751008,-9.992196,2.130627,-8.445988,-7.521464,5.486961,6.901279,-7.619098,1.310714,3.150149,-0.242349,9.123672,0.961969,-2.467393,-0.081509,-7.889997,-7.540336,7.567079,-5.650161,8.529555,-2.413946,-3.882756,-3.378424,2.505358,-5.398700,1.713900,1.201846,-8.105820,-0.872702,0.009631,-9.904736,3.240765,-6.326030,-6.817549,9.773903,8.395902,-7.007536,6.204747,-2.620277,-5.836703,3.536073,-3.776824,2.514398,7.994559,5.727002,-0.028619,2.899574,-0.651646,-4.095415,-9.295284,-7.869238,6.927868,8.643962,7.979078,-4.456951,4.157697,-1.888500,-9.736703,-2.215291,3.499105,-3.099289,4.862203,-8.475514,7.261489,-8.342393,-4.279671,-5.233113,-9.949810,-2.551884,8.695987,6.870122,-3.010681,-8.306282,6.309938,-1.012507,-7.529818,-9.462794,-9.018602,-1.818617,-3.969838,-7.108660,1.193246,-3.461288,-1.247342,-4.985409,2.211154,-5.881062,1.458578,-8.473411,1.320909,5.312963,4.314488,2.689951,-5.092331,-3.435525,1.135729,7.493514,2.011454,-5.402692,-6.832106,2.356118,-6.512777,2.347990,7.777044,2.722877,6.390388,-4.439634,-6.940326,-3.531600,2.038057,6.577916,6.303086,-0.863738,3.322554,1.358946,5.816509,8.484104,-2.619457,7.522443,9.570141,3.295107,1.825785,0.358886,3.723633,4.342742,-3.826308,1.506508,5.320904,-0.637718,-7.577807,7.413956,8.566215,-2.347848,1.208308,6.819844,-4.773838,9.592595,-8.986897,1.805999,2.068305,4.159021,-4.820754,3.709092,-5.451030,-0.390345,6.445257,-2.006596,-6.161660,3.013267,-7.773684,-2.143557,1.413871,-6.894717,1.888667,3.457393,-9.116063,-1.670406,-8.316346,6.667186,-4.118241,1.274447,9.168640,-3.408323,-7.632312,5.627460,-0.668895,3.979303,-9.916265,0.773475,-1.589439,-2.006598,9.409371,5.626379,-8.376603,-6.278852,-4.610868,9.540731,3.037170,9.501370,9.277508,-5.061504,6.167420,5.333404,-1.237962,0.511821,5.397703,4.528563,-3.177329,-0.238182,3.519187,4.311871,0.681331,7.864114,-6.497291,-2.915248,-8.318851,5.491342,1.370030,4.227870,-8.348667,-3.921725,-0.832707,-6.087565,-3.225445,1.974091,-9.308809,1.053778,0.284623,-4.232160,4.710934,7.614440,-8.809042,2.175639,1.962130,4.477868,3.648985,-9.836059,1.242893,9.288623,3.527528,-4.850325,4.509310,8.865902,-8.104643,9.198483,2.253030,8.552903,5.727456,6.700275,8.940710,-8.686092,-0.858272,-8.079062,-4.700613,4.644471,6.083185,6.923738,2.346378,3.330350,-6.363784,9.193882,-1.548384,7.342981,-5.998436,-6.437336,8.482710,-6.208108,3.418792,-9.492112,-5.644937,-1.128374,1.809397,8.617255,-7.937734,-0.399269,1.628383,-8.715359,3.244156,5.157987,-9.319083,2.853442,3.906462,0.202754,5.121548,-0.414775,1.539811,6.786096,-1.390666,8.396985,3.966970,9.508953,-2.477020,-5.308634,-0.111893,9.712055,-1.361366,-0.980684,-1.602785,-7.972037,6.409835,-3.110034,2.035160,8.770855,-5.201722,7.830825,0.743936,-1.997051,-0.176431,1.767454,-6.550102,-6.121662,7.429509,-0.985429,-2.412076,7.474181,3.813159,4.539724,6.185791,-8.824288,4.668081,-2.151802,2.149093,-1.871166,6.639270,-0.890438,-5.298370,-8.668124,2.192906,-3.734798,-6.158429,-6.360756,1.413442,-5.665648,-4.696433,-4.310367,-5.823877,-6.448352,0.479414,-9.493986,-8.701507,-1.649695,6.633191,2.511521,-2.389835,-3.683211,7.403460,-1.202552,-0.737379,-2.305546,-0.531381,2.295003,6.536161,-8.832568,-8.305260,1.427181,4.012237,-6.567990,6.590644,6.430582,4.089156,-1.320766,-4.086990,6.462476,4.335925,-5.898072,-6.131958,6.231525,8.347448,-7.952906,-8.173844,0.600183,8.197408,-9.190135,0.937669,-4.388652,0.816267,7.771387,-6.355785,1.975956,-5.878116,5.116688,4.990938,-9.882651,-1.064642,-5.090469,1.335461,-7.039964,4.807928,6.692193,-3.814049,9.657189,-6.008002,-1.145308,8.376570,-7.154466,0.845510,-2.988864,-5.769588,9.668615,5.658672,9.594715,7.504024,-6.252048,-1.547407,2.492257,9.659301,7.288987,-4.262086,-9.855988,2.133356,4.827569,-3.108838,7.018600,6.441487,5.090360,-1.697583,9.839805,-5.338753,6.983731,5.402437,-8.373405,1.356247,-6.702438,3.223175,-0.340838,5.077691,7.876087,7.236800,7.296118,6.211260,-1.700842,6.296754,-4.819925,4.768338,5.781896,-4.379916,2.210830,7.558643,9.838834,3.866104,1.144758,-3.121592,-2.030058,7.755712,-0.131360,0.222845,-4.397440,-6.642944,-2.730641,-0.248161,-4.443705,6.302429,8.951694,7.332551,5.273891,-1.550176,8.173589,7.444003,-7.280349,7.147733,-5.567030,3.023216,-9.980675,2.367726,3.140634,-8.379241,-0.874458,-8.899601,-0.043430,3.394587,-0.687030,-0.406818,-1.505240,7.218212,-4.182955,9.477036,5.051264,9.065359,-9.519408,4.590175,7.140534,8.910808,4.892775,8.122457,3.077864,-1.709420,-2.828996,3.042598,-5.620757,4.759811,-7.028174,7.831164,-8.250091,7.909153,4.312325,-2.708436,-2.105113,6.296094,0.106527,3.241484,3.593314,-7.345810,-3.266297,-1.644689,9.632696,7.281770,-5.497248,3.730911,5.358768,9.835590,3.100700,8.241496,7.155406,-1.740710,0.384337,1.875229,3.759977,-7.904710,1.361499,-3.428595,6.172150,-3.933398,7.328533,-8.666234,-9.519775,1.324944,1.899323,1.318818,8.826853,-9.915666,0.175527,8.080540,7.979623,-6.927525,-6.196083,6.627653,-6.325488,9.947128,-4.950611,5.953253,5.215090,-4.098480,9.249074,1.110001,0.387054,-0.730277,3.976593,6.109245,4.751073,-9.198710,2.659397,0.731529,8.622491,8.780292,-4.965953,2.196319,1.965951,6.642096,3.920418,-4.104302,-7.386715,-0.856109,-4.386422,-9.144255,7.960841,-9.393965,5.599892,9.405121,-3.322374,-8.939883,1.409648,9.991648,5.105655,4.280465,8.872182,-7.561435,-2.620704,-7.149795,-2.817389,2.408499,8.908667,-6.955356,0.814406,6.859054,-9.289772,3.315295,2.952681,2.546022,4.103435,-6.778076,-9.007872,-2.685176,8.272065,1.052452,1.808120,5.365245,-3.002225,8.590464,8.106933,-1.831286,-8.695969,6.119404,-2.427723,2.946209,-2.061940,-2.828089,-1.515071,8.764979,1.431597,8.941337,4.768888,9.277857,0.975493,-8.547958,-7.166454,-7.319852,-2.592215,-6.904649,-4.418110,-2.726842,9.110297,3.512425,1.561991,4.559205,-1.165300,3.962101,-2.515784,8.817088,-2.703340,-4.891785,-0.305223,9.602412,9.363037,9.562233,5.212725,-1.102888,9.541000,-4.423238,-8.797620,8.293809,2.511987,3.613678,-5.778889,8.783383,-1.459243,2.565968,-7.394116,5.018193,-5.389437,-7.013127,-3.268754,7.765920,-6.217314,-5.031930,5.691470,9.686812,-7.466513,-8.623703,-0.435879,4.030618,-7.948570,8.243971,-1.234842,-9.696896,-2.837140,-0.973840,4.740858,-3.123797,-0.925430,-4.401085,-7.557762,-5.023491,-9.807852,3.965939,-7.165939,3.427373,5.194022,6.322790,5.221359,8.170046,-3.441518,-4.104348,2.256130,-1.347315,8.290201,8.544047,-5.102057,4.133877,7.523576,3.747967,0.787394,-2.528372,-2.271985,-3.613266,3.643778,9.850850,-4.719760,3.188734,-2.516838,0.375227,-4.657528,6.650079,-7.438240,-9.539506,-5.711297,5.955967,-1.638326,-9.132287,4.584837,5.655989,-5.687132,8.361622,-1.091321,-3.572462,-2.565474,2.347470,3.787246,0.743084,8.872231,9.495541,-5.799320,3.669451,-5.637226,7.169323,1.366129,-9.237572,0.828348,-2.361711,-9.390656,-9.105129,-1.191881,6.083223,-7.038573,1.436699,-7.642641,7.572121,5.157214,-9.106411,9.410795,3.283311,-9.990720,-9.865071,1.751915,6.796363,-9.267748,-3.124928,7.672991,-9.005622,9.632209,4.578175,-1.562576,-6.226500,-9.662038,8.394090,-2.353677,-0.475714,-6.819814,-4.875130,5.259705,5.668725,1.778094,-7.741431,6.357902,-3.468429,-3.816565,6.568902,6.554026,-8.093070,-9.221060,5.321558,-2.347365,2.937293,-4.139791,6.110574,1.167550,4.147551,-8.600084,-2.146604,-2.902791,-0.967183,-3.793322,9.665986,3.047577,0.054529,5.903276,-8.561995,-0.564440,-6.990443,6.618213,-9.778939,-0.317473,2.470256,6.904122,5.474568,2.464259,-5.605518,7.305312,4.311015,1.575769,-4.449044,5.454337,1.854244,-3.625946,-2.223497,0.280534,-5.468883,1.587880,-0.122109,4.102450,-0.853609,-8.465371,1.835145,6.105742,-1.632014,9.117673,4.863846,-1.885344,2.939882,9.695080,-3.954371,-9.822601,-0.059842,4.087174,1.953931,-2.048809,6.076259,-9.500805,-7.219499,6.438968,1.865541,8.501066,9.604942,5.144132,-1.105167,-7.813659,7.468782,-9.745224,-0.540229,-9.132090,-5.268893,-5.947827,2.790297,-3.216100,-3.012502,5.570852,5.816761,-5.765712,-9.787508,4.358280,-5.021846,2.820688,-8.713906,-8.897077,7.539126,-5.767429,2.660671,4.311154,-0.277064,4.542293,3.608060,-0.943549,3.836018,0.072815,-9.354202,5.578140,0.241798,-0.060303,-1.639936,-3.698580,1.017349,4.420741,8.772339,-9.234441,6.590325,-7.482112,-4.134218,4.575067,-9.720770,7.300787,2.810888,6.134708,8.209498,-0.779958,-0.675281,-7.008404,-9.931345,4.154292,-2.249035,8.028135,7.750547,2.639273,-0.999824,0.873060,5.953750,5.619794,3.983822,9.637072,-3.367878,-4.493591,1.894514,-2.369504,4.525707,8.856816,2.550674,2.291505,3.346014,-5.596173,6.191411,-5.605570,-4.215881,4.590749,-3.904175,4.162022,-2.744830,-3.463153,-4.021071,8.847723,-6.359525,3.617464,6.267268,-9.752522,9.199902,-8.640104,-1.889115,-2.483155,-9.735238,6.779203,-5.960718,0.333839,-2.210003,-7.545528,1.222432,-3.234991,5.817149,5.192007,-2.898481,5.838611,2.976564,-0.845758,-8.264345,-0.684425,-4.903108,4.984582,-4.279606,-8.310074,-8.953931,9.271797,-9.776787,1.609715,-7.258502,4.791425,-9.310181,-3.660506,-0.416835,-0.116994,2.076449,-6.768424,-0.447572,4.256310,-8.845291,2.876992,-5.148476,-9.922526,9.786351,-7.365395,5.606475,-0.271371,-8.613903,3.916902,-1.215093,8.485123,-2.978548,7.212754,-0.840391,-3.782795,-1.938633,3.412087,-5.377184,-4.124752,-0.118786,3.827043,-0.008331,0.572915,6.143066,7.065626,-7.891836,5.457389,-7.698479,1.258627,0.745697,-4.002236,-4.432881,0.884361,6.143640,-4.402670,-0.369627,2.329690,2.550688,-0.251208,2.993980,-4.415137,-4.773139,9.882728,8.459087,4.465458,-6.090243,-8.622620,-6.739292,2.405550,7.153592,3.736986,-5.030030,-3.866345,3.270325,-8.684249,9.985471,8.037602,-4.173205,-6.914830,5.101967,8.553098,1.672243,-2.316102,1.224073,-9.167633,6.010811,-7.501873,-1.746065,-8.173345,1.606853,6.496479,3.034754,0.904383,6.736064,3.304630,3.062867,-0.897464,2.847549,-9.837165,-5.106828,2.073975,-0.500984,0.933152,5.832749,4.046172,-7.101303,5.862441,3.001674,-6.494887,-2.190567,0.731801,-0.931567,2.764079,0.100080,-3.806222,-1.606568,0.666702,2.611784,7.262157,-7.391829,-3.594637,9.383972,7.293174,-5.230308,7.101492,8.751629,-2.576314,-8.112381,7.154934,-7.523525,-9.572027,-9.931716,7.540895,-0.126660,-4.215707,3.635058,-2.274601,-4.283670,3.338941,6.181219,8.342849,-2.448064,-7.226355,9.773851,-3.747999,5.011833,-6.439056,-4.538479,9.325085,3.115697,-3.008415,-6.033978,7.210109,-9.770381,3.291497,-6.251606,-5.885469,8.136600,0.560521,3.301659,-6.765597,-2.003742,-6.703146,-7.330322,-1.589952,9.190344,0.777126,5.976929,-5.675514,1.910604,9.890694,-6.816915,-6.516635,-4.854371,9.678086,3.553886,-3.198517,-3.590284,9.683922,-8.675698,-3.742283,-4.699157,-4.000754,4.565009,4.831546,-3.934592,-7.541934,-7.307217,-7.159822,-5.373674,-1.467797,7.057854,-7.971573,8.032735,5.554882,4.990741,8.140251,3.270228,5.080561,-6.667600,1.763077,4.589224,-2.513643,4.856086,-0.895459,-8.980280,5.280642,9.479301,7.873317,5.328717,-2.087517,6.388057,-6.099581,2.107787,9.969751,-0.809998,8.484422,-0.584403,-5.212725,-1.549619,7.862642,9.357783,5.421884,-8.964529,-4.186904,1.631757,-1.868664,-0.483122,1.894822,-7.238569,-8.343564,6.578528,-1.277675,5.886487,3.846027,7.771939,-9.603518,-1.216167,7.157854,-3.505098,-9.120522,7.106682,-6.223966,-9.864919,6.353746,-8.986212,9.724255,3.281913,5.396245,-7.781962,0.908401,-1.638500,7.812958,2.717818,2.156737,-9.521115,1.217369,6.753855,0.143075,8.554125,-1.245973,-3.437854,8.283250,-2.689425,-5.378531,-1.399822,-1.175917,2.272079,2.078598,2.372861,6.414701,-9.185935,3.039664,-7.054008,3.120215,6.439087,-4.907360,-3.991101,-2.759988,-0.237116,1.146819,-3.558005,0.612800,8.068571,-6.877955,-6.956964,-7.427153,-5.841501,-4.632108,5.326735,-9.867633,3.892098,-4.490863,-2.083392,-7.318866,-0.197685,6.060088,-6.216451,-9.593198,8.852879,-3.723566,-6.652443,7.129913,-7.887704,-7.904800,8.583996,-7.830262,9.055103,-7.846571,0.585117,-2.093222,6.138629,-8.030395,6.218678,4.495488,0.703225,-8.903158,0.138769,-8.954750,3.567246,1.686513,7.701592,9.455630,-0.937839,0.024185,4.625622,3.980078,3.487743,-2.837540,8.193281,-1.369882,1.598555,-3.789691,-0.063793,-4.412474,3.588076,-4.925892,5.509734,3.459678,-4.805157,-6.917667,6.500952,-8.352800,0.668514,6.707388,-3.794234,-3.757110,-0.192998,-5.250492,2.277149,-6.083333,-7.195792,-5.645386,-3.139292,-0.575531,-7.002961,-6.161237,-9.185321,-5.365714,3.207874,-8.024969,4.059220,1.455131,-4.754569,-7.121878,-2.393318,-4.738847,-1.375184,6.430861,2.331503,1.886099,-3.762090,5.947290,-8.994811,-1.751076,0.804442,2.178164,5.871269,-6.034454], dtype = "float64")#candidate|6076|(1365,)|const|float64
call_6075 = relay.TupleGetItem(func_4764_call(relay.reshape(const_6076.astype('float64'), [1365,]), relay.reshape(const_6076.astype('float64'), [15, 7, 13]), relay.reshape(const_6076.astype('float64'), [1365,]), ), 0)
call_6077 = relay.TupleGetItem(func_4768_call(relay.reshape(const_6076.astype('float64'), [1365,]), relay.reshape(const_6076.astype('float64'), [15, 7, 13]), relay.reshape(const_6076.astype('float64'), [1365,]), ), 0)
var_6079 = relay.var("var_6079", dtype = "float32", shape = (20, 80))#candidate|6079|(20, 80)|var|float32
bop_6080 = relay.right_shift(call_6061.astype('int8'), relay.reshape(var_6079.astype('int8'), relay.shape_of(call_6061))) # shape=(20, 80)
bop_6083 = relay.right_shift(call_6063.astype('int8'), relay.reshape(var_6079.astype('int8'), relay.shape_of(call_6063))) # shape=(20, 80)
output = relay.Tuple([call_6034,bop_6064,call_6071,call_6075,const_6076,bop_6080,])
output2 = relay.Tuple([call_6035,bop_6067,call_6072,call_6077,const_6076,bop_6083,])
func_6094 = relay.Function([var_6062,var_6079,], output)
mod['func_6094'] = func_6094
mod = relay.transform.InferType()(mod)
mutated_mod['func_6094'] = func_6094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6094_call = mutated_mod.get_global_var('func_6094')
var_6096 = relay.var("var_6096", dtype = "float64", shape = (1600,))#candidate|6096|(1600,)|var|float64
var_6097 = relay.var("var_6097", dtype = "float32", shape = (20, 80))#candidate|6097|(20, 80)|var|float32
call_6095 = func_6094_call(var_6096,var_6097,)
output = call_6095
func_6098 = relay.Function([var_6096,var_6097,], output)
mutated_mod['func_6098'] = func_6098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2217_call = mod.get_global_var('func_2217')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_6123 = relay.TupleGetItem(func_2217_call(), 0)
call_6124 = relay.TupleGetItem(func_2219_call(), 0)
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
call_6129 = relay.TupleGetItem(func_847_call(), 2)
call_6130 = relay.TupleGetItem(func_849_call(), 2)
func_4074_call = mod.get_global_var('func_4074')
func_4076_call = mutated_mod.get_global_var('func_4076')
var_6134 = relay.var("var_6134", dtype = "int8", shape = (50, 6))#candidate|6134|(50, 6)|var|int8
call_6133 = relay.TupleGetItem(func_4074_call(relay.reshape(var_6134.astype('int8'), [300,])), 1)
call_6135 = relay.TupleGetItem(func_4076_call(relay.reshape(var_6134.astype('int8'), [300,])), 1)
var_6164 = relay.var("var_6164", dtype = "int8", shape = (50, 6))#candidate|6164|(50, 6)|var|int8
bop_6165 = relay.minimum(var_6134.astype('uint16'), relay.reshape(var_6164.astype('uint16'), relay.shape_of(var_6134))) # shape=(50, 6)
bop_6170 = relay.multiply(var_6134.astype('uint32'), relay.reshape(bop_6165.astype('uint32'), relay.shape_of(var_6134))) # shape=(50, 6)
output = relay.Tuple([call_6123,call_6129,call_6133,bop_6170,])
output2 = relay.Tuple([call_6124,call_6130,call_6135,bop_6170,])
func_6177 = relay.Function([var_6134,var_6164,], output)
mod['func_6177'] = func_6177
mod = relay.transform.InferType()(mod)
var_6178 = relay.var("var_6178", dtype = "int8", shape = (50, 6))#candidate|6178|(50, 6)|var|int8
var_6179 = relay.var("var_6179", dtype = "int8", shape = (50, 6))#candidate|6179|(50, 6)|var|int8
output = func_6177(var_6178,var_6179,)
func_6180 = relay.Function([var_6178,var_6179,], output)
mutated_mod['func_6180'] = func_6180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6248 = relay.var("var_6248", dtype = "int32", shape = (10, 16, 1))#candidate|6248|(10, 16, 1)|var|int32
var_6249 = relay.var("var_6249", dtype = "int32", shape = (10, 16, 14))#candidate|6249|(10, 16, 14)|var|int32
bop_6250 = relay.bitwise_and(var_6248.astype('int32'), var_6249.astype('int32')) # shape=(10, 16, 14)
output = bop_6250
output2 = bop_6250
func_6255 = relay.Function([var_6248,var_6249,], output)
mod['func_6255'] = func_6255
mod = relay.transform.InferType()(mod)
mutated_mod['func_6255'] = func_6255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6255_call = mutated_mod.get_global_var('func_6255')
var_6257 = relay.var("var_6257", dtype = "int32", shape = (10, 16, 1))#candidate|6257|(10, 16, 1)|var|int32
var_6258 = relay.var("var_6258", dtype = "int32", shape = (10, 16, 14))#candidate|6258|(10, 16, 14)|var|int32
call_6256 = func_6255_call(var_6257,var_6258,)
output = call_6256
func_6259 = relay.Function([var_6257,var_6258,], output)
mutated_mod['func_6259'] = func_6259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1783_call = mod.get_global_var('func_1783')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_6282 = func_1783_call()
call_6283 = func_1783_call()
output = relay.Tuple([call_6282,])
output2 = relay.Tuple([call_6283,])
func_6284 = relay.Function([], output)
mod['func_6284'] = func_6284
mod = relay.transform.InferType()(mod)
output = func_6284()
func_6285 = relay.Function([], output)
mutated_mod['func_6285'] = func_6285
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6288 = relay.const([[[-0.561018,0.220386,2.636771,-2.163162,8.796308,-5.772420,-1.104658,-2.001436,7.007970,-1.056554,0.340551,4.733362],[-8.708336,-9.570845,1.006290,8.737776,-6.830367,1.462425,-0.293744,6.185334,8.760139,-3.616358,-9.350484,9.010538]],[[5.595668,-4.559361,-9.109816,-6.052808,1.175453,1.416798,4.056635,-6.758359,8.557411,1.993597,2.723328,5.159199],[-9.014678,-7.310654,4.359660,8.278469,-4.529002,4.957220,2.248608,2.735010,-4.454409,4.534293,6.009590,-5.688659]]], dtype = "float64")#candidate|6288|(2, 2, 12)|const|float64
uop_6289 = relay.sqrt(const_6288.astype('float64')) # shape=(2, 2, 12)
func_218_call = mod.get_global_var('func_218')
func_220_call = mutated_mod.get_global_var('func_220')
const_6302 = relay.const([[9.821948,-0.844325,0.276182,5.087658,-8.705527,-6.782309,-8.725986,6.121618,5.266717,5.195354,1.526418,3.504150,-3.265950,-8.602509,-2.255818,5.809820,8.145959,-8.825411,7.312294,3.260901,6.488477,-2.527952,-7.722342,-9.524419,7.106398,1.496837,3.683197,-9.533396,-2.036707,-6.544566,4.672882,-6.960474,1.630346,1.005091,7.807575,-2.457884,-0.156771,-5.046690,-1.794476,4.175529,-5.394941,-9.907035,0.187614,-6.682730,-9.552228,-2.909927,-0.766240,-9.182433,0.250972,-9.693513,-4.132918,7.034319,7.472613,4.786071,-5.133827,-3.004054,-0.692282,-9.578763,4.146579,5.235257,-5.911854,9.083849,-5.624343,-7.805135,-5.263041,-8.472239,-4.125673,4.708764,5.886250,6.110947,3.918845,4.749201,7.781541,5.166191,-0.057604,-0.250985,-3.071376,5.203035,6.645184,-7.371466],[-8.920035,7.623643,-5.401914,-9.760567,7.585805,-4.706802,3.435317,-1.555470,6.353056,-0.082236,-9.968157,-2.723886,-7.907361,-4.101306,-5.904444,4.761633,5.349168,1.809161,-3.402897,-4.670811,5.317147,-5.599013,-0.783587,4.189204,1.074505,5.549661,-6.672635,-7.028380,1.836188,5.082758,-1.833588,-5.255493,0.236604,6.229537,1.706950,0.167967,-9.403032,-7.047760,5.357070,5.373118,1.426551,-5.735757,-4.287063,-1.804398,3.259552,3.078655,0.809695,-5.442616,6.161493,-7.613212,6.348889,-0.573828,3.546299,-5.801818,-4.939494,8.000846,-8.299620,-3.066907,1.973538,-1.419775,-3.874588,-8.579542,3.259717,-1.465433,-6.942869,8.722478,-9.404131,-9.913355,-8.206879,-1.928575,-5.045836,-3.520076,-3.798503,2.908560,-5.696136,-2.078572,-2.332393,-9.810056,6.258969,-2.440730],[3.651141,0.827949,9.930371,2.028577,-1.140601,5.105515,-1.425904,9.070294,-6.243866,-5.425785,-4.999807,5.597639,4.129906,-7.293498,-9.952611,-8.876836,1.619598,5.481371,8.599815,-6.666377,4.967751,-2.301422,-8.175306,-3.622975,7.090934,1.045162,6.896433,-0.917354,-0.586556,-5.662298,6.664919,-0.915727,-9.530702,-7.864564,-0.528029,-3.427760,-3.768251,1.262518,-1.104307,9.257796,-3.665189,-4.332169,4.589557,-3.876651,8.295341,-4.536585,-8.513468,1.248923,-9.464024,-3.599439,8.880592,-6.417448,-7.850039,-3.672626,2.086975,-2.107708,-4.645304,-9.452660,2.427500,6.040847,0.664568,9.027565,-2.704680,-8.346395,-5.948948,0.473562,3.145779,3.669224,-2.328134,9.780301,2.463757,0.444259,-8.887511,9.661174,0.750882,-7.538772,-3.647978,-4.817440,0.268562,-8.477145],[6.483333,9.432620,5.493957,-2.154199,-1.382943,-9.038068,3.980055,9.127013,6.094495,5.904761,7.305919,8.487921,-7.779395,-8.546100,-7.233974,5.303647,-9.502996,3.969156,-5.851893,6.136928,7.356068,-5.730906,-4.005671,-9.775243,1.570496,-3.095211,4.311023,-0.592034,5.655202,5.181164,0.470852,6.012310,2.660303,-6.390446,7.358767,-6.053842,5.297791,9.327942,-0.575876,2.412580,-3.606280,-9.785475,5.421305,7.949597,4.017145,-2.077176,7.265553,4.758561,-7.856910,-3.028092,6.623174,-1.454651,-6.197411,-3.486839,1.743919,-5.343708,9.293302,-0.224271,7.038572,6.172753,-5.466202,-7.403666,-9.051537,4.594129,6.753424,-5.989452,-0.920046,8.214452,-9.311487,-9.190383,4.880826,0.297823,8.985606,4.808870,8.967470,-6.816198,-1.003632,-0.812248,-6.494913,-8.204207],[4.347494,-1.464118,6.370004,-9.233102,-2.701734,-5.180066,7.889658,-6.601282,7.640445,-2.827837,0.642186,-5.710029,4.646623,-5.132418,-1.553017,4.577134,1.763216,-4.336567,7.266628,-0.572821,6.021787,5.344284,3.799972,7.482234,5.358683,8.812628,-4.255830,-4.814521,-5.209500,6.926423,3.422216,7.093940,9.663179,-5.138821,-2.640753,-4.880888,3.002026,2.554035,5.473948,1.006323,-0.465185,7.259228,-1.465197,-5.720170,-1.297679,-6.938215,-0.272661,-1.028414,6.575374,-6.015415,-6.484350,3.526460,-4.221375,-1.569524,7.700024,-3.896253,-9.725710,7.580047,8.463652,-0.202000,9.936030,-5.162047,-1.361548,1.669101,9.040709,4.129891,-8.881021,0.483314,7.637387,0.325357,3.112517,-8.941772,6.558154,-7.168569,7.114685,0.965590,1.792981,-5.459235,-2.004336,0.937520],[0.127104,9.591447,3.706413,-7.955637,-9.466252,-9.267267,7.702034,-8.866946,-0.325668,-2.729927,0.671346,-9.436670,3.113262,-6.991115,2.299022,7.186563,-1.906998,-3.308616,2.907162,7.393060,-0.125960,7.362973,-4.876161,0.738638,-9.335065,3.506324,5.263541,4.984268,-1.626679,-3.048424,6.272862,0.326877,2.450414,-8.489405,-3.176329,-6.634288,2.793822,3.585767,0.492603,-6.418319,-3.631322,5.867533,9.651154,-5.684125,-7.197755,5.714584,-8.965761,-7.154816,3.245434,-1.237109,-2.985088,-1.586243,-3.782568,6.067028,-2.745006,9.064154,5.119518,-7.671459,5.844083,1.297235,-1.118434,-9.319557,1.895035,-0.801455,8.420965,-9.954433,4.821676,7.140843,-7.288123,-2.750751,-3.828138,7.822951,-8.523301,-4.776120,-5.094712,-0.628668,0.092529,8.181588,1.466925,4.528277],[-0.716975,-3.006331,-7.987557,9.479712,-3.336242,-9.170483,-9.636985,9.069756,0.540326,-4.329607,5.439153,-4.223725,1.746891,4.977968,9.682658,3.351948,-8.804726,-8.580295,1.457390,-2.042256,3.353813,-8.124695,-9.659236,-6.280075,-3.897085,-7.223724,9.585172,-0.732781,-0.615960,6.154406,-7.258558,-3.322535,-9.469009,1.920162,-7.788106,-1.381204,-3.634208,7.934446,-4.586154,8.754876,0.699903,-3.332906,-6.272169,7.934940,-5.262724,6.068434,-4.080272,7.714095,-7.469178,-1.598099,-0.767358,-6.842514,-3.738609,-0.632909,1.559909,5.172544,2.417565,-7.461996,-6.951721,-2.747916,-7.439631,8.140315,9.699395,-3.796140,2.771070,7.747670,8.612273,0.178782,6.068323,-5.784498,5.383285,1.856027,1.981469,-2.065871,-7.199379,-9.092088,-3.296566,3.509213,-7.832658,0.361150],[-8.469444,-7.091388,-0.527488,4.788959,8.726766,6.028759,7.304869,4.496690,-8.269407,-1.944274,-0.887420,7.599565,-7.245333,5.261790,-2.807983,6.849150,2.392806,-0.392864,4.432792,4.511651,5.768091,5.031395,-0.458887,4.217488,-9.004335,1.913491,-5.292259,-7.188923,1.523740,-6.800406,-0.622994,-9.915605,9.441928,-7.997120,7.767481,0.787973,-6.495652,8.052291,9.432730,1.311829,0.135888,-8.757729,4.062375,-6.953675,-4.031364,0.275943,-1.271638,-5.838408,-4.508402,-4.500352,4.593622,4.007861,-5.262260,-5.512244,4.671991,-3.576749,-1.171491,4.950233,9.037153,-0.202379,-3.952708,-1.123280,6.076550,-7.476628,4.146602,3.865378,-4.158571,-4.144687,-6.574411,-0.550425,-7.288935,-0.863578,3.978551,2.091546,4.345213,9.704097,8.903848,0.990959,-7.222552,-8.982498],[-2.268860,-2.400132,-6.169621,-7.892216,1.868811,9.932627,3.088975,-3.730866,5.484408,0.563094,5.393101,-4.703683,-0.404457,-0.794745,7.797807,1.532586,-8.350657,-3.409922,-8.369816,3.723393,0.365655,-2.393769,-2.493983,4.911304,-8.312791,2.261824,3.294567,-1.913517,9.239466,7.264602,4.652819,-9.352940,-2.945586,9.168497,7.037803,3.794707,3.704173,8.989264,-9.604356,3.923390,4.522296,9.735658,-8.203568,6.234235,-2.583328,-1.704572,4.891186,6.902970,7.435252,-0.948902,-5.482664,4.539204,0.657970,6.912089,7.514605,-6.538384,8.461065,-6.194649,1.563907,7.218022,-5.376411,-1.223987,3.147773,4.608559,-8.135629,0.978496,3.252656,-9.368667,-6.550643,6.209717,-2.468167,-1.381077,3.077773,8.557139,-6.415562,-1.498340,-1.296270,-6.737879,-5.085335,-5.402303],[-4.082264,0.837602,-5.291049,-2.279439,-4.547116,-2.612061,-5.916256,-7.188136,7.178114,-2.073169,8.788963,-3.938604,3.654523,7.419103,5.169355,-1.698119,2.241362,5.696134,6.427552,-0.111437,6.989992,-5.722194,-8.345768,1.192867,-6.175269,6.218458,-1.345377,8.472189,2.719470,-9.901813,-1.265310,-6.165573,-9.578945,6.495084,4.011082,4.443611,8.724474,-0.351005,7.198396,3.007410,-6.926774,4.272459,0.228088,-4.991942,9.302781,1.266584,-4.970965,7.343208,8.096925,-3.844914,0.421495,-3.658048,-5.460791,-7.074475,-4.339776,3.648476,-3.090434,-6.251180,-0.768924,-7.617582,5.663049,2.030181,9.297742,-0.821898,-1.047038,-4.511026,2.754773,-5.505305,3.482502,1.260139,-4.237470,-0.480420,4.818687,-9.932732,-4.898151,2.035572,-6.664662,7.501616,8.014038,1.892896],[-0.688234,7.231433,-2.789786,6.886876,-7.142181,2.684265,-4.706130,-9.116248,-8.332320,7.292914,0.970058,-6.205572,8.794124,-3.939249,-7.820187,-4.767125,1.406705,-4.039527,4.443224,2.983077,-7.491838,2.090619,3.520885,-7.200544,-7.602300,-6.891995,-5.275922,-7.725564,-5.172450,-8.769413,-1.234821,4.413250,2.622132,3.102122,-4.690483,-3.381917,2.700513,9.857514,8.585952,8.667529,2.979010,-3.516179,-1.368617,6.071849,3.629884,9.398654,2.738226,4.654709,-4.982355,8.724355,1.556558,0.125945,3.079293,7.249477,-4.121208,4.859367,-2.753765,2.786215,-2.896212,5.890980,3.119915,8.081862,-3.165026,4.175820,2.224875,7.023149,-8.229572,0.461914,5.735492,8.253578,6.903992,1.452850,-6.092621,8.244526,6.299054,-3.731844,4.677885,4.804051,-0.708625,1.638742],[-9.210588,-6.215650,4.071912,-4.395453,8.168305,7.909659,-3.600858,-2.299669,8.643174,8.097408,0.678017,2.855571,3.301962,-6.188513,1.127818,4.312408,-7.596148,4.164919,-9.158457,-0.236582,4.049832,-2.535220,-4.610403,-3.926621,-5.932214,-0.937962,8.627473,9.694802,8.385402,-2.834545,2.384302,-2.082353,8.429135,2.349064,3.216825,0.857127,0.293803,3.059202,3.519016,-2.020987,6.005438,2.112963,-2.554543,-9.455784,-6.782231,5.801840,-8.468304,8.251164,4.878586,9.683351,-2.699456,7.272156,1.202038,0.278501,-8.648465,-7.072062,-2.099570,-6.119211,-6.961566,-8.183621,0.911814,-1.902200,4.357137,6.312708,2.327678,-6.618698,-0.810489,2.366756,-7.354297,-1.209702,-2.971380,-1.658477,-3.563793,-0.048772,6.809821,9.845766,-2.849496,3.914654,7.635479,-8.670300],[4.139306,-1.153163,-8.834904,1.096681,-7.025276,6.265397,1.411049,4.344665,-0.249811,-0.144041,8.016543,-6.003271,-2.097110,2.562220,-9.888841,-7.292141,-8.221882,9.255994,-9.947821,6.333869,-3.076597,-3.329337,0.752469,6.115653,7.958505,1.666314,8.503986,-8.441747,3.097902,2.524202,6.396030,-0.501607,-3.163338,-7.944052,-2.767493,4.321255,-5.285146,-3.598843,-8.927025,9.406484,-2.706414,-0.069909,-9.817093,9.023436,-3.910188,4.433588,-1.361211,-5.703730,-3.546769,7.301620,-0.463401,6.600523,-6.189943,-5.060543,-9.028448,-1.523141,7.466380,-1.531398,7.415220,5.632702,2.794273,9.505126,-1.642924,-8.814784,-2.272450,-2.779000,0.609089,1.560167,7.504646,-2.755222,9.885320,-1.731729,9.403034,-1.052847,-1.997479,-9.057044,0.777013,6.538995,0.280128,-7.574212],[-4.764790,9.476697,-7.855272,6.587702,-5.374886,4.248169,3.207800,-9.321274,4.931833,1.142476,3.032729,6.197069,-2.372468,-9.134897,-1.322835,0.861871,9.120220,-1.431639,-9.997541,-4.209200,6.169122,-6.010104,8.639210,2.959561,-4.751916,5.132967,0.747717,-3.227659,1.610099,9.103862,4.754921,-5.172102,4.850422,-4.663999,3.115324,2.830592,1.210922,2.735992,-2.844059,1.278198,7.431071,-3.870503,4.363412,-5.420638,-2.602970,-3.155896,6.782044,-8.313347,-8.322453,-1.811654,8.003311,-3.902376,4.066035,-6.471135,2.557158,-2.808656,-2.923923,6.979670,4.018578,-0.993119,6.928975,9.496028,-1.932352,-9.866050,5.211104,-4.003918,-9.022002,8.269156,-9.852039,0.113664,0.537304,-1.034511,8.800762,2.135581,-1.955735,-3.344336,-3.541504,-5.584212,5.142094,7.853841],[3.174284,-7.910762,5.158533,9.382208,8.907262,8.736998,6.881330,-1.860444,2.358815,0.718911,2.307942,3.054177,-7.886883,-7.903716,-0.262467,-8.370001,1.211573,6.038158,-5.166062,-7.655817,-7.442840,-5.771322,-7.930428,-5.626928,-2.913935,0.553566,6.144561,6.366993,-7.067291,5.292143,-0.346913,-2.590726,-9.063992,-1.713593,-7.117900,-6.618404,-4.774753,-4.732220,2.820633,-2.422631,4.400243,-5.195568,-6.679783,-2.505387,8.634702,-9.255339,6.367201,-7.262724,-8.574150,-6.555101,9.118168,8.190437,6.342847,-4.526254,-3.507204,-9.809706,-5.189525,-2.311234,-3.775558,4.876309,7.886120,7.767099,-0.375273,-0.786639,-2.460211,-8.779406,-5.040755,0.528494,8.055283,-6.932308,-2.179649,9.686803,8.631759,-5.024500,-2.398807,-2.863967,7.803342,-1.615883,5.668130,-9.726903],[3.631584,9.054860,1.075797,8.559397,4.678748,-5.883730,-3.219308,-3.047429,-6.558250,-2.237362,8.052914,-1.707383,-7.866740,-6.560045,0.126538,-6.557365,7.208589,-0.307259,-8.495859,-9.149053,-0.871039,-6.595777,-2.135268,-5.281485,3.493518,-6.391001,9.869199,6.827657,3.374259,7.525472,-6.369628,-8.096544,-5.179775,-2.594951,-2.878416,-7.905647,-2.248113,-6.682447,0.330280,6.166406,5.655198,2.271107,-4.916840,-0.553949,7.523704,-9.309597,6.582013,1.340194,-3.612665,5.557281,-9.507377,1.752791,-0.926034,-8.925005,-8.135947,-3.101322,8.756755,2.670791,-3.511160,2.858947,5.174047,8.572987,-7.765722,-8.905540,5.908972,-8.246917,1.688233,-4.733229,5.018625,-1.223228,-0.957910,3.083359,-5.641195,4.785429,-4.004407,-1.827294,-4.775193,1.377173,4.687312,3.026816],[5.719927,-3.343560,7.219271,-8.621395,6.538212,1.552551,2.925235,6.613678,3.970732,-6.127270,-4.265948,9.851265,-7.692553,8.032508,8.900303,-7.938319,-6.889913,5.756208,3.119752,-7.096167,-0.215934,-8.760460,-9.715588,-3.690331,-6.597386,-6.157424,9.069721,-1.926308,-6.465419,0.774017,-3.742312,-6.163664,0.357667,4.710422,3.932907,9.258443,8.556834,5.459837,-0.855880,2.485441,-3.303367,2.484729,4.798787,3.852971,1.008991,3.272152,9.309046,3.428091,-6.008686,2.813272,-5.330819,7.132598,9.554956,-6.690551,-5.463355,-6.467776,4.991097,5.709591,9.313754,-3.905482,1.518371,9.033841,7.350075,3.236362,9.327147,8.133376,-7.001055,3.307891,6.717504,0.908356,8.805261,-6.790123,6.839975,6.274085,-5.280743,3.638572,-6.598563,-0.537236,9.903850,9.779190],[1.125080,4.266369,1.248835,2.394190,-3.996102,9.323200,-6.881780,-1.190400,0.535560,9.731465,7.044510,6.658939,5.183149,8.069080,-7.000703,4.367472,8.595232,1.817400,1.929821,9.626721,8.445670,7.449319,-6.332382,7.141660,7.945452,2.787715,4.932160,-1.785221,0.194309,-0.365906,-9.710291,2.147497,-1.125215,6.117255,8.011480,2.543664,5.387410,-4.466234,-0.314068,1.129053,-0.265517,-4.899845,6.307080,-9.256534,-2.868329,-0.138475,-0.843747,-6.566122,-8.895456,-8.254462,-2.473705,-5.029273,-9.515156,9.203943,-4.382935,9.189046,6.452321,9.909546,-0.802912,3.964597,-3.756999,-7.733249,6.152338,3.300881,-5.946642,5.926033,6.308154,-2.003046,4.392174,-3.620963,-3.659551,-8.218200,9.222472,-5.254443,-9.534064,-6.581246,-6.110662,5.990551,6.064067,2.354378],[3.323656,-8.480236,1.155615,-5.652251,-6.697272,-0.497813,-5.576157,-0.260507,-5.718498,-7.945634,2.463441,9.913948,4.869096,3.078997,6.234480,-5.688775,-2.634507,1.640929,1.641530,-0.760624,-2.458092,-8.565006,6.345780,-1.067941,5.686666,-8.943276,3.263285,-1.033978,6.306894,1.384995,3.891580,4.018039,-4.693850,1.126537,-5.845901,5.130724,-0.609198,-1.196626,4.715604,-8.165717,7.464324,4.335149,-1.417119,0.670704,3.505704,4.006820,-5.167790,-7.725214,2.853752,-4.119592,0.164426,2.441212,7.892275,-9.553255,-3.361773,9.145412,1.960127,3.930147,1.081571,9.954005,1.713173,0.677259,8.105169,8.444337,6.250639,0.740745,1.874587,-3.723189,-2.429258,6.795450,0.109901,-4.311526,3.969762,5.854546,-8.966779,-7.365678,1.469829,9.982360,0.370156,0.400017],[-5.496721,-0.715349,7.203845,-0.530860,5.784865,2.494037,-0.489474,7.365392,3.488783,-9.764557,-5.261284,9.349650,-4.380077,-4.059173,0.710945,-7.988116,-0.257440,-7.753267,-5.522759,1.596282,-8.506371,-2.302790,-0.691539,5.362075,-0.166304,4.362834,-3.237749,-3.572418,3.408436,-0.138638,3.104454,-0.852512,8.296050,0.457310,5.429328,4.971097,1.926109,9.614122,-7.430631,6.467335,-9.024234,9.477370,-1.122318,-1.990462,-8.220392,-5.946455,4.449095,-7.506803,0.627787,-7.101650,-0.481785,9.511792,-7.229283,-0.801755,4.428070,1.502546,-0.546401,-7.223796,4.960227,4.971188,9.913956,8.165659,-5.966712,-0.422081,2.016443,3.490516,-5.126136,-8.956890,8.361324,3.713945,-3.680315,-5.129924,5.077800,6.011205,2.107538,2.406843,4.038158,-4.364200,-5.860070,4.836180]], dtype = "float64")#candidate|6302|(20, 80)|const|float64
call_6301 = relay.TupleGetItem(func_218_call(relay.reshape(const_6302.astype('float64'), [1600,])), 0)
call_6303 = relay.TupleGetItem(func_220_call(relay.reshape(const_6302.astype('float64'), [1600,])), 0)
output = relay.Tuple([uop_6289,call_6301,const_6302,])
output2 = relay.Tuple([uop_6289,call_6303,const_6302,])
func_6309 = relay.Function([], output)
mod['func_6309'] = func_6309
mod = relay.transform.InferType()(mod)
mutated_mod['func_6309'] = func_6309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6309_call = mutated_mod.get_global_var('func_6309')
call_6310 = func_6309_call()
output = call_6310
func_6311 = relay.Function([], output)
mutated_mod['func_6311'] = func_6311
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6371 = relay.var("var_6371", dtype = "float64", shape = (9, 1, 13))#candidate|6371|(9, 1, 13)|var|float64
uop_6372 = relay.sqrt(var_6371.astype('float64')) # shape=(9, 1, 13)
output = relay.Tuple([uop_6372,])
output2 = relay.Tuple([uop_6372,])
func_6378 = relay.Function([var_6371,], output)
mod['func_6378'] = func_6378
mod = relay.transform.InferType()(mod)
var_6379 = relay.var("var_6379", dtype = "float64", shape = (9, 1, 13))#candidate|6379|(9, 1, 13)|var|float64
output = func_6378(var_6379)
func_6380 = relay.Function([var_6379], output)
mutated_mod['func_6380'] = func_6380
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6401 = relay.var("var_6401", dtype = "float32", shape = (16, 15, 9))#candidate|6401|(16, 15, 9)|var|float32
uop_6402 = relay.log10(var_6401.astype('float32')) # shape=(16, 15, 9)
output = relay.Tuple([uop_6402,])
output2 = relay.Tuple([uop_6402,])
func_6405 = relay.Function([var_6401,], output)
mod['func_6405'] = func_6405
mod = relay.transform.InferType()(mod)
mutated_mod['func_6405'] = func_6405
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6406 = relay.var("var_6406", dtype = "float32", shape = (16, 15, 9))#candidate|6406|(16, 15, 9)|var|float32
func_6405_call = mutated_mod.get_global_var('func_6405')
call_6407 = func_6405_call(var_6406)
output = call_6407
func_6408 = relay.Function([var_6406], output)
mutated_mod['func_6408'] = func_6408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6284_call = mod.get_global_var('func_6284')
func_6285_call = mutated_mod.get_global_var('func_6285')
call_6510 = relay.TupleGetItem(func_6284_call(), 0)
call_6511 = relay.TupleGetItem(func_6285_call(), 0)
output = relay.Tuple([call_6510,])
output2 = relay.Tuple([call_6511,])
func_6514 = relay.Function([], output)
mod['func_6514'] = func_6514
mod = relay.transform.InferType()(mod)
output = func_6514()
func_6515 = relay.Function([], output)
mutated_mod['func_6515'] = func_6515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2077_call = mod.get_global_var('func_2077')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_6563 = relay.TupleGetItem(func_2077_call(), 0)
call_6564 = relay.TupleGetItem(func_2079_call(), 0)
func_2876_call = mod.get_global_var('func_2876')
func_2879_call = mutated_mod.get_global_var('func_2879')
const_6566 = relay.const([-8.210572,-8.080476,4.520787,0.408828,-2.836496,-5.669329,-2.267867,-2.498438,-2.815695,-8.537977,4.582789,-8.573935,1.691715,3.801471,8.337499,-4.086736,-0.783723,4.072026,9.279685,8.184847,6.157922,-9.130200,-3.086138,-5.817464,7.724697,-6.620966,-8.616575,-8.671229,8.220500,-9.101090,-5.218693,-3.093371,5.440961,6.374920,-9.485717,-3.002513,-4.620939,3.328504,-8.268315,4.234076,-1.233708,-1.134026,-7.223921,6.135161,-6.067929,-8.452067,-2.495821,2.603115,6.046719,-5.510841,8.603995,3.511858,-2.510054,-0.093411,4.437847,-7.410108,7.271502,-2.097759,1.412241,5.519923,4.159466,5.418481,-3.996675,1.017455,0.135269,2.980699,-5.334777,-6.225914,-3.524237,4.578133,-8.368878,7.058178,8.900729,-4.796333,5.488346,-7.486290,9.440022,-0.345428,3.995271,1.845174,-1.235588,5.771570,-6.393151,3.471968,2.113370,-2.756392,-3.001855,8.764024,1.249979,-8.324406,-7.430446,3.156563,-9.411076,0.619760,7.849231,-2.970380,-9.843993,-0.127093,5.269566,6.090608,9.983269,7.317562,1.773983,8.625444,-0.701857,-4.091801,-3.215506,-3.599970,1.470516,-9.464535,7.485548,-9.148206,3.410911,-4.960069,-4.572227,5.144246,2.136101,1.917742,9.911157,1.259446,2.470002,-8.437191,4.909146,-4.222315,1.037830,6.374687,-4.226793,-1.212211,-4.667507,-1.658519,-8.236555,-5.013195,-1.038832,-7.849170,-4.615873,0.485526,0.821108,-8.986598,2.129033,-5.151525,8.316147,8.211831,8.148361,8.594778,-9.359169,1.806783,1.346845,-2.673418,2.545644,-2.717069,-0.288908,5.177077,4.796551,-3.370530,7.728660,1.915519,-3.481557,-5.087103,-6.942461,9.957373,0.820948,4.642108,7.004341,4.639693,3.531788,-4.366450,4.975534,2.200288,4.800038,0.493120,-5.353846,-2.734793,6.701711,4.587036,-6.560439,-4.568724,3.806155,7.438331,0.204048,4.452814,-1.501619,-1.509872,-0.786242,-3.085300,3.353059,-7.118037,6.740611,-6.363803,3.528645,-0.834089,3.562243,5.945037,8.077606,6.705847,6.095708,4.844454,-7.533061,-2.331206], dtype = "float32")#candidate|6566|(198,)|const|float32
call_6565 = func_2876_call(relay.reshape(const_6566.astype('float32'), [6, 3, 11]))
call_6567 = func_2876_call(relay.reshape(const_6566.astype('float32'), [6, 3, 11]))
bop_6569 = relay.minimum(const_6566.astype('float64'), relay.reshape(call_6565.astype('float64'), relay.shape_of(const_6566))) # shape=(198,)
bop_6572 = relay.minimum(const_6566.astype('float64'), relay.reshape(call_6567.astype('float64'), relay.shape_of(const_6566))) # shape=(198,)
func_5194_call = mod.get_global_var('func_5194')
func_5198_call = mutated_mod.get_global_var('func_5198')
var_6578 = relay.var("var_6578", dtype = "uint32", shape = (250,))#candidate|6578|(250,)|var|uint32
call_6577 = relay.TupleGetItem(func_5194_call(relay.reshape(var_6578.astype('uint32'), [10, 5, 5]), relay.reshape(call_6563.astype('float64'), [1600,]), ), 4)
call_6579 = relay.TupleGetItem(func_5198_call(relay.reshape(var_6578.astype('uint32'), [10, 5, 5]), relay.reshape(call_6563.astype('float64'), [1600,]), ), 4)
func_5688_call = mod.get_global_var('func_5688')
func_5689_call = mutated_mod.get_global_var('func_5689')
call_6583 = func_5688_call()
call_6584 = func_5688_call()
func_3590_call = mod.get_global_var('func_3590')
func_3592_call = mutated_mod.get_global_var('func_3592')
call_6587 = func_3590_call()
call_6588 = func_3590_call()
func_5537_call = mod.get_global_var('func_5537')
func_5540_call = mutated_mod.get_global_var('func_5540')
var_6593 = relay.var("var_6593", dtype = "float64", shape = (1568,))#candidate|6593|(1568,)|var|float64
call_6592 = relay.TupleGetItem(func_5537_call(relay.reshape(var_6593.astype('float64'), [1568,])), 0)
call_6594 = relay.TupleGetItem(func_5540_call(relay.reshape(var_6593.astype('float64'), [1568,])), 0)
func_4587_call = mod.get_global_var('func_4587')
func_4589_call = mutated_mod.get_global_var('func_4589')
call_6602 = relay.TupleGetItem(func_4587_call(), 0)
call_6603 = relay.TupleGetItem(func_4589_call(), 0)
output = relay.Tuple([call_6563,bop_6569,call_6577,var_6578,call_6583,call_6587,call_6592,var_6593,call_6602,])
output2 = relay.Tuple([call_6564,bop_6572,call_6579,var_6578,call_6584,call_6588,call_6594,var_6593,call_6603,])
func_6613 = relay.Function([var_6578,var_6593,], output)
mod['func_6613'] = func_6613
mod = relay.transform.InferType()(mod)
var_6614 = relay.var("var_6614", dtype = "uint32", shape = (250,))#candidate|6614|(250,)|var|uint32
var_6615 = relay.var("var_6615", dtype = "float64", shape = (1568,))#candidate|6615|(1568,)|var|float64
output = func_6613(var_6614,var_6615,)
func_6616 = relay.Function([var_6614,var_6615,], output)
mutated_mod['func_6616'] = func_6616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5354_call = mod.get_global_var('func_5354')
func_5355_call = mutated_mod.get_global_var('func_5355')
call_6635 = relay.TupleGetItem(func_5354_call(), 3)
call_6636 = relay.TupleGetItem(func_5355_call(), 3)
output = relay.Tuple([call_6635,])
output2 = relay.Tuple([call_6636,])
func_6641 = relay.Function([], output)
mod['func_6641'] = func_6641
mod = relay.transform.InferType()(mod)
mutated_mod['func_6641'] = func_6641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6641_call = mutated_mod.get_global_var('func_6641')
call_6642 = func_6641_call()
output = call_6642
func_6643 = relay.Function([], output)
mutated_mod['func_6643'] = func_6643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_6677 = relay.TupleGetItem(func_5004_call(), 0)
call_6678 = relay.TupleGetItem(func_5005_call(), 0)
output = call_6677
output2 = call_6678
func_6690 = relay.Function([], output)
mod['func_6690'] = func_6690
mod = relay.transform.InferType()(mod)
mutated_mod['func_6690'] = func_6690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6690_call = mutated_mod.get_global_var('func_6690')
call_6691 = func_6690_call()
output = call_6691
func_6692 = relay.Function([], output)
mutated_mod['func_6692'] = func_6692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_6698 = relay.TupleGetItem(func_5004_call(), 1)
call_6699 = relay.TupleGetItem(func_5005_call(), 1)
output = relay.Tuple([call_6698,])
output2 = relay.Tuple([call_6699,])
func_6708 = relay.Function([], output)
mod['func_6708'] = func_6708
mod = relay.transform.InferType()(mod)
output = func_6708()
func_6709 = relay.Function([], output)
mutated_mod['func_6709'] = func_6709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4258_call = mod.get_global_var('func_4258')
func_4260_call = mutated_mod.get_global_var('func_4260')
call_6710 = relay.TupleGetItem(func_4258_call(), 0)
call_6711 = relay.TupleGetItem(func_4260_call(), 0)
func_66_call = mod.get_global_var('func_66')
func_69_call = mutated_mod.get_global_var('func_69')
call_6716 = relay.TupleGetItem(func_66_call(relay.reshape(call_6710.astype('float64'), [10, 10, 16])), 0)
call_6717 = relay.TupleGetItem(func_69_call(relay.reshape(call_6710.astype('float64'), [10, 10, 16])), 0)
output = relay.Tuple([call_6710,call_6716,])
output2 = relay.Tuple([call_6711,call_6717,])
func_6725 = relay.Function([], output)
mod['func_6725'] = func_6725
mod = relay.transform.InferType()(mod)
mutated_mod['func_6725'] = func_6725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mutated_mod.get_global_var('func_6725')
call_6726 = func_6725_call()
output = call_6726
func_6727 = relay.Function([], output)
mutated_mod['func_6727'] = func_6727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1231_call = mod.get_global_var('func_1231')
func_1233_call = mutated_mod.get_global_var('func_1233')
call_6732 = func_1231_call()
call_6733 = func_1231_call()
output = call_6732
output2 = call_6733
func_6738 = relay.Function([], output)
mod['func_6738'] = func_6738
mod = relay.transform.InferType()(mod)
mutated_mod['func_6738'] = func_6738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6738_call = mutated_mod.get_global_var('func_6738')
call_6739 = func_6738_call()
output = call_6739
func_6740 = relay.Function([], output)
mutated_mod['func_6740'] = func_6740
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6792 = relay.const([[[6.132573,-1.232478,-1.370423,-6.042294,-9.956988,3.716104,-7.890746,-8.087757,5.246605,1.405498,-1.648455,9.227978,-1.225015],[-2.608173,8.242480,-3.017271,-6.558562,-1.853375,8.433587,6.349036,-5.537743,4.711274,-9.392443,-9.809656,-1.257390,-4.241665],[9.681162,-9.008050,8.598748,-6.224876,-7.073962,0.556195,5.104161,5.019141,-4.862478,-9.188707,7.744272,-8.569662,6.886750],[5.422736,-9.806230,-8.927975,5.116813,-0.771046,4.557983,1.147995,5.652715,-7.972191,-8.339143,7.641178,9.272911,4.181694],[7.861069,-7.681532,3.953425,-3.638684,2.936791,2.039671,3.141655,-3.124331,-7.742237,-6.732908,-9.402919,-6.223423,-3.417137],[-7.288122,-3.674971,-2.925178,6.370946,-1.026313,-7.848551,-4.306641,-0.160179,-4.587377,3.453684,-4.845735,2.489632,9.020182],[-4.790798,-7.793561,2.629613,-6.409888,5.048169,0.921823,6.153057,3.471643,6.652121,5.611810,5.281921,4.142618,-9.011442],[5.994222,0.391231,-8.620526,-3.794160,-0.335942,1.761061,1.949509,-0.011392,2.820669,7.060850,0.352871,-6.759831,-3.115823]],[[9.329357,0.559836,8.392530,4.127858,2.666222,-1.876104,-3.519152,-8.396550,7.995283,-6.654264,-2.343965,2.508853,-4.472717],[-2.538391,-7.279119,9.647548,3.801995,8.537403,4.054846,0.290888,-3.907801,-7.133795,-6.916172,-0.820681,8.101640,5.087509],[-6.217830,7.110873,-7.207191,-1.042925,-6.149166,-6.951473,-2.125250,-4.143669,-9.281479,-2.907016,-7.039598,8.122993,0.693130],[-2.717244,1.244535,7.717060,2.959895,-3.363741,-0.652285,-3.402589,-2.764071,-0.665282,-5.096380,-5.406944,-2.529096,-1.332806],[-9.672431,-1.429420,4.874406,-4.129707,-9.653048,3.012620,-4.065692,9.455361,-5.424885,8.923518,-5.822801,5.533243,-9.964778],[8.330416,-7.057279,0.697024,-8.216933,9.478053,5.218499,-0.366754,0.121720,2.361334,6.461313,-2.174113,-7.926540,6.902729],[-3.881044,0.152900,-6.716830,6.946998,-5.939096,4.495241,-7.010492,3.890365,-2.020633,-8.053759,7.335690,9.150375,-3.662171],[-5.006783,4.588273,-2.304705,-2.274848,1.147348,-3.762453,7.003786,0.579112,4.180839,0.812703,1.126600,-8.179621,3.143395]],[[7.668216,9.494433,3.901619,-7.381125,9.188814,-0.573823,0.241829,-5.399643,-4.262409,-8.191556,3.031187,-1.706756,-4.079092],[-6.400987,9.467927,-5.199381,6.821535,-7.125582,6.892761,7.754297,9.069553,-3.800727,6.911386,2.525623,6.339639,-6.089249],[0.202780,5.665641,-7.732952,0.301165,-0.949625,3.751372,5.993620,-6.120905,-4.163042,7.740886,3.616356,-5.989427,-8.158200],[-1.539642,-6.842283,-5.839301,0.345501,3.162724,-6.749962,9.739082,4.303217,-9.380807,9.072609,4.498697,-3.575182,9.581593],[9.293902,3.778747,0.600972,9.830020,-0.757890,-3.951655,3.054502,7.065712,-1.547008,-6.716026,5.948481,-7.580483,1.926655],[2.468081,-6.288544,1.039370,-5.129006,9.406744,4.813998,9.815084,4.682580,1.449752,-8.373521,-4.956008,-8.299499,-9.425522],[8.617399,-1.866664,-0.189019,-2.064482,-4.040224,-9.907593,-9.601029,7.075260,-8.736113,8.207920,-1.531186,7.806733,-3.066740],[1.060277,-8.350089,-2.816297,-1.396644,5.327000,-6.151277,3.185731,4.166319,-2.660753,4.121003,4.294877,-4.104574,5.194613]],[[-4.137893,2.958082,-5.673649,1.949494,-5.038138,-4.402700,-7.085863,-2.915992,-1.484039,7.123315,3.172763,5.408791,5.738804],[1.047884,-1.346678,-3.180554,0.171327,0.611474,-8.988215,-9.056068,-9.472912,4.713154,-9.777615,-7.967883,4.426607,2.806415],[8.633443,-2.431192,2.343462,-9.905376,-8.904404,-5.025833,1.062459,-6.812170,-7.135158,-9.106223,2.564313,1.099279,4.096634],[-0.315807,-4.596856,-2.638354,5.833797,-7.374639,-1.678420,-7.746596,-2.086200,-0.757894,-3.173972,9.629078,8.457271,1.262437],[-1.796697,7.028594,-0.888635,-5.916125,5.856341,-8.943995,1.590086,9.993409,-7.251633,3.807586,0.658735,-5.630664,-9.267385],[-8.783842,3.599988,-5.406249,9.237843,-8.307611,-9.739090,-6.130032,1.520161,-6.371167,6.243549,-9.659525,7.938665,-4.186476],[3.071910,-5.594359,2.157216,0.516096,-4.982578,-2.934936,3.570871,-3.693377,8.638390,4.519758,2.688488,-7.625115,-4.464111],[-0.184400,-7.436205,-1.873572,0.777188,5.654159,9.155088,-2.246186,-3.409355,7.700774,0.693783,2.405788,-1.637028,5.018163]],[[-5.478598,8.484622,-7.237324,-6.251975,-2.759543,-1.275412,7.453309,-1.012685,-8.516761,0.758451,9.915768,3.493870,-2.399742],[-2.849335,7.304332,-9.064036,0.813594,-9.591166,-5.620168,-4.240369,0.876273,-3.892936,-6.455393,-5.423863,5.822198,0.074366],[-6.858548,8.236650,-4.458650,-7.461196,5.949619,5.714242,-4.654117,-9.230992,3.147237,6.395394,6.424946,9.359600,2.679598],[7.460405,2.649627,9.567961,5.697080,-0.589502,-0.239792,2.809540,-4.151061,-0.199782,8.822441,9.649799,3.372711,4.738272],[-0.216806,-1.214484,-8.982739,5.998568,6.755148,-0.719096,5.166932,-9.610794,1.957187,-2.355908,-0.368006,-9.552798,6.798934],[-5.985059,-6.700622,-9.829127,7.504247,-3.658475,-7.267644,0.464883,4.153440,-4.680922,8.474148,-7.544588,-5.942384,-9.757688],[-7.567066,-2.573983,-0.094428,-7.854363,8.784814,2.097316,-3.332995,-0.594493,7.675694,-7.596971,8.235809,-0.126695,2.428191],[1.725683,3.864272,-2.045972,-6.072854,0.129620,-6.101944,-2.741859,-7.606504,-1.240368,8.962984,8.863343,-1.268449,4.542393]],[[-3.485457,-8.697504,7.844651,-0.459616,9.365381,-0.189461,9.418402,-1.555112,7.284206,5.696275,2.563521,-7.563845,9.015735],[6.841954,2.551876,2.097663,-3.459465,5.196374,-8.095627,-6.833514,3.619114,8.438517,5.289106,-5.502757,-3.856664,-0.657589],[2.701370,6.846535,8.009313,-4.998941,8.882045,-3.890304,-7.809628,0.680853,6.518965,-5.042163,-8.865894,-9.858349,-7.505309],[5.538986,-8.101324,-5.766406,-2.988134,-7.059196,-9.307274,9.691101,3.391127,-0.365888,2.790373,-6.527447,6.202505,0.668931],[-8.354702,9.622642,-1.067095,-5.955966,2.732262,-9.102146,-9.249349,0.641446,-0.668185,-1.243089,-2.192625,1.234957,8.584557],[3.728559,-8.913862,-3.789531,-7.356488,1.838921,-9.468715,3.541899,-6.288497,-3.441005,0.341577,-1.665041,-2.625805,2.892825],[8.498536,-2.353438,-5.001669,2.351082,8.849080,0.499009,-5.934035,-5.577742,-3.753894,-4.011191,-7.084729,1.784328,-0.462032],[4.216030,1.939794,6.015887,9.414735,1.107590,9.929931,-0.877327,-8.477225,-7.909775,7.759619,-7.946620,6.224007,-8.664927]],[[7.420670,6.723595,9.960492,-0.623401,5.809292,5.863293,8.542122,-1.786215,-4.577715,5.274554,-5.230399,3.916467,5.049113],[-3.040159,-2.761167,-3.790369,-1.923276,8.862278,-6.624497,-4.525899,9.561165,-1.609408,-6.327476,-7.004138,0.037230,-0.862477],[4.322190,1.593015,4.237864,9.855330,9.308474,3.091472,6.323407,8.796044,-7.252747,6.742962,-8.486104,-7.391246,-0.199789],[4.308257,0.872030,-2.074324,8.247985,8.109325,6.407034,-2.390583,-4.681097,-0.754910,-9.838821,4.459458,-2.303595,-4.874576],[-4.556106,6.084435,4.068286,-8.759035,-4.112835,-4.870900,9.531026,-7.303472,-0.050797,4.167153,-2.728013,3.042063,0.887964],[0.944152,3.468824,-2.661333,8.061502,6.435788,-5.349528,6.339797,-2.413282,-1.819867,1.915414,-9.683652,8.699056,-2.787233],[1.365844,-1.718019,-8.824816,-0.920898,-0.637003,5.933697,2.207802,-0.398145,-3.324957,-2.745049,3.601476,-2.582185,-9.343227],[3.995479,-3.577012,2.603257,6.799034,6.392318,-6.581593,6.327984,-1.351196,-1.008181,6.324639,-0.443384,-7.185255,-7.229486]],[[6.791021,-4.633927,3.460035,-4.197700,7.157310,-3.334124,0.526076,-5.411598,8.327416,-8.616870,-8.672942,8.216912,-0.900739],[9.139421,8.242975,-1.539787,5.744792,-2.157308,-6.278411,-8.165624,-8.822443,-8.399217,-8.670964,0.539502,3.649323,-7.440462],[-0.962395,5.268104,8.429734,5.367937,8.262448,2.096082,-4.390347,2.084439,-1.055181,-7.832351,-2.324329,6.231920,2.170074],[3.393939,-8.557975,-9.383779,8.257713,3.017853,8.251835,7.552949,9.973279,2.941184,-6.970910,-2.146561,-1.677127,-1.499422],[-7.825652,-1.271740,-6.479325,-9.632343,0.075617,-7.041950,-2.765754,2.149645,-8.878518,-8.561687,7.024274,-5.307243,1.226339],[1.962734,9.448919,-0.976487,3.030632,-1.741840,-0.508477,-7.854635,9.421135,4.950399,3.413103,2.852839,9.094136,5.256192],[3.784889,8.206804,-7.641306,0.822735,-6.532940,1.187289,-8.773861,4.964142,-0.166421,-1.979038,-2.503336,-0.903877,-9.414761],[-9.275035,0.618215,-2.179215,7.924186,7.343941,-7.428840,5.246290,3.897191,-5.822438,-5.878866,-1.275853,-1.700106,1.211955]]], dtype = "float64")#candidate|6792|(8, 8, 13)|const|float64
uop_6793 = relay.atanh(const_6792.astype('float64')) # shape=(8, 8, 13)
uop_6800 = relay.sin(uop_6793.astype('float32')) # shape=(8, 8, 13)
bop_6806 = relay.floor_divide(uop_6793.astype('float32'), relay.reshape(const_6792.astype('float32'), relay.shape_of(uop_6793))) # shape=(8, 8, 13)
output = relay.Tuple([uop_6800,bop_6806,])
output2 = relay.Tuple([uop_6800,bop_6806,])
func_6817 = relay.Function([], output)
mod['func_6817'] = func_6817
mod = relay.transform.InferType()(mod)
output = func_6817()
func_6818 = relay.Function([], output)
mutated_mod['func_6818'] = func_6818
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6909 = relay.const([[[-6.485290,-5.653108,-6.350619,6.399119,-7.342864,7.626085,-3.378493,1.991258,6.721591,-2.314372,-3.039532],[-7.504533,1.634928,5.978975,6.561227,8.399968,-7.345413,0.939651,-7.303579,8.342228,9.041460,-2.391096],[4.930085,-6.293938,7.612093,-3.701234,0.051271,4.201149,5.398605,8.175898,3.287100,4.381523,-4.826839],[5.026492,5.573443,2.970152,1.905114,-3.323872,5.929409,-1.177791,-1.110503,1.280108,6.946065,-5.957722]],[[5.521956,-2.079423,-7.341355,-9.419166,-4.798897,3.595976,-1.268617,5.871101,-3.796400,-2.244637,-3.833374],[5.201974,-6.898237,-9.165616,2.488795,-1.703181,-0.367164,8.483821,-4.296954,4.457758,5.436478,-8.896134],[0.885093,-7.304747,-9.182618,6.646200,2.498070,2.026847,7.700846,5.398798,-4.053810,4.184339,-4.683497],[-1.724380,-9.598463,-8.954287,-2.852097,-5.501281,-0.323689,-4.669234,4.969653,5.712456,-8.059775,-6.015950]]], dtype = "float32")#candidate|6909|(2, 4, 11)|const|float32
uop_6910 = relay.acos(const_6909.astype('float32')) # shape=(2, 4, 11)
var_6912 = relay.var("var_6912", dtype = "float32", shape = (2, 4, 11))#candidate|6912|(2, 4, 11)|var|float32
bop_6913 = relay.add(uop_6910.astype('uint16'), relay.reshape(var_6912.astype('uint16'), relay.shape_of(uop_6910))) # shape=(2, 4, 11)
const_6921 = relay.const([[[5,-6,-4,-3,-9,9,3,8,3,6,-7],[8,-10,1,1,-2,5,9,10,-10,-5,8],[6,-10,9,3,-5,-5,1,-6,3,-9,6],[8,10,-5,-10,4,9,6,-10,-6,-10,-1]],[[-7,3,5,-6,10,8,-5,-8,6,-2,-6],[4,7,-10,-9,8,-5,3,5,-2,-7,-6],[3,-7,5,-5,10,-4,7,6,4,1,-6],[-9,6,-5,-10,-7,-6,4,-6,2,-6,4]]], dtype = "uint16")#candidate|6921|(2, 4, 11)|const|uint16
bop_6922 = relay.power(bop_6913.astype('float64'), relay.reshape(const_6921.astype('float64'), relay.shape_of(bop_6913))) # shape=(2, 4, 11)
func_482_call = mod.get_global_var('func_482')
func_483_call = mutated_mod.get_global_var('func_483')
call_6926 = func_482_call()
call_6927 = func_482_call()
func_4074_call = mod.get_global_var('func_4074')
func_4076_call = mutated_mod.get_global_var('func_4076')
call_6935 = relay.TupleGetItem(func_4074_call(relay.reshape(call_6926.astype('int8'), [300,])), 1)
call_6936 = relay.TupleGetItem(func_4076_call(relay.reshape(call_6926.astype('int8'), [300,])), 1)
output = relay.Tuple([bop_6922,call_6926,call_6935,])
output2 = relay.Tuple([bop_6922,call_6927,call_6936,])
func_6939 = relay.Function([var_6912,], output)
mod['func_6939'] = func_6939
mod = relay.transform.InferType()(mod)
mutated_mod['func_6939'] = func_6939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6940 = relay.var("var_6940", dtype = "float32", shape = (2, 4, 11))#candidate|6940|(2, 4, 11)|var|float32
func_6939_call = mutated_mod.get_global_var('func_6939')
call_6941 = func_6939_call(var_6940)
output = call_6941
func_6942 = relay.Function([var_6940], output)
mutated_mod['func_6942'] = func_6942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
call_7011 = relay.TupleGetItem(func_1699_call(), 0)
call_7012 = relay.TupleGetItem(func_1701_call(), 0)
var_7040 = relay.var("var_7040", dtype = "int64", shape = (6, 5, 10))#candidate|7040|(6, 5, 10)|var|int64
bop_7041 = relay.right_shift(call_7011.astype('uint16'), relay.reshape(var_7040.astype('uint16'), relay.shape_of(call_7011))) # shape=(6, 5, 10)
bop_7044 = relay.right_shift(call_7012.astype('uint16'), relay.reshape(var_7040.astype('uint16'), relay.shape_of(call_7012))) # shape=(6, 5, 10)
output = bop_7041
output2 = bop_7044
func_7055 = relay.Function([var_7040,], output)
mod['func_7055'] = func_7055
mod = relay.transform.InferType()(mod)
mutated_mod['func_7055'] = func_7055
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7056 = relay.var("var_7056", dtype = "int64", shape = (6, 5, 10))#candidate|7056|(6, 5, 10)|var|int64
func_7055_call = mutated_mod.get_global_var('func_7055')
call_7057 = func_7055_call(var_7056)
output = call_7057
func_7058 = relay.Function([var_7056], output)
mutated_mod['func_7058'] = func_7058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1815_call = mod.get_global_var('func_1815')
func_1817_call = mutated_mod.get_global_var('func_1817')
call_7075 = func_1815_call()
call_7076 = func_1815_call()
output = relay.Tuple([call_7075,])
output2 = relay.Tuple([call_7076,])
func_7090 = relay.Function([], output)
mod['func_7090'] = func_7090
mod = relay.transform.InferType()(mod)
mutated_mod['func_7090'] = func_7090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7090_call = mutated_mod.get_global_var('func_7090')
call_7091 = func_7090_call()
output = call_7091
func_7092 = relay.Function([], output)
mutated_mod['func_7092'] = func_7092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6708_call = mod.get_global_var('func_6708')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_7156 = relay.TupleGetItem(func_6708_call(), 0)
call_7157 = relay.TupleGetItem(func_6709_call(), 0)
uop_7161 = relay.erf(call_7156.astype('float64')) # shape=(6, 5, 10)
uop_7163 = relay.erf(call_7157.astype('float64')) # shape=(6, 5, 10)
func_2040_call = mod.get_global_var('func_2040')
func_2042_call = mutated_mod.get_global_var('func_2042')
call_7165 = relay.TupleGetItem(func_2040_call(), 0)
call_7166 = relay.TupleGetItem(func_2042_call(), 0)
func_4723_call = mod.get_global_var('func_4723')
func_4725_call = mutated_mod.get_global_var('func_4725')
var_7171 = relay.var("var_7171", dtype = "float32", shape = (168,))#candidate|7171|(168,)|var|float32
call_7170 = relay.TupleGetItem(func_4723_call(relay.reshape(var_7171.astype('float32'), [14, 2, 6])), 2)
call_7172 = relay.TupleGetItem(func_4725_call(relay.reshape(var_7171.astype('float32'), [14, 2, 6])), 2)
output = relay.Tuple([uop_7161,call_7165,call_7170,var_7171,])
output2 = relay.Tuple([uop_7163,call_7166,call_7172,var_7171,])
func_7175 = relay.Function([var_7171,], output)
mod['func_7175'] = func_7175
mod = relay.transform.InferType()(mod)
mutated_mod['func_7175'] = func_7175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7176 = relay.var("var_7176", dtype = "float32", shape = (168,))#candidate|7176|(168,)|var|float32
func_7175_call = mutated_mod.get_global_var('func_7175')
call_7177 = func_7175_call(var_7176)
output = call_7177
func_7178 = relay.Function([var_7176], output)
mutated_mod['func_7178'] = func_7178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1908_call = mod.get_global_var('func_1908')
func_1910_call = mutated_mod.get_global_var('func_1910')
call_7205 = relay.TupleGetItem(func_1908_call(), 4)
call_7206 = relay.TupleGetItem(func_1910_call(), 4)
output = call_7205
output2 = call_7206
func_7264 = relay.Function([], output)
mod['func_7264'] = func_7264
mod = relay.transform.InferType()(mod)
mutated_mod['func_7264'] = func_7264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7264_call = mutated_mod.get_global_var('func_7264')
call_7265 = func_7264_call()
output = call_7265
func_7266 = relay.Function([], output)
mutated_mod['func_7266'] = func_7266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1849_call = mod.get_global_var('func_1849')
func_1850_call = mutated_mod.get_global_var('func_1850')
call_7270 = func_1849_call()
call_7271 = func_1849_call()
func_3779_call = mod.get_global_var('func_3779')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_7279 = func_3779_call()
call_7280 = func_3779_call()
output = relay.Tuple([call_7270,call_7279,])
output2 = relay.Tuple([call_7271,call_7280,])
func_7285 = relay.Function([], output)
mod['func_7285'] = func_7285
mod = relay.transform.InferType()(mod)
output = func_7285()
func_7286 = relay.Function([], output)
mutated_mod['func_7286'] = func_7286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3428_call = mod.get_global_var('func_3428')
func_3429_call = mutated_mod.get_global_var('func_3429')
call_7302 = relay.TupleGetItem(func_3428_call(), 0)
call_7303 = relay.TupleGetItem(func_3429_call(), 0)
func_1102_call = mod.get_global_var('func_1102')
func_1103_call = mutated_mod.get_global_var('func_1103')
call_7304 = relay.TupleGetItem(func_1102_call(), 0)
call_7305 = relay.TupleGetItem(func_1103_call(), 0)
const_7319 = relay.const([[[9.930732,8.645670,6.272402,-0.608766,-0.497204,-8.118519],[4.075042,2.226839,-9.874611,-4.335833,4.628613,-3.084620]],[[7.385623,-8.169963,-6.553871,1.092745,-2.711801,0.899033],[1.686966,-0.714821,3.774552,-0.219267,3.651794,7.874960]],[[2.486656,4.682796,1.960026,-6.112706,0.588359,-9.841079],[-7.987667,-7.189644,-9.235025,2.200721,4.890897,3.777877]],[[-7.034936,-3.630005,3.435896,4.831821,5.291541,-0.773448],[1.776597,0.640850,5.260548,-4.701241,9.187921,4.598182]],[[8.749493,1.012102,-6.958679,2.238209,-8.856516,-9.892824],[-8.945813,5.898353,-0.394537,-7.401153,-5.540067,4.668298]],[[8.495659,-6.028587,-6.578434,-1.839260,-7.446966,-9.697298],[-8.214603,8.729048,8.534683,-8.678963,2.272985,2.908007]],[[2.779671,5.164360,5.432280,-2.630281,1.854843,0.516255],[-5.733483,4.221703,3.409560,2.748370,9.995055,9.848483]],[[-7.688092,-7.474290,4.197598,-0.747727,5.570368,-7.507604],[-2.727959,8.698256,4.973992,8.124566,-2.424961,-7.243718]],[[-7.769264,3.757638,-5.463978,0.316356,0.014271,7.911413],[9.138532,8.480724,1.516282,-3.805662,-7.930118,3.445603]],[[-0.069890,8.834632,8.011547,6.577935,4.417674,-2.194612],[3.667130,5.193851,5.289846,3.489034,-4.933047,-5.253941]],[[-8.900932,5.672999,-6.326275,7.454907,0.205476,-5.219785],[-9.391472,-2.707345,-3.757065,-9.827266,-0.739455,-0.328663]],[[-6.160758,1.420896,8.997903,-8.923740,-8.255803,-0.448875],[3.284684,5.282561,3.884759,7.275119,2.883918,7.453574]],[[-4.117460,7.626889,3.824351,3.030009,6.698562,-6.310163],[-7.031103,0.806609,-4.008023,5.544359,4.248312,-8.338606]],[[-1.072644,-7.950599,-2.003663,-6.451129,8.952846,5.361713],[8.988506,-6.595824,3.318028,7.624681,-8.407795,-6.374708]]], dtype = "float32")#candidate|7319|(14, 2, 6)|const|float32
bop_7320 = relay.add(call_7302.astype('uint8'), relay.reshape(const_7319.astype('uint8'), relay.shape_of(call_7302))) # shape=(14, 2, 6)
bop_7323 = relay.add(call_7303.astype('uint8'), relay.reshape(const_7319.astype('uint8'), relay.shape_of(call_7303))) # shape=(14, 2, 6)
uop_7335 = relay.cosh(bop_7320.astype('float32')) # shape=(14, 2, 6)
uop_7337 = relay.cosh(bop_7323.astype('float32')) # shape=(14, 2, 6)
func_3849_call = mod.get_global_var('func_3849')
func_3850_call = mutated_mod.get_global_var('func_3850')
call_7340 = relay.TupleGetItem(func_3849_call(), 0)
call_7341 = relay.TupleGetItem(func_3850_call(), 0)
output = relay.Tuple([call_7304,uop_7335,call_7340,])
output2 = relay.Tuple([call_7305,uop_7337,call_7341,])
func_7364 = relay.Function([], output)
mod['func_7364'] = func_7364
mod = relay.transform.InferType()(mod)
output = func_7364()
func_7365 = relay.Function([], output)
mutated_mod['func_7365'] = func_7365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2091_call = mod.get_global_var('func_2091')
func_2092_call = mutated_mod.get_global_var('func_2092')
call_7391 = relay.TupleGetItem(func_2091_call(), 0)
call_7392 = relay.TupleGetItem(func_2092_call(), 0)
output = relay.Tuple([call_7391,])
output2 = relay.Tuple([call_7392,])
func_7414 = relay.Function([], output)
mod['func_7414'] = func_7414
mod = relay.transform.InferType()(mod)
output = func_7414()
func_7415 = relay.Function([], output)
mutated_mod['func_7415'] = func_7415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5688_call = mod.get_global_var('func_5688')
func_5689_call = mutated_mod.get_global_var('func_5689')
call_7416 = func_5688_call()
call_7417 = func_5688_call()
func_120_call = mod.get_global_var('func_120')
func_122_call = mutated_mod.get_global_var('func_122')
call_7436 = relay.TupleGetItem(func_120_call(), 0)
call_7437 = relay.TupleGetItem(func_122_call(), 0)
func_4445_call = mod.get_global_var('func_4445')
func_4447_call = mutated_mod.get_global_var('func_4447')
var_7445 = relay.var("var_7445", dtype = "uint64", shape = (192,))#candidate|7445|(192,)|var|uint64
call_7444 = relay.TupleGetItem(func_4445_call(relay.reshape(var_7445.astype('uint64'), [192,])), 2)
call_7446 = relay.TupleGetItem(func_4447_call(relay.reshape(var_7445.astype('uint64'), [192,])), 2)
output = relay.Tuple([call_7416,call_7436,call_7444,var_7445,])
output2 = relay.Tuple([call_7417,call_7437,call_7446,var_7445,])
func_7453 = relay.Function([var_7445,], output)
mod['func_7453'] = func_7453
mod = relay.transform.InferType()(mod)
var_7454 = relay.var("var_7454", dtype = "uint64", shape = (192,))#candidate|7454|(192,)|var|uint64
output = func_7453(var_7454)
func_7455 = relay.Function([var_7454], output)
mutated_mod['func_7455'] = func_7455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2160_call = mod.get_global_var('func_2160')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_7479 = relay.TupleGetItem(func_2160_call(), 0)
call_7480 = relay.TupleGetItem(func_2162_call(), 0)
var_7488 = relay.var("var_7488", dtype = "float32", shape = (14, 2, 6))#candidate|7488|(14, 2, 6)|var|float32
bop_7489 = relay.multiply(call_7479.astype('float64'), relay.reshape(var_7488.astype('float64'), relay.shape_of(call_7479))) # shape=(14, 2, 6)
bop_7492 = relay.multiply(call_7480.astype('float64'), relay.reshape(var_7488.astype('float64'), relay.shape_of(call_7480))) # shape=(14, 2, 6)
output = bop_7489
output2 = bop_7492
func_7506 = relay.Function([var_7488,], output)
mod['func_7506'] = func_7506
mod = relay.transform.InferType()(mod)
mutated_mod['func_7506'] = func_7506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7507 = relay.var("var_7507", dtype = "float32", shape = (14, 2, 6))#candidate|7507|(14, 2, 6)|var|float32
func_7506_call = mutated_mod.get_global_var('func_7506')
call_7508 = func_7506_call(var_7507)
output = call_7508
func_7509 = relay.Function([var_7507], output)
mutated_mod['func_7509'] = func_7509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5977_call = mod.get_global_var('func_5977')
func_5978_call = mutated_mod.get_global_var('func_5978')
call_7553 = relay.TupleGetItem(func_5977_call(), 0)
call_7554 = relay.TupleGetItem(func_5978_call(), 0)
func_5977_call = mod.get_global_var('func_5977')
func_5978_call = mutated_mod.get_global_var('func_5978')
call_7566 = relay.TupleGetItem(func_5977_call(), 0)
call_7567 = relay.TupleGetItem(func_5978_call(), 0)
output = relay.Tuple([call_7553,call_7566,])
output2 = relay.Tuple([call_7554,call_7567,])
func_7603 = relay.Function([], output)
mod['func_7603'] = func_7603
mod = relay.transform.InferType()(mod)
mutated_mod['func_7603'] = func_7603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7603_call = mutated_mod.get_global_var('func_7603')
call_7604 = func_7603_call()
output = call_7604
func_7605 = relay.Function([], output)
mutated_mod['func_7605'] = func_7605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7090_call = mod.get_global_var('func_7090')
func_7092_call = mutated_mod.get_global_var('func_7092')
call_7692 = relay.TupleGetItem(func_7090_call(), 0)
call_7693 = relay.TupleGetItem(func_7092_call(), 0)
func_6514_call = mod.get_global_var('func_6514')
func_6515_call = mutated_mod.get_global_var('func_6515')
call_7702 = relay.TupleGetItem(func_6514_call(), 0)
call_7703 = relay.TupleGetItem(func_6515_call(), 0)
output = relay.Tuple([call_7692,call_7702,])
output2 = relay.Tuple([call_7693,call_7703,])
func_7704 = relay.Function([], output)
mod['func_7704'] = func_7704
mod = relay.transform.InferType()(mod)
mutated_mod['func_7704'] = func_7704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7704_call = mutated_mod.get_global_var('func_7704')
call_7705 = func_7704_call()
output = call_7705
func_7706 = relay.Function([], output)
mutated_mod['func_7706'] = func_7706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5688_call = mod.get_global_var('func_5688')
func_5689_call = mutated_mod.get_global_var('func_5689')
call_7727 = func_5688_call()
call_7728 = func_5688_call()
output = call_7727
output2 = call_7728
func_7742 = relay.Function([], output)
mod['func_7742'] = func_7742
mod = relay.transform.InferType()(mod)
output = func_7742()
func_7743 = relay.Function([], output)
mutated_mod['func_7743'] = func_7743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2203_call = mod.get_global_var('func_2203')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_7767 = relay.TupleGetItem(func_2203_call(), 0)
call_7768 = relay.TupleGetItem(func_2205_call(), 0)
var_7771 = relay.var("var_7771", dtype = "int64", shape = (6, 5, 10))#candidate|7771|(6, 5, 10)|var|int64
bop_7772 = relay.power(call_7767.astype('float64'), relay.reshape(var_7771.astype('float64'), relay.shape_of(call_7767))) # shape=(6, 5, 10)
bop_7775 = relay.power(call_7768.astype('float64'), relay.reshape(var_7771.astype('float64'), relay.shape_of(call_7768))) # shape=(6, 5, 10)
output = bop_7772
output2 = bop_7775
func_7776 = relay.Function([var_7771,], output)
mod['func_7776'] = func_7776
mod = relay.transform.InferType()(mod)
mutated_mod['func_7776'] = func_7776
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7777 = relay.var("var_7777", dtype = "int64", shape = (6, 5, 10))#candidate|7777|(6, 5, 10)|var|int64
func_7776_call = mutated_mod.get_global_var('func_7776')
call_7778 = func_7776_call(var_7777)
output = call_7778
func_7779 = relay.Function([var_7777], output)
mutated_mod['func_7779'] = func_7779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5688_call = mod.get_global_var('func_5688')
func_5689_call = mutated_mod.get_global_var('func_5689')
call_7817 = func_5688_call()
call_7818 = func_5688_call()
func_1963_call = mod.get_global_var('func_1963')
func_1965_call = mutated_mod.get_global_var('func_1965')
const_7823 = relay.const([-10,-7,1,2,-9,-7,-3,-6,-7,-10,5,-9,1,-6,-10,6,5,4,-7,7,-7,-9,-1,7,-6,-6,-6,-1,-3,-2,3,-2,-3,-4,1,8,-6,-10,4,6,6,-10,-7,1,-9,2,3,10,-10,-10,-6,1,-5,-2,10,-6,9,9,10,-5,-5,1,-3,-7,7,-4,-4,-6,7,8,7,-2,-4,2,4,-3,8,-8,6,4,3,-6,-6,-7,-2,8,1,-6,4,-6,-9,7,2,-8,1,2,3,-10,-2,-2,2,-6,2,5,-1,-4,10,10,7,10,2,-1,-2,4,9,-10,7,-3,9,-7,-1,-3,-4,-4,-10,8,-8,9,-1,-6,10,-1,-2,-6,-2,-3,3,5,10,-8,-6,4,-9,-6,7,-1,7,-6,8,-2,-4,-5,-1,-6,-2,1,3,3,-10,2,-10,6,9,-6,5,-7,-1,8,3,-4,8,-10,-3,-3,-2,2,-2,-9,2,5,-1,4,5,5,6,10,9,5,4,6,-4,10,-7,-6,2,4,-4,-5,-2,4,2,-10,-5,-2,2,7,-6,-2,5,2,9,-3,6,-1,-10,4,8,-4,10,4,-6,2,5,5,-1,-9,2,-5,-10,7,-1,4,7,-2,6,3,-6,-5,8,-3,8,-1,-2,1,1,3,-8,-1,7,-4,-1,6,-9,-10,-3,-5,-5,-3,3,10,-1,7,-2,-4,4,-1,-2,-4,-9,9,-7,5,3,8,2,-9,3,-2,-4,1,4,-5,-10,-9,-3,-1,5,10,-3,-3,8,-8,9,3,6,-3,7,-7,7,8], dtype = "int64")#candidate|7823|(300,)|const|int64
call_7822 = func_1963_call(relay.reshape(const_7823.astype('int64'), [6, 5, 10]))
call_7824 = func_1963_call(relay.reshape(const_7823.astype('int64'), [6, 5, 10]))
output = relay.Tuple([call_7817,call_7822,const_7823,])
output2 = relay.Tuple([call_7818,call_7824,const_7823,])
func_7829 = relay.Function([], output)
mod['func_7829'] = func_7829
mod = relay.transform.InferType()(mod)
mutated_mod['func_7829'] = func_7829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7829_call = mutated_mod.get_global_var('func_7829')
call_7830 = func_7829_call()
output = call_7830
func_7831 = relay.Function([], output)
mutated_mod['func_7831'] = func_7831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5509_call = mod.get_global_var('func_5509')
func_5511_call = mutated_mod.get_global_var('func_5511')
call_7841 = relay.TupleGetItem(func_5509_call(), 0)
call_7842 = relay.TupleGetItem(func_5511_call(), 0)
uop_7848 = relay.log(call_7841.astype('float64')) # shape=(14, 2, 6)
uop_7850 = relay.log(call_7842.astype('float64')) # shape=(14, 2, 6)
func_3131_call = mod.get_global_var('func_3131')
func_3134_call = mutated_mod.get_global_var('func_3134')
var_7852 = relay.var("var_7852", dtype = "bool", shape = (1600,))#candidate|7852|(1600,)|var|bool
call_7851 = relay.TupleGetItem(func_3131_call(relay.reshape(var_7852.astype('bool'), [1600,])), 0)
call_7853 = relay.TupleGetItem(func_3134_call(relay.reshape(var_7852.astype('bool'), [1600,])), 0)
bop_7888 = relay.logical_and(uop_7848.astype('bool'), relay.reshape(call_7841.astype('bool'), relay.shape_of(uop_7848))) # shape=(14, 2, 6)
bop_7891 = relay.logical_and(uop_7850.astype('bool'), relay.reshape(call_7842.astype('bool'), relay.shape_of(uop_7850))) # shape=(14, 2, 6)
var_7895 = relay.var("var_7895", dtype = "bool", shape = (1600,))#candidate|7895|(1600,)|var|bool
bop_7896 = relay.floor_divide(var_7852.astype('float64'), relay.reshape(var_7895.astype('float64'), relay.shape_of(var_7852))) # shape=(1600,)
func_5750_call = mod.get_global_var('func_5750')
func_5752_call = mutated_mod.get_global_var('func_5752')
call_7899 = relay.TupleGetItem(func_5750_call(), 0)
call_7900 = relay.TupleGetItem(func_5752_call(), 0)
output = relay.Tuple([call_7851,bop_7888,bop_7896,call_7899,])
output2 = relay.Tuple([call_7853,bop_7891,bop_7896,call_7900,])
func_7902 = relay.Function([var_7852,var_7895,], output)
mod['func_7902'] = func_7902
mod = relay.transform.InferType()(mod)
mutated_mod['func_7902'] = func_7902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7902_call = mutated_mod.get_global_var('func_7902')
var_7904 = relay.var("var_7904", dtype = "bool", shape = (1600,))#candidate|7904|(1600,)|var|bool
var_7905 = relay.var("var_7905", dtype = "bool", shape = (1600,))#candidate|7905|(1600,)|var|bool
call_7903 = func_7902_call(var_7904,var_7905,)
output = call_7903
func_7906 = relay.Function([var_7904,var_7905,], output)
mutated_mod['func_7906'] = func_7906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1650_call = mod.get_global_var('func_1650')
func_1651_call = mutated_mod.get_global_var('func_1651')
call_7930 = func_1650_call()
call_7931 = func_1650_call()
output = call_7930
output2 = call_7931
func_7949 = relay.Function([], output)
mod['func_7949'] = func_7949
mod = relay.transform.InferType()(mod)
output = func_7949()
func_7950 = relay.Function([], output)
mutated_mod['func_7950'] = func_7950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8050 = relay.var("var_8050", dtype = "float64", shape = (11, 15, 4))#candidate|8050|(11, 15, 4)|var|float64
const_8051 = relay.const([[[-7.229451,-7.693184,-7.000733,0.595793],[8.391429,6.683642,8.508797,-1.612081],[9.347546,7.353329,6.068675,-3.639253],[5.140817,-3.876405,-5.887562,9.519677],[2.853347,7.304684,9.719007,2.119315],[6.355284,-1.286187,1.000348,9.265652],[1.351662,7.379582,-1.254997,6.250819],[-5.469916,1.271970,1.986203,-9.683799],[-5.393218,-3.603735,-2.369695,0.364769],[9.979756,-1.970124,-0.806435,2.353859],[-4.110738,-8.189616,-7.151072,7.754021],[-5.361642,6.127344,4.430332,-4.326042],[-6.563732,-4.268322,4.950678,-7.034529],[1.567825,7.153764,-3.102481,5.207505],[9.634952,8.304940,6.532294,4.109378]],[[9.093048,-3.039064,-3.484578,4.889893],[7.089846,6.391566,3.643796,2.946715],[1.021485,-5.263281,7.097864,-9.228998],[2.379727,-4.288960,-0.344670,-8.922035],[5.853585,6.201755,-4.089875,-6.217622],[-7.730730,-3.970711,0.468221,-0.866216],[-6.916458,-1.734239,7.195499,5.257259],[4.358694,2.405477,4.107176,1.225582],[-0.306550,-8.927181,4.090239,0.367556],[-0.917065,0.945981,1.201976,-9.382214],[-8.302564,-2.990508,-6.051344,2.410325],[0.066156,7.698947,-2.718396,3.798383],[2.710853,2.113371,-0.947282,-0.980390],[-3.660172,-6.095151,-4.335643,-7.953432],[-4.746043,-9.516295,-8.375924,-9.091170]],[[-5.900177,-9.994544,-0.306103,-2.981401],[2.414286,6.489574,-6.852208,-4.490557],[5.109052,-4.197610,-9.055460,2.920364],[0.904508,8.766667,6.542814,-3.622723],[6.692640,-4.863443,-6.931569,-0.656284],[6.178064,-3.910702,0.345765,-3.098593],[2.196540,-5.558214,4.151456,-1.373952],[3.877416,-4.362865,7.262105,9.943719],[8.275425,1.220481,-8.499847,5.557626],[5.663010,8.649505,9.355246,2.627499],[-5.985924,-3.359837,2.519082,3.668246],[-1.811478,2.307653,-7.709199,-0.739193],[1.995403,3.553078,5.264306,8.895370],[-7.900213,-2.360815,-9.867903,7.381867],[4.033107,8.475290,-6.647971,-5.439966]],[[-4.426061,6.556475,-5.254535,8.198865],[2.383001,6.044884,0.649042,6.210622],[8.722030,7.459690,4.946404,-2.614224],[-0.118713,-1.290622,-1.500526,4.451675],[-7.166644,7.146502,7.239277,-1.935215],[-9.243789,1.484462,-0.514825,9.438560],[-5.028065,-4.053089,8.798985,6.537465],[-1.071570,0.909265,-2.994575,3.438865],[2.847718,1.321156,9.206004,0.178274],[3.771348,-8.726259,2.194525,1.407328],[-4.672733,4.653909,-4.630802,-1.205425],[-8.005373,-7.437465,-3.506214,-7.629454],[-0.706621,-1.804246,7.378414,4.291858],[7.061355,8.489175,-0.640013,-0.509311],[-2.091658,-5.828916,-2.094239,6.829243]],[[-5.615477,3.571361,9.371635,-4.233979],[7.326244,-0.245538,-7.402239,8.998624],[5.828034,-2.008003,4.534479,-0.192713],[0.212350,1.055023,8.427911,-9.025319],[-5.673686,9.918081,8.338114,2.797064],[-7.586434,-9.038625,-3.614362,-3.182603],[-8.723577,7.696699,-1.559102,7.412007],[-7.640820,7.463277,2.215587,-6.663572],[-1.654302,0.247627,4.986574,-5.537041],[-3.633351,4.634044,9.988437,-0.424943],[-2.168138,4.452869,-2.152907,-8.092578],[6.889501,-4.082932,-6.425877,-3.762882],[-0.096637,-2.022732,1.950921,-3.738395],[7.582954,-6.748986,2.582673,-5.528111],[-7.576062,-5.035949,-6.095359,9.084024]],[[7.240130,-1.451402,-2.554268,-5.026252],[3.111280,0.100861,3.313082,-6.900271],[9.085568,5.338470,-0.413599,-7.991600],[-0.805903,6.531965,-2.276361,-7.925855],[-0.852228,2.994077,-1.916958,-2.144476],[-0.077699,-3.544253,8.772194,3.283830],[2.955534,4.797555,-2.740064,-6.658732],[0.768546,-2.124870,-3.947811,1.410389],[1.691614,-2.888470,-1.679705,8.156390],[-4.569541,-6.487460,7.407683,-5.704123],[2.789466,-2.626774,8.000339,-3.616181],[-7.795416,-5.694133,2.409274,5.733753],[-9.597683,-7.577966,-4.832401,-0.481954],[9.902310,-0.130258,-9.591677,6.321591],[1.623503,4.467681,-5.626445,2.865952]],[[-6.742506,-7.525377,8.696834,0.632088],[8.976975,-7.791015,1.268356,-7.263040],[9.878900,8.231684,0.382060,7.392929],[-6.598806,3.301177,-9.588456,9.694240],[4.613138,5.893324,-7.277404,-1.556812],[-1.772296,6.417440,1.107542,7.546826],[2.108859,-5.903749,7.811700,8.626281],[6.209374,2.303384,7.588183,-7.620105],[-4.948176,8.350250,-6.282585,-5.984826],[-4.125458,1.859428,2.133936,-2.489885],[8.910872,5.908318,1.940679,0.904205],[7.794707,-0.661900,9.127386,5.419039],[-3.157089,-4.881678,3.096859,-8.812854],[3.963087,5.333903,-2.680279,5.202969],[9.743825,-5.692987,1.659054,8.089999]],[[-5.600479,9.247810,-4.066131,8.001212],[1.045745,-0.071502,-8.142036,-9.635732],[-9.592444,-6.867604,6.015248,-9.865487],[-8.831985,2.354093,-4.475137,8.639284],[0.392618,0.893524,2.441250,-3.888383],[-2.793612,7.425433,1.206143,-2.093541],[-5.707485,-4.574308,-0.558286,-9.778870],[-6.989947,-5.518908,-0.332112,2.014891],[-1.659257,4.520038,-1.640630,-1.173497],[-7.474042,9.407274,3.797073,6.054830],[6.616102,-5.229231,1.299788,-1.087228],[-9.962773,-4.594023,-9.423009,-1.214477],[-0.054379,3.349109,-6.799318,-1.433966],[9.955756,-2.514491,2.642481,-5.080263],[-0.066926,0.008652,3.941332,6.804233]],[[-7.327743,-6.870013,9.720443,-7.803518],[8.863986,-6.742234,6.901078,-1.626269],[9.843764,-3.324592,5.039667,5.358399],[5.181401,3.225576,-6.722670,-8.990738],[-5.927157,-3.293226,-4.732263,-0.133665],[-8.583915,0.996410,7.155037,-3.062041],[-2.722050,1.192717,-4.120659,6.944427],[9.606771,-5.440419,4.919556,9.056178],[-1.435540,-3.879209,-9.495807,-9.198688],[2.455885,-3.573080,1.993368,5.956711],[5.859085,1.519567,7.653217,1.807230],[3.243311,9.194930,3.590807,7.072930],[-9.746871,-6.531530,-1.425791,6.868193],[-7.157431,-0.909990,-5.977253,1.883357],[-6.124846,6.606950,-6.870672,0.082735]],[[8.037117,-2.071760,9.276903,-1.062473],[5.141085,-4.626898,2.073715,-0.929861],[6.449107,2.278024,-0.008164,-6.617721],[-9.730907,3.958121,-9.366049,-7.036772],[5.193864,-2.585545,-4.863861,-3.509427],[9.097453,5.731498,-3.863817,-0.638595],[-4.644410,0.518697,1.353573,-4.265928],[-9.990405,-1.737923,-5.853375,-4.291059],[6.667155,-5.095531,1.857358,-6.315093],[8.759509,9.583723,1.605859,2.537587],[8.673433,-5.075007,-9.822037,-3.501782],[-7.455684,-0.876526,-8.110030,-7.330597],[3.321862,2.642265,5.495065,-0.761688],[-8.810847,-8.653856,7.102416,5.865147],[1.469786,0.823590,-7.512902,-0.368755]],[[-2.176541,7.965013,9.448003,8.802338],[-5.971056,3.128998,-4.703881,-2.539007],[9.670821,-2.840242,0.748673,4.298921],[0.760308,-7.701743,8.001699,2.203530],[9.118656,-9.537063,-7.314757,-6.642202],[-2.969578,9.197011,6.710564,5.108183],[-9.805951,3.084640,-7.764178,-6.854008],[-6.329788,1.631004,3.340322,4.781151],[-6.181940,8.768498,3.658878,9.409969],[4.266505,-6.537490,0.212856,8.516109],[1.245311,3.023714,-5.511433,-6.752467],[-4.221150,-0.868477,-8.839455,5.775997],[5.704557,8.747936,-2.617219,-7.199832],[7.700441,-4.406537,8.365200,3.942042],[-2.197196,-4.445665,-2.511337,8.194663]]], dtype = "float64")#candidate|8051|(11, 15, 4)|const|float64
bop_8052 = relay.divide(var_8050.astype('float64'), relay.reshape(const_8051.astype('float64'), relay.shape_of(var_8050))) # shape=(11, 15, 4)
bop_8064 = relay.bitwise_xor(bop_8052.astype('uint32'), relay.reshape(const_8051.astype('uint32'), relay.shape_of(bop_8052))) # shape=(11, 15, 4)
output = bop_8064
output2 = bop_8064
func_8080 = relay.Function([var_8050,], output)
mod['func_8080'] = func_8080
mod = relay.transform.InferType()(mod)
var_8081 = relay.var("var_8081", dtype = "float64", shape = (11, 15, 4))#candidate|8081|(11, 15, 4)|var|float64
output = func_8080(var_8081)
func_8082 = relay.Function([var_8081], output)
mutated_mod['func_8082'] = func_8082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7704_call = mod.get_global_var('func_7704')
func_7706_call = mutated_mod.get_global_var('func_7706')
call_8149 = relay.TupleGetItem(func_7704_call(), 0)
call_8150 = relay.TupleGetItem(func_7706_call(), 0)
output = call_8149
output2 = call_8150
func_8182 = relay.Function([], output)
mod['func_8182'] = func_8182
mod = relay.transform.InferType()(mod)
output = func_8182()
func_8183 = relay.Function([], output)
mutated_mod['func_8183'] = func_8183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8250 = relay.var("var_8250", dtype = "int32", shape = (15, 2, 8))#candidate|8250|(15, 2, 8)|var|int32
var_8251 = relay.var("var_8251", dtype = "int32", shape = (15, 2, 8))#candidate|8251|(15, 2, 8)|var|int32
bop_8252 = relay.equal(var_8250.astype('bool'), relay.reshape(var_8251.astype('bool'), relay.shape_of(var_8250))) # shape=(15, 2, 8)
func_7364_call = mod.get_global_var('func_7364')
func_7365_call = mutated_mod.get_global_var('func_7365')
call_8255 = relay.TupleGetItem(func_7364_call(), 0)
call_8256 = relay.TupleGetItem(func_7365_call(), 0)
output = relay.Tuple([bop_8252,call_8255,])
output2 = relay.Tuple([bop_8252,call_8256,])
func_8261 = relay.Function([var_8250,var_8251,], output)
mod['func_8261'] = func_8261
mod = relay.transform.InferType()(mod)
mutated_mod['func_8261'] = func_8261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8261_call = mutated_mod.get_global_var('func_8261')
var_8263 = relay.var("var_8263", dtype = "int32", shape = (15, 2, 8))#candidate|8263|(15, 2, 8)|var|int32
var_8264 = relay.var("var_8264", dtype = "int32", shape = (15, 2, 8))#candidate|8264|(15, 2, 8)|var|int32
call_8262 = func_8261_call(var_8263,var_8264,)
output = call_8262
func_8265 = relay.Function([var_8263,var_8264,], output)
mutated_mod['func_8265'] = func_8265
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8333 = relay.var("var_8333", dtype = "float64", shape = (1, 15, 12))#candidate|8333|(1, 15, 12)|var|float64
var_8334 = relay.var("var_8334", dtype = "float64", shape = (13, 15, 12))#candidate|8334|(13, 15, 12)|var|float64
bop_8335 = relay.equal(var_8333.astype('bool'), var_8334.astype('bool')) # shape=(13, 15, 12)
output = relay.Tuple([bop_8335,])
output2 = relay.Tuple([bop_8335,])
func_8339 = relay.Function([var_8333,var_8334,], output)
mod['func_8339'] = func_8339
mod = relay.transform.InferType()(mod)
var_8340 = relay.var("var_8340", dtype = "float64", shape = (1, 15, 12))#candidate|8340|(1, 15, 12)|var|float64
var_8341 = relay.var("var_8341", dtype = "float64", shape = (13, 15, 12))#candidate|8341|(13, 15, 12)|var|float64
output = func_8339(var_8340,var_8341,)
func_8342 = relay.Function([var_8340,var_8341,], output)
mutated_mod['func_8342'] = func_8342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3686_call = mod.get_global_var('func_3686')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_8379 = relay.TupleGetItem(func_3686_call(), 1)
call_8380 = relay.TupleGetItem(func_3687_call(), 1)
func_2592_call = mod.get_global_var('func_2592')
func_2594_call = mutated_mod.get_global_var('func_2594')
call_8406 = relay.TupleGetItem(func_2592_call(relay.reshape(call_8379.astype('int64'), [300,])), 0)
call_8407 = relay.TupleGetItem(func_2594_call(relay.reshape(call_8379.astype('int64'), [300,])), 0)
func_872_call = mod.get_global_var('func_872')
func_873_call = mutated_mod.get_global_var('func_873')
call_8420 = relay.TupleGetItem(func_872_call(), 0)
call_8421 = relay.TupleGetItem(func_873_call(), 0)
output = relay.Tuple([call_8379,call_8406,call_8420,])
output2 = relay.Tuple([call_8380,call_8407,call_8421,])
func_8433 = relay.Function([], output)
mod['func_8433'] = func_8433
mod = relay.transform.InferType()(mod)
output = func_8433()
func_8434 = relay.Function([], output)
mutated_mod['func_8434'] = func_8434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_8511 = relay.TupleGetItem(func_5812_call(), 0)
call_8512 = relay.TupleGetItem(func_5813_call(), 0)
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
call_8526 = relay.TupleGetItem(func_847_call(), 1)
call_8527 = relay.TupleGetItem(func_849_call(), 1)
output = relay.Tuple([call_8511,call_8526,])
output2 = relay.Tuple([call_8512,call_8527,])
func_8530 = relay.Function([], output)
mod['func_8530'] = func_8530
mod = relay.transform.InferType()(mod)
mutated_mod['func_8530'] = func_8530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8530_call = mutated_mod.get_global_var('func_8530')
call_8531 = func_8530_call()
output = call_8531
func_8532 = relay.Function([], output)
mutated_mod['func_8532'] = func_8532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6738_call = mod.get_global_var('func_6738')
func_6740_call = mutated_mod.get_global_var('func_6740')
call_8533 = func_6738_call()
call_8534 = func_6738_call()
output = relay.Tuple([call_8533,])
output2 = relay.Tuple([call_8534,])
func_8535 = relay.Function([], output)
mod['func_8535'] = func_8535
mod = relay.transform.InferType()(mod)
mutated_mod['func_8535'] = func_8535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8535_call = mutated_mod.get_global_var('func_8535')
call_8536 = func_8535_call()
output = call_8536
func_8537 = relay.Function([], output)
mutated_mod['func_8537'] = func_8537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5945_call = mod.get_global_var('func_5945')
func_5947_call = mutated_mod.get_global_var('func_5947')
call_8546 = relay.TupleGetItem(func_5945_call(), 0)
call_8547 = relay.TupleGetItem(func_5947_call(), 0)
func_7704_call = mod.get_global_var('func_7704')
func_7706_call = mutated_mod.get_global_var('func_7706')
call_8559 = relay.TupleGetItem(func_7704_call(), 0)
call_8560 = relay.TupleGetItem(func_7706_call(), 0)
output = relay.Tuple([call_8546,call_8559,])
output2 = relay.Tuple([call_8547,call_8560,])
func_8571 = relay.Function([], output)
mod['func_8571'] = func_8571
mod = relay.transform.InferType()(mod)
output = func_8571()
func_8572 = relay.Function([], output)
mutated_mod['func_8572'] = func_8572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6738_call = mod.get_global_var('func_6738')
func_6740_call = mutated_mod.get_global_var('func_6740')
call_8580 = func_6738_call()
call_8581 = func_6738_call()
func_8080_call = mod.get_global_var('func_8080')
func_8082_call = mutated_mod.get_global_var('func_8082')
const_8614 = relay.const([[8.349077,-5.140090,-2.753491,-1.842674,6.582883,-0.272718],[-4.082750,-9.837218,1.777124,-2.326189,-4.258730,2.694849],[1.008871,-6.412788,-1.400965,7.348114,2.225990,6.704425],[1.093120,-7.213349,7.868684,1.681303,6.086398,9.680642],[7.551141,8.980424,2.782305,-8.479958,2.210310,-1.669540],[4.667394,8.501506,-1.808605,9.117126,2.575976,-5.075931],[-7.794809,-6.722568,-1.710016,9.253259,1.587611,1.901365],[0.212592,4.162219,9.542649,-9.954022,9.761802,4.177858],[7.280986,-6.953916,8.301646,3.274358,-1.957981,9.294692],[7.099509,-9.182236,6.195144,-2.958143,1.352974,-9.562433],[6.035424,-3.929404,-0.585906,-9.085653,-5.913585,-6.966975],[-3.525503,8.544189,7.206023,2.714594,3.890776,6.144176],[1.952042,-6.795285,-3.134743,8.850693,5.361734,-0.523157],[-3.469328,7.950159,0.164676,-1.644339,-8.986985,-5.759022],[-4.484959,-7.149383,-4.640116,6.017381,4.771974,-8.107274],[-7.896280,-1.041536,5.245667,3.972519,4.588204,-1.832398],[3.083643,-9.687307,9.955100,7.876610,-5.209328,0.662037],[-2.215329,8.911237,-4.039507,0.387499,0.411909,1.643559],[-1.863244,-2.450978,7.186596,7.810519,3.187043,-6.939734],[-3.421906,6.701296,-6.339810,0.989532,6.307679,-6.830719],[3.677894,-8.824824,6.601598,3.781811,-7.284233,-7.024737],[6.626751,-1.277900,4.791654,6.720553,5.102218,5.533503],[0.165058,-8.310305,9.482007,3.865028,-5.467580,8.536408],[7.128479,4.724045,8.380399,2.824254,2.207649,7.408872],[8.015649,0.878447,9.712702,-9.766269,2.599834,1.327148],[0.291054,8.357908,-1.971052,-8.065845,-3.698442,-2.689450],[7.073552,-1.376763,0.246704,3.934158,-9.306491,4.063352],[1.063714,-2.698203,-5.233029,9.951270,-0.916150,8.212571],[-8.929544,-7.230212,-2.784270,-9.727175,2.716015,-3.816735],[-5.305025,4.381233,-4.829346,0.616138,-0.108483,3.770768],[8.998643,-3.522322,4.192934,5.461931,5.531452,-2.674487],[-2.418735,9.060051,6.475330,-0.924501,-8.839353,-1.436283],[6.212360,-8.586403,-2.788474,-9.108392,3.567621,0.280716],[5.530087,-0.722350,2.657510,-8.640705,9.737156,6.283264],[0.716786,-4.003965,7.472774,6.149257,-2.962754,-6.834694],[7.913834,4.313120,7.556927,0.763531,7.420257,-3.680235],[0.921175,-7.640131,-6.738110,4.524705,6.025666,9.720609],[5.771526,8.835889,4.289314,-1.612452,9.382976,2.062082],[-5.080145,1.877459,-0.228112,-1.991561,-9.991868,-9.143643],[-7.504642,-3.862935,6.445054,-1.258261,-2.184992,9.901598],[9.332149,-6.727385,1.808149,-3.846657,3.193758,5.287671],[5.722523,0.906979,-6.928815,-2.470133,5.105454,-8.855688],[4.735293,3.608763,4.331475,5.289173,-4.773864,5.149558],[4.898474,-4.252111,5.256521,-2.755784,7.958340,-7.300215],[8.055309,7.334745,5.333991,6.507600,-4.586372,4.923481],[0.669502,7.543312,-2.831948,0.227795,-0.995719,-4.949340],[8.363701,-8.728134,-5.187120,-9.043002,4.591488,2.295139],[-4.066533,7.466385,6.556915,-4.939339,6.141906,6.980408],[-7.648613,7.966627,-4.287337,-4.080416,-9.846896,-5.177451],[7.269046,-1.526727,-1.107855,9.037343,9.709856,-2.091794],[2.186218,0.182851,-7.757703,2.745187,-4.780109,4.945824],[-0.898316,-8.670811,-5.181835,-0.424797,-1.832189,-7.707180],[-7.676610,1.296333,8.726230,-9.647167,-5.048475,9.054357],[-3.491883,1.780402,-8.498457,3.938236,-2.517716,1.849487],[2.631703,-3.334127,3.269101,-0.510212,-3.132423,8.289008],[1.759884,7.075639,6.922684,-0.025060,8.930765,-8.109145],[-9.657196,-8.378381,-2.096683,0.032978,3.386177,1.849740],[5.591038,-1.951465,5.732543,5.940938,-7.140553,-1.147173],[7.662346,3.753516,-6.169080,-9.283998,-1.825884,1.979418],[0.133501,-3.361496,-2.450264,7.189973,5.462801,0.363177],[4.824786,-2.647286,4.557948,8.126315,0.117365,5.631000],[6.601602,6.277965,3.321745,-1.806194,3.086471,4.042369],[-1.199419,7.483112,0.077893,-7.640495,4.461430,-3.007196],[8.926736,-3.023507,-5.550133,-2.908566,3.815113,6.502233],[-1.953729,7.934585,-6.931706,7.125606,6.048858,3.160644],[3.155245,5.387489,-0.787824,-9.686603,-9.153990,-6.311414],[-9.983470,-1.260566,-7.213447,-1.957032,7.534500,0.102333],[9.873226,-2.480828,4.009900,7.158220,0.169738,-8.441338],[-3.213972,2.719715,2.927427,8.319313,-5.409673,2.298109],[-9.013746,8.307537,-7.467426,0.603298,5.394290,-8.356250],[1.735467,9.621358,6.776681,-8.367738,-3.655568,-1.075963],[-6.731369,-6.457444,0.413996,9.070779,4.740216,8.080763],[8.150933,5.710588,-9.853466,-8.418669,9.544230,-2.937837],[9.173513,-3.321252,-7.690960,8.380596,0.548088,3.119059],[3.611961,-7.181104,2.780911,-3.032727,-4.714196,1.635762],[-2.819950,9.074079,7.965989,-1.314473,-7.548916,0.258374],[3.097232,4.511392,-0.971790,3.215142,-2.137771,-3.444457],[2.852534,-7.118580,4.431057,-7.712567,7.455263,5.538087],[2.204495,8.005981,5.305362,-3.795289,1.408589,8.712236],[-1.885357,-7.673913,-8.704006,-9.863318,7.761804,3.066932],[-1.505459,-7.880704,2.365484,-3.826455,7.529911,4.166806],[-9.733989,4.138940,7.299739,3.244465,1.991157,-3.990627],[0.380673,1.439446,-8.086255,6.877103,-7.581981,-2.179150],[3.585556,-8.987673,1.144009,9.262941,3.714099,2.662928],[5.846430,-5.684192,-0.594270,-3.300889,1.977349,4.066930],[9.861243,-5.041080,-2.262565,7.304073,-3.770375,8.600544],[5.473850,3.701437,4.691709,-5.388163,-8.520143,-1.814497],[3.920347,-8.057569,-1.081221,-2.772875,-6.790990,-0.775948],[-5.421806,-4.021581,3.515371,-7.935838,1.100599,-5.273826],[-9.531619,6.209160,9.047435,-5.571268,8.036554,-5.417550],[-1.560423,5.978649,1.424610,7.577332,2.767518,-2.263306],[6.592743,-8.742570,9.655171,-3.182367,7.841136,-4.628183],[3.566332,2.899625,4.377945,-3.945097,1.618869,-4.241985],[0.184167,-1.456299,9.519999,-5.440650,7.289492,8.188319],[7.134651,-3.747254,-0.276354,9.754777,4.212156,-2.494050],[-5.898452,-6.101439,-3.703750,5.481294,2.435571,-9.944548],[-4.628232,6.502804,6.350226,-9.618127,-8.138606,1.823932],[3.008202,-0.439689,-9.758816,5.501890,-0.391822,-6.294957],[-9.669232,-1.347667,3.440853,8.017637,6.923955,6.523212],[9.202784,3.818356,-3.189086,-3.431577,-2.322024,5.169587],[8.711656,4.977379,-8.171372,-8.109367,7.452000,-7.451070],[-4.102210,1.192461,5.721067,-0.921515,-7.738362,-1.858789],[2.170204,2.245282,-6.276714,-1.750907,1.465439,9.762774],[6.882620,7.695357,-5.644850,5.283684,5.811321,0.922036],[7.700819,6.054983,9.189830,-1.128174,3.228174,-7.404277],[-2.909123,4.421372,1.771314,-4.859058,1.148534,9.788140],[8.612977,-6.498727,2.361080,5.528426,2.758608,8.266635],[2.732433,4.307597,3.908745,-7.807198,-6.790276,2.730284],[-6.027995,-2.616378,2.495732,4.291629,-3.015909,1.568073],[4.371964,-8.259518,-0.108117,-2.532609,-5.332709,-7.594607]], dtype = "float64")#candidate|8614|(110, 6)|const|float64
call_8613 = func_8080_call(relay.reshape(const_8614.astype('float64'), [11, 15, 4]))
call_8615 = func_8080_call(relay.reshape(const_8614.astype('float64'), [11, 15, 4]))
func_6613_call = mod.get_global_var('func_6613')
func_6616_call = mutated_mod.get_global_var('func_6616')
var_8619 = relay.var("var_8619", dtype = "uint32", shape = (250,))#candidate|8619|(250,)|var|uint32
var_8620 = relay.var("var_8620", dtype = "float64", shape = (1568,))#candidate|8620|(1568,)|var|float64
call_8618 = relay.TupleGetItem(func_6613_call(relay.reshape(var_8619.astype('uint32'), [250,]), relay.reshape(var_8620.astype('float64'), [1568,]), ), 3)
call_8621 = relay.TupleGetItem(func_6616_call(relay.reshape(var_8619.astype('uint32'), [250,]), relay.reshape(var_8620.astype('float64'), [1568,]), ), 3)
output = relay.Tuple([call_8580,call_8613,const_8614,call_8618,var_8619,var_8620,])
output2 = relay.Tuple([call_8581,call_8615,const_8614,call_8621,var_8619,var_8620,])
func_8640 = relay.Function([var_8619,var_8620,], output)
mod['func_8640'] = func_8640
mod = relay.transform.InferType()(mod)
mutated_mod['func_8640'] = func_8640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8640_call = mutated_mod.get_global_var('func_8640')
var_8642 = relay.var("var_8642", dtype = "uint32", shape = (250,))#candidate|8642|(250,)|var|uint32
var_8643 = relay.var("var_8643", dtype = "float64", shape = (1568,))#candidate|8643|(1568,)|var|float64
call_8641 = func_8640_call(var_8642,var_8643,)
output = call_8641
func_8644 = relay.Function([var_8642,var_8643,], output)
mutated_mod['func_8644'] = func_8644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_8677 = func_7264_call()
call_8678 = func_7264_call()
output = call_8677
output2 = call_8678
func_8710 = relay.Function([], output)
mod['func_8710'] = func_8710
mod = relay.transform.InferType()(mod)
mutated_mod['func_8710'] = func_8710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8710_call = mutated_mod.get_global_var('func_8710')
call_8711 = func_8710_call()
output = call_8711
func_8712 = relay.Function([], output)
mutated_mod['func_8712'] = func_8712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4885_call = mod.get_global_var('func_4885')
func_4886_call = mutated_mod.get_global_var('func_4886')
call_8744 = func_4885_call()
call_8745 = func_4885_call()
output = relay.Tuple([call_8744,])
output2 = relay.Tuple([call_8745,])
func_8764 = relay.Function([], output)
mod['func_8764'] = func_8764
mod = relay.transform.InferType()(mod)
mutated_mod['func_8764'] = func_8764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8764_call = mutated_mod.get_global_var('func_8764')
call_8765 = func_8764_call()
output = call_8765
func_8766 = relay.Function([], output)
mutated_mod['func_8766'] = func_8766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2509_call = mod.get_global_var('func_2509')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_8824 = relay.TupleGetItem(func_2509_call(), 0)
call_8825 = relay.TupleGetItem(func_2511_call(), 0)
func_2203_call = mod.get_global_var('func_2203')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_8842 = relay.TupleGetItem(func_2203_call(), 0)
call_8843 = relay.TupleGetItem(func_2205_call(), 0)
output = relay.Tuple([call_8824,call_8842,])
output2 = relay.Tuple([call_8825,call_8843,])
func_8845 = relay.Function([], output)
mod['func_8845'] = func_8845
mod = relay.transform.InferType()(mod)
output = func_8845()
func_8846 = relay.Function([], output)
mutated_mod['func_8846'] = func_8846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8924 = relay.var("var_8924", dtype = "uint64", shape = (15, 13, 13))#candidate|8924|(15, 13, 13)|var|uint64
var_8925 = relay.var("var_8925", dtype = "uint64", shape = (15, 13, 13))#candidate|8925|(15, 13, 13)|var|uint64
bop_8926 = relay.left_shift(var_8924.astype('uint64'), relay.reshape(var_8925.astype('uint64'), relay.shape_of(var_8924))) # shape=(15, 13, 13)
output = bop_8926
output2 = bop_8926
func_8932 = relay.Function([var_8924,var_8925,], output)
mod['func_8932'] = func_8932
mod = relay.transform.InferType()(mod)
mutated_mod['func_8932'] = func_8932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8932_call = mutated_mod.get_global_var('func_8932')
var_8934 = relay.var("var_8934", dtype = "uint64", shape = (15, 13, 13))#candidate|8934|(15, 13, 13)|var|uint64
var_8935 = relay.var("var_8935", dtype = "uint64", shape = (15, 13, 13))#candidate|8935|(15, 13, 13)|var|uint64
call_8933 = func_8932_call(var_8934,var_8935,)
output = call_8933
func_8936 = relay.Function([var_8934,var_8935,], output)
mutated_mod['func_8936'] = func_8936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1763_call = mod.get_global_var('func_1763')
func_1765_call = mutated_mod.get_global_var('func_1765')
call_8946 = relay.TupleGetItem(func_1763_call(), 2)
call_8947 = relay.TupleGetItem(func_1765_call(), 2)
output = relay.Tuple([call_8946,])
output2 = relay.Tuple([call_8947,])
func_8955 = relay.Function([], output)
mod['func_8955'] = func_8955
mod = relay.transform.InferType()(mod)
output = func_8955()
func_8956 = relay.Function([], output)
mutated_mod['func_8956'] = func_8956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
call_8987 = relay.TupleGetItem(func_847_call(), 1)
call_8988 = relay.TupleGetItem(func_849_call(), 1)
func_3608_call = mod.get_global_var('func_3608')
func_3613_call = mutated_mod.get_global_var('func_3613')
var_9001 = relay.var("var_9001", dtype = "float64", shape = (429,))#candidate|9001|(429,)|var|float64
var_9002 = relay.var("var_9002", dtype = "uint64", shape = (495,))#candidate|9002|(495,)|var|uint64
call_9000 = relay.TupleGetItem(func_3608_call(relay.reshape(var_9001.astype('float64'), [3, 13, 11]), relay.reshape(call_8987.astype('float64'), [1600,]), relay.reshape(var_9002.astype('uint64'), [495,]), ), 1)
call_9003 = relay.TupleGetItem(func_3613_call(relay.reshape(var_9001.astype('float64'), [3, 13, 11]), relay.reshape(call_8987.astype('float64'), [1600,]), relay.reshape(var_9002.astype('uint64'), [495,]), ), 1)
func_1465_call = mod.get_global_var('func_1465')
func_1467_call = mutated_mod.get_global_var('func_1467')
const_9011 = relay.const([[7.951365,-7.932225,9.146809,-0.275940,6.571180,-0.588207,-3.239915,2.324832,-9.537054,2.231838,8.429193,4.605822,6.060959,-1.125551,-4.730469],[-2.675578,6.120390,-4.601111,-6.131622,-2.620789,-4.902966,-6.672035,8.011496,-1.817928,-8.241212,2.718516,5.043432,-8.852144,-9.588998,-6.118864],[0.570359,-3.434955,8.504256,8.007620,5.214972,1.367099,-1.656109,-4.304218,-9.207696,-0.011661,-5.719975,-4.460714,-7.098068,3.502853,-2.690136],[0.697394,-4.157720,-8.686128,-8.096791,6.181927,3.606936,9.259401,2.048393,3.791423,8.449075,-5.414586,-1.872744,8.939157,0.109431,5.580094],[-0.722288,1.117544,-4.659009,6.822292,-6.569801,1.509449,3.824340,1.558427,-9.051681,-9.088678,-2.918689,-3.098691,-2.674578,6.047536,-9.467076],[4.017845,7.213152,3.801070,-0.819277,-2.804117,-5.828134,-4.723133,3.755554,-7.413467,-8.225631,6.563491,2.091210,2.216738,5.544046,-4.842827],[2.740551,-0.425551,-3.140410,9.887819,-3.860286,0.235056,2.473611,5.367591,-2.747597,-2.632991,-9.223512,2.481307,3.312270,3.891145,-3.955483],[-8.013598,8.498671,-5.721079,7.101426,-0.296881,-3.159008,-8.305006,7.880041,-1.431195,7.585928,7.025651,-7.681894,6.573230,5.253707,-6.242180],[-7.224523,-7.390886,4.161419,-6.790648,-4.407146,6.687577,-0.013252,-7.400342,7.368553,1.811932,4.678968,-2.342180,-9.290416,-4.941793,0.703942],[7.892709,4.646715,5.875136,-2.227561,7.773946,8.707803,9.789034,-2.506299,3.140061,-3.395762,-8.183601,6.229443,3.997882,6.452913,-0.772120],[-9.027845,-0.465855,2.924536,4.481348,4.219630,-6.331657,6.591504,6.623179,1.748153,7.840167,6.497748,6.799436,-1.328185,-8.514301,-9.238341],[-5.992267,-0.566023,3.065886,7.321260,-6.837972,8.391333,9.860275,-1.329061,1.746169,9.826534,-1.894400,-4.865000,-3.216820,-2.159579,-1.260936],[3.308606,-5.267187,-5.982347,8.320951,-5.943988,-1.397005,-2.935792,-8.872570,-9.798988,-8.768296,-4.431127,5.323621,-1.389001,4.668918,-5.896720],[-4.227726,1.460539,-3.053647,-0.630768,2.293726,7.676165,-7.033311,0.866972,-2.658830,-8.414843,8.875058,6.710293,-9.391410,-8.144753,7.226197],[4.235869,-2.448552,-7.150867,-3.616772,-8.398549,2.076274,-9.184842,7.856219,-8.229961,8.191091,-1.220342,2.902712,4.980782,-6.449064,2.660238],[0.150811,1.582372,4.754612,-0.747151,-7.090746,9.298003,-1.229813,8.366667,6.517151,6.226793,5.954923,-4.167047,-3.472148,-9.406924,9.185205],[-8.324452,-4.870539,5.395292,6.996748,-9.991624,-2.975025,2.211787,6.121344,7.100990,-6.118830,5.287255,-3.969667,-1.635959,-0.284849,0.890222],[-5.168434,-8.625211,9.136565,4.721960,2.378259,-7.481294,8.428268,-9.179193,2.887398,-8.297929,-4.256199,9.087437,1.156274,8.859694,-7.333902],[6.677260,-5.539872,7.546497,6.741648,-1.395040,-8.986944,5.291886,-4.207447,-3.293962,3.990612,3.066073,1.502261,-6.887559,-3.518498,-6.756401],[6.285730,-8.712072,1.268263,5.976769,-6.813294,7.448709,3.373921,-9.997989,-4.134952,5.461992,0.437281,9.783813,0.658905,8.650006,-5.120666],[-8.936709,-9.730991,6.968668,-6.142502,-7.907439,8.147264,-5.734299,-2.755932,-9.005540,9.972959,-4.395474,2.460704,1.482837,-9.891031,-5.076577],[-1.483253,-4.391505,7.193424,-9.927646,-9.589609,-8.283876,-1.595854,-7.201509,-5.159326,9.125892,-2.132195,-3.684218,-9.920964,-3.573837,6.804575],[2.403175,1.889003,-8.910984,1.596622,1.566878,9.090297,8.173043,-5.169386,0.911811,5.840240,-2.459240,-0.679047,6.285527,0.610977,5.619936],[-1.637837,-9.141769,-9.149931,3.970164,-1.537395,-9.270107,-2.248871,5.391407,3.086040,4.605362,-8.879002,6.794554,9.071369,1.218966,-0.359606],[8.087933,4.568974,2.976226,-7.509716,2.099731,8.650744,-8.991451,-0.082592,-7.139170,-5.723680,-7.368649,1.936629,-2.251297,-5.053929,7.764891],[-4.293624,3.508541,0.140200,-9.163125,0.413238,-1.980297,1.574612,8.918054,-8.471462,6.967066,4.158841,0.292912,6.703336,4.552742,6.922291],[1.079580,1.885462,2.049923,2.104790,-2.891578,-8.428785,2.142729,-5.867352,3.813985,-3.884695,6.082141,-3.893802,-5.681740,-5.231189,4.485326],[8.659212,-4.694912,9.578026,8.594747,7.869562,-1.563040,-8.437888,4.236494,-7.282322,5.590362,3.721601,-2.425751,-6.710169,-4.402339,2.412497],[-9.054312,-8.796811,7.584951,6.688011,-2.766705,9.487568,-8.806918,-7.144625,-9.861445,-2.672970,7.885702,-1.216663,4.425659,-0.846450,-2.836736],[6.537712,-8.589831,7.742085,5.431936,-1.035235,8.116681,-9.315610,3.477732,4.858423,8.879238,-0.056686,5.271378,8.760703,8.290472,-8.630114],[7.679416,-3.442232,9.418085,1.132630,-9.887719,-3.483873,8.573997,8.060806,1.606929,-2.858563,-2.485258,3.810863,-2.989691,-6.515362,4.135632],[4.290856,-9.390790,-3.287497,1.683964,0.284029,-6.174237,4.562035,-7.085026,-1.491542,7.620011,9.699956,0.804312,3.882055,3.383929,3.990818],[9.867028,8.398101,0.684253,3.228604,2.549531,-6.198349,5.854932,-8.983614,6.652192,5.683158,8.893544,-1.854524,-2.422778,-6.055855,-4.978458],[-1.566481,-4.691459,3.327403,1.297407,-8.122922,1.639873,-7.652096,-7.352419,7.681628,-3.323471,-3.694861,6.651624,-6.971578,5.858048,2.928572],[0.500171,1.059164,0.331351,4.661604,2.433709,1.047875,-9.090482,7.420381,-0.609946,-4.592768,-2.649661,0.939989,-6.363685,7.714002,-1.257635],[3.096150,-0.114131,-7.997424,4.593220,-1.618129,9.381877,-3.423230,-2.032678,7.004680,-7.617480,4.776364,-9.902831,-5.718052,-3.369908,-3.262823],[-4.335058,-3.231117,-0.684147,-7.833572,-4.896700,4.901402,-5.987191,-8.647203,9.446445,-8.427168,6.547526,-2.264450,-8.259051,-7.862373,-1.189827],[0.234062,-3.366371,5.031652,-1.231322,5.922253,5.869747,7.750443,-6.450882,-5.827300,9.784233,1.004284,-6.071179,-0.961666,-1.040168,4.088685],[-3.993504,9.754828,2.338193,9.591289,-3.845016,-8.066438,2.431957,7.995008,3.604615,-4.869749,-4.159490,-5.637906,9.228470,7.513006,5.257964],[6.452646,-3.461539,5.697386,5.214355,1.695461,5.709688,8.632810,5.039900,-4.266063,-5.785452,5.767484,-1.605646,6.878375,4.542117,8.510533],[-7.890945,-2.429274,3.351985,-3.455966,-8.468445,-2.476787,3.890832,2.196042,-2.169349,-9.378781,-1.668304,-4.518101,0.291900,-0.240945,-5.637512],[7.555473,-4.794379,5.497140,6.543595,6.216449,-5.186883,6.679684,1.745342,-4.324877,-1.885918,6.234565,7.755750,3.460337,9.672701,1.644127],[5.006625,-4.762184,-1.962016,4.661142,4.130331,4.335969,-3.947195,-2.586542,6.480205,-5.219283,7.172191,-9.742780,1.002008,0.041028,-3.481015],[-9.032321,8.940293,1.613592,4.051191,-3.843097,5.929668,-5.232835,-0.140495,-6.811130,8.378982,-9.086484,-1.367088,7.198601,-5.500323,-9.085137],[4.628187,9.979417,-3.706833,-7.516457,1.763886,-0.692552,8.690061,2.969598,6.803758,7.270077,-4.342257,0.955441,6.735730,-9.575442,3.054813],[-9.708974,0.942969,-7.972786,-3.134242,6.739247,4.938180,5.864196,-3.165333,-0.117414,-8.445524,3.593994,7.701702,7.394653,1.760818,8.532097],[-2.104349,-9.935380,2.937567,5.031128,2.986844,3.680060,6.290149,3.801267,4.807453,7.109712,-2.157343,-6.282487,-9.312217,-1.144195,6.732583],[-5.511181,1.624444,-8.834981,0.082696,-6.115844,-8.709938,1.880368,-8.238280,-3.961695,5.671241,9.552641,-9.185720,3.716017,0.044376,-4.207186],[2.672133,2.575303,5.437289,9.212964,6.984996,-0.333271,-0.499227,1.514649,-7.086329,-5.268955,-1.555049,8.680396,-7.175530,3.351005,-3.736957],[-7.187982,-7.895290,-8.604231,3.720381,9.210383,-5.589151,7.891189,8.788548,6.388213,-3.486097,1.113505,-5.380171,8.434914,-6.256385,-7.499352],[-6.803147,-7.887202,-6.852133,1.582743,5.125679,3.286167,-7.579569,-9.963280,3.255046,9.149960,5.082231,-6.804723,-0.381126,-7.404025,-0.198780],[9.507365,-8.906277,-4.498114,1.676424,-4.844812,-6.692369,-2.397760,-7.368962,-7.983169,-8.713082,7.326167,8.397967,4.490619,0.615521,-5.997005],[7.012298,9.467426,9.719911,-2.632318,4.508492,6.989514,-9.196809,-8.322184,-7.957914,5.756278,-0.498493,8.876648,-3.755831,2.959245,-8.296778],[-6.049651,-8.561853,7.317193,4.495059,-2.032298,4.537483,-6.489344,5.892932,-9.939344,2.591412,-2.441990,3.427207,7.079364,1.519019,7.300806],[-1.476942,0.465624,4.876330,9.448432,-4.040877,8.093634,3.256476,-4.611181,-2.118812,8.719914,-1.283650,-3.995866,8.851134,4.052502,-0.097318],[-4.168052,-8.431596,8.959430,9.463638,-2.326184,-2.663694,3.470291,0.558986,-5.775797,-6.239707,-4.173318,-9.787867,-7.801155,-6.284311,-8.244632],[0.263625,-0.624732,-3.846492,3.336771,-9.015807,5.196794,-7.914331,-1.347467,-7.060296,9.759189,-8.566521,8.553521,-7.957253,-0.021660,-1.827840],[-3.394941,-0.139023,2.432970,-7.198672,-3.945552,7.590932,-2.052964,-2.062851,6.104043,5.603540,9.443628,-3.619189,-8.665348,4.431982,-4.513876],[1.245780,2.958086,1.488544,-1.895535,8.111636,-8.010177,8.821010,-5.073038,9.850897,-0.583859,3.425059,2.975410,3.597853,-4.302712,-5.769507],[-3.368285,4.167207,1.711205,-1.881224,3.537085,-8.421465,-4.090053,-7.283592,7.146301,7.608979,-8.596926,-9.300567,-5.151000,-2.143238,-2.975636],[1.621690,-9.520814,-1.046822,9.575848,-2.562009,-3.847260,-2.272092,-4.614579,-1.196787,3.948865,5.581117,-4.204668,0.048772,2.775795,9.404586],[-7.428632,-6.034431,-3.167333,7.865431,-1.668729,-6.337144,-2.226800,9.000047,5.907006,0.038186,3.203778,-0.020170,-8.468751,2.868116,7.148618],[1.395937,3.754905,5.283449,-3.002139,-0.269806,-8.961755,6.513788,7.406991,4.916585,-5.972400,1.002459,4.601786,0.170847,1.042780,-0.111807],[-5.609707,5.460204,9.860033,3.495064,5.439095,-1.473018,-5.372648,-6.889197,7.078709,-8.087430,-6.421684,6.927238,4.570828,3.024205,8.361834],[-2.248078,6.991134,-0.087650,-8.330781,-3.921940,3.152868,3.491594,7.126061,6.127425,2.060901,-3.200245,-5.709228,0.625332,0.391756,-0.146465],[-4.028286,-5.693322,-4.563244,2.694840,-7.381326,-1.474217,-1.601955,7.366928,-1.115408,-5.745690,-1.460776,1.955511,7.026334,-5.475953,-1.840506],[7.133719,6.978415,-1.855474,-4.070850,-9.550158,-3.738874,-7.808940,-8.430183,-0.406167,9.506092,-5.697745,1.781035,-0.194500,9.158392,7.646354],[3.073436,-2.141583,-6.386430,6.884881,-6.139790,2.247759,-6.983845,-3.815758,2.290975,6.244060,3.827539,-7.627634,-1.557216,4.717682,-6.087493],[1.291254,-2.020482,-7.212947,-8.943637,9.749130,-2.853935,3.873556,5.784764,2.582964,-9.437365,1.838390,2.329012,0.130643,-8.080881,2.396408],[4.739955,-9.946715,-5.943488,8.229299,-3.323108,-5.785419,9.620480,-7.218476,6.433525,-0.404032,-7.559587,1.000584,6.170943,1.400412,-2.930195],[-5.767453,7.471173,7.722705,-0.013200,6.091793,7.925849,4.190053,4.496941,6.632870,4.636245,2.987522,6.296515,3.727640,3.787677,-3.457703],[2.222119,0.704702,-9.113051,4.004198,0.475108,6.264853,-6.218256,-0.335206,-0.032526,-5.087667,9.075130,-2.240568,-0.207146,5.848216,-5.141472],[0.718618,0.514597,5.276624,5.377376,-6.588363,5.059167,-5.165795,-1.994592,3.522515,-4.956243,-0.246314,9.373275,0.412767,3.624010,8.529577],[-8.345791,4.876766,-6.712369,1.577611,5.615422,-5.359612,-0.313787,-7.756435,1.478824,4.771040,0.563928,7.963367,-1.643230,8.358787,-9.033196],[-9.346351,4.928787,-2.942025,-6.617597,-5.174312,7.651531,-1.579596,8.210853,-1.734589,-3.912124,-3.133721,3.931804,5.888501,-5.592544,5.312808],[8.881123,-8.487741,-6.347289,-9.101518,-3.740081,-2.294029,-6.583477,9.771589,-5.487992,-5.913499,-9.398045,-7.584458,2.697426,1.107727,-2.778375],[-1.648680,-7.137464,3.750365,7.038581,4.740493,-1.611911,1.751179,-6.542417,-9.378043,-6.480736,-5.944518,4.075669,-8.021029,-7.866599,9.455273],[6.529314,-9.004516,-8.393548,-9.898164,-5.401878,3.803673,6.328842,3.175975,-7.019123,-0.053038,-9.967627,1.219211,-9.677638,-4.124331,9.924222],[9.053378,7.342243,5.742760,3.013021,6.244671,1.275536,-6.886568,8.056047,2.070166,6.106304,-6.831684,-4.230025,-6.895663,-4.753283,1.650191],[-1.958366,-6.150732,-2.489163,5.839129,9.027144,3.266258,3.430230,9.026861,0.414199,-9.694412,3.351639,1.833651,-2.922425,-8.792921,-5.769648],[3.580053,-6.480385,3.972719,5.577906,5.460823,6.408876,1.074631,-4.649088,-6.552206,3.392844,5.803023,5.337027,-6.429663,-8.617217,-0.247341],[-3.492677,4.198746,8.572310,-3.598587,3.257208,8.861547,-8.975342,9.212542,-7.828381,8.300364,9.263144,-3.468490,7.673776,-7.845123,5.717776],[-0.886372,-5.949126,-8.551851,-0.111641,-8.350665,-6.253713,5.032826,9.284159,-0.923907,-3.848961,6.391507,-0.196005,-3.102470,2.967935,6.024756],[-1.833265,-7.015949,2.872737,-7.698563,9.355501,7.348595,7.921760,8.799007,4.754945,-6.472344,0.215295,8.221950,4.918207,5.579961,8.892003],[3.880793,-0.606074,-9.812925,-9.652529,-2.900691,-1.338003,-8.793532,-9.950602,-5.233176,3.912583,8.945397,-8.938953,-3.354311,-5.017540,-0.929031],[-8.363244,7.595684,-3.652914,-2.720659,1.660962,-6.066174,-1.069287,8.987964,-6.724201,-4.642721,-7.007239,-2.908702,1.279339,-2.601154,-4.538368],[9.876163,-2.870678,-8.627577,-8.154711,0.054744,9.361719,6.809325,-9.627106,-0.706747,-4.861020,-8.786197,-4.682194,-1.936851,9.338582,9.533041],[0.321586,-5.033958,-2.576382,-1.014519,1.209792,-9.960743,-2.360589,-9.971660,-0.511222,7.228769,-2.867357,6.878188,5.900438,-3.287670,-5.714857],[-7.313568,-5.731269,2.284639,1.684474,8.585341,9.889736,5.870056,-7.780297,6.873062,-0.270666,4.663480,-9.870999,8.489589,-1.092251,7.089823],[-3.734711,2.100346,-6.328824,1.751244,-9.865359,7.474453,-5.192847,5.304545,-5.925555,9.807349,-4.668759,1.779706,6.367852,-9.860928,-3.858725],[-2.036739,8.737612,0.483022,-8.976536,-5.968504,-5.631892,-7.755483,-7.248467,6.884606,-2.190436,-2.010440,4.506760,-2.159286,-4.607400,1.466667]], dtype = "float64")#candidate|9011|(91, 15)|const|float64
call_9010 = func_1465_call(relay.reshape(const_9011.astype('float64'), [15, 7, 13]))
call_9012 = func_1465_call(relay.reshape(const_9011.astype('float64'), [15, 7, 13]))
var_9014 = relay.var("var_9014", dtype = "bool", shape = (10, 10, 16))#candidate|9014|(10, 10, 16)|var|bool
bop_9015 = relay.floor_mod(call_8987.astype('float64'), relay.reshape(var_9014.astype('float64'), relay.shape_of(call_8987))) # shape=(10, 10, 16)
bop_9018 = relay.floor_mod(call_8988.astype('float64'), relay.reshape(var_9014.astype('float64'), relay.shape_of(call_8988))) # shape=(10, 10, 16)
output = relay.Tuple([call_9000,var_9001,var_9002,call_9010,const_9011,bop_9015,])
output2 = relay.Tuple([call_9003,var_9001,var_9002,call_9012,const_9011,bop_9018,])
F = relay.Function([var_9001,var_9002,var_9014,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9001,var_9002,var_9014,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_169 = relay.var("var_169", dtype = "int64", shape = (2, 11, 16))#candidate|169|(2, 11, 16)|var|int64
var_170 = relay.var("var_170", dtype = "int64", shape = (2, 11, 16))#candidate|170|(2, 11, 16)|var|int64
bop_171 = relay.logical_xor(var_169.astype('int64'), relay.reshape(var_170.astype('int64'), relay.shape_of(var_169))) # shape=(2, 11, 16)
uop_188 = relay.acos(bop_171.astype('float32')) # shape=(2, 11, 16)
var_191 = relay.var("var_191", dtype = "int64", shape = (2, 11, 16))#candidate|191|(2, 11, 16)|var|int64
bop_192 = relay.less(var_169.astype('bool'), relay.reshape(var_191.astype('bool'), relay.shape_of(var_169))) # shape=(2, 11, 16)
bop_197 = relay.bitwise_or(uop_188.astype('int8'), relay.reshape(bop_192.astype('int8'), relay.shape_of(uop_188))) # shape=(2, 11, 16)
output = bop_197
output2 = bop_197
func_232 = relay.Function([var_169,var_170,var_191,], output)
mod['func_232'] = func_232
mod = relay.transform.InferType()(mod)
mutated_mod['func_232'] = func_232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_232_call = mutated_mod.get_global_var('func_232')
var_234 = relay.var("var_234", dtype = "int64", shape = (2, 11, 16))#candidate|234|(2, 11, 16)|var|int64
var_235 = relay.var("var_235", dtype = "int64", shape = (2, 11, 16))#candidate|235|(2, 11, 16)|var|int64
var_236 = relay.var("var_236", dtype = "int64", shape = (2, 11, 16))#candidate|236|(2, 11, 16)|var|int64
call_233 = func_232_call(var_234,var_235,var_236,)
output = call_233
func_237 = relay.Function([var_234,var_235,var_236,], output)
mutated_mod['func_237'] = func_237
mutated_mod = relay.transform.InferType()(mutated_mod)
const_313 = relay.const([[[-9,-1,3,9,1,3,-3,3,-9,4],[-9,2,-2,8,2,-1,-3,3,4,-7],[8,-10,8,6,-6,-5,7,4,8,7],[-10,-5,3,-10,-10,3,-9,-2,-8,4],[1,1,-1,-9,-1,-10,-7,3,-3,-8],[-9,4,3,5,-4,-7,10,-3,7,9],[8,-8,-6,-6,5,3,-6,4,-5,-3]],[[9,4,-10,-2,8,-4,3,-1,4,-8],[-3,4,10,-9,8,3,-1,-9,-5,7],[-2,-10,-4,4,2,10,-4,5,4,-8],[7,2,-2,1,9,1,-1,-8,5,7],[-3,3,1,1,1,10,5,-5,2,-2],[-6,-6,-5,-3,6,8,-7,7,8,-5],[-9,6,-8,1,-9,-3,-8,-1,3,5]]], dtype = "int32")#candidate|313|(2, 7, 10)|const|int32
var_314 = relay.var("var_314", dtype = "int32", shape = (2, 7, 10))#candidate|314|(2, 7, 10)|var|int32
bop_315 = relay.add(const_313.astype('int32'), relay.reshape(var_314.astype('int32'), relay.shape_of(const_313))) # shape=(2, 7, 10)
func_232_call = mod.get_global_var('func_232')
func_237_call = mutated_mod.get_global_var('func_237')
const_323 = relay.const([[7,-8,-6,1,10,4,7,-10,6,9,7,-8,-10,2,8,5,-9,6,8,7,-9,3,-6,-4,1,10,-9,-10,1,5,1,-5,-2,8,-10,-10,-5,6,-6,-6,6,-6,2,3,1,3,5,4,8,-7,-8,7,10,7,-4,2,8,-4,-5,6,-3,7,4,7,-5,10,1,-1,3,-6,2,6,5,10,8,-3,-4,1,4,-10,2,6,-9,4,-6,8,8,8,7,3,-6,8,-9,-8,7,-3,9,-4,-6,-2,-9,-2,8,10,2,1,-2,-9,-8,-5,6,5,7,8,10,-6,2,-7,10,8,-5,-9,9,-7,5,-1,-9,-8,10,8,6,10,-5,-10,6,-6,-8,7,3,2,5,-10,-4,9,-4,3,-4,-10,9,4,10,8,7,3,1,-9,-3,-1,7,10,-10,1,-3,4,1,-1,10,-8,5,8,-9,4,-3,-8,6,10],[-8,-3,4,-6,7,-7,-5,5,-6,-9,7,-6,8,-1,-1,-4,5,-3,5,3,5,3,5,-3,1,6,3,10,-10,-8,5,-2,-9,7,-4,-8,-2,-10,-8,-6,3,9,-7,-9,-2,-8,9,7,-6,-4,7,-1,2,6,2,-9,5,3,8,9,-1,7,10,9,-10,-6,4,8,9,-6,-5,8,-4,1,4,-2,-10,4,4,-6,6,-1,-9,8,2,-1,-2,4,9,-10,9,10,2,7,-9,8,5,8,10,-4,-2,9,3,10,1,6,1,-7,-10,-6,-7,2,8,8,6,2,6,-1,-5,10,10,-5,-10,1,9,6,-4,2,2,1,3,-7,-5,7,-9,5,2,10,6,-3,1,-5,-2,8,-6,-2,-2,-7,7,-8,-10,6,5,-6,-7,6,-10,4,7,-4,1,-1,4,2,1,-8,5,4,9,-10,1,-6,-8,-3,-2,-7]], dtype = "int64")#candidate|323|(2, 176)|const|int64
call_322 = func_232_call(relay.reshape(const_323.astype('int64'), [2, 11, 16]), relay.reshape(const_323.astype('int64'), [2, 11, 16]), relay.reshape(const_323.astype('int64'), [2, 11, 16]), )
call_324 = func_232_call(relay.reshape(const_323.astype('int64'), [2, 11, 16]), relay.reshape(const_323.astype('int64'), [2, 11, 16]), relay.reshape(const_323.astype('int64'), [2, 11, 16]), )
uop_336 = relay.tan(var_314.astype('float32')) # shape=(2, 7, 10)
func_232_call = mod.get_global_var('func_232')
func_237_call = mutated_mod.get_global_var('func_237')
call_350 = func_232_call(relay.reshape(call_322.astype('int64'), [2, 11, 16]), relay.reshape(call_322.astype('int64'), [2, 11, 16]), relay.reshape(const_323.astype('int64'), [2, 11, 16]), )
call_351 = func_232_call(relay.reshape(call_322.astype('int64'), [2, 11, 16]), relay.reshape(call_322.astype('int64'), [2, 11, 16]), relay.reshape(const_323.astype('int64'), [2, 11, 16]), )
output = relay.Tuple([bop_315,call_322,const_323,uop_336,call_350,])
output2 = relay.Tuple([bop_315,call_324,const_323,uop_336,call_351,])
func_353 = relay.Function([var_314,], output)
mod['func_353'] = func_353
mod = relay.transform.InferType()(mod)
var_354 = relay.var("var_354", dtype = "int32", shape = (2, 7, 10))#candidate|354|(2, 7, 10)|var|int32
output = func_353(var_354)
func_355 = relay.Function([var_354], output)
mutated_mod['func_355'] = func_355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_365 = relay.var("var_365", dtype = "float32", shape = (14, 2, 12))#candidate|365|(14, 2, 12)|var|float32
uop_366 = relay.sin(var_365.astype('float32')) # shape=(14, 2, 12)
output = relay.Tuple([uop_366,])
output2 = relay.Tuple([uop_366,])
func_370 = relay.Function([var_365,], output)
mod['func_370'] = func_370
mod = relay.transform.InferType()(mod)
mutated_mod['func_370'] = func_370
mutated_mod = relay.transform.InferType()(mutated_mod)
var_371 = relay.var("var_371", dtype = "float32", shape = (14, 2, 12))#candidate|371|(14, 2, 12)|var|float32
func_370_call = mutated_mod.get_global_var('func_370')
call_372 = func_370_call(var_371)
output = call_372
func_373 = relay.Function([var_371], output)
mutated_mod['func_373'] = func_373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_548 = relay.var("var_548", dtype = "float64", shape = ())#candidate|548|()|var|float64
var_549 = relay.var("var_549", dtype = "float64", shape = (12, 10, 8))#candidate|549|(12, 10, 8)|var|float64
bop_550 = relay.mod(var_548.astype('float64'), var_549.astype('float64')) # shape=(12, 10, 8)
output = relay.Tuple([bop_550,])
output2 = relay.Tuple([bop_550,])
func_554 = relay.Function([var_548,var_549,], output)
mod['func_554'] = func_554
mod = relay.transform.InferType()(mod)
var_555 = relay.var("var_555", dtype = "float64", shape = ())#candidate|555|()|var|float64
var_556 = relay.var("var_556", dtype = "float64", shape = (12, 10, 8))#candidate|556|(12, 10, 8)|var|float64
output = func_554(var_555,var_556,)
func_557 = relay.Function([var_555,var_556,], output)
mutated_mod['func_557'] = func_557
mutated_mod = relay.transform.InferType()(mutated_mod)
var_576 = relay.var("var_576", dtype = "uint32", shape = (2, 3, 8))#candidate|576|(2, 3, 8)|var|uint32
var_577 = relay.var("var_577", dtype = "uint32", shape = (2, 3, 8))#candidate|577|(2, 3, 8)|var|uint32
bop_578 = relay.subtract(var_576.astype('uint32'), relay.reshape(var_577.astype('uint32'), relay.shape_of(var_576))) # shape=(2, 3, 8)
output = relay.Tuple([bop_578,])
output2 = relay.Tuple([bop_578,])
func_581 = relay.Function([var_576,var_577,], output)
mod['func_581'] = func_581
mod = relay.transform.InferType()(mod)
var_582 = relay.var("var_582", dtype = "uint32", shape = (2, 3, 8))#candidate|582|(2, 3, 8)|var|uint32
var_583 = relay.var("var_583", dtype = "uint32", shape = (2, 3, 8))#candidate|583|(2, 3, 8)|var|uint32
output = func_581(var_582,var_583,)
func_584 = relay.Function([var_582,var_583,], output)
mutated_mod['func_584'] = func_584
mutated_mod = relay.transform.InferType()(mutated_mod)
const_614 = relay.const(9, dtype = "int16")#candidate|614|()|const|int16
var_615 = relay.var("var_615", dtype = "int16", shape = (11, 4, 4))#candidate|615|(11, 4, 4)|var|int16
bop_616 = relay.maximum(const_614.astype('int16'), var_615.astype('int16')) # shape=(11, 4, 4)
func_353_call = mod.get_global_var('func_353')
func_355_call = mutated_mod.get_global_var('func_355')
var_624 = relay.var("var_624", dtype = "int32", shape = (140,))#candidate|624|(140,)|var|int32
call_623 = relay.TupleGetItem(func_353_call(relay.reshape(var_624.astype('int32'), [2, 7, 10])), 2)
call_625 = relay.TupleGetItem(func_355_call(relay.reshape(var_624.astype('int32'), [2, 7, 10])), 2)
output = relay.Tuple([bop_616,call_623,var_624,])
output2 = relay.Tuple([bop_616,call_625,var_624,])
func_630 = relay.Function([var_615,var_624,], output)
mod['func_630'] = func_630
mod = relay.transform.InferType()(mod)
var_631 = relay.var("var_631", dtype = "int16", shape = (11, 4, 4))#candidate|631|(11, 4, 4)|var|int16
var_632 = relay.var("var_632", dtype = "int32", shape = (140,))#candidate|632|(140,)|var|int32
output = func_630(var_631,var_632,)
func_633 = relay.Function([var_631,var_632,], output)
mutated_mod['func_633'] = func_633
mutated_mod = relay.transform.InferType()(mutated_mod)
var_685 = relay.var("var_685", dtype = "float32", shape = (1, 13, 9))#candidate|685|(1, 13, 9)|var|float32
uop_686 = relay.acos(var_685.astype('float32')) # shape=(1, 13, 9)
func_232_call = mod.get_global_var('func_232')
func_237_call = mutated_mod.get_global_var('func_237')
const_697 = relay.const([7,5,3,6,-1,5,-6,6,7,10,7,-3,-8,5,1,7,9,1,-4,-10,-10,10,9,1,-3,3,3,-10,-7,2,6,9,-3,-7,-7,-1,-1,10,-6,-3,-4,-6,-4,-7,-1,10,8,5,10,-10,7,2,10,-8,-7,-5,9,7,10,-4,-2,-10,-4,4,7,10,5,3,-6,-4,-2,-3,2,4,-3,-3,-3,-9,-10,-2,9,2,-4,1,-6,2,-6,8,-2,-10,-1,1,-5,-2,3,1,-3,-6,-8,6,4,3,-10,9,-1,10,1,-5,-4,-3,-10,1,-9,-2,-5,-4,-6,-10,6,-10,-8,1,4,10,-3,-4,-1,-8,-1,-9,9,-7,10,3,7,-5,6,8,1,7,-3,9,-8,-4,9,7,-9,-5,4,-5,3,-7,5,10,-3,2,-10,8,9,-6,7,8,-10,5,1,4,-1,3,-6,3,-2,7,-9,-7,-7,9,-6,10,-8,-9,-6,-2,-4,4,-10,1,-4,-3,3,3,2,-6,7,-6,2,5,-6,6,4,2,-6,5,1,-3,7,-6,8,-9,1,-1,1,-2,2,9,-5,1,5,-1,3,3,-10,1,5,2,-7,9,-8,5,9,8,-4,-5,-5,7,10,10,-1,7,-4,9,1,-9,9,1,-9,-1,-5,4,-5,-10,9,7,2,5,5,5,-4,-7,8,2,-6,-2,1,3,-5,3,2,5,7,7,-5,-10,-9,-3,-6,6,-10,-6,-2,-9,1,-2,-5,6,6,4,10,-2,10,5,2,9,-8,3,4,-7,-7,10,6,1,-1,-7,6,9,-5,-1,6,9,5,-3,7,3,-1,-3,1,10,7,-5,7,1,8,10,-4,-7,-4,-5,4,-4,-1,3,1,3,3,2,-2,3,-7,-4,-4,7,3,9,-9,2,10,-3,-1,8,6,3,5,8], dtype = "int64")#candidate|697|(352,)|const|int64
call_696 = func_232_call(relay.reshape(const_697.astype('int64'), [2, 11, 16]), relay.reshape(const_697.astype('int64'), [2, 11, 16]), relay.reshape(const_697.astype('int64'), [2, 11, 16]), )
call_698 = func_232_call(relay.reshape(const_697.astype('int64'), [2, 11, 16]), relay.reshape(const_697.astype('int64'), [2, 11, 16]), relay.reshape(const_697.astype('int64'), [2, 11, 16]), )
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
const_707 = relay.const(9.153694, dtype = "float64")#candidate|707|()|const|float64
const_708 = relay.const([[2.770410,7.908597],[8.477617,-1.182952],[3.171745,-7.579823],[-5.015750,-5.351496],[5.773521,3.082437],[7.209330,-2.459516],[8.779028,-9.718279],[-3.785697,-0.151732],[-5.759276,-1.015166],[-2.549506,-9.567221],[-6.567933,9.697573],[1.644108,5.235310],[-7.037371,0.487281],[4.948691,4.039119],[5.157130,-2.994782],[-6.493851,5.847233],[6.500228,-1.493035],[-3.827252,8.333361],[-0.221767,7.755026],[-1.581088,-0.707701],[-6.264640,4.969700],[5.880650,-1.936886],[-0.047568,8.028717],[8.235810,0.884294],[-1.194871,-5.861996],[0.676795,-3.053408],[-5.951495,8.030169],[-2.036473,-1.427761],[2.387849,6.049086],[-4.157312,5.346070],[-6.327284,1.912718],[8.106387,-2.186822],[9.092619,-5.681812],[9.845391,-0.131864],[4.439559,-2.410948],[9.901121,-1.560456],[-6.556323,5.992923],[3.725156,-8.341527],[1.259817,3.929505],[-2.960776,6.904648],[7.995674,-0.104015],[-4.236943,-4.050221],[-3.628859,9.394401],[5.314042,-9.622368],[9.911780,-3.348545],[-9.819751,0.089671],[2.177547,-8.730387],[-1.840881,1.272119],[-4.659238,-3.625681],[-0.804880,-9.923542],[-3.307196,-5.602104],[9.006916,7.909982],[-7.547559,5.784122],[-1.291938,3.951075],[5.279452,-0.039627],[0.227338,2.452513],[6.062870,-7.843138],[9.941016,8.786189],[-5.562706,0.858755],[-4.189233,8.371394],[6.858097,-0.756357],[4.202453,2.204668],[9.563624,-7.603066],[5.016526,-1.951056],[-8.753652,-1.999125],[1.649206,8.371976],[4.752354,7.805625],[6.461608,-1.121998],[2.665059,6.321319],[-2.829200,-6.087336],[-2.610866,-8.817232],[-9.230881,-0.292117],[5.188624,-0.321053],[-9.762759,1.973081],[0.853399,-7.739583],[0.931021,0.508357],[7.158883,3.178112],[7.734548,0.291175],[-4.600945,3.666311],[5.228444,2.586911],[-8.448658,3.538678],[5.459146,-5.287805],[-4.627329,-8.604016],[3.047516,-8.327053],[-6.964479,1.606894],[2.673346,1.274507],[-2.567425,1.965519],[-8.303547,6.867204],[-1.861037,-9.060157],[4.226025,-0.627741],[4.254050,9.370585],[-0.905012,0.200046],[5.832542,-7.702973],[5.196917,-8.928947],[-0.167818,4.804962],[0.833212,7.418285],[-4.321547,8.932413],[-8.883136,7.339088],[-9.216307,4.525422],[-3.531330,4.373378],[9.139731,0.112695],[6.406705,-8.177766],[5.498045,9.099720],[-4.498715,-1.260543],[-5.658016,-0.986496],[-9.611693,-1.312551],[-7.250225,6.946272],[-5.520076,-9.784323],[9.349957,-8.538953],[-1.370691,-4.706028],[6.862728,-1.770073],[6.677192,-0.675333],[-8.024135,-1.857231],[-8.158628,-1.123075],[-3.498654,1.845583],[-2.842150,-5.637409],[0.207828,6.807886],[-2.887329,0.860645],[6.083059,6.152168],[3.869071,-5.403408],[6.435076,-9.003153],[3.448492,-2.829033],[-5.237086,-7.604866],[-6.227076,-5.584724],[6.800199,4.658116],[-5.786695,6.734052],[-6.048164,-6.349514],[-3.879566,0.485878],[1.292436,5.740324],[-4.338372,2.463306],[-7.180766,-4.384098],[-7.654063,-7.710048],[-6.186128,6.524055],[7.372905,-8.740330],[-5.102361,6.154196],[9.503656,-4.802215],[-6.541541,6.831731],[9.398289,4.710225],[-0.941941,-9.589162],[3.877567,-3.276169],[-9.272360,-6.217686],[2.847671,3.075376],[3.996965,-3.108646],[-9.375189,4.741242],[3.015030,1.147700],[9.653364,-6.228236],[-7.162034,5.490082],[9.734937,3.767582],[3.954704,8.962126],[-6.951456,-7.992370],[8.363775,-0.533471],[7.885021,-1.158120],[-4.163317,-8.935229],[6.133425,2.922079],[0.272424,9.363821],[9.872517,9.528816],[-0.389648,7.897355],[8.202912,-3.982521],[-5.514916,-5.027328],[-4.250177,-4.820639],[6.426633,1.652806],[8.901440,-4.616129],[8.533461,-8.060256],[7.004018,8.654477],[-8.538940,-2.612112],[0.517728,3.027189],[-3.218814,9.450435],[-6.723209,9.805800],[-2.253400,-6.115266],[-6.992136,1.095478],[-5.619847,-8.123173],[8.311884,0.706964],[-1.759580,5.919629],[-9.221587,4.620728],[1.873228,-5.442374],[2.560101,4.044936],[-1.811803,8.355861],[-8.631129,-3.702956],[-9.353560,-0.586916],[-0.668682,-1.830688],[-9.635415,-0.976287],[-4.680071,1.288214],[6.466803,0.172042],[2.000433,-8.357672],[8.753773,-2.259751],[-9.214004,-4.674833],[7.968364,-0.767816],[4.816043,-8.830301],[9.831517,-5.216974],[2.800078,1.270031],[7.705488,3.830603],[7.685078,-2.554755],[6.449932,-6.010850],[6.649589,5.027377],[-4.014858,1.584093],[-6.789997,9.991323],[-6.428567,9.439614],[7.296932,-3.311665],[6.095645,4.623084],[-9.505778,2.472221],[7.354352,4.091999],[6.647895,5.567092],[8.223212,2.516513],[0.763096,7.221863],[-6.442892,8.761281],[0.707495,7.252196],[6.987606,9.557547],[-2.987275,3.566865],[-5.529412,0.537881],[1.607150,9.996405],[9.772349,-2.896276],[7.856093,-3.096086],[-9.836955,5.358413],[-3.299771,6.885116],[-6.018115,7.775594],[4.343821,-3.095012],[7.706126,4.014386],[-5.908449,9.214249],[7.829776,-3.564838],[1.287351,0.559512],[-2.433134,5.565158],[8.345115,-9.767117],[2.663600,-2.696219],[1.242284,9.356002],[-6.657638,6.662076],[3.580923,-9.386050],[3.985421,-6.890671],[-1.602515,-9.584679],[-9.611122,2.634951],[-7.464866,1.414031],[2.436234,1.834216],[-7.728901,3.856532],[1.967149,-3.622338],[-8.986007,-3.838764],[4.169108,-2.685385],[-6.901433,7.520848],[8.997095,-9.623238],[-5.721189,1.146683],[2.233094,-2.918901],[9.683021,9.744764],[3.007481,-3.351631],[-8.869599,6.302515],[6.832261,9.968899],[-4.241481,-2.244468],[7.340817,-2.953876],[8.018585,7.171110],[-9.864326,-7.183395],[-2.041234,-5.230853],[8.841514,8.051941],[7.368066,-8.197624],[-5.149562,-7.383258],[-9.780596,-8.346474],[4.534075,8.482513],[5.581236,-4.816336],[1.112818,0.612922],[-2.743264,1.087723],[-0.184281,1.475089],[4.251122,-9.656547],[-9.060820,-5.712254],[-9.105442,-3.070454],[3.711460,-6.147290],[4.531438,-8.938267],[0.057504,-5.769081],[-1.369881,-9.560095],[-5.952473,-1.404498],[8.551801,3.494633],[-9.251484,-4.977642],[0.569862,-7.727525],[-3.249813,9.953245],[0.580060,-7.779129],[7.685266,-3.392020],[-7.609891,1.310601],[9.773790,-9.027428],[-4.996545,-6.078343],[-1.850097,7.457381],[0.382024,-1.147639],[-7.082354,5.361572],[-3.529100,4.478602],[-7.465127,5.717420],[-9.051551,6.777452],[-6.037027,-3.062205],[-9.435058,6.089980],[8.101903,-4.645325],[0.150028,-5.090910],[-9.696341,8.853235],[-0.382101,-7.620211],[4.124500,2.872509],[-0.206943,9.396423],[4.103629,-4.166795],[-8.391869,-5.898244],[-2.869590,-7.519193],[8.137765,-4.360530],[8.606038,-7.612016],[-3.236796,-6.221460],[-6.707812,3.380305],[6.559761,-6.283422],[-0.738765,-4.230600],[-8.395005,-8.065716],[5.138313,-6.342261],[0.799245,-5.569252],[5.898099,-1.409931],[0.071889,4.761833],[6.755027,2.857599],[3.760207,2.226548],[-3.602402,-8.177176],[-9.978433,0.373768],[3.233842,-9.630892],[-4.329999,8.392011],[-3.007992,6.479037],[8.628236,0.316681],[8.955289,3.707052],[-3.341523,-4.524713],[-7.024640,-0.912333],[9.347356,-1.723152],[1.347097,-3.957060],[2.857598,0.527111],[4.977372,2.145778],[7.194554,2.270604],[6.681775,7.163814],[7.158578,-4.612491],[-5.503446,-6.145790],[5.420004,3.229674],[-6.482934,-3.039945],[2.181666,8.672308],[0.320323,8.832399],[8.955364,0.407493],[4.954649,1.965880],[6.610826,-7.081365],[-2.252185,5.528875],[3.451116,-8.543961],[-1.815677,7.977348],[7.955959,0.039500],[-7.184251,1.335990],[9.039912,-4.655283],[-0.170703,-6.376226],[-7.138182,8.437040],[3.395031,-6.169038],[0.757688,-8.005059],[7.951530,-0.742120],[-6.966584,2.759757],[-3.526085,2.577754],[-8.549547,1.372680],[3.176103,-6.627678],[-3.988089,-7.898491],[-5.714035,9.296425],[0.408638,-6.604735],[2.960008,8.708141],[-0.778693,-9.776116],[-2.680851,-5.539326],[-3.590567,1.943219],[2.183495,9.793409],[3.320844,-2.023802],[-2.269290,-7.414925],[0.014040,-9.524991],[2.518761,4.048319],[6.280322,-9.036267],[8.139691,-6.250350],[-7.186748,3.600265],[1.687853,-3.392873],[-7.708840,-2.057010],[-6.616232,-5.149075],[1.383742,-5.054617],[6.328108,-6.347980],[-3.694520,-5.400947],[-3.763772,8.488042],[-7.575431,-2.811275],[2.938488,-9.830929],[4.439458,-2.556245],[6.847514,-0.254063],[8.767337,7.131419],[-2.428038,6.731786],[8.427184,-8.374690],[-3.417475,-9.313308],[-9.189050,-7.141991],[4.682015,8.122299],[-3.894121,-8.773996],[-6.961779,-0.632588],[-1.649794,-3.490269],[-5.395191,7.209876],[6.357992,0.417025],[9.191064,-9.439325],[-9.186208,8.534195],[-6.374109,9.943901],[-7.709143,-0.101554],[-7.770682,-2.144982],[7.080507,4.611605],[2.959393,0.987480],[-1.331094,-2.803832],[-6.083938,7.380257],[-3.176796,5.535806],[3.477849,5.494911],[-5.461477,-0.449017],[-5.695648,0.474357],[-4.500702,2.074955],[2.815677,-5.870494],[2.322110,2.865036],[-9.478774,1.058592],[4.934381,9.255406],[9.821000,-1.968389],[-5.763644,-3.198673],[-6.529996,-5.259346],[-5.586082,-7.016362],[-0.756029,7.230054],[0.768691,-8.201696],[4.786496,-9.608589],[-4.937074,6.590959],[-0.209027,5.746939],[-5.931923,-2.430326],[-5.327444,5.292856],[-1.779488,-8.087355],[1.656951,2.066754],[7.516277,-9.534958],[5.757862,6.576184],[-7.656706,2.313656],[4.235802,9.020734],[-6.117783,-5.681338],[1.014876,8.791341],[9.097015,-1.559203],[6.039173,0.849501],[2.733561,5.719879],[4.984717,-2.336298],[0.410298,-1.159838],[4.161551,-5.415386],[2.653145,-2.267070],[6.478519,9.691397],[4.972015,8.794162],[7.030154,6.466916],[-2.686261,0.968167],[-0.567291,5.924579],[2.471520,-8.479715],[6.380777,-1.410163],[8.425391,8.020837],[-8.742398,6.437975],[2.192389,-1.212828],[8.614924,9.692358],[-0.970476,5.999882],[2.054647,-8.572821],[5.124309,4.065175],[9.983123,1.833812],[-3.678337,1.358340],[7.312153,-5.836712],[4.665302,3.948585],[6.167986,-9.756419],[5.621208,-8.087519],[-0.788419,8.946823],[1.869668,0.932037],[-8.495072,0.533641],[1.885044,3.829323],[1.867537,3.565777],[-9.893326,8.683071],[-2.085472,0.020913],[-3.211356,-0.844050],[-9.258019,-5.350403],[-4.498872,1.384649],[-0.836351,1.866014],[7.120650,6.511307],[-1.029335,-8.484546],[5.407576,-4.626203],[8.622795,-6.309885],[9.670783,1.073426],[-2.722683,3.454354],[4.311189,-3.594212],[6.509893,9.215593],[-4.461015,4.456898],[-9.766924,-5.527490],[-9.216838,5.563467],[-8.590139,6.247433],[-1.580999,-9.678447],[-0.261360,6.517944],[-3.029814,2.579964],[7.951284,-6.163854],[3.739024,-7.156649],[9.126372,-3.681032],[-5.900807,-2.146549],[3.337047,-1.352470],[-3.483734,-7.460205],[9.599969,-4.445564],[7.448841,3.389412],[-3.244677,4.157723],[-8.409070,2.175400]], dtype = "float64")#candidate|708|(480, 2)|const|float64
call_706 = relay.TupleGetItem(func_554_call(relay.reshape(const_707.astype('float64'), []), relay.reshape(const_708.astype('float64'), [12, 10, 8]), ), 0)
call_709 = relay.TupleGetItem(func_557_call(relay.reshape(const_707.astype('float64'), []), relay.reshape(const_708.astype('float64'), [12, 10, 8]), ), 0)
bop_710 = relay.not_equal(const_708.astype('bool'), relay.reshape(call_706.astype('bool'), relay.shape_of(const_708))) # shape=(480, 2)
bop_713 = relay.not_equal(const_708.astype('bool'), relay.reshape(call_709.astype('bool'), relay.shape_of(const_708))) # shape=(480, 2)
uop_719 = relay.tan(uop_686.astype('float32')) # shape=(1, 13, 9)
bop_723 = relay.equal(uop_719.astype('bool'), const_707.astype('bool')) # shape=(1, 13, 9)
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
call_726 = relay.TupleGetItem(func_554_call(relay.reshape(const_707.astype('float64'), []), relay.reshape(call_706.astype('float64'), [12, 10, 8]), ), 0)
call_727 = relay.TupleGetItem(func_557_call(relay.reshape(const_707.astype('float64'), []), relay.reshape(call_706.astype('float64'), [12, 10, 8]), ), 0)
output = relay.Tuple([call_696,const_697,bop_710,bop_723,call_726,])
output2 = relay.Tuple([call_698,const_697,bop_713,bop_723,call_727,])
func_737 = relay.Function([var_685,], output)
mod['func_737'] = func_737
mod = relay.transform.InferType()(mod)
mutated_mod['func_737'] = func_737
mutated_mod = relay.transform.InferType()(mutated_mod)
var_738 = relay.var("var_738", dtype = "float32", shape = (1, 13, 9))#candidate|738|(1, 13, 9)|var|float32
func_737_call = mutated_mod.get_global_var('func_737')
call_739 = func_737_call(var_738)
output = call_739
func_740 = relay.Function([var_738], output)
mutated_mod['func_740'] = func_740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_862 = relay.var("var_862", dtype = "bool", shape = (2, 2, 6))#candidate|862|(2, 2, 6)|var|bool
var_863 = relay.var("var_863", dtype = "bool", shape = (2, 2, 6))#candidate|863|(2, 2, 6)|var|bool
bop_864 = relay.logical_or(var_862.astype('bool'), relay.reshape(var_863.astype('bool'), relay.shape_of(var_862))) # shape=(2, 2, 6)
var_873 = relay.var("var_873", dtype = "bool", shape = (2, 2, 6))#candidate|873|(2, 2, 6)|var|bool
bop_874 = relay.add(var_862.astype('float64'), relay.reshape(var_873.astype('float64'), relay.shape_of(var_862))) # shape=(2, 2, 6)
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
var_878 = relay.var("var_878", dtype = "float64", shape = ())#candidate|878|()|var|float64
var_879 = relay.var("var_879", dtype = "float64", shape = (960,))#candidate|879|(960,)|var|float64
call_877 = relay.TupleGetItem(func_554_call(relay.reshape(var_878.astype('float64'), []), relay.reshape(var_879.astype('float64'), [12, 10, 8]), ), 0)
call_880 = relay.TupleGetItem(func_557_call(relay.reshape(var_878.astype('float64'), []), relay.reshape(var_879.astype('float64'), [12, 10, 8]), ), 0)
uop_900 = relay.asinh(var_863.astype('float32')) # shape=(2, 2, 6)
uop_903 = relay.acos(uop_900.astype('float64')) # shape=(2, 2, 6)
output = relay.Tuple([bop_864,bop_874,call_877,var_878,var_879,uop_903,])
output2 = relay.Tuple([bop_864,bop_874,call_880,var_878,var_879,uop_903,])
func_907 = relay.Function([var_862,var_863,var_873,var_878,var_879,], output)
mod['func_907'] = func_907
mod = relay.transform.InferType()(mod)
mutated_mod['func_907'] = func_907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_907_call = mutated_mod.get_global_var('func_907')
var_909 = relay.var("var_909", dtype = "bool", shape = (2, 2, 6))#candidate|909|(2, 2, 6)|var|bool
var_910 = relay.var("var_910", dtype = "bool", shape = (2, 2, 6))#candidate|910|(2, 2, 6)|var|bool
var_911 = relay.var("var_911", dtype = "bool", shape = (2, 2, 6))#candidate|911|(2, 2, 6)|var|bool
var_912 = relay.var("var_912", dtype = "float64", shape = ())#candidate|912|()|var|float64
var_913 = relay.var("var_913", dtype = "float64", shape = (960,))#candidate|913|(960,)|var|float64
call_908 = func_907_call(var_909,var_910,var_911,var_912,var_913,)
output = call_908
func_914 = relay.Function([var_909,var_910,var_911,var_912,var_913,], output)
mutated_mod['func_914'] = func_914
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1460 = relay.const([[[1.001993,1.360724,3.456346,6.539687,4.618433,7.430260,6.264428,5.611658,5.192298,3.640403,5.486230,-4.008846,0.342260],[4.746554,-1.675571,2.185669,-5.134679,1.625939,-9.539932,-9.606269,9.804616,-9.100869,-1.068492,-6.887093,3.391863,-8.165783],[0.041256,2.437939,-2.581119,9.972886,3.084291,-6.682721,-8.386962,1.334425,5.565493,-8.221082,1.091733,9.203907,-3.698710],[9.868897,-1.060927,-1.484425,-5.911370,-1.499340,2.671347,8.536159,8.561956,-7.901167,3.355441,-8.432649,3.613882,-0.545856],[-4.296797,-2.893327,1.334831,-3.924219,-8.414294,6.654527,-2.802866,8.489361,8.080101,-0.376133,6.535842,-2.102665,-3.504391]],[[5.124822,-0.742992,-4.825974,0.304004,6.475876,-3.806968,-2.407596,3.905510,3.447388,-7.862510,3.850759,-0.933521,-5.305204],[-5.036184,-7.835424,9.569274,2.880117,8.149380,-9.532426,-4.851870,8.338166,-2.450066,3.060872,0.518288,7.280490,-7.878757],[-3.807833,3.461247,-2.423804,0.801147,-6.213668,-8.903662,-1.341046,-6.929646,-6.143919,1.697670,4.921780,-9.853310,5.268521],[-0.452229,0.727393,5.625346,4.396239,-7.238613,-9.561434,-2.528685,-9.996700,-4.740049,0.157114,-2.417054,-0.790097,3.479278],[0.269140,-7.746161,-0.051896,7.264882,4.630604,1.155482,1.011510,-2.179296,0.733472,8.927992,1.428811,1.017836,-1.448354]],[[7.797161,0.540190,-5.887535,-0.685696,7.590753,7.003458,-9.298965,5.590269,1.778474,0.904054,-5.596149,1.283745,-4.130185],[-9.079194,5.764344,6.775293,1.251040,8.182775,5.944024,-6.521555,-4.029707,-9.954967,1.555377,-2.863740,-5.246936,-8.272314],[5.084064,-3.135621,4.123967,9.318418,0.326724,3.429805,8.563329,4.992904,-6.830448,3.069189,5.302748,4.140893,0.349357],[-1.719501,4.218989,-4.154057,-3.155177,-8.007061,5.963790,-9.225263,9.799439,8.398405,-2.024344,1.400646,6.527741,-9.872730],[-8.152336,5.152479,6.636285,-6.921366,-5.424414,7.678780,9.874035,-9.051535,1.010194,-4.466658,-7.968744,8.852388,-3.264041]],[[4.560225,1.148827,-2.304186,8.283359,4.832281,9.512709,9.326308,2.568211,-6.831045,9.322150,4.709156,0.747665,9.335040],[-1.910772,8.539423,8.637692,-0.903626,-0.049332,6.827286,-2.101963,-5.707816,-2.578983,0.481933,5.385643,-5.945270,8.846649],[4.399535,0.555218,-4.484202,-3.732751,-3.075456,4.137626,-0.635384,-5.552676,1.753008,4.839030,-9.396087,-4.042377,3.838443],[-0.911784,-1.140099,5.043868,-3.119714,-9.163855,-2.883324,-3.892316,-2.678298,4.761649,7.600586,-1.644587,-7.684288,4.736781],[7.631424,9.936356,0.994298,2.683301,5.569511,5.192649,7.258480,-5.288358,-8.062989,0.246173,-2.464488,-8.889174,-7.132444]],[[2.767291,-9.841562,4.844904,-1.336057,-0.194404,-3.077696,9.519063,-4.054197,-7.701240,-1.786082,-8.547263,0.683207,6.857844],[-7.408485,-5.955839,8.642737,-7.621023,-5.607935,3.771659,-0.951898,-1.421239,5.304477,-5.387844,-3.052365,-8.343527,2.134683],[-1.400727,-3.067007,9.710250,2.900052,8.223112,8.805685,-7.035346,0.245855,-9.913525,7.739048,2.764468,-5.329056,-7.378245],[-9.303194,8.319181,3.208348,-6.321431,4.146226,2.617542,9.618324,0.313327,-2.903643,-4.185810,-7.136494,8.560132,5.677249],[-7.543003,-4.210018,5.784326,4.693547,-2.680670,-7.019512,-8.387469,-8.311861,-4.842124,-5.223577,-7.416645,5.346021,5.325829]],[[8.365256,6.551269,1.414241,-5.790043,-9.428329,-9.348047,-0.500155,3.534302,5.703098,7.843049,6.087484,-0.155992,3.449219],[-8.141754,4.421749,-6.807831,-0.868648,-4.899940,-0.503733,6.541953,-5.516908,-4.649655,-8.675307,2.822814,-8.390436,-8.913564],[-4.356859,3.689736,3.128485,-8.799782,1.273850,-6.215965,-0.441492,4.684044,0.155781,3.303964,-2.888527,8.096754,5.176378],[5.055609,1.094977,3.324894,-8.248139,4.732343,-5.732471,-6.215280,5.105650,8.889610,0.677307,-6.671259,6.400234,-3.014667],[0.217273,3.550028,-8.487894,-9.393158,-5.730396,4.515151,6.806734,-9.957368,-3.970910,8.401163,5.528198,1.559672,-2.297848]],[[-8.900375,-9.983115,8.767888,-2.201843,-6.170515,5.966674,-2.672745,6.494720,-3.662487,-4.203862,-0.297991,-6.570232,-4.042174],[4.406149,-5.496376,7.704309,4.755202,-1.086991,-3.311352,0.972157,8.536760,6.871113,-3.048662,-2.191658,5.248609,-8.170571],[7.892061,-6.412123,-3.110827,-1.597737,2.789509,7.137188,0.463994,5.293307,-7.746882,-4.569137,-3.463860,6.188789,-6.870776],[4.869332,5.331394,-1.716592,-1.178420,-2.693732,-4.403466,-3.240156,0.469077,-7.764518,1.513710,-1.948397,4.695756,0.030970],[-1.700657,-3.680487,-5.427367,2.945289,0.848863,4.630776,-2.687677,8.585042,-1.878293,-1.448853,5.557880,-6.321785,-9.359220]],[[2.258819,0.083947,1.695190,2.914666,8.415715,-8.302764,2.073607,-2.725946,5.477569,2.957597,1.229529,-2.543628,7.568258],[-3.570832,-8.139702,-2.785343,-7.788360,5.795863,8.919692,-8.116351,-7.463263,4.303454,-8.143339,-9.935359,-8.454118,-7.060456],[6.693408,3.742339,3.987454,-8.835174,2.993486,0.191919,1.197028,9.585181,5.558357,4.154510,-5.885447,-4.215733,-7.453549],[2.270191,-6.458130,-5.550958,-4.851584,-8.037945,1.158065,-4.179577,3.829960,8.714787,-6.915554,5.184101,-7.544544,1.109855],[-2.150834,5.043329,5.355212,1.205073,7.551280,1.698524,-1.854380,7.787940,3.147273,-1.527991,7.060005,3.519009,-5.697450]],[[9.287760,5.976789,-2.526522,-8.169638,-1.303221,-7.892666,4.019957,8.709144,9.461066,-5.861302,7.362433,-6.260034,-6.152577],[5.463919,2.209128,5.721924,-3.502585,-5.677536,-7.858994,9.773387,-7.521772,-4.326866,8.975966,-0.273217,9.875627,0.975697],[-0.239165,-2.853220,8.684898,-4.085850,-1.223493,2.935783,-4.955163,7.070386,8.674072,5.348658,-2.503302,9.124436,7.261831],[-0.818077,3.078678,-0.748297,-0.352640,-6.216130,-4.197124,-0.622652,-2.214291,-9.064136,4.174115,9.932964,-3.457734,-5.614373],[7.163384,-9.482983,-8.673923,2.261566,-0.233861,4.776829,6.030577,-5.764310,0.812550,-7.013844,-3.911300,-6.315975,-9.637932]],[[-5.937644,6.523296,2.665855,2.203848,2.981616,-3.534190,2.809056,-9.597323,3.624463,-6.735833,-4.818189,5.786894,-9.747236],[2.757965,3.892938,-6.402636,-0.744279,0.412006,-9.028945,2.782345,-1.342129,1.371131,-2.084612,-9.839902,0.400949,5.482597],[-4.313424,-3.204939,-9.879180,-3.812220,5.710377,-9.200032,-4.066197,3.778905,-0.348727,-1.250729,-4.886174,-5.656155,-8.259074],[3.428185,7.202905,9.697561,3.465956,-3.037936,2.967952,3.162058,-2.681976,-5.824360,2.348593,4.721069,-5.030400,-8.670206],[1.717030,1.374457,-6.208613,3.315091,6.905281,2.865130,-2.603231,-4.292769,-4.420752,-8.615153,1.663888,5.561223,-9.902839]],[[-5.697792,4.628121,-6.973354,6.815870,-2.766285,-8.892626,-9.005919,-4.423369,-5.445898,0.625612,-3.595776,-4.209813,-5.566607],[8.408419,6.428567,0.319480,-7.915943,-0.492693,1.700722,-2.394746,3.713421,-3.458699,-2.932657,-0.753865,5.113321,7.414821],[6.234240,2.594709,-6.362252,-5.486934,-9.438867,7.672320,-8.499738,6.735487,-7.248054,5.560290,-4.347009,5.865450,-8.218699],[8.758667,9.102033,9.914360,9.651393,6.220699,9.492099,4.425518,7.415383,-4.938987,-4.919452,0.250915,3.978953,7.927660],[-0.126559,-5.085464,-4.332235,4.426326,-3.215743,-5.385564,4.609357,1.671517,7.447807,-2.312330,-8.355022,-2.991916,1.495012]],[[9.456943,-8.578156,-3.291715,5.225356,5.708363,1.540994,8.075480,3.335647,2.027355,3.899969,7.815351,3.198703,1.731215],[-1.825559,-1.224899,-2.599273,-2.424379,-9.426688,9.490584,0.552608,8.279377,3.460975,5.014304,1.475880,5.482071,4.619632],[9.515164,7.317145,-2.513441,9.634356,2.655852,-6.957178,-8.284057,-3.604851,-8.861601,0.745924,-4.028628,7.204840,6.392380],[-7.425921,6.093956,-6.917212,-9.276318,-0.377787,4.548178,-5.135552,0.759276,6.804193,5.652014,0.306614,1.714686,-1.943322],[-2.725824,2.479718,-4.752190,-7.714280,-7.250292,-5.144862,-5.676443,4.448553,-4.877104,-7.246774,1.754908,-3.025646,-0.695232]],[[-6.927749,-6.554864,7.421064,-8.610080,-7.332110,9.568203,1.604708,6.278373,-0.449522,-8.526649,-8.874683,8.875660,-3.026516],[-4.356042,-2.545817,-7.245634,-2.176935,4.952607,3.125940,9.503422,-4.233058,0.759570,-4.635677,2.716698,-3.680789,-0.198981],[4.028015,-7.888087,-8.448425,-4.825490,6.371962,-7.723590,7.018622,8.323761,8.696105,-8.825323,6.080762,9.123401,3.827452],[1.680931,-2.938040,-7.501218,9.497419,3.382136,6.942870,-3.968232,0.839835,-7.184827,-6.644476,8.098924,-8.924281,4.598587],[7.077081,5.701873,-9.519005,9.025466,4.792048,-7.067539,-5.737644,-7.590721,7.991867,-5.818233,4.138650,8.999922,-9.590810]],[[-1.224282,-7.259348,5.584056,-6.574325,-2.921446,0.851489,-6.951801,6.411445,7.746489,-0.229773,8.334447,4.522174,-4.497879],[6.664240,-9.601572,8.507606,-1.491726,3.851355,4.864901,0.321667,-2.406925,4.242116,8.683703,9.156251,-4.320445,-1.999885],[9.016110,3.179398,5.928360,7.717844,9.998613,-9.171765,-5.643267,0.497745,5.474783,-6.075164,8.275599,-6.907342,-8.465613],[1.465475,-5.198355,7.184049,7.450704,9.237923,0.967017,6.856503,9.157319,-0.095692,7.427421,-7.490912,-9.184080,-4.453667],[-6.275844,-4.459934,-8.658710,-9.730549,-6.993538,-2.085362,-3.343959,-4.445918,-3.943797,-6.651195,4.442897,8.840736,-4.354766]],[[5.529907,-0.039577,-4.630844,9.730011,-1.985612,6.733939,-1.377698,-1.155016,0.993372,-3.254655,-5.235229,0.734352,7.236083],[3.537696,4.839608,-6.774966,3.212140,-1.428288,9.413077,-0.138717,1.994861,-9.676097,6.710601,-0.901376,-5.713423,-7.714493],[3.797000,1.102994,-0.443256,-6.048726,6.050970,9.492336,4.659301,-4.725971,2.226961,-9.422565,-9.707430,-4.381748,4.494508],[9.596131,9.822324,-6.460497,0.567485,7.715520,6.077992,-1.097716,-4.610261,8.842743,9.606314,2.851291,-4.350979,-4.417182],[-2.064168,4.744117,3.267142,3.766027,-8.081722,-4.423622,-9.727207,-2.729318,0.831858,-8.100722,-9.828542,1.518137,9.410033]],[[-7.158122,4.372346,3.471882,5.509688,1.228345,5.541682,4.970212,3.510730,0.714004,-8.276862,7.444700,-8.636441,4.356172],[7.233378,2.016413,3.444483,-8.467966,-7.479090,2.853767,-2.118263,-6.528804,5.214911,-7.351069,1.030394,-2.040251,7.766086],[7.260729,1.454225,-4.383956,-7.311050,-0.931218,9.844200,-2.534655,-4.492569,3.423389,-7.913046,-0.644835,5.188020,-6.174401],[-0.456161,-5.188990,-9.694078,-6.563926,4.400545,-1.903371,-9.302403,3.240426,-9.184913,2.815922,1.728381,1.002482,-5.712493],[-3.602196,-7.082262,5.032684,4.927265,-0.795616,7.257665,-5.597672,2.600871,-1.700873,5.170142,3.205966,6.397435,-3.998406]]], dtype = "float64")#candidate|1460|(16, 5, 13)|const|float64
const_1461 = relay.const([[[3.813512,1.646388,-0.484702,-4.687775,-8.563684,8.899742,-8.337425,4.108433,9.756920,7.224657,-7.765735,-9.071501,-2.563118],[-8.126657,-4.609689,6.939335,-8.130105,4.606062,-0.172681,-6.309062,-2.712468,-5.191870,-7.545598,6.668975,-4.453863,-3.076973],[9.605531,8.483493,-1.433499,-8.874477,4.409736,-6.154407,-4.911383,-0.269636,-2.266328,4.451291,4.999019,8.524202,-2.766960],[6.196274,8.892948,9.572258,-8.349199,7.404897,6.171836,-1.095823,9.362205,-5.385787,-2.781705,-8.324099,8.055302,1.713521],[1.849005,-7.923626,3.479294,6.055122,6.139227,3.075337,4.651604,1.697901,-8.454353,3.275611,-3.706849,4.379044,9.253781]],[[3.556293,-1.125747,1.054193,7.687438,0.522335,2.742722,-1.280294,5.740648,6.243276,-4.730154,6.113310,-6.807353,-3.774629],[-4.099112,4.992013,7.503486,-3.148545,-0.547355,-1.057955,-3.150232,-0.928325,-3.777314,-6.502834,3.307669,-3.900226,-8.254406],[-9.554147,-9.401383,-4.214913,4.075630,-1.878528,-2.683457,-0.815785,-0.052060,4.022924,-7.156122,6.892926,-2.005383,-4.462616],[9.462600,8.852244,3.113989,-9.221686,-4.215817,-2.619982,-8.354710,-7.558712,-8.734319,5.295576,8.644729,8.938426,3.089991],[-2.449535,-5.262734,1.832862,9.410120,-9.281082,-1.438021,4.666257,9.408670,-4.560715,-1.811660,-7.298046,5.449345,-0.190166]],[[-6.244461,-9.103774,-8.821581,2.234554,-2.320328,-1.282951,4.897097,-1.202181,5.619297,-3.058961,8.012699,-9.404342,-7.680286],[-5.907374,7.990819,-5.602180,-1.899004,3.606482,-1.898710,-5.587429,8.410599,-6.074031,6.219936,-8.196941,-7.562890,1.795304],[-6.245044,-0.070523,-5.118512,-5.848666,3.288478,-9.804042,-8.253951,-0.367616,-9.960192,6.302918,0.898949,6.954408,-2.685058],[7.394716,-7.296942,-3.966873,-0.412181,2.809966,-2.281841,-8.181564,1.821693,8.446444,-0.417346,-1.188425,-6.085104,-0.487273],[1.255345,-1.744399,-9.215452,8.266125,-8.230576,6.720911,-8.824709,-2.531047,-1.217102,-5.737223,5.059321,6.249293,5.219001]],[[-2.894429,9.831262,7.357215,-8.568932,-0.205126,7.023021,-3.376566,-1.243742,-4.107142,-5.122494,4.413853,-5.971141,-5.100796],[6.645470,4.393326,3.480855,3.046928,8.745392,-0.422061,-7.493866,-6.973601,-2.585846,-2.543773,-3.509475,6.230165,8.029260],[2.514779,-5.285065,2.825731,-9.572544,-6.823801,-4.551191,-5.827106,-0.277967,-2.753884,-5.656092,-1.063297,2.257918,8.915702],[1.717449,-5.088332,0.854057,-9.565750,-7.050530,9.522291,1.014300,-5.346880,9.548532,1.663217,7.871875,6.703825,-6.426028],[-5.925406,-8.518363,6.072414,-9.735943,-6.895623,5.619009,3.912263,-6.271959,-1.686271,-1.154980,3.186602,-7.494844,2.950250]],[[-3.377436,7.733814,-8.008145,-5.330667,4.534866,4.347305,-3.390661,9.671942,-8.024689,9.011341,0.154864,-9.316094,-4.871810],[-2.095521,-1.144776,3.671772,-3.436777,9.376772,-3.192646,3.189482,8.447325,-0.227455,-1.876139,-8.328237,-0.676312,8.011857],[5.805470,-3.472543,1.769597,-2.905792,-4.117877,4.202993,-8.911313,-1.333338,-5.572995,-3.779815,-2.805418,8.347902,-7.880231],[6.883795,6.123581,9.088983,9.502331,2.373924,-1.744543,-2.655118,5.944030,7.053932,3.672954,-2.921084,5.011649,5.864439],[7.171747,-2.398567,-2.907326,7.345935,-7.955845,1.206525,-8.869586,-5.356032,-3.848877,6.061507,-6.870717,-5.297992,-1.414539]],[[-2.223014,4.309975,0.114340,-2.653669,2.920885,-2.185339,0.674960,1.524730,-4.281069,1.071384,-3.199952,0.235138,7.618852],[-3.983794,4.233634,-5.275802,-1.572069,-4.105761,7.720369,9.598165,7.874810,7.453365,-8.193727,0.944530,-3.110485,5.020657],[5.110211,-2.301365,4.729893,-7.696196,-0.898622,-5.898189,-3.360224,-5.059704,2.351004,-9.840270,3.607966,3.324908,-8.648443],[-1.874427,7.037603,2.467798,4.477336,3.672521,-5.421827,7.602812,0.057002,7.897353,-9.485970,4.785527,3.219869,7.548714],[1.629426,-1.473349,0.940583,-4.094284,2.045150,8.751334,9.368653,9.768721,-0.422556,-3.454705,-4.685781,-3.913684,-2.422365]],[[-8.437478,7.119095,-7.480512,3.326585,3.510588,-3.488768,7.447055,9.948032,-4.243209,-3.523257,6.984919,-8.645760,-4.492641],[6.242899,-9.648607,-8.125806,-8.423316,-5.895962,-2.062942,9.651532,-6.149801,8.247305,1.669959,7.171764,9.510012,6.336693],[-2.041804,9.130735,-8.822253,0.017978,-0.915373,-3.257435,-7.197091,2.645677,-7.918826,-0.803540,-3.743723,-0.825834,-9.004551],[0.519815,8.264311,-2.513048,5.054856,-2.487878,4.709010,-6.537306,8.307936,-6.312036,1.169117,-0.234421,-9.227033,-6.663423],[-3.199384,5.940212,-1.082053,7.145749,8.782111,-4.976936,5.001912,1.442349,-7.619122,-6.214621,-5.130393,1.799838,-9.580438]],[[4.178035,-3.351593,-3.598889,-9.344566,-6.798525,-1.814409,8.969640,8.252579,-3.264703,-5.458988,6.916321,4.289871,1.507220],[-1.036160,7.812907,-7.849794,-7.440142,2.231484,-1.525638,-5.601205,-9.794903,-9.044894,-3.131755,1.888110,-0.819868,-6.659926],[8.250662,5.318610,8.865822,1.741969,-8.321879,1.988023,4.162392,9.829550,5.222453,-0.599943,8.331750,5.489961,-6.690975],[-8.780587,-8.770460,5.174311,5.166704,-3.623696,-4.721801,0.274615,-4.005555,1.104236,6.827047,9.096649,-1.658235,9.310052],[-6.613169,-7.931181,3.166870,4.097147,1.009305,1.748156,0.449675,-9.463073,-4.935346,-4.853568,-3.804504,-0.878078,3.498954]],[[-4.432931,1.856955,5.946148,-3.245359,-7.201013,-5.364989,-9.338953,-6.159447,-5.609838,5.693228,-6.711862,8.636285,-4.265396],[-8.119061,3.712187,-0.071104,-7.912478,4.134217,1.363546,3.759738,-4.265533,0.243264,1.114791,-6.462341,2.050220,-3.173561],[4.439387,6.038189,-7.694594,-4.934882,8.711142,7.555028,-7.535641,8.525261,8.433626,-3.349939,-5.578733,-2.237879,9.458598],[-6.604677,-0.499617,-3.447365,-7.315553,-2.739813,-7.173699,-4.584949,3.542359,9.699398,9.901437,-4.609231,4.934076,-8.032263],[-8.997685,6.498589,4.986346,5.587805,7.152756,-5.497563,3.717944,-0.871595,1.362667,4.520138,-8.785543,8.666888,8.265132]],[[-9.425142,-9.454260,-0.186150,0.901743,-0.817340,5.011948,0.640091,-7.319360,-0.068773,-6.139429,7.172875,-9.968782,-1.966921],[3.005626,-9.524517,9.829306,8.392233,5.196109,5.116909,5.406983,6.229778,2.763020,9.614940,-5.134962,3.630841,-6.840207],[6.318911,1.703216,-8.365180,2.492202,5.963616,4.713098,-8.452861,-7.295938,-9.217326,0.643706,1.167535,-0.510157,-1.280737],[-6.988190,6.747659,-4.642707,8.271574,-4.184729,-7.297723,-4.031303,8.452314,-6.896321,-1.008525,3.240552,0.063820,0.668416],[1.991776,6.663236,-0.334184,9.057063,5.178867,-4.064101,8.517148,-9.242584,-6.865100,1.592747,-9.415471,1.590791,-8.521272]],[[3.230045,-5.395031,-6.597016,-7.344681,1.197891,-8.208669,-0.572861,4.880354,-9.783236,-9.256042,-8.841966,-5.851131,-7.650355],[-1.151173,5.797053,-1.013635,-6.459545,2.024687,-8.117999,-5.938625,6.230147,-2.708800,-5.058515,-7.306332,-8.225809,4.078358],[-8.916343,-5.528362,9.025284,-8.459144,4.573272,3.309092,2.751797,8.619632,1.033436,-1.450842,-8.317261,-4.596419,-3.160240],[2.821923,8.253431,5.863472,-4.137502,-0.916752,-2.629693,1.841794,3.435632,5.086813,2.242713,-3.775858,5.241561,8.216244],[1.806558,-8.950450,8.315057,-7.605472,1.826547,-1.349264,2.832820,9.987822,3.461511,-5.668350,1.979232,-8.320747,-8.383873]],[[5.311113,9.690853,4.949843,1.316814,-2.783865,0.396020,7.698841,-0.492892,7.417645,2.723029,-5.269939,2.332730,2.968092],[-7.703710,7.446520,6.950716,-2.543699,-0.756570,2.406933,-4.135439,-5.448203,1.092246,-5.944462,3.469865,8.155411,-6.549306],[5.074261,-8.286402,-5.807016,-2.029930,4.008419,7.091649,-6.994250,2.327569,4.783959,8.734129,-5.996412,2.054116,7.727323],[-3.058279,1.518561,-8.962890,-1.281546,-1.376310,6.764147,-3.590852,-7.859919,4.011812,9.782031,-9.114080,-0.402134,-0.804560],[-3.480823,7.627227,-9.737861,6.143162,-4.338256,9.849572,-9.942577,7.305911,-5.461767,9.466612,2.090951,-4.899912,4.966252]],[[7.772250,-9.245310,-0.643397,-2.839459,-5.091968,9.626348,-3.487230,0.522182,-9.636463,3.207087,-9.642955,-3.791145,-7.944239],[-3.958755,-3.358642,-5.035590,2.323683,-6.625600,2.590410,9.576615,3.965347,5.623985,-7.597681,9.454147,3.258986,-2.439224],[2.560720,9.642819,0.961107,-2.042697,3.263990,1.028911,5.590965,6.634604,-6.683014,9.699717,0.369840,-5.465075,0.692966],[0.430688,-0.697820,-9.722402,-8.105683,-2.828122,2.582290,8.925214,1.086478,1.475745,-4.137619,9.979245,3.233881,3.795796],[-2.726679,-3.716161,7.082718,-5.171577,-9.688060,4.113634,-5.515468,-5.904115,-0.315228,-9.209787,-4.604931,5.995858,-3.493927]],[[-3.491337,4.056341,4.612512,4.658728,1.770408,4.513861,-2.069866,0.204279,-0.285056,6.323492,2.073469,-5.316062,9.581781],[-0.929068,-5.614564,-3.318784,-2.051873,-6.029374,6.987060,-7.070136,-6.986375,-3.065356,4.002844,3.285216,2.006105,-5.940364],[-3.227970,-4.612976,0.123568,-2.025978,-1.640290,-4.717057,-2.353264,-3.861481,-8.597799,4.990550,-8.815628,-9.205714,0.780623],[2.106224,-3.952607,2.704314,-5.936599,2.853841,-8.794597,4.565244,-0.439791,-2.789121,-6.668646,-6.117451,4.865985,-2.184842],[5.824281,3.049334,-2.118181,1.195456,-2.873505,3.408992,-1.733962,-5.909509,1.089816,9.231549,-4.875583,-8.695028,-2.295070]],[[3.139841,-5.320548,7.578934,-7.110198,-4.854476,2.305878,-2.773237,0.122057,3.024598,-6.384851,-0.512481,7.429859,7.688738],[5.133188,4.538278,-6.106341,0.428739,-0.187406,-2.925312,6.553738,0.344417,-2.493798,-3.579990,0.112499,0.205300,-2.503076],[7.390592,-9.185753,8.990528,6.283691,3.877928,2.451712,-8.552048,-0.595244,9.004597,-4.995879,-2.429301,-5.989231,-1.128337],[-2.932473,5.836253,4.007877,7.738820,8.917415,-3.848076,9.701141,-8.197733,-8.073225,-5.154428,7.368615,9.200649,-1.128824],[-3.475061,-7.466948,-6.746153,-1.897964,7.986351,2.583769,6.496583,8.948148,4.778913,-3.510700,-6.824678,-4.987475,0.587632]],[[-5.029503,4.233573,-1.144027,4.159005,-1.351396,-6.404712,0.580279,8.086541,-9.168839,8.570414,-0.297243,-3.116738,-2.714810],[2.307579,4.466245,-4.140895,1.974576,-3.863584,3.731936,6.277608,4.276699,-6.938646,0.682564,0.825868,3.635711,-4.825116],[2.965399,-8.332913,8.888736,0.977717,-1.432427,-0.375397,6.827801,7.929177,-4.035832,5.456609,-9.883032,-6.151690,4.198987],[9.528828,-9.250969,-8.469860,-1.412062,3.578586,-5.332476,-8.369843,-9.198445,6.145109,4.868349,-0.099591,9.854620,-9.493066],[1.307076,7.203823,-0.086131,0.403930,-6.361560,1.731428,-5.138779,-0.843839,6.854649,8.209666,8.642046,5.590958,-3.155884]]], dtype = "float64")#candidate|1461|(16, 5, 13)|const|float64
bop_1462 = relay.floor_divide(const_1460.astype('float64'), relay.reshape(const_1461.astype('float64'), relay.shape_of(const_1460))) # shape=(16, 5, 13)
func_630_call = mod.get_global_var('func_630')
func_633_call = mutated_mod.get_global_var('func_633')
var_1476 = relay.var("var_1476", dtype = "int16", shape = (176,))#candidate|1476|(176,)|var|int16
const_1477 = relay.const([[-10,3,5,-6,7,9,-8,3,-3,10,-1,7,7,-4,-9,-6,-7,2,8,-9,2,1,3,9,-4,7,2,-5],[10,-9,-6,-8,6,7,10,1,5,1,-5,6,-9,-5,7,-10,-9,-7,-4,2,-7,-7,4,-10,-1,-9,-3,-6],[-7,5,-2,2,4,10,6,-1,8,1,-6,-3,4,-3,-8,-9,-1,1,-1,-9,-4,-4,-9,-5,-1,-1,7,-3],[-5,-8,-7,-7,3,-4,-3,-1,1,9,-10,-7,1,9,-1,9,-1,8,-7,-8,5,7,6,6,3,5,10,-6],[9,8,-2,-5,-5,-10,-2,-7,2,-6,1,-4,-9,-2,3,9,5,-2,-4,9,2,4,-10,2,4,-8,3,-3]], dtype = "int32")#candidate|1477|(5, 28)|const|int32
call_1475 = relay.TupleGetItem(func_630_call(relay.reshape(var_1476.astype('int16'), [11, 4, 4]), relay.reshape(const_1477.astype('int32'), [140,]), ), 0)
call_1478 = relay.TupleGetItem(func_633_call(relay.reshape(var_1476.astype('int16'), [11, 4, 4]), relay.reshape(const_1477.astype('int32'), [140,]), ), 0)
output = relay.Tuple([bop_1462,call_1475,var_1476,const_1477,])
output2 = relay.Tuple([bop_1462,call_1478,var_1476,const_1477,])
func_1491 = relay.Function([var_1476,], output)
mod['func_1491'] = func_1491
mod = relay.transform.InferType()(mod)
var_1492 = relay.var("var_1492", dtype = "int16", shape = (176,))#candidate|1492|(176,)|var|int16
output = func_1491(var_1492)
func_1493 = relay.Function([var_1492], output)
mutated_mod['func_1493'] = func_1493
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1523 = relay.const([[[-4,4,-4,-2,-9,2,-7,5,-3,5,7,-4,7,-7,8],[-6,-5,-2,-7,7,-1,1,-1,6,-9,3,-2,-5,4,-10],[8,-5,-8,-9,3,-5,9,4,4,6,-8,-9,8,1,-8],[4,-9,-6,-8,-4,-2,-5,4,-1,-7,4,-5,-8,-9,-5],[-10,-2,8,5,-4,6,9,7,3,4,4,-7,-10,-4,-2],[7,-5,-10,-10,10,-8,-10,-10,-2,4,4,3,8,6,6],[8,9,-4,-10,-6,10,7,-10,-6,1,-10,7,4,-9,-7],[8,10,-1,-8,1,-9,9,1,-4,-4,7,10,7,1,-4],[-3,-4,-2,7,5,-6,-1,4,-6,8,-5,-2,-1,9,-5],[10,9,-8,10,3,-7,2,5,9,6,9,-4,-6,-10,-7],[-2,-10,1,-4,-7,-6,7,2,6,1,-9,-5,1,-8,-8],[5,-9,3,-5,1,-5,8,-9,-3,-2,-6,7,5,-3,-1]],[[5,-3,3,6,-4,-1,6,-10,-10,9,-7,2,-6,-2,-8],[-2,-8,-9,2,10,2,4,1,-4,-4,10,8,5,-8,5],[-1,1,1,-2,-5,10,4,-7,7,-3,-2,2,6,6,-6],[2,-5,7,-2,10,1,-7,3,9,7,10,-6,1,-2,6],[5,5,10,9,-3,3,10,-1,6,-2,-4,4,7,-2,10],[8,5,-9,-7,8,9,8,-3,-4,-10,2,3,4,1,10],[1,9,9,-10,8,8,1,-1,-4,-3,-3,8,1,7,-5],[5,3,1,-4,10,-3,3,4,-8,9,3,-8,-10,-3,3],[2,-4,-2,8,-10,-9,-9,-6,-6,-3,8,7,-9,5,1],[-9,-5,-9,10,4,6,-2,8,9,-4,9,2,-10,-2,-2],[4,-8,-4,8,4,3,-7,-6,3,-9,2,1,-3,-5,-7],[-9,-8,-9,-6,6,9,10,4,-1,5,-8,-9,9,1,8]]], dtype = "uint8")#candidate|1523|(2, 12, 15)|const|uint8
var_1524 = relay.var("var_1524", dtype = "uint8", shape = (2, 12, 15))#candidate|1524|(2, 12, 15)|var|uint8
bop_1525 = relay.bitwise_or(const_1523.astype('uint8'), relay.reshape(var_1524.astype('uint8'), relay.shape_of(const_1523))) # shape=(2, 12, 15)
func_581_call = mod.get_global_var('func_581')
func_584_call = mutated_mod.get_global_var('func_584')
const_1533 = relay.const([-5,-9,-3,8,10,-5,-2,4,-7,-9,-10,-7,-10,2,-4,4,-10,-10,9,-9,7,-9,-6,9,1,2,-10,4,-5,4,1,-9,-8,-6,-7,7,8,5,1,7,-5,-3,8,-7,-4,-2,-6,8], dtype = "uint32")#candidate|1533|(48,)|const|uint32
call_1532 = relay.TupleGetItem(func_581_call(relay.reshape(const_1533.astype('uint32'), [2, 3, 8]), relay.reshape(const_1533.astype('uint32'), [2, 3, 8]), ), 0)
call_1534 = relay.TupleGetItem(func_584_call(relay.reshape(const_1533.astype('uint32'), [2, 3, 8]), relay.reshape(const_1533.astype('uint32'), [2, 3, 8]), ), 0)
output = relay.Tuple([bop_1525,call_1532,const_1533,])
output2 = relay.Tuple([bop_1525,call_1534,const_1533,])
func_1535 = relay.Function([var_1524,], output)
mod['func_1535'] = func_1535
mod = relay.transform.InferType()(mod)
var_1536 = relay.var("var_1536", dtype = "uint8", shape = (2, 12, 15))#candidate|1536|(2, 12, 15)|var|uint8
output = func_1535(var_1536)
func_1537 = relay.Function([var_1536], output)
mutated_mod['func_1537'] = func_1537
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1659 = relay.var("var_1659", dtype = "float32", shape = (9, 8))#candidate|1659|(9, 8)|var|float32
uop_1660 = relay.sigmoid(var_1659.astype('float32')) # shape=(9, 8)
output = uop_1660
output2 = uop_1660
func_1668 = relay.Function([var_1659,], output)
mod['func_1668'] = func_1668
mod = relay.transform.InferType()(mod)
var_1669 = relay.var("var_1669", dtype = "float32", shape = (9, 8))#candidate|1669|(9, 8)|var|float32
output = func_1668(var_1669)
func_1670 = relay.Function([var_1669], output)
mutated_mod['func_1670'] = func_1670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1716 = relay.var("var_1716", dtype = "int32", shape = (13, 11, 14))#candidate|1716|(13, 11, 14)|var|int32
var_1717 = relay.var("var_1717", dtype = "int32", shape = (13, 11, 14))#candidate|1717|(13, 11, 14)|var|int32
bop_1718 = relay.right_shift(var_1716.astype('int32'), relay.reshape(var_1717.astype('int32'), relay.shape_of(var_1716))) # shape=(13, 11, 14)
var_1721 = relay.var("var_1721", dtype = "int32", shape = (13, 11, 14))#candidate|1721|(13, 11, 14)|var|int32
bop_1722 = relay.less_equal(bop_1718.astype('bool'), relay.reshape(var_1721.astype('bool'), relay.shape_of(bop_1718))) # shape=(13, 11, 14)
output = bop_1722
output2 = bop_1722
func_1728 = relay.Function([var_1716,var_1717,var_1721,], output)
mod['func_1728'] = func_1728
mod = relay.transform.InferType()(mod)
mutated_mod['func_1728'] = func_1728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1728_call = mutated_mod.get_global_var('func_1728')
var_1730 = relay.var("var_1730", dtype = "int32", shape = (13, 11, 14))#candidate|1730|(13, 11, 14)|var|int32
var_1731 = relay.var("var_1731", dtype = "int32", shape = (13, 11, 14))#candidate|1731|(13, 11, 14)|var|int32
var_1732 = relay.var("var_1732", dtype = "int32", shape = (13, 11, 14))#candidate|1732|(13, 11, 14)|var|int32
call_1729 = func_1728_call(var_1730,var_1731,var_1732,)
output = call_1729
func_1733 = relay.Function([var_1730,var_1731,var_1732,], output)
mutated_mod['func_1733'] = func_1733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1887 = relay.var("var_1887", dtype = "uint16", shape = (14, 6, 11))#candidate|1887|(14, 6, 11)|var|uint16
var_1888 = relay.var("var_1888", dtype = "uint16", shape = (14, 6, 11))#candidate|1888|(14, 6, 11)|var|uint16
bop_1889 = relay.logical_xor(var_1887.astype('uint16'), relay.reshape(var_1888.astype('uint16'), relay.shape_of(var_1887))) # shape=(14, 6, 11)
output = relay.Tuple([bop_1889,])
output2 = relay.Tuple([bop_1889,])
func_1893 = relay.Function([var_1887,var_1888,], output)
mod['func_1893'] = func_1893
mod = relay.transform.InferType()(mod)
var_1894 = relay.var("var_1894", dtype = "uint16", shape = (14, 6, 11))#candidate|1894|(14, 6, 11)|var|uint16
var_1895 = relay.var("var_1895", dtype = "uint16", shape = (14, 6, 11))#candidate|1895|(14, 6, 11)|var|uint16
output = func_1893(var_1894,var_1895,)
func_1896 = relay.Function([var_1894,var_1895,], output)
mutated_mod['func_1896'] = func_1896
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2023 = relay.const(6.526833, dtype = "float64")#candidate|2023|()|const|float64
var_2024 = relay.var("var_2024", dtype = "float64", shape = (4, 10, 8))#candidate|2024|(4, 10, 8)|var|float64
bop_2025 = relay.floor_mod(const_2023.astype('float64'), var_2024.astype('float64')) # shape=(4, 10, 8)
func_1893_call = mod.get_global_var('func_1893')
func_1896_call = mutated_mod.get_global_var('func_1896')
var_2042 = relay.var("var_2042", dtype = "uint16", shape = (1, 924))#candidate|2042|(1, 924)|var|uint16
call_2041 = relay.TupleGetItem(func_1893_call(relay.reshape(var_2042.astype('uint16'), [14, 6, 11]), relay.reshape(var_2042.astype('uint16'), [14, 6, 11]), ), 0)
call_2043 = relay.TupleGetItem(func_1896_call(relay.reshape(var_2042.astype('uint16'), [14, 6, 11]), relay.reshape(var_2042.astype('uint16'), [14, 6, 11]), ), 0)
bop_2049 = relay.divide(var_2042.astype('float64'), const_2023.astype('float64')) # shape=(1, 924)
func_737_call = mod.get_global_var('func_737')
func_740_call = mutated_mod.get_global_var('func_740')
var_2061 = relay.var("var_2061", dtype = "float32", shape = (117,))#candidate|2061|(117,)|var|float32
call_2060 = relay.TupleGetItem(func_737_call(relay.reshape(var_2061.astype('float32'), [1, 13, 9])), 1)
call_2062 = relay.TupleGetItem(func_740_call(relay.reshape(var_2061.astype('float32'), [1, 13, 9])), 1)
output = relay.Tuple([bop_2025,call_2041,bop_2049,call_2060,var_2061,])
output2 = relay.Tuple([bop_2025,call_2043,bop_2049,call_2062,var_2061,])
func_2063 = relay.Function([var_2024,var_2042,var_2061,], output)
mod['func_2063'] = func_2063
mod = relay.transform.InferType()(mod)
mutated_mod['func_2063'] = func_2063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2063_call = mutated_mod.get_global_var('func_2063')
var_2065 = relay.var("var_2065", dtype = "float64", shape = (4, 10, 8))#candidate|2065|(4, 10, 8)|var|float64
var_2066 = relay.var("var_2066", dtype = "uint16", shape = (1, 924))#candidate|2066|(1, 924)|var|uint16
var_2067 = relay.var("var_2067", dtype = "float32", shape = (117,))#candidate|2067|(117,)|var|float32
call_2064 = func_2063_call(var_2065,var_2066,var_2067,)
output = call_2064
func_2068 = relay.Function([var_2065,var_2066,var_2067,], output)
mutated_mod['func_2068'] = func_2068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2446 = relay.var("var_2446", dtype = "float64", shape = (13, 11, 13))#candidate|2446|(13, 11, 13)|var|float64
var_2447 = relay.var("var_2447", dtype = "float64", shape = (13, 11, 13))#candidate|2447|(13, 11, 13)|var|float64
bop_2448 = relay.floor_divide(var_2446.astype('float64'), relay.reshape(var_2447.astype('float64'), relay.shape_of(var_2446))) # shape=(13, 11, 13)
output = relay.Tuple([bop_2448,])
output2 = relay.Tuple([bop_2448,])
func_2465 = relay.Function([var_2446,var_2447,], output)
mod['func_2465'] = func_2465
mod = relay.transform.InferType()(mod)
mutated_mod['func_2465'] = func_2465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2465_call = mutated_mod.get_global_var('func_2465')
var_2467 = relay.var("var_2467", dtype = "float64", shape = (13, 11, 13))#candidate|2467|(13, 11, 13)|var|float64
var_2468 = relay.var("var_2468", dtype = "float64", shape = (13, 11, 13))#candidate|2468|(13, 11, 13)|var|float64
call_2466 = func_2465_call(var_2467,var_2468,)
output = call_2466
func_2469 = relay.Function([var_2467,var_2468,], output)
mutated_mod['func_2469'] = func_2469
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2494 = relay.const([[[-0.706504,-4.009248,3.255941,-1.332862],[0.840271,8.101336,-0.369605,1.928955],[-8.404308,4.444253,9.497830,2.927018],[-5.501217,4.238821,-7.065674,-1.349092],[9.861245,-8.672814,6.172873,9.140770],[5.426064,0.292575,-4.622696,-8.547977],[5.520971,0.250524,1.920132,-0.400714],[7.011382,-7.310506,-4.116116,5.286289],[5.947168,-8.150273,-8.047824,-6.469668],[-6.393439,8.184425,-5.995635,3.239304],[7.306472,0.430966,-5.553429,-5.225415],[3.190457,2.531949,9.557204,0.562247],[-6.791135,1.077170,8.489310,9.849216],[-6.631846,1.553891,-9.611230,-5.025932],[4.633842,-0.988557,-3.165235,-0.407057]],[[-4.573357,2.485587,-2.836195,-9.067747],[5.416384,7.499901,0.933362,-1.818261],[5.620376,8.349248,8.714427,-9.630933],[2.767447,-6.611294,1.398324,5.976098],[-3.644438,-6.425649,-4.997587,1.087999],[-3.360668,-5.394261,5.192932,9.149720],[-6.085449,-3.101213,8.969492,4.282214],[-4.698157,-5.680220,-5.335210,6.184246],[-0.937324,0.207936,-9.726252,-4.257900],[2.227386,5.018162,-2.508378,5.975013],[3.363640,-5.382005,-0.591304,0.650920],[4.216121,7.042720,2.593029,-4.188586],[-1.610860,-1.448894,-2.116122,2.197240],[-1.283851,4.718237,-3.812151,8.915931],[-3.577372,-6.294157,8.091078,0.499431]],[[9.277001,-3.949835,0.709025,-6.111392],[-4.888802,8.076611,-9.824902,-6.033953],[0.925326,7.894265,8.082541,1.872191],[-3.869751,-0.654847,9.502520,-7.700453],[-7.127790,4.268326,5.909065,3.225461],[0.181539,-9.674785,-2.153952,-7.060346],[-9.321764,8.728045,-7.053218,-5.546483],[-4.261555,7.618293,-7.031585,-7.656463],[-7.401183,1.568954,0.220447,-9.249755],[0.674323,-7.397819,2.378142,9.512658],[-1.119619,9.467966,7.468371,4.785345],[2.667922,9.887492,-9.835014,-5.771104],[7.741353,-4.158847,3.449887,1.700529],[-8.791866,-8.547537,-2.253528,9.568454],[-4.481948,-9.305634,-7.495810,2.366206]],[[-6.990509,-7.315932,-2.763740,6.867974],[-1.694765,-7.889837,-5.375972,-0.052296],[-9.025138,0.421374,-1.616014,4.788265],[9.941254,-6.331004,-3.769853,6.422453],[-3.069895,7.345803,1.653427,-3.458280],[3.480691,9.796168,4.016672,-8.678495],[-1.597794,-1.501465,-1.310165,3.248330],[4.907333,-8.660214,8.394337,-9.286104],[1.570124,-9.299445,6.808860,-4.354213],[7.839885,-4.131738,8.448119,-8.491575],[-2.346163,-7.364626,3.284359,6.220221],[5.734946,-6.478656,4.251782,-7.692525],[-7.178604,9.297089,2.489496,-6.985835],[0.283798,2.701757,9.082648,-7.384700],[3.278020,6.905919,-8.464358,0.249313]],[[-9.536178,-7.320245,7.661943,-6.247338],[6.809009,2.352583,1.191365,-1.507807],[-4.270094,5.983092,3.380472,-3.362287],[-0.871885,1.959225,-2.186070,-2.955102],[-3.441240,-5.688151,6.615839,-7.225828],[9.913672,9.195450,9.061417,1.903683],[-4.019796,-1.786527,6.871105,-6.202498],[-6.889703,-3.751230,-5.253826,5.048780],[-4.374169,-8.283465,-3.027708,-6.247920],[-8.706025,-4.807893,5.788348,-2.947695],[-6.852398,-7.233911,7.645065,7.537466],[-6.947360,-0.317994,-9.214382,-3.481407],[2.484421,-8.535548,5.536665,4.745847],[-0.541924,0.794870,-7.456214,6.987331],[-3.185233,-6.603378,-4.121368,2.856821]],[[9.162408,-6.075726,9.471492,-6.356901],[9.292764,-8.949131,-2.598932,8.184202],[5.206138,-3.187555,-3.864110,-2.273088],[2.499399,-0.210989,-9.483152,5.261117],[7.341173,4.231727,-4.933352,6.211240],[-5.223871,-0.025447,-7.299575,-1.533181],[-1.929422,6.899688,-6.466651,-8.797749],[-7.418972,-3.715195,-7.115342,-9.926793],[6.516537,8.952637,-8.013332,2.147782],[-3.595854,9.383418,2.924739,3.352202],[-9.391074,-8.704855,-1.582701,9.330313],[6.738937,-2.284585,2.672353,6.138125],[-7.383829,-9.443815,-2.635533,-1.413391],[8.545987,0.454519,4.048977,-4.613293],[4.042015,-0.027934,6.781293,-5.792063]],[[9.340465,3.129375,4.267377,3.809828],[3.823601,-5.989382,-5.396444,-0.159845],[-2.906107,-8.133160,-1.113387,-3.917429],[-9.905079,-3.151364,-4.099000,-6.036825],[8.745542,-3.328617,8.999624,-1.234849],[0.512258,-4.327570,3.491354,9.871375],[-7.421824,9.623635,-2.532802,-1.845351],[9.218057,7.681993,5.047577,8.157290],[5.376295,5.937529,-2.300420,3.197574],[7.257735,6.572826,-1.613100,-8.533833],[-6.937550,-7.352948,7.852647,3.927284],[8.970333,-8.586583,2.912416,9.207395],[5.683526,3.717844,-3.433684,9.543481],[-6.101854,2.222997,4.964148,5.683342],[7.175850,5.321981,-4.813066,9.319198]],[[4.189912,-9.779464,-2.941028,5.800561],[-3.462101,2.434500,5.044309,-4.294392],[6.017257,-6.047338,-9.192510,-1.675155],[6.452939,-5.845092,3.221109,7.049658],[-6.192512,5.517258,8.654459,-9.383023],[9.074881,6.072594,0.516993,-3.948785],[4.942240,0.126957,-5.188087,3.292083],[6.318499,4.216296,-1.550227,9.355943],[-7.090477,4.711827,7.932702,7.629067],[6.640958,3.940607,1.806964,7.181776],[1.856729,-5.361806,-4.531796,8.600933],[4.329982,-5.582524,-4.991222,-7.385847],[-3.401327,-0.151621,-1.281828,-6.767951],[-4.702826,-9.643092,6.164663,-1.066201],[-9.748345,-5.167109,1.507131,9.988766]],[[-0.957587,-1.459004,2.258850,9.109272],[-9.740944,-2.903161,-3.611959,-4.800114],[-5.089623,-6.216226,-9.992253,-6.156111],[3.164614,6.625871,2.506849,8.644287],[1.749106,-9.861627,6.036616,-8.614911],[6.269617,-4.953909,-8.791362,5.665443],[8.918236,-6.762539,-5.962355,-4.604239],[-7.607950,-8.150294,-6.544325,9.385797],[8.784765,5.890754,-7.789857,-0.305596],[-3.962657,9.570458,3.623885,9.898100],[-9.293138,-2.816475,3.440463,-6.888197],[4.817304,1.232890,-8.583214,9.821464],[-2.890272,-8.252947,-0.013195,-4.118625],[6.499346,5.240354,-5.150258,5.945466],[0.282279,-9.402830,5.327519,-4.188956]],[[1.965064,-6.586837,-8.392426,-5.711787],[-7.237095,9.924743,8.521090,4.661048],[0.277546,-4.788116,-1.153989,-1.880248],[7.224136,-5.912272,0.129236,9.604428],[-0.598044,7.034516,3.072026,0.312862],[-8.682675,6.167964,-9.861187,0.016392],[3.778811,-7.762926,4.144496,6.164719],[9.623092,7.386713,-9.337654,2.101879],[8.949289,-9.824113,-3.192369,-6.643350],[-0.251263,3.063777,0.886038,8.943280],[-0.317119,-4.724370,-1.597337,-0.142350],[6.920940,3.644534,0.053411,-1.059280],[5.007870,1.680597,-4.410988,-2.925294],[5.506190,8.557474,-5.508902,-0.557638],[-3.818976,6.613643,-9.806460,-0.408333]],[[4.004048,-9.798137,0.189082,5.081910],[3.834837,-9.277331,4.102313,-6.586996],[-3.319287,3.568607,-9.175146,0.413310],[-5.367273,-8.734312,8.636705,-5.616540],[-3.137309,6.097218,8.182052,-3.260834],[5.698015,-7.976461,0.321578,-7.611944],[-9.238379,5.584907,3.356444,-1.438165],[4.358549,-5.511867,4.388619,6.544133],[7.131841,6.055086,-6.742394,4.277045],[7.134756,-7.090107,0.162249,-7.669467],[-9.809573,-6.548789,3.036508,7.712859],[6.932001,3.054411,-6.551971,-6.235952],[2.765147,-1.307722,1.826597,9.765523],[4.805696,-7.782046,-5.373203,-1.121906],[-4.121427,-9.925540,6.323884,-1.660391]],[[-0.416232,-2.585120,-4.055058,-9.425404],[-0.564939,9.824698,8.123767,-7.452872],[-8.943290,0.812688,-0.316025,5.869566],[-5.715065,-4.318153,5.373618,6.528578],[-6.704641,-4.813687,-5.965222,-9.888463],[3.545322,0.985212,-8.171740,8.581827],[-7.780492,-9.400179,1.058651,2.625492],[2.011840,2.101711,-1.198322,-9.159465],[-7.904319,8.027704,-0.362505,-4.421559],[-0.654051,-5.080002,7.256347,6.071532],[-5.392226,-5.259875,-2.387871,6.641838],[4.322907,-5.305178,5.076256,-8.341686],[-4.963258,9.933706,6.305507,-5.830246],[0.686968,1.298827,0.794036,-3.235095],[-0.774066,2.627871,-1.819682,-7.927777]]], dtype = "float32")#candidate|2494|(12, 15, 4)|const|float32
uop_2495 = relay.asinh(const_2494.astype('float32')) # shape=(12, 15, 4)
output = relay.Tuple([uop_2495,])
output2 = relay.Tuple([uop_2495,])
func_2502 = relay.Function([], output)
mod['func_2502'] = func_2502
mod = relay.transform.InferType()(mod)
output = func_2502()
func_2503 = relay.Function([], output)
mutated_mod['func_2503'] = func_2503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_2548 = relay.TupleGetItem(func_2502_call(), 0)
call_2549 = relay.TupleGetItem(func_2503_call(), 0)
output = call_2548
output2 = call_2549
func_2553 = relay.Function([], output)
mod['func_2553'] = func_2553
mod = relay.transform.InferType()(mod)
output = func_2553()
func_2554 = relay.Function([], output)
mutated_mod['func_2554'] = func_2554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_2577 = relay.TupleGetItem(func_2502_call(), 0)
call_2578 = relay.TupleGetItem(func_2503_call(), 0)
func_1728_call = mod.get_global_var('func_1728')
func_1733_call = mutated_mod.get_global_var('func_1733')
var_2597 = relay.var("var_2597", dtype = "int32", shape = (2002,))#candidate|2597|(2002,)|var|int32
call_2596 = func_1728_call(relay.reshape(var_2597.astype('int32'), [13, 11, 14]), relay.reshape(var_2597.astype('int32'), [13, 11, 14]), relay.reshape(var_2597.astype('int32'), [13, 11, 14]), )
call_2598 = func_1728_call(relay.reshape(var_2597.astype('int32'), [13, 11, 14]), relay.reshape(var_2597.astype('int32'), [13, 11, 14]), relay.reshape(var_2597.astype('int32'), [13, 11, 14]), )
func_581_call = mod.get_global_var('func_581')
func_584_call = mutated_mod.get_global_var('func_584')
const_2602 = relay.const([2,9,-5,-6,-1,-5,6,1,-3,3,-6,-7,-4,8,-4,3,-10,-6,1,4,-6,-4,-8,10,-3,-7,-7,3,-1,5,-5,5,-3,2,2,-6,8,-1,-3,6,-5,-5,9,-6,-9,8,-1,3], dtype = "uint32")#candidate|2602|(48,)|const|uint32
call_2601 = relay.TupleGetItem(func_581_call(relay.reshape(const_2602.astype('uint32'), [2, 3, 8]), relay.reshape(const_2602.astype('uint32'), [2, 3, 8]), ), 0)
call_2603 = relay.TupleGetItem(func_584_call(relay.reshape(const_2602.astype('uint32'), [2, 3, 8]), relay.reshape(const_2602.astype('uint32'), [2, 3, 8]), ), 0)
output = relay.Tuple([call_2577,call_2596,var_2597,call_2601,const_2602,])
output2 = relay.Tuple([call_2578,call_2598,var_2597,call_2603,const_2602,])
func_2608 = relay.Function([var_2597,], output)
mod['func_2608'] = func_2608
mod = relay.transform.InferType()(mod)
var_2609 = relay.var("var_2609", dtype = "int32", shape = (2002,))#candidate|2609|(2002,)|var|int32
output = func_2608(var_2609)
func_2610 = relay.Function([var_2609], output)
mutated_mod['func_2610'] = func_2610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_2629 = relay.TupleGetItem(func_2502_call(), 0)
call_2630 = relay.TupleGetItem(func_2503_call(), 0)
output = relay.Tuple([call_2629,])
output2 = relay.Tuple([call_2630,])
func_2633 = relay.Function([], output)
mod['func_2633'] = func_2633
mod = relay.transform.InferType()(mod)
output = func_2633()
func_2634 = relay.Function([], output)
mutated_mod['func_2634'] = func_2634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_2664 = relay.TupleGetItem(func_2633_call(), 0)
call_2665 = relay.TupleGetItem(func_2634_call(), 0)
output = call_2664
output2 = call_2665
func_2670 = relay.Function([], output)
mod['func_2670'] = func_2670
mod = relay.transform.InferType()(mod)
output = func_2670()
func_2671 = relay.Function([], output)
mutated_mod['func_2671'] = func_2671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_2693 = relay.TupleGetItem(func_2633_call(), 0)
call_2694 = relay.TupleGetItem(func_2634_call(), 0)
func_2633_call = mod.get_global_var('func_2633')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_2703 = relay.TupleGetItem(func_2633_call(), 0)
call_2704 = relay.TupleGetItem(func_2634_call(), 0)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_2710 = func_2553_call()
call_2711 = func_2553_call()
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_2735 = func_2553_call()
call_2736 = func_2553_call()
output = relay.Tuple([call_2693,call_2703,call_2710,call_2735,])
output2 = relay.Tuple([call_2694,call_2704,call_2711,call_2736,])
func_2737 = relay.Function([], output)
mod['func_2737'] = func_2737
mod = relay.transform.InferType()(mod)
output = func_2737()
func_2738 = relay.Function([], output)
mutated_mod['func_2738'] = func_2738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2737_call = mod.get_global_var('func_2737')
func_2738_call = mutated_mod.get_global_var('func_2738')
call_2741 = relay.TupleGetItem(func_2737_call(), 0)
call_2742 = relay.TupleGetItem(func_2738_call(), 0)
output = call_2741
output2 = call_2742
func_2746 = relay.Function([], output)
mod['func_2746'] = func_2746
mod = relay.transform.InferType()(mod)
output = func_2746()
func_2747 = relay.Function([], output)
mutated_mod['func_2747'] = func_2747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_2748 = relay.TupleGetItem(func_2502_call(), 0)
call_2749 = relay.TupleGetItem(func_2503_call(), 0)
func_630_call = mod.get_global_var('func_630')
func_633_call = mutated_mod.get_global_var('func_633')
const_2753 = relay.const([[-1,2,7,5,1,9,-1,-5,4,4,-6,1,4,-4,3,5,-10,7,9,5,-4,-9,7,10,1,5,-1,-3,-4,-1,-2,8,-5,7,-8,4,-1,7,-9,9,-10,-7,1,-6,-8,9,-5,-10,-3,-6,3,3,5,2,-6,3,-3,9,-8,-10,-3,-6,7,1,-7,1,7,4,3,-5,4,6,-6,-3,1,-3,-2,5,5,9,2,-1,-1,2,-8,-2,-3,-10],[-5,-3,4,-1,3,8,-3,-1,7,6,5,-4,5,5,-6,4,6,10,-3,10,8,-7,7,7,-10,-3,-3,7,-5,-3,-7,-2,6,5,-4,7,-3,2,10,3,4,-4,3,2,-6,-8,-2,6,-4,-7,-5,10,-9,-9,4,1,-10,-3,-8,2,10,7,-2,-1,-3,5,-5,8,-9,-2,-1,-9,8,7,-8,10,-6,-1,-7,5,5,9,-6,1,-6,-6,-6,9]], dtype = "int16")#candidate|2753|(2, 88)|const|int16
var_2754 = relay.var("var_2754", dtype = "int32", shape = (140,))#candidate|2754|(140,)|var|int32
call_2752 = relay.TupleGetItem(func_630_call(relay.reshape(const_2753.astype('int16'), [11, 4, 4]), relay.reshape(var_2754.astype('int32'), [140,]), ), 1)
call_2755 = relay.TupleGetItem(func_633_call(relay.reshape(const_2753.astype('int16'), [11, 4, 4]), relay.reshape(var_2754.astype('int32'), [140,]), ), 1)
func_1728_call = mod.get_global_var('func_1728')
func_1733_call = mutated_mod.get_global_var('func_1733')
var_2757 = relay.var("var_2757", dtype = "int32", shape = (2002,))#candidate|2757|(2002,)|var|int32
call_2756 = func_1728_call(relay.reshape(var_2757.astype('int32'), [13, 11, 14]), relay.reshape(var_2757.astype('int32'), [13, 11, 14]), relay.reshape(var_2757.astype('int32'), [13, 11, 14]), )
call_2758 = func_1728_call(relay.reshape(var_2757.astype('int32'), [13, 11, 14]), relay.reshape(var_2757.astype('int32'), [13, 11, 14]), relay.reshape(var_2757.astype('int32'), [13, 11, 14]), )
func_737_call = mod.get_global_var('func_737')
func_740_call = mutated_mod.get_global_var('func_740')
const_2760 = relay.const([[9.606083],[-3.985069],[-8.251247],[-4.029402],[-5.040206],[-5.850144],[8.147578],[-1.917730],[-0.582603],[-8.424476],[6.485887],[0.878193],[2.400800],[-7.084863],[8.079112],[2.862576],[-7.861117],[-5.764281],[7.172826],[2.367019],[3.502687],[-8.596565],[-5.713330],[2.617771],[1.748970],[8.214898],[7.487680],[-5.314076],[4.704869],[-1.504974],[-8.020756],[-1.859698],[3.541605],[8.478425],[1.322789],[-3.178442],[-1.354806],[8.169909],[6.871272],[6.438268],[1.352550],[2.815405],[-3.032083],[8.068497],[7.250025],[-3.861114],[-9.992445],[-6.750374],[1.184319],[-1.329865],[-9.609273],[-1.965966],[-0.810368],[-2.008200],[-1.527455],[-0.493022],[-6.300161],[-6.096000],[3.034769],[-9.941689],[3.971441],[-3.388977],[2.612868],[5.055393],[1.471485],[4.212056],[-6.983998],[-4.933825],[-1.966111],[-3.297763],[1.617374],[-6.258531],[-3.589533],[-0.824277],[-4.886510],[-4.381108],[4.541195],[9.696519],[-0.186487],[6.382256],[5.058232],[6.423230],[-5.025166],[-2.235777],[-5.789377],[6.027882],[1.656939],[5.634351],[-9.004739],[1.817849],[9.679910],[-1.533922],[4.451670],[4.122803],[-4.262325],[7.026448],[-1.504129],[6.744256],[-5.981818],[8.633406],[-6.152533],[-3.043317],[-3.474524],[-1.104480],[6.835216],[2.448639],[8.542028],[4.604322],[-5.450772],[-4.396413],[-5.053155],[-3.176701],[9.381382],[1.528560],[6.779922],[-7.646200],[-6.296674]], dtype = "float32")#candidate|2760|(117, 1)|const|float32
call_2759 = relay.TupleGetItem(func_737_call(relay.reshape(const_2760.astype('float32'), [1, 13, 9])), 2)
call_2761 = relay.TupleGetItem(func_740_call(relay.reshape(const_2760.astype('float32'), [1, 13, 9])), 2)
func_1491_call = mod.get_global_var('func_1491')
func_1493_call = mutated_mod.get_global_var('func_1493')
call_2762 = relay.TupleGetItem(func_1491_call(relay.reshape(const_2753.astype('int16'), [176,])), 0)
call_2763 = relay.TupleGetItem(func_1493_call(relay.reshape(const_2753.astype('int16'), [176,])), 0)
var_2764 = relay.var("var_2764", dtype = "float32", shape = (117, 11))#candidate|2764|(117, 11)|var|float32
bop_2765 = relay.bitwise_or(const_2760.astype('int8'), var_2764.astype('int8')) # shape=(117, 11)
output = relay.Tuple([call_2748,call_2752,const_2753,var_2754,call_2756,var_2757,call_2759,call_2762,bop_2765,])
output2 = relay.Tuple([call_2749,call_2755,const_2753,var_2754,call_2758,var_2757,call_2761,call_2763,bop_2765,])
func_2768 = relay.Function([var_2754,var_2757,var_2764,], output)
mod['func_2768'] = func_2768
mod = relay.transform.InferType()(mod)
var_2769 = relay.var("var_2769", dtype = "int32", shape = (140,))#candidate|2769|(140,)|var|int32
var_2770 = relay.var("var_2770", dtype = "int32", shape = (2002,))#candidate|2770|(2002,)|var|int32
var_2771 = relay.var("var_2771", dtype = "float32", shape = (117, 11))#candidate|2771|(117, 11)|var|float32
output = func_2768(var_2769,var_2770,var_2771,)
func_2772 = relay.Function([var_2769,var_2770,var_2771,], output)
mutated_mod['func_2772'] = func_2772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_2794 = func_2553_call()
call_2795 = func_2553_call()
output = call_2794
output2 = call_2795
func_2796 = relay.Function([], output)
mod['func_2796'] = func_2796
mod = relay.transform.InferType()(mod)
mutated_mod['func_2796'] = func_2796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mutated_mod.get_global_var('func_2796')
call_2797 = func_2796_call()
output = call_2797
func_2798 = relay.Function([], output)
mutated_mod['func_2798'] = func_2798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mod.get_global_var('func_2796')
func_2798_call = mutated_mod.get_global_var('func_2798')
call_2822 = func_2796_call()
call_2823 = func_2796_call()
output = call_2822
output2 = call_2823
func_2839 = relay.Function([], output)
mod['func_2839'] = func_2839
mod = relay.transform.InferType()(mod)
mutated_mod['func_2839'] = func_2839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2839_call = mutated_mod.get_global_var('func_2839')
call_2840 = func_2839_call()
output = call_2840
func_2841 = relay.Function([], output)
mutated_mod['func_2841'] = func_2841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mod.get_global_var('func_2796')
func_2798_call = mutated_mod.get_global_var('func_2798')
call_2907 = func_2796_call()
call_2908 = func_2796_call()
func_630_call = mod.get_global_var('func_630')
func_633_call = mutated_mod.get_global_var('func_633')
const_2947 = relay.const([-8,-5,-1,-1,-8,-8,6,-2,9,1,-9,1,-2,-8,2,4,-8,-1,4,7,6,8,-3,7,2,2,-8,3,-9,-2,-10,3,5,-9,5,-1,-3,-3,1,2,7,-5,4,-5,-10,-6,-5,-10,-2,-9,5,7,1,8,-9,3,2,-3,5,9,-8,8,3,-6,-7,1,-7,3,8,9,-2,7,2,10,9,5,-4,1,-2,-2,1,2,4,5,-9,-1,-7,-4,-8,6,-4,5,3,5,2,-4,-5,-1,6,-10,10,-5,-10,6,3,-5,5,5,5,-3,9,2,-8,10,-8,-6,-2,7,-9,-7,-9,7,2,1,-2,-6,4,5,-10,-3,-7,-9,1,8,3,10,2,3,1,-1,10,4,-5,5,5,-4,-8,-1,10,-9,-9,-4,-8,4,1,-2,5,5,8,5,-10,8,-3,7,10,-8,-4,-9,9,4,1,3,4,7,-9,-7], dtype = "int16")#candidate|2947|(176,)|const|int16
const_2948 = relay.const([-7,6,2,7,-7,2,5,-3,1,5,-1,-1,-2,1,9,6,2,9,10,-6,7,6,1,-1,3,-6,2,3,10,-5,9,7,3,-9,-2,-1,5,2,-7,6,-6,4,-4,4,-2,4,-10,5,7,-10,9,7,-1,7,2,7,10,6,8,-9,-10,-4,-4,-6,2,-9,7,6,4,5,-1,-4,4,4,-1,-4,5,-1,-6,-1,3,1,5,8,-3,5,-5,-4,10,-3,-10,-2,-5,-8,-2,-1,-9,6,2,-3,-7,8,9,1,1,-10,10,-9,-7,-6,-6,-5,-9,-6,5,7,-10,-1,8,-10,-5,1,-4,-10,7,-1,5,5,7,7,3,-3,1,-5,8,-10,-6,10,-3,-3], dtype = "int32")#candidate|2948|(140,)|const|int32
call_2946 = relay.TupleGetItem(func_630_call(relay.reshape(const_2947.astype('int16'), [11, 4, 4]), relay.reshape(const_2948.astype('int32'), [140,]), ), 2)
call_2949 = relay.TupleGetItem(func_633_call(relay.reshape(const_2947.astype('int16'), [11, 4, 4]), relay.reshape(const_2948.astype('int32'), [140,]), ), 2)
output = relay.Tuple([call_2907,call_2946,const_2947,const_2948,])
output2 = relay.Tuple([call_2908,call_2949,const_2947,const_2948,])
func_2953 = relay.Function([], output)
mod['func_2953'] = func_2953
mod = relay.transform.InferType()(mod)
mutated_mod['func_2953'] = func_2953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mutated_mod.get_global_var('func_2953')
call_2954 = func_2953_call()
output = call_2954
func_2955 = relay.Function([], output)
mutated_mod['func_2955'] = func_2955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_2993 = relay.TupleGetItem(func_2633_call(), 0)
call_2994 = relay.TupleGetItem(func_2634_call(), 0)
output = call_2993
output2 = call_2994
func_3026 = relay.Function([], output)
mod['func_3026'] = func_3026
mod = relay.transform.InferType()(mod)
mutated_mod['func_3026'] = func_3026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mutated_mod.get_global_var('func_3026')
call_3027 = func_3026_call()
output = call_3027
func_3028 = relay.Function([], output)
mutated_mod['func_3028'] = func_3028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3029 = relay.var("var_3029", dtype = "float32", shape = (9, 2, 12))#candidate|3029|(9, 2, 12)|var|float32
uop_3030 = relay.erf(var_3029.astype('float32')) # shape=(9, 2, 12)
output = uop_3030
output2 = uop_3030
func_3054 = relay.Function([var_3029,], output)
mod['func_3054'] = func_3054
mod = relay.transform.InferType()(mod)
var_3055 = relay.var("var_3055", dtype = "float32", shape = (9, 2, 12))#candidate|3055|(9, 2, 12)|var|float32
output = func_3054(var_3055)
func_3056 = relay.Function([var_3055], output)
mutated_mod['func_3056'] = func_3056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_3130 = relay.TupleGetItem(func_2633_call(), 0)
call_3131 = relay.TupleGetItem(func_2634_call(), 0)
func_1893_call = mod.get_global_var('func_1893')
func_1896_call = mutated_mod.get_global_var('func_1896')
var_3160 = relay.var("var_3160", dtype = "uint16", shape = (1, 924))#candidate|3160|(1, 924)|var|uint16
call_3159 = relay.TupleGetItem(func_1893_call(relay.reshape(var_3160.astype('uint16'), [14, 6, 11]), relay.reshape(var_3160.astype('uint16'), [14, 6, 11]), ), 0)
call_3161 = relay.TupleGetItem(func_1896_call(relay.reshape(var_3160.astype('uint16'), [14, 6, 11]), relay.reshape(var_3160.astype('uint16'), [14, 6, 11]), ), 0)
output = relay.Tuple([call_3130,call_3159,var_3160,])
output2 = relay.Tuple([call_3131,call_3161,var_3160,])
func_3162 = relay.Function([var_3160,], output)
mod['func_3162'] = func_3162
mod = relay.transform.InferType()(mod)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3163 = relay.var("var_3163", dtype = "uint16", shape = (1, 924))#candidate|3163|(1, 924)|var|uint16
func_3162_call = mutated_mod.get_global_var('func_3162')
call_3164 = func_3162_call(var_3163)
output = call_3164
func_3165 = relay.Function([var_3163], output)
mutated_mod['func_3165'] = func_3165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_3196 = relay.TupleGetItem(func_2953_call(), 3)
call_3197 = relay.TupleGetItem(func_2955_call(), 3)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
const_3202 = relay.const([8,2,7,6,1,9,2,1,10,-10,-7,4,-2,6,-3,-8,6,-6,10,-10,-4,10,-1,-1,4,-7,-8,-2,7,4,2,-2,4,3,8,6,4,-9,-8,5,2,4,-5,2,-6,-4,2,9,2,1,-5,3,10,6,4,9,3,6,10,2,8,-4,-9,-4,5,2,-10,-3,9,-10,1,9,-7,-4,4,-4,-1,3,-1,3,-2,-8,-2,-7,-10,-5,10,-5,-10,-3,4,-7,6,-4,-6,-5,-4,5,5,10,-2,-6,-9,-9,-9,-3,10,9,9,4,-2,8,-3,-5,-6,4,10,-10,3,7,-2,9,10,9,-3,9,-2,-3,-9,-3,-5,-2,-1,3,-2,7,1,-7,4,-4,-8,2,9,5,6,-4,-9,8,-9,-5,3,6,-10,9,-8,2,-4,-6,-2,1,-2,-10,1,2,-1,4,9,-10,-4,4,1,-8,10,8,-8,9,5,-3,-9,8,-2,-6,2,-9,-6,-8,8,-2,1,-8,10,-1,9,1,8,10,10,10,-3,-8,-3,3,-2,8,6,4,-5,9,8,-6,9,-6,-3,3,-7,-4,-5,2,4,1,-9,-4,-10,10,6,4,-1,4,-9,9,-8,-10,10,8,-3,-3,-4,9,-3,1,5,5,-8,-2,-6,6,-6,6,-10,1,5,-8,-3,2,5,7,1,-8,1,-9,-4,10,3,7,10,7,-2,-4,-1,4,4,-6,1,5,7,-8,10,1,2,7,6,7,10,-6,10,8,9,-10,-9,2,-10,9,8,5,7,-4,-7,-2,4,1,6,-9,-3,-7,3,-10,-10,3,8,10,2,-10,-6,-10,-8,6,8,1,2,8,7,-8,-9,-7,-1,-4,-2,1,-7,-8,-2,1,8,5,-9,-5,1,5,6,-6,-10,7,-7,8,3,-8,-10,7,10,10,-3,6,-10,-3,-3,-1,-3,5,-1,1,10,-9,10,-8,5,10,5,-3,6,-9,-7,6,-1,10,-3,-5,2,-5,7,-3,-3,10,8,1,1,7,-10,-10,3,2,2,-10,1,-9,9,1,-6,8,-6,1,8,-7,-10,-1,6,-10,-1,5,8,-10,-7,-10,2,8,-8,-5,-7,-7,9,2,3,6,-6,6,6,-2,-7,-5,-10,-8,1,7,8,-7,-3,-4,4,-10,10,4,-4,-8,-7,-1,-7,-5,4,6,-5,-1,-3,5,-5,-6,3,-1,-6,-7,4,-10,-8,-9,9,4,-10,2,-10,-1,-2,-7,8,-1,9,-7,-7,-3,-6,-5,10,8,-6,3,9,-8,10,-7,5,3,7,6,9,-7,2,9,-3,1,-9,-5,8,-3,-1,9,10,2,1,1,7,-6,-2,-10,2,-6,6,1,-7,4,-9,-5,-4,8,3,7,9,-1,-8,8,2,3,7,4,10,-1,-1,-8,1,2,7,-6,-5,-7,-7,3,3,9,-9,4,-1,10,9,-10,-6,-6,4,-9,-10,3,5,7,1,-8,1,4,6,5,-2,8,9,-10,10,3,-8,-7,2,9,-2,-6,8,4,-3,-9,-5,-2,-3,-7,-4,2,5,-2,-3,-2,9,-9,-7,-9,3,-5,7,3,4,2,10,-9,-3,-2,4,-3,-2,-10,-5,-1,-8,-5,8,4,7,9,8,-2,8,7,-10,7,-3,2,7,-4,-2,10,8,9,8,5,-5,-8,5,-9,8,-8,2,-8,-5,-5,-3,6,-9,-1,2,-4,6,-4,-9,-7,-6,5,9,8,-6,-1,-8,-4,-2,3,-2,-5,-10,1,-9,-4,5,4,3,-8,-6,1,5,-10,-10,-5,9,3,6,-7,-2,1,-10,-9,-10,5,-7,-10,10,1,1,2,-5,-1,9,-7,9,-6,4,4,-4,8,5,-4,-7,5,-1,2,-4,-7,1,3,4,10,7,-10,5,4,7,3,5,6,6,1,8,-4,4,8,-7,3,-2,-6,-4,-5,8,-7,-7,-10,8,7,-1,-5,-6,-2,9,6,-2,-8,-3,-7,10,-6,4,4,-7,-8,-9,3,5,-8,-5,-6,9,1,-5,-6,2,-6,10,-10,8,-5,-2,2,-8,-2,9,7,-1,1,-9,-3,-1,-9,8,5,-7,2,-3,-7,-9,1,4,-5,8,-1,4,-10,-4,3,-6,9,-1,3,9,4,-8,5,4,-6,-9,1,-4,6,10,1,10,-1,3,6,5,-10,-4,4,-9,2,9,9,6,5,-9,-4,-8,-1,-9,5,-6,7,-1,1,1,-8,-9,-6,-6,-1,-7,1,9,8,-8,2,-7,-7,-9,-10,2,-1,-7,-3,7,-6,-8,2,1,-7,-3,7,7,-10,-10,7,8,-10,6,-8,9,9,-2,-7,3,6,-5,5,4,-10,-6,6,-4,9,-2,-5,10,2,-7,7,-5,5,3,-1,7,-1,8,-7,6,4,-2,10,-3,1,1,1,10,-5,-7,-10,-8,7,10,10,-9,-3,1,2,6,-5,3,5,1,-6,8,3,7,-2,6,-3,6,8,9,-3,-3,-2,-4,8,6,-4,-10,-10,8,5,4,9,-6,-9,-4,8,1,-2,6,2,5,-4,-2,-3,-6,2,-8,2,-7,9,-3,1,-6,1,-4,-3,9,-6,-4,1,9,2,6,1,6,7,8,5,2,7,-1,6,10,2,3,5,-5,-9,-4,-6,-10,-2,-2,2,5,1,2,7,-1,7,10,-6,-3,-8,5,7,-9,-4,6,-5,7,-8,-5,-10,-5,10,9,2,1,10,8,-9,-6,7,3,4,10,-7,-10,3,4,-1,-9,6,7,-6,-3,1,10,-3,2,2,-1,8,6,7,5,4,2,-6,7,-3,6,2,-2,10,-4,5,-1,-9,4,-8,3,-5,-5,-4,-2,3,-1,-6,9,6,-6,9,5,6,-3,8,-8,10,3,-6,-3,5,-3,8,6,-7,8,-2,3,2,-2,-1,5,-4,9,5,10,-9,-10,-6,2,9,-9,-5,-8,-10,9,-1,-7,5,6,10,-2,10,6,8,-1,-10,-7,7,-1,-6,-8,-7,1,-1,-5,-4,9,-9,-3,-7,-6,-9,1,10,10,-6,-2,-5,6,3,-10,8,-2,6,-6,2,-9,6,-4,6,2,-6,7,-7,-1,4,-7,1,-1,-7,-10,-8,-9,-3,-1,-10,-10,-5,-10,-10,5,2,-8,3,2,6,-10,-2,-1,3,3,2,10,8,2,-10,-4,8,5,-1,3,10,-4,-2,9,-4,9,-6,3,-8,4,1,10,7,-1,4,-8,7,9,4,5,2,5,-2,2,3,-7,3,4,-5,-10,8,5,7,-7,6,10,5,-4,4,-8,-3,1,-4,-7,9,8,-5,-7,1,-5,3,2,3,-6,3,3,-10,-3,-1,-1,-8,-10,-6,-5,-10,-3,-8,-2,3,7,3,-4,-6,5,-9,-8,9,-2,-6,3,9,-10,1,7,1,9,-6,8,10,-9,-2,-8,4,8,-8,7,-7,2,8,-9,3,-4,-1,-1,6,1,-7,-2,10,-3,3,6,7,-7,7,-8,3,1,4,6,2,-1,10,-1,3,1,-4,-7,2,9,-9,-4,-9,-10,-9,-5,6,1,7,-6,-6,10,1,2,-1,-7,-8,-7,-7,9,3,-8,-10,-5,-1,-9,8,-6,7,4,-8,8,-3,-2,2,-4,-7,-4,-1,6,-1,-6,4,-8,9,1,-7,5,6,8,-1,2,5,7,-6,8,7,6,6,-4,-8,-4,4,4,-7,7,-5,9,7,-5,-8,10,-9,-7,-2,1,8,6,-3,3,1,9,10,-7,4,2,7,7,10,-10,-9,-2,-6,-8,-9,10,-10,7,9,-7,-5,4,2,-5,-7,7,-8,10,9,3,-10,7,6,-10,-5,-9,-7,-10,6,5,2,9,1,4,-9,8,-1,-1,-7,1,9,4,-3,-9,2,10,4,-4,1,6,4,-1,-7,2,-3,-9,1,10,-6,2,-1,-1,-4,-3,-4,4,1,3,-8,-5,5,5,5,-1,4,-10,6,1,10,-2,3,10,-3,-3,7,-6,-9,-10,6,-7,3,-7,-3,-8,4,-5,7,-10,-2,5,-10,4,10,8,-7,8,4,-10,4,10,-7,-5,-4,-9,10,6,3,-3,-5,-10,-8,4,-4,1,-2,7,7,6,-7,-10,6,-10,7,3,4,6,-4,2,-3,-5,5,4,4,-5,-4,-1,-10,-3,-2,-1,-10,6,7,1,2,-7,-9,-1,3,-5,1,-1,-5,-2,-1,-3,9,-6,-7,6,-4,-8,-4,-6,-5,5,-7,10,9,10,4,10,1,10,2,1,9,-10,8,-1,9,2,-2,-9,-4,-2,10,-2,9,-1,7,8,-3,10,-6,-6,-7,-10,-3,-4,8,5,-10,-1,8,4,5,-1,2,-10,4,-3,6,-2,2,6,-3,-8,-10,4,2,-3,-9,5,-8,10,-3,-3,-6,-10,2,-10,8,8,6,4,-1,5,3,-3,-5,3,6,8,2,2,-1,8,10,-7,-1,6,-10,-2,-1,4,-10,5,-4,9,1,1,-4,3,-7,10,-1,-10,7,6,6,7,8,3,-7,9,4,1,-8,-1,5,3,-8,-9,-4,7,4,8,-6,-5,3,-10,-3,-6,5,6,-9,-6,-1,-3,9,-6,4,6,-5,2,4,-7,-4,7,-10,-9,-1,7,-1,8,-2,4,10,-5,-2,5,2,-2,4,-6,-2,3,-2,-5,3,-1,-8,1,5,-3,5,-3,-9,-3,-4,-7,-6,10,-1,8,-10,8,-6,-8,-7,9,10,-10,9,-1,-4,1,-1,7,8,7,-6,6,6,-4,4,6,5,2,-1,9,3,7,-1,-5,10,4,7,-10,3,-7,-5,-2,8,6,-7,7,3,2,-10,2,7,8,8,-8,-1,-10,7,-9,-6,-6,-10,-2,9,-8,1,9,-7,-3,-6,-10,5,3,1,-6,-7,-1,7,9,-9,5,8,-9,2,4,4,-4,3,10,-9,5,9,2,-9,-10,-9,-10,10,6,3,1,-3,6,-4,1,1,1,2,-5,-6,1,1,-4,1,4,-1,1,2,1,-4,-9,-10,6,-4,5,6,-5,7,8,1,-2,-7,-8,2,4,2,10,4,4,-7,-7,-6,9,-6,-1,-7,1,8,4,9,-6,1,-4,2,-4,8,-9,6,10,-5,10,6,7,-3,5,-8,4,7,-4,-8,7,2,2,5,1,-3,-3,2,-4,-2,-6,2,-10,6,9,2,9,3,1,3,10,-3,-4,5,-10,9,-7,-6,1,1,-7,5,7,9,-7,-10,-6,-10,-9,-10,-3,-5,-1,5,2,-9,1,6,1,-7,-6,5,-1,-4], dtype = "int32")#candidate|3202|(2002,)|const|int32
call_3201 = relay.TupleGetItem(func_2608_call(relay.reshape(const_3202.astype('int32'), [2002,])), 4)
call_3203 = relay.TupleGetItem(func_2610_call(relay.reshape(const_3202.astype('int32'), [2002,])), 4)
output = relay.Tuple([call_3196,call_3201,const_3202,])
output2 = relay.Tuple([call_3197,call_3203,const_3202,])
func_3209 = relay.Function([], output)
mod['func_3209'] = func_3209
mod = relay.transform.InferType()(mod)
output = func_3209()
func_3210 = relay.Function([], output)
mutated_mod['func_3210'] = func_3210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mod.get_global_var('func_2796')
func_2798_call = mutated_mod.get_global_var('func_2798')
call_3262 = func_2796_call()
call_3263 = func_2796_call()
output = relay.Tuple([call_3262,])
output2 = relay.Tuple([call_3263,])
func_3270 = relay.Function([], output)
mod['func_3270'] = func_3270
mod = relay.transform.InferType()(mod)
mutated_mod['func_3270'] = func_3270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3270_call = mutated_mod.get_global_var('func_3270')
call_3271 = func_3270_call()
output = call_3271
func_3272 = relay.Function([], output)
mutated_mod['func_3272'] = func_3272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_3305 = func_2553_call()
call_3306 = func_2553_call()
func_1728_call = mod.get_global_var('func_1728')
func_1733_call = mutated_mod.get_global_var('func_1733')
var_3313 = relay.var("var_3313", dtype = "int32", shape = (2002,))#candidate|3313|(2002,)|var|int32
call_3312 = func_1728_call(relay.reshape(var_3313.astype('int32'), [13, 11, 14]), relay.reshape(var_3313.astype('int32'), [13, 11, 14]), relay.reshape(var_3313.astype('int32'), [13, 11, 14]), )
call_3314 = func_1728_call(relay.reshape(var_3313.astype('int32'), [13, 11, 14]), relay.reshape(var_3313.astype('int32'), [13, 11, 14]), relay.reshape(var_3313.astype('int32'), [13, 11, 14]), )
func_2768_call = mod.get_global_var('func_2768')
func_2772_call = mutated_mod.get_global_var('func_2772')
const_3324 = relay.const([-4,-10,-9,5,-10,8,9,1,10,-10,-10,5,9,-10,-10,10,3,7,4,3,6,4,-7,5,-10,-6,1,8,9,-3,-4,5,6,-9,-3,4,2,-5,5,-10,-6,-5,-8,-4,-2,-10,-3,4,-6,-2,5,-10,-6,-10,4,3,-6,6,-3,5,-9,-2,9,-4,2,5,1,-6,8,-7,-8,4,-1,2,-1,9,-9,6,10,-2,-5,-10,2,-5,-4,5,-3,5,-7,5,-3,10,7,1,-6,-10,10,9,-5,-2,-7,10,6,-1,4,3,-2,9,-8,9,-3,-9,8,-5,-2,-4,4,8,-1,2,-7,-1,7,10,-2,3,7,-8,-10,8,10,1,-5,-3,-8,-2,-10,-3,4,-4], dtype = "int32")#candidate|3324|(140,)|const|int32
const_3325 = relay.const([6.404961,0.052509,7.549753,-0.668397,-5.997997,3.444425,4.804721,4.116068,-0.574261,9.886605,7.106536,-1.580848,-6.226048,-9.199662,-7.015512,2.208782,1.621922,8.821528,-5.157035,-2.406795,-1.889684,0.483041,5.545017,-0.712190,-5.660253,3.274979,7.380153,5.874600,-0.960526,1.595262,-5.525945,-0.299984,-1.035287,1.345852,-9.820207,9.791939,8.706879,-3.110867,2.009147,-9.163120,7.073348,9.318838,5.139442,-8.516068,3.478244,-7.908920,-7.961227,6.044504,-6.966056,3.777654,3.460373,-5.610504,8.309345,8.813291,2.961554,-3.700500,0.520962,5.582374,1.385878,-8.880706,-4.706606,-4.308399,-6.255163,3.332432,-6.488692,0.618855,9.972971,-7.196587,-8.926144,-2.092581,3.889478,-2.663465,-1.885285,6.332212,4.079780,-6.139463,-7.401593,-5.779851,4.987712,-6.985401,-4.777979,3.448193,6.008606,-7.137978,4.465533,9.169099,-4.934292,1.227111,6.478163,-6.865740,-0.169393,-4.528424,3.910295,3.511638,-1.578273,2.378402,1.982104,4.019673,-8.763438,7.096474,-4.104043,3.807747,-6.115559,0.739618,6.117059,0.877894,7.545795,0.199017,-9.975802,4.897901,-9.481468,-8.600714,0.152217,-6.659700,1.091079,8.782421,-6.236696,-2.737622,7.660335,-2.784981,5.195361,-5.081420,-8.859092,-1.570373,1.570619,3.669473,-3.073661,2.949869,9.480510,8.351813,1.851764,-2.590705,5.712187,5.212893,0.761075,-5.573940,8.300878,1.974388,-8.740131,-9.995918,5.067374,4.923091,6.080019,6.067351,-8.167944,-7.972111,7.040911,0.926113,0.628884,7.138661,-9.571437,-8.794188,-7.630396,9.073372,9.330059,-5.502983,-0.069717,-8.216078,2.884668,-2.611678,-2.962646,5.889045,-6.405619,2.407959,9.419452,-6.668559,-0.888462,1.807287,-8.442537,3.936245,5.945311,-8.958605,6.988807,1.458978,-9.684282,-5.074459,-0.162975,-9.914502,-2.937575,2.319391,-5.748796,8.933866,-5.487358,4.416142,-3.087561,-4.807480,2.731889,2.991458,7.361114,9.191245,-9.197364,-7.713638,1.356087,5.951647,-5.530226,-6.864395,-1.870504,4.671128,-4.766983,0.112806,4.710693,-9.052660,-6.038087,1.040005,3.519190,4.985490,-4.479368,-9.087548,-1.305032,5.335162,-9.228537,7.630936,-6.728329,9.776064,-4.877613,7.243570,-9.039717,-5.923860,6.224739,-5.376447,-7.955886,-0.442355,-8.563383,-4.794765,1.557037,4.134625,4.168127,-7.135860,-3.039095,5.344036,5.152300,-6.501925,-6.438825,-8.364406,2.584051,-7.366822,3.175545,-4.834458,-4.973696,-3.955465,0.959387,0.766628,9.806040,-6.919692,-6.931636,-8.269612,-8.105395,1.839544,8.248150,-6.045698,4.749734,-3.248721,2.005962,-8.045596,8.858195,0.251439,-4.992124,-9.646008,2.510707,2.471687,-4.002364,6.951052,2.673296,8.383080,-4.322138,3.664902,2.517140,-5.465509,-6.023793,-5.879641,-2.361936,-2.660503,-6.333982,-2.887718,6.561497,9.567777,6.847271,-8.281062,-1.729397,7.297307,3.349218,-9.854856,-3.822437,-1.353936,9.082472,-2.052057,-6.564619,-1.052650,7.693587,-5.550954,5.545153,-0.991830,-7.284353,9.028367,7.646546,-4.476947,7.631420,5.498503,4.975145,-6.795608,-3.568038,-8.292712,-4.482363,6.606607,1.362165,-9.169404,-2.712133,1.726022,-6.574089,6.052794,8.586019,-7.722851,-9.623874,-7.443121,3.963128,-0.988630,-3.432993,5.274739,7.234343,-7.493535,-6.618436,9.807381,-0.069620,-9.436395,6.371782,-0.009430,2.991193,0.562296,-8.573017,7.972911,2.713981,5.779192,8.816015,-9.054656,5.048966,3.945773,0.048519,-4.651013,-2.799365,-6.964647,-4.129254,-4.472059,-2.157266,1.626413,-5.901497,-8.962811,-5.017046,8.106258,-5.944633,1.875836,-6.818363,-5.776686,6.539311,1.691691,9.725716,-0.506892,-5.742739,3.972074,-3.240003,1.175395,1.945263,-4.404804,1.938940,7.803067,2.716366,-3.903194,-7.295764,-0.256057,8.552098,3.863994,9.052375,9.372606,-6.369773,-1.327539,2.455665,8.258579,-1.284144,0.054887,7.935155,9.038384,6.539253,8.850326,-7.873024,7.569223,1.183812,-8.832361,-7.301115,3.109894,-7.218947,-7.523950,1.207418,0.287486,3.280275,-0.485540,4.605754,-7.714744,4.897788,-4.325943,5.070996,2.508929,-9.986130,5.779277,0.025570,-2.720715,0.936814,-6.376595,-8.687825,-0.313804,-7.484400,8.445433,-0.645615,-9.599093,7.617528,-2.501411,-0.994551,9.825636,4.064905,-7.033706,0.741568,3.641075,4.938155,-3.986037,5.115796,2.802205,4.369428,3.524340,-5.233283,5.737170,7.296155,-2.648448,2.689186,-0.893781,6.027075,-7.331507,1.224173,9.790911,5.112399,7.931694,-1.617012,-9.214827,7.977686,7.426461,0.160009,6.529976,-6.318435,-6.840807,0.016459,1.036322,6.004350,-3.374746,8.023890,9.570399,0.675410,0.791676,-5.352035,2.291834,2.427230,2.084345,8.157631,8.560612,1.907853,8.579992,3.860347,6.591750,-5.640279,5.774251,7.029727,-7.805458,9.412570,-6.644894,6.171259,0.597457,-2.693875,3.143182,4.240623,-2.537286,7.461259,-5.867868,-4.264243,3.056514,1.099865,-4.421481,-9.174064,4.352249,-6.651271,0.419712,3.488061,-0.883501,5.191774,7.624948,9.360553,3.001230,1.510285,1.033982,1.854769,6.461453,3.993287,8.801569,-6.426570,-7.838753,-6.880686,4.473268,-1.328740,-0.658574,2.364231,1.043035,7.443200,8.021457,-7.443725,-3.452698,-5.658586,-4.054193,5.790549,0.835275,-1.030359,-6.749107,7.363702,-4.461593,4.262873,0.721066,-4.125256,4.140931,-2.281720,-5.477065,0.772507,-5.125954,-2.938016,-1.268443,6.870231,-5.953601,2.139383,-7.178460,-2.580228,-0.652662,7.059305,-1.638537,-0.991619,5.106351,0.728797,0.135094,-5.852055,-4.223332,-7.713171,-7.158408,-9.488714,5.950977,8.621672,-1.168573,-2.711900,-2.681351,-4.022546,7.463645,-4.296603,9.287433,2.164606,9.245296,1.291404,-1.138639,-2.258252,1.202348,4.265742,-4.847575,-4.246840,-5.181383,2.363724,6.772082,-9.948252,5.461436,4.257201,-7.296931,9.620185,5.631969,2.848784,2.225180,-7.033606,-1.629528,8.803245,8.579931,9.093807,5.641497,-1.492434,-5.533170,7.208356,5.163221,8.155548,8.626327,9.318133,2.299715,2.236156,-3.414915,6.832551,7.894827,9.848412,-8.450310,0.267495,-3.734466,-4.020212,-4.420210,-6.817169,7.313191,0.688824,-2.763759,1.908290,5.366381,-2.761090,-2.738102,-3.830205,0.712299,-0.882001,-2.611829,6.045629,5.810661,8.637762,0.261207,-8.999768,8.802030,-1.180694,-2.953813,0.122683,-4.908109,-5.005052,1.307526,-4.453112,-5.894040,6.287322,-7.129943,3.994940,-0.844146,7.712669,-5.140375,-1.649375,3.006127,-5.213436,-2.673917,1.221432,2.046427,-8.167202,-9.115917,3.782230,1.281188,7.258239,9.717170,-3.801237,-4.655960,-8.116694,3.332071,-3.225720,7.278149,-9.590429,6.219726,-7.130665,2.728193,0.092568,9.610853,6.257202,8.052362,1.249188,0.044702,9.936342,1.064417,4.836460,-1.157710,-7.752534,-8.973151,-9.980325,-2.420532,-5.590234,0.553644,-0.216171,3.504739,6.805199,-6.641513,4.362455,-9.782048,3.462948,-4.926886,-7.765410,4.253621,-0.720045,-1.244859,5.823195,1.474548,-7.092931,5.813354,-2.279420,-5.894388,-4.123112,-1.483605,0.245456,-1.181078,-0.809846,2.870331,5.291178,8.063184,-6.549529,-4.450254,3.760729,6.529381,-8.351663,-4.453389,5.043299,7.518014,4.975576,-6.399225,-6.219191,-0.889930,3.249155,-0.435952,-9.853879,0.683234,3.436980,-5.724534,3.080170,-7.725911,-0.395805,-0.597587,-9.087037,0.893789,5.045230,-8.922422,-0.648884,4.054460,-0.006483,5.574832,7.450014,3.956104,-2.841702,1.968498,4.350997,-5.221379,-6.102023,-1.208119,-7.383028,6.147330,0.459318,0.938674,-2.568038,7.230356,-7.076319,2.253915,9.983789,-0.989331,-3.378135,-6.591967,-0.181340,0.174092,0.643958,8.439889,-0.248540,-3.141798,-0.482159,1.912976,-6.616696,8.609244,4.339742,-8.786908,6.480454,4.167956,1.569073,5.182381,-5.583669,-0.733903,-3.697781,6.713073,-4.533172,-4.191389,7.336709,5.126050,4.068021,8.879200,0.722430,0.044592,-6.908612,-2.311050,-0.099337,7.965158,1.672052,9.702537,6.866502,-7.554475,-7.803337,-0.845967,-1.486641,7.176524,-9.585421,2.761402,-7.882480,-8.360654,6.792978,-9.093789,9.741158,-0.969755,-5.465289,-7.783696,-4.294818,0.991668,-9.250264,-8.205609,-8.447402,-0.367498,-3.759741,-1.456145,-9.577904,-2.110575,-3.020939,-7.214637,-0.146915,-4.694798,-9.319905,5.341034,8.326124,8.641340,-4.986460,-5.572979,8.795829,-1.486737,-1.623613,-6.605063,7.677318,-2.081284,-5.409314,5.183618,6.739322,1.612848,1.830997,-6.595673,4.469451,-4.618071,-4.999764,-1.416895,8.889643,3.111724,-7.723140,-5.643651,-4.697418,9.903774,5.635418,-2.095909,-4.725041,-9.500182,-5.278371,-6.816509,-8.801448,6.258668,7.225986,-2.103854,-2.393341,7.375306,-4.396959,1.846060,-3.740028,5.874587,2.349709,7.611140,6.820141,1.709966,-8.382950,1.222670,-1.842617,9.965749,7.854713,-1.694077,-8.238118,-4.024820,-2.669820,2.202191,-1.659034,-0.243570,-8.318211,1.717198,-0.322171,9.684477,-9.692473,4.341794,-8.437264,-4.155730,8.051935,9.479751,-9.824463,-1.819443,3.282236,-9.014092,-5.962426,-9.402624,-3.506762,-6.147066,-5.108504,0.246497,-2.717587,-5.835228,-0.463591,-6.158150,8.122135,7.397634,9.544462,-7.251114,2.800833,-5.383106,-2.913160,2.619993,-2.327899,5.127351,3.083840,4.667632,1.348236,-2.922143,9.797128,3.870707,1.759763,-0.915438,-6.250565,6.805926,3.355816,8.435691,-0.776611,-8.438126,-4.962120,-4.067551,6.473005,-3.714518,2.139307,-4.801041,1.866825,9.190769,-9.895688,-9.700226,2.789918,-5.438743,2.953634,-4.684762,-8.147032,4.796308,-1.306299,8.240013,8.643634,-9.000244,-1.196207,5.685693,6.393941,-5.691363,3.390472,-7.674749,4.278800,0.842145,3.603385,-1.020087,3.923987,-6.168412,6.258721,0.815259,9.518097,3.673649,-1.532959,-9.102933,-0.617266,9.726111,1.309387,-5.070643,-6.803205,5.692015,4.937675,-8.186231,6.660247,-6.004199,-2.735584,-7.924752,6.334072,8.045599,-8.093755,9.751411,0.787767,-7.483582,3.956906,3.504307,8.136648,9.370419,-0.073544,8.012335,-5.194700,6.196115,9.558869,1.800669,0.988197,-8.456593,-0.257766,-1.646748,-0.127259,-1.078744,2.246697,8.366867,-8.732719,4.577698,-2.262612,2.951668,-5.715352,8.312578,-7.208020,7.418299,-7.511447,9.835041,9.429560,-5.945586,0.371300,2.653337,-2.842524,3.020664,9.244195,7.430041,4.710640,9.626479,2.591123,1.022967,7.973449,-7.738149,-9.152362,-3.549507,1.903069,0.717892,2.146346,-9.795196,1.294866,-6.355728,-5.043532,8.800221,-8.174257,-6.906847,4.344496,5.708614,-5.302516,-1.200045,-6.625484,-3.981539,7.814154,-6.102424,0.603496,-6.642085,-5.125754,8.582915,9.814265,-7.352272,6.733272,8.958843,-6.739253,9.575683,-7.685618,1.019269,-7.859320,7.477874,8.226829,-3.539294,-8.284455,6.044706,-4.212198,9.522286,1.495273,4.974582,-2.156756,-7.510961,-7.004294,3.694559,2.829403,9.798836,4.744512,-3.646039,-1.845965,6.859037,0.266116,2.869268,8.914997,2.942346,-0.125684,-6.898710,-3.031947,0.998522,-6.722746,9.553666,9.925224,-6.734582,8.024646,9.164126,2.533539,-0.349056,6.359333,-7.312607,7.650153,-2.265116,8.278603,-7.806655,0.367947,-9.298948,2.082575,6.420482,-7.835287,5.222147,-0.223933,1.324900,6.844872,3.753910,9.526160,5.246911,3.950531,-3.390935,-8.108888,-5.835611,-1.832622,-1.070385,1.366904,-3.971110,3.049408,5.684791,-0.494661,0.242750,9.965464,-9.052142,7.794945,6.833614,6.666905,3.560405,-8.112851,8.031895,-9.174255,-0.057787,-1.920988,4.440147,-2.963238,5.836037,4.491851,-7.163054,7.239548,0.458613,7.619353,-5.664960,-5.859610,-0.573826,0.662709,6.185803,4.518954,2.986164,-6.355484,9.974846,-9.683059,5.873065,-6.247734,-6.957333,-0.855850,-8.606561,-0.685589,1.899511,-1.747001,6.756043,3.865723,1.227136,1.685534,-0.987210,7.060980,-8.976484,2.684725,5.861997,-6.118306,4.367773,4.334229,-9.277661,-0.812982,-7.093737,2.098454,7.355656,-8.151266,-5.184474,7.873968,0.697360,-3.758418,-2.448251,1.404719,1.510603,9.775273,-1.976860,-2.110020,-3.738418,-9.111938,2.648157,7.509718,1.898301,4.196476,0.642814,-1.599362,8.837201,-2.888779,-8.059257,5.007606,6.252550,9.877729,4.502948,-7.101679,-8.854160,-0.568267,9.658046,-5.054012,3.029984,-7.513526,0.003863,9.781054,3.295072,-2.080947,8.336491,-7.081684,1.312995,2.409593,4.650727,-4.485807,-6.031550,-1.394140,-6.162365,-8.907333,-5.032415,-1.585635,-0.470504,9.828288,-0.746636,7.038748,4.104688,-0.260238,9.279736,-3.574687,-0.868127,2.921941,6.447865,-1.455775,-4.281093,-8.939679,0.924132,-9.294978,-2.517621,4.251003,-8.643014,0.302943,-8.533928,-3.754266,3.615917,0.274693,3.060151,-6.944557,-3.800833,7.814490,-5.356319,8.913815,-3.173333,4.783026,5.803653,8.747837,3.669847,-1.064101,3.872499,-2.247063,8.513506,-4.128470,-8.347142,6.419153,1.696270,5.699688,-9.830666,7.506399,1.711426,-5.766811,5.137039,-1.872110,-4.085136,5.928865,8.710275,-4.851127,2.563219,3.071937,3.958734,-2.414814,0.618745,-6.664464,-7.511711,3.960386,-4.480919,2.719977,7.805931,5.396146,-8.523972,5.484932,-2.989935,-5.664771,-6.613062,7.882190], dtype = "float32")#candidate|3325|(1287,)|const|float32
call_3323 = relay.TupleGetItem(func_2768_call(relay.reshape(const_3324.astype('int32'), [140,]), relay.reshape(call_3312.astype('int32'), [2002,]), relay.reshape(const_3325.astype('float32'), [117, 11]), ), 7)
call_3326 = relay.TupleGetItem(func_2772_call(relay.reshape(const_3324.astype('int32'), [140,]), relay.reshape(call_3312.astype('int32'), [2002,]), relay.reshape(const_3325.astype('float32'), [117, 11]), ), 7)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_3327 = relay.TupleGetItem(func_2502_call(), 0)
call_3328 = relay.TupleGetItem(func_2503_call(), 0)
output = relay.Tuple([call_3305,call_3312,var_3313,call_3323,const_3324,const_3325,call_3327,])
output2 = relay.Tuple([call_3306,call_3314,var_3313,call_3326,const_3324,const_3325,call_3328,])
func_3331 = relay.Function([var_3313,], output)
mod['func_3331'] = func_3331
mod = relay.transform.InferType()(mod)
mutated_mod['func_3331'] = func_3331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3332 = relay.var("var_3332", dtype = "int32", shape = (2002,))#candidate|3332|(2002,)|var|int32
func_3331_call = mutated_mod.get_global_var('func_3331')
call_3333 = func_3331_call(var_3332)
output = call_3333
func_3334 = relay.Function([var_3332], output)
mutated_mod['func_3334'] = func_3334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3210_call = mutated_mod.get_global_var('func_3210')
call_3386 = relay.TupleGetItem(func_3209_call(), 2)
call_3387 = relay.TupleGetItem(func_3210_call(), 2)
output = relay.Tuple([call_3386,])
output2 = relay.Tuple([call_3387,])
func_3388 = relay.Function([], output)
mod['func_3388'] = func_3388
mod = relay.transform.InferType()(mod)
mutated_mod['func_3388'] = func_3388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mutated_mod.get_global_var('func_3388')
call_3389 = func_3388_call()
output = call_3389
func_3390 = relay.Function([], output)
mutated_mod['func_3390'] = func_3390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2839_call = mod.get_global_var('func_2839')
func_2841_call = mutated_mod.get_global_var('func_2841')
call_3404 = func_2839_call()
call_3405 = func_2839_call()
output = relay.Tuple([call_3404,])
output2 = relay.Tuple([call_3405,])
func_3431 = relay.Function([], output)
mod['func_3431'] = func_3431
mod = relay.transform.InferType()(mod)
output = func_3431()
func_3432 = relay.Function([], output)
mutated_mod['func_3432'] = func_3432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mod.get_global_var('func_3388')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_3449 = relay.TupleGetItem(func_3388_call(), 0)
call_3450 = relay.TupleGetItem(func_3390_call(), 0)
var_3459 = relay.var("var_3459", dtype = "int32", shape = (2002,))#candidate|3459|(2002,)|var|int32
bop_3460 = relay.multiply(call_3449.astype('float32'), relay.reshape(var_3459.astype('float32'), relay.shape_of(call_3449))) # shape=(2002,)
bop_3463 = relay.multiply(call_3450.astype('float32'), relay.reshape(var_3459.astype('float32'), relay.shape_of(call_3450))) # shape=(2002,)
func_1491_call = mod.get_global_var('func_1491')
func_1493_call = mutated_mod.get_global_var('func_1493')
var_3465 = relay.var("var_3465", dtype = "int16", shape = (176,))#candidate|3465|(176,)|var|int16
call_3464 = relay.TupleGetItem(func_1491_call(relay.reshape(var_3465.astype('int16'), [176,])), 1)
call_3466 = relay.TupleGetItem(func_1493_call(relay.reshape(var_3465.astype('int16'), [176,])), 1)
uop_3468 = relay.sinh(call_3449.astype('float32')) # shape=(2002,)
uop_3470 = relay.sinh(call_3450.astype('float32')) # shape=(2002,)
bop_3476 = relay.bitwise_or(uop_3468.astype('uint64'), relay.reshape(bop_3460.astype('uint64'), relay.shape_of(uop_3468))) # shape=(2002,)
bop_3479 = relay.bitwise_or(uop_3470.astype('uint64'), relay.reshape(bop_3463.astype('uint64'), relay.shape_of(uop_3470))) # shape=(2002,)
func_3388_call = mod.get_global_var('func_3388')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_3488 = relay.TupleGetItem(func_3388_call(), 0)
call_3489 = relay.TupleGetItem(func_3390_call(), 0)
output = relay.Tuple([call_3464,var_3465,bop_3476,call_3488,])
output2 = relay.Tuple([call_3466,var_3465,bop_3479,call_3489,])
func_3498 = relay.Function([var_3459,var_3465,], output)
mod['func_3498'] = func_3498
mod = relay.transform.InferType()(mod)
var_3499 = relay.var("var_3499", dtype = "int32", shape = (2002,))#candidate|3499|(2002,)|var|int32
var_3500 = relay.var("var_3500", dtype = "int16", shape = (176,))#candidate|3500|(176,)|var|int16
output = func_3498(var_3499,var_3500,)
func_3501 = relay.Function([var_3499,var_3500,], output)
mutated_mod['func_3501'] = func_3501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2670_call = mod.get_global_var('func_2670')
func_2671_call = mutated_mod.get_global_var('func_2671')
call_3514 = func_2670_call()
call_3515 = func_2670_call()
output = call_3514
output2 = call_3515
func_3517 = relay.Function([], output)
mod['func_3517'] = func_3517
mod = relay.transform.InferType()(mod)
output = func_3517()
func_3518 = relay.Function([], output)
mutated_mod['func_3518'] = func_3518
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3533 = relay.const([[[5,3,-3,-5,2,2,-5,7,1,-7,8,8],[7,-4,8,-8,-3,4,-3,-8,6,-2,6,-8]],[[1,-1,3,4,1,-4,10,-2,2,-1,-3,-10],[1,-10,5,-6,-3,-5,10,-8,-7,-10,4,-2]],[[-5,3,-1,7,-7,1,-4,8,7,4,1,8],[4,-5,-7,-5,9,10,-1,4,-5,1,3,7]],[[-3,7,2,-1,1,-5,2,-9,-7,3,-8,-7],[-9,2,-8,-1,-9,6,-2,-10,-3,-1,6,-8]],[[-1,-5,7,3,2,9,6,2,8,9,-3,5],[7,-4,6,-9,4,-9,6,6,-9,8,5,-3]],[[8,-3,4,-8,1,-5,6,5,8,9,-6,-1],[-10,-2,-1,-5,8,9,-5,-2,-10,7,-3,-6]],[[-6,4,-9,-1,-8,-3,-8,7,8,8,4,4],[-1,10,3,4,10,-5,4,10,-9,-10,-3,2]],[[4,7,-4,-2,3,-8,7,-8,-1,-7,-9,7],[-10,-4,6,4,-10,10,1,-10,5,3,-1,10]],[[-5,6,-2,3,-10,2,-5,-7,-7,-10,10,-5],[9,8,8,-1,-5,-7,10,8,9,7,8,10]],[[1,-6,-3,8,8,3,4,-8,-2,5,-7,3],[4,-1,-6,-8,2,-9,-4,6,-1,-5,-2,1]],[[10,-8,-8,2,-1,-4,3,-3,5,-9,-9,10],[-3,-4,-10,10,2,6,1,3,2,-10,-9,-1]],[[6,-3,4,-4,8,5,-4,9,-5,7,-4,7],[-8,-2,-9,-3,-2,8,10,6,-2,8,-6,-2]],[[-2,6,-9,-4,9,6,-9,-2,3,-1,-4,5],[-8,9,-1,-4,2,-1,-2,-10,10,-8,2,4]],[[-2,2,-1,-1,1,-4,3,-5,9,-7,-10,-3],[-2,-1,-3,-4,1,-2,-5,3,4,-8,5,-3]]], dtype = "int32")#candidate|3533|(14, 2, 12)|const|int32
const_3534 = relay.const([[[2,9,-8,3,-2,-3,-3,8,9,-5,-6,-6],[9,6,8,10,-6,7,9,-5,-8,-9,7,-5]],[[1,-1,-2,7,1,-5,-5,-6,-5,4,5,-7],[8,-8,-7,-3,-2,-5,-1,8,-8,-10,10,-4]],[[1,1,7,-10,7,-2,-10,-3,9,-9,-10,2],[-1,-1,-10,-6,-4,8,-6,-10,6,-7,7,1]],[[10,8,-8,-8,-5,-10,7,-8,6,4,-6,-6],[6,-1,5,-1,-1,-5,-9,7,-5,1,-6,2]],[[-4,-3,1,-3,3,10,-5,3,9,-4,-10,-4],[-10,6,3,6,-4,-8,-8,-4,2,-9,4,-2]],[[1,-3,6,7,-2,2,10,-3,-6,-3,-1,-5],[10,9,-7,7,8,8,-9,10,7,9,1,-6]],[[-2,-3,-6,5,4,10,-8,1,8,9,-4,1],[2,-1,-3,-2,-5,-9,5,7,-9,-3,3,-2]],[[-3,10,-2,9,2,-9,-8,-1,7,-6,-5,4],[-9,2,8,6,-5,-9,9,2,-1,-8,3,-5]],[[-1,-3,-5,10,-3,-7,6,-4,-10,-9,4,-2],[-2,5,-2,-6,-1,-9,7,10,2,4,-1,-1]],[[3,1,3,2,6,1,-8,-2,5,3,3,-3],[-1,4,-5,-6,-9,6,2,7,7,-7,2,-4]],[[-3,8,-10,-2,8,-6,3,9,-9,-3,-7,9],[6,-9,-5,7,9,1,-8,4,-1,7,10,-7]],[[5,10,-10,-5,4,5,6,7,-9,9,-3,3],[1,7,8,-2,4,4,-2,-10,-3,-6,-9,6]],[[-3,-7,-8,-10,10,2,-3,-2,8,-1,-5,7],[-8,-6,-7,-6,9,-7,-2,6,4,2,4,-4]],[[-2,-3,6,6,2,-2,6,9,1,-2,5,-7],[-6,6,-4,4,-7,-4,6,6,4,9,8,-5]]], dtype = "int32")#candidate|3534|(14, 2, 12)|const|int32
bop_3535 = relay.logical_xor(const_3533.astype('int32'), relay.reshape(const_3534.astype('int32'), relay.shape_of(const_3533))) # shape=(14, 2, 12)
output = bop_3535
output2 = bop_3535
func_3543 = relay.Function([], output)
mod['func_3543'] = func_3543
mod = relay.transform.InferType()(mod)
mutated_mod['func_3543'] = func_3543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3543_call = mutated_mod.get_global_var('func_3543')
call_3544 = func_3543_call()
output = call_3544
func_3545 = relay.Function([], output)
mutated_mod['func_3545'] = func_3545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_3569 = relay.TupleGetItem(func_2502_call(), 0)
call_3570 = relay.TupleGetItem(func_2503_call(), 0)
func_2737_call = mod.get_global_var('func_2737')
func_2738_call = mutated_mod.get_global_var('func_2738')
call_3584 = relay.TupleGetItem(func_2737_call(), 0)
call_3585 = relay.TupleGetItem(func_2738_call(), 0)
const_3601 = relay.const([[[5.021915,0.165183,-3.704078,4.770082],[-5.910331,-0.006040,8.794846,1.971686],[8.292252,-4.469286,-0.395940,-9.599818],[-2.946602,5.474260,9.072076,9.474041],[8.445371,0.465299,3.561240,-0.900566],[-7.734405,0.117803,6.399128,4.001037],[2.071543,3.660232,-7.599875,7.511873],[8.584877,6.841889,-5.965937,-2.179382],[-3.587796,9.658277,-3.842135,8.758846],[-8.888204,-9.617142,-3.813247,-6.771114],[9.225968,6.491702,8.082014,-8.275325],[9.661385,7.085010,-7.873371,9.903180],[6.297347,-6.313278,2.780815,-5.885074],[2.099479,6.503143,-9.176943,1.478704],[3.773187,3.341843,2.679175,-2.013471]],[[-8.626185,-2.583314,1.746098,4.935090],[3.723965,-0.584582,3.502673,-6.362700],[4.990766,-8.754613,-2.042524,2.995431],[8.693614,-5.834212,-3.159751,8.944820],[7.557830,5.671936,-5.725790,1.222538],[-4.943288,-9.910075,6.330290,-8.551098],[-4.304449,-6.473384,-1.802867,-9.822594],[0.905489,4.732035,0.434330,-8.236258],[-0.531551,6.117415,-7.608471,-5.773523],[-3.451125,-0.611199,-9.718194,-3.396848],[-5.071080,0.481374,-9.025569,-7.575817],[-9.459149,0.020694,-7.929442,-3.710066],[9.965482,7.995314,6.052695,1.984770],[-9.601428,0.182924,-5.268816,9.670942],[-9.472668,-6.044729,4.231156,-0.279454]],[[-8.232772,1.453356,8.807819,1.727376],[-7.782890,-5.395237,3.107572,4.090869],[-2.951477,-1.627097,6.330521,8.657164],[-6.929235,-7.484654,-8.680725,3.785119],[4.359028,1.152038,9.012100,0.447089],[-6.728166,2.712461,1.198320,4.482373],[6.748967,0.732736,-4.977462,-6.860238],[-9.082922,-1.284739,-0.933542,4.421649],[-1.486433,-7.718621,5.725850,9.203811],[-9.787527,5.845647,-2.991670,7.371897],[-0.339474,-9.119589,4.233001,3.880065],[8.733809,-8.334186,-8.769633,4.513926],[-4.442087,-6.117200,-7.538900,8.733354],[-8.034658,-4.302913,-4.370156,-3.059235],[-6.256130,4.068400,3.748505,7.137926]],[[-8.906326,-1.890620,6.552537,0.310430],[-3.016858,-9.523161,-9.539525,1.664507],[-5.813626,4.411940,8.123658,-3.673696],[-2.397108,9.272286,-3.639041,-8.282910],[-0.403242,3.005130,4.437536,0.768607],[-7.890657,-6.801010,-6.637430,6.250421],[0.996769,0.187629,-2.892311,5.749131],[7.711706,1.123311,6.010371,-2.337744],[-3.533865,-8.099488,-7.992165,8.021722],[3.784092,4.048803,2.681901,-3.026964],[0.517419,5.318518,5.136729,-6.453027],[3.536154,3.129412,-3.271702,-8.607020],[9.085483,-0.350545,6.336749,2.892321],[9.629231,-6.247545,2.873843,2.478839],[-9.896990,0.587552,1.096748,-9.072794]],[[2.446223,-9.160665,5.476679,-2.978766],[9.867344,-8.132107,4.677443,4.166714],[1.833265,8.611304,-3.585055,7.219557],[-6.494645,7.920370,5.343802,-4.559507],[5.777444,-8.306480,-1.650209,0.328400],[6.566532,-2.670173,4.257522,6.768560],[8.748796,-5.838400,5.186789,-4.416278],[-8.358640,-8.879380,5.829418,-7.279945],[7.521397,1.649003,3.980701,3.400063],[-6.325170,6.824983,9.395511,-3.932483],[-7.719276,-0.796690,4.307979,3.846039],[-7.232407,8.204452,-1.415550,-4.529410],[-5.912356,1.344412,0.718472,-5.991293],[-8.741184,2.757295,-7.899502,-5.876254],[-6.290398,-8.255846,2.864903,0.329415]],[[7.857936,3.763224,-6.819048,1.858558],[0.331817,1.933731,8.220326,5.726409],[1.955563,1.808224,-0.591469,-8.974196],[3.708717,-1.488187,-6.543229,-9.216092],[-2.863989,-3.747609,-7.169427,6.105310],[-7.267666,-4.557049,-5.510192,-6.642817],[-7.213779,9.302847,5.144437,-2.839690],[4.549837,-0.900577,-7.729557,0.733830],[-3.869474,-3.995389,-3.749159,1.026918],[-9.702040,-2.106865,4.472197,-3.725274],[6.740264,-0.785152,-6.027696,1.525225],[-7.864227,1.254091,-2.715767,7.976374],[-9.826182,5.671156,-5.141553,-6.534687],[-7.001060,4.182477,8.553912,-2.040955],[-6.186926,7.023173,4.645840,-5.432438]],[[-6.085551,-0.493626,-0.072652,-3.879640],[5.866823,3.593859,-8.397261,-9.177869],[8.426003,-6.533837,-2.582801,0.575449],[8.433621,5.269096,2.522064,-9.321603],[4.205225,-6.840850,1.907152,7.731938],[3.307121,-4.280471,-2.035828,-0.748291],[-4.871511,-3.777629,3.185660,6.155489],[-0.444569,3.392415,-3.817430,-1.069016],[2.000088,-1.432076,3.166318,1.713860],[-9.166042,-8.545848,9.341894,-8.051375],[3.061382,-7.730609,-6.130905,8.338639],[-8.704003,-2.776818,9.640346,-7.605438],[-9.271560,8.323354,-2.434559,-6.532756],[-8.464455,2.083349,4.284066,1.078817],[-2.783485,-3.572029,-6.377795,-6.530076]],[[-7.783950,3.980598,6.472430,-1.159768],[-7.692101,1.707245,1.340089,-6.250614],[-1.659627,4.579226,6.725489,-0.141386],[-6.372122,2.628110,-5.527952,3.325309],[-9.446454,-1.313380,-5.331743,7.631603],[-3.899231,-9.626971,-7.797586,3.548909],[-9.722512,8.664101,-5.470170,-2.468908],[-6.755942,3.381029,0.455511,6.800983],[0.648185,8.491205,3.025301,7.171049],[1.843008,7.792273,-9.844529,-2.881811],[5.878843,-9.638588,3.561529,-8.229732],[-5.571704,-9.068205,-2.728644,-1.657568],[-2.745500,2.228322,-8.131812,4.455579],[-3.052012,-2.534721,-2.836606,-0.018026],[-6.649612,1.897249,0.653531,0.122184]],[[5.018994,4.991579,3.180874,2.062439],[1.794475,6.912636,9.241808,7.467020],[7.519916,-9.853123,-2.933318,5.627345],[-4.054634,-0.681826,-2.340329,6.009360],[6.717532,0.947308,-8.978709,-7.060055],[-9.541232,-0.996678,8.433317,1.705656],[1.368570,-0.698768,-7.191824,-8.244304],[-3.029972,-7.598063,-5.195038,-8.721748],[-9.898560,-3.556664,-1.961524,-3.936253],[7.756715,0.763811,-1.481298,0.847161],[-0.986973,6.185531,-1.437861,3.811752],[-4.022741,0.052259,-3.871242,0.569697],[-1.999616,0.321241,-3.593018,9.960688],[-8.984301,-7.791854,3.205706,-8.555393],[8.736575,4.316701,5.428237,-4.757769]],[[-2.181012,-1.010648,3.582834,-0.134685],[-8.826792,5.295263,4.984770,-4.024697],[1.880236,1.651275,-8.304234,-3.872058],[8.486609,2.373419,8.645543,8.437850],[-1.432436,-2.665687,8.919128,3.004355],[-4.664366,-8.778791,7.770587,-9.608728],[-6.508211,1.008946,6.038714,-0.582199],[0.732371,-7.453706,-0.102538,4.455181],[1.354046,-2.844833,-6.853132,-8.961020],[-1.434319,-4.758152,1.895469,-3.252708],[-9.818206,7.158753,-6.530581,4.058698],[0.636528,-2.643154,8.944919,-6.191084],[0.344054,1.247139,-0.183781,-8.768347],[-2.440404,-6.707979,3.270880,8.885622],[8.168480,-4.962387,7.821944,8.157321]],[[4.344313,-0.826105,0.351426,5.002108],[0.893731,-1.097326,3.806932,7.864060],[-3.107955,6.980589,-0.736084,1.376435],[9.745599,4.723855,4.000277,-2.640123],[-6.136609,9.242517,0.462956,-7.986001],[9.423434,0.753343,-8.826475,1.033680],[-4.708490,-8.614577,9.088333,-8.922409],[1.266313,2.058984,7.183490,6.849984],[-1.293676,2.569863,-9.099125,4.292636],[1.968937,-3.064281,7.228677,-1.040726],[-3.923933,-6.019975,-3.566638,5.913246],[8.280064,7.284558,-0.010149,-3.123445],[1.027294,-7.481239,-5.058389,-8.910100],[-2.678466,2.715270,-6.258132,-8.370317],[-5.021171,-7.110807,0.256874,6.639527]],[[2.550619,1.612685,1.598049,-2.041859],[-3.175979,-1.020111,-4.773571,-6.812028],[2.297230,-9.843021,1.932599,7.715700],[-7.107251,-0.170802,2.368352,-7.490742],[-3.694744,-0.760149,5.708495,0.073226],[4.024292,-0.934042,-4.657124,1.392227],[-1.170703,8.970418,-7.029685,-3.126486],[-7.613632,-3.917598,-1.094889,-8.923345],[9.697038,-5.485001,-6.460917,-1.331148],[-5.155573,0.830789,1.728805,-0.550287],[7.904503,8.451858,-3.707313,-6.931062],[-8.820407,-0.814274,7.630680,-8.353788],[0.161154,9.193141,-9.721175,-9.336905],[7.220187,9.362605,-0.149813,-5.728040],[2.568813,6.414959,9.836355,-9.720320]]], dtype = "float32")#candidate|3601|(12, 15, 4)|const|float32
bop_3602 = relay.subtract(call_3569.astype('float32'), relay.reshape(const_3601.astype('float32'), relay.shape_of(call_3569))) # shape=(12, 15, 4)
bop_3605 = relay.subtract(call_3570.astype('float32'), relay.reshape(const_3601.astype('float32'), relay.shape_of(call_3570))) # shape=(12, 15, 4)
func_581_call = mod.get_global_var('func_581')
func_584_call = mutated_mod.get_global_var('func_584')
var_3607 = relay.var("var_3607", dtype = "uint32", shape = (48,))#candidate|3607|(48,)|var|uint32
call_3606 = relay.TupleGetItem(func_581_call(relay.reshape(var_3607.astype('uint32'), [2, 3, 8]), relay.reshape(var_3607.astype('uint32'), [2, 3, 8]), ), 0)
call_3608 = relay.TupleGetItem(func_584_call(relay.reshape(var_3607.astype('uint32'), [2, 3, 8]), relay.reshape(var_3607.astype('uint32'), [2, 3, 8]), ), 0)
output = relay.Tuple([call_3584,bop_3602,call_3606,var_3607,])
output2 = relay.Tuple([call_3585,bop_3605,call_3608,var_3607,])
func_3610 = relay.Function([var_3607,], output)
mod['func_3610'] = func_3610
mod = relay.transform.InferType()(mod)
mutated_mod['func_3610'] = func_3610
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3611 = relay.var("var_3611", dtype = "uint32", shape = (48,))#candidate|3611|(48,)|var|uint32
func_3610_call = mutated_mod.get_global_var('func_3610')
call_3612 = func_3610_call(var_3611)
output = call_3612
func_3613 = relay.Function([var_3611], output)
mutated_mod['func_3613'] = func_3613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2839_call = mod.get_global_var('func_2839')
func_2841_call = mutated_mod.get_global_var('func_2841')
call_3621 = func_2839_call()
call_3622 = func_2839_call()
output = relay.Tuple([call_3621,])
output2 = relay.Tuple([call_3622,])
func_3633 = relay.Function([], output)
mod['func_3633'] = func_3633
mod = relay.transform.InferType()(mod)
mutated_mod['func_3633'] = func_3633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3633_call = mutated_mod.get_global_var('func_3633')
call_3634 = func_3633_call()
output = call_3634
func_3635 = relay.Function([], output)
mutated_mod['func_3635'] = func_3635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_3656 = func_2553_call()
call_3657 = func_2553_call()
output = relay.Tuple([call_3656,])
output2 = relay.Tuple([call_3657,])
func_3658 = relay.Function([], output)
mod['func_3658'] = func_3658
mod = relay.transform.InferType()(mod)
mutated_mod['func_3658'] = func_3658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mutated_mod.get_global_var('func_3658')
call_3659 = func_3658_call()
output = call_3659
func_3660 = relay.Function([], output)
mutated_mod['func_3660'] = func_3660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_3676 = relay.TupleGetItem(func_3658_call(), 0)
call_3677 = relay.TupleGetItem(func_3660_call(), 0)
output = call_3676
output2 = call_3677
func_3679 = relay.Function([], output)
mod['func_3679'] = func_3679
mod = relay.transform.InferType()(mod)
mutated_mod['func_3679'] = func_3679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mutated_mod.get_global_var('func_3679')
call_3680 = func_3679_call()
output = call_3680
func_3681 = relay.Function([], output)
mutated_mod['func_3681'] = func_3681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mod.get_global_var('func_3026')
func_3028_call = mutated_mod.get_global_var('func_3028')
call_3687 = func_3026_call()
call_3688 = func_3026_call()
output = relay.Tuple([call_3687,])
output2 = relay.Tuple([call_3688,])
func_3694 = relay.Function([], output)
mod['func_3694'] = func_3694
mod = relay.transform.InferType()(mod)
output = func_3694()
func_3695 = relay.Function([], output)
mutated_mod['func_3695'] = func_3695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3210_call = mutated_mod.get_global_var('func_3210')
call_3788 = relay.TupleGetItem(func_3209_call(), 2)
call_3789 = relay.TupleGetItem(func_3210_call(), 2)
output = relay.Tuple([call_3788,])
output2 = relay.Tuple([call_3789,])
func_3806 = relay.Function([], output)
mod['func_3806'] = func_3806
mod = relay.transform.InferType()(mod)
mutated_mod['func_3806'] = func_3806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3806_call = mutated_mod.get_global_var('func_3806')
call_3807 = func_3806_call()
output = call_3807
func_3808 = relay.Function([], output)
mutated_mod['func_3808'] = func_3808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_3866 = func_2553_call()
call_3867 = func_2553_call()
output = call_3866
output2 = call_3867
func_3875 = relay.Function([], output)
mod['func_3875'] = func_3875
mod = relay.transform.InferType()(mod)
output = func_3875()
func_3876 = relay.Function([], output)
mutated_mod['func_3876'] = func_3876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3633_call = mod.get_global_var('func_3633')
func_3635_call = mutated_mod.get_global_var('func_3635')
call_3892 = relay.TupleGetItem(func_3633_call(), 0)
call_3893 = relay.TupleGetItem(func_3635_call(), 0)
var_3899 = relay.var("var_3899", dtype = "float32", shape = (12, 15, 4))#candidate|3899|(12, 15, 4)|var|float32
bop_3900 = relay.logical_xor(call_3892.astype('int32'), relay.reshape(var_3899.astype('int32'), relay.shape_of(call_3892))) # shape=(12, 15, 4)
bop_3903 = relay.logical_xor(call_3893.astype('int32'), relay.reshape(var_3899.astype('int32'), relay.shape_of(call_3893))) # shape=(12, 15, 4)
func_3610_call = mod.get_global_var('func_3610')
func_3613_call = mutated_mod.get_global_var('func_3613')
var_3913 = relay.var("var_3913", dtype = "uint32", shape = (48,))#candidate|3913|(48,)|var|uint32
call_3912 = relay.TupleGetItem(func_3610_call(relay.reshape(var_3913.astype('uint32'), [48,])), 1)
call_3914 = relay.TupleGetItem(func_3613_call(relay.reshape(var_3913.astype('uint32'), [48,])), 1)
output = relay.Tuple([bop_3900,call_3912,var_3913,])
output2 = relay.Tuple([bop_3903,call_3914,var_3913,])
func_3958 = relay.Function([var_3899,var_3913,], output)
mod['func_3958'] = func_3958
mod = relay.transform.InferType()(mod)
var_3959 = relay.var("var_3959", dtype = "float32", shape = (12, 15, 4))#candidate|3959|(12, 15, 4)|var|float32
var_3960 = relay.var("var_3960", dtype = "uint32", shape = (48,))#candidate|3960|(48,)|var|uint32
output = func_3958(var_3959,var_3960,)
func_3961 = relay.Function([var_3959,var_3960,], output)
mutated_mod['func_3961'] = func_3961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_3981 = func_2553_call()
call_3982 = func_2553_call()
output = call_3981
output2 = call_3982
func_3988 = relay.Function([], output)
mod['func_3988'] = func_3988
mod = relay.transform.InferType()(mod)
output = func_3988()
func_3989 = relay.Function([], output)
mutated_mod['func_3989'] = func_3989
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4045 = relay.var("var_4045", dtype = "bool", shape = (1, 13, 10))#candidate|4045|(1, 13, 10)|var|bool
var_4046 = relay.var("var_4046", dtype = "bool", shape = (1, 13, 10))#candidate|4046|(1, 13, 10)|var|bool
bop_4047 = relay.logical_and(var_4045.astype('bool'), relay.reshape(var_4046.astype('bool'), relay.shape_of(var_4045))) # shape=(1, 13, 10)
func_3875_call = mod.get_global_var('func_3875')
func_3876_call = mutated_mod.get_global_var('func_3876')
call_4063 = func_3875_call()
call_4064 = func_3875_call()
output = relay.Tuple([bop_4047,call_4063,])
output2 = relay.Tuple([bop_4047,call_4064,])
func_4070 = relay.Function([var_4045,var_4046,], output)
mod['func_4070'] = func_4070
mod = relay.transform.InferType()(mod)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4070_call = mutated_mod.get_global_var('func_4070')
var_4072 = relay.var("var_4072", dtype = "bool", shape = (1, 13, 10))#candidate|4072|(1, 13, 10)|var|bool
var_4073 = relay.var("var_4073", dtype = "bool", shape = (1, 13, 10))#candidate|4073|(1, 13, 10)|var|bool
call_4071 = func_4070_call(var_4072,var_4073,)
output = call_4071
func_4074 = relay.Function([var_4072,var_4073,], output)
mutated_mod['func_4074'] = func_4074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3988_call = mod.get_global_var('func_3988')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_4100 = func_3988_call()
call_4101 = func_3988_call()
func_1728_call = mod.get_global_var('func_1728')
func_1733_call = mutated_mod.get_global_var('func_1733')
const_4103 = relay.const([9,-8,-5,-10,-1,9,-9,-7,9,5,-7,6,9,1,-2,-10,2,8,8,-10,-8,-1,8,-4,-7,-5,-7,4,-6,-6,9,1,-3,1,-5,-2,-10,10,2,4,-2,6,2,5,-4,6,6,7,4,-3,-8,4,10,5,7,-3,-10,10,8,-2,6,-8,-5,4,-4,2,3,-2,-1,5,8,-9,-5,-2,4,-9,-4,-7,-3,-10,-9,1,-2,5,9,3,5,8,3,-7,6,1,3,8,-8,-5,5,-1,8,-10,5,6,5,2,-4,7,2,-9,-6,3,7,3,5,-9,-1,3,10,5,-1,-7,5,6,-2,4,-2,-1,6,-1,1,5,-8,-5,-8,-8,-7,-6,9,-10,5,-8,-5,-5,5,4,-7,6,-7,-6,3,-4,8,-5,-3,5,-10,-6,2,-6,9,-2,8,4,3,10,5,-8,-5,-8,-7,8,-8,2,6,-8,7,3,-10,-3,-8,-8,-9,4,7,-4,-6,2,5,-5,-4,-7,-3,-8,-9,5,-6,-8,1,-10,-5,3,-5,7,-8,4,-5,5,-1,-10,-6,8,2,-4,8,-9,8,-6,8,-4,6,-10,-9,9,-8,2,6,3,-4,10,2,-6,-1,3,8,6,7,6,-1,-8,6,2,-8,1,-5,-7,-8,5,-7,-1,-8,-10,-4,-1,-1,-5,-8,8,-3,9,8,5,7,9,10,1,-8,-3,5,-7,-4,1,1,-8,-8,4,-1,4,-9,-3,3,-7,3,3,-7,-4,5,2,7,-2,-9,3,-5,9,1,5,6,-3,3,10,-8,-2,2,-9,-6,-7,9,-4,-8,2,-4,3,8,-2,-4,2,7,-5,8,1,6,8,10,2,4,9,-1,-10,8,2,4,-2,-8,3,10,1,-4,3,-2,3,-1,5,-5,-2,7,-7,-10,6,-7,-5,3,-4,8,10,-6,-5,7,10,-5,9,6,6,4,-5,9,7,-7,-8,10,-4,-4,5,9,5,8,7,-7,-2,-5,1,9,5,-9,-3,-4,7,-8,-9,-6,2,-8,1,-3,8,10,-1,9,6,-10,9,8,2,-8,2,7,9,-4,-3,-3,-3,2,3,10,1,10,6,8,3,-8,2,-10,1,3,-1,4,-1,-7,-10,-6,9,-3,-6,-2,10,6,7,5,10,-1,4,4,-4,2,10,-4,-7,-5,-1,4,8,3,7,-3,-8,5,-10,9,-10,7,-2,10,-2,-4,1,-6,9,-4,9,-1,-2,9,5,-5,1,-6,4,2,-10,-9,-6,2,4,2,-5,-10,-1,-8,-7,3,6,-10,-3,4,-9,-6,8,10,6,-7,7,8,6,-6,3,-10,-9,7,3,7,6,4,-1,-8,-6,-8,2,-3,-5,9,8,-7,10,-9,7,2,9,-9,-2,-9,-4,3,6,2,5,-1,3,-10,-2,-5,-6,6,6,-8,-4,9,8,4,8,-7,-1,7,-6,8,-5,9,-1,7,-10,-8,-5,-2,8,9,4,-10,4,-9,-4,10,-10,-1,6,10,4,-10,-4,-4,-10,10,-8,-1,8,5,-6,1,4,1,-1,-5,1,-6,2,9,2,8,-2,2,-10,3,-2,4,-8,5,7,4,7,-5,9,-3,-5,-1,-1,-8,2,6,8,7,6,3,3,-3,7,-3,6,-9,8,-10,5,-9,1,-8,-5,3,8,-7,5,-5,-10,1,4,-8,10,-1,-6,-9,-6,-6,-1,-4,-8,3,-3,-6,-7,-10,4,1,-8,8,-5,-2,3,3,8,-4,10,-8,6,-9,-10,3,-9,-10,9,10,5,4,-10,4,6,-4,7,-3,-7,-7,-1,5,-7,4,4,-1,-4,9,-5,1,10,10,-9,-2,5,-7,2,-6,-8,-8,-4,3,5,3,-4,-1,-2,-4,6,-9,-7,-9,6,-9,-8,9,5,2,-4,10,-9,-4,4,2,-8,-4,5,6,-1,-8,-4,-2,8,1,-7,2,1,-5,-8,6,-5,-2,4,-4,5,-5,-10,9,9,2,10,9,1,-6,-2,4,-3,-10,4,-3,9,-9,-4,-8,8,-10,3,-10,5,3,10,-5,-6,1,2,-1,5,9,-10,-4,-5,7,-4,-2,2,-6,-5,-7,-9,-2,-6,9,3,-1,-5,1,9,-7,4,-2,9,3,3,4,10,-3,9,8,-2,-6,5,-6,-7,7,-6,-10,-1,8,2,-7,8,-1,-4,10,1,2,5,-10,2,-4,8,-1,6,4,1,-2,-1,-9,-3,10,7,8,9,2,7,8,-1,-8,-10,5,-6,-4,2,-2,2,-7,-4,-1,-6,4,1,1,-3,-7,1,-4,-10,4,2,7,9,-5,10,8,10,-9,4,-1,9,9,3,-9,-4,7,2,-1,7,-6,3,2,5,-2,-3,5,-4,-4,-10,2,-7,-9,10,-1,-6,-5,-10,2,-8,6,9,5,-8,2,3,1,10,8,9,-8,-6,-6,10,6,2,1,-5,-9,-5,-10,-3,-8,-10,5,-8,6,6,2,10,3,-10,-7,1,8,5,2,-1,-10,-9,-2,-8,10,-10,9,8,6,-8,-3,-9,5,-2,-1,-9,6,8,4,-6,-1,5,-10,5,5,9,2,-10,1,2,-5,-4,9,-10,-7,7,7,-9,-9,3,8,1,-9,5,-4,-3,-9,1,9,1,8,-6,-2,-1,1,-2,-7,9,5,-5,10,-8,-5,9,2,1,-9,-6,6,-9,-3,-6,-5,6,8,9,-1,8,-9,1,-8,1,1,-8,7,4,10,8,-4,7,6,-1,-4,5,8,5,8,3,5,6,9,-2,9,-6,6,6,-9,1,8,9,9,3,-9,-5,-8,-6,1,7,8,7,-7,6,-2,9,2,-9,1,-6,-8,5,-6,-6,1,-8,-7,4,10,9,-8,3,6,1,-3,8,-10,9,5,2,9,8,-7,-1,4,-8,-10,-2,-4,-4,10,10,4,-5,-7,9,-8,-5,9,1,-5,4,1,-2,7,-4,7,-6,-7,3,1,-1,9,4,-1,-9,-6,-4,9,2,1,4,1,-10,-4,-2,7,3,-9,-1,-4,7,-5,6,8,-3,-5,-8,10,3,-2,-8,8,4,8,8,-8,-1,7,-9,7,-3,-1,-7,10,3,-6,-3,-2,-2,2,2,4,-3,3,3,5,10,-8,5,8,-1,8,-9,-9,-3,-10,3,10,-4,-9,1,-4,8,-10,9,2,4,-4,-2,-3,-5,8,6,5,1,8,8,6,3,10,6,4,1,3,2,-6,1,-7,4,-1,-6,8,1,1,-2,8,10,-7,9,-4,-8,-7,6,9,6,4,7,7,8,1,-6,7,10,-6,-4,9,-1,-2,-2,5,-1,1,5,-5,3,-4,-5,-4,-4,4,-3,1,-1,10,-6,-3,-6,-4,-2,7,-6,-6,-1,-8,3,7,6,9,-5,-1,4,7,-8,-4,-9,-6,9,6,2,-8,-5,-10,-5,8,-10,10,-3,-5,-7,1,-7,2,9,-7,-1,8,2,-7,-9,-6,6,-2,-4,-9,-3,8,7,5,8,-9,-8,7,4,-6,10,1,-9,-4,9,3,-4,-1,3,-1,9,1,6,9,3,5,7,-9,1,1,-7,-2,-7,3,1,2,1,-9,-3,-9,4,-10,-9,1,-10,-10,7,7,-6,-6,4,9,3,-4,-8,1,-4,5,9,3,-6,-8,6,-9,-6,1,4,7,10,2,-2,-10,-3,2,-2,-3,10,3,5,-10,8,-2,1,-8,9,-1,-4,-9,-7,-8,6,7,-3,3,2,-10,5,3,-1,9,2,5,10,-4,5,-3,-3,6,-1,-3,-2,-5,7,5,2,10,-1,-1,-8,-7,7,3,-2,-6,-10,8,-4,-1,3,-8,7,9,2,-10,-5,3,-8,-1,-7,-3,-8,9,4,-2,3,9,10,1,-8,-4,9,-4,-4,-7,-10,8,-1,-9,-6,-9,-2,2,-8,6,3,8,7,-8,7,-4,6,-6,-10,10,-7,-6,9,1,-8,-3,6,2,5,6,3,-8,3,-6,8,-8,6,4,-1,-3,1,-1,-9,-10,-3,6,-8,9,-6,-4,-10,1,-6,9,9,8,8,-9,-4,-1,7,7,10,7,-10,2,3,3,-8,7,-4,9,8,-9,9,1,7,-5,5,-5,-5,2,2,-7,10,10,-3,-8,-9,3,-6,7,-4,10,-4,-4,-4,7,4,6,8,-7,-7,1,-1,5,9,-1,-2,-2,-6,5,3,-5,6,10,-9,6,-2,-1,9,2,-8,9,-4,8,7,1,7,-6,9,-8,3,-6,1,9,3,-8,-4,3,-9,-1,6,8,-10,-6,-10,-9,8,-1,-3,9,-4,9,3,8,-2,-10,-3,-10,3,-3,-10,-8,-8,-7,1,-8,-2,-3,-8,-9,-1,9,-7,6,6,-3,-4,7,1,-4,2,7,1,-1,2,1,2,7,10,-9,5,-3,4,4,5,-8,-1,3,5,-5,7,-10,6,6,3,10,-9,8,4,9,-9,6,-1,4,-2,-3,-4,8,10,-6,1,-2,1,-2,-1,4,-7,10,9,4,-4,2,1,10,4,-6,-3,3,-8,1,-5,9,-5,-8,6,6,2,-10,8,6,-7,6,3,-6,-4,10,1,-1,-10,-1,-2,6,6,7,-5,5,9,4,9,-5,-6,-4,6,-5,2,-3,-4,-10,-5,4,2,-4,1,5,7,-4,-6,-1,-2,1,4,-10,-2,-9,-7,-1,-4,-2,-4,-4,-8,5,9,-8,-2,-6,-2,-5,9,1,8,-9,-8,5,9,-2,-10,-2,-1,-1,-9,1,5,6,-9,2,-1,-10,-3,9,-6,10,6,-6,-4,3,-4,-7,-10,3,-1,9,-7,1,3,1,-2,5,2,-6,8,10,-4,1,9,5,10,-2,-2,6,-2,5,5,-4,1,3,-1,-3,9,1,9,-8,2,7,-2,9,9,9,-4,-1,3,4,7,1,1,-6,7,-1,-5,-5,1,-4,-8,4,-6,-6,-1,4,-10,-5,-6,3,-6,-4,-1,7,-1,-2,-4,10,3,2,10,1,-3,-1,9,2,-8,-4,5,1,-2,6,1,-7,-4,8,5,4,-8,-6,-8,-10,-5,5,8,6,9,6,-10,4,-2,-7,-2,4,5,6,-8,-10,-3,-3,-3,10,2,1,9,-5,-8,7,-3,-9,-10,-4,1,1,10,-4,-2,-4,10,-6,3,-9,4,-2,-8,-7,-7,-7,4,-2,-2,7,9,-10,-7,8,-8,4,7,-10,8,-5,6,-3,2,5,2,-9,3,1,-6,3,-10,-7,-2,3,-4,-3,10,1,1,-5,-1,-5,-4,6,9,-5,6,-5,-8,-6,-9], dtype = "int32")#candidate|4103|(2002,)|const|int32
call_4102 = func_1728_call(relay.reshape(const_4103.astype('int32'), [13, 11, 14]), relay.reshape(const_4103.astype('int32'), [13, 11, 14]), relay.reshape(const_4103.astype('int32'), [13, 11, 14]), )
call_4104 = func_1728_call(relay.reshape(const_4103.astype('int32'), [13, 11, 14]), relay.reshape(const_4103.astype('int32'), [13, 11, 14]), relay.reshape(const_4103.astype('int32'), [13, 11, 14]), )
bop_4110 = relay.bitwise_xor(const_4103.astype('uint16'), relay.reshape(call_4102.astype('uint16'), relay.shape_of(const_4103))) # shape=(2002,)
bop_4113 = relay.bitwise_xor(const_4103.astype('uint16'), relay.reshape(call_4104.astype('uint16'), relay.shape_of(const_4103))) # shape=(2002,)
func_3543_call = mod.get_global_var('func_3543')
func_3545_call = mutated_mod.get_global_var('func_3545')
call_4114 = func_3543_call()
call_4115 = func_3543_call()
func_1893_call = mod.get_global_var('func_1893')
func_1896_call = mutated_mod.get_global_var('func_1896')
var_4117 = relay.var("var_4117", dtype = "uint16", shape = (924,))#candidate|4117|(924,)|var|uint16
call_4116 = relay.TupleGetItem(func_1893_call(relay.reshape(var_4117.astype('uint16'), [14, 6, 11]), relay.reshape(var_4117.astype('uint16'), [14, 6, 11]), ), 0)
call_4118 = relay.TupleGetItem(func_1896_call(relay.reshape(var_4117.astype('uint16'), [14, 6, 11]), relay.reshape(var_4117.astype('uint16'), [14, 6, 11]), ), 0)
output = relay.Tuple([call_4100,bop_4110,call_4114,call_4116,var_4117,])
output2 = relay.Tuple([call_4101,bop_4113,call_4115,call_4118,var_4117,])
func_4126 = relay.Function([var_4117,], output)
mod['func_4126'] = func_4126
mod = relay.transform.InferType()(mod)
mutated_mod['func_4126'] = func_4126
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4127 = relay.var("var_4127", dtype = "uint16", shape = (924,))#candidate|4127|(924,)|var|uint16
func_4126_call = mutated_mod.get_global_var('func_4126')
call_4128 = func_4126_call(var_4127)
output = call_4128
func_4129 = relay.Function([var_4127], output)
mutated_mod['func_4129'] = func_4129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_4234 = relay.TupleGetItem(func_2502_call(), 0)
call_4235 = relay.TupleGetItem(func_2503_call(), 0)
output = relay.Tuple([call_4234,])
output2 = relay.Tuple([call_4235,])
func_4248 = relay.Function([], output)
mod['func_4248'] = func_4248
mod = relay.transform.InferType()(mod)
mutated_mod['func_4248'] = func_4248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4248_call = mutated_mod.get_global_var('func_4248')
call_4249 = func_4248_call()
output = call_4249
func_4250 = relay.Function([], output)
mutated_mod['func_4250'] = func_4250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3988_call = mod.get_global_var('func_3988')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_4422 = func_3988_call()
call_4423 = func_3988_call()
output = relay.Tuple([call_4422,])
output2 = relay.Tuple([call_4423,])
func_4424 = relay.Function([], output)
mod['func_4424'] = func_4424
mod = relay.transform.InferType()(mod)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4424_call = mutated_mod.get_global_var('func_4424')
call_4425 = func_4424_call()
output = call_4425
func_4426 = relay.Function([], output)
mutated_mod['func_4426'] = func_4426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3875_call = mod.get_global_var('func_3875')
func_3876_call = mutated_mod.get_global_var('func_3876')
call_4427 = func_3875_call()
call_4428 = func_3875_call()
output = relay.Tuple([call_4427,])
output2 = relay.Tuple([call_4428,])
func_4447 = relay.Function([], output)
mod['func_4447'] = func_4447
mod = relay.transform.InferType()(mod)
mutated_mod['func_4447'] = func_4447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4447_call = mutated_mod.get_global_var('func_4447')
call_4448 = func_4447_call()
output = call_4448
func_4449 = relay.Function([], output)
mutated_mod['func_4449'] = func_4449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3431_call = mod.get_global_var('func_3431')
func_3432_call = mutated_mod.get_global_var('func_3432')
call_4450 = relay.TupleGetItem(func_3431_call(), 0)
call_4451 = relay.TupleGetItem(func_3432_call(), 0)
func_1535_call = mod.get_global_var('func_1535')
func_1537_call = mutated_mod.get_global_var('func_1537')
const_4467 = relay.const([-6,-2,8,5,2,5,8,8,-7,-8,8,-8,9,-9,1,9,-6,-4,-2,-8,-7,-6,10,4,2,4,-5,7,8,-3,9,8,2,-10,3,1,-1,-4,2,8,-7,-3,5,-6,-7,-3,10,-4,5,9,1,9,-10,5,-8,5,5,10,8,-4,7,-5,-1,9,2,8,-1,-9,8,10,-7,5,-5,-4,3,9,-7,6,3,6,5,-9,10,5,2,-8,-4,-2,8,-1,-6,-10,5,3,-3,-3,4,7,2,2,1,2,2,4,2,2,6,-2,-10,-10,5,-3,7,-5,-4,-2,6,10,-10,10,10,1,-4,8,10,-8,3,-6,-1,-9,7,-10,7,-2,4,10,-4,1,-6,1,-7,2,10,10,10,-8,1,1,10,7,-7,-10,-10,8,-10,-1,-10,8,-1,-3,10,-8,-1,-10,-6,9,-6,6,-1,-3,5,-1,6,-5,10,10,1,-10,8,-5,9,-8,2,2,-8,4,10,10,-5,-5,-5,4,2,8,5,6,5,10,10,1,-8,3,2,-4,-8,-3,-3,-9,-2,6,-10,3,6,5,5,4,-10,-1,-10,-1,-3,3,3,10,-9,-5,9,-6,-1,-3,-4,-10,-3,9,4,-2,-4,3,-7,5,9,6,-7,-3,3,5,-4,-6,-3,-2,6,-6,-1,10,-1,-5,-4,-8,-5,-1,8,10,10,9,-10,2,5,8,8,3,2,2,10,1,3,-6,8,3,1,-3,4,-8,-7,4,-2,-7,-6,-2,-8,-2,5,-2,-3,4,8,6,5,1,-8,-7,4,9,-4,-6,4,-3,-7,5,-1,-5,-6,-1,3,-3,8,3,8,4,3,-2,10,-7,2,9,10,-2,-3,7,6,-8,2,8,5,1,4,6,-1,-2,-6,-6,-3,5,1,3,-4,2,2,7,4,7,1,1,-8,-5,-4,-3,7,-4,-9,-8], dtype = "uint8")#candidate|4467|(360,)|const|uint8
call_4466 = relay.TupleGetItem(func_1535_call(relay.reshape(const_4467.astype('uint8'), [2, 12, 15])), 0)
call_4468 = relay.TupleGetItem(func_1537_call(relay.reshape(const_4467.astype('uint8'), [2, 12, 15])), 0)
output = relay.Tuple([call_4450,call_4466,const_4467,])
output2 = relay.Tuple([call_4451,call_4468,const_4467,])
func_4472 = relay.Function([], output)
mod['func_4472'] = func_4472
mod = relay.transform.InferType()(mod)
output = func_4472()
func_4473 = relay.Function([], output)
mutated_mod['func_4473'] = func_4473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4472_call = mod.get_global_var('func_4472')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_4508 = relay.TupleGetItem(func_4472_call(), 1)
call_4509 = relay.TupleGetItem(func_4473_call(), 1)
output = call_4508
output2 = call_4509
func_4515 = relay.Function([], output)
mod['func_4515'] = func_4515
mod = relay.transform.InferType()(mod)
output = func_4515()
func_4516 = relay.Function([], output)
mutated_mod['func_4516'] = func_4516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2670_call = mod.get_global_var('func_2670')
func_2671_call = mutated_mod.get_global_var('func_2671')
call_4535 = func_2670_call()
call_4536 = func_2670_call()
output = call_4535
output2 = call_4536
func_4549 = relay.Function([], output)
mod['func_4549'] = func_4549
mod = relay.transform.InferType()(mod)
output = func_4549()
func_4550 = relay.Function([], output)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_4612 = func_3679_call()
call_4613 = func_3679_call()
output = relay.Tuple([call_4612,])
output2 = relay.Tuple([call_4613,])
func_4627 = relay.Function([], output)
mod['func_4627'] = func_4627
mod = relay.transform.InferType()(mod)
output = func_4627()
func_4628 = relay.Function([], output)
mutated_mod['func_4628'] = func_4628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_4638 = func_2553_call()
call_4639 = func_2553_call()
output = call_4638
output2 = call_4639
func_4647 = relay.Function([], output)
mod['func_4647'] = func_4647
mod = relay.transform.InferType()(mod)
output = func_4647()
func_4648 = relay.Function([], output)
mutated_mod['func_4648'] = func_4648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_4675 = relay.TupleGetItem(func_2502_call(), 0)
call_4676 = relay.TupleGetItem(func_2503_call(), 0)
output = relay.Tuple([call_4675,])
output2 = relay.Tuple([call_4676,])
func_4690 = relay.Function([], output)
mod['func_4690'] = func_4690
mod = relay.transform.InferType()(mod)
mutated_mod['func_4690'] = func_4690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4690_call = mutated_mod.get_global_var('func_4690')
call_4691 = func_4690_call()
output = call_4691
func_4692 = relay.Function([], output)
mutated_mod['func_4692'] = func_4692
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4704 = relay.const([[[-8.032910,-1.952585,1.870657,7.077972,2.943483,-7.240772,4.451604,8.218731,-4.763602,-6.991561,-6.863597],[0.462292,8.786592,-5.449204,-4.247561,-5.695399,-6.979643,2.741627,9.256091,3.111103,-8.239694,8.325168],[-8.761101,-5.787097,1.924125,3.595608,6.309245,-7.358602,6.599987,3.075726,-6.944169,-7.193277,-2.223410],[-3.408171,-3.521702,4.636928,-4.005278,-4.596821,6.860327,2.074410,-6.130808,-0.097349,-6.029299,-7.911425],[8.639555,6.510217,7.034221,-5.255615,7.686081,-3.129433,5.678154,2.516927,-6.672834,-8.214808,-2.501848],[-1.585727,-0.266741,-7.292384,0.144783,0.003282,-4.136601,-5.253736,-1.604300,4.816249,-4.796752,-6.065567],[4.099199,6.114879,6.107635,-5.308432,0.348670,-6.888827,7.325646,-0.086054,8.043185,-2.624591,-3.134308],[-8.872469,3.630525,8.284807,9.831879,6.719352,4.712389,-7.958463,5.153135,-2.278263,-1.333693,-6.866943],[7.283681,-2.163297,-5.006793,-8.076551,-1.719458,-9.977913,-7.197572,1.718834,5.285834,0.636673,1.936154]],[[3.694125,-2.209749,5.805408,1.381606,-6.393524,6.120471,4.493788,3.540725,-9.203159,-4.656154,-7.951385],[-8.642116,-4.316261,-1.474528,-6.554036,-9.848193,-9.983866,2.008657,5.051755,-0.444719,0.557736,-0.414804],[4.631157,-4.880970,7.307557,-2.646186,-7.596183,5.160652,-7.879329,-3.610464,0.876205,1.165020,9.700713],[-9.648843,5.883753,-5.786326,-1.122689,5.336155,3.643565,4.278019,1.709359,-3.198142,3.109119,-9.036442],[9.636294,-9.442947,6.709782,5.344777,6.174045,5.691443,-6.080837,6.415747,0.924836,-0.328286,9.727351],[7.496727,-4.541487,-4.712862,-5.161232,8.656925,1.652885,-2.973441,0.630174,0.876770,8.413052,2.142100],[-4.854634,-6.220442,-6.256872,-8.657301,6.535584,-0.743384,6.450763,1.587971,2.532496,-5.104690,-7.497446],[-5.801452,-6.590580,-5.441316,-3.400463,5.714140,5.640472,-4.558817,-7.442377,6.555073,5.396382,3.672649],[-1.247694,-6.416476,-3.409482,-4.957719,3.407615,-1.348369,-4.091163,-2.075407,8.254471,2.357371,7.331467]],[[-7.707191,4.615794,8.919807,7.916363,3.172594,8.953350,1.113667,-5.611402,6.824413,-7.401609,2.709297],[-5.787958,-8.182239,9.318249,-8.205170,7.329783,6.571555,-8.915663,2.629215,5.265666,8.757647,-1.376966],[-3.585258,-0.952472,4.294643,-5.517187,0.993174,-6.938626,-4.666760,-9.581973,-2.220330,2.209792,-8.083112],[1.329551,8.440589,-4.003505,1.073594,9.706818,-9.042965,8.356210,8.784186,-9.520450,0.801101,-9.821233],[9.041501,-2.905052,-1.289886,5.021457,-7.631998,1.238669,0.526790,-3.286592,-5.151437,0.717241,-7.668085],[-5.811126,-3.431036,-8.244796,4.373824,4.304154,1.926092,7.894013,4.101385,-2.673780,5.226624,1.725241],[-6.768403,1.035905,5.425655,9.628470,-3.649964,2.235742,-0.532574,-8.509560,-3.143135,-2.855681,9.455857],[-3.977846,-8.792437,-5.450761,-5.127076,7.721972,-5.633977,0.886457,8.944704,6.682966,8.860564,-6.627997],[-0.001902,2.124877,-9.709989,8.850017,7.229669,-5.004122,-0.599018,6.831181,-5.778194,7.978079,-5.953225]],[[-6.228223,5.685513,6.245278,0.371733,7.907610,-0.171621,-5.513092,-9.238221,-5.068301,4.058906,-4.381169],[-5.900996,-3.128311,-8.609670,2.222247,8.614973,-1.269052,7.956053,6.593247,9.840244,-1.809921,9.256469],[-1.285335,-7.186602,-6.980657,2.223375,-6.154241,-8.701831,-9.295788,-4.490099,5.116389,6.079752,5.409311],[1.888498,6.327200,3.587443,-8.602744,3.994270,-2.837955,-1.439979,6.993243,9.233170,3.775723,8.672443],[-3.752507,5.198290,5.718509,6.692229,7.457263,0.040166,5.042096,-6.340515,1.092023,-5.930928,-1.798898],[-8.888971,-4.376423,4.931556,-0.810921,2.941858,-6.081611,-8.477856,-7.399293,-4.500420,6.597892,-1.535094],[-0.115744,-9.467210,-6.744412,-7.819295,1.063068,3.884244,-4.210321,7.047648,7.434677,-0.066252,5.087846],[2.696028,-8.787022,5.086360,0.398228,7.708688,4.983724,9.718697,-9.660202,-6.492753,1.943184,-1.766335],[-6.071014,-9.369966,-5.953882,0.046288,7.901083,0.402060,9.762428,6.708109,6.382984,-0.559647,7.622837]],[[-4.293796,1.309530,7.041442,-8.952586,8.532740,-9.480485,-9.063264,-0.970756,-5.021460,-5.612972,1.582259],[9.676613,-8.554323,9.148204,0.814273,3.952130,6.462722,-9.696316,0.830580,-8.996051,3.126978,-5.385270],[7.788502,2.405891,-4.521981,-3.865934,5.372035,6.607064,-8.336530,5.337275,3.328646,2.469689,7.458230],[4.490592,3.127644,7.332606,-0.763077,-3.909202,-9.857845,-4.481826,-2.326208,0.974197,-7.172728,9.708869],[6.952738,-7.763603,7.046615,4.187043,1.426051,8.441014,-6.432506,5.655403,-8.295018,0.885702,2.265837],[-2.296074,-3.810849,-3.561886,-7.582285,5.116205,-9.134668,-2.392542,2.095711,-8.041028,-4.465845,2.691263],[1.986587,-6.248906,4.854217,-4.061479,1.367117,-8.585762,-4.576194,-2.393878,-8.956562,9.176403,1.455165],[4.080597,6.407057,6.774485,7.468950,7.024398,5.923907,1.132276,8.126717,7.587872,-5.345583,-6.858610],[-0.171321,8.928190,-3.097475,2.409722,-9.483351,-6.539414,2.712789,8.427401,9.100197,3.398631,-1.731739]],[[0.173838,-3.079622,-4.309980,-7.405125,-6.425013,4.698158,3.330345,-9.157264,9.186111,1.591995,-8.755036],[9.141732,-0.247930,-4.143990,8.445018,-8.849267,-4.320240,-9.619067,2.280877,1.574728,2.744486,4.797110],[-4.140493,-8.994834,-1.555311,-7.797576,-3.996066,-8.694786,-2.272962,-8.236731,-2.364226,-4.474757,8.240652],[2.062104,6.527529,-0.221403,-3.485290,6.287489,4.165314,-8.106803,-8.694897,7.638886,3.826880,3.278194],[-4.981124,3.944351,-3.692222,-6.834493,-7.517147,-1.987810,-7.967373,9.981145,-6.917745,-3.827633,-1.088389],[9.500650,2.575384,5.289752,-0.478392,-6.139215,-2.543402,6.694933,2.781463,-9.154519,-5.614177,2.374097],[-4.292212,1.073314,1.370096,-1.463918,-3.064539,-8.671278,-1.870942,-6.762671,-9.185445,-1.894436,8.996703],[3.254753,7.852132,-5.600449,-8.569757,-2.840798,-3.958021,8.758184,9.015303,6.884414,8.670564,4.404338],[0.996999,8.830869,-3.577676,-3.461875,1.889782,-2.615249,-1.194418,-3.398883,-3.996717,0.700238,-3.469129]],[[2.648462,-5.868797,-4.991132,-6.006196,-2.125573,4.066442,-5.196129,8.315361,4.850886,-2.675877,8.608900],[4.828752,-1.804373,-5.139699,-9.844319,-9.369414,5.381283,3.771355,2.093722,7.425747,8.643667,5.839216],[8.863719,7.910659,9.120802,-6.014379,-2.861825,8.014600,-1.823371,-2.159756,-1.205242,-0.389788,1.079903],[7.457295,5.426617,-5.418834,-6.269948,-7.243186,-9.138991,-1.863709,-3.768778,-2.525736,-5.014607,2.906363],[-5.503515,-0.628108,-2.137449,-5.638047,-3.701676,-0.725255,-5.713679,-7.769722,-6.701435,-7.582128,-2.504557],[5.208210,-5.307762,3.155481,7.575579,5.382492,-1.148397,-6.372461,-4.217309,2.140824,7.896497,-7.910560],[-7.274002,-3.373659,-2.354118,-1.060069,7.483082,2.469248,7.885182,6.528054,0.928420,-3.938083,-5.305661],[-3.315386,9.119090,5.954275,-4.429599,0.118475,-5.442876,1.277667,-5.349378,-9.276047,9.060113,1.477158],[-7.741439,0.170798,5.239668,-8.094690,1.350543,-8.887152,-9.821381,1.003264,-9.223790,4.177656,-2.828065]],[[3.724224,-8.412492,-6.900270,0.310951,4.673977,-5.915852,9.517594,-5.126359,7.496501,-1.731413,6.566107],[8.959007,3.137084,8.713037,7.474187,-1.380818,-4.276840,-2.299385,-7.143020,2.040205,5.720031,5.131978],[0.858714,-5.645326,9.565822,0.768303,0.903547,7.219115,-0.626003,-4.505913,-1.267864,-2.672635,4.667791],[7.320538,-8.232019,0.838805,7.400053,-1.625344,6.323158,9.133979,2.706672,3.125235,-7.847657,-2.465447],[5.535814,-2.170475,1.678867,-7.380469,2.276107,-5.947736,-6.470728,2.098281,-6.955046,2.935355,4.843069],[-2.959263,1.120066,9.287458,-9.261704,-7.536941,-9.988793,6.074576,8.510401,3.740173,-7.215829,-2.084344],[3.392177,-4.561163,6.816042,5.721977,-2.344370,2.466967,5.817129,5.085283,-2.992003,5.590004,-5.338407],[-7.276950,3.604679,-7.339146,-3.507173,-2.221773,1.195298,7.106568,-3.081019,0.580434,6.693617,-8.267246],[4.936005,-2.040157,0.619191,4.195761,5.767931,8.964835,7.264562,-4.785610,-5.848951,1.566243,5.963030]],[[-9.170756,-3.222304,-8.800896,7.852640,-9.833393,0.697963,-3.515045,8.650759,-7.192623,-1.000850,1.844074],[-9.327069,3.869356,-5.454134,-5.272260,4.384134,-6.256117,-1.458898,9.629590,7.705971,-0.667285,7.574510],[-5.257124,-7.251633,6.210118,-6.871727,-7.612283,-1.091650,-0.722598,0.660035,-3.456585,3.315104,-5.278244],[5.703833,0.221875,4.673818,7.452583,7.949221,5.187973,1.964301,-3.939209,9.522060,-5.270493,-5.126232],[7.210126,5.174560,-7.934208,-5.715310,-1.270229,2.465138,-7.208441,9.500253,0.871802,3.370395,5.665307],[4.959642,9.763204,-0.864097,-5.016479,-4.995391,-5.808087,0.194792,-7.060195,6.902305,8.242635,3.325215],[-5.228503,-7.160193,3.525134,-2.893716,-7.183398,-5.707107,8.176376,5.798455,4.274780,0.227912,9.294323],[-8.487327,-2.687327,-1.717357,-3.408214,7.547314,-2.605821,-7.888943,-0.616516,-9.322178,-6.064946,-6.838403],[-0.332029,4.855402,9.226515,7.965924,4.654213,-0.729033,-3.749246,-5.505154,-1.200037,2.100590,6.125827]],[[-8.083095,-0.557766,-4.836699,3.442664,-5.290074,-3.621922,1.084536,-3.192294,-3.198398,4.203935,9.831117],[7.695838,-9.284320,-0.654346,-9.122904,-3.734747,6.670673,-4.312618,2.634258,-7.350327,2.719826,-6.590009],[-7.797768,7.832816,-6.116982,2.800385,-6.324389,8.170541,1.186647,-0.179381,1.200514,-6.086641,-3.053225],[-5.616523,9.967540,7.756160,6.210068,2.379824,8.903129,-8.089160,0.062100,7.996096,-4.961767,2.602600],[-7.020707,-4.797382,-9.797137,-1.068639,4.357295,-9.694218,2.676816,7.125188,4.987177,-0.613550,5.485128],[6.816574,0.036355,1.773735,5.528307,8.669950,-5.401641,-1.042218,-3.785470,0.416097,3.217246,-9.147740],[-9.937841,-7.671090,9.135705,-2.156357,5.324937,5.941932,-1.887819,1.664358,1.574022,-7.089988,-9.973764],[-3.157486,2.605943,-8.968399,-5.616508,-7.416564,-1.703509,-1.504681,2.347707,-3.345067,-3.458545,3.928820],[-4.981980,0.627772,6.753983,-7.066438,-5.543033,9.045295,-8.100118,-4.583210,-0.948516,3.480552,7.598881]],[[-8.105501,-8.608947,-6.947761,8.088144,-9.077544,-6.499398,3.829329,9.516161,3.164461,9.593591,5.461273],[-4.846118,-5.701938,-3.256741,6.717309,0.527039,3.138128,-3.142762,6.882113,1.145744,-6.544855,8.749888],[-1.743660,2.525284,-1.344615,-5.819893,-1.183848,7.305905,3.708900,8.430663,-9.664870,8.771410,-8.493227],[8.547430,8.097746,5.248761,-3.412840,2.837208,2.515255,-6.112397,3.489780,-3.380510,1.764916,-2.945261],[5.641205,4.030546,4.336179,5.387401,-2.250899,5.959913,-0.112031,8.812703,3.464413,7.334893,8.474749],[-4.077455,-2.074839,1.441530,-6.578424,-8.129355,0.017485,7.709784,-6.088627,-1.693335,4.769066,-2.234447],[2.212125,-3.289339,8.994774,6.160623,7.045972,1.894303,-0.671752,4.120925,4.297746,4.474820,9.570493],[6.326357,6.915754,2.725167,3.912653,-5.148743,0.683577,9.254010,-0.374025,-9.583865,-2.976315,1.626743],[-7.098526,2.979985,3.360198,-9.731769,-4.668013,-5.111724,0.530491,-4.352828,-7.147321,2.653475,-6.932590]],[[-9.439254,-3.644956,-2.825328,-2.642107,3.669609,2.171360,-7.817637,5.213593,1.125739,-7.571407,-5.983550],[4.118308,-0.428752,2.948803,-3.483979,-9.319601,3.687673,2.440917,4.336076,7.016414,-3.238649,-4.747079],[3.997842,2.903922,1.549481,0.773825,2.493978,-9.410149,-3.084319,-1.208523,1.471945,0.458163,5.808077],[5.383676,-2.359546,2.468810,7.353222,-8.526117,-0.130916,5.907816,9.546687,5.022094,-4.019686,7.481924],[3.214770,8.355833,-6.029436,5.702292,9.778806,4.762523,-4.342121,-5.790569,-6.613554,-5.243681,-7.055039],[-9.089096,-2.006769,-7.841614,8.270939,7.760383,1.049989,-4.987297,9.386182,5.696443,-6.546071,4.163622],[-0.506857,-3.594277,-6.229417,4.698515,-7.402612,-3.950343,2.840963,0.536626,-3.788925,0.450102,8.832215],[-8.689711,-7.960745,5.092564,-9.245481,6.097521,-8.692330,3.205769,-3.858168,0.772554,-0.632516,-4.480763],[6.586604,-7.795109,-2.715399,4.438089,4.875439,0.526389,-6.996634,-2.160436,4.094577,5.439622,7.654882]],[[-7.371374,8.535876,5.819564,5.583000,3.196825,6.415789,4.642817,7.050431,-8.392589,-6.150845,-0.002215],[-0.680134,3.366049,-4.491316,-4.377016,0.865941,-1.782321,-0.014082,-6.070109,0.784118,-4.540651,3.132599],[-7.230945,3.127066,-0.226141,-3.306892,-9.461409,7.825454,-2.926266,-4.903356,-3.585205,7.025784,-7.747721],[-5.357628,-5.631237,-8.294286,-4.396769,-8.867938,-7.694116,1.310751,1.985060,-8.784511,8.843397,2.817988],[0.867819,-3.352048,6.893386,-3.785857,4.782551,-3.560740,-5.568467,3.320834,-7.485662,-1.405728,1.149885],[8.253033,4.431264,-3.655507,-6.719007,0.237643,0.088642,4.387215,5.802838,-4.046539,-6.555922,-2.864636],[0.486777,0.652525,6.755038,-4.866218,-4.497979,9.673904,4.776804,-7.983234,7.887967,-6.719238,9.510685],[3.752233,5.895705,4.698131,-5.967045,7.549420,7.918869,-1.298219,-0.268902,9.628381,-2.816074,-0.040280],[-3.562753,0.214214,-5.648541,-8.722664,5.037385,6.223419,3.396307,-5.665354,-6.984384,6.656890,4.144192]],[[0.724656,8.839632,-5.565552,2.333395,6.452951,8.606550,-5.013080,-5.016125,4.111732,-0.495159,3.900102],[7.007739,-6.468331,0.882820,-3.235975,9.656338,-3.870932,-2.154110,-3.742430,8.527414,-4.373890,7.814045],[7.602434,4.764296,6.556008,8.227382,-4.806784,6.850412,-1.148331,-5.086527,8.905542,-4.860376,-5.412589],[-2.642227,7.806804,6.775680,-2.971709,-2.604633,-3.225451,-4.340256,2.612833,-7.632657,-9.488608,-4.620034],[-1.836904,1.176106,-4.467603,7.222298,6.262668,-4.828871,-7.017339,-9.349491,-3.718920,-6.858937,-9.729380],[-9.884634,-4.701222,1.415992,-3.190620,0.744229,0.126727,-5.432907,0.822655,-3.833293,2.261054,6.360399],[-5.714005,-2.923330,-1.660622,-9.631222,4.269502,-9.633351,9.176323,3.794205,-9.969571,4.161040,4.848804],[3.367134,5.992351,3.565858,-6.807854,-3.319488,-1.127498,8.914961,0.277420,-1.562263,1.870031,-5.671100],[-3.143606,-9.421073,0.707732,-8.961438,-5.117098,0.088412,-4.283297,-1.090734,7.930860,7.176032,-0.186303]]], dtype = "float64")#candidate|4704|(14, 9, 11)|const|float64
uop_4705 = relay.acos(const_4704.astype('float64')) # shape=(14, 9, 11)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_4712 = relay.TupleGetItem(func_2953_call(), 0)
call_4713 = relay.TupleGetItem(func_2955_call(), 0)
func_3806_call = mod.get_global_var('func_3806')
func_3808_call = mutated_mod.get_global_var('func_3808')
call_4714 = relay.TupleGetItem(func_3806_call(), 0)
call_4715 = relay.TupleGetItem(func_3808_call(), 0)
func_4549_call = mod.get_global_var('func_4549')
func_4550_call = mutated_mod.get_global_var('func_4550')
call_4719 = func_4549_call()
call_4720 = func_4549_call()
uop_4738 = relay.sqrt(uop_4705.astype('float64')) # shape=(14, 9, 11)
output = relay.Tuple([call_4712,call_4714,call_4719,uop_4738,])
output2 = relay.Tuple([call_4713,call_4715,call_4720,uop_4738,])
func_4743 = relay.Function([], output)
mod['func_4743'] = func_4743
mod = relay.transform.InferType()(mod)
mutated_mod['func_4743'] = func_4743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4743_call = mutated_mod.get_global_var('func_4743')
call_4744 = func_4743_call()
output = call_4744
func_4745 = relay.Function([], output)
mutated_mod['func_4745'] = func_4745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3543_call = mod.get_global_var('func_3543')
func_3545_call = mutated_mod.get_global_var('func_3545')
call_4774 = func_3543_call()
call_4775 = func_3543_call()
output = relay.Tuple([call_4774,])
output2 = relay.Tuple([call_4775,])
func_4778 = relay.Function([], output)
mod['func_4778'] = func_4778
mod = relay.transform.InferType()(mod)
mutated_mod['func_4778'] = func_4778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4778_call = mutated_mod.get_global_var('func_4778')
call_4779 = func_4778_call()
output = call_4779
func_4780 = relay.Function([], output)
mutated_mod['func_4780'] = func_4780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4784 = relay.var("var_4784", dtype = "float64", shape = (9, 9, 10))#candidate|4784|(9, 9, 10)|var|float64
const_4785 = relay.const([[[5.662751,-1.138196,-0.081262,-8.881700,-0.689675,-7.216413,0.217257,1.058339,-4.310338,3.033608],[7.649318,8.367989,-7.336841,-9.174030,-8.509058,9.304401,-4.394835,-2.202024,-7.678764,1.377632],[-4.239285,-0.962136,-5.798041,4.771610,7.950722,9.886495,4.380574,2.243736,1.361088,-6.065707],[1.990409,1.016761,5.334761,-7.299603,-9.233626,-8.522168,9.520996,5.481357,-5.932967,7.100106],[6.253670,7.121564,5.258560,-3.923106,-1.050691,-2.668124,-6.132135,0.386329,-7.530837,8.649526],[-5.498741,5.183053,5.982355,6.569126,0.572681,5.214029,6.709824,-1.435727,7.033387,4.850603],[9.739710,3.442692,-9.926519,1.718866,9.697168,5.929256,6.044687,9.227875,0.930126,-3.544765],[1.683647,-0.376915,-6.923247,-1.188474,3.391266,9.898761,7.399583,2.236921,-0.231870,-8.085263],[6.806007,9.367066,-6.195937,1.739667,8.118045,1.614781,4.340316,4.802140,-9.186191,4.003935]],[[-5.618202,-3.945131,-4.581541,1.139456,-6.466209,-3.488794,8.668050,-1.077439,-2.245557,-6.134913],[-1.752867,2.897092,5.113576,0.745967,-6.785855,0.584116,-1.642674,-0.802354,8.601947,1.806062],[-5.616792,-0.006411,6.618961,3.501307,-5.190924,6.230716,0.597492,7.270773,2.292459,-8.615003],[7.528981,-2.587623,6.703716,-5.804695,-1.964357,6.880110,9.646532,4.696148,-7.941056,3.628068],[-1.000192,4.852867,0.399614,-1.813556,-1.632988,-3.354722,-8.700714,8.820705,3.142532,4.841599],[0.819094,-0.230642,-7.764101,9.379524,7.009843,1.806110,5.541962,9.112804,7.728611,3.108835],[8.125187,-8.333229,9.268064,4.308397,6.697172,-3.022132,3.465960,-8.739509,-2.033536,7.572498],[-6.535711,6.434188,3.826709,-4.234974,-6.319533,-2.876339,7.099495,-9.077944,-8.522599,2.359943],[-5.143340,-5.066773,0.450191,9.812646,-1.372899,8.650996,8.611389,-3.327762,6.863234,-8.542330]],[[5.730350,5.165182,0.129340,6.525120,-9.507978,8.343608,-0.421902,-5.881296,-3.813321,-6.414371],[-9.784889,2.050762,-9.260065,6.949987,-1.076317,-5.418779,-9.997491,-5.699071,7.460364,-0.674211],[3.338134,-6.679583,2.831776,0.961199,-3.781186,9.059059,2.703324,-4.239818,-3.528539,7.371146],[2.696262,-7.760667,-4.201612,1.972556,-5.002151,6.269307,-2.167489,-0.724682,-0.554149,9.824879],[7.489078,-9.589571,-9.058140,-1.185432,-3.061043,4.051406,8.955306,1.623394,4.486522,1.924753],[-6.166279,4.566650,-2.486102,6.672937,5.487504,1.715108,0.015754,0.982681,0.837278,-4.022061],[6.417381,1.433362,-4.966375,-3.206540,-4.494984,2.489687,-1.732896,1.701833,-7.339077,-6.260808],[2.168479,-9.962496,9.866525,-3.250858,-9.241633,-4.401612,9.393936,-3.745119,-5.040864,1.415645],[2.617635,-7.189567,0.488059,-6.415519,-7.419375,0.396915,9.249854,-0.637202,4.804389,2.484395]],[[3.514603,0.506055,8.708158,-1.256085,8.119732,-0.692030,8.994091,-8.078286,-9.514131,-4.227184],[3.414264,9.163469,-2.063886,8.973706,-4.066751,4.981287,-6.347233,-0.498899,-3.591984,-5.162567],[-7.325429,-7.644834,8.114288,-5.776405,-0.646588,-1.042856,-2.534321,-6.789899,5.304403,-4.163923],[-5.291322,2.980880,6.249232,-1.175243,2.298693,0.275553,-2.565108,6.516491,-1.900997,5.667022],[-7.261200,9.084174,2.982721,0.808524,8.331389,0.242231,3.534816,2.073187,-3.453506,8.413730],[-6.763495,-6.752301,-5.642514,-5.679837,2.480140,6.860076,3.134330,3.731499,-1.204833,2.746794],[-2.776093,8.698409,6.966527,-2.980003,2.550627,2.917553,-4.730978,-1.477889,1.880832,-5.354357],[-8.436485,1.265409,-5.486254,0.373710,6.481077,-5.653892,1.735758,-0.712739,-4.348405,-0.897798],[-5.619550,9.998827,9.464169,6.875762,-5.133198,-4.475046,-2.439574,-0.362545,-0.556249,6.275847]],[[-2.389014,9.314301,-6.727380,6.401147,7.205627,-0.365615,7.336089,-6.537310,4.856744,-3.883725],[1.616946,-4.545841,-5.968501,-3.362063,-5.038855,-0.935792,-4.398352,-7.257689,9.041817,0.281559],[-0.187001,-2.743511,-5.367759,-9.399878,2.857074,0.778892,1.651055,-6.422415,1.044802,-9.075897],[-8.299281,-3.109171,4.001915,8.595976,-6.945465,5.079184,-1.710085,7.105397,-9.139277,-4.893413],[-2.863315,4.320375,-1.482575,8.728356,-2.337918,7.338787,-2.613715,5.689145,2.003027,7.461375],[-7.374503,-0.784433,-7.628207,3.626581,3.207465,-0.932903,7.921458,-3.085199,7.670880,6.646388],[5.265858,3.953131,4.745792,3.503316,2.400419,-9.978658,4.043167,3.602884,-4.616730,8.956423],[-1.145950,8.977948,6.744678,6.437993,3.339236,-7.616056,-5.255802,4.232021,9.818604,-8.553462],[7.786100,-9.162969,9.861666,-3.180719,-2.003567,1.578925,-1.348225,-8.204384,-1.952781,-2.235305]],[[8.320701,6.274044,-2.978722,0.063120,4.349101,3.290796,-3.409961,-2.453028,5.407275,-4.641551],[-4.627071,-6.131073,-6.644093,-3.649237,1.582994,9.189720,2.848208,-2.054867,1.978898,9.177599],[0.064490,6.906019,-9.094922,0.472426,-1.115802,7.769303,4.220628,8.502226,9.633216,0.297696],[5.965157,9.580306,9.868160,-1.891378,1.401366,7.319919,-7.111935,-7.569731,-0.951057,-8.004892],[3.075842,8.032953,-9.125861,2.058948,-8.205948,-2.229991,3.193725,5.573498,9.196004,0.778617],[6.638008,8.021896,3.955673,9.336590,5.380915,-6.384044,5.109040,8.440018,1.500700,5.841801],[4.738885,1.337969,1.069472,5.132051,-8.990223,2.304416,-3.447468,-1.310090,0.488687,5.199183],[4.797693,8.041233,-1.378687,-9.575697,4.100792,4.089880,2.888485,6.488464,7.548875,3.775483],[0.335093,-2.140564,7.140308,8.848221,-4.330535,5.197561,7.756872,-6.545200,-5.441944,8.896527]],[[1.669104,-3.194564,9.638388,0.874691,8.214235,-6.734995,-7.028067,-6.274323,6.775505,-1.196243],[-3.108368,-7.865605,-3.157540,4.429805,4.614817,8.452393,-8.930466,-0.814737,2.888874,-3.611062],[-0.844510,-0.201957,6.644489,5.184811,-6.693783,-2.418524,7.700800,-6.115813,-6.589219,-5.189139],[-3.136100,-5.138083,-2.588863,-4.852351,-0.268641,-6.082417,-3.373029,1.796877,3.605526,-4.730750],[-1.177959,-8.240372,8.821786,-5.655695,2.231870,-8.390094,-4.419080,-1.139770,9.355986,-9.501987],[2.719059,-0.124112,2.941038,-4.846534,-7.236336,4.694423,4.795645,7.943694,-2.039349,-2.804581],[-6.173681,-7.731588,4.521290,5.168890,5.623574,6.927362,-9.694275,-9.242529,7.782227,-6.301275],[-4.892092,0.086522,-0.981069,-0.214346,-1.555370,-7.307410,6.621204,9.516264,8.892350,1.321085],[-8.315726,2.392655,1.808583,2.153672,-6.666420,-8.256337,9.653439,0.220915,-1.938665,-9.609673]],[[-0.519405,-0.360097,8.505371,2.422091,-8.498692,-6.201080,8.518708,-7.957113,3.052669,5.454065],[6.156952,-9.343306,4.183612,-4.925428,-6.006610,-1.797929,5.378289,-0.174487,-6.798574,5.334401],[5.896269,-3.567908,-7.446311,6.976116,-1.423140,6.643616,-3.656049,-2.188613,9.872591,-9.675054],[3.967050,5.218585,8.513127,-6.542290,3.387150,-8.143892,5.814687,9.539635,2.487531,0.409078],[9.493954,-8.418060,6.591894,-4.800794,7.262573,-6.402542,9.394697,-0.392140,3.760110,4.371090],[-5.141423,9.678494,-4.919349,0.377925,6.518668,5.683242,-5.804548,5.142403,-8.841789,-5.050139],[-5.599546,-6.416417,-5.306190,-4.862542,3.921325,-7.654648,0.469437,7.202963,-1.106418,-5.675482],[-0.705921,3.583096,6.970071,-9.322197,-5.366942,6.521489,5.989614,-7.974779,-6.719484,5.169691],[-3.962792,-7.570082,-6.126895,1.433538,-8.796348,-0.863921,1.884627,4.070044,-0.737395,-4.645358]],[[0.189362,7.193263,-0.273473,-1.172070,-2.928948,-8.694614,-2.575038,1.040781,3.932988,1.315451],[-5.442285,-4.612395,8.923137,-5.694879,9.422174,-1.663470,-8.732704,2.328709,-8.508280,-7.626271],[0.757479,4.422315,6.676773,-5.044331,-2.489633,-5.781033,-6.852920,-6.223612,4.137566,5.598705],[-0.698488,9.118293,-1.720603,7.349844,-8.359866,8.450271,-2.966402,0.286522,2.845228,-4.233142],[-8.946939,-0.779523,1.630354,-4.316575,6.530459,8.660473,-0.304686,8.517915,3.984379,3.713152],[-0.583481,-3.017750,8.053347,-0.836594,1.891965,-7.281739,5.240887,-2.105701,-4.316735,7.249057],[6.802943,7.222390,5.840337,-0.833335,8.923783,9.980193,-1.685102,-9.289333,9.119445,7.252570],[-7.831403,-1.732253,-2.123018,-7.853194,-7.412694,4.522903,6.334945,6.772201,6.943008,2.654613],[6.878785,-4.171158,-2.553071,1.745422,4.506142,7.593776,6.607247,1.928472,-4.029702,-6.976955]]], dtype = "float64")#candidate|4785|(9, 9, 10)|const|float64
bop_4786 = relay.floor_divide(var_4784.astype('float64'), relay.reshape(const_4785.astype('float64'), relay.shape_of(var_4784))) # shape=(9, 9, 10)
func_4424_call = mod.get_global_var('func_4424')
func_4426_call = mutated_mod.get_global_var('func_4426')
call_4797 = relay.TupleGetItem(func_4424_call(), 0)
call_4798 = relay.TupleGetItem(func_4426_call(), 0)
output = relay.Tuple([bop_4786,call_4797,])
output2 = relay.Tuple([bop_4786,call_4798,])
func_4800 = relay.Function([var_4784,], output)
mod['func_4800'] = func_4800
mod = relay.transform.InferType()(mod)
var_4801 = relay.var("var_4801", dtype = "float64", shape = (9, 9, 10))#candidate|4801|(9, 9, 10)|var|float64
output = func_4800(var_4801)
func_4802 = relay.Function([var_4801], output)
mutated_mod['func_4802'] = func_4802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_4804 = func_2553_call()
call_4805 = func_2553_call()
var_4814 = relay.var("var_4814", dtype = "float32", shape = (12, 15, 4))#candidate|4814|(12, 15, 4)|var|float32
bop_4815 = relay.power(call_4804.astype('float64'), relay.reshape(var_4814.astype('float64'), relay.shape_of(call_4804))) # shape=(12, 15, 4)
bop_4818 = relay.power(call_4805.astype('float64'), relay.reshape(var_4814.astype('float64'), relay.shape_of(call_4805))) # shape=(12, 15, 4)
func_3388_call = mod.get_global_var('func_3388')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_4834 = relay.TupleGetItem(func_3388_call(), 0)
call_4835 = relay.TupleGetItem(func_3390_call(), 0)
func_4743_call = mod.get_global_var('func_4743')
func_4745_call = mutated_mod.get_global_var('func_4745')
call_4840 = relay.TupleGetItem(func_4743_call(), 3)
call_4841 = relay.TupleGetItem(func_4745_call(), 3)
output = relay.Tuple([bop_4815,call_4834,call_4840,])
output2 = relay.Tuple([bop_4818,call_4835,call_4841,])
func_4850 = relay.Function([var_4814,], output)
mod['func_4850'] = func_4850
mod = relay.transform.InferType()(mod)
mutated_mod['func_4850'] = func_4850
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4851 = relay.var("var_4851", dtype = "float32", shape = (12, 15, 4))#candidate|4851|(12, 15, 4)|var|float32
func_4850_call = mutated_mod.get_global_var('func_4850')
call_4852 = func_4850_call(var_4851)
output = call_4852
func_4853 = relay.Function([var_4851], output)
mutated_mod['func_4853'] = func_4853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mod.get_global_var('func_3388')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_4864 = relay.TupleGetItem(func_3388_call(), 0)
call_4865 = relay.TupleGetItem(func_3390_call(), 0)
uop_4869 = relay.atanh(call_4864.astype('float32')) # shape=(2002,)
uop_4871 = relay.atanh(call_4865.astype('float32')) # shape=(2002,)
output = relay.Tuple([uop_4869,])
output2 = relay.Tuple([uop_4871,])
func_4887 = relay.Function([], output)
mod['func_4887'] = func_4887
mod = relay.transform.InferType()(mod)
output = func_4887()
func_4888 = relay.Function([], output)
mutated_mod['func_4888'] = func_4888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4248_call = mod.get_global_var('func_4248')
func_4250_call = mutated_mod.get_global_var('func_4250')
call_4990 = relay.TupleGetItem(func_4248_call(), 0)
call_4991 = relay.TupleGetItem(func_4250_call(), 0)
func_2768_call = mod.get_global_var('func_2768')
func_2772_call = mutated_mod.get_global_var('func_2772')
var_4997 = relay.var("var_4997", dtype = "int32", shape = (140,))#candidate|4997|(140,)|var|int32
const_4998 = relay.const([[-1],[10],[8],[5],[4],[6],[1],[9],[4],[-7],[-10],[1],[-8],[-4],[-6],[1],[-1],[-3],[9],[-10],[-2],[-5],[4],[-7],[7],[9],[8],[-3],[-8],[-9],[5],[2],[-9],[6],[-2],[2],[-5],[-9],[2],[9],[9],[-9],[9],[3],[6],[2],[2],[-9],[8],[10],[4],[-6],[-9],[-7],[-8],[-10],[-6],[5],[-10],[-3],[-10],[10],[-10],[2],[6],[7],[-4],[-8],[5],[-3],[4],[1],[-4],[-5],[5],[-3],[-4],[7],[-5],[1],[-3],[-1],[1],[-9],[7],[-3],[-7],[2],[1],[6],[-7],[2],[-5],[5],[-10],[-1],[-7],[7],[2],[-6],[9],[-9],[-4],[-8],[8],[4],[6],[-9],[5],[-8],[10],[-7],[2],[7],[-1],[2],[-2],[8],[3],[4],[1],[-9],[4],[-7],[9],[5],[7],[-10],[-7],[4],[8],[9],[8],[-8],[3],[-4],[-10],[1],[-8],[2],[-8],[-9],[-8],[-3],[-6],[4],[-4],[5],[-10],[4],[-5],[-8],[-9],[6],[1],[-7],[4],[3],[6],[8],[4],[5],[-4],[-1],[5],[10],[4],[-4],[8],[2],[-1],[-8],[6],[-6],[7],[2],[5],[9],[-10],[-6],[6],[7],[-1],[-6],[-5],[10],[-9],[9],[-8],[-6],[1],[6],[7],[-5],[-6],[4],[-6],[-5],[-1],[8],[1],[-10],[-6],[4],[7],[9],[-7],[-4],[-10],[3],[-2],[9],[5],[-5],[-5],[2],[2],[-6],[4],[2],[-7],[-7],[-8],[1],[2],[6],[-9],[1],[1],[4],[-10],[-1],[10],[-1],[-7],[-4],[-6],[1],[6],[1],[-5],[1],[2],[-10],[10],[8],[-10],[-4],[-8],[5],[-8],[10],[-3],[-7],[2],[-6],[-5],[-1],[-3],[-1],[-4],[-4],[-9],[7],[3],[-5],[-4],[-6],[-7],[-6],[1],[5],[3],[6],[-8],[-8],[5],[9],[2],[3],[9],[-8],[-4],[-9],[-7],[9],[-9],[5],[-10],[-7],[-5],[3],[8],[-4],[-7],[6],[7],[-8],[-6],[2],[-4],[-1],[-5],[6],[-7],[-6],[-7],[-4],[8],[-5],[-7],[2],[7],[-4],[10],[8],[7],[8],[8],[-7],[-8],[-7],[1],[-2],[-1],[5],[-10],[-3],[8],[-9],[3],[4],[-7],[-2],[-8],[-9],[-4],[-1],[-10],[-4],[-2],[9],[10],[10],[-9],[-8],[-8],[-4],[3],[-1],[-7],[-7],[-9],[-5],[-3],[-9],[2],[8],[2],[-9],[9],[-5],[10],[-4],[-5],[5],[-5],[4],[1],[4],[10],[9],[-5],[-3],[-7],[8],[-2],[4],[4],[6],[-3],[3],[1],[4],[7],[-6],[-3],[-1],[5],[3],[-10],[7],[6],[5],[-9],[9],[-10],[-10],[10],[-5],[-3],[-5],[9],[5],[4],[6],[-1],[-6],[-4],[8],[2],[5],[-2],[4],[-10],[10],[-1],[10],[-3],[-2],[4],[-10],[10],[-3],[9],[-10],[-1],[-2],[2],[6],[5],[9],[-2],[-6],[5],[3],[5],[-2],[1],[1],[-7],[2],[8],[2],[2],[-5],[-1],[-2],[3],[-8],[-5],[6],[6],[7],[5],[9],[3],[-1],[-9],[-10],[-8],[-7],[7],[-4],[9],[-9],[-4],[-6],[-2],[10],[-5],[9],[-2],[6],[3],[2],[2],[10],[9],[2],[-7],[4],[-5],[-2],[5],[4],[10],[-5],[-6],[-6],[8],[-10],[-7],[2],[6],[6],[2],[-5],[-10],[5],[8],[3],[-5],[-2],[1],[1],[6],[-2],[4],[1],[-5],[-5],[6],[-5],[6],[2],[-9],[4],[3],[-6],[6],[6],[9],[-4],[-9],[4],[3],[4],[-1],[6],[8],[1],[-2],[3],[1],[-2],[7],[8],[3],[10],[1],[9],[-5],[-3],[-1],[-4],[-4],[-10],[2],[-2],[3],[1],[-1],[7],[-4],[-7],[2],[7],[8],[-4],[9],[-1],[6],[1],[-5],[2],[-6],[-1],[3],[2],[-4],[2],[-6],[3],[-1],[4],[6],[-4],[7],[10],[-8],[-3],[7],[-3],[1],[-2],[6],[-10],[5],[6],[-2],[-7],[-8],[-3],[-6],[-10],[-7],[-3],[6],[-9],[-3],[9],[-4],[-2],[4],[-6],[-10],[5],[4],[4],[10],[8],[-6],[4],[-9],[6],[-3],[-1],[-8],[6],[3],[-6],[-5],[-1],[-10],[-2],[-9],[-10],[1],[7],[-8],[-2],[-10],[5],[-8],[-9],[3],[1],[8],[-8],[7],[1],[-8],[10],[-6],[9],[-10],[4],[-4],[9],[2],[-10],[-5],[2],[5],[2],[-9],[9],[-3],[-9],[8],[2],[9],[-1],[6],[4],[7],[-2],[6],[-6],[5],[-4],[-10],[-6],[-4],[3],[-2],[-1],[2],[3],[-1],[8],[10],[-2],[8],[-7],[7],[-9],[-4],[1],[9],[1],[10],[2],[5],[4],[10],[-8],[3],[-7],[10],[-4],[-5],[6],[-10],[-9],[-3],[-10],[-2],[7],[-8],[5],[-2],[-10],[-3],[-6],[1],[9],[-4],[5],[-2],[-1],[-5],[-7],[5],[-8],[4],[3],[-4],[-1],[-2],[-1],[-6],[8],[7],[-4],[-10],[-3],[-5],[-5],[4],[-3],[7],[-4],[-1],[-10],[-1],[-5],[-3],[-9],[-10],[9],[-5],[8],[3],[-2],[7],[5],[3],[4],[6],[8],[-5],[4],[-8],[8],[3],[2],[8],[-2],[3],[9],[-1],[-3],[6],[10],[-1],[7],[1],[-6],[6],[9],[-9],[-1],[-10],[9],[-7],[1],[-5],[-4],[-2],[-10],[3],[1],[-1],[-5],[2],[8],[6],[10],[2],[-7],[-10],[-7],[-5],[-5],[-7],[1],[2],[-4],[-2],[-10],[4],[6],[7],[5],[-7],[-8],[-3],[3],[10],[-6],[-1],[-7],[-3],[-6],[1],[-7],[-5],[-4],[-9],[4],[1],[7],[9],[-1],[-6],[-5],[8],[-1],[-2],[-5],[-6],[5],[-5],[8],[8],[-2],[-5],[3],[6],[4],[3],[-2],[1],[1],[4],[-4],[8],[4],[2],[7],[-3],[9],[7],[2],[7],[9],[5],[-10],[-7],[-8],[7],[-1],[-5],[8],[4],[-5],[4],[5],[-7],[-7],[2],[4],[-9],[2],[5],[7],[3],[-9],[-3],[-6],[-2],[-6],[-7],[10],[-7],[-6],[-4],[6],[5],[9],[9],[-6],[-6],[-3],[-9],[7],[-9],[10],[5],[10],[6],[3],[-8],[-3],[-9],[5],[-10],[4],[-3],[6],[5],[-7],[-6],[10],[4],[3],[8],[2],[-5],[9],[9],[3],[4],[-9],[4],[2],[9],[-4],[4],[-6],[4],[2],[5],[5],[1],[5],[-9],[-3],[-6],[1],[6],[-9],[-3],[-9],[7],[-9],[5],[10],[-5],[10],[-1],[6],[-3],[-3],[9],[-1],[9],[1],[-5],[3],[4],[-2],[3],[-8],[8],[-2],[3],[7],[9],[7],[5],[-5],[7],[6],[-4],[5],[-1],[8],[-8],[-10],[-6],[-3],[4],[-7],[1],[-1],[1],[1],[-1],[2],[-8],[-5],[2],[2],[-2],[6],[9],[-9],[1],[-6],[-7],[1],[2],[-5],[-10],[6],[4],[6],[-7],[-5],[3],[6],[-3],[4],[10],[-6],[-6],[4],[8],[-9],[-6],[6],[-8],[-5],[-3],[5],[4],[-9],[-8],[-8],[-5],[-5],[1],[7],[1],[-10],[2],[-9],[10],[-5],[-6],[10],[-4],[6],[-4],[-8],[1],[9],[5],[3],[-3],[2],[-9],[-4],[-7],[-2],[1],[-3],[-3],[-7],[-3],[7],[10],[-8],[-4],[-10],[-6],[-10],[5],[3],[-7],[5],[1],[3],[6],[2],[-4],[-5],[-6],[9],[6],[9],[-4],[-8],[-5],[1],[10],[-9],[3],[-4],[9],[10],[6],[8],[-10],[4],[-4],[9],[-3],[7],[2],[9],[-5],[10],[10],[8],[-9],[-3],[-4],[6],[7],[10],[-4],[1],[8],[5],[-7],[9],[-3],[-9],[2],[-2],[-6],[5],[-7],[-1],[-3],[-6],[-10],[6],[5],[5],[6],[-4],[-4],[3],[10],[6],[-2],[5],[-3],[2],[5],[-7],[-4],[-2],[-2],[3],[-2],[8],[9],[9],[-7],[-7],[-9],[-8],[7],[10],[-7],[9],[-8],[2],[-10],[2],[1],[-6],[-3],[4],[-4],[-9],[-3],[5],[7],[4],[-2],[9],[5],[-2],[6],[5],[-5],[-10],[7],[-8],[-2],[4],[-6],[-5],[-4],[-8],[3],[-6],[9],[-3],[3],[-4],[10],[5],[-5],[10],[10],[5],[3],[-8],[3],[3],[5],[4],[9],[-9],[-5],[9],[7],[3],[-6],[1],[7],[1],[-10],[-6],[9],[8],[-1],[8],[-2],[-10],[-1],[2],[-2],[-10],[-8],[-4],[1],[-6],[8],[-5],[-1],[1],[-7],[-2],[7],[6],[1],[-6],[3],[-1],[8],[-7],[-3],[-1],[4],[8],[-1],[9],[-7],[9],[-1],[1],[-10],[-4],[2],[-5],[3],[3],[-4],[-6],[2],[-6],[-10],[-3],[6],[-10],[6],[8],[8],[-1],[9],[5],[10],[5],[2],[-4],[5],[9],[7],[-4],[-5],[-9],[-6],[9],[10],[6],[-7],[-9],[-9],[-3],[-8],[-7],[-7],[8],[-10],[6],[-7],[-8],[-1],[-8],[-6],[10],[7],[10],[-6],[9],[10],[-6],[-4],[-2],[9],[4],[2],[-10],[7],[-3],[4],[6],[-3],[-1],[9],[-2],[8],[5],[-4],[-8],[4],[8],[2],[-8],[8],[3],[7],[7],[-6],[-8],[6],[4],[-9],[8],[8],[6],[-8],[8],[2],[2],[-7],[4],[-2],[3],[-9],[3],[-2],[1],[-7],[-5],[-5],[-5],[-5],[6],[8],[9],[-2],[-9],[-6],[-4],[-5],[2],[5],[-1],[2],[-5],[6],[1],[-2],[-9],[6],[-8],[-3],[-3],[-1],[-5],[4],[-6],[-1],[-1],[-2],[10],[-6],[-9],[10],[1],[-8],[-4],[-7],[-3],[4],[7],[-5],[8],[1],[-1],[-6],[4],[3],[-2],[-3],[-1],[-3],[-5],[2],[1],[6],[-5],[-4],[-1],[10],[9],[-2],[-8],[6],[2],[-3],[2],[5],[-8],[-5],[-2],[-8],[4],[-10],[6],[-6],[6],[10],[6],[5],[7],[8],[6],[9],[2],[-3],[-5],[-3],[-3],[-5],[-3],[-6],[10],[4],[-3],[-2],[7],[-10],[-5],[6],[-2],[-4],[-2],[-7],[8],[-5],[-4],[1],[-8],[2],[3],[10],[5],[-2],[-8],[10],[9],[-7],[10],[5],[-8],[10],[-3],[10],[5],[-3],[-7],[8],[-4],[6],[1],[1],[9],[1],[6],[1],[8],[7],[-4],[5],[8],[-8],[10],[9],[-8],[-5],[1],[9],[8],[3],[-5],[7],[6],[9],[3],[-9],[-1],[-8],[-7],[-4],[-3],[4],[-8],[8],[-4],[-9],[3],[-4],[-4],[-9],[6],[-7],[-7],[7],[-5],[-8],[1],[4],[6],[5],[-3],[1],[-2],[7],[10],[2],[3],[3],[6],[3],[1],[2],[5],[1],[-8],[-3],[1],[-8],[-1],[-9],[-8],[6],[-10],[-3],[-1],[2],[8],[-3],[-9],[-6],[1],[9],[5],[6],[-2],[-6],[-8],[2],[-3],[6],[1],[-7],[-1],[-4],[5],[1],[-1],[-9],[-8],[10],[-2],[10],[1],[7],[9],[10],[-3],[-3],[-7],[7],[8],[9],[8],[4],[5],[-8],[2],[-6],[-4],[-1],[-10],[6],[-9],[-10],[-5],[10],[6],[-5],[-9],[4],[4],[-2],[4],[3],[3],[-10],[4],[6],[5],[10],[6],[-5],[1],[-1],[-8],[-6],[-9],[-1],[6],[-8],[8],[10],[3],[7],[-6],[10],[-7],[6],[-5],[-10],[-2],[-7],[5],[-3],[-4],[8],[10],[-5],[-5],[-3],[-9],[5],[-7],[4],[10],[7],[2],[-2],[-2],[8],[7],[-7],[5],[1],[4],[5],[6],[9],[-10],[7],[9],[-1],[-6],[8],[9],[5],[3],[2],[5],[9],[7],[3],[3],[9],[7],[3],[-10],[8],[9],[-5],[3],[6],[-3],[5],[-2],[-5],[10],[6],[-10],[-7],[1],[-4],[8],[10],[-8],[-8],[6],[-9],[2],[4],[10],[-5],[-7],[-4],[-6],[-5],[-4],[-1],[-9],[-10],[5],[-1],[1],[7],[-4],[7],[2],[6],[3],[-8],[2],[-9],[2],[-9],[-8],[-1],[-6],[-3],[10],[8],[2],[-2],[7],[6],[10],[2],[-7],[8],[-8],[2],[5],[-10],[-6],[8],[4],[-4],[3],[-3],[-3],[-4],[-2],[5],[-7],[1],[-10],[-3],[8],[8],[8],[-2],[5],[-1],[9],[3],[-2],[7],[3],[-5],[4],[6],[-9],[-1],[-2],[-1],[-4],[-3],[6],[-9],[9],[-10],[-9],[6],[8],[-2],[5],[8],[-9],[-3],[7],[-3],[8],[2],[-1],[2],[3],[2],[-9],[-3],[10],[-1],[5],[3],[10],[7],[1],[-2],[6],[-2],[7],[7],[-5],[3],[9],[-3],[3],[-8],[-7],[2],[-6],[-7],[-7],[-5],[-3],[9],[2],[-9],[9],[3],[7],[-9],[-9],[-9],[-9],[-4],[-10],[-3],[9],[1],[6],[1],[10],[-6],[-1],[-6],[-4],[9],[5],[2],[10],[8],[-8],[-8],[-8],[9],[9],[-5],[10],[-7],[-10],[-9],[2],[-8],[7],[9],[-5],[-7],[8],[9],[2],[-2],[-10],[1],[6],[-2],[3],[-1],[-1],[-1],[8],[-6],[-7],[-7],[8],[-2],[6],[5],[-9],[-7],[-6],[-3],[2],[5],[-4],[4],[6],[-6],[-6],[-1],[9],[-7],[5],[4],[-8],[-1],[9],[5],[-2],[7],[-7],[-8],[4],[8],[-7],[4],[-10],[4],[3],[-1],[8],[-5],[-10],[10],[-1],[7],[-1],[-10],[1],[5],[-9],[-7],[-10],[-6],[8],[1],[-1],[-4],[-9],[2],[3],[-5],[-6],[-9],[5],[8],[-3],[-4],[-7],[-3],[10],[-2],[-2],[-4],[5],[10],[-7],[4],[2],[-4],[-7],[2],[9],[-2],[-6],[1],[1],[-9],[-4]], dtype = "int32")#candidate|4998|(2002, 1)|const|int32
var_4999 = relay.var("var_4999", dtype = "float32", shape = (1287,))#candidate|4999|(1287,)|var|float32
call_4996 = relay.TupleGetItem(func_2768_call(relay.reshape(var_4997.astype('int32'), [140,]), relay.reshape(const_4998.astype('int32'), [2002,]), relay.reshape(var_4999.astype('float32'), [117, 11]), ), 5)
call_5000 = relay.TupleGetItem(func_2772_call(relay.reshape(var_4997.astype('int32'), [140,]), relay.reshape(const_4998.astype('int32'), [2002,]), relay.reshape(var_4999.astype('float32'), [117, 11]), ), 5)
output = relay.Tuple([call_4990,call_4996,var_4997,const_4998,var_4999,])
output2 = relay.Tuple([call_4991,call_5000,var_4997,const_4998,var_4999,])
func_5005 = relay.Function([var_4997,var_4999,], output)
mod['func_5005'] = func_5005
mod = relay.transform.InferType()(mod)
var_5006 = relay.var("var_5006", dtype = "int32", shape = (140,))#candidate|5006|(140,)|var|int32
var_5007 = relay.var("var_5007", dtype = "float32", shape = (1287,))#candidate|5007|(1287,)|var|float32
output = func_5005(var_5006,var_5007,)
func_5008 = relay.Function([var_5006,var_5007,], output)
mutated_mod['func_5008'] = func_5008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3633_call = mod.get_global_var('func_3633')
func_3635_call = mutated_mod.get_global_var('func_3635')
call_5032 = relay.TupleGetItem(func_3633_call(), 0)
call_5033 = relay.TupleGetItem(func_3635_call(), 0)
func_2465_call = mod.get_global_var('func_2465')
func_2469_call = mutated_mod.get_global_var('func_2469')
const_5036 = relay.const([2.889608,2.100751,2.999928,-9.221129,8.470687,-6.223442,-7.367866,-8.765424,1.727643,-4.144222,-1.950114,0.161374,3.304936,9.917775,5.712977,0.969600,-8.120145,6.517640,-0.372047,7.986674,-1.373942,6.521103,4.412539,4.699012,-9.832248,1.295681,1.503752,-9.906511,-2.144575,2.648252,-9.465365,-7.636438,-5.676129,-7.538264,1.465674,-2.469572,1.303436,-8.430820,8.353600,-7.058905,0.124571,-1.350571,-8.111167,8.211097,5.423477,-4.079423,-7.025155,-5.969867,7.636278,6.864920,-4.919357,-9.892988,2.279156,9.996437,-7.545020,-0.578037,3.741003,2.322369,2.610451,-9.510320,0.937443,-9.360690,-1.883559,-3.007031,7.714405,-6.393837,1.814640,-0.072820,-3.947347,-6.788160,8.395790,-0.555787,2.948172,-5.668406,3.179246,4.829607,5.112104,-8.773879,6.334947,9.765324,-8.783850,-0.207740,8.128305,-8.529137,-1.525708,-6.929453,-4.556099,-5.553849,-9.977045,-4.435588,-7.927438,4.260539,-5.969726,8.553421,-1.139806,-8.290564,-9.501913,5.815264,6.536329,3.978134,-1.077105,7.825667,6.212906,-4.602858,-3.491502,4.486288,1.853405,2.492995,-9.528661,5.006243,5.797119,0.416005,-0.721488,4.238473,-6.920714,-3.648847,7.339279,9.455055,4.860327,-6.111765,6.905103,-4.189335,-8.087432,-7.287783,-5.852582,-5.588924,0.004616,-7.706838,-2.596687,-0.760325,-0.517260,3.585484,-4.450016,-8.828944,-2.227698,-3.849293,-5.263705,-7.748548,-3.065869,6.877836,-1.594023,-6.527781,4.181050,-4.149249,1.206957,0.436604,2.426532,1.116965,8.958885,0.292534,-7.821608,3.846000,4.869139,-0.669788,-2.022069,-1.131732,6.668992,1.627354,1.231981,-2.229110,-5.004289,5.896050,-0.803198,5.698797,-5.364212,1.272060,-9.553516,-8.557274,3.933756,9.286822,-9.850487,-0.856207,2.787929,7.426754,5.146170,0.895842,3.351038,5.386849,3.455708,0.431609,-3.995504,-9.794392,-5.381811,-6.627891,1.663948,8.333773,0.911829,7.005711,2.845540,-5.365506,-6.078580,-7.056972,-9.203870,6.820825,1.504845,1.758697,-3.759694,-8.594481,-4.418287,-7.787211,2.058966,-2.137953,0.568729,8.685352,-1.014745,-0.431986,4.812264,-2.460180,-5.337636,9.542742,-3.066938,6.755520,-7.061558,6.197314,-3.054712,7.691034,-2.205578,0.074391,3.466914,-8.503704,-3.846889,9.815257,-5.136210,4.444343,4.236994,-9.860744,8.297110,-6.022223,7.873852,5.411466,0.228983,6.684136,-6.810324,-7.814459,8.558064,2.037543,4.273027,4.851880,-3.743478,-9.755004,1.247862,0.160981,5.820773,7.137595,-7.189558,-2.197916,4.541680,8.762763,-2.530575,0.407448,-5.260056,3.052772,6.815274,6.978105,9.857781,-5.881192,-8.881075,-6.738730,5.955135,6.695146,-5.916666,-4.170070,2.455229,4.909124,3.948174,-4.827583,3.478826,8.882159,-0.457463,-9.523205,-8.369113,4.439338,-9.128580,-5.049505,0.348749,6.881864,-7.720924,6.806158,0.367350,5.363184,6.765853,4.516177,-5.496046,-9.154868,9.710707,-6.309506,1.795406,0.192802,2.441683,7.317674,0.586253,-0.171061,-3.249874,6.406226,-6.924419,-9.442616,-7.483011,-5.248667,-4.523211,-7.877386,9.754344,-6.181094,-0.587378,5.490106,1.637366,-5.038679,1.165905,-8.999038,-7.642815,-9.073817,2.109344,-9.142438,-1.930801,-4.816252,0.763558,-6.331891,3.670354,7.119525,-9.372458,-7.749803,-2.745553,-0.906092,1.635632,0.910236,3.790691,0.085997,3.607604,-9.559168,-7.840088,-4.164768,1.969105,1.157051,8.635335,-8.893762,5.927396,-1.037008,7.320381,9.874790,6.962805,-3.920268,-9.176262,4.596945,-3.410333,2.644207,-4.801299,-6.823457,9.357572,2.126588,6.057601,-2.040375,-2.386110,-8.003484,-3.521029,-6.090848,-8.789029,-1.559009,-1.276436,-5.463516,4.862139,-0.420553,-4.477403,-6.483897,-3.671723,-8.144387,9.254211,-4.016671,2.660400,-7.076836,-1.351829,-9.681768,0.268343,-4.310962,-4.818888,-4.263980,-6.146397,-0.946520,-5.481703,-9.725320,-5.042861,-7.735577,-2.747255,7.804177,2.706579,4.392607,-2.254697,-0.620079,-8.178524,-3.015524,-1.988882,-1.325208,7.493177,0.529687,0.177253,-9.325171,-7.515542,-1.493732,2.837344,7.929409,5.657637,-3.048953,-8.778417,0.009418,4.167794,6.107423,7.080765,3.377400,-1.574937,-5.808066,-6.961021,6.664874,4.880888,5.920548,9.457722,6.214064,0.332784,8.819439,-5.678631,-7.462971,-2.400353,9.464319,-8.452989,-6.875296,5.325290,-2.061463,5.863266,4.307316,3.773190,0.836843,0.355622,6.620783,-0.341903,-1.540012,-4.976924,4.735993,-6.945049,-3.442494,7.816280,-0.343828,5.128214,-0.602738,-6.397368,5.259900,0.962022,2.034112,5.090791,6.479077,1.840113,-3.657370,2.622792,-4.238690,6.058345,-7.520705,1.652924,6.346365,5.269309,2.325157,0.604525,-6.449408,7.430450,3.132259,-2.725510,-4.469459,-9.011154,7.638560,-2.333748,-7.612460,-2.159378,-3.431221,4.812308,-2.680809,-6.586129,-4.487821,-4.900604,-2.085347,-7.395195,-0.366503,-4.417502,-0.226085,-8.781286,-1.056626,3.034245,-5.595790,2.964226,2.548505,-6.100016,-9.430969,1.241801,0.814709,9.437930,0.921169,0.486744,-0.139744,6.263977,0.702462,7.290759,-6.964941,-8.869462,-4.035023,-9.180419,-8.810844,-1.442094,7.766695,4.828218,5.403182,-1.186813,9.904362,4.690077,5.695455,-0.578134,-4.555839,9.383528,3.904121,7.855717,8.000175,5.898301,-2.107089,-9.164800,-8.197488,-9.102479,-2.613603,-4.751459,4.194843,-9.668187,-5.746904,4.997115,-8.936197,-4.059757,-6.787870,1.712335,6.695566,2.124075,-1.741208,9.386846,1.588429,2.579701,-1.447127,6.677588,0.298815,-4.115885,5.901872,-2.109520,-8.602320,7.453818,-6.503423,4.894939,7.303184,4.711749,-1.982386,-3.732999,3.999318,-3.699024,-9.382046,0.610268,6.217549,2.753278,7.361447,-9.799333,-2.246079,-5.830626,-0.633141,-6.980749,-1.528313,-3.556106,-9.611267,-1.888103,-7.674082,3.558012,9.963849,-3.799829,2.377044,6.347385,7.942489,-2.948410,6.775305,-7.841023,-3.169843,3.297906,-3.030050,-2.882940,3.736165,-3.644605,9.007433,-0.132083,-6.435634,0.289794,-2.863451,-3.032124,-6.942416,-1.018705,5.601095,5.044917,4.424459,-9.772759,-9.454322,3.820816,-1.667906,6.198179,2.996947,-1.574039,-3.153443,2.483873,-2.364882,-0.386317,7.986017,-4.146653,6.302597,-9.364327,-2.522281,4.455841,3.111743,-5.562423,-4.714030,5.997587,9.549768,-5.813065,4.464909,9.220768,4.282576,-2.620409,-7.994193,-9.279605,0.945607,-3.630698,2.736967,-1.992224,-0.716399,-2.159670,5.479086,6.327495,7.125710,-2.571050,8.722859,-8.378497,-1.076239,9.292649,9.059462,-1.024381,9.636076,7.453475,-9.617110,9.118390,-9.987340,-3.293220,-3.216946,0.567219,7.518035,-6.143274,7.732682,4.478716,-8.752311,-5.306698,-0.329646,-4.034205,3.953175,0.359727,0.932706,6.211092,-7.870539,1.095822,3.310732,0.249303,1.410156,0.874216,-0.127538,-3.214261,-3.851525,8.537248,8.358795,-8.212419,6.990550,3.406477,-8.967207,-6.154683,-6.275591,9.733279,-9.807430,-9.591481,8.539715,-1.004458,-6.240257,-9.142983,6.825396,-3.650364,8.627916,-3.919208,-8.289277,9.052127,-3.068808,1.816167,-4.779157,-9.111267,5.628245,-9.531835,-1.209594,0.433642,5.873141,1.191581,5.502781,9.724479,-1.811290,0.988244,8.451397,-2.581643,-8.809570,-2.973963,-7.524154,-6.573997,7.800613,-4.091171,5.640246,4.308359,6.881585,-4.815775,-7.682381,9.027829,0.152443,7.303497,-4.606987,-3.298748,1.674731,5.781919,7.145157,-3.791315,-8.641238,-9.175709,-2.632990,-9.160821,9.009218,-1.202471,-6.980400,-1.766694,-7.377331,4.995129,7.093353,2.810371,-5.330586,7.039376,-5.791383,7.314847,-3.540400,8.930738,9.479870,9.562232,-5.621361,-0.183480,4.169517,-1.235544,-7.478119,-9.401174,9.890698,-8.071446,-3.536146,7.809653,1.764203,7.956335,-5.961016,-2.444499,-9.149621,-9.590095,5.218975,-4.010185,-3.534333,-4.561402,-5.991829,-4.593993,4.924935,7.318252,-5.063480,-9.634888,5.903966,-1.893863,-4.266361,9.905960,-8.949045,6.512089,-5.375709,-0.060899,-4.073147,4.525963,-9.083665,-5.006173,1.224974,8.244747,-0.109722,1.592246,-7.625491,-7.480945,8.447373,6.478385,9.334078,5.944740,-7.604870,-7.019723,8.110955,0.138258,-9.843386,7.479101,-4.711273,7.313115,-3.931725,-2.062441,-6.747353,-3.483936,8.284735,6.208190,-0.753441,-3.051153,1.734257,-8.864106,8.504616,-8.499637,3.234904,2.720369,-4.752850,6.924655,5.949819,5.767670,-0.317695,9.899970,-2.734958,-6.791825,-5.350759,9.726678,-3.355699,-0.036063,-4.279560,9.914148,-4.972863,5.076116,0.171848,7.614425,-9.891870,0.657924,-3.272915,-4.690325,8.727925,-9.281525,-1.494466,9.981672,2.362067,-4.771311,-8.994616,0.532541,-2.904350,-7.161870,4.542085,-8.908864,-4.558806,-7.190285,8.039843,5.542390,-4.411825,-1.907436,-8.994140,1.634180,9.523987,6.613610,3.205119,-9.130197,2.840385,5.549515,-2.782945,-4.603112,5.797042,-3.966688,-0.259207,-0.032697,1.349595,0.826040,-4.620837,6.247466,-1.017319,-6.593930,4.417757,6.980004,1.335135,-9.626638,-8.351306,-7.465918,3.657592,-5.771688,5.339781,-9.980558,1.772688,-1.190488,-5.290119,3.870786,-7.548151,-8.675559,-6.341862,-3.502537,4.121083,-1.817937,7.182784,3.501381,3.399559,-6.556978,-6.263490,8.834842,-0.018747,-6.195096,3.096514,2.341474,8.440492,9.086120,4.337668,5.996116,-8.789962,6.860358,-5.175731,3.818030,-2.184839,-1.534041,-9.587329,5.737243,2.093913,-5.235580,4.058591,-5.840060,0.685502,1.109105,7.165359,1.191455,-5.721346,-1.086502,-3.254994,-7.684422,0.209273,1.403137,-6.872605,9.246545,-5.487309,-0.332564,1.507745,-0.298109,-9.675497,-3.496768,-7.076818,-6.218666,-6.219907,-1.502346,-1.971643,0.909606,2.905737,7.944169,7.915955,-9.078497,-2.417600,-0.636976,4.949091,2.024787,-3.102040,-8.544880,0.297735,0.536020,9.589545,-9.907045,-8.870489,5.924455,7.871411,1.792329,0.283974,-7.299214,-4.298355,-8.515126,-0.849369,3.871446,2.680182,6.905421,-7.156528,-2.500784,-4.075476,3.647712,-4.123017,3.947169,-6.491695,3.843970,-1.246487,6.285275,-9.572744,-4.938252,0.309502,1.322284,6.377921,-4.522173,0.451829,8.154030,7.160645,-6.859952,-8.438043,1.535548,-5.727387,-2.875117,1.153281,3.605867,6.063579,-0.607784,0.600987,3.796559,-4.423419,5.453935,-1.051964,-8.257056,1.133790,-3.584867,-5.509056,-1.031384,-6.361218,2.097806,4.951007,1.685745,-8.222710,5.382862,0.002848,5.831738,-7.468572,2.068066,1.379472,7.668496,-8.208235,-7.833747,2.622227,0.818099,-6.909423,9.490636,2.083193,-1.904526,-7.551468,7.389263,3.578260,-7.059572,2.877720,-6.171732,2.072705,-3.876214,3.213332,-6.168965,7.646959,-1.330887,-1.950006,8.487073,-8.559771,6.106557,-5.704274,-7.034779,1.863127,8.933337,-2.430246,-5.500476,9.050693,8.040535,8.578727,-9.592888,9.670099,-2.173559,-8.843740,9.920420,-9.950807,-0.179294,-9.634613,-2.443996,3.980144,-8.118976,5.790668,6.965018,8.784628,-8.458754,-5.149557,-0.722600,3.208473,0.084103,-1.076152,4.234780,1.922710,2.360497,-2.002502,-2.941216,-1.622518,-7.876796,2.392991,-4.290110,-6.739778,2.662795,8.901692,7.781164,7.800334,2.732963,2.237348,-6.660818,-6.793554,-9.856844,0.764510,-5.203888,-7.345821,1.392469,-1.894960,-1.963720,-5.719773,9.164174,2.975700,0.545507,7.064874,7.511098,5.490808,3.607035,6.349961,-3.904860,-9.252375,-4.330103,8.342847,-6.680138,-2.397567,3.925639,9.738782,-2.362040,5.415065,6.224300,-2.459903,0.497052,-2.200705,8.694897,6.256117,-3.890535,-5.749816,-0.472265,-9.524808,6.596631,4.620683,-1.569793,1.159193,-3.292463,-8.695880,2.815978,-1.751876,-6.939926,-0.338090,-4.729747,8.622303,0.184813,-5.758420,-7.804331,9.197756,6.094315,-1.897749,4.523184,-0.162431,-1.370689,6.464244,-0.577984,-1.277615,-1.540072,-9.360591,-1.677832,6.582034,-4.294193,2.645986,-3.877232,-2.386965,-4.126786,5.202666,6.325204,2.828969,-2.378742,4.663616,-0.176676,3.085861,-3.198540,0.838571,-1.902673,3.063698,-3.903688,8.477903,7.037479,-1.510814,-9.241609,7.732258,-5.271864,3.112934,7.332999,0.925846,-8.948780,-9.567998,-1.605353,-8.872949,-4.454941,8.636273,-9.179594,3.935503,6.666551,9.062913,-0.292069,2.925604,6.372292,6.031735,9.523363,-9.658950,-0.095395,0.456334,0.904305,2.877004,2.475434,-0.009694,6.898384,8.963717,-6.869971,-6.402978,4.270984,5.101528,-8.839944,6.799553,7.492468,2.095256,-9.744831,-3.393445,-6.260307,0.458179,4.501615,-5.673912,8.566581,2.269897,-7.422503,-9.420407,1.224149,6.990741,5.312544,9.556407,-5.048476,-0.146400,8.923911,-5.582605,-7.869025,9.562669,-5.170711,-8.671349,6.883912,3.161215,7.420540,3.237683,3.093146,-1.068970,0.600070,2.118907,-2.460986,-6.131794,-1.398671,-3.586342,-1.096054,-9.463665,5.922605,4.981402,-5.446689,-6.051388,-9.961765,-3.898037,-7.703515,-4.081446,6.450322,-0.669473,1.994354,1.284528,9.599355,-5.107797,-2.978299,-1.717869,1.690880,-0.912004,-3.661161,1.722106,8.290000,-8.413041,-1.830124,5.804349,-3.669312,-7.820939,9.889684,-9.399379,8.816269,-7.111110,5.726403,0.585712,-1.757639,7.466193,-8.887947,-5.876585,-4.012000,-3.858626,9.408415,-6.760490,7.606769,-1.103279,0.150765,4.090530,8.216812,-7.428511,0.264309,-5.497828,4.061592,-2.402914,-0.064581,3.756746,-3.736643,-1.921004,-8.900657,4.866002,3.919691,-9.462262,-4.582852,0.583403,2.508780,1.502325,8.797075,4.804361,9.115563,-5.816762,-6.779899,-2.962509,3.438420,-5.704491,-0.384028,3.299698,4.673733,-4.178470,-2.430245,-6.820503,8.968225,-3.407878,0.139767,7.504633,9.705413,-6.307189,-9.260821,-4.276249,8.478962,3.046877,4.017811,3.070162,-7.366606,-6.576920,0.258147,-1.678021,-8.667567,0.985888,-8.949087,-2.233616,6.889841,3.773312,-7.176206,6.278643,2.210003,1.018007,-2.220931,5.012970,-2.563006,7.009146,-0.251772,-1.187178,-7.373875,-5.996246,-6.669666,-7.203272,-2.403488,1.195587,-2.508497,-1.228722,2.061557,-4.964577,0.150530,-1.610149,3.526876,8.763571,-1.136439,2.771824,-8.505996,0.320130,-7.775486,-5.851872,-5.027034,1.506165,-8.081503,-1.979849,6.985984,6.465547,-5.331942,-3.836694,1.037561,-5.416838,5.673130,-6.753513,0.133551,4.732759,-1.056189,-4.441448,8.436544,8.969469,-7.301201,-2.413855,-6.635143,-5.933634,7.806803,-2.103909,-1.423814,-1.752674,-6.781767,8.679563,9.801800,-3.637163,-0.208593,-8.531400,-9.342862,-9.709553,1.474987,4.222885,-0.001102,-7.628409,-8.317921,7.875619,1.562485,6.698888,-1.523530,-0.333178,1.171718,4.435708,2.824974,3.092089,0.333187,-3.193902,-3.255376,-2.909914,5.565320,7.112466,-9.183707,6.209353,-7.454628,1.720572,2.893701,-4.255139,-4.661807,3.881879,0.930863,-2.801055,-1.886188,0.929309,-0.801004,1.629341,9.738051,6.129457,2.571196,3.509457,8.414490,4.630416,-0.731784,3.062238,5.440018,5.210752,-4.490744,-1.847816,-5.366303,8.431422,6.471827,8.541552,9.782080,-2.146911,1.654169,4.553841,2.153740,8.771112,-1.786607,-9.312906,7.407786,6.797910,9.530592,-8.658520,6.119409,-4.654457,5.192563,2.813250,2.732381,2.507968,-1.729750,5.649881,5.439705,1.343066,-0.996526,-9.615788,4.036230,4.912887,1.066252,2.439132,9.278386,6.941360,1.056248,-0.349529,0.665619,4.923275,-7.700821,9.366394,0.023474,2.985165,-7.639735,-3.905448,0.978002,7.937658,0.842353,-1.670294,-8.255605,6.725248,-8.440127,-8.659046,-5.445136,4.025842,9.648946,-6.978572,-9.446492,-1.047598,9.612742,-5.685505,-5.505837,5.013885,-5.890639,-0.643764,-2.770336,-8.099965,8.298084,-9.388421,-9.034319,-4.005485,-9.687399,6.378694,6.793564,7.824791,-8.089713,1.790652,3.454565,-5.341427,-0.312158,1.421522,5.175216,-4.153895,-6.679773,-4.743344,-4.858206,-2.040141,0.850373,4.593875,9.008048,-1.629990,8.865594,-1.497939,-2.480928,-8.008285,-2.977176,9.160331,-1.489219,-1.266126,-8.060546,5.346415,-6.363767,4.314384,5.149169,-1.321917,-2.489217,-6.441569,-6.605019,-3.119013,-9.828838,-7.126518,-2.109153,-9.823600,2.450131,-2.662335,3.951912,-8.410933,5.983618,0.893411,9.098291,-3.552878,-4.997569,7.808583,8.005940,-3.067761,-9.668475,-0.216031,-5.958054,0.529659,-0.871676,-4.434722,-0.622074,6.394853,-5.757759,-4.896089,-4.857743,4.305439,-4.671923,5.526634,4.086099,2.942197,-9.397118,-3.494239,-9.767438,-1.673409,3.560131,-7.509248,-2.250544,-4.584328,-7.771055,-4.091031,8.220635,-4.167084,-9.783630,0.990796,4.968944,7.420818,4.589343,-8.575435,-8.138122,-7.041522,3.252936,2.498847,-9.237709,7.541357,-7.890760,0.279475,7.839527,7.585243,7.270818,9.960422,8.511794,4.237429,9.086108,-2.250878,-8.010453,6.066168,9.179496,2.249423,-8.111407,8.227687,-5.092004,-6.012658,-2.264745,1.327400,6.588713,-2.419978,-5.417414,0.788183,4.304616,7.916746,-4.283125,-3.347944,1.190037,8.020190,-0.039023,-8.139793,6.900572,-5.573597,9.040255,0.336530,1.420455,7.485489,3.503503,0.752024,2.532004,5.077059,6.120113,9.313772,5.574863,7.338280,5.741579,1.526627,-8.695465,-4.956332,9.723939,-4.458432,7.482927,-2.623085,-4.110184,-8.686516,-0.948687,8.010517,4.993819,-2.481519,2.290431,-2.368004,-3.250823,3.435030,1.549348,-0.063731,-8.691577,1.887733,-9.086137,-0.020451,9.156704,-1.585000,-5.791135,-2.334383,4.296824,5.410775,-7.839458,4.233455,8.436046,2.333527,9.830640,6.200217,2.027728,8.984775,4.752648,-0.308135,-2.648588,-1.980737,3.150292,-3.319896,-5.402819,3.606240,7.854596,0.582153,-9.158728,-3.396326,-2.518352,2.332243,-6.915935,8.881874,-4.654813,6.985026,7.242879,-3.590113,-2.348655,0.366570,-2.064675,4.690213,0.782942,-2.947997,9.346821,8.456234,-8.083627,2.938931,-3.415586,-9.121450,9.916912,1.726414,-0.415665,8.295926,2.397464,5.023691,1.040991,5.531804,3.195177,-8.707339,-5.416068,-4.469752,-0.897479,-0.691056,-1.788041,-6.729248,-8.224471,-6.703837,9.312091,5.692884,-3.807393,-9.072137,4.814249,8.417411,2.987236,8.935319,9.771553,-4.467568,-8.513824,-3.338584,-6.904431,-3.557750,4.671276,1.034847,-3.221977,0.708582,7.245215,-8.928792,6.214839,3.443527,-1.632003,2.986199,-8.420895,0.681063,-5.150551,1.811164,-9.402109,8.063744,7.659054,-1.954936,6.083771,-1.367787,4.174652,2.322466,-6.229497,1.422038,2.479331,1.618188,7.922389,-0.661709,-2.613678,-1.981302,6.372309,-1.506123,-1.343683,-5.106312,-7.871561,-2.868478,-9.122240,7.384354,-3.695368,9.283773,4.411724,6.660542,7.029452,-2.622730,9.115388,5.571359,-0.588388,0.731057,-5.402363,-3.428555,5.127825,8.563627,-7.191262,-3.623454,3.673102,-3.803295,-0.236374,5.671016,-3.747054,-9.826461,-2.618662,-5.021703,6.926884,9.862668,-2.438006,2.675384,-9.730484,0.569320,5.015472,7.252157,4.742226,2.783544,9.133475,5.717180,-5.670783,-8.529446,6.309174,5.365245,-1.832169,2.733966,-3.821462,-3.257284,9.855058,4.112695,-8.510488,8.117600,-2.911527,7.556571,-0.318970,7.785677,-7.035808], dtype = "float64")#candidate|5036|(1859,)|const|float64
call_5035 = relay.TupleGetItem(func_2465_call(relay.reshape(const_5036.astype('float64'), [13, 11, 13]), relay.reshape(const_5036.astype('float64'), [13, 11, 13]), ), 0)
call_5037 = relay.TupleGetItem(func_2469_call(relay.reshape(const_5036.astype('float64'), [13, 11, 13]), relay.reshape(const_5036.astype('float64'), [13, 11, 13]), ), 0)
func_4627_call = mod.get_global_var('func_4627')
func_4628_call = mutated_mod.get_global_var('func_4628')
call_5038 = relay.TupleGetItem(func_4627_call(), 0)
call_5039 = relay.TupleGetItem(func_4628_call(), 0)
output = relay.Tuple([call_5032,call_5035,const_5036,call_5038,])
output2 = relay.Tuple([call_5033,call_5037,const_5036,call_5039,])
func_5054 = relay.Function([], output)
mod['func_5054'] = func_5054
mod = relay.transform.InferType()(mod)
mutated_mod['func_5054'] = func_5054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5054_call = mutated_mod.get_global_var('func_5054')
call_5055 = func_5054_call()
output = call_5055
func_5056 = relay.Function([], output)
mutated_mod['func_5056'] = func_5056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3633_call = mod.get_global_var('func_3633')
func_3635_call = mutated_mod.get_global_var('func_3635')
call_5057 = relay.TupleGetItem(func_3633_call(), 0)
call_5058 = relay.TupleGetItem(func_3635_call(), 0)
output = call_5057
output2 = call_5058
func_5086 = relay.Function([], output)
mod['func_5086'] = func_5086
mod = relay.transform.InferType()(mod)
mutated_mod['func_5086'] = func_5086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mutated_mod.get_global_var('func_5086')
call_5087 = func_5086_call()
output = call_5087
func_5088 = relay.Function([], output)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5091 = relay.const([[[9,-8]],[[-2,3]],[[7,-4]],[[-10,-2]],[[8,3]],[[-4,-5]],[[-2,-3]],[[-4,-5]],[[-10,-6]]], dtype = "uint16")#candidate|5091|(9, 1, 2)|const|uint16
var_5092 = relay.var("var_5092", dtype = "uint16", shape = (9, 9, 2))#candidate|5092|(9, 9, 2)|var|uint16
bop_5093 = relay.logical_xor(const_5091.astype('uint16'), var_5092.astype('uint16')) # shape=(9, 9, 2)
func_1535_call = mod.get_global_var('func_1535')
func_1537_call = mutated_mod.get_global_var('func_1537')
var_5098 = relay.var("var_5098", dtype = "uint8", shape = (36, 10))#candidate|5098|(36, 10)|var|uint8
call_5097 = relay.TupleGetItem(func_1535_call(relay.reshape(var_5098.astype('uint8'), [2, 12, 15])), 0)
call_5099 = relay.TupleGetItem(func_1537_call(relay.reshape(var_5098.astype('uint8'), [2, 12, 15])), 0)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_5113 = func_2553_call()
call_5114 = func_2553_call()
func_2670_call = mod.get_global_var('func_2670')
func_2671_call = mutated_mod.get_global_var('func_2671')
call_5119 = func_2670_call()
call_5120 = func_2670_call()
output = relay.Tuple([bop_5093,call_5097,var_5098,call_5113,call_5119,])
output2 = relay.Tuple([bop_5093,call_5099,var_5098,call_5114,call_5120,])
func_5121 = relay.Function([var_5092,var_5098,], output)
mod['func_5121'] = func_5121
mod = relay.transform.InferType()(mod)
var_5122 = relay.var("var_5122", dtype = "uint16", shape = (9, 9, 2))#candidate|5122|(9, 9, 2)|var|uint16
var_5123 = relay.var("var_5123", dtype = "uint8", shape = (36, 10))#candidate|5123|(36, 10)|var|uint8
output = func_5121(var_5122,var_5123,)
func_5124 = relay.Function([var_5122,var_5123,], output)
mutated_mod['func_5124'] = func_5124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3270_call = mod.get_global_var('func_3270')
func_3272_call = mutated_mod.get_global_var('func_3272')
call_5126 = relay.TupleGetItem(func_3270_call(), 0)
call_5127 = relay.TupleGetItem(func_3272_call(), 0)
output = relay.Tuple([call_5126,])
output2 = relay.Tuple([call_5127,])
func_5142 = relay.Function([], output)
mod['func_5142'] = func_5142
mod = relay.transform.InferType()(mod)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mutated_mod.get_global_var('func_5142')
call_5143 = func_5142_call()
output = call_5143
func_5144 = relay.Function([], output)
mutated_mod['func_5144'] = func_5144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2746_call = mod.get_global_var('func_2746')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_5163 = func_2746_call()
call_5164 = func_2746_call()
output = call_5163
output2 = call_5164
func_5180 = relay.Function([], output)
mod['func_5180'] = func_5180
mod = relay.transform.InferType()(mod)
mutated_mod['func_5180'] = func_5180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5180_call = mutated_mod.get_global_var('func_5180')
call_5181 = func_5180_call()
output = call_5181
func_5182 = relay.Function([], output)
mutated_mod['func_5182'] = func_5182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3694_call = mod.get_global_var('func_3694')
func_3695_call = mutated_mod.get_global_var('func_3695')
call_5203 = relay.TupleGetItem(func_3694_call(), 0)
call_5204 = relay.TupleGetItem(func_3695_call(), 0)
func_5180_call = mod.get_global_var('func_5180')
func_5182_call = mutated_mod.get_global_var('func_5182')
call_5217 = func_5180_call()
call_5218 = func_5180_call()
output = relay.Tuple([call_5203,call_5217,])
output2 = relay.Tuple([call_5204,call_5218,])
func_5228 = relay.Function([], output)
mod['func_5228'] = func_5228
mod = relay.transform.InferType()(mod)
output = func_5228()
func_5229 = relay.Function([], output)
mutated_mod['func_5229'] = func_5229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mod.get_global_var('func_3026')
func_3028_call = mutated_mod.get_global_var('func_3028')
call_5257 = func_3026_call()
call_5258 = func_3026_call()
func_1668_call = mod.get_global_var('func_1668')
func_1670_call = mutated_mod.get_global_var('func_1670')
const_5260 = relay.const([8.095700,2.827437,-4.118669,-3.379039,-0.333393,-4.421296,-0.109312,5.253314,6.373610,9.852027,-7.258662,4.436823,-0.179290,1.079357,-5.847598,1.378031,3.151016,-6.652162,7.139002,-5.017765,5.640367,-8.937358,-9.823497,-4.608798,8.220337,8.548962,3.952331,-2.159005,3.967237,3.047166,-1.162915,5.229636,-6.492599,-5.058177,-7.895583,8.001281,3.153960,-8.709147,2.245507,0.061444,-2.125544,-1.409900,-5.047739,-2.804181,-3.802282,0.569621,-5.947823,-4.560343,-0.766492,0.209460,6.509782,-4.568207,-7.111399,-8.442010,-8.168764,6.632388,-7.037932,-3.424397,-9.960886,6.491536,9.683830,-7.494125,3.053390,-0.736833,4.009696,6.150584,-6.920786,6.550093,-5.493251,-4.138069,-3.828992,1.608538], dtype = "float32")#candidate|5260|(72,)|const|float32
call_5259 = func_1668_call(relay.reshape(const_5260.astype('float32'), [9, 8]))
call_5261 = func_1668_call(relay.reshape(const_5260.astype('float32'), [9, 8]))
output = relay.Tuple([call_5257,call_5259,const_5260,])
output2 = relay.Tuple([call_5258,call_5261,const_5260,])
func_5272 = relay.Function([], output)
mod['func_5272'] = func_5272
mod = relay.transform.InferType()(mod)
output = func_5272()
func_5273 = relay.Function([], output)
mutated_mod['func_5273'] = func_5273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3988_call = mod.get_global_var('func_3988')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_5290 = func_3988_call()
call_5291 = func_3988_call()
output = relay.Tuple([call_5290,])
output2 = relay.Tuple([call_5291,])
func_5318 = relay.Function([], output)
mod['func_5318'] = func_5318
mod = relay.transform.InferType()(mod)
mutated_mod['func_5318'] = func_5318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5318_call = mutated_mod.get_global_var('func_5318')
call_5319 = func_5318_call()
output = call_5319
func_5320 = relay.Function([], output)
mutated_mod['func_5320'] = func_5320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mod.get_global_var('func_3388')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_5398 = relay.TupleGetItem(func_3388_call(), 0)
call_5399 = relay.TupleGetItem(func_3390_call(), 0)
output = relay.Tuple([call_5398,])
output2 = relay.Tuple([call_5399,])
func_5401 = relay.Function([], output)
mod['func_5401'] = func_5401
mod = relay.transform.InferType()(mod)
output = func_5401()
func_5402 = relay.Function([], output)
mutated_mod['func_5402'] = func_5402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5415 = relay.var("var_5415", dtype = "float64", shape = (9, 12, 9))#candidate|5415|(9, 12, 9)|var|float64
uop_5416 = relay.exp(var_5415.astype('float64')) # shape=(9, 12, 9)
func_3694_call = mod.get_global_var('func_3694')
func_3695_call = mutated_mod.get_global_var('func_3695')
call_5424 = relay.TupleGetItem(func_3694_call(), 0)
call_5425 = relay.TupleGetItem(func_3695_call(), 0)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_5426 = func_3679_call()
call_5427 = func_3679_call()
output = relay.Tuple([uop_5416,call_5424,call_5426,])
output2 = relay.Tuple([uop_5416,call_5425,call_5427,])
func_5430 = relay.Function([var_5415,], output)
mod['func_5430'] = func_5430
mod = relay.transform.InferType()(mod)
mutated_mod['func_5430'] = func_5430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5431 = relay.var("var_5431", dtype = "float64", shape = (9, 12, 9))#candidate|5431|(9, 12, 9)|var|float64
func_5430_call = mutated_mod.get_global_var('func_5430')
call_5432 = func_5430_call(var_5431)
output = call_5432
func_5433 = relay.Function([var_5431], output)
mutated_mod['func_5433'] = func_5433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_5442 = func_2553_call()
call_5443 = func_2553_call()
output = call_5442
output2 = call_5443
func_5445 = relay.Function([], output)
mod['func_5445'] = func_5445
mod = relay.transform.InferType()(mod)
output = func_5445()
func_5446 = relay.Function([], output)
mutated_mod['func_5446'] = func_5446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_5457 = relay.TupleGetItem(func_2633_call(), 0)
call_5458 = relay.TupleGetItem(func_2634_call(), 0)
func_5445_call = mod.get_global_var('func_5445')
func_5446_call = mutated_mod.get_global_var('func_5446')
call_5484 = func_5445_call()
call_5485 = func_5445_call()
func_737_call = mod.get_global_var('func_737')
func_740_call = mutated_mod.get_global_var('func_740')
var_5488 = relay.var("var_5488", dtype = "float32", shape = (1, 117))#candidate|5488|(1, 117)|var|float32
call_5487 = relay.TupleGetItem(func_737_call(relay.reshape(var_5488.astype('float32'), [1, 13, 9])), 4)
call_5489 = relay.TupleGetItem(func_740_call(relay.reshape(var_5488.astype('float32'), [1, 13, 9])), 4)
output = relay.Tuple([call_5457,call_5484,call_5487,var_5488,])
output2 = relay.Tuple([call_5458,call_5485,call_5489,var_5488,])
func_5502 = relay.Function([var_5488,], output)
mod['func_5502'] = func_5502
mod = relay.transform.InferType()(mod)
var_5503 = relay.var("var_5503", dtype = "float32", shape = (1, 117))#candidate|5503|(1, 117)|var|float32
output = func_5502(var_5503)
func_5504 = relay.Function([var_5503], output)
mutated_mod['func_5504'] = func_5504
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5513 = relay.var("var_5513", dtype = "float32", shape = (8, 1, 6))#candidate|5513|(8, 1, 6)|var|float32
uop_5514 = relay.exp(var_5513.astype('float32')) # shape=(8, 1, 6)
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
var_5525 = relay.var("var_5525", dtype = "float64", shape = ())#candidate|5525|()|var|float64
const_5526 = relay.const([[-3.980088,-6.536398,-9.472602,-5.965564,-1.872095,-9.212724,-0.724983,-9.268942,0.869776,-9.585912,7.455159,-5.420869,-0.119967,1.400295,4.973228,-7.172668,0.976511,8.003769,8.081711,1.177466,4.567329,-6.611109,5.609116,5.244977,-2.365342,-3.316587,6.603706,0.923771,4.115023,5.378849,8.862213,-0.602421,-9.917302,2.183037,2.627614,4.966518,-4.847940,-6.660373,-4.627259,-0.580293,4.229816,5.443460,-7.084216,1.345323,8.881354,-3.633294,-5.238615,-6.857859,-9.132093,-3.798710,-6.264993,4.076384,2.766911,-2.375125,4.805585,-7.880114,-9.544889,-2.242380,-8.384982,-6.910279,-8.156381,5.906179,1.423706,2.931519,2.554688,9.445507,-6.550148,-0.300666,0.319153,7.025830,2.990663,4.016904,0.176304,-4.917640,1.664106,-5.259751,2.445282,-1.441639,4.711114,2.294150,-5.831047,-9.827629,7.483554,-4.298185,4.301078,3.876215,-4.718838,-1.964561,-3.100836,9.534839,3.487238,7.458010,2.241563,2.152687,-5.691201,7.774614],[-6.404274,9.441632,-5.724010,-9.280734,5.987698,1.413779,-6.213489,-5.169904,-2.151872,2.588499,9.993784,1.826911,-3.124416,3.903057,4.614871,1.797410,-2.476614,9.470615,0.198531,-2.204676,7.849573,-0.197240,-4.154901,2.546731,-6.533195,-2.454688,3.324241,6.229732,8.487831,-8.481011,3.480651,-5.315921,-6.895391,8.679767,4.568493,3.048510,0.422528,-5.947371,-4.924908,-5.948290,-0.206102,-1.343982,-3.832933,-6.608646,-9.294019,-7.346113,-2.149472,2.020643,-5.591806,-1.625449,-8.123418,9.641208,4.606294,1.849197,1.708843,0.475040,3.727646,4.668660,4.542400,3.529088,5.418892,5.669610,-9.423622,-1.742656,9.116394,-8.538028,-8.206796,8.514227,0.597835,3.353678,9.433320,6.369052,-2.992782,-7.666133,-9.387482,6.857011,-4.912569,1.156484,5.176835,2.683009,4.541773,3.758481,4.181232,4.238726,2.782460,1.242820,2.399739,2.401381,-3.482438,3.557222,1.184419,-5.014243,-1.103368,-2.383932,8.349223,-9.996310],[9.616584,9.760916,4.675113,-7.676366,8.573786,0.693830,-2.323515,8.180849,-2.381966,9.780671,8.845156,4.397318,0.306888,-8.325496,-5.105014,4.394945,-8.006899,-1.444158,-0.109437,-1.228155,3.318812,-4.018501,3.395104,-0.040195,8.516066,3.527501,3.953774,-9.904202,1.240751,0.845052,2.803028,7.241787,3.739666,9.433369,-7.109949,-9.208962,7.621773,8.012254,-9.898862,0.366746,9.248829,-7.681989,5.188151,-9.050450,6.753159,-0.867071,-9.783721,-8.124303,-3.133285,9.299146,-3.921657,-1.682929,9.484097,-3.944996,8.946130,0.746280,-8.998377,3.393602,-0.923868,-4.227181,6.545342,-2.261276,4.301948,-5.933314,0.377794,-1.558760,8.801373,7.684427,2.568912,-6.526631,2.863262,0.155841,5.645643,-9.921591,-5.458465,-1.609416,9.590107,-3.902709,2.044071,-0.053620,-9.440857,-3.346817,0.286124,-8.821949,3.924979,8.970295,-2.407864,2.335563,3.708903,1.396686,-7.884165,-7.406458,8.022435,-4.016656,9.488095,9.273351],[-8.139727,2.055876,7.094062,-9.410227,-6.433786,-3.698440,-9.385192,-0.538752,4.075493,-4.961538,8.338258,7.546001,4.488907,-8.773763,6.679436,-3.610888,1.532132,8.604347,-0.830098,-2.311224,-8.645669,2.322260,-6.468640,-9.105727,-2.541118,0.168463,0.598484,-7.365607,1.850583,7.575019,-0.983460,-8.734501,1.239545,-2.767420,8.061569,-6.622291,3.586804,-5.266150,-5.541808,4.526763,7.402584,-6.627557,-6.566600,0.213656,7.553294,-3.799073,6.672345,-8.500262,-2.991560,-4.465464,6.119475,6.127866,-1.639800,-7.030866,6.093852,8.172221,-2.420177,8.035240,-4.375569,-4.686144,-7.289258,4.542458,2.208991,-0.010773,3.695579,5.541010,-8.948095,7.388354,8.988610,2.915506,-9.535621,5.653645,-2.066497,2.762361,-1.198330,7.677564,-9.044131,-1.946818,-1.813268,8.260222,1.780577,-8.640090,-1.679116,-2.274037,9.362785,-6.594737,8.322275,-6.983026,-5.580163,-2.236965,-1.710762,3.459790,4.908637,-2.105153,9.601589,9.262568],[4.772608,-3.859313,2.455416,7.619198,-6.263366,-0.198289,3.924004,8.780857,-3.703297,-4.523067,0.055320,4.975139,4.131696,-5.064994,-4.813561,3.294658,4.651506,7.262182,8.335274,6.748513,-0.125275,5.024033,8.988365,4.306728,-2.496242,-4.737665,-5.989753,-4.196663,9.860306,-4.851220,-9.332771,8.570709,0.907782,1.688230,0.225782,-9.534505,-2.568666,-3.707830,-9.040484,-1.686557,1.683860,9.129393,-0.099352,-4.243546,-1.984867,1.770935,-9.577298,2.835391,4.431134,-0.822917,8.040216,-8.978889,-0.183809,0.407247,3.687815,-6.882103,-1.803367,-0.679442,0.745027,0.179082,5.913383,4.939087,1.187428,1.240899,6.305248,-5.153369,-9.731687,-4.951257,3.381569,7.237403,2.267862,8.680168,6.683073,5.311052,-0.261112,7.665640,3.894981,-6.258270,3.686547,-8.208979,7.543858,0.878128,2.378846,8.025876,-5.983803,1.877882,-9.696520,1.980164,-9.078785,-5.414172,6.121717,-9.245296,-0.924441,-7.965682,-8.065325,-3.060916],[9.553789,3.208929,-2.765814,7.848291,-5.760050,-2.521572,7.795744,-1.967130,-3.404905,8.184316,-0.311319,6.052333,-1.801961,-9.088633,-3.637743,-3.096620,1.813086,-0.051729,-5.936471,-8.023271,2.834790,5.206516,-8.640021,-2.294570,4.888768,8.492139,-8.279654,-3.188149,-9.204928,5.257293,-4.451734,-2.497310,-0.874359,4.346416,-3.066556,6.954383,-4.389807,-6.131672,-2.610574,-3.639500,-2.251157,-4.355219,-9.708086,5.032774,9.920747,4.805965,5.209661,1.456226,-2.599518,-8.257408,-6.598211,-1.911481,6.481667,-7.301524,-3.508950,9.684159,-4.495022,2.976338,-1.133807,5.579296,8.672022,6.013164,-9.565605,-8.710618,2.635359,3.576679,-6.830129,2.616963,-2.554147,-3.063600,-7.227872,-5.796968,4.026793,4.195071,-8.309061,2.956587,1.279968,-7.415059,-8.956539,-7.095324,-6.589884,1.739394,-4.575725,-7.605016,-9.080030,1.305077,-9.071867,5.912708,6.019712,4.843730,7.747400,5.001568,-6.064216,-4.097004,9.624355,-0.747660],[-2.041770,-8.843276,-0.322892,-1.435238,6.391924,1.934258,6.482487,1.568048,2.415033,-5.496032,-5.806202,6.413746,-3.093904,3.191993,8.220232,7.884441,5.512042,-0.401020,-1.808289,3.532931,-9.087759,4.348679,9.914806,-8.268884,9.546973,-2.998666,-6.239628,-3.164705,6.646875,-9.432229,-2.431284,8.136560,-3.970116,5.303000,-1.509786,-2.504009,-3.040256,-0.848384,8.705444,-2.952643,3.027902,-3.791191,9.715400,-3.765106,-6.126533,1.342380,-0.507839,-2.739665,-7.791185,5.232694,-9.938214,6.642254,4.163496,4.321971,-8.981621,-6.289355,-6.564292,4.033831,4.225696,-9.894077,2.183132,-9.237154,-2.809155,-1.550052,7.568008,0.595838,8.761259,-7.913246,-4.036412,5.114585,5.411045,6.698125,-6.385858,4.670425,-3.193767,3.906407,6.290322,-1.787325,1.133591,-0.563806,-5.926426,-2.537642,-9.474860,4.890518,-5.154819,7.397028,-1.839440,6.725461,-7.198979,-3.735482,5.914589,-1.360869,-6.634383,-8.703993,2.546338,-9.618488],[8.207074,5.140424,1.260519,-6.237219,-5.852111,2.187291,-1.702479,3.295824,-5.540198,-5.745372,-2.588649,-0.273631,3.695320,-9.118040,-9.575028,-8.683305,0.269536,8.767770,-6.863324,3.770303,-9.623538,5.994847,3.059577,1.704042,1.808208,7.257717,-6.450091,-5.077553,3.024125,-6.632406,5.758195,5.288746,-1.537415,8.967975,-7.996069,8.681028,3.390371,-1.113426,-2.715587,-7.593394,7.170658,4.537187,-4.320368,3.455309,-6.122434,1.713376,-9.104983,-6.921795,9.268677,-6.009904,-8.943589,-3.980540,-7.247795,1.281309,-5.315579,-7.380423,6.730114,4.588780,8.951226,1.394471,-6.692742,2.226064,2.723788,-9.767988,3.827595,5.221261,-4.168009,-6.890132,-7.209624,3.674567,2.358712,-4.735031,9.150608,-9.410445,-8.821366,-5.380711,-5.416983,8.605399,-7.669996,5.868781,-0.262463,2.511808,-7.744483,-5.558200,2.321224,-8.657093,4.040838,-5.670393,-4.213586,-3.251451,-7.602616,-0.685643,-5.087227,0.811540,8.184442,0.874651],[9.494256,-4.267035,-1.312527,-5.240787,4.549763,-7.046303,9.694197,9.748027,-9.705406,-4.953322,6.117329,8.710619,-1.676836,-1.424512,0.747743,-7.958345,-1.780147,1.748117,3.317389,0.340206,-6.668556,0.458713,-9.735877,6.586630,-6.538330,0.844033,-3.723089,-0.595480,8.193505,-9.089281,-2.392907,5.717475,-5.110924,5.988881,-8.747541,-7.445072,-8.711508,-3.854193,-4.015398,7.780762,5.974744,-6.611086,-8.688218,7.179047,5.386065,-1.328507,-6.174981,0.608355,-3.107392,-3.310003,4.890563,6.259809,-3.694508,-2.309898,-1.616806,-6.262164,-7.685520,0.922350,1.422295,8.811117,9.044163,-3.189972,3.874724,-9.359049,-3.810615,6.215117,6.525148,3.694908,-0.110944,-7.453938,-8.718375,4.555222,-5.277632,0.886244,2.542990,-8.716022,-3.231228,-2.013072,-3.178711,-7.882246,1.613124,-5.220777,-3.994906,-1.833673,1.878021,5.875910,0.942154,3.125421,-4.637351,5.693831,9.350187,-3.091060,-2.317372,3.150993,0.760549,1.642494],[4.253815,5.112628,-0.899993,2.003020,-6.225813,2.039426,8.495466,5.660773,5.249683,7.331753,7.821284,-7.926987,-2.051862,-3.671341,7.620018,-0.697715,-9.023695,4.621279,2.789704,-0.729974,4.331518,-7.207248,-5.912937,-6.850754,-3.827053,-3.638313,7.239904,-1.912312,7.089168,2.621042,-1.279110,1.330634,9.551147,1.600811,7.071685,5.195181,9.247617,7.439848,6.283931,7.267846,1.405985,6.347026,1.030783,-7.188947,1.870881,8.993132,3.040411,-8.440132,2.859645,-6.285856,4.072868,-7.517992,8.528586,8.738417,8.485663,-5.922300,-5.944335,-7.501725,8.647578,-9.625105,-2.916262,7.585549,7.903622,6.773577,3.038877,4.818674,4.164550,-1.380394,-9.631608,5.810040,-4.233493,-6.050373,-5.137721,-9.498326,-9.873323,-7.175215,7.546595,-1.011477,1.266953,6.865782,9.042451,2.423520,-6.342499,5.153091,1.704799,3.907353,0.876926,3.774845,-4.648488,3.148505,-2.009688,7.180057,7.290303,-7.748356,5.217456,-8.691655]], dtype = "float64")#candidate|5526|(10, 96)|const|float64
call_5524 = relay.TupleGetItem(func_554_call(relay.reshape(var_5525.astype('float64'), []), relay.reshape(const_5526.astype('float64'), [12, 10, 8]), ), 0)
call_5527 = relay.TupleGetItem(func_557_call(relay.reshape(var_5525.astype('float64'), []), relay.reshape(const_5526.astype('float64'), [12, 10, 8]), ), 0)
output = relay.Tuple([uop_5514,call_5524,var_5525,const_5526,])
output2 = relay.Tuple([uop_5514,call_5527,var_5525,const_5526,])
func_5530 = relay.Function([var_5513,var_5525,], output)
mod['func_5530'] = func_5530
mod = relay.transform.InferType()(mod)
var_5531 = relay.var("var_5531", dtype = "float32", shape = (8, 1, 6))#candidate|5531|(8, 1, 6)|var|float32
var_5532 = relay.var("var_5532", dtype = "float64", shape = ())#candidate|5532|()|var|float64
output = func_5530(var_5531,var_5532,)
func_5533 = relay.Function([var_5531,var_5532,], output)
mutated_mod['func_5533'] = func_5533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5318_call = mod.get_global_var('func_5318')
func_5320_call = mutated_mod.get_global_var('func_5320')
call_5548 = relay.TupleGetItem(func_5318_call(), 0)
call_5549 = relay.TupleGetItem(func_5320_call(), 0)
func_4472_call = mod.get_global_var('func_4472')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_5567 = relay.TupleGetItem(func_4472_call(), 1)
call_5568 = relay.TupleGetItem(func_4473_call(), 1)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
const_5584 = relay.const([-8.974878,8.590238,5.287888,7.039188,-2.498687,-9.837953,8.589703,-3.246627,-0.378268,4.999770,-0.910118,8.584025,5.588029,2.584045,5.368536,-9.132627,0.895362,9.777238,-9.392058,4.235942,-0.544025,-1.374184,0.548380,-6.819777,0.265784,3.084544,-5.446758,6.173131,-3.181567,-7.999561,5.525465,5.986535,-3.956168,9.778929,2.540382,2.619980,7.155166,-9.242958,8.071839,-1.993728,-1.777378,-4.257692,-0.248420,6.513752,3.404575,-1.267599,-8.652667,3.899988,-2.499357,1.980382,2.495807,2.879742,-3.737063,9.173442,8.796764,-8.289918,-3.765769,-0.440716,0.370247,8.277887,8.932154,1.217148,-9.445380,-5.777534,-4.880029,-9.768936,-9.663759,-6.077786,3.765196,-0.975423,3.952908,7.446548,-7.992255,-1.810663,4.468626,-2.105468,8.349537,-2.113329,-7.220135,-8.830301,-3.810689,4.426247,5.628499,-4.685182,2.706303,4.051744,3.194807,-2.170275,-8.086791,0.131416,3.536503,-7.362501,-2.678596,-8.386654,7.664346,8.192425,9.214054,-4.429870,-2.794743,-7.053743,-1.630664,-1.590250,-1.755744,0.261321,3.682032,-4.666778,-9.114126,9.999722,9.400963,9.647724,-2.904483,-1.193036,1.843191,-1.220642,8.097969,-9.941453,-1.393689,-8.614162,7.867567,5.720566,-7.023979,7.606607,-6.857572,2.877544,-1.962121,-1.120287,4.818991,0.376078,-7.667736,-9.499899,-2.015357,3.351158,1.162972,0.013557,9.602806,2.877699,-7.989073,-7.354517,0.301508,-3.967480,-6.110244,4.324072,4.636083,9.655039,-6.840591,-2.208560,-5.957360,-8.961333,1.997719,-3.277953,-6.531637,-6.599311,6.971239,-0.566991,3.689738,-7.923821,4.990327,6.778589,-4.316079,-6.089124,4.727835,0.607816,-1.776260,9.696023,6.153830,-6.891803,-8.010790,-8.132168,5.330338,-1.562227,4.398896,5.536948,-4.556620,-2.509557,4.546004,-7.502000,0.798281,-4.492340,2.560800,6.484850,3.563942,-9.322226,-8.235820,2.686900,3.522422,-2.432803,8.642093,-1.972980,1.200830,-7.881823,1.361112,7.550700,8.275854,7.440247,0.353073,8.483699,-7.905927,-6.602860,0.114037,4.368248,-6.456307,8.674474,9.929083,0.223015,-3.880756,1.049926,-3.760203,-2.203985,-3.224253,-3.575352,-0.075554,-9.790364,-5.715297,-5.054899,3.253589,-0.757261], dtype = "float32")#candidate|5584|(216,)|const|float32
call_5583 = func_3054_call(relay.reshape(const_5584.astype('float32'), [9, 2, 12]))
call_5585 = func_3054_call(relay.reshape(const_5584.astype('float32'), [9, 2, 12]))
output = relay.Tuple([call_5548,call_5567,call_5583,const_5584,])
output2 = relay.Tuple([call_5549,call_5568,call_5585,const_5584,])
func_5596 = relay.Function([], output)
mod['func_5596'] = func_5596
mod = relay.transform.InferType()(mod)
mutated_mod['func_5596'] = func_5596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5596_call = mutated_mod.get_global_var('func_5596')
call_5597 = func_5596_call()
output = call_5597
func_5598 = relay.Function([], output)
mutated_mod['func_5598'] = func_5598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_5604 = func_2553_call()
call_5605 = func_2553_call()
func_5180_call = mod.get_global_var('func_5180')
func_5182_call = mutated_mod.get_global_var('func_5182')
call_5614 = func_5180_call()
call_5615 = func_5180_call()
func_1893_call = mod.get_global_var('func_1893')
func_1896_call = mutated_mod.get_global_var('func_1896')
const_5660 = relay.const([-1,-2,6,6,3,10,7,-7,-5,-1,2,-8,-10,-10,-7,10,-4,2,-10,-5,-8,3,3,6,-6,1,-8,-2,-3,-3,7,-10,-6,2,1,-9,4,-6,1,5,1,-7,8,1,-4,-2,6,2,4,-9,3,6,9,-4,-4,-8,-6,-7,-4,6,1,-9,-1,2,-6,4,9,7,-2,8,10,4,-1,-2,9,1,7,-8,2,6,1,5,8,9,3,-9,-5,10,-3,-9,10,2,-1,-6,2,-8,9,-2,5,10,-1,2,-1,-10,-7,-9,-10,-6,5,1,-3,-8,-2,1,4,-7,2,2,2,-2,-2,5,3,-10,-1,-4,2,9,4,3,-3,6,-10,1,-10,-8,-3,2,-4,4,5,-2,-10,3,2,6,6,1,8,-5,-2,-9,-8,10,-5,-7,-10,1,1,8,10,7,3,2,-9,-10,-2,5,-3,-1,-9,3,9,-3,-6,2,-2,1,-8,-9,-10,7,1,1,8,2,-10,9,7,-10,1,-10,-10,2,-6,4,-3,9,4,8,1,1,5,1,-10,-6,2,7,8,1,-2,9,7,-9,-7,-4,7,2,-3,-3,-3,-7,-6,8,-4,6,-5,3,-3,2,7,10,1,-5,4,-1,-8,5,-3,-6,3,4,8,-9,-10,-3,-1,3,7,-8,8,2,-8,-8,10,-9,-9,-3,2,10,-5,9,7,7,1,-7,-7,-5,-3,-7,8,-8,-10,-3,-2,-4,-5,-4,6,8,-9,6,-1,-2,-3,-9,-6,9,-9,10,-5,-10,-9,5,-6,-5,-6,-10,2,-3,-2,8,-1,-5,9,-2,2,-7,6,8,-2,6,6,9,9,-6,6,6,3,10,7,-8,-3,9,6,-9,4,8,-1,-9,9,-9,1,2,9,8,3,-6,-3,-6,-4,-7,10,8,2,-4,-5,6,2,-4,10,-8,9,9,-9,-9,2,1,1,5,-9,4,2,1,-10,5,-6,4,9,7,10,10,4,-4,-3,8,-8,7,4,5,5,-3,5,10,3,-1,-5,-5,-6,-2,7,-4,-4,-6,1,10,3,10,-3,5,8,-8,-9,-10,3,-8,3,7,3,4,7,3,-9,2,-3,-9,3,2,2,8,5,8,-8,-3,-8,-4,-3,9,-9,-6,-7,1,-4,-3,6,-4,9,-9,4,-7,-9,1,7,-3,-10,9,6,7,-7,-8,2,-6,-1,8,-6,-2,-8,-6,1,-3,10,6,4,-10,4,5,-10,-8,5,10,3,-4,-3,7,-2,2,-2,2,4,8,9,-5,-6,2,1,1,-2,-6,-7,-6,1,3,-10,1,6,-3,7,-4,1,2,-5,-7,-10,-1,-3,-8,-9,-10,-9,-3,2,-9,-6,-2,10,10,-7,-2,9,7,-2,-8,9,8,-1,-2,8,2,8,-2,7,4,10,-4,9,3,-6,10,1,3,10,-4,9,-4,-1,-5,-10,-4,-3,9,2,5,5,5,-5,9,-4,-8,1,1,-10,-2,-3,9,7,-2,-10,-6,2,2,-10,3,-3,10,-2,-8,5,-3,8,-6,9,-3,5,-5,-3,-4,-9,-8,7,8,6,4,-6,2,8,-9,10,-8,-1,1,2,-6,2,3,9,1,-7,-1,-3,-7,2,9,-5,-6,2,2,-1,-4,2,2,-1,1,9,1,4,2,1,10,2,4,-1,9,7,-5,-3,2,-10,-1,4,1,-9,4,8,-6,9,-4,10,-4,-7,8,6,5,5,-6,-8,-5,-2,7,-4,-8,-6,-3,6,-3,-6,6,-1,9,6,2,-4,1,9,-6,2,6,-8,2,6,-10,6,-4,6,-10,-1,-8,-1,-3,-8,3,-4,-6,8,10,-5,4,-8,-6,-4,-7,-1,1,6,2,4,-2,4,3,-7,-6,5,4,8,8,-8,-6,1,-1,-1,9,-8,-4,-10,-4,1,-1,-10,10,7,-10,2,-6,-5,-10,-9,4,1,-2,8,-7,-8,5,-3,7,-2,7,-5,9,-1,10,1,9,-3,-10,-1,-8,-5,-10,-10,10,-6,-8,-9,2,-7,10,-6,9,-4,-8,7,-5,-3,-1,-1,-4,8,-7,10,-7,-4,4,-7,-9,3,-5,7,1,4,10,-2,4,8,-7,3,-5,2,-8,2,2,-7,6,-1,-2,8,2,-8,-10,-8,-5,2,9,-9,4,4,-9,-7,3,-1,-2,-10,-8,1,-5,6,3,9,-3,10,-2,-5,5,3,7,4,-2,6,-3,10,7,9,6,-1,-8,6,5,-10,-1,-10,-8,10,1,2,2,-5,9,-8,-3,6,1,-1,3,-9,-6,-7,-5,4,2,1,7,-2,9,-3,-10,-6,-3,9,10,-4,-9,9,-5,-2,-7,10,9,2,3,-2,6,-8,-7,-5,-5,3,8,-7,-5,4,2,-7,8,-8,-5,-8,10,-10,-10,-4,-3,-10,9,8,6,7,5,-10,-3,8,1,-1,-1,-10,7], dtype = "uint16")#candidate|5660|(924,)|const|uint16
call_5659 = relay.TupleGetItem(func_1893_call(relay.reshape(const_5660.astype('uint16'), [14, 6, 11]), relay.reshape(const_5660.astype('uint16'), [14, 6, 11]), ), 0)
call_5661 = relay.TupleGetItem(func_1896_call(relay.reshape(const_5660.astype('uint16'), [14, 6, 11]), relay.reshape(const_5660.astype('uint16'), [14, 6, 11]), ), 0)
func_2746_call = mod.get_global_var('func_2746')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_5697 = func_2746_call()
call_5698 = func_2746_call()
func_3517_call = mod.get_global_var('func_3517')
func_3518_call = mutated_mod.get_global_var('func_3518')
call_5700 = func_3517_call()
call_5701 = func_3517_call()
func_5228_call = mod.get_global_var('func_5228')
func_5229_call = mutated_mod.get_global_var('func_5229')
call_5712 = relay.TupleGetItem(func_5228_call(), 0)
call_5713 = relay.TupleGetItem(func_5229_call(), 0)
output = relay.Tuple([call_5604,call_5614,call_5659,const_5660,call_5697,call_5700,call_5712,])
output2 = relay.Tuple([call_5605,call_5615,call_5661,const_5660,call_5698,call_5701,call_5713,])
func_5724 = relay.Function([], output)
mod['func_5724'] = func_5724
mod = relay.transform.InferType()(mod)
mutated_mod['func_5724'] = func_5724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5724_call = mutated_mod.get_global_var('func_5724')
call_5725 = func_5724_call()
output = call_5725
func_5726 = relay.Function([], output)
mutated_mod['func_5726'] = func_5726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3875_call = mod.get_global_var('func_3875')
func_3876_call = mutated_mod.get_global_var('func_3876')
call_5795 = func_3875_call()
call_5796 = func_3875_call()
func_2746_call = mod.get_global_var('func_2746')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_5826 = func_2746_call()
call_5827 = func_2746_call()
output = relay.Tuple([call_5795,call_5826,])
output2 = relay.Tuple([call_5796,call_5827,])
func_5843 = relay.Function([], output)
mod['func_5843'] = func_5843
mod = relay.transform.InferType()(mod)
output = func_5843()
func_5844 = relay.Function([], output)
mutated_mod['func_5844'] = func_5844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3543_call = mod.get_global_var('func_3543')
func_3545_call = mutated_mod.get_global_var('func_3545')
call_5869 = func_3543_call()
call_5870 = func_3543_call()
uop_5872 = relay.log(call_5869.astype('float64')) # shape=(14, 2, 12)
uop_5874 = relay.log(call_5870.astype('float64')) # shape=(14, 2, 12)
func_3026_call = mod.get_global_var('func_3026')
func_3028_call = mutated_mod.get_global_var('func_3028')
call_5886 = func_3026_call()
call_5887 = func_3026_call()
func_4887_call = mod.get_global_var('func_4887')
func_4888_call = mutated_mod.get_global_var('func_4888')
call_5892 = relay.TupleGetItem(func_4887_call(), 0)
call_5893 = relay.TupleGetItem(func_4888_call(), 0)
var_5895 = relay.var("var_5895", dtype = "float64", shape = (14, 2, 12))#candidate|5895|(14, 2, 12)|var|float64
bop_5896 = relay.greater_equal(uop_5872.astype('bool'), relay.reshape(var_5895.astype('bool'), relay.shape_of(uop_5872))) # shape=(14, 2, 12)
bop_5899 = relay.greater_equal(uop_5874.astype('bool'), relay.reshape(var_5895.astype('bool'), relay.shape_of(uop_5874))) # shape=(14, 2, 12)
output = relay.Tuple([call_5886,call_5892,bop_5896,])
output2 = relay.Tuple([call_5887,call_5893,bop_5899,])
func_5904 = relay.Function([var_5895,], output)
mod['func_5904'] = func_5904
mod = relay.transform.InferType()(mod)
mutated_mod['func_5904'] = func_5904
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5905 = relay.var("var_5905", dtype = "float64", shape = (14, 2, 12))#candidate|5905|(14, 2, 12)|var|float64
func_5904_call = mutated_mod.get_global_var('func_5904')
call_5906 = func_5904_call(var_5905)
output = call_5906
func_5907 = relay.Function([var_5905], output)
mutated_mod['func_5907'] = func_5907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5949 = relay.var("var_5949", dtype = "float32", shape = (7, 12, 8))#candidate|5949|(7, 12, 8)|var|float32
uop_5950 = relay.tan(var_5949.astype('float32')) # shape=(7, 12, 8)
uop_5957 = relay.sigmoid(var_5949.astype('float64')) # shape=(7, 12, 8)
func_4515_call = mod.get_global_var('func_4515')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_5964 = func_4515_call()
call_5965 = func_4515_call()
func_5724_call = mod.get_global_var('func_5724')
func_5726_call = mutated_mod.get_global_var('func_5726')
call_5973 = relay.TupleGetItem(func_5724_call(), 1)
call_5974 = relay.TupleGetItem(func_5726_call(), 1)
output = relay.Tuple([uop_5950,uop_5957,call_5964,call_5973,])
output2 = relay.Tuple([uop_5950,uop_5957,call_5965,call_5974,])
func_5977 = relay.Function([var_5949,], output)
mod['func_5977'] = func_5977
mod = relay.transform.InferType()(mod)
mutated_mod['func_5977'] = func_5977
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5978 = relay.var("var_5978", dtype = "float32", shape = (7, 12, 8))#candidate|5978|(7, 12, 8)|var|float32
func_5977_call = mutated_mod.get_global_var('func_5977')
call_5979 = func_5977_call(var_5978)
output = call_5979
func_5980 = relay.Function([var_5978], output)
mutated_mod['func_5980'] = func_5980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5844_call = mutated_mod.get_global_var('func_5844')
call_6012 = relay.TupleGetItem(func_5843_call(), 0)
call_6013 = relay.TupleGetItem(func_5844_call(), 0)
func_3209_call = mod.get_global_var('func_3209')
func_3210_call = mutated_mod.get_global_var('func_3210')
call_6023 = relay.TupleGetItem(func_3209_call(), 2)
call_6024 = relay.TupleGetItem(func_3210_call(), 2)
func_5904_call = mod.get_global_var('func_5904')
func_5907_call = mutated_mod.get_global_var('func_5907')
var_6032 = relay.var("var_6032", dtype = "float64", shape = (336,))#candidate|6032|(336,)|var|float64
call_6031 = relay.TupleGetItem(func_5904_call(relay.reshape(var_6032.astype('float64'), [14, 2, 12])), 1)
call_6033 = relay.TupleGetItem(func_5907_call(relay.reshape(var_6032.astype('float64'), [14, 2, 12])), 1)
func_5724_call = mod.get_global_var('func_5724')
func_5726_call = mutated_mod.get_global_var('func_5726')
call_6041 = relay.TupleGetItem(func_5724_call(), 2)
call_6042 = relay.TupleGetItem(func_5726_call(), 2)
bop_6055 = relay.logical_xor(call_6031.astype('int32'), relay.reshape(call_6023.astype('int32'), relay.shape_of(call_6031))) # shape=(2002,)
bop_6058 = relay.logical_xor(call_6033.astype('int32'), relay.reshape(call_6024.astype('int32'), relay.shape_of(call_6033))) # shape=(2002,)
uop_6075 = relay.cos(call_6031.astype('float32')) # shape=(2002,)
uop_6077 = relay.cos(call_6033.astype('float32')) # shape=(2002,)
output = relay.Tuple([call_6012,var_6032,call_6041,bop_6055,uop_6075,])
output2 = relay.Tuple([call_6013,var_6032,call_6042,bop_6058,uop_6077,])
func_6080 = relay.Function([var_6032,], output)
mod['func_6080'] = func_6080
mod = relay.transform.InferType()(mod)
var_6081 = relay.var("var_6081", dtype = "float64", shape = (336,))#candidate|6081|(336,)|var|float64
output = func_6080(var_6081)
func_6082 = relay.Function([var_6081], output)
mutated_mod['func_6082'] = func_6082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mod.get_global_var('func_3026')
func_3028_call = mutated_mod.get_global_var('func_3028')
call_6087 = func_3026_call()
call_6088 = func_3026_call()
func_2746_call = mod.get_global_var('func_2746')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_6106 = func_2746_call()
call_6107 = func_2746_call()
output = relay.Tuple([call_6087,call_6106,])
output2 = relay.Tuple([call_6088,call_6107,])
func_6118 = relay.Function([], output)
mod['func_6118'] = func_6118
mod = relay.transform.InferType()(mod)
output = func_6118()
func_6119 = relay.Function([], output)
mutated_mod['func_6119'] = func_6119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2737_call = mod.get_global_var('func_2737')
func_2738_call = mutated_mod.get_global_var('func_2738')
call_6128 = relay.TupleGetItem(func_2737_call(), 0)
call_6129 = relay.TupleGetItem(func_2738_call(), 0)
output = relay.Tuple([call_6128,])
output2 = relay.Tuple([call_6129,])
func_6140 = relay.Function([], output)
mod['func_6140'] = func_6140
mod = relay.transform.InferType()(mod)
output = func_6140()
func_6141 = relay.Function([], output)
mutated_mod['func_6141'] = func_6141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mod.get_global_var('func_2796')
func_2798_call = mutated_mod.get_global_var('func_2798')
call_6156 = func_2796_call()
call_6157 = func_2796_call()
output = call_6156
output2 = call_6157
func_6159 = relay.Function([], output)
mod['func_6159'] = func_6159
mod = relay.transform.InferType()(mod)
output = func_6159()
func_6160 = relay.Function([], output)
mutated_mod['func_6160'] = func_6160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6163 = relay.var("var_6163", dtype = "int16", shape = (10, 12, 6))#candidate|6163|(10, 12, 6)|var|int16
const_6164 = relay.const([[[3,1,5,-1,-4,8],[-10,8,-6,3,-1,-7],[-7,-9,-1,-6,3,10],[-3,-5,-2,5,-2,6],[-7,8,-2,-3,10,-9],[-5,7,4,-7,10,4],[-7,-6,3,-8,2,10],[-3,-2,-5,5,-10,9],[10,3,-10,-2,7,5],[-1,-2,-1,7,-5,10],[-4,9,9,-9,4,9],[-8,-8,-2,-7,-7,7]],[[1,-5,-5,-6,2,-2],[-3,-10,-1,-10,3,-6],[-4,7,1,-1,-8,-9],[-3,-1,-10,4,3,2],[-4,-5,-2,-9,5,8],[-1,-10,-9,-3,4,7],[-6,9,8,5,6,6],[-4,-6,4,5,-5,6],[4,8,3,1,-10,-1],[6,10,-10,9,3,3],[9,3,-4,2,8,5],[-7,3,9,-8,3,-6]],[[-4,7,10,5,9,-7],[-8,-1,1,10,-2,-7],[-10,-5,-3,-6,-8,2],[-4,-1,-6,-7,9,3],[-4,8,-7,-7,2,-9],[-5,-1,7,-10,2,-5],[-10,-5,10,9,-4,-10],[-3,-7,10,-1,-1,7],[8,1,1,-10,-10,-9],[4,6,4,8,-2,-4],[1,7,-8,1,4,-5],[8,5,2,-8,-2,4]],[[-10,-5,9,7,7,-3],[-10,2,-4,10,-2,-10],[9,-1,-2,-6,7,-7],[1,8,9,4,4,5],[10,-10,10,-9,7,1],[6,4,-1,2,4,-1],[-9,-4,8,3,-7,-4],[-4,-8,-4,-2,8,-6],[6,2,-7,-5,-7,-1],[8,-5,-8,2,2,3],[-10,-6,3,-7,1,-1],[2,7,2,-4,-4,7]],[[-6,4,-10,-5,3,9],[5,-5,5,7,1,-7],[-1,-5,-10,7,-3,5],[9,4,-3,-10,-10,7],[10,-5,5,3,-2,3],[3,9,2,-9,-6,-4],[7,7,8,5,7,8],[1,-10,-2,-5,2,8],[8,4,2,10,2,9],[3,-10,3,2,9,-4],[-4,5,3,-1,-3,-2],[3,-4,-3,-8,6,-7]],[[-6,-10,-1,-8,-5,3],[6,-8,9,2,6,-10],[9,-3,4,4,9,4],[2,6,-5,-5,3,10],[7,-5,-9,2,-10,5],[-5,5,6,-5,-3,4],[-10,-9,-6,6,-2,-6],[5,-1,3,1,8,3],[7,-10,8,6,-7,-2],[5,-8,-10,-8,-4,-10],[-6,6,-8,7,6,-6],[1,2,-9,1,-4,-1]],[[-5,9,-1,-6,-1,2],[-1,7,-4,2,4,-5],[10,-7,7,7,8,-9],[7,7,-8,-9,5,6],[8,-7,2,5,2,-4],[-9,-10,9,7,7,-3],[-2,3,8,-9,7,-9],[9,-1,-6,-9,8,-4],[-9,2,-7,-10,-9,6],[-4,6,-10,2,-8,10],[8,1,-7,4,7,1],[-2,3,-5,1,-2,1]],[[-1,-1,6,5,9,9],[-2,-3,10,5,8,-5],[6,2,-10,-2,-8,2],[-4,-7,2,10,-10,2],[-8,3,-6,-9,-2,-2],[4,5,-7,-5,1,-4],[7,-4,-7,-6,-5,3],[5,6,10,2,-4,-7],[2,-3,-3,6,3,6],[8,6,-1,9,-10,-5],[-4,6,2,2,7,-8],[4,-10,-4,6,-8,-9]],[[3,5,2,-6,7,-6],[-7,-6,4,5,-6,5],[-9,5,-7,-6,-2,-4],[3,1,-1,-2,5,-3],[1,-9,2,8,8,1],[-10,6,2,-6,-9,6],[6,-10,-7,2,-2,-7],[-8,10,-10,9,-1,-10],[4,-7,-5,-5,-4,-1],[-10,9,5,-8,2,-9],[10,2,3,-2,10,-2],[-4,-3,3,-9,9,7]],[[-3,9,5,-8,5,4],[-2,5,-8,6,-5,2],[2,-3,9,-5,6,-10],[1,6,7,-4,-10,10],[7,2,4,-3,5,-7],[7,7,-7,6,4,-6],[4,10,10,-2,8,10],[-7,-10,1,7,1,-1],[10,8,9,-4,5,-5],[-8,1,-2,-7,6,-1],[5,4,1,-6,-3,6],[-10,3,8,8,6,1]]], dtype = "int16")#candidate|6164|(10, 12, 6)|const|int16
bop_6165 = relay.right_shift(var_6163.astype('int16'), relay.reshape(const_6164.astype('int16'), relay.shape_of(var_6163))) # shape=(10, 12, 6)
uop_6174 = relay.log10(bop_6165.astype('float64')) # shape=(10, 12, 6)
func_3543_call = mod.get_global_var('func_3543')
func_3545_call = mutated_mod.get_global_var('func_3545')
call_6185 = func_3543_call()
call_6186 = func_3543_call()
var_6211 = relay.var("var_6211", dtype = "float64", shape = (10, 12, 6))#candidate|6211|(10, 12, 6)|var|float64
bop_6212 = relay.logical_and(uop_6174.astype('bool'), relay.reshape(var_6211.astype('bool'), relay.shape_of(uop_6174))) # shape=(10, 12, 6)
func_3162_call = mod.get_global_var('func_3162')
func_3165_call = mutated_mod.get_global_var('func_3165')
const_6216 = relay.const([-1,-5,9,-7,-6,-8,-9,8,-5,1,-8,-3,-3,-6,10,-10,-6,-7,8,1,-2,-6,-9,4,3,-3,10,1,-6,6,2,8,3,-2,-7,7,-3,2,-7,5,4,10,-3,7,-10,7,9,10,9,2,-9,7,4,-4,-6,3,-9,5,-6,5,-7,9,-8,-9,5,6,2,5,-5,-7,10,-2,-2,2,1,-5,-10,6,7,6,7,-5,-7,5,9,-2,3,-9,1,5,1,-10,-6,8,2,-5,-7,-9,9,4,-9,1,8,-7,3,3,-3,4,1,-5,7,-3,-8,-7,-8,9,7,9,1,-6,-9,-8,-2,-4,-4,6,-8,-4,-3,7,1,-1,7,-6,10,-1,-1,-3,-1,7,-5,5,-6,-2,-9,2,-7,8,5,-10,-6,-5,-10,-3,5,-4,-7,-6,7,9,8,-6,6,-7,-10,7,-8,4,-1,8,-8,-8,3,-5,-1,6,8,2,-8,5,6,3,-6,-1,-3,-7,-1,-4,-9,5,-5,-9,5,-7,2,8,-5,1,9,10,-9,2,2,-6,-5,10,2,-3,3,-9,-1,3,9,9,6,-9,-8,6,-7,10,-3,-3,10,-1,7,9,8,-6,-6,4,-6,-6,4,-4,-4,6,-5,-2,7,9,5,4,8,2,-6,-5,-1,-9,-4,-7,-9,6,2,-10,-3,-4,5,-4,9,8,-2,2,-7,-8,5,-9,-8,8,-3,2,-5,6,6,4,4,3,-8,-7,5,6,-3,-4,-10,-3,-1,10,-1,8,4,5,8,4,-4,-1,-8,-10,-1,-2,-9,3,9,-5,-8,8,-7,-10,2,10,-6,-4,7,-5,-8,-7,-1,-6,4,1,-6,-5,-1,-9,10,-8,10,1,5,4,-3,2,-3,-4,-2,10,3,5,10,-8,3,7,7,-9,-3,10,5,-8,2,5,9,4,-1,-8,2,1,2,-7,5,-3,-10,-2,5,-3,-6,-1,-4,-4,3,-5,-8,10,-6,8,6,10,4,-1,6,6,-2,4,3,10,2,2,-2,1,-3,9,-2,-3,3,-7,-10,10,3,8,3,-1,5,-6,-8,-5,8,8,5,8,9,-8,10,1,-3,9,-8,3,-6,10,-6,4,-1,5,8,-7,-9,-6,-4,-4,7,-2,-6,8,-6,7,-3,7,7,-3,3,2,6,3,-4,-6,-2,5,5,-9,2,-2,-9,1,1,1,-6,8,-8,4,7,2,-2,7,-10,10,-4,-7,3,9,5,-8,10,5,-6,-1,-2,-2,1,2,8,3,6,5,7,-1,-3,-5,4,2,-10,-3,-7,7,-6,9,-2,-8,-10,6,-8,-4,-8,3,-9,-2,-9,1,1,3,-6,-5,-5,-7,-7,-6,3,-7,7,5,-6,-6,5,10,5,5,-6,-2,-3,-7,5,9,-3,1,8,-7,6,-9,9,6,3,-7,-2,-1,9,9,-1,-4,-5,-4,2,7,-3,8,6,-7,-7,-9,3,-8,-9,-6,5,7,-4,3,4,-5,-6,10,7,2,-2,-5,-2,9,9,-4,-5,6,-1,7,-1,-2,-5,9,-2,8,-4,10,5,9,-5,10,-1,-3,-5,10,3,3,8,2,4,3,4,-6,-3,4,-6,-9,-1,3,-3,2,-7,-5,-8,5,10,4,3,2,-4,5,-1,9,5,9,-7,5,7,-8,-1,-9,-3,5,-2,2,-3,6,-1,7,-10,-5,7,-10,-4,-9,3,5,2,2,7,2,10,6,-4,9,-9,-1,-6,3,1,-4,2,8,9,10,3,8,1,-7,8,10,-2,-8,-4,-2,-2,7,8,-10,7,-5,-3,6,-10,8,2,-7,-9,-7,-5,5,-5,-1,-2,-10,-4,-9,-9,-10,1,8,6,-10,-2,7,5,-5,8,1,-9,-7,7,2,5,8,-10,1,-4,2,-9,-3,4,-3,4,-10,-7,7,-7,4,1,-9,-6,8,3,-6,-2,5,7,-8,-1,5,7,4,3,5,-7,6,5,5,-5,-8,-10,-4,-10,7,1,1,-7,10,-4,5,-1,7,4,-2,3,-9,3,-9,4,-6,1,10,4,-10,-9,10,-6,4,10,-3,7,7,3,-7,-3,1,10,-4,3,3,-8,10,3,-6,-1,8,-8,2,-1,8,1,8,1,8,-5,-6,5,7,-1,10,9,-3,-3,10,-3,-7,-6,-6,6,-10,4,-4,-1,6,3,5,-6,-2,-3,-4,-9,-1,-8,3,-10,7,-9,2,3,4,-7,-9,-7,-3,-3,9,2,6,-6,7,2,-9,-6,-10,2,-6,-3,2,-8,-2,-6,3,-10,7,8,3,10,10,6,7,-4,-5,-10,6,-5,-8,-1,6,-10,9,-9,-9,-8,-4,-10,2,-2,2,-5,-9,-9,9,8,3,-2,-5,7,-9,4,9,4,2,8,7,4,-4,-5,-5,2,-8,-10,-7,-8,10,-10,7,-10,-10,-3,-2,7,2,-2,-2], dtype = "uint16")#candidate|6216|(924,)|const|uint16
call_6215 = relay.TupleGetItem(func_3162_call(relay.reshape(const_6216.astype('uint16'), [1, 924])), 2)
call_6217 = relay.TupleGetItem(func_3165_call(relay.reshape(const_6216.astype('uint16'), [1, 924])), 2)
output = relay.Tuple([call_6185,bop_6212,call_6215,const_6216,])
output2 = relay.Tuple([call_6186,bop_6212,call_6217,const_6216,])
func_6218 = relay.Function([var_6163,var_6211,], output)
mod['func_6218'] = func_6218
mod = relay.transform.InferType()(mod)
mutated_mod['func_6218'] = func_6218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6218_call = mutated_mod.get_global_var('func_6218')
var_6220 = relay.var("var_6220", dtype = "int16", shape = (10, 12, 6))#candidate|6220|(10, 12, 6)|var|int16
var_6221 = relay.var("var_6221", dtype = "float64", shape = (10, 12, 6))#candidate|6221|(10, 12, 6)|var|float64
call_6219 = func_6218_call(var_6220,var_6221,)
output = call_6219
func_6222 = relay.Function([var_6220,var_6221,], output)
mutated_mod['func_6222'] = func_6222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6250 = relay.var("var_6250", dtype = "float32", shape = (16, 1, 7))#candidate|6250|(16, 1, 7)|var|float32
uop_6251 = relay.sin(var_6250.astype('float32')) # shape=(16, 1, 7)
output = uop_6251
output2 = uop_6251
func_6265 = relay.Function([var_6250,], output)
mod['func_6265'] = func_6265
mod = relay.transform.InferType()(mod)
var_6266 = relay.var("var_6266", dtype = "float32", shape = (16, 1, 7))#candidate|6266|(16, 1, 7)|var|float32
output = func_6265(var_6266)
func_6267 = relay.Function([var_6266], output)
mutated_mod['func_6267'] = func_6267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3431_call = mod.get_global_var('func_3431')
func_3432_call = mutated_mod.get_global_var('func_3432')
call_6403 = relay.TupleGetItem(func_3431_call(), 0)
call_6404 = relay.TupleGetItem(func_3432_call(), 0)
output = relay.Tuple([call_6403,])
output2 = relay.Tuple([call_6404,])
func_6410 = relay.Function([], output)
mod['func_6410'] = func_6410
mod = relay.transform.InferType()(mod)
output = func_6410()
func_6411 = relay.Function([], output)
mutated_mod['func_6411'] = func_6411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_6465 = func_3679_call()
call_6466 = func_3679_call()
output = relay.Tuple([call_6465,])
output2 = relay.Tuple([call_6466,])
func_6479 = relay.Function([], output)
mod['func_6479'] = func_6479
mod = relay.transform.InferType()(mod)
output = func_6479()
func_6480 = relay.Function([], output)
mutated_mod['func_6480'] = func_6480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5318_call = mod.get_global_var('func_5318')
func_5320_call = mutated_mod.get_global_var('func_5320')
call_6501 = relay.TupleGetItem(func_5318_call(), 0)
call_6502 = relay.TupleGetItem(func_5320_call(), 0)
func_5530_call = mod.get_global_var('func_5530')
func_5533_call = mutated_mod.get_global_var('func_5533')
var_6508 = relay.var("var_6508", dtype = "float32", shape = (48,))#candidate|6508|(48,)|var|float32
const_6509 = relay.const(-5.524367, dtype = "float64")#candidate|6509|()|const|float64
call_6507 = relay.TupleGetItem(func_5530_call(relay.reshape(var_6508.astype('float32'), [8, 1, 6]), relay.reshape(const_6509.astype('float64'), []), ), 0)
call_6510 = relay.TupleGetItem(func_5533_call(relay.reshape(var_6508.astype('float32'), [8, 1, 6]), relay.reshape(const_6509.astype('float64'), []), ), 0)
bop_6511 = relay.add(call_6507.astype('int64'), relay.reshape(var_6508.astype('int64'), relay.shape_of(call_6507))) # shape=(8, 1, 6)
bop_6514 = relay.add(call_6510.astype('int64'), relay.reshape(var_6508.astype('int64'), relay.shape_of(call_6510))) # shape=(8, 1, 6)
output = relay.Tuple([call_6501,const_6509,bop_6511,])
output2 = relay.Tuple([call_6502,const_6509,bop_6514,])
func_6517 = relay.Function([var_6508,], output)
mod['func_6517'] = func_6517
mod = relay.transform.InferType()(mod)
mutated_mod['func_6517'] = func_6517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6518 = relay.var("var_6518", dtype = "float32", shape = (48,))#candidate|6518|(48,)|var|float32
func_6517_call = mutated_mod.get_global_var('func_6517')
call_6519 = func_6517_call(var_6518)
output = call_6519
func_6520 = relay.Function([var_6518], output)
mutated_mod['func_6520'] = func_6520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3517_call = mod.get_global_var('func_3517')
func_3518_call = mutated_mod.get_global_var('func_3518')
call_6536 = func_3517_call()
call_6537 = func_3517_call()
func_5502_call = mod.get_global_var('func_5502')
func_5504_call = mutated_mod.get_global_var('func_5504')
const_6554 = relay.const([[-8.345050,4.984831,1.901871],[9.567068,-6.620231,-8.716120],[1.898260,-1.290127,5.759295],[8.877025,-1.436580,5.859481],[4.220994,4.624630,2.828919],[8.268120,-2.935671,8.298531],[-4.972760,-2.943800,-7.580562],[3.961102,3.218033,9.483736],[8.871849,-2.089535,-8.829582],[-7.904915,-6.445401,7.277659],[-8.720463,-7.564003,3.270354],[3.099211,-0.008071,-7.498198],[-8.128447,2.961613,-4.411296],[-7.255172,4.117177,2.692180],[-9.851646,4.970891,9.811313],[-9.615022,8.658901,-5.613722],[-8.551053,8.628138,3.511086],[9.980668,1.281591,4.136422],[2.110168,1.288550,-6.883833],[-5.839636,-9.385215,-5.533144],[6.267759,-4.404957,1.126372],[0.706774,-6.283119,-6.321398],[3.335867,5.115248,-1.738712],[-8.814635,-0.025809,9.588968],[-1.252748,3.230485,0.489662],[-8.007848,-5.727681,-6.205526],[1.028222,3.210020,-9.373391],[1.377702,9.201027,-7.900812],[-1.583791,2.459993,9.630324],[5.397417,7.764612,-5.600291],[-9.875223,3.412005,3.038706],[-1.174805,6.769506,-1.107833],[-9.749360,6.119150,-2.522122],[6.738771,-2.132042,1.995417],[0.370907,6.863007,9.526725],[-1.514599,-7.278416,-5.997602],[3.780678,-5.183097,-5.716726],[-3.215222,2.171232,-0.168402],[3.041132,-8.689181,8.865132]], dtype = "float32")#candidate|6554|(39, 3)|const|float32
call_6553 = relay.TupleGetItem(func_5502_call(relay.reshape(const_6554.astype('float32'), [1, 117])), 1)
call_6555 = relay.TupleGetItem(func_5504_call(relay.reshape(const_6554.astype('float32'), [1, 117])), 1)
output = relay.Tuple([call_6536,call_6553,const_6554,])
output2 = relay.Tuple([call_6537,call_6555,const_6554,])
func_6557 = relay.Function([], output)
mod['func_6557'] = func_6557
mod = relay.transform.InferType()(mod)
mutated_mod['func_6557'] = func_6557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6557_call = mutated_mod.get_global_var('func_6557')
call_6558 = func_6557_call()
output = call_6558
func_6559 = relay.Function([], output)
mutated_mod['func_6559'] = func_6559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mod.get_global_var('func_6140')
func_6141_call = mutated_mod.get_global_var('func_6141')
call_6569 = relay.TupleGetItem(func_6140_call(), 0)
call_6570 = relay.TupleGetItem(func_6141_call(), 0)
func_3388_call = mod.get_global_var('func_3388')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_6572 = relay.TupleGetItem(func_3388_call(), 0)
call_6573 = relay.TupleGetItem(func_3390_call(), 0)
uop_6585 = relay.atan(call_6572.astype('float32')) # shape=(2002,)
uop_6587 = relay.atan(call_6573.astype('float32')) # shape=(2002,)
func_6080_call = mod.get_global_var('func_6080')
func_6082_call = mutated_mod.get_global_var('func_6082')
const_6615 = relay.const([9.673109,-5.359229,-0.981582,-2.797652,7.799153,-3.328215,-1.772831,1.621101,1.259575,-2.642694,6.261806,4.135885,8.026783,8.662436,7.765395,3.438920,-2.957097,-2.407691,-2.068428,1.032766,8.058916,-4.338124,1.098566,-6.409197,0.686509,5.859934,7.528282,-6.100188,-1.316170,0.851153,0.031965,-0.392242,2.685095,-3.012669,6.579299,9.344841,3.636797,-3.666360,-4.333717,-3.809683,2.234645,-8.227147,-4.760254,1.974329,-6.484637,-8.857929,-1.047665,-7.033778,3.019136,3.038134,-2.928312,7.326994,1.234797,-2.628116,-3.435950,8.064474,-1.280864,-2.815837,-2.076420,9.313187,7.766345,-6.340368,8.275601,8.891592,2.666771,9.417993,3.782723,-9.785830,4.706287,-4.282065,0.985277,3.226782,8.806143,-4.042668,-8.096314,9.478418,3.398296,1.196654,-2.978392,7.232164,3.501588,1.045105,-7.659795,1.350335,-5.761664,4.137822,5.682486,-0.099233,8.366430,-0.945570,-6.421058,9.786081,3.587414,-8.562379,5.248338,-5.701646,9.511031,1.360661,9.581326,2.748651,7.614315,6.334810,0.768885,8.960486,-0.975540,-8.299454,2.812704,-7.808718,-4.710642,-8.006681,-2.573290,1.706059,-5.550101,4.868077,5.344073,-9.075751,-3.836582,-8.050505,6.064798,-6.969264,9.151134,-7.171031,-0.497551,-6.154897,-1.700341,-2.456301,4.697016,-4.834247,-8.289078,2.179892,-6.235168,-2.217603,8.783405,-4.156948,4.400578,-6.799282,-7.925897,0.815255,9.069199,6.675753,6.531023,-6.779519,0.799846,-9.350330,9.002296,-8.287378,1.093952,-3.314799,8.779223,6.395534,4.380180,3.924745,8.777737,-7.279986,-4.786355,-1.073596,3.567071,-4.804846,5.220294,-4.876018,-7.954738,-3.800612,-4.357916,-5.681030,4.829990,-0.923406,1.525539,-0.069433,-2.040445,8.835547,4.408111,-6.157049,9.525624,0.137876,-2.699609,5.775788,-5.609208,-5.336591,-5.548166,-6.458825,6.981551,-0.049264,0.773861,2.717972,4.595590,-9.096706,-7.009669,6.979532,-9.214614,-0.784683,-4.700395,4.589459,7.155372,6.043078,9.683766,3.211606,-2.597461,0.699961,6.209853,-8.958830,-4.852873,4.864581,8.951696,-1.563383,5.376628,-0.486851,-6.805051,6.916689,-5.004291,5.958541,-4.455155,-5.897216,-2.005166,-9.997002,-6.304305,-7.478065,-0.761462,2.695710,-7.374928,4.598117,-4.282479,6.356945,2.522437,-3.203598,-8.425022,8.596145,-5.482943,0.537533,-3.124761,-4.447825,-4.353521,8.458802,-7.198111,8.269369,-7.757801,2.373455,-6.724030,1.263315,8.085371,7.517358,8.761746,-0.806590,-4.298913,-6.664018,-5.726341,7.712695,9.841419,8.682426,8.163873,-9.380397,4.414106,-0.844728,-4.996165,7.522459,0.055461,0.557853,-9.479574,8.422145,-6.811708,2.756822,-6.906801,6.890351,9.546470,-1.342193,6.199318,-2.234225,-2.124350,4.269325,-9.461010,-1.393467,0.813556,-0.045201,5.600007,7.981912,1.600109,-5.400923,9.989472,8.305577,-5.954072,-8.297880,-8.404412,-3.405491,8.798828,5.637485,2.812478,-6.948901,-7.738146,-5.684181,-6.967884,5.287314,-5.056499,9.897768,3.189982,-7.412762,-0.841709,-8.890537,9.573361,5.090616,-6.211558,-9.031297,-5.684427,-1.300130,1.659719,7.313683,-6.033893,7.758035,-6.353173,4.651596,1.799833,-6.346970,-1.419799,-1.495679,5.322985,-0.517610,-4.288811,0.874662,7.955753,9.019179,-7.417772,-9.010540,6.880191,6.716092,0.329274,-3.766518,-7.173209,-2.585723,2.719177,-9.189048,4.070683,-0.066208,8.489530,-1.340543,1.392075,3.039001,-4.386195,5.064725], dtype = "float64")#candidate|6615|(336,)|const|float64
call_6614 = relay.TupleGetItem(func_6080_call(relay.reshape(const_6615.astype('float64'), [336,])), 3)
call_6616 = relay.TupleGetItem(func_6082_call(relay.reshape(const_6615.astype('float64'), [336,])), 3)
uop_6619 = relay.log10(uop_6585.astype('float64')) # shape=(2002,)
uop_6621 = relay.log10(uop_6587.astype('float64')) # shape=(2002,)
output = relay.Tuple([call_6569,call_6614,const_6615,uop_6619,])
output2 = relay.Tuple([call_6570,call_6616,const_6615,uop_6621,])
func_6632 = relay.Function([], output)
mod['func_6632'] = func_6632
mod = relay.transform.InferType()(mod)
mutated_mod['func_6632'] = func_6632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6632_call = mutated_mod.get_global_var('func_6632')
call_6633 = func_6632_call()
output = call_6633
func_6634 = relay.Function([], output)
mutated_mod['func_6634'] = func_6634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4690_call = mod.get_global_var('func_4690')
func_4692_call = mutated_mod.get_global_var('func_4692')
call_6647 = relay.TupleGetItem(func_4690_call(), 0)
call_6648 = relay.TupleGetItem(func_4692_call(), 0)
output = relay.Tuple([call_6647,])
output2 = relay.Tuple([call_6648,])
func_6650 = relay.Function([], output)
mod['func_6650'] = func_6650
mod = relay.transform.InferType()(mod)
output = func_6650()
func_6651 = relay.Function([], output)
mutated_mod['func_6651'] = func_6651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3806_call = mod.get_global_var('func_3806')
func_3808_call = mutated_mod.get_global_var('func_3808')
call_6678 = relay.TupleGetItem(func_3806_call(), 0)
call_6679 = relay.TupleGetItem(func_3808_call(), 0)
func_4800_call = mod.get_global_var('func_4800')
func_4802_call = mutated_mod.get_global_var('func_4802')
const_6681 = relay.const([5.624896,-0.450049,-2.571773,-7.384888,-4.141408,-9.271316,1.594969,-7.318255,8.416526,-5.393655,1.516812,0.818201,-0.661114,-4.813475,4.831007,-5.525708,-9.389503,-4.986330,5.153847,-8.171727,-6.286462,3.046081,9.748129,-4.813865,6.479550,-5.591121,9.156852,8.175836,5.861953,9.699531,9.172521,3.940900,-5.622140,-7.441902,-2.351788,-2.566621,1.642387,-3.456042,3.708621,-7.395276,-7.897915,3.859189,-1.220140,6.902940,9.707988,2.950527,-5.813478,-5.110062,-2.414298,9.332992,5.480738,9.349337,9.779656,-4.211508,8.343464,2.569333,6.057682,5.507614,-0.350433,-6.302055,2.398433,-4.417402,-8.139373,-5.122733,-0.474810,-7.903223,4.758121,-7.568331,7.534317,9.817828,8.339960,-8.671961,-5.181185,8.991722,-5.807445,-9.643760,4.843483,-6.811861,9.345693,-6.608937,-9.479427,-1.563466,8.044049,-8.451293,5.933958,7.785181,-9.575910,7.110201,6.589714,3.651333,-0.636785,7.044585,2.799025,-4.214498,-1.741874,-0.810293,9.791271,7.276216,6.447560,0.840342,5.118583,-6.290761,0.009170,-5.615387,-9.404762,-6.160849,9.894342,-4.736130,2.636951,-4.064194,3.395354,-5.938185,0.871227,6.908436,0.012408,7.836393,5.928528,7.422700,6.835958,4.718257,1.448530,8.582509,4.626095,3.149980,-2.492194,0.556785,-0.741435,-1.012170,4.377332,1.744602,-9.995949,7.673375,-2.505290,-6.862384,7.910197,2.317681,-9.573507,5.950289,-2.015765,-1.842357,-2.972895,-1.333448,-8.143536,-8.001739,3.442313,-7.510972,-5.365989,7.134533,-2.258186,3.702958,-8.845799,0.589483,3.059206,-1.536914,7.856099,-5.147532,-5.078149,2.394643,1.905528,-7.480709,7.715834,-6.888516,4.049608,-6.727080,-6.110310,1.020688,-1.931442,0.170984,8.843534,1.259149,-0.076504,2.044768,-5.876715,1.045499,-1.030742,-6.209847,0.789303,-0.196224,1.219664,-4.320432,-6.625118,-9.178089,-2.751674,-1.292872,2.397791,2.434713,0.586669,6.991679,0.683223,4.260295,-5.747038,1.878192,-5.922821,-7.931074,-2.181744,2.843505,-7.590075,9.076417,8.371964,8.230036,8.289706,5.484722,4.170277,-0.004099,8.561801,-2.740143,-7.610577,3.692907,7.333811,-8.892405,1.392120,-3.543541,6.384852,-4.941202,2.296626,6.190755,-5.745888,0.417944,6.736714,-7.247994,0.553002,4.918993,-6.342494,2.068409,-5.423594,0.262228,0.612576,-1.998051,1.029754,-9.800067,-6.602101,3.214659,-1.145521,-9.490549,9.604990,-7.141075,1.727185,-5.454554,1.550540,-5.157025,7.967040,3.802168,5.819462,7.225821,-8.900843,-7.810998,1.866173,-7.136815,-8.346043,-5.319687,3.331478,5.373549,-3.861895,8.027814,8.971155,6.577458,0.440822,6.863236,-2.671809,-4.165619,-0.311600,6.629598,-5.627156,6.646788,-3.341968,-2.375647,5.707461,1.539868,2.820546,3.186014,-6.465898,0.700812,3.263498,-4.304503,4.669148,-4.431511,7.639081,-3.228316,9.703928,5.063912,9.368024,-0.012964,6.919651,-9.139242,-8.061622,3.135228,-9.251708,-0.578782,1.526218,-4.832701,7.323450,4.242226,-1.563899,8.360859,0.430806,-3.628122,-0.861347,3.244445,-8.219768,4.491599,7.852041,3.170706,4.865918,6.317005,-5.642691,-1.920987,1.935104,7.749287,5.998146,7.486788,5.582386,0.480266,-2.277525,3.321575,-0.399223,2.575322,1.421937,9.072494,7.638115,3.568836,-5.100576,9.498221,3.425859,-2.875780,8.932811,-3.564250,2.037556,8.154801,-7.784393,-4.435267,6.529379,3.127491,-6.301083,5.532772,1.714571,5.542066,-7.378516,2.545141,5.079707,-6.668639,-0.693580,5.296185,-2.406656,1.830936,3.720496,9.324942,-4.837567,9.901470,-1.598899,-0.736116,-7.485127,3.973512,-3.557605,-4.650089,-6.284420,9.271918,6.999754,-4.250559,1.938753,2.714627,8.476656,5.118928,3.205611,-6.046744,2.140617,8.963425,0.359961,6.958231,-9.355470,2.843593,-4.124830,7.578244,-2.883110,-3.797094,4.057015,-4.608257,-2.748862,-6.510353,7.934090,8.684334,6.999751,-5.089298,-6.429972,1.272546,9.652671,9.770505,6.360407,-6.095554,8.350814,0.381904,-5.160980,3.184797,2.246138,-4.151226,9.887298,3.011294,-7.459431,6.778523,2.393153,9.962519,9.404349,1.207359,4.436789,-4.756748,-7.489762,-5.386164,-3.420640,2.309642,7.549146,-3.164093,-5.437612,-6.067478,1.199307,6.367146,-5.641310,4.627317,6.816758,-5.520119,-3.883619,1.856324,-3.251581,8.969019,-1.516901,-4.661098,-7.227859,-8.158970,-8.047048,-1.432955,-6.474578,1.429516,-4.425712,-2.003644,8.100261,2.315949,-5.483580,-2.000371,-3.355966,0.521756,-0.101045,-1.425597,-6.174126,5.115938,7.037606,-1.517602,2.978239,-2.986551,-1.017148,-0.932323,3.447083,-4.442936,-9.824145,-2.999836,-5.760569,9.038775,5.399390,-2.349406,-6.455167,4.622776,4.931583,2.856393,3.054497,-4.190085,7.510700,9.340820,-8.269677,-6.865745,-6.009421,5.027720,-7.006393,5.694756,0.170009,0.991736,-7.794624,2.821006,-1.256128,-7.828881,0.714256,8.536956,3.593782,1.736506,-8.276879,1.092423,5.136929,-0.631267,4.648346,3.657496,0.374739,9.527695,9.023340,1.065398,9.508176,0.664445,-1.889307,8.617489,4.076163,-8.878445,-3.089249,-9.444049,-2.994300,1.282774,5.214937,-9.681166,7.773202,-6.255739,1.979255,-1.348327,6.253006,0.434918,7.438652,-9.658175,0.226543,-7.970155,-3.778942,5.676036,1.865612,-3.749198,-4.980533,4.355256,-3.296526,-1.307040,9.218622,9.405354,0.122735,6.318277,1.740796,2.639513,-3.900504,5.382293,3.294566,6.649874,2.300382,7.291759,8.317386,-1.846722,-5.025273,1.446553,8.770818,-2.004254,6.258793,3.160197,1.286427,8.190208,9.032933,-9.716975,-8.747642,3.989612,-0.584460,7.508524,-6.018258,4.385220,-5.665548,-5.552455,1.576759,-5.535179,-2.635218,-6.560658,5.186833,0.762900,-0.816253,4.271122,-8.315349,-6.889690,9.823102,-1.696416,5.454290,-1.491754,-3.253181,-2.268549,2.881407,-5.196350,-5.249315,-1.722064,-9.142632,-7.351061,6.895065,0.485476,0.062769,-6.760024,1.425646,-6.465004,1.419817,2.823167,9.592446,3.268138,-6.082831,6.274541,-1.848748,-7.947396,1.293587,7.599356,-1.413036,-3.664018,6.746866,-9.291270,9.046431,7.103803,6.872462,-2.890225,-2.327705,-2.244210,7.354122,-7.473581,3.684456,7.701509,9.860942,4.786803,1.503081,9.836623,8.772354,-1.034941,-2.234130,8.014469,-5.338226,3.526461,4.652159,6.532069,3.506691,3.422135,1.965482,2.899518,0.426045,-3.164177,5.772341,4.305004,-5.470406,7.430699,-7.749968,-4.416484,5.283364,9.813445,2.348432,6.179781,-1.949157,9.777265,0.430997,5.843846,-7.246218,-9.935830,3.537654,-7.198745,6.027392,8.936611,-7.842711,-9.853645,7.427791,-3.430762,-5.876889,2.301036,-5.289477,-2.771603,8.560933,3.043319,-1.103229,0.953195,5.183957,5.290235,-7.209038,-0.965365,-1.393415,-5.903541,7.488030,7.593503,-2.554192,-5.132265,2.944552,4.899759,-1.916241,-5.714057,-4.836414,6.855558,4.737968,-2.129224,3.464466,-4.582154,0.723223,3.057902,-5.986528,-9.945163,8.819169,3.221722,-8.409923,6.000206,5.866092,6.285198,-0.122721,-8.063864,9.697982,5.342656,6.389347,-8.457972,-1.660959,0.747809,-4.896934,3.108142,1.089007,4.597982,4.001546,-4.184997,-7.987014,-8.635103,-7.626566,6.869859,1.041713,-8.450407,-3.386717,4.890298,-0.509442,5.220491,8.216988,-1.283699,-2.941725,-4.634319,9.349581,-2.100866,-4.228946,-2.080776,6.949090,-7.299949,-3.026110,-3.246019,0.871167,6.652754,-1.452533,3.945256,5.999362,-2.899379,5.482256,-0.733833,-0.651437,-9.274133,4.063522,3.635220,-4.215887,-0.370263,2.687887,-3.637332,-3.434389,-2.714588,-0.801643,-8.266916,-2.071189,7.216500,2.419516,-9.778556,4.508799,-2.502596,9.861055,5.733672,9.384447,-6.283195,-6.624512,-0.996370,-1.609212,-6.832953,-8.683933,-5.632991,5.034581,-1.145219,4.808422,-3.957692,9.094528,-2.927660,6.717427,6.432584,1.005302,4.698224,-1.261419,-7.163629,-4.635943,9.594562,-3.260314,2.272604,-0.971093,-2.586704,-6.887686,-0.939482,-4.276644,-9.424534,-1.631829,-1.325328,0.415023,-5.874300,9.776400,-5.880858,2.978314,-2.785629,-2.032017,3.616139,2.199944,-8.910175,9.684217,-4.928544,8.201650,9.834331,-0.763263,0.138155,2.493662,4.813169,9.343616,-8.619621,5.142524,-3.619910,1.187970,-8.672100,5.849125,-5.312937,6.361978,-7.179801,-9.970472,7.459294], dtype = "float64")#candidate|6681|(810,)|const|float64
call_6680 = relay.TupleGetItem(func_4800_call(relay.reshape(const_6681.astype('float64'), [9, 9, 10])), 1)
call_6682 = relay.TupleGetItem(func_4802_call(relay.reshape(const_6681.astype('float64'), [9, 9, 10])), 1)
func_5180_call = mod.get_global_var('func_5180')
func_5182_call = mutated_mod.get_global_var('func_5182')
call_6684 = func_5180_call()
call_6685 = func_5180_call()
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_6692 = relay.TupleGetItem(func_3658_call(), 0)
call_6693 = relay.TupleGetItem(func_3660_call(), 0)
var_6702 = relay.var("var_6702", dtype = "float64", shape = (810,))#candidate|6702|(810,)|var|float64
bop_6703 = relay.bitwise_or(const_6681.astype('uint8'), relay.reshape(var_6702.astype('uint8'), relay.shape_of(const_6681))) # shape=(810,)
output = relay.Tuple([call_6678,call_6680,call_6684,call_6692,bop_6703,])
output2 = relay.Tuple([call_6679,call_6682,call_6685,call_6693,bop_6703,])
func_6706 = relay.Function([var_6702,], output)
mod['func_6706'] = func_6706
mod = relay.transform.InferType()(mod)
var_6707 = relay.var("var_6707", dtype = "float64", shape = (810,))#candidate|6707|(810,)|var|float64
output = func_6706(var_6707)
func_6708 = relay.Function([var_6707], output)
mutated_mod['func_6708'] = func_6708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6752 = relay.var("var_6752", dtype = "float32", shape = (15, 11, 14))#candidate|6752|(15, 11, 14)|var|float32
uop_6753 = relay.acos(var_6752.astype('float32')) # shape=(15, 11, 14)
output = relay.Tuple([uop_6753,])
output2 = relay.Tuple([uop_6753,])
func_6755 = relay.Function([var_6752,], output)
mod['func_6755'] = func_6755
mod = relay.transform.InferType()(mod)
mutated_mod['func_6755'] = func_6755
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6756 = relay.var("var_6756", dtype = "float32", shape = (15, 11, 14))#candidate|6756|(15, 11, 14)|var|float32
func_6755_call = mutated_mod.get_global_var('func_6755')
call_6757 = func_6755_call(var_6756)
output = call_6757
func_6758 = relay.Function([var_6756], output)
mutated_mod['func_6758'] = func_6758
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6771 = relay.const(-8, dtype = "uint16")#candidate|6771|()|const|uint16
var_6772 = relay.var("var_6772", dtype = "uint16", shape = (12, 11, 12))#candidate|6772|(12, 11, 12)|var|uint16
bop_6773 = relay.bitwise_and(const_6771.astype('uint16'), var_6772.astype('uint16')) # shape=(12, 11, 12)
func_3988_call = mod.get_global_var('func_3988')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_6805 = func_3988_call()
call_6806 = func_3988_call()
func_4424_call = mod.get_global_var('func_4424')
func_4426_call = mutated_mod.get_global_var('func_4426')
call_6811 = relay.TupleGetItem(func_4424_call(), 0)
call_6812 = relay.TupleGetItem(func_4426_call(), 0)
func_2465_call = mod.get_global_var('func_2465')
func_2469_call = mutated_mod.get_global_var('func_2469')
var_6815 = relay.var("var_6815", dtype = "float64", shape = (1859,))#candidate|6815|(1859,)|var|float64
call_6814 = relay.TupleGetItem(func_2465_call(relay.reshape(var_6815.astype('float64'), [13, 11, 13]), relay.reshape(var_6815.astype('float64'), [13, 11, 13]), ), 0)
call_6816 = relay.TupleGetItem(func_2469_call(relay.reshape(var_6815.astype('float64'), [13, 11, 13]), relay.reshape(var_6815.astype('float64'), [13, 11, 13]), ), 0)
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
const_6818 = relay.const([-6.156382,2.325597,8.914891,-6.027666,-0.839314,6.764175,3.377328,-8.556938,-1.739792,-1.404158,2.899595,-3.268072,1.638373,-5.125111,-2.573704,1.940116,-3.190990,-2.712031,9.088900,-6.491081,-4.948293,-2.222319,3.863625,-3.827187,7.507207,-0.036284,4.385309,5.015407,1.991376,7.675037,6.904949,7.098287,7.081383,9.490948,-0.196342,-2.339101,-5.344447,7.598007,8.534828,1.890202,-2.889545,-8.237664,-5.028222,-8.151832,1.072250,-4.289603,-3.617822,-7.066810,3.603748,9.871559,8.414340,-8.898943,-8.159263,3.114987,5.744466,4.437665,-5.569135,3.580872,6.438842,-7.468757,9.505002,-3.523830,-1.589396,3.307677,-8.795430,-5.557388,1.563608,4.442295,-8.566656,9.259034,7.800056,2.655952,-3.995652,6.190761,-5.218256,-7.118205,-0.138123,4.346690,2.701018,-9.765942,9.154865,2.315880,-8.906011,8.335199,8.101127,-8.770373,8.228572,-5.883045,4.606962,2.798962,-8.702440,0.785046,-5.477238,2.854860,-4.460559,-2.122528,-2.407378,-2.878342,-8.489190,6.769738,-4.818264,9.977943,3.368454,-3.063086,2.251710,-1.348839,3.117175,-0.649033,8.716797,-1.371355,0.576886,5.880287,-0.300766,-0.165922,9.672656,1.527478,-5.698127,0.280609,-2.028555,-0.162729,-4.788739,8.606893,-1.418701,9.576799,-8.843550,4.272020,-4.412420,9.876537,-2.690130,-4.837631,-9.256388,-5.081403,-8.426470,-4.674229,1.883296,-5.762757,-6.187589,2.593708,7.781520,-1.752270,-8.175046,3.111719,-3.280897,-3.020123,4.823336,1.513510,-9.006432,-2.078828,9.311705,3.206160,6.458670,-1.290614,-8.903780,-8.184819,2.575624,0.165636,5.296682,-4.819596,1.505339,-2.208214,0.997782,-6.735672,6.393550,-7.283022,-5.313047,2.560739,2.645512,0.956676,-5.812495,6.892402,-7.951708,4.606908,-8.813096,1.559892,-5.744943,-5.516778,8.629603,8.358758,4.237491,-7.940963,-7.920687,5.690391,6.759067,0.039353,-3.825909,9.481120,2.049760,-7.339956,2.003132,0.192875,-3.909627,8.790636,7.122977,-7.995777,9.021558,-3.222001,9.605758,2.176238,-2.412259,-5.264179,-3.018232,3.526207,-8.394346,3.562698,0.609633,-6.794617,-1.698545,-1.623058,-2.054473,-1.062859,1.453304,3.761085,-8.249025,6.987953,2.853045,7.031537,-2.993973,0.378671,7.402822,-3.503819,-4.500839,-1.808775,-5.380258,-5.004439,4.767133,-8.225177,6.844232,1.917214,2.436405,-7.860407,-4.846039,-4.557512,-6.314402,-6.117258,-3.515926,-7.812467,1.244464,8.147542,2.640962,-4.664003,-4.010614,3.892017,3.229651,0.665668,-4.903784,6.425538,8.673900,1.688580,-7.042484,4.317696,-3.503140,4.027557,-8.772817,6.174669,-1.233590,2.137935,1.449245,-0.323458,8.723909,2.809587,4.999981,6.303726,-3.085074,-2.945154,-7.177534,7.184537,1.591815,-3.038338,4.890011,-4.531447,3.740316,-6.328626,-4.169426,0.637599,-8.104458,8.038698,-5.014884,-2.160256,5.582690,6.643421,3.809917,-3.171816,8.289116,-6.383065,6.015190,-7.617755,-3.491441,1.742323,3.482598,4.309185,2.822160,4.034694,8.863136,-2.138348,-8.576555,-8.156452,-4.600777,-9.128457,9.963292,-2.857976,1.532059,3.015915,2.052516,6.442608,-0.871141,-8.858658,1.282473,5.720711,6.739351,-4.284427,0.380695,3.911998,1.811533,2.150548,9.898562,7.870423,-3.930424,-1.809637,7.872942,-3.688201,-1.613064,2.803320,-7.816495,-7.592123,-3.056881,1.102406,2.675851,9.777001,-3.266177,6.014956,-0.056278,5.285223,-6.142532,-1.304847,3.306515,8.095627,9.085350,1.768444,4.346409,-4.153440,-7.611553,7.782659,-2.621498,9.642571,4.814247,-8.282136,9.236272,-6.961792,-3.552138,-3.281922,4.089494,9.162756,-1.096989,-3.096010,3.226175,-0.220230,-6.480777,7.241872,-6.182240,8.616623,-5.206323,-8.377571,4.564343,0.922048,1.812981,4.319727,7.709529,-1.902898,-4.602551,8.810607,3.858857,8.458818,2.629431,-6.321157,7.497146,2.250043,-4.440498,-7.161925,-1.910032,0.600731,1.066251,-8.591461,7.556313,-1.324711,7.491835,0.668357,5.033760,-6.962814,-3.910744,6.112842,-5.782025,1.447262,-0.992640,4.691068,3.053294,-4.990725,3.694524,1.208245,0.589766,-1.094874,6.786156,9.842055,9.914004,5.725131,0.404334,4.187140,4.676440,-9.805159,-4.648950,-3.187281,-7.346322,-5.521338,7.156998,-4.085047,-3.558286,2.046782,4.833818,-4.312921,-2.394774,-4.360713,-0.997282,1.239492,-4.806465,9.629516,2.312937,-8.585184,6.988417,-0.269920,-0.013951,2.880201,7.965757,-3.168962,-1.740514,5.074585,-2.663788,-7.082408,-2.014812,-6.415699,5.792441,4.091992,6.179338,-2.394022,2.409250,8.813446,7.403260,-6.064358,5.502700,3.145240,2.167699,-6.581871,-9.247660,1.994594,-7.235488,0.508163,9.513410,4.517087,-0.962078,3.182810,-1.626585,4.652285,-2.648269,-9.638953,-4.397310,7.277333,5.222491,4.821054,-6.569124,-8.002727,-1.887264,-8.802283,-7.551388,-3.055558,1.730573,-2.455575,-2.037041,2.673979,6.062907,-2.899199,-8.972386,-5.951148,4.424654,7.720529,-8.531439,4.957043,-2.343493,-9.938861,7.759266,5.696235,7.133402,-7.534189,-5.605223,-9.227438,2.811742,2.861268,-5.165477,8.820975,-6.550835,0.114837,-5.572262,0.152158,-3.742324,-3.336922,7.078213,-5.706606,9.561757,-8.982823,-0.120087,-5.796848,-5.892723,4.291490,9.206724,-2.639742,-2.577626,-4.185053,-3.878231,2.782504,4.237616,-3.244605,5.623046,3.268494,1.070145,-2.612968,-5.626783,-4.875806,2.911222,7.636441,-5.263506,-3.252501,7.938883,-1.423743,-0.876582,-5.037546,6.147837,-7.788766,6.098846,8.412310,-2.753989,0.526541,-1.648591,5.967365,0.247268,-6.238007,-5.875119,-4.521639,6.126962,-6.978429,-2.380507,-2.227531,4.401030,9.569659,-4.395900,-6.348425,-1.039509,-3.251305,0.776673,-2.638911,-9.380505,-6.452159,4.802795,5.901135,8.923258,1.134948,-2.838578,8.979989,-0.698775,4.965852,-9.286262,8.788206,9.028626,2.743009,3.435368,1.982005,1.039538,9.414338,2.466998,6.485547,-6.322131,-0.562512,-6.861970,-3.989872,-9.674848,-5.092559,1.742735,-1.342425,2.495013,7.851458,3.577450,-9.214759,3.308903,-6.581335,-3.047400,6.758979,-9.855880,-3.936484,-6.479740,6.774026,-5.754076,5.920759,-5.453731,-9.327919,8.620793,-0.340329,-2.331748,5.452850,-5.601647,-7.489128,-4.559479,7.524810,-2.832772,5.375870,5.998333,2.091001,-4.737535,1.363696,-1.925448,-1.038756,-5.048613,4.164608,-7.005039,-5.707727,-5.776024,4.314397,-3.299582,4.399226,-3.425192,4.429541,1.528802,0.173953,0.085983,-1.912250,-3.575916,-7.646731,-5.025762,-9.597521,-9.925306,2.841859,8.496021,3.696673,-3.945094,-2.189503,-1.856066,-1.166769,9.175579,8.787075,-8.851967,-2.895264,7.432324,3.657404,-2.806392,-8.432627,-0.305761,6.776483,-0.397565,-3.217910,3.771087,-7.512203,-6.630551,-0.904433,-1.779776,8.110187,9.770808,-9.189270,-3.581056,-9.687689,7.162390,5.458563,1.242566,9.725077,-1.874801,-0.978568,6.471879,7.214707,4.552002,6.209584,8.665234,-1.661411,-7.423104,2.370670,2.563947,-9.967159,-0.055092,-4.230400,-1.007069,-1.981225,6.599254,0.084557,7.918421,0.738160,-3.689556,-9.076313,3.660500,-8.666670,1.271588,-0.423138,-6.345019,0.550024,-1.933358,-8.332148,-3.970362,9.669781,1.286471,-9.351916,1.889556,4.102264,-0.997744,-0.145632,-0.172891,2.911217,-1.250148,-8.321604,-3.092743,-4.830984,-0.542274,-2.815097,8.624240,-6.022071,-8.218828,0.149695,-2.021180,3.811854,-6.317721,-1.870147,-9.480135,1.303893,6.972315,8.734416,5.615156,3.414542,-1.233054,-6.412749,9.913552,-3.526767,6.186702,-9.294216,-5.562798,-3.823684,2.712240,-2.979931,1.853006,-7.534793,0.925788,-1.542993,6.242414,-0.021546,7.829057,1.823575,-1.670335,-1.501295,7.558486,2.086831,-8.706971,3.957631,0.592376,-0.522968,5.636165,8.804690,-5.338544,5.792400,7.589131,-3.857049,3.728608,-2.935723,9.133259,1.713913,3.929735,1.868215,6.592925,0.040201,-3.505922,2.395942,-3.825874,-1.772058,-2.113757,5.547525,-7.001657,4.775553,5.290723,7.217114,-3.014681,-4.438495,3.204399,-5.599103,-0.282926,5.752710,3.641562,-1.752406,-6.091492,-5.539219,-4.762614,-6.472146,2.396410,-5.401508,0.705872,-7.746334,5.153880,6.609899,-9.710534,5.457013,6.059508,8.140540,3.099640,3.993555,-4.737507,-7.376127,1.089628,9.716872,-8.724605,8.558939,6.738498,-3.675719,-6.942364,-9.548648,8.384991,6.747582,-8.467434,0.830627,-0.267939,4.790336,-7.129396,-5.842635,5.230177,8.206201,6.762050,6.145599,-9.199047,6.015781,-6.646081,0.252042,7.471654,-8.198627,2.604625,9.367798,-3.653434,-0.506963,1.186315,-1.197180,7.513457,-5.738941,9.572039,2.612859,8.687358,-9.491914,-0.895275,7.730007,9.197109,-4.545128,7.679231,-9.402272,-9.618198,3.478323,1.177344,-3.821661,0.753764,-2.465046,5.483176,-6.892891,-8.840999,-5.131247,-2.626497,5.950659,1.472248,-2.713934,9.062486,2.662162,3.279214,2.312419,-1.379831,5.404423,6.349477,-2.148409,-0.409380,1.984096,-2.165562,4.399115,-1.208034,-9.667808,-2.010878,-6.688675,1.944822,-1.116869,-8.319004,-6.107014,4.616695,-9.299695,2.770060,3.704037,8.310025,-9.906472,-3.762952,-5.007262,-8.463260,3.611471,1.240070,9.552538,6.946786,-8.238021,9.786505,-7.834159,-2.938381,6.435099,-3.967064,0.871048,-6.593859,7.886891,-0.237855,1.649139,-3.716732,3.641656,-5.488337,-3.746812,-5.066056,-4.543941,1.456517,0.484611,4.993034,6.979708,1.944969,-6.146107,8.997338,2.536229,7.574906,-5.149541,4.934096,-5.342112,-9.696140,3.246069,2.567746,2.067828,-9.583614,-7.671930,2.746466,8.244742,6.806796,-8.552395,2.279776,-4.461927,-5.503985,-4.889606,-9.379804,-5.943028,-5.925165,-3.423259,7.815695,-6.144040,-4.784470,9.914381,4.176859,-6.214595,-6.518497,0.049203,-4.092780,8.776417,-4.108464,-3.089680,-9.809225,-7.304684,-4.378552,-6.274134,-4.087273,-2.466914], dtype = "float64")#candidate|6818|(960,)|const|float64
call_6817 = relay.TupleGetItem(func_554_call(relay.reshape(const_6771.astype('float64'), []), relay.reshape(const_6818.astype('float64'), [12, 10, 8]), ), 0)
call_6819 = relay.TupleGetItem(func_557_call(relay.reshape(const_6771.astype('float64'), []), relay.reshape(const_6818.astype('float64'), [12, 10, 8]), ), 0)
func_6140_call = mod.get_global_var('func_6140')
func_6141_call = mutated_mod.get_global_var('func_6141')
call_6828 = relay.TupleGetItem(func_6140_call(), 0)
call_6829 = relay.TupleGetItem(func_6141_call(), 0)
func_2737_call = mod.get_global_var('func_2737')
func_2738_call = mutated_mod.get_global_var('func_2738')
call_6842 = relay.TupleGetItem(func_2737_call(), 1)
call_6843 = relay.TupleGetItem(func_2738_call(), 1)
func_3988_call = mod.get_global_var('func_3988')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_6845 = func_3988_call()
call_6846 = func_3988_call()
output = relay.Tuple([bop_6773,call_6805,call_6811,call_6814,var_6815,call_6817,const_6818,call_6828,call_6842,call_6845,])
output2 = relay.Tuple([bop_6773,call_6806,call_6812,call_6816,var_6815,call_6819,const_6818,call_6829,call_6843,call_6846,])
func_6872 = relay.Function([var_6772,var_6815,], output)
mod['func_6872'] = func_6872
mod = relay.transform.InferType()(mod)
var_6873 = relay.var("var_6873", dtype = "uint16", shape = (12, 11, 12))#candidate|6873|(12, 11, 12)|var|uint16
var_6874 = relay.var("var_6874", dtype = "float64", shape = (1859,))#candidate|6874|(1859,)|var|float64
output = func_6872(var_6873,var_6874,)
func_6875 = relay.Function([var_6873,var_6874,], output)
mutated_mod['func_6875'] = func_6875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6159_call = mod.get_global_var('func_6159')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_6924 = func_6159_call()
call_6925 = func_6159_call()
output = relay.Tuple([call_6924,])
output2 = relay.Tuple([call_6925,])
func_6931 = relay.Function([], output)
mod['func_6931'] = func_6931
mod = relay.transform.InferType()(mod)
mutated_mod['func_6931'] = func_6931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6931_call = mutated_mod.get_global_var('func_6931')
call_6932 = func_6931_call()
output = call_6932
func_6933 = relay.Function([], output)
mutated_mod['func_6933'] = func_6933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5318_call = mod.get_global_var('func_5318')
func_5320_call = mutated_mod.get_global_var('func_5320')
call_6943 = relay.TupleGetItem(func_5318_call(), 0)
call_6944 = relay.TupleGetItem(func_5320_call(), 0)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
var_6970 = relay.var("var_6970", dtype = "int32", shape = (2002,))#candidate|6970|(2002,)|var|int32
call_6969 = relay.TupleGetItem(func_2608_call(relay.reshape(var_6970.astype('int32'), [2002,])), 4)
call_6971 = relay.TupleGetItem(func_2610_call(relay.reshape(var_6970.astype('int32'), [2002,])), 4)
output = relay.Tuple([call_6943,call_6969,var_6970,])
output2 = relay.Tuple([call_6944,call_6971,var_6970,])
func_6982 = relay.Function([var_6970,], output)
mod['func_6982'] = func_6982
mod = relay.transform.InferType()(mod)
mutated_mod['func_6982'] = func_6982
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6983 = relay.var("var_6983", dtype = "int32", shape = (2002,))#candidate|6983|(2002,)|var|int32
func_6982_call = mutated_mod.get_global_var('func_6982')
call_6984 = func_6982_call(var_6983)
output = call_6984
func_6985 = relay.Function([var_6983], output)
mutated_mod['func_6985'] = func_6985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_7013 = func_3679_call()
call_7014 = func_3679_call()
func_1491_call = mod.get_global_var('func_1491')
func_1493_call = mutated_mod.get_global_var('func_1493')
const_7032 = relay.const([[8,9,10,-1,3,-7,3,2,-7,7,9,8,5,7,-7,-3,6,-3,1,5,9,-5,-3,10,-3,1,-9,9,2,-10,-5,-6,-6,-7,10,1,5,4,4,-7,-10,-10,9,3,-5,10,9,-1,4,-1,10,-8,9,-1,7,-9,8,8,-1,9,-7,6,-7,-10,-4,9,-5,9,10,-7,1,8,7,7,6,-4,6,-8,8,8,-8,-6,-6,9,8,-5,-1,-6],[-8,6,8,-8,1,-9,-1,-1,-4,4,-3,-7,6,-9,6,7,8,-9,-5,-5,10,-5,1,-10,4,-8,-4,7,-9,-10,2,9,5,10,-3,-8,9,4,1,8,9,-2,8,-6,6,2,-5,1,8,-10,4,-6,3,-2,7,10,5,8,3,-2,7,-8,6,-2,9,-9,-4,-8,6,-1,-2,-8,5,10,-7,-7,-6,-9,-6,-1,7,-10,5,-5,-9,-6,9,6]], dtype = "int16")#candidate|7032|(2, 88)|const|int16
call_7031 = relay.TupleGetItem(func_1491_call(relay.reshape(const_7032.astype('int16'), [176,])), 0)
call_7033 = relay.TupleGetItem(func_1493_call(relay.reshape(const_7032.astype('int16'), [176,])), 0)
output = relay.Tuple([call_7013,call_7031,const_7032,])
output2 = relay.Tuple([call_7014,call_7033,const_7032,])
func_7042 = relay.Function([], output)
mod['func_7042'] = func_7042
mod = relay.transform.InferType()(mod)
mutated_mod['func_7042'] = func_7042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mutated_mod.get_global_var('func_7042')
call_7043 = func_7042_call()
output = call_7043
func_7044 = relay.Function([], output)
mutated_mod['func_7044'] = func_7044
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7050 = relay.var("var_7050", dtype = "float64", shape = (13, 3, 6))#candidate|7050|(13, 3, 6)|var|float64
var_7051 = relay.var("var_7051", dtype = "float64", shape = (13, 3, 6))#candidate|7051|(13, 3, 6)|var|float64
bop_7052 = relay.add(var_7050.astype('float64'), relay.reshape(var_7051.astype('float64'), relay.shape_of(var_7050))) # shape=(13, 3, 6)
func_5904_call = mod.get_global_var('func_5904')
func_5907_call = mutated_mod.get_global_var('func_5907')
var_7057 = relay.var("var_7057", dtype = "float64", shape = (336,))#candidate|7057|(336,)|var|float64
call_7056 = relay.TupleGetItem(func_5904_call(relay.reshape(var_7057.astype('float64'), [14, 2, 12])), 2)
call_7058 = relay.TupleGetItem(func_5907_call(relay.reshape(var_7057.astype('float64'), [14, 2, 12])), 2)
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
const_7062 = relay.const(-0.261531, dtype = "float64")#candidate|7062|()|const|float64
var_7063 = relay.var("var_7063", dtype = "float64", shape = (480, 2))#candidate|7063|(480, 2)|var|float64
call_7061 = relay.TupleGetItem(func_554_call(relay.reshape(const_7062.astype('float64'), []), relay.reshape(var_7063.astype('float64'), [12, 10, 8]), ), 0)
call_7064 = relay.TupleGetItem(func_557_call(relay.reshape(const_7062.astype('float64'), []), relay.reshape(var_7063.astype('float64'), [12, 10, 8]), ), 0)
output = relay.Tuple([bop_7052,call_7056,var_7057,call_7061,const_7062,var_7063,])
output2 = relay.Tuple([bop_7052,call_7058,var_7057,call_7064,const_7062,var_7063,])
func_7066 = relay.Function([var_7050,var_7051,var_7057,var_7063,], output)
mod['func_7066'] = func_7066
mod = relay.transform.InferType()(mod)
var_7067 = relay.var("var_7067", dtype = "float64", shape = (13, 3, 6))#candidate|7067|(13, 3, 6)|var|float64
var_7068 = relay.var("var_7068", dtype = "float64", shape = (13, 3, 6))#candidate|7068|(13, 3, 6)|var|float64
var_7069 = relay.var("var_7069", dtype = "float64", shape = (336,))#candidate|7069|(336,)|var|float64
var_7070 = relay.var("var_7070", dtype = "float64", shape = (480, 2))#candidate|7070|(480, 2)|var|float64
output = func_7066(var_7067,var_7068,var_7069,var_7070,)
func_7071 = relay.Function([var_7067,var_7068,var_7069,var_7070,], output)
mutated_mod['func_7071'] = func_7071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7076 = relay.var("var_7076", dtype = "float64", shape = (5, 3, 4))#candidate|7076|(5, 3, 4)|var|float64
var_7077 = relay.var("var_7077", dtype = "float64", shape = (5, 3, 4))#candidate|7077|(5, 3, 4)|var|float64
bop_7078 = relay.minimum(var_7076.astype('float64'), relay.reshape(var_7077.astype('float64'), relay.shape_of(var_7076))) # shape=(5, 3, 4)
uop_7095 = relay.log(var_7077.astype('float32')) # shape=(5, 3, 4)
uop_7102 = relay.acos(uop_7095.astype('float64')) # shape=(5, 3, 4)
func_1668_call = mod.get_global_var('func_1668')
func_1670_call = mutated_mod.get_global_var('func_1670')
var_7108 = relay.var("var_7108", dtype = "float32", shape = (18, 4))#candidate|7108|(18, 4)|var|float32
call_7107 = func_1668_call(relay.reshape(var_7108.astype('float32'), [9, 8]))
call_7109 = func_1668_call(relay.reshape(var_7108.astype('float32'), [9, 8]))
output = relay.Tuple([bop_7078,uop_7102,call_7107,var_7108,])
output2 = relay.Tuple([bop_7078,uop_7102,call_7109,var_7108,])
func_7110 = relay.Function([var_7076,var_7077,var_7108,], output)
mod['func_7110'] = func_7110
mod = relay.transform.InferType()(mod)
var_7111 = relay.var("var_7111", dtype = "float64", shape = (5, 3, 4))#candidate|7111|(5, 3, 4)|var|float64
var_7112 = relay.var("var_7112", dtype = "float64", shape = (5, 3, 4))#candidate|7112|(5, 3, 4)|var|float64
var_7113 = relay.var("var_7113", dtype = "float32", shape = (18, 4))#candidate|7113|(18, 4)|var|float32
output = func_7110(var_7111,var_7112,var_7113,)
func_7114 = relay.Function([var_7111,var_7112,var_7113,], output)
mutated_mod['func_7114'] = func_7114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6557_call = mod.get_global_var('func_6557')
func_6559_call = mutated_mod.get_global_var('func_6559')
call_7284 = relay.TupleGetItem(func_6557_call(), 2)
call_7285 = relay.TupleGetItem(func_6559_call(), 2)
var_7291 = relay.var("var_7291", dtype = "float32", shape = (39, 3))#candidate|7291|(39, 3)|var|float32
bop_7292 = relay.subtract(call_7284.astype('float32'), relay.reshape(var_7291.astype('float32'), relay.shape_of(call_7284))) # shape=(39, 3)
bop_7295 = relay.subtract(call_7285.astype('float32'), relay.reshape(var_7291.astype('float32'), relay.shape_of(call_7285))) # shape=(39, 3)
bop_7296 = relay.floor_mod(bop_7292.astype('float32'), relay.reshape(call_7284.astype('float32'), relay.shape_of(bop_7292))) # shape=(39, 3)
bop_7299 = relay.floor_mod(bop_7295.astype('float32'), relay.reshape(call_7285.astype('float32'), relay.shape_of(bop_7295))) # shape=(39, 3)
func_370_call = mod.get_global_var('func_370')
func_373_call = mutated_mod.get_global_var('func_373')
const_7301 = relay.const([6.347444,-1.704643,7.518946,-5.638028,-3.677607,9.110145,0.051826,4.475019,-2.549177,9.692942,8.674555,-3.755331,6.385773,-4.443402,-1.452928,4.692290,-7.665372,-0.444203,4.802019,9.040641,1.897283,3.814688,-3.332347,0.534218,3.139594,4.481247,-3.986789,-1.186484,-7.172338,-3.324314,9.043987,-6.324342,5.140503,2.972179,-1.100547,-8.092652,-7.701920,-8.719695,-5.907340,0.592134,6.186866,-6.893923,-9.505302,4.952624,1.544565,-0.050310,2.854098,-4.820758,9.256263,-3.517409,-1.591586,9.082127,-9.318625,5.258556,7.611685,6.453657,9.540570,-1.987427,-7.503217,3.934648,0.551741,-6.114367,-9.030996,7.520643,7.330118,2.841080,-9.143266,-2.226120,4.356981,1.041831,-7.789072,8.480250,-4.082532,-9.974805,0.194173,-1.546423,1.921876,9.308391,-2.573956,6.169989,-5.833659,9.637985,6.828250,-9.175341,-2.572341,3.920010,-3.296850,-3.225174,-0.991906,9.844216,-3.371804,-7.227525,4.017447,-1.258363,-2.469907,3.015238,-4.365606,4.202552,-8.295020,-0.712818,7.960944,3.645817,-8.165775,-9.306885,-0.273098,-0.147600,4.752950,-7.164368,9.789505,-3.625296,-1.608110,-1.058991,8.260815,-5.081510,2.299010,-1.070091,-7.418107,-4.355805,7.743632,1.657780,5.764089,2.704526,-8.500906,2.070714,-4.563157,5.478628,8.631499,9.399833,0.353132,-6.669976,9.962443,1.335717,-9.651384,-9.159190,-4.169121,-3.057150,-2.320177,0.417012,1.092023,-8.473110,-2.713726,5.142852,3.785704,-6.379223,-4.402710,-2.357777,4.403958,-3.263819,0.528048,-0.227495,-3.764346,8.783950,-4.616880,-8.769173,8.161791,5.099265,-9.789021,1.105615,2.388907,2.261229,-8.585104,0.712647,0.468517,-9.236209,8.182847,4.341296,2.798708,-4.798635,1.768740,9.642807,4.662782,-9.211028,6.902012,1.047119,-8.136725,3.599780,-1.514017,-3.476471,-7.452495,5.202986,6.079623,4.568266,6.403511,-5.047988,-9.654309,-4.891155,-6.782989,-0.631473,-9.709440,1.283937,-3.993430,-1.661951,2.022813,-0.873843,6.598797,5.839150,-4.635054,3.955861,-3.489924,-4.240485,5.067244,-9.745717,-1.844547,-6.546743,7.433443,5.585807,-8.917511,-9.297216,-6.046652,5.918328,-3.174519,2.296933,2.103198,5.374010,-7.862400,4.248764,-5.773222,-8.349601,-2.662684,3.344636,-3.440399,4.045782,-5.226549,-0.062802,-1.138977,-6.880805,1.997499,-9.540897,-9.129581,-4.679030,3.095439,3.189585,-6.353748,-0.228418,-2.791190,-3.142425,-6.171476,0.994955,9.072888,-3.900410,2.410248,0.203956,-9.270723,4.981780,9.397063,0.865768,9.993487,-5.809832,-8.627604,-2.035532,-2.829483,7.478538,-4.626033,-2.949561,8.294595,-8.038610,8.487753,1.387532,0.144991,3.190830,-8.417629,6.796257,7.343542,8.475486,3.543361,-1.421412,-4.091946,-3.344351,-9.899452,9.720827,4.188505,-3.845620,9.883571,-3.270580,-5.086295,1.973342,3.785214,2.651067,-4.868113,-0.631093,-2.466546,9.744133,5.247261,-6.321065,-1.950082,7.313542,3.107988,3.848068,5.865157,9.496106,6.868470,-4.893500,0.857437,6.354143,1.365178,3.274409,-9.963179,-8.656495,5.624725,6.694740,-5.757361,4.459106,-1.260382,-0.537811,1.862503,1.227945,-5.900778,1.221333,2.873003,9.270295,-9.712458,6.332670,-5.493891,-2.592239,-8.886724,7.804517,-4.308605,-8.051904,0.251483,-8.831131,-9.175234,3.783486,-0.280749,-6.699716,0.768638,-4.772458,7.260230,-7.855577,9.703519,0.978962,-5.847238,1.010161,6.049636,3.193855,-2.940349,4.596706], dtype = "float32")#candidate|7301|(336,)|const|float32
call_7300 = relay.TupleGetItem(func_370_call(relay.reshape(const_7301.astype('float32'), [14, 2, 12])), 0)
call_7302 = relay.TupleGetItem(func_373_call(relay.reshape(const_7301.astype('float32'), [14, 2, 12])), 0)
output = relay.Tuple([bop_7296,call_7300,const_7301,])
output2 = relay.Tuple([bop_7299,call_7302,const_7301,])
func_7306 = relay.Function([var_7291,], output)
mod['func_7306'] = func_7306
mod = relay.transform.InferType()(mod)
mutated_mod['func_7306'] = func_7306
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7307 = relay.var("var_7307", dtype = "float32", shape = (39, 3))#candidate|7307|(39, 3)|var|float32
func_7306_call = mutated_mod.get_global_var('func_7306')
call_7308 = func_7306_call(var_7307)
output = call_7308
func_7309 = relay.Function([var_7307], output)
mutated_mod['func_7309'] = func_7309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4627_call = mod.get_global_var('func_4627')
func_4628_call = mutated_mod.get_global_var('func_4628')
call_7369 = relay.TupleGetItem(func_4627_call(), 0)
call_7370 = relay.TupleGetItem(func_4628_call(), 0)
func_3694_call = mod.get_global_var('func_3694')
func_3695_call = mutated_mod.get_global_var('func_3695')
call_7375 = relay.TupleGetItem(func_3694_call(), 0)
call_7376 = relay.TupleGetItem(func_3695_call(), 0)
output = relay.Tuple([call_7369,call_7375,])
output2 = relay.Tuple([call_7370,call_7376,])
func_7377 = relay.Function([], output)
mod['func_7377'] = func_7377
mod = relay.transform.InferType()(mod)
output = func_7377()
func_7378 = relay.Function([], output)
mutated_mod['func_7378'] = func_7378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2746_call = mod.get_global_var('func_2746')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_7445 = func_2746_call()
call_7446 = func_2746_call()
output = relay.Tuple([call_7445,])
output2 = relay.Tuple([call_7446,])
func_7447 = relay.Function([], output)
mod['func_7447'] = func_7447
mod = relay.transform.InferType()(mod)
output = func_7447()
func_7448 = relay.Function([], output)
mutated_mod['func_7448'] = func_7448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4690_call = mod.get_global_var('func_4690')
func_4692_call = mutated_mod.get_global_var('func_4692')
call_7518 = relay.TupleGetItem(func_4690_call(), 0)
call_7519 = relay.TupleGetItem(func_4692_call(), 0)
func_3610_call = mod.get_global_var('func_3610')
func_3613_call = mutated_mod.get_global_var('func_3613')
var_7557 = relay.var("var_7557", dtype = "uint32", shape = (48,))#candidate|7557|(48,)|var|uint32
call_7556 = relay.TupleGetItem(func_3610_call(relay.reshape(var_7557.astype('uint32'), [48,])), 0)
call_7558 = relay.TupleGetItem(func_3613_call(relay.reshape(var_7557.astype('uint32'), [48,])), 0)
output = relay.Tuple([call_7518,call_7556,var_7557,])
output2 = relay.Tuple([call_7519,call_7558,var_7557,])
func_7566 = relay.Function([var_7557,], output)
mod['func_7566'] = func_7566
mod = relay.transform.InferType()(mod)
var_7567 = relay.var("var_7567", dtype = "uint32", shape = (48,))#candidate|7567|(48,)|var|uint32
output = func_7566(var_7567)
func_7568 = relay.Function([var_7567], output)
mutated_mod['func_7568'] = func_7568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_7570 = relay.TupleGetItem(func_2953_call(), 0)
call_7571 = relay.TupleGetItem(func_2955_call(), 0)
var_7591 = relay.var("var_7591", dtype = "float32", shape = (12, 15, 4))#candidate|7591|(12, 15, 4)|var|float32
bop_7592 = relay.right_shift(call_7570.astype('uint16'), relay.reshape(var_7591.astype('uint16'), relay.shape_of(call_7570))) # shape=(12, 15, 4)
bop_7595 = relay.right_shift(call_7571.astype('uint16'), relay.reshape(var_7591.astype('uint16'), relay.shape_of(call_7571))) # shape=(12, 15, 4)
output = relay.Tuple([bop_7592,])
output2 = relay.Tuple([bop_7595,])
func_7607 = relay.Function([var_7591,], output)
mod['func_7607'] = func_7607
mod = relay.transform.InferType()(mod)
var_7608 = relay.var("var_7608", dtype = "float32", shape = (12, 15, 4))#candidate|7608|(12, 15, 4)|var|float32
output = func_7607(var_7608)
func_7609 = relay.Function([var_7608], output)
mutated_mod['func_7609'] = func_7609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5054_call = mod.get_global_var('func_5054')
func_5056_call = mutated_mod.get_global_var('func_5056')
call_7733 = relay.TupleGetItem(func_5054_call(), 0)
call_7734 = relay.TupleGetItem(func_5056_call(), 0)
func_4647_call = mod.get_global_var('func_4647')
func_4648_call = mutated_mod.get_global_var('func_4648')
call_7737 = func_4647_call()
call_7738 = func_4647_call()
output = relay.Tuple([call_7733,call_7737,])
output2 = relay.Tuple([call_7734,call_7738,])
func_7750 = relay.Function([], output)
mod['func_7750'] = func_7750
mod = relay.transform.InferType()(mod)
output = func_7750()
func_7751 = relay.Function([], output)
mutated_mod['func_7751'] = func_7751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_7827 = relay.TupleGetItem(func_3658_call(), 0)
call_7828 = relay.TupleGetItem(func_3660_call(), 0)
func_3988_call = mod.get_global_var('func_3988')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_7829 = func_3988_call()
call_7830 = func_3988_call()
func_3026_call = mod.get_global_var('func_3026')
func_3028_call = mutated_mod.get_global_var('func_3028')
call_7852 = func_3026_call()
call_7853 = func_3026_call()
func_4549_call = mod.get_global_var('func_4549')
func_4550_call = mutated_mod.get_global_var('func_4550')
call_7854 = func_4549_call()
call_7855 = func_4549_call()
output = relay.Tuple([call_7827,call_7829,call_7852,call_7854,])
output2 = relay.Tuple([call_7828,call_7830,call_7853,call_7855,])
func_7861 = relay.Function([], output)
mod['func_7861'] = func_7861
mod = relay.transform.InferType()(mod)
mutated_mod['func_7861'] = func_7861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7861_call = mutated_mod.get_global_var('func_7861')
call_7862 = func_7861_call()
output = call_7862
func_7863 = relay.Function([], output)
mutated_mod['func_7863'] = func_7863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4778_call = mod.get_global_var('func_4778')
func_4780_call = mutated_mod.get_global_var('func_4780')
call_7869 = relay.TupleGetItem(func_4778_call(), 0)
call_7870 = relay.TupleGetItem(func_4780_call(), 0)
func_3498_call = mod.get_global_var('func_3498')
func_3501_call = mutated_mod.get_global_var('func_3501')
const_7874 = relay.const([10,5,6,7,-9,1,-5,5,-1,-10,-8,-3,5,-8,-10,-10,-6,10,-6,3,4,-7,7,4,10,6,2,10,5,10,8,6,6,-5,5,-10,-2,-9,9,-6,7,7,-5,-9,-5,-6,10,7,1,8,2,6,7,2,1,4,-1,-9,2,-7,-8,9,6,-4,2,3,-10,-5,-6,-4,6,-5,1,-5,4,9,6,10,8,1,5,-1,2,-3,-4,7,5,10,8,10,-9,5,-8,9,10,3,3,2,1,-8,-4,-6,-7,-8,4,-8,-6,-10,2,10,1,-7,7,-2,9,-3,2,-6,8,5,-2,6,-10,4,-8,-1,-10,-1,-2,-5,-2,-5,-2,7,-5,-3,-7,-6,-5,-6,7,-10,-10,3,-8,4,-9,-6,10,-10,-6,-3,-1,-10,1,9,-7,-2,4,8,4,-1,1,-5,-3,-7,9,3,-10,8,3,9,10,5,-9,-7,-5,7,8,-8,-10,-1,4,10,-9,5,-8,1,8,-4,-1,9,1,-3,-9,-1,5,-7,-8,-2,7,-8,-4,5,-5,10,-1,-3,6,-3,-8,-5,8,1,-10,4,2,4,-1,9,-9,-5,7,-5,5,-9,4,-5,5,8,-8,-5,-4,-6,8,-2,-4,9,6,-4,4,3,7,-10,-5,2,-1,-4,5,-2,5,2,-3,-1,-5,-10,-10,6,-3,4,3,1,-2,-10,5,8,8,-1,10,-9,-7,-5,2,-6,6,-2,5,-4,10,-2,8,7,1,-6,-8,-8,-6,5,4,4,3,-10,1,5,-10,6,-10,-5,-1,-6,7,-7,8,-10,3,-4,-2,-7,8,4,-3,-7,5,6,2,8,-7,-4,-7,7,8,8,-6,3,-7,6,-1,-2,5,-4,-1,10,-7,3,9,-4,3,-9,5,5,-10,1,-3,8,3,9,-6,4,-1,5,-6,9,9,10,-9,-5,7,-2,10,-10,-4,9,-8,-3,-9,-3,5,6,-9,7,3,-8,-9,1,-2,6,-2,8,-7,10,-9,-3,-4,-10,5,-10,-3,-9,9,-4,10,9,-5,1,7,-8,-6,-3,-9,-3,2,5,10,-8,5,-1,1,7,6,10,3,10,-10,-2,-5,5,6,1,-7,8,10,-7,9,9,-5,-9,-6,10,3,4,6,-7,3,-10,-8,2,-8,-1,4,2,-8,8,1,9,-1,-4,-4,9,1,-8,10,7,9,-4,-9,-2,9,-10,-9,6,3,5,3,7,-5,-2,-6,-2,-8,-8,7,3,-2,-6,-1,-9,4,-4,-7,-10,-7,-7,3,10,10,-8,9,-10,-2,2,-1,-10,6,-4,4,-7,-8,5,-6,3,-6,10,2,-6,8,-8,10,8,1,-9,7,5,10,9,7,-1,-2,-8,-3,-9,-6,-4,6,-2,-3,1,7,-7,7,5,7,9,-9,4,-3,6,1,-6,1,3,9,8,-9,4,-1,2,-7,9,-9,-9,-7,4,5,4,-9,2,10,-5,4,-7,-8,-3,1,2,-5,2,4,-10,5,-4,1,-2,5,2,-7,-4,-9,2,9,7,5,-5,-5,-9,-7,7,-9,10,8,-3,10,-2,4,-8,9,6,5,4,-4,-2,-6,-10,-10,8,2,-5,-7,-1,2,-4,5,7,-1,1,4,8,-4,4,1,-4,-3,7,-5,-3,-8,-9,6,4,-7,-5,-10,-8,5,2,3,-1,4,-6,-6,7,-5,8,10,-1,9,-7,-2,5,6,3,3,6,2,6,3,4,10,1,6,-9,1,3,-9,-9,6,-6,6,6,-8,-7,-8,10,3,-9,5,-3,2,-8,-6,9,10,3,-9,-5,-3,-7,3,10,9,6,-9,-10,7,-3,-6,-5,8,-4,6,6,-4,-2,-10,-5,-4,-5,-2,-4,-5,-1,9,-7,1,6,1,-7,-4,-3,1,-3,3,-10,3,3,2,8,10,-8,9,6,-3,6,-2,-2,-9,10,5,6,-7,-7,-2,10,-4,-3,-2,4,2,5,-9,6,5,9,-9,1,3,-5,-5,-9,5,2,10,5,6,-3,8,-4,-7,-5,7,10,-4,-6,-2,-9,-6,-4,-9,-6,8,1,-1,1,7,4,-9,-5,-1,-3,-6,10,5,8,-3,-10,-6,-9,7,4,-5,9,5,9,5,-9,-8,2,-2,-9,5,-8,-10,9,-8,-1,-3,8,-4,-4,-3,-1,3,-4,4,-4,1,-9,10,8,2,2,2,3,-1,7,1,2,-1,-1,-8,-3,8,1,9,7,-3,-7,10,-2,-7,4,-9,4,-3,-5,1,-3,10,-6,-7,2,-3,-6,-9,4,9,5,-6,-10,-7,3,2,8,2,-3,-6,-1,-4,-2,5,-10,-5,4,8,-2,8,-5,-1,-2,-7,-4,-10,4,9,-8,3,1,-6,1,9,-9,1,5,6,-7,-2,8,5,9,-9,2,-8,-1,-8,-8,-8,-1,-2,-2,-6,1,-1,4,-2,-4,10,2,9,-2,-8,3,9,4,4,10,-7,8,2,4,4,5,-3,2,10,8,-2,5,-7,-3,-7,1,-3,-1,-2,9,4,8,10,-9,3,2,10,-7,6,-8,-2,-6,9,-10,-2,-4,4,4,-3,-8,-2,-2,-6,9,-10,5,-7,6,10,-4,-8,1,-2,8,9,2,6,4,-2,6,-2,-3,-3,3,-7,-6,-7,7,-1,5,-10,-3,-2,10,10,7,6,10,-8,-1,-10,-10,-1,8,-1,-3,-1,-9,1,-6,-3,4,-2,-7,5,-5,-4,-6,9,8,-7,3,7,-1,-9,-3,2,2,-10,-4,6,4,4,6,1,5,6,8,-10,-4,-7,-1,-2,3,-1,-9,-8,-8,2,-10,-9,3,-3,-9,-1,1,-9,7,3,-5,8,-3,8,1,-9,-5,5,4,-8,-2,7,6,-4,-9,-4,-3,-10,-1,2,-8,-4,-7,-10,7,-7,8,-2,2,-9,5,7,6,-6,4,10,7,5,-2,-9,5,-10,2,7,-8,-6,10,10,-1,-4,4,-6,-9,-7,8,-2,3,-5,-5,-8,-9,-5,10,-6,2,5,-7,7,4,8,1,4,-3,-7,-1,1,-3,-10,2,5,9,9,3,-1,1,8,1,-6,-2,5,1,-5,4,9,-3,-1,-4,-6,8,3,-1,5,-4,-8,-5,-10,-9,-1,10,9,4,-6,2,-5,-1,4,-9,4,8,-8,5,9,2,-6,-4,6,7,-6,3,-1,-10,-8,2,2,4,-4,7,2,5,-2,7,7,-1,4,8,10,-2,7,-2,5,1,6,5,9,-8,-1,10,-10,4,-5,-1,10,-5,9,-8,-3,4,-6,7,-10,-8,-3,-10,-9,9,7,-1,5,-6,1,-9,-10,6,-3,-3,2,-6,8,-8,-10,-3,8,6,9,-8,-3,-9,-1,10,7,-6,3,-4,10,1,10,9,-9,-3,-4,-1,7,1,-4,-1,4,-2,1,-1,-7,-1,6,6,2,4,-10,4,-4,5,-7,10,6,-2,5,8,-6,10,-6,7,-4,5,-7,-1,-5,10,-5,-5,10,9,-9,-9,5,-6,6,10,-6,3,-5,6,-3,2,-5,-2,-4,-2,8,-9,3,-4,1,-8,-9,10,-7,6,3,9,-6,-4,-2,7,-10,-2,4,-1,-2,-3,1,-6,2,-10,9,2,10,8,-4,3,3,-8,-3,-3,-9,-5,2,3,-3,-6,2,-10,7,6,4,7,7,4,6,7,4,8,-5,-7,-3,1,-4,-10,2,2,9,3,5,-8,-7,-6,6,6,-6,10,-7,-5,-3,-3,2,2,5,7,-5,2,-9,2,2,-9,-10,-8,-1,1,1,-10,9,4,7,5,10,3,-6,7,2,8,4,-10,-2,-8,5,6,7,-10,-3,6,2,3,4,-8,7,-8,-4,5,-1,7,-10,-2,2,3,6,-1,9,-6,7,9,10,4,-8,-9,3,-5,-8,-3,-8,8,-8,-2,-4,-9,-2,4,8,7,-8,-4,-10,-3,7,-9,-2,7,-7,-8,7,3,-8,5,-4,9,-9,-2,-4,-7,2,-4,-4,-6,-9,-3,2,8,-2,3,5,9,-4,3,7,9,-8,4,3,5,4,10,4,5,3,4,-1,10,-4,-5,2,10,6,-4,-6,3,-6,6,-3,6,1,3,-2,9,-5,7,-8,-1,-1,-3,3,6,1,1,-5,9,8,-9,-5,6,-5,-9,-10,-7,-5,-5,-8,-10,-5,2,-10,7,3,6,-6,-7,-5,-6,-9,3,5,2,1,4,-5,-5,9,2,-7,1,-1,6,7,1,5,7,4,-5,3,2,-8,-4,-8,-9,5,10,-8,-3,6,-10,8,3,9,10,7,-4,6,2,-2,-10,-10,-4,5,-5,1,-2,-3,4,4,7,-3,-6,7,-4,-10,-10,3,1,1,-10,9,5,8,-7,-1,-4,3,3,10,1,-4,-10,-4,6,5,2,-8,10,-4,8,9,-10,-2,4,-2,1,7,4,4,-9,-6,5,-7,1,1,-9,-1,-3,-3,8,4,-3,3,-2,-7,-6,-3,-6,7,6,-7,6,-3,5,-8,3,-2,-10,-4,-2,5,-4,10,-1,-7,4,-9,4,-9,-9,-1,8,-9,-10,1,5,-3,-4,-7,9,1,8,4,-3,-2,-2,5,8,-8,-8,-10,7,-2,-6,8,-2,1,-9,5,-9,-4,-10,3,-6,6,-4,-9,-2,1,-9,-7,8,-3,4,8,-5,-6,-5,2,-2,7,7,-6,-6,-8,8,6,-3,2,6,-1,-6,7,6,5,10,-3,-8,7,-5,-1,-2,8,7,-3,10,6,-2,7,2,7,4,10,-10,7,4,8,-4,-1,6,4,9,2,-2,-1,-3,-8,-10,-10,-7,-6,7,-9,10,-4,8,-2,9,-10,7,5,4,8,4,-4,8,-6,-6,6,8,2,-7,5,-2,-6,10,2,7,-8,9,3,-2,2,5,5,7,9,6,1,9,-9,-9,3,-1,8,-2,7,2,-3,-7,-8,6,10,1,9,1,1,9,7,-2,9,-7,-8,-6,-4,9,-9,1,-8,5,2,-5,5,6,3,-6,-2,9,-2,2,1,-1,-8,-2,-5,-4,-2,-10,3,6,6,10,-6,9,-5,-7,-4,-7,-9,9,-7,-10,1,5,-10,2,4,3,3,2,-2,-4,-5,9,3,9,10,-8,-3,-7,-3,-6,-2,-1,-8,-5,-9,-7,2,-10,3,-5,-1,3,8,-7,-10,-10,-2,1,3,2,-5,-8,-4,-3,10,-7,-5,-6,-2,-3,-4,9,7,7,6,-4,10,-9,2,3,-2,-4,-3,-7,1,-9,7,2,8,4,3,-4,-9,9,-4,3,3,10,-6,-2,1,4], dtype = "int32")#candidate|7874|(2002,)|const|int32
const_7875 = relay.const([-1,-9,2,2,5,8,-3,6,-8,-5,-6,-7,10,10,-5,-9,-10,3,10,-8,9,9,-10,-9,-6,9,5,-2,4,-8,5,-7,-8,6,6,-3,4,8,-8,4,-1,-8,9,-1,2,-1,-7,-1,-9,-2,-5,-1,-6,-2,-5,-8,9,3,6,10,3,6,-2,-6,-5,7,1,6,-6,-10,5,7,4,2,4,-9,-7,-9,-1,1,1,-4,7,-10,10,-6,-1,-1,-5,-6,-6,7,9,4,1,4,3,-6,9,3,-9,-6,-2,-5,9,5,8,1,-10,-5,-10,4,-10,4,-10,9,-8,10,-2,-6,-8,-8,-2,4,-6,2,-2,1,-9,-1,4,6,7,-1,-3,-1,7,-9,-10,1,-4,4,-9,7,-2,5,-2,-7,9,9,-4,-6,8,7,8,6,1,9,-4,8,-7,-1,7,8,-5,-1,5,-7,-3,-5,-4,-5,10,7,-10,-10], dtype = "int16")#candidate|7875|(176,)|const|int16
call_7873 = relay.TupleGetItem(func_3498_call(relay.reshape(const_7874.astype('int32'), [2002,]), relay.reshape(const_7875.astype('int16'), [176,]), ), 1)
call_7876 = relay.TupleGetItem(func_3501_call(relay.reshape(const_7874.astype('int32'), [2002,]), relay.reshape(const_7875.astype('int16'), [176,]), ), 1)
output = relay.Tuple([call_7869,call_7873,const_7874,const_7875,])
output2 = relay.Tuple([call_7870,call_7876,const_7874,const_7875,])
func_7886 = relay.Function([], output)
mod['func_7886'] = func_7886
mod = relay.transform.InferType()(mod)
output = func_7886()
func_7887 = relay.Function([], output)
mutated_mod['func_7887'] = func_7887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5445_call = mod.get_global_var('func_5445')
func_5446_call = mutated_mod.get_global_var('func_5446')
call_7894 = func_5445_call()
call_7895 = func_5445_call()
func_7306_call = mod.get_global_var('func_7306')
func_7309_call = mutated_mod.get_global_var('func_7309')
var_7899 = relay.var("var_7899", dtype = "float32", shape = (117,))#candidate|7899|(117,)|var|float32
call_7898 = relay.TupleGetItem(func_7306_call(relay.reshape(var_7899.astype('float32'), [39, 3])), 0)
call_7900 = relay.TupleGetItem(func_7309_call(relay.reshape(var_7899.astype('float32'), [39, 3])), 0)
output = relay.Tuple([call_7894,call_7898,var_7899,])
output2 = relay.Tuple([call_7895,call_7900,var_7899,])
func_7901 = relay.Function([var_7899,], output)
mod['func_7901'] = func_7901
mod = relay.transform.InferType()(mod)
mutated_mod['func_7901'] = func_7901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7902 = relay.var("var_7902", dtype = "float32", shape = (117,))#candidate|7902|(117,)|var|float32
func_7901_call = mutated_mod.get_global_var('func_7901')
call_7903 = func_7901_call(var_7902)
output = call_7903
func_7904 = relay.Function([var_7902], output)
mutated_mod['func_7904'] = func_7904
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7914 = relay.var("var_7914", dtype = "float32", shape = (14, 11, 3))#candidate|7914|(14, 11, 3)|var|float32
const_7915 = relay.const([[[9.244226,-6.381292,5.499042],[7.541162,4.635398,-4.756921],[-7.572699,-8.541232,2.608977],[-6.511014,1.207944,8.058600],[-1.122039,-8.485303,-2.510817],[-5.221005,-3.369731,-4.987521],[-8.387119,-7.995921,-0.505038],[-5.652171,-8.752772,6.863408],[5.805323,4.397144,-5.855875],[1.542666,-7.120190,-0.856932],[-9.207800,-7.447221,3.052193]],[[-7.524483,-5.042541,6.090013],[4.282104,-4.726113,1.933202],[8.649476,1.078921,6.069638],[6.765654,-1.305995,-9.496106],[6.537434,4.837644,4.241799],[-1.518836,-2.445937,9.691723],[8.174718,9.438957,-4.064793],[1.671839,-5.468157,-2.811530],[-9.238992,-4.238661,6.361664],[-3.394511,3.644365,3.156187],[-8.304624,-9.269386,-1.779336]],[[9.640115,-8.418595,1.426203],[0.581039,-7.281053,8.775090],[1.372202,3.559006,-6.168625],[-7.370920,3.599166,-2.047974],[-6.339113,-9.485579,-3.222161],[-3.760413,-7.330340,-2.886510],[1.477807,7.302108,2.436704],[6.690281,-6.474287,5.966741],[4.319063,1.788175,2.897736],[7.413911,3.412059,6.008459],[7.760540,1.063650,-3.702271]],[[2.411382,0.113304,-0.343735],[-8.626734,3.102129,-7.923713],[3.561029,-1.433359,-0.786966],[3.132450,6.593743,2.885997],[-2.357304,6.622371,-7.455571],[8.521817,2.983672,-2.340518],[-4.460181,9.566528,-4.772979],[-7.301351,-2.673334,-3.107424],[-4.586690,-7.372883,-4.964814],[-3.719930,-6.313597,-7.198072],[-6.688733,6.510896,-2.747377]],[[5.334431,-0.636483,-9.914003],[-7.772593,-1.103751,6.391874],[8.512395,-9.311496,-5.881597],[0.121167,0.190276,-6.064260],[-6.007771,-0.685445,-7.045052],[-3.079336,7.574163,0.049360],[0.288513,-7.371084,-0.993363],[-7.613559,7.581768,0.044683],[-9.477274,9.258362,2.003886],[5.309746,-7.429262,8.647717],[9.464416,-2.970730,-1.507605]],[[-5.855781,0.985463,3.549973],[0.348973,5.445925,7.060468],[-6.515336,1.431782,9.697239],[0.364408,-3.802483,-1.051782],[-6.324473,8.947932,-4.564581],[-7.648614,6.239540,3.944609],[3.179721,0.994070,-9.656237],[-4.524226,-9.591658,-1.922589],[-0.344972,-8.945514,9.752443],[-7.705741,-1.617962,-5.571415],[4.930895,-2.584301,-6.284436]],[[9.063226,-6.369328,-8.251499],[0.155196,0.356106,-5.875378],[-6.702741,1.489064,1.648868],[5.857085,-4.874247,-5.921934],[0.064812,-4.005440,-0.674889],[8.363806,-2.938701,-2.743508],[-3.999210,6.564099,4.319180],[6.711913,-8.508861,4.854304],[6.223849,8.579610,-8.767019],[-1.049146,0.870412,4.461274],[4.180342,-8.178368,-9.166811]],[[-4.319762,-6.845838,-5.504142],[7.073933,8.198498,-8.844156],[-7.971712,-4.232876,-2.686317],[6.740083,-4.147296,1.661054],[-5.318824,-9.068370,-2.231291],[-9.149890,-6.487319,2.382412],[-2.619963,-8.903381,-8.298085],[-2.092106,8.066588,0.667218],[-4.882280,-1.302606,1.478562],[-9.970149,0.697222,-6.640778],[-6.286122,-1.287857,-8.332876]],[[8.700502,1.307184,-0.640218],[0.223117,-0.067210,3.337511],[-8.380515,-9.206416,-9.571326],[-9.912188,1.027459,-2.161323],[7.262941,-6.947334,4.998531],[6.313821,-8.003792,-8.442075],[3.288652,3.621047,-0.055521],[9.693797,-6.232544,-4.696096],[9.396895,-5.476741,-1.263915],[4.429016,5.394801,8.472288],[-7.344244,7.625405,0.615446]],[[1.261313,7.380409,-6.051623],[-3.929262,-9.506685,7.715109],[3.239932,0.051669,-8.131743],[-8.934328,-3.217082,5.688445],[-5.949655,-9.923729,-0.921870],[-3.501292,-4.128872,1.304147],[4.740405,-6.728431,-6.203651],[-7.725050,6.308041,3.589213],[1.414088,4.165717,5.353512],[-1.543560,-9.811626,-8.319259],[-9.922657,-4.917883,-1.148707]],[[-9.089520,5.018486,-8.826168],[-8.110646,-5.196858,-8.379089],[0.664432,3.642929,0.321515],[-3.134661,0.981914,1.324987],[6.841798,-8.998707,-2.533196],[4.645593,-2.102500,-7.522653],[5.086041,-9.104515,-9.551519],[8.354545,-1.271751,-5.920444],[-7.806984,3.126175,9.023743],[7.130893,2.660036,-5.024803],[-6.124412,-2.244300,7.844497]],[[8.057852,0.683393,-9.787712],[2.882597,-3.928801,-6.443091],[0.578986,3.900042,-6.117823],[2.700523,2.247800,8.344076],[2.379634,-8.630746,0.812714],[-6.362184,-3.613583,-4.542935],[4.963008,-0.514556,7.031456],[-3.756155,5.127216,-4.839156],[-2.785451,5.393486,-7.965996],[4.191857,2.183083,1.334334],[5.609578,3.791195,3.088642]],[[-9.177514,1.524136,-6.489098],[-3.615156,-7.175517,-0.242949],[2.679433,-2.361304,2.268888],[-8.648323,-6.331737,-5.071906],[-6.601241,7.820393,6.417152],[8.554172,0.518083,-0.602040],[5.196779,-6.639162,2.170711],[-0.899368,8.550358,8.735420],[2.134679,-5.155116,5.223288],[3.328405,-4.286606,-0.913917],[-6.148038,-1.420753,-0.588500]],[[8.747677,5.996175,4.113384],[1.828960,7.955563,1.918851],[6.158591,-2.647508,-2.221482],[-4.853594,1.317071,8.411360],[-2.542324,5.604078,2.005404],[0.806353,-2.506427,5.586358],[5.165181,0.972408,6.393958],[-9.170462,-1.860254,-5.185353],[-8.398817,-8.807497,-1.204580],[0.509300,7.195103,9.002148],[2.947758,-4.282201,7.326486]]], dtype = "float32")#candidate|7915|(14, 11, 3)|const|float32
bop_7916 = relay.floor_divide(var_7914.astype('float32'), relay.reshape(const_7915.astype('float32'), relay.shape_of(var_7914))) # shape=(14, 11, 3)
bop_7926 = relay.logical_and(const_7915.astype('bool'), relay.reshape(var_7914.astype('bool'), relay.shape_of(const_7915))) # shape=(14, 11, 3)
func_7861_call = mod.get_global_var('func_7861')
func_7863_call = mutated_mod.get_global_var('func_7863')
call_7930 = relay.TupleGetItem(func_7861_call(), 2)
call_7931 = relay.TupleGetItem(func_7863_call(), 2)
output = relay.Tuple([bop_7916,bop_7926,call_7930,])
output2 = relay.Tuple([bop_7916,bop_7926,call_7931,])
func_7939 = relay.Function([var_7914,], output)
mod['func_7939'] = func_7939
mod = relay.transform.InferType()(mod)
mutated_mod['func_7939'] = func_7939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7940 = relay.var("var_7940", dtype = "float32", shape = (14, 11, 3))#candidate|7940|(14, 11, 3)|var|float32
func_7939_call = mutated_mod.get_global_var('func_7939')
call_7941 = func_7939_call(var_7940)
output = call_7941
func_7942 = relay.Function([var_7940], output)
mutated_mod['func_7942'] = func_7942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5180_call = mod.get_global_var('func_5180')
func_5182_call = mutated_mod.get_global_var('func_5182')
call_7944 = func_5180_call()
call_7945 = func_5180_call()
func_3331_call = mod.get_global_var('func_3331')
func_3334_call = mutated_mod.get_global_var('func_3334')
const_7951 = relay.const([[-10,-8,-3,3,7,1,3,1,-7,-4,-6,2,4,1,-9,-6,1,-4,-2,-4,-4,-8,9,5,-6,4,9,4,-4,-3,-1,4,4,6,2,-4,-7,5,2,1,-10,9,-2,3,9,9,-5,-2,10,3,-2,-10,9,-4,-7,8,1,-7,10,9,3,9,-10,7,9,-1,6,9,-7,10,-9,9,6,2,-5,-7,-8,6,-5,7,-2,-6,-10,-8,7,8,6,5,3,-10,-6,-7,-1,-2,8,4,-8,2,5,-2,6,8,7,-6,1,-1,2,9,4,2,1,-4,6,6,6,4,7,-5,-7,9,4,-3,9,-10,5,5,-9,4,6,7,-7,-3,-4,3,7,7,1,10,6,-4,-5,9,-9,9,5,5,-4,-8,-7,10,-2,-7,-1,-4,-10,-7,7,-9,1,2,-2,7,7,6,6,-8,-5,1,4,2,-4,-9,7,7,-3,-1,8,-1,-3,9,-3,8],[-1,-1,-4,9,3,9,5,5,7,-1,6,-1,8,-2,8,6,-9,-6,-3,-3,4,-4,9,5,9,-2,7,-6,3,6,8,-3,-3,3,4,10,-9,-5,6,-2,-7,10,8,-10,5,-4,-10,-3,-4,6,-2,7,3,-10,3,3,-8,5,2,9,-1,-2,10,3,10,5,6,-5,-4,-7,7,-7,5,-1,7,-2,-4,9,-10,9,2,5,-4,6,-3,6,-4,-7,5,4,7,-10,2,5,2,3,-8,3,-7,1,-3,-4,-10,-6,6,-8,-7,5,10,1,-4,7,1,5,10,-1,-4,1,-3,-2,-6,5,-1,-3,8,6,-6,-3,4,8,5,8,-4,5,8,8,8,-9,2,1,-4,4,-1,-1,-7,10,8,-5,-8,10,8,2,-1,-8,-1,-5,-7,6,-7,2,6,10,-9,-6,5,-3,-4,-2,3,2,-8,-8,-7,2,3,-2,5,5,-6,1,7,-6],[-8,-9,-8,-5,-7,3,1,-10,1,-5,3,-10,-3,10,-4,2,-3,-3,2,-9,-4,5,-10,-2,-8,-9,9,7,10,-1,-2,-6,-5,-9,-10,-8,-3,-2,9,-7,-10,-7,6,8,-1,-10,-3,-1,-9,5,-9,6,7,8,-3,-2,-1,-2,3,3,-1,9,1,-2,10,-2,2,2,7,7,5,4,10,-3,8,-7,10,2,-5,4,4,4,-5,7,-8,-3,-6,1,3,-9,1,-9,-1,2,9,-1,3,1,2,1,4,5,3,6,-1,8,-10,-2,-9,-8,2,3,5,-3,-4,6,-10,-10,8,-10,2,10,-6,4,7,-6,-1,2,3,-10,-2,6,1,5,-3,-6,-5,-8,7,6,4,-2,-9,9,-2,10,9,-5,4,-8,7,4,10,-2,-4,4,-10,-2,-3,-2,4,-8,-8,3,-5,10,9,-3,-6,10,3,9,-10,-2,-6,9,-4,2,2,-5,10,-8],[-9,-8,5,-8,-1,10,10,4,6,-3,-2,4,4,-10,7,3,-8,5,-10,10,8,1,-3,3,10,-2,2,-4,-7,1,2,-2,-5,-2,9,-6,-5,4,-4,9,-4,-6,-9,3,7,-4,7,7,-4,-9,-4,-10,4,9,3,-3,1,1,2,-9,-9,-5,-10,2,-5,5,-8,10,-8,-1,9,8,-5,-3,5,3,-5,-2,-3,9,7,-9,8,8,-8,-9,-5,10,-5,5,5,6,6,-6,-2,9,10,6,-5,6,-3,2,-3,8,-5,10,10,-1,3,7,4,-9,-2,-2,7,-2,-6,-10,9,9,-8,-6,-4,-7,4,-6,-8,3,-8,-8,-7,-7,9,2,-3,3,-9,-2,-6,9,2,10,-10,1,10,-5,4,-9,-9,-10,-1,6,4,2,6,1,9,-10,-6,7,4,2,1,-10,4,3,-5,-5,6,8,-1,1,-10,-6,-2,10,-2,4,6,6,-6,-7],[-7,-9,-2,-4,-3,2,6,10,1,-5,-4,8,5,-4,-2,-9,5,-1,-4,-9,-10,10,9,3,10,4,-9,6,6,-2,-10,9,-10,4,5,-10,-4,-8,-10,4,-1,6,3,-3,-3,-9,-9,-10,-7,2,8,7,-4,-7,-10,-6,1,2,-5,3,1,3,-10,-8,7,-1,3,9,4,2,10,4,2,-5,10,-5,2,10,4,1,9,-8,-9,-10,6,-7,-9,-8,-5,-8,-3,-6,4,8,-4,-9,10,-5,-6,-6,-6,9,-1,8,1,1,-10,8,-2,2,-5,1,8,-8,1,-9,4,4,-4,-1,8,-9,-8,-2,5,-8,-7,-8,5,1,10,2,-7,-1,-9,-8,-6,-7,7,-9,-5,5,-6,-7,10,6,8,-8,-6,-8,3,2,-4,-8,-8,1,1,-5,8,-7,-10,10,3,-4,7,2,7,-1,-4,-10,-3,-8,-9,-3,-5,-7,3,4,5,5,-8,-4],[-2,6,4,-10,6,-3,-1,4,-7,2,10,8,-1,-1,-9,-6,10,6,-5,-2,6,-8,4,-2,4,-2,9,-2,-2,-1,-8,1,8,-3,-8,6,2,9,-7,-6,-9,7,-10,-10,4,3,-8,-9,6,9,-8,-7,10,-6,-9,10,-3,-5,8,5,-7,-3,7,-1,-5,-8,-7,3,1,6,4,-9,5,-1,-9,6,-7,3,4,-8,8,3,-8,-5,-8,10,-9,10,-3,10,7,10,-6,9,-8,-10,-4,-2,-9,-3,9,8,2,-3,-9,9,-8,2,-3,-5,-2,9,-8,-10,9,-4,7,-6,10,-8,-4,-6,7,10,3,-4,2,10,-4,5,-4,-4,10,1,-1,2,-5,8,8,-5,3,3,3,-5,4,2,10,-8,-8,-2,-8,-4,5,-9,10,-4,-3,10,10,5,-7,9,-5,-8,8,1,6,-10,-7,-4,5,2,4,-6,-7,-8,9,2,6,8,9,9],[3,8,10,-9,-9,3,-2,8,9,6,5,6,5,5,-3,3,4,8,-3,-9,5,-6,2,-8,1,-10,9,8,-10,-2,-7,-1,-4,7,3,10,9,-8,-1,3,-10,8,1,-7,-9,5,2,9,2,-3,-3,4,-10,-4,-9,-1,-9,10,7,10,4,3,1,2,-1,8,-10,7,-5,1,7,-2,-2,-8,-8,6,4,-10,5,-8,-10,10,9,2,-10,7,-4,6,1,-7,-2,3,-6,3,-6,8,7,6,7,1,10,5,-7,3,4,-9,5,-4,-6,2,10,-9,-6,-5,4,10,-4,-9,-7,10,-2,-10,10,8,3,-9,-10,1,5,10,-2,3,-7,-8,5,-6,7,-6,1,5,5,-10,4,2,-7,-1,3,6,8,-4,4,-4,7,-9,5,6,-2,7,-6,-7,3,4,4,6,8,7,-2,-4,-2,-1,9,-8,-4,8,6,-4,5,-5,-2,5,2,1],[-4,7,9,2,3,-10,-5,-8,-6,-1,2,4,-8,-3,10,8,-8,9,-1,7,10,-3,-6,7,-3,4,6,-9,-6,7,-6,-1,10,-2,-10,-4,-6,5,-10,-5,1,-10,7,3,2,3,-5,-2,6,-5,-5,-7,8,3,6,-10,-7,-6,-10,2,-9,9,9,8,-7,2,-1,-3,2,-6,-5,-7,-7,-9,-10,-10,-5,-2,10,10,2,-1,4,10,3,-6,2,-1,6,7,-2,-4,6,1,-5,-5,-4,8,2,6,5,4,-3,8,6,5,4,4,5,-6,-8,-7,-9,2,6,9,-10,-1,-9,-2,8,-4,9,2,5,6,1,10,2,-5,2,2,-6,-4,-3,1,-8,-4,3,2,-6,-5,-6,8,9,-6,9,4,10,2,6,7,-6,-2,-8,1,3,-10,-3,6,-2,-4,2,-6,-5,8,-2,7,7,-9,2,-9,-7,7,-5,-3,-7,10,4,4,6,3],[8,-6,-9,-1,8,-7,7,5,7,1,-5,-5,-8,-10,-8,4,3,2,6,3,1,9,6,-2,-1,8,5,-7,-10,-9,2,-6,-5,8,-2,-5,5,-3,-9,-5,-7,8,-6,-6,6,7,-9,4,3,-5,-5,2,-6,2,-1,8,9,1,-3,-2,-10,-6,1,-5,3,9,-2,-9,-7,4,7,-5,7,10,1,-8,10,-2,-3,-5,-6,-4,7,-7,-4,10,4,-6,9,3,-9,-3,-5,9,-3,-4,-9,9,2,10,-10,7,-6,-7,2,-7,8,-9,-6,-1,-3,9,-5,-9,6,-5,8,10,-9,-8,-6,-2,-4,7,9,6,5,5,-4,9,2,6,-7,3,-3,7,-8,4,-9,-10,1,2,3,-7,2,7,-9,-5,9,-4,-10,2,7,-10,8,-7,-7,-8,6,9,1,-1,9,9,-5,10,2,-7,-9,7,8,10,-1,-8,-2,-5,1,5,6,-7,7,-8],[1,-1,-2,-2,2,-6,8,2,-8,-5,4,10,6,-1,-7,5,6,-10,2,-9,-4,9,-10,6,-9,9,-2,3,6,-2,-7,-1,-3,-1,5,-1,-8,2,1,-6,-8,-4,-3,10,-3,10,-1,2,2,-9,7,7,-10,1,-7,-4,1,-5,8,-4,10,-10,-5,-3,8,-5,1,10,10,-7,-10,4,-2,6,6,1,-3,5,5,-6,-1,8,4,-5,1,5,-6,3,-8,6,-8,-8,-7,-9,-10,-5,-8,4,3,10,3,7,2,7,-8,2,1,-7,2,3,2,4,3,6,7,-3,-9,4,-10,-1,-6,-6,-4,9,2,-9,-10,-6,1,10,-8,-2,3,10,7,-4,8,-3,-7,-8,4,5,10,-8,3,-1,-1,10,9,9,-5,10,-7,6,5,4,3,5,1,6,-1,7,-2,-8,-8,8,4,-7,-2,6,8,9,9,5,-5,-6,-8,10,9,-10,9,-2],[-5,-5,-3,6,-10,3,7,1,-10,10,-9,7,-10,-7,-4,-1,8,-8,6,-2,-9,10,-6,-9,10,-4,2,9,8,-3,2,5,-2,1,-9,6,2,3,9,-4,-5,-7,10,1,9,4,9,-3,4,-1,-9,-10,-5,8,-7,2,-1,-9,5,8,-5,7,-2,7,4,-9,-6,-3,2,-4,4,-10,-7,3,-10,-9,-3,-1,9,-1,7,-6,-8,4,2,8,-8,-10,-9,8,-6,-4,-3,6,-4,-5,-6,4,1,4,9,-9,2,1,-4,1,-4,-1,-4,9,3,-1,-6,-4,4,-10,2,10,-1,-7,10,7,5,-2,-4,-6,-4,5,-1,-7,-9,-10,8,-6,8,6,-1,1,10,2,-4,-10,-3,-10,-5,1,-6,6,-10,-7,-6,-6,5,-3,-3,-10,3,-7,4,-3,6,3,-5,-8,-3,-3,7,6,-1,8,3,-2,7,-3,9,-9,1,7,-3,3,9,5]], dtype = "int32")#candidate|7951|(11, 182)|const|int32
call_7950 = relay.TupleGetItem(func_3331_call(relay.reshape(const_7951.astype('int32'), [2002,])), 2)
call_7952 = relay.TupleGetItem(func_3334_call(relay.reshape(const_7951.astype('int32'), [2002,])), 2)
bop_7957 = relay.logical_or(const_7951.astype('bool'), relay.reshape(call_7950.astype('bool'), relay.shape_of(const_7951))) # shape=(11, 182)
bop_7960 = relay.logical_or(const_7951.astype('bool'), relay.reshape(call_7952.astype('bool'), relay.shape_of(const_7951))) # shape=(11, 182)
func_3209_call = mod.get_global_var('func_3209')
func_3210_call = mutated_mod.get_global_var('func_3210')
call_7968 = relay.TupleGetItem(func_3209_call(), 1)
call_7969 = relay.TupleGetItem(func_3210_call(), 1)
output = relay.Tuple([call_7944,bop_7957,call_7968,])
output2 = relay.Tuple([call_7945,bop_7960,call_7969,])
func_7975 = relay.Function([], output)
mod['func_7975'] = func_7975
mod = relay.transform.InferType()(mod)
output = func_7975()
func_7976 = relay.Function([], output)
mutated_mod['func_7976'] = func_7976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5445_call = mod.get_global_var('func_5445')
func_5446_call = mutated_mod.get_global_var('func_5446')
call_7980 = func_5445_call()
call_7981 = func_5445_call()
output = call_7980
output2 = call_7981
func_7983 = relay.Function([], output)
mod['func_7983'] = func_7983
mod = relay.transform.InferType()(mod)
mutated_mod['func_7983'] = func_7983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7983_call = mutated_mod.get_global_var('func_7983')
call_7984 = func_7983_call()
output = call_7984
func_7985 = relay.Function([], output)
mutated_mod['func_7985'] = func_7985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mod.get_global_var('func_6140')
func_6141_call = mutated_mod.get_global_var('func_6141')
call_7989 = relay.TupleGetItem(func_6140_call(), 0)
call_7990 = relay.TupleGetItem(func_6141_call(), 0)
output = relay.Tuple([call_7989,])
output2 = relay.Tuple([call_7990,])
func_7996 = relay.Function([], output)
mod['func_7996'] = func_7996
mod = relay.transform.InferType()(mod)
mutated_mod['func_7996'] = func_7996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7996_call = mutated_mod.get_global_var('func_7996')
call_7997 = func_7996_call()
output = call_7997
func_7998 = relay.Function([], output)
mutated_mod['func_7998'] = func_7998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_8059 = relay.TupleGetItem(func_2633_call(), 0)
call_8060 = relay.TupleGetItem(func_2634_call(), 0)
func_581_call = mod.get_global_var('func_581')
func_584_call = mutated_mod.get_global_var('func_584')
var_8063 = relay.var("var_8063", dtype = "uint32", shape = (48,))#candidate|8063|(48,)|var|uint32
call_8062 = relay.TupleGetItem(func_581_call(relay.reshape(var_8063.astype('uint32'), [2, 3, 8]), relay.reshape(var_8063.astype('uint32'), [2, 3, 8]), ), 0)
call_8064 = relay.TupleGetItem(func_584_call(relay.reshape(var_8063.astype('uint32'), [2, 3, 8]), relay.reshape(var_8063.astype('uint32'), [2, 3, 8]), ), 0)
output = relay.Tuple([call_8059,call_8062,var_8063,])
output2 = relay.Tuple([call_8060,call_8064,var_8063,])
func_8065 = relay.Function([var_8063,], output)
mod['func_8065'] = func_8065
mod = relay.transform.InferType()(mod)
mutated_mod['func_8065'] = func_8065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8066 = relay.var("var_8066", dtype = "uint32", shape = (48,))#candidate|8066|(48,)|var|uint32
func_8065_call = mutated_mod.get_global_var('func_8065')
call_8067 = func_8065_call(var_8066)
output = call_8067
func_8068 = relay.Function([var_8066], output)
mutated_mod['func_8068'] = func_8068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6118_call = mod.get_global_var('func_6118')
func_6119_call = mutated_mod.get_global_var('func_6119')
call_8092 = relay.TupleGetItem(func_6118_call(), 1)
call_8093 = relay.TupleGetItem(func_6119_call(), 1)
output = relay.Tuple([call_8092,])
output2 = relay.Tuple([call_8093,])
func_8101 = relay.Function([], output)
mod['func_8101'] = func_8101
mod = relay.transform.InferType()(mod)
output = func_8101()
func_8102 = relay.Function([], output)
mutated_mod['func_8102'] = func_8102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8170 = relay.var("var_8170", dtype = "int64", shape = (12, 6, 5))#candidate|8170|(12, 6, 5)|var|int64
const_8171 = relay.const([[[-3,-2,7,-8,-9],[8,-8,-2,-7,7],[-6,1,-6,-6,-9],[2,9,2,7,4],[10,3,-5,10,-7],[-5,9,10,-3,10]],[[1,3,-7,5,-9],[-9,5,9,-4,-1],[6,-3,4,-8,4],[-10,-9,4,-7,9],[9,5,7,-3,10],[3,-2,9,-4,4]],[[7,10,4,-4,-4],[-7,1,7,5,-1],[2,1,2,1,-10],[-3,-8,5,-6,4],[-3,3,4,-2,-7],[-6,-8,-6,-8,6]],[[1,-7,2,-2,-2],[-10,-9,7,-2,6],[1,-2,-10,9,3],[-8,-7,-5,6,1],[4,-2,-6,-10,-7],[2,10,-1,10,10]],[[7,10,-4,5,2],[7,9,3,-8,6],[9,7,9,2,8],[-5,-2,1,1,6],[-1,-1,2,-6,7],[8,-9,7,-3,-9]],[[1,-5,2,8,1],[-7,9,-3,-2,-1],[-2,-6,6,-8,2],[-9,3,7,2,-9],[3,5,3,-1,8],[5,5,-10,-5,-9]],[[6,-2,-5,-4,-8],[10,-8,1,5,-8],[8,-5,-7,1,1],[-10,1,8,3,-1],[-5,-10,9,6,-5],[-9,2,-5,6,2]],[[7,8,6,-2,-8],[-9,7,7,3,10],[-10,3,2,10,4],[-9,5,-9,-1,-9],[-5,3,-10,-7,-6],[2,-5,-7,-3,-7]],[[8,-7,1,-4,-6],[-3,-3,-2,7,-9],[6,8,-8,-10,-1],[-5,-3,1,-8,-8],[10,-3,8,-10,-7],[-9,-10,-6,-1,9]],[[-3,10,-9,-10,10],[9,-1,-4,10,-5],[3,-1,2,-3,-4],[-6,9,3,-1,-2],[2,10,6,2,10],[-4,-5,7,-4,2]],[[-3,5,6,-9,-10],[5,-4,7,3,-5],[-1,5,6,3,4],[-8,-4,10,-8,7],[2,3,-9,6,-2],[-4,-2,6,2,-9]],[[-5,-5,7,-2,-6],[6,1,6,10,3],[-2,4,7,-3,-9],[7,-7,-6,-2,1],[5,10,9,-9,5],[-2,8,-3,5,-6]]], dtype = "int64")#candidate|8171|(12, 6, 5)|const|int64
bop_8172 = relay.logical_xor(var_8170.astype('int64'), relay.reshape(const_8171.astype('int64'), relay.shape_of(var_8170))) # shape=(12, 6, 5)
output = relay.Tuple([bop_8172,])
output2 = relay.Tuple([bop_8172,])
func_8188 = relay.Function([var_8170,], output)
mod['func_8188'] = func_8188
mod = relay.transform.InferType()(mod)
mutated_mod['func_8188'] = func_8188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8189 = relay.var("var_8189", dtype = "int64", shape = (12, 6, 5))#candidate|8189|(12, 6, 5)|var|int64
func_8188_call = mutated_mod.get_global_var('func_8188')
call_8190 = func_8188_call(var_8189)
output = call_8190
func_8191 = relay.Function([var_8189], output)
mutated_mod['func_8191'] = func_8191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mod.get_global_var('func_5086')
func_5088_call = mutated_mod.get_global_var('func_5088')
call_8237 = func_5086_call()
call_8238 = func_5086_call()
func_1535_call = mod.get_global_var('func_1535')
func_1537_call = mutated_mod.get_global_var('func_1537')
var_8243 = relay.var("var_8243", dtype = "uint8", shape = (360,))#candidate|8243|(360,)|var|uint8
call_8242 = relay.TupleGetItem(func_1535_call(relay.reshape(var_8243.astype('uint8'), [2, 12, 15])), 1)
call_8244 = relay.TupleGetItem(func_1537_call(relay.reshape(var_8243.astype('uint8'), [2, 12, 15])), 1)
func_3331_call = mod.get_global_var('func_3331')
func_3334_call = mutated_mod.get_global_var('func_3334')
var_8293 = relay.var("var_8293", dtype = "int32", shape = (2002,))#candidate|8293|(2002,)|var|int32
call_8292 = relay.TupleGetItem(func_3331_call(relay.reshape(var_8293.astype('int32'), [2002,])), 4)
call_8294 = relay.TupleGetItem(func_3334_call(relay.reshape(var_8293.astype('int32'), [2002,])), 4)
func_5843_call = mod.get_global_var('func_5843')
func_5844_call = mutated_mod.get_global_var('func_5844')
call_8311 = relay.TupleGetItem(func_5843_call(), 1)
call_8312 = relay.TupleGetItem(func_5844_call(), 1)
output = relay.Tuple([call_8237,call_8242,var_8243,call_8292,var_8293,call_8311,])
output2 = relay.Tuple([call_8238,call_8244,var_8243,call_8294,var_8293,call_8312,])
func_8318 = relay.Function([var_8243,var_8293,], output)
mod['func_8318'] = func_8318
mod = relay.transform.InferType()(mod)
mutated_mod['func_8318'] = func_8318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8318_call = mutated_mod.get_global_var('func_8318')
var_8320 = relay.var("var_8320", dtype = "uint8", shape = (360,))#candidate|8320|(360,)|var|uint8
var_8321 = relay.var("var_8321", dtype = "int32", shape = (2002,))#candidate|8321|(2002,)|var|int32
call_8319 = func_8318_call(var_8320,var_8321,)
output = call_8319
func_8322 = relay.Function([var_8320,var_8321,], output)
mutated_mod['func_8322'] = func_8322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8354 = relay.var("var_8354", dtype = "uint64", shape = (11, 13, 15))#candidate|8354|(11, 13, 15)|var|uint64
var_8355 = relay.var("var_8355", dtype = "uint64", shape = (11, 13, 15))#candidate|8355|(11, 13, 15)|var|uint64
bop_8356 = relay.multiply(var_8354.astype('uint64'), relay.reshape(var_8355.astype('uint64'), relay.shape_of(var_8354))) # shape=(11, 13, 15)
var_8360 = relay.var("var_8360", dtype = "uint64", shape = (11, 13, 15))#candidate|8360|(11, 13, 15)|var|uint64
bop_8361 = relay.not_equal(bop_8356.astype('bool'), relay.reshape(var_8360.astype('bool'), relay.shape_of(bop_8356))) # shape=(11, 13, 15)
uop_8369 = relay.rsqrt(bop_8361.astype('float64')) # shape=(11, 13, 15)
output = uop_8369
output2 = uop_8369
func_8390 = relay.Function([var_8354,var_8355,var_8360,], output)
mod['func_8390'] = func_8390
mod = relay.transform.InferType()(mod)
mutated_mod['func_8390'] = func_8390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8390_call = mutated_mod.get_global_var('func_8390')
var_8392 = relay.var("var_8392", dtype = "uint64", shape = (11, 13, 15))#candidate|8392|(11, 13, 15)|var|uint64
var_8393 = relay.var("var_8393", dtype = "uint64", shape = (11, 13, 15))#candidate|8393|(11, 13, 15)|var|uint64
var_8394 = relay.var("var_8394", dtype = "uint64", shape = (11, 13, 15))#candidate|8394|(11, 13, 15)|var|uint64
call_8391 = func_8390_call(var_8392,var_8393,var_8394,)
output = call_8391
func_8395 = relay.Function([var_8392,var_8393,var_8394,], output)
mutated_mod['func_8395'] = func_8395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4778_call = mod.get_global_var('func_4778')
func_4780_call = mutated_mod.get_global_var('func_4780')
call_8397 = relay.TupleGetItem(func_4778_call(), 0)
call_8398 = relay.TupleGetItem(func_4780_call(), 0)
func_6755_call = mod.get_global_var('func_6755')
func_6758_call = mutated_mod.get_global_var('func_6758')
const_8408 = relay.const([8.504157,7.992630,-3.089910,-2.612763,-6.009288,-2.463359,5.375216,9.413701,2.255864,-6.348361,-3.466744,-2.286633,8.588975,3.218197,-3.091109,0.884478,4.542619,8.878214,4.700640,-1.342864,-6.720586,-3.579684,6.110054,7.229987,-5.180952,-1.519321,7.302195,-0.110477,3.789673,3.865959,2.226798,5.185475,3.326191,-1.760971,-5.082479,-7.214135,-0.873359,-2.817698,7.094953,-7.490919,-9.519116,-6.165207,5.702910,-4.233822,-4.986718,1.153319,-8.896940,0.105949,1.704461,-9.319619,-5.698577,-7.128103,3.518470,-5.420958,-4.337912,-6.832808,2.784106,-1.581779,-0.008126,4.880494,4.595230,-7.984968,-3.998889,2.705209,5.634065,7.765184,9.322729,-7.268965,4.549733,3.820731,9.559625,-8.542247,-1.638776,-0.802880,0.934020,-4.670447,-4.754572,3.728703,-4.966447,-1.850701,-2.765130,9.369638,-4.970180,5.728729,-6.629475,6.618863,-4.522696,-2.600869,3.578057,9.774300,7.376489,2.139978,-9.178143,-3.968692,8.823869,9.232309,-5.808005,1.028603,-9.613205,-1.440471,1.208856,4.835273,2.572913,5.850468,-2.130727,-3.979408,-1.213872,0.813309,-1.047922,2.203341,-4.515332,0.937074,1.603022,9.690709,6.508903,-4.101709,-1.843625,1.357677,4.095782,-0.794718,1.218788,4.531298,-8.409897,6.317773,-1.267787,-1.998669,2.219090,-7.742032,4.730155,-6.557009,9.546474,8.559978,-5.786557,-1.097367,3.071647,7.472624,1.419773,-7.007327,8.462334,-0.442632,-3.916533,4.598426,-9.772382,-9.285949,3.481373,7.505046,0.486622,-5.772737,0.451621,-6.715205,7.688019,9.176313,-9.851723,-3.952888,7.588554,-1.048696,-4.150260,8.137910,0.856710,-1.533613,9.969950,4.875343,-3.748671,-5.693739,-2.499939,2.697644,5.652839,-2.025686,-8.465852,4.465039,8.902741,-8.057697,6.621433,3.383895,4.401776,-8.926717,5.554680,-3.709451,4.414051,8.235570,5.575413,-3.037230,8.775763,-6.769385,0.103612,-8.991442,5.557056,-1.863180,-5.304564,6.857874,0.708398,-9.692225,-7.523702,2.849678,-8.117472,3.479925,2.916556,-0.352104,7.824641,-3.581075,-7.852555,5.616246,2.855318,2.916991,3.682674,-8.194834,-1.982829,4.432386,4.158454,-1.458329,8.711734,2.856875,2.024100,-1.200673,-0.996342,-0.337786,3.312928,9.764715,1.191321,-4.088344,7.541767,-2.493657,-5.988064,-6.673194,-1.727567,3.579668,8.469953,-6.941318,-6.186925,0.102530,4.445575,5.979865,3.007293,-9.464652,1.750142,-4.586898,6.164057,-2.330988,-3.023278,7.401769,-5.787736,9.639064,5.313545,-6.528392,-0.982538,-4.621483,3.038451,-6.837694,-6.619977,-8.878349,8.302473,7.737675,4.346588,-7.496083,-9.806939,-3.549377,-6.210385,-4.851878,3.734653,7.640348,-3.498342,5.993342,-9.914950,1.806485,-5.193717,-2.697386,-7.817042,-5.702311,-5.414261,3.364764,-7.160070,5.141685,2.263320,-0.195509,-6.023673,-7.461843,-2.118677,7.211855,7.637993,2.970447,-9.742619,-8.164935,9.845610,-0.093781,5.071143,1.463817,1.951140,7.440786,-4.869484,6.834577,5.644668,-8.883641,9.516317,-5.361469,-5.585967,5.066249,-4.129824,3.672371,-1.148108,8.522360,5.855137,-4.585492,4.694881,-6.653896,4.796225,-4.285302,2.008413,-0.270269,-0.518334,-4.609756,9.614737,4.062692,6.119232,4.617757,-8.437486,7.349850,9.640853,-6.412836,3.907542,3.440505,-7.405813,-0.272107,-9.093237,1.666480,1.601281,4.065788,9.969263,-0.083847,0.062670,-8.389841,-0.318220,5.890445,1.906201,-5.361145,-2.267229,-2.802966,-4.634423,6.619709,1.073203,2.054750,-4.183216,9.687111,-3.422664,-1.033224,-0.723516,2.072373,-9.498753,-7.951123,3.883583,1.150803,-3.899725,-6.987439,-1.747608,7.849550,-6.237938,-9.916929,1.993697,-3.879650,-4.233741,3.837308,-0.641978,9.205079,-3.623346,-6.050652,2.397199,4.642049,9.032544,-4.568582,5.746019,-0.395536,-8.899152,-3.290964,-9.036438,0.979643,1.312332,7.970549,-2.205911,6.765490,7.546893,-8.382470,8.592236,-0.120937,4.051246,-1.262699,1.807439,3.072813,4.914499,2.796518,-9.474537,-2.924873,-4.020753,9.317949,2.461333,6.785585,5.010878,8.419097,4.221057,5.413172,-3.243667,-2.596937,-9.711913,7.910286,1.210666,-8.550539,-3.921304,-9.010997,-1.236358,0.639001,-0.113071,-9.218357,-4.286770,-7.491601,-6.792135,-4.835160,5.218218,-4.309287,-3.028042,6.377949,-2.955813,-2.289035,9.700353,5.385048,-3.982298,4.867737,7.512765,-1.038516,2.370246,-0.986361,4.791256,-3.781127,9.727275,-8.275895,-4.482189,8.743744,5.216919,0.941224,-5.139874,0.964048,3.245794,5.113591,-2.739124,-0.406023,-3.584629,6.250427,-9.668269,-1.487928,-5.185500,9.296112,7.532182,-8.238062,-5.085195,8.425695,-7.330860,-1.161137,7.371606,5.608271,6.487471,8.081316,-3.904858,6.080906,-7.002123,-4.866495,3.214421,1.835298,-7.514151,5.445849,-0.438287,-2.285207,5.562290,-9.991497,-3.513898,0.880871,-2.398008,-0.224774,7.805138,5.047457,6.670874,7.043880,4.780069,2.854476,-1.270861,5.592454,2.806514,7.594594,-1.939006,3.465351,8.198360,-9.654927,1.991826,-5.895565,5.458258,-4.066438,6.022518,1.543156,2.769011,6.435868,2.843643,-5.188622,-1.844349,-8.079797,3.443053,3.350351,-6.154388,-5.206369,-1.941018,-6.963420,-7.004182,0.046281,-3.472603,0.612274,7.258772,1.714062,1.032150,-1.326643,-8.687424,-9.177672,-6.152020,-7.614332,5.948501,8.571186,-5.502937,1.163175,-5.738806,-1.545671,3.515455,-4.528052,-0.484851,-2.730187,0.037349,0.566769,4.186226,-2.393407,-7.050539,-8.948255,3.080122,3.106747,4.868237,7.540498,3.082355,8.267920,1.025855,-1.400572,5.251863,5.977872,6.004688,-3.747931,-8.398382,-4.698302,-8.351877,-5.353635,-5.066872,0.096668,7.309536,-7.026776,-0.372052,1.836153,8.899174,-3.578570,-0.619957,-2.488312,-8.419337,-7.831624,8.578974,4.098742,3.365860,8.905419,-5.661065,-1.523595,2.289093,-8.784078,-5.552223,3.122394,4.129483,-2.243859,9.620620,0.470057,-4.175345,-3.932989,2.927693,7.428409,-6.527080,-7.254995,2.832573,-9.695967,0.532479,-8.872167,-1.414781,-1.067920,0.487109,-4.444770,7.616524,1.855205,3.213265,5.720011,9.015049,-1.964890,0.702342,-1.830127,5.154458,-1.973952,-4.692256,-9.300862,-7.192652,-0.236646,2.146894,8.132484,1.623844,-2.823434,-7.250075,6.478927,-9.480508,7.767941,-9.423904,-8.440565,-6.068850,2.596216,-5.542105,-9.106333,-2.355610,-0.802396,8.273998,-6.640967,-7.995575,3.551890,-6.721999,3.016961,-0.395752,-3.255971,-8.045229,-1.332419,3.249605,3.638184,1.908782,3.846111,1.130624,-2.060567,5.495240,0.131562,3.951974,-5.342270,7.643319,0.785189,1.411235,-9.306220,-5.538380,-5.254545,-5.422987,3.247197,6.955892,8.641935,5.081805,9.922358,-6.524710,-5.954551,-4.513514,5.854089,-0.869846,2.519283,4.289572,-0.710464,5.263754,4.341271,-4.147735,8.007807,5.966148,-2.270134,-6.579954,7.093436,-6.315871,2.638275,6.209928,-3.669373,8.968854,7.054125,-8.512278,-5.063206,-1.658032,9.430944,1.542244,1.420990,-6.954764,4.720171,6.597911,7.795775,-3.279677,-1.523800,-1.281495,-8.719568,8.966175,-1.518054,9.613822,7.221765,-3.946178,-0.590988,5.658079,8.337261,-4.334347,1.462053,8.022103,4.947965,8.946768,2.176211,7.034912,1.064968,3.688164,-5.442880,-5.792593,6.581874,-5.227835,-0.285743,2.518655,7.573101,-7.553489,9.199059,-3.273370,-1.438914,6.802539,1.265337,7.293762,2.587826,-5.336614,0.280729,3.906109,8.424217,-9.057158,6.090399,6.473103,2.602475,3.169599,-1.304740,-1.915806,2.838358,-3.438036,-8.053010,8.306119,4.561374,4.301345,6.346274,9.136384,-4.777371,-5.098959,7.322634,2.848996,-5.869990,2.352737,-7.904219,7.979744,8.903346,-9.039508,9.317553,4.229354,9.553920,5.347854,6.201477,1.756185,-2.791409,-3.651313,-4.888940,3.399267,-6.210892,9.412003,-2.715665,9.509198,-4.468240,9.241478,8.590808,-6.359787,2.355518,4.472628,-9.052649,-9.280648,0.822011,-4.950200,-1.168497,-5.494105,5.165188,8.710537,-9.017874,5.563253,-8.654594,-9.445259,-3.793123,-5.311575,-9.459980,-1.269002,0.729940,9.481870,2.805228,-1.398551,9.525820,7.612713,-7.689718,-5.775340,0.379222,7.766360,-4.650394,2.510107,0.452717,-9.524137,-6.063836,-9.119690,-6.828471,-8.865240,-9.696683,9.269587,9.046676,-5.296401,-8.950918,-4.820255,-5.568434,8.911205,0.361632,4.851211,8.559580,-4.921912,0.026614,0.851223,-4.711493,2.213429,-8.009544,3.525730,7.943668,1.368908,-4.401702,9.039346,6.663227,-0.495850,-4.356326,4.075160,0.305531,9.655031,0.192075,-6.322070,-0.447113,-8.412511,9.584032,-4.462092,6.080580,-0.700393,0.948326,-3.805913,-1.519070,7.116052,5.596948,-6.312074,-2.885860,3.694780,-2.147689,2.155174,2.308580,0.135997,7.189610,-3.542983,2.248018,1.727539,-9.798698,-0.728447,-9.103209,9.005726,-3.554984,-2.641292,1.456621,-3.224038,-7.661462,-3.435359,5.513344,-6.038643,0.553118,5.558518,3.961009,4.756279,5.680888,-6.791852,1.212278,3.192782,-6.700913,-2.086528,7.862314,0.874679,7.957218,2.445802,-4.327649,2.569758,-1.763641,-3.363760,9.465324,-5.659719,3.816894,-8.943653,-5.087943,1.783866,-6.908703,1.934436,-2.813420,4.143701,-2.518630,0.737417,-2.822503,2.655528,5.433790,-4.552374,1.296893,1.957185,2.805538,-3.731997,3.526607,-4.853128,5.224502,5.971635,9.453208,9.102573,-5.107774,-9.135096,-4.739341,0.750396,0.473605,-5.547700,-2.303686,-2.224415,-3.464425,-9.489245,-8.874981,8.111957,-3.968082,3.111246,0.595294,3.810358,4.429510,-1.473299,7.865829,-1.936809,1.406993,-9.817316,-3.091429,6.149359,1.426678,3.944128,2.537543,6.606652,8.906659,3.276824,-9.861718,-0.132556,-5.325214,1.330397,7.951371,-8.092291,-9.332150,-4.644085,4.060424,5.625127,8.715686,-4.967074,0.808803,-0.341444,3.800700,7.223927,3.346047,9.455451,-4.235455,1.218761,-7.254705,-5.528887,-3.589065,-8.702294,3.301159,-3.389668,-7.532820,5.839449,2.002198,-9.746414,0.963633,-3.006865,-6.462136,-2.517113,-0.534589,-4.557822,9.965563,1.185497,9.358841,-4.683349,-1.623162,-5.383213,1.972305,-7.557477,8.575625,2.516992,0.912464,6.889118,-2.940625,-0.879260,-9.362045,0.760534,-4.947239,6.446202,-9.171411,-7.255399,4.487316,9.361764,-6.597230,5.865147,8.978590,-0.923106,-1.382096,-0.916593,6.719023,5.439669,9.842424,5.059435,3.127850,4.486420,-4.657692,-0.992431,-7.915440,1.219497,-5.810658,2.170908,9.343913,-7.164088,3.023684,-8.391650,7.655599,-5.710776,9.594758,-3.402513,4.885356,-7.527855,9.769298,7.241070,1.509775,-7.453342,7.725868,0.865468,8.818200,-0.824796,-3.138356,2.987426,-1.946826,-2.037556,-9.108757,-7.770563,-6.214949,5.927980,-7.568206,-3.386491,8.359841,8.839708,-3.552467,-0.476606,-1.772922,-8.475717,2.441951,-9.521233,-2.470796,6.802773,-8.120274,-9.806866,4.687083,-6.783330,-9.488360,3.199947,-7.538694,-3.787856,4.253415,-9.907791,8.406674,-4.379652,1.718228,-9.641751,9.751914,-3.287673,1.190053,-3.211051,-1.685720,-9.443501,0.903014,1.922641,-0.374422,-5.861872,-9.324239,6.483419,-7.852536,-2.225317,2.422884,0.950647,2.457019,-3.497271,-6.359008,2.819455,5.816176,1.823818,6.685344,-0.048687,-5.903768,3.587812,-3.458929,-3.361541,-3.711988,-2.055260,8.381803,-5.479712,7.665516,7.507493,4.377524,-6.718651,5.972175,-7.163188,-8.752289,-9.555850,2.714962,5.766687,7.445434,-3.489832,6.791778,7.438580,-7.719104,4.211167,-5.561277,4.723247,7.597600,-2.268260,6.699187,7.932356,-8.178339,-7.431606,4.221116,2.043407,0.066525,-0.041381,-5.351616,6.354891,9.368413,-7.068094,-9.700752,6.963365,9.696582,-1.507175,-3.992400,2.480153,9.448661,2.081216,3.348841,9.008931,-2.051568,3.727985,3.222571,-3.339054,3.958779,-0.406933,-3.904491,8.636084,-4.924490,4.711313,7.724017,8.198125,-4.950486,4.875914,2.743038,3.007164,-7.370201,-9.759106,1.865645,-9.863302,3.976264,-2.334944,5.626209,8.878083,6.678113,-5.747952,7.871376,-6.422273,-8.484172,-0.966919,-1.743493,-3.677414,-3.472492,6.231965,0.922040,3.506062,-4.507151,-6.481520,7.223849,2.907126,-3.548223,-4.004728,9.383744,-3.217758,-2.486261,4.435822,-7.506530,-5.467646,-9.582977,-9.269908,3.568330,-7.103331,-2.275242,6.988495,1.299298,-2.682562,1.578227,3.044649,3.391104,-6.177093,-1.491494,4.966083,3.647792,-8.829695,8.426027,6.658526,-1.022484,-5.651837,8.664549,-5.683349,0.479519,-5.410312,0.145953,8.759134,4.874021,4.526143,-4.606146,-9.811457,-4.894590,1.520574,-3.662197,-8.820442,7.519156,9.343955,9.054460,2.631705,-7.815920,7.297918,0.262134,0.462035,-4.900954,9.967012,7.156788,8.959216,-7.637644,9.661600,1.978124,5.117632,-5.683093,2.709339,-4.051718,-0.896640,3.670128,1.131929,8.510647,9.738116,8.561545,-0.848226,9.628766,-7.160041,-2.918473,-1.379595,0.448319,-3.379307,-9.919923,5.213258,-4.073046,2.129692,4.669058,6.167660,4.495245,8.526099,0.613624,8.901929,5.081315,-9.462396,2.104228,6.675851,-0.730989,4.330001,-3.431444,8.942793,-7.900133,-0.183045,6.079028,-5.291700,-9.736571,5.354032,4.411283,-3.649298,-3.130566,0.712398,4.843198,4.795308,-8.755411,-1.588663,1.294947,-1.054317,1.335808,-8.648414,-2.605679,3.443057,-8.613130,-2.474264,-0.592665,-4.366876,8.920778,-6.142611,-6.171297,-8.446091,-6.348908,7.475670,-9.252301,-2.548747,-9.942953,1.468615,8.357662,-9.235094,3.110249,-4.362810,0.118652,6.123063,-1.352000,-9.818403,2.964349,9.641646,6.196901,4.857702,-4.228725,2.871229,-4.579179,9.170228,-9.700696,7.885959,-9.771580,1.384081,-9.723626,-5.057682,-9.216788,-4.185858,5.655952,-5.912994,-8.355966,1.376473,5.311469,-5.668461,8.386199,4.430968,2.268190,6.140161,-1.029959,0.803647,3.993817,8.226430,-2.709537,0.395083,-5.051106,6.001842,-3.449096,3.464154,8.193843,3.486759,-9.150414,-4.224509,-1.955297,8.469119,-2.509664,3.342322,5.374252,-0.435311,-1.091051,6.388548,3.585608,-3.435181,6.790887,6.678193,3.326787,6.077987,4.726318,7.404976,-9.850694,8.761463,7.159133,-5.026343,5.195247,5.955611,4.898510,-2.218307,8.665115,-4.577785,2.737495,6.390095,-7.783421,-8.148006,8.700369,0.866062,-0.142626,-3.305357,-0.724849,-5.050249,8.265515,5.536830,8.399954,6.312526,-2.404740,6.530303,6.650267,-2.418962,-4.580338,-5.039381,-6.474054,2.029719,-3.913976,9.901996,-2.667089,-3.078850,4.527437,-7.070000,-2.908275,9.843314,2.481199,-5.769913,2.258875,9.052651,9.481512,3.520717,1.925958,-4.221023,5.371466,-1.951263,-1.197960,7.245055,1.901983,-9.721069,-5.319689,-2.979814,-1.537064,-1.858768,-5.392913,0.146907,6.706350,4.684148,3.484681,-9.522237,0.610680,3.237932,-6.897213,4.753137,-0.286712,7.180376,7.883039,6.615921,-6.774184,-6.703970,4.220178,-2.326116,-8.907143,3.989824,5.527032,-3.299432,6.539252,-8.345809,6.570018,7.552742,8.575063,-2.124856,-3.476019,9.992611,8.828485,1.841712,5.967382,-0.272582,-1.891895,-7.343236,6.166039,-7.009558,-3.209387,-1.658603,1.398376,9.085055,-0.866833,8.751426,0.861963,7.897908,-0.672133,0.553514,-5.801514,-4.326071,-2.905295,4.067475,4.861905,-9.814037,-2.471599,5.893997,-4.800453,3.973007,-8.876663,9.431177,2.417482,3.165540,-3.877692,1.079391,-2.518522,6.440104,-6.147946,-0.932933,-7.950582,0.168737,-6.394919,-3.531269,-1.547663,4.702265,6.945346,-3.809116,-5.819391,-5.662153,2.639112,6.048700,9.248420,-6.276198,3.568722,-8.689679,1.756559,0.502445,-1.839553,-0.784469,7.129105,-5.508113,-6.685284,5.003251,-4.167544,0.564996,3.181296,3.862094,5.908459,8.708379,-4.029807,7.765583,7.544144,9.253584,-8.127142,-4.115471,-5.288496,-7.941015,-7.295723,9.032117,-4.980667,-6.142320,2.049537,-6.486516,5.922723,-5.646732,6.540375,8.760812,-7.347378,6.917858,-0.591784,-3.096864,-8.589185,5.274356,-3.169010,2.819501,-4.005930,-4.306418,7.559723,-0.266243,-5.978909,-0.845462,-5.914369,1.634381,7.823632,-6.916910,-2.006032,-1.446194,8.169462,7.092331,-8.238481,-4.437207,-3.041410,-8.594793,-9.403978,-1.610526,9.522819,-3.655047,-9.657174,-9.938323,-8.660202,5.063611,2.983166,5.213373,-1.791082,-9.047668,0.856847,2.472560,-4.916129,1.557174,-6.974766,0.721548,5.184362,-0.006690,7.776302,0.021440,6.408664,9.033654,-1.805337,5.565437,5.437957,8.951440,7.972070,4.728863,-4.553961,-0.895310,-1.712716,3.693889,5.565524,-4.244121,-6.477865,2.108420,-1.311328,3.765391,1.572281,2.214450,-0.088161,-5.661583,6.063991,3.160142,-1.353067,6.469177,-0.109219,-7.267490,-0.993800,-4.916939,-4.165546,-1.564096,-4.494659,5.129102,-0.196224,3.466225,6.149783,-8.642922,5.174088,7.587430,0.509376,-0.884406,8.957987,-4.133270,6.605976,-2.428539,-9.635654,5.007836,-6.604324,-7.751648,9.601437,-6.172287,1.823069,-0.173597,-6.239342,0.495931,-4.151348,2.033171,-3.907672,8.557670,7.110733,-0.393757,-4.540518,-2.133106,-1.426562,2.678525,-6.121287,6.849003,7.668789,-1.531908,2.270815,2.873982,-9.304823,6.592985,-4.464403,-3.596812,-0.675280,8.336275,-6.893096,-7.529830,7.611725,5.300518,6.840081,7.024319,-6.010646,-5.339166,1.792987,7.784366,5.667697,6.695769,8.919597,5.693232,-7.081904,-4.665765,-1.337606,0.580645,-8.197783,-5.089046,6.692403,-7.661235,4.430852,3.648467,1.546902,-4.224529,3.316037,-0.955340,-3.489229,6.874300,5.759857,3.075850,-0.288107,9.227867,9.571336,-8.941089,4.930227,-8.785921,5.726385,-6.276251,-4.884685,2.607721,-4.627357,-0.656896,7.739752,2.164841,9.829794,0.958073,2.267280,0.082980,-4.277859,-3.105982,-8.689969,-4.084061,-7.510798,-4.172085,-8.622576,8.766315,-8.691010,0.510291,6.627958,-5.907819,6.912983,-3.379124,-5.853730,-8.802481,7.173198,-2.769603,1.643117,0.418760,0.656383,3.478575,-2.074667,-1.696548,-0.562578,-8.987919,-5.056229,5.768927,-3.314848,3.484343,2.067706,7.498209,-2.178990,-7.668989,8.420953,6.513495,-6.030514,-6.166507,3.620526,1.124627,-1.496987,1.999087,-1.651291,-7.819715,-5.143740,4.241511,6.198156,-5.492502,-8.284751,-6.401652,7.626253,5.019796,-5.816449,-3.866585,-4.302092,4.827394,4.327464,-2.316321,0.946144,9.575878,-7.170204,6.075942,4.366604,9.195307,7.476949,9.901397,2.400107,-6.934329,-2.620127,-0.866988,-6.554827,9.330319,-4.743810,5.489800,6.532333,-2.326043,6.478728,9.986340,6.111832,-8.303564,-7.039127,5.640266,-1.976807,0.600612,-0.200243,-4.786482,-7.394942,7.917973,0.279687,-8.864234,3.504412,-5.067857,1.323042,8.540202,-0.706197,9.598628,-5.151893,-4.638459,-2.799483,1.621824,7.663820,9.842017,-2.362996,5.634374,0.353785,-8.020695,-9.566229,2.967502,-3.586903,-0.725249,-1.963355,-6.445847,5.845050,-3.353941,-7.420725,-3.825758,7.769243,1.911688,-9.759989,5.543158,6.125288,-2.526650,-0.143784,3.873536,1.077428,0.360814,3.154135,-3.741551,-9.897327,-2.225964,-8.313318,7.840132,-8.140702,3.029787,8.934102,-4.294259,-7.173897,-8.644980,-2.932275,-5.402009,2.446252,6.722631,2.721079,6.432324,-7.478870,-5.989641,1.653433,-2.888840,8.381483,-1.506130,-5.131018,2.401769,-7.106537,9.048828,0.492494,-2.140278,4.151439,0.822688,8.924767,3.995233,-4.094226,-6.590465,1.788932,8.293024,6.788322,3.337945,-5.176939,-2.461560,-8.965711,7.360495,7.435578,-8.250319,2.334547,6.894291,2.212312,0.353216,6.068274,4.134815,-3.985077,8.590300,-9.312502,-2.226714,4.881658,9.887340,-9.937975,3.832772,-0.395065,8.725482,2.548216,-0.811962,3.621318,-9.924348,-0.850643,9.085501,-8.205693,-1.256601,9.008953,7.848875,4.867592,-9.954220,3.933596,-4.330292,9.562347,7.356040,-8.125815,8.499768,0.016053,-2.718285,4.392930,9.134755,-0.080552,1.204583,-3.284706,-4.283918,1.185884,6.409654,-7.116785,0.033431,7.276362,-8.950899,-1.768306,9.820318,0.045893,5.817323,9.616916,-4.923967,-4.512153,8.895688,-1.782589,8.121803,-0.216841,-7.799938,-6.846472,6.207044,9.322252,1.124432,8.642290,3.174654,8.911004,-4.108430,4.645952,-7.216269,-6.186396,-4.904187,-7.102313,-0.813240,1.445075,2.479424,-3.401334,9.477393,4.756363,-2.298011,-8.639326,2.501993,-9.981466,-6.105619,1.495917,-7.776661,4.943595,-7.489714,-6.833798,-9.983879,-2.282355,8.506543,-3.282716,-3.485586,7.212361,6.047985,-3.228215,4.953473,-6.131045,2.514235,5.212440,8.717249,-0.486945,-6.798728,-9.652256,-8.804212,-5.924240,-4.640518,3.210854,-3.255179,9.182009,-5.296840,2.756571,-9.976687,2.974141,1.853655,9.574417,0.649532,-9.295479,-7.823309,6.385077,2.558163,-9.726049,-3.244611,-6.315331,1.146538,-4.754819,-7.838066,3.614805,5.364084,-2.823218,6.636766,0.514631,9.438325,-6.742002,5.859574,7.906122,-1.935030,-7.128627,2.090656,6.472539,-4.719448,-9.477691,9.785329,0.795576,-9.225967,1.688458,-7.057965,6.592741,7.560177,0.713116,9.759824,7.553885,7.485390,-3.321936,9.480188,5.876328,-1.986145,-7.551572,0.949443,-6.186260,8.191647,-0.192471,5.132453,3.175771,3.627886,4.659037,9.890654,-4.617781,-7.180615,7.125693,3.229981,2.637711,-6.380299,7.597863,2.466565,-9.156439,-3.023438,-1.578854,-9.372391,-2.561363,1.060321,-2.806285,-7.990011,9.118492,6.846675,-9.604499,7.261710,-7.674769,0.291199,2.785073,-5.160024,8.919070,-2.372120,-2.150041,-0.070831,5.486774,-4.935858,-9.115825,-1.994485,3.911815,0.380486,-4.435153,7.721969,-0.862261,8.339509,0.460180,6.660055,-7.717999,0.502272,-8.718912,2.680517,0.856860,6.219802,-8.587333,1.446880,-8.500606,-2.566107,6.485513,1.810251,-0.430806,2.634532,-9.396292,7.401785,7.966615,4.857087,-3.890551,4.790480,-5.263512,4.821050,-7.801510,-3.030291,0.665244,-5.535778,-2.290022,4.425123,-6.144761,6.882065,3.432468,9.303529,3.439422,0.657279,1.276600,5.527491,6.883379,-0.392689,7.976262,-7.293380,8.936158,4.296465,6.883139,5.874528,9.614343,-9.190509,5.438347,2.907345,2.655465,-8.298851,4.472607,-3.759963,-1.145099,8.330942,-9.372654,6.222556,-2.680735,3.481813,1.409886,9.439388,2.048123,0.833453,9.228365,7.490624,4.276820,8.407275,3.728315,-9.592424,-6.872164,2.752350,3.845170,0.228450,2.940207,9.092154,4.526394,-8.450475,3.883349,8.875436,-2.645872,6.560898,-4.407362,7.895009,-1.173148,3.508456,2.717239,1.944445,9.114023,-7.522746,-0.529320,3.347907,-1.956807,-3.733918,-0.672588,-2.601807,9.118373,-3.101096,-7.910929,3.708457,9.264134,3.276419,-4.702050,-7.057787,1.964490,-5.357127,-2.364437,5.573156,9.106409,-0.070520,8.741609,4.018739,-4.593377,-9.184332,1.132708,-9.742424,5.331418,1.973353,-8.317438,0.060888,-3.936244,4.992856,-2.760818,3.425828,2.336210,1.000476,-4.095949,6.292629,-4.141691,0.124164,0.120050,9.415922,9.675981,-9.988892,-6.140705,-9.715521,-9.878553,2.751642,-2.050900,-5.229244,6.471065,5.021875,-7.749882,-8.874830,-8.577493,-4.146439,2.424050,-3.396164,-8.732970,2.695434,0.947671,9.670055,1.453325,-5.943234,0.755138,7.052298,-3.190799,-8.540928,6.384027,9.234326,-9.344561,-9.131915,1.825919,6.931000,2.228830,-2.376123,-6.558454,-7.103478,1.909328,5.396010,-5.186298,8.578929,4.771963,8.511442,-9.778435,7.684894,5.641097,0.555270,-4.523481,-3.328808,0.163739,-3.866631,6.988820,9.243125,3.710128,0.277412,-4.728079,-4.913584,0.455002,-7.852076,3.512118,-2.777314,9.512671,8.990493,-6.917454,-4.591123,2.950517,0.177171,1.817878,4.338106,-1.028103,-6.958891,1.142918,-1.362300,5.861481,-8.792181,-5.146182,0.799646,-8.623222], dtype = "float32")#candidate|8408|(2310,)|const|float32
call_8407 = relay.TupleGetItem(func_6755_call(relay.reshape(const_8408.astype('float32'), [15, 11, 14])), 0)
call_8409 = relay.TupleGetItem(func_6758_call(relay.reshape(const_8408.astype('float32'), [15, 11, 14])), 0)
func_8318_call = mod.get_global_var('func_8318')
func_8322_call = mutated_mod.get_global_var('func_8322')
const_8426 = relay.const([[10,-5,1,2,4,-9,-6,-9,-4,7],[-8,1,-7,3,-4,6,-8,-4,6,10],[1,10,-8,2,-8,7,1,5,8,8],[9,-7,5,-4,9,-3,-5,-10,2,9],[10,-7,4,1,-1,6,-2,-5,-6,2],[-4,6,7,-6,-7,-10,-9,-7,8,6],[8,-9,7,-9,-4,-6,7,-2,7,5],[1,10,4,-6,9,2,-4,-8,-5,-3],[10,-9,-3,-1,-9,4,-4,3,-6,-8],[8,10,1,4,7,-6,9,3,-8,-2],[-1,-6,-3,-10,-5,3,2,-7,3,10],[-1,8,4,9,4,-7,-10,-9,-2,-1],[1,2,1,-6,-3,6,-3,-3,6,6],[-5,-6,-8,7,7,-6,-6,-2,10,-3],[4,-10,-6,5,6,3,-6,8,3,3],[3,-8,10,8,-10,6,10,3,8,7],[9,7,8,-9,-9,3,-2,5,-3,-3],[-1,8,-2,9,-1,3,-8,-5,-4,-9],[7,-8,-5,2,-3,-2,1,-6,-3,2],[-3,1,-5,-8,-3,3,1,10,4,3],[-4,-2,4,-9,-6,8,5,-1,-10,-1],[-7,2,8,1,3,-1,-10,-1,4,-3],[10,-8,-3,-7,-7,5,-5,-2,-8,-4],[9,-7,10,-5,-9,-3,-10,-5,-1,5],[1,3,-6,8,8,-6,-9,7,-2,-6],[-1,-9,1,3,8,-1,7,-6,9,-10],[8,-5,8,10,2,-10,-4,-3,4,-8],[-3,3,5,6,3,-2,-9,-10,8,-6],[4,5,-4,-5,-4,3,2,-9,3,-4],[1,-7,-2,9,9,-10,3,10,-4,8],[-8,7,-6,8,4,-8,-7,-7,-4,-8],[-4,-5,-6,6,10,9,-6,-9,-5,-2],[10,-3,-4,5,-9,-8,-5,-1,8,2],[3,7,10,-10,6,3,1,-2,-8,-3],[-1,-3,-6,9,4,-3,7,-6,9,-3],[9,8,5,7,6,-2,2,5,-2,1]], dtype = "uint8")#candidate|8426|(36, 10)|const|uint8
var_8427 = relay.var("var_8427", dtype = "int32", shape = (2002,))#candidate|8427|(2002,)|var|int32
call_8425 = relay.TupleGetItem(func_8318_call(relay.reshape(const_8426.astype('uint8'), [360,]), relay.reshape(var_8427.astype('int32'), [2002,]), ), 0)
call_8428 = relay.TupleGetItem(func_8322_call(relay.reshape(const_8426.astype('uint8'), [360,]), relay.reshape(var_8427.astype('int32'), [2002,]), ), 0)
output = relay.Tuple([call_8397,call_8407,const_8408,call_8425,const_8426,var_8427,])
output2 = relay.Tuple([call_8398,call_8409,const_8408,call_8428,const_8426,var_8427,])
func_8429 = relay.Function([var_8427,], output)
mod['func_8429'] = func_8429
mod = relay.transform.InferType()(mod)
var_8430 = relay.var("var_8430", dtype = "int32", shape = (2002,))#candidate|8430|(2002,)|var|int32
output = func_8429(var_8430)
func_8431 = relay.Function([var_8430], output)
mutated_mod['func_8431'] = func_8431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4778_call = mod.get_global_var('func_4778')
func_4780_call = mutated_mod.get_global_var('func_4780')
call_8444 = relay.TupleGetItem(func_4778_call(), 0)
call_8445 = relay.TupleGetItem(func_4780_call(), 0)
output = relay.Tuple([call_8444,])
output2 = relay.Tuple([call_8445,])
func_8448 = relay.Function([], output)
mod['func_8448'] = func_8448
mod = relay.transform.InferType()(mod)
output = func_8448()
func_8449 = relay.Function([], output)
mutated_mod['func_8449'] = func_8449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mod.get_global_var('func_3388')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_8460 = relay.TupleGetItem(func_3388_call(), 0)
call_8461 = relay.TupleGetItem(func_3390_call(), 0)
output = relay.Tuple([call_8460,])
output2 = relay.Tuple([call_8461,])
func_8462 = relay.Function([], output)
mod['func_8462'] = func_8462
mod = relay.transform.InferType()(mod)
output = func_8462()
func_8463 = relay.Function([], output)
mutated_mod['func_8463'] = func_8463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8462_call = mod.get_global_var('func_8462')
func_8463_call = mutated_mod.get_global_var('func_8463')
call_8486 = relay.TupleGetItem(func_8462_call(), 0)
call_8487 = relay.TupleGetItem(func_8463_call(), 0)
output = relay.Tuple([call_8486,])
output2 = relay.Tuple([call_8487,])
func_8488 = relay.Function([], output)
mod['func_8488'] = func_8488
mod = relay.transform.InferType()(mod)
mutated_mod['func_8488'] = func_8488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8488_call = mutated_mod.get_global_var('func_8488')
call_8489 = func_8488_call()
output = call_8489
func_8490 = relay.Function([], output)
mutated_mod['func_8490'] = func_8490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_8512 = relay.TupleGetItem(func_7042_call(), 0)
call_8513 = relay.TupleGetItem(func_7044_call(), 0)
output = relay.Tuple([call_8512,])
output2 = relay.Tuple([call_8513,])
func_8522 = relay.Function([], output)
mod['func_8522'] = func_8522
mod = relay.transform.InferType()(mod)
output = func_8522()
func_8523 = relay.Function([], output)
mutated_mod['func_8523'] = func_8523
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8652 = relay.var("var_8652", dtype = "uint16", shape = (8, 3, 9))#candidate|8652|(8, 3, 9)|var|uint16
var_8653 = relay.var("var_8653", dtype = "uint16", shape = (8, 3, 9))#candidate|8653|(8, 3, 9)|var|uint16
bop_8654 = relay.bitwise_and(var_8652.astype('uint16'), relay.reshape(var_8653.astype('uint16'), relay.shape_of(var_8652))) # shape=(8, 3, 9)
func_2796_call = mod.get_global_var('func_2796')
func_2798_call = mutated_mod.get_global_var('func_2798')
call_8657 = func_2796_call()
call_8658 = func_2796_call()
func_370_call = mod.get_global_var('func_370')
func_373_call = mutated_mod.get_global_var('func_373')
var_8664 = relay.var("var_8664", dtype = "float32", shape = (336,))#candidate|8664|(336,)|var|float32
call_8663 = relay.TupleGetItem(func_370_call(relay.reshape(var_8664.astype('float32'), [14, 2, 12])), 0)
call_8665 = relay.TupleGetItem(func_373_call(relay.reshape(var_8664.astype('float32'), [14, 2, 12])), 0)
output = relay.Tuple([bop_8654,call_8657,call_8663,var_8664,])
output2 = relay.Tuple([bop_8654,call_8658,call_8665,var_8664,])
func_8711 = relay.Function([var_8652,var_8653,var_8664,], output)
mod['func_8711'] = func_8711
mod = relay.transform.InferType()(mod)
mutated_mod['func_8711'] = func_8711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8711_call = mutated_mod.get_global_var('func_8711')
var_8713 = relay.var("var_8713", dtype = "uint16", shape = (8, 3, 9))#candidate|8713|(8, 3, 9)|var|uint16
var_8714 = relay.var("var_8714", dtype = "uint16", shape = (8, 3, 9))#candidate|8714|(8, 3, 9)|var|uint16
var_8715 = relay.var("var_8715", dtype = "float32", shape = (336,))#candidate|8715|(336,)|var|float32
call_8712 = func_8711_call(var_8713,var_8714,var_8715,)
output = call_8712
func_8716 = relay.Function([var_8713,var_8714,var_8715,], output)
mutated_mod['func_8716'] = func_8716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_8730 = relay.TupleGetItem(func_2633_call(), 0)
call_8731 = relay.TupleGetItem(func_2634_call(), 0)
func_5401_call = mod.get_global_var('func_5401')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_8742 = relay.TupleGetItem(func_5401_call(), 0)
call_8743 = relay.TupleGetItem(func_5402_call(), 0)
output = relay.Tuple([call_8730,call_8742,])
output2 = relay.Tuple([call_8731,call_8743,])
func_8760 = relay.Function([], output)
mod['func_8760'] = func_8760
mod = relay.transform.InferType()(mod)
output = func_8760()
func_8761 = relay.Function([], output)
mutated_mod['func_8761'] = func_8761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6557_call = mod.get_global_var('func_6557')
func_6559_call = mutated_mod.get_global_var('func_6559')
call_8847 = relay.TupleGetItem(func_6557_call(), 1)
call_8848 = relay.TupleGetItem(func_6559_call(), 1)
output = call_8847
output2 = call_8848
func_8867 = relay.Function([], output)
mod['func_8867'] = func_8867
mod = relay.transform.InferType()(mod)
output = func_8867()
func_8868 = relay.Function([], output)
mutated_mod['func_8868'] = func_8868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3210_call = mutated_mod.get_global_var('func_3210')
call_8869 = relay.TupleGetItem(func_3209_call(), 0)
call_8870 = relay.TupleGetItem(func_3210_call(), 0)
output = relay.Tuple([call_8869,])
output2 = relay.Tuple([call_8870,])
func_8892 = relay.Function([], output)
mod['func_8892'] = func_8892
mod = relay.transform.InferType()(mod)
mutated_mod['func_8892'] = func_8892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8892_call = mutated_mod.get_global_var('func_8892')
call_8893 = func_8892_call()
output = call_8893
func_8894 = relay.Function([], output)
mutated_mod['func_8894'] = func_8894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8448_call = mod.get_global_var('func_8448')
func_8449_call = mutated_mod.get_global_var('func_8449')
call_8901 = relay.TupleGetItem(func_8448_call(), 0)
call_8902 = relay.TupleGetItem(func_8449_call(), 0)
output = relay.Tuple([call_8901,])
output2 = relay.Tuple([call_8902,])
func_8919 = relay.Function([], output)
mod['func_8919'] = func_8919
mod = relay.transform.InferType()(mod)
mutated_mod['func_8919'] = func_8919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8919_call = mutated_mod.get_global_var('func_8919')
call_8920 = func_8919_call()
output = call_8920
func_8921 = relay.Function([], output)
mutated_mod['func_8921'] = func_8921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3543_call = mod.get_global_var('func_3543')
func_3545_call = mutated_mod.get_global_var('func_3545')
call_8961 = func_3543_call()
call_8962 = func_3543_call()
func_8488_call = mod.get_global_var('func_8488')
func_8490_call = mutated_mod.get_global_var('func_8490')
call_8963 = relay.TupleGetItem(func_8488_call(), 0)
call_8964 = relay.TupleGetItem(func_8490_call(), 0)
output = relay.Tuple([call_8961,call_8963,])
output2 = relay.Tuple([call_8962,call_8964,])
func_8965 = relay.Function([], output)
mod['func_8965'] = func_8965
mod = relay.transform.InferType()(mod)
mutated_mod['func_8965'] = func_8965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8965_call = mutated_mod.get_global_var('func_8965')
call_8966 = func_8965_call()
output = call_8966
func_8967 = relay.Function([], output)
mutated_mod['func_8967'] = func_8967
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8971 = relay.var("var_8971", dtype = "uint32", shape = (8, 12, 10))#candidate|8971|(8, 12, 10)|var|uint32
var_8972 = relay.var("var_8972", dtype = "uint32", shape = (8, 12, 10))#candidate|8972|(8, 12, 10)|var|uint32
bop_8973 = relay.left_shift(var_8971.astype('uint32'), relay.reshape(var_8972.astype('uint32'), relay.shape_of(var_8971))) # shape=(8, 12, 10)
func_6159_call = mod.get_global_var('func_6159')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_8976 = func_6159_call()
call_8977 = func_6159_call()
output = relay.Tuple([bop_8973,call_8976,])
output2 = relay.Tuple([bop_8973,call_8977,])
func_8984 = relay.Function([var_8971,var_8972,], output)
mod['func_8984'] = func_8984
mod = relay.transform.InferType()(mod)
var_8985 = relay.var("var_8985", dtype = "uint32", shape = (8, 12, 10))#candidate|8985|(8, 12, 10)|var|uint32
var_8986 = relay.var("var_8986", dtype = "uint32", shape = (8, 12, 10))#candidate|8986|(8, 12, 10)|var|uint32
output = func_8984(var_8985,var_8986,)
func_8987 = relay.Function([var_8985,var_8986,], output)
mutated_mod['func_8987'] = func_8987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6410_call = mod.get_global_var('func_6410')
func_6411_call = mutated_mod.get_global_var('func_6411')
call_9012 = relay.TupleGetItem(func_6410_call(), 0)
call_9013 = relay.TupleGetItem(func_6411_call(), 0)
output = call_9012
output2 = call_9013
func_9017 = relay.Function([], output)
mod['func_9017'] = func_9017
mod = relay.transform.InferType()(mod)
output = func_9017()
func_9018 = relay.Function([], output)
mutated_mod['func_9018'] = func_9018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8867_call = mod.get_global_var('func_8867')
func_8868_call = mutated_mod.get_global_var('func_8868')
call_9022 = func_8867_call()
call_9023 = func_8867_call()
output = call_9022
output2 = call_9023
func_9052 = relay.Function([], output)
mod['func_9052'] = func_9052
mod = relay.transform.InferType()(mod)
mutated_mod['func_9052'] = func_9052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9052_call = mutated_mod.get_global_var('func_9052')
call_9053 = func_9052_call()
output = call_9053
func_9054 = relay.Function([], output)
mutated_mod['func_9054'] = func_9054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3210_call = mutated_mod.get_global_var('func_3210')
call_9169 = relay.TupleGetItem(func_3209_call(), 0)
call_9170 = relay.TupleGetItem(func_3210_call(), 0)
output = call_9169
output2 = call_9170
func_9171 = relay.Function([], output)
mod['func_9171'] = func_9171
mod = relay.transform.InferType()(mod)
mutated_mod['func_9171'] = func_9171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9171_call = mutated_mod.get_global_var('func_9171')
call_9172 = func_9171_call()
output = call_9172
func_9173 = relay.Function([], output)
mutated_mod['func_9173'] = func_9173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6159_call = mod.get_global_var('func_6159')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_9214 = func_6159_call()
call_9215 = func_6159_call()
output = relay.Tuple([call_9214,])
output2 = relay.Tuple([call_9215,])
func_9234 = relay.Function([], output)
mod['func_9234'] = func_9234
mod = relay.transform.InferType()(mod)
mutated_mod['func_9234'] = func_9234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9234_call = mutated_mod.get_global_var('func_9234')
call_9235 = func_9234_call()
output = call_9235
func_9236 = relay.Function([], output)
mutated_mod['func_9236'] = func_9236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_9281 = relay.TupleGetItem(func_5142_call(), 0)
call_9282 = relay.TupleGetItem(func_5144_call(), 0)
func_6140_call = mod.get_global_var('func_6140')
func_6141_call = mutated_mod.get_global_var('func_6141')
call_9396 = relay.TupleGetItem(func_6140_call(), 0)
call_9397 = relay.TupleGetItem(func_6141_call(), 0)
func_6140_call = mod.get_global_var('func_6140')
func_6141_call = mutated_mod.get_global_var('func_6141')
call_9399 = relay.TupleGetItem(func_6140_call(), 0)
call_9400 = relay.TupleGetItem(func_6141_call(), 0)
output = relay.Tuple([call_9281,call_9396,call_9399,])
output2 = relay.Tuple([call_9282,call_9397,call_9400,])
func_9407 = relay.Function([], output)
mod['func_9407'] = func_9407
mod = relay.transform.InferType()(mod)
output = func_9407()
func_9408 = relay.Function([], output)
mutated_mod['func_9408'] = func_9408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4248_call = mod.get_global_var('func_4248')
func_4250_call = mutated_mod.get_global_var('func_4250')
call_9442 = relay.TupleGetItem(func_4248_call(), 0)
call_9443 = relay.TupleGetItem(func_4250_call(), 0)
func_4472_call = mod.get_global_var('func_4472')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_9450 = relay.TupleGetItem(func_4472_call(), 2)
call_9451 = relay.TupleGetItem(func_4473_call(), 2)
func_370_call = mod.get_global_var('func_370')
func_373_call = mutated_mod.get_global_var('func_373')
var_9460 = relay.var("var_9460", dtype = "float32", shape = (336,))#candidate|9460|(336,)|var|float32
call_9459 = relay.TupleGetItem(func_370_call(relay.reshape(var_9460.astype('float32'), [14, 2, 12])), 0)
call_9461 = relay.TupleGetItem(func_373_call(relay.reshape(var_9460.astype('float32'), [14, 2, 12])), 0)
func_8318_call = mod.get_global_var('func_8318')
func_8322_call = mutated_mod.get_global_var('func_8322')
const_9474 = relay.const([-9,-5,-6,-7,-9,-7,10,-10,3,9,9,-8,1,-3,-3,10,-9,6,-3,-2,-9,3,-5,8,-10,-1,-10,-7,-8,-2,3,5,-7,9,-2,-4,-8,-10,-1,2,-7,4,3,-10,10,-4,-4,-8,9,-10,-8,4,3,-10,4,8,6,-1,-1,-2,3,-7,4,-7,-5,-6,3,-1,-3,1,-3,-1,10,10,4,-4,9,-5,9,7,-9,6,-10,10,-8,-1,1,9,-7,-5,-2,-10,-4,-3,-7,6,-3,9,9,-9,2,7,-5,7,7,4,2,-2,9,9,8,-1,10,-6,-1,8,-6,-7,5,-10,-7,-4,8,-7,-3,-4,-4,2,7,4,5,-1,1,10,5,10,6,-1,2,-3,4,6,4,-1,7,1,1,1,-4,-10,10,-9,6,1,9,4,3,1,-7,-10,-2,-4,-3,-5,-5,5,6,4,-5,-1,10,8,-3,-3,-5,-5,-2,-2,-4,-3,3,-6,4,-9,4,-3,-5,-8,-4,-9,3,-8,2,1,6,-7,-6,7,3,-8,8,-1,-6,9,1,-1,-3,9,-8,1,8,4,-1,3,7,-10,5,-5,-4,3,4,10,-2,3,3,5,-2,-7,-7,8,2,-8,3,9,2,3,-5,-5,5,-8,-2,2,-1,-10,9,-4,-9,-9,-10,10,-2,7,-7,8,-2,10,9,-9,-9,1,-10,1,9,-10,8,-10,4,-10,4,2,-4,10,-4,-6,-10,3,3,-9,-3,3,10,4,5,-4,-3,2,1,-3,-3,-10,-9,4,6,-4,2,-10,3,6,-9,-6,1,2,-10,-6,5,7,-6,5,2,-1,-9,9,-5,1,-7,8,6,9,4,-10,-9,4,8,7,9,4,-1,3,10,-1,2,5,9,6,7,-4,-5,-4,-8,-2,-1,8,-1,-7,4,8,-7,-7,-6,2,1,2,6,10,6,-2,10,8,-8,2,3,1,-4,-8,1,6,8,9,-3,-8,3,-8,8,6,-1,10,-10,-7,9,-5,-7,-6,8,-7,-6,-9,-4,2,3,8,6,-9,10,1,1,-4,4,3,7,2,-4,-2,10,-10,2,8,-9,6,-2,1,-10,2,-6,7,-5,-7,-4,1,3,-8,1,-4,-2,10,-5,7,-7,-3,-6,-6,-1,-3,-2,-8,6,-9,-1,-5,-3,-7,7,8,-5,-9,-1,-5,8,9,2,4,-5,-5,7,-9,9,1,-2,-10,-1,-9,5,-7,1,4,7,-3,2,1,10,-2,-6,4,5,4,-4,8,-8,-4,-3,4,8,-4,-5,-2,5,-5,10,-10,5,10,-10,3,-3,6,-5,8,6,-6,7,8,-5,-6,4,1,-3,-3,7,-8,2,8,4,3,-8,-3,-10,-10,5,1,3,3,10,6,3,-10,9,4,-2,3,9,-6,6,1,1,3,3,9,-1,3,-10,-8,-8,2,1,-1,-1,7,-10,-9,2,4,-7,9,5,-3,-4,6,5,-4,-5,-9,10,6,-8,-1,-8,-8,-6,-4,-10,10,9,-5,-5,-5,4,7,-9,5,7,-10,3,-9,-4,1,-1,5,8,8,-1,-4,-4,8,-5,3,-1,8,-10,2,-1,7,6,5,5,7,-4,-8,3,6,-1,1,-3,-3,-5,8,-7,-1,-8,-7,8,9,-9,4,5,2,-8,-5,2,-5,-2,-5,9,-2,-2,2,-6,-6,7,7,-10,7,1,-1,1,-2,-9,4,4,-7,-6,8,9,7,4,10,-2,-1,1,8,8,-7,-6,8,-8,6,-1,7,10,8,9,-7,-4,-6,2,1,3,-8,-10,10,-1,-1,3,-4,2,-5,7,4,10,-10,-5,4,-8,8,1,3,4,-4,-2,8,-8,6,6,-9,-9,9,-10,1,-7,8,-7,-8,5,-8,10,-2,10,6,-6,-2,-5,-1,6,-5,-1,9,-3,10,8,-4,5,-7,-4,9,-9,6,-4,9,7,10,-4,-9,-5,5,-7,4,-7,-5,3,10,6,5,3,9,5,-9,8,8,-6,-1,-5,7,5,4,7,-9,2,-5,8,-4,-1,4,2,7,8,-3,2,-5,-3,4,-3,-4,-6,7,-1,9,-5,-5,6,6,-1,-6,-10,-9,-10,-4,-3,7,7,5,6,-2,-6,9,-3,5,6,7,2,1,-7,4,-5,-1,-6,2,10,-2,-3,8,6,9,7,-9,10,-3,-7,8,10,6,-6,8,4,-2,-3,-4,6,-2,-9,-3,3,5,5,-5,3,-2,10,6,-2,-1,-1,-3,-8,9,5,6,10,-1,-5,3,-6,10,5,-9,4,-1,7,-1,6,-2,-6,1,10,-2,-6,4,9,9,-9,2,-2,-8,4,4,1,-1,4,2,1,8,10,1,-7,-7,1,-10,2,-2,9,-6,-1,7,8,9,3,9,1,-5,2,-5,-1,8,6,10,7,6,-3,-5,-2,4,-4,-1,5,-5,9,-2,8,-4,3,8,9,1,-8,-7,-3,-6,-4,-3,-6,-5,-8,-7,-8,-1,-4,2,4,9,10,-2,5,-9,6,7,8,-9,1,-7,7,-2,8,6,5,-3,1,7,5,4,-8,5,5,6,-10,-4,10,7,10,-9,-1,2,-10,-8,7,-8,5,2,-7,-5,-1,3,-7,-7,-6,-3,-1,-8,6,-7,10,-7,-9,6,-7,-5,3,8,-8,8,3,10,-8,4,6,6,-7,2,10,-3,2,5,-8,5,10,-2,5,-7,-2,-5,-2,-4,-4,4,6,-10,7,-2,-8,5,-10,-1,8,-6,-6,-9,-3,-7,9,2,-1,2,10,5,10,-6,-6,5,-2,6,-5,-8,8,-5,9,2,10,9,7,7,-5,-10,-9,-7,-6,-3,-10,9,-8,-4,-4,8,10,5,3,-7,-7,1,1,-9,3,-10,-4,-10,7,-9,10,-6,-7,10,-5,10,5,9,9,5,-1,4,5,-8,-10,5,6,-2,4,-3,-10,-2,4,3,3,-7,4,-2,7,-1,-6,-9,-8,5,5,-1,-1,-2,-6,8,2,4,9,4,5,-3,4,3,-2,-3,6,-4,9,-10,2,4,5,9,-3,10,-10,9,6,5,-2,-7,-4,-5,-6,8,5,1,10,-4,4,-1,8,8,3,1,4,6,-8,9,-8,-1,10,4,3,3,3,-4,5,2,7,-5,-1,7,4,3,-4,8,10,4,-2,-1,-2,-6,8,6,3,-4,-4,4,-8,9,-5,8,1,-9,10,7,-6,8,1,7,7,8,4,-7,-3,8,5,3,9,-8,1,-2,8,-1,6,-5,-3,2,7,2,10,-7,-8,-3,-2,8,8,-2,-2,7,5,2,-5,5,-6,9,1,-2,-6,-7,-8,4,7,-2,3,10,1,5,-6,5,1,9,2,10,8,10,4,-2,2,-3,-3,-2,-5,-8,7,-7,9,-10,-9,3,-8,5,-5,-5,1,1,-3,6,-9,-10,-10,-7,-3,2,-7,-1,-5,1,3,8,-5,8,1,-5,10,7,2,-1,-10,9,5,6,-8,2,4,7,-9,7,-3,-2,-8,3,4,-5,6,-6,5,2,9,-7,6,-2,1,6,-2,6,-7,1,4,8,1,-2,-5,2,-10,7,-2,-10,-8,8,-3,1,-5,3,-8,1,4,8,10,3,6,6,1,-5,-10,-9,7,-7,2,-4,-3,-2,8,6,7,-8,1,4,-9,1,2,-6,-3,3,-3,8,2,2,-1,2,2,-2,5,7,5,-3,1,5,-2,-9,-5,-2,-8,-1,-7,-8,2,-1,8,-10,7,9,5,-10,-2,4,8,6,-2,-7,-1,-7,-5,-1,8,3,7,1,-7,10,4,9,-2,9,4,-5,9,10,-2,-6,-2,-6,-2,-10,-2,8,-4,7,2,2,-2,-2,10,-6,3,-3,-2,2,7,-2,-2,-4,-7,-10,9,-8,-8,-3,-4,-1,2,2,4,-7,-7,2,9,-6,7,9,8,6,-8,6,-7,-1,-2,2,-8,-9,-7,-4,4,-5,6,6,1,-3,10,-3,6,-9,-4,4,-7,-8,-1,1,2,8,-9,-3,-8,-9,6,9,-3,-8,-7,-10,-5,-1,3,-4,9,3,8,-6,4,7,7,-10,4,9,2,8,-10,-4,2,-7,9,8,-10,4,-2,-2,6,-9,-1,2,2,1,-10,6,-2,-2,5,-8,4,6,2,-5,1,-9,-6,8,-10,9,-3,-1,-8,-5,2,-7,-7,2,-3,8,-3,-8,7,-7,2,-6,-1,-9,-9,-3,10,-7,2,-6,8,-1,-2,-10,-5,-3,-2,-2,-5,3,7,-5,5,6,3,4,-6,4,4,-7,10,-5,-1,5,-2,-2,-4,8,10,9,-5,-7,-8,9,5,-10,-7,7,-4,6,1,-4,4,6,-5,-9,8,1,7,7,-7,-6,1,-4,6,-10,-5,-3,8,5,6,6,-10,-7,9,8,10,2,-7,-6,-4,9,-5,-10,-4,8,9,-4,-1,7,-7,-7,8,8,-4,8,5,1,2,2,-6,-7,-6,-5,2,-8,4,-7,3,-10,2,-8,3,-4,1,-10,8,-2,-8,3,7,-2,5,7,-3,-8,3,1,-5,3,-2,-1,-2,-5,1,2,-9,3,2,-3,-5,1,7,3,6,8,-1,-8,-5,3,3,6,-10,6,-6,-10,-2,-10,10,2,1,3,10,-3,6,-9,-1,-9,-3,-6,5,-2,4,5,5,-1,-7,6,-8,2,-5,3,7,9,-6,-9,-1,-8,-2,1,10,4,8,7,-3,2,-10,-5,6,7,1,2,6,6,-5,-7,-9,-4,-5,5,-10,5,9,-8,-6,-8,10,8,2,-6,-1,1,6,-6,-6,8,-7,7,4,2,10,-6,10,6,8,-6,-7,-8,4,-5,-7,8,5,-10,3,-9,-2,3,1,-3,-3,7,-7,2,-10,-2,9,9,-9,5,2,5,10,-5,9,-9,8,10,-2,-7,-9,-7,2,4,-6,-5,4,-2,8,-5,-7,9,10,-3,2,-5,10,1,10,5,-6,-4,-10,5,8,-7,4,-2,-5,-9,4,10,-5,-10,-8,-3,-5,5,5,-5,9,10,6,-8,-7,-8,10,-9,-10,-2,-3,-3,1,-4,-9,1,-1,-1,-5,9,-7,-4,-6,-4,1,-5,8,-3,-7,7,-7,3,-1,8,5,-9,4,-9,-10,7,8,6,-1,7,9,3,6,6,4,5,-1,4,-2,8,-8,3,-8,-4,-1,6,-6,-8,8,-10,-9,-2,1,-6,10,5,2,4,9,8,10,8,4,8,1,4,7,8,1,1,1,-9,-5,2,10,2,5,-6,7,1,-4,-7,3,8,-3,-5,-8,7], dtype = "int32")#candidate|9474|(2002,)|const|int32
call_9473 = relay.TupleGetItem(func_8318_call(relay.reshape(call_9450.astype('uint8'), [360,]), relay.reshape(const_9474.astype('int32'), [2002,]), ), 3)
call_9475 = relay.TupleGetItem(func_8322_call(relay.reshape(call_9450.astype('uint8'), [360,]), relay.reshape(const_9474.astype('int32'), [2002,]), ), 3)
output = relay.Tuple([call_9442,call_9450,call_9459,var_9460,call_9473,const_9474,])
output2 = relay.Tuple([call_9443,call_9451,call_9461,var_9460,call_9475,const_9474,])
func_9478 = relay.Function([var_9460,], output)
mod['func_9478'] = func_9478
mod = relay.transform.InferType()(mod)
mutated_mod['func_9478'] = func_9478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9479 = relay.var("var_9479", dtype = "float32", shape = (336,))#candidate|9479|(336,)|var|float32
func_9478_call = mutated_mod.get_global_var('func_9478')
call_9480 = func_9478_call(var_9479)
output = call_9480
func_9481 = relay.Function([var_9479], output)
mutated_mod['func_9481'] = func_9481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8965_call = mod.get_global_var('func_8965')
func_8967_call = mutated_mod.get_global_var('func_8967')
call_9512 = relay.TupleGetItem(func_8965_call(), 1)
call_9513 = relay.TupleGetItem(func_8967_call(), 1)
output = call_9512
output2 = call_9513
func_9526 = relay.Function([], output)
mod['func_9526'] = func_9526
mod = relay.transform.InferType()(mod)
output = func_9526()
func_9527 = relay.Function([], output)
mutated_mod['func_9527'] = func_9527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_9571 = relay.TupleGetItem(func_8760_call(), 0)
call_9572 = relay.TupleGetItem(func_8761_call(), 0)
output = relay.Tuple([call_9571,])
output2 = relay.Tuple([call_9572,])
func_9575 = relay.Function([], output)
mod['func_9575'] = func_9575
mod = relay.transform.InferType()(mod)
mutated_mod['func_9575'] = func_9575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9575_call = mutated_mod.get_global_var('func_9575')
call_9576 = func_9575_call()
output = call_9576
func_9577 = relay.Function([], output)
mutated_mod['func_9577'] = func_9577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_9600 = relay.TupleGetItem(func_7042_call(), 1)
call_9601 = relay.TupleGetItem(func_7044_call(), 1)
var_9604 = relay.var("var_9604", dtype = "float64", shape = (16, 5, 13))#candidate|9604|(16, 5, 13)|var|float64
bop_9605 = relay.bitwise_and(call_9600.astype('int32'), relay.reshape(var_9604.astype('int32'), relay.shape_of(call_9600))) # shape=(16, 5, 13)
bop_9608 = relay.bitwise_and(call_9601.astype('int32'), relay.reshape(var_9604.astype('int32'), relay.shape_of(call_9601))) # shape=(16, 5, 13)
bop_9609 = relay.equal(var_9604.astype('bool'), relay.reshape(bop_9605.astype('bool'), relay.shape_of(var_9604))) # shape=(16, 5, 13)
bop_9612 = relay.equal(var_9604.astype('bool'), relay.reshape(bop_9608.astype('bool'), relay.shape_of(var_9604))) # shape=(16, 5, 13)
output = relay.Tuple([bop_9609,])
output2 = relay.Tuple([bop_9612,])
func_9613 = relay.Function([var_9604,], output)
mod['func_9613'] = func_9613
mod = relay.transform.InferType()(mod)
var_9614 = relay.var("var_9614", dtype = "float64", shape = (16, 5, 13))#candidate|9614|(16, 5, 13)|var|float64
output = func_9613(var_9614)
func_9615 = relay.Function([var_9614], output)
mutated_mod['func_9615'] = func_9615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9234_call = mod.get_global_var('func_9234')
func_9236_call = mutated_mod.get_global_var('func_9236')
call_9623 = relay.TupleGetItem(func_9234_call(), 0)
call_9624 = relay.TupleGetItem(func_9236_call(), 0)
func_6632_call = mod.get_global_var('func_6632')
func_6634_call = mutated_mod.get_global_var('func_6634')
call_9631 = relay.TupleGetItem(func_6632_call(), 2)
call_9632 = relay.TupleGetItem(func_6634_call(), 2)
func_630_call = mod.get_global_var('func_630')
func_633_call = mutated_mod.get_global_var('func_633')
var_9639 = relay.var("var_9639", dtype = "int16", shape = (176,))#candidate|9639|(176,)|var|int16
var_9640 = relay.var("var_9640", dtype = "int32", shape = (140,))#candidate|9640|(140,)|var|int32
call_9638 = relay.TupleGetItem(func_630_call(relay.reshape(var_9639.astype('int16'), [11, 4, 4]), relay.reshape(var_9640.astype('int32'), [140,]), ), 2)
call_9641 = relay.TupleGetItem(func_633_call(relay.reshape(var_9639.astype('int16'), [11, 4, 4]), relay.reshape(var_9640.astype('int32'), [140,]), ), 2)
output = relay.Tuple([call_9623,call_9631,call_9638,var_9639,var_9640,])
output2 = relay.Tuple([call_9624,call_9632,call_9641,var_9639,var_9640,])
func_9654 = relay.Function([var_9639,var_9640,], output)
mod['func_9654'] = func_9654
mod = relay.transform.InferType()(mod)
var_9655 = relay.var("var_9655", dtype = "int16", shape = (176,))#candidate|9655|(176,)|var|int16
var_9656 = relay.var("var_9656", dtype = "int32", shape = (140,))#candidate|9656|(140,)|var|int32
output = func_9654(var_9655,var_9656,)
func_9657 = relay.Function([var_9655,var_9656,], output)
mutated_mod['func_9657'] = func_9657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_9659 = func_2553_call()
call_9660 = func_2553_call()
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
var_9688 = relay.var("var_9688", dtype = "float32", shape = (216,))#candidate|9688|(216,)|var|float32
call_9687 = func_3054_call(relay.reshape(var_9688.astype('float32'), [9, 2, 12]))
call_9689 = func_3054_call(relay.reshape(var_9688.astype('float32'), [9, 2, 12]))
func_3026_call = mod.get_global_var('func_3026')
func_3028_call = mutated_mod.get_global_var('func_3028')
call_9691 = func_3026_call()
call_9692 = func_3026_call()
output = relay.Tuple([call_9659,call_9687,var_9688,call_9691,])
output2 = relay.Tuple([call_9660,call_9689,var_9688,call_9692,])
func_9707 = relay.Function([var_9688,], output)
mod['func_9707'] = func_9707
mod = relay.transform.InferType()(mod)
mutated_mod['func_9707'] = func_9707
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9708 = relay.var("var_9708", dtype = "float32", shape = (216,))#candidate|9708|(216,)|var|float32
func_9707_call = mutated_mod.get_global_var('func_9707')
call_9709 = func_9707_call(var_9708)
output = call_9709
func_9710 = relay.Function([var_9708], output)
mutated_mod['func_9710'] = func_9710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_9729 = relay.TupleGetItem(func_2633_call(), 0)
call_9730 = relay.TupleGetItem(func_2634_call(), 0)
output = relay.Tuple([call_9729,])
output2 = relay.Tuple([call_9730,])
func_9731 = relay.Function([], output)
mod['func_9731'] = func_9731
mod = relay.transform.InferType()(mod)
output = func_9731()
func_9732 = relay.Function([], output)
mutated_mod['func_9732'] = func_9732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8892_call = mod.get_global_var('func_8892')
func_8894_call = mutated_mod.get_global_var('func_8894')
call_9854 = relay.TupleGetItem(func_8892_call(), 0)
call_9855 = relay.TupleGetItem(func_8894_call(), 0)
func_4850_call = mod.get_global_var('func_4850')
func_4853_call = mutated_mod.get_global_var('func_4853')
const_9867 = relay.const([8.525553,-2.484894,-7.321848,3.556478,9.602154,5.449573,-7.667453,1.833024,-0.529839,7.575646,2.403596,0.560029,-7.917525,7.750494,8.541867,-3.616668,-3.179396,5.752918,-7.566476,0.147879,-5.186981,9.777820,8.288723,0.207391,4.785484,0.128664,1.414436,4.032010,-9.397716,0.554767,-9.453450,-7.916288,-1.706321,6.984935,-3.642743,-6.385062,9.690179,-1.704505,-3.208135,-8.084249,-2.177300,-0.427742,-1.126052,0.279946,-4.270536,3.357183,-9.408436,0.706331,7.492241,5.704629,-6.980601,-1.852818,2.853481,-6.205329,-3.946614,3.655457,7.840163,-0.415795,-9.095000,-9.169340,-4.496250,4.567871,0.084186,4.634115,2.891209,4.605861,-8.036255,6.907474,-8.812857,6.154226,6.376085,1.181159,5.215468,-9.152307,9.300532,-9.139602,-2.406121,-5.971874,6.425072,-7.819477,-9.107270,-2.498420,0.086717,-0.563447,5.068707,-8.170770,7.467520,2.158214,3.144224,-0.029223,-9.698394,-2.339032,-2.600630,2.704489,-5.094175,-5.148384,6.531988,4.435384,-5.226660,-2.129750,-1.355984,-6.753326,-3.301815,-7.728341,-5.083946,-1.210129,8.036113,3.322818,2.727022,8.540389,2.111633,-7.940786,-8.476234,3.834000,5.824457,4.128895,3.287386,7.177596,7.385480,3.131750,-4.500144,0.456018,2.977975,6.420827,0.945058,-4.314764,-1.277648,3.498932,7.487926,-5.367146,-3.628544,-3.913716,6.777675,6.681188,2.705561,-8.896320,-7.073872,7.231579,9.119734,-0.206327,-6.724392,7.843464,1.340416,1.695820,2.825177,5.186746,2.963341,5.705559,-2.752044,-0.726450,-9.667264,6.331594,-7.096412,-1.254187,-6.983042,-5.271174,4.003030,1.396786,-3.810153,2.385866,-8.833171,7.729669,-0.414160,7.195629,0.469969,-6.996731,-5.485197,-9.302896,2.813863,-8.919944,7.731424,-6.012257,-2.287145,2.009590,-7.703161,8.172335,5.508428,6.798978,6.726952,-6.548784,-2.959774,-2.311070,8.372993,5.785047,9.482749,-1.051182,-1.906997,-7.472144,-4.058072,4.962489,-2.873862,-8.078753,7.759623,-4.511045,-8.832046,9.259079,1.109452,4.323530,-3.960176,3.113181,2.220695,-7.265599,-6.367868,-7.352893,-6.816168,-0.167507,-0.668209,-6.000918,-6.867302,8.290963,-7.022750,7.993641,-0.984432,-2.376223,5.931683,4.017267,8.343758,-3.648550,-1.634299,-5.631765,-3.931423,0.668306,6.061732,-8.291711,-4.826883,-4.466711,-7.617953,0.446998,9.607996,9.367920,7.817933,2.438342,-9.498138,3.465239,-1.725124,1.267743,-7.944914,-3.189529,-5.096771,5.269369,-2.564081,5.594561,1.635606,6.580759,-7.448939,4.010260,0.356135,-2.544236,-7.004698,-4.579897,-4.434419,1.632271,0.536110,-3.588561,-3.122963,-8.683723,-3.090301,3.408108,-4.954183,-3.053820,4.270962,0.145761,-2.860911,-9.188869,2.959792,5.206515,-2.323050,-8.590739,-0.948820,1.822358,-3.728416,4.233234,-9.259399,-6.657256,-4.570727,9.262245,-8.108956,-0.496106,7.851574,9.232826,-1.161717,-5.559287,0.295368,-2.673227,1.225353,-2.002602,3.112291,-3.187131,-5.352098,5.910329,7.298713,-3.663901,9.393011,-2.827065,2.317450,4.616832,8.897334,-5.839958,-3.118650,-3.243473,-3.136124,8.666245,1.619775,7.455365,-1.469568,-7.616978,-4.777069,5.851093,5.586027,-0.882820,9.388769,-3.540544,2.766208,9.071343,4.452191,5.886203,-1.064405,-6.101522,0.286379,2.268559,-0.036685,3.896053,-1.707214,-7.060224,1.322328,-2.177928,-3.594780,2.318302,7.639700,6.469799,-8.545298,-1.231184,1.212365,-5.397868,9.446919,-8.558689,9.776062,-6.467193,-0.667903,-6.715317,7.805672,-9.199500,3.738110,8.480474,-7.806922,-5.936283,8.441563,6.416446,9.095148,1.608262,3.135882,-5.532544,-2.625736,-8.329546,1.883341,-4.780471,8.453181,-3.786758,-8.381126,7.933891,-4.320885,7.682406,-6.797975,-6.902314,1.785379,-3.563940,0.378845,5.806339,5.226730,-1.157215,-8.320203,7.994885,1.638974,4.333889,1.372431,-5.435373,-2.828406,-6.151324,-1.129646,-8.110023,-8.640181,-9.443598,4.168760,4.010057,5.646856,9.300077,-8.052818,8.433900,-4.855351,4.444900,1.252757,4.825752,-1.430194,-3.395805,-2.782010,-2.130829,-3.018664,-4.063592,-5.762958,-3.206764,4.219697,-2.354487,2.636752,8.157848,-2.812631,1.497354,-2.548023,5.515156,-2.465869,5.982800,-0.740455,-0.047252,-4.899807,-9.852834,-7.892174,-4.914212,-3.438638,-9.920121,-7.711358,3.386157,-6.292977,-9.675002,2.575976,5.964668,9.286754,-0.868422,-2.062541,-0.049368,1.789643,-9.776034,-6.929894,8.105899,6.516704,-9.850986,5.212633,-7.372786,-9.796479,-4.550748,-5.458660,-4.690424,-4.686261,4.247532,3.991204,4.330172,-1.618689,-0.810263,-9.546155,5.680910,9.058320,2.910977,0.041802,0.550410,-4.450689,5.140402,3.880486,-9.762693,-4.929362,8.849012,-2.572542,-1.118897,-2.713858,1.904410,-8.592569,-9.002414,-4.846221,-8.898361,8.929770,6.293142,1.175715,-8.814759,-5.288715,-0.534626,-2.415812,-7.285659,-2.860578,4.937990,-5.653180,3.848446,8.058513,-1.248814,4.895050,3.719296,-5.718142,-5.521227,1.598041,7.258462,7.178782,-9.381330,5.503054,-5.224971,7.139822,-2.828464,-5.623535,-6.974955,9.607428,0.781941,2.023432,6.503706,-7.286537,9.322387,-2.942557,1.762298,-3.406857,5.400247,4.471764,5.859273,9.920119,-0.798716,0.837632,4.723233,7.382829,2.524610,6.978699,9.874311,-8.418328,3.737102,6.271824,-3.535347,-0.976729,4.772759,-7.653215,-2.856737,-2.757818,0.616169,8.781257,-2.412217,-7.014611,7.097878,-4.964426,6.276085,6.989410,9.220951,5.926935,-1.215127,2.347870,0.692519,-1.438509,9.003221,-1.449776,-2.746893,1.746389,5.177176,-9.893575,4.652797,0.195733,0.149431,4.445726,2.615782,-8.472709,-2.402660,1.866420,9.060815,8.717166,-7.173905,-8.982134,5.492398,1.698391,1.653621,1.481188,-8.962050,5.933678,1.078412,-8.653240,7.454086,-0.607559,-4.848558,-9.312491,0.928776,-4.516410,4.309914,-5.313690,-9.195661,2.503884,8.442616,-8.249326,7.577351,6.032425,-5.117996,1.870367,-7.989507,6.788546,6.278512,6.912909,4.020458,-9.915760,-8.731047,9.642553,-1.191746,-5.081980,1.315844,3.793048,-6.230321,3.091467,-8.189503,-8.797695,-0.957894,4.958023,4.207036,-0.997795,-7.397780,-5.275325,1.859878,3.025256,-9.203588,5.439122,-6.427478,3.659803,6.899261,6.876214,8.579715,-1.293899,4.406653,-1.084374,-7.117704,7.273005,8.020425,1.682119,0.146816,2.081292,-8.672573,7.396989,2.598254,7.721855,4.537045,2.024765,5.385683,-6.915990,3.290818,1.689571,5.446212,7.879171,-7.661714,3.078766,4.113363,-8.124525,2.447096,9.410572,-3.258524,0.676370,1.159537,-2.525157,1.658369,-0.470426,6.444694,-4.838370,-5.008577,-3.972266,0.587357,5.813217,-0.106530,-9.611215,0.683293,-7.133823,2.988337,-1.048820,-6.394061,2.709037,2.307338,9.594279,4.199836,-8.004241,0.700583,7.203573,-7.403563,6.042587,-3.806569,5.610515,7.619965,6.631574,9.934160,-4.819401,-6.704868,8.381878,4.604846,3.397978,8.391593,-2.442139,-2.903307,7.261608,-0.305588,4.313036,-3.765665,0.373831,-8.388621,-0.176356,-7.417042,-0.255688,-4.217601,-4.033484,-6.658328,2.931531,2.068854,-2.663443,5.351059,3.685684,-7.741994,-5.560729,8.122022,8.860723,-8.068930,4.399904,-9.252695,8.298892,-0.242987,-8.001332,7.549715,-4.465291,9.385499,-4.349908,-0.900111,0.552035,-6.663568,5.277794,2.675226,-0.533118,5.669126,-6.118760,6.181473,-3.699482,8.854892], dtype = "float32")#candidate|9867|(720,)|const|float32
call_9866 = relay.TupleGetItem(func_4850_call(relay.reshape(const_9867.astype('float32'), [12, 15, 4])), 2)
call_9868 = relay.TupleGetItem(func_4853_call(relay.reshape(const_9867.astype('float32'), [12, 15, 4])), 2)
output = relay.Tuple([call_9854,call_9866,const_9867,])
output2 = relay.Tuple([call_9855,call_9868,const_9867,])
func_9882 = relay.Function([], output)
mod['func_9882'] = func_9882
mod = relay.transform.InferType()(mod)
output = func_9882()
func_9883 = relay.Function([], output)
mutated_mod['func_9883'] = func_9883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6557_call = mod.get_global_var('func_6557')
func_6559_call = mutated_mod.get_global_var('func_6559')
call_9918 = relay.TupleGetItem(func_6557_call(), 0)
call_9919 = relay.TupleGetItem(func_6559_call(), 0)
output = relay.Tuple([call_9918,])
output2 = relay.Tuple([call_9919,])
func_9923 = relay.Function([], output)
mod['func_9923'] = func_9923
mod = relay.transform.InferType()(mod)
mutated_mod['func_9923'] = func_9923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9923_call = mutated_mod.get_global_var('func_9923')
call_9924 = func_9923_call()
output = call_9924
func_9925 = relay.Function([], output)
mutated_mod['func_9925'] = func_9925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_9941 = relay.TupleGetItem(func_2953_call(), 1)
call_9942 = relay.TupleGetItem(func_2955_call(), 1)
func_6632_call = mod.get_global_var('func_6632')
func_6634_call = mutated_mod.get_global_var('func_6634')
call_9943 = relay.TupleGetItem(func_6632_call(), 2)
call_9944 = relay.TupleGetItem(func_6634_call(), 2)
func_5430_call = mod.get_global_var('func_5430')
func_5433_call = mutated_mod.get_global_var('func_5433')
var_9962 = relay.var("var_9962", dtype = "float64", shape = (972,))#candidate|9962|(972,)|var|float64
call_9961 = relay.TupleGetItem(func_5430_call(relay.reshape(var_9962.astype('float64'), [9, 12, 9])), 1)
call_9963 = relay.TupleGetItem(func_5433_call(relay.reshape(var_9962.astype('float64'), [9, 12, 9])), 1)
uop_9993 = relay.sinh(var_9962.astype('float64')) # shape=(972,)
func_9526_call = mod.get_global_var('func_9526')
func_9527_call = mutated_mod.get_global_var('func_9527')
call_10010 = func_9526_call()
call_10011 = func_9526_call()
output = relay.Tuple([call_9941,call_9943,call_9961,uop_9993,call_10010,])
output2 = relay.Tuple([call_9942,call_9944,call_9963,uop_9993,call_10011,])
func_10023 = relay.Function([var_9962,], output)
mod['func_10023'] = func_10023
mod = relay.transform.InferType()(mod)
mutated_mod['func_10023'] = func_10023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10024 = relay.var("var_10024", dtype = "float64", shape = (972,))#candidate|10024|(972,)|var|float64
func_10023_call = mutated_mod.get_global_var('func_10023')
call_10025 = func_10023_call(var_10024)
output = call_10025
func_10026 = relay.Function([var_10024], output)
mutated_mod['func_10026'] = func_10026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8462_call = mod.get_global_var('func_8462')
func_8463_call = mutated_mod.get_global_var('func_8463')
call_10028 = relay.TupleGetItem(func_8462_call(), 0)
call_10029 = relay.TupleGetItem(func_8463_call(), 0)
var_10053 = relay.var("var_10053", dtype = "int32", shape = (2002,))#candidate|10053|(2002,)|var|int32
bop_10054 = relay.logical_or(call_10028.astype('bool'), relay.reshape(var_10053.astype('bool'), relay.shape_of(call_10028))) # shape=(2002,)
bop_10057 = relay.logical_or(call_10029.astype('bool'), relay.reshape(var_10053.astype('bool'), relay.shape_of(call_10029))) # shape=(2002,)
output = relay.Tuple([bop_10054,])
output2 = relay.Tuple([bop_10057,])
func_10063 = relay.Function([var_10053,], output)
mod['func_10063'] = func_10063
mod = relay.transform.InferType()(mod)
mutated_mod['func_10063'] = func_10063
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10064 = relay.var("var_10064", dtype = "int32", shape = (2002,))#candidate|10064|(2002,)|var|int32
func_10063_call = mutated_mod.get_global_var('func_10063')
call_10065 = func_10063_call(var_10064)
output = call_10065
func_10066 = relay.Function([var_10064], output)
mutated_mod['func_10066'] = func_10066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9731_call = mod.get_global_var('func_9731')
func_9732_call = mutated_mod.get_global_var('func_9732')
call_10073 = relay.TupleGetItem(func_9731_call(), 0)
call_10074 = relay.TupleGetItem(func_9732_call(), 0)
output = call_10073
output2 = call_10074
func_10081 = relay.Function([], output)
mod['func_10081'] = func_10081
mod = relay.transform.InferType()(mod)
output = func_10081()
func_10082 = relay.Function([], output)
mutated_mod['func_10082'] = func_10082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7447_call = mod.get_global_var('func_7447')
func_7448_call = mutated_mod.get_global_var('func_7448')
call_10109 = relay.TupleGetItem(func_7447_call(), 0)
call_10110 = relay.TupleGetItem(func_7448_call(), 0)
func_4690_call = mod.get_global_var('func_4690')
func_4692_call = mutated_mod.get_global_var('func_4692')
call_10118 = relay.TupleGetItem(func_4690_call(), 0)
call_10119 = relay.TupleGetItem(func_4692_call(), 0)
output = relay.Tuple([call_10109,call_10118,])
output2 = relay.Tuple([call_10110,call_10119,])
func_10125 = relay.Function([], output)
mod['func_10125'] = func_10125
mod = relay.transform.InferType()(mod)
mutated_mod['func_10125'] = func_10125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10125_call = mutated_mod.get_global_var('func_10125')
call_10126 = func_10125_call()
output = call_10126
func_10127 = relay.Function([], output)
mutated_mod['func_10127'] = func_10127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6632_call = mod.get_global_var('func_6632')
func_6634_call = mutated_mod.get_global_var('func_6634')
call_10147 = relay.TupleGetItem(func_6632_call(), 3)
call_10148 = relay.TupleGetItem(func_6634_call(), 3)
uop_10152 = relay.tan(call_10147.astype('float64')) # shape=(2002,)
uop_10154 = relay.tan(call_10148.astype('float64')) # shape=(2002,)
bop_10160 = relay.bitwise_and(call_10147.astype('int8'), relay.reshape(uop_10152.astype('int8'), relay.shape_of(call_10147))) # shape=(2002,)
bop_10163 = relay.bitwise_and(call_10148.astype('int8'), relay.reshape(uop_10154.astype('int8'), relay.shape_of(call_10148))) # shape=(2002,)
output = relay.Tuple([bop_10160,])
output2 = relay.Tuple([bop_10163,])
func_10171 = relay.Function([], output)
mod['func_10171'] = func_10171
mod = relay.transform.InferType()(mod)
output = func_10171()
func_10172 = relay.Function([], output)
mutated_mod['func_10172'] = func_10172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9052_call = mod.get_global_var('func_9052')
func_9054_call = mutated_mod.get_global_var('func_9054')
call_10178 = func_9052_call()
call_10179 = func_9052_call()
output = relay.Tuple([call_10178,])
output2 = relay.Tuple([call_10179,])
func_10184 = relay.Function([], output)
mod['func_10184'] = func_10184
mod = relay.transform.InferType()(mod)
mutated_mod['func_10184'] = func_10184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10184_call = mutated_mod.get_global_var('func_10184')
call_10185 = func_10184_call()
output = call_10185
func_10186 = relay.Function([], output)
mutated_mod['func_10186'] = func_10186
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10251 = relay.const([[[4.058485,0.144521,2.294310,-8.425972,4.757888,-0.964513,-1.464530,-1.064133,4.025278,1.761115],[-9.576484,6.061556,9.799780,-8.938328,0.793763,-4.391037,2.539154,9.021397,-4.926094,6.263024],[-9.080903,-5.728321,-4.774928,-2.384755,0.115044,-6.558507,0.217754,6.875723,5.865489,-0.422016],[6.865051,4.075889,-2.501875,4.711353,-0.314240,-8.994642,-1.627185,0.944990,-4.830200,-1.493516],[-9.932678,9.200912,-8.274251,-6.098590,-5.426248,-5.551793,5.112311,-3.629859,0.816096,-9.282553],[8.789558,-0.611314,-8.704907,-3.135362,5.257144,-3.723256,8.266769,3.238564,-8.288863,7.093477],[-5.330700,1.969277,6.611756,9.624322,9.695817,4.313205,-2.777939,4.352884,5.804525,6.542708],[-1.901119,-1.416398,3.354217,-6.521599,0.657833,-9.280808,7.613922,4.516609,-4.829852,2.848839],[7.224309,-6.973098,-9.708930,-2.786911,3.881998,-0.158659,4.854070,-8.602536,-6.341751,2.304340],[-7.255421,4.485862,5.719664,8.408611,2.260792,7.424042,2.106274,8.355989,1.127379,6.178225],[2.005025,0.928075,9.067389,-9.737772,-3.227634,0.432758,3.971955,-3.596400,-2.420439,-9.757162],[6.947364,-5.659541,6.574125,-1.086108,4.479634,-1.871948,-7.541251,3.977285,3.856182,8.327189],[1.446289,-0.229102,-6.164270,8.513192,-0.982307,-5.586001,-8.188888,-5.093070,-9.686646,-6.496050],[6.888373,6.902569,-1.882597,6.884327,-4.797355,3.755988,4.489441,-7.417621,7.137993,-3.290682],[-2.753305,9.417848,1.386165,-6.917353,-8.324425,0.576478,3.541436,4.650758,-4.717648,0.868882],[-5.180583,-4.869707,9.215713,9.010614,0.983933,-3.001046,-6.874884,-5.148212,-0.089103,-0.888269]],[[3.988371,-3.788326,-2.594765,0.278173,-0.287780,8.084577,0.372195,-9.579004,-4.392573,2.650711],[-5.995361,8.104679,2.132270,-5.330130,3.288867,1.014143,0.310855,3.589670,5.683775,-7.597688],[-8.239978,-5.977225,0.560550,-2.128556,-9.500381,8.873806,9.265085,-7.331422,-2.398113,-8.930943],[6.740086,3.133762,6.723700,-6.308638,9.561450,-0.633760,-5.362109,6.905517,-2.972337,7.098616],[-6.365885,8.149074,-2.318406,-1.060471,-6.319190,-5.267008,-2.139972,-6.529411,-5.352446,2.377529],[1.825660,4.260449,-7.342742,-9.741037,-2.223692,-4.301921,-1.016479,9.282534,0.201085,-8.654089],[-0.608794,4.008688,-7.816693,3.456528,-4.122341,-8.245281,-3.595326,5.943520,-6.691369,3.087390],[4.778984,7.404645,3.153312,-0.837616,8.561298,2.347812,2.548551,-5.862064,-7.802328,8.674833],[-8.115109,8.277108,6.924256,-1.854413,-4.896143,2.564591,8.046499,1.071400,9.360980,2.982852],[-8.366195,-0.381235,5.386074,4.850412,-5.259257,-1.734880,-6.641353,-2.074635,-6.590706,-2.680565],[-3.225276,-5.560551,-2.853024,2.753181,-3.734723,-2.758081,6.682883,-8.994789,-0.282343,-7.331263],[-5.776468,9.751533,-5.150473,5.528336,-6.142182,3.495770,0.004859,-0.267385,-4.724556,2.825661],[-5.962562,3.932425,-2.356121,-5.476596,-8.637538,-4.568920,9.942844,9.019573,0.521641,-5.991976],[-7.794982,-0.226702,-3.334873,-4.076121,-1.595005,0.844735,6.194346,-8.025674,-9.668462,-7.102969],[-3.714769,-1.838003,6.567525,0.874151,-3.480412,-9.034035,-3.094478,-3.849698,-5.778818,6.997605],[-5.270637,3.289470,2.247101,8.972776,7.322452,-2.575272,-4.809011,8.834705,1.624613,-7.509459]],[[4.157856,-6.655960,-5.638239,-2.095263,7.091684,6.607606,-1.857589,-8.320075,1.069356,0.631406],[9.578490,-1.196274,-2.942879,8.843908,-6.130764,0.462971,1.298700,9.354733,-6.358335,-2.308660],[6.425626,7.237496,-0.823265,-8.345643,-0.478378,-2.732795,7.635402,8.739584,0.003961,3.275119],[2.370521,0.671479,4.153841,-9.590576,-5.483671,8.253670,-8.091343,0.349449,-1.892180,-3.458886],[2.307411,3.698393,2.244626,7.513293,7.345471,8.997163,6.817420,7.161592,7.194259,9.084425],[-2.180370,-3.226532,9.933863,-4.360178,0.711741,-6.739151,7.867400,3.349821,9.984602,1.470193],[-8.550732,5.596881,7.848583,-9.822072,-4.135525,-9.618863,-4.739706,0.840733,-9.736703,-8.106233],[3.928964,7.690230,-6.728591,3.838528,3.760804,-6.107076,2.264397,8.522502,4.994927,-9.576075],[3.350350,-4.360906,0.043544,-7.704109,2.109027,0.618196,7.850063,-3.300899,7.422717,2.381827],[-7.287976,-1.671935,5.217275,2.894976,4.073329,-0.565629,-1.416028,0.010903,6.232516,-5.268631],[-1.548177,9.706485,-8.982566,9.539872,1.328787,-7.390394,-5.436004,-9.192374,-6.415777,-2.090305],[9.379208,1.131202,-1.073290,5.712092,-1.013148,-3.653550,6.791418,-4.248037,9.110643,7.888000],[6.057547,2.285740,0.415774,9.496841,4.004494,6.704777,5.694030,-5.248614,7.968674,1.895752],[9.695704,-2.624565,3.363669,-5.895600,-9.230265,5.216168,4.167303,-3.789961,-9.123367,8.054877],[5.605678,-2.822734,4.349519,-6.423383,-8.193738,-1.780615,-4.854504,-1.198194,5.347456,-6.952003],[7.187920,7.924904,-7.487355,2.216674,-6.734695,-3.217796,6.850556,-3.291286,-2.405320,-3.637243]],[[-0.987197,-4.855601,7.051835,-5.777950,-0.836723,0.529671,-9.168372,-9.300027,-3.598803,-9.113379],[-0.833219,-3.385454,3.700733,-1.253522,-3.685467,0.124401,9.709270,9.509683,-9.664967,-4.191181],[-1.588575,-1.750934,-4.325585,-6.112754,-1.556355,5.194087,4.197006,8.771614,-0.908489,-9.669498],[-4.011923,2.339664,-1.663136,-6.601007,-9.527436,4.497052,-2.622637,-5.970700,-4.554541,7.684455],[9.222126,-4.680130,4.580786,9.286369,1.096759,-3.263163,5.284463,-9.006464,-3.419614,8.007583],[2.668711,0.038890,-9.333784,-2.569855,-5.164017,-1.402326,9.574250,2.981307,-4.219021,-4.171669],[-4.656999,7.488712,8.006954,2.865377,-8.209727,-9.360755,9.671806,-3.646738,6.241834,4.112777],[-3.832034,6.263682,-2.590160,-0.606783,-2.465312,-9.523552,1.025805,-5.382391,5.713600,-6.479636],[-1.180791,6.088571,4.059080,-7.961099,0.449898,-7.451115,0.195139,7.667292,-4.300878,-7.058719],[-5.106267,-2.401271,-5.680323,-3.545254,-4.718519,5.521353,-5.011603,1.417939,-3.714641,-2.794639],[3.575583,-3.408860,0.470846,-3.681419,7.802655,-1.362931,4.989755,-1.208097,8.110493,-1.503101],[0.311700,6.850847,-2.513820,1.447698,-0.509468,-1.568747,0.589961,-2.283686,-0.290213,-3.046899],[1.806049,-9.478171,4.404370,-9.274586,0.489997,8.056767,-4.758804,-6.183278,4.366685,-4.580730],[-2.919770,9.915216,3.298817,-6.253120,-7.173060,6.457718,4.992784,-9.941392,-1.708106,9.209539],[6.727581,1.216325,5.798341,4.983526,9.355016,-2.402134,-2.946699,7.572751,3.832945,-6.268666],[5.624618,9.272361,7.808427,7.501494,-6.625231,1.155096,8.573189,-2.934041,8.998919,9.975758]],[[8.517655,-8.227740,8.873408,3.586326,9.754210,-9.257961,2.489706,5.530619,-5.072030,5.481980],[9.801694,-2.119762,5.384717,-2.901794,-6.893959,8.782773,8.733815,-0.854263,-9.866725,-4.534029],[6.004179,-8.851054,-1.862925,6.719731,-1.680456,-4.200883,6.683956,1.655571,9.608910,4.031824],[7.009989,7.679380,-9.677062,-6.143535,0.266161,-3.071983,9.685899,5.401383,-8.212068,-6.330538],[2.475203,4.274213,-8.682406,1.448096,-2.026241,0.689797,-2.712236,-8.230308,-5.839282,1.216526],[8.758728,-5.525418,-9.108571,0.044084,-9.086231,6.765710,-8.737052,6.543602,4.311800,-4.150009],[0.473079,-6.099221,-6.262708,1.351330,2.686197,-9.808208,-3.163599,7.218213,-6.657190,-1.066545],[0.258821,9.260648,-6.194521,-3.274240,8.693068,1.245035,-8.571428,-0.048848,-2.042068,-4.755837],[-2.576371,1.764847,9.621885,2.471729,3.188275,3.063090,-9.214719,-7.406964,3.216690,-8.469723],[5.015969,4.961117,3.756535,-3.111782,1.857153,4.518998,2.471504,2.585843,-1.901276,-7.194576],[-6.744096,-6.261544,-3.023372,0.047426,4.311912,8.710164,5.196822,-7.051701,-3.484497,-3.772175],[0.836364,-3.593954,-0.206182,-4.468890,-6.028806,-4.892193,-3.834982,5.008605,7.554365,-8.269212],[9.533515,8.616618,-9.040945,6.116212,-1.483030,4.706113,-7.442135,-7.769001,9.035825,5.897254],[-4.076232,-7.220883,-1.576674,8.963315,-8.492180,-2.685964,7.372786,-4.740642,0.563775,3.334968],[4.781439,-0.156333,-3.615157,7.516644,4.806970,5.701862,-7.849513,-9.066583,-8.231345,1.073525],[9.194172,-7.119576,0.387488,-1.008247,-9.738197,3.028476,-6.040510,9.507087,-2.500345,-3.025706]],[[9.630011,0.528846,7.281155,-6.671356,-9.609248,-0.466949,1.390985,-8.629560,4.214495,-3.115407],[-1.173715,-2.958175,0.403901,0.459324,-0.507392,4.937460,-2.054805,7.821295,-2.949812,8.301436],[4.942658,-9.692388,-5.480450,-2.514549,2.732677,4.641150,-3.096569,5.990436,-4.234207,8.509826],[-4.202531,-2.067130,-0.407823,8.571564,-4.276097,6.289011,-6.635673,-8.987003,-9.369962,4.057965],[7.661363,-7.993655,-4.135157,3.150060,-4.639425,6.234423,2.286597,0.827290,3.183238,-3.587912],[4.577684,-2.764326,9.043969,-7.712570,0.606941,-5.044752,7.384623,-2.895314,-8.809195,-1.372326],[-5.649292,2.236540,2.389553,1.653248,1.786257,-1.228814,1.556350,7.656213,-9.374665,6.131749],[5.790902,-5.528604,-5.061540,-0.041768,2.804128,8.722699,-5.945454,3.150922,-2.565054,-4.169662],[3.406751,-0.454809,1.309292,8.039729,-9.839187,1.054298,-0.662413,-3.343146,-4.709535,5.363021],[6.355668,-4.453686,-6.509883,7.980233,-1.820742,-5.123779,4.037127,5.836976,-8.975242,-2.502346],[9.686770,-5.443272,6.285727,-3.982813,3.501987,5.793158,-7.824085,-5.739469,-9.238072,1.347467],[-1.561131,-0.347341,9.232337,-9.068205,-9.096229,-6.707547,7.530041,-2.232821,9.796204,-4.086303],[-1.317016,3.594987,3.238477,5.052572,8.274154,9.511256,6.117341,6.874220,3.055417,-5.234429],[-0.822299,7.296805,-5.177402,8.622313,-7.222208,-0.086119,4.178431,4.469697,-1.731162,-8.364499],[-2.990485,0.943287,7.312120,-0.281007,-0.497861,0.388687,3.686933,-5.015783,-8.924104,8.909005],[-9.938953,2.865995,0.782171,-6.900690,-2.382175,1.335774,-6.577181,-2.583185,-2.815846,-5.514733]],[[6.718903,3.162019,-6.553040,-2.990743,2.325192,5.778790,-2.983892,-6.209606,-6.876758,2.492114],[8.946480,3.709919,4.967886,-3.312008,-3.390232,-6.891862,-7.258447,-5.565996,-6.745820,4.165274],[-2.292344,6.403946,1.031864,-7.473986,-3.633403,-9.600425,-7.827462,-7.097979,6.936470,0.369611],[3.726092,-9.653423,-8.578295,4.332798,8.480899,-0.111937,8.978848,-0.187847,6.133140,-4.227551],[-9.908633,-8.249410,-9.592477,-9.067867,4.011670,3.178777,-2.365569,-9.897034,-6.480260,1.431616],[-5.366424,7.704477,6.887187,-4.099521,-5.934475,-0.021182,-5.182505,-3.866279,2.482533,-5.643028],[-0.475152,-2.044565,5.966846,4.453287,-1.362009,-6.211150,6.831620,-5.586228,0.556390,3.189385],[-4.376188,1.363500,-0.325749,5.632240,-7.726714,-7.443988,-4.199317,6.523849,8.799036,6.950699],[7.881818,-8.370191,-7.226419,5.167232,-9.212276,8.964797,2.389182,5.758282,-9.281321,1.744415],[-6.458169,-0.456633,-2.528651,5.732700,-4.542875,2.251944,-6.926202,-6.708855,2.693969,-6.333371],[7.074313,-5.605052,-3.399463,-3.584865,-4.391594,-1.153309,-3.341840,9.679628,-7.869182,-0.698352],[-8.325174,8.561393,-4.158355,1.099078,2.647494,8.330935,7.117430,8.868348,4.985624,9.027566],[-4.185430,-5.862426,-9.416633,2.370949,-1.096638,3.999788,-4.131497,2.551877,2.802006,-8.789121],[7.777805,8.103470,1.397712,-2.650093,-2.583358,-9.070080,1.904722,3.021351,0.113000,3.718673],[2.818076,-4.870495,1.241258,-6.326582,-8.821140,4.812129,-8.918963,-9.189508,-4.089427,-0.940505],[-4.104400,5.989048,4.434899,6.844558,1.238561,7.563224,-7.463791,-2.825383,9.671005,-0.759761]],[[6.321364,1.477247,-7.640209,2.327641,4.281769,0.202602,8.863171,4.057292,-1.811451,8.481512],[7.190984,-0.178353,-2.350220,7.390616,1.840987,8.658747,-6.969298,-7.157555,-3.770968,0.496806],[7.315455,-2.500836,6.614609,9.124465,-1.225317,8.150588,8.906902,7.891475,8.857857,-5.388294],[-1.663965,3.579314,-6.848965,6.154568,-4.898629,-2.045338,-7.351019,-9.758570,4.444554,3.823575],[-7.320726,8.146832,-8.932223,9.220932,-9.039403,-0.382269,6.981195,2.096701,9.349535,-3.632773],[1.295156,8.743949,4.717256,8.724966,1.516911,1.418116,0.835137,-3.547000,7.036836,8.014103],[0.609815,4.439026,-5.925152,-9.567303,8.396057,0.498952,-9.526556,-4.884701,-8.485068,-3.779811],[-6.174789,8.078678,-5.187650,1.384845,2.931493,8.256755,-7.576001,9.547325,3.199833,-9.260287],[-5.263581,9.944282,-9.519870,3.420863,1.679295,3.044614,0.344828,-0.366008,-9.234126,0.340011],[-8.007518,-0.054679,4.792735,6.471725,1.689985,-9.490611,0.193957,-0.661542,7.358926,-3.422054],[9.782694,7.164831,-1.128532,5.712282,9.705978,-1.639904,2.319742,4.978130,-7.365639,-7.780858],[-2.458229,-3.499547,-8.448999,-4.463243,-7.905669,6.610133,-8.039663,-1.570454,-0.569727,6.965206],[-7.035774,4.485858,-1.221240,4.178129,-3.650762,-1.418543,-1.107760,-6.913258,-0.974814,-2.423643],[-6.655089,-0.758942,-7.403942,5.340288,-3.295906,6.345787,7.633717,4.416892,4.174871,-9.241872],[-1.819795,-5.821153,7.645043,0.669388,9.441420,-8.902701,9.456702,-9.625136,1.183203,-7.841285],[-8.324153,2.196547,5.172276,6.002943,5.706726,-2.221553,2.962414,-6.909354,0.590541,-6.814046]],[[9.242159,-8.366055,3.197826,2.999188,4.144259,3.104508,7.084195,5.156591,9.151248,5.029672],[-0.362508,-2.364340,-7.534646,2.067476,-3.875831,9.835618,-8.284361,0.291285,-3.863755,7.422450],[-5.188268,-0.714211,8.420636,-7.010703,-6.685594,5.192418,1.747397,-2.497874,-2.858886,-3.065376],[6.689949,-8.855396,5.285227,-4.378212,-6.793061,3.465052,-7.016789,-6.341605,1.663645,-2.008799],[-1.085346,7.351564,9.217053,-7.700611,6.560819,-1.177848,-0.255311,-4.427669,-1.829722,7.465823],[-0.772052,-2.858616,-9.215579,-8.522533,9.303681,-6.605324,-6.257628,-9.850455,2.021156,7.755653],[0.960929,-3.356637,1.523262,1.393330,7.130530,-0.342010,-2.829228,-7.146142,-3.945835,-7.433172],[0.089070,4.641500,-1.973331,9.554413,-0.857776,-0.145264,-3.388187,3.577710,-5.692905,-5.431517],[-6.195716,4.223203,3.819938,6.318264,9.001587,3.435297,-5.690145,-8.786628,-8.542739,0.382217],[1.516828,-1.490965,-1.018221,7.493417,7.387570,-0.751960,-1.425402,-8.134680,6.287499,6.343710],[7.173147,9.856056,-3.104771,0.652875,8.352147,2.933219,-3.012869,-5.548099,-3.532968,9.215054],[4.221180,8.782926,-2.733568,4.591634,2.766965,-1.557047,-0.287373,7.855424,0.863225,8.317471],[2.308946,9.008469,4.421485,-6.728943,8.320882,3.108513,7.357920,3.867274,-5.260409,8.548725],[3.706500,-9.968826,3.379417,-8.049408,-2.776364,6.721906,7.991315,-0.447314,-1.662432,-9.616528],[-1.905853,8.155152,-9.774752,5.629023,6.266996,-4.676957,-0.219229,-1.301360,-5.376792,5.319057],[5.881089,-6.348602,5.892242,6.795330,5.438645,-4.298965,7.873452,5.755068,-3.080833,-5.120749]],[[9.408490,-3.081421,5.854618,7.065620,-0.308871,9.981424,2.481848,-4.047102,-3.812041,2.190943],[0.462046,8.077287,7.111677,-7.769726,-4.395391,7.801962,9.180981,1.648899,0.030035,4.197261],[7.320387,3.715928,-0.158939,-1.999947,5.838232,3.215896,1.398683,9.471393,4.926766,-7.769817],[-6.017143,-3.765100,2.929607,-7.267595,-0.399926,-3.005929,-6.226246,1.437151,9.225260,0.617880],[0.291997,0.909344,-7.627254,5.107545,-3.303088,1.768017,9.397716,0.168000,5.853428,9.217493],[3.284406,-0.399295,7.444825,-3.792387,1.502818,7.663032,-9.019862,1.480594,3.841197,9.778429],[-6.440864,-6.043538,-2.870660,-1.096519,-4.984761,2.589852,-6.223458,2.185637,1.897155,-1.875848],[-1.185788,3.150454,6.824791,2.761969,1.852782,-6.088202,4.277540,-0.051792,-9.840915,3.711802],[-2.331333,-5.228810,-0.170484,2.092374,-0.756985,-3.744806,5.821821,9.969962,-2.453436,-1.291581],[8.892405,8.184967,7.357081,-8.680495,2.309496,-6.010418,9.465598,-9.361348,7.091599,0.495407],[0.853791,-4.613995,-7.740164,9.477631,-8.715391,-2.025546,1.221743,-4.029802,7.299349,-8.197465],[-3.047061,9.814112,-6.926845,-0.276342,3.743687,0.218717,5.917871,3.332112,1.605664,2.753308],[-4.746608,-2.797419,5.675624,4.917496,7.702213,4.535055,-4.848993,9.507933,-6.926437,-2.619336],[-1.119126,4.138552,9.437442,6.559931,0.418664,-3.584578,-6.507096,1.737292,8.963675,5.166443],[9.607320,7.656039,9.035226,-9.430830,-6.056183,6.495155,-4.556573,-3.013716,3.366652,-5.205484],[-0.396677,7.072073,0.884744,3.990198,3.715608,-3.593039,0.603151,-5.108453,-8.487170,7.016579]],[[-4.775493,6.015049,9.101564,-8.221946,6.946478,5.210807,-2.196337,7.273190,-9.793178,-5.782644],[7.198232,-2.316303,-3.668597,8.651722,7.576054,8.430574,7.304391,-1.793437,3.865864,4.515170],[6.723823,-8.335264,4.385963,-9.722819,-2.813289,0.443940,9.702808,9.533905,1.398514,-6.409927],[3.675366,-9.396452,0.856700,0.660242,2.264638,8.203250,1.417172,-9.651532,5.222667,-4.512077],[-6.162982,9.658272,9.808359,5.181690,2.384740,1.367930,-6.037176,6.160230,-7.879561,-6.961453],[-7.063241,0.670855,7.828643,-4.105367,-5.565314,8.778360,0.572698,-4.049788,9.017943,5.609555],[5.262709,5.882394,-4.828205,2.292400,9.707976,-2.552439,-1.801669,7.399630,-9.576675,-4.430951],[7.443748,3.269716,5.154222,0.952917,0.287638,3.324562,-7.523833,-3.877941,-0.595442,2.684994],[7.459130,7.747793,7.360876,-3.423637,-0.288652,-0.201248,-4.262783,-9.682754,7.560464,-2.500389],[-5.398926,-9.323480,-6.292117,6.322680,-2.247913,-8.261913,2.871621,7.165213,-8.663551,-3.121929],[2.746331,-8.219168,-3.180292,0.344552,6.473409,-9.759101,4.016109,-8.000929,-2.292743,-6.016750],[-6.227036,-2.139727,-2.792320,0.822094,5.838897,-4.073310,-0.637867,-0.025922,9.471049,9.736561],[9.250241,1.391739,-3.216151,-6.341771,8.282454,3.525413,2.789792,6.955936,-3.090712,3.243932],[-4.272236,-2.323283,-6.346145,6.088543,-3.053049,-8.832264,9.353439,-8.718655,3.584278,-9.470297],[-9.984882,4.636215,7.975030,5.840254,7.195510,-7.179781,-0.853225,-8.970616,0.334980,3.981812],[-7.031939,-5.938334,3.102733,8.043251,2.632317,6.237544,-1.709606,-7.454261,-6.359980,0.811677]],[[-2.091586,8.529991,-5.424822,0.598747,-1.011044,9.579177,4.382996,-4.275418,-4.958750,2.045381],[2.794283,4.323288,3.990482,9.481884,-7.959451,0.804172,-4.686392,4.543191,3.939968,7.329413],[8.081505,-0.862497,-9.316307,6.015229,2.076776,-2.373750,-6.908043,-9.295413,5.102853,8.383352],[-1.924607,-4.000410,6.454326,5.199827,7.063369,-9.661228,8.115709,6.246315,0.501759,-6.684934],[0.582064,2.141318,7.502507,-4.960220,-2.922478,-3.476513,-5.374798,4.071101,-0.298681,-4.777934],[6.232333,2.563363,-4.157953,-2.106473,2.253183,-4.792162,-1.885441,-7.168658,1.096669,-5.436400],[-7.432741,-6.557553,-1.197066,4.560036,-4.057394,-8.954353,-1.718030,-5.079569,-9.346971,3.565575],[5.795082,-8.323132,6.598903,3.667582,6.739294,-2.906260,-4.739092,7.447941,7.644585,-6.194350],[-0.637236,9.295433,-9.984628,9.472186,7.402624,-1.218078,-6.668393,-1.682731,-3.548926,-3.889622],[3.804522,0.312736,8.826673,-6.387107,7.216774,-7.822829,7.055703,6.030498,6.753983,-4.322550],[6.130002,-5.056915,-9.898543,0.547896,-6.839101,-1.375315,8.504842,-5.059035,-5.222531,8.877297],[5.162761,-6.360318,3.682511,-2.606509,-0.692270,0.951969,0.491755,-1.533974,-4.287505,-4.210159],[2.025229,7.292589,1.243910,-9.625404,-4.452389,0.314507,9.130093,7.667908,3.846690,-2.604491],[-4.925339,4.992635,4.368019,1.527258,-6.077730,-2.484338,5.480780,-3.347571,9.477630,-9.488327],[-7.356675,0.557382,1.513020,-6.388495,-8.597680,3.722209,0.375688,4.172241,-8.390376,-4.381916],[-8.728012,-6.907797,-7.023660,-7.055260,1.105470,-1.769705,2.976517,-2.047920,-3.464954,0.957321]]], dtype = "float32")#candidate|10251|(12, 16, 10)|const|float32
const_10252 = relay.const([[[3.117974,-5.415956,9.515022,-4.447687,8.269088,-5.586360,-9.832841,-0.746094,3.662832,4.423324],[6.404710,3.428896,-6.673017,-0.655285,7.160958,-4.821732,-2.699053,8.916865,7.213398,-7.165005],[-6.923556,-7.405975,5.981360,-7.863237,3.736521,-7.398264,-2.230023,-2.754812,5.859856,-5.083791],[-0.190225,-0.651310,3.501361,-0.499587,7.462820,0.088169,8.149219,-4.865583,-9.254701,2.701984],[-9.191006,-6.390972,-2.894436,8.374897,-4.817599,-1.933254,-9.851186,4.130381,-8.790443,-3.967024],[-7.730199,6.444712,-1.131193,7.797519,-5.179930,-8.540798,-3.983543,8.289199,2.240224,9.302037],[4.352546,-9.612885,-8.237807,6.876685,4.753976,-4.282618,-5.644662,1.292250,1.037367,1.608780],[-4.518305,-8.397601,7.692256,3.059415,1.049155,-1.133501,-1.904911,-6.163154,-4.094176,4.442260],[-1.637587,-4.250544,1.650122,9.021880,-7.413899,4.935257,-2.261116,5.501154,3.786573,-6.456659],[3.453540,1.529878,5.185222,-1.295038,-5.591145,7.768522,1.739210,9.070968,9.422153,2.203231],[2.677679,-6.620402,0.318089,5.363004,-6.347781,1.801996,-9.987006,9.576437,-8.887913,-3.148463],[3.195697,9.307022,8.768712,-1.035214,2.428180,-3.159549,-8.708431,-0.579078,-4.416562,-1.094044],[5.026741,3.074373,8.669654,4.873599,-9.644944,-2.071442,8.396481,9.729644,-0.621322,-2.482628],[2.233003,-0.206931,3.963704,7.211721,2.232530,3.786363,0.300139,-2.246817,1.365913,6.182677],[2.136075,-8.453893,9.390263,9.905933,5.917624,-4.391747,-9.762934,-0.628519,8.380005,-7.738158],[1.436303,-3.979300,-4.797515,5.169130,-9.124748,0.744213,-9.632194,6.446095,9.131251,4.827488]],[[-7.017471,-8.866749,7.249305,-1.066381,-8.498885,4.226679,-4.187325,3.470127,-7.301085,3.624821],[3.923651,8.622073,-1.401350,8.718321,1.574840,-5.537184,-4.763817,3.841317,7.439691,8.689783],[-4.654901,9.544926,-3.374868,4.678893,-9.222234,5.642535,1.646990,5.870949,2.488269,-9.319492],[-1.776841,-3.625833,3.281275,-3.434018,-8.684558,-4.241795,-8.749673,8.742027,-4.117649,1.440073],[4.254921,-3.006737,4.133535,-4.459226,1.804786,-6.818323,1.512030,-6.935619,-7.872447,2.873889],[-0.108824,0.109691,-7.577770,3.608746,5.356916,2.837646,-0.890337,0.711646,7.910053,-1.364843],[-2.856039,-0.543996,-8.227844,-3.337951,9.698680,4.745733,-3.337515,-5.375684,5.489820,1.075626],[9.064270,-6.941663,8.685122,9.176971,1.902675,1.329609,-3.243391,-2.844235,-3.297608,3.599030],[-4.771996,-2.827145,8.216186,0.874318,-6.597532,1.914254,7.744624,1.014214,-7.924158,-3.306817],[7.936724,1.044386,9.358813,-5.529842,7.222063,-8.685472,-6.611805,-6.128962,7.226168,-3.320741],[-9.902498,2.080731,7.845708,-7.586869,-2.774375,-0.332217,-1.358952,3.522092,3.995222,-2.299925],[-9.650580,-5.883914,4.659143,-7.179333,7.754810,-9.625561,0.432409,5.358675,9.693810,-1.431575],[-2.933183,9.916748,-5.513463,4.475960,-8.030255,-9.508998,-5.519266,0.573032,8.732451,-2.562137],[-9.480537,0.577294,7.557744,4.526781,-2.848915,-1.468884,-5.698778,-5.960783,-3.027885,-5.168522],[5.184411,8.378393,5.855431,4.459325,0.725965,4.105380,-8.925752,7.280261,-8.430128,-0.711236],[-1.771631,0.308439,-2.769662,4.844201,7.928591,1.346946,2.785315,-4.629923,8.578777,0.800734]],[[-7.804021,4.323209,3.584824,-3.409308,4.494290,7.605661,6.093387,-3.607651,-5.640223,-3.256620],[8.580793,-3.527439,5.477270,6.894151,-3.998913,3.462152,-6.034297,7.519294,5.072083,0.870643],[1.139621,-6.537679,3.799160,-5.681743,-9.330336,-7.734469,9.603406,-2.361973,5.394872,8.505632],[6.735137,-7.855983,5.683090,5.018111,0.200862,7.985633,9.016196,3.373729,-9.758795,-7.194528],[2.292022,-9.874097,3.869075,4.460278,9.506344,-5.919253,1.858838,-8.335033,7.257541,2.923076],[-0.427676,8.145981,-1.052976,-1.954346,-7.368366,9.526740,6.303331,-3.952213,9.851005,-8.691907],[9.967346,2.121787,5.335742,3.054142,6.834654,-3.733093,-6.067875,-3.987734,-2.319784,2.023442],[5.831558,-2.356085,6.526371,-0.053392,-2.779675,3.975935,8.944092,-6.063596,-4.804643,6.555479],[-2.127635,0.351769,0.436672,6.790594,-4.393545,6.073074,-6.233403,5.348141,-1.573106,-2.369680],[-1.013502,-2.484237,-4.331445,-2.477904,5.857013,-3.268497,8.080558,-1.813926,7.838122,7.174896],[-0.894652,-7.419008,-9.664735,-0.898483,5.303392,-9.212264,-0.972280,9.946486,6.754090,8.479930],[-5.280093,0.390026,3.686967,-2.810571,9.638513,4.781386,-3.895292,-2.037073,6.392356,-5.857150],[8.441872,-5.351523,9.099590,-3.581598,4.177011,5.125050,-5.703778,-2.152458,-4.779246,-8.447783],[-2.774184,-3.764042,0.708929,9.486983,1.815942,0.068933,-6.009536,5.168429,-7.666998,6.326437],[4.689171,4.379757,9.936383,-9.573309,-2.864989,1.695186,-0.090856,-2.771536,0.762019,-9.895619],[5.963681,7.527582,9.310016,1.882236,9.923335,0.662906,-3.355793,-0.506278,-6.000889,2.043345]],[[2.714280,5.844739,-7.167789,-3.890911,-2.755328,3.238921,-6.302165,1.431289,9.966800,1.621083],[3.908391,8.753094,5.056844,4.409841,-6.002309,8.619645,-8.948643,4.168928,-0.923129,-5.304226],[-6.372709,-5.177946,-0.632187,-9.893621,-8.380256,-2.806283,8.848335,8.862627,1.776997,-1.325850],[-9.798621,-5.039752,7.647830,4.260342,2.365354,-0.932752,2.212347,-4.360043,-0.547259,7.516976],[7.915323,7.266221,-8.356150,5.449597,3.650082,6.529446,3.240032,-9.319223,-4.869827,-0.322855],[5.880541,3.888263,7.346974,0.599479,2.927878,5.742301,-5.969896,1.784856,0.474506,2.286649],[-0.198338,-7.236082,-5.907295,-4.479632,3.534176,-0.584277,0.115590,5.065829,2.231324,6.878765],[-6.938066,8.355703,2.243261,5.132397,-3.180196,3.674288,2.868264,-9.607230,1.140552,-0.313066],[-3.203611,6.404350,0.065925,-3.638234,9.311477,1.278515,-9.405595,1.961874,1.071279,8.184581],[9.547568,-9.524202,-8.100385,-5.744557,-3.472602,-3.287101,1.312077,-0.362826,5.691221,6.741558],[-9.562388,-0.572995,-0.468669,-4.355051,-6.591980,2.009696,5.167615,-1.375809,-7.681714,6.786548],[-5.833536,0.168348,8.888117,-7.047061,1.603120,-8.347992,-8.856095,-4.650182,-9.630209,-9.442286],[-5.700985,-0.457006,3.597783,-7.516353,9.801913,-5.435117,7.538536,0.948360,-2.096854,5.349673],[0.717940,2.044231,-0.789829,-9.841144,6.197142,4.531992,-8.549426,5.643138,6.201040,-1.712884],[6.426934,-1.772475,-3.169296,0.132663,4.313539,-5.235710,-8.483706,-4.820543,-7.705227,7.003813],[7.598211,7.218647,-9.495273,0.743454,-4.103230,-2.914056,2.774438,2.042297,-8.593988,-8.058163]],[[6.149540,7.265728,-5.613584,1.898750,-9.395120,-1.060887,2.661481,-3.000065,-6.260257,7.214801],[3.873172,-4.177102,-4.252331,-1.915828,3.927471,-8.364002,-4.401446,-7.959217,4.719942,5.747253],[4.043733,5.179638,5.412120,-9.352556,-3.462744,0.787134,-7.873755,-6.247095,4.150234,9.400801],[6.977813,2.547141,8.117430,-1.653444,0.687012,6.477891,-1.508897,-8.344695,-5.800234,5.724912],[-8.174285,-2.275949,9.692000,-7.573761,0.258609,2.797272,1.706139,-0.610195,-6.429574,-2.660176],[-0.564553,-0.220325,-0.971477,1.948974,-9.728247,6.490849,9.581345,9.359645,-3.610737,3.922925],[6.820630,-0.002228,9.606166,-2.175401,-6.338519,-0.949968,-2.574735,3.731607,7.016819,2.418221],[5.383879,-5.656222,-6.614633,9.566313,6.431133,-7.857623,4.413776,-3.099285,-9.713591,5.675038],[3.086948,1.690832,-6.153459,-9.931623,8.079536,3.179849,4.493112,0.143324,0.316542,-6.767715],[3.813721,-3.416997,-9.737887,-8.704720,9.244839,4.232723,2.128620,-4.645544,4.555134,5.119616],[-5.081737,4.478916,-9.070531,8.568208,-7.603676,7.286609,-0.025899,-1.617516,-1.611788,8.072735],[-7.067161,-8.212888,-0.003439,-7.198182,7.390355,-0.787613,-6.667664,8.424739,2.227219,5.674406],[2.759645,9.217344,-5.457335,-2.868345,-4.923400,-7.690438,-2.401921,-1.751207,4.800951,-5.892871],[-4.766244,-9.195839,-7.605129,-1.354417,-4.779754,1.216969,-4.055093,4.510795,4.795341,3.241525],[-0.541454,-1.800405,-2.311088,9.499373,9.348442,-5.844646,-7.879052,7.858793,1.167512,-3.021240],[7.865658,7.706859,0.786544,-5.876916,-2.947942,-1.265362,7.626376,8.706149,-9.020907,6.373738]],[[-8.263700,2.592057,-2.084709,1.616665,-4.427517,9.758114,-7.980488,3.156713,6.560931,-6.565781],[1.646465,-9.963269,7.413176,-2.109212,-7.745942,-3.278648,-2.286940,-6.885469,-8.498765,-8.288800],[0.503054,-6.260540,-6.855849,5.073730,6.939137,2.710207,7.168103,1.461589,7.717753,-9.752623],[8.994038,-7.731648,-6.946511,-6.258840,-8.346236,-9.880465,-0.710724,3.646234,-4.306023,-8.559176],[-2.035580,0.120369,-6.177249,9.473822,-7.942594,0.272055,-5.342701,7.830971,-8.811921,1.041564],[-4.227695,7.568375,-6.961627,1.756364,2.059849,-1.740398,4.640420,4.512050,-9.865258,8.598689],[-0.918465,-1.213934,-9.311479,-1.289630,7.582506,-2.763965,4.764315,-7.147701,-9.207998,-7.443425],[1.328868,-1.877214,-6.455145,-8.105484,-7.798267,-7.256542,7.012861,7.564856,-9.516985,-5.342991],[5.435232,-2.414826,-7.598610,-7.280606,-7.740201,6.444689,9.689736,0.433360,7.575152,-9.611306],[3.673223,3.953289,1.072053,8.538938,-4.493693,1.021404,-6.656620,-8.917539,-5.691539,4.548927],[7.346828,-5.027765,-9.183834,8.219074,-8.614931,9.631213,-6.328281,-6.520805,0.766893,4.259286],[4.756378,7.537724,-0.545975,8.864635,-6.520914,-0.333491,1.725956,-4.984620,-3.150165,5.082818],[1.434824,-2.389990,3.676369,7.349451,-8.962674,-7.222452,6.141264,8.887198,5.376959,-2.869361],[-8.779716,-1.028063,-0.092182,9.429055,-2.948527,6.971205,-0.243600,4.713240,-4.568980,-6.804953],[4.506634,-1.419628,1.874608,1.171335,-8.135230,-8.077440,-1.583100,-4.946568,-4.866518,3.746390],[5.301344,-3.928558,-5.058084,3.362303,0.116739,-5.148556,9.010064,7.932526,-0.706807,3.933550]],[[9.553914,0.506879,-8.360848,-2.659643,-1.402112,6.965344,-4.942148,5.499966,1.747383,5.775038],[-6.595056,-8.516130,-2.930379,-9.767256,-4.211189,-4.977265,-6.454661,3.029428,1.383951,8.186543],[1.437722,7.941471,-2.692127,-8.508505,-6.110901,-7.352851,5.617724,-8.371256,3.204174,9.771746],[-6.572426,9.151397,4.482366,-3.912131,-5.794330,-7.868377,-4.114162,5.303571,-6.623047,7.122966],[2.706395,-1.732935,-3.259005,-3.798970,5.943607,3.175897,5.856589,-4.947630,4.559080,-7.021032],[-0.866971,3.518579,-1.916613,-5.539529,-0.517328,1.126474,4.252903,3.047696,-1.375383,1.671012],[2.015844,-5.299059,5.721057,0.876102,4.561473,-5.802334,9.057278,-8.280121,-6.102785,-2.732616],[-3.561117,-8.344760,0.834732,1.023633,-4.073376,-7.093679,2.155074,-4.930902,8.828371,5.968371],[0.549125,8.058858,0.745403,1.691598,-8.761455,9.181591,0.836308,-4.232423,2.341671,2.026532],[3.029733,8.525285,-9.099490,3.364829,6.531890,-2.896778,6.356874,7.665101,0.574173,-6.774935],[5.080717,5.607879,-0.694736,7.925115,2.901048,5.577996,-9.193182,-7.947410,-0.612838,6.299696],[-0.531810,1.577070,1.293942,5.961242,6.817063,-0.616358,5.669694,6.245464,3.658537,9.181517],[8.509521,2.023770,2.595254,-1.352440,-2.504840,3.627944,4.278758,-3.028678,-8.239883,-8.634624],[9.130619,-5.942871,-9.723048,-7.328149,-3.620601,-6.819540,-7.024165,-4.672910,6.619027,-2.527947],[-1.220515,4.923885,-7.030878,-4.927314,2.758568,-0.803946,3.239178,6.962847,-9.687866,1.543294],[8.014806,1.428095,-5.269831,3.967660,-8.735241,7.528042,2.435035,0.098190,-1.004950,-9.718758]],[[-9.900961,-6.640673,9.933154,7.258826,-8.622559,7.325249,-9.384380,6.965138,-2.952626,1.469647],[-8.725373,5.692396,3.766535,1.806684,-4.102687,4.753134,-4.689091,-3.730021,3.675368,-2.427814],[-8.207592,8.153620,-4.007070,2.021579,8.824072,8.087342,8.601657,7.976187,1.027926,-8.079902],[3.600058,-5.095011,-8.285917,9.129039,-7.812563,0.998651,6.993015,-1.598098,0.250420,-5.993968],[-6.357880,9.491123,-4.443982,-5.570112,0.824294,9.195818,-3.523338,9.453638,-9.446433,-9.581599],[-3.354795,-9.002810,-5.293682,7.536561,-0.603816,-9.935950,8.709514,3.303945,-3.612403,-0.326618],[-7.265859,-1.268703,0.262609,6.710446,8.330918,5.868845,6.805362,4.542033,-7.933919,-4.541094],[8.319980,9.415270,-1.955687,-3.753880,-3.724485,-0.396789,2.038673,7.867044,-5.876456,-1.624266],[-8.779591,4.657905,5.858004,1.658626,6.160250,3.911520,-9.880801,-6.821935,1.086916,3.303101],[8.382735,-6.727356,6.362381,3.367200,9.745003,0.053600,4.642510,8.647780,8.215329,-6.842177],[-4.232311,5.541652,-6.876792,6.206566,3.570417,0.250674,7.715459,7.113506,5.063712,-0.223214],[-3.703059,-8.885979,9.592172,3.792238,-1.771147,1.328415,9.433334,9.175845,-1.228060,7.169066],[-3.480458,-5.496100,-4.147623,-2.521865,8.786531,-2.330096,-1.059425,1.978916,4.145552,-4.427725],[4.472683,-0.525016,8.272384,-0.115553,0.709201,2.837010,4.452068,5.609543,3.267993,4.992217],[-9.932043,-4.157526,7.555638,-6.688157,-1.408566,-2.678318,7.306389,-7.594710,5.249296,-3.030582],[-4.994231,-4.029332,-1.293407,-0.677369,1.804041,-6.314182,9.101135,-6.852146,-0.756965,1.119468]],[[4.562402,-0.410032,1.758773,1.997152,-5.215879,9.371408,1.716997,-2.182605,1.612168,4.957503],[-6.062052,-5.243269,9.460403,-4.801095,-2.312844,-5.416927,-2.719175,-0.432673,-2.976217,-2.787505],[2.303075,7.052783,4.118103,-0.767228,-5.720522,2.220475,0.422863,6.419488,-0.549750,0.183722],[4.567662,-7.863446,-1.448036,0.650635,4.905380,6.959783,9.449463,8.705601,-1.445524,1.602349],[-7.842036,-5.509241,8.156589,-0.734100,7.483896,-8.418466,8.919644,-5.764171,1.931908,-5.164315],[6.935553,7.368948,5.739629,5.543528,5.055885,-7.202160,0.754925,3.296001,-4.066422,-3.132410],[5.888078,2.802737,-2.108879,0.571789,0.331678,-9.669096,3.429769,-0.348467,-2.950091,1.056526],[-7.846446,6.538917,-2.916379,-4.976745,-5.297451,-3.170527,2.418697,4.655704,-4.176330,2.124414],[-6.646867,-3.529610,-5.545634,-4.588215,0.195249,-9.661987,-1.745712,5.917791,-7.817306,0.128260],[6.728931,8.489960,7.486947,-3.856004,1.625457,-6.097435,9.034142,8.829945,0.853607,-0.304061],[3.628461,-4.243884,7.676750,-5.890796,-4.045550,-1.796085,-2.456416,-6.492684,-0.825240,7.231608],[2.856549,-5.103054,-0.678696,-4.446618,9.736247,-5.053621,2.899199,-3.808016,4.906735,-8.331656],[8.500496,9.184872,-7.063245,7.283302,-1.969342,-0.762111,-2.371015,-2.404557,2.296511,-0.818436],[4.498269,6.960166,-1.915118,4.777465,1.848821,3.835745,3.758658,-2.060245,-7.154433,-9.486563],[-4.241567,-3.531986,0.590059,5.850610,1.408917,-4.312786,6.568787,1.204453,1.944111,6.012580],[9.450972,7.006192,1.928363,-5.654024,-7.956075,-1.285045,-0.262922,2.437642,3.595954,-0.184089]],[[0.397838,4.833834,-1.136328,-9.710412,-7.289605,-8.223334,-7.797063,-1.860670,4.173738,0.507931],[1.498949,-5.435034,0.045773,-2.722932,5.839624,4.670691,9.249148,7.264892,-9.469754,6.374848],[9.851859,-0.409806,-2.188189,9.836487,5.219521,0.582739,-3.623111,-3.910672,0.289512,-5.984121],[2.297446,1.720548,-0.919397,2.505541,-1.976071,8.797156,-2.808402,1.387518,-0.392458,9.359466],[-1.480073,7.477293,-1.045480,-1.896186,-9.745986,-1.046625,-8.187394,-0.766610,-4.908272,6.893010],[-0.501165,-2.466455,-8.064192,9.785694,-9.909592,2.103924,6.055281,2.134637,-0.853834,-4.162902],[-4.876595,4.364435,-8.380930,-0.261955,3.744291,-2.810621,-3.898673,-6.443539,-0.048789,-0.340191],[-8.370548,3.101163,-8.644091,-4.053813,-5.851826,0.742999,8.360583,-8.161344,-6.676854,0.139585],[-6.913378,7.516654,-6.806861,-0.222094,-0.299313,-8.327947,-9.252195,-4.989375,-0.640347,8.620464],[9.267368,-2.003290,4.089126,4.019787,5.520590,4.627113,-0.893203,-3.359529,1.929955,5.433585],[8.472789,-8.722666,-0.776423,-0.431420,6.596052,4.530527,-1.533510,-1.460824,-7.296602,6.159493],[-5.745366,-8.697688,-7.480301,8.562169,5.592116,5.845949,-9.293294,-3.311053,-4.312257,-7.463500],[-6.035247,1.710912,6.333033,0.564094,7.590891,3.678581,5.757538,-0.882671,-1.473821,4.873899],[-3.078000,2.928410,1.535335,8.853302,-7.941690,8.695042,-7.595831,-4.292880,-9.983968,2.171668],[-0.261338,4.457234,-7.113552,5.779489,-4.626326,-8.008114,6.925570,3.364907,8.799301,3.482860],[-5.211746,1.747986,6.364788,-8.672494,0.133310,8.520314,-7.250870,1.824219,-9.230918,-2.084899]],[[-0.100137,1.686543,-3.187028,-0.500824,-4.339217,3.614824,-8.904410,3.443448,-1.089244,-6.896745],[8.834694,-0.735303,-5.798278,2.671738,-9.331572,5.435152,-1.812028,1.476915,-4.213607,2.872852],[8.829817,0.309510,1.153180,3.627503,0.375305,3.701697,0.190260,-9.421914,3.695940,-9.133101],[0.017145,-5.220832,-6.973197,-2.735092,2.058130,2.090484,6.592153,8.566559,4.984742,-6.547231],[-6.622629,-9.793581,0.124084,5.457394,-7.850400,5.497908,-6.588353,0.827937,1.880993,2.872368],[2.443436,3.694493,5.162474,8.697002,9.515834,0.345168,3.130579,9.442183,1.268774,-6.755543],[-1.703889,6.547582,0.884149,9.957258,9.579690,-1.379931,-9.479384,5.132557,-5.968187,-3.500055],[-6.566812,9.217898,2.900654,1.979298,7.574897,-7.104825,2.153091,-9.287610,5.789097,2.399286],[-9.191762,7.131060,6.081314,4.510657,-5.703563,2.739583,4.882136,-8.805716,7.316105,8.651911],[6.978719,-1.997784,-1.775625,-9.970355,-9.476360,-3.666057,1.975332,9.698070,-4.245608,-4.587445],[2.430058,8.507168,-1.435108,2.265863,7.413120,-8.358351,9.236181,9.514250,-0.369094,1.845029],[7.500324,3.606766,5.323346,5.250040,5.499680,-2.761057,4.339510,-9.734093,-7.264851,5.153911],[-7.142065,-5.934640,-3.936107,8.381468,1.081807,-8.467570,-3.796026,9.913311,-7.611325,6.989982],[-9.420994,-6.531787,-3.342772,5.035716,2.850590,-2.415346,7.603393,6.744489,6.546155,-6.330019],[9.883429,3.791304,-5.569633,5.599228,-4.142691,3.510063,9.142244,-1.970535,-1.860548,-4.887785],[4.748883,1.977596,2.031357,-6.424468,-1.052537,-3.781355,0.466836,9.814720,-8.035928,9.598017]],[[-5.627494,-9.552610,-7.370846,9.336663,-6.879673,-8.950478,-3.103825,-5.972572,-3.729300,-9.907184],[4.294974,-4.631059,0.027597,8.067300,3.078741,-2.499171,9.899126,8.727687,2.806688,-8.595127],[-2.945431,8.527489,-4.659847,-6.276637,9.880954,7.247268,1.443811,3.145175,-5.885235,9.989237],[4.004617,9.778987,-6.730980,7.393255,0.857050,5.764599,-9.458382,-4.120099,0.682841,-7.586427],[-3.914350,4.418938,1.013293,-6.400745,8.812535,4.282119,4.720923,6.205156,1.568899,9.197781],[-0.028400,-2.272924,-5.510662,-6.200525,-8.451765,-0.042145,-9.725216,-7.715653,-9.181859,8.683577],[-9.432544,1.563516,9.961050,1.896440,0.289719,4.200317,-5.286240,-7.010838,7.596638,-6.417279],[3.625945,-2.218130,-4.366024,-6.773305,6.242599,9.264485,-7.130416,0.038176,6.579209,3.394133],[4.223940,5.774246,-7.579854,-3.853952,-7.964497,1.272699,9.681444,5.208285,0.637420,4.449822],[-7.483704,-6.669316,2.276798,-2.785247,2.635165,6.054179,1.449081,-8.937870,-5.525712,3.725293],[8.617186,0.444553,-7.353016,-3.424894,-1.992820,-6.916845,-0.066498,8.482415,-8.593601,4.307575],[6.925615,-7.263812,8.362394,3.357098,-2.495941,-7.856516,1.011822,-0.474958,-4.503303,3.145278],[-7.647435,5.136123,0.071790,-7.657511,9.854171,2.431126,-5.520413,7.292388,-3.122815,-5.027222],[2.987865,-0.502719,-3.030557,-2.200900,3.148196,6.973366,3.775323,3.749212,7.156140,-7.247704],[1.791476,-1.850355,2.435458,0.548162,-1.111192,-4.085911,-2.458443,-0.923582,-5.675092,8.206764],[1.699627,0.744788,-2.360756,6.461563,8.970476,-0.242291,0.280468,-5.488476,-8.824893,-9.663891]]], dtype = "float32")#candidate|10252|(12, 16, 10)|const|float32
bop_10253 = relay.mod(const_10251.astype('float32'), relay.reshape(const_10252.astype('float32'), relay.shape_of(const_10251))) # shape=(12, 16, 10)
func_7886_call = mod.get_global_var('func_7886')
func_7887_call = mutated_mod.get_global_var('func_7887')
call_10264 = relay.TupleGetItem(func_7886_call(), 1)
call_10265 = relay.TupleGetItem(func_7887_call(), 1)
output = relay.Tuple([bop_10253,call_10264,])
output2 = relay.Tuple([bop_10253,call_10265,])
func_10280 = relay.Function([], output)
mod['func_10280'] = func_10280
mod = relay.transform.InferType()(mod)
output = func_10280()
func_10281 = relay.Function([], output)
mutated_mod['func_10281'] = func_10281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mod.get_global_var('func_2796')
func_2798_call = mutated_mod.get_global_var('func_2798')
call_10351 = func_2796_call()
call_10352 = func_2796_call()
func_4800_call = mod.get_global_var('func_4800')
func_4802_call = mutated_mod.get_global_var('func_4802')
const_10354 = relay.const([[1.445463],[-9.290434],[-3.939653],[-4.829969],[3.470180],[7.472333],[-5.147187],[-2.296956],[-9.263659],[-4.125333],[1.824385],[8.369999],[-6.888446],[-0.085529],[5.736863],[-3.899604],[-5.365235],[-1.870697],[-6.247525],[-3.577524],[-1.203230],[-6.172841],[-7.114181],[-1.035509],[-1.314083],[-0.010807],[2.158133],[-3.417267],[-7.690128],[6.421636],[0.672180],[-8.826156],[-9.479500],[-2.095854],[3.818726],[-2.447712],[-7.701337],[-3.151916],[1.623239],[-7.257482],[5.410869],[7.483957],[-5.390817],[-2.516136],[-5.285870],[-3.140400],[-3.851824],[-9.198221],[3.907424],[4.680800],[3.442719],[6.328340],[-7.283539],[-7.137777],[-0.665294],[7.550847],[4.881446],[3.539210],[-7.578870],[-0.756221],[6.449920],[-9.313537],[6.383894],[-2.427730],[2.496080],[-8.509508],[0.951559],[-3.513262],[1.567639],[4.330921],[0.756579],[-8.685295],[-6.987821],[7.913638],[3.167691],[4.085703],[-7.990978],[-5.294119],[-5.975394],[3.498861],[-5.967744],[-9.970295],[3.630432],[8.640677],[7.107203],[-2.011813],[4.333048],[0.166753],[-0.860418],[-7.135458],[-2.015905],[-6.304457],[6.958255],[0.580598],[8.858574],[8.384973],[-4.693403],[6.374150],[1.724273],[-4.995496],[-2.969465],[3.239146],[4.708494],[6.765409],[9.271825],[-6.384599],[4.205142],[4.240219],[1.333928],[6.400295],[2.071885],[2.116955],[-0.174540],[1.526029],[5.349380],[3.709231],[-1.694316],[-6.902817],[9.758932],[-6.276920],[9.507778],[0.246970],[6.219344],[-9.309499],[9.158050],[-7.622559],[-9.730997],[-8.419686],[-1.940655],[-9.470584],[8.680788],[2.145396],[3.219341],[-5.279582],[0.760326],[2.622656],[6.712598],[-1.575912],[4.843436],[1.105935],[-3.883918],[6.671836],[1.283265],[0.444157],[0.070884],[-9.710467],[9.135039],[3.992438],[6.071307],[-9.687040],[-2.204654],[8.827200],[-5.254641],[-1.082112],[-4.706099],[-2.813351],[6.671658],[-1.413480],[0.337074],[3.855998],[9.257669],[3.826724],[9.771522],[1.392056],[-1.567927],[-0.819438],[-9.000886],[-4.886512],[2.934849],[-1.565752],[8.898912],[-0.868820],[8.131591],[2.680943],[-6.140098],[3.829597],[-1.429000],[2.296648],[7.910999],[-8.044301],[-9.607104],[-4.229901],[2.357765],[2.087591],[-3.627372],[-2.192359],[-7.306684],[-7.164346],[1.318748],[-2.597663],[-6.426652],[-6.989240],[-7.063142],[0.745915],[-8.744664],[-1.178491],[-5.491635],[5.893910],[3.975898],[-1.874030],[2.925135],[9.861918],[5.903299],[1.633942],[-7.656447],[-1.736389],[1.830798],[7.839820],[-7.182347],[-0.013713],[2.869447],[3.553993],[1.336198],[0.450862],[9.850644],[-5.155228],[-4.129414],[-1.244633],[-2.323998],[9.714477],[1.744156],[9.218962],[-8.098093],[6.882737],[8.744726],[1.195336],[-1.545765],[-1.758430],[-0.524124],[-6.091613],[0.016840],[-6.928112],[5.349851],[5.262087],[-3.602978],[-6.653002],[4.033547],[-6.030523],[-6.523507],[-1.049699],[9.308987],[-4.906493],[3.692421],[-9.624122],[-3.161973],[4.332264],[3.431895],[-3.081052],[3.306136],[-5.272948],[-0.165373],[2.285153],[3.890527],[0.686578],[8.174792],[6.336202],[0.325114],[-6.962519],[1.992431],[-3.378136],[-9.784294],[7.551054],[6.726511],[-7.075181],[-2.688081],[-1.561701],[5.399210],[-7.806003],[-8.114432],[-4.038531],[0.850465],[-4.573300],[-0.029399],[1.389780],[4.604811],[1.733352],[-5.518331],[-1.483889],[-6.398332],[-8.258375],[2.556318],[7.208490],[-7.878922],[3.954537],[3.152209],[5.523768],[-5.136653],[-7.966516],[-6.048621],[-1.920909],[3.975503],[6.967216],[-0.933223],[-0.679758],[-9.962918],[8.570077],[9.938659],[-0.871621],[-5.756731],[-1.783482],[-9.459040],[5.169085],[-8.753022],[4.167284],[3.110205],[-4.646542],[6.871120],[-2.772122],[0.945730],[9.807553],[7.799335],[-9.662433],[4.614985],[0.936803],[-4.386680],[-3.926637],[9.782963],[9.057596],[0.997902],[-3.124353],[-9.376401],[0.710370],[4.921730],[-4.970234],[-4.661341],[-3.973688],[-5.337041],[0.080102],[-2.582692],[-3.431716],[-7.508144],[2.759190],[-3.707051],[0.299953],[5.723820],[-2.798403],[5.911037],[4.699679],[-9.209478],[7.611881],[4.348915],[-2.209616],[-9.169827],[-8.394252],[-1.223215],[-2.126515],[8.951149],[-2.053961],[-6.002201],[7.070363],[-5.967828],[-6.879107],[6.445734],[-6.189149],[8.920840],[6.166444],[8.704963],[-9.984048],[0.532730],[-4.226170],[5.734868],[-9.750453],[-9.152238],[-6.989565],[3.495792],[-0.351460],[-2.721471],[5.175847],[3.943655],[4.847114],[2.678993],[1.145113],[-4.679191],[6.960459],[-5.863985],[-1.436701],[-9.562306],[-2.229948],[1.319878],[6.076284],[-1.421781],[-9.248153],[-4.332552],[7.145933],[7.033832],[-8.341893],[6.855883],[-0.418274],[-6.122840],[2.238837],[9.899051],[-7.602712],[-6.161891],[0.273227],[-0.986921],[-1.355246],[-1.611642],[7.262051],[-9.930776],[-0.333161],[1.222420],[3.779257],[0.728696],[-5.128761],[8.579604],[-1.272068],[8.551534],[-8.743411],[-6.654537],[-0.835334],[-7.001244],[3.328381],[0.620101],[-0.125274],[6.460464],[-3.351459],[0.289990],[2.560191],[1.535163],[-3.318688],[0.509880],[8.463272],[-9.047143],[0.651549],[0.373375],[0.095881],[-3.007787],[6.412876],[3.952733],[-0.052148],[-4.934760],[8.084495],[-2.869877],[-9.163010],[-5.182145],[-5.702295],[-5.633743],[9.156984],[4.047602],[1.047507],[-7.367431],[-8.940362],[4.133036],[-6.380261],[5.903807],[-4.112902],[0.880129],[-8.235764],[-5.897602],[4.083307],[6.086329],[6.923243],[-6.569458],[-9.265032],[3.453310],[-4.727336],[-0.964520],[-7.234279],[-1.815251],[-1.489170],[7.151383],[-4.546814],[-9.900516],[-5.333392],[1.167687],[-2.554730],[8.814977],[-8.870345],[-0.412570],[9.512702],[-4.679884],[3.549883],[2.660324],[3.459868],[-2.608595],[3.402431],[-5.575946],[4.364842],[-0.057750],[3.322054],[1.898441],[4.813372],[6.529081],[-4.212268],[-3.761721],[3.184616],[-5.164292],[-1.330642],[6.433311],[9.645059],[5.646865],[2.765202],[-2.484104],[7.612418],[8.262203],[5.369165],[-1.445441],[4.558057],[-5.345481],[9.584146],[-3.360134],[-0.107923],[2.068114],[-2.096054],[-8.514838],[-8.623760],[-3.986437],[2.022300],[-2.065950],[-8.559242],[8.476417],[4.401783],[-1.126579],[-2.433382],[-2.706040],[5.246636],[-9.492908],[9.973088],[-2.462648],[-0.853726],[-5.181952],[5.357518],[4.661758],[4.616565],[3.483157],[0.413006],[9.912168],[-1.507703],[6.055881],[3.842684],[-2.185095],[-9.415449],[-0.775176],[-5.988854],[8.350975],[0.189280],[7.194817],[0.441020],[0.579616],[0.070235],[-7.732186],[0.423790],[6.156555],[1.917815],[-6.118740],[-3.349133],[3.617151],[-8.450312],[6.973272],[0.487386],[5.903297],[-8.956399],[0.704418],[2.552451],[-3.136556],[1.865600],[4.495570],[0.118201],[-1.606382],[-2.152698],[4.547792],[9.332041],[4.938664],[-8.726813],[-3.738014],[-2.786040],[-1.039414],[-1.586836],[-8.285742],[-9.606614],[-2.882982],[3.847951],[-2.663710],[-2.765336],[3.812003],[-4.180724],[-8.637305],[5.120561],[7.160860],[-1.583711],[0.580986],[5.163228],[4.201188],[0.589203],[-9.800106],[-4.816048],[4.995619],[-9.155894],[-6.888694],[-9.388683],[1.887246],[-6.384378],[-3.487691],[-1.542610],[0.786317],[2.592510],[2.756301],[-7.970192],[7.887180],[-2.615617],[7.144827],[-8.110716],[-0.248312],[4.885829],[-2.219122],[-1.013980],[-9.203355],[2.619060],[-1.527091],[-7.040498],[-0.558394],[7.074283],[-7.568532],[-2.756437],[3.465035],[1.713687],[9.721405],[-5.825546],[6.751540],[4.349961],[6.805911],[3.167476],[-7.258768],[3.689918],[-0.090227],[7.431408],[1.030785],[-1.935331],[-2.682748],[0.579540],[7.617181],[8.601484],[5.801025],[-2.988096],[1.353035],[-2.180306],[1.757079],[-9.670523],[-9.721083],[6.659788],[1.717296],[9.208031],[1.819228],[-5.046233],[-4.215548],[8.469919],[9.141143],[-5.251998],[-5.971901],[6.858913],[-4.494653],[2.986267],[3.375220],[-3.918553],[7.534971],[6.229966],[-6.910322],[7.824339],[-8.737714],[9.241557],[-9.305208],[0.108491],[0.051101],[-1.873008],[-3.530692],[4.378944],[3.680128],[1.795495],[-0.081414],[-3.586451],[8.553241],[-8.144413],[-3.827097],[5.730742],[-3.348384],[1.108791],[3.258376],[-0.362511],[-0.656839],[2.171269],[-5.370518],[-7.731752],[7.469203],[-9.526639],[6.785167],[4.071880],[-9.346965],[-6.521980],[5.556707],[-8.810342],[-7.778138],[-5.498523],[-7.196071],[7.698625],[9.834817],[4.561020],[6.943069],[6.903784],[2.893606],[6.402928],[-0.439951],[0.505654],[-6.834320],[9.333345],[5.998266],[2.240619],[8.026190],[-4.702679],[-9.615701],[9.541464],[-6.902673],[2.687987],[-2.165925],[-5.616998],[3.682571],[-8.922243],[-5.271453],[-0.326380],[6.778730],[-9.925647],[7.575228],[-7.665615],[-6.839276],[-7.812099],[-3.788193],[-6.370392],[9.943022],[9.554317],[5.500650],[8.066311],[5.137582],[-1.540511],[-7.053373],[-8.403706],[2.007948],[-6.479559],[3.471212],[6.475230],[8.432143],[-8.068614],[6.272371],[-3.708757],[6.451181],[-4.359929],[8.538826],[0.836377],[7.965535],[-0.867228],[-2.517762],[0.687383],[-7.999532],[1.687618],[6.425640],[6.351015],[-5.291148],[-5.345491],[-8.201443],[-7.986297],[-4.378551],[-2.302835],[3.283872],[-8.155129],[-4.262471],[-7.653623],[-7.228073],[-2.357045],[5.609364],[-9.757197],[-4.925590],[-7.518883],[7.554044],[7.651101],[3.335416],[4.801010],[-8.540241],[-6.073785],[7.824362],[0.379885],[0.494722],[9.063981],[6.895498],[-6.818945],[5.088075],[7.953633],[-1.440214],[-6.680112],[1.998957],[-4.174167],[-6.807508],[-4.641590],[8.740531],[-7.709887],[-2.742499],[-7.488689],[0.113515],[5.881408],[4.616328],[3.702942],[-2.767183],[4.111473],[-5.038789],[-0.667340],[2.026149],[3.999937],[9.967375],[-1.214683],[-2.393432],[9.041099],[-5.987689],[-2.960065]], dtype = "float64")#candidate|10354|(810, 1)|const|float64
call_10353 = relay.TupleGetItem(func_4800_call(relay.reshape(const_10354.astype('float64'), [9, 9, 10])), 0)
call_10355 = relay.TupleGetItem(func_4802_call(relay.reshape(const_10354.astype('float64'), [9, 9, 10])), 0)
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_10356 = func_2553_call()
call_10357 = func_2553_call()
uop_10359 = relay.tan(call_10353.astype('float32')) # shape=(9, 9, 10)
uop_10361 = relay.tan(call_10355.astype('float32')) # shape=(9, 9, 10)
bop_10362 = relay.greater_equal(uop_10359.astype('bool'), relay.reshape(const_10354.astype('bool'), relay.shape_of(uop_10359))) # shape=(9, 9, 10)
bop_10365 = relay.greater_equal(uop_10361.astype('bool'), relay.reshape(const_10354.astype('bool'), relay.shape_of(uop_10361))) # shape=(9, 9, 10)
output = relay.Tuple([call_10351,call_10356,bop_10362,])
output2 = relay.Tuple([call_10352,call_10357,bop_10365,])
func_10370 = relay.Function([], output)
mod['func_10370'] = func_10370
mod = relay.transform.InferType()(mod)
mutated_mod['func_10370'] = func_10370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10370_call = mutated_mod.get_global_var('func_10370')
call_10371 = func_10370_call()
output = call_10371
func_10372 = relay.Function([], output)
mutated_mod['func_10372'] = func_10372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5272_call = mod.get_global_var('func_5272')
func_5273_call = mutated_mod.get_global_var('func_5273')
call_10404 = relay.TupleGetItem(func_5272_call(), 1)
call_10405 = relay.TupleGetItem(func_5273_call(), 1)
output = call_10404
output2 = call_10405
func_10423 = relay.Function([], output)
mod['func_10423'] = func_10423
mod = relay.transform.InferType()(mod)
mutated_mod['func_10423'] = func_10423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10423_call = mutated_mod.get_global_var('func_10423')
call_10424 = func_10423_call()
output = call_10424
func_10425 = relay.Function([], output)
mutated_mod['func_10425'] = func_10425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9526_call = mod.get_global_var('func_9526')
func_9527_call = mutated_mod.get_global_var('func_9527')
call_10458 = func_9526_call()
call_10459 = func_9526_call()
output = call_10458
output2 = call_10459
func_10462 = relay.Function([], output)
mod['func_10462'] = func_10462
mod = relay.transform.InferType()(mod)
mutated_mod['func_10462'] = func_10462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10462_call = mutated_mod.get_global_var('func_10462')
call_10463 = func_10462_call()
output = call_10463
func_10464 = relay.Function([], output)
mutated_mod['func_10464'] = func_10464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10280_call = mod.get_global_var('func_10280')
func_10281_call = mutated_mod.get_global_var('func_10281')
call_10479 = relay.TupleGetItem(func_10280_call(), 1)
call_10480 = relay.TupleGetItem(func_10281_call(), 1)
func_3543_call = mod.get_global_var('func_3543')
func_3545_call = mutated_mod.get_global_var('func_3545')
call_10495 = func_3543_call()
call_10496 = func_3543_call()
output = relay.Tuple([call_10479,call_10495,])
output2 = relay.Tuple([call_10480,call_10496,])
func_10497 = relay.Function([], output)
mod['func_10497'] = func_10497
mod = relay.transform.InferType()(mod)
output = func_10497()
func_10498 = relay.Function([], output)
mutated_mod['func_10498'] = func_10498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10564 = relay.var("var_10564", dtype = "uint64", shape = (3, 3, 11))#candidate|10564|(3, 3, 11)|var|uint64
var_10565 = relay.var("var_10565", dtype = "uint64", shape = (3, 3, 11))#candidate|10565|(3, 3, 11)|var|uint64
bop_10566 = relay.minimum(var_10564.astype('uint64'), relay.reshape(var_10565.astype('uint64'), relay.shape_of(var_10564))) # shape=(3, 3, 11)
uop_10577 = relay.cosh(bop_10566.astype('float32')) # shape=(3, 3, 11)
output = uop_10577
output2 = uop_10577
func_10579 = relay.Function([var_10564,var_10565,], output)
mod['func_10579'] = func_10579
mod = relay.transform.InferType()(mod)
mutated_mod['func_10579'] = func_10579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10579_call = mutated_mod.get_global_var('func_10579')
var_10581 = relay.var("var_10581", dtype = "uint64", shape = (3, 3, 11))#candidate|10581|(3, 3, 11)|var|uint64
var_10582 = relay.var("var_10582", dtype = "uint64", shape = (3, 3, 11))#candidate|10582|(3, 3, 11)|var|uint64
call_10580 = func_10579_call(var_10581,var_10582,)
output = call_10580
func_10583 = relay.Function([var_10581,var_10582,], output)
mutated_mod['func_10583'] = func_10583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10125_call = mod.get_global_var('func_10125')
func_10127_call = mutated_mod.get_global_var('func_10127')
call_10600 = relay.TupleGetItem(func_10125_call(), 1)
call_10601 = relay.TupleGetItem(func_10127_call(), 1)
output = relay.Tuple([call_10600,])
output2 = relay.Tuple([call_10601,])
func_10613 = relay.Function([], output)
mod['func_10613'] = func_10613
mod = relay.transform.InferType()(mod)
output = func_10613()
func_10614 = relay.Function([], output)
mutated_mod['func_10614'] = func_10614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mod.get_global_var('func_3388')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_10673 = relay.TupleGetItem(func_3388_call(), 0)
call_10674 = relay.TupleGetItem(func_3390_call(), 0)
output = relay.Tuple([call_10673,])
output2 = relay.Tuple([call_10674,])
func_10676 = relay.Function([], output)
mod['func_10676'] = func_10676
mod = relay.transform.InferType()(mod)
output = func_10676()
func_10677 = relay.Function([], output)
mutated_mod['func_10677'] = func_10677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_10687 = relay.TupleGetItem(func_2953_call(), 0)
call_10688 = relay.TupleGetItem(func_2955_call(), 0)
output = relay.Tuple([call_10687,])
output2 = relay.Tuple([call_10688,])
func_10689 = relay.Function([], output)
mod['func_10689'] = func_10689
mod = relay.transform.InferType()(mod)
mutated_mod['func_10689'] = func_10689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10689_call = mutated_mod.get_global_var('func_10689')
call_10690 = func_10689_call()
output = call_10690
func_10691 = relay.Function([], output)
mutated_mod['func_10691'] = func_10691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6479_call = mod.get_global_var('func_6479')
func_6480_call = mutated_mod.get_global_var('func_6480')
call_10721 = relay.TupleGetItem(func_6479_call(), 0)
call_10722 = relay.TupleGetItem(func_6480_call(), 0)
output = relay.Tuple([call_10721,])
output2 = relay.Tuple([call_10722,])
func_10738 = relay.Function([], output)
mod['func_10738'] = func_10738
mod = relay.transform.InferType()(mod)
mutated_mod['func_10738'] = func_10738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10738_call = mutated_mod.get_global_var('func_10738')
call_10739 = func_10738_call()
output = call_10739
func_10740 = relay.Function([], output)
mutated_mod['func_10740'] = func_10740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7447_call = mod.get_global_var('func_7447')
func_7448_call = mutated_mod.get_global_var('func_7448')
call_10743 = relay.TupleGetItem(func_7447_call(), 0)
call_10744 = relay.TupleGetItem(func_7448_call(), 0)
output = call_10743
output2 = call_10744
func_10745 = relay.Function([], output)
mod['func_10745'] = func_10745
mod = relay.transform.InferType()(mod)
output = func_10745()
func_10746 = relay.Function([], output)
mutated_mod['func_10746'] = func_10746
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10751 = relay.var("var_10751", dtype = "int32", shape = (9, 7, 12))#candidate|10751|(9, 7, 12)|var|int32
var_10752 = relay.var("var_10752", dtype = "int32", shape = (9, 7, 12))#candidate|10752|(9, 7, 12)|var|int32
bop_10753 = relay.bitwise_and(var_10751.astype('int32'), relay.reshape(var_10752.astype('int32'), relay.shape_of(var_10751))) # shape=(9, 7, 12)
uop_10758 = relay.cos(var_10751.astype('float64')) # shape=(9, 7, 12)
output = relay.Tuple([bop_10753,uop_10758,])
output2 = relay.Tuple([bop_10753,uop_10758,])
func_10763 = relay.Function([var_10751,var_10752,], output)
mod['func_10763'] = func_10763
mod = relay.transform.InferType()(mod)
var_10764 = relay.var("var_10764", dtype = "int32", shape = (9, 7, 12))#candidate|10764|(9, 7, 12)|var|int32
var_10765 = relay.var("var_10765", dtype = "int32", shape = (9, 7, 12))#candidate|10765|(9, 7, 12)|var|int32
output = func_10763(var_10764,var_10765,)
func_10766 = relay.Function([var_10764,var_10765,], output)
mutated_mod['func_10766'] = func_10766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5054_call = mod.get_global_var('func_5054')
func_5056_call = mutated_mod.get_global_var('func_5056')
call_10871 = relay.TupleGetItem(func_5054_call(), 2)
call_10872 = relay.TupleGetItem(func_5056_call(), 2)
const_10874 = relay.const([-2.029897,2.088694,3.524813,4.116816,-7.013794,6.538124,-7.637993,-2.207059,-7.989410,9.944318,8.566805,0.101117,6.566069,-2.323812,4.099635,-9.196545,-2.249650,0.047937,0.571771,-4.034940,-7.082078,8.314047,-3.910362,1.516649,-7.578109,0.329329,9.274378,8.025999,-0.674953,6.358906,8.484385,-3.539625,8.650607,6.799919,-3.589726,8.817966,-0.265646,3.806385,-2.259967,0.252826,3.984619,3.231060,7.143754,5.258253,-3.080364,-9.555663,0.176483,9.839396,-0.774403,2.947808,1.705430,2.332273,2.910647,-3.755436,-3.428773,-3.990466,-3.040008,-9.773480,-9.820065,-8.074534,-1.844970,5.004414,2.047425,-2.267308,0.173178,-2.518970,-2.317467,-0.222420,4.445793,-4.326910,-6.578310,0.275921,-8.180406,4.290748,-5.496507,4.064857,-9.066576,-6.466247,-9.044873,2.297524,-3.834941,-0.610417,-5.195468,-8.043405,9.282718,0.919536,5.058438,-6.669427,-9.267534,7.924414,1.924119,6.803000,0.792901,7.686982,-8.543492,8.353488,5.576981,-3.987800,7.178212,6.763064,6.973813,-8.873224,1.345860,-6.681997,-2.769479,-2.135662,-1.757901,5.399122,1.491381,5.715683,-3.447968,-6.670788,-8.741187,1.143593,6.363927,-9.251761,6.463445,-1.823223,-6.684959,-9.506239,-6.780817,-6.856984,-1.009903,-3.204331,2.364669,2.285713,-5.827861,2.887330,-9.338372,-4.579507,7.426871,-8.339461,-9.807481,6.418433,9.922422,0.616189,7.593635,8.286675,-7.065962,8.321563,2.515118,4.958493,0.482044,3.912855,0.992954,6.607981,-6.633922,1.340823,-7.390405,6.549985,-6.418902,2.869666,8.665262,0.323243,-1.300336,9.598431,3.103801,-7.594207,9.493263,8.492268,9.475786,9.217879,-7.061653,-8.088346,7.241397,8.978465,7.842045,2.926244,5.428711,-1.262484,-7.587574,8.628200,-9.307320,-3.468727,6.288822,-8.804758,-9.529873,4.917600,-2.340603,-2.561213,7.148218,1.253901,-6.771617,0.750409,4.470532,-1.096038,2.136175,9.893242,0.239531,8.429657,1.477334,7.515415,6.600282,5.080214,7.462282,-4.760826,8.323707,3.296264,-2.315124,2.849258,-0.929774,1.909180,5.538104,1.283310,-2.158582,-2.694899,-1.985738,-9.434440,-1.950705,2.099551,1.936839,-4.477621,9.927255,-8.068620,7.723577,5.306518,0.478439,5.256510,6.180306,1.634151,-5.990878,-8.864402,-2.584172,-4.180162,-6.787999,-1.779057,7.235622,-0.022227,-6.225595,4.930003,-0.470709,2.586581,9.202161,-7.326183,2.967481,6.433758,7.810613,-9.727504,-0.757971,-8.532336,-2.515200,-0.012115,-9.012094,-6.997951,2.918363,-8.871971,-9.674495,-9.046206,-9.089718,-3.079821,-9.424728,5.432380,1.530841,7.787259,3.818023,-8.544094,-9.008197,5.859818,8.252946,1.833425,2.715362,-4.475837,0.250951,-9.152293,-8.925263,6.915076,-3.026245,-1.180948,-1.001158,0.784043,-4.332959,0.140804,-5.943965,1.813152,-2.834182,-1.059033,-0.251759,2.283460,0.145882,7.676096,6.408325,8.301534,-5.265593,2.178088,5.579090,-6.223589,3.767833,1.546547,-4.328254,0.645456,7.618330,8.112763,6.765719,-5.187198,-8.910496,-9.903995,-6.790977,3.624190,4.501144,-3.721171,2.061860,-9.310870,-1.538608,-2.321718,-2.544826,-6.431480,8.921041,9.019029,-0.973306,-4.775285,-7.920008,-0.331493,-5.688176,3.701276,8.357926,-4.095858,-2.827234,9.270651,-8.891303,0.714640,1.336261,6.392182,8.173158,4.677911,-1.729286,-5.152862,-7.639629,5.222639,-5.997943,3.327031,-7.236371,-0.920113,-2.412682,-8.156846,4.040105,-7.523345,1.825611,-6.493435,-9.919989,-9.952689,5.041222,2.612932,-9.422042,-9.359509,9.569706,-3.170293,8.402358,-7.867579,-2.582750,8.122262,8.576206,-9.195566,6.590178,8.116697,8.583655,-1.181461,6.634901,-3.242127,-0.616996,-1.366002,-1.388764,-2.500846,-9.789036,-0.236704,4.554048,-5.325710,0.604460,2.624034,8.185253,-3.103232,-5.079045,2.706948,3.399836,1.674223,-4.977085,4.114625,-4.358655,5.222128,2.065242,5.544343,0.695590,9.956757,1.856781,7.679987,5.984078,0.250265,-5.726677,2.650173,-2.718010,0.475490,4.200784,-1.876297,-3.207681,-1.972362,3.840110,-8.618335,0.334133,3.770759,-5.730943,-7.874864,-4.285118,-2.083083,-7.812847,-2.122750,-8.556418,-1.659158,7.991821,-9.810303,-8.467202,8.258823,-9.946415,-8.706228,3.124389,-7.237941,-6.272075,7.103716,-6.596067,8.730971,-0.624669,-1.746484,1.800838,-5.653412,4.160751,1.150734,6.497151,4.367694,-7.683525,5.641860,1.556062,-5.685162,-3.149468,-4.750677,3.871210,-5.897890,-0.500493,-2.750424,1.232074,-7.563475,1.439599,-9.811498,-6.994659,4.821265,5.835856,-3.943431,-5.237216,-3.710149,-6.888527,-5.038520,-5.345737,4.278589,6.675358,-5.125749,-4.324035,5.755413,-9.575702,-2.345806,9.120687,-3.444411,0.547563,7.360648,7.446136,-6.088111,-7.314453,9.490659,0.234607,6.258606,-0.704365,1.667667,-9.303363,4.892250,-7.642363,3.468461,7.376316,-0.682244,-1.227240,-6.584474,4.759082,-2.482197,4.528172,-0.495848,-8.606272,5.454424,-7.516292,-0.207618,5.187691,8.085714,8.312629,2.780272,-8.461320,7.983314,4.613053,-7.968333,5.600448,4.805027,-5.295778,7.541056,4.779193,-8.043609,-9.553922,6.240183,-2.505684,2.475752,9.404780,-5.962392,1.034094,2.344285,0.001853,5.988028,-2.775817,-6.227056,9.211536,5.307582,-9.015925,-0.731440,-4.082287,7.990164,-6.332660,8.670385,0.531779,-5.169636,4.235576,-8.147093,1.220051,5.973573,-8.480100,5.150509,-3.443379,-7.916127,-1.804380,2.700479,-5.542241,4.653689,8.877064,4.007297,-7.062759,2.752405,0.903867,-4.018120,-6.073420,-9.388931,4.645197,-9.771650,-0.586972,9.392391,2.937510,-8.506203,6.912603,-6.423065,-9.617854,3.896348,9.834633,-7.967388,-2.820059,-7.741002,0.150816,2.767045,-0.544532,-4.810784,1.256579,9.871222,-0.134706,-6.857621,4.621757,-5.143913,-4.503128,-5.822199,2.345164,-9.527038,5.212958,-9.045563,5.070057,-4.681797,8.076422,4.584691,-0.622519,6.217314,-6.957857,-6.522555,-0.336959,1.246976,-3.224488,7.694599,-7.606085,-5.223201,-9.701648,-8.565361,-8.093154,9.082703,7.937551,-8.532503,0.888371,-5.589584,-3.026958,9.881125,-8.936082,4.278495,-1.889012,-5.113069,3.029643,-3.398101,1.196201,1.940607,3.593444,2.370777,7.616114,-7.309200,6.874108,-8.943628,0.247847,-1.383232,-4.559102,5.625769,-7.351675,-9.615078,-6.492627,1.591968,7.426267,2.240229,8.735989,-7.065693,9.507604,9.938251,2.659026,-6.601863,3.819032,-5.844155,-9.847719,-2.486449,4.435215,-3.126265,-3.686695,4.320300,1.536570,-2.749806,9.078902,4.150859,-7.911673,7.916181,5.257336,-7.971017,6.838943,-3.786207,-1.246710,-3.991915,2.194928,1.647211,8.321249,-1.714795,-2.769874,8.041872,5.799689,-6.545331,-2.317334,4.052717,4.747110,-3.054628,8.190012,-5.143248,-3.823260,1.752882,-8.028591,8.266200,-2.282237,-5.285391,-7.597859,-0.834502,-0.238987,4.320956,0.021529,-4.710815,5.559979,6.672569,-7.113997,-8.083394,-8.094594,-8.804642,4.282221,-6.395615,4.230916,-8.078540,2.362964,8.664626,6.036948,-4.812540,-9.854767,3.493831,2.333856,-4.250032,-6.121566,-3.166087,-3.448930,4.138899,-4.046560,7.299196,-2.464322,-9.688253,7.489142,-4.531742,-1.329144,7.690148,2.551891,-3.999382,7.815784,-6.760915,-6.159249,-9.358799,-5.573860,-6.221367,-7.268031,-0.514522,6.762548,-2.686628,1.794739,7.071841,2.834839,-2.140428,0.926900,7.972776,6.941523,-0.124328,5.073876,-2.132666,4.341385,-7.094920,3.462130,-1.449750,2.912963,2.901068,1.071538,4.592434,4.443799,-6.950547,-0.464843,3.756567,1.870969,0.930797,-7.165122,-7.485014,-6.329520,5.140756,-1.095936,-9.227297,-9.506424,-8.734041,-5.611207,-7.331239,8.977949,-6.349866,1.949059,5.558772,-0.264025,2.982315,-7.077106,-5.347276,-4.607984,-4.730930,4.708763,8.940974,-2.428118,-1.905024,4.465262,-6.700779,6.558439,-8.486517,-0.839577,3.016343,5.448439,-6.863729,5.834629,-2.605612,-4.441577,-2.679571,-5.874180,-6.915293,3.554956,5.555140,8.033811,8.809150,5.875115,0.903915,7.892807,-1.299699,6.085423,-1.712903,1.984194,0.505970,-6.250941,0.646808,2.070497,3.678301,-0.971651,6.865167,7.791405,-3.359507,-9.642718,-9.758521,1.150694,-7.057924,0.770902,0.768766,-3.643519,7.474218,-6.723789,6.977837,-1.968431,-8.979340,1.510173,-6.395802,-7.028720,1.482131,2.165528,-3.975815,-0.507313,8.108736,2.451374,-3.482428,5.218870,-6.476217,3.313108,8.759763,8.910545,-4.208951,8.240812,9.071872,-2.063423,5.694385,-1.396596,-0.736047,-9.559407,3.090219,-3.843730,4.219575,3.313214,5.218230,3.289507,-1.995106,-8.174213,-5.031479,7.162502,2.189083,-2.621521,2.335621,-9.999037,-6.520544,-4.665818,-2.103346,9.985076,-2.127713,-7.330917,6.562508,9.871739,-2.187987,8.000379,0.206537,-8.186847,-3.082201,6.833778,6.061586,2.333941,4.122233,4.550450,-8.062295,5.910307,6.250723,-9.465618,-0.656609,-1.301208,5.543781,2.695431,5.518628,2.819559,-6.956818,1.743589,-1.580922,6.191698,-6.054291,8.667428,-1.021345,-7.257134,-1.971333,-4.659527,-7.031374,3.390940,-0.280348,-6.603289,-9.038860,8.882455,8.299453,3.080159,9.953872,9.099437,7.668851,-4.966764,7.918773,-7.719519,5.840348,-0.506418,5.828761,8.772563,-1.141606,6.602546,0.668540,-0.285713,-9.761359,-9.017332,-4.728685,7.691082,8.570079,6.231203,-1.336669,-9.445082,7.131055,6.898684,2.470600,-1.335011,7.989963,-8.928945,3.624537,1.352676,-7.446277,4.123620,5.755503,7.923030,5.455521,6.263499,-6.503908,1.914345,8.740529,-0.098365,-5.990001,-8.332586,7.729420,-9.647624,0.410502,-4.613142,-7.739238,8.149838,-7.352107,-4.685927,8.589173,-6.527907,5.266313,2.246709,-3.978179,6.265932,1.362580,-3.714774,6.217706,2.511877,-7.166569,-3.059559,0.906686,-7.213760,-1.546838,0.207700,8.716375,1.380880,-3.952782,7.264316,3.771949,4.892935,-2.766456,2.239149,-6.729601,1.454873,-3.828471,4.113291,1.952150,9.237448,-7.307820,5.121934,-8.000088,8.192539,-1.724583,-5.082998,5.289471,-5.458224,9.623684,8.782889,-0.488834,2.361638,1.189152,-7.675492,-7.532226,-6.767232,9.394670,-0.103964,7.507369,-3.011781,-1.253185,4.859004,-7.701113,-8.505172,0.102893,9.856481,-2.862114,-0.755848,-1.223832,-8.419539,-4.385377,1.194250,-7.789562,-8.977225,2.972603,1.959330,8.768368,-1.937329,-5.956967,0.209168,-3.297523,8.219835,5.926716,-2.245479,4.052962,2.903401,-3.545017,5.810487,-6.968232,-1.407110,-4.965136,-5.633437,-5.726627,4.540001,4.103080,-9.650062,2.875591,-0.413651,4.569792,-3.101789,4.589022,-2.850932,0.338405,-0.247415,2.674688,4.875034,5.444180,0.655612,-6.541418,-0.162791,-8.714972,-9.732269,1.769294,-2.396608,4.742979,1.038751,-3.212386,-3.596261,4.728891,-1.640475,0.404175,-1.458972,5.299854,-6.161919,-2.933379,1.875608,5.047939,-4.258588,-1.667469,6.830709,-7.120511,-7.885984,2.359401,-0.217817,9.061352,0.998752,-1.774814,0.819589,-7.238933,-8.343172,6.108508,4.267857,9.635418,4.524190,-3.082515,5.833200,5.591367,-7.999166,5.811404,5.686495,7.511129,9.166795,-9.162596,0.942079,1.722958,5.645936,3.056194,1.682490,-6.411901,-5.622897,-7.114744,4.332203,0.144548,-4.032985,-3.860371,2.983110,-0.905525,-0.124521,-9.534364,2.663596,4.616208,-3.581470,8.897998,9.072717,-0.296522,4.924429,1.725427,-7.610641,-7.226869,6.994544,-1.484254,-8.623464,-7.536924,5.121949,-1.731787,-3.142977,5.512383,-8.032988,-9.513540,-0.314664,0.193927,1.729214,2.625125,7.663309,-5.067152,-0.313603,0.361310,-7.202465,4.087179,-7.136878,-9.946854,6.893417,2.654381,2.853152,7.067141,-8.140913,7.709736,-7.159721,3.156366,-0.669793,-4.532203,-7.642210,0.470971,6.266671,-2.581984,-6.452293,-0.667215,-9.308306,1.919746,-1.291230,-6.396691,5.075783,-3.056088,-7.067749,9.613627,-2.378150,0.970950,6.222640,6.543868,-8.125550,2.561210,-5.972523,-9.631564,1.483169,-1.790748,1.171859,7.211652,-9.450269,-2.187477,8.946860,2.810334,7.493399,4.598560,2.419949,-8.073843,-5.428316,-1.231943,8.400045,-2.776902,-9.380377,-4.657906,7.823634,-4.307104,-0.129092,-3.662804,-7.403196,6.204331,-4.247956,0.840847,7.204587,2.737940,7.489787,-9.151909,2.325040,0.018890,-8.535617,5.568145,9.518505,5.417332,-3.265339,-3.483292,-3.271314,-4.500307,-8.315223,-3.725408,6.637643,7.311385,-3.415040,-6.497739,-1.337437,3.723829,8.556581,-8.660813,1.200329,-6.992235,6.559778,-0.534857,-6.998308,2.332855,-8.273327,-3.158370,7.232984,-3.102912,-8.792324,7.287207,1.180179,6.623702,5.920412,0.710228,2.249919,-2.175208,-1.482966,-7.413587,-7.899548,4.904732,-3.483485,-5.297039,-9.082373,5.266479,4.504829,7.634384,1.661994,-8.837541,3.273116,7.876217,7.578702,0.042070,2.731626,5.015401,7.025532,-9.872649,-8.524202,-1.598186,-9.500104,4.167127,-6.646737,-4.890352,5.937850,0.183590,-5.116033,-0.145521,-8.097337,-2.405400,1.373123,4.951751,-3.758751,-3.539304,4.631026,3.107796,-8.037285,9.747435,-9.738672,2.631420,-9.118732,-1.683465,3.626381,9.174905,-3.196677,1.358845,6.481019,3.342569,2.896152,-4.801195,-1.467853,-5.834433,5.969172,6.721321,2.503186,3.754206,7.244820,-8.692356,-5.096989,1.938827,4.417385,5.124581,8.652668,8.423537,-5.976190,6.945894,0.674520,-0.626793,-8.135562,-2.546768,-4.601100,6.630570,7.513516,-5.841672,7.219009,3.333310,8.629886,7.227671,4.027182,4.860848,2.778496,-5.151904,-6.749872,5.470386,-8.707044,-0.214547,8.842620,8.458942,2.783003,3.518445,9.757285,-4.905774,0.259183,0.560450,-2.166264,-9.055756,-3.593989,-0.321424,0.250592,2.685716,-3.300080,-4.197214,0.180238,-4.495016,-0.009205,-2.416159,-6.798601,-6.723882,-1.624346,-9.953367,-2.863618,-8.360508,5.646706,4.152438,-3.490080,7.945144,-1.031454,5.623629,2.736012,-1.152132,3.739645,2.188840,8.848344,9.458955,9.227554,-9.755282,-3.364277,-5.776643,-5.599691,2.085527,-6.829471,4.804236,-5.721280,1.557611,-8.244654,8.573305,-7.817430,-7.314159,-2.484503,0.507008,0.293747,0.275969,4.314553,-8.669061,3.069022,-6.437960,-4.325101,-8.621404,-9.536622,-1.545652,-7.974222,-2.016504,-0.186572,-8.547583,-8.837642,-2.834092,-2.089737,-7.804174,-0.960028,7.490784,-1.493529,8.610425,4.630387,2.268641,1.302543,-0.882803,-0.902111,-3.525756,5.070217,9.284638,5.306881,-7.846364,-3.516671,1.625464,1.069792,-4.932121,-3.477394,-5.022618,-3.748489,-4.243240,3.706785,3.355951,3.015600,-7.252706,-9.238268,7.619195,3.579202,9.386783,-2.021198,-8.516734,8.339042,6.280087,8.521663,5.219970,6.583776,9.513324,0.430962,-7.088853,4.488901,8.214172,6.040193,8.585419,-7.358819,-9.480814,7.000270,-9.469173,8.767408,-5.290321,5.815887,-0.468217,5.467447,7.422734,-0.902385,-3.785875,-9.258220,-2.805706,-0.321079,5.595544,-6.768156,5.628892,-5.070319,0.047961,4.415890,-7.922090,1.132581,3.334900,7.855900,5.146777,1.712072,3.553650,-3.438036,8.967692,0.686457,0.263913,-0.160070,1.523742,6.771055,-9.107710,-0.549705,3.562169,-5.611194,2.654219,-4.653193,4.524579,-2.885372,4.316668,-7.641110,2.928472,8.508998,-1.349932,9.011171,0.704118,-3.454950,3.012628,-3.013930,-5.107167,8.593149,-2.429004,9.208335,8.140646,-4.974668,-5.504363,7.623434,-6.400329,-8.863960,-8.551335,-2.842961,-6.857020,-7.457772,-5.514425,7.245524,0.797448,-8.814831,-8.950217,3.963251,3.997655,-4.744454,1.977674,1.851535,0.780921,-9.518680,0.218081,6.021757,7.543241,3.685837,-3.411176,-6.461617,7.432638,-2.990248,-9.165669,-2.279749,4.134277,0.740948,-8.831039,6.943625,2.246484,-9.394415,-8.953241,-9.756781,5.727677,5.335293,-9.143929,8.109042,-3.210590,7.064131,6.529451,-6.822466,8.069132,9.934746,-6.155001,3.530686,-8.256502,-3.084452,5.316892,-5.609888,-3.366969,-1.537270,-2.385833,4.320277,0.498715,3.783907,-6.997631,-4.028929,-3.051811,9.484200,-9.750626,-3.767850,-6.704785,4.169700,0.890133,-9.217937,-7.232905,3.908908,-3.474043,5.002705,5.748870,2.707501,0.130068,3.214033,2.902930,-3.783947,2.212621,4.984604,-7.090537,2.725944,-6.940458,5.384265,4.035353,7.801205,2.325684,3.093835,-5.204556,-7.990352,-2.699810,6.889171,0.939740,8.886452,-1.577961,-4.672893,-4.515836,-4.390332,-1.634012,7.741482,-6.464067,2.001932,6.594467,9.722264,5.380438,2.706606,0.763624,-5.046157,3.933350,-8.399773,-0.361361,-9.472182,-2.926280,5.257939,-8.045490,-2.812853,-4.779261,8.971265,5.467663,4.346572,-7.895397,-0.451816,1.083445,-0.923498,8.654468,-9.429967,-2.322326,-2.077191,7.026834,1.820053,-0.569970,8.380300,9.367860,-7.225993,9.558774,-6.700551,0.197314,9.280371,6.535590,9.051165,-6.153162,-5.954277,-6.107793,-9.424556,-1.062195,0.442680,3.090512,7.450197,8.830857,8.915341,7.302892,0.462421,3.839470,3.697519,-2.735308,6.947081,-2.764910,2.102936,-3.511631,6.709637,6.048497,5.535656,3.405995,-7.823840,-1.803005,6.753415,8.437219,-8.852085,3.143709,8.181505,-3.019487,0.335939,-3.290051,4.280538,-4.460002,0.221765,-6.234104,-3.714682,-8.725497,-0.262737,0.471783,-7.696616,-0.385802,1.198449,6.395743,-3.507418,0.380212,-5.730616,-5.131241,-4.190086,-1.659034,1.352185,-9.052263,-4.051829,-8.879646,2.267801,-6.690837,-4.721315,0.728414,0.351815,-7.154720,-1.364939,3.501008,0.350175,1.871884,-3.877430,9.836767,-2.426876,9.173405,-9.635944,0.142471,0.809874,-8.529893,6.481464,4.629117,-1.694777,-9.609787,3.482764,5.653770,1.113210,-5.970830,0.732366,9.594388,9.604987,-4.960536,-3.440325,-9.806696,-4.339644,0.390578,-8.737265,-2.006987,-8.211989,1.549792,-2.039129,-4.515383,1.044974,1.847139,0.696474,-7.072692,1.832359,-9.212064,8.177124,-6.639452,3.606525,9.880687,-9.757376,-8.425852,-1.335795,4.074387,2.865572,-8.025574,-8.960932,8.304072,4.877697,2.225491,-5.695151,-4.629376,-6.210551,6.384832,8.045572,5.466682,-6.456569,-5.873758,2.077002,7.397720,-9.345357,-6.329207,0.593743,-3.984727,4.472855,-3.852165,9.174053,2.112356,7.661587,-8.288074,1.930577,-7.974697,0.656187,-5.067404,-7.858396,8.246050,-0.756810,-1.016942,4.350756,-8.304737,-1.877536,8.625949,0.754577,2.895706,6.223169,0.479700,2.604804,9.798434,2.666688,7.039501,7.892662,-5.149475,-7.453712,-9.798316,8.708446,2.857796,8.592074,4.673346,0.210406,0.074407,-7.468662,-4.977802,-8.755338,3.959471,6.717319,-2.573563,2.555620,-3.076740,4.107748,-0.926367,4.702009,-2.532235,-0.738185,-2.628537,-4.076079,-8.997043,-0.777257,-6.566803,-7.914917,-4.006259,-7.703514,5.270381,9.648457,-9.191286,-0.669834,4.287710,-7.363092,-3.643444,-3.532634,-5.159922,-9.945753,1.123328,3.603808,8.802187,9.544613,-3.820711,-4.440810,-2.993293,1.226646,-9.674336,3.362610,-0.140939,3.692686,-4.945209,9.354687,-1.597268,3.267403,-4.072700,4.148810,4.545272,-5.597547,4.600133,9.240565,-7.760669,-1.635087,-2.837179,9.039630,0.248669,3.755148], dtype = "float64")#candidate|10874|(1859,)|const|float64
bop_10875 = relay.left_shift(call_10871.astype('uint8'), relay.reshape(const_10874.astype('uint8'), relay.shape_of(call_10871))) # shape=(1859,)
bop_10878 = relay.left_shift(call_10872.astype('uint8'), relay.reshape(const_10874.astype('uint8'), relay.shape_of(call_10872))) # shape=(1859,)
bop_10888 = relay.add(bop_10875.astype('uint16'), relay.reshape(const_10874.astype('uint16'), relay.shape_of(bop_10875))) # shape=(1859,)
bop_10891 = relay.add(bop_10878.astype('uint16'), relay.reshape(const_10874.astype('uint16'), relay.shape_of(bop_10878))) # shape=(1859,)
output = relay.Tuple([bop_10888,])
output2 = relay.Tuple([bop_10891,])
func_10892 = relay.Function([], output)
mod['func_10892'] = func_10892
mod = relay.transform.InferType()(mod)
mutated_mod['func_10892'] = func_10892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10892_call = mutated_mod.get_global_var('func_10892')
call_10893 = func_10892_call()
output = call_10893
func_10894 = relay.Function([], output)
mutated_mod['func_10894'] = func_10894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10955 = relay.var("var_10955", dtype = "int32", shape = (10, 13, 1))#candidate|10955|(10, 13, 1)|var|int32
const_10956 = relay.const([[[-3,6,1,9,1,9,6,2,3,8,7,-3,-6,-7],[-10,-1,-3,2,8,9,9,-1,-4,-2,4,-8,-3,3],[3,-8,-8,-5,9,5,9,5,2,2,10,4,-4,-6],[-3,-4,-1,-9,-5,-2,-4,-10,-10,8,2,9,3,-7],[-6,-2,3,7,-10,5,-3,-8,1,-7,-4,5,6,-9],[7,-4,10,-6,-3,7,9,9,-8,-10,-8,1,3,-9],[10,-8,3,-4,9,5,2,5,5,-7,4,1,-4,3],[10,8,7,1,-9,2,4,10,-1,-9,-3,-1,-4,7],[7,-7,2,-9,9,-1,-4,8,2,3,-5,2,-1,-4],[-7,2,3,-3,3,3,1,-2,-7,-2,-10,-2,9,4],[-1,4,-1,4,-6,-6,8,-10,-3,5,-5,-7,-3,-10],[7,4,-2,5,-5,-5,5,-9,-3,5,3,4,-6,3],[-3,4,8,-7,-6,-2,-3,-3,10,-5,-1,9,-10,-4]],[[-7,6,3,-10,-7,9,-1,-6,10,5,1,7,8,-8],[10,-5,-10,-4,2,-1,-1,4,-3,-6,-2,-7,1,-5],[-9,-9,4,5,-6,8,-3,9,-1,-7,5,-9,4,-2],[-9,6,-9,-4,-9,-10,8,-3,8,6,-4,6,-6,-8],[3,7,-6,-10,6,-1,-3,-9,8,-3,-3,6,1,1],[-6,-10,-1,-1,-10,4,-4,-10,-6,9,3,10,2,5],[7,3,-7,6,-1,-4,7,6,5,-2,9,6,-7,7],[-4,5,10,-9,-2,-6,-2,-4,10,-4,-8,-7,8,-8],[-2,4,-9,1,6,8,-3,-1,-5,-5,4,10,-4,10],[2,8,-3,4,-1,3,3,5,6,-2,-2,-5,-4,10],[-6,1,8,-4,2,-3,10,-10,7,-10,5,3,-7,-4],[7,-1,2,-1,-1,-3,2,6,2,-7,-3,-2,-9,6],[5,-6,-1,5,9,6,-2,1,-5,-10,-4,5,-3,6]],[[2,-7,1,1,-2,-9,-4,-9,4,-4,8,7,10,9],[-1,-3,-8,-1,-6,3,1,-7,7,-3,9,-3,1,8],[3,3,4,-8,10,3,4,-4,-10,-9,-8,-9,2,-3],[-3,2,-6,-10,5,-3,9,-1,-4,7,-5,-10,-1,-9],[10,-3,2,-8,4,-1,8,-6,-9,-2,-1,6,7,8],[-2,10,10,6,-1,-10,-4,8,4,1,-10,-8,-3,-8],[8,-8,-4,6,-2,-3,9,-1,-4,-7,10,4,10,-2],[6,-3,7,-9,-2,4,9,8,-3,-3,6,7,-9,-10],[3,-3,-2,-7,10,10,3,5,-1,2,-3,-1,6,-7],[-9,5,8,2,4,1,-7,7,4,4,6,1,2,10],[-10,-4,-5,2,6,-5,5,-8,8,-2,9,2,-3,-5],[-5,-4,4,-3,-8,-2,10,9,-7,6,2,10,6,-7],[2,-4,8,1,8,1,-10,-2,-2,6,8,7,-1,-1]],[[8,6,1,9,7,-1,8,1,-5,-8,6,8,-7,-5],[-1,-5,-4,3,8,5,3,-2,-8,-9,-8,1,3,9],[4,8,10,-8,-4,-10,-10,10,2,6,-5,-4,6,-8],[-7,-8,-10,-8,-2,5,-5,10,1,-3,-4,-5,-4,3],[-4,-8,7,-4,4,7,8,4,6,-3,6,4,-4,8],[-7,7,-1,6,3,-4,2,5,-3,7,4,8,5,7],[-2,7,-5,3,-9,3,9,-9,9,10,6,3,7,-10],[-5,2,-2,-7,3,-3,8,-4,-3,7,8,6,-7,4],[2,8,10,3,9,9,1,-2,-7,-8,-9,4,4,-3],[-1,-7,-10,-8,-5,10,-2,-5,2,2,6,-10,4,-4],[6,-3,6,-7,5,5,-8,-5,6,3,-1,-7,-6,-4],[1,-1,7,3,4,-8,-7,10,-9,-8,-8,5,10,6],[9,6,-8,-8,-3,-8,2,5,-10,9,-3,-6,-1,-10]],[[-3,5,-6,3,-10,-9,-3,-9,3,-8,-2,-4,-5,-5],[3,7,4,9,5,-2,-2,-9,7,4,3,-5,-1,9],[9,-4,1,-10,3,5,-1,4,-9,10,10,-8,-8,-7],[9,-4,-10,-5,-10,-8,-2,3,-3,9,-4,9,-5,-9],[7,-1,-2,9,5,-4,6,-10,-6,-4,-1,-2,1,1],[6,10,-5,-4,-8,-8,-6,8,4,-4,10,-1,2,8],[-3,-1,8,-6,2,8,2,1,-8,-2,6,5,6,6],[7,1,-4,1,-4,3,-7,-6,-6,-9,-7,-9,8,8],[7,-10,-10,4,-5,-4,-4,-5,-9,-9,9,9,10,-8],[1,-2,9,-5,-5,5,-6,9,7,8,-6,-10,9,-8],[9,-7,1,1,1,1,4,6,-6,-9,-8,10,6,-6],[1,-3,-1,3,10,-3,9,-7,-1,-3,7,-1,-9,-8],[1,1,1,6,-4,5,4,-7,4,-6,-8,-4,-8,-9]],[[-8,-3,4,-2,-6,6,-9,6,-8,6,6,7,-10,-8],[-7,-5,-7,-3,2,5,-6,-10,3,-8,-10,5,6,-9],[-4,-5,7,6,-10,-4,-6,2,1,9,-9,-4,-3,4],[-2,6,-3,7,-2,-1,-3,7,-3,1,3,7,7,1],[-2,-9,-2,-8,-7,3,9,-4,-9,2,-9,8,-3,6],[-6,-9,-3,-3,-5,-10,-8,-4,6,-9,-8,-9,-4,-1],[-1,6,-3,8,-7,-3,-3,-7,-5,-8,-6,8,-8,2],[-5,10,1,5,-2,2,-7,-4,-9,1,-1,-6,8,2],[2,-9,-9,5,4,4,7,9,-2,-2,3,4,4,10],[6,9,8,-7,6,4,3,10,-5,-4,2,-7,-1,9],[-5,-7,-3,-10,-6,-7,-10,4,3,3,-3,-5,5,9],[5,3,-9,10,9,-4,-7,-7,3,10,7,4,-4,-2],[10,-7,1,6,4,-1,-6,-8,-7,-1,10,8,7,-5]],[[10,-10,-1,9,8,-2,-1,-5,-10,-1,-2,1,4,-9],[-3,3,-4,-6,-3,6,8,6,-3,-6,8,1,-10,1],[-2,-8,-5,-8,6,-3,-1,-10,9,10,-9,-4,-6,6],[-7,-1,-7,6,9,-2,-10,-6,6,-9,4,-6,6,9],[-8,7,1,-6,8,-2,-6,4,9,-6,-5,-1,-4,1],[10,-3,2,4,9,-4,2,4,10,3,-7,6,3,1],[6,-9,-2,5,-4,9,-6,10,9,-5,1,8,-4,2],[-4,5,4,8,-8,-2,-1,6,4,-5,-10,-9,8,-1],[-6,2,-5,-1,2,-7,-4,3,-9,-3,2,3,-8,-5],[2,3,-8,-7,3,-1,1,5,6,9,6,-6,9,2],[-4,6,-4,3,3,6,9,-2,5,6,-7,7,-6,-4],[4,2,5,-3,8,-3,-7,-6,-6,9,-6,-3,9,-6],[2,-7,8,-4,9,3,3,-8,-5,-7,5,-2,-10,-3]],[[6,-3,1,-5,-1,-1,-6,8,10,-10,-2,-6,4,7],[-5,-4,-2,-9,6,4,-3,-10,9,8,7,4,6,6],[8,-5,-6,1,-5,2,4,-1,-3,8,2,-1,4,8],[-7,-10,-10,5,-4,-3,-9,-10,-3,2,3,-7,-5,-4],[8,-1,-6,8,-5,-1,3,8,1,5,-1,1,8,-1],[-8,6,-6,-9,-7,8,1,-3,-5,6,-8,-1,9,-7],[10,4,2,4,-6,-10,-1,8,-10,-8,-1,1,5,-10],[-4,5,-4,3,-10,4,3,10,-4,8,9,-9,10,2],[1,-4,-1,-10,10,3,-4,8,2,-3,-8,2,-9,-10],[10,6,7,6,-1,-7,4,10,6,7,-6,6,-3,3],[-1,1,-6,1,-9,5,7,-10,9,-3,10,5,-10,1],[-3,-5,7,4,-3,1,3,-9,-6,-3,10,2,-6,5],[-1,-1,-1,7,-10,-5,5,2,-2,10,1,6,1,-1]],[[-8,3,5,4,-10,-5,-1,3,8,7,6,9,3,1],[5,1,10,-1,-9,10,7,10,-8,5,6,-6,-1,4],[-2,10,-6,-9,6,-1,6,-6,9,-10,-7,-4,8,9],[-7,-5,-5,4,-5,-8,-6,8,10,-6,10,-7,2,-1],[-1,10,-3,-5,-10,-2,4,8,10,-4,9,-9,-6,5],[-8,-8,9,5,5,-2,8,1,-7,4,6,6,-7,-4],[3,-1,-10,-8,-9,10,-2,10,-10,6,2,3,-9,3],[5,-1,1,-9,-4,-9,-3,-8,5,7,-1,-3,6,-10],[6,-2,-5,1,-8,-6,-9,-5,5,-7,1,4,-10,6],[-4,10,-4,-10,9,6,2,-10,-8,-3,-10,1,-8,-5],[5,-4,-10,6,-9,2,6,5,-1,-8,2,9,-4,3],[-9,-10,-2,1,1,5,-2,9,-6,-5,-1,-3,6,7],[4,2,10,8,-8,-3,6,10,4,9,4,-6,-9,-2]],[[-1,-5,-10,-10,10,-2,9,-9,5,7,7,-9,2,-9],[-4,-5,7,2,6,-8,4,-7,7,-9,5,2,-4,4],[8,-6,-4,9,-1,-1,-5,-5,10,1,8,-2,10,5],[-6,-9,-4,-9,5,10,-9,5,9,-2,-2,8,6,2],[-3,1,8,8,-6,10,4,-9,2,-6,4,2,2,-5],[-2,-4,6,8,7,5,2,-5,7,9,10,2,3,9],[6,6,2,2,-7,-3,-4,-8,-6,-3,8,4,-7,-1],[10,10,7,3,7,-9,-6,9,-3,-8,-9,-3,5,5],[6,6,10,-4,-3,-8,2,5,10,-2,10,-3,5,5],[3,-3,10,7,-7,-6,-5,1,2,9,-9,-6,-3,9],[4,7,6,8,-1,-3,-3,-9,3,-10,-5,8,2,-4],[-2,-2,-6,4,2,5,7,4,-9,10,2,-7,-1,-10],[9,-7,-4,7,-1,-10,-3,6,5,3,2,7,5,10]]], dtype = "int32")#candidate|10956|(10, 13, 14)|const|int32
bop_10957 = relay.subtract(var_10955.astype('int32'), const_10956.astype('int32')) # shape=(10, 13, 14)
func_5502_call = mod.get_global_var('func_5502')
func_5504_call = mutated_mod.get_global_var('func_5504')
const_10965 = relay.const([-4.448533,8.690410,-5.321119,1.751306,6.974475,-0.152414,-2.704250,-4.951605,-0.832525,9.287068,0.446654,-5.145397,5.074216,5.669947,-6.989523,6.105175,7.761635,-5.131364,5.771033,-3.120124,6.297792,-6.916966,-3.420025,3.548228,-0.558495,9.493685,-8.591525,6.816978,8.270777,-4.192054,1.344903,1.990646,-3.487380,-3.404977,1.254004,4.308222,-5.830977,-6.935320,-0.111430,1.162166,-2.052579,-8.918265,8.642935,1.219885,-4.553967,-0.104695,2.841839,9.506597,0.126043,4.207035,-8.685612,1.817609,-4.495706,3.862370,2.611888,0.528553,8.820440,3.507331,3.917613,-1.471950,-3.257041,-8.025996,-4.157073,-4.505266,4.856024,-5.325249,-8.272588,-9.948058,9.598096,7.377348,1.029953,7.611667,-4.698883,8.177161,4.560477,-5.186259,-2.634262,3.746864,-7.119066,-9.709547,8.233707,8.930145,-3.107330,-5.144119,6.328400,7.584858,-7.343501,1.433642,4.993826,1.674536,-6.775056,-8.798173,-5.458773,4.822461,4.550938,-9.659167,-6.444470,-4.654181,-8.121144,9.436849,-3.674552,-6.804888,9.608380,-1.658048,-1.584836,5.598393,8.551380,3.060337,5.759430,-9.354574,-5.230982,9.751221,-6.693624,5.033207,-5.226487,-0.365306,3.494191], dtype = "float32")#candidate|10965|(117,)|const|float32
call_10964 = relay.TupleGetItem(func_5502_call(relay.reshape(const_10965.astype('float32'), [1, 117])), 0)
call_10966 = relay.TupleGetItem(func_5504_call(relay.reshape(const_10965.astype('float32'), [1, 117])), 0)
func_3958_call = mod.get_global_var('func_3958')
func_3961_call = mutated_mod.get_global_var('func_3961')
const_10973 = relay.const([[-8],[-7],[-1],[9],[8],[10],[7],[-10],[8],[-8],[10],[1],[4],[-2],[7],[-10],[-10],[-6],[-6],[5],[-4],[5],[-2],[-8],[5],[-7],[-7],[-5],[-8],[6],[3],[-10],[10],[6],[-8],[-1],[5],[-4],[3],[9],[-9],[2],[-7],[-5],[-4],[-2],[-6],[1]], dtype = "uint32")#candidate|10973|(48, 1)|const|uint32
call_10972 = relay.TupleGetItem(func_3958_call(relay.reshape(call_10964.astype('float32'), [12, 15, 4]), relay.reshape(const_10973.astype('uint32'), [48,]), ), 0)
call_10974 = relay.TupleGetItem(func_3961_call(relay.reshape(call_10964.astype('float32'), [12, 15, 4]), relay.reshape(const_10973.astype('uint32'), [48,]), ), 0)
output = relay.Tuple([bop_10957,call_10964,const_10965,call_10972,const_10973,])
output2 = relay.Tuple([bop_10957,call_10966,const_10965,call_10974,const_10973,])
func_10979 = relay.Function([var_10955,], output)
mod['func_10979'] = func_10979
mod = relay.transform.InferType()(mod)
mutated_mod['func_10979'] = func_10979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10980 = relay.var("var_10980", dtype = "int32", shape = (10, 13, 1))#candidate|10980|(10, 13, 1)|var|int32
func_10979_call = mutated_mod.get_global_var('func_10979')
call_10981 = func_10979_call(var_10980)
output = call_10981
func_10982 = relay.Function([var_10980], output)
mutated_mod['func_10982'] = func_10982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10892_call = mod.get_global_var('func_10892')
func_10894_call = mutated_mod.get_global_var('func_10894')
call_10988 = relay.TupleGetItem(func_10892_call(), 0)
call_10989 = relay.TupleGetItem(func_10894_call(), 0)
output = call_10988
output2 = call_10989
func_10992 = relay.Function([], output)
mod['func_10992'] = func_10992
mod = relay.transform.InferType()(mod)
mutated_mod['func_10992'] = func_10992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10992_call = mutated_mod.get_global_var('func_10992')
call_10993 = func_10992_call()
output = call_10993
func_10994 = relay.Function([], output)
mutated_mod['func_10994'] = func_10994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9731_call = mod.get_global_var('func_9731')
func_9732_call = mutated_mod.get_global_var('func_9732')
call_11033 = relay.TupleGetItem(func_9731_call(), 0)
call_11034 = relay.TupleGetItem(func_9732_call(), 0)
output = call_11033
output2 = call_11034
func_11039 = relay.Function([], output)
mod['func_11039'] = func_11039
mod = relay.transform.InferType()(mod)
output = func_11039()
func_11040 = relay.Function([], output)
mutated_mod['func_11040'] = func_11040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10992_call = mod.get_global_var('func_10992')
func_10994_call = mutated_mod.get_global_var('func_10994')
call_11047 = func_10992_call()
call_11048 = func_10992_call()
output = call_11047
output2 = call_11048
func_11053 = relay.Function([], output)
mod['func_11053'] = func_11053
mod = relay.transform.InferType()(mod)
output = func_11053()
func_11054 = relay.Function([], output)
mutated_mod['func_11054'] = func_11054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6479_call = mod.get_global_var('func_6479')
func_6480_call = mutated_mod.get_global_var('func_6480')
call_11177 = relay.TupleGetItem(func_6479_call(), 0)
call_11178 = relay.TupleGetItem(func_6480_call(), 0)
func_4472_call = mod.get_global_var('func_4472')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_11183 = relay.TupleGetItem(func_4472_call(), 2)
call_11184 = relay.TupleGetItem(func_4473_call(), 2)
output = relay.Tuple([call_11177,call_11183,])
output2 = relay.Tuple([call_11178,call_11184,])
func_11191 = relay.Function([], output)
mod['func_11191'] = func_11191
mod = relay.transform.InferType()(mod)
mutated_mod['func_11191'] = func_11191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11191_call = mutated_mod.get_global_var('func_11191')
call_11192 = func_11191_call()
output = call_11192
func_11193 = relay.Function([], output)
mutated_mod['func_11193'] = func_11193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10738_call = mod.get_global_var('func_10738')
func_10740_call = mutated_mod.get_global_var('func_10740')
call_11228 = relay.TupleGetItem(func_10738_call(), 0)
call_11229 = relay.TupleGetItem(func_10740_call(), 0)
func_1728_call = mod.get_global_var('func_1728')
func_1733_call = mutated_mod.get_global_var('func_1733')
var_11269 = relay.var("var_11269", dtype = "int32", shape = (2002,))#candidate|11269|(2002,)|var|int32
call_11268 = func_1728_call(relay.reshape(var_11269.astype('int32'), [13, 11, 14]), relay.reshape(var_11269.astype('int32'), [13, 11, 14]), relay.reshape(var_11269.astype('int32'), [13, 11, 14]), )
call_11270 = func_1728_call(relay.reshape(var_11269.astype('int32'), [13, 11, 14]), relay.reshape(var_11269.astype('int32'), [13, 11, 14]), relay.reshape(var_11269.astype('int32'), [13, 11, 14]), )
func_554_call = mod.get_global_var('func_554')
func_557_call = mutated_mod.get_global_var('func_557')
var_11278 = relay.var("var_11278", dtype = "float64", shape = ())#candidate|11278|()|var|float64
const_11279 = relay.const([-0.083824,7.903393,7.252002,7.988226,4.811047,-5.526133,-0.557569,6.325945,5.179861,2.111428,-3.954912,7.592832,-6.590881,8.260053,-9.281879,8.565638,-7.312545,-5.593708,8.906948,6.725944,-1.527525,2.713468,-7.663875,5.987474,2.835865,-7.002958,5.175422,-3.392418,2.765871,0.901370,-0.087817,-8.018912,1.569612,4.543894,-8.719376,2.936780,-7.257686,-4.908828,1.733476,-3.467501,-6.555420,-7.477529,-2.831034,-1.933927,-3.747308,9.926523,-2.452005,3.211728,2.334588,-6.326104,1.258610,-4.402709,-7.580504,-6.720334,0.572591,0.401839,2.996184,8.541875,-5.230325,-9.821815,0.745076,-8.660390,7.996806,4.253466,-4.397121,7.275662,7.023796,5.549742,-2.780060,3.694289,-9.917365,6.627588,-0.852507,-0.541909,-8.867045,2.855589,-5.158856,-0.673141,7.778097,-9.475833,3.560698,-1.531799,-4.219267,3.411024,1.727863,-0.012699,9.930409,-4.500202,-0.100113,-5.020188,1.467872,-1.627748,9.936387,7.476214,-3.104057,-3.956778,2.707920,-6.429235,-6.356672,-2.996283,-9.130632,-1.730173,1.889815,4.276154,3.632892,-9.996496,4.308470,-3.668099,1.054151,4.042483,-4.550968,-5.022633,-3.602973,7.386613,-1.801136,2.397164,-5.471041,-5.948723,-9.084936,9.224850,3.925462,-0.083521,-2.675915,-1.600916,-8.503529,9.578444,8.309110,0.928279,-5.871181,7.706396,-3.251782,2.661785,-2.693802,-6.806875,6.721386,-6.437145,-8.062430,5.680806,5.165244,-7.846878,4.296600,-5.879013,0.137628,1.647637,-9.904474,-6.977481,1.781809,5.255544,5.429851,-1.679520,1.000656,-4.110197,2.632045,-7.863150,3.870764,-2.450559,-1.089541,2.201662,-5.360744,8.799093,7.698175,-0.338593,7.382295,-6.316302,7.200460,1.120119,9.352903,-3.932176,6.284693,-8.800217,-1.106531,-9.666281,9.738160,-0.408341,-2.714365,8.862776,-8.357142,-9.116332,4.870532,-2.901218,0.879103,-4.524830,1.125214,7.716948,3.257164,7.832797,-2.851653,6.552690,-3.700389,-3.134325,3.190749,-0.105648,5.370076,-8.845848,-0.760260,1.298424,-5.968696,-2.179431,8.260490,3.409523,1.563366,-3.435077,-7.634221,-4.928352,1.221891,2.150370,-6.655253,-9.522266,-8.850482,-8.667945,-2.605788,-5.274768,4.633724,-3.554364,-5.156883,-9.777795,5.073619,1.410573,-7.262491,-7.961159,-4.399889,-0.594042,6.427164,-8.482046,1.379171,-9.625021,1.081170,8.820131,-6.282648,6.294007,4.973476,-4.283205,-1.106374,-0.922419,0.490829,-5.737218,-4.522129,-7.553830,-7.813900,8.011910,-8.671298,2.026039,-2.965984,-4.551296,-6.720720,5.554033,6.880948,-8.987065,9.579956,-6.803400,6.145435,2.462243,-5.951288,-0.552968,-9.601021,-3.261362,3.663864,-8.565082,-7.637741,-5.977967,-4.507869,-0.630630,-7.475903,7.395706,7.149059,-2.093351,5.115717,-1.073444,-9.662598,-4.845496,-3.594236,3.018247,-1.037464,4.360299,-6.358210,4.920433,9.997675,8.495171,2.640894,-8.615541,-8.799194,5.407381,-9.481398,2.125820,-9.065680,5.790885,5.494431,4.936007,3.935747,-4.154141,-9.963397,-3.012874,-8.278561,1.718817,6.398760,-6.342732,8.005731,1.714887,-3.639189,-6.913250,-0.784843,9.298445,-2.969777,4.395469,-5.512158,1.382044,5.656558,-7.099973,6.143205,4.353327,6.473026,0.170659,-4.079929,-4.425303,3.042790,1.144715,7.214213,3.811858,7.972570,7.456980,4.293949,7.934847,-8.287096,-3.327532,0.247060,-0.929292,0.096388,7.423487,-4.492468,-9.717549,-3.890133,4.027592,8.937227,7.771254,1.332252,-1.441650,-0.401092,-8.359822,3.627794,-3.903509,-4.930043,-3.170272,-3.566863,7.759635,5.861585,3.289992,-4.300577,3.327559,3.663012,-5.669955,9.017673,9.259810,-5.125396,2.208450,-9.780581,3.019014,-1.246387,9.128330,5.152375,-2.391335,-0.704315,3.797859,-7.328270,-5.751438,1.235194,7.192269,7.343616,-9.527058,-2.203571,-0.535418,-2.633633,0.649266,5.789516,5.812714,-6.863271,3.566450,4.177191,8.874369,-0.331916,-9.144948,-0.577711,-5.033290,-6.038259,-1.943826,-9.676694,-2.934645,-8.350941,-9.760992,-2.214674,-5.242991,8.110006,3.399437,-9.011993,-1.503321,8.251303,7.871617,-1.424577,6.844674,-6.598333,1.105196,-5.031153,2.462384,-1.359473,-3.401977,-9.345661,2.966246,2.456668,-7.427407,8.256402,-9.129210,6.662454,-2.051378,6.769519,8.453236,0.196271,7.946887,-7.656226,-5.389092,-6.670228,1.603143,-5.601939,-0.430412,0.291056,8.944077,3.403345,2.949304,3.584119,4.372239,-8.754373,9.119145,5.054765,3.239612,5.779025,-5.112874,6.438891,-0.300417,-8.760862,2.389516,-7.901106,-4.891644,-0.167459,-0.853225,-3.575482,-6.002359,-4.080478,-8.290617,-0.681149,9.732179,-5.437393,5.463531,4.463555,6.512300,-0.771067,-1.036435,2.672073,6.955942,-5.688888,-4.830993,6.818417,6.890246,-3.687173,1.444444,-1.524956,-9.021809,1.553600,-6.867996,-4.591061,-8.395224,-4.596392,0.314690,-7.253832,2.003643,-6.483259,6.416665,-4.955800,-3.671043,-8.249215,-4.859652,-6.987615,2.114833,-2.765185,9.850577,8.405530,-3.083727,-9.904387,-9.271349,-1.929281,4.391101,6.489122,-8.777543,-6.790789,-9.664896,-7.008300,9.897916,7.331937,-2.525548,-6.628376,-0.444337,-3.399415,9.441935,-8.062094,3.417017,8.898962,-4.276072,2.953932,-4.750073,9.489272,-8.572833,2.149131,-3.741781,1.517815,0.518638,-1.178938,6.196136,-8.660137,4.464784,-3.027928,6.055240,-1.767620,-6.395998,-7.097952,0.392618,4.129936,8.705757,6.457697,-0.764921,7.237408,-4.547079,0.928468,-8.763859,-2.460544,1.799071,-7.659467,-2.577466,-1.981372,-9.976007,8.329624,-6.574322,3.696283,-9.713259,5.648408,9.450588,-9.114871,6.136097,-2.257226,4.575621,0.630121,8.514569,6.325512,-0.619857,6.547341,-3.005505,-9.262341,5.372255,-2.871073,-6.091123,-5.668954,-4.461322,7.725891,6.163565,1.937224,-1.482085,6.479670,-0.709486,8.828384,-9.898720,4.204232,-2.266247,1.621354,-3.753656,4.081207,2.080222,-5.663540,-1.576855,2.362502,1.230752,-1.698518,-3.963016,-7.907399,-5.190017,3.198266,-6.270302,2.539571,9.930179,-1.842070,-6.089080,-8.067122,-7.869939,-5.611804,4.557680,-2.217419,-9.331775,-0.857712,-8.612102,-7.392884,1.516311,0.661935,-7.506208,-8.158202,1.727206,4.769439,-0.434247,7.973008,3.433891,7.368242,-9.247360,9.476203,-4.929752,3.703352,-9.744613,9.676785,8.580197,9.957069,2.299229,1.607162,1.028756,-2.624127,8.949385,-2.985168,9.852804,6.455087,2.715198,2.362215,-9.518816,-4.016672,-2.614521,-2.570569,-6.341744,1.864383,7.493608,-2.010822,-4.509851,-7.971412,-7.599188,-1.781324,-1.135761,9.780627,-1.271508,1.806072,2.055470,-5.074053,6.243064,-9.503926,-4.847279,5.944429,-5.997705,-4.656653,1.022474,-2.637716,5.269113,1.903698,-8.099009,5.980199,7.798898,-5.101264,-1.153693,-8.510406,7.947084,2.906391,7.148428,-4.670516,-6.514063,-0.155608,4.956023,-7.786514,1.246249,5.385045,-3.216716,-0.947463,8.438186,1.619290,7.632524,-9.641866,-9.559987,6.770099,-8.574153,8.722639,-0.696964,-4.926933,8.656723,4.126259,0.376440,-9.831221,5.203001,4.090842,9.329390,0.688881,5.139665,-3.478145,9.817849,8.193956,1.470047,3.437327,-7.656417,3.054658,-8.650304,-3.662243,6.103483,5.872860,4.099072,-2.309321,9.883227,-0.141189,2.930176,-6.196151,-5.513644,-6.333395,2.739722,9.855044,-1.392797,0.876613,2.094277,-1.005693,-0.860896,-8.923122,-0.958460,6.619997,-1.562499,-6.316576,-1.809617,-6.148324,-3.482849,-1.232609,-4.325870,7.308316,-2.233068,9.126291,-9.552624,8.420220,-9.588563,1.660337,-4.816457,-6.664007,-6.630467,-0.033951,-4.446373,9.782288,9.758243,-7.196837,7.237658,-6.019064,-2.395611,-4.277518,7.918958,3.995479,8.581582,3.157218,2.311852,-8.349468,-6.023412,-1.810156,7.991830,-9.931994,8.891166,3.009254,-3.191424,4.071895,7.302575,-3.730221,2.142805,-3.713588,-1.668512,-3.184680,-0.029905,3.258582,3.081668,4.743080,9.803467,8.589615,-5.321632,9.718890,9.000416,9.816266,-2.212444,0.982544,2.359060,-7.575517,5.734698,-9.879377,0.446912,7.576573,1.095417,-0.096390,-3.616603,-9.035836,-8.009324,4.661528,-7.503232,-7.124212,-2.907704,-9.260023,-8.831844,5.557373,9.829560,9.474443,5.814913,9.979632,5.808908,8.456145,3.559636,-9.540535,-2.325769,6.790883,-2.746655,8.574064,-1.620045,-1.309311,6.332774,-6.576532,4.878186,6.266900,-2.450516,-3.301553,-9.304091,2.072441,5.676323,1.667580,-8.509450,-5.308552,0.522415,3.262893,2.749840,-8.093206,-5.409154,6.236989,-5.571202,-1.829858,2.623381,-8.472350,1.353474,2.108262,5.877216,-2.105295,-3.080187,-1.988993,-3.263220,9.506834,7.298559,-4.017003,-3.057148,-9.696614,3.832706,-7.268324,3.296281,-9.579199,-4.714157,2.653988,3.304764,9.935872,-0.386643,1.132226,-6.953153,-8.628060,-0.648347,7.345763,-0.305709,3.164450,-6.787028,-3.763768,-4.603512,-1.544984,-3.049027,-6.838471,4.406241,4.312742,7.437957,8.403636,3.607509,7.950253,-6.268033,0.781111,-8.242596,-1.309221,-5.130005,-6.775706,-6.450794,9.891137,-4.679127,-7.091979,-5.976432,5.389377,-4.480164,4.993627,-8.600485,3.133109,0.815942,1.581511,9.106719,-3.537206,-0.861042,-7.292574,-7.678292,-4.233198,1.387061,-4.847705,-1.453492,6.418461,-0.366453,7.577034,7.981723,-4.598702,3.461227,4.608595,2.112214,-5.406561,-0.385632,-4.922771,-7.160525,-5.657687,2.778436,5.286801,-1.958202,-7.429306,8.387406,-7.380063,-2.013334,7.114731,-1.692178,-4.784669,8.024612,-7.668367,0.117039,-5.408856,6.781926,4.340509,0.593120,-6.278399,4.216658,3.849566,-2.568149,-8.510560,-8.666374,-8.926539,-1.761249,-5.721954,1.791045,7.237894,-8.048218,6.118356,-0.643181,-8.269137,0.380314,-0.932234,-8.906721,-2.434597,4.194414,3.697507,-1.165439,-1.340519,5.489633,-1.304789,3.970187,6.714719,4.030565,1.178716,-4.823235,-3.938015,3.343087,-8.016465,-3.901157], dtype = "float64")#candidate|11279|(960,)|const|float64
call_11277 = relay.TupleGetItem(func_554_call(relay.reshape(var_11278.astype('float64'), []), relay.reshape(const_11279.astype('float64'), [12, 10, 8]), ), 0)
call_11280 = relay.TupleGetItem(func_557_call(relay.reshape(var_11278.astype('float64'), []), relay.reshape(const_11279.astype('float64'), [12, 10, 8]), ), 0)
func_907_call = mod.get_global_var('func_907')
func_914_call = mutated_mod.get_global_var('func_914')
const_11291 = relay.const([[True,True,False,True,False,False,True,False,False,False,True,False],[True,False,False,False,True,True,True,True,True,False,False,True]], dtype = "bool")#candidate|11291|(2, 12)|const|bool
call_11290 = relay.TupleGetItem(func_907_call(relay.reshape(const_11291.astype('bool'), [2, 2, 6]), relay.reshape(const_11291.astype('bool'), [2, 2, 6]), relay.reshape(const_11291.astype('bool'), [2, 2, 6]), relay.reshape(var_11278.astype('float64'), []), relay.reshape(call_11277.astype('float64'), [960,]), ), 4)
call_11292 = relay.TupleGetItem(func_914_call(relay.reshape(const_11291.astype('bool'), [2, 2, 6]), relay.reshape(const_11291.astype('bool'), [2, 2, 6]), relay.reshape(const_11291.astype('bool'), [2, 2, 6]), relay.reshape(var_11278.astype('float64'), []), relay.reshape(call_11277.astype('float64'), [960,]), ), 4)
func_7886_call = mod.get_global_var('func_7886')
func_7887_call = mutated_mod.get_global_var('func_7887')
call_11294 = relay.TupleGetItem(func_7886_call(), 0)
call_11295 = relay.TupleGetItem(func_7887_call(), 0)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_11307 = func_3679_call()
call_11308 = func_3679_call()
output = relay.Tuple([call_11228,call_11268,var_11269,call_11277,var_11278,const_11279,call_11290,const_11291,call_11294,call_11307,])
output2 = relay.Tuple([call_11229,call_11270,var_11269,call_11280,var_11278,const_11279,call_11292,const_11291,call_11295,call_11308,])
func_11309 = relay.Function([var_11269,var_11278,], output)
mod['func_11309'] = func_11309
mod = relay.transform.InferType()(mod)
var_11310 = relay.var("var_11310", dtype = "int32", shape = (2002,))#candidate|11310|(2002,)|var|int32
var_11311 = relay.var("var_11311", dtype = "float64", shape = ())#candidate|11311|()|var|float64
output = func_11309(var_11310,var_11311,)
func_11312 = relay.Function([var_11310,var_11311,], output)
mutated_mod['func_11312'] = func_11312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4248_call = mod.get_global_var('func_4248')
func_4250_call = mutated_mod.get_global_var('func_4250')
call_11341 = relay.TupleGetItem(func_4248_call(), 0)
call_11342 = relay.TupleGetItem(func_4250_call(), 0)
output = relay.Tuple([call_11341,])
output2 = relay.Tuple([call_11342,])
func_11343 = relay.Function([], output)
mod['func_11343'] = func_11343
mod = relay.transform.InferType()(mod)
mutated_mod['func_11343'] = func_11343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11343_call = mutated_mod.get_global_var('func_11343')
call_11344 = func_11343_call()
output = call_11344
func_11345 = relay.Function([], output)
mutated_mod['func_11345'] = func_11345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2737_call = mod.get_global_var('func_2737')
func_2738_call = mutated_mod.get_global_var('func_2738')
call_11376 = relay.TupleGetItem(func_2737_call(), 0)
call_11377 = relay.TupleGetItem(func_2738_call(), 0)
func_3633_call = mod.get_global_var('func_3633')
func_3635_call = mutated_mod.get_global_var('func_3635')
call_11390 = relay.TupleGetItem(func_3633_call(), 0)
call_11391 = relay.TupleGetItem(func_3635_call(), 0)
output = relay.Tuple([call_11376,call_11390,])
output2 = relay.Tuple([call_11377,call_11391,])
func_11415 = relay.Function([], output)
mod['func_11415'] = func_11415
mod = relay.transform.InferType()(mod)
mutated_mod['func_11415'] = func_11415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11415_call = mutated_mod.get_global_var('func_11415')
call_11416 = func_11415_call()
output = call_11416
func_11417 = relay.Function([], output)
mutated_mod['func_11417'] = func_11417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4647_call = mod.get_global_var('func_4647')
func_4648_call = mutated_mod.get_global_var('func_4648')
call_11496 = func_4647_call()
call_11497 = func_4647_call()
func_7939_call = mod.get_global_var('func_7939')
func_7942_call = mutated_mod.get_global_var('func_7942')
var_11531 = relay.var("var_11531", dtype = "float32", shape = (462,))#candidate|11531|(462,)|var|float32
call_11530 = relay.TupleGetItem(func_7939_call(relay.reshape(var_11531.astype('float32'), [14, 11, 3])), 0)
call_11532 = relay.TupleGetItem(func_7942_call(relay.reshape(var_11531.astype('float32'), [14, 11, 3])), 0)
output = relay.Tuple([call_11496,call_11530,var_11531,])
output2 = relay.Tuple([call_11497,call_11532,var_11531,])
func_11535 = relay.Function([var_11531,], output)
mod['func_11535'] = func_11535
mod = relay.transform.InferType()(mod)
var_11536 = relay.var("var_11536", dtype = "float32", shape = (462,))#candidate|11536|(462,)|var|float32
output = func_11535(var_11536)
func_11537 = relay.Function([var_11536], output)
mutated_mod['func_11537'] = func_11537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10689_call = mod.get_global_var('func_10689')
func_10691_call = mutated_mod.get_global_var('func_10691')
call_11606 = relay.TupleGetItem(func_10689_call(), 0)
call_11607 = relay.TupleGetItem(func_10691_call(), 0)
func_11039_call = mod.get_global_var('func_11039')
func_11040_call = mutated_mod.get_global_var('func_11040')
call_11626 = func_11039_call()
call_11627 = func_11039_call()
output = relay.Tuple([call_11606,call_11626,])
output2 = relay.Tuple([call_11607,call_11627,])
func_11633 = relay.Function([], output)
mod['func_11633'] = func_11633
mod = relay.transform.InferType()(mod)
output = func_11633()
func_11634 = relay.Function([], output)
mutated_mod['func_11634'] = func_11634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10171_call = mod.get_global_var('func_10171')
func_10172_call = mutated_mod.get_global_var('func_10172')
call_11665 = relay.TupleGetItem(func_10171_call(), 0)
call_11666 = relay.TupleGetItem(func_10172_call(), 0)
const_11672 = relay.const([-3,3,-2,8,-6,5,-3,9,-9,-7,2,5,3,8,-3,7,-10,6,3,-1,5,5,8,4,-10,-8,-6,2,8,5,7,-7,-4,8,9,8,-5,1,-7,-9,-6,9,3,3,1,5,10,6,-7,3,4,-1,4,-10,-7,-8,-7,-6,10,4,-7,-1,10,-3,4,4,-7,4,-7,2,5,-8,9,-5,-3,-2,7,-9,3,-8,6,-2,9,4,-4,1,-8,-4,-2,8,9,10,-3,4,9,-10,6,-9,2,10,-4,5,-9,-1,-9,10,8,5,7,7,5,-4,-3,-5,-10,9,5,6,-3,9,-7,-2,-9,6,10,3,-3,6,3,1,6,7,-1,7,9,6,3,1,-6,-9,4,-2,10,-5,9,6,3,7,6,8,10,-3,3,-6,-5,-7,-6,6,-9,10,-4,-3,2,2,6,5,-5,10,2,-9,2,6,7,5,-2,1,-3,-4,6,3,6,-7,-6,-1,4,5,-5,3,4,5,-5,3,-3,-5,3,-9,5,1,5,-10,-9,-5,8,8,10,-6,-2,-4,-6,-3,6,9,10,-3,-10,-5,7,-5,2,7,-7,-6,1,-5,1,-7,2,2,-4,8,-7,-4,5,-1,3,8,10,10,-5,2,4,7,-3,-7,-4,-2,-6,-5,-6,-7,-4,-10,8,-8,6,1,9,-4,-6,1,4,1,2,2,-4,-8,3,-5,-7,-5,2,2,5,6,-7,-1,2,4,10,1,-6,-2,-6,-9,9,7,2,-5,-7,8,9,6,3,-5,-7,-7,-7,3,8,-6,8,10,-5,4,-7,-6,4,-10,-4,-10,-3,-6,-7,-4,1,-2,5,8,9,2,6,6,1,-9,-1,8,5,4,2,-7,-10,-3,-10,-7,-3,-9,-8,-9,1,4,6,-5,5,-4,-1,-4,-9,8,-6,-2,-5,-9,6,-9,-7,-8,-4,-5,4,10,4,6,10,5,-10,-6,10,5,-3,-2,7,5,-4,-4,4,6,7,1,6,3,3,-1,5,8,10,10,1,-1,-8,3,-9,7,-1,-5,-4,-4,-8,-9,-9,-2,-8,-8,-10,4,-4,-7,8,-10,2,-7,-4,1,-6,-4,9,5,10,8,10,7,1,-8,-8,5,6,4,2,3,-8,-4,4,-8,-3,-4,8,-9,-5,-7,9,-3,-5,6,-2,7,7,1,-1,8,7,6,-5,-4,4,-3,3,-8,3,-8,-5,9,4,-3,-10,8,-3,3,-9,-8,8,4,7,10,7,9,2,-2,-7,-3,4,-4,-6,-4,-4,8,2,-5,-5,3,2,-4,7,1,10,2,-5,-10,-7,-6,5,-5,7,9,5,-3,-1,1,2,-3,8,-6,-6,-4,1,4,-5,4,-6,-3,5,8,-3,-6,-3,-7,4,1,-10,-3,-4,-8,3,-10,-6,-8,1,9,-4,-2,3,7,-3,-9,3,7,-6,-8,-8,8,3,7,3,-1,2,-6,-3,4,9,-2,-3,2,3,-8,8,4,-1,9,-10,3,-4,-7,-1,-2,4,5,-10,-7,-6,-3,-1,10,-2,8,-9,-6,-1,7,-5,2,-4,7,3,8,-10,-6,10,7,-4,5,-7,4,3,-9,4,-8,-10,2,-8,5,-1,-1,6,4,4,-1,8,8,-1,-10,10,-3,2,6,-6,-9,1,-8,9,-6,1,3,-7,1,-10,4,8,4,1,-9,10,-3,-10,-1,5,4,-7,7,10,3,-10,3,2,-9,7,1,-8,2,7,8,1,10,-1,-3,7,-2,-4,-5,10,1,-4,5,-7,1,-10,-10,3,8,-6,-4,8,-10,-8,-9,10,6,-4,-5,9,7,-7,10,-6,3,-9,9,-10,10,-5,-6,10,-1,4,7,6,-3,-10,2,-3,-2,-9,-2,9,4,-4,10,-2,-8,1,-2,-9,7,-9,-9,-1,5,-1,8,10,3,2,-7,6,-3,-3,3,1,5,-10,-2,-5,-2,5,-4,2,8,3,-10,-1,10,-9,7,-5,-2,7,6,3,6,-6,5,-2,-1,8,-5,-6,4,8,-7,-4,-7,-5,2,-1,-7,1,-4,-5,-7,8,-4,9,-2,-1,-1,10,-7,1,4,-8,-8,5,1,10,-6,1,5,-10,-8,-9,-8,-9,5,-4,3,-2,-2,-4,10,10,4,-6,3,9,-6,2,-7,-1,-10,-3,-1,-5,-3,-4,5,-9,-7,-10,-10,2,7,-4,-7,-7,1,2,-5,5,-6,-3,4,9,-8,2,8,-5,-9,9,5,-5,-8,-10,-3,-2,-3,9,-6,7,-9,-1,-2,-4,-7,-9,3,-1,-10,-5,-4,-4,-2,4,-3,-4,-1,-1,-3,-6,-2,-3,8,5,2,2,6,5,-9,8,4,-6,6,10,4,10,-10,10,-6,5,-4,-6,-3,8,3,-3,7,2,7,-3,-7,-7,-5,-4,-10,10,5,2,-10,9,-6,10,10,-7,1,7,2,-4,9,-1,-6,2,-9,-1,-7,-2,-3,-8,-2,1,6,3,2,-6,-5,3,-10,-5,1,7,8,-5,-2,5,10,9,-6,4,8,-10,-9,-4,-7,-7,9,-10,-5,-8,-8,1,1,-1,-10,6,7,3,-10,-6,-10,-7,8,5,-10,8,-8,-5,-9,-5,-3,1,8,7,-2,4,7,10,9,-9,-8,9,8,-4,-10,7,1,-3,-1,4,-5,-7,10,-10,-3,-7,5,-7,-10,9,-4,-5,-4,4,1,1,8,10,5,6,8,9,1,-6,8,3,4,7,-6,-5,10,-5,-6,-6,-7,-9,8,-6,-5,-4,-10,5,6,-3,-2,1,4,10,-5,1,9,-4,-9,9,-7,-8,-9,10,-4,8,-1,10,9,5,4,-5,-9,1,-1,3,1,-4,4,-6,9,6,6,-7,-4,8,-10,3,10,-7,-4,1,-2,8,3,6,-1,-1,-8,2,3,-4,-1,-2,2,-5,2,4,3,1,9,7,10,8,8,-2,10,-4,2,3,7,-10,4,-4,7,10,-3,-7,4,-2,3,-1,-1,-3,3,7,-4,1,-3,2,10,-6,-10,9,8,6,7,-6,4,-1,7,-7,7,8,2,-9,-3,-7,-10,7,-8,-9,2,-5,-7,3,6,-3,-7,2,1,2,-6,5,7,-4,-4,-2,-10,-3,5,9,6,-4,-4,-4,10,9,7,2,7,-9,-10,-7,9,-7,6,4,9,6,-8,8,-6,-4,2,-7,3,-8,-8,-3,-5,-9,-8,2,5,-3,-10,-9,-10,1,10,-1,-5,-5,-3,8,-3,-8,2,-10,-10,9,8,8,4,1,7,-6,2,5,-2,-5,2,5,5,-2,-10,7,-1,-7,-4,9,-2,-4,-6,10,-2,10,10,7,-1,-10,-9,1,2,7,6,-7,-10,-3,-8,4,-9,3,10,-3,-8,-1,2,1,10,9,-5,-6,-7,-3,3,-6,-10,2,-8,10,-9,-5,3,-4,5,2,-2,-6,9,-6,5,-5,-3,-6,1,9,6,-1,-9,5,8,3,-6,-9,-8,-9,8,-9,-10,-2,-10,-3,6,-7,-6,-8,-10,4,-9,2,9,10,5,8,6,-8,-2,3,4,-2,4,7,-2,1,6,-9,-3,2,-10,-3,2,-3,2,-2,-9,7,6,-7,-6,10,-2,-7,-1,2,9,8,-9,-6,10,-7,6,-2,9,1,-10,7,1,6,3,5,-3,3,-5,-3,1,-4,4,-9,7,-10,2,-8,1,7,2,-8,-5,7,4,-7,-7,-1,-8,6,10,-4,-3,-7,6,10,8,-3,1,-6,-7,9,5,7,-8,-1,-2,5,7,2,8,9,2,-10,1,9,9,2,-5,7,5,-6,-3,2,2,1,-8,7,-4,4,-5,3,-10,-7,-7,10,4,-9,-6,-7,7,-10,10,-6,6,-2,-4,4,2,-8,-10,1,6,-1,2,-5,-7,5,-4,-4,2,1,10,1,1,-1,10,2,-3,-2,-4,4,-2,9,-2,6,10,4,-7,4,-4,6,8,-4,5,-3,-1,-8,-10,8,-3,-9,-6,-7,-6,10,7,-6,5,5,3,7,-9,-8,-6,-2,-5,-2,-2,3,-1,7,-8,-2,-2,1,6,-1,4,3,-8,-9,-4,5,1,5,2,9,-7,-2,-9,-4,2,-10,-5,-8,-6,9,9,7,3,-1,3,4,2,-9,-1,-8,10,-3,8,1,8,3,3,7,-1,-10,10,-6,-4,-5,-10,9,-8,-7,4,10,6,-1,-5,-7,-9,-3,-3,-1,-6,1,9,5,4,4,10,2,-9,-4,-3,1,8,-1,4,7,8,5,-7,5,-4,1,-4,9,6,-8,-4,1,4,4,-3,8,-10,1,5,1,6,1,-3,-3,-6,9,3,-4,9,-7,-1,-6,-7,-8,-4,10,-1,9,-3,-4,-7,-9,-1,7,2,-4,8,6,8,6,3,1,-8,9,-5,10,-3,2,3,6,3,10,10,5,-10,-10,-8,8,-1,9,7,10,10,4,9,-1,-1,-4,-7,-1,-1,-1,-1,-6,5,10,7,-3,-2,-2,-8,5,-4,-10,-1,9,1,-2,-10,-7,-4,-6,-9,-7,6,1,-2,3,5,-8,-4,10,-10,8,-1,-4,3,7,9,-2,3,10,8,-3,7,-3,2,-6,4,-2,-10,1,6,-5,1,-3,1,-2,-7,5,-6,-6,-10,1,-6,-8,-9,10,-4,-2,4,-9,-9,3,-6,1,-5,-2,-9,8,6,-2,4,10,-10,-4,10,-9,-4,6,-1,4,3,-2,9,-10,5,-9,5,-6,4,9,-3,2,1,9,-4,-9,-7,9,-8,-10,-10,-3,-8,2,-10,5,-1,3,4,5,5,5,4,7,-3,-6,-5,2,7,7,-8,1,1,3,-5,3,4,-1,2,-10,-4,9,-5,-3,6,-10,-4,4,-6,-1,7,1,10,8,10,6,-6,3,8,6,8,6,8,7,9,4,-2,5,-7,-5,-3,-2,7,-2,3,-9,-5,-3,5,6,-8,9,-5,1,7,10,-6,-3,-8,-8,-5,4,-1,3,-6,1,-7,-3,5,4,-1,-6,-7,-2,3,7,-8,-10,-7,9,1,-1,-10,-3,-10,9,-3,10,3,6,5,-6,6,4,-8,-1,2,-9,6,-1,9,10,4,-2,4,-3,-3,2,6,3,10,4,3,6,5,6,7,6,5,-8,-7,-10,1,-10,-9,-4,-6,-10,-4,-10,4,-3,-3,-2,-10,-9,-3,-7,-10,-3,9,-5,6,6,4,6,-4,-8,-1,-5,-3,8,-1,10,2,-10,9,-6,3,-4,9,-4,1,10,-6,-5,-9,-5,-9,-4,8,-2,1,3,-3,10,7,7,-8,1,3,-3,2,7,-2], dtype = "int8")#candidate|11672|(2002,)|const|int8
bop_11673 = relay.floor_mod(call_11665.astype('float64'), relay.reshape(const_11672.astype('float64'), relay.shape_of(call_11665))) # shape=(2002,)
bop_11676 = relay.floor_mod(call_11666.astype('float64'), relay.reshape(const_11672.astype('float64'), relay.shape_of(call_11666))) # shape=(2002,)
func_10280_call = mod.get_global_var('func_10280')
func_10281_call = mutated_mod.get_global_var('func_10281')
call_11678 = relay.TupleGetItem(func_10280_call(), 0)
call_11679 = relay.TupleGetItem(func_10281_call(), 0)
output = relay.Tuple([bop_11673,call_11678,])
output2 = relay.Tuple([bop_11676,call_11679,])
func_11683 = relay.Function([], output)
mod['func_11683'] = func_11683
mod = relay.transform.InferType()(mod)
mutated_mod['func_11683'] = func_11683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11683_call = mutated_mod.get_global_var('func_11683')
call_11684 = func_11683_call()
output = call_11684
func_11685 = relay.Function([], output)
mutated_mod['func_11685'] = func_11685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11704 = relay.var("var_11704", dtype = "float32", shape = (6, 1, 5))#candidate|11704|(6, 1, 5)|var|float32
uop_11705 = relay.log(var_11704.astype('float32')) # shape=(6, 1, 5)
func_10063_call = mod.get_global_var('func_10063')
func_10066_call = mutated_mod.get_global_var('func_10066')
var_11709 = relay.var("var_11709", dtype = "int32", shape = (2002,))#candidate|11709|(2002,)|var|int32
call_11708 = relay.TupleGetItem(func_10063_call(relay.reshape(var_11709.astype('int32'), [2002,])), 0)
call_11710 = relay.TupleGetItem(func_10066_call(relay.reshape(var_11709.astype('int32'), [2002,])), 0)
func_10423_call = mod.get_global_var('func_10423')
func_10425_call = mutated_mod.get_global_var('func_10425')
call_11739 = func_10423_call()
call_11740 = func_10423_call()
func_2553_call = mod.get_global_var('func_2553')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_11744 = func_2553_call()
call_11745 = func_2553_call()
output = relay.Tuple([uop_11705,call_11708,var_11709,call_11739,call_11744,])
output2 = relay.Tuple([uop_11705,call_11710,var_11709,call_11740,call_11745,])
func_11750 = relay.Function([var_11704,var_11709,], output)
mod['func_11750'] = func_11750
mod = relay.transform.InferType()(mod)
mutated_mod['func_11750'] = func_11750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11750_call = mutated_mod.get_global_var('func_11750')
var_11752 = relay.var("var_11752", dtype = "float32", shape = (6, 1, 5))#candidate|11752|(6, 1, 5)|var|float32
var_11753 = relay.var("var_11753", dtype = "int32", shape = (2002,))#candidate|11753|(2002,)|var|int32
call_11751 = func_11750_call(var_11752,var_11753,)
output = call_11751
func_11754 = relay.Function([var_11752,var_11753,], output)
mutated_mod['func_11754'] = func_11754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2737_call = mod.get_global_var('func_2737')
func_2738_call = mutated_mod.get_global_var('func_2738')
call_11807 = relay.TupleGetItem(func_2737_call(), 1)
call_11808 = relay.TupleGetItem(func_2738_call(), 1)
output = relay.Tuple([call_11807,])
output2 = relay.Tuple([call_11808,])
func_11809 = relay.Function([], output)
mod['func_11809'] = func_11809
mod = relay.transform.InferType()(mod)
mutated_mod['func_11809'] = func_11809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11809_call = mutated_mod.get_global_var('func_11809')
call_11810 = func_11809_call()
output = call_11810
func_11811 = relay.Function([], output)
mutated_mod['func_11811'] = func_11811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5401_call = mod.get_global_var('func_5401')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_11833 = relay.TupleGetItem(func_5401_call(), 0)
call_11834 = relay.TupleGetItem(func_5402_call(), 0)
func_2465_call = mod.get_global_var('func_2465')
func_2469_call = mutated_mod.get_global_var('func_2469')
const_11843 = relay.const([-2.571951,3.324957,8.580463,5.009460,-4.571367,1.739294,3.327408,-5.108311,-6.332359,-1.183449,6.247233,-5.400476,0.630954,-0.704091,-9.724007,-8.770765,4.540632,-7.335054,0.238625,-4.095063,2.432132,7.177450,-2.790152,-9.283945,-5.359369,5.777212,6.504661,-5.845662,1.717342,-9.578724,-0.297532,-5.725641,-1.554617,8.596788,-3.374984,1.349674,7.286553,-4.562336,-0.493131,6.010668,9.531211,-6.220544,-1.033618,8.885858,2.794196,8.179605,-4.638245,-8.405584,-4.177466,-9.260018,9.396775,-6.580897,8.700133,6.132925,6.843123,-9.715295,6.874003,-1.384310,3.580680,4.573614,9.142476,8.909369,-1.947825,-9.031494,3.119172,5.464928,6.877656,3.822837,4.553619,-2.694780,1.769305,3.103277,-9.738425,-4.623895,-7.570043,-1.828001,-9.111132,0.586044,0.959144,4.150925,4.308448,-3.682424,2.169181,2.621010,-1.024319,1.624078,-5.733340,-3.568897,-4.864321,9.200601,-5.527089,-4.605019,7.840859,0.772575,-1.266368,0.230995,7.433812,-3.611773,1.032729,6.043661,3.370854,-2.072295,-6.435537,-4.448018,5.399422,1.474632,-8.464288,5.176710,5.592056,-0.654621,7.850078,0.297628,0.541711,2.460283,5.471141,-5.701948,-8.238641,4.056639,6.436311,3.307518,0.283802,-0.848511,0.522686,3.177931,-5.345343,-2.580658,9.249654,9.907705,7.257336,1.952627,8.609519,6.225549,-7.384037,-3.063892,3.843018,3.321272,-6.099121,-4.948645,6.155055,4.048265,4.409797,0.911390,2.062949,-7.369595,-4.478794,-2.301593,0.705505,9.758463,-7.920862,-3.879252,9.702884,-2.876342,2.568666,5.744856,-2.355456,4.296720,-7.197695,-6.348681,3.777271,-8.382712,-4.506517,3.418844,1.985631,-4.124752,4.908744,8.609652,-6.556191,-7.200528,-4.851186,-2.593238,-6.417316,-2.229567,-4.292740,6.701971,6.977346,4.523963,-4.597632,-4.843228,4.622145,4.824887,4.441477,-4.645644,-5.530392,0.116077,-2.344220,9.053828,1.669359,-8.052237,-6.347524,8.063917,8.453896,5.977066,-1.457606,4.586940,-1.819555,-4.362611,9.550471,0.015105,2.830106,-8.775225,-5.405194,9.644041,-7.628521,-1.175566,3.800674,-8.186896,-0.183335,-7.707360,9.178337,2.733947,-5.309268,9.372881,-2.816725,0.068992,-1.180283,2.459063,2.485554,-7.671115,-6.473679,-6.629738,7.667646,1.070849,-4.108875,-3.209769,8.248157,-0.649014,1.116592,-7.996266,-2.756635,4.992506,2.372599,-5.172383,5.231365,-2.850170,0.383184,5.044162,-8.826126,-6.002802,-8.548596,-8.178864,-1.019303,7.868463,1.879929,5.709978,1.437304,-4.325561,-6.513302,4.921172,5.818848,3.623994,-5.499420,1.552369,8.936664,-3.148732,-9.361259,-5.364324,9.583228,-7.825024,7.675422,-4.266384,0.820626,4.754018,4.511222,9.747624,8.196251,6.267617,-9.844584,-9.775640,8.475662,9.968609,3.051733,-6.216881,-8.117400,5.518674,7.612880,-2.134932,-9.938566,-8.741492,0.755920,5.584808,-4.466915,-0.790973,6.941664,6.843971,0.209934,0.212656,-6.704021,3.099684,-0.443218,-1.349767,9.630820,-4.274644,-4.102696,7.272490,1.975322,-3.976423,-6.651068,-6.528863,9.773284,-4.587067,-4.109794,-0.536970,8.943760,3.836859,-7.182674,5.855257,8.716901,-4.234095,-3.260412,9.619779,-7.070448,-5.535170,-3.568124,-6.082887,-2.380367,8.731157,-6.840793,9.262126,5.652285,-2.206179,-4.246230,9.603581,4.166932,2.932845,-3.643205,8.719423,6.421197,6.420230,-3.068524,3.513881,-8.559280,-1.628231,-7.383999,-4.833818,-6.872652,-8.631503,7.658391,-0.279631,0.267436,-8.631796,-3.689159,-0.960061,4.046791,-4.161026,0.645499,-2.144323,-4.043890,5.717249,-4.198118,-7.606903,-1.665567,2.101325,6.727054,-6.717421,-7.086114,-7.284703,9.277752,-1.909883,-2.710238,-2.314731,-2.015447,7.095164,8.528493,-3.950692,-7.487973,3.147901,5.334951,-3.338059,-8.063605,6.110691,-3.114469,-5.559865,-3.118646,-6.443565,0.342282,-3.162845,-3.849506,-4.320627,-5.732452,2.976412,5.021524,7.654902,-7.316159,5.282100,5.476609,1.756503,-3.064098,8.166128,-7.035828,2.917937,-5.580453,2.451500,1.057820,6.146116,-8.168511,5.811401,0.123773,-7.096666,-7.485259,-5.736775,-1.775890,4.021983,2.927713,1.844043,9.808730,4.644801,6.028279,-6.175807,-6.614768,-6.484164,-6.178941,2.692655,1.786718,3.708383,3.419648,8.095102,8.102094,3.445648,1.954392,-8.156219,9.885431,-5.324139,4.759395,-8.131250,-3.898601,-7.284311,-9.464555,-0.136987,-6.244087,5.429239,-7.923622,6.211868,-7.372707,-1.032553,-0.726437,-6.050706,6.279847,-7.232333,7.485643,-8.601264,9.030173,-7.189069,-6.810492,7.574754,5.919665,2.361013,6.738452,8.864161,4.030497,2.562549,6.280639,4.865079,6.186785,9.914408,-6.413532,-9.238792,-4.713340,4.901771,-0.152001,3.354809,-9.188992,3.763240,-6.512984,4.659626,-2.736359,1.586763,-4.208809,-4.668611,-2.758528,-1.282958,-5.857701,-0.871402,5.139679,9.747206,1.583667,8.204311,4.763620,2.752019,-9.523613,3.427984,-6.974545,-9.801894,-0.578461,-1.832886,-7.486126,0.500456,5.135500,7.352550,-9.435551,-8.681920,-2.481252,1.701664,-1.885195,2.470780,7.762306,-0.024005,2.614541,-6.357542,8.089717,-4.148504,4.791321,-8.845039,1.524812,5.271258,3.315006,5.952219,-1.007963,8.946524,-4.128653,0.833095,-9.997235,3.500709,-3.476833,8.765883,-7.577151,9.555279,6.305157,-1.657228,3.586162,-7.930011,-9.865955,-6.464652,-6.959701,3.319008,-5.206291,-9.045467,-4.191778,-1.368370,6.191048,3.026747,7.393714,8.779637,-0.655022,-4.122651,-9.055625,-9.248475,-8.105556,4.992828,6.705765,7.345339,4.318153,-7.917247,6.861781,-4.616393,-9.398187,-7.367689,-5.417758,-2.056844,-1.502229,-0.187033,-8.860701,7.727029,-8.658221,6.525059,3.720696,3.519749,6.170484,3.832613,1.259366,3.251171,4.712081,6.618806,-8.235575,-7.931717,-0.872205,0.477529,-4.424474,-0.315359,2.584142,-2.073005,-5.578740,7.857075,9.080169,8.600710,-7.888224,-4.819728,-7.593949,4.278666,4.635524,9.102518,-8.519075,-4.720676,9.868003,4.812218,1.138865,-6.964359,-1.987557,3.008726,-5.755798,-3.505172,7.017665,-6.863978,-7.933011,-0.611130,8.669220,-5.505930,-9.738174,-1.818788,9.896700,-7.499479,3.104141,-7.377509,-7.636665,2.950130,-5.729790,6.704978,-2.721430,-7.162189,2.717156,0.555001,-4.220159,5.987983,-9.425952,4.362832,6.923911,-9.353966,-7.558364,-4.499420,-1.605421,1.464180,0.975640,9.885930,-0.011809,7.638288,-5.775099,-2.144357,-4.870677,-4.061075,-6.906497,-9.424109,5.340673,-6.940802,3.838236,9.892098,6.944183,2.519352,6.598357,-8.003404,-9.702164,-5.467882,-7.603365,6.553399,-5.512915,-0.708918,0.358288,-0.791322,6.915327,-8.138132,-4.326408,2.578911,-6.257638,-2.558310,3.184014,2.077145,-9.108049,-4.416816,9.235519,9.447166,2.667726,-0.557634,-8.112187,-2.110852,7.547376,4.235862,-2.268865,9.688625,2.359308,-6.932957,4.383334,-1.545277,8.661300,-3.658694,-2.809375,-8.738798,5.977009,2.032119,-1.667873,-8.617059,-5.530052,1.196671,-6.060023,-7.040910,-6.491723,-6.611144,-7.846773,-0.850464,7.297869,-9.161737,-1.566241,-0.237340,2.236180,-8.489229,1.989550,-0.760262,-7.423760,-7.474074,-1.817295,-3.436938,0.386284,-9.245540,4.545911,-4.317377,-4.946962,-5.010469,9.334051,-7.269353,-7.233342,-0.682638,0.707105,-2.847092,-1.137853,-1.627292,8.775419,-7.772253,8.355219,-8.881454,6.772136,-7.863412,-0.492740,-1.247617,4.651824,-9.681368,0.073948,5.675260,4.337006,-1.271731,-8.398734,3.053549,5.776070,-4.403898,-3.903488,8.790371,9.488350,7.556688,1.927156,-0.388701,7.539145,-7.419584,7.219006,3.985384,9.004251,4.531612,8.527021,8.143968,-2.363797,2.645585,8.759343,-6.983116,-2.149624,-9.005962,1.505307,-8.402742,9.957766,-1.266156,-1.141753,-0.444977,5.228756,0.128564,-4.516103,-6.169007,1.351102,1.515213,-7.086756,9.486105,-7.489488,-8.029588,-4.486065,-7.372066,-3.289689,7.001053,-7.379271,-7.128605,4.408893,-1.121732,1.466859,-9.965308,9.749241,6.833928,4.959596,-6.510721,-0.793446,8.720790,-1.853861,-3.771347,-4.710383,3.693377,0.775508,3.814756,-0.980436,-7.370668,-2.177713,-4.799193,0.438235,0.192786,-0.150722,-7.273814,3.488654,-5.994055,1.030979,-0.693965,-3.038880,-0.012138,7.575886,-9.261704,-0.473023,2.337273,7.740866,-0.754778,1.842070,0.328269,4.341865,-2.113388,2.842844,-2.431454,-9.518364,2.570662,3.095561,-2.824901,4.388286,-0.180648,-4.774921,-8.956809,3.630950,-0.350136,-5.974540,-9.483984,7.049529,-1.090110,3.422439,2.412955,3.397396,-6.809294,-8.700238,-9.174462,8.749982,1.309425,-6.714479,6.935891,-1.775351,9.533510,8.461654,9.661225,-6.938668,-6.353875,-5.503507,0.628480,-7.856276,-7.104203,4.473746,-1.252458,5.919907,-7.362071,4.192420,6.662782,0.993531,-9.384691,6.603916,4.430750,-0.385947,8.430284,6.448310,-9.752889,4.657875,-5.743048,9.652934,3.462719,8.713569,5.682892,-1.640490,-4.598578,2.528447,-9.106783,-1.126730,-0.467509,4.560207,-4.536238,0.288439,-7.517245,3.190572,1.729862,8.025350,-6.168271,-0.160523,5.664639,-5.876430,-8.811916,0.564649,-0.228193,-9.494193,-5.392517,4.803188,-2.149200,0.425196,3.442269,7.488133,-6.056358,5.535600,4.693218,-2.160261,-8.212823,2.953844,-9.862940,-2.899807,-8.129176,9.779190,-6.857896,7.038647,8.151494,-5.801217,-6.628034,7.629124,-6.326641,4.492215,-7.293999,8.292715,-0.535691,7.428624,6.254456,-8.167971,-2.317458,-4.566521,-5.764298,4.422035,-1.360658,-3.537504,-5.466761,1.167844,-7.613638,-8.021433,-2.164868,-7.189831,-4.904244,8.304445,2.939326,-0.405054,-9.940037,-5.156419,-8.492142,-6.356288,6.879720,7.399715,3.768436,7.988958,2.123512,-1.088582,9.561990,1.739228,5.207350,0.069556,-0.578513,-7.867248,-2.189422,7.719468,6.217790,2.348183,-1.725456,-0.665291,-6.639106,1.653002,6.923124,0.839245,-2.268361,7.426057,-2.479865,-9.478401,-7.403676,7.110471,-7.189398,6.566659,-7.635240,-8.062824,-8.408516,-5.546545,-5.494637,-2.146858,-9.747505,-6.094137,-8.774243,-6.247950,-7.794196,3.505895,4.945047,6.738947,0.094370,9.358538,-6.914587,-8.377472,-2.268559,4.870862,4.045451,4.711974,9.563938,-3.124399,4.999721,-0.008947,-3.764446,-5.842347,-8.196777,9.404089,-7.176907,-9.166188,-4.716217,5.207875,8.297251,-3.928281,4.080139,-2.675939,5.202371,-3.958609,9.183561,7.592594,4.531299,-2.854491,7.312651,4.483722,-3.745565,-4.852862,1.403244,-3.295796,-0.580950,3.056951,-7.851470,7.867988,-6.689955,-0.022751,-4.013880,0.537694,3.205952,-1.968730,5.582212,-8.441849,0.213546,7.809727,6.934803,1.226190,-0.548620,1.250907,0.343340,-4.823495,-7.640443,5.400512,-1.367904,-7.325493,-9.969465,7.222305,4.963020,-0.885949,-5.755658,4.910877,8.427982,-9.145980,9.146044,-3.742729,-6.206177,-2.023915,8.851481,0.554502,9.778732,8.291363,-1.312488,8.218049,-1.985004,-4.518105,2.987888,-6.609178,4.999858,-3.492367,-2.711421,2.490739,-2.820799,-8.916219,3.874031,6.431584,1.405855,1.437791,8.632917,9.245935,-6.843399,2.322610,4.739916,-8.300158,-1.297306,8.517607,9.403725,3.683793,1.329534,1.448870,8.403559,7.855396,0.651629,3.668261,7.266735,-5.636607,-7.373872,-0.652852,-6.990940,-1.979079,8.266502,7.495700,-7.584638,-6.856222,-3.338942,6.819948,0.938161,6.575921,9.767416,1.457978,4.370763,-6.906636,7.834303,-5.936879,7.564369,-4.221359,-6.005896,1.457968,-3.010947,-5.193899,4.070554,5.918141,-4.730868,8.205755,4.975526,1.063048,-4.700768,-1.776694,-2.952473,5.314139,-4.458257,-0.751797,-0.367093,8.665419,-4.219958,8.104276,8.673301,-8.602278,8.153065,1.978358,-8.315824,-6.331412,-6.367009,5.152403,3.359510,-3.836482,-0.993910,-2.184424,-0.758041,-9.731678,-1.759874,-6.750572,-9.314868,3.967925,-6.461590,-6.243034,1.591255,-7.534879,6.230545,-6.650863,-7.621313,-6.766250,-6.788979,2.655644,1.193404,2.472271,-0.249156,7.265248,-3.709080,-6.699513,-5.979045,8.144487,0.575527,1.288363,9.811104,2.041673,4.840330,6.359164,6.446093,-9.011412,-9.868602,-9.550588,-4.631399,7.872106,-1.151219,9.456108,-2.172134,3.818081,-0.741481,-5.425485,-6.651608,-5.454058,-9.031295,6.879046,-3.656911,-1.737110,8.563120,4.265263,-8.620556,-4.093107,2.271231,3.404649,5.351882,2.547075,-7.363798,3.931924,-9.374005,-6.417823,3.531541,-5.013500,1.633825,-4.546443,3.423389,-4.821732,-2.004065,-5.332912,5.434184,2.424774,-0.599524,-0.971888,7.092570,-4.165856,3.155969,-6.939389,-0.981790,1.486871,5.922312,7.116907,5.919029,-0.201630,-5.936827,6.819133,8.416737,-7.726271,-6.329653,-2.299525,0.173655,3.132277,6.433988,5.824352,-2.368469,8.513270,5.331019,-4.492278,2.127260,-0.422562,8.281619,8.227047,6.961414,6.517691,-3.146510,4.375533,-2.456565,4.147050,-2.673471,9.767613,7.227999,-6.682598,3.125487,8.585176,3.932048,9.711048,-3.716991,4.930981,-4.636855,8.455669,-6.516183,-0.165052,4.033926,-4.717639,4.088479,-9.330787,6.139704,9.689059,3.371149,2.499425,-4.742955,5.833082,3.064063,-1.966658,0.736815,-8.345876,-4.099229,-5.287592,-4.829462,6.257631,7.915802,-1.071173,-5.497418,4.238202,4.135555,6.940078,0.662994,-9.288211,4.690116,3.993102,-8.363783,2.454279,-3.487393,-1.749842,-8.888446,-0.495353,8.947094,-1.601469,-4.743277,3.857436,-9.370137,-3.236742,9.393764,-4.795366,3.714160,-2.522412,-2.739396,8.675423,2.959648,6.822212,6.135856,9.214249,4.262221,0.952568,-8.926227,4.407762,1.684608,-5.927678,-2.710316,8.461248,-0.161098,0.477241,0.655191,-7.551597,-7.189291,8.881954,6.703857,-6.317959,-1.781809,7.794394,-1.588085,-9.310956,-0.822885,-6.562226,0.281470,-4.734621,9.379116,-2.070646,-2.335723,-4.321437,8.666554,8.228344,-7.351908,2.307671,6.117496,0.465028,7.273625,5.261120,1.512480,-5.817878,5.647128,-0.632693,-2.396493,-8.223343,2.054289,1.321214,-1.038603,-7.672504,-5.070077,4.408924,-5.576710,4.289820,-1.562489,3.470799,-3.927362,1.944555,-8.978080,0.441849,-0.814785,-9.205262,-6.362633,-9.966554,-5.907764,4.752152,-0.628104,-8.434308,-7.092202,-5.443699,-5.736148,-4.938301,1.944600,-3.477157,4.178219,-4.716895,6.295891,-9.615217,-0.104149,-7.464654,5.433885,7.786112,6.134534,-5.359736,9.508869,-2.086110,-5.635375,2.108832,-0.891573,7.188459,1.693606,-7.783121,-4.225471,-0.345906,8.562784,0.339723,-1.615890,7.045739,-9.750771,7.002071,-9.427860,9.614719,-4.597841,5.137484,9.267025,7.580570,-9.337335,0.784256,-6.273901,-3.031738,3.304555,-9.892641,-7.617599,3.121354,8.864956,0.353041,-4.880208,-0.914919,1.361409,-6.412120,-9.853055,6.400430,8.763603,-7.079258,-4.824425,2.213402,-0.152326,4.940954,2.811600,-7.189785,-1.945225,0.725290,-1.744114,7.762062,4.371607,-2.750242,7.566994,-4.397482,1.063945,-9.296447,9.777496,1.312042,2.582120,1.981287,7.426312,7.381768,6.860003,-3.240934,-2.161714,0.724420,1.842017,-1.788718,1.244244,5.274980,5.462580,-8.250045,-8.130472,-4.608458,-5.435682,-3.680057,5.059484,5.213924,-9.716323,7.150913,-8.295051,-6.249861,-3.217066,-7.371999,-8.652076,-1.398737,-1.603291,-4.689655,-9.640229,-0.525251,-4.850883,-6.660205,1.023436,-2.877859,-4.878297,-9.565741,-4.376405,-9.271005,6.652360,-5.522262,1.178767,6.428545,6.788047,-7.116868,7.991451,9.046274,6.795311,0.738271,4.900688,5.762064,5.241075,-6.450386,-6.739173,5.262105,-6.401085,2.371819,-4.415225,4.755501,8.245321,-2.170279,-7.647461,-6.124150,5.154027,-1.399179,-0.788789,-6.493634,-9.031248,6.119913,-3.412924,-9.911417,2.710609,-6.329005,7.151358,5.163784,4.965348,0.481763,0.033195,5.006347,3.373973,-2.449793,6.876446,-9.290609,6.371176,4.914488,-9.908224,-5.969080,7.813728,0.130654,-0.313073,8.243114,-8.808449,-1.467658,9.686095,6.491167,2.708200,-7.278534,-3.949272,-7.680289,-9.034308,5.445594,-4.335346,-3.165376,-2.032261,-9.230318,2.971497,-2.575968,-4.355737,9.875767,3.963530,-3.016210,-5.887509,4.294789,0.577796,6.750729,8.827130,-1.013870,-9.860377,-6.066925,5.362744,-4.868678,-8.929462,-3.987777,0.719295,-4.041724,-8.283489,3.637392,4.265038,-9.141480,8.249074,3.458748,-7.676816,-4.681009,-5.953087,-6.811080,6.772306,-3.074614,5.741938,-9.491272,5.791028,9.036778,2.032531,-6.403059,-7.731950,-8.111489,-1.302641,-6.867620,8.283438,-6.529487,6.933823,3.520130,4.740847,4.791601,8.959537,3.701124,-9.219381,-4.765204,1.385944,1.678173,2.016363,4.360684,5.930636,0.175681,-4.144976,-7.724835,-5.972623,-0.493625,-6.415866,-4.565140,9.395835,-8.557736,9.537008,-2.900227,6.535374,-7.664630,6.208536,0.947761,7.390280,3.619456,-9.366543,-9.722981,-6.530836,-3.283065,-8.640081,-6.186162,-1.771167,2.916137,5.889826,-4.908692,8.943613,-7.658604,2.644203,5.999555,-9.514199,-0.912268,2.851237,8.512183,-5.271817,-2.029947,-4.587191,-1.319515,9.770364,-6.838577,0.885980,3.679259,8.176194,1.500201,8.641937,-3.336933,-8.437725,-3.798392,0.607448,0.960433,6.091623,-5.521588,-2.756847,-6.578688,-5.407251,-5.026199,-5.935765,0.128858,8.412473,-0.095231,8.626898,-3.586732,5.281596,4.748964,-3.304227,-6.636108,-9.274421,-5.490029,-8.807366,-1.855999,5.162895,-1.707648,1.266962,-0.471190,7.470413,4.116067,9.296823,-9.246700,5.334805,0.905487,-0.014870,4.173915,-2.410228,4.036199,8.186533,8.182077,-8.801192,-2.326389,0.133685,4.059402,0.260798,-4.840101,-0.104684,7.111028,-0.204108,-7.433923,3.359691,-3.325667,1.091051,-8.529515,7.882666,6.620044,9.616787,7.113041,-7.546594,5.575428,-5.949337,-3.726337,-2.989734,-2.346707,-5.113614,3.701431,-6.951060,6.093118,5.224057,-4.423711,-4.095530,5.277765,9.404651,-6.556324,2.857745,6.170317,0.746786,-4.164656,-3.980633,1.912973,8.357602,-5.749407,-8.738204,7.486802,9.457267,-7.664451,-3.847337,7.753050,7.382255,3.364963,-8.724677,-6.898133,9.829432,3.256349,6.368306,-7.680814,-2.579749,-5.010722,2.888205,-2.297716,-4.545518,-8.832350,-7.793745,-4.355116,9.917257,-4.324561,2.251516,-6.126108,-6.910696,-0.681626,-6.145208,-4.918838,5.564833,4.135687,9.835597,3.218600,-5.128181,-1.001442,3.815297,-5.594200,-2.623286,-9.993135,2.491444,-6.320927,7.270911,5.756591,-9.045670,-9.824630,8.043941,-3.211852,9.336726,-6.464789,6.560211,6.707536,4.137385,9.647741,-0.047497,8.046519,-3.642606,7.180023,-6.897594,6.553924,3.080034,-3.662398,9.106285,2.371332,-0.680217,1.786377,-8.624730,9.566839,-1.661183,3.226230,-1.009735,8.291253,3.329787,-4.140556,7.292881,-1.753716,9.316602,0.133392,5.338528,-7.176968,-1.109831,6.207543,-0.684981,2.745049,3.501622,4.463435,0.590870,9.460161,-9.472789,5.211042,9.412010,-9.418776,-9.412289,-7.189695,-2.315382,-0.704967,-1.166952,7.238966,-8.723277,1.737090,6.857355,7.738004,6.869623,8.529427,5.242955,-8.347243,-4.564577,5.081411,-1.850271,-7.323998,-6.605213,-3.000191,-1.851532,2.882352], dtype = "float64")#candidate|11843|(1859,)|const|float64
call_11842 = relay.TupleGetItem(func_2465_call(relay.reshape(const_11843.astype('float64'), [13, 11, 13]), relay.reshape(const_11843.astype('float64'), [13, 11, 13]), ), 0)
call_11844 = relay.TupleGetItem(func_2469_call(relay.reshape(const_11843.astype('float64'), [13, 11, 13]), relay.reshape(const_11843.astype('float64'), [13, 11, 13]), ), 0)
func_8711_call = mod.get_global_var('func_8711')
func_8716_call = mutated_mod.get_global_var('func_8716')
var_11848 = relay.var("var_11848", dtype = "uint16", shape = (216,))#candidate|11848|(216,)|var|uint16
const_11849 = relay.const([-8.107739,-7.660332,1.960873,-7.204438,-4.959175,-4.942037,-5.235241,2.184062,9.507473,3.573876,4.070246,1.435648,-1.068969,-8.171383,-5.944216,0.608247,1.431538,-8.358770,-0.318318,-3.423477,-5.291052,-9.927809,-8.008600,2.668989,5.600102,8.033580,-9.594647,1.296587,1.760714,7.121740,3.912454,-5.587370,-9.796558,6.284665,1.658899,0.986844,-5.098269,6.352787,-1.414669,4.230193,9.713218,-4.799211,3.269979,-6.571560,0.387995,-7.992606,-2.981369,9.202555,-0.020338,9.014655,-3.944938,0.288926,-2.746529,9.184065,2.913105,-6.965724,8.250566,4.724370,-8.986969,5.883912,2.069970,-1.288620,-0.388313,-9.818963,1.160227,8.592993,-9.570655,-2.049706,1.371939,1.770169,-9.385356,9.952036,-0.721928,-4.726015,-7.291560,-9.463583,-3.641896,-1.651420,-0.873862,6.724541,-0.954728,-4.932259,6.537079,-2.525792,-6.108866,-2.850312,6.272548,2.331722,-6.904200,6.713532,5.469937,-8.056980,-8.666671,7.400028,6.296682,-4.971317,1.345428,-8.358784,-4.307783,5.681082,5.430020,9.567511,3.722269,-4.926875,0.217894,-4.442883,-1.610506,-5.737989,3.930986,4.916631,-0.385334,8.628762,-6.246339,-7.912090,-1.378527,-5.476844,5.508775,-9.579394,-9.837359,-3.813829,-8.148772,-3.943428,0.180015,-3.217949,-3.101978,9.422485,4.496106,-1.736692,1.856877,-5.030481,-3.497788,0.263303,7.903403,-7.098550,-1.990344,4.345481,-3.680799,9.814033,-5.079333,-8.087479,-1.437236,2.781580,-7.231961,1.960624,-6.813818,0.465783,-1.391780,2.444814,5.015487,7.814955,-1.744317,-0.365447,5.085457,9.118746,0.111754,-3.920668,4.856176,-8.136439,-8.868329,1.219353,9.690003,2.048218,7.598544,8.483705,7.425903,9.850754,3.684447,-4.308275,1.708372,-5.395814,5.186193,-5.921919,-6.820337,3.779241,0.651014,-1.817132,7.369081,-0.668687,-9.162227,5.318259,9.736744,8.276343,6.011055,5.977699,9.739086,9.017693,-8.226773,-2.087336,-0.910559,6.910423,-7.428209,9.866053,-8.837523,6.122316,3.176615,-3.950286,2.081903,-4.988808,4.226098,5.343906,7.230215,3.351470,1.992903,5.887801,4.500408,1.481727,-6.957569,-0.169448,-2.859564,6.124921,-0.869421,-6.330541,7.912868,-2.168280,-5.755899,-9.847244,9.583773,-5.320582,0.354447,-8.644735,-5.277700,-7.945385,-2.173724,7.244187,-5.744668,3.939668,-1.548626,-0.028435,-4.477167,-9.909549,0.272521,-8.319310,6.157973,0.025956,-6.762083,0.576232,3.584664,7.355198,-3.119350,-6.032552,1.531799,-2.958151,-7.573866,-1.228781,4.976501,7.600454,7.383854,1.108121,-2.332893,1.511758,4.458928,-3.768564,-4.543464,-1.563554,-6.336282,-1.855634,-2.710440,-6.130344,9.421717,1.389365,8.864459,3.934318,1.551088,8.639578,2.808494,-4.723211,-8.808036,8.164438,9.343976,4.374565,8.697321,1.618656,-4.856609,-8.812576,-2.596159,9.288465,-4.805211,-8.750066,0.050510,-4.849651,-3.304500,3.046078,0.681911,-4.125529,7.488020,-9.321134,0.488208,-2.016160,8.337984,4.174257,4.359354,-7.958016,-9.669809,7.835143,-4.068854,-2.231785,-1.856682,6.380437,6.559046,-5.975726,-8.679603,0.503756,4.614200,5.092641,-6.554419,-2.135060,6.570004,5.458614,-4.803749,-8.832143,-9.684333,8.144739,-6.990911,-0.155412,-9.512810,-9.185659,-9.482775,-2.356571,-2.902756,-9.079892,1.426137,-5.770201,1.126629,-7.617453,-6.855332,0.985971,3.526723,9.337779,3.888421,0.032376,1.486473,-2.499118,9.494806,3.749574,1.459389,-4.893912], dtype = "float32")#candidate|11849|(336,)|const|float32
call_11847 = relay.TupleGetItem(func_8711_call(relay.reshape(var_11848.astype('uint16'), [8, 3, 9]), relay.reshape(var_11848.astype('uint16'), [8, 3, 9]), relay.reshape(const_11849.astype('float32'), [336,]), ), 3)
call_11850 = relay.TupleGetItem(func_8716_call(relay.reshape(var_11848.astype('uint16'), [8, 3, 9]), relay.reshape(var_11848.astype('uint16'), [8, 3, 9]), relay.reshape(const_11849.astype('float32'), [336,]), ), 3)
func_581_call = mod.get_global_var('func_581')
func_584_call = mutated_mod.get_global_var('func_584')
const_11852 = relay.const([-8,-6,1,1,-8,3,-9,10,10,7,3,9,5,6,7,-1,-10,-9,8,-8,-9,10,-3,9,8,-5,7,8,5,10,-5,-7,9,-8,8,-1,7,6,-2,5,8,2,8,-9,-5,-5,1,7], dtype = "uint32")#candidate|11852|(48,)|const|uint32
call_11851 = relay.TupleGetItem(func_581_call(relay.reshape(const_11852.astype('uint32'), [2, 3, 8]), relay.reshape(const_11852.astype('uint32'), [2, 3, 8]), ), 0)
call_11853 = relay.TupleGetItem(func_584_call(relay.reshape(const_11852.astype('uint32'), [2, 3, 8]), relay.reshape(const_11852.astype('uint32'), [2, 3, 8]), ), 0)
uop_11858 = relay.sin(call_11833.astype('float64')) # shape=(2002,)
uop_11860 = relay.sin(call_11834.astype('float64')) # shape=(2002,)
output = relay.Tuple([call_11842,const_11843,call_11847,var_11848,const_11849,call_11851,const_11852,uop_11858,])
output2 = relay.Tuple([call_11844,const_11843,call_11850,var_11848,const_11849,call_11853,const_11852,uop_11860,])
func_11875 = relay.Function([var_11848,], output)
mod['func_11875'] = func_11875
mod = relay.transform.InferType()(mod)
mutated_mod['func_11875'] = func_11875
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11876 = relay.var("var_11876", dtype = "uint16", shape = (216,))#candidate|11876|(216,)|var|uint16
func_11875_call = mutated_mod.get_global_var('func_11875')
call_11877 = func_11875_call(var_11876)
output = call_11877
func_11878 = relay.Function([var_11876], output)
mutated_mod['func_11878'] = func_11878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11880 = relay.var("var_11880", dtype = "float64", shape = (8, 2, 10))#candidate|11880|(8, 2, 10)|var|float64
uop_11881 = relay.sinh(var_11880.astype('float64')) # shape=(8, 2, 10)
output = uop_11881
output2 = uop_11881
func_11886 = relay.Function([var_11880,], output)
mod['func_11886'] = func_11886
mod = relay.transform.InferType()(mod)
mutated_mod['func_11886'] = func_11886
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11887 = relay.var("var_11887", dtype = "float64", shape = (8, 2, 10))#candidate|11887|(8, 2, 10)|var|float64
func_11886_call = mutated_mod.get_global_var('func_11886')
call_11888 = func_11886_call(var_11887)
output = call_11888
func_11889 = relay.Function([var_11887], output)
mutated_mod['func_11889'] = func_11889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5445_call = mod.get_global_var('func_5445')
func_5446_call = mutated_mod.get_global_var('func_5446')
call_12057 = func_5445_call()
call_12058 = func_5445_call()
output = call_12057
output2 = call_12058
func_12083 = relay.Function([], output)
mod['func_12083'] = func_12083
mod = relay.transform.InferType()(mod)
output = func_12083()
func_12084 = relay.Function([], output)
mutated_mod['func_12084'] = func_12084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8101_call = mod.get_global_var('func_8101')
func_8102_call = mutated_mod.get_global_var('func_8102')
call_12125 = relay.TupleGetItem(func_8101_call(), 0)
call_12126 = relay.TupleGetItem(func_8102_call(), 0)
func_1491_call = mod.get_global_var('func_1491')
func_1493_call = mutated_mod.get_global_var('func_1493')
const_12132 = relay.const([-9,5,-1,-2,-4,9,4,-3,-10,3,-2,8,-3,3,-3,-9,7,10,6,-8,-8,6,7,-8,-6,6,6,-5,-2,-2,1,7,-3,4,10,2,9,2,9,-2,1,-3,3,-5,-8,-9,-6,7,-7,1,-4,-5,-2,10,9,6,-9,6,-9,-6,7,8,-6,-7,7,-10,2,6,4,-3,6,-2,10,-9,-10,8,2,3,2,-1,-9,-9,-8,-2,1,-5,7,-3,5,6,7,-3,1,-9,7,1,2,-4,7,3,3,4,-3,-9,-1,4,-8,-6,-4,-1,4,-4,1,7,3,-5,-5,-8,-8,-9,-1,-6,1,-7,7,-3,-7,-9,4,-6,3,-5,2,9,2,8,10,-4,6,-3,9,-7,-2,7,-10,2,6,-2,-3,-8,-8,10,-2,8,-6,-4,8,3,6,5,-7,-1,-6,-3,5,-6,10,10,10,2,8,3,7,-5,10,-1], dtype = "int16")#candidate|12132|(176,)|const|int16
call_12131 = relay.TupleGetItem(func_1491_call(relay.reshape(const_12132.astype('int16'), [176,])), 3)
call_12133 = relay.TupleGetItem(func_1493_call(relay.reshape(const_12132.astype('int16'), [176,])), 3)
func_8448_call = mod.get_global_var('func_8448')
func_8449_call = mutated_mod.get_global_var('func_8449')
call_12134 = relay.TupleGetItem(func_8448_call(), 0)
call_12135 = relay.TupleGetItem(func_8449_call(), 0)
func_3388_call = mod.get_global_var('func_3388')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_12153 = relay.TupleGetItem(func_3388_call(), 0)
call_12154 = relay.TupleGetItem(func_3390_call(), 0)
output = relay.Tuple([call_12125,call_12131,const_12132,call_12134,call_12153,])
output2 = relay.Tuple([call_12126,call_12133,const_12132,call_12135,call_12154,])
func_12164 = relay.Function([], output)
mod['func_12164'] = func_12164
mod = relay.transform.InferType()(mod)
output = func_12164()
func_12165 = relay.Function([], output)
mutated_mod['func_12165'] = func_12165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2737_call = mod.get_global_var('func_2737')
func_2738_call = mutated_mod.get_global_var('func_2738')
call_12235 = relay.TupleGetItem(func_2737_call(), 3)
call_12236 = relay.TupleGetItem(func_2738_call(), 3)
func_2633_call = mod.get_global_var('func_2633')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_12237 = relay.TupleGetItem(func_2633_call(), 0)
call_12238 = relay.TupleGetItem(func_2634_call(), 0)
func_9234_call = mod.get_global_var('func_9234')
func_9236_call = mutated_mod.get_global_var('func_9236')
call_12243 = relay.TupleGetItem(func_9234_call(), 0)
call_12244 = relay.TupleGetItem(func_9236_call(), 0)
func_3875_call = mod.get_global_var('func_3875')
func_3876_call = mutated_mod.get_global_var('func_3876')
call_12256 = func_3875_call()
call_12257 = func_3875_call()
func_3633_call = mod.get_global_var('func_3633')
func_3635_call = mutated_mod.get_global_var('func_3635')
call_12260 = relay.TupleGetItem(func_3633_call(), 0)
call_12261 = relay.TupleGetItem(func_3635_call(), 0)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_12270 = func_3679_call()
call_12271 = func_3679_call()
output = relay.Tuple([call_12235,call_12237,call_12243,call_12256,call_12260,call_12270,])
output2 = relay.Tuple([call_12236,call_12238,call_12244,call_12257,call_12261,call_12271,])
func_12280 = relay.Function([], output)
mod['func_12280'] = func_12280
mod = relay.transform.InferType()(mod)
mutated_mod['func_12280'] = func_12280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12280_call = mutated_mod.get_global_var('func_12280')
call_12281 = func_12280_call()
output = call_12281
func_12282 = relay.Function([], output)
mutated_mod['func_12282'] = func_12282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12288 = relay.var("var_12288", dtype = "float64", shape = (13, 15, 3))#candidate|12288|(13, 15, 3)|var|float64
uop_12289 = relay.atan(var_12288.astype('float64')) # shape=(13, 15, 3)
output = uop_12289
output2 = uop_12289
func_12300 = relay.Function([var_12288,], output)
mod['func_12300'] = func_12300
mod = relay.transform.InferType()(mod)
mutated_mod['func_12300'] = func_12300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12301 = relay.var("var_12301", dtype = "float64", shape = (13, 15, 3))#candidate|12301|(13, 15, 3)|var|float64
func_12300_call = mutated_mod.get_global_var('func_12300')
call_12302 = func_12300_call(var_12301)
output = call_12302
func_12303 = relay.Function([var_12301], output)
mutated_mod['func_12303'] = func_12303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8867_call = mod.get_global_var('func_8867')
func_8868_call = mutated_mod.get_global_var('func_8868')
call_12314 = func_8867_call()
call_12315 = func_8867_call()
output = call_12314
output2 = call_12315
func_12316 = relay.Function([], output)
mod['func_12316'] = func_12316
mod = relay.transform.InferType()(mod)
output = func_12316()
func_12317 = relay.Function([], output)
mutated_mod['func_12317'] = func_12317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10184_call = mod.get_global_var('func_10184')
func_10186_call = mutated_mod.get_global_var('func_10186')
call_12343 = relay.TupleGetItem(func_10184_call(), 0)
call_12344 = relay.TupleGetItem(func_10186_call(), 0)
output = relay.Tuple([call_12343,])
output2 = relay.Tuple([call_12344,])
func_12345 = relay.Function([], output)
mod['func_12345'] = func_12345
mod = relay.transform.InferType()(mod)
mutated_mod['func_12345'] = func_12345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12345_call = mutated_mod.get_global_var('func_12345')
call_12346 = func_12345_call()
output = call_12346
func_12347 = relay.Function([], output)
mutated_mod['func_12347'] = func_12347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_12379 = func_3679_call()
call_12380 = func_3679_call()
output = relay.Tuple([call_12379,])
output2 = relay.Tuple([call_12380,])
func_12394 = relay.Function([], output)
mod['func_12394'] = func_12394
mod = relay.transform.InferType()(mod)
output = func_12394()
func_12395 = relay.Function([], output)
mutated_mod['func_12395'] = func_12395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12417 = relay.var("var_12417", dtype = "float64", shape = (8, 2, 9))#candidate|12417|(8, 2, 9)|var|float64
uop_12418 = relay.sin(var_12417.astype('float64')) # shape=(8, 2, 9)
output = relay.Tuple([uop_12418,])
output2 = relay.Tuple([uop_12418,])
F = relay.Function([var_12417,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12417,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

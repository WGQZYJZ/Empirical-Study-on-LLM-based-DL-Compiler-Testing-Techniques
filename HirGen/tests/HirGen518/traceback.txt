==========mod==========
#[version = "0.0.5"]
def @func_353(%var_314: Tensor[(2, 7, 10), int32]) -> (Tensor[(2, 7, 10), int32], Tensor[(2, 11, 16), int8], Tensor[(2, 176), int64], Tensor[(2, 7, 10), float32], Tensor[(2, 11, 16), int8]) {
  %0 = cast(%var_314, dtype="int32") /* ty=Tensor[(2, 7, 10), int32] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(2, 7, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 7, 10), int32] */, dtype="int32") /* ty=Tensor[(2, 7, 10), int32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 176), int64] */, dtype="int64") /* ty=Tensor[(2, 176), int64] */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 176), int64] */, dtype="int64") /* ty=Tensor[(2, 176), int64] */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 176), int64] */, dtype="int64") /* ty=Tensor[(2, 176), int64] */;
  %7 = reshape(%4, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %8 = reshape(%5, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %9 = reshape(%6, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %10 = cast(%var_314, dtype="float32") /* ty=Tensor[(2, 7, 10), float32] */;
  %11 = @func_232(%7, %8, %9) /* ty=Tensor[(2, 11, 16), int8] */;
  %12 = cast(%11, dtype="int64") /* ty=Tensor[(2, 11, 16), int64] */;
  %13 = cast(%11, dtype="int64") /* ty=Tensor[(2, 11, 16), int64] */;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 176), int64] */, dtype="int64") /* ty=Tensor[(2, 176), int64] */;
  %15 = reshape(%12, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %16 = reshape(%13, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %17 = reshape(%14, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %18 = add(%2, %3) /* ty=Tensor[(2, 7, 10), int32] */;
  %19 = tan(%10) /* ty=Tensor[(2, 7, 10), float32] */;
  %20 = @func_232(%15, %16, %17) /* ty=Tensor[(2, 11, 16), int8] */;
  (%18, %11, meta[relay.Constant][1] /* ty=Tensor[(2, 176), int64] */, %19, %20)
}

def @func_907(%var_862: Tensor[(2, 2, 6), bool], %var_863: Tensor[(2, 2, 6), bool], %var_873: Tensor[(2, 2, 6), bool], %var_878: float64, %var_879: Tensor[(960), float64]) -> (Tensor[(2, 2, 6), bool], Tensor[(2, 2, 6), float64], Tensor[(12, 10, 8), float64], float64, Tensor[(960), float64], Tensor[(2, 2, 6), float64]) {
  %21 = cast(%var_863, dtype="bool") /* ty=Tensor[(2, 2, 6), bool] */;
  %22 = shape_of(%var_862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%var_862, dtype="bool") /* ty=Tensor[(2, 2, 6), bool] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %25 = cast(%var_873, dtype="float64") /* ty=Tensor[(2, 2, 6), float64] */;
  %26 = shape_of(%var_862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%var_862, dtype="float64") /* ty=Tensor[(2, 2, 6), float64] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %29 = cast(%var_878, dtype="float64") /* ty=float64 */;
  %30 = cast(%var_879, dtype="float64") /* ty=Tensor[(960), float64] */;
  %31 = reshape(%29, newshape=[]) /* ty=float64 */;
  %32 = reshape(%30, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %33 = @func_554(%31, %32) /* ty=(Tensor[(12, 10, 8), float64],) */;
  %34 = cast(%var_863, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
  %35 = asinh(%34) /* ty=Tensor[(2, 2, 6), float32] */;
  %36 = cast(%35, dtype="float64") /* ty=Tensor[(2, 2, 6), float64] */;
  %37 = logical_or(%23, %24) /* ty=Tensor[(2, 2, 6), bool] */;
  %38 = add(%27, %28) /* ty=Tensor[(2, 2, 6), float64] */;
  %39 = %33.0;
  %40 = acos(%36) /* ty=Tensor[(2, 2, 6), float64] */;
  (%37, %38, %39, %var_878, %var_879, %40)
}

def @func_5121(%var_5092: Tensor[(9, 9, 2), uint16], %var_5098: Tensor[(36, 10), uint8]) -> (Tensor[(9, 9, 2), uint16], Tensor[(2, 12, 15), uint8], Tensor[(36, 10), uint8], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 1, 2), uint16] */, dtype="uint16") /* ty=Tensor[(9, 1, 2), uint16] */;
  %42 = cast(%var_5092, dtype="uint16") /* ty=Tensor[(9, 9, 2), uint16] */;
  %43 = cast(%var_5098, dtype="uint8") /* ty=Tensor[(36, 10), uint8] */;
  %44 = reshape(%43, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint8] */;
  %45 = @func_1535(%44) /* ty=(Tensor[(2, 12, 15), uint8], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
  %46 = logical_xor(%41, %42) /* ty=Tensor[(9, 9, 2), uint16] */;
  %47 = %45.0;
  %48 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %49 = @func_2670() /* ty=Tensor[(12, 15, 4), float32] */;
  (%46, %47, %var_5098, %48, %49)
}

def @func_3658() -> (Tensor[(12, 15, 4), float32],) {
  %50 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  (%50,)
}

def @func_2796() -> Tensor[(12, 15, 4), float32] {
  @func_2553() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_7110(%var_7076: Tensor[(5, 3, 4), float64], %var_7077: Tensor[(5, 3, 4), float64], %var_7108: Tensor[(18, 4), float32]) -> (Tensor[(5, 3, 4), float64], Tensor[(5, 3, 4), float64], Tensor[(9, 8), float32], Tensor[(18, 4), float32]) {
  %51 = cast(%var_7077, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %52 = shape_of(%var_7076, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%var_7076, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %55 = cast(%var_7077, dtype="float32") /* ty=Tensor[(5, 3, 4), float32] */;
  %56 = log(%55) /* ty=Tensor[(5, 3, 4), float32] */;
  %57 = cast(%56, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %58 = cast(%var_7108, dtype="float32") /* ty=Tensor[(18, 4), float32] */;
  %59 = reshape(%58, newshape=[9, 8]) /* ty=Tensor[(9, 8), float32] */;
  %60 = minimum(%53, %54) /* ty=Tensor[(5, 3, 4), float64] */;
  %61 = acos(%57) /* ty=Tensor[(5, 3, 4), float64] */;
  %62 = @func_1668(%59) /* ty=Tensor[(9, 8), float32] */;
  (%60, %61, %62, %var_7108)
}

def @func_9882() -> (Tensor[(140), int32], Tensor[(14, 9, 11), float64], Tensor[(720), float32]) {
  %63 = @func_8892() /* ty=(Tensor[(140), int32],) */;
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %65 = reshape(%64, newshape=[12, 15, 4]) /* ty=Tensor[(12, 15, 4), float32] */;
  %66 = @func_4850(%65) /* ty=(Tensor[(12, 15, 4), float64], Tensor[(2002), int32], Tensor[(14, 9, 11), float64]) */;
  %67 = %63.0;
  %68 = %66.2;
  (%67, %68, meta[relay.Constant][3] /* ty=Tensor[(720), float32] */)
}

def @func_12164() -> (Tensor[(12, 15, 4), float32], Tensor[(5, 28), int32], Tensor[(176), int16], Tensor[(14, 2, 12), int32], Tensor[(2002), int32]) {
  %69 = @func_8101() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %70 = cast(meta[relay.Constant][4] /* ty=Tensor[(176), int16] */, dtype="int16") /* ty=Tensor[(176), int16] */;
  %71 = reshape(%70, newshape=[176]) /* ty=Tensor[(176), int16] */;
  %72 = @func_1491(%71) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) */;
  %73 = @func_8448() /* ty=(Tensor[(14, 2, 12), int32],) */;
  %74 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %75 = %69.0;
  %76 = %72.3;
  %77 = %73.0;
  %78 = %74.0;
  (%75, %76, meta[relay.Constant][4] /* ty=Tensor[(176), int16] */, %77, %78)
}

def @func_11683() -> (Tensor[(2002), float64], Tensor[(12, 16, 10), float32]) {
  %79 = @func_10171() /* ty=(Tensor[(2002), int8],) */;
  %80 = %79.0;
  %81 = cast(meta[relay.Constant][5] /* ty=Tensor[(2002), int8] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %82 = shape_of(%80, dtype="int32") /* ty=Tensor[(1), int32] */;
  %83 = cast(%80, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?), float64] */;
  %85 = @func_10280() /* ty=(Tensor[(12, 16, 10), float32], Tensor[(176), int16]) */;
  %86 = floor_mod(%83, %84) /* ty=Tensor[(2002), float64] */;
  %87 = %85.0;
  (%86, %87)
}

def @func_12083() -> Tensor[(12, 15, 4), float32] {
  @func_5445() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_6265(%var_6250: Tensor[(16, 1, 7), float32]) -> Tensor[(16, 1, 7), float32] {
  %88 = cast(%var_6250, dtype="float32") /* ty=Tensor[(16, 1, 7), float32] */;
  sin(%88) /* ty=Tensor[(16, 1, 7), float32] */
}

def @func_10579(%var_10564: Tensor[(3, 3, 11), uint64], %var_10565: Tensor[(3, 3, 11), uint64]) -> Tensor[(3, 3, 11), float32] {
  %89 = cast(%var_10565, dtype="uint64") /* ty=Tensor[(3, 3, 11), uint64] */;
  %90 = shape_of(%var_10564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%var_10564, dtype="uint64") /* ty=Tensor[(3, 3, 11), uint64] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %93 = minimum(%91, %92) /* ty=Tensor[(3, 3, 11), uint64] */;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(3, 3, 11), float32] */;
  cosh(%94) /* ty=Tensor[(3, 3, 11), float32] */
}

def @func_4647() -> Tensor[(12, 15, 4), float32] {
  @func_2553() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_11053() -> Tensor[(1859), uint16] {
  @func_10992() /* ty=Tensor[(1859), uint16] */
}

def @func_6159() -> Tensor[(12, 15, 4), float32] {
  @func_2796() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_232(%var_169: Tensor[(2, 11, 16), int64], %var_170: Tensor[(2, 11, 16), int64], %var_191: Tensor[(2, 11, 16), int64]) -> Tensor[(2, 11, 16), int8] {
  %95 = cast(%var_170, dtype="int64") /* ty=Tensor[(2, 11, 16), int64] */;
  %96 = shape_of(%var_169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%var_169, dtype="int64") /* ty=Tensor[(2, 11, 16), int64] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %99 = logical_xor(%97, %98) /* ty=Tensor[(2, 11, 16), int64] */;
  %100 = cast(%99, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %101 = acos(%100) /* ty=Tensor[(2, 11, 16), float32] */;
  %102 = cast(%var_191, dtype="bool") /* ty=Tensor[(2, 11, 16), bool] */;
  %103 = shape_of(%var_169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%var_169, dtype="bool") /* ty=Tensor[(2, 11, 16), bool] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %106 = less(%104, %105) /* ty=Tensor[(2, 11, 16), bool] */;
  %107 = cast(%106, dtype="int8") /* ty=Tensor[(2, 11, 16), int8] */;
  %108 = shape_of(%101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%101, dtype="int8") /* ty=Tensor[(2, 11, 16), int8] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%109, %110) /* ty=Tensor[(2, 11, 16), int8] */
}

def @func_8984(%var_8971: Tensor[(8, 12, 10), uint32], %var_8972: Tensor[(8, 12, 10), uint32]) -> (Tensor[(8, 12, 10), uint32], Tensor[(12, 15, 4), float32]) {
  %111 = cast(%var_8972, dtype="uint32") /* ty=Tensor[(8, 12, 10), uint32] */;
  %112 = shape_of(%var_8971, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%var_8971, dtype="uint32") /* ty=Tensor[(8, 12, 10), uint32] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %115 = left_shift(%113, %114) /* ty=Tensor[(8, 12, 10), uint32] */;
  %116 = @func_6159() /* ty=Tensor[(12, 15, 4), float32] */;
  (%115, %116)
}

def @func_5180() -> Tensor[(12, 15, 4), float32] {
  @func_2746() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_9052() -> Tensor[(12, 15, 4), float32] {
  @func_8867() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_7447() -> (Tensor[(12, 15, 4), float32],) {
  %117 = @func_2746() /* ty=Tensor[(12, 15, 4), float32] */;
  (%117,)
}

def @func_9171() -> Tensor[(140), int32] {
  %118 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
  %118.0
}

def @func_6706(%var_6702: Tensor[(810), float64]) -> (Tensor[(2002), int32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(810), uint8]) {
  %119 = @func_3806() /* ty=(Tensor[(2002), int32],) */;
  %120 = cast(meta[relay.Constant][6] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %121 = reshape(%120, newshape=[9, 9, 10]) /* ty=Tensor[(9, 9, 10), float64] */;
  %122 = @func_4800(%121) /* ty=(Tensor[(9, 9, 10), float64], Tensor[(12, 15, 4), float32]) */;
  %123 = @func_3658() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %124 = cast(%var_6702, dtype="uint8") /* ty=Tensor[(810), uint8] */;
  %125 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(810), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %126 = cast(meta[relay.Constant][6] /* ty=Tensor[(810), float64] */, dtype="uint8") /* ty=Tensor[(810), uint8] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %128 = %119.0;
  %129 = %122.1;
  %130 = @func_5180() /* ty=Tensor[(12, 15, 4), float32] */;
  %131 = %123.0;
  %132 = bitwise_or(%126, %127) /* ty=Tensor[(810), uint8] */;
  (%128, %129, %130, %131, %132)
}

def @func_7750() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %133 = @func_5054() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 15, 4), float32]) */;
  %134 = %133.0;
  %135 = @func_4647() /* ty=Tensor[(12, 15, 4), float32] */;
  (%134, %135)
}

def @func_7066(%var_7050: Tensor[(13, 3, 6), float64], %var_7051: Tensor[(13, 3, 6), float64], %var_7057: Tensor[(336), float64], %var_7063: Tensor[(480, 2), float64]) -> (Tensor[(13, 3, 6), float64], Tensor[(14, 2, 12), bool], Tensor[(336), float64], Tensor[(12, 10, 8), float64], float64, Tensor[(480, 2), float64]) {
  %136 = cast(%var_7051, dtype="float64") /* ty=Tensor[(13, 3, 6), float64] */;
  %137 = shape_of(%var_7050, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%var_7050, dtype="float64") /* ty=Tensor[(13, 3, 6), float64] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %140 = cast(%var_7057, dtype="float64") /* ty=Tensor[(336), float64] */;
  %141 = reshape(%140, newshape=[14, 2, 12]) /* ty=Tensor[(14, 2, 12), float64] */;
  %142 = @func_5904(%141) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), float32], Tensor[(14, 2, 12), bool]) */;
  %143 = cast(-0.261531f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %144 = cast(%var_7063, dtype="float64") /* ty=Tensor[(480, 2), float64] */;
  %145 = reshape(%143, newshape=[]) /* ty=float64 */;
  %146 = reshape(%144, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %147 = @func_554(%145, %146) /* ty=(Tensor[(12, 10, 8), float64],) */;
  %148 = add(%138, %139) /* ty=Tensor[(13, 3, 6), float64] */;
  %149 = %142.2;
  %150 = %147.0;
  (%148, %149, %var_7057, %150, -0.261531f64 /* ty=float64 */, %var_7063)
}

def @func_3517() -> Tensor[(12, 15, 4), float32] {
  @func_2670() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_12394() -> (Tensor[(12, 15, 4), float32],) {
  %151 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
  (%151,)
}

def @func_5054() -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 15, 4), float32]) {
  %152 = @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %153 = cast(meta[relay.Constant][7] /* ty=Tensor[(1859), float64] */, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %154 = cast(meta[relay.Constant][7] /* ty=Tensor[(1859), float64] */, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %155 = reshape(%153, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %156 = reshape(%154, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %157 = @func_2465(%155, %156) /* ty=(Tensor[(13, 11, 13), float64],) */;
  %158 = @func_4627() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %159 = %152.0;
  %160 = %157.0;
  %161 = %158.0;
  (%159, %160, meta[relay.Constant][7] /* ty=Tensor[(1859), float64] */, %161)
}

def @func_6118() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %162 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
  %163 = @func_2746() /* ty=Tensor[(12, 15, 4), float32] */;
  (%162, %163)
}

def @func_2746() -> Tensor[(12, 15, 4), float32] {
  %164 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %164.0
}

def @func_2670() -> Tensor[(12, 15, 4), float32] {
  %165 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %165.0
}

def @func_2553() -> Tensor[(12, 15, 4), float32] {
  %166 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %166.0
}

def @func_11191() -> (Tensor[(12, 15, 4), float32], Tensor[(360), uint8]) {
  %167 = @func_6479() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %168 = @func_4472() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) */;
  %169 = %167.0;
  %170 = %168.2;
  (%169, %170)
}

def @func_4424() -> (Tensor[(12, 15, 4), float32],) {
  %171 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
  (%171,)
}

def @func_5596() -> (Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(9, 2, 12), float32], Tensor[(216), float32]) {
  %172 = @func_5318() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %173 = @func_4472() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) */;
  %174 = cast(meta[relay.Constant][8] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %175 = reshape(%174, newshape=[9, 2, 12]) /* ty=Tensor[(9, 2, 12), float32] */;
  %176 = %172.0;
  %177 = %173.1;
  %178 = @func_3054(%175) /* ty=Tensor[(9, 2, 12), float32] */;
  (%176, %177, %178, meta[relay.Constant][8] /* ty=Tensor[(216), float32] */)
}

def @func_8488() -> (Tensor[(2002), int32],) {
  %179 = @func_8462() /* ty=(Tensor[(2002), int32],) */;
  %180 = %179.0;
  (%180,)
}

def @func_3498(%var_3459: Tensor[(2002), int32], %var_3465: Tensor[(176), int16]) -> (Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(2002), uint64], Tensor[(2002), int32]) {
  %181 = cast(%var_3465, dtype="int16") /* ty=Tensor[(176), int16] */;
  %182 = reshape(%181, newshape=[176]) /* ty=Tensor[(176), int16] */;
  %183 = @func_1491(%182) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) */;
  %184 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %185 = %184.0;
  %186 = cast(%185, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %187 = sinh(%186) /* ty=Tensor[(2002), float32] */;
  %188 = cast(%var_3459, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %189 = shape_of(%185, dtype="int32") /* ty=Tensor[(1), int32] */;
  %190 = cast(%185, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?), float32] */;
  %192 = multiply(%190, %191) /* ty=Tensor[(2002), float32] */;
  %193 = cast(%192, dtype="uint64") /* ty=Tensor[(2002), uint64] */;
  %194 = shape_of(%187, dtype="int32") /* ty=Tensor[(1), int32] */;
  %195 = cast(%187, dtype="uint64") /* ty=Tensor[(2002), uint64] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %197 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %198 = %183.1;
  %199 = bitwise_or(%195, %196) /* ty=Tensor[(2002), uint64] */;
  %200 = %197.0;
  (%198, %var_3465, %199, %200)
}

def @func_9575() -> (Tensor[(12, 15, 4), float32],) {
  %201 = @func_8760() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32]) */;
  %202 = %201.0;
  (%202,)
}

def @func_5142() -> (Tensor[(12, 15, 4), float32],) {
  %203 = @func_3270() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %204 = %203.0;
  (%204,)
}

def @func_9707(%var_9688: Tensor[(216), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(9, 2, 12), float32], Tensor[(216), float32], Tensor[(12, 15, 4), float32]) {
  %205 = cast(%var_9688, dtype="float32") /* ty=Tensor[(216), float32] */;
  %206 = reshape(%205, newshape=[9, 2, 12]) /* ty=Tensor[(9, 2, 12), float32] */;
  %207 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %208 = @func_3054(%206) /* ty=Tensor[(9, 2, 12), float32] */;
  %209 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
  (%207, %208, %var_9688, %209)
}

def @func_11633() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %210 = @func_10689() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %211 = %210.0;
  %212 = @func_11039() /* ty=Tensor[(12, 15, 4), float32] */;
  (%211, %212)
}

def @func_7996() -> (Tensor[(12, 15, 4), float32],) {
  %213 = @func_6140() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %214 = %213.0;
  (%214,)
}

def @func_5318() -> (Tensor[(12, 15, 4), float32],) {
  %215 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
  (%215,)
}

def @func_3806() -> (Tensor[(2002), int32],) {
  %216 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
  %217 = %216.2;
  (%217,)
}

def @func_3388() -> (Tensor[(2002), int32],) {
  %218 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
  %219 = %218.2;
  (%219,)
}

def @func_8318(%var_8243: Tensor[(360), uint8], %var_8293: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(360), uint8], Tensor[(140), int32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32]) {
  %220 = cast(%var_8243, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %221 = reshape(%220, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint8] */;
  %222 = @func_1535(%221) /* ty=(Tensor[(2, 12, 15), uint8], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
  %223 = cast(%var_8293, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %224 = reshape(%223, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %225 = @func_3331(%224) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(16, 5, 13), float64], Tensor[(140), int32], Tensor[(1287), float32], Tensor[(12, 15, 4), float32]) */;
  %226 = @func_5843() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %227 = @func_5086() /* ty=Tensor[(12, 15, 4), float32] */;
  %228 = %222.1;
  %229 = %225.4;
  %230 = %226.1;
  (%227, %228, %var_8243, %229, %var_8293, %230)
}

def @func_8462() -> (Tensor[(2002), int32],) {
  %231 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %232 = %231.0;
  (%232,)
}

def @func_3875() -> Tensor[(12, 15, 4), float32] {
  @func_2553() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_5530(%var_5513: Tensor[(8, 1, 6), float32], %var_5525: float64) -> (Tensor[(8, 1, 6), float32], Tensor[(12, 10, 8), float64], float64, Tensor[(10, 96), float64]) {
  %233 = cast(%var_5513, dtype="float32") /* ty=Tensor[(8, 1, 6), float32] */;
  %234 = cast(%var_5525, dtype="float64") /* ty=float64 */;
  %235 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %236 = reshape(%234, newshape=[]) /* ty=float64 */;
  %237 = reshape(%235, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %238 = @func_554(%236, %237) /* ty=(Tensor[(12, 10, 8), float64],) */;
  %239 = exp(%233) /* ty=Tensor[(8, 1, 6), float32] */;
  %240 = %238.0;
  (%239, %240, %var_5525, meta[relay.Constant][9] /* ty=Tensor[(10, 96), float64] */)
}

def @main(%var_12417: Tensor[(8, 2, 9), float64]) -> (Tensor[(8, 2, 9), float64],) {
  %241 = cast(%var_12417, dtype="float64") /* ty=Tensor[(8, 2, 9), float64] */;
  %242 = sin(%241) /* ty=Tensor[(8, 2, 9), float64] */;
  (%242,)
}

def @func_9017() -> Tensor[(12, 15, 4), float32] {
  %243 = @func_6410() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %243.0
}

def @func_5843() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %244 = @func_3875() /* ty=Tensor[(12, 15, 4), float32] */;
  %245 = @func_2746() /* ty=Tensor[(12, 15, 4), float32] */;
  (%244, %245)
}

def @func_9526() -> Tensor[(2002), int32] {
  %246 = @func_8965() /* ty=(Tensor[(14, 2, 12), int32], Tensor[(2002), int32]) */;
  %246.1
}

def @func_2633() -> (Tensor[(12, 15, 4), float32],) {
  %247 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %248 = %247.0;
  (%248,)
}

def @func_7306(%var_7291: Tensor[(39, 3), float32]) -> (Tensor[(39, 3), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) {
  %249 = @func_6557() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32]) */;
  %250 = %249.2;
  %251 = cast(%var_7291, dtype="float32") /* ty=Tensor[(39, 3), float32] */;
  %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(2), int32] */;
  %253 = cast(%250, dtype="float32") /* ty=Tensor[(39, 3), float32] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %255 = subtract(%253, %254) /* ty=Tensor[(39, 3), float32] */;
  %256 = cast(%250, dtype="float32") /* ty=Tensor[(39, 3), float32] */;
  %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(2), int32] */;
  %258 = cast(%255, dtype="float32") /* ty=Tensor[(39, 3), float32] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %260 = cast(meta[relay.Constant][10] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %261 = reshape(%260, newshape=[14, 2, 12]) /* ty=Tensor[(14, 2, 12), float32] */;
  %262 = @func_370(%261) /* ty=(Tensor[(14, 2, 12), float32],) */;
  %263 = floor_mod(%258, %259) /* ty=Tensor[(39, 3), float32] */;
  %264 = %262.0;
  (%263, %264, meta[relay.Constant][10] /* ty=Tensor[(336), float32] */)
}

def @func_6755(%var_6752: Tensor[(15, 11, 14), float32]) -> (Tensor[(15, 11, 14), float32],) {
  %265 = cast(%var_6752, dtype="float32") /* ty=Tensor[(15, 11, 14), float32] */;
  %266 = acos(%265) /* ty=Tensor[(15, 11, 14), float32] */;
  (%266,)
}

def @func_7566(%var_7557: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(48), uint32]) {
  %267 = @func_4690() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %268 = cast(%var_7557, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %269 = reshape(%268, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %270 = @func_3610(%269) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
  %271 = %267.0;
  %272 = %270.0;
  (%271, %272, %var_7557)
}

def @func_6410() -> (Tensor[(12, 15, 4), float32],) {
  %273 = @func_3431() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %274 = %273.0;
  (%274,)
}

def @func_10497() -> (Tensor[(176), int16], Tensor[(14, 2, 12), int32]) {
  %275 = @func_10280() /* ty=(Tensor[(12, 16, 10), float32], Tensor[(176), int16]) */;
  %276 = %275.1;
  %277 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  (%276, %277)
}

def @func_4447() -> (Tensor[(12, 15, 4), float32],) {
  %278 = @func_3875() /* ty=Tensor[(12, 15, 4), float32] */;
  (%278,)
}

def @func_6517(%var_6508: Tensor[(48), float32]) -> (Tensor[(12, 15, 4), float32], float64, Tensor[(8, ?, 6), int64]) {
  %279 = @func_5318() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %280 = cast(%var_6508, dtype="float32") /* ty=Tensor[(48), float32] */;
  %281 = cast(-5.52437f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %282 = reshape(%280, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %283 = reshape(%281, newshape=[]) /* ty=float64 */;
  %284 = @func_5530(%282, %283) /* ty=(Tensor[(8, 1, 6), float32], Tensor[(12, 10, 8), float64], float64, Tensor[(10, 96), float64]) */;
  %285 = %284.0;
  %286 = cast(%var_6508, dtype="int64") /* ty=Tensor[(48), int64] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%285, dtype="int64") /* ty=Tensor[(8, 1, 6), int64] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %290 = %279.0;
  %291 = add(%288, %289) /* ty=Tensor[(8, ?, 6), int64] */;
  (%290, -5.52437f64 /* ty=float64 */, %291)
}

def @func_4248() -> (Tensor[(12, 15, 4), float32],) {
  %292 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %293 = %292.0;
  (%293,)
}

def @func_8390(%var_8354: Tensor[(11, 13, 15), uint64], %var_8355: Tensor[(11, 13, 15), uint64], %var_8360: Tensor[(11, 13, 15), uint64]) -> Tensor[(11, 13, 15), float64] {
  %294 = cast(%var_8355, dtype="uint64") /* ty=Tensor[(11, 13, 15), uint64] */;
  %295 = shape_of(%var_8354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%var_8354, dtype="uint64") /* ty=Tensor[(11, 13, 15), uint64] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %298 = multiply(%296, %297) /* ty=Tensor[(11, 13, 15), uint64] */;
  %299 = cast(%var_8360, dtype="bool") /* ty=Tensor[(11, 13, 15), bool] */;
  %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%298, dtype="bool") /* ty=Tensor[(11, 13, 15), bool] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %303 = not_equal(%301, %302) /* ty=Tensor[(11, 13, 15), bool] */;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(11, 13, 15), float64] */;
  rsqrt(%304) /* ty=Tensor[(11, 13, 15), float64] */
}

def @func_9613(%var_9604: Tensor[(16, 5, 13), float64]) -> (Tensor[(16, 5, 13), bool],) {
  %305 = @func_7042() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(16, 5, 13), float64], Tensor[(2, 88), int16]) */;
  %306 = %305.1;
  %307 = cast(%var_9604, dtype="int32") /* ty=Tensor[(16, 5, 13), int32] */;
  %308 = shape_of(%306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%306, dtype="int32") /* ty=Tensor[(16, 5, 13), int32] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %311 = bitwise_and(%309, %310) /* ty=Tensor[(16, 5, 13), int32] */;
  %312 = cast(%311, dtype="bool") /* ty=Tensor[(16, 5, 13), bool] */;
  %313 = shape_of(%var_9604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%var_9604, dtype="bool") /* ty=Tensor[(16, 5, 13), bool] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %316 = equal(%314, %315) /* ty=Tensor[(16, 5, 13), bool] */;
  (%316,)
}

def @func_9234() -> (Tensor[(12, 15, 4), float32],) {
  %317 = @func_6159() /* ty=Tensor[(12, 15, 4), float32] */;
  (%317,)
}

def @func_10280() -> (Tensor[(12, 16, 10), float32], Tensor[(176), int16]) {
  %318 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 10), float32] */;
  %319 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(12, 16, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 10), float32] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %322 = @func_7886() /* ty=(Tensor[(14, 2, 12), int32], Tensor[(176), int16], Tensor[(2002), int32], Tensor[(176), int16]) */;
  %323 = mod(%320, %321) /* ty=Tensor[(12, 16, 10), float32] */;
  %324 = %322.1;
  (%323, %324)
}

def @func_3988() -> Tensor[(12, 15, 4), float32] {
  @func_2553() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_11039() -> Tensor[(12, 15, 4), float32] {
  %325 = @func_9731() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %325.0
}

def @func_3610(%var_3607: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
  %326 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %327 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %328 = %327.0;
  %329 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 4), float32] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="float32") /* ty=Tensor[(12, 15, 4), float32] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %333 = cast(%var_3607, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %334 = cast(%var_3607, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %335 = reshape(%333, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %336 = reshape(%334, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %337 = @func_581(%335, %336) /* ty=(Tensor[(2, 3, 8), uint32],) */;
  %338 = %326.0;
  %339 = subtract(%331, %332) /* ty=Tensor[(12, 15, 4), float32] */;
  %340 = %337.0;
  (%338, %339, %340, %var_3607)
}

def @func_8867() -> Tensor[(12, 15, 4), float32] {
  %341 = @func_6557() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32]) */;
  %341.1
}

def @func_8892() -> (Tensor[(140), int32],) {
  %342 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
  %343 = %342.0;
  (%343,)
}

def @func_4887() -> (Tensor[(2002), float32],) {
  %344 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %345 = %344.0;
  %346 = cast(%345, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %347 = atanh(%346) /* ty=Tensor[(2002), float32] */;
  (%347,)
}

def @func_2737() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %348 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %349 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %350 = %348.0;
  %351 = %349.0;
  %352 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %353 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  (%350, %351, %352, %353)
}

def @func_6080(%var_6032: Tensor[(336), float64]) -> (Tensor[(12, 15, 4), float32], Tensor[(336), float64], Tensor[(14, 6, 11), uint16], Tensor[(2002), int32], Tensor[(2002), float32]) {
  %354 = @func_5843() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %355 = @func_5724() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %356 = cast(%var_6032, dtype="float64") /* ty=Tensor[(336), float64] */;
  %357 = reshape(%356, newshape=[14, 2, 12]) /* ty=Tensor[(14, 2, 12), float64] */;
  %358 = @func_5904(%357) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), float32], Tensor[(14, 2, 12), bool]) */;
  %359 = %358.1;
  %360 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
  %361 = %360.2;
  %362 = cast(%361, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %363 = shape_of(%359, dtype="int32") /* ty=Tensor[(1), int32] */;
  %364 = cast(%359, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?), int32] */;
  %366 = cast(%359, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %367 = %354.0;
  %368 = %355.2;
  %369 = logical_xor(%364, %365) /* ty=Tensor[(2002), int32] */;
  %370 = cos(%366) /* ty=Tensor[(2002), float32] */;
  (%367, %var_6032, %368, %369, %370)
}

def @func_5228() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %371 = @func_3694() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %372 = %371.0;
  %373 = @func_5180() /* ty=Tensor[(12, 15, 4), float32] */;
  (%372, %373)
}

def @func_1893(%var_1887: Tensor[(14, 6, 11), uint16], %var_1888: Tensor[(14, 6, 11), uint16]) -> (Tensor[(14, 6, 11), uint16],) {
  %374 = cast(%var_1888, dtype="uint16") /* ty=Tensor[(14, 6, 11), uint16] */;
  %375 = shape_of(%var_1887, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(%var_1887, dtype="uint16") /* ty=Tensor[(14, 6, 11), uint16] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %378 = logical_xor(%376, %377) /* ty=Tensor[(14, 6, 11), uint16] */;
  (%378,)
}

def @func_9654(%var_9639: Tensor[(176), int16], %var_9640: Tensor[(140), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(336), float64], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) {
  %379 = @func_9234() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %380 = @func_6632() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(336), float64], Tensor[(2002), float64]) */;
  %381 = cast(%var_9639, dtype="int16") /* ty=Tensor[(176), int16] */;
  %382 = cast(%var_9640, dtype="int32") /* ty=Tensor[(140), int32] */;
  %383 = reshape(%381, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int16] */;
  %384 = reshape(%382, newshape=[140]) /* ty=Tensor[(140), int32] */;
  %385 = @func_630(%383, %384) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) */;
  %386 = %379.0;
  %387 = %380.2;
  %388 = %385.2;
  (%386, %387, %388, %var_9639, %var_9640)
}

def @func_3162(%var_3160: Tensor[(1, 924), uint16]) -> (Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(1, 924), uint16]) {
  %389 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %390 = cast(%var_3160, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %391 = cast(%var_3160, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %392 = reshape(%390, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %393 = reshape(%391, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %394 = @func_1893(%392, %393) /* ty=(Tensor[(14, 6, 11), uint16],) */;
  %395 = %389.0;
  %396 = %394.0;
  (%395, %396, %var_3160)
}

def @func_4549() -> Tensor[(12, 15, 4), float32] {
  @func_2670() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_370(%var_365: Tensor[(14, 2, 12), float32]) -> (Tensor[(14, 2, 12), float32],) {
  %397 = cast(%var_365, dtype="float32") /* ty=Tensor[(14, 2, 12), float32] */;
  %398 = sin(%397) /* ty=Tensor[(14, 2, 12), float32] */;
  (%398,)
}

def @func_5272() -> (Tensor[(12, 15, 4), float32], Tensor[(9, 8), float32], Tensor[(72), float32]) {
  %399 = cast(meta[relay.Constant][14] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %400 = reshape(%399, newshape=[9, 8]) /* ty=Tensor[(9, 8), float32] */;
  %401 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
  %402 = @func_1668(%400) /* ty=Tensor[(9, 8), float32] */;
  (%401, %402, meta[relay.Constant][14] /* ty=Tensor[(72), float32] */)
}

def @func_2953() -> (Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) {
  %403 = cast(meta[relay.Constant][15] /* ty=Tensor[(176), int16] */, dtype="int16") /* ty=Tensor[(176), int16] */;
  %404 = cast(meta[relay.Constant][16] /* ty=Tensor[(140), int32] */, dtype="int32") /* ty=Tensor[(140), int32] */;
  %405 = reshape(%403, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int16] */;
  %406 = reshape(%404, newshape=[140]) /* ty=Tensor[(140), int32] */;
  %407 = @func_630(%405, %406) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) */;
  %408 = @func_2796() /* ty=Tensor[(12, 15, 4), float32] */;
  %409 = %407.2;
  (%408, %409, meta[relay.Constant][15] /* ty=Tensor[(176), int16] */, meta[relay.Constant][16] /* ty=Tensor[(140), int32] */)
}

def @func_9478(%var_9460: Tensor[(336), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(360), uint8], Tensor[(14, 2, 12), float32], Tensor[(336), float32], Tensor[(140), int32], Tensor[(2002), int32]) {
  %410 = @func_4248() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %411 = @func_4472() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) */;
  %412 = cast(%var_9460, dtype="float32") /* ty=Tensor[(336), float32] */;
  %413 = reshape(%412, newshape=[14, 2, 12]) /* ty=Tensor[(14, 2, 12), float32] */;
  %414 = @func_370(%413) /* ty=(Tensor[(14, 2, 12), float32],) */;
  %415 = %411.2;
  %416 = cast(%415, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %417 = cast(meta[relay.Constant][17] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %418 = reshape(%416, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %419 = reshape(%417, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %420 = @func_8318(%418, %419) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(360), uint8], Tensor[(140), int32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32]) */;
  %421 = %410.0;
  %422 = %414.0;
  %423 = %420.3;
  (%421, %415, %422, %var_9460, %423, meta[relay.Constant][17] /* ty=Tensor[(2002), int32] */)
}

def @func_3679() -> Tensor[(12, 15, 4), float32] {
  %424 = @func_3658() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %424.0
}

def @func_10023(%var_9962: Tensor[(972), float64]) -> (Tensor[(140), int32], Tensor[(336), float64], Tensor[(12, 15, 4), float32], Tensor[(972), float64], Tensor[(2002), int32]) {
  %425 = @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */;
  %426 = @func_6632() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(336), float64], Tensor[(2002), float64]) */;
  %427 = cast(%var_9962, dtype="float64") /* ty=Tensor[(972), float64] */;
  %428 = reshape(%427, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), float64] */;
  %429 = @func_5430(%428) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %430 = cast(%var_9962, dtype="float64") /* ty=Tensor[(972), float64] */;
  %431 = %425.1;
  %432 = %426.2;
  %433 = %429.1;
  %434 = sinh(%430) /* ty=Tensor[(972), float64] */;
  %435 = @func_9526() /* ty=Tensor[(2002), int32] */;
  (%431, %432, %433, %434, %435)
}

def @func_11886(%var_11880: Tensor[(8, 2, 10), float64]) -> Tensor[(8, 2, 10), float64] {
  %436 = cast(%var_11880, dtype="float64") /* ty=Tensor[(8, 2, 10), float64] */;
  sinh(%436) /* ty=Tensor[(8, 2, 10), float64] */
}

def @func_1668(%var_1659: Tensor[(9, 8), float32]) -> Tensor[(9, 8), float32] {
  %437 = cast(%var_1659, dtype="float32") /* ty=Tensor[(9, 8), float32] */;
  sigmoid(%437) /* ty=Tensor[(9, 8), float32] */
}

def @func_8429(%var_8427: Tensor[(2002), int32]) -> (Tensor[(14, 2, 12), int32], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(12, 15, 4), float32], Tensor[(36, 10), uint8], Tensor[(2002), int32]) {
  %438 = @func_4778() /* ty=(Tensor[(14, 2, 12), int32],) */;
  %439 = cast(meta[relay.Constant][18] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %440 = reshape(%439, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), float32] */;
  %441 = @func_6755(%440) /* ty=(Tensor[(15, 11, 14), float32],) */;
  %442 = cast(meta[relay.Constant][19] /* ty=Tensor[(36, 10), uint8] */, dtype="uint8") /* ty=Tensor[(36, 10), uint8] */;
  %443 = cast(%var_8427, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %444 = reshape(%442, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %445 = reshape(%443, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %446 = @func_8318(%444, %445) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(360), uint8], Tensor[(140), int32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32]) */;
  %447 = %438.0;
  %448 = %441.0;
  %449 = %446.0;
  (%447, %448, meta[relay.Constant][18] /* ty=Tensor[(2310), float32] */, %449, meta[relay.Constant][19] /* ty=Tensor[(36, 10), uint8] */, %var_8427)
}

def @func_10979(%var_10955: Tensor[(10, 13, 1), int32]) -> (Tensor[(10, 13, 14), int32], Tensor[(12, 15, 4), float32], Tensor[(117), float32], Tensor[(12, 15, 4), int32], Tensor[(48, 1), uint32]) {
  %450 = cast(%var_10955, dtype="int32") /* ty=Tensor[(10, 13, 1), int32] */;
  %451 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 13, 14), int32] */, dtype="int32") /* ty=Tensor[(10, 13, 14), int32] */;
  %452 = cast(meta[relay.Constant][21] /* ty=Tensor[(117), float32] */, dtype="float32") /* ty=Tensor[(117), float32] */;
  %453 = reshape(%452, newshape=[1, 117]) /* ty=Tensor[(1, 117), float32] */;
  %454 = @func_5502(%453) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 10, 8), float64], Tensor[(1, 117), float32]) */;
  %455 = %454.0;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(12, 15, 4), float32] */;
  %457 = cast(meta[relay.Constant][22] /* ty=Tensor[(48, 1), uint32] */, dtype="uint32") /* ty=Tensor[(48, 1), uint32] */;
  %458 = reshape(%456, newshape=[12, 15, 4]) /* ty=Tensor[(12, 15, 4), float32] */;
  %459 = reshape(%457, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %460 = @func_3958(%458, %459) /* ty=(Tensor[(12, 15, 4), int32], Tensor[(12, 15, 4), float32], Tensor[(48), uint32]) */;
  %461 = subtract(%450, %451) /* ty=Tensor[(10, 13, 14), int32] */;
  %462 = %460.0;
  (%461, %455, meta[relay.Constant][21] /* ty=Tensor[(117), float32] */, %462, meta[relay.Constant][22] /* ty=Tensor[(48, 1), uint32] */)
}

def @func_3270() -> (Tensor[(12, 15, 4), float32],) {
  %463 = @func_2796() /* ty=Tensor[(12, 15, 4), float32] */;
  (%463,)
}

def @func_4690() -> (Tensor[(12, 15, 4), float32],) {
  %464 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %465 = %464.0;
  (%465,)
}

def @func_4850(%var_4814: Tensor[(12, 15, 4), float32]) -> (Tensor[(12, 15, 4), float64], Tensor[(2002), int32], Tensor[(14, 9, 11), float64]) {
  %466 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %467 = cast(%var_4814, dtype="float64") /* ty=Tensor[(12, 15, 4), float64] */;
  %468 = shape_of(%466, dtype="int32") /* ty=Tensor[(3), int32] */;
  %469 = cast(%466, dtype="float64") /* ty=Tensor[(12, 15, 4), float64] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %471 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %472 = @func_4743() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32], Tensor[(14, 9, 11), float64]) */;
  %473 = power(%469, %470) /* ty=Tensor[(12, 15, 4), float64] */;
  %474 = %471.0;
  %475 = %472.3;
  (%473, %474, %475)
}

def @func_7861() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %476 = @func_3658() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %477 = %476.0;
  %478 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
  %479 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
  %480 = @func_4549() /* ty=Tensor[(12, 15, 4), float32] */;
  (%477, %478, %479, %480)
}

def @func_8711(%var_8652: Tensor[(8, 3, 9), uint16], %var_8653: Tensor[(8, 3, 9), uint16], %var_8664: Tensor[(336), float32]) -> (Tensor[(8, 3, 9), uint16], Tensor[(12, 15, 4), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) {
  %481 = cast(%var_8653, dtype="uint16") /* ty=Tensor[(8, 3, 9), uint16] */;
  %482 = shape_of(%var_8652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%var_8652, dtype="uint16") /* ty=Tensor[(8, 3, 9), uint16] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %485 = cast(%var_8664, dtype="float32") /* ty=Tensor[(336), float32] */;
  %486 = reshape(%485, newshape=[14, 2, 12]) /* ty=Tensor[(14, 2, 12), float32] */;
  %487 = @func_370(%486) /* ty=(Tensor[(14, 2, 12), float32],) */;
  %488 = bitwise_and(%483, %484) /* ty=Tensor[(8, 3, 9), uint16] */;
  %489 = @func_2796() /* ty=Tensor[(12, 15, 4), float32] */;
  %490 = %487.0;
  (%488, %489, %490, %var_8664)
}

def @func_11750(%var_11704: Tensor[(6, 1, 5), float32], %var_11709: Tensor[(2002), int32]) -> (Tensor[(6, 1, 5), float32], Tensor[(2002), bool], Tensor[(2002), int32], Tensor[(9, 8), float32], Tensor[(12, 15, 4), float32]) {
  %491 = cast(%var_11704, dtype="float32") /* ty=Tensor[(6, 1, 5), float32] */;
  %492 = cast(%var_11709, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %493 = reshape(%492, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %494 = @func_10063(%493) /* ty=(Tensor[(2002), bool],) */;
  %495 = log(%491) /* ty=Tensor[(6, 1, 5), float32] */;
  %496 = %494.0;
  %497 = @func_10423() /* ty=Tensor[(9, 8), float32] */;
  %498 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  (%495, %496, %var_11709, %497, %498)
}

def @func_7607(%var_7591: Tensor[(12, 15, 4), float32]) -> (Tensor[(12, 15, 4), uint16],) {
  %499 = @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */;
  %500 = %499.0;
  %501 = cast(%var_7591, dtype="uint16") /* ty=Tensor[(12, 15, 4), uint16] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="uint16") /* ty=Tensor[(12, 15, 4), uint16] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %505 = right_shift(%503, %504) /* ty=Tensor[(12, 15, 4), uint16] */;
  (%505,)
}

def @func_11875(%var_11848: Tensor[(216), uint16]) -> (Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(336), float32], Tensor[(216), uint16], Tensor[(336), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32], Tensor[(2002), float64]) {
  %506 = cast(meta[relay.Constant][23] /* ty=Tensor[(1859), float64] */, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %507 = cast(meta[relay.Constant][23] /* ty=Tensor[(1859), float64] */, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %508 = reshape(%506, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %509 = reshape(%507, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %510 = @func_2465(%508, %509) /* ty=(Tensor[(13, 11, 13), float64],) */;
  %511 = cast(%var_11848, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %512 = cast(%var_11848, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %513 = cast(meta[relay.Constant][24] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %514 = reshape(%511, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), uint16] */;
  %515 = reshape(%512, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), uint16] */;
  %516 = reshape(%513, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %517 = @func_8711(%514, %515, %516) /* ty=(Tensor[(8, 3, 9), uint16], Tensor[(12, 15, 4), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) */;
  %518 = cast(meta[relay.Constant][25] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %519 = cast(meta[relay.Constant][25] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %520 = reshape(%518, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %521 = reshape(%519, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %522 = @func_581(%520, %521) /* ty=(Tensor[(2, 3, 8), uint32],) */;
  %523 = @func_5401() /* ty=(Tensor[(2002), int32],) */;
  %524 = %523.0;
  %525 = cast(%524, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %526 = %510.0;
  %527 = %517.3;
  %528 = %522.0;
  %529 = sin(%525) /* ty=Tensor[(2002), float64] */;
  (%526, meta[relay.Constant][23] /* ty=Tensor[(1859), float64] */, %527, %var_11848, meta[relay.Constant][24] /* ty=Tensor[(336), float32] */, %528, meta[relay.Constant][25] /* ty=Tensor[(48), uint32] */, %529)
}

def @func_12280() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %530 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %531 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %532 = @func_9234() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %533 = @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %534 = %530.3;
  %535 = %531.0;
  %536 = %532.0;
  %537 = @func_3875() /* ty=Tensor[(12, 15, 4), float32] */;
  %538 = %533.0;
  %539 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
  (%534, %535, %536, %537, %538, %539)
}

def @func_3694() -> (Tensor[(12, 15, 4), float32],) {
  %540 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
  (%540,)
}

def @func_10745() -> Tensor[(12, 15, 4), float32] {
  %541 = @func_7447() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %541.0
}

def @func_1535(%var_1524: Tensor[(2, 12, 15), uint8]) -> (Tensor[(2, 12, 15), uint8], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
  %542 = cast(%var_1524, dtype="uint8") /* ty=Tensor[(2, 12, 15), uint8] */;
  %543 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(2, 12, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 12, 15), uint8] */, dtype="uint8") /* ty=Tensor[(2, 12, 15), uint8] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %546 = cast(meta[relay.Constant][27] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %547 = cast(meta[relay.Constant][27] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %548 = reshape(%546, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %549 = reshape(%547, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %550 = @func_581(%548, %549) /* ty=(Tensor[(2, 3, 8), uint32],) */;
  %551 = bitwise_or(%544, %545) /* ty=Tensor[(2, 12, 15), uint8] */;
  %552 = %550.0;
  (%551, %552, meta[relay.Constant][27] /* ty=Tensor[(48), uint32] */)
}

def @func_9923() -> (Tensor[(12, 15, 4), float32],) {
  %553 = @func_6557() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32]) */;
  %554 = %553.0;
  (%554,)
}

def @func_9407() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %555 = @func_5142() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %556 = @func_6140() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %557 = @func_6140() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %558 = %555.0;
  %559 = %556.0;
  %560 = %557.0;
  (%558, %559, %560)
}

def @func_8065(%var_8063: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
  %561 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %562 = cast(%var_8063, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %563 = cast(%var_8063, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %564 = reshape(%562, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %565 = reshape(%563, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %566 = @func_581(%564, %565) /* ty=(Tensor[(2, 3, 8), uint32],) */;
  %567 = %561.0;
  %568 = %566.0;
  (%567, %568, %var_8063)
}

def @func_8448() -> (Tensor[(14, 2, 12), int32],) {
  %569 = @func_4778() /* ty=(Tensor[(14, 2, 12), int32],) */;
  %570 = %569.0;
  (%570,)
}

def @func_10613() -> (Tensor[(12, 15, 4), float32],) {
  %571 = @func_10125() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %572 = %571.1;
  (%572,)
}

def @func_5445() -> Tensor[(12, 15, 4), float32] {
  @func_2553() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_6931() -> (Tensor[(12, 15, 4), float32],) {
  %573 = @func_6159() /* ty=Tensor[(12, 15, 4), float32] */;
  (%573,)
}

def @func_10738() -> (Tensor[(12, 15, 4), float32],) {
  %574 = @func_6479() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %575 = %574.0;
  (%575,)
}

def @func_6872(%var_6772: Tensor[(12, 11, 12), uint16], %var_6815: Tensor[(1859), float64]) -> (Tensor[(12, 11, 12), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 10, 8), float64], Tensor[(960), float64], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %576 = cast(meta[relay.Constant][28] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %577 = cast(%var_6772, dtype="uint16") /* ty=Tensor[(12, 11, 12), uint16] */;
  %578 = @func_4424() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %579 = cast(%var_6815, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %580 = cast(%var_6815, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %581 = reshape(%579, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %582 = reshape(%580, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %583 = @func_2465(%581, %582) /* ty=(Tensor[(13, 11, 13), float64],) */;
  %584 = cast(meta[relay.Constant][28] /* ty=uint16 */, dtype="float64") /* ty=float64 */;
  %585 = cast(meta[relay.Constant][29] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %586 = reshape(%584, newshape=[]) /* ty=float64 */;
  %587 = reshape(%585, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %588 = @func_554(%586, %587) /* ty=(Tensor[(12, 10, 8), float64],) */;
  %589 = @func_6140() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %590 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %591 = bitwise_and(%576, %577) /* ty=Tensor[(12, 11, 12), uint16] */;
  %592 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
  %593 = %578.0;
  %594 = %583.0;
  %595 = %588.0;
  %596 = %589.0;
  %597 = %590.1;
  %598 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
  (%591, %592, %593, %594, %var_6815, %595, meta[relay.Constant][29] /* ty=Tensor[(960), float64] */, %596, %597, %598)
}

def @func_12300(%var_12288: Tensor[(13, 15, 3), float64]) -> Tensor[(13, 15, 3), float64] {
  %599 = cast(%var_12288, dtype="float64") /* ty=Tensor[(13, 15, 3), float64] */;
  atan(%599) /* ty=Tensor[(13, 15, 3), float64] */
}

def @func_6982(%var_6970: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(48), uint32], Tensor[(2002), int32]) {
  %600 = @func_5318() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %601 = cast(%var_6970, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %602 = reshape(%601, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %603 = @func_2608(%602) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
  %604 = %600.0;
  %605 = %603.4;
  (%604, %605, %var_6970)
}

def @func_5005(%var_4997: Tensor[(140), int32], %var_4999: Tensor[(1287), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(140), int32], Tensor[(2002, 1), int32], Tensor[(1287), float32]) {
  %606 = @func_4248() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %607 = cast(%var_4997, dtype="int32") /* ty=Tensor[(140), int32] */;
  %608 = cast(meta[relay.Constant][30] /* ty=Tensor[(2002, 1), int32] */, dtype="int32") /* ty=Tensor[(2002, 1), int32] */;
  %609 = cast(%var_4999, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %610 = reshape(%607, newshape=[140]) /* ty=Tensor[(140), int32] */;
  %611 = reshape(%608, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %612 = reshape(%609, newshape=[117, 11]) /* ty=Tensor[(117, 11), float32] */;
  %613 = @func_2768(%610, %611, %612) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 176), int64], Tensor[(2, 88), int16], Tensor[(140), int32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(480, 2), bool], Tensor[(16, 5, 13), float64], Tensor[(117, 11), int8]) */;
  %614 = %606.0;
  %615 = %613.5;
  (%614, %615, %var_4997, meta[relay.Constant][30] /* ty=Tensor[(2002, 1), int32] */, %var_4999)
}

def @func_10171() -> (Tensor[(2002), int8],) {
  %616 = @func_6632() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(336), float64], Tensor[(2002), float64]) */;
  %617 = %616.3;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %619 = tan(%618) /* ty=Tensor[(2002), float64] */;
  %620 = cast(%619, dtype="int8") /* ty=Tensor[(2002), int8] */;
  %621 = shape_of(%617, dtype="int32") /* ty=Tensor[(1), int32] */;
  %622 = cast(%617, dtype="int8") /* ty=Tensor[(2002), int8] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?), int8] */;
  %624 = bitwise_and(%622, %623) /* ty=Tensor[(2002), int8] */;
  (%624,)
}

def @func_2063(%var_2024: Tensor[(4, 10, 8), float64], %var_2042: Tensor[(1, 924), uint16], %var_2061: Tensor[(117), float32]) -> (Tensor[(4, 10, 8), float64], Tensor[(14, 6, 11), uint16], Tensor[(1, 924), float64], Tensor[(352), int64], Tensor[(117), float32]) {
  %625 = cast(6.52683f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %626 = cast(%var_2024, dtype="float64") /* ty=Tensor[(4, 10, 8), float64] */;
  %627 = cast(%var_2042, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %628 = cast(%var_2042, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %629 = reshape(%627, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %630 = reshape(%628, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %631 = @func_1893(%629, %630) /* ty=(Tensor[(14, 6, 11), uint16],) */;
  %632 = cast(%var_2042, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %633 = cast(6.52683f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %634 = cast(%var_2061, dtype="float32") /* ty=Tensor[(117), float32] */;
  %635 = reshape(%634, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), float32] */;
  %636 = @func_737(%635) /* ty=(Tensor[(2, 11, 16), int8], Tensor[(352), int64], Tensor[(480, 2), bool], Tensor[(1, 13, 9), bool], Tensor[(12, 10, 8), float64]) */;
  %637 = floor_mod(%625, %626) /* ty=Tensor[(4, 10, 8), float64] */;
  %638 = %631.0;
  %639 = divide(%632, %633) /* ty=Tensor[(1, 924), float64] */;
  %640 = %636.1;
  (%637, %638, %639, %640, %var_2061)
}

def @func_3431() -> (Tensor[(12, 15, 4), float32],) {
  %641 = @func_2839() /* ty=Tensor[(12, 15, 4), float32] */;
  (%641,)
}

def @func_8919() -> (Tensor[(14, 2, 12), int32],) {
  %642 = @func_8448() /* ty=(Tensor[(14, 2, 12), int32],) */;
  %643 = %642.0;
  (%643,)
}

def @func_4778() -> (Tensor[(14, 2, 12), int32],) {
  %644 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  (%644,)
}

def @func_2768(%var_2754: Tensor[(140), int32], %var_2757: Tensor[(2002), int32], %var_2764: Tensor[(117, 11), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2, 176), int64], Tensor[(2, 88), int16], Tensor[(140), int32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(480, 2), bool], Tensor[(16, 5, 13), float64], Tensor[(117, 11), int8]) {
  %645 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %646 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 88), int16] */, dtype="int16") /* ty=Tensor[(2, 88), int16] */;
  %647 = cast(%var_2754, dtype="int32") /* ty=Tensor[(140), int32] */;
  %648 = reshape(%646, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int16] */;
  %649 = reshape(%647, newshape=[140]) /* ty=Tensor[(140), int32] */;
  %650 = @func_630(%648, %649) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) */;
  %651 = cast(%var_2757, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %652 = cast(%var_2757, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %653 = cast(%var_2757, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %654 = reshape(%651, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %655 = reshape(%652, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %656 = reshape(%653, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %657 = cast(meta[relay.Constant][32] /* ty=Tensor[(117, 1), float32] */, dtype="float32") /* ty=Tensor[(117, 1), float32] */;
  %658 = reshape(%657, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), float32] */;
  %659 = @func_737(%658) /* ty=(Tensor[(2, 11, 16), int8], Tensor[(352), int64], Tensor[(480, 2), bool], Tensor[(1, 13, 9), bool], Tensor[(12, 10, 8), float64]) */;
  %660 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 88), int16] */, dtype="int16") /* ty=Tensor[(2, 88), int16] */;
  %661 = reshape(%660, newshape=[176]) /* ty=Tensor[(176), int16] */;
  %662 = @func_1491(%661) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) */;
  %663 = cast(meta[relay.Constant][32] /* ty=Tensor[(117, 1), float32] */, dtype="int8") /* ty=Tensor[(117, 1), int8] */;
  %664 = cast(%var_2764, dtype="int8") /* ty=Tensor[(117, 11), int8] */;
  %665 = %645.0;
  %666 = %650.1;
  %667 = @func_1728(%654, %655, %656) /* ty=Tensor[(13, 11, 14), bool] */;
  %668 = %659.2;
  %669 = %662.0;
  %670 = bitwise_or(%663, %664) /* ty=Tensor[(117, 11), int8] */;
  (%665, %666, meta[relay.Constant][31] /* ty=Tensor[(2, 88), int16] */, %var_2754, %667, %var_2757, %668, %669, %670)
}

def @func_8965() -> (Tensor[(14, 2, 12), int32], Tensor[(2002), int32]) {
  %671 = @func_8488() /* ty=(Tensor[(2002), int32],) */;
  %672 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  %673 = %671.0;
  (%672, %673)
}

def @func_10081() -> Tensor[(12, 15, 4), float32] {
  %674 = @func_9731() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %674.0
}

def @func_6557() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32]) {
  %675 = cast(meta[relay.Constant][33] /* ty=Tensor[(39, 3), float32] */, dtype="float32") /* ty=Tensor[(39, 3), float32] */;
  %676 = reshape(%675, newshape=[1, 117]) /* ty=Tensor[(1, 117), float32] */;
  %677 = @func_5502(%676) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 10, 8), float64], Tensor[(1, 117), float32]) */;
  %678 = @func_3517() /* ty=Tensor[(12, 15, 4), float32] */;
  %679 = %677.1;
  (%678, %679, meta[relay.Constant][33] /* ty=Tensor[(39, 3), float32] */)
}

def @func_9731() -> (Tensor[(12, 15, 4), float32],) {
  %680 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %681 = %680.0;
  (%681,)
}

def @func_10184() -> (Tensor[(12, 15, 4), float32],) {
  %682 = @func_9052() /* ty=Tensor[(12, 15, 4), float32] */;
  (%682,)
}

def @func_7377() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %683 = @func_4627() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %684 = @func_3694() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %685 = %683.0;
  %686 = %684.0;
  (%685, %686)
}

def @func_630(%var_615: Tensor[(11, 4, 4), int16], %var_624: Tensor[(140), int32]) -> (Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) {
  %687 = cast(meta[relay.Constant][34] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %688 = cast(%var_615, dtype="int16") /* ty=Tensor[(11, 4, 4), int16] */;
  %689 = cast(%var_624, dtype="int32") /* ty=Tensor[(140), int32] */;
  %690 = reshape(%689, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int32] */;
  %691 = @func_353(%690) /* ty=(Tensor[(2, 7, 10), int32], Tensor[(2, 11, 16), int8], Tensor[(2, 176), int64], Tensor[(2, 7, 10), float32], Tensor[(2, 11, 16), int8]) */;
  %692 = maximum(%687, %688) /* ty=Tensor[(11, 4, 4), int16] */;
  %693 = %691.2;
  (%692, %693, %var_624)
}

def @func_4743() -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32], Tensor[(14, 9, 11), float64]) {
  %694 = @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */;
  %695 = @func_3806() /* ty=(Tensor[(2002), int32],) */;
  %696 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 9, 11), float64] */, dtype="float64") /* ty=Tensor[(14, 9, 11), float64] */;
  %697 = acos(%696) /* ty=Tensor[(14, 9, 11), float64] */;
  %698 = cast(%697, dtype="float64") /* ty=Tensor[(14, 9, 11), float64] */;
  %699 = %694.0;
  %700 = %695.0;
  %701 = @func_4549() /* ty=Tensor[(12, 15, 4), float32] */;
  %702 = sqrt(%698) /* ty=Tensor[(14, 9, 11), float64] */;
  (%699, %700, %701, %702)
}

def @func_10676() -> (Tensor[(2002), int32],) {
  %703 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %704 = %703.0;
  (%704,)
}

def @func_10892() -> (Tensor[(1859), uint16],) {
  %705 = @func_5054() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 15, 4), float32]) */;
  %706 = %705.2;
  %707 = cast(meta[relay.Constant][36] /* ty=Tensor[(1859), float64] */, dtype="uint8") /* ty=Tensor[(1859), uint8] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(1), int32] */;
  %709 = cast(%706, dtype="uint8") /* ty=Tensor[(1859), uint8] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %711 = left_shift(%709, %710) /* ty=Tensor[(1859), uint8] */;
  %712 = cast(meta[relay.Constant][36] /* ty=Tensor[(1859), float64] */, dtype="uint16") /* ty=Tensor[(1859), uint16] */;
  %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(1), int32] */;
  %714 = cast(%711, dtype="uint16") /* ty=Tensor[(1859), uint16] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %716 = add(%714, %715) /* ty=Tensor[(1859), uint16] */;
  (%716,)
}

def @func_554(%var_548: float64, %var_549: Tensor[(12, 10, 8), float64]) -> (Tensor[(12, 10, 8), float64],) {
  %717 = cast(%var_548, dtype="float64") /* ty=float64 */;
  %718 = cast(%var_549, dtype="float64") /* ty=Tensor[(12, 10, 8), float64] */;
  %719 = mod(%717, %718) /* ty=Tensor[(12, 10, 8), float64] */;
  (%719,)
}

def @func_5502(%var_5488: Tensor[(1, 117), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 10, 8), float64], Tensor[(1, 117), float32]) {
  %720 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %721 = cast(%var_5488, dtype="float32") /* ty=Tensor[(1, 117), float32] */;
  %722 = reshape(%721, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), float32] */;
  %723 = @func_737(%722) /* ty=(Tensor[(2, 11, 16), int8], Tensor[(352), int64], Tensor[(480, 2), bool], Tensor[(1, 13, 9), bool], Tensor[(12, 10, 8), float64]) */;
  %724 = %720.0;
  %725 = @func_5445() /* ty=Tensor[(12, 15, 4), float32] */;
  %726 = %723.4;
  (%724, %725, %726, %var_5488)
}

def @func_3054(%var_3029: Tensor[(9, 2, 12), float32]) -> Tensor[(9, 2, 12), float32] {
  %727 = cast(%var_3029, dtype="float32") /* ty=Tensor[(9, 2, 12), float32] */;
  erf(%727) /* ty=Tensor[(9, 2, 12), float32] */
}

def @func_3331(%var_3313: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(16, 5, 13), float64], Tensor[(140), int32], Tensor[(1287), float32], Tensor[(12, 15, 4), float32]) {
  %728 = cast(%var_3313, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %729 = cast(%var_3313, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %730 = cast(%var_3313, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %731 = reshape(%728, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %732 = reshape(%729, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %733 = reshape(%730, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %734 = cast(meta[relay.Constant][37] /* ty=Tensor[(140), int32] */, dtype="int32") /* ty=Tensor[(140), int32] */;
  %735 = @func_1728(%731, %732, %733) /* ty=Tensor[(13, 11, 14), bool] */;
  %736 = cast(%735, dtype="int32") /* ty=Tensor[(13, 11, 14), int32] */;
  %737 = cast(meta[relay.Constant][38] /* ty=Tensor[(1287), float32] */, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %738 = reshape(%734, newshape=[140]) /* ty=Tensor[(140), int32] */;
  %739 = reshape(%736, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %740 = reshape(%737, newshape=[117, 11]) /* ty=Tensor[(117, 11), float32] */;
  %741 = @func_2768(%738, %739, %740) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 176), int64], Tensor[(2, 88), int16], Tensor[(140), int32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(480, 2), bool], Tensor[(16, 5, 13), float64], Tensor[(117, 11), int8]) */;
  %742 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %743 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %744 = %741.7;
  %745 = %742.0;
  (%743, %735, %var_3313, %744, meta[relay.Constant][37] /* ty=Tensor[(140), int32] */, meta[relay.Constant][38] /* ty=Tensor[(1287), float32] */, %745)
}

def @func_6632() -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(336), float64], Tensor[(2002), float64]) {
  %746 = @func_6140() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %747 = cast(meta[relay.Constant][39] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %748 = reshape(%747, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %749 = @func_6080(%748) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(336), float64], Tensor[(14, 6, 11), uint16], Tensor[(2002), int32], Tensor[(2002), float32]) */;
  %750 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %751 = %750.0;
  %752 = cast(%751, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %753 = atan(%752) /* ty=Tensor[(2002), float32] */;
  %754 = cast(%753, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %755 = %746.0;
  %756 = %749.3;
  %757 = log10(%754) /* ty=Tensor[(2002), float64] */;
  (%755, %756, meta[relay.Constant][39] /* ty=Tensor[(336), float64] */, %757)
}

def @func_10063(%var_10053: Tensor[(2002), int32]) -> (Tensor[(2002), bool],) {
  %758 = @func_8462() /* ty=(Tensor[(2002), int32],) */;
  %759 = %758.0;
  %760 = cast(%var_10053, dtype="bool") /* ty=Tensor[(2002), bool] */;
  %761 = shape_of(%759, dtype="int32") /* ty=Tensor[(1), int32] */;
  %762 = cast(%759, dtype="bool") /* ty=Tensor[(2002), bool] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?), bool] */;
  %764 = logical_or(%762, %763) /* ty=Tensor[(2002), bool] */;
  (%764,)
}

def @func_8522() -> (Tensor[(12, 15, 4), float32],) {
  %765 = @func_7042() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(16, 5, 13), float64], Tensor[(2, 88), int16]) */;
  %766 = %765.0;
  (%766,)
}

def @func_7886() -> (Tensor[(14, 2, 12), int32], Tensor[(176), int16], Tensor[(2002), int32], Tensor[(176), int16]) {
  %767 = @func_4778() /* ty=(Tensor[(14, 2, 12), int32],) */;
  %768 = cast(meta[relay.Constant][40] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %769 = cast(meta[relay.Constant][41] /* ty=Tensor[(176), int16] */, dtype="int16") /* ty=Tensor[(176), int16] */;
  %770 = reshape(%768, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %771 = reshape(%769, newshape=[176]) /* ty=Tensor[(176), int16] */;
  %772 = @func_3498(%770, %771) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(2002), uint64], Tensor[(2002), int32]) */;
  %773 = %767.0;
  %774 = %772.1;
  (%773, %774, meta[relay.Constant][40] /* ty=Tensor[(2002), int32] */, meta[relay.Constant][41] /* ty=Tensor[(176), int16] */)
}

def @func_4472() -> (Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) {
  %775 = @func_3431() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %776 = cast(meta[relay.Constant][42] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %777 = reshape(%776, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint8] */;
  %778 = @func_1535(%777) /* ty=(Tensor[(2, 12, 15), uint8], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
  %779 = %775.0;
  %780 = %778.0;
  (%779, %780, meta[relay.Constant][42] /* ty=Tensor[(360), uint8] */)
}

def @func_5724() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %781 = cast(meta[relay.Constant][43] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %782 = cast(meta[relay.Constant][43] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %783 = reshape(%781, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %784 = reshape(%782, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %785 = @func_1893(%783, %784) /* ty=(Tensor[(14, 6, 11), uint16],) */;
  %786 = @func_5228() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %787 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %788 = @func_5180() /* ty=Tensor[(12, 15, 4), float32] */;
  %789 = %785.0;
  %790 = @func_2746() /* ty=Tensor[(12, 15, 4), float32] */;
  %791 = @func_3517() /* ty=Tensor[(12, 15, 4), float32] */;
  %792 = %786.0;
  (%787, %788, %789, meta[relay.Constant][43] /* ty=Tensor[(924), uint16] */, %790, %791, %792)
}

def @func_10689() -> (Tensor[(12, 15, 4), float32],) {
  %793 = @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */;
  %794 = %793.0;
  (%794,)
}

def @func_1491(%var_1476: Tensor[(176), int16]) -> (Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) {
  %795 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 13), float64] */;
  %796 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(16, 5, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(meta[relay.Constant][44] /* ty=Tensor[(16, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 13), float64] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %799 = cast(%var_1476, dtype="int16") /* ty=Tensor[(176), int16] */;
  %800 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 28), int32] */, dtype="int32") /* ty=Tensor[(5, 28), int32] */;
  %801 = reshape(%799, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int16] */;
  %802 = reshape(%800, newshape=[140]) /* ty=Tensor[(140), int32] */;
  %803 = @func_630(%801, %802) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) */;
  %804 = floor_divide(%797, %798) /* ty=Tensor[(16, 5, 13), float64] */;
  %805 = %803.0;
  (%804, %805, %var_1476, meta[relay.Constant][46] /* ty=Tensor[(5, 28), int32] */)
}

def @func_5086() -> Tensor[(12, 15, 4), float32] {
  %806 = @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %806.0
}

def @func_10992() -> Tensor[(1859), uint16] {
  %807 = @func_10892() /* ty=(Tensor[(1859), uint16],) */;
  %807.0
}

def @func_7983() -> Tensor[(12, 15, 4), float32] {
  @func_5445() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_4070(%var_4045: Tensor[(1, 13, 10), bool], %var_4046: Tensor[(1, 13, 10), bool]) -> (Tensor[(?, 13, 10), bool], Tensor[(12, 15, 4), float32]) {
  %808 = cast(%var_4046, dtype="bool") /* ty=Tensor[(1, 13, 10), bool] */;
  %809 = shape_of(%var_4045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(%var_4045, dtype="bool") /* ty=Tensor[(1, 13, 10), bool] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %812 = logical_and(%810, %811) /* ty=Tensor[(?, 13, 10), bool] */;
  %813 = @func_3875() /* ty=Tensor[(12, 15, 4), float32] */;
  (%812, %813)
}

def @func_6218(%var_6163: Tensor[(10, 12, 6), int16], %var_6211: Tensor[(10, 12, 6), float64]) -> (Tensor[(14, 2, 12), int32], Tensor[(10, 12, 6), bool], Tensor[(1, 924), uint16], Tensor[(924), uint16]) {
  %814 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 12, 6), int16] */, dtype="int16") /* ty=Tensor[(10, 12, 6), int16] */;
  %815 = shape_of(%var_6163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%var_6163, dtype="int16") /* ty=Tensor[(10, 12, 6), int16] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %818 = right_shift(%816, %817) /* ty=Tensor[(10, 12, 6), int16] */;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(10, 12, 6), float64] */;
  %820 = log10(%819) /* ty=Tensor[(10, 12, 6), float64] */;
  %821 = cast(%var_6211, dtype="bool") /* ty=Tensor[(10, 12, 6), bool] */;
  %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(%820, dtype="bool") /* ty=Tensor[(10, 12, 6), bool] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %825 = cast(meta[relay.Constant][48] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %826 = reshape(%825, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %827 = @func_3162(%826) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(1, 924), uint16]) */;
  %828 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  %829 = logical_and(%823, %824) /* ty=Tensor[(10, 12, 6), bool] */;
  %830 = %827.2;
  (%828, %829, %830, meta[relay.Constant][48] /* ty=Tensor[(924), uint16] */)
}

def @func_3209() -> (Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) {
  %831 = @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */;
  %832 = cast(meta[relay.Constant][49] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %833 = reshape(%832, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %834 = @func_2608(%833) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
  %835 = %831.3;
  %836 = %834.4;
  (%835, %836, meta[relay.Constant][49] /* ty=Tensor[(2002), int32] */)
}

def @func_11809() -> (Tensor[(12, 15, 4), float32],) {
  %837 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %838 = %837.1;
  (%838,)
}

def @func_4515() -> Tensor[(2, 12, 15), uint8] {
  %839 = @func_4472() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) */;
  %839.1
}

def @func_3543() -> Tensor[(14, 2, 12), int32] {
  %840 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 2, 12), int32] */, dtype="int32") /* ty=Tensor[(14, 2, 12), int32] */;
  %841 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(14, 2, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 2, 12), int32] */, dtype="int32") /* ty=Tensor[(14, 2, 12), int32] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%842, %843) /* ty=Tensor[(14, 2, 12), int32] */
}

def @func_8188(%var_8170: Tensor[(12, 6, 5), int64]) -> (Tensor[(12, 6, 5), int64],) {
  %844 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 6, 5), int64] */, dtype="int64") /* ty=Tensor[(12, 6, 5), int64] */;
  %845 = shape_of(%var_8170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %846 = cast(%var_8170, dtype="int64") /* ty=Tensor[(12, 6, 5), int64] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %848 = logical_xor(%846, %847) /* ty=Tensor[(12, 6, 5), int64] */;
  (%848,)
}

def @func_2465(%var_2446: Tensor[(13, 11, 13), float64], %var_2447: Tensor[(13, 11, 13), float64]) -> (Tensor[(13, 11, 13), float64],) {
  %849 = cast(%var_2447, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
  %850 = shape_of(%var_2446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%var_2446, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %853 = floor_divide(%851, %852) /* ty=Tensor[(13, 11, 13), float64] */;
  (%853,)
}

def @func_1728(%var_1716: Tensor[(13, 11, 14), int32], %var_1717: Tensor[(13, 11, 14), int32], %var_1721: Tensor[(13, 11, 14), int32]) -> Tensor[(13, 11, 14), bool] {
  %854 = cast(%var_1717, dtype="int32") /* ty=Tensor[(13, 11, 14), int32] */;
  %855 = shape_of(%var_1716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%var_1716, dtype="int32") /* ty=Tensor[(13, 11, 14), int32] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %858 = right_shift(%856, %857) /* ty=Tensor[(13, 11, 14), int32] */;
  %859 = cast(%var_1721, dtype="bool") /* ty=Tensor[(13, 11, 14), bool] */;
  %860 = shape_of(%858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%858, dtype="bool") /* ty=Tensor[(13, 11, 14), bool] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%861, %862) /* ty=Tensor[(13, 11, 14), bool] */
}

def @func_5977(%var_5949: Tensor[(7, 12, 8), float32]) -> (Tensor[(7, 12, 8), float32], Tensor[(7, 12, 8), float64], Tensor[(2, 12, 15), uint8], Tensor[(12, 15, 4), float32]) {
  %863 = cast(%var_5949, dtype="float32") /* ty=Tensor[(7, 12, 8), float32] */;
  %864 = cast(%var_5949, dtype="float64") /* ty=Tensor[(7, 12, 8), float64] */;
  %865 = @func_5724() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %866 = tan(%863) /* ty=Tensor[(7, 12, 8), float32] */;
  %867 = sigmoid(%864) /* ty=Tensor[(7, 12, 8), float64] */;
  %868 = @func_4515() /* ty=Tensor[(2, 12, 15), uint8] */;
  %869 = %865.1;
  (%866, %867, %868, %869)
}

def @func_4800(%var_4784: Tensor[(9, 9, 10), float64]) -> (Tensor[(9, 9, 10), float64], Tensor[(12, 15, 4), float32]) {
  %870 = cast(meta[relay.Constant][53] /* ty=Tensor[(9, 9, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 10), float64] */;
  %871 = shape_of(%var_4784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%var_4784, dtype="float64") /* ty=Tensor[(9, 9, 10), float64] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %874 = @func_4424() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %875 = floor_divide(%872, %873) /* ty=Tensor[(9, 9, 10), float64] */;
  %876 = %874.0;
  (%875, %876)
}

def @func_10370() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(9, 9, 10), bool]) {
  %877 = cast(meta[relay.Constant][54] /* ty=Tensor[(810, 1), float64] */, dtype="float64") /* ty=Tensor[(810, 1), float64] */;
  %878 = reshape(%877, newshape=[9, 9, 10]) /* ty=Tensor[(9, 9, 10), float64] */;
  %879 = @func_4800(%878) /* ty=(Tensor[(9, 9, 10), float64], Tensor[(12, 15, 4), float32]) */;
  %880 = %879.0;
  %881 = cast(%880, dtype="float32") /* ty=Tensor[(9, 9, 10), float32] */;
  %882 = tan(%881) /* ty=Tensor[(9, 9, 10), float32] */;
  %883 = cast(meta[relay.Constant][54] /* ty=Tensor[(810, 1), float64] */, dtype="bool") /* ty=Tensor[(810, 1), bool] */;
  %884 = shape_of(%882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%882, dtype="bool") /* ty=Tensor[(9, 9, 10), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %887 = @func_2796() /* ty=Tensor[(12, 15, 4), float32] */;
  %888 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %889 = greater_equal(%885, %886) /* ty=Tensor[(9, 9, 10), bool] */;
  (%887, %888, %889)
}

def @func_12345() -> (Tensor[(12, 15, 4), float32],) {
  %890 = @func_10184() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %891 = %890.0;
  (%891,)
}

def @func_2608(%var_2597: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
  %892 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %893 = cast(%var_2597, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %894 = cast(%var_2597, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %895 = cast(%var_2597, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %896 = reshape(%893, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %897 = reshape(%894, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %898 = reshape(%895, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %899 = cast(meta[relay.Constant][55] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %900 = cast(meta[relay.Constant][55] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %901 = reshape(%899, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %902 = reshape(%900, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %903 = @func_581(%901, %902) /* ty=(Tensor[(2, 3, 8), uint32],) */;
  %904 = %892.0;
  %905 = @func_1728(%896, %897, %898) /* ty=Tensor[(13, 11, 14), bool] */;
  %906 = %903.0;
  (%904, %905, %var_2597, %906, meta[relay.Constant][55] /* ty=Tensor[(48), uint32] */)
}

def @func_5430(%var_5415: Tensor[(9, 12, 9), float64]) -> (Tensor[(9, 12, 9), float64], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %907 = cast(%var_5415, dtype="float64") /* ty=Tensor[(9, 12, 9), float64] */;
  %908 = @func_3694() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %909 = exp(%907) /* ty=Tensor[(9, 12, 9), float64] */;
  %910 = %908.0;
  %911 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
  (%909, %910, %911)
}

def @func_5401() -> (Tensor[(2002), int32],) {
  %912 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %913 = %912.0;
  (%913,)
}

def @func_7042() -> (Tensor[(12, 15, 4), float32], Tensor[(16, 5, 13), float64], Tensor[(2, 88), int16]) {
  %914 = cast(meta[relay.Constant][56] /* ty=Tensor[(2, 88), int16] */, dtype="int16") /* ty=Tensor[(2, 88), int16] */;
  %915 = reshape(%914, newshape=[176]) /* ty=Tensor[(176), int16] */;
  %916 = @func_1491(%915) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) */;
  %917 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
  %918 = %916.0;
  (%917, %918, meta[relay.Constant][56] /* ty=Tensor[(2, 88), int16] */)
}

def @func_4126(%var_4117: Tensor[(924), uint16]) -> (Tensor[(12, 15, 4), float32], Tensor[(2002), uint16], Tensor[(14, 2, 12), int32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16]) {
  %919 = cast(meta[relay.Constant][57] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %920 = cast(meta[relay.Constant][57] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %921 = cast(meta[relay.Constant][57] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %922 = reshape(%919, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %923 = reshape(%920, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %924 = reshape(%921, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %925 = @func_1728(%922, %923, %924) /* ty=Tensor[(13, 11, 14), bool] */;
  %926 = cast(%925, dtype="uint16") /* ty=Tensor[(13, 11, 14), uint16] */;
  %927 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %928 = cast(meta[relay.Constant][57] /* ty=Tensor[(2002), int32] */, dtype="uint16") /* ty=Tensor[(2002), uint16] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %930 = cast(%var_4117, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %931 = cast(%var_4117, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %932 = reshape(%930, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %933 = reshape(%931, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %934 = @func_1893(%932, %933) /* ty=(Tensor[(14, 6, 11), uint16],) */;
  %935 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
  %936 = bitwise_xor(%928, %929) /* ty=Tensor[(2002), uint16] */;
  %937 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  %938 = %934.0;
  (%935, %936, %937, %938, %var_4117)
}

def @func_2502() -> (Tensor[(12, 15, 4), float32],) {
  %939 = cast(meta[relay.Constant][58] /* ty=Tensor[(12, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 4), float32] */;
  %940 = asinh(%939) /* ty=Tensor[(12, 15, 4), float32] */;
  (%940,)
}

def @func_737(%var_685: Tensor[(1, 13, 9), float32]) -> (Tensor[(2, 11, 16), int8], Tensor[(352), int64], Tensor[(480, 2), bool], Tensor[(1, 13, 9), bool], Tensor[(12, 10, 8), float64]) {
  %941 = cast(meta[relay.Constant][59] /* ty=Tensor[(352), int64] */, dtype="int64") /* ty=Tensor[(352), int64] */;
  %942 = cast(meta[relay.Constant][59] /* ty=Tensor[(352), int64] */, dtype="int64") /* ty=Tensor[(352), int64] */;
  %943 = cast(meta[relay.Constant][59] /* ty=Tensor[(352), int64] */, dtype="int64") /* ty=Tensor[(352), int64] */;
  %944 = reshape(%941, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %945 = reshape(%942, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %946 = reshape(%943, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %947 = cast(9.15369f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %948 = cast(meta[relay.Constant][60] /* ty=Tensor[(480, 2), float64] */, dtype="float64") /* ty=Tensor[(480, 2), float64] */;
  %949 = reshape(%947, newshape=[]) /* ty=float64 */;
  %950 = reshape(%948, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %951 = @func_554(%949, %950) /* ty=(Tensor[(12, 10, 8), float64],) */;
  %952 = %951.0;
  %953 = cast(%952, dtype="bool") /* ty=Tensor[(12, 10, 8), bool] */;
  %954 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(480, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %955 = cast(meta[relay.Constant][60] /* ty=Tensor[(480, 2), float64] */, dtype="bool") /* ty=Tensor[(480, 2), bool] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %957 = cast(%var_685, dtype="float32") /* ty=Tensor[(1, 13, 9), float32] */;
  %958 = acos(%957) /* ty=Tensor[(1, 13, 9), float32] */;
  %959 = cast(%958, dtype="float32") /* ty=Tensor[(1, 13, 9), float32] */;
  %960 = tan(%959) /* ty=Tensor[(1, 13, 9), float32] */;
  %961 = cast(%960, dtype="bool") /* ty=Tensor[(1, 13, 9), bool] */;
  %962 = cast(9.15369f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %963 = cast(9.15369f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %964 = cast(%952, dtype="float64") /* ty=Tensor[(12, 10, 8), float64] */;
  %965 = reshape(%963, newshape=[]) /* ty=float64 */;
  %966 = reshape(%964, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %967 = @func_554(%965, %966) /* ty=(Tensor[(12, 10, 8), float64],) */;
  %968 = @func_232(%944, %945, %946) /* ty=Tensor[(2, 11, 16), int8] */;
  %969 = not_equal(%955, %956) /* ty=Tensor[(480, 2), bool] */;
  %970 = equal(%961, %962) /* ty=Tensor[(1, 13, 9), bool] */;
  %971 = %967.0;
  (%968, meta[relay.Constant][59] /* ty=Tensor[(352), int64] */, %969, %970, %971)
}

def @func_6479() -> (Tensor[(12, 15, 4), float32],) {
  %972 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
  (%972,)
}

def @func_11415() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %973 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %974 = @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %975 = %973.0;
  %976 = %974.0;
  (%975, %976)
}

def @func_7975() -> (Tensor[(12, 15, 4), float32], Tensor[(11, 182), bool], Tensor[(48), uint32]) {
  %977 = cast(meta[relay.Constant][61] /* ty=Tensor[(11, 182), int32] */, dtype="int32") /* ty=Tensor[(11, 182), int32] */;
  %978 = reshape(%977, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %979 = @func_3331(%978) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(16, 5, 13), float64], Tensor[(140), int32], Tensor[(1287), float32], Tensor[(12, 15, 4), float32]) */;
  %980 = %979.2;
  %981 = cast(%980, dtype="bool") /* ty=Tensor[(2002), bool] */;
  %982 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(11, 182), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %983 = cast(meta[relay.Constant][61] /* ty=Tensor[(11, 182), int32] */, dtype="bool") /* ty=Tensor[(11, 182), bool] */;
  %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %985 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
  %986 = @func_5180() /* ty=Tensor[(12, 15, 4), float32] */;
  %987 = logical_or(%983, %984) /* ty=Tensor[(11, 182), bool] */;
  %988 = %985.1;
  (%986, %987, %988)
}

def @func_8760() -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32]) {
  %989 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %990 = @func_5401() /* ty=(Tensor[(2002), int32],) */;
  %991 = %989.0;
  %992 = %990.0;
  (%991, %992)
}

def @func_3958(%var_3899: Tensor[(12, 15, 4), float32], %var_3913: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), int32], Tensor[(12, 15, 4), float32], Tensor[(48), uint32]) {
  %993 = @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %994 = %993.0;
  %995 = cast(%var_3899, dtype="int32") /* ty=Tensor[(12, 15, 4), int32] */;
  %996 = shape_of(%994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %997 = cast(%994, dtype="int32") /* ty=Tensor[(12, 15, 4), int32] */;
  %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %999 = cast(%var_3913, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1000 = reshape(%999, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1001 = @func_3610(%1000) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
  %1002 = logical_xor(%997, %998) /* ty=Tensor[(12, 15, 4), int32] */;
  %1003 = %1001.1;
  (%1002, %1003, %var_3913)
}

def @func_10462() -> Tensor[(2002), int32] {
  @func_9526() /* ty=Tensor[(2002), int32] */
}

def @func_4627() -> (Tensor[(12, 15, 4), float32],) {
  %1004 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
  (%1004,)
}

def @func_10763(%var_10751: Tensor[(9, 7, 12), int32], %var_10752: Tensor[(9, 7, 12), int32]) -> (Tensor[(9, 7, 12), int32], Tensor[(9, 7, 12), float64]) {
  %1005 = cast(%var_10752, dtype="int32") /* ty=Tensor[(9, 7, 12), int32] */;
  %1006 = shape_of(%var_10751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%var_10751, dtype="int32") /* ty=Tensor[(9, 7, 12), int32] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1009 = cast(%var_10751, dtype="float64") /* ty=Tensor[(9, 7, 12), float64] */;
  %1010 = bitwise_and(%1007, %1008) /* ty=Tensor[(9, 7, 12), int32] */;
  %1011 = cos(%1009) /* ty=Tensor[(9, 7, 12), float64] */;
  (%1010, %1011)
}

def @func_6650() -> (Tensor[(12, 15, 4), float32],) {
  %1012 = @func_4690() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %1013 = %1012.0;
  (%1013,)
}

def @func_7939(%var_7914: Tensor[(14, 11, 3), float32]) -> (Tensor[(14, 11, 3), float32], Tensor[(14, 11, 3), bool], Tensor[(12, 15, 4), float32]) {
  %1014 = cast(meta[relay.Constant][62] /* ty=Tensor[(14, 11, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 3), float32] */;
  %1015 = shape_of(%var_7914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(%var_7914, dtype="float32") /* ty=Tensor[(14, 11, 3), float32] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1018 = cast(%var_7914, dtype="bool") /* ty=Tensor[(14, 11, 3), bool] */;
  %1019 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(14, 11, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1020 = cast(meta[relay.Constant][62] /* ty=Tensor[(14, 11, 3), float32] */, dtype="bool") /* ty=Tensor[(14, 11, 3), bool] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1022 = @func_7861() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %1023 = floor_divide(%1016, %1017) /* ty=Tensor[(14, 11, 3), float32] */;
  %1024 = logical_and(%1020, %1021) /* ty=Tensor[(14, 11, 3), bool] */;
  %1025 = %1022.2;
  (%1023, %1024, %1025)
}

def @func_11535(%var_11531: Tensor[(462), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(14, 11, 3), float32], Tensor[(462), float32]) {
  %1026 = cast(%var_11531, dtype="float32") /* ty=Tensor[(462), float32] */;
  %1027 = reshape(%1026, newshape=[14, 11, 3]) /* ty=Tensor[(14, 11, 3), float32] */;
  %1028 = @func_7939(%1027) /* ty=(Tensor[(14, 11, 3), float32], Tensor[(14, 11, 3), bool], Tensor[(12, 15, 4), float32]) */;
  %1029 = @func_4647() /* ty=Tensor[(12, 15, 4), float32] */;
  %1030 = %1028.0;
  (%1029, %1030, %var_11531)
}

def @func_2839() -> Tensor[(12, 15, 4), float32] {
  @func_2796() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_581(%var_576: Tensor[(2, 3, 8), uint32], %var_577: Tensor[(2, 3, 8), uint32]) -> (Tensor[(2, 3, 8), uint32],) {
  %1031 = cast(%var_577, dtype="uint32") /* ty=Tensor[(2, 3, 8), uint32] */;
  %1032 = shape_of(%var_576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1033 = cast(%var_576, dtype="uint32") /* ty=Tensor[(2, 3, 8), uint32] */;
  %1034 = dyn.reshape(%1031, %1032, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1035 = subtract(%1033, %1034) /* ty=Tensor[(2, 3, 8), uint32] */;
  (%1035,)
}

def @func_7901(%var_7899: Tensor[(117), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32], Tensor[(117), float32]) {
  %1036 = cast(%var_7899, dtype="float32") /* ty=Tensor[(117), float32] */;
  %1037 = reshape(%1036, newshape=[39, 3]) /* ty=Tensor[(39, 3), float32] */;
  %1038 = @func_7306(%1037) /* ty=(Tensor[(39, 3), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) */;
  %1039 = @func_5445() /* ty=Tensor[(12, 15, 4), float32] */;
  %1040 = %1038.0;
  (%1039, %1040, %var_7899)
}

def @func_11309(%var_11269: Tensor[(2002), int32], %var_11278: float64) -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(12, 10, 8), float64], float64, Tensor[(960), float64], Tensor[(960), float64], Tensor[(2, 12), bool], Tensor[(14, 2, 12), int32], Tensor[(12, 15, 4), float32]) {
  %1041 = @func_10738() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %1042 = cast(%var_11269, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %1043 = cast(%var_11269, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %1044 = cast(%var_11269, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %1045 = reshape(%1042, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %1046 = reshape(%1043, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %1047 = reshape(%1044, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %1048 = cast(%var_11278, dtype="float64") /* ty=float64 */;
  %1049 = cast(meta[relay.Constant][63] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1050 = reshape(%1048, newshape=[]) /* ty=float64 */;
  %1051 = reshape(%1049, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %1052 = @func_554(%1050, %1051) /* ty=(Tensor[(12, 10, 8), float64],) */;
  %1053 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 12), bool] */, dtype="bool") /* ty=Tensor[(2, 12), bool] */;
  %1054 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 12), bool] */, dtype="bool") /* ty=Tensor[(2, 12), bool] */;
  %1055 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 12), bool] */, dtype="bool") /* ty=Tensor[(2, 12), bool] */;
  %1056 = cast(%var_11278, dtype="float64") /* ty=float64 */;
  %1057 = %1052.0;
  %1058 = cast(%1057, dtype="float64") /* ty=Tensor[(12, 10, 8), float64] */;
  %1059 = reshape(%1053, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), bool] */;
  %1060 = reshape(%1054, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), bool] */;
  %1061 = reshape(%1055, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), bool] */;
  %1062 = reshape(%1056, newshape=[]) /* ty=float64 */;
  %1063 = reshape(%1058, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %1064 = @func_907(%1059, %1060, %1061, %1062, %1063) /* ty=(Tensor[(2, 2, 6), bool], Tensor[(2, 2, 6), float64], Tensor[(12, 10, 8), float64], float64, Tensor[(960), float64], Tensor[(2, 2, 6), float64]) */;
  %1065 = @func_7886() /* ty=(Tensor[(14, 2, 12), int32], Tensor[(176), int16], Tensor[(2002), int32], Tensor[(176), int16]) */;
  %1066 = %1041.0;
  %1067 = @func_1728(%1045, %1046, %1047) /* ty=Tensor[(13, 11, 14), bool] */;
  %1068 = %1064.4;
  %1069 = %1065.0;
  %1070 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
  (%1066, %1067, %var_11269, %1057, %var_11278, meta[relay.Constant][63] /* ty=Tensor[(960), float64] */, %1068, meta[relay.Constant][64] /* ty=Tensor[(2, 12), bool] */, %1069, %1070)
}

def @func_8101() -> (Tensor[(12, 15, 4), float32],) {
  %1071 = @func_6118() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %1072 = %1071.1;
  (%1072,)
}

def @func_10125() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %1073 = @func_7447() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %1074 = @func_4690() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %1075 = %1073.0;
  %1076 = %1074.0;
  (%1075, %1076)
}

def @func_12316() -> Tensor[(12, 15, 4), float32] {
  @func_8867() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_6140() -> (Tensor[(12, 15, 4), float32],) {
  %1077 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %1078 = %1077.0;
  (%1078,)
}

def @func_10423() -> Tensor[(9, 8), float32] {
  %1079 = @func_5272() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(9, 8), float32], Tensor[(72), float32]) */;
  %1079.1
}

def @func_3633() -> (Tensor[(12, 15, 4), float32],) {
  %1080 = @func_2839() /* ty=Tensor[(12, 15, 4), float32] */;
  (%1080,)
}

def @func_5904(%var_5895: Tensor[(14, 2, 12), float64]) -> (Tensor[(12, 15, 4), float32], Tensor[(2002), float32], Tensor[(14, 2, 12), bool]) {
  %1081 = @func_4887() /* ty=(Tensor[(2002), float32],) */;
  %1082 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  %1083 = cast(%1082, dtype="float64") /* ty=Tensor[(14, 2, 12), float64] */;
  %1084 = log(%1083) /* ty=Tensor[(14, 2, 12), float64] */;
  %1085 = cast(%var_5895, dtype="bool") /* ty=Tensor[(14, 2, 12), bool] */;
  %1086 = shape_of(%1084, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1087 = cast(%1084, dtype="bool") /* ty=Tensor[(14, 2, 12), bool] */;
  %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1089 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
  %1090 = %1081.0;
  %1091 = greater_equal(%1087, %1088) /* ty=Tensor[(14, 2, 12), bool] */;
  (%1089, %1090, %1091)
}

def @func_3026() -> Tensor[(12, 15, 4), float32] {
  %1092 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %1092.0
}

def @func_11343() -> (Tensor[(12, 15, 4), float32],) {
  %1093 = @func_4248() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %1094 = %1093.0;
  (%1094,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11683() -> (Tensor[(2002), float64], Tensor[(12, 16, 10), float32]) {
  %0 = @func_10171() /* ty=(Tensor[(2002), int8],) */;
  %1 = %0.0;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(2002), int8] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(1), int32] */;
  %4 = cast(%1, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?), float64] */;
  %6 = @func_10280() /* ty=(Tensor[(12, 16, 10), float32], Tensor[(176), int16]) */;
  %7 = floor_mod(%4, %5) /* ty=Tensor[(2002), float64] */;
  %8 = %6.0;
  (%7, %8)
}

def @func_4129(%var_4127: Tensor[(924), uint16]) -> (Tensor[(12, 15, 4), float32], Tensor[(2002), uint16], Tensor[(14, 2, 12), int32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16]) {
  @func_4126(%var_4127) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), uint16], Tensor[(14, 2, 12), int32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16]) */
}

def @func_4743() -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32], Tensor[(14, 9, 11), float64]) {
  %9 = @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */;
  %10 = @func_3806() /* ty=(Tensor[(2002), int32],) */;
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 9, 11), float64] */, dtype="float64") /* ty=Tensor[(14, 9, 11), float64] */;
  %12 = acos(%11) /* ty=Tensor[(14, 9, 11), float64] */;
  %13 = cast(%12, dtype="float64") /* ty=Tensor[(14, 9, 11), float64] */;
  %14 = %9.0;
  %15 = %10.0;
  %16 = @func_4549() /* ty=Tensor[(12, 15, 4), float32] */;
  %17 = sqrt(%13) /* ty=Tensor[(14, 9, 11), float64] */;
  (%14, %15, %16, %17)
}

def @func_4888() -> (Tensor[(2002), float32],) {
  %22 = fn () -> (Tensor[(2002), float32],) {
    %18 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
    %19 = %18.0;
    %20 = cast(%19, dtype="float32") /* ty=Tensor[(2002), float32] */;
    %21 = atanh(%20) /* ty=Tensor[(2002), float32] */;
    (%21,)
  };
  %22() /* ty=(Tensor[(2002), float32],) */
}

def @func_9234() -> (Tensor[(12, 15, 4), float32],) {
  %23 = @func_6159() /* ty=Tensor[(12, 15, 4), float32] */;
  (%23,)
}

def @func_4424() -> (Tensor[(12, 15, 4), float32],) {
  %24 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
  (%24,)
}

def @func_5056() -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 15, 4), float32]) {
  @func_5054() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 15, 4), float32]) */
}

def @func_8490() -> (Tensor[(2002), int32],) {
  @func_8488() /* ty=(Tensor[(2002), int32],) */
}

def @func_3633() -> (Tensor[(12, 15, 4), float32],) {
  %25 = @func_2839() /* ty=Tensor[(12, 15, 4), float32] */;
  (%25,)
}

def @func_3660() -> (Tensor[(12, 15, 4), float32],) {
  @func_3658() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_11685() -> (Tensor[(2002), float64], Tensor[(12, 16, 10), float32]) {
  @func_11683() /* ty=(Tensor[(2002), float64], Tensor[(12, 16, 10), float32]) */
}

def @func_10894() -> (Tensor[(1859), uint16],) {
  @func_10892() /* ty=(Tensor[(1859), uint16],) */
}

def @func_2610(%var_2609: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
  %41 = fn (%var_2597: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
    %26 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %27 = cast(%var_2597, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %28 = cast(%var_2597, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %29 = cast(%var_2597, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %30 = reshape(%27, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
    %31 = reshape(%28, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
    %32 = reshape(%29, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
    %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %34 = cast(meta[relay.Constant][2] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %35 = reshape(%33, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
    %36 = reshape(%34, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
    %37 = @func_581(%35, %36) /* ty=(Tensor[(2, 3, 8), uint32],) */;
    %38 = %26.0;
    %39 = @func_1728(%30, %31, %32) /* ty=Tensor[(13, 11, 14), bool] */;
    %40 = %37.0;
    (%38, %39, %var_2597, %40, meta[relay.Constant][2] /* ty=Tensor[(48), uint32] */)
  };
  %41(%var_2609) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */
}

def @func_7861() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %42 = @func_3658() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %43 = %42.0;
  %44 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
  %45 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
  %46 = @func_4549() /* ty=Tensor[(12, 15, 4), float32] */;
  (%43, %44, %45, %46)
}

def @func_6082(%var_6081: Tensor[(336), float64]) -> (Tensor[(12, 15, 4), float32], Tensor[(336), float64], Tensor[(14, 6, 11), uint16], Tensor[(2002), int32], Tensor[(2002), float32]) {
  %64 = fn (%var_6032: Tensor[(336), float64]) -> (Tensor[(12, 15, 4), float32], Tensor[(336), float64], Tensor[(14, 6, 11), uint16], Tensor[(2002), int32], Tensor[(2002), float32]) {
    %47 = @func_5843() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
    %48 = @func_5724() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
    %49 = cast(%var_6032, dtype="float64") /* ty=Tensor[(336), float64] */;
    %50 = reshape(%49, newshape=[14, 2, 12]) /* ty=Tensor[(14, 2, 12), float64] */;
    %51 = @func_5904(%50) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), float32], Tensor[(14, 2, 12), bool]) */;
    %52 = %51.1;
    %53 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
    %54 = %53.2;
    %55 = cast(%54, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %56 = shape_of(%52, dtype="int32") /* ty=Tensor[(1), int32] */;
    %57 = cast(%52, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?), int32] */;
    %59 = cast(%52, dtype="float32") /* ty=Tensor[(2002), float32] */;
    %60 = %47.0;
    %61 = %48.2;
    %62 = logical_xor(%57, %58) /* ty=Tensor[(2002), int32] */;
    %63 = cos(%59) /* ty=Tensor[(2002), float32] */;
    (%60, %var_6032, %61, %62, %63)
  };
  %64(%var_6081) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(336), float64], Tensor[(14, 6, 11), uint16], Tensor[(2002), int32], Tensor[(2002), float32]) */
}

def @func_8761() -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32]) {
  %69 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32]) {
    %65 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %66 = @func_5401() /* ty=(Tensor[(2002), int32],) */;
    %67 = %65.0;
    %68 = %66.0;
    (%67, %68)
  };
  %69() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32]) */
}

def @func_2465(%var_2446: Tensor[(13, 11, 13), float64], %var_2447: Tensor[(13, 11, 13), float64]) -> (Tensor[(13, 11, 13), float64],) {
  %70 = cast(%var_2447, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
  %71 = shape_of(%var_2446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%var_2446, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %74 = floor_divide(%72, %73) /* ty=Tensor[(13, 11, 13), float64] */;
  (%74,)
}

def @func_8390(%var_8354: Tensor[(11, 13, 15), uint64], %var_8355: Tensor[(11, 13, 15), uint64], %var_8360: Tensor[(11, 13, 15), uint64]) -> Tensor[(11, 13, 15), float64] {
  %75 = cast(%var_8355, dtype="uint64") /* ty=Tensor[(11, 13, 15), uint64] */;
  %76 = shape_of(%var_8354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%var_8354, dtype="uint64") /* ty=Tensor[(11, 13, 15), uint64] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %79 = multiply(%77, %78) /* ty=Tensor[(11, 13, 15), uint64] */;
  %80 = cast(%var_8360, dtype="bool") /* ty=Tensor[(11, 13, 15), bool] */;
  %81 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%79, dtype="bool") /* ty=Tensor[(11, 13, 15), bool] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %84 = not_equal(%82, %83) /* ty=Tensor[(11, 13, 15), bool] */;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(11, 13, 15), float64] */;
  rsqrt(%85) /* ty=Tensor[(11, 13, 15), float64] */
}

def @func_5144() -> (Tensor[(12, 15, 4), float32],) {
  @func_5142() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_6141() -> (Tensor[(12, 15, 4), float32],) {
  %88 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %86 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
    %87 = %86.0;
    (%87,)
  };
  %88() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_5977(%var_5949: Tensor[(7, 12, 8), float32]) -> (Tensor[(7, 12, 8), float32], Tensor[(7, 12, 8), float64], Tensor[(2, 12, 15), uint8], Tensor[(12, 15, 4), float32]) {
  %89 = cast(%var_5949, dtype="float32") /* ty=Tensor[(7, 12, 8), float32] */;
  %90 = cast(%var_5949, dtype="float64") /* ty=Tensor[(7, 12, 8), float64] */;
  %91 = @func_5724() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %92 = tan(%89) /* ty=Tensor[(7, 12, 8), float32] */;
  %93 = sigmoid(%90) /* ty=Tensor[(7, 12, 8), float64] */;
  %94 = @func_4515() /* ty=Tensor[(2, 12, 15), uint8] */;
  %95 = %91.1;
  (%92, %93, %94, %95)
}

def @func_3518() -> Tensor[(12, 15, 4), float32] {
  %96 = fn () -> Tensor[(12, 15, 4), float32] {
    @func_2670() /* ty=Tensor[(12, 15, 4), float32] */
  };
  %96() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_4447() -> (Tensor[(12, 15, 4), float32],) {
  %97 = @func_3875() /* ty=Tensor[(12, 15, 4), float32] */;
  (%97,)
}

def @func_10066(%var_10064: Tensor[(2002), int32]) -> (Tensor[(2002), bool],) {
  @func_10063(%var_10064) /* ty=(Tensor[(2002), bool],) */
}

def @func_3635() -> (Tensor[(12, 15, 4), float32],) {
  @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_3679() -> Tensor[(12, 15, 4), float32] {
  %98 = @func_3658() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %98.0
}

def @func_6218(%var_6163: Tensor[(10, 12, 6), int16], %var_6211: Tensor[(10, 12, 6), float64]) -> (Tensor[(14, 2, 12), int32], Tensor[(10, 12, 6), bool], Tensor[(1, 924), uint16], Tensor[(924), uint16]) {
  %99 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 12, 6), int16] */, dtype="int16") /* ty=Tensor[(10, 12, 6), int16] */;
  %100 = shape_of(%var_6163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%var_6163, dtype="int16") /* ty=Tensor[(10, 12, 6), int16] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %103 = right_shift(%101, %102) /* ty=Tensor[(10, 12, 6), int16] */;
  %104 = cast(%103, dtype="float64") /* ty=Tensor[(10, 12, 6), float64] */;
  %105 = log10(%104) /* ty=Tensor[(10, 12, 6), float64] */;
  %106 = cast(%var_6211, dtype="bool") /* ty=Tensor[(10, 12, 6), bool] */;
  %107 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%105, dtype="bool") /* ty=Tensor[(10, 12, 6), bool] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %110 = cast(meta[relay.Constant][4] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %111 = reshape(%110, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %112 = @func_3162(%111) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(1, 924), uint16]) */;
  %113 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  %114 = logical_and(%108, %109) /* ty=Tensor[(10, 12, 6), bool] */;
  %115 = %112.2;
  (%113, %114, %115, meta[relay.Constant][4] /* ty=Tensor[(924), uint16] */)
}

def @func_10498() -> (Tensor[(176), int16], Tensor[(14, 2, 12), int32]) {
  %119 = fn () -> (Tensor[(176), int16], Tensor[(14, 2, 12), int32]) {
    %116 = @func_10280() /* ty=(Tensor[(12, 16, 10), float32], Tensor[(176), int16]) */;
    %117 = %116.1;
    %118 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
    (%117, %118)
  };
  %119() /* ty=(Tensor[(176), int16], Tensor[(14, 2, 12), int32]) */
}

def @func_2839() -> Tensor[(12, 15, 4), float32] {
  @func_2796() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_4074(%var_4072: Tensor[(1, 13, 10), bool], %var_4073: Tensor[(1, 13, 10), bool]) -> (Tensor[(?, 13, 10), bool], Tensor[(12, 15, 4), float32]) {
  @func_4070(%var_4072, %var_4073) /* ty=(Tensor[(?, 13, 10), bool], Tensor[(12, 15, 4), float32]) */
}

def @func_6160() -> Tensor[(12, 15, 4), float32] {
  %120 = fn () -> Tensor[(12, 15, 4), float32] {
    @func_2796() /* ty=Tensor[(12, 15, 4), float32] */
  };
  %120() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_9052() -> Tensor[(12, 15, 4), float32] {
  @func_8867() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_2738() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %127 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
    %121 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %122 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %123 = %121.0;
    %124 = %122.0;
    %125 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
    %126 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
    (%123, %124, %125, %126)
  };
  %127() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_4780() -> (Tensor[(14, 2, 12), int32],) {
  @func_4778() /* ty=(Tensor[(14, 2, 12), int32],) */
}

def @func_9577() -> (Tensor[(12, 15, 4), float32],) {
  @func_9575() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_9923() -> (Tensor[(12, 15, 4), float32],) {
  %128 = @func_6557() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32]) */;
  %129 = %128.0;
  (%129,)
}

def @func_8102() -> (Tensor[(12, 15, 4), float32],) {
  %132 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %130 = @func_6118() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
    %131 = %130.1;
    (%131,)
  };
  %132() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_9575() -> (Tensor[(12, 15, 4), float32],) {
  %133 = @func_8760() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32]) */;
  %134 = %133.0;
  (%134,)
}

def @func_10738() -> (Tensor[(12, 15, 4), float32],) {
  %135 = @func_6479() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %136 = %135.0;
  (%136,)
}

def @func_2841() -> Tensor[(12, 15, 4), float32] {
  @func_2839() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_3806() -> (Tensor[(2002), int32],) {
  %137 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
  %138 = %137.2;
  (%138,)
}

def @func_740(%var_738: Tensor[(1, 13, 9), float32]) -> (Tensor[(2, 11, 16), int8], Tensor[(352), int64], Tensor[(480, 2), bool], Tensor[(1, 13, 9), bool], Tensor[(12, 10, 8), float64]) {
  @func_737(%var_738) /* ty=(Tensor[(2, 11, 16), int8], Tensor[(352), int64], Tensor[(480, 2), bool], Tensor[(1, 13, 9), bool], Tensor[(12, 10, 8), float64]) */
}

def @func_6411() -> (Tensor[(12, 15, 4), float32],) {
  %141 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %139 = @func_3431() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %140 = %139.0;
    (%140,)
  };
  %141() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_5273() -> (Tensor[(12, 15, 4), float32], Tensor[(9, 8), float32], Tensor[(72), float32]) {
  %146 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(9, 8), float32], Tensor[(72), float32]) {
    %142 = cast(meta[relay.Constant][5] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %143 = reshape(%142, newshape=[9, 8]) /* ty=Tensor[(9, 8), float32] */;
    %144 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
    %145 = @func_1668(%143) /* ty=Tensor[(9, 8), float32] */;
    (%144, %145, meta[relay.Constant][5] /* ty=Tensor[(72), float32] */)
  };
  %146() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(9, 8), float32], Tensor[(72), float32]) */
}

def @func_2796() -> Tensor[(12, 15, 4), float32] {
  @func_2553() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_4690() -> (Tensor[(12, 15, 4), float32],) {
  %147 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %148 = %147.0;
  (%148,)
}

def @func_2953() -> (Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) {
  %149 = cast(meta[relay.Constant][6] /* ty=Tensor[(176), int16] */, dtype="int16") /* ty=Tensor[(176), int16] */;
  %150 = cast(meta[relay.Constant][7] /* ty=Tensor[(140), int32] */, dtype="int32") /* ty=Tensor[(140), int32] */;
  %151 = reshape(%149, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int16] */;
  %152 = reshape(%150, newshape=[140]) /* ty=Tensor[(140), int32] */;
  %153 = @func_630(%151, %152) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) */;
  %154 = @func_2796() /* ty=Tensor[(12, 15, 4), float32] */;
  %155 = %153.2;
  (%154, %155, meta[relay.Constant][6] /* ty=Tensor[(176), int16] */, meta[relay.Constant][7] /* ty=Tensor[(140), int32] */)
}

def @func_10740() -> (Tensor[(12, 15, 4), float32],) {
  @func_10738() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_3390() -> (Tensor[(2002), int32],) {
  @func_3388() /* ty=(Tensor[(2002), int32],) */
}

def @func_3388() -> (Tensor[(2002), int32],) {
  %156 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
  %157 = %156.2;
  (%157,)
}

def @func_8523() -> (Tensor[(12, 15, 4), float32],) {
  %160 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %158 = @func_7042() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(16, 5, 13), float64], Tensor[(2, 88), int16]) */;
    %159 = %158.0;
    (%159,)
  };
  %160() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_2068(%var_2065: Tensor[(4, 10, 8), float64], %var_2066: Tensor[(1, 924), uint16], %var_2067: Tensor[(117), float32]) -> (Tensor[(4, 10, 8), float64], Tensor[(14, 6, 11), uint16], Tensor[(1, 924), float64], Tensor[(352), int64], Tensor[(117), float32]) {
  @func_2063(%var_2065, %var_2066, %var_2067) /* ty=(Tensor[(4, 10, 8), float64], Tensor[(14, 6, 11), uint16], Tensor[(1, 924), float64], Tensor[(352), int64], Tensor[(117), float32]) */
}

def @func_3501(%var_3499: Tensor[(2002), int32], %var_3500: Tensor[(176), int16]) -> (Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(2002), uint64], Tensor[(2002), int32]) {
  %181 = fn (%var_3459: Tensor[(2002), int32], %var_3465: Tensor[(176), int16]) -> (Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(2002), uint64], Tensor[(2002), int32]) {
    %161 = cast(%var_3465, dtype="int16") /* ty=Tensor[(176), int16] */;
    %162 = reshape(%161, newshape=[176]) /* ty=Tensor[(176), int16] */;
    %163 = @func_1491(%162) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) */;
    %164 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
    %165 = %164.0;
    %166 = cast(%165, dtype="float32") /* ty=Tensor[(2002), float32] */;
    %167 = sinh(%166) /* ty=Tensor[(2002), float32] */;
    %168 = cast(%var_3459, dtype="float32") /* ty=Tensor[(2002), float32] */;
    %169 = shape_of(%165, dtype="int32") /* ty=Tensor[(1), int32] */;
    %170 = cast(%165, dtype="float32") /* ty=Tensor[(2002), float32] */;
    %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?), float32] */;
    %172 = multiply(%170, %171) /* ty=Tensor[(2002), float32] */;
    %173 = cast(%172, dtype="uint64") /* ty=Tensor[(2002), uint64] */;
    %174 = shape_of(%167, dtype="int32") /* ty=Tensor[(1), int32] */;
    %175 = cast(%167, dtype="uint64") /* ty=Tensor[(2002), uint64] */;
    %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %177 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
    %178 = %163.1;
    %179 = bitwise_or(%175, %176) /* ty=Tensor[(2002), uint64] */;
    %180 = %177.0;
    (%178, %var_3465, %179, %180)
  };
  %181(%var_3499, %var_3500) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(2002), uint64], Tensor[(2002), int32]) */
}

def @func_5726() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  @func_5724() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_10579(%var_10564: Tensor[(3, 3, 11), uint64], %var_10565: Tensor[(3, 3, 11), uint64]) -> Tensor[(3, 3, 11), float32] {
  %182 = cast(%var_10565, dtype="uint64") /* ty=Tensor[(3, 3, 11), uint64] */;
  %183 = shape_of(%var_10564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%var_10564, dtype="uint64") /* ty=Tensor[(3, 3, 11), uint64] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %186 = minimum(%184, %185) /* ty=Tensor[(3, 3, 11), uint64] */;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(3, 3, 11), float32] */;
  cosh(%187) /* ty=Tensor[(3, 3, 11), float32] */
}

def @func_9657(%var_9655: Tensor[(176), int16], %var_9656: Tensor[(140), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(336), float64], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) {
  %198 = fn (%var_9639: Tensor[(176), int16], %var_9640: Tensor[(140), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(336), float64], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) {
    %188 = @func_9234() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %189 = @func_6632() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(336), float64], Tensor[(2002), float64]) */;
    %190 = cast(%var_9639, dtype="int16") /* ty=Tensor[(176), int16] */;
    %191 = cast(%var_9640, dtype="int32") /* ty=Tensor[(140), int32] */;
    %192 = reshape(%190, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int16] */;
    %193 = reshape(%191, newshape=[140]) /* ty=Tensor[(140), int32] */;
    %194 = @func_630(%192, %193) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) */;
    %195 = %188.0;
    %196 = %189.2;
    %197 = %194.2;
    (%195, %196, %197, %var_9639, %var_9640)
  };
  %198(%var_9655, %var_9656) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(336), float64], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */
}

def @func_9173() -> Tensor[(140), int32] {
  @func_9171() /* ty=Tensor[(140), int32] */
}

def @func_6708(%var_6707: Tensor[(810), float64]) -> (Tensor[(2002), int32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(810), uint8]) {
  %213 = fn (%var_6702: Tensor[(810), float64]) -> (Tensor[(2002), int32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(810), uint8]) {
    %199 = @func_3806() /* ty=(Tensor[(2002), int32],) */;
    %200 = cast(meta[relay.Constant][8] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
    %201 = reshape(%200, newshape=[9, 9, 10]) /* ty=Tensor[(9, 9, 10), float64] */;
    %202 = @func_4800(%201) /* ty=(Tensor[(9, 9, 10), float64], Tensor[(12, 15, 4), float32]) */;
    %203 = @func_3658() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %204 = cast(%var_6702, dtype="uint8") /* ty=Tensor[(810), uint8] */;
    %205 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(810), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %206 = cast(meta[relay.Constant][8] /* ty=Tensor[(810), float64] */, dtype="uint8") /* ty=Tensor[(810), uint8] */;
    %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %208 = %199.0;
    %209 = %202.1;
    %210 = @func_5180() /* ty=Tensor[(12, 15, 4), float32] */;
    %211 = %203.0;
    %212 = bitwise_or(%206, %207) /* ty=Tensor[(810), uint8] */;
    (%208, %209, %210, %211, %212)
  };
  %213(%var_6707) /* ty=(Tensor[(2002), int32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(810), uint8]) */
}

def @func_9478(%var_9460: Tensor[(336), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(360), uint8], Tensor[(14, 2, 12), float32], Tensor[(336), float32], Tensor[(140), int32], Tensor[(2002), int32]) {
  %214 = @func_4248() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %215 = @func_4472() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) */;
  %216 = cast(%var_9460, dtype="float32") /* ty=Tensor[(336), float32] */;
  %217 = reshape(%216, newshape=[14, 2, 12]) /* ty=Tensor[(14, 2, 12), float32] */;
  %218 = @func_370(%217) /* ty=(Tensor[(14, 2, 12), float32],) */;
  %219 = %215.2;
  %220 = cast(%219, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %221 = cast(meta[relay.Constant][9] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %222 = reshape(%220, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %223 = reshape(%221, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %224 = @func_8318(%222, %223) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(360), uint8], Tensor[(140), int32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32]) */;
  %225 = %214.0;
  %226 = %218.0;
  %227 = %224.3;
  (%225, %219, %226, %var_9460, %227, meta[relay.Constant][9] /* ty=Tensor[(2002), int32] */)
}

def @func_7751() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %231 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
    %228 = @func_5054() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 15, 4), float32]) */;
    %229 = %228.0;
    %230 = @func_4647() /* ty=Tensor[(12, 15, 4), float32] */;
    (%229, %230)
  };
  %231() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_3026() -> Tensor[(12, 15, 4), float32] {
  %232 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %232.0
}

def @func_6559() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32]) {
  @func_6557() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32]) */
}

def @func_1537(%var_1536: Tensor[(2, 12, 15), uint8]) -> (Tensor[(2, 12, 15), uint8], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
  %244 = fn (%var_1524: Tensor[(2, 12, 15), uint8]) -> (Tensor[(2, 12, 15), uint8], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
    %233 = cast(%var_1524, dtype="uint8") /* ty=Tensor[(2, 12, 15), uint8] */;
    %234 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(2, 12, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %235 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 12, 15), uint8] */, dtype="uint8") /* ty=Tensor[(2, 12, 15), uint8] */;
    %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %237 = cast(meta[relay.Constant][11] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %238 = cast(meta[relay.Constant][11] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %239 = reshape(%237, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
    %240 = reshape(%238, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
    %241 = @func_581(%239, %240) /* ty=(Tensor[(2, 3, 8), uint32],) */;
    %242 = bitwise_or(%235, %236) /* ty=Tensor[(2, 12, 15), uint8] */;
    %243 = %241.0;
    (%242, %243, meta[relay.Constant][11] /* ty=Tensor[(48), uint32] */)
  };
  %244(%var_1536) /* ty=(Tensor[(2, 12, 15), uint8], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */
}

def @func_9732() -> (Tensor[(12, 15, 4), float32],) {
  %247 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %245 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %246 = %245.0;
    (%246,)
  };
  %247() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_12317() -> Tensor[(12, 15, 4), float32] {
  %248 = fn () -> Tensor[(12, 15, 4), float32] {
    @func_8867() /* ty=Tensor[(12, 15, 4), float32] */
  };
  %248() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_10746() -> Tensor[(12, 15, 4), float32] {
  %250 = fn () -> Tensor[(12, 15, 4), float32] {
    %249 = @func_7447() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %249.0
  };
  %250() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_4473() -> (Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) {
  %257 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) {
    %251 = @func_3431() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %252 = cast(meta[relay.Constant][12] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
    %253 = reshape(%252, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint8] */;
    %254 = @func_1535(%253) /* ty=(Tensor[(2, 12, 15), uint8], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
    %255 = %251.0;
    %256 = %254.0;
    (%255, %256, meta[relay.Constant][12] /* ty=Tensor[(360), uint8] */)
  };
  %257() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) */
}

def @func_8716(%var_8713: Tensor[(8, 3, 9), uint16], %var_8714: Tensor[(8, 3, 9), uint16], %var_8715: Tensor[(336), float32]) -> (Tensor[(8, 3, 9), uint16], Tensor[(12, 15, 4), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) {
  @func_8711(%var_8713, %var_8714, %var_8715) /* ty=(Tensor[(8, 3, 9), uint16], Tensor[(12, 15, 4), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) */
}

def @func_5054() -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 15, 4), float32]) {
  %258 = @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %259 = cast(meta[relay.Constant][13] /* ty=Tensor[(1859), float64] */, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %260 = cast(meta[relay.Constant][13] /* ty=Tensor[(1859), float64] */, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %261 = reshape(%259, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %262 = reshape(%260, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %263 = @func_2465(%261, %262) /* ty=(Tensor[(13, 11, 13), float64],) */;
  %264 = @func_4627() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %265 = %258.0;
  %266 = %263.0;
  %267 = %264.0;
  (%265, %266, meta[relay.Constant][13] /* ty=Tensor[(1859), float64] */, %267)
}

def @func_6557() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32]) {
  %268 = cast(meta[relay.Constant][14] /* ty=Tensor[(39, 3), float32] */, dtype="float32") /* ty=Tensor[(39, 3), float32] */;
  %269 = reshape(%268, newshape=[1, 117]) /* ty=Tensor[(1, 117), float32] */;
  %270 = @func_5502(%269) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 10, 8), float64], Tensor[(1, 117), float32]) */;
  %271 = @func_3517() /* ty=Tensor[(12, 15, 4), float32] */;
  %272 = %270.1;
  (%271, %272, meta[relay.Constant][14] /* ty=Tensor[(39, 3), float32] */)
}

def @func_5142() -> (Tensor[(12, 15, 4), float32],) {
  %273 = @func_3270() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %274 = %273.0;
  (%274,)
}

def @func_5504(%var_5503: Tensor[(1, 117), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 10, 8), float64], Tensor[(1, 117), float32]) {
  %282 = fn (%var_5488: Tensor[(1, 117), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 10, 8), float64], Tensor[(1, 117), float32]) {
    %275 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %276 = cast(%var_5488, dtype="float32") /* ty=Tensor[(1, 117), float32] */;
    %277 = reshape(%276, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), float32] */;
    %278 = @func_737(%277) /* ty=(Tensor[(2, 11, 16), int8], Tensor[(352), int64], Tensor[(480, 2), bool], Tensor[(1, 13, 9), bool], Tensor[(12, 10, 8), float64]) */;
    %279 = %275.0;
    %280 = @func_5445() /* ty=Tensor[(12, 15, 4), float32] */;
    %281 = %278.4;
    (%279, %280, %281, %var_5488)
  };
  %282(%var_5503) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 10, 8), float64], Tensor[(1, 117), float32]) */
}

def @func_8965() -> (Tensor[(14, 2, 12), int32], Tensor[(2002), int32]) {
  %283 = @func_8488() /* ty=(Tensor[(2002), int32],) */;
  %284 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  %285 = %283.0;
  (%284, %285)
}

def @func_10281() -> (Tensor[(12, 16, 10), float32], Tensor[(176), int16]) {
  %293 = fn () -> (Tensor[(12, 16, 10), float32], Tensor[(176), int16]) {
    %286 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 10), float32] */;
    %287 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(12, 16, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %288 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 10), float32] */;
    %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %290 = @func_7886() /* ty=(Tensor[(14, 2, 12), int32], Tensor[(176), int16], Tensor[(2002), int32], Tensor[(176), int16]) */;
    %291 = mod(%288, %289) /* ty=Tensor[(12, 16, 10), float32] */;
    %292 = %290.1;
    (%291, %292)
  };
  %293() /* ty=(Tensor[(12, 16, 10), float32], Tensor[(176), int16]) */
}

def @func_10979(%var_10955: Tensor[(10, 13, 1), int32]) -> (Tensor[(10, 13, 14), int32], Tensor[(12, 15, 4), float32], Tensor[(117), float32], Tensor[(12, 15, 4), int32], Tensor[(48, 1), uint32]) {
  %294 = cast(%var_10955, dtype="int32") /* ty=Tensor[(10, 13, 1), int32] */;
  %295 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 13, 14), int32] */, dtype="int32") /* ty=Tensor[(10, 13, 14), int32] */;
  %296 = cast(meta[relay.Constant][18] /* ty=Tensor[(117), float32] */, dtype="float32") /* ty=Tensor[(117), float32] */;
  %297 = reshape(%296, newshape=[1, 117]) /* ty=Tensor[(1, 117), float32] */;
  %298 = @func_5502(%297) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 10, 8), float64], Tensor[(1, 117), float32]) */;
  %299 = %298.0;
  %300 = cast(%299, dtype="float32") /* ty=Tensor[(12, 15, 4), float32] */;
  %301 = cast(meta[relay.Constant][19] /* ty=Tensor[(48, 1), uint32] */, dtype="uint32") /* ty=Tensor[(48, 1), uint32] */;
  %302 = reshape(%300, newshape=[12, 15, 4]) /* ty=Tensor[(12, 15, 4), float32] */;
  %303 = reshape(%301, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %304 = @func_3958(%302, %303) /* ty=(Tensor[(12, 15, 4), int32], Tensor[(12, 15, 4), float32], Tensor[(48), uint32]) */;
  %305 = subtract(%294, %295) /* ty=Tensor[(10, 13, 14), int32] */;
  %306 = %304.0;
  (%305, %299, meta[relay.Constant][18] /* ty=Tensor[(117), float32] */, %306, meta[relay.Constant][19] /* ty=Tensor[(48, 1), uint32] */)
}

def @func_6933() -> (Tensor[(12, 15, 4), float32],) {
  @func_6931() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_10462() -> Tensor[(2002), int32] {
  @func_9526() /* ty=Tensor[(2002), int32] */
}

def @func_232(%var_169: Tensor[(2, 11, 16), int64], %var_170: Tensor[(2, 11, 16), int64], %var_191: Tensor[(2, 11, 16), int64]) -> Tensor[(2, 11, 16), int8] {
  %307 = cast(%var_170, dtype="int64") /* ty=Tensor[(2, 11, 16), int64] */;
  %308 = shape_of(%var_169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%var_169, dtype="int64") /* ty=Tensor[(2, 11, 16), int64] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %311 = logical_xor(%309, %310) /* ty=Tensor[(2, 11, 16), int64] */;
  %312 = cast(%311, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %313 = acos(%312) /* ty=Tensor[(2, 11, 16), float32] */;
  %314 = cast(%var_191, dtype="bool") /* ty=Tensor[(2, 11, 16), bool] */;
  %315 = shape_of(%var_169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%var_169, dtype="bool") /* ty=Tensor[(2, 11, 16), bool] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %318 = less(%316, %317) /* ty=Tensor[(2, 11, 16), bool] */;
  %319 = cast(%318, dtype="int8") /* ty=Tensor[(2, 11, 16), int8] */;
  %320 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%313, dtype="int8") /* ty=Tensor[(2, 11, 16), int8] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%321, %322) /* ty=Tensor[(2, 11, 16), int8] */
}

def @func_9018() -> Tensor[(12, 15, 4), float32] {
  %324 = fn () -> Tensor[(12, 15, 4), float32] {
    %323 = @func_6410() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %323.0
  };
  %324() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_6520(%var_6518: Tensor[(48), float32]) -> (Tensor[(12, 15, 4), float32], float64, Tensor[(8, ?, 6), int64]) {
  @func_6517(%var_6518) /* ty=(Tensor[(12, 15, 4), float32], float64, Tensor[(8, ?, 6), int64]) */
}

def @func_9408() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %331 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
    %325 = @func_5142() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %326 = @func_6140() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %327 = @func_6140() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %328 = %325.0;
    %329 = %326.0;
    %330 = %327.0;
    (%328, %329, %330)
  };
  %331() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_5980(%var_5978: Tensor[(7, 12, 8), float32]) -> (Tensor[(7, 12, 8), float32], Tensor[(7, 12, 8), float64], Tensor[(2, 12, 15), uint8], Tensor[(12, 15, 4), float32]) {
  @func_5977(%var_5978) /* ty=(Tensor[(7, 12, 8), float32], Tensor[(7, 12, 8), float64], Tensor[(2, 12, 15), uint8], Tensor[(12, 15, 4), float32]) */
}

def @func_2671() -> Tensor[(12, 15, 4), float32] {
  %333 = fn () -> Tensor[(12, 15, 4), float32] {
    %332 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %332.0
  };
  %333() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_6931() -> (Tensor[(12, 15, 4), float32],) {
  %334 = @func_6159() /* ty=Tensor[(12, 15, 4), float32] */;
  (%334,)
}

def @func_737(%var_685: Tensor[(1, 13, 9), float32]) -> (Tensor[(2, 11, 16), int8], Tensor[(352), int64], Tensor[(480, 2), bool], Tensor[(1, 13, 9), bool], Tensor[(12, 10, 8), float64]) {
  %335 = cast(meta[relay.Constant][20] /* ty=Tensor[(352), int64] */, dtype="int64") /* ty=Tensor[(352), int64] */;
  %336 = cast(meta[relay.Constant][20] /* ty=Tensor[(352), int64] */, dtype="int64") /* ty=Tensor[(352), int64] */;
  %337 = cast(meta[relay.Constant][20] /* ty=Tensor[(352), int64] */, dtype="int64") /* ty=Tensor[(352), int64] */;
  %338 = reshape(%335, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %339 = reshape(%336, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %340 = reshape(%337, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
  %341 = cast(9.15369f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %342 = cast(meta[relay.Constant][21] /* ty=Tensor[(480, 2), float64] */, dtype="float64") /* ty=Tensor[(480, 2), float64] */;
  %343 = reshape(%341, newshape=[]) /* ty=float64 */;
  %344 = reshape(%342, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %345 = @func_554(%343, %344) /* ty=(Tensor[(12, 10, 8), float64],) */;
  %346 = %345.0;
  %347 = cast(%346, dtype="bool") /* ty=Tensor[(12, 10, 8), bool] */;
  %348 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(480, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %349 = cast(meta[relay.Constant][21] /* ty=Tensor[(480, 2), float64] */, dtype="bool") /* ty=Tensor[(480, 2), bool] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %351 = cast(%var_685, dtype="float32") /* ty=Tensor[(1, 13, 9), float32] */;
  %352 = acos(%351) /* ty=Tensor[(1, 13, 9), float32] */;
  %353 = cast(%352, dtype="float32") /* ty=Tensor[(1, 13, 9), float32] */;
  %354 = tan(%353) /* ty=Tensor[(1, 13, 9), float32] */;
  %355 = cast(%354, dtype="bool") /* ty=Tensor[(1, 13, 9), bool] */;
  %356 = cast(9.15369f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %357 = cast(9.15369f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %358 = cast(%346, dtype="float64") /* ty=Tensor[(12, 10, 8), float64] */;
  %359 = reshape(%357, newshape=[]) /* ty=float64 */;
  %360 = reshape(%358, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %361 = @func_554(%359, %360) /* ty=(Tensor[(12, 10, 8), float64],) */;
  %362 = @func_232(%338, %339, %340) /* ty=Tensor[(2, 11, 16), int8] */;
  %363 = not_equal(%349, %350) /* ty=Tensor[(480, 2), bool] */;
  %364 = equal(%355, %356) /* ty=Tensor[(1, 13, 9), bool] */;
  %365 = %361.0;
  (%362, meta[relay.Constant][20] /* ty=Tensor[(352), int64] */, %363, %364, %365)
}

def @func_3334(%var_3332: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(16, 5, 13), float64], Tensor[(140), int32], Tensor[(1287), float32], Tensor[(12, 15, 4), float32]) {
  @func_3331(%var_3332) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(16, 5, 13), float64], Tensor[(140), int32], Tensor[(1287), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_7887() -> (Tensor[(14, 2, 12), int32], Tensor[(176), int16], Tensor[(2002), int32], Tensor[(176), int16]) {
  %374 = fn () -> (Tensor[(14, 2, 12), int32], Tensor[(176), int16], Tensor[(2002), int32], Tensor[(176), int16]) {
    %366 = @func_4778() /* ty=(Tensor[(14, 2, 12), int32],) */;
    %367 = cast(meta[relay.Constant][22] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %368 = cast(meta[relay.Constant][23] /* ty=Tensor[(176), int16] */, dtype="int16") /* ty=Tensor[(176), int16] */;
    %369 = reshape(%367, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
    %370 = reshape(%368, newshape=[176]) /* ty=Tensor[(176), int16] */;
    %371 = @func_3498(%369, %370) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(2002), uint64], Tensor[(2002), int32]) */;
    %372 = %366.0;
    %373 = %371.1;
    (%372, %373, meta[relay.Constant][22] /* ty=Tensor[(2002), int32] */, meta[relay.Constant][23] /* ty=Tensor[(176), int16] */)
  };
  %374() /* ty=(Tensor[(14, 2, 12), int32], Tensor[(176), int16], Tensor[(2002), int32], Tensor[(176), int16]) */
}

def @func_12395() -> (Tensor[(12, 15, 4), float32],) {
  %376 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %375 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
    (%375,)
  };
  %376() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_11537(%var_11536: Tensor[(462), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(14, 11, 3), float32], Tensor[(462), float32]) {
  %382 = fn (%var_11531: Tensor[(462), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(14, 11, 3), float32], Tensor[(462), float32]) {
    %377 = cast(%var_11531, dtype="float32") /* ty=Tensor[(462), float32] */;
    %378 = reshape(%377, newshape=[14, 11, 3]) /* ty=Tensor[(14, 11, 3), float32] */;
    %379 = @func_7939(%378) /* ty=(Tensor[(14, 11, 3), float32], Tensor[(14, 11, 3), bool], Tensor[(12, 15, 4), float32]) */;
    %380 = @func_4647() /* ty=Tensor[(12, 15, 4), float32] */;
    %381 = %379.0;
    (%380, %381, %var_11531)
  };
  %382(%var_11536) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(14, 11, 3), float32], Tensor[(462), float32]) */
}

def @func_10689() -> (Tensor[(12, 15, 4), float32],) {
  %383 = @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */;
  %384 = %383.0;
  (%384,)
}

def @func_4853(%var_4851: Tensor[(12, 15, 4), float32]) -> (Tensor[(12, 15, 4), float64], Tensor[(2002), int32], Tensor[(14, 9, 11), float64]) {
  @func_4850(%var_4851) /* ty=(Tensor[(12, 15, 4), float64], Tensor[(2002), int32], Tensor[(14, 9, 11), float64]) */
}

def @func_7609(%var_7608: Tensor[(12, 15, 4), float32]) -> (Tensor[(12, 15, 4), uint16],) {
  %392 = fn (%var_7591: Tensor[(12, 15, 4), float32]) -> (Tensor[(12, 15, 4), uint16],) {
    %385 = @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */;
    %386 = %385.0;
    %387 = cast(%var_7591, dtype="uint16") /* ty=Tensor[(12, 15, 4), uint16] */;
    %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
    %389 = cast(%386, dtype="uint16") /* ty=Tensor[(12, 15, 4), uint16] */;
    %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %391 = right_shift(%389, %390) /* ty=Tensor[(12, 15, 4), uint16] */;
    (%391,)
  };
  %392(%var_7608) /* ty=(Tensor[(12, 15, 4), uint16],) */
}

def @func_6982(%var_6970: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(48), uint32], Tensor[(2002), int32]) {
  %393 = @func_5318() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %394 = cast(%var_6970, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %395 = reshape(%394, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %396 = @func_2608(%395) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
  %397 = %393.0;
  %398 = %396.4;
  (%397, %398, %var_6970)
}

def @func_7863() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  @func_7861() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_10186() -> (Tensor[(12, 15, 4), float32],) {
  @func_10184() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_3270() -> (Tensor[(12, 15, 4), float32],) {
  %399 = @func_2796() /* ty=Tensor[(12, 15, 4), float32] */;
  (%399,)
}

def @func_3331(%var_3313: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(16, 5, 13), float64], Tensor[(140), int32], Tensor[(1287), float32], Tensor[(12, 15, 4), float32]) {
  %400 = cast(%var_3313, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %401 = cast(%var_3313, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %402 = cast(%var_3313, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %403 = reshape(%400, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %404 = reshape(%401, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %405 = reshape(%402, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %406 = cast(meta[relay.Constant][24] /* ty=Tensor[(140), int32] */, dtype="int32") /* ty=Tensor[(140), int32] */;
  %407 = @func_1728(%403, %404, %405) /* ty=Tensor[(13, 11, 14), bool] */;
  %408 = cast(%407, dtype="int32") /* ty=Tensor[(13, 11, 14), int32] */;
  %409 = cast(meta[relay.Constant][25] /* ty=Tensor[(1287), float32] */, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %410 = reshape(%406, newshape=[140]) /* ty=Tensor[(140), int32] */;
  %411 = reshape(%408, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %412 = reshape(%409, newshape=[117, 11]) /* ty=Tensor[(117, 11), float32] */;
  %413 = @func_2768(%410, %411, %412) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 176), int64], Tensor[(2, 88), int16], Tensor[(140), int32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(480, 2), bool], Tensor[(16, 5, 13), float64], Tensor[(117, 11), int8]) */;
  %414 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %415 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %416 = %413.7;
  %417 = %414.0;
  (%415, %407, %var_3313, %416, meta[relay.Constant][24] /* ty=Tensor[(140), int32] */, meta[relay.Constant][25] /* ty=Tensor[(1287), float32] */, %417)
}

def @func_370(%var_365: Tensor[(14, 2, 12), float32]) -> (Tensor[(14, 2, 12), float32],) {
  %418 = cast(%var_365, dtype="float32") /* ty=Tensor[(14, 2, 12), float32] */;
  %419 = sin(%418) /* ty=Tensor[(14, 2, 12), float32] */;
  (%419,)
}

def @func_8868() -> Tensor[(12, 15, 4), float32] {
  %421 = fn () -> Tensor[(12, 15, 4), float32] {
    %420 = @func_6557() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32]) */;
    %420.1
  };
  %421() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_7378() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %426 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
    %422 = @func_4627() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %423 = @func_3694() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %424 = %422.0;
    %425 = %423.0;
    (%424, %425)
  };
  %426() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_10082() -> Tensor[(12, 15, 4), float32] {
  %428 = fn () -> Tensor[(12, 15, 4), float32] {
    %427 = @func_9731() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %427.0
  };
  %428() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_12165() -> (Tensor[(12, 15, 4), float32], Tensor[(5, 28), int32], Tensor[(176), int16], Tensor[(14, 2, 12), int32], Tensor[(2002), int32]) {
  %439 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(5, 28), int32], Tensor[(176), int16], Tensor[(14, 2, 12), int32], Tensor[(2002), int32]) {
    %429 = @func_8101() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %430 = cast(meta[relay.Constant][26] /* ty=Tensor[(176), int16] */, dtype="int16") /* ty=Tensor[(176), int16] */;
    %431 = reshape(%430, newshape=[176]) /* ty=Tensor[(176), int16] */;
    %432 = @func_1491(%431) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) */;
    %433 = @func_8448() /* ty=(Tensor[(14, 2, 12), int32],) */;
    %434 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
    %435 = %429.0;
    %436 = %432.3;
    %437 = %433.0;
    %438 = %434.0;
    (%435, %436, meta[relay.Constant][26] /* ty=Tensor[(176), int16] */, %437, %438)
  };
  %439() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(5, 28), int32], Tensor[(176), int16], Tensor[(14, 2, 12), int32], Tensor[(2002), int32]) */
}

def @func_5182() -> Tensor[(12, 15, 4), float32] {
  @func_5180() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_584(%var_582: Tensor[(2, 3, 8), uint32], %var_583: Tensor[(2, 3, 8), uint32]) -> (Tensor[(2, 3, 8), uint32],) {
  %445 = fn (%var_576: Tensor[(2, 3, 8), uint32], %var_577: Tensor[(2, 3, 8), uint32]) -> (Tensor[(2, 3, 8), uint32],) {
    %440 = cast(%var_577, dtype="uint32") /* ty=Tensor[(2, 3, 8), uint32] */;
    %441 = shape_of(%var_576, dtype="int32") /* ty=Tensor[(3), int32] */;
    %442 = cast(%var_576, dtype="uint32") /* ty=Tensor[(2, 3, 8), uint32] */;
    %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %444 = subtract(%442, %443) /* ty=Tensor[(2, 3, 8), uint32] */;
    (%444,)
  };
  %445(%var_582, %var_583) /* ty=(Tensor[(2, 3, 8), uint32],) */
}

def @func_9236() -> (Tensor[(12, 15, 4), float32],) {
  @func_9234() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_12303(%var_12301: Tensor[(13, 15, 3), float64]) -> Tensor[(13, 15, 3), float64] {
  @func_12300(%var_12301) /* ty=Tensor[(13, 15, 3), float64] */
}

def @func_10372() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(9, 9, 10), bool]) {
  @func_10370() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(9, 9, 10), bool]) */
}

def @func_5533(%var_5531: Tensor[(8, 1, 6), float32], %var_5532: float64) -> (Tensor[(8, 1, 6), float32], Tensor[(12, 10, 8), float64], float64, Tensor[(10, 96), float64]) {
  %454 = fn (%var_5513: Tensor[(8, 1, 6), float32], %var_5525: float64) -> (Tensor[(8, 1, 6), float32], Tensor[(12, 10, 8), float64], float64, Tensor[(10, 96), float64]) {
    %446 = cast(%var_5513, dtype="float32") /* ty=Tensor[(8, 1, 6), float32] */;
    %447 = cast(%var_5525, dtype="float64") /* ty=float64 */;
    %448 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
    %449 = reshape(%447, newshape=[]) /* ty=float64 */;
    %450 = reshape(%448, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
    %451 = @func_554(%449, %450) /* ty=(Tensor[(12, 10, 8), float64],) */;
    %452 = exp(%446) /* ty=Tensor[(8, 1, 6), float32] */;
    %453 = %451.0;
    (%452, %453, %var_5525, meta[relay.Constant][27] /* ty=Tensor[(10, 96), float64] */)
  };
  %454(%var_5531, %var_5532) /* ty=(Tensor[(8, 1, 6), float32], Tensor[(12, 10, 8), float64], float64, Tensor[(10, 96), float64]) */
}

def @func_7114(%var_7111: Tensor[(5, 3, 4), float64], %var_7112: Tensor[(5, 3, 4), float64], %var_7113: Tensor[(18, 4), float32]) -> (Tensor[(5, 3, 4), float64], Tensor[(5, 3, 4), float64], Tensor[(9, 8), float32], Tensor[(18, 4), float32]) {
  %467 = fn (%var_7076: Tensor[(5, 3, 4), float64], %var_7077: Tensor[(5, 3, 4), float64], %var_7108: Tensor[(18, 4), float32]) -> (Tensor[(5, 3, 4), float64], Tensor[(5, 3, 4), float64], Tensor[(9, 8), float32], Tensor[(18, 4), float32]) {
    %455 = cast(%var_7077, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
    %456 = shape_of(%var_7076, dtype="int32") /* ty=Tensor[(3), int32] */;
    %457 = cast(%var_7076, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
    %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %459 = cast(%var_7077, dtype="float32") /* ty=Tensor[(5, 3, 4), float32] */;
    %460 = log(%459) /* ty=Tensor[(5, 3, 4), float32] */;
    %461 = cast(%460, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
    %462 = cast(%var_7108, dtype="float32") /* ty=Tensor[(18, 4), float32] */;
    %463 = reshape(%462, newshape=[9, 8]) /* ty=Tensor[(9, 8), float32] */;
    %464 = minimum(%457, %458) /* ty=Tensor[(5, 3, 4), float64] */;
    %465 = acos(%461) /* ty=Tensor[(5, 3, 4), float64] */;
    %466 = @func_1668(%463) /* ty=Tensor[(9, 8), float32] */;
    (%464, %465, %466, %var_7108)
  };
  %467(%var_7111, %var_7112, %var_7113) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(5, 3, 4), float64], Tensor[(9, 8), float32], Tensor[(18, 4), float32]) */
}

def @func_3432() -> (Tensor[(12, 15, 4), float32],) {
  %469 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %468 = @func_2839() /* ty=Tensor[(12, 15, 4), float32] */;
    (%468,)
  };
  %469() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_2772(%var_2769: Tensor[(140), int32], %var_2770: Tensor[(2002), int32], %var_2771: Tensor[(117, 11), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2, 176), int64], Tensor[(2, 88), int16], Tensor[(140), int32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(480, 2), bool], Tensor[(16, 5, 13), float64], Tensor[(117, 11), int8]) {
  %496 = fn (%var_2754: Tensor[(140), int32], %var_2757: Tensor[(2002), int32], %var_2764: Tensor[(117, 11), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2, 176), int64], Tensor[(2, 88), int16], Tensor[(140), int32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(480, 2), bool], Tensor[(16, 5, 13), float64], Tensor[(117, 11), int8]) {
    %470 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %471 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 88), int16] */, dtype="int16") /* ty=Tensor[(2, 88), int16] */;
    %472 = cast(%var_2754, dtype="int32") /* ty=Tensor[(140), int32] */;
    %473 = reshape(%471, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int16] */;
    %474 = reshape(%472, newshape=[140]) /* ty=Tensor[(140), int32] */;
    %475 = @func_630(%473, %474) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) */;
    %476 = cast(%var_2757, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %477 = cast(%var_2757, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %478 = cast(%var_2757, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %479 = reshape(%476, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
    %480 = reshape(%477, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
    %481 = reshape(%478, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
    %482 = cast(meta[relay.Constant][29] /* ty=Tensor[(117, 1), float32] */, dtype="float32") /* ty=Tensor[(117, 1), float32] */;
    %483 = reshape(%482, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), float32] */;
    %484 = @func_737(%483) /* ty=(Tensor[(2, 11, 16), int8], Tensor[(352), int64], Tensor[(480, 2), bool], Tensor[(1, 13, 9), bool], Tensor[(12, 10, 8), float64]) */;
    %485 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 88), int16] */, dtype="int16") /* ty=Tensor[(2, 88), int16] */;
    %486 = reshape(%485, newshape=[176]) /* ty=Tensor[(176), int16] */;
    %487 = @func_1491(%486) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) */;
    %488 = cast(meta[relay.Constant][29] /* ty=Tensor[(117, 1), float32] */, dtype="int8") /* ty=Tensor[(117, 1), int8] */;
    %489 = cast(%var_2764, dtype="int8") /* ty=Tensor[(117, 11), int8] */;
    %490 = %470.0;
    %491 = %475.1;
    %492 = @func_1728(%479, %480, %481) /* ty=Tensor[(13, 11, 14), bool] */;
    %493 = %484.2;
    %494 = %487.0;
    %495 = bitwise_or(%488, %489) /* ty=Tensor[(117, 11), int8] */;
    (%490, %491, meta[relay.Constant][28] /* ty=Tensor[(2, 88), int16] */, %var_2754, %492, %var_2757, %493, %494, %495)
  };
  %496(%var_2769, %var_2770, %var_2771) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 176), int64], Tensor[(2, 88), int16], Tensor[(140), int32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(480, 2), bool], Tensor[(16, 5, 13), float64], Tensor[(117, 11), int8]) */
}

def @func_10766(%var_10764: Tensor[(9, 7, 12), int32], %var_10765: Tensor[(9, 7, 12), int32]) -> (Tensor[(9, 7, 12), int32], Tensor[(9, 7, 12), float64]) {
  %504 = fn (%var_10751: Tensor[(9, 7, 12), int32], %var_10752: Tensor[(9, 7, 12), int32]) -> (Tensor[(9, 7, 12), int32], Tensor[(9, 7, 12), float64]) {
    %497 = cast(%var_10752, dtype="int32") /* ty=Tensor[(9, 7, 12), int32] */;
    %498 = shape_of(%var_10751, dtype="int32") /* ty=Tensor[(3), int32] */;
    %499 = cast(%var_10751, dtype="int32") /* ty=Tensor[(9, 7, 12), int32] */;
    %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %501 = cast(%var_10751, dtype="float64") /* ty=Tensor[(9, 7, 12), float64] */;
    %502 = bitwise_and(%499, %500) /* ty=Tensor[(9, 7, 12), int32] */;
    %503 = cos(%501) /* ty=Tensor[(9, 7, 12), float64] */;
    (%502, %503)
  };
  %504(%var_10764, %var_10765) /* ty=(Tensor[(9, 7, 12), int32], Tensor[(9, 7, 12), float64]) */
}

def @func_1733(%var_1730: Tensor[(13, 11, 14), int32], %var_1731: Tensor[(13, 11, 14), int32], %var_1732: Tensor[(13, 11, 14), int32]) -> Tensor[(13, 11, 14), bool] {
  @func_1728(%var_1730, %var_1731, %var_1732) /* ty=Tensor[(13, 11, 14), bool] */
}

def @func_11754(%var_11752: Tensor[(6, 1, 5), float32], %var_11753: Tensor[(2002), int32]) -> (Tensor[(6, 1, 5), float32], Tensor[(2002), bool], Tensor[(2002), int32], Tensor[(9, 8), float32], Tensor[(12, 15, 4), float32]) {
  @func_11750(%var_11752, %var_11753) /* ty=(Tensor[(6, 1, 5), float32], Tensor[(2002), bool], Tensor[(2002), int32], Tensor[(9, 8), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_10184() -> (Tensor[(12, 15, 4), float32],) {
  %505 = @func_9052() /* ty=Tensor[(12, 15, 4), float32] */;
  (%505,)
}

def @func_373(%var_371: Tensor[(14, 2, 12), float32]) -> (Tensor[(14, 2, 12), float32],) {
  @func_370(%var_371) /* ty=(Tensor[(14, 2, 12), float32],) */
}

def @func_5904(%var_5895: Tensor[(14, 2, 12), float64]) -> (Tensor[(12, 15, 4), float32], Tensor[(2002), float32], Tensor[(14, 2, 12), bool]) {
  %506 = @func_4887() /* ty=(Tensor[(2002), float32],) */;
  %507 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(14, 2, 12), float64] */;
  %509 = log(%508) /* ty=Tensor[(14, 2, 12), float64] */;
  %510 = cast(%var_5895, dtype="bool") /* ty=Tensor[(14, 2, 12), bool] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%509, dtype="bool") /* ty=Tensor[(14, 2, 12), bool] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %514 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
  %515 = %506.0;
  %516 = greater_equal(%512, %513) /* ty=Tensor[(14, 2, 12), bool] */;
  (%514, %515, %516)
}

def @func_3610(%var_3607: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
  %517 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %518 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %519 = %518.0;
  %520 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 4), float32] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%519, dtype="float32") /* ty=Tensor[(12, 15, 4), float32] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %524 = cast(%var_3607, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %525 = cast(%var_3607, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %526 = reshape(%524, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %527 = reshape(%525, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %528 = @func_581(%526, %527) /* ty=(Tensor[(2, 3, 8), uint32],) */;
  %529 = %517.0;
  %530 = subtract(%522, %523) /* ty=Tensor[(12, 15, 4), float32] */;
  %531 = %528.0;
  (%529, %530, %531, %var_3607)
}

def @func_6875(%var_6873: Tensor[(12, 11, 12), uint16], %var_6874: Tensor[(1859), float64]) -> (Tensor[(12, 11, 12), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 10, 8), float64], Tensor[(960), float64], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %555 = fn (%var_6772: Tensor[(12, 11, 12), uint16], %var_6815: Tensor[(1859), float64]) -> (Tensor[(12, 11, 12), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 10, 8), float64], Tensor[(960), float64], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
    %532 = cast(meta[relay.Constant][31] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %533 = cast(%var_6772, dtype="uint16") /* ty=Tensor[(12, 11, 12), uint16] */;
    %534 = @func_4424() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %535 = cast(%var_6815, dtype="float64") /* ty=Tensor[(1859), float64] */;
    %536 = cast(%var_6815, dtype="float64") /* ty=Tensor[(1859), float64] */;
    %537 = reshape(%535, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
    %538 = reshape(%536, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
    %539 = @func_2465(%537, %538) /* ty=(Tensor[(13, 11, 13), float64],) */;
    %540 = cast(meta[relay.Constant][31] /* ty=uint16 */, dtype="float64") /* ty=float64 */;
    %541 = cast(meta[relay.Constant][32] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %542 = reshape(%540, newshape=[]) /* ty=float64 */;
    %543 = reshape(%541, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
    %544 = @func_554(%542, %543) /* ty=(Tensor[(12, 10, 8), float64],) */;
    %545 = @func_6140() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %546 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
    %547 = bitwise_and(%532, %533) /* ty=Tensor[(12, 11, 12), uint16] */;
    %548 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
    %549 = %534.0;
    %550 = %539.0;
    %551 = %544.0;
    %552 = %545.0;
    %553 = %546.1;
    %554 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
    (%547, %548, %549, %550, %var_6815, %551, meta[relay.Constant][32] /* ty=Tensor[(960), float64] */, %552, %553, %554)
  };
  %555(%var_6873, %var_6874) /* ty=(Tensor[(12, 11, 12), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 10, 8), float64], Tensor[(960), float64], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_6267(%var_6266: Tensor[(16, 1, 7), float32]) -> Tensor[(16, 1, 7), float32] {
  %557 = fn (%var_6250: Tensor[(16, 1, 7), float32]) -> Tensor[(16, 1, 7), float32] {
    %556 = cast(%var_6250, dtype="float32") /* ty=Tensor[(16, 1, 7), float32] */;
    sin(%556) /* ty=Tensor[(16, 1, 7), float32] */
  };
  %557(%var_6266) /* ty=Tensor[(16, 1, 7), float32] */
}

def @func_4692() -> (Tensor[(12, 15, 4), float32],) {
  @func_4690() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_4516() -> Tensor[(2, 12, 15), uint8] {
  %559 = fn () -> Tensor[(2, 12, 15), uint8] {
    %558 = @func_4472() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) */;
    %558.1
  };
  %559() /* ty=Tensor[(2, 12, 15), uint8] */
}

def @func_8892() -> (Tensor[(140), int32],) {
  %560 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
  %561 = %560.0;
  (%561,)
}

def @func_2469(%var_2467: Tensor[(13, 11, 13), float64], %var_2468: Tensor[(13, 11, 13), float64]) -> (Tensor[(13, 11, 13), float64],) {
  @func_2465(%var_2467, %var_2468) /* ty=(Tensor[(13, 11, 13), float64],) */
}

def @func_3876() -> Tensor[(12, 15, 4), float32] {
  %562 = fn () -> Tensor[(12, 15, 4), float32] {
    @func_2553() /* ty=Tensor[(12, 15, 4), float32] */
  };
  %562() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_4126(%var_4117: Tensor[(924), uint16]) -> (Tensor[(12, 15, 4), float32], Tensor[(2002), uint16], Tensor[(14, 2, 12), int32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16]) {
  %563 = cast(meta[relay.Constant][33] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %564 = cast(meta[relay.Constant][33] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %565 = cast(meta[relay.Constant][33] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %566 = reshape(%563, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %567 = reshape(%564, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %568 = reshape(%565, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
  %569 = @func_1728(%566, %567, %568) /* ty=Tensor[(13, 11, 14), bool] */;
  %570 = cast(%569, dtype="uint16") /* ty=Tensor[(13, 11, 14), uint16] */;
  %571 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %572 = cast(meta[relay.Constant][33] /* ty=Tensor[(2002), int32] */, dtype="uint16") /* ty=Tensor[(2002), uint16] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %574 = cast(%var_4117, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %575 = cast(%var_4117, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %576 = reshape(%574, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %577 = reshape(%575, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %578 = @func_1893(%576, %577) /* ty=(Tensor[(14, 6, 11), uint16],) */;
  %579 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
  %580 = bitwise_xor(%572, %573) /* ty=Tensor[(2002), uint16] */;
  %581 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  %582 = %578.0;
  (%579, %580, %581, %582, %var_4117)
}

def @func_5086() -> Tensor[(12, 15, 4), float32] {
  %583 = @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %583.0
}

def @func_4802(%var_4801: Tensor[(9, 9, 10), float64]) -> (Tensor[(9, 9, 10), float64], Tensor[(12, 15, 4), float32]) {
  %591 = fn (%var_4784: Tensor[(9, 9, 10), float64]) -> (Tensor[(9, 9, 10), float64], Tensor[(12, 15, 4), float32]) {
    %584 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 9, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 10), float64] */;
    %585 = shape_of(%var_4784, dtype="int32") /* ty=Tensor[(3), int32] */;
    %586 = cast(%var_4784, dtype="float64") /* ty=Tensor[(9, 9, 10), float64] */;
    %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %588 = @func_4424() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %589 = floor_divide(%586, %587) /* ty=Tensor[(9, 9, 10), float64] */;
    %590 = %588.0;
    (%589, %590)
  };
  %591(%var_4801) /* ty=(Tensor[(9, 9, 10), float64], Tensor[(12, 15, 4), float32]) */
}

def @func_10026(%var_10024: Tensor[(972), float64]) -> (Tensor[(140), int32], Tensor[(336), float64], Tensor[(12, 15, 4), float32], Tensor[(972), float64], Tensor[(2002), int32]) {
  @func_10023(%var_10024) /* ty=(Tensor[(140), int32], Tensor[(336), float64], Tensor[(12, 15, 4), float32], Tensor[(972), float64], Tensor[(2002), int32]) */
}

def @func_11040() -> Tensor[(12, 15, 4), float32] {
  %593 = fn () -> Tensor[(12, 15, 4), float32] {
    %592 = @func_9731() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %592.0
  };
  %593() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_9707(%var_9688: Tensor[(216), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(9, 2, 12), float32], Tensor[(216), float32], Tensor[(12, 15, 4), float32]) {
  %594 = cast(%var_9688, dtype="float32") /* ty=Tensor[(216), float32] */;
  %595 = reshape(%594, newshape=[9, 2, 12]) /* ty=Tensor[(9, 2, 12), float32] */;
  %596 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %597 = @func_3054(%595) /* ty=Tensor[(9, 2, 12), float32] */;
  %598 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
  (%596, %597, %var_9688, %598)
}

def @func_10370() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(9, 9, 10), bool]) {
  %599 = cast(meta[relay.Constant][35] /* ty=Tensor[(810, 1), float64] */, dtype="float64") /* ty=Tensor[(810, 1), float64] */;
  %600 = reshape(%599, newshape=[9, 9, 10]) /* ty=Tensor[(9, 9, 10), float64] */;
  %601 = @func_4800(%600) /* ty=(Tensor[(9, 9, 10), float64], Tensor[(12, 15, 4), float32]) */;
  %602 = %601.0;
  %603 = cast(%602, dtype="float32") /* ty=Tensor[(9, 9, 10), float32] */;
  %604 = tan(%603) /* ty=Tensor[(9, 9, 10), float32] */;
  %605 = cast(meta[relay.Constant][35] /* ty=Tensor[(810, 1), float64] */, dtype="bool") /* ty=Tensor[(810, 1), bool] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%604, dtype="bool") /* ty=Tensor[(9, 9, 10), bool] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %609 = @func_2796() /* ty=Tensor[(12, 15, 4), float32] */;
  %610 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %611 = greater_equal(%607, %608) /* ty=Tensor[(9, 9, 10), bool] */;
  (%609, %610, %611)
}

def @func_9883() -> (Tensor[(140), int32], Tensor[(14, 9, 11), float64], Tensor[(720), float32]) {
  %618 = fn () -> (Tensor[(140), int32], Tensor[(14, 9, 11), float64], Tensor[(720), float32]) {
    %612 = @func_8892() /* ty=(Tensor[(140), int32],) */;
    %613 = cast(meta[relay.Constant][36] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %614 = reshape(%613, newshape=[12, 15, 4]) /* ty=Tensor[(12, 15, 4), float32] */;
    %615 = @func_4850(%614) /* ty=(Tensor[(12, 15, 4), float64], Tensor[(2002), int32], Tensor[(14, 9, 11), float64]) */;
    %616 = %612.0;
    %617 = %615.2;
    (%616, %617, meta[relay.Constant][36] /* ty=Tensor[(720), float32] */)
  };
  %618() /* ty=(Tensor[(140), int32], Tensor[(14, 9, 11), float64], Tensor[(720), float32]) */
}

def @func_7996() -> (Tensor[(12, 15, 4), float32],) {
  %619 = @func_6140() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %620 = %619.0;
  (%620,)
}

def @func_10425() -> Tensor[(9, 8), float32] {
  @func_10423() /* ty=Tensor[(9, 8), float32] */
}

def @func_3613(%var_3611: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
  @func_3610(%var_3611) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */
}

def @func_11191() -> (Tensor[(12, 15, 4), float32], Tensor[(360), uint8]) {
  %621 = @func_6479() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %622 = @func_4472() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) */;
  %623 = %621.0;
  %624 = %622.2;
  (%623, %624)
}

def @func_7568(%var_7567: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(48), uint32]) {
  %631 = fn (%var_7557: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(48), uint32]) {
    %625 = @func_4690() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %626 = cast(%var_7557, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %627 = reshape(%626, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %628 = @func_3610(%627) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
    %629 = %625.0;
    %630 = %628.0;
    (%629, %630, %var_7557)
  };
  %631(%var_7567) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(48), uint32]) */
}

def @func_10982(%var_10980: Tensor[(10, 13, 1), int32]) -> (Tensor[(10, 13, 14), int32], Tensor[(12, 15, 4), float32], Tensor[(117), float32], Tensor[(12, 15, 4), int32], Tensor[(48, 1), uint32]) {
  @func_10979(%var_10980) /* ty=(Tensor[(10, 13, 14), int32], Tensor[(12, 15, 4), float32], Tensor[(117), float32], Tensor[(12, 15, 4), int32], Tensor[(48, 1), uint32]) */
}

def @func_557(%var_555: float64, %var_556: Tensor[(12, 10, 8), float64]) -> (Tensor[(12, 10, 8), float64],) {
  %635 = fn (%var_548: float64, %var_549: Tensor[(12, 10, 8), float64]) -> (Tensor[(12, 10, 8), float64],) {
    %632 = cast(%var_548, dtype="float64") /* ty=float64 */;
    %633 = cast(%var_549, dtype="float64") /* ty=Tensor[(12, 10, 8), float64] */;
    %634 = mod(%632, %633) /* ty=Tensor[(12, 10, 8), float64] */;
    (%634,)
  };
  %635(%var_555, %var_556) /* ty=(Tensor[(12, 10, 8), float64],) */
}

def @func_5724() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(924), uint16], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %636 = cast(meta[relay.Constant][37] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %637 = cast(meta[relay.Constant][37] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %638 = reshape(%636, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %639 = reshape(%637, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %640 = @func_1893(%638, %639) /* ty=(Tensor[(14, 6, 11), uint16],) */;
  %641 = @func_5228() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %642 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %643 = @func_5180() /* ty=Tensor[(12, 15, 4), float32] */;
  %644 = %640.0;
  %645 = @func_2746() /* ty=Tensor[(12, 15, 4), float32] */;
  %646 = @func_3517() /* ty=Tensor[(12, 15, 4), float32] */;
  %647 = %641.0;
  (%642, %643, %644, meta[relay.Constant][37] /* ty=Tensor[(924), uint16] */, %645, %646, %647)
}

def @func_10677() -> (Tensor[(2002), int32],) {
  %650 = fn () -> (Tensor[(2002), int32],) {
    %648 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
    %649 = %648.0;
    (%649,)
  };
  %650() /* ty=(Tensor[(2002), int32],) */
}

def @func_8188(%var_8170: Tensor[(12, 6, 5), int64]) -> (Tensor[(12, 6, 5), int64],) {
  %651 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 6, 5), int64] */, dtype="int64") /* ty=Tensor[(12, 6, 5), int64] */;
  %652 = shape_of(%var_8170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%var_8170, dtype="int64") /* ty=Tensor[(12, 6, 5), int64] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %655 = logical_xor(%653, %654) /* ty=Tensor[(12, 6, 5), int64] */;
  (%655,)
}

def @func_7904(%var_7902: Tensor[(117), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32], Tensor[(117), float32]) {
  @func_7901(%var_7902) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32], Tensor[(117), float32]) */
}

def @func_10464() -> Tensor[(2002), int32] {
  @func_10462() /* ty=Tensor[(2002), int32] */
}

def @func_4745() -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32], Tensor[(14, 9, 11), float64]) {
  @func_4743() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32], Tensor[(14, 9, 11), float64]) */
}

def @func_2955() -> (Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) {
  @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */
}

def @func_10172() -> (Tensor[(2002), int8],) {
  %665 = fn () -> (Tensor[(2002), int8],) {
    %656 = @func_6632() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(336), float64], Tensor[(2002), float64]) */;
    %657 = %656.3;
    %658 = cast(%657, dtype="float64") /* ty=Tensor[(2002), float64] */;
    %659 = tan(%658) /* ty=Tensor[(2002), float64] */;
    %660 = cast(%659, dtype="int8") /* ty=Tensor[(2002), int8] */;
    %661 = shape_of(%657, dtype="int32") /* ty=Tensor[(1), int32] */;
    %662 = cast(%657, dtype="int8") /* ty=Tensor[(2002), int8] */;
    %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?), int8] */;
    %664 = bitwise_and(%662, %663) /* ty=Tensor[(2002), int8] */;
    (%664,)
  };
  %665() /* ty=(Tensor[(2002), int8],) */
}

def @func_2747() -> Tensor[(12, 15, 4), float32] {
  %667 = fn () -> Tensor[(12, 15, 4), float32] {
    %666 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
    %666.0
  };
  %667() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_8987(%var_8985: Tensor[(8, 12, 10), uint32], %var_8986: Tensor[(8, 12, 10), uint32]) -> (Tensor[(8, 12, 10), uint32], Tensor[(12, 15, 4), float32]) {
  %674 = fn (%var_8971: Tensor[(8, 12, 10), uint32], %var_8972: Tensor[(8, 12, 10), uint32]) -> (Tensor[(8, 12, 10), uint32], Tensor[(12, 15, 4), float32]) {
    %668 = cast(%var_8972, dtype="uint32") /* ty=Tensor[(8, 12, 10), uint32] */;
    %669 = shape_of(%var_8971, dtype="int32") /* ty=Tensor[(3), int32] */;
    %670 = cast(%var_8971, dtype="uint32") /* ty=Tensor[(8, 12, 10), uint32] */;
    %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %672 = left_shift(%670, %671) /* ty=Tensor[(8, 12, 10), uint32] */;
    %673 = @func_6159() /* ty=Tensor[(12, 15, 4), float32] */;
    (%672, %673)
  };
  %674(%var_8985, %var_8986) /* ty=(Tensor[(8, 12, 10), uint32], Tensor[(12, 15, 4), float32]) */
}

def @func_914(%var_909: Tensor[(2, 2, 6), bool], %var_910: Tensor[(2, 2, 6), bool], %var_911: Tensor[(2, 2, 6), bool], %var_912: float64, %var_913: Tensor[(960), float64]) -> (Tensor[(2, 2, 6), bool], Tensor[(2, 2, 6), float64], Tensor[(12, 10, 8), float64], float64, Tensor[(960), float64], Tensor[(2, 2, 6), float64]) {
  @func_907(%var_909, %var_910, %var_911, %var_912, %var_913) /* ty=(Tensor[(2, 2, 6), bool], Tensor[(2, 2, 6), float64], Tensor[(12, 10, 8), float64], float64, Tensor[(960), float64], Tensor[(2, 2, 6), float64]) */
}

def @func_11634() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %678 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
    %675 = @func_10689() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %676 = %675.0;
    %677 = @func_11039() /* ty=Tensor[(12, 15, 4), float32] */;
    (%676, %677)
  };
  %678() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_10583(%var_10581: Tensor[(3, 3, 11), uint64], %var_10582: Tensor[(3, 3, 11), uint64]) -> Tensor[(3, 3, 11), float32] {
  @func_10579(%var_10581, %var_10582) /* ty=Tensor[(3, 3, 11), float32] */
}

def @func_4550() -> Tensor[(12, 15, 4), float32] {
  %679 = fn () -> Tensor[(12, 15, 4), float32] {
    @func_2670() /* ty=Tensor[(12, 15, 4), float32] */
  };
  %679() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_6985(%var_6983: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(48), uint32], Tensor[(2002), int32]) {
  @func_6982(%var_6983) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(48), uint32], Tensor[(2002), int32]) */
}

def @func_9615(%var_9614: Tensor[(16, 5, 13), float64]) -> (Tensor[(16, 5, 13), bool],) {
  %692 = fn (%var_9604: Tensor[(16, 5, 13), float64]) -> (Tensor[(16, 5, 13), bool],) {
    %680 = @func_7042() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(16, 5, 13), float64], Tensor[(2, 88), int16]) */;
    %681 = %680.1;
    %682 = cast(%var_9604, dtype="int32") /* ty=Tensor[(16, 5, 13), int32] */;
    %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
    %684 = cast(%681, dtype="int32") /* ty=Tensor[(16, 5, 13), int32] */;
    %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %686 = bitwise_and(%684, %685) /* ty=Tensor[(16, 5, 13), int32] */;
    %687 = cast(%686, dtype="bool") /* ty=Tensor[(16, 5, 13), bool] */;
    %688 = shape_of(%var_9604, dtype="int32") /* ty=Tensor[(3), int32] */;
    %689 = cast(%var_9604, dtype="bool") /* ty=Tensor[(16, 5, 13), bool] */;
    %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %691 = equal(%689, %690) /* ty=Tensor[(16, 5, 13), bool] */;
    (%691,)
  };
  %692(%var_9614) /* ty=(Tensor[(16, 5, 13), bool],) */
}

def @func_5907(%var_5905: Tensor[(14, 2, 12), float64]) -> (Tensor[(12, 15, 4), float32], Tensor[(2002), float32], Tensor[(14, 2, 12), bool]) {
  @func_5904(%var_5905) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), float32], Tensor[(14, 2, 12), bool]) */
}

def @func_4426() -> (Tensor[(12, 15, 4), float32],) {
  @func_4424() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_5124(%var_5122: Tensor[(9, 9, 2), uint16], %var_5123: Tensor[(36, 10), uint8]) -> (Tensor[(9, 9, 2), uint16], Tensor[(2, 12, 15), uint8], Tensor[(36, 10), uint8], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %702 = fn (%var_5092: Tensor[(9, 9, 2), uint16], %var_5098: Tensor[(36, 10), uint8]) -> (Tensor[(9, 9, 2), uint16], Tensor[(2, 12, 15), uint8], Tensor[(36, 10), uint8], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
    %693 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 1, 2), uint16] */, dtype="uint16") /* ty=Tensor[(9, 1, 2), uint16] */;
    %694 = cast(%var_5092, dtype="uint16") /* ty=Tensor[(9, 9, 2), uint16] */;
    %695 = cast(%var_5098, dtype="uint8") /* ty=Tensor[(36, 10), uint8] */;
    %696 = reshape(%695, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint8] */;
    %697 = @func_1535(%696) /* ty=(Tensor[(2, 12, 15), uint8], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
    %698 = logical_xor(%693, %694) /* ty=Tensor[(9, 9, 2), uint16] */;
    %699 = %697.0;
    %700 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
    %701 = @func_2670() /* ty=Tensor[(12, 15, 4), float32] */;
    (%698, %699, %var_5098, %700, %701)
  };
  %702(%var_5122, %var_5123) /* ty=(Tensor[(9, 9, 2), uint16], Tensor[(2, 12, 15), uint8], Tensor[(36, 10), uint8], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_7448() -> (Tensor[(12, 15, 4), float32],) {
  %704 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %703 = @func_2746() /* ty=Tensor[(12, 15, 4), float32] */;
    (%703,)
  };
  %704() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_10994() -> Tensor[(1859), uint16] {
  @func_10992() /* ty=Tensor[(1859), uint16] */
}

def @func_7998() -> (Tensor[(12, 15, 4), float32],) {
  @func_7996() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_11886(%var_11880: Tensor[(8, 2, 10), float64]) -> Tensor[(8, 2, 10), float64] {
  %705 = cast(%var_11880, dtype="float64") /* ty=Tensor[(8, 2, 10), float64] */;
  sinh(%705) /* ty=Tensor[(8, 2, 10), float64] */
}

def @func_5088() -> Tensor[(12, 15, 4), float32] {
  @func_5086() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_2503() -> (Tensor[(12, 15, 4), float32],) {
  %708 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %706 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 4), float32] */;
    %707 = asinh(%706) /* ty=Tensor[(12, 15, 4), float32] */;
    (%707,)
  };
  %708() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_5008(%var_5006: Tensor[(140), int32], %var_5007: Tensor[(1287), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(140), int32], Tensor[(2002, 1), int32], Tensor[(1287), float32]) {
  %719 = fn (%var_4997: Tensor[(140), int32], %var_4999: Tensor[(1287), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(140), int32], Tensor[(2002, 1), int32], Tensor[(1287), float32]) {
    %709 = @func_4248() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %710 = cast(%var_4997, dtype="int32") /* ty=Tensor[(140), int32] */;
    %711 = cast(meta[relay.Constant][41] /* ty=Tensor[(2002, 1), int32] */, dtype="int32") /* ty=Tensor[(2002, 1), int32] */;
    %712 = cast(%var_4999, dtype="float32") /* ty=Tensor[(1287), float32] */;
    %713 = reshape(%710, newshape=[140]) /* ty=Tensor[(140), int32] */;
    %714 = reshape(%711, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
    %715 = reshape(%712, newshape=[117, 11]) /* ty=Tensor[(117, 11), float32] */;
    %716 = @func_2768(%713, %714, %715) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 176), int64], Tensor[(2, 88), int16], Tensor[(140), int32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(480, 2), bool], Tensor[(16, 5, 13), float64], Tensor[(117, 11), int8]) */;
    %717 = %709.0;
    %718 = %716.5;
    (%717, %718, %var_4997, meta[relay.Constant][41] /* ty=Tensor[(2002, 1), int32] */, %var_4999)
  };
  %719(%var_5006, %var_5007) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(140), int32], Tensor[(2002, 1), int32], Tensor[(1287), float32]) */
}

def @func_10125() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %720 = @func_7447() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %721 = @func_4690() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %722 = %720.0;
  %723 = %721.0;
  (%722, %723)
}

def @func_5596() -> (Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(9, 2, 12), float32], Tensor[(216), float32]) {
  %724 = @func_5318() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %725 = @func_4472() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(360), uint8]) */;
  %726 = cast(meta[relay.Constant][42] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %727 = reshape(%726, newshape=[9, 2, 12]) /* ty=Tensor[(9, 2, 12), float32] */;
  %728 = %724.0;
  %729 = %725.1;
  %730 = @func_3054(%727) /* ty=Tensor[(9, 2, 12), float32] */;
  (%728, %729, %730, meta[relay.Constant][42] /* ty=Tensor[(216), float32] */)
}

def @func_5229() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %734 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
    %731 = @func_3694() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %732 = %731.0;
    %733 = @func_5180() /* ty=Tensor[(12, 15, 4), float32] */;
    (%732, %733)
  };
  %734() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_3808() -> (Tensor[(2002), int32],) {
  @func_3806() /* ty=(Tensor[(2002), int32],) */
}

def @func_3961(%var_3959: Tensor[(12, 15, 4), float32], %var_3960: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), int32], Tensor[(12, 15, 4), float32], Tensor[(48), uint32]) {
  %746 = fn (%var_3899: Tensor[(12, 15, 4), float32], %var_3913: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), int32], Tensor[(12, 15, 4), float32], Tensor[(48), uint32]) {
    %735 = @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %736 = %735.0;
    %737 = cast(%var_3899, dtype="int32") /* ty=Tensor[(12, 15, 4), int32] */;
    %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%736, dtype="int32") /* ty=Tensor[(12, 15, 4), int32] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %741 = cast(%var_3913, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %742 = reshape(%741, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %743 = @func_3610(%742) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
    %744 = logical_xor(%739, %740) /* ty=Tensor[(12, 15, 4), int32] */;
    %745 = %743.1;
    (%744, %745, %var_3913)
  };
  %746(%var_3959, %var_3960) /* ty=(Tensor[(12, 15, 4), int32], Tensor[(12, 15, 4), float32], Tensor[(48), uint32]) */
}

def @func_6632() -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(336), float64], Tensor[(2002), float64]) {
  %747 = @func_6140() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %748 = cast(meta[relay.Constant][43] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %749 = reshape(%748, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %750 = @func_6080(%749) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(336), float64], Tensor[(14, 6, 11), uint16], Tensor[(2002), int32], Tensor[(2002), float32]) */;
  %751 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %752 = %751.0;
  %753 = cast(%752, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %754 = atan(%753) /* ty=Tensor[(2002), float32] */;
  %755 = cast(%754, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %756 = %747.0;
  %757 = %750.3;
  %758 = log10(%755) /* ty=Tensor[(2002), float64] */;
  (%756, %757, meta[relay.Constant][43] /* ty=Tensor[(336), float64] */, %758)
}

def @func_11875(%var_11848: Tensor[(216), uint16]) -> (Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(336), float32], Tensor[(216), uint16], Tensor[(336), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32], Tensor[(2002), float64]) {
  %759 = cast(meta[relay.Constant][44] /* ty=Tensor[(1859), float64] */, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %760 = cast(meta[relay.Constant][44] /* ty=Tensor[(1859), float64] */, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %761 = reshape(%759, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %762 = reshape(%760, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %763 = @func_2465(%761, %762) /* ty=(Tensor[(13, 11, 13), float64],) */;
  %764 = cast(%var_11848, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %765 = cast(%var_11848, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %766 = cast(meta[relay.Constant][45] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %767 = reshape(%764, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), uint16] */;
  %768 = reshape(%765, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), uint16] */;
  %769 = reshape(%766, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %770 = @func_8711(%767, %768, %769) /* ty=(Tensor[(8, 3, 9), uint16], Tensor[(12, 15, 4), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) */;
  %771 = cast(meta[relay.Constant][46] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %772 = cast(meta[relay.Constant][46] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %773 = reshape(%771, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %774 = reshape(%772, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %775 = @func_581(%773, %774) /* ty=(Tensor[(2, 3, 8), uint32],) */;
  %776 = @func_5401() /* ty=(Tensor[(2002), int32],) */;
  %777 = %776.0;
  %778 = cast(%777, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %779 = %763.0;
  %780 = %770.3;
  %781 = %775.0;
  %782 = sin(%778) /* ty=Tensor[(2002), float64] */;
  (%779, meta[relay.Constant][44] /* ty=Tensor[(1859), float64] */, %780, %var_11848, meta[relay.Constant][45] /* ty=Tensor[(336), float32] */, %781, meta[relay.Constant][46] /* ty=Tensor[(48), uint32] */, %782)
}

def @func_11415() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %783 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %784 = @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %785 = %783.0;
  %786 = %784.0;
  (%785, %786)
}

def @func_3695() -> (Tensor[(12, 15, 4), float32],) {
  %788 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %787 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
    (%787,)
  };
  %788() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_9171() -> Tensor[(140), int32] {
  %789 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
  %789.0
}

def @func_7306(%var_7291: Tensor[(39, 3), float32]) -> (Tensor[(39, 3), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) {
  %790 = @func_6557() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32]) */;
  %791 = %790.2;
  %792 = cast(%var_7291, dtype="float32") /* ty=Tensor[(39, 3), float32] */;
  %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(2), int32] */;
  %794 = cast(%791, dtype="float32") /* ty=Tensor[(39, 3), float32] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %796 = subtract(%794, %795) /* ty=Tensor[(39, 3), float32] */;
  %797 = cast(%791, dtype="float32") /* ty=Tensor[(39, 3), float32] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(2), int32] */;
  %799 = cast(%796, dtype="float32") /* ty=Tensor[(39, 3), float32] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %801 = cast(meta[relay.Constant][47] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %802 = reshape(%801, newshape=[14, 2, 12]) /* ty=Tensor[(14, 2, 12), float32] */;
  %803 = @func_370(%802) /* ty=(Tensor[(14, 2, 12), float32],) */;
  %804 = floor_mod(%799, %800) /* ty=Tensor[(39, 3), float32] */;
  %805 = %803.0;
  (%804, %805, meta[relay.Constant][47] /* ty=Tensor[(336), float32] */)
}

def @func_4648() -> Tensor[(12, 15, 4), float32] {
  %806 = fn () -> Tensor[(12, 15, 4), float32] {
    @func_2553() /* ty=Tensor[(12, 15, 4), float32] */
  };
  %806() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_3056(%var_3055: Tensor[(9, 2, 12), float32]) -> Tensor[(9, 2, 12), float32] {
  %808 = fn (%var_3029: Tensor[(9, 2, 12), float32]) -> Tensor[(9, 2, 12), float32] {
    %807 = cast(%var_3029, dtype="float32") /* ty=Tensor[(9, 2, 12), float32] */;
    erf(%807) /* ty=Tensor[(9, 2, 12), float32] */
  };
  %808(%var_3055) /* ty=Tensor[(9, 2, 12), float32] */
}

def @func_6758(%var_6756: Tensor[(15, 11, 14), float32]) -> (Tensor[(15, 11, 14), float32],) {
  @func_6755(%var_6756) /* ty=(Tensor[(15, 11, 14), float32],) */
}

def @func_8395(%var_8392: Tensor[(11, 13, 15), uint64], %var_8393: Tensor[(11, 13, 15), uint64], %var_8394: Tensor[(11, 13, 15), uint64]) -> Tensor[(11, 13, 15), float64] {
  @func_8390(%var_8392, %var_8393, %var_8394) /* ty=Tensor[(11, 13, 15), float64] */
}

def @func_3210() -> (Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) {
  %815 = fn () -> (Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) {
    %809 = @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */;
    %810 = cast(meta[relay.Constant][48] /* ty=Tensor[(2002), int32] */, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %811 = reshape(%810, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
    %812 = @func_2608(%811) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
    %813 = %809.3;
    %814 = %812.4;
    (%813, %814, meta[relay.Constant][48] /* ty=Tensor[(2002), int32] */)
  };
  %815() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */
}

def @func_6119() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %818 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
    %816 = @func_3026() /* ty=Tensor[(12, 15, 4), float32] */;
    %817 = @func_2746() /* ty=Tensor[(12, 15, 4), float32] */;
    (%816, %817)
  };
  %818() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_7042() -> (Tensor[(12, 15, 4), float32], Tensor[(16, 5, 13), float64], Tensor[(2, 88), int16]) {
  %819 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 88), int16] */, dtype="int16") /* ty=Tensor[(2, 88), int16] */;
  %820 = reshape(%819, newshape=[176]) /* ty=Tensor[(176), int16] */;
  %821 = @func_1491(%820) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) */;
  %822 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
  %823 = %821.0;
  (%822, %823, meta[relay.Constant][49] /* ty=Tensor[(2, 88), int16] */)
}

def @func_8068(%var_8066: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
  @func_8065(%var_8066) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */
}

def @func_7942(%var_7940: Tensor[(14, 11, 3), float32]) -> (Tensor[(14, 11, 3), float32], Tensor[(14, 11, 3), bool], Tensor[(12, 15, 4), float32]) {
  @func_7939(%var_7940) /* ty=(Tensor[(14, 11, 3), float32], Tensor[(14, 11, 3), bool], Tensor[(12, 15, 4), float32]) */
}

def @func_10892() -> (Tensor[(1859), uint16],) {
  %824 = @func_5054() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(12, 15, 4), float32]) */;
  %825 = %824.2;
  %826 = cast(meta[relay.Constant][50] /* ty=Tensor[(1859), float64] */, dtype="uint8") /* ty=Tensor[(1859), uint8] */;
  %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(1), int32] */;
  %828 = cast(%825, dtype="uint8") /* ty=Tensor[(1859), uint8] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %830 = left_shift(%828, %829) /* ty=Tensor[(1859), uint8] */;
  %831 = cast(meta[relay.Constant][50] /* ty=Tensor[(1859), float64] */, dtype="uint16") /* ty=Tensor[(1859), uint16] */;
  %832 = shape_of(%830, dtype="int32") /* ty=Tensor[(1), int32] */;
  %833 = cast(%830, dtype="uint16") /* ty=Tensor[(1859), uint16] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %835 = add(%833, %834) /* ty=Tensor[(1859), uint16] */;
  (%835,)
}

def @func_3543() -> Tensor[(14, 2, 12), int32] {
  %836 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 2, 12), int32] */, dtype="int32") /* ty=Tensor[(14, 2, 12), int32] */;
  %837 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(14, 2, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 2, 12), int32] */, dtype="int32") /* ty=Tensor[(14, 2, 12), int32] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%838, %839) /* ty=Tensor[(14, 2, 12), int32] */
}

def @func_3162(%var_3160: Tensor[(1, 924), uint16]) -> (Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(1, 924), uint16]) {
  %840 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %841 = cast(%var_3160, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %842 = cast(%var_3160, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %843 = reshape(%841, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %844 = reshape(%842, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %845 = @func_1893(%843, %844) /* ty=(Tensor[(14, 6, 11), uint16],) */;
  %846 = %840.0;
  %847 = %845.0;
  (%846, %847, %var_3160)
}

def @func_3658() -> (Tensor[(12, 15, 4), float32],) {
  %848 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  (%848,)
}

def @func_2798() -> Tensor[(12, 15, 4), float32] {
  @func_2796() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_8463() -> (Tensor[(2002), int32],) {
  %851 = fn () -> (Tensor[(2002), int32],) {
    %849 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
    %850 = %849.0;
    (%850,)
  };
  %851() /* ty=(Tensor[(2002), int32],) */
}

def @func_6755(%var_6752: Tensor[(15, 11, 14), float32]) -> (Tensor[(15, 11, 14), float32],) {
  %852 = cast(%var_6752, dtype="float32") /* ty=Tensor[(15, 11, 14), float32] */;
  %853 = acos(%852) /* ty=Tensor[(15, 11, 14), float32] */;
  (%853,)
}

def @func_8065(%var_8063: Tensor[(48), uint32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) {
  %854 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %855 = cast(%var_8063, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %856 = cast(%var_8063, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %857 = reshape(%855, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %858 = reshape(%856, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), uint32] */;
  %859 = @func_581(%857, %858) /* ty=(Tensor[(2, 3, 8), uint32],) */;
  %860 = %854.0;
  %861 = %859.0;
  (%860, %861, %var_8063)
}

def @func_3028() -> Tensor[(12, 15, 4), float32] {
  @func_3026() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_3272() -> (Tensor[(12, 15, 4), float32],) {
  @func_3270() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_8322(%var_8320: Tensor[(360), uint8], %var_8321: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(360), uint8], Tensor[(140), int32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32]) {
  @func_8318(%var_8320, %var_8321) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(360), uint8], Tensor[(140), int32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32]) */
}

def @func_4070(%var_4045: Tensor[(1, 13, 10), bool], %var_4046: Tensor[(1, 13, 10), bool]) -> (Tensor[(?, 13, 10), bool], Tensor[(12, 15, 4), float32]) {
  %862 = cast(%var_4046, dtype="bool") /* ty=Tensor[(1, 13, 10), bool] */;
  %863 = shape_of(%var_4045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%var_4045, dtype="bool") /* ty=Tensor[(1, 13, 10), bool] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %866 = logical_and(%864, %865) /* ty=Tensor[(?, 13, 10), bool] */;
  %867 = @func_3875() /* ty=Tensor[(12, 15, 4), float32] */;
  (%866, %867)
}

def @func_10992() -> Tensor[(1859), uint16] {
  %868 = @func_10892() /* ty=(Tensor[(1859), uint16],) */;
  %868.0
}

def @func_11889(%var_11887: Tensor[(8, 2, 10), float64]) -> Tensor[(8, 2, 10), float64] {
  @func_11886(%var_11887) /* ty=Tensor[(8, 2, 10), float64] */
}

def @func_8191(%var_8189: Tensor[(12, 6, 5), int64]) -> (Tensor[(12, 6, 5), int64],) {
  @func_8188(%var_8189) /* ty=(Tensor[(12, 6, 5), int64],) */
}

def @func_8711(%var_8652: Tensor[(8, 3, 9), uint16], %var_8653: Tensor[(8, 3, 9), uint16], %var_8664: Tensor[(336), float32]) -> (Tensor[(8, 3, 9), uint16], Tensor[(12, 15, 4), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) {
  %869 = cast(%var_8653, dtype="uint16") /* ty=Tensor[(8, 3, 9), uint16] */;
  %870 = shape_of(%var_8652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%var_8652, dtype="uint16") /* ty=Tensor[(8, 3, 9), uint16] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %873 = cast(%var_8664, dtype="float32") /* ty=Tensor[(336), float32] */;
  %874 = reshape(%873, newshape=[14, 2, 12]) /* ty=Tensor[(14, 2, 12), float32] */;
  %875 = @func_370(%874) /* ty=(Tensor[(14, 2, 12), float32],) */;
  %876 = bitwise_and(%871, %872) /* ty=Tensor[(8, 3, 9), uint16] */;
  %877 = @func_2796() /* ty=Tensor[(12, 15, 4), float32] */;
  %878 = %875.0;
  (%876, %877, %878, %var_8664)
}

def @func_633(%var_631: Tensor[(11, 4, 4), int16], %var_632: Tensor[(140), int32]) -> (Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) {
  %886 = fn (%var_615: Tensor[(11, 4, 4), int16], %var_624: Tensor[(140), int32]) -> (Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) {
    %879 = cast(meta[relay.Constant][53] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %880 = cast(%var_615, dtype="int16") /* ty=Tensor[(11, 4, 4), int16] */;
    %881 = cast(%var_624, dtype="int32") /* ty=Tensor[(140), int32] */;
    %882 = reshape(%881, newshape=[2, 7, 10]) /* ty=Tensor[(2, 7, 10), int32] */;
    %883 = @func_353(%882) /* ty=(Tensor[(2, 7, 10), int32], Tensor[(2, 11, 16), int8], Tensor[(2, 176), int64], Tensor[(2, 7, 10), float32], Tensor[(2, 11, 16), int8]) */;
    %884 = maximum(%879, %880) /* ty=Tensor[(11, 4, 4), int16] */;
    %885 = %883.2;
    (%884, %885, %var_624)
  };
  %886(%var_631, %var_632) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) */
}

def @func_11193() -> (Tensor[(12, 15, 4), float32], Tensor[(360), uint8]) {
  @func_11191() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(360), uint8]) */
}

def @func_10423() -> Tensor[(9, 8), float32] {
  %887 = @func_5272() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(9, 8), float32], Tensor[(72), float32]) */;
  %887.1
}

def @func_12084() -> Tensor[(12, 15, 4), float32] {
  %888 = fn () -> Tensor[(12, 15, 4), float32] {
    @func_5445() /* ty=Tensor[(12, 15, 4), float32] */
  };
  %888() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_10614() -> (Tensor[(12, 15, 4), float32],) {
  %891 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %889 = @func_10125() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
    %890 = %889.1;
    (%890,)
  };
  %891() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_9925() -> (Tensor[(12, 15, 4), float32],) {
  @func_9923() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_4250() -> (Tensor[(12, 15, 4), float32],) {
  @func_4248() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_7309(%var_7307: Tensor[(39, 3), float32]) -> (Tensor[(39, 3), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) {
  @func_7306(%var_7307) /* ty=(Tensor[(39, 3), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) */
}

def @func_237(%var_234: Tensor[(2, 11, 16), int64], %var_235: Tensor[(2, 11, 16), int64], %var_236: Tensor[(2, 11, 16), int64]) -> Tensor[(2, 11, 16), int8] {
  @func_232(%var_234, %var_235, %var_236) /* ty=Tensor[(2, 11, 16), int8] */
}

def @func_8449() -> (Tensor[(14, 2, 12), int32],) {
  %894 = fn () -> (Tensor[(14, 2, 12), int32],) {
    %892 = @func_4778() /* ty=(Tensor[(14, 2, 12), int32],) */;
    %893 = %892.0;
    (%893,)
  };
  %894() /* ty=(Tensor[(14, 2, 12), int32],) */
}

def @func_11809() -> (Tensor[(12, 15, 4), float32],) {
  %895 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %896 = %895.1;
  (%896,)
}

def @func_11417() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  @func_11415() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_12282() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  @func_12280() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_355(%var_354: Tensor[(2, 7, 10), int32]) -> (Tensor[(2, 7, 10), int32], Tensor[(2, 11, 16), int8], Tensor[(2, 176), int64], Tensor[(2, 7, 10), float32], Tensor[(2, 11, 16), int8]) {
  %918 = fn (%var_314: Tensor[(2, 7, 10), int32]) -> (Tensor[(2, 7, 10), int32], Tensor[(2, 11, 16), int8], Tensor[(2, 176), int64], Tensor[(2, 7, 10), float32], Tensor[(2, 11, 16), int8]) {
    %897 = cast(%var_314, dtype="int32") /* ty=Tensor[(2, 7, 10), int32] */;
    %898 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(2, 7, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %899 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 7, 10), int32] */, dtype="int32") /* ty=Tensor[(2, 7, 10), int32] */;
    %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %901 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 176), int64] */, dtype="int64") /* ty=Tensor[(2, 176), int64] */;
    %902 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 176), int64] */, dtype="int64") /* ty=Tensor[(2, 176), int64] */;
    %903 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 176), int64] */, dtype="int64") /* ty=Tensor[(2, 176), int64] */;
    %904 = reshape(%901, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
    %905 = reshape(%902, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
    %906 = reshape(%903, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
    %907 = cast(%var_314, dtype="float32") /* ty=Tensor[(2, 7, 10), float32] */;
    %908 = @func_232(%904, %905, %906) /* ty=Tensor[(2, 11, 16), int8] */;
    %909 = cast(%908, dtype="int64") /* ty=Tensor[(2, 11, 16), int64] */;
    %910 = cast(%908, dtype="int64") /* ty=Tensor[(2, 11, 16), int64] */;
    %911 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 176), int64] */, dtype="int64") /* ty=Tensor[(2, 176), int64] */;
    %912 = reshape(%909, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
    %913 = reshape(%910, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
    %914 = reshape(%911, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), int64] */;
    %915 = add(%899, %900) /* ty=Tensor[(2, 7, 10), int32] */;
    %916 = tan(%907) /* ty=Tensor[(2, 7, 10), float32] */;
    %917 = @func_232(%912, %913, %914) /* ty=Tensor[(2, 11, 16), int8] */;
    (%915, %908, meta[relay.Constant][55] /* ty=Tensor[(2, 176), int64] */, %916, %917)
  };
  %918(%var_354) /* ty=(Tensor[(2, 7, 10), int32], Tensor[(2, 11, 16), int8], Tensor[(2, 176), int64], Tensor[(2, 7, 10), float32], Tensor[(2, 11, 16), int8]) */
}

def @func_7071(%var_7067: Tensor[(13, 3, 6), float64], %var_7068: Tensor[(13, 3, 6), float64], %var_7069: Tensor[(336), float64], %var_7070: Tensor[(480, 2), float64]) -> (Tensor[(13, 3, 6), float64], Tensor[(14, 2, 12), bool], Tensor[(336), float64], Tensor[(12, 10, 8), float64], float64, Tensor[(480, 2), float64]) {
  %934 = fn (%var_7050: Tensor[(13, 3, 6), float64], %var_7051: Tensor[(13, 3, 6), float64], %var_7057: Tensor[(336), float64], %var_7063: Tensor[(480, 2), float64]) -> (Tensor[(13, 3, 6), float64], Tensor[(14, 2, 12), bool], Tensor[(336), float64], Tensor[(12, 10, 8), float64], float64, Tensor[(480, 2), float64]) {
    %919 = cast(%var_7051, dtype="float64") /* ty=Tensor[(13, 3, 6), float64] */;
    %920 = shape_of(%var_7050, dtype="int32") /* ty=Tensor[(3), int32] */;
    %921 = cast(%var_7050, dtype="float64") /* ty=Tensor[(13, 3, 6), float64] */;
    %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %923 = cast(%var_7057, dtype="float64") /* ty=Tensor[(336), float64] */;
    %924 = reshape(%923, newshape=[14, 2, 12]) /* ty=Tensor[(14, 2, 12), float64] */;
    %925 = @func_5904(%924) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), float32], Tensor[(14, 2, 12), bool]) */;
    %926 = cast(-0.261531f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %927 = cast(%var_7063, dtype="float64") /* ty=Tensor[(480, 2), float64] */;
    %928 = reshape(%926, newshape=[]) /* ty=float64 */;
    %929 = reshape(%927, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
    %930 = @func_554(%928, %929) /* ty=(Tensor[(12, 10, 8), float64],) */;
    %931 = add(%921, %922) /* ty=Tensor[(13, 3, 6), float64] */;
    %932 = %925.2;
    %933 = %930.0;
    (%931, %932, %var_7057, %933, -0.261531f64 /* ty=float64 */, %var_7063)
  };
  %934(%var_7067, %var_7068, %var_7069, %var_7070) /* ty=(Tensor[(13, 3, 6), float64], Tensor[(14, 2, 12), bool], Tensor[(336), float64], Tensor[(12, 10, 8), float64], float64, Tensor[(480, 2), float64]) */
}

def @func_4628() -> (Tensor[(12, 15, 4), float32],) {
  %936 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %935 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
    (%935,)
  };
  %936() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_5433(%var_5431: Tensor[(9, 12, 9), float64]) -> (Tensor[(9, 12, 9), float64], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  @func_5430(%var_5431) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_5446() -> Tensor[(12, 15, 4), float32] {
  %937 = fn () -> Tensor[(12, 15, 4), float32] {
    @func_2553() /* ty=Tensor[(12, 15, 4), float32] */
  };
  %937() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_11750(%var_11704: Tensor[(6, 1, 5), float32], %var_11709: Tensor[(2002), int32]) -> (Tensor[(6, 1, 5), float32], Tensor[(2002), bool], Tensor[(2002), int32], Tensor[(9, 8), float32], Tensor[(12, 15, 4), float32]) {
  %938 = cast(%var_11704, dtype="float32") /* ty=Tensor[(6, 1, 5), float32] */;
  %939 = cast(%var_11709, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %940 = reshape(%939, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %941 = @func_10063(%940) /* ty=(Tensor[(2002), bool],) */;
  %942 = log(%938) /* ty=Tensor[(6, 1, 5), float32] */;
  %943 = %941.0;
  %944 = @func_10423() /* ty=Tensor[(9, 8), float32] */;
  %945 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  (%942, %943, %var_11709, %944, %945)
}

def @func_8921() -> (Tensor[(14, 2, 12), int32],) {
  @func_8919() /* ty=(Tensor[(14, 2, 12), int32],) */
}

def @func_10063(%var_10053: Tensor[(2002), int32]) -> (Tensor[(2002), bool],) {
  %946 = @func_8462() /* ty=(Tensor[(2002), int32],) */;
  %947 = %946.0;
  %948 = cast(%var_10053, dtype="bool") /* ty=Tensor[(2002), bool] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(1), int32] */;
  %950 = cast(%947, dtype="bool") /* ty=Tensor[(2002), bool] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?), bool] */;
  %952 = logical_or(%950, %951) /* ty=Tensor[(2002), bool] */;
  (%952,)
}

def @func_1896(%var_1894: Tensor[(14, 6, 11), uint16], %var_1895: Tensor[(14, 6, 11), uint16]) -> (Tensor[(14, 6, 11), uint16],) {
  %958 = fn (%var_1887: Tensor[(14, 6, 11), uint16], %var_1888: Tensor[(14, 6, 11), uint16]) -> (Tensor[(14, 6, 11), uint16],) {
    %953 = cast(%var_1888, dtype="uint16") /* ty=Tensor[(14, 6, 11), uint16] */;
    %954 = shape_of(%var_1887, dtype="int32") /* ty=Tensor[(3), int32] */;
    %955 = cast(%var_1887, dtype="uint16") /* ty=Tensor[(14, 6, 11), uint16] */;
    %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %957 = logical_xor(%955, %956) /* ty=Tensor[(14, 6, 11), uint16] */;
    (%957,)
  };
  %958(%var_1894, %var_1895) /* ty=(Tensor[(14, 6, 11), uint16],) */
}

def @func_4850(%var_4814: Tensor[(12, 15, 4), float32]) -> (Tensor[(12, 15, 4), float64], Tensor[(2002), int32], Tensor[(14, 9, 11), float64]) {
  %959 = @func_2553() /* ty=Tensor[(12, 15, 4), float32] */;
  %960 = cast(%var_4814, dtype="float64") /* ty=Tensor[(12, 15, 4), float64] */;
  %961 = shape_of(%959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %962 = cast(%959, dtype="float64") /* ty=Tensor[(12, 15, 4), float64] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %964 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
  %965 = @func_4743() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32], Tensor[(14, 9, 11), float64]) */;
  %966 = power(%962, %963) /* ty=Tensor[(12, 15, 4), float64] */;
  %967 = %964.0;
  %968 = %965.3;
  (%966, %967, %968)
}

def @func_12280() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %969 = @func_2737() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %970 = @func_2633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %971 = @func_9234() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %972 = @func_3633() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %973 = %969.3;
  %974 = %970.0;
  %975 = %971.0;
  %976 = @func_3875() /* ty=Tensor[(12, 15, 4), float32] */;
  %977 = %972.0;
  %978 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
  (%973, %974, %975, %976, %977, %978)
}

def @func_8431(%var_8430: Tensor[(2002), int32]) -> (Tensor[(14, 2, 12), int32], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(12, 15, 4), float32], Tensor[(36, 10), uint8], Tensor[(2002), int32]) {
  %991 = fn (%var_8427: Tensor[(2002), int32]) -> (Tensor[(14, 2, 12), int32], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(12, 15, 4), float32], Tensor[(36, 10), uint8], Tensor[(2002), int32]) {
    %979 = @func_4778() /* ty=(Tensor[(14, 2, 12), int32],) */;
    %980 = cast(meta[relay.Constant][56] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
    %981 = reshape(%980, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), float32] */;
    %982 = @func_6755(%981) /* ty=(Tensor[(15, 11, 14), float32],) */;
    %983 = cast(meta[relay.Constant][57] /* ty=Tensor[(36, 10), uint8] */, dtype="uint8") /* ty=Tensor[(36, 10), uint8] */;
    %984 = cast(%var_8427, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %985 = reshape(%983, newshape=[360]) /* ty=Tensor[(360), uint8] */;
    %986 = reshape(%984, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
    %987 = @func_8318(%985, %986) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(360), uint8], Tensor[(140), int32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32]) */;
    %988 = %979.0;
    %989 = %982.0;
    %990 = %987.0;
    (%988, %989, meta[relay.Constant][56] /* ty=Tensor[(2310), float32] */, %990, meta[relay.Constant][57] /* ty=Tensor[(36, 10), uint8] */, %var_8427)
  };
  %991(%var_8430) /* ty=(Tensor[(14, 2, 12), int32], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(12, 15, 4), float32], Tensor[(36, 10), uint8], Tensor[(2002), int32]) */
}

def @func_1670(%var_1669: Tensor[(9, 8), float32]) -> Tensor[(9, 8), float32] {
  %993 = fn (%var_1659: Tensor[(9, 8), float32]) -> Tensor[(9, 8), float32] {
    %992 = cast(%var_1659, dtype="float32") /* ty=Tensor[(9, 8), float32] */;
    sigmoid(%992) /* ty=Tensor[(9, 8), float32] */
  };
  %993(%var_1669) /* ty=Tensor[(9, 8), float32] */
}

def @func_3681() -> Tensor[(12, 15, 4), float32] {
  @func_3679() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_3989() -> Tensor[(12, 15, 4), float32] {
  %994 = fn () -> Tensor[(12, 15, 4), float32] {
    @func_2553() /* ty=Tensor[(12, 15, 4), float32] */
  };
  %994() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_11343() -> (Tensor[(12, 15, 4), float32],) {
  %995 = @func_4248() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %996 = %995.0;
  (%996,)
}

def @func_7976() -> (Tensor[(12, 15, 4), float32], Tensor[(11, 182), bool], Tensor[(48), uint32]) {
  %1009 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(11, 182), bool], Tensor[(48), uint32]) {
    %997 = cast(meta[relay.Constant][58] /* ty=Tensor[(11, 182), int32] */, dtype="int32") /* ty=Tensor[(11, 182), int32] */;
    %998 = reshape(%997, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
    %999 = @func_3331(%998) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(16, 5, 13), float64], Tensor[(140), int32], Tensor[(1287), float32], Tensor[(12, 15, 4), float32]) */;
    %1000 = %999.2;
    %1001 = cast(%1000, dtype="bool") /* ty=Tensor[(2002), bool] */;
    %1002 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(11, 182), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1003 = cast(meta[relay.Constant][58] /* ty=Tensor[(11, 182), int32] */, dtype="bool") /* ty=Tensor[(11, 182), bool] */;
    %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1005 = @func_3209() /* ty=(Tensor[(140), int32], Tensor[(48), uint32], Tensor[(2002), int32]) */;
    %1006 = @func_5180() /* ty=Tensor[(12, 15, 4), float32] */;
    %1007 = logical_or(%1003, %1004) /* ty=Tensor[(11, 182), bool] */;
    %1008 = %1005.1;
    (%1006, %1007, %1008)
  };
  %1009() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(11, 182), bool], Tensor[(48), uint32]) */
}

def @func_6651() -> (Tensor[(12, 15, 4), float32],) {
  %1012 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %1010 = @func_4690() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %1011 = %1010.0;
    (%1011,)
  };
  %1012() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_8894() -> (Tensor[(140), int32],) {
  @func_8892() /* ty=(Tensor[(140), int32],) */
}

def @func_3165(%var_3163: Tensor[(1, 924), uint16]) -> (Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(1, 924), uint16]) {
  @func_3162(%var_3163) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(14, 6, 11), uint16], Tensor[(1, 924), uint16]) */
}

def @func_2554() -> Tensor[(12, 15, 4), float32] {
  %1014 = fn () -> Tensor[(12, 15, 4), float32] {
    %1013 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %1013.0
  };
  %1014() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_5598() -> (Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(9, 2, 12), float32], Tensor[(216), float32]) {
  @func_5596() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2, 12, 15), uint8], Tensor[(9, 2, 12), float32], Tensor[(216), float32]) */
}

def @func_5180() -> Tensor[(12, 15, 4), float32] {
  @func_2746() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_4449() -> (Tensor[(12, 15, 4), float32],) {
  @func_4447() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_6634() -> (Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(336), float64], Tensor[(2002), float64]) {
  @func_6632() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(336), float64], Tensor[(2002), float64]) */
}

def @func_1728(%var_1716: Tensor[(13, 11, 14), int32], %var_1717: Tensor[(13, 11, 14), int32], %var_1721: Tensor[(13, 11, 14), int32]) -> Tensor[(13, 11, 14), bool] {
  %1015 = cast(%var_1717, dtype="int32") /* ty=Tensor[(13, 11, 14), int32] */;
  %1016 = shape_of(%var_1716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%var_1716, dtype="int32") /* ty=Tensor[(13, 11, 14), int32] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1019 = right_shift(%1017, %1018) /* ty=Tensor[(13, 11, 14), int32] */;
  %1020 = cast(%var_1721, dtype="bool") /* ty=Tensor[(13, 11, 14), bool] */;
  %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(%1019, dtype="bool") /* ty=Tensor[(13, 11, 14), bool] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1022, %1023) /* ty=Tensor[(13, 11, 14), bool] */
}

def @func_8318(%var_8243: Tensor[(360), uint8], %var_8293: Tensor[(2002), int32]) -> (Tensor[(12, 15, 4), float32], Tensor[(2, 3, 8), uint32], Tensor[(360), uint8], Tensor[(140), int32], Tensor[(2002), int32], Tensor[(12, 15, 4), float32]) {
  %1024 = cast(%var_8243, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %1025 = reshape(%1024, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint8] */;
  %1026 = @func_1535(%1025) /* ty=(Tensor[(2, 12, 15), uint8], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32]) */;
  %1027 = cast(%var_8293, dtype="int32") /* ty=Tensor[(2002), int32] */;
  %1028 = reshape(%1027, newshape=[2002]) /* ty=Tensor[(2002), int32] */;
  %1029 = @func_3331(%1028) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(16, 5, 13), float64], Tensor[(140), int32], Tensor[(1287), float32], Tensor[(12, 15, 4), float32]) */;
  %1030 = @func_5843() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %1031 = @func_5086() /* ty=Tensor[(12, 15, 4), float32] */;
  %1032 = %1026.1;
  %1033 = %1029.4;
  %1034 = %1030.1;
  (%1031, %1032, %var_8243, %1033, %var_8293, %1034)
}

def @func_10691() -> (Tensor[(12, 15, 4), float32],) {
  @func_10689() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_9527() -> Tensor[(2002), int32] {
  %1036 = fn () -> Tensor[(2002), int32] {
    %1035 = @func_8965() /* ty=(Tensor[(14, 2, 12), int32], Tensor[(2002), int32]) */;
    %1035.1
  };
  %1036() /* ty=Tensor[(2002), int32] */
}

def @func_7985() -> Tensor[(12, 15, 4), float32] {
  @func_7983() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_2063(%var_2024: Tensor[(4, 10, 8), float64], %var_2042: Tensor[(1, 924), uint16], %var_2061: Tensor[(117), float32]) -> (Tensor[(4, 10, 8), float64], Tensor[(14, 6, 11), uint16], Tensor[(1, 924), float64], Tensor[(352), int64], Tensor[(117), float32]) {
  %1037 = cast(6.52683f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1038 = cast(%var_2024, dtype="float64") /* ty=Tensor[(4, 10, 8), float64] */;
  %1039 = cast(%var_2042, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %1040 = cast(%var_2042, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %1041 = reshape(%1039, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %1042 = reshape(%1040, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), uint16] */;
  %1043 = @func_1893(%1041, %1042) /* ty=(Tensor[(14, 6, 11), uint16],) */;
  %1044 = cast(%var_2042, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %1045 = cast(6.52683f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1046 = cast(%var_2061, dtype="float32") /* ty=Tensor[(117), float32] */;
  %1047 = reshape(%1046, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), float32] */;
  %1048 = @func_737(%1047) /* ty=(Tensor[(2, 11, 16), int8], Tensor[(352), int64], Tensor[(480, 2), bool], Tensor[(1, 13, 9), bool], Tensor[(12, 10, 8), float64]) */;
  %1049 = floor_mod(%1037, %1038) /* ty=Tensor[(4, 10, 8), float64] */;
  %1050 = %1043.0;
  %1051 = divide(%1044, %1045) /* ty=Tensor[(1, 924), float64] */;
  %1052 = %1048.1;
  (%1049, %1050, %1051, %1052, %var_2061)
}

def @func_907(%var_862: Tensor[(2, 2, 6), bool], %var_863: Tensor[(2, 2, 6), bool], %var_873: Tensor[(2, 2, 6), bool], %var_878: float64, %var_879: Tensor[(960), float64]) -> (Tensor[(2, 2, 6), bool], Tensor[(2, 2, 6), float64], Tensor[(12, 10, 8), float64], float64, Tensor[(960), float64], Tensor[(2, 2, 6), float64]) {
  %1053 = cast(%var_863, dtype="bool") /* ty=Tensor[(2, 2, 6), bool] */;
  %1054 = shape_of(%var_862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1055 = cast(%var_862, dtype="bool") /* ty=Tensor[(2, 2, 6), bool] */;
  %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1057 = cast(%var_873, dtype="float64") /* ty=Tensor[(2, 2, 6), float64] */;
  %1058 = shape_of(%var_862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1059 = cast(%var_862, dtype="float64") /* ty=Tensor[(2, 2, 6), float64] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1061 = cast(%var_878, dtype="float64") /* ty=float64 */;
  %1062 = cast(%var_879, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1063 = reshape(%1061, newshape=[]) /* ty=float64 */;
  %1064 = reshape(%1062, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %1065 = @func_554(%1063, %1064) /* ty=(Tensor[(12, 10, 8), float64],) */;
  %1066 = cast(%var_863, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
  %1067 = asinh(%1066) /* ty=Tensor[(2, 2, 6), float32] */;
  %1068 = cast(%1067, dtype="float64") /* ty=Tensor[(2, 2, 6), float64] */;
  %1069 = logical_or(%1055, %1056) /* ty=Tensor[(2, 2, 6), bool] */;
  %1070 = add(%1059, %1060) /* ty=Tensor[(2, 2, 6), float64] */;
  %1071 = %1065.0;
  %1072 = acos(%1068) /* ty=Tensor[(2, 2, 6), float64] */;
  (%1069, %1070, %1071, %var_878, %var_879, %1072)
}

def @func_11345() -> (Tensor[(12, 15, 4), float32],) {
  @func_11343() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_9481(%var_9479: Tensor[(336), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(360), uint8], Tensor[(14, 2, 12), float32], Tensor[(336), float32], Tensor[(140), int32], Tensor[(2002), int32]) {
  @func_9478(%var_9479) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(360), uint8], Tensor[(14, 2, 12), float32], Tensor[(336), float32], Tensor[(140), int32], Tensor[(2002), int32]) */
}

def @func_5430(%var_5415: Tensor[(9, 12, 9), float64]) -> (Tensor[(9, 12, 9), float64], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %1073 = cast(%var_5415, dtype="float64") /* ty=Tensor[(9, 12, 9), float64] */;
  %1074 = @func_3694() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %1075 = exp(%1073) /* ty=Tensor[(9, 12, 9), float64] */;
  %1076 = %1074.0;
  %1077 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
  (%1075, %1076, %1077)
}

def @func_8967() -> (Tensor[(14, 2, 12), int32], Tensor[(2002), int32]) {
  @func_8965() /* ty=(Tensor[(14, 2, 12), int32], Tensor[(2002), int32]) */
}

def @func_11054() -> Tensor[(1859), uint16] {
  %1078 = fn () -> Tensor[(1859), uint16] {
    @func_10992() /* ty=Tensor[(1859), uint16] */
  };
  %1078() /* ty=Tensor[(1859), uint16] */
}

def @func_11878(%var_11876: Tensor[(216), uint16]) -> (Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(336), float32], Tensor[(216), uint16], Tensor[(336), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32], Tensor[(2002), float64]) {
  @func_11875(%var_11876) /* ty=(Tensor[(13, 11, 13), float64], Tensor[(1859), float64], Tensor[(336), float32], Tensor[(216), uint16], Tensor[(336), float32], Tensor[(2, 3, 8), uint32], Tensor[(48), uint32], Tensor[(2002), float64]) */
}

def @func_9710(%var_9708: Tensor[(216), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(9, 2, 12), float32], Tensor[(216), float32], Tensor[(12, 15, 4), float32]) {
  @func_9707(%var_9708) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(9, 2, 12), float32], Tensor[(216), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_11811() -> (Tensor[(12, 15, 4), float32],) {
  @func_11809() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_11312(%var_11310: Tensor[(2002), int32], %var_11311: float64) -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(12, 10, 8), float64], float64, Tensor[(960), float64], Tensor[(960), float64], Tensor[(2, 12), bool], Tensor[(14, 2, 12), int32], Tensor[(12, 15, 4), float32]) {
  %1109 = fn (%var_11269: Tensor[(2002), int32], %var_11278: float64) -> (Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(12, 10, 8), float64], float64, Tensor[(960), float64], Tensor[(960), float64], Tensor[(2, 12), bool], Tensor[(14, 2, 12), int32], Tensor[(12, 15, 4), float32]) {
    %1079 = @func_10738() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %1080 = cast(%var_11269, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %1081 = cast(%var_11269, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %1082 = cast(%var_11269, dtype="int32") /* ty=Tensor[(2002), int32] */;
    %1083 = reshape(%1080, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
    %1084 = reshape(%1081, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
    %1085 = reshape(%1082, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), int32] */;
    %1086 = cast(%var_11278, dtype="float64") /* ty=float64 */;
    %1087 = cast(meta[relay.Constant][59] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %1088 = reshape(%1086, newshape=[]) /* ty=float64 */;
    %1089 = reshape(%1087, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
    %1090 = @func_554(%1088, %1089) /* ty=(Tensor[(12, 10, 8), float64],) */;
    %1091 = cast(meta[relay.Constant][60] /* ty=Tensor[(2, 12), bool] */, dtype="bool") /* ty=Tensor[(2, 12), bool] */;
    %1092 = cast(meta[relay.Constant][60] /* ty=Tensor[(2, 12), bool] */, dtype="bool") /* ty=Tensor[(2, 12), bool] */;
    %1093 = cast(meta[relay.Constant][60] /* ty=Tensor[(2, 12), bool] */, dtype="bool") /* ty=Tensor[(2, 12), bool] */;
    %1094 = cast(%var_11278, dtype="float64") /* ty=float64 */;
    %1095 = %1090.0;
    %1096 = cast(%1095, dtype="float64") /* ty=Tensor[(12, 10, 8), float64] */;
    %1097 = reshape(%1091, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), bool] */;
    %1098 = reshape(%1092, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), bool] */;
    %1099 = reshape(%1093, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), bool] */;
    %1100 = reshape(%1094, newshape=[]) /* ty=float64 */;
    %1101 = reshape(%1096, newshape=[960]) /* ty=Tensor[(960), float64] */;
    %1102 = @func_907(%1097, %1098, %1099, %1100, %1101) /* ty=(Tensor[(2, 2, 6), bool], Tensor[(2, 2, 6), float64], Tensor[(12, 10, 8), float64], float64, Tensor[(960), float64], Tensor[(2, 2, 6), float64]) */;
    %1103 = @func_7886() /* ty=(Tensor[(14, 2, 12), int32], Tensor[(176), int16], Tensor[(2002), int32], Tensor[(176), int16]) */;
    %1104 = %1079.0;
    %1105 = @func_1728(%1083, %1084, %1085) /* ty=Tensor[(13, 11, 14), bool] */;
    %1106 = %1102.4;
    %1107 = %1103.0;
    %1108 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
    (%1104, %1105, %var_11269, %1095, %var_11278, meta[relay.Constant][59] /* ty=Tensor[(960), float64] */, %1106, meta[relay.Constant][60] /* ty=Tensor[(2, 12), bool] */, %1107, %1108)
  };
  %1109(%var_11310, %var_11311) /* ty=(Tensor[(12, 15, 4), float32], Tensor[(13, 11, 14), bool], Tensor[(2002), int32], Tensor[(12, 10, 8), float64], float64, Tensor[(960), float64], Tensor[(960), float64], Tensor[(2, 12), bool], Tensor[(14, 2, 12), int32], Tensor[(12, 15, 4), float32]) */
}

def @main(%var_12417: Tensor[(8, 2, 9), float64]) -> (Tensor[(8, 2, 9), float64],) {
  %1110 = cast(%var_12417, dtype="float64") /* ty=Tensor[(8, 2, 9), float64] */;
  %1111 = sin(%1110) /* ty=Tensor[(8, 2, 9), float64] */;
  (%1111,)
}

def @func_1493(%var_1492: Tensor[(176), int16]) -> (Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) {
  %1123 = fn (%var_1476: Tensor[(176), int16]) -> (Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) {
    %1112 = cast(meta[relay.Constant][62] /* ty=Tensor[(16, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 13), float64] */;
    %1113 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(16, 5, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1114 = cast(meta[relay.Constant][61] /* ty=Tensor[(16, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 13), float64] */;
    %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1116 = cast(%var_1476, dtype="int16") /* ty=Tensor[(176), int16] */;
    %1117 = cast(meta[relay.Constant][63] /* ty=Tensor[(5, 28), int32] */, dtype="int32") /* ty=Tensor[(5, 28), int32] */;
    %1118 = reshape(%1116, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int16] */;
    %1119 = reshape(%1117, newshape=[140]) /* ty=Tensor[(140), int32] */;
    %1120 = @func_630(%1118, %1119) /* ty=(Tensor[(11, 4, 4), int16], Tensor[(2, 176), int64], Tensor[(140), int32]) */;
    %1121 = floor_divide(%1114, %1115) /* ty=Tensor[(16, 5, 13), float64] */;
    %1122 = %1120.0;
    (%1121, %1122, %var_1476, meta[relay.Constant][63] /* ty=Tensor[(5, 28), int32] */)
  };
  %1123(%var_1492) /* ty=(Tensor[(16, 5, 13), float64], Tensor[(11, 4, 4), int16], Tensor[(176), int16], Tensor[(5, 28), int32]) */
}

def @func_4248() -> (Tensor[(12, 15, 4), float32],) {
  %1124 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %1125 = %1124.0;
  (%1125,)
}

def @func_5402() -> (Tensor[(2002), int32],) {
  %1128 = fn () -> (Tensor[(2002), int32],) {
    %1126 = @func_3388() /* ty=(Tensor[(2002), int32],) */;
    %1127 = %1126.0;
    (%1127,)
  };
  %1128() /* ty=(Tensor[(2002), int32],) */
}

def @func_7983() -> Tensor[(12, 15, 4), float32] {
  @func_5445() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_12347() -> (Tensor[(12, 15, 4), float32],) {
  @func_12345() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_6222(%var_6220: Tensor[(10, 12, 6), int16], %var_6221: Tensor[(10, 12, 6), float64]) -> (Tensor[(14, 2, 12), int32], Tensor[(10, 12, 6), bool], Tensor[(1, 924), uint16], Tensor[(924), uint16]) {
  @func_6218(%var_6220, %var_6221) /* ty=(Tensor[(14, 2, 12), int32], Tensor[(10, 12, 6), bool], Tensor[(1, 924), uint16], Tensor[(924), uint16]) */
}

def @func_10023(%var_9962: Tensor[(972), float64]) -> (Tensor[(140), int32], Tensor[(336), float64], Tensor[(12, 15, 4), float32], Tensor[(972), float64], Tensor[(2002), int32]) {
  %1129 = @func_2953() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(140), int32], Tensor[(176), int16], Tensor[(140), int32]) */;
  %1130 = @func_6632() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(2002), int32], Tensor[(336), float64], Tensor[(2002), float64]) */;
  %1131 = cast(%var_9962, dtype="float64") /* ty=Tensor[(972), float64] */;
  %1132 = reshape(%1131, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), float64] */;
  %1133 = @func_5430(%1132) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %1134 = cast(%var_9962, dtype="float64") /* ty=Tensor[(972), float64] */;
  %1135 = %1129.1;
  %1136 = %1130.2;
  %1137 = %1133.1;
  %1138 = sinh(%1134) /* ty=Tensor[(972), float64] */;
  %1139 = @func_9526() /* ty=Tensor[(2002), int32] */;
  (%1135, %1136, %1137, %1138, %1139)
}

def @func_5320() -> (Tensor[(12, 15, 4), float32],) {
  @func_5318() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_9054() -> Tensor[(12, 15, 4), float32] {
  @func_9052() /* ty=Tensor[(12, 15, 4), float32] */
}

def @func_12345() -> (Tensor[(12, 15, 4), float32],) {
  %1140 = @func_10184() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %1141 = %1140.0;
  (%1141,)
}

def @func_4778() -> (Tensor[(14, 2, 12), int32],) {
  %1142 = @func_3543() /* ty=Tensor[(14, 2, 12), int32] */;
  (%1142,)
}

def @func_3545() -> Tensor[(14, 2, 12), int32] {
  @func_3543() /* ty=Tensor[(14, 2, 12), int32] */
}

def @func_8488() -> (Tensor[(2002), int32],) {
  %1143 = @func_8462() /* ty=(Tensor[(2002), int32],) */;
  %1144 = %1143.0;
  (%1144,)
}

def @func_6480() -> (Tensor[(12, 15, 4), float32],) {
  %1146 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %1145 = @func_3679() /* ty=Tensor[(12, 15, 4), float32] */;
    (%1145,)
  };
  %1146() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_10127() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  @func_10125() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_2634() -> (Tensor[(12, 15, 4), float32],) {
  %1149 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %1147 = @func_2502() /* ty=(Tensor[(12, 15, 4), float32],) */;
    %1148 = %1147.0;
    (%1148,)
  };
  %1149() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @func_8919() -> (Tensor[(14, 2, 12), int32],) {
  %1150 = @func_8448() /* ty=(Tensor[(14, 2, 12), int32],) */;
  %1151 = %1150.0;
  (%1151,)
}

def @func_7901(%var_7899: Tensor[(117), float32]) -> (Tensor[(12, 15, 4), float32], Tensor[(39, 3), float32], Tensor[(117), float32]) {
  %1152 = cast(%var_7899, dtype="float32") /* ty=Tensor[(117), float32] */;
  %1153 = reshape(%1152, newshape=[39, 3]) /* ty=Tensor[(39, 3), float32] */;
  %1154 = @func_7306(%1153) /* ty=(Tensor[(39, 3), float32], Tensor[(14, 2, 12), float32], Tensor[(336), float32]) */;
  %1155 = @func_5445() /* ty=Tensor[(12, 15, 4), float32] */;
  %1156 = %1154.0;
  (%1155, %1156, %var_7899)
}

def @func_5318() -> (Tensor[(12, 15, 4), float32],) {
  %1157 = @func_3988() /* ty=Tensor[(12, 15, 4), float32] */;
  (%1157,)
}

def @func_6517(%var_6508: Tensor[(48), float32]) -> (Tensor[(12, 15, 4), float32], float64, Tensor[(8, ?, 6), int64]) {
  %1158 = @func_5318() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %1159 = cast(%var_6508, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1160 = cast(-5.52437f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1161 = reshape(%1159, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %1162 = reshape(%1160, newshape=[]) /* ty=float64 */;
  %1163 = @func_5530(%1161, %1162) /* ty=(Tensor[(8, 1, 6), float32], Tensor[(12, 10, 8), float64], float64, Tensor[(10, 96), float64]) */;
  %1164 = %1163.0;
  %1165 = cast(%var_6508, dtype="int64") /* ty=Tensor[(48), int64] */;
  %1166 = shape_of(%1164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1167 = cast(%1164, dtype="int64") /* ty=Tensor[(8, 1, 6), int64] */;
  %1168 = dyn.reshape(%1165, %1166, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1169 = %1158.0;
  %1170 = add(%1167, %1168) /* ty=Tensor[(8, ?, 6), int64] */;
  (%1169, -5.52437f64 /* ty=float64 */, %1170)
}

def @func_7939(%var_7914: Tensor[(14, 11, 3), float32]) -> (Tensor[(14, 11, 3), float32], Tensor[(14, 11, 3), bool], Tensor[(12, 15, 4), float32]) {
  %1171 = cast(meta[relay.Constant][64] /* ty=Tensor[(14, 11, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 3), float32] */;
  %1172 = shape_of(%var_7914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1173 = cast(%var_7914, dtype="float32") /* ty=Tensor[(14, 11, 3), float32] */;
  %1174 = dyn.reshape(%1171, %1172, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1175 = cast(%var_7914, dtype="bool") /* ty=Tensor[(14, 11, 3), bool] */;
  %1176 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(14, 11, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1177 = cast(meta[relay.Constant][64] /* ty=Tensor[(14, 11, 3), float32] */, dtype="bool") /* ty=Tensor[(14, 11, 3), bool] */;
  %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1179 = @func_7861() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */;
  %1180 = floor_divide(%1173, %1174) /* ty=Tensor[(14, 11, 3), float32] */;
  %1181 = logical_and(%1177, %1178) /* ty=Tensor[(14, 11, 3), bool] */;
  %1182 = %1179.2;
  (%1180, %1181, %1182)
}

def @func_5844() -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
  %1185 = fn () -> (Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) {
    %1183 = @func_3875() /* ty=Tensor[(12, 15, 4), float32] */;
    %1184 = @func_2746() /* ty=Tensor[(12, 15, 4), float32] */;
    (%1183, %1184)
  };
  %1185() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(12, 15, 4), float32]) */
}

def @func_7044() -> (Tensor[(12, 15, 4), float32], Tensor[(16, 5, 13), float64], Tensor[(2, 88), int16]) {
  @func_7042() /* ty=(Tensor[(12, 15, 4), float32], Tensor[(16, 5, 13), float64], Tensor[(2, 88), int16]) */
}

def @func_12300(%var_12288: Tensor[(13, 15, 3), float64]) -> Tensor[(13, 15, 3), float64] {
  %1186 = cast(%var_12288, dtype="float64") /* ty=Tensor[(13, 15, 3), float64] */;
  atan(%1186) /* ty=Tensor[(13, 15, 3), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen518/build/output.py:3705: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen518/build/output.py", line 3710, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(144) tvmgen_default_fused_sin_kernel0(double* __restrict__ T_sin, double* __restrict__ placeholder) {
  T_sin[(((int)threadIdx.x))] = sin(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


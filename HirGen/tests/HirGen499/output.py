import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_205 = relay.const(4.003035, dtype = "float64")#candidate|205|()|const|float64
var_206 = relay.var("var_206", dtype = "float64", shape = (2, 14, 2))#candidate|206|(2, 14, 2)|var|float64
bop_207 = relay.greater(const_205.astype('bool'), var_206.astype('bool')) # shape=(2, 14, 2)
output = bop_207
output2 = bop_207
func_211 = relay.Function([var_206,], output)
mod['func_211'] = func_211
mod = relay.transform.InferType()(mod)
mutated_mod['func_211'] = func_211
mutated_mod = relay.transform.InferType()(mutated_mod)
var_212 = relay.var("var_212", dtype = "float64", shape = (2, 14, 2))#candidate|212|(2, 14, 2)|var|float64
func_211_call = mutated_mod.get_global_var('func_211')
call_213 = func_211_call(var_212)
output = call_213
func_214 = relay.Function([var_212], output)
mutated_mod['func_214'] = func_214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_269 = relay.var("var_269", dtype = "int8", shape = (1, 13, 4))#candidate|269|(1, 13, 4)|var|int8
var_270 = relay.var("var_270", dtype = "int8", shape = (7, 13, 4))#candidate|270|(7, 13, 4)|var|int8
bop_271 = relay.equal(var_269.astype('bool'), var_270.astype('bool')) # shape=(7, 13, 4)
output = bop_271
output2 = bop_271
func_286 = relay.Function([var_269,var_270,], output)
mod['func_286'] = func_286
mod = relay.transform.InferType()(mod)
var_287 = relay.var("var_287", dtype = "int8", shape = (1, 13, 4))#candidate|287|(1, 13, 4)|var|int8
var_288 = relay.var("var_288", dtype = "int8", shape = (7, 13, 4))#candidate|288|(7, 13, 4)|var|int8
output = func_286(var_287,var_288,)
func_289 = relay.Function([var_287,var_288,], output)
mutated_mod['func_289'] = func_289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_403 = relay.var("var_403", dtype = "float32", shape = (12, 1, 6))#candidate|403|(12, 1, 6)|var|float32
uop_404 = relay.cosh(var_403.astype('float32')) # shape=(12, 1, 6)
func_286_call = mod.get_global_var('func_286')
func_289_call = mutated_mod.get_global_var('func_289')
var_410 = relay.var("var_410", dtype = "int8", shape = (52, 1))#candidate|410|(52, 1)|var|int8
var_411 = relay.var("var_411", dtype = "int8", shape = (7, 52))#candidate|411|(7, 52)|var|int8
call_409 = func_286_call(relay.reshape(var_410.astype('int8'), [1, 13, 4]), relay.reshape(var_411.astype('int8'), [7, 13, 4]), )
call_412 = func_286_call(relay.reshape(var_410.astype('int8'), [1, 13, 4]), relay.reshape(var_411.astype('int8'), [7, 13, 4]), )
output = relay.Tuple([uop_404,call_409,var_410,var_411,])
output2 = relay.Tuple([uop_404,call_412,var_410,var_411,])
func_422 = relay.Function([var_403,var_410,var_411,], output)
mod['func_422'] = func_422
mod = relay.transform.InferType()(mod)
mutated_mod['func_422'] = func_422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_422_call = mutated_mod.get_global_var('func_422')
var_424 = relay.var("var_424", dtype = "float32", shape = (12, 1, 6))#candidate|424|(12, 1, 6)|var|float32
var_425 = relay.var("var_425", dtype = "int8", shape = (52, 1))#candidate|425|(52, 1)|var|int8
var_426 = relay.var("var_426", dtype = "int8", shape = (7, 52))#candidate|426|(7, 52)|var|int8
call_423 = func_422_call(var_424,var_425,var_426,)
output = call_423
func_427 = relay.Function([var_424,var_425,var_426,], output)
mutated_mod['func_427'] = func_427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_465 = relay.var("var_465", dtype = "uint8", shape = ())#candidate|465|()|var|uint8
const_466 = relay.const([[[5,9,5,7,3,4],[4,8,9,7,-8,10],[-8,8,6,-5,2,-10],[-7,-7,-5,-6,6,-10],[5,7,-2,-5,5,-8],[-9,-5,-6,-8,-1,1],[-5,-6,-10,8,-6,1],[3,6,9,-10,-6,1],[-9,3,5,8,1,-1]],[[-10,8,-7,4,7,7],[-6,8,3,6,-10,3],[-4,-5,7,-8,6,-5],[-5,10,-10,9,3,10],[7,-9,-6,2,5,5],[-3,1,8,-4,-6,8],[1,-4,3,2,1,-8],[-8,-6,-8,-7,5,4],[-5,-10,-3,6,4,-10]],[[-3,8,8,10,-6,10],[-7,-9,-6,-8,9,9],[4,6,3,-6,8,10],[-2,1,7,4,-8,-6],[3,-5,-10,6,8,-4],[8,9,6,2,-2,-5],[-6,-2,-3,-1,2,1],[-10,10,9,-1,3,-2],[3,-6,9,-5,2,9]],[[6,2,-6,4,9,4],[-5,4,-8,9,-10,-6],[8,-4,-9,-6,5,-6],[2,-8,3,3,-8,-8],[-1,8,1,2,7,10],[1,2,-7,-8,8,3],[8,9,-3,4,3,-7],[8,-4,5,3,-3,1],[-3,10,-5,-5,9,2]],[[-3,5,-10,10,2,-5],[1,5,2,5,-7,1],[10,-8,9,2,-6,-8],[1,-8,-4,-4,-2,-1],[4,-2,-3,-4,8,-3],[-10,1,-3,-6,-6,1],[-7,7,3,4,5,8],[-10,10,-4,6,-1,-2],[3,1,2,1,7,9]],[[-7,-7,8,8,-10,5],[-5,-8,8,-3,7,4],[7,9,3,-6,-10,3],[-10,5,1,-4,2,5],[3,3,-1,9,2,4],[5,-8,-2,-10,-1,-4],[8,-1,9,2,-3,2],[-2,3,-1,1,-4,-9],[-1,-1,-6,9,1,6]],[[-7,6,3,-5,10,-1],[5,-5,5,5,2,10],[-1,4,8,-3,-8,6],[-6,-10,-9,7,5,2],[7,5,5,1,-4,-7],[-7,-9,9,8,-4,-6],[-9,6,-7,5,-6,-5],[-8,5,3,6,2,7],[-9,-1,-5,-6,1,10]],[[8,4,-6,5,7,-7],[1,10,-7,9,4,-10],[6,-3,8,5,-7,-2],[-9,-8,-8,-9,-8,-4],[-8,4,-4,10,8,7],[7,4,2,-8,4,1],[2,-2,-3,-9,9,4],[6,3,7,2,3,-7],[-3,-10,-2,-10,3,7]],[[8,6,9,-1,3,-9],[-6,-4,8,-8,8,-9],[-2,-7,8,-10,1,-4],[-5,-5,2,1,-6,9],[-8,-6,-8,9,3,5],[-1,10,1,4,10,6],[-7,2,-2,9,9,-6],[-10,6,-10,-9,-4,-7],[-2,2,-4,5,-7,-5]],[[7,9,-9,4,-10,5],[1,-3,2,1,2,-7],[4,-6,-1,10,-4,6],[3,-3,2,5,1,-8],[7,-6,-3,-7,-6,-9],[-5,7,-7,-1,4,-5],[3,10,7,6,7,7],[6,10,7,1,8,1],[2,8,-7,2,5,1]],[[-10,-10,-10,1,-10,-8],[-8,-9,8,4,2,-3],[6,-9,9,-7,-9,-8],[-5,-3,-9,2,-1,-6],[10,8,-1,-3,8,2],[-3,6,5,9,2,4],[4,-1,-6,-5,-6,-2],[-3,5,-8,9,-5,1],[9,-9,3,-4,-9,1]]], dtype = "uint8")#candidate|466|(11, 9, 6)|const|uint8
bop_467 = relay.subtract(var_465.astype('uint8'), const_466.astype('uint8')) # shape=(11, 9, 6)
func_422_call = mod.get_global_var('func_422')
func_427_call = mutated_mod.get_global_var('func_427')
var_472 = relay.var("var_472", dtype = "float32", shape = (72,))#candidate|472|(72,)|var|float32
var_473 = relay.var("var_473", dtype = "int8", shape = (52,))#candidate|473|(52,)|var|int8
const_474 = relay.const([[4,-8,1,-6],[3,1,-9,7],[-8,-5,7,6],[-8,4,-8,8],[4,-7,-3,1],[-4,-8,-5,-7],[8,-7,-5,2],[9,-5,-8,9],[8,1,8,1],[-2,-7,6,8],[-7,10,10,-7],[5,8,-6,-9],[2,10,-10,3],[10,1,-7,3],[-5,-8,-2,-6],[1,-4,10,5],[-3,-3,8,9],[10,-5,8,-1],[-10,8,7,10],[-7,-7,10,-10],[-7,-10,-10,2],[-6,7,6,6],[10,-7,-7,5],[5,-2,3,10],[4,-4,8,6],[-6,9,-2,7],[1,9,3,4],[5,3,-8,10],[2,6,-2,5],[5,10,-8,-9],[1,9,-1,3],[8,4,8,8],[9,-3,6,9],[-1,1,5,10],[-10,-1,-1,7],[-10,-3,-6,-2],[5,-6,-3,-6],[-5,4,9,-10],[-3,9,5,1],[-8,6,7,9],[-1,-7,-1,9],[-2,-9,-6,-1],[10,-3,8,8],[10,10,-2,-1],[5,7,1,-5],[8,-3,3,-5],[3,-5,2,7],[-9,-1,-7,2],[-10,-9,7,-3],[7,3,-9,-2],[6,3,1,10],[-8,-1,-3,8],[-3,6,10,7],[5,-7,8,-9],[7,2,6,7],[5,9,-10,3],[4,5,9,1],[-4,2,-8,-8],[-5,-2,-6,-4],[-9,-1,2,4],[3,9,-5,-10],[9,-3,-5,3],[-5,10,5,2],[-9,-3,-7,4],[-8,4,3,2],[-7,10,-8,-9],[-9,-4,-5,6],[-7,2,8,4],[8,9,3,5],[8,2,-10,1],[-2,-4,1,-10],[1,-4,7,-4],[7,8,5,-4],[1,-9,8,2],[6,8,6,-8],[9,3,-10,-3],[-10,-1,-6,-8],[-10,10,8,8],[6,1,-4,-8],[-9,-1,7,7],[6,-2,2,1],[-6,8,3,-8],[-1,-2,6,-10],[-10,-3,6,8],[-10,6,10,-4],[8,-2,9,1],[-7,-7,-2,9],[7,-3,-3,-4],[-1,7,-8,10],[6,-9,2,-8],[-5,-3,1,1]], dtype = "int8")#candidate|474|(91, 4)|const|int8
call_471 = relay.TupleGetItem(func_422_call(relay.reshape(var_472.astype('float32'), [12, 1, 6]), relay.reshape(var_473.astype('int8'), [52, 1]), relay.reshape(const_474.astype('int8'), [7, 52]), ), 2)
call_475 = relay.TupleGetItem(func_427_call(relay.reshape(var_472.astype('float32'), [12, 1, 6]), relay.reshape(var_473.astype('int8'), [52, 1]), relay.reshape(const_474.astype('int8'), [7, 52]), ), 2)
output = relay.Tuple([bop_467,call_471,var_472,var_473,const_474,])
output2 = relay.Tuple([bop_467,call_475,var_472,var_473,const_474,])
func_484 = relay.Function([var_465,var_472,var_473,], output)
mod['func_484'] = func_484
mod = relay.transform.InferType()(mod)
mutated_mod['func_484'] = func_484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_484_call = mutated_mod.get_global_var('func_484')
var_486 = relay.var("var_486", dtype = "uint8", shape = ())#candidate|486|()|var|uint8
var_487 = relay.var("var_487", dtype = "float32", shape = (72,))#candidate|487|(72,)|var|float32
var_488 = relay.var("var_488", dtype = "int8", shape = (52,))#candidate|488|(52,)|var|int8
call_485 = func_484_call(var_486,var_487,var_488,)
output = call_485
func_489 = relay.Function([var_486,var_487,var_488,], output)
mutated_mod['func_489'] = func_489
mutated_mod = relay.transform.InferType()(mutated_mod)
var_585 = relay.var("var_585", dtype = "float64", shape = (3, 4, 6))#candidate|585|(3, 4, 6)|var|float64
uop_586 = relay.log(var_585.astype('float64')) # shape=(3, 4, 6)
output = uop_586
output2 = uop_586
func_588 = relay.Function([var_585,], output)
mod['func_588'] = func_588
mod = relay.transform.InferType()(mod)
var_589 = relay.var("var_589", dtype = "float64", shape = (3, 4, 6))#candidate|589|(3, 4, 6)|var|float64
output = func_588(var_589)
func_590 = relay.Function([var_589], output)
mutated_mod['func_590'] = func_590
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1248 = relay.const([[[-8,10,5,9,5,-7,-1,-10,8,10,-5,-6],[-2,-5,10,-8,2,-6,-5,-6,-9,3,-10,2],[3,9,-2,6,-4,2,-2,-4,-10,3,9,6],[-4,7,3,2,-3,3,-10,3,2,7,6,8],[4,-1,-1,-9,7,-9,-7,-8,5,-10,-2,6],[8,10,5,-10,-9,1,8,-7,8,-7,8,-9],[-9,-8,2,7,-7,6,4,2,8,3,5,-3],[5,-10,-5,8,6,3,9,-9,-6,2,-2,-3],[-8,-8,-6,6,9,6,4,6,-9,-9,-2,7],[-7,7,-3,-2,7,-6,1,6,-9,-5,-6,3],[3,-6,-4,10,1,-1,-8,-7,-4,-7,6,-4],[8,8,-2,3,-4,-8,-1,-10,-8,7,7,-10],[-7,-6,4,8,1,8,-6,7,-10,-10,5,-1],[2,-8,4,-10,9,-3,-7,-5,-6,10,-5,-10],[3,-6,-10,1,7,-5,-9,3,10,-1,9,-5]],[[-10,-5,-3,-2,6,5,6,-2,-7,-5,1,-6],[-4,-7,-2,7,7,-7,-8,-7,6,2,9,-5],[8,-5,-6,9,-8,4,-9,2,-3,-6,-9,-5],[4,6,-1,10,-9,-10,7,-8,8,-5,-2,-4],[-7,8,-3,10,10,3,-5,3,-9,10,4,3],[9,-10,-6,-8,5,8,8,-7,1,10,-4,-1],[-7,1,8,-1,1,-10,6,-7,-5,-10,2,-1],[-9,9,5,-6,-1,-4,-10,-10,8,7,9,6],[-10,6,6,-5,8,10,-5,8,5,7,-6,-8],[6,-10,-1,10,3,-5,3,7,7,-7,-4,-10],[-6,8,-3,-8,-2,-5,-5,8,1,10,-7,-7],[4,7,-8,9,-4,-10,3,-8,-8,-2,10,-2],[5,-6,1,-7,7,3,2,3,-10,5,-1,-10],[5,-2,2,-7,10,-9,7,3,1,1,-1,1],[5,5,-6,7,-9,-8,6,9,-9,4,6,1]],[[-5,-3,7,8,-8,10,-1,7,7,-10,1,7],[-10,7,10,3,10,-4,10,9,-6,-3,-7,7],[-6,-6,-8,6,-8,4,-10,-3,-7,-5,10,4],[-6,-3,7,-8,-10,-9,-1,-8,9,5,3,10],[-7,-4,3,-5,6,4,9,-6,8,9,4,6],[-9,5,-3,9,-1,8,-2,-5,-10,-2,10,-10],[-7,6,6,7,7,7,-8,-1,-1,5,4,2],[6,5,-5,-4,5,4,-4,-7,4,2,-10,10],[-3,-5,-4,3,2,-6,4,-9,-10,10,-5,-8],[1,-10,-4,-10,-5,6,-3,-9,-6,2,-5,-10],[-4,-10,7,8,7,-9,-8,9,-6,-3,3,-2],[5,2,-4,4,5,5,-1,10,-10,-10,-7,-4],[-6,-2,6,-2,9,-2,6,-9,1,3,-8,3],[-1,10,4,3,-8,-2,10,-7,8,1,7,-7],[5,-2,4,-5,-10,4,-7,-5,3,-1,-1,-1]],[[-8,-5,4,5,1,-4,-5,-9,-6,-1,2,-9],[-3,-10,-9,-3,5,3,-9,9,-10,-6,-4,9],[10,2,-8,-10,1,5,-1,8,6,5,2,7],[9,-6,-8,4,9,-1,8,5,-9,1,1,-8],[-3,-2,1,8,1,-4,2,-7,5,-5,-9,-4],[3,2,7,10,-5,8,2,-5,-1,-3,8,-4],[-8,-5,1,7,7,7,9,7,-10,1,10,-6],[-6,5,-9,-6,10,-5,-5,5,2,-7,1,-7],[8,4,4,10,-1,6,4,10,-5,4,-9,-1],[5,4,-3,-9,-8,10,7,6,5,-1,-3,-4],[7,-8,1,9,-9,-3,5,3,9,7,-3,5],[4,8,6,-8,2,-1,-7,-10,-3,-9,7,2],[-3,-1,4,4,-1,-7,-6,1,-3,2,3,6],[-5,4,7,7,7,-6,-1,8,5,-10,-4,-9],[-3,9,-3,4,2,-1,4,-8,-3,1,-7,7]],[[-6,-4,-9,-9,6,-10,3,-10,-2,3,-6,-8],[-5,6,-7,7,1,6,-6,2,-3,4,8,10],[-2,7,-3,-8,3,-4,6,-6,3,-7,-4,-5],[-3,2,1,-3,-6,1,-7,-10,3,-1,-5,8],[-8,1,3,-9,-2,-10,-5,-4,-5,-2,5,3],[8,-1,-2,3,1,1,7,-2,3,2,5,10],[-2,-4,-6,7,10,9,4,-9,-5,10,-2,-10],[4,-2,-7,-1,-9,-6,-2,1,10,4,-1,10],[5,7,-2,-2,-9,9,1,5,-5,-4,-3,-10],[2,-6,9,8,-5,3,4,-8,-2,-8,-7,2],[3,10,9,-8,6,-6,9,-10,1,-4,3,-7],[-8,-9,-8,-8,4,-7,-10,6,9,10,9,2],[7,4,-9,4,-8,4,-1,8,-2,8,2,-7],[-7,-6,-9,6,-8,6,5,-7,-3,10,-5,9],[5,-1,-3,-7,7,9,-4,2,7,-9,7,5]],[[7,4,-6,-1,-2,8,-1,8,-8,4,3,-4],[-5,3,9,4,5,-9,-10,-10,1,8,2,-9],[-4,-10,2,-7,7,1,-10,-3,10,6,10,-2],[5,-6,9,-7,10,-10,-3,9,1,-5,4,7],[-10,6,10,-5,-8,-2,-6,-10,8,9,10,-1],[-10,3,-6,10,3,8,-1,-10,1,8,3,-4],[-1,-2,2,4,-10,8,7,-2,1,6,10,-5],[-10,-10,2,-5,8,-3,-9,-4,2,-4,9,1],[-5,-4,-3,-6,1,-7,10,3,9,10,-3,-8],[-8,3,-10,1,-1,10,5,10,-2,8,-1,1],[9,8,8,6,-2,-7,-3,-8,3,-2,-4,4],[-9,7,3,8,9,-1,-5,5,6,-2,10,7],[7,-10,10,-8,-6,9,-3,1,-6,-1,1,-8],[7,8,-9,-1,-4,9,4,-5,2,-2,-10,7],[5,-6,-3,5,-6,7,10,4,-8,-8,-10,-5]],[[-4,7,9,-1,-1,3,5,6,-3,-7,-9,-6],[3,1,6,4,-2,5,5,8,-7,2,10,-1],[8,-5,8,6,-5,3,-5,-1,-9,2,6,-10],[2,-5,9,-5,-6,6,4,-5,10,-2,6,6],[2,9,-8,1,2,-10,1,-10,10,1,9,-2],[-6,6,8,9,-9,-9,9,5,-5,-4,4,3],[9,7,10,9,-6,9,-8,-5,7,6,-4,-1],[7,5,-9,-5,-2,8,-4,9,-1,-3,7,8],[1,-1,-4,-4,-8,-4,7,5,4,1,-10,5],[9,2,5,9,3,-1,-2,10,5,-7,5,-2],[-7,6,-5,1,-8,-9,3,9,10,3,-8,-2],[-6,5,-10,10,-4,-5,7,3,8,-8,-4,9],[8,5,-6,9,5,5,3,-3,4,-5,5,-6],[-4,4,-1,3,6,3,7,5,-6,-7,8,7],[9,2,-2,7,-3,5,5,-1,-7,2,-6,6]]], dtype = "int64")#candidate|1248|(7, 15, 12)|const|int64
const_1249 = relay.const([[[-4,4,-8,5,-8,4,-6,9,8,-1,-6,2],[3,-8,4,7,-2,-3,-6,4,9,-9,10,2],[-1,-2,7,6,-3,-10,-6,5,6,10,6,-5],[1,-9,-3,8,5,9,-6,-1,1,-8,-8,5],[-10,-7,1,1,-7,5,-3,-6,-3,-2,1,-9],[-7,-9,7,9,3,6,-10,-7,9,-9,-3,3],[-9,4,-8,-4,10,-8,-9,6,4,5,-9,3],[4,-10,-8,-2,6,8,-9,-9,-8,-7,7,-1],[5,7,8,-10,5,-9,1,-1,-7,2,-3,-4],[9,10,-3,9,4,-2,7,9,1,4,-9,-2],[-3,-2,-7,-9,-6,-4,-7,8,6,-8,-3,-4],[2,8,-2,8,5,4,-6,8,-10,-2,-3,10],[2,4,-2,-10,6,-8,10,-4,7,7,-8,7],[9,-7,-4,4,5,-1,-8,-3,-3,-1,-8,6],[-2,1,9,-10,-9,-3,-3,9,6,-5,5,9]],[[9,-8,4,4,-10,7,-5,8,-3,-7,7,-6],[-9,9,7,1,5,-2,-7,6,1,7,-2,10],[-5,4,4,-8,1,7,3,-5,-9,-1,5,-2],[-3,-2,5,10,10,5,-6,-7,8,6,-1,-2],[-7,-7,-10,-9,-9,8,7,-5,4,1,10,-8],[1,2,4,-4,-6,-5,1,9,-9,5,5,-10],[-7,10,8,-8,3,-3,-3,-9,-8,-5,-10,-1],[3,2,-6,-8,5,4,7,4,-3,4,4,7],[10,2,-8,7,-1,-9,1,-1,7,-10,7,-2],[-1,-6,-2,10,5,-1,7,6,7,6,-5,4],[4,6,-8,-2,7,-5,-3,2,-8,-2,-9,4],[6,-3,7,-2,-1,-2,7,9,4,-4,10,-6],[8,-3,6,4,7,2,-5,5,-5,7,1,-5],[-2,3,-6,10,4,-3,-1,6,-6,-2,-5,9],[3,1,3,-2,-6,7,-1,7,2,-10,9,-3]],[[-4,-6,-3,8,-2,-2,4,8,-9,5,-3,7],[-4,-10,-3,-8,9,8,10,10,5,-4,7,1],[8,6,-10,-9,-2,-7,-6,-3,-10,7,-9,1],[8,-2,-9,1,-1,-3,1,-5,-2,1,-1,3],[7,3,-6,9,10,-10,-6,-8,-7,-8,-4,-5],[-7,-6,-3,10,-8,6,-7,-9,4,-8,10,7],[-7,-10,-10,-9,1,7,-4,-2,10,-8,2,-4],[9,-9,7,8,3,-7,3,1,-9,8,5,-8],[9,-4,5,7,9,5,-4,-2,-3,1,4,9],[-10,9,-6,-10,2,6,-1,3,1,-8,3,1],[8,1,1,5,7,-7,-8,-8,3,8,-6,-6],[9,9,1,-7,1,-10,7,6,-9,5,-3,8],[4,10,8,-7,9,8,-6,-10,2,1,-5,-1],[1,-2,10,8,9,-6,-7,4,6,7,-9,-1],[9,10,9,10,1,2,-3,5,-2,7,-1,7]],[[-6,-3,5,8,6,-10,3,-6,-2,-4,-3,-5],[10,-6,4,2,8,-7,-9,-9,-6,3,8,4],[8,-3,8,5,1,-1,-5,-8,-8,7,1,4],[4,-9,-7,-2,-10,5,4,-8,-3,1,1,4],[4,7,-7,5,10,-6,6,3,3,-5,-10,-2],[-1,-5,-2,-2,-10,4,-1,3,-2,8,4,-5],[1,-4,5,8,-10,-6,1,9,-6,3,1,-9],[-4,2,-2,5,-8,-4,4,7,-4,6,-3,-9],[9,8,-9,-4,8,8,-4,-1,1,-5,9,9],[-9,1,10,-2,-3,1,-9,-2,3,-5,5,1],[-3,-1,10,-6,-6,10,-8,-7,3,2,2,-9],[5,4,-1,-4,-9,7,-6,8,-1,-10,-1,9],[-2,7,4,-1,-3,-9,-7,-9,9,-8,2,-8],[2,-1,4,10,2,2,-5,-6,-9,3,9,4],[1,-4,-8,5,2,-5,-7,-4,2,6,2,-8]],[[-5,7,-4,-2,5,-7,2,-2,-9,1,-4,4],[3,-7,-1,4,-5,-2,3,1,1,8,-9,8],[-9,-3,-3,1,8,1,-3,5,-7,5,10,6],[6,-3,-8,3,9,2,-5,-10,-3,10,5,1],[10,-9,-4,2,-3,-4,-5,8,-3,7,-5,10],[-7,1,-6,1,-8,6,7,1,2,-9,-2,-4],[9,-4,-8,2,3,-5,-6,4,-7,8,-10,-2],[-4,-1,1,-3,7,-5,-10,-2,10,3,-6,-10],[9,6,6,-2,-2,9,8,-4,-7,-4,3,1],[5,-9,-1,5,6,-1,-3,5,6,9,-5,-3],[-1,9,-10,9,-2,-6,7,7,5,8,-1,-1],[8,-2,-2,-3,-1,9,3,-9,-4,2,-8,-7],[-4,-9,9,-1,2,9,-10,9,7,5,3,6],[10,-1,4,-9,4,-5,-10,9,4,5,4,-5],[1,-2,-3,6,-6,-2,-4,3,1,-10,-4,2]],[[-10,-2,-3,5,9,2,6,7,-4,4,-2,-5],[-5,-1,-7,7,-9,10,-9,8,2,2,-8,2],[10,10,-5,2,-2,-10,-7,4,7,-10,1,-4],[9,-3,-7,-7,-2,-8,3,-8,-6,-4,7,-10],[4,-1,-9,-9,3,5,8,-10,10,9,9,-10],[8,-9,-2,9,1,2,-7,10,5,-3,-1,3],[-10,-5,-2,7,9,-4,6,-8,5,9,-4,-3],[6,2,-10,9,1,-2,-10,-4,-4,-9,-2,-7],[10,-9,5,-3,-2,8,-4,-2,2,-8,3,-9],[-10,5,-9,1,8,-2,-5,-6,2,7,-1,-8],[2,-5,-10,2,-7,4,-1,3,-4,-4,2,6],[-4,-9,-1,-9,-7,-10,1,6,8,1,-4,9],[-1,-9,-3,-10,-7,1,10,-2,4,-3,-1,2],[9,-9,8,-3,10,-6,4,-9,7,-8,10,1],[2,-1,-2,-4,-6,4,-2,-5,-8,7,-8,-2]],[[6,9,1,-2,-5,8,5,8,7,-5,10,3],[-2,-1,-5,-5,-6,9,-8,10,3,1,-10,-7],[-3,-5,-2,-3,9,7,9,-6,-10,-2,-5,10],[-10,8,-9,8,9,7,4,-8,-3,6,8,-7],[-9,7,-1,4,7,1,6,10,-5,-7,-6,-9],[-1,-1,8,-9,6,3,-4,-9,8,9,-1,9],[5,-4,-4,-9,1,6,-7,8,-3,-1,5,-8],[-1,-7,5,10,-4,10,-9,-3,-9,10,5,1],[7,5,-3,-7,9,7,-1,-5,-1,-5,5,9],[-8,-2,-6,-3,7,7,10,-4,-7,4,-10,-5],[5,3,9,-6,2,-1,10,-1,1,-9,-1,1],[-6,10,-5,10,4,-2,5,1,5,-4,-6,-4],[-5,2,-5,-8,10,-10,-2,5,-4,-10,-4,-4],[10,5,-7,5,-9,-9,-9,-7,4,4,-8,1],[-7,-10,-1,1,6,-7,5,6,10,10,2,-10]]], dtype = "int64")#candidate|1249|(7, 15, 12)|const|int64
bop_1250 = relay.greater(const_1248.astype('bool'), relay.reshape(const_1249.astype('bool'), relay.shape_of(const_1248))) # shape=(7, 15, 12)
func_484_call = mod.get_global_var('func_484')
func_489_call = mutated_mod.get_global_var('func_489')
var_1257 = relay.var("var_1257", dtype = "uint8", shape = ())#candidate|1257|()|var|uint8
const_1258 = relay.const([-1.146189,-4.861725,8.162378,-8.107049,3.764051,9.296426,-3.388151,1.939315,-9.747496,-1.069937,9.256005,8.796563,-8.971936,1.476115,8.286169,0.818749,1.555254,0.474810,-2.000188,-0.743081,-4.250933,-0.997593,9.776231,-8.517884,-7.994039,5.244561,-7.043089,0.780991,-1.543006,6.186739,1.698275,6.014224,-9.298712,2.921843,2.693211,-3.627711,9.955241,-1.373289,2.110434,5.372849,3.148142,8.122342,9.057147,-6.775468,9.831197,7.330412,-5.077357,2.413673,3.878177,4.290827,3.163856,3.423528,-2.461893,2.819265,-3.590704,6.444680,8.013596,-9.593583,8.257751,0.653707,-7.518509,-4.042446,3.912252,8.713458,-0.704329,0.568658,-4.437416,8.593847,-4.870977,-3.852432,9.800228,-4.794401], dtype = "float32")#candidate|1258|(72,)|const|float32
var_1259 = relay.var("var_1259", dtype = "int8", shape = (52,))#candidate|1259|(52,)|var|int8
call_1256 = relay.TupleGetItem(func_484_call(relay.reshape(var_1257.astype('uint8'), []), relay.reshape(const_1258.astype('float32'), [72,]), relay.reshape(var_1259.astype('int8'), [52,]), ), 4)
call_1260 = relay.TupleGetItem(func_489_call(relay.reshape(var_1257.astype('uint8'), []), relay.reshape(const_1258.astype('float32'), [72,]), relay.reshape(var_1259.astype('int8'), [52,]), ), 4)
func_211_call = mod.get_global_var('func_211')
func_214_call = mutated_mod.get_global_var('func_214')
const_1286 = relay.const([9.913069,7.783224,-8.282294,1.469448,9.010746,-5.459985,-7.067146,-6.536415,1.947518,7.691200,0.904036,-7.443922,9.963294,-8.489970,-7.967216,1.852451,-3.006361,1.149292,9.454109,1.131280,-0.965276,-4.584776,-0.783702,-7.363034,-9.598449,5.151798,7.081578,0.703538,-7.724763,-2.689551,-3.124381,-8.592030,-3.413803,0.991266,-7.285257,8.763531,-3.057015,3.049927,-0.466299,-2.857894,0.655947,-9.870276,0.037741,6.900914,3.238583,-4.712529,-3.983897,3.711225,-3.210037,-4.314149,0.813526,-4.664198,2.775676,6.662448,2.438599,-4.224734], dtype = "float64")#candidate|1286|(56,)|const|float64
call_1285 = func_211_call(relay.reshape(const_1286.astype('float64'), [2, 14, 2]))
call_1287 = func_211_call(relay.reshape(const_1286.astype('float64'), [2, 14, 2]))
func_422_call = mod.get_global_var('func_422')
func_427_call = mutated_mod.get_global_var('func_427')
call_1294 = relay.TupleGetItem(func_422_call(relay.reshape(const_1258.astype('float32'), [12, 1, 6]), relay.reshape(var_1259.astype('int8'), [52, 1]), relay.reshape(call_1256.astype('int8'), [7, 52]), ), 2)
call_1295 = relay.TupleGetItem(func_427_call(relay.reshape(const_1258.astype('float32'), [12, 1, 6]), relay.reshape(var_1259.astype('int8'), [52, 1]), relay.reshape(call_1256.astype('int8'), [7, 52]), ), 2)
output = relay.Tuple([bop_1250,call_1256,var_1257,const_1258,var_1259,call_1285,const_1286,call_1294,])
output2 = relay.Tuple([bop_1250,call_1260,var_1257,const_1258,var_1259,call_1287,const_1286,call_1295,])
func_1321 = relay.Function([var_1257,var_1259,], output)
mod['func_1321'] = func_1321
mod = relay.transform.InferType()(mod)
var_1322 = relay.var("var_1322", dtype = "uint8", shape = ())#candidate|1322|()|var|uint8
var_1323 = relay.var("var_1323", dtype = "int8", shape = (52,))#candidate|1323|(52,)|var|int8
output = func_1321(var_1322,var_1323,)
func_1324 = relay.Function([var_1322,var_1323,], output)
mutated_mod['func_1324'] = func_1324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1468 = relay.var("var_1468", dtype = "float64", shape = (3, 1, 3))#candidate|1468|(3, 1, 3)|var|float64
uop_1469 = relay.acosh(var_1468.astype('float64')) # shape=(3, 1, 3)
output = relay.Tuple([uop_1469,])
output2 = relay.Tuple([uop_1469,])
func_1471 = relay.Function([var_1468,], output)
mod['func_1471'] = func_1471
mod = relay.transform.InferType()(mod)
mutated_mod['func_1471'] = func_1471
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1472 = relay.var("var_1472", dtype = "float64", shape = (3, 1, 3))#candidate|1472|(3, 1, 3)|var|float64
func_1471_call = mutated_mod.get_global_var('func_1471')
call_1473 = func_1471_call(var_1472)
output = call_1473
func_1474 = relay.Function([var_1472], output)
mutated_mod['func_1474'] = func_1474
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1504 = relay.var("var_1504", dtype = "int16", shape = ())#candidate|1504|()|var|int16
var_1505 = relay.var("var_1505", dtype = "int16", shape = (13, 16, 4))#candidate|1505|(13, 16, 4)|var|int16
bop_1506 = relay.less(var_1504.astype('bool'), var_1505.astype('bool')) # shape=(13, 16, 4)
output = bop_1506
output2 = bop_1506
func_1516 = relay.Function([var_1504,var_1505,], output)
mod['func_1516'] = func_1516
mod = relay.transform.InferType()(mod)
mutated_mod['func_1516'] = func_1516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1516_call = mutated_mod.get_global_var('func_1516')
var_1518 = relay.var("var_1518", dtype = "int16", shape = ())#candidate|1518|()|var|int16
var_1519 = relay.var("var_1519", dtype = "int16", shape = (13, 16, 4))#candidate|1519|(13, 16, 4)|var|int16
call_1517 = func_1516_call(var_1518,var_1519,)
output = call_1517
func_1520 = relay.Function([var_1518,var_1519,], output)
mutated_mod['func_1520'] = func_1520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1699 = relay.var("var_1699", dtype = "uint32", shape = (6, 6, 2))#candidate|1699|(6, 6, 2)|var|uint32
const_1700 = relay.const([[[-3,-8],[-3,2],[-10,-1],[-2,-8],[-9,4],[-6,-5]],[[-9,9],[3,1],[10,-3],[-4,8],[9,4],[6,-6]],[[1,-8],[-9,5],[-1,-3],[-4,-10],[-4,9],[9,-1]],[[7,-2],[1,7],[-6,-7],[10,-2],[8,-7],[8,7]],[[2,9],[3,2],[7,-4],[-9,-8],[-8,9],[9,-8]],[[7,-7],[3,-8],[-2,-8],[8,7],[-3,-6],[2,1]]], dtype = "uint32")#candidate|1700|(6, 6, 2)|const|uint32
bop_1701 = relay.bitwise_xor(var_1699.astype('uint32'), relay.reshape(const_1700.astype('uint32'), relay.shape_of(var_1699))) # shape=(6, 6, 2)
output = relay.Tuple([bop_1701,])
output2 = relay.Tuple([bop_1701,])
func_1725 = relay.Function([var_1699,], output)
mod['func_1725'] = func_1725
mod = relay.transform.InferType()(mod)
var_1726 = relay.var("var_1726", dtype = "uint32", shape = (6, 6, 2))#candidate|1726|(6, 6, 2)|var|uint32
output = func_1725(var_1726)
func_1727 = relay.Function([var_1726], output)
mutated_mod['func_1727'] = func_1727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1816 = relay.var("var_1816", dtype = "float64", shape = (14, 8, 9))#candidate|1816|(14, 8, 9)|var|float64
uop_1817 = relay.rsqrt(var_1816.astype('float64')) # shape=(14, 8, 9)
bop_1824 = relay.greater(uop_1817.astype('bool'), relay.reshape(var_1816.astype('bool'), relay.shape_of(uop_1817))) # shape=(14, 8, 9)
func_422_call = mod.get_global_var('func_422')
func_427_call = mutated_mod.get_global_var('func_427')
const_1835 = relay.const([-1.585630,4.821107,-8.807524,-7.750663,-9.908136,-3.828060,4.358053,5.418238,-2.857758,5.552119,8.601922,-4.540380,-9.204788,6.747525,-0.696283,4.860749,-9.569510,1.201508,2.710716,-2.398271,3.633852,0.409674,0.163735,-0.372780,3.100429,-0.384972,2.566887,8.134742,-5.162072,1.852281,-8.062551,9.769201,6.128471,-1.254144,-8.738846,-3.335159,3.970688,-9.742634,8.304574,-9.889796,4.860592,6.368854,9.854760,-9.034159,1.350989,-9.587234,7.088167,6.077658,-3.265203,8.923421,-5.899411,8.954990,6.230702,-6.706679,-8.236328,0.319011,1.770790,-8.475926,9.543972,-1.417590,2.755932,-5.474494,8.265147,2.550624,8.747511,-5.234387,5.325808,7.558904,-0.481855,1.648315,-6.899767,-4.007408], dtype = "float32")#candidate|1835|(72,)|const|float32
const_1836 = relay.const([9,10,-7,-9,6,6,-7,2,-4,-5,5,3,-4,9,3,-3,3,-10,10,1,-5,-1,-8,4,-6,-6,-3,-10,-10,-8,8,-7,7,-1,-9,10,-1,-6,-5,-10,1,1,-5,-2,-9,-7,-4,-10,-2,-5,-5,-4], dtype = "int8")#candidate|1836|(52,)|const|int8
const_1837 = relay.const([3,3,3,9,10,7,8,2,7,-8,4,-7,-10,3,9,4,-2,-5,-1,-2,-8,-2,-7,2,8,-10,-9,-1,-1,2,-6,10,-3,4,-9,6,-7,4,3,-9,-5,3,-8,-4,1,-7,-4,7,-3,-5,9,-2,10,-2,1,3,-10,1,-1,7,2,-10,-2,-6,-8,-9,-2,3,6,-4,7,-2,-2,-5,7,8,5,-6,5,-1,-4,-1,-1,8,-2,-4,-10,5,9,-8,1,6,3,10,7,-2,4,-7,10,4,-8,8,-5,1,-5,10,4,-10,1,5,-5,-9,2,6,1,-1,-8,-6,-4,-7,-7,-4,5,6,-8,-4,-9,2,8,1,-7,8,-3,-8,-3,-7,2,-1,-5,-4,9,-6,2,-2,-7,10,7,-1,4,9,-6,10,-6,-6,-8,-6,10,-7,-1,3,-4,-5,-2,-3,-8,6,9,-2,4,7,-8,-9,6,-1,5,-8,8,1,-2,8,9,3,-9,2,-3,-5,6,9,10,-1,-3,-5,4,3,-4,-5,-7,10,1,1,-3,-5,2,10,-4,-10,-4,10,-3,-4,-5,10,7,-10,-2,-2,-9,3,-1,-5,8,1,-10,-7,-3,-10,10,-4,7,-5,7,3,4,-7,-1,-9,-8,10,-1,-1,-8,7,-2,-6,7,8,-9,-9,-9,10,-1,-10,1,-6,-6,9,9,-5,6,-8,1,6,10,-4,2,-10,5,1,-1,8,-4,-3,-2,-2,10,-3,9,-2,3,-8,2,-9,10,-4,-6,8,3,3,-2,6,-8,-2,8,-3,-1,-7,1,-3,7,9,4,-5,1,-2,4,2,7,-8,9,8,-4,-7,3,5,-9,-3,-4,-10,6,-5,-10,-2,-2,-3,-4,4,-8,-3,3,10,4,5,-2,2,-6,2,-5,-6,7,-9,2,8,-4,-10,-9,-1,4,1,-10,7,10,-6,6,-2,-3,1,-4,-5,10,-7,6,3,3,-9], dtype = "int8")#candidate|1837|(364,)|const|int8
call_1834 = relay.TupleGetItem(func_422_call(relay.reshape(const_1835.astype('float32'), [12, 1, 6]), relay.reshape(const_1836.astype('int8'), [52, 1]), relay.reshape(const_1837.astype('int8'), [7, 52]), ), 2)
call_1838 = relay.TupleGetItem(func_427_call(relay.reshape(const_1835.astype('float32'), [12, 1, 6]), relay.reshape(const_1836.astype('int8'), [52, 1]), relay.reshape(const_1837.astype('int8'), [7, 52]), ), 2)
output = relay.Tuple([bop_1824,call_1834,const_1835,const_1836,const_1837,])
output2 = relay.Tuple([bop_1824,call_1838,const_1835,const_1836,const_1837,])
func_1841 = relay.Function([var_1816,], output)
mod['func_1841'] = func_1841
mod = relay.transform.InferType()(mod)
mutated_mod['func_1841'] = func_1841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1842 = relay.var("var_1842", dtype = "float64", shape = (14, 8, 9))#candidate|1842|(14, 8, 9)|var|float64
func_1841_call = mutated_mod.get_global_var('func_1841')
call_1843 = func_1841_call(var_1842)
output = call_1843
func_1844 = relay.Function([var_1842], output)
mutated_mod['func_1844'] = func_1844
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1855 = relay.var("var_1855", dtype = "int16", shape = (6, 16, 9))#candidate|1855|(6, 16, 9)|var|int16
var_1856 = relay.var("var_1856", dtype = "int16", shape = (6, 16, 9))#candidate|1856|(6, 16, 9)|var|int16
bop_1857 = relay.not_equal(var_1855.astype('bool'), relay.reshape(var_1856.astype('bool'), relay.shape_of(var_1855))) # shape=(6, 16, 9)
uop_1868 = relay.tan(bop_1857.astype('float64')) # shape=(6, 16, 9)
func_1471_call = mod.get_global_var('func_1471')
func_1474_call = mutated_mod.get_global_var('func_1474')
var_1875 = relay.var("var_1875", dtype = "float64", shape = (9,))#candidate|1875|(9,)|var|float64
call_1874 = relay.TupleGetItem(func_1471_call(relay.reshape(var_1875.astype('float64'), [3, 1, 3])), 0)
call_1876 = relay.TupleGetItem(func_1474_call(relay.reshape(var_1875.astype('float64'), [3, 1, 3])), 0)
output = relay.Tuple([uop_1868,call_1874,var_1875,])
output2 = relay.Tuple([uop_1868,call_1876,var_1875,])
func_1879 = relay.Function([var_1855,var_1856,var_1875,], output)
mod['func_1879'] = func_1879
mod = relay.transform.InferType()(mod)
mutated_mod['func_1879'] = func_1879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1879_call = mutated_mod.get_global_var('func_1879')
var_1881 = relay.var("var_1881", dtype = "int16", shape = (6, 16, 9))#candidate|1881|(6, 16, 9)|var|int16
var_1882 = relay.var("var_1882", dtype = "int16", shape = (6, 16, 9))#candidate|1882|(6, 16, 9)|var|int16
var_1883 = relay.var("var_1883", dtype = "float64", shape = (9,))#candidate|1883|(9,)|var|float64
call_1880 = func_1879_call(var_1881,var_1882,var_1883,)
output = call_1880
func_1884 = relay.Function([var_1881,var_1882,var_1883,], output)
mutated_mod['func_1884'] = func_1884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2016 = relay.var("var_2016", dtype = "float64", shape = (13, 16, 11))#candidate|2016|(13, 16, 11)|var|float64
uop_2017 = relay.exp(var_2016.astype('float64')) # shape=(13, 16, 11)
uop_2021 = relay.asinh(var_2016.astype('float32')) # shape=(13, 16, 11)
const_2030 = relay.const([[[-9.774051,-4.252578,4.306417,2.071409,-2.496915,-3.243392,2.422381,-5.679873,2.934004,5.692203,2.258511],[-0.775532,6.772732,9.486171,6.382623,-0.404823,-0.746064,9.714644,1.461053,4.531015,9.634040,-7.441342],[-6.316013,-8.973376,-7.242398,-7.878941,4.163412,1.709864,-8.819537,-2.609928,9.602178,2.447187,3.889815],[6.594985,-6.111187,-5.294561,-7.146640,-5.169490,0.711364,-8.506017,-9.018838,-9.330659,-1.398952,-3.205739],[-1.222207,-1.280877,-6.634234,-5.250502,-9.136290,-7.986499,-2.791807,-8.596509,4.316877,9.880577,6.158230],[-5.147084,-5.078554,1.895574,-6.485475,-5.141983,-5.683520,9.559693,-2.354704,-5.910410,5.497043,2.812485],[2.442100,9.701801,-0.599289,-1.813838,-9.188565,4.934390,3.489514,5.007978,0.035719,-0.848027,-2.431594],[-8.220726,9.523358,3.545443,2.014793,-9.767460,2.389365,3.507024,-5.791409,1.707373,9.521551,-4.063997],[-9.654476,-0.978170,2.995046,8.208583,-5.183531,-7.637028,8.645401,8.038694,8.812472,1.401581,9.022882],[-6.032769,-9.460797,-5.070520,4.744489,-6.268422,9.824619,9.518288,-6.637801,-7.812573,-5.637684,-0.196069],[2.588978,-5.469950,-3.279106,8.954902,-0.938880,3.569017,9.680391,-9.978912,-6.932876,-2.469686,-6.396112],[-4.492159,7.537507,9.058075,-4.037018,4.124622,6.935655,-2.181901,5.084764,0.833113,7.113644,5.863582],[0.063542,9.190902,-9.265029,6.686552,5.888087,4.332449,-3.779482,-0.604928,4.753416,-0.317542,9.578545],[-3.712359,-3.170734,1.084643,-1.947002,1.154519,-1.559843,-0.043218,-5.505147,5.906145,2.546129,-7.109138],[-0.385494,-6.014275,-8.674634,-7.974375,8.772096,4.196226,9.064671,-7.587226,8.879329,3.712201,-6.300347],[-6.322342,4.146767,5.320115,9.764746,-4.898415,-0.577921,9.041823,-4.266304,5.375238,-2.372827,8.311756]],[[4.447839,1.585586,7.534521,-3.219833,-7.424112,8.649106,2.163277,2.474245,-6.175127,-4.731366,-0.189128],[-7.580989,9.272011,2.875688,-4.075749,8.651598,-1.672694,-6.783541,5.563099,7.558806,3.641549,6.196510],[2.963093,1.503196,5.585103,4.986809,5.070291,-8.219729,1.014474,-0.190909,-4.828443,8.111010,7.592348],[1.280511,-1.394265,-9.377000,0.500242,-9.020736,-2.142453,-8.538561,0.655100,-7.685843,2.875729,-2.129872],[-0.744968,-6.656161,-6.123087,1.222450,1.854195,9.033411,9.805925,-0.481620,9.370982,-3.695908,-9.686723],[4.164750,-3.548499,0.259912,-1.060074,-0.991628,-9.887751,-3.215692,-3.421923,-4.388274,-7.046894,2.060339],[-3.553159,-8.006628,9.779577,0.778503,8.419714,5.375745,-3.586132,-7.996349,-2.903153,1.298230,3.579222],[-9.233010,6.301058,-7.018294,-2.061152,-2.448589,6.468112,-5.002175,1.369563,-9.582074,8.520973,-3.297652],[-6.289298,-6.939052,9.657518,-7.895050,5.608910,-1.569682,5.087420,-7.267002,-3.186213,-3.425412,7.867419],[-9.156079,1.531174,-6.363191,2.549795,-4.460008,0.359625,-3.336737,7.518701,3.303667,3.760759,5.158012],[-9.300029,-6.577243,-6.995657,-5.646541,-3.318247,-8.521819,-3.377952,-7.122901,6.041236,2.374335,6.379972],[4.451480,-4.122044,-8.662356,-0.158625,7.463455,4.281135,-6.287101,-0.795781,-6.752300,5.329012,-8.205038],[2.075093,4.399578,-6.277940,5.847745,1.979459,-5.208331,4.799249,4.449746,-7.706801,2.629207,0.104093],[-3.596269,-9.528037,-4.711427,3.952348,7.941295,8.812444,-8.712228,-9.162524,2.638240,-4.566348,3.957317],[-3.817819,-1.127708,9.199449,8.582146,7.929120,4.688001,-3.853767,5.412933,-0.240458,-5.380891,-9.950875],[6.258703,-3.770343,-0.073751,-1.056218,-1.085310,-5.634187,-6.130463,-9.996520,-4.980525,8.274395,-1.986440]],[[4.611773,0.507743,-8.426109,3.210927,-1.276171,8.308692,-4.556009,-2.819074,-2.676091,0.319843,8.167478],[-4.262157,6.010657,7.194014,-4.087359,-2.073114,7.561903,-3.070229,0.350533,-2.663046,-6.821210,-8.483501],[1.511139,-0.799328,-2.203301,7.050185,8.546664,5.947656,-1.781811,3.188879,-1.786526,2.544393,0.046803],[-5.577390,3.227445,5.324635,-2.430467,-3.718419,-5.303393,1.810102,2.714839,-8.992376,9.281714,3.989036],[-6.910473,-4.841132,6.229109,-0.913895,1.744214,4.144147,-4.823289,0.518024,3.314287,-0.504061,-8.681842],[-0.954337,-2.617241,-0.138792,-7.039682,-8.749581,-3.679959,-9.566726,-8.587671,-7.392456,4.463016,-5.252449],[-5.610120,-0.376374,-3.607737,1.687841,6.960325,-5.511476,-0.729760,0.314954,-1.375851,9.104331,-6.005303],[-3.302469,5.843363,5.929659,4.261924,-9.197923,8.507694,1.085488,0.667839,-4.580431,-8.062898,3.256087],[1.271786,3.488278,-0.427954,-6.084818,-1.856699,6.394729,7.474921,-5.569573,-0.778485,8.389875,-8.309006],[5.240709,2.291536,-7.901963,-3.967713,3.596927,-6.479962,-6.043118,6.512163,9.704691,9.332108,1.673236],[9.315764,3.942001,-9.245382,4.220229,7.919006,6.317778,-2.510155,-6.685993,5.580997,-8.173245,8.602438],[-1.015332,8.089673,-5.020118,-5.156901,-3.896724,-4.849800,4.689713,-0.262585,3.416237,-0.853284,-6.732257],[-0.274535,0.917092,-3.344882,0.324521,-6.579652,0.907165,0.415637,7.544576,0.753359,-2.062890,0.699687],[6.633249,-5.811619,-9.205247,1.655151,-7.881583,8.410819,6.722757,6.566714,5.922400,-1.886733,-8.884547],[2.434633,6.542067,8.723280,-1.574751,5.486658,-6.783535,-6.901577,-7.656605,8.095879,0.730291,1.896355],[8.393237,6.175981,-2.717310,5.118746,6.908871,-7.589521,7.606351,-7.883804,4.187612,8.679398,-5.575906]],[[-9.725402,1.434526,7.825494,-4.136337,3.487950,8.512398,2.655324,-4.744359,-5.648827,6.470509,-2.706359],[-7.937759,-3.402806,2.685223,6.114981,9.897628,-8.421602,-0.434474,1.814183,-2.646668,-6.545916,1.003730],[-4.701560,-2.955566,8.001423,7.553440,-0.319559,7.175359,8.100382,3.853760,-8.654616,-3.822269,4.858556],[-9.419353,-5.664174,-6.014989,-5.921751,-7.599286,5.079411,-5.066700,-9.499899,2.790664,9.811024,2.594613],[8.833912,-4.227668,6.215618,-3.498134,2.281822,1.175167,-5.031152,-1.656593,0.432588,9.392492,0.560048],[7.862269,9.832653,-5.842071,4.594052,-0.231053,-6.327142,-9.080883,6.481311,0.554416,2.297568,-3.194613],[-3.173673,8.751600,5.433770,-2.096395,-2.749974,-0.100271,-7.219702,-8.029786,-7.917948,-7.437543,3.326323],[-5.045684,-1.368314,4.476242,-9.640608,8.044201,-2.684248,-6.086597,1.916434,-3.700516,3.291376,1.212441],[-7.318256,3.958840,-9.237036,0.882061,4.198591,0.747156,1.705693,9.927746,-1.776457,-4.408039,3.613085],[1.245009,-7.571892,-6.373878,-7.698963,1.874119,-6.868002,-7.231201,5.275517,-3.594528,4.726266,-7.420880],[3.966392,5.360613,-4.217826,-3.878152,-5.780222,-0.602099,-6.045339,-2.207414,-7.412298,0.382926,4.571959],[-1.179932,5.629290,2.527434,-1.806646,-2.681207,4.202399,5.016712,7.946468,-6.161776,5.450415,-9.361078],[7.794431,0.858147,7.948974,-9.715609,-2.454330,0.226156,-6.959361,-0.268959,-8.412971,-8.373525,-7.550164],[7.739587,9.988951,-9.494222,-7.191883,-1.636697,7.554461,7.061694,-5.960529,6.353194,-3.081473,5.306188],[5.707127,3.755076,-1.860968,-5.816639,-0.812080,-9.662949,8.362629,-3.380513,-9.362615,3.087780,-9.902004],[-8.717972,6.577263,3.279958,-8.975648,-8.451550,2.341488,5.909849,6.273762,-0.192902,3.548256,8.762565]],[[7.375270,-8.942981,0.609562,-8.015938,-2.308734,-1.674550,-9.462712,-0.708010,-9.536008,6.914686,-6.036119],[0.203700,-2.536598,9.362448,3.371447,-1.341940,3.673375,-6.739406,-2.692159,-3.300675,8.022514,-2.665001],[4.529505,-1.643807,4.992897,1.620307,-0.376524,4.682938,-7.428795,-6.805379,-2.621880,0.323993,6.190744],[-0.100738,-7.103333,-6.592609,3.759993,6.454811,4.160842,6.648174,0.030079,8.467410,4.288845,-4.327078],[1.996121,6.191271,4.670153,1.330229,-3.682833,6.680929,2.646990,-6.242776,-7.773754,3.575085,2.971464],[9.359088,9.094977,-5.393908,2.179502,-8.319893,1.669316,-8.950649,-3.866645,8.964239,3.267394,3.759962],[5.929809,-2.153555,-1.763785,0.731056,-8.940374,-8.751820,4.597443,-1.028486,-6.993549,-1.943016,3.123039],[-6.821309,-5.947923,-7.121528,-2.294017,-6.600369,-7.389999,-0.723488,-3.845336,-7.598400,-6.318633,-6.212891],[-3.022478,-5.090919,-0.710064,-5.916937,-5.974168,9.317864,4.913467,-5.937673,-2.986265,3.552563,6.367074],[6.341587,7.389901,-1.585517,-4.790296,-3.885817,-1.767306,3.606523,1.853565,-1.599867,2.864649,-9.809880],[1.855137,-1.895771,-8.310373,-2.360661,1.238184,5.028917,-8.550054,-2.746641,0.885469,8.151887,-9.631422],[-4.795565,-4.540906,8.600930,-9.766282,-5.927988,-2.320127,0.452957,-0.678728,1.158592,1.481039,5.599862],[-2.544529,2.602840,-1.408491,5.704650,1.039625,-8.554056,-9.678327,1.861038,2.129972,2.110114,6.124484],[-3.712465,-0.226909,1.806248,7.700805,5.461361,2.497225,1.392766,7.390454,-0.315394,-0.156728,0.380469],[-8.644040,0.621309,-0.146098,6.008390,-7.253126,-9.534391,0.445737,-2.957611,-3.881901,4.862219,-0.937233],[4.271769,7.980976,3.554007,-3.175364,6.055380,7.322597,-9.385273,5.602790,1.075846,-2.181657,-6.130110]],[[-5.448911,-3.470955,3.163121,-0.988373,-1.996257,9.099422,8.395190,2.430771,9.541289,-0.790805,7.298585],[2.172204,-4.273226,-8.458332,-3.325811,7.520359,-4.280540,9.229090,2.844530,6.230236,0.379270,3.675785],[2.546856,-5.180027,3.434428,-2.772116,0.780711,8.711288,-5.032792,-1.183832,9.622005,9.006512,9.251084],[4.632165,-1.235757,-8.810717,0.960695,-4.261015,-7.035344,-9.863110,6.779284,4.686382,-9.460568,4.499381],[-0.899080,7.721212,6.729783,6.917011,3.858980,8.263768,-3.938824,3.011299,4.453536,-6.520632,-5.474259],[-0.123406,4.228090,-0.759309,-6.690919,6.821726,-0.689285,-9.054555,2.047210,-3.711991,-7.251707,6.961203],[-6.828831,0.224403,-7.306294,4.253357,-9.655266,5.794741,3.661098,9.638751,2.139855,6.154331,6.005426],[6.309074,6.566596,7.516312,7.349945,-7.711369,7.784618,4.544711,-2.527514,-8.688114,-3.553837,-3.257059],[1.735716,-7.846466,-4.007836,-7.049461,1.242967,3.446575,-3.951037,4.226410,6.825267,4.247072,5.570133],[-6.479866,7.382026,-0.100197,-2.650122,-7.624493,-3.385480,-9.321576,-2.931119,-7.271225,-8.711378,-1.290434],[-1.945749,-3.975912,-5.694364,-0.500225,8.241975,1.462553,3.474823,-7.484004,-9.310659,5.326025,3.622259],[-4.012985,7.598494,-0.896011,-4.994722,-0.086874,-4.364230,-8.795711,-7.229253,-2.715231,5.687663,-2.301741],[2.741717,5.706875,3.891890,-5.622364,-9.983034,-5.363022,8.548465,-6.472220,-6.562754,-0.541229,0.807334],[6.040537,1.822898,1.264557,5.254382,3.323683,0.870201,-9.156226,4.139295,8.231286,9.797645,9.496904],[-0.814184,-3.917481,-2.199619,6.890099,2.250792,9.483952,-0.340610,-6.754127,1.387860,-3.401810,-1.769604],[1.724924,6.818023,3.181334,7.182207,7.437269,-1.869694,-8.646783,-6.999303,8.170369,-6.265120,-7.424854]],[[3.812408,-9.041247,-3.479492,5.642477,6.371774,7.958751,-3.245123,-4.149124,7.141015,0.881029,1.304258],[3.334593,-1.758905,-6.361885,5.353632,9.483937,4.370298,4.439261,7.875126,-6.985308,-3.499376,1.083677],[-6.377445,-0.294328,-4.197351,-8.838647,5.204091,0.164604,-3.169656,-6.660597,0.479235,-4.180699,8.722943],[-2.787544,6.737679,6.514863,-4.228798,-4.108518,-7.128394,2.445097,-1.354804,9.553490,5.756916,1.425485],[-0.364470,6.636772,-5.857640,-8.864766,-7.982370,-3.564923,9.652185,6.784006,-6.910701,-7.036370,-7.956025],[0.317681,9.594394,-9.324199,-1.300247,-0.614170,9.764830,-7.832309,-3.904194,8.976587,1.972379,-1.613660],[9.348180,5.573695,0.591522,2.591852,5.536830,-0.780039,7.370589,2.747872,2.351991,-0.757872,5.269775],[-7.074659,3.121754,-2.538743,1.935625,1.140150,-7.124701,-8.715326,-2.645428,5.639133,3.407952,2.300998],[-7.450628,-9.474271,-6.421441,-1.144471,1.493731,0.377843,-5.626894,4.749292,-7.120563,6.322907,0.464378],[-6.695101,3.009480,7.675485,-3.809604,1.722097,2.945416,-2.386999,-3.236939,-2.257365,4.613587,-0.074401],[2.801215,9.836183,-5.428690,7.859032,-5.940877,6.623699,1.770860,-6.738904,4.318034,8.602336,7.863232],[9.588004,-2.455645,3.751355,0.442004,-9.330142,-9.675773,5.079505,-8.012533,-5.094276,-8.054981,-2.292202],[5.393544,2.549056,-8.320288,6.076308,-5.455400,0.535061,-1.130461,-0.899009,-9.808126,1.616573,-5.079566],[1.125256,7.939533,-0.723761,1.546988,4.166499,9.174479,-5.889526,1.799829,-1.142057,-5.510116,8.989775],[-6.160699,-5.555441,-0.163508,4.408075,-6.908541,1.187127,1.873295,-4.113155,-1.348707,1.284834,-0.892902],[2.807363,9.950923,-8.393278,2.995291,4.582389,2.633087,-5.279208,3.910517,0.239649,-0.488305,1.947662]],[[-6.323455,-5.218163,9.713838,-4.400259,4.604939,-3.746498,1.159607,-3.034875,-7.331700,4.283495,-7.594379],[8.071340,4.516416,0.776970,2.341233,4.274259,-9.600465,-6.418632,4.190078,-6.736719,-6.530050,-5.349056],[3.638726,-1.025309,-2.804079,1.793004,7.612227,-2.139474,3.150959,-5.137707,-5.319234,-7.640250,2.110508],[-8.426365,-8.186419,-5.706588,9.769083,-8.054815,4.106722,-2.012141,-0.717745,-4.951967,-9.714440,7.190581],[9.648099,-9.823126,6.907300,-4.680861,1.925553,-4.547834,8.232564,-0.703766,5.158480,6.541046,3.939075],[-7.705076,-9.560799,6.411074,7.888366,-1.558090,-3.116841,-9.675740,-9.048684,3.515462,1.140158,5.357850],[-1.504123,-1.295361,-1.664304,-7.835339,1.062541,-3.450184,-9.891464,2.359964,-3.741750,-5.253154,-9.583974],[-6.708665,8.684231,2.381700,7.019728,-5.643725,-3.608298,3.485241,-7.187347,8.735727,-7.414806,6.224418],[5.372352,-1.539798,3.186321,3.880629,7.291807,-3.391147,9.951196,-2.260614,-1.536771,-4.724340,9.131799],[5.424075,3.405330,1.257101,-9.150630,-1.845286,5.491639,1.299755,9.388477,2.033855,8.478088,-0.619244],[5.550869,5.481533,6.029726,-8.556201,-7.485559,-4.057558,-9.698064,5.277403,6.222287,0.430598,7.855635],[2.248289,0.576786,3.275320,-7.272894,1.313782,-4.411224,3.794365,-0.928687,-6.904579,9.913132,-9.546229],[6.590600,6.788934,-9.735635,3.557256,9.309184,-9.823160,5.300189,3.067134,7.202574,5.328037,-7.708331],[2.270192,6.139460,9.171790,5.497835,-5.233145,9.788351,9.855179,-0.227089,6.834544,9.122038,-2.687001],[-2.460177,-8.008643,-8.359379,9.139929,-9.636449,7.258931,4.939413,-3.640938,8.708093,0.950143,-7.146952],[-0.658023,1.340908,6.529940,7.626077,-5.686016,6.341332,-2.061740,-9.844359,-5.060555,-0.643385,-5.368618]],[[-3.881365,-1.332169,-0.631930,3.580279,-8.958683,8.028973,2.739795,-3.264392,0.919278,-1.181312,7.853983],[-1.875758,4.556527,-7.300822,7.115119,2.113552,-3.402137,1.384233,3.754171,1.165033,-4.219968,1.597440],[6.753211,-1.696669,-7.026324,-1.240196,0.810050,-6.488780,7.444933,4.135814,6.901213,4.583387,-2.629086],[-3.506611,1.131423,-2.256566,3.178405,2.942141,6.662794,9.201461,8.443391,-9.298097,-2.298106,4.290586],[0.191595,-0.072175,7.169161,-6.797699,-8.386201,0.415625,0.328774,9.276301,6.225071,4.397268,2.067802],[1.974875,-3.414294,4.039450,-1.055355,0.180584,8.849327,-4.872850,4.279856,1.664143,-3.793235,3.772968],[-4.600603,-2.840353,8.279936,-0.446195,-1.518521,3.067477,6.637021,4.988559,4.795572,-9.496561,8.623900],[8.026469,0.671202,-0.480937,8.996599,3.477072,9.186915,-2.316458,-0.391636,2.964847,-1.158077,5.592296],[5.954336,4.107633,4.842468,-2.445213,-8.124339,0.397576,-1.583231,7.843049,1.121111,4.054954,-2.252621],[-0.472763,-3.645310,5.580579,-6.511751,3.249244,-2.480794,5.993834,-3.341830,-8.430176,4.426660,-0.265905],[2.386998,-2.725455,9.235981,4.551732,4.102765,-5.736280,8.929391,-2.233436,-4.672875,-7.037960,-1.553901],[0.138239,6.504034,9.855035,0.621105,-8.495655,-6.113423,-3.037221,-2.608359,9.862060,5.112291,1.289495],[-6.395622,-4.986171,6.853902,7.797166,-7.597561,-6.118140,-2.993001,0.012511,-7.668204,-4.094538,-2.068753],[-0.368765,2.834051,-4.681074,2.412965,8.360897,6.905921,-2.044545,-1.523696,-5.803392,-6.466132,-8.316788],[-5.004801,0.163398,9.600188,3.376925,-7.761987,-9.296446,-5.823560,-0.131650,0.721575,8.166838,2.568926],[6.872138,2.729535,5.424528,2.296703,-8.544927,5.844382,-8.418064,4.960386,-0.593577,5.733811,6.149878]],[[9.272627,7.951854,-7.714619,3.220937,-4.437264,5.971805,-7.829074,-8.519342,2.964391,9.671332,-5.619682],[4.761354,-9.204064,2.637970,6.742082,0.228440,-2.605299,7.799317,6.067282,-8.502309,2.187703,1.635281],[-9.055776,9.783650,-9.833698,-3.195363,-9.309831,-2.956873,5.790892,-0.254054,3.184446,1.107761,-3.977352],[-7.160549,2.048804,-4.420640,-9.705357,-2.756588,9.477640,-5.083697,9.113279,-9.010275,9.228497,-5.279920],[-4.872701,6.831718,-1.070153,7.881502,6.312838,-9.612370,-9.483837,9.330203,-8.527227,-9.979458,-9.087480],[2.043578,9.591207,1.530505,-5.864888,-4.665853,1.262111,-2.594555,-3.079119,-5.161674,8.312911,0.916504],[0.758016,8.984705,-5.791251,0.718182,-1.698907,-5.887547,-4.033257,-3.537258,1.681909,2.953725,-9.947073],[-6.885409,7.497817,-5.629884,1.644269,3.656820,9.908680,-3.815668,-5.053318,-1.810112,-0.830351,-0.693537],[-3.067327,-9.950190,8.096388,-5.847774,4.089371,0.915602,-4.958703,-8.681746,2.963632,-9.683166,-5.133674],[-5.063493,9.241559,1.428454,-6.975045,-1.639843,6.332255,-9.390671,1.116295,-3.961634,-6.180790,2.547380],[-0.493101,-4.489748,2.151610,-9.270153,-4.742180,-1.359856,9.879655,4.796343,-6.658630,-4.380832,-2.504759],[-1.790826,-3.783426,3.314401,-4.212148,9.767660,-4.644289,-2.208043,-9.437591,7.507151,-3.593768,-0.663569],[4.677628,4.222087,-9.871014,9.721876,-3.556642,-3.370505,1.862925,7.352247,-6.685208,-6.451075,1.598322],[9.318004,0.369043,-7.989798,-7.227802,7.705965,-3.212486,8.428128,-1.075397,-5.640357,1.291109,5.994192],[-6.239928,-2.209921,6.503133,4.964045,-1.606855,4.806612,3.464870,4.357661,-3.088667,5.774345,8.283279],[1.787109,-0.470213,-3.461340,-1.931369,-6.257284,0.527144,-8.205107,1.154811,1.280058,-3.544387,9.540421]],[[-3.060709,0.647197,9.059558,1.838969,-6.986243,-7.761497,-3.421779,-0.821868,0.106693,4.279685,8.237480],[9.580115,0.040088,-4.943979,4.097756,7.958590,-9.887971,1.428505,-0.896892,-3.872771,3.139348,4.653155],[-9.980235,5.700572,-4.984712,-7.151698,-8.337082,-8.249595,-4.733390,3.854483,-5.902466,6.771929,4.694301],[-3.468404,2.465067,-7.898967,8.543945,9.727490,1.456757,6.183372,6.044672,-0.987443,-3.459275,-9.153566],[6.599688,-0.206241,-1.626666,9.937979,-1.072514,3.736701,-6.258002,2.424511,8.614253,9.093106,7.721339],[-4.711835,-2.265552,-1.452994,7.182194,8.092798,-1.159514,-8.414999,7.056353,-2.477608,1.938734,-3.618326],[-5.182721,-9.280290,-6.242777,-4.861011,-2.135101,-6.826963,4.353699,6.800856,9.761704,-7.925964,5.892073],[5.762885,-6.813622,-5.995108,4.940426,1.617684,-5.573060,-5.790259,-1.940160,-2.064675,0.033323,8.806561],[6.963432,-3.266118,-6.194227,-8.706272,9.093983,-2.529720,-5.890369,-2.485432,5.208520,9.341396,6.469267],[-5.969334,-8.320935,-3.208540,-4.442504,4.036714,5.843172,-1.170123,-0.784142,1.707337,-8.230445,1.064837],[-1.578354,3.001671,0.930354,-3.076398,-3.305742,-3.146797,3.272281,-3.367312,1.621998,-0.917762,2.828173],[-9.450359,8.638314,-4.523291,2.633841,-9.973500,5.535756,-6.524749,-7.687621,1.052313,7.158177,-9.898888],[-5.917022,-1.618935,-7.339132,-8.235373,-3.534834,0.854475,-8.048547,4.975571,8.341571,-8.395807,4.042332],[7.749426,9.825526,-1.977709,2.451096,5.807319,-6.882427,2.717876,-3.359242,-4.061565,-4.543817,8.568048],[2.455701,-4.113641,-4.438260,7.613785,9.320088,-2.868077,9.104269,-3.077725,7.707329,6.794098,6.411229],[-3.096919,-8.607546,-6.316055,-4.304303,-0.516032,0.909379,-8.962319,2.240389,3.645716,-5.728783,9.324720]],[[0.666330,-4.167257,3.116598,-4.145130,-0.210383,8.003682,5.085357,8.145000,7.338878,-3.294162,0.723777],[-4.282970,-9.748668,4.048940,1.316109,0.427661,-9.748150,7.923175,1.934255,7.638366,-3.953078,-2.555303],[-5.214156,1.369568,6.527548,-3.450976,-6.364630,7.136364,1.011268,-3.963819,7.825280,9.278320,9.905138],[-3.169931,-9.406645,1.302501,-3.519229,-7.190782,9.859684,-9.330308,1.180324,1.544794,5.776748,5.623251],[-8.105178,-7.944122,7.827531,1.689695,-1.544335,2.978373,8.587479,-7.593351,-0.026391,1.068534,-4.356049],[5.401334,-2.469972,-8.457691,5.495801,-6.343990,2.335185,-3.514680,-6.229832,9.755474,7.082840,7.617881],[6.945167,-6.108235,8.338765,-6.688359,0.395844,6.927098,-7.277028,0.635066,1.782962,2.291968,-4.753816],[9.003666,-1.263538,-1.334633,2.278278,-4.270835,7.433437,1.331009,-7.091841,-3.428283,9.446354,-2.807573],[7.755570,1.422778,2.946066,3.111674,-4.613210,8.250219,-8.396233,-5.338945,2.585110,-3.848839,6.552536],[1.125026,3.027735,4.600855,-2.945677,8.104661,-7.428870,-6.572411,2.815423,1.095977,2.476429,-3.744102],[-2.501354,0.456439,-8.386543,-1.172247,5.708047,5.143456,-1.051360,2.547406,-2.668932,-7.852169,-7.017473],[5.715391,7.511390,2.418551,2.163177,-5.006676,7.145335,6.401818,1.845801,4.373284,-3.065481,-5.270201],[-5.531257,8.621099,-8.722935,3.130052,-9.080301,-5.733981,6.918547,-0.599366,-2.913657,8.453877,9.396623],[8.809404,-6.583953,6.085035,8.077490,9.229687,-0.814728,4.604010,2.443192,6.448189,2.162805,1.944649],[1.224239,1.174520,-3.676665,9.911252,3.017910,-7.127185,-1.567325,-3.585335,9.544572,1.587725,-1.968802],[-9.851371,7.077918,-8.456117,-7.322015,9.375944,9.849343,4.510932,8.677627,6.289337,8.947517,1.875663]],[[-1.979428,3.321684,7.149423,4.733453,3.531031,7.374276,6.960448,4.547986,2.470625,8.830766,4.104530],[-5.028601,-1.026364,-1.370767,-0.139834,9.513085,1.765624,-3.816167,2.876994,1.387077,-3.637761,6.944167],[-7.376275,6.066774,6.803822,-2.941534,3.229743,-2.279831,1.534509,8.443309,-1.065782,-9.317895,1.223224],[-8.551203,-4.443222,-1.813535,9.362386,-3.719863,-8.774703,2.861366,-2.379003,5.539162,7.653541,8.984901],[-4.085476,-5.557524,5.753468,-8.465128,0.979664,2.484775,-0.016530,-9.711871,3.171028,9.504847,-6.763900],[-4.846789,8.246615,-1.384941,4.669693,4.888749,-7.159843,-4.718429,-4.324821,4.415910,0.336358,5.642860],[-5.701395,8.893341,-2.570694,1.783769,-3.493875,4.172980,8.784804,-3.293672,-5.205100,-5.825349,6.008681],[-9.942181,-0.239701,9.043648,7.257336,6.542267,2.471810,7.474957,-9.222405,-0.054738,-4.610847,-0.871616],[-6.818991,-0.429186,-9.653636,6.488487,4.843261,5.756803,2.214960,-8.536017,3.219926,-9.552422,-9.256779],[-8.215224,9.308741,2.485958,-2.233506,0.721524,-7.298654,2.827766,7.514264,-6.784494,0.481922,-8.225478],[5.750881,1.152409,-1.204942,7.389129,1.099668,4.784687,-4.378729,3.781582,-6.593121,2.528186,-9.057249],[3.521578,-7.013717,0.009435,2.408123,-3.491815,-5.357114,2.754744,-6.682576,8.332990,-8.938921,-9.452835],[-4.653705,-9.805905,-2.923937,3.694381,-5.476357,-5.682488,5.281120,-4.412819,0.946313,2.214992,-6.091145],[5.963918,6.862155,1.779698,6.106826,-8.122533,5.142852,4.409124,6.666049,-3.833889,2.443920,-3.809384],[-4.983462,-7.927624,1.869252,7.490307,-0.623892,-8.358599,-6.245005,-2.753082,0.480555,0.583797,4.592036],[8.383891,4.471475,-4.878066,-3.327022,7.128697,-0.350176,0.106451,7.923426,7.183122,9.422878,6.245613]]], dtype = "float64")#candidate|2030|(13, 16, 11)|const|float64
bop_2031 = relay.equal(uop_2017.astype('bool'), relay.reshape(const_2030.astype('bool'), relay.shape_of(uop_2017))) # shape=(13, 16, 11)
uop_2035 = relay.tan(bop_2031.astype('float64')) # shape=(13, 16, 11)
func_1516_call = mod.get_global_var('func_1516')
func_1520_call = mutated_mod.get_global_var('func_1520')
var_2045 = relay.var("var_2045", dtype = "int16", shape = ())#candidate|2045|()|var|int16
const_2046 = relay.const([-9,6,-3,-4,10,8,4,3,10,1,3,-8,-8,4,-1,-3,-7,8,4,4,-4,10,-2,2,-6,-5,-8,7,-7,5,1,8,9,-5,10,6,4,1,-8,7,3,-5,4,-8,-3,8,-1,2,-4,2,8,7,-6,7,1,-8,-5,-9,4,-1,8,-3,-8,2,1,6,-4,3,-3,-3,-6,3,3,4,7,6,-5,-8,-3,-6,6,6,-7,9,-1,6,-3,-1,-1,6,10,-7,1,1,6,6,9,4,-1,6,5,-1,1,5,-9,-9,-2,-6,-2,5,-4,1,-5,9,-8,-9,-7,9,4,-9,4,-4,4,9,8,-5,-5,6,-3,-5,2,-2,-6,-6,-7,-3,-4,-9,-8,-6,2,-1,-2,-8,-1,-4,9,-1,-8,-5,-3,8,-7,8,7,6,-7,-6,-1,2,7,9,5,-1,9,10,6,9,-6,3,-3,3,-3,9,-3,-9,10,-8,-8,-7,-7,-8,6,-10,-6,-8,-3,9,9,-1,-10,3,-10,2,-2,-6,-6,3,4,6,8,1,4,7,-9,-6,-1,-8,1,-1,-10,1,-1,-2,8,9,4,7,-3,1,-3,2,7,-8,-3,-1,-6,-1,-5,-4,-10,10,4,-2,-4,-8,2,-2,1,9,-9,-6,-1,3,-1,2,1,-7,-1,-1,-4,1,-8,-6,3,2,-6,-8,-7,-4,10,-10,-7,-6,-6,3,-8,5,-9,7,-8,7,-9,-2,6,5,-1,-6,9,-9,1,-2,-8,8,-2,1,-6,-6,3,-3,4,-4,-10,1,4,-4,-2,5,5,-9,-10,9,-1,3,4,3,-4,1,9,3,4,8,4,-7,-7,-10,-9,3,5,-3,1,-7,5,9,9,-5,9,-10,9,4,4,-2,-4,-2,-2,7,1,8,-9,-9,-1,3,10,-3,-1,-4,2,7,-3,-4,-3,10,-5,1,-7,6,7,-6,-3,7,-9,-8,-10,-8,3,8,4,-10,-6,5,-3,1,-10,-10,-9,6,9,10,10,-2,1,1,-10,4,-3,-1,-8,6,-9,-3,-5,-6,-5,-4,6,10,-10,3,-1,5,-6,8,-9,3,3,6,-7,2,1,-6,6,6,-4,-3,8,7,-6,-1,3,3,-2,-6,3,8,8,5,-10,7,2,9,1,5,2,2,-9,-5,-6,-7,-1,-7,1,-2,-2,4,-2,-3,8,-10,-1,-10,-9,-3,-8,-8,-7,9,-6,8,-1,-10,-5,5,1,6,10,-4,10,6,8,-6,-10,3,-5,1,-5,-8,4,-4,9,-8,-7,-7,-10,5,-8,4,-8,-3,-10,-1,-7,-5,-4,-7,10,-3,-8,4,-5,7,-1,-3,-8,2,-5,2,3,5,8,-2,9,-5,-8,-6,-9,-8,6,9,-2,-3,-5,-8,-4,-8,5,1,7,-3,-5,8,4,4,9,-5,6,7,4,-2,8,-3,3,-9,9,5,-2,10,9,5,9,9,9,9,-1,6,-4,-6,-2,-5,-6,-7,-3,4,2,10,-1,-7,6,6,8,1,-10,6,2,4,-2,-6,-9,7,-2,-1,7,-5,-3,-2,-4,2,10,7,9,-9,4,6,-8,7,9,4,7,8,-4,-2,3,-2,1,-4,3,-3,-9,-2,-3,8,6,-7,3,4,8,-4,9,-4,9,5,9,1,-9,6,4,6,-4,-5,-10,4,5,9,-6,-6,-10,7,9,9,10,1,-9,-4,-4,10,7,4,-2,8,7,-2,-5,8,6,-1,5,10,3,-7,-4,2,2,3,-8,-1,5,4,4,-1,1,7,-7,2,-1,-6,-7,-6,2,-3,10,-7,-9,4,-3,4,-8,2,7,5,4,-5,-10,9,10,-4,8,-7,2,-2,6,-1,-6,10,-8,3,8,10,-9,-10,3,-1,-7,1,10,6,-1,2,1,-3,9,-8,4,-5,-9,1,-10,6,-3,-1,-2,10,-6,-5,6,-4,5,-2,-4,-9,-3,-6,5,2,-10,-2,10,10,-6,-10,2,-9,-10,4,-9,6,5,3,-5,-5,-6,7,-1,-1,-1,-9,-7,-2,9,-10,10,8,-7,3,-8,6,7,1,10,5,2,-6,2,5,-3,2,8,-9,3,-6,-4,6,-6,1,8,1,10,9,5,-5,-9,-4,-7,4,8,-2,4,4,-4,10,-1,-1,8,2,4,-6,4,-3,-4,2,9,-4,1,-5,-5,6,5,6,7,-9,-5,5,-4,10], dtype = "int16")#candidate|2046|(832,)|const|int16
call_2044 = func_1516_call(relay.reshape(var_2045.astype('int16'), []), relay.reshape(const_2046.astype('int16'), [13, 16, 4]), )
call_2047 = func_1516_call(relay.reshape(var_2045.astype('int16'), []), relay.reshape(const_2046.astype('int16'), [13, 16, 4]), )
output = relay.Tuple([uop_2021,uop_2035,call_2044,var_2045,const_2046,])
output2 = relay.Tuple([uop_2021,uop_2035,call_2047,var_2045,const_2046,])
func_2053 = relay.Function([var_2016,var_2045,], output)
mod['func_2053'] = func_2053
mod = relay.transform.InferType()(mod)
mutated_mod['func_2053'] = func_2053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2053_call = mutated_mod.get_global_var('func_2053')
var_2055 = relay.var("var_2055", dtype = "float64", shape = (13, 16, 11))#candidate|2055|(13, 16, 11)|var|float64
var_2056 = relay.var("var_2056", dtype = "int16", shape = ())#candidate|2056|()|var|int16
call_2054 = func_2053_call(var_2055,var_2056,)
output = call_2054
func_2057 = relay.Function([var_2055,var_2056,], output)
mutated_mod['func_2057'] = func_2057
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2135 = relay.var("var_2135", dtype = "float64", shape = (15, 2, 16))#candidate|2135|(15, 2, 16)|var|float64
var_2136 = relay.var("var_2136", dtype = "float64", shape = (15, 2, 16))#candidate|2136|(15, 2, 16)|var|float64
bop_2137 = relay.equal(var_2135.astype('bool'), relay.reshape(var_2136.astype('bool'), relay.shape_of(var_2135))) # shape=(15, 2, 16)
func_484_call = mod.get_global_var('func_484')
func_489_call = mutated_mod.get_global_var('func_489')
const_2146 = relay.const(9, dtype = "uint8")#candidate|2146|()|const|uint8
const_2147 = relay.const([-2.968814,-7.713745,-8.601775,-2.450636,-3.345121,-9.838470,-1.103996,3.679976,-6.984682,1.658776,-4.297112,1.010178,-0.946047,7.014944,8.458291,8.098160,-4.299144,-9.418900,-3.309409,-1.101126,-5.304936,-2.538079,-7.730211,2.975088,9.412963,7.157987,-6.793889,8.370135,3.961664,-2.089146,1.667286,5.798198,9.728879,-1.609998,-9.899889,0.090682,1.142050,0.408078,3.963983,-5.668933,0.139283,-4.514332,-3.717998,-4.361140,-0.753691,-0.972790,6.462187,-4.630134,-8.964411,-0.835756,5.678216,0.213233,1.405086,-7.727187,-2.177211,2.448776,3.129261,9.375193,6.855629,2.712597,-2.297339,1.128756,5.873746,-9.575265,-7.295881,-4.536916,-2.362706,-1.345469,5.489660,4.744150,6.015003,6.624197], dtype = "float32")#candidate|2147|(72,)|const|float32
var_2148 = relay.var("var_2148", dtype = "int8", shape = (52,))#candidate|2148|(52,)|var|int8
call_2145 = relay.TupleGetItem(func_484_call(relay.reshape(const_2146.astype('uint8'), []), relay.reshape(const_2147.astype('float32'), [72,]), relay.reshape(var_2148.astype('int8'), [52,]), ), 1)
call_2149 = relay.TupleGetItem(func_489_call(relay.reshape(const_2146.astype('uint8'), []), relay.reshape(const_2147.astype('float32'), [72,]), relay.reshape(var_2148.astype('int8'), [52,]), ), 1)
output = relay.Tuple([bop_2137,call_2145,const_2146,const_2147,var_2148,])
output2 = relay.Tuple([bop_2137,call_2149,const_2146,const_2147,var_2148,])
func_2152 = relay.Function([var_2135,var_2136,var_2148,], output)
mod['func_2152'] = func_2152
mod = relay.transform.InferType()(mod)
mutated_mod['func_2152'] = func_2152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2152_call = mutated_mod.get_global_var('func_2152')
var_2154 = relay.var("var_2154", dtype = "float64", shape = (15, 2, 16))#candidate|2154|(15, 2, 16)|var|float64
var_2155 = relay.var("var_2155", dtype = "float64", shape = (15, 2, 16))#candidate|2155|(15, 2, 16)|var|float64
var_2156 = relay.var("var_2156", dtype = "int8", shape = (52,))#candidate|2156|(52,)|var|int8
call_2153 = func_2152_call(var_2154,var_2155,var_2156,)
output = call_2153
func_2157 = relay.Function([var_2154,var_2155,var_2156,], output)
mutated_mod['func_2157'] = func_2157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2179 = relay.var("var_2179", dtype = "float32", shape = (5, 10, 4))#candidate|2179|(5, 10, 4)|var|float32
const_2180 = relay.const([[[-2.229972,-9.360805,9.166219,-4.258500],[6.685387,-5.129744,-5.724900,-8.086984],[-8.316095,6.855282,9.150299,-7.551362],[9.442492,-2.365824,4.631609,5.089895],[-7.660996,-1.491806,4.185633,2.097839],[3.357495,7.430881,9.531152,-0.135547],[-3.811468,-3.488542,-7.065421,-9.431444],[8.766460,-6.195671,-6.238193,-8.269069],[5.412315,-2.377790,-5.873892,-4.769593],[4.783056,1.609978,0.541158,7.642164]],[[-4.584401,1.433997,-6.679934,-4.335458],[8.265527,-4.006021,-0.018503,-4.308763],[3.874256,4.964104,7.982045,-5.911843],[4.111406,1.154687,5.603350,6.710814],[-1.104523,-5.747132,-9.919834,-8.992982],[5.195805,7.792892,-0.905521,7.113277],[3.667830,4.981356,-8.472594,5.741185],[9.686062,-8.714549,4.569454,-3.626931],[9.380261,8.254772,-6.177096,6.566860],[-7.646985,0.170943,-7.712347,3.689116]],[[5.291747,-2.790596,-5.160653,-8.030516],[-5.567335,-9.746859,-7.602098,2.768276],[1.163417,1.001224,8.676372,6.799265],[3.986472,-4.973275,3.688338,1.761961],[-6.512792,4.627529,-1.235544,-4.693628],[-0.779893,-8.777224,-0.410110,-2.880705],[-5.361149,0.435902,-9.512709,-7.179404],[1.178735,-1.484721,-2.672957,-6.664025],[8.082020,0.780062,1.754213,3.024179],[-5.831190,-6.852377,2.672603,-3.047725]],[[-0.973425,1.429611,-6.020233,-1.047358],[-7.417102,-5.996080,6.304690,6.202641],[-3.348033,-6.967450,0.659428,-7.240260],[8.201414,-2.606602,0.561424,8.443208],[-4.107460,9.184233,-5.720556,-4.418367],[-0.635543,1.929768,6.004162,-5.270373],[2.769105,4.589121,-6.467389,-0.963095],[-5.140489,3.072362,1.007088,1.265075],[0.873112,-1.321164,5.759178,4.823046],[1.143958,8.120374,2.733399,6.575288]],[[-5.266560,2.748510,-6.684105,-3.930611],[-7.353161,-6.087548,-1.413660,3.141804],[-0.684395,4.656930,2.104430,1.876912],[6.595559,3.023253,6.379341,1.413557],[-2.511766,-8.472279,-8.325551,2.436887],[-0.442942,-5.194899,-3.430090,9.842467],[7.596790,-5.100705,9.237277,-4.271751],[-6.400448,8.329291,-7.640984,9.860707],[-7.727464,9.056944,-2.598394,5.963542],[-9.294772,-8.033209,-3.820025,-0.571383]]], dtype = "float32")#candidate|2180|(5, 10, 4)|const|float32
bop_2181 = relay.mod(var_2179.astype('float32'), relay.reshape(const_2180.astype('float32'), relay.shape_of(var_2179))) # shape=(5, 10, 4)
uop_2192 = relay.acos(const_2180.astype('float64')) # shape=(5, 10, 4)
func_1879_call = mod.get_global_var('func_1879')
func_1884_call = mutated_mod.get_global_var('func_1884')
const_2196 = relay.const([10,-6,-1,2,2,-5,6,-2,-9,-7,-3,-10,-3,-10,-4,10,1,4,4,-7,-4,3,-4,6,-6,-4,1,5,-3,-7,-10,-9,-3,-2,3,-5,2,10,7,-9,-10,1,7,7,1,-6,-3,1,-2,-4,2,3,-7,2,-8,6,-4,-1,-5,10,4,-8,-3,-2,-1,9,6,-7,-4,9,-10,9,-2,-6,1,-4,1,2,2,-8,-2,6,6,1,4,1,-4,9,-3,4,10,10,1,-7,6,6,10,-6,-5,8,6,5,-10,-6,9,8,8,-3,10,2,3,5,-9,-2,7,-6,-9,-3,-5,-3,-8,6,-1,-7,-8,6,-8,-7,-2,-3,-8,2,-2,-8,5,-5,-4,-1,9,3,-8,1,2,6,8,2,10,5,10,-1,5,-8,-7,4,-6,3,8,3,-3,-5,-8,-9,3,-10,-7,6,7,3,-2,9,-3,-3,6,2,-2,-10,-6,-7,-3,9,-8,-6,-10,8,-3,7,9,1,-5,5,-2,6,-2,-4,-1,-6,10,5,-10,-10,-10,-1,9,4,-4,9,-2,3,-1,-10,10,1,-10,9,-9,-3,6,-8,7,-8,9,-9,4,6,9,-6,-5,-8,-5,-5,6,3,-3,8,3,4,-1,4,5,1,-9,4,5,-9,10,5,3,7,-1,9,-9,5,-6,-7,10,-6,4,2,-3,-10,-6,-9,4,-8,-1,8,-8,3,-3,-6,10,-3,3,4,10,-10,-2,7,5,3,-2,7,6,-5,-2,-4,-4,-7,-6,-4,-6,3,1,5,9,1,1,-3,-10,7,-1,4,-10,4,-1,-2,-3,6,7,10,-9,7,-3,-6,1,6,-6,9,1,-2,4,-9,9,10,7,3,-5,8,3,2,9,7,-6,1,-2,10,-9,2,6,-5,4,-1,-10,-6,2,8,5,7,2,9,-3,1,-9,1,4,8,-5,6,7,2,-1,-3,6,8,-1,3,7,7,4,3,3,-6,2,8,6,-1,10,1,-7,3,5,2,-7,-10,-7,1,-4,-2,10,8,-10,3,4,-4,-3,6,3,2,9,3,4,-7,10,7,-9,-6,-1,-7,-2,-5,-7,5,-9,10,-10,5,6,2,-9,-5,-3,7,7,8,-4,4,-4,-9,-7,-2,-3,-1,-8,2,4,-6,-8,1,-7,-7,-4,2,2,-2,2,6,-10,2,-9,-5,-4,10,-6,-9,9,-3,7,-10,7,-7,-5,-4,-9,-5,5,-1,-3,-2,1,-5,9,5,3,6,9,-1,-6,1,5,4,-6,-8,-8,-1,4,-1,-3,-9,-4,-10,-8,-7,-8,-10,4,1,-10,2,-1,-9,8,6,-6,10,1,3,1,-4,8,-3,9,-4,-5,9,9,9,-7,1,-1,3,2,-1,-8,3,-2,-10,-10,-10,-1,1,6,-1,6,-6,6,-2,7,-1,-10,-3,-3,-3,-7,10,-3,-2,-2,2,7,-8,7,-9,-3,1,9,6,-7,6,2,-2,8,4,6,-9,-1,-4,-7,5,5,5,-2,-5,10,10,7,6,7,5,-5,-6,3,9,3,2,-1,-4,-8,1,10,1,-5,-3,9,6,2,2,-10,-7,-4,4,6,10,5,-1,3,4,-8,-10,5,-3,-8,4,6,2,10,7,4,-1,7,5,5,7,6,-2,-3,-10,10,8,5,7,-8,3,-2,-10,-8,10,-4,-7,-4,1,-2,10,-5,7,10,7,-8,9,-7,-10,4,6,-7,-10,2,10,-2,-3,9,-7,3,9,8,-1,7,-10,1,10,-9,-1,-2,4,-3,1,8,-3,5,2,7,6,5,4,-2,-4,-7,-3,-7,-4,-5,-2,-6,3,4,3,-1,5,7,-1,-6,-3,1,-5,-2,-9,-6,1,4,1,1,9,-7,9,-6,2,-7,-6,-10,9,9,-10,-6,7,6,10,-6,-9,-3,-6,1,10,2,6,-8,7,-2,-2,-7,-10,9,-10,7,7,-10,-9,-10,8,-7,-5,1,2,-8,-2,5,9,10,-8,-1,-8,-5,-3,-6,-8,-5,-7,4,10,4,-8,3,-3,-9,9,8,-2,-4,10,5,-6,1,-7,-3,-9,-8,-9,6,-4,-5,-6,2,-5,-4,8,-3,10,-8,-10,-3,-1,10,3,-2,-1,-10,9,7,-8,-3,10,3,-1,-6,-3,4,1,-5,-9,1,-3,9,3,-10,-6,-1,8,-6,-6,-1,-1,-4,8,7,6,7,9,5,-1,4,7,-6,9,5,-4,6,-1,8,-2,5,10,-9,-8,-10,-9,-8,2,-3,-10,8,-5,9,-5,-5,1,4,4], dtype = "int16")#candidate|2196|(864,)|const|int16
const_2197 = relay.const([[-7.439407,-2.828253,4.182744,-5.004168,7.262119,-6.548589,-3.528505,-1.965983,6.849819]], dtype = "float64")#candidate|2197|(1, 9)|const|float64
call_2195 = relay.TupleGetItem(func_1879_call(relay.reshape(const_2196.astype('int16'), [6, 16, 9]), relay.reshape(const_2196.astype('int16'), [6, 16, 9]), relay.reshape(const_2197.astype('float64'), [9,]), ), 1)
call_2198 = relay.TupleGetItem(func_1884_call(relay.reshape(const_2196.astype('int16'), [6, 16, 9]), relay.reshape(const_2196.astype('int16'), [6, 16, 9]), relay.reshape(const_2197.astype('float64'), [9,]), ), 1)
func_211_call = mod.get_global_var('func_211')
func_214_call = mutated_mod.get_global_var('func_214')
const_2224 = relay.const([-4.469661,1.718255,5.327545,-6.947587,2.237778,-6.757519,-5.672685,-8.816270,5.380496,8.966303,-9.372570,-9.477777,-8.954029,-1.435646,-1.313003,3.303607,7.689405,8.904659,3.253395,9.498531,1.004056,-6.815226,0.938548,-5.538247,-4.493387,-2.507510,5.952562,-6.197804,1.332682,8.960280,-8.415683,5.569998,8.779056,9.199726,-4.336960,0.827806,-9.595864,8.963107,-6.306646,-3.088437,4.703926,1.269898,-0.101281,-3.148140,6.505632,9.718387,-3.325060,7.120756,-8.289642,-4.539343,7.400017,-4.097439,1.506154,6.651166,2.407484,3.540584], dtype = "float64")#candidate|2224|(56,)|const|float64
call_2223 = func_211_call(relay.reshape(const_2224.astype('float64'), [2, 14, 2]))
call_2225 = func_211_call(relay.reshape(const_2224.astype('float64'), [2, 14, 2]))
output = relay.Tuple([bop_2181,uop_2192,call_2195,const_2196,const_2197,call_2223,const_2224,])
output2 = relay.Tuple([bop_2181,uop_2192,call_2198,const_2196,const_2197,call_2225,const_2224,])
func_2241 = relay.Function([var_2179,], output)
mod['func_2241'] = func_2241
mod = relay.transform.InferType()(mod)
var_2242 = relay.var("var_2242", dtype = "float32", shape = (5, 10, 4))#candidate|2242|(5, 10, 4)|var|float32
output = func_2241(var_2242)
func_2243 = relay.Function([var_2242], output)
mutated_mod['func_2243'] = func_2243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2696 = relay.var("var_2696", dtype = "float32", shape = (1, 1, 1))#candidate|2696|(1, 1, 1)|var|float32
uop_2697 = relay.cosh(var_2696.astype('float32')) # shape=(1, 1, 1)
bop_2703 = relay.equal(uop_2697.astype('bool'), relay.reshape(var_2696.astype('bool'), relay.shape_of(uop_2697))) # shape=(1, 1, 1)
output = bop_2703
output2 = bop_2703
func_2708 = relay.Function([var_2696,], output)
mod['func_2708'] = func_2708
mod = relay.transform.InferType()(mod)
var_2709 = relay.var("var_2709", dtype = "float32", shape = (1, 1, 1))#candidate|2709|(1, 1, 1)|var|float32
output = func_2708(var_2709)
func_2710 = relay.Function([var_2709], output)
mutated_mod['func_2710'] = func_2710
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2952 = relay.const([[[-6.575697,-4.064219,1.860203,-4.676784],[-0.478922,5.637801,9.014635,2.625983],[5.834617,5.920215,-4.919258,0.961639],[7.896640,-3.059098,3.275495,6.259173],[4.606228,5.425757,-5.318023,-0.289610],[-1.436534,2.775151,6.488204,-9.789224],[-5.168810,-0.625179,1.240608,3.769946],[-3.000864,-9.867716,5.737641,7.676943],[1.576147,2.138501,-2.858697,7.495782]],[[-1.480032,-2.552366,7.947221,-1.167993],[-6.319113,-8.608268,-9.771062,9.643771],[-6.955804,-9.794331,0.062885,-9.985881],[0.651770,-0.993292,6.010217,-3.117329],[0.877795,-1.073989,9.053333,-0.693266],[6.531073,-0.463476,-0.252180,-5.992968],[9.479707,-7.373771,-5.753766,-4.118083],[-3.249177,2.806836,-6.608974,8.040436],[6.021770,-6.414260,7.213769,-5.395494]],[[-6.290337,-2.639841,-5.871230,3.256576],[-2.051857,0.351030,-0.555250,-8.863233],[-1.493036,4.410731,4.349123,-8.518436],[-7.387980,8.332567,2.434626,-7.210231],[-4.715725,-8.626487,1.920788,1.185177],[9.349448,-7.213016,-2.970464,0.264707],[-6.762641,9.443053,4.182587,-3.252690],[-5.383646,6.721119,-8.785620,0.826185],[9.530062,7.389729,2.558666,-9.920554]],[[8.367314,6.545392,5.138977,5.190326],[0.601358,2.229295,-6.138419,-7.591009],[9.653354,3.466206,6.679261,9.443006],[-1.588521,0.265423,6.342092,7.774554],[-4.946668,-2.331590,7.766042,6.771335],[-3.378401,2.504564,1.174287,2.839523],[-7.936172,-8.687393,-1.522429,-4.664292],[-9.817611,-7.700976,1.090882,1.514351],[-0.862953,9.501609,6.934640,-1.707338]]], dtype = "float64")#candidate|2952|(4, 9, 4)|const|float64
uop_2953 = relay.atan(const_2952.astype('float64')) # shape=(4, 9, 4)
output = uop_2953
output2 = uop_2953
func_2955 = relay.Function([], output)
mod['func_2955'] = func_2955
mod = relay.transform.InferType()(mod)
mutated_mod['func_2955'] = func_2955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2955_call = mutated_mod.get_global_var('func_2955')
call_2956 = func_2955_call()
output = call_2956
func_2957 = relay.Function([], output)
mutated_mod['func_2957'] = func_2957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2955_call = mod.get_global_var('func_2955')
func_2957_call = mutated_mod.get_global_var('func_2957')
call_2988 = func_2955_call()
call_2989 = func_2955_call()
output = call_2988
output2 = call_2989
func_3002 = relay.Function([], output)
mod['func_3002'] = func_3002
mod = relay.transform.InferType()(mod)
mutated_mod['func_3002'] = func_3002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3002_call = mutated_mod.get_global_var('func_3002')
call_3003 = func_3002_call()
output = call_3003
func_3004 = relay.Function([], output)
mutated_mod['func_3004'] = func_3004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3002_call = mod.get_global_var('func_3002')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_3028 = func_3002_call()
call_3029 = func_3002_call()
output = relay.Tuple([call_3028,])
output2 = relay.Tuple([call_3029,])
func_3054 = relay.Function([], output)
mod['func_3054'] = func_3054
mod = relay.transform.InferType()(mod)
mutated_mod['func_3054'] = func_3054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mutated_mod.get_global_var('func_3054')
call_3055 = func_3054_call()
output = call_3055
func_3056 = relay.Function([], output)
mutated_mod['func_3056'] = func_3056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2955_call = mod.get_global_var('func_2955')
func_2957_call = mutated_mod.get_global_var('func_2957')
call_3103 = func_2955_call()
call_3104 = func_2955_call()
output = call_3103
output2 = call_3104
func_3112 = relay.Function([], output)
mod['func_3112'] = func_3112
mod = relay.transform.InferType()(mod)
mutated_mod['func_3112'] = func_3112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3112_call = mutated_mod.get_global_var('func_3112')
call_3113 = func_3112_call()
output = call_3113
func_3114 = relay.Function([], output)
mutated_mod['func_3114'] = func_3114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_3115 = relay.TupleGetItem(func_3054_call(), 0)
call_3116 = relay.TupleGetItem(func_3056_call(), 0)
func_1725_call = mod.get_global_var('func_1725')
func_1727_call = mutated_mod.get_global_var('func_1727')
const_3120 = relay.const([-7,6,2,-9,-10,10,-9,3,-8,5,2,-8,9,4,-6,-4,5,4,1,-6,10,4,4,-3,-2,4,-10,-6,8,10,7,7,-3,-1,4,-5,5,6,-7,-2,9,-4,6,-10,10,-10,-4,-10,10,9,-1,10,4,-3,-5,9,-1,-5,-2,3,6,10,-10,7,4,-6,2,8,2,-6,-8,-2], dtype = "uint32")#candidate|3120|(72,)|const|uint32
call_3119 = relay.TupleGetItem(func_1725_call(relay.reshape(const_3120.astype('uint32'), [6, 6, 2])), 0)
call_3121 = relay.TupleGetItem(func_1727_call(relay.reshape(const_3120.astype('uint32'), [6, 6, 2])), 0)
func_286_call = mod.get_global_var('func_286')
func_289_call = mutated_mod.get_global_var('func_289')
const_3151 = relay.const([[-7],[8],[6],[6],[2],[-6],[5],[5],[9],[-4],[2],[-2],[3],[9],[-5],[10],[5],[-8],[10],[10],[3],[8],[7],[10],[9],[-10],[6],[-7],[3],[-9],[-6],[-10],[7],[-3],[-2],[-6],[-8],[3],[-10],[-3],[6],[1],[-7],[-3],[4],[-9],[-10],[-1],[-9],[-3],[7],[3]], dtype = "int8")#candidate|3151|(52, 1)|const|int8
var_3152 = relay.var("var_3152", dtype = "int8", shape = (364,))#candidate|3152|(364,)|var|int8
call_3150 = func_286_call(relay.reshape(const_3151.astype('int8'), [1, 13, 4]), relay.reshape(var_3152.astype('int8'), [7, 13, 4]), )
call_3153 = func_286_call(relay.reshape(const_3151.astype('int8'), [1, 13, 4]), relay.reshape(var_3152.astype('int8'), [7, 13, 4]), )
func_1841_call = mod.get_global_var('func_1841')
func_1844_call = mutated_mod.get_global_var('func_1844')
var_3159 = relay.var("var_3159", dtype = "float64", shape = (1008,))#candidate|3159|(1008,)|var|float64
call_3158 = relay.TupleGetItem(func_1841_call(relay.reshape(var_3159.astype('float64'), [14, 8, 9])), 2)
call_3160 = relay.TupleGetItem(func_1844_call(relay.reshape(var_3159.astype('float64'), [14, 8, 9])), 2)
output = relay.Tuple([call_3115,call_3119,const_3120,call_3150,const_3151,var_3152,call_3158,var_3159,])
output2 = relay.Tuple([call_3116,call_3121,const_3120,call_3153,const_3151,var_3152,call_3160,var_3159,])
func_3165 = relay.Function([var_3152,var_3159,], output)
mod['func_3165'] = func_3165
mod = relay.transform.InferType()(mod)
mutated_mod['func_3165'] = func_3165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3165_call = mutated_mod.get_global_var('func_3165')
var_3167 = relay.var("var_3167", dtype = "int8", shape = (364,))#candidate|3167|(364,)|var|int8
var_3168 = relay.var("var_3168", dtype = "float64", shape = (1008,))#candidate|3168|(1008,)|var|float64
call_3166 = func_3165_call(var_3167,var_3168,)
output = call_3166
func_3169 = relay.Function([var_3167,var_3168,], output)
mutated_mod['func_3169'] = func_3169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3002_call = mod.get_global_var('func_3002')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_3176 = func_3002_call()
call_3177 = func_3002_call()
output = call_3176
output2 = call_3177
func_3180 = relay.Function([], output)
mod['func_3180'] = func_3180
mod = relay.transform.InferType()(mod)
output = func_3180()
func_3181 = relay.Function([], output)
mutated_mod['func_3181'] = func_3181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_3203 = func_3112_call()
call_3204 = func_3112_call()
uop_3220 = relay.cosh(call_3203.astype('float32')) # shape=(4, 9, 4)
uop_3222 = relay.cosh(call_3204.astype('float32')) # shape=(4, 9, 4)
func_484_call = mod.get_global_var('func_484')
func_489_call = mutated_mod.get_global_var('func_489')
var_3224 = relay.var("var_3224", dtype = "uint8", shape = ())#candidate|3224|()|var|uint8
const_3225 = relay.const([1.416324,-9.831409,-8.763337,-3.864424,3.689301,-2.699016,-5.884445,1.673963,6.290364,-6.279372,7.788133,5.061026,-7.098649,0.684546,-0.865556,8.028189,9.946727,4.227316,6.415205,8.126103,4.823727,9.497946,-4.238381,-7.581235,-3.680204,2.143505,-0.475159,8.899020,-7.989089,-1.475476,8.044364,-9.636909,2.300182,9.580549,-3.684882,6.150728,-8.597141,3.934994,-9.941391,-2.509590,8.922065,-1.855551,-9.446350,-7.454363,-1.752837,5.950398,-1.114318,-7.321025,-0.223472,-7.562965,2.285274,-8.192321,-8.194817,-1.300160,-6.380799,-9.749500,-9.979861,4.244531,-6.194691,6.487095,-3.081322,-3.740497,1.737813,9.969525,-7.678864,-9.462030,9.766871,2.557621,-3.211291,-7.133270,-3.695843,-6.461087], dtype = "float32")#candidate|3225|(72,)|const|float32
const_3226 = relay.const([9,-2,8,-8,1,-2,2,8,8,-5,-9,-3,-5,-3,-8,-5,8,8,1,9,-9,2,10,3,6,-4,-9,1,-4,2,9,-10,7,4,-3,-2,3,4,-4,1,3,4,4,7,-2,-9,8,-7,-7,-3,-4,-3], dtype = "int8")#candidate|3226|(52,)|const|int8
call_3223 = relay.TupleGetItem(func_484_call(relay.reshape(var_3224.astype('uint8'), []), relay.reshape(const_3225.astype('float32'), [72,]), relay.reshape(const_3226.astype('int8'), [52,]), ), 2)
call_3227 = relay.TupleGetItem(func_489_call(relay.reshape(var_3224.astype('uint8'), []), relay.reshape(const_3225.astype('float32'), [72,]), relay.reshape(const_3226.astype('int8'), [52,]), ), 2)
uop_3230 = relay.sinh(uop_3220.astype('float64')) # shape=(4, 9, 4)
uop_3232 = relay.sinh(uop_3222.astype('float64')) # shape=(4, 9, 4)
output = relay.Tuple([call_3223,var_3224,const_3225,const_3226,uop_3230,])
output2 = relay.Tuple([call_3227,var_3224,const_3225,const_3226,uop_3232,])
func_3235 = relay.Function([var_3224,], output)
mod['func_3235'] = func_3235
mod = relay.transform.InferType()(mod)
mutated_mod['func_3235'] = func_3235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3236 = relay.var("var_3236", dtype = "uint8", shape = ())#candidate|3236|()|var|uint8
func_3235_call = mutated_mod.get_global_var('func_3235')
call_3237 = func_3235_call(var_3236)
output = call_3237
func_3238 = relay.Function([var_3236], output)
mutated_mod['func_3238'] = func_3238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_3255 = relay.TupleGetItem(func_3054_call(), 0)
call_3256 = relay.TupleGetItem(func_3056_call(), 0)
func_3165_call = mod.get_global_var('func_3165')
func_3169_call = mutated_mod.get_global_var('func_3169')
var_3281 = relay.var("var_3281", dtype = "int8", shape = (364,))#candidate|3281|(364,)|var|int8
const_3282 = relay.const([1.088597,-0.710724,-4.083744,1.616831,-1.173393,-9.635863,1.721339,-0.699476,-4.274347,8.738368,5.250038,-1.732330,2.462496,-0.438490,-0.336644,4.389796,4.468639,2.743402,-3.413888,6.158178,-4.240943,-2.355596,-1.089776,1.717659,2.777724,1.775246,6.652706,-6.507005,-5.728901,-2.143825,5.298750,-3.220029,7.143325,-4.296980,1.793059,-8.099981,-4.135505,7.081827,2.434327,2.575109,6.384107,3.024754,-0.083181,-0.138465,4.911263,7.018013,-8.988079,9.011228,7.462594,7.620901,6.394439,9.768819,5.147495,-7.021528,6.589024,0.180988,-5.027589,-8.664167,-8.322156,9.489892,5.354503,-7.315356,5.029369,8.949904,-5.017329,9.818856,-8.317382,9.695751,0.688923,0.777434,6.920464,-2.514103,8.705358,8.104141,0.515914,0.877521,4.223023,-1.326441,9.860140,-0.845710,2.793688,-8.577701,-2.448959,5.194992,2.432520,-6.869992,3.361673,2.851014,7.725044,-8.384572,6.453045,5.750332,-1.806580,3.455606,4.496727,5.116943,2.780921,6.857582,0.192669,-5.474236,1.519615,3.578079,8.476265,5.838157,0.836162,9.870583,-5.495306,-7.880994,-0.214434,-6.545704,6.278861,-2.975837,0.746846,-6.252671,-8.766015,-1.736435,6.973198,-7.261658,-5.896943,-9.471126,-7.794488,-4.408494,-7.492907,7.519798,2.085925,3.109714,5.038146,3.582343,8.095389,9.766424,-1.671327,7.661726,8.976537,-1.224843,5.363997,-3.868119,-2.016976,-1.840141,1.849824,-5.068979,-8.675807,9.627302,2.314126,-2.076956,-1.375302,4.192933,9.019507,-1.584155,-8.273144,-3.418851,1.320542,7.572231,-1.263367,1.805173,8.543937,-9.002745,4.101366,9.370438,-4.547991,0.691363,1.806127,-5.270170,4.916761,-8.116840,0.026796,7.395736,5.290311,2.479225,8.934769,7.172557,-5.607321,-5.853523,5.774092,-9.053946,7.459713,-0.985447,-3.047341,-9.825602,8.395748,-9.782445,6.128273,-5.044935,-4.393633,-0.832209,-3.745090,9.282085,7.643262,-1.352343,1.790439,3.864938,-3.062993,-5.240942,-6.989321,-5.189691,8.843204,-0.513612,-2.192048,3.683255,-2.068116,-2.971224,0.313106,6.671749,6.474533,0.642181,3.057047,-0.006526,-5.982369,-6.260921,3.809530,-1.767828,9.417341,1.964760,1.737901,3.276786,0.463468,-7.440217,9.303088,2.144746,8.378331,1.228910,8.078939,-4.725969,-7.993931,-9.589926,6.631897,-7.047717,-9.706165,8.620576,-7.337594,5.013476,-4.367720,-1.277997,-7.151923,7.822520,-1.611119,-2.875128,-7.049542,2.262459,6.286821,-7.536393,3.556808,-1.653929,-3.255841,2.859452,-2.664864,-6.572183,3.888593,-1.274484,7.528211,5.877884,-8.080224,8.638817,7.204836,-7.254316,6.721075,4.666750,9.459419,-4.081165,0.377540,1.077926,-0.756746,2.369404,-2.365855,0.101881,7.686972,-9.409571,-1.436020,-2.528199,-7.740593,1.576825,1.000882,-9.505836,-2.338548,-4.564349,7.356965,6.607387,-9.762812,4.143655,-9.177544,-3.399364,7.161531,7.689925,-3.526335,5.600937,-1.661509,-4.749901,-1.285268,2.138557,9.375844,-1.922560,7.227687,3.881768,-8.888855,-1.945054,6.857133,-1.834769,6.936926,7.966559,0.643892,1.098056,7.693085,6.247198,-1.356943,-6.800207,1.298551,-8.961147,-3.716156,-3.670741,-2.442493,4.817175,8.445123,7.573230,5.412783,-3.036280,0.407767,1.236992,-2.491367,-5.319729,1.494644,-1.723824,-5.946661,3.000431,-0.998314,4.996686,-7.268455,2.817067,7.628370,0.262161,7.426507,1.679691,8.047570,3.004251,-3.492166,-7.033066,-8.390770,-0.781049,-6.003497,2.687980,5.729216,7.867804,4.411759,1.408775,6.342238,7.338684,-3.702310,-4.331855,9.323347,6.139406,4.860043,7.529488,5.408356,-5.165548,1.123133,-4.400322,2.427694,5.263602,-7.616799,3.669770,0.248172,-9.814118,9.459516,6.173006,-4.663609,-5.144288,-3.695256,7.299248,4.825176,6.713907,1.824679,0.221345,-3.162013,0.464709,0.146619,-2.845545,-5.568335,5.786280,1.402036,-0.344176,4.705768,-6.697056,8.535747,8.846116,8.470654,8.297396,4.583979,4.403049,8.102756,-6.459676,7.035077,3.299252,-1.204824,-7.373447,5.651243,6.734247,4.229070,0.395330,-4.053465,-5.175041,1.228877,-9.993975,-8.691384,-5.006649,6.832511,7.020761,-7.070513,-0.277396,0.026525,-4.373879,2.722147,4.659606,1.535245,9.867123,-3.636139,-6.736137,-0.973019,-5.590541,-2.401384,-1.631355,1.137575,4.897618,5.594875,-0.453333,-9.280607,5.474124,5.214483,-0.531794,6.983501,-7.935114,6.463450,-6.306222,2.303825,8.116823,3.437183,5.416997,5.475480,-5.919647,-8.953128,1.895020,-8.045599,8.031218,2.175328,-5.142142,9.618129,-0.919867,0.085481,-2.093408,6.742763,0.110517,-5.747498,-4.762239,9.099782,-6.985246,5.411838,-4.483246,-7.595663,4.467826,4.868497,4.566578,-7.741729,-5.924772,-3.347517,9.145795,-8.263727,-3.976587,5.817319,-8.621195,-6.588266,5.362819,-3.843746,8.433089,7.060566,-9.661038,-8.601084,3.612327,-4.224586,6.508395,6.043372,-2.046771,4.488051,-5.969279,2.288758,4.732928,6.262021,-3.702061,-2.201526,-2.900512,-5.652298,-5.597701,-9.277661,-3.802045,7.823596,3.079968,-3.355967,-7.607050,4.603357,-6.092335,2.675266,-3.725904,-4.662238,-3.839299,-5.432883,-5.152117,-3.359057,0.325218,3.125848,4.313384,1.807898,4.672937,-2.455845,4.496607,-3.912899,7.740283,4.622870,-5.663537,-3.489966,-3.535484,7.957461,2.158694,-0.445334,9.532089,-8.103566,-8.460577,1.079060,6.510327,-9.113886,1.788440,7.942023,-4.570729,-7.520556,-2.969462,-5.853907,6.918077,-2.387955,3.344052,-4.649295,-6.618602,6.923006,-7.837108,-5.100256,-1.141776,7.387530,9.309017,-2.719507,4.620514,-3.829357,7.184259,6.548203,-8.634318,-5.168707,-9.924178,-8.873773,2.618986,7.800043,5.267981,-7.652058,-2.042276,8.007001,-2.892476,-4.899606,3.879143,4.551031,4.593829,0.529728,-1.341212,1.413793,-8.501556,0.432684,7.926540,-0.222231,-2.343768,-4.738667,-3.713828,-8.698622,-9.739026,-6.593305,9.032444,-8.134590,-1.034332,2.045810,3.934343,9.392110,-0.106710,-6.650284,-1.255469,-6.796654,4.514606,1.894869,4.331892,-6.717354,-4.525096,8.214130,-7.628185,-2.382789,3.863039,-5.045183,-0.934872,6.784454,-2.450437,-2.849540,-7.129188,-3.204123,-5.917010,8.010492,3.999329,5.517365,-7.569017,-2.951021,-4.669862,-9.698293,-4.056344,5.721753,-0.447427,8.150113,-6.126332,6.138255,6.946942,-4.137168,-4.916819,0.053441,3.537977,8.288963,9.043397,-0.262399,8.497133,2.055128,8.322950,-0.854617,0.225951,8.161091,-4.988874,-4.001790,-0.018236,0.091919,-6.403156,-1.497719,4.780759,-8.401781,6.492752,-9.829511,8.241491,-2.701480,-5.057796,-0.356608,6.677416,6.372359,5.207771,9.133712,-2.530647,-2.078170,0.937966,-3.403155,-9.368746,3.449637,-0.612114,-7.704933,9.668452,-3.137676,-1.010235,-3.403744,-6.145232,9.246292,1.995696,5.773289,3.252978,3.204430,3.727957,5.612343,-7.067092,0.906200,-4.635404,-8.531852,9.451327,-4.767978,0.190555,7.584664,-6.382231,9.271433,6.417158,-3.433616,-8.493232,2.282426,5.975410,-0.088431,9.057195,-0.040716,3.319776,6.268505,-5.148479,-7.960918,-6.371464,9.696157,-8.783966,0.603454,-5.472260,-0.455573,1.280367,-2.663542,-5.845276,-6.779613,-0.977896,-1.969368,9.891851,-2.995960,2.496077,3.687650,-0.112491,-9.459546,-9.738272,-2.752634,0.042933,9.420347,-3.774649,-9.356627,-5.279737,-9.410040,9.940814,5.062604,9.097832,-9.902702,-6.738515,-5.444884,0.372688,-7.470159,-4.169138,-3.940443,2.228062,-2.898404,3.195115,6.734754,9.752710,-3.594550,-7.503414,4.400199,-4.250246,-0.942379,-0.755336,9.941112,5.667969,5.360738,6.984457,-6.006671,7.498092,-8.709437,4.524866,4.448143,-0.284242,1.544078,7.685307,-2.290518,8.507172,-0.713451,2.041548,3.053875,8.704208,0.971635,-7.856914,-8.199338,-0.815925,-9.035750,-4.475861,1.571268,1.337632,3.769280,5.027910,-0.114574,-0.184064,-1.612436,8.510444,-0.115164,-3.453966,7.281916,5.565166,0.078935,-5.663792,8.892797,6.219207,3.902356,-3.709225,0.082769,-9.386966,-1.608151,-8.408426,0.725965,-3.459944,3.512020,7.125045,0.224938,-8.244224,-1.840260,-1.963739,8.907932,-1.834985,-0.327960,6.403953,2.324308,-3.564034,-6.458293,-3.919076,-2.582551,9.082367,-5.353031,-0.221922,-3.785859,-2.922454,1.507045,-6.783540,-7.247422,-0.042083,6.291676,-8.485173,8.736589,-6.159102,5.936864,4.588845,3.679693,7.497616,2.967036,0.328776,-6.165067,6.330867,-2.247631,-8.118480,-6.322972,-9.697620,-8.044396,-5.351135,2.795848,5.696244,-0.098219,-4.359475,-4.637341,7.164106,4.590916,8.022028,-3.094264,9.775321,-8.744366,5.814286,-6.924517,6.114618,-7.219481,9.797236,-5.614930,-4.746946,1.431331,0.046872,7.780464,-5.064911,5.003588,-2.111285,-0.147256,7.430307,-2.493543,6.086076,-4.998331,0.269064,0.542319,-6.788405,-6.652379,-7.351498,1.944177,2.298312,-0.020569,3.586025,1.831583,4.599857,0.380955,-2.137298,2.355388,1.466720,-2.613655,-2.814923,3.984684,-0.323273,0.920885,0.652746,-1.266994,6.971766,-8.101505,-8.154082,6.565344,5.508430,-5.525920,-4.976064,-7.773698,3.470483,-3.183740,-4.492253,-4.928254,7.757947,6.872124,-5.678197,2.442950,-3.373285,-3.620745,8.989927,-4.832902,9.937153,7.567015,-1.622383,1.261136,-3.929571,1.159162,6.300002,3.574421,8.128637,1.873689,-6.027412,-7.959771,1.865334,-5.285140,-3.270720,2.983395,0.010729,3.235450,-0.537308,-6.790660,-0.533171,7.398646,6.750416,3.871027,7.938850,1.584445,0.454771,-3.738756,-9.452166,-6.408094,2.036856,-9.610629,-9.040877,-4.200471,-1.433901,7.509550,-3.999018,-2.192580,-5.444978,0.565824,1.006353,2.914191,-5.483891,9.635026,-1.749848,4.572182,4.054611,6.229190,2.018574,6.448638,-9.104614,-2.825709,8.038178,-8.583492,-1.391967,-1.572687,-2.648394,9.178046,1.960837,-9.725056,-7.469526,-5.516883,8.536318,4.813985,5.272057,6.041746,7.268515,7.327837,-4.590426,-4.203854,4.032658,-0.140564,9.232797,-1.272175,-4.025485,-9.313252,-0.639925,0.112181,-3.136661,-0.222877,4.287243,0.276514,0.153749,1.832391,7.523581,0.082962,-9.743959,-9.638585,6.404771,4.014198,4.947562,-2.363567,-2.306898,-2.116653,-2.325643,-2.260738,-5.073102,-6.290662,-0.354614,6.686362,-4.806787,-2.155218,7.920339,-2.474458,8.102686,-9.497092,1.857310,-6.954593,-5.915363,3.966309,6.106504], dtype = "float64")#candidate|3282|(1008,)|const|float64
call_3280 = relay.TupleGetItem(func_3165_call(relay.reshape(var_3281.astype('int8'), [364,]), relay.reshape(const_3282.astype('float64'), [1008,]), ), 2)
call_3283 = relay.TupleGetItem(func_3169_call(relay.reshape(var_3281.astype('int8'), [364,]), relay.reshape(const_3282.astype('float64'), [1008,]), ), 2)
uop_3294 = relay.sqrt(call_3255.astype('float64')) # shape=(4, 9, 4)
uop_3296 = relay.sqrt(call_3256.astype('float64')) # shape=(4, 9, 4)
var_3300 = relay.var("var_3300", dtype = "int8", shape = (364,))#candidate|3300|(364,)|var|int8
bop_3301 = relay.maximum(var_3281.astype('uint64'), relay.reshape(var_3300.astype('uint64'), relay.shape_of(var_3281))) # shape=(364,)
output = relay.Tuple([call_3280,const_3282,uop_3294,bop_3301,])
output2 = relay.Tuple([call_3283,const_3282,uop_3296,bop_3301,])
func_3335 = relay.Function([var_3281,var_3300,], output)
mod['func_3335'] = func_3335
mod = relay.transform.InferType()(mod)
mutated_mod['func_3335'] = func_3335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3335_call = mutated_mod.get_global_var('func_3335')
var_3337 = relay.var("var_3337", dtype = "int8", shape = (364,))#candidate|3337|(364,)|var|int8
var_3338 = relay.var("var_3338", dtype = "int8", shape = (364,))#candidate|3338|(364,)|var|int8
call_3336 = func_3335_call(var_3337,var_3338,)
output = call_3336
func_3339 = relay.Function([var_3337,var_3338,], output)
mutated_mod['func_3339'] = func_3339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3180_call = mod.get_global_var('func_3180')
func_3181_call = mutated_mod.get_global_var('func_3181')
call_3375 = func_3180_call()
call_3376 = func_3180_call()
func_1841_call = mod.get_global_var('func_1841')
func_1844_call = mutated_mod.get_global_var('func_1844')
var_3381 = relay.var("var_3381", dtype = "float64", shape = (1008,))#candidate|3381|(1008,)|var|float64
call_3380 = relay.TupleGetItem(func_1841_call(relay.reshape(var_3381.astype('float64'), [14, 8, 9])), 2)
call_3382 = relay.TupleGetItem(func_1844_call(relay.reshape(var_3381.astype('float64'), [14, 8, 9])), 2)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_3389 = func_3112_call()
call_3390 = func_3112_call()
func_2053_call = mod.get_global_var('func_2053')
func_2057_call = mutated_mod.get_global_var('func_2057')
var_3397 = relay.var("var_3397", dtype = "float64", shape = (2288,))#candidate|3397|(2288,)|var|float64
const_3398 = relay.const(-6, dtype = "int16")#candidate|3398|()|const|int16
call_3396 = relay.TupleGetItem(func_2053_call(relay.reshape(var_3397.astype('float64'), [13, 16, 11]), relay.reshape(const_3398.astype('int16'), []), ), 3)
call_3399 = relay.TupleGetItem(func_2057_call(relay.reshape(var_3397.astype('float64'), [13, 16, 11]), relay.reshape(const_3398.astype('int16'), []), ), 3)
const_3405 = relay.const([[[3,-9,-7,8,-7,-4,2,4,1,7,9,-6,6,4,1,-4],[-8,-3,-3,-8,1,-3,-1,-4,2,-4,7,-8,7,-10,9,-3],[9,1,4,-2,-3,-7,3,-7,-7,8,10,6,7,4,-2,-3],[10,2,-3,-10,-3,-1,10,-1,-6,10,4,-3,-4,9,3,-6],[5,-8,4,7,5,-6,-3,-2,6,8,10,5,6,1,-3,2],[-6,-8,-10,-10,10,-10,2,5,5,-10,-3,-2,-8,-10,-9,10],[-5,-6,1,10,1,-6,3,1,-5,5,-7,-8,-10,-7,-3,4],[5,-4,7,10,5,3,9,6,-6,-3,9,-9,2,-10,2,6],[6,-6,6,-5,3,-9,-1,-8,7,1,5,-7,-5,-5,-2,6]],[[10,5,9,-7,7,5,-10,-6,-4,-4,-6,-7,9,9,4,-1],[9,-10,-5,1,2,1,-10,-10,-1,-5,-9,-9,-6,-2,-4,-5],[-1,1,4,10,-9,2,6,-4,-8,6,-1,6,5,-8,-10,-2],[-9,-7,-5,1,-7,-1,-4,-2,4,-10,4,6,5,-8,6,6],[-3,8,-1,3,-9,3,-1,-8,4,4,3,7,2,2,7,3],[2,-9,-10,3,7,5,-10,5,-8,-1,-8,10,6,-10,-2,3],[6,-1,4,-6,-9,-3,3,-2,-8,3,-1,-8,6,10,-4,-4],[-6,-7,-6,-5,5,5,-5,-8,-9,-9,-3,-9,-4,7,-3,8],[-3,-2,-9,7,5,1,-8,-1,9,9,-6,3,9,-9,2,-4]],[[2,5,4,-5,-5,-7,5,-1,-9,-8,-1,4,-2,6,10,-8],[-7,6,-8,-10,-7,-5,-6,-7,-7,9,-8,9,8,4,7,-2],[9,-8,7,8,-5,-6,-9,8,-10,3,-10,7,-10,-5,7,3],[-5,10,9,8,1,6,9,-6,-1,-6,-5,-10,-8,-4,-2,10],[6,-9,-10,-8,3,2,10,-10,9,1,-2,1,-5,4,1,-7],[4,3,-5,4,7,-9,-4,-7,6,8,-8,-10,3,-2,-8,3],[-7,5,-9,1,4,4,-10,10,-8,5,-7,-9,-7,-5,4,-6],[-6,4,-7,-3,6,1,-6,-9,1,-10,-7,9,2,10,5,8],[4,-7,6,3,7,7,5,8,9,4,-7,-3,-8,6,6,5]],[[5,-2,1,-4,-9,2,6,-2,5,5,1,-4,9,-2,-3,7],[-8,2,4,8,6,1,-9,9,9,10,1,8,-4,-7,7,9],[-4,-7,-7,-4,-6,-7,8,-2,9,8,6,10,-8,8,-2,3],[8,-6,6,9,7,-8,1,3,-10,10,10,-5,-8,6,-2,5],[8,8,-1,5,-5,4,-2,8,9,9,7,-10,9,-4,-2,2],[2,5,6,-1,4,7,-4,10,-2,-5,-5,5,-8,4,9,3],[5,-5,9,-4,-3,10,7,-3,3,9,2,9,-4,-1,10,-6],[-3,7,-1,6,1,1,10,-6,-1,-8,-10,4,-1,-1,-10,-7],[10,-6,3,4,10,2,1,-2,5,-7,8,-9,8,-3,6,3]],[[3,6,-1,-2,8,-2,1,1,-5,-1,10,5,1,-6,5,-5],[-9,4,3,-5,-9,-8,-3,10,-7,-3,2,-5,-6,-2,-10,-9],[9,-3,1,-3,-4,-5,-2,-5,6,8,-5,-1,-5,2,-1,6],[-6,4,6,-2,-10,7,1,-3,-9,-7,5,5,-10,-5,8,10],[-2,-5,-4,1,5,-10,-10,-5,5,5,-9,-1,-7,-9,10,3],[8,4,-7,7,-3,-8,1,3,-7,-7,-9,5,-5,-3,8,10],[-5,9,9,4,5,6,9,-4,-8,-3,9,4,-4,2,-4,9],[9,3,-2,-2,1,2,5,-4,-7,1,7,-4,2,-3,10,-8],[-10,9,-8,-10,6,8,-8,-6,1,4,3,-9,4,3,-3,-5]],[[4,4,2,10,6,3,2,2,7,9,4,4,9,-3,10,7],[1,-5,-7,-5,5,-10,7,8,8,5,5,-3,7,-1,4,-1],[1,-10,-3,1,2,2,-5,-5,-8,-6,-8,-9,5,-3,8,-5],[-2,-5,-1,10,2,-3,2,10,6,5,7,2,4,2,-1,-10],[6,-7,-6,10,-1,-2,1,-3,10,-3,-1,-10,2,8,-10,10],[6,3,-6,-9,-6,-8,-5,-3,8,-3,-3,-6,4,10,-4,4],[-8,3,9,-1,-5,3,-1,-8,-2,-9,-5,-2,1,-6,4,9],[6,6,-6,-2,5,4,2,4,-4,-1,-8,-9,-6,-5,3,-2],[6,4,-6,-2,2,8,7,-7,5,-9,2,-3,10,-9,-2,2]],[[1,-9,-4,8,8,-9,-10,-5,4,-7,3,-5,9,-8,6,-8],[-7,4,7,-7,-9,-9,3,-3,1,5,1,-9,-5,1,8,-8],[6,8,5,-10,2,-3,-5,-3,-6,10,-10,8,-5,-9,-6,-8],[1,8,3,-2,7,-9,-2,9,-3,-3,-10,-10,-10,8,8,-10],[3,-6,-6,-1,-4,5,5,3,-7,-10,-9,-9,-9,-5,-4,7],[5,-2,-4,3,-3,5,4,-5,6,5,-6,-4,-3,4,-6,-5],[-6,9,9,-1,10,-2,4,5,-3,-5,7,5,-8,7,2,2],[-8,10,-5,-4,7,-9,-5,10,7,8,5,-3,-4,5,-4,-4],[2,-2,4,-1,-3,-1,7,8,-5,7,4,2,-2,-4,8,1]],[[-3,-4,-10,-8,-5,3,8,-5,2,4,-4,3,-5,-4,-6,-10],[7,-6,9,4,-2,-8,-10,5,7,-5,-8,-8,-5,6,7,-10],[2,-5,-9,6,6,2,-9,8,-8,8,3,-1,-10,10,4,6],[-8,-6,-8,8,8,-9,-9,-4,10,-5,8,1,-2,7,-5,-2],[4,9,2,-3,7,7,9,-5,3,-1,-3,-3,7,2,3,-4],[2,8,-1,6,4,-6,-7,1,-10,-3,9,9,-7,8,5,-6],[5,2,-6,-6,2,-3,-4,8,-9,10,-8,3,-1,5,3,2],[-7,4,3,-6,-5,-5,-5,4,8,1,-2,-1,-5,9,-10,-6],[7,2,3,8,-5,6,8,4,-3,-9,-1,-9,9,-4,9,5]],[[3,10,3,3,-1,-8,10,-2,-8,1,-3,6,6,-10,2,-5],[-1,1,10,-2,3,-9,-3,-8,-4,-10,9,1,-6,4,-4,-2],[-3,9,-7,6,10,-4,8,3,3,1,7,-9,2,-10,-2,1],[3,1,-10,9,4,-4,9,4,-9,4,-6,-1,-8,-7,1,-8],[-10,6,5,2,1,2,3,2,1,-10,-2,-5,1,-1,-2,1],[-7,3,-2,-1,-1,3,-9,6,2,6,8,-2,-5,-5,1,10],[1,-10,-8,-6,-4,-1,-3,-2,4,6,-1,-2,3,-5,3,10],[9,-7,-1,-4,-9,9,-3,-6,2,8,2,2,-9,-10,4,-4],[-2,-8,3,9,8,-5,-10,9,-5,-5,-8,4,8,8,4,5]],[[-5,8,-6,2,-4,8,-10,-7,-3,-3,1,-10,1,-1,2,-2],[10,6,8,3,-7,-7,-7,5,9,2,-7,-9,2,7,7,-2],[-1,4,-8,-1,-7,5,5,5,-8,-3,1,5,-3,7,2,-8],[10,2,10,-5,4,-2,-10,2,-4,-2,9,8,10,6,7,-6],[-8,6,-4,7,-3,-8,4,10,6,-4,-9,-1,-8,-2,-2,5],[-7,-10,-4,-8,5,-7,-5,-8,-8,8,-5,-8,-5,-9,1,9],[-4,8,5,4,-9,1,-9,6,3,7,-2,-10,-7,6,-4,-5],[-1,6,-8,-7,3,-2,-9,10,-10,-10,1,-1,-3,-8,9,5],[8,-7,-4,-5,4,-9,-4,5,-5,-10,8,-9,-8,8,-4,-9]]], dtype = "int16")#candidate|3405|(10, 9, 16)|const|int16
bop_3406 = relay.bitwise_xor(const_3398.astype('uint8'), const_3405.astype('uint8')) # shape=(10, 9, 16)
output = relay.Tuple([call_3375,call_3380,var_3381,call_3389,call_3396,var_3397,bop_3406,])
output2 = relay.Tuple([call_3376,call_3382,var_3381,call_3390,call_3399,var_3397,bop_3406,])
func_3413 = relay.Function([var_3381,var_3397,], output)
mod['func_3413'] = func_3413
mod = relay.transform.InferType()(mod)
mutated_mod['func_3413'] = func_3413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3413_call = mutated_mod.get_global_var('func_3413')
var_3415 = relay.var("var_3415", dtype = "float64", shape = (1008,))#candidate|3415|(1008,)|var|float64
var_3416 = relay.var("var_3416", dtype = "float64", shape = (2288,))#candidate|3416|(2288,)|var|float64
call_3414 = func_3413_call(var_3415,var_3416,)
output = call_3414
func_3417 = relay.Function([var_3415,var_3416,], output)
mutated_mod['func_3417'] = func_3417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_3463 = relay.TupleGetItem(func_3054_call(), 0)
call_3464 = relay.TupleGetItem(func_3056_call(), 0)
func_3002_call = mod.get_global_var('func_3002')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_3467 = func_3002_call()
call_3468 = func_3002_call()
func_3335_call = mod.get_global_var('func_3335')
func_3339_call = mutated_mod.get_global_var('func_3339')
const_3476 = relay.const([8,9,8,-10,-1,-5,9,3,-1,-7,2,10,-7,7,-1,-6,8,10,-7,-10,5,7,-1,5,-9,-10,8,2,4,-5,10,3,7,4,6,-4,9,-4,4,-2,-2,6,4,-5,-9,-3,-2,-1,-10,4,-8,4,2,10,5,-8,4,-5,4,-7,10,6,-6,2,-1,-1,-5,-8,3,4,10,5,8,4,-1,6,3,-5,8,-7,2,-8,3,5,-4,5,10,9,3,-9,4,-8,-9,8,-8,8,4,-8,-2,4,1,9,3,-9,-1,1,-8,-4,1,6,-8,-1,10,1,2,9,7,5,6,-6,-4,2,-5,-9,-8,-6,-9,9,8,-3,-5,6,-8,2,6,-1,-5,10,-9,8,4,-4,-3,-4,4,3,-10,3,-1,4,-3,8,7,-1,9,-4,5,7,10,1,9,-3,-3,8,1,1,-8,5,-7,2,6,-10,-1,-9,8,-6,3,7,8,-2,-9,7,2,-3,-10,6,8,-7,2,-3,-7,9,-2,6,4,-1,2,10,-9,4,7,-7,7,5,1,10,-9,-8,7,-1,3,-4,1,1,-1,1,-7,5,2,5,-10,-3,-6,-1,6,-4,5,4,-5,6,-1,6,-5,4,-10,3,6,10,7,-8,5,-2,1,-6,2,-4,1,1,-8,-5,5,-2,-4,-4,-6,-1,-4,1,10,6,1,5,10,10,-10,-8,-3,-6,5,-7,4,-1,-3,-6,10,-5,1,-3,-5,-9,-5,9,-9,6,-7,-4,1,1,-6,6,-8,6,-2,-2,-9,-3,-10,-4,-9,5,-3,9,2,5,7,-5,4,-6,-2,5,-9,-8,3,8,-2,10,-1,9,-6,-5,-8,8,4,10,10,7,-4,-8,9,-8,10,6,6,-7,10,5,-2,1,7,-4,-7,-6,-6,-9,-2,-5,5,-4,-7,-3,-2,-6,-3,4,10,-7,-9,-9,9,9,5,4,7,2], dtype = "int8")#candidate|3476|(364,)|const|int8
call_3475 = relay.TupleGetItem(func_3335_call(relay.reshape(const_3476.astype('int8'), [364,]), relay.reshape(const_3476.astype('int8'), [364,]), ), 3)
call_3477 = relay.TupleGetItem(func_3339_call(relay.reshape(const_3476.astype('int8'), [364,]), relay.reshape(const_3476.astype('int8'), [364,]), ), 3)
bop_3485 = relay.subtract(const_3476.astype('uint8'), relay.reshape(call_3475.astype('uint8'), relay.shape_of(const_3476))) # shape=(364,)
bop_3488 = relay.subtract(const_3476.astype('uint8'), relay.reshape(call_3477.astype('uint8'), relay.shape_of(const_3476))) # shape=(364,)
output = relay.Tuple([call_3463,call_3467,bop_3485,])
output2 = relay.Tuple([call_3464,call_3468,bop_3488,])
func_3498 = relay.Function([], output)
mod['func_3498'] = func_3498
mod = relay.transform.InferType()(mod)
mutated_mod['func_3498'] = func_3498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3498_call = mutated_mod.get_global_var('func_3498')
call_3499 = func_3498_call()
output = call_3499
func_3500 = relay.Function([], output)
mutated_mod['func_3500'] = func_3500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2955_call = mod.get_global_var('func_2955')
func_2957_call = mutated_mod.get_global_var('func_2957')
call_3512 = func_2955_call()
call_3513 = func_2955_call()
output = relay.Tuple([call_3512,])
output2 = relay.Tuple([call_3513,])
func_3526 = relay.Function([], output)
mod['func_3526'] = func_3526
mod = relay.transform.InferType()(mod)
output = func_3526()
func_3527 = relay.Function([], output)
mutated_mod['func_3527'] = func_3527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3180_call = mod.get_global_var('func_3180')
func_3181_call = mutated_mod.get_global_var('func_3181')
call_3545 = func_3180_call()
call_3546 = func_3180_call()
func_3165_call = mod.get_global_var('func_3165')
func_3169_call = mutated_mod.get_global_var('func_3169')
const_3551 = relay.const([10,-2,1,-3,2,7,6,9,5,9,-7,1,-10,4,1,10,3,4,-1,-4,-4,-9,2,-4,-9,2,9,-10,8,2,9,3,-7,7,-3,-2,-4,9,-10,-3,-7,7,-8,-6,2,8,-1,5,-9,5,5,-10,10,-7,4,9,6,-9,4,-3,-3,-8,-3,10,7,-3,-5,-3,4,-3,-9,10,-10,-10,-4,9,-5,2,1,-7,9,3,2,-9,4,-5,-6,-8,7,9,2,-9,-8,-4,-10,9,2,-3,6,3,4,4,-6,-6,-4,-2,-4,3,9,1,10,-1,10,9,8,7,-9,-1,5,7,2,-6,-10,6,-10,-3,7,-3,9,-4,-5,8,3,-10,-7,-8,6,-5,6,-8,-10,-7,4,-5,-3,10,9,-1,-7,1,-5,3,4,8,3,4,-8,2,10,-4,6,10,-2,-10,-9,-3,1,-8,7,-4,-3,-6,1,2,5,6,-2,9,-7,-6,-1,5,-6,8,8,-6,4,3,-1,-9,-2,10,-3,-1,1,9,6,-5,-6,10,8,-6,-9,8,-5,-8,5,-5,10,-9,3,2,-3,-4,1,2,1,10,10,-1,8,-3,9,1,6,-8,-1,8,9,-2,7,8,3,-7,-9,-7,-8,-1,-10,6,-4,5,-7,9,7,6,7,-10,-3,3,-5,-8,3,-2,4,1,4,-5,-8,-9,-8,-7,-7,3,-3,-2,9,3,-1,-8,-3,-3,2,-10,-4,5,3,5,8,10,6,-2,-5,-10,-10,-1,5,3,-4,10,-1,-8,-7,-4,2,-6,9,-5,5,-1,4,-1,8,10,7,9,-5,4,-1,6,-4,2,-4,-8,-4,3,10,7,-8,-1,-7,2,-7,-5,-5,-2,7,4,2,-10,10,-4,-9,-2,8,-9,2,-8,-8,-7,-5,-3,4,-6,9,5,-9,-2,2,3,-5,-6,6,8,-8,-8,-6,7,-8,8,-9,7,-4,6], dtype = "int8")#candidate|3551|(364,)|const|int8
var_3552 = relay.var("var_3552", dtype = "float64", shape = (1008,))#candidate|3552|(1008,)|var|float64
call_3550 = relay.TupleGetItem(func_3165_call(relay.reshape(const_3551.astype('int8'), [364,]), relay.reshape(var_3552.astype('float64'), [1008,]), ), 5)
call_3553 = relay.TupleGetItem(func_3169_call(relay.reshape(const_3551.astype('int8'), [364,]), relay.reshape(var_3552.astype('float64'), [1008,]), ), 5)
func_422_call = mod.get_global_var('func_422')
func_427_call = mutated_mod.get_global_var('func_427')
var_3567 = relay.var("var_3567", dtype = "float32", shape = (72,))#candidate|3567|(72,)|var|float32
var_3568 = relay.var("var_3568", dtype = "int8", shape = (52, 1))#candidate|3568|(52, 1)|var|int8
call_3566 = relay.TupleGetItem(func_422_call(relay.reshape(var_3567.astype('float32'), [12, 1, 6]), relay.reshape(var_3568.astype('int8'), [52, 1]), relay.reshape(const_3551.astype('int8'), [7, 52]), ), 0)
call_3569 = relay.TupleGetItem(func_427_call(relay.reshape(var_3567.astype('float32'), [12, 1, 6]), relay.reshape(var_3568.astype('int8'), [52, 1]), relay.reshape(const_3551.astype('int8'), [7, 52]), ), 0)
func_3413_call = mod.get_global_var('func_3413')
func_3417_call = mutated_mod.get_global_var('func_3417')
const_3574 = relay.const([-0.174077,6.618107,-0.574807,-6.846800,1.229131,2.800578,9.413541,-6.820827,0.890449,-0.049374,9.574483,7.223785,5.867703,-4.723645,1.405485,-8.128530,5.182309,-6.147822,0.918680,0.354543,-2.180443,4.337139,-3.776492,-5.273453,3.184096,-3.565284,9.138087,9.632342,6.187109,7.254097,0.748588,-6.572087,1.213332,1.889195,-6.720008,-7.042437,6.788339,-8.700782,3.657854,5.002475,7.076574,2.860512,5.303301,9.242353,-5.720286,7.452743,4.109842,-0.394658,-7.651963,2.130807,2.666759,-8.101846,-7.978464,-4.730410,7.560172,-3.415095,-8.927360,-8.489199,-5.583820,-0.857662,-4.377191,-4.809565,-3.907742,4.253216,-0.625003,8.082368,-1.396315,7.728754,-9.926730,-7.589383,9.381572,-6.152393,3.372990,-1.474920,-5.921161,-6.545792,-2.769696,-8.019953,-5.266988,-7.345027,0.356560,-7.355286,3.075127,-9.665565,7.822497,0.535418,3.164480,-2.746558,-6.846098,-6.859271,-1.839214,-5.723657,4.142930,5.587099,-5.931860,1.407142,0.737646,3.257614,8.501738,-4.544759,-0.311449,0.314099,7.333215,-6.351558,-0.708963,-0.728340,-9.455399,-3.475679,-6.212175,4.361539,8.216737,-4.842517,-8.350499,3.467225,7.992022,-2.722643,5.201685,2.867189,-3.744960,0.783180,-2.301406,3.360539,-5.657891,-9.037981,6.728108,2.023525,-9.519027,0.804760,7.436297,-1.827721,-7.446529,-0.079627,5.275472,-8.089043,-2.439715,-0.413215,1.004802,0.376331,7.907976,-6.071498,6.936822,5.953176,0.743078,-6.385751,9.590819,8.034652,0.098696,-8.781165,0.856665,-3.656015,-9.810910,-4.226147,-7.112282,0.139255,-2.659036,-9.748875,3.524814,0.222319,-2.909096,6.397699,3.490690,2.647747,-0.140321,7.405273,-5.961731,1.303400,-0.746886,3.152566,5.634236,0.740512,-4.663260,3.187135,1.706853,7.864565,-2.107437,-3.494743,7.714802,3.755750,9.438879,-2.729143,-6.488861,-5.954736,6.258821,-2.867065,-6.390122,-7.954404,3.402198,-8.734652,4.031008,0.724842,-4.646665,3.978059,7.237013,1.450187,1.097892,7.614157,-7.527352,-9.163055,2.257313,-3.432273,-0.397396,-1.641237,0.575226,2.296058,-9.965529,-2.445896,-9.362448,4.431452,-0.106204,-0.946010,-5.061332,-7.904696,3.186846,-9.560380,2.496241,-8.103203,-4.216423,8.916656,5.036761,-8.661756,6.944791,-3.684519,-1.202130,-0.178313,-3.194655,-5.518118,-1.199851,7.560838,4.673417,-7.765131,4.163631,9.797094,6.435293,2.943986,0.274841,8.024513,-6.368770,-4.137999,7.408078,-5.595784,4.762220,-9.151177,3.440749,4.078017,9.542846,7.161063,-7.849513,-9.581141,0.481272,-9.084590,1.591010,-0.633725,1.254703,-3.924936,0.217963,-7.582788,4.457211,-1.614123,2.055547,-5.643589,8.904200,8.717502,-8.181606,4.739499,8.603536,-8.533017,0.124283,-2.406457,8.864015,7.737297,1.202056,4.477863,-0.591411,4.990431,3.277129,7.876062,4.405838,-9.222016,-2.697217,-3.415134,7.859509,9.668090,8.260120,5.377058,-7.840809,5.247816,-4.166397,3.608753,-0.929686,-5.183590,-1.901305,-3.254310,-0.671509,5.082905,-8.335006,-7.932773,-6.385357,3.519588,-7.446211,-8.508217,5.548301,-1.002173,-7.128631,2.694757,7.878669,-3.738615,4.570973,1.629579,8.102170,-2.883504,-2.532463,7.587122,-5.088328,-1.793772,8.134139,-3.753118,-8.951327,-9.424574,-7.764581,5.643961,-0.239350,7.633021,-6.437586,5.481338,1.289318,-1.557414,9.761113,-8.470330,-2.510868,-6.497425,6.440963,-0.985262,6.891471,-7.053448,-8.077195,1.074073,2.791551,-0.134171,-7.662844,4.513466,-5.249405,2.590071,6.104011,5.649192,0.200735,4.740171,-2.623313,-7.145561,-2.146724,7.395958,0.868520,4.138632,6.027602,-1.450040,-8.969558,2.105707,4.121157,-8.602503,-8.346918,-5.992906,9.325671,-1.734686,-5.058537,0.312883,8.573214,3.883159,-3.477401,2.682642,4.300679,6.842656,3.229136,-4.757353,3.493462,9.956499,-3.669525,4.428403,3.894913,-9.497762,8.511855,3.851982,-6.973121,2.025016,2.124817,6.340184,-0.859069,-9.653484,6.010373,2.760526,7.644336,1.192371,-2.465774,7.971376,-0.976446,0.800858,-3.453996,9.305500,-7.322988,4.031679,6.057723,-9.577823,5.497731,-7.193643,4.534873,6.639327,-3.877984,-5.583276,-0.495619,3.888984,9.168840,-3.661504,9.192722,1.560674,-6.455131,9.010246,7.899565,1.408064,1.537210,9.683376,8.888207,1.519341,3.562245,6.896376,-9.020257,7.283700,1.298263,8.958945,5.559332,-3.863020,2.184615,1.688003,6.276201,2.853881,-2.230613,1.263394,2.845223,-3.091856,5.685477,-9.584800,-4.226551,2.295316,8.510667,-2.407077,1.268056,-2.509610,-9.587516,2.100687,9.120536,-1.043800,-1.672550,1.289656,5.475834,-2.111954,5.446490,-3.447286,-8.076044,-3.495191,-1.230676,-4.434668,6.606763,-9.974339,2.052518,-0.828106,-7.755685,-9.592179,-7.833713,-7.351194,3.584574,-9.004144,-2.900943,-2.017329,9.484141,-4.817749,1.254945,8.499484,-6.522033,0.955226,-4.151213,-2.934460,-3.991419,5.033471,-5.805490,-0.183932,-4.531496,7.818610,5.545046,-3.903318,-3.150600,-2.821157,0.626251,-4.910770,6.545069,0.906547,9.435043,-1.591916,3.207568,9.853859,-5.505011,7.147721,-2.518357,3.035264,9.712166,-9.733328,-2.227961,3.916360,3.317357,7.054848,5.410168,-2.515604,-7.806191,1.548111,-6.409131,-8.153033,-4.157231,6.337036,-3.349497,5.581758,-3.350277,5.786845,-4.933142,2.041326,-9.616004,4.787389,8.960253,4.219158,-1.317396,3.218347,2.921157,7.156631,-9.950915,-3.472347,6.801113,-7.777215,-8.227082,1.264628,-6.681658,-2.303686,8.472430,1.561196,8.346243,8.399313,5.900036,-8.748111,-2.791677,-9.587705,-8.724755,7.089573,-8.680908,-7.009653,3.036585,-6.737684,-3.754202,-8.088869,-0.463811,-5.624053,-8.954369,9.972551,7.069105,-5.081388,-3.070745,-2.478629,-5.845678,-4.040737,2.896302,4.765061,-0.876577,-2.651612,-0.404193,2.051068,-5.319336,-4.579080,1.144746,-7.287887,3.005122,-5.103264,-1.176477,-1.438827,-7.058886,7.888377,5.985577,-3.680918,-9.939360,-7.764641,1.143173,7.355355,-9.660958,2.736314,-9.719182,-3.961869,-8.729447,1.417655,5.539758,0.249525,-3.489422,6.611537,4.711446,-3.644208,-7.115673,-9.044073,-7.011033,-3.267598,2.828379,-9.155697,3.625502,5.555085,3.377132,-9.028908,4.995155,-1.457567,1.320723,9.031885,8.649143,-5.175186,1.511521,9.028453,6.447588,-9.131783,5.268248,-5.717826,3.151625,4.650549,-8.625125,9.127666,0.196095,6.415763,3.607595,-2.036744,-6.810612,-8.759652,7.964852,0.316790,9.179198,-5.275894,-2.108661,-2.886447,-6.241539,-7.128603,6.489019,-5.472691,8.708150,3.391557,9.985154,0.236060,9.528487,4.724918,-1.868738,8.630127,-1.012025,-1.334754,-4.132890,-7.827404,-9.288335,2.724457,-9.523867,7.262317,2.264824,-7.351529,-8.319752,9.283219,8.887598,-8.438901,5.101011,-5.409834,2.946059,4.931828,2.897489,2.130914,-7.490542,7.413876,-0.763746,9.089801,-8.333344,-6.214013,9.904556,-6.719015,-5.454520,-5.814634,-8.870100,6.008986,-2.585231,0.743683,-1.505219,0.811246,7.649279,3.056566,2.375398,9.289475,-0.327246,-9.489688,0.455602,9.343940,-3.165362,-1.162564,-0.338503,-7.309864,-4.759085,-6.267274,-3.656162,3.406632,-8.072214,-6.734551,9.822765,7.350094,3.474786,-4.665157,-4.660273,6.226791,4.363434,6.001999,4.301271,-3.029992,8.130574,3.300095,6.290718,3.218753,3.489727,1.124420,-0.750531,0.150597,6.986369,-7.771618,4.313993,-1.990262,9.156432,-6.699921,0.394133,-0.936081,5.769036,1.710898,0.140904,-6.956882,-6.242173,5.637717,2.778875,-3.661518,-4.750301,-8.933315,-7.714352,5.984020,5.504285,6.313695,-7.001686,0.242503,3.656426,-2.508394,-4.230007,1.482247,3.842362,7.140182,2.436843,5.827133,-5.785425,9.713967,-6.248618,9.785097,-1.867488,-2.445828,-4.401967,-2.464892,-5.562680,-3.850294,-8.154797,4.036531,0.350055,-6.717658,6.112027,-1.941868,3.013430,-5.340486,-3.396842,9.081189,-7.554722,-0.641997,-7.370732,-7.342785,0.736109,6.150120,2.543239,5.782838,8.970596,5.591004,7.558183,-2.222046,-1.953228,-4.584810,-8.057298,3.260112,-8.838478,-4.231017,8.029585,2.474268,0.849392,-1.640927,-7.941941,1.028561,9.893004,-6.341144,2.443831,6.499446,3.143545,-8.207620,-0.312873,0.196904,3.829684,7.784139,-6.949884,-3.077858,3.391386,-2.711727,-5.962117,9.403445,5.691444,8.086700,-6.482352,-8.174776,-2.229464,-5.326152,-7.546924,5.629545,3.541545,-8.449264,-2.737351,3.839253,0.224736,3.755214,-9.286627,6.756521,-3.121069,-9.011972,-9.262040,-0.328540,8.758335,7.644581,-5.114108,-8.559832,8.357928,-9.152205,3.157811,9.892352,9.678647,-7.609104,5.484828,7.765629,-6.295585,-7.271331,-0.913985,-4.397322,9.762560,-0.467506,-3.623708,0.757268,1.508160,3.509878,-9.970352,-5.669082,9.597881,6.911050,-9.791063,-1.261648,-3.863652,1.404917,-1.237563,-3.232925,9.237905,4.829255,0.872221,0.295393,-4.109877,9.313827,2.786009,1.193898,1.172084,2.509653,3.756568,-4.207989,2.693034,4.870110,1.667988,1.828162,-9.973099,1.329901,-5.005613,-8.667217,3.918602,8.019862,7.297578,-8.851507,0.838127,1.395200,3.668252,-8.692513,1.960103,-0.431173,8.409341,-2.170530,5.210033,-6.743312,-1.544016,-7.961914,-1.704767,0.621977,-0.669542,-1.957745,9.445722,4.142801,-1.035772,6.702920,2.545756,-4.445730,-9.251153,-1.575473,-3.019053,1.847509,6.518769,5.582498,8.469611,-2.713722,-3.682448,0.519148,-5.827425,-9.650698,-9.460718,-5.865622,-4.910134,-4.042762,0.056517,-1.523779,6.620119,9.922640,3.211219,4.403899,3.279512,3.353994,-7.129948,7.887729,0.556100,4.506813,-3.138671,0.782622,9.235765,3.061499,-3.715393,-0.462441,0.677236,-1.210806,-6.858712,1.094295,2.586818,9.133270,4.285701,-9.160685,3.923211,-2.505393,-7.551104,-7.152880,9.026464,-6.385122,6.249620,-1.463696,-4.640305,1.924819,-1.275038,-1.664110,7.198738,7.204601,5.830030,3.182823,-0.685681,-7.905928,2.365739,-0.647122,-5.353342,-5.499981,9.463796,-6.438175,-1.587710,8.733418,-4.907719,-5.321850,7.515939,-4.321082,-8.033810,8.866406,6.402390,6.751709,-6.115403,7.613097,-4.222333,-7.490416,-1.763821,-4.099988,2.293586,9.112782,1.638648,5.529550,-2.168622,7.877173,-5.960612,8.519853,-5.818790,-3.290459,-8.538087,9.837359,-6.616766,-3.079359,-5.839770,0.050978,-8.522078,5.681777,-2.567279,8.042953,-0.040019,1.106543,6.535795,-2.789515,7.800146,0.488309,6.361419,6.778211,-3.941847,-3.816940,-1.932400,-5.256288,3.510266,-4.195873,7.003256,-3.603747,0.030381,-1.599266,-4.950197,-0.194056,9.231161,1.006627,7.954412,-8.986263,-3.067512,-4.363114,-2.130861,-3.503904,0.957544,-2.056719,-4.649453,-1.706635,-0.858275,-2.652903,-7.622037,0.751175,-0.706366,-3.596481,8.095005,-9.121251,7.333466,-4.173022,6.459273,6.036629,0.180784,7.834512,-7.596003,4.316931,-9.990832,8.230373,9.565090,2.043297,5.625474,9.644223,-6.220760,3.315237,-1.725859,-0.017235,-8.149036,-5.232333,7.927589,8.990466,-9.044421,-1.287994,-3.639983,5.133038,-4.473377,-2.589791,-7.796459,-0.065561,4.592239,-3.920311,6.564841,8.953231,1.200772,-6.391409,-8.980628,-8.078225,-8.483233,8.179261,5.881441,-9.040434,6.089051,7.595542,-2.781917,1.201947,7.432890,-8.282606,-0.783286,-4.998159,8.224955,-5.875598,-2.808790,-4.323232,9.346010,-7.447782,-7.172076,4.062487,2.147290,5.284419,-7.355410,2.655191,5.176694,4.351451,9.292195,9.794097,-6.158369,-3.332789,-9.254526,9.247304,7.692494,-7.769887,1.835727,3.231877,7.569109,-3.769129,4.729456,7.184806,0.340831,-7.747217,0.920963,-4.211744,7.702039,-3.009330,0.959266,-2.042531,9.018425,3.416882,-9.380375,2.085839,6.126942,7.226950,5.760868,9.965726,5.354808,-1.854665,0.318830,-6.909894,2.507491,1.521179,6.132858,4.184778,-2.951671,5.154886,-6.208878,-7.005723,-2.415373,-0.844917,8.605986,1.217592,-5.497069,4.037096,-1.080366,-5.308536,-5.082281,-2.932141,9.211640,0.523859,-5.300012,-0.704410,6.366179,7.510830,1.588815,-2.181469,0.259420,7.832643,0.088305,-9.607705,4.247870,6.372962,-8.360136,7.103254,-9.545061,0.800304,3.688398,4.781683,6.860740,-8.057617,-1.426292,1.151372,-2.116604,8.030811,3.645998,2.376125,7.563144,-4.373475,4.989077,9.160930,-7.461405,-2.546872,2.573242,0.600072,-6.217388,0.415518,-3.144168,6.673323,0.924504,-2.300347,-8.458670,5.687573,-1.902292,7.556329,1.103287,9.822542,3.073992,8.377113,7.395281,8.506537,9.316542,8.923713,6.715001,-7.366701,5.456291,4.116030,7.157152,8.721549,0.142290,9.484874,-0.658807,-5.917855,-3.530763,-0.711517,-9.927130,-8.086254,-8.760195,2.785483,-8.145675,-5.710685,-5.505780,8.568084,2.074043,-4.206170,8.441352,0.032407,-7.115369,7.520275,-9.195711,2.552568,-7.450880,-3.129424,1.931705,-6.782604,3.298632,0.842623,8.539841,0.726611,-6.228966,7.911669,8.476356,2.131238,-4.834636,6.406867,-8.939493,-0.488282,-1.813191,0.894450,-9.138446,7.595874,-5.408656,-5.551453,6.868691,-2.221247,1.084212,5.743752,2.968296,-8.570519,6.273300,-6.490659,-0.993095,-8.602948,1.245488,-6.366419,-8.549503,9.532966,2.390849,-6.859264,-2.567009,-3.747817,-5.805868,-5.005795,-1.479215,9.936761,-5.620214,1.939181,-3.383586,2.364124,6.325942,-5.102858,1.894844,-0.211443,6.496073,8.693508,-8.574078,9.835280,0.214829,-2.438856,-1.319586,-4.614036,0.878445,-0.029976,6.776424,8.468059,6.803383,-4.842360,6.102970,3.873154,3.366474,-5.721653,-4.169707,-6.020638,-2.335338,3.185403,7.573104,4.629800,5.201679,-6.183182,-8.610172,9.687763,8.566058,-8.855901,3.282972,0.018294,3.617893,-4.165401,7.872531,3.860938,7.393414,8.253532,-4.496995,8.527833,-0.436645,0.567660,1.084333,-6.809744,-5.045750,5.920825,9.055276,1.547495,4.327196,-2.688540,-1.881784,-3.800349,5.916718,-8.544335,-7.260872,4.005615,-4.308101,7.522146,-6.378499,-9.959461,3.761053,-5.619330,9.366236,8.837028,0.578257,1.263206,2.451308,5.375506,5.305232,0.586311,9.108137,-2.121554,5.775104,9.171293,-5.987497,-7.908495,2.367829,-2.771940,-5.491439,1.880396,3.630759,-0.992456,-5.144832,3.170175,7.787969,-9.637044,-7.847590,-6.973431,-5.275725,9.847996,-0.366646,-3.707384,-2.180203,-9.185583,-5.102363,-8.934409,-3.224215,3.352245,-6.129083,2.045144,3.863099,-4.484740,-9.844613,4.781663,-5.611290,5.457760,-1.068536,-6.390727,-8.226423,-0.919715,8.612623,4.590361,0.137430,-5.079705,0.882112,3.493649,3.732065,-0.021935,4.715739,7.874708,-6.981017,-9.566153,-8.613390,0.787025,7.635567,-8.504778,-8.078128,-6.752916,-3.109619,0.833600,-4.896120,-8.038449,-6.588318,-7.395022,-2.610180,2.019696,-7.572106,5.871331,0.919417,-7.355011,-3.761210,9.838547,-7.428983,-5.969615,-2.688235,-8.688815,2.978800,0.739988,-6.418755,8.817851,7.405146,1.000208,-9.144129,-2.393107,-1.172151,-2.973509,8.074712,6.535974,7.662891,-4.730005,-1.474879,9.826229,5.962347,4.232254,-3.083573,-7.920809,-0.821756,7.969745,2.139833,-3.112421,-3.866318,-7.812473,-8.207968,1.612099,-3.876940,8.144958,4.078353,-0.223200,8.563306,-5.512114,-1.470441,6.946998,-0.346682,1.844887,4.001793,2.697693,-7.969201,1.111671,-9.730563,-2.192546,5.258914,6.148966,-4.857444,5.531502,6.961494,5.216002,7.257855,-7.147044,-3.940321,4.479190,6.149385,7.905433,-1.866643,-9.978120,-0.594395,0.008648,6.267995,-2.514898,-4.905642,6.563592,1.555471,1.751665,-9.447420,-8.601855,6.586101,-2.961646,5.652843,-0.643776,-4.720735,-0.177783,-7.487302,-2.391503,-8.771469,6.711526,4.580241,-7.307878,-5.074982,2.994150,-8.353724,6.844530,7.245026,-5.401877,2.599750,-1.733680,-4.310004,-9.400129,6.598380,-4.235680,0.824100,-3.645079,-8.891949,5.402600,4.348799,7.638313,7.505453,6.925909,-8.663289,1.628540,2.178226,-3.522227,-0.170139,-9.929091,4.720330,2.944340,-4.346904,5.312275,-1.767544,3.498537,1.980645,9.585335,5.573100,4.070206,8.269799,-2.343085,1.183986,-2.333282,9.458025,5.932828,2.473386,-5.554527,-1.194180,-0.196918,-6.388005,-0.186678,5.141215,-0.462364,4.884828,-9.801823,-3.565168,0.204200,2.525562,2.308036,-0.077043,-6.787246,9.613782,8.374792,-7.212176,2.070452,-6.155353,8.205409,4.534167,-0.453553,2.805871,1.754678,8.776392,3.379816,-1.704349,-8.633837,8.129658,-4.837418,8.568068,3.265000,-4.840646,-8.393898,-6.961115,-5.449164,-3.108878,-6.361584,7.353177,4.672325,-9.322137,-8.408106,-3.972599,0.006286,0.629332,-8.248748,-3.959189,-3.658299,-3.578511,9.971045,-8.195065,8.316605,-2.248978,5.344340,7.735222,6.434295,7.482857,1.126041,-6.548896,-0.737786,-0.818202,-7.847919,-9.205854,8.333199,9.555890,1.888765,-5.209575,-7.447944,9.277054,2.541030,5.054243,-8.157516,-0.553925,-6.006298,5.883820,-0.804540,0.535026,-4.454716,9.777069,9.420311,-4.560097,6.772976,8.579373,6.766291,9.022891,5.829195,8.417550,9.063013,2.923367,-3.176101,-7.690958,7.536308,1.981020,7.652047,6.306297,-6.029030,-3.954924,3.435414,6.225738,-3.527719,9.208436,8.206441,5.004808,-4.043145,-2.249174,5.093239,8.134244,0.079468,-0.056233,8.759218,2.919872,3.044449,8.829846,7.740627,-3.327909,5.488514,8.518796,-3.979877,-2.896854,-9.582622,-7.048449,6.884822,-5.636936,-2.302611,-7.164793,-5.702266,9.879157,9.864820,-2.845908,-3.254306,-0.991452,-6.989936,-1.258720,-6.221666,1.203028,-2.085978,1.452904,0.056866,-6.639410,-9.702459,-6.854148,-3.130373,2.170248,-6.913217,-7.670899,-7.933498,2.589495,-8.695352,7.126587,-0.018906,3.560370,-0.975383,-9.091980,-4.415432,-4.879062,8.656567,-7.901514,-7.563661,2.562555,0.840051,9.805689,-5.283757,8.468072,4.915393,-7.997106,1.231132,-4.671992,-9.863578,-6.612502,6.805101,8.722095,9.300825,-6.905041,1.201770,-8.786718,1.465886,-6.309520,-7.333461,-9.929728,4.930409,6.208282,1.395993,-1.256256,8.673906,-7.743403,8.633699,9.706608,6.537938,6.004060,-6.182650,-9.925217,7.024952,0.346142,-6.701238,7.626375,-9.018477,-3.291250,-4.442804,2.865423,3.580367,-5.784369,-0.904515,4.657046,4.549890,-9.711600,1.889333,5.926390,-8.193205,-6.236382,5.144749,-5.141997,9.976524,1.111249,9.283823,0.297478,-6.515439,-8.961730,0.929511,8.564048,-9.085409,-2.673484,-3.527135,-2.656219,1.156759,6.263037,0.408286,-5.809333,-2.675172,-9.659404,5.873169,7.021340,-9.176732,-1.740012,6.300073,-7.469569,8.886759,8.064469,6.417500,-6.226053,7.752700,1.092033,8.808051,5.274570,0.439939,-9.936519,8.923590,-5.495836,7.212806,7.183997,-7.880447,-6.272743,8.711656,8.098571,6.034068,7.542852,6.556407,8.748619,-8.238959,2.232162,8.223814,-4.468284,1.709396,-0.002735,6.104146,0.917790,1.130202,-7.956707,-1.622212,5.051901,6.207793,-3.379504,2.134914,-0.441191,-9.696224,0.028642,6.970580,-6.615368,7.800866,2.113821,-4.160307,-9.983591,-6.840526,-5.223344,2.368209,-0.537982,-8.043037,6.102596,3.071697,-0.439673,7.758497,7.530266,1.595386,9.382781,-0.587719,-7.657714,-4.712334,-4.280554,9.910203,1.190099,6.935871,5.487803,-6.979752,1.886605,-5.140791,5.985131,-1.704793,-2.875899,-6.547584,-5.556238,-9.619820,1.512098,7.518620,4.643060,9.403200,3.726178,6.577132,-5.721198,-1.003114,6.028231,6.656063,-8.228078,9.747301,-4.718118,4.789111,-5.988149,1.757544,-2.368941,6.874127,5.578413,-5.628019,2.398936,0.886957,5.293173,-3.282486,4.058756,1.481019,4.492382,-2.435560,-7.723685,-7.374664,-2.158360,-4.151048,-7.653439,-4.332516,-8.709304,3.672320,-6.465691,-4.848250,-8.120134,-7.015057,-0.631859,8.171256,-4.069460,2.031530,3.801162,7.128629,8.759193,-0.787851,-6.910883,5.288010,2.589700,-3.125953,-4.190526,5.250781,2.446504,-3.835944,3.551798,4.415847,8.653196,-5.873400,-0.525394,-5.748552,-6.582332,-0.933890,-1.497339,8.843256,-8.365934,0.851772,-9.036012,6.797581,0.117152,-7.811636,3.681984,-9.832721,-7.644753,-5.632465,7.332488,2.681893,0.803957,-1.295341,6.806069,-2.740897,8.552345,-0.972081,-4.942020,-1.956366,7.319256,5.587759,-7.019408,-1.016792,-7.929378,-7.395150,7.616799,6.393260,8.143729,-9.662059,-6.381295,-4.936003,0.508722,0.045212,-5.601138,2.842058,-0.133540,-0.207782,-3.295863,-5.750535,7.686637,-7.878978,-9.666658,-2.870502,3.318480,-8.173604,2.442638,-5.260195,-4.725689,-5.632608,3.153523,-2.649768,-3.572164,-8.036380,2.205215,-8.599921,6.958597,-2.331464,-4.036600,1.759170,6.788394,2.019589,-8.626723,2.453580,-3.478483,2.543116,1.195814,6.842867,6.686212,2.402208,-3.199764,0.370563,-4.242282,7.747566,-2.869957,9.017352,1.396461,-3.396225,-4.760044,-8.964155,-1.414356,-1.052598,8.643386,3.656271,0.678781,-5.150045,-6.320470,-6.219506,1.605329,-9.901594,-1.360333,0.374802,-3.598147,-0.968892,-1.985024,4.973598,-5.812192,-6.287928,-4.378907,-9.597484,-9.571115,3.480092,0.273802,-8.090342,-9.429975,-8.690085,-6.611337,-7.270586,-8.339273,6.611720,8.002947,6.387875,-8.170306,3.708709,8.912080,-9.607246,-4.502330,9.162799,6.459672,-6.876575,-6.873002,1.272786,1.926038,5.109356,-5.324197,-9.696652,-1.338505,3.122297,6.139406,4.901208,0.841974,0.699363,7.952980,0.804826,-8.805719,-1.023814,-4.705968,9.103273,2.256679,8.679744,4.453054,5.092327,4.713554,-8.702234,-4.542894,-5.655282,3.173921,4.750497,-4.504700,-8.546630,9.860916,4.498206,-5.103675,1.093353,7.015400,1.878922,-4.942512,-8.860321,3.756855,-0.781530,-8.498645,9.202355,-6.598782,3.855758,9.465745,8.787725,-0.139897,1.438310,2.324846,5.160841,3.735399,1.266762,4.193283,-0.352091,-1.959133,-3.784031,6.438306,0.886894,4.719499,-2.494416,-8.949414,8.435958,-8.439152,7.169489,1.750308,-8.582253,5.517842,-9.562530,-1.856423,2.605914,4.649084,8.401154,-4.494345,6.990531,4.429133,-9.853572,9.054551,9.971509,-7.979403,-6.381524,8.968154,2.384275,-9.005299,1.545869,-9.016851,-2.181519,7.458274,-4.316017,-4.395494,6.308196,5.118317,7.218339,0.472540,-8.498165,1.565213,9.121037,9.290871,6.302650,-5.983852,-3.036155,9.655362,-1.538717,3.733206,-6.555437,-7.433839,1.566634,-4.960946,6.478947,7.086955,9.930043,-7.982550,6.379084,0.504875,6.015424,-2.920616,-0.262507,-5.673637,-3.554495,9.598678,8.640011,-8.781416,0.430640,4.992678,-9.586609,-0.038376,9.901139,-2.770645,9.745681,8.649263,2.708441,-7.805489,-2.966403,-2.855797,-2.458402,6.649546,-1.225849,6.505425,-9.004219,-1.147355,0.928913,5.231028,9.694194,-0.898484,3.797467,7.717220,1.189970,6.720889,2.935227,-0.872229,8.920023,2.435535,8.297773,-4.334242,-6.713489,-9.456031,6.610346,-7.055406,3.107068,6.691020,7.899059,9.456807,3.893556,-1.078086,-8.434882,-0.952289,-2.450358,5.441512,-3.290962,-1.264850,-5.601308,6.528952,-3.539382,-5.797734,-0.092385,-7.970216,1.268586,-8.203614,-5.251427,6.409926,0.959413,8.470158,2.181797,4.398565,-2.141890,-6.158069,-1.992613,-2.366175,-8.309420,-8.849852,7.301764,-6.900142,-6.548717,3.881680,2.383200,6.758178,-5.588112,-7.657367,-4.766487,-7.761478,8.321506,4.266464,-2.943003,-5.991751,4.806157,5.067981,-3.874611,6.877016,-7.851167,5.091220,1.249066,-3.524829,3.713382,4.141353,-3.026233,-3.358582,3.969506,6.655272,-7.133876,-2.557999,-5.948119,-1.945779,3.061134], dtype = "float64")#candidate|3574|(2288,)|const|float64
call_3573 = relay.TupleGetItem(func_3413_call(relay.reshape(var_3552.astype('float64'), [1008,]), relay.reshape(const_3574.astype('float64'), [2288,]), ), 1)
call_3575 = relay.TupleGetItem(func_3417_call(relay.reshape(var_3552.astype('float64'), [1008,]), relay.reshape(const_3574.astype('float64'), [2288,]), ), 1)
func_2152_call = mod.get_global_var('func_2152')
func_2157_call = mutated_mod.get_global_var('func_2157')
var_3579 = relay.var("var_3579", dtype = "float64", shape = (480,))#candidate|3579|(480,)|var|float64
call_3578 = relay.TupleGetItem(func_2152_call(relay.reshape(var_3579.astype('float64'), [15, 2, 16]), relay.reshape(var_3579.astype('float64'), [15, 2, 16]), relay.reshape(var_3568.astype('int8'), [52,]), ), 4)
call_3580 = relay.TupleGetItem(func_2157_call(relay.reshape(var_3579.astype('float64'), [15, 2, 16]), relay.reshape(var_3579.astype('float64'), [15, 2, 16]), relay.reshape(var_3568.astype('int8'), [52,]), ), 4)
output = relay.Tuple([call_3545,call_3550,const_3551,var_3552,call_3566,var_3567,var_3568,call_3573,const_3574,call_3578,var_3579,])
output2 = relay.Tuple([call_3546,call_3553,const_3551,var_3552,call_3569,var_3567,var_3568,call_3575,const_3574,call_3580,var_3579,])
func_3589 = relay.Function([var_3552,var_3567,var_3568,var_3579,], output)
mod['func_3589'] = func_3589
mod = relay.transform.InferType()(mod)
var_3590 = relay.var("var_3590", dtype = "float64", shape = (1008,))#candidate|3590|(1008,)|var|float64
var_3591 = relay.var("var_3591", dtype = "float32", shape = (72,))#candidate|3591|(72,)|var|float32
var_3592 = relay.var("var_3592", dtype = "int8", shape = (52, 1))#candidate|3592|(52, 1)|var|int8
var_3593 = relay.var("var_3593", dtype = "float64", shape = (480,))#candidate|3593|(480,)|var|float64
output = func_3589(var_3590,var_3591,var_3592,var_3593,)
func_3594 = relay.Function([var_3590,var_3591,var_3592,var_3593,], output)
mutated_mod['func_3594'] = func_3594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_3620 = relay.TupleGetItem(func_3054_call(), 0)
call_3621 = relay.TupleGetItem(func_3056_call(), 0)
func_422_call = mod.get_global_var('func_422')
func_427_call = mutated_mod.get_global_var('func_427')
var_3626 = relay.var("var_3626", dtype = "float32", shape = (72,))#candidate|3626|(72,)|var|float32
const_3627 = relay.const([-1,7,-4,-1,1,-10,-4,-4,8,-4,7,-6,2,5,5,3,4,-5,5,1,-1,5,-7,-4,5,6,2,7,9,9,-1,4,-2,-8,-5,7,7,1,2,-10,5,-9,9,10,5,6,4,3,-8,-5,9,9], dtype = "int8")#candidate|3627|(52,)|const|int8
const_3628 = relay.const([-1,5,-2,-9,-5,6,-8,5,-8,1,4,-4,2,-10,-1,-9,10,6,-4,4,3,5,2,3,-10,3,6,5,-3,9,10,6,3,1,-7,7,4,1,-5,-5,-1,-8,-10,-4,-8,6,-2,7,6,-5,2,5,5,1,2,-4,8,9,5,-10,-8,-2,-3,-8,-4,4,-4,-3,6,-8,3,3,-3,7,8,2,6,-8,2,7,-6,3,1,8,1,-10,-7,-4,-7,-10,-10,3,-8,-4,5,-6,4,3,-5,-5,-7,1,-7,-4,-7,9,9,-3,3,5,1,-10,-1,2,-6,-4,-3,-6,-9,-5,7,6,-6,-4,8,-6,3,6,1,-9,7,9,-8,2,-7,6,3,-1,10,-9,-7,9,-2,-1,3,1,5,1,5,1,-4,-8,-8,7,6,-8,2,-10,-10,-1,-3,4,2,-1,1,-1,-10,4,-9,8,9,-6,-1,7,-9,6,-1,-2,-8,-2,-5,-5,-1,3,-10,-3,4,9,-8,-1,-7,1,-9,-4,5,9,-8,-3,3,-9,6,3,-3,-9,1,10,-7,7,-5,5,7,-8,-8,4,-8,8,4,5,-4,-10,2,-2,-2,-7,1,5,-7,3,-5,-1,-9,-6,-8,2,-3,4,2,-6,-8,1,8,7,2,-1,8,-9,-10,-10,6,-8,-4,-6,-2,-3,7,10,-4,1,9,-1,5,-2,5,-3,5,9,6,8,-10,-10,6,4,-7,4,-8,-10,4,-10,-5,-9,-6,2,4,2,10,2,-10,-4,1,2,2,4,4,-7,9,-1,-6,9,-2,5,2,8,2,-10,9,-4,-4,8,-4,-8,3,-10,-6,-1,7,-2,3,-3,-1,10,5,-10,-4,-8,5,3,-9,9,9,4,5,-7,6,-5,-4,-7,-9,-9,-7,-9,-3,2,-5,-7,-10,2,-7,-6,-8,-7,4,-3,-3,5,-7,4,-9,4,-9,8,-4,-7,-7,3], dtype = "int8")#candidate|3628|(364,)|const|int8
call_3625 = relay.TupleGetItem(func_422_call(relay.reshape(var_3626.astype('float32'), [12, 1, 6]), relay.reshape(const_3627.astype('int8'), [52, 1]), relay.reshape(const_3628.astype('int8'), [7, 52]), ), 2)
call_3629 = relay.TupleGetItem(func_427_call(relay.reshape(var_3626.astype('float32'), [12, 1, 6]), relay.reshape(const_3627.astype('int8'), [52, 1]), relay.reshape(const_3628.astype('int8'), [7, 52]), ), 2)
output = relay.Tuple([call_3620,call_3625,var_3626,const_3627,const_3628,])
output2 = relay.Tuple([call_3621,call_3629,var_3626,const_3627,const_3628,])
func_3644 = relay.Function([var_3626,], output)
mod['func_3644'] = func_3644
mod = relay.transform.InferType()(mod)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3645 = relay.var("var_3645", dtype = "float32", shape = (72,))#candidate|3645|(72,)|var|float32
func_3644_call = mutated_mod.get_global_var('func_3644')
call_3646 = func_3644_call(var_3645)
output = call_3646
func_3647 = relay.Function([var_3645], output)
mutated_mod['func_3647'] = func_3647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3498_call = mod.get_global_var('func_3498')
func_3500_call = mutated_mod.get_global_var('func_3500')
call_3666 = relay.TupleGetItem(func_3498_call(), 2)
call_3667 = relay.TupleGetItem(func_3500_call(), 2)
func_1725_call = mod.get_global_var('func_1725')
func_1727_call = mutated_mod.get_global_var('func_1727')
var_3682 = relay.var("var_3682", dtype = "uint32", shape = (72,))#candidate|3682|(72,)|var|uint32
call_3681 = relay.TupleGetItem(func_1725_call(relay.reshape(var_3682.astype('uint32'), [6, 6, 2])), 0)
call_3683 = relay.TupleGetItem(func_1727_call(relay.reshape(var_3682.astype('uint32'), [6, 6, 2])), 0)
var_3688 = relay.var("var_3688", dtype = "uint8", shape = (364,))#candidate|3688|(364,)|var|uint8
bop_3689 = relay.logical_xor(call_3666.astype('uint32'), relay.reshape(var_3688.astype('uint32'), relay.shape_of(call_3666))) # shape=(364,)
bop_3692 = relay.logical_xor(call_3667.astype('uint32'), relay.reshape(var_3688.astype('uint32'), relay.shape_of(call_3667))) # shape=(364,)
func_211_call = mod.get_global_var('func_211')
func_214_call = mutated_mod.get_global_var('func_214')
var_3696 = relay.var("var_3696", dtype = "float64", shape = (56,))#candidate|3696|(56,)|var|float64
call_3695 = func_211_call(relay.reshape(var_3696.astype('float64'), [2, 14, 2]))
call_3697 = func_211_call(relay.reshape(var_3696.astype('float64'), [2, 14, 2]))
func_1841_call = mod.get_global_var('func_1841')
func_1844_call = mutated_mod.get_global_var('func_1844')
var_3702 = relay.var("var_3702", dtype = "float64", shape = (1008,))#candidate|3702|(1008,)|var|float64
call_3701 = relay.TupleGetItem(func_1841_call(relay.reshape(var_3702.astype('float64'), [14, 8, 9])), 4)
call_3703 = relay.TupleGetItem(func_1844_call(relay.reshape(var_3702.astype('float64'), [14, 8, 9])), 4)
func_588_call = mod.get_global_var('func_588')
func_590_call = mutated_mod.get_global_var('func_590')
call_3710 = func_588_call(relay.reshape(call_3681.astype('float64'), [3, 4, 6]))
call_3711 = func_588_call(relay.reshape(call_3681.astype('float64'), [3, 4, 6]))
output = relay.Tuple([call_3681,var_3682,bop_3689,call_3695,var_3696,call_3701,var_3702,call_3710,])
output2 = relay.Tuple([call_3683,var_3682,bop_3692,call_3697,var_3696,call_3703,var_3702,call_3711,])
func_3720 = relay.Function([var_3682,var_3688,var_3696,var_3702,], output)
mod['func_3720'] = func_3720
mod = relay.transform.InferType()(mod)
mutated_mod['func_3720'] = func_3720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3720_call = mutated_mod.get_global_var('func_3720')
var_3722 = relay.var("var_3722", dtype = "uint32", shape = (72,))#candidate|3722|(72,)|var|uint32
var_3723 = relay.var("var_3723", dtype = "uint8", shape = (364,))#candidate|3723|(364,)|var|uint8
var_3724 = relay.var("var_3724", dtype = "float64", shape = (56,))#candidate|3724|(56,)|var|float64
var_3725 = relay.var("var_3725", dtype = "float64", shape = (1008,))#candidate|3725|(1008,)|var|float64
call_3721 = func_3720_call(var_3722,var_3723,var_3724,var_3725,)
output = call_3721
func_3726 = relay.Function([var_3722,var_3723,var_3724,var_3725,], output)
mutated_mod['func_3726'] = func_3726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3002_call = mod.get_global_var('func_3002')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_3794 = func_3002_call()
call_3795 = func_3002_call()
output = call_3794
output2 = call_3795
func_3796 = relay.Function([], output)
mod['func_3796'] = func_3796
mod = relay.transform.InferType()(mod)
output = func_3796()
func_3797 = relay.Function([], output)
mutated_mod['func_3797'] = func_3797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_3810 = func_3112_call()
call_3811 = func_3112_call()
output = call_3810
output2 = call_3811
func_3819 = relay.Function([], output)
mod['func_3819'] = func_3819
mod = relay.transform.InferType()(mod)
output = func_3819()
func_3820 = relay.Function([], output)
mutated_mod['func_3820'] = func_3820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2955_call = mod.get_global_var('func_2955')
func_2957_call = mutated_mod.get_global_var('func_2957')
call_3909 = func_2955_call()
call_3910 = func_2955_call()
func_2152_call = mod.get_global_var('func_2152')
func_2157_call = mutated_mod.get_global_var('func_2157')
var_3940 = relay.var("var_3940", dtype = "float64", shape = (480,))#candidate|3940|(480,)|var|float64
const_3941 = relay.const([2,-6,10,8,-5,6,-6,-5,-1,-7,-3,10,-6,-7,4,6,1,8,8,-5,2,10,-2,7,6,-2,10,8,-3,-3,-10,2,3,-1,6,3,-7,10,-8,3,-10,2,1,7,5,-10,1,6,-3,-2,-3,1], dtype = "int8")#candidate|3941|(52,)|const|int8
call_3939 = relay.TupleGetItem(func_2152_call(relay.reshape(var_3940.astype('float64'), [15, 2, 16]), relay.reshape(var_3940.astype('float64'), [15, 2, 16]), relay.reshape(const_3941.astype('int8'), [52,]), ), 3)
call_3942 = relay.TupleGetItem(func_2157_call(relay.reshape(var_3940.astype('float64'), [15, 2, 16]), relay.reshape(var_3940.astype('float64'), [15, 2, 16]), relay.reshape(const_3941.astype('int8'), [52,]), ), 3)
output = relay.Tuple([call_3909,call_3939,var_3940,const_3941,])
output2 = relay.Tuple([call_3910,call_3942,var_3940,const_3941,])
func_3945 = relay.Function([var_3940,], output)
mod['func_3945'] = func_3945
mod = relay.transform.InferType()(mod)
mutated_mod['func_3945'] = func_3945
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3946 = relay.var("var_3946", dtype = "float64", shape = (480,))#candidate|3946|(480,)|var|float64
func_3945_call = mutated_mod.get_global_var('func_3945')
call_3947 = func_3945_call(var_3946)
output = call_3947
func_3948 = relay.Function([var_3946], output)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_4046 = func_3796_call()
call_4047 = func_3796_call()
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_4055 = func_3796_call()
call_4056 = func_3796_call()
uop_4065 = relay.sigmoid(call_4055.astype('float32')) # shape=(4, 9, 4)
uop_4067 = relay.sigmoid(call_4056.astype('float32')) # shape=(4, 9, 4)
uop_4074 = relay.tan(call_4055.astype('float32')) # shape=(4, 9, 4)
uop_4076 = relay.tan(call_4056.astype('float32')) # shape=(4, 9, 4)
uop_4092 = relay.log10(uop_4065.astype('float64')) # shape=(4, 9, 4)
uop_4094 = relay.log10(uop_4067.astype('float64')) # shape=(4, 9, 4)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_4095 = func_3819_call()
call_4096 = func_3819_call()
func_588_call = mod.get_global_var('func_588')
func_590_call = mutated_mod.get_global_var('func_590')
var_4103 = relay.var("var_4103", dtype = "float64", shape = (1, 72))#candidate|4103|(1, 72)|var|float64
call_4102 = func_588_call(relay.reshape(var_4103.astype('float64'), [3, 4, 6]))
call_4104 = func_588_call(relay.reshape(var_4103.astype('float64'), [3, 4, 6]))
output = relay.Tuple([call_4046,uop_4074,uop_4092,call_4095,call_4102,var_4103,])
output2 = relay.Tuple([call_4047,uop_4076,uop_4094,call_4096,call_4104,var_4103,])
func_4111 = relay.Function([var_4103,], output)
mod['func_4111'] = func_4111
mod = relay.transform.InferType()(mod)
mutated_mod['func_4111'] = func_4111
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4112 = relay.var("var_4112", dtype = "float64", shape = (1, 72))#candidate|4112|(1, 72)|var|float64
func_4111_call = mutated_mod.get_global_var('func_4111')
call_4113 = func_4111_call(var_4112)
output = call_4113
func_4114 = relay.Function([var_4112], output)
mutated_mod['func_4114'] = func_4114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2955_call = mod.get_global_var('func_2955')
func_2957_call = mutated_mod.get_global_var('func_2957')
call_4188 = func_2955_call()
call_4189 = func_2955_call()
uop_4208 = relay.exp(call_4188.astype('float64')) # shape=(4, 9, 4)
uop_4210 = relay.exp(call_4189.astype('float64')) # shape=(4, 9, 4)
output = uop_4208
output2 = uop_4210
func_4218 = relay.Function([], output)
mod['func_4218'] = func_4218
mod = relay.transform.InferType()(mod)
mutated_mod['func_4218'] = func_4218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4218_call = mutated_mod.get_global_var('func_4218')
call_4219 = func_4218_call()
output = call_4219
func_4220 = relay.Function([], output)
mutated_mod['func_4220'] = func_4220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_4256 = func_3819_call()
call_4257 = func_3819_call()
func_3335_call = mod.get_global_var('func_3335')
func_3339_call = mutated_mod.get_global_var('func_3339')
const_4285 = relay.const([3,1,-1,7,4,-3,-7,-7,-9,9,-6,7,-2,-5,2,8,-4,-5,-3,9,4,2,-2,-8,-5,-5,9,-2,-4,-9,-5,-2,-5,-5,1,4,8,7,-7,1,1,5,-7,2,-4,-8,7,9,6,10,8,3,2,-3,6,-10,-1,-8,2,2,10,-6,-1,-10,-6,4,-6,9,-6,6,-10,8,1,-2,5,-10,5,5,10,-10,-8,2,1,2,6,1,4,7,-7,-10,-2,-9,-6,-2,-2,3,-7,3,-6,9,-3,-8,-10,-2,-4,1,-1,-5,-5,-3,9,8,-1,-6,-6,-1,-5,-5,3,-4,-8,-7,5,9,-8,8,10,-3,-9,-10,-6,-3,9,8,5,-3,8,5,-1,-5,7,-6,1,8,10,2,-8,-7,-5,10,-8,7,2,-9,-8,-4,8,-2,9,7,-9,-5,6,-5,-8,4,-2,2,-5,-9,-3,-8,10,8,-3,9,5,-10,-6,3,3,-10,10,-9,2,6,8,6,5,1,10,9,-4,8,3,5,-3,-9,6,-6,5,-4,5,4,6,7,5,-3,2,-10,7,2,-2,-10,10,-7,-7,9,10,3,9,4,-3,-5,-2,-3,2,-6,-8,-3,4,5,-8,5,-8,-6,8,2,-8,-8,2,7,7,-8,-4,5,-10,1,-5,-6,7,-3,-1,-8,-10,7,-8,-7,10,9,-8,-1,-7,6,1,6,-3,2,-3,-3,7,-6,6,9,3,-9,-4,-1,5,2,9,-3,-8,8,-5,4,-3,-6,-8,-5,3,-1,-6,-8,10,-6,-10,1,4,-1,2,-3,-10,4,-6,-6,-2,-5,-1,-9,3,-8,-4,4,10,-9,3,-9,-2,10,1,6,4,2,-4,-6,6,-3,5,-8,-5,9,-2,-2,1,-2,-7,-4,2,8,-6,-5,8,-5,-5,8,-2,7,-7,-8,-8,-1,-1,-10,2,6,-2,-4,-9,3,-2,2,-2,-7], dtype = "int8")#candidate|4285|(364,)|const|int8
call_4284 = relay.TupleGetItem(func_3335_call(relay.reshape(const_4285.astype('int8'), [364,]), relay.reshape(const_4285.astype('int8'), [364,]), ), 0)
call_4286 = relay.TupleGetItem(func_3339_call(relay.reshape(const_4285.astype('int8'), [364,]), relay.reshape(const_4285.astype('int8'), [364,]), ), 0)
output = relay.Tuple([call_4256,call_4284,const_4285,])
output2 = relay.Tuple([call_4257,call_4286,const_4285,])
func_4334 = relay.Function([], output)
mod['func_4334'] = func_4334
mod = relay.transform.InferType()(mod)
output = func_4334()
func_4335 = relay.Function([], output)
mutated_mod['func_4335'] = func_4335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_4343 = func_3819_call()
call_4344 = func_3819_call()
func_1841_call = mod.get_global_var('func_1841')
func_1844_call = mutated_mod.get_global_var('func_1844')
const_4356 = relay.const([-9.799490,0.830813,6.522032,-0.187737,1.905045,7.154318,1.549092,-4.156289,-5.154254,-3.068207,-8.377936,8.760093,-3.850327,6.833130,-5.106970,8.402697,-8.057435,2.992653,-6.549627,-0.806043,-0.467234,-0.911505,2.783422,-9.896248,-6.899399,9.858382,9.573093,4.710214,1.790094,-0.464148,5.434611,-6.007352,-7.499130,0.859539,5.011589,-4.510963,3.067863,-9.041211,-7.520650,9.616649,1.409550,9.402366,7.538346,-1.837455,-0.749841,4.021785,1.008180,0.990574,3.366044,-5.352009,-5.649907,-6.830696,7.618163,4.777694,6.038363,-7.754704,5.757553,-0.137383,-0.094518,0.931599,3.083264,-3.793144,-4.387286,-3.892203,-6.365280,-0.875064,-6.470463,4.936709,4.369686,9.681246,0.025111,3.082385,0.883089,0.439309,1.257403,-9.928318,4.763865,5.007222,6.260847,1.200816,-2.484508,-0.620915,-0.197625,-9.923270,-5.107133,6.866944,7.687575,-8.418945,-9.983672,-9.490893,-8.608802,-7.409853,-5.996073,9.314471,2.541076,3.571513,2.098380,-9.999909,6.520446,8.717139,-3.314331,8.350502,-1.642000,7.569365,-9.506862,-1.568080,-2.105920,-1.320074,-4.521799,-6.716320,9.066322,2.263235,-7.491979,-5.847783,-8.587392,0.722009,-5.942787,-5.070461,8.531534,7.217498,8.065938,-2.951151,-9.274811,-9.628310,2.843868,6.678800,3.019430,8.907726,-8.209339,8.851336,2.601628,-1.987488,-6.759543,-8.901094,-4.616148,9.597172,3.580505,1.441845,-8.658349,-5.825572,5.066990,-4.087108,-8.439163,-5.291658,-9.661571,5.326085,-5.944354,7.586940,-9.615345,-1.506484,-4.502553,6.421552,-0.190050,3.454498,-2.162506,-4.587703,1.994812,-0.259712,-8.618570,1.919004,6.518025,-6.847834,-5.483481,-4.101569,-5.376836,1.238484,-1.309675,-2.713106,5.650862,9.603997,-1.714839,4.569604,0.487275,6.554279,-6.757531,-2.598377,-7.258113,-7.781237,-4.651111,9.249066,2.457387,1.874908,8.669367,-0.788831,-7.491038,5.436191,9.089719,-8.221000,-7.660333,-6.706949,-7.772024,-7.057507,-8.200418,8.804675,8.796479,2.944226,6.185205,-4.515193,-4.525962,-8.389749,1.704156,3.327746,-5.314995,6.665910,-5.100230,-0.126298,-4.748272,0.574795,6.235221,1.541739,6.928960,1.157796,-2.142439,-2.774584,5.558818,7.220557,-7.943627,1.264058,-6.762418,9.326939,1.486292,-9.077767,1.792477,-7.837491,-3.811015,8.591638,-8.942076,7.537881,4.406117,3.173332,-4.328596,6.098908,-9.428459,3.099116,9.836197,3.051111,-7.859479,-8.833843,2.511900,-9.049202,-9.685714,9.371975,6.600963,1.942453,-6.390591,3.906336,9.111052,5.568808,8.318642,0.242969,-5.894287,8.422547,-3.883779,-3.245963,-9.937461,8.632036,-5.341971,8.694393,8.073318,-5.109728,-6.114461,-5.757526,-7.139406,0.232964,3.684172,-3.911268,5.533341,-3.765636,8.885714,9.657116,-9.679254,0.146389,8.976047,-4.677112,8.081473,6.064748,-4.347349,-6.077546,8.322235,-4.847518,-3.789327,-5.498364,3.341926,5.305415,8.172904,-9.003259,5.801546,8.931697,7.618298,-7.932180,-0.750468,-6.966985,9.610053,-6.837775,-6.099139,9.071942,2.559214,-9.023580,7.325813,-8.172707,-0.765176,-2.854303,-1.047990,-1.681830,9.659683,-7.516198,-3.871024,-8.088698,4.474479,6.547226,8.737746,-9.762683,-7.308664,7.180974,-9.002889,4.357215,7.483756,3.616364,9.461699,2.706574,-3.437347,-6.433113,-9.946893,-6.610162,6.981852,4.992428,2.794345,-3.594548,-1.768982,7.215178,3.587249,2.901012,-1.373084,-8.489913,-5.567613,-1.881085,6.417370,-8.084869,9.426773,-6.776617,-9.213679,6.698098,2.319191,7.168964,-8.014517,0.478119,4.373299,-8.085311,0.105224,1.510071,-7.863904,-7.036722,3.190712,2.164493,3.178443,3.484021,0.873137,5.982665,-0.948735,-5.410902,1.056531,-9.635416,-3.625616,-1.228360,5.909056,2.743079,1.477469,-9.718180,-1.496577,6.801600,1.646844,6.831752,-4.073890,2.875240,-6.348728,0.314090,7.270488,-9.018328,-7.364404,8.149103,0.256413,9.450446,-8.430271,7.111124,7.918463,0.387381,5.863949,2.617578,9.840073,3.839799,-2.607639,-7.708371,-3.411957,5.711375,2.183965,9.082100,4.208780,-3.555622,-0.580812,4.651561,-4.488885,-3.931947,4.467020,2.730071,-7.138765,-6.296972,8.715960,5.781322,-6.130020,-1.532802,1.145303,-4.108566,-0.732349,5.057408,-1.288108,-4.294091,5.707368,-8.482500,-4.480199,9.859923,-9.267468,3.695251,-2.544139,-9.642773,2.186021,6.148922,-9.084450,-2.380933,-0.620262,8.881679,-4.180730,4.376414,-7.503655,-3.453972,-8.044142,7.583338,-0.700166,-1.767987,5.284736,2.610568,-7.500839,-1.022516,-5.023378,5.778595,-2.798330,1.417613,8.202049,-6.341720,-8.961778,-3.535600,-6.632896,-5.558318,9.670517,-8.753324,4.360042,5.822019,-0.640807,-3.064493,-2.057661,0.506938,-5.979452,8.127611,4.043352,1.213210,8.644924,-2.069546,7.878334,-8.441717,-6.119855,-3.616210,-6.859033,7.226437,7.862638,3.831750,5.382846,-7.759041,0.303155,6.433523,1.960470,-9.645751,1.844724,-1.329673,9.715682,5.061101,3.967340,0.048126,3.553065,-3.019164,-1.313103,9.511313,-3.141711,4.236057,6.504618,3.482508,7.262817,8.337565,-1.343359,-3.873762,-4.282712,1.346351,2.997745,0.772743,6.487517,7.650501,5.540674,-8.743483,-4.257395,1.318018,-1.907592,-8.635442,6.678568,-3.576780,3.037801,6.994005,-7.847248,-2.951053,-2.491762,2.970172,8.378982,9.400198,2.736000,0.377933,-9.983617,9.757507,1.892195,-3.806384,-8.160216,-4.226213,1.903815,0.573208,5.748695,2.618747,-5.998310,8.151522,7.253357,-3.601199,-5.979991,-9.647870,5.594266,-8.687182,8.413671,3.825514,7.455641,-2.999669,1.619205,8.650478,2.108734,-8.295897,2.813828,8.977856,0.559088,8.190617,2.148208,-0.485365,0.064288,0.872115,4.835190,-3.429404,3.949195,-0.440357,5.393265,1.305715,-9.241980,-0.398673,8.739774,1.935802,2.674961,3.514348,-1.402901,1.601126,-6.530842,9.397688,2.145156,-9.219084,-4.222516,-5.524809,-0.208994,-5.712343,0.427185,-0.849974,-1.368387,8.620836,-8.628622,5.157598,-7.357868,6.329033,0.808312,7.488544,-8.132368,2.741787,-8.826131,-3.727335,6.243882,8.347880,5.748789,-9.241966,4.286442,-2.520381,-0.608640,6.625158,-1.974433,6.302035,3.101572,4.040566,-8.201207,-0.545155,-3.493223,-6.764293,4.058710,-4.460478,9.448930,-6.186575,4.572139,5.410387,-5.005036,-9.673860,6.475452,9.270362,-2.424218,-0.568478,0.237353,5.946643,-8.031370,-5.907103,-3.653296,-0.890936,8.406989,-0.546655,6.615695,-3.897681,-9.097984,5.965239,-7.904886,-9.878070,0.793957,8.923165,0.349925,-0.052681,-0.918954,4.836944,7.263740,7.814965,8.660928,1.936231,2.274848,-6.672416,2.257016,9.096020,-3.892244,-2.168758,-1.118694,2.302244,4.114797,1.246384,-8.682536,-1.648955,8.959322,-1.093071,5.731088,2.141389,6.222115,4.279864,0.039371,-8.445982,-6.548096,0.631323,-4.668600,3.568073,-8.802669,-7.946019,8.867784,9.488272,-8.253845,4.618409,5.033156,-8.564761,7.561464,5.424616,-4.626757,-3.194885,2.712952,5.073712,-2.489828,0.959157,-5.124484,4.486816,-5.442980,-1.879343,-6.446260,-1.218674,-1.998241,-7.926457,-5.735314,9.408490,7.319132,-9.253901,2.129805,2.987313,-6.383994,0.398720,-3.112753,-8.064172,0.190611,0.954732,8.905376,3.581965,-9.980999,9.808183,-4.212485,6.136294,-1.938319,-4.278198,2.183922,-3.729219,-1.925604,-4.597707,-7.857984,6.971947,3.081138,-8.141459,-9.307391,6.743887,1.314054,-1.249316,1.672778,-3.774071,3.588038,6.057738,-0.790531,-2.471146,1.771286,8.098540,7.826425,9.183716,1.047139,9.534036,-3.846479,-8.134318,6.156685,4.521437,-3.376896,8.841324,-8.716649,-2.376552,-6.353417,8.768826,-0.224613,9.289891,2.077865,-1.416703,-6.269047,-7.075521,-9.171374,3.707556,2.024853,-2.438951,-1.465498,7.017741,4.321394,3.218656,-4.322608,6.267291,5.531067,6.038935,-2.974472,0.718701,0.305854,5.300938,-3.632695,-7.736406,4.832756,5.920178,-3.055504,-7.469932,-0.301457,8.681315,-4.730588,2.970840,0.362861,-0.149509,3.356360,1.241964,5.788411,-0.853520,6.027217,-0.305775,-5.903281,-8.875656,-4.430456,-9.182242,-1.271242,-8.640711,-3.411682,-7.615076,-6.165736,2.461669,-2.691287,-7.240246,3.650035,3.247649,3.904911,3.413052,0.900932,-3.544948,-2.457853,-1.380119,-8.217876,5.381176,0.134354,3.596194,-2.141500,6.469187,4.221440,1.661851,-2.817007,1.171440,-5.358509,0.685343,-1.690149,7.292457,-5.430535,3.577577,-8.547793,-1.061147,-0.539915,5.142097,-7.254660,2.599964,7.638153,9.861733,6.795597,2.675268,5.075206,7.814674,5.852742,2.093426,-4.584556,-5.635685,2.193165,-6.239803,-9.058563,2.446859,-3.872457,-0.618553,0.163401,-6.489462,-3.769240,-4.696918,-6.815900,3.331845,-1.865073,-5.953296,1.034559,-7.759713,6.639141,-8.302955,-0.141418,-9.386801,-1.696596,-2.797756,-6.160332,-9.251241,2.409451,5.196091,-5.041093,4.751567,3.652657,-7.420180,-9.590715,4.190650,7.719541,-5.851877,8.280169,0.509996,4.724025,5.215131,-5.273088,3.868409,-0.102751,2.208460,4.576060,-9.183196,-9.471642,-5.115714,0.680149,-6.403726,0.686668,-9.580068,-8.709065,6.749400,-2.783010,2.742633,-9.629862,-2.930889,3.012670,-3.207369,-4.429787,5.378526,2.815288,3.963959,-7.853994,5.112783,-2.974665,-8.843239,1.772880,8.789019,3.307889,-6.806263,8.852939,-3.555522,0.393421,2.700080,6.761191,-4.185634,-2.844939,9.719807,-1.162266,3.131458,8.545808,5.274083,3.843741,-0.167200,2.184756,-5.411375,6.772288,-7.081698,9.786398,-9.537708,-5.295080,9.791006,-1.567101,4.513019,-6.142605,-3.499551,1.705659,-4.090545,-3.413486,0.134383,-2.260979,-0.946696,-3.919542,-1.961082,-8.472844,3.549766,5.162969,-1.274260,2.064761,-1.412174,-5.133759,0.070053,-5.466232,-4.036794,-1.969622,8.878515,1.708386,-9.602892,-0.357924,-7.744638,7.325801,5.999095,-1.844342,5.812665,-2.710110,5.694721,-1.853825,-8.593093,4.348159,9.944946,-9.137154,-3.379974,-2.379473,9.078114,4.038612,9.035160,7.204091,2.274918,-2.285903,-0.311587,8.133676,8.856072,-8.835296,-7.505786,-4.718577,-6.221472,-4.828248,8.930134,0.842286,1.632397,-1.687756,-0.534999,-9.385347,2.509278,-5.000829,3.011728,-0.178870,8.155328,-3.138684,-7.040225,2.407530,4.193242,2.317965,-2.407740,8.273985,5.747467,-6.976062,-7.848539,2.446226,-7.755848], dtype = "float64")#candidate|4356|(1008,)|const|float64
call_4355 = relay.TupleGetItem(func_1841_call(relay.reshape(const_4356.astype('float64'), [14, 8, 9])), 0)
call_4357 = relay.TupleGetItem(func_1844_call(relay.reshape(const_4356.astype('float64'), [14, 8, 9])), 0)
output = relay.Tuple([call_4343,call_4355,const_4356,])
output2 = relay.Tuple([call_4344,call_4357,const_4356,])
func_4368 = relay.Function([], output)
mod['func_4368'] = func_4368
mod = relay.transform.InferType()(mod)
output = func_4368()
func_4369 = relay.Function([], output)
mutated_mod['func_4369'] = func_4369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2955_call = mod.get_global_var('func_2955')
func_2957_call = mutated_mod.get_global_var('func_2957')
call_4395 = func_2955_call()
call_4396 = func_2955_call()
var_4397 = relay.var("var_4397", dtype = "float64", shape = (4, 9, 4))#candidate|4397|(4, 9, 4)|var|float64
bop_4398 = relay.mod(call_4395.astype('float64'), relay.reshape(var_4397.astype('float64'), relay.shape_of(call_4395))) # shape=(4, 9, 4)
bop_4401 = relay.mod(call_4396.astype('float64'), relay.reshape(var_4397.astype('float64'), relay.shape_of(call_4396))) # shape=(4, 9, 4)
output = bop_4398
output2 = bop_4401
func_4412 = relay.Function([var_4397,], output)
mod['func_4412'] = func_4412
mod = relay.transform.InferType()(mod)
var_4413 = relay.var("var_4413", dtype = "float64", shape = (4, 9, 4))#candidate|4413|(4, 9, 4)|var|float64
output = func_4412(var_4413)
func_4414 = relay.Function([var_4413], output)
mutated_mod['func_4414'] = func_4414
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4638 = relay.constdtype = "float32")#candidate|4638|(15, 12, 11)|const|float32
uop_4639 = relay.atanh(const_4638.astype('float32')) # shape=(15, 12, 11)
uop_4641 = relay.log2(uop_4639.astype('float64')) # shape=(15, 12, 11)
uop_4656 = relay.rsqrt(uop_4641.astype('float64')) # shape=(15, 12, 11)
func_3002_call = mod.get_global_var('func_3002')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_4661 = func_3002_call()
call_4662 = func_3002_call()
const_4666 = relay.const([[[-3.198139,7.052599,-4.421557,0.315950,-8.519624,-2.684727,-5.857930,2.458935,-8.582703,-1.986477,-9.517591],[9.009601,-5.894713,5.903383,-7.709403,8.781053,9.778712,5.030359,-1.248583,2.084872,-4.318311,4.544262],[0.613997,-9.844525,6.753401,9.532894,-3.356294,1.511578,-5.101604,6.339753,0.355766,0.533064,9.840375],[1.178704,9.520957,-5.336712,-3.653204,-2.584034,-9.569597,4.266718,-6.561322,7.920166,9.127770,6.308206],[3.676081,7.723103,-6.270718,-5.329042,1.294067,8.391393,-4.706065,2.350623,9.076467,-6.961139,-2.365832],[2.430136,-4.194119,7.042030,4.862672,-1.208602,5.307710,-6.343660,-9.265657,1.955187,-0.722336,4.130066],[-3.252561,4.855918,-0.257350,1.738580,4.965505,5.118531,8.922419,-7.657741,-6.360662,5.235447,-2.955073],[8.778930,-7.057012,-2.833254,2.694646,7.118003,-7.862738,1.429384,2.130783,2.497306,-9.669771,-6.996663],[6.316555,-0.415774,9.950165,5.373642,9.444776,0.103537,9.606485,-0.910525,2.124712,-2.252087,-4.308055],[-0.442403,-8.915365,6.799141,4.746976,-8.155386,-5.505149,-8.109512,6.611237,3.990750,-7.449803,-2.703663],[-7.488012,-2.962939,1.643914,-5.802774,-9.365171,2.106626,-6.163576,4.954354,-3.425814,6.848941,6.305869],[7.198225,7.786511,7.139750,8.097865,-7.526878,3.926269,2.464542,8.094112,-2.279291,-1.220169,8.499340]],[[-1.690982,-7.687564,-3.840197,0.638623,6.465842,-8.951385,2.307345,-7.620066,-6.299755,3.374100,7.068513],[-4.662978,-4.574411,8.613619,-0.132059,1.783336,6.671346,7.783678,2.109053,1.131569,8.620778,-2.145950],[-0.686008,1.742635,4.052978,-2.198043,3.971043,8.336188,6.639160,7.749717,3.580539,9.463085,-5.756427],[7.647264,8.024707,8.967670,-1.344993,-2.478162,-8.889409,5.836029,-1.521539,7.597982,-6.626974,3.116945],[7.175144,9.391802,5.066178,3.853984,-2.312520,-2.219899,-0.045935,-2.641445,3.533438,5.119306,2.275717],[3.756247,-2.359779,6.558177,4.752044,-6.078259,0.961482,-9.321796,-3.062225,8.048206,-2.660694,3.216839],[8.401125,3.127125,-1.640871,-4.837508,-6.372103,0.624739,-4.427966,0.824727,5.943719,-2.470225,-2.888439],[1.165682,9.663774,5.826014,-6.043599,-0.984911,-2.035956,-7.635802,-9.786450,-7.509312,-4.716422,0.243543],[9.450978,7.281811,-7.492098,9.805415,-1.771177,-7.695565,3.850368,2.725311,-1.191712,9.616151,6.698361],[9.223304,8.939356,-2.459351,1.106699,-8.537482,5.326801,9.477490,-4.465373,-6.467609,8.095573,-0.861528],[-4.604525,4.041682,0.837326,8.936242,-9.754477,-2.604426,7.617405,-9.922034,-0.138618,5.965278,-7.281736],[2.742995,1.571921,5.263966,-0.685791,-0.271420,4.835520,3.959914,-1.097589,5.195467,3.694616,-5.742366]],[[8.595450,5.343899,-4.177475,0.655899,2.593433,2.936858,-9.281527,-8.556639,-5.628950,3.279695,-4.819209],[-8.048439,3.861734,6.196336,2.824248,3.795565,-9.456081,-5.824163,3.088465,1.932408,-8.162832,-9.528933],[9.930779,-2.111556,0.300996,8.465443,-5.435588,-7.838444,-6.169787,2.120234,-2.377120,-7.690846,0.291512],[2.413730,-6.710301,-0.952862,4.620795,6.945505,6.769615,-2.877234,5.685727,-7.272975,2.333559,1.754097],[-3.239858,7.025096,-2.816763,-1.107293,-2.382677,-0.469706,-2.102198,8.777276,3.208268,2.600710,-1.074292],[5.847880,6.641054,-0.044122,7.675810,-4.076938,-2.165345,-4.144437,7.680124,-1.095622,-5.528820,-2.061265],[3.471244,-2.681333,-9.172332,3.412614,1.043681,-2.409639,-2.740539,2.566279,2.583620,-5.814840,2.553638],[-0.893685,6.350562,-3.522866,7.310292,-6.878524,-2.461656,-6.868804,-2.980065,-1.231377,-1.000102,2.825966],[6.830826,-9.408498,-3.258278,-3.898663,2.797953,1.396168,8.150785,-1.262047,-5.102750,-5.763468,8.607744],[-5.681057,-4.107527,9.764573,0.563288,-3.699153,1.538447,0.005120,1.470289,4.339093,-2.752760,9.355703],[-9.721428,1.387361,-9.980929,-7.894850,-7.195365,-3.176201,9.816984,3.450540,-6.070752,0.861107,4.200176],[7.100526,-7.816737,9.672184,9.380250,-7.688900,4.839264,7.871485,8.091413,5.044850,-8.123946,9.460120]],[[-4.742633,-4.075464,-2.004707,-2.296482,6.591514,-2.904429,9.762887,-4.176852,-8.831385,-6.977219,-8.928862],[9.663871,5.326169,7.984244,-5.197682,1.764327,-4.106929,1.742830,5.373598,-0.504139,-7.186019,-8.501464],[-8.889587,-6.313180,-8.809456,-8.510610,-7.346741,-8.745555,1.650422,4.717742,-9.989739,-1.659380,1.343344],[6.904839,4.509766,9.679524,-3.402362,8.920525,-3.591851,9.704456,2.494936,-9.926024,-1.918000,9.699963],[-3.376168,8.142941,-5.036637,2.000148,-5.402631,-2.804062,-9.774110,3.088530,-2.958722,-8.540016,-3.115624],[5.967019,6.543589,-8.611732,-2.638061,8.943079,-4.806228,-9.081910,-0.154047,-7.355485,-5.611369,2.775734],[-1.053529,-9.686043,1.140350,-6.948233,-7.467653,6.226243,1.949985,0.375131,-7.286271,-4.214886,-3.324887],[1.917293,9.980711,4.844688,-9.571321,-7.164211,1.689516,5.044457,0.462309,-0.034690,0.470060,-4.104005],[0.844801,9.761155,-5.178272,8.425970,-0.977251,-2.248686,-6.146155,8.993940,-4.246251,-5.790704,-8.170536],[-0.594697,8.603936,-6.498207,5.084234,3.028151,-8.655251,-3.306501,-5.772184,4.565514,-6.198793,-7.060475],[3.195197,4.785254,-8.248075,8.311220,-9.267680,-5.429066,3.839800,-5.165148,8.090454,8.684897,-2.019586],[8.995831,6.024099,3.145379,-2.564788,0.740779,-4.783008,1.665770,-8.327258,2.000296,-3.384530,-3.693064]],[[-8.947215,-8.438770,-4.585201,-0.659011,3.466254,6.579111,-9.187165,-2.392403,5.740247,4.717778,5.260936],[-2.313699,2.075470,-6.121033,2.476905,6.750760,8.286904,-9.620784,-6.826396,3.694504,-7.919583,-8.132344],[9.139593,7.828977,-4.270123,-5.320722,0.264687,5.019933,4.263680,-8.945102,-2.744627,-3.298179,-1.708371],[8.104424,6.495935,-7.659495,-2.570404,3.402419,-3.572834,-4.367379,4.055115,-7.852057,2.696026,4.690986],[5.156492,3.750342,-2.647206,5.609154,-4.602296,7.606493,4.476041,8.876193,-3.107037,-8.117613,5.544703],[-1.652356,2.208037,5.911083,-3.280712,7.698158,3.785978,-8.482386,3.704707,-3.460289,-8.828468,2.326685],[5.682554,6.890732,9.247674,-9.675056,-9.383227,7.278733,3.701165,-8.812336,-8.505154,1.715685,4.413508],[5.506809,-3.919287,-6.713158,4.669821,-7.559934,4.021267,-3.354950,1.257590,9.883663,5.628294,-9.338458],[-4.914411,8.499115,-6.107162,-7.816997,-4.068748,-0.064996,7.190946,3.916434,0.120656,4.409470,-5.403137],[7.408353,5.183058,7.095254,-7.051813,5.331777,8.220860,6.794297,-7.177962,3.157002,2.798539,8.622678],[-7.665646,3.165641,-9.281256,-3.274654,-8.198573,8.707282,4.328844,3.020332,-2.882710,-2.156703,3.869974],[4.954831,2.278798,-4.134192,1.354325,5.242904,-3.348202,9.773475,7.811371,5.189269,0.062155,7.314432]],[[-8.587521,-6.313467,-6.792759,-3.176484,-0.580721,3.742729,-6.904464,-6.012196,8.792171,3.943596,-6.612628],[-5.821738,3.250966,-4.057854,-9.353350,0.334749,-3.054296,0.275540,-6.515174,-3.330503,-1.127901,-5.279170],[7.352850,-0.315833,-0.310176,-0.786079,-5.261879,-7.327836,4.324840,-6.248513,7.334076,-5.183923,-8.048607],[-9.801924,7.290534,3.481782,-8.343538,-5.780160,9.666030,-9.617621,-8.579849,-6.791426,2.621113,-8.229849],[1.413209,9.088662,-0.482483,-8.294752,5.750651,1.852198,4.925457,-7.600195,-3.555794,8.788282,0.882973],[0.170090,5.554249,-1.387175,0.901721,8.695952,-6.360232,0.355644,-0.346528,1.428044,-6.743303,-4.585285],[2.565523,4.706075,1.594871,8.645794,-1.534152,-7.739358,4.446045,-2.794991,-3.649564,4.680935,-9.641983],[0.438030,6.221178,8.505977,-3.260079,3.973959,-2.462578,3.445901,-6.534702,1.111210,-6.885874,-8.147640],[-6.229356,-0.381672,-8.791437,0.590618,-5.906575,6.697479,6.083411,5.325828,-2.727174,-0.619375,4.209189],[-0.369169,-4.254387,-2.234013,3.588730,-2.379445,0.891884,-9.401857,9.898743,0.252409,8.468864,3.679922],[9.104012,-6.084499,3.522461,-1.904931,-9.507910,-5.298554,-7.828500,8.737918,5.523500,-1.696718,-0.340412],[-9.154140,-9.852249,8.917591,-6.649046,7.048510,0.482875,9.811981,-2.276408,2.164147,-2.822747,7.071387]],[[-3.183706,5.965768,2.905929,9.695679,-4.571814,1.406861,8.890307,-2.328351,4.920982,6.008498,4.686788],[7.596340,-7.885385,6.724517,5.463751,-4.667372,3.745024,5.509218,3.754970,0.329636,1.744639,-9.263471],[9.546275,-6.377281,-2.642855,-0.193955,3.024485,9.404014,-7.939366,-8.923900,-3.276234,-3.644268,-6.777240],[-9.182179,-2.708140,-2.196829,-6.269465,-6.448462,6.251645,-5.026578,-3.800535,-6.925896,-8.491372,3.980778],[-6.664504,-2.366342,-9.773607,-0.589562,6.995134,-2.585993,-4.128626,0.413218,-2.640823,7.283424,-7.301560],[5.467802,-9.494223,-1.359717,-4.978489,2.895634,-9.541752,3.681947,-6.372892,2.401485,-9.326987,1.588501],[-2.634509,0.118545,-0.308468,0.273322,-3.975641,4.031468,-8.007927,6.102820,-1.641774,1.087372,8.353121],[8.959304,-9.361346,5.907942,4.270202,-0.254894,3.971985,-1.551877,-2.992684,-5.720107,-5.788292,4.564847],[-5.665556,2.335840,9.874394,7.145441,6.304428,8.464164,5.688141,-0.418951,8.218641,4.778977,-7.937706],[4.753017,6.041622,2.107698,6.361495,-3.171134,-9.741499,-8.797371,-7.294106,-9.007309,3.944409,1.258106],[-2.684944,8.625179,-8.999536,-9.131454,-8.256243,3.276814,6.717119,8.206104,2.481107,-0.744273,-2.623508],[-0.915835,-1.037066,-0.343777,-1.239593,0.929026,-2.321197,-6.929953,4.521628,3.270514,-2.154605,0.028491]],[[-5.290360,0.255349,-6.920835,0.847250,-1.364130,6.596114,-4.083349,-4.334259,7.825620,7.157381,-8.631046],[5.955495,-6.574734,9.115341,5.960619,-0.848560,-6.265932,-4.837243,-1.699958,5.881713,4.646168,6.038873],[-3.304769,-3.203915,8.625047,1.150846,7.918932,6.064478,-4.915603,7.188419,2.262844,9.988260,9.944831],[-3.143789,5.495223,-1.959315,-1.790230,-0.010936,-6.023918,4.193563,-4.513797,0.055571,6.283480,6.559240],[-0.244206,7.798925,-7.403301,1.553146,-1.317502,6.354807,2.481462,-0.826204,-8.548024,-9.179354,9.504046],[-7.544280,4.156513,-9.005909,5.103689,-5.189115,-0.519285,2.332975,-7.768363,-7.540373,5.978188,-5.593546],[7.508177,-8.346904,3.452238,-6.767436,-6.423701,-9.676246,9.703976,-6.256781,-2.598446,-4.458650,0.650366],[5.368225,-4.228239,-5.238767,-2.434885,-5.989696,-5.768553,6.717674,4.667974,-2.428011,-5.465706,0.379362],[3.887396,-9.100156,-1.296138,-9.979170,1.947068,0.059974,3.354413,2.200984,-9.678885,-1.094227,-5.953292],[-4.230002,6.119848,-0.085837,1.825275,4.864847,8.677075,-8.679461,-3.211341,1.316130,9.024867,8.123309],[0.849442,-4.152552,-9.866741,-0.252629,-8.431739,4.539409,5.862911,8.063661,3.611979,-7.383613,3.006666],[1.227994,5.122601,9.501714,0.353573,-9.015464,4.799545,8.368852,4.649088,-1.889235,-3.111796,3.574543]],[[7.210716,6.450646,-4.497893,-9.890453,-6.720730,3.493842,-1.807654,-1.516624,-1.351411,-9.108798,5.673704],[2.585643,8.034690,-8.596717,1.910547,-2.093420,0.511698,-5.856976,0.685398,0.517303,-7.278227,7.234109],[0.205658,-1.809226,-6.883563,9.140933,-6.460498,-4.422323,-0.070058,-5.387832,6.075639,8.354486,-4.396112],[-9.017538,-6.786160,6.309769,-4.867282,9.954294,0.165891,2.381979,1.327334,9.349180,-0.072604,9.687680],[3.157140,-8.094317,-4.418529,9.973688,9.983413,-3.712800,2.892978,-3.614055,3.604727,3.708857,-4.371005],[-5.989133,5.173882,2.683001,-5.090938,-5.047273,-4.737707,-8.507010,-2.176036,2.533920,0.639346,0.750855],[-5.285822,-2.641699,-7.474597,-6.788123,2.026716,-9.815088,-7.766480,-8.714579,-0.318983,-2.880960,6.185140],[-2.560986,-2.432568,-3.295234,3.338614,-7.360139,9.281738,0.868268,-9.569998,-5.482757,9.062154,-5.612750],[4.193841,-1.870725,-4.247773,-4.776981,5.832541,9.236739,6.450028,2.275855,-1.304619,-2.810426,-8.241771],[5.192323,0.568752,-9.114458,-9.008068,-5.795543,3.529542,3.255663,-0.197698,-6.397982,-4.346187,6.702983],[6.219922,7.763949,6.385375,0.366969,1.012708,-5.213297,8.410233,8.495330,-6.474521,6.443241,-2.766345],[3.330573,-4.276495,-6.594205,2.489491,-3.379917,-9.003691,-6.496120,8.222098,-9.169608,-4.052266,3.960036]],[[0.090771,9.354862,7.317913,-0.567347,-6.086483,-6.002252,9.022978,7.099114,-9.621914,4.536799,0.485083],[-7.913134,6.557905,-5.437843,-6.755187,6.109587,-3.964728,7.382795,0.548809,-4.669724,9.094896,5.629990],[2.311285,6.213527,-4.400114,8.605009,9.818655,6.235505,-2.514223,-5.909275,8.963311,-4.799343,2.466500],[4.018050,4.724463,-5.483739,-2.076923,0.368261,-1.051645,-9.702983,5.279170,3.314358,1.427566,-7.415222],[-7.550479,-2.807942,-6.080166,7.082991,-4.688161,5.925238,-0.145106,-1.374580,5.680190,5.735729,9.041149],[-2.807420,7.430897,8.265739,-6.329679,-8.952871,-0.757269,6.851976,2.997427,-5.324004,0.241002,-1.637981],[8.900632,1.126987,-7.188652,5.670474,-9.887742,6.373571,6.636672,-1.924314,-8.410748,-7.480323,-4.988779],[3.629164,-7.701865,5.094456,7.907358,-4.198452,1.250938,1.633658,-4.198826,7.570689,5.382873,-5.096639],[5.352132,-3.127243,3.771078,-0.268931,-2.327015,5.605878,-5.156794,5.939594,-5.427114,-7.360941,1.737378],[-2.682965,-6.874176,-9.134908,-7.789404,-8.818289,6.066542,2.086041,8.138903,-1.861341,7.395607,5.075231],[1.345148,-6.115682,-0.326829,8.864725,-0.100230,1.273506,2.388089,-9.141843,-9.285631,0.680465,-4.078612],[-4.259665,-2.208300,1.432439,-5.038367,1.895561,4.327406,-9.618785,1.833110,7.602359,5.235293,-0.836186]],[[-9.134034,-1.169457,-2.977282,0.157720,-2.263177,-8.956693,-3.492941,-7.950707,-5.744412,-1.457847,1.323914],[2.538901,-5.649345,1.322461,9.320351,-8.386257,-3.097205,-0.785928,-3.567256,8.570563,7.422461,-7.580585],[-4.915582,4.010594,-0.921078,-6.181662,-6.254959,-3.828712,2.536023,-4.900811,-2.141220,-2.540030,5.003647],[9.229491,-0.310716,-3.865846,-1.749358,-1.673600,2.543005,-1.680822,5.270992,-0.989161,-4.495280,9.738886],[-5.282099,1.688280,-0.812975,1.752840,-5.608821,-5.121490,-6.412938,2.329603,6.683523,9.936869,7.124510],[-9.079421,-2.427641,-5.998595,-4.062409,-6.611014,6.202800,7.405763,-6.096892,0.212716,6.827685,1.691709],[-8.588578,-4.243159,-2.287089,-4.418658,9.658886,7.562386,5.746221,5.908070,1.753014,-8.769816,8.399367],[-6.897958,8.164944,-9.616646,2.394237,-5.595198,-6.941910,3.055860,-8.599565,-4.287631,8.674828,5.825888],[3.468573,-0.463800,0.170369,4.102205,-9.852217,-2.600324,3.806136,-6.264178,-4.145059,-7.664810,9.226822],[-2.688927,-5.915487,-2.951478,-6.105290,-2.464061,-6.662680,-8.885218,-0.517593,-4.604014,8.843617,-2.744240],[3.006062,-5.060718,3.447552,7.888484,-2.616881,-5.682772,-1.809818,-4.434567,-5.314570,5.539164,8.321421],[-1.344179,8.514693,-2.224746,3.490650,-9.579265,5.261461,9.638121,9.401165,-4.817428,-2.706480,-1.561390]],[[9.985976,5.222514,-9.936873,-1.526954,-5.131448,7.321679,6.050040,-9.329976,-0.534234,1.451177,8.695557],[-4.158159,8.714950,2.579046,1.805418,3.429927,-1.398443,-1.932537,7.410879,7.264033,-5.939830,2.801331],[-8.019964,-9.508983,-0.020770,2.843870,-2.524639,5.819984,-4.338654,9.792891,-3.904182,-0.649561,2.476770],[3.568162,9.251615,-1.603293,4.005491,5.401326,-6.406301,-3.270710,1.454211,-0.419013,3.115552,-4.405147],[-8.436683,2.401262,-2.476039,-2.916969,8.231920,-5.588810,-5.123180,-9.057585,-1.892389,1.370026,8.885652],[-0.743523,7.362412,8.285294,-0.024995,-7.294074,3.901316,9.652855,8.803911,-6.201772,-2.584628,2.478057],[2.067060,-0.016348,8.281635,-2.359776,-4.093179,-5.554210,-5.546361,-4.627491,4.856312,2.268524,0.958122],[-4.655281,-2.877537,1.780941,1.318322,5.417276,-6.643202,-7.208208,-5.910923,-8.210858,7.830846,-5.339006],[-4.540615,-7.789462,-9.879519,3.613723,3.005979,-6.582494,-4.266456,-4.081245,9.030945,-9.808782,5.639716],[3.163476,-3.426484,-8.257936,-2.123068,5.363825,-0.609491,-8.881382,4.570746,-3.028510,6.491299,5.182556],[-4.107419,3.909990,1.046381,5.510171,8.291421,-4.779673,-8.142491,7.001985,-1.213227,-4.411919,4.264307],[9.299618,-0.573118,6.095985,-5.703189,4.476659,-9.193935,-4.042970,-3.284707,-0.924329,9.637021,9.175033]],[[-7.996509,-6.151774,9.275138,9.501776,-4.277524,-3.233584,-3.313451,-2.237682,-4.344921,9.364502,6.146764],[-4.434127,2.199912,8.933524,-1.929891,-0.967185,0.495940,2.372016,3.580891,5.435505,0.036851,-9.019870],[2.988286,-3.898559,-4.711360,-1.495124,-7.948730,-0.556544,-3.285242,-5.556820,-0.528791,9.356691,6.232736],[1.354391,9.174383,-0.733789,-2.546795,-7.545002,-9.192647,3.154951,-0.457299,-9.297951,-9.288885,-4.528643],[-0.130053,8.547091,6.021405,-2.486025,1.214481,-6.385867,2.481214,3.025927,0.603540,2.650718,9.317282],[6.533819,4.656996,-3.694029,-4.619472,-6.511521,1.398740,3.711617,-5.071108,0.280525,8.838058,-5.304281],[0.500182,-1.678253,9.057672,-7.075584,-2.413323,-5.342256,8.330924,-4.852131,2.179674,-1.703867,-5.246273],[4.971043,9.671117,3.205990,-7.422191,6.286480,3.999274,0.068429,-8.164581,1.767549,6.024594,-1.955788],[-8.240608,-7.903747,0.508304,-9.893775,-6.234325,-9.199701,1.908959,9.124501,7.549917,4.536277,-7.684840],[0.979204,-0.574483,-1.560008,-4.905808,-2.498394,6.469192,-6.160533,0.504638,-1.442354,-3.532569,0.890045],[-0.021138,-5.623664,-5.638540,1.194934,-5.805368,0.818736,4.012712,-1.182884,-2.085144,1.863416,2.578647],[-4.841676,-6.549158,-6.352317,9.769433,-2.719514,-8.960598,7.801043,-8.220832,-8.655824,9.689311,4.984420]],[[0.240807,-1.671418,-7.050829,4.783384,8.223970,-3.243100,-9.825235,-8.303778,6.316722,-2.175450,2.425019],[-1.499399,-7.962850,-2.698854,-5.299029,-9.348797,7.308488,2.113335,-6.499237,0.041234,-2.260471,-0.619731],[7.447893,-5.032146,6.066713,-0.747457,-4.928400,8.241810,2.908747,-0.026193,5.408491,5.571744,4.972142],[4.940588,2.512748,2.884358,-2.982862,6.582283,-4.963677,-3.849277,-1.709102,4.561580,3.619155,4.844145],[-8.643097,-2.256796,-8.258952,8.477622,-4.042514,-7.580342,9.336582,4.363477,6.932790,4.692884,-7.775313],[4.725972,3.627835,9.228359,9.015075,7.018523,-9.394663,-2.416403,-9.605178,-4.348171,-4.229209,-3.608362],[-7.235584,3.085198,-0.113228,-7.182681,6.534434,4.827021,-1.457825,0.167764,9.183934,0.889407,7.049857],[4.362781,4.148632,-8.903196,-5.349518,-5.692244,1.776037,-2.831946,-4.721220,-8.693071,-1.197009,-2.507222],[1.962683,0.688627,4.198533,-1.347806,-0.846905,-3.408392,-6.648352,9.432905,8.397802,1.643005,1.392317],[4.682694,-3.212393,8.907580,9.139421,2.997026,-5.963999,-2.635777,-4.316433,-1.818810,-0.474825,-9.705191],[9.309059,7.673598,2.561723,6.066756,-3.413550,5.661283,3.934349,3.347167,-2.913214,2.335419,5.654779],[-1.587453,-9.209204,-9.044380,8.483976,8.138894,-8.837152,-7.510496,-6.939281,2.863164,-5.276970,9.714944]],[[1.785831,-7.346815,-8.658993,-3.168863,0.110709,0.576231,2.863944,-6.143820,-7.867753,-3.356605,-9.760864],[2.808135,-5.807344,1.838022,4.669832,-6.092573,-9.499980,-9.248127,-5.371570,-7.027149,-9.671064,-2.409336],[-2.498814,-2.731735,-7.742720,0.945430,3.564465,8.474372,9.889091,-3.240137,-3.476233,-0.048475,-0.390465],[2.276000,9.122945,-7.690202,4.981187,-0.335332,-8.995251,-5.032384,1.234861,7.852650,-5.166873,-4.505528],[-3.450501,-8.902636,-9.673806,5.257313,-5.829181,0.083386,-2.641349,8.188130,-2.380840,5.387779,-8.319021],[-9.794348,-6.210387,2.200130,-1.948559,-7.580412,-1.020075,9.526231,9.394124,2.693248,1.908183,-8.902645],[7.187450,8.306807,5.445566,-4.833812,2.269572,0.285563,-6.597490,-2.559464,-2.081737,8.423059,-0.234408],[8.630723,3.772703,8.497905,-3.069340,0.396135,9.424736,1.019739,7.618994,-6.190043,-2.377864,-6.222760],[-6.144783,-9.281169,-1.110891,-9.197265,-8.535937,-0.157151,-6.010680,8.724601,7.071390,-9.115366,2.147541],[8.777766,6.340397,0.849145,1.704689,7.060166,0.256055,2.817971,1.733388,-6.573837,7.143231,-6.612763],[-0.140419,-8.990340,-5.691235,-6.318106,0.182558,-9.082993,1.633508,-2.241717,-1.659152,3.755621,2.167032],[0.607663,-0.249011,8.238502,-5.700259,1.981600,0.093776,5.873562,0.828897,5.025162,5.709860,4.516265]]], dtype = "float64")#candidate|4666|(15, 12, 11)|const|float64
bop_4667 = relay.equal(uop_4656.astype('bool'), relay.reshape(const_4666.astype('bool'), relay.shape_of(uop_4656))) # shape=(15, 12, 11)
uop_4677 = relay.acosh(uop_4641.astype('float32')) # shape=(15, 12, 11)
func_1879_call = mod.get_global_var('func_1879')
func_1884_call = mutated_mod.get_global_var('func_1884')
const_4687 = relay.const([[5,5,-10,-6,7,2,9,-7,9,-3,2,-2,-3,7,-8,-4,-9,-9,-9,5,8,-1,-3,6],[-2,-6,9,1,2,5,-3,5,10,-2,-10,7,4,-7,-10,-6,5,7,1,-7,6,-3,3,-2],[3,-3,10,-10,-10,1,3,-2,-1,-2,7,-7,3,1,-9,10,6,4,-3,-10,3,-5,-1,7],[-8,-6,8,7,5,-9,10,8,-3,1,1,1,3,2,-4,7,8,6,-9,9,-10,2,-8,-3],[-7,6,-6,-1,4,-4,-2,10,-6,-8,-9,3,-7,-7,-7,7,7,-1,-2,-3,-6,3,-7,10],[9,-2,-6,8,-10,-8,7,1,9,-6,-4,5,5,-10,3,8,7,-2,5,-6,-7,1,10,-6],[4,1,-1,8,8,-8,7,5,-6,-6,-9,5,9,-7,-8,1,7,9,-10,-1,4,-9,7,-4],[-1,3,5,5,6,4,-5,7,6,-9,3,-5,1,-8,6,-1,-6,-8,-4,6,4,-3,6,-10],[-6,-9,1,9,-5,-2,1,-9,-2,8,9,6,-6,2,-9,-4,-5,7,6,10,3,2,9,-10],[10,7,-4,5,-1,3,1,-8,-10,-4,1,6,8,-7,-3,8,-9,-5,9,4,-8,4,4,-8],[7,1,-6,1,8,2,8,-5,8,-9,-1,-9,-2,8,2,-2,-8,6,-1,1,-4,-9,5,-9],[-7,10,-3,-6,-1,-3,-2,4,10,-7,7,-10,-1,3,-4,-8,3,8,-8,-3,3,-4,4,7],[7,5,-2,-5,6,8,2,-3,-6,1,7,5,-1,-7,6,-9,9,-5,10,1,-7,8,-5,-4],[-3,-8,-10,-2,-1,-4,-4,10,-8,2,6,-4,4,-4,-4,-1,7,1,2,8,2,-2,6,10],[10,10,9,1,-7,-2,5,-9,-5,-10,4,2,-2,4,10,-10,8,-6,-5,10,-2,-4,-8,-1],[-3,-1,9,-5,-2,6,5,-2,-9,9,5,-7,-2,8,-6,-4,-10,-8,-10,9,-3,2,5,10],[4,8,-9,-8,8,10,5,-6,8,-5,8,8,10,-1,6,9,-1,9,3,-2,5,8,-7,-6],[-8,-5,6,-8,-5,-3,10,-3,10,4,1,-6,-9,8,-9,-1,5,3,-9,-10,-2,7,5,-5],[-2,-10,-5,9,3,8,-2,-8,6,10,2,2,-5,8,-1,-4,-1,7,-3,10,4,5,-8,4],[-4,-9,-8,-2,2,-10,-4,5,1,1,-8,7,8,9,6,-2,-2,9,-2,1,-3,-6,-7,2],[4,-9,6,-6,7,2,3,-4,-5,-2,-5,2,4,-5,-2,9,2,-8,-4,-5,-4,-6,3,9],[-4,6,6,5,7,-2,-9,-4,-9,-9,1,-5,3,1,3,5,-2,5,10,-7,4,-7,-2,-1],[-7,5,-6,-2,-4,-8,-2,-4,-5,-10,1,-3,9,-7,5,2,-10,-10,9,-9,7,-10,10,1],[3,2,1,10,-7,10,4,-6,9,5,9,1,-1,3,2,-9,-7,10,6,7,8,-7,-1,9],[8,10,-7,-1,1,-2,-10,-10,1,5,4,1,1,-4,-1,-4,6,6,4,-2,3,-8,4,-10],[-1,-2,-10,5,-3,6,4,2,-4,3,-6,-3,-2,10,10,-1,-6,4,-6,-7,-9,-2,3,-3],[2,6,-5,-5,-1,-1,6,2,6,7,-6,-2,9,8,-10,10,-6,-10,-5,-8,-1,-7,-2,8],[-6,2,3,-7,-8,4,-5,-7,-3,4,1,6,2,8,2,-3,-3,10,-7,-8,-1,2,-9,9],[-8,-1,4,1,-1,-1,7,3,9,7,10,2,10,-9,4,2,-10,1,10,-1,2,-6,-8,-8],[4,-2,1,-8,-7,-9,-3,-3,5,9,7,-8,4,8,5,-6,3,3,-3,4,-8,-8,-5,-3],[4,-6,4,10,10,-7,-3,-5,-2,-10,-1,-4,9,-9,-5,-3,-6,10,4,5,5,8,6,4],[-4,-4,9,2,-10,-2,-3,3,-5,9,-2,-3,8,-7,-7,-4,-7,3,-6,4,6,-2,1,10],[8,-5,-4,1,10,-6,-1,7,1,-4,5,-5,-5,3,2,-2,-1,-3,5,-6,-2,-3,7,10],[10,-4,-5,-9,6,6,3,8,-7,10,-7,-1,3,1,-4,5,-9,2,-8,4,-2,1,10,-1],[2,-9,2,-5,3,-4,-1,4,9,-5,8,-2,2,8,-3,-7,4,2,-7,10,5,1,-4,7],[3,-2,-1,-3,-8,-3,10,5,-9,10,4,-9,6,4,-7,5,2,2,2,4,-6,2,-10,-2]], dtype = "int16")#candidate|4687|(36, 24)|const|int16
const_4688 = relay.const([9.779303,5.219381,3.731572,-5.980098,-4.274403,8.345314,1.493112,7.510876,7.196081], dtype = "float64")#candidate|4688|(9,)|const|float64
call_4686 = relay.TupleGetItem(func_1879_call(relay.reshape(const_4687.astype('int16'), [6, 16, 9]), relay.reshape(const_4687.astype('int16'), [6, 16, 9]), relay.reshape(const_4688.astype('float64'), [9,]), ), 0)
call_4689 = relay.TupleGetItem(func_1884_call(relay.reshape(const_4687.astype('int16'), [6, 16, 9]), relay.reshape(const_4687.astype('int16'), [6, 16, 9]), relay.reshape(const_4688.astype('float64'), [9,]), ), 0)
output = relay.Tuple([call_4661,bop_4667,uop_4677,call_4686,const_4687,const_4688,])
output2 = relay.Tuple([call_4662,bop_4667,uop_4677,call_4689,const_4687,const_4688,])
func_4690 = relay.Function([], output)
mod['func_4690'] = func_4690
mod = relay.transform.InferType()(mod)
mutated_mod['func_4690'] = func_4690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4690_call = mutated_mod.get_global_var('func_4690')
call_4691 = func_4690_call()
output = call_4691
func_4692 = relay.Function([], output)
mutated_mod['func_4692'] = func_4692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4218_call = mod.get_global_var('func_4218')
func_4220_call = mutated_mod.get_global_var('func_4220')
call_4704 = func_4218_call()
call_4705 = func_4218_call()
func_1321_call = mod.get_global_var('func_1321')
func_1324_call = mutated_mod.get_global_var('func_1324')
const_4712 = relay.const(10, dtype = "uint8")#candidate|4712|()|const|uint8
const_4713 = relay.const([-10,6,5,5,9,9,-3,6,-3,4,-5,1,1,-10,-4,2,3,5,-4,-9,10,1,-4,1,-7,9,5,4,6,7,-10,-3,7,-8,-6,-5,5,-2,-4,-6,10,-5,-5,-1,4,10,-6,-8,1,-5,-2,-5], dtype = "int8")#candidate|4713|(52,)|const|int8
call_4711 = relay.TupleGetItem(func_1321_call(relay.reshape(const_4712.astype('uint8'), []), relay.reshape(const_4713.astype('int8'), [52,]), ), 4)
call_4714 = relay.TupleGetItem(func_1324_call(relay.reshape(const_4712.astype('uint8'), []), relay.reshape(const_4713.astype('int8'), [52,]), ), 4)
output = relay.Tuple([call_4704,call_4711,const_4712,const_4713,])
output2 = relay.Tuple([call_4705,call_4714,const_4712,const_4713,])
func_4717 = relay.Function([], output)
mod['func_4717'] = func_4717
mod = relay.transform.InferType()(mod)
output = func_4717()
func_4718 = relay.Function([], output)
mutated_mod['func_4718'] = func_4718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_4771 = func_3796_call()
call_4772 = func_3796_call()
func_3720_call = mod.get_global_var('func_3720')
func_3726_call = mutated_mod.get_global_var('func_3726')
var_4788 = relay.var("var_4788", dtype = "uint32", shape = (36, 2))#candidate|4788|(36, 2)|var|uint32
const_4789 = relay.const([[-9,-6,-3,-3,-6,-8,-9,-6,6,-1,-8,-9,-7,-3,3,4,4,-8,-3,-2,10,-9,-9,-3,4,-9,10,7,-10,-4,6,7,-1,6,8,2,-8,-6,-6,1,3,-4,1,-8,4,2,-3,-9,-5,-8,-3,-8],[3,-7,3,9,-9,8,-8,8,2,1,10,2,5,8,-2,8,-10,-4,-4,-10,-8,2,7,-8,-2,6,9,1,10,3,-6,7,5,-1,-4,3,-9,10,4,7,-6,-2,-1,-8,-10,2,1,2,-3,-6,-3,-1],[-3,10,-8,7,-2,-9,-2,3,-10,-10,6,-9,-8,-6,-6,-5,9,-8,6,2,-6,8,-10,2,8,10,-7,-3,-4,7,-7,8,-2,4,4,4,9,-8,5,-6,5,6,-5,-8,-7,10,7,-1,-6,5,-3,10],[2,-8,9,7,1,5,-2,6,7,-5,-4,3,3,2,10,-7,-9,7,-10,1,10,9,10,-3,-1,-1,-5,9,-6,-4,-2,-9,8,8,-2,1,-6,8,-8,-2,9,8,-2,4,7,-4,-10,9,-1,-6,-7,-7],[-7,-6,5,-6,3,-10,10,-3,-1,3,2,-7,-8,-5,2,-5,-8,6,2,8,5,-10,-2,-9,10,4,3,-2,-6,5,1,-7,-4,10,4,-1,8,1,2,2,-3,3,-8,8,-4,-2,-4,1,1,-3,-3,-1],[6,8,-3,2,-7,-3,-2,8,5,-2,-8,-8,-6,3,7,-10,-7,3,-9,7,9,-10,2,-8,8,5,-3,-7,6,-8,-4,-8,-7,1,5,1,-8,7,-10,7,5,6,-7,-8,-4,5,-5,9,3,9,5,-2],[-4,5,3,2,3,7,2,2,2,-4,-10,10,-10,-1,-2,2,-3,-7,-8,-8,8,3,-1,-6,2,-1,-10,10,-3,-6,6,-10,-4,9,8,3,3,4,10,-6,-9,-9,-1,10,9,-8,4,6,-4,10,-10,-6]], dtype = "uint8")#candidate|4789|(7, 52)|const|uint8
var_4790 = relay.var("var_4790", dtype = "float64", shape = (56,))#candidate|4790|(56,)|var|float64
var_4791 = relay.var("var_4791", dtype = "float64", shape = (1008,))#candidate|4791|(1008,)|var|float64
call_4787 = relay.TupleGetItem(func_3720_call(relay.reshape(var_4788.astype('uint32'), [72,]), relay.reshape(const_4789.astype('uint8'), [364,]), relay.reshape(var_4790.astype('float64'), [56,]), relay.reshape(var_4791.astype('float64'), [1008,]), ), 7)
call_4792 = relay.TupleGetItem(func_3726_call(relay.reshape(var_4788.astype('uint32'), [72,]), relay.reshape(const_4789.astype('uint8'), [364,]), relay.reshape(var_4790.astype('float64'), [56,]), relay.reshape(var_4791.astype('float64'), [1008,]), ), 7)
func_1471_call = mod.get_global_var('func_1471')
func_1474_call = mutated_mod.get_global_var('func_1474')
const_4794 = relay.const([-4.298119,-2.543598,-8.533605,0.870403,8.574268,-7.312631,-8.595147,6.557276,2.920768], dtype = "float64")#candidate|4794|(9,)|const|float64
call_4793 = relay.TupleGetItem(func_1471_call(relay.reshape(const_4794.astype('float64'), [3, 1, 3])), 0)
call_4795 = relay.TupleGetItem(func_1474_call(relay.reshape(const_4794.astype('float64'), [3, 1, 3])), 0)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_4806 = func_3112_call()
call_4807 = func_3112_call()
output = relay.Tuple([call_4771,call_4787,var_4788,const_4789,var_4790,var_4791,call_4793,const_4794,call_4806,])
output2 = relay.Tuple([call_4772,call_4792,var_4788,const_4789,var_4790,var_4791,call_4795,const_4794,call_4807,])
func_4809 = relay.Function([var_4788,var_4790,var_4791,], output)
mod['func_4809'] = func_4809
mod = relay.transform.InferType()(mod)
var_4810 = relay.var("var_4810", dtype = "uint32", shape = (36, 2))#candidate|4810|(36, 2)|var|uint32
var_4811 = relay.var("var_4811", dtype = "float64", shape = (56,))#candidate|4811|(56,)|var|float64
var_4812 = relay.var("var_4812", dtype = "float64", shape = (1008,))#candidate|4812|(1008,)|var|float64
output = func_4809(var_4810,var_4811,var_4812,)
func_4813 = relay.Function([var_4810,var_4811,var_4812,], output)
mutated_mod['func_4813'] = func_4813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4368_call = mod.get_global_var('func_4368')
func_4369_call = mutated_mod.get_global_var('func_4369')
call_4863 = relay.TupleGetItem(func_4368_call(), 0)
call_4864 = relay.TupleGetItem(func_4369_call(), 0)
func_2152_call = mod.get_global_var('func_2152')
func_2157_call = mutated_mod.get_global_var('func_2157')
var_4881 = relay.var("var_4881", dtype = "float64", shape = (480,))#candidate|4881|(480,)|var|float64
const_4882 = relay.const([10,8,6,-9,-3,-9,-6,6,-5,-10,3,-4,9,1,-9,8,6,-1,10,-9,10,-5,2,2,4,-4,9,-10,-3,-2,1,2,-7,-10,-10,-10,-6,-9,-6,6,4,-9,-10,-3,-9,-7,-6,10,1,10,10,4], dtype = "int8")#candidate|4882|(52,)|const|int8
call_4880 = relay.TupleGetItem(func_2152_call(relay.reshape(var_4881.astype('float64'), [15, 2, 16]), relay.reshape(var_4881.astype('float64'), [15, 2, 16]), relay.reshape(const_4882.astype('int8'), [52,]), ), 1)
call_4883 = relay.TupleGetItem(func_2157_call(relay.reshape(var_4881.astype('float64'), [15, 2, 16]), relay.reshape(var_4881.astype('float64'), [15, 2, 16]), relay.reshape(const_4882.astype('int8'), [52,]), ), 1)
func_4368_call = mod.get_global_var('func_4368')
func_4369_call = mutated_mod.get_global_var('func_4369')
call_4886 = relay.TupleGetItem(func_4368_call(), 2)
call_4887 = relay.TupleGetItem(func_4369_call(), 2)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_4933 = relay.TupleGetItem(func_3054_call(), 0)
call_4934 = relay.TupleGetItem(func_3056_call(), 0)
bop_4935 = relay.equal(call_4880.astype('bool'), var_4881.astype('bool')) # shape=(52, 480)
bop_4938 = relay.equal(call_4883.astype('bool'), var_4881.astype('bool')) # shape=(52, 480)
func_1471_call = mod.get_global_var('func_1471')
func_1474_call = mutated_mod.get_global_var('func_1474')
var_4940 = relay.var("var_4940", dtype = "float64", shape = (9,))#candidate|4940|(9,)|var|float64
call_4939 = relay.TupleGetItem(func_1471_call(relay.reshape(var_4940.astype('float64'), [3, 1, 3])), 0)
call_4941 = relay.TupleGetItem(func_1474_call(relay.reshape(var_4940.astype('float64'), [3, 1, 3])), 0)
output = relay.Tuple([call_4863,const_4882,call_4886,call_4933,bop_4935,call_4939,var_4940,])
output2 = relay.Tuple([call_4864,const_4882,call_4887,call_4934,bop_4938,call_4941,var_4940,])
func_4944 = relay.Function([var_4881,var_4940,], output)
mod['func_4944'] = func_4944
mod = relay.transform.InferType()(mod)
mutated_mod['func_4944'] = func_4944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mutated_mod.get_global_var('func_4944')
var_4946 = relay.var("var_4946", dtype = "float64", shape = (480,))#candidate|4946|(480,)|var|float64
var_4947 = relay.var("var_4947", dtype = "float64", shape = (9,))#candidate|4947|(9,)|var|float64
call_4945 = func_4944_call(var_4946,var_4947,)
output = call_4945
func_4948 = relay.Function([var_4946,var_4947,], output)
mutated_mod['func_4948'] = func_4948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3498_call = mod.get_global_var('func_3498')
func_3500_call = mutated_mod.get_global_var('func_3500')
call_4973 = relay.TupleGetItem(func_3498_call(), 2)
call_4974 = relay.TupleGetItem(func_3500_call(), 2)
output = call_4973
output2 = call_4974
func_4981 = relay.Function([], output)
mod['func_4981'] = func_4981
mod = relay.transform.InferType()(mod)
output = func_4981()
func_4982 = relay.Function([], output)
mutated_mod['func_4982'] = func_4982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4334_call = mod.get_global_var('func_4334')
func_4335_call = mutated_mod.get_global_var('func_4335')
call_4983 = relay.TupleGetItem(func_4334_call(), 2)
call_4984 = relay.TupleGetItem(func_4335_call(), 2)
output = call_4983
output2 = call_4984
func_4985 = relay.Function([], output)
mod['func_4985'] = func_4985
mod = relay.transform.InferType()(mod)
output = func_4985()
func_4986 = relay.Function([], output)
mutated_mod['func_4986'] = func_4986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_5001 = relay.TupleGetItem(func_3054_call(), 0)
call_5002 = relay.TupleGetItem(func_3056_call(), 0)
uop_5016 = relay.asin(call_5001.astype('float64')) # shape=(4, 9, 4)
uop_5018 = relay.asin(call_5002.astype('float64')) # shape=(4, 9, 4)
uop_5024 = relay.log2(uop_5016.astype('float32')) # shape=(4, 9, 4)
uop_5026 = relay.log2(uop_5018.astype('float32')) # shape=(4, 9, 4)
uop_5028 = relay.acosh(call_5001.astype('float32')) # shape=(4, 9, 4)
uop_5030 = relay.acosh(call_5002.astype('float32')) # shape=(4, 9, 4)
bop_5046 = relay.logical_or(uop_5028.astype('bool'), relay.reshape(uop_5016.astype('bool'), relay.shape_of(uop_5028))) # shape=(4, 9, 4)
bop_5049 = relay.logical_or(uop_5030.astype('bool'), relay.reshape(uop_5018.astype('bool'), relay.shape_of(uop_5030))) # shape=(4, 9, 4)
func_4809_call = mod.get_global_var('func_4809')
func_4813_call = mutated_mod.get_global_var('func_4813')
const_5055 = relay.const([6,1,5,5,5,10,2,7,1,10,7,-5,6,10,-4,10,-1,2,-4,2,2,9,5,10,3,10,-9,1,-10,-7,8,-4,8,-6,2,4,-7,10,8,-2,9,-2,-6,-6,-4,1,-10,-2,3,-1,-4,-9,-7,-7,-8,-7,-8,7,-10,2,-6,7,-10,-4,-4,9,1,3,8,4,-6,5], dtype = "uint32")#candidate|5055|(72,)|const|uint32
var_5056 = relay.var("var_5056", dtype = "float64", shape = (56,))#candidate|5056|(56,)|var|float64
const_5057 = relay.const([4.982888,9.171528,7.986440,-4.233736,-8.489077,2.681408,-1.128261,9.165224,-6.656287,-7.408313,-0.178230,7.641520,6.557498,5.794583,-0.688514,-7.834384,5.453346,-2.679236,-9.643612,0.683894,-0.032442,-4.054549,0.583828,9.652457,1.949210,8.254141,3.770790,-5.039675,-9.569903,7.025673,-2.995607,-0.446989,4.592030,-6.730261,4.821689,9.138295,-2.765662,-5.799815,2.336216,3.946505,1.173435,6.828545,-8.629859,-7.550688,5.941682,2.983562,2.719393,1.015488,-6.875302,-6.096468,1.211597,8.211893,9.841350,-5.612923,8.723745,-0.597246,-7.671634,5.790889,6.219372,9.606952,6.955007,8.975509,-5.429088,-9.288891,-6.208038,-9.951870,-9.988122,-0.223478,-6.983967,-9.330821,-8.003971,-0.203524,-2.471369,5.484598,8.666595,-9.775196,1.254079,0.005994,3.345375,-7.243556,1.027453,2.083530,-0.305137,6.269595,-1.243158,-0.289470,-0.381120,-1.200327,-0.718250,1.048183,-3.422485,0.541227,3.438741,-5.863874,-2.003187,-2.591100,7.786242,7.445273,5.457065,-5.518442,-4.371596,6.031627,-8.155131,-2.444950,7.091086,-4.262629,2.817613,-5.816067,1.463306,8.210272,6.353459,6.208967,-0.539111,5.455611,4.568064,4.972849,-2.380423,7.020810,-1.862609,-2.484931,1.643416,-2.749699,-8.414369,3.588503,8.419245,8.544131,-0.211784,4.331740,5.935895,8.353124,6.870455,-9.455721,6.969545,-6.930582,2.450901,8.163427,1.262969,-7.928188,-1.912883,2.182467,-8.782703,0.319978,3.514506,2.691593,2.908365,-4.220818,-2.621948,-9.401083,-5.384445,5.473832,5.160101,-3.197132,-1.731944,-3.065079,-5.939767,-5.443708,-8.103366,0.253204,5.781452,-9.424608,7.766208,9.273386,-3.087412,7.420525,-7.493123,-2.123822,-8.018554,-0.891424,1.777228,5.550846,6.191621,4.048687,0.039995,6.886646,0.667306,0.745161,-5.931099,-3.166836,3.752732,3.658757,4.715287,9.306442,-3.868321,-3.412370,2.972442,1.134543,-7.758751,-3.034604,-8.085409,-6.791718,-3.352927,-6.445311,-7.212493,6.118926,8.365623,0.173910,-5.312458,-2.048861,-7.106875,4.522861,-8.507555,-7.448032,1.065799,1.889720,3.873549,2.175879,3.860613,-0.358948,5.798270,4.888256,2.488964,8.809993,-1.661868,-1.332738,-3.807877,-0.346301,0.635927,5.090966,4.984155,-0.120703,-6.674375,-5.197788,2.397083,4.828326,-8.944372,5.631213,9.962995,-8.911335,-4.710347,7.942920,-8.708477,-0.086277,-6.064922,-9.717767,-8.529605,-7.125830,-8.946789,-1.369038,-0.178399,-4.338469,1.664098,-9.664500,-7.353505,-9.354429,9.224089,-0.283140,6.560585,8.209194,-9.334680,1.015603,-7.391096,-5.594929,1.943259,8.056066,-3.186911,-6.436540,1.963568,9.091902,7.529546,0.182131,3.804645,-0.561906,-3.360151,-7.821815,5.680475,7.717113,-0.846843,0.464339,-6.321373,4.583702,-7.934385,-7.114880,-0.627261,-0.032426,4.363117,-9.675812,0.199888,9.179178,3.799983,-0.375111,-7.001019,-9.399445,9.403369,-2.614748,-7.344230,6.826351,8.361417,3.928955,6.864370,-0.755685,0.429026,4.567772,8.289616,-5.248835,-2.390872,-8.748097,-1.739832,7.506084,-4.114225,1.701696,0.409899,2.880953,5.075022,-0.985765,-2.123598,6.881932,-5.066764,-3.314889,-7.585897,-9.558443,-2.703456,2.527123,8.852419,-4.506297,-1.569473,8.606342,-1.704612,-5.075919,5.301416,-9.799644,4.615178,3.933778,-4.133658,-2.466934,-8.044583,-4.721610,5.319084,5.044518,-5.092358,-7.208002,7.499717,8.559827,-6.529106,4.727063,-4.951719,-1.290230,-5.475951,6.062435,3.788009,5.447381,-6.576218,-0.452314,9.312762,7.326374,-5.962252,-6.722987,0.120524,6.303537,4.534640,7.987258,5.211381,-8.334222,8.105587,-2.386001,6.952076,-9.536051,2.879491,8.195484,-2.894414,7.931183,-1.223231,-5.005695,0.966775,6.925823,5.286221,-9.517587,-5.752072,-2.665408,7.860378,8.850051,-4.608985,-3.186037,-8.496178,-3.303288,-7.687686,7.388394,9.297976,-4.759957,-0.835681,3.238122,-7.601222,-9.291373,-7.935156,-3.354327,1.266638,-7.965092,9.997639,-4.200725,-2.643770,-8.543370,-5.614671,4.933869,-1.682996,-6.288077,-0.521989,-4.863625,5.417625,7.910970,8.354918,5.265292,9.943679,-2.884437,9.360165,8.461796,3.833590,-1.004834,2.957613,7.008505,-4.486065,-9.849763,0.434966,4.990149,1.889567,7.824013,4.128971,-4.078914,-7.828266,9.161416,7.167411,-6.000035,1.632653,-3.015389,-5.208774,-4.735620,3.171904,9.895429,2.791058,7.839958,-4.815043,0.114128,-3.009946,-1.800506,-4.683757,-3.872482,-0.386066,-1.694084,8.161711,8.363184,-6.687621,-2.494205,-0.557896,-3.717116,8.101022,8.935698,-7.848860,5.821829,-0.232561,-1.241980,0.176186,-1.304014,7.694804,2.536853,0.792540,-9.526986,-0.196158,0.095082,7.259345,-0.361195,7.689002,-5.202141,-1.223620,-6.178055,9.830630,4.820448,7.848347,2.776787,-0.264876,-7.437574,1.732330,2.943355,5.547157,-4.356574,0.140588,8.904823,-3.984641,-3.640340,9.501080,8.245159,3.420080,-6.845543,-7.272945,8.661590,-9.736177,-8.496653,1.482921,-7.087447,-5.512153,2.161358,1.039010,9.917232,-2.839230,7.358500,-9.026101,-4.157555,9.149413,4.518407,-4.626469,4.215778,-9.363821,-2.382344,8.105186,-8.637613,-7.589818,3.163981,7.967370,5.030877,7.632921,9.003820,-5.114314,8.041702,-6.693742,4.645013,-2.030574,-6.467395,1.733882,-0.050778,4.333706,-0.133047,-8.934069,7.849603,-1.887715,8.131951,9.037777,-9.727177,-6.543180,-2.702127,-1.848951,-6.703622,-4.437230,1.801565,5.066408,-8.514310,-2.355652,-3.678494,3.130189,-1.724241,7.564566,2.960676,5.068229,-1.645165,7.630802,-1.947002,-0.240529,-3.421374,6.308321,-6.842805,6.401435,2.422211,-6.918948,-9.648535,-0.652613,9.394402,-6.206533,-9.797890,-7.941304,-9.527017,6.146455,2.603946,6.477859,-7.413319,5.011780,8.174317,-4.691764,9.118290,5.073563,-1.162774,-3.013702,2.577779,-5.708483,-4.290618,-9.017144,-5.723079,-6.989289,1.314569,-0.797589,-6.675753,5.757535,-8.186210,3.876140,-4.111073,-2.111998,-5.395863,-5.934425,1.063540,0.118962,-5.916648,-7.543991,-2.740293,-9.936194,-6.126739,3.223376,4.824702,1.401407,-5.721915,6.655908,7.732015,4.903049,-1.501939,9.860670,-7.219694,-6.786170,-6.742423,-3.122038,1.649484,-3.745905,3.966576,-0.702287,-4.791157,-5.604825,-1.950130,0.564798,1.589307,1.242770,8.860975,-9.817472,-4.733407,-9.473452,9.292943,4.526787,2.841183,4.251797,4.288068,6.872763,6.874183,4.069728,6.306462,2.901915,0.449890,1.128652,9.013077,3.517358,-0.151322,-0.588556,-7.916489,-2.117360,1.758791,-1.811544,2.516807,4.832198,4.843131,2.134086,1.053787,-3.208288,1.429555,7.863650,5.165499,-6.938721,-6.384698,2.603448,-1.326740,6.170271,2.845773,9.224470,4.011243,1.353848,9.779830,-2.388665,9.530652,3.628115,-3.996707,9.851632,6.611065,4.226461,-6.854067,-7.576293,-9.076028,8.057850,7.698758,-9.668779,6.197383,-8.562245,-5.272177,9.846597,2.399913,6.684231,-3.164765,2.091359,-5.619264,5.776176,6.875104,-0.245815,8.955667,-8.945972,-5.762209,-6.947389,-6.560631,-7.614874,0.354106,5.906402,-7.252321,-9.134091,4.100270,9.618895,-2.620421,4.837949,-5.111864,9.767300,7.852700,2.080424,-4.939401,3.080529,-3.864050,-6.461837,1.278036,-5.897245,-5.566664,-9.349919,-9.662905,2.419863,3.868700,-6.659125,-3.146766,4.930378,4.719206,1.468008,-9.092828,2.026163,-3.182261,-3.291039,4.740165,-8.364871,3.234013,9.648433,-8.062961,-2.057507,0.537710,2.595934,-5.132389,8.498260,1.881716,-7.226376,2.650491,-9.871892,5.271640,-9.226255,0.833774,-8.752253,9.058765,-7.811775,-0.084575,3.471887,-7.630321,-9.597936,-9.303977,-1.616176,-0.781384,1.562675,-2.831723,-1.232311,9.789741,-3.971009,8.025745,0.427438,4.516852,-0.873397,3.610744,0.991926,-7.322129,-2.124792,-1.671233,9.217519,9.350877,-2.827522,-2.529565,9.483812,7.576712,3.866746,-4.450684,-2.341666,-1.844466,-4.509104,-1.975970,3.809442,5.195297,4.205977,9.674700,-8.119758,-0.371190,-2.186168,4.389244,-9.432480,-2.398764,1.908360,-1.607867,-1.023160,-4.344150,-9.220690,-8.921291,-1.179831,-2.831818,1.666770,-4.063314,-3.131180,3.910883,7.221004,2.003024,1.572557,2.760458,-7.850445,-3.207111,4.815649,7.712568,-7.820719,3.555294,7.858017,-9.946550,1.679266,8.517746,1.249986,0.993159,4.650899,-8.519398,-9.850430,-5.006332,-8.339156,0.830755,2.806710,1.692667,-0.034952,-6.761745,-6.205587,7.294128,1.004265,-9.871568,8.051327,-5.536346,-5.933915,0.386467,-6.840782,9.918071,3.564440,-2.478999,-4.516174,-6.055616,0.422726,-4.031117,8.641049,1.202141,-6.766458,-0.716044,6.979307,6.769482,2.306740,-4.352659,-1.962291,-9.608037,-8.461190,-5.485188,9.080151,-3.301320,-8.233576,-9.573756,-6.155316,-3.747175,3.858440,-0.675213,0.124588,-0.473003,-3.049335,2.900281,8.619188,-5.977872,-2.690768,-8.317666,5.419105,-7.980791,6.291096,-4.023346,3.397484,0.902291,1.159171,0.982131,5.492089,0.967097,5.746031,-9.394649,6.844695,-7.697792,5.451803,0.083502,6.332763,-9.295438,-9.358079,-0.976098,-5.349774,9.810976,5.197240,-8.867508,-5.811526,1.411285,-8.866902,-7.020735,-0.744248,-5.164087,7.732551,4.569668,1.352159,-4.425701,-0.537802,3.597345,-5.505410,-4.577200,-7.552518,-9.266941,-8.912244,-3.918245,9.216083,-4.175553,6.006212,9.004286,-2.866976,-1.308951,5.292556,-4.338791,3.628369,-8.105212,-6.444527,-3.316231,6.472964,5.842676,-8.553677,2.966306,6.447321,0.395176,-5.472883,7.263684,0.994997,-4.990476,-9.580966,-8.861563,1.897382,0.488672,1.232103,-1.516684,-5.736072,4.429318,7.881666,-9.795929,-5.069911,9.421029,3.444716,-0.098045,-5.525303,7.580826,7.131880,8.717131,-5.535527,-4.300580,-5.421666,-5.487675,-2.203313,5.027857,-4.298731,-1.465566,7.884896,3.851520,3.736448,-6.263021,3.485665,-6.000145,8.868540,6.147990,3.653369,-1.689108,-5.116178,-0.882479,-4.514525,-0.001044,-3.449024,4.339320,-0.572017,-0.210110,-6.343714,-6.289513,-5.578403,-9.194407,-9.033183,2.400338,0.538678,7.647055,-9.821957,7.008538,9.014632,-3.152879,-8.066130,7.047789,-5.621400,-0.600060,-0.297333,-8.278506,-1.856454,0.487237,-5.427769,-9.745536,-0.519850,7.838660,5.042547,9.280548,-3.441805,-7.491082,5.020108,-7.398990,2.153630,7.701228,9.943107,-3.484064,-1.388337,-4.756305], dtype = "float64")#candidate|5057|(1008,)|const|float64
call_5054 = relay.TupleGetItem(func_4809_call(relay.reshape(const_5055.astype('uint32'), [36, 2]), relay.reshape(var_5056.astype('float64'), [56,]), relay.reshape(const_5057.astype('float64'), [1008,]), ), 6)
call_5058 = relay.TupleGetItem(func_4813_call(relay.reshape(const_5055.astype('uint32'), [36, 2]), relay.reshape(var_5056.astype('float64'), [56,]), relay.reshape(const_5057.astype('float64'), [1008,]), ), 6)
var_5085 = relay.var("var_5085", dtype = "bool", shape = (4, 9, 4))#candidate|5085|(4, 9, 4)|var|bool
bop_5086 = relay.logical_and(bop_5046.astype('bool'), relay.reshape(var_5085.astype('bool'), relay.shape_of(bop_5046))) # shape=(4, 9, 4)
bop_5089 = relay.logical_and(bop_5049.astype('bool'), relay.reshape(var_5085.astype('bool'), relay.shape_of(bop_5049))) # shape=(4, 9, 4)
func_286_call = mod.get_global_var('func_286')
func_289_call = mutated_mod.get_global_var('func_289')
const_5124 = relay.const([[4,9,-5,9],[-9,-1,-1,3],[-5,-4,-1,-4],[-3,-7,-6,-3],[-1,4,-9,-3],[1,1,6,-9],[8,-3,-4,-5],[7,6,-1,8],[1,-9,7,9],[7,-2,-5,-6],[-6,9,6,-7],[-6,-10,1,-10],[-10,-3,2,-6]], dtype = "int8")#candidate|5124|(13, 4)|const|int8
const_5125 = relay.const([3,-1,-10,-8,7,4,8,-8,-8,4,1,8,10,-9,10,6,-9,-10,4,-9,1,6,3,6,2,1,6,1,-1,4,-10,5,-7,-10,5,3,-1,5,-2,-5,-5,-10,-8,-4,-9,4,-9,3,-6,-9,10,-6,1,-5,6,-7,-8,9,8,-9,-4,-10,-2,10,-4,8,1,5,9,2,3,6,6,9,1,-3,-3,-9,-4,6,8,-3,9,-8,9,-6,1,4,-9,3,5,6,-7,-6,2,10,-5,8,3,4,7,-4,2,-8,-3,9,-7,7,-10,6,4,-3,-10,-2,-6,-5,-6,3,-9,7,4,-1,2,6,2,5,9,-4,8,2,-2,-7,7,6,-1,-7,10,-5,-7,-4,4,-2,9,1,-2,9,3,-4,-8,-6,5,5,3,-8,10,7,5,-6,-7,-10,-4,-5,-7,-9,1,-3,1,2,7,-6,5,-2,5,3,-6,1,1,9,6,2,-3,4,4,-10,9,7,-9,2,-8,-6,-7,-6,-4,8,-3,7,-9,2,8,-2,7,-1,-10,-10,10,-3,-2,7,6,-4,-8,-6,4,10,-1,-1,4,5,-6,2,-1,-3,8,9,-7,-4,5,-4,10,-3,4,1,7,-4,1,9,3,-2,-1,-6,3,-5,-9,-9,1,-4,-7,5,-9,7,4,-9,-7,1,-4,-8,4,5,-10,-4,6,6,-3,7,1,-1,7,4,-2,4,10,3,3,9,4,-4,3,4,-2,-7,3,8,9,6,6,9,1,-2,-4,8,6,8,4,5,-3,1,-10,9,-2,5,6,6,8,10,10,-9,1,-8,-9,3,3,9,-2,7,3,1,-5,-7,-6,-6,6,-7,-3,2,-5,-6,-8,6,-5,-3,4,-8,-3,-4,3,-7,7,5,-8,4,3,-2,6,10,-10,10,7,2,4,-8,8,-3,1,5,-9,1,-8,5,-2,5,-8,-5,-2,6], dtype = "int8")#candidate|5125|(364,)|const|int8
call_5123 = func_286_call(relay.reshape(const_5124.astype('int8'), [1, 13, 4]), relay.reshape(const_5125.astype('int8'), [7, 13, 4]), )
call_5126 = func_286_call(relay.reshape(const_5124.astype('int8'), [1, 13, 4]), relay.reshape(const_5125.astype('int8'), [7, 13, 4]), )
func_588_call = mod.get_global_var('func_588')
func_590_call = mutated_mod.get_global_var('func_590')
call_5129 = func_588_call(relay.reshape(const_5055.astype('float64'), [3, 4, 6]))
call_5130 = func_588_call(relay.reshape(const_5055.astype('float64'), [3, 4, 6]))
output = relay.Tuple([uop_5024,call_5054,const_5055,var_5056,const_5057,bop_5086,call_5123,const_5124,const_5125,call_5129,])
output2 = relay.Tuple([uop_5026,call_5058,const_5055,var_5056,const_5057,bop_5089,call_5126,const_5124,const_5125,call_5130,])
func_5142 = relay.Function([var_5056,var_5085,], output)
mod['func_5142'] = func_5142
mod = relay.transform.InferType()(mod)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mutated_mod.get_global_var('func_5142')
var_5144 = relay.var("var_5144", dtype = "float64", shape = (56,))#candidate|5144|(56,)|var|float64
var_5145 = relay.var("var_5145", dtype = "bool", shape = (4, 9, 4))#candidate|5145|(4, 9, 4)|var|bool
call_5143 = func_5142_call(var_5144,var_5145,)
output = call_5143
func_5146 = relay.Function([var_5144,var_5145,], output)
mutated_mod['func_5146'] = func_5146
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5201 = relay.const([[[-2,-9,-3,4,-1,6,-8],[1,9,-1,7,7,-1,-4],[2,2,-8,10,-10,-5,7],[-1,4,-1,7,6,-8,-1],[1,7,-7,-5,3,-8,10],[-4,-5,-1,8,4,4,7],[-4,-10,-6,-6,7,9,7],[-3,-1,3,1,-6,6,4],[9,-3,-10,6,1,2,-5]],[[9,10,-10,-10,-8,-7,-10],[4,4,-5,-6,1,2,6],[-9,5,-5,-2,8,10,-3],[-10,-1,-8,10,3,8,-10],[5,6,-8,-3,-8,10,7],[3,8,-4,10,5,3,5],[-1,6,2,-9,3,-5,-7],[8,-6,5,-4,4,-8,5],[-6,-7,-7,2,-4,-10,-3]],[[9,-2,5,8,4,8,8],[-7,-9,5,-10,8,-2,1],[1,-6,5,7,-6,9,-1],[-7,2,1,-7,-9,9,-8],[-2,-2,4,-3,-8,8,-7],[5,3,6,6,-1,6,-1],[-9,-5,-8,2,-6,1,-7],[-7,8,-2,-6,8,-10,6],[-9,10,-5,-9,-3,-5,7]],[[-3,6,9,-4,5,-1,-3],[-4,-6,7,10,-2,-3,1],[-4,-5,-3,6,3,2,1],[2,6,-4,-8,-8,-3,9],[-3,-5,9,3,8,-5,-9],[-10,-2,-6,-8,-1,-1,5],[7,-9,6,-9,-1,8,-2],[-2,-10,3,5,-10,-10,-9],[10,-3,10,1,-6,-1,-5]],[[-8,-2,9,-3,5,4,10],[8,4,-3,-5,9,-9,6],[-1,8,7,-10,-1,-1,-10],[4,6,9,-10,-7,5,10],[-10,-3,9,-2,1,-3,4],[1,-6,6,-6,3,9,-10],[-5,-10,1,10,5,6,-4],[8,-4,6,5,3,-8,7],[6,4,2,-10,7,2,-2]],[[8,9,5,-9,3,-2,-5],[-5,-10,2,6,-7,-4,6],[6,4,3,-4,-5,9,4],[6,-4,2,4,7,7,-6],[-8,-8,-10,2,6,-4,-8],[-10,-4,4,1,-1,9,7],[-2,8,5,6,-8,9,-4],[-6,-5,7,-5,7,-6,-3],[6,10,2,8,3,1,4]],[[-5,2,-3,8,-6,10,10],[-2,10,2,-8,9,2,-1],[3,-2,6,-8,2,-10,8],[2,5,-3,-3,-8,-9,-8],[10,3,-7,-2,2,-3,-7],[-1,-4,-4,-8,-5,-2,-4],[1,-4,-1,6,6,2,-1],[10,-9,-4,-5,-1,5,-6],[10,-10,1,-4,2,4,-8]],[[-6,1,-7,-9,3,-9,-7],[-10,-3,-4,-1,-8,-9,3],[-10,10,-1,2,-3,-9,2],[-9,-4,3,-7,-10,-4,-3],[3,-8,6,9,-1,7,9],[-10,-4,4,-10,-5,6,5],[-8,-2,-4,-3,10,-10,-2],[-7,-3,-6,8,6,8,4],[9,-3,8,5,8,4,2]],[[9,3,7,-2,4,4,5],[1,6,-9,-6,-6,10,-1],[-2,-2,-6,-4,2,7,-6],[-6,-3,-8,-9,-7,5,6],[-7,-4,9,-9,-1,-10,-9],[-9,-8,-5,3,9,4,7],[-1,-7,-9,7,-6,-2,9],[2,-3,-4,7,3,5,-2],[-7,-8,-1,7,7,7,-8]],[[4,3,7,8,-6,-1,7],[-10,-6,-9,7,1,-7,8],[4,4,-5,-6,2,2,-9],[8,10,6,-7,2,4,-8],[6,6,1,-9,-7,-7,-9],[9,-3,-5,-5,10,-5,-5],[-10,1,-8,5,6,-6,-7],[2,-3,5,7,2,10,-5],[-6,7,5,9,4,5,-6]],[[-1,-7,10,-3,7,-4,6],[-10,-2,-3,-2,4,4,-5],[-7,3,7,-2,-9,1,-7],[-6,2,3,-4,-10,7,-8],[-3,-1,8,-10,-3,2,-9],[9,-2,8,10,-6,8,-3],[-4,-5,5,-9,1,6,6],[-3,2,1,-6,8,10,2],[-1,-4,-5,-4,-6,-3,-4]],[[10,-8,-5,4,6,4,-8],[7,-6,-5,3,-1,10,10],[6,-2,-4,-9,3,-4,5],[-1,6,-3,6,3,7,6],[3,1,-10,6,-5,6,10],[5,9,6,-3,8,-6,1],[-4,3,3,-9,-8,10,1],[1,5,5,-3,-1,-4,8],[-9,5,3,3,1,10,6]]], dtype = "uint16")#candidate|5201|(12, 9, 7)|const|uint16
var_5202 = relay.var("var_5202", dtype = "uint16", shape = (12, 9, 7))#candidate|5202|(12, 9, 7)|var|uint16
bop_5203 = relay.right_shift(const_5201.astype('uint16'), relay.reshape(var_5202.astype('uint16'), relay.shape_of(const_5201))) # shape=(12, 9, 7)
func_3165_call = mod.get_global_var('func_3165')
func_3169_call = mutated_mod.get_global_var('func_3169')
var_5210 = relay.var("var_5210", dtype = "int8", shape = (364,))#candidate|5210|(364,)|var|int8
var_5211 = relay.var("var_5211", dtype = "float64", shape = (1008,))#candidate|5211|(1008,)|var|float64
call_5209 = relay.TupleGetItem(func_3165_call(relay.reshape(var_5210.astype('int8'), [364,]), relay.reshape(var_5211.astype('float64'), [1008,]), ), 3)
call_5212 = relay.TupleGetItem(func_3169_call(relay.reshape(var_5210.astype('int8'), [364,]), relay.reshape(var_5211.astype('float64'), [1008,]), ), 3)
uop_5230 = relay.cos(call_5209.astype('float32')) # shape=(7, 13, 4)
uop_5232 = relay.cos(call_5212.astype('float32')) # shape=(7, 13, 4)
output = relay.Tuple([bop_5203,var_5210,var_5211,uop_5230,])
output2 = relay.Tuple([bop_5203,var_5210,var_5211,uop_5232,])
func_5240 = relay.Function([var_5202,var_5210,var_5211,], output)
mod['func_5240'] = func_5240
mod = relay.transform.InferType()(mod)
var_5241 = relay.var("var_5241", dtype = "uint16", shape = (12, 9, 7))#candidate|5241|(12, 9, 7)|var|uint16
var_5242 = relay.var("var_5242", dtype = "int8", shape = (364,))#candidate|5242|(364,)|var|int8
var_5243 = relay.var("var_5243", dtype = "float64", shape = (1008,))#candidate|5243|(1008,)|var|float64
output = func_5240(var_5241,var_5242,var_5243,)
func_5244 = relay.Function([var_5241,var_5242,var_5243,], output)
mutated_mod['func_5244'] = func_5244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4368_call = mod.get_global_var('func_4368')
func_4369_call = mutated_mod.get_global_var('func_4369')
call_5272 = relay.TupleGetItem(func_4368_call(), 1)
call_5273 = relay.TupleGetItem(func_4369_call(), 1)
var_5274 = relay.var("var_5274", dtype = "bool", shape = (14, 8, 9))#candidate|5274|(14, 8, 9)|var|bool
bop_5275 = relay.less(call_5272.astype('bool'), relay.reshape(var_5274.astype('bool'), relay.shape_of(call_5272))) # shape=(14, 8, 9)
bop_5278 = relay.less(call_5273.astype('bool'), relay.reshape(var_5274.astype('bool'), relay.shape_of(call_5273))) # shape=(14, 8, 9)
bop_5283 = relay.equal(bop_5275.astype('bool'), relay.reshape(call_5272.astype('bool'), relay.shape_of(bop_5275))) # shape=(14, 8, 9)
bop_5286 = relay.equal(bop_5278.astype('bool'), relay.reshape(call_5273.astype('bool'), relay.shape_of(bop_5278))) # shape=(14, 8, 9)
func_3165_call = mod.get_global_var('func_3165')
func_3169_call = mutated_mod.get_global_var('func_3169')
const_5296 = relay.const([8,-4,-3,-2,2,1,-8,1,9,4,2,9,-10,10,-9,1,-4,2,4,10,3,-3,-8,4,2,9,6,6,1,3,-9,-7,-9,-8,-4,-9,10,9,6,7,5,-10,4,-7,3,4,2,3,-10,-6,-3,-3,-9,-5,8,-3,-8,4,-8,-6,8,-3,1,4,10,8,-7,8,-3,-2,-5,-6,7,-6,10,8,-3,-8,8,6,4,-1,4,10,10,-2,7,7,-9,-9,-6,5,-7,-4,7,-2,5,-5,-1,-8,-6,-6,-8,5,8,6,-4,-5,-6,-5,-8,-5,8,-2,2,10,10,-1,10,8,3,-4,-5,-5,8,3,8,-1,-5,-7,-2,-6,-4,-3,-4,-2,4,-1,7,-9,9,2,-9,6,-7,2,-2,4,-7,10,-9,-8,10,-4,-7,-3,7,4,10,2,2,7,-2,2,7,3,-4,-10,10,3,-9,6,2,3,-1,-7,7,-9,-4,-2,-2,-6,-4,3,10,-3,-2,6,10,-6,-4,-6,-9,-4,5,-4,1,-3,6,-10,2,9,4,-8,7,-5,-8,-4,5,10,3,7,5,10,-6,10,-4,3,-6,-2,6,-4,10,3,-7,5,8,6,2,5,-6,7,3,10,3,-2,1,5,-5,7,1,4,4,3,5,3,2,-3,-3,4,-7,7,4,9,2,1,-8,5,6,7,5,-5,3,3,1,4,-6,5,-4,-9,-2,2,-7,1,4,-7,9,7,1,8,7,-1,-4,3,3,-6,4,7,6,7,8,-10,-7,9,-7,2,-10,1,9,1,7,7,7,7,1,-3,9,6,-2,-5,-3,-5,8,-6,-9,9,6,9,7,7,9,7,-5,5,-9,8,-7,-2,8,-4,-4,-7,6,-6,-2,-4,-6,3,5,1,-10,3,-2,4,2,-9,10,1,-1,-10,-1,-8,-5,-10,-8,-2,8,8,2,-1,2,5,5,-8], dtype = "int8")#candidate|5296|(364,)|const|int8
call_5295 = relay.TupleGetItem(func_3165_call(relay.reshape(const_5296.astype('int8'), [364,]), relay.reshape(var_5274.astype('float64'), [1008,]), ), 3)
call_5297 = relay.TupleGetItem(func_3169_call(relay.reshape(const_5296.astype('int8'), [364,]), relay.reshape(var_5274.astype('float64'), [1008,]), ), 3)
output = relay.Tuple([bop_5283,call_5295,const_5296,])
output2 = relay.Tuple([bop_5286,call_5297,const_5296,])
func_5306 = relay.Function([var_5274,], output)
mod['func_5306'] = func_5306
mod = relay.transform.InferType()(mod)
var_5307 = relay.var("var_5307", dtype = "bool", shape = (14, 8, 9))#candidate|5307|(14, 8, 9)|var|bool
output = func_5306(var_5307)
func_5308 = relay.Function([var_5307], output)
mutated_mod['func_5308'] = func_5308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_5344 = relay.TupleGetItem(func_3054_call(), 0)
call_5345 = relay.TupleGetItem(func_3056_call(), 0)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_5351 = relay.TupleGetItem(func_3054_call(), 0)
call_5352 = relay.TupleGetItem(func_3056_call(), 0)
output = relay.Tuple([call_5344,call_5351,])
output2 = relay.Tuple([call_5345,call_5352,])
func_5356 = relay.Function([], output)
mod['func_5356'] = func_5356
mod = relay.transform.InferType()(mod)
output = func_5356()
func_5357 = relay.Function([], output)
mutated_mod['func_5357'] = func_5357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4368_call = mod.get_global_var('func_4368')
func_4369_call = mutated_mod.get_global_var('func_4369')
call_5373 = relay.TupleGetItem(func_4368_call(), 2)
call_5374 = relay.TupleGetItem(func_4369_call(), 2)
uop_5388 = relay.atan(call_5373.astype('float32')) # shape=(1008,)
uop_5390 = relay.atan(call_5374.astype('float32')) # shape=(1008,)
func_1516_call = mod.get_global_var('func_1516')
func_1520_call = mutated_mod.get_global_var('func_1520')
const_5427 = relay.const(-10, dtype = "int16")#candidate|5427|()|const|int16
var_5428 = relay.var("var_5428", dtype = "int16", shape = (1, 832))#candidate|5428|(1, 832)|var|int16
call_5426 = func_1516_call(relay.reshape(const_5427.astype('int16'), []), relay.reshape(var_5428.astype('int16'), [13, 16, 4]), )
call_5429 = func_1516_call(relay.reshape(const_5427.astype('int16'), []), relay.reshape(var_5428.astype('int16'), [13, 16, 4]), )
output = relay.Tuple([uop_5388,call_5426,const_5427,var_5428,])
output2 = relay.Tuple([uop_5390,call_5429,const_5427,var_5428,])
func_5433 = relay.Function([var_5428,], output)
mod['func_5433'] = func_5433
mod = relay.transform.InferType()(mod)
var_5434 = relay.var("var_5434", dtype = "int16", shape = (1, 832))#candidate|5434|(1, 832)|var|int16
output = func_5433(var_5434)
func_5435 = relay.Function([var_5434], output)
mutated_mod['func_5435'] = func_5435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5468 = relay.var("var_5468", dtype = "uint16", shape = (15, 15, 6))#candidate|5468|(15, 15, 6)|var|uint16
var_5469 = relay.var("var_5469", dtype = "uint16", shape = (15, 15, 6))#candidate|5469|(15, 15, 6)|var|uint16
bop_5470 = relay.bitwise_and(var_5468.astype('uint16'), relay.reshape(var_5469.astype('uint16'), relay.shape_of(var_5468))) # shape=(15, 15, 6)
output = relay.Tuple([bop_5470,])
output2 = relay.Tuple([bop_5470,])
func_5475 = relay.Function([var_5468,var_5469,], output)
mod['func_5475'] = func_5475
mod = relay.transform.InferType()(mod)
mutated_mod['func_5475'] = func_5475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5475_call = mutated_mod.get_global_var('func_5475')
var_5477 = relay.var("var_5477", dtype = "uint16", shape = (15, 15, 6))#candidate|5477|(15, 15, 6)|var|uint16
var_5478 = relay.var("var_5478", dtype = "uint16", shape = (15, 15, 6))#candidate|5478|(15, 15, 6)|var|uint16
call_5476 = func_5475_call(var_5477,var_5478,)
output = call_5476
func_5479 = relay.Function([var_5477,var_5478,], output)
mutated_mod['func_5479'] = func_5479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5504 = relay.var("var_5504", dtype = "uint32", shape = (7, 13, 14))#candidate|5504|(7, 13, 14)|var|uint32
const_5505 = relay.const([[[-5,8,-9,5,8,-1,-5,9,2,1,2,-1,-2,-7],[-4,-4,3,3,10,7,3,7,3,-6,-7,3,3,-6],[-4,3,-1,7,8,-7,9,-6,-4,-10,1,1,3,7],[7,4,-8,9,3,-5,-7,-1,6,9,-2,-6,7,9],[9,-7,-1,10,-7,1,7,2,10,-2,-3,-6,-2,-8],[-10,-8,-4,7,-7,7,6,-5,-7,8,-10,-4,1,-8],[4,1,-2,7,5,3,1,-7,9,-1,-7,-2,1,-2],[7,7,-7,-7,9,-6,8,-8,9,-9,5,3,-10,1],[-2,-4,-4,-10,1,-3,-3,-7,-10,1,8,8,-1,5],[7,-1,-8,9,9,-4,-9,3,8,5,2,-5,-8,-4],[-5,8,-5,-2,7,-9,-1,9,2,3,1,-5,-4,5],[-5,-8,-10,-4,-7,-1,10,-1,3,-2,-1,2,-1,-6],[9,-6,2,5,-10,8,7,-2,-9,7,-2,-6,4,-6]],[[7,9,-5,10,-8,-3,4,-6,3,8,-2,6,6,8],[2,-4,-9,-4,-9,-4,-9,-7,-8,-4,10,5,-8,5],[-2,3,-8,4,-3,2,3,1,4,-7,-1,-5,4,3],[8,-8,-5,-6,-10,-10,9,5,1,5,3,8,-4,5],[3,-10,9,3,10,7,-10,-3,1,10,-5,7,-7,-4],[-10,-9,-10,-5,-8,1,10,6,-6,-6,8,-1,10,-2],[5,-8,-4,9,5,-3,4,10,3,-3,-6,6,-6,-6],[-6,-3,-2,-7,7,2,-4,6,-8,-4,-2,-10,8,2],[-2,10,5,-1,6,7,8,9,4,-9,-4,3,-10,4],[-8,1,5,10,-9,-10,2,10,7,-9,-7,-5,-1,-6],[-1,8,9,3,-5,7,-5,8,-4,-7,-10,-4,-7,5],[-7,-1,-3,2,-10,-7,8,-6,-1,-10,3,-10,6,-9],[2,2,-6,10,2,1,-4,7,-4,-5,-9,2,4,4]],[[-5,-4,-6,-6,9,-2,-7,5,3,5,6,4,7,-7],[7,1,-6,-7,-1,-7,-1,3,3,-1,-9,6,8,-3],[6,-4,-3,5,9,-2,-6,-1,7,7,2,-8,6,-8],[-6,9,-3,4,-7,-5,-10,-9,5,5,3,-4,10,8],[8,10,9,5,-2,7,-10,8,-9,-8,6,-6,5,-4],[2,9,-9,5,6,-9,-10,8,9,10,2,2,-1,-6],[8,1,3,-1,9,-8,5,3,-4,-3,-6,8,-1,3],[9,-10,1,-9,1,5,-6,-5,2,4,9,-8,-10,-5],[9,7,-9,-6,-8,3,5,-9,4,-9,2,-4,-1,-7],[1,4,-10,-9,-9,9,10,-9,3,7,2,6,9,6],[-2,-3,-5,-4,-7,5,-10,3,6,6,-2,7,-8,9],[-2,-7,9,1,6,-8,8,1,8,7,-6,3,5,1],[4,-1,6,-5,10,9,-9,1,2,5,-5,-4,-7,-10]],[[-1,-6,-4,5,6,5,6,-6,-2,-4,10,-4,4,-8],[9,3,-3,-6,9,7,1,-3,-5,-4,5,-1,9,-10],[3,4,-9,3,8,-9,1,2,7,1,-6,8,2,6],[5,4,7,-2,-7,-8,-4,-3,2,-1,3,-10,-6,10],[-8,-1,4,10,5,8,7,-6,5,-8,-5,8,10,6],[-8,5,-3,-8,-4,-10,2,-1,-6,-10,8,-9,-8,2],[-7,-3,5,1,-8,6,-1,1,4,2,10,-10,3,-3],[6,-6,-4,-8,-9,-10,1,-9,4,-6,3,-10,-2,-3],[-2,4,4,1,-1,8,9,8,-3,10,6,-6,4,4],[-6,8,5,-6,-4,-6,5,6,1,-1,1,-4,7,-8],[5,6,-10,9,-10,4,-3,8,6,1,-8,-4,6,-7],[-7,6,8,-5,-8,-6,1,-2,-2,-2,6,8,8,4],[9,10,8,-9,-8,9,-1,6,-6,-8,-1,-7,-6,5]],[[-8,-9,-2,-4,-3,-9,9,10,-2,4,7,6,-2,6],[-9,-1,10,3,-9,2,-2,-4,10,1,-10,-10,8,-4],[-9,8,1,-7,1,5,-9,-1,-10,9,9,-10,6,-6],[5,5,-2,6,-4,8,-2,-3,-8,9,-9,7,-10,-7],[-8,1,4,-9,-10,-2,5,10,-1,-10,9,-8,-10,6],[-4,8,-7,5,-6,-8,9,-3,-1,4,7,-4,5,-7],[-9,-7,-6,-4,8,4,6,-2,-3,-1,-7,-8,-9,1],[6,-1,10,7,4,1,-3,-6,7,5,-1,6,-1,2],[-9,-6,-4,-8,-6,2,-8,-2,8,-1,-5,6,-5,6],[7,8,5,-10,2,3,5,-9,-8,6,-8,2,-5,1],[-9,6,7,3,-1,-10,1,2,-1,-8,2,7,-3,3],[-7,10,3,3,3,3,7,6,9,3,-8,10,-5,10],[-6,-7,-9,-9,4,-2,6,-8,9,10,-3,7,-3,3]],[[-4,9,-6,-2,-3,7,3,-4,-5,1,-10,1,5,7],[4,10,-3,-7,3,-5,-8,-6,4,-9,6,-2,-4,-2],[-2,9,-8,-4,-5,-3,-8,-9,-3,-9,-8,-5,-10,-3],[-1,-3,3,-8,10,4,-3,-8,-7,1,-3,-6,-9,-7],[7,3,-4,-8,-8,-8,8,-8,10,4,-4,-7,5,9],[-2,3,6,-5,2,-5,-2,3,-6,-3,-6,4,-3,-6],[-2,-4,-1,6,-3,-8,-6,9,8,10,-10,2,1,5],[-7,-2,-4,-5,-3,4,4,5,7,-8,6,2,-10,-4],[-10,-4,-8,6,-5,8,-4,8,-6,-5,-8,1,2,2],[8,2,-2,3,-5,3,1,-1,-8,2,3,9,2,-5],[-3,-6,-10,-9,5,6,2,-3,3,-10,3,6,-9,5],[-5,8,7,1,2,-4,3,-8,-9,9,-5,4,-9,5],[-5,3,-3,2,-3,-9,-2,-2,3,1,3,8,7,7]],[[4,7,-2,-1,-9,7,5,-7,-1,3,8,-7,-2,-8],[-9,-8,-9,-2,3,-6,-4,4,-10,-6,9,4,3,-10],[-8,-5,-5,8,8,-5,-3,3,5,-7,-10,4,2,9],[-9,10,7,-4,10,6,-4,-7,3,4,-9,3,-4,1],[6,1,8,5,-9,-10,3,-5,9,5,3,-10,-10,4],[-1,-8,-4,4,-10,-7,-8,-8,-3,9,6,-3,-3,5],[-7,5,-3,-7,-2,1,10,3,-5,8,-3,-9,10,9],[-5,5,3,-2,-5,-5,9,-10,-2,-4,3,4,-10,-4],[4,-4,-6,-1,-10,-5,-1,3,6,7,-8,4,5,-7],[2,-7,-5,-5,9,1,-10,-6,7,-1,3,-1,-10,-2],[7,-2,-1,5,-10,-6,-8,-10,-3,7,4,-5,5,9],[2,-2,3,6,-3,-7,-3,1,9,-8,-6,2,-5,10],[-2,-5,2,-3,-3,8,-2,-8,5,-4,1,-7,-7,8]]], dtype = "uint32")#candidate|5505|(7, 13, 14)|const|uint32
bop_5506 = relay.minimum(var_5504.astype('uint32'), relay.reshape(const_5505.astype('uint32'), relay.shape_of(var_5504))) # shape=(7, 13, 14)
bop_5522 = relay.left_shift(var_5504.astype('int64'), relay.reshape(const_5505.astype('int64'), relay.shape_of(var_5504))) # shape=(7, 13, 14)
func_588_call = mod.get_global_var('func_588')
func_590_call = mutated_mod.get_global_var('func_590')
const_5541 = relay.const([-8.075440,-0.017921,6.467871,6.012620,-7.739461,2.570887,7.010632,6.819585,8.267403,1.596263,-3.906236,3.483305,6.947631,-5.311668,-0.050627,0.268593,-7.524931,4.549546,7.633003,-7.933338,4.105361,-3.910995,-0.676490,-6.440001,-1.121602,-0.777674,-9.038793,9.791995,9.792250,3.684589,-6.467317,-0.070033,-8.181366,-0.495904,-8.324985,9.444255,6.800017,-0.210708,4.626578,4.083153,-0.490365,-6.663712,8.439713,-2.887341,-7.192473,-8.521989,2.405430,0.495531,-1.189786,9.520195,-9.900267,-3.484353,-7.383242,0.061198,-2.745540,8.121324,3.812565,0.633472,4.825358,2.245682,8.997963,9.716504,-2.966608,-0.088633,-9.020461,8.999698,7.712617,-7.139836,-2.302812,6.107735,-3.623474,3.646616], dtype = "float64")#candidate|5541|(72,)|const|float64
call_5540 = func_588_call(relay.reshape(const_5541.astype('float64'), [3, 4, 6]))
call_5542 = func_588_call(relay.reshape(const_5541.astype('float64'), [3, 4, 6]))
uop_5544 = relay.cos(bop_5522.astype('float32')) # shape=(7, 13, 14)
func_1321_call = mod.get_global_var('func_1321')
func_1324_call = mutated_mod.get_global_var('func_1324')
var_5562 = relay.var("var_5562", dtype = "uint8", shape = ())#candidate|5562|()|var|uint8
var_5563 = relay.var("var_5563", dtype = "int8", shape = (52,))#candidate|5563|(52,)|var|int8
call_5561 = relay.TupleGetItem(func_1321_call(relay.reshape(var_5562.astype('uint8'), []), relay.reshape(var_5563.astype('int8'), [52,]), ), 3)
call_5564 = relay.TupleGetItem(func_1324_call(relay.reshape(var_5562.astype('uint8'), []), relay.reshape(var_5563.astype('int8'), [52,]), ), 3)
bop_5603 = relay.add(uop_5544.astype('uint8'), var_5562.astype('uint8')) # shape=(7, 13, 14)
output = relay.Tuple([bop_5506,call_5540,const_5541,call_5561,var_5563,bop_5603,])
output2 = relay.Tuple([bop_5506,call_5542,const_5541,call_5564,var_5563,bop_5603,])
func_5609 = relay.Function([var_5504,var_5562,var_5563,], output)
mod['func_5609'] = func_5609
mod = relay.transform.InferType()(mod)
var_5610 = relay.var("var_5610", dtype = "uint32", shape = (7, 13, 14))#candidate|5610|(7, 13, 14)|var|uint32
var_5611 = relay.var("var_5611", dtype = "uint8", shape = ())#candidate|5611|()|var|uint8
var_5612 = relay.var("var_5612", dtype = "int8", shape = (52,))#candidate|5612|(52,)|var|int8
output = func_5609(var_5610,var_5611,var_5612,)
func_5613 = relay.Function([var_5610,var_5611,var_5612,], output)
mutated_mod['func_5613'] = func_5613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4717_call = mod.get_global_var('func_4717')
func_4718_call = mutated_mod.get_global_var('func_4718')
call_5621 = relay.TupleGetItem(func_4717_call(), 1)
call_5622 = relay.TupleGetItem(func_4718_call(), 1)
uop_5636 = relay.cosh(call_5621.astype('float32')) # shape=(52,)
uop_5638 = relay.cosh(call_5622.astype('float32')) # shape=(52,)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_5661 = relay.TupleGetItem(func_3054_call(), 0)
call_5662 = relay.TupleGetItem(func_3056_call(), 0)
bop_5683 = relay.multiply(call_5621.astype('int64'), relay.reshape(uop_5636.astype('int64'), relay.shape_of(call_5621))) # shape=(52,)
bop_5686 = relay.multiply(call_5622.astype('int64'), relay.reshape(uop_5638.astype('int64'), relay.shape_of(call_5622))) # shape=(52,)
output = relay.Tuple([call_5661,bop_5683,])
output2 = relay.Tuple([call_5662,bop_5686,])
func_5688 = relay.Function([], output)
mod['func_5688'] = func_5688
mod = relay.transform.InferType()(mod)
mutated_mod['func_5688'] = func_5688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5688_call = mutated_mod.get_global_var('func_5688')
call_5689 = func_5688_call()
output = call_5689
func_5690 = relay.Function([], output)
mutated_mod['func_5690'] = func_5690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4690_call = mod.get_global_var('func_4690')
func_4692_call = mutated_mod.get_global_var('func_4692')
call_5752 = relay.TupleGetItem(func_4690_call(), 1)
call_5753 = relay.TupleGetItem(func_4692_call(), 1)
var_5772 = relay.var("var_5772", dtype = "bool", shape = (15, 12, 11))#candidate|5772|(15, 12, 11)|var|bool
bop_5773 = relay.multiply(call_5752.astype('uint32'), relay.reshape(var_5772.astype('uint32'), relay.shape_of(call_5752))) # shape=(15, 12, 11)
bop_5776 = relay.multiply(call_5753.astype('uint32'), relay.reshape(var_5772.astype('uint32'), relay.shape_of(call_5753))) # shape=(15, 12, 11)
output = bop_5773
output2 = bop_5776
func_5782 = relay.Function([var_5772,], output)
mod['func_5782'] = func_5782
mod = relay.transform.InferType()(mod)
var_5783 = relay.var("var_5783", dtype = "bool", shape = (15, 12, 11))#candidate|5783|(15, 12, 11)|var|bool
output = func_5782(var_5783)
func_5784 = relay.Function([var_5783], output)
mutated_mod['func_5784'] = func_5784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5688_call = mod.get_global_var('func_5688')
func_5690_call = mutated_mod.get_global_var('func_5690')
call_5807 = relay.TupleGetItem(func_5688_call(), 1)
call_5808 = relay.TupleGetItem(func_5690_call(), 1)
var_5814 = relay.var("var_5814", dtype = "int64", shape = (52,))#candidate|5814|(52,)|var|int64
bop_5815 = relay.right_shift(call_5807.astype('int64'), relay.reshape(var_5814.astype('int64'), relay.shape_of(call_5807))) # shape=(52,)
bop_5818 = relay.right_shift(call_5808.astype('int64'), relay.reshape(var_5814.astype('int64'), relay.shape_of(call_5808))) # shape=(52,)
output = relay.Tuple([bop_5815,])
output2 = relay.Tuple([bop_5818,])
func_5846 = relay.Function([var_5814,], output)
mod['func_5846'] = func_5846
mod = relay.transform.InferType()(mod)
var_5847 = relay.var("var_5847", dtype = "int64", shape = (52,))#candidate|5847|(52,)|var|int64
output = func_5846(var_5847)
func_5848 = relay.Function([var_5847], output)
mutated_mod['func_5848'] = func_5848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4368_call = mod.get_global_var('func_4368')
func_4369_call = mutated_mod.get_global_var('func_4369')
call_5980 = relay.TupleGetItem(func_4368_call(), 2)
call_5981 = relay.TupleGetItem(func_4369_call(), 2)
func_3002_call = mod.get_global_var('func_3002')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_5985 = func_3002_call()
call_5986 = func_3002_call()
func_3945_call = mod.get_global_var('func_3945')
func_3948_call = mutated_mod.get_global_var('func_3948')
var_6008 = relay.var("var_6008", dtype = "float64", shape = (480,))#candidate|6008|(480,)|var|float64
call_6007 = relay.TupleGetItem(func_3945_call(relay.reshape(var_6008.astype('float64'), [480,])), 2)
call_6009 = relay.TupleGetItem(func_3948_call(relay.reshape(var_6008.astype('float64'), [480,])), 2)
output = relay.Tuple([call_5980,call_5985,call_6007,var_6008,])
output2 = relay.Tuple([call_5981,call_5986,call_6009,var_6008,])
func_6031 = relay.Function([var_6008,], output)
mod['func_6031'] = func_6031
mod = relay.transform.InferType()(mod)
mutated_mod['func_6031'] = func_6031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6032 = relay.var("var_6032", dtype = "float64", shape = (480,))#candidate|6032|(480,)|var|float64
func_6031_call = mutated_mod.get_global_var('func_6031')
call_6033 = func_6031_call(var_6032)
output = call_6033
func_6034 = relay.Function([var_6032], output)
mutated_mod['func_6034'] = func_6034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4985_call = mod.get_global_var('func_4985')
func_4986_call = mutated_mod.get_global_var('func_4986')
call_6067 = func_4985_call()
call_6068 = func_4985_call()
output = relay.Tuple([call_6067,])
output2 = relay.Tuple([call_6068,])
func_6074 = relay.Function([], output)
mod['func_6074'] = func_6074
mod = relay.transform.InferType()(mod)
mutated_mod['func_6074'] = func_6074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6074_call = mutated_mod.get_global_var('func_6074')
call_6075 = func_6074_call()
output = call_6075
func_6076 = relay.Function([], output)
mutated_mod['func_6076'] = func_6076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_6093 = func_3819_call()
call_6094 = func_3819_call()
output = call_6093
output2 = call_6094
func_6101 = relay.Function([], output)
mod['func_6101'] = func_6101
mod = relay.transform.InferType()(mod)
mutated_mod['func_6101'] = func_6101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6101_call = mutated_mod.get_global_var('func_6101')
call_6102 = func_6101_call()
output = call_6102
func_6103 = relay.Function([], output)
mutated_mod['func_6103'] = func_6103
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6104 = relay.const([[[-4.445931,-2.369456,7.887067,6.676564,3.684302,-3.070265,-9.358241,-7.638627,-7.852527,9.419208,-6.595591,0.826693,4.596189,2.344540],[-5.687652,0.697080,-6.202569,9.307284,8.491714,-9.401227,6.232713,6.303780,-0.727144,9.442156,-9.630131,-9.670717,-9.981562,9.465862],[-1.999181,1.852892,6.809075,5.284686,-7.546862,8.606466,7.276248,-3.736317,-0.440216,9.534506,4.191003,9.528741,3.636015,5.853588],[5.528811,-5.120832,0.766839,-3.432087,-5.325803,-7.005575,-3.231314,-6.654607,3.152383,-7.199804,-9.715723,-5.908686,-8.313844,5.346348],[4.852542,0.401195,2.221743,9.550822,-6.639352,5.476342,8.029636,7.701718,-1.555520,-8.096145,4.556184,0.349116,-5.496930,9.818312]],[[-6.266321,-2.524960,4.099874,-4.399735,0.652120,5.229060,-7.349361,-4.186888,-5.873359,2.614410,-0.334052,-6.236949,2.859286,9.981347],[3.521353,-0.399047,-5.290398,-9.582345,7.068418,-3.936414,-4.819597,-0.152405,6.205258,-1.601602,-8.877870,-2.374733,5.418774,-9.724294],[-7.773229,-1.416844,2.739021,9.561379,-5.143159,6.613165,5.925944,-6.700398,-3.059843,-9.375968,-5.621416,9.743370,-8.875060,9.507978],[4.838946,-9.656268,7.154061,5.480203,-1.990050,-5.335747,-6.287804,-0.411846,-5.312801,6.740545,3.084533,-3.089136,9.683085,-1.598459],[8.752581,6.599365,-9.318374,-2.568973,5.624338,-6.633384,3.308503,-3.983370,-7.708703,3.414456,4.340906,5.972833,-9.723094,-1.289119]],[[-7.649216,2.935951,-0.403378,-5.756618,6.914208,7.655006,-6.037121,-9.316902,-4.671113,-5.398277,6.808997,3.114797,-2.992133,7.522258],[-3.588627,-4.746085,-1.490729,-9.398789,5.762461,9.795811,-1.758132,8.779434,-5.176026,-5.819692,-2.750328,-4.553598,-2.820641,-3.960244],[-7.539235,1.938282,-2.433553,4.639286,5.946847,7.253284,-9.856979,5.620045,9.322343,-5.427925,-0.177131,2.690465,1.798867,-1.634401],[9.129965,-9.391856,-5.436850,4.819573,-8.416765,-8.296506,-6.610905,-3.083023,-8.556699,1.307393,-2.969202,-9.661411,-9.162789,9.940336],[1.911590,0.811962,-0.220626,-5.361102,4.537457,5.647051,5.165842,-0.903302,-7.699941,-6.974591,-9.381985,-7.449487,5.877061,-8.545115]],[[-5.822069,5.443208,1.006194,2.242403,5.585820,4.107992,9.206618,-9.953795,-0.247698,-8.246450,3.645973,5.175021,2.643924,-4.843534],[-0.639883,-5.500832,-9.984703,-4.213150,9.899849,1.870489,-2.108053,6.021011,-6.896489,-5.262731,-8.137839,7.148290,5.800351,-3.507530],[-0.065275,-5.895890,8.750415,-9.218055,-4.401762,4.716068,-3.517366,-2.539753,0.663370,-9.793212,1.796022,-5.240140,9.048681,8.938102],[0.194382,4.755127,-6.747768,-7.019979,1.933482,5.322314,-9.412698,8.636710,-2.715144,6.024067,3.531122,7.256432,-2.392216,1.575499],[2.486689,-3.705808,-0.373241,-3.173851,5.356822,-0.837951,2.254704,9.187915,-7.947805,-9.304125,-5.783153,8.643374,2.365545,1.800016]],[[-1.706759,-9.427648,8.252740,-0.140283,-2.391467,7.510757,-6.093455,-0.444307,5.074573,8.699471,-4.448944,-9.747606,0.227102,5.887228],[-8.367842,-6.472915,7.882206,-7.799834,4.955322,-5.403463,-4.263321,-0.843353,0.003100,-7.895650,-6.404259,-7.141833,-2.845597,7.567039],[-8.181650,-2.258935,2.965485,-9.627827,2.801126,-3.618142,8.772276,2.096265,-7.562421,-6.141981,-3.538264,-1.917672,-9.252653,-0.850433],[-9.229575,-6.587225,-8.975956,6.051360,6.025432,-6.585451,9.274610,-0.213756,1.172321,-7.879933,3.172305,0.544041,7.537137,-1.180222],[-5.364258,-2.833547,-5.217278,-7.109666,-5.900519,9.955412,1.167269,-7.725753,-9.429089,0.282338,-6.487002,5.605375,0.446455,-9.824425]],[[-7.159880,-0.647036,5.452328,2.338860,-4.877626,-2.452202,-9.221704,-7.121049,2.309965,-4.793606,5.173861,5.985639,1.459402,6.916746],[7.710935,6.140713,-0.509965,-0.518335,3.215893,-0.538904,3.271699,-3.473254,-7.079011,7.103802,7.880523,8.022011,-9.999766,8.127782],[0.379071,-4.708543,-6.166676,-6.161059,5.831403,-4.000102,7.019774,-7.495258,1.486973,-2.055687,-7.912959,9.779678,5.258674,-3.768503],[6.290614,4.343148,5.454720,2.784728,9.771703,-7.473727,-9.886090,1.751060,0.175252,9.312997,-8.927689,-1.248771,6.012312,7.025412],[-8.678122,-8.196742,8.341041,-5.261199,5.803837,-0.818520,-0.895311,-5.920392,7.609346,-7.872609,6.660082,7.706636,8.664459,-2.048135]],[[8.415057,5.044294,-1.759694,2.490738,3.185138,-6.894958,5.244258,0.463245,4.324398,-3.607057,-0.228693,-7.496830,-9.077017,3.965181],[2.388994,7.078405,9.874871,1.536887,-1.359471,7.493503,-2.388484,3.360047,-6.609447,4.736481,-6.190028,-2.358608,-6.634161,-0.108270],[-1.171644,-6.563741,-8.028390,-1.535217,-7.628825,2.045147,-9.760689,-4.242775,-3.742784,-3.904613,0.730617,-6.332224,-1.086889,-1.383149],[3.686650,5.724587,-3.237092,-3.608654,3.645419,4.767611,-1.649515,1.317111,5.335110,5.270390,9.546795,0.891709,-0.753883,-2.710446],[-5.926366,0.713584,5.521560,-8.141106,8.188181,-3.478477,4.541258,-7.418106,-4.637985,5.687510,-7.306174,7.496960,-5.105361,-4.066561]],[[7.016109,5.280594,7.816744,3.844314,-3.075689,-8.498890,-7.957103,-7.676700,-2.167636,3.517375,-7.425532,3.743031,-6.811718,-3.744765],[1.178786,0.886819,9.724310,-6.290736,8.217216,-7.237793,7.631810,8.803471,0.685608,-2.180733,8.761163,6.353442,-6.810204,-1.926950],[9.103796,9.655718,0.697740,3.067536,-5.668272,8.343957,-3.829819,3.054844,-5.445710,9.977512,-0.174158,-3.649433,-3.246267,-3.665454],[-0.912275,1.306195,9.459139,-4.898464,0.460098,-4.655672,8.051531,8.178977,8.124947,-4.905318,-2.343812,5.395521,2.902251,-6.393716],[1.805488,-6.508216,6.369632,-5.779574,-3.663379,0.500456,-0.655514,8.883935,5.459775,1.034010,0.172430,-5.137314,-8.278661,1.877546]],[[8.588193,8.954346,-8.280915,-3.704545,3.052818,-4.456322,0.096545,5.889869,2.959669,-6.058962,4.841350,3.959127,7.948660,-9.337303],[-1.174991,3.102360,7.897510,-3.169696,-8.496749,6.235010,7.828719,8.537651,8.040667,1.358974,-5.290516,2.854058,7.774929,-8.257681],[1.826504,-0.565362,-2.476866,7.223413,-3.040621,8.716263,4.378661,-9.280821,5.412452,9.220673,-4.752914,2.753217,-1.023766,3.740121],[-4.144665,-1.127813,-1.182102,9.963575,-1.723324,4.969400,-9.957489,1.226165,7.520523,6.445563,-4.075876,-1.526374,2.124555,5.966977],[-1.430243,6.999282,-5.594637,-7.214917,7.905502,-5.390860,5.590078,-7.956711,-6.800652,2.692591,-4.334347,-2.802077,5.571125,4.490715]],[[6.182692,6.230200,0.570218,-0.990161,-4.525491,8.229412,-9.850782,-7.147689,4.067385,2.730784,-2.349623,6.902578,8.482880,3.622302],[-3.449908,9.534321,7.269451,-3.233337,-2.687190,8.944064,7.007134,-8.561188,-3.249259,0.173138,6.793469,1.944850,4.036311,-7.592887],[8.878508,-8.102340,0.833267,7.625739,-1.982359,0.247300,-7.605152,0.047714,2.889413,8.134879,-6.512794,1.851404,4.145655,-5.323878],[-3.461362,-8.474332,-2.793505,8.190132,-7.482724,5.755322,-8.729655,3.998038,0.923011,6.684292,-9.646999,-9.984766,7.060837,4.795775],[-4.899019,-3.350704,-4.179297,-8.404286,0.052374,-4.519867,-4.977581,-7.156957,1.145610,0.623052,-7.716105,4.019453,8.684409,-3.404353]],[[-5.256277,-4.049907,6.297202,6.194690,0.298800,-7.349945,7.558480,-4.745748,-7.728882,5.688099,1.004526,-7.693667,3.126569,-3.158714],[1.533294,8.541427,-4.544304,1.797647,-3.326913,-1.617657,-1.601322,-7.581678,9.594997,-7.271770,3.329587,9.862844,-4.310924,3.505471],[-1.953625,7.957320,-2.482460,5.178198,-4.384130,-4.630201,2.673149,-5.140805,2.548933,8.268178,0.327973,2.148244,5.191037,0.662052],[-5.349720,2.488763,6.090189,6.423629,-5.184318,-9.120570,2.404049,6.652010,0.666336,-7.213023,2.921482,-8.214046,0.115367,5.927181],[-2.412834,3.317707,5.331572,8.182786,8.731177,-7.070350,5.383029,-4.779692,6.345604,7.519689,2.896566,-3.712926,-6.879439,0.439868]],[[-4.256374,-0.019866,-5.987547,0.374269,0.077501,-9.513038,5.620915,-9.826410,3.285753,6.236380,-2.283723,-9.906982,0.707857,-8.082773],[6.747573,7.654820,4.413904,-3.871194,3.335991,1.956649,8.238177,2.803704,4.989424,5.762816,-2.481523,9.508654,-0.311275,-7.432269],[-1.134082,5.505634,3.216347,1.420203,-2.314191,-5.446380,-8.537776,-8.834963,1.491454,-1.261451,6.734712,9.023002,7.845873,7.282633],[-2.813830,9.078666,-1.239899,-0.707915,2.464438,-9.796493,-5.676060,-8.557949,1.109566,-0.585633,-5.016666,1.812905,-0.989517,-6.435762],[4.008507,2.453081,8.950535,3.269616,8.576559,1.449109,4.494976,0.011079,-6.969729,-8.754231,-8.216120,-1.230259,-5.828175,7.340939]],[[7.345479,-4.590372,0.267759,-8.804323,-1.952475,-6.516255,-7.143212,-7.464000,-1.984900,7.184686,5.912884,-5.918240,-6.969838,4.384348],[-5.758928,8.605821,-1.174176,-5.003213,-5.183003,-0.226635,-6.635035,-9.348766,2.042142,2.291729,-6.403346,-5.882729,-2.363733,-5.217509],[-9.038300,0.821229,-0.301321,-5.273367,-0.491591,-0.664577,7.102155,1.068443,6.347845,-0.790234,3.480555,-0.845692,-1.943413,2.486508],[0.085678,5.398633,1.066953,-5.138808,-3.517970,-3.623799,-6.336995,3.602655,-6.438202,5.225005,-1.337766,-4.517009,6.982401,-2.485720],[7.864504,7.190447,2.566767,-0.634891,1.567633,-8.360823,0.762346,1.071542,0.369950,-7.759171,0.480349,7.814008,4.724164,4.230570]],[[2.702112,8.554716,-7.045677,4.421398,7.242699,-0.206655,1.226025,-4.279759,-6.648907,-6.229831,-8.314335,0.397435,-5.891790,-6.444575],[-6.910964,0.169760,6.871135,-5.143271,6.344369,5.376349,-5.705341,1.874041,-5.323725,-7.955716,3.018228,-0.848324,7.841697,-0.647649],[-1.238799,-3.333795,-7.652802,-9.953699,-4.622221,0.691858,4.321011,-2.030610,1.388160,8.668009,-4.213126,-8.161812,-9.936690,5.207555],[-6.195343,1.407016,-0.290515,4.405060,5.103288,-8.296489,-9.755401,4.778110,-1.481347,1.685637,-5.150404,2.795297,5.287477,-8.653738],[-5.139880,1.938545,3.440583,-3.151445,-8.244998,9.766668,7.012139,6.298393,3.769545,4.545834,0.481201,1.506022,0.883971,-0.122561]]], dtype = "float64")#candidate|6104|(14, 5, 14)|const|float64
uop_6105 = relay.rsqrt(const_6104.astype('float64')) # shape=(14, 5, 14)
uop_6108 = relay.asinh(uop_6105.astype('float64')) # shape=(14, 5, 14)
bop_6116 = relay.mod(uop_6108.astype('float32'), relay.reshape(uop_6105.astype('float32'), relay.shape_of(uop_6108))) # shape=(14, 5, 14)
func_3180_call = mod.get_global_var('func_3180')
func_3181_call = mutated_mod.get_global_var('func_3181')
call_6129 = func_3180_call()
call_6130 = func_3180_call()
bop_6135 = relay.logical_xor(bop_6116.astype('uint8'), relay.reshape(uop_6105.astype('uint8'), relay.shape_of(bop_6116))) # shape=(14, 5, 14)
output = relay.Tuple([call_6129,bop_6135,])
output2 = relay.Tuple([call_6130,bop_6135,])
func_6144 = relay.Function([], output)
mod['func_6144'] = func_6144
mod = relay.transform.InferType()(mod)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6144_call = mutated_mod.get_global_var('func_6144')
call_6145 = func_6144_call()
output = call_6145
func_6146 = relay.Function([], output)
mutated_mod['func_6146'] = func_6146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_6167 = func_3819_call()
call_6168 = func_3819_call()
output = call_6167
output2 = call_6168
func_6175 = relay.Function([], output)
mod['func_6175'] = func_6175
mod = relay.transform.InferType()(mod)
mutated_mod['func_6175'] = func_6175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6175_call = mutated_mod.get_global_var('func_6175')
call_6176 = func_6175_call()
output = call_6176
func_6177 = relay.Function([], output)
mutated_mod['func_6177'] = func_6177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_6218 = func_3112_call()
call_6219 = func_3112_call()
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_6220 = func_3796_call()
call_6221 = func_3796_call()
func_5240_call = mod.get_global_var('func_5240')
func_5244_call = mutated_mod.get_global_var('func_5244')
const_6247 = relay.const([5,9,-8,9,6,4,-8,-1,-5,-7,-9,9,-4,-6,-4,-5,5,-8,4,8,3,9,4,-2,-1,7,4,3,-3,-3,2,-5,1,7,-5,7,-6,1,-8,-8,-4,8,4,-3,10,5,-5,-6,-6,-4,-9,-8,9,4,2,6,-10,-1,-6,1,-2,8,7,-6,1,1,-2,7,-8,-9,-5,-4,9,-9,-2,3,-5,1,-6,-4,-10,-9,5,6,-6,-6,9,-6,-7,-3,5,1,8,-3,-3,-1,3,-7,-5,4,7,-2,9,-5,7,3,6,4,-8,-8,6,-3,-9,-9,-3,-8,2,9,10,-6,-3,-8,7,-3,-1,-7,10,7,-10,6,9,8,-3,-1,-4,-1,9,6,-1,10,-9,10,5,-1,-2,-2,10,-10,-8,8,-9,-9,-8,2,-7,3,9,5,9,-3,-4,1,7,-9,-4,9,7,4,4,-7,10,6,3,3,9,4,1,9,9,-4,-6,8,10,1,8,6,-7,-5,-6,-4,-6,-10,4,-6,-9,5,3,1,5,-9,9,1,8,10,-6,-10,-1,-1,2,-9,10,-6,-9,-8,10,-7,5,-9,-4,8,1,4,8,8,-5,-9,-3,7,6,4,3,7,9,-10,2,5,-5,7,4,-3,6,-1,-1,-9,-4,-10,-6,4,2,-10,-3,10,-4,3,-4,-9,10,-9,8,5,3,-10,4,-8,-9,1,-3,-2,-9,9,1,6,-7,2,3,9,3,-8,-3,-3,5,6,8,9,3,1,-5,7,3,9,-5,3,8,-6,10,-3,7,6,-7,3,2,-8,-2,-9,4,-1,6,10,-7,-5,8,-3,9,-2,-4,-10,8,3,3,-5,10,10,9,-10,-8,5,-4,3,-8,10,8,8,8,-6,-1,-1,-6,-7,-1,-3,-1,-5,9,-8,2,8,-8,8,6,-10,-4,10,-2,-6,5,3,10,-10,-7,5,-6,1,-9,-1,-4,4,4,7,4,-10,-3,-4,1,1,10,-9,-10,2,9,6,6,1,-5,-5,-4,-7,-8,-9,3,-10,7,-1,10,-8,-7,-2,2,3,4,8,3,-4,-6,-3,-4,-4,-10,9,10,-9,-2,10,-4,3,8,-5,-7,-3,1,-2,7,-9,-2,-9,8,9,-8,-3,-1,10,8,-4,4,7,-3,2,6,-9,10,1,5,-7,1,3,6,3,9,-10,5,8,-6,-8,-4,1,6,-3,1,1,-9,4,-10,-9,4,-3,7,-7,-4,5,5,-3,7,-1,3,10,8,7,-3,-6,6,-8,-1,-5,-3,4,-4,8,-10,-10,2,-6,6,-6,-10,5,-4,-8,-9,1,-1,9,-1,-9,-7,5,-10,10,6,2,10,1,-2,8,-2,-3,-5,10,-1,-8,-9,10,6,3,5,8,-7,-1,10,10,10,6,-8,-1,7,-7,-2,6,-6,10,6,-1,8,4,1,1,7,-5,4,-4,-5,9,-10,3,-4,1,10,-5,-4,-6,2,4,-5,-6,7,1,-3,-9,-3,-2,7,9,5,-6,10,4,9,1,9,2,7,7,-4,-4,-1,6,-10,-3,-6,6,3,9,-5,6,8,-1,-3,-7,-7,6,9,-3,-6,6,9,9,9,2,10,2,-7,-5,3,7,-6,7,-6,6,1,7,5,10,6,2,1,4,-6,6,2,9,-10,-3,7,10,3,-7,-3,-4,8,-5,-7,5,-9,-1,8,-10,6,-5,-5,2,4,8,-6,-8,-6,5,3,7,3,-4,-7,9,8,-8,-1,-2,-10,4,-3,-2,7,-2,-7,4,-6,1,1,-1,-6,-3,-9,-3,5,5,-4,-5,-4,3,8,1,6,-1,6,7,9,10,-4,5,2,5,8,-9,1,-4,-1,-2,9,-5,3,6,9,10,-8,-3,8,8,-2,-8,1,9,-7,1,4,2,6,-3,-1,-10,-9,-1,3,-5,-8,-7,5,5,6,-9,-9,-2,-6,-4,10,-7,-9,8,-10,6,-3,1,8,1,1,8,8,9,-7,-4], dtype = "uint16")#candidate|6247|(756,)|const|uint16
var_6248 = relay.var("var_6248", dtype = "int8", shape = (364,))#candidate|6248|(364,)|var|int8
const_6249 = relay.const([[-2.602850,-3.149748,1.277176,5.074215,4.945129,5.402231,-9.858619,-7.637942,2.985493,-3.817199,2.807598,1.320056,6.504669,-5.626644,0.085182,7.526108,5.898264,-6.558729,7.087025,-3.208180,-0.855095,5.882461,-0.194980,3.094166,0.550502,3.318137,-8.502124,0.679017,4.457276,-5.325766,-6.335288,0.145585,8.207484,-6.389022,5.254224,-9.889532,-9.573762,-2.567806,7.462675,3.624735,-9.838561,-9.988541,0.990444,-7.143736,1.586815,-4.510927,-8.902245,9.021412,1.609189,-3.792816,-9.620670,-9.455235,8.730185,0.074646,-0.919185,2.085681,2.412329,5.360075,0.233717,-1.406670,-6.288511,-5.116944,-1.341244,8.392731,4.490752,-3.554181,-0.086176,-6.672071,-8.106088,-7.465141,-0.637228,0.786021,3.434873,6.297386,-8.762740,7.212561,-1.524480,3.706013,-8.030564,-5.150711,2.166809,7.685847,2.676298,8.601662,-2.314583,-9.473298,8.325081,-5.686135,-8.989826,8.820287,5.078525,-8.192927,-5.380649,-2.939264,-2.279078,-2.185517,-6.994700,8.546576,1.727834,1.786065,-0.170089,8.449272,8.157060,3.195608,2.212437,-9.205325,9.752958,-7.703658,-0.979998,-1.409703,6.293855,-6.288313,5.145302,1.071550,-2.574265,-9.328522,-4.417659,-3.429454,6.451913,4.829801,-5.586321,-3.302729,-6.863084,5.775624,6.066596,1.829907,-1.438373,-9.377087,6.620287,4.713065,-1.123392,6.900987,5.471079,-2.924208,0.562210,7.789801,8.822776,8.354312,-7.029598,3.071362,8.666148,-8.917332,-4.371542,1.980366,-8.191039,-5.382172,-3.521002,9.899022,3.608496,-7.914762,4.678872,9.546901,8.697815,2.640295,3.519506,-2.225122,7.720380,8.846796,1.938420,-4.386088,5.500593,3.988484,-9.525733,9.857699,-5.170224,-6.500860,0.509395,7.891506,-2.252892,-2.532334,2.919709,-8.798697,3.184187,-3.193309,-8.464387,-0.434442,1.843926,8.294721,-3.793936,-1.476926,4.708567,-5.463614,-5.553177,4.215619,-5.066342,-0.498098,-8.358512,9.296221,-7.648891,9.557857,-7.029570,-0.246943,0.408902,7.937315,-3.866953,-4.962995,-2.027517,-4.633505,-8.021155,2.572012,3.747386,-0.984885,4.905815,8.794668,-5.940684,-5.366480,-1.784586,-1.366668,1.526164,3.243752,2.282435,8.821439,1.620400,-4.518364,9.706217,-9.393789,-1.739834,5.653682,-1.704387,6.988718,1.366954,5.493876,1.738487,3.580670,9.553222,-6.254614,-6.239227,-1.030877,-3.983017,-3.682159,0.416776,-7.363819,5.244732,5.676468,7.398361,-4.881002,-4.934497,-1.401373,-3.390868,-4.046346,2.479162,-9.452553,-5.169386,2.308157,-8.394314,6.296635,-0.208523,4.966525,9.652357,-0.133393,4.998958,8.494640,-8.390933,1.219685,9.928362,9.232001,6.137362,-2.601845,-9.795443,-3.916166,1.506146,-6.678112,3.837609,-4.173160,-7.703393,8.496326,8.533498,-4.115959,7.107299,-8.778706,9.372737,2.889697,-9.928355,5.049752,5.876348,7.018356,2.087231,-5.659868,7.284982,2.056391,5.278349,8.157863,0.280469,7.465431,-5.260476,8.811514,7.347182,-5.885193,-5.620395,-2.573188,5.461374,4.819399,-6.688065,2.128910,-5.916405,3.225065,-1.728643,-5.270965,-3.436066,-1.180147,-7.203064,6.197275,-2.647705,6.308806,0.663488,-4.297947,8.660852,6.811270,6.255823,3.880243,6.728311,-4.757750,7.416517,4.385353,-9.021426,-1.375353,5.611687,-5.561064,9.696644,-7.665736,8.765280,5.341423,-1.380398,-7.307159,-9.915211,0.194120,2.937435,8.889336,7.361284,-9.749010,-5.883128,-3.968743,-2.261841,9.398482,-3.740311,-5.185973,-6.225503,-0.724407,-9.120565,-0.027296,-7.443641,-5.844442,1.755535,-5.196602,-8.910983,-3.035432,-9.401017,-9.646628,5.583546,-8.241543,-1.053606,-6.041069,0.503641,4.713229,9.409069,-8.093656,-7.004257,8.539086,-6.479780,-1.284932,2.957354,1.279663,1.140858,-9.353853,5.330850,-1.322281,-5.617970,-7.648421,1.479809,9.795314,3.185318,-1.692047,3.711522,-9.549179,6.195328,-5.994133,0.521725,-9.311405,-6.155664,-3.567984,-5.039845,8.329304,6.887405,-6.213773,6.041729,9.306448,7.817957,-0.211977,-6.124816,-9.746965,3.999565,-4.063791,-4.366729,9.710711,9.133530,-1.202409,-7.803697,-6.204343,6.160211,-4.982614,2.503495,3.723644,7.805065,1.603210,-8.713348,-3.266439,-9.075857,4.661891,4.975846,8.820782,-8.452444,-6.481173,8.589169,-0.840052,2.698861,-9.688465,-4.349178,9.201855,4.369906,5.977914,-9.040985,-1.706464,-2.453117,4.050644,-8.743331,5.510432,-4.363461,-4.790201,-3.953869,-7.463376,6.709516,-7.997251,3.534864,-3.112843,-0.001403,-8.978157,7.363310,-5.860072,-9.450570,9.069415,-1.483211,7.889977,0.861655,9.277764,-6.765194,8.695332,-8.603818,-8.456930,-1.913684,-8.554028,-4.050090,7.416029,5.852200,-8.899515,-7.634670,5.026267,-1.543953,4.005301,-2.799316,3.973289,9.676784,-0.739323,1.909401,0.372661,2.442921,-5.104095,-8.864428,3.082767,7.150624,-7.565076,-5.038955,3.326853,-6.834889,-0.321106,7.609560,-0.152864,-2.705414,-3.968012,8.066924,8.281329,8.751211,-5.844578,-8.637194,-5.977983,1.504054,8.678760,-2.198488,-1.036357,5.786144,3.915079,3.828500,5.724062,-9.847496,1.889740,0.702159,2.958071,-2.751298,5.007234,8.237883,4.837307,-7.189167,-7.520671,8.602090,1.575766],[7.464565,3.904990,-3.874029,6.445011,-7.516168,-1.384121,3.027733,-0.184606,-6.420442,-9.827293,5.000293,-5.592036,-7.840973,-2.732458,-2.235408,2.724269,-0.576510,-0.294537,1.209398,-5.287296,-3.449336,-0.783249,-9.205493,9.606433,-1.808425,-7.375251,5.686858,3.919520,-0.484830,2.381491,1.077874,-8.815779,9.996690,8.118980,-6.056146,-2.710152,-5.349758,3.586052,-3.106600,0.193493,-2.014420,-2.772240,2.591677,-2.549364,-3.926390,-5.653534,-0.133221,3.020403,6.426255,-5.390905,-2.370945,-0.172403,6.705208,3.020853,-5.702336,-3.834702,1.614457,1.918759,-4.833405,-7.991563,3.166578,9.565863,9.257248,-1.853584,6.298982,0.275279,6.098339,-9.558147,3.547896,-2.714965,6.826316,-6.967025,-1.813686,0.519673,4.355692,4.212876,-2.471058,-5.834156,4.967029,-5.789936,-5.505097,6.291759,8.043519,-4.732627,5.569205,-6.017947,-8.271962,5.738113,-5.486085,2.581056,-4.393154,8.948385,7.664002,3.587873,-2.722643,8.418328,4.564363,-3.602532,6.478468,6.606107,-3.580340,9.401463,-1.277353,0.746725,7.219536,2.315705,5.405317,-2.731215,-8.670757,3.805244,0.567146,5.439644,6.789865,0.586565,3.843646,-6.255287,-2.812472,-6.969578,-6.384468,-3.422805,-9.654956,-6.856770,-4.413481,3.032920,-1.104373,8.281412,1.344175,-1.327080,-5.851457,6.148482,-3.412024,7.482692,0.770310,6.627606,5.690215,8.289726,3.641044,5.632633,-0.942233,6.535588,-8.251394,-4.019588,1.064413,-2.320753,-9.310948,2.476683,6.258976,-1.695657,-3.177599,7.814253,5.664823,-4.152629,-4.920666,-4.051678,-1.287966,4.323410,-0.770717,-6.346365,-3.383161,2.677988,8.967172,6.846661,-5.963351,5.059675,6.141552,-8.436066,-4.082378,-9.958432,8.835912,7.037074,-8.385226,-8.214420,0.648770,-5.007589,1.798941,-2.794203,1.944652,-1.028292,0.197666,-6.426538,-5.299794,8.095453,7.358586,3.417112,-8.030915,-6.500153,5.835226,8.989485,-8.756818,-2.912030,-9.775494,-6.510482,-8.667711,2.831292,-4.199336,-5.049952,-4.056483,6.795121,8.087514,-2.596278,-9.045969,-1.858047,3.977430,-8.233347,-8.450720,-0.314195,2.874761,-3.047879,0.294126,-4.681265,1.568776,-3.247917,-7.288852,-3.166724,-2.042649,-0.035425,1.570310,-8.732980,-5.506978,-4.426460,2.580642,5.144834,6.813902,-3.813611,2.403548,3.718298,5.303665,6.653916,5.103756,-9.656867,-8.632629,-1.739221,1.762816,5.652418,1.155792,-6.344202,-6.711809,-1.763156,7.313601,-9.841571,3.266200,-5.747913,4.759986,-0.686117,9.543440,-9.226339,2.293414,0.294486,8.317218,2.556988,1.640104,0.636415,1.156373,3.597596,-9.269552,-1.052092,0.995619,-6.943024,-4.667726,-9.003037,9.853423,2.516563,0.221793,-2.258819,5.806389,-2.476029,2.379477,-1.456008,9.675744,-6.668205,1.950453,3.028832,7.083523,5.188419,-7.876656,9.249818,-6.171931,6.376057,8.461732,-0.085599,5.125765,8.375177,-0.707347,0.823281,-2.312313,0.322644,-4.120482,-5.945356,6.960280,5.240249,9.516110,6.197135,-6.605859,-1.616053,-2.724793,-7.522280,4.385696,2.822320,-2.280404,9.743264,-0.488168,-0.531201,6.235552,-2.048056,0.835867,-1.949500,-6.282239,-4.267619,-2.902457,-0.423664,-5.143503,-1.385124,8.929108,5.601677,7.771966,-2.213152,-7.095836,-6.593606,3.590257,-7.377944,4.643851,-3.843738,-5.171505,-0.327951,2.742150,-9.970945,8.293716,9.026871,-1.962127,-9.381106,7.099135,7.652545,-7.851113,1.618015,-1.576127,-1.772961,-1.946631,3.798358,5.367442,-9.200696,-4.385782,-9.592476,1.232529,-1.301590,5.190746,1.348857,5.299907,-1.412841,9.270523,-1.072481,9.401498,8.819494,1.967968,-0.199075,-6.922139,6.338524,5.323912,-8.295142,3.869882,-0.341962,-6.712040,9.795232,-9.809891,3.946293,9.424868,3.624983,-3.642000,-0.166011,9.083820,-1.341308,9.095356,0.430724,-6.839965,-7.520037,-1.719963,-1.057917,-5.268787,5.693642,3.085800,-2.433784,-8.966761,8.884428,-6.847087,-4.220428,-8.071940,2.994402,-7.372805,4.823786,1.237832,-8.760566,-6.906547,-0.814418,-0.959494,-8.376080,-5.754675,-6.923854,-3.569739,1.872983,9.602769,7.716108,-2.627223,-7.273987,1.322022,2.912425,4.397721,-4.003983,-2.428834,-1.399403,-5.393179,-2.521353,-5.180794,8.765145,-7.094651,2.755199,-9.217304,-1.119463,-5.949586,5.507745,-3.732126,-2.962740,-5.393973,2.701921,9.330936,8.269389,-5.202321,-4.216094,-7.365135,-1.567155,-1.434444,2.378292,-4.387732,3.893938,-7.194714,-0.434816,-6.128652,-1.656102,7.577144,0.248075,7.968529,6.572339,1.256872,-0.276113,6.820602,-9.465190,6.326126,8.995134,3.139504,-9.940296,0.587805,-0.692216,2.602992,0.517868,2.098103,7.912596,6.624780,-7.269989,-3.758304,5.401366,5.657959,6.153246,9.404071,-5.548391,0.023077,-1.613637,4.874817,-2.222000,1.160361,-6.466352,6.085063,3.061706,-1.008890,7.199469,8.698915,-6.293093,-9.160495,1.048746,-7.068648,3.384384,-8.937987,6.131570,-9.713223,-4.727426,8.621973,-9.889107,-9.998768,9.101409,-6.228756,0.106499,6.517014,-7.469771,2.160335,7.716358,-5.265121,9.394647,-0.615715,-5.098783,4.743217,-2.775090,4.924980,6.203254,5.328979,-6.369430,9.947396,9.276598]], dtype = "float64")#candidate|6249|(2, 504)|const|float64
call_6246 = relay.TupleGetItem(func_5240_call(relay.reshape(const_6247.astype('uint16'), [12, 9, 7]), relay.reshape(var_6248.astype('int8'), [364,]), relay.reshape(const_6249.astype('float64'), [1008,]), ), 3)
call_6250 = relay.TupleGetItem(func_5244_call(relay.reshape(const_6247.astype('uint16'), [12, 9, 7]), relay.reshape(var_6248.astype('int8'), [364,]), relay.reshape(const_6249.astype('float64'), [1008,]), ), 3)
func_484_call = mod.get_global_var('func_484')
func_489_call = mutated_mod.get_global_var('func_489')
var_6261 = relay.var("var_6261", dtype = "uint8", shape = ())#candidate|6261|()|var|uint8
var_6262 = relay.var("var_6262", dtype = "float32", shape = (72,))#candidate|6262|(72,)|var|float32
const_6263 = relay.const([-2,3,-1,-10,9,-5,5,7,1,6,2,-6,2,1,10,1,7,1,-2,-10,5,9,5,5,-9,9,6,6,-7,-3,6,-2,1,-10,-4,-1,6,-1,6,-7,7,-4,1,9,8,-6,-10,-5,2,4,-8,9], dtype = "int8")#candidate|6263|(52,)|const|int8
call_6260 = relay.TupleGetItem(func_484_call(relay.reshape(var_6261.astype('uint8'), []), relay.reshape(var_6262.astype('float32'), [72,]), relay.reshape(const_6263.astype('int8'), [52,]), ), 1)
call_6264 = relay.TupleGetItem(func_489_call(relay.reshape(var_6261.astype('uint8'), []), relay.reshape(var_6262.astype('float32'), [72,]), relay.reshape(const_6263.astype('int8'), [52,]), ), 1)
func_4985_call = mod.get_global_var('func_4985')
func_4986_call = mutated_mod.get_global_var('func_4986')
call_6265 = func_4985_call()
call_6266 = func_4985_call()
output = relay.Tuple([call_6218,call_6220,call_6246,const_6247,var_6248,const_6249,call_6260,var_6261,var_6262,const_6263,call_6265,])
output2 = relay.Tuple([call_6219,call_6221,call_6250,const_6247,var_6248,const_6249,call_6264,var_6261,var_6262,const_6263,call_6266,])
func_6274 = relay.Function([var_6248,var_6261,var_6262,], output)
mod['func_6274'] = func_6274
mod = relay.transform.InferType()(mod)
mutated_mod['func_6274'] = func_6274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6274_call = mutated_mod.get_global_var('func_6274')
var_6276 = relay.var("var_6276", dtype = "int8", shape = (364,))#candidate|6276|(364,)|var|int8
var_6277 = relay.var("var_6277", dtype = "uint8", shape = ())#candidate|6277|()|var|uint8
var_6278 = relay.var("var_6278", dtype = "float32", shape = (72,))#candidate|6278|(72,)|var|float32
call_6275 = func_6274_call(var_6276,var_6277,var_6278,)
output = call_6275
func_6279 = relay.Function([var_6276,var_6277,var_6278,], output)
mutated_mod['func_6279'] = func_6279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6074_call = mod.get_global_var('func_6074')
func_6076_call = mutated_mod.get_global_var('func_6076')
call_6308 = relay.TupleGetItem(func_6074_call(), 0)
call_6309 = relay.TupleGetItem(func_6076_call(), 0)
output = call_6308
output2 = call_6309
func_6310 = relay.Function([], output)
mod['func_6310'] = func_6310
mod = relay.transform.InferType()(mod)
output = func_6310()
func_6311 = relay.Function([], output)
mutated_mod['func_6311'] = func_6311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4981_call = mod.get_global_var('func_4981')
func_4982_call = mutated_mod.get_global_var('func_4982')
call_6331 = func_4981_call()
call_6332 = func_4981_call()
output = call_6331
output2 = call_6332
func_6335 = relay.Function([], output)
mod['func_6335'] = func_6335
mod = relay.transform.InferType()(mod)
mutated_mod['func_6335'] = func_6335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6335_call = mutated_mod.get_global_var('func_6335')
call_6336 = func_6335_call()
output = call_6336
func_6337 = relay.Function([], output)
mutated_mod['func_6337'] = func_6337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6074_call = mod.get_global_var('func_6074')
func_6076_call = mutated_mod.get_global_var('func_6076')
call_6469 = relay.TupleGetItem(func_6074_call(), 0)
call_6470 = relay.TupleGetItem(func_6076_call(), 0)
output = relay.Tuple([call_6469,])
output2 = relay.Tuple([call_6470,])
func_6491 = relay.Function([], output)
mod['func_6491'] = func_6491
mod = relay.transform.InferType()(mod)
mutated_mod['func_6491'] = func_6491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6491_call = mutated_mod.get_global_var('func_6491')
call_6492 = func_6491_call()
output = call_6492
func_6493 = relay.Function([], output)
mutated_mod['func_6493'] = func_6493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4985_call = mod.get_global_var('func_4985')
func_4986_call = mutated_mod.get_global_var('func_4986')
call_6505 = func_4985_call()
call_6506 = func_4985_call()
output = call_6505
output2 = call_6506
func_6512 = relay.Function([], output)
mod['func_6512'] = func_6512
mod = relay.transform.InferType()(mod)
output = func_6512()
func_6513 = relay.Function([], output)
mutated_mod['func_6513'] = func_6513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_6524 = func_3819_call()
call_6525 = func_3819_call()
output = relay.Tuple([call_6524,])
output2 = relay.Tuple([call_6525,])
func_6551 = relay.Function([], output)
mod['func_6551'] = func_6551
mod = relay.transform.InferType()(mod)
mutated_mod['func_6551'] = func_6551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6551_call = mutated_mod.get_global_var('func_6551')
call_6552 = func_6551_call()
output = call_6552
func_6553 = relay.Function([], output)
mutated_mod['func_6553'] = func_6553
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6590 = relay.const([[[4,8,-5,7],[-3,2,5,-5],[6,-10,6,-5],[-8,-3,1,-10],[7,-3,8,6],[3,9,1,-8],[-5,-4,-10,5],[-3,3,-10,-9],[1,-3,-1,2],[6,3,7,-4],[10,3,-8,-5],[5,-5,3,5],[-5,4,-9,10],[-10,-5,-4,7],[-7,-3,-7,6],[-8,-10,-4,-6]],[[-5,-6,9,-2],[-1,-3,-5,9],[1,7,-10,-1],[-5,-9,5,-1],[-6,-7,-3,3],[5,8,-6,-2],[-1,-6,-3,9],[-7,-8,-4,5],[5,6,-2,-3],[4,-6,2,-9],[8,-4,-2,10],[1,-2,-8,8],[10,3,-2,-8],[2,9,2,7],[-3,3,-1,-5],[-3,-1,7,-6]],[[3,10,10,6],[-1,-5,4,5],[10,5,2,-8],[-8,-8,8,1],[-7,-9,-8,-8],[9,-4,-7,4],[-8,1,-8,7],[-7,2,-10,9],[3,-4,-2,-2],[10,-5,6,4],[-8,-7,5,-4],[-10,-10,-1,-10],[6,5,-8,10],[-2,5,-4,-5],[-6,-9,-6,-7],[-1,-7,-7,-5]],[[10,-2,9,-8],[-5,-3,4,1],[10,-4,3,1],[10,6,-4,10],[-3,6,-2,-4],[-9,-6,-5,-4],[-7,9,8,5],[9,-5,2,-9],[-8,8,-9,-9],[-9,1,3,7],[4,1,-8,-9],[-6,10,-2,3],[-5,-1,3,-5],[6,4,-1,-9],[-9,-6,5,-1],[-4,8,-3,-5]],[[2,-5,6,7],[7,-9,-6,-5],[9,9,-1,-4],[5,-10,-5,-7],[10,3,-5,8],[-4,2,7,5],[9,1,-6,4],[9,10,-8,10],[-2,-4,3,-8],[-10,1,6,-5],[-9,6,1,7],[-3,-3,-5,-8],[6,-1,-5,10],[-9,-3,6,-1],[-4,2,-8,-5],[-7,9,3,-8]],[[-1,-2,10,-10],[-2,6,-2,-4],[-6,2,-7,-5],[7,-8,-3,-1],[-9,-9,-4,2],[5,-7,4,1],[-8,-6,-2,-1],[4,1,-10,-10],[-5,10,9,9],[-9,-10,8,5],[-6,2,1,-7],[7,-2,10,5],[-2,-5,6,-6],[-10,10,-8,3],[7,2,-1,2],[-6,-4,-8,-10]],[[-4,3,2,-7],[-4,10,1,7],[-1,7,-5,9],[-5,8,1,-4],[-6,7,6,10],[-10,-3,-4,-2],[-7,-8,-7,-8],[1,6,5,-9],[6,-8,-1,-4],[7,-3,-8,-7],[-3,1,-3,2],[4,-7,7,7],[1,8,4,-2],[-9,-3,1,4],[-6,-4,4,4],[-4,-5,5,6]],[[9,-10,4,-3],[1,10,7,-8],[8,1,-7,-10],[-6,-2,8,8],[2,2,2,-10],[5,-6,5,5],[-5,-7,-3,-5],[-1,9,7,-1],[-7,-6,2,3],[8,-8,-5,-8],[1,-7,2,3],[-1,7,2,-6],[2,-10,-7,-10],[4,8,2,2],[-9,10,-10,-7],[5,-8,1,-6]],[[7,-5,-8,-9],[-4,-4,1,2],[2,3,2,5],[-3,4,1,9],[5,2,1,-8],[8,-1,-7,-3],[4,-2,-8,-4],[2,-7,8,-10],[-9,8,6,5],[7,5,1,-2],[-5,-3,-1,-4],[-7,-5,6,-9],[8,7,3,-7],[9,4,-1,-7],[3,9,-7,9],[5,-8,-9,-8]],[[-6,10,8,-2],[3,-9,4,-3],[7,3,7,7],[-7,-5,-4,5],[9,-1,-5,3],[1,-4,-9,-4],[-9,10,10,-9],[4,5,-8,-10],[-6,-3,-6,-10],[-10,1,-1,8],[3,-7,-7,2],[-10,-1,-9,-5],[-2,7,7,-4],[-4,-8,10,-7],[4,-8,10,-2],[6,3,4,2]],[[8,-5,-9,-10],[4,7,4,8],[10,10,-5,2],[-8,9,-5,-10],[-2,-6,6,3],[-5,-7,-6,6],[-3,8,1,-9],[7,10,9,-2],[9,-4,-3,-6],[-9,7,9,3],[-2,-8,-1,1],[-7,9,-3,8],[9,6,9,10],[4,-7,-3,-5],[-3,9,9,3],[2,-3,1,6]],[[3,1,3,-2],[-1,2,-1,-2],[-9,8,2,6],[-3,9,-2,3],[-9,1,-10,-1],[-4,-6,9,9],[8,7,-9,1],[4,6,-9,3],[-5,-1,7,-5],[-6,-6,-8,4],[2,-3,-4,3],[-8,-6,-9,-4],[5,-1,-7,5],[-9,10,-8,1],[-6,3,1,-10],[6,-6,6,1]],[[-3,-8,-1,6],[6,7,-8,5],[3,6,5,-2],[3,-8,-8,-4],[3,5,-5,-6],[-5,-6,-9,9],[-9,7,2,-5],[-9,-5,1,-2],[-1,10,6,-8],[7,3,3,10],[-6,5,6,2],[10,4,7,6],[3,-4,2,-9],[6,-4,4,10],[-9,-8,3,-2],[-5,6,4,-2]]], dtype = "uint16")#candidate|6590|(13, 16, 4)|const|uint16
var_6591 = relay.var("var_6591", dtype = "uint16", shape = (13, 16, 4))#candidate|6591|(13, 16, 4)|var|uint16
bop_6592 = relay.bitwise_or(const_6590.astype('uint16'), relay.reshape(var_6591.astype('uint16'), relay.shape_of(const_6590))) # shape=(13, 16, 4)
func_3335_call = mod.get_global_var('func_3335')
func_3339_call = mutated_mod.get_global_var('func_3339')
const_6600 = relay.const([5,2,10,5,-5,9,8,6,9,2,9,3,-4,-5,9,8,1,-7,-8,-4,-9,2,9,7,-5,9,6,8,-2,-5,-6,-7,5,-2,4,5,-9,3,7,5,9,-6,8,5,6,1,4,-10,1,3,8,-1,7,2,-3,5,-2,7,6,2,-3,-5,2,-8,-7,-8,-1,9,-2,9,9,9,7,-3,-7,7,9,-7,-7,-2,5,9,-9,-1,1,-8,6,-4,-3,-9,4,-10,-10,-4,1,-1,-5,2,3,7,-7,-6,4,9,-1,-10,4,7,-5,1,4,4,-6,-5,4,-3,-9,-6,-1,10,3,6,-10,-3,2,2,-8,7,-3,-3,4,-7,-4,-6,8,-6,8,8,3,-2,5,-4,8,-5,4,7,-3,-1,-5,-2,4,4,10,-7,-3,-1,-1,-9,6,10,-3,8,-1,-5,-7,-1,-6,3,7,2,-9,8,6,10,5,-2,9,4,-2,-8,5,9,6,-9,4,-5,-4,2,2,4,2,-6,7,-2,-1,7,4,9,-10,5,2,6,2,-6,9,-2,5,3,7,10,-8,4,-4,1,3,-7,-3,1,-8,2,8,-8,1,6,9,-6,2,8,-4,10,-3,4,-10,3,-5,-7,8,-7,-9,7,-8,4,4,8,8,-9,6,1,10,6,-9,-8,10,-4,-8,-8,5,-10,3,8,5,6,-1,-7,-9,6,-6,4,10,9,-10,-6,-9,5,4,5,1,1,8,-4,-1,-6,-7,-6,-10,-4,-2,-9,-5,-4,6,-8,-3,-2,9,8,8,-8,4,-1,9,-9,4,-1,-10,9,6,-6,8,-8,4,6,9,9,10,-10,-3,-9,4,-7,-4,-10,-4,7,-4,9,-2,2,-1,-7,-10,9,3,-2,5,-9,8,9,-6,5,5,8,1,1,4,10,-2,-9,4,-9,-3,-1,-10,4,-9,7,-3,3,6,3,-9,-4,-3,-5], dtype = "int8")#candidate|6600|(364,)|const|int8
call_6599 = relay.TupleGetItem(func_3335_call(relay.reshape(const_6600.astype('int8'), [364,]), relay.reshape(const_6600.astype('int8'), [364,]), ), 1)
call_6601 = relay.TupleGetItem(func_3339_call(relay.reshape(const_6600.astype('int8'), [364,]), relay.reshape(const_6600.astype('int8'), [364,]), ), 1)
bop_6604 = relay.less_equal(var_6591.astype('bool'), relay.reshape(bop_6592.astype('bool'), relay.shape_of(var_6591))) # shape=(13, 16, 4)
func_1516_call = mod.get_global_var('func_1516')
func_1520_call = mutated_mod.get_global_var('func_1520')
var_6612 = relay.var("var_6612", dtype = "int16", shape = ())#candidate|6612|()|var|int16
call_6611 = func_1516_call(relay.reshape(var_6612.astype('int16'), []), relay.reshape(bop_6604.astype('int16'), [13, 16, 4]), )
call_6613 = func_1516_call(relay.reshape(var_6612.astype('int16'), []), relay.reshape(bop_6604.astype('int16'), [13, 16, 4]), )
func_2152_call = mod.get_global_var('func_2152')
func_2157_call = mutated_mod.get_global_var('func_2157')
var_6617 = relay.var("var_6617", dtype = "float64", shape = (480,))#candidate|6617|(480,)|var|float64
const_6618 = relay.const([[-6],[1],[-5],[1],[1],[1],[-2],[7],[-2],[5],[-3],[-2],[4],[6],[2],[8],[-4],[6],[-7],[-3],[7],[-6],[-10],[-5],[7],[-4],[4],[9],[-10],[3],[-6],[1],[-9],[-1],[-6],[-5],[-8],[-3],[5],[-3],[-5],[-5],[3],[-7],[10],[8],[-3],[5],[-8],[8],[-1],[-6]], dtype = "int8")#candidate|6618|(52, 1)|const|int8
call_6616 = relay.TupleGetItem(func_2152_call(relay.reshape(var_6617.astype('float64'), [15, 2, 16]), relay.reshape(var_6617.astype('float64'), [15, 2, 16]), relay.reshape(const_6618.astype('int8'), [52,]), ), 3)
call_6619 = relay.TupleGetItem(func_2157_call(relay.reshape(var_6617.astype('float64'), [15, 2, 16]), relay.reshape(var_6617.astype('float64'), [15, 2, 16]), relay.reshape(const_6618.astype('int8'), [52,]), ), 3)
func_3165_call = mod.get_global_var('func_3165')
func_3169_call = mutated_mod.get_global_var('func_3169')
call_6634 = relay.TupleGetItem(func_3165_call(relay.reshape(const_6600.astype('int8'), [364,]), relay.reshape(call_6599.astype('float64'), [1008,]), ), 3)
call_6635 = relay.TupleGetItem(func_3169_call(relay.reshape(const_6600.astype('int8'), [364,]), relay.reshape(call_6599.astype('float64'), [1008,]), ), 3)
output = relay.Tuple([call_6599,const_6600,bop_6604,call_6611,var_6612,call_6616,var_6617,const_6618,call_6634,])
output2 = relay.Tuple([call_6601,const_6600,bop_6604,call_6613,var_6612,call_6619,var_6617,const_6618,call_6635,])
func_6639 = relay.Function([var_6591,var_6612,var_6617,], output)
mod['func_6639'] = func_6639
mod = relay.transform.InferType()(mod)
mutated_mod['func_6639'] = func_6639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6639_call = mutated_mod.get_global_var('func_6639')
var_6641 = relay.var("var_6641", dtype = "uint16", shape = (13, 16, 4))#candidate|6641|(13, 16, 4)|var|uint16
var_6642 = relay.var("var_6642", dtype = "int16", shape = ())#candidate|6642|()|var|int16
var_6643 = relay.var("var_6643", dtype = "float64", shape = (480,))#candidate|6643|(480,)|var|float64
call_6640 = func_6639_call(var_6641,var_6642,var_6643,)
output = call_6640
func_6644 = relay.Function([var_6641,var_6642,var_6643,], output)
mutated_mod['func_6644'] = func_6644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6310_call = mod.get_global_var('func_6310')
func_6311_call = mutated_mod.get_global_var('func_6311')
call_6696 = func_6310_call()
call_6697 = func_6310_call()
output = call_6696
output2 = call_6697
func_6704 = relay.Function([], output)
mod['func_6704'] = func_6704
mod = relay.transform.InferType()(mod)
mutated_mod['func_6704'] = func_6704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6704_call = mutated_mod.get_global_var('func_6704')
call_6705 = func_6704_call()
output = call_6705
func_6706 = relay.Function([], output)
mutated_mod['func_6706'] = func_6706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6826 = relay.var("var_6826", dtype = "float64", shape = (5, 12, 1))#candidate|6826|(5, 12, 1)|var|float64
uop_6827 = relay.log10(var_6826.astype('float64')) # shape=(5, 12, 1)
func_1321_call = mod.get_global_var('func_1321')
func_1324_call = mutated_mod.get_global_var('func_1324')
const_6831 = relay.const(3, dtype = "uint8")#candidate|6831|()|const|uint8
const_6832 = relay.const([-10,8,3,-10,-3,-8,-7,7,-8,6,2,-9,-4,-5,2,9,-3,9,-2,-2,-3,1,1,5,-6,-3,-2,-5,9,-5,2,-4,-2,10,-1,-1,1,6,2,1,-4,-8,7,5,3,-8,4,9,4,-2,-10,-1], dtype = "int8")#candidate|6832|(52,)|const|int8
call_6830 = relay.TupleGetItem(func_1321_call(relay.reshape(const_6831.astype('uint8'), []), relay.reshape(const_6832.astype('int8'), [52,]), ), 2)
call_6833 = relay.TupleGetItem(func_1324_call(relay.reshape(const_6831.astype('uint8'), []), relay.reshape(const_6832.astype('int8'), [52,]), ), 2)
func_1841_call = mod.get_global_var('func_1841')
func_1844_call = mutated_mod.get_global_var('func_1844')
const_6844 = relay.const([-4.688073,-0.518084,3.594076,-8.081982,0.067394,2.227798,-5.154708,-7.843152,-6.889318,1.338607,3.206274,5.250282,-6.791314,7.860396,-1.881611,5.551644,-0.156869,-4.014109,-3.301396,-4.880832,-9.609109,5.635892,0.080335,-4.108959,3.174795,-1.059841,-5.844526,-1.290407,9.352889,-4.841695,-6.319277,-5.232451,-8.490037,-8.412776,-2.362268,-9.930844,4.032738,8.239893,0.536407,-2.931521,-9.260766,5.621068,-7.798614,7.552673,8.903800,2.544755,4.682173,-2.766987,-4.033567,-1.655567,1.109816,-6.426521,-1.436810,8.183611,6.756680,-3.278764,7.533613,-1.413494,-2.109096,3.093752,1.864646,0.516751,-1.692496,-8.383831,-3.649305,1.540074,6.569659,-9.115988,-6.176455,6.154757,7.304638,3.096690,7.046980,6.511637,5.469907,5.847432,5.202606,4.195079,-0.035725,1.476388,-3.688626,9.391736,-6.668313,9.198703,5.601451,-4.115402,-0.710336,5.888470,8.351256,8.012910,9.257450,6.188173,6.261286,4.513836,4.359594,6.668225,6.432175,3.977937,-2.367849,-5.536795,-5.818421,7.251347,-1.217357,-4.811511,6.955014,-9.505299,1.873248,1.328267,-7.217650,-1.708635,5.139423,4.166505,-7.535204,-2.719767,8.610284,5.241119,4.729927,9.957781,9.871735,7.235309,5.726670,-5.317802,-0.570705,-0.457674,-1.479281,-8.844317,-0.486108,-3.650531,-3.367684,6.075685,-6.494875,2.678040,1.957945,1.090728,7.676602,8.973877,2.533278,7.699010,-3.018564,-2.861949,-2.925680,-5.867907,9.416412,-3.683531,-2.162499,4.878562,-4.291998,-7.631890,3.792052,-4.596680,2.352147,-7.242029,3.574474,-1.109419,1.312738,-0.016553,8.468305,-2.263520,-0.479145,-7.556850,-8.000960,9.959838,9.653475,0.340755,8.320283,5.715459,0.447492,7.840916,4.394285,-7.455930,7.159804,-6.914473,-4.030414,9.202782,4.605098,3.064365,1.594704,-0.055319,-2.670019,-4.963360,-2.094183,-6.421236,9.870538,-3.263054,5.959578,6.403456,-5.485993,0.936539,-9.323825,6.345588,6.335905,4.404102,5.965326,0.190264,2.572703,6.523987,4.008022,-6.610663,-6.638044,4.250688,7.638672,-8.984863,-1.402652,-0.681852,-1.239782,8.436077,-6.957853,-9.280370,-2.448802,-9.113335,6.101439,4.724642,3.000697,7.159242,3.636523,-7.761087,7.944266,-9.812955,-3.445563,-0.586547,-4.126552,-5.971348,1.510057,-5.297943,-7.237301,3.617046,-3.295530,-0.245248,-1.570831,1.697369,-3.233573,5.784296,-0.767449,-6.123045,-9.006360,5.526681,-5.557970,-9.015171,7.784386,4.315664,4.271538,7.967744,-5.618369,3.974097,-0.171700,-8.731802,-6.834696,-7.827658,6.581552,-8.965624,-4.317576,-6.265510,0.198527,-5.273464,2.895723,6.881672,-4.959619,-7.862342,-7.365139,-2.838623,1.723313,-6.881095,-0.790982,-7.106875,4.753767,4.161454,1.677462,-0.879323,-4.995456,9.151605,-1.419182,-8.216722,0.741908,0.366399,4.613928,-1.136524,-7.419390,-5.577835,-4.190732,-7.657639,2.182670,9.685722,6.102742,-8.485464,-6.851049,7.457319,-7.538105,7.218578,7.853917,8.253023,-6.248736,8.334610,-3.367619,8.818514,-3.902092,-6.246002,-8.917350,-7.265717,6.426740,3.849710,-4.890364,1.150032,3.131499,8.636528,5.633447,1.149224,-3.478651,2.289153,-4.957390,1.242402,-2.794083,2.836286,8.966662,1.302113,-1.054724,-3.522045,7.810383,1.009254,2.299676,5.549302,9.600399,-4.160599,9.196275,1.863810,5.834816,4.977346,-5.689052,-6.571134,-3.631511,1.015885,-4.254076,-4.362210,6.546771,-5.910220,-4.408529,2.132694,-1.199559,0.645319,6.711763,-7.460123,-8.172763,8.215083,-1.709879,-6.595772,5.531585,6.010357,-9.370381,2.558168,9.133107,-3.429828,-4.431796,0.731162,1.492398,-1.321479,4.330214,1.385032,-4.980943,1.937293,-4.213598,-3.933702,3.906860,-9.178461,3.694318,1.512595,8.563082,-7.003201,9.607441,6.816947,-3.993219,-3.674598,-2.333172,3.291256,-4.787290,8.343996,7.170459,-8.142043,9.472996,-1.144512,-5.774211,6.792620,9.264311,7.265872,2.084948,7.905521,6.631496,-9.278835,-4.965953,-5.127146,-3.217169,6.742224,5.052095,-8.487788,-1.089687,4.345907,-6.027170,2.699535,-5.212914,-1.024710,4.134627,-5.347788,9.062031,-4.748081,-1.067586,-7.180297,-7.655688,-4.830328,3.911247,-6.719312,1.267096,5.161034,-9.564470,5.074107,6.656678,-0.004170,-0.833000,2.163827,3.410383,5.534610,9.926849,-7.023604,2.761259,3.129209,6.949376,3.220147,-1.751653,-9.219491,8.145507,7.191688,-8.513980,4.702898,-2.139215,-1.760344,-9.257418,-2.619696,-3.095923,4.198294,9.346342,-6.120141,-1.023192,-3.470200,-5.047791,9.143863,-7.774325,6.235399,-1.512513,3.971360,8.644999,8.883620,9.358926,5.137104,-4.791131,-4.569198,-2.455976,2.799716,-7.054240,3.912282,-8.306368,-9.356588,6.762220,0.982309,-3.591890,8.029060,4.367950,6.930409,-3.873850,-1.602542,9.075052,-1.674139,5.081350,-6.769159,4.093395,1.475520,-6.941010,5.391231,6.430712,4.893995,9.283652,3.754815,7.461665,-5.735211,-9.633345,4.239384,4.268783,1.835696,1.467880,-4.425299,0.619493,-4.888582,3.375959,0.686425,1.834139,-6.651249,0.695333,3.477390,-8.972318,-6.506353,-1.814852,-3.334944,-4.223092,-8.462915,1.629974,-1.224463,-5.752053,-7.767079,-0.608159,-0.840764,-8.144971,4.435724,1.752602,1.493870,-5.794389,-6.945386,6.554931,-6.181081,-9.839853,0.781878,9.681448,-5.471284,-0.593109,7.309611,-2.687109,-8.265885,-2.945757,7.603529,-5.688117,2.390486,-5.365659,0.824061,-1.766020,6.802420,0.532563,-7.725149,0.559729,-4.305636,6.674539,-9.931233,-8.454964,-7.528333,-8.791801,-8.149098,-2.528806,6.733436,4.331372,-1.773827,-4.649594,-7.017393,-6.444626,-7.843418,1.582219,-2.054992,-8.315486,-9.370752,5.538351,2.345635,-6.716745,9.596164,5.513052,-7.481152,6.759614,-6.882725,-2.618095,8.948299,1.321779,-8.688495,5.636763,9.600185,-8.684071,-0.637151,0.880029,1.274549,9.205268,-7.009409,-0.933971,7.269243,-6.666792,6.901367,-1.593666,4.571601,3.769399,-3.502951,-5.400427,-8.270517,1.518235,8.959896,0.972803,7.271329,2.369609,6.874987,-1.627642,2.859600,1.895602,7.080511,-6.279686,5.770383,6.592744,-2.214922,-6.648884,-9.210153,6.256427,-2.018631,-5.010282,8.701248,1.320517,3.309025,2.584429,-3.381215,-8.067920,-4.777759,2.601749,-4.393818,9.891820,-3.125485,0.979624,8.216212,-3.970412,3.955021,1.731958,-3.690693,-5.149706,-8.453203,1.906284,-2.219848,7.768917,-0.429505,-1.562275,6.551963,8.297074,9.499709,-4.242272,7.123034,-0.617269,4.389877,7.307650,1.372335,-9.727092,9.188268,-3.347557,1.077195,-4.465944,-4.544749,-7.018022,-8.502609,-5.638489,-3.513718,-3.402497,9.305961,0.918576,5.257240,8.724904,-7.656148,-9.467930,0.514516,0.989176,-9.659253,-3.916489,-7.845246,-8.924266,-3.123847,6.274910,0.780740,-3.621459,-2.246290,-1.974683,-2.297221,-4.208922,1.632223,-3.892644,-1.530213,0.574807,2.192419,3.293220,-2.306281,-3.692654,-4.288185,6.907597,3.892961,3.289713,8.459882,6.832673,7.891281,-7.894940,5.420029,3.745300,-1.616427,-1.881182,-3.193013,-9.022996,-4.500658,0.587133,-8.789523,-4.225315,-5.735570,0.213212,7.654143,3.050785,7.063571,6.553678,-8.966606,-7.136673,3.148193,-8.162314,-2.360638,-0.360869,1.325440,-7.566220,4.196853,9.994061,-0.985611,9.418989,-8.551716,-0.905168,7.339825,-2.552423,-1.634934,-5.383455,7.851727,3.872549,9.320348,-2.966338,4.501753,-2.707035,-9.227945,-9.486376,9.891995,-0.432148,-5.474186,3.173893,9.750238,9.609049,-9.221392,8.774894,-3.387568,2.872636,0.463840,-9.297486,-7.356680,9.246171,-8.823557,8.897420,1.049168,2.639422,-6.748429,8.884389,-9.981090,6.617667,7.976544,0.495485,9.256899,4.323140,-1.410387,0.728104,1.540409,2.538537,-6.490947,7.607244,4.317916,0.309180,8.903062,2.745862,6.336849,-6.549843,0.644697,-0.844804,-7.725199,1.305830,5.974123,-2.036461,8.921192,8.995283,-3.409830,-5.823026,9.715654,-7.365813,-7.762237,3.569607,-7.765999,-6.731553,9.882731,9.298604,3.592739,-2.616920,5.445953,6.570069,9.999755,0.976574,3.632714,5.150809,9.786520,6.131634,1.247235,-5.905524,-9.837130,8.532027,6.868696,8.630749,-0.417399,-3.037940,-7.512815,-0.851185,-9.818149,-1.742006,3.298830,-0.256912,2.853558,3.290201,-1.640303,-7.011071,-8.195122,-8.113429,-5.616082,-4.983617,-8.683053,3.791424,-2.550049,-0.800678,6.863563,-4.493484,-2.397983,0.901697,-0.242203,-9.651198,-3.459126,2.907889,-1.192491,3.952156,-2.013573,2.601888,-5.662281,6.378868,8.616776,9.034695,-4.372394,9.053574,-7.112069,-0.680609,2.388963,-0.793807,-1.470817,1.663096,5.640423,6.793479,-9.252314,-4.503798,5.192625,-7.262051,5.556345,1.957515,9.471595,-1.103003,-2.335727,3.092055,5.697119,3.227880,2.682054,1.411983,2.557314,-3.449413,5.857138,-2.855860,5.687805,3.075439,-0.078046,-3.417222,-6.049953,-3.015359,-6.974333,-5.134293,2.984461,6.941308,-6.801522,1.098235,4.357154,-3.630591,6.104171,-1.263396,0.511066,9.471737,-0.700603,0.347984,0.831464,2.061467,8.827350,8.963900,-0.779555,-6.401364,4.621266,-6.971338,2.766849,-8.412871,-2.840488,5.746262,-9.779089,0.377290,9.284663,6.909644,-2.509504,-4.738125,2.643086,-5.170769,-6.811378,-9.235726,6.056859,-2.110849,3.597128,0.788570,5.646602,3.136546,7.458950,3.989919,-1.882049,5.221863,3.963838,-4.878645,-1.458155,-1.435604,8.352786,-3.428762,-5.547236,-5.689331,6.478599,1.371876,-9.725184,9.397946,8.623052,-2.368097,8.319009,0.757771,1.124112,0.727134,-7.040064,-6.117548,4.575430,-9.715221,-0.944010,9.442453,-6.785041,-4.410012,-1.791573,9.931323,-0.430281,7.482078,4.345014,8.205608,-1.853518,-3.641864,-4.142951,7.487464,-1.364676,5.633008,-1.036988,-2.044554,1.209972,8.510732,-4.532281,-8.265894,5.145020,6.254226,-6.859622,4.163420,9.815649,0.254012,0.805661,1.050405,9.447906,-1.696984,-3.475146,-8.126107,2.442805,2.319413,-0.233261,2.886104,2.042724,7.415612,8.658757,-6.294526,-2.232573,-8.582700,-0.706259,6.533234,5.532505,1.237101,9.728581,5.190009,-5.615783,-4.937008,-0.135110,-8.362421,-3.681052,0.917705,-5.499278,5.345991,-4.465351,-9.135740,8.128930,-6.592038,8.536547,-1.736782,2.342337,-0.062544,-4.277138,0.524999,-3.055705,-2.077226,2.866201,-0.291606,-9.244632,-5.992009,6.770148], dtype = "float64")#candidate|6844|(1008,)|const|float64
call_6843 = relay.TupleGetItem(func_1841_call(relay.reshape(const_6844.astype('float64'), [14, 8, 9])), 1)
call_6845 = relay.TupleGetItem(func_1844_call(relay.reshape(const_6844.astype('float64'), [14, 8, 9])), 1)
func_422_call = mod.get_global_var('func_422')
func_427_call = mutated_mod.get_global_var('func_427')
const_6855 = relay.const([[-5.410013,3.805094,6.953568,-9.204592,5.429220,2.949798,8.539654,6.985356,-3.328806,-0.332303,1.352858,-0.821409,-8.074676,5.968500,-7.486841,2.035199,1.709722,7.397124,-3.371235,3.176328,3.472196,4.780418,2.986212,9.549807],[-0.566668,4.681727,-8.357790,4.491033,6.652130,6.544904,-8.524469,-0.804348,4.416066,2.333647,9.322310,0.305863,7.033284,9.448514,-0.250518,-2.798504,-4.602029,-2.762523,7.187301,0.752057,-1.726916,7.732992,-8.944766,-7.988289],[5.707204,3.321689,-8.820748,2.210900,-8.608728,0.180472,-9.384024,7.626645,1.473782,5.817850,9.971194,9.486998,9.646436,7.561504,-2.139868,-3.280222,8.858946,-8.042780,-3.834393,3.964929,-3.617180,8.471866,-0.396312,8.921367]], dtype = "float32")#candidate|6855|(3, 24)|const|float32
var_6856 = relay.var("var_6856", dtype = "int8", shape = (364, 1))#candidate|6856|(364, 1)|var|int8
call_6854 = relay.TupleGetItem(func_422_call(relay.reshape(const_6855.astype('float32'), [12, 1, 6]), relay.reshape(call_6843.astype('int8'), [52, 1]), relay.reshape(var_6856.astype('int8'), [7, 52]), ), 2)
call_6857 = relay.TupleGetItem(func_427_call(relay.reshape(const_6855.astype('float32'), [12, 1, 6]), relay.reshape(call_6843.astype('int8'), [52, 1]), relay.reshape(var_6856.astype('int8'), [7, 52]), ), 2)
output = relay.Tuple([uop_6827,call_6830,const_6831,const_6832,call_6843,const_6844,call_6854,const_6855,var_6856,])
output2 = relay.Tuple([uop_6827,call_6833,const_6831,const_6832,call_6845,const_6844,call_6857,const_6855,var_6856,])
func_6860 = relay.Function([var_6826,var_6856,], output)
mod['func_6860'] = func_6860
mod = relay.transform.InferType()(mod)
mutated_mod['func_6860'] = func_6860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mutated_mod.get_global_var('func_6860')
var_6862 = relay.var("var_6862", dtype = "float64", shape = (5, 12, 1))#candidate|6862|(5, 12, 1)|var|float64
var_6863 = relay.var("var_6863", dtype = "int8", shape = (364, 1))#candidate|6863|(364, 1)|var|int8
call_6861 = func_6860_call(var_6862,var_6863,)
output = call_6861
func_6864 = relay.Function([var_6862,var_6863,], output)
mutated_mod['func_6864'] = func_6864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6704_call = mod.get_global_var('func_6704')
func_6706_call = mutated_mod.get_global_var('func_6706')
call_6918 = func_6704_call()
call_6919 = func_6704_call()
func_5356_call = mod.get_global_var('func_5356')
func_5357_call = mutated_mod.get_global_var('func_5357')
call_6920 = relay.TupleGetItem(func_5356_call(), 0)
call_6921 = relay.TupleGetItem(func_5357_call(), 0)
func_6031_call = mod.get_global_var('func_6031')
func_6034_call = mutated_mod.get_global_var('func_6034')
const_6929 = relay.const([[1.156786,9.969568,8.497866,-0.990153,-3.445723,-0.025034,9.599571,7.175742,0.590010,6.669041,9.331128,3.531779],[0.042926,-7.699074,-1.692691,8.341483,-0.226070,-9.196813,-7.906749,-5.294987,-5.679835,4.496058,-8.065338,0.186975],[6.160817,0.106632,-5.768356,-6.558291,-0.789644,-5.379514,5.050635,-3.678401,-1.088162,3.754658,-4.281212,4.234194],[9.235562,-5.894171,8.345099,2.708437,-4.483961,4.558888,5.055026,-0.800465,1.033260,-2.068460,6.303192,-7.013190],[0.074611,-8.897536,-4.419131,0.026910,-1.600404,8.521361,4.840040,-3.527286,-7.493171,-5.842249,-9.310325,2.461932],[7.392870,-7.283518,-4.352529,-0.338844,-3.303742,9.421977,8.606061,-2.937734,-5.255738,5.381527,-2.805440,-4.494286],[-8.951068,-5.345872,2.897407,-7.433835,-8.994469,2.210166,8.713409,-2.911757,-0.373325,-2.630764,-3.607813,-4.748182],[6.794845,-6.146930,6.712607,-7.086767,-9.305474,-6.331809,-5.497790,-7.600922,0.920051,8.014038,-1.655332,6.573901],[-7.337245,-9.424247,-2.144254,7.768191,-2.117293,-6.244378,-3.778343,4.351832,5.663576,6.146103,-8.917764,-1.846721],[1.164085,2.974732,-4.651599,9.510731,-5.878592,0.894884,-9.409736,-2.757833,2.044195,-3.304777,7.972937,-0.245484],[-1.357390,-7.104744,2.693818,-8.856291,4.031248,-7.342985,-3.738459,-5.845253,8.867273,-2.618775,-1.931083,0.525443],[6.830525,-3.828358,4.740627,3.096246,-4.296944,2.475075,4.377661,-0.186498,9.291440,-4.516585,-3.557786,-5.759428],[-8.509216,0.618754,-9.411369,-8.326695,8.075748,-4.045960,8.307204,-8.076637,-6.023853,-5.239124,2.359215,-4.781501],[8.133243,9.007242,8.534947,-7.098659,-3.474900,-9.241781,-6.410541,-1.738569,3.171217,-2.440874,-8.141456,-7.587613],[-0.342528,-9.219279,-1.177115,-2.230386,5.256082,6.807865,-2.500447,0.877577,-4.981370,3.427135,-5.134939,-0.422440],[-9.786193,0.946386,6.564848,8.430888,-8.016527,8.297136,-9.241309,-3.464752,9.237844,-1.865566,2.439727,-1.436894],[-5.599634,-4.574652,6.488295,-2.326409,-2.966226,8.990464,-4.792648,3.995317,-3.081542,9.104130,6.280924,6.888559],[3.069817,-6.993948,4.547418,-1.843310,-0.049713,-6.332043,4.005559,6.650002,-3.244267,0.558166,-2.033627,8.553074],[-9.843668,8.024042,9.353238,-3.094494,6.639189,4.904595,-5.528487,-0.739587,3.621306,-9.888379,9.666037,-6.035591],[-5.299668,-1.963844,-5.490749,-3.206454,-3.471549,-8.939433,-9.504344,3.982499,6.715391,-7.314859,-3.154045,-1.811682],[6.724973,5.017666,2.080992,2.590087,0.630140,-5.338914,4.640346,-5.828775,-5.907652,7.151175,-5.052947,-6.510926],[-4.964118,3.832858,1.352743,-0.364255,-7.689841,-6.638916,1.784627,-0.536657,3.512468,-9.871296,7.633617,3.989067],[-2.475321,-4.794716,1.539604,-4.181701,1.376127,-1.360657,-4.260021,2.538480,-4.358188,-5.769044,5.217807,5.410308],[6.433599,-8.342271,-2.806602,-5.394171,-1.734988,8.556846,-5.037831,1.932227,5.114565,-5.620457,-7.678205,4.229391],[3.954153,-4.557476,-2.673277,-5.201353,-8.601840,-2.906244,-6.250074,8.693075,9.327307,-0.068186,-0.894472,1.621709],[1.301580,6.674904,4.926883,6.708738,-4.986205,-7.901113,4.328254,-5.466700,4.193248,-6.326194,-3.281744,-7.400804],[6.859644,1.393769,9.150457,9.331185,-6.474917,-0.906998,2.348682,0.486183,-7.559747,-8.759471,-5.955413,1.608589],[6.877159,0.188822,5.109458,4.048167,-1.891742,-1.324741,8.333769,-5.033869,3.670665,-4.285158,-2.162650,-5.370075],[6.465347,-9.639035,-6.354042,2.429689,-3.456794,5.940028,-6.441522,-4.362733,8.106321,-9.103157,-0.779605,-0.346677],[-1.430828,8.753431,-4.125976,0.852133,-8.350869,9.137424,0.251633,9.733561,3.800991,0.087847,1.504796,-6.659527],[-2.245652,-2.800763,-7.204698,-3.849578,6.951652,5.766024,-0.855010,1.791644,6.759271,7.814945,7.050528,-4.786788],[4.408949,-0.436213,4.747383,6.935557,-5.756511,-1.223435,-7.341863,2.335269,-5.570191,-6.148422,9.358392,-2.967067],[-1.252385,1.662610,-5.728477,7.990967,8.858818,-2.339952,-3.458873,-8.792646,6.256539,1.059406,-0.802467,1.102029],[-1.259620,1.652288,7.483129,-7.876033,3.344394,6.118706,8.983984,0.693404,6.133417,6.777108,0.924319,-4.574475],[-3.042437,-4.977679,-1.261755,-3.565993,2.975439,-2.526592,5.559856,5.172000,-4.739123,-6.499840,1.622688,-3.373692],[6.982568,-7.981050,1.557528,-7.976953,4.609358,-5.430761,-9.038725,-1.710017,-1.337582,6.732177,3.183709,-8.122006],[5.384411,3.090749,-5.219963,5.159243,4.186875,-8.713660,-0.694529,-7.856909,-5.488244,2.474449,5.726195,-2.165941],[-4.660287,3.573314,-4.809701,7.244175,-6.355901,-5.116424,-4.828903,1.124658,-4.253054,3.534620,-7.664641,-2.859850],[-4.581312,7.809177,0.678089,-8.213074,6.569857,5.960364,2.102510,-4.499373,5.166726,2.121251,-9.207043,0.431612],[-4.073748,-2.939501,-4.072747,4.681979,-8.892682,9.962379,2.521361,-3.519359,4.564362,-9.563254,-2.730008,4.460972]], dtype = "float64")#candidate|6929|(40, 12)|const|float64
call_6928 = relay.TupleGetItem(func_6031_call(relay.reshape(const_6929.astype('float64'), [480,])), 3)
call_6930 = relay.TupleGetItem(func_6034_call(relay.reshape(const_6929.astype('float64'), [480,])), 3)
func_484_call = mod.get_global_var('func_484')
func_489_call = mutated_mod.get_global_var('func_489')
var_6933 = relay.var("var_6933", dtype = "uint8", shape = ())#candidate|6933|()|var|uint8
var_6934 = relay.var("var_6934", dtype = "float32", shape = (1, 72))#candidate|6934|(1, 72)|var|float32
var_6935 = relay.var("var_6935", dtype = "int8", shape = (52,))#candidate|6935|(52,)|var|int8
call_6932 = relay.TupleGetItem(func_484_call(relay.reshape(var_6933.astype('uint8'), []), relay.reshape(var_6934.astype('float32'), [72,]), relay.reshape(var_6935.astype('int8'), [52,]), ), 3)
call_6936 = relay.TupleGetItem(func_489_call(relay.reshape(var_6933.astype('uint8'), []), relay.reshape(var_6934.astype('float32'), [72,]), relay.reshape(var_6935.astype('int8'), [52,]), ), 3)
bop_6956 = relay.floor_mod(const_6929.astype('float64'), var_6933.astype('float64')) # shape=(40, 12)
bop_6965 = relay.subtract(var_6934.astype('int16'), var_6933.astype('int16')) # shape=(1, 72)
bop_6968 = relay.right_shift(var_6934.astype('uint64'), var_6933.astype('uint64')) # shape=(1, 72)
output = relay.Tuple([call_6918,call_6920,call_6928,call_6932,var_6935,bop_6956,bop_6965,bop_6968,])
output2 = relay.Tuple([call_6919,call_6921,call_6930,call_6936,var_6935,bop_6956,bop_6965,bop_6968,])
func_6974 = relay.Function([var_6933,var_6934,var_6935,], output)
mod['func_6974'] = func_6974
mod = relay.transform.InferType()(mod)
var_6975 = relay.var("var_6975", dtype = "uint8", shape = ())#candidate|6975|()|var|uint8
var_6976 = relay.var("var_6976", dtype = "float32", shape = (1, 72))#candidate|6976|(1, 72)|var|float32
var_6977 = relay.var("var_6977", dtype = "int8", shape = (52,))#candidate|6977|(52,)|var|int8
output = func_6974(var_6975,var_6976,var_6977,)
func_6978 = relay.Function([var_6975,var_6976,var_6977,], output)
mutated_mod['func_6978'] = func_6978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7010 = relay.var("var_7010", dtype = "float64", shape = (11, 15, 9))#candidate|7010|(11, 15, 9)|var|float64
uop_7011 = relay.sqrt(var_7010.astype('float64')) # shape=(11, 15, 9)
func_6175_call = mod.get_global_var('func_6175')
func_6177_call = mutated_mod.get_global_var('func_6177')
call_7018 = func_6175_call()
call_7019 = func_6175_call()
output = relay.Tuple([uop_7011,call_7018,])
output2 = relay.Tuple([uop_7011,call_7019,])
func_7033 = relay.Function([var_7010,], output)
mod['func_7033'] = func_7033
mod = relay.transform.InferType()(mod)
var_7034 = relay.var("var_7034", dtype = "float64", shape = (11, 15, 9))#candidate|7034|(11, 15, 9)|var|float64
output = func_7033(var_7034)
func_7035 = relay.Function([var_7034], output)
mutated_mod['func_7035'] = func_7035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_7055 = func_3796_call()
call_7056 = func_3796_call()
output = call_7055
output2 = call_7056
func_7068 = relay.Function([], output)
mod['func_7068'] = func_7068
mod = relay.transform.InferType()(mod)
output = func_7068()
func_7069 = relay.Function([], output)
mutated_mod['func_7069'] = func_7069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2955_call = mod.get_global_var('func_2955')
func_2957_call = mutated_mod.get_global_var('func_2957')
call_7078 = func_2955_call()
call_7079 = func_2955_call()
uop_7080 = relay.acos(call_7078.astype('float64')) # shape=(4, 9, 4)
uop_7082 = relay.acos(call_7079.astype('float64')) # shape=(4, 9, 4)
func_5142_call = mod.get_global_var('func_5142')
func_5146_call = mutated_mod.get_global_var('func_5146')
var_7089 = relay.var("var_7089", dtype = "float64", shape = (56,))#candidate|7089|(56,)|var|float64
call_7088 = relay.TupleGetItem(func_5142_call(relay.reshape(var_7089.astype('float64'), [56,]), relay.reshape(call_7078.astype('bool'), [4, 9, 4]), ), 9)
call_7090 = relay.TupleGetItem(func_5146_call(relay.reshape(var_7089.astype('float64'), [56,]), relay.reshape(call_7078.astype('bool'), [4, 9, 4]), ), 9)
func_1879_call = mod.get_global_var('func_1879')
func_1884_call = mutated_mod.get_global_var('func_1884')
const_7098 = relay.const([[-7,6,7,2,-3,-2,1,3,7,-7,-5,-4,2,2,7,3,2,4,9,9,-6,-5,6,-8,2,-2,10,10,3,10,-4,3,-4,-5,2,7,4,-6,-9,-1,-4,10,10,-7,-1,-2,2,1,4,-1,10,6,-7,4,9,-1,-10,-6,-2,-3,2,10,-3,-9,6,5,7,2,6,-2,-1,9,-5,-2,-7,-1,-8,-2,9,8,-3,-3,-4,4,9,6,-10,-3,-9,-1,-8,7,3,-9,-3,10,-1,4,-6,-5,4,-6,6,9,-4,2,-5,10,-8,-2,7,7,-5,-3,-1,7,-2,10,-4,-3,-3,10,6,8,8,-7,4,-3,6,1,6,3,-2,-6,-3,-5,-4,4,5,-3,4,8,-3,6],[-8,-5,6,2,2,-4,-7,-1,4,-2,-9,-9,-7,10,9,9,4,2,3,-6,2,-10,-9,-9,-6,9,7,8,-9,2,-4,-5,-9,6,1,-7,-4,-9,7,5,10,-9,-5,9,-3,2,-5,6,4,-4,-6,7,7,4,-5,-7,4,-3,3,1,-4,5,-9,-3,-5,-7,9,2,1,2,-4,2,7,4,-7,5,-7,-3,1,9,-5,6,2,2,1,-1,4,-2,-1,8,1,-3,4,-5,4,-9,-10,-4,3,8,-3,9,-6,-8,-7,-7,10,9,8,10,-7,2,4,-4,6,-10,-2,-6,-2,-5,1,-9,4,6,3,-5,-5,-10,4,7,-5,-9,-8,3,-7,10,2,8,9,-9,10,-5,-10,-3],[8,-6,-8,1,-10,-9,5,-5,-1,3,9,-2,-6,3,1,-4,-7,-5,-5,-3,1,4,-1,2,-3,2,9,-10,-3,4,-10,-7,9,4,-6,-1,-10,4,-5,3,-3,10,3,8,-3,-1,9,10,10,5,10,5,-2,-1,-5,-3,-3,8,-2,-3,-9,6,2,7,9,-10,-8,10,5,-5,8,-7,-2,9,3,9,-6,-9,2,-2,8,1,-10,5,2,4,-1,-3,9,-9,3,4,4,10,1,-8,-8,6,9,1,-5,-1,9,-9,7,-1,-5,-2,10,6,7,-4,-2,3,4,-3,1,5,-2,-8,-2,9,-6,8,-4,9,10,-6,-6,4,-5,10,4,5,10,5,4,1,7,-8,-6,2,-10,8],[9,7,10,-9,-1,-2,-2,4,1,6,9,-8,-10,-10,-1,8,2,-4,-3,9,-9,-6,6,-7,-7,4,6,10,-2,-8,-9,-3,-4,-3,9,-10,3,-9,5,-5,-8,8,-8,-2,9,3,8,8,2,6,5,10,-9,-4,-5,-9,-7,7,-7,8,-10,-5,9,-8,-7,10,10,8,9,6,-3,4,-3,-9,-1,8,10,-8,7,9,2,-5,-9,4,7,1,6,-1,-8,1,9,-1,-1,9,-6,-1,6,-3,-9,3,6,7,9,2,10,9,3,2,8,3,8,6,-9,10,-3,-7,9,10,-4,7,6,-7,5,-4,-9,-1,-10,-2,4,-1,9,6,10,9,-10,9,-2,6,4,-2,-6,1,-10,7],[6,-10,3,-4,6,10,10,4,6,1,2,4,-8,6,-9,-1,10,-2,1,-10,9,-3,-9,-5,8,4,9,8,4,-5,-8,8,10,-2,5,-6,-4,-7,7,-8,6,-3,-2,4,6,7,-8,1,-4,-6,9,-7,-2,-5,-4,4,-7,-9,-9,-6,-4,8,-9,-9,3,4,-9,4,3,4,2,-9,6,-9,3,-1,-10,1,9,-2,5,-6,-5,10,10,7,-2,5,6,-3,9,8,-5,9,-8,8,-5,2,5,-9,-5,-10,-3,-3,9,10,1,9,6,10,9,1,-2,-7,6,5,10,-6,-10,-2,6,9,9,-3,-8,-10,9,-4,-6,-8,-4,-4,8,-7,-1,-9,10,-4,8,3,10,-4,9,-10],[8,7,-2,-8,3,1,4,-10,-8,3,-4,1,-2,-3,-2,5,-10,3,3,2,-7,-9,1,-7,-6,4,-7,-5,9,-9,8,4,-6,10,8,-7,-5,8,-6,4,5,5,2,-2,-8,5,-5,-6,5,2,9,10,4,9,-3,5,10,4,9,-6,-9,5,-9,-4,-8,-8,6,9,6,-1,1,-10,5,7,-2,-3,4,-2,10,7,-4,2,-5,-9,1,1,-5,6,-7,-6,-6,9,-6,4,8,-3,-6,-10,8,-1,9,-4,7,6,3,-2,-2,2,3,-5,7,3,3,-4,5,3,-1,10,-6,-1,-10,-9,-5,2,5,9,3,7,7,10,-9,8,9,8,-8,-4,2,-3,-2,-5,2,1,7,-3]], dtype = "int16")#candidate|7098|(6, 144)|const|int16
const_7099 = relay.const([[-1.821520,9.176688,-8.990229],[8.201418,-9.436069,9.278208],[0.737426,5.781959,-1.478992]], dtype = "float64")#candidate|7099|(3, 3)|const|float64
call_7097 = relay.TupleGetItem(func_1879_call(relay.reshape(const_7098.astype('int16'), [6, 16, 9]), relay.reshape(const_7098.astype('int16'), [6, 16, 9]), relay.reshape(const_7099.astype('float64'), [9,]), ), 2)
call_7100 = relay.TupleGetItem(func_1884_call(relay.reshape(const_7098.astype('int16'), [6, 16, 9]), relay.reshape(const_7098.astype('int16'), [6, 16, 9]), relay.reshape(const_7099.astype('float64'), [9,]), ), 2)
output = relay.Tuple([uop_7080,call_7088,var_7089,call_7097,const_7098,const_7099,])
output2 = relay.Tuple([uop_7082,call_7090,var_7089,call_7100,const_7098,const_7099,])
func_7118 = relay.Function([var_7089,], output)
mod['func_7118'] = func_7118
mod = relay.transform.InferType()(mod)
mutated_mod['func_7118'] = func_7118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7119 = relay.var("var_7119", dtype = "float64", shape = (56,))#candidate|7119|(56,)|var|float64
func_7118_call = mutated_mod.get_global_var('func_7118')
call_7120 = func_7118_call(var_7119)
output = call_7120
func_7121 = relay.Function([var_7119], output)
mutated_mod['func_7121'] = func_7121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_7178 = func_3796_call()
call_7179 = func_3796_call()
func_6512_call = mod.get_global_var('func_6512')
func_6513_call = mutated_mod.get_global_var('func_6513')
call_7184 = func_6512_call()
call_7185 = func_6512_call()
var_7190 = relay.var("var_7190", dtype = "int8", shape = (364,))#candidate|7190|(364,)|var|int8
bop_7191 = relay.floor_mod(call_7184.astype('float32'), relay.reshape(var_7190.astype('float32'), relay.shape_of(call_7184))) # shape=(364,)
bop_7194 = relay.floor_mod(call_7185.astype('float32'), relay.reshape(var_7190.astype('float32'), relay.shape_of(call_7185))) # shape=(364,)
output = relay.Tuple([call_7178,bop_7191,])
output2 = relay.Tuple([call_7179,bop_7194,])
func_7197 = relay.Function([var_7190,], output)
mod['func_7197'] = func_7197
mod = relay.transform.InferType()(mod)
var_7198 = relay.var("var_7198", dtype = "int8", shape = (364,))#candidate|7198|(364,)|var|int8
output = func_7197(var_7198)
func_7199 = relay.Function([var_7198], output)
mutated_mod['func_7199'] = func_7199
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7211 = relay.const([[[7.542365,3.813082,-4.294159,6.163575,-8.874690,2.265633,5.955847],[7.013658,3.588020,-6.761949,-1.425895,-9.278846,8.847462,8.759974],[-5.859842,-0.849302,3.151564,2.564102,3.398279,6.025453,8.889427],[2.177849,4.245183,0.453691,1.205471,2.528434,-3.930818,-8.231572],[-2.819582,-6.496070,7.599233,-7.034227,-9.241905,-2.838422,-0.546440],[4.617168,-0.031976,-7.662001,-8.809126,-0.420462,6.385975,1.721769],[0.983368,2.713520,4.587187,3.221792,0.529474,1.883389,1.582036],[9.943989,-8.886753,6.792406,7.892471,-6.732555,7.518297,5.356417],[-4.509698,5.242322,0.357897,1.754543,-9.853153,6.449707,8.835394],[-1.048861,-6.379175,-3.911470,-4.773664,7.266197,-2.945284,5.135661],[6.607113,-8.076557,-4.348169,0.023124,2.179639,-9.791124,1.316104],[6.971561,2.215668,7.494204,7.380377,-3.764405,-9.361936,3.827262],[7.135929,-7.375135,-0.837009,-3.379150,-9.399504,-8.308970,0.290719]],[[-1.197594,-5.640506,7.824010,0.953092,8.802190,-5.469185,-8.317149],[7.906378,7.141686,3.714315,6.131997,8.152255,-8.925612,-8.447498],[4.522622,4.025115,-7.034115,5.272259,0.222902,0.365432,5.213887],[-3.563340,-6.112441,1.477899,-5.726839,6.742658,-9.342533,-2.192352],[8.637043,2.587273,-5.041197,-0.473878,-2.811639,-1.767150,-2.628898],[-4.422884,3.172958,7.883225,9.311134,-7.393167,1.568604,6.447417],[-3.892503,-2.154227,-1.882679,-9.611328,5.920812,-3.583625,-6.096164],[3.763632,-2.722504,-3.597067,7.297987,7.475017,-2.220837,-6.923476],[7.953533,-4.693799,5.462242,0.784541,-7.373880,-6.707363,-7.128376],[-1.821552,5.570053,2.893696,1.505578,-2.902617,-2.786021,9.673189],[4.113120,-6.775184,-8.198027,-2.293572,-9.760096,0.995842,3.270974],[-3.440514,-3.313783,-0.206790,-4.721381,2.457501,9.876548,-1.050524],[3.117614,-0.324233,-7.200173,-4.135737,6.543160,-4.052815,-1.760194]],[[8.699161,-0.414186,-9.254500,-8.746901,-3.532464,-1.562534,-1.770545],[9.411595,1.656993,3.008724,0.302051,2.442348,-9.270460,-4.733516],[-3.484129,-4.672186,-8.481633,6.975862,-8.284765,0.386653,-7.854240],[-0.008990,9.115659,-6.284048,8.335977,1.752568,1.151794,-5.451315],[4.468526,-3.813253,8.443345,4.427802,8.666393,-5.659682,-5.485412],[3.214171,-9.314609,-8.262712,3.260371,-6.325468,-2.096724,-4.113279],[-1.235812,8.977536,5.350654,5.699261,-7.695153,9.010256,0.081591],[1.937503,4.214921,0.343014,7.468282,-9.838018,-4.754162,6.907651],[-4.092537,-0.212046,-6.219459,-5.742628,4.389802,-6.302387,0.027881],[-9.870292,-1.744997,-5.418943,-9.969159,8.319164,7.217193,-3.220095],[-2.183204,-4.804787,2.798499,-6.860010,-7.219385,-8.877285,-0.420962],[-6.696985,-6.566937,2.489720,-5.704379,-6.447577,6.519088,-4.945418],[9.539717,-6.612748,-8.794535,-5.356476,4.622995,0.086791,-1.904748]],[[7.365604,5.792411,-9.168865,-9.168945,-3.505032,6.062253,8.870679],[-9.872817,-1.531914,3.131267,9.151033,4.268149,5.515035,-0.510698],[0.751298,-6.958841,-8.462303,-2.540565,7.940301,-2.216348,8.199305],[8.134844,-9.513220,6.553433,3.186185,7.523260,-2.627319,4.133163],[9.410296,8.730454,-0.364422,6.395496,3.048919,7.819682,0.051820],[-6.815064,2.489864,7.131025,1.401555,-0.448661,7.303967,4.953846],[8.804150,-1.854462,0.244962,8.361418,3.238143,-2.744651,-4.588421],[-2.343703,9.912801,-1.198143,-8.377388,-4.549552,-2.791602,-3.861895],[-9.885196,-0.961272,-5.209795,-7.966603,-1.593518,2.638902,-5.732582],[-6.586316,4.114193,-9.648372,4.984648,-7.031838,2.110184,6.072950],[6.783213,9.833702,0.066952,8.136602,-7.195760,8.140736,3.148997],[2.699654,-9.078636,-4.917809,-9.034255,-8.153720,-2.353844,6.558243],[5.545271,7.428981,-9.223670,-8.393083,-2.450686,-6.154104,9.293014]],[[3.338410,-9.640524,6.116154,-4.054763,7.633638,-2.805974,-2.433771],[-3.886248,-7.106591,-4.889985,-0.731477,0.889383,4.747848,3.293537],[-3.772536,5.965040,4.898309,-6.782049,8.862129,9.428440,6.973818],[-2.198115,-6.008675,2.229714,1.491054,-5.660019,9.054178,-9.011440],[-7.127036,-6.905206,4.394462,-1.490221,5.117308,9.446671,-8.408141],[2.286671,-0.412934,1.914102,-7.157609,-7.100557,0.130859,-5.035855],[-4.544191,7.342885,-4.616910,8.066449,8.000272,-5.192718,6.148639],[1.847216,-3.395254,0.238729,7.404648,9.361842,-7.117017,3.067974],[9.239896,-4.021405,-9.502966,-1.113092,9.720771,-0.395421,1.843567],[6.143404,-1.211106,-8.799234,-8.116294,-9.340019,9.068861,7.297274],[7.084832,1.256821,-4.009748,-5.799012,5.916256,9.549719,-0.397238],[5.422913,4.320938,-3.834476,-6.564353,-9.530796,1.364013,-8.566088],[5.906464,-8.277285,-0.791706,0.771024,5.961662,2.237321,-5.880449]],[[0.485099,8.682479,-4.406430,1.798029,-3.523201,-8.004070,-6.043440],[6.821948,-4.402261,7.104101,9.857912,-9.739587,-9.584309,-3.346810],[-4.353066,5.441443,-3.438068,-0.228445,8.886050,6.606619,1.642683],[-5.738570,1.402140,-7.599978,-5.127058,-6.543935,4.200582,-1.611115],[-8.608204,-7.990278,8.746709,-7.659353,-5.973230,0.106572,2.714331],[4.570860,-6.958922,-2.846330,-1.777336,0.049577,-4.700000,-9.029494],[-8.011912,-0.163729,-9.342112,4.978193,-9.983625,9.376822,-5.301086],[-3.085069,0.509466,4.958463,7.497305,-8.705770,-0.166744,5.039014],[4.574780,9.124926,-0.162767,7.277488,-7.220601,1.165956,-2.840115],[7.040822,6.372592,-4.097658,3.095807,-7.036161,-4.535766,-0.426968],[-3.242976,2.514650,-8.275967,2.501617,-7.383706,3.867475,0.560306],[1.909877,9.000556,-5.293997,-6.839182,1.888566,-1.663034,3.042217],[-9.039762,-4.997306,9.799286,7.393285,-4.219801,-1.839072,7.371163]],[[7.310986,-0.907190,-4.990311,7.354481,-6.471156,-6.080573,6.593407],[3.333077,1.247597,7.489423,-2.974072,1.816784,-5.114637,-6.659452],[6.867050,-2.705093,-8.101474,2.935536,-4.022058,-3.350708,9.737952],[-6.266708,2.137363,4.598515,-1.282024,-2.809851,8.106097,-0.223445],[1.757209,-8.993635,-3.322180,8.127294,-3.496287,5.551694,0.715850],[2.930598,-8.440737,-4.776393,-8.394683,-2.479240,-1.018056,9.652001],[9.409989,8.200376,8.356002,6.651059,-8.025348,-2.688359,0.421370],[4.957433,6.816262,0.541532,-5.579193,-7.177058,2.664744,9.219874],[5.428155,6.368863,-1.475483,-4.224672,1.629924,9.821407,-9.356072],[-4.127281,-3.213907,2.283582,-4.613534,3.854060,-2.263955,0.641186],[6.948284,5.152512,-4.858716,1.543375,7.280468,-1.722599,7.575387],[-3.166531,5.980559,4.173892,-7.990736,-6.135254,-3.685552,8.913959],[5.817549,-4.665635,-4.336626,0.719606,5.159898,1.476192,-1.824200]],[[0.196494,-6.783330,-9.815954,-7.580607,5.853900,-8.348187,9.079619],[7.530665,9.453387,-6.568168,4.304768,8.355839,3.774623,0.169465],[0.616516,-8.254054,5.533883,-7.571463,-1.609568,-6.886080,7.886732],[5.141806,0.691235,9.306368,1.766567,-5.579457,-8.142118,-2.915761],[-4.800697,0.262218,1.660700,-1.248019,-2.840879,-3.977891,0.474725],[-6.132838,9.476564,-1.146041,-0.730224,9.544774,2.733851,1.904673],[1.615798,2.505307,7.004039,5.167349,-8.787970,-2.460908,-2.208161],[7.527114,8.782747,-0.418771,-6.150390,5.813966,1.650764,-2.631503],[-5.177396,-3.690008,4.953866,-3.207696,-7.581462,-8.982594,1.333381],[1.913562,9.357420,-1.384187,-7.922986,-3.008422,2.124063,-4.168833],[-9.746592,2.894252,-1.235985,4.648392,4.226512,-6.722597,5.356958],[-8.908636,1.010025,9.024355,-6.417986,2.334667,-6.694181,5.382523],[6.819285,-0.733378,1.728134,0.527116,-6.798991,3.836821,-7.101614]],[[2.577962,-0.409575,-8.565993,-1.535856,0.911609,0.291842,5.947497],[-1.943529,9.928917,-7.549148,5.548259,1.295116,0.486431,3.722782],[7.512447,2.035140,-3.141224,-0.893604,2.586940,-0.058279,-2.977911],[-0.501883,4.083665,-2.710434,-6.892597,4.161848,-5.043158,-4.551380],[-7.989226,1.928608,9.630701,-1.076133,-1.437056,5.373723,8.880704],[-8.180148,5.226435,-7.014511,7.480430,-9.727423,4.519419,-5.633323],[-5.383631,-4.745512,-2.152586,1.135707,-6.605078,2.636565,-7.993229],[-2.430884,-1.076814,9.385260,1.035784,0.992351,2.093429,0.767136],[5.613631,-4.654309,-8.484435,-2.291946,-1.373386,1.998393,8.458939],[-2.556504,1.035923,-2.419936,7.743394,0.611548,2.550083,-6.919234],[-4.880660,4.620689,0.899288,-1.716151,-2.215362,-7.457906,-8.182963],[7.205553,3.938209,6.995048,9.054488,-2.397429,-0.885153,4.309691],[-2.490150,-1.539463,9.407335,-3.018368,9.548345,1.104059,0.283520]],[[6.764573,8.220582,-5.627451,-3.921795,3.022023,7.778956,-8.831701],[7.099519,5.513590,6.883899,6.681555,7.799406,6.944806,-4.167124],[0.395159,8.636072,6.725734,2.231887,3.912921,5.296237,2.154440],[-9.304705,-5.338920,-0.098739,-2.622530,4.835041,-3.720205,2.547772],[-1.307479,-9.976107,-2.102590,-9.401732,-2.078456,7.011113,9.814675],[-6.220273,2.991752,-2.008142,8.976292,8.088118,4.419533,3.599163],[6.417711,8.717674,-2.982947,5.258178,9.498291,-3.609534,-9.873659],[4.185072,-6.746513,-7.642400,0.268162,-4.496029,1.876939,-7.537614],[-1.112632,2.157108,-2.080316,1.056309,-2.726987,8.571856,-3.284285],[-0.407766,0.757856,-3.751359,3.605526,9.790826,-9.952113,8.526966],[1.876602,-6.059600,2.842272,-2.487766,-4.141252,-4.705880,-6.785092],[4.612071,8.523021,0.548296,7.692666,7.092271,9.266354,1.417619],[-6.689340,2.084367,-2.701316,5.905413,2.830357,-1.998219,-2.522934]],[[2.357947,-8.224315,9.484417,-8.608606,6.093239,8.314525,-9.148323],[5.312848,-4.442776,9.329602,-5.026310,1.311882,5.972633,1.524092],[-9.827421,3.946265,-3.925251,-5.704300,6.248728,7.007370,6.330397],[7.023692,9.413622,5.423469,-1.522898,3.610877,5.036603,1.857237],[-5.047394,-2.724532,-5.225418,-5.053578,7.981172,-6.107990,8.204336],[0.546593,-3.097553,-8.948569,-2.835096,3.794313,-5.239805,2.468325],[8.234134,1.945611,4.215179,4.261395,6.256149,-8.780691,-3.061198],[0.445526,-5.318950,-8.934596,-4.388387,-0.647949,5.981256,3.984214],[0.951740,6.190516,6.008986,-7.150180,-1.658589,-4.794969,1.337600],[-7.465254,-6.451224,7.519318,5.372716,7.493342,-1.424499,-8.103048],[-6.550036,-4.581462,-2.476453,-8.052627,-2.900004,-5.657099,-1.969017],[-7.407102,6.180837,-3.291071,-9.701324,6.601997,9.871307,0.636633],[-6.977356,9.471931,-9.146323,-5.957265,4.323090,-6.469902,9.569815]],[[-8.547999,-4.830207,1.887110,-5.726228,9.827281,3.498729,-5.103426],[9.699083,8.441790,2.647650,-2.565059,-4.056587,-4.463885,-6.302972],[2.841585,2.786340,8.339203,-4.924933,4.156561,-5.482704,1.716694],[7.129333,8.971830,-0.186561,4.099471,2.916283,5.259683,-3.029325],[-6.094685,-7.711576,4.642366,7.594953,2.950873,1.494878,-9.997908],[9.803624,-6.237372,8.408888,-8.571682,-5.923737,3.318235,6.893728],[6.148975,-7.842296,-5.436954,4.484350,-2.381944,8.743759,-8.949783],[7.243285,-3.867806,-3.194348,2.078046,-0.440043,6.077987,8.176192],[9.819864,2.400328,5.942697,-0.094639,4.220320,1.377766,-7.731018],[1.311447,4.194164,-4.833050,-9.553007,-1.201246,-6.054126,0.231770],[9.846229,8.534795,3.889366,1.086482,-3.484724,3.771849,5.765080],[-7.333104,2.232196,-1.444018,-8.187229,-0.171824,-1.321464,-0.478601],[-6.687558,-4.259343,2.520923,-1.496868,9.742728,6.584947,6.881049]]], dtype = "float64")#candidate|7211|(12, 13, 7)|const|float64
var_7212 = relay.var("var_7212", dtype = "float64", shape = (12, 13, 7))#candidate|7212|(12, 13, 7)|var|float64
bop_7213 = relay.multiply(const_7211.astype('float64'), relay.reshape(var_7212.astype('float64'), relay.shape_of(const_7211))) # shape=(12, 13, 7)
func_6335_call = mod.get_global_var('func_6335')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_7261 = func_6335_call()
call_7262 = func_6335_call()
output = relay.Tuple([bop_7213,call_7261,])
output2 = relay.Tuple([bop_7213,call_7262,])
func_7274 = relay.Function([var_7212,], output)
mod['func_7274'] = func_7274
mod = relay.transform.InferType()(mod)
var_7275 = relay.var("var_7275", dtype = "float64", shape = (12, 13, 7))#candidate|7275|(12, 13, 7)|var|float64
output = func_7274(var_7275)
func_7276 = relay.Function([var_7275], output)
mutated_mod['func_7276'] = func_7276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6144_call = mod.get_global_var('func_6144')
func_6146_call = mutated_mod.get_global_var('func_6146')
call_7307 = relay.TupleGetItem(func_6144_call(), 0)
call_7308 = relay.TupleGetItem(func_6146_call(), 0)
output = relay.Tuple([call_7307,])
output2 = relay.Tuple([call_7308,])
func_7309 = relay.Function([], output)
mod['func_7309'] = func_7309
mod = relay.transform.InferType()(mod)
mutated_mod['func_7309'] = func_7309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7309_call = mutated_mod.get_global_var('func_7309')
call_7310 = func_7309_call()
output = call_7310
func_7311 = relay.Function([], output)
mutated_mod['func_7311'] = func_7311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4985_call = mod.get_global_var('func_4985')
func_4986_call = mutated_mod.get_global_var('func_4986')
call_7312 = func_4985_call()
call_7313 = func_4985_call()
func_588_call = mod.get_global_var('func_588')
func_590_call = mutated_mod.get_global_var('func_590')
var_7323 = relay.var("var_7323", dtype = "float64", shape = (72,))#candidate|7323|(72,)|var|float64
call_7322 = func_588_call(relay.reshape(var_7323.astype('float64'), [3, 4, 6]))
call_7324 = func_588_call(relay.reshape(var_7323.astype('float64'), [3, 4, 6]))
var_7327 = relay.var("var_7327", dtype = "int8", shape = (364,))#candidate|7327|(364,)|var|int8
bop_7328 = relay.minimum(call_7312.astype('int64'), relay.reshape(var_7327.astype('int64'), relay.shape_of(call_7312))) # shape=(364,)
bop_7331 = relay.minimum(call_7313.astype('int64'), relay.reshape(var_7327.astype('int64'), relay.shape_of(call_7313))) # shape=(364,)
func_3180_call = mod.get_global_var('func_3180')
func_3181_call = mutated_mod.get_global_var('func_3181')
call_7351 = func_3180_call()
call_7352 = func_3180_call()
output = relay.Tuple([call_7322,var_7323,bop_7328,call_7351,])
output2 = relay.Tuple([call_7324,var_7323,bop_7331,call_7352,])
func_7353 = relay.Function([var_7323,var_7327,], output)
mod['func_7353'] = func_7353
mod = relay.transform.InferType()(mod)
var_7354 = relay.var("var_7354", dtype = "float64", shape = (72,))#candidate|7354|(72,)|var|float64
var_7355 = relay.var("var_7355", dtype = "int8", shape = (364,))#candidate|7355|(364,)|var|int8
output = func_7353(var_7354,var_7355,)
func_7356 = relay.Function([var_7354,var_7355,], output)
mutated_mod['func_7356'] = func_7356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4690_call = mod.get_global_var('func_4690')
func_4692_call = mutated_mod.get_global_var('func_4692')
call_7373 = relay.TupleGetItem(func_4690_call(), 4)
call_7374 = relay.TupleGetItem(func_4692_call(), 4)
var_7398 = relay.var("var_7398", dtype = "int16", shape = (36, 24))#candidate|7398|(36, 24)|var|int16
bop_7399 = relay.logical_or(call_7373.astype('bool'), relay.reshape(var_7398.astype('bool'), relay.shape_of(call_7373))) # shape=(36, 24)
bop_7402 = relay.logical_or(call_7374.astype('bool'), relay.reshape(var_7398.astype('bool'), relay.shape_of(call_7374))) # shape=(36, 24)
bop_7415 = relay.divide(var_7398.astype('float64'), relay.reshape(bop_7399.astype('float64'), relay.shape_of(var_7398))) # shape=(36, 24)
bop_7418 = relay.divide(var_7398.astype('float64'), relay.reshape(bop_7402.astype('float64'), relay.shape_of(var_7398))) # shape=(36, 24)
const_7425 = relay.const([[2,8,-1,9,4,-7,10,-8,8,-6,2,7,-8,-8,4,8,-3,-7,7,-8,-10,4,8,6],[-3,2,2,-3,8,7,3,7,6,-10,4,3,-2,-5,-8,8,-5,9,10,10,-3,9,2,2],[1,-10,4,8,-10,-6,-4,-2,-5,-6,4,2,-1,-5,-8,-3,-1,-4,6,-10,-5,-7,-3,7],[1,-4,7,4,8,5,6,-4,2,-3,10,-5,2,-5,2,-2,3,-9,3,-2,-3,-6,4,-10],[-6,5,6,2,-3,-10,8,1,9,4,5,10,3,-1,-6,5,3,1,-1,7,1,-2,-1,-10],[5,10,-2,-2,-8,5,-3,7,2,5,-10,-9,10,-8,4,-1,6,9,-4,4,-3,8,-1,1],[-1,-5,1,-2,5,3,-1,-8,-6,4,7,3,-9,7,-4,-1,7,7,-10,-10,-2,4,-7,-10],[-9,-2,2,-8,4,9,6,-4,8,2,2,-2,-2,8,9,2,-4,-4,-10,7,10,4,10,8],[9,5,-9,-8,5,10,-5,2,9,-6,-8,2,3,-3,-4,-8,-10,-6,1,-2,1,-8,6,-6],[6,3,8,-2,-3,-3,-6,2,3,-7,-4,-1,-10,-1,-9,-1,-2,-8,2,-9,-7,-4,3,-10],[-5,-3,3,6,-2,-2,-8,5,7,-8,5,4,10,-6,-3,1,1,-1,-9,10,5,-2,4,3],[-3,2,8,2,3,3,4,8,-2,-10,5,2,-1,-3,4,-8,-6,-8,8,4,-10,9,-5,-9],[-3,5,2,-8,-4,10,8,8,10,-10,-8,10,-3,1,-6,-2,3,7,-7,-8,7,-8,6,8],[-3,-6,3,8,7,-2,2,-1,3,8,-6,-10,4,7,5,-8,4,-9,2,-2,9,-1,10,-5],[4,3,-2,3,1,8,5,-4,1,-5,1,1,1,-10,-4,6,-10,5,1,6,8,-8,9,2],[-7,3,4,7,-6,8,2,7,2,4,2,3,-5,4,5,5,5,-10,-2,6,-4,9,8,-9],[-9,-2,-4,-10,-8,-2,10,-6,5,-4,3,-6,-4,-6,-10,5,-8,10,-3,-1,-7,-7,8,4],[9,2,-9,2,5,10,-3,-7,-1,4,-9,7,6,7,-7,-9,2,-2,-10,-6,10,-10,-10,-5],[4,-7,2,3,9,-4,-2,7,-2,4,-1,7,-8,-6,4,1,1,-4,-5,-1,-6,3,5,1],[6,1,8,1,-5,-6,8,-10,7,-10,-9,-7,7,5,9,-1,-1,-4,-10,-5,-2,7,-8,7],[-9,8,-9,4,-6,-9,-5,1,1,-5,10,8,-2,-10,-10,-8,5,10,2,1,5,4,-8,-5],[10,-2,1,4,4,4,10,-6,7,-10,-10,-8,1,-4,-6,-10,1,1,-3,-5,-7,-5,-10,-6],[7,-5,-7,3,-4,-8,7,9,1,10,-4,-3,4,10,8,-1,1,1,1,-7,2,7,3,-5],[-7,8,-2,2,8,-1,7,-9,-10,-8,6,-7,-1,8,-2,10,-10,1,-9,9,7,4,-4,4],[-5,4,-10,-2,7,6,-4,1,7,9,6,-5,-8,9,-2,-5,-7,-2,1,-9,5,8,-4,-7],[-2,6,4,1,10,5,4,3,-10,10,1,10,7,-9,-6,1,-5,-5,10,-3,9,6,-2,7],[-4,-3,-6,-2,10,5,10,-5,-5,-3,10,7,6,3,2,9,-6,-2,-5,7,-8,5,-10,-10],[-3,-2,-1,-2,-4,-4,-4,-4,-7,-5,3,-10,-6,-10,7,1,-2,-3,-4,9,-10,8,-8,-4],[-1,9,-9,-8,4,-1,-5,-3,7,-2,-10,1,-6,4,1,10,5,7,-8,10,10,-5,4,-6],[3,-2,-8,3,-1,-1,4,-6,9,-4,-10,-1,8,9,-3,4,2,-8,-10,6,7,8,9,2],[-9,6,-3,-2,-2,-2,6,10,-2,8,-9,-7,-4,-10,9,2,10,-9,-5,-1,-10,10,1,-3],[8,6,10,6,8,-8,9,7,7,2,5,-7,-8,-2,-8,-1,8,6,3,-1,-7,10,-8,5],[10,-7,1,-3,-2,-8,-2,9,-10,-8,-6,-6,10,8,2,3,-1,1,6,-2,9,-1,1,-10],[6,4,9,-6,7,-6,9,2,-2,5,7,6,-7,4,8,1,-2,-7,-6,-9,-9,1,-6,2],[-8,-8,2,8,3,-9,5,-7,4,7,9,10,-1,-7,-6,9,-4,6,2,-9,-7,8,-8,-1],[10,-2,-4,-8,7,-5,4,4,2,-6,-5,9,-3,6,-3,6,4,4,-4,4,10,2,-5,2]], dtype = "int16")#candidate|7425|(36, 24)|const|int16
bop_7426 = relay.less(call_7373.astype('bool'), relay.reshape(const_7425.astype('bool'), relay.shape_of(call_7373))) # shape=(36, 24)
bop_7429 = relay.less(call_7374.astype('bool'), relay.reshape(const_7425.astype('bool'), relay.shape_of(call_7374))) # shape=(36, 24)
bop_7430 = relay.mod(bop_7426.astype('float32'), relay.reshape(var_7398.astype('float32'), relay.shape_of(bop_7426))) # shape=(36, 24)
bop_7433 = relay.mod(bop_7429.astype('float32'), relay.reshape(var_7398.astype('float32'), relay.shape_of(bop_7429))) # shape=(36, 24)
output = relay.Tuple([bop_7415,bop_7430,])
output2 = relay.Tuple([bop_7418,bop_7433,])
func_7434 = relay.Function([var_7398,], output)
mod['func_7434'] = func_7434
mod = relay.transform.InferType()(mod)
var_7435 = relay.var("var_7435", dtype = "int16", shape = (36, 24))#candidate|7435|(36, 24)|var|int16
output = func_7434(var_7435)
func_7436 = relay.Function([var_7435], output)
mutated_mod['func_7436'] = func_7436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5356_call = mod.get_global_var('func_5356')
func_5357_call = mutated_mod.get_global_var('func_5357')
call_7448 = relay.TupleGetItem(func_5356_call(), 1)
call_7449 = relay.TupleGetItem(func_5357_call(), 1)
func_3589_call = mod.get_global_var('func_3589')
func_3594_call = mutated_mod.get_global_var('func_3594')
var_7455 = relay.var("var_7455", dtype = "float64", shape = (1008,))#candidate|7455|(1008,)|var|float64
var_7456 = relay.var("var_7456", dtype = "float32", shape = (72,))#candidate|7456|(72,)|var|float32
var_7457 = relay.var("var_7457", dtype = "int8", shape = (52,))#candidate|7457|(52,)|var|int8
const_7458 = relay.const([-8.892248,3.326731,6.577373,8.942401,8.838284,-3.069246,-9.729246,-4.255672,1.419803,-1.436413,-3.047923,-8.534916,-4.951432,1.504121,-4.024557,8.623303,5.196896,8.918243,7.773653,-8.482756,-5.600287,3.898291,1.042302,-2.125008,8.216278,-8.614484,-9.909616,-9.383830,2.930851,-7.920399,4.122445,9.212661,-1.805139,-6.762863,2.243142,0.475472,5.112739,-3.439105,-8.615100,0.757011,-2.559587,-6.475091,-2.359540,6.637148,-0.162344,-6.072558,3.157804,7.175461,-6.066553,-1.606334,-6.752997,-3.080437,-3.700861,-0.717060,1.048136,4.593770,-6.845469,-0.279131,-5.263044,-6.752021,-9.107661,2.666323,-6.317429,2.195529,-4.592394,9.286014,9.917760,-1.661404,-5.350820,1.686322,-5.532966,3.086823,-6.774395,5.500630,8.073340,3.737266,-2.606680,-7.273366,6.041451,-7.605138,4.836118,-5.098728,9.966469,-6.459730,-4.934059,0.288951,-2.604757,0.310193,-7.410260,-3.546577,-2.421120,8.448271,-7.376135,-0.608324,-9.098329,2.904381,-4.331804,-4.868274,-8.742016,9.047205,-7.229741,7.114878,-5.990911,5.208558,6.942717,-4.404740,-2.447192,6.581431,8.683844,-0.604819,-4.801685,1.904930,-5.214704,-3.473660,9.191239,7.225842,-7.118105,-5.878502,4.231384,1.772944,6.112885,-2.228728,-0.264315,-3.536223,7.530418,0.206174,-2.926999,-3.731332,-5.054355,2.285688,0.735207,-4.578085,5.108780,-6.541899,-9.641387,-3.032623,9.401787,8.892327,-4.215707,-3.929626,6.378267,2.476085,-5.935640,-7.687764,-9.907939,-3.204267,-0.864140,4.474867,-1.746750,-3.096975,1.934914,-1.549279,6.119361,-6.119750,-9.680700,-0.439956,-7.710367,7.481200,1.440914,-8.409821,-9.498534,5.603333,4.657124,-8.362528,-8.489193,-0.488276,1.521851,3.732157,4.678056,-8.789719,-3.860197,2.354357,-7.068587,0.713330,-6.638231,8.045028,5.210204,7.147948,8.290713,-5.367495,-0.269520,-4.367142,7.697114,-2.871124,5.837955,-2.635001,4.734166,2.945684,6.027716,-0.912250,-7.462597,-1.241779,-2.029811,-9.034547,1.260689,-7.697163,5.258563,-7.930390,-4.072706,0.280453,4.639231,0.340710,2.487549,0.022289,6.410126,-6.440032,1.023435,2.795102,-9.430597,-9.962700,-1.220635,8.701708,9.170887,5.541901,2.791580,4.860506,-4.202940,4.711897,7.967712,-3.766489,-0.550016,-2.406928,8.562248,-2.241860,1.843754,-8.226134,7.593806,-5.900762,4.065275,-9.620479,-4.928249,5.628864,-3.424507,7.646977,4.123354,-9.317371,-3.786135,-4.364744,8.988873,-3.788608,5.951303,-7.301811,-2.432083,9.023845,-3.574835,-2.481329,6.620785,-5.540391,4.267079,-3.491255,2.140426,-0.633937,6.904688,-6.785879,0.579116,-5.665014,0.421389,7.281696,9.329573,3.790613,-9.342125,-0.066598,9.614249,9.919115,-4.835289,-8.757841,5.003558,-1.972613,3.986617,8.261995,6.889027,3.023629,-9.668676,-8.771986,6.019910,-0.663486,-9.229516,3.606223,8.303511,-4.042175,-9.418038,5.265475,9.655421,7.839743,-5.952461,-7.195608,-8.681471,-7.115398,-2.161199,-7.579660,-4.847310,-1.891691,0.189410,8.225136,-2.689068,3.926974,-7.847279,-4.012100,-0.866658,-2.017929,-5.925768,-9.825104,-3.380592,-9.058224,5.665122,-6.595732,7.079605,-7.740296,-2.353908,7.598496,4.146341,-0.330158,9.392537,-5.010625,-7.527906,9.255425,3.745966,8.796701,-1.797495,-9.408440,-8.272442,-1.466699,7.966298,-6.626209,-6.263978,2.035420,-5.717370,3.448732,-9.771409,6.379979,-2.640596,-4.180202,-6.020129,0.697907,5.643604,7.474741,-8.837217,6.202991,-0.193364,9.449163,7.434710,2.127934,-9.281878,7.934818,-7.274485,6.348801,1.536309,-4.275858,7.132400,6.997303,4.765444,-5.617511,-4.497936,-7.963176,-2.490896,7.918623,-3.331455,5.885299,3.574837,7.720325,-6.623303,-9.029798,-9.999395,8.983463,-6.322739,-9.510267,1.996936,7.380317,-5.034848,4.616438,0.676043,-9.552120,6.814652,5.891346,8.229493,-0.278376,0.869183,4.269267,5.006736,-7.473956,1.287930,3.536778,2.139365,-7.562763,-3.794325,-3.419116,-3.198238,0.300252,8.241136,-1.652049,-0.702675,-6.749788,1.472966,2.066105,-2.348072,-1.570904,0.225390,2.610449,-6.808939,-5.898469,1.621761,8.232252,-5.966887,0.496199,7.448303,-4.433252,-3.217634,6.150732,-7.899783,-2.852750,-7.095730,0.347154,-7.180688,9.879727,-5.182917,-3.839948,-6.775201,-1.780738,-6.502883,-7.664128,3.490775,5.883009,0.076859,-9.098300,-2.261604,0.467651,4.570059,-4.632179,9.898978,5.360728,0.961998,5.749961,8.558425,-9.342209,0.061432,8.120754,9.733310,-8.835795,9.314137,7.861090,9.508217,4.021952,1.204625,-2.357522,7.252277,-3.380086,1.945620,-2.047512,9.733647,2.669808,-4.797008,-8.714240,1.212213,-9.272665,3.871090,-1.161626,-1.386156,3.558333,6.830860,-3.117782,2.731776,-3.390722,-0.253040,0.137861,5.829785,-5.025521,7.356620,-3.304714,7.124564,-0.326339,-2.188571,7.153580,-8.042624,-7.667062,2.034142,-7.339578,1.874655,9.882779,7.865867,-0.370333], dtype = "float64")#candidate|7458|(480,)|const|float64
call_7454 = relay.TupleGetItem(func_3589_call(relay.reshape(var_7455.astype('float64'), [1008,]), relay.reshape(var_7456.astype('float32'), [72,]), relay.reshape(var_7457.astype('int8'), [52, 1]), relay.reshape(const_7458.astype('float64'), [480,]), ), 3)
call_7459 = relay.TupleGetItem(func_3594_call(relay.reshape(var_7455.astype('float64'), [1008,]), relay.reshape(var_7456.astype('float32'), [72,]), relay.reshape(var_7457.astype('int8'), [52, 1]), relay.reshape(const_7458.astype('float64'), [480,]), ), 3)
func_5240_call = mod.get_global_var('func_5240')
func_5244_call = mutated_mod.get_global_var('func_5244')
const_7462 = relay.const([6,6,-2,-3,-5,-4,1,-1,-5,3,-4,-6,10,-7,3,-10,7,2,9,8,6,4,-1,2,-5,-10,5,-1,1,5,2,-5,-1,10,2,-3,-2,-6,1,1,-3,3,6,-3,6,2,-5,-8,-4,6,8,6,6,3,10,-3,4,2,-4,8,5,7,-9,-8,-5,10,-4,3,8,7,-9,-2,-8,2,9,9,2,-6,3,3,-10,1,-7,6,-10,5,5,10,-10,-3,-4,3,-2,-6,-4,-3,2,-8,10,-6,7,10,7,-5,-4,-5,3,-6,-8,-10,-3,-7,-6,-4,1,7,-1,1,-6,-4,5,1,-9,2,3,-2,-4,-9,-5,9,3,5,-2,4,5,10,-9,-9,-2,-8,3,-9,-10,-9,1,1,3,-10,4,-5,-1,-8,-8,1,-8,-4,10,9,-2,-2,-6,9,-3,-8,-4,-6,10,7,1,-9,-8,1,6,5,8,-3,4,-8,4,2,9,-4,3,8,-3,2,-9,9,-3,-3,4,5,-9,-5,-9,2,-6,-8,8,-1,-10,-2,6,-4,8,9,-5,-1,9,9,2,7,-6,5,8,6,-10,7,-2,6,8,3,2,-10,-10,1,8,10,-5,-1,2,3,8,2,2,-1,5,-6,9,-2,-2,-1,-2,-6,5,-10,-7,-10,4,4,-2,-6,10,-8,5,10,-2,2,1,1,-7,4,5,-6,8,2,-6,8,10,7,-5,-5,-7,1,4,3,-6,-3,2,9,-1,9,1,7,3,-9,2,-5,10,8,-1,-5,-9,7,10,-9,-1,10,8,-5,3,9,-9,-6,-2,3,5,-8,8,4,-5,1,-5,-10,-10,4,-1,1,-7,9,1,-1,-1,9,-8,7,9,-1,-1,-7,-8,-8,-4,-10,-6,-10,-10,3,4,1,6,7,-8,-8,-1,-3,6,9,10,10,-6,-5,3,-8,-10,1,6,9,-6,2,2,6,7,-7,-5,-5,9,-9,-5,-1,5,9,2,5,7,-5,3,6,-1,6,-1,-8,10,3,6,10,-8,1,9,9,-5,4,8,-9,6,-6,8,-5,3,4,4,1,5,3,9,-1,-6,2,6,4,7,-8,4,-1,-3,-6,-9,2,-8,9,7,-2,4,1,-3,1,-7,-3,2,9,9,4,-4,-3,9,2,9,-3,5,-4,-8,-8,-3,5,-5,3,-2,5,1,-8,9,10,-1,-2,6,-7,-10,-1,-6,-10,-3,-8,-10,-10,-10,-5,8,8,8,-8,-5,-9,1,-9,6,-9,-4,3,9,-9,4,7,-7,3,-4,-10,-7,-5,-10,-5,-4,7,-1,-4,-8,9,-6,1,-1,1,-5,-8,3,-1,6,1,-10,9,-1,-10,-7,8,-5,-7,5,-4,10,-5,5,-3,-1,2,5,1,-6,4,9,-7,4,1,-1,-10,-6,1,10,-2,-10,-10,-6,10,3,-5,7,5,5,9,-2,6,-5,-1,3,-5,8,6,8,7,-10,-2,-6,8,-4,9,9,3,-2,-6,8,8,9,-1,1,-8,4,-2,10,4,-9,9,-8,-2,7,-7,-1,2,-10,7,-2,-6,9,-9,-8,-3,3,4,4,-4,-4,-5,-6,5,9,9,10,-2,-3,-8,-1,5,2,-7,-5,-7,-2,4,-9,-3,-10,4,10,-1,-6,-2,-9,-2,8,9,-2,10,9,1,-2,8,9,-4,-7,-1,-3,1,10,4,5,-1,10,-9,5,8,-6,-3,-10,7,-1,4,1,-7,7,1,7,-8,-3,-7,-9,-8,-5,4,-8,-5,-9,-5,2,-3,5,2,-4,-10,-9,7,-4,-5,-6,4,-1,-6,-10,1,5,5,-6,4,9,-6,1,-6,-8,5,1,-1,10,3,8,-2,-5,-5,-3,-2,-10,-1,-2,7,-8,-6,-2,1,4,-2,7,-7,10,-7,8,-7,8,3,-3,-1,-3,-3,-4,6,10,10,1,-2,-9,6,-8,8,-9,5,-1,6,-3,-10,-5,7,-4,3,-4,8,5,1,-9,9,-9,-1,-3,6], dtype = "uint16")#candidate|7462|(756,)|const|uint16
const_7463 = relay.const([[2,-3,-8,-2,4,-4,-3,10,8,-8,9,-8,9,8,4,3,9,-6,5,-2,5,7,-6,-6,6,-9,1,6,5,-5,-9,6,2,-4,9,7,3,2,2,4,-3,3,-2,3,4,-4,-6,-2,4,9,-4,-5],[-2,-6,6,-2,-3,-4,-5,-2,-7,-5,-9,-3,-3,-4,9,-3,10,-3,7,7,2,7,-2,-10,5,2,-2,-7,-9,3,-4,-9,6,-1,9,5,1,1,-10,2,4,-9,1,3,-9,-8,-5,-7,8,3,6,-1],[9,2,-2,-7,8,-5,4,-1,-6,-7,-5,-9,-10,10,-2,5,-2,-1,1,3,3,-2,-7,1,-9,4,3,-7,-8,3,10,1,4,8,-1,-9,-8,3,-2,-7,-7,7,6,4,-2,4,-4,-6,9,6,-7,-6],[5,-8,-8,-10,-8,6,2,10,9,-10,10,-3,-1,3,-5,-1,-10,7,-6,4,7,-9,-10,-5,-4,-1,-10,-5,3,-9,9,-9,10,9,-5,1,-3,-1,9,1,2,8,-6,4,-3,8,-4,-10,-4,-2,6,-1],[4,-3,1,-6,5,4,7,3,-3,-3,-9,-5,4,2,-3,-10,-8,-9,6,-3,-9,4,-6,-7,9,8,-3,-3,-2,-8,1,-1,-10,9,6,-8,-8,1,1,-3,-10,-10,-5,1,-7,2,8,6,-4,3,-6,4],[-3,-8,-5,-5,-5,7,6,-7,8,1,-3,-3,2,4,6,4,5,4,-4,-4,-1,-8,8,10,-7,1,9,-4,9,-1,-7,4,6,9,-6,8,3,-4,3,8,-8,7,-2,-10,-10,8,5,-7,-2,2,1,-5],[8,-5,7,1,2,-3,-3,-9,-4,-8,3,-2,4,-4,4,9,-1,4,-10,5,5,10,1,-8,-8,-7,-6,7,5,-4,1,2,10,3,-1,5,4,-3,-5,-1,-1,-6,-9,6,-4,-2,6,8,10,-7,8,6]], dtype = "int8")#candidate|7463|(7, 52)|const|int8
call_7461 = relay.TupleGetItem(func_5240_call(relay.reshape(const_7462.astype('uint16'), [12, 9, 7]), relay.reshape(const_7463.astype('int8'), [364,]), relay.reshape(var_7455.astype('float64'), [1008,]), ), 2)
call_7464 = relay.TupleGetItem(func_5244_call(relay.reshape(const_7462.astype('uint16'), [12, 9, 7]), relay.reshape(const_7463.astype('int8'), [364,]), relay.reshape(var_7455.astype('float64'), [1008,]), ), 2)
output = relay.Tuple([call_7448,call_7454,var_7455,var_7456,var_7457,const_7458,call_7461,const_7462,const_7463,])
output2 = relay.Tuple([call_7449,call_7459,var_7455,var_7456,var_7457,const_7458,call_7464,const_7462,const_7463,])
func_7489 = relay.Function([var_7455,var_7456,var_7457,], output)
mod['func_7489'] = func_7489
mod = relay.transform.InferType()(mod)
mutated_mod['func_7489'] = func_7489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7489_call = mutated_mod.get_global_var('func_7489')
var_7491 = relay.var("var_7491", dtype = "float64", shape = (1008,))#candidate|7491|(1008,)|var|float64
var_7492 = relay.var("var_7492", dtype = "float32", shape = (72,))#candidate|7492|(72,)|var|float32
var_7493 = relay.var("var_7493", dtype = "int8", shape = (52,))#candidate|7493|(52,)|var|int8
call_7490 = func_7489_call(var_7491,var_7492,var_7493,)
output = call_7490
func_7494 = relay.Function([var_7491,var_7492,var_7493,], output)
mutated_mod['func_7494'] = func_7494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7068_call = mod.get_global_var('func_7068')
func_7069_call = mutated_mod.get_global_var('func_7069')
call_7557 = func_7068_call()
call_7558 = func_7068_call()
uop_7568 = relay.log(call_7557.astype('float32')) # shape=(4, 9, 4)
uop_7570 = relay.log(call_7558.astype('float32')) # shape=(4, 9, 4)
output = relay.Tuple([uop_7568,])
output2 = relay.Tuple([uop_7570,])
func_7572 = relay.Function([], output)
mod['func_7572'] = func_7572
mod = relay.transform.InferType()(mod)
output = func_7572()
func_7573 = relay.Function([], output)
mutated_mod['func_7573'] = func_7573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3180_call = mod.get_global_var('func_3180')
func_3181_call = mutated_mod.get_global_var('func_3181')
call_7619 = func_3180_call()
call_7620 = func_3180_call()
func_6491_call = mod.get_global_var('func_6491')
func_6493_call = mutated_mod.get_global_var('func_6493')
call_7669 = relay.TupleGetItem(func_6491_call(), 0)
call_7670 = relay.TupleGetItem(func_6493_call(), 0)
func_7197_call = mod.get_global_var('func_7197')
func_7199_call = mutated_mod.get_global_var('func_7199')
call_7673 = relay.TupleGetItem(func_7197_call(relay.reshape(call_7669.astype('int8'), [364,])), 0)
call_7674 = relay.TupleGetItem(func_7199_call(relay.reshape(call_7669.astype('int8'), [364,])), 0)
output = relay.Tuple([call_7619,call_7669,call_7673,])
output2 = relay.Tuple([call_7620,call_7670,call_7674,])
func_7677 = relay.Function([], output)
mod['func_7677'] = func_7677
mod = relay.transform.InferType()(mod)
mutated_mod['func_7677'] = func_7677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7677_call = mutated_mod.get_global_var('func_7677')
call_7678 = func_7677_call()
output = call_7678
func_7679 = relay.Function([], output)
mutated_mod['func_7679'] = func_7679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6551_call = mod.get_global_var('func_6551')
func_6553_call = mutated_mod.get_global_var('func_6553')
call_7727 = relay.TupleGetItem(func_6551_call(), 0)
call_7728 = relay.TupleGetItem(func_6553_call(), 0)
func_5846_call = mod.get_global_var('func_5846')
func_5848_call = mutated_mod.get_global_var('func_5848')
var_7750 = relay.var("var_7750", dtype = "int64", shape = (52,))#candidate|7750|(52,)|var|int64
call_7749 = relay.TupleGetItem(func_5846_call(relay.reshape(var_7750.astype('int64'), [52,])), 0)
call_7751 = relay.TupleGetItem(func_5848_call(relay.reshape(var_7750.astype('int64'), [52,])), 0)
uop_7765 = relay.atan(var_7750.astype('float64')) # shape=(52,)
func_5142_call = mod.get_global_var('func_5142')
func_5146_call = mutated_mod.get_global_var('func_5146')
const_7769 = relay.const([-1.736347,1.056991,2.794116,-1.913969,-2.366067,-4.349224,-8.225137,1.654655,9.408075,8.004190,2.100849,1.794664,-2.158523,-2.020581,5.240476,-6.685536,-2.874735,-0.046695,-9.524109,5.948468,6.777906,8.855683,-5.829017,-0.798744,6.557972,-5.698119,-2.859765,-2.681993,0.094739,-3.236411,-2.176283,-9.026262,1.286021,-7.382449,6.567246,-0.959715,6.017170,-2.651247,-5.004664,-4.972567,-8.903720,7.637664,-6.454405,0.643858,-9.639673,-7.102906,-3.249954,1.888810,8.568070,0.172144,7.243317,-8.342678,1.444347,0.741423,1.946328,2.648180], dtype = "float64")#candidate|7769|(56,)|const|float64
call_7768 = relay.TupleGetItem(func_5142_call(relay.reshape(const_7769.astype('float64'), [56,]), relay.reshape(call_7727.astype('bool'), [4, 9, 4]), ), 1)
call_7770 = relay.TupleGetItem(func_5146_call(relay.reshape(const_7769.astype('float64'), [56,]), relay.reshape(call_7727.astype('bool'), [4, 9, 4]), ), 1)
output = relay.Tuple([call_7727,call_7749,uop_7765,call_7768,const_7769,])
output2 = relay.Tuple([call_7728,call_7751,uop_7765,call_7770,const_7769,])
func_7783 = relay.Function([var_7750,], output)
mod['func_7783'] = func_7783
mod = relay.transform.InferType()(mod)
var_7784 = relay.var("var_7784", dtype = "int64", shape = (52,))#candidate|7784|(52,)|var|int64
output = func_7783(var_7784)
func_7785 = relay.Function([var_7784], output)
mutated_mod['func_7785'] = func_7785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4717_call = mod.get_global_var('func_4717')
func_4718_call = mutated_mod.get_global_var('func_4718')
call_7822 = relay.TupleGetItem(func_4717_call(), 0)
call_7823 = relay.TupleGetItem(func_4718_call(), 0)
output = relay.Tuple([call_7822,])
output2 = relay.Tuple([call_7823,])
func_7843 = relay.Function([], output)
mod['func_7843'] = func_7843
mod = relay.transform.InferType()(mod)
mutated_mod['func_7843'] = func_7843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7843_call = mutated_mod.get_global_var('func_7843')
call_7844 = func_7843_call()
output = call_7844
func_7845 = relay.Function([], output)
mutated_mod['func_7845'] = func_7845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6144_call = mod.get_global_var('func_6144')
func_6146_call = mutated_mod.get_global_var('func_6146')
call_7846 = relay.TupleGetItem(func_6144_call(), 0)
call_7847 = relay.TupleGetItem(func_6146_call(), 0)
func_2152_call = mod.get_global_var('func_2152')
func_2157_call = mutated_mod.get_global_var('func_2157')
var_7856 = relay.var("var_7856", dtype = "float64", shape = (40, 12))#candidate|7856|(40, 12)|var|float64
var_7857 = relay.var("var_7857", dtype = "int8", shape = (26, 2))#candidate|7857|(26, 2)|var|int8
call_7855 = relay.TupleGetItem(func_2152_call(relay.reshape(var_7856.astype('float64'), [15, 2, 16]), relay.reshape(var_7856.astype('float64'), [15, 2, 16]), relay.reshape(var_7857.astype('int8'), [52,]), ), 3)
call_7858 = relay.TupleGetItem(func_2157_call(relay.reshape(var_7856.astype('float64'), [15, 2, 16]), relay.reshape(var_7856.astype('float64'), [15, 2, 16]), relay.reshape(var_7857.astype('int8'), [52,]), ), 3)
func_6512_call = mod.get_global_var('func_6512')
func_6513_call = mutated_mod.get_global_var('func_6513')
call_7865 = func_6512_call()
call_7866 = func_6512_call()
var_7883 = relay.var("var_7883", dtype = "float64", shape = (40, 12))#candidate|7883|(40, 12)|var|float64
bop_7884 = relay.left_shift(var_7856.astype('int16'), relay.reshape(var_7883.astype('int16'), relay.shape_of(var_7856))) # shape=(40, 12)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_7889 = func_3112_call()
call_7890 = func_3112_call()
output = relay.Tuple([call_7846,call_7855,var_7857,call_7865,bop_7884,call_7889,])
output2 = relay.Tuple([call_7847,call_7858,var_7857,call_7866,bop_7884,call_7890,])
func_7898 = relay.Function([var_7856,var_7857,var_7883,], output)
mod['func_7898'] = func_7898
mod = relay.transform.InferType()(mod)
mutated_mod['func_7898'] = func_7898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7898_call = mutated_mod.get_global_var('func_7898')
var_7900 = relay.var("var_7900", dtype = "float64", shape = (40, 12))#candidate|7900|(40, 12)|var|float64
var_7901 = relay.var("var_7901", dtype = "int8", shape = (26, 2))#candidate|7901|(26, 2)|var|int8
var_7902 = relay.var("var_7902", dtype = "float64", shape = (40, 12))#candidate|7902|(40, 12)|var|float64
call_7899 = func_7898_call(var_7900,var_7901,var_7902,)
output = call_7899
func_7903 = relay.Function([var_7900,var_7901,var_7902,], output)
mutated_mod['func_7903'] = func_7903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3526_call = mod.get_global_var('func_3526')
func_3527_call = mutated_mod.get_global_var('func_3527')
call_7915 = relay.TupleGetItem(func_3526_call(), 0)
call_7916 = relay.TupleGetItem(func_3527_call(), 0)
output = relay.Tuple([call_7915,])
output2 = relay.Tuple([call_7916,])
func_7917 = relay.Function([], output)
mod['func_7917'] = func_7917
mod = relay.transform.InferType()(mod)
mutated_mod['func_7917'] = func_7917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7917_call = mutated_mod.get_global_var('func_7917')
call_7918 = func_7917_call()
output = call_7918
func_7919 = relay.Function([], output)
mutated_mod['func_7919'] = func_7919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4218_call = mod.get_global_var('func_4218')
func_4220_call = mutated_mod.get_global_var('func_4220')
call_7939 = func_4218_call()
call_7940 = func_4218_call()
output = relay.Tuple([call_7939,])
output2 = relay.Tuple([call_7940,])
func_7948 = relay.Function([], output)
mod['func_7948'] = func_7948
mod = relay.transform.InferType()(mod)
output = func_7948()
func_7949 = relay.Function([], output)
mutated_mod['func_7949'] = func_7949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_7966 = func_3819_call()
call_7967 = func_3819_call()
func_6310_call = mod.get_global_var('func_6310')
func_6311_call = mutated_mod.get_global_var('func_6311')
call_7970 = func_6310_call()
call_7971 = func_6310_call()
func_7677_call = mod.get_global_var('func_7677')
func_7679_call = mutated_mod.get_global_var('func_7679')
call_7987 = relay.TupleGetItem(func_7677_call(), 0)
call_7988 = relay.TupleGetItem(func_7679_call(), 0)
output = relay.Tuple([call_7966,call_7970,call_7987,])
output2 = relay.Tuple([call_7967,call_7971,call_7988,])
func_8009 = relay.Function([], output)
mod['func_8009'] = func_8009
mod = relay.transform.InferType()(mod)
mutated_mod['func_8009'] = func_8009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8009_call = mutated_mod.get_global_var('func_8009')
call_8010 = func_8009_call()
output = call_8010
func_8011 = relay.Function([], output)
mutated_mod['func_8011'] = func_8011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5688_call = mod.get_global_var('func_5688')
func_5690_call = mutated_mod.get_global_var('func_5690')
call_8025 = relay.TupleGetItem(func_5688_call(), 0)
call_8026 = relay.TupleGetItem(func_5690_call(), 0)
output = relay.Tuple([call_8025,])
output2 = relay.Tuple([call_8026,])
func_8028 = relay.Function([], output)
mod['func_8028'] = func_8028
mod = relay.transform.InferType()(mod)
output = func_8028()
func_8029 = relay.Function([], output)
mutated_mod['func_8029'] = func_8029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7948_call = mod.get_global_var('func_7948')
func_7949_call = mutated_mod.get_global_var('func_7949')
call_8151 = relay.TupleGetItem(func_7948_call(), 0)
call_8152 = relay.TupleGetItem(func_7949_call(), 0)
var_8162 = relay.var("var_8162", dtype = "float64", shape = (4, 9, 4))#candidate|8162|(4, 9, 4)|var|float64
bop_8163 = relay.floor_divide(call_8151.astype('float64'), relay.reshape(var_8162.astype('float64'), relay.shape_of(call_8151))) # shape=(4, 9, 4)
bop_8166 = relay.floor_divide(call_8152.astype('float64'), relay.reshape(var_8162.astype('float64'), relay.shape_of(call_8152))) # shape=(4, 9, 4)
uop_8172 = relay.cos(call_8151.astype('float64')) # shape=(4, 9, 4)
uop_8174 = relay.cos(call_8152.astype('float64')) # shape=(4, 9, 4)
output = relay.Tuple([bop_8163,uop_8172,])
output2 = relay.Tuple([bop_8166,uop_8174,])
func_8177 = relay.Function([var_8162,], output)
mod['func_8177'] = func_8177
mod = relay.transform.InferType()(mod)
mutated_mod['func_8177'] = func_8177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8178 = relay.var("var_8178", dtype = "float64", shape = (4, 9, 4))#candidate|8178|(4, 9, 4)|var|float64
func_8177_call = mutated_mod.get_global_var('func_8177')
call_8179 = func_8177_call(var_8178)
output = call_8179
func_8180 = relay.Function([var_8178], output)
mutated_mod['func_8180'] = func_8180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6310_call = mod.get_global_var('func_6310')
func_6311_call = mutated_mod.get_global_var('func_6311')
call_8196 = func_6310_call()
call_8197 = func_6310_call()
output = call_8196
output2 = call_8197
func_8210 = relay.Function([], output)
mod['func_8210'] = func_8210
mod = relay.transform.InferType()(mod)
mutated_mod['func_8210'] = func_8210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8210_call = mutated_mod.get_global_var('func_8210')
call_8211 = func_8210_call()
output = call_8211
func_8212 = relay.Function([], output)
mutated_mod['func_8212'] = func_8212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7309_call = mod.get_global_var('func_7309')
func_7311_call = mutated_mod.get_global_var('func_7311')
call_8293 = relay.TupleGetItem(func_7309_call(), 0)
call_8294 = relay.TupleGetItem(func_7311_call(), 0)
func_6175_call = mod.get_global_var('func_6175')
func_6177_call = mutated_mod.get_global_var('func_6177')
call_8301 = func_6175_call()
call_8302 = func_6175_call()
output = relay.Tuple([call_8293,call_8301,])
output2 = relay.Tuple([call_8294,call_8302,])
func_8321 = relay.Function([], output)
mod['func_8321'] = func_8321
mod = relay.transform.InferType()(mod)
output = func_8321()
func_8322 = relay.Function([], output)
mutated_mod['func_8322'] = func_8322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6512_call = mod.get_global_var('func_6512')
func_6513_call = mutated_mod.get_global_var('func_6513')
call_8355 = func_6512_call()
call_8356 = func_6512_call()
output = call_8355
output2 = call_8356
func_8379 = relay.Function([], output)
mod['func_8379'] = func_8379
mod = relay.transform.InferType()(mod)
output = func_8379()
func_8380 = relay.Function([], output)
mutated_mod['func_8380'] = func_8380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4218_call = mod.get_global_var('func_4218')
func_4220_call = mutated_mod.get_global_var('func_4220')
call_8447 = func_4218_call()
call_8448 = func_4218_call()
var_8453 = relay.var("var_8453", dtype = "float64", shape = (4, 9, 4))#candidate|8453|(4, 9, 4)|var|float64
bop_8454 = relay.floor_mod(call_8447.astype('float64'), relay.reshape(var_8453.astype('float64'), relay.shape_of(call_8447))) # shape=(4, 9, 4)
bop_8457 = relay.floor_mod(call_8448.astype('float64'), relay.reshape(var_8453.astype('float64'), relay.shape_of(call_8448))) # shape=(4, 9, 4)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
const_8467 = relay.const([-4.445382], dtype = "float32")#candidate|8467|(1,)|const|float32
call_8466 = func_2708_call(relay.reshape(const_8467.astype('float32'), [1, 1, 1]))
call_8468 = func_2708_call(relay.reshape(const_8467.astype('float32'), [1, 1, 1]))
func_6175_call = mod.get_global_var('func_6175')
func_6177_call = mutated_mod.get_global_var('func_6177')
call_8503 = func_6175_call()
call_8504 = func_6175_call()
output = relay.Tuple([bop_8454,call_8466,const_8467,call_8503,])
output2 = relay.Tuple([bop_8457,call_8468,const_8467,call_8504,])
func_8529 = relay.Function([var_8453,], output)
mod['func_8529'] = func_8529
mod = relay.transform.InferType()(mod)
var_8530 = relay.var("var_8530", dtype = "float64", shape = (4, 9, 4))#candidate|8530|(4, 9, 4)|var|float64
output = func_8529(var_8530)
func_8531 = relay.Function([var_8530], output)
mutated_mod['func_8531'] = func_8531
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8549 = relay.var("var_8549", dtype = "float64", shape = ())#candidate|8549|()|var|float64
var_8550 = relay.var("var_8550", dtype = "float64", shape = (16, 13, 9))#candidate|8550|(16, 13, 9)|var|float64
bop_8551 = relay.power(var_8549.astype('float64'), var_8550.astype('float64')) # shape=(16, 13, 9)
output = relay.Tuple([bop_8551,])
output2 = relay.Tuple([bop_8551,])
func_8555 = relay.Function([var_8549,var_8550,], output)
mod['func_8555'] = func_8555
mod = relay.transform.InferType()(mod)
var_8556 = relay.var("var_8556", dtype = "float64", shape = ())#candidate|8556|()|var|float64
var_8557 = relay.var("var_8557", dtype = "float64", shape = (16, 13, 9))#candidate|8557|(16, 13, 9)|var|float64
output = func_8555(var_8556,var_8557,)
func_8558 = relay.Function([var_8556,var_8557,], output)
mutated_mod['func_8558'] = func_8558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8581 = relay.var("var_8581", dtype = "float64", shape = (7, 4, 1))#candidate|8581|(7, 4, 1)|var|float64
uop_8582 = relay.atan(var_8581.astype('float64')) # shape=(7, 4, 1)
output = relay.Tuple([uop_8582,])
output2 = relay.Tuple([uop_8582,])
func_8594 = relay.Function([var_8581,], output)
mod['func_8594'] = func_8594
mod = relay.transform.InferType()(mod)
var_8595 = relay.var("var_8595", dtype = "float64", shape = (7, 4, 1))#candidate|8595|(7, 4, 1)|var|float64
output = func_8594(var_8595)
func_8596 = relay.Function([var_8595], output)
mutated_mod['func_8596'] = func_8596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5356_call = mod.get_global_var('func_5356')
func_5357_call = mutated_mod.get_global_var('func_5357')
call_8628 = relay.TupleGetItem(func_5356_call(), 0)
call_8629 = relay.TupleGetItem(func_5357_call(), 0)
output = relay.Tuple([call_8628,])
output2 = relay.Tuple([call_8629,])
func_8642 = relay.Function([], output)
mod['func_8642'] = func_8642
mod = relay.transform.InferType()(mod)
output = func_8642()
func_8643 = relay.Function([], output)
mutated_mod['func_8643'] = func_8643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7309_call = mod.get_global_var('func_7309')
func_7311_call = mutated_mod.get_global_var('func_7311')
call_8702 = relay.TupleGetItem(func_7309_call(), 0)
call_8703 = relay.TupleGetItem(func_7311_call(), 0)
func_3002_call = mod.get_global_var('func_3002')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_8708 = func_3002_call()
call_8709 = func_3002_call()
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_8736 = func_3819_call()
call_8737 = func_3819_call()
func_6031_call = mod.get_global_var('func_6031')
func_6034_call = mutated_mod.get_global_var('func_6034')
const_8740 = relay.const([[8.591871,6.589844,2.075806,2.099934,-3.586121,8.414849,-1.226813,-2.630536,-6.913116,-4.673830,-0.895679,2.514244,8.584660,1.724599,7.212314,0.070495,-9.805965,0.507063,5.786731,-6.253899,7.775630,8.358948,8.125266,5.585134,5.262683,8.584467,8.329988,9.299371,3.711985,-7.659345,-2.180671,9.822271,3.586356,5.711781,-0.416478,-0.426746,2.680350,0.946323,0.634456,-0.891355,-5.885106,0.165901,-6.246114,0.543188,3.203717,-8.242983,7.665638,-9.832651,8.801288,-9.780504,8.976848,4.257363,-1.945152,-1.293637,-2.167992,-7.283600,-5.624449,-9.108319,-7.726093,-9.774927,8.871761,-3.055346,-0.616830,2.229065,-9.206458,7.712464,-2.836203,-4.274383,-1.141806,8.785226,-5.025665,2.140902,0.284797,7.113451,8.959971,9.475407,1.073026,-4.920429,1.425011,0.454027,9.794643,6.740283,1.018711,-2.539153,-5.043176,-4.106241,2.197640,8.717729,2.873679,9.484089,-6.880102,-2.866888,-0.735477,-4.893089,-5.211860,4.285242,-8.963191,-2.207245,-5.815007,9.709187,-0.503287,8.339408,-2.118379,-2.961642,-3.181314,-5.216343,-9.460998,-3.795351,1.604247,-9.596329,-1.541409,5.786252,6.565053,-4.415608,-6.944658,-3.475437,-1.456866,3.350431,1.509541,-6.775024,5.804063,-8.282262,4.276265,-0.192472,4.796365,8.788366,-7.766275,6.170758,-5.580749,6.309844,0.790141,6.547340,-2.695496,-4.766973,-7.782333,4.243511,-0.058594,7.304253,-2.163061,-4.098874,4.338799,3.640548,7.436007,1.225977,-0.371317,-3.863479,-7.468184,6.262958,-4.084201,-9.223367,5.824338,-5.553549,-5.768284,5.374691,0.372313,-8.241964,5.957258,-9.952529,-7.568124,-6.404256,7.881277,0.138469,-4.809483,-6.491251,-3.714905,3.924548,-6.096309,0.779539,-5.406639,6.831980,6.898892,-8.292194,3.912175,4.142216,-3.988183,-4.701185,-7.910129,1.140543,3.177467,-7.481030,5.965336,0.777840,1.435692,-1.683024,3.145269,-5.040919,9.222963,-3.861494,6.463650,1.987202,4.441367,8.152840,9.237783,8.355009,-3.057634,-6.768294,5.235391,9.696391,4.471409,-2.705988,2.537727,7.348934,7.187149,9.016941,1.039791,-2.467353,1.615732,-6.856924,6.650634,8.120218,3.872715,5.883904,4.251152,-7.753710,-1.498257,6.547675,1.107439,-9.779121,-0.234964,4.547806,-8.616518,6.837869,-0.899252,-0.443608,3.076497,9.082318,-4.974850,2.944760,-9.385053,-3.650283,5.935142,-7.368447,-3.220973,7.900569,1.786624,-3.567579,4.086644,0.377134,8.861208,3.536193],[7.524929,-7.614873,2.529433,3.176223,4.930620,-0.765107,8.135445,1.336198,4.085782,1.944991,3.301433,9.134333,2.245507,-6.285056,-4.462400,4.606498,0.836412,2.903680,9.699193,-7.391347,-3.635628,5.980148,0.681142,9.878028,-4.339300,0.826052,-4.974739,-0.615688,8.124976,1.068899,-7.351478,7.430746,-4.582505,-3.684951,6.701406,-5.663635,4.645920,-0.598854,-8.790293,4.688764,-7.116422,-8.604672,2.765401,-2.684409,-6.940724,4.830888,-0.182975,-1.935496,4.229840,-7.502983,4.262865,5.953255,2.815156,3.866578,3.169506,-8.264165,-3.079909,4.088478,3.657388,-3.104786,1.838203,-4.709944,2.355333,-7.838474,7.332649,5.536942,1.032035,9.449449,-3.479340,-8.066700,0.301975,0.301928,0.475115,-4.200063,-0.326714,-9.767720,-1.664406,3.719569,6.775520,-7.485001,6.134839,3.461867,-3.430359,9.996509,-1.051827,9.300258,-0.139428,8.647142,0.968451,-4.963248,-9.122771,9.494624,1.302663,-9.049827,-8.752854,9.158838,4.968798,-9.866836,2.767460,-8.032380,4.276159,1.291547,4.416573,1.365124,-1.681139,-4.276336,9.757479,5.159164,7.796022,3.213466,8.572820,5.402891,-6.877146,-2.774284,8.775536,1.585251,-9.189448,-1.093370,1.011515,-3.796561,2.579996,-4.806058,-3.013757,8.379022,-5.946276,9.805729,2.523600,-0.499514,-0.762212,0.777566,5.589264,-3.166457,3.634324,2.515865,6.727990,2.739157,9.431749,4.256869,8.847279,8.118109,4.888521,3.215600,6.142952,-8.760915,8.081260,1.086021,-2.191689,-9.709846,-9.229638,-0.840462,-7.742413,-9.791542,-1.458471,5.834764,-5.959091,2.005634,-1.943721,-2.919559,-6.418555,6.710028,-9.531885,-2.105237,0.720764,-9.950063,5.604922,2.437794,-8.228010,7.782234,7.940055,5.537395,3.262715,1.095619,5.952192,5.339390,1.933469,9.229923,9.452824,-2.573437,1.085649,-1.441455,-1.665374,-4.127420,3.598342,3.173400,-1.660234,-7.801866,4.334129,1.600658,1.470240,-1.796671,-9.653896,-9.639086,6.745030,-5.224450,8.087734,4.637549,-2.331151,3.009792,4.694681,-2.012545,2.782686,4.054314,-2.519677,6.215795,3.206174,-9.883524,-3.865614,7.464147,-7.934017,-8.427497,-7.305960,1.830671,7.027450,-5.130108,2.768805,-6.084804,9.085068,0.462698,4.504002,6.415455,-3.708716,-0.763291,-1.314172,-4.139526,8.246523,2.060593,4.182583,-7.683733,6.561083,5.134958,5.410189,0.436023,-3.333715,-8.585354,2.306169,-4.624467,-4.728343,-4.881799,8.612458,2.970713]], dtype = "float64")#candidate|8740|(2, 240)|const|float64
call_8739 = relay.TupleGetItem(func_6031_call(relay.reshape(const_8740.astype('float64'), [480,])), 3)
call_8741 = relay.TupleGetItem(func_6034_call(relay.reshape(const_8740.astype('float64'), [480,])), 3)
output = relay.Tuple([call_8702,call_8708,call_8736,call_8739,const_8740,])
output2 = relay.Tuple([call_8703,call_8709,call_8737,call_8741,const_8740,])
func_8745 = relay.Function([], output)
mod['func_8745'] = func_8745
mod = relay.transform.InferType()(mod)
mutated_mod['func_8745'] = func_8745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8745_call = mutated_mod.get_global_var('func_8745')
call_8746 = func_8745_call()
output = call_8746
func_8747 = relay.Function([], output)
mutated_mod['func_8747'] = func_8747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7309_call = mod.get_global_var('func_7309')
func_7311_call = mutated_mod.get_global_var('func_7311')
call_8791 = relay.TupleGetItem(func_7309_call(), 0)
call_8792 = relay.TupleGetItem(func_7311_call(), 0)
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_8801 = func_3796_call()
call_8802 = func_3796_call()
output = relay.Tuple([call_8791,call_8801,])
output2 = relay.Tuple([call_8792,call_8802,])
func_8819 = relay.Function([], output)
mod['func_8819'] = func_8819
mod = relay.transform.InferType()(mod)
output = func_8819()
func_8820 = relay.Function([], output)
mutated_mod['func_8820'] = func_8820
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8872 = relay.var("var_8872", dtype = "int64", shape = ())#candidate|8872|()|var|int64
var_8873 = relay.var("var_8873", dtype = "int64", shape = (7, 6, 1))#candidate|8873|(7, 6, 1)|var|int64
bop_8874 = relay.less_equal(var_8872.astype('bool'), var_8873.astype('bool')) # shape=(7, 6, 1)
output = relay.Tuple([bop_8874,])
output2 = relay.Tuple([bop_8874,])
func_8886 = relay.Function([var_8872,var_8873,], output)
mod['func_8886'] = func_8886
mod = relay.transform.InferType()(mod)
mutated_mod['func_8886'] = func_8886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8886_call = mutated_mod.get_global_var('func_8886')
var_8888 = relay.var("var_8888", dtype = "int64", shape = ())#candidate|8888|()|var|int64
var_8889 = relay.var("var_8889", dtype = "int64", shape = (7, 6, 1))#candidate|8889|(7, 6, 1)|var|int64
call_8887 = func_8886_call(var_8888,var_8889,)
output = call_8887
func_8890 = relay.Function([var_8888,var_8889,], output)
mutated_mod['func_8890'] = func_8890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_8930 = func_3819_call()
call_8931 = func_3819_call()
output = call_8930
output2 = call_8931
func_8959 = relay.Function([], output)
mod['func_8959'] = func_8959
mod = relay.transform.InferType()(mod)
output = func_8959()
func_8960 = relay.Function([], output)
mutated_mod['func_8960'] = func_8960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4334_call = mod.get_global_var('func_4334')
func_4335_call = mutated_mod.get_global_var('func_4335')
call_9018 = relay.TupleGetItem(func_4334_call(), 0)
call_9019 = relay.TupleGetItem(func_4335_call(), 0)
func_5475_call = mod.get_global_var('func_5475')
func_5479_call = mutated_mod.get_global_var('func_5479')
var_9028 = relay.var("var_9028", dtype = "uint16", shape = (1350,))#candidate|9028|(1350,)|var|uint16
call_9027 = relay.TupleGetItem(func_5475_call(relay.reshape(var_9028.astype('uint16'), [15, 15, 6]), relay.reshape(var_9028.astype('uint16'), [15, 15, 6]), ), 0)
call_9029 = relay.TupleGetItem(func_5479_call(relay.reshape(var_9028.astype('uint16'), [15, 15, 6]), relay.reshape(var_9028.astype('uint16'), [15, 15, 6]), ), 0)
func_3235_call = mod.get_global_var('func_3235')
func_3238_call = mutated_mod.get_global_var('func_3238')
var_9041 = relay.var("var_9041", dtype = "uint8", shape = ())#candidate|9041|()|var|uint8
call_9040 = relay.TupleGetItem(func_3235_call(relay.reshape(var_9041.astype('uint8'), [])), 2)
call_9042 = relay.TupleGetItem(func_3238_call(relay.reshape(var_9041.astype('uint8'), [])), 2)
func_5688_call = mod.get_global_var('func_5688')
func_5690_call = mutated_mod.get_global_var('func_5690')
call_9047 = relay.TupleGetItem(func_5688_call(), 1)
call_9048 = relay.TupleGetItem(func_5690_call(), 1)
output = relay.Tuple([call_9018,call_9027,var_9028,call_9040,var_9041,call_9047,])
output2 = relay.Tuple([call_9019,call_9029,var_9028,call_9042,var_9041,call_9048,])
func_9056 = relay.Function([var_9028,var_9041,], output)
mod['func_9056'] = func_9056
mod = relay.transform.InferType()(mod)
var_9057 = relay.var("var_9057", dtype = "uint16", shape = (1350,))#candidate|9057|(1350,)|var|uint16
var_9058 = relay.var("var_9058", dtype = "uint8", shape = ())#candidate|9058|()|var|uint8
output = func_9056(var_9057,var_9058,)
func_9059 = relay.Function([var_9057,var_9058,], output)
mutated_mod['func_9059'] = func_9059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8819_call = mod.get_global_var('func_8819')
func_8820_call = mutated_mod.get_global_var('func_8820')
call_9080 = relay.TupleGetItem(func_8819_call(), 1)
call_9081 = relay.TupleGetItem(func_8820_call(), 1)
var_9082 = relay.var("var_9082", dtype = "float64", shape = (4, 9, 4))#candidate|9082|(4, 9, 4)|var|float64
bop_9083 = relay.add(call_9080.astype('uint32'), relay.reshape(var_9082.astype('uint32'), relay.shape_of(call_9080))) # shape=(4, 9, 4)
bop_9086 = relay.add(call_9081.astype('uint32'), relay.reshape(var_9082.astype('uint32'), relay.shape_of(call_9081))) # shape=(4, 9, 4)
func_5356_call = mod.get_global_var('func_5356')
func_5357_call = mutated_mod.get_global_var('func_5357')
call_9094 = relay.TupleGetItem(func_5356_call(), 0)
call_9095 = relay.TupleGetItem(func_5357_call(), 0)
func_588_call = mod.get_global_var('func_588')
func_590_call = mutated_mod.get_global_var('func_590')
var_9097 = relay.var("var_9097", dtype = "float64", shape = (72,))#candidate|9097|(72,)|var|float64
call_9096 = func_588_call(relay.reshape(var_9097.astype('float64'), [3, 4, 6]))
call_9098 = func_588_call(relay.reshape(var_9097.astype('float64'), [3, 4, 6]))
uop_9106 = relay.asinh(call_9096.astype('float32')) # shape=(3, 4, 6)
uop_9108 = relay.asinh(call_9098.astype('float32')) # shape=(3, 4, 6)
output = relay.Tuple([bop_9083,call_9094,var_9097,uop_9106,])
output2 = relay.Tuple([bop_9086,call_9095,var_9097,uop_9108,])
func_9115 = relay.Function([var_9082,var_9097,], output)
mod['func_9115'] = func_9115
mod = relay.transform.InferType()(mod)
mutated_mod['func_9115'] = func_9115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9115_call = mutated_mod.get_global_var('func_9115')
var_9117 = relay.var("var_9117", dtype = "float64", shape = (4, 9, 4))#candidate|9117|(4, 9, 4)|var|float64
var_9118 = relay.var("var_9118", dtype = "float64", shape = (72,))#candidate|9118|(72,)|var|float64
call_9116 = func_9115_call(var_9117,var_9118,)
output = call_9116
func_9119 = relay.Function([var_9117,var_9118,], output)
mutated_mod['func_9119'] = func_9119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5356_call = mod.get_global_var('func_5356')
func_5357_call = mutated_mod.get_global_var('func_5357')
call_9133 = relay.TupleGetItem(func_5356_call(), 1)
call_9134 = relay.TupleGetItem(func_5357_call(), 1)
func_6074_call = mod.get_global_var('func_6074')
func_6076_call = mutated_mod.get_global_var('func_6076')
call_9141 = relay.TupleGetItem(func_6074_call(), 0)
call_9142 = relay.TupleGetItem(func_6076_call(), 0)
output = relay.Tuple([call_9133,call_9141,])
output2 = relay.Tuple([call_9134,call_9142,])
func_9145 = relay.Function([], output)
mod['func_9145'] = func_9145
mod = relay.transform.InferType()(mod)
output = func_9145()
func_9146 = relay.Function([], output)
mutated_mod['func_9146'] = func_9146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5688_call = mod.get_global_var('func_5688')
func_5690_call = mutated_mod.get_global_var('func_5690')
call_9198 = relay.TupleGetItem(func_5688_call(), 0)
call_9199 = relay.TupleGetItem(func_5690_call(), 0)
output = call_9198
output2 = call_9199
func_9202 = relay.Function([], output)
mod['func_9202'] = func_9202
mod = relay.transform.InferType()(mod)
mutated_mod['func_9202'] = func_9202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9202_call = mutated_mod.get_global_var('func_9202')
call_9203 = func_9202_call()
output = call_9203
func_9204 = relay.Function([], output)
mutated_mod['func_9204'] = func_9204
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9212 = relay.const([[[-9,-10,-6,10,-9,3,-8,10,7,10,5,8],[4,6,1,9,-7,-4,5,8,-4,10,10,-7],[-3,4,10,2,3,7,4,-5,-4,3,2,-3],[-4,8,2,2,2,-1,-9,-6,3,-8,1,7],[2,-7,3,1,-3,-3,6,-10,3,-3,-6,-5],[-4,7,6,-3,6,-3,9,8,4,-7,-1,9],[10,-4,-10,-7,-4,2,-8,8,-6,-5,-6,-7],[8,-9,2,-1,-9,-9,6,7,-8,-9,5,-2],[-10,-8,-2,5,10,9,5,4,-6,4,9,-1],[-10,5,8,8,6,4,-2,10,-6,-6,6,4],[-5,4,-10,10,7,-7,5,-5,-3,1,-10,1],[-7,-7,-9,6,1,-9,-7,3,8,-9,9,-6],[-2,2,-5,10,-10,-8,1,-6,-4,-5,5,4],[-2,-6,6,-5,-8,-2,8,6,2,8,8,6],[-8,-4,1,-6,-1,-1,-4,-7,3,-5,5,8],[5,-1,-9,-6,9,2,6,-2,10,-3,-10,-7]],[[2,-4,3,-4,-10,-3,3,-10,7,-4,-9,1],[-10,4,-7,-4,2,5,2,6,-6,2,8,4],[3,-10,2,10,8,-1,4,3,3,-1,-9,6],[-8,5,-10,3,4,-4,7,-8,1,-1,5,2],[3,-3,-2,10,-9,6,-3,-3,-4,-5,2,-7],[5,7,-1,-7,2,-9,-1,4,3,7,1,-4],[8,8,-3,4,-3,7,10,2,-6,-10,-9,4],[6,-9,3,4,1,3,8,-3,8,9,-5,-4],[2,-5,8,-7,3,3,-7,7,-10,-3,6,1],[7,-4,1,-3,-9,5,10,-4,-8,-8,4,5],[4,4,6,-5,-5,5,-6,10,7,-5,-9,-9],[-7,-2,-2,7,-4,7,-6,1,3,1,4,-7],[9,9,2,-5,-7,-10,-3,-5,7,7,8,9],[5,1,9,2,9,-6,-1,9,-7,5,5,-6],[-3,8,-10,3,6,5,-9,5,-8,8,-3,5],[6,-1,1,-5,-10,-6,-1,6,-2,-7,9,10]]], dtype = "int32")#candidate|9212|(2, 16, 12)|const|int32
const_9213 = relay.const([[[9,-7,-3,-3,8,-4,1,6,6,9,6,8],[3,-7,2,-10,-3,-8,-5,1,-8,10,7,-7],[5,-1,-4,-8,1,-5,-9,-6,4,-9,6,-4],[-6,-4,-10,8,-6,8,-9,9,10,-3,-9,-3],[2,1,1,2,10,10,10,-7,6,8,-2,5],[1,2,6,2,-9,-8,8,8,10,8,-6,6],[-10,7,-1,3,10,-9,-5,6,4,4,8,8],[2,9,10,-9,-10,-2,9,-3,5,5,3,-1],[7,-10,7,-4,3,6,9,-6,4,-1,7,9],[-6,-1,-6,-7,-10,-10,5,6,9,3,-1,-10],[1,7,-3,-2,-1,-7,7,-3,-1,6,9,5],[-5,-10,1,1,-1,-10,5,3,-6,6,-6,-2],[2,-6,9,-10,2,-5,10,-5,-4,-7,-8,8],[3,-9,3,-10,7,-5,-7,-5,5,-2,-5,7],[-5,-2,-7,8,4,-2,7,1,8,-4,-1,4],[8,4,-4,-5,-7,3,-7,3,8,-8,7,-1]],[[-5,8,6,3,-9,-9,8,-3,3,7,8,-3],[7,-1,1,7,-9,-2,-10,-8,10,3,3,10],[-3,6,-9,6,-10,-10,1,7,-6,-4,3,-5],[-9,-2,-4,8,1,9,-5,-8,3,6,-7,7],[-5,2,-3,3,-5,6,-7,-7,8,-10,2,-8],[6,-1,10,-8,9,2,-7,5,2,-1,4,9],[5,-7,-7,-4,-8,8,4,-2,8,-4,1,-6],[1,-1,-7,-8,-8,-1,-9,-8,9,4,3,-6],[-10,-5,2,-3,9,9,-4,10,2,-9,-4,8],[4,-7,-10,10,-5,-2,-8,-9,8,-3,-5,-6],[-4,-7,-1,-6,-1,-6,7,-10,2,-9,-6,7],[6,-8,-5,-9,-9,-1,-3,7,-9,-4,8,-1],[5,-1,8,-7,-8,-7,-9,-3,-3,1,1,-2],[3,-9,10,-3,7,8,-2,2,-1,-4,-5,1],[9,-8,3,1,7,-9,9,4,8,3,-8,-1],[-6,-1,1,-3,-5,-1,2,-6,-3,6,9,-7]]], dtype = "int32")#candidate|9213|(2, 16, 12)|const|int32
bop_9214 = relay.less(const_9212.astype('bool'), relay.reshape(const_9213.astype('bool'), relay.shape_of(const_9212))) # shape=(2, 16, 12)
uop_9222 = relay.sinh(const_9212.astype('float32')) # shape=(2, 16, 12)
func_8321_call = mod.get_global_var('func_8321')
func_8322_call = mutated_mod.get_global_var('func_8322')
call_9233 = relay.TupleGetItem(func_8321_call(), 0)
call_9234 = relay.TupleGetItem(func_8322_call(), 0)
output = relay.Tuple([bop_9214,uop_9222,call_9233,])
output2 = relay.Tuple([bop_9214,uop_9222,call_9234,])
func_9240 = relay.Function([], output)
mod['func_9240'] = func_9240
mod = relay.transform.InferType()(mod)
mutated_mod['func_9240'] = func_9240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9240_call = mutated_mod.get_global_var('func_9240')
call_9241 = func_9240_call()
output = call_9241
func_9242 = relay.Function([], output)
mutated_mod['func_9242'] = func_9242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6704_call = mod.get_global_var('func_6704')
func_6706_call = mutated_mod.get_global_var('func_6706')
call_9246 = func_6704_call()
call_9247 = func_6704_call()
output = call_9246
output2 = call_9247
func_9250 = relay.Function([], output)
mod['func_9250'] = func_9250
mod = relay.transform.InferType()(mod)
output = func_9250()
func_9251 = relay.Function([], output)
mutated_mod['func_9251'] = func_9251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8642_call = mod.get_global_var('func_8642')
func_8643_call = mutated_mod.get_global_var('func_8643')
call_9268 = relay.TupleGetItem(func_8642_call(), 0)
call_9269 = relay.TupleGetItem(func_8643_call(), 0)
output = call_9268
output2 = call_9269
func_9302 = relay.Function([], output)
mod['func_9302'] = func_9302
mod = relay.transform.InferType()(mod)
mutated_mod['func_9302'] = func_9302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9302_call = mutated_mod.get_global_var('func_9302')
call_9303 = func_9302_call()
output = call_9303
func_9304 = relay.Function([], output)
mutated_mod['func_9304'] = func_9304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6335_call = mod.get_global_var('func_6335')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_9404 = func_6335_call()
call_9405 = func_6335_call()
output = relay.Tuple([call_9404,])
output2 = relay.Tuple([call_9405,])
func_9425 = relay.Function([], output)
mod['func_9425'] = func_9425
mod = relay.transform.InferType()(mod)
output = func_9425()
func_9426 = relay.Function([], output)
mutated_mod['func_9426'] = func_9426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9202_call = mod.get_global_var('func_9202')
func_9204_call = mutated_mod.get_global_var('func_9204')
call_9450 = func_9202_call()
call_9451 = func_9202_call()
func_6274_call = mod.get_global_var('func_6274')
func_6279_call = mutated_mod.get_global_var('func_6279')
var_9476 = relay.var("var_9476", dtype = "int8", shape = (364,))#candidate|9476|(364,)|var|int8
var_9477 = relay.var("var_9477", dtype = "uint8", shape = ())#candidate|9477|()|var|uint8
var_9478 = relay.var("var_9478", dtype = "float32", shape = (72,))#candidate|9478|(72,)|var|float32
call_9475 = relay.TupleGetItem(func_6274_call(relay.reshape(var_9476.astype('int8'), [364,]), relay.reshape(var_9477.astype('uint8'), []), relay.reshape(var_9478.astype('float32'), [72,]), ), 4)
call_9479 = relay.TupleGetItem(func_6279_call(relay.reshape(var_9476.astype('int8'), [364,]), relay.reshape(var_9477.astype('uint8'), []), relay.reshape(var_9478.astype('float32'), [72,]), ), 4)
bop_9485 = relay.equal(call_9450.astype('bool'), var_9477.astype('bool')) # shape=(4, 9, 4)
bop_9488 = relay.equal(call_9451.astype('bool'), var_9477.astype('bool')) # shape=(4, 9, 4)
output = relay.Tuple([call_9475,var_9476,var_9478,bop_9485,])
output2 = relay.Tuple([call_9479,var_9476,var_9478,bop_9488,])
func_9494 = relay.Function([var_9476,var_9477,var_9478,], output)
mod['func_9494'] = func_9494
mod = relay.transform.InferType()(mod)
var_9495 = relay.var("var_9495", dtype = "int8", shape = (364,))#candidate|9495|(364,)|var|int8
var_9496 = relay.var("var_9496", dtype = "uint8", shape = ())#candidate|9496|()|var|uint8
var_9497 = relay.var("var_9497", dtype = "float32", shape = (72,))#candidate|9497|(72,)|var|float32
output = func_9494(var_9495,var_9496,var_9497,)
func_9498 = relay.Function([var_9495,var_9496,var_9497,], output)
mutated_mod['func_9498'] = func_9498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4334_call = mod.get_global_var('func_4334')
func_4335_call = mutated_mod.get_global_var('func_4335')
call_9555 = relay.TupleGetItem(func_4334_call(), 0)
call_9556 = relay.TupleGetItem(func_4335_call(), 0)
output = call_9555
output2 = call_9556
func_9562 = relay.Function([], output)
mod['func_9562'] = func_9562
mod = relay.transform.InferType()(mod)
mutated_mod['func_9562'] = func_9562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9562_call = mutated_mod.get_global_var('func_9562')
call_9563 = func_9562_call()
output = call_9563
func_9564 = relay.Function([], output)
mutated_mod['func_9564'] = func_9564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7677_call = mod.get_global_var('func_7677')
func_7679_call = mutated_mod.get_global_var('func_7679')
call_9570 = relay.TupleGetItem(func_7677_call(), 0)
call_9571 = relay.TupleGetItem(func_7679_call(), 0)
func_2152_call = mod.get_global_var('func_2152')
func_2157_call = mutated_mod.get_global_var('func_2157')
var_9599 = relay.var("var_9599", dtype = "float64", shape = (480,))#candidate|9599|(480,)|var|float64
var_9600 = relay.var("var_9600", dtype = "int8", shape = (52,))#candidate|9600|(52,)|var|int8
call_9598 = relay.TupleGetItem(func_2152_call(relay.reshape(var_9599.astype('float64'), [15, 2, 16]), relay.reshape(var_9599.astype('float64'), [15, 2, 16]), relay.reshape(var_9600.astype('int8'), [52,]), ), 2)
call_9601 = relay.TupleGetItem(func_2157_call(relay.reshape(var_9599.astype('float64'), [15, 2, 16]), relay.reshape(var_9599.astype('float64'), [15, 2, 16]), relay.reshape(var_9600.astype('int8'), [52,]), ), 2)
output = relay.Tuple([call_9570,call_9598,var_9599,var_9600,])
output2 = relay.Tuple([call_9571,call_9601,var_9599,var_9600,])
func_9609 = relay.Function([var_9599,var_9600,], output)
mod['func_9609'] = func_9609
mod = relay.transform.InferType()(mod)
mutated_mod['func_9609'] = func_9609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9609_call = mutated_mod.get_global_var('func_9609')
var_9611 = relay.var("var_9611", dtype = "float64", shape = (480,))#candidate|9611|(480,)|var|float64
var_9612 = relay.var("var_9612", dtype = "int8", shape = (52,))#candidate|9612|(52,)|var|int8
call_9610 = func_9609_call(var_9611,var_9612,)
output = call_9610
func_9613 = relay.Function([var_9611,var_9612,], output)
mutated_mod['func_9613'] = func_9613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8210_call = mod.get_global_var('func_8210')
func_8212_call = mutated_mod.get_global_var('func_8212')
call_9738 = func_8210_call()
call_9739 = func_8210_call()
func_1471_call = mod.get_global_var('func_1471')
func_1474_call = mutated_mod.get_global_var('func_1474')
const_9743 = relay.const([4.297406,8.950344,3.129659,4.932791,-6.169428,-4.456872,-5.533239,-6.509439,5.150664], dtype = "float64")#candidate|9743|(9,)|const|float64
call_9742 = relay.TupleGetItem(func_1471_call(relay.reshape(const_9743.astype('float64'), [3, 1, 3])), 0)
call_9744 = relay.TupleGetItem(func_1474_call(relay.reshape(const_9743.astype('float64'), [3, 1, 3])), 0)
func_6175_call = mod.get_global_var('func_6175')
func_6177_call = mutated_mod.get_global_var('func_6177')
call_9747 = func_6175_call()
call_9748 = func_6175_call()
output = relay.Tuple([call_9738,call_9742,const_9743,call_9747,])
output2 = relay.Tuple([call_9739,call_9744,const_9743,call_9748,])
func_9750 = relay.Function([], output)
mod['func_9750'] = func_9750
mod = relay.transform.InferType()(mod)
output = func_9750()
func_9751 = relay.Function([], output)
mutated_mod['func_9751'] = func_9751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8642_call = mod.get_global_var('func_8642')
func_8643_call = mutated_mod.get_global_var('func_8643')
call_9939 = relay.TupleGetItem(func_8642_call(), 0)
call_9940 = relay.TupleGetItem(func_8643_call(), 0)
output = relay.Tuple([call_9939,])
output2 = relay.Tuple([call_9940,])
func_9959 = relay.Function([], output)
mod['func_9959'] = func_9959
mod = relay.transform.InferType()(mod)
mutated_mod['func_9959'] = func_9959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9959_call = mutated_mod.get_global_var('func_9959')
call_9960 = func_9959_call()
output = call_9960
func_9961 = relay.Function([], output)
mutated_mod['func_9961'] = func_9961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6512_call = mod.get_global_var('func_6512')
func_6513_call = mutated_mod.get_global_var('func_6513')
call_9997 = func_6512_call()
call_9998 = func_6512_call()
func_211_call = mod.get_global_var('func_211')
func_214_call = mutated_mod.get_global_var('func_214')
const_10009 = relay.const([2.248934,1.526953,3.382307,0.062233,-6.085950,-5.326084,8.706304,9.557057,-7.982817,-0.815611,7.792585,-5.070881,-9.277641,1.141670,2.943051,-2.276280,8.734917,-2.260718,9.836884,9.218918,-2.411039,7.641580,8.320535,8.683217,-0.758671,-2.969694,7.106371,-2.052973,1.680820,2.210579,-7.299356,-8.446201,-1.062616,-8.573739,-9.457585,8.589208,3.031993,-1.496664,-4.534904,3.568133,5.094759,-3.693579,-6.006443,-8.132597,8.369654,-1.880566,-3.483408,0.147683,0.755882,-8.077963,5.891252,6.948028,-8.281380,-1.161001,9.568427,1.784482], dtype = "float64")#candidate|10009|(56,)|const|float64
call_10008 = func_211_call(relay.reshape(const_10009.astype('float64'), [2, 14, 2]))
call_10010 = func_211_call(relay.reshape(const_10009.astype('float64'), [2, 14, 2]))
output = relay.Tuple([call_9997,call_10008,const_10009,])
output2 = relay.Tuple([call_9998,call_10010,const_10009,])
func_10023 = relay.Function([], output)
mod['func_10023'] = func_10023
mod = relay.transform.InferType()(mod)
output = func_10023()
func_10024 = relay.Function([], output)
mutated_mod['func_10024'] = func_10024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8642_call = mod.get_global_var('func_8642')
func_8643_call = mutated_mod.get_global_var('func_8643')
call_10028 = relay.TupleGetItem(func_8642_call(), 0)
call_10029 = relay.TupleGetItem(func_8643_call(), 0)
func_8529_call = mod.get_global_var('func_8529')
func_8531_call = mutated_mod.get_global_var('func_8531')
call_10034 = relay.TupleGetItem(func_8529_call(relay.reshape(call_10028.astype('float64'), [4, 9, 4])), 0)
call_10035 = relay.TupleGetItem(func_8531_call(relay.reshape(call_10028.astype('float64'), [4, 9, 4])), 0)
output = relay.Tuple([call_10028,call_10034,])
output2 = relay.Tuple([call_10029,call_10035,])
func_10036 = relay.Function([], output)
mod['func_10036'] = func_10036
mod = relay.transform.InferType()(mod)
mutated_mod['func_10036'] = func_10036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10036_call = mutated_mod.get_global_var('func_10036')
call_10037 = func_10036_call()
output = call_10037
func_10038 = relay.Function([], output)
mutated_mod['func_10038'] = func_10038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10023_call = mod.get_global_var('func_10023')
func_10024_call = mutated_mod.get_global_var('func_10024')
call_10085 = relay.TupleGetItem(func_10023_call(), 1)
call_10086 = relay.TupleGetItem(func_10024_call(), 1)
uop_10089 = relay.log10(call_10085.astype('float64')) # shape=(2, 14, 2)
uop_10091 = relay.log10(call_10086.astype('float64')) # shape=(2, 14, 2)
output = relay.Tuple([uop_10089,])
output2 = relay.Tuple([uop_10091,])
func_10119 = relay.Function([], output)
mod['func_10119'] = func_10119
mod = relay.transform.InferType()(mod)
mutated_mod['func_10119'] = func_10119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10119_call = mutated_mod.get_global_var('func_10119')
call_10120 = func_10119_call()
output = call_10120
func_10121 = relay.Function([], output)
mutated_mod['func_10121'] = func_10121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9302_call = mod.get_global_var('func_9302')
func_9304_call = mutated_mod.get_global_var('func_9304')
call_10128 = func_9302_call()
call_10129 = func_9302_call()
func_7677_call = mod.get_global_var('func_7677')
func_7679_call = mutated_mod.get_global_var('func_7679')
call_10139 = relay.TupleGetItem(func_7677_call(), 1)
call_10140 = relay.TupleGetItem(func_7679_call(), 1)
func_8555_call = mod.get_global_var('func_8555')
func_8558_call = mutated_mod.get_global_var('func_8558')
var_10142 = relay.var("var_10142", dtype = "float64", shape = ())#candidate|10142|()|var|float64
var_10143 = relay.var("var_10143", dtype = "float64", shape = (936, 2))#candidate|10143|(936, 2)|var|float64
call_10141 = relay.TupleGetItem(func_8555_call(relay.reshape(var_10142.astype('float64'), []), relay.reshape(var_10143.astype('float64'), [16, 13, 9]), ), 0)
call_10144 = relay.TupleGetItem(func_8558_call(relay.reshape(var_10142.astype('float64'), []), relay.reshape(var_10143.astype('float64'), [16, 13, 9]), ), 0)
output = relay.Tuple([call_10128,call_10139,call_10141,var_10142,var_10143,])
output2 = relay.Tuple([call_10129,call_10140,call_10144,var_10142,var_10143,])
func_10152 = relay.Function([var_10142,var_10143,], output)
mod['func_10152'] = func_10152
mod = relay.transform.InferType()(mod)
mutated_mod['func_10152'] = func_10152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10152_call = mutated_mod.get_global_var('func_10152')
var_10154 = relay.var("var_10154", dtype = "float64", shape = ())#candidate|10154|()|var|float64
var_10155 = relay.var("var_10155", dtype = "float64", shape = (936, 2))#candidate|10155|(936, 2)|var|float64
call_10153 = func_10152_call(var_10154,var_10155,)
output = call_10153
func_10156 = relay.Function([var_10154,var_10155,], output)
mutated_mod['func_10156'] = func_10156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5688_call = mod.get_global_var('func_5688')
func_5690_call = mutated_mod.get_global_var('func_5690')
call_10240 = relay.TupleGetItem(func_5688_call(), 1)
call_10241 = relay.TupleGetItem(func_5690_call(), 1)
output = call_10240
output2 = call_10241
func_10262 = relay.Function([], output)
mod['func_10262'] = func_10262
mod = relay.transform.InferType()(mod)
mutated_mod['func_10262'] = func_10262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10262_call = mutated_mod.get_global_var('func_10262')
call_10263 = func_10262_call()
output = call_10263
func_10264 = relay.Function([], output)
mutated_mod['func_10264'] = func_10264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4218_call = mod.get_global_var('func_4218')
func_4220_call = mutated_mod.get_global_var('func_4220')
call_10332 = func_4218_call()
call_10333 = func_4218_call()
output = relay.Tuple([call_10332,])
output2 = relay.Tuple([call_10333,])
func_10343 = relay.Function([], output)
mod['func_10343'] = func_10343
mod = relay.transform.InferType()(mod)
output = func_10343()
func_10344 = relay.Function([], output)
mutated_mod['func_10344'] = func_10344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6551_call = mod.get_global_var('func_6551')
func_6553_call = mutated_mod.get_global_var('func_6553')
call_10419 = relay.TupleGetItem(func_6551_call(), 0)
call_10420 = relay.TupleGetItem(func_6553_call(), 0)
output = call_10419
output2 = call_10420
func_10425 = relay.Function([], output)
mod['func_10425'] = func_10425
mod = relay.transform.InferType()(mod)
mutated_mod['func_10425'] = func_10425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10425_call = mutated_mod.get_global_var('func_10425')
call_10426 = func_10425_call()
output = call_10426
func_10427 = relay.Function([], output)
mutated_mod['func_10427'] = func_10427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8379_call = mod.get_global_var('func_8379')
func_8380_call = mutated_mod.get_global_var('func_8380')
call_10430 = func_8379_call()
call_10431 = func_8379_call()
output = relay.Tuple([call_10430,])
output2 = relay.Tuple([call_10431,])
func_10439 = relay.Function([], output)
mod['func_10439'] = func_10439
mod = relay.transform.InferType()(mod)
mutated_mod['func_10439'] = func_10439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10439_call = mutated_mod.get_global_var('func_10439')
call_10440 = func_10439_call()
output = call_10440
func_10441 = relay.Function([], output)
mutated_mod['func_10441'] = func_10441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2955_call = mod.get_global_var('func_2955')
func_2957_call = mutated_mod.get_global_var('func_2957')
call_10482 = func_2955_call()
call_10483 = func_2955_call()
output = relay.Tuple([call_10482,])
output2 = relay.Tuple([call_10483,])
func_10495 = relay.Function([], output)
mod['func_10495'] = func_10495
mod = relay.transform.InferType()(mod)
output = func_10495()
func_10496 = relay.Function([], output)
mutated_mod['func_10496'] = func_10496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8819_call = mod.get_global_var('func_8819')
func_8820_call = mutated_mod.get_global_var('func_8820')
call_10555 = relay.TupleGetItem(func_8819_call(), 1)
call_10556 = relay.TupleGetItem(func_8820_call(), 1)
func_4981_call = mod.get_global_var('func_4981')
func_4982_call = mutated_mod.get_global_var('func_4982')
call_10557 = func_4981_call()
call_10558 = func_4981_call()
func_8555_call = mod.get_global_var('func_8555')
func_8558_call = mutated_mod.get_global_var('func_8558')
const_10569 = relay.const(-4.532921, dtype = "float64")#candidate|10569|()|const|float64
var_10570 = relay.var("var_10570", dtype = "float64", shape = (1872,))#candidate|10570|(1872,)|var|float64
call_10568 = relay.TupleGetItem(func_8555_call(relay.reshape(const_10569.astype('float64'), []), relay.reshape(var_10570.astype('float64'), [16, 13, 9]), ), 0)
call_10571 = relay.TupleGetItem(func_8558_call(relay.reshape(const_10569.astype('float64'), []), relay.reshape(var_10570.astype('float64'), [16, 13, 9]), ), 0)
output = relay.Tuple([call_10555,call_10557,call_10568,const_10569,var_10570,])
output2 = relay.Tuple([call_10556,call_10558,call_10571,const_10569,var_10570,])
func_10598 = relay.Function([var_10570,], output)
mod['func_10598'] = func_10598
mod = relay.transform.InferType()(mod)
mutated_mod['func_10598'] = func_10598
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10599 = relay.var("var_10599", dtype = "float64", shape = (1872,))#candidate|10599|(1872,)|var|float64
func_10598_call = mutated_mod.get_global_var('func_10598')
call_10600 = func_10598_call(var_10599)
output = call_10600
func_10601 = relay.Function([var_10599], output)
mutated_mod['func_10601'] = func_10601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7068_call = mod.get_global_var('func_7068')
func_7069_call = mutated_mod.get_global_var('func_7069')
call_10646 = func_7068_call()
call_10647 = func_7068_call()
func_4218_call = mod.get_global_var('func_4218')
func_4220_call = mutated_mod.get_global_var('func_4220')
call_10650 = func_4218_call()
call_10651 = func_4218_call()
output = relay.Tuple([call_10646,call_10650,])
output2 = relay.Tuple([call_10647,call_10651,])
func_10652 = relay.Function([], output)
mod['func_10652'] = func_10652
mod = relay.transform.InferType()(mod)
output = func_10652()
func_10653 = relay.Function([], output)
mutated_mod['func_10653'] = func_10653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4218_call = mod.get_global_var('func_4218')
func_4220_call = mutated_mod.get_global_var('func_4220')
call_10682 = func_4218_call()
call_10683 = func_4218_call()
output = call_10682
output2 = call_10683
func_10720 = relay.Function([], output)
mod['func_10720'] = func_10720
mod = relay.transform.InferType()(mod)
output = func_10720()
func_10721 = relay.Function([], output)
mutated_mod['func_10721'] = func_10721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_10726 = func_3112_call()
call_10727 = func_3112_call()
func_4985_call = mod.get_global_var('func_4985')
func_4986_call = mutated_mod.get_global_var('func_4986')
call_10734 = func_4985_call()
call_10735 = func_4985_call()
output = relay.Tuple([call_10726,call_10734,])
output2 = relay.Tuple([call_10727,call_10735,])
func_10744 = relay.Function([], output)
mod['func_10744'] = func_10744
mod = relay.transform.InferType()(mod)
output = func_10744()
func_10745 = relay.Function([], output)
mutated_mod['func_10745'] = func_10745
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10767 = relay.var("var_10767", dtype = "float32", shape = (11, 10, 11))#candidate|10767|(11, 10, 11)|var|float32
uop_10768 = relay.tan(var_10767.astype('float32')) # shape=(11, 10, 11)
func_9240_call = mod.get_global_var('func_9240')
func_9242_call = mutated_mod.get_global_var('func_9242')
call_10780 = relay.TupleGetItem(func_9240_call(), 0)
call_10781 = relay.TupleGetItem(func_9242_call(), 0)
func_3589_call = mod.get_global_var('func_3589')
func_3594_call = mutated_mod.get_global_var('func_3594')
var_10785 = relay.var("var_10785", dtype = "float64", shape = (1008,))#candidate|10785|(1008,)|var|float64
var_10786 = relay.var("var_10786", dtype = "float32", shape = (6, 12))#candidate|10786|(6, 12)|var|float32
const_10787 = relay.const([[8,-2,-1,-7],[-8,2,-1,2],[-7,3,-2,8],[2,-6,-3,6],[6,6,-6,-8],[-5,4,3,3],[7,-9,-10,-6],[-9,7,-3,-3],[-1,-8,-1,1],[7,9,5,1],[8,2,-5,2],[3,5,-4,-6],[-7,-4,-9,2]], dtype = "int8")#candidate|10787|(13, 4)|const|int8
var_10788 = relay.var("var_10788", dtype = "float64", shape = (480,))#candidate|10788|(480,)|var|float64
call_10784 = relay.TupleGetItem(func_3589_call(relay.reshape(var_10785.astype('float64'), [1008,]), relay.reshape(var_10786.astype('float32'), [72,]), relay.reshape(const_10787.astype('int8'), [52, 1]), relay.reshape(var_10788.astype('float64'), [480,]), ), 3)
call_10789 = relay.TupleGetItem(func_3594_call(relay.reshape(var_10785.astype('float64'), [1008,]), relay.reshape(var_10786.astype('float32'), [72,]), relay.reshape(const_10787.astype('int8'), [52, 1]), relay.reshape(var_10788.astype('float64'), [480,]), ), 3)
func_8177_call = mod.get_global_var('func_8177')
func_8180_call = mutated_mod.get_global_var('func_8180')
const_10807 = relay.const([-4.114596,-1.989459,9.173332,-3.971483,8.872156,-4.087663,2.100003,5.734372,-9.654365,0.444408,-6.419499,-5.722303,2.664052,9.360625,9.460311,3.684018,-0.072562,0.826073,3.091948,-3.194249,-2.831936,-7.670857,1.421530,-9.767952,-3.006835,-7.526957,0.751265,-9.399613,-9.397571,-6.264071,-9.332913,8.175115,6.082007,2.422478,-2.159290,7.753537,-9.794455,-3.970988,7.293813,-2.314815,-3.436652,-3.123614,0.469376,-5.383399,3.742432,4.502923,8.153018,-4.234749,5.659593,8.125858,-8.730650,-2.141002,-5.838499,-7.998739,8.685256,3.452984,1.406841,-3.844611,8.840598,-8.442103,9.420836,-3.816459,-8.169715,1.152760,-4.521471,9.783216,-1.331323,-3.805367,-8.391660,-6.868839,0.996495,0.519088,-5.220596,1.112870,-4.111265,-7.153480,-7.807779,-7.960552,2.257674,-2.166893,-2.860633,-9.922992,-2.827822,8.511895,2.797021,-7.720176,-6.329922,6.627814,5.201491,-4.482610,-1.745465,1.248724,9.880407,0.606529,-0.593058,2.337969,3.336286,6.612125,-8.206573,-0.510839,-4.804066,-5.153546,-6.104671,0.747376,-1.095317,-2.266778,-8.740076,7.470438,6.654899,8.999895,2.984477,4.735023,-2.755258,-6.043695,2.253666,0.376410,3.092227,-5.332559,2.330808,-5.577890,5.672271,4.403744,-4.428567,-5.193773,6.088826,2.425702,-0.323075,-0.008964,6.530137,7.794676,6.571690,8.122258,-2.397483,3.514875,0.610075,0.401445,-8.146838,8.529741,-6.277307,-5.695424,0.722090,-3.381927,-6.003182,-7.051528], dtype = "float64")#candidate|10807|(144,)|const|float64
call_10806 = relay.TupleGetItem(func_8177_call(relay.reshape(const_10807.astype('float64'), [4, 9, 4])), 0)
call_10808 = relay.TupleGetItem(func_8180_call(relay.reshape(const_10807.astype('float64'), [4, 9, 4])), 0)
output = relay.Tuple([uop_10768,call_10780,call_10784,var_10785,var_10786,const_10787,var_10788,call_10806,const_10807,])
output2 = relay.Tuple([uop_10768,call_10781,call_10789,var_10785,var_10786,const_10787,var_10788,call_10808,const_10807,])
func_10809 = relay.Function([var_10767,var_10785,var_10786,var_10788,], output)
mod['func_10809'] = func_10809
mod = relay.transform.InferType()(mod)
mutated_mod['func_10809'] = func_10809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10809_call = mutated_mod.get_global_var('func_10809')
var_10811 = relay.var("var_10811", dtype = "float32", shape = (11, 10, 11))#candidate|10811|(11, 10, 11)|var|float32
var_10812 = relay.var("var_10812", dtype = "float64", shape = (1008,))#candidate|10812|(1008,)|var|float64
var_10813 = relay.var("var_10813", dtype = "float32", shape = (6, 12))#candidate|10813|(6, 12)|var|float32
var_10814 = relay.var("var_10814", dtype = "float64", shape = (480,))#candidate|10814|(480,)|var|float64
call_10810 = func_10809_call(var_10811,var_10812,var_10813,var_10814,)
output = call_10810
func_10815 = relay.Function([var_10811,var_10812,var_10813,var_10814,], output)
mutated_mod['func_10815'] = func_10815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8321_call = mod.get_global_var('func_8321')
func_8322_call = mutated_mod.get_global_var('func_8322')
call_10817 = relay.TupleGetItem(func_8321_call(), 1)
call_10818 = relay.TupleGetItem(func_8322_call(), 1)
func_3589_call = mod.get_global_var('func_3589')
func_3594_call = mutated_mod.get_global_var('func_3594')
var_10834 = relay.var("var_10834", dtype = "float64", shape = (1008,))#candidate|10834|(1008,)|var|float64
var_10835 = relay.var("var_10835", dtype = "float32", shape = (72,))#candidate|10835|(72,)|var|float32
var_10836 = relay.var("var_10836", dtype = "int8", shape = (52,))#candidate|10836|(52,)|var|int8
const_10837 = relay.const([-4.265269,-5.712860,-2.673134,3.522978,2.328510,0.331408,-9.945266,-1.221622,-8.691113,-2.551746,9.794598,-9.948843,-7.784976,7.524828,-4.038705,-6.768337,-2.431973,-7.831204,-5.608063,-5.025313,-2.310051,9.709099,-1.792613,4.425025,8.534517,5.463285,6.914752,-4.948827,-3.106842,-8.883336,-9.587998,2.664388,3.670263,0.451414,5.970170,6.537232,6.865582,-8.445753,-4.602594,-3.341539,-4.991946,6.319464,1.377795,6.949899,3.846702,5.530946,-8.095719,-9.443923,-6.000093,-0.386465,6.012008,-3.340297,-4.093892,-9.222270,-0.886493,-4.265628,-8.903354,7.338996,4.833247,-4.709722,-5.426214,-0.433002,-7.408855,-3.382882,-7.283504,5.589248,-6.823863,-8.912733,-0.948482,2.949265,-9.511807,9.179150,8.029450,-5.414061,3.478712,4.127838,-9.847373,6.626491,8.036088,-7.399880,-3.066107,7.103802,2.422049,8.073283,9.455893,-0.835687,4.904452,-3.599308,-8.683334,1.025115,9.152673,2.708913,2.039371,3.567061,-4.511939,-5.183131,8.558276,4.208514,-9.213547,-5.827055,-6.066447,4.795093,2.401396,-1.074239,-1.164769,2.702934,0.396103,-5.349128,4.870003,3.336623,0.377946,-8.167515,5.626986,8.776572,5.292340,3.325455,-7.872429,1.392358,6.766822,-5.137755,1.521391,9.390699,-7.766884,7.108408,3.759780,-5.963328,6.263336,9.836935,-9.133521,-8.388367,1.779385,6.351500,-4.575461,0.763868,1.864079,1.851634,1.844676,5.342084,-9.600892,-0.291278,2.033497,-1.558115,7.156600,6.058894,-5.929778,1.445117,-6.957587,-0.986673,4.056644,-9.531938,0.100041,-3.329650,-7.645691,-1.391663,-2.350534,8.705121,3.456481,-8.573486,3.421624,9.241980,5.121983,9.041330,2.366230,-3.820667,2.489604,0.778097,1.715128,-5.775616,3.641274,-7.612440,3.072368,5.761885,-1.005995,2.925635,-5.109254,5.085718,-2.897123,1.333211,-9.712619,-2.036286,-9.002144,-4.458918,1.271411,2.203828,-4.497429,5.048007,5.219531,-7.910662,-4.489166,-0.606679,-5.345524,4.463497,-0.581619,9.755608,-0.042224,0.589726,2.492607,-0.109014,-9.824525,-6.795920,-0.007350,-1.205571,-1.159635,8.116640,-1.603216,7.528854,0.518957,3.457320,3.616016,4.824311,0.703267,-7.516360,-4.156738,0.500575,7.260365,9.001068,1.183906,3.255157,0.640052,0.865420,-5.608751,-1.780809,1.289918,-5.898847,-6.183642,-5.165189,-8.827647,0.326997,-8.346912,7.888789,-1.569374,1.832149,-8.910397,5.373800,4.817008,2.708925,-9.173752,2.045321,-0.258935,-1.746520,2.585429,-9.155957,-4.610045,5.405981,-9.480967,-3.036232,1.517239,0.157243,-0.470319,8.708983,2.899211,-4.486092,2.237417,4.980867,6.704190,-6.448781,-2.781653,-7.572004,-0.958526,1.382989,-0.556795,6.887251,1.705158,0.412899,-1.506500,3.041364,8.314652,7.906743,-7.727714,-6.583938,-8.612912,-3.720499,0.249173,2.599998,-3.662508,1.558106,-5.794918,8.839369,9.262114,-8.478446,6.807722,5.907994,5.873065,9.725299,9.967377,4.748359,3.858948,-5.633146,-6.899445,-0.488154,2.210638,3.071149,0.812637,4.026499,4.658052,-0.840309,-2.551415,6.419685,-7.222064,7.008608,6.577218,6.052887,-2.946695,2.486134,-6.828588,-7.528634,3.771275,3.335971,-9.627030,5.494507,-4.796225,-4.114083,4.697536,-2.285715,1.653396,1.815080,-1.922781,0.443097,2.800914,1.823947,-0.447728,5.691126,1.729279,-6.147534,4.189763,0.097299,0.376066,-3.132668,-9.595486,-1.987218,-9.744022,-0.115965,1.438995,-1.624833,-6.189549,-9.486988,3.902075,4.754272,-1.091599,-8.248549,3.059209,-9.716762,1.479604,-6.156913,5.906830,5.413183,-2.457983,0.806441,9.567706,-8.172921,0.146732,3.544265,-3.130207,-0.632526,-8.099666,8.697857,-7.971851,2.593817,-6.669621,7.258331,-8.694180,-4.110721,-4.140831,-0.868409,4.638581,-4.787450,8.007340,7.502965,-4.135395,4.818181,-8.257077,-1.136802,-7.163606,-2.484538,1.683394,-7.973842,7.740778,7.590739,-5.809284,2.096517,-4.057141,2.887740,1.772620,-7.225277,-8.838390,6.460174,-5.814433,9.090457,0.238012,8.722704,-9.500464,-2.194919,-8.251215,5.005857,-5.451417,-5.401764,-2.147263,-9.551925,-7.200950,0.409410,-2.317509,3.088593,6.034291,7.008538,5.786615,2.705888,8.291598,0.697765,7.324653,-9.145765,2.642668,5.508187,-2.973614,-9.340965,-0.078308,0.801029,-0.941960,1.527622,-6.943311,-3.356952,2.171537,9.816291,3.113361,1.464341,9.008553,-9.492044,-1.653323,9.369320,-1.261831,-6.275678,8.080719,3.853954,-3.412375,0.330993,-0.887991,-5.753851,-0.010759,-2.519273,-4.799388,-3.141442,8.644329,0.882129,-5.149887,5.301967,-4.063909,4.505241,4.424438,4.890894,2.742888,-1.598411,-7.875441,-1.760356,-7.098433,-2.836726,-4.395120,9.662193,-7.376002,0.524452,8.936740,8.858818,-1.293945,7.097576,7.068948,-4.705115,-8.103863,-5.806699,7.399710,0.100928,0.870267,0.091337,-7.458138,-6.783708,5.889316,-5.844776,-1.494275,-3.918643,-6.667673,-2.412030,-5.414423,0.257324], dtype = "float64")#candidate|10837|(480,)|const|float64
call_10833 = relay.TupleGetItem(func_3589_call(relay.reshape(var_10834.astype('float64'), [1008,]), relay.reshape(var_10835.astype('float32'), [72,]), relay.reshape(var_10836.astype('int8'), [52, 1]), relay.reshape(const_10837.astype('float64'), [480,]), ), 3)
call_10838 = relay.TupleGetItem(func_3594_call(relay.reshape(var_10834.astype('float64'), [1008,]), relay.reshape(var_10835.astype('float32'), [72,]), relay.reshape(var_10836.astype('int8'), [52, 1]), relay.reshape(const_10837.astype('float64'), [480,]), ), 3)
output = relay.Tuple([call_10817,call_10833,var_10834,var_10835,var_10836,const_10837,])
output2 = relay.Tuple([call_10818,call_10838,var_10834,var_10835,var_10836,const_10837,])
func_10854 = relay.Function([var_10834,var_10835,var_10836,], output)
mod['func_10854'] = func_10854
mod = relay.transform.InferType()(mod)
var_10855 = relay.var("var_10855", dtype = "float64", shape = (1008,))#candidate|10855|(1008,)|var|float64
var_10856 = relay.var("var_10856", dtype = "float32", shape = (72,))#candidate|10856|(72,)|var|float32
var_10857 = relay.var("var_10857", dtype = "int8", shape = (52,))#candidate|10857|(52,)|var|int8
output = func_10854(var_10855,var_10856,var_10857,)
func_10858 = relay.Function([var_10855,var_10856,var_10857,], output)
mutated_mod['func_10858'] = func_10858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_10925 = func_3819_call()
call_10926 = func_3819_call()
func_9302_call = mod.get_global_var('func_9302')
func_9304_call = mutated_mod.get_global_var('func_9304')
call_10933 = func_9302_call()
call_10934 = func_9302_call()
output = relay.Tuple([call_10925,call_10933,])
output2 = relay.Tuple([call_10926,call_10934,])
func_10940 = relay.Function([], output)
mod['func_10940'] = func_10940
mod = relay.transform.InferType()(mod)
mutated_mod['func_10940'] = func_10940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10940_call = mutated_mod.get_global_var('func_10940')
call_10941 = func_10940_call()
output = call_10941
func_10942 = relay.Function([], output)
mutated_mod['func_10942'] = func_10942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9562_call = mod.get_global_var('func_9562')
func_9564_call = mutated_mod.get_global_var('func_9564')
call_10948 = func_9562_call()
call_10949 = func_9562_call()
output = relay.Tuple([call_10948,])
output2 = relay.Tuple([call_10949,])
func_10966 = relay.Function([], output)
mod['func_10966'] = func_10966
mod = relay.transform.InferType()(mod)
output = func_10966()
func_10967 = relay.Function([], output)
mutated_mod['func_10967'] = func_10967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10036_call = mod.get_global_var('func_10036')
func_10038_call = mutated_mod.get_global_var('func_10038')
call_10981 = relay.TupleGetItem(func_10036_call(), 0)
call_10982 = relay.TupleGetItem(func_10038_call(), 0)
output = call_10981
output2 = call_10982
func_10993 = relay.Function([], output)
mod['func_10993'] = func_10993
mod = relay.transform.InferType()(mod)
mutated_mod['func_10993'] = func_10993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10993_call = mutated_mod.get_global_var('func_10993')
call_10994 = func_10993_call()
output = call_10994
func_10995 = relay.Function([], output)
mutated_mod['func_10995'] = func_10995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10720_call = mod.get_global_var('func_10720')
func_10721_call = mutated_mod.get_global_var('func_10721')
call_11008 = func_10720_call()
call_11009 = func_10720_call()
output = relay.Tuple([call_11008,])
output2 = relay.Tuple([call_11009,])
func_11019 = relay.Function([], output)
mod['func_11019'] = func_11019
mod = relay.transform.InferType()(mod)
output = func_11019()
func_11020 = relay.Function([], output)
mutated_mod['func_11020'] = func_11020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8321_call = mod.get_global_var('func_8321')
func_8322_call = mutated_mod.get_global_var('func_8322')
call_11027 = relay.TupleGetItem(func_8321_call(), 0)
call_11028 = relay.TupleGetItem(func_8322_call(), 0)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
var_11032 = relay.var("var_11032", dtype = "float32", shape = (1,))#candidate|11032|(1,)|var|float32
call_11031 = func_2708_call(relay.reshape(var_11032.astype('float32'), [1, 1, 1]))
call_11033 = func_2708_call(relay.reshape(var_11032.astype('float32'), [1, 1, 1]))
output = relay.Tuple([call_11027,call_11031,var_11032,])
output2 = relay.Tuple([call_11028,call_11033,var_11032,])
func_11042 = relay.Function([var_11032,], output)
mod['func_11042'] = func_11042
mod = relay.transform.InferType()(mod)
mutated_mod['func_11042'] = func_11042
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11043 = relay.var("var_11043", dtype = "float32", shape = (1,))#candidate|11043|(1,)|var|float32
func_11042_call = mutated_mod.get_global_var('func_11042')
call_11044 = func_11042_call(var_11043)
output = call_11044
func_11045 = relay.Function([var_11043], output)
mutated_mod['func_11045'] = func_11045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11160 = relay.var("var_11160", dtype = "int32", shape = ())#candidate|11160|()|var|int32
var_11161 = relay.var("var_11161", dtype = "int32", shape = (2, 8, 11))#candidate|11161|(2, 8, 11)|var|int32
bop_11162 = relay.left_shift(var_11160.astype('int32'), var_11161.astype('int32')) # shape=(2, 8, 11)
output = bop_11162
output2 = bop_11162
func_11171 = relay.Function([var_11160,var_11161,], output)
mod['func_11171'] = func_11171
mod = relay.transform.InferType()(mod)
mutated_mod['func_11171'] = func_11171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11171_call = mutated_mod.get_global_var('func_11171')
var_11173 = relay.var("var_11173", dtype = "int32", shape = ())#candidate|11173|()|var|int32
var_11174 = relay.var("var_11174", dtype = "int32", shape = (2, 8, 11))#candidate|11174|(2, 8, 11)|var|int32
call_11172 = func_11171_call(var_11173,var_11174,)
output = call_11172
func_11175 = relay.Function([var_11173,var_11174,], output)
mutated_mod['func_11175'] = func_11175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10993_call = mod.get_global_var('func_10993')
func_10995_call = mutated_mod.get_global_var('func_10995')
call_11250 = func_10993_call()
call_11251 = func_10993_call()
output = relay.Tuple([call_11250,])
output2 = relay.Tuple([call_11251,])
func_11279 = relay.Function([], output)
mod['func_11279'] = func_11279
mod = relay.transform.InferType()(mod)
mutated_mod['func_11279'] = func_11279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11279_call = mutated_mod.get_global_var('func_11279')
call_11280 = func_11279_call()
output = call_11280
func_11281 = relay.Function([], output)
mutated_mod['func_11281'] = func_11281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6175_call = mod.get_global_var('func_6175')
func_6177_call = mutated_mod.get_global_var('func_6177')
call_11340 = func_6175_call()
call_11341 = func_6175_call()
func_7068_call = mod.get_global_var('func_7068')
func_7069_call = mutated_mod.get_global_var('func_7069')
call_11356 = func_7068_call()
call_11357 = func_7068_call()
func_11279_call = mod.get_global_var('func_11279')
func_11281_call = mutated_mod.get_global_var('func_11281')
call_11366 = relay.TupleGetItem(func_11279_call(), 0)
call_11367 = relay.TupleGetItem(func_11281_call(), 0)
output = relay.Tuple([call_11340,call_11356,call_11366,])
output2 = relay.Tuple([call_11341,call_11357,call_11367,])
func_11374 = relay.Function([], output)
mod['func_11374'] = func_11374
mod = relay.transform.InferType()(mod)
output = func_11374()
func_11375 = relay.Function([], output)
mutated_mod['func_11375'] = func_11375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_11409 = func_3819_call()
call_11410 = func_3819_call()
func_6639_call = mod.get_global_var('func_6639')
func_6644_call = mutated_mod.get_global_var('func_6644')
var_11414 = relay.var("var_11414", dtype = "uint16", shape = (832,))#candidate|11414|(832,)|var|uint16
const_11415 = relay.const(9, dtype = "int16")#candidate|11415|()|const|int16
var_11416 = relay.var("var_11416", dtype = "float64", shape = (480,))#candidate|11416|(480,)|var|float64
call_11413 = relay.TupleGetItem(func_6639_call(relay.reshape(var_11414.astype('uint16'), [13, 16, 4]), relay.reshape(const_11415.astype('int16'), []), relay.reshape(var_11416.astype('float64'), [480,]), ), 6)
call_11417 = relay.TupleGetItem(func_6644_call(relay.reshape(var_11414.astype('uint16'), [13, 16, 4]), relay.reshape(const_11415.astype('int16'), []), relay.reshape(var_11416.astype('float64'), [480,]), ), 6)
output = relay.Tuple([call_11409,call_11413,var_11414,const_11415,var_11416,])
output2 = relay.Tuple([call_11410,call_11417,var_11414,const_11415,var_11416,])
func_11422 = relay.Function([var_11414,var_11416,], output)
mod['func_11422'] = func_11422
mod = relay.transform.InferType()(mod)
var_11423 = relay.var("var_11423", dtype = "uint16", shape = (832,))#candidate|11423|(832,)|var|uint16
var_11424 = relay.var("var_11424", dtype = "float64", shape = (480,))#candidate|11424|(480,)|var|float64
output = func_11422(var_11423,var_11424,)
func_11425 = relay.Function([var_11423,var_11424,], output)
mutated_mod['func_11425'] = func_11425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6512_call = mod.get_global_var('func_6512')
func_6513_call = mutated_mod.get_global_var('func_6513')
call_11441 = func_6512_call()
call_11442 = func_6512_call()
output = call_11441
output2 = call_11442
func_11447 = relay.Function([], output)
mod['func_11447'] = func_11447
mod = relay.transform.InferType()(mod)
output = func_11447()
func_11448 = relay.Function([], output)
mutated_mod['func_11448'] = func_11448
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11479 = relay.var("var_11479", dtype = "float32", shape = (14, 6, 13))#candidate|11479|(14, 6, 13)|var|float32
uop_11480 = relay.rsqrt(var_11479.astype('float32')) # shape=(14, 6, 13)
uop_11488 = relay.log2(uop_11480.astype('float32')) # shape=(14, 6, 13)
func_6639_call = mod.get_global_var('func_6639')
func_6644_call = mutated_mod.get_global_var('func_6644')
var_11516 = relay.var("var_11516", dtype = "uint16", shape = (832,))#candidate|11516|(832,)|var|uint16
var_11517 = relay.var("var_11517", dtype = "int16", shape = ())#candidate|11517|()|var|int16
var_11518 = relay.var("var_11518", dtype = "float64", shape = (480,))#candidate|11518|(480,)|var|float64
call_11515 = relay.TupleGetItem(func_6639_call(relay.reshape(var_11516.astype('uint16'), [13, 16, 4]), relay.reshape(var_11517.astype('int16'), []), relay.reshape(var_11518.astype('float64'), [480,]), ), 6)
call_11519 = relay.TupleGetItem(func_6644_call(relay.reshape(var_11516.astype('uint16'), [13, 16, 4]), relay.reshape(var_11517.astype('int16'), []), relay.reshape(var_11518.astype('float64'), [480,]), ), 6)
uop_11528 = relay.acos(uop_11488.astype('float64')) # shape=(14, 6, 13)
output = relay.Tuple([call_11515,var_11516,var_11517,var_11518,uop_11528,])
output2 = relay.Tuple([call_11519,var_11516,var_11517,var_11518,uop_11528,])
func_11547 = relay.Function([var_11479,var_11516,var_11517,var_11518,], output)
mod['func_11547'] = func_11547
mod = relay.transform.InferType()(mod)
mutated_mod['func_11547'] = func_11547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11547_call = mutated_mod.get_global_var('func_11547')
var_11549 = relay.var("var_11549", dtype = "float32", shape = (14, 6, 13))#candidate|11549|(14, 6, 13)|var|float32
var_11550 = relay.var("var_11550", dtype = "uint16", shape = (832,))#candidate|11550|(832,)|var|uint16
var_11551 = relay.var("var_11551", dtype = "int16", shape = ())#candidate|11551|()|var|int16
var_11552 = relay.var("var_11552", dtype = "float64", shape = (480,))#candidate|11552|(480,)|var|float64
call_11548 = func_11547_call(var_11549,var_11550,var_11551,var_11552,)
output = call_11548
func_11553 = relay.Function([var_11549,var_11550,var_11551,var_11552,], output)
mutated_mod['func_11553'] = func_11553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8028_call = mod.get_global_var('func_8028')
func_8029_call = mutated_mod.get_global_var('func_8029')
call_11584 = relay.TupleGetItem(func_8028_call(), 0)
call_11585 = relay.TupleGetItem(func_8029_call(), 0)
output = call_11584
output2 = call_11585
func_11591 = relay.Function([], output)
mod['func_11591'] = func_11591
mod = relay.transform.InferType()(mod)
mutated_mod['func_11591'] = func_11591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11591_call = mutated_mod.get_global_var('func_11591')
call_11592 = func_11591_call()
output = call_11592
func_11593 = relay.Function([], output)
mutated_mod['func_11593'] = func_11593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11615 = relay.var("var_11615", dtype = "float64", shape = (4, 3, 7))#candidate|11615|(4, 3, 7)|var|float64
uop_11616 = relay.tan(var_11615.astype('float64')) # shape=(4, 3, 7)
output = relay.Tuple([uop_11616,])
output2 = relay.Tuple([uop_11616,])
F = relay.Function([var_11615,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11615,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

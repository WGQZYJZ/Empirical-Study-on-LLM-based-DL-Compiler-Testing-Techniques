==========mod==========
#[version = "0.0.5"]
def @func_3112() -> Tensor[(4, 9, 4), float64] {
  @func_2955() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_8959() -> Tensor[(4, 9, 4), float64] {
  @func_3819() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_10425() -> Tensor[(4, 9, 4), float64] {
  %0 = @func_6551() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %0.0
}

def @func_10993() -> Tensor[(4, 9, 4), float64] {
  %1 = @func_10036() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %1.0
}

def @func_7783(%var_7750: Tensor[(52), int64]) -> (Tensor[(4, 9, 4), float64], Tensor[(52), int64], Tensor[(52), float64], Tensor[(3, 1, 3), float64], Tensor[(56), float64]) {
  %2 = @func_6551() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %3 = cast(%var_7750, dtype="int64") /* ty=Tensor[(52), int64] */;
  %4 = reshape(%3, newshape=[52]) /* ty=Tensor[(52), int64] */;
  %5 = @func_5846(%4) /* ty=(Tensor[(52), int64],) */;
  %6 = cast(%var_7750, dtype="float64") /* ty=Tensor[(52), float64] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %8 = %2.0;
  %9 = cast(%8, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %10 = reshape(%7, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %11 = reshape(%9, newshape=[4, 9, 4]) /* ty=Tensor[(4, 9, 4), bool] */;
  %12 = @func_5142(%10, %11) /* ty=(Tensor[(4, 9, 4), float32], Tensor[(3, 1, 3), float64], Tensor[(72), uint32], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(4, 9, 4), bool], Tensor[(7, 13, 4), bool], Tensor[(13, 4), int8], Tensor[(364), int8], Tensor[(3, 4, 6), float64]) */;
  %13 = %5.0;
  %14 = atan(%6) /* ty=Tensor[(52), float64] */;
  %15 = %12.1;
  (%8, %13, %14, %15, meta[relay.Constant][0] /* ty=Tensor[(56), float64] */)
}

def @func_8886(%var_8872: int64, %var_8873: Tensor[(7, 6, 1), int64]) -> (Tensor[(7, 6, 1), bool],) {
  %16 = cast(%var_8872, dtype="bool") /* ty=bool */;
  %17 = cast(%var_8873, dtype="bool") /* ty=Tensor[(7, 6, 1), bool] */;
  %18 = less_equal(%16, %17) /* ty=Tensor[(7, 6, 1), bool] */;
  (%18,)
}

def @func_286(%var_269: Tensor[(1, 13, 4), int8], %var_270: Tensor[(7, 13, 4), int8]) -> Tensor[(7, 13, 4), bool] {
  %19 = cast(%var_269, dtype="bool") /* ty=Tensor[(1, 13, 4), bool] */;
  %20 = cast(%var_270, dtype="bool") /* ty=Tensor[(7, 13, 4), bool] */;
  equal(%19, %20) /* ty=Tensor[(7, 13, 4), bool] */
}

def @func_1471(%var_1468: Tensor[(3, 1, 3), float64]) -> (Tensor[(3, 1, 3), float64],) {
  %21 = cast(%var_1468, dtype="float64") /* ty=Tensor[(3, 1, 3), float64] */;
  %22 = acosh(%21) /* ty=Tensor[(3, 1, 3), float64] */;
  (%22,)
}

def @func_6974(%var_6933: uint8, %var_6934: Tensor[(1, 72), float32], %var_6935: Tensor[(52), int8]) -> (Tensor[(364), int8], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(52), int8], Tensor[(52), int8], Tensor[(40, 12), float64], Tensor[(1, 72), int16], Tensor[(1, 72), uint64]) {
  %23 = @func_5356() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(40, 12), float64] */, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %25 = reshape(%24, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %26 = @func_6031(%25) /* ty=(Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(480), float64]) */;
  %27 = cast(%var_6933, dtype="uint8") /* ty=uint8 */;
  %28 = cast(%var_6934, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %29 = cast(%var_6935, dtype="int8") /* ty=Tensor[(52), int8] */;
  %30 = reshape(%27, newshape=[]) /* ty=uint8 */;
  %31 = reshape(%28, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %32 = reshape(%29, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %33 = @func_484(%30, %31, %32) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(40, 12), float64] */, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %35 = cast(%var_6933, dtype="float64") /* ty=float64 */;
  %36 = cast(%var_6934, dtype="int16") /* ty=Tensor[(1, 72), int16] */;
  %37 = cast(%var_6933, dtype="int16") /* ty=int16 */;
  %38 = cast(%var_6934, dtype="uint64") /* ty=Tensor[(1, 72), uint64] */;
  %39 = cast(%var_6933, dtype="uint64") /* ty=uint64 */;
  %40 = @func_6704() /* ty=Tensor[(364), int8] */;
  %41 = %23.0;
  %42 = %26.3;
  %43 = %33.3;
  %44 = floor_mod(%34, %35) /* ty=Tensor[(40, 12), float64] */;
  %45 = subtract(%36, %37) /* ty=Tensor[(1, 72), int16] */;
  %46 = right_shift(%38, %39) /* ty=Tensor[(1, 72), uint64] */;
  (%40, %41, %42, %43, %var_6935, %44, %45, %46)
}

def @func_3413(%var_3381: Tensor[(1008), float64], %var_3397: Tensor[(2288), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], int16, Tensor[(2288), float64], Tensor[(10, 9, 16), uint8]) {
  %47 = cast(%var_3381, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %48 = reshape(%47, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %49 = @func_1841(%48) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
  %50 = cast(%var_3397, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %51 = cast(meta[relay.Constant][2] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %52 = reshape(%50, newshape=[13, 16, 11]) /* ty=Tensor[(13, 16, 11), float64] */;
  %53 = reshape(%51, newshape=[]) /* ty=int16 */;
  %54 = @func_2053(%52, %53) /* ty=(Tensor[(13, 16, 11), float32], Tensor[(13, 16, 11), float64], Tensor[(13, 16, 4), bool], int16, Tensor[(832), int16]) */;
  %55 = cast(meta[relay.Constant][2] /* ty=int16 */, dtype="uint8") /* ty=uint8 */;
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 9, 16), int16] */, dtype="uint8") /* ty=Tensor[(10, 9, 16), uint8] */;
  %57 = @func_3180() /* ty=Tensor[(4, 9, 4), float64] */;
  %58 = %49.2;
  %59 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
  %60 = %54.3;
  %61 = bitwise_xor(%55, %56) /* ty=Tensor[(10, 9, 16), uint8] */;
  (%57, %58, %var_3381, %59, %60, %var_3397, %61)
}

def @func_211(%var_206: Tensor[(2, 14, 2), float64]) -> Tensor[(2, 14, 2), bool] {
  %62 = cast(4.00303f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %63 = cast(%var_206, dtype="bool") /* ty=Tensor[(2, 14, 2), bool] */;
  greater(%62, %63) /* ty=Tensor[(2, 14, 2), bool] */
}

def @func_6639(%var_6591: Tensor[(13, 16, 4), uint16], %var_6612: int16, %var_6617: Tensor[(480), float64]) -> (Tensor[(1008), float64], Tensor[(364), int8], Tensor[(13, 16, 4), bool], Tensor[(13, 16, 4), bool], int16, Tensor[(72), float32], Tensor[(480), float64], Tensor[(52, 1), int8], Tensor[(7, 13, 4), bool]) {
  %64 = cast(meta[relay.Constant][4] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %65 = cast(meta[relay.Constant][4] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %66 = reshape(%64, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %67 = reshape(%65, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %68 = @func_3335(%66, %67) /* ty=(Tensor[(72), uint32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint64]) */;
  %69 = cast(%var_6591, dtype="uint16") /* ty=Tensor[(13, 16, 4), uint16] */;
  %70 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(13, 16, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 16, 4), uint16] */, dtype="uint16") /* ty=Tensor[(13, 16, 4), uint16] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %73 = bitwise_or(%71, %72) /* ty=Tensor[(13, 16, 4), uint16] */;
  %74 = cast(%73, dtype="bool") /* ty=Tensor[(13, 16, 4), bool] */;
  %75 = shape_of(%var_6591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%var_6591, dtype="bool") /* ty=Tensor[(13, 16, 4), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %78 = cast(%var_6612, dtype="int16") /* ty=int16 */;
  %79 = less_equal(%76, %77) /* ty=Tensor[(13, 16, 4), bool] */;
  %80 = cast(%79, dtype="int16") /* ty=Tensor[(13, 16, 4), int16] */;
  %81 = reshape(%78, newshape=[]) /* ty=int16 */;
  %82 = reshape(%80, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), int16] */;
  %83 = cast(%var_6617, dtype="float64") /* ty=Tensor[(480), float64] */;
  %84 = cast(%var_6617, dtype="float64") /* ty=Tensor[(480), float64] */;
  %85 = cast(meta[relay.Constant][6] /* ty=Tensor[(52, 1), int8] */, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %86 = reshape(%83, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %87 = reshape(%84, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %88 = reshape(%85, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %89 = @func_2152(%86, %87, %88) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %90 = cast(meta[relay.Constant][4] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %91 = %68.1;
  %92 = cast(%91, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %93 = reshape(%90, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %94 = reshape(%92, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %95 = @func_3165(%93, %94) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */;
  %96 = @func_1516(%81, %82) /* ty=Tensor[(13, 16, 4), bool] */;
  %97 = %89.3;
  %98 = %95.3;
  (%91, meta[relay.Constant][4] /* ty=Tensor[(364), int8] */, %79, %96, %var_6612, %97, %var_6617, meta[relay.Constant][6] /* ty=Tensor[(52, 1), int8] */, %98)
}

def @func_8177(%var_8162: Tensor[(4, 9, 4), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %99 = @func_7948() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %100 = %99.0;
  %101 = cast(%var_8162, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%100, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %105 = cast(%100, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %106 = floor_divide(%103, %104) /* ty=Tensor[(4, 9, 4), float64] */;
  %107 = cos(%105) /* ty=Tensor[(4, 9, 4), float64] */;
  (%106, %107)
}

def @func_7274(%var_7212: Tensor[(12, 13, 7), float64]) -> (Tensor[(12, 13, 7), float64], Tensor[(364), uint8]) {
  %108 = cast(%var_7212, dtype="float64") /* ty=Tensor[(12, 13, 7), float64] */;
  %109 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(12, 13, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 13, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 13, 7), float64] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %112 = multiply(%110, %111) /* ty=Tensor[(12, 13, 7), float64] */;
  %113 = @func_6335() /* ty=Tensor[(364), uint8] */;
  (%112, %113)
}

def @func_4368() -> (Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) {
  %114 = cast(meta[relay.Constant][8] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %115 = reshape(%114, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %116 = @func_1841(%115) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
  %117 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %118 = %116.0;
  (%117, %118, meta[relay.Constant][8] /* ty=Tensor[(1008), float64] */)
}

def @func_7677() -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) {
  %119 = @func_6491() /* ty=(Tensor[(364), int8],) */;
  %120 = %119.0;
  %121 = cast(%120, dtype="int8") /* ty=Tensor[(364), int8] */;
  %122 = reshape(%121, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %123 = @func_7197(%122) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), float32]) */;
  %124 = @func_3180() /* ty=Tensor[(4, 9, 4), float64] */;
  %125 = %123.0;
  (%124, %120, %125)
}

def @func_8819() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %126 = @func_7309() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %127 = %126.0;
  %128 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
  (%127, %128)
}

def @func_6704() -> Tensor[(364), int8] {
  @func_6310() /* ty=Tensor[(364), int8] */
}

def @func_10854(%var_10834: Tensor[(1008), float64], %var_10835: Tensor[(72), float32], %var_10836: Tensor[(52), int8]) -> (Tensor[(4, 9, 4), float64], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(480), float64]) {
  %129 = @func_8321() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %130 = cast(%var_10834, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %131 = cast(%var_10835, dtype="float32") /* ty=Tensor[(72), float32] */;
  %132 = cast(%var_10836, dtype="int8") /* ty=Tensor[(52), int8] */;
  %133 = cast(meta[relay.Constant][9] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %134 = reshape(%130, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %135 = reshape(%131, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %136 = reshape(%132, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %137 = reshape(%133, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %138 = @func_3589(%134, %135, %136, %137) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(12, 1, 6), float32], Tensor[(72), float32], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(2288), float64], Tensor[(52), int8], Tensor[(480), float64]) */;
  %139 = %129.1;
  %140 = %138.3;
  (%139, %140, %var_10834, %var_10835, %var_10836, meta[relay.Constant][9] /* ty=Tensor[(480), float64] */)
}

def @func_5306(%var_5274: Tensor[(14, 8, 9), bool]) -> (Tensor[(14, 8, 9), bool], Tensor[(7, 13, 4), bool], Tensor[(364), int8]) {
  %141 = @func_4368() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */;
  %142 = %141.1;
  %143 = cast(%var_5274, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
  %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%142, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %147 = less(%145, %146) /* ty=Tensor[(14, 8, 9), bool] */;
  %148 = cast(%142, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
  %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%147, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %153 = cast(%var_5274, dtype="float64") /* ty=Tensor[(14, 8, 9), float64] */;
  %154 = reshape(%152, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %155 = reshape(%153, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %156 = @func_3165(%154, %155) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */;
  %157 = equal(%150, %151) /* ty=Tensor[(14, 8, 9), bool] */;
  %158 = %156.3;
  (%157, %158, meta[relay.Constant][10] /* ty=Tensor[(364), int8] */)
}

def @func_10439() -> (Tensor[(364), int8],) {
  %159 = @func_8379() /* ty=Tensor[(364), int8] */;
  (%159,)
}

def @func_7917() -> (Tensor[(4, 9, 4), float64],) {
  %160 = @func_3526() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %161 = %160.0;
  (%161,)
}

def @func_6335() -> Tensor[(364), uint8] {
  @func_4981() /* ty=Tensor[(364), uint8] */
}

def @func_11171(%var_11160: int32, %var_11161: Tensor[(2, 8, 11), int32]) -> Tensor[(2, 8, 11), int32] {
  %162 = cast(%var_11160, dtype="int32") /* ty=int32 */;
  %163 = cast(%var_11161, dtype="int32") /* ty=Tensor[(2, 8, 11), int32] */;
  left_shift(%162, %163) /* ty=Tensor[(2, 8, 11), int32] */
}

def @func_8009() -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) {
  %164 = @func_7677() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) */;
  %165 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %166 = @func_6310() /* ty=Tensor[(364), int8] */;
  %167 = %164.0;
  (%165, %166, %167)
}

def @func_8379() -> Tensor[(364), int8] {
  @func_6512() /* ty=Tensor[(364), int8] */
}

def @func_1841(%var_1816: Tensor[(14, 8, 9), float64]) -> (Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) {
  %168 = cast(%var_1816, dtype="float64") /* ty=Tensor[(14, 8, 9), float64] */;
  %169 = rsqrt(%168) /* ty=Tensor[(14, 8, 9), float64] */;
  %170 = cast(%var_1816, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
  %171 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%169, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %174 = cast(meta[relay.Constant][11] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %175 = cast(meta[relay.Constant][12] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %176 = cast(meta[relay.Constant][13] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %177 = reshape(%174, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
  %178 = reshape(%175, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %179 = reshape(%176, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
  %180 = @func_422(%177, %178, %179) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
  %181 = greater(%172, %173) /* ty=Tensor[(14, 8, 9), bool] */;
  %182 = %180.2;
  (%181, %182, meta[relay.Constant][11] /* ty=Tensor[(72), float32] */, meta[relay.Constant][12] /* ty=Tensor[(52), int8] */, meta[relay.Constant][13] /* ty=Tensor[(364), int8] */)
}

def @func_3644(%var_3626: Tensor[(72), float32]) -> (Tensor[(4, 9, 4), float64], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) {
  %183 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %184 = cast(%var_3626, dtype="float32") /* ty=Tensor[(72), float32] */;
  %185 = cast(meta[relay.Constant][14] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %186 = cast(meta[relay.Constant][15] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %187 = reshape(%184, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
  %188 = reshape(%185, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %189 = reshape(%186, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
  %190 = @func_422(%187, %188, %189) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
  %191 = %183.0;
  %192 = %190.2;
  (%191, %192, %var_3626, meta[relay.Constant][14] /* ty=Tensor[(52), int8] */, meta[relay.Constant][15] /* ty=Tensor[(364), int8] */)
}

def @func_6274(%var_6248: Tensor[(364), int8], %var_6261: uint8, %var_6262: Tensor[(72), float32]) -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(7, 13, 4), float32], Tensor[(756), uint16], Tensor[(364), int8], Tensor[(2, 504), float64], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) {
  %193 = cast(meta[relay.Constant][16] /* ty=Tensor[(756), uint16] */, dtype="uint16") /* ty=Tensor[(756), uint16] */;
  %194 = cast(%var_6248, dtype="int8") /* ty=Tensor[(364), int8] */;
  %195 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 504), float64] */, dtype="float64") /* ty=Tensor[(2, 504), float64] */;
  %196 = reshape(%193, newshape=[12, 9, 7]) /* ty=Tensor[(12, 9, 7), uint16] */;
  %197 = reshape(%194, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %198 = reshape(%195, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %199 = @func_5240(%196, %197, %198) /* ty=(Tensor[(12, 9, 7), uint16], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(7, 13, 4), float32]) */;
  %200 = cast(%var_6261, dtype="uint8") /* ty=uint8 */;
  %201 = cast(%var_6262, dtype="float32") /* ty=Tensor[(72), float32] */;
  %202 = cast(meta[relay.Constant][18] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %203 = reshape(%200, newshape=[]) /* ty=uint8 */;
  %204 = reshape(%201, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %205 = reshape(%202, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %206 = @func_484(%203, %204, %205) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */;
  %207 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
  %208 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
  %209 = %199.3;
  %210 = %206.1;
  %211 = @func_4985() /* ty=Tensor[(364), int8] */;
  (%207, %208, %209, meta[relay.Constant][16] /* ty=Tensor[(756), uint16] */, %var_6248, meta[relay.Constant][17] /* ty=Tensor[(2, 504), float64] */, %210, %var_6261, %var_6262, meta[relay.Constant][18] /* ty=Tensor[(52), int8] */, %211)
}

def @func_4218() -> Tensor[(4, 9, 4), float64] {
  %212 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
  %213 = cast(%212, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  exp(%213) /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_8028() -> (Tensor[(4, 9, 4), float64],) {
  %214 = @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */;
  %215 = %214.0;
  (%215,)
}

def @func_5846(%var_5814: Tensor[(52), int64]) -> (Tensor[(52), int64],) {
  %216 = @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */;
  %217 = %216.1;
  %218 = cast(%var_5814, dtype="int64") /* ty=Tensor[(52), int64] */;
  %219 = shape_of(%217, dtype="int32") /* ty=Tensor[(1), int32] */;
  %220 = cast(%217, dtype="int64") /* ty=Tensor[(52), int64] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?), int64] */;
  %222 = right_shift(%220, %221) /* ty=Tensor[(52), int64] */;
  (%222,)
}

def @func_7898(%var_7856: Tensor[(40, 12), float64], %var_7857: Tensor[(26, 2), int8], %var_7883: Tensor[(40, 12), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(26, 2), int8], Tensor[(364), int8], Tensor[(40, 12), int16], Tensor[(4, 9, 4), float64]) {
  %223 = @func_6144() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 5, 14), uint8]) */;
  %224 = cast(%var_7856, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %225 = cast(%var_7856, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %226 = cast(%var_7857, dtype="int8") /* ty=Tensor[(26, 2), int8] */;
  %227 = reshape(%224, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %228 = reshape(%225, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %229 = reshape(%226, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %230 = @func_2152(%227, %228, %229) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %231 = cast(%var_7883, dtype="int16") /* ty=Tensor[(40, 12), int16] */;
  %232 = shape_of(%var_7856, dtype="int32") /* ty=Tensor[(2), int32] */;
  %233 = cast(%var_7856, dtype="int16") /* ty=Tensor[(40, 12), int16] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %235 = %223.0;
  %236 = %230.3;
  %237 = @func_6512() /* ty=Tensor[(364), int8] */;
  %238 = left_shift(%233, %234) /* ty=Tensor[(40, 12), int16] */;
  %239 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
  (%235, %236, %var_7857, %237, %238, %239)
}

def @func_8321() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %240 = @func_7309() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %241 = %240.0;
  %242 = @func_6175() /* ty=Tensor[(4, 9, 4), float64] */;
  (%241, %242)
}

def @func_6491() -> (Tensor[(364), int8],) {
  %243 = @func_6074() /* ty=(Tensor[(364), int8],) */;
  %244 = %243.0;
  (%244,)
}

def @func_10343() -> (Tensor[(4, 9, 4), float64],) {
  %245 = @func_4218() /* ty=Tensor[(4, 9, 4), float64] */;
  (%245,)
}

def @func_11447() -> Tensor[(364), int8] {
  @func_6512() /* ty=Tensor[(364), int8] */
}

def @func_9494(%var_9476: Tensor[(364), int8], %var_9477: uint8, %var_9478: Tensor[(72), float32]) -> (Tensor[(364), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(4, 9, 4), bool]) {
  %246 = cast(%var_9476, dtype="int8") /* ty=Tensor[(364), int8] */;
  %247 = cast(%var_9477, dtype="uint8") /* ty=uint8 */;
  %248 = cast(%var_9478, dtype="float32") /* ty=Tensor[(72), float32] */;
  %249 = reshape(%246, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %250 = reshape(%247, newshape=[]) /* ty=uint8 */;
  %251 = reshape(%248, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %252 = @func_6274(%249, %250, %251) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(7, 13, 4), float32], Tensor[(756), uint16], Tensor[(364), int8], Tensor[(2, 504), float64], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
  %253 = @func_9202() /* ty=Tensor[(4, 9, 4), float64] */;
  %254 = cast(%253, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %255 = cast(%var_9477, dtype="bool") /* ty=bool */;
  %256 = %252.4;
  %257 = equal(%254, %255) /* ty=Tensor[(4, 9, 4), bool] */;
  (%256, %var_9476, %var_9478, %257)
}

def @func_3796() -> Tensor[(4, 9, 4), float64] {
  @func_3002() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_10744() -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8]) {
  %258 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
  %259 = @func_4985() /* ty=Tensor[(364), int8] */;
  (%258, %259)
}

def @func_7843() -> (Tensor[(4, 9, 4), float64],) {
  %260 = @func_4717() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int8], uint8, Tensor[(52), int8]) */;
  %261 = %260.0;
  (%261,)
}

def @func_9302() -> Tensor[(4, 9, 4), float64] {
  %262 = @func_8642() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %262.0
}

def @func_10262() -> Tensor[(52), int64] {
  %263 = @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */;
  %263.1
}

def @func_8745() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(2, 240), float64]) {
  %264 = @func_7309() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %265 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 240), float64] */, dtype="float64") /* ty=Tensor[(2, 240), float64] */;
  %266 = reshape(%265, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %267 = @func_6031(%266) /* ty=(Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(480), float64]) */;
  %268 = %264.0;
  %269 = @func_3002() /* ty=Tensor[(4, 9, 4), float64] */;
  %270 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %271 = %267.3;
  (%268, %269, %270, %271, meta[relay.Constant][19] /* ty=Tensor[(2, 240), float64] */)
}

def @func_7033(%var_7010: Tensor[(11, 15, 9), float64]) -> (Tensor[(11, 15, 9), float64], Tensor[(4, 9, 4), float64]) {
  %272 = cast(%var_7010, dtype="float64") /* ty=Tensor[(11, 15, 9), float64] */;
  %273 = sqrt(%272) /* ty=Tensor[(11, 15, 9), float64] */;
  %274 = @func_6175() /* ty=Tensor[(4, 9, 4), float64] */;
  (%273, %274)
}

def @func_4981() -> Tensor[(364), uint8] {
  %275 = @func_3498() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint8]) */;
  %275.2
}

def @func_7197(%var_7190: Tensor[(364), int8]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), float32]) {
  %276 = @func_6512() /* ty=Tensor[(364), int8] */;
  %277 = cast(%var_7190, dtype="float32") /* ty=Tensor[(364), float32] */;
  %278 = shape_of(%276, dtype="int32") /* ty=Tensor[(1), int32] */;
  %279 = cast(%276, dtype="float32") /* ty=Tensor[(364), float32] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?), float32] */;
  %281 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
  %282 = floor_mod(%279, %280) /* ty=Tensor[(364), float32] */;
  (%281, %282)
}

def @func_4412(%var_4397: Tensor[(4, 9, 4), float64]) -> Tensor[(4, 9, 4), float64] {
  %283 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
  %284 = cast(%var_4397, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%283, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%286, %287) /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_588(%var_585: Tensor[(3, 4, 6), float64]) -> Tensor[(3, 4, 6), float64] {
  %288 = cast(%var_585, dtype="float64") /* ty=Tensor[(3, 4, 6), float64] */;
  log(%288) /* ty=Tensor[(3, 4, 6), float64] */
}

def @func_6101() -> Tensor[(4, 9, 4), float64] {
  @func_3819() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_3945(%var_3940: Tensor[(480), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(480), float64], Tensor[(52), int8]) {
  %289 = cast(%var_3940, dtype="float64") /* ty=Tensor[(480), float64] */;
  %290 = cast(%var_3940, dtype="float64") /* ty=Tensor[(480), float64] */;
  %291 = cast(meta[relay.Constant][20] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %292 = reshape(%289, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %293 = reshape(%290, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %294 = reshape(%291, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %295 = @func_2152(%292, %293, %294) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %296 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
  %297 = %295.3;
  (%296, %297, %var_3940, meta[relay.Constant][20] /* ty=Tensor[(52), int8] */)
}

def @func_8210() -> Tensor[(364), int8] {
  @func_6310() /* ty=Tensor[(364), int8] */
}

def @func_11279() -> (Tensor[(4, 9, 4), float64],) {
  %298 = @func_10993() /* ty=Tensor[(4, 9, 4), float64] */;
  (%298,)
}

def @func_9959() -> (Tensor[(4, 9, 4), float64],) {
  %299 = @func_8642() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %300 = %299.0;
  (%300,)
}

def @func_6310() -> Tensor[(364), int8] {
  %301 = @func_6074() /* ty=(Tensor[(364), int8],) */;
  %301.0
}

def @func_5782(%var_5772: Tensor[(15, 12, 11), bool]) -> Tensor[(15, 12, 11), uint32] {
  %302 = @func_4690() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(15, 12, 11), bool], Tensor[(15, 12, 11), float32], Tensor[(6, 16, 9), float64], Tensor[(36, 24), int16], Tensor[(9), float64]) */;
  %303 = %302.1;
  %304 = cast(%var_5772, dtype="uint32") /* ty=Tensor[(15, 12, 11), uint32] */;
  %305 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %306 = cast(%303, dtype="uint32") /* ty=Tensor[(15, 12, 11), uint32] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  multiply(%306, %307) /* ty=Tensor[(15, 12, 11), uint32] */
}

def @func_8642() -> (Tensor[(4, 9, 4), float64],) {
  %308 = @func_5356() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %309 = %308.0;
  (%309,)
}

def @func_8594(%var_8581: Tensor[(7, 4, 1), float64]) -> (Tensor[(7, 4, 1), float64],) {
  %310 = cast(%var_8581, dtype="float64") /* ty=Tensor[(7, 4, 1), float64] */;
  %311 = atan(%310) /* ty=Tensor[(7, 4, 1), float64] */;
  (%311,)
}

def @func_4809(%var_4788: Tensor[(36, 2), uint32], %var_4790: Tensor[(56), float64], %var_4791: Tensor[(1008), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(36, 2), uint32], Tensor[(7, 52), uint8], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64], Tensor[(4, 9, 4), float64]) {
  %312 = cast(%var_4788, dtype="uint32") /* ty=Tensor[(36, 2), uint32] */;
  %313 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 52), uint8] */, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %314 = cast(%var_4790, dtype="float64") /* ty=Tensor[(56), float64] */;
  %315 = cast(%var_4791, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %316 = reshape(%312, newshape=[72]) /* ty=Tensor[(72), uint32] */;
  %317 = reshape(%313, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %318 = reshape(%314, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %319 = reshape(%315, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %320 = @func_3720(%316, %317, %318, %319) /* ty=(Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(364), uint32], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(3, 4, 6), float64]) */;
  %321 = cast(meta[relay.Constant][22] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %322 = reshape(%321, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %323 = @func_1471(%322) /* ty=(Tensor[(3, 1, 3), float64],) */;
  %324 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
  %325 = %320.7;
  %326 = %323.0;
  %327 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
  (%324, %325, %var_4788, meta[relay.Constant][21] /* ty=Tensor[(7, 52), uint8] */, %var_4790, %var_4791, %326, meta[relay.Constant][22] /* ty=Tensor[(9), float64] */, %327)
}

def @func_2955() -> Tensor[(4, 9, 4), float64] {
  %328 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 9, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  atan(%328) /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_3819() -> Tensor[(4, 9, 4), float64] {
  @func_3112() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_6551() -> (Tensor[(4, 9, 4), float64],) {
  %329 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  (%329,)
}

def @func_11019() -> (Tensor[(4, 9, 4), float64],) {
  %330 = @func_10720() /* ty=Tensor[(4, 9, 4), float64] */;
  (%330,)
}

def @func_8529(%var_8453: Tensor[(4, 9, 4), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(?, ?, ?), bool], Tensor[(1), float32], Tensor[(4, 9, 4), float64]) {
  %331 = @func_4218() /* ty=Tensor[(4, 9, 4), float64] */;
  %332 = cast(%var_8453, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %333 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%331, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %336 = cast(meta[relay.Constant][24] /* ty=Tensor[(1), float32] */, dtype="float32") /* ty=Tensor[(1), float32] */;
  %337 = reshape(%336, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), float32] */;
  %338 = floor_mod(%334, %335) /* ty=Tensor[(4, 9, 4), float64] */;
  %339 = @func_2708(%337) /* ty=Tensor[(?, ?, ?), bool] */;
  %340 = @func_6175() /* ty=Tensor[(4, 9, 4), float64] */;
  (%338, %339, meta[relay.Constant][24] /* ty=Tensor[(1), float32] */, %340)
}

def @func_6074() -> (Tensor[(364), int8],) {
  %341 = @func_4985() /* ty=Tensor[(364), int8] */;
  (%341,)
}

def @func_2241(%var_2179: Tensor[(5, 10, 4), float32]) -> (Tensor[(5, 10, 4), float32], Tensor[(5, 10, 4), float64], Tensor[(3, 1, 3), float64], Tensor[(864), int16], Tensor[(1, 9), float64], Tensor[(2, 14, 2), bool], Tensor[(56), float64]) {
  %342 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 10, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 10, 4), float32] */;
  %343 = shape_of(%var_2179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%var_2179, dtype="float32") /* ty=Tensor[(5, 10, 4), float32] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %346 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 10, 4), float32] */, dtype="float64") /* ty=Tensor[(5, 10, 4), float64] */;
  %347 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), int16] */, dtype="int16") /* ty=Tensor[(864), int16] */;
  %348 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), int16] */, dtype="int16") /* ty=Tensor[(864), int16] */;
  %349 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 9), float64] */;
  %350 = reshape(%347, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
  %351 = reshape(%348, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
  %352 = reshape(%349, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %353 = @func_1879(%350, %351, %352) /* ty=(Tensor[(6, 16, 9), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) */;
  %354 = cast(meta[relay.Constant][28] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %355 = reshape(%354, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float64] */;
  %356 = mod(%344, %345) /* ty=Tensor[(5, 10, 4), float32] */;
  %357 = acos(%346) /* ty=Tensor[(5, 10, 4), float64] */;
  %358 = %353.1;
  %359 = @func_211(%355) /* ty=Tensor[(2, 14, 2), bool] */;
  (%356, %357, %358, meta[relay.Constant][26] /* ty=Tensor[(864), int16] */, meta[relay.Constant][27] /* ty=Tensor[(1, 9), float64] */, %359, meta[relay.Constant][28] /* ty=Tensor[(56), float64] */)
}

def @func_7948() -> (Tensor[(4, 9, 4), float64],) {
  %360 = @func_4218() /* ty=Tensor[(4, 9, 4), float64] */;
  (%360,)
}

def @func_4944(%var_4881: Tensor[(480), float64], %var_4940: Tensor[(9), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(52), int8], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(52, 480), bool], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) {
  %361 = @func_4368() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */;
  %362 = @func_4368() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */;
  %363 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %364 = cast(%var_4881, dtype="float64") /* ty=Tensor[(480), float64] */;
  %365 = cast(%var_4881, dtype="float64") /* ty=Tensor[(480), float64] */;
  %366 = cast(meta[relay.Constant][29] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %367 = reshape(%364, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %368 = reshape(%365, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %369 = reshape(%366, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %370 = @func_2152(%367, %368, %369) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %371 = %370.1;
  %372 = cast(%371, dtype="bool") /* ty=Tensor[(52, 1), bool] */;
  %373 = cast(%var_4881, dtype="bool") /* ty=Tensor[(480), bool] */;
  %374 = cast(%var_4940, dtype="float64") /* ty=Tensor[(9), float64] */;
  %375 = reshape(%374, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %376 = @func_1471(%375) /* ty=(Tensor[(3, 1, 3), float64],) */;
  %377 = %361.0;
  %378 = %362.2;
  %379 = %363.0;
  %380 = equal(%372, %373) /* ty=Tensor[(52, 480), bool] */;
  %381 = %376.0;
  (%377, meta[relay.Constant][29] /* ty=Tensor[(52), int8] */, %378, %379, %380, %381, %var_4940)
}

def @func_6512() -> Tensor[(364), int8] {
  @func_4985() /* ty=Tensor[(364), int8] */
}

def @func_4985() -> Tensor[(364), int8] {
  %382 = @func_4334() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), uint32], Tensor[(364), int8]) */;
  %382.2
}

def @func_1516(%var_1504: int16, %var_1505: Tensor[(13, 16, 4), int16]) -> Tensor[(13, 16, 4), bool] {
  %383 = cast(%var_1504, dtype="bool") /* ty=bool */;
  %384 = cast(%var_1505, dtype="bool") /* ty=Tensor[(13, 16, 4), bool] */;
  less(%383, %384) /* ty=Tensor[(13, 16, 4), bool] */
}

def @func_4111(%var_4103: Tensor[(1, 72), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float32], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(1, 72), float64]) {
  %385 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
  %386 = cast(%385, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %387 = cast(%385, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %388 = sigmoid(%387) /* ty=Tensor[(4, 9, 4), float32] */;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %390 = cast(%var_4103, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %391 = reshape(%390, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
  %392 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
  %393 = tan(%386) /* ty=Tensor[(4, 9, 4), float32] */;
  %394 = log10(%389) /* ty=Tensor[(4, 9, 4), float64] */;
  %395 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %396 = @func_588(%391) /* ty=Tensor[(3, 4, 6), float64] */;
  (%392, %393, %394, %395, %396, %var_4103)
}

def @func_5433(%var_5428: Tensor[(1, 832), int16]) -> (Tensor[(1008), float32], Tensor[(13, 16, 4), bool], int16, Tensor[(1, 832), int16]) {
  %397 = @func_4368() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */;
  %398 = %397.2;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %400 = cast(meta[relay.Constant][30] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %401 = cast(%var_5428, dtype="int16") /* ty=Tensor[(1, 832), int16] */;
  %402 = reshape(%400, newshape=[]) /* ty=int16 */;
  %403 = reshape(%401, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), int16] */;
  %404 = atan(%399) /* ty=Tensor[(1008), float32] */;
  %405 = @func_1516(%402, %403) /* ty=Tensor[(13, 16, 4), bool] */;
  (%404, %405, meta[relay.Constant][30] /* ty=int16 */, %var_5428)
}

def @func_7309() -> (Tensor[(4, 9, 4), float64],) {
  %406 = @func_6144() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 5, 14), uint8]) */;
  %407 = %406.0;
  (%407,)
}

def @func_9115(%var_9082: Tensor[(4, 9, 4), float64], %var_9097: Tensor[(72), float64]) -> (Tensor[(4, 9, 4), uint32], Tensor[(4, 9, 4), float64], Tensor[(72), float64], Tensor[(3, 4, 6), float32]) {
  %408 = @func_8819() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %409 = %408.1;
  %410 = cast(%var_9082, dtype="uint32") /* ty=Tensor[(4, 9, 4), uint32] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%409, dtype="uint32") /* ty=Tensor[(4, 9, 4), uint32] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %414 = @func_5356() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %415 = cast(%var_9097, dtype="float64") /* ty=Tensor[(72), float64] */;
  %416 = reshape(%415, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
  %417 = @func_588(%416) /* ty=Tensor[(3, 4, 6), float64] */;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(3, 4, 6), float32] */;
  %419 = add(%412, %413) /* ty=Tensor[(4, 9, 4), uint32] */;
  %420 = %414.0;
  %421 = asinh(%418) /* ty=Tensor[(3, 4, 6), float32] */;
  (%419, %420, %var_9097, %421)
}

def @func_5142(%var_5056: Tensor[(56), float64], %var_5085: Tensor[(4, 9, 4), bool]) -> (Tensor[(4, 9, 4), float32], Tensor[(3, 1, 3), float64], Tensor[(72), uint32], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(4, 9, 4), bool], Tensor[(7, 13, 4), bool], Tensor[(13, 4), int8], Tensor[(364), int8], Tensor[(3, 4, 6), float64]) {
  %422 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %423 = %422.0;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %425 = asin(%424) /* ty=Tensor[(4, 9, 4), float64] */;
  %426 = cast(%425, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %427 = cast(meta[relay.Constant][31] /* ty=Tensor[(72), uint32] */, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %428 = cast(%var_5056, dtype="float64") /* ty=Tensor[(56), float64] */;
  %429 = cast(meta[relay.Constant][32] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %430 = reshape(%427, newshape=[36, 2]) /* ty=Tensor[(36, 2), uint32] */;
  %431 = reshape(%428, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %432 = reshape(%429, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %433 = @func_4809(%430, %431, %432) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(36, 2), uint32], Tensor[(7, 52), uint8], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64], Tensor[(4, 9, 4), float64]) */;
  %434 = cast(%423, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %435 = acosh(%434) /* ty=Tensor[(4, 9, 4), float32] */;
  %436 = cast(%425, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %440 = logical_or(%438, %439) /* ty=Tensor[(4, 9, 4), bool] */;
  %441 = cast(%var_5085, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%440, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %445 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 4), int8] */, dtype="int8") /* ty=Tensor[(13, 4), int8] */;
  %446 = cast(meta[relay.Constant][34] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %447 = reshape(%445, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), int8] */;
  %448 = reshape(%446, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), int8] */;
  %449 = cast(meta[relay.Constant][31] /* ty=Tensor[(72), uint32] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %450 = reshape(%449, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
  %451 = log2(%426) /* ty=Tensor[(4, 9, 4), float32] */;
  %452 = %433.6;
  %453 = logical_and(%443, %444) /* ty=Tensor[(4, 9, 4), bool] */;
  %454 = @func_286(%447, %448) /* ty=Tensor[(7, 13, 4), bool] */;
  %455 = @func_588(%450) /* ty=Tensor[(3, 4, 6), float64] */;
  (%451, %452, meta[relay.Constant][31] /* ty=Tensor[(72), uint32] */, %var_5056, meta[relay.Constant][32] /* ty=Tensor[(1008), float64] */, %453, %454, meta[relay.Constant][33] /* ty=Tensor[(13, 4), int8] */, meta[relay.Constant][34] /* ty=Tensor[(364), int8] */, %455)
}

def @func_8555(%var_8549: float64, %var_8550: Tensor[(16, 13, 9), float64]) -> (Tensor[(16, 13, 9), float64],) {
  %456 = cast(%var_8549, dtype="float64") /* ty=float64 */;
  %457 = cast(%var_8550, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %458 = power(%456, %457) /* ty=Tensor[(16, 13, 9), float64] */;
  (%458,)
}

def @func_484(%var_465: uint8, %var_472: Tensor[(72), float32], %var_473: Tensor[(52), int8]) -> (Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) {
  %459 = cast(%var_465, dtype="uint8") /* ty=uint8 */;
  %460 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 9, 6), uint8] */, dtype="uint8") /* ty=Tensor[(11, 9, 6), uint8] */;
  %461 = cast(%var_472, dtype="float32") /* ty=Tensor[(72), float32] */;
  %462 = cast(%var_473, dtype="int8") /* ty=Tensor[(52), int8] */;
  %463 = cast(meta[relay.Constant][36] /* ty=Tensor[(91, 4), int8] */, dtype="int8") /* ty=Tensor[(91, 4), int8] */;
  %464 = reshape(%461, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
  %465 = reshape(%462, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %466 = reshape(%463, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
  %467 = @func_422(%464, %465, %466) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
  %468 = subtract(%459, %460) /* ty=Tensor[(11, 9, 6), uint8] */;
  %469 = %467.2;
  (%468, %469, %var_472, %var_473, meta[relay.Constant][36] /* ty=Tensor[(91, 4), int8] */)
}

def @func_10119() -> (Tensor[(2, 14, 2), float64],) {
  %470 = @func_10023() /* ty=(Tensor[(364), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64]) */;
  %471 = %470.1;
  %472 = cast(%471, dtype="float64") /* ty=Tensor[(2, 14, 2), float64] */;
  %473 = log10(%472) /* ty=Tensor[(2, 14, 2), float64] */;
  (%473,)
}

def @func_2708(%var_2696: Tensor[(1, 1, 1), float32]) -> Tensor[(?, ?, ?), bool] {
  %474 = cast(%var_2696, dtype="float32") /* ty=Tensor[(1, 1, 1), float32] */;
  %475 = cosh(%474) /* ty=Tensor[(1, 1, 1), float32] */;
  %476 = cast(%var_2696, dtype="bool") /* ty=Tensor[(1, 1, 1), bool] */;
  %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%475, dtype="bool") /* ty=Tensor[(1, 1, 1), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%478, %479) /* ty=Tensor[(?, ?, ?), bool] */
}

def @func_7118(%var_7089: Tensor[(56), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(56), float64], Tensor[(9), float64], Tensor[(6, 144), int16], Tensor[(3, 3), float64]) {
  %480 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
  %481 = cast(%480, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %482 = cast(%var_7089, dtype="float64") /* ty=Tensor[(56), float64] */;
  %483 = cast(%480, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %484 = reshape(%482, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %485 = reshape(%483, newshape=[4, 9, 4]) /* ty=Tensor[(4, 9, 4), bool] */;
  %486 = @func_5142(%484, %485) /* ty=(Tensor[(4, 9, 4), float32], Tensor[(3, 1, 3), float64], Tensor[(72), uint32], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(4, 9, 4), bool], Tensor[(7, 13, 4), bool], Tensor[(13, 4), int8], Tensor[(364), int8], Tensor[(3, 4, 6), float64]) */;
  %487 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 144), int16] */, dtype="int16") /* ty=Tensor[(6, 144), int16] */;
  %488 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 144), int16] */, dtype="int16") /* ty=Tensor[(6, 144), int16] */;
  %489 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 3), float64] */;
  %490 = reshape(%487, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
  %491 = reshape(%488, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
  %492 = reshape(%489, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %493 = @func_1879(%490, %491, %492) /* ty=(Tensor[(6, 16, 9), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) */;
  %494 = acos(%481) /* ty=Tensor[(4, 9, 4), float64] */;
  %495 = %486.9;
  %496 = %493.2;
  (%494, %495, %var_7089, %496, meta[relay.Constant][37] /* ty=Tensor[(6, 144), int16] */, meta[relay.Constant][38] /* ty=Tensor[(3, 3), float64] */)
}

def @func_3526() -> (Tensor[(4, 9, 4), float64],) {
  %497 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
  (%497,)
}

def @func_2053(%var_2016: Tensor[(13, 16, 11), float64], %var_2045: int16) -> (Tensor[(13, 16, 11), float32], Tensor[(13, 16, 11), float64], Tensor[(13, 16, 4), bool], int16, Tensor[(832), int16]) {
  %498 = cast(%var_2016, dtype="float32") /* ty=Tensor[(13, 16, 11), float32] */;
  %499 = cast(%var_2016, dtype="float64") /* ty=Tensor[(13, 16, 11), float64] */;
  %500 = exp(%499) /* ty=Tensor[(13, 16, 11), float64] */;
  %501 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 16, 11), float64] */, dtype="bool") /* ty=Tensor[(13, 16, 11), bool] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="bool") /* ty=Tensor[(13, 16, 11), bool] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %505 = equal(%503, %504) /* ty=Tensor[(13, 16, 11), bool] */;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(13, 16, 11), float64] */;
  %507 = cast(%var_2045, dtype="int16") /* ty=int16 */;
  %508 = cast(meta[relay.Constant][40] /* ty=Tensor[(832), int16] */, dtype="int16") /* ty=Tensor[(832), int16] */;
  %509 = reshape(%507, newshape=[]) /* ty=int16 */;
  %510 = reshape(%508, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), int16] */;
  %511 = asinh(%498) /* ty=Tensor[(13, 16, 11), float32] */;
  %512 = tan(%506) /* ty=Tensor[(13, 16, 11), float64] */;
  %513 = @func_1516(%509, %510) /* ty=Tensor[(13, 16, 4), bool] */;
  (%511, %512, %513, %var_2045, meta[relay.Constant][40] /* ty=Tensor[(832), int16] */)
}

def @func_1879(%var_1855: Tensor[(6, 16, 9), int16], %var_1856: Tensor[(6, 16, 9), int16], %var_1875: Tensor[(9), float64]) -> (Tensor[(6, 16, 9), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) {
  %514 = cast(%var_1856, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
  %515 = shape_of(%var_1855, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%var_1855, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %518 = not_equal(%516, %517) /* ty=Tensor[(6, 16, 9), bool] */;
  %519 = cast(%518, dtype="float64") /* ty=Tensor[(6, 16, 9), float64] */;
  %520 = cast(%var_1875, dtype="float64") /* ty=Tensor[(9), float64] */;
  %521 = reshape(%520, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %522 = @func_1471(%521) /* ty=(Tensor[(3, 1, 3), float64],) */;
  %523 = tan(%519) /* ty=Tensor[(6, 16, 9), float64] */;
  %524 = %522.0;
  (%523, %524, %var_1875)
}

def @func_10809(%var_10767: Tensor[(11, 10, 11), float32], %var_10785: Tensor[(1008), float64], %var_10786: Tensor[(6, 12), float32], %var_10788: Tensor[(480), float64]) -> (Tensor[(11, 10, 11), float32], Tensor[(2, 16, 12), bool], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(6, 12), float32], Tensor[(13, 4), int8], Tensor[(480), float64], Tensor[(4, 9, 4), float64], Tensor[(144), float64]) {
  %525 = cast(%var_10767, dtype="float32") /* ty=Tensor[(11, 10, 11), float32] */;
  %526 = @func_9240() /* ty=(Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), float32], Tensor[(4, 9, 4), float64]) */;
  %527 = cast(%var_10785, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %528 = cast(%var_10786, dtype="float32") /* ty=Tensor[(6, 12), float32] */;
  %529 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 4), int8] */, dtype="int8") /* ty=Tensor[(13, 4), int8] */;
  %530 = cast(%var_10788, dtype="float64") /* ty=Tensor[(480), float64] */;
  %531 = reshape(%527, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %532 = reshape(%528, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %533 = reshape(%529, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %534 = reshape(%530, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %535 = @func_3589(%531, %532, %533, %534) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(12, 1, 6), float32], Tensor[(72), float32], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(2288), float64], Tensor[(52), int8], Tensor[(480), float64]) */;
  %536 = cast(meta[relay.Constant][42] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %537 = reshape(%536, newshape=[4, 9, 4]) /* ty=Tensor[(4, 9, 4), float64] */;
  %538 = @func_8177(%537) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %539 = tan(%525) /* ty=Tensor[(11, 10, 11), float32] */;
  %540 = %526.0;
  %541 = %535.3;
  %542 = %538.0;
  (%539, %540, %541, %var_10785, %var_10786, meta[relay.Constant][41] /* ty=Tensor[(13, 4), int8] */, %var_10788, %542, meta[relay.Constant][42] /* ty=Tensor[(144), float64] */)
}

def @func_3180() -> Tensor[(4, 9, 4), float64] {
  @func_3002() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_3002() -> Tensor[(4, 9, 4), float64] {
  @func_2955() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_4690() -> (Tensor[(4, 9, 4), float64], Tensor[(15, 12, 11), bool], Tensor[(15, 12, 11), float32], Tensor[(6, 16, 9), float64], Tensor[(36, 24), int16], Tensor[(9), float64]) {
  %543 = cast(meta[relay.Constant][43] /* ty=Tensor[(15, 12, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 12, 11), float32] */;
  %544 = atanh(%543) /* ty=Tensor[(15, 12, 11), float32] */;
  %545 = cast(%544, dtype="float64") /* ty=Tensor[(15, 12, 11), float64] */;
  %546 = log2(%545) /* ty=Tensor[(15, 12, 11), float64] */;
  %547 = cast(%546, dtype="float64") /* ty=Tensor[(15, 12, 11), float64] */;
  %548 = rsqrt(%547) /* ty=Tensor[(15, 12, 11), float64] */;
  %549 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 12, 11), float64] */, dtype="bool") /* ty=Tensor[(15, 12, 11), bool] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%548, dtype="bool") /* ty=Tensor[(15, 12, 11), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %553 = cast(%546, dtype="float32") /* ty=Tensor[(15, 12, 11), float32] */;
  %554 = cast(meta[relay.Constant][45] /* ty=Tensor[(36, 24), int16] */, dtype="int16") /* ty=Tensor[(36, 24), int16] */;
  %555 = cast(meta[relay.Constant][45] /* ty=Tensor[(36, 24), int16] */, dtype="int16") /* ty=Tensor[(36, 24), int16] */;
  %556 = cast(meta[relay.Constant][46] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %557 = reshape(%554, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
  %558 = reshape(%555, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
  %559 = reshape(%556, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %560 = @func_1879(%557, %558, %559) /* ty=(Tensor[(6, 16, 9), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) */;
  %561 = @func_3002() /* ty=Tensor[(4, 9, 4), float64] */;
  %562 = equal(%551, %552) /* ty=Tensor[(15, 12, 11), bool] */;
  %563 = acosh(%553) /* ty=Tensor[(15, 12, 11), float32] */;
  %564 = %560.0;
  (%561, %562, %563, %564, meta[relay.Constant][45] /* ty=Tensor[(36, 24), int16] */, meta[relay.Constant][46] /* ty=Tensor[(9), float64] */)
}

def @func_9202() -> Tensor[(4, 9, 4), float64] {
  %565 = @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */;
  %565.0
}

def @func_10720() -> Tensor[(4, 9, 4), float64] {
  @func_4218() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_10495() -> (Tensor[(4, 9, 4), float64],) {
  %566 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
  (%566,)
}

def @func_11591() -> Tensor[(4, 9, 4), float64] {
  %567 = @func_8028() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %567.0
}

def @func_9145() -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8]) {
  %568 = @func_5356() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %569 = @func_6074() /* ty=(Tensor[(364), int8],) */;
  %570 = %568.1;
  %571 = %569.0;
  (%570, %571)
}

def @func_9250() -> Tensor[(364), int8] {
  @func_6704() /* ty=Tensor[(364), int8] */
}

def @func_10023() -> (Tensor[(364), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64]) {
  %572 = cast(meta[relay.Constant][47] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %573 = reshape(%572, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float64] */;
  %574 = @func_6512() /* ty=Tensor[(364), int8] */;
  %575 = @func_211(%573) /* ty=Tensor[(2, 14, 2), bool] */;
  (%574, %575, meta[relay.Constant][47] /* ty=Tensor[(56), float64] */)
}

def @func_3720(%var_3682: Tensor[(72), uint32], %var_3688: Tensor[(364), uint8], %var_3696: Tensor[(56), float64], %var_3702: Tensor[(1008), float64]) -> (Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(364), uint32], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(3, 4, 6), float64]) {
  %576 = cast(%var_3682, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %577 = reshape(%576, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), uint32] */;
  %578 = @func_1725(%577) /* ty=(Tensor[(6, 6, 2), uint32],) */;
  %579 = @func_3498() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint8]) */;
  %580 = %579.2;
  %581 = cast(%var_3688, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(1), int32] */;
  %583 = cast(%580, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %585 = cast(%var_3696, dtype="float64") /* ty=Tensor[(56), float64] */;
  %586 = reshape(%585, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float64] */;
  %587 = cast(%var_3702, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %588 = reshape(%587, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %589 = @func_1841(%588) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
  %590 = %578.0;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(6, 6, 2), float64] */;
  %592 = reshape(%591, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
  %593 = logical_xor(%583, %584) /* ty=Tensor[(364), uint32] */;
  %594 = @func_211(%586) /* ty=Tensor[(2, 14, 2), bool] */;
  %595 = %589.4;
  %596 = @func_588(%592) /* ty=Tensor[(3, 4, 6), float64] */;
  (%590, %var_3682, %593, %594, %var_3696, %595, %var_3702, %596)
}

def @func_10036() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %597 = @func_8642() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %598 = %597.0;
  %599 = cast(%598, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %600 = reshape(%599, newshape=[4, 9, 4]) /* ty=Tensor[(4, 9, 4), float64] */;
  %601 = @func_8529(%600) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(?, ?, ?), bool], Tensor[(1), float32], Tensor[(4, 9, 4), float64]) */;
  %602 = %601.0;
  (%598, %602)
}

def @func_11374() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %603 = @func_11279() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %604 = @func_6175() /* ty=Tensor[(4, 9, 4), float64] */;
  %605 = @func_7068() /* ty=Tensor[(4, 9, 4), float64] */;
  %606 = %603.0;
  (%604, %605, %606)
}

def @func_422(%var_403: Tensor[(12, 1, 6), float32], %var_410: Tensor[(52, 1), int8], %var_411: Tensor[(7, 52), int8]) -> (Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) {
  %607 = cast(%var_403, dtype="float32") /* ty=Tensor[(12, 1, 6), float32] */;
  %608 = cast(%var_410, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %609 = cast(%var_411, dtype="int8") /* ty=Tensor[(7, 52), int8] */;
  %610 = reshape(%608, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), int8] */;
  %611 = reshape(%609, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), int8] */;
  %612 = cosh(%607) /* ty=Tensor[(12, 1, 6), float32] */;
  %613 = @func_286(%610, %611) /* ty=Tensor[(7, 13, 4), bool] */;
  (%612, %613, %var_410, %var_411)
}

def @func_10598(%var_10570: Tensor[(1872), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), uint8], Tensor[(16, 13, 9), float64], float64, Tensor[(1872), float64]) {
  %614 = @func_8819() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %615 = cast(-4.53292f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %616 = cast(%var_10570, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %617 = reshape(%615, newshape=[]) /* ty=float64 */;
  %618 = reshape(%616, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float64] */;
  %619 = @func_8555(%617, %618) /* ty=(Tensor[(16, 13, 9), float64],) */;
  %620 = %614.1;
  %621 = @func_4981() /* ty=Tensor[(364), uint8] */;
  %622 = %619.0;
  (%620, %621, %622, -4.53292f64 /* ty=float64 */, %var_10570)
}

def @func_7353(%var_7323: Tensor[(72), float64], %var_7327: Tensor[(364), int8]) -> (Tensor[(3, 4, 6), float64], Tensor[(72), float64], Tensor[(364), int64], Tensor[(4, 9, 4), float64]) {
  %623 = cast(%var_7323, dtype="float64") /* ty=Tensor[(72), float64] */;
  %624 = reshape(%623, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
  %625 = @func_4985() /* ty=Tensor[(364), int8] */;
  %626 = cast(%var_7327, dtype="int64") /* ty=Tensor[(364), int64] */;
  %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(1), int32] */;
  %628 = cast(%625, dtype="int64") /* ty=Tensor[(364), int64] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?), int64] */;
  %630 = @func_588(%624) /* ty=Tensor[(3, 4, 6), float64] */;
  %631 = minimum(%628, %629) /* ty=Tensor[(364), int64] */;
  %632 = @func_3180() /* ty=Tensor[(4, 9, 4), float64] */;
  (%630, %var_7323, %631, %632)
}

def @func_10652() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %633 = @func_7068() /* ty=Tensor[(4, 9, 4), float64] */;
  %634 = @func_4218() /* ty=Tensor[(4, 9, 4), float64] */;
  (%633, %634)
}

def @func_9240() -> (Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), float32], Tensor[(4, 9, 4), float64]) {
  %635 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 16, 12), int32] */, dtype="bool") /* ty=Tensor[(2, 16, 12), bool] */;
  %636 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(2, 16, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %637 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 16, 12), int32] */, dtype="bool") /* ty=Tensor[(2, 16, 12), bool] */;
  %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %639 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 16, 12), int32] */, dtype="float32") /* ty=Tensor[(2, 16, 12), float32] */;
  %640 = @func_8321() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %641 = less(%637, %638) /* ty=Tensor[(2, 16, 12), bool] */;
  %642 = sinh(%639) /* ty=Tensor[(2, 16, 12), float32] */;
  %643 = %640.0;
  (%641, %642, %643)
}

def @func_6175() -> Tensor[(4, 9, 4), float64] {
  @func_3819() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_11547(%var_11479: Tensor[(14, 6, 13), float32], %var_11516: Tensor[(832), uint16], %var_11517: int16, %var_11518: Tensor[(480), float64]) -> (Tensor[(480), float64], Tensor[(832), uint16], int16, Tensor[(480), float64], Tensor[(14, 6, 13), float64]) {
  %644 = cast(%var_11516, dtype="uint16") /* ty=Tensor[(832), uint16] */;
  %645 = cast(%var_11517, dtype="int16") /* ty=int16 */;
  %646 = cast(%var_11518, dtype="float64") /* ty=Tensor[(480), float64] */;
  %647 = reshape(%644, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), uint16] */;
  %648 = reshape(%645, newshape=[]) /* ty=int16 */;
  %649 = reshape(%646, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %650 = @func_6639(%647, %648, %649) /* ty=(Tensor[(1008), float64], Tensor[(364), int8], Tensor[(13, 16, 4), bool], Tensor[(13, 16, 4), bool], int16, Tensor[(72), float32], Tensor[(480), float64], Tensor[(52, 1), int8], Tensor[(7, 13, 4), bool]) */;
  %651 = cast(%var_11479, dtype="float32") /* ty=Tensor[(14, 6, 13), float32] */;
  %652 = rsqrt(%651) /* ty=Tensor[(14, 6, 13), float32] */;
  %653 = cast(%652, dtype="float32") /* ty=Tensor[(14, 6, 13), float32] */;
  %654 = log2(%653) /* ty=Tensor[(14, 6, 13), float32] */;
  %655 = cast(%654, dtype="float64") /* ty=Tensor[(14, 6, 13), float64] */;
  %656 = %650.6;
  %657 = acos(%655) /* ty=Tensor[(14, 6, 13), float64] */;
  (%656, %var_11516, %var_11517, %var_11518, %657)
}

def @func_10152(%var_10142: float64, %var_10143: Tensor[(936, 2), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(16, 13, 9), float64], float64, Tensor[(936, 2), float64]) {
  %658 = @func_7677() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) */;
  %659 = cast(%var_10142, dtype="float64") /* ty=float64 */;
  %660 = cast(%var_10143, dtype="float64") /* ty=Tensor[(936, 2), float64] */;
  %661 = reshape(%659, newshape=[]) /* ty=float64 */;
  %662 = reshape(%660, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float64] */;
  %663 = @func_8555(%661, %662) /* ty=(Tensor[(16, 13, 9), float64],) */;
  %664 = @func_9302() /* ty=Tensor[(4, 9, 4), float64] */;
  %665 = %658.1;
  %666 = %663.0;
  (%664, %665, %666, %var_10142, %var_10143)
}

def @func_3054() -> (Tensor[(4, 9, 4), float64],) {
  %667 = @func_3002() /* ty=Tensor[(4, 9, 4), float64] */;
  (%667,)
}

def @func_1321(%var_1257: uint8, %var_1259: Tensor[(52), int8]) -> (Tensor[(7, 15, 12), bool], Tensor[(91, 4), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(52, 1), int8]) {
  %668 = cast(meta[relay.Constant][51] /* ty=Tensor[(7, 15, 12), int64] */, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
  %669 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(7, 15, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 15, 12), int64] */, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %672 = cast(%var_1257, dtype="uint8") /* ty=uint8 */;
  %673 = cast(meta[relay.Constant][52] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %674 = cast(%var_1259, dtype="int8") /* ty=Tensor[(52), int8] */;
  %675 = reshape(%672, newshape=[]) /* ty=uint8 */;
  %676 = reshape(%673, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %677 = reshape(%674, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %678 = @func_484(%675, %676, %677) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */;
  %679 = cast(meta[relay.Constant][53] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %680 = reshape(%679, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float64] */;
  %681 = cast(meta[relay.Constant][52] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %682 = cast(%var_1259, dtype="int8") /* ty=Tensor[(52), int8] */;
  %683 = %678.4;
  %684 = cast(%683, dtype="int8") /* ty=Tensor[(91, 4), int8] */;
  %685 = reshape(%681, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
  %686 = reshape(%682, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %687 = reshape(%684, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
  %688 = @func_422(%685, %686, %687) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
  %689 = greater(%670, %671) /* ty=Tensor[(7, 15, 12), bool] */;
  %690 = @func_211(%680) /* ty=Tensor[(2, 14, 2), bool] */;
  %691 = %688.2;
  (%689, %683, %var_1257, meta[relay.Constant][52] /* ty=Tensor[(72), float32] */, %var_1259, %690, meta[relay.Constant][53] /* ty=Tensor[(56), float64] */, %691)
}

def @func_9425() -> (Tensor[(364), uint8],) {
  %692 = @func_6335() /* ty=Tensor[(364), uint8] */;
  (%692,)
}

def @func_4334() -> (Tensor[(4, 9, 4), float64], Tensor[(72), uint32], Tensor[(364), int8]) {
  %693 = cast(meta[relay.Constant][54] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %694 = cast(meta[relay.Constant][54] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %695 = reshape(%693, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %696 = reshape(%694, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %697 = @func_3335(%695, %696) /* ty=(Tensor[(72), uint32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint64]) */;
  %698 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %699 = %697.0;
  (%698, %699, meta[relay.Constant][54] /* ty=Tensor[(364), int8] */)
}

def @func_6144() -> (Tensor[(4, 9, 4), float64], Tensor[(14, 5, 14), uint8]) {
  %700 = cast(meta[relay.Constant][55] /* ty=Tensor[(14, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(14, 5, 14), float64] */;
  %701 = rsqrt(%700) /* ty=Tensor[(14, 5, 14), float64] */;
  %702 = cast(%701, dtype="float64") /* ty=Tensor[(14, 5, 14), float64] */;
  %703 = asinh(%702) /* ty=Tensor[(14, 5, 14), float64] */;
  %704 = cast(%701, dtype="float32") /* ty=Tensor[(14, 5, 14), float32] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%703, dtype="float32") /* ty=Tensor[(14, 5, 14), float32] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %708 = mod(%706, %707) /* ty=Tensor[(14, 5, 14), float32] */;
  %709 = cast(%701, dtype="uint8") /* ty=Tensor[(14, 5, 14), uint8] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%708, dtype="uint8") /* ty=Tensor[(14, 5, 14), uint8] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %713 = @func_3180() /* ty=Tensor[(4, 9, 4), float64] */;
  %714 = logical_xor(%711, %712) /* ty=Tensor[(14, 5, 14), uint8] */;
  (%713, %714)
}

def @func_10966() -> (Tensor[(4, 9, 4), float64],) {
  %715 = @func_9562() /* ty=Tensor[(4, 9, 4), float64] */;
  (%715,)
}

def @func_3335(%var_3281: Tensor[(364), int8], %var_3300: Tensor[(364), int8]) -> (Tensor[(72), uint32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint64]) {
  %716 = cast(%var_3281, dtype="int8") /* ty=Tensor[(364), int8] */;
  %717 = cast(meta[relay.Constant][56] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %718 = reshape(%716, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %719 = reshape(%717, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %720 = @func_3165(%718, %719) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */;
  %721 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %722 = %721.0;
  %723 = cast(%722, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %724 = cast(%var_3300, dtype="uint64") /* ty=Tensor[(364), uint64] */;
  %725 = shape_of(%var_3281, dtype="int32") /* ty=Tensor[(1), int32] */;
  %726 = cast(%var_3281, dtype="uint64") /* ty=Tensor[(364), uint64] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %728 = %720.2;
  %729 = sqrt(%723) /* ty=Tensor[(4, 9, 4), float64] */;
  %730 = maximum(%726, %727) /* ty=Tensor[(364), uint64] */;
  (%728, meta[relay.Constant][56] /* ty=Tensor[(1008), float64] */, %729, %730)
}

def @func_5356() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %731 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %732 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %733 = %731.0;
  %734 = %732.0;
  (%733, %734)
}

def @func_6860(%var_6826: Tensor[(5, 12, 1), float64], %var_6856: Tensor[(364, 1), int8]) -> (Tensor[(5, 12, 1), float64], uint8, uint8, Tensor[(52), int8], Tensor[(52, 1), int8], Tensor[(1008), float64], Tensor[(52, 1), int8], Tensor[(3, 24), float32], Tensor[(364, 1), int8]) {
  %735 = cast(%var_6826, dtype="float64") /* ty=Tensor[(5, 12, 1), float64] */;
  %736 = cast(meta[relay.Constant][57] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %737 = cast(meta[relay.Constant][58] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %738 = reshape(%736, newshape=[]) /* ty=uint8 */;
  %739 = reshape(%737, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %740 = @func_1321(%738, %739) /* ty=(Tensor[(7, 15, 12), bool], Tensor[(91, 4), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(52, 1), int8]) */;
  %741 = cast(meta[relay.Constant][59] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %742 = reshape(%741, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %743 = @func_1841(%742) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
  %744 = cast(meta[relay.Constant][60] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %745 = %743.1;
  %746 = cast(%745, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %747 = cast(%var_6856, dtype="int8") /* ty=Tensor[(364, 1), int8] */;
  %748 = reshape(%744, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
  %749 = reshape(%746, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %750 = reshape(%747, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
  %751 = @func_422(%748, %749, %750) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
  %752 = log10(%735) /* ty=Tensor[(5, 12, 1), float64] */;
  %753 = %740.2;
  %754 = %751.2;
  (%752, %753, meta[relay.Constant][57] /* ty=uint8 */, meta[relay.Constant][58] /* ty=Tensor[(52), int8] */, %745, meta[relay.Constant][59] /* ty=Tensor[(1008), float64] */, %754, meta[relay.Constant][60] /* ty=Tensor[(3, 24), float32] */, %var_6856)
}

def @func_7068() -> Tensor[(4, 9, 4), float64] {
  @func_3796() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_3589(%var_3552: Tensor[(1008), float64], %var_3567: Tensor[(72), float32], %var_3568: Tensor[(52, 1), int8], %var_3579: Tensor[(480), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(12, 1, 6), float32], Tensor[(72), float32], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(2288), float64], Tensor[(52), int8], Tensor[(480), float64]) {
  %755 = cast(meta[relay.Constant][61] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %756 = cast(%var_3552, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %757 = reshape(%755, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %758 = reshape(%756, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %759 = @func_3165(%757, %758) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */;
  %760 = cast(%var_3567, dtype="float32") /* ty=Tensor[(72), float32] */;
  %761 = cast(%var_3568, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %762 = cast(meta[relay.Constant][61] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %763 = reshape(%760, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
  %764 = reshape(%761, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %765 = reshape(%762, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
  %766 = @func_422(%763, %764, %765) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
  %767 = cast(%var_3552, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %768 = cast(meta[relay.Constant][62] /* ty=Tensor[(2288), float64] */, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %769 = reshape(%767, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %770 = reshape(%768, newshape=[2288]) /* ty=Tensor[(2288), float64] */;
  %771 = @func_3413(%769, %770) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], int16, Tensor[(2288), float64], Tensor[(10, 9, 16), uint8]) */;
  %772 = cast(%var_3579, dtype="float64") /* ty=Tensor[(480), float64] */;
  %773 = cast(%var_3579, dtype="float64") /* ty=Tensor[(480), float64] */;
  %774 = cast(%var_3568, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %775 = reshape(%772, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %776 = reshape(%773, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %777 = reshape(%774, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %778 = @func_2152(%775, %776, %777) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %779 = @func_3180() /* ty=Tensor[(4, 9, 4), float64] */;
  %780 = %759.5;
  %781 = %766.0;
  %782 = %771.1;
  %783 = %778.4;
  (%779, %780, meta[relay.Constant][61] /* ty=Tensor[(364), int8] */, %var_3552, %781, %var_3567, %var_3568, %782, meta[relay.Constant][62] /* ty=Tensor[(2288), float64] */, %783, %var_3579)
}

def @func_9609(%var_9599: Tensor[(480), float64], %var_9600: Tensor[(52), int8]) -> (Tensor[(4, 9, 4), float64], uint8, Tensor[(480), float64], Tensor[(52), int8]) {
  %784 = @func_7677() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) */;
  %785 = cast(%var_9599, dtype="float64") /* ty=Tensor[(480), float64] */;
  %786 = cast(%var_9599, dtype="float64") /* ty=Tensor[(480), float64] */;
  %787 = cast(%var_9600, dtype="int8") /* ty=Tensor[(52), int8] */;
  %788 = reshape(%785, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %789 = reshape(%786, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %790 = reshape(%787, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %791 = @func_2152(%788, %789, %790) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %792 = %784.0;
  %793 = %791.2;
  (%792, %793, %var_9599, %var_9600)
}

def @func_9056(%var_9028: Tensor[(1350), uint16], %var_9041: uint8) -> (Tensor[(4, 9, 4), float64], Tensor[(15, 15, 6), uint16], Tensor[(1350), uint16], Tensor[(72), float32], uint8, Tensor[(52), int64]) {
  %794 = @func_4334() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), uint32], Tensor[(364), int8]) */;
  %795 = cast(%var_9028, dtype="uint16") /* ty=Tensor[(1350), uint16] */;
  %796 = cast(%var_9028, dtype="uint16") /* ty=Tensor[(1350), uint16] */;
  %797 = reshape(%795, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), uint16] */;
  %798 = reshape(%796, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), uint16] */;
  %799 = @func_5475(%797, %798) /* ty=(Tensor[(15, 15, 6), uint16],) */;
  %800 = cast(%var_9041, dtype="uint8") /* ty=uint8 */;
  %801 = reshape(%800, newshape=[]) /* ty=uint8 */;
  %802 = @func_3235(%801) /* ty=(Tensor[(72), float32], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(4, 9, 4), float64]) */;
  %803 = @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */;
  %804 = %794.0;
  %805 = %799.0;
  %806 = %802.2;
  %807 = %803.1;
  (%804, %805, %var_9028, %806, %var_9041, %807)
}

def @func_9562() -> Tensor[(4, 9, 4), float64] {
  %808 = @func_4334() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), uint32], Tensor[(364), int8]) */;
  %808.0
}

def @func_11042(%var_11032: Tensor[(1), float32]) -> (Tensor[(4, 9, 4), float64], Tensor[(?, ?, ?), bool], Tensor[(1), float32]) {
  %809 = @func_8321() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %810 = cast(%var_11032, dtype="float32") /* ty=Tensor[(1), float32] */;
  %811 = reshape(%810, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), float32] */;
  %812 = %809.0;
  %813 = @func_2708(%811) /* ty=Tensor[(?, ?, ?), bool] */;
  (%812, %813, %var_11032)
}

def @func_5609(%var_5504: Tensor[(7, 13, 14), uint32], %var_5562: uint8, %var_5563: Tensor[(52), int8]) -> (Tensor[(7, 13, 14), uint32], Tensor[(3, 4, 6), float64], Tensor[(72), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(7, 13, 14), uint8]) {
  %814 = cast(meta[relay.Constant][63] /* ty=Tensor[(7, 13, 14), uint32] */, dtype="uint32") /* ty=Tensor[(7, 13, 14), uint32] */;
  %815 = shape_of(%var_5504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%var_5504, dtype="uint32") /* ty=Tensor[(7, 13, 14), uint32] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %818 = cast(meta[relay.Constant][64] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %819 = reshape(%818, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
  %820 = cast(%var_5562, dtype="uint8") /* ty=uint8 */;
  %821 = cast(%var_5563, dtype="int8") /* ty=Tensor[(52), int8] */;
  %822 = reshape(%820, newshape=[]) /* ty=uint8 */;
  %823 = reshape(%821, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %824 = @func_1321(%822, %823) /* ty=(Tensor[(7, 15, 12), bool], Tensor[(91, 4), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(52, 1), int8]) */;
  %825 = cast(meta[relay.Constant][63] /* ty=Tensor[(7, 13, 14), uint32] */, dtype="int64") /* ty=Tensor[(7, 13, 14), int64] */;
  %826 = shape_of(%var_5504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%var_5504, dtype="int64") /* ty=Tensor[(7, 13, 14), int64] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %829 = left_shift(%827, %828) /* ty=Tensor[(7, 13, 14), int64] */;
  %830 = cast(%829, dtype="float32") /* ty=Tensor[(7, 13, 14), float32] */;
  %831 = cos(%830) /* ty=Tensor[(7, 13, 14), float32] */;
  %832 = cast(%831, dtype="uint8") /* ty=Tensor[(7, 13, 14), uint8] */;
  %833 = cast(%var_5562, dtype="uint8") /* ty=uint8 */;
  %834 = minimum(%816, %817) /* ty=Tensor[(7, 13, 14), uint32] */;
  %835 = @func_588(%819) /* ty=Tensor[(3, 4, 6), float64] */;
  %836 = %824.3;
  %837 = add(%832, %833) /* ty=Tensor[(7, 13, 14), uint8] */;
  (%834, %835, meta[relay.Constant][64] /* ty=Tensor[(72), float64] */, %836, %var_5563, %837)
}

def @func_9750() -> (Tensor[(364), int8], Tensor[(3, 1, 3), float64], Tensor[(9), float64], Tensor[(4, 9, 4), float64]) {
  %838 = cast(meta[relay.Constant][65] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %839 = reshape(%838, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %840 = @func_1471(%839) /* ty=(Tensor[(3, 1, 3), float64],) */;
  %841 = @func_8210() /* ty=Tensor[(364), int8] */;
  %842 = %840.0;
  %843 = @func_6175() /* ty=Tensor[(4, 9, 4), float64] */;
  (%841, %842, meta[relay.Constant][65] /* ty=Tensor[(9), float64] */, %843)
}

def @func_3235(%var_3224: uint8) -> (Tensor[(72), float32], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(4, 9, 4), float64]) {
  %844 = cast(%var_3224, dtype="uint8") /* ty=uint8 */;
  %845 = cast(meta[relay.Constant][66] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %846 = cast(meta[relay.Constant][67] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %847 = reshape(%844, newshape=[]) /* ty=uint8 */;
  %848 = reshape(%845, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %849 = reshape(%846, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %850 = @func_484(%847, %848, %849) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */;
  %851 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
  %852 = cast(%851, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %853 = cosh(%852) /* ty=Tensor[(4, 9, 4), float32] */;
  %854 = cast(%853, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %855 = %850.2;
  %856 = sinh(%854) /* ty=Tensor[(4, 9, 4), float64] */;
  (%855, %var_3224, meta[relay.Constant][66] /* ty=Tensor[(72), float32] */, meta[relay.Constant][67] /* ty=Tensor[(52), int8] */, %856)
}

def @func_10940() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %857 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %858 = @func_9302() /* ty=Tensor[(4, 9, 4), float64] */;
  (%857, %858)
}

def @func_11422(%var_11414: Tensor[(832), uint16], %var_11416: Tensor[(480), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(832), uint16], int16, Tensor[(480), float64]) {
  %859 = cast(%var_11414, dtype="uint16") /* ty=Tensor[(832), uint16] */;
  %860 = cast(meta[relay.Constant][68] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %861 = cast(%var_11416, dtype="float64") /* ty=Tensor[(480), float64] */;
  %862 = reshape(%859, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), uint16] */;
  %863 = reshape(%860, newshape=[]) /* ty=int16 */;
  %864 = reshape(%861, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %865 = @func_6639(%862, %863, %864) /* ty=(Tensor[(1008), float64], Tensor[(364), int8], Tensor[(13, 16, 4), bool], Tensor[(13, 16, 4), bool], int16, Tensor[(72), float32], Tensor[(480), float64], Tensor[(52, 1), int8], Tensor[(7, 13, 4), bool]) */;
  %866 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %867 = %865.6;
  (%866, %867, %var_11414, meta[relay.Constant][68] /* ty=int16 */, %var_11416)
}

def @func_7434(%var_7398: Tensor[(36, 24), int16]) -> (Tensor[(36, 24), float64], Tensor[(36, 24), float32]) {
  %868 = @func_4690() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(15, 12, 11), bool], Tensor[(15, 12, 11), float32], Tensor[(6, 16, 9), float64], Tensor[(36, 24), int16], Tensor[(9), float64]) */;
  %869 = %868.4;
  %870 = cast(%var_7398, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(2), int32] */;
  %872 = cast(%869, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %874 = logical_or(%872, %873) /* ty=Tensor[(36, 24), bool] */;
  %875 = cast(%874, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
  %876 = shape_of(%var_7398, dtype="int32") /* ty=Tensor[(2), int32] */;
  %877 = cast(%var_7398, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %879 = cast(meta[relay.Constant][69] /* ty=Tensor[(36, 24), int16] */, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %880 = shape_of(%869, dtype="int32") /* ty=Tensor[(2), int32] */;
  %881 = cast(%869, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %883 = less(%881, %882) /* ty=Tensor[(36, 24), bool] */;
  %884 = cast(%var_7398, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
  %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(2), int32] */;
  %886 = cast(%883, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %888 = divide(%877, %878) /* ty=Tensor[(36, 24), float64] */;
  %889 = mod(%886, %887) /* ty=Tensor[(36, 24), float32] */;
  (%888, %889)
}

def @func_4717() -> (Tensor[(4, 9, 4), float64], Tensor[(52), int8], uint8, Tensor[(52), int8]) {
  %890 = cast(meta[relay.Constant][70] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %891 = cast(meta[relay.Constant][71] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %892 = reshape(%890, newshape=[]) /* ty=uint8 */;
  %893 = reshape(%891, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %894 = @func_1321(%892, %893) /* ty=(Tensor[(7, 15, 12), bool], Tensor[(91, 4), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(52, 1), int8]) */;
  %895 = @func_4218() /* ty=Tensor[(4, 9, 4), float64] */;
  %896 = %894.4;
  (%895, %896, meta[relay.Constant][70] /* ty=uint8 */, meta[relay.Constant][71] /* ty=Tensor[(52), int8] */)
}

def @func_3498() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint8]) {
  %897 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %898 = cast(meta[relay.Constant][72] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %899 = cast(meta[relay.Constant][72] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %900 = reshape(%898, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %901 = reshape(%899, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %902 = @func_3335(%900, %901) /* ty=(Tensor[(72), uint32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint64]) */;
  %903 = %902.3;
  %904 = cast(%903, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %905 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(364), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %906 = cast(meta[relay.Constant][72] /* ty=Tensor[(364), int8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %908 = %897.0;
  %909 = @func_3002() /* ty=Tensor[(4, 9, 4), float64] */;
  %910 = subtract(%906, %907) /* ty=Tensor[(364), uint8] */;
  (%908, %909, %910)
}

def @func_5688() -> (Tensor[(4, 9, 4), float64], Tensor[(52), int64]) {
  %911 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %912 = @func_4717() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int8], uint8, Tensor[(52), int8]) */;
  %913 = %912.1;
  %914 = cast(%913, dtype="float32") /* ty=Tensor[(52), float32] */;
  %915 = cosh(%914) /* ty=Tensor[(52), float32] */;
  %916 = cast(%915, dtype="int64") /* ty=Tensor[(52), int64] */;
  %917 = shape_of(%913, dtype="int32") /* ty=Tensor[(1), int32] */;
  %918 = cast(%913, dtype="int64") /* ty=Tensor[(52), int64] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?), int64] */;
  %920 = %911.0;
  %921 = multiply(%918, %919) /* ty=Tensor[(52), int64] */;
  (%920, %921)
}

def @func_2152(%var_2135: Tensor[(15, 2, 16), float64], %var_2136: Tensor[(15, 2, 16), float64], %var_2148: Tensor[(52), int8]) -> (Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) {
  %922 = cast(%var_2136, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  %923 = shape_of(%var_2135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%var_2135, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %926 = cast(meta[relay.Constant][73] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %927 = cast(meta[relay.Constant][74] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %928 = cast(%var_2148, dtype="int8") /* ty=Tensor[(52), int8] */;
  %929 = reshape(%926, newshape=[]) /* ty=uint8 */;
  %930 = reshape(%927, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %931 = reshape(%928, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %932 = @func_484(%929, %930, %931) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */;
  %933 = equal(%924, %925) /* ty=Tensor[(15, 2, 16), bool] */;
  %934 = %932.1;
  (%933, %934, meta[relay.Constant][73] /* ty=uint8 */, meta[relay.Constant][74] /* ty=Tensor[(72), float32] */, %var_2148)
}

def @func_5240(%var_5202: Tensor[(12, 9, 7), uint16], %var_5210: Tensor[(364), int8], %var_5211: Tensor[(1008), float64]) -> (Tensor[(12, 9, 7), uint16], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(7, 13, 4), float32]) {
  %935 = cast(%var_5202, dtype="uint16") /* ty=Tensor[(12, 9, 7), uint16] */;
  %936 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(12, 9, 7), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %937 = cast(meta[relay.Constant][75] /* ty=Tensor[(12, 9, 7), uint16] */, dtype="uint16") /* ty=Tensor[(12, 9, 7), uint16] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %939 = cast(%var_5210, dtype="int8") /* ty=Tensor[(364), int8] */;
  %940 = cast(%var_5211, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %941 = reshape(%939, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %942 = reshape(%940, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %943 = @func_3165(%941, %942) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */;
  %944 = %943.3;
  %945 = cast(%944, dtype="float32") /* ty=Tensor[(7, 13, 4), float32] */;
  %946 = right_shift(%937, %938) /* ty=Tensor[(12, 9, 7), uint16] */;
  %947 = cos(%945) /* ty=Tensor[(7, 13, 4), float32] */;
  (%946, %var_5210, %var_5211, %947)
}

def @func_5475(%var_5468: Tensor[(15, 15, 6), uint16], %var_5469: Tensor[(15, 15, 6), uint16]) -> (Tensor[(15, 15, 6), uint16],) {
  %948 = cast(%var_5469, dtype="uint16") /* ty=Tensor[(15, 15, 6), uint16] */;
  %949 = shape_of(%var_5468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%var_5468, dtype="uint16") /* ty=Tensor[(15, 15, 6), uint16] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %952 = bitwise_and(%950, %951) /* ty=Tensor[(15, 15, 6), uint16] */;
  (%952,)
}

def @func_7489(%var_7455: Tensor[(1008), float64], %var_7456: Tensor[(72), float32], %var_7457: Tensor[(52), int8]) -> (Tensor[(4, 9, 4), float64], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(480), float64], Tensor[(1008), float64], Tensor[(756), uint16], Tensor[(7, 52), int8]) {
  %953 = @func_5356() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %954 = cast(%var_7455, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %955 = cast(%var_7456, dtype="float32") /* ty=Tensor[(72), float32] */;
  %956 = cast(%var_7457, dtype="int8") /* ty=Tensor[(52), int8] */;
  %957 = cast(meta[relay.Constant][76] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %958 = reshape(%954, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %959 = reshape(%955, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %960 = reshape(%956, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %961 = reshape(%957, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %962 = @func_3589(%958, %959, %960, %961) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(12, 1, 6), float32], Tensor[(72), float32], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(2288), float64], Tensor[(52), int8], Tensor[(480), float64]) */;
  %963 = cast(meta[relay.Constant][77] /* ty=Tensor[(756), uint16] */, dtype="uint16") /* ty=Tensor[(756), uint16] */;
  %964 = cast(meta[relay.Constant][78] /* ty=Tensor[(7, 52), int8] */, dtype="int8") /* ty=Tensor[(7, 52), int8] */;
  %965 = cast(%var_7455, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %966 = reshape(%963, newshape=[12, 9, 7]) /* ty=Tensor[(12, 9, 7), uint16] */;
  %967 = reshape(%964, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %968 = reshape(%965, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %969 = @func_5240(%966, %967, %968) /* ty=(Tensor[(12, 9, 7), uint16], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(7, 13, 4), float32]) */;
  %970 = %953.1;
  %971 = %962.3;
  %972 = %969.2;
  (%970, %971, %var_7455, %var_7456, %var_7457, meta[relay.Constant][76] /* ty=Tensor[(480), float64] */, %972, meta[relay.Constant][77] /* ty=Tensor[(756), uint16] */, meta[relay.Constant][78] /* ty=Tensor[(7, 52), int8] */)
}

def @main(%var_11615: Tensor[(4, 3, 7), float64]) -> (Tensor[(4, 3, 7), float64],) {
  %973 = cast(%var_11615, dtype="float64") /* ty=Tensor[(4, 3, 7), float64] */;
  %974 = tan(%973) /* ty=Tensor[(4, 3, 7), float64] */;
  (%974,)
}

def @func_3165(%var_3152: Tensor[(364), int8], %var_3159: Tensor[(1008), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) {
  %975 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %976 = cast(meta[relay.Constant][79] /* ty=Tensor[(72), uint32] */, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %977 = reshape(%976, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), uint32] */;
  %978 = @func_1725(%977) /* ty=(Tensor[(6, 6, 2), uint32],) */;
  %979 = cast(meta[relay.Constant][80] /* ty=Tensor[(52, 1), int8] */, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %980 = cast(%var_3152, dtype="int8") /* ty=Tensor[(364), int8] */;
  %981 = reshape(%979, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), int8] */;
  %982 = reshape(%980, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), int8] */;
  %983 = cast(%var_3159, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %984 = reshape(%983, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %985 = @func_1841(%984) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
  %986 = %975.0;
  %987 = %978.0;
  %988 = @func_286(%981, %982) /* ty=Tensor[(7, 13, 4), bool] */;
  %989 = %985.2;
  (%986, %987, meta[relay.Constant][79] /* ty=Tensor[(72), uint32] */, %988, meta[relay.Constant][80] /* ty=Tensor[(52, 1), int8] */, %var_3152, %989, %var_3159)
}

def @func_7572() -> (Tensor[(4, 9, 4), float32],) {
  %990 = @func_7068() /* ty=Tensor[(4, 9, 4), float64] */;
  %991 = cast(%990, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %992 = log(%991) /* ty=Tensor[(4, 9, 4), float32] */;
  (%992,)
}

def @func_1725(%var_1699: Tensor[(6, 6, 2), uint32]) -> (Tensor[(6, 6, 2), uint32],) {
  %993 = cast(meta[relay.Constant][81] /* ty=Tensor[(6, 6, 2), uint32] */, dtype="uint32") /* ty=Tensor[(6, 6, 2), uint32] */;
  %994 = shape_of(%var_1699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%var_1699, dtype="uint32") /* ty=Tensor[(6, 6, 2), uint32] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %997 = bitwise_xor(%995, %996) /* ty=Tensor[(6, 6, 2), uint32] */;
  (%997,)
}

def @func_6031(%var_6008: Tensor[(480), float64]) -> (Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(480), float64]) {
  %998 = @func_4368() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */;
  %999 = cast(%var_6008, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1000 = reshape(%999, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %1001 = @func_3945(%1000) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(480), float64], Tensor[(52), int8]) */;
  %1002 = %998.2;
  %1003 = @func_3002() /* ty=Tensor[(4, 9, 4), float64] */;
  %1004 = %1001.2;
  (%1002, %1003, %1004, %var_6008)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3335(%var_3281: Tensor[(364), int8], %var_3300: Tensor[(364), int8]) -> (Tensor[(72), uint32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint64]) {
  %0 = cast(%var_3281, dtype="int8") /* ty=Tensor[(364), int8] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %2 = reshape(%0, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %3 = reshape(%1, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %4 = @func_3165(%2, %3) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */;
  %5 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %6 = %5.0;
  %7 = cast(%6, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %8 = cast(%var_3300, dtype="uint64") /* ty=Tensor[(364), uint64] */;
  %9 = shape_of(%var_3281, dtype="int32") /* ty=Tensor[(1), int32] */;
  %10 = cast(%var_3281, dtype="uint64") /* ty=Tensor[(364), uint64] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %12 = %4.2;
  %13 = sqrt(%7) /* ty=Tensor[(4, 9, 4), float64] */;
  %14 = maximum(%10, %11) /* ty=Tensor[(364), uint64] */;
  (%12, meta[relay.Constant][0] /* ty=Tensor[(1008), float64] */, %13, %14)
}

def @func_9240() -> (Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), float32], Tensor[(4, 9, 4), float64]) {
  %15 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 16, 12), int32] */, dtype="bool") /* ty=Tensor[(2, 16, 12), bool] */;
  %16 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(2, 16, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 16, 12), int32] */, dtype="bool") /* ty=Tensor[(2, 16, 12), bool] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 16, 12), int32] */, dtype="float32") /* ty=Tensor[(2, 16, 12), float32] */;
  %20 = @func_8321() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %21 = less(%17, %18) /* ty=Tensor[(2, 16, 12), bool] */;
  %22 = sinh(%19) /* ty=Tensor[(2, 16, 12), float32] */;
  %23 = %20.0;
  (%21, %22, %23)
}

def @func_10601(%var_10599: Tensor[(1872), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), uint8], Tensor[(16, 13, 9), float64], float64, Tensor[(1872), float64]) {
  @func_10598(%var_10599) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), uint8], Tensor[(16, 13, 9), float64], float64, Tensor[(1872), float64]) */
}

def @func_6311() -> Tensor[(364), int8] {
  %25 = fn () -> Tensor[(364), int8] {
    %24 = @func_6074() /* ty=(Tensor[(364), int8],) */;
    %24.0
  };
  %25() /* ty=Tensor[(364), int8] */
}

def @func_10264() -> Tensor[(52), int64] {
  @func_10262() /* ty=Tensor[(52), int64] */
}

def @func_1520(%var_1518: int16, %var_1519: Tensor[(13, 16, 4), int16]) -> Tensor[(13, 16, 4), bool] {
  @func_1516(%var_1518, %var_1519) /* ty=Tensor[(13, 16, 4), bool] */
}

def @func_11045(%var_11043: Tensor[(1), float32]) -> (Tensor[(4, 9, 4), float64], Tensor[(?, ?, ?), bool], Tensor[(1), float32]) {
  @func_11042(%var_11043) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(?, ?, ?), bool], Tensor[(1), float32]) */
}

def @func_9204() -> Tensor[(4, 9, 4), float64] {
  @func_9202() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_9426() -> (Tensor[(364), uint8],) {
  %27 = fn () -> (Tensor[(364), uint8],) {
    %26 = @func_6335() /* ty=Tensor[(364), uint8] */;
    (%26,)
  };
  %27() /* ty=(Tensor[(364), uint8],) */
}

def @func_11020() -> (Tensor[(4, 9, 4), float64],) {
  %29 = fn () -> (Tensor[(4, 9, 4), float64],) {
    %28 = @func_10720() /* ty=Tensor[(4, 9, 4), float64] */;
    (%28,)
  };
  %29() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_10425() -> Tensor[(4, 9, 4), float64] {
  %30 = @func_6551() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %30.0
}

def @func_10439() -> (Tensor[(364), int8],) {
  %31 = @func_8379() /* ty=Tensor[(364), int8] */;
  (%31,)
}

def @main(%var_11615: Tensor[(4, 3, 7), float64]) -> (Tensor[(4, 3, 7), float64],) {
  %32 = cast(%var_11615, dtype="float64") /* ty=Tensor[(4, 3, 7), float64] */;
  %33 = tan(%32) /* ty=Tensor[(4, 3, 7), float64] */;
  (%33,)
}

def @func_1474(%var_1472: Tensor[(3, 1, 3), float64]) -> (Tensor[(3, 1, 3), float64],) {
  @func_1471(%var_1472) /* ty=(Tensor[(3, 1, 3), float64],) */
}

def @func_7898(%var_7856: Tensor[(40, 12), float64], %var_7857: Tensor[(26, 2), int8], %var_7883: Tensor[(40, 12), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(26, 2), int8], Tensor[(364), int8], Tensor[(40, 12), int16], Tensor[(4, 9, 4), float64]) {
  %34 = @func_6144() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 5, 14), uint8]) */;
  %35 = cast(%var_7856, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %36 = cast(%var_7856, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %37 = cast(%var_7857, dtype="int8") /* ty=Tensor[(26, 2), int8] */;
  %38 = reshape(%35, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %39 = reshape(%36, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %40 = reshape(%37, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %41 = @func_2152(%38, %39, %40) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %42 = cast(%var_7883, dtype="int16") /* ty=Tensor[(40, 12), int16] */;
  %43 = shape_of(%var_7856, dtype="int32") /* ty=Tensor[(2), int32] */;
  %44 = cast(%var_7856, dtype="int16") /* ty=Tensor[(40, 12), int16] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %46 = %34.0;
  %47 = %41.3;
  %48 = @func_6512() /* ty=Tensor[(364), int8] */;
  %49 = left_shift(%44, %45) /* ty=Tensor[(40, 12), int16] */;
  %50 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
  (%46, %47, %var_7857, %48, %49, %50)
}

def @func_3797() -> Tensor[(4, 9, 4), float64] {
  %51 = fn () -> Tensor[(4, 9, 4), float64] {
    @func_3002() /* ty=Tensor[(4, 9, 4), float64] */
  };
  %51() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_2157(%var_2154: Tensor[(15, 2, 16), float64], %var_2155: Tensor[(15, 2, 16), float64], %var_2156: Tensor[(52), int8]) -> (Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) {
  @func_2152(%var_2154, %var_2155, %var_2156) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */
}

def @func_10024() -> (Tensor[(364), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64]) {
  %56 = fn () -> (Tensor[(364), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64]) {
    %52 = cast(meta[relay.Constant][3] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %53 = reshape(%52, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float64] */;
    %54 = @func_6512() /* ty=Tensor[(364), int8] */;
    %55 = @func_211(%53) /* ty=Tensor[(2, 14, 2), bool] */;
    (%54, %55, meta[relay.Constant][3] /* ty=Tensor[(56), float64] */)
  };
  %56() /* ty=(Tensor[(364), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64]) */
}

def @func_10036() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %57 = @func_8642() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %58 = %57.0;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %60 = reshape(%59, newshape=[4, 9, 4]) /* ty=Tensor[(4, 9, 4), float64] */;
  %61 = @func_8529(%60) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(?, ?, ?), bool], Tensor[(1), float32], Tensor[(4, 9, 4), float64]) */;
  %62 = %61.0;
  (%58, %62)
}

def @func_6146() -> (Tensor[(4, 9, 4), float64], Tensor[(14, 5, 14), uint8]) {
  @func_6144() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 5, 14), uint8]) */
}

def @func_1841(%var_1816: Tensor[(14, 8, 9), float64]) -> (Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) {
  %63 = cast(%var_1816, dtype="float64") /* ty=Tensor[(14, 8, 9), float64] */;
  %64 = rsqrt(%63) /* ty=Tensor[(14, 8, 9), float64] */;
  %65 = cast(%var_1816, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%64, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %69 = cast(meta[relay.Constant][4] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %70 = cast(meta[relay.Constant][5] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %71 = cast(meta[relay.Constant][6] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %72 = reshape(%69, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
  %73 = reshape(%70, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %74 = reshape(%71, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
  %75 = @func_422(%72, %73, %74) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
  %76 = greater(%67, %68) /* ty=Tensor[(14, 8, 9), bool] */;
  %77 = %75.2;
  (%76, %77, meta[relay.Constant][4] /* ty=Tensor[(72), float32] */, meta[relay.Constant][5] /* ty=Tensor[(52), int8] */, meta[relay.Constant][6] /* ty=Tensor[(364), int8] */)
}

def @func_3339(%var_3337: Tensor[(364), int8], %var_3338: Tensor[(364), int8]) -> (Tensor[(72), uint32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint64]) {
  @func_3335(%var_3337, %var_3338) /* ty=(Tensor[(72), uint32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint64]) */
}

def @func_3945(%var_3940: Tensor[(480), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(480), float64], Tensor[(52), int8]) {
  %78 = cast(%var_3940, dtype="float64") /* ty=Tensor[(480), float64] */;
  %79 = cast(%var_3940, dtype="float64") /* ty=Tensor[(480), float64] */;
  %80 = cast(meta[relay.Constant][7] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %81 = reshape(%78, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %82 = reshape(%79, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %83 = reshape(%80, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %84 = @func_2152(%81, %82, %83) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %85 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
  %86 = %84.3;
  (%85, %86, %var_3940, meta[relay.Constant][7] /* ty=Tensor[(52), int8] */)
}

def @func_10427() -> Tensor[(4, 9, 4), float64] {
  @func_10425() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_3720(%var_3682: Tensor[(72), uint32], %var_3688: Tensor[(364), uint8], %var_3696: Tensor[(56), float64], %var_3702: Tensor[(1008), float64]) -> (Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(364), uint32], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(3, 4, 6), float64]) {
  %87 = cast(%var_3682, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %88 = reshape(%87, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), uint32] */;
  %89 = @func_1725(%88) /* ty=(Tensor[(6, 6, 2), uint32],) */;
  %90 = @func_3498() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint8]) */;
  %91 = %90.2;
  %92 = cast(%var_3688, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(1), int32] */;
  %94 = cast(%91, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %96 = cast(%var_3696, dtype="float64") /* ty=Tensor[(56), float64] */;
  %97 = reshape(%96, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float64] */;
  %98 = cast(%var_3702, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %99 = reshape(%98, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %100 = @func_1841(%99) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
  %101 = %89.0;
  %102 = cast(%101, dtype="float64") /* ty=Tensor[(6, 6, 2), float64] */;
  %103 = reshape(%102, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
  %104 = logical_xor(%94, %95) /* ty=Tensor[(364), uint32] */;
  %105 = @func_211(%97) /* ty=Tensor[(2, 14, 2), bool] */;
  %106 = %100.4;
  %107 = @func_588(%103) /* ty=Tensor[(3, 4, 6), float64] */;
  (%101, %var_3682, %104, %105, %var_3696, %106, %var_3702, %107)
}

def @func_3413(%var_3381: Tensor[(1008), float64], %var_3397: Tensor[(2288), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], int16, Tensor[(2288), float64], Tensor[(10, 9, 16), uint8]) {
  %108 = cast(%var_3381, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %109 = reshape(%108, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %110 = @func_1841(%109) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
  %111 = cast(%var_3397, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %112 = cast(meta[relay.Constant][8] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %113 = reshape(%111, newshape=[13, 16, 11]) /* ty=Tensor[(13, 16, 11), float64] */;
  %114 = reshape(%112, newshape=[]) /* ty=int16 */;
  %115 = @func_2053(%113, %114) /* ty=(Tensor[(13, 16, 11), float32], Tensor[(13, 16, 11), float64], Tensor[(13, 16, 4), bool], int16, Tensor[(832), int16]) */;
  %116 = cast(meta[relay.Constant][8] /* ty=int16 */, dtype="uint8") /* ty=uint8 */;
  %117 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 9, 16), int16] */, dtype="uint8") /* ty=Tensor[(10, 9, 16), uint8] */;
  %118 = @func_3180() /* ty=Tensor[(4, 9, 4), float64] */;
  %119 = %110.2;
  %120 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
  %121 = %115.3;
  %122 = bitwise_xor(%116, %117) /* ty=Tensor[(10, 9, 16), uint8] */;
  (%118, %119, %var_3381, %120, %121, %var_3397, %122)
}

def @func_7677() -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) {
  %123 = @func_6491() /* ty=(Tensor[(364), int8],) */;
  %124 = %123.0;
  %125 = cast(%124, dtype="int8") /* ty=Tensor[(364), int8] */;
  %126 = reshape(%125, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %127 = @func_7197(%126) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), float32]) */;
  %128 = @func_3180() /* ty=Tensor[(4, 9, 4), float64] */;
  %129 = %127.0;
  (%128, %124, %129)
}

def @func_8596(%var_8595: Tensor[(7, 4, 1), float64]) -> (Tensor[(7, 4, 1), float64],) {
  %132 = fn (%var_8581: Tensor[(7, 4, 1), float64]) -> (Tensor[(7, 4, 1), float64],) {
    %130 = cast(%var_8581, dtype="float64") /* ty=Tensor[(7, 4, 1), float64] */;
    %131 = atan(%130) /* ty=Tensor[(7, 4, 1), float64] */;
    (%131,)
  };
  %132(%var_8595) /* ty=(Tensor[(7, 4, 1), float64],) */
}

def @func_5688() -> (Tensor[(4, 9, 4), float64], Tensor[(52), int64]) {
  %133 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %134 = @func_4717() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int8], uint8, Tensor[(52), int8]) */;
  %135 = %134.1;
  %136 = cast(%135, dtype="float32") /* ty=Tensor[(52), float32] */;
  %137 = cosh(%136) /* ty=Tensor[(52), float32] */;
  %138 = cast(%137, dtype="int64") /* ty=Tensor[(52), int64] */;
  %139 = shape_of(%135, dtype="int32") /* ty=Tensor[(1), int32] */;
  %140 = cast(%135, dtype="int64") /* ty=Tensor[(52), int64] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?), int64] */;
  %142 = %133.0;
  %143 = multiply(%140, %141) /* ty=Tensor[(52), int64] */;
  (%142, %143)
}

def @func_11553(%var_11549: Tensor[(14, 6, 13), float32], %var_11550: Tensor[(832), uint16], %var_11551: int16, %var_11552: Tensor[(480), float64]) -> (Tensor[(480), float64], Tensor[(832), uint16], int16, Tensor[(480), float64], Tensor[(14, 6, 13), float64]) {
  @func_11547(%var_11549, %var_11550, %var_11551, %var_11552) /* ty=(Tensor[(480), float64], Tensor[(832), uint16], int16, Tensor[(480), float64], Tensor[(14, 6, 13), float64]) */
}

def @func_4718() -> (Tensor[(4, 9, 4), float64], Tensor[(52), int8], uint8, Tensor[(52), int8]) {
  %151 = fn () -> (Tensor[(4, 9, 4), float64], Tensor[(52), int8], uint8, Tensor[(52), int8]) {
    %144 = cast(meta[relay.Constant][10] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %145 = cast(meta[relay.Constant][11] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
    %146 = reshape(%144, newshape=[]) /* ty=uint8 */;
    %147 = reshape(%145, newshape=[52]) /* ty=Tensor[(52), int8] */;
    %148 = @func_1321(%146, %147) /* ty=(Tensor[(7, 15, 12), bool], Tensor[(91, 4), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(52, 1), int8]) */;
    %149 = @func_4218() /* ty=Tensor[(4, 9, 4), float64] */;
    %150 = %148.4;
    (%149, %150, meta[relay.Constant][10] /* ty=uint8 */, meta[relay.Constant][11] /* ty=Tensor[(52), int8] */)
  };
  %151() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int8], uint8, Tensor[(52), int8]) */
}

def @func_6101() -> Tensor[(4, 9, 4), float64] {
  @func_3819() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_8009() -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) {
  %152 = @func_7677() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) */;
  %153 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %154 = @func_6310() /* ty=Tensor[(364), int8] */;
  %155 = %152.0;
  (%153, %154, %155)
}

def @func_3500() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint8]) {
  @func_3498() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint8]) */
}

def @func_10745() -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8]) {
  %158 = fn () -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8]) {
    %156 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
    %157 = @func_4985() /* ty=Tensor[(364), int8] */;
    (%156, %157)
  };
  %158() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8]) */
}

def @func_10940() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %159 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %160 = @func_9302() /* ty=Tensor[(4, 9, 4), float64] */;
  (%159, %160)
}

def @func_9146() -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8]) {
  %165 = fn () -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8]) {
    %161 = @func_5356() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
    %162 = @func_6074() /* ty=(Tensor[(364), int8],) */;
    %163 = %161.1;
    %164 = %162.0;
    (%163, %164)
  };
  %165() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8]) */
}

def @func_3002() -> Tensor[(4, 9, 4), float64] {
  @func_2955() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_10809(%var_10767: Tensor[(11, 10, 11), float32], %var_10785: Tensor[(1008), float64], %var_10786: Tensor[(6, 12), float32], %var_10788: Tensor[(480), float64]) -> (Tensor[(11, 10, 11), float32], Tensor[(2, 16, 12), bool], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(6, 12), float32], Tensor[(13, 4), int8], Tensor[(480), float64], Tensor[(4, 9, 4), float64], Tensor[(144), float64]) {
  %166 = cast(%var_10767, dtype="float32") /* ty=Tensor[(11, 10, 11), float32] */;
  %167 = @func_9240() /* ty=(Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), float32], Tensor[(4, 9, 4), float64]) */;
  %168 = cast(%var_10785, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %169 = cast(%var_10786, dtype="float32") /* ty=Tensor[(6, 12), float32] */;
  %170 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 4), int8] */, dtype="int8") /* ty=Tensor[(13, 4), int8] */;
  %171 = cast(%var_10788, dtype="float64") /* ty=Tensor[(480), float64] */;
  %172 = reshape(%168, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %173 = reshape(%169, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %174 = reshape(%170, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %175 = reshape(%171, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %176 = @func_3589(%172, %173, %174, %175) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(12, 1, 6), float32], Tensor[(72), float32], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(2288), float64], Tensor[(52), int8], Tensor[(480), float64]) */;
  %177 = cast(meta[relay.Constant][13] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %178 = reshape(%177, newshape=[4, 9, 4]) /* ty=Tensor[(4, 9, 4), float64] */;
  %179 = @func_8177(%178) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %180 = tan(%166) /* ty=Tensor[(11, 10, 11), float32] */;
  %181 = %167.0;
  %182 = %176.3;
  %183 = %179.0;
  (%180, %181, %182, %var_10785, %var_10786, meta[relay.Constant][12] /* ty=Tensor[(13, 4), int8] */, %var_10788, %183, meta[relay.Constant][13] /* ty=Tensor[(144), float64] */)
}

def @func_8745() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(2, 240), float64]) {
  %184 = @func_7309() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %185 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 240), float64] */, dtype="float64") /* ty=Tensor[(2, 240), float64] */;
  %186 = reshape(%185, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %187 = @func_6031(%186) /* ty=(Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(480), float64]) */;
  %188 = %184.0;
  %189 = @func_3002() /* ty=Tensor[(4, 9, 4), float64] */;
  %190 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %191 = %187.3;
  (%188, %189, %190, %191, meta[relay.Constant][14] /* ty=Tensor[(2, 240), float64] */)
}

def @func_9202() -> Tensor[(4, 9, 4), float64] {
  %192 = @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */;
  %192.0
}

def @func_2243(%var_2242: Tensor[(5, 10, 4), float32]) -> (Tensor[(5, 10, 4), float32], Tensor[(5, 10, 4), float64], Tensor[(3, 1, 3), float64], Tensor[(864), int16], Tensor[(1, 9), float64], Tensor[(2, 14, 2), bool], Tensor[(56), float64]) {
  %211 = fn (%var_2179: Tensor[(5, 10, 4), float32]) -> (Tensor[(5, 10, 4), float32], Tensor[(5, 10, 4), float64], Tensor[(3, 1, 3), float64], Tensor[(864), int16], Tensor[(1, 9), float64], Tensor[(2, 14, 2), bool], Tensor[(56), float64]) {
    %193 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 10, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 10, 4), float32] */;
    %194 = shape_of(%var_2179, dtype="int32") /* ty=Tensor[(3), int32] */;
    %195 = cast(%var_2179, dtype="float32") /* ty=Tensor[(5, 10, 4), float32] */;
    %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %197 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 10, 4), float32] */, dtype="float64") /* ty=Tensor[(5, 10, 4), float64] */;
    %198 = cast(meta[relay.Constant][16] /* ty=Tensor[(864), int16] */, dtype="int16") /* ty=Tensor[(864), int16] */;
    %199 = cast(meta[relay.Constant][16] /* ty=Tensor[(864), int16] */, dtype="int16") /* ty=Tensor[(864), int16] */;
    %200 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 9), float64] */;
    %201 = reshape(%198, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
    %202 = reshape(%199, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
    %203 = reshape(%200, newshape=[9]) /* ty=Tensor[(9), float64] */;
    %204 = @func_1879(%201, %202, %203) /* ty=(Tensor[(6, 16, 9), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) */;
    %205 = cast(meta[relay.Constant][18] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %206 = reshape(%205, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float64] */;
    %207 = mod(%195, %196) /* ty=Tensor[(5, 10, 4), float32] */;
    %208 = acos(%197) /* ty=Tensor[(5, 10, 4), float64] */;
    %209 = %204.1;
    %210 = @func_211(%206) /* ty=Tensor[(2, 14, 2), bool] */;
    (%207, %208, %209, meta[relay.Constant][16] /* ty=Tensor[(864), int16] */, meta[relay.Constant][17] /* ty=Tensor[(1, 9), float64] */, %210, meta[relay.Constant][18] /* ty=Tensor[(56), float64] */)
  };
  %211(%var_2242) /* ty=(Tensor[(5, 10, 4), float32], Tensor[(5, 10, 4), float64], Tensor[(3, 1, 3), float64], Tensor[(864), int16], Tensor[(1, 9), float64], Tensor[(2, 14, 2), bool], Tensor[(56), float64]) */
}

def @func_3056() -> (Tensor[(4, 9, 4), float64],) {
  @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_8531(%var_8530: Tensor[(4, 9, 4), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(?, ?, ?), bool], Tensor[(1), float32], Tensor[(4, 9, 4), float64]) {
  %222 = fn (%var_8453: Tensor[(4, 9, 4), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(?, ?, ?), bool], Tensor[(1), float32], Tensor[(4, 9, 4), float64]) {
    %212 = @func_4218() /* ty=Tensor[(4, 9, 4), float64] */;
    %213 = cast(%var_8453, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
    %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
    %215 = cast(%212, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
    %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %217 = cast(meta[relay.Constant][19] /* ty=Tensor[(1), float32] */, dtype="float32") /* ty=Tensor[(1), float32] */;
    %218 = reshape(%217, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), float32] */;
    %219 = floor_mod(%215, %216) /* ty=Tensor[(4, 9, 4), float64] */;
    %220 = @func_2708(%218) /* ty=Tensor[(?, ?, ?), bool] */;
    %221 = @func_6175() /* ty=Tensor[(4, 9, 4), float64] */;
    (%219, %220, meta[relay.Constant][19] /* ty=Tensor[(1), float32] */, %221)
  };
  %222(%var_8530) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(?, ?, ?), bool], Tensor[(1), float32], Tensor[(4, 9, 4), float64]) */
}

def @func_4218() -> Tensor[(4, 9, 4), float64] {
  %223 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
  %224 = cast(%223, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  exp(%224) /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_5308(%var_5307: Tensor[(14, 8, 9), bool]) -> (Tensor[(14, 8, 9), bool], Tensor[(7, 13, 4), bool], Tensor[(364), int8]) {
  %243 = fn (%var_5274: Tensor[(14, 8, 9), bool]) -> (Tensor[(14, 8, 9), bool], Tensor[(7, 13, 4), bool], Tensor[(364), int8]) {
    %225 = @func_4368() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */;
    %226 = %225.1;
    %227 = cast(%var_5274, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
    %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(3), int32] */;
    %229 = cast(%226, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
    %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %231 = less(%229, %230) /* ty=Tensor[(14, 8, 9), bool] */;
    %232 = cast(%226, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
    %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
    %234 = cast(%231, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
    %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %236 = cast(meta[relay.Constant][20] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
    %237 = cast(%var_5274, dtype="float64") /* ty=Tensor[(14, 8, 9), float64] */;
    %238 = reshape(%236, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %239 = reshape(%237, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %240 = @func_3165(%238, %239) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */;
    %241 = equal(%234, %235) /* ty=Tensor[(14, 8, 9), bool] */;
    %242 = %240.3;
    (%241, %242, meta[relay.Constant][20] /* ty=Tensor[(364), int8] */)
  };
  %243(%var_5307) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(7, 13, 4), bool], Tensor[(364), int8]) */
}

def @func_6551() -> (Tensor[(4, 9, 4), float64],) {
  %244 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  (%244,)
}

def @func_6860(%var_6826: Tensor[(5, 12, 1), float64], %var_6856: Tensor[(364, 1), int8]) -> (Tensor[(5, 12, 1), float64], uint8, uint8, Tensor[(52), int8], Tensor[(52, 1), int8], Tensor[(1008), float64], Tensor[(52, 1), int8], Tensor[(3, 24), float32], Tensor[(364, 1), int8]) {
  %245 = cast(%var_6826, dtype="float64") /* ty=Tensor[(5, 12, 1), float64] */;
  %246 = cast(meta[relay.Constant][21] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %247 = cast(meta[relay.Constant][22] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %248 = reshape(%246, newshape=[]) /* ty=uint8 */;
  %249 = reshape(%247, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %250 = @func_1321(%248, %249) /* ty=(Tensor[(7, 15, 12), bool], Tensor[(91, 4), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(52, 1), int8]) */;
  %251 = cast(meta[relay.Constant][23] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %252 = reshape(%251, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %253 = @func_1841(%252) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
  %254 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %255 = %253.1;
  %256 = cast(%255, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %257 = cast(%var_6856, dtype="int8") /* ty=Tensor[(364, 1), int8] */;
  %258 = reshape(%254, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
  %259 = reshape(%256, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %260 = reshape(%257, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
  %261 = @func_422(%258, %259, %260) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
  %262 = log10(%245) /* ty=Tensor[(5, 12, 1), float64] */;
  %263 = %250.2;
  %264 = %261.2;
  (%262, %263, meta[relay.Constant][21] /* ty=uint8 */, meta[relay.Constant][22] /* ty=Tensor[(52), int8] */, %255, meta[relay.Constant][23] /* ty=Tensor[(1008), float64] */, %264, meta[relay.Constant][24] /* ty=Tensor[(3, 24), float32] */, %var_6856)
}

def @func_7494(%var_7491: Tensor[(1008), float64], %var_7492: Tensor[(72), float32], %var_7493: Tensor[(52), int8]) -> (Tensor[(4, 9, 4), float64], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(480), float64], Tensor[(1008), float64], Tensor[(756), uint16], Tensor[(7, 52), int8]) {
  @func_7489(%var_7491, %var_7492, %var_7493) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(480), float64], Tensor[(1008), float64], Tensor[(756), uint16], Tensor[(7, 52), int8]) */
}

def @func_11547(%var_11479: Tensor[(14, 6, 13), float32], %var_11516: Tensor[(832), uint16], %var_11517: int16, %var_11518: Tensor[(480), float64]) -> (Tensor[(480), float64], Tensor[(832), uint16], int16, Tensor[(480), float64], Tensor[(14, 6, 13), float64]) {
  %265 = cast(%var_11516, dtype="uint16") /* ty=Tensor[(832), uint16] */;
  %266 = cast(%var_11517, dtype="int16") /* ty=int16 */;
  %267 = cast(%var_11518, dtype="float64") /* ty=Tensor[(480), float64] */;
  %268 = reshape(%265, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), uint16] */;
  %269 = reshape(%266, newshape=[]) /* ty=int16 */;
  %270 = reshape(%267, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %271 = @func_6639(%268, %269, %270) /* ty=(Tensor[(1008), float64], Tensor[(364), int8], Tensor[(13, 16, 4), bool], Tensor[(13, 16, 4), bool], int16, Tensor[(72), float32], Tensor[(480), float64], Tensor[(52, 1), int8], Tensor[(7, 13, 4), bool]) */;
  %272 = cast(%var_11479, dtype="float32") /* ty=Tensor[(14, 6, 13), float32] */;
  %273 = rsqrt(%272) /* ty=Tensor[(14, 6, 13), float32] */;
  %274 = cast(%273, dtype="float32") /* ty=Tensor[(14, 6, 13), float32] */;
  %275 = log2(%274) /* ty=Tensor[(14, 6, 13), float32] */;
  %276 = cast(%275, dtype="float64") /* ty=Tensor[(14, 6, 13), float64] */;
  %277 = %271.6;
  %278 = acos(%276) /* ty=Tensor[(14, 6, 13), float64] */;
  (%277, %var_11516, %var_11517, %var_11518, %278)
}

def @func_484(%var_465: uint8, %var_472: Tensor[(72), float32], %var_473: Tensor[(52), int8]) -> (Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) {
  %279 = cast(%var_465, dtype="uint8") /* ty=uint8 */;
  %280 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 9, 6), uint8] */, dtype="uint8") /* ty=Tensor[(11, 9, 6), uint8] */;
  %281 = cast(%var_472, dtype="float32") /* ty=Tensor[(72), float32] */;
  %282 = cast(%var_473, dtype="int8") /* ty=Tensor[(52), int8] */;
  %283 = cast(meta[relay.Constant][26] /* ty=Tensor[(91, 4), int8] */, dtype="int8") /* ty=Tensor[(91, 4), int8] */;
  %284 = reshape(%281, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
  %285 = reshape(%282, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %286 = reshape(%283, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
  %287 = @func_422(%284, %285, %286) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
  %288 = subtract(%279, %280) /* ty=Tensor[(11, 9, 6), uint8] */;
  %289 = %287.2;
  (%288, %289, %var_472, %var_473, meta[relay.Constant][26] /* ty=Tensor[(91, 4), int8] */)
}

def @func_9242() -> (Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), float32], Tensor[(4, 9, 4), float64]) {
  @func_9240() /* ty=(Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), float32], Tensor[(4, 9, 4), float64]) */
}

def @func_1884(%var_1881: Tensor[(6, 16, 9), int16], %var_1882: Tensor[(6, 16, 9), int16], %var_1883: Tensor[(9), float64]) -> (Tensor[(6, 16, 9), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) {
  @func_1879(%var_1881, %var_1882, %var_1883) /* ty=(Tensor[(6, 16, 9), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) */
}

def @func_10993() -> Tensor[(4, 9, 4), float64] {
  %290 = @func_10036() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %290.0
}

def @func_4692() -> (Tensor[(4, 9, 4), float64], Tensor[(15, 12, 11), bool], Tensor[(15, 12, 11), float32], Tensor[(6, 16, 9), float64], Tensor[(36, 24), int16], Tensor[(9), float64]) {
  @func_4690() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(15, 12, 11), bool], Tensor[(15, 12, 11), float32], Tensor[(6, 16, 9), float64], Tensor[(36, 24), int16], Tensor[(9), float64]) */
}

def @func_3726(%var_3722: Tensor[(72), uint32], %var_3723: Tensor[(364), uint8], %var_3724: Tensor[(56), float64], %var_3725: Tensor[(1008), float64]) -> (Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(364), uint32], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(3, 4, 6), float64]) {
  @func_3720(%var_3722, %var_3723, %var_3724, %var_3725) /* ty=(Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(364), uint32], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(3, 4, 6), float64]) */
}

def @func_4220() -> Tensor[(4, 9, 4), float64] {
  @func_4218() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_6103() -> Tensor[(4, 9, 4), float64] {
  @func_6101() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_7069() -> Tensor[(4, 9, 4), float64] {
  %291 = fn () -> Tensor[(4, 9, 4), float64] {
    @func_3796() /* ty=Tensor[(4, 9, 4), float64] */
  };
  %291() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_3820() -> Tensor[(4, 9, 4), float64] {
  %292 = fn () -> Tensor[(4, 9, 4), float64] {
    @func_3112() /* ty=Tensor[(4, 9, 4), float64] */
  };
  %292() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_7276(%var_7275: Tensor[(12, 13, 7), float64]) -> (Tensor[(12, 13, 7), float64], Tensor[(364), uint8]) {
  %299 = fn (%var_7212: Tensor[(12, 13, 7), float64]) -> (Tensor[(12, 13, 7), float64], Tensor[(364), uint8]) {
    %293 = cast(%var_7212, dtype="float64") /* ty=Tensor[(12, 13, 7), float64] */;
    %294 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(12, 13, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %295 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 13, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 13, 7), float64] */;
    %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %297 = multiply(%295, %296) /* ty=Tensor[(12, 13, 7), float64] */;
    %298 = @func_6335() /* ty=Tensor[(364), uint8] */;
    (%297, %298)
  };
  %299(%var_7275) /* ty=(Tensor[(12, 13, 7), float64], Tensor[(364), uint8]) */
}

def @func_9115(%var_9082: Tensor[(4, 9, 4), float64], %var_9097: Tensor[(72), float64]) -> (Tensor[(4, 9, 4), uint32], Tensor[(4, 9, 4), float64], Tensor[(72), float64], Tensor[(3, 4, 6), float32]) {
  %300 = @func_8819() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %301 = %300.1;
  %302 = cast(%var_9082, dtype="uint32") /* ty=Tensor[(4, 9, 4), uint32] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="uint32") /* ty=Tensor[(4, 9, 4), uint32] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %306 = @func_5356() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %307 = cast(%var_9097, dtype="float64") /* ty=Tensor[(72), float64] */;
  %308 = reshape(%307, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
  %309 = @func_588(%308) /* ty=Tensor[(3, 4, 6), float64] */;
  %310 = cast(%309, dtype="float32") /* ty=Tensor[(3, 4, 6), float32] */;
  %311 = add(%304, %305) /* ty=Tensor[(4, 9, 4), uint32] */;
  %312 = %306.0;
  %313 = asinh(%310) /* ty=Tensor[(3, 4, 6), float32] */;
  (%311, %312, %var_9097, %313)
}

def @func_7903(%var_7900: Tensor[(40, 12), float64], %var_7901: Tensor[(26, 2), int8], %var_7902: Tensor[(40, 12), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(26, 2), int8], Tensor[(364), int8], Tensor[(40, 12), int16], Tensor[(4, 9, 4), float64]) {
  @func_7898(%var_7900, %var_7901, %var_7902) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(26, 2), int8], Tensor[(364), int8], Tensor[(40, 12), int16], Tensor[(4, 9, 4), float64]) */
}

def @func_5479(%var_5477: Tensor[(15, 15, 6), uint16], %var_5478: Tensor[(15, 15, 6), uint16]) -> (Tensor[(15, 15, 6), uint16],) {
  @func_5475(%var_5477, %var_5478) /* ty=(Tensor[(15, 15, 6), uint16],) */
}

def @func_8212() -> Tensor[(364), int8] {
  @func_8210() /* ty=Tensor[(364), int8] */
}

def @func_9613(%var_9611: Tensor[(480), float64], %var_9612: Tensor[(52), int8]) -> (Tensor[(4, 9, 4), float64], uint8, Tensor[(480), float64], Tensor[(52), int8]) {
  @func_9609(%var_9611, %var_9612) /* ty=(Tensor[(4, 9, 4), float64], uint8, Tensor[(480), float64], Tensor[(52), int8]) */
}

def @func_11175(%var_11173: int32, %var_11174: Tensor[(2, 8, 11), int32]) -> Tensor[(2, 8, 11), int32] {
  @func_11171(%var_11173, %var_11174) /* ty=Tensor[(2, 8, 11), int32] */
}

def @func_3114() -> Tensor[(4, 9, 4), float64] {
  @func_3112() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_11281() -> (Tensor[(4, 9, 4), float64],) {
  @func_11279() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_6513() -> Tensor[(364), int8] {
  %314 = fn () -> Tensor[(364), int8] {
    @func_4985() /* ty=Tensor[(364), int8] */
  };
  %314() /* ty=Tensor[(364), int8] */
}

def @func_11593() -> Tensor[(4, 9, 4), float64] {
  @func_11591() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_427(%var_424: Tensor[(12, 1, 6), float32], %var_425: Tensor[(52, 1), int8], %var_426: Tensor[(7, 52), int8]) -> (Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) {
  @func_422(%var_424, %var_425, %var_426) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */
}

def @func_8643() -> (Tensor[(4, 9, 4), float64],) {
  %317 = fn () -> (Tensor[(4, 9, 4), float64],) {
    %315 = @func_5356() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
    %316 = %315.0;
    (%316,)
  };
  %317() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_5475(%var_5468: Tensor[(15, 15, 6), uint16], %var_5469: Tensor[(15, 15, 6), uint16]) -> (Tensor[(15, 15, 6), uint16],) {
  %318 = cast(%var_5469, dtype="uint16") /* ty=Tensor[(15, 15, 6), uint16] */;
  %319 = shape_of(%var_5468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%var_5468, dtype="uint16") /* ty=Tensor[(15, 15, 6), uint16] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %322 = bitwise_and(%320, %321) /* ty=Tensor[(15, 15, 6), uint16] */;
  (%322,)
}

def @func_6337() -> Tensor[(364), uint8] {
  @func_6335() /* ty=Tensor[(364), uint8] */
}

def @func_3594(%var_3590: Tensor[(1008), float64], %var_3591: Tensor[(72), float32], %var_3592: Tensor[(52, 1), int8], %var_3593: Tensor[(480), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(12, 1, 6), float32], Tensor[(72), float32], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(2288), float64], Tensor[(52), int8], Tensor[(480), float64]) {
  %352 = fn (%var_3552: Tensor[(1008), float64], %var_3567: Tensor[(72), float32], %var_3568: Tensor[(52, 1), int8], %var_3579: Tensor[(480), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(12, 1, 6), float32], Tensor[(72), float32], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(2288), float64], Tensor[(52), int8], Tensor[(480), float64]) {
    %323 = cast(meta[relay.Constant][28] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
    %324 = cast(%var_3552, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %325 = reshape(%323, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %326 = reshape(%324, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %327 = @func_3165(%325, %326) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */;
    %328 = cast(%var_3567, dtype="float32") /* ty=Tensor[(72), float32] */;
    %329 = cast(%var_3568, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
    %330 = cast(meta[relay.Constant][28] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
    %331 = reshape(%328, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
    %332 = reshape(%329, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
    %333 = reshape(%330, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
    %334 = @func_422(%331, %332, %333) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
    %335 = cast(%var_3552, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %336 = cast(meta[relay.Constant][29] /* ty=Tensor[(2288), float64] */, dtype="float64") /* ty=Tensor[(2288), float64] */;
    %337 = reshape(%335, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %338 = reshape(%336, newshape=[2288]) /* ty=Tensor[(2288), float64] */;
    %339 = @func_3413(%337, %338) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], int16, Tensor[(2288), float64], Tensor[(10, 9, 16), uint8]) */;
    %340 = cast(%var_3579, dtype="float64") /* ty=Tensor[(480), float64] */;
    %341 = cast(%var_3579, dtype="float64") /* ty=Tensor[(480), float64] */;
    %342 = cast(%var_3568, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
    %343 = reshape(%340, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
    %344 = reshape(%341, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
    %345 = reshape(%342, newshape=[52]) /* ty=Tensor[(52), int8] */;
    %346 = @func_2152(%343, %344, %345) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
    %347 = @func_3180() /* ty=Tensor[(4, 9, 4), float64] */;
    %348 = %327.5;
    %349 = %334.0;
    %350 = %339.1;
    %351 = %346.4;
    (%347, %348, meta[relay.Constant][28] /* ty=Tensor[(364), int8] */, %var_3552, %349, %var_3567, %var_3568, %350, meta[relay.Constant][29] /* ty=Tensor[(2288), float64] */, %351, %var_3579)
  };
  %352(%var_3590, %var_3591, %var_3592, %var_3593) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(12, 1, 6), float32], Tensor[(72), float32], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(2288), float64], Tensor[(52), int8], Tensor[(480), float64]) */
}

def @func_6644(%var_6641: Tensor[(13, 16, 4), uint16], %var_6642: int16, %var_6643: Tensor[(480), float64]) -> (Tensor[(1008), float64], Tensor[(364), int8], Tensor[(13, 16, 4), bool], Tensor[(13, 16, 4), bool], int16, Tensor[(72), float32], Tensor[(480), float64], Tensor[(52, 1), int8], Tensor[(7, 13, 4), bool]) {
  @func_6639(%var_6641, %var_6642, %var_6643) /* ty=(Tensor[(1008), float64], Tensor[(364), int8], Tensor[(13, 16, 4), bool], Tensor[(13, 16, 4), bool], int16, Tensor[(72), float32], Tensor[(480), float64], Tensor[(52, 1), int8], Tensor[(7, 13, 4), bool]) */
}

def @func_5244(%var_5241: Tensor[(12, 9, 7), uint16], %var_5242: Tensor[(364), int8], %var_5243: Tensor[(1008), float64]) -> (Tensor[(12, 9, 7), uint16], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(7, 13, 4), float32]) {
  %366 = fn (%var_5202: Tensor[(12, 9, 7), uint16], %var_5210: Tensor[(364), int8], %var_5211: Tensor[(1008), float64]) -> (Tensor[(12, 9, 7), uint16], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(7, 13, 4), float32]) {
    %353 = cast(%var_5202, dtype="uint16") /* ty=Tensor[(12, 9, 7), uint16] */;
    %354 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(12, 9, 7), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %355 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 9, 7), uint16] */, dtype="uint16") /* ty=Tensor[(12, 9, 7), uint16] */;
    %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %357 = cast(%var_5210, dtype="int8") /* ty=Tensor[(364), int8] */;
    %358 = cast(%var_5211, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %359 = reshape(%357, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %360 = reshape(%358, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %361 = @func_3165(%359, %360) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */;
    %362 = %361.3;
    %363 = cast(%362, dtype="float32") /* ty=Tensor[(7, 13, 4), float32] */;
    %364 = right_shift(%355, %356) /* ty=Tensor[(12, 9, 7), uint16] */;
    %365 = cos(%363) /* ty=Tensor[(7, 13, 4), float32] */;
    (%364, %var_5210, %var_5211, %365)
  };
  %366(%var_5241, %var_5242, %var_5243) /* ty=(Tensor[(12, 9, 7), uint16], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(7, 13, 4), float32]) */
}

def @func_8558(%var_8556: float64, %var_8557: Tensor[(16, 13, 9), float64]) -> (Tensor[(16, 13, 9), float64],) {
  %370 = fn (%var_8549: float64, %var_8550: Tensor[(16, 13, 9), float64]) -> (Tensor[(16, 13, 9), float64],) {
    %367 = cast(%var_8549, dtype="float64") /* ty=float64 */;
    %368 = cast(%var_8550, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
    %369 = power(%367, %368) /* ty=Tensor[(16, 13, 9), float64] */;
    (%369,)
  };
  %370(%var_8556, %var_8557) /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_214(%var_212: Tensor[(2, 14, 2), float64]) -> Tensor[(2, 14, 2), bool] {
  @func_211(%var_212) /* ty=Tensor[(2, 14, 2), bool] */
}

def @func_3112() -> Tensor[(4, 9, 4), float64] {
  @func_2955() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_10119() -> (Tensor[(2, 14, 2), float64],) {
  %371 = @func_10023() /* ty=(Tensor[(364), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64]) */;
  %372 = %371.1;
  %373 = cast(%372, dtype="float64") /* ty=Tensor[(2, 14, 2), float64] */;
  %374 = log10(%373) /* ty=Tensor[(2, 14, 2), float64] */;
  (%374,)
}

def @func_6706() -> Tensor[(364), int8] {
  @func_6704() /* ty=Tensor[(364), int8] */
}

def @func_7679() -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) {
  @func_7677() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) */
}

def @func_4111(%var_4103: Tensor[(1, 72), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float32], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(1, 72), float64]) {
  %375 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
  %376 = cast(%375, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %377 = cast(%375, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %378 = sigmoid(%377) /* ty=Tensor[(4, 9, 4), float32] */;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %380 = cast(%var_4103, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %381 = reshape(%380, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
  %382 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
  %383 = tan(%376) /* ty=Tensor[(4, 9, 4), float32] */;
  %384 = log10(%379) /* ty=Tensor[(4, 9, 4), float64] */;
  %385 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
  %386 = @func_588(%381) /* ty=Tensor[(3, 4, 6), float64] */;
  (%382, %383, %384, %385, %386, %var_4103)
}

def @func_5690() -> (Tensor[(4, 9, 4), float64], Tensor[(52), int64]) {
  @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */
}

def @func_7199(%var_7198: Tensor[(364), int8]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), float32]) {
  %394 = fn (%var_7190: Tensor[(364), int8]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), float32]) {
    %387 = @func_6512() /* ty=Tensor[(364), int8] */;
    %388 = cast(%var_7190, dtype="float32") /* ty=Tensor[(364), float32] */;
    %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(1), int32] */;
    %390 = cast(%387, dtype="float32") /* ty=Tensor[(364), float32] */;
    %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?), float32] */;
    %392 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
    %393 = floor_mod(%390, %391) /* ty=Tensor[(364), float32] */;
    (%392, %393)
  };
  %394(%var_7198) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), float32]) */
}

def @func_5613(%var_5610: Tensor[(7, 13, 14), uint32], %var_5611: uint8, %var_5612: Tensor[(52), int8]) -> (Tensor[(7, 13, 14), uint32], Tensor[(3, 4, 6), float64], Tensor[(72), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(7, 13, 14), uint8]) {
  %419 = fn (%var_5504: Tensor[(7, 13, 14), uint32], %var_5562: uint8, %var_5563: Tensor[(52), int8]) -> (Tensor[(7, 13, 14), uint32], Tensor[(3, 4, 6), float64], Tensor[(72), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(7, 13, 14), uint8]) {
    %395 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 13, 14), uint32] */, dtype="uint32") /* ty=Tensor[(7, 13, 14), uint32] */;
    %396 = shape_of(%var_5504, dtype="int32") /* ty=Tensor[(3), int32] */;
    %397 = cast(%var_5504, dtype="uint32") /* ty=Tensor[(7, 13, 14), uint32] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %399 = cast(meta[relay.Constant][32] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %400 = reshape(%399, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
    %401 = cast(%var_5562, dtype="uint8") /* ty=uint8 */;
    %402 = cast(%var_5563, dtype="int8") /* ty=Tensor[(52), int8] */;
    %403 = reshape(%401, newshape=[]) /* ty=uint8 */;
    %404 = reshape(%402, newshape=[52]) /* ty=Tensor[(52), int8] */;
    %405 = @func_1321(%403, %404) /* ty=(Tensor[(7, 15, 12), bool], Tensor[(91, 4), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(52, 1), int8]) */;
    %406 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 13, 14), uint32] */, dtype="int64") /* ty=Tensor[(7, 13, 14), int64] */;
    %407 = shape_of(%var_5504, dtype="int32") /* ty=Tensor[(3), int32] */;
    %408 = cast(%var_5504, dtype="int64") /* ty=Tensor[(7, 13, 14), int64] */;
    %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %410 = left_shift(%408, %409) /* ty=Tensor[(7, 13, 14), int64] */;
    %411 = cast(%410, dtype="float32") /* ty=Tensor[(7, 13, 14), float32] */;
    %412 = cos(%411) /* ty=Tensor[(7, 13, 14), float32] */;
    %413 = cast(%412, dtype="uint8") /* ty=Tensor[(7, 13, 14), uint8] */;
    %414 = cast(%var_5562, dtype="uint8") /* ty=uint8 */;
    %415 = minimum(%397, %398) /* ty=Tensor[(7, 13, 14), uint32] */;
    %416 = @func_588(%400) /* ty=Tensor[(3, 4, 6), float64] */;
    %417 = %405.3;
    %418 = add(%413, %414) /* ty=Tensor[(7, 13, 14), uint8] */;
    (%415, %416, meta[relay.Constant][32] /* ty=Tensor[(72), float64] */, %417, %var_5563, %418)
  };
  %419(%var_5610, %var_5611, %var_5612) /* ty=(Tensor[(7, 13, 14), uint32], Tensor[(3, 4, 6), float64], Tensor[(72), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(7, 13, 14), uint8]) */
}

def @func_4944(%var_4881: Tensor[(480), float64], %var_4940: Tensor[(9), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(52), int8], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(52, 480), bool], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) {
  %420 = @func_4368() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */;
  %421 = @func_4368() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */;
  %422 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %423 = cast(%var_4881, dtype="float64") /* ty=Tensor[(480), float64] */;
  %424 = cast(%var_4881, dtype="float64") /* ty=Tensor[(480), float64] */;
  %425 = cast(meta[relay.Constant][33] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %426 = reshape(%423, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %427 = reshape(%424, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %428 = reshape(%425, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %429 = @func_2152(%426, %427, %428) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %430 = %429.1;
  %431 = cast(%430, dtype="bool") /* ty=Tensor[(52, 1), bool] */;
  %432 = cast(%var_4881, dtype="bool") /* ty=Tensor[(480), bool] */;
  %433 = cast(%var_4940, dtype="float64") /* ty=Tensor[(9), float64] */;
  %434 = reshape(%433, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %435 = @func_1471(%434) /* ty=(Tensor[(3, 1, 3), float64],) */;
  %436 = %420.0;
  %437 = %421.2;
  %438 = %422.0;
  %439 = equal(%431, %432) /* ty=Tensor[(52, 480), bool] */;
  %440 = %435.0;
  (%436, meta[relay.Constant][33] /* ty=Tensor[(52), int8] */, %437, %438, %439, %440, %var_4940)
}

def @func_10815(%var_10811: Tensor[(11, 10, 11), float32], %var_10812: Tensor[(1008), float64], %var_10813: Tensor[(6, 12), float32], %var_10814: Tensor[(480), float64]) -> (Tensor[(11, 10, 11), float32], Tensor[(2, 16, 12), bool], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(6, 12), float32], Tensor[(13, 4), int8], Tensor[(480), float64], Tensor[(4, 9, 4), float64], Tensor[(144), float64]) {
  @func_10809(%var_10811, %var_10812, %var_10813, %var_10814) /* ty=(Tensor[(11, 10, 11), float32], Tensor[(2, 16, 12), bool], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(6, 12), float32], Tensor[(13, 4), int8], Tensor[(480), float64], Tensor[(4, 9, 4), float64], Tensor[(144), float64]) */
}

def @func_6274(%var_6248: Tensor[(364), int8], %var_6261: uint8, %var_6262: Tensor[(72), float32]) -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(7, 13, 4), float32], Tensor[(756), uint16], Tensor[(364), int8], Tensor[(2, 504), float64], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) {
  %441 = cast(meta[relay.Constant][34] /* ty=Tensor[(756), uint16] */, dtype="uint16") /* ty=Tensor[(756), uint16] */;
  %442 = cast(%var_6248, dtype="int8") /* ty=Tensor[(364), int8] */;
  %443 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 504), float64] */, dtype="float64") /* ty=Tensor[(2, 504), float64] */;
  %444 = reshape(%441, newshape=[12, 9, 7]) /* ty=Tensor[(12, 9, 7), uint16] */;
  %445 = reshape(%442, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %446 = reshape(%443, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %447 = @func_5240(%444, %445, %446) /* ty=(Tensor[(12, 9, 7), uint16], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(7, 13, 4), float32]) */;
  %448 = cast(%var_6261, dtype="uint8") /* ty=uint8 */;
  %449 = cast(%var_6262, dtype="float32") /* ty=Tensor[(72), float32] */;
  %450 = cast(meta[relay.Constant][36] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %451 = reshape(%448, newshape=[]) /* ty=uint8 */;
  %452 = reshape(%449, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %453 = reshape(%450, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %454 = @func_484(%451, %452, %453) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */;
  %455 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
  %456 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
  %457 = %447.3;
  %458 = %454.1;
  %459 = @func_4985() /* ty=Tensor[(364), int8] */;
  (%455, %456, %457, meta[relay.Constant][34] /* ty=Tensor[(756), uint16] */, %var_6248, meta[relay.Constant][35] /* ty=Tensor[(2, 504), float64] */, %458, %var_6261, %var_6262, meta[relay.Constant][36] /* ty=Tensor[(52), int8] */, %459)
}

def @func_9959() -> (Tensor[(4, 9, 4), float64],) {
  %460 = @func_8642() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %461 = %460.0;
  (%461,)
}

def @func_9304() -> Tensor[(4, 9, 4), float64] {
  @func_9302() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_11425(%var_11423: Tensor[(832), uint16], %var_11424: Tensor[(480), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(832), uint16], int16, Tensor[(480), float64]) {
  %471 = fn (%var_11414: Tensor[(832), uint16], %var_11416: Tensor[(480), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(832), uint16], int16, Tensor[(480), float64]) {
    %462 = cast(%var_11414, dtype="uint16") /* ty=Tensor[(832), uint16] */;
    %463 = cast(meta[relay.Constant][37] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %464 = cast(%var_11416, dtype="float64") /* ty=Tensor[(480), float64] */;
    %465 = reshape(%462, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), uint16] */;
    %466 = reshape(%463, newshape=[]) /* ty=int16 */;
    %467 = reshape(%464, newshape=[480]) /* ty=Tensor[(480), float64] */;
    %468 = @func_6639(%465, %466, %467) /* ty=(Tensor[(1008), float64], Tensor[(364), int8], Tensor[(13, 16, 4), bool], Tensor[(13, 16, 4), bool], int16, Tensor[(72), float32], Tensor[(480), float64], Tensor[(52, 1), int8], Tensor[(7, 13, 4), bool]) */;
    %469 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
    %470 = %468.6;
    (%469, %470, %var_11414, meta[relay.Constant][37] /* ty=int16 */, %var_11416)
  };
  %471(%var_11423, %var_11424) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(832), uint16], int16, Tensor[(480), float64]) */
}

def @func_7919() -> (Tensor[(4, 9, 4), float64],) {
  @func_7917() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_1324(%var_1322: uint8, %var_1323: Tensor[(52), int8]) -> (Tensor[(7, 15, 12), bool], Tensor[(91, 4), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(52, 1), int8]) {
  %496 = fn (%var_1257: uint8, %var_1259: Tensor[(52), int8]) -> (Tensor[(7, 15, 12), bool], Tensor[(91, 4), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(52, 1), int8]) {
    %472 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 15, 12), int64] */, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
    %473 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(7, 15, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %474 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 15, 12), int64] */, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
    %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %476 = cast(%var_1257, dtype="uint8") /* ty=uint8 */;
    %477 = cast(meta[relay.Constant][40] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %478 = cast(%var_1259, dtype="int8") /* ty=Tensor[(52), int8] */;
    %479 = reshape(%476, newshape=[]) /* ty=uint8 */;
    %480 = reshape(%477, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %481 = reshape(%478, newshape=[52]) /* ty=Tensor[(52), int8] */;
    %482 = @func_484(%479, %480, %481) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */;
    %483 = cast(meta[relay.Constant][41] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %484 = reshape(%483, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float64] */;
    %485 = cast(meta[relay.Constant][40] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %486 = cast(%var_1259, dtype="int8") /* ty=Tensor[(52), int8] */;
    %487 = %482.4;
    %488 = cast(%487, dtype="int8") /* ty=Tensor[(91, 4), int8] */;
    %489 = reshape(%485, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
    %490 = reshape(%486, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
    %491 = reshape(%488, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
    %492 = @func_422(%489, %490, %491) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
    %493 = greater(%474, %475) /* ty=Tensor[(7, 15, 12), bool] */;
    %494 = @func_211(%484) /* ty=Tensor[(2, 14, 2), bool] */;
    %495 = %492.2;
    (%493, %487, %var_1257, meta[relay.Constant][40] /* ty=Tensor[(72), float32] */, %var_1259, %494, meta[relay.Constant][41] /* ty=Tensor[(56), float64] */, %495)
  };
  %496(%var_1322, %var_1323) /* ty=(Tensor[(7, 15, 12), bool], Tensor[(91, 4), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(52, 1), int8]) */
}

def @func_7573() -> (Tensor[(4, 9, 4), float32],) {
  %500 = fn () -> (Tensor[(4, 9, 4), float32],) {
    %497 = @func_7068() /* ty=Tensor[(4, 9, 4), float64] */;
    %498 = cast(%497, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
    %499 = log(%498) /* ty=Tensor[(4, 9, 4), float32] */;
    (%499,)
  };
  %500() /* ty=(Tensor[(4, 9, 4), float32],) */
}

def @func_7436(%var_7435: Tensor[(36, 24), int16]) -> (Tensor[(36, 24), float64], Tensor[(36, 24), float32]) {
  %523 = fn (%var_7398: Tensor[(36, 24), int16]) -> (Tensor[(36, 24), float64], Tensor[(36, 24), float32]) {
    %501 = @func_4690() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(15, 12, 11), bool], Tensor[(15, 12, 11), float32], Tensor[(6, 16, 9), float64], Tensor[(36, 24), int16], Tensor[(9), float64]) */;
    %502 = %501.4;
    %503 = cast(%var_7398, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
    %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(2), int32] */;
    %505 = cast(%502, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
    %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %507 = logical_or(%505, %506) /* ty=Tensor[(36, 24), bool] */;
    %508 = cast(%507, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
    %509 = shape_of(%var_7398, dtype="int32") /* ty=Tensor[(2), int32] */;
    %510 = cast(%var_7398, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
    %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %512 = cast(meta[relay.Constant][42] /* ty=Tensor[(36, 24), int16] */, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
    %513 = shape_of(%502, dtype="int32") /* ty=Tensor[(2), int32] */;
    %514 = cast(%502, dtype="bool") /* ty=Tensor[(36, 24), bool] */;
    %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %516 = less(%514, %515) /* ty=Tensor[(36, 24), bool] */;
    %517 = cast(%var_7398, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
    %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(2), int32] */;
    %519 = cast(%516, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
    %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %521 = divide(%510, %511) /* ty=Tensor[(36, 24), float64] */;
    %522 = mod(%519, %520) /* ty=Tensor[(36, 24), float32] */;
    (%521, %522)
  };
  %523(%var_7435) /* ty=(Tensor[(36, 24), float64], Tensor[(36, 24), float32]) */
}

def @func_9498(%var_9495: Tensor[(364), int8], %var_9496: uint8, %var_9497: Tensor[(72), float32]) -> (Tensor[(364), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(4, 9, 4), bool]) {
  %536 = fn (%var_9476: Tensor[(364), int8], %var_9477: uint8, %var_9478: Tensor[(72), float32]) -> (Tensor[(364), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(4, 9, 4), bool]) {
    %524 = cast(%var_9476, dtype="int8") /* ty=Tensor[(364), int8] */;
    %525 = cast(%var_9477, dtype="uint8") /* ty=uint8 */;
    %526 = cast(%var_9478, dtype="float32") /* ty=Tensor[(72), float32] */;
    %527 = reshape(%524, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %528 = reshape(%525, newshape=[]) /* ty=uint8 */;
    %529 = reshape(%526, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %530 = @func_6274(%527, %528, %529) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(7, 13, 4), float32], Tensor[(756), uint16], Tensor[(364), int8], Tensor[(2, 504), float64], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
    %531 = @func_9202() /* ty=Tensor[(4, 9, 4), float64] */;
    %532 = cast(%531, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
    %533 = cast(%var_9477, dtype="bool") /* ty=bool */;
    %534 = %530.4;
    %535 = equal(%532, %533) /* ty=Tensor[(4, 9, 4), bool] */;
    (%534, %var_9476, %var_9478, %535)
  };
  %536(%var_9495, %var_9496, %var_9497) /* ty=(Tensor[(364), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(4, 9, 4), bool]) */
}

def @func_6076() -> (Tensor[(364), int8],) {
  @func_6074() /* ty=(Tensor[(364), int8],) */
}

def @func_10942() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  @func_10940() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_7489(%var_7455: Tensor[(1008), float64], %var_7456: Tensor[(72), float32], %var_7457: Tensor[(52), int8]) -> (Tensor[(4, 9, 4), float64], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(480), float64], Tensor[(1008), float64], Tensor[(756), uint16], Tensor[(7, 52), int8]) {
  %537 = @func_5356() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %538 = cast(%var_7455, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %539 = cast(%var_7456, dtype="float32") /* ty=Tensor[(72), float32] */;
  %540 = cast(%var_7457, dtype="int8") /* ty=Tensor[(52), int8] */;
  %541 = cast(meta[relay.Constant][43] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %542 = reshape(%538, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %543 = reshape(%539, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %544 = reshape(%540, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %545 = reshape(%541, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %546 = @func_3589(%542, %543, %544, %545) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(12, 1, 6), float32], Tensor[(72), float32], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(2288), float64], Tensor[(52), int8], Tensor[(480), float64]) */;
  %547 = cast(meta[relay.Constant][44] /* ty=Tensor[(756), uint16] */, dtype="uint16") /* ty=Tensor[(756), uint16] */;
  %548 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 52), int8] */, dtype="int8") /* ty=Tensor[(7, 52), int8] */;
  %549 = cast(%var_7455, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %550 = reshape(%547, newshape=[12, 9, 7]) /* ty=Tensor[(12, 9, 7), uint16] */;
  %551 = reshape(%548, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %552 = reshape(%549, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %553 = @func_5240(%550, %551, %552) /* ty=(Tensor[(12, 9, 7), uint16], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(7, 13, 4), float32]) */;
  %554 = %537.1;
  %555 = %546.3;
  %556 = %553.2;
  (%554, %555, %var_7455, %var_7456, %var_7457, meta[relay.Constant][43] /* ty=Tensor[(480), float64] */, %556, meta[relay.Constant][44] /* ty=Tensor[(756), uint16] */, meta[relay.Constant][45] /* ty=Tensor[(7, 52), int8] */)
}

def @func_4690() -> (Tensor[(4, 9, 4), float64], Tensor[(15, 12, 11), bool], Tensor[(15, 12, 11), float32], Tensor[(6, 16, 9), float64], Tensor[(36, 24), int16], Tensor[(9), float64]) {
  %557 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 12, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 12, 11), float32] */;
  %558 = atanh(%557) /* ty=Tensor[(15, 12, 11), float32] */;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(15, 12, 11), float64] */;
  %560 = log2(%559) /* ty=Tensor[(15, 12, 11), float64] */;
  %561 = cast(%560, dtype="float64") /* ty=Tensor[(15, 12, 11), float64] */;
  %562 = rsqrt(%561) /* ty=Tensor[(15, 12, 11), float64] */;
  %563 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 12, 11), float64] */, dtype="bool") /* ty=Tensor[(15, 12, 11), bool] */;
  %564 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%562, dtype="bool") /* ty=Tensor[(15, 12, 11), bool] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %567 = cast(%560, dtype="float32") /* ty=Tensor[(15, 12, 11), float32] */;
  %568 = cast(meta[relay.Constant][48] /* ty=Tensor[(36, 24), int16] */, dtype="int16") /* ty=Tensor[(36, 24), int16] */;
  %569 = cast(meta[relay.Constant][48] /* ty=Tensor[(36, 24), int16] */, dtype="int16") /* ty=Tensor[(36, 24), int16] */;
  %570 = cast(meta[relay.Constant][49] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %571 = reshape(%568, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
  %572 = reshape(%569, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
  %573 = reshape(%570, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %574 = @func_1879(%571, %572, %573) /* ty=(Tensor[(6, 16, 9), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) */;
  %575 = @func_3002() /* ty=Tensor[(4, 9, 4), float64] */;
  %576 = equal(%565, %566) /* ty=Tensor[(15, 12, 11), bool] */;
  %577 = acosh(%567) /* ty=Tensor[(15, 12, 11), float32] */;
  %578 = %574.0;
  (%575, %576, %577, %578, meta[relay.Constant][48] /* ty=Tensor[(36, 24), int16] */, meta[relay.Constant][49] /* ty=Tensor[(9), float64] */)
}

def @func_8380() -> Tensor[(364), int8] {
  %579 = fn () -> Tensor[(364), int8] {
    @func_6512() /* ty=Tensor[(364), int8] */
  };
  %579() /* ty=Tensor[(364), int8] */
}

def @func_11042(%var_11032: Tensor[(1), float32]) -> (Tensor[(4, 9, 4), float64], Tensor[(?, ?, ?), bool], Tensor[(1), float32]) {
  %580 = @func_8321() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %581 = cast(%var_11032, dtype="float32") /* ty=Tensor[(1), float32] */;
  %582 = reshape(%581, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), float32] */;
  %583 = %580.0;
  %584 = @func_2708(%582) /* ty=Tensor[(?, ?, ?), bool] */;
  (%583, %584, %var_11032)
}

def @func_3948(%var_3946: Tensor[(480), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(480), float64], Tensor[(52), int8]) {
  @func_3945(%var_3946) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(480), float64], Tensor[(52), int8]) */
}

def @func_9059(%var_9057: Tensor[(1350), uint16], %var_9058: uint8) -> (Tensor[(4, 9, 4), float64], Tensor[(15, 15, 6), uint16], Tensor[(1350), uint16], Tensor[(72), float32], uint8, Tensor[(52), int64]) {
  %599 = fn (%var_9028: Tensor[(1350), uint16], %var_9041: uint8) -> (Tensor[(4, 9, 4), float64], Tensor[(15, 15, 6), uint16], Tensor[(1350), uint16], Tensor[(72), float32], uint8, Tensor[(52), int64]) {
    %585 = @func_4334() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), uint32], Tensor[(364), int8]) */;
    %586 = cast(%var_9028, dtype="uint16") /* ty=Tensor[(1350), uint16] */;
    %587 = cast(%var_9028, dtype="uint16") /* ty=Tensor[(1350), uint16] */;
    %588 = reshape(%586, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), uint16] */;
    %589 = reshape(%587, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), uint16] */;
    %590 = @func_5475(%588, %589) /* ty=(Tensor[(15, 15, 6), uint16],) */;
    %591 = cast(%var_9041, dtype="uint8") /* ty=uint8 */;
    %592 = reshape(%591, newshape=[]) /* ty=uint8 */;
    %593 = @func_3235(%592) /* ty=(Tensor[(72), float32], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(4, 9, 4), float64]) */;
    %594 = @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */;
    %595 = %585.0;
    %596 = %590.0;
    %597 = %593.2;
    %598 = %594.1;
    (%595, %596, %var_9028, %597, %var_9041, %598)
  };
  %599(%var_9057, %var_9058) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(15, 15, 6), uint16], Tensor[(1350), uint16], Tensor[(72), float32], uint8, Tensor[(52), int64]) */
}

def @func_6144() -> (Tensor[(4, 9, 4), float64], Tensor[(14, 5, 14), uint8]) {
  %600 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(14, 5, 14), float64] */;
  %601 = rsqrt(%600) /* ty=Tensor[(14, 5, 14), float64] */;
  %602 = cast(%601, dtype="float64") /* ty=Tensor[(14, 5, 14), float64] */;
  %603 = asinh(%602) /* ty=Tensor[(14, 5, 14), float64] */;
  %604 = cast(%601, dtype="float32") /* ty=Tensor[(14, 5, 14), float32] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="float32") /* ty=Tensor[(14, 5, 14), float32] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %608 = mod(%606, %607) /* ty=Tensor[(14, 5, 14), float32] */;
  %609 = cast(%601, dtype="uint8") /* ty=Tensor[(14, 5, 14), uint8] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%608, dtype="uint8") /* ty=Tensor[(14, 5, 14), uint8] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %613 = @func_3180() /* ty=Tensor[(4, 9, 4), float64] */;
  %614 = logical_xor(%611, %612) /* ty=Tensor[(14, 5, 14), uint8] */;
  (%613, %614)
}

def @func_3647(%var_3645: Tensor[(72), float32]) -> (Tensor[(4, 9, 4), float64], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) {
  @func_3644(%var_3645) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */
}

def @func_4986() -> Tensor[(364), int8] {
  %616 = fn () -> Tensor[(364), int8] {
    %615 = @func_4334() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), uint32], Tensor[(364), int8]) */;
    %615.2
  };
  %616() /* ty=Tensor[(364), int8] */
}

def @func_11375() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %621 = fn () -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
    %617 = @func_11279() /* ty=(Tensor[(4, 9, 4), float64],) */;
    %618 = @func_6175() /* ty=Tensor[(4, 9, 4), float64] */;
    %619 = @func_7068() /* ty=Tensor[(4, 9, 4), float64] */;
    %620 = %617.0;
    (%618, %619, %620)
  };
  %621() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_6491() -> (Tensor[(364), int8],) {
  %622 = @func_6074() /* ty=(Tensor[(364), int8],) */;
  %623 = %622.0;
  (%623,)
}

def @func_5142(%var_5056: Tensor[(56), float64], %var_5085: Tensor[(4, 9, 4), bool]) -> (Tensor[(4, 9, 4), float32], Tensor[(3, 1, 3), float64], Tensor[(72), uint32], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(4, 9, 4), bool], Tensor[(7, 13, 4), bool], Tensor[(13, 4), int8], Tensor[(364), int8], Tensor[(3, 4, 6), float64]) {
  %624 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %625 = %624.0;
  %626 = cast(%625, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %627 = asin(%626) /* ty=Tensor[(4, 9, 4), float64] */;
  %628 = cast(%627, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %629 = cast(meta[relay.Constant][51] /* ty=Tensor[(72), uint32] */, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %630 = cast(%var_5056, dtype="float64") /* ty=Tensor[(56), float64] */;
  %631 = cast(meta[relay.Constant][52] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %632 = reshape(%629, newshape=[36, 2]) /* ty=Tensor[(36, 2), uint32] */;
  %633 = reshape(%630, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %634 = reshape(%631, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %635 = @func_4809(%632, %633, %634) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(36, 2), uint32], Tensor[(7, 52), uint8], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64], Tensor[(4, 9, 4), float64]) */;
  %636 = cast(%625, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %637 = acosh(%636) /* ty=Tensor[(4, 9, 4), float32] */;
  %638 = cast(%627, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%637, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %642 = logical_or(%640, %641) /* ty=Tensor[(4, 9, 4), bool] */;
  %643 = cast(%var_5085, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%642, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %647 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 4), int8] */, dtype="int8") /* ty=Tensor[(13, 4), int8] */;
  %648 = cast(meta[relay.Constant][54] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %649 = reshape(%647, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), int8] */;
  %650 = reshape(%648, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), int8] */;
  %651 = cast(meta[relay.Constant][51] /* ty=Tensor[(72), uint32] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %652 = reshape(%651, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
  %653 = log2(%628) /* ty=Tensor[(4, 9, 4), float32] */;
  %654 = %635.6;
  %655 = logical_and(%645, %646) /* ty=Tensor[(4, 9, 4), bool] */;
  %656 = @func_286(%649, %650) /* ty=Tensor[(7, 13, 4), bool] */;
  %657 = @func_588(%652) /* ty=Tensor[(3, 4, 6), float64] */;
  (%653, %654, meta[relay.Constant][51] /* ty=Tensor[(72), uint32] */, %var_5056, meta[relay.Constant][52] /* ty=Tensor[(1008), float64] */, %655, %656, meta[relay.Constant][53] /* ty=Tensor[(13, 4), int8] */, meta[relay.Constant][54] /* ty=Tensor[(364), int8] */, %657)
}

def @func_7309() -> (Tensor[(4, 9, 4), float64],) {
  %658 = @func_6144() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 5, 14), uint8]) */;
  %659 = %658.0;
  (%659,)
}

def @func_5435(%var_5434: Tensor[(1, 832), int16]) -> (Tensor[(1008), float32], Tensor[(13, 16, 4), bool], int16, Tensor[(1, 832), int16]) {
  %669 = fn (%var_5428: Tensor[(1, 832), int16]) -> (Tensor[(1008), float32], Tensor[(13, 16, 4), bool], int16, Tensor[(1, 832), int16]) {
    %660 = @func_4368() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */;
    %661 = %660.2;
    %662 = cast(%661, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %663 = cast(meta[relay.Constant][55] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %664 = cast(%var_5428, dtype="int16") /* ty=Tensor[(1, 832), int16] */;
    %665 = reshape(%663, newshape=[]) /* ty=int16 */;
    %666 = reshape(%664, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), int16] */;
    %667 = atan(%662) /* ty=Tensor[(1008), float32] */;
    %668 = @func_1516(%665, %666) /* ty=Tensor[(13, 16, 4), bool] */;
    (%667, %668, meta[relay.Constant][55] /* ty=int16 */, %var_5428)
  };
  %669(%var_5434) /* ty=(Tensor[(1008), float32], Tensor[(13, 16, 4), bool], int16, Tensor[(1, 832), int16]) */
}

def @func_5784(%var_5783: Tensor[(15, 12, 11), bool]) -> Tensor[(15, 12, 11), uint32] {
  %676 = fn (%var_5772: Tensor[(15, 12, 11), bool]) -> Tensor[(15, 12, 11), uint32] {
    %670 = @func_4690() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(15, 12, 11), bool], Tensor[(15, 12, 11), float32], Tensor[(6, 16, 9), float64], Tensor[(36, 24), int16], Tensor[(9), float64]) */;
    %671 = %670.1;
    %672 = cast(%var_5772, dtype="uint32") /* ty=Tensor[(15, 12, 11), uint32] */;
    %673 = shape_of(%671, dtype="int32") /* ty=Tensor[(3), int32] */;
    %674 = cast(%671, dtype="uint32") /* ty=Tensor[(15, 12, 11), uint32] */;
    %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    multiply(%674, %675) /* ty=Tensor[(15, 12, 11), uint32] */
  };
  %676(%var_5783) /* ty=Tensor[(15, 12, 11), uint32] */
}

def @func_1879(%var_1855: Tensor[(6, 16, 9), int16], %var_1856: Tensor[(6, 16, 9), int16], %var_1875: Tensor[(9), float64]) -> (Tensor[(6, 16, 9), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) {
  %677 = cast(%var_1856, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
  %678 = shape_of(%var_1855, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%var_1855, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %681 = not_equal(%679, %680) /* ty=Tensor[(6, 16, 9), bool] */;
  %682 = cast(%681, dtype="float64") /* ty=Tensor[(6, 16, 9), float64] */;
  %683 = cast(%var_1875, dtype="float64") /* ty=Tensor[(9), float64] */;
  %684 = reshape(%683, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %685 = @func_1471(%684) /* ty=(Tensor[(3, 1, 3), float64],) */;
  %686 = tan(%682) /* ty=Tensor[(6, 16, 9), float64] */;
  %687 = %685.0;
  (%686, %687, %var_1875)
}

def @func_3527() -> (Tensor[(4, 9, 4), float64],) {
  %689 = fn () -> (Tensor[(4, 9, 4), float64],) {
    %688 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
    (%688,)
  };
  %689() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_3498() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint8]) {
  %690 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %691 = cast(meta[relay.Constant][56] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %692 = cast(meta[relay.Constant][56] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %693 = reshape(%691, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %694 = reshape(%692, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %695 = @func_3335(%693, %694) /* ty=(Tensor[(72), uint32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint64]) */;
  %696 = %695.3;
  %697 = cast(%696, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %698 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(364), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %699 = cast(meta[relay.Constant][56] /* ty=Tensor[(364), int8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %701 = %690.0;
  %702 = @func_3002() /* ty=Tensor[(4, 9, 4), float64] */;
  %703 = subtract(%699, %700) /* ty=Tensor[(364), uint8] */;
  (%701, %702, %703)
}

def @func_6074() -> (Tensor[(364), int8],) {
  %704 = @func_4985() /* ty=Tensor[(364), int8] */;
  (%704,)
}

def @func_3238(%var_3236: uint8) -> (Tensor[(72), float32], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(4, 9, 4), float64]) {
  @func_3235(%var_3236) /* ty=(Tensor[(72), float32], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(4, 9, 4), float64]) */
}

def @func_6639(%var_6591: Tensor[(13, 16, 4), uint16], %var_6612: int16, %var_6617: Tensor[(480), float64]) -> (Tensor[(1008), float64], Tensor[(364), int8], Tensor[(13, 16, 4), bool], Tensor[(13, 16, 4), bool], int16, Tensor[(72), float32], Tensor[(480), float64], Tensor[(52, 1), int8], Tensor[(7, 13, 4), bool]) {
  %705 = cast(meta[relay.Constant][57] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %706 = cast(meta[relay.Constant][57] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %707 = reshape(%705, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %708 = reshape(%706, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %709 = @func_3335(%707, %708) /* ty=(Tensor[(72), uint32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint64]) */;
  %710 = cast(%var_6591, dtype="uint16") /* ty=Tensor[(13, 16, 4), uint16] */;
  %711 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(13, 16, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(meta[relay.Constant][58] /* ty=Tensor[(13, 16, 4), uint16] */, dtype="uint16") /* ty=Tensor[(13, 16, 4), uint16] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %714 = bitwise_or(%712, %713) /* ty=Tensor[(13, 16, 4), uint16] */;
  %715 = cast(%714, dtype="bool") /* ty=Tensor[(13, 16, 4), bool] */;
  %716 = shape_of(%var_6591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%var_6591, dtype="bool") /* ty=Tensor[(13, 16, 4), bool] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %719 = cast(%var_6612, dtype="int16") /* ty=int16 */;
  %720 = less_equal(%717, %718) /* ty=Tensor[(13, 16, 4), bool] */;
  %721 = cast(%720, dtype="int16") /* ty=Tensor[(13, 16, 4), int16] */;
  %722 = reshape(%719, newshape=[]) /* ty=int16 */;
  %723 = reshape(%721, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), int16] */;
  %724 = cast(%var_6617, dtype="float64") /* ty=Tensor[(480), float64] */;
  %725 = cast(%var_6617, dtype="float64") /* ty=Tensor[(480), float64] */;
  %726 = cast(meta[relay.Constant][59] /* ty=Tensor[(52, 1), int8] */, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %727 = reshape(%724, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %728 = reshape(%725, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %729 = reshape(%726, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %730 = @func_2152(%727, %728, %729) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %731 = cast(meta[relay.Constant][57] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %732 = %709.1;
  %733 = cast(%732, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %734 = reshape(%731, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %735 = reshape(%733, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %736 = @func_3165(%734, %735) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */;
  %737 = @func_1516(%722, %723) /* ty=Tensor[(13, 16, 4), bool] */;
  %738 = %730.3;
  %739 = %736.3;
  (%732, meta[relay.Constant][57] /* ty=Tensor[(364), int8] */, %720, %737, %var_6612, %738, %var_6617, meta[relay.Constant][59] /* ty=Tensor[(52, 1), int8] */, %739)
}

def @func_2955() -> Tensor[(4, 9, 4), float64] {
  %740 = cast(meta[relay.Constant][60] /* ty=Tensor[(4, 9, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  atan(%740) /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_7118(%var_7089: Tensor[(56), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(56), float64], Tensor[(9), float64], Tensor[(6, 144), int16], Tensor[(3, 3), float64]) {
  %741 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
  %742 = cast(%741, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %743 = cast(%var_7089, dtype="float64") /* ty=Tensor[(56), float64] */;
  %744 = cast(%741, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
  %745 = reshape(%743, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %746 = reshape(%744, newshape=[4, 9, 4]) /* ty=Tensor[(4, 9, 4), bool] */;
  %747 = @func_5142(%745, %746) /* ty=(Tensor[(4, 9, 4), float32], Tensor[(3, 1, 3), float64], Tensor[(72), uint32], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(4, 9, 4), bool], Tensor[(7, 13, 4), bool], Tensor[(13, 4), int8], Tensor[(364), int8], Tensor[(3, 4, 6), float64]) */;
  %748 = cast(meta[relay.Constant][61] /* ty=Tensor[(6, 144), int16] */, dtype="int16") /* ty=Tensor[(6, 144), int16] */;
  %749 = cast(meta[relay.Constant][61] /* ty=Tensor[(6, 144), int16] */, dtype="int16") /* ty=Tensor[(6, 144), int16] */;
  %750 = cast(meta[relay.Constant][62] /* ty=Tensor[(3, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 3), float64] */;
  %751 = reshape(%748, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
  %752 = reshape(%749, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), int16] */;
  %753 = reshape(%750, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %754 = @func_1879(%751, %752, %753) /* ty=(Tensor[(6, 16, 9), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) */;
  %755 = acos(%742) /* ty=Tensor[(4, 9, 4), float64] */;
  %756 = %747.9;
  %757 = %754.2;
  (%755, %756, %var_7089, %757, meta[relay.Constant][61] /* ty=Tensor[(6, 144), int16] */, meta[relay.Constant][62] /* ty=Tensor[(3, 3), float64] */)
}

def @func_8886(%var_8872: int64, %var_8873: Tensor[(7, 6, 1), int64]) -> (Tensor[(7, 6, 1), bool],) {
  %758 = cast(%var_8872, dtype="bool") /* ty=bool */;
  %759 = cast(%var_8873, dtype="bool") /* ty=Tensor[(7, 6, 1), bool] */;
  %760 = less_equal(%758, %759) /* ty=Tensor[(7, 6, 1), bool] */;
  (%760,)
}

def @func_6177() -> Tensor[(4, 9, 4), float64] {
  @func_6175() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_8960() -> Tensor[(4, 9, 4), float64] {
  %761 = fn () -> Tensor[(4, 9, 4), float64] {
    @func_3819() /* ty=Tensor[(4, 9, 4), float64] */
  };
  %761() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_9564() -> Tensor[(4, 9, 4), float64] {
  @func_9562() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_9562() -> Tensor[(4, 9, 4), float64] {
  %762 = @func_4334() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), uint32], Tensor[(364), int8]) */;
  %762.0
}

def @func_9609(%var_9599: Tensor[(480), float64], %var_9600: Tensor[(52), int8]) -> (Tensor[(4, 9, 4), float64], uint8, Tensor[(480), float64], Tensor[(52), int8]) {
  %763 = @func_7677() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) */;
  %764 = cast(%var_9599, dtype="float64") /* ty=Tensor[(480), float64] */;
  %765 = cast(%var_9599, dtype="float64") /* ty=Tensor[(480), float64] */;
  %766 = cast(%var_9600, dtype="int8") /* ty=Tensor[(52), int8] */;
  %767 = reshape(%764, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %768 = reshape(%765, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %769 = reshape(%766, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %770 = @func_2152(%767, %768, %769) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) */;
  %771 = %763.0;
  %772 = %770.2;
  (%771, %772, %var_9599, %var_9600)
}

def @func_5848(%var_5847: Tensor[(52), int64]) -> (Tensor[(52), int64],) {
  %780 = fn (%var_5814: Tensor[(52), int64]) -> (Tensor[(52), int64],) {
    %773 = @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */;
    %774 = %773.1;
    %775 = cast(%var_5814, dtype="int64") /* ty=Tensor[(52), int64] */;
    %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(1), int32] */;
    %777 = cast(%774, dtype="int64") /* ty=Tensor[(52), int64] */;
    %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?), int64] */;
    %779 = right_shift(%777, %778) /* ty=Tensor[(52), int64] */;
    (%779,)
  };
  %780(%var_5847) /* ty=(Tensor[(52), int64],) */
}

def @func_7356(%var_7354: Tensor[(72), float64], %var_7355: Tensor[(364), int8]) -> (Tensor[(3, 4, 6), float64], Tensor[(72), float64], Tensor[(364), int64], Tensor[(4, 9, 4), float64]) {
  %791 = fn (%var_7323: Tensor[(72), float64], %var_7327: Tensor[(364), int8]) -> (Tensor[(3, 4, 6), float64], Tensor[(72), float64], Tensor[(364), int64], Tensor[(4, 9, 4), float64]) {
    %781 = cast(%var_7323, dtype="float64") /* ty=Tensor[(72), float64] */;
    %782 = reshape(%781, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), float64] */;
    %783 = @func_4985() /* ty=Tensor[(364), int8] */;
    %784 = cast(%var_7327, dtype="int64") /* ty=Tensor[(364), int64] */;
    %785 = shape_of(%783, dtype="int32") /* ty=Tensor[(1), int32] */;
    %786 = cast(%783, dtype="int64") /* ty=Tensor[(364), int64] */;
    %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?), int64] */;
    %788 = @func_588(%782) /* ty=Tensor[(3, 4, 6), float64] */;
    %789 = minimum(%786, %787) /* ty=Tensor[(364), int64] */;
    %790 = @func_3180() /* ty=Tensor[(4, 9, 4), float64] */;
    (%788, %var_7323, %789, %790)
  };
  %791(%var_7354, %var_7355) /* ty=(Tensor[(3, 4, 6), float64], Tensor[(72), float64], Tensor[(364), int64], Tensor[(4, 9, 4), float64]) */
}

def @func_10121() -> (Tensor[(2, 14, 2), float64],) {
  @func_10119() /* ty=(Tensor[(2, 14, 2), float64],) */
}

def @func_3004() -> Tensor[(4, 9, 4), float64] {
  @func_3002() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_11171(%var_11160: int32, %var_11161: Tensor[(2, 8, 11), int32]) -> Tensor[(2, 8, 11), int32] {
  %792 = cast(%var_11160, dtype="int32") /* ty=int32 */;
  %793 = cast(%var_11161, dtype="int32") /* ty=Tensor[(2, 8, 11), int32] */;
  left_shift(%792, %793) /* ty=Tensor[(2, 8, 11), int32] */
}

def @func_9119(%var_9117: Tensor[(4, 9, 4), float64], %var_9118: Tensor[(72), float64]) -> (Tensor[(4, 9, 4), uint32], Tensor[(4, 9, 4), float64], Tensor[(72), float64], Tensor[(3, 4, 6), float32]) {
  @func_9115(%var_9117, %var_9118) /* ty=(Tensor[(4, 9, 4), uint32], Tensor[(4, 9, 4), float64], Tensor[(72), float64], Tensor[(3, 4, 6), float32]) */
}

def @func_11279() -> (Tensor[(4, 9, 4), float64],) {
  %794 = @func_10993() /* ty=Tensor[(4, 9, 4), float64] */;
  (%794,)
}

def @func_2710(%var_2709: Tensor[(1, 1, 1), float32]) -> Tensor[(?, ?, ?), bool] {
  %801 = fn (%var_2696: Tensor[(1, 1, 1), float32]) -> Tensor[(?, ?, ?), bool] {
    %795 = cast(%var_2696, dtype="float32") /* ty=Tensor[(1, 1, 1), float32] */;
    %796 = cosh(%795) /* ty=Tensor[(1, 1, 1), float32] */;
    %797 = cast(%var_2696, dtype="bool") /* ty=Tensor[(1, 1, 1), bool] */;
    %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
    %799 = cast(%796, dtype="bool") /* ty=Tensor[(1, 1, 1), bool] */;
    %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%799, %800) /* ty=Tensor[(?, ?, ?), bool] */
  };
  %801(%var_2709) /* ty=Tensor[(?, ?, ?), bool] */
}

def @func_10441() -> (Tensor[(364), int8],) {
  @func_10439() /* ty=(Tensor[(364), int8],) */
}

def @func_10496() -> (Tensor[(4, 9, 4), float64],) {
  %803 = fn () -> (Tensor[(4, 9, 4), float64],) {
    %802 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
    (%802,)
  };
  %803() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_10653() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %806 = fn () -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
    %804 = @func_7068() /* ty=Tensor[(4, 9, 4), float64] */;
    %805 = @func_4218() /* ty=Tensor[(4, 9, 4), float64] */;
    (%804, %805)
  };
  %806() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_9302() -> Tensor[(4, 9, 4), float64] {
  %807 = @func_8642() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %807.0
}

def @func_10995() -> Tensor[(4, 9, 4), float64] {
  @func_10993() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_7785(%var_7784: Tensor[(52), int64]) -> (Tensor[(4, 9, 4), float64], Tensor[(52), int64], Tensor[(52), float64], Tensor[(3, 1, 3), float64], Tensor[(56), float64]) {
  %822 = fn (%var_7750: Tensor[(52), int64]) -> (Tensor[(4, 9, 4), float64], Tensor[(52), int64], Tensor[(52), float64], Tensor[(3, 1, 3), float64], Tensor[(56), float64]) {
    %808 = @func_6551() /* ty=(Tensor[(4, 9, 4), float64],) */;
    %809 = cast(%var_7750, dtype="int64") /* ty=Tensor[(52), int64] */;
    %810 = reshape(%809, newshape=[52]) /* ty=Tensor[(52), int64] */;
    %811 = @func_5846(%810) /* ty=(Tensor[(52), int64],) */;
    %812 = cast(%var_7750, dtype="float64") /* ty=Tensor[(52), float64] */;
    %813 = cast(meta[relay.Constant][63] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %814 = %808.0;
    %815 = cast(%814, dtype="bool") /* ty=Tensor[(4, 9, 4), bool] */;
    %816 = reshape(%813, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %817 = reshape(%815, newshape=[4, 9, 4]) /* ty=Tensor[(4, 9, 4), bool] */;
    %818 = @func_5142(%816, %817) /* ty=(Tensor[(4, 9, 4), float32], Tensor[(3, 1, 3), float64], Tensor[(72), uint32], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(4, 9, 4), bool], Tensor[(7, 13, 4), bool], Tensor[(13, 4), int8], Tensor[(364), int8], Tensor[(3, 4, 6), float64]) */;
    %819 = %811.0;
    %820 = atan(%812) /* ty=Tensor[(52), float64] */;
    %821 = %818.1;
    (%814, %819, %820, %821, meta[relay.Constant][63] /* ty=Tensor[(56), float64] */)
  };
  %822(%var_7784) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64], Tensor[(52), float64], Tensor[(3, 1, 3), float64], Tensor[(56), float64]) */
}

def @func_2057(%var_2055: Tensor[(13, 16, 11), float64], %var_2056: int16) -> (Tensor[(13, 16, 11), float32], Tensor[(13, 16, 11), float64], Tensor[(13, 16, 4), bool], int16, Tensor[(832), int16]) {
  @func_2053(%var_2055, %var_2056) /* ty=(Tensor[(13, 16, 11), float32], Tensor[(13, 16, 11), float64], Tensor[(13, 16, 4), bool], int16, Tensor[(832), int16]) */
}

def @func_3181() -> Tensor[(4, 9, 4), float64] {
  %823 = fn () -> Tensor[(4, 9, 4), float64] {
    @func_3002() /* ty=Tensor[(4, 9, 4), float64] */
  };
  %823() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_9751() -> (Tensor[(364), int8], Tensor[(3, 1, 3), float64], Tensor[(9), float64], Tensor[(4, 9, 4), float64]) {
  %830 = fn () -> (Tensor[(364), int8], Tensor[(3, 1, 3), float64], Tensor[(9), float64], Tensor[(4, 9, 4), float64]) {
    %824 = cast(meta[relay.Constant][64] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
    %825 = reshape(%824, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
    %826 = @func_1471(%825) /* ty=(Tensor[(3, 1, 3), float64],) */;
    %827 = @func_8210() /* ty=Tensor[(364), int8] */;
    %828 = %826.0;
    %829 = @func_6175() /* ty=Tensor[(4, 9, 4), float64] */;
    (%827, %828, meta[relay.Constant][64] /* ty=Tensor[(9), float64] */, %829)
  };
  %830() /* ty=(Tensor[(364), int8], Tensor[(3, 1, 3), float64], Tensor[(9), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_7035(%var_7034: Tensor[(11, 15, 9), float64]) -> (Tensor[(11, 15, 9), float64], Tensor[(4, 9, 4), float64]) {
  %834 = fn (%var_7010: Tensor[(11, 15, 9), float64]) -> (Tensor[(11, 15, 9), float64], Tensor[(4, 9, 4), float64]) {
    %831 = cast(%var_7010, dtype="float64") /* ty=Tensor[(11, 15, 9), float64] */;
    %832 = sqrt(%831) /* ty=Tensor[(11, 15, 9), float64] */;
    %833 = @func_6175() /* ty=Tensor[(4, 9, 4), float64] */;
    (%832, %833)
  };
  %834(%var_7034) /* ty=(Tensor[(11, 15, 9), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_590(%var_589: Tensor[(3, 4, 6), float64]) -> Tensor[(3, 4, 6), float64] {
  %836 = fn (%var_585: Tensor[(3, 4, 6), float64]) -> Tensor[(3, 4, 6), float64] {
    %835 = cast(%var_585, dtype="float64") /* ty=Tensor[(3, 4, 6), float64] */;
    log(%835) /* ty=Tensor[(3, 4, 6), float64] */
  };
  %836(%var_589) /* ty=Tensor[(3, 4, 6), float64] */
}

def @func_8210() -> Tensor[(364), int8] {
  @func_6310() /* ty=Tensor[(364), int8] */
}

def @func_211(%var_206: Tensor[(2, 14, 2), float64]) -> Tensor[(2, 14, 2), bool] {
  %837 = cast(4.00303f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %838 = cast(%var_206, dtype="bool") /* ty=Tensor[(2, 14, 2), bool] */;
  greater(%837, %838) /* ty=Tensor[(2, 14, 2), bool] */
}

def @func_7845() -> (Tensor[(4, 9, 4), float64],) {
  @func_7843() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_10721() -> Tensor[(4, 9, 4), float64] {
  %839 = fn () -> Tensor[(4, 9, 4), float64] {
    @func_4218() /* ty=Tensor[(4, 9, 4), float64] */
  };
  %839() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_3417(%var_3415: Tensor[(1008), float64], %var_3416: Tensor[(2288), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], int16, Tensor[(2288), float64], Tensor[(10, 9, 16), uint8]) {
  @func_3413(%var_3415, %var_3416) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], int16, Tensor[(2288), float64], Tensor[(10, 9, 16), uint8]) */
}

def @func_11591() -> Tensor[(4, 9, 4), float64] {
  %840 = @func_8028() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %840.0
}

def @func_11448() -> Tensor[(364), int8] {
  %841 = fn () -> Tensor[(364), int8] {
    @func_6512() /* ty=Tensor[(364), int8] */
  };
  %841() /* ty=Tensor[(364), int8] */
}

def @func_6493() -> (Tensor[(364), int8],) {
  @func_6491() /* ty=(Tensor[(364), int8],) */
}

def @func_6031(%var_6008: Tensor[(480), float64]) -> (Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(480), float64]) {
  %842 = @func_4368() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */;
  %843 = cast(%var_6008, dtype="float64") /* ty=Tensor[(480), float64] */;
  %844 = reshape(%843, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %845 = @func_3945(%844) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), float32], Tensor[(480), float64], Tensor[(52), int8]) */;
  %846 = %842.2;
  %847 = @func_3002() /* ty=Tensor[(4, 9, 4), float64] */;
  %848 = %845.2;
  (%846, %847, %848, %var_6008)
}

def @func_10152(%var_10142: float64, %var_10143: Tensor[(936, 2), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(16, 13, 9), float64], float64, Tensor[(936, 2), float64]) {
  %849 = @func_7677() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) */;
  %850 = cast(%var_10142, dtype="float64") /* ty=float64 */;
  %851 = cast(%var_10143, dtype="float64") /* ty=Tensor[(936, 2), float64] */;
  %852 = reshape(%850, newshape=[]) /* ty=float64 */;
  %853 = reshape(%851, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float64] */;
  %854 = @func_8555(%852, %853) /* ty=(Tensor[(16, 13, 9), float64],) */;
  %855 = @func_9302() /* ty=Tensor[(4, 9, 4), float64] */;
  %856 = %849.1;
  %857 = %854.0;
  (%855, %856, %857, %var_10142, %var_10143)
}

def @func_2957() -> Tensor[(4, 9, 4), float64] {
  @func_2955() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_7949() -> (Tensor[(4, 9, 4), float64],) {
  %859 = fn () -> (Tensor[(4, 9, 4), float64],) {
    %858 = @func_4218() /* ty=Tensor[(4, 9, 4), float64] */;
    (%858,)
  };
  %859() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_7311() -> (Tensor[(4, 9, 4), float64],) {
  @func_7309() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_6704() -> Tensor[(364), int8] {
  @func_6310() /* ty=Tensor[(364), int8] */
}

def @func_8011() -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) {
  @func_8009() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(4, 9, 4), float64]) */
}

def @func_10156(%var_10154: float64, %var_10155: Tensor[(936, 2), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(16, 13, 9), float64], float64, Tensor[(936, 2), float64]) {
  @func_10152(%var_10154, %var_10155) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(16, 13, 9), float64], float64, Tensor[(936, 2), float64]) */
}

def @func_9961() -> (Tensor[(4, 9, 4), float64],) {
  @func_9959() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_6335() -> Tensor[(364), uint8] {
  @func_4981() /* ty=Tensor[(364), uint8] */
}

def @func_8890(%var_8888: int64, %var_8889: Tensor[(7, 6, 1), int64]) -> (Tensor[(7, 6, 1), bool],) {
  @func_8886(%var_8888, %var_8889) /* ty=(Tensor[(7, 6, 1), bool],) */
}

def @func_4335() -> (Tensor[(4, 9, 4), float64], Tensor[(72), uint32], Tensor[(364), int8]) {
  %867 = fn () -> (Tensor[(4, 9, 4), float64], Tensor[(72), uint32], Tensor[(364), int8]) {
    %860 = cast(meta[relay.Constant][65] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
    %861 = cast(meta[relay.Constant][65] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
    %862 = reshape(%860, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %863 = reshape(%861, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %864 = @func_3335(%862, %863) /* ty=(Tensor[(72), uint32], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint64]) */;
    %865 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
    %866 = %864.0;
    (%865, %866, meta[relay.Constant][65] /* ty=Tensor[(364), int8] */)
  };
  %867() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(72), uint32], Tensor[(364), int8]) */
}

def @func_10038() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  @func_10036() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_6978(%var_6975: uint8, %var_6976: Tensor[(1, 72), float32], %var_6977: Tensor[(52), int8]) -> (Tensor[(364), int8], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(52), int8], Tensor[(52), int8], Tensor[(40, 12), float64], Tensor[(1, 72), int16], Tensor[(1, 72), uint64]) {
  %892 = fn (%var_6933: uint8, %var_6934: Tensor[(1, 72), float32], %var_6935: Tensor[(52), int8]) -> (Tensor[(364), int8], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(52), int8], Tensor[(52), int8], Tensor[(40, 12), float64], Tensor[(1, 72), int16], Tensor[(1, 72), uint64]) {
    %868 = @func_5356() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
    %869 = cast(meta[relay.Constant][66] /* ty=Tensor[(40, 12), float64] */, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
    %870 = reshape(%869, newshape=[480]) /* ty=Tensor[(480), float64] */;
    %871 = @func_6031(%870) /* ty=(Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(480), float64]) */;
    %872 = cast(%var_6933, dtype="uint8") /* ty=uint8 */;
    %873 = cast(%var_6934, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
    %874 = cast(%var_6935, dtype="int8") /* ty=Tensor[(52), int8] */;
    %875 = reshape(%872, newshape=[]) /* ty=uint8 */;
    %876 = reshape(%873, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %877 = reshape(%874, newshape=[52]) /* ty=Tensor[(52), int8] */;
    %878 = @func_484(%875, %876, %877) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */;
    %879 = cast(meta[relay.Constant][66] /* ty=Tensor[(40, 12), float64] */, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
    %880 = cast(%var_6933, dtype="float64") /* ty=float64 */;
    %881 = cast(%var_6934, dtype="int16") /* ty=Tensor[(1, 72), int16] */;
    %882 = cast(%var_6933, dtype="int16") /* ty=int16 */;
    %883 = cast(%var_6934, dtype="uint64") /* ty=Tensor[(1, 72), uint64] */;
    %884 = cast(%var_6933, dtype="uint64") /* ty=uint64 */;
    %885 = @func_6704() /* ty=Tensor[(364), int8] */;
    %886 = %868.0;
    %887 = %871.3;
    %888 = %878.3;
    %889 = floor_mod(%879, %880) /* ty=Tensor[(40, 12), float64] */;
    %890 = subtract(%881, %882) /* ty=Tensor[(1, 72), int16] */;
    %891 = right_shift(%883, %884) /* ty=Tensor[(1, 72), uint64] */;
    (%885, %886, %887, %888, %var_6935, %889, %890, %891)
  };
  %892(%var_6975, %var_6976, %var_6977) /* ty=(Tensor[(364), int8], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(52), int8], Tensor[(52), int8], Tensor[(40, 12), float64], Tensor[(1, 72), int16], Tensor[(1, 72), uint64]) */
}

def @func_8180(%var_8178: Tensor[(4, 9, 4), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  @func_8177(%var_8178) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_6553() -> (Tensor[(4, 9, 4), float64],) {
  @func_6551() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_8820() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %896 = fn () -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
    %893 = @func_7309() /* ty=(Tensor[(4, 9, 4), float64],) */;
    %894 = %893.0;
    %895 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
    (%894, %895)
  };
  %896() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_10858(%var_10855: Tensor[(1008), float64], %var_10856: Tensor[(72), float32], %var_10857: Tensor[(52), int8]) -> (Tensor[(4, 9, 4), float64], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(480), float64]) {
  %909 = fn (%var_10834: Tensor[(1008), float64], %var_10835: Tensor[(72), float32], %var_10836: Tensor[(52), int8]) -> (Tensor[(4, 9, 4), float64], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(480), float64]) {
    %897 = @func_8321() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
    %898 = cast(%var_10834, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %899 = cast(%var_10835, dtype="float32") /* ty=Tensor[(72), float32] */;
    %900 = cast(%var_10836, dtype="int8") /* ty=Tensor[(52), int8] */;
    %901 = cast(meta[relay.Constant][67] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
    %902 = reshape(%898, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %903 = reshape(%899, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %904 = reshape(%900, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
    %905 = reshape(%901, newshape=[480]) /* ty=Tensor[(480), float64] */;
    %906 = @func_3589(%902, %903, %904, %905) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(12, 1, 6), float32], Tensor[(72), float32], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(2288), float64], Tensor[(52), int8], Tensor[(480), float64]) */;
    %907 = %897.1;
    %908 = %906.3;
    (%907, %908, %var_10834, %var_10835, %var_10836, meta[relay.Constant][67] /* ty=Tensor[(480), float64] */)
  };
  %909(%var_10855, %var_10856, %var_10857) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(72), float32], Tensor[(52), int8], Tensor[(480), float64]) */
}

def @func_5146(%var_5144: Tensor[(56), float64], %var_5145: Tensor[(4, 9, 4), bool]) -> (Tensor[(4, 9, 4), float32], Tensor[(3, 1, 3), float64], Tensor[(72), uint32], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(4, 9, 4), bool], Tensor[(7, 13, 4), bool], Tensor[(13, 4), int8], Tensor[(364), int8], Tensor[(3, 4, 6), float64]) {
  @func_5142(%var_5144, %var_5145) /* ty=(Tensor[(4, 9, 4), float32], Tensor[(3, 1, 3), float64], Tensor[(72), uint32], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(4, 9, 4), bool], Tensor[(7, 13, 4), bool], Tensor[(13, 4), int8], Tensor[(364), int8], Tensor[(3, 4, 6), float64]) */
}

def @func_6864(%var_6862: Tensor[(5, 12, 1), float64], %var_6863: Tensor[(364, 1), int8]) -> (Tensor[(5, 12, 1), float64], uint8, uint8, Tensor[(52), int8], Tensor[(52, 1), int8], Tensor[(1008), float64], Tensor[(52, 1), int8], Tensor[(3, 24), float32], Tensor[(364, 1), int8]) {
  @func_6860(%var_6862, %var_6863) /* ty=(Tensor[(5, 12, 1), float64], uint8, uint8, Tensor[(52), int8], Tensor[(52, 1), int8], Tensor[(1008), float64], Tensor[(52, 1), int8], Tensor[(3, 24), float32], Tensor[(364, 1), int8]) */
}

def @func_289(%var_287: Tensor[(1, 13, 4), int8], %var_288: Tensor[(7, 13, 4), int8]) -> Tensor[(7, 13, 4), bool] {
  %912 = fn (%var_269: Tensor[(1, 13, 4), int8], %var_270: Tensor[(7, 13, 4), int8]) -> Tensor[(7, 13, 4), bool] {
    %910 = cast(%var_269, dtype="bool") /* ty=Tensor[(1, 13, 4), bool] */;
    %911 = cast(%var_270, dtype="bool") /* ty=Tensor[(7, 13, 4), bool] */;
    equal(%910, %911) /* ty=Tensor[(7, 13, 4), bool] */
  };
  %912(%var_287, %var_288) /* ty=Tensor[(7, 13, 4), bool] */
}

def @func_7917() -> (Tensor[(4, 9, 4), float64],) {
  %913 = @func_3526() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %914 = %913.0;
  (%914,)
}

def @func_7843() -> (Tensor[(4, 9, 4), float64],) {
  %915 = @func_4717() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int8], uint8, Tensor[(52), int8]) */;
  %916 = %915.0;
  (%916,)
}

def @func_4948(%var_4946: Tensor[(480), float64], %var_4947: Tensor[(9), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(52), int8], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(52, 480), bool], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) {
  @func_4944(%var_4946, %var_4947) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int8], Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(52, 480), bool], Tensor[(3, 1, 3), float64], Tensor[(9), float64]) */
}

def @func_4813(%var_4810: Tensor[(36, 2), uint32], %var_4811: Tensor[(56), float64], %var_4812: Tensor[(1008), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(36, 2), uint32], Tensor[(7, 52), uint8], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64], Tensor[(4, 9, 4), float64]) {
  %933 = fn (%var_4788: Tensor[(36, 2), uint32], %var_4790: Tensor[(56), float64], %var_4791: Tensor[(1008), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(36, 2), uint32], Tensor[(7, 52), uint8], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64], Tensor[(4, 9, 4), float64]) {
    %917 = cast(%var_4788, dtype="uint32") /* ty=Tensor[(36, 2), uint32] */;
    %918 = cast(meta[relay.Constant][68] /* ty=Tensor[(7, 52), uint8] */, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
    %919 = cast(%var_4790, dtype="float64") /* ty=Tensor[(56), float64] */;
    %920 = cast(%var_4791, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %921 = reshape(%917, newshape=[72]) /* ty=Tensor[(72), uint32] */;
    %922 = reshape(%918, newshape=[364]) /* ty=Tensor[(364), uint8] */;
    %923 = reshape(%919, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %924 = reshape(%920, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %925 = @func_3720(%921, %922, %923, %924) /* ty=(Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(364), uint32], Tensor[(2, 14, 2), bool], Tensor[(56), float64], Tensor[(364), int8], Tensor[(1008), float64], Tensor[(3, 4, 6), float64]) */;
    %926 = cast(meta[relay.Constant][69] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
    %927 = reshape(%926, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
    %928 = @func_1471(%927) /* ty=(Tensor[(3, 1, 3), float64],) */;
    %929 = @func_3796() /* ty=Tensor[(4, 9, 4), float64] */;
    %930 = %925.7;
    %931 = %928.0;
    %932 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
    (%929, %930, %var_4788, meta[relay.Constant][68] /* ty=Tensor[(7, 52), uint8] */, %var_4790, %var_4791, %931, meta[relay.Constant][69] /* ty=Tensor[(9), float64] */, %932)
  };
  %933(%var_4810, %var_4811, %var_4812) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(36, 2), uint32], Tensor[(7, 52), uint8], Tensor[(56), float64], Tensor[(1008), float64], Tensor[(3, 1, 3), float64], Tensor[(9), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_3165(%var_3152: Tensor[(364), int8], %var_3159: Tensor[(1008), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) {
  %934 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %935 = cast(meta[relay.Constant][70] /* ty=Tensor[(72), uint32] */, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %936 = reshape(%935, newshape=[6, 6, 2]) /* ty=Tensor[(6, 6, 2), uint32] */;
  %937 = @func_1725(%936) /* ty=(Tensor[(6, 6, 2), uint32],) */;
  %938 = cast(meta[relay.Constant][71] /* ty=Tensor[(52, 1), int8] */, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %939 = cast(%var_3152, dtype="int8") /* ty=Tensor[(364), int8] */;
  %940 = reshape(%938, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), int8] */;
  %941 = reshape(%939, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), int8] */;
  %942 = cast(%var_3159, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %943 = reshape(%942, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %944 = @func_1841(%943) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
  %945 = %934.0;
  %946 = %937.0;
  %947 = @func_286(%940, %941) /* ty=Tensor[(7, 13, 4), bool] */;
  %948 = %944.2;
  (%945, %946, meta[relay.Constant][70] /* ty=Tensor[(72), uint32] */, %947, meta[relay.Constant][71] /* ty=Tensor[(52, 1), int8] */, %var_3152, %948, %var_3159)
}

def @func_4369() -> (Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) {
  %954 = fn () -> (Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) {
    %949 = cast(meta[relay.Constant][72] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %950 = reshape(%949, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
    %951 = @func_1841(%950) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */;
    %952 = @func_3819() /* ty=Tensor[(4, 9, 4), float64] */;
    %953 = %951.0;
    (%952, %953, meta[relay.Constant][72] /* ty=Tensor[(1008), float64] */)
  };
  %954() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(14, 8, 9), bool], Tensor[(1008), float64]) */
}

def @func_1844(%var_1842: Tensor[(14, 8, 9), float64]) -> (Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) {
  @func_1841(%var_1842) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */
}

def @func_1471(%var_1468: Tensor[(3, 1, 3), float64]) -> (Tensor[(3, 1, 3), float64],) {
  %955 = cast(%var_1468, dtype="float64") /* ty=Tensor[(3, 1, 3), float64] */;
  %956 = acosh(%955) /* ty=Tensor[(3, 1, 3), float64] */;
  (%956,)
}

def @func_2152(%var_2135: Tensor[(15, 2, 16), float64], %var_2136: Tensor[(15, 2, 16), float64], %var_2148: Tensor[(52), int8]) -> (Tensor[(15, 2, 16), bool], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8]) {
  %957 = cast(%var_2136, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  %958 = shape_of(%var_2135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%var_2135, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %961 = cast(meta[relay.Constant][73] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %962 = cast(meta[relay.Constant][74] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %963 = cast(%var_2148, dtype="int8") /* ty=Tensor[(52), int8] */;
  %964 = reshape(%961, newshape=[]) /* ty=uint8 */;
  %965 = reshape(%962, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %966 = reshape(%963, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %967 = @func_484(%964, %965, %966) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */;
  %968 = equal(%959, %960) /* ty=Tensor[(15, 2, 16), bool] */;
  %969 = %967.1;
  (%968, %969, meta[relay.Constant][73] /* ty=uint8 */, meta[relay.Constant][74] /* ty=Tensor[(72), float32] */, %var_2148)
}

def @func_7121(%var_7119: Tensor[(56), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(56), float64], Tensor[(9), float64], Tensor[(6, 144), int16], Tensor[(3, 3), float64]) {
  @func_7118(%var_7119) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(56), float64], Tensor[(9), float64], Tensor[(6, 144), int16], Tensor[(3, 3), float64]) */
}

def @func_3644(%var_3626: Tensor[(72), float32]) -> (Tensor[(4, 9, 4), float64], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) {
  %970 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %971 = cast(%var_3626, dtype="float32") /* ty=Tensor[(72), float32] */;
  %972 = cast(meta[relay.Constant][75] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %973 = cast(meta[relay.Constant][76] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %974 = reshape(%971, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), float32] */;
  %975 = reshape(%972, newshape=[52, 1]) /* ty=Tensor[(52, 1), int8] */;
  %976 = reshape(%973, newshape=[7, 52]) /* ty=Tensor[(7, 52), int8] */;
  %977 = @func_422(%974, %975, %976) /* ty=(Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) */;
  %978 = %970.0;
  %979 = %977.2;
  (%978, %979, %var_3626, meta[relay.Constant][75] /* ty=Tensor[(52), int8] */, meta[relay.Constant][76] /* ty=Tensor[(364), int8] */)
}

def @func_1516(%var_1504: int16, %var_1505: Tensor[(13, 16, 4), int16]) -> Tensor[(13, 16, 4), bool] {
  %980 = cast(%var_1504, dtype="bool") /* ty=bool */;
  %981 = cast(%var_1505, dtype="bool") /* ty=Tensor[(13, 16, 4), bool] */;
  less(%980, %981) /* ty=Tensor[(13, 16, 4), bool] */
}

def @func_2053(%var_2016: Tensor[(13, 16, 11), float64], %var_2045: int16) -> (Tensor[(13, 16, 11), float32], Tensor[(13, 16, 11), float64], Tensor[(13, 16, 4), bool], int16, Tensor[(832), int16]) {
  %982 = cast(%var_2016, dtype="float32") /* ty=Tensor[(13, 16, 11), float32] */;
  %983 = cast(%var_2016, dtype="float64") /* ty=Tensor[(13, 16, 11), float64] */;
  %984 = exp(%983) /* ty=Tensor[(13, 16, 11), float64] */;
  %985 = cast(meta[relay.Constant][77] /* ty=Tensor[(13, 16, 11), float64] */, dtype="bool") /* ty=Tensor[(13, 16, 11), bool] */;
  %986 = shape_of(%984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %987 = cast(%984, dtype="bool") /* ty=Tensor[(13, 16, 11), bool] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %989 = equal(%987, %988) /* ty=Tensor[(13, 16, 11), bool] */;
  %990 = cast(%989, dtype="float64") /* ty=Tensor[(13, 16, 11), float64] */;
  %991 = cast(%var_2045, dtype="int16") /* ty=int16 */;
  %992 = cast(meta[relay.Constant][78] /* ty=Tensor[(832), int16] */, dtype="int16") /* ty=Tensor[(832), int16] */;
  %993 = reshape(%991, newshape=[]) /* ty=int16 */;
  %994 = reshape(%992, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), int16] */;
  %995 = asinh(%982) /* ty=Tensor[(13, 16, 11), float32] */;
  %996 = tan(%990) /* ty=Tensor[(13, 16, 11), float64] */;
  %997 = @func_1516(%993, %994) /* ty=Tensor[(13, 16, 4), bool] */;
  (%995, %996, %997, %var_2045, meta[relay.Constant][78] /* ty=Tensor[(832), int16] */)
}

def @func_422(%var_403: Tensor[(12, 1, 6), float32], %var_410: Tensor[(52, 1), int8], %var_411: Tensor[(7, 52), int8]) -> (Tensor[(12, 1, 6), float32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(7, 52), int8]) {
  %998 = cast(%var_403, dtype="float32") /* ty=Tensor[(12, 1, 6), float32] */;
  %999 = cast(%var_410, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %1000 = cast(%var_411, dtype="int8") /* ty=Tensor[(7, 52), int8] */;
  %1001 = reshape(%999, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), int8] */;
  %1002 = reshape(%1000, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), int8] */;
  %1003 = cosh(%998) /* ty=Tensor[(12, 1, 6), float32] */;
  %1004 = @func_286(%1001, %1002) /* ty=Tensor[(7, 13, 4), bool] */;
  (%1003, %1004, %var_410, %var_411)
}

def @func_8747() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(2, 240), float64]) {
  @func_8745() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(2, 240), float64]) */
}

def @func_4982() -> Tensor[(364), uint8] {
  %1006 = fn () -> Tensor[(364), uint8] {
    %1005 = @func_3498() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(364), uint8]) */;
    %1005.2
  };
  %1006() /* ty=Tensor[(364), uint8] */
}

def @func_4414(%var_4413: Tensor[(4, 9, 4), float64]) -> Tensor[(4, 9, 4), float64] {
  %1012 = fn (%var_4397: Tensor[(4, 9, 4), float64]) -> Tensor[(4, 9, 4), float64] {
    %1007 = @func_2955() /* ty=Tensor[(4, 9, 4), float64] */;
    %1008 = cast(%var_4397, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
    %1009 = shape_of(%1007, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1010 = cast(%1007, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
    %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%1010, %1011) /* ty=Tensor[(4, 9, 4), float64] */
  };
  %1012(%var_4413) /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_6279(%var_6276: Tensor[(364), int8], %var_6277: uint8, %var_6278: Tensor[(72), float32]) -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(7, 13, 4), float32], Tensor[(756), uint16], Tensor[(364), int8], Tensor[(2, 504), float64], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) {
  @func_6274(%var_6276, %var_6277, %var_6278) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(7, 13, 4), float32], Tensor[(756), uint16], Tensor[(364), int8], Tensor[(2, 504), float64], Tensor[(52, 1), int8], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(364), int8]) */
}

def @func_8322() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %1016 = fn () -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
    %1013 = @func_7309() /* ty=(Tensor[(4, 9, 4), float64],) */;
    %1014 = %1013.0;
    %1015 = @func_6175() /* ty=Tensor[(4, 9, 4), float64] */;
    (%1014, %1015)
  };
  %1016() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_3054() -> (Tensor[(4, 9, 4), float64],) {
  %1017 = @func_3002() /* ty=Tensor[(4, 9, 4), float64] */;
  (%1017,)
}

def @func_9251() -> Tensor[(364), int8] {
  %1018 = fn () -> Tensor[(364), int8] {
    @func_6704() /* ty=Tensor[(364), int8] */
  };
  %1018() /* ty=Tensor[(364), int8] */
}

def @func_10344() -> (Tensor[(4, 9, 4), float64],) {
  %1020 = fn () -> (Tensor[(4, 9, 4), float64],) {
    %1019 = @func_4218() /* ty=Tensor[(4, 9, 4), float64] */;
    (%1019,)
  };
  %1020() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_6175() -> Tensor[(4, 9, 4), float64] {
  @func_3819() /* ty=Tensor[(4, 9, 4), float64] */
}

def @func_3235(%var_3224: uint8) -> (Tensor[(72), float32], uint8, Tensor[(72), float32], Tensor[(52), int8], Tensor[(4, 9, 4), float64]) {
  %1021 = cast(%var_3224, dtype="uint8") /* ty=uint8 */;
  %1022 = cast(meta[relay.Constant][79] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1023 = cast(meta[relay.Constant][80] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %1024 = reshape(%1021, newshape=[]) /* ty=uint8 */;
  %1025 = reshape(%1022, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %1026 = reshape(%1023, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %1027 = @func_484(%1024, %1025, %1026) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */;
  %1028 = @func_3112() /* ty=Tensor[(4, 9, 4), float64] */;
  %1029 = cast(%1028, dtype="float32") /* ty=Tensor[(4, 9, 4), float32] */;
  %1030 = cosh(%1029) /* ty=Tensor[(4, 9, 4), float32] */;
  %1031 = cast(%1030, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %1032 = %1027.2;
  %1033 = sinh(%1031) /* ty=Tensor[(4, 9, 4), float64] */;
  (%1032, %var_3224, meta[relay.Constant][79] /* ty=Tensor[(72), float32] */, meta[relay.Constant][80] /* ty=Tensor[(52), int8] */, %1033)
}

def @func_10598(%var_10570: Tensor[(1872), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(364), uint8], Tensor[(16, 13, 9), float64], float64, Tensor[(1872), float64]) {
  %1034 = @func_8819() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */;
  %1035 = cast(-4.53292f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1036 = cast(%var_10570, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %1037 = reshape(%1035, newshape=[]) /* ty=float64 */;
  %1038 = reshape(%1036, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float64] */;
  %1039 = @func_8555(%1037, %1038) /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1040 = %1034.1;
  %1041 = @func_4981() /* ty=Tensor[(364), uint8] */;
  %1042 = %1039.0;
  (%1040, %1041, %1042, -4.53292f64 /* ty=float64 */, %var_10570)
}

def @func_10262() -> Tensor[(52), int64] {
  %1043 = @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */;
  %1043.1
}

def @func_10967() -> (Tensor[(4, 9, 4), float64],) {
  %1045 = fn () -> (Tensor[(4, 9, 4), float64],) {
    %1044 = @func_9562() /* ty=Tensor[(4, 9, 4), float64] */;
    (%1044,)
  };
  %1045() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_1727(%var_1726: Tensor[(6, 6, 2), uint32]) -> (Tensor[(6, 6, 2), uint32],) {
  %1051 = fn (%var_1699: Tensor[(6, 6, 2), uint32]) -> (Tensor[(6, 6, 2), uint32],) {
    %1046 = cast(meta[relay.Constant][81] /* ty=Tensor[(6, 6, 2), uint32] */, dtype="uint32") /* ty=Tensor[(6, 6, 2), uint32] */;
    %1047 = shape_of(%var_1699, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1048 = cast(%var_1699, dtype="uint32") /* ty=Tensor[(6, 6, 2), uint32] */;
    %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1050 = bitwise_xor(%1048, %1049) /* ty=Tensor[(6, 6, 2), uint32] */;
    (%1050,)
  };
  %1051(%var_1726) /* ty=(Tensor[(6, 6, 2), uint32],) */
}

def @func_8177(%var_8162: Tensor[(4, 9, 4), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %1052 = @func_7948() /* ty=(Tensor[(4, 9, 4), float64],) */;
  %1053 = %1052.0;
  %1054 = cast(%var_8162, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %1055 = shape_of(%1053, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1056 = cast(%1053, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1058 = cast(%1053, dtype="float64") /* ty=Tensor[(4, 9, 4), float64] */;
  %1059 = floor_divide(%1056, %1057) /* ty=Tensor[(4, 9, 4), float64] */;
  %1060 = cos(%1058) /* ty=Tensor[(4, 9, 4), float64] */;
  (%1059, %1060)
}

def @func_5357() -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
  %1065 = fn () -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) {
    %1061 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
    %1062 = @func_3054() /* ty=(Tensor[(4, 9, 4), float64],) */;
    %1063 = %1061.0;
    %1064 = %1062.0;
    (%1063, %1064)
  };
  %1065() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64]) */
}

def @func_3169(%var_3167: Tensor[(364), int8], %var_3168: Tensor[(1008), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) {
  @func_3165(%var_3167, %var_3168) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(6, 6, 2), uint32], Tensor[(72), uint32], Tensor[(7, 13, 4), bool], Tensor[(52, 1), int8], Tensor[(364), int8], Tensor[(72), float32], Tensor[(1008), float64]) */
}

def @func_6034(%var_6032: Tensor[(480), float64]) -> (Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(480), float64]) {
  @func_6031(%var_6032) /* ty=(Tensor[(1008), float64], Tensor[(4, 9, 4), float64], Tensor[(480), float64], Tensor[(480), float64]) */
}

def @func_4114(%var_4112: Tensor[(1, 72), float64]) -> (Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float32], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(1, 72), float64]) {
  @func_4111(%var_4112) /* ty=(Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float32], Tensor[(4, 9, 4), float64], Tensor[(4, 9, 4), float64], Tensor[(3, 4, 6), float64], Tensor[(1, 72), float64]) */
}

def @func_8029() -> (Tensor[(4, 9, 4), float64],) {
  %1068 = fn () -> (Tensor[(4, 9, 4), float64],) {
    %1066 = @func_5688() /* ty=(Tensor[(4, 9, 4), float64], Tensor[(52), int64]) */;
    %1067 = %1066.0;
    (%1067,)
  };
  %1068() /* ty=(Tensor[(4, 9, 4), float64],) */
}

def @func_489(%var_486: uint8, %var_487: Tensor[(72), float32], %var_488: Tensor[(52), int8]) -> (Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) {
  @func_484(%var_486, %var_487, %var_488) /* ty=(Tensor[(11, 9, 6), uint8], Tensor[(52, 1), int8], Tensor[(72), float32], Tensor[(52), int8], Tensor[(91, 4), int8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen499/build/output.py:2968: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen499/build/output.py", line 2973, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(84) tvmgen_default_fused_tan_kernel0(double* __restrict__ T_tan, double* __restrict__ placeholder) {
  T_tan[(((int)threadIdx.x))] = tan(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


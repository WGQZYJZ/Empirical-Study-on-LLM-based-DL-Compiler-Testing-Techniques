import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_152 = relay.const([[[5.308305,-7.916062,-9.929919,4.964693,8.855565],[-1.035908,-9.916183,7.546813,4.351376,-0.167152],[2.625082,-3.288207,8.781484,-1.099380,3.742509],[1.623598,2.517268,8.318843,-3.741747,4.324964],[0.800727,2.121093,-5.758218,8.230161,1.232250],[2.339754,-8.255023,-8.986549,-5.809220,-8.320479],[-0.596231,-4.385824,9.191380,4.075968,-1.993468],[-2.079956,-8.241092,8.307364,-1.462151,3.638495],[0.630098,7.557422,-0.812108,5.297140,-2.049398],[-2.449409,9.809779,-5.340482,-5.889486,-0.329670],[-2.005274,-7.570235,3.729665,-2.128594,-8.465607],[1.910897,-0.287687,-5.483441,7.406743,-6.047584]],[[5.049087,-8.840179,1.746028,-2.915187,6.040089],[1.827287,9.857861,-5.946715,4.951748,-8.400785],[-5.252752,5.886802,-1.026574,9.970741,-9.573709],[9.415002,9.291880,-1.588829,-0.258281,-2.867517],[-4.493084,-1.166217,-8.625277,-9.700456,4.386623],[2.382879,-6.114997,-4.745018,-6.866535,-0.410888],[3.891124,6.627761,-3.775129,-5.794206,-4.828855],[-1.292462,-5.060613,-0.749309,7.339550,-3.774563],[9.313149,1.899919,9.422575,2.278498,9.695421],[-8.785030,5.228543,2.803076,0.758083,6.015285],[2.933065,-4.674488,-9.558471,-3.828868,6.705125],[-4.795391,-7.011795,4.867823,8.828301,-8.339984]],[[-9.407470,-5.155189,-6.569989,2.466054,1.948481],[7.052727,-0.213168,-4.932337,-8.568083,1.213836],[9.433463,-0.657611,4.259443,5.288119,-6.427353],[1.079097,-1.355769,4.872672,-6.249015,2.386867],[9.041496,-4.339440,-0.205629,-4.631886,9.093144],[3.161938,5.810182,-3.415024,3.834509,7.646476],[7.593003,-1.103928,-4.993604,-4.199977,1.560298],[-3.784895,-0.075274,-2.797834,3.128010,4.611324],[-3.109032,-2.896253,2.410302,-6.320746,-8.338475],[-9.806484,1.936829,-3.797694,-7.469898,-7.989487],[-1.348191,-5.174333,8.393973,9.895483,8.008224],[4.038198,0.004894,7.960314,-8.420679,6.864144]],[[-5.741565,0.888319,2.748616,1.781660,-5.366462],[8.630336,9.343394,-9.178580,-8.908995,9.280725],[-4.847278,-1.590692,-8.025605,-2.838066,6.709358],[-0.543998,-3.825265,5.809503,3.906212,0.295673],[-5.267901,-7.010931,3.349044,-4.380356,-3.630071],[7.317873,-9.945928,1.792419,-3.708319,-0.864793],[5.123566,0.933013,-2.512482,7.380047,8.244496],[6.484943,7.701418,2.930896,-9.849173,6.820936],[-9.740365,-0.542126,-1.563595,2.372703,4.774219],[-3.859318,-4.273030,-7.347807,0.035249,-2.095522],[8.992315,-4.107178,8.963576,5.477016,-1.032404],[3.622058,0.580405,0.260917,4.784947,-0.049508]],[[-1.310410,1.057169,-9.687798,9.728174,-7.697703],[1.380559,-1.620822,-9.993731,7.815447,4.392568],[-9.207456,-9.881125,-8.761941,5.939640,9.512094],[3.342176,0.267641,-6.364384,-5.652381,6.777230],[-7.780944,-4.732424,-7.849497,-0.216406,-9.176521],[2.855257,-5.106728,5.294717,-2.822413,-9.810306],[-4.822710,2.605945,7.631962,-5.292300,-9.426203],[-2.763913,-3.852244,1.897014,5.575503,-9.774636],[8.108703,3.334433,-8.928230,6.804851,2.903093],[-8.785231,4.223902,3.681767,9.226511,-8.108347],[6.552417,-0.976105,-4.792304,5.267863,-4.299688],[2.969371,0.442929,9.669967,2.780223,-4.969460]],[[7.856877,9.034434,3.295746,7.965725,-5.284753],[-2.337164,-9.559860,8.478883,-1.984217,-6.204576],[-3.162207,-7.522265,-8.114206,2.001508,-4.862925],[9.043361,-6.533470,-6.594494,2.093456,4.833838],[-8.238768,-9.900859,-6.516170,8.206743,-7.722494],[0.708704,2.960778,-5.791757,-7.098435,-2.004937],[-1.319943,-6.486524,-4.466659,-3.212248,-0.891957],[3.828447,2.887534,9.369296,5.118954,-9.921726],[-5.473483,-0.867479,6.390451,-9.285329,3.188041],[8.628443,-4.452096,-2.516180,-9.663675,-8.415045],[-5.697629,6.962410,9.261511,-5.101616,4.286191],[-2.390228,-5.975121,-5.127055,-0.284058,7.742054]],[[2.832967,2.627557,-6.909908,-3.159851,-0.590688],[5.516043,-0.851021,-8.508622,7.893495,-2.571871],[0.740655,5.488630,8.581771,8.584805,-0.355506],[9.896112,8.076432,3.051227,2.281341,8.873291],[-7.927045,-3.922854,3.681565,6.275191,7.244477],[-4.552729,-5.143165,6.770279,4.520813,8.682806],[9.090177,5.557876,3.502529,1.954054,-6.134981],[-0.641493,9.995448,6.894699,4.678687,-1.744177],[-3.886508,9.215909,-6.393872,-6.245834,-6.639689],[4.879122,1.972798,-5.493401,0.497931,8.049475],[-0.014521,-9.581315,-1.270280,4.607749,-9.896887],[8.221807,-5.774089,-4.866723,1.251008,-4.355394]],[[-9.728140,7.259582,-4.013393,6.242261,5.115713],[9.712076,-1.608022,-1.923707,3.146990,1.671951],[2.728072,-1.915401,4.419815,-3.697519,5.763589],[-8.167602,-4.702983,9.151018,-8.227700,-6.131347],[2.586543,3.551117,3.016592,4.118312,3.673245],[5.577941,7.598901,-6.817291,-1.872733,7.012866],[1.536690,2.161049,0.645853,-4.314961,8.426811],[-8.293826,-2.566173,1.939441,6.611506,-6.372199],[6.124459,0.312239,2.843294,0.939545,-7.504370],[-9.618899,9.146440,3.947416,-8.310227,-3.771703],[-2.378368,8.088815,-8.533185,-6.559149,3.822856],[0.046777,-8.971147,1.624103,-1.986377,2.976240]]], dtype = "float32")#candidate|152|(8, 12, 5)|const|float32
uop_153 = relay.acos(const_152.astype('float32')) # shape=(8, 12, 5)
var_160 = relay.var("var_160", dtype = "float32", shape = (8, 12, 5))#candidate|160|(8, 12, 5)|var|float32
bop_161 = relay.floor_divide(uop_153.astype('float64'), relay.reshape(var_160.astype('float64'), relay.shape_of(uop_153))) # shape=(8, 12, 5)
var_171 = relay.var("var_171", dtype = "float32", shape = (8, 12, 5))#candidate|171|(8, 12, 5)|var|float32
bop_172 = relay.logical_xor(uop_153.astype('uint64'), relay.reshape(var_171.astype('uint64'), relay.shape_of(uop_153))) # shape=(8, 12, 5)
uop_186 = relay.log10(const_152.astype('float32')) # shape=(8, 12, 5)
uop_191 = relay.tan(bop_161.astype('float32')) # shape=(8, 12, 5)
uop_202 = relay.sigmoid(const_152.astype('float32')) # shape=(8, 12, 5)
output = relay.Tuple([bop_172,uop_186,uop_191,uop_202,])
output2 = relay.Tuple([bop_172,uop_186,uop_191,uop_202,])
func_212 = relay.Function([var_160,var_171,], output)
mod['func_212'] = func_212
mod = relay.transform.InferType()(mod)
var_213 = relay.var("var_213", dtype = "float32", shape = (8, 12, 5))#candidate|213|(8, 12, 5)|var|float32
var_214 = relay.var("var_214", dtype = "float32", shape = (8, 12, 5))#candidate|214|(8, 12, 5)|var|float32
output = func_212(var_213,var_214,)
func_215 = relay.Function([var_213,var_214,], output)
mutated_mod['func_215'] = func_215
mutated_mod = relay.transform.InferType()(mutated_mod)
var_226 = relay.var("var_226", dtype = "float32", shape = (3, 6, 10))#candidate|226|(3, 6, 10)|var|float32
var_227 = relay.var("var_227", dtype = "float32", shape = (3, 6, 10))#candidate|227|(3, 6, 10)|var|float32
bop_228 = relay.power(var_226.astype('float32'), relay.reshape(var_227.astype('float32'), relay.shape_of(var_226))) # shape=(3, 6, 10)
func_212_call = mod.get_global_var('func_212')
func_215_call = mutated_mod.get_global_var('func_215')
const_238 = relay.const([[6.826226,-5.545527,-3.113188,-6.130541,-7.652337,-9.245532,-9.449073,9.602176,0.005760,0.377021,-1.780099,0.622329],[-0.231866,-3.237358,2.667027,-9.016689,-2.341060,4.675582,4.072621,-0.695571,-7.931584,-5.064832,0.189508,-4.824941],[-5.225590,-6.565983,-7.727381,-1.908093,1.482121,8.625812,2.643071,4.180377,8.248253,-4.568015,-7.941141,-8.128811],[-7.162648,-3.438481,-3.176214,-8.452586,-3.532356,-5.252672,-1.578698,1.197937,6.968392,-4.840658,-6.275234,-9.487866],[-1.042609,-5.418022,3.557589,7.445513,3.762087,-0.397300,-7.292101,-4.998026,5.597878,-2.478848,-9.518037,8.719111],[-5.560781,-5.946770,7.873045,-4.658403,4.702878,5.275882,4.776575,-5.503223,-0.583514,6.616993,2.106121,5.157616],[-7.042271,-0.832636,5.793272,-4.114093,9.149882,-4.548385,-9.895317,-2.072289,0.505477,-0.528514,9.145756,5.842288],[2.271138,-0.883442,5.570458,-9.595050,0.111732,-3.725895,-4.841751,3.108425,0.311045,0.647715,-4.814965,6.199015],[4.250332,9.734520,5.963624,-3.699332,8.876275,6.348466,-4.990599,-7.254720,0.936469,-8.832474,2.460372,5.981151],[3.754873,-1.115723,4.740874,1.284112,-1.775123,6.876671,4.093657,-2.217836,-1.029270,7.230052,8.184556,9.367163],[-6.547646,2.263529,8.092426,-1.466450,7.084954,-5.628667,6.462581,2.089437,-0.008684,6.207167,-8.984723,-3.452543],[0.986873,3.072291,1.947270,6.398984,-1.824733,-4.768808,-6.834116,-3.204999,8.745271,-2.954087,-6.580008,-4.619388],[-2.740423,-7.763332,-0.229831,0.408978,7.820483,-5.774148,3.767311,-8.378611,-0.750395,6.309931,-5.588606,-7.799562],[8.910631,-2.832883,-5.406153,-0.619365,-8.203814,6.490709,-8.600744,-9.626404,3.221964,-1.510577,6.054114,-8.208011],[6.302145,-1.999100,0.970103,-7.627604,7.364813,-2.132146,9.234049,-1.266991,-3.997978,-3.396566,-5.978259,-8.624861],[-1.356428,2.994945,9.917958,7.110807,3.510007,-5.306466,1.874520,7.749553,4.966878,-8.927434,2.832722,-5.295842],[7.883691,-0.979157,-0.972314,6.593944,4.497109,-0.617086,2.190000,-0.222143,6.166674,4.954307,7.918942,4.115332],[7.399896,9.842480,-9.522686,-8.303237,3.967560,4.951107,4.866699,-7.824936,2.842376,7.427548,-3.784011,-3.408284],[7.711275,-6.317548,-5.431531,2.292424,-6.389271,-6.111381,7.948570,-2.896962,3.789326,-7.096760,-2.417937,-2.403851],[5.473809,-1.520292,6.734511,7.723128,1.167429,3.520650,1.443009,1.811975,7.535612,-1.400884,-1.154036,6.372577],[-2.860350,-4.206082,-7.618795,7.540731,-1.155848,-7.980822,-6.452502,-5.375921,8.440758,6.469456,4.687049,-2.130017],[5.278604,0.926358,7.591364,0.413744,-7.721784,2.552442,-6.037421,-7.269931,-5.483020,-6.378294,-1.659286,-3.121751],[-7.845114,-0.645766,-0.904221,6.554132,8.641715,0.300468,2.310672,-2.351732,-9.636643,5.324758,-2.032600,-8.434789],[-7.234517,3.501393,0.160886,-0.258663,-5.199976,0.963487,-9.287574,-6.743744,3.930290,-2.504015,-8.387873,-0.315807],[-5.534258,-9.021555,4.657470,-6.569005,8.414624,-7.481217,5.724125,8.626629,1.145538,4.258428,6.076415,1.442365],[8.918262,9.088013,9.210062,1.252949,1.302596,-7.234188,-6.248462,-8.502273,5.053454,-4.856028,-6.727279,-1.925927],[9.686402,2.294918,3.241015,4.105960,-4.583235,-6.572047,6.750911,-8.047393,2.872418,0.173504,7.436208,-0.599050],[6.872833,5.137484,-8.345948,4.410471,9.412524,-6.145778,-9.123006,-4.547356,-8.065133,-6.085189,-4.607800,6.622533],[2.039909,7.228555,-6.209005,0.595790,-9.165168,1.231207,-8.518744,-8.947884,3.607633,-0.298445,2.261318,5.949084],[-6.733869,0.818943,-2.100541,-6.993340,8.531185,-7.412314,6.448885,0.361958,-4.897545,-7.902644,-1.330788,1.973266],[6.489585,5.701266,-7.051367,0.304225,-4.398900,7.095246,2.267135,-1.625689,8.417633,-7.873295,7.943069,-0.882181],[2.702057,-3.702653,-9.261642,1.516735,-9.513612,-6.712284,8.145441,9.641206,-9.940256,-5.468535,-8.030794,-3.556702],[4.212330,8.730844,0.900917,3.485146,-8.794749,-9.624832,7.447216,3.456188,-4.822335,-6.134691,1.452990,7.269247],[-9.823932,8.823661,-0.892156,-6.583878,-2.531940,-4.118045,0.193223,-6.053921,-7.203655,-4.429447,3.796205,5.129434],[1.336813,9.652866,4.105051,-6.065877,5.905461,-1.370242,-9.997529,6.455152,-1.010778,-8.232780,2.801291,-5.767701],[4.635731,5.659682,-4.385137,-7.069081,-5.906437,-1.980034,-0.320813,8.770121,-5.184228,6.715594,-4.753588,0.787636],[8.323479,1.304682,1.818408,-5.683756,-5.561622,1.501886,-0.483588,6.041180,4.729742,-8.066423,-0.164403,5.472198],[3.379534,8.667118,-8.800367,5.974196,-7.982797,-9.430877,-0.243263,-3.518010,8.248215,3.332323,6.553073,-3.122197],[-0.111817,-0.976585,8.547038,3.533509,3.971340,-9.514521,1.359819,6.641188,-1.228837,6.618051,-5.859644,-6.028532],[9.670217,9.672361,-9.237466,-9.049880,-5.111067,0.395412,-2.234528,-3.993833,-0.360973,9.960704,-3.608036,4.213866]], dtype = "float32")#candidate|238|(40, 12)|const|float32
call_237 = relay.TupleGetItem(func_212_call(relay.reshape(const_238.astype('float32'), [8, 12, 5]), relay.reshape(const_238.astype('float32'), [8, 12, 5]), ), 0)
call_239 = relay.TupleGetItem(func_215_call(relay.reshape(const_238.astype('float32'), [8, 12, 5]), relay.reshape(const_238.astype('float32'), [8, 12, 5]), ), 0)
uop_245 = relay.sigmoid(var_226.astype('float32')) # shape=(3, 6, 10)
output = relay.Tuple([bop_228,call_237,const_238,uop_245,])
output2 = relay.Tuple([bop_228,call_239,const_238,uop_245,])
func_251 = relay.Function([var_226,var_227,], output)
mod['func_251'] = func_251
mod = relay.transform.InferType()(mod)
mutated_mod['func_251'] = func_251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_251_call = mutated_mod.get_global_var('func_251')
var_253 = relay.var("var_253", dtype = "float32", shape = (3, 6, 10))#candidate|253|(3, 6, 10)|var|float32
var_254 = relay.var("var_254", dtype = "float32", shape = (3, 6, 10))#candidate|254|(3, 6, 10)|var|float32
call_252 = func_251_call(var_253,var_254,)
output = call_252
func_255 = relay.Function([var_253,var_254,], output)
mutated_mod['func_255'] = func_255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_534 = relay.var("var_534", dtype = "float64", shape = (14, 3, 11))#candidate|534|(14, 3, 11)|var|float64
uop_535 = relay.rsqrt(var_534.astype('float64')) # shape=(14, 3, 11)
bop_537 = relay.not_equal(uop_535.astype('bool'), relay.reshape(var_534.astype('bool'), relay.shape_of(uop_535))) # shape=(14, 3, 11)
func_212_call = mod.get_global_var('func_212')
func_215_call = mutated_mod.get_global_var('func_215')
const_551 = relay.const([[-4.198125,6.379196,1.470978,-1.382539],[1.280676,-0.697778,-9.260876,-5.816201],[1.179706,-7.724704,3.001612,3.984431],[5.527595,-5.994735,-7.317717,3.448083],[-1.722090,-8.382202,-6.362334,6.153885],[-3.496958,-2.608166,7.103920,2.214619],[9.866542,-9.745345,0.195764,7.041086],[-5.510194,-8.700732,-2.734222,0.659175],[0.632900,6.893571,2.214589,3.693283],[-4.438237,-4.394710,-3.092043,0.846255],[-3.658609,8.030565,6.999245,-7.920305],[-5.379619,-7.335015,-8.644742,3.208261],[8.060443,-3.214055,0.001283,9.739044],[7.899461,4.033665,7.507709,1.333117],[-4.909025,0.425249,-4.993478,-0.071515],[0.661019,6.686886,-3.665617,1.943074],[9.261170,-8.132468,9.908887,2.980263],[-4.278447,-8.421159,0.752961,2.834979],[-3.822320,1.908324,-8.555515,-6.822868],[5.669141,-8.643568,-6.508096,1.664122],[8.774020,1.643414,5.932557,7.236745],[6.144999,9.627157,5.111757,0.551297],[-7.968410,-5.282237,-5.219267,-5.285870],[5.305929,5.581470,-4.436012,2.515496],[9.421775,-6.051228,1.978571,-2.150614],[5.034816,8.054922,-1.138770,3.477240],[-9.809559,7.127413,-1.990724,-2.186239],[-3.104897,4.472423,-5.759941,-3.099903],[1.889874,8.420313,-5.509272,-4.353669],[5.435717,3.522251,-3.122489,-4.254521],[-1.071223,4.222449,3.232965,-3.278704],[3.154501,-5.291738,3.685324,7.806123],[1.712293,0.303471,-4.519050,-6.016888],[-3.644185,0.864724,-5.303237,7.133535],[-9.118518,9.560592,-0.113903,0.061945],[5.638205,4.639574,9.063113,-6.766576],[4.173871,-6.315680,4.705851,-0.425654],[-1.357250,-7.740311,4.833905,-4.286140],[-5.538358,-9.707889,2.473833,-5.068873],[0.660229,5.437263,6.264942,-1.300854],[-0.554245,-3.859638,0.132788,3.203181],[3.070902,-9.187932,2.456773,-4.258032],[-3.917508,-7.729356,-0.264036,-1.923542],[-8.442091,-8.816805,3.555704,8.992945],[-9.846357,8.977946,-8.353487,1.879385],[-7.186862,-1.055360,-5.673896,5.416305],[9.131375,2.889417,4.500271,-9.041469],[9.373941,3.565411,6.169241,-6.421817],[-3.786361,9.630945,-0.798623,-7.655911],[-3.032181,-4.812826,3.341816,1.360054],[2.852421,8.931000,-7.162058,7.081647],[-0.971757,7.754944,6.085791,6.858677],[8.695048,-7.389656,-1.019235,2.764136],[4.371846,1.659292,7.575789,-6.581625],[0.691483,7.002785,0.831728,-3.711326],[9.871478,7.213412,5.910206,5.098116],[3.334242,0.925631,-4.549932,-3.559140],[-8.990615,7.973760,-2.527901,9.797550],[8.712591,6.973255,7.593100,-4.159254],[3.726542,5.295493,8.907678,-5.252083],[-7.062708,-6.026845,-0.950239,-2.345948],[-3.903740,-0.619129,1.189094,7.165945],[8.126205,1.219086,-1.952844,8.075049],[1.988666,-0.293596,1.141242,1.331933],[-1.532090,5.972296,-5.540725,-4.955665],[0.214355,1.724992,-9.432943,9.256255],[-5.942754,-5.966910,-6.593616,-1.995602],[-4.817744,-5.460601,8.942259,8.058060],[2.534183,-1.452422,-2.838413,2.775802],[-2.467736,0.164913,2.177411,-8.854460],[9.655788,-7.555464,-9.626613,-7.993628],[3.490016,2.214909,-4.307841,6.515476],[4.221436,-1.151946,-4.480312,5.916226],[-7.619605,4.014864,5.262231,7.845461],[-0.302114,-6.784360,1.776261,1.674232],[-3.363010,7.183105,3.033813,-0.277243],[7.831814,-8.788187,-5.065442,-4.826722],[-5.993710,-5.239525,0.726322,3.226782],[1.664011,-8.128757,-4.009541,-1.584226],[-4.746886,4.424488,-8.717060,-0.257749],[-4.644045,6.136041,-0.754934,-1.064687],[2.691294,-6.664492,-4.902759,-5.082354],[-8.416936,-8.641913,-9.646885,1.608089],[2.704977,-4.617952,-2.176323,2.842694],[4.683057,-9.916933,-6.277782,3.009299],[0.401125,-3.403479,1.472463,-1.950309],[4.801916,-5.058915,9.241417,9.180142],[-7.048807,-6.529424,-2.399386,-4.101858],[-1.047601,-5.203093,4.507851,-5.513062],[8.421725,-5.477559,9.715860,-4.133294],[-3.264298,-4.116760,-2.352107,-5.613850],[8.106585,-9.325685,-2.079224,1.535085],[4.333401,0.080949,1.673093,7.703205],[-7.355081,5.510319,-2.734838,-6.970761],[-3.744346,-4.288787,-7.288252,-6.989215],[6.587764,-7.649834,9.507419,-0.242799],[1.573341,9.658800,1.629384,2.776779],[-8.209127,8.070820,3.381891,8.057024],[-6.672806,-8.501487,-4.438784,-8.837104],[3.963953,5.874184,1.272406,3.810509],[4.811334,8.843019,-5.955219,-1.904350],[-3.754489,7.876720,-9.716014,4.965229],[2.523754,4.879119,-3.533755,4.084928],[-8.546798,-4.258122,9.156613,-9.686487],[-3.580070,8.558363,7.910478,-3.545060],[-4.940328,2.478169,-9.816664,9.319088],[-9.116857,-3.064394,2.271610,2.362980],[-9.800038,3.179624,4.514325,4.460035],[4.822272,-6.784514,-3.790740,-8.613056],[6.504187,6.975401,7.806855,6.873677],[-2.365090,-4.950323,7.192853,5.485971],[-8.413408,9.418845,4.743637,0.536078],[-0.593789,6.243480,-9.358826,7.554756],[5.381334,-1.753123,6.311690,-6.605942],[5.437286,6.528950,-3.606515,-1.754840],[2.475271,6.184488,-9.512378,-3.374706],[-0.691531,-1.639247,8.357287,-4.677670],[-7.848769,9.764238,-5.915735,9.720148],[3.182388,1.503707,-2.052327,-1.458865],[0.355910,-4.989682,-3.463846,-8.604016]], dtype = "float32")#candidate|551|(120, 4)|const|float32
call_550 = relay.TupleGetItem(func_212_call(relay.reshape(const_551.astype('float32'), [8, 12, 5]), relay.reshape(const_551.astype('float32'), [8, 12, 5]), ), 0)
call_552 = relay.TupleGetItem(func_215_call(relay.reshape(const_551.astype('float32'), [8, 12, 5]), relay.reshape(const_551.astype('float32'), [8, 12, 5]), ), 0)
output = relay.Tuple([bop_537,call_550,const_551,])
output2 = relay.Tuple([bop_537,call_552,const_551,])
func_561 = relay.Function([var_534,], output)
mod['func_561'] = func_561
mod = relay.transform.InferType()(mod)
mutated_mod['func_561'] = func_561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_562 = relay.var("var_562", dtype = "float64", shape = (14, 3, 11))#candidate|562|(14, 3, 11)|var|float64
func_561_call = mutated_mod.get_global_var('func_561')
call_563 = func_561_call(var_562)
output = call_563
func_564 = relay.Function([var_562], output)
mutated_mod['func_564'] = func_564
mutated_mod = relay.transform.InferType()(mutated_mod)
var_838 = relay.var("var_838", dtype = "float64", shape = ())#candidate|838|()|var|float64
const_839 = relay.const([[[9.252998,-2.364375,6.385461,-3.669282,4.712702,2.991171,-5.413393],[-3.607509,-7.376531,6.478808,9.832079,-8.743271,-8.573971,9.410581],[2.347991,-2.061600,-9.169350,9.887638,-5.521592,4.620312,-9.329827],[4.554156,-1.217928,2.562118,1.196134,2.979806,-7.039793,9.252335],[-3.568266,-2.775415,-1.007813,-2.158845,-0.819250,-8.359954,6.642291],[-4.551828,-9.931919,2.468766,1.673333,1.198326,4.981584,1.327653],[-0.957080,5.855931,-6.997057,-5.366946,-7.076330,7.181920,-0.549617],[4.153875,2.027056,-9.359892,6.650239,-4.174934,-9.265820,-8.402713],[2.414530,8.931630,-2.121538,-7.185876,1.288158,6.144207,-3.289560],[-5.605936,-0.810961,-0.115843,8.991949,0.781984,-9.654169,2.754159]],[[4.047651,5.804836,0.760045,-0.549888,5.703531,-2.636355,7.609483],[-2.378023,7.212821,2.990189,-2.154752,5.330070,-3.952553,6.929595],[5.554944,6.677789,-6.959111,5.324422,8.006353,2.552937,-6.038138],[3.526868,-8.995326,8.069643,-1.735596,8.306412,9.084135,-3.861825],[-0.547390,-5.875768,-6.866185,-1.162478,-7.466968,5.155057,-0.215135],[-9.520807,-3.487855,-6.455474,9.611742,-0.651430,-5.869185,7.298957],[2.370680,0.108907,0.817027,1.630677,2.227115,-9.395714,1.190427],[-3.761535,-4.759772,-9.072994,-3.500846,3.186294,0.614320,-6.174689],[-3.790839,8.926265,6.767354,6.867300,-6.211121,5.932115,-7.016872],[-7.161083,8.166652,1.948059,2.000506,-1.097271,3.948945,-0.629452]],[[-3.563048,-0.769495,-7.230088,-5.831945,9.617904,-7.490921,-4.635827],[0.438978,8.718795,-9.609883,-0.622026,-3.836215,1.841688,-4.042117],[1.092122,5.457901,4.847742,-8.989958,4.188987,0.248990,-1.815691],[5.423600,7.693048,1.252965,-1.247677,1.246099,-9.004698,-3.002055],[9.583249,-5.369540,8.045549,-9.709791,6.006705,-6.465213,7.530778],[2.100433,4.617115,-8.640607,-4.978609,5.071610,8.927588,3.703680],[7.729365,1.767727,-0.854908,5.386895,-7.890307,-4.531366,-0.461012],[-0.482668,8.647442,5.177530,-5.902159,7.669179,6.027999,3.912525],[-8.837254,-9.039152,1.310228,-6.556273,8.359520,6.280337,6.426922],[-0.508241,5.726722,9.867246,-2.558477,9.895547,-0.638039,1.399879]],[[-1.597710,-8.460414,-5.542125,-9.669547,-4.875368,0.249060,-8.226408],[2.285996,6.449948,1.436283,0.500754,6.973926,0.962564,-2.876690],[2.622300,4.047743,3.406335,-2.389123,9.467794,7.251373,5.864152],[6.188109,1.852359,2.668456,-0.181701,9.002255,5.699584,-5.215113],[-5.484264,-3.827395,-4.810800,7.879380,8.103247,1.439681,-0.867342],[4.092675,-6.515336,6.754059,9.228104,-6.251284,3.369802,4.378978],[-1.079364,0.715637,2.199413,-8.455043,6.068538,3.354753,-6.213274],[9.172094,9.956977,-6.531083,-3.289917,4.687510,9.792010,5.683355],[-8.575084,5.957091,-4.783244,9.457740,9.581952,-2.388029,5.950696],[2.326913,-9.068577,-1.146472,6.966362,7.686208,-5.921644,-2.293633]],[[-9.876307,-6.033325,-3.080587,1.624228,-2.724725,-0.290221,3.458713],[-2.542183,-4.961794,-9.165267,1.803078,-6.540019,2.626085,-8.002803],[8.636616,2.655286,-7.214028,-6.844697,-4.020062,-8.611663,-3.765758],[-6.340201,6.882062,-5.258110,-0.011069,-5.689526,4.373883,7.160419],[7.460235,-8.928588,-4.650535,-7.246846,7.527798,6.900813,5.282185],[-0.117622,5.372048,7.659670,1.216021,-6.459428,-5.258487,7.008239],[-7.517106,-3.954223,-8.592966,-2.406564,1.255249,-8.186635,5.621084],[-6.066833,3.590957,-1.889778,9.248386,4.095419,9.010416,-4.057008],[-6.250064,7.978556,-9.354789,-0.228005,-0.442325,8.182818,-5.418470],[-2.507687,-9.722946,-9.734089,9.426086,-1.721956,-3.812066,8.310971]]], dtype = "float64")#candidate|839|(5, 10, 7)|const|float64
bop_840 = relay.add(var_838.astype('float64'), const_839.astype('float64')) # shape=(5, 10, 7)
bop_843 = relay.not_equal(bop_840.astype('bool'), var_838.astype('bool')) # shape=(5, 10, 7)
output = bop_843
output2 = bop_843
func_846 = relay.Function([var_838,], output)
mod['func_846'] = func_846
mod = relay.transform.InferType()(mod)
mutated_mod['func_846'] = func_846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_847 = relay.var("var_847", dtype = "float64", shape = ())#candidate|847|()|var|float64
func_846_call = mutated_mod.get_global_var('func_846')
call_848 = func_846_call(var_847)
output = call_848
func_849 = relay.Function([var_847], output)
mutated_mod['func_849'] = func_849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_983 = relay.var("var_983", dtype = "float32", shape = (7, 8, 15))#candidate|983|(7, 8, 15)|var|float32
uop_984 = relay.log(var_983.astype('float32')) # shape=(7, 8, 15)
func_846_call = mod.get_global_var('func_846')
func_849_call = mutated_mod.get_global_var('func_849')
var_994 = relay.var("var_994", dtype = "float64", shape = ())#candidate|994|()|var|float64
call_993 = func_846_call(relay.reshape(var_994.astype('float64'), []))
call_995 = func_846_call(relay.reshape(var_994.astype('float64'), []))
output = relay.Tuple([uop_984,call_993,var_994,])
output2 = relay.Tuple([uop_984,call_995,var_994,])
func_1007 = relay.Function([var_983,var_994,], output)
mod['func_1007'] = func_1007
mod = relay.transform.InferType()(mod)
mutated_mod['func_1007'] = func_1007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1007_call = mutated_mod.get_global_var('func_1007')
var_1009 = relay.var("var_1009", dtype = "float32", shape = (7, 8, 15))#candidate|1009|(7, 8, 15)|var|float32
var_1010 = relay.var("var_1010", dtype = "float64", shape = ())#candidate|1010|()|var|float64
call_1008 = func_1007_call(var_1009,var_1010,)
output = call_1008
func_1011 = relay.Function([var_1009,var_1010,], output)
mutated_mod['func_1011'] = func_1011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1025 = relay.var("var_1025", dtype = "int64", shape = ())#candidate|1025|()|var|int64
var_1026 = relay.var("var_1026", dtype = "int64", shape = (12, 2, 13))#candidate|1026|(12, 2, 13)|var|int64
bop_1027 = relay.bitwise_xor(var_1025.astype('int64'), var_1026.astype('int64')) # shape=(12, 2, 13)
output = relay.Tuple([bop_1027,])
output2 = relay.Tuple([bop_1027,])
func_1030 = relay.Function([var_1025,var_1026,], output)
mod['func_1030'] = func_1030
mod = relay.transform.InferType()(mod)
var_1031 = relay.var("var_1031", dtype = "int64", shape = ())#candidate|1031|()|var|int64
var_1032 = relay.var("var_1032", dtype = "int64", shape = (12, 2, 13))#candidate|1032|(12, 2, 13)|var|int64
output = func_1030(var_1031,var_1032,)
func_1033 = relay.Function([var_1031,var_1032,], output)
mutated_mod['func_1033'] = func_1033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1077 = relay.var("var_1077", dtype = "float64", shape = (10, 9, 4))#candidate|1077|(10, 9, 4)|var|float64
uop_1078 = relay.sin(var_1077.astype('float64')) # shape=(10, 9, 4)
uop_1090 = relay.sinh(var_1077.astype('float32')) # shape=(10, 9, 4)
output = relay.Tuple([uop_1078,uop_1090,])
output2 = relay.Tuple([uop_1078,uop_1090,])
func_1101 = relay.Function([var_1077,], output)
mod['func_1101'] = func_1101
mod = relay.transform.InferType()(mod)
mutated_mod['func_1101'] = func_1101
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1102 = relay.var("var_1102", dtype = "float64", shape = (10, 9, 4))#candidate|1102|(10, 9, 4)|var|float64
func_1101_call = mutated_mod.get_global_var('func_1101')
call_1103 = func_1101_call(var_1102)
output = call_1103
func_1104 = relay.Function([var_1102], output)
mutated_mod['func_1104'] = func_1104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1200 = relay.var("var_1200", dtype = "int64", shape = (2, 5, 1))#candidate|1200|(2, 5, 1)|var|int64
var_1201 = relay.var("var_1201", dtype = "int64", shape = (2, 5, 6))#candidate|1201|(2, 5, 6)|var|int64
bop_1202 = relay.bitwise_xor(var_1200.astype('int64'), var_1201.astype('int64')) # shape=(2, 5, 6)
bop_1211 = relay.logical_xor(bop_1202.astype('uint8'), relay.reshape(var_1201.astype('uint8'), relay.shape_of(bop_1202))) # shape=(2, 5, 6)
output = bop_1211
output2 = bop_1211
func_1216 = relay.Function([var_1200,var_1201,], output)
mod['func_1216'] = func_1216
mod = relay.transform.InferType()(mod)
var_1217 = relay.var("var_1217", dtype = "int64", shape = (2, 5, 1))#candidate|1217|(2, 5, 1)|var|int64
var_1218 = relay.var("var_1218", dtype = "int64", shape = (2, 5, 6))#candidate|1218|(2, 5, 6)|var|int64
output = func_1216(var_1217,var_1218,)
func_1219 = relay.Function([var_1217,var_1218,], output)
mutated_mod['func_1219'] = func_1219
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1354 = relay.var("var_1354", dtype = "float32", shape = (4, 5, 12))#candidate|1354|(4, 5, 12)|var|float32
uop_1355 = relay.asin(var_1354.astype('float32')) # shape=(4, 5, 12)
uop_1357 = relay.erf(var_1354.astype('float32')) # shape=(4, 5, 12)
output = relay.Tuple([uop_1355,uop_1357,])
output2 = relay.Tuple([uop_1355,uop_1357,])
func_1359 = relay.Function([var_1354,], output)
mod['func_1359'] = func_1359
mod = relay.transform.InferType()(mod)
mutated_mod['func_1359'] = func_1359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1360 = relay.var("var_1360", dtype = "float32", shape = (4, 5, 12))#candidate|1360|(4, 5, 12)|var|float32
func_1359_call = mutated_mod.get_global_var('func_1359')
call_1361 = func_1359_call(var_1360)
output = call_1361
func_1362 = relay.Function([var_1360], output)
mutated_mod['func_1362'] = func_1362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1439 = relay.var("var_1439", dtype = "uint8", shape = (10, 15, 11))#candidate|1439|(10, 15, 11)|var|uint8
var_1440 = relay.var("var_1440", dtype = "uint8", shape = (10, 15, 11))#candidate|1440|(10, 15, 11)|var|uint8
bop_1441 = relay.bitwise_xor(var_1439.astype('uint8'), relay.reshape(var_1440.astype('uint8'), relay.shape_of(var_1439))) # shape=(10, 15, 11)
bop_1446 = relay.mod(var_1440.astype('float32'), relay.reshape(var_1439.astype('float32'), relay.shape_of(var_1440))) # shape=(10, 15, 11)
output = relay.Tuple([bop_1441,bop_1446,])
output2 = relay.Tuple([bop_1441,bop_1446,])
func_1456 = relay.Function([var_1439,var_1440,], output)
mod['func_1456'] = func_1456
mod = relay.transform.InferType()(mod)
mutated_mod['func_1456'] = func_1456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1456_call = mutated_mod.get_global_var('func_1456')
var_1458 = relay.var("var_1458", dtype = "uint8", shape = (10, 15, 11))#candidate|1458|(10, 15, 11)|var|uint8
var_1459 = relay.var("var_1459", dtype = "uint8", shape = (10, 15, 11))#candidate|1459|(10, 15, 11)|var|uint8
call_1457 = func_1456_call(var_1458,var_1459,)
output = call_1457
func_1460 = relay.Function([var_1458,var_1459,], output)
mutated_mod['func_1460'] = func_1460
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1481 = relay.constdtype = "float64")#candidate|1481|(14, 11, 12)|const|float64
uop_1482 = relay.sinh(const_1481.astype('float64')) # shape=(14, 11, 12)
uop_1490 = relay.rsqrt(const_1481.astype('float64')) # shape=(14, 11, 12)
func_846_call = mod.get_global_var('func_846')
func_849_call = mutated_mod.get_global_var('func_849')
const_1497 = relay.const(-1.475779, dtype = "float64")#candidate|1497|()|const|float64
call_1496 = func_846_call(relay.reshape(const_1497.astype('float64'), []))
call_1498 = func_846_call(relay.reshape(const_1497.astype('float64'), []))
output = relay.Tuple([uop_1482,uop_1490,call_1496,const_1497,])
output2 = relay.Tuple([uop_1482,uop_1490,call_1498,const_1497,])
func_1499 = relay.Function([], output)
mod['func_1499'] = func_1499
mod = relay.transform.InferType()(mod)
output = func_1499()
func_1500 = relay.Function([], output)
mutated_mod['func_1500'] = func_1500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_1523 = relay.TupleGetItem(func_1499_call(), 3)
call_1524 = relay.TupleGetItem(func_1500_call(), 3)
output = relay.Tuple([call_1523,])
output2 = relay.Tuple([call_1524,])
func_1540 = relay.Function([], output)
mod['func_1540'] = func_1540
mod = relay.transform.InferType()(mod)
output = func_1540()
func_1541 = relay.Function([], output)
mutated_mod['func_1541'] = func_1541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1540_call = mod.get_global_var('func_1540')
func_1541_call = mutated_mod.get_global_var('func_1541')
call_1605 = relay.TupleGetItem(func_1540_call(), 0)
call_1606 = relay.TupleGetItem(func_1541_call(), 0)
func_1007_call = mod.get_global_var('func_1007')
func_1011_call = mutated_mod.get_global_var('func_1011')
const_1611 = relay.const([2.508915,-3.655007,-7.814437,1.842946,-4.620285,-3.164810,3.806368,-1.596344,-4.816540,-2.474160,-1.386164,4.529660,4.178153,-4.486067,2.434493,2.083019,5.221612,8.975023,7.408908,-6.581237,6.865458,5.534379,9.027922,-6.234287,-0.456335,6.979417,9.577835,-8.495122,-3.151196,-8.815170,2.998737,-3.724647,8.462543,-3.428496,0.729175,-2.565353,6.399462,2.354035,3.379160,-5.750566,-6.437143,-0.609939,-0.617217,-5.252121,3.073425,5.714436,-6.636667,9.575441,7.191984,-3.047783,3.163765,4.516369,-0.099209,1.803470,-8.765236,5.490366,9.160710,7.828186,6.688257,-0.753081,-1.672705,3.261866,-6.488952,-7.218368,-9.162881,-8.658250,2.069049,5.262913,-0.437238,2.252100,-0.865065,1.646233,-1.389438,-4.227935,-1.441490,-3.171534,-8.862009,5.696311,3.598956,-5.711600,-2.080904,4.292173,-6.023280,5.512541,5.553225,0.464317,-8.995600,-6.688822,2.512745,-9.230972,5.338603,-2.894858,-1.717613,-8.829762,3.939144,6.817495,6.422766,0.547012,2.320169,-2.829131,7.701801,0.518548,-9.496150,-1.337836,-6.808293,6.100580,-7.418627,2.200240,5.320002,-3.353836,-8.796952,-2.845873,-3.490623,2.587507,4.488779,-0.459067,3.135337,-7.249119,1.526473,-7.497284,2.833631,-7.820643,2.890300,-4.865007,4.724868,-0.695803,-2.368290,-9.130300,-8.813406,0.020874,4.261630,6.975477,7.461125,5.683937,-8.755894,-8.228065,3.633287,8.955722,-5.491970,-1.688130,-4.551353,3.708145,4.035488,2.280548,7.781730,0.790189,7.352626,5.462577,-7.338735,5.211521,-0.097895,-5.400105,-7.043319,5.651239,6.532307,5.525923,-4.103079,7.983323,-4.131692,5.820446,2.630308,-9.288437,2.950054,1.329487,-7.954726,6.378791,-6.192552,4.897335,9.035253,4.030292,-1.994848,9.800966,9.067667,-7.132310,4.356197,1.020513,3.030148,8.197090,3.443395,-7.127292,-8.643107,0.501569,-7.138155,6.060844,4.262357,-1.133143,3.145169,-2.981544,-3.454888,-2.020615,-3.797602,-9.819515,-8.356615,6.725133,-2.612351,5.009044,2.617962,3.863270,1.899614,2.505276,2.134741,-8.625034,9.460386,2.085476,-2.205723,-2.109765,6.855505,-7.970874,-4.788940,-6.015061,3.044861,3.806600,-4.851563,-7.314739,-8.700250,-5.181123,-4.170046,-8.060057,9.856413,5.909428,-1.149248,-9.841073,7.992692,1.255456,-0.851258,-5.712411,9.200028,-7.814670,0.283321,-4.525893,7.526264,2.978969,0.896920,5.775530,-4.113961,-5.794103,-7.005232,-2.994579,6.761507,-4.470781,9.087111,-0.551622,-2.210987,-2.890200,6.315254,4.645271,6.539270,-9.847015,5.877935,2.234645,4.199313,-6.465624,6.649911,5.391273,-3.944921,-1.122803,-3.516938,-4.248673,-2.132139,-3.289672,2.149557,-2.709364,4.405586,-0.229641,-3.903695,-2.871559,8.096346,-8.641428,1.353176,-2.951143,5.233618,-7.054308,5.208606,-5.322332,9.238353,5.910014,1.373486,-5.254695,3.569486,0.942389,-9.222581,2.595364,-1.700272,-4.947410,4.551530,1.658728,-0.810494,-6.973141,-9.439868,3.034141,-8.149113,3.198778,-0.835730,-3.769135,-8.361848,7.763237,1.271099,-8.461269,-1.364573,3.548906,3.768814,-4.786144,-0.256400,3.188076,-1.812057,2.955461,-1.689200,-4.316302,-7.659095,-4.021060,-6.275422,0.659975,-6.754271,2.163628,8.884788,-6.207976,3.041605,-5.712447,7.882037,-6.198842,-9.302750,-4.602975,-9.523540,9.915470,0.653966,7.152669,8.010396,1.995955,8.812272,1.154115,-3.968988,4.040352,-3.875016,0.933541,-5.154900,8.644954,9.732276,0.119136,-3.674788,-2.150764,-2.842487,3.850110,3.300503,2.909513,3.812346,6.500482,-6.942441,2.342498,-4.193047,-2.442016,6.276002,8.487723,-7.695146,-1.712617,5.298306,-3.366808,3.331860,3.110933,8.980497,8.519423,0.661116,-1.266592,6.260081,1.874498,-1.012754,-6.350508,3.046836,0.209140,-4.350413,3.514538,-8.488080,2.446214,9.060271,-7.791820,9.441489,-3.496572,-8.014411,-3.901793,-2.982389,5.173062,-4.581615,-5.059261,7.461413,8.053539,-7.309020,5.781192,-9.997319,-0.066932,-1.466645,-0.535931,-3.350895,-4.870285,1.418867,-2.178159,-8.684445,0.991422,-6.214747,6.031665,4.863319,8.843160,5.649038,-8.096073,-3.352228,7.002311,-0.656198,-2.377619,-8.638458,8.301764,-9.498023,-5.280742,-5.256296,0.756213,1.925763,-5.085870,4.788358,-1.468839,8.395652,-4.717997,1.801942,-1.840611,-4.120757,-6.423007,2.911569,-9.719470,-6.473444,0.524798,-8.755185,5.314805,2.176350,-8.288465,2.622042,7.210474,-9.994898,-5.722432,1.245270,9.354567,-9.191396,4.803551,2.400504,1.186872,-3.912269,-0.772997,7.456146,-9.055055,-1.364093,5.833466,-1.913318,-9.482112,-7.594909,-0.665951,8.731723,9.587220,-1.561492,2.042884,7.412538,0.128846,4.242664,-8.897051,7.827662,6.262736,-0.334490,0.651380,1.803226,8.334378,2.195034,-1.365376,8.451937,-0.339929,-8.151686,1.217761,-8.944719,2.769327,9.489032,-5.450751,-2.868980,-3.995030,-5.853926,9.651560,3.008866,2.271754,2.077209,4.683313,-6.620534,-0.656741,6.006126,-9.730410,-8.140958,-1.461634,7.806115,-0.031483,-7.477854,-9.567514,-3.621228,9.120997,-6.717045,-9.405760,-4.286866,-4.211159,7.267697,3.915818,1.201081,-9.981483,2.794223,3.538637,8.997709,-8.223352,-6.944706,-9.099217,1.708447,-9.174459,3.238319,3.583164,-8.299729,-5.182772,-3.162168,-0.822225,2.603070,0.245023,2.673728,9.027209,-9.801140,4.144956,1.839579,8.230447,3.546786,-3.635073,2.166949,-7.624680,-7.300111,4.021031,-9.341861,-4.485392,9.116488,-5.230919,-8.036886,8.862401,7.855245,0.881812,7.799642,3.457957,-0.166850,7.715997,6.896302,9.266689,-7.515409,-7.250753,-6.338280,-1.365581,-9.571094,4.029664,-1.376535,6.261182,6.533441,-6.546147,-0.268083,3.148319,-4.006189,-0.616062,-4.899314,0.104993,-7.169658,5.834960,-4.887914,-1.699834,-1.996231,8.908541,6.976170,-3.779363,0.010513,0.041551,1.047942,-6.545949,1.332197,6.179416,-6.633799,-8.625592,6.777921,0.146433,2.671592,-1.536715,6.969043,-3.882122,5.227186,1.063972,-8.324250,-1.524462,1.862247,1.946605,2.081958,-3.808808,9.383824,-3.005935,-7.633140,-0.498996,-8.287263,3.892740,-8.866925,-9.186374,3.868836,-4.747181,-9.000287,6.664163,6.653215,-8.109738,6.458505,-4.137734,1.878514,6.094737,-9.052387,0.591588,1.726496,3.024477,-2.824017,1.426357,6.738720,7.528098,-3.703426,-3.550490,3.459938,-5.928554,0.367133,4.112303,9.860495,2.792654,-9.805380,-4.077640,8.466277,1.041562,1.004780,7.019598,-5.192614,-9.745839,7.437299,-5.785328,1.846112,-1.410071,6.715830,0.893285,-6.978144,2.077520,3.927429,-9.873685,0.843772,7.964629,-2.414643,5.732219,1.551744,5.650982,-5.913266,-5.377897,-5.052835,8.986244,-8.235223,6.933574,6.595588,-5.125775,-1.910997,5.089635,-6.668057,5.013705,-7.534847,-8.492017,-6.267007,-9.495738,1.953379,4.753664,2.356546,-9.789093,8.476024,3.332384,-1.509407,-2.946933,-4.956331,-6.994265,-1.066531,-7.305667,-9.947304,-9.849687,-2.569045,-3.033025,9.361646,-3.049244,-4.205309,8.202491,-1.500410,-2.256748,-3.784587,7.442030,-5.283844,3.474147,2.216565,6.153881,-8.944298,1.397266,6.966718,2.186689,1.325604,9.027272,-6.108098,7.233440,3.032641,2.560691,-9.096208,4.058583,-3.243227,1.503631,-6.402099,2.621941,4.535511,6.642876,-6.892332,9.474071,-2.989565,3.773054,5.446796,6.042468,-0.519421,-4.705330,-1.424883,-5.448712,4.838600,-4.867463,-1.608667,-5.700950,-7.383644,-6.646815,-3.460634,-1.108731,1.236828,7.755441,5.432662,4.881607,3.893074,-9.627630,2.816588,-4.748897,0.607809,-8.666407,7.296907,6.972092,9.906410,-6.404679,5.658533,-5.110216,2.159906,-7.108732,2.484419,-6.677070,1.728742,-2.351714,2.421206,5.499185,1.243408,0.430870,1.549518,4.967043,-3.850681,-0.929650,-5.728150,-8.513237,6.160998,-1.058545,8.450902,0.097181,-8.461129,4.676306,8.773251,-1.308884,4.853661,8.358735,-2.822990,2.912105,-8.406171,-4.923532,-7.828374,-4.226363,0.956730,-3.265794,-5.591126,-2.388565,1.691805,-7.072652,-5.047891,-6.789479,-4.320642,-8.075255,-8.509455,-6.416387,-9.289983,1.283555,7.411796,-6.206923,7.790336,4.682967,-8.652499,-4.709501,-7.498992,-9.390973,2.229639,-5.428105,-4.682337,-8.689002,-3.048388,-6.082874,5.154816,7.472144,4.699226,-3.826041,6.939469,-6.149478,6.038917,5.516000,-2.790071,-2.919478,-1.682523,6.850569,-4.946184,1.052186,-6.253813,9.365779,-3.482305,6.828994,-5.167828,-3.826023,3.468907,7.852257,9.930942,-5.794242,3.951271,8.135094,9.535726,-4.218377,-9.571248,-8.150518,0.081037,-7.166311,4.709416,-2.720947,6.575175,2.866223], dtype = "float32")#candidate|1611|(840,)|const|float32
call_1610 = relay.TupleGetItem(func_1007_call(relay.reshape(const_1611.astype('float32'), [7, 8, 15]), relay.reshape(call_1605.astype('float64'), []), ), 1)
call_1612 = relay.TupleGetItem(func_1011_call(relay.reshape(const_1611.astype('float32'), [7, 8, 15]), relay.reshape(call_1605.astype('float64'), []), ), 1)
output = relay.Tuple([call_1605,call_1610,const_1611,])
output2 = relay.Tuple([call_1606,call_1612,const_1611,])
func_1622 = relay.Function([], output)
mod['func_1622'] = func_1622
mod = relay.transform.InferType()(mod)
mutated_mod['func_1622'] = func_1622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1622_call = mutated_mod.get_global_var('func_1622')
call_1623 = func_1622_call()
output = call_1623
func_1624 = relay.Function([], output)
mutated_mod['func_1624'] = func_1624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_1633 = relay.TupleGetItem(func_1499_call(), 1)
call_1634 = relay.TupleGetItem(func_1500_call(), 1)
var_1641 = relay.var("var_1641", dtype = "float64", shape = (14, 11, 12))#candidate|1641|(14, 11, 12)|var|float64
bop_1642 = relay.greater_equal(call_1633.astype('bool'), relay.reshape(var_1641.astype('bool'), relay.shape_of(call_1633))) # shape=(14, 11, 12)
bop_1645 = relay.greater_equal(call_1634.astype('bool'), relay.reshape(var_1641.astype('bool'), relay.shape_of(call_1634))) # shape=(14, 11, 12)
func_1216_call = mod.get_global_var('func_1216')
func_1219_call = mutated_mod.get_global_var('func_1219')
var_1653 = relay.var("var_1653", dtype = "int64", shape = (10,))#candidate|1653|(10,)|var|int64
const_1654 = relay.const([-10,-2,-2,3,2,-5,2,3,-6,7,-2,3,-9,-1,4,-1,9,-7,8,4,-9,-6,-7,-7,8,6,-4,1,4,6,6,-2,-3,-3,-8,-10,5,2,-5,-4,4,2,-9,-3,6,2,-9,6,-5,2,5,-4,7,10,-4,4,4,-8,-8,-9], dtype = "int64")#candidate|1654|(60,)|const|int64
call_1652 = func_1216_call(relay.reshape(var_1653.astype('int64'), [2, 5, 1]), relay.reshape(const_1654.astype('int64'), [2, 5, 6]), )
call_1655 = func_1216_call(relay.reshape(var_1653.astype('int64'), [2, 5, 1]), relay.reshape(const_1654.astype('int64'), [2, 5, 6]), )
output = relay.Tuple([bop_1642,call_1652,var_1653,const_1654,])
output2 = relay.Tuple([bop_1645,call_1655,var_1653,const_1654,])
func_1658 = relay.Function([var_1641,var_1653,], output)
mod['func_1658'] = func_1658
mod = relay.transform.InferType()(mod)
var_1659 = relay.var("var_1659", dtype = "float64", shape = (14, 11, 12))#candidate|1659|(14, 11, 12)|var|float64
var_1660 = relay.var("var_1660", dtype = "int64", shape = (10,))#candidate|1660|(10,)|var|int64
output = func_1658(var_1659,var_1660,)
func_1661 = relay.Function([var_1659,var_1660,], output)
mutated_mod['func_1661'] = func_1661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_1666 = relay.TupleGetItem(func_1499_call(), 1)
call_1667 = relay.TupleGetItem(func_1500_call(), 1)
output = relay.Tuple([call_1666,])
output2 = relay.Tuple([call_1667,])
func_1672 = relay.Function([], output)
mod['func_1672'] = func_1672
mod = relay.transform.InferType()(mod)
output = func_1672()
func_1673 = relay.Function([], output)
mutated_mod['func_1673'] = func_1673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_1677 = relay.TupleGetItem(func_1672_call(), 0)
call_1678 = relay.TupleGetItem(func_1673_call(), 0)
output = relay.Tuple([call_1677,])
output2 = relay.Tuple([call_1678,])
func_1681 = relay.Function([], output)
mod['func_1681'] = func_1681
mod = relay.transform.InferType()(mod)
mutated_mod['func_1681'] = func_1681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1681_call = mutated_mod.get_global_var('func_1681')
call_1682 = func_1681_call()
output = call_1682
func_1683 = relay.Function([], output)
mutated_mod['func_1683'] = func_1683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1622_call = mod.get_global_var('func_1622')
func_1624_call = mutated_mod.get_global_var('func_1624')
call_1760 = relay.TupleGetItem(func_1622_call(), 0)
call_1761 = relay.TupleGetItem(func_1624_call(), 0)
func_1216_call = mod.get_global_var('func_1216')
func_1219_call = mutated_mod.get_global_var('func_1219')
var_1767 = relay.var("var_1767", dtype = "int64", shape = (10,))#candidate|1767|(10,)|var|int64
const_1768 = relay.const([[10,2,3,-3,10,-9,-10,6,5,-10,10,-10,-5,7,-2,4,4,-1,1,1],[4,8,2,7,1,-10,1,9,4,9,-6,9,10,7,4,3,-8,3,-4,-9],[-6,-8,-9,-4,5,-1,8,-3,10,2,-7,-1,5,-7,4,5,-5,8,-2,-8]], dtype = "int64")#candidate|1768|(3, 20)|const|int64
call_1766 = func_1216_call(relay.reshape(var_1767.astype('int64'), [2, 5, 1]), relay.reshape(const_1768.astype('int64'), [2, 5, 6]), )
call_1769 = func_1216_call(relay.reshape(var_1767.astype('int64'), [2, 5, 1]), relay.reshape(const_1768.astype('int64'), [2, 5, 6]), )
output = relay.Tuple([call_1760,call_1766,var_1767,const_1768,])
output2 = relay.Tuple([call_1761,call_1769,var_1767,const_1768,])
func_1789 = relay.Function([var_1767,], output)
mod['func_1789'] = func_1789
mod = relay.transform.InferType()(mod)
var_1790 = relay.var("var_1790", dtype = "int64", shape = (10,))#candidate|1790|(10,)|var|int64
output = func_1789(var_1790)
func_1791 = relay.Function([var_1790], output)
mutated_mod['func_1791'] = func_1791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1681_call = mod.get_global_var('func_1681')
func_1683_call = mutated_mod.get_global_var('func_1683')
call_1804 = relay.TupleGetItem(func_1681_call(), 0)
call_1805 = relay.TupleGetItem(func_1683_call(), 0)
var_1806 = relay.var("var_1806", dtype = "float64", shape = (14, 11, 12))#candidate|1806|(14, 11, 12)|var|float64
bop_1807 = relay.divide(call_1804.astype('float32'), relay.reshape(var_1806.astype('float32'), relay.shape_of(call_1804))) # shape=(14, 11, 12)
bop_1810 = relay.divide(call_1805.astype('float32'), relay.reshape(var_1806.astype('float32'), relay.shape_of(call_1805))) # shape=(14, 11, 12)
uop_1815 = relay.atan(bop_1807.astype('float64')) # shape=(14, 11, 12)
uop_1817 = relay.atan(bop_1810.astype('float64')) # shape=(14, 11, 12)
uop_1823 = relay.tan(uop_1815.astype('float32')) # shape=(14, 11, 12)
uop_1825 = relay.tan(uop_1817.astype('float32')) # shape=(14, 11, 12)
bop_1837 = relay.floor_mod(uop_1815.astype('float64'), relay.reshape(var_1806.astype('float64'), relay.shape_of(uop_1815))) # shape=(14, 11, 12)
bop_1840 = relay.floor_mod(uop_1817.astype('float64'), relay.reshape(var_1806.astype('float64'), relay.shape_of(uop_1817))) # shape=(14, 11, 12)
var_1842 = relay.var("var_1842", dtype = "float32", shape = (14, 11, 12))#candidate|1842|(14, 11, 12)|var|float32
bop_1843 = relay.bitwise_and(uop_1823.astype('int64'), relay.reshape(var_1842.astype('int64'), relay.shape_of(uop_1823))) # shape=(14, 11, 12)
bop_1846 = relay.bitwise_and(uop_1825.astype('int64'), relay.reshape(var_1842.astype('int64'), relay.shape_of(uop_1825))) # shape=(14, 11, 12)
output = relay.Tuple([bop_1837,bop_1843,])
output2 = relay.Tuple([bop_1840,bop_1846,])
func_1849 = relay.Function([var_1806,var_1842,], output)
mod['func_1849'] = func_1849
mod = relay.transform.InferType()(mod)
var_1850 = relay.var("var_1850", dtype = "float64", shape = (14, 11, 12))#candidate|1850|(14, 11, 12)|var|float64
var_1851 = relay.var("var_1851", dtype = "float32", shape = (14, 11, 12))#candidate|1851|(14, 11, 12)|var|float32
output = func_1849(var_1850,var_1851,)
func_1852 = relay.Function([var_1850,var_1851,], output)
mutated_mod['func_1852'] = func_1852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_1880 = relay.TupleGetItem(func_1672_call(), 0)
call_1881 = relay.TupleGetItem(func_1673_call(), 0)
output = call_1880
output2 = call_1881
func_1886 = relay.Function([], output)
mod['func_1886'] = func_1886
mod = relay.transform.InferType()(mod)
mutated_mod['func_1886'] = func_1886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1886_call = mutated_mod.get_global_var('func_1886')
call_1887 = func_1886_call()
output = call_1887
func_1888 = relay.Function([], output)
mutated_mod['func_1888'] = func_1888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1946 = relay.var("var_1946", dtype = "float32", shape = (13, 11, 5))#candidate|1946|(13, 11, 5)|var|float32
var_1947 = relay.var("var_1947", dtype = "float32", shape = (13, 11, 5))#candidate|1947|(13, 11, 5)|var|float32
bop_1948 = relay.power(var_1946.astype('float32'), relay.reshape(var_1947.astype('float32'), relay.shape_of(var_1946))) # shape=(13, 11, 5)
output = relay.Tuple([bop_1948,])
output2 = relay.Tuple([bop_1948,])
func_1951 = relay.Function([var_1946,var_1947,], output)
mod['func_1951'] = func_1951
mod = relay.transform.InferType()(mod)
var_1952 = relay.var("var_1952", dtype = "float32", shape = (13, 11, 5))#candidate|1952|(13, 11, 5)|var|float32
var_1953 = relay.var("var_1953", dtype = "float32", shape = (13, 11, 5))#candidate|1953|(13, 11, 5)|var|float32
output = func_1951(var_1952,var_1953,)
func_1954 = relay.Function([var_1952,var_1953,], output)
mutated_mod['func_1954'] = func_1954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_2004 = relay.TupleGetItem(func_1499_call(), 2)
call_2005 = relay.TupleGetItem(func_1500_call(), 2)
output = call_2004
output2 = call_2005
func_2012 = relay.Function([], output)
mod['func_2012'] = func_2012
mod = relay.transform.InferType()(mod)
output = func_2012()
func_2013 = relay.Function([], output)
mutated_mod['func_2013'] = func_2013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1540_call = mod.get_global_var('func_1540')
func_1541_call = mutated_mod.get_global_var('func_1541')
call_2014 = relay.TupleGetItem(func_1540_call(), 0)
call_2015 = relay.TupleGetItem(func_1541_call(), 0)
output = relay.Tuple([call_2014,])
output2 = relay.Tuple([call_2015,])
func_2022 = relay.Function([], output)
mod['func_2022'] = func_2022
mod = relay.transform.InferType()(mod)
output = func_2022()
func_2023 = relay.Function([], output)
mutated_mod['func_2023'] = func_2023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2040 = relay.var("var_2040", dtype = "int64", shape = (14, 16, 3))#candidate|2040|(14, 16, 3)|var|int64
var_2041 = relay.var("var_2041", dtype = "int64", shape = (14, 16, 3))#candidate|2041|(14, 16, 3)|var|int64
bop_2042 = relay.right_shift(var_2040.astype('int64'), relay.reshape(var_2041.astype('int64'), relay.shape_of(var_2040))) # shape=(14, 16, 3)
bop_2054 = relay.logical_and(var_2040.astype('bool'), relay.reshape(bop_2042.astype('bool'), relay.shape_of(var_2040))) # shape=(14, 16, 3)
bop_2057 = relay.power(var_2041.astype('float64'), relay.reshape(bop_2042.astype('float64'), relay.shape_of(var_2041))) # shape=(14, 16, 3)
func_1681_call = mod.get_global_var('func_1681')
func_1683_call = mutated_mod.get_global_var('func_1683')
call_2066 = relay.TupleGetItem(func_1681_call(), 0)
call_2067 = relay.TupleGetItem(func_1683_call(), 0)
uop_2071 = relay.atan(bop_2057.astype('float64')) # shape=(14, 16, 3)
bop_2073 = relay.left_shift(uop_2071.astype('int64'), relay.reshape(bop_2057.astype('int64'), relay.shape_of(uop_2071))) # shape=(14, 16, 3)
output = relay.Tuple([bop_2054,call_2066,bop_2073,])
output2 = relay.Tuple([bop_2054,call_2067,bop_2073,])
func_2084 = relay.Function([var_2040,var_2041,], output)
mod['func_2084'] = func_2084
mod = relay.transform.InferType()(mod)
mutated_mod['func_2084'] = func_2084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2084_call = mutated_mod.get_global_var('func_2084')
var_2086 = relay.var("var_2086", dtype = "int64", shape = (14, 16, 3))#candidate|2086|(14, 16, 3)|var|int64
var_2087 = relay.var("var_2087", dtype = "int64", shape = (14, 16, 3))#candidate|2087|(14, 16, 3)|var|int64
call_2085 = func_2084_call(var_2086,var_2087,)
output = call_2085
func_2088 = relay.Function([var_2086,var_2087,], output)
mutated_mod['func_2088'] = func_2088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2097 = relay.var("var_2097", dtype = "uint32", shape = (4, 4, 9))#candidate|2097|(4, 4, 9)|var|uint32
const_2098 = relay.const([[[-2,-10,-2,-9,-1,8,-3,8,3],[-8,10,-1,-9,-9,-2,2,-9,-4],[-9,-1,-1,2,10,-4,6,1,7],[2,-10,-2,-5,10,-7,6,5,-4]],[[6,4,6,1,1,9,6,3,4],[2,-10,-3,5,10,-9,-8,-2,3],[10,3,-5,-9,-6,9,-6,7,-3],[10,4,-10,6,-7,10,-6,3,-4]],[[-2,3,3,-7,-5,6,9,-6,8],[5,3,2,-4,-8,10,7,-4,1],[2,-10,-4,-5,-2,3,6,-4,10],[4,6,10,3,7,8,7,-4,9]],[[3,1,6,5,-2,2,-7,-5,-8],[9,4,9,4,4,-4,5,10,3],[10,9,-1,5,7,10,-6,-5,7],[-2,1,-8,-2,2,-1,-7,5,4]]], dtype = "uint32")#candidate|2098|(4, 4, 9)|const|uint32
bop_2099 = relay.maximum(var_2097.astype('uint32'), relay.reshape(const_2098.astype('uint32'), relay.shape_of(var_2097))) # shape=(4, 4, 9)
output = bop_2099
output2 = bop_2099
func_2102 = relay.Function([var_2097,], output)
mod['func_2102'] = func_2102
mod = relay.transform.InferType()(mod)
mutated_mod['func_2102'] = func_2102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2103 = relay.var("var_2103", dtype = "uint32", shape = (4, 4, 9))#candidate|2103|(4, 4, 9)|var|uint32
func_2102_call = mutated_mod.get_global_var('func_2102')
call_2104 = func_2102_call(var_2103)
output = call_2104
func_2105 = relay.Function([var_2103], output)
mutated_mod['func_2105'] = func_2105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2022_call = mod.get_global_var('func_2022')
func_2023_call = mutated_mod.get_global_var('func_2023')
call_2140 = relay.TupleGetItem(func_2022_call(), 0)
call_2141 = relay.TupleGetItem(func_2023_call(), 0)
output = call_2140
output2 = call_2141
func_2146 = relay.Function([], output)
mod['func_2146'] = func_2146
mod = relay.transform.InferType()(mod)
mutated_mod['func_2146'] = func_2146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2146_call = mutated_mod.get_global_var('func_2146')
call_2147 = func_2146_call()
output = call_2147
func_2148 = relay.Function([], output)
mutated_mod['func_2148'] = func_2148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1540_call = mod.get_global_var('func_1540')
func_1541_call = mutated_mod.get_global_var('func_1541')
call_2155 = relay.TupleGetItem(func_1540_call(), 0)
call_2156 = relay.TupleGetItem(func_1541_call(), 0)
output = relay.Tuple([call_2155,])
output2 = relay.Tuple([call_2156,])
func_2175 = relay.Function([], output)
mod['func_2175'] = func_2175
mod = relay.transform.InferType()(mod)
mutated_mod['func_2175'] = func_2175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mutated_mod.get_global_var('func_2175')
call_2176 = func_2175_call()
output = call_2176
func_2177 = relay.Function([], output)
mutated_mod['func_2177'] = func_2177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2275 = relay.var("var_2275", dtype = "int64", shape = ())#candidate|2275|()|var|int64
var_2276 = relay.var("var_2276", dtype = "int64", shape = (1, 8, 5))#candidate|2276|(1, 8, 5)|var|int64
bop_2277 = relay.logical_xor(var_2275.astype('int64'), var_2276.astype('int64')) # shape=(1, 8, 5)
func_1886_call = mod.get_global_var('func_1886')
func_1888_call = mutated_mod.get_global_var('func_1888')
call_2282 = func_1886_call()
call_2283 = func_1886_call()
output = relay.Tuple([bop_2277,call_2282,])
output2 = relay.Tuple([bop_2277,call_2283,])
func_2303 = relay.Function([var_2275,var_2276,], output)
mod['func_2303'] = func_2303
mod = relay.transform.InferType()(mod)
mutated_mod['func_2303'] = func_2303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2303_call = mutated_mod.get_global_var('func_2303')
var_2305 = relay.var("var_2305", dtype = "int64", shape = ())#candidate|2305|()|var|int64
var_2306 = relay.var("var_2306", dtype = "int64", shape = (1, 8, 5))#candidate|2306|(1, 8, 5)|var|int64
call_2304 = func_2303_call(var_2305,var_2306,)
output = call_2304
func_2307 = relay.Function([var_2305,var_2306,], output)
mutated_mod['func_2307'] = func_2307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2012_call = mod.get_global_var('func_2012')
func_2013_call = mutated_mod.get_global_var('func_2013')
call_2372 = func_2012_call()
call_2373 = func_2012_call()
func_1886_call = mod.get_global_var('func_1886')
func_1888_call = mutated_mod.get_global_var('func_1888')
call_2377 = func_1886_call()
call_2378 = func_1886_call()
output = relay.Tuple([call_2372,call_2377,])
output2 = relay.Tuple([call_2373,call_2378,])
func_2393 = relay.Function([], output)
mod['func_2393'] = func_2393
mod = relay.transform.InferType()(mod)
output = func_2393()
func_2394 = relay.Function([], output)
mutated_mod['func_2394'] = func_2394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2022_call = mod.get_global_var('func_2022')
func_2023_call = mutated_mod.get_global_var('func_2023')
call_2407 = relay.TupleGetItem(func_2022_call(), 0)
call_2408 = relay.TupleGetItem(func_2023_call(), 0)
output = call_2407
output2 = call_2408
func_2416 = relay.Function([], output)
mod['func_2416'] = func_2416
mod = relay.transform.InferType()(mod)
mutated_mod['func_2416'] = func_2416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2416_call = mutated_mod.get_global_var('func_2416')
call_2417 = func_2416_call()
output = call_2417
func_2418 = relay.Function([], output)
mutated_mod['func_2418'] = func_2418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1886_call = mod.get_global_var('func_1886')
func_1888_call = mutated_mod.get_global_var('func_1888')
call_2447 = func_1886_call()
call_2448 = func_1886_call()
uop_2457 = relay.asin(call_2447.astype('float32')) # shape=(14, 11, 12)
uop_2459 = relay.asin(call_2448.astype('float32')) # shape=(14, 11, 12)
output = uop_2457
output2 = uop_2459
func_2469 = relay.Function([], output)
mod['func_2469'] = func_2469
mod = relay.transform.InferType()(mod)
output = func_2469()
func_2470 = relay.Function([], output)
mutated_mod['func_2470'] = func_2470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2146_call = mod.get_global_var('func_2146')
func_2148_call = mutated_mod.get_global_var('func_2148')
call_2507 = func_2146_call()
call_2508 = func_2146_call()
output = relay.Tuple([call_2507,])
output2 = relay.Tuple([call_2508,])
func_2543 = relay.Function([], output)
mod['func_2543'] = func_2543
mod = relay.transform.InferType()(mod)
output = func_2543()
func_2544 = relay.Function([], output)
mutated_mod['func_2544'] = func_2544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2548 = relay.var("var_2548", dtype = "float32", shape = (9, 1, 12))#candidate|2548|(9, 1, 12)|var|float32
uop_2549 = relay.asinh(var_2548.astype('float32')) # shape=(9, 1, 12)
func_2012_call = mod.get_global_var('func_2012')
func_2013_call = mutated_mod.get_global_var('func_2013')
call_2567 = func_2012_call()
call_2568 = func_2012_call()
output = relay.Tuple([uop_2549,call_2567,])
output2 = relay.Tuple([uop_2549,call_2568,])
func_2573 = relay.Function([var_2548,], output)
mod['func_2573'] = func_2573
mod = relay.transform.InferType()(mod)
mutated_mod['func_2573'] = func_2573
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2574 = relay.var("var_2574", dtype = "float32", shape = (9, 1, 12))#candidate|2574|(9, 1, 12)|var|float32
func_2573_call = mutated_mod.get_global_var('func_2573')
call_2575 = func_2573_call(var_2574)
output = call_2575
func_2576 = relay.Function([var_2574], output)
mutated_mod['func_2576'] = func_2576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_2617 = relay.TupleGetItem(func_1672_call(), 0)
call_2618 = relay.TupleGetItem(func_1673_call(), 0)
var_2631 = relay.var("var_2631", dtype = "float64", shape = (14, 11, 12))#candidate|2631|(14, 11, 12)|var|float64
bop_2632 = relay.minimum(call_2617.astype('uint64'), relay.reshape(var_2631.astype('uint64'), relay.shape_of(call_2617))) # shape=(14, 11, 12)
bop_2635 = relay.minimum(call_2618.astype('uint64'), relay.reshape(var_2631.astype('uint64'), relay.shape_of(call_2618))) # shape=(14, 11, 12)
output = bop_2632
output2 = bop_2635
func_2658 = relay.Function([var_2631,], output)
mod['func_2658'] = func_2658
mod = relay.transform.InferType()(mod)
var_2659 = relay.var("var_2659", dtype = "float64", shape = (14, 11, 12))#candidate|2659|(14, 11, 12)|var|float64
output = func_2658(var_2659)
func_2660 = relay.Function([var_2659], output)
mutated_mod['func_2660'] = func_2660
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2712 = relay.const([[[-5.956148,-8.151322,-0.604280,6.929266,-2.163335,-2.752928,9.362365,-8.100692,-6.260884,1.875383,-5.884895],[-6.822972,-7.483301,-4.672752,-1.095238,-0.403299,5.654450,9.171795,3.640743,3.812231,5.845613,5.398919]],[[4.846682,-9.303787,1.749715,3.044491,-8.151297,6.730716,-6.034468,-4.970936,-2.808735,3.298606,-6.064167],[1.586809,6.019409,2.624324,-9.045835,1.362886,-6.252357,6.371163,-0.792966,-4.638226,-9.125722,3.018023]],[[3.894241,-1.667239,-1.923632,-6.042949,-6.281577,6.421592,-7.742343,-1.733756,1.676726,-0.892946,3.168480],[9.318841,-0.208387,-9.324819,-7.113112,0.978879,-8.341598,5.369460,8.581992,0.170888,2.495051,9.849857]],[[3.884388,-7.814886,-5.339216,-0.282011,-3.881919,7.054616,8.635109,-2.918055,7.521518,-9.997503,6.874601],[-0.336497,7.592956,-3.752436,-3.679437,-0.691729,2.255625,-2.261207,8.212925,2.881736,1.852492,-1.894605]],[[1.406696,-4.852311,-2.138673,-1.355839,-2.534129,-5.677113,-0.444032,-7.301742,-1.886934,-7.425690,2.122999],[1.785242,9.032524,-7.244443,5.426373,-8.087667,1.040872,1.651484,4.816822,0.900954,4.781208,8.625665]],[[-8.029302,-0.380562,-6.792701,-1.589266,-6.317180,-1.590800,0.430338,-3.523078,2.482266,4.486964,0.347043],[-5.658303,-3.425566,-0.607396,6.722890,4.996855,4.422566,-6.227525,-7.702813,5.658134,6.664762,-7.490900]],[[-3.357929,8.635179,8.620247,9.147962,-2.123787,8.525465,1.182402,-9.601560,0.385932,4.701441,1.774680],[-1.426483,-2.002466,-9.580561,8.583084,-3.050509,8.687846,1.646556,-9.878749,0.096636,-4.149149,9.098150]],[[-9.310176,-7.284976,6.068702,-2.921277,-3.790531,-6.392058,-8.494957,-7.503420,-8.785232,-4.570968,-0.674696],[-8.928356,-7.971219,9.681336,6.363551,-8.190117,-0.641952,7.869500,-1.419041,3.399322,8.354360,-6.502811]],[[-2.517253,5.724340,4.485884,5.490679,-8.026524,8.011532,0.088704,1.737101,9.986180,7.018012,7.461293],[-0.022280,-3.187203,-9.304615,4.305502,-9.142493,8.112170,-5.034292,1.117754,-3.009932,-4.547847,-7.188928]],[[7.814247,-7.327474,4.091822,-4.555388,-8.212191,2.231349,-3.720495,-1.751522,-7.287039,-4.474503,2.527702],[-0.696217,-4.984457,-8.235735,-4.954124,-3.725056,-3.963189,1.282633,-9.305239,-5.597979,-7.738384,-4.506316]],[[2.934877,-1.777747,3.381002,7.788816,-0.245457,4.532393,4.072861,5.721072,-4.162675,0.060082,-6.266237],[-8.447637,-6.531863,3.342943,-5.052906,-9.941379,0.521994,9.323929,8.425175,7.310501,8.925908,-4.373027]],[[-0.289741,-6.831648,1.198158,6.003541,-0.732228,8.014911,4.324435,7.645065,-8.444899,2.396994,1.996231],[-2.282109,-8.655174,-7.015203,-3.860877,-2.941547,-6.112317,5.391121,-4.275240,7.649024,-6.425942,2.280467]],[[9.166754,-6.655880,-0.206139,0.333791,-8.969098,-1.214726,2.795731,-9.211177,6.593338,-2.351411,-3.779588],[-5.152707,3.185784,9.197172,-3.097318,1.811771,-9.871431,8.660064,0.591993,-9.836712,-2.304914,-8.948517]]], dtype = "float64")#candidate|2712|(13, 2, 11)|const|float64
const_2713 = relay.const([[[7.557766,4.457383,-6.235768,0.911042,-6.547772,-9.480174,-0.856267,9.664531,-8.330516,6.790553,-5.968898],[4.813681,9.936851,-4.128427,3.819370,-1.345565,-5.231592,6.363555,1.440428,3.952630,9.228410,-8.283234]],[[-2.943159,6.231332,3.962525,-7.858021,7.329938,-3.230039,4.985602,8.758005,-0.754002,4.456018,8.213545],[9.863295,0.559796,9.332205,-0.651256,5.091874,1.155331,1.667609,9.892260,-8.692041,7.475305,8.244938]],[[0.794697,-4.907278,9.416919,7.315402,-4.988549,0.740461,0.783091,-7.933089,-4.490373,5.806454,-3.779692],[-9.923095,-4.939956,-8.470975,4.032785,1.353869,-2.587079,-9.547707,2.482516,7.829185,-7.921822,-2.673882]],[[1.114034,5.774924,-2.551655,6.853378,-0.510520,-4.180520,-0.389301,-5.095036,6.667517,9.321506,6.499212],[6.015209,2.054249,-2.913357,7.197980,4.989474,5.321225,7.238822,1.435623,-8.535539,-6.496850,6.939171]],[[-2.219775,6.440976,8.725571,6.957060,-5.447246,4.763191,2.334775,-3.830423,-5.930682,8.609179,-1.043182],[9.724501,2.109108,3.998203,6.377482,0.079747,3.979993,6.500025,7.137296,7.524035,6.993788,9.759759]],[[1.449560,1.228028,6.632553,0.664318,0.292489,-6.415085,5.688888,6.222763,-7.839831,-5.273588,4.439737],[-6.954171,-5.396488,-7.335499,-2.814883,7.099234,2.445361,-6.143186,8.088188,2.154139,-9.428531,-6.561110]],[[3.671378,-8.277492,-3.102040,0.085642,-8.858823,-9.666937,-8.846564,-5.632095,-7.638243,-3.396032,5.455604],[-8.888432,-8.736580,4.005936,6.941849,-1.068725,6.456751,-6.058640,6.933068,2.752546,6.925190,6.409634]],[[2.175844,5.870525,2.331415,6.643886,-0.677518,9.323570,7.122616,0.810851,-6.717160,-9.713839,2.152356],[0.533861,-2.095834,-8.162176,-7.220457,4.881451,-8.827024,5.580342,-6.197461,-2.674034,9.807653,-0.257684]],[[-5.371829,1.534911,9.775719,7.513498,5.725782,-3.844315,1.948828,1.114614,-2.833998,2.280455,8.864975],[-4.795724,-3.136416,-6.015139,-0.782085,-9.219901,3.964794,-4.382968,0.642843,1.086291,-8.992296,8.587969]],[[-3.446912,-9.387892,6.415322,1.435207,-3.931771,8.585932,-6.748455,-7.969590,-2.633825,-1.079870,2.486428],[-9.729449,-6.178869,8.743279,4.419017,-4.244728,4.804413,-0.894066,0.316132,-9.993584,7.265398,-0.861463]],[[8.396015,8.347553,0.931154,0.539373,-3.913903,-9.709709,3.816408,4.451088,-7.219101,8.597502,-5.976516],[-0.694448,7.757325,-1.933521,-3.589698,8.342757,2.345912,4.518299,-3.703283,6.354054,4.014203,7.388025]],[[0.495059,1.555006,-9.251100,-4.832942,2.564053,-0.493488,8.392573,3.781822,0.587475,1.658443,0.376786],[-9.176569,-6.452573,-7.741157,2.752699,-1.396114,3.758993,-5.443959,-4.014101,-8.020824,3.666975,8.056618]],[[0.410933,6.837209,0.977620,-9.338851,2.938129,-6.885821,-1.401487,2.828551,-1.229177,1.455811,-8.711818],[7.927990,-0.050080,-4.700213,4.602468,-5.553779,-8.573314,6.457426,-6.628425,7.682424,-7.515088,2.095561]]], dtype = "float64")#candidate|2713|(13, 2, 11)|const|float64
bop_2714 = relay.mod(const_2712.astype('float64'), relay.reshape(const_2713.astype('float64'), relay.shape_of(const_2712))) # shape=(13, 2, 11)
output = relay.Tuple([bop_2714,])
output2 = relay.Tuple([bop_2714,])
func_2718 = relay.Function([], output)
mod['func_2718'] = func_2718
mod = relay.transform.InferType()(mod)
output = func_2718()
func_2719 = relay.Function([], output)
mutated_mod['func_2719'] = func_2719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_2797 = relay.TupleGetItem(func_2393_call(), 0)
call_2798 = relay.TupleGetItem(func_2394_call(), 0)
output = call_2797
output2 = call_2798
func_2803 = relay.Function([], output)
mod['func_2803'] = func_2803
mod = relay.transform.InferType()(mod)
output = func_2803()
func_2804 = relay.Function([], output)
mutated_mod['func_2804'] = func_2804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2718_call = mod.get_global_var('func_2718')
func_2719_call = mutated_mod.get_global_var('func_2719')
call_2824 = relay.TupleGetItem(func_2718_call(), 0)
call_2825 = relay.TupleGetItem(func_2719_call(), 0)
var_2834 = relay.var("var_2834", dtype = "float64", shape = (13, 2, 11))#candidate|2834|(13, 2, 11)|var|float64
bop_2835 = relay.logical_or(call_2824.astype('bool'), relay.reshape(var_2834.astype('bool'), relay.shape_of(call_2824))) # shape=(13, 2, 11)
bop_2838 = relay.logical_or(call_2825.astype('bool'), relay.reshape(var_2834.astype('bool'), relay.shape_of(call_2825))) # shape=(13, 2, 11)
uop_2841 = relay.log(bop_2835.astype('float64')) # shape=(13, 2, 11)
uop_2843 = relay.log(bop_2838.astype('float64')) # shape=(13, 2, 11)
output = relay.Tuple([uop_2841,])
output2 = relay.Tuple([uop_2843,])
func_2847 = relay.Function([var_2834,], output)
mod['func_2847'] = func_2847
mod = relay.transform.InferType()(mod)
var_2848 = relay.var("var_2848", dtype = "float64", shape = (13, 2, 11))#candidate|2848|(13, 2, 11)|var|float64
output = func_2847(var_2848)
func_2849 = relay.Function([var_2848], output)
mutated_mod['func_2849'] = func_2849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2022_call = mod.get_global_var('func_2022')
func_2023_call = mutated_mod.get_global_var('func_2023')
call_2861 = relay.TupleGetItem(func_2022_call(), 0)
call_2862 = relay.TupleGetItem(func_2023_call(), 0)
func_2573_call = mod.get_global_var('func_2573')
func_2576_call = mutated_mod.get_global_var('func_2576')
var_2875 = relay.var("var_2875", dtype = "float32", shape = (108,))#candidate|2875|(108,)|var|float32
call_2874 = relay.TupleGetItem(func_2573_call(relay.reshape(var_2875.astype('float32'), [9, 1, 12])), 0)
call_2876 = relay.TupleGetItem(func_2576_call(relay.reshape(var_2875.astype('float32'), [9, 1, 12])), 0)
func_251_call = mod.get_global_var('func_251')
func_255_call = mutated_mod.get_global_var('func_255')
const_2896 = relay.const([1.068041,-5.982146,7.208876,2.892333,-2.690764,-9.179072,7.793923,-4.554927,5.963292,7.833076,1.293433,1.142043,-9.547076,9.354921,5.639111,-7.618739,1.099455,8.826101,-8.159016,-8.214833,0.635931,-3.857009,-5.623135,-3.360018,-4.463142,6.728967,-7.469547,2.492676,-2.320608,-5.807259,-4.908787,-2.027814,7.482812,6.266876,-8.029911,-0.152476,-8.786061,-5.219672,-9.052792,-6.581631,2.946957,-4.926126,-2.752797,-6.521259,1.030668,5.548708,-5.578706,4.514057,7.191081,0.020034,-0.378284,-3.687617,-0.339382,-3.653961,6.458489,5.199224,-7.008585,-8.717595,6.774490,-6.189622,-4.412953,2.126182,9.202737,-3.928972,8.494116,3.870298,-1.647703,-1.960118,-4.077722,1.384154,1.729223,-1.811967,-6.863965,2.873388,-5.076655,-5.309392,1.188379,2.311805,4.435867,4.016347,0.816841,-6.629465,-6.758101,-1.546661,9.140739,-3.735854,-4.761419,8.131289,-8.119109,-9.714709,-5.395732,2.873848,-8.281389,-0.084588,-0.458238,-7.841500,-4.664300,5.648838,9.668916,-0.818742,2.449621,-1.543062,2.021449,5.881052,-7.648020,-4.521388,-7.672867,-2.427247,-1.639324,-0.653851,-2.059214,-4.204051,-3.913537,-4.135184,7.684684,-2.194716,6.292107,-7.179111,-9.647051,-1.406965,-8.976563,4.415994,-3.409603,1.860340,0.266650,-9.177971,4.761575,-2.594887,-3.752850,7.893632,8.444822,7.662913,-5.519281,-2.393358,7.032758,0.025383,5.972203,-5.212455,-4.880735,3.468082,-2.149837,-9.105146,-6.521232,5.974032,5.083883,6.749654,-2.027251,5.154280,-6.756182,-2.256130,3.892359,0.647965,-7.322872,-2.141119,-9.348916,-8.357951,8.460621,-3.913393,-4.090773,3.952288,-0.057395,-7.348297,6.174719,-8.169495,0.207025,0.759954,-8.199106,-6.070083,-3.076988,-3.596757,-2.426268,5.919169,0.940959,9.558844,4.097577,1.359398,3.474168,9.385229,4.316426,6.023054], dtype = "float32")#candidate|2896|(180,)|const|float32
call_2895 = relay.TupleGetItem(func_251_call(relay.reshape(const_2896.astype('float32'), [3, 6, 10]), relay.reshape(const_2896.astype('float32'), [3, 6, 10]), ), 3)
call_2897 = relay.TupleGetItem(func_255_call(relay.reshape(const_2896.astype('float32'), [3, 6, 10]), relay.reshape(const_2896.astype('float32'), [3, 6, 10]), ), 3)
uop_2901 = relay.asin(const_2896.astype('float64')) # shape=(180,)
uop_2918 = relay.sin(uop_2901.astype('float64')) # shape=(180,)
output = relay.Tuple([call_2861,call_2874,var_2875,call_2895,uop_2918,])
output2 = relay.Tuple([call_2862,call_2876,var_2875,call_2897,uop_2918,])
func_2923 = relay.Function([var_2875,], output)
mod['func_2923'] = func_2923
mod = relay.transform.InferType()(mod)
var_2924 = relay.var("var_2924", dtype = "float32", shape = (108,))#candidate|2924|(108,)|var|float32
output = func_2923(var_2924)
func_2925 = relay.Function([var_2924], output)
mutated_mod['func_2925'] = func_2925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2929 = relay.var("var_2929", dtype = "uint16", shape = ())#candidate|2929|()|var|uint16
var_2930 = relay.var("var_2930", dtype = "uint16", shape = (3, 2, 13))#candidate|2930|(3, 2, 13)|var|uint16
bop_2931 = relay.logical_xor(var_2929.astype('uint16'), var_2930.astype('uint16')) # shape=(3, 2, 13)
func_1007_call = mod.get_global_var('func_1007')
func_1011_call = mutated_mod.get_global_var('func_1011')
const_2935 = relay.const([[-3.079869,-5.354754,9.665077,-5.851494,-6.014236,9.870677,-1.451185,3.138077,3.773568,4.107715,1.394599,-6.428841,0.702615,6.629020,7.409071,-7.529412,-5.960080,5.553232,-7.010418,6.368707,2.076134,0.559655,-2.134646,2.095742,5.194092,1.165330,7.744190,1.507965,1.438301,1.629621,-4.025506,-8.220804,-1.981434,-0.896695,-3.916965,3.594592,3.808388,9.794873,3.269704,4.115521,-0.262715,-7.551621,-7.243491,-3.245939,-8.215468,-4.837393,9.956771,4.437758,-6.841654,-8.608453,-4.099425,-4.148725,2.031586,3.944801,-9.610167,5.434423,8.965934,0.489986,1.621528,-7.385461,6.958713,3.587352,4.489971,-1.810317,-4.058843,-1.558462,-9.052973,-2.584095,6.311948,1.748927],[-9.995701,-3.621594,-5.196141,0.374896,7.337666,8.416615,-2.757525,3.527384,0.045403,3.801007,1.825786,-8.859480,4.806747,4.262982,-2.563636,-9.234017,0.200371,8.037848,-2.237645,-4.305385,-7.509632,-1.832839,-5.466602,-6.368640,6.075749,6.352968,-1.673232,1.818892,3.984885,-8.019289,5.862904,-9.539732,3.642928,-6.155664,1.174302,8.501983,-8.757594,-0.128687,8.399311,-8.331177,5.336000,9.488240,-0.408721,2.842633,9.096329,9.096268,-9.035064,-2.920383,1.099846,-3.692161,9.416274,-5.096247,5.789344,-3.911404,-8.885861,-7.599331,-5.560035,5.285057,-6.461160,-1.710401,-4.031670,-0.998575,-3.778274,-6.662481,3.152458,-9.353856,-7.647613,-6.933566,6.246943,-5.427810],[1.169222,3.037126,5.398459,-1.564980,0.820549,2.681698,2.025111,4.260063,-1.420995,6.956712,-0.586832,-6.976401,1.509164,-9.254516,4.108322,-5.811643,0.362277,4.266207,-9.247766,-2.777703,-0.782224,4.188633,6.544779,7.734014,-9.421279,8.887932,-9.964323,4.847830,-8.340682,0.360809,-0.896980,4.297103,7.421887,-3.431774,-2.608271,-2.726074,9.128601,-3.373201,-6.025345,-0.220030,4.440401,1.434016,-1.439124,4.950935,-2.328102,-1.874612,-1.781740,9.124978,-6.658340,0.093448,-7.826665,-6.056904,6.248435,4.101976,-9.218613,-7.436063,0.196979,-8.358139,-1.105151,8.881703,-2.593125,6.717023,2.240922,-3.348862,8.042471,-0.330192,1.588482,4.539917,-0.581530,-4.299086],[-8.067894,-3.088279,-0.643791,6.126440,-1.398792,-7.453601,3.896121,4.478172,-0.509100,-2.294132,1.619382,8.701059,9.960585,1.302863,2.135607,7.543168,-5.353510,-7.565843,-9.023582,6.177276,-8.110761,8.524887,5.832110,-5.583355,-4.646904,1.286983,5.782874,0.859708,6.691876,-0.575787,-9.339186,5.363744,4.630737,-4.643517,9.313897,-0.763906,5.965810,2.558845,-9.743411,-2.551795,2.964389,-6.871824,-7.853582,3.393911,-2.326825,4.485278,6.119132,1.221449,-5.896340,-7.764852,5.325730,7.800167,-6.175048,-8.724881,-6.717668,-2.071970,-1.365485,-9.496235,-3.816370,9.278130,-9.576869,9.081003,9.371019,-8.422078,-3.741358,1.560828,-4.565450,-8.301304,-3.937550,7.834866],[4.177595,-1.019841,5.674262,4.486369,-8.953621,-4.242006,0.482383,8.365914,7.040240,-0.014647,-7.094772,0.557177,-4.877571,-3.484376,-3.704600,1.799413,2.019569,-0.793110,-3.826357,-3.493921,-3.934218,2.988717,-6.765399,-3.580041,6.348533,-1.105860,-0.939773,-9.744677,4.736584,1.648328,-2.472882,-9.652432,-0.412719,-3.531966,-0.111201,-0.155397,-8.280359,-7.755458,-8.148014,-9.788625,7.894911,2.313647,-8.649456,-7.086129,-6.513544,-0.855718,-5.882253,-2.197343,4.589327,0.103107,1.706857,-8.233999,-7.502392,7.786066,8.994760,-9.030178,-1.797275,-0.852304,8.591206,-9.850431,0.016506,-0.805998,6.006418,-8.698358,-5.449281,-3.432909,2.231963,1.679174,7.363737,-6.885501],[-0.077011,4.686393,7.730392,7.408369,-1.495111,-4.825633,-0.865013,2.465190,-0.072982,-1.064165,-2.580687,-6.171322,1.925198,8.270619,-6.511773,8.382639,-2.714556,3.856655,3.499886,-0.527632,6.243658,8.922603,4.722223,4.352739,-0.315403,-3.118353,9.904459,6.442315,-1.836047,0.894192,-6.866407,7.595356,-3.916004,-9.807333,-2.491378,5.317950,-8.001794,1.536975,-4.036123,9.645311,8.889978,5.030044,-8.294488,1.984317,0.695878,-1.536498,-8.568297,-2.912664,-4.081650,-8.260748,3.705443,-0.860763,-0.833391,9.491674,6.847751,4.819715,1.806907,2.578903,6.377758,-2.690476,9.787708,1.356246,8.069005,-1.970973,-8.013871,-6.824829,9.519374,7.785971,-7.886837,-6.473885],[0.759521,-4.643212,-8.950366,0.971136,3.844250,-5.104784,-3.079867,-5.757590,0.719972,8.908799,9.467251,4.411805,9.046167,-3.212197,1.426777,4.603032,-9.222799,1.029028,1.866719,9.497528,8.783870,3.568875,2.555171,1.314042,7.588783,-1.075334,-6.004692,7.280440,6.550693,2.176313,-2.407538,3.559344,7.906958,1.187797,7.603280,6.590353,-3.161276,-8.886961,-4.561327,-1.765390,1.981788,-5.989083,-8.365686,7.979303,6.283264,-2.606227,5.307545,-7.368515,0.622700,7.423113,-4.654062,5.288443,6.883662,-1.894257,0.013055,5.598401,-6.684447,-0.733459,7.795505,-4.774096,-9.745087,-1.897581,-0.248051,-4.534620,-8.486119,2.032921,-1.850354,9.180469,-9.873193,4.933330],[-2.606032,-5.115323,-6.720580,5.725963,-2.885349,-6.903797,3.214500,-2.228553,-0.840929,6.136801,-6.298405,8.964575,0.171829,1.069043,1.177759,1.206358,7.836215,-1.434309,-0.491247,-5.181700,8.057690,7.921663,7.513633,-0.911792,6.206698,4.059286,-6.221731,-8.166971,7.337540,-8.154506,5.471177,7.124671,6.338761,-7.075573,8.081725,0.244277,-1.650377,4.983444,-4.944235,9.831294,0.744519,-5.429217,5.711315,3.466721,-3.480003,1.160654,5.134361,-7.330728,-2.596760,-6.700756,5.576123,-9.094013,8.336364,-5.676059,-0.526754,3.722760,-2.804724,1.881891,-2.029697,-6.215024,-2.666239,-0.222761,-1.614674,9.335834,-6.271846,4.016444,7.925534,2.613150,3.764345,-9.739601],[3.725554,-8.303016,2.810896,8.801377,-0.378961,-1.540281,-8.988892,7.954676,-0.149922,9.493605,-6.741279,-4.389442,4.994938,-3.373326,9.452911,-6.244941,-9.993640,-7.278117,-7.200098,-7.517016,-9.010073,-0.430317,8.965223,0.438375,-2.906176,-5.239640,4.505397,-1.589431,-2.328825,-1.502217,0.363427,-4.015615,8.814608,-8.392262,1.321499,-9.643632,1.128274,-7.325356,-8.334210,-4.712209,-8.944567,-8.999542,-0.792688,-0.999478,7.512645,-6.363592,0.559040,6.374381,-4.124022,9.570303,-0.200606,5.693718,-4.657443,-4.014075,1.046667,9.382680,-4.855822,-8.262231,-0.745650,9.211023,1.012104,-8.296653,3.011571,6.215666,7.824894,3.314404,-8.808708,-3.084730,-1.804284,-9.177210],[1.040481,9.727402,2.235384,-9.670573,0.728539,2.139572,-1.690414,2.256676,3.360430,1.458244,1.848918,-3.709055,9.484838,-0.777787,-5.936843,7.669164,-0.836591,9.581504,-7.285593,4.809809,8.285154,-0.304133,1.323027,6.713670,-5.069232,7.305859,7.854675,-1.231279,-5.577500,-3.795578,5.452674,1.531991,5.024334,4.604447,-7.086877,2.648659,9.482023,5.406966,1.284814,-5.355005,5.117849,-4.872874,0.517601,8.982957,0.644891,-4.359602,-9.710908,5.279558,-3.686693,3.865866,2.105838,0.356821,0.668129,7.827401,4.028115,-3.244441,-5.338592,-9.978410,8.051950,8.488084,3.664219,8.483676,4.626256,4.960989,3.275566,2.856082,5.448013,-8.121432,7.380726,-2.711793],[6.492589,-6.734215,2.161511,4.424872,-4.045496,6.911116,4.580728,9.224713,9.381930,-9.676341,-6.774609,-1.096270,-3.814661,-9.276681,-6.284353,1.029454,5.287311,7.898309,-4.798092,-7.789197,-0.207164,-1.610065,-4.282441,-9.869196,9.039825,8.277229,-1.442910,2.633456,-9.099433,1.376201,-8.761908,-7.846157,-3.232143,-1.390062,-4.539465,8.649497,0.482536,-2.355150,-8.414527,0.799786,-7.090742,3.565059,-0.017723,4.849040,-9.323892,-8.368824,7.068181,-4.052355,-6.273299,-9.881853,5.473055,2.730696,-7.073448,3.177646,3.863460,-5.183584,1.790971,-4.284503,-6.325412,-7.337317,-6.879745,-4.422812,6.438555,4.523849,5.644620,-2.601977,-0.868765,3.038461,-0.035455,7.915068],[-1.283576,3.218295,9.862399,6.457496,2.227675,-9.120481,-7.915829,-6.835645,4.723067,-1.010691,7.474132,-5.368986,-6.646942,-1.062097,-7.194785,-9.274263,6.069137,-5.267557,-6.720711,8.216007,3.246048,9.903265,-0.247316,5.124915,-6.759451,-5.246075,-6.573955,1.439652,1.744513,7.959553,6.351898,-5.673686,2.714445,7.993715,-8.022830,-4.894007,-2.092973,-4.653972,5.291284,-9.249278,1.878444,5.285176,9.784924,-3.840278,9.583305,-8.138569,-6.515360,3.764489,7.740378,6.091200,5.162970,1.789503,4.291970,-0.356585,6.450951,-6.002577,-7.482585,8.435430,-7.248385,-5.011146,4.905107,-7.607992,3.746002,-7.872717,-9.171143,-3.247860,7.144450,3.212777,0.397199,0.082565]], dtype = "float32")#candidate|2935|(12, 70)|const|float32
call_2934 = relay.TupleGetItem(func_1007_call(relay.reshape(const_2935.astype('float32'), [7, 8, 15]), relay.reshape(var_2929.astype('float64'), []), ), 1)
call_2936 = relay.TupleGetItem(func_1011_call(relay.reshape(const_2935.astype('float32'), [7, 8, 15]), relay.reshape(var_2929.astype('float64'), []), ), 1)
uop_2938 = relay.asin(var_2930.astype('float64')) # shape=(3, 2, 13)
output = relay.Tuple([bop_2931,call_2934,const_2935,uop_2938,])
output2 = relay.Tuple([bop_2931,call_2936,const_2935,uop_2938,])
func_2944 = relay.Function([var_2929,var_2930,], output)
mod['func_2944'] = func_2944
mod = relay.transform.InferType()(mod)
mutated_mod['func_2944'] = func_2944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2944_call = mutated_mod.get_global_var('func_2944')
var_2946 = relay.var("var_2946", dtype = "uint16", shape = ())#candidate|2946|()|var|uint16
var_2947 = relay.var("var_2947", dtype = "uint16", shape = (3, 2, 13))#candidate|2947|(3, 2, 13)|var|uint16
call_2945 = func_2944_call(var_2946,var_2947,)
output = call_2945
func_2948 = relay.Function([var_2946,var_2947,], output)
mutated_mod['func_2948'] = func_2948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_2973 = relay.TupleGetItem(func_2393_call(), 1)
call_2974 = relay.TupleGetItem(func_2394_call(), 1)
func_2543_call = mod.get_global_var('func_2543')
func_2544_call = mutated_mod.get_global_var('func_2544')
call_2994 = relay.TupleGetItem(func_2543_call(), 0)
call_2995 = relay.TupleGetItem(func_2544_call(), 0)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
const_3012 = relay.const([[2.653572],[-5.623752],[-9.896361],[7.031284],[2.424212],[4.509569],[-3.268440],[-8.274253],[2.623599],[-8.601962],[-2.683313],[-5.132841],[-6.107072],[8.216864],[-8.153785],[-0.991710],[-2.082061],[-0.791067],[6.638628],[4.281438],[-6.362202],[-4.154865],[-7.745579],[2.647659],[-1.769173],[5.720903],[2.318184],[-2.021489],[-4.723608],[1.352792],[5.439498],[-0.538006],[-7.991941],[-1.944642],[4.489749],[-7.391943],[4.365266],[-4.081834],[-5.367397],[0.252586],[3.581511],[9.223874],[-3.899928],[6.295328],[7.257341],[3.925408],[-1.579173],[-9.454166],[-6.952357],[-0.385141],[7.580348],[-7.730978],[-2.619286],[-1.598169],[-9.389929],[4.730672],[9.250911],[8.767784],[-7.443097],[-6.443921],[0.985123],[-7.660520],[9.802883],[-1.051094],[-9.483401],[0.232495],[-5.404996],[-9.335996],[4.439076],[0.598821],[-3.644286],[3.272061],[5.522195],[-9.480994],[9.397804],[6.333185],[-9.258925],[-0.357354],[8.863425],[-7.226780],[-7.926441],[0.951228],[1.216807],[1.122356],[-9.641446],[-2.087755],[2.912692],[-3.738707],[-8.510189],[9.641186],[6.508395],[-4.747266],[-2.012307],[-1.804834],[-4.679890],[2.407254],[-5.431085],[4.262197],[-0.908907],[-1.694845],[0.700744],[-0.816634],[0.165530],[5.727291],[0.419988],[4.281511],[6.644996],[-8.719963],[3.536178],[1.821751],[4.503864],[-1.905052],[3.932370],[8.383679],[-0.438077],[8.247544],[0.803153],[-9.817299],[-3.021782],[-7.280104],[-8.842500],[3.385891],[-8.387192],[-8.871081],[-1.456036],[7.445024],[-1.148497],[3.500030],[8.096913],[-4.553891],[0.151142],[0.256337],[6.055603],[1.864036],[5.464804],[3.147398],[0.240269],[8.264441],[-0.662109],[6.715222],[-1.765638],[1.729776],[-9.946832],[-5.758980],[3.366068],[5.255132],[-5.138348],[3.022076],[4.740776],[-5.559678],[8.424336],[-7.323676],[-0.812248],[-0.342619],[2.090825],[7.200304],[-3.160372],[0.260388],[3.544456],[-9.564678],[-1.561054],[4.548726],[-4.328436],[-9.530413],[1.975809],[-2.839873],[-3.038450],[-2.043233],[-0.038075],[4.451495],[-1.828524],[0.990955],[6.941882],[-1.892556],[1.748058],[-0.568193],[-0.300132],[-4.314350],[-6.565071],[-1.346248],[4.434467],[-5.667718],[-2.326700],[-4.133914],[7.504718],[-4.887239],[-5.393030],[-8.545514],[-0.602024],[4.293645],[8.173484],[4.879713],[6.414448],[-3.208190],[-3.816947],[-7.956981],[9.369617],[3.776661],[1.473252],[8.949628],[-8.711927],[-0.130003],[5.152550],[-9.564586],[6.739544],[8.293482],[9.133614],[3.684338],[1.748186],[0.001714],[-8.216704],[5.624250],[-0.742157],[5.696233],[7.872600],[5.538256],[1.873360],[-3.731693],[-2.008232],[-3.886980],[-5.744696],[1.044050],[7.196679],[3.336646],[-4.725741],[-5.700458],[-1.871465],[1.965770],[6.968322],[-7.640061],[9.481194],[-5.000575],[1.185115],[6.257674],[4.132147],[-5.984419],[-5.729270],[-4.907101],[-9.007429],[-7.808883],[-0.359939],[5.211169],[-4.273467],[5.159696],[-3.133493],[-4.093683],[5.426693],[-8.727238],[-7.252514],[2.499902],[5.409740],[1.436408],[5.208388],[4.217657],[3.518063],[-9.743291],[3.198065],[-3.156993],[-5.561423],[1.130626],[9.746432],[-6.591748],[-3.385830],[-8.127968],[2.676441],[-2.609325],[3.234597],[-5.941003],[4.488536],[-2.243161],[1.465166],[-8.842913],[-1.853925],[-9.732500],[6.899378],[4.313435],[-0.340612],[2.780928],[-7.397730],[2.065523],[0.298210],[6.449261],[1.706537],[7.997308],[0.822253],[-3.119197],[7.498154],[0.926397],[5.139353],[-2.088008],[5.327943],[-8.918570],[-1.277746],[-2.878654],[2.716885],[-3.423336],[-3.531455],[8.305531],[4.737015],[-6.370087],[-8.525415],[4.344204],[-2.496745],[2.018990],[-2.735011],[-8.312738],[-2.293963],[8.537900],[-9.003763],[6.543312],[9.782558],[4.206028],[3.184210],[-2.126144],[6.773582],[-2.140779],[5.651310],[0.980475],[-4.854618],[1.470330],[5.259123],[5.323867],[-7.177576],[-2.364841],[-8.145457],[-0.057691],[3.645811],[4.388265],[-0.259826],[5.346905],[0.989198],[4.436611],[1.587363],[-2.997882],[-2.683660],[-6.707161],[3.666595],[5.323251],[4.446863],[-0.473904],[9.414736],[6.125093],[-6.009177],[-0.839151],[-9.344238],[3.571045],[0.183670],[-8.041793],[2.213259],[-1.969162],[5.558545],[6.502897],[-7.881544],[-3.530702],[-2.031808],[-6.698882],[-6.146099],[-8.367265],[-9.465657],[6.542238],[-7.038401],[-8.156286],[-5.316310],[-6.046336],[2.823967],[0.662900],[-2.865134],[6.444502],[9.509807],[-9.433767],[5.158524],[1.411461],[-8.531343],[-5.406411],[-0.354323],[-7.666486],[-8.220001],[-2.183074],[3.286261],[3.269707],[-9.278033],[1.774626],[4.621796],[6.803730],[0.085700],[5.153669],[-0.642988],[-4.576631],[-6.276354],[-3.124149],[-0.789604],[-4.204060],[1.459799],[4.193088],[7.246419],[-9.396089],[9.113177],[-2.326139],[-4.358886],[1.256183],[7.834410],[-9.368864],[-0.710506],[8.496542],[-6.001360],[2.147382],[-1.552959],[3.407051],[3.996343],[-9.962470],[7.360781],[-7.761337],[7.872281],[-4.170325],[-6.467138],[1.862064],[-4.174147],[-7.059668],[-3.534368],[5.267658],[0.977373],[5.263537],[-5.882094],[6.988179],[-3.245552],[6.568471],[-9.191250],[-3.306022],[-5.796131],[-7.950811],[9.148599],[8.111334],[4.884445],[-3.331288],[3.577985],[-1.987622],[-3.921553],[-1.774557],[7.915144],[-1.935847],[1.574251],[0.602327],[9.402227],[0.265399],[-1.779516],[3.461027],[4.274355],[5.632277],[-1.704467],[-7.623044],[-9.051396],[-8.428090],[2.703348],[9.163137],[-5.690564],[-1.026837],[8.022879],[-1.969465],[6.470571],[9.144110],[1.001263],[9.385144]], dtype = "float64")#candidate|3012|(462, 1)|const|float64
call_3011 = relay.TupleGetItem(func_561_call(relay.reshape(const_3012.astype('float64'), [14, 3, 11])), 1)
call_3013 = relay.TupleGetItem(func_564_call(relay.reshape(const_3012.astype('float64'), [14, 3, 11])), 1)
func_2847_call = mod.get_global_var('func_2847')
func_2849_call = mutated_mod.get_global_var('func_2849')
const_3050 = relay.const([[-8.739196,-9.213093,3.376138,4.442253,-7.581777,-1.799840,4.088330,3.368644,-3.213837,-1.109924,8.385232],[-3.964730,3.296812,-0.517184,-2.879392,-9.463595,-6.354989,0.784306,-7.965539,3.643131,9.126031,0.750452],[2.407774,-6.101622,-8.767213,-0.620640,-4.148525,-9.713728,-8.261681,4.068029,-7.791876,0.770867,-8.562161],[4.598631,1.970129,3.771374,-9.373309,8.780215,7.413872,2.589536,6.183671,-6.451659,-4.780677,3.240618],[3.758831,7.350926,-6.816952,6.386829,7.344505,-1.153648,0.161169,6.553162,-5.895883,7.236439,9.046292],[7.741351,-7.046406,-6.418036,-1.811163,1.517496,-1.846985,-8.879752,5.203755,2.089762,-5.098126,9.608850],[4.657508,8.320546,-0.755942,6.391895,3.663891,-7.083176,-5.258249,-8.144122,-6.423836,0.284610,4.693473],[2.664982,4.793153,9.751094,-1.868546,1.988700,-8.435726,-0.415221,0.156560,-1.970308,-3.050005,3.185160],[1.203320,-2.993133,4.502475,-6.604934,5.478003,-5.754479,-6.433280,-5.152379,-0.281151,-0.916951,-8.467424],[7.230389,-0.032927,-6.527000,-4.184403,-0.874244,3.573039,1.096528,-8.794366,7.637544,-6.788454,-5.376815],[-6.314809,3.088969,-9.742024,6.884180,-8.457372,-1.167968,-1.273227,-5.988310,-0.970298,-0.013375,4.191596],[3.433655,4.735942,5.293780,-5.343539,-5.156709,-6.269529,5.052836,9.512730,1.480919,-8.165865,-6.405251],[-1.063830,3.370258,5.635758,-5.714135,-9.909640,-9.062803,6.989779,3.226162,6.178200,-7.075747,4.312184],[-8.269025,-4.314632,3.944701,-0.535455,6.644039,-9.108878,8.539596,-0.817568,-5.731662,8.171841,-5.586972],[-4.512430,-3.204243,3.582636,3.014039,5.391718,7.115917,5.254716,-0.725495,-6.651725,-0.876899,-0.103888],[9.660196,9.516492,8.288165,-8.003847,6.174932,2.263374,2.664208,-0.967704,-8.780812,-9.099775,6.033506],[-3.192978,6.318915,4.857122,6.520035,-4.342971,-3.121572,-1.197011,-3.200220,6.640875,8.699263,-2.750546],[4.910320,9.356894,-9.903115,6.871970,9.016705,6.828845,4.424699,-2.789969,-2.008511,4.208354,-8.799615],[3.590561,-7.731944,3.158191,3.516869,-0.184263,-4.674750,-5.281487,-8.752495,2.692358,4.266210,-6.832080],[5.031294,8.771143,2.642032,6.228873,-4.306430,9.744110,5.478577,-5.759827,-7.049838,-4.768314,-7.325733],[3.067800,-9.412166,-4.450225,5.210523,-8.130043,5.831494,-0.103291,-8.490495,0.683576,-7.009161,-9.531180],[7.594066,0.313555,0.524774,-2.428674,-1.302705,-3.962123,-6.868734,4.520844,-8.856894,3.853854,3.113296],[-2.630800,6.106178,6.697954,-1.999438,8.662033,-4.375359,5.003133,-3.545055,-6.397865,1.139088,-3.031830],[3.894125,5.465193,0.573229,-3.503157,1.358096,2.846517,-2.868400,-0.761478,-9.605885,-1.341078,-7.507704],[-1.747236,3.364802,-9.876235,-8.255078,2.085790,-3.891434,6.382498,2.443379,-6.237608,-2.150379,6.561307],[-0.351652,-3.199840,0.178092,-8.297539,-3.288238,3.618569,1.516521,6.822466,-2.363545,1.303744,4.550971]], dtype = "float64")#candidate|3050|(26, 11)|const|float64
call_3049 = relay.TupleGetItem(func_2847_call(relay.reshape(const_3050.astype('float64'), [13, 2, 11])), 0)
call_3051 = relay.TupleGetItem(func_2849_call(relay.reshape(const_3050.astype('float64'), [13, 2, 11])), 0)
output = relay.Tuple([call_2973,call_2994,call_3011,const_3012,call_3049,const_3050,])
output2 = relay.Tuple([call_2974,call_2995,call_3013,const_3012,call_3051,const_3050,])
func_3055 = relay.Function([], output)
mod['func_3055'] = func_3055
mod = relay.transform.InferType()(mod)
output = func_3055()
func_3056 = relay.Function([], output)
mutated_mod['func_3056'] = func_3056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_3064 = relay.TupleGetItem(func_1672_call(), 0)
call_3065 = relay.TupleGetItem(func_1673_call(), 0)
const_3069 = relay.constdtype = "float64")#candidate|3069|(14, 11, 12)|const|float64
bop_3070 = relay.greater(call_3064.astype('bool'), relay.reshape(const_3069.astype('bool'), relay.shape_of(call_3064))) # shape=(14, 11, 12)
bop_3073 = relay.greater(call_3065.astype('bool'), relay.reshape(const_3069.astype('bool'), relay.shape_of(call_3065))) # shape=(14, 11, 12)
func_1681_call = mod.get_global_var('func_1681')
func_1683_call = mutated_mod.get_global_var('func_1683')
call_3077 = relay.TupleGetItem(func_1681_call(), 0)
call_3078 = relay.TupleGetItem(func_1683_call(), 0)
const_3083 = relay.const([[[7.481652,-3.344505,-7.865012,-5.009517,4.041703,1.543021,-4.525676,-6.710194,8.433948,2.015246,-4.203186,9.293360],[-3.147571,2.198216,-1.235574,-5.732926,0.438149,-5.983008,8.014753,-5.846475,-5.369244,-1.611623,9.021524,-4.414208],[3.097423,7.288360,-8.762911,6.696267,9.183364,9.566569,4.830112,-4.564200,7.292520,-2.716447,4.547131,4.074753],[-2.130340,-0.569266,-8.033052,6.402682,4.828683,5.651804,6.087508,-0.302004,-7.235835,8.291359,4.812024,-3.890250],[-3.511889,-7.186044,8.525646,6.917748,7.317498,0.229455,7.119418,5.278468,7.957536,-7.946514,7.853881,8.412797],[2.899221,0.034176,-1.781891,6.803246,-6.729916,2.131266,6.923894,-6.405956,-9.869469,2.542753,-4.377978,-1.042191],[4.906666,-9.850282,4.025094,-5.930902,-1.313851,-0.891568,8.877835,8.817997,0.272199,4.966509,-7.224383,7.173921],[8.983045,-6.311262,-6.051179,2.430684,6.297748,-1.315761,-3.571476,1.290423,3.514481,3.610468,0.595007,-1.814878],[0.863000,-5.714123,7.143006,0.952529,-7.243718,-5.307493,-3.409883,-3.804172,-7.771944,6.183739,-2.528444,5.897640],[-3.605023,-6.348294,-6.907182,-3.204821,2.776875,0.421706,-9.480106,2.032686,-2.622856,9.922140,-0.971301,-5.693987],[4.916807,7.360050,3.246309,6.079677,4.138378,9.423135,-7.123384,-6.841000,-6.514752,6.793552,-8.515785,9.014577]],[[-6.685913,1.247253,5.308733,6.626554,8.922681,-7.607370,-7.753978,-3.058286,0.731972,7.138347,9.057720,7.803424],[3.369157,4.227431,-3.519796,-8.222904,7.847457,9.488364,1.866792,0.567106,9.122303,3.263461,1.932962,0.912318],[-7.965903,9.353086,-3.497275,7.128686,4.623923,0.946092,-5.053685,-8.917018,-9.949159,-8.597861,4.279229,-8.289003],[9.326761,-2.652185,-9.943853,2.771807,-4.570242,-7.493162,-1.502693,-9.669802,-0.058846,7.936261,7.057844,9.791777],[9.183159,0.885127,0.699136,1.713286,-4.975895,-3.820906,5.596605,7.246293,-5.150572,8.472321,7.581079,-2.591535],[7.378154,-8.691097,9.905376,-3.305811,8.488243,1.602884,-7.307672,1.647969,-1.143265,9.705434,-9.097488,3.505456],[-9.873555,1.622200,-4.430160,-0.547935,4.816004,-0.627502,-6.494889,9.168747,8.891299,-0.947746,5.926114,-5.796210],[3.139503,7.399906,-6.362271,-3.989319,0.543462,-5.340604,0.270746,-4.823183,-1.691685,-5.808631,4.166151,-2.411760],[-2.972064,-6.883481,6.157892,-6.914834,-1.571742,-4.478479,-6.039250,-5.376573,-2.377565,-5.161036,2.310364,-2.332392],[8.832486,-7.571778,-3.980732,5.116031,8.276160,-6.339462,-2.172268,-3.561816,-6.028548,8.155090,5.990572,3.296368],[2.694826,-0.690342,-0.251216,-4.606378,9.411726,-4.436335,4.390265,-5.017352,-3.198739,7.547365,7.543628,5.106933]],[[-6.950421,3.423848,-0.703405,3.669286,-0.264811,-7.488595,-4.718569,-5.075827,2.043167,1.027564,0.698398,-8.208043],[-4.125704,-1.661059,4.816024,-0.242084,6.607690,4.936338,-0.440553,5.799295,-2.349281,9.739381,-0.881238,-5.160540],[-7.493167,-1.628430,-6.404127,7.153861,7.347543,-5.708968,-0.648496,-3.067687,-3.011520,0.911313,3.214060,0.597306],[1.630135,-2.373841,9.782748,5.508574,1.069020,1.581968,-2.264141,-5.202020,-1.047308,-6.963404,0.936260,-3.070895],[5.129135,-7.656562,-2.124646,-1.522422,-2.595541,7.968331,-2.994845,-3.137973,6.113215,0.855669,-7.841180,2.990034],[-5.448959,8.827500,-5.543890,-0.053155,-8.544588,-3.454684,-5.139032,-5.109465,-2.476908,-9.101333,-4.028821,-5.535042],[-1.229633,-2.790812,5.870885,-5.339854,8.115170,-8.130860,1.908460,8.329236,9.368813,8.010188,8.576115,6.397736],[0.032395,-4.684950,-2.556880,6.607307,-1.777279,6.819534,5.263375,5.159658,-9.429071,6.541846,-6.092274,6.994403],[-1.641172,-6.553304,-9.532397,3.657709,2.482188,9.894350,-1.840280,7.128564,-4.191511,8.480535,-0.450372,2.419551],[-1.535847,-8.949299,5.573235,-1.468885,-1.138003,9.913410,-5.571338,4.824963,-6.841776,3.087557,4.077297,3.148775],[-7.634296,-0.388632,-0.774374,2.256341,-7.941071,5.547953,7.827592,2.663771,-8.492180,-6.577585,-7.076177,1.537401]],[[-2.415440,0.671448,5.085795,-6.449363,5.891928,-6.997093,-4.862148,-0.484957,8.007835,-7.870488,-8.636071,8.943419],[0.022183,3.831388,5.566945,-1.268849,-4.858819,0.215918,6.817295,2.134186,-4.944077,-3.235072,5.496356,5.325006],[-2.895891,1.793366,-5.171898,-8.188447,-6.053676,9.492411,-7.610729,1.998902,5.558769,-7.496122,-8.492731,-8.516771],[7.436957,1.561078,3.918926,5.518770,4.189941,-3.704659,8.231276,5.023424,4.639494,5.021217,-6.566047,-0.773746],[-7.960597,-3.714682,-9.985386,3.070022,0.553283,-0.245390,-8.418348,8.934975,-3.603793,9.376735,-6.064846,1.246528],[0.814139,8.504867,1.485253,9.746679,-1.827481,6.604480,-2.776541,-1.909635,9.438653,1.297429,-9.071755,0.161777],[-9.694231,4.449889,9.344579,-5.733999,7.745873,6.865826,4.069061,-0.731580,-6.160605,-9.322979,5.886499,0.267542],[4.207457,-1.405404,3.079425,-7.573126,-4.085198,-4.517000,-6.256903,-3.102637,-9.523798,9.346753,-8.447655,7.557265],[7.511070,-6.730920,-9.873907,9.780778,-8.066665,5.697381,-5.070149,7.833259,4.794620,-6.738272,6.505765,-1.074743],[-7.445016,0.692309,0.788829,-5.086473,0.380677,9.376023,-5.066914,5.326877,-0.171118,-7.267720,5.465036,0.330586],[0.958839,-2.312130,-0.450739,-2.895235,-2.373529,-2.293914,-7.520390,-4.631524,5.537695,6.970936,7.964198,-4.421921]],[[9.753934,-0.717020,-2.627960,-2.778216,7.299584,-5.221255,3.516321,3.792823,4.535750,3.637545,-8.737348,8.533818],[-4.693745,2.578041,4.229406,7.608997,-4.423999,0.138164,-8.949182,-3.995546,1.294333,4.408536,9.883297,-5.470808],[-6.438969,-7.502873,-9.820939,-4.039979,-8.298786,-1.309079,9.077284,-6.603726,8.231591,8.232271,7.213927,7.085363],[-9.077702,7.005415,6.015238,-0.392277,-5.120337,-3.485534,-5.809824,6.912770,-0.841646,4.962302,4.570983,9.163246],[4.556123,-4.392614,-8.257321,8.883720,6.297302,-0.646650,3.892384,-5.132030,6.331082,-2.511078,-8.530659,-1.474069],[8.191257,-7.943835,-0.534264,6.044036,-5.261648,-6.705312,3.444476,-2.263238,7.040325,-8.307041,4.702026,-1.882541],[9.899620,4.508308,-5.658104,0.075645,5.628925,-4.751971,3.551590,7.699462,-3.207528,5.956550,-3.137722,-8.792358],[-1.295636,-7.733924,5.233826,0.775302,8.087550,-0.521281,-6.916596,5.663514,-6.791056,5.699878,5.767076,3.157646],[5.413813,3.731715,-3.904172,8.114057,-5.813083,8.288472,-0.594803,8.216868,6.582919,6.195460,6.135396,1.718203],[-4.794109,3.448601,8.954276,9.207696,1.311744,-0.172546,-8.953673,3.905498,6.071684,9.113035,4.680070,4.531685],[-9.178246,-8.565026,0.009194,3.928981,5.600564,9.254809,-3.559053,2.175578,-2.967331,3.681218,5.357049,0.046741]],[[5.306103,-6.878507,3.615239,6.227057,-1.769637,3.403715,1.652697,7.988113,-2.177757,-0.771568,-1.434845,-6.840424],[6.685524,8.920667,-1.770016,-2.247785,1.622015,-2.945093,-1.167176,3.919918,-9.724938,3.548278,7.231502,-0.756827],[6.656505,-8.383894,-4.182384,-9.109973,6.054035,-6.881051,8.427701,8.044542,7.505882,1.543163,-8.465248,-5.079802],[-4.517742,-3.015940,-4.880813,0.832038,4.567854,5.130026,-7.412472,-7.175413,-7.998870,-4.094047,2.670851,-0.836562],[6.641692,-9.733156,-8.855444,-2.883327,-2.737811,6.192421,7.010393,0.601891,-7.059990,-4.325890,-6.036539,-8.125288],[7.720264,-2.259841,2.515262,0.998994,1.829606,-2.572567,-4.343299,-3.871912,3.956409,-3.709280,-0.771513,-6.606277],[-7.632627,0.416230,1.898091,6.653189,-5.069892,8.417681,0.326756,8.644387,-6.015525,-1.226242,-0.805339,-2.214940],[-1.173595,9.183586,-9.805309,-6.720942,-5.133921,0.190930,5.873311,9.780695,1.463222,1.397552,6.375150,8.033142],[-9.299900,5.005584,-7.139482,5.298251,-1.192537,9.720530,-9.227491,7.961121,7.627986,-8.398510,-3.841547,2.047479],[-5.397196,-9.135895,2.416910,2.638499,9.643896,-7.250704,-3.462348,7.034504,-1.588865,9.404341,-4.413229,-4.255611],[-0.987564,-3.717515,-3.140908,-2.852264,5.191822,-4.790029,-2.436685,-9.252961,-4.719253,4.625095,-6.943411,3.699853]],[[1.084450,0.593890,-1.229488,8.731516,-6.506727,5.058742,8.509638,6.227076,-3.249598,8.541657,-5.777832,-8.024451],[5.681771,1.901712,-4.761525,-9.988942,-4.722637,6.377257,2.002012,9.632807,8.717017,-2.172593,-6.060581,0.101088],[-5.256754,2.320506,-1.414469,7.739313,8.460060,-4.631141,-0.120573,5.658526,-8.641050,9.438203,0.541541,-8.451615],[1.841533,-7.961216,-0.159512,-8.242311,-8.156673,8.234313,7.071873,-4.195221,-0.771532,3.632342,-5.871605,5.349685],[4.374215,-5.281333,7.550821,3.083981,-3.474908,-5.546370,1.810986,7.212816,-4.417694,2.115276,6.518265,-5.971423],[-1.941563,-9.774575,-6.888472,5.701715,-8.028669,-4.105929,-5.910167,-1.811862,3.244816,-0.552979,6.621151,4.104829],[-0.575258,-3.631719,-7.783423,9.164924,-4.831806,9.536840,5.584306,-8.549444,3.549779,6.558783,7.995387,-4.428535],[-0.697663,5.838165,-2.661621,4.844768,7.359609,-0.678385,-6.987100,-2.359286,-9.887466,8.148801,8.869418,0.112898],[3.162435,-9.225293,0.295642,1.770040,0.539698,4.441497,4.662945,6.076693,-7.552282,1.688550,4.442383,4.189132],[2.498546,-4.963472,6.813507,4.040968,-0.823135,9.579388,-3.839446,-5.572117,5.331129,8.940576,-8.078402,-1.989836],[2.998078,-5.214754,6.699511,-9.978718,-3.180513,4.101365,-1.622687,-0.285857,4.082740,-3.815969,6.822544,2.467981]],[[5.153926,1.631040,9.624897,-8.949428,5.851941,-8.649858,8.900033,-9.410274,5.323152,2.036928,-1.291841,-2.480985],[6.597122,-6.673720,9.285542,1.686701,-6.234383,2.140376,-3.859908,-9.772433,-5.859570,4.986398,2.623087,1.286935],[0.641097,5.031473,8.917769,2.170305,-3.089649,6.617612,-8.620026,-5.396799,2.305434,-5.994112,-2.442794,-3.496184],[3.291785,-2.374149,0.306362,0.101315,-8.028498,-2.283382,8.137886,-9.857034,9.692582,8.288143,-1.561440,5.248192],[0.388152,-4.316319,-5.785057,-2.575753,-0.764176,1.031630,7.782533,-9.020425,6.855250,7.653402,0.639083,-5.885725],[5.462114,-3.472751,-6.318029,4.301233,8.766257,2.148897,-9.894206,-7.539372,-6.830207,-0.034226,-1.880940,5.888397],[-8.249854,-5.149826,-0.355576,-5.857813,8.699145,8.398624,-3.425464,2.083198,-1.801472,-4.143758,4.702622,7.433054],[-6.483353,8.054436,6.196493,-4.207376,9.951436,8.821522,9.366035,2.703515,-2.661557,-8.441394,9.963306,-0.749273],[-2.597398,7.934993,0.669539,3.779388,-0.218522,0.910226,0.493899,1.459428,-1.785105,-1.213462,7.584509,-4.425585],[2.155670,-0.747643,6.423011,-1.973926,8.304086,2.979083,4.566370,-5.406475,6.587700,0.345861,1.804449,8.351802],[9.424045,-2.044943,1.973094,-8.605614,2.076432,0.571982,2.042031,5.972043,4.542850,-5.863780,3.325114,8.037514]],[[-9.222383,-6.455696,9.463069,6.172768,0.821708,4.943651,3.545283,1.745934,5.746143,7.638940,7.449467,8.160909],[8.056523,4.003888,4.918191,3.591941,0.945192,4.525280,2.278647,0.107459,-8.381670,7.090804,-8.889149,3.137279],[0.654976,-1.084280,8.098557,-2.205762,0.099403,7.606850,-5.961790,-7.813207,-8.510207,-7.468294,6.165885,3.326988],[8.484415,7.522045,7.654646,2.994204,4.682855,6.777670,2.579047,3.972407,9.389380,0.830880,7.983623,7.599234],[-8.163652,7.564427,3.822328,4.553024,9.162619,-7.711145,0.056819,9.879033,-8.476583,1.757394,-5.145157,-6.714449],[-7.880468,6.642995,-4.658814,2.603574,5.037255,-9.551272,2.488791,8.927231,-5.589425,-6.334764,9.619912,-4.189965],[-1.723871,6.800845,-4.881656,9.242453,-1.190807,-1.119504,9.774531,8.050134,-1.639115,-1.542065,7.393362,-3.917995],[7.435682,-0.104935,-1.836485,-1.067970,-4.412075,-9.105715,-8.717344,2.399254,-8.543461,5.909753,-7.209164,-2.897219],[-2.695743,-5.112092,-5.118414,0.148589,7.980510,-6.569546,-9.738611,5.816429,0.835501,1.790886,1.321523,-1.732350],[-8.479520,8.645437,-3.168725,5.124397,-4.583019,-1.997380,-2.581201,9.287545,0.964851,2.219368,-2.249448,9.640954],[-8.548578,0.357988,6.252346,-5.483373,7.501473,-5.444606,5.409679,-9.578534,-8.393582,3.152136,-8.187125,-9.719223]],[[-9.917172,1.052553,-9.200829,-4.461121,6.939828,-6.184430,8.574729,-4.742548,9.941658,-9.523505,-8.217295,-0.505075],[-9.383379,3.289077,-4.620647,-8.004118,-6.175296,-7.445976,-7.515552,5.815901,-8.583166,4.920346,-4.491449,3.508953],[-7.676666,1.939346,-1.591771,0.104545,5.063995,-6.356283,9.424268,-7.407115,-6.393752,-2.439827,-0.524759,7.623993],[-3.029139,-8.559676,-6.486161,-0.003272,-7.950084,-9.323675,1.210367,0.133443,-6.816947,0.984579,-4.983547,3.482392],[-3.952725,-6.463034,-7.185687,2.964634,-0.744041,7.070360,1.968877,8.852099,4.272269,5.940787,-0.670235,8.222364],[-6.567823,-6.405918,1.110225,4.608799,7.803999,-4.583253,9.648668,-3.054845,5.388213,5.878324,4.956410,-4.197278],[-2.363742,-0.669878,-5.180074,9.341055,-2.037809,-0.707125,-0.584236,3.563258,2.013653,5.916453,1.443898,-4.789970],[1.770457,-9.834213,-0.005577,-1.795305,-8.452255,0.137880,-6.146313,4.627727,-5.751654,-5.780930,0.082264,0.109417],[4.840956,-1.187156,-3.652160,-0.313667,-4.626675,7.397164,7.936257,7.117210,-7.102756,0.822281,4.170418,3.483946],[-4.984599,-3.824150,0.217590,-1.725260,-3.776416,2.453232,6.469900,0.751595,-3.518931,-4.040477,-2.789664,1.999162],[8.038989,0.998039,5.076384,-2.743139,9.843175,-3.291386,-9.596190,6.153025,9.249970,-7.163133,-2.330756,-4.254363]],[[-4.622178,5.162634,-4.547633,1.980714,2.016580,-6.449035,7.572135,-6.869345,-8.934109,8.411665,8.539879,2.238451],[0.393945,7.445686,8.737617,6.821044,-9.356294,-3.964307,5.873219,-3.239345,9.167860,-8.465929,-4.137639,9.352568],[4.353690,7.375283,0.355798,5.792554,-2.770449,6.807997,-3.332582,7.951207,3.416851,1.389770,6.480164,2.525658],[-8.121846,8.001626,-6.088413,1.174605,3.644668,-0.912951,-8.297481,-4.863754,-9.863551,-9.466893,-8.064022,5.036375],[-0.079725,-8.842510,8.525940,-5.989886,9.741260,-6.580057,-8.190190,3.960117,-1.718675,-2.225350,8.725976,-6.071900],[-8.284314,-6.228761,-4.035211,-2.841693,-2.741219,8.367007,-1.838065,-1.913727,6.800366,1.392001,-2.343612,-6.740510],[-3.903392,6.864082,2.603512,3.314277,1.438907,-1.527963,-5.818482,-6.150626,0.250200,-9.401246,3.775379,-0.507776],[5.371984,-5.761902,-5.229782,-2.809098,4.262825,6.464243,3.976774,8.088062,-6.005989,1.776868,-9.727432,-2.940977],[3.407070,-9.116990,0.623901,2.270642,-2.081843,-4.537288,-0.310278,-1.229748,9.290091,-6.578958,-7.246553,5.910038],[4.687131,8.428531,-3.694282,-9.107595,-1.788408,-0.419037,8.138574,-1.240485,6.390779,-6.772842,-2.435963,5.144996],[-6.900483,-2.037811,2.114801,-7.119625,-2.250073,3.425913,4.572328,-9.370865,-8.008793,7.323562,5.793141,1.465187]],[[-0.787499,-9.965126,-7.643334,-5.429673,-9.919614,-4.665753,-6.939275,-3.821190,-5.282620,9.040213,8.571045,-6.804611],[-9.736067,9.352523,2.421196,-5.715266,6.148331,-5.392350,3.962232,-3.184869,-8.006043,6.133898,3.037036,2.674723],[5.001717,6.051863,0.566981,-8.112918,6.548965,2.228258,4.647468,9.844572,-7.401117,-0.547710,-8.074516,1.672610],[9.666138,-5.235988,8.044921,8.180748,-1.350106,7.473289,-2.769087,-2.390041,-8.484320,-6.319124,3.524302,-6.297022],[-5.790368,8.675457,0.382192,1.586984,-2.271362,-0.334580,1.900219,-0.947124,-9.108902,6.614365,-3.766012,0.429229],[3.309891,-6.934866,6.021583,7.969061,2.583584,-9.071969,2.225392,-2.911614,2.605342,8.962171,-7.363654,2.234691],[-4.770739,9.537773,-3.657675,8.539584,-6.996647,-4.539039,-1.934642,0.912576,3.776237,-2.590733,9.172273,-0.260466],[1.976514,-0.516986,7.571230,4.192053,-4.303454,-3.860387,5.859375,7.962145,9.855754,4.896111,9.611312,-4.995564],[-3.480543,7.063884,0.811231,2.327942,-0.353551,-0.165097,0.778459,9.900471,-4.711607,-8.017467,4.831649,3.268695],[4.122997,-5.825292,-7.482766,7.704446,0.961079,-2.334036,-3.892382,-0.458663,9.810519,9.282788,-1.617897,6.564426],[-3.245532,-9.358255,8.234810,1.629105,-5.147795,5.755167,-5.190203,3.645102,5.573217,-8.081815,8.358618,-0.836238]],[[5.611742,1.499661,-1.543475,-0.657307,-9.965452,-4.302024,-0.612608,2.683874,1.855094,5.333348,7.884738,-8.631732],[4.463563,4.543331,8.799653,2.236414,7.202201,-3.330085,3.358230,-6.164225,9.945077,9.072988,-3.432428,-4.859438],[4.917363,8.426025,-6.804802,-1.742531,-4.347091,0.835877,7.010052,-3.025336,2.195640,6.324403,1.738543,3.917268],[-5.407827,5.334760,8.621338,6.474883,8.834107,6.312969,-1.469557,9.335828,4.401651,-7.744137,-4.722686,1.009085],[4.547902,-9.518075,4.236839,4.891680,1.186901,-8.270126,-2.870581,0.953525,3.165410,2.475440,-6.985339,-2.960161],[1.760463,7.652969,-8.953703,-1.704419,4.500898,-2.344780,-7.970289,-5.001263,-1.200862,-3.481586,-4.376172,1.966770],[-7.780525,8.725044,0.836149,1.259630,-0.209212,-4.290113,7.928497,-1.468687,-1.193088,5.466275,-2.241978,-4.500219],[0.745804,7.182604,-0.231177,6.469800,-9.800496,-6.024634,-9.557852,-4.413602,-9.452715,3.564888,9.727326,-2.559093],[3.187641,-1.156058,4.927499,-8.877504,8.609568,7.236256,-1.122752,8.323572,5.111996,4.872554,1.864234,4.221501],[-4.936576,2.943937,-3.743488,9.039880,-8.023310,-9.051966,-4.961791,-3.530497,-7.503880,-0.130986,-4.914702,2.870771],[9.714367,0.958223,7.756689,-8.086236,-8.023505,8.093115,2.495827,-1.371190,4.245669,0.058541,2.431842,0.869990]],[[2.717223,2.062021,6.414734,-8.088582,5.872640,7.191906,-2.731053,-2.932517,-9.374900,3.592832,7.948152,7.424403],[-3.098999,-9.051549,-5.180750,-4.090501,4.995108,5.924564,-2.273288,7.972614,1.916305,-2.869876,-4.468554,-5.093716],[7.721036,-0.289041,2.592921,8.964658,0.211259,-7.859581,5.042607,6.069683,-3.463538,-0.457371,-9.839496,-8.004700],[-2.823499,5.419680,4.815023,5.569101,-1.994838,7.822573,4.057024,3.486654,3.103587,-5.892485,-7.740983,3.438650],[-4.141503,-0.002755,-1.852461,2.349999,6.024052,4.308025,-9.089312,5.136947,0.147421,9.798838,3.746791,3.695521],[-1.259022,-7.942333,6.055877,0.793078,4.028166,5.376609,-7.998246,-4.755912,2.420268,-4.513255,8.180990,-4.835633],[9.982582,0.555917,1.200749,8.029370,0.528614,-9.854801,5.843553,-9.160152,1.993232,-5.591826,-9.376596,-0.977598],[0.249841,-1.375317,-0.316398,2.043656,-6.587679,5.854614,3.306922,8.997499,-2.340890,6.074091,5.454173,-8.773339],[3.939893,-9.808675,0.403210,-1.482721,8.887839,1.541282,1.816541,8.565377,-3.751937,9.630673,5.921236,-7.726891],[4.181424,-6.374642,6.321790,3.570625,0.088803,2.475046,-9.542345,7.644374,-8.524137,-0.109115,8.876241,7.442492],[-0.107485,2.381322,9.020425,0.888542,-3.343627,5.842025,-8.486273,-5.289460,-6.902728,-6.028391,6.403600,-4.091446]]], dtype = "float64")#candidate|3083|(14, 11, 12)|const|float64
bop_3084 = relay.floor_divide(call_3064.astype('float64'), relay.reshape(const_3083.astype('float64'), relay.shape_of(call_3064))) # shape=(14, 11, 12)
bop_3087 = relay.floor_divide(call_3065.astype('float64'), relay.reshape(const_3083.astype('float64'), relay.shape_of(call_3065))) # shape=(14, 11, 12)
func_2416_call = mod.get_global_var('func_2416')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_3090 = func_2416_call()
call_3091 = func_2416_call()
uop_3094 = relay.cosh(const_3083.astype('float64')) # shape=(14, 11, 12)
func_1101_call = mod.get_global_var('func_1101')
func_1104_call = mutated_mod.get_global_var('func_1104')
const_3099 = relay.const([9.462585,9.163050,1.310647,6.998921,1.480174,-8.162900,3.792000,-6.102866,-7.638182,5.719749,-6.546336,5.913609,-1.867583,-8.819212,2.880480,5.244288,-8.272230,7.933084,4.849673,4.581265,0.269118,0.370383,-7.386752,6.877237,-2.826135,1.012836,-7.271438,6.865997,-6.946808,-5.548370,-8.711432,-7.994514,-6.726302,-1.137724,-6.635706,-6.609357,-9.407593,1.234724,-1.152722,8.302092,2.569939,0.752836,1.320549,-9.995253,-5.160091,3.178372,-9.763463,-5.074536,-3.169002,-2.159034,-0.679563,-5.132303,-9.127881,1.927589,7.635060,1.474471,-8.347663,-2.917845,4.388777,4.914621,4.703222,5.057430,-8.070102,-7.144508,-8.390241,-4.750726,2.789912,2.903145,-8.440952,-0.119738,5.661722,-5.283923,-4.633052,-9.473983,2.761231,-9.072845,-7.351988,2.177447,7.406482,7.602208,-0.886306,-5.920233,1.370875,-3.142976,-1.839820,1.411600,-4.427625,5.393583,-6.278169,9.221597,8.785549,-7.754364,0.549934,0.060114,6.098125,-6.197057,-1.555008,7.522645,2.267142,6.724785,3.812575,0.538631,-2.253927,-4.171966,-6.067630,-1.591847,4.580246,-2.214060,-4.306692,1.232925,-6.099268,-8.122713,-4.671677,-4.641729,4.503723,-9.567071,-4.997151,-6.944424,-0.075853,8.456874,-9.544173,9.300563,-7.338133,-4.985197,2.226115,-0.512541,-6.322266,-5.833640,7.671292,-8.182965,-6.377129,4.432120,-0.065240,7.861150,-9.063640,-1.201938,-4.107920,0.565051,9.122058,-0.368614,3.058898,-4.178226,6.996026,8.433284,-8.296654,3.962720,-7.990244,3.927729,-5.897065,7.886431,-1.389567,-1.069950,4.141331,2.172849,2.684286,1.558062,3.507877,-1.840714,-7.486040,3.982685,6.743391,8.357216,8.769296,4.718570,9.945037,-9.393799,-5.031926,3.981405,-2.883324,-7.021696,-5.370238,2.856480,2.787193,-9.254327,7.377611,-0.629023,-0.055521,-6.456188,8.867887,6.898002,-1.057365,-5.407267,-4.922278,3.363034,-4.015564,2.569253,1.914715,-1.256139,-6.748930,2.759298,-0.928475,7.965534,3.832907,-8.220289,1.577050,-6.773511,-1.735165,-0.134894,-0.355645,3.683116,2.552764,0.674456,2.808615,6.091870,-5.391574,9.897482,8.543866,4.783278,-6.668968,3.948762,3.269921,-1.302544,-2.460305,8.945407,-3.600525,1.689909,8.119880,-3.301023,9.099600,-4.776601,-6.191469,-8.623531,-3.633732,8.234332,-6.946669,-4.343673,-4.769620,9.381795,3.587974,5.148957,4.659481,5.376244,2.442031,-2.440467,-7.471419,-8.855297,-6.728266,-6.665714,-4.682013,-6.271150,-7.234257,-1.256942,3.131923,4.862048,-4.500665,-5.145094,9.634542,-6.712873,4.081668,0.873789,-2.055663,7.868740,6.345562,0.662461,6.177072,-6.277488,5.698921,-2.259606,-1.431754,4.524718,-6.072668,-6.059885,-7.811655,-4.219649,0.164698,9.351939,2.805030,5.065871,-6.045382,-8.342608,-1.580255,4.583396,6.175741,-5.965037,1.213102,9.528578,1.965112,4.773709,-6.992845,3.927513,-5.630014,8.650569,6.062488,-6.366522,-6.468986,5.935157,6.534764,-4.219521,-0.899492,-7.948987,-6.221080,7.411507,8.463874,6.413777,-2.132566,-9.087813,1.923039,-0.296107,-1.073302,-3.438286,2.672643,7.063506,-9.858651,-5.162049,-6.100930,-5.668992,-9.577425,-5.876252,5.859627,6.885807,-4.679109,-8.436997,-9.313308,4.069570,0.766104,1.924554,0.880832,9.537426,-5.627314,5.121689,-5.501340,5.523185,8.877965,-6.828911,-1.397517,2.310513,5.174790,-7.308159,-0.731084,-7.923934,-6.862365,1.474719,-2.957922,6.232280,-0.989238,2.810021,6.740093,2.443484,-6.860030,1.507646,3.734391,-9.742800,-0.707135,-9.833343,-1.516315,-2.923535,-7.745862,-0.891248,-0.180364,5.892239,-8.937885,3.608989,-6.098924,8.103422,-6.738190,7.374392,6.070619,9.994355,-6.852466,-5.609017], dtype = "float64")#candidate|3099|(360,)|const|float64
call_3098 = relay.TupleGetItem(func_1101_call(relay.reshape(const_3099.astype('float64'), [10, 9, 4])), 0)
call_3100 = relay.TupleGetItem(func_1104_call(relay.reshape(const_3099.astype('float64'), [10, 9, 4])), 0)
output = relay.Tuple([bop_3070,call_3077,bop_3084,call_3090,uop_3094,call_3098,const_3099,])
output2 = relay.Tuple([bop_3073,call_3078,bop_3087,call_3091,uop_3094,call_3100,const_3099,])
func_3102 = relay.Function([], output)
mod['func_3102'] = func_3102
mod = relay.transform.InferType()(mod)
output = func_3102()
func_3103 = relay.Function([], output)
mutated_mod['func_3103'] = func_3103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3170 = relay.var("var_3170", dtype = "float64", shape = (14, 15, 16))#candidate|3170|(14, 15, 16)|var|float64
uop_3171 = relay.acos(var_3170.astype('float64')) # shape=(14, 15, 16)
func_2543_call = mod.get_global_var('func_2543')
func_2544_call = mutated_mod.get_global_var('func_2544')
call_3174 = relay.TupleGetItem(func_2543_call(), 0)
call_3175 = relay.TupleGetItem(func_2544_call(), 0)
output = relay.Tuple([uop_3171,call_3174,])
output2 = relay.Tuple([uop_3171,call_3175,])
func_3189 = relay.Function([var_3170,], output)
mod['func_3189'] = func_3189
mod = relay.transform.InferType()(mod)
mutated_mod['func_3189'] = func_3189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3190 = relay.var("var_3190", dtype = "float64", shape = (14, 15, 16))#candidate|3190|(14, 15, 16)|var|float64
func_3189_call = mutated_mod.get_global_var('func_3189')
call_3191 = func_3189_call(var_3190)
output = call_3191
func_3192 = relay.Function([var_3190], output)
mutated_mod['func_3192'] = func_3192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_3199 = relay.TupleGetItem(func_2175_call(), 0)
call_3200 = relay.TupleGetItem(func_2177_call(), 0)
output = relay.Tuple([call_3199,])
output2 = relay.Tuple([call_3200,])
func_3214 = relay.Function([], output)
mod['func_3214'] = func_3214
mod = relay.transform.InferType()(mod)
output = func_3214()
func_3215 = relay.Function([], output)
mutated_mod['func_3215'] = func_3215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_3224 = relay.TupleGetItem(func_2175_call(), 0)
call_3225 = relay.TupleGetItem(func_2177_call(), 0)
output = relay.Tuple([call_3224,])
output2 = relay.Tuple([call_3225,])
func_3227 = relay.Function([], output)
mod['func_3227'] = func_3227
mod = relay.transform.InferType()(mod)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3227_call = mutated_mod.get_global_var('func_3227')
call_3228 = func_3227_call()
output = call_3228
func_3229 = relay.Function([], output)
mutated_mod['func_3229'] = func_3229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2012_call = mod.get_global_var('func_2012')
func_2013_call = mutated_mod.get_global_var('func_2013')
call_3250 = func_2012_call()
call_3251 = func_2012_call()
output = call_3250
output2 = call_3251
func_3256 = relay.Function([], output)
mod['func_3256'] = func_3256
mod = relay.transform.InferType()(mod)
output = func_3256()
func_3257 = relay.Function([], output)
mutated_mod['func_3257'] = func_3257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_3292 = relay.TupleGetItem(func_2175_call(), 0)
call_3293 = relay.TupleGetItem(func_2177_call(), 0)
output = call_3292
output2 = call_3293
func_3305 = relay.Function([], output)
mod['func_3305'] = func_3305
mod = relay.transform.InferType()(mod)
mutated_mod['func_3305'] = func_3305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3305_call = mutated_mod.get_global_var('func_3305')
call_3306 = func_3305_call()
output = call_3306
func_3307 = relay.Function([], output)
mutated_mod['func_3307'] = func_3307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_3335 = relay.TupleGetItem(func_1672_call(), 0)
call_3336 = relay.TupleGetItem(func_1673_call(), 0)
output = call_3335
output2 = call_3336
func_3351 = relay.Function([], output)
mod['func_3351'] = func_3351
mod = relay.transform.InferType()(mod)
mutated_mod['func_3351'] = func_3351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3351_call = mutated_mod.get_global_var('func_3351')
call_3352 = func_3351_call()
output = call_3352
func_3353 = relay.Function([], output)
mutated_mod['func_3353'] = func_3353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1540_call = mod.get_global_var('func_1540')
func_1541_call = mutated_mod.get_global_var('func_1541')
call_3373 = relay.TupleGetItem(func_1540_call(), 0)
call_3374 = relay.TupleGetItem(func_1541_call(), 0)
output = relay.Tuple([call_3373,])
output2 = relay.Tuple([call_3374,])
func_3384 = relay.Function([], output)
mod['func_3384'] = func_3384
mod = relay.transform.InferType()(mod)
output = func_3384()
func_3385 = relay.Function([], output)
mutated_mod['func_3385'] = func_3385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_3509 = relay.TupleGetItem(func_2175_call(), 0)
call_3510 = relay.TupleGetItem(func_2177_call(), 0)
output = relay.Tuple([call_3509,])
output2 = relay.Tuple([call_3510,])
func_3512 = relay.Function([], output)
mod['func_3512'] = func_3512
mod = relay.transform.InferType()(mod)
output = func_3512()
func_3513 = relay.Function([], output)
mutated_mod['func_3513'] = func_3513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3305_call = mod.get_global_var('func_3305')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_3560 = func_3305_call()
call_3561 = func_3305_call()
const_3569 = relay.const([[[-7.451811,-4.972044,-9.473061,5.022509,-8.784627,3.915712,-9.199761,-1.237116,4.376796,5.238075]],[[-5.713416,-3.821004,-2.266619,2.373872,-2.768939,3.877334,-4.296677,-2.692629,5.183739,-4.767582]],[[3.463052,8.088208,-8.857465,0.432990,-3.880696,5.982240,-7.893870,-6.103185,1.322703,2.557390]]], dtype = "float64")#candidate|3569|(3, 1, 10)|const|float64
bop_3570 = relay.maximum(call_3560.astype('int16'), const_3569.astype('int16')) # shape=(3, 1, 10)
bop_3573 = relay.maximum(call_3561.astype('int16'), const_3569.astype('int16')) # shape=(3, 1, 10)
output = relay.Tuple([bop_3570,])
output2 = relay.Tuple([bop_3573,])
func_3581 = relay.Function([], output)
mod['func_3581'] = func_3581
mod = relay.transform.InferType()(mod)
output = func_3581()
func_3582 = relay.Function([], output)
mutated_mod['func_3582'] = func_3582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2718_call = mod.get_global_var('func_2718')
func_2719_call = mutated_mod.get_global_var('func_2719')
call_3595 = relay.TupleGetItem(func_2718_call(), 0)
call_3596 = relay.TupleGetItem(func_2719_call(), 0)
func_3055_call = mod.get_global_var('func_3055')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_3613 = relay.TupleGetItem(func_3055_call(), 1)
call_3614 = relay.TupleGetItem(func_3056_call(), 1)
output = relay.Tuple([call_3595,call_3613,])
output2 = relay.Tuple([call_3596,call_3614,])
func_3626 = relay.Function([], output)
mod['func_3626'] = func_3626
mod = relay.transform.InferType()(mod)
mutated_mod['func_3626'] = func_3626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3626_call = mutated_mod.get_global_var('func_3626')
call_3627 = func_3626_call()
output = call_3627
func_3628 = relay.Function([], output)
mutated_mod['func_3628'] = func_3628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2012_call = mod.get_global_var('func_2012')
func_2013_call = mutated_mod.get_global_var('func_2013')
call_3656 = func_2012_call()
call_3657 = func_2012_call()
func_2012_call = mod.get_global_var('func_2012')
func_2013_call = mutated_mod.get_global_var('func_2013')
call_3672 = func_2012_call()
call_3673 = func_2012_call()
func_1886_call = mod.get_global_var('func_1886')
func_1888_call = mutated_mod.get_global_var('func_1888')
call_3676 = func_1886_call()
call_3677 = func_1886_call()
uop_3680 = relay.cos(call_3676.astype('float32')) # shape=(14, 11, 12)
uop_3682 = relay.cos(call_3677.astype('float32')) # shape=(14, 11, 12)
output = relay.Tuple([call_3656,call_3672,uop_3680,])
output2 = relay.Tuple([call_3657,call_3673,uop_3682,])
func_3684 = relay.Function([], output)
mod['func_3684'] = func_3684
mod = relay.transform.InferType()(mod)
mutated_mod['func_3684'] = func_3684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3684_call = mutated_mod.get_global_var('func_3684')
call_3685 = func_3684_call()
output = call_3685
func_3686 = relay.Function([], output)
mutated_mod['func_3686'] = func_3686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1540_call = mod.get_global_var('func_1540')
func_1541_call = mutated_mod.get_global_var('func_1541')
call_3687 = relay.TupleGetItem(func_1540_call(), 0)
call_3688 = relay.TupleGetItem(func_1541_call(), 0)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
var_3692 = relay.var("var_3692", dtype = "float64", shape = (462,))#candidate|3692|(462,)|var|float64
call_3691 = relay.TupleGetItem(func_561_call(relay.reshape(var_3692.astype('float64'), [14, 3, 11])), 0)
call_3693 = relay.TupleGetItem(func_564_call(relay.reshape(var_3692.astype('float64'), [14, 3, 11])), 0)
func_2543_call = mod.get_global_var('func_2543')
func_2544_call = mutated_mod.get_global_var('func_2544')
call_3700 = relay.TupleGetItem(func_2543_call(), 0)
call_3701 = relay.TupleGetItem(func_2544_call(), 0)
output = relay.Tuple([call_3687,call_3691,var_3692,call_3700,])
output2 = relay.Tuple([call_3688,call_3693,var_3692,call_3701,])
func_3711 = relay.Function([var_3692,], output)
mod['func_3711'] = func_3711
mod = relay.transform.InferType()(mod)
mutated_mod['func_3711'] = func_3711
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3712 = relay.var("var_3712", dtype = "float64", shape = (462,))#candidate|3712|(462,)|var|float64
func_3711_call = mutated_mod.get_global_var('func_3711')
call_3713 = func_3711_call(var_3712)
output = call_3713
func_3714 = relay.Function([var_3712], output)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_3745 = relay.TupleGetItem(func_1499_call(), 2)
call_3746 = relay.TupleGetItem(func_1500_call(), 2)
output = relay.Tuple([call_3745,])
output2 = relay.Tuple([call_3746,])
func_3762 = relay.Function([], output)
mod['func_3762'] = func_3762
mod = relay.transform.InferType()(mod)
output = func_3762()
func_3763 = relay.Function([], output)
mutated_mod['func_3763'] = func_3763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_3806 = relay.TupleGetItem(func_2175_call(), 0)
call_3807 = relay.TupleGetItem(func_2177_call(), 0)
func_3512_call = mod.get_global_var('func_3512')
func_3513_call = mutated_mod.get_global_var('func_3513')
call_3822 = relay.TupleGetItem(func_3512_call(), 0)
call_3823 = relay.TupleGetItem(func_3513_call(), 0)
output = relay.Tuple([call_3806,call_3822,])
output2 = relay.Tuple([call_3807,call_3823,])
func_3824 = relay.Function([], output)
mod['func_3824'] = func_3824
mod = relay.transform.InferType()(mod)
mutated_mod['func_3824'] = func_3824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3824_call = mutated_mod.get_global_var('func_3824')
call_3825 = func_3824_call()
output = call_3825
func_3826 = relay.Function([], output)
mutated_mod['func_3826'] = func_3826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3844 = relay.var("var_3844", dtype = "int32", shape = (13, 10, 2))#candidate|3844|(13, 10, 2)|var|int32
var_3845 = relay.var("var_3845", dtype = "int32", shape = (13, 10, 2))#candidate|3845|(13, 10, 2)|var|int32
bop_3846 = relay.subtract(var_3844.astype('int32'), relay.reshape(var_3845.astype('int32'), relay.shape_of(var_3844))) # shape=(13, 10, 2)
output = relay.Tuple([bop_3846,])
output2 = relay.Tuple([bop_3846,])
func_3850 = relay.Function([var_3844,var_3845,], output)
mod['func_3850'] = func_3850
mod = relay.transform.InferType()(mod)
var_3851 = relay.var("var_3851", dtype = "int32", shape = (13, 10, 2))#candidate|3851|(13, 10, 2)|var|int32
var_3852 = relay.var("var_3852", dtype = "int32", shape = (13, 10, 2))#candidate|3852|(13, 10, 2)|var|int32
output = func_3850(var_3851,var_3852,)
func_3853 = relay.Function([var_3851,var_3852,], output)
mutated_mod['func_3853'] = func_3853
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3883 = relay.var("var_3883", dtype = "float32", shape = (15, 9, 2))#candidate|3883|(15, 9, 2)|var|float32
uop_3884 = relay.asin(var_3883.astype('float32')) # shape=(15, 9, 2)
uop_3891 = relay.tan(uop_3884.astype('float64')) # shape=(15, 9, 2)
output = relay.Tuple([uop_3891,])
output2 = relay.Tuple([uop_3891,])
func_3893 = relay.Function([var_3883,], output)
mod['func_3893'] = func_3893
mod = relay.transform.InferType()(mod)
var_3894 = relay.var("var_3894", dtype = "float32", shape = (15, 9, 2))#candidate|3894|(15, 9, 2)|var|float32
output = func_3893(var_3894)
func_3895 = relay.Function([var_3894], output)
mutated_mod['func_3895'] = func_3895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2718_call = mod.get_global_var('func_2718')
func_2719_call = mutated_mod.get_global_var('func_2719')
call_3924 = relay.TupleGetItem(func_2718_call(), 0)
call_3925 = relay.TupleGetItem(func_2719_call(), 0)
output = call_3924
output2 = call_3925
func_3930 = relay.Function([], output)
mod['func_3930'] = func_3930
mod = relay.transform.InferType()(mod)
mutated_mod['func_3930'] = func_3930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3930_call = mutated_mod.get_global_var('func_3930')
call_3931 = func_3930_call()
output = call_3931
func_3932 = relay.Function([], output)
mutated_mod['func_3932'] = func_3932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2543_call = mod.get_global_var('func_2543')
func_2544_call = mutated_mod.get_global_var('func_2544')
call_3951 = relay.TupleGetItem(func_2543_call(), 0)
call_3952 = relay.TupleGetItem(func_2544_call(), 0)
output = relay.Tuple([call_3951,])
output2 = relay.Tuple([call_3952,])
func_3977 = relay.Function([], output)
mod['func_3977'] = func_3977
mod = relay.transform.InferType()(mod)
output = func_3977()
func_3978 = relay.Function([], output)
mutated_mod['func_3978'] = func_3978
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4026 = relay.const(-6, dtype = "uint32")#candidate|4026|()|const|uint32
var_4027 = relay.var("var_4027", dtype = "uint32", shape = (5, 11, 16))#candidate|4027|(5, 11, 16)|var|uint32
bop_4028 = relay.bitwise_or(const_4026.astype('uint32'), var_4027.astype('uint32')) # shape=(5, 11, 16)
func_3711_call = mod.get_global_var('func_3711')
func_3714_call = mutated_mod.get_global_var('func_3714')
const_4039 = relay.const([[-5.476181,-0.750653,5.518748,-3.147957,3.265935,-2.664034,2.727219,5.663603,2.772766,1.287833,5.022180,7.238106,1.469511,9.398282,-0.663524,-9.388902,-9.331088,-1.332582,5.325690,1.495577,-0.023093,5.846148,2.811632,-8.115034,7.577525,-7.538025,3.990454,1.298910,-3.746331,-1.342467,5.319899,5.019571,-0.758868,-7.851904,-7.737844,-4.035324,8.431194,2.288051,-0.242368,1.134141,4.694282,9.969698,-7.122048,1.760389,8.758215,0.467132,7.509105,-9.466436,-5.077496,1.205203,-9.691191,1.557022,-8.760053,-6.548669,-9.944114,-6.451499,-1.122150,1.240014,-2.410285,5.625785,-9.829750,6.299623,-4.931100,9.538863,-0.119461,0.943877,0.177721,-5.977364,3.351696,-7.485108,0.796180,-6.919691,-4.397713,-1.448824,-9.191819,-7.545878,-4.923256,-6.754660,5.597492,7.188880,2.926198,-6.894593,0.611185,-1.755493,-5.885695,-4.364979,5.908731,7.609149,-8.259097,-5.614817,6.381966,-6.189333,-8.390959,-7.250200,-5.545358,9.788443,2.086006,-9.218466,3.170391,1.274381,-6.529260,5.020955,-4.877622,5.572446,-0.813148,-6.203548,5.636235,4.240224,7.277311,3.378389,5.232506,2.126994,8.288852,0.047866,-0.957184,-5.809902,-2.185000,-3.090901,-0.269332,-6.126778,-4.427986,-8.822239,7.416745,4.579459,-8.890111,-2.446353,-9.976415,-5.103454,-8.900587,-4.203984,-3.157751,0.481497,-9.376960,-9.576292,1.320345,1.252161,6.373228,0.097744,4.789158,4.425501,-7.018213,5.502983,-8.672099,-7.858986,5.541535,4.902043,6.725167,-2.279428,8.588531,-5.224963,7.605663,-0.402502,5.404066,1.312659,-0.502474,-3.986323,3.968051,7.728382,2.016961,-5.390074,-2.430945,8.727318,-9.860081,8.621805,-8.283817,-4.694529,3.011742,-9.256099,5.167200,3.741136,-9.183120,-8.548125,5.246389,6.608235,2.334422,9.646535,-6.099488,0.476803,9.252774,-7.402796,-1.889888,4.663667,9.376670,-1.187317,-8.047852,-0.694980,-2.770181,-9.405562,7.271366,-1.940946,7.112530,-6.305501,-8.311748,-1.327857,6.195910,2.074335,2.665761,2.462167,-5.899607,5.388007,-7.027612,-8.594745,-3.893126,-8.796405,-6.736026,-0.899643,2.179371,9.539588,-0.631583,8.376347,-6.267365,8.915660,3.903784,-3.823970,2.458333,-1.986695,-3.786004,-5.309092,2.452243,-4.906926,0.637079,4.128276,9.105965,4.808007,-9.773097,2.996773,3.546108,5.161735,-5.738256,4.856902,4.765779,7.639862,-9.328164,7.902884,-5.034073,8.380862,-9.081635,-8.060986,-1.233556,-7.747206,-9.843362,2.880625,-2.339274,4.791473,6.870481,-2.495967,-9.946049,-0.062488,9.768695,0.899368,0.721833,-2.565827,6.827830,0.767817,-8.938823,9.806040,-8.265958,-2.907264,5.055182,4.244556,-1.410081,0.975372,5.880467,4.315767,9.400766,-3.442014,-4.603243,1.620222,-4.512273,6.425819,-9.141848,8.556218,5.194704,1.320969,6.722269,5.211382,2.247192,1.909563,-7.043089,8.567108,1.195037,-5.121810,-7.986773,5.051958,6.753649,5.528949,1.340164,-1.759440,1.777019,8.866069,-7.629773,-0.586802,-7.561797,-7.039400,9.942273,-5.187291,6.321028,-9.954575,-9.609519,-4.480280,-5.816170,9.663174,6.640395,-8.811181,-3.612846,7.545871,4.902688,-4.253838,4.267010,-9.356420,-4.833084,9.948710,-3.782764,-6.386134,-0.591580,-3.476511,-6.853909,-5.045118,8.168299,-9.713584,5.393491,-5.251323,-0.159099,-4.109614,5.780350,-2.612485,5.486710,6.920740,8.485862,1.843879,9.270340,-8.397981,4.733228,0.876248,5.453236,-1.842357,8.024474,2.211448,3.999598,-4.123265,7.375795,6.149693,-9.012370,-3.810139,-7.014062,1.572472,2.051746,8.985041,0.689808,8.914122,6.137742,1.398047,-3.198209,-7.470660,-8.319255,-3.220554,1.210146,-3.955458,-2.569753,5.478591,-1.615930,-5.328434,-9.401611,9.490934,-4.004675,-0.425903,-7.919190,4.402254,0.087497,7.118815,-4.895460,4.581232,3.379621,5.712185,-4.578376,-1.922626,-2.475936,-2.730796,-9.396645,-6.685157,-4.012945,-6.498764,-8.935694,8.176629,1.040288,1.044349,-7.022196,5.045322,-8.473847,7.460863,2.971436,-8.762791,7.042939,-4.014785,-1.719147,-0.640619,-2.943486,1.233236,-4.117638,-8.035713,3.042184,9.402897,-4.715841,4.770814,-7.580288,2.940347,-0.457806,2.251463,-1.738863,-2.374028,-3.119454,7.915180,8.570979,3.582765,3.506691,-5.360612,9.029626,-9.954012,-5.096747,-1.798522,-8.142592,8.619273,3.859650,-3.202429,-7.734855,-1.039441,-2.948048,7.901022,6.310246,7.615651,-5.702249,6.369853,-2.317371,2.156131,-2.604642,5.052470,3.985383,3.354015,3.181538,-7.285038,-1.674648,-2.033083,-6.439427,9.289033,-2.954155,-5.927158,-0.456621,-2.308103,8.739362,2.351015,1.386918,5.207767,5.036975,-8.530912,-1.150205,6.107597,3.730722,2.465103,9.017145,9.969881,-6.311415,2.102725]], dtype = "float64")#candidate|4039|(1, 462)|const|float64
call_4038 = relay.TupleGetItem(func_3711_call(relay.reshape(const_4039.astype('float64'), [462,])), 2)
call_4040 = relay.TupleGetItem(func_3714_call(relay.reshape(const_4039.astype('float64'), [462,])), 2)
output = relay.Tuple([bop_4028,call_4038,const_4039,])
output2 = relay.Tuple([bop_4028,call_4040,const_4039,])
func_4054 = relay.Function([var_4027,], output)
mod['func_4054'] = func_4054
mod = relay.transform.InferType()(mod)
var_4055 = relay.var("var_4055", dtype = "uint32", shape = (5, 11, 16))#candidate|4055|(5, 11, 16)|var|uint32
output = func_4054(var_4055)
func_4056 = relay.Function([var_4055], output)
mutated_mod['func_4056'] = func_4056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_4065 = relay.TupleGetItem(func_2393_call(), 1)
call_4066 = relay.TupleGetItem(func_2394_call(), 1)
output = call_4065
output2 = call_4066
func_4069 = relay.Function([], output)
mod['func_4069'] = func_4069
mod = relay.transform.InferType()(mod)
mutated_mod['func_4069'] = func_4069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4069_call = mutated_mod.get_global_var('func_4069')
call_4070 = func_4069_call()
output = call_4070
func_4071 = relay.Function([], output)
mutated_mod['func_4071'] = func_4071
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4079 = relay.const([[[-4.028539,-3.488395,-7.277526,-2.758504,3.232208,-2.271569,-9.511217,9.753442,2.632211,3.548564,7.641922,6.573300,7.796082,-6.604700,4.370572,0.086067],[-8.521073,3.952566,-6.001198,3.723903,-7.565889,-5.755858,2.567815,-8.072130,-5.921020,4.016025,5.562116,1.764456,9.317065,-2.198603,7.182929,2.569124],[0.297700,-9.732651,-8.019790,-9.554020,0.080234,3.577020,-2.107388,-1.950567,5.703667,-1.507524,-6.200036,-0.428502,2.706010,-3.827038,-5.637940,9.865259],[-9.948109,8.705927,1.228753,-3.812725,-2.815633,-6.343011,6.575069,3.162916,-9.967276,8.588225,4.740933,3.205719,1.477946,-9.776086,7.146068,0.163453],[3.757664,-8.951158,-9.728280,-2.319610,-4.478965,-6.662569,0.153947,-8.220914,2.873849,-1.324435,3.704728,-1.212475,5.479203,-4.602847,-1.606668,-2.084469],[-8.497194,-7.428585,9.861994,2.752921,5.397959,7.549697,-3.404127,7.400651,-8.292171,-1.692541,1.338012,-7.991711,7.748230,7.386819,-9.741280,-6.049040],[-5.619255,-6.464375,4.494747,2.040314,3.433013,2.078540,-0.389878,6.742058,-7.547797,8.510456,-2.810492,-8.778377,-8.622874,9.957935,9.578952,-7.288907],[2.769109,-5.871013,-6.471030,2.544714,-0.935239,1.351080,3.636047,6.332388,7.870688,6.270943,-8.974658,4.543130,9.361775,-4.824821,-6.287023,-2.617464],[6.636486,-3.212898,-3.672262,3.355638,-5.050868,-4.703024,3.990297,9.614905,-1.624481,2.943037,-6.968890,9.723321,4.747354,5.141939,-2.675123,5.098741],[-8.978562,-8.259678,-5.729604,6.389574,-0.280010,-7.614200,-4.344782,-2.841501,3.193515,2.338051,2.476112,8.154757,-3.299527,-4.385615,6.093984,-4.724125],[-1.341110,-8.283223,-5.944725,0.717321,8.514782,9.502192,-3.423564,-8.905048,2.377344,5.529901,3.891849,0.758785,4.046493,-9.824779,-8.889507,-7.183121],[8.170429,6.134549,5.493107,0.564195,-8.055146,-0.398279,-8.990956,-4.135683,-9.917647,-8.316455,5.642747,-8.481051,-0.132232,1.541030,3.981500,8.604696],[-0.698967,9.613038,6.758581,6.458860,8.149847,-5.166966,-4.183814,4.321490,6.686863,-8.399257,5.869140,6.060257,-0.808988,-7.876177,3.175332,-8.247394]],[[-3.966491,3.162543,-8.994337,-4.606761,-8.280284,-0.855685,3.632780,6.893524,4.622964,6.791587,-3.086294,-7.089804,8.772384,5.968229,-1.019536,8.967437],[0.091243,9.134849,2.589877,1.738111,-1.579653,-3.204648,4.903761,-2.677741,-0.719946,4.958538,7.302558,9.750671,7.290397,2.635266,-8.306595,-3.265721],[5.870619,-7.671884,5.321688,-8.510915,6.845406,-2.315296,-7.943561,3.014490,-5.891146,-2.923404,1.435582,9.374009,-4.231029,-5.755569,3.645723,-4.025519],[-3.697636,7.511367,-3.643608,-2.423393,-4.636422,-6.653882,5.419360,1.832668,-2.751049,3.912594,7.642695,-8.041786,2.531633,7.917756,-9.737838,7.137568],[-2.661708,-9.532708,-7.373849,-4.684932,5.301528,-4.850586,-3.656355,1.238877,9.107305,-8.890768,9.101459,-9.269301,-7.833572,3.011086,7.377991,3.119296],[6.655467,-2.457602,-7.103867,-1.149202,1.524795,7.829599,7.066290,-2.422477,9.734695,3.452417,-7.326149,-8.229343,3.179872,4.076388,-9.637758,-0.590891],[-6.128046,-2.035316,5.138483,4.500846,7.682746,4.385103,3.521630,4.711980,-2.839742,2.069667,-2.161101,0.910472,0.215137,-5.687867,-1.715349,3.362066],[0.073211,4.923364,-8.838001,8.511069,4.122193,-7.712992,-4.142930,-4.287624,6.345968,9.573931,6.374018,7.558712,1.925549,-9.535739,7.784065,4.934985],[9.745028,7.635754,4.145068,3.714371,6.763745,6.675654,1.470405,7.813458,7.099339,-1.470075,3.353880,7.121636,1.205585,-5.419346,9.083121,2.564808],[6.630861,-4.361895,6.703124,3.482490,-0.631269,4.003137,-2.978761,-4.390667,0.433685,-5.737034,-7.095844,-1.772330,-6.259938,-7.848761,-1.640504,-1.304646],[1.991506,-1.149063,1.734746,2.193082,-6.212963,6.435356,5.541665,-1.448421,7.537208,-6.082593,-8.192736,4.589037,1.003102,-3.004840,-7.260334,9.737563],[0.907701,-0.240634,-2.524502,-5.076628,-9.906110,1.687376,6.517212,1.702906,0.430966,6.391501,-4.688489,-1.206367,-5.246772,1.860865,4.095463,-5.669983],[-3.319114,3.707764,8.321648,5.265666,-8.457257,8.471684,-3.064143,-9.766402,-6.965850,4.087914,-3.101739,6.006395,-9.872090,0.819616,4.774672,-8.503094]],[[4.540275,-2.003100,-6.539001,-1.546160,1.296675,-7.052407,-2.251916,3.488678,-3.660181,5.732018,-8.613539,-5.682471,1.020239,-2.233115,7.401848,-7.996499],[5.179003,1.719672,-0.027853,-7.715572,-1.323243,8.475821,4.325667,4.380393,4.669416,-0.953355,7.867629,-6.298929,2.782404,-7.270010,-9.573334,3.427899],[7.269622,2.243720,-0.647062,4.958139,-4.508650,-9.547510,3.530181,-6.029589,-6.656830,-9.028225,3.315321,3.252699,-8.791107,9.851405,-3.673581,-4.762088],[-5.679327,-6.864091,3.938227,5.323200,-8.642081,0.995038,2.374710,2.172766,-3.274447,-4.037957,-3.613569,-2.167854,9.969992,5.878580,-6.757196,2.295433],[9.989159,-1.663153,-0.568055,4.148181,3.669227,-9.580671,-2.114074,-1.181483,-5.917656,-2.803569,-5.294004,0.243106,-4.610339,-2.578143,-2.502465,3.909377],[5.758729,-9.421409,1.551117,-4.838836,-3.400860,-6.962451,-0.644161,9.626310,1.257346,-3.746890,2.192314,6.223191,-4.867929,-3.520422,5.355486,1.857342],[6.879791,-0.601845,5.407784,6.077340,-2.700529,-7.937291,3.148209,8.474240,3.020173,-3.830058,8.241411,-2.450272,3.754153,-6.885815,4.520703,4.135259],[3.155170,9.774449,0.242418,-7.089678,-3.626638,-8.178223,-0.697254,-5.662408,6.382345,-7.840075,-6.398007,2.090026,-5.266015,6.649125,4.301360,-4.409272],[-8.199345,1.416098,3.765887,4.326217,-0.640852,9.276300,8.197018,-7.061903,-9.918600,3.523882,5.638540,4.087541,-1.121670,3.420641,3.978131,-1.878226],[-3.129125,8.431522,7.839521,1.557608,4.050242,6.003684,4.028507,8.345109,-2.165745,-3.156855,3.930506,1.135624,-7.515140,9.064988,5.255733,-1.992385],[7.919506,4.578215,-6.155502,-1.025882,0.852171,2.106267,9.188557,-3.453656,1.818193,-0.306276,-7.003393,9.770998,-1.470078,2.455455,-6.100894,7.246277],[0.693398,1.042175,-0.899760,1.810627,3.336217,-6.867514,-0.039140,-5.321991,2.472051,-5.565756,9.934437,9.698833,3.077675,8.275992,-4.349593,8.235294],[7.883548,4.963053,9.520523,6.861783,3.990518,5.210053,-3.048381,-7.175015,-2.979699,-0.967384,-7.068571,-1.844680,-9.502269,9.160087,-2.167869,-4.886064]],[[7.053743,9.259851,7.942967,8.857042,-1.984258,-4.850963,7.485754,8.988456,0.139010,2.199614,9.948597,3.259376,8.187401,-1.517168,-3.174978,1.598775],[-2.380067,-1.227909,0.678997,2.150994,-2.042869,-2.228100,-4.810300,-7.512480,7.960580,6.320717,4.616669,-2.271772,3.850865,-0.345250,-6.803773,-8.850718],[3.581308,-4.678935,-9.940027,-4.876964,7.483182,-7.580405,-2.946584,7.032834,-8.811469,-9.881198,-7.651838,-2.112142,0.846648,7.729104,-9.397570,9.381960],[-5.011518,-0.289473,7.604913,2.717401,-9.146151,-6.505871,-9.574239,-8.296571,-4.903255,-2.105988,-2.889468,-6.743818,-1.011990,5.030698,6.607431,-0.086505],[-3.500004,5.765642,4.065940,-7.852008,-5.921016,8.827723,-9.587894,-3.731228,-2.385819,2.740012,9.419286,5.071596,2.487151,3.677525,5.379466,-1.311559],[-4.213514,2.798304,8.574519,4.992045,-6.429035,-3.478402,3.298238,9.724212,-1.199478,-7.451570,-8.091985,2.192283,-0.104527,2.395835,-1.525791,9.320314],[6.510426,-7.083197,-4.411308,-9.414646,-5.729831,9.392623,3.201761,-8.068810,-4.857115,-6.487791,-5.477145,-0.889628,-6.840829,-8.224803,-9.224509,3.080364],[-6.628926,-5.610712,-0.901053,1.839376,5.223795,-0.411205,5.236529,-8.523063,8.197316,-8.393317,-6.623788,-5.690044,-3.322820,3.638809,-6.881935,-3.551425],[0.788775,8.234746,-9.257455,-5.100342,0.835261,-3.970723,9.582595,-5.191647,6.329005,-5.358290,-1.424641,-0.680422,5.282801,6.862809,3.604649,-8.467777],[-3.742682,-1.281700,-7.812453,-6.041611,7.484669,-6.089501,-3.411091,4.252830,-8.573352,6.516786,-0.059281,8.864796,-9.180920,9.187326,3.296655,-6.748827],[4.212114,-3.233435,3.151071,2.975032,6.834529,-9.976713,5.997144,-2.178179,6.997929,-5.721209,6.075105,-9.570548,-1.138967,2.578335,3.056207,4.709254],[-4.272493,1.572955,-2.465651,-1.822021,-9.419673,6.148432,-7.374975,3.351377,-5.196686,2.397625,-2.285210,8.917902,7.121196,-0.971694,-5.124377,5.043014],[9.083287,-9.692531,-2.446484,8.799396,5.453355,-4.508418,-0.287705,-9.512117,8.199551,0.227376,8.231739,-0.181317,5.257041,0.449798,-7.265564,7.965352]],[[6.196915,6.061003,-6.643125,6.601084,-9.187876,-7.665825,5.951489,4.282148,-3.503686,-8.976319,4.973697,4.937250,2.201690,-1.729899,4.981777,9.126832],[5.289801,-4.485554,-5.347681,-7.494929,3.529309,1.442123,2.493360,6.133816,2.468421,2.815477,-0.465056,-8.383527,7.927122,1.494652,-9.090916,-3.861933],[-9.374943,1.427590,-0.500478,6.153916,-8.641813,-8.233421,4.677260,-7.655642,-6.738216,4.048173,-7.647420,-6.034391,-7.042651,-8.394600,8.446925,-1.080057],[-5.058003,-5.885455,0.244404,-4.696838,-4.394466,2.398486,9.989941,5.393667,0.115010,-3.020299,-9.951100,-6.895700,7.661452,8.720984,0.655929,-2.935363],[8.077585,-1.930280,-5.379378,8.726896,7.902421,-7.855330,-4.032290,-5.104915,-7.816580,9.947777,-8.233475,9.132123,-9.600438,-6.606459,-8.461248,2.648557],[6.539384,1.406528,3.749822,-5.881804,2.035051,0.811643,-8.456807,-4.627952,-8.376568,0.933971,6.074329,-2.582748,3.521665,9.829817,1.162117,-8.907311],[-0.887001,-4.270473,-4.385422,-8.068676,5.708654,4.052470,-9.377298,-5.795835,0.265411,1.779095,-7.332485,-1.962674,-9.686047,-9.986489,2.931647,-5.799095],[-0.438314,2.547231,4.771591,-8.783260,6.455574,1.819670,4.450230,-8.180336,4.630005,7.717164,-4.374790,-6.644730,6.386935,-7.162053,9.451358,-7.855416],[-8.403414,-7.634546,-9.726031,-3.249500,-6.590572,1.566406,-8.209795,-9.946394,4.474217,7.183955,5.345314,-7.709755,-4.568449,1.509141,7.518428,4.658146],[0.750936,7.868823,3.564759,6.280433,9.936770,9.453209,6.488026,-9.160971,-2.326550,-8.134599,5.877413,-6.224634,3.492979,6.174985,-5.624068,-1.343047],[-4.415076,0.809817,-5.107794,1.340894,2.147211,4.372322,-9.617132,7.735253,0.919801,-1.647013,-8.979050,9.185251,8.370985,-0.079365,4.585897,2.464683],[-6.957479,5.519556,-8.534793,4.155173,-2.774839,-6.556584,-0.156803,0.962106,2.690052,-7.257505,-5.730305,1.494965,-7.284528,1.418479,7.201833,7.896354],[4.616471,-8.294141,8.183172,7.104272,-8.170802,-6.422433,1.165233,-7.720840,8.309312,-7.442852,-4.524264,4.335224,3.862094,8.958356,-2.852006,6.412086]]], dtype = "float64")#candidate|4079|(5, 13, 16)|const|float64
uop_4080 = relay.atanh(const_4079.astype('float64')) # shape=(5, 13, 16)
func_3711_call = mod.get_global_var('func_3711')
func_3714_call = mutated_mod.get_global_var('func_3714')
const_4087 = relay.const([-7.397292,-5.174517,6.970339,-5.447576,2.228348,-5.758961,3.088622,8.906065,2.320172,1.070572,-8.987470,-2.934694,-1.455960,4.015770,-2.794003,2.412931,7.850365,-0.398120,-5.070612,-8.934683,-9.872151,-3.293335,3.340396,1.622951,-7.711968,4.820886,7.101386,1.361065,-1.805434,-2.296840,0.180188,8.569366,1.818635,2.723140,-2.075128,9.675148,-7.677546,-1.906867,2.979793,-3.855282,-3.978477,-6.359337,-4.482001,7.961077,6.990993,7.444896,7.236282,3.046746,-8.500997,-5.454022,-9.682895,2.606533,6.103023,-4.708964,4.296309,4.341208,7.308392,-9.057039,6.414313,-9.957081,5.279237,-0.381650,9.112931,9.278680,-9.386649,-3.914806,2.151052,-5.949729,-8.787260,-4.536800,3.623546,6.548245,7.664587,-7.429445,-4.256246,4.733903,-0.500194,-1.607927,-9.704318,-0.515628,-8.515377,9.350713,-3.668607,-1.430757,7.405977,4.684712,-6.323433,1.685338,-8.081612,3.434388,-8.438900,-4.376819,-4.355262,-2.085607,-3.706626,4.690324,-0.284177,-7.636822,-3.249725,5.833458,4.378985,2.653086,3.090680,-2.592617,-0.345339,-8.612895,-4.854515,-2.436121,-5.378872,4.359366,8.940135,4.712304,-7.108703,-8.265232,-7.614410,-9.885700,-7.848604,-1.739618,-3.070127,6.822622,-5.149969,7.025110,-8.972965,9.617823,7.218347,6.168916,6.180620,-0.607624,6.140583,4.058811,-8.863852,7.079621,7.941123,-2.662986,-1.841379,-2.590893,-0.756304,-9.763672,4.204521,3.719168,-4.084752,2.853066,1.786553,5.026574,7.549697,-5.936578,-8.357688,-3.095600,8.718176,7.826747,4.374138,-1.581898,-8.144191,-9.411182,-7.819391,-3.987647,9.114915,6.219006,6.964003,2.877233,7.048663,-0.092891,6.450367,1.803541,9.965784,4.627812,-9.214509,-9.508012,-0.189474,7.805945,-0.232446,6.337514,0.786436,-0.321727,-1.458019,6.192433,-8.218441,0.754103,1.583377,-8.761331,-5.940036,9.080258,-7.614353,1.391438,-7.283825,1.266164,-5.082393,-7.252118,1.630762,-8.573105,-0.008762,2.186310,0.373639,2.356395,6.499998,0.542255,7.803311,1.920475,2.526552,-2.898692,2.897054,-4.731269,-3.310132,8.468873,-8.987817,7.908379,-1.742495,8.747973,-4.007926,-0.637104,-5.209194,7.356799,-5.060181,4.334822,5.971807,3.823223,-7.983319,-1.071045,9.696872,-9.275203,3.335463,-8.224326,3.495080,0.567111,-6.426164,2.739739,1.590935,-1.208502,9.646774,4.095128,6.354865,6.154953,8.753472,4.889355,-4.866391,-0.795638,9.157018,0.040324,-2.396458,-1.151536,-2.414058,0.725974,-3.838359,9.286153,-4.929198,-2.201863,2.803068,2.772972,3.131346,2.780233,-9.998297,3.310688,2.648834,-3.055195,4.462657,-8.131760,7.564040,-0.219524,-3.439004,3.513149,-9.163693,-9.035248,-3.324636,-7.385212,-6.659075,0.013024,8.212074,8.283202,5.256006,-9.614424,-3.938792,-7.322900,9.668255,-8.321736,-3.065789,-2.450573,9.835992,-9.431233,-0.089640,-5.414839,4.160743,1.747316,-6.809402,1.220035,0.355827,7.561641,-8.447677,0.142944,-4.469997,9.812459,1.308367,5.705431,2.207020,-8.359900,0.688355,-4.181365,-8.000664,3.906734,-7.337589,-5.409557,3.040938,-6.727451,1.122619,3.354498,1.474984,-7.667246,-0.753143,8.511827,-1.021230,2.764005,-6.173166,-0.881764,6.236743,-9.655910,-9.914256,1.365353,-3.571785,9.828719,9.162945,5.089709,-1.728844,-2.892742,5.754355,-8.769393,5.350966,7.706294,5.440697,4.798111,-7.984251,2.850005,-4.973587,-5.927434,-4.995592,7.283386,-9.301089,-4.237582,-1.784811,4.676506,-3.392365,1.598383,5.373175,-4.953535,-9.068478,2.579691,4.110665,6.617926,-5.465078,-2.201141,-6.650491,-6.248378,-6.503445,0.657315,9.290084,-2.815472,-0.785045,-3.630364,9.864020,-6.710293,-9.251566,-5.210369,-7.117088,6.608880,6.467662,8.704435,3.378274,-4.453261,-7.835274,0.836250,-9.577196,-8.062140,9.254277,-9.026847,1.877042,8.382232,-3.696271,0.330271,0.652730,5.725097,-3.322593,-0.523445,9.850884,6.529451,-5.308699,9.191401,-8.644634,1.253255,-4.974205,-9.378619,5.047395,2.522380,8.811552,-5.136564,-8.466862,9.015939,9.059342,-0.669766,-4.902897,-1.317408,-1.292971,9.512276,2.498252,1.401137,-1.639557,2.509424,6.107342,-3.369123,2.956258,4.495222,-2.618474,-4.768596,5.507425,-4.898957,-8.418501,-8.006450,9.411756,-4.776350,5.736580,-7.157565,0.472098,2.132244,8.190441,-2.885869,-6.427389,-9.508671,-7.078907,-2.183928,5.186051,-4.382125,-0.553373,1.293404,-0.698123,-7.872656,6.896795,-2.626743,4.038821,1.975263,8.601597,1.182097,1.905906,-6.365628,8.151326,7.529710,-1.009758,-8.567563,2.646432,-6.366863,5.186604,2.963288,0.210089,-8.965993,5.994440,2.173282,1.924598,-5.516938,-8.234880,-4.046323,-6.351949,3.242180,6.226451,0.122458,0.256749,7.594762], dtype = "float64")#candidate|4087|(462,)|const|float64
call_4086 = relay.TupleGetItem(func_3711_call(relay.reshape(const_4087.astype('float64'), [462,])), 1)
call_4088 = relay.TupleGetItem(func_3714_call(relay.reshape(const_4087.astype('float64'), [462,])), 1)
var_4089 = relay.var("var_4089", dtype = "float64", shape = (5, 13, 16))#candidate|4089|(5, 13, 16)|var|float64
bop_4090 = relay.multiply(uop_4080.astype('uint32'), relay.reshape(var_4089.astype('uint32'), relay.shape_of(uop_4080))) # shape=(5, 13, 16)
bop_4110 = relay.bitwise_and(const_4079.astype('int16'), relay.reshape(var_4089.astype('int16'), relay.shape_of(const_4079))) # shape=(5, 13, 16)
output = relay.Tuple([call_4086,const_4087,bop_4090,bop_4110,])
output2 = relay.Tuple([call_4088,const_4087,bop_4090,bop_4110,])
func_4113 = relay.Function([var_4089,], output)
mod['func_4113'] = func_4113
mod = relay.transform.InferType()(mod)
var_4114 = relay.var("var_4114", dtype = "float64", shape = (5, 13, 16))#candidate|4114|(5, 13, 16)|var|float64
output = func_4113(var_4114)
func_4115 = relay.Function([var_4114], output)
mutated_mod['func_4115'] = func_4115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_4159 = relay.TupleGetItem(func_1499_call(), 0)
call_4160 = relay.TupleGetItem(func_1500_call(), 0)
func_2803_call = mod.get_global_var('func_2803')
func_2804_call = mutated_mod.get_global_var('func_2804')
call_4163 = func_2803_call()
call_4164 = func_2803_call()
func_3684_call = mod.get_global_var('func_3684')
func_3686_call = mutated_mod.get_global_var('func_3686')
call_4165 = relay.TupleGetItem(func_3684_call(), 2)
call_4166 = relay.TupleGetItem(func_3686_call(), 2)
output = relay.Tuple([call_4159,call_4163,call_4165,])
output2 = relay.Tuple([call_4160,call_4164,call_4166,])
func_4172 = relay.Function([], output)
mod['func_4172'] = func_4172
mod = relay.transform.InferType()(mod)
output = func_4172()
func_4173 = relay.Function([], output)
mutated_mod['func_4173'] = func_4173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2022_call = mod.get_global_var('func_2022')
func_2023_call = mutated_mod.get_global_var('func_2023')
call_4185 = relay.TupleGetItem(func_2022_call(), 0)
call_4186 = relay.TupleGetItem(func_2023_call(), 0)
output = relay.Tuple([call_4185,])
output2 = relay.Tuple([call_4186,])
func_4187 = relay.Function([], output)
mod['func_4187'] = func_4187
mod = relay.transform.InferType()(mod)
mutated_mod['func_4187'] = func_4187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4187_call = mutated_mod.get_global_var('func_4187')
call_4188 = func_4187_call()
output = call_4188
func_4189 = relay.Function([], output)
mutated_mod['func_4189'] = func_4189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4198 = relay.var("var_4198", dtype = "int16", shape = (13, 5, 9))#candidate|4198|(13, 5, 9)|var|int16
var_4199 = relay.var("var_4199", dtype = "int16", shape = (13, 5, 9))#candidate|4199|(13, 5, 9)|var|int16
bop_4200 = relay.left_shift(var_4198.astype('int16'), relay.reshape(var_4199.astype('int16'), relay.shape_of(var_4198))) # shape=(13, 5, 9)
func_846_call = mod.get_global_var('func_846')
func_849_call = mutated_mod.get_global_var('func_849')
var_4204 = relay.var("var_4204", dtype = "float64", shape = ())#candidate|4204|()|var|float64
call_4203 = func_846_call(relay.reshape(var_4204.astype('float64'), []))
call_4205 = func_846_call(relay.reshape(var_4204.astype('float64'), []))
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_4207 = relay.TupleGetItem(func_1499_call(), 1)
call_4208 = relay.TupleGetItem(func_1500_call(), 1)
output = relay.Tuple([bop_4200,call_4203,var_4204,call_4207,])
output2 = relay.Tuple([bop_4200,call_4205,var_4204,call_4208,])
func_4210 = relay.Function([var_4198,var_4199,var_4204,], output)
mod['func_4210'] = func_4210
mod = relay.transform.InferType()(mod)
mutated_mod['func_4210'] = func_4210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4210_call = mutated_mod.get_global_var('func_4210')
var_4212 = relay.var("var_4212", dtype = "int16", shape = (13, 5, 9))#candidate|4212|(13, 5, 9)|var|int16
var_4213 = relay.var("var_4213", dtype = "int16", shape = (13, 5, 9))#candidate|4213|(13, 5, 9)|var|int16
var_4214 = relay.var("var_4214", dtype = "float64", shape = ())#candidate|4214|()|var|float64
call_4211 = func_4210_call(var_4212,var_4213,var_4214,)
output = call_4211
func_4215 = relay.Function([var_4212,var_4213,var_4214,], output)
mutated_mod['func_4215'] = func_4215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2718_call = mod.get_global_var('func_2718')
func_2719_call = mutated_mod.get_global_var('func_2719')
call_4322 = relay.TupleGetItem(func_2718_call(), 0)
call_4323 = relay.TupleGetItem(func_2719_call(), 0)
output = relay.Tuple([call_4322,])
output2 = relay.Tuple([call_4323,])
func_4326 = relay.Function([], output)
mod['func_4326'] = func_4326
mod = relay.transform.InferType()(mod)
output = func_4326()
func_4327 = relay.Function([], output)
mutated_mod['func_4327'] = func_4327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4172_call = mod.get_global_var('func_4172')
func_4173_call = mutated_mod.get_global_var('func_4173')
call_4372 = relay.TupleGetItem(func_4172_call(), 1)
call_4373 = relay.TupleGetItem(func_4173_call(), 1)
output = relay.Tuple([call_4372,])
output2 = relay.Tuple([call_4373,])
func_4384 = relay.Function([], output)
mod['func_4384'] = func_4384
mod = relay.transform.InferType()(mod)
output = func_4384()
func_4385 = relay.Function([], output)
mutated_mod['func_4385'] = func_4385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3684_call = mod.get_global_var('func_3684')
func_3686_call = mutated_mod.get_global_var('func_3686')
call_4420 = relay.TupleGetItem(func_3684_call(), 0)
call_4421 = relay.TupleGetItem(func_3686_call(), 0)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_4424 = relay.TupleGetItem(func_1672_call(), 0)
call_4425 = relay.TupleGetItem(func_1673_call(), 0)
func_3214_call = mod.get_global_var('func_3214')
func_3215_call = mutated_mod.get_global_var('func_3215')
call_4430 = relay.TupleGetItem(func_3214_call(), 0)
call_4431 = relay.TupleGetItem(func_3215_call(), 0)
output = relay.Tuple([call_4420,call_4424,call_4430,])
output2 = relay.Tuple([call_4421,call_4425,call_4431,])
func_4437 = relay.Function([], output)
mod['func_4437'] = func_4437
mod = relay.transform.InferType()(mod)
output = func_4437()
func_4438 = relay.Function([], output)
mutated_mod['func_4438'] = func_4438
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4452 = relay.const([[5.083457,-3.584121,-7.056573,6.268404],[8.240014,5.233581,9.570540,8.810113],[-0.442834,-8.441751,4.714850,-8.677505],[9.637313,-4.546137,5.485715,-4.835296],[-2.938748,3.823986,7.514131,6.200063],[2.627835,9.436007,0.832759,-4.042331]], dtype = "float32")#candidate|4452|(6, 4)|const|float32
uop_4453 = relay.atan(const_4452.astype('float32')) # shape=(6, 4)
output = uop_4453
output2 = uop_4453
func_4457 = relay.Function([], output)
mod['func_4457'] = func_4457
mod = relay.transform.InferType()(mod)
output = func_4457()
func_4458 = relay.Function([], output)
mutated_mod['func_4458'] = func_4458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3214_call = mod.get_global_var('func_3214')
func_3215_call = mutated_mod.get_global_var('func_3215')
call_4498 = relay.TupleGetItem(func_3214_call(), 0)
call_4499 = relay.TupleGetItem(func_3215_call(), 0)
output = call_4498
output2 = call_4499
func_4509 = relay.Function([], output)
mod['func_4509'] = func_4509
mod = relay.transform.InferType()(mod)
output = func_4509()
func_4510 = relay.Function([], output)
mutated_mod['func_4510'] = func_4510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3384_call = mod.get_global_var('func_3384')
func_3385_call = mutated_mod.get_global_var('func_3385')
call_4589 = relay.TupleGetItem(func_3384_call(), 0)
call_4590 = relay.TupleGetItem(func_3385_call(), 0)
var_4602 = relay.var("var_4602", dtype = "float64", shape = (12, 2, 1))#candidate|4602|(12, 2, 1)|var|float64
bop_4603 = relay.logical_and(call_4589.astype('bool'), var_4602.astype('bool')) # shape=(12, 2, 1)
bop_4606 = relay.logical_and(call_4590.astype('bool'), var_4602.astype('bool')) # shape=(12, 2, 1)
output = relay.Tuple([bop_4603,])
output2 = relay.Tuple([bop_4606,])
func_4607 = relay.Function([var_4602,], output)
mod['func_4607'] = func_4607
mod = relay.transform.InferType()(mod)
var_4608 = relay.var("var_4608", dtype = "float64", shape = (12, 2, 1))#candidate|4608|(12, 2, 1)|var|float64
output = func_4607(var_4608)
func_4609 = relay.Function([var_4608], output)
mutated_mod['func_4609'] = func_4609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3626_call = mod.get_global_var('func_3626')
func_3628_call = mutated_mod.get_global_var('func_3628')
call_4616 = relay.TupleGetItem(func_3626_call(), 0)
call_4617 = relay.TupleGetItem(func_3628_call(), 0)
var_4618 = relay.var("var_4618", dtype = "float64", shape = (13, 2, 11))#candidate|4618|(13, 2, 11)|var|float64
bop_4619 = relay.floor_divide(call_4616.astype('float64'), relay.reshape(var_4618.astype('float64'), relay.shape_of(call_4616))) # shape=(13, 2, 11)
bop_4622 = relay.floor_divide(call_4617.astype('float64'), relay.reshape(var_4618.astype('float64'), relay.shape_of(call_4617))) # shape=(13, 2, 11)
uop_4623 = relay.log2(var_4618.astype('float64')) # shape=(13, 2, 11)
output = relay.Tuple([bop_4619,uop_4623,])
output2 = relay.Tuple([bop_4622,uop_4623,])
func_4647 = relay.Function([var_4618,], output)
mod['func_4647'] = func_4647
mod = relay.transform.InferType()(mod)
mutated_mod['func_4647'] = func_4647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4648 = relay.var("var_4648", dtype = "float64", shape = (13, 2, 11))#candidate|4648|(13, 2, 11)|var|float64
func_4647_call = mutated_mod.get_global_var('func_4647')
call_4649 = func_4647_call(var_4648)
output = call_4649
func_4650 = relay.Function([var_4648], output)
mutated_mod['func_4650'] = func_4650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3256_call = mod.get_global_var('func_3256')
func_3257_call = mutated_mod.get_global_var('func_3257')
call_4666 = func_3256_call()
call_4667 = func_3256_call()
func_4113_call = mod.get_global_var('func_4113')
func_4115_call = mutated_mod.get_global_var('func_4115')
const_4682 = relay.const([[7.830429,-4.478648,-6.394064,-8.271233,1.288576,-4.657660,-4.945555,-0.862669,-6.902180,9.213076,-6.604383,-8.724770,-9.217508,7.392960,3.632950,7.083863,-1.106133,9.354416,-8.438463,8.739344,-0.476646,4.786195,4.045061,8.751710,1.557929,7.030138],[2.818618,8.227790,-5.479927,-2.268409,-2.571979,-0.459222,2.140100,1.625385,-7.084970,7.977402,-8.899854,9.379079,-6.436058,-8.873117,2.115441,6.007560,8.655240,4.970433,5.827981,5.456938,9.049970,-5.008957,8.665660,0.390909,6.474520,-8.122493],[0.579653,1.424521,-8.358414,-2.453822,8.571529,0.579518,-7.412779,-7.510124,-9.177723,5.140001,-5.310354,4.576782,-9.315760,5.806112,3.117537,0.624855,0.710317,4.041516,-0.207083,0.944192,5.315742,-6.976807,0.517669,-9.954597,-3.170513,-3.174581],[8.191486,-6.920389,-8.397560,7.677813,-6.967251,-0.735925,8.663753,5.755394,5.241447,-7.470530,1.743448,2.872530,5.381519,3.447652,0.162455,-2.759010,1.169167,-8.007565,-2.010970,7.014437,6.952866,-8.502862,2.115823,-6.877354,7.475137,-2.765797],[-6.513391,2.486227,9.234998,7.514470,-7.584886,1.850727,2.056445,8.665579,-1.781391,-2.939658,6.223697,-5.227595,-5.171028,1.440039,5.674086,9.426409,0.305877,-8.404017,8.926001,-5.423766,4.778126,4.750511,9.542102,3.264493,5.426140,7.648577],[-3.821813,-6.071310,6.386709,-3.075702,4.317226,-5.231040,9.575252,6.380176,-4.366062,-2.493860,7.899561,-3.556655,7.335668,-2.134994,5.414942,2.088802,-4.139426,1.347946,6.011615,-9.435330,7.894285,-4.222576,5.660195,0.636553,2.674207,-3.915304],[0.242191,6.885794,-2.458915,7.126699,-1.586194,1.088035,-2.281948,-6.035179,9.189390,-8.834862,4.198158,4.188559,-9.341443,-0.327190,-5.052506,4.419291,-6.480479,-4.132433,-9.922774,-1.588387,-9.051626,9.491691,-9.238150,8.449608,3.117905,-8.793111],[-6.085529,6.124968,-4.634885,-5.468610,-6.525069,-5.604220,-1.672157,0.582041,9.775645,6.665183,-6.426726,-5.704289,-4.062294,-5.852114,-2.009949,-0.814045,-9.371203,4.630472,-1.898022,7.469647,3.583776,0.063464,8.878376,3.608866,-5.730120,-9.705013],[0.622116,-7.962762,-3.515937,2.789675,4.002319,6.187035,-4.717068,2.830704,-6.344822,6.463334,-8.291963,-9.526983,-3.897614,-6.408814,-7.590373,5.213021,-9.787269,-4.516799,-3.912468,8.477156,6.170848,3.079385,1.856659,-6.326349,9.662727,-8.617836],[-4.064817,6.302110,-4.084185,-4.752614,8.139788,-0.895611,3.142933,-1.099279,6.314884,6.297065,4.694154,-6.808153,4.183002,-6.401628,-3.860651,8.415211,7.537675,6.194716,-6.874775,2.021195,3.354245,1.863193,-8.704595,-8.462971,4.383484,-2.169887],[-4.541048,-5.707656,-4.940952,8.212047,4.423859,5.295782,1.083878,-0.884034,-8.662890,1.727303,4.273578,-3.525078,7.486887,1.181080,9.855620,3.982975,-6.167969,9.382862,-6.923028,-0.336959,2.845488,0.056849,-1.282298,6.401991,3.135364,9.349113],[6.484946,-7.116531,-8.711536,-6.188054,5.701163,-2.062200,8.889220,-4.658844,-9.255201,2.679937,3.215190,-8.059627,-6.798698,-7.496257,7.595639,-0.266470,-8.036212,0.063178,5.086385,-5.622951,7.446579,-3.781451,-1.474913,-2.693069,5.108108,9.072197],[-1.591543,5.858473,5.124149,-7.967845,2.033476,8.525757,8.309485,-1.609680,-8.146278,-9.225609,9.911742,-5.765531,4.366906,-6.492276,-5.190832,9.625734,-5.551732,9.092986,3.065130,-7.225541,4.359583,-1.592985,-0.043760,7.564683,0.831669,-4.122362],[-1.825478,-6.864037,7.648961,0.603579,-0.815150,4.942869,7.986352,-9.106703,-9.808833,9.001970,2.220511,9.750245,-1.978446,-2.028603,-4.654410,6.321648,-5.947775,-6.088752,-3.436288,3.205035,3.507091,0.188990,-2.291873,2.489407,-5.743267,-8.330585],[-6.952147,2.460475,-1.403245,-3.022591,-5.053768,9.974097,6.152410,9.356362,3.520996,1.582345,0.990629,7.260985,-8.581953,-9.842725,3.877995,-8.582682,-6.646894,3.975341,-6.376239,1.079171,7.774210,1.004082,8.823293,-9.311727,7.036815,3.737519],[5.042750,-5.595919,2.209021,-8.529906,4.865223,-0.267789,1.550401,-3.930887,2.216789,-3.525101,9.522862,3.596669,-8.099928,2.101027,4.388780,-6.160892,-7.170900,3.375851,-8.329319,-4.759468,-3.733376,3.267870,-0.251748,5.455255,-1.314712,-8.602350],[1.151450,-1.477471,-1.827394,-3.607602,-1.725501,-6.105943,1.573780,-3.744918,9.050409,-5.912447,0.421120,0.129087,8.477560,0.508028,2.905872,9.985663,0.182197,-4.572112,-9.440766,-4.125667,-5.573983,1.473850,-7.588492,2.486429,-0.983316,4.299074],[2.657680,-8.397613,-6.238081,-3.649183,5.292175,-9.156776,0.430202,-1.778895,4.700927,-2.285566,1.056856,-8.822033,9.095853,-4.218749,1.053900,3.209265,-7.156034,0.190635,1.029340,-7.445791,-6.230542,-4.313137,-8.721558,2.167948,4.431379,2.086935],[0.333124,-5.307699,0.430562,-2.329157,-4.304187,3.712410,5.634410,7.138870,2.694629,-9.040649,6.368673,4.525064,9.962873,6.856277,6.301167,-2.521322,-0.635182,0.432015,2.571112,-2.744252,-7.404381,-8.003053,8.980758,-4.159865,-5.423582,-2.562203],[6.540672,7.757440,-0.434076,4.120661,0.966319,-4.964237,-6.635145,5.994116,9.657572,-7.773785,4.076856,-5.953465,-6.996188,6.641487,1.042044,-3.763351,-7.690185,6.869089,5.581320,-5.268724,-0.799183,-9.197602,-7.477679,-9.619093,-6.494319,3.973275],[-8.047584,-4.208929,6.766718,5.047151,6.669973,6.726943,0.616282,-8.323034,-6.550737,9.548855,7.830446,5.380607,1.744835,6.942855,-9.957937,0.213351,-9.838620,-9.547301,-9.823784,-6.367740,0.963736,4.251736,4.714165,3.973971,-6.761695,-8.897940],[1.725147,9.065723,-0.595416,-7.197332,-3.438669,3.163414,3.373914,-9.186024,3.544762,3.219105,-6.077996,6.887690,-8.940267,1.981910,1.213635,-6.486244,-4.190852,6.534011,-3.690106,3.653504,9.321877,-7.765629,-8.914468,-9.915154,4.820290,3.163011],[-7.411435,9.073673,6.042498,3.828464,6.016564,8.166233,-8.467196,-9.023661,-7.785460,5.226563,-2.272095,-2.578413,-4.742399,-9.140460,-5.093264,5.409670,-3.541723,3.907319,-4.027013,-3.917925,-8.715909,8.404271,-1.958635,-8.723158,6.438301,-8.310276],[5.356241,7.269271,-0.849918,2.481774,0.757841,9.662548,-0.730280,0.695733,-4.877358,-9.957592,-4.330230,8.240499,8.612162,1.139389,5.927239,-9.505411,1.823608,-8.666932,0.487743,-5.452899,-8.429149,-3.874325,3.437609,3.094574,8.706739,-8.748796],[1.770319,-0.738258,7.149611,-1.632890,8.947404,3.933906,-5.462251,-3.636954,-7.645141,-5.421422,1.903881,4.646685,-5.213409,-3.353699,-6.251953,1.764938,-9.159333,-7.624912,-0.772473,-0.783751,3.587397,-3.101288,5.754175,9.168648,4.158234,-0.444957],[-3.897605,2.270481,4.972713,-7.590823,8.165825,5.808938,7.425495,2.920874,-0.904368,0.708595,-8.927545,2.747472,5.087307,3.047154,-2.300405,0.742583,9.544721,-3.194516,-5.175233,-4.717593,-0.248623,7.857197,8.904562,2.433370,-1.206323,2.686352],[-1.820739,-8.694734,8.598227,1.795344,2.760766,-7.796723,5.596040,5.507954,1.709904,2.175098,-0.909103,5.753135,-6.057732,1.211898,8.521277,8.737219,-4.094123,9.720088,1.573059,3.922390,7.234063,1.408373,-8.552142,-6.839510,-7.098348,-4.792305],[-1.200643,-2.914845,-9.477696,8.557861,-7.650087,-4.015622,-1.065127,-9.512750,-7.521666,6.410890,3.561163,-6.559166,5.705075,8.472624,9.176534,-6.984774,3.215852,-6.129922,1.616905,9.459321,-3.985525,-2.320862,-1.767949,-6.936279,-7.983858,-2.754950],[-8.461746,-3.873929,-9.138948,2.797526,2.467790,7.953691,-4.059568,-6.345290,-2.328102,5.298895,7.239490,2.826753,-6.958674,-6.218774,6.894057,-1.877848,-6.058533,-4.057988,-6.450764,-7.538017,5.699895,-4.984940,4.889969,7.681815,-4.862644,-4.338584],[-3.303705,2.442432,9.239617,-1.860398,7.719300,-2.669329,1.205586,-4.201964,-3.113430,9.102895,-0.173587,2.397888,-8.225170,4.793290,0.708842,6.697946,-4.122601,-0.291520,-8.972427,-6.784556,0.331519,5.637033,1.205350,-5.311573,-6.083517,-9.926354],[0.582672,-4.621192,-3.860153,-1.793768,4.646274,-2.284608,9.138287,2.755292,0.897971,6.841880,-0.684629,3.778566,-2.259269,3.589818,2.994418,8.934153,6.132990,-5.441621,-2.314406,0.181864,-1.480224,8.844737,-1.089466,-9.969270,-1.800900,-6.102321],[-7.537401,2.860985,4.497434,-5.355211,-2.716377,7.458208,1.692079,3.109322,4.367772,-4.358932,-2.782545,9.946309,-6.831681,-8.081326,4.464253,-2.156525,-6.580113,-2.816883,-1.679293,-4.765577,-5.153972,3.790603,-3.208739,9.580309,8.220783,8.801518],[6.096797,6.976548,-7.287800,4.835968,-6.391865,-2.716300,9.555797,5.817394,7.881541,-6.840909,0.936289,6.644298,-8.782221,3.458400,-0.877610,-8.523092,4.028629,-6.992532,7.035828,7.243046,0.463853,1.298461,-8.449750,-0.171203,-1.904212,-6.732137],[-8.457610,9.282955,-2.822487,5.548707,-3.636469,8.386986,9.866480,6.092361,5.703642,-8.371961,-4.329290,6.225538,-3.274012,-9.276571,-3.680878,0.237845,8.740130,7.641718,8.820162,-9.640800,-4.314820,-8.076422,0.362602,9.916006,-2.670240,9.133290],[9.599981,-5.340858,7.726303,-3.396760,5.577585,-5.438262,9.913823,-1.420792,-7.047459,-3.676803,-0.581094,-0.939663,-5.007102,-6.553447,-6.946379,-1.820921,-9.261534,8.381046,4.137080,0.668258,9.050589,1.457566,-7.165857,-1.604853,5.565318,3.693415],[5.192085,2.056953,9.681540,-5.683087,-3.358447,8.870373,3.744158,-7.702379,2.845988,4.225652,8.506774,7.556497,4.121601,6.399090,-2.946525,-9.630211,-9.804589,4.307249,-4.172238,9.184660,-2.682981,9.053400,-9.501218,6.867692,-2.602899,-4.710823],[1.457684,1.951232,3.932663,6.051179,9.547297,7.250847,-7.607399,-8.384951,9.116666,6.974466,-5.001024,2.483280,-7.891394,-1.763926,-8.669650,-3.852815,-4.524983,-5.825045,-9.116431,8.639136,6.174193,-0.467615,-4.119139,-2.689918,-0.658223,8.178472],[6.197753,8.542331,9.785767,-6.106371,7.759722,-4.034216,-2.699821,5.811614,-7.153400,-1.633315,-2.146465,8.309537,8.743683,-8.608776,5.748816,3.706375,-9.465099,-1.313741,-7.347535,0.326326,-8.307388,-4.770225,-2.065789,3.588623,-7.996498,7.534853],[-6.097688,5.476823,-9.821284,-5.145182,-0.501151,-5.068160,-6.413028,-3.213677,0.132114,-0.277130,2.405206,-9.480300,8.969974,1.788304,-8.571205,-3.053237,5.839008,-0.617430,0.956435,-3.714114,-9.452173,-2.591414,9.269909,-9.503550,2.598687,-0.453502],[7.057449,-2.662781,4.126100,-6.003455,-5.355506,-4.525251,2.816344,-9.692358,4.541915,-0.120296,0.217589,4.463763,5.189516,-9.702432,-2.262787,-3.181934,8.558888,-0.636031,-8.404344,-3.012354,0.516974,-7.907685,-8.694906,5.103561,3.261621,0.189804]], dtype = "float64")#candidate|4682|(40, 26)|const|float64
call_4681 = relay.TupleGetItem(func_4113_call(relay.reshape(const_4682.astype('float64'), [5, 13, 16])), 2)
call_4683 = relay.TupleGetItem(func_4115_call(relay.reshape(const_4682.astype('float64'), [5, 13, 16])), 2)
var_4686 = relay.var("var_4686", dtype = "uint32", shape = (5, 13, 16))#candidate|4686|(5, 13, 16)|var|uint32
bop_4687 = relay.mod(call_4681.astype('float64'), relay.reshape(var_4686.astype('float64'), relay.shape_of(call_4681))) # shape=(5, 13, 16)
bop_4690 = relay.mod(call_4683.astype('float64'), relay.reshape(var_4686.astype('float64'), relay.shape_of(call_4683))) # shape=(5, 13, 16)
const_4699 = relay.const([[[1.465243,0.042671,5.522906,5.923614,7.567896,-6.501125,-8.434513,6.501515,7.576112,-9.714380,6.895668,-4.182726,8.990813,-9.962543,2.065484,0.118119],[-9.523335,3.152689,8.874298,-7.184798,-4.979690,-9.626927,-0.228715,-0.541662,5.749062,-2.371295,1.899917,-7.103795,8.220429,7.842529,-9.545418,8.308665],[4.920237,-7.019554,1.779983,7.999536,0.845868,-9.905416,6.138688,-9.654103,9.831853,-9.684745,4.854150,-4.525608,5.450039,0.465878,-8.831414,-3.442656],[6.328132,2.358994,5.938352,4.389909,-1.028182,-4.489972,-4.962204,5.290439,5.797521,-3.172228,-6.629143,8.254497,-3.109810,2.235132,7.054506,7.850709],[9.864044,3.377413,4.159319,1.669455,-8.949828,-6.956537,-6.647174,6.257178,5.802389,-6.916503,-2.468449,1.590071,-4.917150,7.501705,-1.042578,3.070554],[3.663930,-5.255023,0.699473,7.876650,8.141423,-1.694486,1.706791,5.275768,5.103236,-7.044520,2.985478,1.564377,-7.774570,3.225725,5.524815,-5.272956],[9.791202,5.549765,3.345462,-7.786250,-3.353454,-1.084204,-2.631622,-6.715728,-5.654665,0.625338,-9.728419,0.168971,-7.235697,2.990206,5.424461,-0.165841],[-8.878432,5.022953,-5.403349,-1.676897,-9.748897,-1.288359,-3.807273,9.358919,4.164527,-1.497343,8.946857,8.414417,-2.637455,7.497682,-4.157227,-5.147537],[2.538551,-3.141137,-0.859114,1.845690,-8.040312,1.601146,-3.460346,4.812271,-4.322253,-8.813258,6.461340,3.896717,-1.051020,-4.983124,-5.375526,-9.856825],[-7.255828,-6.268536,9.172459,-0.840312,5.946844,1.329022,-0.303872,-7.805780,-2.292360,-8.418356,-4.264749,-3.640091,-1.435964,7.902500,9.106514,-2.592335],[7.917376,-9.638802,-7.648216,-0.073648,2.563642,-6.606926,-3.622255,-0.863547,7.302589,-3.634943,-3.235492,-7.239551,3.454298,7.618027,8.316414,9.251721],[-9.726149,-0.968023,-3.993462,7.202685,-3.704751,2.393642,-2.594327,3.265606,-6.115507,1.449461,-2.339342,7.400848,1.105966,2.851400,-2.442596,3.540833],[-0.997818,-9.347005,-7.770215,-1.361973,9.251738,6.413230,3.328263,3.217168,4.270753,-2.507092,-7.938268,1.230140,3.415506,5.418661,7.590767,-5.316150]],[[-2.587773,-5.217105,-7.441867,6.640502,-0.653851,7.470469,6.529896,4.563546,5.383693,6.341340,8.675469,-9.510924,2.021909,4.033042,-9.282067,-2.072112],[-3.591344,-5.830188,-6.351574,-3.183223,-3.783720,-1.378396,-7.644035,-1.305941,-4.742000,8.482047,3.329330,-8.333013,8.775459,2.841462,8.658758,-6.811772],[0.966990,4.917380,-2.608670,-9.384669,4.272870,2.368065,6.179150,-4.955462,5.992452,5.826228,6.130408,4.324128,4.772965,-3.841467,-7.303329,-2.203690],[6.083523,0.007300,1.882480,2.858925,8.102189,-5.883617,-1.614465,-8.027623,9.970938,-3.304800,1.082886,0.210629,5.873798,8.091489,5.942391,2.930167],[2.018652,-3.076968,-3.653647,-6.319299,-3.102866,-4.796894,8.466680,-7.619914,3.182841,5.300364,-3.452079,3.858076,-6.121622,-9.191818,1.270065,9.712499],[-0.789081,8.342763,4.712254,-1.630348,6.512579,-8.919921,1.723263,9.000320,-4.499232,8.062627,3.100542,-9.523515,-4.319932,8.746128,-3.322505,-3.991010],[4.348558,4.100837,7.452194,-8.584173,8.260338,1.276404,-7.818465,7.402703,8.607450,5.074532,3.043574,6.333667,-0.535321,1.678607,9.279621,-3.640373],[-8.527993,5.944960,8.316625,-2.695142,-2.404059,-5.595345,-9.067528,8.623116,-8.397243,-5.172676,-2.275960,9.574682,4.583026,1.838925,1.042761,2.207149],[-2.085129,4.427308,-4.121808,-8.530431,-1.622945,8.888665,-5.983689,-0.931170,-2.954633,-7.382106,-7.834321,8.258415,3.591349,-7.914536,-1.313826,-9.549897],[-2.016547,6.677590,3.513600,-1.528683,-2.374132,-6.223688,-1.180496,0.605124,9.837787,-7.852191,-3.668539,8.022326,-6.064166,-8.648090,3.227018,3.050000],[-0.477433,3.975986,-5.078454,2.100440,7.918698,4.237047,5.618735,-7.411787,3.901039,-6.841953,9.768683,6.018073,-8.638106,-4.331775,-6.300341,9.223676],[-8.498758,-5.968147,-3.529929,7.508024,8.756442,-3.668504,-4.280401,2.359725,4.447254,1.717987,-4.872382,-3.780521,-0.866436,-5.914556,5.967661,9.800211],[-8.806358,-6.482509,-2.061674,3.905663,7.605910,-0.260356,-6.743865,7.754613,2.148305,-1.886423,9.019481,-5.720566,-6.761354,-1.430710,8.377359,6.287078]],[[4.359152,-6.716021,-3.987328,7.413406,0.171479,3.974179,6.291319,0.977072,4.820959,-3.632753,7.447848,-8.319504,-0.871168,5.728383,-1.521295,0.709943],[-9.138425,9.381320,9.583832,-8.038567,-8.461140,8.286486,-2.568036,8.353769,-1.411736,-9.719387,-2.945339,3.827857,4.641014,-7.500637,-8.341410,8.305043],[-4.420666,9.034666,6.586782,-0.345076,9.499897,-1.567505,4.827843,1.474110,8.347786,9.092807,-9.159910,-8.009560,3.195086,8.931570,7.179575,-2.038251],[-2.741401,4.188904,-9.534963,8.897318,8.164035,7.084753,7.702684,5.494315,6.303564,7.508020,2.490558,9.458610,-0.428982,-7.133671,-4.818650,7.403198],[-7.071092,-4.173387,9.505139,-9.030106,3.764317,2.175815,-4.077526,-2.185423,8.626352,5.186174,6.823907,0.013016,-1.091888,7.269772,-1.206582,6.153331],[-9.999356,6.888368,8.882315,-3.101079,-0.177541,-8.833659,-1.807150,-9.549624,-9.977756,4.289644,-1.380338,5.049035,-3.216587,8.488434,-9.477005,-1.800279],[8.371801,-7.812915,0.988608,6.416937,-8.575128,6.588924,-3.467332,-2.276215,8.970916,5.239960,-0.607058,-3.141009,5.493673,1.836641,-0.880459,-6.809197],[-7.422051,2.751119,-4.807254,9.440063,-0.812299,3.403771,-7.002538,8.607038,7.178695,9.340046,8.884655,5.747170,-3.713378,-4.072998,-5.220636,-7.989482],[4.271073,-5.274092,-5.082201,-4.329789,-6.728772,-8.301202,1.236310,0.986058,-3.273500,-0.822146,-8.062210,-2.867754,4.467440,-5.957524,-0.443019,-8.713951],[-7.695063,2.332539,-1.492529,3.825394,5.952375,4.084531,4.909472,-4.452121,2.802388,6.609961,-2.742150,-9.171761,8.974465,9.570379,3.421485,9.336738],[-7.870671,4.273885,6.614315,-6.940538,-1.921553,4.959911,-9.559654,5.398591,8.777825,9.944790,-3.111657,2.564294,-7.874852,4.299344,-7.780141,9.316552],[2.839775,5.423050,7.877208,-3.401762,5.789861,4.010270,1.341573,8.351498,-2.868268,-4.847702,4.919381,-2.436304,-3.648889,2.496483,-8.340948,0.852322],[0.823407,-0.911211,-3.355749,-7.516629,0.401209,5.909472,-9.602254,2.408592,-2.400171,-7.780909,5.463985,0.486095,-1.841325,-7.448904,-1.097088,0.661262]],[[-0.807103,-5.885689,-0.941939,-9.411313,5.325816,-1.411542,-5.665884,-4.769674,9.387467,-8.963587,7.177856,-9.356612,8.283362,-9.332794,-0.972083,5.441193],[-6.285421,-6.692138,4.670027,-7.236871,-8.759312,-4.937130,-7.098136,5.216364,0.088091,-1.340559,-6.988661,5.630714,1.536037,1.126266,2.996025,-3.654449],[-1.350199,-3.470182,9.473877,-6.897105,9.216195,-9.862479,1.182243,8.913913,-1.089261,1.054519,-6.825548,-0.180711,5.517697,0.384017,-6.146215,-5.987797],[-1.570667,-1.967377,3.780568,-1.514315,-1.097042,-6.512255,-5.234633,-7.795238,7.974754,8.874034,-5.896467,8.056703,2.271282,-7.392496,-6.920664,5.125288],[2.779356,-3.832384,-7.352683,1.770682,0.678485,2.192744,3.759451,-5.656365,5.447653,-9.851271,8.433182,1.858525,8.301649,9.399548,-6.853541,-2.459471],[-9.302966,-3.688098,8.356428,4.978818,6.198606,5.075800,1.381490,7.855356,6.849620,-0.642771,5.753119,-0.779538,-9.941043,-7.122851,-9.854580,-9.179808],[2.521549,0.150697,3.597322,-6.307590,4.487698,2.786119,9.578953,-7.673783,7.366525,-9.523405,-8.248313,5.386715,-9.133263,-3.685671,-4.723119,4.110565],[0.712827,6.496067,-2.498056,-7.067535,1.284435,-3.150788,-7.474214,3.270304,8.562959,8.433719,-1.980374,-0.931894,-5.718543,1.416684,-2.355695,9.316612],[-2.110280,-7.586837,-2.211303,-3.098360,-1.712783,-8.940929,5.397752,-1.366475,6.860279,7.948220,-9.571325,-1.728138,-9.161612,-7.730796,1.488560,-8.924634],[-3.336334,-7.737822,1.099913,-6.445707,7.936372,6.885820,-6.609891,0.469268,0.588391,-8.613138,9.920755,-1.275602,-0.109371,-7.439226,-0.683801,2.051288],[0.719023,6.173765,9.553897,-5.530375,2.436463,1.386051,-8.284012,3.453403,3.094633,9.068082,4.895146,-7.192152,-7.975278,3.769946,-4.162335,7.156587],[-8.579957,-5.601959,-6.853170,-9.508003,-0.446989,-3.031188,-3.156900,-3.513382,0.452414,-6.986194,-9.527947,-5.208474,3.077067,4.869395,2.730324,8.394923],[-1.857938,2.074254,9.606882,-0.870017,5.686917,-8.646375,-4.535571,-3.988114,-1.214747,-6.054384,3.078545,-0.645994,-7.342562,-1.668411,-1.792929,1.321175]],[[-7.335050,-0.432413,-7.914471,6.172657,1.609581,-6.220739,4.818280,2.214435,7.528395,-9.231887,-0.176864,-6.141211,-3.552208,-9.371732,-2.544930,9.955311],[-4.493131,-9.528419,-8.037106,3.086318,9.925240,-8.958781,-9.164946,5.869800,6.613596,-1.480948,-3.229109,0.908964,-7.569772,9.274779,4.192301,2.642298],[-6.574484,0.074717,2.129210,-6.538109,-3.383815,3.752939,-3.667528,-8.170953,-6.961548,-0.130416,5.223932,-8.939374,7.070373,3.015494,-5.585824,8.060230],[-5.941214,-0.245816,2.178048,8.462184,6.181133,-1.578978,0.809747,8.053729,6.010468,-7.044976,7.156592,-2.885197,-6.415368,-5.786301,-9.789765,-0.807517],[-0.738909,6.785436,5.504913,1.843525,5.889824,3.527714,-3.162606,5.455492,-2.663998,4.324362,-3.333011,-3.428409,1.782110,8.854574,-8.358693,-1.344388],[-2.769330,-9.901111,-4.837492,-9.576411,6.536965,-4.101839,8.042802,-3.818723,2.126524,4.230044,6.142776,3.768923,-0.639615,1.236780,-9.569795,9.730732],[6.242428,-8.368773,0.541274,0.852840,-5.164234,5.979438,7.564220,0.239113,4.438308,-1.113766,8.017454,4.588575,6.066260,-5.972882,-7.370897,-7.469718],[-6.622949,-1.218985,-3.445657,-7.020825,9.302899,-7.949856,3.525484,-5.879605,-7.616894,-3.319141,-5.848328,-3.497519,-2.457072,1.772041,-1.923068,-2.965992],[-9.254717,6.808062,-6.552803,-6.263592,9.134845,2.039503,-4.056937,4.389326,-6.418834,-5.521996,6.888838,-5.243671,-5.805807,-8.937427,-4.714243,0.997523],[8.707228,3.997723,-5.570208,-9.995388,-1.224082,5.927715,0.677795,7.304490,-1.051790,-2.402926,-3.372151,9.557185,-5.266282,-3.051133,-0.727909,8.006144],[-2.261287,2.953046,-8.228174,-2.128932,0.201811,-4.098901,-0.269793,3.728183,9.366642,-4.525600,-7.247237,-7.138654,0.927678,7.091660,-4.477214,-4.442693],[8.283445,-3.641308,0.469457,-7.671295,-6.348973,2.547649,9.202263,0.080120,-7.419224,-2.735664,8.058994,5.078659,5.768519,-2.527299,6.155095,-5.844520],[-5.405756,9.315428,1.901800,1.334213,-1.875539,-2.616733,3.312991,-5.817518,5.109927,-6.228044,-5.699671,-6.397988,2.283926,8.836686,2.407924,6.119775]]], dtype = "float64")#candidate|4699|(5, 13, 16)|const|float64
bop_4700 = relay.logical_xor(bop_4687.astype('uint32'), relay.reshape(const_4699.astype('uint32'), relay.shape_of(bop_4687))) # shape=(5, 13, 16)
bop_4703 = relay.logical_xor(bop_4690.astype('uint32'), relay.reshape(const_4699.astype('uint32'), relay.shape_of(bop_4690))) # shape=(5, 13, 16)
uop_4704 = relay.rsqrt(const_4682.astype('float64')) # shape=(40, 26)
uop_4706 = relay.log10(call_4666.astype('float32')) # shape=(5, 10, 7)
uop_4708 = relay.log10(call_4667.astype('float32')) # shape=(5, 10, 7)
output = relay.Tuple([bop_4700,uop_4704,uop_4706,])
output2 = relay.Tuple([bop_4703,uop_4704,uop_4708,])
func_4710 = relay.Function([var_4686,], output)
mod['func_4710'] = func_4710
mod = relay.transform.InferType()(mod)
mutated_mod['func_4710'] = func_4710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4711 = relay.var("var_4711", dtype = "uint32", shape = (5, 13, 16))#candidate|4711|(5, 13, 16)|var|uint32
func_4710_call = mutated_mod.get_global_var('func_4710')
call_4712 = func_4710_call(var_4711)
output = call_4712
func_4713 = relay.Function([var_4711], output)
mutated_mod['func_4713'] = func_4713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3384_call = mod.get_global_var('func_3384')
func_3385_call = mutated_mod.get_global_var('func_3385')
call_4721 = relay.TupleGetItem(func_3384_call(), 0)
call_4722 = relay.TupleGetItem(func_3385_call(), 0)
func_2084_call = mod.get_global_var('func_2084')
func_2088_call = mutated_mod.get_global_var('func_2088')
const_4726 = relay.const([-6,-1,-6,5,-4,6,9,-2,-2,-2,5,5,8,-10,-5,-8,5,-2,-6,6,10,-1,1,-4,4,-6,-8,2,4,-8,8,-1,-5,4,2,1,-4,-10,8,2,10,3,-8,7,-7,-2,-8,8,8,5,3,-1,-2,4,7,-4,-1,-6,-1,2,7,-3,-8,8,-2,-5,3,-4,9,5,-1,4,3,2,4,-2,-9,-5,5,-3,8,-3,-6,-6,-4,-4,7,8,9,-5,-5,3,3,3,3,8,5,-4,10,-9,-10,-9,10,-10,7,-1,4,6,-2,-5,6,6,-7,-4,10,-9,-6,-7,6,-7,-3,-5,2,4,2,-9,-3,10,5,6,1,4,-6,6,-10,-4,9,10,3,-5,5,3,-9,9,1,7,-3,-9,-4,10,8,-9,-3,10,4,9,9,7,-7,10,-2,-7,-8,1,-1,-7,4,8,6,-3,3,-10,-6,-8,5,-8,-5,-1,3,-8,-4,-3,-3,-6,-9,1,-3,-4,-2,-9,-2,-2,-3,-3,-5,-1,6,-7,-5,9,-4,-7,5,-5,6,4,10,-7,10,-1,1,-6,-6,-7,8,6,-8,10,-6,2,8,10,-1,2,6,-8,5,-3,7,-1,-8,10,4,1,4,10,9,-9,-6,4,6,9,6,-2,4,9,-4,7,-8,6,2,-3,5,-3,-6,-4,-9,-6,7,-7,1,2,-4,1,-7,-5,4,-2,-3,-1,4,-3,-10,-7,5,7,-9,-3,-8,-6,-3,6,10,-6,4,1,-3,-8,-1,10,-8,-6,-6,9,-3,-8,3,-4,1,5,-9,3,1,5,-8,-2,1,-1,-4,10,-5,-6,4,3,-1,-3,7,2,-9,1,-3,-2,-8,-3,7,-2,4,3,9,3,4,-10,-4,-10,1,-8,4,-7,7,7,-3,-6,-6,-5,3,-4,-6,2,9,10,-3,2,-2,-10,-1,3,-7,-1,6,-9,-5,-9,-9,8,-1,6,9,-1,-7,10,-1,1,1,-2,-9,-7,-6,-5,7,3,-4,-4,-8,-5,-8,-4,7,-5,-1,-7,-10,7,1,10,-7,-8,5,5,-6,10,-5,-1,2,-3,4,3,2,-9,2,-5,-6,10,-4,7,-7,-6,-3,-5,4,10,-7,4,-5,-4,-4,-7,-3,-4,-4,-9,-9,-3,1,-9,-7,-4,4,-4,1,-5,9,7,-1,-1,3,-5,-6,-5,8,3,-3,-2,5,5,5,4,3,8,-4,8,10,10,-4,2,-8,-9,-1,7,6,5,5,-7,-3,-4,-5,-4,6,10,8,-1,-8,7,-1,7,-8,9,4,-4,5,5,10,7,-5,5,-1,-10,-7,8,3,5,10,7,-4,-4,-8,-10,-10,4,4,-9,-6,-3,9,-2,9,-6,-3,-6,5,-7,8,-3,2,2,-7,-2,3,7,-9,4,6,10,6,-10,5,-6,-3,-1,-4,-3,-5,3,2,-10,9,-10,8,8,-5,5,-4,-3,9,3,9,6,1,-4,1,6,9,-7,-8,-1,3,-5,8,-5,-3,2,-4,-6,10,-10,3,1,3,-1,4,4,-7,-6,6,-1,2,9,-4,5,-4,-4,-10,-10,-2,-4,2,-6,4,3,-5,-8,-2,5,1,-9,-4,3,10,8,2,-10,7,-5,-8,-10,-5,-2,-5,-2,-8,3,-7,-7,-8,9,-7,6,7,-5,-2,-9,-5,-5,-9,-1,9,8,-10,3,2,-2,2,-2,-1,-3,-4,-9,1,-1,10,-9,6,5,4,6,1,-4,-5,-10,-3,-7,-5,-6,-10,-9,1,-9,5,2,5,5,5,-7], dtype = "int64")#candidate|4726|(672,)|const|int64
call_4725 = relay.TupleGetItem(func_2084_call(relay.reshape(const_4726.astype('int64'), [14, 16, 3]), relay.reshape(const_4726.astype('int64'), [14, 16, 3]), ), 1)
call_4727 = relay.TupleGetItem(func_2088_call(relay.reshape(const_4726.astype('int64'), [14, 16, 3]), relay.reshape(const_4726.astype('int64'), [14, 16, 3]), ), 1)
output = relay.Tuple([call_4721,call_4725,const_4726,])
output2 = relay.Tuple([call_4722,call_4727,const_4726,])
func_4739 = relay.Function([], output)
mod['func_4739'] = func_4739
mod = relay.transform.InferType()(mod)
mutated_mod['func_4739'] = func_4739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4739_call = mutated_mod.get_global_var('func_4739')
call_4740 = func_4739_call()
output = call_4740
func_4741 = relay.Function([], output)
mutated_mod['func_4741'] = func_4741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4187_call = mod.get_global_var('func_4187')
func_4189_call = mutated_mod.get_global_var('func_4189')
call_4799 = relay.TupleGetItem(func_4187_call(), 0)
call_4800 = relay.TupleGetItem(func_4189_call(), 0)
func_3893_call = mod.get_global_var('func_3893')
func_3895_call = mutated_mod.get_global_var('func_3895')
var_4815 = relay.var("var_4815", dtype = "float32", shape = (270,))#candidate|4815|(270,)|var|float32
call_4814 = relay.TupleGetItem(func_3893_call(relay.reshape(var_4815.astype('float32'), [15, 9, 2])), 0)
call_4816 = relay.TupleGetItem(func_3895_call(relay.reshape(var_4815.astype('float32'), [15, 9, 2])), 0)
output = relay.Tuple([call_4799,call_4814,var_4815,])
output2 = relay.Tuple([call_4800,call_4816,var_4815,])
func_4825 = relay.Function([var_4815,], output)
mod['func_4825'] = func_4825
mod = relay.transform.InferType()(mod)
mutated_mod['func_4825'] = func_4825
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4826 = relay.var("var_4826", dtype = "float32", shape = (270,))#candidate|4826|(270,)|var|float32
func_4825_call = mutated_mod.get_global_var('func_4825')
call_4827 = func_4825_call(var_4826)
output = call_4827
func_4828 = relay.Function([var_4826], output)
mutated_mod['func_4828'] = func_4828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4437_call = mod.get_global_var('func_4437')
func_4438_call = mutated_mod.get_global_var('func_4438')
call_4855 = relay.TupleGetItem(func_4437_call(), 2)
call_4856 = relay.TupleGetItem(func_4438_call(), 2)
func_3626_call = mod.get_global_var('func_3626')
func_3628_call = mutated_mod.get_global_var('func_3628')
call_4860 = relay.TupleGetItem(func_3626_call(), 1)
call_4861 = relay.TupleGetItem(func_3628_call(), 1)
func_1886_call = mod.get_global_var('func_1886')
func_1888_call = mutated_mod.get_global_var('func_1888')
call_4873 = func_1886_call()
call_4874 = func_1886_call()
func_3977_call = mod.get_global_var('func_3977')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_4875 = relay.TupleGetItem(func_3977_call(), 0)
call_4876 = relay.TupleGetItem(func_3978_call(), 0)
func_3850_call = mod.get_global_var('func_3850')
func_3853_call = mutated_mod.get_global_var('func_3853')
const_4879 = relay.const([-3,-1,-5,-3,10,-3,7,-5,3,7,-10,-1,-8,-6,-10,-1,1,5,4,2,-9,-5,5,5,4,1,6,8,10,9,2,3,3,-3,8,-5,10,-5,9,-5,4,8,-8,4,-10,-8,-6,-6,-10,7,4,-5,9,-9,10,3,10,5,-8,5,-3,-8,7,7,-3,-3,4,1,-10,4,-6,5,8,5,-9,2,5,-1,6,-10,-2,-5,-3,-2,9,-4,-4,-3,8,-8,8,1,2,8,1,6,-10,-2,9,7,-1,-5,9,9,3,8,-1,-7,-4,10,2,9,-9,9,2,-8,-7,9,-10,-5,10,-4,-4,-2,5,-4,-10,-1,1,-6,5,7,6,8,-8,9,-10,-7,-6,-3,-2,8,-7,10,-8,-2,-10,-5,-8,-4,-9,4,-8,4,-1,2,3,7,10,9,-4,5,1,-2,-4,-5,1,-2,10,10,-4,-7,4,-8,-1,-6,-9,9,-10,1,9,-9,-5,7,9,-9,2,10,1,-2,-7,9,9,8,-1,7,4,10,9,5,5,-10,3,2,-10,-8,5,2,7,5,-8,-8,8,-2,-5,4,-2,-6,-8,8,-3,4,-4,-1,-6,-1,-9,-7,-8,4,7,-5,6,-3,-2,-2,-7,-4,-1,-6,-3,3,5,-1,-10,-6,6,-5,3,-7,-9,9,-3,1,-9,-5,3,6,-10,10], dtype = "int32")#candidate|4879|(260,)|const|int32
call_4878 = relay.TupleGetItem(func_3850_call(relay.reshape(const_4879.astype('int32'), [13, 10, 2]), relay.reshape(const_4879.astype('int32'), [13, 10, 2]), ), 0)
call_4880 = relay.TupleGetItem(func_3853_call(relay.reshape(const_4879.astype('int32'), [13, 10, 2]), relay.reshape(const_4879.astype('int32'), [13, 10, 2]), ), 0)
func_2303_call = mod.get_global_var('func_2303')
func_2307_call = mutated_mod.get_global_var('func_2307')
const_4891 = relay.const([-1,-5,-4,-1,3,-3,-5,3,6,1,-9,-7,8,10,4,2,-10,-10,5,-1,9,1,10,-7,2,-6,-5,-5,-2,-10,4,-2,1,1,3,-6,5,-6,1,-9], dtype = "int64")#candidate|4891|(40,)|const|int64
call_4890 = relay.TupleGetItem(func_2303_call(relay.reshape(call_4855.astype('int64'), []), relay.reshape(const_4891.astype('int64'), [1, 8, 5]), ), 1)
call_4892 = relay.TupleGetItem(func_2307_call(relay.reshape(call_4855.astype('int64'), []), relay.reshape(const_4891.astype('int64'), [1, 8, 5]), ), 1)
output = relay.Tuple([call_4855,call_4860,call_4873,call_4875,call_4878,const_4879,call_4890,const_4891,])
output2 = relay.Tuple([call_4856,call_4861,call_4874,call_4876,call_4880,const_4879,call_4892,const_4891,])
func_4910 = relay.Function([], output)
mod['func_4910'] = func_4910
mod = relay.transform.InferType()(mod)
output = func_4910()
func_4911 = relay.Function([], output)
mutated_mod['func_4911'] = func_4911
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4968 = relay.const([[[-4,4,-8,2,9,6,4,-10],[9,7,4,1,-10,-2,-8,10],[3,-1,-9,6,5,-3,4,-9],[3,-2,-10,10,-7,-2,-5,8],[4,-9,-6,-2,9,-9,-1,5],[-2,10,-1,2,3,5,-6,-5]],[[6,-5,9,3,-3,2,-9,-9],[-5,7,-9,5,2,-9,-7,-9],[6,-5,-1,4,9,9,2,-2],[-7,4,7,8,-3,8,-9,1],[10,4,-4,-5,-4,-4,-10,-5],[5,-3,-3,2,7,-4,-4,4]],[[2,-5,-6,-1,3,-9,2,-2],[-5,9,-5,4,10,8,6,10],[-2,6,5,10,-3,-3,-3,3],[-7,8,3,3,1,-7,-3,-4],[-2,-3,-10,-5,2,-9,2,-6],[2,2,-7,1,4,4,-7,-4]],[[-1,-7,2,5,1,-10,5,3],[-2,-5,8,7,-3,3,9,10],[4,2,-9,-1,-10,3,-9,-3],[1,-9,3,5,7,8,3,8],[3,-7,-7,-3,1,10,-4,2],[2,-6,-9,3,-9,2,6,1]],[[-7,2,-7,1,-10,-10,6,10],[3,-3,9,8,4,9,-7,-9],[-1,10,-5,5,-2,10,5,5],[9,2,-3,-3,-8,9,5,4],[1,3,3,-1,-3,2,-2,9],[5,9,-2,7,7,7,-5,9]],[[3,2,-9,2,6,1,-2,-1],[-2,7,3,3,-1,5,3,2],[5,3,-8,8,-10,-2,-1,-9],[3,6,9,7,2,-6,5,1],[3,-4,3,-3,-10,7,-7,-6],[-2,6,4,3,-7,-2,-8,-2]]], dtype = "uint16")#candidate|4968|(6, 6, 8)|const|uint16
const_4969 = relay.const([[[-5,1,-4,9,3,-7,-6,3],[4,-2,-10,6,10,7,-1,3],[7,-2,-1,2,2,2,-8,8],[9,-2,-7,-8,-6,-10,2,-3],[-9,4,7,-1,-5,8,8,-5],[4,-7,-8,9,-10,1,6,2]],[[2,-3,-2,-9,-9,-10,1,-3],[5,-9,5,-6,-8,-8,4,10],[-6,2,-9,-6,-8,-5,-4,-5],[10,-3,-1,-3,-10,5,-1,-8],[8,-6,3,-7,-8,1,3,-4],[-9,2,-8,10,4,-9,-2,3]],[[-9,9,10,-2,-8,-2,-8,-8],[3,-8,4,10,5,2,-8,-7],[3,8,2,2,4,3,-10,8],[2,6,-4,-4,8,4,3,3],[-7,-9,-5,-9,7,-1,-4,2],[-5,-1,-7,-7,1,10,-5,9]],[[-6,-9,3,7,1,-7,-7,2],[-9,4,-6,-8,-4,-2,-1,-1],[3,-7,-9,4,-4,-6,2,-6],[10,5,-1,-4,3,-4,-9,5],[-6,-6,-9,-6,3,-6,9,-6],[-10,-5,-7,-5,-7,7,5,-5]],[[6,-5,-4,-8,4,-4,3,-2],[-2,-3,-9,9,7,-9,-10,3],[-6,1,-1,6,2,-8,1,-10],[-10,2,-1,-5,-9,-1,9,-6],[-4,6,7,-1,-4,-6,1,-8],[10,2,10,-2,-4,-1,6,-9]],[[-6,6,-10,2,5,9,-3,1],[-6,5,-2,7,9,-10,-3,7],[-5,3,-1,-9,3,4,-4,9],[10,6,-2,-8,10,10,-7,5],[2,-7,-2,-9,4,-3,2,10],[10,4,10,-5,-1,4,-1,-2]]], dtype = "uint16")#candidate|4969|(6, 6, 8)|const|uint16
bop_4970 = relay.bitwise_xor(const_4968.astype('uint16'), relay.reshape(const_4969.astype('uint16'), relay.shape_of(const_4968))) # shape=(6, 6, 8)
output = relay.Tuple([bop_4970,])
output2 = relay.Tuple([bop_4970,])
func_4981 = relay.Function([], output)
mod['func_4981'] = func_4981
mod = relay.transform.InferType()(mod)
output = func_4981()
func_4982 = relay.Function([], output)
mutated_mod['func_4982'] = func_4982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2718_call = mod.get_global_var('func_2718')
func_2719_call = mutated_mod.get_global_var('func_2719')
call_4996 = relay.TupleGetItem(func_2718_call(), 0)
call_4997 = relay.TupleGetItem(func_2719_call(), 0)
func_2923_call = mod.get_global_var('func_2923')
func_2925_call = mutated_mod.get_global_var('func_2925')
var_4999 = relay.var("var_4999", dtype = "float32", shape = (108,))#candidate|4999|(108,)|var|float32
call_4998 = relay.TupleGetItem(func_2923_call(relay.reshape(var_4999.astype('float32'), [108,])), 4)
call_5000 = relay.TupleGetItem(func_2925_call(relay.reshape(var_4999.astype('float32'), [108,])), 4)
output = relay.Tuple([call_4996,call_4998,var_4999,])
output2 = relay.Tuple([call_4997,call_5000,var_4999,])
func_5003 = relay.Function([var_4999,], output)
mod['func_5003'] = func_5003
mod = relay.transform.InferType()(mod)
var_5004 = relay.var("var_5004", dtype = "float32", shape = (108,))#candidate|5004|(108,)|var|float32
output = func_5003(var_5004)
func_5005 = relay.Function([var_5004], output)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5051 = relay.var("var_5051", dtype = "float32", shape = (13, 10))#candidate|5051|(13, 10)|var|float32
uop_5052 = relay.exp(var_5051.astype('float32')) # shape=(13, 10)
func_1540_call = mod.get_global_var('func_1540')
func_1541_call = mutated_mod.get_global_var('func_1541')
call_5059 = relay.TupleGetItem(func_1540_call(), 0)
call_5060 = relay.TupleGetItem(func_1541_call(), 0)
func_4113_call = mod.get_global_var('func_4113')
func_4115_call = mutated_mod.get_global_var('func_4115')
var_5073 = relay.var("var_5073", dtype = "float64", shape = (1040,))#candidate|5073|(1040,)|var|float64
call_5072 = relay.TupleGetItem(func_4113_call(relay.reshape(var_5073.astype('float64'), [5, 13, 16])), 2)
call_5074 = relay.TupleGetItem(func_4115_call(relay.reshape(var_5073.astype('float64'), [5, 13, 16])), 2)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
const_5081 = relay.const([-1.865682,-7.277604,-4.086184,9.534396,-7.970794,6.808884,8.313337,-6.189670,-5.088217,-9.967951,-2.663198,8.828816,-1.946593,7.864100,-2.519786,6.447382,3.080630,-5.442289,6.387197,-5.586172,1.034353,1.643043,4.075509,1.029258,-9.801029,-1.780890,4.230222,5.899204,5.976538,0.518130,-8.810229,5.624883,2.895532,7.722075,8.904693,-7.824548,-1.100930,5.805898,-1.071639,5.087737,5.104938,8.985661,-7.576091,-8.356775,8.209108,3.680445,-4.431454,-5.934246,-2.780195,-9.739195,5.681253,-0.503705,6.131754,9.122087,-1.113566,-4.882024,-7.208298,-2.463823,-6.138660,5.614480,2.860355,6.542489,6.131406,4.632555,-9.649911,5.076026,-5.088446,3.773136,3.151550,2.292148,9.908950,5.820261,-3.941994,-1.433919,5.338617,-9.255222,-5.258922,-2.691969,8.649067,-0.780073,-4.466098,0.370725,9.396138,-8.761367,2.765802,1.258681,8.279877,6.777583,-0.558418,-0.656301,1.415745,-3.946729,-2.391411,2.121254,-5.518058,6.331877,9.506316,-3.015663,0.281943,0.853453,-9.366517,-3.905510,-9.011087,3.117396,9.519751,-7.573416,1.522091,2.384135,9.755821,8.049883,-8.732801,-3.550049,-6.610338,-7.718951,4.478421,-3.574387,-5.308768,2.653417,-5.436287,-2.900969,-3.047647,-2.023669,9.111208,-4.988806,-4.188803,9.009438,-4.763910,-0.504791,-2.221279,9.978591,9.535343,2.599171,-5.756515,-1.667208,-7.119069,-8.646201,5.156469,-2.399214,-3.773459,9.637720,-7.079730,4.261446,9.942901,8.013264,3.697457,6.823172,6.874619,-5.588807,-8.908423,-6.717793,3.599137,0.823321,-6.167281,-6.665599,-7.406823,3.566219,-6.199019,-5.129759,7.065483,0.399340,-3.846191,5.757224,2.484399,7.709711,-4.213685,-9.555898,-9.659157,-2.805783,7.733898,-7.250420,-7.423135,5.133674,-8.387913,-4.275227,4.321103,-6.978069,4.477452,6.111632,-2.725128,-4.420186,4.704250,-9.119972,-2.779985,-4.114791,0.716163,-7.871967,-3.914372,-9.134230,0.595287,-0.399280,-4.874757,-5.353059,-5.269687,7.205665,-8.728870,1.005193,-3.010889,0.460378,-2.529487,1.240843,-8.215693,-2.295260,3.105814,-6.033104,6.973447,5.727647,3.686009,5.634228,-1.628901,-8.818117,-7.148378,-9.814390,-6.012605,-0.235629,4.513853,-7.753595,3.226869,-1.296834,-7.384492,6.400809,-1.617539,7.815863,-9.639442,4.059412,2.255985,2.021052,-8.846456,3.339640,4.724742,3.673214,3.626754,7.243019,-7.109945,1.300842,-5.492250,4.954373,5.913157,-3.232457,4.182112,-7.004119,-0.899346,1.011331,7.054284,1.574247,-5.969239,5.800432,-6.650854,-2.047447,5.703101,3.344662,-1.218029,-2.753095,-3.956421,9.061708,-5.802830,-9.426181,4.891652,0.103001,-0.035621,6.938955,-8.755940,-5.022867,0.022482,9.442090,-7.627244,-1.104418,6.483196,4.593504,-2.180169,-7.862607,-4.888413,9.529117,-8.878287,3.689676,0.275054,5.059223,4.443950,-4.253882,-2.599817,4.819190,6.674480,5.581468,-7.196649,-1.904554,5.888071,-3.253809,4.214516,0.761916,-9.656657,8.389845,1.457237,7.304606,-3.118850,-7.253372,-9.670736,-8.073713,3.461405,-2.668447,-4.276798,-2.021306,8.170247,2.520389,-5.327273,-5.984767,5.507999,-1.615998,-0.371743,-0.730789,-7.036025,3.525268,-5.459900,-3.637370,0.669227,-2.838660,1.182283,1.699333,3.044205,0.724189,1.612372,-6.259014,3.665154,-3.684170,1.675344,6.576603,7.120865,-3.673508,-6.148393,4.815685,6.527209,4.825930,2.188013,-4.727849,6.749389,-2.491603,3.012547,-9.042778,-7.408767,8.645580,8.241746,2.317381,4.715829,-3.702473,-2.315985,-5.550116,7.505013,-5.282476,-7.592980,2.131790,-4.645884,6.542961,6.764984,3.646149,-4.634910,6.758228,7.641369,-9.795317,-2.641602,-1.216974,-6.773570,-4.212027,-0.008436,-0.566954,6.364129,-5.881716,-2.828288,-9.844799,5.409363,9.236679,-3.862765,5.343539,8.538494,-8.206981,1.397789,-6.579553,4.999234,1.928604,1.639244,8.789196,-7.578045,-3.627670,3.389974,-1.676323,-3.420429,-0.103298,-0.645861,-9.286983,9.044039,8.486269,9.111778,-2.257106,-7.422735,-9.474109,-8.778995,4.969715,-2.032726,7.999384,-1.638642,-3.443563,8.812506,1.961911,8.269373,9.197089,-2.214998,5.146314,-8.884444,3.922564,1.560027,-0.723239,6.741038,-5.436620,2.505876,8.946468,3.943802,0.967146,-8.758172,-4.423107,-0.129339,-5.958678,-8.792065,5.627334,5.573526,-8.971146,-5.033854,-2.072257,-7.956468,3.794824,-1.491385,5.353218,4.521511,-8.638176,7.058590,4.425342,-3.575587,-9.657068,9.866619,7.671710,-1.093817,8.976725,-7.032628,-2.278619,3.839140,1.018245,-4.319970,2.885772,2.878000,2.563667,1.031220,-9.679526,-5.761578,-3.737757,-2.760125,9.901592,8.919027,-9.609437,-4.803435,-9.686256,-6.973639,-2.490246,-7.835864,-3.715735,3.845296,-2.885633], dtype = "float64")#candidate|5081|(462,)|const|float64
call_5080 = relay.TupleGetItem(func_561_call(relay.reshape(const_5081.astype('float64'), [14, 3, 11])), 2)
call_5082 = relay.TupleGetItem(func_564_call(relay.reshape(const_5081.astype('float64'), [14, 3, 11])), 2)
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_5093 = relay.TupleGetItem(func_1499_call(), 2)
call_5094 = relay.TupleGetItem(func_1500_call(), 2)
func_1101_call = mod.get_global_var('func_1101')
func_1104_call = mutated_mod.get_global_var('func_1104')
var_5097 = relay.var("var_5097", dtype = "float64", shape = (180, 2))#candidate|5097|(180, 2)|var|float64
call_5096 = relay.TupleGetItem(func_1101_call(relay.reshape(var_5097.astype('float64'), [10, 9, 4])), 0)
call_5098 = relay.TupleGetItem(func_1104_call(relay.reshape(var_5097.astype('float64'), [10, 9, 4])), 0)
output = relay.Tuple([uop_5052,call_5059,call_5072,var_5073,call_5080,const_5081,call_5093,call_5096,var_5097,])
output2 = relay.Tuple([uop_5052,call_5060,call_5074,var_5073,call_5082,const_5081,call_5094,call_5098,var_5097,])
func_5110 = relay.Function([var_5051,var_5073,var_5097,], output)
mod['func_5110'] = func_5110
mod = relay.transform.InferType()(mod)
var_5111 = relay.var("var_5111", dtype = "float32", shape = (13, 10))#candidate|5111|(13, 10)|var|float32
var_5112 = relay.var("var_5112", dtype = "float64", shape = (1040,))#candidate|5112|(1040,)|var|float64
var_5113 = relay.var("var_5113", dtype = "float64", shape = (180, 2))#candidate|5113|(180, 2)|var|float64
output = func_5110(var_5111,var_5112,var_5113,)
func_5114 = relay.Function([var_5111,var_5112,var_5113,], output)
mutated_mod['func_5114'] = func_5114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5118 = relay.var("var_5118", dtype = "int32", shape = (15, 11, 11))#candidate|5118|(15, 11, 11)|var|int32
const_5119 = relay.const([[[-8,-6,10,4,-8,2,-5,2,8,7,-6],[4,9,5,5,7,-5,-4,4,1,-10,6],[6,1,3,-4,6,4,3,-9,-9,2,9],[1,3,-5,-6,8,-8,6,1,-10,-1,2],[6,-10,8,-1,7,10,3,-5,-6,-3,-2],[-8,10,-9,4,4,-5,-7,8,9,9,7],[5,-10,-5,-7,-1,-1,5,-3,3,1,4],[8,3,9,-7,5,-10,-2,8,-5,8,-4],[-6,-4,-8,5,-10,-6,-2,-8,-5,2,-7],[-2,8,6,3,-9,-8,-8,-7,-8,7,1],[-1,2,-9,1,1,-1,-1,2,-8,5,-3]],[[4,-7,6,-8,-5,5,7,4,-2,-1,3],[-3,-10,-8,-8,-7,1,-9,-7,-6,-8,-2],[9,-2,10,-5,9,-9,-10,1,8,-4,-1],[-7,-10,3,-6,-2,10,7,9,-4,-1,-5],[-2,10,-6,8,-5,-6,-8,2,1,-10,-10],[-4,8,-7,-2,9,-9,-3,-3,-2,6,5],[4,-9,-5,-9,-3,-4,-10,-7,3,8,6],[7,-2,10,-7,-1,4,8,-6,-4,10,9],[9,6,-5,2,-6,1,-7,4,-5,5,-5],[-7,-1,-2,-9,3,-9,7,-3,-5,9,-5],[-4,2,-3,9,3,-1,-8,-5,3,4,9]],[[8,-2,1,7,-2,6,-2,-3,9,6,-10],[10,-3,5,7,-1,-8,-5,8,8,5,-4],[-6,-6,4,-4,8,2,-9,1,3,-10,-4],[-3,-9,2,6,10,4,-7,-2,5,-5,3],[3,1,-3,10,-7,2,3,-1,10,1,9],[-4,-8,-1,5,-8,-8,-8,-9,-10,1,-6],[6,5,1,9,3,1,2,4,-7,-8,1],[-10,4,1,-2,10,-4,-3,1,5,7,7],[1,9,-4,-5,-4,-9,4,4,7,-5,8],[-6,-10,-5,8,-6,-5,-6,-3,6,-5,8],[5,7,-5,-2,8,4,-10,7,-2,8,-10]],[[-6,7,-2,9,2,-9,3,-9,9,-3,-7],[5,-3,-7,-6,-5,-1,6,-5,-1,-6,-5],[-6,-6,-6,-1,1,7,5,-5,2,-5,4],[-6,6,-5,-10,3,-9,-3,7,-7,2,-4],[-9,-9,-3,-6,8,6,-9,-6,3,3,8],[6,1,-4,7,-3,-9,1,-7,-8,9,8],[-5,5,4,2,5,9,-9,-3,3,7,8],[-5,-5,1,7,9,4,9,-3,3,-9,6],[-5,6,-4,-1,3,9,-9,3,10,7,8],[-3,9,9,-8,5,5,-1,-6,-3,-10,-8],[-1,-6,-3,-4,-9,1,4,-5,4,-6,-1]],[[10,-1,8,-5,2,-7,6,1,10,10,-9],[9,5,-2,-4,7,-2,-9,2,7,10,2],[2,8,5,-1,-2,-8,6,9,-5,-8,-9],[-9,8,4,-8,4,2,-3,-1,3,7,-4],[3,6,2,-5,8,-1,-10,4,5,-9,9],[-6,-8,-6,10,1,5,-9,1,9,10,6],[7,9,6,-1,-1,7,-3,6,5,7,3],[7,4,3,-6,-3,9,-6,-1,1,-3,-9],[3,2,-3,6,-6,1,-8,3,3,8,-9],[6,3,-10,-6,-3,-6,-7,-3,-4,7,-9],[10,-9,-8,-5,-1,-5,-8,1,5,3,10]],[[-10,-4,-3,2,3,4,6,-9,6,-2,6],[-9,-4,-2,8,8,6,6,2,-1,-1,7],[6,-6,9,7,-8,6,-1,-10,2,-8,-1],[-10,-10,5,6,9,-1,-6,5,-8,8,-8],[4,-9,-7,5,-9,8,-5,-3,7,3,-6],[-10,2,5,-4,10,-10,-4,-4,-4,1,-4],[-5,7,8,-3,1,-7,-3,-3,-5,7,-2],[4,-8,-10,-10,-7,-1,10,6,-4,-7,2],[-5,-9,9,-8,6,8,-10,-5,5,7,6],[-5,-3,1,-2,-1,9,-9,-9,1,9,-9],[10,-1,-6,10,10,-4,8,2,-10,9,7]],[[10,-3,9,-2,2,2,8,-4,10,6,6],[3,6,-2,-5,-10,-5,9,8,-4,-5,4],[6,2,1,-10,-3,-4,8,-3,5,9,-8],[-5,10,-7,-10,10,10,-10,3,-9,-4,-3],[-10,-5,-10,6,3,-6,-3,-1,3,-8,5],[-3,9,3,4,-8,-4,9,9,4,9,6],[3,6,7,9,2,-10,-6,8,1,-4,9],[9,-1,10,6,-3,-3,5,10,4,7,-5],[-5,3,-9,10,-2,-5,-5,2,-3,10,-1],[6,10,5,1,2,-5,5,4,1,6,9],[-5,5,-6,-3,-10,10,8,1,7,9,-10]],[[7,2,2,-6,-1,1,-8,-1,-4,2,4],[1,-3,-1,-2,9,-7,-7,-8,9,5,-5],[9,-6,6,-8,9,-6,-10,7,7,3,-4],[2,-7,-1,-3,7,-2,-4,10,9,-1,-4],[-1,5,6,2,10,3,-5,10,-3,-9,-8],[3,4,1,-8,-8,-5,-9,-1,-2,4,-8],[2,-8,-3,-9,-9,2,6,-1,-8,5,10],[-8,-4,-3,8,9,9,2,-6,4,-3,1],[2,6,-8,5,5,-10,4,9,-5,9,-10],[6,3,-1,8,8,1,10,-4,-9,8,10],[-3,3,9,-9,-4,3,7,-6,6,-7,-7]],[[-6,3,10,5,5,-8,5,2,-6,-1,6],[5,-4,-7,7,9,-2,1,6,-1,3,1],[7,-3,2,4,-5,1,9,2,9,-9,6],[7,5,4,9,9,-9,-1,-8,10,-3,5],[-8,-7,-8,9,6,5,6,-3,-5,1,7],[-8,6,-10,-8,10,-2,4,-3,6,-1,-3],[2,-9,10,-2,1,-2,7,-5,-7,-2,2],[-10,9,4,-7,-4,-5,-6,5,10,10,-5],[5,4,7,-10,-10,-1,6,-8,2,-4,6],[-2,9,-7,5,8,3,2,5,-6,4,-3],[-3,-5,-2,-2,10,9,5,10,9,-9,-9]],[[-2,-5,-1,-8,-1,-5,7,-7,8,-2,-7],[-5,8,5,6,-10,-10,9,-4,-6,-9,3],[-10,7,-8,-5,10,1,3,5,2,10,-10],[3,-7,1,10,5,6,8,-3,-8,2,-10],[7,-6,3,-3,6,-7,7,-10,1,8,7],[1,8,6,-1,7,-4,-1,9,-7,1,8],[1,-4,-5,-2,-6,-6,-4,-6,-7,-7,8],[-7,1,3,-8,-8,1,5,-2,-8,-2,7],[-5,3,8,4,-7,2,-4,7,-6,-5,5],[-10,-7,-9,3,6,-7,-3,-10,-10,7,-2],[4,7,4,-6,-1,10,-7,6,-3,9,3]],[[6,8,-10,-5,-9,4,1,-7,-9,-5,6],[-7,3,7,1,-5,-1,10,-9,-4,8,-4],[7,7,-10,4,4,10,-3,-9,-5,9,7],[-9,-6,5,-2,4,2,5,4,10,3,5],[-7,10,1,1,-9,-4,-5,3,-10,7,8],[6,3,2,-9,4,5,9,-3,2,1,1],[7,-5,10,-10,6,-2,5,-7,-3,10,6],[2,10,-3,1,8,7,6,-7,-6,6,2],[-4,-4,1,-4,3,-8,3,-5,7,-4,-9],[2,1,-7,-5,-8,9,5,6,-10,-7,-4],[-2,-7,-4,-5,-3,9,4,1,-8,-6,1]],[[-8,3,9,-8,10,-4,9,10,-3,1,-9],[1,-2,-8,-5,-2,-9,-2,-4,-1,-10,-3],[-5,3,6,-1,8,-4,8,-3,-5,5,-9],[-2,5,7,-8,-4,-3,-10,-4,-3,-10,5],[3,8,-10,-3,10,-1,-7,-2,-1,8,7],[3,7,-2,-7,5,-4,7,8,4,-5,4],[-7,9,-5,2,-4,-1,-4,-8,-1,-8,-5],[-10,7,10,-3,6,-1,8,1,-7,-8,4],[5,-1,-4,-3,6,-10,9,6,4,-2,6],[-2,1,-10,10,-8,-7,-3,-10,7,-10,-10],[7,-3,-10,6,4,-1,-9,-3,-6,-4,-2]],[[1,3,-9,-7,4,-8,4,9,-2,-10,-9],[5,-8,4,3,8,9,1,6,10,-1,4],[-6,5,-7,2,-2,7,7,1,-9,-3,-4],[-8,-4,8,-9,-1,7,-5,-1,-2,6,-2],[-1,5,5,8,-4,-8,7,6,-10,10,-10],[-4,4,3,-3,4,-9,-4,9,-2,10,-3],[-5,2,-3,3,-9,-6,10,2,-6,9,-5],[10,7,-9,1,4,1,1,8,9,10,-8],[-7,-6,-9,10,10,-10,-1,5,-10,-10,-5],[-5,7,-10,-3,9,-1,5,-2,3,-3,10],[-1,8,2,-2,-8,-9,3,4,-8,-6,-8]],[[8,-5,1,-6,-4,3,-8,-9,-3,-9,2],[10,10,8,6,8,-5,6,1,-8,9,-6],[-8,9,-1,-4,10,8,-1,-7,-2,2,6],[-7,10,-1,-7,-5,-1,6,3,-5,-3,5],[1,2,7,-3,4,1,3,4,-10,-5,-3],[2,-3,1,2,-2,9,6,-10,8,-9,9],[-10,4,-1,-2,-1,10,-1,-10,8,6,5],[-1,1,10,-10,-3,-9,-2,-7,-5,-9,4],[8,3,-7,-5,-10,-9,8,2,6,8,-4],[8,-5,2,9,-3,10,-5,6,-9,-6,9],[8,4,9,-1,-4,-6,1,-2,2,9,1]],[[10,6,6,-10,8,8,-1,-3,2,1,-6],[-6,5,2,-1,-10,2,2,7,-3,-7,-8],[10,1,9,-9,-6,-1,-2,-7,-10,4,2],[-2,-8,-6,7,-3,5,10,8,7,4,-9],[5,-1,-2,8,3,-2,4,3,-2,-10,-2],[9,10,6,-5,2,8,4,-2,-3,-2,-5],[-3,-10,7,-9,10,9,-5,-6,7,-2,-5],[6,-1,-2,1,1,-6,-10,3,-9,9,-3],[-2,-7,-10,5,-5,1,-7,-1,8,6,-3],[6,6,-8,-5,9,3,8,5,7,4,8],[-10,-4,8,-4,-4,8,-8,-5,1,-2,-2]]], dtype = "int32")#candidate|5119|(15, 11, 11)|const|int32
bop_5120 = relay.multiply(var_5118.astype('int32'), relay.reshape(const_5119.astype('int32'), relay.shape_of(var_5118))) # shape=(15, 11, 11)
var_5155 = relay.var("var_5155", dtype = "int32", shape = (15, 11, 11))#candidate|5155|(15, 11, 11)|var|int32
bop_5156 = relay.mod(var_5118.astype('float64'), relay.reshape(var_5155.astype('float64'), relay.shape_of(var_5118))) # shape=(15, 11, 11)
output = relay.Tuple([bop_5120,bop_5156,])
output2 = relay.Tuple([bop_5120,bop_5156,])
func_5161 = relay.Function([var_5118,var_5155,], output)
mod['func_5161'] = func_5161
mod = relay.transform.InferType()(mod)
mutated_mod['func_5161'] = func_5161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5161_call = mutated_mod.get_global_var('func_5161')
var_5163 = relay.var("var_5163", dtype = "int32", shape = (15, 11, 11))#candidate|5163|(15, 11, 11)|var|int32
var_5164 = relay.var("var_5164", dtype = "int32", shape = (15, 11, 11))#candidate|5164|(15, 11, 11)|var|int32
call_5162 = func_5161_call(var_5163,var_5164,)
output = call_5162
func_5165 = relay.Function([var_5163,var_5164,], output)
mutated_mod['func_5165'] = func_5165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5180 = relay.var("var_5180", dtype = "int32", shape = (13, 12, 2))#candidate|5180|(13, 12, 2)|var|int32
var_5181 = relay.var("var_5181", dtype = "int32", shape = (13, 12, 2))#candidate|5181|(13, 12, 2)|var|int32
bop_5182 = relay.greater_equal(var_5180.astype('bool'), relay.reshape(var_5181.astype('bool'), relay.shape_of(var_5180))) # shape=(13, 12, 2)
output = bop_5182
output2 = bop_5182
func_5191 = relay.Function([var_5180,var_5181,], output)
mod['func_5191'] = func_5191
mod = relay.transform.InferType()(mod)
mutated_mod['func_5191'] = func_5191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5191_call = mutated_mod.get_global_var('func_5191')
var_5193 = relay.var("var_5193", dtype = "int32", shape = (13, 12, 2))#candidate|5193|(13, 12, 2)|var|int32
var_5194 = relay.var("var_5194", dtype = "int32", shape = (13, 12, 2))#candidate|5194|(13, 12, 2)|var|int32
call_5192 = func_5191_call(var_5193,var_5194,)
output = call_5192
func_5195 = relay.Function([var_5193,var_5194,], output)
mutated_mod['func_5195'] = func_5195
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5199 = relay.const([[[2.924282,2.846283,-1.929491,-3.796306,-5.923687,-3.274336,4.071810,-7.378239,6.794528,2.016333,2.159475,-0.667643,-4.377192,1.810822,-3.369054],[-2.765174,9.607791,7.607867,-5.334897,6.325869,-9.601523,2.656786,6.962191,-0.739380,0.120401,-2.498992,0.517404,5.374210,5.914276,7.725763]],[[0.092316,1.997407,-3.969875,3.266858,-6.189995,9.050848,-2.149120,0.080350,5.812898,1.107726,8.571696,3.847361,-0.034621,-0.533250,-2.228632],[9.747177,-7.456214,-2.535162,3.612534,5.794173,-9.992876,-2.228718,5.100261,-6.466711,-2.615143,9.648397,8.577991,-8.312110,3.235485,-9.400794]],[[7.585231,-7.808969,-6.158112,-2.979427,-8.995676,-1.464924,-6.960773,1.327535,-2.367143,-7.757321,0.626619,-4.357709,6.542545,-1.462450,-9.190403],[-2.338692,-7.451079,7.804365,6.043844,-5.959740,8.144519,-3.725928,-7.985325,9.343147,4.915542,0.520862,-7.597490,2.616146,-7.338210,-4.410810]],[[-8.328965,-9.070291,0.969198,-3.085584,9.527239,-2.438744,4.272669,2.946943,3.605247,-4.655149,-2.855313,5.942463,9.115701,-5.781849,5.031248],[-9.051486,0.272115,-4.613256,-3.171823,0.078504,-7.047473,-3.114215,-3.227780,2.412848,4.043223,-2.541776,4.050835,-3.473266,7.089524,-0.986879]],[[3.085598,-6.500653,-5.903268,-0.324136,5.547931,-2.697104,0.795590,4.792326,-0.583571,2.767218,-4.624904,-9.032064,-2.407217,0.021173,8.643830],[-7.478849,-2.331685,-2.191107,0.523674,-0.241642,-6.490259,-7.297558,9.422887,-0.947957,-5.534860,8.023568,7.581835,-7.699860,-8.941504,4.825297]],[[-5.449574,0.341922,0.699246,0.581161,-7.202788,4.718106,-1.950063,-8.889109,-5.656100,-2.162987,3.663792,0.758093,7.947317,-0.234603,5.267302],[9.969940,6.022613,9.029063,-1.081804,8.997313,-7.042313,-3.171859,1.175158,-4.450500,5.042045,-2.548046,8.423546,6.939225,-0.130118,-9.215272]],[[-6.273343,5.760451,-4.509533,-2.745972,6.755335,3.197343,-3.543586,-1.031127,9.307896,2.518002,1.984321,2.363673,-8.643508,4.474391,-9.076202],[-7.825511,-4.084350,-1.807085,-1.891313,7.284250,-9.437617,7.595312,-1.495978,-2.193106,1.469452,-6.148857,-5.861183,4.029296,6.259904,7.590016]],[[-3.902762,-5.952906,7.441671,-9.030441,6.157205,7.651528,-8.119733,-0.967991,-2.141167,-9.439921,1.924236,0.773243,-3.665449,-1.143601,5.292925],[9.293021,8.407744,-1.146789,-2.560885,9.891704,9.694142,-8.764339,6.151549,-0.130193,8.917981,8.829682,-7.261724,-4.886010,9.360182,-8.428225]],[[-0.534649,7.690249,5.758379,-4.943087,-3.395694,0.891448,-7.599571,0.021782,-4.255685,-0.493672,4.466220,-8.097693,-8.193025,-8.497234,5.088843],[-3.729438,5.914387,-7.404260,-4.985187,-6.666666,-7.509165,-8.426153,2.383902,-8.242649,2.774219,-5.042520,2.008748,-3.891068,5.075736,1.721415]],[[1.149176,5.437665,6.902868,2.682308,-1.975274,-0.733028,1.612442,-1.725483,2.387532,8.515076,8.436519,6.061697,-2.965805,-0.594308,-2.909774],[4.337451,0.162000,-0.042648,-7.422391,-9.035108,-3.458490,0.559090,7.902596,-8.869084,-8.683786,-6.832080,9.133792,-1.558698,1.099037,-4.446008]],[[8.853805,-1.396563,-2.353589,9.320559,-5.267796,5.139636,5.927973,5.827928,-0.650195,8.116859,4.644470,-3.836842,6.954078,-7.868879,4.178130],[-3.527224,-0.006081,-8.166716,-8.391624,3.238154,5.048637,5.551240,9.976567,-0.458997,-4.253304,2.694007,8.141063,6.172329,-3.399444,8.948636]],[[-5.721180,-4.246796,-2.530430,9.760941,6.430634,-4.598104,1.263057,3.575234,-6.930663,0.498767,7.060373,-4.487716,-3.279825,0.246531,2.550246],[6.982369,-3.661463,4.315011,-6.807277,1.771253,7.903516,-6.225406,4.099473,-2.855655,7.146428,1.336102,-7.869918,1.757103,2.999135,2.037805]],[[-6.999503,-8.701555,3.912157,3.933764,-1.538410,8.848156,-8.658602,-4.068983,8.229142,6.705339,-5.326021,5.242126,-8.203964,-2.758623,3.087200],[3.926610,-4.809211,-5.355643,5.951881,6.864443,7.719703,4.938372,-8.437065,3.247120,-3.429696,1.924791,9.890885,6.503011,2.927380,2.211019]]], dtype = "float32")#candidate|5199|(13, 2, 15)|const|float32
uop_5200 = relay.log(const_5199.astype('float32')) # shape=(13, 2, 15)
output = uop_5200
output2 = uop_5200
func_5204 = relay.Function([], output)
mod['func_5204'] = func_5204
mod = relay.transform.InferType()(mod)
output = func_5204()
func_5205 = relay.Function([], output)
mutated_mod['func_5205'] = func_5205
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5288 = relay.var("var_5288", dtype = "float64", shape = (5, 3, 13))#candidate|5288|(5, 3, 13)|var|float64
uop_5289 = relay.sinh(var_5288.astype('float64')) # shape=(5, 3, 13)
var_5302 = relay.var("var_5302", dtype = "float64", shape = (5, 3, 13))#candidate|5302|(5, 3, 13)|var|float64
bop_5303 = relay.bitwise_or(uop_5289.astype('uint8'), relay.reshape(var_5302.astype('uint8'), relay.shape_of(uop_5289))) # shape=(5, 3, 13)
func_2847_call = mod.get_global_var('func_2847')
func_2849_call = mutated_mod.get_global_var('func_2849')
const_5307 = relay.const([4.402129,0.756039,-3.302329,-5.840422,2.136844,4.474151,-7.603883,5.300022,-4.073372,3.276443,-4.659097,8.426279,4.986802,-1.826831,-8.662095,9.830454,4.165455,3.406186,5.812770,-6.069812,2.851019,2.496930,-5.637431,-3.943492,-9.144628,-3.314448,-3.262621,4.904393,1.257659,-0.569209,-9.266220,0.057495,-5.168323,-4.357465,-3.920929,9.317747,-7.849429,-0.750482,1.258684,4.099361,-5.128080,4.968542,-3.415009,-7.630143,-1.005249,8.856892,-6.099993,-8.884194,-6.142986,4.866369,-9.725435,-8.639256,0.292863,7.760547,4.904427,-0.503346,-9.476918,-9.084016,0.999241,-1.992319,-8.790694,-1.060000,-7.821132,0.438161,6.359177,-2.361465,1.635495,-1.523009,5.213102,-7.162372,7.070530,-6.994416,-4.257369,-5.149055,4.987602,9.015735,-0.607769,6.860061,-8.111143,3.318348,7.017115,7.392009,-8.246845,3.421269,-1.711031,-2.495045,-6.469343,7.705492,-8.342691,-4.881939,7.531648,2.288505,-5.518347,-6.009656,7.345675,-9.973092,8.599205,-1.444252,-5.618076,6.500136,9.065777,-3.818410,-1.371388,-6.622317,6.366031,4.797604,-9.446667,-9.164632,9.255836,4.352775,1.561481,2.044408,-3.077790,-0.760486,0.201542,6.206373,-6.681214,-1.604130,2.536935,7.083931,-0.372124,3.338870,8.838480,2.301819,2.214434,1.518053,-8.454258,0.737594,-4.011134,1.959274,-8.855847,-0.148744,-5.696161,3.198860,1.205348,-2.976698,3.028717,-3.650681,-1.183428,8.699063,8.530876,-1.269706,1.776978,-0.289480,5.041935,1.472624,-4.335264,-9.111497,9.557350,-4.829857,-9.203606,-9.310585,0.449080,-3.644690,-1.425242,6.028646,8.494925,5.459144,2.102572,-4.729963,-6.932557,-6.409453,-4.071532,3.555862,4.602918,-2.003828,2.876350,4.418740,-6.626954,-9.158614,-0.826301,-3.031870,3.077758,-3.181934,2.714080,2.074905,6.019774,-3.254300,9.113143,4.626281,1.751138,-9.469974,-7.560697,0.140298,-2.887069,3.081129,4.452968,-9.502759,9.432699,-4.519984,4.326491,-1.479644,9.646861,-6.286773,6.079190,7.107411,-8.093858,2.572125,-4.632978,2.013002,-7.637682,9.271895,-3.328947,-4.016307,-6.051568,-9.871444,-7.408044,-7.682589,8.294577,-1.276554,-0.276289,2.304379,-8.871640,7.811076,-5.551831,8.719832,1.493017,-0.107701,-3.183509,-8.475725,9.377050,-9.001292,1.687466,-4.321653,-8.175885,9.211279,-1.040878,6.684848,8.593809,4.340402,2.842944,-6.561967,2.835097,-8.691907,2.468860,7.177796,8.944763,8.494893,-6.505115,9.632721,-7.805526,-7.561243,2.270554,2.790878,-4.506436,-5.817993,6.259830,0.987083,-5.165291,-8.994497,-7.602399,-4.571427,-7.134588,-0.031929,8.888259,2.493029,7.577554,7.652038,1.178062,6.081468,8.378476,4.831952,9.343459,-7.193391,-2.941902,9.668206,-8.703862,-4.286169,1.865352,1.562092,-7.673596,0.292403,-5.821650,-1.960496,8.250377,-2.761565,-4.161457,-1.330259,-1.728447,3.310344,0.359269,5.451032,-6.404178,-0.001969,-8.022233,1.673066], dtype = "float64")#candidate|5307|(286,)|const|float64
call_5306 = relay.TupleGetItem(func_2847_call(relay.reshape(const_5307.astype('float64'), [13, 2, 11])), 0)
call_5308 = relay.TupleGetItem(func_2849_call(relay.reshape(const_5307.astype('float64'), [13, 2, 11])), 0)
func_2469_call = mod.get_global_var('func_2469')
func_2470_call = mutated_mod.get_global_var('func_2470')
call_5315 = func_2469_call()
call_5316 = func_2469_call()
var_5318 = relay.var("var_5318", dtype = "float64", shape = (5, 3, 13))#candidate|5318|(5, 3, 13)|var|float64
bop_5319 = relay.less_equal(uop_5289.astype('bool'), relay.reshape(var_5318.astype('bool'), relay.shape_of(uop_5289))) # shape=(5, 3, 13)
func_1101_call = mod.get_global_var('func_1101')
func_1104_call = mutated_mod.get_global_var('func_1104')
const_5323 = relay.const([6.508377,-0.748483,-3.076143,-5.138291,6.909138,-1.071878,-8.777534,8.490931,-8.091034,1.938244,-0.602162,-1.548059,8.874467,2.080425,4.483234,-7.634624,4.184942,-7.237651,-4.830705,-2.258234,8.651902,3.392494,-4.154575,9.416071,9.030016,1.146337,-9.098273,0.773694,6.492687,3.709475,1.647794,3.543876,-2.697846,-7.973908,-4.584205,-3.989829,9.168514,9.297649,7.898218,6.928281,-7.642125,-7.602266,-5.520426,-8.655897,-4.567116,-3.262703,3.548587,-3.533932,0.614774,8.463074,-7.898355,-1.207501,4.823649,0.774958,-1.458589,-0.387278,1.693499,1.948281,-1.560416,3.091861,5.973367,-7.231657,-4.570107,4.030911,0.060175,5.894657,-0.979824,5.032403,-8.048168,-2.968128,9.667897,1.265146,9.957231,-0.399808,-6.427603,-6.481775,1.494435,-6.107764,-6.613772,-4.624473,-7.639235,4.550753,6.917665,8.732418,8.647336,-7.163676,-8.512453,-9.422281,-4.847568,5.531823,-5.686303,2.413641,-1.986474,7.843014,9.485421,-9.150552,-1.649451,-3.487682,-4.509002,0.379063,-4.662127,0.873081,1.438102,-9.473202,-5.125184,-2.204438,-3.177865,6.756201,0.796852,0.313660,-2.309275,7.807905,5.885019,-1.474069,4.115329,7.353649,9.349102,-7.727041,-7.772439,-8.704657,-4.998577,-8.181608,-8.659121,7.082892,-7.124366,-0.093873,-0.043632,0.915003,-3.441370,5.701399,2.599061,8.683509,6.205623,0.131180,-0.106916,0.063246,-7.667388,3.404591,1.222420,4.598206,0.545930,-7.832227,8.009568,7.545652,1.003893,0.793661,-6.666529,5.153083,-4.446333,9.538047,-6.030558,1.660947,-6.818735,-2.703594,9.030277,-1.230206,0.554140,-6.392287,-1.476979,-4.610715,-8.371765,8.465851,-5.225448,5.135780,0.551831,-6.292179,5.369234,5.846233,-7.536703,6.851162,5.334633,6.730827,-4.800878,6.596485,8.137602,-3.468650,9.499191,-8.781018,-9.859410,-3.033268,7.436927,0.081047,-4.908951,-3.066067,-8.229384,-9.356737,5.086618,1.310455,1.392357,4.265988,-4.643600,-9.596551,5.888041,-5.050216,-6.647105,8.502480,3.701494,-5.910340,2.486449,-5.217083,-9.553594,0.734062,-9.951508,1.049364,1.241540,9.246763,-2.839592,3.605157,-3.630935,2.631059,-3.640219,-2.774091,-1.512472,9.277932,-8.956840,7.412718,-3.245988,-2.176611,6.186048,-0.809349,-4.063051,5.838957,-4.642334,-0.467595,-7.849803,9.112683,2.951084,-1.693924,9.848551,0.330623,0.395980,-6.093420,-9.604846,4.120646,6.142547,-1.755987,3.754105,-8.340083,1.284164,-2.415989,2.515267,-8.261240,-1.431153,-2.609763,5.945387,4.699086,-8.834984,-8.333896,-9.229969,6.531994,-4.710182,-3.830963,4.534303,2.746490,3.760632,-5.986562,5.924289,2.673037,1.865181,4.626085,-5.132184,0.896730,4.943567,0.674243,8.688988,9.779948,-0.547856,1.953684,-2.985859,-1.555762,4.198230,-7.116595,-1.992227,-2.129640,4.562086,-5.642262,-1.037670,6.550343,7.395165,0.494504,9.659539,-0.261654,-6.565466,7.506871,-3.408007,1.174150,-0.276007,6.305497,8.364654,-6.051522,8.723289,-1.305232,-0.816235,4.429303,-4.102487,5.386727,2.454545,-0.060893,4.564413,2.402782,6.653915,3.020615,-9.195414,-2.164542,-5.363878,8.403783,7.988038,4.623753,8.326601,-0.351375,-5.418981,2.012284,3.111407,1.107954,2.067103,8.373899,6.921575,-5.468162,2.609303,-0.853592,3.247708,1.788871,2.450026,-6.027286,-2.247011,1.905568,-9.543643,-0.282074,-6.137402,7.023763,-1.483417,-1.244488,7.796856,-4.922864,-3.724044,7.647607,-6.202318,-5.055768,6.376132,-5.854075,9.122984,-7.628073,-9.772036,-1.476869,1.460524,-0.953062,-1.951256,9.682463,8.182030,-4.329641,-4.317889,3.718036,-6.873917,2.459137,-1.675594,7.692955,8.128825,-3.120871,8.103320,-2.196223], dtype = "float64")#candidate|5323|(360,)|const|float64
call_5322 = relay.TupleGetItem(func_1101_call(relay.reshape(const_5323.astype('float64'), [10, 9, 4])), 0)
call_5324 = relay.TupleGetItem(func_1104_call(relay.reshape(const_5323.astype('float64'), [10, 9, 4])), 0)
output = relay.Tuple([bop_5303,call_5306,const_5307,call_5315,bop_5319,call_5322,const_5323,])
output2 = relay.Tuple([bop_5303,call_5308,const_5307,call_5316,bop_5319,call_5324,const_5323,])
func_5325 = relay.Function([var_5288,var_5302,var_5318,], output)
mod['func_5325'] = func_5325
mod = relay.transform.InferType()(mod)
var_5326 = relay.var("var_5326", dtype = "float64", shape = (5, 3, 13))#candidate|5326|(5, 3, 13)|var|float64
var_5327 = relay.var("var_5327", dtype = "float64", shape = (5, 3, 13))#candidate|5327|(5, 3, 13)|var|float64
var_5328 = relay.var("var_5328", dtype = "float64", shape = (5, 3, 13))#candidate|5328|(5, 3, 13)|var|float64
output = func_5325(var_5326,var_5327,var_5328,)
func_5329 = relay.Function([var_5326,var_5327,var_5328,], output)
mutated_mod['func_5329'] = func_5329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3824_call = mod.get_global_var('func_3824')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_5348 = relay.TupleGetItem(func_3824_call(), 0)
call_5349 = relay.TupleGetItem(func_3826_call(), 0)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
var_5367 = relay.var("var_5367", dtype = "float64", shape = (77, 6))#candidate|5367|(77, 6)|var|float64
call_5366 = relay.TupleGetItem(func_561_call(relay.reshape(var_5367.astype('float64'), [14, 3, 11])), 2)
call_5368 = relay.TupleGetItem(func_564_call(relay.reshape(var_5367.astype('float64'), [14, 3, 11])), 2)
func_2303_call = mod.get_global_var('func_2303')
func_2307_call = mutated_mod.get_global_var('func_2307')
const_5380 = relay.const([5,-8,-8,-4,-8,-6,-6,-10,-5,6,3,-7,-7,-4,-4,-3,-9,-1,-5,-9,-4,1,-2,-8,7,-2,-10,-5,-6,1,7,8,4,-2,-6,9,-8,9,5,-4], dtype = "int64")#candidate|5380|(40,)|const|int64
call_5379 = relay.TupleGetItem(func_2303_call(relay.reshape(call_5348.astype('int64'), []), relay.reshape(const_5380.astype('int64'), [1, 8, 5]), ), 1)
call_5381 = relay.TupleGetItem(func_2307_call(relay.reshape(call_5348.astype('int64'), []), relay.reshape(const_5380.astype('int64'), [1, 8, 5]), ), 1)
func_1951_call = mod.get_global_var('func_1951')
func_1954_call = mutated_mod.get_global_var('func_1954')
const_5385 = relay.const([[-3.083137],[6.097791],[8.505135],[-6.465969],[-6.920729],[-4.187056],[3.572428],[9.997056],[-0.998533],[0.085435],[6.129285],[-3.094124],[-1.785242],[-7.738120],[7.214289],[4.114856],[-6.608755],[-0.964701],[-9.533238],[-2.305000],[4.522680],[3.181637],[3.692963],[-1.295154],[4.413976],[0.442536],[1.131460],[-3.498575],[4.672138],[-2.553181],[4.440458],[-8.864762],[4.825500],[7.188019],[1.183281],[-0.562353],[-0.551144],[3.092151],[-2.534229],[-4.481432],[6.471696],[-2.670553],[1.200444],[5.646207],[-6.470262],[2.679058],[4.622498],[7.803397],[7.696872],[-7.598305],[8.880417],[6.180705],[5.548699],[2.196891],[-1.683522],[9.549265],[0.774763],[-0.516177],[-2.564233],[3.830757],[-7.234982],[-0.371126],[9.975037],[-5.658166],[-5.715493],[8.217281],[5.390990],[-4.408821],[-4.476361],[-0.267220],[3.203295],[-2.001367],[7.591339],[3.598964],[-2.664216],[-3.755718],[-9.897922],[0.010412],[3.970125],[-1.759549],[-0.480751],[7.024673],[-9.333575],[-8.128269],[6.322138],[3.991420],[-2.892583],[-6.136666],[-9.473870],[0.053003],[-6.874344],[3.889044],[-9.914158],[-0.052182],[-0.106077],[-8.777153],[6.914912],[-2.995099],[9.395578],[-4.044105],[9.639517],[6.618166],[1.422243],[-4.200754],[8.047702],[8.591614],[6.975657],[-8.787864],[4.789218],[8.778554],[8.278032],[-3.603135],[6.828710],[-2.686537],[-8.963413],[-2.514044],[-7.118737],[2.129133],[9.993424],[-2.487418],[-3.544692],[-0.021552],[-3.350641],[3.757985],[-5.299781],[-6.105947],[-1.274652],[-3.956221],[7.652203],[-3.650465],[8.533953],[-6.080289],[-7.597685],[9.487052],[6.952757],[5.558892],[4.664568],[9.896986],[-4.691665],[9.086000],[-0.149263],[0.146199],[9.767530],[-4.048688],[-9.909183],[-8.055595],[7.002023],[-8.878483],[-5.919599],[4.210598],[9.128051],[0.186844],[6.550829],[-0.211860],[-4.231621],[-9.200286],[0.257897],[7.017582],[6.259713],[-8.567789],[8.438898],[7.267829],[3.465179],[-9.976020],[6.331636],[7.490264],[-0.877353],[-8.112290],[3.982105],[-7.713927],[-6.126062],[-8.326664],[-4.431508],[-9.130352],[-3.484246],[8.295092],[7.790893],[-8.308359],[-6.180557],[3.583152],[6.531042],[-8.796432],[7.281170],[1.500333],[-8.290417],[-6.248017],[-9.667185],[-2.676316],[7.408243],[-8.134347],[3.974203],[4.136533],[-2.409295],[2.973247],[-0.293134],[-8.721935],[6.672369],[-9.417935],[9.537809],[-2.404707],[6.289927],[7.103006],[5.057605],[-8.111483],[-8.188065],[-5.136396],[-6.186957],[3.652878],[-1.000142],[-9.293077],[7.099074],[-2.872006],[9.483397],[9.883892],[-5.710261],[-3.952663],[1.643443],[0.111077],[-7.221078],[9.108055],[-0.196302],[-9.135831],[8.516508],[3.767968],[0.553170],[-6.539840],[-2.108550],[8.556306],[6.203152],[5.992278],[-1.128521],[3.958912],[4.413484],[6.651819],[-2.275548],[-8.055265],[-9.873209],[-1.430595],[-3.809727],[8.875143],[4.063971],[-7.956150],[-2.528902],[0.878281],[4.805474],[7.943087],[9.660460],[6.108153],[3.157379],[-0.862055],[4.335716],[-0.341034],[0.278278],[4.284453],[-9.451468],[8.474994],[-0.951120],[-8.076452],[-1.191442],[0.322548],[-8.468517],[5.409540],[1.314493],[-3.496653],[9.541989],[0.029663],[4.418640],[3.805385],[-0.955734],[0.183536],[9.140037],[-6.668754],[-4.916808],[8.774989],[-2.272419],[-6.021924],[5.218323],[-1.115538],[-4.992184],[-6.753104],[2.177342],[-0.957420],[0.626070],[-0.847763],[-6.341755],[9.112994],[-9.192408],[-8.638917],[-6.505393],[3.695181],[-4.191712],[9.497143],[-6.082130],[-0.347750],[-8.392215],[-2.861924],[-2.083524],[-7.384155],[-7.848582],[0.939024],[-9.236357],[6.841567],[-3.302834],[-9.548955],[2.423441],[-6.824056],[7.180432],[1.031408],[3.068948],[6.525094],[-2.386095],[-8.896974],[-2.879509],[5.967804],[7.356148],[-6.197401],[9.766597],[-7.676635],[9.736503],[-4.872161],[7.031717],[-3.681032],[-6.176456],[-6.267051],[0.004585],[2.664838],[7.972505],[5.964383],[-1.950015],[9.696323],[8.800655],[-4.345880],[4.001869],[3.097490],[2.601253],[0.703785],[-2.865178],[8.888822],[5.141820],[-6.598347],[3.055310],[8.212802],[3.045647],[6.069936],[7.995730],[7.749489],[-5.809161],[0.752064],[6.607520],[-9.945145],[-7.164997],[6.071898],[7.165494],[2.676350],[-4.968476],[6.190274],[9.276376],[-1.963659],[6.929594],[-4.195585],[-7.742747],[-1.996893],[5.651454],[-2.104244],[-7.390578],[4.367159],[-6.411244],[8.573826],[-0.983549],[9.941995],[-2.631105],[-9.358962],[0.747593],[6.194344],[-8.335944],[3.917017],[1.587932],[6.126343],[3.291503],[3.413034],[-2.867111],[-8.772786],[9.174039],[-3.316190],[-2.095942],[-1.106257],[7.091176],[-8.733099],[-5.817330],[6.203503],[5.443533],[6.174819],[-2.817906],[-1.091939],[6.847930],[2.654795],[-5.710275],[-6.376275],[8.874053],[0.334196],[-8.713060],[6.876513],[9.718439],[-9.213549],[8.420800],[-9.699144],[-8.318720],[1.869411],[7.290534],[-9.713542],[-6.377589],[-1.409032],[7.522854],[-9.716176],[-3.289702],[-6.041542],[-8.606425],[-2.089535],[2.635914],[5.444537],[-9.167153],[-9.749729],[9.686707],[-2.464150],[9.778845],[4.782313],[-2.969360],[-2.972699],[1.121657],[4.385303],[5.567566],[-2.926933],[7.578986],[5.425389],[-1.114926],[6.707004],[-2.665953],[3.947392],[6.083428],[-5.910991],[7.252617],[-1.539104],[-1.298890],[1.236577],[-8.489888],[1.873036],[5.895102],[6.913245],[-4.418635],[4.886474],[9.362336],[9.402836],[-0.080931],[8.182522],[-5.354759],[-5.685883],[-7.726445],[-3.599125],[-1.193663],[-6.574534],[-2.466890],[-2.354688],[4.380879],[-0.763298],[-1.573219],[-4.617853],[-1.634659],[9.300631],[7.044296],[-6.312762],[0.981718],[9.048558],[-5.294632],[-1.908393],[6.423949],[9.192807],[-6.445498],[7.000893],[8.179573],[8.391901],[-3.671738],[7.863919],[5.506030],[6.341202],[3.625534],[2.991649],[7.720738],[-4.208322],[-9.431226],[-2.745368],[2.239974],[9.319595],[8.365941],[-0.865485],[-7.645072],[-7.972052],[4.734883],[7.718368],[-2.327932],[2.424891],[-3.993858],[-5.007581],[0.196779],[4.699374],[3.740324],[-3.557055],[8.781388],[-0.876179],[-8.991603],[9.857002],[-9.124783],[3.304154],[2.410069],[7.184896],[-9.375841],[-3.160174],[7.852957],[-4.509736],[0.910016],[-4.900207],[2.230149],[-1.455679],[-9.161472],[4.614447],[3.477240],[7.581432],[-8.768663],[6.477978],[7.583462],[6.784328],[-4.257815],[-0.330578],[3.684611],[-6.748180],[0.108522],[7.193989],[9.402666],[3.487790],[5.330628],[9.327682],[-1.802354],[-3.065504],[1.688983],[-5.085550],[-9.509168],[-8.487376],[1.502012],[-3.395828],[9.283522],[-3.005649],[7.719448],[7.867897],[3.784343],[-6.615131],[9.201729],[8.207433],[-7.232514],[-0.185238],[5.179786],[-6.012769],[6.306901],[-2.595552],[-1.309242],[1.010915],[-4.519022],[-4.458814],[3.133668],[-1.710410],[-0.503375],[4.336709],[-0.169947],[9.163777],[7.615643],[4.620511],[0.099900],[-5.372942],[-4.445349],[7.112016],[-1.684867],[6.323721],[-8.694223],[-7.639665],[3.849368],[-9.518118],[-3.785728],[-3.058999],[-2.155629],[0.389865],[4.637320],[6.529173],[6.065568],[0.564362],[-5.106013],[-9.185549],[5.343216],[4.196695],[0.153237],[-4.103100],[5.969746],[-6.796579],[-5.145640],[-3.438355],[8.821705],[-1.483836],[-0.743482],[5.237651],[-9.706279],[-6.275589],[6.529812],[6.928857],[-8.688060],[1.740516],[-4.586153],[-1.257465],[-0.059808],[8.688405],[7.026399],[-5.739548],[-5.803972],[-7.304420],[-5.848311],[-6.545383],[-6.147710],[3.707583],[3.060019],[1.927611],[-5.588842],[5.248776],[-0.376441],[-2.794980],[-0.132610],[2.719586],[5.033800],[-6.919042],[7.154649],[7.102918],[-6.258456],[-2.350562],[-1.259885],[1.893699],[-1.891852],[5.990024],[6.487649],[3.609955],[-1.424104],[-0.442089],[-2.900087],[7.377297],[6.740731],[4.282009],[-6.697964],[-9.547149],[-2.049446],[1.588621],[6.251188],[-5.332785],[1.596054],[-2.422162],[-1.458565],[-6.775230],[9.824295],[9.573896],[2.365749],[2.132808],[1.686230],[2.229850],[0.854102],[-3.910459],[-7.498987],[-1.249065],[-8.649544],[3.129401],[-3.934186],[-0.040499],[8.118493],[-2.191939],[-4.657960],[-2.928602],[-2.516782],[-0.315929],[-7.979881],[0.490804],[-8.644425],[9.986924],[8.982640],[-5.473331],[-3.593532],[-7.914274],[9.880824],[8.277352],[9.173840],[5.249021],[-0.114300],[8.978976],[4.768733],[-7.961315],[7.275047],[-5.409218],[8.176033],[-8.443298],[6.481314],[7.187823],[-1.475520],[2.935970],[-6.139069],[5.619258],[-1.264796],[0.763732],[-3.163050],[3.328954],[9.590586],[-8.524524],[0.192610],[-0.909912],[-3.896394]], dtype = "float32")#candidate|5385|(715, 1)|const|float32
call_5384 = relay.TupleGetItem(func_1951_call(relay.reshape(const_5385.astype('float32'), [13, 11, 5]), relay.reshape(const_5385.astype('float32'), [13, 11, 5]), ), 0)
call_5386 = relay.TupleGetItem(func_1954_call(relay.reshape(const_5385.astype('float32'), [13, 11, 5]), relay.reshape(const_5385.astype('float32'), [13, 11, 5]), ), 0)
output = relay.Tuple([call_5348,call_5366,var_5367,call_5379,const_5380,call_5384,const_5385,])
output2 = relay.Tuple([call_5349,call_5368,var_5367,call_5381,const_5380,call_5386,const_5385,])
func_5388 = relay.Function([var_5367,], output)
mod['func_5388'] = func_5388
mod = relay.transform.InferType()(mod)
mutated_mod['func_5388'] = func_5388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5389 = relay.var("var_5389", dtype = "float64", shape = (77, 6))#candidate|5389|(77, 6)|var|float64
func_5388_call = mutated_mod.get_global_var('func_5388')
call_5390 = func_5388_call(var_5389)
output = call_5390
func_5391 = relay.Function([var_5389], output)
mutated_mod['func_5391'] = func_5391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_5505 = relay.TupleGetItem(func_1672_call(), 0)
call_5506 = relay.TupleGetItem(func_1673_call(), 0)
output = relay.Tuple([call_5505,])
output2 = relay.Tuple([call_5506,])
func_5508 = relay.Function([], output)
mod['func_5508'] = func_5508
mod = relay.transform.InferType()(mod)
output = func_5508()
func_5509 = relay.Function([], output)
mutated_mod['func_5509'] = func_5509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3762_call = mod.get_global_var('func_3762')
func_3763_call = mutated_mod.get_global_var('func_3763')
call_5517 = relay.TupleGetItem(func_3762_call(), 0)
call_5518 = relay.TupleGetItem(func_3763_call(), 0)
uop_5530 = relay.acos(call_5517.astype('float64')) # shape=(5, 10, 7)
uop_5532 = relay.acos(call_5518.astype('float64')) # shape=(5, 10, 7)
output = uop_5530
output2 = uop_5532
func_5546 = relay.Function([], output)
mod['func_5546'] = func_5546
mod = relay.transform.InferType()(mod)
output = func_5546()
func_5547 = relay.Function([], output)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4172_call = mod.get_global_var('func_4172')
func_4173_call = mutated_mod.get_global_var('func_4173')
call_5602 = relay.TupleGetItem(func_4172_call(), 0)
call_5603 = relay.TupleGetItem(func_4173_call(), 0)
const_5612 = relay.constdtype = "float64")#candidate|5612|(14, 11, 12)|const|float64
bop_5613 = relay.left_shift(call_5602.astype('uint64'), relay.reshape(const_5612.astype('uint64'), relay.shape_of(call_5602))) # shape=(14, 11, 12)
bop_5616 = relay.left_shift(call_5603.astype('uint64'), relay.reshape(const_5612.astype('uint64'), relay.shape_of(call_5603))) # shape=(14, 11, 12)
func_4113_call = mod.get_global_var('func_4113')
func_4115_call = mutated_mod.get_global_var('func_4115')
var_5638 = relay.var("var_5638", dtype = "float64", shape = (1040,))#candidate|5638|(1040,)|var|float64
call_5637 = relay.TupleGetItem(func_4113_call(relay.reshape(var_5638.astype('float64'), [5, 13, 16])), 3)
call_5639 = relay.TupleGetItem(func_4115_call(relay.reshape(var_5638.astype('float64'), [5, 13, 16])), 3)
func_3711_call = mod.get_global_var('func_3711')
func_3714_call = mutated_mod.get_global_var('func_3714')
var_5641 = relay.var("var_5641", dtype = "float64", shape = (462,))#candidate|5641|(462,)|var|float64
call_5640 = relay.TupleGetItem(func_3711_call(relay.reshape(var_5641.astype('float64'), [462,])), 2)
call_5642 = relay.TupleGetItem(func_3714_call(relay.reshape(var_5641.astype('float64'), [462,])), 2)
func_3581_call = mod.get_global_var('func_3581')
func_3582_call = mutated_mod.get_global_var('func_3582')
call_5643 = relay.TupleGetItem(func_3581_call(), 0)
call_5644 = relay.TupleGetItem(func_3582_call(), 0)
func_4210_call = mod.get_global_var('func_4210')
func_4215_call = mutated_mod.get_global_var('func_4215')
var_5647 = relay.var("var_5647", dtype = "int16", shape = (585,))#candidate|5647|(585,)|var|int16
var_5648 = relay.var("var_5648", dtype = "float64", shape = ())#candidate|5648|()|var|float64
call_5646 = relay.TupleGetItem(func_4210_call(relay.reshape(var_5647.astype('int16'), [13, 5, 9]), relay.reshape(var_5647.astype('int16'), [13, 5, 9]), relay.reshape(var_5648.astype('float64'), []), ), 1)
call_5649 = relay.TupleGetItem(func_4215_call(relay.reshape(var_5647.astype('int16'), [13, 5, 9]), relay.reshape(var_5647.astype('int16'), [13, 5, 9]), relay.reshape(var_5648.astype('float64'), []), ), 1)
func_3581_call = mod.get_global_var('func_3581')
func_3582_call = mutated_mod.get_global_var('func_3582')
call_5652 = relay.TupleGetItem(func_3581_call(), 0)
call_5653 = relay.TupleGetItem(func_3582_call(), 0)
uop_5661 = relay.asin(call_5637.astype('float64')) # shape=(5, 13, 16)
uop_5663 = relay.asin(call_5639.astype('float64')) # shape=(5, 13, 16)
output = relay.Tuple([bop_5613,var_5638,call_5640,var_5641,call_5643,call_5646,var_5647,var_5648,call_5652,uop_5661,])
output2 = relay.Tuple([bop_5616,var_5638,call_5642,var_5641,call_5644,call_5649,var_5647,var_5648,call_5653,uop_5663,])
func_5668 = relay.Function([var_5638,var_5641,var_5647,var_5648,], output)
mod['func_5668'] = func_5668
mod = relay.transform.InferType()(mod)
mutated_mod['func_5668'] = func_5668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5668_call = mutated_mod.get_global_var('func_5668')
var_5670 = relay.var("var_5670", dtype = "float64", shape = (1040,))#candidate|5670|(1040,)|var|float64
var_5671 = relay.var("var_5671", dtype = "float64", shape = (462,))#candidate|5671|(462,)|var|float64
var_5672 = relay.var("var_5672", dtype = "int16", shape = (585,))#candidate|5672|(585,)|var|int16
var_5673 = relay.var("var_5673", dtype = "float64", shape = ())#candidate|5673|()|var|float64
call_5669 = func_5668_call(var_5670,var_5671,var_5672,var_5673,)
output = call_5669
func_5674 = relay.Function([var_5670,var_5671,var_5672,var_5673,], output)
mutated_mod['func_5674'] = func_5674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2469_call = mod.get_global_var('func_2469')
func_2470_call = mutated_mod.get_global_var('func_2470')
call_5715 = func_2469_call()
call_5716 = func_2469_call()
func_2416_call = mod.get_global_var('func_2416')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_5723 = func_2416_call()
call_5724 = func_2416_call()
func_2847_call = mod.get_global_var('func_2847')
func_2849_call = mutated_mod.get_global_var('func_2849')
const_5737 = relay.const([7.446674,-3.344913,-3.908605,-7.863939,3.512753,-1.202580,-2.186834,-0.085354,1.319580,-5.629397,4.366445,2.668116,-5.377230,5.516333,-3.718517,4.670633,2.209312,8.199796,-4.532059,3.896269,-3.254879,-0.603107,0.551875,-0.931309,-5.501427,5.570764,5.222072,6.355447,-5.570226,3.331218,1.559669,-3.915627,-6.237953,-0.560714,5.020794,-1.228329,-1.481012,-9.547557,0.265178,-8.008997,9.827005,-7.008181,-3.167170,7.950171,-4.738547,3.013974,2.974619,-7.767542,4.272922,-2.789117,-2.126092,-2.848981,4.125444,7.389575,5.753812,-2.122487,2.990501,7.803738,-8.714444,-3.821898,3.604696,-7.321608,3.637232,1.864798,-0.116621,9.793784,-3.291253,8.347913,-5.788117,7.068549,-4.549071,-1.665567,-6.634921,0.971311,-4.832015,2.381578,8.522800,4.881161,9.546981,7.617355,-3.649780,-9.614910,-0.031966,9.200057,-7.790872,-1.802442,-0.912473,-5.995686,-6.496139,-5.570885,2.818995,-2.481899,7.481758,8.078559,-0.033837,-0.886905,8.262806,-9.247515,-8.225656,-8.310883,-6.180904,1.435174,-0.479587,7.877596,5.537486,4.372877,3.771649,3.002228,0.671866,3.557867,3.564656,3.179962,9.402098,-0.844994,2.089157,-5.653105,9.194787,-9.032762,-4.122506,-4.918411,8.579438,-6.158251,-5.302708,-3.954764,7.527446,9.309342,9.255753,1.446023,-4.371672,0.150036,3.151068,8.463346,6.670235,-6.379945,4.792827,-3.335679,-7.774489,-1.046243,-1.506252,7.279734,-7.796739,0.087236,8.587102,-6.772259,-3.436162,6.964438,-4.906058,6.016935,-7.219092,7.004457,-6.630461,0.740878,-7.133824,6.021928,-5.934023,-0.098966,-3.515672,-4.693798,5.257560,7.410637,-4.667698,4.852590,-5.294463,4.407402,-4.692847,-4.975363,-4.730495,3.071463,8.153904,1.963382,1.042461,1.550499,4.139535,3.909064,-7.117551,1.093047,3.744220,6.585159,6.118599,1.458154,9.598338,-0.714520,0.932641,6.291907,3.625484,-7.625597,-9.494234,-9.596753,6.880600,-7.077953,-4.630545,5.904008,-5.821706,1.759550,5.527516,5.112973,2.608275,-2.776678,-0.274253,1.321115,-3.976528,-1.951690,2.961732,6.303005,6.242076,1.237113,1.523051,9.289317,8.753184,5.526431,5.269895,-9.541911,-5.330765,7.694652,-1.660686,-6.545353,-2.139710,4.362554,8.514122,6.935628,0.072567,0.572306,1.285200,-5.623647,6.109196,0.444571,6.910875,0.208629,-1.694171,-8.227138,-9.405332,1.951120,4.174776,-1.199554,3.144857,7.689473,-9.477361,4.977101,-6.806878,8.434774,8.451322,-9.476361,-6.037756,2.377655,9.406996,2.226805,-6.254371,-5.502878,7.558589,6.394192,-4.514438,3.904015,2.880394,-4.788753,6.399914,0.261730,-2.353074,4.617561,-8.457040,7.096763,-8.063037,6.671583,-1.064581,-1.634186,-2.899189,-4.856370,8.424777,-8.234107,5.094083,-1.380413,-1.829663,2.690589,7.490993,1.524160,0.203825,1.974268,3.530908,8.178842,2.391946,0.252985,1.391303,-6.919022,-9.316593,6.016976,-4.846984,-3.440653], dtype = "float64")#candidate|5737|(286,)|const|float64
call_5736 = relay.TupleGetItem(func_2847_call(relay.reshape(const_5737.astype('float64'), [13, 2, 11])), 0)
call_5738 = relay.TupleGetItem(func_2849_call(relay.reshape(const_5737.astype('float64'), [13, 2, 11])), 0)
func_1789_call = mod.get_global_var('func_1789')
func_1791_call = mutated_mod.get_global_var('func_1791')
const_5754 = relay.const([7,-1,-1,-4,2,-5,-4,-2,-6,-6], dtype = "int64")#candidate|5754|(10,)|const|int64
call_5753 = relay.TupleGetItem(func_1789_call(relay.reshape(const_5754.astype('int64'), [10,])), 1)
call_5755 = relay.TupleGetItem(func_1791_call(relay.reshape(const_5754.astype('int64'), [10,])), 1)
uop_5761 = relay.acosh(const_5737.astype('float64')) # shape=(286,)
bop_5777 = relay.multiply(const_5737.astype('float64'), call_5723.astype('float64')) # shape=(286,)
bop_5780 = relay.multiply(const_5737.astype('float64'), call_5724.astype('float64')) # shape=(286,)
output = relay.Tuple([call_5715,call_5736,call_5753,const_5754,uop_5761,bop_5777,])
output2 = relay.Tuple([call_5716,call_5738,call_5755,const_5754,uop_5761,bop_5780,])
func_5781 = relay.Function([], output)
mod['func_5781'] = func_5781
mod = relay.transform.InferType()(mod)
output = func_5781()
func_5782 = relay.Function([], output)
mutated_mod['func_5782'] = func_5782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mod.get_global_var('func_3055')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_5823 = relay.TupleGetItem(func_3055_call(), 1)
call_5824 = relay.TupleGetItem(func_3056_call(), 1)
output = call_5823
output2 = call_5824
func_5849 = relay.Function([], output)
mod['func_5849'] = func_5849
mod = relay.transform.InferType()(mod)
output = func_5849()
func_5850 = relay.Function([], output)
mutated_mod['func_5850'] = func_5850
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5886 = relay.var("var_5886", dtype = "bool", shape = (15, 10, 16))#candidate|5886|(15, 10, 16)|var|bool
const_5887 = relay.const([[[False,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True],[True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True],[True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False],[False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False],[False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,False],[True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True],[True,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False],[True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,True],[False,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False],[True,True,False,True,False,True,True,True,True,False,True,False,False,True,True,False]],[[True,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False],[False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,False],[True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True],[False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,True],[False,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True],[False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,False],[False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False],[False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True],[False,True,True,False,True,False,True,True,True,False,True,True,True,False,True,True],[False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True]],[[False,True,True,True,True,True,False,False,True,True,True,False,True,False,False,False],[False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False],[True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True],[True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False],[False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True],[False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False],[True,True,True,False,False,False,False,True,False,True,True,False,False,True,True,False],[False,True,False,True,True,False,False,False,True,True,False,True,True,True,False,True],[True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False],[True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True]],[[True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True],[False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,False],[True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True],[False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False],[True,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True],[False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False],[False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True],[False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True],[True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True],[True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True]],[[True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False],[True,True,False,False,True,False,True,False,True,False,False,True,True,True,False,False],[False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False],[True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True],[True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True],[True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False],[True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True],[True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,False],[True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,False],[False,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False]],[[False,False,True,False,False,False,True,False,True,False,False,False,True,True,False,True],[True,True,False,False,False,False,False,True,True,True,False,True,True,True,True,False],[True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,True],[False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False],[False,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False],[False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True],[True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True],[True,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False],[True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True],[True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False]],[[False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True],[False,True,True,True,False,True,True,False,True,False,False,True,True,True,True,False],[True,False,True,False,False,False,True,True,True,True,False,True,False,True,False,False],[False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True],[True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True],[True,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True],[True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False],[False,True,True,True,False,False,True,False,False,False,True,True,False,False,False,True],[False,True,False,False,True,False,True,True,False,False,True,True,False,False,True,False],[True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,True]],[[False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True],[True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False],[False,True,False,True,False,True,False,True,True,False,False,True,True,True,False,True],[True,False,True,True,True,True,True,False,False,True,True,True,True,False,True,True],[True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,True],[False,False,False,False,True,False,False,True,True,True,True,False,False,False,True,True],[False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True],[False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False],[False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False],[True,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False]],[[True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True],[True,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True],[True,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True],[False,False,True,False,False,True,False,False,False,True,False,True,True,True,False,False],[False,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False],[False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True],[False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True],[False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,True],[False,False,False,True,False,False,True,True,True,True,True,False,False,True,True,True],[True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False]],[[True,True,True,False,True,False,True,True,True,False,True,False,True,True,True,False],[False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False],[False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True],[False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,True],[False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False],[False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False],[False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False],[True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True],[True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False],[True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True]],[[True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False],[False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True],[False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True],[True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True],[False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True],[True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False],[True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True],[True,False,True,True,False,False,False,True,False,False,True,False,True,True,False,False],[True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True],[True,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False]],[[False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False],[True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True],[True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True],[False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True],[False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True],[True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False],[False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,True],[False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False],[True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False],[True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True]],[[True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,False],[True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False],[True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False],[False,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True],[True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False],[False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True],[True,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False],[True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False],[True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True],[False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True]],[[False,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True],[False,False,False,False,True,False,True,False,True,True,False,True,True,True,False,True],[True,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False],[True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,True],[True,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False],[False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True],[True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,True],[False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True],[False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False],[True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True]],[[False,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True],[False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,True],[False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False],[True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True],[True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True],[True,False,False,False,True,False,True,False,True,True,False,False,True,True,False,False],[True,True,True,False,True,False,True,False,False,False,False,False,False,False,False,True],[False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True],[True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True],[True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False]]], dtype = "bool")#candidate|5887|(15, 10, 16)|const|bool
bop_5888 = relay.logical_or(var_5886.astype('bool'), relay.reshape(const_5887.astype('bool'), relay.shape_of(var_5886))) # shape=(15, 10, 16)
uop_5893 = relay.log(bop_5888.astype('float64')) # shape=(15, 10, 16)
output = relay.Tuple([uop_5893,])
output2 = relay.Tuple([uop_5893,])
func_5897 = relay.Function([var_5886,], output)
mod['func_5897'] = func_5897
mod = relay.transform.InferType()(mod)
var_5898 = relay.var("var_5898", dtype = "bool", shape = (15, 10, 16))#candidate|5898|(15, 10, 16)|var|bool
output = func_5897(var_5898)
func_5899 = relay.Function([var_5898], output)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5918 = relay.var("var_5918", dtype = "uint16", shape = (15, 16, 6))#candidate|5918|(15, 16, 6)|var|uint16
var_5919 = relay.var("var_5919", dtype = "uint16", shape = (15, 16, 6))#candidate|5919|(15, 16, 6)|var|uint16
bop_5920 = relay.greater_equal(var_5918.astype('bool'), relay.reshape(var_5919.astype('bool'), relay.shape_of(var_5918))) # shape=(15, 16, 6)
output = relay.Tuple([bop_5920,])
output2 = relay.Tuple([bop_5920,])
func_5932 = relay.Function([var_5918,var_5919,], output)
mod['func_5932'] = func_5932
mod = relay.transform.InferType()(mod)
mutated_mod['func_5932'] = func_5932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5932_call = mutated_mod.get_global_var('func_5932')
var_5934 = relay.var("var_5934", dtype = "uint16", shape = (15, 16, 6))#candidate|5934|(15, 16, 6)|var|uint16
var_5935 = relay.var("var_5935", dtype = "uint16", shape = (15, 16, 6))#candidate|5935|(15, 16, 6)|var|uint16
call_5933 = func_5932_call(var_5934,var_5935,)
output = call_5933
func_5936 = relay.Function([var_5934,var_5935,], output)
mutated_mod['func_5936'] = func_5936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4326_call = mod.get_global_var('func_4326')
func_4327_call = mutated_mod.get_global_var('func_4327')
call_5944 = relay.TupleGetItem(func_4326_call(), 0)
call_5945 = relay.TupleGetItem(func_4327_call(), 0)
func_5897_call = mod.get_global_var('func_5897')
func_5899_call = mutated_mod.get_global_var('func_5899')
var_5947 = relay.var("var_5947", dtype = "bool", shape = (2, 1200))#candidate|5947|(2, 1200)|var|bool
call_5946 = relay.TupleGetItem(func_5897_call(relay.reshape(var_5947.astype('bool'), [15, 10, 16])), 0)
call_5948 = relay.TupleGetItem(func_5899_call(relay.reshape(var_5947.astype('bool'), [15, 10, 16])), 0)
bop_5950 = relay.add(call_5946.astype('uint16'), relay.reshape(var_5947.astype('uint16'), relay.shape_of(call_5946))) # shape=(15, 10, 16)
bop_5953 = relay.add(call_5948.astype('uint16'), relay.reshape(var_5947.astype('uint16'), relay.shape_of(call_5948))) # shape=(15, 10, 16)
func_3305_call = mod.get_global_var('func_3305')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_5959 = func_3305_call()
call_5960 = func_3305_call()
output = relay.Tuple([call_5944,bop_5950,call_5959,])
output2 = relay.Tuple([call_5945,bop_5953,call_5960,])
func_5963 = relay.Function([var_5947,], output)
mod['func_5963'] = func_5963
mod = relay.transform.InferType()(mod)
mutated_mod['func_5963'] = func_5963
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5964 = relay.var("var_5964", dtype = "bool", shape = (2, 1200))#candidate|5964|(2, 1200)|var|bool
func_5963_call = mutated_mod.get_global_var('func_5963')
call_5965 = func_5963_call(var_5964)
output = call_5965
func_5966 = relay.Function([var_5964], output)
mutated_mod['func_5966'] = func_5966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5546_call = mod.get_global_var('func_5546')
func_5547_call = mutated_mod.get_global_var('func_5547')
call_5998 = func_5546_call()
call_5999 = func_5546_call()
output = relay.Tuple([call_5998,])
output2 = relay.Tuple([call_5999,])
func_6011 = relay.Function([], output)
mod['func_6011'] = func_6011
mod = relay.transform.InferType()(mod)
mutated_mod['func_6011'] = func_6011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6011_call = mutated_mod.get_global_var('func_6011')
call_6012 = func_6011_call()
output = call_6012
func_6013 = relay.Function([], output)
mutated_mod['func_6013'] = func_6013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2146_call = mod.get_global_var('func_2146')
func_2148_call = mutated_mod.get_global_var('func_2148')
call_6024 = func_2146_call()
call_6025 = func_2146_call()
output = relay.Tuple([call_6024,])
output2 = relay.Tuple([call_6025,])
func_6028 = relay.Function([], output)
mod['func_6028'] = func_6028
mod = relay.transform.InferType()(mod)
mutated_mod['func_6028'] = func_6028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6028_call = mutated_mod.get_global_var('func_6028')
call_6029 = func_6028_call()
output = call_6029
func_6030 = relay.Function([], output)
mutated_mod['func_6030'] = func_6030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3762_call = mod.get_global_var('func_3762')
func_3763_call = mutated_mod.get_global_var('func_3763')
call_6043 = relay.TupleGetItem(func_3762_call(), 0)
call_6044 = relay.TupleGetItem(func_3763_call(), 0)
func_212_call = mod.get_global_var('func_212')
func_215_call = mutated_mod.get_global_var('func_215')
var_6046 = relay.var("var_6046", dtype = "float32", shape = (480,))#candidate|6046|(480,)|var|float32
call_6045 = relay.TupleGetItem(func_212_call(relay.reshape(var_6046.astype('float32'), [8, 12, 5]), relay.reshape(var_6046.astype('float32'), [8, 12, 5]), ), 2)
call_6047 = relay.TupleGetItem(func_215_call(relay.reshape(var_6046.astype('float32'), [8, 12, 5]), relay.reshape(var_6046.astype('float32'), [8, 12, 5]), ), 2)
func_1101_call = mod.get_global_var('func_1101')
func_1104_call = mutated_mod.get_global_var('func_1104')
const_6051 = relay.const([3.732845,1.809018,2.022272,3.219377,2.883795,-8.012405,3.271207,-2.385912,4.485912,-8.918633,-8.987285,-6.776344,2.774288,0.985996,2.964830,-8.883491,-4.761646,5.543756,1.904434,-5.707251,-9.924059,-8.842324,1.078880,8.572453,9.611944,-2.113573,-2.349452,6.363701,-9.014752,-8.123691,8.954024,-9.188229,-8.183481,5.798702,-1.530728,8.264049,5.947800,-5.814070,-5.167730,7.309920,-3.094842,1.748063,-0.567306,-5.029878,9.652552,-9.233172,3.495458,-7.000453,6.581952,0.473866,9.531746,-3.647752,6.503848,9.973027,-3.800066,8.624575,-3.390820,0.497591,9.886292,9.537315,-5.289585,-2.877504,-7.418105,-1.498188,-2.506526,-9.513044,-9.503926,-9.488091,5.736481,3.023233,2.371535,-6.222759,5.823193,-3.730929,-4.639549,-5.545175,-8.483980,-6.992251,7.269811,-6.964193,9.838727,-5.313105,7.430865,8.058487,-8.484803,4.516197,8.366167,-8.314321,0.840646,-3.188300,-5.421392,4.047980,8.126020,-5.836205,-9.485392,-4.789996,4.242086,1.536719,-8.496298,5.024208,1.642582,-9.996658,4.405301,8.276828,0.211194,-0.189014,-8.044258,-5.326050,6.052156,1.596550,7.208755,2.145862,-6.379160,-5.707071,3.571759,9.684768,-9.918021,-1.673374,-8.558973,-3.516724,6.872342,-2.847320,-4.667681,0.749962,5.970492,1.637226,-9.302866,9.280791,7.344032,5.533319,4.280103,2.496387,-4.099444,9.377666,-6.652178,3.761179,-3.711310,2.419027,-8.613596,3.424008,5.408430,2.909883,5.483351,-7.721660,-1.965080,-5.195309,2.559309,9.220939,0.584886,-2.919957,-0.932838,4.613269,8.348568,-8.536150,6.129502,9.751695,-5.905709,-4.308696,9.392723,1.458461,1.067654,-9.076217,4.907386,-9.105513,-4.140101,-7.151317,-3.238417,-5.492227,9.292097,-5.099079,-7.404129,7.546278,-9.085270,-0.885626,6.143422,8.088520,3.580530,4.483769,4.725166,5.060255,-6.533267,-8.466692,8.657539,0.737648,1.690917,4.312227,8.490191,7.118779,8.987108,-2.039207,4.051198,0.666045,4.424303,0.051552,-4.236479,-5.733025,2.476540,-7.848783,4.993341,8.228417,6.916180,-5.319674,9.048593,-1.442427,-5.387505,3.610294,-1.679524,-8.584983,2.597968,-8.361344,4.208022,4.495267,9.651170,0.840488,1.635595,-4.643318,-6.004173,3.750152,-1.097364,-3.139532,-1.065403,-5.268030,-9.374010,-3.973161,-7.201041,2.114958,-0.870873,-2.732765,-4.905188,-3.974539,-0.317965,-3.032210,-3.959376,2.248867,3.817126,4.881508,6.366110,-9.628964,-6.851671,-4.970195,5.626345,-6.114203,-8.592561,-7.481376,7.496296,-8.243709,9.346374,-9.581965,-8.026597,-7.484269,0.611665,-7.645492,9.876410,-6.096747,3.439041,-7.718692,-2.961573,-9.180879,-7.145614,-0.244512,-4.046638,1.451065,0.586624,4.098744,1.778718,-6.103444,2.651065,-3.955884,7.546814,-4.636069,3.895106,-7.455686,-3.550730,-0.317504,3.092592,-3.259709,2.258937,5.940098,7.267828,-0.903696,-1.117559,6.161258,5.038186,-1.699927,-6.373473,-1.088507,4.736726,2.158487,5.234397,-5.482758,-0.181151,-6.328664,2.611658,8.153856,-7.764125,7.312644,-6.393245,-7.961525,-7.569733,-1.904859,-6.865611,-1.166594,2.278157,5.648349,8.635926,8.506996,-9.382302,1.768946,1.300206,-9.939452,5.484667,-7.555348,-9.879422,8.250582,3.233904,6.875422,-6.184416,-0.593500,8.186407,7.888356,6.186683,4.845977,-4.399359,2.716578,1.545301,-8.851766,-3.934368,-9.189085,2.861849,7.475018,5.405849,-9.108549,7.187100,-6.521122,-4.735369,0.715679,-2.677038,0.398542,-9.430262,5.169997,-8.184833,-2.018572,-8.984459,8.430266,-1.029524,7.744899,8.637723,-0.126241,-7.346012,-3.175969,-9.377874,-3.936515,-7.277439,7.580405,3.319628,-6.189067,-3.958784,-6.521583,4.224118,7.382775], dtype = "float64")#candidate|6051|(360,)|const|float64
call_6050 = relay.TupleGetItem(func_1101_call(relay.reshape(const_6051.astype('float64'), [10, 9, 4])), 0)
call_6052 = relay.TupleGetItem(func_1104_call(relay.reshape(const_6051.astype('float64'), [10, 9, 4])), 0)
output = relay.Tuple([call_6043,call_6045,var_6046,call_6050,const_6051,])
output2 = relay.Tuple([call_6044,call_6047,var_6046,call_6052,const_6051,])
func_6053 = relay.Function([var_6046,], output)
mod['func_6053'] = func_6053
mod = relay.transform.InferType()(mod)
mutated_mod['func_6053'] = func_6053
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6054 = relay.var("var_6054", dtype = "float32", shape = (480,))#candidate|6054|(480,)|var|float32
func_6053_call = mutated_mod.get_global_var('func_6053')
call_6055 = func_6053_call(var_6054)
output = call_6055
func_6056 = relay.Function([var_6054], output)
mutated_mod['func_6056'] = func_6056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6070 = relay.var("var_6070", dtype = "int8", shape = (2, 6, 5))#candidate|6070|(2, 6, 5)|var|int8
const_6071 = relay.const([[[-6,3,-4,-5,-2],[8,4,7,1,3],[-4,-3,8,9,7],[-8,-4,10,-3,10],[9,-1,2,-10,7],[10,2,-6,-7,2]],[[4,-6,1,6,-2],[9,4,4,-1,-10],[-10,10,4,-4,-2],[6,6,-4,-7,-3],[9,-10,-6,-1,-1],[-7,-1,-2,-2,5]]], dtype = "int8")#candidate|6071|(2, 6, 5)|const|int8
bop_6072 = relay.left_shift(var_6070.astype('int8'), relay.reshape(const_6071.astype('int8'), relay.shape_of(var_6070))) # shape=(2, 6, 5)
uop_6080 = relay.acos(bop_6072.astype('float32')) # shape=(2, 6, 5)
uop_6089 = relay.atanh(uop_6080.astype('float64')) # shape=(2, 6, 5)
uop_6096 = relay.log2(uop_6089.astype('float32')) # shape=(2, 6, 5)
var_6116 = relay.var("var_6116", dtype = "float32", shape = (2, 6, 5))#candidate|6116|(2, 6, 5)|var|float32
bop_6117 = relay.mod(uop_6096.astype('float64'), relay.reshape(var_6116.astype('float64'), relay.shape_of(uop_6096))) # shape=(2, 6, 5)
bop_6120 = relay.greater_equal(bop_6117.astype('bool'), relay.reshape(uop_6089.astype('bool'), relay.shape_of(bop_6117))) # shape=(2, 6, 5)
func_2803_call = mod.get_global_var('func_2803')
func_2804_call = mutated_mod.get_global_var('func_2804')
call_6123 = func_2803_call()
call_6124 = func_2803_call()
bop_6127 = relay.minimum(uop_6080.astype('float32'), relay.reshape(var_6070.astype('float32'), relay.shape_of(uop_6080))) # shape=(2, 6, 5)
bop_6169 = relay.logical_xor(bop_6117.astype('uint8'), relay.reshape(var_6116.astype('uint8'), relay.shape_of(bop_6117))) # shape=(2, 6, 5)
uop_6172 = relay.asinh(uop_6089.astype('float32')) # shape=(2, 6, 5)
output = relay.Tuple([bop_6120,call_6123,bop_6127,bop_6169,uop_6172,])
output2 = relay.Tuple([bop_6120,call_6124,bop_6127,bop_6169,uop_6172,])
func_6175 = relay.Function([var_6070,var_6116,], output)
mod['func_6175'] = func_6175
mod = relay.transform.InferType()(mod)
mutated_mod['func_6175'] = func_6175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6175_call = mutated_mod.get_global_var('func_6175')
var_6177 = relay.var("var_6177", dtype = "int8", shape = (2, 6, 5))#candidate|6177|(2, 6, 5)|var|int8
var_6178 = relay.var("var_6178", dtype = "float32", shape = (2, 6, 5))#candidate|6178|(2, 6, 5)|var|float32
call_6176 = func_6175_call(var_6177,var_6178,)
output = call_6176
func_6179 = relay.Function([var_6177,var_6178,], output)
mutated_mod['func_6179'] = func_6179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6011_call = mod.get_global_var('func_6011')
func_6013_call = mutated_mod.get_global_var('func_6013')
call_6243 = relay.TupleGetItem(func_6011_call(), 0)
call_6244 = relay.TupleGetItem(func_6013_call(), 0)
func_2803_call = mod.get_global_var('func_2803')
func_2804_call = mutated_mod.get_global_var('func_2804')
call_6250 = func_2803_call()
call_6251 = func_2803_call()
uop_6254 = relay.rsqrt(call_6250.astype('float64')) # shape=(5, 10, 7)
uop_6256 = relay.rsqrt(call_6251.astype('float64')) # shape=(5, 10, 7)
output = relay.Tuple([call_6243,uop_6254,])
output2 = relay.Tuple([call_6244,uop_6256,])
func_6257 = relay.Function([], output)
mod['func_6257'] = func_6257
mod = relay.transform.InferType()(mod)
output = func_6257()
func_6258 = relay.Function([], output)
mutated_mod['func_6258'] = func_6258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3227_call = mod.get_global_var('func_3227')
func_3229_call = mutated_mod.get_global_var('func_3229')
call_6262 = relay.TupleGetItem(func_3227_call(), 0)
call_6263 = relay.TupleGetItem(func_3229_call(), 0)
func_2944_call = mod.get_global_var('func_2944')
func_2948_call = mutated_mod.get_global_var('func_2948')
var_6289 = relay.var("var_6289", dtype = "uint16", shape = (26, 3))#candidate|6289|(26, 3)|var|uint16
call_6288 = relay.TupleGetItem(func_2944_call(relay.reshape(call_6262.astype('uint16'), []), relay.reshape(var_6289.astype('uint16'), [3, 2, 13]), ), 1)
call_6290 = relay.TupleGetItem(func_2948_call(relay.reshape(call_6262.astype('uint16'), []), relay.reshape(var_6289.astype('uint16'), [3, 2, 13]), ), 1)
func_6175_call = mod.get_global_var('func_6175')
func_6179_call = mutated_mod.get_global_var('func_6179')
var_6298 = relay.var("var_6298", dtype = "int8", shape = (60,))#candidate|6298|(60,)|var|int8
call_6297 = relay.TupleGetItem(func_6175_call(relay.reshape(var_6298.astype('int8'), [2, 6, 5]), relay.reshape(var_6298.astype('float32'), [2, 6, 5]), ), 4)
call_6299 = relay.TupleGetItem(func_6179_call(relay.reshape(var_6298.astype('int8'), [2, 6, 5]), relay.reshape(var_6298.astype('float32'), [2, 6, 5]), ), 4)
output = relay.Tuple([call_6262,call_6288,var_6289,call_6297,var_6298,])
output2 = relay.Tuple([call_6263,call_6290,var_6289,call_6299,var_6298,])
func_6305 = relay.Function([var_6289,var_6298,], output)
mod['func_6305'] = func_6305
mod = relay.transform.InferType()(mod)
var_6306 = relay.var("var_6306", dtype = "uint16", shape = (26, 3))#candidate|6306|(26, 3)|var|uint16
var_6307 = relay.var("var_6307", dtype = "int8", shape = (60,))#candidate|6307|(60,)|var|int8
output = func_6305(var_6306,var_6307,)
func_6308 = relay.Function([var_6306,var_6307,], output)
mutated_mod['func_6308'] = func_6308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6321 = relay.var("var_6321", dtype = "uint8", shape = (11, 9, 16))#candidate|6321|(11, 9, 16)|var|uint8
const_6322 = relay.const([[[3,10,-4,-10,3,4,2,-3,8,5,-4,3,-1,3,-3,-7],[7,-4,2,-4,6,9,5,-5,10,4,-8,-5,-6,-1,1,5],[-5,1,-5,-10,-4,10,-3,-4,-6,4,3,-3,2,-8,-1,-5],[4,-2,2,1,-3,7,6,8,8,-6,-3,-2,4,-2,-4,9],[-2,8,-5,9,-2,3,-8,9,-2,8,5,-2,9,4,-10,3],[4,-3,-4,4,-1,-3,-7,-8,9,-4,-8,-3,-2,-2,10,4],[1,-10,2,-9,10,-5,-4,5,8,8,-8,3,-10,2,-2,-1],[-4,6,-4,10,-8,-2,-7,-6,6,1,6,6,2,-5,6,7],[-6,7,-9,5,-1,10,4,3,1,-6,1,-3,1,7,-4,7]],[[-9,-2,-3,-8,6,4,-3,1,-2,-10,-8,6,-1,-7,7,-6],[10,5,-9,-8,10,-6,-9,-8,4,6,3,3,4,10,4,8],[-8,-7,-7,-1,-9,3,-5,-8,10,-3,5,10,6,1,-8,5],[-5,2,-1,8,-3,5,3,-9,9,-10,9,-6,-10,6,7,5],[-6,-3,-3,5,3,3,7,-10,3,-5,-8,7,9,7,7,-7],[10,-9,2,-6,-8,-2,1,3,2,8,10,-9,9,2,-9,-8],[-10,9,-3,-8,5,5,-2,2,8,-5,5,5,3,9,-10,-8],[-4,-2,-3,7,10,6,2,-7,7,-1,7,6,5,1,-4,6],[7,6,-10,-8,7,-4,1,1,5,-10,-10,-4,2,2,4,4]],[[10,3,-5,2,-4,-10,10,-5,-5,-9,9,-10,1,-9,-2,6],[4,-1,10,-10,-2,1,4,-6,1,6,1,3,9,-6,-6,2],[4,9,-7,-10,1,-10,9,6,5,2,-7,9,6,7,-10,1],[2,-9,9,9,-5,5,-7,6,10,-10,-2,2,-4,9,8,7],[-2,-9,8,-10,-9,6,7,-9,-7,-5,8,8,-6,8,-7,-4],[-3,-9,-2,-1,8,-6,9,-4,-6,7,8,-8,2,-10,10,9],[6,-4,9,-9,5,3,-5,-2,8,5,-7,-2,-8,10,-6,-3],[7,1,5,4,-9,5,6,3,9,1,2,6,6,9,-5,4],[-2,-1,-9,8,-3,-10,-2,-2,2,8,-7,-3,10,-6,-4,8]],[[-7,4,3,-2,5,-5,6,10,1,1,2,-10,5,9,6,5],[6,7,-1,8,-10,5,-10,-3,4,-8,7,-1,4,10,-7,3],[-6,7,-9,5,9,7,-8,-10,-4,9,6,4,9,-10,-2,-2],[-1,-8,-3,2,-5,-9,9,5,8,7,-5,-4,6,9,-4,6],[9,6,7,1,-6,6,2,1,7,-5,-10,7,10,-5,8,-10],[5,6,-5,-7,1,-6,-7,4,6,8,-6,-3,-10,1,-2,-4],[8,-1,7,5,1,1,-10,-6,4,-4,9,-9,8,7,-4,6],[-1,6,-5,7,2,-6,7,-1,-5,3,4,3,5,-1,2,-10],[4,-2,7,-7,-1,3,6,-9,1,-5,6,-1,9,-8,9,6]],[[4,-6,-1,-9,-7,-8,-8,-4,-9,-6,-6,-3,-8,9,-1,-5],[-5,5,4,-6,-8,-2,1,5,-4,2,7,6,-8,-5,10,-3],[10,10,-4,5,-3,8,2,4,6,7,-3,3,7,-2,9,-3],[5,-3,2,-3,-4,10,6,-5,2,-10,-4,-10,-10,-8,-10,-5],[4,4,-7,-2,-9,10,-6,10,4,7,-10,9,-9,-6,-9,4],[3,1,6,-3,-6,10,8,2,-9,-2,-5,-8,9,3,-7,1],[-6,9,6,7,-5,-3,-7,4,3,-5,-6,-3,9,3,5,-5],[8,3,6,-5,-6,-1,-3,-3,1,-5,2,-4,-5,4,-2,-3],[3,-4,5,-9,8,-8,-6,-5,10,6,9,-3,-6,8,-8,-8]],[[-6,-1,4,6,1,-10,6,6,7,-5,3,-5,-5,-6,-4,3],[1,-3,-3,4,2,2,1,-3,3,7,6,-4,-4,5,9,8],[-3,4,7,-3,-3,-6,-5,3,6,4,1,-6,-10,-3,-2,-10],[9,4,-1,-8,2,-7,4,6,1,6,10,8,-5,-3,-1,6],[5,9,-7,-10,-10,7,-8,-4,5,-2,-1,8,-9,-5,-4,-2],[8,-4,-6,-5,3,8,7,10,-1,-10,1,8,-9,-2,-3,1],[-6,8,9,-8,-7,4,10,7,-8,-6,7,3,-9,8,-9,-5],[3,-7,-7,7,-1,10,-8,-5,-6,-7,4,-8,5,7,6,-1],[3,3,4,6,4,-7,2,9,2,10,6,-1,5,-6,-9,-10]],[[-4,-4,5,-4,-3,9,6,3,4,5,3,-10,5,-9,-3,-7],[-2,-7,-1,3,-3,-1,-10,6,8,-5,-9,-9,-1,1,7,-10],[10,-3,-10,5,1,-2,-2,7,4,-3,7,9,10,1,-7,6],[10,-8,-8,-4,1,-9,8,3,10,-5,7,4,-6,-7,-5,2],[-2,6,5,6,9,1,3,-7,1,7,-10,9,5,-10,-9,-8],[5,9,-7,10,-2,1,-6,-8,4,8,8,9,1,6,4,-1],[1,10,6,-1,-10,6,3,-4,-9,1,10,-1,-1,-1,2,-3],[3,-8,-3,9,-3,9,9,5,8,7,9,-8,-6,7,-2,-10],[6,-4,-9,2,10,-10,-7,-8,2,-2,3,1,-1,-7,1,-6]],[[5,5,4,8,1,2,-4,2,6,-8,5,8,10,-9,-1,9],[6,2,3,4,9,-1,-6,10,8,1,-7,-9,2,-9,2,1],[-2,-8,2,-7,7,5,-1,-3,10,4,3,-6,3,8,-3,-5],[-1,-8,-4,5,4,-5,4,6,2,-3,7,-9,-5,6,-7,3],[-6,2,-7,-3,8,8,6,6,-7,-2,-10,-3,-10,-3,3,-5],[-8,-1,8,7,-10,8,10,3,-4,-10,-7,-9,5,2,-9,-7],[7,-3,-9,-1,-5,6,-2,1,-5,-10,5,9,-5,-9,9,-3],[-3,-1,5,5,10,5,2,2,8,-10,-3,-4,10,-5,9,-5],[-2,-7,8,-9,3,4,2,5,-8,-3,-5,-1,10,4,-4,4]],[[-7,7,2,8,1,-1,8,5,2,-8,6,-2,7,-8,6,9],[10,9,-1,7,8,7,5,-3,9,-4,3,1,-1,-3,10,10],[-5,2,-7,9,1,3,-9,5,-8,-3,4,-2,-5,-3,4,-3],[-4,8,5,9,5,-2,-8,2,-5,-8,-1,3,7,8,-9,2],[-9,-7,10,-10,9,9,10,-5,6,-5,6,-10,-4,-6,-1,-8],[-1,-5,-10,5,-1,-7,6,8,-7,-7,-1,-8,7,-9,4,-9],[2,-7,-10,-4,-7,-2,4,2,-2,-6,8,-9,-10,3,6,1],[5,10,10,-4,4,-9,5,10,2,2,2,5,2,7,10,-5],[6,8,-9,3,10,4,5,5,-9,-9,10,2,4,9,-7,-10]],[[-10,-1,3,-4,5,-8,-1,-10,-2,1,5,-6,-5,6,9,-5],[4,-10,9,10,2,-8,1,-3,-7,4,2,-4,5,8,-3,5],[-10,-4,10,5,-2,-7,1,5,-6,1,-1,4,-4,-3,5,4],[-4,-4,-4,6,-4,-8,-5,-4,-6,-1,-1,-4,-7,-1,5,-10],[6,3,5,-4,4,-3,-7,-2,-3,1,-7,-8,-1,9,-6,7],[2,-10,3,7,7,8,8,-10,-2,6,3,-8,-3,-4,-5,-1],[-5,6,-4,-5,3,-9,-3,2,8,-9,-2,-9,3,5,6,-6],[6,9,5,5,9,-10,2,10,-2,5,7,10,-9,9,-3,-10],[-9,1,5,1,-9,-8,3,-5,10,-8,5,-8,-4,-4,2,-6]],[[-3,4,-10,-5,7,1,3,4,7,-10,-1,9,-5,-2,6,-9],[-4,10,9,-4,9,8,-3,-7,6,5,8,-3,-8,2,-7,-7],[-6,-7,-2,-3,8,5,4,4,-1,-7,2,2,7,5,4,4],[-7,-9,2,2,-3,-3,-8,7,5,-8,4,-6,3,6,3,1],[3,-1,-10,-6,9,-2,-6,6,-4,10,-4,2,10,-7,10,-3],[6,9,-6,-2,6,-1,4,-6,2,6,-2,5,6,5,10,10],[-1,-5,-6,1,1,-6,9,-3,8,9,8,2,-6,2,4,-5],[1,-3,6,-8,-7,-4,-6,9,6,4,2,10,4,7,5,4],[-9,-4,-4,-4,7,-9,-2,-7,-8,4,8,9,9,-3,-7,2]]], dtype = "uint8")#candidate|6322|(11, 9, 16)|const|uint8
bop_6323 = relay.logical_xor(var_6321.astype('uint8'), relay.reshape(const_6322.astype('uint8'), relay.shape_of(var_6321))) # shape=(11, 9, 16)
output = bop_6323
output2 = bop_6323
func_6326 = relay.Function([var_6321,], output)
mod['func_6326'] = func_6326
mod = relay.transform.InferType()(mod)
var_6327 = relay.var("var_6327", dtype = "uint8", shape = (11, 9, 16))#candidate|6327|(11, 9, 16)|var|uint8
output = func_6326(var_6327)
func_6328 = relay.Function([var_6327], output)
mutated_mod['func_6328'] = func_6328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4384_call = mod.get_global_var('func_4384')
func_4385_call = mutated_mod.get_global_var('func_4385')
call_6347 = relay.TupleGetItem(func_4384_call(), 0)
call_6348 = relay.TupleGetItem(func_4385_call(), 0)
var_6355 = relay.var("var_6355", dtype = "bool", shape = (5, 10, 7))#candidate|6355|(5, 10, 7)|var|bool
bop_6356 = relay.right_shift(call_6347.astype('int32'), relay.reshape(var_6355.astype('int32'), relay.shape_of(call_6347))) # shape=(5, 10, 7)
bop_6359 = relay.right_shift(call_6348.astype('int32'), relay.reshape(var_6355.astype('int32'), relay.shape_of(call_6348))) # shape=(5, 10, 7)
output = relay.Tuple([bop_6356,])
output2 = relay.Tuple([bop_6359,])
F = relay.Function([var_6355,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6355,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_4656() -> (Tensor[(9, 4, 13), float64], Tensor[(72), float64], Tensor[(72), float64]) {
  %0 = @func_2991() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(72), float64]) */;
  %1 = @func_4604() /* ty=(Tensor[(72), float64], Tensor[(72), float64]) */;
  %2 = @func_4133() /* ty=(Tensor[(72), float64],) */;
  %3 = %0.0;
  %4 = %1.0;
  %5 = %2.0;
  (%3, %4, %5)
}

def @func_5689(%var_5685: Tensor[(12, 5, 6), float32]) -> Tensor[(12, 5, 6), float32] {
  %6 = cast(%var_5685, dtype="float32") /* ty=Tensor[(12, 5, 6), float32] */;
  sinh(%6) /* ty=Tensor[(12, 5, 6), float32] */
}

def @func_1501(%var_1484: Tensor[(15, 15, 9), float32], %var_1498: Tensor[(2400), float64]) -> (Tensor[(15, 15, 9), float32], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) {
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
  %8 = shape_of(%var_1484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%var_1484, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %11 = cast(%var_1498, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %12 = reshape(%11, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %13 = @func_426(%12) /* ty=(Tensor[(16, 15, 10), bool],) */;
  %14 = power(%9, %10) /* ty=Tensor[(15, 15, 9), float32] */;
  %15 = %13.0;
  (%14, %15, %var_1498)
}

def @func_5672() -> (Tensor[(72), float64],) {
  %16 = @func_5479() /* ty=Tensor[(72), float64] */;
  (%16,)
}

def @func_2505() -> (Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) {
  %17 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(9, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%17, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %23 = reshape(%22, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
  %24 = @func_989(%23) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
  %25 = floor_mod(%20, %21) /* ty=Tensor[(9, 4, 13), float64] */;
  %26 = %24.1;
  (%25, %26, meta[relay.Constant][2] /* ty=Tensor[(72), float64] */)
}

def @func_3678(%var_3650: Tensor[(9, 4, 13), float64]) -> (Tensor[(9, 4, 13), uint64],) {
  %27 = @func_2745() /* ty=Tensor[(9, 4, 13), float64] */;
  %28 = cast(%var_3650, dtype="uint64") /* ty=Tensor[(9, 4, 13), uint64] */;
  %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%27, dtype="uint64") /* ty=Tensor[(9, 4, 13), uint64] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %32 = add(%30, %31) /* ty=Tensor[(9, 4, 13), uint64] */;
  (%32,)
}

def @func_3033(%var_3007: Tensor[(12, 14, 2), float32], %var_3008: Tensor[(12, 14, 2), float32], %var_3012: Tensor[(12, 14, 2), float32], %var_3026: Tensor[(1152), int64]) -> (Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(12, 14, 2), bool]) {
  %33 = cast(%var_3008, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %34 = shape_of(%var_3007, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%var_3007, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %37 = cast(%var_3012, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %38 = shape_of(%var_3008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%var_3008, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %41 = cast(%var_3026, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %42 = cast(%var_3026, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %43 = reshape(%41, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
  %44 = reshape(%42, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
  %45 = @func_1242(%43, %44) /* ty=(Tensor[(16, 9, 8), int64],) */;
  %46 = cast(%var_3008, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
  %47 = shape_of(%var_3007, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%var_3007, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %50 = power(%35, %36) /* ty=Tensor[(12, 14, 2), float32] */;
  %51 = divide(%39, %40) /* ty=Tensor[(12, 14, 2), float64] */;
  %52 = %45.0;
  %53 = greater_equal(%48, %49) /* ty=Tensor[(12, 14, 2), bool] */;
  (%50, %51, %52, %var_3026, %53)
}

def @func_6097(%var_6079: Tensor[(9, 4, 13), bool]) -> Tensor[(9, 4, 13), bool] {
  %54 = @func_5361() /* ty=Tensor[(9, 4, 13), bool] */;
  %55 = cast(%var_6079, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%54, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%57, %58) /* ty=Tensor[(9, 4, 13), bool] */
}

def @func_4767(%var_4696: Tensor[(9, 4, 13), float32], %var_4707: uint32, %var_4708: Tensor[(160), uint32]) -> (Tensor[(9, 4, 13), uint8], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32], Tensor[(9, 4, 13), float64], Tensor[(378), float32]) {
  %59 = @func_2949() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %60 = %59.0;
  %61 = cast(%60, dtype="float32") /* ty=Tensor[(9, 4, 13), float32] */;
  %62 = log(%61) /* ty=Tensor[(9, 4, 13), float32] */;
  %63 = cast(%var_4696, dtype="uint8") /* ty=Tensor[(9, 4, 13), uint8] */;
  %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%62, dtype="uint8") /* ty=Tensor[(9, 4, 13), uint8] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %67 = cast(%var_4707, dtype="uint32") /* ty=uint32 */;
  %68 = cast(%var_4708, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %69 = reshape(%67, newshape=[]) /* ty=uint32 */;
  %70 = reshape(%68, newshape=[2, 8, 10]) /* ty=Tensor[(2, 8, 10), uint32] */;
  %71 = @func_4150(%69, %70) /* ty=(Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) */;
  %72 = cast(%62, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %74 = cast(%var_4708, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %75 = reshape(%72, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
  %76 = reshape(%73, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %77 = reshape(%74, newshape=[160]) /* ty=Tensor[(160), uint32] */;
  %78 = @func_4371(%75, %76, %77) /* ty=(Tensor[(9, 4, 13), bool], Tensor[(9, 4, 13), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32]) */;
  %79 = bitwise_and(%65, %66) /* ty=Tensor[(9, 4, 13), uint8] */;
  %80 = %71.1;
  %81 = %78.1;
  (%79, %80, %var_4707, %var_4708, %81, meta[relay.Constant][3] /* ty=Tensor[(378), float32] */)
}

def @func_5327() -> Tensor[(9, 4, 13), float64] {
  %82 = @func_2949() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %83 = %82.0;
  %84 = cast(%83, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  log10(%84) /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_3077() -> (Tensor[(72), float64],) {
  %85 = @func_2729() /* ty=Tensor[(72), float64] */;
  (%85,)
}

def @func_2193(%var_2184: Tensor[(12, 13, 12), float64], %var_2185: Tensor[(12, 13, 12), float64], %var_2191: Tensor[(720), float64]) -> (Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) {
  %86 = cast(%var_2185, dtype="bool") /* ty=Tensor[(12, 13, 12), bool] */;
  %87 = shape_of(%var_2184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%var_2184, dtype="bool") /* ty=Tensor[(12, 13, 12), bool] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %90 = cast(%var_2191, dtype="float64") /* ty=Tensor[(720), float64] */;
  %91 = reshape(%90, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
  %92 = @func_1977(%91) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) */;
  %93 = greater_equal(%88, %89) /* ty=Tensor[(12, 13, 12), bool] */;
  %94 = %92.1;
  (%93, %94, %var_2191)
}

def @func_5610(%var_5605: Tensor[(675), int64], %var_5606: Tensor[(378), float32]) -> (Tensor[(72), uint16], Tensor[(1920), int64], int64, Tensor[(352, 1), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(1152), int64], Tensor[(1120), float64]) {
  %95 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %96 = cast(meta[relay.Constant][4] /* ty=Tensor[(352, 1), int64] */, dtype="int64") /* ty=Tensor[(352, 1), int64] */;
  %97 = cast(meta[relay.Constant][5] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
  %98 = cast(%var_5605, dtype="int64") /* ty=Tensor[(675), int64] */;
  %99 = cast(%var_5606, dtype="float32") /* ty=Tensor[(378), float32] */;
  %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(1152), int64] */, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %102 = reshape(%95, newshape=[]) /* ty=int64 */;
  %103 = reshape(%96, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), int64] */;
  %104 = reshape(%97, newshape=[1680]) /* ty=Tensor[(1680), uint64] */;
  %105 = reshape(%98, newshape=[675]) /* ty=Tensor[(675), int64] */;
  %106 = reshape(%99, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %107 = reshape(%100, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
  %108 = reshape(%101, newshape=[56, 20]) /* ty=Tensor[(56, 20), float64] */;
  %109 = @func_3613(%102, %103, %104, %105, %106, %107, %108) /* ty=(Tensor[(8, 4, 11), int64], Tensor[(675), int64], Tensor[(1920), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(1152), int64], Tensor[(9, 5, 15), float32], Tensor[(14, 10, 8), float64], Tensor[(56, 20), float64], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(12, 5, 14), float64], Tensor[(168, 2), float32]) */;
  %110 = @func_5460() /* ty=Tensor[(72), uint16] */;
  %111 = %109.2;
  (%110, %111, -7 /* ty=int64 */, meta[relay.Constant][4] /* ty=Tensor[(352, 1), int64] */, meta[relay.Constant][5] /* ty=Tensor[(1680), uint64] */, %var_5605, %var_5606, meta[relay.Constant][6] /* ty=Tensor[(1152), int64] */, meta[relay.Constant][7] /* ty=Tensor[(1120), float64] */)
}

def @func_4871() -> (Tensor[(72), float64],) {
  %112 = @func_4322() /* ty=(Tensor[(72), float64],) */;
  %113 = %112.0;
  (%113,)
}

def @func_4780() -> (Tensor[(6, 2, 6), int64],) {
  %114 = @func_2505() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */;
  %115 = %114.1;
  (%115,)
}

def @func_4564() -> Tensor[(72), float64] {
  %116 = @func_2657() /* ty=(Tensor[(72), float64],) */;
  %116.0
}

def @func_4975() -> (Tensor[(4, 13), float32],) {
  %117 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 13), float32] */, dtype="float32") /* ty=Tensor[(4, 13), float32] */;
  %118 = exp(%117) /* ty=Tensor[(4, 13), float32] */;
  (%118,)
}

def @func_2707(%var_2695: uint64, %var_2696: Tensor[(1, 11), uint64]) -> (Tensor[(1, 11), uint64], Tensor[(2, 2, 5), uint16], Tensor[(20), uint16]) {
  %119 = cast(%var_2695, dtype="uint64") /* ty=uint64 */;
  %120 = cast(%var_2696, dtype="uint64") /* ty=Tensor[(1, 11), uint64] */;
  %121 = cast(meta[relay.Constant][9] /* ty=Tensor[(20), uint16] */, dtype="uint16") /* ty=Tensor[(20), uint16] */;
  %122 = cast(meta[relay.Constant][9] /* ty=Tensor[(20), uint16] */, dtype="uint16") /* ty=Tensor[(20), uint16] */;
  %123 = reshape(%121, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint16] */;
  %124 = reshape(%122, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint16] */;
  %125 = minimum(%119, %120) /* ty=Tensor[(1, 11), uint64] */;
  %126 = @func_1800(%123, %124) /* ty=Tensor[(2, 2, 5), uint16] */;
  (%125, %126, meta[relay.Constant][9] /* ty=Tensor[(20), uint16] */)
}

def @func_363(%var_339: int64, %var_340: Tensor[(9, 5, 15), int64]) -> (Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) {
  %127 = cast(%var_339, dtype="int64") /* ty=int64 */;
  %128 = cast(%var_340, dtype="int64") /* ty=Tensor[(9, 5, 15), int64] */;
  %129 = cast(%var_340, dtype="float32") /* ty=Tensor[(9, 5, 15), float32] */;
  %130 = add(%127, %128) /* ty=Tensor[(9, 5, 15), int64] */;
  %131 = acosh(%129) /* ty=Tensor[(9, 5, 15), float32] */;
  (%130, %131)
}

def @func_5981(%var_5974: Tensor[(9, 4, 13), float64]) -> (Tensor[(9, 4, 13), int64],) {
  %132 = @func_5327() /* ty=Tensor[(9, 4, 13), float64] */;
  %133 = cast(%var_5974, dtype="int64") /* ty=Tensor[(9, 4, 13), int64] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%132, dtype="int64") /* ty=Tensor[(9, 4, 13), int64] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %137 = left_shift(%135, %136) /* ty=Tensor[(9, 4, 13), int64] */;
  (%137,)
}

def @func_2425() -> Tensor[(9, 4, 13), float64] {
  %138 = cast(meta[relay.Constant][10] /* ty=Tensor[(9, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  acos(%138) /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_989(%var_943: Tensor[(6, 2, 6), float64]) -> (Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) {
  %139 = cast(%var_943, dtype="float64") /* ty=Tensor[(6, 2, 6), float64] */;
  %140 = log(%139) /* ty=Tensor[(6, 2, 6), float64] */;
  %141 = cast(%140, dtype="bool") /* ty=Tensor[(6, 2, 6), bool] */;
  %142 = shape_of(%var_943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%var_943, dtype="bool") /* ty=Tensor[(6, 2, 6), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %145 = greater(%143, %144) /* ty=Tensor[(6, 2, 6), bool] */;
  %146 = cast(%145, dtype="float64") /* ty=Tensor[(6, 2, 6), float64] */;
  %147 = cast(%140, dtype="int64") /* ty=Tensor[(6, 2, 6), int64] */;
  %148 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%145, dtype="int64") /* ty=Tensor[(6, 2, 6), int64] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %151 = acos(%146) /* ty=Tensor[(6, 2, 6), float64] */;
  %152 = bitwise_and(%149, %150) /* ty=Tensor[(6, 2, 6), int64] */;
  (%151, %152)
}

def @func_6282() -> Tensor[(3, 14, 5), float32] {
  %153 = @func_5487() /* ty=Tensor[(3, 14, 5), float32] */;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
  cos(%154) /* ty=Tensor[(3, 14, 5), float32] */
}

def @func_6394() -> (Tensor[(72), float64], Tensor[(11, 4, 8), float64], Tensor[(88), uint64], Tensor[(352), uint64]) {
  %155 = @func_5926() /* ty=(Tensor[(72), float64],) */;
  %156 = cast(meta[relay.Constant][11] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %157 = cast(meta[relay.Constant][12] /* ty=Tensor[(352), uint64] */, dtype="uint64") /* ty=Tensor[(352), uint64] */;
  %158 = reshape(%156, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), uint64] */;
  %159 = reshape(%157, newshape=[11, 4, 8]) /* ty=Tensor[(11, 4, 8), uint64] */;
  %160 = @func_3400(%158, %159) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(360, 2), float64], Tensor[(11, 4, 8), float64]) */;
  %161 = %155.0;
  %162 = %160.2;
  (%161, %162, meta[relay.Constant][11] /* ty=Tensor[(88), uint64] */, meta[relay.Constant][12] /* ty=Tensor[(352), uint64] */)
}

def @func_1800(%var_1794: Tensor[(2, 2, 5), uint16], %var_1795: Tensor[(2, 2, 5), uint16]) -> Tensor[(2, 2, 5), uint16] {
  %163 = cast(%var_1795, dtype="uint16") /* ty=Tensor[(2, 2, 5), uint16] */;
  %164 = shape_of(%var_1794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%var_1794, dtype="uint16") /* ty=Tensor[(2, 2, 5), uint16] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  add(%165, %166) /* ty=Tensor[(2, 2, 5), uint16] */
}

def @func_5232(%var_5210: Tensor[(4, 40), uint32]) -> (Tensor[(4, 13), float32], Tensor[(9, 4, 13), float64], Tensor[(16, 15, 10), bool], uint32, Tensor[(4, 40), uint32]) {
  %167 = @func_4975() /* ty=(Tensor[(4, 13), float32],) */;
  %168 = @func_2949() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %169 = cast(meta[relay.Constant][13] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %170 = cast(%var_5210, dtype="uint32") /* ty=Tensor[(4, 40), uint32] */;
  %171 = reshape(%169, newshape=[]) /* ty=uint32 */;
  %172 = reshape(%170, newshape=[2, 8, 10]) /* ty=Tensor[(2, 8, 10), uint32] */;
  %173 = @func_4150(%171, %172) /* ty=(Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) */;
  %174 = %167.0;
  %175 = %168.0;
  %176 = %173.1;
  (%174, %175, %176, meta[relay.Constant][13] /* ty=uint32 */, %var_5210)
}

def @func_1242(%var_1234: Tensor[(16, 9, 8), int64], %var_1235: Tensor[(16, 9, 8), int64]) -> (Tensor[(16, 9, 8), int64],) {
  %177 = cast(%var_1235, dtype="int64") /* ty=Tensor[(16, 9, 8), int64] */;
  %178 = shape_of(%var_1234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%var_1234, dtype="int64") /* ty=Tensor[(16, 9, 8), int64] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %181 = bitwise_xor(%179, %180) /* ty=Tensor[(16, 9, 8), int64] */;
  (%181,)
}

def @func_736(%var_723: Tensor[(7, 9, 6), float32]) -> Tensor[(7, 9, 6), bool] {
  %182 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 1, 6), float32] */, dtype="bool") /* ty=Tensor[(7, 1, 6), bool] */;
  %183 = cast(%var_723, dtype="bool") /* ty=Tensor[(7, 9, 6), bool] */;
  less_equal(%182, %183) /* ty=Tensor[(7, 9, 6), bool] */
}

def @func_4183(%var_4179: Tensor[(378), float32]) -> (Tensor[(72), uint16], Tensor[(7, 9, 6), bool], Tensor[(378), float32]) {
  %184 = cast(%var_4179, dtype="float32") /* ty=Tensor[(378), float32] */;
  %185 = reshape(%184, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %186 = @func_3200() /* ty=Tensor[(72), uint16] */;
  %187 = @func_736(%185) /* ty=Tensor[(7, 9, 6), bool] */;
  (%186, %187, %var_4179)
}

def @func_1977(%var_1961: Tensor[(4, 15, 12), float64]) -> (Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) {
  %188 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 1, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 1, 12), float64] */;
  %189 = cast(%var_1961, dtype="float64") /* ty=Tensor[(4, 15, 12), float64] */;
  %190 = cast(%var_1961, dtype="float32") /* ty=Tensor[(4, 15, 12), float32] */;
  %191 = divide(%188, %189) /* ty=Tensor[(4, 15, 12), float64] */;
  %192 = erf(%190) /* ty=Tensor[(4, 15, 12), float32] */;
  (%191, %192)
}

def @func_3400(%var_3359: Tensor[(11, 1, 8), uint64], %var_3360: Tensor[(11, 4, 8), uint64]) -> (Tensor[(4, 15, 12), float64], Tensor[(360, 2), float64], Tensor[(11, 4, 8), float64]) {
  %193 = cast(meta[relay.Constant][16] /* ty=Tensor[(360, 2), float64] */, dtype="float64") /* ty=Tensor[(360, 2), float64] */;
  %194 = reshape(%193, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
  %195 = @func_1977(%194) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) */;
  %196 = cast(%var_3359, dtype="bool") /* ty=Tensor[(11, 1, 8), bool] */;
  %197 = cast(%var_3360, dtype="bool") /* ty=Tensor[(11, 4, 8), bool] */;
  %198 = greater_equal(%196, %197) /* ty=Tensor[(11, 4, 8), bool] */;
  %199 = cast(%198, dtype="float64") /* ty=Tensor[(11, 4, 8), float64] */;
  %200 = log(%199) /* ty=Tensor[(11, 4, 8), float64] */;
  %201 = cast(%200, dtype="float64") /* ty=Tensor[(11, 4, 8), float64] */;
  %202 = cast(%var_3359, dtype="float64") /* ty=Tensor[(11, 1, 8), float64] */;
  %203 = %195.0;
  %204 = floor_divide(%201, %202) /* ty=Tensor[(11, 4, 8), float64] */;
  (%203, meta[relay.Constant][16] /* ty=Tensor[(360, 2), float64] */, %204)
}

def @func_6180() -> Tensor[(9, 4, 13), float64] {
  %205 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %205.0
}

def @func_3760() -> Tensor[(72), float64] {
  %206 = @func_3077() /* ty=(Tensor[(72), float64],) */;
  %206.0
}

def @func_5820(%var_5815: Tensor[(9, 15, 8), float32]) -> (Tensor[(9, 15, 8), float32],) {
  %207 = cast(%var_5815, dtype="float32") /* ty=Tensor[(9, 15, 8), float32] */;
  %208 = asinh(%207) /* ty=Tensor[(9, 15, 8), float32] */;
  (%208,)
}

def @func_4266(%var_4229: uint64, %var_4230: Tensor[(576), uint64], %var_4242: Tensor[(80, 2), uint32], %var_4248: Tensor[(675), int64]) -> (Tensor[(72), float64], Tensor[(12, 16, 3), uint64], Tensor[(576), uint64], Tensor[(6, 2, 6), float32], Tensor[(1120), float64], Tensor[(80, 2), uint32], Tensor[(378), float32], Tensor[(675), int64], Tensor[(600, 4), uint16]) {
  %209 = @func_2657() /* ty=(Tensor[(72), float64],) */;
  %210 = cast(%var_4229, dtype="uint64") /* ty=uint64 */;
  %211 = cast(%var_4230, dtype="uint64") /* ty=Tensor[(576), uint64] */;
  %212 = reshape(%210, newshape=[]) /* ty=uint64 */;
  %213 = reshape(%211, newshape=[12, 16, 3]) /* ty=Tensor[(12, 16, 3), uint64] */;
  %214 = @func_3795(%212, %213) /* ty=(Tensor[(12, 16, 3), uint64],) */;
  %215 = cast(meta[relay.Constant][17] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %216 = reshape(%215, newshape=[8, 140]) /* ty=Tensor[(8, 140), float64] */;
  %217 = @func_2909(%216) /* ty=(Tensor[(6, 2, 6), float32], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(14, 10, 8), float64], Tensor[(8, 140), float64], Tensor[(16, 15, 10), bool], Tensor[(2025), float32], Tensor[(20, 120), float64], Tensor[(9, 4, 13), float64]) */;
  %218 = cast(%var_4248, dtype="int64") /* ty=Tensor[(675), int64] */;
  %219 = reshape(%218, newshape=[675]) /* ty=Tensor[(675), int64] */;
  %220 = @func_3886(%219) /* ty=(Tensor[(72), float64], Tensor[(9, 5, 15), float32], Tensor[(1680), uint64], Tensor[(378), float32], Tensor[(9, 4, 13), float64], Tensor[(675), int32], Tensor[(9, 4, 13), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) */;
  %221 = cast(%var_4229, dtype="uint32") /* ty=uint32 */;
  %222 = cast(%var_4242, dtype="uint32") /* ty=Tensor[(80, 2), uint32] */;
  %223 = reshape(%221, newshape=[]) /* ty=uint32 */;
  %224 = reshape(%222, newshape=[2, 8, 10]) /* ty=Tensor[(2, 8, 10), uint32] */;
  %225 = @func_4150(%223, %224) /* ty=(Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) */;
  %226 = %225.2;
  %227 = cast(%226, dtype="uint16") /* ty=Tensor[(600, 4), uint16] */;
  %228 = cast(%var_4229, dtype="uint16") /* ty=uint16 */;
  %229 = %209.0;
  %230 = %214.0;
  %231 = %217.0;
  %232 = %220.3;
  %233 = subtract(%227, %228) /* ty=Tensor[(600, 4), uint16] */;
  (%229, %230, %var_4230, %231, meta[relay.Constant][17] /* ty=Tensor[(1120), float64] */, %var_4242, %232, %var_4248, %233)
}

def @func_4322() -> (Tensor[(72), float64],) {
  %234 = @func_2729() /* ty=Tensor[(72), float64] */;
  (%234,)
}

def @func_5783(%var_5770: Tensor[(2, 10, 15), int64], %var_5771: Tensor[(2, 10, 15), int64]) -> (Tensor[(2, 10, 15), int64],) {
  %235 = cast(%var_5771, dtype="int64") /* ty=Tensor[(2, 10, 15), int64] */;
  %236 = shape_of(%var_5770, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%var_5770, dtype="int64") /* ty=Tensor[(2, 10, 15), int64] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %239 = add(%237, %238) /* ty=Tensor[(2, 10, 15), int64] */;
  (%239,)
}

def @func_4133() -> (Tensor[(72), float64],) {
  %240 = @func_2657() /* ty=(Tensor[(72), float64],) */;
  %241 = %240.0;
  (%241,)
}

def @func_5361() -> Tensor[(9, 4, 13), bool] {
  %242 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
  %243 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 4, 13), float64] */, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%242, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%245, %246) /* ty=Tensor[(9, 4, 13), bool] */
}

def @func_4051(%var_4032: Tensor[(2, 960), int64], %var_4034: Tensor[(675), int64], %var_4035: Tensor[(126, 3), float32], %var_4036: Tensor[(1152), int64]) -> (Tensor[(9, 4, 13), float64], Tensor[(378), float32], Tensor[(2, 960), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(126, 3), float32], Tensor[(1152), int64]) {
  %247 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %248 = cast(%var_4032, dtype="int64") /* ty=Tensor[(2, 960), int64] */;
  %249 = cast(%var_4032, dtype="int64") /* ty=Tensor[(2, 960), int64] */;
  %250 = cast(meta[relay.Constant][19] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
  %251 = cast(%var_4034, dtype="int64") /* ty=Tensor[(675), int64] */;
  %252 = cast(%var_4035, dtype="float32") /* ty=Tensor[(126, 3), float32] */;
  %253 = cast(%var_4036, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %254 = reshape(%248, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int64] */;
  %255 = reshape(%249, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int64] */;
  %256 = reshape(%250, newshape=[840, 2]) /* ty=Tensor[(840, 2), uint64] */;
  %257 = reshape(%251, newshape=[675]) /* ty=Tensor[(675), int64] */;
  %258 = reshape(%252, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %259 = reshape(%253, newshape=[1, 1152]) /* ty=Tensor[(1, 1152), int64] */;
  %260 = @func_3502(%254, %255, %256, %257, %258, %259) /* ty=(Tensor[(15, 8, 16), int64], Tensor[(6, 2, 6), float64], Tensor[(840, 2), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 168), float32], Tensor[(1, 1152), int64]) */;
  %261 = %247.0;
  %262 = %260.4;
  (%261, %262, %var_4032, meta[relay.Constant][19] /* ty=Tensor[(1680), uint64] */, %var_4034, %var_4035, %var_4036)
}

def @func_853(%var_849: Tensor[(14, 10, 8), float64]) -> (Tensor[(14, 10, 8), float64],) {
  %263 = cast(%var_849, dtype="float64") /* ty=Tensor[(14, 10, 8), float64] */;
  %264 = cosh(%263) /* ty=Tensor[(14, 10, 8), float64] */;
  (%264,)
}

def @func_2991() -> (Tensor[(9, 4, 13), float64], Tensor[(72), float64]) {
  %265 = @func_2505() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */;
  %266 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
  %267 = %265.2;
  (%266, %267)
}

def @func_4371(%var_4334: Tensor[(9, 4, 13), float64], %var_4364: Tensor[(378), float32], %var_4369: Tensor[(160), uint32]) -> (Tensor[(9, 4, 13), bool], Tensor[(9, 4, 13), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32]) {
  %268 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
  %269 = cast(%var_4334, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %273 = cast(%268, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %274 = cast(%var_4364, dtype="float32") /* ty=Tensor[(378), float32] */;
  %275 = reshape(%274, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %276 = cast(meta[relay.Constant][20] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %277 = cast(%var_4369, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %278 = reshape(%276, newshape=[]) /* ty=uint32 */;
  %279 = reshape(%277, newshape=[2, 8, 10]) /* ty=Tensor[(2, 8, 10), uint32] */;
  %280 = @func_4150(%278, %279) /* ty=(Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) */;
  %281 = logical_and(%271, %272) /* ty=Tensor[(9, 4, 13), bool] */;
  %282 = tan(%273) /* ty=Tensor[(9, 4, 13), float64] */;
  %283 = @func_736(%275) /* ty=Tensor[(7, 9, 6), bool] */;
  %284 = %280.1;
  (%281, %282, %283, %var_4364, %284, meta[relay.Constant][20] /* ty=uint32 */, %var_4369)
}

def @func_6226() -> (Tensor[(9, 4, 13), float64],) {
  %285 = @func_6030() /* ty=Tensor[(9, 4, 13), float64] */;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %287 = atanh(%286) /* ty=Tensor[(9, 4, 13), float64] */;
  (%287,)
}

def @func_6410() -> (Tensor[(72), float64],) {
  %288 = @func_4604() /* ty=(Tensor[(72), float64], Tensor[(72), float64]) */;
  %289 = %288.0;
  (%289,)
}

def @func_4493() -> (Tensor[(8, 14, 1), float32], Tensor[(9, 4, 13), float64], Tensor[(9, 4, 13), float64]) {
  %290 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 1), float32] */;
  %291 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %292 = @func_2991() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(72), float64]) */;
  %293 = cosh(%290) /* ty=Tensor[(8, 14, 1), float32] */;
  %294 = %291.0;
  %295 = %292.0;
  (%293, %294, %295)
}

def @func_5306() -> (Tensor[(9, 4, 13), float64], Tensor[(11, 4, 8), float64], Tensor[(88), uint64], Tensor[(352), uint64]) {
  %296 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %297 = cast(meta[relay.Constant][22] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %298 = cast(meta[relay.Constant][23] /* ty=Tensor[(352), uint64] */, dtype="uint64") /* ty=Tensor[(352), uint64] */;
  %299 = reshape(%297, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), uint64] */;
  %300 = reshape(%298, newshape=[11, 4, 8]) /* ty=Tensor[(11, 4, 8), uint64] */;
  %301 = @func_3400(%299, %300) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(360, 2), float64], Tensor[(11, 4, 8), float64]) */;
  %302 = %296.0;
  %303 = %301.2;
  (%302, %303, meta[relay.Constant][22] /* ty=Tensor[(88), uint64] */, meta[relay.Constant][23] /* ty=Tensor[(352), uint64] */)
}

def @func_1593(%var_1579: Tensor[(8, 3, 3), int16]) -> (Tensor[(8, 3, 3), bool], Tensor[(6, 2, 6), int64], Tensor[(8, 3, 3), float64]) {
  %304 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 3, 3), int16] */, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %305 = shape_of(%var_1579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %306 = cast(%var_1579, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %308 = cast(%var_1579, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %309 = reshape(%308, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
  %310 = @func_989(%309) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
  %311 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 3, 3), int16] */, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %312 = greater_equal(%306, %307) /* ty=Tensor[(8, 3, 3), bool] */;
  %313 = %310.1;
  %314 = acosh(%311) /* ty=Tensor[(8, 3, 3), float64] */;
  (%312, %313, %314)
}

def @func_2592(%var_2571: Tensor[(675), int64], %var_2572: Tensor[(126, 3), float32], %var_2589: Tensor[(18), uint32]) -> (Tensor[(72), float64], Tensor[(720), float64], Tensor[(1872), float64], Tensor[(180, 4), float64], Tensor[(16, 9, 8), int64], Tensor[(4, 15, 12), float32], Tensor[(720), float64], Tensor[(96, 12), float64], Tensor[(96, 12), float64], Tensor[(16, 15, 10), bool], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(126, 3), float32], Tensor[(?, 3, 6), uint32], Tensor[(18), uint32]) {
  %315 = @func_2505() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */;
  %316 = cast(meta[relay.Constant][25] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %317 = cast(meta[relay.Constant][25] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %318 = cast(meta[relay.Constant][26] /* ty=Tensor[(180, 4), float64] */, dtype="float64") /* ty=Tensor[(180, 4), float64] */;
  %319 = reshape(%316, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
  %320 = reshape(%317, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
  %321 = reshape(%318, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %322 = @func_2193(%319, %320, %321) /* ty=(Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) */;
  %323 = cast(meta[relay.Constant][27] /* ty=Tensor[(96, 12), int64] */, dtype="int64") /* ty=Tensor[(96, 12), int64] */;
  %324 = cast(meta[relay.Constant][27] /* ty=Tensor[(96, 12), int64] */, dtype="int64") /* ty=Tensor[(96, 12), int64] */;
  %325 = reshape(%323, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
  %326 = reshape(%324, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
  %327 = @func_1242(%325, %326) /* ty=(Tensor[(16, 9, 8), int64],) */;
  %328 = cast(meta[relay.Constant][26] /* ty=Tensor[(180, 4), float64] */, dtype="float64") /* ty=Tensor[(180, 4), float64] */;
  %329 = reshape(%328, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
  %330 = @func_1977(%329) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) */;
  %331 = cast(meta[relay.Constant][25] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %332 = cast(meta[relay.Constant][25] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %333 = %322.2;
  %334 = cast(%333, dtype="float64") /* ty=Tensor[(720), float64] */;
  %335 = reshape(%331, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
  %336 = reshape(%332, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
  %337 = reshape(%334, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %338 = @func_2193(%335, %336, %337) /* ty=(Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) */;
  %339 = cast(meta[relay.Constant][27] /* ty=Tensor[(96, 12), int64] */, dtype="float32") /* ty=Tensor[(96, 12), float32] */;
  %340 = erf(%339) /* ty=Tensor[(96, 12), float32] */;
  %341 = cast(meta[relay.Constant][27] /* ty=Tensor[(96, 12), int64] */, dtype="float64") /* ty=Tensor[(96, 12), float64] */;
  %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(2), int32] */;
  %343 = cast(%340, dtype="float64") /* ty=Tensor[(96, 12), float64] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %345 = cast(%340, dtype="float64") /* ty=Tensor[(96, 12), float64] */;
  %346 = cast(meta[relay.Constant][28] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
  %347 = cast(meta[relay.Constant][28] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
  %348 = cast(%var_2571, dtype="int64") /* ty=Tensor[(675), int64] */;
  %349 = cast(%var_2572, dtype="float32") /* ty=Tensor[(126, 3), float32] */;
  %350 = reshape(%346, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
  %351 = reshape(%347, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
  %352 = reshape(%348, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %353 = reshape(%349, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %354 = @func_1108(%350, %351, %352, %353) /* ty=(Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) */;
  %355 = cast(%var_2589, dtype="uint32") /* ty=Tensor[(18), uint32] */;
  %356 = cast(%var_2589, dtype="uint32") /* ty=Tensor[(18), uint32] */;
  %357 = reshape(%355, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), uint32] */;
  %358 = reshape(%356, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), uint32] */;
  %359 = @func_1709(%357, %358) /* ty=(Tensor[(?, 3, 6), uint32], Tensor[(16, 9, 8), int64], Tensor[(1, 1152), int64]) */;
  %360 = %315.2;
  %361 = %327.0;
  %362 = %330.1;
  %363 = %338.2;
  %364 = floor_mod(%343, %344) /* ty=Tensor[(96, 12), float64] */;
  %365 = sin(%345) /* ty=Tensor[(96, 12), float64] */;
  %366 = %354.10;
  %367 = %359.0;
  (%360, %333, meta[relay.Constant][25] /* ty=Tensor[(1872), float64] */, meta[relay.Constant][26] /* ty=Tensor[(180, 4), float64] */, %361, %362, %363, %364, %365, %366, meta[relay.Constant][28] /* ty=Tensor[(1680), uint64] */, %var_2571, %var_2572, %367, %var_2589)
}

def @func_5959() -> Tensor[(72), float64] {
  %368 = @func_2657() /* ty=(Tensor[(72), float64],) */;
  %368.0
}

def @func_3502(%var_3480: Tensor[(15, 8, 16), int64], %var_3481: Tensor[(15, 8, 16), int64], %var_3487: Tensor[(840, 2), uint64], %var_3488: Tensor[(675), int64], %var_3489: Tensor[(378), float32], %var_3500: Tensor[(1, 1152), int64]) -> (Tensor[(15, 8, 16), int64], Tensor[(6, 2, 6), float64], Tensor[(840, 2), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 168), float32], Tensor[(1, 1152), int64]) {
  %369 = cast(%var_3481, dtype="int64") /* ty=Tensor[(15, 8, 16), int64] */;
  %370 = shape_of(%var_3480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%var_3480, dtype="int64") /* ty=Tensor[(15, 8, 16), int64] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %373 = cast(%var_3487, dtype="uint64") /* ty=Tensor[(840, 2), uint64] */;
  %374 = cast(%var_3487, dtype="uint64") /* ty=Tensor[(840, 2), uint64] */;
  %375 = cast(%var_3488, dtype="int64") /* ty=Tensor[(675), int64] */;
  %376 = cast(%var_3489, dtype="float32") /* ty=Tensor[(378), float32] */;
  %377 = reshape(%373, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
  %378 = reshape(%374, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
  %379 = reshape(%375, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %380 = reshape(%376, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %381 = @func_1108(%377, %378, %379, %380) /* ty=(Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) */;
  %382 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %383 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %384 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %385 = cast(%var_3500, dtype="int64") /* ty=Tensor[(1, 1152), int64] */;
  %386 = reshape(%382, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
  %387 = reshape(%383, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
  %388 = reshape(%384, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
  %389 = reshape(%385, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
  %390 = @func_3033(%386, %387, %388, %389) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(12, 14, 2), bool]) */;
  %391 = multiply(%371, %372) /* ty=Tensor[(15, 8, 16), int64] */;
  %392 = %381.8;
  %393 = %390.1;
  (%391, %392, %var_3487, %var_3488, %var_3489, %393, meta[relay.Constant][29] /* ty=Tensor[(2, 168), float32] */, %var_3500)
}

def @func_4848(%var_4814: Tensor[(9, 16, 12), int16], %var_4815: Tensor[(9, 16, 12), int16], %var_4837: Tensor[(9, 16, 12), int16]) -> (Tensor[(6, 2, 6), int64], Tensor[(9, 16, 12), bool], Tensor[(9, 16, 12), int8], Tensor[(72), float64]) {
  %394 = @func_4780() /* ty=(Tensor[(6, 2, 6), int64],) */;
  %395 = cast(%var_4815, dtype="int16") /* ty=Tensor[(9, 16, 12), int16] */;
  %396 = shape_of(%var_4814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %397 = cast(%var_4814, dtype="int16") /* ty=Tensor[(9, 16, 12), int16] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %399 = left_shift(%397, %398) /* ty=Tensor[(9, 16, 12), int16] */;
  %400 = cast(%var_4814, dtype="bool") /* ty=Tensor[(9, 16, 12), bool] */;
  %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%399, dtype="bool") /* ty=Tensor[(9, 16, 12), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %404 = cast(%var_4837, dtype="int8") /* ty=Tensor[(9, 16, 12), int8] */;
  %405 = shape_of(%var_4814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%var_4814, dtype="int8") /* ty=Tensor[(9, 16, 12), int8] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %408 = %394.0;
  %409 = logical_and(%402, %403) /* ty=Tensor[(9, 16, 12), bool] */;
  %410 = bitwise_or(%406, %407) /* ty=Tensor[(9, 16, 12), int8] */;
  %411 = @func_4564() /* ty=Tensor[(72), float64] */;
  (%408, %409, %410, %411)
}

def @func_4947(%var_4889: Tensor[(9, 4, 13), float64], %var_4925: Tensor[(18), uint32], %var_4938: Tensor[(1920), int64]) -> (Tensor[(12, 13, 12), bool], Tensor[(1872), float64], Tensor[(720), float64], Tensor[(72), float64], Tensor[(9, 4, 13), bool], Tensor[(1, 1152), int64], Tensor[(18), uint32], Tensor[(9, 4, 13), float64], Tensor[(1920), int64], Tensor[(675), int64], Tensor[(378), float32]) {
  %412 = cast(meta[relay.Constant][30] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %413 = cast(meta[relay.Constant][30] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %414 = cast(meta[relay.Constant][31] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %415 = reshape(%412, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
  %416 = reshape(%413, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
  %417 = reshape(%414, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %418 = @func_2193(%415, %416, %417) /* ty=(Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) */;
  %419 = @func_4656() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(72), float64], Tensor[(72), float64]) */;
  %420 = %419.0;
  %421 = cast(%var_4889, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%420, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %425 = greater(%423, %424) /* ty=Tensor[(9, 4, 13), bool] */;
  %426 = cast(%var_4889, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%425, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %430 = cast(%var_4925, dtype="uint32") /* ty=Tensor[(18), uint32] */;
  %431 = cast(%var_4925, dtype="uint32") /* ty=Tensor[(18), uint32] */;
  %432 = reshape(%430, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), uint32] */;
  %433 = reshape(%431, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), uint32] */;
  %434 = @func_1709(%432, %433) /* ty=(Tensor[(?, 3, 6), uint32], Tensor[(16, 9, 8), int64], Tensor[(1, 1152), int64]) */;
  %435 = cast(%var_4938, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %436 = cast(meta[relay.Constant][32] /* ty=Tensor[(675), int64] */, dtype="int64") /* ty=Tensor[(675), int64] */;
  %437 = cast(meta[relay.Constant][33] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %438 = %434.2;
  %439 = cast(%438, dtype="int64") /* ty=Tensor[(1, 1152), int64] */;
  %440 = reshape(%435, newshape=[2, 960]) /* ty=Tensor[(2, 960), int64] */;
  %441 = reshape(%436, newshape=[675]) /* ty=Tensor[(675), int64] */;
  %442 = reshape(%437, newshape=[126, 3]) /* ty=Tensor[(126, 3), float32] */;
  %443 = reshape(%439, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
  %444 = @func_4051(%440, %441, %442, %443) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(378), float32], Tensor[(2, 960), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(126, 3), float32], Tensor[(1152), int64]) */;
  %445 = %418.0;
  %446 = @func_3760() /* ty=Tensor[(72), float64] */;
  %447 = logical_or(%428, %429) /* ty=Tensor[(9, 4, 13), bool] */;
  %448 = %444.0;
  (%445, meta[relay.Constant][30] /* ty=Tensor[(1872), float64] */, meta[relay.Constant][31] /* ty=Tensor[(720), float64] */, %446, %447, %438, %var_4925, %448, %var_4938, meta[relay.Constant][32] /* ty=Tensor[(675), int64] */, meta[relay.Constant][33] /* ty=Tensor[(378), float32] */)
}

def @func_5024(%var_4980: Tensor[(15, 1, 10), float32], %var_4981: Tensor[(15, 13, 10), float32]) -> (Tensor[(72), float64], Tensor[(8, 3, 3), int16], Tensor[(18, 100), float32], Tensor[(300), float64], Tensor[(675), int64], Tensor[(6, 2, 6), int64], Tensor[(15, 13, 10), float32]) {
  %449 = cast(meta[relay.Constant][34] /* ty=Tensor[(18, 100), float32] */, dtype="float32") /* ty=Tensor[(18, 100), float32] */;
  %450 = cast(meta[relay.Constant][34] /* ty=Tensor[(18, 100), float32] */, dtype="float32") /* ty=Tensor[(18, 100), float32] */;
  %451 = cast(meta[relay.Constant][35] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %452 = cast(meta[relay.Constant][36] /* ty=Tensor[(675), int64] */, dtype="int64") /* ty=Tensor[(675), int64] */;
  %453 = reshape(%449, newshape=[10, 12, 15]) /* ty=Tensor[(10, 12, 15), float32] */;
  %454 = reshape(%450, newshape=[10, 12, 15]) /* ty=Tensor[(10, 12, 15), float32] */;
  %455 = reshape(%451, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %456 = reshape(%452, newshape=[675]) /* ty=Tensor[(675), int64] */;
  %457 = @func_4001(%453, %454, %455, %456) /* ty=(Tensor[(10, 12, 15), bool], Tensor[(72), int16], Tensor[(300), float64], int64, Tensor[(675), int64], Tensor[(8, 3, 3), int16]) */;
  %458 = @func_4780() /* ty=(Tensor[(6, 2, 6), int64],) */;
  %459 = cast(%var_4980, dtype="float32") /* ty=Tensor[(15, 1, 10), float32] */;
  %460 = cast(%var_4981, dtype="float32") /* ty=Tensor[(15, 13, 10), float32] */;
  %461 = multiply(%459, %460) /* ty=Tensor[(15, 13, 10), float32] */;
  %462 = cast(%461, dtype="float32") /* ty=Tensor[(15, 13, 10), float32] */;
  %463 = @func_3760() /* ty=Tensor[(72), float64] */;
  %464 = %457.5;
  %465 = %458.0;
  %466 = sqrt(%462) /* ty=Tensor[(15, 13, 10), float32] */;
  (%463, %464, meta[relay.Constant][34] /* ty=Tensor[(18, 100), float32] */, meta[relay.Constant][35] /* ty=Tensor[(300), float64] */, meta[relay.Constant][36] /* ty=Tensor[(675), int64] */, %465, %466)
}

def @func_4001(%var_3959: Tensor[(10, 12, 15), float32], %var_3960: Tensor[(10, 12, 15), float32], %var_3978: Tensor[(300), float64], %var_3980: Tensor[(675), int64]) -> (Tensor[(10, 12, 15), bool], Tensor[(72), int16], Tensor[(300), float64], int64, Tensor[(675), int64], Tensor[(8, 3, 3), int16]) {
  %467 = cast(%var_3960, dtype="bool") /* ty=Tensor[(10, 12, 15), bool] */;
  %468 = shape_of(%var_3959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %469 = cast(%var_3959, dtype="bool") /* ty=Tensor[(10, 12, 15), bool] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %471 = cast(meta[relay.Constant][37] /* ty=Tensor[(72), int16] */, dtype="int16") /* ty=Tensor[(72), int16] */;
  %472 = reshape(%471, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), int16] */;
  %473 = @func_1593(%472) /* ty=(Tensor[(8, 3, 3), bool], Tensor[(6, 2, 6), int64], Tensor[(8, 3, 3), float64]) */;
  %474 = %473.0;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
  %476 = log10(%475) /* ty=Tensor[(8, 3, 3), float64] */;
  %477 = cast(%var_3978, dtype="float64") /* ty=Tensor[(300), float64] */;
  %478 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %479 = cast(%var_3980, dtype="int64") /* ty=Tensor[(675), int64] */;
  %480 = reshape(%477, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), float64] */;
  %481 = reshape(%478, newshape=[]) /* ty=int64 */;
  %482 = reshape(%479, newshape=[675]) /* ty=Tensor[(675), int64] */;
  %483 = @func_2243(%480, %481, %482) /* ty=(Tensor[(5, 6, 10), float64], Tensor[(9, 5, 15), float32], int64, Tensor[(675), int64], Tensor[(8, 3, 3), bool], Tensor[(72), int16]) */;
  %484 = %483.2;
  %485 = cast(%476, dtype="int16") /* ty=Tensor[(8, 3, 3), int16] */;
  %486 = cast(%484, dtype="int16") /* ty=int16 */;
  %487 = less_equal(%469, %470) /* ty=Tensor[(10, 12, 15), bool] */;
  %488 = minimum(%485, %486) /* ty=Tensor[(8, 3, 3), int16] */;
  (%487, meta[relay.Constant][37] /* ty=Tensor[(72), int16] */, %var_3978, -5 /* ty=int64 */, %var_3980, %488)
}

def @func_5539(%var_5530: Tensor[(30), float64], %var_5531: Tensor[(1152), int64], %var_5532: Tensor[(378), float32]) -> (Tensor[(9, 4, 13), float64], Tensor[(9, 4, 13), float64], Tensor[(16, 10, 3), bool], Tensor[(30), float64], Tensor[(1152), int64], Tensor[(378), float32], Tensor[(480), float32]) {
  %489 = @func_2949() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %490 = @func_2745() /* ty=Tensor[(9, 4, 13), float64] */;
  %491 = cast(%490, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %492 = cast(%var_5530, dtype="float64") /* ty=Tensor[(30), float64] */;
  %493 = cast(%var_5531, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %494 = cast(%var_5532, dtype="float32") /* ty=Tensor[(378), float32] */;
  %495 = cast(meta[relay.Constant][38] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %496 = reshape(%492, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), float64] */;
  %497 = reshape(%493, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
  %498 = reshape(%494, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %499 = reshape(%495, newshape=[16, 10, 3]) /* ty=Tensor[(16, 10, 3), float32] */;
  %500 = @func_1445(%496, %497, %498, %499) /* ty=(Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(?, 10, 3), uint64], Tensor[(14, 10, 8), float64], Tensor[(1120), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 10, 3), bool], Tensor[(14, 10, 8), float64], Tensor[(16, 10, 3), float32]) */;
  %501 = %489.0;
  %502 = acosh(%491) /* ty=Tensor[(9, 4, 13), float64] */;
  %503 = %500.7;
  (%501, %502, %503, %var_5530, %var_5531, %var_5532, meta[relay.Constant][38] /* ty=Tensor[(480), float32] */)
}

def @func_6030() -> Tensor[(9, 4, 13), float64] {
  %504 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %505 = %504.0;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  asin(%506) /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_5926() -> (Tensor[(72), float64],) {
  %507 = @func_2729() /* ty=Tensor[(72), float64] */;
  (%507,)
}

def @func_2657() -> (Tensor[(72), float64],) {
  %508 = @func_2505() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */;
  %509 = %508.2;
  (%509,)
}

def @func_2909(%var_2881: Tensor[(8, 140), float64]) -> (Tensor[(6, 2, 6), float32], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(14, 10, 8), float64], Tensor[(8, 140), float64], Tensor[(16, 15, 10), bool], Tensor[(2025), float32], Tensor[(20, 120), float64], Tensor[(9, 4, 13), float64]) {
  %510 = @func_2505() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */;
  %511 = %510.1;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(6, 2, 6), float32] */;
  %513 = cast(meta[relay.Constant][39] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %514 = reshape(%513, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
  %515 = cast(%var_2881, dtype="float64") /* ty=Tensor[(8, 140), float64] */;
  %516 = reshape(%515, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
  %517 = @func_853(%516) /* ty=(Tensor[(14, 10, 8), float64],) */;
  %518 = cast(meta[relay.Constant][40] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %519 = cast(meta[relay.Constant][41] /* ty=Tensor[(20, 120), float64] */, dtype="float64") /* ty=Tensor[(20, 120), float64] */;
  %520 = reshape(%518, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
  %521 = reshape(%519, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %522 = @func_1501(%520, %521) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) */;
  %523 = cosh(%512) /* ty=Tensor[(6, 2, 6), float32] */;
  %524 = @func_91(%514) /* ty=Tensor[(12, 5, 14), float64] */;
  %525 = %517.0;
  %526 = %522.1;
  %527 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
  (%523, %524, meta[relay.Constant][39] /* ty=Tensor[(840), float64] */, %525, %var_2881, %526, meta[relay.Constant][40] /* ty=Tensor[(2025), float32] */, meta[relay.Constant][41] /* ty=Tensor[(20, 120), float64] */, %527)
}

def @func_3886(%var_3840: Tensor[(675), int64]) -> (Tensor[(72), float64], Tensor[(9, 5, 15), float32], Tensor[(1680), uint64], Tensor[(378), float32], Tensor[(9, 4, 13), float64], Tensor[(675), int32], Tensor[(9, 4, 13), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) {
  %528 = @func_2657() /* ty=(Tensor[(72), float64],) */;
  %529 = cast(meta[relay.Constant][42] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
  %530 = cast(meta[relay.Constant][42] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
  %531 = cast(%var_3840, dtype="int64") /* ty=Tensor[(675), int64] */;
  %532 = cast(meta[relay.Constant][43] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %533 = reshape(%529, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
  %534 = reshape(%530, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
  %535 = reshape(%531, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %536 = reshape(%532, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %537 = @func_1108(%533, %534, %535, %536) /* ty=(Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) */;
  %538 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %539 = cast(%var_3840, dtype="float64") /* ty=Tensor[(675), float64] */;
  %540 = log2(%539) /* ty=Tensor[(675), float64] */;
  %541 = cast(%var_3840, dtype="int32") /* ty=Tensor[(675), int32] */;
  %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(1), int32] */;
  %543 = cast(%540, dtype="int32") /* ty=Tensor[(675), int32] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?), int32] */;
  %545 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %546 = cast(meta[relay.Constant][44] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %547 = reshape(%546, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %548 = @func_426(%547) /* ty=(Tensor[(16, 15, 10), bool],) */;
  %549 = %528.0;
  %550 = %537.6;
  %551 = %538.0;
  %552 = multiply(%543, %544) /* ty=Tensor[(675), int32] */;
  %553 = %545.0;
  %554 = %548.0;
  (%549, %550, meta[relay.Constant][42] /* ty=Tensor[(1680), uint64] */, meta[relay.Constant][43] /* ty=Tensor[(378), float32] */, %551, %552, %553, %554, meta[relay.Constant][44] /* ty=Tensor[(2400), float64] */)
}

def @func_426(%var_419: Tensor[(16, 15, 10), float64]) -> (Tensor[(16, 15, 10), bool],) {
  %555 = cast(%var_419, dtype="bool") /* ty=Tensor[(16, 15, 10), bool] */;
  %556 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(16, 15, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 15, 10), float64] */, dtype="bool") /* ty=Tensor[(16, 15, 10), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %559 = less_equal(%557, %558) /* ty=Tensor[(16, 15, 10), bool] */;
  (%559,)
}

def @func_1445(%var_1344: Tensor[(1, 10, 3), float64], %var_1376: Tensor[(1152), int64], %var_1394: Tensor[(378), float32], %var_1401: Tensor[(16, 10, 3), float32]) -> (Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(?, 10, 3), uint64], Tensor[(14, 10, 8), float64], Tensor[(1120), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 10, 3), bool], Tensor[(14, 10, 8), float64], Tensor[(16, 10, 3), float32]) {
  %560 = cast(%var_1376, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %561 = cast(%var_1376, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %562 = reshape(%560, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
  %563 = reshape(%561, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
  %564 = @func_1242(%562, %563) /* ty=(Tensor[(16, 9, 8), int64],) */;
  %565 = cast(%var_1344, dtype="float64") /* ty=Tensor[(1, 10, 3), float64] */;
  %566 = atanh(%565) /* ty=Tensor[(1, 10, 3), float64] */;
  %567 = cast(%var_1344, dtype="uint64") /* ty=Tensor[(1, 10, 3), uint64] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%566, dtype="uint64") /* ty=Tensor[(1, 10, 3), uint64] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %571 = cast(meta[relay.Constant][46] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %572 = reshape(%571, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
  %573 = @func_853(%572) /* ty=(Tensor[(14, 10, 8), float64],) */;
  %574 = cast(%var_1394, dtype="float32") /* ty=Tensor[(378), float32] */;
  %575 = reshape(%574, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %576 = cast(%var_1344, dtype="float32") /* ty=Tensor[(1, 10, 3), float32] */;
  %577 = acos(%576) /* ty=Tensor[(1, 10, 3), float32] */;
  %578 = cast(%577, dtype="float32") /* ty=Tensor[(1, 10, 3), float32] */;
  %579 = erf(%578) /* ty=Tensor[(1, 10, 3), float32] */;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(1, 10, 3), float32] */;
  %581 = cast(%var_1401, dtype="float32") /* ty=Tensor[(16, 10, 3), float32] */;
  %582 = power(%580, %581) /* ty=Tensor[(16, 10, 3), float32] */;
  %583 = cast(%var_1344, dtype="int32") /* ty=Tensor[(1, 10, 3), int32] */;
  %584 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%566, dtype="int32") /* ty=Tensor[(1, 10, 3), int32] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %587 = right_shift(%585, %586) /* ty=Tensor[(?, 10, 3), int32] */;
  %588 = cast(%582, dtype="bool") /* ty=Tensor[(16, 10, 3), bool] */;
  %589 = cast(%587, dtype="bool") /* ty=Tensor[(?, 10, 3), bool] */;
  %590 = %573.0;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(14, 10, 8), float64] */;
  %592 = reshape(%591, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
  %593 = @func_853(%592) /* ty=(Tensor[(14, 10, 8), float64],) */;
  %594 = cast(%582, dtype="float32") /* ty=Tensor[(16, 10, 3), float32] */;
  %595 = %564.0;
  %596 = bitwise_and(%569, %570) /* ty=Tensor[(?, 10, 3), uint64] */;
  %597 = @func_736(%575) /* ty=Tensor[(7, 9, 6), bool] */;
  %598 = less_equal(%588, %589) /* ty=Tensor[(16, 10, 3), bool] */;
  %599 = %593.0;
  %600 = log(%594) /* ty=Tensor[(16, 10, 3), float32] */;
  (%595, %var_1376, %596, %590, meta[relay.Constant][46] /* ty=Tensor[(1120), float64] */, %597, %var_1394, %598, %599, %600)
}

def @func_5104(%var_5029: Tensor[(8, 7, 9), float64], %var_5030: Tensor[(8, 7, 9), float64], %var_5055: Tensor[(8, 7, 9), float64], %var_5068: Tensor[(160), uint32], %var_5081: Tensor[(6, 2, 6), int64], %var_5091: Tensor[(8, 7, 9), float32]) -> (Tensor[(8, 7, 9), float64], Tensor[(9, 4, 13), float64], Tensor[(8, 7, 9), bool], uint32, uint32, Tensor[(160), uint32], Tensor[(72), float64], Tensor[(6, 2, 6), bool], Tensor[(8, 7, 9), uint16]) {
  %601 = cast(%var_5030, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
  %602 = shape_of(%var_5029, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%var_5029, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %605 = @func_4493() /* ty=(Tensor[(8, 14, 1), float32], Tensor[(9, 4, 13), float64], Tensor[(9, 4, 13), float64]) */;
  %606 = cast(%var_5055, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %607 = shape_of(%var_5029, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%var_5029, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %610 = %605.1;
  %611 = cast(%610, dtype="float32") /* ty=Tensor[(9, 4, 13), float32] */;
  %612 = cast(meta[relay.Constant][47] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %613 = cast(%var_5068, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %614 = reshape(%611, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float32] */;
  %615 = reshape(%612, newshape=[]) /* ty=uint32 */;
  %616 = reshape(%613, newshape=[160]) /* ty=Tensor[(160), uint32] */;
  %617 = @func_4767(%614, %615, %616) /* ty=(Tensor[(9, 4, 13), uint8], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32], Tensor[(9, 4, 13), float64], Tensor[(378), float32]) */;
  %618 = cast(meta[relay.Constant][48] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %619 = reshape(%618, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
  %620 = @func_989(%619) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
  %621 = %620.1;
  %622 = cast(%var_5081, dtype="bool") /* ty=Tensor[(6, 2, 6), bool] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="bool") /* ty=Tensor[(6, 2, 6), bool] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %626 = cast(%var_5029, dtype="float32") /* ty=Tensor[(8, 7, 9), float32] */;
  %627 = atanh(%626) /* ty=Tensor[(8, 7, 9), float32] */;
  %628 = cast(%var_5091, dtype="uint16") /* ty=Tensor[(8, 7, 9), uint16] */;
  %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%627, dtype="uint16") /* ty=Tensor[(8, 7, 9), uint16] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %632 = power(%603, %604) /* ty=Tensor[(8, 7, 9), float64] */;
  %633 = logical_and(%608, %609) /* ty=Tensor[(8, 7, 9), bool] */;
  %634 = %617.2;
  %635 = less_equal(%624, %625) /* ty=Tensor[(6, 2, 6), bool] */;
  %636 = bitwise_xor(%630, %631) /* ty=Tensor[(8, 7, 9), uint16] */;
  (%632, %610, %633, %634, meta[relay.Constant][47] /* ty=uint32 */, %var_5068, meta[relay.Constant][48] /* ty=Tensor[(72), float64] */, %635, %636)
}

def @func_2779(%var_2770: Tensor[(72), float64]) -> (Tensor[(72), int64],) {
  %637 = @func_2657() /* ty=(Tensor[(72), float64],) */;
  %638 = %637.0;
  %639 = cast(%var_2770, dtype="int64") /* ty=Tensor[(72), int64] */;
  %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(1), int32] */;
  %641 = cast(%638, dtype="int64") /* ty=Tensor[(72), int64] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?), int64] */;
  %643 = multiply(%641, %642) /* ty=Tensor[(72), int64] */;
  (%643,)
}

def @func_3350(%var_3254: Tensor[(14, 4, 15), int64], %var_3297: Tensor[(2025), float32]) -> (Tensor[(2400), uint32], Tensor[(16, 15, 10), bool], Tensor[(2025), float32], Tensor[(14, 4, 15), bool], Tensor[(72), float64], Tensor[(14, 4, 15), float64]) {
  %644 = cast(meta[relay.Constant][49] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %645 = reshape(%644, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %646 = @func_426(%645) /* ty=(Tensor[(16, 15, 10), bool],) */;
  %647 = %646.0;
  %648 = cast(%647, dtype="uint32") /* ty=Tensor[(16, 15, 10), uint32] */;
  %649 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(2400), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %650 = cast(meta[relay.Constant][49] /* ty=Tensor[(2400), float64] */, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %652 = cast(%var_3297, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %653 = bitwise_xor(%650, %651) /* ty=Tensor[(2400), uint32] */;
  %654 = cast(%653, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %655 = reshape(%652, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
  %656 = reshape(%654, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %657 = @func_1501(%655, %656) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) */;
  %658 = cast(%var_3254, dtype="float64") /* ty=Tensor[(14, 4, 15), float64] */;
  %659 = cos(%658) /* ty=Tensor[(14, 4, 15), float64] */;
  %660 = cast(%659, dtype="bool") /* ty=Tensor[(14, 4, 15), bool] */;
  %661 = shape_of(%var_3254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%var_3254, dtype="bool") /* ty=Tensor[(14, 4, 15), bool] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %664 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 4, 15), int64] */, dtype="int64") /* ty=Tensor[(14, 4, 15), int64] */;
  %665 = shape_of(%var_3254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%var_3254, dtype="int64") /* ty=Tensor[(14, 4, 15), int64] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %668 = right_shift(%666, %667) /* ty=Tensor[(14, 4, 15), int64] */;
  %669 = cast(%668, dtype="uint32") /* ty=Tensor[(14, 4, 15), uint32] */;
  %670 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%659, dtype="uint32") /* ty=Tensor[(14, 4, 15), uint32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %673 = add(%671, %672) /* ty=Tensor[(14, 4, 15), uint32] */;
  %674 = cast(%673, dtype="float64") /* ty=Tensor[(14, 4, 15), float64] */;
  %675 = log(%674) /* ty=Tensor[(14, 4, 15), float64] */;
  %676 = cast(%var_3254, dtype="bool") /* ty=Tensor[(14, 4, 15), bool] */;
  %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%675, dtype="bool") /* ty=Tensor[(14, 4, 15), bool] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %680 = greater(%678, %679) /* ty=Tensor[(14, 4, 15), bool] */;
  %681 = cast(%675, dtype="float64") /* ty=Tensor[(14, 4, 15), float64] */;
  %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%680, dtype="float64") /* ty=Tensor[(14, 4, 15), float64] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %685 = %657.1;
  %686 = greater_equal(%662, %663) /* ty=Tensor[(14, 4, 15), bool] */;
  %687 = @func_2729() /* ty=Tensor[(72), float64] */;
  %688 = floor_divide(%683, %684) /* ty=Tensor[(14, 4, 15), float64] */;
  (%653, %685, %var_3297, %686, %687, %688)
}

def @func_3784() -> (Tensor[(9, 4, 13), float64],) {
  %689 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
  %690 = cast(%689, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %691 = sqrt(%690) /* ty=Tensor[(9, 4, 13), float64] */;
  (%691,)
}

def @func_4150(%var_4135: uint32, %var_4136: Tensor[(2, 8, 10), uint32]) -> (Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) {
  %692 = cast(%var_4135, dtype="uint32") /* ty=uint32 */;
  %693 = cast(%var_4136, dtype="uint32") /* ty=Tensor[(2, 8, 10), uint32] */;
  %694 = cast(meta[relay.Constant][51] /* ty=Tensor[(600, 4), float64] */, dtype="float64") /* ty=Tensor[(600, 4), float64] */;
  %695 = reshape(%694, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %696 = @func_426(%695) /* ty=(Tensor[(16, 15, 10), bool],) */;
  %697 = subtract(%692, %693) /* ty=Tensor[(2, 8, 10), uint32] */;
  %698 = %696.0;
  (%697, %698, meta[relay.Constant][51] /* ty=Tensor[(600, 4), float64] */)
}

def @func_91(%var_83: Tensor[(12, 5, 14), float64]) -> Tensor[(12, 5, 14), float64] {
  %699 = cast(%var_83, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  atanh(%699) /* ty=Tensor[(12, 5, 14), float64] */
}

def @func_2745() -> Tensor[(9, 4, 13), float64] {
  @func_2425() /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_5487() -> Tensor[(3, 14, 5), float32] {
  %700 = cast(meta[relay.Constant][52] /* ty=Tensor[(3, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
  log10(%700) /* ty=Tensor[(3, 14, 5), float32] */
}

def @func_5460() -> Tensor[(72), uint16] {
  @func_3200() /* ty=Tensor[(72), uint16] */
}

def @func_5479() -> Tensor[(72), float64] {
  %701 = @func_4656() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(72), float64], Tensor[(72), float64]) */;
  %701.1
}

def @func_2949() -> (Tensor[(9, 4, 13), float64],) {
  %702 = @func_2745() /* ty=Tensor[(9, 4, 13), float64] */;
  (%702,)
}

def @func_6301() -> (Tensor[(9, 4, 13), float64], Tensor[(2, 10, 15), int64], Tensor[(300), int64]) {
  %703 = cast(meta[relay.Constant][53] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
  %704 = cast(meta[relay.Constant][53] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
  %705 = reshape(%703, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), int64] */;
  %706 = reshape(%704, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), int64] */;
  %707 = @func_5783(%705, %706) /* ty=(Tensor[(2, 10, 15), int64],) */;
  %708 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
  %709 = %707.0;
  (%708, %709, meta[relay.Constant][53] /* ty=Tensor[(300), int64] */)
}

def @main(%var_6483: Tensor[(9, 4, 13), float64]) -> (Tensor[(9, 4, 13), float64],) {
  %710 = @func_6030() /* ty=Tensor[(9, 4, 13), float64] */;
  %711 = cast(%var_6483, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%710, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %715 = floor_divide(%713, %714) /* ty=Tensor[(9, 4, 13), float64] */;
  (%715,)
}

def @func_1108(%var_1039: Tensor[(15, 14, 8), uint64], %var_1040: Tensor[(15, 14, 8), uint64], %var_1073: Tensor[(9, 5, 15), int64], %var_1083: Tensor[(378), float32]) -> (Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) {
  %716 = cast(%var_1040, dtype="bool") /* ty=Tensor[(15, 14, 8), bool] */;
  %717 = shape_of(%var_1039, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%var_1039, dtype="bool") /* ty=Tensor[(15, 14, 8), bool] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %720 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %721 = cast(meta[relay.Constant][54] /* ty=Tensor[(675, 1), int64] */, dtype="int64") /* ty=Tensor[(675, 1), int64] */;
  %722 = reshape(%720, newshape=[]) /* ty=int64 */;
  %723 = reshape(%721, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %724 = @func_363(%722, %723) /* ty=(Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) */;
  %725 = %724.0;
  %726 = cast(%var_1073, dtype="uint8") /* ty=Tensor[(9, 5, 15), uint8] */;
  %727 = shape_of(%725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%725, dtype="uint8") /* ty=Tensor[(9, 5, 15), uint8] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %730 = cast(%var_1083, dtype="float32") /* ty=Tensor[(378), float32] */;
  %731 = reshape(%730, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %732 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %733 = cast(%var_1073, dtype="int64") /* ty=Tensor[(9, 5, 15), int64] */;
  %734 = reshape(%732, newshape=[]) /* ty=int64 */;
  %735 = reshape(%733, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %736 = @func_363(%734, %735) /* ty=(Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) */;
  %737 = @func_736(%731) /* ty=Tensor[(7, 9, 6), bool] */;
  %738 = cast(%737, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  %739 = reshape(%738, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %740 = cast(meta[relay.Constant][55] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %741 = reshape(%740, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
  %742 = @func_989(%741) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
  %743 = cast(meta[relay.Constant][56] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %744 = reshape(%743, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %745 = @func_426(%744) /* ty=(Tensor[(16, 15, 10), bool],) */;
  %746 = %742.0;
  %747 = cast(%746, dtype="float64") /* ty=Tensor[(6, 2, 6), float64] */;
  %748 = reshape(%747, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
  %749 = @func_989(%748) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
  %750 = equal(%718, %719) /* ty=Tensor[(15, 14, 8), bool] */;
  %751 = left_shift(%728, %729) /* ty=Tensor[(9, 5, 15), uint8] */;
  %752 = %736.1;
  %753 = @func_736(%739) /* ty=Tensor[(7, 9, 6), bool] */;
  %754 = %745.0;
  %755 = %749.0;
  (%750, 4 /* ty=int64 */, meta[relay.Constant][54] /* ty=Tensor[(675, 1), int64] */, %751, %737, %var_1083, %752, %753, %746, meta[relay.Constant][55] /* ty=Tensor[(72), float64] */, %754, meta[relay.Constant][56] /* ty=Tensor[(2400), float64] */, %755)
}

def @func_2243(%var_2224: Tensor[(5, 6, 10), float64], %var_2235: int64, %var_2236: Tensor[(675), int64]) -> (Tensor[(5, 6, 10), float64], Tensor[(9, 5, 15), float32], int64, Tensor[(675), int64], Tensor[(8, 3, 3), bool], Tensor[(72), int16]) {
  %756 = cast(%var_2224, dtype="float64") /* ty=Tensor[(5, 6, 10), float64] */;
  %757 = cast(%var_2235, dtype="int64") /* ty=int64 */;
  %758 = cast(%var_2236, dtype="int64") /* ty=Tensor[(675), int64] */;
  %759 = reshape(%757, newshape=[]) /* ty=int64 */;
  %760 = reshape(%758, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %761 = @func_363(%759, %760) /* ty=(Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) */;
  %762 = cast(meta[relay.Constant][57] /* ty=Tensor[(72), int16] */, dtype="int16") /* ty=Tensor[(72), int16] */;
  %763 = reshape(%762, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), int16] */;
  %764 = @func_1593(%763) /* ty=(Tensor[(8, 3, 3), bool], Tensor[(6, 2, 6), int64], Tensor[(8, 3, 3), float64]) */;
  %765 = acosh(%756) /* ty=Tensor[(5, 6, 10), float64] */;
  %766 = %761.1;
  %767 = %764.0;
  (%765, %766, %var_2235, %var_2236, %767, meta[relay.Constant][57] /* ty=Tensor[(72), int16] */)
}

def @func_3157(%var_3104: Tensor[(336), float32], %var_3105: Tensor[(1152), int64], %var_3135: Tensor[(378), float32]) -> (Tensor[(9, 4, 13), float64], Tensor[(12, 14, 2), float32], Tensor[(336), float32], Tensor[(1152), int64], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(12, 5, 14), float64], Tensor[(2, 2, 5), uint16], Tensor[(20), uint16], Tensor[(84, 20), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(7, 9, 6), float64]) {
  %768 = @func_2949() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %769 = cast(%var_3104, dtype="float32") /* ty=Tensor[(336), float32] */;
  %770 = cast(%var_3104, dtype="float32") /* ty=Tensor[(336), float32] */;
  %771 = cast(%var_3104, dtype="float32") /* ty=Tensor[(336), float32] */;
  %772 = cast(%var_3105, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %773 = reshape(%769, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
  %774 = reshape(%770, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
  %775 = reshape(%771, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
  %776 = reshape(%772, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
  %777 = @func_3033(%773, %774, %775, %776) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(12, 14, 2), bool]) */;
  %778 = cast(meta[relay.Constant][58] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %779 = reshape(%778, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
  %780 = @func_91(%779) /* ty=Tensor[(12, 5, 14), float64] */;
  %781 = cast(%780, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %782 = reshape(%781, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
  %783 = cast(meta[relay.Constant][59] /* ty=Tensor[(20), uint16] */, dtype="uint16") /* ty=Tensor[(20), uint16] */;
  %784 = cast(meta[relay.Constant][59] /* ty=Tensor[(20), uint16] */, dtype="uint16") /* ty=Tensor[(20), uint16] */;
  %785 = reshape(%783, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint16] */;
  %786 = reshape(%784, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint16] */;
  %787 = cast(meta[relay.Constant][60] /* ty=Tensor[(84, 20), uint64] */, dtype="uint64") /* ty=Tensor[(84, 20), uint64] */;
  %788 = cast(meta[relay.Constant][60] /* ty=Tensor[(84, 20), uint64] */, dtype="uint64") /* ty=Tensor[(84, 20), uint64] */;
  %789 = cast(meta[relay.Constant][61] /* ty=Tensor[(675), int64] */, dtype="int64") /* ty=Tensor[(675), int64] */;
  %790 = cast(%var_3135, dtype="float32") /* ty=Tensor[(378), float32] */;
  %791 = reshape(%787, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
  %792 = reshape(%788, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
  %793 = reshape(%789, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %794 = reshape(%790, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %795 = @func_1108(%791, %792, %793, %794) /* ty=(Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) */;
  %796 = %795.4;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %798 = %768.0;
  %799 = %777.0;
  %800 = @func_91(%782) /* ty=Tensor[(12, 5, 14), float64] */;
  %801 = @func_1800(%785, %786) /* ty=Tensor[(2, 2, 5), uint16] */;
  %802 = erf(%797) /* ty=Tensor[(7, 9, 6), float64] */;
  (%798, %799, %var_3104, %var_3105, %780, meta[relay.Constant][58] /* ty=Tensor[(840), float64] */, %800, %801, meta[relay.Constant][59] /* ty=Tensor[(20), uint16] */, meta[relay.Constant][60] /* ty=Tensor[(84, 20), uint64] */, meta[relay.Constant][61] /* ty=Tensor[(675), int64] */, %var_3135, %802)
}

def @func_3795(%var_3790: uint64, %var_3791: Tensor[(12, 16, 3), uint64]) -> (Tensor[(12, 16, 3), uint64],) {
  %803 = cast(%var_3790, dtype="uint64") /* ty=uint64 */;
  %804 = cast(%var_3791, dtype="uint64") /* ty=Tensor[(12, 16, 3), uint64] */;
  %805 = minimum(%803, %804) /* ty=Tensor[(12, 16, 3), uint64] */;
  (%805,)
}

def @func_5145(%var_5129: Tensor[(2, 13, 4), int64]) -> (Tensor[(2, 13, 4), int64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(4, 15, 12), float32], Tensor[(4, 180), float64]) {
  %806 = cast(%var_5129, dtype="int64") /* ty=Tensor[(2, 13, 4), int64] */;
  %807 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(2, 13, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(meta[relay.Constant][62] /* ty=Tensor[(2, 13, 4), int64] */, dtype="int64") /* ty=Tensor[(2, 13, 4), int64] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %810 = cast(meta[relay.Constant][63] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %811 = reshape(%810, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %812 = @func_4183(%811) /* ty=(Tensor[(72), uint16], Tensor[(7, 9, 6), bool], Tensor[(378), float32]) */;
  %813 = cast(meta[relay.Constant][64] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %814 = reshape(%813, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
  %815 = @func_1977(%814) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) */;
  %816 = multiply(%808, %809) /* ty=Tensor[(2, 13, 4), int64] */;
  %817 = %812.1;
  %818 = %815.1;
  (%816, %817, meta[relay.Constant][63] /* ty=Tensor[(378), float32] */, %818, meta[relay.Constant][64] /* ty=Tensor[(4, 180), float64] */)
}

def @func_3200() -> Tensor[(72), uint16] {
  %819 = @func_3077() /* ty=(Tensor[(72), float64],) */;
  %820 = %819.0;
  %821 = cast(meta[relay.Constant][65] /* ty=Tensor[(72), float64] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(1), int32] */;
  %823 = cast(%820, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?), uint16] */;
  minimum(%823, %824) /* ty=Tensor[(72), uint16] */
}

def @func_3613(%var_3542: int64, %var_3543: Tensor[(8, 4, 11), int64], %var_3564: Tensor[(1680), uint64], %var_3565: Tensor[(675), int64], %var_3566: Tensor[(378), float32], %var_3567: Tensor[(1152), int64], %var_3587: Tensor[(56, 20), float64]) -> (Tensor[(8, 4, 11), int64], Tensor[(675), int64], Tensor[(1920), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(1152), int64], Tensor[(9, 5, 15), float32], Tensor[(14, 10, 8), float64], Tensor[(56, 20), float64], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(12, 5, 14), float64], Tensor[(168, 2), float32]) {
  %825 = cast(%var_3542, dtype="int64") /* ty=int64 */;
  %826 = cast(%var_3543, dtype="int64") /* ty=Tensor[(8, 4, 11), int64] */;
  %827 = cast(meta[relay.Constant][66] /* ty=Tensor[(1920), int64] */, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %828 = cast(meta[relay.Constant][66] /* ty=Tensor[(1920), int64] */, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %829 = cast(%var_3564, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
  %830 = cast(%var_3565, dtype="int64") /* ty=Tensor[(675), int64] */;
  %831 = cast(%var_3566, dtype="float32") /* ty=Tensor[(378), float32] */;
  %832 = cast(%var_3567, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %833 = reshape(%827, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int64] */;
  %834 = reshape(%828, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int64] */;
  %835 = reshape(%829, newshape=[840, 2]) /* ty=Tensor[(840, 2), uint64] */;
  %836 = reshape(%830, newshape=[675]) /* ty=Tensor[(675), int64] */;
  %837 = reshape(%831, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %838 = reshape(%832, newshape=[1, 1152]) /* ty=Tensor[(1, 1152), int64] */;
  %839 = @func_3502(%833, %834, %835, %836, %837, %838) /* ty=(Tensor[(15, 8, 16), int64], Tensor[(6, 2, 6), float64], Tensor[(840, 2), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 168), float32], Tensor[(1, 1152), int64]) */;
  %840 = cast(%var_3542, dtype="int64") /* ty=int64 */;
  %841 = %839.3;
  %842 = cast(%841, dtype="int64") /* ty=Tensor[(675), int64] */;
  %843 = reshape(%840, newshape=[]) /* ty=int64 */;
  %844 = reshape(%842, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %845 = @func_363(%843, %844) /* ty=(Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) */;
  %846 = cast(%var_3587, dtype="float64") /* ty=Tensor[(56, 20), float64] */;
  %847 = reshape(%846, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
  %848 = @func_853(%847) /* ty=(Tensor[(14, 10, 8), float64],) */;
  %849 = cast(meta[relay.Constant][67] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %850 = reshape(%849, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
  %851 = @func_989(%850) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
  %852 = cast(meta[relay.Constant][68] /* ty=Tensor[(168, 2), float32] */, dtype="float32") /* ty=Tensor[(168, 2), float32] */;
  %853 = cast(%var_3567, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %854 = cast(%var_3566, dtype="float32") /* ty=Tensor[(378), float32] */;
  %855 = reshape(%852, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %856 = reshape(%853, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
  %857 = reshape(%854, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %858 = @func_3157(%855, %856, %857) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(12, 14, 2), float32], Tensor[(336), float32], Tensor[(1152), int64], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(12, 5, 14), float64], Tensor[(2, 2, 5), uint16], Tensor[(20), uint16], Tensor[(84, 20), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(7, 9, 6), float64]) */;
  %859 = multiply(%825, %826) /* ty=Tensor[(8, 4, 11), int64] */;
  %860 = %845.1;
  %861 = %848.0;
  %862 = %851.0;
  %863 = %858.6;
  (%859, %841, meta[relay.Constant][66] /* ty=Tensor[(1920), int64] */, %var_3564, %var_3565, %var_3566, %var_3567, %860, %861, %var_3587, %862, meta[relay.Constant][67] /* ty=Tensor[(72), float64] */, %863, meta[relay.Constant][68] /* ty=Tensor[(168, 2), float32] */)
}

def @func_4604() -> (Tensor[(72), float64], Tensor[(72), float64]) {
  %864 = @func_4133() /* ty=(Tensor[(72), float64],) */;
  %865 = @func_4322() /* ty=(Tensor[(72), float64],) */;
  %866 = %864.0;
  %867 = %865.0;
  (%866, %867)
}

def @func_1709(%var_1698: Tensor[(1, 3, 6), uint32], %var_1699: Tensor[(1, 3, 6), uint32]) -> (Tensor[(?, 3, 6), uint32], Tensor[(16, 9, 8), int64], Tensor[(1, 1152), int64]) {
  %868 = cast(%var_1699, dtype="uint32") /* ty=Tensor[(1, 3, 6), uint32] */;
  %869 = shape_of(%var_1698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%var_1698, dtype="uint32") /* ty=Tensor[(1, 3, 6), uint32] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %872 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 1152), int64] */, dtype="int64") /* ty=Tensor[(1, 1152), int64] */;
  %873 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 1152), int64] */, dtype="int64") /* ty=Tensor[(1, 1152), int64] */;
  %874 = reshape(%872, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
  %875 = reshape(%873, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
  %876 = @func_1242(%874, %875) /* ty=(Tensor[(16, 9, 8), int64],) */;
  %877 = bitwise_or(%870, %871) /* ty=Tensor[(?, 3, 6), uint32] */;
  %878 = %876.0;
  (%877, %878, meta[relay.Constant][69] /* ty=Tensor[(1, 1152), int64] */)
}

def @func_2729() -> Tensor[(72), float64] {
  %879 = @func_2657() /* ty=(Tensor[(72), float64],) */;
  %879.0
}

def @func_5423(%var_5380: Tensor[(1872), float64], %var_5381: Tensor[(1, 720), float64]) -> (Tensor[(72), float64], Tensor[(720), float64], Tensor[(1, 720), float64], Tensor[(1872), uint8], Tensor[(72), int64], Tensor[(1872), float64]) {
  %880 = cast(%var_5380, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %881 = cast(%var_5380, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %882 = cast(%var_5381, dtype="float64") /* ty=Tensor[(1, 720), float64] */;
  %883 = reshape(%880, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
  %884 = reshape(%881, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
  %885 = reshape(%882, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %886 = @func_2193(%883, %884, %885) /* ty=(Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) */;
  %887 = cast(meta[relay.Constant][70] /* ty=Tensor[(1872), float64] */, dtype="uint8") /* ty=Tensor[(1872), uint8] */;
  %888 = shape_of(%var_5380, dtype="int32") /* ty=Tensor[(1), int32] */;
  %889 = cast(%var_5380, dtype="uint8") /* ty=Tensor[(1872), uint8] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %891 = @func_3760() /* ty=Tensor[(72), float64] */;
  %892 = cast(%891, dtype="float64") /* ty=Tensor[(72), float64] */;
  %893 = reshape(%892, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %894 = @func_2779(%893) /* ty=(Tensor[(72), int64],) */;
  %895 = cast(meta[relay.Constant][70] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %896 = %886.2;
  %897 = logical_xor(%889, %890) /* ty=Tensor[(1872), uint8] */;
  %898 = %894.0;
  %899 = log10(%895) /* ty=Tensor[(1872), float64] */;
  (%891, %896, %var_5381, %897, %898, %899)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5232(%var_5210: Tensor[(4, 40), uint32]) -> (Tensor[(4, 13), float32], Tensor[(9, 4, 13), float64], Tensor[(16, 15, 10), bool], uint32, Tensor[(4, 40), uint32]) {
  %0 = @func_4975() /* ty=(Tensor[(4, 13), float32],) */;
  %1 = @func_2949() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %2 = cast(meta[relay.Constant][0] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %3 = cast(%var_5210, dtype="uint32") /* ty=Tensor[(4, 40), uint32] */;
  %4 = reshape(%2, newshape=[]) /* ty=uint32 */;
  %5 = reshape(%3, newshape=[2, 8, 10]) /* ty=Tensor[(2, 8, 10), uint32] */;
  %6 = @func_4150(%4, %5) /* ty=(Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) */;
  %7 = %0.0;
  %8 = %1.0;
  %9 = %6.1;
  (%7, %8, %9, meta[relay.Constant][0] /* ty=uint32 */, %var_5210)
}

def @func_3400(%var_3359: Tensor[(11, 1, 8), uint64], %var_3360: Tensor[(11, 4, 8), uint64]) -> (Tensor[(4, 15, 12), float64], Tensor[(360, 2), float64], Tensor[(11, 4, 8), float64]) {
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(360, 2), float64] */, dtype="float64") /* ty=Tensor[(360, 2), float64] */;
  %11 = reshape(%10, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
  %12 = @func_1977(%11) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) */;
  %13 = cast(%var_3359, dtype="bool") /* ty=Tensor[(11, 1, 8), bool] */;
  %14 = cast(%var_3360, dtype="bool") /* ty=Tensor[(11, 4, 8), bool] */;
  %15 = greater_equal(%13, %14) /* ty=Tensor[(11, 4, 8), bool] */;
  %16 = cast(%15, dtype="float64") /* ty=Tensor[(11, 4, 8), float64] */;
  %17 = log(%16) /* ty=Tensor[(11, 4, 8), float64] */;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(11, 4, 8), float64] */;
  %19 = cast(%var_3359, dtype="float64") /* ty=Tensor[(11, 1, 8), float64] */;
  %20 = %12.0;
  %21 = floor_divide(%18, %19) /* ty=Tensor[(11, 4, 8), float64] */;
  (%20, meta[relay.Constant][1] /* ty=Tensor[(360, 2), float64] */, %21)
}

def @func_5327() -> Tensor[(9, 4, 13), float64] {
  %22 = @func_2949() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %23 = %22.0;
  %24 = cast(%23, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  log10(%24) /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_992(%var_990: Tensor[(6, 2, 6), float64]) -> (Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) {
  @func_989(%var_990) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */
}

def @func_2911(%var_2910: Tensor[(8, 140), float64]) -> (Tensor[(6, 2, 6), float32], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(14, 10, 8), float64], Tensor[(8, 140), float64], Tensor[(16, 15, 10), bool], Tensor[(2025), float32], Tensor[(20, 120), float64], Tensor[(9, 4, 13), float64]) {
  %43 = fn (%var_2881: Tensor[(8, 140), float64]) -> (Tensor[(6, 2, 6), float32], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(14, 10, 8), float64], Tensor[(8, 140), float64], Tensor[(16, 15, 10), bool], Tensor[(2025), float32], Tensor[(20, 120), float64], Tensor[(9, 4, 13), float64]) {
    %25 = @func_2505() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */;
    %26 = %25.1;
    %27 = cast(%26, dtype="float32") /* ty=Tensor[(6, 2, 6), float32] */;
    %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
    %29 = reshape(%28, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
    %30 = cast(%var_2881, dtype="float64") /* ty=Tensor[(8, 140), float64] */;
    %31 = reshape(%30, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
    %32 = @func_853(%31) /* ty=(Tensor[(14, 10, 8), float64],) */;
    %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %34 = cast(meta[relay.Constant][4] /* ty=Tensor[(20, 120), float64] */, dtype="float64") /* ty=Tensor[(20, 120), float64] */;
    %35 = reshape(%33, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
    %36 = reshape(%34, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
    %37 = @func_1501(%35, %36) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) */;
    %38 = cosh(%27) /* ty=Tensor[(6, 2, 6), float32] */;
    %39 = @func_91(%29) /* ty=Tensor[(12, 5, 14), float64] */;
    %40 = %32.0;
    %41 = %37.1;
    %42 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
    (%38, %39, meta[relay.Constant][2] /* ty=Tensor[(840), float64] */, %40, %var_2881, %41, meta[relay.Constant][3] /* ty=Tensor[(2025), float32] */, meta[relay.Constant][4] /* ty=Tensor[(20, 120), float64] */, %42)
  };
  %43(%var_2910) /* ty=(Tensor[(6, 2, 6), float32], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(14, 10, 8), float64], Tensor[(8, 140), float64], Tensor[(16, 15, 10), bool], Tensor[(2025), float32], Tensor[(20, 120), float64], Tensor[(9, 4, 13), float64]) */
}

def @func_3202() -> Tensor[(72), uint16] {
  @func_3200() /* ty=Tensor[(72), uint16] */
}

def @func_94(%var_92: Tensor[(12, 5, 14), float64]) -> Tensor[(12, 5, 14), float64] {
  @func_91(%var_92) /* ty=Tensor[(12, 5, 14), float64] */
}

def @func_4767(%var_4696: Tensor[(9, 4, 13), float32], %var_4707: uint32, %var_4708: Tensor[(160), uint32]) -> (Tensor[(9, 4, 13), uint8], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32], Tensor[(9, 4, 13), float64], Tensor[(378), float32]) {
  %44 = @func_2949() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %45 = %44.0;
  %46 = cast(%45, dtype="float32") /* ty=Tensor[(9, 4, 13), float32] */;
  %47 = log(%46) /* ty=Tensor[(9, 4, 13), float32] */;
  %48 = cast(%var_4696, dtype="uint8") /* ty=Tensor[(9, 4, 13), uint8] */;
  %49 = shape_of(%47, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(%47, dtype="uint8") /* ty=Tensor[(9, 4, 13), uint8] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %52 = cast(%var_4707, dtype="uint32") /* ty=uint32 */;
  %53 = cast(%var_4708, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %54 = reshape(%52, newshape=[]) /* ty=uint32 */;
  %55 = reshape(%53, newshape=[2, 8, 10]) /* ty=Tensor[(2, 8, 10), uint32] */;
  %56 = @func_4150(%54, %55) /* ty=(Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) */;
  %57 = cast(%47, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %58 = cast(meta[relay.Constant][5] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %59 = cast(%var_4708, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %60 = reshape(%57, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
  %61 = reshape(%58, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %62 = reshape(%59, newshape=[160]) /* ty=Tensor[(160), uint32] */;
  %63 = @func_4371(%60, %61, %62) /* ty=(Tensor[(9, 4, 13), bool], Tensor[(9, 4, 13), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32]) */;
  %64 = bitwise_and(%50, %51) /* ty=Tensor[(9, 4, 13), uint8] */;
  %65 = %56.1;
  %66 = %63.1;
  (%64, %65, %var_4707, %var_4708, %66, meta[relay.Constant][5] /* ty=Tensor[(378), float32] */)
}

def @func_5926() -> (Tensor[(72), float64],) {
  %67 = @func_2729() /* ty=Tensor[(72), float64] */;
  (%67,)
}

def @func_5329() -> Tensor[(9, 4, 13), float64] {
  @func_5327() /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_1979(%var_1978: Tensor[(4, 15, 12), float64]) -> (Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) {
  %73 = fn (%var_1961: Tensor[(4, 15, 12), float64]) -> (Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) {
    %68 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 1, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 1, 12), float64] */;
    %69 = cast(%var_1961, dtype="float64") /* ty=Tensor[(4, 15, 12), float64] */;
    %70 = cast(%var_1961, dtype="float32") /* ty=Tensor[(4, 15, 12), float32] */;
    %71 = divide(%68, %69) /* ty=Tensor[(4, 15, 12), float64] */;
    %72 = erf(%70) /* ty=Tensor[(4, 15, 12), float32] */;
    (%71, %72)
  };
  %73(%var_1978) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) */
}

def @func_1803(%var_1801: Tensor[(2, 2, 5), uint16], %var_1802: Tensor[(2, 2, 5), uint16]) -> Tensor[(2, 2, 5), uint16] {
  %78 = fn (%var_1794: Tensor[(2, 2, 5), uint16], %var_1795: Tensor[(2, 2, 5), uint16]) -> Tensor[(2, 2, 5), uint16] {
    %74 = cast(%var_1795, dtype="uint16") /* ty=Tensor[(2, 2, 5), uint16] */;
    %75 = shape_of(%var_1794, dtype="int32") /* ty=Tensor[(3), int32] */;
    %76 = cast(%var_1794, dtype="uint16") /* ty=Tensor[(2, 2, 5), uint16] */;
    %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    add(%76, %77) /* ty=Tensor[(2, 2, 5), uint16] */
  };
  %78(%var_1801, %var_1802) /* ty=Tensor[(2, 2, 5), uint16] */
}

def @func_2707(%var_2695: uint64, %var_2696: Tensor[(1, 11), uint64]) -> (Tensor[(1, 11), uint64], Tensor[(2, 2, 5), uint16], Tensor[(20), uint16]) {
  %79 = cast(%var_2695, dtype="uint64") /* ty=uint64 */;
  %80 = cast(%var_2696, dtype="uint64") /* ty=Tensor[(1, 11), uint64] */;
  %81 = cast(meta[relay.Constant][7] /* ty=Tensor[(20), uint16] */, dtype="uint16") /* ty=Tensor[(20), uint16] */;
  %82 = cast(meta[relay.Constant][7] /* ty=Tensor[(20), uint16] */, dtype="uint16") /* ty=Tensor[(20), uint16] */;
  %83 = reshape(%81, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint16] */;
  %84 = reshape(%82, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint16] */;
  %85 = minimum(%79, %80) /* ty=Tensor[(1, 11), uint64] */;
  %86 = @func_1800(%83, %84) /* ty=Tensor[(2, 2, 5), uint16] */;
  (%85, %86, meta[relay.Constant][7] /* ty=Tensor[(20), uint16] */)
}

def @func_2992() -> (Tensor[(9, 4, 13), float64], Tensor[(72), float64]) {
  %90 = fn () -> (Tensor[(9, 4, 13), float64], Tensor[(72), float64]) {
    %87 = @func_2505() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */;
    %88 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
    %89 = %87.2;
    (%88, %89)
  };
  %90() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(72), float64]) */
}

def @func_5480() -> Tensor[(72), float64] {
  %92 = fn () -> Tensor[(72), float64] {
    %91 = @func_4656() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(72), float64], Tensor[(72), float64]) */;
    %91.1
  };
  %92() /* ty=Tensor[(72), float64] */
}

def @func_1450(%var_1446: Tensor[(1, 10, 3), float64], %var_1447: Tensor[(1152), int64], %var_1448: Tensor[(378), float32], %var_1449: Tensor[(16, 10, 3), float32]) -> (Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(?, 10, 3), uint64], Tensor[(14, 10, 8), float64], Tensor[(1120), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 10, 3), bool], Tensor[(14, 10, 8), float64], Tensor[(16, 10, 3), float32]) {
  %134 = fn (%var_1344: Tensor[(1, 10, 3), float64], %var_1376: Tensor[(1152), int64], %var_1394: Tensor[(378), float32], %var_1401: Tensor[(16, 10, 3), float32]) -> (Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(?, 10, 3), uint64], Tensor[(14, 10, 8), float64], Tensor[(1120), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 10, 3), bool], Tensor[(14, 10, 8), float64], Tensor[(16, 10, 3), float32]) {
    %93 = cast(%var_1376, dtype="int64") /* ty=Tensor[(1152), int64] */;
    %94 = cast(%var_1376, dtype="int64") /* ty=Tensor[(1152), int64] */;
    %95 = reshape(%93, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
    %96 = reshape(%94, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
    %97 = @func_1242(%95, %96) /* ty=(Tensor[(16, 9, 8), int64],) */;
    %98 = cast(%var_1344, dtype="float64") /* ty=Tensor[(1, 10, 3), float64] */;
    %99 = atanh(%98) /* ty=Tensor[(1, 10, 3), float64] */;
    %100 = cast(%var_1344, dtype="uint64") /* ty=Tensor[(1, 10, 3), uint64] */;
    %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
    %102 = cast(%99, dtype="uint64") /* ty=Tensor[(1, 10, 3), uint64] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %104 = cast(meta[relay.Constant][8] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %105 = reshape(%104, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
    %106 = @func_853(%105) /* ty=(Tensor[(14, 10, 8), float64],) */;
    %107 = cast(%var_1394, dtype="float32") /* ty=Tensor[(378), float32] */;
    %108 = reshape(%107, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
    %109 = cast(%var_1344, dtype="float32") /* ty=Tensor[(1, 10, 3), float32] */;
    %110 = acos(%109) /* ty=Tensor[(1, 10, 3), float32] */;
    %111 = cast(%110, dtype="float32") /* ty=Tensor[(1, 10, 3), float32] */;
    %112 = erf(%111) /* ty=Tensor[(1, 10, 3), float32] */;
    %113 = cast(%112, dtype="float32") /* ty=Tensor[(1, 10, 3), float32] */;
    %114 = cast(%var_1401, dtype="float32") /* ty=Tensor[(16, 10, 3), float32] */;
    %115 = power(%113, %114) /* ty=Tensor[(16, 10, 3), float32] */;
    %116 = cast(%var_1344, dtype="int32") /* ty=Tensor[(1, 10, 3), int32] */;
    %117 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
    %118 = cast(%99, dtype="int32") /* ty=Tensor[(1, 10, 3), int32] */;
    %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %120 = right_shift(%118, %119) /* ty=Tensor[(?, 10, 3), int32] */;
    %121 = cast(%115, dtype="bool") /* ty=Tensor[(16, 10, 3), bool] */;
    %122 = cast(%120, dtype="bool") /* ty=Tensor[(?, 10, 3), bool] */;
    %123 = %106.0;
    %124 = cast(%123, dtype="float64") /* ty=Tensor[(14, 10, 8), float64] */;
    %125 = reshape(%124, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
    %126 = @func_853(%125) /* ty=(Tensor[(14, 10, 8), float64],) */;
    %127 = cast(%115, dtype="float32") /* ty=Tensor[(16, 10, 3), float32] */;
    %128 = %97.0;
    %129 = bitwise_and(%102, %103) /* ty=Tensor[(?, 10, 3), uint64] */;
    %130 = @func_736(%108) /* ty=Tensor[(7, 9, 6), bool] */;
    %131 = less_equal(%121, %122) /* ty=Tensor[(16, 10, 3), bool] */;
    %132 = %126.0;
    %133 = log(%127) /* ty=Tensor[(16, 10, 3), float32] */;
    (%128, %var_1376, %129, %123, meta[relay.Constant][8] /* ty=Tensor[(1120), float64] */, %130, %var_1394, %131, %132, %133)
  };
  %134(%var_1446, %var_1447, %var_1448, %var_1449) /* ty=(Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(?, 10, 3), uint64], Tensor[(14, 10, 8), float64], Tensor[(1120), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 10, 3), bool], Tensor[(14, 10, 8), float64], Tensor[(16, 10, 3), float32]) */
}

def @func_5983(%var_5982: Tensor[(9, 4, 13), float64]) -> (Tensor[(9, 4, 13), int64],) {
  %141 = fn (%var_5974: Tensor[(9, 4, 13), float64]) -> (Tensor[(9, 4, 13), int64],) {
    %135 = @func_5327() /* ty=Tensor[(9, 4, 13), float64] */;
    %136 = cast(%var_5974, dtype="int64") /* ty=Tensor[(9, 4, 13), int64] */;
    %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
    %138 = cast(%135, dtype="int64") /* ty=Tensor[(9, 4, 13), int64] */;
    %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %140 = left_shift(%138, %139) /* ty=Tensor[(9, 4, 13), int64] */;
    (%140,)
  };
  %141(%var_5982) /* ty=(Tensor[(9, 4, 13), int64],) */
}

def @func_6226() -> (Tensor[(9, 4, 13), float64],) {
  %142 = @func_6030() /* ty=Tensor[(9, 4, 13), float64] */;
  %143 = cast(%142, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %144 = atanh(%143) /* ty=Tensor[(9, 4, 13), float64] */;
  (%144,)
}

def @func_4947(%var_4889: Tensor[(9, 4, 13), float64], %var_4925: Tensor[(18), uint32], %var_4938: Tensor[(1920), int64]) -> (Tensor[(12, 13, 12), bool], Tensor[(1872), float64], Tensor[(720), float64], Tensor[(72), float64], Tensor[(9, 4, 13), bool], Tensor[(1, 1152), int64], Tensor[(18), uint32], Tensor[(9, 4, 13), float64], Tensor[(1920), int64], Tensor[(675), int64], Tensor[(378), float32]) {
  %145 = cast(meta[relay.Constant][9] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %146 = cast(meta[relay.Constant][9] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %147 = cast(meta[relay.Constant][10] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %148 = reshape(%145, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
  %149 = reshape(%146, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
  %150 = reshape(%147, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %151 = @func_2193(%148, %149, %150) /* ty=(Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) */;
  %152 = @func_4656() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(72), float64], Tensor[(72), float64]) */;
  %153 = %152.0;
  %154 = cast(%var_4889, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%153, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %158 = greater(%156, %157) /* ty=Tensor[(9, 4, 13), bool] */;
  %159 = cast(%var_4889, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%158, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %163 = cast(%var_4925, dtype="uint32") /* ty=Tensor[(18), uint32] */;
  %164 = cast(%var_4925, dtype="uint32") /* ty=Tensor[(18), uint32] */;
  %165 = reshape(%163, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), uint32] */;
  %166 = reshape(%164, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), uint32] */;
  %167 = @func_1709(%165, %166) /* ty=(Tensor[(?, 3, 6), uint32], Tensor[(16, 9, 8), int64], Tensor[(1, 1152), int64]) */;
  %168 = cast(%var_4938, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %169 = cast(meta[relay.Constant][11] /* ty=Tensor[(675), int64] */, dtype="int64") /* ty=Tensor[(675), int64] */;
  %170 = cast(meta[relay.Constant][12] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %171 = %167.2;
  %172 = cast(%171, dtype="int64") /* ty=Tensor[(1, 1152), int64] */;
  %173 = reshape(%168, newshape=[2, 960]) /* ty=Tensor[(2, 960), int64] */;
  %174 = reshape(%169, newshape=[675]) /* ty=Tensor[(675), int64] */;
  %175 = reshape(%170, newshape=[126, 3]) /* ty=Tensor[(126, 3), float32] */;
  %176 = reshape(%172, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
  %177 = @func_4051(%173, %174, %175, %176) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(378), float32], Tensor[(2, 960), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(126, 3), float32], Tensor[(1152), int64]) */;
  %178 = %151.0;
  %179 = @func_3760() /* ty=Tensor[(72), float64] */;
  %180 = logical_or(%161, %162) /* ty=Tensor[(9, 4, 13), bool] */;
  %181 = %177.0;
  (%178, meta[relay.Constant][9] /* ty=Tensor[(1872), float64] */, meta[relay.Constant][10] /* ty=Tensor[(720), float64] */, %179, %180, %171, %var_4925, %181, %var_4938, meta[relay.Constant][11] /* ty=Tensor[(675), int64] */, meta[relay.Constant][12] /* ty=Tensor[(378), float32] */)
}

def @func_1504(%var_1502: Tensor[(15, 15, 9), float32], %var_1503: Tensor[(2400), float64]) -> (Tensor[(15, 15, 9), float32], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) {
  %191 = fn (%var_1484: Tensor[(15, 15, 9), float32], %var_1498: Tensor[(2400), float64]) -> (Tensor[(15, 15, 9), float32], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) {
    %182 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
    %183 = shape_of(%var_1484, dtype="int32") /* ty=Tensor[(3), int32] */;
    %184 = cast(%var_1484, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
    %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %186 = cast(%var_1498, dtype="float64") /* ty=Tensor[(2400), float64] */;
    %187 = reshape(%186, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
    %188 = @func_426(%187) /* ty=(Tensor[(16, 15, 10), bool],) */;
    %189 = power(%184, %185) /* ty=Tensor[(15, 15, 9), float32] */;
    %190 = %188.0;
    (%189, %190, %var_1498)
  };
  %191(%var_1502, %var_1503) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) */
}

def @func_2243(%var_2224: Tensor[(5, 6, 10), float64], %var_2235: int64, %var_2236: Tensor[(675), int64]) -> (Tensor[(5, 6, 10), float64], Tensor[(9, 5, 15), float32], int64, Tensor[(675), int64], Tensor[(8, 3, 3), bool], Tensor[(72), int16]) {
  %192 = cast(%var_2224, dtype="float64") /* ty=Tensor[(5, 6, 10), float64] */;
  %193 = cast(%var_2235, dtype="int64") /* ty=int64 */;
  %194 = cast(%var_2236, dtype="int64") /* ty=Tensor[(675), int64] */;
  %195 = reshape(%193, newshape=[]) /* ty=int64 */;
  %196 = reshape(%194, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %197 = @func_363(%195, %196) /* ty=(Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) */;
  %198 = cast(meta[relay.Constant][14] /* ty=Tensor[(72), int16] */, dtype="int16") /* ty=Tensor[(72), int16] */;
  %199 = reshape(%198, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), int16] */;
  %200 = @func_1593(%199) /* ty=(Tensor[(8, 3, 3), bool], Tensor[(6, 2, 6), int64], Tensor[(8, 3, 3), float64]) */;
  %201 = acosh(%192) /* ty=Tensor[(5, 6, 10), float64] */;
  %202 = %197.1;
  %203 = %200.0;
  (%201, %202, %var_2235, %var_2236, %203, meta[relay.Constant][14] /* ty=Tensor[(72), int16] */)
}

def @func_2745() -> Tensor[(9, 4, 13), float64] {
  @func_2425() /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_3354(%var_3352: Tensor[(14, 4, 15), int64], %var_3353: Tensor[(2025), float32]) -> (Tensor[(2400), uint32], Tensor[(16, 15, 10), bool], Tensor[(2025), float32], Tensor[(14, 4, 15), bool], Tensor[(72), float64], Tensor[(14, 4, 15), float64]) {
  @func_3350(%var_3352, %var_3353) /* ty=(Tensor[(2400), uint32], Tensor[(16, 15, 10), bool], Tensor[(2025), float32], Tensor[(14, 4, 15), bool], Tensor[(72), float64], Tensor[(14, 4, 15), float64]) */
}

def @func_4271(%var_4267: uint64, %var_4268: Tensor[(576), uint64], %var_4269: Tensor[(80, 2), uint32], %var_4270: Tensor[(675), int64]) -> (Tensor[(72), float64], Tensor[(12, 16, 3), uint64], Tensor[(576), uint64], Tensor[(6, 2, 6), float32], Tensor[(1120), float64], Tensor[(80, 2), uint32], Tensor[(378), float32], Tensor[(675), int64], Tensor[(600, 4), uint16]) {
  %229 = fn (%var_4229: uint64, %var_4230: Tensor[(576), uint64], %var_4242: Tensor[(80, 2), uint32], %var_4248: Tensor[(675), int64]) -> (Tensor[(72), float64], Tensor[(12, 16, 3), uint64], Tensor[(576), uint64], Tensor[(6, 2, 6), float32], Tensor[(1120), float64], Tensor[(80, 2), uint32], Tensor[(378), float32], Tensor[(675), int64], Tensor[(600, 4), uint16]) {
    %204 = @func_2657() /* ty=(Tensor[(72), float64],) */;
    %205 = cast(%var_4229, dtype="uint64") /* ty=uint64 */;
    %206 = cast(%var_4230, dtype="uint64") /* ty=Tensor[(576), uint64] */;
    %207 = reshape(%205, newshape=[]) /* ty=uint64 */;
    %208 = reshape(%206, newshape=[12, 16, 3]) /* ty=Tensor[(12, 16, 3), uint64] */;
    %209 = @func_3795(%207, %208) /* ty=(Tensor[(12, 16, 3), uint64],) */;
    %210 = cast(meta[relay.Constant][15] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %211 = reshape(%210, newshape=[8, 140]) /* ty=Tensor[(8, 140), float64] */;
    %212 = @func_2909(%211) /* ty=(Tensor[(6, 2, 6), float32], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(14, 10, 8), float64], Tensor[(8, 140), float64], Tensor[(16, 15, 10), bool], Tensor[(2025), float32], Tensor[(20, 120), float64], Tensor[(9, 4, 13), float64]) */;
    %213 = cast(%var_4248, dtype="int64") /* ty=Tensor[(675), int64] */;
    %214 = reshape(%213, newshape=[675]) /* ty=Tensor[(675), int64] */;
    %215 = @func_3886(%214) /* ty=(Tensor[(72), float64], Tensor[(9, 5, 15), float32], Tensor[(1680), uint64], Tensor[(378), float32], Tensor[(9, 4, 13), float64], Tensor[(675), int32], Tensor[(9, 4, 13), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) */;
    %216 = cast(%var_4229, dtype="uint32") /* ty=uint32 */;
    %217 = cast(%var_4242, dtype="uint32") /* ty=Tensor[(80, 2), uint32] */;
    %218 = reshape(%216, newshape=[]) /* ty=uint32 */;
    %219 = reshape(%217, newshape=[2, 8, 10]) /* ty=Tensor[(2, 8, 10), uint32] */;
    %220 = @func_4150(%218, %219) /* ty=(Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) */;
    %221 = %220.2;
    %222 = cast(%221, dtype="uint16") /* ty=Tensor[(600, 4), uint16] */;
    %223 = cast(%var_4229, dtype="uint16") /* ty=uint16 */;
    %224 = %204.0;
    %225 = %209.0;
    %226 = %212.0;
    %227 = %215.3;
    %228 = subtract(%222, %223) /* ty=Tensor[(600, 4), uint16] */;
    (%224, %225, %var_4230, %226, meta[relay.Constant][15] /* ty=Tensor[(1120), float64] */, %var_4242, %227, %var_4248, %228)
  };
  %229(%var_4267, %var_4268, %var_4269, %var_4270) /* ty=(Tensor[(72), float64], Tensor[(12, 16, 3), uint64], Tensor[(576), uint64], Tensor[(6, 2, 6), float32], Tensor[(1120), float64], Tensor[(80, 2), uint32], Tensor[(378), float32], Tensor[(675), int64], Tensor[(600, 4), uint16]) */
}

def @func_5823(%var_5821: Tensor[(9, 15, 8), float32]) -> (Tensor[(9, 15, 8), float32],) {
  @func_5820(%var_5821) /* ty=(Tensor[(9, 15, 8), float32],) */
}

def @func_3161(%var_3158: Tensor[(336), float32], %var_3159: Tensor[(1152), int64], %var_3160: Tensor[(378), float32]) -> (Tensor[(9, 4, 13), float64], Tensor[(12, 14, 2), float32], Tensor[(336), float32], Tensor[(1152), int64], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(12, 5, 14), float64], Tensor[(2, 2, 5), uint16], Tensor[(20), uint16], Tensor[(84, 20), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(7, 9, 6), float64]) {
  %265 = fn (%var_3104: Tensor[(336), float32], %var_3105: Tensor[(1152), int64], %var_3135: Tensor[(378), float32]) -> (Tensor[(9, 4, 13), float64], Tensor[(12, 14, 2), float32], Tensor[(336), float32], Tensor[(1152), int64], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(12, 5, 14), float64], Tensor[(2, 2, 5), uint16], Tensor[(20), uint16], Tensor[(84, 20), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(7, 9, 6), float64]) {
    %230 = @func_2949() /* ty=(Tensor[(9, 4, 13), float64],) */;
    %231 = cast(%var_3104, dtype="float32") /* ty=Tensor[(336), float32] */;
    %232 = cast(%var_3104, dtype="float32") /* ty=Tensor[(336), float32] */;
    %233 = cast(%var_3104, dtype="float32") /* ty=Tensor[(336), float32] */;
    %234 = cast(%var_3105, dtype="int64") /* ty=Tensor[(1152), int64] */;
    %235 = reshape(%231, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
    %236 = reshape(%232, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
    %237 = reshape(%233, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
    %238 = reshape(%234, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
    %239 = @func_3033(%235, %236, %237, %238) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(12, 14, 2), bool]) */;
    %240 = cast(meta[relay.Constant][16] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
    %241 = reshape(%240, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
    %242 = @func_91(%241) /* ty=Tensor[(12, 5, 14), float64] */;
    %243 = cast(%242, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
    %244 = reshape(%243, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
    %245 = cast(meta[relay.Constant][17] /* ty=Tensor[(20), uint16] */, dtype="uint16") /* ty=Tensor[(20), uint16] */;
    %246 = cast(meta[relay.Constant][17] /* ty=Tensor[(20), uint16] */, dtype="uint16") /* ty=Tensor[(20), uint16] */;
    %247 = reshape(%245, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint16] */;
    %248 = reshape(%246, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint16] */;
    %249 = cast(meta[relay.Constant][18] /* ty=Tensor[(84, 20), uint64] */, dtype="uint64") /* ty=Tensor[(84, 20), uint64] */;
    %250 = cast(meta[relay.Constant][18] /* ty=Tensor[(84, 20), uint64] */, dtype="uint64") /* ty=Tensor[(84, 20), uint64] */;
    %251 = cast(meta[relay.Constant][19] /* ty=Tensor[(675), int64] */, dtype="int64") /* ty=Tensor[(675), int64] */;
    %252 = cast(%var_3135, dtype="float32") /* ty=Tensor[(378), float32] */;
    %253 = reshape(%249, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
    %254 = reshape(%250, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
    %255 = reshape(%251, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
    %256 = reshape(%252, newshape=[378]) /* ty=Tensor[(378), float32] */;
    %257 = @func_1108(%253, %254, %255, %256) /* ty=(Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) */;
    %258 = %257.4;
    %259 = cast(%258, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
    %260 = %230.0;
    %261 = %239.0;
    %262 = @func_91(%244) /* ty=Tensor[(12, 5, 14), float64] */;
    %263 = @func_1800(%247, %248) /* ty=Tensor[(2, 2, 5), uint16] */;
    %264 = erf(%259) /* ty=Tensor[(7, 9, 6), float64] */;
    (%260, %261, %var_3104, %var_3105, %242, meta[relay.Constant][16] /* ty=Tensor[(840), float64] */, %262, %263, meta[relay.Constant][17] /* ty=Tensor[(20), uint16] */, meta[relay.Constant][18] /* ty=Tensor[(84, 20), uint64] */, meta[relay.Constant][19] /* ty=Tensor[(675), int64] */, %var_3135, %264)
  };
  %265(%var_3158, %var_3159, %var_3160) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(12, 14, 2), float32], Tensor[(336), float32], Tensor[(1152), int64], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(12, 5, 14), float64], Tensor[(2, 2, 5), uint16], Tensor[(20), uint16], Tensor[(84, 20), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(7, 9, 6), float64]) */
}

def @func_2657() -> (Tensor[(72), float64],) {
  %266 = @func_2505() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */;
  %267 = %266.2;
  (%267,)
}

def @func_4772(%var_4769: Tensor[(9, 4, 13), float32], %var_4770: uint32, %var_4771: Tensor[(160), uint32]) -> (Tensor[(9, 4, 13), uint8], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32], Tensor[(9, 4, 13), float64], Tensor[(378), float32]) {
  @func_4767(%var_4769, %var_4770, %var_4771) /* ty=(Tensor[(9, 4, 13), uint8], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32], Tensor[(9, 4, 13), float64], Tensor[(378), float32]) */
}

def @func_855(%var_854: Tensor[(14, 10, 8), float64]) -> (Tensor[(14, 10, 8), float64],) {
  %270 = fn (%var_849: Tensor[(14, 10, 8), float64]) -> (Tensor[(14, 10, 8), float64],) {
    %268 = cast(%var_849, dtype="float64") /* ty=Tensor[(14, 10, 8), float64] */;
    %269 = cosh(%268) /* ty=Tensor[(14, 10, 8), float64] */;
    (%269,)
  };
  %270(%var_854) /* ty=(Tensor[(14, 10, 8), float64],) */
}

def @func_1108(%var_1039: Tensor[(15, 14, 8), uint64], %var_1040: Tensor[(15, 14, 8), uint64], %var_1073: Tensor[(9, 5, 15), int64], %var_1083: Tensor[(378), float32]) -> (Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) {
  %271 = cast(%var_1040, dtype="bool") /* ty=Tensor[(15, 14, 8), bool] */;
  %272 = shape_of(%var_1039, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%var_1039, dtype="bool") /* ty=Tensor[(15, 14, 8), bool] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %275 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %276 = cast(meta[relay.Constant][20] /* ty=Tensor[(675, 1), int64] */, dtype="int64") /* ty=Tensor[(675, 1), int64] */;
  %277 = reshape(%275, newshape=[]) /* ty=int64 */;
  %278 = reshape(%276, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %279 = @func_363(%277, %278) /* ty=(Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) */;
  %280 = %279.0;
  %281 = cast(%var_1073, dtype="uint8") /* ty=Tensor[(9, 5, 15), uint8] */;
  %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(%280, dtype="uint8") /* ty=Tensor[(9, 5, 15), uint8] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %285 = cast(%var_1083, dtype="float32") /* ty=Tensor[(378), float32] */;
  %286 = reshape(%285, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %287 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %288 = cast(%var_1073, dtype="int64") /* ty=Tensor[(9, 5, 15), int64] */;
  %289 = reshape(%287, newshape=[]) /* ty=int64 */;
  %290 = reshape(%288, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %291 = @func_363(%289, %290) /* ty=(Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) */;
  %292 = @func_736(%286) /* ty=Tensor[(7, 9, 6), bool] */;
  %293 = cast(%292, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  %294 = reshape(%293, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %295 = cast(meta[relay.Constant][21] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %296 = reshape(%295, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
  %297 = @func_989(%296) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
  %298 = cast(meta[relay.Constant][22] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %299 = reshape(%298, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %300 = @func_426(%299) /* ty=(Tensor[(16, 15, 10), bool],) */;
  %301 = %297.0;
  %302 = cast(%301, dtype="float64") /* ty=Tensor[(6, 2, 6), float64] */;
  %303 = reshape(%302, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
  %304 = @func_989(%303) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
  %305 = equal(%273, %274) /* ty=Tensor[(15, 14, 8), bool] */;
  %306 = left_shift(%283, %284) /* ty=Tensor[(9, 5, 15), uint8] */;
  %307 = %291.1;
  %308 = @func_736(%294) /* ty=Tensor[(7, 9, 6), bool] */;
  %309 = %300.0;
  %310 = %304.0;
  (%305, 4 /* ty=int64 */, meta[relay.Constant][20] /* ty=Tensor[(675, 1), int64] */, %306, %292, %var_1083, %307, %308, %301, meta[relay.Constant][21] /* ty=Tensor[(72), float64] */, %309, meta[relay.Constant][22] /* ty=Tensor[(2400), float64] */, %310)
}

def @func_6395() -> (Tensor[(72), float64], Tensor[(11, 4, 8), float64], Tensor[(88), uint64], Tensor[(352), uint64]) {
  %319 = fn () -> (Tensor[(72), float64], Tensor[(11, 4, 8), float64], Tensor[(88), uint64], Tensor[(352), uint64]) {
    %311 = @func_5926() /* ty=(Tensor[(72), float64],) */;
    %312 = cast(meta[relay.Constant][23] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
    %313 = cast(meta[relay.Constant][24] /* ty=Tensor[(352), uint64] */, dtype="uint64") /* ty=Tensor[(352), uint64] */;
    %314 = reshape(%312, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), uint64] */;
    %315 = reshape(%313, newshape=[11, 4, 8]) /* ty=Tensor[(11, 4, 8), uint64] */;
    %316 = @func_3400(%314, %315) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(360, 2), float64], Tensor[(11, 4, 8), float64]) */;
    %317 = %311.0;
    %318 = %316.2;
    (%317, %318, meta[relay.Constant][23] /* ty=Tensor[(88), uint64] */, meta[relay.Constant][24] /* ty=Tensor[(352), uint64] */)
  };
  %319() /* ty=(Tensor[(72), float64], Tensor[(11, 4, 8), float64], Tensor[(88), uint64], Tensor[(352), uint64]) */
}

def @func_2197(%var_2194: Tensor[(12, 13, 12), float64], %var_2195: Tensor[(12, 13, 12), float64], %var_2196: Tensor[(720), float64]) -> (Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) {
  %329 = fn (%var_2184: Tensor[(12, 13, 12), float64], %var_2185: Tensor[(12, 13, 12), float64], %var_2191: Tensor[(720), float64]) -> (Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) {
    %320 = cast(%var_2185, dtype="bool") /* ty=Tensor[(12, 13, 12), bool] */;
    %321 = shape_of(%var_2184, dtype="int32") /* ty=Tensor[(3), int32] */;
    %322 = cast(%var_2184, dtype="bool") /* ty=Tensor[(12, 13, 12), bool] */;
    %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %324 = cast(%var_2191, dtype="float64") /* ty=Tensor[(720), float64] */;
    %325 = reshape(%324, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
    %326 = @func_1977(%325) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) */;
    %327 = greater_equal(%322, %323) /* ty=Tensor[(12, 13, 12), bool] */;
    %328 = %326.1;
    (%327, %328, %var_2191)
  };
  %329(%var_2194, %var_2195, %var_2196) /* ty=(Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) */
}

def @func_2248(%var_2245: Tensor[(5, 6, 10), float64], %var_2246: int64, %var_2247: Tensor[(675), int64]) -> (Tensor[(5, 6, 10), float64], Tensor[(9, 5, 15), float32], int64, Tensor[(675), int64], Tensor[(8, 3, 3), bool], Tensor[(72), int16]) {
  @func_2243(%var_2245, %var_2246, %var_2247) /* ty=(Tensor[(5, 6, 10), float64], Tensor[(9, 5, 15), float32], int64, Tensor[(675), int64], Tensor[(8, 3, 3), bool], Tensor[(72), int16]) */
}

def @func_4153(%var_4151: uint32, %var_4152: Tensor[(2, 8, 10), uint32]) -> (Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) {
  %337 = fn (%var_4135: uint32, %var_4136: Tensor[(2, 8, 10), uint32]) -> (Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) {
    %330 = cast(%var_4135, dtype="uint32") /* ty=uint32 */;
    %331 = cast(%var_4136, dtype="uint32") /* ty=Tensor[(2, 8, 10), uint32] */;
    %332 = cast(meta[relay.Constant][25] /* ty=Tensor[(600, 4), float64] */, dtype="float64") /* ty=Tensor[(600, 4), float64] */;
    %333 = reshape(%332, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
    %334 = @func_426(%333) /* ty=(Tensor[(16, 15, 10), bool],) */;
    %335 = subtract(%330, %331) /* ty=Tensor[(2, 8, 10), uint32] */;
    %336 = %334.0;
    (%335, %336, meta[relay.Constant][25] /* ty=Tensor[(600, 4), float64] */)
  };
  %337(%var_4151, %var_4152) /* ty=(Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) */
}

def @func_3350(%var_3254: Tensor[(14, 4, 15), int64], %var_3297: Tensor[(2025), float32]) -> (Tensor[(2400), uint32], Tensor[(16, 15, 10), bool], Tensor[(2025), float32], Tensor[(14, 4, 15), bool], Tensor[(72), float64], Tensor[(14, 4, 15), float64]) {
  %338 = cast(meta[relay.Constant][26] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %339 = reshape(%338, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
  %340 = @func_426(%339) /* ty=(Tensor[(16, 15, 10), bool],) */;
  %341 = %340.0;
  %342 = cast(%341, dtype="uint32") /* ty=Tensor[(16, 15, 10), uint32] */;
  %343 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(2400), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %344 = cast(meta[relay.Constant][26] /* ty=Tensor[(2400), float64] */, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %346 = cast(%var_3297, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %347 = bitwise_xor(%344, %345) /* ty=Tensor[(2400), uint32] */;
  %348 = cast(%347, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %349 = reshape(%346, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
  %350 = reshape(%348, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %351 = @func_1501(%349, %350) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) */;
  %352 = cast(%var_3254, dtype="float64") /* ty=Tensor[(14, 4, 15), float64] */;
  %353 = cos(%352) /* ty=Tensor[(14, 4, 15), float64] */;
  %354 = cast(%353, dtype="bool") /* ty=Tensor[(14, 4, 15), bool] */;
  %355 = shape_of(%var_3254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%var_3254, dtype="bool") /* ty=Tensor[(14, 4, 15), bool] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %358 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 4, 15), int64] */, dtype="int64") /* ty=Tensor[(14, 4, 15), int64] */;
  %359 = shape_of(%var_3254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%var_3254, dtype="int64") /* ty=Tensor[(14, 4, 15), int64] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %362 = right_shift(%360, %361) /* ty=Tensor[(14, 4, 15), int64] */;
  %363 = cast(%362, dtype="uint32") /* ty=Tensor[(14, 4, 15), uint32] */;
  %364 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%353, dtype="uint32") /* ty=Tensor[(14, 4, 15), uint32] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %367 = add(%365, %366) /* ty=Tensor[(14, 4, 15), uint32] */;
  %368 = cast(%367, dtype="float64") /* ty=Tensor[(14, 4, 15), float64] */;
  %369 = log(%368) /* ty=Tensor[(14, 4, 15), float64] */;
  %370 = cast(%var_3254, dtype="bool") /* ty=Tensor[(14, 4, 15), bool] */;
  %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%369, dtype="bool") /* ty=Tensor[(14, 4, 15), bool] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %374 = greater(%372, %373) /* ty=Tensor[(14, 4, 15), bool] */;
  %375 = cast(%369, dtype="float64") /* ty=Tensor[(14, 4, 15), float64] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%374, dtype="float64") /* ty=Tensor[(14, 4, 15), float64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %379 = %351.1;
  %380 = greater_equal(%356, %357) /* ty=Tensor[(14, 4, 15), bool] */;
  %381 = @func_2729() /* ty=Tensor[(72), float64] */;
  %382 = floor_divide(%377, %378) /* ty=Tensor[(14, 4, 15), float64] */;
  (%347, %379, %var_3297, %380, %381, %382)
}

def @func_3200() -> Tensor[(72), uint16] {
  %383 = @func_3077() /* ty=(Tensor[(72), float64],) */;
  %384 = %383.0;
  %385 = cast(meta[relay.Constant][28] /* ty=Tensor[(72), float64] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(1), int32] */;
  %387 = cast(%384, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?), uint16] */;
  minimum(%387, %388) /* ty=Tensor[(72), uint16] */
}

def @func_4657() -> (Tensor[(9, 4, 13), float64], Tensor[(72), float64], Tensor[(72), float64]) {
  %395 = fn () -> (Tensor[(9, 4, 13), float64], Tensor[(72), float64], Tensor[(72), float64]) {
    %389 = @func_2991() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(72), float64]) */;
    %390 = @func_4604() /* ty=(Tensor[(72), float64], Tensor[(72), float64]) */;
    %391 = @func_4133() /* ty=(Tensor[(72), float64],) */;
    %392 = %389.0;
    %393 = %390.0;
    %394 = %391.0;
    (%392, %393, %394)
  };
  %395() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(72), float64], Tensor[(72), float64]) */
}

def @func_5426(%var_5424: Tensor[(1872), float64], %var_5425: Tensor[(1, 720), float64]) -> (Tensor[(72), float64], Tensor[(720), float64], Tensor[(1, 720), float64], Tensor[(1872), uint8], Tensor[(72), int64], Tensor[(1872), float64]) {
  %416 = fn (%var_5380: Tensor[(1872), float64], %var_5381: Tensor[(1, 720), float64]) -> (Tensor[(72), float64], Tensor[(720), float64], Tensor[(1, 720), float64], Tensor[(1872), uint8], Tensor[(72), int64], Tensor[(1872), float64]) {
    %396 = cast(%var_5380, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %397 = cast(%var_5380, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %398 = cast(%var_5381, dtype="float64") /* ty=Tensor[(1, 720), float64] */;
    %399 = reshape(%396, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
    %400 = reshape(%397, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
    %401 = reshape(%398, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %402 = @func_2193(%399, %400, %401) /* ty=(Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) */;
    %403 = cast(meta[relay.Constant][29] /* ty=Tensor[(1872), float64] */, dtype="uint8") /* ty=Tensor[(1872), uint8] */;
    %404 = shape_of(%var_5380, dtype="int32") /* ty=Tensor[(1), int32] */;
    %405 = cast(%var_5380, dtype="uint8") /* ty=Tensor[(1872), uint8] */;
    %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %407 = @func_3760() /* ty=Tensor[(72), float64] */;
    %408 = cast(%407, dtype="float64") /* ty=Tensor[(72), float64] */;
    %409 = reshape(%408, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %410 = @func_2779(%409) /* ty=(Tensor[(72), int64],) */;
    %411 = cast(meta[relay.Constant][29] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %412 = %402.2;
    %413 = logical_xor(%405, %406) /* ty=Tensor[(1872), uint8] */;
    %414 = %410.0;
    %415 = log10(%411) /* ty=Tensor[(1872), float64] */;
    (%407, %412, %var_5381, %413, %414, %415)
  };
  %416(%var_5424, %var_5425) /* ty=(Tensor[(72), float64], Tensor[(720), float64], Tensor[(1, 720), float64], Tensor[(1872), uint8], Tensor[(72), int64], Tensor[(1872), float64]) */
}

def @func_4565() -> Tensor[(72), float64] {
  %418 = fn () -> Tensor[(72), float64] {
    %417 = @func_2657() /* ty=(Tensor[(72), float64],) */;
    %417.0
  };
  %418() /* ty=Tensor[(72), float64] */
}

def @func_3404(%var_3402: Tensor[(11, 1, 8), uint64], %var_3403: Tensor[(11, 4, 8), uint64]) -> (Tensor[(4, 15, 12), float64], Tensor[(360, 2), float64], Tensor[(11, 4, 8), float64]) {
  @func_3400(%var_3402, %var_3403) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(360, 2), float64], Tensor[(11, 4, 8), float64]) */
}

def @func_5027(%var_5025: Tensor[(15, 1, 10), float32], %var_5026: Tensor[(15, 13, 10), float32]) -> (Tensor[(72), float64], Tensor[(8, 3, 3), int16], Tensor[(18, 100), float32], Tensor[(300), float64], Tensor[(675), int64], Tensor[(6, 2, 6), int64], Tensor[(15, 13, 10), float32]) {
  %437 = fn (%var_4980: Tensor[(15, 1, 10), float32], %var_4981: Tensor[(15, 13, 10), float32]) -> (Tensor[(72), float64], Tensor[(8, 3, 3), int16], Tensor[(18, 100), float32], Tensor[(300), float64], Tensor[(675), int64], Tensor[(6, 2, 6), int64], Tensor[(15, 13, 10), float32]) {
    %419 = cast(meta[relay.Constant][30] /* ty=Tensor[(18, 100), float32] */, dtype="float32") /* ty=Tensor[(18, 100), float32] */;
    %420 = cast(meta[relay.Constant][30] /* ty=Tensor[(18, 100), float32] */, dtype="float32") /* ty=Tensor[(18, 100), float32] */;
    %421 = cast(meta[relay.Constant][31] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %422 = cast(meta[relay.Constant][32] /* ty=Tensor[(675), int64] */, dtype="int64") /* ty=Tensor[(675), int64] */;
    %423 = reshape(%419, newshape=[10, 12, 15]) /* ty=Tensor[(10, 12, 15), float32] */;
    %424 = reshape(%420, newshape=[10, 12, 15]) /* ty=Tensor[(10, 12, 15), float32] */;
    %425 = reshape(%421, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %426 = reshape(%422, newshape=[675]) /* ty=Tensor[(675), int64] */;
    %427 = @func_4001(%423, %424, %425, %426) /* ty=(Tensor[(10, 12, 15), bool], Tensor[(72), int16], Tensor[(300), float64], int64, Tensor[(675), int64], Tensor[(8, 3, 3), int16]) */;
    %428 = @func_4780() /* ty=(Tensor[(6, 2, 6), int64],) */;
    %429 = cast(%var_4980, dtype="float32") /* ty=Tensor[(15, 1, 10), float32] */;
    %430 = cast(%var_4981, dtype="float32") /* ty=Tensor[(15, 13, 10), float32] */;
    %431 = multiply(%429, %430) /* ty=Tensor[(15, 13, 10), float32] */;
    %432 = cast(%431, dtype="float32") /* ty=Tensor[(15, 13, 10), float32] */;
    %433 = @func_3760() /* ty=Tensor[(72), float64] */;
    %434 = %427.5;
    %435 = %428.0;
    %436 = sqrt(%432) /* ty=Tensor[(15, 13, 10), float32] */;
    (%433, %434, meta[relay.Constant][30] /* ty=Tensor[(18, 100), float32] */, meta[relay.Constant][31] /* ty=Tensor[(300), float64] */, meta[relay.Constant][32] /* ty=Tensor[(675), int64] */, %435, %436)
  };
  %437(%var_5025, %var_5026) /* ty=(Tensor[(72), float64], Tensor[(8, 3, 3), int16], Tensor[(18, 100), float32], Tensor[(300), float64], Tensor[(675), int64], Tensor[(6, 2, 6), int64], Tensor[(15, 13, 10), float32]) */
}

def @func_366(%var_364: int64, %var_365: Tensor[(9, 5, 15), int64]) -> (Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) {
  %443 = fn (%var_339: int64, %var_340: Tensor[(9, 5, 15), int64]) -> (Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) {
    %438 = cast(%var_339, dtype="int64") /* ty=int64 */;
    %439 = cast(%var_340, dtype="int64") /* ty=Tensor[(9, 5, 15), int64] */;
    %440 = cast(%var_340, dtype="float32") /* ty=Tensor[(9, 5, 15), float32] */;
    %441 = add(%438, %439) /* ty=Tensor[(9, 5, 15), int64] */;
    %442 = acosh(%440) /* ty=Tensor[(9, 5, 15), float32] */;
    (%441, %442)
  };
  %443(%var_364, %var_365) /* ty=(Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) */
}

def @func_4976() -> (Tensor[(4, 13), float32],) {
  %446 = fn () -> (Tensor[(4, 13), float32],) {
    %444 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 13), float32] */, dtype="float32") /* ty=Tensor[(4, 13), float32] */;
    %445 = exp(%444) /* ty=Tensor[(4, 13), float32] */;
    (%445,)
  };
  %446() /* ty=(Tensor[(4, 13), float32],) */
}

def @func_5691(%var_5690: Tensor[(12, 5, 6), float32]) -> Tensor[(12, 5, 6), float32] {
  %448 = fn (%var_5685: Tensor[(12, 5, 6), float32]) -> Tensor[(12, 5, 6), float32] {
    %447 = cast(%var_5685, dtype="float32") /* ty=Tensor[(12, 5, 6), float32] */;
    sinh(%447) /* ty=Tensor[(12, 5, 6), float32] */
  };
  %448(%var_5690) /* ty=Tensor[(12, 5, 6), float32] */
}

def @func_2950() -> (Tensor[(9, 4, 13), float64],) {
  %450 = fn () -> (Tensor[(9, 4, 13), float64],) {
    %449 = @func_2745() /* ty=Tensor[(9, 4, 13), float64] */;
    (%449,)
  };
  %450() /* ty=(Tensor[(9, 4, 13), float64],) */
}

def @func_91(%var_83: Tensor[(12, 5, 14), float64]) -> Tensor[(12, 5, 14), float64] {
  %451 = cast(%var_83, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  atanh(%451) /* ty=Tensor[(12, 5, 14), float64] */
}

def @func_6282() -> Tensor[(3, 14, 5), float32] {
  %452 = @func_5487() /* ty=Tensor[(3, 14, 5), float32] */;
  %453 = cast(%452, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
  cos(%453) /* ty=Tensor[(3, 14, 5), float32] */
}

def @func_428(%var_427: Tensor[(16, 15, 10), float64]) -> (Tensor[(16, 15, 10), bool],) {
  %459 = fn (%var_419: Tensor[(16, 15, 10), float64]) -> (Tensor[(16, 15, 10), bool],) {
    %454 = cast(%var_419, dtype="bool") /* ty=Tensor[(16, 15, 10), bool] */;
    %455 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(16, 15, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %456 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 15, 10), float64] */, dtype="bool") /* ty=Tensor[(16, 15, 10), bool] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %458 = less_equal(%456, %457) /* ty=Tensor[(16, 15, 10), bool] */;
    (%458,)
  };
  %459(%var_427) /* ty=(Tensor[(16, 15, 10), bool],) */
}

def @func_6032() -> Tensor[(9, 4, 13), float64] {
  @func_6030() /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_4006(%var_4002: Tensor[(10, 12, 15), float32], %var_4003: Tensor[(10, 12, 15), float32], %var_4004: Tensor[(300), float64], %var_4005: Tensor[(675), int64]) -> (Tensor[(10, 12, 15), bool], Tensor[(72), int16], Tensor[(300), float64], int64, Tensor[(675), int64], Tensor[(8, 3, 3), int16]) {
  %482 = fn (%var_3959: Tensor[(10, 12, 15), float32], %var_3960: Tensor[(10, 12, 15), float32], %var_3978: Tensor[(300), float64], %var_3980: Tensor[(675), int64]) -> (Tensor[(10, 12, 15), bool], Tensor[(72), int16], Tensor[(300), float64], int64, Tensor[(675), int64], Tensor[(8, 3, 3), int16]) {
    %460 = cast(%var_3960, dtype="bool") /* ty=Tensor[(10, 12, 15), bool] */;
    %461 = shape_of(%var_3959, dtype="int32") /* ty=Tensor[(3), int32] */;
    %462 = cast(%var_3959, dtype="bool") /* ty=Tensor[(10, 12, 15), bool] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %464 = cast(meta[relay.Constant][35] /* ty=Tensor[(72), int16] */, dtype="int16") /* ty=Tensor[(72), int16] */;
    %465 = reshape(%464, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), int16] */;
    %466 = @func_1593(%465) /* ty=(Tensor[(8, 3, 3), bool], Tensor[(6, 2, 6), int64], Tensor[(8, 3, 3), float64]) */;
    %467 = %466.0;
    %468 = cast(%467, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
    %469 = log10(%468) /* ty=Tensor[(8, 3, 3), float64] */;
    %470 = cast(%var_3978, dtype="float64") /* ty=Tensor[(300), float64] */;
    %471 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %472 = cast(%var_3980, dtype="int64") /* ty=Tensor[(675), int64] */;
    %473 = reshape(%470, newshape=[5, 6, 10]) /* ty=Tensor[(5, 6, 10), float64] */;
    %474 = reshape(%471, newshape=[]) /* ty=int64 */;
    %475 = reshape(%472, newshape=[675]) /* ty=Tensor[(675), int64] */;
    %476 = @func_2243(%473, %474, %475) /* ty=(Tensor[(5, 6, 10), float64], Tensor[(9, 5, 15), float32], int64, Tensor[(675), int64], Tensor[(8, 3, 3), bool], Tensor[(72), int16]) */;
    %477 = %476.2;
    %478 = cast(%469, dtype="int16") /* ty=Tensor[(8, 3, 3), int16] */;
    %479 = cast(%477, dtype="int16") /* ty=int16 */;
    %480 = less_equal(%462, %463) /* ty=Tensor[(10, 12, 15), bool] */;
    %481 = minimum(%478, %479) /* ty=Tensor[(8, 3, 3), int16] */;
    (%480, meta[relay.Constant][35] /* ty=Tensor[(72), int16] */, %var_3978, -5 /* ty=int64 */, %var_3980, %481)
  };
  %482(%var_4002, %var_4003, %var_4004, %var_4005) /* ty=(Tensor[(10, 12, 15), bool], Tensor[(72), int16], Tensor[(300), float64], int64, Tensor[(675), int64], Tensor[(8, 3, 3), int16]) */
}

def @func_1245(%var_1243: Tensor[(16, 9, 8), int64], %var_1244: Tensor[(16, 9, 8), int64]) -> (Tensor[(16, 9, 8), int64],) {
  %488 = fn (%var_1234: Tensor[(16, 9, 8), int64], %var_1235: Tensor[(16, 9, 8), int64]) -> (Tensor[(16, 9, 8), int64],) {
    %483 = cast(%var_1235, dtype="int64") /* ty=Tensor[(16, 9, 8), int64] */;
    %484 = shape_of(%var_1234, dtype="int32") /* ty=Tensor[(3), int32] */;
    %485 = cast(%var_1234, dtype="int64") /* ty=Tensor[(16, 9, 8), int64] */;
    %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %487 = bitwise_xor(%485, %486) /* ty=Tensor[(16, 9, 8), int64] */;
    (%487,)
  };
  %488(%var_1243, %var_1244) /* ty=(Tensor[(16, 9, 8), int64],) */
}

def @func_5147(%var_5146: Tensor[(2, 13, 4), int64]) -> (Tensor[(2, 13, 4), int64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(4, 15, 12), float32], Tensor[(4, 180), float64]) {
  %502 = fn (%var_5129: Tensor[(2, 13, 4), int64]) -> (Tensor[(2, 13, 4), int64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(4, 15, 12), float32], Tensor[(4, 180), float64]) {
    %489 = cast(%var_5129, dtype="int64") /* ty=Tensor[(2, 13, 4), int64] */;
    %490 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(2, 13, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %491 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 13, 4), int64] */, dtype="int64") /* ty=Tensor[(2, 13, 4), int64] */;
    %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %493 = cast(meta[relay.Constant][37] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
    %494 = reshape(%493, newshape=[378]) /* ty=Tensor[(378), float32] */;
    %495 = @func_4183(%494) /* ty=(Tensor[(72), uint16], Tensor[(7, 9, 6), bool], Tensor[(378), float32]) */;
    %496 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
    %497 = reshape(%496, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
    %498 = @func_1977(%497) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) */;
    %499 = multiply(%491, %492) /* ty=Tensor[(2, 13, 4), int64] */;
    %500 = %495.1;
    %501 = %498.1;
    (%499, %500, meta[relay.Constant][37] /* ty=Tensor[(378), float32] */, %501, meta[relay.Constant][38] /* ty=Tensor[(4, 180), float64] */)
  };
  %502(%var_5146) /* ty=(Tensor[(2, 13, 4), int64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(4, 15, 12), float32], Tensor[(4, 180), float64]) */
}

def @func_4493() -> (Tensor[(8, 14, 1), float32], Tensor[(9, 4, 13), float64], Tensor[(9, 4, 13), float64]) {
  %503 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 1), float32] */;
  %504 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %505 = @func_2991() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(72), float64]) */;
  %506 = cosh(%503) /* ty=Tensor[(8, 14, 1), float32] */;
  %507 = %504.0;
  %508 = %505.0;
  (%506, %507, %508)
}

def @func_3888(%var_3887: Tensor[(675), int64]) -> (Tensor[(72), float64], Tensor[(9, 5, 15), float32], Tensor[(1680), uint64], Tensor[(378), float32], Tensor[(9, 4, 13), float64], Tensor[(675), int32], Tensor[(9, 4, 13), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) {
  %536 = fn (%var_3840: Tensor[(675), int64]) -> (Tensor[(72), float64], Tensor[(9, 5, 15), float32], Tensor[(1680), uint64], Tensor[(378), float32], Tensor[(9, 4, 13), float64], Tensor[(675), int32], Tensor[(9, 4, 13), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) {
    %509 = @func_2657() /* ty=(Tensor[(72), float64],) */;
    %510 = cast(meta[relay.Constant][40] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
    %511 = cast(meta[relay.Constant][40] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
    %512 = cast(%var_3840, dtype="int64") /* ty=Tensor[(675), int64] */;
    %513 = cast(meta[relay.Constant][41] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
    %514 = reshape(%510, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
    %515 = reshape(%511, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
    %516 = reshape(%512, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
    %517 = reshape(%513, newshape=[378]) /* ty=Tensor[(378), float32] */;
    %518 = @func_1108(%514, %515, %516, %517) /* ty=(Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) */;
    %519 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
    %520 = cast(%var_3840, dtype="float64") /* ty=Tensor[(675), float64] */;
    %521 = log2(%520) /* ty=Tensor[(675), float64] */;
    %522 = cast(%var_3840, dtype="int32") /* ty=Tensor[(675), int32] */;
    %523 = shape_of(%521, dtype="int32") /* ty=Tensor[(1), int32] */;
    %524 = cast(%521, dtype="int32") /* ty=Tensor[(675), int32] */;
    %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?), int32] */;
    %526 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
    %527 = cast(meta[relay.Constant][42] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
    %528 = reshape(%527, newshape=[16, 15, 10]) /* ty=Tensor[(16, 15, 10), float64] */;
    %529 = @func_426(%528) /* ty=(Tensor[(16, 15, 10), bool],) */;
    %530 = %509.0;
    %531 = %518.6;
    %532 = %519.0;
    %533 = multiply(%524, %525) /* ty=Tensor[(675), int32] */;
    %534 = %526.0;
    %535 = %529.0;
    (%530, %531, meta[relay.Constant][40] /* ty=Tensor[(1680), uint64] */, meta[relay.Constant][41] /* ty=Tensor[(378), float32] */, %532, %533, %534, %535, meta[relay.Constant][42] /* ty=Tensor[(2400), float64] */)
  };
  %536(%var_3887) /* ty=(Tensor[(72), float64], Tensor[(9, 5, 15), float32], Tensor[(1680), uint64], Tensor[(378), float32], Tensor[(9, 4, 13), float64], Tensor[(675), int32], Tensor[(9, 4, 13), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64]) */
}

def @func_4134() -> (Tensor[(72), float64],) {
  %539 = fn () -> (Tensor[(72), float64],) {
    %537 = @func_2657() /* ty=(Tensor[(72), float64],) */;
    %538 = %537.0;
    (%538,)
  };
  %539() /* ty=(Tensor[(72), float64],) */
}

def @func_6302() -> (Tensor[(9, 4, 13), float64], Tensor[(2, 10, 15), int64], Tensor[(300), int64]) {
  %547 = fn () -> (Tensor[(9, 4, 13), float64], Tensor[(2, 10, 15), int64], Tensor[(300), int64]) {
    %540 = cast(meta[relay.Constant][43] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
    %541 = cast(meta[relay.Constant][43] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
    %542 = reshape(%540, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), int64] */;
    %543 = reshape(%541, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), int64] */;
    %544 = @func_5783(%542, %543) /* ty=(Tensor[(2, 10, 15), int64],) */;
    %545 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
    %546 = %544.0;
    (%545, %546, meta[relay.Constant][43] /* ty=Tensor[(300), int64] */)
  };
  %547() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(2, 10, 15), int64], Tensor[(300), int64]) */
}

def @func_4495() -> (Tensor[(8, 14, 1), float32], Tensor[(9, 4, 13), float64], Tensor[(9, 4, 13), float64]) {
  @func_4493() /* ty=(Tensor[(8, 14, 1), float32], Tensor[(9, 4, 13), float64], Tensor[(9, 4, 13), float64]) */
}

def @func_4781() -> (Tensor[(6, 2, 6), int64],) {
  %550 = fn () -> (Tensor[(6, 2, 6), int64],) {
    %548 = @func_2505() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */;
    %549 = %548.1;
    (%549,)
  };
  %550() /* ty=(Tensor[(6, 2, 6), int64],) */
}

def @func_5307() -> (Tensor[(9, 4, 13), float64], Tensor[(11, 4, 8), float64], Tensor[(88), uint64], Tensor[(352), uint64]) {
  %559 = fn () -> (Tensor[(9, 4, 13), float64], Tensor[(11, 4, 8), float64], Tensor[(88), uint64], Tensor[(352), uint64]) {
    %551 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
    %552 = cast(meta[relay.Constant][44] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
    %553 = cast(meta[relay.Constant][45] /* ty=Tensor[(352), uint64] */, dtype="uint64") /* ty=Tensor[(352), uint64] */;
    %554 = reshape(%552, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), uint64] */;
    %555 = reshape(%553, newshape=[11, 4, 8]) /* ty=Tensor[(11, 4, 8), uint64] */;
    %556 = @func_3400(%554, %555) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(360, 2), float64], Tensor[(11, 4, 8), float64]) */;
    %557 = %551.0;
    %558 = %556.2;
    (%557, %558, meta[relay.Constant][44] /* ty=Tensor[(88), uint64] */, meta[relay.Constant][45] /* ty=Tensor[(352), uint64] */)
  };
  %559() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(11, 4, 8), float64], Tensor[(88), uint64], Tensor[(352), uint64]) */
}

def @func_5461() -> Tensor[(72), uint16] {
  %560 = fn () -> Tensor[(72), uint16] {
    @func_3200() /* ty=Tensor[(72), uint16] */
  };
  %560() /* ty=Tensor[(72), uint16] */
}

def @func_989(%var_943: Tensor[(6, 2, 6), float64]) -> (Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) {
  %561 = cast(%var_943, dtype="float64") /* ty=Tensor[(6, 2, 6), float64] */;
  %562 = log(%561) /* ty=Tensor[(6, 2, 6), float64] */;
  %563 = cast(%562, dtype="bool") /* ty=Tensor[(6, 2, 6), bool] */;
  %564 = shape_of(%var_943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%var_943, dtype="bool") /* ty=Tensor[(6, 2, 6), bool] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %567 = greater(%565, %566) /* ty=Tensor[(6, 2, 6), bool] */;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(6, 2, 6), float64] */;
  %569 = cast(%562, dtype="int64") /* ty=Tensor[(6, 2, 6), int64] */;
  %570 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%567, dtype="int64") /* ty=Tensor[(6, 2, 6), int64] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %573 = acos(%568) /* ty=Tensor[(6, 2, 6), float64] */;
  %574 = bitwise_and(%571, %572) /* ty=Tensor[(6, 2, 6), int64] */;
  (%573, %574)
}

def @func_3680(%var_3679: Tensor[(9, 4, 13), float64]) -> (Tensor[(9, 4, 13), uint64],) {
  %581 = fn (%var_3650: Tensor[(9, 4, 13), float64]) -> (Tensor[(9, 4, 13), uint64],) {
    %575 = @func_2745() /* ty=Tensor[(9, 4, 13), float64] */;
    %576 = cast(%var_3650, dtype="uint64") /* ty=Tensor[(9, 4, 13), uint64] */;
    %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
    %578 = cast(%575, dtype="uint64") /* ty=Tensor[(9, 4, 13), uint64] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %580 = add(%578, %579) /* ty=Tensor[(9, 4, 13), uint64] */;
    (%580,)
  };
  %581(%var_3679) /* ty=(Tensor[(9, 4, 13), uint64],) */
}

def @func_2747() -> Tensor[(9, 4, 13), float64] {
  @func_2745() /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_3798(%var_3796: uint64, %var_3797: Tensor[(12, 16, 3), uint64]) -> (Tensor[(12, 16, 3), uint64],) {
  %585 = fn (%var_3790: uint64, %var_3791: Tensor[(12, 16, 3), uint64]) -> (Tensor[(12, 16, 3), uint64],) {
    %582 = cast(%var_3790, dtype="uint64") /* ty=uint64 */;
    %583 = cast(%var_3791, dtype="uint64") /* ty=Tensor[(12, 16, 3), uint64] */;
    %584 = minimum(%582, %583) /* ty=Tensor[(12, 16, 3), uint64] */;
    (%584,)
  };
  %585(%var_3796, %var_3797) /* ty=(Tensor[(12, 16, 3), uint64],) */
}

def @func_6181() -> Tensor[(9, 4, 13), float64] {
  %587 = fn () -> Tensor[(9, 4, 13), float64] {
    %586 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
    %586.0
  };
  %587() /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_5111(%var_5105: Tensor[(8, 7, 9), float64], %var_5106: Tensor[(8, 7, 9), float64], %var_5107: Tensor[(8, 7, 9), float64], %var_5108: Tensor[(160), uint32], %var_5109: Tensor[(6, 2, 6), int64], %var_5110: Tensor[(8, 7, 9), float32]) -> (Tensor[(8, 7, 9), float64], Tensor[(9, 4, 13), float64], Tensor[(8, 7, 9), bool], uint32, uint32, Tensor[(160), uint32], Tensor[(72), float64], Tensor[(6, 2, 6), bool], Tensor[(8, 7, 9), uint16]) {
  %624 = fn (%var_5029: Tensor[(8, 7, 9), float64], %var_5030: Tensor[(8, 7, 9), float64], %var_5055: Tensor[(8, 7, 9), float64], %var_5068: Tensor[(160), uint32], %var_5081: Tensor[(6, 2, 6), int64], %var_5091: Tensor[(8, 7, 9), float32]) -> (Tensor[(8, 7, 9), float64], Tensor[(9, 4, 13), float64], Tensor[(8, 7, 9), bool], uint32, uint32, Tensor[(160), uint32], Tensor[(72), float64], Tensor[(6, 2, 6), bool], Tensor[(8, 7, 9), uint16]) {
    %588 = cast(%var_5030, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
    %589 = shape_of(%var_5029, dtype="int32") /* ty=Tensor[(3), int32] */;
    %590 = cast(%var_5029, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
    %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %592 = @func_4493() /* ty=(Tensor[(8, 14, 1), float32], Tensor[(9, 4, 13), float64], Tensor[(9, 4, 13), float64]) */;
    %593 = cast(%var_5055, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
    %594 = shape_of(%var_5029, dtype="int32") /* ty=Tensor[(3), int32] */;
    %595 = cast(%var_5029, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
    %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %597 = %592.1;
    %598 = cast(%597, dtype="float32") /* ty=Tensor[(9, 4, 13), float32] */;
    %599 = cast(meta[relay.Constant][46] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %600 = cast(%var_5068, dtype="uint32") /* ty=Tensor[(160), uint32] */;
    %601 = reshape(%598, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float32] */;
    %602 = reshape(%599, newshape=[]) /* ty=uint32 */;
    %603 = reshape(%600, newshape=[160]) /* ty=Tensor[(160), uint32] */;
    %604 = @func_4767(%601, %602, %603) /* ty=(Tensor[(9, 4, 13), uint8], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32], Tensor[(9, 4, 13), float64], Tensor[(378), float32]) */;
    %605 = cast(meta[relay.Constant][47] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %606 = reshape(%605, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
    %607 = @func_989(%606) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
    %608 = %607.1;
    %609 = cast(%var_5081, dtype="bool") /* ty=Tensor[(6, 2, 6), bool] */;
    %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
    %611 = cast(%608, dtype="bool") /* ty=Tensor[(6, 2, 6), bool] */;
    %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %613 = cast(%var_5029, dtype="float32") /* ty=Tensor[(8, 7, 9), float32] */;
    %614 = atanh(%613) /* ty=Tensor[(8, 7, 9), float32] */;
    %615 = cast(%var_5091, dtype="uint16") /* ty=Tensor[(8, 7, 9), uint16] */;
    %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
    %617 = cast(%614, dtype="uint16") /* ty=Tensor[(8, 7, 9), uint16] */;
    %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %619 = power(%590, %591) /* ty=Tensor[(8, 7, 9), float64] */;
    %620 = logical_and(%595, %596) /* ty=Tensor[(8, 7, 9), bool] */;
    %621 = %604.2;
    %622 = less_equal(%611, %612) /* ty=Tensor[(6, 2, 6), bool] */;
    %623 = bitwise_xor(%617, %618) /* ty=Tensor[(8, 7, 9), uint16] */;
    (%619, %597, %620, %621, meta[relay.Constant][46] /* ty=uint32 */, %var_5068, meta[relay.Constant][47] /* ty=Tensor[(72), float64] */, %622, %623)
  };
  %624(%var_5105, %var_5106, %var_5107, %var_5108, %var_5109, %var_5110) /* ty=(Tensor[(8, 7, 9), float64], Tensor[(9, 4, 13), float64], Tensor[(8, 7, 9), bool], uint32, uint32, Tensor[(160), uint32], Tensor[(72), float64], Tensor[(6, 2, 6), bool], Tensor[(8, 7, 9), uint16]) */
}

def @func_3038(%var_3034: Tensor[(12, 14, 2), float32], %var_3035: Tensor[(12, 14, 2), float32], %var_3036: Tensor[(12, 14, 2), float32], %var_3037: Tensor[(1152), int64]) -> (Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(12, 14, 2), bool]) {
  %646 = fn (%var_3007: Tensor[(12, 14, 2), float32], %var_3008: Tensor[(12, 14, 2), float32], %var_3012: Tensor[(12, 14, 2), float32], %var_3026: Tensor[(1152), int64]) -> (Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(12, 14, 2), bool]) {
    %625 = cast(%var_3008, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
    %626 = shape_of(%var_3007, dtype="int32") /* ty=Tensor[(3), int32] */;
    %627 = cast(%var_3007, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
    %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %629 = cast(%var_3012, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
    %630 = shape_of(%var_3008, dtype="int32") /* ty=Tensor[(3), int32] */;
    %631 = cast(%var_3008, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
    %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %633 = cast(%var_3026, dtype="int64") /* ty=Tensor[(1152), int64] */;
    %634 = cast(%var_3026, dtype="int64") /* ty=Tensor[(1152), int64] */;
    %635 = reshape(%633, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
    %636 = reshape(%634, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
    %637 = @func_1242(%635, %636) /* ty=(Tensor[(16, 9, 8), int64],) */;
    %638 = cast(%var_3008, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
    %639 = shape_of(%var_3007, dtype="int32") /* ty=Tensor[(3), int32] */;
    %640 = cast(%var_3007, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
    %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %642 = power(%627, %628) /* ty=Tensor[(12, 14, 2), float32] */;
    %643 = divide(%631, %632) /* ty=Tensor[(12, 14, 2), float64] */;
    %644 = %637.0;
    %645 = greater_equal(%640, %641) /* ty=Tensor[(12, 14, 2), bool] */;
    (%642, %643, %644, %var_3026, %645)
  };
  %646(%var_3034, %var_3035, %var_3036, %var_3037) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(12, 14, 2), bool]) */
}

def @func_3785() -> (Tensor[(9, 4, 13), float64],) {
  %650 = fn () -> (Tensor[(9, 4, 13), float64],) {
    %647 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
    %648 = cast(%647, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
    %649 = sqrt(%648) /* ty=Tensor[(9, 4, 13), float64] */;
    (%649,)
  };
  %650() /* ty=(Tensor[(9, 4, 13), float64],) */
}

def @func_5544(%var_5541: Tensor[(30), float64], %var_5542: Tensor[(1152), int64], %var_5543: Tensor[(378), float32]) -> (Tensor[(9, 4, 13), float64], Tensor[(9, 4, 13), float64], Tensor[(16, 10, 3), bool], Tensor[(30), float64], Tensor[(1152), int64], Tensor[(378), float32], Tensor[(480), float32]) {
  @func_5539(%var_5541, %var_5542, %var_5543) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(9, 4, 13), float64], Tensor[(16, 10, 3), bool], Tensor[(30), float64], Tensor[(1152), int64], Tensor[(378), float32], Tensor[(480), float32]) */
}

def @func_3622(%var_3615: int64, %var_3616: Tensor[(8, 4, 11), int64], %var_3617: Tensor[(1680), uint64], %var_3618: Tensor[(675), int64], %var_3619: Tensor[(378), float32], %var_3620: Tensor[(1152), int64], %var_3621: Tensor[(56, 20), float64]) -> (Tensor[(8, 4, 11), int64], Tensor[(675), int64], Tensor[(1920), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(1152), int64], Tensor[(9, 5, 15), float32], Tensor[(14, 10, 8), float64], Tensor[(56, 20), float64], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(12, 5, 14), float64], Tensor[(168, 2), float32]) {
  @func_3613(%var_3615, %var_3616, %var_3617, %var_3618, %var_3619, %var_3620, %var_3621) /* ty=(Tensor[(8, 4, 11), int64], Tensor[(675), int64], Tensor[(1920), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(1152), int64], Tensor[(9, 5, 15), float32], Tensor[(14, 10, 8), float64], Tensor[(56, 20), float64], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(12, 5, 14), float64], Tensor[(168, 2), float32]) */
}

def @func_5820(%var_5815: Tensor[(9, 15, 8), float32]) -> (Tensor[(9, 15, 8), float32],) {
  %651 = cast(%var_5815, dtype="float32") /* ty=Tensor[(9, 15, 8), float32] */;
  %652 = asinh(%651) /* ty=Tensor[(9, 15, 8), float32] */;
  (%652,)
}

def @func_2426() -> Tensor[(9, 4, 13), float64] {
  %654 = fn () -> Tensor[(9, 4, 13), float64] {
    %653 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
    acos(%653) /* ty=Tensor[(9, 4, 13), float64] */
  };
  %654() /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_4605() -> (Tensor[(72), float64], Tensor[(72), float64]) {
  %659 = fn () -> (Tensor[(72), float64], Tensor[(72), float64]) {
    %655 = @func_4133() /* ty=(Tensor[(72), float64],) */;
    %656 = @func_4322() /* ty=(Tensor[(72), float64],) */;
    %657 = %655.0;
    %658 = %656.0;
    (%657, %658)
  };
  %659() /* ty=(Tensor[(72), float64], Tensor[(72), float64]) */
}

def @func_3509(%var_3503: Tensor[(15, 8, 16), int64], %var_3504: Tensor[(15, 8, 16), int64], %var_3505: Tensor[(840, 2), uint64], %var_3506: Tensor[(675), int64], %var_3507: Tensor[(378), float32], %var_3508: Tensor[(1, 1152), int64]) -> (Tensor[(15, 8, 16), int64], Tensor[(6, 2, 6), float64], Tensor[(840, 2), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 168), float32], Tensor[(1, 1152), int64]) {
  %685 = fn (%var_3480: Tensor[(15, 8, 16), int64], %var_3481: Tensor[(15, 8, 16), int64], %var_3487: Tensor[(840, 2), uint64], %var_3488: Tensor[(675), int64], %var_3489: Tensor[(378), float32], %var_3500: Tensor[(1, 1152), int64]) -> (Tensor[(15, 8, 16), int64], Tensor[(6, 2, 6), float64], Tensor[(840, 2), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 168), float32], Tensor[(1, 1152), int64]) {
    %660 = cast(%var_3481, dtype="int64") /* ty=Tensor[(15, 8, 16), int64] */;
    %661 = shape_of(%var_3480, dtype="int32") /* ty=Tensor[(3), int32] */;
    %662 = cast(%var_3480, dtype="int64") /* ty=Tensor[(15, 8, 16), int64] */;
    %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %664 = cast(%var_3487, dtype="uint64") /* ty=Tensor[(840, 2), uint64] */;
    %665 = cast(%var_3487, dtype="uint64") /* ty=Tensor[(840, 2), uint64] */;
    %666 = cast(%var_3488, dtype="int64") /* ty=Tensor[(675), int64] */;
    %667 = cast(%var_3489, dtype="float32") /* ty=Tensor[(378), float32] */;
    %668 = reshape(%664, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
    %669 = reshape(%665, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
    %670 = reshape(%666, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
    %671 = reshape(%667, newshape=[378]) /* ty=Tensor[(378), float32] */;
    %672 = @func_1108(%668, %669, %670, %671) /* ty=(Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) */;
    %673 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
    %674 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
    %675 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
    %676 = cast(%var_3500, dtype="int64") /* ty=Tensor[(1, 1152), int64] */;
    %677 = reshape(%673, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
    %678 = reshape(%674, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
    %679 = reshape(%675, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float32] */;
    %680 = reshape(%676, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
    %681 = @func_3033(%677, %678, %679, %680) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(12, 14, 2), bool]) */;
    %682 = multiply(%662, %663) /* ty=Tensor[(15, 8, 16), int64] */;
    %683 = %672.8;
    %684 = %681.1;
    (%682, %683, %var_3487, %var_3488, %var_3489, %684, meta[relay.Constant][49] /* ty=Tensor[(2, 168), float32] */, %var_3500)
  };
  %685(%var_3503, %var_3504, %var_3505, %var_3506, %var_3507, %var_3508) /* ty=(Tensor[(15, 8, 16), int64], Tensor[(6, 2, 6), float64], Tensor[(840, 2), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 168), float32], Tensor[(1, 1152), int64]) */
}

def @func_6100(%var_6098: Tensor[(9, 4, 13), bool]) -> Tensor[(9, 4, 13), bool] {
  @func_6097(%var_6098) /* ty=Tensor[(9, 4, 13), bool] */
}

def @func_5959() -> Tensor[(72), float64] {
  %686 = @func_2657() /* ty=(Tensor[(72), float64],) */;
  %686.0
}

def @func_4375(%var_4372: Tensor[(9, 4, 13), float64], %var_4373: Tensor[(378), float32], %var_4374: Tensor[(160), uint32]) -> (Tensor[(9, 4, 13), bool], Tensor[(9, 4, 13), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32]) {
  %704 = fn (%var_4334: Tensor[(9, 4, 13), float64], %var_4364: Tensor[(378), float32], %var_4369: Tensor[(160), uint32]) -> (Tensor[(9, 4, 13), bool], Tensor[(9, 4, 13), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32]) {
    %687 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
    %688 = cast(%var_4334, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
    %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
    %690 = cast(%687, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
    %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %692 = cast(%687, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
    %693 = cast(%var_4364, dtype="float32") /* ty=Tensor[(378), float32] */;
    %694 = reshape(%693, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
    %695 = cast(meta[relay.Constant][50] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %696 = cast(%var_4369, dtype="uint32") /* ty=Tensor[(160), uint32] */;
    %697 = reshape(%695, newshape=[]) /* ty=uint32 */;
    %698 = reshape(%696, newshape=[2, 8, 10]) /* ty=Tensor[(2, 8, 10), uint32] */;
    %699 = @func_4150(%697, %698) /* ty=(Tensor[(2, 8, 10), uint32], Tensor[(16, 15, 10), bool], Tensor[(600, 4), float64]) */;
    %700 = logical_and(%690, %691) /* ty=Tensor[(9, 4, 13), bool] */;
    %701 = tan(%692) /* ty=Tensor[(9, 4, 13), float64] */;
    %702 = @func_736(%694) /* ty=Tensor[(7, 9, 6), bool] */;
    %703 = %699.1;
    (%700, %701, %702, %var_4364, %703, meta[relay.Constant][50] /* ty=uint32 */, %var_4369)
  };
  %704(%var_4372, %var_4373, %var_4374) /* ty=(Tensor[(9, 4, 13), bool], Tensor[(9, 4, 13), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 15, 10), bool], uint32, Tensor[(160), uint32]) */
}

def @func_3761() -> Tensor[(72), float64] {
  %706 = fn () -> Tensor[(72), float64] {
    %705 = @func_3077() /* ty=(Tensor[(72), float64],) */;
    %705.0
  };
  %706() /* ty=Tensor[(72), float64] */
}

def @func_6411() -> (Tensor[(72), float64],) {
  %709 = fn () -> (Tensor[(72), float64],) {
    %707 = @func_4604() /* ty=(Tensor[(72), float64], Tensor[(72), float64]) */;
    %708 = %707.0;
    (%708,)
  };
  %709() /* ty=(Tensor[(72), float64],) */
}

def @func_5613(%var_5611: Tensor[(675), int64], %var_5612: Tensor[(378), float32]) -> (Tensor[(72), uint16], Tensor[(1920), int64], int64, Tensor[(352, 1), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(1152), int64], Tensor[(1120), float64]) {
  %727 = fn (%var_5605: Tensor[(675), int64], %var_5606: Tensor[(378), float32]) -> (Tensor[(72), uint16], Tensor[(1920), int64], int64, Tensor[(352, 1), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(1152), int64], Tensor[(1120), float64]) {
    %710 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %711 = cast(meta[relay.Constant][51] /* ty=Tensor[(352, 1), int64] */, dtype="int64") /* ty=Tensor[(352, 1), int64] */;
    %712 = cast(meta[relay.Constant][52] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
    %713 = cast(%var_5605, dtype="int64") /* ty=Tensor[(675), int64] */;
    %714 = cast(%var_5606, dtype="float32") /* ty=Tensor[(378), float32] */;
    %715 = cast(meta[relay.Constant][53] /* ty=Tensor[(1152), int64] */, dtype="int64") /* ty=Tensor[(1152), int64] */;
    %716 = cast(meta[relay.Constant][54] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %717 = reshape(%710, newshape=[]) /* ty=int64 */;
    %718 = reshape(%711, newshape=[8, 4, 11]) /* ty=Tensor[(8, 4, 11), int64] */;
    %719 = reshape(%712, newshape=[1680]) /* ty=Tensor[(1680), uint64] */;
    %720 = reshape(%713, newshape=[675]) /* ty=Tensor[(675), int64] */;
    %721 = reshape(%714, newshape=[378]) /* ty=Tensor[(378), float32] */;
    %722 = reshape(%715, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
    %723 = reshape(%716, newshape=[56, 20]) /* ty=Tensor[(56, 20), float64] */;
    %724 = @func_3613(%717, %718, %719, %720, %721, %722, %723) /* ty=(Tensor[(8, 4, 11), int64], Tensor[(675), int64], Tensor[(1920), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(1152), int64], Tensor[(9, 5, 15), float32], Tensor[(14, 10, 8), float64], Tensor[(56, 20), float64], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(12, 5, 14), float64], Tensor[(168, 2), float32]) */;
    %725 = @func_5460() /* ty=Tensor[(72), uint16] */;
    %726 = %724.2;
    (%725, %726, -7 /* ty=int64 */, meta[relay.Constant][51] /* ty=Tensor[(352, 1), int64] */, meta[relay.Constant][52] /* ty=Tensor[(1680), uint64] */, %var_5605, %var_5606, meta[relay.Constant][53] /* ty=Tensor[(1152), int64] */, meta[relay.Constant][54] /* ty=Tensor[(1120), float64] */)
  };
  %727(%var_5611, %var_5612) /* ty=(Tensor[(72), uint16], Tensor[(1920), int64], int64, Tensor[(352, 1), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(1152), int64], Tensor[(1120), float64]) */
}

def @func_2506() -> (Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) {
  %738 = fn () -> (Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) {
    %728 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
    %729 = cast(meta[relay.Constant][55] /* ty=Tensor[(9, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
    %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(3), int32] */;
    %731 = cast(%728, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
    %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %733 = cast(meta[relay.Constant][56] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %734 = reshape(%733, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
    %735 = @func_989(%734) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
    %736 = floor_mod(%731, %732) /* ty=Tensor[(9, 4, 13), float64] */;
    %737 = %735.1;
    (%736, %737, meta[relay.Constant][56] /* ty=Tensor[(72), float64] */)
  };
  %738() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */
}

def @func_3613(%var_3542: int64, %var_3543: Tensor[(8, 4, 11), int64], %var_3564: Tensor[(1680), uint64], %var_3565: Tensor[(675), int64], %var_3566: Tensor[(378), float32], %var_3567: Tensor[(1152), int64], %var_3587: Tensor[(56, 20), float64]) -> (Tensor[(8, 4, 11), int64], Tensor[(675), int64], Tensor[(1920), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(1152), int64], Tensor[(9, 5, 15), float32], Tensor[(14, 10, 8), float64], Tensor[(56, 20), float64], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(12, 5, 14), float64], Tensor[(168, 2), float32]) {
  %739 = cast(%var_3542, dtype="int64") /* ty=int64 */;
  %740 = cast(%var_3543, dtype="int64") /* ty=Tensor[(8, 4, 11), int64] */;
  %741 = cast(meta[relay.Constant][57] /* ty=Tensor[(1920), int64] */, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %742 = cast(meta[relay.Constant][57] /* ty=Tensor[(1920), int64] */, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %743 = cast(%var_3564, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
  %744 = cast(%var_3565, dtype="int64") /* ty=Tensor[(675), int64] */;
  %745 = cast(%var_3566, dtype="float32") /* ty=Tensor[(378), float32] */;
  %746 = cast(%var_3567, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %747 = reshape(%741, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int64] */;
  %748 = reshape(%742, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int64] */;
  %749 = reshape(%743, newshape=[840, 2]) /* ty=Tensor[(840, 2), uint64] */;
  %750 = reshape(%744, newshape=[675]) /* ty=Tensor[(675), int64] */;
  %751 = reshape(%745, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %752 = reshape(%746, newshape=[1, 1152]) /* ty=Tensor[(1, 1152), int64] */;
  %753 = @func_3502(%747, %748, %749, %750, %751, %752) /* ty=(Tensor[(15, 8, 16), int64], Tensor[(6, 2, 6), float64], Tensor[(840, 2), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 168), float32], Tensor[(1, 1152), int64]) */;
  %754 = cast(%var_3542, dtype="int64") /* ty=int64 */;
  %755 = %753.3;
  %756 = cast(%755, dtype="int64") /* ty=Tensor[(675), int64] */;
  %757 = reshape(%754, newshape=[]) /* ty=int64 */;
  %758 = reshape(%756, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
  %759 = @func_363(%757, %758) /* ty=(Tensor[(9, 5, 15), int64], Tensor[(9, 5, 15), float32]) */;
  %760 = cast(%var_3587, dtype="float64") /* ty=Tensor[(56, 20), float64] */;
  %761 = reshape(%760, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float64] */;
  %762 = @func_853(%761) /* ty=(Tensor[(14, 10, 8), float64],) */;
  %763 = cast(meta[relay.Constant][58] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %764 = reshape(%763, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
  %765 = @func_989(%764) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
  %766 = cast(meta[relay.Constant][59] /* ty=Tensor[(168, 2), float32] */, dtype="float32") /* ty=Tensor[(168, 2), float32] */;
  %767 = cast(%var_3567, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %768 = cast(%var_3566, dtype="float32") /* ty=Tensor[(378), float32] */;
  %769 = reshape(%766, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %770 = reshape(%767, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
  %771 = reshape(%768, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %772 = @func_3157(%769, %770, %771) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(12, 14, 2), float32], Tensor[(336), float32], Tensor[(1152), int64], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(12, 5, 14), float64], Tensor[(2, 2, 5), uint16], Tensor[(20), uint16], Tensor[(84, 20), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(7, 9, 6), float64]) */;
  %773 = multiply(%739, %740) /* ty=Tensor[(8, 4, 11), int64] */;
  %774 = %759.1;
  %775 = %762.0;
  %776 = %765.0;
  %777 = %772.6;
  (%773, %755, meta[relay.Constant][57] /* ty=Tensor[(1920), int64] */, %var_3564, %var_3565, %var_3566, %var_3567, %774, %775, %var_3587, %776, meta[relay.Constant][58] /* ty=Tensor[(72), float64] */, %777, meta[relay.Constant][59] /* ty=Tensor[(168, 2), float32] */)
}

def @func_6284() -> Tensor[(3, 14, 5), float32] {
  @func_6282() /* ty=Tensor[(3, 14, 5), float32] */
}

def @func_738(%var_737: Tensor[(7, 9, 6), float32]) -> Tensor[(7, 9, 6), bool] {
  %780 = fn (%var_723: Tensor[(7, 9, 6), float32]) -> Tensor[(7, 9, 6), bool] {
    %778 = cast(meta[relay.Constant][60] /* ty=Tensor[(7, 1, 6), float32] */, dtype="bool") /* ty=Tensor[(7, 1, 6), bool] */;
    %779 = cast(%var_723, dtype="bool") /* ty=Tensor[(7, 9, 6), bool] */;
    less_equal(%778, %779) /* ty=Tensor[(7, 9, 6), bool] */
  };
  %780(%var_737) /* ty=Tensor[(7, 9, 6), bool] */
}

def @func_2781(%var_2780: Tensor[(72), float64]) -> (Tensor[(72), int64],) {
  %788 = fn (%var_2770: Tensor[(72), float64]) -> (Tensor[(72), int64],) {
    %781 = @func_2657() /* ty=(Tensor[(72), float64],) */;
    %782 = %781.0;
    %783 = cast(%var_2770, dtype="int64") /* ty=Tensor[(72), int64] */;
    %784 = shape_of(%782, dtype="int32") /* ty=Tensor[(1), int32] */;
    %785 = cast(%782, dtype="int64") /* ty=Tensor[(72), int64] */;
    %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?), int64] */;
    %787 = multiply(%785, %786) /* ty=Tensor[(72), int64] */;
    (%787,)
  };
  %788(%var_2780) /* ty=(Tensor[(72), int64],) */
}

def @func_2596(%var_2593: Tensor[(675), int64], %var_2594: Tensor[(126, 3), float32], %var_2595: Tensor[(18), uint32]) -> (Tensor[(72), float64], Tensor[(720), float64], Tensor[(1872), float64], Tensor[(180, 4), float64], Tensor[(16, 9, 8), int64], Tensor[(4, 15, 12), float32], Tensor[(720), float64], Tensor[(96, 12), float64], Tensor[(96, 12), float64], Tensor[(16, 15, 10), bool], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(126, 3), float32], Tensor[(?, 3, 6), uint32], Tensor[(18), uint32]) {
  %842 = fn (%var_2571: Tensor[(675), int64], %var_2572: Tensor[(126, 3), float32], %var_2589: Tensor[(18), uint32]) -> (Tensor[(72), float64], Tensor[(720), float64], Tensor[(1872), float64], Tensor[(180, 4), float64], Tensor[(16, 9, 8), int64], Tensor[(4, 15, 12), float32], Tensor[(720), float64], Tensor[(96, 12), float64], Tensor[(96, 12), float64], Tensor[(16, 15, 10), bool], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(126, 3), float32], Tensor[(?, 3, 6), uint32], Tensor[(18), uint32]) {
    %789 = @func_2505() /* ty=(Tensor[(9, 4, 13), float64], Tensor[(6, 2, 6), int64], Tensor[(72), float64]) */;
    %790 = cast(meta[relay.Constant][61] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %791 = cast(meta[relay.Constant][61] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %792 = cast(meta[relay.Constant][62] /* ty=Tensor[(180, 4), float64] */, dtype="float64") /* ty=Tensor[(180, 4), float64] */;
    %793 = reshape(%790, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
    %794 = reshape(%791, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
    %795 = reshape(%792, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %796 = @func_2193(%793, %794, %795) /* ty=(Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) */;
    %797 = cast(meta[relay.Constant][63] /* ty=Tensor[(96, 12), int64] */, dtype="int64") /* ty=Tensor[(96, 12), int64] */;
    %798 = cast(meta[relay.Constant][63] /* ty=Tensor[(96, 12), int64] */, dtype="int64") /* ty=Tensor[(96, 12), int64] */;
    %799 = reshape(%797, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
    %800 = reshape(%798, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
    %801 = @func_1242(%799, %800) /* ty=(Tensor[(16, 9, 8), int64],) */;
    %802 = cast(meta[relay.Constant][62] /* ty=Tensor[(180, 4), float64] */, dtype="float64") /* ty=Tensor[(180, 4), float64] */;
    %803 = reshape(%802, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
    %804 = @func_1977(%803) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(4, 15, 12), float32]) */;
    %805 = cast(meta[relay.Constant][61] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %806 = cast(meta[relay.Constant][61] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %807 = %796.2;
    %808 = cast(%807, dtype="float64") /* ty=Tensor[(720), float64] */;
    %809 = reshape(%805, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
    %810 = reshape(%806, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float64] */;
    %811 = reshape(%808, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %812 = @func_2193(%809, %810, %811) /* ty=(Tensor[(12, 13, 12), bool], Tensor[(4, 15, 12), float32], Tensor[(720), float64]) */;
    %813 = cast(meta[relay.Constant][63] /* ty=Tensor[(96, 12), int64] */, dtype="float32") /* ty=Tensor[(96, 12), float32] */;
    %814 = erf(%813) /* ty=Tensor[(96, 12), float32] */;
    %815 = cast(meta[relay.Constant][63] /* ty=Tensor[(96, 12), int64] */, dtype="float64") /* ty=Tensor[(96, 12), float64] */;
    %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(2), int32] */;
    %817 = cast(%814, dtype="float64") /* ty=Tensor[(96, 12), float64] */;
    %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %819 = cast(%814, dtype="float64") /* ty=Tensor[(96, 12), float64] */;
    %820 = cast(meta[relay.Constant][64] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
    %821 = cast(meta[relay.Constant][64] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
    %822 = cast(%var_2571, dtype="int64") /* ty=Tensor[(675), int64] */;
    %823 = cast(%var_2572, dtype="float32") /* ty=Tensor[(126, 3), float32] */;
    %824 = reshape(%820, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
    %825 = reshape(%821, newshape=[15, 14, 8]) /* ty=Tensor[(15, 14, 8), uint64] */;
    %826 = reshape(%822, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), int64] */;
    %827 = reshape(%823, newshape=[378]) /* ty=Tensor[(378), float32] */;
    %828 = @func_1108(%824, %825, %826, %827) /* ty=(Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) */;
    %829 = cast(%var_2589, dtype="uint32") /* ty=Tensor[(18), uint32] */;
    %830 = cast(%var_2589, dtype="uint32") /* ty=Tensor[(18), uint32] */;
    %831 = reshape(%829, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), uint32] */;
    %832 = reshape(%830, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), uint32] */;
    %833 = @func_1709(%831, %832) /* ty=(Tensor[(?, 3, 6), uint32], Tensor[(16, 9, 8), int64], Tensor[(1, 1152), int64]) */;
    %834 = %789.2;
    %835 = %801.0;
    %836 = %804.1;
    %837 = %812.2;
    %838 = floor_mod(%817, %818) /* ty=Tensor[(96, 12), float64] */;
    %839 = sin(%819) /* ty=Tensor[(96, 12), float64] */;
    %840 = %828.10;
    %841 = %833.0;
    (%834, %807, meta[relay.Constant][61] /* ty=Tensor[(1872), float64] */, meta[relay.Constant][62] /* ty=Tensor[(180, 4), float64] */, %835, %836, %837, %838, %839, %840, meta[relay.Constant][64] /* ty=Tensor[(1680), uint64] */, %var_2571, %var_2572, %841, %var_2589)
  };
  %842(%var_2593, %var_2594, %var_2595) /* ty=(Tensor[(72), float64], Tensor[(720), float64], Tensor[(1872), float64], Tensor[(180, 4), float64], Tensor[(16, 9, 8), int64], Tensor[(4, 15, 12), float32], Tensor[(720), float64], Tensor[(96, 12), float64], Tensor[(96, 12), float64], Tensor[(16, 15, 10), bool], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(126, 3), float32], Tensor[(?, 3, 6), uint32], Tensor[(18), uint32]) */
}

def @func_5786(%var_5784: Tensor[(2, 10, 15), int64], %var_5785: Tensor[(2, 10, 15), int64]) -> (Tensor[(2, 10, 15), int64],) {
  %848 = fn (%var_5770: Tensor[(2, 10, 15), int64], %var_5771: Tensor[(2, 10, 15), int64]) -> (Tensor[(2, 10, 15), int64],) {
    %843 = cast(%var_5771, dtype="int64") /* ty=Tensor[(2, 10, 15), int64] */;
    %844 = shape_of(%var_5770, dtype="int32") /* ty=Tensor[(3), int32] */;
    %845 = cast(%var_5770, dtype="int64") /* ty=Tensor[(2, 10, 15), int64] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %847 = add(%845, %846) /* ty=Tensor[(2, 10, 15), int64] */;
    (%847,)
  };
  %848(%var_5784, %var_5785) /* ty=(Tensor[(2, 10, 15), int64],) */
}

def @func_1712(%var_1710: Tensor[(1, 3, 6), uint32], %var_1711: Tensor[(1, 3, 6), uint32]) -> (Tensor[(?, 3, 6), uint32], Tensor[(16, 9, 8), int64], Tensor[(1, 1152), int64]) {
  %860 = fn (%var_1698: Tensor[(1, 3, 6), uint32], %var_1699: Tensor[(1, 3, 6), uint32]) -> (Tensor[(?, 3, 6), uint32], Tensor[(16, 9, 8), int64], Tensor[(1, 1152), int64]) {
    %849 = cast(%var_1699, dtype="uint32") /* ty=Tensor[(1, 3, 6), uint32] */;
    %850 = shape_of(%var_1698, dtype="int32") /* ty=Tensor[(3), int32] */;
    %851 = cast(%var_1698, dtype="uint32") /* ty=Tensor[(1, 3, 6), uint32] */;
    %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %853 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 1152), int64] */, dtype="int64") /* ty=Tensor[(1, 1152), int64] */;
    %854 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 1152), int64] */, dtype="int64") /* ty=Tensor[(1, 1152), int64] */;
    %855 = reshape(%853, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
    %856 = reshape(%854, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), int64] */;
    %857 = @func_1242(%855, %856) /* ty=(Tensor[(16, 9, 8), int64],) */;
    %858 = bitwise_or(%851, %852) /* ty=Tensor[(?, 3, 6), uint32] */;
    %859 = %857.0;
    (%858, %859, meta[relay.Constant][65] /* ty=Tensor[(1, 1152), int64] */)
  };
  %860(%var_1710, %var_1711) /* ty=(Tensor[(?, 3, 6), uint32], Tensor[(16, 9, 8), int64], Tensor[(1, 1152), int64]) */
}

def @func_3079() -> (Tensor[(72), float64],) {
  @func_3077() /* ty=(Tensor[(72), float64],) */
}

def @func_4852(%var_4849: Tensor[(9, 16, 12), int16], %var_4850: Tensor[(9, 16, 12), int16], %var_4851: Tensor[(9, 16, 12), int16]) -> (Tensor[(6, 2, 6), int64], Tensor[(9, 16, 12), bool], Tensor[(9, 16, 12), int8], Tensor[(72), float64]) {
  %879 = fn (%var_4814: Tensor[(9, 16, 12), int16], %var_4815: Tensor[(9, 16, 12), int16], %var_4837: Tensor[(9, 16, 12), int16]) -> (Tensor[(6, 2, 6), int64], Tensor[(9, 16, 12), bool], Tensor[(9, 16, 12), int8], Tensor[(72), float64]) {
    %861 = @func_4780() /* ty=(Tensor[(6, 2, 6), int64],) */;
    %862 = cast(%var_4815, dtype="int16") /* ty=Tensor[(9, 16, 12), int16] */;
    %863 = shape_of(%var_4814, dtype="int32") /* ty=Tensor[(3), int32] */;
    %864 = cast(%var_4814, dtype="int16") /* ty=Tensor[(9, 16, 12), int16] */;
    %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %866 = left_shift(%864, %865) /* ty=Tensor[(9, 16, 12), int16] */;
    %867 = cast(%var_4814, dtype="bool") /* ty=Tensor[(9, 16, 12), bool] */;
    %868 = shape_of(%866, dtype="int32") /* ty=Tensor[(3), int32] */;
    %869 = cast(%866, dtype="bool") /* ty=Tensor[(9, 16, 12), bool] */;
    %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %871 = cast(%var_4837, dtype="int8") /* ty=Tensor[(9, 16, 12), int8] */;
    %872 = shape_of(%var_4814, dtype="int32") /* ty=Tensor[(3), int32] */;
    %873 = cast(%var_4814, dtype="int8") /* ty=Tensor[(9, 16, 12), int8] */;
    %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %875 = %861.0;
    %876 = logical_and(%869, %870) /* ty=Tensor[(9, 16, 12), bool] */;
    %877 = bitwise_or(%873, %874) /* ty=Tensor[(9, 16, 12), int8] */;
    %878 = @func_4564() /* ty=Tensor[(72), float64] */;
    (%875, %876, %877, %878)
  };
  %879(%var_4849, %var_4850, %var_4851) /* ty=(Tensor[(6, 2, 6), int64], Tensor[(9, 16, 12), bool], Tensor[(9, 16, 12), int8], Tensor[(72), float64]) */
}

def @func_2659() -> (Tensor[(72), float64],) {
  @func_2657() /* ty=(Tensor[(72), float64],) */
}

def @func_1595(%var_1594: Tensor[(8, 3, 3), int16]) -> (Tensor[(8, 3, 3), bool], Tensor[(6, 2, 6), int64], Tensor[(8, 3, 3), float64]) {
  %891 = fn (%var_1579: Tensor[(8, 3, 3), int16]) -> (Tensor[(8, 3, 3), bool], Tensor[(6, 2, 6), int64], Tensor[(8, 3, 3), float64]) {
    %880 = cast(meta[relay.Constant][66] /* ty=Tensor[(8, 3, 3), int16] */, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
    %881 = shape_of(%var_1579, dtype="int32") /* ty=Tensor[(3), int32] */;
    %882 = cast(%var_1579, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %884 = cast(%var_1579, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
    %885 = reshape(%884, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float64] */;
    %886 = @func_989(%885) /* ty=(Tensor[(6, 2, 6), float64], Tensor[(6, 2, 6), int64]) */;
    %887 = cast(meta[relay.Constant][66] /* ty=Tensor[(8, 3, 3), int16] */, dtype="float64") /* ty=Tensor[(8, 3, 3), float64] */;
    %888 = greater_equal(%882, %883) /* ty=Tensor[(8, 3, 3), bool] */;
    %889 = %886.1;
    %890 = acosh(%887) /* ty=Tensor[(8, 3, 3), float64] */;
    (%888, %889, %890)
  };
  %891(%var_1594) /* ty=(Tensor[(8, 3, 3), bool], Tensor[(6, 2, 6), int64], Tensor[(8, 3, 3), float64]) */
}

def @func_5362() -> Tensor[(9, 4, 13), bool] {
  %897 = fn () -> Tensor[(9, 4, 13), bool] {
    %892 = @func_2425() /* ty=Tensor[(9, 4, 13), float64] */;
    %893 = cast(meta[relay.Constant][67] /* ty=Tensor[(9, 4, 13), float64] */, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
    %894 = shape_of(%892, dtype="int32") /* ty=Tensor[(3), int32] */;
    %895 = cast(%892, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
    %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%895, %896) /* ty=Tensor[(9, 4, 13), bool] */
  };
  %897() /* ty=Tensor[(9, 4, 13), bool] */
}

def @func_5489() -> Tensor[(3, 14, 5), float32] {
  @func_5487() /* ty=Tensor[(3, 14, 5), float32] */
}

def @func_5487() -> Tensor[(3, 14, 5), float32] {
  %898 = cast(meta[relay.Constant][68] /* ty=Tensor[(3, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
  log10(%898) /* ty=Tensor[(3, 14, 5), float32] */
}

def @func_4872() -> (Tensor[(72), float64],) {
  %901 = fn () -> (Tensor[(72), float64],) {
    %899 = @func_4322() /* ty=(Tensor[(72), float64],) */;
    %900 = %899.0;
    (%900,)
  };
  %901() /* ty=(Tensor[(72), float64],) */
}

def @main(%var_6483: Tensor[(9, 4, 13), float64]) -> (Tensor[(9, 4, 13), float64],) {
  %902 = @func_6030() /* ty=Tensor[(9, 4, 13), float64] */;
  %903 = cast(%var_6483, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %904 = shape_of(%902, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%902, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %907 = floor_divide(%905, %906) /* ty=Tensor[(9, 4, 13), float64] */;
  (%907,)
}

def @func_1114(%var_1110: Tensor[(15, 14, 8), uint64], %var_1111: Tensor[(15, 14, 8), uint64], %var_1112: Tensor[(9, 5, 15), int64], %var_1113: Tensor[(378), float32]) -> (Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) {
  @func_1108(%var_1110, %var_1111, %var_1112, %var_1113) /* ty=(Tensor[(15, 14, 8), bool], int64, Tensor[(675, 1), int64], Tensor[(9, 5, 15), uint8], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(9, 5, 15), float32], Tensor[(7, 9, 6), bool], Tensor[(6, 2, 6), float64], Tensor[(72), float64], Tensor[(16, 15, 10), bool], Tensor[(2400), float64], Tensor[(6, 2, 6), float64]) */
}

def @func_6030() -> Tensor[(9, 4, 13), float64] {
  %908 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %909 = %908.0;
  %910 = cast(%909, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  asin(%910) /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_4952(%var_4949: Tensor[(9, 4, 13), float64], %var_4950: Tensor[(18), uint32], %var_4951: Tensor[(1920), int64]) -> (Tensor[(12, 13, 12), bool], Tensor[(1872), float64], Tensor[(720), float64], Tensor[(72), float64], Tensor[(9, 4, 13), bool], Tensor[(1, 1152), int64], Tensor[(18), uint32], Tensor[(9, 4, 13), float64], Tensor[(1920), int64], Tensor[(675), int64], Tensor[(378), float32]) {
  @func_4947(%var_4949, %var_4950, %var_4951) /* ty=(Tensor[(12, 13, 12), bool], Tensor[(1872), float64], Tensor[(720), float64], Tensor[(72), float64], Tensor[(9, 4, 13), bool], Tensor[(1, 1152), int64], Tensor[(18), uint32], Tensor[(9, 4, 13), float64], Tensor[(1920), int64], Tensor[(675), int64], Tensor[(378), float32]) */
}

def @func_6097(%var_6079: Tensor[(9, 4, 13), bool]) -> Tensor[(9, 4, 13), bool] {
  %911 = @func_5361() /* ty=Tensor[(9, 4, 13), bool] */;
  %912 = cast(%var_6079, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %913 = shape_of(%911, dtype="int32") /* ty=Tensor[(3), int32] */;
  %914 = cast(%911, dtype="bool") /* ty=Tensor[(9, 4, 13), bool] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%914, %915) /* ty=Tensor[(9, 4, 13), bool] */
}

def @func_2730() -> Tensor[(72), float64] {
  %917 = fn () -> Tensor[(72), float64] {
    %916 = @func_2657() /* ty=(Tensor[(72), float64],) */;
    %916.0
  };
  %917() /* ty=Tensor[(72), float64] */
}

def @func_5539(%var_5530: Tensor[(30), float64], %var_5531: Tensor[(1152), int64], %var_5532: Tensor[(378), float32]) -> (Tensor[(9, 4, 13), float64], Tensor[(9, 4, 13), float64], Tensor[(16, 10, 3), bool], Tensor[(30), float64], Tensor[(1152), int64], Tensor[(378), float32], Tensor[(480), float32]) {
  %918 = @func_2949() /* ty=(Tensor[(9, 4, 13), float64],) */;
  %919 = @func_2745() /* ty=Tensor[(9, 4, 13), float64] */;
  %920 = cast(%919, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  %921 = cast(%var_5530, dtype="float64") /* ty=Tensor[(30), float64] */;
  %922 = cast(%var_5531, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %923 = cast(%var_5532, dtype="float32") /* ty=Tensor[(378), float32] */;
  %924 = cast(meta[relay.Constant][69] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %925 = reshape(%921, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), float64] */;
  %926 = reshape(%922, newshape=[1152]) /* ty=Tensor[(1152), int64] */;
  %927 = reshape(%923, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %928 = reshape(%924, newshape=[16, 10, 3]) /* ty=Tensor[(16, 10, 3), float32] */;
  %929 = @func_1445(%925, %926, %927, %928) /* ty=(Tensor[(16, 9, 8), int64], Tensor[(1152), int64], Tensor[(?, 10, 3), uint64], Tensor[(14, 10, 8), float64], Tensor[(1120), float64], Tensor[(7, 9, 6), bool], Tensor[(378), float32], Tensor[(16, 10, 3), bool], Tensor[(14, 10, 8), float64], Tensor[(16, 10, 3), float32]) */;
  %930 = %918.0;
  %931 = acosh(%920) /* ty=Tensor[(9, 4, 13), float64] */;
  %932 = %929.7;
  (%930, %931, %932, %var_5530, %var_5531, %var_5532, meta[relay.Constant][69] /* ty=Tensor[(480), float32] */)
}

def @func_4185(%var_4184: Tensor[(378), float32]) -> (Tensor[(72), uint16], Tensor[(7, 9, 6), bool], Tensor[(378), float32]) {
  %937 = fn (%var_4179: Tensor[(378), float32]) -> (Tensor[(72), uint16], Tensor[(7, 9, 6), bool], Tensor[(378), float32]) {
    %933 = cast(%var_4179, dtype="float32") /* ty=Tensor[(378), float32] */;
    %934 = reshape(%933, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
    %935 = @func_3200() /* ty=Tensor[(72), uint16] */;
    %936 = @func_736(%934) /* ty=Tensor[(7, 9, 6), bool] */;
    (%935, %936, %var_4179)
  };
  %937(%var_4184) /* ty=(Tensor[(72), uint16], Tensor[(7, 9, 6), bool], Tensor[(378), float32]) */
}

def @func_5928() -> (Tensor[(72), float64],) {
  @func_5926() /* ty=(Tensor[(72), float64],) */
}

def @func_6228() -> (Tensor[(9, 4, 13), float64],) {
  @func_6226() /* ty=(Tensor[(9, 4, 13), float64],) */
}

def @func_5961() -> Tensor[(72), float64] {
  @func_5959() /* ty=Tensor[(72), float64] */
}

def @func_3077() -> (Tensor[(72), float64],) {
  %938 = @func_2729() /* ty=Tensor[(72), float64] */;
  (%938,)
}

def @func_5673() -> (Tensor[(72), float64],) {
  %940 = fn () -> (Tensor[(72), float64],) {
    %939 = @func_5479() /* ty=Tensor[(72), float64] */;
    (%939,)
  };
  %940() /* ty=(Tensor[(72), float64],) */
}

def @func_2711(%var_2709: uint64, %var_2710: Tensor[(1, 11), uint64]) -> (Tensor[(1, 11), uint64], Tensor[(2, 2, 5), uint16], Tensor[(20), uint16]) {
  @func_2707(%var_2709, %var_2710) /* ty=(Tensor[(1, 11), uint64], Tensor[(2, 2, 5), uint16], Tensor[(20), uint16]) */
}

def @func_4056(%var_4052: Tensor[(2, 960), int64], %var_4053: Tensor[(675), int64], %var_4054: Tensor[(126, 3), float32], %var_4055: Tensor[(1152), int64]) -> (Tensor[(9, 4, 13), float64], Tensor[(378), float32], Tensor[(2, 960), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(126, 3), float32], Tensor[(1152), int64]) {
  %957 = fn (%var_4032: Tensor[(2, 960), int64], %var_4034: Tensor[(675), int64], %var_4035: Tensor[(126, 3), float32], %var_4036: Tensor[(1152), int64]) -> (Tensor[(9, 4, 13), float64], Tensor[(378), float32], Tensor[(2, 960), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(126, 3), float32], Tensor[(1152), int64]) {
    %941 = @func_3784() /* ty=(Tensor[(9, 4, 13), float64],) */;
    %942 = cast(%var_4032, dtype="int64") /* ty=Tensor[(2, 960), int64] */;
    %943 = cast(%var_4032, dtype="int64") /* ty=Tensor[(2, 960), int64] */;
    %944 = cast(meta[relay.Constant][70] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
    %945 = cast(%var_4034, dtype="int64") /* ty=Tensor[(675), int64] */;
    %946 = cast(%var_4035, dtype="float32") /* ty=Tensor[(126, 3), float32] */;
    %947 = cast(%var_4036, dtype="int64") /* ty=Tensor[(1152), int64] */;
    %948 = reshape(%942, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int64] */;
    %949 = reshape(%943, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int64] */;
    %950 = reshape(%944, newshape=[840, 2]) /* ty=Tensor[(840, 2), uint64] */;
    %951 = reshape(%945, newshape=[675]) /* ty=Tensor[(675), int64] */;
    %952 = reshape(%946, newshape=[378]) /* ty=Tensor[(378), float32] */;
    %953 = reshape(%947, newshape=[1, 1152]) /* ty=Tensor[(1, 1152), int64] */;
    %954 = @func_3502(%948, %949, %950, %951, %952, %953) /* ty=(Tensor[(15, 8, 16), int64], Tensor[(6, 2, 6), float64], Tensor[(840, 2), uint64], Tensor[(675), int64], Tensor[(378), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 168), float32], Tensor[(1, 1152), int64]) */;
    %955 = %941.0;
    %956 = %954.4;
    (%955, %956, %var_4032, meta[relay.Constant][70] /* ty=Tensor[(1680), uint64] */, %var_4034, %var_4035, %var_4036)
  };
  %957(%var_4052, %var_4053, %var_4054, %var_4055) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(378), float32], Tensor[(2, 960), int64], Tensor[(1680), uint64], Tensor[(675), int64], Tensor[(126, 3), float32], Tensor[(1152), int64]) */
}

def @func_4323() -> (Tensor[(72), float64],) {
  %959 = fn () -> (Tensor[(72), float64],) {
    %958 = @func_2729() /* ty=Tensor[(72), float64] */;
    (%958,)
  };
  %959() /* ty=(Tensor[(72), float64],) */
}

def @func_5235(%var_5233: Tensor[(4, 40), uint32]) -> (Tensor[(4, 13), float32], Tensor[(9, 4, 13), float64], Tensor[(16, 15, 10), bool], uint32, Tensor[(4, 40), uint32]) {
  @func_5232(%var_5233) /* ty=(Tensor[(4, 13), float32], Tensor[(9, 4, 13), float64], Tensor[(16, 15, 10), bool], uint32, Tensor[(4, 40), uint32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

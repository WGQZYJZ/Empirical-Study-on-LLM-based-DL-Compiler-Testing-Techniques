import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_43 = relay.var("var_43", dtype = "float64", shape = (6, 13, 12))#candidate|43|(6, 13, 12)|var|float64
uop_44 = relay.rsqrt(var_43.astype('float64')) # shape=(6, 13, 12)
var_50 = relay.var("var_50", dtype = "float64", shape = (6, 13, 12))#candidate|50|(6, 13, 12)|var|float64
bop_51 = relay.left_shift(uop_44.astype('int32'), relay.reshape(var_50.astype('int32'), relay.shape_of(uop_44))) # shape=(6, 13, 12)
output = bop_51
output2 = bop_51
func_64 = relay.Function([var_43,var_50,], output)
mod['func_64'] = func_64
mod = relay.transform.InferType()(mod)
mutated_mod['func_64'] = func_64
mutated_mod = relay.transform.InferType()(mutated_mod)
func_64_call = mutated_mod.get_global_var('func_64')
var_66 = relay.var("var_66", dtype = "float64", shape = (6, 13, 12))#candidate|66|(6, 13, 12)|var|float64
var_67 = relay.var("var_67", dtype = "float64", shape = (6, 13, 12))#candidate|67|(6, 13, 12)|var|float64
call_65 = func_64_call(var_66,var_67,)
output = call_65
func_68 = relay.Function([var_66,var_67,], output)
mutated_mod['func_68'] = func_68
mutated_mod = relay.transform.InferType()(mutated_mod)
const_88 = relay.const([[[-9.946715,0.239871,-3.555492,-2.518418,0.369720,-4.015823,-7.679702,-2.558931,-2.147816,-7.440528,4.646678,-1.765481,4.037819],[-5.314408,-1.996316,-7.857553,7.661036,-4.211305,-2.378849,-1.258731,-9.339750,8.835060,-8.274187,-2.899480,-9.176509,3.304016],[2.383549,-5.198707,3.433244,8.436540,-0.661450,-5.430696,-5.977916,-5.737145,-0.185525,-2.630600,8.126457,7.105076,2.074167],[2.948992,-7.839817,4.639827,-4.774064,-0.536402,9.373733,-4.074011,-8.786240,3.956993,0.536998,7.649905,-3.636476,-3.213077],[9.657350,0.246997,-6.919801,-3.785180,-2.149309,-1.164603,9.764621,-9.682591,9.733577,-5.062782,-1.493903,-0.854590,8.820468],[0.676802,0.256440,-9.576909,9.079935,2.798034,-1.447188,0.088094,-1.333989,4.583044,-4.713368,-9.237906,-5.160622,4.508476],[-2.944631,-4.780394,8.068026,-9.398326,-2.244367,3.212578,-9.816399,0.207167,-4.366932,2.947252,-0.109700,-7.675941,4.918970],[-3.318575,-5.971266,-5.721346,5.137931,-4.449240,-2.667530,0.538885,8.087933,-1.364914,-3.212871,-6.810070,-9.658525,4.297239],[3.695990,-0.117325,-9.831587,-3.263265,-0.853365,9.856748,-2.186322,8.523904,-3.198118,3.654893,6.858936,-0.135555,9.140240],[0.714670,-8.786281,-4.320396,-8.910338,-7.060645,-3.647751,6.154006,7.546281,-2.439132,9.694979,-7.140971,7.307224,9.032757],[-7.113759,-4.645718,0.312653,0.598949,-7.321848,5.763965,-3.578117,9.822022,-1.440105,-0.818906,5.770551,5.097071,-9.649684],[8.094910,0.540200,-5.280685,-0.960850,7.741542,-9.876758,6.816266,0.609991,-8.664497,9.051709,-0.271721,-1.802089,3.511816],[9.284199,-9.899281,2.705946,1.409586,3.356407,-0.786132,-5.093066,8.276363,-5.016609,7.621815,6.813052,-8.832127,1.452031]],[[-9.725732,1.210782,-3.171126,6.934655,-0.625108,-8.751357,8.357941,7.328069,2.647678,-6.864768,9.806013,3.406450,-5.784492],[-7.041178,2.797927,6.213270,9.856755,-9.294666,9.930518,3.549654,-4.137422,-3.379417,9.801211,5.674035,4.903502,5.787299],[-4.957644,-5.901695,4.586094,3.633116,-8.631213,-0.476491,2.640948,4.097644,-6.313152,-7.952023,-3.276640,5.092927,9.140540],[-4.863464,-5.164296,5.352936,2.522327,2.844968,-3.426614,8.554696,8.146295,-7.288869,-5.175751,9.523527,-9.369105,9.834631],[-7.854246,-2.647029,5.846412,1.509157,-7.181105,1.525705,-7.617625,-6.769782,4.385379,6.730628,-9.056034,-2.888507,-4.923500],[0.864286,2.859786,1.649839,7.746449,9.336740,9.775086,-1.709594,6.474970,5.257900,-1.051219,-5.640400,2.049362,-1.098756],[-0.142180,3.374566,1.221675,7.653305,6.541057,-0.279205,2.541606,-6.458040,-7.906144,-7.253138,-2.641314,9.237379,-8.001995],[-8.290421,-2.013284,6.773667,6.041789,6.713554,9.954147,-9.125107,9.121248,-1.143088,-7.341533,1.027475,7.825110,1.425525],[8.796810,0.128121,-4.053260,-3.805900,-7.094732,2.105470,-8.029079,-4.961616,-5.767451,-4.761526,-0.147180,-3.965904,4.888904],[5.412768,9.883163,-3.182057,-2.250736,-7.203389,-9.545464,3.124474,-8.910012,-8.479750,8.657903,0.415190,3.474769,4.848733],[-3.269078,9.797790,-6.202336,-4.710421,9.678686,-0.435858,-8.195922,-1.791871,3.709781,-9.398213,3.836175,-8.789426,1.015747],[-0.878868,-6.622253,-0.467527,3.902382,-0.910716,8.622251,9.102047,-3.206781,-4.569835,0.728676,5.675274,-2.259857,-5.642764],[-3.182703,-2.187553,-6.662847,3.483193,-1.157133,6.798827,7.012399,7.287654,6.445470,9.715972,4.007176,-8.998070,-7.127175]],[[3.063989,9.615457,-1.911250,4.490836,-4.958198,5.322495,-9.846571,3.860247,3.084470,6.224711,8.378787,-9.704055,-5.133826],[-4.889888,-2.484487,-3.859641,5.192753,9.281694,-1.048751,-2.396395,4.677335,-2.464659,-7.136122,4.775664,-2.463805,-5.670790],[7.404573,-2.665647,-8.385878,4.820885,0.565094,6.750750,5.299688,8.310084,4.761337,-7.535092,2.821275,-7.495924,4.567571],[-9.500379,-2.176251,6.879567,7.103676,-9.456217,0.684371,-6.075111,6.220395,7.475295,-7.479441,-5.631771,4.599579,-1.123670],[8.777752,-1.762747,7.541903,-6.019980,9.354866,3.200816,1.440652,0.612082,6.403573,-0.328676,7.216290,-6.553366,-0.392757],[1.835883,7.046450,-2.038972,-4.280189,7.799681,6.204313,9.060317,-4.996396,1.219115,-3.923110,-6.074376,-0.834023,6.564738],[-1.431896,-2.002412,-4.713970,-6.980779,4.447718,6.769708,8.320063,9.659244,-9.354370,-2.630535,-1.735447,4.052891,-7.076233],[-3.497169,-4.372013,-4.415708,7.851479,2.885638,-8.926111,-4.161342,-5.545493,9.007544,-0.145021,5.571598,4.024449,4.577582],[0.081270,4.457070,-3.788896,9.949161,3.846195,-8.444859,-0.582788,-5.486968,8.843198,-3.730755,-7.879354,-5.703717,7.836861],[-2.275123,7.186271,-6.198913,-9.364674,-6.053346,9.334906,6.788539,2.664705,-6.763558,4.400498,-2.833004,0.525851,-7.197954],[-4.934302,-9.333680,-4.743642,-0.528771,3.167470,9.724598,-3.749153,-5.228163,6.308877,-1.928223,2.589977,-0.474784,-8.683404],[-5.164219,5.863399,0.912243,6.629400,2.922408,-4.382142,6.945442,-6.267815,1.139778,-7.214524,0.012454,1.128493,-3.943524],[-1.197708,2.422304,4.970633,-2.566106,6.870883,-7.271207,6.828381,-8.451802,1.664192,2.546940,-4.604961,4.807845,8.201680]],[[-2.333054,-8.392765,4.200843,9.151707,3.176679,-4.840328,-0.716884,-2.980546,-2.477583,-4.993476,1.755837,-5.716896,-3.871204],[-5.457520,7.611723,-1.487820,-3.307522,-0.975414,0.535478,8.199372,-0.805676,-0.621446,4.193181,7.671858,-3.333529,-4.121740],[-7.649303,5.316299,-1.689388,-7.341435,8.662860,5.453551,6.839850,5.288018,-6.584970,-8.009640,4.428086,8.504745,3.453188],[-4.572901,-3.190713,7.799518,-0.768192,0.841575,-8.090950,-2.749171,-5.255889,-3.337488,-4.766686,-3.926171,-7.742335,8.856077],[0.834844,-6.327178,-1.289316,9.473111,7.438494,2.833346,9.986269,-3.215782,-4.441208,3.931279,2.727347,-9.913991,8.569031],[-4.589640,0.754739,9.425858,-8.671404,7.345795,2.377741,2.639939,-6.460814,-9.161800,-4.527138,8.359266,1.476585,1.398884],[-0.034974,-3.121432,2.598359,2.908977,8.545699,3.049416,-3.613237,-9.285890,0.123090,0.610274,-5.083075,1.947969,-3.746012],[4.563562,9.038223,-2.655819,-1.058947,-2.561028,7.471557,0.354140,-7.080876,-8.545232,0.942847,-5.096828,3.538888,-9.437579],[1.187941,-8.163102,6.086937,-6.469396,-9.826478,-2.769267,9.582689,-9.650717,3.669502,5.396528,8.529976,-9.507053,-6.628433],[5.595007,-7.895896,0.731779,-6.238042,-2.845137,1.166001,-4.118181,1.276573,6.479376,9.533580,-4.854843,6.292108,4.933665],[2.668717,9.304831,-2.169130,9.507613,7.120743,8.586961,-3.020916,5.393103,-9.812577,-7.280594,-6.285821,-3.293439,7.038736],[-2.585866,4.255987,9.317155,-2.260528,-0.704230,-3.691519,6.102770,7.213301,2.062241,-7.606155,6.922476,-3.500017,5.752339],[7.178596,3.124376,-6.829536,3.151828,1.666997,-4.275378,-9.247752,-5.870516,1.030901,-5.563189,-2.014960,-0.925681,-6.055656]],[[0.222345,1.398952,4.929488,0.460882,-5.247960,1.440444,6.793540,-9.949411,-6.949600,-0.685540,3.734839,-4.155252,-4.353638],[1.300599,-4.465322,4.199683,8.747796,-1.192789,1.879956,6.090014,0.234242,-3.970509,4.326438,-2.091479,2.539877,-4.591900],[-4.657364,-8.660315,-2.113334,-0.896284,0.435998,-0.966053,-1.979480,3.885494,-0.887160,0.047527,1.100383,-2.627592,9.030702],[-1.277038,-7.568555,1.683515,-5.704708,5.510372,-8.099613,1.141231,1.424923,-2.577713,-0.427285,-2.466968,-0.058968,-5.661054],[8.220849,-7.505050,1.159336,9.982842,0.377475,8.761833,-8.058700,-9.395921,-1.256926,-0.496136,-3.978544,3.348752,-9.818432],[9.441045,-2.528971,2.266754,9.959123,-3.674005,-2.833406,-3.334424,-7.771053,3.089852,-4.505692,7.199928,0.001417,1.847194],[-6.629073,-9.654721,-3.010098,2.879647,3.003555,-5.045800,-9.243333,-5.689680,-8.439919,9.286001,-9.933465,6.732220,-7.442317],[1.708140,-8.228482,9.988506,1.039203,3.840486,-8.159845,-3.277896,7.149778,-2.277557,3.237152,2.467927,7.076738,7.939766],[5.490693,-0.236886,2.042806,-5.520249,-7.567514,2.402160,9.910179,2.686894,6.658998,-6.992085,-3.252739,1.229290,1.872434],[3.207212,3.964531,-5.535943,9.490257,-7.396790,-8.207700,-8.604684,0.635035,-7.716984,4.437141,-2.873216,-9.430827,5.158194],[5.181690,-3.114343,4.239585,8.407736,-1.878857,-0.602541,-0.340266,5.678897,3.136076,-0.708832,0.561457,8.684358,-8.937896],[5.434334,-8.104940,-2.581312,7.955384,-1.537902,-4.077876,6.617738,5.141696,3.036987,5.427120,-2.657900,-6.106935,6.684904],[-6.924775,-2.085552,-9.442209,9.931979,9.912759,-8.781535,-4.550625,6.308434,-6.447951,-3.775292,-3.607218,2.944418,-6.813931]],[[-0.887573,-1.081394,-4.823223,4.419810,-9.908393,-3.368479,-1.610757,8.064563,0.304578,-1.150751,-3.130073,5.948077,-6.320247],[-5.143353,4.911100,-7.157235,-5.452769,4.078807,9.913248,7.409063,-0.395274,6.627247,1.562307,0.609067,-1.869099,-4.722561],[-3.703950,8.899342,1.951230,5.680378,-0.189514,2.510201,-3.601269,8.765375,1.037022,7.568490,5.249290,-4.032577,2.156015],[3.626898,4.652077,9.282135,1.896557,3.447991,-1.657064,-3.096867,-8.145820,6.572225,-8.606135,-3.713630,-1.116284,-1.213219],[-8.919529,-8.765479,-4.691865,7.143876,2.577118,-5.050784,-4.827652,-7.486939,-4.192912,3.366293,-1.404547,7.613092,-5.365885],[-2.119707,-3.944854,-0.798935,2.093451,-1.990532,-8.888607,-4.297547,-7.128619,-2.977235,-0.414262,-1.119694,1.263938,0.944000],[-8.360422,7.635703,-9.425857,8.920325,-2.238725,0.665221,2.658591,7.840802,8.217501,8.667145,-4.319459,-2.588483,-6.025388],[1.072906,7.042811,0.089922,-3.123648,-3.216316,-4.076619,1.833969,5.007556,8.961711,-5.041924,-7.057335,-2.991507,-2.665929],[9.453848,6.859354,7.566374,-5.640856,3.039845,-4.093058,-3.962551,-9.446853,3.846705,7.064443,-0.827242,9.193545,5.732370],[-3.150149,3.787457,5.222046,-9.790694,4.885947,5.876637,-7.038882,2.945699,-7.296869,0.023832,6.077165,-3.714758,4.011084],[1.239298,-5.127923,-3.637040,-6.458197,7.253881,-9.384010,-3.130860,9.282974,8.382798,-5.413850,-6.933048,-6.735867,5.462131],[-0.493146,-6.959545,-7.080718,-9.276169,0.901215,2.695896,5.434518,7.871054,-2.062614,3.770555,4.078035,3.372987,4.322568],[9.882596,4.588711,1.220550,-4.988802,7.238039,6.227914,6.708439,-4.130123,-2.454126,0.105582,-3.422417,8.148641,3.509548]],[[-4.677653,-6.974424,7.825535,-8.251266,-1.879058,-2.276669,9.862652,8.518907,-5.610502,1.978627,-2.845563,-4.748155,6.951925],[1.558339,-5.831099,-3.957374,-7.038307,-1.832518,-9.944160,-5.944298,3.500936,4.758540,4.471601,1.179860,-8.187025,-3.521243],[2.142951,-9.626566,3.051634,3.514847,2.362145,8.720657,5.864012,1.395431,-0.667234,-2.295783,-1.094938,-8.936770,1.184584],[3.237716,3.099061,-4.487428,-0.458588,4.537341,-6.878464,7.695004,-4.489048,5.775290,4.475580,3.255800,3.834307,8.334353],[-9.016059,8.861494,5.250664,6.827516,-8.270022,1.098447,-1.633996,0.117151,-6.995245,-4.086374,8.964999,-1.799862,-0.921918],[-1.207951,2.581731,-0.571740,0.141901,2.322943,-1.681023,2.577919,-2.376513,-0.095924,-8.519134,-7.648217,-7.072446,3.453022],[-5.793687,-6.661871,-4.611771,-9.055918,-3.296702,6.493882,-8.887615,3.633420,4.342901,-0.854085,7.362576,-4.499918,-3.504787],[-4.060431,-0.756204,-2.283042,2.386003,1.347205,0.441899,-9.091824,-4.534271,5.868097,-0.812718,-0.585317,-6.005594,-0.488864],[1.221215,3.223402,6.314459,-0.189211,7.967212,-6.262293,-6.859298,-8.178363,-3.436614,8.250234,-5.248003,4.743833,7.210109],[-7.898432,-0.834160,-8.892926,-0.965496,1.059166,6.947066,8.571352,-4.959223,-6.581611,4.084283,-5.715554,5.379165,5.805970],[1.566577,-7.354697,-8.584399,-8.853131,0.578673,-9.344495,-5.535512,1.763768,0.371270,-9.299936,7.727700,-8.000324,-6.283852],[-5.647302,9.055056,2.499013,-9.376478,0.957739,5.617658,-0.949978,-5.564194,-2.410487,-9.033098,3.888903,-6.220895,-9.597602],[-7.960639,-1.799051,3.178755,-5.678368,-1.300927,5.300479,9.000899,8.213673,-5.391886,-1.092457,-8.571155,4.158522,-5.782181]],[[5.345917,3.646338,-5.753060,-3.152502,-8.505603,5.701037,-3.473387,-3.700719,1.348530,8.894004,-7.545845,-9.620241,-9.286069],[2.226702,8.869846,-3.828922,-6.958824,-0.384456,0.515594,-9.456110,2.492215,-5.277870,0.102949,1.437784,9.072300,-2.478088],[8.033485,-7.835699,4.196143,1.043731,2.764834,0.005730,0.600437,3.627454,6.544596,-0.285116,5.293271,-6.859051,-3.430204],[6.392704,-2.435681,6.428925,-8.945480,-4.679834,-6.629281,4.699605,5.125668,7.223501,-5.192966,-4.464494,-5.984705,-0.713499],[2.971098,4.312648,0.012632,2.813889,-1.389415,5.657337,-6.698183,-8.075769,4.294115,6.577272,4.964202,-0.748656,2.588056],[8.963241,8.062561,9.188690,-6.501783,-8.824010,-2.750268,-4.399558,8.199295,9.193291,8.999561,-7.852939,6.971826,2.159461],[-4.568693,0.023642,-0.503309,-0.463037,-1.027079,9.942762,-8.447722,-9.916289,2.685266,9.711445,-3.243989,1.752623,-5.319200],[6.194855,8.845679,-5.416995,-4.258690,3.943301,-6.448226,-2.124050,0.492564,-7.037650,-9.002207,-0.221760,0.245941,-4.808022],[4.320890,2.651071,7.501790,3.071822,4.197514,-6.135297,6.488138,1.781195,1.222376,5.957483,3.510025,-7.542836,-2.367829],[2.563796,-0.578319,-1.878684,5.380398,-2.909215,-2.303914,8.060180,1.503771,4.604195,5.751984,0.970542,-0.819667,-4.262724],[-3.758322,3.257146,7.093938,-5.388106,-5.275951,0.434449,-0.184079,-1.673036,-8.133962,-7.613750,-9.051248,-1.670057,-1.784534],[-6.309286,-3.092504,-5.923664,-3.655940,-5.598817,1.887440,4.865343,9.732905,6.132288,-8.774948,-8.844713,-8.501280,7.069147],[-5.976099,-8.330890,3.593334,4.134000,8.443283,-2.580212,-1.268826,-0.226569,3.037534,8.336355,-4.621752,-6.013577,0.450125]],[[1.956256,3.712051,-9.701535,6.767648,4.126621,0.148018,-1.209856,-2.064880,-9.041720,7.988501,-6.636170,3.066392,4.064728],[3.361893,-5.301862,-6.189870,-1.143544,-0.831222,1.611128,0.197059,-1.674028,-2.526805,-1.031341,1.538905,8.971693,6.377418],[5.853717,7.988097,-4.493350,-8.699965,0.051937,1.189932,2.859474,-4.542159,3.437675,7.828852,7.882149,-4.520471,-3.701686],[-3.845093,3.486797,-1.144576,-4.392042,9.239545,-0.811326,-2.877951,1.131429,2.142329,6.933874,1.535785,0.118569,2.704065],[-1.233605,-5.101172,0.634831,-0.214510,-1.704188,-7.117120,2.774411,-6.390445,7.540876,8.578847,-2.612498,0.357466,3.322173],[-3.245295,8.306585,1.199933,5.282932,2.729762,-8.323687,0.010950,-2.579015,-1.311065,-0.642546,7.962904,4.989381,-9.511802],[4.106395,7.812470,-7.146226,9.925693,2.279662,-3.905179,3.495668,-0.334893,9.068018,-9.122788,8.455297,4.317682,0.137751],[3.990500,-6.381759,-4.264744,-0.156929,-1.115311,0.222910,-5.729185,-4.927877,-7.613148,-0.053140,1.377567,-6.745260,6.887271],[-3.873940,1.227551,1.470264,-1.042976,-9.743307,3.843640,2.910969,-2.037507,-4.060419,7.268477,6.550452,-3.447092,-1.972910],[6.458560,2.118714,-7.740042,-4.825397,-8.132109,0.967656,5.081602,6.670612,-9.760777,-8.643235,-6.151139,6.632550,8.292267],[4.773531,4.309296,0.854898,-6.822445,0.135839,3.494218,2.430740,-0.847117,-0.232974,-9.637586,-6.663026,-9.004883,5.542676],[4.738068,7.781597,0.526410,-7.524841,-4.373912,-1.971308,3.407961,-9.237465,3.392275,-0.215927,-3.837358,9.481009,-3.290415],[0.004839,-3.774341,2.946860,4.696330,-1.625133,1.219342,3.420473,-4.544856,9.784405,-6.389109,-8.802835,9.505795,7.760132]],[[-1.181066,-5.215424,-8.401918,5.408871,9.905675,3.507361,0.620251,7.523831,-4.319909,5.714946,-3.714952,-3.843916,-2.265134],[-0.353559,0.260639,3.988081,-0.961045,5.819689,8.701674,8.299789,7.695286,1.519196,-7.152127,-2.493823,-6.699463,-8.395206],[-0.156580,9.004170,7.590791,-8.620993,2.885617,-4.830699,5.006535,-1.461371,4.617708,8.453541,-5.569264,2.729099,-5.235432],[-6.029416,7.284078,8.119013,7.959769,-9.238026,5.437133,-9.030460,-1.106169,-7.229282,-9.556834,-2.793496,9.540615,-9.816496],[3.470975,-5.470992,3.046420,-5.805024,2.704113,-5.100464,-3.095320,-3.234510,0.350039,-4.504454,3.745006,-5.557407,4.060410],[0.211185,-0.815850,3.306915,-9.288769,4.157256,-3.395203,-0.897691,-8.222382,-4.067660,-1.964307,-2.825369,7.206184,3.441099],[4.448620,-9.384981,0.774232,1.376594,-7.128029,7.785797,3.308615,-9.838752,-3.933591,5.839934,-3.685589,8.586635,-2.367664],[-3.599426,-7.720154,6.640279,7.685860,-9.048849,6.444629,7.102550,-7.478979,-4.475201,5.510020,1.787564,-1.486414,-5.649875],[8.612638,0.610660,9.846485,6.619426,8.798404,-4.279201,5.584971,0.539698,-9.081281,-1.464624,1.127652,-6.898157,9.306333],[-7.781856,1.201086,-5.964995,-7.268033,-8.553591,-2.020481,8.810212,-0.225293,-8.682460,1.097424,3.629331,-2.244141,-7.145661],[-9.469468,9.017959,7.399465,3.787086,-7.832719,8.051175,9.690473,1.035033,4.573323,-9.675444,-4.416955,8.345145,-7.973352],[2.977778,-3.172814,7.451541,8.605276,7.034858,-8.309229,4.327180,-5.225445,-8.572634,-1.619315,0.923716,-1.679010,-8.723175],[7.386687,-2.740780,-7.127637,-5.705804,-9.320039,4.443001,-7.677904,-5.661495,-5.342330,-0.658253,-9.363671,-1.326783,-5.232262]],[[-0.969413,4.878314,8.605925,8.947388,3.827501,0.860967,-7.798605,4.076374,6.556008,-4.001497,-2.339747,4.167654,-3.829531],[6.347443,0.192942,-4.416319,4.820678,-1.301201,-6.367254,-7.700669,3.402698,-7.821011,5.048173,1.923650,8.842200,-4.530969],[-8.092129,-2.391986,7.252179,-5.136655,0.706981,7.705392,-7.650163,8.606963,9.577910,-9.656204,-7.766195,-1.273253,-6.511645],[-2.244043,-0.391834,-4.289680,3.792852,1.006164,-5.564864,4.876411,-4.439956,-9.300067,-7.688918,-2.615104,-3.094092,-6.686294],[0.408246,-4.267064,-1.422254,1.896440,-4.184703,-7.972125,1.933423,-0.620696,4.809374,3.127764,-8.533222,-6.738334,-6.008269],[-7.853087,-9.130006,6.984548,-9.623069,5.466020,-8.625711,2.189963,-7.982975,-8.299303,4.308570,-5.926296,-9.172176,-4.432973],[7.327131,4.374085,5.194827,-2.186227,-7.127591,8.805414,-2.841383,-1.319632,-5.628410,0.026052,6.668987,-5.312579,-9.262668],[0.494437,-3.096667,-1.080131,-4.596251,6.866347,9.181298,0.939138,0.277092,-6.092365,-5.993950,6.284557,-7.804548,9.440269],[-6.441556,-6.004479,-8.580080,-3.196380,-4.535046,6.051625,-3.389553,-5.075458,-2.816161,-1.783866,8.787944,4.408756,7.155144],[-6.860207,2.796938,1.382962,6.517014,9.698499,3.000588,-7.645543,-1.572159,-7.493728,8.603352,-3.735295,4.797918,2.171571],[-7.412014,-1.804582,6.723986,3.700902,-2.236518,0.905950,8.674309,-1.440892,-2.626508,-3.064945,-8.698875,6.287373,4.891731],[8.294019,-0.848095,7.040633,-0.632571,-4.189733,-6.469988,-6.168125,-2.586945,-2.069470,-4.493914,-1.687550,-1.819215,0.757669],[-4.622332,-5.407516,8.652868,-5.674768,-3.693954,-6.980634,0.777431,4.197907,-0.505206,-5.150629,8.476811,-9.127330,6.433505]]], dtype = "float32")#candidate|88|(11, 13, 13)|const|float32
uop_89 = relay.erf(const_88.astype('float32')) # shape=(11, 13, 13)
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
const_113 = relay.const([[1.633460,-7.121472],[-0.464696,-4.369095],[-2.908778,-7.936168],[-8.109871,-4.865988],[1.276595,1.854481],[3.753289,-9.615261],[-1.676926,2.674756],[9.207663,5.765674],[-1.501646,5.830473],[-6.134553,-2.349488],[8.828125,-5.337649],[-5.680101,-8.071391],[-0.501953,0.516628],[-7.641951,-2.760971],[2.389413,-1.225796],[2.301132,-9.539640],[3.061466,6.918308],[0.883640,7.854822],[-4.108889,3.427277],[-9.928855,2.656881],[9.063606,1.493019],[-3.054320,-7.959834],[9.060849,-9.839697],[-5.671919,-8.736587],[8.073543,0.813184],[5.763689,2.921978],[7.184036,8.832573],[-9.150899,-5.905497],[9.296838,-2.211661],[-5.752986,0.613395],[6.022912,-6.229714],[-6.324686,4.759775],[-5.206923,2.968191],[6.958868,-9.820076],[9.427284,4.574569],[-9.532315,1.136655],[7.358490,2.306480],[-2.096497,4.917172],[3.782536,5.235232],[-8.418355,5.443271],[-8.300678,7.112494],[3.171648,-4.509170],[4.068769,-2.954511],[2.075926,1.245087],[4.170699,-3.189006],[1.830351,7.312032],[-5.083388,9.804242],[-3.277604,9.581716],[8.972749,-5.653857],[-7.634374,5.054296],[-2.426355,2.577012],[7.516692,-6.465225],[-4.723333,-9.895686],[-6.033793,-6.119188],[-1.558359,-2.587484],[-3.591555,3.666108],[-8.416714,-3.755109],[-6.067623,-0.169758],[1.129960,2.932932],[-8.175939,-4.398998],[-0.335129,-9.453420],[-3.936861,2.957981],[-7.773063,4.897400],[-7.470394,-6.406051],[7.368921,4.705872],[-1.949905,-3.284359],[-3.189947,-3.223341],[-1.893214,5.588954],[7.826841,9.591573],[-8.010295,7.284741],[-6.746481,8.939450],[3.304980,8.466083],[-4.782306,4.900980],[-9.130370,-9.285338],[7.886335,0.122463],[8.132875,-1.878622],[9.219452,1.808919],[8.862282,-1.080830],[4.820098,-9.882305],[-3.625590,4.040640],[-2.628990,1.739059],[7.949381,9.405511],[1.842068,-9.919514],[8.286254,1.963453],[-8.623730,-9.531702],[5.382759,-3.367389],[-3.986004,-7.311103],[-9.828369,7.989465],[-1.518152,-7.868752],[0.340899,-7.003854],[-1.123649,4.006937],[2.385352,-3.761446],[9.335486,7.342831],[-8.900334,-8.269063],[-7.367870,7.146863],[-9.965741,-0.340975],[2.107187,-5.134026],[-7.962092,1.048571],[4.053665,8.365550],[-7.323458,1.393457],[-8.587794,-0.486567],[-1.986830,-3.279516],[8.319460,3.872229],[-0.221981,-2.512862],[-3.061142,-2.842468],[5.374072,-4.235634],[3.119103,-6.532841],[4.239447,9.949325],[-8.781120,-4.765353],[-5.739677,-8.771228],[-0.438629,-9.386305],[9.231466,8.105598],[1.862490,-1.448842],[3.311577,-3.868339],[-5.002430,-0.725107],[-7.060324,-5.946718],[-8.654698,9.271523],[7.979799,-6.557238],[0.784463,-5.455906],[-0.027343,6.376483],[-8.281721,-6.717853],[-9.828460,-2.462950],[3.583458,-3.334929],[-6.133335,1.085880],[-7.319386,-1.514379],[-8.704900,6.359256],[0.257294,-2.152335],[4.226681,3.114284],[2.160913,-5.745508],[-4.270766,6.100207],[1.620124,1.194634],[-5.778626,-1.731717],[3.345475,-0.513367],[-2.722211,-7.775531],[1.144882,0.890477],[-8.068266,-0.022236],[-5.480527,3.636861],[4.658947,0.664417],[-4.225238,2.912645],[2.507001,7.339980],[-5.547874,-5.801781],[-1.811377,-8.198087],[2.679713,-1.193378],[-3.957103,0.380671],[5.399247,-8.839101],[5.449967,-7.263340],[-0.644791,-3.783941],[5.953770,6.476662],[7.461380,-9.980829],[-2.188793,-0.160477],[-6.331439,5.525548],[5.170419,-6.932365],[5.518127,-8.144893],[-6.531121,-3.545739],[-1.924130,-8.854663],[5.496628,7.816198],[8.190235,-3.833261],[-6.243605,9.231855],[7.251475,4.103748],[4.462419,-0.390606],[-3.657916,-4.194619],[7.398724,-9.395841],[8.493478,6.077733],[-7.336636,-5.943727],[1.153915,0.152706],[8.947521,-9.284758],[9.666606,7.684560],[2.996603,3.871869],[-2.344141,-3.107818],[-5.681249,2.936449],[1.404831,-6.498067],[3.283399,9.683993],[2.997709,-5.028257],[4.292869,-1.346477],[4.619098,-1.596600],[1.903032,-3.792206],[4.785957,5.754712],[1.493425,2.852555],[4.349819,-1.471208],[-5.255847,2.145313],[-8.925249,-7.180232],[8.303786,-7.998759],[7.794420,8.714906],[-8.352423,-8.894663],[9.815580,-4.076407],[3.228175,2.543818],[8.607190,6.237594],[-4.599054,-9.317634],[8.000020,-7.883906],[7.812279,5.060060],[9.721582,4.933913],[-2.704119,3.385510],[2.349128,9.320948],[-3.871945,2.725060],[-4.488880,2.646063],[-6.269047,-9.285493],[5.782753,-8.752056],[5.696598,8.909431],[-9.864623,2.994768],[-3.706383,-1.048009],[-8.561921,-4.869435],[4.289219,-1.880990],[4.239891,-1.884028],[6.847223,3.501013],[0.213262,2.724537],[0.424382,-5.349501],[9.909350,-2.884755],[-0.839020,7.763506],[-9.858980,7.885069],[-0.638908,-7.114638],[-3.493840,1.308116],[8.719716,-1.326782],[-4.371006,0.537476],[-7.818362,4.088087],[8.558305,3.486476],[1.520222,-3.768698],[8.642119,6.967762],[-3.680475,9.044414],[-0.308726,-4.957456],[6.063364,-5.316385],[6.782303,7.058106],[4.774570,9.549129],[-0.245131,8.945989],[-2.276734,-6.124737],[1.253595,5.615199],[8.983285,-6.527071],[5.120051,4.404463],[6.602054,-1.715389],[6.013689,-5.465544],[-1.886922,-7.947590],[0.087087,-5.880800],[7.574197,2.904611],[-4.060437,-5.225917],[9.878591,4.931915],[-7.016427,5.982298],[7.877377,-8.368640],[4.346710,4.036217],[-7.503935,-8.188967],[3.753056,4.201936],[6.521614,-6.955768],[4.393982,0.763624],[5.760177,0.221151],[6.448744,-2.633260],[-9.055124,-0.388488],[8.670519,-5.944412],[4.957643,4.898677],[1.833097,7.931345],[2.600655,8.108374],[5.241641,8.505449],[6.127095,-8.951147],[3.901752,8.538782],[6.496532,8.474318],[-6.159341,-6.694132],[1.527940,-1.314439],[3.908207,5.569339],[5.535369,4.240838],[-0.628108,-0.661014],[-5.360274,-6.826845],[5.317994,2.008604],[2.983865,8.511307],[-4.068637,1.225459],[-9.100718,5.374436],[-9.925968,-1.542491],[6.314537,-5.355838],[6.398642,9.654152],[4.657356,9.110039],[-9.397537,4.997043],[-5.362280,4.322871],[-6.377630,-5.437743],[-8.841565,-8.558183],[-0.298485,3.353940],[0.450493,7.104924],[-4.495388,-7.585094],[8.678746,-9.471733],[-1.057325,3.765605],[-8.001165,-4.120152],[-3.559953,2.857069],[-4.139368,3.631067],[3.533973,-3.213425],[-1.109335,4.731184],[-7.497538,-7.435049],[1.841866,6.722900],[-5.568767,-1.698327],[1.841740,1.313052],[5.887531,4.749373],[2.766014,5.113170],[8.520669,9.737264],[8.569105,-2.292787],[-9.704050,0.111464],[8.767948,5.783272],[-9.659414,-2.785068],[-1.848379,8.293261],[1.716425,4.006822],[7.405742,9.555630],[-9.207037,-1.464490],[2.785527,-8.585792],[4.131369,6.981507],[-2.413972,-8.617589],[3.281948,5.445825],[-1.102599,6.361166],[8.754835,-1.715577],[9.625932,3.685188],[-2.778321,-7.012123],[-3.212906,8.422029],[-6.973162,-6.065001],[-9.586536,5.867926],[7.999867,4.243843],[5.561215,2.157784],[-7.576379,4.802113],[5.423760,9.365705],[-4.718556,8.711342],[-5.939164,-6.153907],[-1.279576,-2.263329],[4.684710,-5.847265],[-1.039126,6.985136],[-1.272897,-8.756419],[-9.388037,6.238247],[-2.563236,-5.436687],[-6.146898,6.531138],[-6.767706,3.017547],[-9.541695,6.990161],[-2.328732,-8.307755],[-1.776195,-3.057795],[7.940605,4.683613],[8.246511,3.446159],[6.222240,-9.177351],[-1.051771,4.294948],[-5.333160,0.482021],[-5.954459,-3.033736],[-5.103815,8.778496],[-2.559344,0.358061],[-5.611061,-3.386820],[1.971615,7.358080],[1.027651,-0.259575],[3.911217,-0.110382],[8.645069,-6.319239],[1.291249,-9.142846],[9.048090,-2.938193],[8.095219,8.634070],[-8.174997,1.005719],[-9.700110,-2.711997],[0.969731,0.350796],[-0.047150,-7.631463],[3.749803,6.218401],[6.263669,-7.178315],[7.358570,2.260092],[-4.140141,-7.108814],[-3.565197,2.361736],[-4.329844,-1.415552],[-8.296334,-9.263456],[9.073089,-6.917731],[0.688440,6.903444],[2.005776,-9.890579],[-7.571278,-7.770496],[-7.512318,9.713860],[-5.937801,6.075111],[3.440228,-6.989744],[4.709267,-3.698183],[8.668296,9.897854],[6.133952,-9.740420],[-3.093853,4.195776],[-8.447993,-7.340833],[2.058775,4.575185],[-0.211558,-1.764817],[-4.051269,4.151952],[-1.621719,-2.427275],[1.753963,-0.997080],[8.257886,8.306444],[2.668061,-2.980641],[-4.173311,5.911352],[0.977119,-6.667232],[7.704760,9.014421],[2.662965,-2.373924],[-0.035516,-9.253611],[-6.336379,-2.830907],[0.642817,-3.838159],[3.263643,-8.803686],[4.632299,9.245202],[-9.797400,-9.602043],[-7.940239,2.508124],[-6.971879,9.104331],[-6.481100,-3.542964],[3.736693,-5.236417],[1.183185,0.339465],[-6.631764,-4.159463],[2.261248,-3.498192],[7.000745,-9.143440],[-1.986358,-1.687709],[7.279393,9.784136],[9.721012,-4.206912],[5.104124,5.805968],[0.468401,2.747219],[-3.618079,8.689007],[1.721769,0.860677],[-2.266974,-9.177634],[0.863522,-9.445355],[5.079728,-6.387708],[1.605064,5.134634],[-8.907933,8.261558],[2.130178,7.293204],[6.194896,-5.225053],[-2.234223,3.723154],[6.040045,3.750991],[-3.373618,8.600397],[9.081066,-6.119256],[-6.568559,9.030564],[-8.571628,6.511680],[0.143929,8.435770],[2.023329,6.280553],[0.179233,0.683588],[8.337956,5.654158],[-4.621652,5.762289],[5.693676,-0.646642],[3.756344,-4.992395],[2.069136,1.226033],[-7.030005,5.380560],[-6.519186,2.338572],[3.664749,-1.792822],[0.867278,3.348849],[-5.490214,6.467766],[-4.789802,-0.599176],[-0.302900,-3.305652],[-9.394059,-2.393205],[-0.391294,-8.847418],[3.920354,2.532156],[-2.847382,1.022054],[2.422802,1.228158],[7.135208,1.439848],[5.373676,1.721909],[-0.509822,0.178256],[7.912346,0.618034],[3.544080,3.234449],[2.723192,7.679937],[-8.781116,1.816728],[6.799326,-9.650153],[-1.723043,3.910597],[2.006220,8.850370],[-9.067353,-0.445079],[-3.390210,1.616922],[8.202596,-8.832000],[8.630149,8.252951],[-4.507450,-0.101959],[6.403381,-2.577636],[-3.617465,2.470108],[-3.926534,-8.059063],[2.654994,6.767001],[-3.676428,7.271629],[5.224289,8.207092],[-4.692462,-4.959778],[1.727535,-6.742776],[1.665212,-3.253297],[-4.517856,1.410993],[-9.741540,1.725747],[-4.980658,-7.597853],[-6.295485,0.312443],[0.499505,-1.521869],[1.447331,4.718658],[3.270923,4.249116],[-2.680442,9.547905],[-6.981910,-5.684312],[-8.019780,-3.568476],[-9.129420,6.910143],[1.126952,-0.135469],[4.237366,-7.355623],[4.727360,-0.740162],[5.631771,-1.792809],[1.424371,2.029778],[-5.689241,4.232295]], dtype = "float64")#candidate|113|(468, 2)|const|float64
call_112 = func_64_call(relay.reshape(const_113.astype('float64'), [6, 13, 12]), relay.reshape(const_113.astype('float64'), [6, 13, 12]), )
call_114 = func_64_call(relay.reshape(const_113.astype('float64'), [6, 13, 12]), relay.reshape(const_113.astype('float64'), [6, 13, 12]), )
output = relay.Tuple([uop_89,call_112,const_113,])
output2 = relay.Tuple([uop_89,call_114,const_113,])
func_124 = relay.Function([], output)
mod['func_124'] = func_124
mod = relay.transform.InferType()(mod)
output = func_124()
func_125 = relay.Function([], output)
mutated_mod['func_125'] = func_125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_176 = relay.TupleGetItem(func_124_call(), 0)
call_177 = relay.TupleGetItem(func_125_call(), 0)
output = call_176
output2 = call_177
func_205 = relay.Function([], output)
mod['func_205'] = func_205
mod = relay.transform.InferType()(mod)
mutated_mod['func_205'] = func_205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_205_call = mutated_mod.get_global_var('func_205')
call_206 = func_205_call()
output = call_206
func_207 = relay.Function([], output)
mutated_mod['func_207'] = func_207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_205_call = mod.get_global_var('func_205')
func_207_call = mutated_mod.get_global_var('func_207')
call_220 = func_205_call()
call_221 = func_205_call()
output = relay.Tuple([call_220,])
output2 = relay.Tuple([call_221,])
func_242 = relay.Function([], output)
mod['func_242'] = func_242
mod = relay.transform.InferType()(mod)
mutated_mod['func_242'] = func_242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_242_call = mutated_mod.get_global_var('func_242')
call_243 = func_242_call()
output = call_243
func_244 = relay.Function([], output)
mutated_mod['func_244'] = func_244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_205_call = mod.get_global_var('func_205')
func_207_call = mutated_mod.get_global_var('func_207')
call_264 = func_205_call()
call_265 = func_205_call()
output = relay.Tuple([call_264,])
output2 = relay.Tuple([call_265,])
func_298 = relay.Function([], output)
mod['func_298'] = func_298
mod = relay.transform.InferType()(mod)
output = func_298()
func_299 = relay.Function([], output)
mutated_mod['func_299'] = func_299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_320 = relay.var("var_320", dtype = "int64", shape = (15, 8, 1))#candidate|320|(15, 8, 1)|var|int64
var_321 = relay.var("var_321", dtype = "int64", shape = (15, 8, 13))#candidate|321|(15, 8, 13)|var|int64
bop_322 = relay.bitwise_and(var_320.astype('int64'), var_321.astype('int64')) # shape=(15, 8, 13)
func_205_call = mod.get_global_var('func_205')
func_207_call = mutated_mod.get_global_var('func_207')
call_325 = func_205_call()
call_326 = func_205_call()
output = relay.Tuple([bop_322,call_325,])
output2 = relay.Tuple([bop_322,call_326,])
func_327 = relay.Function([var_320,var_321,], output)
mod['func_327'] = func_327
mod = relay.transform.InferType()(mod)
mutated_mod['func_327'] = func_327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_327_call = mutated_mod.get_global_var('func_327')
var_329 = relay.var("var_329", dtype = "int64", shape = (15, 8, 1))#candidate|329|(15, 8, 1)|var|int64
var_330 = relay.var("var_330", dtype = "int64", shape = (15, 8, 13))#candidate|330|(15, 8, 13)|var|int64
call_328 = func_327_call(var_329,var_330,)
output = call_328
func_331 = relay.Function([var_329,var_330,], output)
mutated_mod['func_331'] = func_331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_339 = relay.TupleGetItem(func_124_call(), 1)
call_340 = relay.TupleGetItem(func_125_call(), 1)
uop_345 = relay.acos(call_339.astype('float64')) # shape=(6, 13, 12)
uop_347 = relay.acos(call_340.astype('float64')) # shape=(6, 13, 12)
func_242_call = mod.get_global_var('func_242')
func_244_call = mutated_mod.get_global_var('func_244')
call_372 = relay.TupleGetItem(func_242_call(), 0)
call_373 = relay.TupleGetItem(func_244_call(), 0)
output = relay.Tuple([uop_345,call_372,])
output2 = relay.Tuple([uop_347,call_373,])
func_382 = relay.Function([], output)
mod['func_382'] = func_382
mod = relay.transform.InferType()(mod)
output = func_382()
func_383 = relay.Function([], output)
mutated_mod['func_383'] = func_383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_382_call = mod.get_global_var('func_382')
func_383_call = mutated_mod.get_global_var('func_383')
call_411 = relay.TupleGetItem(func_382_call(), 1)
call_412 = relay.TupleGetItem(func_383_call(), 1)
func_327_call = mod.get_global_var('func_327')
func_331_call = mutated_mod.get_global_var('func_331')
var_416 = relay.var("var_416", dtype = "int64", shape = (120,))#candidate|416|(120,)|var|int64
var_417 = relay.var("var_417", dtype = "int64", shape = (6, 260))#candidate|417|(6, 260)|var|int64
call_415 = relay.TupleGetItem(func_327_call(relay.reshape(var_416.astype('int64'), [15, 8, 1]), relay.reshape(var_417.astype('int64'), [15, 8, 13]), ), 1)
call_418 = relay.TupleGetItem(func_331_call(relay.reshape(var_416.astype('int64'), [15, 8, 1]), relay.reshape(var_417.astype('int64'), [15, 8, 13]), ), 1)
func_242_call = mod.get_global_var('func_242')
func_244_call = mutated_mod.get_global_var('func_244')
call_429 = relay.TupleGetItem(func_242_call(), 0)
call_430 = relay.TupleGetItem(func_244_call(), 0)
output = relay.Tuple([call_411,call_415,var_416,var_417,call_429,])
output2 = relay.Tuple([call_412,call_418,var_416,var_417,call_430,])
func_437 = relay.Function([var_416,var_417,], output)
mod['func_437'] = func_437
mod = relay.transform.InferType()(mod)
mutated_mod['func_437'] = func_437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_437_call = mutated_mod.get_global_var('func_437')
var_439 = relay.var("var_439", dtype = "int64", shape = (120,))#candidate|439|(120,)|var|int64
var_440 = relay.var("var_440", dtype = "int64", shape = (6, 260))#candidate|440|(6, 260)|var|int64
call_438 = func_437_call(var_439,var_440,)
output = call_438
func_441 = relay.Function([var_439,var_440,], output)
mutated_mod['func_441'] = func_441
mutated_mod = relay.transform.InferType()(mutated_mod)
const_445 = relay.const(0.666966, dtype = "float64")#candidate|445|()|const|float64
var_446 = relay.var("var_446", dtype = "float64", shape = (1, 15, 5))#candidate|446|(1, 15, 5)|var|float64
bop_447 = relay.add(const_445.astype('float64'), var_446.astype('float64')) # shape=(1, 15, 5)
output = bop_447
output2 = bop_447
func_454 = relay.Function([var_446,], output)
mod['func_454'] = func_454
mod = relay.transform.InferType()(mod)
mutated_mod['func_454'] = func_454
mutated_mod = relay.transform.InferType()(mutated_mod)
var_455 = relay.var("var_455", dtype = "float64", shape = (1, 15, 5))#candidate|455|(1, 15, 5)|var|float64
func_454_call = mutated_mod.get_global_var('func_454')
call_456 = func_454_call(var_455)
output = call_456
func_457 = relay.Function([var_455], output)
mutated_mod['func_457'] = func_457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_469 = relay.TupleGetItem(func_298_call(), 0)
call_470 = relay.TupleGetItem(func_299_call(), 0)
output = call_469
output2 = call_470
func_492 = relay.Function([], output)
mod['func_492'] = func_492
mod = relay.transform.InferType()(mod)
mutated_mod['func_492'] = func_492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_492_call = mutated_mod.get_global_var('func_492')
call_493 = func_492_call()
output = call_493
func_494 = relay.Function([], output)
mutated_mod['func_494'] = func_494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_530 = relay.TupleGetItem(func_298_call(), 0)
call_531 = relay.TupleGetItem(func_299_call(), 0)
output = call_530
output2 = call_531
func_539 = relay.Function([], output)
mod['func_539'] = func_539
mod = relay.transform.InferType()(mod)
output = func_539()
func_540 = relay.Function([], output)
mutated_mod['func_540'] = func_540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_382_call = mod.get_global_var('func_382')
func_383_call = mutated_mod.get_global_var('func_383')
call_573 = relay.TupleGetItem(func_382_call(), 1)
call_574 = relay.TupleGetItem(func_383_call(), 1)
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
const_578 = relay.const([[4.530535],[-2.903417],[0.682479],[7.519406],[7.978399],[7.893052],[0.714127],[-7.471578],[-3.792455],[-9.454601],[-9.640762],[7.831075],[-7.463266],[4.726629],[1.469272],[-4.777741],[-5.993609],[2.282114],[-7.196298],[2.155297],[-7.865494],[2.088806],[-8.815266],[-1.811422],[-0.081687],[-4.099262],[-8.696182],[-5.643221],[-4.219998],[8.988007],[1.520850],[-3.776532],[-7.516852],[-7.661544],[-6.299488],[-2.537780],[-2.912825],[3.025300],[4.718298],[-1.961288],[-7.467086],[9.188616],[-4.625285],[3.603601],[5.002464],[-7.114688],[-9.232606],[-6.142558],[-5.734118],[9.170023],[-8.898538],[4.029556],[4.158369],[4.291463],[1.295919],[8.027220],[-0.141056],[-0.959539],[-3.875279],[9.493639],[-5.157830],[9.839417],[9.511622],[5.763058],[-2.509115],[-2.627118],[-2.147556],[6.426838],[-0.529395],[-8.184180],[-5.667546],[2.142539],[-9.942086],[7.621282],[-6.378103],[-9.794709],[-1.216299],[6.028043],[5.878398],[8.230304],[-7.104952],[1.140457],[-0.185839],[-8.436806],[8.080615],[-6.964890],[-6.075993],[6.130361],[8.335314],[-7.715352],[6.173740],[-2.878444],[-6.902003],[7.596446],[-3.515309],[0.554896],[1.582244],[7.532471],[2.023066],[-5.928207],[-4.136412],[4.107389],[1.576209],[-9.734350],[3.809020],[-9.598547],[9.314919],[4.472472],[-2.895735],[-0.336488],[8.925090],[7.227463],[-2.157175],[-6.010609],[8.363548],[-8.453598],[4.646243],[-4.171058],[-6.915992],[9.531933],[4.388703],[5.282128],[-2.683137],[-1.276018],[1.884008],[7.668096],[-1.595632],[1.115670],[8.637499],[9.139147],[3.384216],[5.098351],[5.063103],[7.257887],[-2.894957],[6.481319],[-6.184687],[-7.711604],[2.656300],[8.363297],[9.130416],[-6.716699],[-9.370345],[-3.382382],[6.259615],[-9.086629],[-4.930531],[-2.690118],[2.684199],[8.456654],[-7.619434],[-6.659243],[8.464209],[-5.677445],[6.504808],[-1.398027],[-9.549953],[7.245081],[-1.252687],[1.657763],[4.354633],[-2.261709],[3.041808],[6.262995],[-8.190368],[-5.223420],[5.495642],[5.759475],[0.794947],[-2.999880],[-3.449517],[-5.922862],[9.157844],[1.811384],[6.328173],[4.683087],[-0.167758],[-7.157514],[-3.294783],[-7.164200],[6.868087],[-9.951998],[9.612476],[7.084788],[8.176359],[-5.274993],[-9.754683],[-7.114762],[-2.011485],[-2.170126],[-2.691919],[-4.843776],[1.496768],[-4.676804],[-7.466326],[9.779912],[8.441840],[-6.081748],[3.711315],[-8.078459],[7.861568],[-7.386764],[6.094118],[4.963868],[-7.913067],[7.861340],[-9.119036],[7.534393],[0.886441],[3.239176],[4.465362],[9.568536],[-0.273499],[2.205608],[6.960920],[-4.534987],[-4.878954],[3.670070],[-9.709450],[0.392633],[-9.095698],[1.010010],[-5.694878],[-2.017584],[4.049024],[1.827467],[-2.362147],[7.115791],[1.656656],[7.496957],[-3.993207],[4.297054],[-2.868561],[-8.809855],[-1.180190],[-7.736926],[2.843206],[1.057480],[-7.873043],[9.765191],[6.494700],[-9.954490],[4.469827],[0.376623],[5.208593],[5.230032],[-4.994543],[-1.265238],[1.409850],[0.173486],[2.535001],[-1.031629],[-7.784403],[-0.567504],[-1.638060],[-1.822412],[1.825585],[8.330070],[-5.515181],[0.255887],[8.000098],[-3.720855],[4.075604],[5.054411],[7.062743],[-5.743954],[-4.719019],[9.507017],[-7.052528],[7.664539],[7.321852],[9.927868],[8.350727],[1.076064],[8.257914],[3.816540],[-0.932432],[-8.588288],[-5.756152],[-7.282170],[7.978822],[-8.171476],[-6.683241],[-8.409657],[-0.176942],[2.003515],[9.961814],[-4.051075],[5.102356],[-9.243322],[-6.432742],[-9.893901],[4.186289],[-9.442890],[-8.410390],[-4.871472],[-6.059854],[0.502584],[-1.879252],[1.098361],[2.313894],[9.436635],[2.486637],[4.956892],[0.307734],[5.978915],[5.651757],[-0.931852],[9.613979],[6.721535],[-2.266596],[0.943893],[-8.133268],[7.725835],[-5.381814],[4.628034],[4.584835],[-7.098397],[-2.985671],[8.105038],[5.922474],[9.097028],[-6.877527],[-4.858792],[7.465157],[9.433375],[5.128574],[-3.435640],[6.223730],[-5.975509],[-0.204924],[-4.670328],[-7.226763],[7.074349],[-9.696761],[8.117014],[1.941460],[1.643493],[-4.679040],[6.735571],[9.429761],[1.742626],[5.522858],[-8.177302],[9.465273],[-3.290836],[8.180530],[5.300353],[4.376750],[-4.930429],[-8.432098],[-7.135723],[4.833087],[9.010881],[6.448790],[2.460843],[-9.761776],[5.777984],[-9.564577],[-3.990568],[-7.346577],[6.204763],[0.554025],[-8.168524],[9.694637],[7.300206],[-5.935411],[-1.192177],[6.811460],[7.055548],[-6.985641],[0.741209],[-5.533818],[4.550066],[-7.334918],[-1.423464],[-1.029727],[-3.658516],[7.998909],[8.794144],[-7.192676],[-8.837190],[-5.114734],[-0.615823],[-5.269443],[-4.404259],[-3.393035],[1.637346],[-6.598041],[5.327672],[6.785346],[2.742939],[2.627871],[8.333457],[-5.126052],[-4.959879],[2.893748],[4.474234],[1.240788],[4.746355],[-3.360032],[-5.638554],[0.057452],[0.425912],[-5.396785],[8.036972],[-9.334391],[-9.961614],[-4.186680],[-5.334611],[-8.767935],[2.211576],[5.235945],[0.208170],[-4.770399],[0.122334],[-7.269372],[4.431982],[5.292590],[7.091284],[6.305346],[0.247245],[5.258992],[-3.070495],[-4.868862],[8.394339],[0.316718],[-1.870630],[8.425030],[2.642103],[6.468300],[-6.502362],[-5.184874],[9.991754],[-3.364109],[-7.336717],[9.897475],[-2.652386],[6.735072],[9.788089],[2.559215],[-5.538138],[7.914808],[-0.954232],[-5.557369],[4.678845],[-2.797780],[0.594993],[7.064599],[-6.311924],[0.063781],[-7.462919],[7.318626],[6.053069],[9.036118],[-8.302390],[5.961858],[2.849643],[5.267498],[-5.902848],[7.690456],[9.047281],[1.934802],[-1.788062],[-4.906903],[6.781622],[2.036611],[-7.288434],[-7.206832],[7.560962],[-2.538851],[-3.079581],[-4.055073],[3.902425],[2.375244],[2.008320],[4.233448],[-3.673014],[1.675366],[0.468291],[-6.675712],[8.553531],[-6.785395],[-0.092927],[-2.060914],[-6.406582],[8.341408],[-2.599397],[-5.076495],[3.826984],[7.138982],[-4.967031],[-5.553227],[-6.393187],[-3.969361],[8.569127],[-0.771497],[-4.744188],[-1.209903],[2.445051],[9.916059],[-1.993251],[-0.779137],[-4.541344],[-8.737609],[1.609064],[9.679871],[-3.229130],[-9.463549],[4.309492],[-9.428416],[8.316946],[-8.976026],[-0.362409],[-3.361196],[0.348927],[3.109713],[-1.745731],[-7.931788],[6.713842],[6.615580],[4.632564],[-5.258476],[-1.874806],[-7.135995],[3.429412],[-5.271389],[0.830250],[2.423302],[5.831612],[0.198965],[4.689062],[-4.660609],[-8.798299],[-2.433133],[8.661453],[-8.497647],[-3.270548],[-0.054490],[-0.842670],[7.797301],[-7.851422],[-7.441035],[-9.426194],[5.673190],[-6.567509],[-2.528035],[9.576509],[5.860395],[9.475095],[7.716740],[2.600889],[7.258791],[5.912795],[-7.269579],[-7.931803],[6.180749],[1.130135],[-7.555286],[9.386908],[-9.342056],[-8.708631],[8.688393],[9.332286],[-3.948962],[6.910848],[-8.742168],[7.254632],[-0.426968],[8.007286],[-5.418202],[-9.333003],[-1.154044],[-7.264364],[9.895139],[-4.470572],[3.218593],[-7.158581],[2.703018],[2.859088],[2.218056],[0.355640],[-1.718744],[5.229831],[2.861945],[8.549172],[9.951402],[-6.939552],[-0.524189],[-5.975808],[-0.867149],[2.755866],[-0.291723],[8.155392],[3.288164],[4.419875],[2.547646],[-6.932186],[4.440030],[-9.800881],[5.469671],[4.823954],[-8.558823],[-0.612082],[-1.259141],[-1.551610],[-4.480112],[-4.400792],[-5.379297],[-2.921947],[-5.586728],[-6.082337],[-9.521621],[9.795371],[-4.775742],[4.702130],[-9.783030],[-0.208184],[-0.877713],[4.557141],[-9.452615],[7.393082],[2.128729],[7.433206],[3.895160],[7.281663],[4.610056],[9.163129],[4.140559],[2.275981],[9.410546],[9.873818],[0.041845],[-9.750299],[-2.980831],[-3.458845],[2.360746],[9.600407],[4.447455],[-1.876769],[-5.219102],[0.922695],[6.081042],[-2.309653],[4.238877],[4.173679],[-4.470392],[-1.774577],[-0.616638],[6.385138],[-9.366020],[8.064884],[8.211729],[-6.553408],[3.458970],[-4.240617],[4.212417],[9.855628],[-3.294493],[3.415352],[-0.769155],[-3.746971],[7.858794],[-7.382029],[6.983743],[-4.906137],[-6.289720],[-3.223374],[7.182857],[-8.640085],[2.198786],[-9.611658],[-2.493958],[-8.567867],[2.137593],[3.136565],[-7.692685],[-4.038150],[-8.387595],[4.413182],[-1.693311],[-2.096403],[-8.072904],[8.810826],[1.057693],[-4.845513],[-2.161574],[9.284305],[8.801931],[8.268613],[7.596772],[-0.080770],[8.080616],[9.373889],[9.775182],[4.356815],[1.693946],[-8.859598],[-2.805615],[9.975952],[-2.541575],[9.117981],[-0.758255],[5.876876],[-8.088322],[2.786740],[0.825479],[4.994644],[-1.061668],[2.538569],[9.596943],[-0.275428],[-7.184532],[-4.003690],[-2.058885],[-8.638000],[-7.114299],[9.938809],[7.635088],[-7.304892],[0.375704],[4.313931],[7.332423],[5.950816],[-5.819726],[9.023436],[-1.716679],[-5.853594],[8.375761],[7.934179],[-1.657888],[-7.954551],[7.820621],[1.234752],[-3.453598],[-1.103891],[9.363137],[4.493807],[-5.843149],[7.301512],[1.816376],[1.290366],[-3.400294],[-2.678504],[-5.085571],[0.659706],[4.243484],[5.770841],[5.797382],[5.068584],[-8.505576],[4.815616],[-7.410244],[-3.613687],[-3.329129],[9.381695],[7.586806],[9.581723],[-5.389473],[1.024297],[5.006291],[0.660601],[-9.531498],[-6.535163],[3.694737],[4.324043],[6.075719],[-4.911090],[1.989305],[6.609461],[-7.383201],[1.132808],[5.848465],[2.323208],[-3.587113],[-5.921690],[7.298869],[3.608099],[9.526038],[1.947388],[2.743508],[-1.759359],[2.633366],[-2.817128],[-7.538624],[-8.407444],[-7.486977],[-1.071982],[-2.539884],[6.513107],[-4.483371],[1.830781],[1.732241],[7.488990],[-7.675117],[-3.737597],[1.048595],[-0.858330],[3.984073],[-5.751428],[-2.669178],[-9.446956],[-7.329711],[-8.798496],[-4.880845],[-3.272848],[-2.183053],[-9.376264],[-0.096167],[-2.635063],[-3.400356],[-1.993005],[8.339538],[-7.905252],[-1.746535],[-2.131273],[-7.551147],[0.259190],[2.772387],[4.961365],[-8.912115],[-5.689881],[2.462610],[-7.156063],[-1.003834],[-3.364884],[3.698764],[3.530382],[-0.794759],[2.614049],[-0.390508],[4.654113],[-1.591095],[2.955344],[3.363224],[0.079069],[-3.018383],[-9.969855],[-5.717348],[4.104118],[2.276363],[4.352762],[0.636208],[9.760109],[2.565931],[-7.070219],[7.039415],[-3.328622],[-4.844665],[7.556316],[-3.049230],[9.126428],[8.877535],[7.132467],[5.220125],[-9.075766],[-8.495047],[6.076331],[-7.651679],[8.782341],[-0.267647],[2.661272],[-9.239094],[0.565850],[-1.234954],[-8.844486],[-1.353287],[5.770023],[3.712314],[4.008041],[-0.912701],[3.178007],[-4.330483],[-3.521282],[3.769608],[-0.217611],[0.049085],[0.622223],[7.370980],[-9.581873],[-5.465547],[-4.558112],[3.512312],[-5.419098],[-9.764932],[1.172996],[1.989825],[-0.199763],[2.307446],[4.898860],[-5.625823],[-8.187725],[7.217721],[6.628297],[5.718558],[-1.202194],[-1.883854],[-4.663928],[0.277519],[-6.458749],[-6.951441],[-5.436816],[-7.260714],[3.299780],[3.356466],[6.964812],[-5.799136],[8.320770],[5.542665],[-9.786284],[-3.917845],[-1.313138],[-0.463794],[-7.996175],[6.108888],[9.586839],[-6.681052],[-2.744860],[-1.998063],[9.637587],[-2.965946],[-0.815738],[-5.031992],[-1.290661],[-7.372456],[-7.026772],[-3.454856],[-2.147692],[4.419808],[-5.636728],[4.527425],[4.633372],[6.949674],[4.714754],[6.872694],[6.434736]], dtype = "float64")#candidate|578|(936, 1)|const|float64
call_577 = func_64_call(relay.reshape(const_578.astype('float64'), [6, 13, 12]), relay.reshape(const_578.astype('float64'), [6, 13, 12]), )
call_579 = func_64_call(relay.reshape(const_578.astype('float64'), [6, 13, 12]), relay.reshape(const_578.astype('float64'), [6, 13, 12]), )
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
call_618 = func_64_call(relay.reshape(call_577.astype('float64'), [6, 13, 12]), relay.reshape(call_577.astype('float64'), [6, 13, 12]), )
call_619 = func_64_call(relay.reshape(call_577.astype('float64'), [6, 13, 12]), relay.reshape(call_577.astype('float64'), [6, 13, 12]), )
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_630 = relay.TupleGetItem(func_124_call(), 1)
call_631 = relay.TupleGetItem(func_125_call(), 1)
output = relay.Tuple([call_573,call_577,const_578,call_618,call_630,])
output2 = relay.Tuple([call_574,call_579,const_578,call_619,call_631,])
func_635 = relay.Function([], output)
mod['func_635'] = func_635
mod = relay.transform.InferType()(mod)
output = func_635()
func_636 = relay.Function([], output)
mutated_mod['func_636'] = func_636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_539_call = mod.get_global_var('func_539')
func_540_call = mutated_mod.get_global_var('func_540')
call_637 = func_539_call()
call_638 = func_539_call()
output = relay.Tuple([call_637,])
output2 = relay.Tuple([call_638,])
func_666 = relay.Function([], output)
mod['func_666'] = func_666
mod = relay.transform.InferType()(mod)
output = func_666()
func_667 = relay.Function([], output)
mutated_mod['func_667'] = func_667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_492_call = mod.get_global_var('func_492')
func_494_call = mutated_mod.get_global_var('func_494')
call_693 = func_492_call()
call_694 = func_492_call()
func_635_call = mod.get_global_var('func_635')
func_636_call = mutated_mod.get_global_var('func_636')
call_705 = relay.TupleGetItem(func_635_call(), 2)
call_706 = relay.TupleGetItem(func_636_call(), 2)
uop_718 = relay.rsqrt(call_705.astype('float64')) # shape=(936, 1)
uop_720 = relay.rsqrt(call_706.astype('float64')) # shape=(936, 1)
output = relay.Tuple([call_693,uop_718,])
output2 = relay.Tuple([call_694,uop_720,])
func_724 = relay.Function([], output)
mod['func_724'] = func_724
mod = relay.transform.InferType()(mod)
mutated_mod['func_724'] = func_724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_724_call = mutated_mod.get_global_var('func_724')
call_725 = func_724_call()
output = call_725
func_726 = relay.Function([], output)
mutated_mod['func_726'] = func_726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_793 = relay.TupleGetItem(func_124_call(), 0)
call_794 = relay.TupleGetItem(func_125_call(), 0)
var_795 = relay.var("var_795", dtype = "float32", shape = (11, 13, 13))#candidate|795|(11, 13, 13)|var|float32
bop_796 = relay.add(call_793.astype('uint16'), relay.reshape(var_795.astype('uint16'), relay.shape_of(call_793))) # shape=(11, 13, 13)
bop_799 = relay.add(call_794.astype('uint16'), relay.reshape(var_795.astype('uint16'), relay.shape_of(call_794))) # shape=(11, 13, 13)
output = bop_796
output2 = bop_799
func_807 = relay.Function([var_795,], output)
mod['func_807'] = func_807
mod = relay.transform.InferType()(mod)
var_808 = relay.var("var_808", dtype = "float32", shape = (11, 13, 13))#candidate|808|(11, 13, 13)|var|float32
output = func_807(var_808)
func_809 = relay.Function([var_808], output)
mutated_mod['func_809'] = func_809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_850 = relay.TupleGetItem(func_298_call(), 0)
call_851 = relay.TupleGetItem(func_299_call(), 0)
func_205_call = mod.get_global_var('func_205')
func_207_call = mutated_mod.get_global_var('func_207')
call_857 = func_205_call()
call_858 = func_205_call()
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
const_860 = relay.const([[-6.251203],[-6.886690],[-1.096675],[3.678748],[8.115220],[6.568979],[-8.962702],[-8.860403],[-5.532663],[-9.768711],[-0.332945],[0.031437],[-6.066379],[-9.417230],[-5.252495],[2.872486],[9.173529],[8.807079],[-9.258173],[6.795244],[4.571277],[1.501056],[2.433995],[0.202644],[-3.760265],[-2.526063],[1.042020],[9.496209],[-0.965039],[-4.774532],[-3.699754],[-6.194825],[6.809884],[1.072855],[-0.869565],[-0.972313],[8.391864],[-0.231501],[8.399319],[6.581149],[4.128300],[5.558964],[9.129089],[-8.432926],[-9.602414],[0.295144],[-6.081841],[-3.783185],[9.902974],[6.787999],[-5.430291],[-2.095921],[9.071223],[-9.659657],[-8.238773],[-4.031121],[-6.314380],[-2.644258],[5.916392],[5.886775],[-1.775785],[-2.756683],[-1.712398],[-5.002398],[-4.569942],[-9.452672],[4.691069],[-0.350013],[2.662251],[-7.360274],[-5.911449],[4.663955],[-6.629902],[2.795351],[3.840995],[0.052757],[8.943747],[-1.484078],[-9.689092],[3.781279],[9.818129],[-7.223343],[-7.799790],[9.327175],[2.438563],[3.117465],[7.238056],[-4.111450],[6.921803],[3.338886],[9.970296],[-0.361365],[-7.099906],[-3.537310],[3.842865],[5.033547],[9.825674],[-6.796131],[-3.601520],[7.794475],[3.187692],[-4.933075],[-2.853325],[-0.640711],[-5.557337],[-8.278105],[-9.111748],[-3.754826],[1.794366],[9.489432],[-8.026228],[9.172435],[-0.320799],[-5.937597],[-2.075500],[4.000703],[-4.200987],[-6.937427],[-1.752052],[-5.727533],[-5.232490],[-2.558142],[2.667876],[4.708490],[-1.659533],[-7.284488],[5.262958],[-8.423462],[5.454562],[-7.414908],[1.528678],[5.578444],[2.051890],[-1.390846],[-9.185343],[-0.420550],[4.304893],[8.976717],[7.554863],[1.106352],[3.110206],[0.576193],[-3.296293],[5.342820],[-5.366335],[5.461166],[3.762432],[9.233330],[-0.645229],[-6.887311],[0.610664],[7.338682],[-5.564491],[0.257058],[9.416481],[5.375479],[-9.230201],[1.219297],[-1.532861],[-7.039052],[-7.657470],[-9.118136],[-4.231285],[0.420144],[8.473779],[3.200169],[-3.035878],[7.774274],[1.357865],[5.780221],[-1.412249],[-6.875403],[7.277245],[5.592225],[-8.184403],[-5.476218],[3.113623],[-4.484886],[-1.326106],[-5.329328],[1.216936],[-1.923173],[-5.629196],[-5.178342],[9.389023],[-3.040210],[-4.086198],[-8.767985],[-1.806034],[-7.104351],[-6.341964],[1.153202],[7.806410],[5.997862],[5.053654],[-2.643762],[-8.274726],[7.458957],[-9.361596],[-4.657324],[5.008731],[9.975796],[8.653662],[7.453688],[1.536726],[-8.182564],[-0.295291],[9.197847],[6.004725],[3.888994],[-0.107026],[-3.714425],[0.838183],[8.256922],[0.930393],[9.570431],[-9.369678],[5.040932],[-0.645020],[1.269772],[-5.244826],[9.865069],[-1.122635],[-7.244898],[-4.872757],[-3.568425],[7.253111],[2.780319],[-6.618053],[6.983232],[-3.387394],[-0.409959],[8.525238],[6.599335],[-0.403289],[-6.293905],[-5.810775],[5.724492],[-7.968906],[2.889488],[-5.725621],[-3.143823],[-8.315992],[-7.428260],[-5.666710],[-5.566053],[-5.350730],[-4.219319],[-0.666406],[1.111026],[-7.449969],[8.575360],[-9.011567],[3.524450],[6.581634],[5.533653],[5.856906],[9.945473],[2.852259],[-1.563833],[3.766050],[-5.778786],[-5.502606],[-8.508775],[-7.966192],[3.133306],[8.854107],[-4.569693],[-2.726061],[-3.478524],[-8.284011],[9.361691],[8.878418],[5.179127],[-8.559326],[4.727093],[-7.812111],[9.350777],[-6.579252],[-7.053120],[5.935551],[1.344769],[-4.404555],[-1.469014],[-6.726288],[-1.119973],[-4.993737],[-2.295890],[9.941425],[-3.988893],[8.689257],[5.454447],[-1.052026],[-4.026704],[-2.487440],[4.880953],[3.916919],[-2.392393],[-3.218079],[-4.642347],[-3.822258],[8.008226],[-0.388066],[-3.017573],[2.073646],[0.258358],[-6.857143],[4.197606],[2.745910],[6.124226],[-8.999098],[4.771167],[-7.272195],[5.972425],[1.260584],[5.322730],[7.143760],[-2.696046],[-5.450788],[9.155082],[-3.676114],[-8.841880],[7.942267],[5.728147],[-9.122195],[0.660205],[4.595176],[-0.075635],[-6.154573],[7.676401],[7.878603],[7.567278],[5.309467],[-8.385535],[8.165250],[-7.179949],[-4.916819],[-3.583957],[-5.334489],[-8.439582],[1.275402],[2.164665],[-6.725395],[-3.270708],[1.858726],[-3.672106],[-2.446653],[4.401852],[-7.171113],[3.764146],[7.882010],[3.654493],[-3.249417],[-3.937158],[2.064003],[2.191449],[-9.617899],[2.140610],[-7.832842],[5.722768],[4.929442],[-6.086871],[-6.220269],[-3.121734],[0.883411],[-1.255733],[3.671536],[-2.437908],[4.723841],[-3.443462],[3.926743],[3.757950],[-7.548438],[9.495779],[-8.760077],[-3.727575],[-8.655873],[8.072549],[9.870401],[0.907815],[2.868740],[5.530081],[9.590964],[3.766025],[-9.491654],[0.919161],[2.499622],[2.528659],[-1.424716],[1.086058],[-4.137882],[-1.921535],[-4.463258],[8.969158],[3.505306],[5.208844],[-5.759751],[4.952127],[-3.838304],[-7.575616],[-8.694134],[1.418650],[9.121601],[7.357461],[5.408150],[-3.276948],[1.163770],[-6.302354],[8.398362],[8.863820],[4.638497],[3.238313],[0.047176],[2.217595],[8.332827],[0.782596],[-2.543408],[-9.499908],[5.543487],[0.259639],[-1.227308],[-8.477569],[-2.250147],[6.687904],[-2.363426],[9.488383],[7.487841],[4.458068],[1.181305],[8.444914],[3.655750],[9.538140],[3.581858],[3.039446],[2.033307],[5.636226],[-7.464636],[5.630671],[-5.330276],[-7.520410],[0.150122],[-5.380033],[9.883014],[-0.218669],[0.684836],[4.673964],[-0.781364],[-4.605265],[-2.066160],[-5.016110],[-7.095272],[5.675896],[-4.109111],[5.392846],[-0.949338],[1.103811],[5.683484],[-1.001965],[-7.623108],[-5.715968],[-8.555192],[-2.586797],[-1.732273],[-0.904146],[-0.380613],[-1.090866],[-9.191896],[0.085056],[4.863665],[-1.562795],[3.818862],[5.133369],[2.644443],[6.750129],[-9.031648],[7.612831],[7.952515],[5.363846],[-9.592602],[2.919999],[1.085467],[1.866150],[0.566622],[-8.537934],[-0.307681],[-9.157060],[-4.913835],[-0.475378],[-3.270252],[4.836538],[6.007079],[6.253863],[-1.322471],[-3.967279],[0.925075],[8.010224],[-4.397373],[-1.868831],[-1.873385],[-7.957472],[4.788054],[-7.523943],[-2.714805],[-5.955882],[-6.487395],[-9.060946],[-1.168966],[-1.297399],[-2.800680],[-9.618784],[-8.749441],[-3.955004],[-9.412885],[2.745321],[7.780129],[6.962112],[-6.532521],[9.403495],[4.880761],[8.672490],[0.828337],[3.980470],[-5.909923],[0.840763],[3.140852],[-1.442779],[4.433572],[-9.253107],[9.927332],[-2.869866],[8.582466],[-0.408007],[6.794283],[-0.204323],[1.188737],[-8.200791],[6.855073],[-9.879335],[-8.740211],[4.767036],[7.627857],[0.749265],[-9.574994],[9.705305],[2.544033],[3.138771],[4.469862],[0.596680],[5.165703],[1.091123],[8.287371],[9.801076],[-4.062208],[-3.952521],[9.641547],[-2.702909],[2.488660],[-3.558177],[1.275732],[-6.123588],[4.523433],[9.615488],[8.445702],[-7.643415],[-5.526530],[8.316279],[5.541956],[3.132856],[-3.420518],[-4.806213],[2.762995],[3.622949],[0.658217],[-7.330941],[1.529796],[1.897624],[-2.022982],[5.626123],[2.009516],[-4.674016],[-7.073114],[-3.896993],[8.549545],[0.511635],[5.720582],[2.670022],[-3.274363],[-2.891205],[-8.824428],[-8.796828],[9.160213],[5.177821],[-9.584552],[9.185015],[-1.897567],[3.576016],[9.129587],[-5.651208],[8.678360],[-9.752440],[-3.397705],[9.430399],[-8.074897],[-6.248429],[3.554653],[-9.011173],[-2.277077],[-4.385709],[3.898780],[6.458050],[-9.546684],[-5.542099],[-7.561429],[-1.190112],[-8.779824],[-3.076394],[-9.501137],[2.100551],[4.657320],[-9.777814],[-5.256705],[1.958426],[-1.836195],[4.504893],[6.843164],[0.062651],[9.883227],[4.484250],[-3.473485],[-7.301436],[9.723063],[7.657536],[-8.370061],[-8.477416],[-6.911376],[-1.411664],[-1.406592],[-1.405051],[-2.569660],[-6.327703],[-2.384600],[4.569869],[8.213638],[2.487766],[-3.481030],[-1.490344],[-8.521461],[7.294836],[-4.413285],[8.282985],[-1.366967],[5.575331],[8.715624],[7.797140],[4.198432],[-0.027677],[7.027206],[5.828635],[-3.489646],[9.363108],[-8.298116],[-0.908484],[0.968675],[-4.137206],[-1.333619],[9.919889],[7.804136],[2.497987],[-2.492624],[-4.292752],[-3.780324],[0.982447],[-6.051978],[-3.036267],[9.161986],[8.839887],[2.176353],[-0.953598],[-4.663367],[-3.839088],[-6.358746],[5.346710],[-7.533824],[7.670541],[-5.808883],[-7.077725],[-9.612872],[-0.709691],[-7.762585],[4.495405],[-4.356491],[-4.489556],[9.280020],[0.752587],[1.708656],[-6.202419],[4.790872],[4.630991],[-2.910546],[-3.619217],[2.224842],[2.574245],[-9.543396],[-1.947517],[-1.450849],[-7.369039],[9.204723],[-7.679779],[2.203325],[-8.353266],[1.873022],[0.015163],[-6.897481],[-3.519826],[7.569182],[3.301448],[6.402199],[-5.006421],[2.857179],[-5.380521],[-5.906752],[-6.955572],[0.703873],[-3.349289],[-5.626624],[4.652664],[9.940753],[-9.339507],[-9.750682],[-4.183422],[6.216856],[-8.807460],[-1.920043],[-7.899250],[8.866422],[2.781726],[4.952932],[4.953790],[-1.517140],[-7.086936],[-9.579232],[-8.036194],[-6.096282],[-8.821424],[7.436335],[-7.816095],[-5.685490],[4.452679],[6.116006],[-3.126322],[6.442393],[-6.935921],[-5.628107],[3.041721],[-5.405045],[1.315935],[-0.246092],[-3.974138],[6.498028],[4.658531],[-3.837954],[0.779807],[-8.903509],[5.440012],[4.944102],[-9.922245],[-8.573613],[7.363249],[0.422600],[5.848522],[-6.031847],[-0.256149],[7.301886],[6.010966],[6.947537],[0.965743],[-7.115736],[2.840222],[-8.303345],[-7.323102],[-3.407307],[-2.158245],[-7.476592],[6.157406],[-0.319261],[9.385227],[-8.332043],[1.760401],[-3.760001],[-1.745111],[4.398646],[2.831299],[-2.582576],[-8.722167],[-2.543417],[-9.566919],[-0.542388],[3.756358],[8.771483],[-6.798770],[3.194703],[-3.886927],[6.699162],[8.351408],[8.118717],[-0.782577],[-0.455688],[-4.474746],[-0.483648],[9.166924],[-1.701715],[3.562654],[-0.885031],[2.387611],[-8.594771],[6.620167],[0.682615],[7.543903],[-2.201187],[-2.227384],[-7.635315],[-0.766251],[9.460247],[3.804177],[-9.869309],[-5.252581],[4.607741],[2.363324],[-5.660969],[7.361151],[-7.581574],[-7.113452],[-2.150397],[-8.549498],[0.703865],[-3.045115],[0.093874],[-8.488066],[-1.818984],[-1.608182],[-4.346252],[2.634521],[8.425834],[5.032880],[8.884453],[-4.409898],[7.576096],[0.086175],[-9.457904],[-8.149886],[-8.279906],[4.829350],[-8.540859],[-2.649778],[1.828467],[8.843220],[3.481014],[2.901661],[1.246619],[-1.603476],[9.304077],[-9.674190],[-2.460268],[5.400217],[6.116706],[-8.302535],[-5.804213],[-7.922713],[6.044352],[7.108872],[0.015536],[-7.654041],[2.987233],[5.067439],[-6.607545],[1.678671],[-6.619044],[-0.446544],[5.865675],[5.025748],[-6.859780],[2.333173],[6.214749],[1.751763],[-3.884143],[-5.707186],[4.871856],[3.290940],[-5.167105],[6.964728],[-3.343012],[7.744619],[-5.718639],[9.744856],[3.815322],[-3.791438],[-8.723405],[-5.563769],[4.676417],[-3.150848],[7.002298],[-9.403997],[0.568646],[7.586137],[-8.984232],[-7.516892],[-3.910791],[-2.230221],[-4.198942],[-6.948315],[-7.792820],[6.771079],[-5.022994],[1.191471],[6.081371],[-3.877625],[-9.371626],[1.553089],[-3.294729],[8.489486],[9.644906],[2.290276],[8.824037],[-1.905923],[-7.968861],[5.173377],[6.444840],[8.282960],[8.512980],[-2.560260],[3.711862],[3.074227],[6.673402],[7.447718],[1.199279],[-4.342671]], dtype = "float64")#candidate|860|(936, 1)|const|float64
call_859 = func_64_call(relay.reshape(const_860.astype('float64'), [6, 13, 12]), relay.reshape(const_860.astype('float64'), [6, 13, 12]), )
call_861 = func_64_call(relay.reshape(const_860.astype('float64'), [6, 13, 12]), relay.reshape(const_860.astype('float64'), [6, 13, 12]), )
func_382_call = mod.get_global_var('func_382')
func_383_call = mutated_mod.get_global_var('func_383')
call_862 = relay.TupleGetItem(func_382_call(), 1)
call_863 = relay.TupleGetItem(func_383_call(), 1)
uop_865 = relay.cosh(call_859.astype('float32')) # shape=(6, 13, 12)
uop_867 = relay.cosh(call_861.astype('float32')) # shape=(6, 13, 12)
uop_877 = relay.asin(uop_865.astype('float64')) # shape=(6, 13, 12)
uop_879 = relay.asin(uop_867.astype('float64')) # shape=(6, 13, 12)
func_492_call = mod.get_global_var('func_492')
func_494_call = mutated_mod.get_global_var('func_494')
call_891 = func_492_call()
call_892 = func_492_call()
output = relay.Tuple([call_850,call_857,const_860,call_862,uop_877,call_891,])
output2 = relay.Tuple([call_851,call_858,const_860,call_863,uop_879,call_892,])
func_893 = relay.Function([], output)
mod['func_893'] = func_893
mod = relay.transform.InferType()(mod)
mutated_mod['func_893'] = func_893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_893_call = mutated_mod.get_global_var('func_893')
call_894 = func_893_call()
output = call_894
func_895 = relay.Function([], output)
mutated_mod['func_895'] = func_895
mutated_mod = relay.transform.InferType()(mutated_mod)
var_946 = relay.var("var_946", dtype = "bool", shape = ())#candidate|946|()|var|bool
var_947 = relay.var("var_947", dtype = "bool", shape = (13, 13, 2))#candidate|947|(13, 13, 2)|var|bool
bop_948 = relay.logical_or(var_946.astype('bool'), var_947.astype('bool')) # shape=(13, 13, 2)
func_327_call = mod.get_global_var('func_327')
func_331_call = mutated_mod.get_global_var('func_331')
var_962 = relay.var("var_962", dtype = "int64", shape = (120,))#candidate|962|(120,)|var|int64
const_963 = relay.const([[-5,4,-5,-8,3,-5,1,5,7,-8,-10,2,7,7,-2,-5,-9,2,7,2,-1,-8,9,8,-5,10,5,3,2,5,6,-2,8,10,-3,7,7,10,-9,4,5,1,-6,1,-6,-3,-6,-7,10,-2,-2,-10,-6,-7,-9,3,4,1,8,-9,8,-7,10,1,-3,-6,-3,4,-7,6,-1,-1,3,-7,3,7,2,8,-8,-4,9,8,6,-1,4,-10,-8,-1,2,2,-6,9,-3,-9,-5,3,-1,-7,-4,2,8,4,3,-7,-3,-10,-9,6,7,2,8,-7,-6,-6,3,-10,-9,8,-10,-7,-3,-4,10,-4,-7,9,2,4,8,-2,-9,-3,7,-2,-6,3,-8,4,9,2,-4,1,9,-6,7,-10,-10,-5,-4,-5,-6,2,5,1,-3,2,-6,-1,-8,3,-5,-10,-6,2,-3,-4,5,-4,-1,-6,10,10,-9,-10,-10,-2,6,1,-8,5,10,-2,-5,-7,3,-9,-1,8,1,-9,-1,-5,-3,-2,-9,-2,-6,6,-5,6,-6,9,-3,9,5,5,9,6,6,10,-4,-6,1,10,3,-3,10,-8,9,6,-5,3,-1,-3,6,6,-10,-8,4,-4,-3,-8,9,5,3,-5,4,-4,6,6,3,-1,4,-1,-7,-5,-3,5,-1,3,4,4,-5,-5,-6,-4,2,-1,5,5,8,-2,3,5,8,7,6,-1,10,4,6,-4,-3,3,6,10,7,4,-1,-5,-7,-2,6,5,-9,1,-9,4,-7,-10,6,-6,3,-5,9,7,2,10,-5,3,6,-9,-8,-8,9,-9,-1,-8,-5,1,2,-3,-7,4,9,-6,-3,1,10,-8,9,-6,2,-7,8,4,-5,-6,-9,-4,2,-3,-9,-8,-8,-9,-4,9,8,7,-1,-8,8,-1,-6,7,-7,5,-7,-6,-7,-3,-10,1,6,6,10,6,-7,7,1,3,4,-5,-9,5,-6,9,1,-5,-9,-6,4,7,8,7,5,9,-8,-10,7,-4,-6,-8,4,-5,6,-2,-3,4,-10,-5,2,4,-10,6,-2,10,-5,6,-2,2,2,10,10,9,4,-5,-7,6,-3,-5,-3,4,3,-9,1,-5,-5,8,-9,-7,10,9,1,5,8,-1,-4,10,7,4,-1,10,-4,-3,-7,5,-4,-3,10,1,7,-10,8,-8,-1,2,-3,-10,-3,9,-7,7,9,-6,-9,8,10,-7,-1,-3,9,-6,10,-9,-3,4,3,9,3,-4,4,-8,-3,3,2,-8,-1,-3,-2,-3,3,5,1,1,-1,6,-6,-2,-3,-2,-8,8,-5,-10,7,4,-3,5,2,7,10,1,-2,-4,-7,-10,9,6,-2,2,10,-7,-4,-6,-10,-2,-6,6,-7,3,-1,8,-4,5,-1,-3,-5,-3,-7,-7,-1,9,3,7,8,-5,4,10,-8,-4,-3,9,1,7,2,-7,3,2,1,-8,-1,9,-6,5,-5,-4,-8,-4,-8,9,5,3,-9,-5,-4,3,-8,3,3,-10,7,-7,-9,-5,4,-7,9,-8,-4,-1,8,6,-8,9,-8,-10,-7,1,-9,-2,-2,1,-10,-10,-4,5,-6,-7,3,-6,7,6,-6,-9,-5,8,-4,7,-10,8,-1,-5,7,1,-9,9,-6,9,3,-7,-3,-6,-5,-10,-1,10,-5,-8,8,2,-10,-3,-7,-8,-4,-9,-1,-3,7,5,6,-1,-10,-3,2,-6,-6,9,-5,2,-6,-6,5,5,-5,-3,6,1,-4,-6,8,9,3,7,-8,7,9,3,3,7,8,10,-3,2,5,-6,-2,-9,6,4,5,8,-3,8,-10,-7,-3,4,9,-5,-6,9,5,-4,4,-5,-9,2,5,-9,5,3,2,3,-5,-8,-9,-10,7,-5,2,-9,-4,-3,1,4,-8,3,4,5,-4,10,-10,-8,-6,7,5,-9,6,-10,5,-2,-2,-7,1,-8,5,-8,8,-3,1,2,-7,-4,6,2,7,6,-9,8,7,6,-3,6,-2,-8,8,-8,-5,-7,-6,4,-3,5,-5,3,-8,-3,-5,4,7,-10,-4,-1,-1,-9,7,2,-4,-3,1,-1,5,2,3,9,8,7,10,-10,-6,9,10,3,-10,5,10,-2,1,9,2,6,-1,-3,-8,-1,-1,6,-4,7,5,7,1,-4,-3,-8,3,6,-4,-5,1,-7,-8,4,-3,-8,-7,6,4,2,-5,4,-2,-9,7,-9,10,1,-10,-2,7,3,-2,-4,1,4,4,-3,8,3,6,4,-9,-7,-9,3,-6,-2,9,5,-9,5,8,-10,-10,2,6,-3,10,-7,9,-6,8,3,3,-7,-8,-8,10,5,-2,5,2,4,-10,-4,10,-3,-8,-8,-4,-5,-7,3,10,5,-4,9,-2,1,-3,10,4,4,10,3,6,10,-1,-9,10,3,8,-1,7,2,-6,-3,-6,2,-8,-1,5,8,-4,-6,-2,-8,1,1,-3,7,-7,-10,9,10,7,4,3,-7,-10,1,2,-2,-3,10,-10,-5,-9,-2,9,8,5,9,5,-7,8,6,-9,6,5,-8,-5,2,2,-2,5,-6,-3,8,-10,2,-5,2,9,6,4,-7,-8,10,-2,-10,4,7,10,7,2,-10,2,-1,-7,-2,-10,7,9,-10,2,8,-4,7,-2,-4,8,1,5,8,8,3,3,10,9,-3,-7,-9,9,7,-2,6,-6,-7,-1,-4,-9,9,-7,3,6,-7,10,8,-5,1,-9,-7,-5,7,-3,5,6,-3,-2,8,-4,-4,4,4,-8,-5,1,1,8,2,-9,-3,-2,9,-3,-1,-4,3,-7,-5,9,2,-6,6,3,7,-4,8,-7,9,5,-8,6,-7,6,10,4,5,-4,-3,-6,10,1,5,6,9,-3,10,-8,-2,1,-10,-3,4,-6,6,-9,4,-6,-7,5,6,3,-9,5,5,-5,-10,2,6,2,1,-10,-1,-6,-1,-6,-8,4,-10,-9,4,2,2,9,1,4,5,9,-2,-6,-5,-1,3,-2,-4,-8,7,-4,3,9,-5,5,6,-7,10,-5,-8,-10,4,2,5,8,-9,10,-6,-5,1,10,-6,8,-2,1,-9,-9,-4,-3,-2,-10,-3,-4,-9,-9,-10,10,10,2,-10,10,-3,-4,-1,-6,8,-5,-6,2,-7,-10,4,3,-7,-3,-7,8,-3,8,1,-8,-10,4,1,5,-8,9,4,-5,-6,-10,3,-4,2,10,-6,4,1,-3,-3,4,-1,3,-4,8,9,6,6,10,-2,3,1,3,5,-8,-4,10,-7,3,-5,3,7,-8,9,-2,8,-8,-3,3,-7,-6,3,-6,-3,2,-10,-2,4,1,-7,2,-10,-6,-3,3,-10,-3,-7,3,-8,7,-10,4,-10,5,7,3,-10,-10,-8,5,4,-10,6,2,-8,1,-10,10,-1,-7,4,8,1,-7,3,-8,7,-9,-1,7,1,-5,-7,1,2,8,8,-10,-8,-7,-8,-9,2,7,2,-3,6,-6,-5,-10,-4,2,8,2,-8,6,-5,10,6,3,5,-1,-5,1,3,-8,-2,1,-2,-6,2,-6,-1,-4,-6,-5,2,2,-2,-9,6,1,8,10,5,-10,-9,1,5,-7,2,-1,-7,-2,-6,3,8,10,8,-6,7,9,4,-6,-7,9,-6,-6,5,-1,8,-5,-9,-4,6,-9,8,8,8,-3,8,4,4,6,-7,2,-10,4,1,-8,10,9,3,-1,1,6,6,3,2,-1,6,-6,2,8,10,2,1,-9,9,7,-2,9,-5,-9,-2,5,8,4,3,-3,8,-6,-7,5,-3,-5,-5,4,-7,-6,5,-6,-5,3,2,3,-3,9,2,-7,-6,1,-7,1,7,-2,9,7,8,-1,8,-10,-5,-3,5,-3,2,-4,8,-4,5,9,-6,7,6,4,-6,-5,7,7,7,5,-5,-8,-4,-9,-8,2,-5,-10,1,-5,10,7,7,1,5,3,3,-4,-4,6,1,8,9,9,3,6,-5,3,8,-7,-8,-4,2,7,-10,1,-3,7,8,3,-1,5,3,-9,-1,-5,-9,-9,-8,10,-9,9,-10,5,4,9,8,-3,-3,-3,1,3,-8,2,9,6,-2,2,-1,2,-5,-3,7,4,-10]], dtype = "int64")#candidate|963|(1, 1560)|const|int64
call_961 = relay.TupleGetItem(func_327_call(relay.reshape(var_962.astype('int64'), [15, 8, 1]), relay.reshape(const_963.astype('int64'), [15, 8, 13]), ), 1)
call_964 = relay.TupleGetItem(func_331_call(relay.reshape(var_962.astype('int64'), [15, 8, 1]), relay.reshape(const_963.astype('int64'), [15, 8, 13]), ), 1)
func_242_call = mod.get_global_var('func_242')
func_244_call = mutated_mod.get_global_var('func_244')
call_965 = relay.TupleGetItem(func_242_call(), 0)
call_966 = relay.TupleGetItem(func_244_call(), 0)
output = relay.Tuple([bop_948,call_961,var_962,const_963,call_965,])
output2 = relay.Tuple([bop_948,call_964,var_962,const_963,call_966,])
func_980 = relay.Function([var_946,var_947,var_962,], output)
mod['func_980'] = func_980
mod = relay.transform.InferType()(mod)
var_981 = relay.var("var_981", dtype = "bool", shape = ())#candidate|981|()|var|bool
var_982 = relay.var("var_982", dtype = "bool", shape = (13, 13, 2))#candidate|982|(13, 13, 2)|var|bool
var_983 = relay.var("var_983", dtype = "int64", shape = (120,))#candidate|983|(120,)|var|int64
output = func_980(var_981,var_982,var_983,)
func_984 = relay.Function([var_981,var_982,var_983,], output)
mutated_mod['func_984'] = func_984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_635_call = mod.get_global_var('func_635')
func_636_call = mutated_mod.get_global_var('func_636')
call_1036 = relay.TupleGetItem(func_635_call(), 3)
call_1037 = relay.TupleGetItem(func_636_call(), 3)
func_327_call = mod.get_global_var('func_327')
func_331_call = mutated_mod.get_global_var('func_331')
var_1053 = relay.var("var_1053", dtype = "int64", shape = (120,))#candidate|1053|(120,)|var|int64
const_1054 = relay.const([9,-6,-5,-2,-5,-2,-10,3,-10,10,-8,3,4,-1,2,10,5,2,4,-3,-5,-8,-4,2,7,-9,-2,-2,-4,3,-8,-1,1,-3,7,6,2,9,-4,-7,-3,-8,1,-1,3,-2,7,4,-9,4,4,8,-1,-2,-9,8,9,9,5,4,-4,-9,-2,-10,9,-6,4,-10,10,2,3,1,5,10,10,10,-2,8,3,6,-3,-6,4,-2,8,-4,-5,2,7,-3,-8,2,3,8,7,7,-4,-7,-7,-5,-6,-7,-7,2,-3,-2,8,-2,3,7,4,2,-7,8,-1,-10,-5,-7,-5,6,-3,-10,-4,4,-4,9,-4,-6,1,4,7,8,-10,6,-3,-3,3,-9,-6,2,3,6,4,8,-5,7,6,-8,2,2,-6,-4,-8,4,6,-4,9,6,-5,9,5,-4,3,9,-3,1,-8,8,7,-2,10,-2,9,4,-10,-3,-3,10,-8,3,2,3,-8,7,-3,-10,6,-5,10,8,6,-9,-10,-7,5,-2,-4,8,7,9,4,-4,3,-5,1,-5,7,-8,-10,-5,-4,4,3,-2,-7,10,-2,2,-6,-8,-2,-7,-6,8,-9,3,-4,-1,-8,7,6,7,-4,1,5,8,-2,-10,10,-4,-3,-2,3,3,-8,9,10,2,-4,-5,-2,-10,-7,-1,-10,-8,2,-9,-5,8,-3,-7,-4,6,-2,1,-3,8,-3,9,-4,6,6,2,-8,-7,1,3,-3,-5,9,8,-9,3,7,-5,10,-8,-9,-10,-3,9,10,-1,-4,-7,4,-4,-4,-7,1,-2,5,9,-2,-4,-5,1,6,8,8,-2,3,-5,5,7,-6,-8,1,-7,-6,8,-4,7,-8,-10,10,-9,10,-1,-8,4,9,6,-9,1,-4,9,5,-9,-10,-1,5,-5,-6,1,-7,9,-6,6,-10,3,5,5,7,-6,5,7,-7,-4,-9,10,-1,-3,-6,4,-5,1,10,-1,9,6,-5,5,-5,9,-5,1,-10,3,-1,-3,8,6,9,7,-7,4,-5,-3,8,-6,1,-9,2,-6,-10,1,2,-8,-7,2,7,5,7,-2,-2,-7,6,3,-7,10,9,-5,-1,3,-9,1,3,8,7,-4,-10,1,7,3,4,-3,-7,3,3,-5,1,8,3,3,-6,9,7,2,-6,10,-8,-3,1,-2,-2,-7,-2,-8,-1,-5,5,4,3,-8,1,-9,8,6,7,-8,-5,-5,-9,4,-3,8,-4,-2,8,-6,-5,-10,8,-6,3,8,-8,5,-6,-7,7,-7,-8,7,-8,-5,-9,-9,10,-4,1,9,6,7,4,-1,1,-1,8,3,1,10,-2,9,-6,4,-6,7,8,4,-7,-2,-2,7,1,5,-9,-3,5,4,-8,9,3,8,9,5,6,4,2,-9,3,-4,10,-5,3,8,-10,-7,-6,-6,6,1,-1,-1,8,6,3,-4,-9,-10,8,6,-9,-1,-8,10,-8,-8,-7,2,9,7,-7,-7,-9,1,-6,-5,9,-2,1,-3,-2,-10,1,4,-1,2,-3,-6,-7,-10,-7,-10,1,5,1,-2,10,1,5,1,-6,6,3,4,1,3,-10,-6,4,-2,-9,9,6,1,5,7,-7,3,-5,10,-2,5,7,-3,-3,9,9,3,5,-9,6,-2,-9,2,3,-1,4,-6,-9,5,2,-6,-9,-8,-3,-5,-3,1,-3,7,5,-10,5,-2,-5,-8,9,9,3,4,-2,-4,-7,6,-7,9,-10,1,-5,2,9,6,-4,-8,2,-10,3,9,8,-2,-8,-9,10,-6,4,-4,7,-3,-4,-7,-2,-1,2,5,-5,9,9,-4,7,-3,-7,3,6,-9,8,-7,5,-7,5,-1,2,6,7,10,9,6,-2,-1,7,-9,8,-7,-3,1,8,-2,3,2,7,5,-5,3,-2,-6,-6,3,-2,-6,7,-4,-1,-5,-4,6,9,9,-2,1,-1,-2,5,-1,-10,-3,6,1,-6,6,5,3,-3,8,-9,1,10,-4,-1,-4,-4,7,6,1,-6,4,-7,5,-3,7,-6,9,4,-10,2,5,9,-8,-1,9,-4,-1,3,-2,3,-8,10,2,3,-10,-4,-1,-6,-1,7,-8,-4,3,7,4,9,-6,1,4,1,-1,8,9,-10,-2,-2,-10,-9,6,2,-5,-3,-1,-2,10,-6,8,2,9,10,1,-4,-8,7,1,3,-10,9,-1,-4,-4,-10,8,10,6,-9,-1,9,5,1,-5,2,-1,7,-3,2,3,2,6,9,1,10,-2,-1,-4,3,-9,5,9,3,-2,1,-9,-9,4,-6,5,-9,4,3,4,-7,4,-4,-3,7,2,-3,1,-7,-9,2,-10,10,-10,-3,-1,-7,4,10,-8,5,4,-2,-9,4,3,-1,-8,8,5,2,2,3,-3,-5,1,-3,-9,2,6,-7,3,-2,10,6,-1,-5,2,-3,2,-5,10,-8,5,-1,7,9,-8,8,3,7,-6,1,10,-10,1,-7,-5,4,-6,-10,2,2,2,-2,-6,3,1,8,5,8,-7,-9,-8,2,-7,-7,-4,3,-9,-5,3,-4,9,10,2,-3,10,9,4,-4,-8,2,-9,9,9,2,-1,8,8,5,-3,9,2,-3,-1,-9,-9,-10,5,8,-5,-8,9,-6,4,-7,2,4,5,-10,6,7,10,6,9,1,-4,-8,-7,-10,-8,1,6,-1,3,-7,-9,-6,2,-6,4,4,-10,-3,-9,-9,-3,-6,-6,-7,-6,-9,9,-8,5,-5,-3,1,3,2,8,-10,2,9,3,-8,-4,-6,2,5,7,-8,-1,6,4,8,9,-4,-6,-2,3,-9,-9,-10,-10,10,-7,10,9,1,-3,-9,9,-7,8,-3,9,8,9,-1,-4,-6,9,-6,3,-6,-6,-1,8,-1,7,-7,-8,-6,-2,-3,6,-5,7,-7,-1,-7,6,4,-7,-10,1,-3,-4,-5,6,3,1,-10,3,9,10,1,-5,2,9,10,-1,10,-4,4,-5,3,-8,4,-2,-5,8,-8,10,9,-4,-9,4,2,4,-1,4,-7,-8,-4,-2,1,-5,-7,3,-2,6,3,3,-9,3,8,-3,10,5,-2,-4,-1,5,2,3,-4,9,9,7,1,-10,-7,-5,6,4,-7,2,5,-5,7,3,6,-1,4,-3,-7,-3,7,5,7,1,8,-3,3,2,-5,1,8,6,-1,-8,-3,-5,10,2,-7,-1,-8,-10,2,1,8,9,-6,-8,6,-5,9,-7,-10,-4,4,4,2,5,5,-5,9,-8,9,-4,-2,-3,-1,-9,1,-1,-1,-1,8,-10,3,5,7,9,-1,-2,5,3,-6,-8,8,-4,-4,-3,-10,-7,-6,4,-8,-3,9,-2,-1,-10,-9,-3,-8,5,1,-6,9,-3,8,10,2,4,9,4,1,6,-2,7,8,-4,10,-8,-5,-5,8,-8,-1,2,6,-1,-1,9,7,-5,-1,-2,1,1,-2,-9,-4,-3,-7,6,-2,-4,-3,6,2,3,-2,-2,8,9,10,2,-4,10,9,-7,-2,-2,6,4,-1,9,5,-6,-7,-3,-2,-4,10,-10,-9,-10,9,-5,-1,-3,8,-4,7,6,-7,-4,3,-7,-9,2,3,-8,-3,9,4,4,8,-6,10,-1,-2,5,-1,8,7,-10,9,7,3,-6,10,8,8,2,-8,4,-8,-5,9,-10,3,-1,10,-6,3,-9,-10,8,-2,7,-3,-10,-7,-9,8,5,1,-4,1,7,2,7,-4,-1,5,-8,8,-9,-1,-3,10,-10,3,6,-4,10,-9,-9,1,-1,7,-7,5,1,-6,7,-2,9,-3,-1,-7,4,-7,-9,2,-7,9,-5,1,2,-2,-3,8,-2,-8,9,-2,-1,5,-7,10,-7,9,-5,9,8,-8,8,3,-8,-2,6,9,3,7,-2,-6,-8,-2,5,-10,-5,-4,-6,-2,7,3,-8,-3,8,-4,9,-9,7,9,3,5,-2,2,5,4,9,-7,10,1,10,-8,5,5,1,2,-7,-3,-5,7,-8,-1,-8,6,-10,6,2,6,-1,7,-7,7,7,5,4,3,-4,-1,-5,-8,5,3,-8,-3,4,-3,3,6,-10,6,-2,-8,-1,7,-7,1,1,-9,6], dtype = "int64")#candidate|1054|(1560,)|const|int64
call_1052 = relay.TupleGetItem(func_327_call(relay.reshape(var_1053.astype('int64'), [15, 8, 1]), relay.reshape(const_1054.astype('int64'), [15, 8, 13]), ), 0)
call_1055 = relay.TupleGetItem(func_331_call(relay.reshape(var_1053.astype('int64'), [15, 8, 1]), relay.reshape(const_1054.astype('int64'), [15, 8, 13]), ), 0)
func_666_call = mod.get_global_var('func_666')
func_667_call = mutated_mod.get_global_var('func_667')
call_1058 = relay.TupleGetItem(func_666_call(), 0)
call_1059 = relay.TupleGetItem(func_667_call(), 0)
output = relay.Tuple([call_1036,call_1052,var_1053,const_1054,call_1058,])
output2 = relay.Tuple([call_1037,call_1055,var_1053,const_1054,call_1059,])
func_1060 = relay.Function([var_1053,], output)
mod['func_1060'] = func_1060
mod = relay.transform.InferType()(mod)
mutated_mod['func_1060'] = func_1060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1061 = relay.var("var_1061", dtype = "int64", shape = (120,))#candidate|1061|(120,)|var|int64
func_1060_call = mutated_mod.get_global_var('func_1060')
call_1062 = func_1060_call(var_1061)
output = call_1062
func_1063 = relay.Function([var_1061], output)
mutated_mod['func_1063'] = func_1063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_893_call = mod.get_global_var('func_893')
func_895_call = mutated_mod.get_global_var('func_895')
call_1092 = relay.TupleGetItem(func_893_call(), 4)
call_1093 = relay.TupleGetItem(func_895_call(), 4)
func_437_call = mod.get_global_var('func_437')
func_441_call = mutated_mod.get_global_var('func_441')
var_1095 = relay.var("var_1095", dtype = "int64", shape = (120,))#candidate|1095|(120,)|var|int64
const_1096 = relay.const([[-9,-2,10,-5,-7,-8,10,-1,-4,1,5,-4,6,-3,9,3,-6,1,8,-4,10,7,3,8,6,3,-1,-10,10,9,-9,-9,9,8,6,2,5,8,9,5,-5,7,-5,2,2,-9,4,-3,-6,10,-4,-1,-4,-7,3,10,-10,4,6,5,7,-9,9,-6,5,-10,2,8,-8,-9,-6,-1,-8,6,-2,1,4,-2,10,-2,6,3,-3,4,-5,6,-3,-2,3,2,8,7,-3,-6,1,-7,-2,-6,3,-8,-4,2,3,-8,-1,-4,-4,-2,3,10,-8,10,-9,-4,-6,-3,-9,8,10,-8,4,1,-6,7,-2,3,5,-9,10,9,8,-4,6,6,-8,8,-10,-2,-1,-6,-7,3,2,6,-5,-8,8,7,6,1,-2,5,-7,8,7,1,5,-6,5,-1,-1,-3,-2,3,6,1,-3,9,7,-6,-3,8,10,-7,10,-5,-8,7,9,-10,-4,-2,-1,-6,6,3,-10,7,7,-7,1,-5,10,-9,-2,3,-1,-4,4,1,2,9,-2,-4,-10,5,2,-10,-2,1,-9,-3,-7,-3,6,3,5,-2,8,-8,-4,2,5,-8,1,4,-2,-10,-3,-2,-8,-7,-6,-2,4,5,-6,-3,8,-7,-1,-1,-7,3,-8,7,7,9,-4,10,-4,5,3,-9,1,2,-7,4,7,-4,-2,1,6,5,-2,7,1,5,3,-6,2,-8,-2,4,10,4,-8,3,6,3,2,-5,-5,-6,-6,3,-2,-8,-5,-6,10,-9,7,-4,10,3,9,-5,-10,-3,5,6,-8,2,1,-10,-9,1,1,-9,5,2,-1,8,-10,-10,8,-2,4,-10,1,-8,-1,6,-6,-2,8,5,-1,-1,-4,5,8,-10,9,-9,-2,-1,-6,2,2,3,7,9,2,8,2,-10,1,5,10,2,-1,-4,10,10,-9,1,-2,-4,10,-2,5,3,2,6,3,3,-1,-4,-2,-2,-9,6,3,8,4,-4,-2,7,-8,-3,2,-9,-2,5,-9,-4,10,-2,4,6,9,-8,-8,2,-7,9,4,2,8,9,-4,8,7,-9,-9,8,7,-9,-1,3,10,7,7,-10,-7,-4,4,-5,1,1,-10,-8,-6,-2,-1,-5,6,-3,-1,9,1,-9,7,-5,9,-8,6,-6,6,1,2,6,-10,-10,-3,-9,4,9,-3,2,2,-2,8,3,7,-1,2,6,8,2,-7,-6,-2,-4,1,8,-6,4,-8,9,-2,4,-8,5,6,-9,-2,-4,4,-7,4,10,6,5,2,-1,4,8,8,10,-3,-7,-8,7,-10,8,-2,3,4,-5,-10,3,-4,8,4,-5,8,2,-6,-9,5,-10,8,8,1,-2,-10,7,-6,5,2,9,-6,8,-1,-8,-4,5,4,-6,7,-8,-3,-2,-9,-10,-8,10,1,-6,5,-1,4,3,-1,1,-8,-4,5,9,2,-4,2,6,4,-8,-6,9,6,8,-2,-5,9,1,-3,5,-2,6,4,9,-4,6,7,1,-7,3,7,10,-5,-9,1,-4,4,-9,1,-4,-7,6,6,-9,6,2,8,-9,-3,3,-4,-1,8,5,-9,6,-1,-2,-10,10,1,-1,-6,-3,-1,-6,-5,1,8,5,-7,5,-3,-5,-6,-1,8,7,2,-4,-10,8,-7,1,7,3,6,5,5,-4,-6,-9,7,-10,-7,2,5,5,10,-7,1,-4,10,-8,-9,5,7,2,9,5,-8,-5,8,5,3,7,-4,3,-10,6,-3,-5,-2,-4,-8,-6,7,-9,1,-5,8,10,-2,-7,-2,-2,-3,-5,3,-7,-10,7,-6,4,-4,2,10,-5,5,-5,-4,-3,-3,3,10,8,7,-1,4,10,4,-10,-8,-7,7,-1,10,-10,-4,10,5,8,-3,-6,-2,-7,-10,1,1,10,-9,-1,-5,-3,-3,5,-2,1,9,4,-4,10,-7,-4,8,-10,-7,7,1,-10,-2,6,7,-1,5,-8,6,6,8,4,4,-2,-5,4,8,4,-1,5,-8,-2,2,3,-9,-1,-9,-2,1,5,-10,5,2,-7,-8,1,-9,-8,-5,6,1,9,-6,-4,-5,-6,7,3,9,-4,-4,-4,8,-1,4,-4,-9,-5,-4,-4,6,-3,9,4,-8,8,3,-5,5,-3,3,6,-10,9,-7,-4,10,8,5,-1,2,5,3,-6,5,-9,-7,-2,-3,-3,-3,7,-6,5,9,-4,-5,-6,-10,7,2,-6,1,7,1,8,9,-5,10,-6,-6,-10,1,1,8,9,-6,-10,4,-2,-7,7,8,1,-4,9,-7,-4,4,-10,-3,-6,-3,-5,6,-2,-2,1,4,7,8,1,4,-4,9,5,-4,-1,7,-5,-5,-6,-7,6,8,1,-9,1,-8,-4,-2,8,-7,-4,5,7,-8,1,-1,-9,10,5,2,5,-3,-6,-5,3,-3,8,6,-2,-2,2,-9,10,-2,-1,3,6,-4,-2,-7,2,-2,2,10,4,8,-3,8,-8,-10,-5,-4,10,-3,8,-5,-4,3,-7,-1,-4,1,-7,3,-7,4,-8,3,8,-8,8,9,4,-9,4,4,-10,-7,3,-2,-5,-4,-5,-10,-5,-9,4,4,-9,-9,-4,3,9,2,-10,-2,-1,9,-3,10,7,-10,9,-1,8,3,6,-7,8,6,-4,-4,-5,2,1,-6,3,-3,2,3,5,-6,-4,5,2,1,-8,-4,7,10,8,-10,4,5,9,-7,-4,5,-6,9,2,8,4,-2,8,10,-2,8,6,-1,1,-9,-3,-10,-5,-10,6,6,10,10,-3,-3,-3,-10,-4,3,-1,8,-5,6,7,8,4,5,5,1,8,-3,-4,-1,6,-6,4,-2,4,2,3,-9,5,10,-1,-10,-4,-1,5,-1,-8,9,-10,-3,-10,10,-7,4,-10,4,7,10,6,-2,-7,-4,-7,-7,6,3,-6,-1,1,7,-10,-3,-2,8,8,8,2,-10,-5,-8,-6,-8,4,-7,5,-6,-4,3,6,3,3,1,5,2,6,-2,-1,-7,10,-1,10,1,8,10,-7,-10,-4,4,10,-1,8,-3,2,5,5,-6,-3,7,-4,9,-9,2,10,5,3,-10,-9,-7,2,2,8,-2,-8,-6,7,-2,4,4,-9,6,6,1,7,-6,-2,8,-8,-2,-1,-7,-4,7,-4,-2,9,-4,-1,8,-7,-1,-3,-10,7,-5,10,7,2,2,2,-8,-1,5,9,4,-10,-4,1,-3,-4,9,2,-10,9,-8,-5,5,9,9,-5,-4,5,-9,-10,7,5,-9,-3,1,10,-6,-8,-2,10,4,4,4,6,8,-8,-1,4,-9,-9,-10,2,8,6,6,1,5,10,7,-1,-1,3,-1,1,1,-10,1,-6,9,-8,9,-9,-7,4,-4,-8,-5,8,-7,5,9,10,5,-10,9,3,9,4,10,7,-4,-2,9,4,7,3,-7,9,-8,-10,8,5,-5,3,-7,-1,9,-10,1,2,7,7,6,-6,6,-1,7,-2,-5,8,-7,-4,10,3,-2,-1,-2,-1,-6,-3,2,7,-2,-4,5,-10,2,-9,10,6,-8,-10,-7,9,7,4,-9,-3,-1,7,-8,8,-3,-2,10,-6,7,1,7,5,-3,7,9,3,4,8,9,4,5,-6,6,-7,9,4,7,4,-8,4,-1,-9,-8,-9,-5,8,10,8,7,-8,-3,-6,2,4,1,9,-6,-6,-7,1,1,5,5,-7,1,1,-8,6,-7,9,-10,-9,-9,1,4,-2,-1,-6,2,-1,1,-7,-8,-8,-5,2,-9,2,-8,6,4,4,-2,-4,-6,-7,6,5,-9,9,-3,-9,-4,10,3,1,-1,7,-7,-10,-5,-9,1,6,-8,3,-8,4,3,-3,8,-8,-10,4,5,2,1,2,7,1,3,-9,-8,4,-6,10,10,5,-2,-7,3,8,3,5,7,5,1,2,8,-3,-2,10,-10,2,-6,-8,10,-4,-5,1,8,-2,2,10,-2,4,-3,-6,3,-4,6,-9,-7,7,3,-6,6,2,3,-7,3,7,-10,-1,-10,2,-9,10,4,-10,7,-8,3,10,1,1,1,-4,-10,3,-1,5,4,8,5,6,5,3,-3,-3]], dtype = "int64")#candidate|1096|(1, 1560)|const|int64
call_1094 = relay.TupleGetItem(func_437_call(relay.reshape(var_1095.astype('int64'), [120,]), relay.reshape(const_1096.astype('int64'), [6, 260]), ), 4)
call_1097 = relay.TupleGetItem(func_441_call(relay.reshape(var_1095.astype('int64'), [120,]), relay.reshape(const_1096.astype('int64'), [6, 260]), ), 4)
output = relay.Tuple([call_1092,call_1094,var_1095,const_1096,])
output2 = relay.Tuple([call_1093,call_1097,var_1095,const_1096,])
func_1110 = relay.Function([var_1095,], output)
mod['func_1110'] = func_1110
mod = relay.transform.InferType()(mod)
var_1111 = relay.var("var_1111", dtype = "int64", shape = (120,))#candidate|1111|(120,)|var|int64
output = func_1110(var_1111)
func_1112 = relay.Function([var_1111], output)
mutated_mod['func_1112'] = func_1112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_724_call = mod.get_global_var('func_724')
func_726_call = mutated_mod.get_global_var('func_726')
call_1114 = relay.TupleGetItem(func_724_call(), 1)
call_1115 = relay.TupleGetItem(func_726_call(), 1)
output = call_1114
output2 = call_1115
func_1124 = relay.Function([], output)
mod['func_1124'] = func_1124
mod = relay.transform.InferType()(mod)
mutated_mod['func_1124'] = func_1124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1124_call = mutated_mod.get_global_var('func_1124')
call_1125 = func_1124_call()
output = call_1125
func_1126 = relay.Function([], output)
mutated_mod['func_1126'] = func_1126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_635_call = mod.get_global_var('func_635')
func_636_call = mutated_mod.get_global_var('func_636')
call_1127 = relay.TupleGetItem(func_635_call(), 3)
call_1128 = relay.TupleGetItem(func_636_call(), 3)
const_1139 = relay.const([[[3,3,-5,-4,-9,4,3,6,-5,1,-2,9],[8,4,-10,-1,-8,2,5,8,6,2,2,-5],[7,-7,2,-4,7,-4,-1,-9,-9,4,-6,-6],[6,4,-5,5,6,-1,-9,9,-3,3,7,-4],[-3,-2,9,-3,-7,-5,7,4,-3,4,-2,-9],[7,10,6,-4,-10,-7,-4,6,-7,-4,2,-10],[5,-6,-8,-1,-9,-2,-2,-3,1,-1,-2,6],[9,-6,8,-5,-1,-7,10,-7,-6,3,3,10],[9,1,-2,1,-5,-2,4,-5,2,5,7,-10],[-10,2,-2,9,6,3,7,7,2,4,-1,-2],[-10,-5,-10,1,-10,3,-5,-3,2,-7,1,-10],[7,10,4,3,8,2,-4,8,-8,-8,-5,4],[-9,6,-8,3,-10,-5,5,-8,-5,3,-5,-5]],[[-3,-6,2,-6,4,10,-8,-7,-8,-5,-10,7],[5,-5,10,3,-1,-4,2,5,-1,8,-2,10],[-7,2,-7,-3,9,-3,9,6,9,-4,-9,-7],[-8,2,9,-9,-6,-6,-1,5,8,-3,-8,-7],[-9,9,4,10,10,1,5,-10,2,-4,-4,5],[1,-8,-6,-5,8,3,-10,1,7,3,-3,-3],[-8,7,7,5,7,4,-8,8,-7,-5,6,-8],[9,6,-6,-4,5,-8,1,-8,-5,-4,5,7],[5,-8,-10,-5,-2,1,-10,-2,-6,7,2,-10],[2,-9,5,9,-10,10,-7,-8,-8,5,-4,2],[5,-1,-7,-5,-4,5,10,9,5,9,6,9],[6,1,10,2,-5,4,6,10,-4,1,-3,6],[-10,9,4,-10,-3,2,6,-3,-9,-2,8,6]],[[1,6,6,3,6,-5,-2,-3,-8,10,-9,5],[-2,4,1,10,7,-7,9,-2,1,-7,2,10],[3,4,-3,-3,-5,2,6,9,1,8,-7,-5],[6,3,-2,-8,3,10,-10,-10,9,-3,6,-10],[-2,-5,7,-7,-3,-10,3,3,-1,-1,-5,8],[-1,-1,-4,3,7,5,1,-6,-2,1,-6,1],[-9,-8,3,8,-6,-2,8,-8,-5,-1,-3,-3],[5,4,10,1,-8,-4,5,-7,-1,-3,4,5],[2,-8,-5,4,6,-3,3,-6,3,4,-1,8],[7,2,1,-5,-5,10,5,-2,-9,-7,-1,5],[-2,9,-7,-5,8,-10,-7,4,7,2,9,4],[10,-10,6,-4,-4,4,-2,10,6,-3,-4,-5],[-2,-4,2,8,-9,3,-6,4,10,1,-6,-3]],[[10,7,2,4,8,4,-4,-4,-3,-8,3,-6],[9,6,10,-8,-7,4,-9,-5,6,9,-4,-5],[-9,3,-7,7,-8,-9,-4,9,-6,-3,3,1],[9,-3,10,-7,3,1,9,-5,-2,-7,5,-10],[-1,3,-10,5,-2,-2,8,-3,9,2,3,9],[4,-4,2,-8,-6,8,5,5,4,2,-7,7],[-1,6,-8,1,-10,1,-8,6,-1,-2,-10,6],[4,-7,2,-9,-5,-9,1,-5,5,-3,-4,-9],[-1,-3,-9,6,6,-6,-9,3,1,7,4,-1],[7,-3,2,7,-4,6,-9,7,-6,-6,-8,-1],[3,-1,1,5,7,-2,-10,4,-1,-7,3,-6],[5,-7,10,-3,7,7,5,7,-10,3,-10,-5],[-7,9,-4,-2,6,-3,-7,-7,-8,2,8,7]],[[10,7,-9,9,3,-8,5,-8,-9,-7,-5,1],[-3,-1,4,-9,10,-4,-8,-4,5,10,2,-2],[6,9,8,-9,5,-1,7,-5,6,3,6,-7],[-9,-10,-4,6,-4,3,5,2,-1,-8,1,-5],[-5,-10,-8,-10,3,-2,4,7,10,-7,-4,-4],[-2,-3,-6,-9,-9,-9,-10,-5,-3,-10,-2,-3],[8,9,1,-7,6,3,2,-2,-4,7,-2,-7],[-9,1,5,-6,-6,-5,6,7,5,3,-5,-8],[8,5,8,-6,-10,-8,3,-7,9,-5,3,-9],[5,6,9,-2,-9,-6,10,6,8,-4,8,-9],[1,-3,7,5,-4,-3,4,7,-10,-2,4,10],[-2,3,4,-8,-6,-3,3,-5,10,-7,1,10],[8,4,10,7,6,5,-2,7,3,2,-10,2]],[[-5,4,4,9,-6,7,-5,-9,4,3,6,-3],[9,-7,-2,-9,-8,3,9,-8,-5,2,-7,2],[-4,7,-6,2,-8,4,-8,7,8,-1,-3,3],[-2,-9,5,-2,6,-10,2,8,9,-7,9,-6],[-5,-5,4,6,10,-6,-7,-3,-8,5,-2,-9],[7,9,-2,-2,-2,5,2,1,-7,6,-7,-6],[1,-6,-4,-6,-3,-6,2,3,-4,9,10,-9],[-8,10,5,2,-7,1,-5,2,-3,-2,8,-10],[-4,8,8,-2,2,2,7,-3,4,8,10,7],[10,-10,-5,-9,-9,2,4,-4,5,4,-1,8],[3,-3,6,8,-9,4,-9,4,2,3,-1,4],[4,8,7,1,2,2,-5,-3,7,10,-2,3],[-10,2,7,7,-4,-7,1,-10,1,10,-10,-10]]], dtype = "int32")#candidate|1139|(6, 13, 12)|const|int32
bop_1140 = relay.power(call_1127.astype('float32'), relay.reshape(const_1139.astype('float32'), relay.shape_of(call_1127))) # shape=(6, 13, 12)
bop_1143 = relay.power(call_1128.astype('float32'), relay.reshape(const_1139.astype('float32'), relay.shape_of(call_1128))) # shape=(6, 13, 12)
func_242_call = mod.get_global_var('func_242')
func_244_call = mutated_mod.get_global_var('func_244')
call_1146 = relay.TupleGetItem(func_242_call(), 0)
call_1147 = relay.TupleGetItem(func_244_call(), 0)
func_242_call = mod.get_global_var('func_242')
func_244_call = mutated_mod.get_global_var('func_244')
call_1153 = relay.TupleGetItem(func_242_call(), 0)
call_1154 = relay.TupleGetItem(func_244_call(), 0)
output = relay.Tuple([bop_1140,call_1146,call_1153,])
output2 = relay.Tuple([bop_1143,call_1147,call_1154,])
func_1155 = relay.Function([], output)
mod['func_1155'] = func_1155
mod = relay.transform.InferType()(mod)
mutated_mod['func_1155'] = func_1155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1155_call = mutated_mod.get_global_var('func_1155')
call_1156 = func_1155_call()
output = call_1156
func_1157 = relay.Function([], output)
mutated_mod['func_1157'] = func_1157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_724_call = mod.get_global_var('func_724')
func_726_call = mutated_mod.get_global_var('func_726')
call_1218 = relay.TupleGetItem(func_724_call(), 0)
call_1219 = relay.TupleGetItem(func_726_call(), 0)
output = relay.Tuple([call_1218,])
output2 = relay.Tuple([call_1219,])
func_1220 = relay.Function([], output)
mod['func_1220'] = func_1220
mod = relay.transform.InferType()(mod)
output = func_1220()
func_1221 = relay.Function([], output)
mutated_mod['func_1221'] = func_1221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_635_call = mod.get_global_var('func_635')
func_636_call = mutated_mod.get_global_var('func_636')
call_1222 = relay.TupleGetItem(func_635_call(), 0)
call_1223 = relay.TupleGetItem(func_636_call(), 0)
output = call_1222
output2 = call_1223
func_1236 = relay.Function([], output)
mod['func_1236'] = func_1236
mod = relay.transform.InferType()(mod)
output = func_1236()
func_1237 = relay.Function([], output)
mutated_mod['func_1237'] = func_1237
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1245 = relay.var("var_1245", dtype = "uint32", shape = (15, 5, 1))#candidate|1245|(15, 5, 1)|var|uint32
var_1246 = relay.var("var_1246", dtype = "uint32", shape = (15, 5, 9))#candidate|1246|(15, 5, 9)|var|uint32
bop_1247 = relay.bitwise_or(var_1245.astype('uint32'), var_1246.astype('uint32')) # shape=(15, 5, 9)
output = bop_1247
output2 = bop_1247
func_1270 = relay.Function([var_1245,var_1246,], output)
mod['func_1270'] = func_1270
mod = relay.transform.InferType()(mod)
mutated_mod['func_1270'] = func_1270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1270_call = mutated_mod.get_global_var('func_1270')
var_1272 = relay.var("var_1272", dtype = "uint32", shape = (15, 5, 1))#candidate|1272|(15, 5, 1)|var|uint32
var_1273 = relay.var("var_1273", dtype = "uint32", shape = (15, 5, 9))#candidate|1273|(15, 5, 9)|var|uint32
call_1271 = func_1270_call(var_1272,var_1273,)
output = call_1271
func_1274 = relay.Function([var_1272,var_1273,], output)
mutated_mod['func_1274'] = func_1274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_1285 = relay.TupleGetItem(func_298_call(), 0)
call_1286 = relay.TupleGetItem(func_299_call(), 0)
output = relay.Tuple([call_1285,])
output2 = relay.Tuple([call_1286,])
func_1300 = relay.Function([], output)
mod['func_1300'] = func_1300
mod = relay.transform.InferType()(mod)
mutated_mod['func_1300'] = func_1300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1300_call = mutated_mod.get_global_var('func_1300')
call_1301 = func_1300_call()
output = call_1301
func_1302 = relay.Function([], output)
mutated_mod['func_1302'] = func_1302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_1305 = relay.TupleGetItem(func_124_call(), 0)
call_1306 = relay.TupleGetItem(func_125_call(), 0)
output = call_1305
output2 = call_1306
func_1310 = relay.Function([], output)
mod['func_1310'] = func_1310
mod = relay.transform.InferType()(mod)
output = func_1310()
func_1311 = relay.Function([], output)
mutated_mod['func_1311'] = func_1311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1310_call = mod.get_global_var('func_1310')
func_1311_call = mutated_mod.get_global_var('func_1311')
call_1317 = func_1310_call()
call_1318 = func_1310_call()
func_980_call = mod.get_global_var('func_980')
func_984_call = mutated_mod.get_global_var('func_984')
var_1328 = relay.var("var_1328", dtype = "bool", shape = ())#candidate|1328|()|var|bool
const_1329 = relay.const([[True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True],[True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,True,False],[True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False],[True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False],[False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,True],[True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False],[False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False],[False,False,False,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False],[False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False],[False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True],[True,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,False,True],[True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False],[True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False]], dtype = "bool")#candidate|1329|(13, 26)|const|bool
const_1330 = relay.const([[8,5,-7,8,-3,-10,6,-9,9,8,-8,-4,-5,9,-4,-9,8,4,9,3],[-1,-6,-9,9,-1,-2,4,-3,10,-2,-3,-7,-7,10,-5,9,-6,-6,9,4],[4,9,4,4,8,-10,-7,3,10,-9,6,2,4,-8,-3,5,10,3,7,-10],[3,5,-7,-3,2,3,-1,-2,2,8,-2,-5,6,-8,7,-6,-6,-10,1,-1],[7,-1,-8,1,-2,-5,1,-9,-8,-10,5,-5,8,3,1,2,-7,-6,7,4],[8,6,-1,-8,1,6,-3,6,-6,-9,-4,-5,-6,-5,10,-2,1,10,4,3]], dtype = "int64")#candidate|1330|(6, 20)|const|int64
call_1327 = relay.TupleGetItem(func_980_call(relay.reshape(var_1328.astype('bool'), []), relay.reshape(const_1329.astype('bool'), [13, 13, 2]), relay.reshape(const_1330.astype('int64'), [120,]), ), 2)
call_1331 = relay.TupleGetItem(func_984_call(relay.reshape(var_1328.astype('bool'), []), relay.reshape(const_1329.astype('bool'), [13, 13, 2]), relay.reshape(const_1330.astype('int64'), [120,]), ), 2)
uop_1344 = relay.exp(const_1329.astype('float32')) # shape=(13, 26)
output = relay.Tuple([call_1317,call_1327,var_1328,const_1330,uop_1344,])
output2 = relay.Tuple([call_1318,call_1331,var_1328,const_1330,uop_1344,])
func_1346 = relay.Function([var_1328,], output)
mod['func_1346'] = func_1346
mod = relay.transform.InferType()(mod)
mutated_mod['func_1346'] = func_1346
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1347 = relay.var("var_1347", dtype = "bool", shape = ())#candidate|1347|()|var|bool
func_1346_call = mutated_mod.get_global_var('func_1346')
call_1348 = func_1346_call(var_1347)
output = call_1348
func_1349 = relay.Function([var_1347], output)
mutated_mod['func_1349'] = func_1349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_1351 = relay.TupleGetItem(func_124_call(), 0)
call_1352 = relay.TupleGetItem(func_125_call(), 0)
func_454_call = mod.get_global_var('func_454')
func_457_call = mutated_mod.get_global_var('func_457')
var_1378 = relay.var("var_1378", dtype = "float64", shape = (75,))#candidate|1378|(75,)|var|float64
call_1377 = func_454_call(relay.reshape(var_1378.astype('float64'), [1, 15, 5]))
call_1379 = func_454_call(relay.reshape(var_1378.astype('float64'), [1, 15, 5]))
var_1381 = relay.var("var_1381", dtype = "float64", shape = (75,))#candidate|1381|(75,)|var|float64
bop_1382 = relay.less_equal(var_1378.astype('bool'), relay.reshape(var_1381.astype('bool'), relay.shape_of(var_1378))) # shape=(75,)
func_1220_call = mod.get_global_var('func_1220')
func_1221_call = mutated_mod.get_global_var('func_1221')
call_1385 = relay.TupleGetItem(func_1220_call(), 0)
call_1386 = relay.TupleGetItem(func_1221_call(), 0)
func_382_call = mod.get_global_var('func_382')
func_383_call = mutated_mod.get_global_var('func_383')
call_1403 = relay.TupleGetItem(func_382_call(), 0)
call_1404 = relay.TupleGetItem(func_383_call(), 0)
output = relay.Tuple([call_1351,call_1377,bop_1382,call_1385,call_1403,])
output2 = relay.Tuple([call_1352,call_1379,bop_1382,call_1386,call_1404,])
func_1408 = relay.Function([var_1378,var_1381,], output)
mod['func_1408'] = func_1408
mod = relay.transform.InferType()(mod)
mutated_mod['func_1408'] = func_1408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1408_call = mutated_mod.get_global_var('func_1408')
var_1410 = relay.var("var_1410", dtype = "float64", shape = (75,))#candidate|1410|(75,)|var|float64
var_1411 = relay.var("var_1411", dtype = "float64", shape = (75,))#candidate|1411|(75,)|var|float64
call_1409 = func_1408_call(var_1410,var_1411,)
output = call_1409
func_1412 = relay.Function([var_1410,var_1411,], output)
mutated_mod['func_1412'] = func_1412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mod.get_global_var('func_666')
func_667_call = mutated_mod.get_global_var('func_667')
call_1458 = relay.TupleGetItem(func_666_call(), 0)
call_1459 = relay.TupleGetItem(func_667_call(), 0)
output = relay.Tuple([call_1458,])
output2 = relay.Tuple([call_1459,])
func_1487 = relay.Function([], output)
mod['func_1487'] = func_1487
mod = relay.transform.InferType()(mod)
mutated_mod['func_1487'] = func_1487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1487_call = mutated_mod.get_global_var('func_1487')
call_1488 = func_1487_call()
output = call_1488
func_1489 = relay.Function([], output)
mutated_mod['func_1489'] = func_1489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_724_call = mod.get_global_var('func_724')
func_726_call = mutated_mod.get_global_var('func_726')
call_1490 = relay.TupleGetItem(func_724_call(), 0)
call_1491 = relay.TupleGetItem(func_726_call(), 0)
func_205_call = mod.get_global_var('func_205')
func_207_call = mutated_mod.get_global_var('func_207')
call_1494 = func_205_call()
call_1495 = func_205_call()
output = relay.Tuple([call_1490,call_1494,])
output2 = relay.Tuple([call_1491,call_1495,])
func_1496 = relay.Function([], output)
mod['func_1496'] = func_1496
mod = relay.transform.InferType()(mod)
output = func_1496()
func_1497 = relay.Function([], output)
mutated_mod['func_1497'] = func_1497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_1502 = relay.TupleGetItem(func_298_call(), 0)
call_1503 = relay.TupleGetItem(func_299_call(), 0)
func_1220_call = mod.get_global_var('func_1220')
func_1221_call = mutated_mod.get_global_var('func_1221')
call_1504 = relay.TupleGetItem(func_1220_call(), 0)
call_1505 = relay.TupleGetItem(func_1221_call(), 0)
func_1300_call = mod.get_global_var('func_1300')
func_1302_call = mutated_mod.get_global_var('func_1302')
call_1510 = relay.TupleGetItem(func_1300_call(), 0)
call_1511 = relay.TupleGetItem(func_1302_call(), 0)
func_666_call = mod.get_global_var('func_666')
func_667_call = mutated_mod.get_global_var('func_667')
call_1516 = relay.TupleGetItem(func_666_call(), 0)
call_1517 = relay.TupleGetItem(func_667_call(), 0)
func_666_call = mod.get_global_var('func_666')
func_667_call = mutated_mod.get_global_var('func_667')
call_1530 = relay.TupleGetItem(func_666_call(), 0)
call_1531 = relay.TupleGetItem(func_667_call(), 0)
output = relay.Tuple([call_1502,call_1504,call_1510,call_1516,call_1530,])
output2 = relay.Tuple([call_1503,call_1505,call_1511,call_1517,call_1531,])
func_1541 = relay.Function([], output)
mod['func_1541'] = func_1541
mod = relay.transform.InferType()(mod)
mutated_mod['func_1541'] = func_1541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1541_call = mutated_mod.get_global_var('func_1541')
call_1542 = func_1541_call()
output = call_1542
func_1543 = relay.Function([], output)
mutated_mod['func_1543'] = func_1543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_242_call = mod.get_global_var('func_242')
func_244_call = mutated_mod.get_global_var('func_244')
call_1569 = relay.TupleGetItem(func_242_call(), 0)
call_1570 = relay.TupleGetItem(func_244_call(), 0)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_1583 = relay.TupleGetItem(func_124_call(), 1)
call_1584 = relay.TupleGetItem(func_125_call(), 1)
func_893_call = mod.get_global_var('func_893')
func_895_call = mutated_mod.get_global_var('func_895')
call_1594 = relay.TupleGetItem(func_893_call(), 0)
call_1595 = relay.TupleGetItem(func_895_call(), 0)
func_1236_call = mod.get_global_var('func_1236')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1597 = func_1236_call()
call_1598 = func_1236_call()
func_327_call = mod.get_global_var('func_327')
func_331_call = mutated_mod.get_global_var('func_331')
const_1602 = relay.const([-7,8,-5,-10,4,8,-8,2,-4,-2,4,6,7,-2,-3,2,2,-5,10,3,-1,-6,5,5,-4,8,6,3,2,-2,6,5,3,-6,9,-8,2,1,3,-5,-4,-4,9,-4,5,-7,1,9,-4,-8,4,-3,-2,-4,-2,-2,3,7,-5,4,10,-3,5,-2,8,-2,-7,-1,-1,4,3,10,-3,-10,1,-10,-7,-9,-6,-1,-2,-9,10,-6,2,-6,7,4,4,-10,-10,-3,5,9,-2,6,-5,-1,-4,8,8,-2,10,6,-10,7,9,6,2,5,-8,-6,-7,-8,5,-6,9,-9,-4,3], dtype = "int64")#candidate|1602|(120,)|const|int64
const_1603 = relay.const([3,-9,-4,-8,5,-2,-7,-9,10,10,-8,-6,10,-9,-5,2,-10,10,-2,-1,-2,-7,3,-5,-1,-1,-6,3,8,-8,4,-2,10,6,-8,-8,-1,-1,-2,-9,3,-9,8,6,6,8,3,2,-2,5,7,-10,10,-3,10,-3,-2,2,6,6,2,-4,6,8,6,9,9,-2,-3,-1,-10,3,-9,-2,5,-1,-3,-9,2,-8,1,2,7,8,2,2,-6,-4,4,-1,5,3,8,-9,-9,9,-4,-9,6,4,7,-9,-3,-7,10,-5,4,5,9,-2,-2,-10,1,-1,9,4,1,10,-8,-2,-8,3,2,4,3,2,5,4,-5,3,-10,1,-10,-5,7,7,4,-7,-2,-10,7,2,5,-9,3,-2,9,-2,4,9,7,-9,10,7,-9,6,-6,9,6,-10,10,-10,7,1,-1,5,8,7,1,7,9,-5,4,8,4,9,-2,-4,-10,2,-5,9,4,9,-2,-5,-2,7,6,5,3,-3,-4,-8,4,-8,-1,-2,5,-10,2,7,8,9,9,-4,-10,1,-8,10,1,10,-5,4,-8,6,-10,3,8,1,-7,-4,-6,3,-4,-5,-1,6,9,-5,-4,6,-5,-1,-10,4,1,-8,-1,-10,-4,-9,-2,-2,-4,-10,9,4,3,-8,-2,-2,-10,-10,1,-7,5,-1,-10,-9,-9,5,-5,3,6,2,-6,1,-7,7,10,-5,10,3,-1,6,-1,8,-2,5,4,10,-6,-6,-9,-8,-4,4,-1,4,9,-1,-5,-8,2,6,5,-6,6,-1,-4,6,4,-2,6,6,-7,8,6,8,-1,5,-2,-6,-2,5,-8,4,10,-8,3,4,10,4,9,-7,-10,-8,-3,3,3,-1,-9,-4,2,-7,-5,5,-4,5,-2,-4,3,5,8,3,-5,2,-1,5,10,8,-3,-3,3,10,10,-8,-8,1,8,-7,10,7,8,7,-3,5,10,-5,-6,10,9,-9,10,2,1,1,1,-5,1,8,8,2,-1,-3,-3,1,1,-10,-9,9,4,-3,1,7,-9,7,-10,5,7,-8,-1,4,-10,-4,-7,-7,6,-7,8,-10,8,-4,8,10,7,8,7,-1,6,-6,-2,-5,4,7,5,9,-7,-4,10,2,1,5,-4,7,-6,5,5,-8,4,-9,5,2,10,-6,-9,-8,-2,10,-3,-8,-9,7,-4,3,10,-7,-3,-6,-7,3,-3,-8,-8,-3,-7,-10,-5,-4,-3,7,10,-8,-2,-6,-7,5,-4,6,-5,-2,9,1,-10,5,4,7,-3,-9,-9,6,-5,-7,5,-8,-2,3,4,-7,2,8,-1,10,-9,-3,-3,6,9,7,-5,-6,-5,10,4,-4,7,-2,6,-6,-2,-3,7,5,3,2,6,6,-7,-3,-4,-9,8,1,5,8,8,6,-3,1,-4,-3,-9,6,-5,-10,7,-10,-1,10,10,-7,1,2,-6,-1,6,-3,-5,4,7,9,-1,8,1,2,-7,-2,4,-4,8,1,1,10,2,-6,-6,-2,5,3,-7,9,-5,4,-4,-10,-6,-8,-6,3,-2,6,3,7,7,5,-4,-9,5,8,4,6,8,6,-10,-1,-7,10,-4,-9,-6,6,9,7,-1,-5,-3,-2,5,-7,9,7,7,-6,-4,-6,9,8,-9,2,-2,-2,10,-7,4,-9,-4,-8,4,5,-9,10,-3,4,5,-10,4,3,-8,8,4,4,6,8,6,-9,4,-2,8,-7,-1,4,-10,1,7,9,-1,-9,7,-6,-3,-7,-4,4,-5,7,-9,-5,-7,-7,8,-4,-1,5,-2,-10,-5,2,7,1,6,-10,-8,5,1,-10,8,-9,8,-6,2,5,-4,-7,4,5,-6,6,1,-1,-3,-3,-4,-9,-6,-3,2,8,-7,-9,2,1,-10,-6,-8,3,-6,2,1,-2,-6,-9,-3,4,-3,8,-6,5,-6,9,8,5,10,-5,9,-2,-2,-3,8,-4,-10,-6,1,-6,-4,1,7,-7,-5,10,4,9,2,3,-1,1,-1,-2,10,-1,1,8,10,-4,2,9,5,1,3,-7,3,8,7,-8,7,3,3,-5,9,-10,-3,-6,-10,-6,-3,9,-3,1,6,8,1,1,-3,9,-6,-2,9,-9,-4,-3,-10,-4,7,4,7,9,3,1,8,7,-8,-5,6,-7,-9,-9,1,3,-1,5,6,5,4,5,-8,8,-1,5,8,-10,-2,-7,2,-5,4,-2,-2,2,-3,-9,-9,-8,-1,10,5,-6,8,-2,-3,5,4,10,4,-3,-10,9,1,-2,10,-10,3,-2,1,-5,-2,4,10,4,-7,-3,1,-6,1,3,-1,6,10,7,5,-6,2,3,-3,6,-5,-6,-2,9,10,5,-6,5,1,9,-4,3,2,-10,4,-4,-6,5,3,-3,5,-4,3,9,9,-1,3,-9,-9,-2,4,2,-8,-9,-1,2,4,-1,5,-10,9,7,5,-7,-4,9,-6,-9,-10,-3,-5,-8,-3,4,10,2,5,-9,7,5,6,-1,-5,-5,1,7,-5,4,6,5,2,-3,-7,5,2,-5,-4,-1,9,5,3,7,-6,7,-7,-8,-10,-5,-5,10,10,6,-4,-2,-2,-4,-8,-5,1,6,4,8,5,10,-2,1,-6,6,3,-4,5,-4,-8,-5,10,-7,-7,8,-6,6,-9,-2,4,-6,5,4,7,-1,6,1,1,-2,-3,-10,7,1,-3,-2,10,-3,-7,5,6,6,-3,-10,5,3,-2,-10,-1,6,3,-8,-3,8,-10,3,-6,-10,6,-5,1,2,3,2,-1,7,-4,7,-7,-9,-7,-5,-1,-3,-4,-7,-8,-8,-1,6,-7,-7,9,-10,10,-7,2,-9,-6,10,-3,-7,-6,-6,3,10,-7,3,-3,-4,4,8,-5,9,-9,3,5,-7,-3,7,-4,-8,-4,-7,-3,9,-4,3,4,-1,10,7,6,-6,6,6,2,1,4,4,2,-7,10,8,-2,9,4,7,1,-8,-9,-6,-6,-9,-6,-10,-6,-5,-6,10,-1,-2,-6,-5,-4,-1,7,6,-4,-6,9,9,2,4,6,-8,5,-1,10,-8,-9,9,-8,-9,-1,-3,10,6,5,-4,5,7,3,-9,-4,-9,-7,10,3,-8,-4,-5,-4,-10,2,-1,5,5,5,-1,2,-3,8,4,3,-6,-4,5,1,-6,-9,-7,4,2,-7,-8,5,-8,5,4,4,6,10,-6,9,5,-1,-2,-6,4,-9,4,4,-7,-6,6,3,-9,-5,8,-1,2,7,6,-10,9,-3,-5,7,-5,-5,6,-4,4,2,-5,-5,4,3,-5,10,-4,7,7,3,10,4,-7,10,10,-3,4,2,-10,-8,9,1,9,3,3,-10,6,-8,4,4,10,7,-7,-2,5,4,-7,7,2,-4,10,9,-1,6,-4,7,10,-10,6,-6,3,5,4,6,6,4,-7,9,-9,-1,-7,-9,-4,-6,10,-1,1,-2,2,2,7,3,8,-2,-10,1,1,6,8,8,-3,10,-9,-10,10,8,-9,-3,-4,5,-8,-3,6,-6,3,-4,-5,10,-9,-2,2,8,2,8,8,1,-2,7,-4,-6,-7,3,7,5,-6,6,-10,1,8,9,5,-2,-4,6,-1,7,3,1,3,-5,-6,9,5,-7,9,9,-8,10,-1,2,-1,10,-8,3,9,-2,-6,1,9,4,-6,2,5,5,-2,-8,5,6,-10,-5,-6,-8,-8,-6,8,6,5,5,-4,8,9,-9,-5,-8,-6,8,9,-6,4,5,4,-4,-3,-10,3,-3,5,5,-8,7,-7,6,10,5,4,3,-5,-4,10,-5,4,-3,1,1,2,-3,-4,7,1,-7,3,-10,9,-7,1,-1,-10,-6,-4,-2,6,7,4,-3,5,-1,-9,9,6,8,9,-4,4,2,8,6,9,3,5,-2,5,-3,4,-4,-9,10,4,1,-6,5,8,8,-5,3,-7,4,-8,-6,-8,-7,-5,-7,10,6,-2,10,4,-7,8,-1,-7,-7,-10,1,5,7,4,-8,3,-2,7,-6,1,2,-7,6,-7,-3,10,-7,2,7,-9,2,-9,8,8,8,1,-1,-2,2,-2,8,-9,-6,-8,-8,-6], dtype = "int64")#candidate|1603|(1560,)|const|int64
call_1601 = relay.TupleGetItem(func_327_call(relay.reshape(const_1602.astype('int64'), [15, 8, 1]), relay.reshape(const_1603.astype('int64'), [15, 8, 13]), ), 0)
call_1604 = relay.TupleGetItem(func_331_call(relay.reshape(const_1602.astype('int64'), [15, 8, 1]), relay.reshape(const_1603.astype('int64'), [15, 8, 13]), ), 0)
var_1608 = relay.var("var_1608", dtype = "int32", shape = (6, 13, 12))#candidate|1608|(6, 13, 12)|var|int32
bop_1609 = relay.subtract(call_1583.astype('uint32'), relay.reshape(var_1608.astype('uint32'), relay.shape_of(call_1583))) # shape=(6, 13, 12)
bop_1612 = relay.subtract(call_1584.astype('uint32'), relay.reshape(var_1608.astype('uint32'), relay.shape_of(call_1584))) # shape=(6, 13, 12)
func_1155_call = mod.get_global_var('func_1155')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_1620 = relay.TupleGetItem(func_1155_call(), 0)
call_1621 = relay.TupleGetItem(func_1157_call(), 0)
output = relay.Tuple([call_1569,call_1594,call_1597,call_1601,const_1602,const_1603,bop_1609,call_1620,])
output2 = relay.Tuple([call_1570,call_1595,call_1598,call_1604,const_1602,const_1603,bop_1612,call_1621,])
func_1623 = relay.Function([var_1608,], output)
mod['func_1623'] = func_1623
mod = relay.transform.InferType()(mod)
mutated_mod['func_1623'] = func_1623
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1624 = relay.var("var_1624", dtype = "int32", shape = (6, 13, 12))#candidate|1624|(6, 13, 12)|var|int32
func_1623_call = mutated_mod.get_global_var('func_1623')
call_1625 = func_1623_call(var_1624)
output = call_1625
func_1626 = relay.Function([var_1624], output)
mutated_mod['func_1626'] = func_1626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1310_call = mod.get_global_var('func_1310')
func_1311_call = mutated_mod.get_global_var('func_1311')
call_1658 = func_1310_call()
call_1659 = func_1310_call()
output = relay.Tuple([call_1658,])
output2 = relay.Tuple([call_1659,])
func_1668 = relay.Function([], output)
mod['func_1668'] = func_1668
mod = relay.transform.InferType()(mod)
output = func_1668()
func_1669 = relay.Function([], output)
mutated_mod['func_1669'] = func_1669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1487_call = mod.get_global_var('func_1487')
func_1489_call = mutated_mod.get_global_var('func_1489')
call_1687 = relay.TupleGetItem(func_1487_call(), 0)
call_1688 = relay.TupleGetItem(func_1489_call(), 0)
func_1060_call = mod.get_global_var('func_1060')
func_1063_call = mutated_mod.get_global_var('func_1063')
var_1692 = relay.var("var_1692", dtype = "int64", shape = (3, 40))#candidate|1692|(3, 40)|var|int64
call_1691 = relay.TupleGetItem(func_1060_call(relay.reshape(var_1692.astype('int64'), [120,])), 0)
call_1693 = relay.TupleGetItem(func_1063_call(relay.reshape(var_1692.astype('int64'), [120,])), 0)
output = relay.Tuple([call_1687,call_1691,var_1692,])
output2 = relay.Tuple([call_1688,call_1693,var_1692,])
func_1709 = relay.Function([var_1692,], output)
mod['func_1709'] = func_1709
mod = relay.transform.InferType()(mod)
var_1710 = relay.var("var_1710", dtype = "int64", shape = (3, 40))#candidate|1710|(3, 40)|var|int64
output = func_1709(var_1710)
func_1711 = relay.Function([var_1710], output)
mutated_mod['func_1711'] = func_1711
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1723 = relay.const([[[-9.774607,6.422976,-0.379745,-1.256790,0.999629,-4.081081,1.870723,8.097322,-9.720064,9.410476,-1.011723,-0.158297,-9.827246,-2.927687],[-1.168273,-4.701888,-0.126136,6.603690,-3.991747,-8.647461,-9.437629,-4.383659,-6.794862,-4.184009,-1.198597,-2.638941,8.686949,1.128180],[-6.680584,-6.272171,8.460976,9.273742,1.989921,-8.741693,-1.710085,1.740753,8.060221,-3.118601,7.923857,-3.021343,7.929988,-9.097099],[1.129739,-2.384839,-0.706178,9.085788,0.316507,0.598320,2.791492,3.897883,-3.097161,0.905045,-3.792543,2.801976,-9.247422,-3.299516],[-8.215630,7.729244,-0.846367,4.401762,-6.604060,-5.004790,-2.831563,-2.878301,5.943021,0.087056,1.697624,0.107328,6.894483,9.042091],[2.278251,4.857227,3.185721,4.952812,-4.010505,-1.804135,1.627633,2.688709,-1.614110,-5.197088,2.768556,-5.795906,-9.576487,-0.585347],[-6.772918,1.502245,8.400418,-1.614458,3.661601,-0.443335,-1.772718,4.534330,8.409287,5.671804,-8.025722,2.944138,-8.913361,-4.927242],[-6.626593,-5.599437,2.406146,-1.479628,-0.149631,4.495914,-4.818175,5.150948,-0.487201,6.878965,5.165309,0.882038,-5.173063,7.649545],[-5.145264,5.161418,3.113294,-7.427380,4.290612,1.343660,0.995544,-4.974740,6.036088,-7.079598,-5.347827,3.219460,2.511105,3.777947],[-9.769385,-1.145775,5.717314,0.244482,4.916528,4.595897,-0.442980,-0.969781,3.994709,4.583760,-9.359472,-8.728980,5.152413,5.079386],[-6.307542,-5.481289,3.497023,-3.381983,-1.789074,2.312043,6.488701,0.647563,-8.929799,9.234404,-1.990410,-5.047050,-3.101988,7.472612]],[[-7.648230,-4.260684,7.486446,8.591038,6.123006,1.266004,4.538615,1.674626,7.819304,-9.009692,-2.938903,4.592885,9.825748,-6.180727],[-4.138977,2.862175,-9.504446,-3.678081,6.070107,-7.871648,7.101920,-2.868034,6.660239,5.765233,-5.119515,-8.680698,5.056527,9.129471],[3.547488,-5.045053,9.248497,-7.483165,-0.315362,-8.261901,7.620078,-9.632527,-6.250740,2.584047,1.157499,0.798866,0.075628,-2.736087],[9.682490,8.908517,5.391940,2.459830,7.024668,-6.297020,-9.169897,8.153057,-3.591263,-1.823553,6.560016,-6.291552,-7.058104,-5.208203],[2.123320,-6.554255,5.507416,2.582570,3.826948,4.852990,-1.560603,-3.555391,-6.514500,-7.244119,-6.641026,-2.967478,8.256582,-2.205210],[-9.959992,1.226707,8.902745,-5.833311,5.174583,-5.162701,-6.778204,2.046746,0.528865,2.222046,-7.677323,-9.972629,-9.874525,-5.134609],[7.895602,6.044481,3.794496,5.399374,-3.031371,2.155179,6.974548,5.166026,-8.869363,3.055083,-5.572458,9.743743,-4.841487,6.610931],[-5.276628,-6.636130,-9.080613,6.058961,-5.374478,4.855724,8.631967,-7.873923,-1.891491,-1.330490,6.377553,-4.157558,6.618753,-1.444962],[-6.105447,-4.967689,9.324080,-6.964089,4.953264,8.446406,9.933721,-8.304743,-7.079691,6.109066,-6.554089,3.578973,3.380713,-4.388058],[2.363936,1.051110,-7.468402,6.165394,-3.647521,-5.198465,2.549025,-1.891712,-9.673252,7.103931,7.451877,3.971250,0.715417,0.008578],[-6.155412,7.668143,-9.481875,3.341258,-4.009713,-8.643846,2.668884,-7.163273,8.160262,8.596658,-0.704422,-5.503298,2.877542,1.276923]],[[-5.110881,-4.331967,-4.678208,-4.260801,-8.163663,-9.971048,-3.277372,6.590365,3.627057,8.114390,-3.790393,-3.916507,4.536930,3.677503],[-9.942396,2.243230,1.357677,1.768857,8.702377,2.101854,-1.279059,7.140640,-3.794339,-3.287529,-2.885029,-6.744712,-2.398513,7.181360],[3.763285,-3.261072,-7.480853,-7.235442,0.181459,7.221588,-1.300096,-7.526242,-9.379960,7.946653,9.109012,-1.331304,0.610027,-0.834085],[0.552744,-8.753640,-4.935061,-4.153161,-7.569575,6.680880,0.105969,4.409608,9.436954,-6.620242,7.009392,-3.845461,8.085595,-3.648570],[-4.646190,-7.396872,9.194444,-7.981379,9.115030,-6.168751,-8.258452,-8.103223,-9.971263,9.320554,8.937815,-6.405341,9.912110,5.728777],[7.902705,-4.150838,4.428713,-3.712157,0.611440,-7.090455,3.284692,-6.443688,-6.605043,1.446988,-1.897027,-1.967874,-5.555729,-5.063772],[-6.398475,-8.186645,-7.756236,0.802593,4.280899,-1.832952,-9.997183,-0.826835,8.953480,1.400747,7.969664,-3.390282,6.038266,5.292344],[5.968956,-7.659820,-4.475578,-6.974775,9.922352,-2.215468,8.110837,2.787233,0.666201,8.141559,-9.596549,0.330561,-6.704772,-4.282614],[-0.222886,5.339136,1.619101,3.507368,7.680131,-8.371485,7.544526,3.123805,7.050456,8.380663,-6.053193,9.259477,9.462052,-6.678995],[6.318591,-9.399884,0.592502,8.428622,8.918103,-4.659867,-2.767151,2.336500,1.917840,-4.039656,5.672054,3.223433,3.957572,-1.446474],[1.054260,-0.015554,8.096925,0.556956,-0.507180,-6.306662,6.339720,-7.806088,0.706421,-3.431853,9.551070,-9.366990,-8.056809,-4.368438]],[[-5.335167,-5.661638,-3.715181,-4.538622,5.595566,-0.901920,8.051535,4.488759,0.176322,-2.518992,0.771668,4.762766,-7.843790,4.773279],[2.592572,-9.897247,2.142786,-6.271943,8.198119,4.824775,-1.237071,-3.406681,-3.601231,-7.525729,-6.092662,7.366302,4.970474,-1.877144],[-7.100284,-7.016099,2.556373,0.975047,-3.862484,-8.322260,3.428237,-8.665469,1.236447,3.788183,3.917725,3.904547,-2.838160,0.536469],[7.009406,9.206973,-6.593923,-9.230363,-0.775249,-5.253093,2.320908,-5.623430,-1.494680,-3.092777,-2.235927,-0.090049,7.281368,5.224657],[-7.937836,-9.850704,-1.602424,3.541933,4.192147,-7.547460,4.136624,-6.887901,-9.020087,2.667733,-8.128377,-6.847027,4.086559,-6.989032],[5.044476,0.065800,-7.630886,4.405471,2.175127,2.330603,-2.199874,7.876671,-2.410291,-5.559989,-4.686887,-6.015530,3.142166,6.720731],[4.368497,-7.775442,7.596934,-6.734634,6.515745,-3.534764,-6.802965,3.849757,-8.891834,-4.701048,7.041836,8.522810,1.960083,-9.878492],[-5.886619,7.152979,7.786678,-9.361902,2.223683,-2.598328,6.694602,-0.972640,3.469766,-6.659053,-6.157846,-4.722899,-8.943152,6.365218],[8.663844,-9.335973,-0.380363,1.744862,1.552013,-1.032500,-1.591031,0.796250,-2.719993,8.856296,-1.236428,7.474433,1.991675,-0.352366],[6.254516,5.682446,0.213098,-0.527279,1.188910,9.285477,-5.141336,-8.479537,-4.775314,-3.682542,9.221996,-2.626593,6.703692,-3.908087],[-9.574537,-2.128277,-3.945245,-3.801783,-6.396643,9.181423,9.527370,-2.497929,3.845823,-8.828042,6.730429,-9.926884,5.280569,-3.520652]],[[-4.853125,6.802688,5.137535,-1.536485,3.680479,5.507601,9.814264,3.902008,4.068437,-0.961676,-0.730774,-6.069694,6.176268,-2.203618],[-4.820204,-9.496218,4.270138,6.184422,1.391187,0.783589,-7.604293,-2.876306,0.632223,-8.460446,-4.106155,8.448086,-0.697865,-3.896585],[-4.588732,-6.009225,3.086746,9.235208,-5.666124,4.143976,-9.957165,-7.483583,0.037919,4.149336,-8.277338,0.763042,-8.015048,-7.939349],[-4.126236,7.853430,7.894035,6.749671,-0.347103,-9.075225,4.235872,-0.739691,-8.939839,5.201257,-7.132509,-8.528630,-1.937932,7.792997],[7.656985,2.301732,-4.164338,-1.397743,-8.643582,-3.722418,1.565471,8.368283,-6.836074,-4.337833,-2.715361,-0.816389,-2.340983,-4.635266],[-0.057234,-2.751880,8.428910,5.106375,-5.445481,9.537303,-4.559345,0.107111,-5.718412,-6.116365,-4.178020,7.620734,-1.576915,1.618752],[5.479783,-1.498932,2.546909,1.819063,-8.058075,-9.744989,-6.989865,-8.777303,2.027783,-8.687683,-8.187764,-8.051057,-0.574878,-4.391676],[7.387360,3.771053,3.802208,-5.544704,-7.195509,1.548446,6.956475,9.863883,6.746565,-5.117049,3.552222,5.369816,4.303715,4.030596],[1.350420,0.835839,5.109545,2.761929,-6.221112,-2.819527,4.099525,1.455288,1.541169,1.598337,-0.132891,-4.051183,-1.411266,-5.191672],[5.408046,9.164566,7.938443,-5.910160,-7.731371,2.526741,9.633518,9.052314,2.051385,3.756852,-2.063758,0.191655,-8.671378,-3.347617],[8.676856,2.251419,-8.152182,-8.207126,1.627298,9.090341,-3.322046,-4.271099,-0.668470,6.108384,-2.648859,-4.687275,7.141204,-9.502987]]], dtype = "float64")#candidate|1723|(5, 11, 14)|const|float64
uop_1724 = relay.acos(const_1723.astype('float64')) # shape=(5, 11, 14)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_1726 = relay.TupleGetItem(func_298_call(), 0)
call_1727 = relay.TupleGetItem(func_299_call(), 0)
func_437_call = mod.get_global_var('func_437')
func_441_call = mutated_mod.get_global_var('func_441')
const_1750 = relay.const([10,5,2,8,3,-7,-10,8,-9,2,-5,-6,9,-8,-10,1,2,7,9,5,5,2,6,-7,-10,10,10,-8,6,10,-4,8,-8,9,2,7,10,3,1,3,-10,9,-1,-1,-2,2,3,-3,5,-8,7,-4,-9,5,6,-3,2,-6,-10,9,7,9,9,3,-3,-1,-10,-9,2,9,1,4,-8,8,7,-4,-7,6,-5,2,-2,8,9,-1,1,-9,-5,-8,3,-3,-1,7,-9,8,2,10,4,-7,9,-6,-9,-5,-9,-9,8,3,8,1,-2,9,-6,1,-1,5,-6,8,-5,2,-7,6], dtype = "int64")#candidate|1750|(120,)|const|int64
const_1751 = relay.const([-7,8,-8,5,-8,8,-3,8,7,-6,-1,-10,-4,-6,-10,-1,1,5,2,7,-10,-9,-2,-10,3,3,-10,-9,-10,7,5,9,7,-3,1,-1,5,-6,7,5,6,5,1,-10,-10,-10,-5,1,10,-1,6,-6,1,5,1,-7,-7,3,-6,-8,-2,-3,7,8,-8,2,2,4,-1,-1,-10,-9,3,-7,-7,-7,-5,-5,-2,2,6,5,-2,-1,-9,-3,-3,6,-6,-6,7,-3,4,5,-3,-8,-8,6,4,-1,2,-10,10,-10,8,-1,-9,-7,2,-1,-6,-5,3,-4,-1,-10,3,-5,-7,-9,-2,9,-5,-8,-8,-2,-7,-1,-10,-9,-4,-1,10,-1,-4,-1,-1,2,9,-2,9,3,3,-8,3,-4,-6,-5,5,-3,-6,-9,-5,2,-1,2,10,-5,3,6,1,-4,-8,-5,-5,-4,-3,10,4,-3,-8,-2,-2,1,-10,-3,8,-8,-6,-1,-1,6,8,3,9,6,3,-8,-6,-2,6,7,-1,-2,10,-2,10,5,3,9,-4,-3,-2,-1,10,5,9,1,7,-8,1,-7,7,7,10,6,-1,-10,-8,1,6,-5,8,-6,-1,1,6,3,2,5,-7,5,-10,3,9,5,10,2,-7,-2,-5,-2,-2,6,4,7,4,1,10,1,8,5,-7,-5,-7,3,-1,-3,-10,1,10,-7,-10,8,4,9,7,-3,3,7,6,-2,-4,4,-3,10,-10,2,7,2,-9,-7,-7,1,8,-3,-9,-3,-1,-9,-1,2,5,-5,-1,-6,-10,-9,1,8,-9,6,-8,-2,-6,-3,-9,-10,8,9,-2,2,-7,-8,4,-2,9,-2,6,5,-7,9,-3,2,-4,-1,-7,-6,-7,-7,-2,-3,-4,7,-10,-2,-9,5,-1,5,10,-2,10,-3,4,-7,8,5,-6,-4,3,5,10,-7,-9,-8,8,-7,-10,5,-2,-10,2,-6,8,-7,7,-6,-4,-8,3,1,8,10,-10,-1,5,5,-7,-8,-3,7,-8,7,-5,-4,-2,10,7,-7,-2,1,10,-9,-9,1,3,-9,2,-3,-10,-5,-6,-10,2,-7,-6,6,-4,-10,-1,4,10,4,-9,8,6,2,6,-2,-1,-7,-9,2,5,8,-4,9,-6,-7,10,4,9,-7,-10,-5,9,-8,4,-6,2,6,-8,2,-6,9,-6,-1,1,-10,-8,-1,-9,-7,-7,-2,9,-4,3,-1,7,-6,-4,-6,6,5,-2,-10,5,2,10,-10,-3,4,-2,-6,6,2,10,5,5,-9,6,6,7,-3,3,6,10,2,6,1,-10,1,10,-6,-6,1,-4,-3,-4,-10,2,5,-7,-3,4,4,-8,6,1,-4,8,-8,10,-5,-10,5,10,-5,6,-1,-4,6,10,-10,7,7,-7,10,-8,6,-2,1,1,-3,4,9,9,-9,-9,-9,1,4,10,-7,-10,6,4,-8,-5,-1,-4,-6,6,-9,2,-3,-5,3,10,-4,5,-6,1,-5,4,-5,8,9,-7,-1,10,6,-3,-1,-10,-7,8,7,7,6,-10,10,-2,-2,-9,2,10,-5,6,8,-2,5,8,9,-4,7,-6,1,-5,-9,-9,4,-6,4,4,1,9,-7,-8,2,-1,-7,5,-5,5,5,-4,3,9,-3,9,10,-10,5,-5,-1,6,-3,7,1,3,-6,-8,-8,-6,1,-7,-3,10,-4,-7,-1,-2,-5,-4,1,-6,-8,-5,1,-9,5,5,-2,10,-10,-10,9,5,3,2,-1,-10,-3,7,-4,-8,2,-1,-8,10,-7,9,4,-1,7,10,2,-9,7,-8,-2,-2,-10,9,-5,8,-9,9,4,10,-3,-1,2,-9,8,10,4,4,-6,-1,-2,-2,-7,4,-10,3,5,-8,6,6,3,-5,7,-10,-2,3,-2,-5,-7,-2,-3,10,-1,-7,-4,-2,-8,-7,-8,-7,9,-6,-8,-2,2,-9,1,5,8,8,4,2,-8,-6,-5,7,-4,7,-4,4,-4,-10,-4,6,8,5,-5,3,-3,2,-1,-2,-3,-8,7,-4,-9,-6,3,5,6,-3,-7,8,5,-8,10,5,6,-4,-5,5,-5,7,3,-9,-3,3,9,10,3,2,5,-1,-9,5,3,8,-3,8,-8,-8,-9,9,-2,2,4,-1,9,1,6,4,9,9,-8,7,-6,-6,-6,5,-3,-5,10,9,7,9,-7,-5,4,8,3,-7,2,5,8,8,-8,-10,1,10,-9,-3,2,3,-2,-8,-8,-5,8,-8,2,8,1,8,7,-1,-7,-3,4,4,8,-2,-7,-7,-9,-1,-3,10,-7,5,8,-10,-2,-3,10,-4,-1,9,7,5,2,-8,-7,8,-9,-7,1,-2,-10,-3,6,3,6,-7,7,-1,-8,-4,7,8,-7,3,-4,-4,3,7,5,-5,9,5,4,4,5,6,2,-8,-10,-10,7,9,1,7,5,10,6,1,-3,3,-5,-10,4,9,-10,-10,-10,6,6,-9,7,-6,-5,4,-4,-6,7,-7,3,-7,-4,9,-6,5,-8,3,-4,-2,-6,8,5,-8,-9,3,2,4,-7,-9,-8,4,-1,-5,6,5,-6,-1,-7,1,-7,-8,4,-4,-9,-3,9,4,6,6,-9,-3,6,-3,-6,-10,9,-1,-4,-4,-10,-9,-4,-1,-2,-2,10,5,-3,10,3,4,8,6,2,4,-9,-3,5,3,10,8,5,7,-2,-9,7,-10,9,-8,8,-5,4,-9,-9,-6,-2,-1,8,4,5,6,9,10,1,-10,-9,-5,-2,-1,7,-2,-2,5,-8,-1,-4,-6,4,-10,-3,4,-5,6,3,8,5,-10,-2,-8,-8,5,7,-5,-9,-5,-7,-6,-10,-10,2,-5,-10,5,-2,4,1,1,5,6,-5,6,-10,4,7,-2,-4,7,4,7,4,-7,3,2,8,-1,8,4,-2,-9,2,9,10,9,-7,-1,8,-3,-10,10,-4,8,10,2,-10,-2,-2,-8,6,-6,2,1,9,-2,10,4,4,-6,6,6,-8,-8,-9,5,-2,8,10,7,-5,8,-2,9,-6,10,-2,-8,7,3,2,3,10,-1,3,10,6,3,-2,-4,9,10,10,-4,-6,5,6,4,-1,6,1,-10,-6,7,-7,-6,-4,-8,6,3,10,10,8,-9,8,-1,-3,-8,-5,-7,-5,-9,-9,3,-8,5,-4,3,10,-9,9,-9,-2,-1,3,9,1,7,4,5,-6,-1,7,2,-6,-8,-2,7,-8,-9,6,-9,8,9,7,4,-6,4,9,-3,-9,-7,-9,-3,3,-8,-1,-10,-4,-1,-2,-4,1,2,-8,-4,5,7,8,-1,-3,-1,-3,-5,9,9,2,10,3,-3,6,-7,-9,-6,-4,7,3,4,-9,4,7,-7,-7,2,10,3,3,8,-4,-8,-1,-8,2,-4,-2,-9,4,-6,5,-2,-3,1,-5,-9,-7,-7,-3,5,-6,-8,-7,-7,-3,3,1,2,-10,-2,-4,-4,-8,-9,8,6,-5,2,1,5,2,-1,1,9,-6,8,9,-3,7,-8,8,-8,-10,4,-2,3,-5,7,10,1,4,-8,-5,2,4,6,-5,4,-5,-7,9,10,-6,4,-2,4,6,3,-2,3,6,-10,4,-8,-4,7,-7,-7,-6,9,-6,6,-4,3,-3,-5,-6,3,7,-10,-6,-4,3,-6,-10,7,-9,-8,-3,2,-7,-6,-10,-4,10,-7,10,9,-3,-4,-1,1,-5,4,1,-3,-1,-3,8,9,1,4,9,7,-10,7,4,-3,6,-7,3,7,-9,-4,-8,-6,-1,2,-6,2,-2,9,-4,4,-8,-8,1,5,-4,10,4,-2,-6,4,5,-10,-2,2,-9,-7,7,10,-1,-9,-3,-10,5,-3,6,5,-3,10,-3,-3,-1,3,-10,-8,-5,-9,-8,-9,-10,-5,10,-10,6,2,2,-6,-8,3,-10,-10,-1,-5,-7,-3,-7,-5,-10,-3,5,-10,1,-2,-2,8,9,9,8,-1,8,-3,-4,-5,-3,3,-6,-7,-8,7,-7,4,-4,5,4,-8,-8,1,-9,-8,-9,-10,-5,-9,7,3,-2,9,-7,-7,-8,7,-7,-10,9,9,-1,10,-10,-9,6,1,10,-3,4,-1,-6,-8,9,9,8,-5,-9], dtype = "int64")#candidate|1751|(1560,)|const|int64
call_1749 = relay.TupleGetItem(func_437_call(relay.reshape(const_1750.astype('int64'), [120,]), relay.reshape(const_1751.astype('int64'), [6, 260]), ), 1)
call_1752 = relay.TupleGetItem(func_441_call(relay.reshape(const_1750.astype('int64'), [120,]), relay.reshape(const_1751.astype('int64'), [6, 260]), ), 1)
bop_1760 = relay.subtract(uop_1724.astype('float64'), relay.reshape(const_1723.astype('float64'), relay.shape_of(uop_1724))) # shape=(5, 11, 14)
bop_1766 = relay.minimum(bop_1760.astype('int64'), relay.reshape(uop_1724.astype('int64'), relay.shape_of(bop_1760))) # shape=(5, 11, 14)
bop_1769 = relay.less_equal(uop_1724.astype('bool'), relay.reshape(const_1723.astype('bool'), relay.shape_of(uop_1724))) # shape=(5, 11, 14)
output = relay.Tuple([call_1726,call_1749,const_1750,const_1751,bop_1766,bop_1769,])
output2 = relay.Tuple([call_1727,call_1752,const_1750,const_1751,bop_1766,bop_1769,])
func_1772 = relay.Function([], output)
mod['func_1772'] = func_1772
mod = relay.transform.InferType()(mod)
output = func_1772()
func_1773 = relay.Function([], output)
mutated_mod['func_1773'] = func_1773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_635_call = mod.get_global_var('func_635')
func_636_call = mutated_mod.get_global_var('func_636')
call_1780 = relay.TupleGetItem(func_635_call(), 2)
call_1781 = relay.TupleGetItem(func_636_call(), 2)
output = relay.Tuple([call_1780,])
output2 = relay.Tuple([call_1781,])
func_1782 = relay.Function([], output)
mod['func_1782'] = func_1782
mod = relay.transform.InferType()(mod)
mutated_mod['func_1782'] = func_1782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1782_call = mutated_mod.get_global_var('func_1782')
call_1783 = func_1782_call()
output = call_1783
func_1784 = relay.Function([], output)
mutated_mod['func_1784'] = func_1784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_539_call = mod.get_global_var('func_539')
func_540_call = mutated_mod.get_global_var('func_540')
call_1833 = func_539_call()
call_1834 = func_539_call()
output = call_1833
output2 = call_1834
func_1849 = relay.Function([], output)
mod['func_1849'] = func_1849
mod = relay.transform.InferType()(mod)
mutated_mod['func_1849'] = func_1849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1849_call = mutated_mod.get_global_var('func_1849')
call_1850 = func_1849_call()
output = call_1850
func_1851 = relay.Function([], output)
mutated_mod['func_1851'] = func_1851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_539_call = mod.get_global_var('func_539')
func_540_call = mutated_mod.get_global_var('func_540')
call_1852 = func_539_call()
call_1853 = func_539_call()
output = call_1852
output2 = call_1853
func_1873 = relay.Function([], output)
mod['func_1873'] = func_1873
mod = relay.transform.InferType()(mod)
output = func_1873()
func_1874 = relay.Function([], output)
mutated_mod['func_1874'] = func_1874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mod.get_global_var('func_666')
func_667_call = mutated_mod.get_global_var('func_667')
call_1928 = relay.TupleGetItem(func_666_call(), 0)
call_1929 = relay.TupleGetItem(func_667_call(), 0)
output = relay.Tuple([call_1928,])
output2 = relay.Tuple([call_1929,])
func_1939 = relay.Function([], output)
mod['func_1939'] = func_1939
mod = relay.transform.InferType()(mod)
mutated_mod['func_1939'] = func_1939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1939_call = mutated_mod.get_global_var('func_1939')
call_1940 = func_1939_call()
output = call_1940
func_1941 = relay.Function([], output)
mutated_mod['func_1941'] = func_1941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1772_call = mod.get_global_var('func_1772')
func_1773_call = mutated_mod.get_global_var('func_1773')
call_1945 = relay.TupleGetItem(func_1772_call(), 3)
call_1946 = relay.TupleGetItem(func_1773_call(), 3)
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
var_1967 = relay.var("var_1967", dtype = "float64", shape = (2, 468))#candidate|1967|(2, 468)|var|float64
call_1966 = func_64_call(relay.reshape(var_1967.astype('float64'), [6, 13, 12]), relay.reshape(var_1967.astype('float64'), [6, 13, 12]), )
call_1968 = func_64_call(relay.reshape(var_1967.astype('float64'), [6, 13, 12]), relay.reshape(var_1967.astype('float64'), [6, 13, 12]), )
output = relay.Tuple([call_1945,call_1966,var_1967,])
output2 = relay.Tuple([call_1946,call_1968,var_1967,])
func_1969 = relay.Function([var_1967,], output)
mod['func_1969'] = func_1969
mod = relay.transform.InferType()(mod)
mutated_mod['func_1969'] = func_1969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1970 = relay.var("var_1970", dtype = "float64", shape = (2, 468))#candidate|1970|(2, 468)|var|float64
func_1969_call = mutated_mod.get_global_var('func_1969')
call_1971 = func_1969_call(var_1970)
output = call_1971
func_1972 = relay.Function([var_1970], output)
mutated_mod['func_1972'] = func_1972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1939_call = mod.get_global_var('func_1939')
func_1941_call = mutated_mod.get_global_var('func_1941')
call_2080 = relay.TupleGetItem(func_1939_call(), 0)
call_2081 = relay.TupleGetItem(func_1941_call(), 0)
func_382_call = mod.get_global_var('func_382')
func_383_call = mutated_mod.get_global_var('func_383')
call_2091 = relay.TupleGetItem(func_382_call(), 1)
call_2092 = relay.TupleGetItem(func_383_call(), 1)
output = relay.Tuple([call_2080,call_2091,])
output2 = relay.Tuple([call_2081,call_2092,])
func_2103 = relay.Function([], output)
mod['func_2103'] = func_2103
mod = relay.transform.InferType()(mod)
output = func_2103()
func_2104 = relay.Function([], output)
mutated_mod['func_2104'] = func_2104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1849_call = mod.get_global_var('func_1849')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_2108 = func_1849_call()
call_2109 = func_1849_call()
func_1782_call = mod.get_global_var('func_1782')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_2119 = relay.TupleGetItem(func_1782_call(), 0)
call_2120 = relay.TupleGetItem(func_1784_call(), 0)
const_2129 = relay.const([[-2.350659,0.010643,5.735228,-7.712845,-3.432802,6.444159,-1.652003,2.412696],[3.680132,-8.448644,8.373341,-8.008358,-6.505908,-5.216334,-3.727841,-2.532457],[6.417041,8.779824,7.343779,-5.657004,-4.100161,-3.191633,3.798031,-7.096572],[0.716903,-1.733031,0.071077,-9.939303,8.355775,-2.255380,-8.696367,-0.773827],[-6.174235,-7.612967,3.099367,-1.808566,-3.585845,-3.982480,-4.134258,-4.866040],[-0.848288,-3.072105,7.646091,7.373814,1.783201,-5.338205,-4.034730,4.687768],[-0.934219,-8.682073,4.040543,-8.777487,4.860927,6.011009,0.627833,8.135651],[1.073133,9.197002,0.232644,5.068151,9.811440,-7.551792,4.917629,-1.407030],[-0.121510,2.078195,8.678279,5.244661,3.333010,2.704625,8.866215,-9.354297],[-8.433563,9.753777,-2.907997,6.363785,1.487989,0.754356,3.896581,-9.931077],[-3.662290,5.164209,2.734527,-4.128023,-6.762183,9.502685,0.213463,-9.573711],[-8.876646,5.116243,-7.317274,-6.200898,-0.467426,-6.662350,3.900752,7.097571],[3.420812,-0.071007,-4.309850,9.386659,-6.681361,-4.017381,-6.225319,1.520177],[-4.471900,2.444973,2.070140,-6.095145,9.458128,-5.729866,-0.377918,-5.505750],[-1.514118,-2.370407,4.619231,4.845018,3.927268,0.762903,-6.441193,-9.217133],[1.800133,-9.446656,5.959323,8.124005,9.144102,4.125914,7.937073,6.823136],[-5.829811,-4.649557,4.348590,8.938520,1.724636,-9.129654,-4.884596,9.861279],[-8.761082,-4.333848,-4.827322,-6.204270,9.194108,0.048300,0.848371,2.668154],[0.661558,-5.070780,9.874307,9.980669,-9.130115,7.413957,-1.220592,1.300905],[-7.452432,-9.237907,2.501275,-4.532302,-7.293413,9.730363,9.806696,-2.046540],[3.172685,6.127017,-7.282857,5.199870,0.237161,4.946718,4.353803,-5.694638],[6.881815,8.841765,-8.545579,8.111045,7.762447,-4.234174,3.877317,3.822981],[8.354372,-0.155402,4.027849,4.092033,-7.498495,-2.242950,3.131411,9.055421],[0.184019,3.142506,-8.378358,8.846202,0.411460,-7.408408,-7.820904,2.576884],[5.810909,8.491422,-5.473001,2.262347,-3.301408,-6.228264,-2.146058,-3.373294],[-8.591601,3.186260,-0.274702,1.225384,6.860238,5.910492,3.248754,1.723573],[-1.583780,-3.550317,7.297778,7.124399,5.749469,8.862665,2.364036,-6.166661],[2.269441,-1.822209,-7.554066,-0.337560,-7.883141,8.802388,-0.533630,-4.454431],[2.081417,0.214335,-0.127477,-5.215030,3.790060,0.589887,7.138647,-9.214624],[-0.526227,1.152976,-5.082791,-1.029492,0.503236,8.420375,-1.575222,-1.855197],[-7.243665,7.865094,-9.008586,-6.738328,4.128056,-5.415144,7.515878,-0.772821],[3.644436,-3.347828,2.787177,-3.868084,-0.041231,-1.273521,6.434171,7.454324],[8.198501,-2.168088,-6.216037,0.746347,9.499848,8.250597,-6.472385,-1.784310],[1.940299,-0.446279,0.093404,1.626485,-2.355030,-0.820624,-6.449952,8.471698],[-7.629481,3.833074,-6.755546,4.937706,-4.538512,8.113611,-3.114026,-9.353419],[-9.373996,-9.850142,-7.218538,-2.460770,6.174622,-0.550860,-4.418636,3.242615],[-5.564777,8.961897,1.375853,-0.005787,9.955407,0.089438,7.247777,5.699704],[-8.774651,6.428313,2.654745,8.201787,-6.290254,-6.680553,9.830238,-3.079090],[-3.847681,-1.402617,-1.858944,8.114780,-1.934046,9.185300,6.301637,-5.449244],[-5.354569,-6.744325,0.739746,-9.803474,5.008183,-2.729757,3.613263,-4.734703],[-0.505222,1.611625,9.750745,9.163701,1.707632,6.314673,0.753832,-8.890157],[8.809798,-6.177266,-3.592831,3.215099,4.079918,-7.428690,-2.871611,0.503053],[-6.810108,1.603718,6.082720,7.187259,2.302167,2.067150,-5.697415,-9.361054],[-2.142135,-9.403983,5.860909,1.181800,6.258785,3.788515,-0.597131,8.399940],[-7.509485,3.054994,3.841058,-8.829238,7.724717,7.013001,-6.963362,-6.789741],[-9.528609,5.058263,-0.711427,5.438457,9.159016,2.195158,8.957448,-9.031821],[4.044422,7.699049,-6.715909,7.950332,-1.126223,-3.363973,-7.660185,6.768103],[8.445099,-9.496761,1.605149,-5.902438,7.927560,7.614548,-8.158234,-9.007055],[5.816457,-7.465891,2.628053,6.082433,-0.702249,-5.399395,-8.689801,-1.800899],[5.329950,3.940684,-6.013140,9.822682,1.948608,-0.901715,-1.757499,9.553088],[-4.467579,2.019058,0.112884,0.963693,-5.249766,-9.622839,-5.248690,9.026843],[-4.113129,-7.401817,-8.641842,-1.475429,-1.110954,1.649957,8.986148,-5.724342],[-6.350480,9.375375,6.272393,3.255065,5.164635,-9.217230,-5.677318,5.753294],[5.410855,4.205671,3.588975,2.614544,-2.636022,-4.787894,-1.065746,-2.164067],[-9.041715,-5.123038,-8.448674,-4.416309,-7.602787,7.455059,-4.744182,1.165866],[1.473077,1.771975,-6.948804,-9.784991,2.143598,-7.353142,-3.704583,-6.215122],[-5.372040,-3.777575,-4.520545,-3.824497,8.867793,-6.634017,-1.947315,8.122551],[-6.982314,-7.058927,-8.091878,-3.974010,1.411783,0.678569,0.788850,5.689714],[-7.550261,-7.862080,-8.981024,5.331110,8.330423,9.863463,2.370132,5.699842],[6.705726,-2.031954,-3.116168,2.887804,1.119444,6.096405,-2.841285,7.083839],[-9.856314,9.062294,-9.660043,0.693523,-1.486716,-7.416334,7.123896,-6.474980],[6.614654,-1.819201,3.871743,-1.653336,-3.165912,5.679170,-8.582751,-7.464555],[-5.720916,9.508136,-0.902436,-3.528779,6.302837,9.186228,-5.952447,9.607602],[-1.628087,-9.269241,8.436704,8.589671,-1.130540,-4.992264,6.744601,-8.007207],[-7.981515,-5.876672,-0.231795,-0.933054,2.675723,-7.959125,3.412111,-0.528984],[-0.047883,9.706108,2.875904,3.469221,3.635007,-5.759119,-9.053607,-4.075589],[-9.796698,-6.640754,-0.524741,-3.658698,-0.990901,2.553623,-2.811201,6.360949],[-2.773055,-3.550785,0.617434,-1.557780,1.324004,8.868431,9.521927,-6.979524],[6.755890,-2.357499,7.495577,3.347228,1.093736,4.132283,-1.889420,-2.305791],[2.556142,-9.970959,7.096355,1.709646,3.831235,-5.498810,2.446338,-0.940368],[9.141509,-0.123020,4.542777,-5.354353,-0.232589,-0.995048,2.447536,-9.966706],[7.755666,4.797619,1.455076,1.127399,-7.039855,4.861275,5.345783,-1.303828],[-6.109017,5.736468,-6.895119,-1.529027,-7.489245,-9.127463,-6.417864,-1.169539],[6.730021,-2.901861,3.264507,-9.276735,4.439039,0.079179,7.785923,-2.305369],[-2.960824,-6.315110,4.755992,8.250190,2.424855,5.174454,-4.419397,-0.167817],[-2.994957,-9.549945,-6.431452,5.068243,-7.757194,-8.763364,-5.878146,2.568750],[2.931412,4.666682,1.036322,-8.733012,-0.840719,-4.602573,9.731121,6.215625],[8.350925,1.894721,-7.408589,5.483719,3.873244,-7.657478,-0.913004,-3.091260],[2.385052,4.252690,0.644447,-8.817929,7.177338,-7.539637,4.060444,-4.326267],[-8.629070,-6.826936,-7.846500,6.667910,-0.396361,2.164004,-5.716863,-2.785522],[-9.333959,-8.832764,0.658420,1.237769,0.391765,0.087659,9.199323,6.935024],[-5.295332,-2.422963,2.676491,-5.429000,-3.975345,9.727678,-8.289564,-7.432061],[9.261520,-0.262148,4.237442,1.407282,2.251515,9.958453,9.674381,-9.722510],[5.795678,-1.755142,2.569295,-2.460437,4.871571,-2.236692,8.715424,-6.589092],[9.315328,6.615942,-4.658110,3.966506,8.432423,9.580624,1.211609,-5.652424],[-8.792825,6.980849,-5.261100,2.854740,4.628290,2.916525,4.292589,1.710367],[-8.618017,9.296544,-5.972025,-4.941546,-2.232362,-6.005917,-0.867277,-6.949944],[2.595310,-4.392066,1.530745,3.418783,3.655217,0.735903,-1.486627,4.148434],[5.317324,-4.127844,7.063528,8.706118,-9.465449,3.959070,1.271647,5.196101],[6.855602,-5.777033,-4.512793,-1.169298,-5.156894,-3.931237,-1.504449,7.919219],[-0.675186,8.691107,-5.036976,9.036083,-6.073140,3.093082,-2.516644,8.987729],[-8.222275,-3.924317,1.823167,-5.616175,-8.514413,6.463500,-1.270505,-1.295984],[-6.827412,-3.161557,7.739424,5.785505,-8.674978,7.623112,2.202841,6.049900],[-7.787579,-6.578369,-7.011338,1.744639,2.723395,1.312791,7.268775,7.711250],[-8.920025,-6.632016,1.354658,5.784613,4.011477,1.040552,2.287058,-2.237247],[-0.913259,-0.348120,-3.759271,-4.652048,-1.483120,2.414436,0.398268,6.179083],[6.559060,9.853558,5.979259,-2.012544,0.015667,1.875794,-9.987755,-9.579831],[8.588078,5.161426,-7.009969,4.956705,-9.693910,-9.884728,1.803644,4.524278],[-4.074750,-5.691374,2.225219,-6.817704,-9.769369,-2.778605,3.448582,8.271681],[8.879653,-9.595685,-6.807283,-4.041014,4.926121,7.374129,-6.629273,8.619858],[7.378857,-1.382040,-0.161619,-6.794489,-2.011708,-6.605039,7.368159,-3.562898],[-5.481592,1.598026,6.206793,8.021963,-1.669404,4.442627,1.836397,5.494694],[-1.100157,-2.185014,-5.497644,4.237337,1.604694,2.569295,-9.112654,9.263211],[-8.353497,2.050783,-8.548188,-7.803679,9.196820,1.346230,-2.674952,-2.531722],[-0.998007,-2.916220,0.843991,3.592893,3.118963,4.125695,2.274320,-1.897780],[6.781656,7.605271,2.311627,2.984583,6.037488,9.138464,6.183866,1.854962],[-6.267115,5.637447,6.064529,-2.067482,2.444032,-6.615537,-6.504767,-6.477278],[5.842170,5.071310,-0.177777,8.018600,3.314440,4.794240,-3.128220,-0.845743],[-7.282565,-6.472882,9.097021,-2.164562,7.959488,8.277968,-5.584231,0.868693],[7.586813,-0.852433,1.174686,0.662615,-1.026882,-5.705497,3.321621,-2.254920],[-0.672522,-9.506070,9.144126,-9.324998,7.940615,1.307159,7.619783,5.367010],[9.092468,-8.666175,-3.863195,-0.149848,5.748072,7.669310,8.106766,-2.398502],[8.603585,7.884677,-5.763890,3.817772,2.737113,3.365456,0.570050,3.739031],[-3.426173,-8.869166,-0.651416,0.750093,5.674155,-3.005878,-9.018314,-0.744595],[7.417900,8.944826,6.547107,-4.343569,4.407656,0.198654,-8.077108,5.199857],[1.189757,1.391319,-2.230963,3.983293,-7.326586,2.451065,-4.500903,-1.729195],[5.426251,3.074663,-7.630634,-3.996877,5.398426,-7.147729,-5.238451,-3.205891],[9.416236,8.485218,5.335165,2.793060,8.717200,-3.519226,-8.388263,1.207767],[-0.542568,-3.905845,-0.883698,-7.128997,8.615660,-0.595694,8.950645,7.260099],[-6.069054,-3.662822,3.538557,5.660916,-7.459769,-4.545574,-5.397284,7.526137],[1.921509,5.517089,-9.668713,6.504654,1.534659,9.128673,9.035597,7.329958],[-2.149606,5.390523,-6.579697,-3.090363,-9.214242,8.064982,-4.638804,-8.083884],[7.140090,-2.444498,7.816817,4.194398,0.893404,5.775436,3.009086,-7.053853],[6.454232,2.412114,3.250056,-2.430547,-5.872198,-3.155783,-9.075140,-7.064303],[5.672757,9.979442,6.684419,9.103743,-5.152991,1.457969,6.660305,2.898323],[4.761461,-5.211631,-5.518385,-1.608466,9.053300,4.503071,1.519842,0.498338],[-5.416879,-8.559033,0.668683,-1.146648,-6.865579,5.185139,-2.314773,-2.474876],[1.281716,-4.012086,-2.885896,-2.490901,2.325394,3.889113,-1.864408,2.738225],[-5.002232,-6.089518,7.117326,4.187967,-5.244042,-1.455916,5.521632,-1.868540],[9.818981,-9.549229,3.538037,3.895604,-7.325228,-5.386433,8.863833,-9.529716],[2.567234,1.964662,3.465123,-7.946534,3.914648,-0.458490,-7.429692,9.182131],[0.854302,9.062731,7.521015,-2.794853,5.179253,-6.643813,-8.132976,-2.762958],[9.352378,9.635847,-9.131176,-8.393427,-3.681315,-2.675014,5.541637,-5.828191],[6.702585,6.403873,5.833981,2.849299,-1.290155,0.070921,-4.750534,-8.508803],[-1.430075,-3.351009,-0.989067,-0.461742,-0.862786,1.392361,9.982884,-7.528311],[1.656412,1.830393,9.009425,7.586325,-0.136908,6.839223,0.216070,-5.588908],[5.343249,-2.617071,3.977654,-1.890149,-7.028682,5.371635,7.626373,-6.619889],[2.919101,2.971592,-4.292069,2.119316,-4.073202,2.641152,-6.803885,2.858397],[6.106516,4.950285,-5.398834,-6.454712,4.195361,-5.890525,7.360188,5.382187],[-7.230197,-2.817219,-1.838381,4.603692,-8.419756,-6.566832,-1.147785,-1.093884],[9.911525,-9.179411,1.516404,-6.759334,-3.836445,1.559989,-4.241481,7.954508],[-8.180554,0.554430,6.646106,8.557176,-1.454534,-9.837538,2.980872,-7.119500],[0.296990,-7.248702,0.970688,5.992237,-9.811565,1.106777,-4.504884,6.328511],[-8.194344,8.018452,-8.556235,8.698223,-9.342553,9.241128,-5.646316,-8.892533],[0.927474,-7.583762,-9.278056,-5.984919,0.363223,0.764822,-8.383173,-2.090947],[5.359377,-7.925802,-8.849083,-9.652658,-4.137819,-2.927412,6.821413,-7.905271],[5.444209,2.463025,-3.292145,-8.136671,-0.822751,7.032170,9.915577,2.054245],[1.775956,-1.563887,-9.650361,-5.911194,-1.288279,6.569620,-7.824019,-2.286542],[3.007750,3.911267,-1.483843,8.660449,1.518452,9.926869,-0.542049,2.365105],[0.651825,4.506525,1.437575,-5.683460,-0.024769,1.559531,8.429679,-7.662203],[-2.747793,-9.781839,-7.759378,6.240015,6.543291,-7.973733,0.810722,1.491985],[8.833733,-3.327861,0.419645,-6.485339,1.985648,-6.357417,-8.271133,4.999132],[-3.477641,1.096794,5.616006,-2.061347,4.268445,-7.123522,-6.501676,7.021150],[-5.042425,-5.596371,-4.362756,1.284422,5.070958,-6.077834,-8.772770,-5.043427],[-5.522567,0.413023,-8.223479,-8.873817,-2.001459,-3.497606,-1.446098,-2.669330],[-4.880848,-1.892901,-4.253449,-8.334978,4.147304,3.312959,-1.530082,-5.388530],[9.013552,-6.903874,6.345473,5.169818,4.641667,0.290331,-0.202463,-4.722816],[-4.555015,2.242835,-6.565597,-0.156700,7.108454,7.946982,6.573914,-8.779744],[-1.314072,-5.437729,2.963404,1.526900,-5.987237,-6.086941,7.866841,7.351636],[-3.430311,-5.566318,-6.866744,-3.592635,-0.706723,0.374505,-0.731997,-5.820366],[-1.566272,-6.751452,-4.011777,-9.000707,-1.106198,5.322804,1.484682,-2.204607],[-3.716697,-9.685630,3.119919,-9.106429,-8.729317,-5.760201,7.174515,1.782585],[9.764642,5.263965,-8.754798,-7.554503,-4.642920,-0.808160,-2.244715,8.463844],[7.998981,6.684253,8.891564,-9.343330,8.372135,-2.942056,9.781707,-4.296107],[9.250782,-1.817273,2.771272,7.924335,6.014475,6.739355,-8.436273,-7.658102],[-5.730052,-7.363598,0.413451,-9.391639,1.771408,0.235523,-4.670335,-7.223530],[4.875526,4.085788,5.504222,-5.638932,-3.134434,8.615843,5.533855,-5.981783],[5.821729,5.629772,9.399771,-7.400412,-1.645375,4.745851,6.923611,-4.451910],[1.722154,-5.687188,-5.398397,2.252881,-6.134786,5.068784,-2.126685,-9.174372],[1.350415,-7.591929,5.663977,4.555873,-4.829708,-1.701643,-5.618568,-4.905992],[8.999352,6.664299,8.825743,-4.392251,3.279372,8.079133,-8.419856,5.457811],[8.388502,-0.443577,-0.090326,-2.803097,7.798636,2.573556,-2.114391,0.412303],[-0.003480,4.927108,2.921314,8.847036,-1.308967,-7.120088,-1.520818,-9.836885],[5.862135,-6.974829,-4.825803,-2.992788,-8.807198,-8.125663,2.954556,-7.335218],[-8.881158,4.399319,4.766920,-4.296633,-9.588429,-2.386682,-9.297661,-4.731960],[-5.217603,-4.271771,-6.398436,-7.418302,-3.399549,7.262516,-8.732237,0.284066],[6.203218,-8.909928,1.875722,-6.816206,2.794726,4.124315,2.512227,0.604665],[-1.405187,7.536102,-7.040736,4.710056,-4.156893,-7.075578,-4.300281,2.479991],[-8.278311,3.614595,-1.129669,3.045327,-7.248606,8.695643,2.715776,3.002348],[-3.047678,-5.337912,-0.982864,5.875825,-7.193581,8.441699,5.251234,-2.015190],[-0.328897,-5.643194,-6.567189,-4.846192,-8.652076,-1.141431,-2.130040,8.617022],[-2.714515,6.138465,-1.285694,5.226089,-4.150273,7.748432,7.006930,-0.054662],[3.087344,-8.764396,-7.050347,9.959323,2.660320,-3.155280,8.428153,-4.039376],[3.845637,8.271294,5.682117,-7.912609,8.258260,8.122193,-8.943205,7.356812],[-5.203706,7.039283,-5.693420,6.093597,-0.540998,-7.430507,-1.884258,-1.120471],[-5.032473,9.557390,-2.719515,-5.685118,6.087227,3.191808,4.536234,-4.665512],[-4.212850,-5.286957,-3.023920,-0.342480,-6.741802,-4.161319,-7.181075,-0.635572],[-8.008194,-0.894873,-1.082582,6.146206,-8.071232,0.728554,2.197250,-0.357041],[8.373632,-3.762218,-3.786909,-8.242693,7.604603,1.155623,8.993189,4.644733],[6.075394,1.629849,-4.012523,-8.261461,8.931229,-7.326981,0.132316,-6.659265],[9.306789,-1.059748,-4.962152,-1.693045,7.827880,2.283222,-3.418561,5.625169],[-4.447235,6.754056,8.812393,8.383256,6.053693,6.539308,-5.714651,3.103270],[-4.973955,-0.834729,-7.903902,6.309306,-1.856641,7.446803,1.542386,7.195975],[1.380984,-7.672342,-1.465946,7.957573,1.728377,-1.812158,-0.896846,7.631954],[7.704646,6.387172,1.228781,8.552166,9.489266,-1.597412,1.285958,-6.456248],[-5.801818,6.389652,0.609442,-9.420186,9.651076,-7.949259,-9.308085,8.862849],[6.977600,0.573733,6.435537,3.089518,0.215757,0.736099,0.681229,9.288578],[-4.698613,-6.386390,0.207472,-6.025160,4.936536,0.783586,-6.363399,5.543025],[6.375884,-9.266383,2.531369,-5.095752,4.004685,-3.522128,7.130310,-5.031110],[-1.137670,9.826147,4.431225,0.205980,3.255346,-7.579776,7.576832,9.663828],[9.189982,8.544104,2.212682,8.166790,2.862192,4.841704,-6.458638,-2.142943],[-5.441575,-8.285832,4.883093,-1.167953,-3.414303,-5.887618,-5.658491,9.803977],[-2.456060,1.710163,-0.213975,-9.927115,-1.005839,-6.902686,-7.091148,3.495873],[8.420878,-7.749148,9.358257,2.942823,-2.639636,2.507724,9.571951,-9.872161],[6.688640,-2.580498,-5.769908,0.436702,-7.826613,0.477361,-1.207791,-4.360431],[5.568396,-1.259537,5.906744,-1.942853,-9.421769,7.576073,-5.110749,6.893520],[8.132077,8.969122,-2.229617,-2.017217,6.969193,3.775425,-1.338280,9.617375],[3.621064,5.700706,0.744859,-2.755669,2.103831,9.440209,3.802668,-1.699727],[-7.160826,-0.034642,-7.731222,-0.001743,8.023943,-3.221889,3.343526,1.247918],[8.111485,3.357924,-5.908180,-9.850726,4.299069,-9.118060,-6.600631,9.738549],[-6.863842,-8.826463,-8.675334,-6.748214,-5.913922,-6.592060,-1.382100,-7.111520],[-7.521805,-0.332942,5.637117,-5.086793,2.301336,2.480941,5.969038,-2.333219],[5.352008,5.231464,3.975584,4.349581,-8.509009,9.242357,2.945804,-4.132359],[-7.290764,-9.004713,-9.536326,-3.907822,8.459204,0.557524,2.384759,4.962702],[-5.572369,-4.006164,-0.549395,-3.173563,3.344115,-0.800248,7.532797,-3.504674],[3.400174,-4.661507,-7.120072,1.584409,-8.452018,-1.995561,2.990939,-2.349394],[-6.449666,1.209857,-6.444666,5.394744,-4.620063,-3.139867,9.738117,8.648538],[-0.035765,-9.194576,-6.225626,-2.706461,-7.942901,-4.916295,-8.345309,-1.060597],[-8.096549,-3.068530,9.184316,-7.802964,7.757667,2.684179,-3.170410,7.155899],[-0.288334,8.198409,-5.288749,-5.974182,-4.816291,-9.917699,4.499603,-8.654306],[-8.775116,5.897778,-8.513518,1.797447,-8.222756,-2.473541,9.443188,0.474486],[1.348591,1.782734,2.408055,0.903105,-8.361749,-7.298696,-2.512023,4.293190],[2.908002,-8.412460,4.000923,4.486548,-2.744931,-7.342213,-8.659809,-4.935601],[-1.958286,8.090431,4.900366,5.386708,-0.045923,6.237828,-2.491661,9.195166],[4.703911,-4.276286,-1.695881,6.853738,7.214291,-1.607338,1.512645,-6.901092],[-0.487876,2.407310,-0.340527,-7.839526,1.519478,9.375034,-9.598205,4.798762],[-4.744167,-6.798255,-2.957172,6.820394,7.656101,9.932849,-4.911991,-9.258966],[2.659746,-9.973005,9.741874,-8.559747,5.785868,-6.164999,-6.988946,4.645703],[5.325837,0.044163,5.530950,-5.364512,6.754485,-0.245512,0.306936,-3.047713],[-6.683808,-0.033183,8.292357,-5.285852,-3.153207,9.640265,3.668074,7.585082],[-4.046659,-8.126403,2.264018,0.171457,-2.698010,4.537091,-4.783800,-3.455852],[-2.358337,-5.550631,5.474916,-6.843183,-9.791633,-7.984685,4.508159,-3.253940],[0.320495,2.400774,1.874114,5.080164,-4.935577,2.315067,-4.928107,-9.963238],[-0.003584,2.526384,2.730910,0.471625,5.563821,3.717902,6.221609,-6.998451],[-9.058858,-7.791522,-1.281218,7.953746,-4.433034,-2.801222,-1.854708,3.406867],[1.748953,-7.083175,0.627742,-9.877317,-9.016172,8.146826,-2.067408,-2.871440],[4.451111,-3.587922,-5.610981,0.209128,9.503481,9.962768,-0.688960,-8.769387],[7.622292,-2.201916,6.381923,8.555613,3.250745,2.805840,7.102971,-4.485259],[-2.212520,-8.553655,4.785756,0.351009,7.015906,-9.433252,-7.643094,-7.469183],[-0.378488,-6.262728,0.159061,9.887674,-5.256658,-3.514966,-0.143172,-1.466860],[-5.505157,6.788184,-2.926653,-2.026599,4.247493,0.844912,6.614135,-9.198061],[0.907521,5.125436,-6.018477,5.064285,-1.591988,-0.043849,-6.148415,3.636063],[-5.403304,-3.102797,-1.772719,-6.574164,-6.559846,4.638450,1.939032,5.824174],[-8.920464,-9.845380,1.153364,4.749970,1.147181,-9.522131,-0.666505,-4.530476],[-5.269738,-5.043761,7.850022,-6.219448,-4.869281,-4.524672,7.035305,-7.539361],[-7.258570,8.569534,-4.856435,4.486446,-0.087223,-3.642858,-5.693051,2.494697],[0.942760,9.395762,2.388517,-1.980292,3.075133,3.247692,-3.454293,-9.819537],[-8.887641,-2.546535,-0.907910,6.223814,5.582700,3.533000,-1.273429,-9.280159],[-3.813600,3.904003,-4.672855,-1.089495,-8.394402,-2.009067,5.585792,4.190073],[-6.252669,0.287195,-6.111447,-7.533362,-6.466600,1.196817,-6.263621,-4.989829],[0.296843,-1.231218,-3.107124,2.484064,7.266542,5.825434,-3.467668,-7.761572],[4.333549,1.713682,-7.998629,7.557125,0.554713,-8.940400,7.020007,2.437401],[-9.501081,-4.912780,-4.860175,5.297643,6.395541,-9.243230,1.787903,3.485987],[-6.637321,-8.803687,-6.736943,6.632665,-4.774415,2.343681,0.888317,-9.408685],[8.822075,-8.289510,-2.364496,9.379552,-0.078723,0.830873,-1.992974,-8.484425],[2.320324,-8.386369,2.667832,-9.860907,8.730809,2.599773,-4.306276,-0.103674],[-0.202118,7.352827,-5.299259,-2.411082,-9.247471,-7.825324,-8.378990,-1.109340],[-6.179648,8.430363,-4.791990,1.822350,-5.950317,-4.365699,2.616036,-4.434889],[1.196898,-1.075311,-0.106455,1.695256,4.826722,8.563117,-0.705332,7.016050],[-6.064664,-7.957892,-5.068809,-8.689973,-9.532578,2.333612,4.466664,0.344323],[0.102401,-8.185064,3.393442,0.168276,-1.991149,-6.812302,-2.309411,7.674049],[3.327579,0.224268,5.856170,-9.771758,0.963193,1.679861,6.314742,4.425254],[4.863097,-9.974429,2.646527,7.098163,-9.081282,0.925267,2.098219,-1.282863],[-5.650758,9.370225,8.720670,-0.005822,7.272637,-0.578016,-1.624823,-5.865485],[1.952274,-9.513424,-4.820714,-5.048913,-3.197272,9.188291,-2.494073,-0.955145],[1.379496,9.990409,3.534672,6.769201,6.485871,0.808859,-3.135860,2.487644],[-0.040066,-9.798111,7.569743,0.877774,-0.091308,-4.557537,-9.155859,-0.711697],[-1.272933,8.196746,8.173078,-4.717689,-1.038461,-5.718598,8.464397,-0.383011],[-0.519208,-4.408314,-1.570325,7.300205,-8.727439,1.162839,-1.198911,2.704040],[4.682163,-9.807427,2.668590,-0.795470,-5.889025,-8.695997,-4.979781,7.484791],[-2.810720,1.622980,0.514091,1.919232,-2.024206,7.232970,-8.014182,0.050311],[9.305333,-4.724544,-7.617768,-1.166115,-7.470114,5.714958,0.305009,1.689771],[-7.649618,-9.513139,5.594239,-1.560029,7.692710,-4.587894,-1.697002,9.415063],[3.754522,-0.667591,-2.554705,-9.481135,-5.283633,-4.099278,-5.174325,0.016291],[-9.922358,-2.393646,4.068028,9.394092,-0.974129,5.113018,7.223365,-2.719961],[-2.955233,-4.036599,5.871237,9.018470,-2.217958,-3.942695,9.086116,-4.244902],[2.034275,8.330728,5.460224,3.139689,-1.478251,-3.194193,-2.593068,-6.112399],[0.275934,8.051395,4.474559,-2.545648,-7.885771,-3.604352,-9.153734,1.763468],[-5.968403,9.484772,9.674373,1.885369,8.211733,1.691203,5.984059,-1.436082],[5.319486,3.921650,8.031418,-2.222146,-9.056555,6.145105,7.336603,5.597939],[-8.993037,0.690336,2.288335,3.583607,-3.015074,-1.575230,4.960758,0.916029],[4.515865,7.937385,-1.396291,-5.174449,0.984938,-6.890684,1.998958,-4.456491],[-3.683593,1.542168,-9.885862,-9.694751,-3.301868,-7.596449,4.787148,-2.363473],[8.631927,9.272932,4.688458,-0.055678,-9.423106,-1.647145,-5.946528,4.146047],[-2.239380,5.922378,9.689942,-4.093989,-3.315226,1.103284,-9.164318,-7.214397],[-1.258139,4.181678,-2.212561,-5.341911,-3.461881,-2.627129,0.985377,5.635474],[-3.402803,-5.851327,-4.995828,0.338498,-6.857164,0.528931,-9.348171,-0.849894],[6.415128,7.271321,6.286556,-3.334235,-7.957821,3.337936,-4.073725,7.115485],[1.935917,0.077552,-5.323506,-2.345812,1.070457,0.094968,-1.960367,-8.731196],[-8.681830,1.789699,0.758018,0.083941,-7.078215,2.802237,-8.601421,4.842852],[9.446346,6.970473,-1.637318,-7.537510,6.528026,1.031072,2.022242,-0.817663],[9.570250,9.985694,2.207065,-9.142097,2.835060,1.086459,7.124350,5.367542],[1.357671,-6.992354,3.821255,0.855700,6.051761,-3.224723,6.138314,-2.003281],[-8.738741,5.261035,-0.979372,9.509661,-6.095327,0.058385,3.616654,-7.086344],[-4.307376,-7.501966,9.932857,-0.103320,1.327668,3.977493,6.249420,5.547806],[1.667717,-6.900964,7.932809,-6.166936,-7.434972,1.975839,-1.552575,-2.937865],[-2.893793,-7.626242,-0.950857,-0.638970,7.629743,-1.834537,4.062532,-8.233069],[5.136494,4.594383,-8.818117,-3.807643,3.980040,7.121156,3.993137,-8.420023],[-1.440768,6.943126,-3.363556,-3.490854,3.155771,-6.387099,6.503537,4.318938],[0.648790,7.067116,-2.860164,-6.780265,7.831286,-0.585870,0.346414,-0.819771],[9.119026,8.929712,-0.470719,-0.476899,-6.458500,-5.340475,1.326218,-9.150481],[-5.401639,5.950576,1.035808,2.978551,2.373632,4.226404,-8.226803,-7.202006],[9.853937,9.531224,-2.950519,0.797239,5.506035,-3.770884,-0.446095,9.353945],[-9.072473,6.080369,1.920602,-7.326993,-9.049466,0.500840,3.435847,7.811327],[4.863181,-8.447728,-7.844702,4.161032,-9.887938,-1.772902,-4.236062,9.857281],[-5.370068,2.730429,0.600403,-4.149317,3.640208,8.621345,-1.952731,-5.510270],[7.945570,9.643928,-1.536561,7.065100,-3.711096,6.388040,-5.078004,3.841795],[-0.893500,-2.582451,-6.278788,4.901711,-7.677390,-6.143511,0.284279,4.511498],[-9.436281,-8.800241,2.145609,3.757908,-6.720641,-4.804499,2.246497,6.241502],[-1.034049,-6.079005,8.374657,2.761537,-8.566518,-7.760151,-3.003092,-3.477615],[-7.826235,4.243085,0.345768,3.320905,-6.595442,-5.013893,2.124690,5.619573],[0.142102,-3.514037,1.534174,-2.767232,8.047474,-2.791593,-1.136012,-3.907662],[0.297829,-7.751066,-8.081873,-9.191139,-5.190628,0.867796,6.386703,0.967181],[-1.161696,1.834987,6.349467,1.545109,-5.550840,-7.220216,-6.409263,1.139611],[1.532431,-9.296587,1.158180,-2.476446,3.930302,1.535814,-2.552685,6.037691],[-3.611018,-7.024203,3.032376,-7.538160,5.003209,-0.267672,-3.907546,-8.796711],[-8.144533,8.419096,6.837768,4.810236,2.265814,4.803910,6.737009,-3.832120],[4.529896,-0.622528,-6.630411,-0.224531,4.479641,-9.345001,-3.252527,1.746083],[8.567670,-0.444118,-0.959335,-3.633917,-6.494582,1.386956,-8.802059,1.414842],[4.934848,-8.007101,5.044963,8.566329,-4.385157,-2.735520,-8.044556,1.846072],[-8.366623,4.580986,6.679564,1.673187,6.970278,4.803074,-6.910036,-0.806648],[-6.299452,-5.234900,4.029798,5.090747,1.213653,5.013059,5.376165,9.268500],[-6.795531,8.828430,-1.245344,-2.148630,6.619359,-8.636812,-0.953380,9.127243],[1.212888,-0.065842,-5.447987,-6.372277,2.416805,1.567726,-8.794295,4.123312],[2.237278,-3.609155,1.670444,-8.968113,2.144861,-8.528407,9.877270,-2.968251],[5.423241,8.942562,-5.181028,3.903654,0.791096,1.382118,-6.784610,6.331895],[0.601776,2.608256,-6.080976,6.971318,-3.748711,2.241937,-6.374997,5.849789],[0.704531,6.390346,-9.146739,9.168697,3.320309,-2.215583,9.224233,-2.455541],[7.835664,5.428166,5.875527,5.110936,4.054449,8.385738,9.655302,8.632824],[6.838178,-1.900166,-9.367896,-4.656454,-3.484570,3.661506,-2.565922,-3.253193],[2.905168,0.124332,5.908923,0.933400,0.256831,-7.690505,1.971320,9.527424],[-0.503601,-1.878593,-3.418728,-3.249144,0.943282,-8.921175,4.001421,-0.712371],[0.749136,8.826164,-0.767755,2.117744,1.359806,-7.077685,7.635244,-9.963006],[-9.240605,-2.481840,4.333335,6.246282,-8.075020,-3.077959,8.333915,1.902244],[-1.660937,3.506031,9.206384,-7.155359,-0.184054,7.607080,0.050913,2.704160],[-6.837460,-7.723425,-5.291246,4.675725,2.501370,4.826161,-9.897728,7.342450],[7.051836,2.925526,2.739989,-5.972293,4.182241,-1.489175,3.029430,-0.267815],[0.251330,1.930573,-9.025766,5.495713,-3.207597,-9.332473,4.918317,8.825166],[-3.009343,4.033209,-0.202134,2.615556,9.038106,-8.138738,2.447149,-8.003981],[5.819677,7.800019,-3.184596,-4.213820,8.489921,1.320043,-0.972741,6.059719],[-2.258877,2.829413,-2.472049,-3.420439,-8.255051,-7.866050,0.379763,-5.432030],[-8.769633,-5.769326,-4.811819,3.207091,-1.526384,-3.159160,4.464312,9.846983],[-9.157248,0.583053,-3.371988,-6.212416,-5.311683,-1.024038,-2.912048,1.459087],[-7.544463,0.590837,-5.193794,-2.118420,-3.350581,4.909818,3.223663,7.633165],[4.202771,-3.018719,-5.214221,-5.273674,-9.571163,-5.379500,-3.233350,7.460186],[8.408790,2.633363,-4.345363,-9.108748,8.243839,-1.073074,0.144578,-8.901664],[-2.196256,-1.713589,-1.943727,-2.308537,5.599290,4.184237,-5.317545,5.782178],[1.215180,8.562020,-5.154767,-6.091160,9.548764,-2.055373,-0.056709,-4.124214],[-6.782361,2.510954,2.023041,7.884627,-5.440677,-4.196049,8.816162,6.628272],[2.102159,-3.210844,-7.643393,6.574873,-8.778785,-5.634395,-9.323682,1.460403],[8.361607,4.341748,-0.783276,-0.273102,2.709318,8.228043,-7.424394,-7.014112],[1.432578,9.555868,2.526337,-8.056570,2.281044,6.302672,8.346172,-3.537366],[2.160966,2.315727,-4.174917,9.265475,2.529539,-6.784951,7.316299,3.858056],[-2.346188,-8.692472,0.321814,4.421926,-7.819533,-5.161403,5.732475,-4.497826],[5.716375,0.285438,2.874413,3.669934,3.855730,-9.261543,-6.822601,-9.346727],[1.060981,5.118442,8.891714,1.577334,7.583195,2.384723,-6.238559,4.241218],[8.797536,5.630930,5.745247,9.394036,-0.382557,3.817369,3.354295,8.617947],[7.942837,9.775259,2.234627,-1.373495,8.951205,-6.159692,0.768772,8.565414],[-6.400629,-7.628041,4.008609,-4.803487,4.074539,5.522853,0.519363,8.204925],[7.751802,4.768513,2.383204,0.345713,1.518505,-0.244218,9.186111,-7.463957],[-3.476810,-8.125057,-0.413756,-8.900273,-7.320145,1.316327,-3.071364,-9.229183],[2.767606,1.114534,1.470885,4.813894,-4.453642,-1.299856,7.717773,3.997726],[3.737367,-3.043675,-5.029112,1.598715,-2.641083,7.346726,-7.640894,-4.167999],[3.830862,-1.853458,-3.266960,-2.153257,-6.029554,-4.755980,1.721439,6.087256],[9.006489,-9.519682,-3.854179,1.534370,-5.903001,-8.670299,-3.750844,1.368149],[-9.529017,7.114702,5.900288,4.982792,-4.180573,-3.004554,9.527648,-1.358660],[6.823824,-5.331440,-4.402797,-2.190443,-7.733521,7.095979,1.788246,4.503001],[3.633805,-8.433473,-7.943475,-1.357683,1.984891,-4.766648,-1.921123,-6.563444],[9.560276,-1.763268,-7.178108,0.528738,1.616739,3.076547,9.227134,-5.454716],[7.568019,7.893150,-8.080156,-8.918872,-6.224662,-0.233186,9.258094,-4.933083],[9.337736,3.531079,5.446275,2.857449,9.956086,4.122966,5.225557,0.282753],[-5.589715,-6.589119,-9.955529,8.320859,9.584041,-0.881600,-3.916701,8.658599],[0.245108,9.560713,2.573508,9.598406,6.928330,0.362466,-0.505527,-7.789727],[-0.658823,5.831301,7.564574,6.739595,-6.940016,-9.590623,6.021518,-1.420401],[-1.239352,2.085728,-4.702710,-4.293927,-1.139843,-1.142591,1.467610,5.966325],[0.830180,-9.025632,3.657747,3.888734,8.568439,-2.452045,-5.198262,4.118303],[-5.809775,-3.768036,2.426569,7.010247,3.531602,-7.331044,-9.676025,-7.010875],[-2.014595,-6.738988,-8.170248,9.702253,8.607140,-8.410469,1.136057,-5.331189],[2.295464,-3.349190,-5.733824,-5.785978,-5.027709,-2.454788,-7.268963,-4.673991],[7.536949,3.843347,9.448021,-2.695169,-9.545646,-6.985139,-1.377226,-6.701057],[3.121047,4.414774,-7.813361,3.336326,-8.622015,3.517674,-2.821572,-5.193681],[-3.543493,-7.443736,-2.000040,3.489315,8.580742,-8.807312,-1.716443,9.984033],[-4.481182,6.725401,-7.739082,7.039321,-8.586557,-1.325584,-1.720859,1.917726],[-2.099192,-9.361472,-3.778059,0.708748,6.840937,1.696117,-0.163148,-1.437832],[1.304106,8.111336,-3.079568,7.401234,8.849144,-4.680620,-7.515734,1.785082],[9.701029,3.430133,9.077824,3.676678,5.551588,-0.871322,-9.010317,-5.223335],[8.382905,8.722422,-2.341908,-4.381585,-2.104494,5.464810,-2.632438,9.379180],[7.858110,8.962699,-8.948552,5.683130,-1.557813,7.212117,-8.443731,-2.485623],[-7.169502,-3.312351,-4.036797,-7.001119,9.007598,3.353475,-3.389430,1.622869],[-3.915214,-9.615450,6.271723,-2.815786,-7.034074,-9.765013,0.118320,-3.641556],[0.504115,-3.714232,9.815109,-2.330771,-2.044615,3.343850,2.640919,-8.520977],[5.037130,-4.114088,5.995330,-8.511582,-6.092308,-4.746980,-6.470558,1.501203],[7.238583,2.679792,6.335237,1.652778,-3.486120,-9.713199,9.190507,7.094500],[-9.804759,-3.029988,-8.955616,9.922624,5.155298,-8.856509,-9.644172,2.562045],[9.239378,-4.876921,3.834333,-1.508425,-1.983512,4.056013,-1.253758,6.370218],[-2.555314,-1.064405,-4.174527,8.532987,1.220679,2.472229,-0.079525,-3.938781],[-0.551055,-8.431623,-2.061053,2.019948,7.697400,4.950057,0.198294,-5.621621],[-0.083588,-0.124234,-7.735605,-1.081797,6.344759,1.394041,6.781309,2.354105],[9.490386,5.678398,-1.643657,-7.339111,4.902030,9.981269,-8.872288,-1.399544],[-7.364525,-6.047889,-7.123626,7.399625,-7.981795,4.471671,-4.943327,4.129686],[-1.869470,4.718271,8.172558,2.815544,8.483474,0.866709,-7.537218,-5.106629],[-0.932662,-5.455978,-6.501214,-3.244335,-0.121761,-3.693515,-7.341941,-0.958528],[-2.908483,-7.645236,-8.233868,-9.490698,-9.205247,2.512163,3.803091,-4.241992],[-1.030837,-1.970340,-9.994700,-7.001488,8.163627,0.475365,-7.855580,-7.886756],[2.921755,8.555355,-4.749538,-0.738632,5.584907,-4.417460,1.487506,7.195498],[9.671359,-0.801791,-9.037876,-5.989621,0.794403,-6.305308,-5.166612,-5.129660],[3.229995,4.415363,2.190185,-8.669626,6.369507,5.966228,8.577347,1.620122],[6.492397,-9.942429,-3.806970,9.465988,-7.288377,4.672790,-6.078031,0.062890],[8.994595,-4.839553,-9.596711,-7.539702,0.960133,-7.011150,-6.178518,4.069287],[-8.239414,1.731782,-6.275154,-8.547695,-5.758948,2.404865,-4.783990,-3.640641],[0.412286,-6.955289,-0.150411,-0.771694,2.844238,-3.085738,-6.117615,0.900912],[-4.121667,4.436204,2.476703,6.585171,9.378693,-4.806970,8.068704,-3.668296],[4.294804,-4.142670,5.540419,2.037386,-1.283819,-5.735842,8.247864,0.324322],[-3.731923,4.605123,-9.716493,-0.279852,4.605598,7.787267,3.326557,-0.136466],[2.129336,-0.035963,6.857875,4.341256,-0.585889,-0.071244,3.550706,4.752020],[-1.526707,3.413870,9.858252,-7.808747,-8.981370,-2.185673,6.312232,2.743984],[8.621039,6.097239,5.469552,-8.241088,-5.939026,-4.958782,-9.947814,-0.371157],[-4.873525,-9.334285,7.426665,-9.740570,-4.901359,3.194380,0.236992,-6.682018],[0.171132,7.308405,-6.777886,-9.010421,-8.925856,-0.306242,-9.217413,4.050575],[-4.739728,-1.341440,9.732284,-9.711464,9.983850,0.706191,-4.179444,-8.836985],[-6.168702,-3.606589,5.406634,3.599032,4.745756,5.674545,-9.589476,-3.014619],[-0.802163,-6.842571,-5.659666,1.736384,5.023118,-6.874885,0.627921,9.854764],[1.129296,-0.834153,-6.792464,-2.219070,-8.123710,6.131079,4.118743,2.963795],[-1.624806,3.274614,-5.141166,2.106335,4.395706,2.127438,-4.695399,-9.670659],[5.961197,-7.696375,8.698978,4.982399,-5.734764,-0.492871,4.580867,0.828578],[-9.701805,-3.483739,-4.802420,-3.037412,3.579106,-9.396133,-0.712235,8.588092],[5.899571,0.458296,6.055993,-3.138374,3.334947,9.393410,1.766924,-2.664168],[5.584083,-4.454796,-6.935788,5.894048,2.588306,7.967999,3.819634,3.853622],[7.521730,2.800267,3.731638,-0.286765,-4.316013,2.093316,4.182419,9.335448],[-5.195874,-4.818622,-5.206049,2.319398,3.867247,3.295065,4.402744,4.103986],[7.711171,1.884612,5.247600,0.933606,4.725758,9.085665,7.677576,2.991515],[-7.976320,-3.358944,-7.372558,-8.692545,2.716693,-2.077152,-6.875267,2.917594],[-0.595797,7.763357,-9.566452,0.158007,5.707507,-1.420156,-2.875980,9.904722],[2.196802,5.577806,0.907726,3.277998,-2.914659,7.098822,-5.754502,-0.229570],[-6.921156,-9.709620,0.717471,-1.320344,-9.230434,8.335185,6.849174,4.132449],[-5.640737,-8.323114,0.067010,-7.173959,8.211338,-4.361662,-6.601736,-8.748892],[-5.750832,-7.887349,-1.799067,3.938362,5.003156,5.898850,2.952929,-3.942534],[-8.997559,8.531538,-2.053142,3.690522,6.592916,0.814171,-6.374787,-7.549176],[-3.270077,-2.249711,-8.927613,7.069788,-7.338089,-1.856295,-3.745642,-7.535420],[1.262775,-8.626980,8.451218,0.331407,9.833278,3.388156,-1.085814,0.204177],[-6.604058,8.738965,8.404399,-5.909999,-2.239746,9.159123,8.137900,1.420687],[4.227185,1.562959,5.381183,1.668956,4.518039,-6.609084,2.065363,2.167333],[-9.442171,-5.397603,0.766540,6.823338,9.660622,-6.637014,-9.963383,3.905963],[5.017855,1.750665,4.660596,-9.391580,6.418947,-2.404849,-1.950845,-1.097554],[-8.987957,-7.753869,0.420034,3.992555,-3.032404,-4.531774,4.337605,-1.075673],[-5.282043,0.024745,-3.380294,-3.786468,6.818270,-7.683775,-3.890245,-0.395467],[7.625815,6.616146,-3.773714,9.540363,-7.696992,-2.333379,7.977162,1.216010],[-3.874970,7.400892,-6.887891,-1.802995,-3.524553,0.088526,3.646079,-3.707355],[-1.646077,5.178264,-4.108866,5.383991,-9.182667,9.215242,-5.637272,6.627351],[0.802522,5.521280,6.925134,1.658997,2.661781,-0.155438,-0.045019,4.721798],[-5.046583,-8.497277,-7.242691,-0.507223,1.636554,-6.824711,-3.347663,-7.283739],[9.232880,9.917116,6.811514,-9.400864,1.486509,3.075974,7.678644,-2.334225],[3.029121,2.814558,-0.407982,6.008301,5.389553,6.757685,9.307152,1.077965],[5.463526,8.847482,-7.011065,7.327488,3.156514,1.075107,-0.892152,-9.492280],[-6.983806,2.835803,0.502591,-5.646105,-1.614545,-0.337970,3.266260,-8.159772],[-0.634852,8.291839,-9.146113,-9.057231,9.736106,-7.408554,2.848666,-4.518264],[-5.827623,-5.860645,-8.889122,-6.859858,-0.338973,-0.493704,4.462392,1.296989],[9.864129,-0.404360,0.412407,1.184094,-5.167508,-7.765111,-3.355814,-9.286876],[-3.343544,9.323597,5.603776,-0.300857,-1.418724,-5.176617,1.167032,-8.752452],[-5.325944,-4.452200,7.957420,2.173978,-8.121611,-3.285087,-5.468000,1.960252],[2.746692,1.003422,4.847339,6.515149,-4.669506,1.823127,5.236222,-2.016221],[-8.390630,6.253999,-0.104772,4.423639,7.815191,-3.669214,-5.991634,-0.964628],[-8.039214,2.176612,0.270070,0.096368,-8.594611,-7.886361,-5.146462,6.338483],[5.150769,5.676795,3.697120,-3.236252,-0.036392,-6.822281,5.828122,-3.966567],[-8.515098,9.486868,-5.084548,-7.464671,4.767951,-4.637851,4.281098,-4.620560],[3.571024,1.518194,-4.703927,3.625285,-1.814724,-4.181916,-9.457774,8.483187],[-9.680313,8.322321,4.128407,4.536329,-3.541568,7.159943,8.218464,-2.715012],[2.931837,-6.408167,-7.312988,-4.045994,5.272690,-2.120408,1.585672,8.057455],[-6.281560,6.385414,-7.260139,-6.403145,-7.520326,-9.896579,3.601203,-8.406210],[-9.881651,-2.679475,-8.051826,5.255766,7.203960,-8.947798,7.672550,-6.627133],[-4.230906,-8.383183,-3.551111,5.483478,-4.755467,0.350291,-1.057311,-8.285274],[-1.525852,6.330865,1.174509,-8.148304,-0.187391,8.991200,-6.811834,0.969422],[3.313121,1.669191,-4.806964,4.263947,1.841057,-7.969639,-9.651381,-7.262099],[-9.835271,-0.073089,8.859075,-3.583883,5.231906,1.407073,-2.972719,-4.997022],[-8.207914,7.068367,-4.278289,5.761157,9.242526,4.627132,-9.732380,-3.554890],[-8.036299,-6.589118,-7.754464,3.511278,5.280311,2.891294,-2.280678,7.128304],[-6.073397,4.033611,5.187621,-1.586517,5.811577,0.824099,8.957030,-9.949432],[-4.490196,8.096198,1.435025,-4.550721,-4.484082,-0.599434,4.368525,4.008782],[6.801468,-6.428318,-1.928471,2.511245,-8.376005,4.926708,2.021150,4.101770],[7.045500,-7.771417,-6.763944,9.893388,-6.778793,5.055866,3.221046,1.198750],[0.151811,-0.644974,-8.090765,7.500282,-0.057961,6.804455,-5.416477,2.892104],[1.024449,6.091762,-2.228907,-7.646801,-9.639003,-9.207365,0.759231,-7.531216],[5.353172,-7.711091,9.150668,-5.634848,-4.616769,3.464320,3.543987,-2.126476],[-3.079143,-5.932355,-4.157747,5.750351,-2.079800,4.936598,-0.528826,-0.437442],[-0.344444,3.089027,9.712638,1.876009,8.276350,-4.718412,8.807620,-6.232522],[-7.026222,-6.365839,0.526504,-2.759347,1.887439,1.230925,6.427715,5.189030],[-1.014181,6.039494,-7.128722,-5.303834,1.972206,-1.208650,6.436771,-1.482926],[3.031357,5.506578,1.479183,-2.154749,4.952727,-0.301799,-4.727737,-0.108629],[-0.959732,-7.325353,-7.953795,0.687246,7.835303,-0.551098,-1.734309,6.497753],[6.499959,-1.825757,-1.778153,4.039087,3.844686,-1.864495,1.273239,-2.594302],[9.255302,-4.149481,8.490182,5.637464,-0.991694,-6.893914,5.962910,-8.528152],[-2.265022,6.896153,-9.111424,-4.164482,-2.265086,2.899586,9.942988,5.808016],[-2.958464,-2.266841,4.279781,-4.325210,0.686807,-8.139557,-2.763703,9.842217],[-4.989107,3.380452,5.232465,-9.592304,9.477533,1.384962,7.992254,6.319609],[-4.970374,-7.760969,1.881615,7.589589,8.555591,2.987686,4.103319,-1.831029],[0.100583,-1.459587,9.209178,-6.890818,-0.778440,3.749022,2.417223,7.989315],[-7.026448,5.275190,-8.212760,-8.874649,4.720863,-5.672229,-2.444181,-7.656713],[-2.504863,-4.901208,0.961028,-6.501480,-0.805806,7.817839,-3.592629,1.182886],[-3.201073,6.117163,-4.584288,-3.393822,5.308000,-1.620154,4.524065,-1.737723],[7.529499,0.813387,8.861543,-5.765103,9.900517,6.991810,-9.541396,-1.452086],[-7.572746,0.873618,8.153066,-2.212913,-7.668355,-2.588064,3.622309,-4.667222],[1.343570,2.605063,9.181639,-7.913965,3.850166,5.392119,3.734336,3.156748],[3.402277,-9.427105,-5.092235,6.114075,8.660065,7.703017,-0.279027,4.244151],[8.420753,5.667400,-3.794021,-1.802601,2.973270,0.816613,2.696953,-9.957429],[2.383053,-6.911119,0.910609,4.694255,4.418491,9.940098,-0.511590,-3.106726],[0.793550,-4.859053,6.487767,-1.846142,-9.487691,0.181020,-6.953855,-8.603331],[-1.903087,5.476615,2.148073,-2.450149,4.746791,-8.626039,-2.296871,-9.873452],[-9.415076,8.551261,0.967665,9.423230,3.439108,6.639431,-3.253047,-9.734295],[-1.139084,2.410150,-4.636976,2.087645,1.348442,4.886528,-8.712976,-1.647707],[-4.511568,-2.532101,9.924159,-3.317007,6.869582,-3.229342,2.213888,-1.131579],[-4.184227,0.403545,-7.100151,9.055790,8.544848,0.941644,-1.041481,-0.431435],[-5.899693,-2.907672,-3.364149,-6.070613,-9.598945,-0.246392,3.896289,-9.022714],[-3.696850,-8.014318,-4.598945,-8.257955,-1.753269,4.275394,7.991429,-6.854386],[-6.821870,0.408071,7.329359,-0.372040,-6.897230,3.205331,-3.580696,-4.748701],[-9.957480,7.605993,-0.299453,-6.065510,7.000804,8.277060,6.052053,-0.152965],[-4.355829,4.850158,-4.538363,0.225013,-2.373055,-5.817986,-9.734741,2.755880],[-3.793303,6.762762,-2.219698,0.110782,9.006999,5.146707,-5.754319,5.998351],[9.916925,-7.642098,-7.749272,2.728173,0.227231,7.367876,-3.120195,-0.468400],[8.376285,0.649873,0.206303,-4.631533,3.950709,7.255455,8.357207,-4.389088],[5.072456,-8.915984,-6.853478,-3.026936,-0.117013,-7.651679,-7.959682,3.094410],[-2.894839,-2.751505,1.860970,7.572440,-1.460900,0.888968,9.925458,-7.195799],[-9.054245,-6.150047,-1.898567,-6.310050,8.217099,1.287206,1.900007,3.598082],[0.239872,2.314461,-5.398288,3.976722,-5.331621,1.364441,-8.440392,-9.144574],[-1.450155,-0.022299,-0.147615,2.418643,3.112227,1.760574,6.014543,-1.502617],[-1.897999,-5.178951,-5.059758,4.911025,-9.479958,-4.207571,9.304317,2.312107],[-4.217730,-1.636993,6.379427,-7.678865,4.703995,7.799427,-1.543349,6.843365],[-4.221603,-5.917030,-3.218450,1.857738,-8.398095,0.813519,-8.965499,9.817845],[-0.731288,2.555629,-6.144490,-5.553181,-6.306757,-6.570312,-9.346954,4.751697],[7.812504,9.620497,-3.246618,-8.675429,9.648869,-8.400315,8.143784,-7.344508],[8.616454,9.685756,9.219625,2.852082,9.916197,-2.896172,-1.205222,-0.074722],[8.800210,0.486793,-4.854296,-4.296263,0.323394,-7.143374,6.276360,8.072943],[-7.997235,-8.511442,-3.720264,4.864608,1.012874,9.503533,-6.476156,-9.840879],[-0.973887,4.759500,8.381944,-9.935238,-3.542540,3.837024,5.119080,-6.053979],[0.370184,9.218476,3.821869,-0.791196,-4.500704,-6.313791,1.030315,9.336710],[-4.470087,5.550113,-6.839819,-0.043354,-3.650571,-4.275349,-3.318544,6.495193],[4.513316,-2.805953,-6.242041,-3.783270,-0.279823,7.682263,0.233133,0.295365],[4.289980,5.335742,-4.696525,-1.227606,-2.333642,-4.628810,3.244573,-3.669051],[-4.133812,8.670764,8.160015,-7.589265,-0.435002,-6.953775,-9.200411,2.531304],[-8.592741,6.426234,2.304584,2.162998,1.867785,-6.266807,8.519115,0.908064],[6.302222,-6.306223,-7.470133,6.029907,-2.518044,-8.987404,6.965615,-7.480749],[1.903071,1.722668,2.887331,-0.848323,-0.356052,-2.772845,4.711439,-0.564875],[-4.651071,-7.205542,7.073088,-6.697617,2.948434,-6.391504,-9.044143,-3.841186],[-9.158595,-0.853811,-9.172417,-2.755776,-0.971334,-2.428168,0.853158,-1.671548],[-2.000567,-2.168841,-6.624472,7.953666,-3.383884,5.311777,4.998708,-4.747113],[8.030488,0.361506,8.820925,-2.320512,-2.934415,1.869296,3.279048,-6.782331],[-0.816155,2.583743,4.166529,-6.875601,-3.117084,-5.752892,2.328775,-4.605768],[-8.103061,-6.236053,5.839449,4.035459,-6.388617,5.613609,-8.747641,4.564508],[8.685389,-6.512746,5.707099,-0.536402,-7.404803,2.368417,9.553631,-1.224876],[-4.497579,5.741040,6.630399,3.829633,7.454161,-4.382912,-0.087138,7.736611],[-7.867584,-4.299087,-1.564884,-4.538829,-1.650795,1.304609,9.742189,4.116876],[-8.759293,1.063739,6.554443,3.063990,-1.350653,-9.333617,3.734219,-7.001904],[9.989496,-7.956341,5.180193,-8.336549,-9.805287,5.869250,7.971107,0.322242],[3.921737,-1.634224,-0.897681,3.012818,8.067857,1.655131,6.284204,-8.237442],[1.964227,0.247978,6.329662,-8.543261,1.355435,1.726770,-1.895423,-8.539858],[-7.480531,-5.799811,8.319981,6.330037,5.619429,5.866385,-9.977396,-6.006347],[-7.148113,-4.657567,2.321825,-6.442544,-8.643938,-2.027169,-4.772901,-3.226789],[0.245135,9.254638,-0.136267,4.444328,-2.207539,2.282925,-0.281712,-3.402684],[1.211727,0.814570,8.368101,0.162762,8.545003,-8.782587,-8.008023,-8.694470],[3.259548,-6.424460,-5.476780,2.945675,3.053400,6.560452,-4.972450,-6.019022],[-3.928498,9.003792,5.712532,6.625315,-2.374015,8.132004,-4.035018,-3.233190],[6.285110,-1.700872,-6.654976,-6.093680,-6.083309,8.976256,0.422843,-6.281396],[9.261597,9.838751,-2.082237,-4.136269,-5.140332,0.740529,6.328635,-9.341033],[7.639514,2.100547,6.242995,9.555937,9.858738,-7.601149,-6.456228,6.358306],[-6.903660,7.823997,7.838710,4.761101,3.685592,4.604686,-8.866579,5.037005],[-9.571672,4.921432,5.666186,3.525750,-7.492416,1.601087,-9.823629,-0.274542],[-6.325474,8.710641,1.325868,0.451561,0.806492,-9.784938,4.952253,2.690264],[-7.130659,9.979457,4.663030,-3.143091,-2.563674,7.260414,-6.460213,-7.552050],[9.750284,2.188282,-4.683141,7.588835,3.591316,-0.937615,3.366490,-1.982575],[-2.342441,9.120987,-4.521144,5.442284,-9.705283,7.221831,3.956340,2.737970],[6.890372,4.705127,3.783002,6.810258,-3.952277,5.417103,-0.404765,7.737643],[3.063373,-0.513221,4.746936,5.554847,-8.994639,-2.688548,-2.929511,-8.947608],[-2.753249,8.807438,-7.531915,-6.363664,-0.520788,1.331299,6.771581,-6.530936],[4.973730,-7.928065,-9.419656,-3.673438,-4.428720,-9.977247,-8.822650,-5.722777],[0.094958,2.179585,1.892404,-6.864836,2.672053,-2.819047,8.520260,-9.645506],[9.050626,8.965127,-4.196886,3.480186,-7.678660,7.167275,-9.339725,-0.969334],[4.546504,-3.431162,4.118372,7.884182,-0.904113,-8.185973,-6.026623,-6.363590],[2.324233,9.090171,-0.099522,5.592635,0.511912,8.677650,-4.289018,4.886834],[8.060444,-0.755966,-6.500265,-1.278579,1.015475,-9.468196,4.158216,-2.659419],[-2.666631,-1.916888,-1.609755,-3.399102,-6.522895,0.728446,5.733089,-8.101669],[-0.217256,5.015552,-4.362175,6.664525,-6.932812,9.912032,0.016587,1.600757],[-5.386050,-7.955681,2.833754,-4.216087,-7.594705,-6.423458,-0.637791,0.804878],[-4.498971,7.030472,-9.935771,-9.305854,9.538836,-3.882807,9.519261,-4.917680],[8.500243,-2.200017,2.500683,-1.560739,5.061363,1.311875,4.860919,-6.899010],[-9.995896,1.897691,8.962497,0.510252,9.174532,6.825814,0.284332,-6.280750],[-8.923544,8.555446,4.016307,7.983923,3.710896,-5.510659,1.091384,-9.719657],[6.870251,-1.938896,0.855323,4.598548,7.487373,-3.166575,-6.245061,4.597736],[3.731684,5.567350,-4.767804,3.697400,7.741587,3.734540,6.524436,-7.635834],[7.279495,9.236008,9.246167,1.568838,7.923540,7.026198,7.834704,-9.897500],[-2.954878,1.750618,-8.529488,-4.553314,2.735904,5.617137,4.351153,6.325548],[-2.517682,8.041988,1.337109,0.285645,-2.036200,-4.418560,9.459189,8.238545],[-2.013542,2.151566,3.037330,2.647874,1.539193,2.577988,-4.938650,7.855411],[3.337408,-0.515980,0.708457,0.800690,3.801543,2.556146,-3.188976,-4.999086],[-4.381091,-1.663047,6.433990,-3.232566,-5.707712,2.223259,-4.210809,7.652643],[7.630850,-5.092070,6.247277,9.503133,5.020406,-9.803087,6.942835,5.466869],[-5.016115,8.933069,3.337604,-2.611007,-6.741075,-9.780098,-8.955905,-6.443344],[-1.788366,-0.843856,8.217672,-1.628675,7.403036,-5.291629,4.800870,-8.744768],[1.668273,3.205175,7.956071,-0.445815,3.777400,-7.299724,6.758677,8.579129],[6.701194,5.055438,6.795995,0.396579,-0.753575,3.473983,5.991040,9.016089],[-5.372186,0.417407,-8.076596,3.802028,3.546331,7.520052,-2.803164,-6.516419],[8.783096,-4.752164,0.633535,6.786641,-7.312144,3.821380,-8.193299,-9.148583],[4.737660,-3.023826,-0.145257,2.704616,0.367968,-3.751756,4.187901,5.239934],[-6.935200,-5.783987,6.454494,-2.193241,-4.772379,-2.856835,-7.217496,6.126619],[-2.044169,-4.738287,6.842145,-5.459063,-0.936743,0.793453,5.276979,-2.672581],[-6.302097,6.812297,-3.196107,9.986272,6.915820,2.806254,5.873980,8.890788],[-4.578624,-0.446927,2.767892,-4.979821,1.044289,-1.075235,-1.655811,-1.553852],[5.839663,6.471831,3.778108,-8.615660,-0.806631,4.930794,6.187948,4.719472],[-7.352573,0.039570,9.647670,9.221911,6.522917,0.555700,3.098168,6.880689],[-9.581050,-8.007444,3.795578,-8.642894,5.443265,9.736600,1.141284,-2.566107],[-9.015836,8.950036,-7.815370,-3.606927,-6.741793,8.510050,-7.185628,-9.098423],[6.645707,-3.947004,-6.656165,-8.852515,-9.745274,-0.474539,7.011619,9.632233],[-0.624839,9.417811,-1.486910,2.861053,1.030090,-0.299962,8.410621,-0.830973],[2.825331,2.421209,-5.786305,1.571753,-2.048216,-7.933658,2.359438,3.720397],[-0.429806,-8.107832,1.125107,-2.622294,-6.740925,-8.771392,3.106296,4.647034],[6.712971,-9.724674,-4.536190,3.374496,0.077350,-7.198121,0.819022,3.095935],[-5.551683,-2.223977,4.786586,8.710443,4.942742,9.991577,-5.028446,-4.517888],[8.869887,2.732791,-2.621047,-6.277156,-4.437959,-3.075981,8.543564,-4.093402],[7.898371,2.828654,0.836086,5.916047,-3.984608,3.403903,6.370463,-1.480011],[4.881115,-6.723094,-1.849599,6.394853,-8.939308,4.320752,1.461748,8.208566],[-5.957907,2.443990,9.915627,3.319807,5.945699,6.850927,-9.961372,-5.531921],[8.017554,1.926866,6.865189,0.524844,2.495214,3.792950,-6.937622,4.799332],[0.515051,-4.423304,7.544946,-5.899308,-6.893274,2.743946,-5.084082,-4.057452],[0.132860,8.698644,1.608989,-3.719896,7.554724,6.443754,-9.493933,2.522474],[-0.637559,9.313922,0.673201,-8.442547,8.351654,-8.630865,8.545692,5.467923],[-7.628271,-3.076004,6.538058,-3.017714,-8.809446,-0.854181,0.581072,6.122059],[1.583952,2.632796,-1.183808,4.290506,-2.946234,1.693176,-9.824656,-8.509053],[-9.108278,-2.350691,3.078844,-7.086968,7.461588,-5.847966,-7.862454,-6.076168],[-6.898222,-1.585643,1.678601,-8.586517,9.479257,-2.729872,9.140479,9.400508],[0.759080,2.727288,-7.516856,-3.167819,4.536084,-6.514873,-6.206647,4.779675],[3.784449,-4.516835,2.985509,-2.155820,-6.723267,5.924649,0.945205,4.016010],[-4.225215,3.229282,3.287418,-0.385319,-6.844310,-5.494512,4.166629,-5.442660],[-4.267856,-8.866819,2.628531,-4.153701,0.472917,6.147346,-0.998961,6.627042],[-1.278353,-8.465200,-3.338133,-9.087726,4.747286,-7.425751,-7.387739,5.544526],[4.547827,0.010304,-0.388357,-4.133710,4.928374,-2.263683,8.159109,-9.149531],[-2.040647,2.126645,-8.992216,-9.350247,-7.866678,-3.772129,1.063197,1.656025],[9.538580,6.183165,4.819891,6.687660,-6.125921,-8.254359,9.032015,8.641362],[8.395862,3.083036,-0.674238,-7.357246,-1.266952,7.937279,-2.112109,-3.624141],[8.404443,-9.717945,1.192056,4.838857,1.542486,1.940152,5.615001,8.463756],[7.919697,-6.236496,-6.618228,5.767968,0.994926,-4.933785,6.486978,-3.930525],[-7.103870,6.922615,-2.712558,1.148923,4.594348,8.007390,6.747082,5.250106],[1.594367,-0.737729,-7.978931,-2.432306,8.231049,-3.954480,3.364269,9.829809],[4.868278,2.960851,-0.060884,6.877386,-3.685576,-0.111720,4.303248,-1.031805],[2.659301,-1.562969,-9.152711,2.599690,2.404051,0.108667,-2.244242,7.088136],[8.670601,-2.130448,5.815829,0.806098,-8.838870,-4.805303,-8.298657,-4.740485],[3.356567,0.104775,5.312499,4.685026,-8.072447,7.262701,-5.422939,-7.137660],[6.513107,2.136943,2.253875,-6.259944,-2.775253,2.019187,-9.847234,-8.648290],[0.901799,0.811475,-3.015818,2.908738,4.753222,-8.673053,3.094731,-7.609146],[5.718597,-9.612587,-6.311566,-0.244630,2.610324,9.479625,3.365100,6.555225],[-8.540547,4.807589,-6.023246,8.030922,6.966900,4.091496,0.435092,7.816548],[0.521500,2.452423,8.091986,-6.430139,8.127205,-7.323801,3.982487,2.971909],[-3.216808,-9.421676,-0.249108,0.195047,4.756892,-8.315509,-3.860130,7.645728],[4.480188,2.637482,-8.767459,4.753792,-2.974284,-4.494265,-7.053145,7.864037],[-4.166345,6.027690,4.153977,-1.423747,8.433065,5.075922,2.106271,3.501592],[8.752771,4.326328,-0.265151,-7.742871,-3.158993,-7.776380,-6.474553,3.449360],[7.741253,3.748585,0.788101,-5.691016,7.192979,-6.642839,-2.302119,2.734925],[6.208657,-7.948640,-3.841493,-9.765423,4.838423,7.667043,-3.179243,0.459016],[1.592925,-4.651840,-6.318909,3.241148,9.534289,-8.884488,7.767206,0.898596],[-3.783652,-7.879314,-5.628133,5.971629,1.663278,-4.875740,-7.367225,5.407595],[-8.621285,-9.832406,-9.653308,-6.378418,-7.605937,-9.364909,7.799245,-3.400747],[1.445761,-9.634501,8.602654,3.113219,-3.153694,-9.584483,3.636731,-0.991495],[0.425297,6.700518,-1.015895,8.041869,-0.314161,-3.000879,-0.053098,-8.781395],[4.264880,5.547109,-8.314849,2.676761,-8.438142,9.601227,8.940648,-7.287639],[9.533550,8.240232,3.137840,-8.821250,-9.929856,2.525068,9.343822,-2.217547],[-1.072337,7.973656,-0.959990,9.697858,-8.700503,8.012045,-9.605530,-7.138375],[0.132349,8.957814,0.165758,-4.059001,-5.415474,-6.014274,3.962893,-7.880198],[-9.266867,3.289552,-0.669627,-7.333560,4.551971,1.046403,2.872037,5.374286],[1.833950,7.708788,-5.636040,-1.884316,-0.723331,-9.046383,4.813168,5.579772],[-4.504653,-4.388249,-1.695293,8.193167,-1.398811,3.590318,2.966695,-2.315087],[-6.441344,4.476674,-2.483209,1.777906,-0.510320,-2.102196,5.345822,4.494779],[-9.472067,-2.268824,-9.830482,3.456910,-1.693810,-0.023223,2.053294,-7.764445],[2.359611,4.515816,5.059386,-7.621941,-0.781401,3.682219,-4.082293,-3.921871],[5.130626,8.051972,-3.039303,-8.748662,-5.583177,-6.393392,-1.912249,1.102712],[-2.798964,9.254279,1.353231,0.632598,-5.899457,3.756089,-7.849234,-4.406347],[1.746555,8.582803,-0.861398,-9.247113,2.680827,-1.104477,-4.466420,0.805971],[-2.667016,-7.235871,-0.879547,-9.553211,8.344581,6.917183,5.110750,8.443053],[-9.611774,-2.953380,-0.776730,1.748174,-3.848493,5.108371,0.734682,7.055974],[8.941836,9.576346,-0.038540,3.117876,-4.330609,3.686651,-7.439084,-3.341821],[0.452910,1.896566,6.264441,5.639333,-1.870743,-1.939848,3.416773,-6.440721],[-2.552878,-3.170186,3.082467,-5.682057,8.233529,7.971440,-7.767356,-4.214887],[-5.125063,0.592693,-1.268264,8.377739,-3.089404,-3.582923,-5.330022,-7.042540],[-1.114932,8.015582,-2.408842,2.114048,2.646659,8.028973,-9.283357,6.048884],[6.489983,8.973500,-4.181143,3.900167,-8.263971,-5.535161,-3.153603,0.355804],[-0.751184,-3.612506,-9.901273,-7.207581,-4.025488,8.448646,3.405211,1.787224],[-5.450769,-3.652239,-2.488689,6.618272,3.781822,4.272721,-7.862288,-0.807768],[9.019462,-4.964070,6.551907,5.051767,-5.157361,-9.321569,1.165356,7.534272],[-5.340680,-4.574384,2.585220,-8.803790,-3.799301,-6.067481,-0.116290,7.755590],[2.334726,-3.890649,-3.528556,-8.280804,-7.596193,-3.045073,-1.865595,6.285433],[0.647704,2.933834,9.082603,9.097544,3.421187,0.859163,-9.416340,4.453436],[-5.326440,-7.360311,8.360186,2.111024,-5.126081,-5.675026,1.618639,9.095301],[4.934566,9.243328,-8.143313,-4.012305,-6.557040,-0.129989,-5.616030,-8.028795],[4.348918,2.817744,7.674356,-0.191473,-7.561941,4.231909,7.068701,-3.029520],[4.250518,7.716602,-8.319543,-5.833266,2.660402,-9.134315,-4.466732,-2.809630],[4.742876,1.496252,5.300126,-6.950180,-0.363621,0.948161,7.077249,-6.849094],[-9.512231,-4.025641,-7.774241,0.398164,3.514141,2.102901,3.917024,3.856126],[-2.270542,7.699029,2.942522,2.463645,8.784488,1.967939,5.445203,-9.330231],[6.480787,-4.886492,3.381901,-7.178950,1.390463,-4.420108,2.425348,-3.993855],[-7.408894,7.935427,5.463959,8.700198,-3.871564,8.934442,6.943630,1.833561],[8.126673,-4.902936,0.277827,5.306782,-1.232936,7.441001,-0.569636,9.134357],[-2.505467,-8.173427,-9.915474,-5.979291,-3.812386,-7.564663,5.894569,-5.447133],[1.182643,8.118755,5.842525,-0.677504,4.388893,-1.907841,6.169914,-1.197714],[-8.144208,4.774581,6.957732,7.718510,-3.130383,9.778900,9.826985,-9.748249],[-4.247807,-0.700267,-2.944645,5.333800,-6.733604,6.342331,-4.731022,1.422002],[-2.321604,6.400830,4.747295,9.048344,-2.094511,0.256506,5.764367,-4.493175],[-5.746035,8.905382,2.881743,-7.178774,-3.043601,3.949813,5.609198,-0.816382],[-2.529799,7.921307,-6.301334,4.379826,0.884649,7.118637,-6.439086,-4.833093],[-6.545279,9.504962,7.125818,2.025422,-1.535834,-3.503167,-7.690735,0.130644],[-9.235626,-4.464881,-1.245531,3.757358,-8.781836,-2.851629,-6.387637,3.451812],[-2.332445,7.750938,-4.204646,-3.585429,1.783275,3.371805,2.625779,-1.108287],[0.647922,-5.410213,-5.723160,-6.126138,-2.315863,9.422714,9.856254,6.535888],[-4.914155,0.357773,-9.795238,7.252409,-2.499019,6.071709,3.775583,6.378876],[-2.781216,-5.770475,1.477568,4.737889,0.213549,1.620698,-2.352962,7.890075],[3.552431,0.145453,-1.244179,4.647294,1.293860,-3.968723,1.127155,-4.524414],[9.729131,-5.920373,0.686180,7.931604,5.826438,3.556048,2.722309,-0.216322],[-6.883760,-3.717055,-7.382302,7.002231,-4.166637,-4.953621,-2.801922,0.173912],[-6.449884,-9.462227,-4.273759,-5.217122,-7.980838,9.738670,-3.768956,-5.542552],[9.784063,0.491858,5.907001,-6.327871,-2.775684,9.004979,1.611125,7.758088],[-3.991965,7.860448,0.855357,-7.840812,8.595154,2.237581,4.615368,-1.245151],[5.858646,-2.155801,0.033695,-2.589662,-2.488011,-5.876421,8.084373,6.917300],[1.744574,-6.242641,-4.705516,6.763298,-1.495324,-4.521459,-3.881260,-3.628176],[-5.972540,-4.792035,9.223434,-2.453161,-9.898531,2.319038,-5.551496,-0.934653],[6.410008,-1.350375,3.277392,-2.222938,-1.183458,-0.517959,4.304534,-5.453982],[4.035381,8.065850,-6.908192,-9.049156,-9.704552,-7.695736,-2.054899,2.901720],[0.540322,-1.082155,3.499858,-8.453840,7.251691,-3.749784,9.224526,-5.224511],[-3.067777,-6.602444,3.380600,7.936563,-2.996416,-7.480963,-4.244197,6.791602],[2.400084,4.885529,-6.779213,6.088641,-0.206590,-3.606598,-9.266624,-7.483946],[1.851550,0.582055,-0.498081,-8.200537,-9.047108,3.290788,-4.275466,-0.474495],[-6.312086,-5.978689,3.775255,-2.772979,-3.037575,-0.402956,-5.274651,7.743207],[1.210032,-3.559354,4.495367,-6.537548,-2.143554,1.570876,-9.838989,-2.718616],[3.327521,2.757659,-5.446374,-9.148632,5.218679,-2.191786,9.308270,1.990865],[-0.215465,-5.694457,-5.110745,-2.050982,8.087054,-2.608997,0.659436,-9.014629],[5.435634,-1.624794,-0.528737,-8.542741,1.607930,6.074446,-9.186216,7.411802],[-2.337401,1.057847,-5.670489,0.444103,2.615130,-1.908909,0.861303,8.793627],[-2.033472,-1.429909,-8.239859,-3.540071,5.294003,-9.416651,-8.508202,3.184567],[-3.352112,-6.615240,-5.520854,-5.763467,9.951519,-2.976661,8.318038,7.305353],[7.001314,-7.254147,9.337516,7.529827,-4.376989,-0.512710,2.280379,-4.665462],[-2.469229,3.709756,-1.023593,-4.434591,-1.877804,-5.278377,-0.329879,7.536758],[-3.219597,9.444072,5.406748,-1.401138,5.897450,-4.982752,-5.422232,-5.783136],[4.863998,4.106761,6.020029,4.428950,9.105243,6.831117,-3.258490,3.985606],[8.012672,-5.224882,-4.609351,-0.343035,4.718188,-2.439077,7.019458,0.643424],[-1.471791,9.084983,-0.282964,3.008429,-9.778218,-3.110117,-5.052573,3.558939],[-7.177377,-8.847321,3.358419,-7.312755,0.046383,-7.439115,8.433648,-2.754267],[9.787855,0.850930,-6.839475,9.548932,-6.716605,4.748914,9.583669,-6.281489],[-1.755857,-5.477473,9.160445,1.723664,-6.691501,-6.389985,3.424415,9.059977],[-5.764877,-6.967582,-9.707834,9.876339,3.863516,7.745541,-2.633961,7.626695],[-2.236522,-7.207064,-4.243994,-4.987298,7.407817,7.343984,0.343219,5.548400],[0.080471,5.833560,6.642966,-1.428423,5.652933,-4.559489,5.695670,3.505382],[4.984305,-3.131081,3.350610,-2.787062,1.858747,5.634747,7.453808,-4.486195],[-9.084086,-4.934986,-4.391479,1.903247,-4.929100,4.836258,0.371070,7.999670],[-8.034243,-8.286223,-4.739115,4.031381,-1.145368,4.172500,9.340017,0.234976],[0.661769,-3.224824,-3.636100,4.426494,0.466246,4.761186,7.236440,1.946198],[-0.283406,0.070170,4.477922,-4.470441,8.940634,9.981539,2.139550,0.254118],[-1.444658,-5.082691,1.744155,2.886191,3.159210,1.440878,3.750128,-1.899577],[-1.079692,-5.182963,-4.928509,-9.014906,-6.940181,7.781984,-1.903152,-2.200918],[-5.026675,3.090977,2.655663,-3.907811,0.655933,6.598060,-9.203364,-8.460843],[-3.228129,-6.982846,1.150741,-2.830824,-5.993670,3.952970,-6.825016,4.832182],[8.339580,-8.167068,3.879216,1.994272,-8.402208,5.393268,-0.324454,-0.577348],[1.842411,-3.235283,6.123763,-3.787697,-5.200945,-5.361899,-6.107555,1.938479],[-0.133544,-7.290722,-9.064081,3.898781,-1.311759,9.303559,-7.286173,6.371782],[5.693009,8.192584,3.492820,-2.462784,1.268226,-8.880832,4.011090,4.355120],[-8.124375,9.892394,5.530960,9.136549,-0.728708,5.198398,-2.889701,-3.108521],[-8.349972,-7.295156,2.425383,2.389131,4.382606,-6.527401,5.428838,4.011164],[1.615427,-0.706405,1.389062,1.483112,-0.977989,-8.319011,0.297430,-8.149100],[-9.645221,5.429559,-0.599543,4.105736,7.211498,-3.046978,4.667667,-2.768706],[-0.897743,-4.075004,-8.922352,7.442974,-6.111165,-5.633616,-8.602448,0.849986],[6.346159,0.520247,3.713258,-0.500113,-4.286245,8.518737,-9.135549,8.848408],[-1.274507,-0.946639,5.315516,2.312188,8.584468,4.355452,8.783199,8.916212],[-8.796586,-2.514652,5.043255,-6.746983,7.071027,5.591900,5.324628,-3.037417],[-3.276549,-4.350113,0.610696,8.783089,7.155569,-3.910456,3.868615,-2.312996],[-6.928164,3.327811,4.358075,-5.561614,4.349289,-4.037865,-5.910066,-5.613813],[9.669241,-9.160316,2.446560,7.295803,-7.643744,1.929832,1.606113,1.855673],[-1.115727,8.618550,-8.206536,-9.916338,-2.100731,-4.711024,7.601740,5.508612],[-3.610187,5.405067,-4.284572,-7.417830,3.179243,-5.889586,8.020497,-7.287791],[6.870329,8.070776,2.327087,9.085434,-1.113085,-0.618509,5.417208,-0.100116],[1.505770,6.716316,5.303378,5.180484,0.530085,2.055795,7.534063,-3.934457],[-8.217068,0.632338,8.918818,6.303518,-1.529568,0.365801,1.226587,2.827517],[-3.003612,-2.250711,8.911058,-7.575939,-7.322090,6.815866,1.135972,-2.423533],[-2.251328,-8.462339,-1.530245,8.701301,7.000751,-0.225525,2.287526,-8.742870],[-0.669342,3.477586,-9.535454,-6.055036,8.828376,-2.915969,5.789541,-3.192415],[-8.016820,7.846947,-1.055103,-2.143310,-5.308782,9.754205,-9.625717,9.298416],[-0.942496,-2.968689,-3.200000,7.596036,0.267553,-0.878109,-8.595210,-2.199899],[7.507870,-0.573687,-0.243369,-7.068503,3.329964,-7.938862,7.242531,3.072045],[-3.850514,-4.611374,-3.614237,2.572182,9.836163,8.244928,-5.186290,9.183190],[4.980207,-8.314078,-5.089266,-6.396041,-1.983666,2.642860,-7.310532,4.783407],[3.316318,3.113911,-1.083136,6.048910,4.481322,9.155439,-2.880014,1.593496],[-4.868867,5.565222,-2.633504,5.973662,6.733873,-8.744500,0.602701,-4.778691],[4.145632,-2.549071,-6.321702,-8.305913,-4.645292,-1.968592,-9.478200,9.023560],[2.163923,5.536420,-1.184176,-0.268049,5.425539,-2.453174,-3.676460,9.930728],[-3.337215,5.893002,8.167127,-1.697345,-9.164686,-7.521523,5.263518,9.743793],[0.444314,-8.934296,5.709392,6.047300,-0.363010,7.627609,-1.604417,-8.615715],[3.018833,-9.965649,7.352617,-8.408611,6.824007,-6.026714,-2.588907,3.109186],[-1.975249,-1.329191,-5.915370,0.678294,0.069883,9.587503,4.022829,-3.654136],[-9.469612,-0.494658,-1.878298,9.739405,7.199814,-4.996833,7.931522,8.464393],[7.635570,-7.040369,8.651992,-0.476537,-2.513524,4.069407,-4.422122,-2.759532],[-7.335802,-5.669770,-0.004899,-6.556958,-8.730062,3.535950,-7.614842,8.671258],[-9.208794,8.403685,8.312042,-4.898121,1.387018,-4.636912,-3.703927,-6.819877],[5.543658,4.688856,-0.657505,0.539141,-9.438912,5.475163,-3.985689,-3.227393],[-3.685871,-1.198750,-1.547904,7.802124,-5.984517,8.279746,1.407746,0.556939],[-3.906577,-3.597391,-4.129725,6.012161,-7.455797,5.611400,-9.514803,-1.929944],[7.927193,-7.662859,6.370810,-3.881633,1.211439,-2.520562,6.512198,0.282169],[-3.464253,9.811830,-3.551587,0.993077,5.919544,7.079554,6.274954,-4.165910],[-9.690007,-1.113269,-9.837580,-4.433328,-5.545530,-1.307489,-5.917048,8.110029],[5.325663,-0.145727,-8.247106,3.879029,-6.765861,8.492379,-8.056846,8.022625],[-8.781489,-3.700509,-5.728887,2.310541,-1.735081,-2.215877,6.880865,1.307791],[-5.616628,-7.523747,-4.083190,-2.030155,-8.137613,-6.919852,8.519099,-7.376317],[7.619369,3.438489,9.276170,-2.415760,-9.936129,-7.701138,-0.035646,9.321092],[5.672068,1.657220,0.965588,2.917138,3.548500,-7.209042,2.779815,6.168531],[7.749303,-3.223899,8.541747,-2.608114,9.144962,8.511966,8.347793,9.593289],[4.258970,-3.938406,-8.612164,-8.976088,8.990522,3.159158,5.746949,4.505732],[6.831153,2.877214,-8.526748,-5.459376,0.315335,4.101935,-4.573993,9.528838],[-1.220646,-7.087862,2.975068,-1.440412,7.048166,0.987914,-9.378392,-8.627446],[-9.056172,-6.950545,0.857479,8.827765,8.937671,1.554069,1.654908,2.635084],[-4.333820,-4.835212,-6.879007,-0.848053,-0.692364,2.002352,-2.667153,-2.333210],[8.957600,0.004188,-8.681080,4.782663,-3.442170,7.257433,-6.542194,9.133868],[3.920887,-9.876936,-1.965828,6.740370,0.735203,-8.036721,-1.033571,-8.743787],[2.991943,2.372584,-8.780443,3.337428,9.691071,-6.545665,4.678684,7.245336],[-1.448661,9.976260,-5.527811,5.351210,0.731720,-8.881057,8.712790,6.237893],[-4.314151,-3.252908,-5.615610,4.507916,-4.268530,6.364498,0.789342,-0.656109],[-9.500239,6.796379,6.349001,-9.898676,-2.129208,-5.780083,-9.309627,-6.962082],[-3.973405,9.662307,5.086752,7.954201,5.958908,6.921944,8.370761,-3.180069],[7.668355,-0.111393,-5.156769,0.106469,6.317085,-9.550682,-5.501658,3.516291],[4.355557,8.930527,0.064868,7.706102,6.036603,-2.762739,-5.536752,-9.420472],[-3.212363,-0.248664,-5.997665,1.350906,-7.830540,0.886083,-1.097449,3.563326],[3.186730,-3.149787,0.677687,4.818088,1.843250,2.989118,-2.283168,0.171271],[4.785816,-9.155986,-0.776596,5.584427,7.273816,4.996077,4.529160,-7.653188],[6.546212,-5.360898,-2.525503,6.116534,6.077312,5.740805,-5.581977,-1.190420],[3.928332,6.295940,-2.729566,-0.765438,8.617380,7.414263,-3.293692,-4.653320],[7.142699,3.486931,-3.794881,1.380544,0.506521,-9.617720,5.990697,0.995475],[7.534931,-2.209980,-1.934291,0.924436,-9.152682,-5.436664,-0.836044,-4.609595],[2.387869,0.466072,-6.617296,2.445315,-9.101453,-7.505459,-6.190640,-8.712065],[-1.271984,2.106198,3.643536,3.164353,-3.811498,-0.403485,-4.894146,-1.213008],[-1.069598,3.128189,-1.832565,1.523728,-3.530689,-6.843371,8.845954,-6.012210],[-1.987528,-4.268395,3.681927,5.620004,-1.483084,-4.012083,8.424646,-1.399232],[9.838466,-9.167154,7.582507,-3.700819,6.642133,-5.656276,8.913119,4.783108],[7.738456,3.793393,4.891196,-8.635983,-7.363276,-9.519107,4.824033,-9.528919],[-8.011820,-4.907110,-0.688667,-4.765661,8.871259,-7.675892,7.179558,-2.346003],[-7.476062,0.643686,9.564161,2.222519,1.510230,4.144948,-8.164933,9.303777],[-1.610610,-9.784403,-0.852842,9.663637,-1.998013,-8.695295,3.792610,-9.359525],[-3.924730,0.471220,8.247226,8.410624,-9.607646,8.148255,-0.775339,7.036068],[-2.261828,7.779224,-5.832677,-2.960539,4.533876,7.720584,-5.153750,-2.289117],[1.362491,-8.830957,-5.239059,5.848389,-3.503016,0.322178,5.496210,3.134753],[8.885894,-4.246358,6.542826,-3.487713,4.477980,5.616689,5.532691,-1.306098],[3.656641,9.315063,1.290884,-9.168824,0.574636,-7.033689,6.548390,-9.783908],[4.066678,-6.838924,1.067161,9.096491,-2.221314,-4.604892,-3.625865,4.033467],[1.975701,0.031877,5.126929,-7.365967,5.240416,-2.485577,8.208060,0.741849],[4.098707,4.012323,-4.805567,-7.292617,-2.258204,-1.397243,8.798937,-4.509636],[-7.408607,3.518482,-0.440138,-5.084745,5.012334,-4.453806,3.401308,6.128533],[4.387486,-6.277421,2.116111,2.235605,7.311342,-8.967021,9.880111,-8.786329],[-1.926593,8.673195,5.940779,-0.383483,-5.100209,9.912648,4.143610,1.133503],[-5.137124,-9.991058,-8.072063,7.949426,-8.500652,-3.141676,-5.773094,8.838433],[1.483863,1.948272,3.914324,0.031505,-1.422030,2.140485,6.269327,6.459709],[-4.423183,7.519147,1.618490,0.227576,-9.819345,8.607367,-4.323984,1.479002],[1.258692,-6.363073,-7.099018,3.642819,2.308678,-6.346267,8.022575,-0.219758],[-5.784883,-9.550937,-9.875144,3.600967,1.837735,1.801468,1.582091,1.479013],[-5.637911,7.516850,2.365843,6.020238,-8.168244,8.170094,7.310638,3.975360],[2.644439,8.593078,7.291878,-8.979086,1.287370,-9.074280,-7.878162,-3.452539],[-5.366982,-5.604812,-0.246358,-4.752263,7.250921,-6.835735,4.247310,-3.132383],[1.617557,-1.501051,-6.305034,0.219605,-1.407580,2.516599,-8.251953,2.163912],[3.115770,-8.699422,-9.528709,-8.632478,5.253836,-4.006761,2.221615,7.153961],[9.101491,7.407668,9.155185,5.944088,4.881482,-2.856376,-2.243060,-9.324885],[9.704698,9.421972,5.283376,-0.172703,-3.704017,9.573115,5.780716,-4.604059],[-2.933838,3.544828,2.600314,3.710188,2.498434,-9.665331,-3.866766,8.917811],[9.286386,1.217702,7.574584,3.001759,-1.796710,3.648195,-5.418730,-2.090844],[7.778730,-6.797807,2.567217,4.033300,8.275834,-1.031433,-7.017105,-9.366727],[0.880069,-5.420227,9.666062,-3.867233,-5.322632,8.321178,-6.258965,4.678063],[7.408948,-6.644659,-1.768940,9.915686,7.552046,0.396308,-6.551345,8.996608],[6.223980,-0.142025,-8.162718,-5.794669,-8.579475,4.032048,-3.347587,-3.407685],[-0.414109,-5.967773,5.566576,-3.961829,7.191417,-6.685636,4.608346,8.154697],[-6.601412,9.040478,6.485421,1.653567,-7.137036,-9.925314,-5.996289,-3.072906],[1.918928,9.815611,1.658648,2.036413,6.713146,-0.534923,0.827718,5.745034],[7.124108,-8.648082,-3.800564,-5.830377,-1.469169,6.956783,2.037417,0.123120],[-6.235687,2.964446,6.780201,5.024699,0.692289,9.049424,8.179009,-0.725165],[-8.084862,5.997985,-9.889748,7.069454,-9.495917,8.267116,-1.830140,-4.363672],[3.859412,-7.148144,-9.277552,7.446497,1.769306,0.542968,2.040854,1.463710],[-4.894479,4.768485,-4.870522,-4.443359,9.612682,8.097716,-3.580187,4.498833],[2.467435,-7.364254,0.099431,9.835467,9.326190,2.361085,-5.967740,-6.599991],[-4.220251,-7.922668,-2.483344,0.344938,-4.522541,6.355536,5.426518,2.958878],[5.454999,-4.853812,3.405241,5.129809,-6.541512,-6.162292,-1.413437,-4.912735],[-7.028278,4.849424,5.318328,-9.281770,5.800224,-0.243266,-8.284030,-7.104952],[-7.885603,-0.608554,-4.305807,-2.806294,4.997547,-3.828860,5.218973,-8.882555],[4.815887,-4.390094,-9.627601,-3.663131,-5.021183,-7.125365,-2.312329,-3.974605],[-9.380371,1.697853,3.205755,4.463727,-7.318766,-3.588283,-4.523407,3.802796],[-3.393912,-9.892999,-4.245072,4.264146,-1.007721,-4.652154,-2.762151,1.228717],[8.542816,7.238687,-5.175474,4.508685,-5.467334,-1.417599,-3.657014,-8.370816],[5.463496,-2.579240,-6.182607,-0.939862,5.511060,0.851802,-4.050242,-7.413596],[2.612318,-4.733498,8.280191,-7.980988,0.615028,-7.566572,-6.475326,-6.158413],[-4.173564,-6.687653,-7.058006,6.184846,9.955647,1.424804,9.526067,5.912028],[-3.836684,-0.231257,-3.123271,5.215541,2.300728,9.419044,7.730733,7.702813],[-7.701856,-4.055973,-4.025954,8.925770,-0.388241,7.488382,-8.723060,7.464428],[-3.034321,-9.432017,-0.779225,-5.981004,-1.475183,-4.150898,-7.632214,3.164650],[6.718771,7.078448,0.730794,6.586122,-7.243874,2.483933,9.622009,0.992740],[-6.964170,-0.829414,0.503220,-4.977212,7.583120,2.036153,-8.891108,-1.629549],[-8.287677,8.085078,-5.453932,-6.928391,-4.578964,-0.701798,-1.476835,7.379051],[1.356269,8.067051,4.483781,-0.561551,-4.219910,-6.271456,-9.121889,-1.102076],[-9.705689,-1.688815,-8.037030,7.708875,-1.371125,3.633534,4.351578,5.179938],[-4.070562,-3.696521,-7.953053,-3.323798,-2.447053,1.334799,-5.688779,-8.420423],[-3.057091,5.733646,2.386612,5.856351,-1.931823,-4.306756,4.034117,9.320933],[-6.433574,5.382247,-4.615483,-3.967736,-3.222354,-0.869006,5.003051,-3.730082],[3.600275,6.805606,-9.211330,8.015301,0.853514,6.903367,7.375101,-9.949328],[-5.504496,9.785502,-9.413389,3.394833,1.349190,5.998268,-8.060283,-4.813469],[0.119495,-1.589486,-5.938630,7.801473,7.681594,6.827864,2.075217,0.917924],[3.575716,-9.880281,-0.343414,0.020403,8.655418,-3.871590,-1.117696,-4.903504],[-6.332671,0.165069,-7.838712,-5.087612,8.414709,-8.865229,-6.589146,-9.456669],[-4.688447,2.705540,6.460174,8.828531,9.771188,-1.077628,-6.155404,1.721386],[-6.462615,-1.692055,1.466610,-4.025008,-9.187682,6.837764,-3.722745,-6.374471],[5.062106,3.718974,-4.649293,2.949557,2.184915,3.712850,-3.913030,-1.387927],[-4.362862,4.840009,-2.697415,-0.546284,4.599561,4.894785,-0.094077,-4.624276],[7.780655,-6.395209,-1.741937,9.232008,1.551129,-6.217833,8.636140,-2.601908],[1.109483,-4.023675,-8.034005,-8.581963,-9.043367,1.688800,5.196596,-1.542056],[-6.765068,3.658834,3.779200,-2.479640,1.041491,-2.013044,8.053972,-7.482224],[6.557805,-2.800090,-7.610712,9.468821,-4.999037,5.091678,-6.538981,-4.904824],[-2.842835,-9.666906,-5.039460,-3.213559,4.224393,5.792708,-4.958363,1.884119],[-1.260400,8.270553,-6.538141,8.214944,0.199823,-3.558649,7.139960,-6.450621],[-5.477684,8.936935,0.109732,5.573225,-6.928256,-6.447638,-8.065534,-1.690756],[7.273185,8.145037,-4.358107,6.061335,1.627809,-0.144666,-2.678260,-2.278681],[8.753157,-8.417034,-0.478952,8.950008,-1.731440,4.761827,9.370153,8.301988],[4.418980,-7.046383,5.271507,8.443995,5.323274,5.758507,3.052570,8.929627],[4.686264,0.619812,6.872951,1.093649,-0.182024,-9.418102,-4.577315,2.358722],[8.747429,-8.698378,9.860924,4.356929,3.961169,-7.607438,7.886315,7.157182],[2.282434,-7.635311,5.166952,-7.447212,-8.044616,3.982312,-1.038634,-3.771842],[-2.914703,0.465350,-0.343386,-7.742514,3.987913,-4.788484,-6.266624,-7.034098],[7.793905,-9.828188,-4.269755,-7.758261,-2.323112,4.047376,-0.953333,-1.124831],[-7.522652,-6.497931,-8.779795,-5.564895,-7.046096,-7.070923,-4.515148,-6.439109],[8.190979,-3.306293,-0.633558,-6.024756,-6.164261,8.991616,7.999810,9.313101],[3.505539,0.345539,4.008970,-0.878912,-7.087442,-9.032995,9.737131,-9.673132],[-5.036555,-4.849729,-8.226124,2.495171,-5.530962,3.041791,-9.575712,-0.529230],[5.701740,0.736188,3.880255,-9.469070,7.617445,2.464048,9.133405,5.085016],[-2.234042,-7.638300,5.374583,-3.089740,1.285169,1.558284,-8.898861,3.372669],[5.696274,-0.613501,-9.329858,9.357168,-9.855454,-3.763367,-1.683225,0.916376],[2.455711,0.668910,4.649091,4.716766,-8.574155,-0.630113,-6.172646,-3.867450],[-9.276260,-4.393814,8.465985,-2.523231,-6.271242,8.215563,5.952870,-5.085240],[8.235278,1.733447,3.729714,2.434109,1.738400,-1.468966,2.829421,-7.736905],[-8.302094,6.397762,-3.409944,3.494041,-0.729279,1.883648,9.863897,9.412256],[-5.787630,3.995666,2.563601,4.468227,-0.896333,-0.116389,-0.721798,0.809843],[4.225444,-0.985611,9.802067,6.330250,-3.721865,5.456171,-8.275252,-7.357335],[1.199376,-9.968565,-9.472911,9.522180,2.533059,9.402198,-3.406624,-0.753233],[2.537475,1.224599,-4.053623,-0.403719,-0.924188,-7.561574,-4.289830,8.385928],[-3.674662,-6.213939,3.961848,1.575170,6.361375,-0.586987,-4.366678,-6.425991]], dtype = "float64")#candidate|2129|(936, 8)|const|float64
bop_2130 = relay.minimum(call_2119.astype('float32'), const_2129.astype('float32')) # shape=(936, 8)
bop_2133 = relay.minimum(call_2120.astype('float32'), const_2129.astype('float32')) # shape=(936, 8)
var_2134 = relay.var("var_2134", dtype = "float32", shape = (936, 8))#candidate|2134|(936, 8)|var|float32
bop_2135 = relay.bitwise_or(bop_2130.astype('uint8'), relay.reshape(var_2134.astype('uint8'), relay.shape_of(bop_2130))) # shape=(936, 8)
bop_2138 = relay.bitwise_or(bop_2133.astype('uint8'), relay.reshape(var_2134.astype('uint8'), relay.shape_of(bop_2133))) # shape=(936, 8)
func_1873_call = mod.get_global_var('func_1873')
func_1874_call = mutated_mod.get_global_var('func_1874')
call_2139 = func_1873_call()
call_2140 = func_1873_call()
output = relay.Tuple([call_2108,bop_2135,call_2139,])
output2 = relay.Tuple([call_2109,bop_2138,call_2140,])
func_2151 = relay.Function([var_2134,], output)
mod['func_2151'] = func_2151
mod = relay.transform.InferType()(mod)
var_2152 = relay.var("var_2152", dtype = "float32", shape = (936, 8))#candidate|2152|(936, 8)|var|float32
output = func_2151(var_2152)
func_2153 = relay.Function([var_2152], output)
mutated_mod['func_2153'] = func_2153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1220_call = mod.get_global_var('func_1220')
func_1221_call = mutated_mod.get_global_var('func_1221')
call_2164 = relay.TupleGetItem(func_1220_call(), 0)
call_2165 = relay.TupleGetItem(func_1221_call(), 0)
uop_2182 = relay.sqrt(call_2164.astype('float32')) # shape=(11, 13, 13)
uop_2184 = relay.sqrt(call_2165.astype('float32')) # shape=(11, 13, 13)
func_327_call = mod.get_global_var('func_327')
func_331_call = mutated_mod.get_global_var('func_331')
var_2189 = relay.var("var_2189", dtype = "int64", shape = (3, 40))#candidate|2189|(3, 40)|var|int64
var_2190 = relay.var("var_2190", dtype = "int64", shape = (1560,))#candidate|2190|(1560,)|var|int64
call_2188 = relay.TupleGetItem(func_327_call(relay.reshape(var_2189.astype('int64'), [15, 8, 1]), relay.reshape(var_2190.astype('int64'), [15, 8, 13]), ), 0)
call_2191 = relay.TupleGetItem(func_331_call(relay.reshape(var_2189.astype('int64'), [15, 8, 1]), relay.reshape(var_2190.astype('int64'), [15, 8, 13]), ), 0)
output = relay.Tuple([uop_2182,call_2188,var_2189,var_2190,])
output2 = relay.Tuple([uop_2184,call_2191,var_2189,var_2190,])
func_2199 = relay.Function([var_2189,var_2190,], output)
mod['func_2199'] = func_2199
mod = relay.transform.InferType()(mod)
var_2200 = relay.var("var_2200", dtype = "int64", shape = (3, 40))#candidate|2200|(3, 40)|var|int64
var_2201 = relay.var("var_2201", dtype = "int64", shape = (1560,))#candidate|2201|(1560,)|var|int64
output = func_2199(var_2200,var_2201,)
func_2202 = relay.Function([var_2200,var_2201,], output)
mutated_mod['func_2202'] = func_2202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_2237 = relay.TupleGetItem(func_298_call(), 0)
call_2238 = relay.TupleGetItem(func_299_call(), 0)
func_724_call = mod.get_global_var('func_724')
func_726_call = mutated_mod.get_global_var('func_726')
call_2239 = relay.TupleGetItem(func_724_call(), 1)
call_2240 = relay.TupleGetItem(func_726_call(), 1)
output = relay.Tuple([call_2237,call_2239,])
output2 = relay.Tuple([call_2238,call_2240,])
func_2245 = relay.Function([], output)
mod['func_2245'] = func_2245
mod = relay.transform.InferType()(mod)
output = func_2245()
func_2246 = relay.Function([], output)
mutated_mod['func_2246'] = func_2246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1220_call = mod.get_global_var('func_1220')
func_1221_call = mutated_mod.get_global_var('func_1221')
call_2309 = relay.TupleGetItem(func_1220_call(), 0)
call_2310 = relay.TupleGetItem(func_1221_call(), 0)
func_893_call = mod.get_global_var('func_893')
func_895_call = mutated_mod.get_global_var('func_895')
call_2311 = relay.TupleGetItem(func_893_call(), 0)
call_2312 = relay.TupleGetItem(func_895_call(), 0)
func_666_call = mod.get_global_var('func_666')
func_667_call = mutated_mod.get_global_var('func_667')
call_2324 = relay.TupleGetItem(func_666_call(), 0)
call_2325 = relay.TupleGetItem(func_667_call(), 0)
func_1408_call = mod.get_global_var('func_1408')
func_1412_call = mutated_mod.get_global_var('func_1412')
var_2342 = relay.var("var_2342", dtype = "float64", shape = (75,))#candidate|2342|(75,)|var|float64
call_2341 = relay.TupleGetItem(func_1408_call(relay.reshape(var_2342.astype('float64'), [75,]), relay.reshape(var_2342.astype('float64'), [75,]), ), 0)
call_2343 = relay.TupleGetItem(func_1412_call(relay.reshape(var_2342.astype('float64'), [75,]), relay.reshape(var_2342.astype('float64'), [75,]), ), 0)
output = relay.Tuple([call_2309,call_2311,call_2324,call_2341,var_2342,])
output2 = relay.Tuple([call_2310,call_2312,call_2325,call_2343,var_2342,])
func_2350 = relay.Function([var_2342,], output)
mod['func_2350'] = func_2350
mod = relay.transform.InferType()(mod)
var_2351 = relay.var("var_2351", dtype = "float64", shape = (75,))#candidate|2351|(75,)|var|float64
output = func_2350(var_2351)
func_2352 = relay.Function([var_2351], output)
mutated_mod['func_2352'] = func_2352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_382_call = mod.get_global_var('func_382')
func_383_call = mutated_mod.get_global_var('func_383')
call_2424 = relay.TupleGetItem(func_382_call(), 0)
call_2425 = relay.TupleGetItem(func_383_call(), 0)
output = call_2424
output2 = call_2425
func_2429 = relay.Function([], output)
mod['func_2429'] = func_2429
mod = relay.transform.InferType()(mod)
mutated_mod['func_2429'] = func_2429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2429_call = mutated_mod.get_global_var('func_2429')
call_2430 = func_2429_call()
output = call_2430
func_2431 = relay.Function([], output)
mutated_mod['func_2431'] = func_2431
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2455 = relay.const([[[6,-4,-10],[3,8,-5],[6,-1,-2],[6,10,8],[-10,4,2],[9,-9,-2],[-2,3,10],[-6,-1,-1],[-9,-10,2],[10,-1,-9],[-10,-10,9],[-1,7,-1],[-2,-5,6],[-8,4,4],[10,-10,-6],[3,-5,-8]],[[4,-5,1],[-2,-3,-8],[3,-3,-7],[-3,-9,-7],[1,-5,-4],[-3,2,1],[-4,-8,10],[-5,3,-9],[3,7,-6],[10,-6,-6],[-6,9,6],[1,3,-6],[-7,-5,7],[3,6,3],[-8,-1,-8],[5,7,1]],[[-5,3,6],[-2,-10,-5],[1,-8,-10],[2,4,2],[-10,5,2],[1,2,7],[3,1,8],[-10,-4,7],[9,-9,3],[-6,-10,-2],[-1,-10,-7],[1,8,-3],[9,-5,-4],[-4,2,-8],[7,-9,9],[9,-4,-4]],[[-6,1,8],[10,9,-8],[-6,6,10],[-4,-1,5],[-4,-9,5],[-9,8,-5],[-6,-6,10],[8,8,5],[-9,6,4],[8,-8,-8],[2,-4,-7],[-9,-5,8],[8,-1,-9],[8,-7,-7],[-8,9,-4],[6,4,6]],[[-10,6,9],[1,1,8],[10,1,-10],[8,-3,-3],[6,3,-1],[3,6,-7],[7,-6,9],[2,10,7],[-10,-8,-4],[2,-10,9],[-7,-3,6],[-10,9,1],[10,9,5],[-9,-1,-9],[-8,2,-9],[-1,7,-9]],[[-5,4,-5],[-4,-8,-6],[-9,1,-4],[2,3,-1],[-6,9,8],[4,5,9],[-5,-6,8],[-10,-6,4],[1,-5,-9],[-9,1,-8],[-3,4,4],[-9,-8,2],[6,-10,2],[4,9,10],[-8,-5,-6],[-7,9,9]],[[5,-10,3],[-9,-5,3],[3,3,-9],[-2,-1,-5],[1,-7,3],[4,4,-1],[8,-9,-8],[-2,-2,-5],[-9,7,5],[6,3,-6],[9,-4,-6],[1,-4,-8],[-3,-5,7],[-5,6,-6],[-5,7,-8],[-2,-5,-2]],[[-1,4,5],[8,-4,2],[-3,-10,10],[-2,-2,3],[-1,7,-1],[-6,1,-8],[2,4,-8],[-7,-5,10],[5,-2,-10],[-7,10,-9],[-10,-5,-5],[-9,8,-10],[2,-7,-6],[-6,-8,8],[-3,-1,6],[8,-4,-10]],[[6,3,5],[-2,3,-5],[6,-10,10],[-4,-2,10],[4,-7,-8],[9,-8,-10],[6,-9,-3],[7,-8,6],[6,4,7],[-9,9,1],[-3,-3,-3],[-4,-9,9],[9,-1,-5],[-8,-9,3],[4,6,8],[-3,8,-1]],[[-1,9,10],[-1,-5,10],[9,3,8],[-3,5,-8],[-7,-3,-8],[-7,1,-8],[3,4,4],[-8,-1,3],[6,-6,5],[4,-6,10],[-5,-1,-2],[-9,-10,5],[-10,9,3],[-3,-5,-1],[-4,4,-4],[-1,9,7]],[[-5,-8,-1],[1,5,3],[9,8,6],[6,-4,9],[5,9,6],[-7,2,7],[8,7,7],[3,7,-10],[9,-6,-8],[-3,6,9],[9,2,5],[7,7,-7],[5,10,1],[6,8,5],[6,9,1],[6,7,-3]],[[7,-6,-3],[9,-4,1],[-9,-5,8],[2,-9,8],[10,2,-3],[-10,5,5],[10,10,-2],[-9,-8,9],[6,2,2],[-7,-5,4],[6,-8,-9],[-10,8,-4],[1,-3,-8],[4,4,9],[-5,2,5],[-10,9,1]],[[3,-8,-3],[5,-6,10],[-3,-7,-10],[4,-3,9],[-10,9,7],[9,3,-2],[10,2,-8],[-9,9,-7],[-2,-6,7],[5,4,-7],[7,-10,-3],[-9,-2,8],[-3,2,-3],[-1,-9,-4],[-2,-2,-4],[-7,6,3]]], dtype = "int8")#candidate|2455|(13, 16, 3)|const|int8
var_2456 = relay.var("var_2456", dtype = "int8", shape = (13, 16, 3))#candidate|2456|(13, 16, 3)|var|int8
bop_2457 = relay.bitwise_or(const_2455.astype('int8'), relay.reshape(var_2456.astype('int8'), relay.shape_of(const_2455))) # shape=(13, 16, 3)
output = bop_2457
output2 = bop_2457
func_2476 = relay.Function([var_2456,], output)
mod['func_2476'] = func_2476
mod = relay.transform.InferType()(mod)
var_2477 = relay.var("var_2477", dtype = "int8", shape = (13, 16, 3))#candidate|2477|(13, 16, 3)|var|int8
output = func_2476(var_2477)
func_2478 = relay.Function([var_2477], output)
mutated_mod['func_2478'] = func_2478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1310_call = mod.get_global_var('func_1310')
func_1311_call = mutated_mod.get_global_var('func_1311')
call_2578 = func_1310_call()
call_2579 = func_1310_call()
output = relay.Tuple([call_2578,])
output2 = relay.Tuple([call_2579,])
func_2610 = relay.Function([], output)
mod['func_2610'] = func_2610
mod = relay.transform.InferType()(mod)
output = func_2610()
func_2611 = relay.Function([], output)
mutated_mod['func_2611'] = func_2611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_724_call = mod.get_global_var('func_724')
func_726_call = mutated_mod.get_global_var('func_726')
call_2614 = relay.TupleGetItem(func_724_call(), 1)
call_2615 = relay.TupleGetItem(func_726_call(), 1)
func_1236_call = mod.get_global_var('func_1236')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_2617 = func_1236_call()
call_2618 = func_1236_call()
func_205_call = mod.get_global_var('func_205')
func_207_call = mutated_mod.get_global_var('func_207')
call_2632 = func_205_call()
call_2633 = func_205_call()
output = relay.Tuple([call_2614,call_2617,call_2632,])
output2 = relay.Tuple([call_2615,call_2618,call_2633,])
func_2637 = relay.Function([], output)
mod['func_2637'] = func_2637
mod = relay.transform.InferType()(mod)
output = func_2637()
func_2638 = relay.Function([], output)
mutated_mod['func_2638'] = func_2638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1487_call = mod.get_global_var('func_1487')
func_1489_call = mutated_mod.get_global_var('func_1489')
call_2671 = relay.TupleGetItem(func_1487_call(), 0)
call_2672 = relay.TupleGetItem(func_1489_call(), 0)
func_1709_call = mod.get_global_var('func_1709')
func_1711_call = mutated_mod.get_global_var('func_1711')
const_2674 = relay.const([-2,2,-6,-2,8,2,4,-7,9,10,-10,-10,-5,7,-2,7,-9,5,-7,-6,-3,-10,-4,-9,-8,-2,3,3,-3,-1,5,10,4,-3,4,-5,10,1,2,-8,-10,-7,4,-5,10,-3,2,3,7,-9,5,-8,-9,10,-1,-10,-1,-6,-8,-4,-4,3,8,-4,-2,-6,8,4,2,-7,-2,-4,7,-10,10,3,-8,-4,2,1,-2,1,-2,-7,8,-7,-2,-5,-10,4,-6,-8,3,1,9,-9,9,-10,6,-5,-1,7,3,2,7,-5,-3,9,4,-3,-2,-3,4,-1,-1,7,9,5,9,7], dtype = "int64")#candidate|2674|(120,)|const|int64
call_2673 = relay.TupleGetItem(func_1709_call(relay.reshape(const_2674.astype('int64'), [3, 40])), 0)
call_2675 = relay.TupleGetItem(func_1711_call(relay.reshape(const_2674.astype('int64'), [3, 40])), 0)
output = relay.Tuple([call_2671,call_2673,const_2674,])
output2 = relay.Tuple([call_2672,call_2675,const_2674,])
func_2683 = relay.Function([], output)
mod['func_2683'] = func_2683
mod = relay.transform.InferType()(mod)
output = func_2683()
func_2684 = relay.Function([], output)
mutated_mod['func_2684'] = func_2684
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2714 = relay.const([[[-7.059932,9.740972,-5.494816,6.000154,-3.870646,7.556098,3.319066,-0.411984,3.488194,-5.873898],[2.577105,-2.853433,0.503887,-1.745547,-9.790168,9.501203,-5.540263,0.063844,-5.024118,-3.569440],[3.845547,9.913039,5.159779,-2.143150,7.755131,0.585577,9.775840,-0.798597,-1.254711,-2.440043],[4.391219,2.200094,-6.884416,-7.612940,-3.991192,7.560992,-4.174333,-0.100480,7.980880,-5.331640],[6.165412,2.305946,-7.821860,1.934978,-0.297376,3.013882,-1.241103,3.926437,7.745740,2.540058]],[[-3.994380,7.894178,6.781826,-6.249962,-6.427419,4.235672,9.273762,1.888011,7.264992,-3.292910],[-5.545174,2.106576,-3.020344,-1.223842,-1.428266,3.043928,-8.651819,-0.526621,8.688684,-6.843758],[4.638578,9.966236,-2.470547,-4.829112,-4.600618,-3.773099,-2.442286,8.863683,-1.387657,-0.991506],[8.296634,-0.195173,-8.877924,1.294815,6.284710,-4.548823,-3.218233,9.795387,-4.170706,-4.218250],[-8.690827,4.469379,-7.365747,-7.776198,-0.223400,3.275454,-7.569167,-0.728542,-4.821836,-0.333146]],[[1.953783,1.101058,6.507758,3.800270,-2.230066,-1.691780,-8.433024,-8.657454,-1.521943,5.242985],[4.973637,-5.906495,-4.987505,1.576961,-5.197532,8.630350,-9.293034,8.885977,6.746278,2.294132],[-3.038490,0.396768,9.545515,3.724125,-2.006614,8.290563,-6.146571,0.178567,-4.177283,4.721664],[8.698373,-8.622922,0.399548,6.584015,-8.048278,4.457222,-2.704985,0.915526,-5.234895,8.140904],[-2.203262,-7.548085,-6.993337,8.589863,-9.531622,0.553770,3.937552,2.512580,-2.765701,-5.387231]],[[9.266901,1.173441,-6.462904,-7.122011,-3.758620,5.627557,-7.659714,2.446879,3.830265,4.450632],[5.590607,9.131667,-1.168960,-2.772171,3.552823,-6.383219,-6.256919,-4.586647,-5.131909,6.652947],[-2.952519,2.704370,-8.002250,0.862107,-6.035264,-6.793519,-5.475992,-4.238825,-6.157966,4.312634],[7.641351,9.819525,4.911727,-5.516445,-4.789041,-6.610086,-9.058959,7.243883,-4.099997,8.360709],[2.378372,3.025782,8.830505,-9.701680,-3.724471,-0.996759,7.029040,3.799274,0.741152,3.540731]],[[8.132025,8.802520,5.052324,-4.678678,5.634658,-7.145119,6.663825,-4.624362,-0.443870,5.398464],[-8.117626,-4.309192,7.486672,8.037690,-3.474315,-3.916764,-0.846478,2.044467,-7.422387,-4.484981],[6.044564,-2.527079,-5.409657,-8.523131,0.354109,6.547803,6.680277,-2.750956,2.016891,3.730787],[-7.160503,0.476165,3.345703,-2.891658,-1.729017,-7.136866,-4.148895,4.798010,5.941478,3.120522],[2.282451,2.848283,-5.835624,9.805731,9.336611,0.348012,-2.886493,-3.757813,-8.675059,1.666238]],[[5.309889,-6.462652,-3.260839,-5.621430,9.128585,-8.470117,-7.870415,9.416164,1.951964,-5.372481],[-3.557794,-5.737041,-4.410983,-7.358300,-9.698384,-6.140342,7.595557,4.059834,-6.821432,-4.308079],[4.711559,-1.863552,-9.189059,-7.699201,-2.391931,-1.882977,6.886326,7.312982,3.288980,-6.194240],[0.410174,-7.323227,8.188634,-1.756191,6.705069,-6.091370,5.364900,0.517712,-1.150476,-5.494929],[-7.019068,3.632544,6.003610,-8.640537,0.710021,-8.056013,9.135785,5.339793,-9.159153,-8.797456]],[[-4.972152,-3.869602,9.081939,5.663036,-2.933544,-8.909363,-5.085787,-2.907119,-3.475936,6.695165],[6.032129,-6.748889,-5.059388,2.725078,1.588769,-2.522214,-4.102568,9.755209,-8.089914,-1.495608],[-0.452193,-5.504560,-6.035744,8.689119,4.372741,-5.483990,-8.561321,7.258268,7.775960,-8.620321],[-4.625173,-1.636712,3.961017,-7.464457,4.867239,-7.318189,6.286723,-5.058965,6.025244,-7.204420],[-7.463688,1.659131,3.290415,7.176985,-8.898987,6.406317,8.373828,2.237662,2.387075,-2.083021]],[[-2.809592,9.227908,0.276800,-5.108415,0.806458,5.117653,2.089855,-3.440528,9.577328,5.096301],[7.689055,-5.759270,5.157888,-2.384337,2.905800,1.910954,8.915485,7.503283,-2.426445,-4.552984],[-0.107593,-5.201662,-6.886267,-1.921932,-4.772040,6.866505,-1.909362,-1.845036,-8.430094,9.695921],[-7.316364,0.917872,9.647574,-2.962511,-5.391836,7.423721,8.685522,3.218426,-3.665469,6.697702],[7.227330,1.552940,2.457037,0.835180,-9.593399,5.886295,2.389428,-8.120641,-4.082025,2.511993]],[[2.712104,5.639397,-4.870340,9.572579,1.999886,8.611190,6.396568,-8.908834,1.924405,-0.887562],[-4.448288,-9.116385,2.013964,-0.354379,5.606890,-5.918810,-7.692592,5.874678,-8.086234,-4.447353],[-1.856240,7.709412,-9.501253,-3.187638,7.379194,8.191156,-1.008007,-0.063232,-8.897659,5.811082],[-1.081114,7.824732,-9.597879,7.793234,6.365342,-4.598701,0.170432,9.839824,3.346985,0.161876],[3.039089,0.515275,-2.860564,2.873132,-9.333114,0.451171,-8.904137,-1.757655,7.656805,-9.751464]],[[3.380969,-2.533060,-4.319190,-2.928854,9.854252,-1.867682,-6.512232,9.867539,1.139353,2.292370],[5.184167,-9.316398,9.870744,-6.815585,-8.675168,4.948510,2.670364,3.649741,-2.442518,-5.998448],[2.048475,-7.490578,-2.906178,1.092598,-4.927648,8.351217,6.886857,0.963907,-8.893590,4.971593],[-5.638041,-7.406985,4.828409,0.140719,3.871829,5.982829,0.695273,-1.854099,6.097075,8.352115],[8.711012,-6.124122,9.687092,4.811600,8.882878,-7.173804,-1.756707,-3.786788,-3.326502,7.938251]],[[5.312361,4.382292,-5.942515,-8.658481,2.413662,4.477836,-5.646034,0.143219,0.444955,-7.549832],[2.937089,2.504026,1.895207,0.989854,3.856214,-4.671503,-3.462200,3.407318,2.863754,-0.050506],[-6.043464,7.956259,8.479912,-5.450424,-0.989286,-5.589361,8.615239,1.630278,3.043323,5.104338],[8.790153,8.677679,9.424107,-5.229027,-7.478703,0.687985,-2.871317,4.079724,7.427401,-0.660074],[-3.849715,6.607510,-8.157255,8.093244,-2.939103,2.387969,-5.455052,2.954700,1.049027,-6.190434]],[[-1.550947,-4.117513,3.747272,6.204751,0.464091,-7.006953,-8.224925,-0.232337,-6.139221,-3.612961],[-0.168095,-1.616683,-3.570145,-4.174561,4.876560,8.947500,-9.184080,-9.201770,0.186544,-2.053712],[2.541987,2.033332,-3.875786,8.769184,8.773051,8.586883,0.900165,-5.624316,8.379795,6.346743],[6.031623,5.851353,2.950371,4.439840,3.957301,3.111202,-8.173800,-4.251817,-2.534014,9.451400],[6.259849,3.617411,-2.887359,-4.549076,-3.462849,-0.501758,-2.534240,1.866374,2.041391,-0.618061]],[[-1.961581,-8.262441,-7.444455,-9.348902,-4.212947,-7.039175,-6.582789,-8.547461,0.604903,7.220151],[-9.106116,-0.734425,5.279797,-9.789541,-1.160918,7.148603,5.244990,-0.766441,-6.467594,-5.576980],[-3.252560,-4.892929,3.735084,-0.134560,4.049162,-0.494771,2.357798,-2.983212,0.019793,-5.202485],[4.664894,-8.488865,9.038569,9.213016,5.132996,-9.764933,-0.324077,2.521029,1.906253,3.451945],[6.457665,-7.696265,-3.898215,1.733421,-5.423639,1.463569,6.819747,-7.989745,-5.849324,-6.232468]],[[7.867811,-6.299247,5.638333,5.870524,7.511439,4.337866,6.648434,6.703833,-4.602385,7.121043],[-3.574458,-9.976752,-0.709352,-5.647698,-8.329467,9.011167,9.427388,-1.780506,8.197513,7.042631],[-7.869756,9.567674,1.284604,4.854642,0.819984,-0.827854,5.908572,6.691938,3.169675,0.370932],[-3.862394,2.178922,-4.412589,-3.996514,-6.997344,-0.466823,-8.172202,-8.487120,-6.982830,1.127790],[-3.417137,-5.021631,-3.464747,0.883381,9.575488,-2.458313,6.256714,-0.532846,7.681088,8.001443]]], dtype = "float64")#candidate|2714|(14, 5, 10)|const|float64
uop_2715 = relay.sin(const_2714.astype('float64')) # shape=(14, 5, 10)
output = uop_2715
output2 = uop_2715
func_2717 = relay.Function([], output)
mod['func_2717'] = func_2717
mod = relay.transform.InferType()(mod)
output = func_2717()
func_2718 = relay.Function([], output)
mutated_mod['func_2718'] = func_2718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1668_call = mod.get_global_var('func_1668')
func_1669_call = mutated_mod.get_global_var('func_1669')
call_2741 = relay.TupleGetItem(func_1668_call(), 0)
call_2742 = relay.TupleGetItem(func_1669_call(), 0)
uop_2752 = relay.sin(call_2741.astype('float64')) # shape=(11, 13, 13)
uop_2754 = relay.sin(call_2742.astype('float64')) # shape=(11, 13, 13)
output = relay.Tuple([uop_2752,])
output2 = relay.Tuple([uop_2754,])
func_2755 = relay.Function([], output)
mod['func_2755'] = func_2755
mod = relay.transform.InferType()(mod)
output = func_2755()
func_2756 = relay.Function([], output)
mutated_mod['func_2756'] = func_2756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1487_call = mod.get_global_var('func_1487')
func_1489_call = mutated_mod.get_global_var('func_1489')
call_2819 = relay.TupleGetItem(func_1487_call(), 0)
call_2820 = relay.TupleGetItem(func_1489_call(), 0)
output = call_2819
output2 = call_2820
func_2829 = relay.Function([], output)
mod['func_2829'] = func_2829
mod = relay.transform.InferType()(mod)
output = func_2829()
func_2830 = relay.Function([], output)
mutated_mod['func_2830'] = func_2830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2717_call = mod.get_global_var('func_2717')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_2843 = func_2717_call()
call_2844 = func_2717_call()
output = call_2843
output2 = call_2844
func_2847 = relay.Function([], output)
mod['func_2847'] = func_2847
mod = relay.transform.InferType()(mod)
mutated_mod['func_2847'] = func_2847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2847_call = mutated_mod.get_global_var('func_2847')
call_2848 = func_2847_call()
output = call_2848
func_2849 = relay.Function([], output)
mutated_mod['func_2849'] = func_2849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_2934 = relay.TupleGetItem(func_2637_call(), 0)
call_2935 = relay.TupleGetItem(func_2638_call(), 0)
output = relay.Tuple([call_2934,])
output2 = relay.Tuple([call_2935,])
func_2939 = relay.Function([], output)
mod['func_2939'] = func_2939
mod = relay.transform.InferType()(mod)
mutated_mod['func_2939'] = func_2939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2939_call = mutated_mod.get_global_var('func_2939')
call_2940 = func_2939_call()
output = call_2940
func_2941 = relay.Function([], output)
mutated_mod['func_2941'] = func_2941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1496_call = mod.get_global_var('func_1496')
func_1497_call = mutated_mod.get_global_var('func_1497')
call_2944 = relay.TupleGetItem(func_1496_call(), 1)
call_2945 = relay.TupleGetItem(func_1497_call(), 1)
uop_2949 = relay.asinh(call_2944.astype('float32')) # shape=(11, 13, 13)
uop_2951 = relay.asinh(call_2945.astype('float32')) # shape=(11, 13, 13)
func_893_call = mod.get_global_var('func_893')
func_895_call = mutated_mod.get_global_var('func_895')
call_2993 = relay.TupleGetItem(func_893_call(), 3)
call_2994 = relay.TupleGetItem(func_895_call(), 3)
func_437_call = mod.get_global_var('func_437')
func_441_call = mutated_mod.get_global_var('func_441')
const_2996 = relay.const([[-6,-3,5,-2],[4,8,-10,1],[-4,-10,4,-4],[-6,4,1,-1],[4,7,-7,10],[-7,-7,1,-9],[-2,9,-10,-10],[10,-6,-10,9],[10,3,5,1],[2,-8,-7,-10],[-8,4,4,6],[-10,6,-1,5],[-10,-9,2,8],[-9,8,5,-6],[7,-3,-5,-6],[3,-6,4,4],[-10,1,-4,-7],[-5,-8,3,3],[3,2,5,5],[-9,-2,10,8],[-10,1,8,-4],[5,5,-7,9],[-4,-10,-10,-9],[-5,1,-9,-5],[-8,1,-6,-2],[9,10,-6,8],[9,-3,4,-5],[4,-4,7,-10],[-10,2,5,9],[-3,-10,8,-1]], dtype = "int64")#candidate|2996|(30, 4)|const|int64
const_2997 = relay.const([-6,-7,-9,9,2,7,-10,2,-4,-9,-1,-2,1,10,-8,7,7,7,5,-9,1,-8,2,-6,-6,-1,-5,-9,-4,-10,5,4,-3,6,-8,-4,3,-1,-9,3,-4,-4,7,7,2,4,7,7,-1,-8,10,-8,-2,-9,-10,10,-9,2,6,9,-9,5,-3,5,-5,-4,5,-1,-3,-1,5,4,4,1,-5,9,-3,9,-7,1,1,1,7,4,2,-2,7,-2,2,-4,-2,-3,7,5,10,8,-1,-7,8,-10,-9,9,8,10,3,-7,6,1,3,9,-2,-3,3,3,3,4,-6,1,-2,-4,-4,-9,-10,-6,-8,6,-4,-3,1,10,1,-10,-7,-3,-10,4,-7,-6,7,1,9,-3,8,-1,6,-7,-7,6,-7,-5,-5,1,-5,-10,-1,6,-10,-4,-7,-1,8,9,-4,1,5,8,-6,5,-10,-4,8,10,10,-10,10,-9,-9,6,-5,-7,-5,-4,8,4,6,6,9,4,3,-4,7,-3,-4,-2,-6,-1,7,-5,7,-10,9,-5,-5,6,4,1,5,-10,1,-8,-2,-1,6,-4,5,-4,-2,-3,-1,-5,10,8,9,4,9,-8,-3,-10,7,4,7,-6,-8,-6,-9,5,6,-7,-1,-5,-5,1,-4,-10,2,2,-1,-8,9,-9,-4,10,-10,-5,7,1,-4,1,3,10,-3,-5,-5,5,-7,-4,3,-1,8,3,-7,-7,-7,3,-10,-5,7,1,-3,6,5,10,-2,8,-8,-7,-5,8,-5,-2,-1,-1,-7,10,9,1,-6,1,-2,7,-9,-5,-9,8,3,10,-9,4,-1,5,10,5,6,3,-4,10,-7,10,9,1,-10,-5,1,-4,-4,6,6,2,-7,4,7,7,-2,-9,8,2,-10,8,10,6,2,10,3,-2,6,4,-1,-7,-1,-1,-8,-9,-3,2,9,-9,-1,-9,-10,-7,-8,-2,-3,9,5,4,-6,-4,8,-4,5,7,10,-2,-6,9,-9,2,-9,-9,10,10,4,5,-1,10,2,-3,1,5,4,3,2,-9,-4,-7,-2,10,-10,-10,6,8,7,-10,-9,-8,-6,6,6,-1,4,7,-5,-1,-4,8,3,7,1,8,10,-1,-9,-6,-4,7,7,3,-3,-6,5,10,-4,-8,4,-3,2,-3,-2,-5,-8,-4,6,-6,2,-9,-8,7,-6,6,-8,4,-2,-10,6,3,-8,8,6,7,7,-5,5,-8,-6,10,-3,4,9,-2,-9,-8,3,3,9,-5,5,1,3,-10,-4,-3,-3,10,2,9,-8,10,-3,1,2,8,8,-9,9,-10,-10,-7,1,-6,-3,4,-2,-3,9,8,-9,-1,6,-10,9,-7,4,-3,3,-7,6,8,-8,-4,-4,-8,-9,-4,9,9,5,-7,1,-5,9,3,-3,-5,3,-8,4,-1,-5,9,8,-1,5,5,10,-4,-10,-6,9,4,5,-8,7,3,2,-7,-9,5,-8,1,10,7,-2,5,-6,-3,10,-1,9,-1,3,3,-8,-7,-1,-4,-6,3,8,1,-6,7,4,-2,-10,-3,-1,-7,9,5,4,10,-4,10,-10,6,-3,-3,10,9,-10,-5,1,2,-7,9,-8,-1,-4,2,2,-2,-2,-10,-10,-2,-3,1,-8,3,10,7,3,-10,-1,-2,10,-5,-9,-5,-6,-9,-4,3,5,-7,10,-3,-4,-1,-5,7,9,10,-7,-8,1,-3,10,-9,2,2,-2,6,-7,-2,-1,8,10,-9,2,-1,-9,-10,-10,5,-4,3,-1,-3,-7,-9,-3,10,6,10,9,2,6,6,-10,-8,-8,-2,2,-5,2,7,4,9,-9,9,2,5,-3,4,3,-8,4,8,-5,7,1,-5,3,7,2,-9,7,-2,6,4,1,8,1,-3,3,6,-8,-10,-2,3,5,10,-8,2,10,3,7,-9,9,5,-4,9,1,-2,-8,-8,-7,-7,-1,-8,7,4,-5,2,-5,-8,-1,10,8,-4,-7,1,3,2,9,6,-1,1,5,10,4,10,6,-7,2,-3,6,-6,4,-4,7,-10,-2,6,8,-9,5,10,-9,-8,-8,1,-4,4,2,10,10,10,5,-1,-2,-9,-8,-10,4,8,-6,-10,6,6,-2,9,-10,-5,-5,-10,-5,-3,8,9,-9,5,-8,6,1,-3,-2,-6,-3,9,-5,4,8,4,1,7,2,5,-9,5,-5,-4,3,1,-8,2,7,-3,3,10,-3,-2,-3,7,2,-1,-10,-5,-4,7,-5,5,-4,1,-8,-1,-10,-7,2,6,-4,2,-1,-7,3,6,2,4,-2,5,-5,-2,-1,-1,-1,-8,1,10,-5,8,-2,8,6,2,-4,-9,-5,-8,-7,9,4,-6,-5,1,-5,10,3,-1,-9,-8,-4,-5,-7,-5,-2,6,-2,-4,-1,1,-4,-5,-8,-8,3,-1,5,6,-1,-8,-5,-10,9,8,-9,-7,-9,-1,-1,5,7,1,-3,5,7,-6,10,-1,-10,-10,-7,1,9,2,-3,4,-2,3,1,9,5,-10,9,-5,-2,7,10,-3,2,-1,-2,-6,-9,4,-10,7,6,10,3,-8,8,2,5,-1,3,-3,-6,-3,-9,6,-10,5,-4,-5,10,-10,9,10,-1,3,2,3,5,4,3,-3,7,-8,3,-8,7,5,1,-9,4,-8,-8,-4,-7,10,10,-2,3,8,5,1,3,5,-9,10,-6,2,9,10,-6,-7,-4,-5,-3,3,8,-10,-9,-9,-1,6,9,-3,5,6,4,10,-6,-2,-8,7,-8,1,3,-8,10,4,-1,8,2,7,-1,1,10,4,-8,-5,9,-6,5,7,-7,5,-9,3,-8,7,-5,-5,-2,4,2,-10,7,-3,1,10,-2,5,-9,-3,7,4,-6,9,-10,2,6,4,8,-10,7,7,6,-1,10,-9,3,1,6,9,-4,-9,3,-6,9,9,5,-7,8,5,1,-3,9,4,-3,-1,-6,-9,-4,-9,10,-10,4,5,5,-7,4,-3,-5,10,1,-7,4,5,1,-10,4,4,-9,-9,9,-3,10,-9,2,-5,1,-10,-7,2,9,-7,-1,-10,-1,5,8,6,5,-3,5,9,-9,10,6,-4,-3,9,-3,6,-9,-4,10,-5,5,1,-5,5,-3,-1,-8,-5,5,7,-4,-10,4,2,-5,-9,4,-10,2,2,-2,-4,8,-1,3,1,-1,-2,6,-2,-8,3,3,-10,1,-10,-7,-3,-6,-7,2,-8,-10,1,2,-9,4,-4,-5,2,8,-7,10,1,-4,-5,-8,-3,-1,4,-6,6,5,7,-6,-6,-2,-1,-2,-8,-3,-7,6,-1,2,2,8,-8,-10,3,-3,-2,1,-7,8,-1,8,3,-8,1,-10,8,1,-1,10,-8,-2,-9,-6,7,-4,6,-8,6,-3,-6,9,1,9,-2,-7,-3,3,-3,10,2,8,-6,6,2,8,-10,-1,7,-2,-10,-9,7,7,-10,10,1,-9,6,-8,7,-6,2,-10,9,8,-1,2,-9,-8,8,-1,7,5,-7,2,10,1,-5,-1,-2,-4,7,3,-7,-5,10,-5,5,-8,4,6,-10,-7,7,9,-8,4,-1,1,9,-4,-1,-6,8,9,-6,7,2,-10,2,10,-4,-7,-5,-6,6,5,-8,2,-7,-9,5,-10,10,8,1,3,-6,4,-1,-6,-8,-2,4,-2,6,5,-7,-10,6,8,8,5,-2,-5,-9,9,4,6,7,10,-1,-7,-1,-5,7,-4,-7,-8,10,-1,4,8,1,-5,-4,-4,-9,3,-9,7,-4,-2,-4,9,4,4,-1,-6,-8,1,-6,-7,5,5,10,2,2,4,-4,1,4,4,8,8,-10,10,-5,1,8,-5,-7,-4,-1,-5,3,3,-1,-5,-8,7,-1,6,-3,-7,2,-9,9,7,4,-6,-10,-8,-5,-10,-3,1,-3,1,5,-8,10,-5,3,-10,6,7,3,6,6,1,6,-5,-2,-6,-6,3,2,-4,1,-5,10,-4,-5,2,-10,-3,8,7,6,-6,-8,8,-6,8,-10,8,-2,4,-7,-1,3,5,-1,1,8,2,6,-7,-6,-2,9,-6,-4,-10,-9,8,-4,3,-7,-3,-2,10,-4,-10,3,7,-4,3,-1,9,-6], dtype = "int64")#candidate|2997|(1560,)|const|int64
call_2995 = relay.TupleGetItem(func_437_call(relay.reshape(const_2996.astype('int64'), [120,]), relay.reshape(const_2997.astype('int64'), [6, 260]), ), 4)
call_2998 = relay.TupleGetItem(func_441_call(relay.reshape(const_2996.astype('int64'), [120,]), relay.reshape(const_2997.astype('int64'), [6, 260]), ), 4)
func_635_call = mod.get_global_var('func_635')
func_636_call = mutated_mod.get_global_var('func_636')
call_3013 = relay.TupleGetItem(func_635_call(), 0)
call_3014 = relay.TupleGetItem(func_636_call(), 0)
output = relay.Tuple([uop_2949,call_2993,call_2995,const_2996,const_2997,call_3013,])
output2 = relay.Tuple([uop_2951,call_2994,call_2998,const_2996,const_2997,call_3014,])
func_3017 = relay.Function([], output)
mod['func_3017'] = func_3017
mod = relay.transform.InferType()(mod)
mutated_mod['func_3017'] = func_3017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3017_call = mutated_mod.get_global_var('func_3017')
call_3018 = func_3017_call()
output = call_3018
func_3019 = relay.Function([], output)
mutated_mod['func_3019'] = func_3019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1772_call = mod.get_global_var('func_1772')
func_1773_call = mutated_mod.get_global_var('func_1773')
call_3039 = relay.TupleGetItem(func_1772_call(), 1)
call_3040 = relay.TupleGetItem(func_1773_call(), 1)
func_1155_call = mod.get_global_var('func_1155')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_3055 = relay.TupleGetItem(func_1155_call(), 1)
call_3056 = relay.TupleGetItem(func_1157_call(), 1)
func_205_call = mod.get_global_var('func_205')
func_207_call = mutated_mod.get_global_var('func_207')
call_3060 = func_205_call()
call_3061 = func_205_call()
output = relay.Tuple([call_3039,call_3055,call_3060,])
output2 = relay.Tuple([call_3040,call_3056,call_3061,])
func_3067 = relay.Function([], output)
mod['func_3067'] = func_3067
mod = relay.transform.InferType()(mod)
mutated_mod['func_3067'] = func_3067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3067_call = mutated_mod.get_global_var('func_3067')
call_3068 = func_3067_call()
output = call_3068
func_3069 = relay.Function([], output)
mutated_mod['func_3069'] = func_3069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_492_call = mod.get_global_var('func_492')
func_494_call = mutated_mod.get_global_var('func_494')
call_3093 = func_492_call()
call_3094 = func_492_call()
func_539_call = mod.get_global_var('func_539')
func_540_call = mutated_mod.get_global_var('func_540')
call_3105 = func_539_call()
call_3106 = func_539_call()
func_1270_call = mod.get_global_var('func_1270')
func_1274_call = mutated_mod.get_global_var('func_1274')
var_3111 = relay.var("var_3111", dtype = "uint32", shape = (75,))#candidate|3111|(75,)|var|uint32
var_3112 = relay.var("var_3112", dtype = "uint32", shape = (675,))#candidate|3112|(675,)|var|uint32
call_3110 = func_1270_call(relay.reshape(var_3111.astype('uint32'), [15, 5, 1]), relay.reshape(var_3112.astype('uint32'), [15, 5, 9]), )
call_3113 = func_1270_call(relay.reshape(var_3111.astype('uint32'), [15, 5, 1]), relay.reshape(var_3112.astype('uint32'), [15, 5, 9]), )
output = relay.Tuple([call_3093,call_3105,call_3110,var_3111,var_3112,])
output2 = relay.Tuple([call_3094,call_3106,call_3113,var_3111,var_3112,])
func_3114 = relay.Function([var_3111,var_3112,], output)
mod['func_3114'] = func_3114
mod = relay.transform.InferType()(mod)
mutated_mod['func_3114'] = func_3114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3114_call = mutated_mod.get_global_var('func_3114')
var_3116 = relay.var("var_3116", dtype = "uint32", shape = (75,))#candidate|3116|(75,)|var|uint32
var_3117 = relay.var("var_3117", dtype = "uint32", shape = (675,))#candidate|3117|(675,)|var|uint32
call_3115 = func_3114_call(var_3116,var_3117,)
output = call_3115
func_3118 = relay.Function([var_3116,var_3117,], output)
mutated_mod['func_3118'] = func_3118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1939_call = mod.get_global_var('func_1939')
func_1941_call = mutated_mod.get_global_var('func_1941')
call_3159 = relay.TupleGetItem(func_1939_call(), 0)
call_3160 = relay.TupleGetItem(func_1941_call(), 0)
output = call_3159
output2 = call_3160
func_3161 = relay.Function([], output)
mod['func_3161'] = func_3161
mod = relay.transform.InferType()(mod)
output = func_3161()
func_3162 = relay.Function([], output)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3190 = relay.TupleGetItem(func_2637_call(), 1)
call_3191 = relay.TupleGetItem(func_2638_call(), 1)
func_1124_call = mod.get_global_var('func_1124')
func_1126_call = mutated_mod.get_global_var('func_1126')
call_3205 = func_1124_call()
call_3206 = func_1124_call()
func_2847_call = mod.get_global_var('func_2847')
func_2849_call = mutated_mod.get_global_var('func_2849')
call_3210 = func_2847_call()
call_3211 = func_2847_call()
func_1408_call = mod.get_global_var('func_1408')
func_1412_call = mutated_mod.get_global_var('func_1412')
var_3214 = relay.var("var_3214", dtype = "float64", shape = (75,))#candidate|3214|(75,)|var|float64
call_3213 = relay.TupleGetItem(func_1408_call(relay.reshape(var_3214.astype('float64'), [75,]), relay.reshape(var_3214.astype('float64'), [75,]), ), 0)
call_3215 = relay.TupleGetItem(func_1412_call(relay.reshape(var_3214.astype('float64'), [75,]), relay.reshape(var_3214.astype('float64'), [75,]), ), 0)
var_3218 = relay.var("var_3218", dtype = "float64", shape = (75,))#candidate|3218|(75,)|var|float64
bop_3219 = relay.floor_mod(var_3214.astype('float32'), relay.reshape(var_3218.astype('float32'), relay.shape_of(var_3214))) # shape=(75,)
var_3235 = relay.var("var_3235", dtype = "float64", shape = (14, 5, 10))#candidate|3235|(14, 5, 10)|var|float64
bop_3236 = relay.not_equal(call_3210.astype('bool'), relay.reshape(var_3235.astype('bool'), relay.shape_of(call_3210))) # shape=(14, 5, 10)
bop_3239 = relay.not_equal(call_3211.astype('bool'), relay.reshape(var_3235.astype('bool'), relay.shape_of(call_3211))) # shape=(14, 5, 10)
uop_3240 = relay.atanh(call_3210.astype('float64')) # shape=(14, 5, 10)
uop_3242 = relay.atanh(call_3211.astype('float64')) # shape=(14, 5, 10)
bop_3258 = relay.bitwise_xor(uop_3240.astype('uint32'), relay.reshape(bop_3236.astype('uint32'), relay.shape_of(uop_3240))) # shape=(14, 5, 10)
bop_3261 = relay.bitwise_xor(uop_3242.astype('uint32'), relay.reshape(bop_3239.astype('uint32'), relay.shape_of(uop_3242))) # shape=(14, 5, 10)
output = relay.Tuple([call_3190,call_3205,call_3213,bop_3219,bop_3258,])
output2 = relay.Tuple([call_3191,call_3206,call_3215,bop_3219,bop_3261,])
func_3277 = relay.Function([var_3214,var_3218,var_3235,], output)
mod['func_3277'] = func_3277
mod = relay.transform.InferType()(mod)
var_3278 = relay.var("var_3278", dtype = "float64", shape = (75,))#candidate|3278|(75,)|var|float64
var_3279 = relay.var("var_3279", dtype = "float64", shape = (75,))#candidate|3279|(75,)|var|float64
var_3280 = relay.var("var_3280", dtype = "float64", shape = (14, 5, 10))#candidate|3280|(14, 5, 10)|var|float64
output = func_3277(var_3278,var_3279,var_3280,)
func_3281 = relay.Function([var_3278,var_3279,var_3280,], output)
mutated_mod['func_3281'] = func_3281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_3309 = relay.TupleGetItem(func_124_call(), 1)
call_3310 = relay.TupleGetItem(func_125_call(), 1)
var_3314 = relay.var("var_3314", dtype = "int32", shape = (6, 13, 12))#candidate|3314|(6, 13, 12)|var|int32
bop_3315 = relay.logical_xor(call_3309.astype('uint16'), relay.reshape(var_3314.astype('uint16'), relay.shape_of(call_3309))) # shape=(6, 13, 12)
bop_3318 = relay.logical_xor(call_3310.astype('uint16'), relay.reshape(var_3314.astype('uint16'), relay.shape_of(call_3310))) # shape=(6, 13, 12)
output = relay.Tuple([bop_3315,])
output2 = relay.Tuple([bop_3318,])
func_3320 = relay.Function([var_3314,], output)
mod['func_3320'] = func_3320
mod = relay.transform.InferType()(mod)
var_3321 = relay.var("var_3321", dtype = "int32", shape = (6, 13, 12))#candidate|3321|(6, 13, 12)|var|int32
output = func_3320(var_3321)
func_3322 = relay.Function([var_3321], output)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3344 = relay.var("var_3344", dtype = "uint64", shape = ())#candidate|3344|()|var|uint64
var_3345 = relay.var("var_3345", dtype = "uint64", shape = (8, 13, 13))#candidate|3345|(8, 13, 13)|var|uint64
bop_3346 = relay.less(var_3344.astype('bool'), var_3345.astype('bool')) # shape=(8, 13, 13)
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
var_3362 = relay.var("var_3362", dtype = "float64", shape = (936,))#candidate|3362|(936,)|var|float64
call_3361 = func_64_call(relay.reshape(var_3362.astype('float64'), [6, 13, 12]), relay.reshape(var_3362.astype('float64'), [6, 13, 12]), )
call_3363 = func_64_call(relay.reshape(var_3362.astype('float64'), [6, 13, 12]), relay.reshape(var_3362.astype('float64'), [6, 13, 12]), )
func_3161_call = mod.get_global_var('func_3161')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_3372 = func_3161_call()
call_3373 = func_3161_call()
func_1124_call = mod.get_global_var('func_1124')
func_1126_call = mutated_mod.get_global_var('func_1126')
call_3374 = func_1124_call()
call_3375 = func_1124_call()
var_3385 = relay.var("var_3385", dtype = "bool", shape = (8, 13, 13))#candidate|3385|(8, 13, 13)|var|bool
bop_3386 = relay.right_shift(bop_3346.astype('uint32'), relay.reshape(var_3385.astype('uint32'), relay.shape_of(bop_3346))) # shape=(8, 13, 13)
output = relay.Tuple([call_3361,var_3362,call_3372,call_3374,bop_3386,])
output2 = relay.Tuple([call_3363,var_3362,call_3373,call_3375,bop_3386,])
func_3390 = relay.Function([var_3344,var_3345,var_3362,var_3385,], output)
mod['func_3390'] = func_3390
mod = relay.transform.InferType()(mod)
var_3391 = relay.var("var_3391", dtype = "uint64", shape = ())#candidate|3391|()|var|uint64
var_3392 = relay.var("var_3392", dtype = "uint64", shape = (8, 13, 13))#candidate|3392|(8, 13, 13)|var|uint64
var_3393 = relay.var("var_3393", dtype = "float64", shape = (936,))#candidate|3393|(936,)|var|float64
var_3394 = relay.var("var_3394", dtype = "bool", shape = (8, 13, 13))#candidate|3394|(8, 13, 13)|var|bool
output = func_3390(var_3391,var_3392,var_3393,var_3394,)
func_3395 = relay.Function([var_3391,var_3392,var_3393,var_3394,], output)
mutated_mod['func_3395'] = func_3395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_382_call = mod.get_global_var('func_382')
func_383_call = mutated_mod.get_global_var('func_383')
call_3405 = relay.TupleGetItem(func_382_call(), 1)
call_3406 = relay.TupleGetItem(func_383_call(), 1)
func_1782_call = mod.get_global_var('func_1782')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_3424 = relay.TupleGetItem(func_1782_call(), 0)
call_3425 = relay.TupleGetItem(func_1784_call(), 0)
func_2476_call = mod.get_global_var('func_2476')
func_2478_call = mutated_mod.get_global_var('func_2478')
var_3438 = relay.var("var_3438", dtype = "int8", shape = (624,))#candidate|3438|(624,)|var|int8
call_3437 = func_2476_call(relay.reshape(var_3438.astype('int8'), [13, 16, 3]))
call_3439 = func_2476_call(relay.reshape(var_3438.astype('int8'), [13, 16, 3]))
bop_3445 = relay.greater_equal(var_3438.astype('bool'), call_3424.astype('bool')) # shape=(936, 624)
bop_3448 = relay.greater_equal(var_3438.astype('bool'), call_3425.astype('bool')) # shape=(936, 624)
var_3454 = relay.var("var_3454", dtype = "float64", shape = (936, 15))#candidate|3454|(936, 15)|var|float64
bop_3455 = relay.bitwise_xor(call_3424.astype('uint16'), var_3454.astype('uint16')) # shape=(936, 15)
bop_3458 = relay.bitwise_xor(call_3425.astype('uint16'), var_3454.astype('uint16')) # shape=(936, 15)
func_2476_call = mod.get_global_var('func_2476')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_3461 = func_2476_call(relay.reshape(call_3437.astype('int8'), [13, 16, 3]))
call_3462 = func_2476_call(relay.reshape(call_3437.astype('int8'), [13, 16, 3]))
output = relay.Tuple([call_3405,call_3437,bop_3445,bop_3455,call_3461,])
output2 = relay.Tuple([call_3406,call_3439,bop_3448,bop_3458,call_3462,])
func_3465 = relay.Function([var_3438,var_3454,], output)
mod['func_3465'] = func_3465
mod = relay.transform.InferType()(mod)
var_3466 = relay.var("var_3466", dtype = "int8", shape = (624,))#candidate|3466|(624,)|var|int8
var_3467 = relay.var("var_3467", dtype = "float64", shape = (936, 15))#candidate|3467|(936, 15)|var|float64
output = func_3465(var_3466,var_3467,)
func_3468 = relay.Function([var_3466,var_3467,], output)
mutated_mod['func_3468'] = func_3468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3532 = relay.TupleGetItem(func_2637_call(), 2)
call_3533 = relay.TupleGetItem(func_2638_call(), 2)
func_1668_call = mod.get_global_var('func_1668')
func_1669_call = mutated_mod.get_global_var('func_1669')
call_3561 = relay.TupleGetItem(func_1668_call(), 0)
call_3562 = relay.TupleGetItem(func_1669_call(), 0)
output = relay.Tuple([call_3532,call_3561,])
output2 = relay.Tuple([call_3533,call_3562,])
func_3581 = relay.Function([], output)
mod['func_3581'] = func_3581
mod = relay.transform.InferType()(mod)
output = func_3581()
func_3582 = relay.Function([], output)
mutated_mod['func_3582'] = func_3582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2829_call = mod.get_global_var('func_2829')
func_2830_call = mutated_mod.get_global_var('func_2830')
call_3590 = func_2829_call()
call_3591 = func_2829_call()
func_242_call = mod.get_global_var('func_242')
func_244_call = mutated_mod.get_global_var('func_244')
call_3606 = relay.TupleGetItem(func_242_call(), 0)
call_3607 = relay.TupleGetItem(func_244_call(), 0)
output = relay.Tuple([call_3590,call_3606,])
output2 = relay.Tuple([call_3591,call_3607,])
func_3618 = relay.Function([], output)
mod['func_3618'] = func_3618
mod = relay.transform.InferType()(mod)
mutated_mod['func_3618'] = func_3618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3618_call = mutated_mod.get_global_var('func_3618')
call_3619 = func_3618_call()
output = call_3619
func_3620 = relay.Function([], output)
mutated_mod['func_3620'] = func_3620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3632 = relay.TupleGetItem(func_2637_call(), 1)
call_3633 = relay.TupleGetItem(func_2638_call(), 1)
output = relay.Tuple([call_3632,])
output2 = relay.Tuple([call_3633,])
func_3636 = relay.Function([], output)
mod['func_3636'] = func_3636
mod = relay.transform.InferType()(mod)
output = func_3636()
func_3637 = relay.Function([], output)
mutated_mod['func_3637'] = func_3637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3581_call = mod.get_global_var('func_3581')
func_3582_call = mutated_mod.get_global_var('func_3582')
call_3705 = relay.TupleGetItem(func_3581_call(), 0)
call_3706 = relay.TupleGetItem(func_3582_call(), 0)
output = call_3705
output2 = call_3706
func_3714 = relay.Function([], output)
mod['func_3714'] = func_3714
mod = relay.transform.InferType()(mod)
output = func_3714()
func_3715 = relay.Function([], output)
mutated_mod['func_3715'] = func_3715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_3733 = relay.TupleGetItem(func_298_call(), 0)
call_3734 = relay.TupleGetItem(func_299_call(), 0)
func_327_call = mod.get_global_var('func_327')
func_331_call = mutated_mod.get_global_var('func_331')
var_3746 = relay.var("var_3746", dtype = "int64", shape = (120,))#candidate|3746|(120,)|var|int64
const_3747 = relay.const([3,5,-7,7,-6,3,7,-2,-4,-2,8,-10,8,6,-5,-9,-5,2,3,-3,8,-10,2,10,8,-10,-1,9,-8,1,-2,-2,7,8,-5,8,7,-8,9,-4,10,-5,-4,-2,3,-8,8,-1,-3,-4,10,-4,1,5,-10,8,4,-2,-2,-3,-10,8,-8,-2,10,1,-1,8,-7,-1,-1,-6,4,3,2,9,-6,1,-7,-7,10,-6,3,2,-6,-8,2,4,-1,10,-3,-5,-7,5,1,1,-9,4,-1,-5,-9,-4,6,5,-4,-1,5,8,-4,5,6,-7,-3,9,7,-10,7,-5,3,10,-8,-6,7,-2,8,6,-3,9,4,-9,3,7,-5,-3,-6,-6,2,-5,8,1,7,2,-10,6,-10,-5,6,3,6,-10,8,5,9,-10,1,5,-7,-8,7,-3,10,-9,1,8,7,10,-5,5,8,9,5,7,-10,-10,-10,-3,10,1,-4,-1,-8,-6,5,-4,-5,2,6,3,-6,-4,-8,9,9,-1,8,5,10,-8,3,10,5,-9,1,9,-6,4,-10,-2,-4,5,3,-7,-1,10,6,-1,1,-2,-3,10,5,-3,-8,5,8,-3,10,-3,-6,5,2,3,-8,-8,7,2,3,-9,10,2,-6,8,6,6,-4,-3,1,-4,10,-1,9,3,9,-4,5,-7,-10,6,-6,-5,7,1,-4,4,4,-3,9,6,7,4,-5,-3,-6,8,-5,-4,-2,8,-7,-10,-10,-5,-8,-6,2,-8,-3,-9,-2,-2,-3,9,1,-9,-2,3,-3,-10,1,5,5,8,6,8,-8,7,7,5,3,-10,5,6,2,-9,1,-6,-9,6,-4,5,5,3,8,-3,6,-6,5,-8,-8,-9,3,7,2,9,-8,-9,-4,8,-4,3,-2,-10,-2,5,-9,1,2,6,-3,-1,9,5,-2,-7,2,6,-10,-3,9,4,-4,10,5,1,10,1,10,3,9,-10,-10,6,-7,4,-9,-3,-5,1,6,-2,-4,6,-8,-7,10,9,8,-10,6,-10,-4,2,-6,3,-6,10,5,3,-6,-10,2,6,7,-4,2,2,8,7,-8,6,5,-2,-2,4,7,-4,-5,8,8,7,-7,6,-4,7,-5,-3,-9,-1,-2,-10,-10,8,7,-1,10,-5,-8,10,5,-3,-2,-1,3,-1,6,6,8,-3,-1,-7,2,-6,4,2,5,10,-2,-8,2,2,5,-3,-3,7,1,-5,-8,5,8,9,-5,-3,-1,-5,-2,-8,4,-9,10,-3,2,3,-6,9,-8,-9,1,-3,3,-3,5,-2,-5,-8,-7,-5,6,8,-8,7,-7,-2,-8,-1,1,6,9,4,8,-8,-2,5,-1,-1,-2,-7,-5,-9,4,-2,6,-10,5,-9,-8,10,-10,-8,-10,1,7,10,9,-3,-9,-7,-2,-10,-4,9,-5,-2,6,7,-10,7,-8,-7,8,9,6,4,4,-6,2,10,6,2,3,9,8,1,3,-1,10,8,-8,6,6,-10,-9,8,4,9,-1,-3,2,-5,1,-8,7,-7,-8,-7,-6,5,-7,3,4,1,8,-6,-5,7,-8,7,1,-10,-10,5,4,-3,4,-2,-6,6,6,-6,3,-7,10,-6,-9,-2,-5,-6,9,-2,3,-3,-9,-3,-1,6,-2,-4,-8,-5,-9,7,-6,-5,-10,7,-2,-2,-9,6,4,1,6,2,6,-2,-4,10,-1,4,3,7,-4,-8,6,1,5,-9,9,-6,9,-1,6,5,-8,1,4,9,-10,1,1,9,-5,-9,-10,-1,-3,-5,6,8,-1,-9,8,-5,5,6,9,5,4,10,1,6,-4,2,-1,5,-9,8,-2,-8,8,-4,9,-1,-3,10,2,9,5,5,-2,-9,-5,-2,2,6,6,-9,9,-2,2,-8,6,-10,1,-8,-8,-5,7,-1,-9,-1,7,2,1,-2,-3,-5,10,-1,-1,-3,7,-3,7,-5,3,3,-7,7,8,1,2,4,1,2,-6,4,-4,8,-3,10,-1,5,10,6,-3,-3,2,6,3,-9,4,-2,10,-2,5,6,-4,3,-5,4,-3,3,-4,-1,9,-6,3,3,-10,-6,-6,-10,-5,6,10,-8,-9,-10,-9,2,1,3,7,-9,1,-1,-10,-7,2,7,-7,6,-5,1,-7,4,-4,-4,-4,-8,-8,2,-10,5,6,5,-6,-9,7,-2,2,2,4,-7,-9,-3,-5,-7,8,6,-3,-5,-2,-9,-4,-3,9,-4,-3,1,-7,-1,3,-5,1,3,4,4,-4,-7,3,5,-7,-5,10,-4,-2,7,-4,-4,-8,10,9,-10,-6,9,8,3,1,-6,6,7,-5,-3,9,-6,8,-8,2,8,-6,-9,-1,2,2,4,-9,6,-5,5,-8,-8,-6,3,-4,-6,-8,-7,-7,2,6,-7,-4,9,2,3,2,8,10,6,4,6,-6,2,9,-3,7,10,-5,-5,4,8,-1,-3,-2,7,-10,-10,6,-10,-6,-2,4,-8,-4,5,3,1,4,7,5,-1,-6,9,-5,-9,-1,7,4,4,10,-3,5,-7,1,4,-7,-1,10,-5,9,7,4,5,1,5,9,4,-5,4,4,-2,-4,4,-2,-8,-2,1,9,5,5,1,1,9,-6,-1,-10,-3,-3,6,-5,-6,-9,4,-1,10,-10,-2,-6,-6,6,5,8,10,-5,9,-3,1,-2,-10,6,10,10,-7,-7,-3,8,-8,-5,10,-7,4,-5,-1,-7,-1,2,-9,5,3,8,-4,-3,5,-5,10,5,3,6,-7,5,-8,-9,-1,4,8,-7,10,-9,8,1,5,3,-6,-1,3,-10,5,7,-6,10,-3,-6,-7,-8,-8,-6,-5,-10,5,3,-9,9,4,10,9,4,6,-4,5,-1,-1,6,3,6,-9,-8,-5,2,4,-1,-3,6,-7,6,2,-6,4,10,8,-7,-6,7,3,3,3,-2,-1,8,9,-1,-1,6,9,-3,4,5,-5,3,2,-7,2,-3,-6,-2,-9,5,-9,5,9,-6,10,-4,4,4,7,-4,9,-3,-2,-1,7,-1,9,6,-6,2,4,10,5,-7,-5,1,-8,-2,-7,-1,9,3,-6,5,-9,-9,-2,2,-2,10,-10,3,3,-8,8,-7,9,-4,-8,10,-7,2,-7,9,-3,-9,9,-1,-7,5,8,2,-1,-6,-7,-8,-5,-8,-5,2,-5,9,2,8,-10,-7,-6,-8,5,-8,2,9,-6,-8,3,9,10,5,9,-1,8,-7,-7,1,-1,-6,-5,-10,3,10,-7,-5,-6,-9,4,3,-10,-4,7,10,-4,-1,-3,-10,9,2,10,5,10,2,-5,-5,7,-3,7,-10,-10,-2,4,-9,3,-2,-1,-10,10,4,-8,2,10,-8,7,-10,3,-1,-5,1,-2,-2,8,3,-5,-5,5,6,1,4,4,-8,-7,3,9,-1,-6,3,4,-4,-4,2,6,-7,-6,6,5,6,-3,6,-4,3,10,4,4,5,-6,-9,6,9,9,1,-1,7,-9,-6,-10,3,-6,3,4,10,-4,-2,7,4,1,9,6,8,9,-8,-2,8,-7,-10,9,-3,-10,-7,8,-2,-7,-1,-7,8,-2,4,7,-3,-2,-9,2,-6,-7,-9,2,-4,-10,-4,3,-2,10,8,-7,6,-4,10,7,8,9,-10,7,-2,10,-6,1,9,-6,-3,-10,4,-3,9,10,-3,5,10,7,2,1,2,8,5,8,10,-4,1,-9,-7,-8,-10,4,-6,5,8,-6,7,-2,9,-10,-8,-3,4,-9,-5,-1,-9,-6,-6,1,-6,-4,10,-5,4,7,-10,10,6,-4,6,3,-10,10,-9,-10,7,-10,-10,5,-10,7,-5,-5,8,-2,-7,-10,4,-3,-9,10,8,3,4,-3,2,-8,9,-10,3,1,-6,6,-1,5,-3,5,6,9,-6,6,-2,-5,-8,-8,-4,2,10,-2,-7,10,-3,-1,-5,-8,-3,-8,-7,-6,9,-7,-2,5,-6,-2,3,5,7,2,8,-2,4,-4,5,7,3,-9,2,-7,-10,-5,1,8,8,7,-9,5,-10,-6,8,-1,7,7,3,-10,-5,5,-5,-1,2,-6,-8,6,-9,-5,4,-1,-3,2,4,-8,-9,2,-5,-6], dtype = "int64")#candidate|3747|(1560,)|const|int64
call_3745 = relay.TupleGetItem(func_327_call(relay.reshape(var_3746.astype('int64'), [15, 8, 1]), relay.reshape(const_3747.astype('int64'), [15, 8, 13]), ), 1)
call_3748 = relay.TupleGetItem(func_331_call(relay.reshape(var_3746.astype('int64'), [15, 8, 1]), relay.reshape(const_3747.astype('int64'), [15, 8, 13]), ), 1)
output = relay.Tuple([call_3733,call_3745,var_3746,const_3747,])
output2 = relay.Tuple([call_3734,call_3748,var_3746,const_3747,])
func_3757 = relay.Function([var_3746,], output)
mod['func_3757'] = func_3757
mod = relay.transform.InferType()(mod)
var_3758 = relay.var("var_3758", dtype = "int64", shape = (120,))#candidate|3758|(120,)|var|int64
output = func_3757(var_3758)
func_3759 = relay.Function([var_3758], output)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2245_call = mod.get_global_var('func_2245')
func_2246_call = mutated_mod.get_global_var('func_2246')
call_3782 = relay.TupleGetItem(func_2245_call(), 1)
call_3783 = relay.TupleGetItem(func_2246_call(), 1)
var_3788 = relay.var("var_3788", dtype = "float64", shape = (936, 3))#candidate|3788|(936, 3)|var|float64
bop_3789 = relay.bitwise_or(call_3782.astype('int32'), var_3788.astype('int32')) # shape=(936, 3)
bop_3792 = relay.bitwise_or(call_3783.astype('int32'), var_3788.astype('int32')) # shape=(936, 3)
bop_3794 = relay.maximum(bop_3789.astype('uint64'), relay.reshape(var_3788.astype('uint64'), relay.shape_of(bop_3789))) # shape=(936, 3)
bop_3797 = relay.maximum(bop_3792.astype('uint64'), relay.reshape(var_3788.astype('uint64'), relay.shape_of(bop_3792))) # shape=(936, 3)
bop_3802 = relay.not_equal(bop_3794.astype('bool'), relay.reshape(bop_3789.astype('bool'), relay.shape_of(bop_3794))) # shape=(936, 3)
bop_3805 = relay.not_equal(bop_3797.astype('bool'), relay.reshape(bop_3792.astype('bool'), relay.shape_of(bop_3797))) # shape=(936, 3)
output = relay.Tuple([bop_3802,])
output2 = relay.Tuple([bop_3805,])
func_3812 = relay.Function([var_3788,], output)
mod['func_3812'] = func_3812
mod = relay.transform.InferType()(mod)
mutated_mod['func_3812'] = func_3812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3813 = relay.var("var_3813", dtype = "float64", shape = (936, 3))#candidate|3813|(936, 3)|var|float64
func_3812_call = mutated_mod.get_global_var('func_3812')
call_3814 = func_3812_call(var_3813)
output = call_3814
func_3815 = relay.Function([var_3813], output)
mutated_mod['func_3815'] = func_3815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3817 = relay.var("var_3817", dtype = "float32", shape = (9, 11, 1))#candidate|3817|(9, 11, 1)|var|float32
var_3818 = relay.var("var_3818", dtype = "float32", shape = (9, 11, 1))#candidate|3818|(9, 11, 1)|var|float32
bop_3819 = relay.power(var_3817.astype('float32'), relay.reshape(var_3818.astype('float32'), relay.shape_of(var_3817))) # shape=(9, 11, 1)
output = relay.Tuple([bop_3819,])
output2 = relay.Tuple([bop_3819,])
func_3829 = relay.Function([var_3817,var_3818,], output)
mod['func_3829'] = func_3829
mod = relay.transform.InferType()(mod)
mutated_mod['func_3829'] = func_3829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3829_call = mutated_mod.get_global_var('func_3829')
var_3831 = relay.var("var_3831", dtype = "float32", shape = (9, 11, 1))#candidate|3831|(9, 11, 1)|var|float32
var_3832 = relay.var("var_3832", dtype = "float32", shape = (9, 11, 1))#candidate|3832|(9, 11, 1)|var|float32
call_3830 = func_3829_call(var_3831,var_3832,)
output = call_3830
func_3833 = relay.Function([var_3831,var_3832,], output)
mutated_mod['func_3833'] = func_3833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3618_call = mod.get_global_var('func_3618')
func_3620_call = mutated_mod.get_global_var('func_3620')
call_3843 = relay.TupleGetItem(func_3618_call(), 0)
call_3844 = relay.TupleGetItem(func_3620_call(), 0)
func_205_call = mod.get_global_var('func_205')
func_207_call = mutated_mod.get_global_var('func_207')
call_3851 = func_205_call()
call_3852 = func_205_call()
output = relay.Tuple([call_3843,call_3851,])
output2 = relay.Tuple([call_3844,call_3852,])
func_3866 = relay.Function([], output)
mod['func_3866'] = func_3866
mod = relay.transform.InferType()(mod)
output = func_3866()
func_3867 = relay.Function([], output)
mutated_mod['func_3867'] = func_3867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1782_call = mod.get_global_var('func_1782')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_3924 = relay.TupleGetItem(func_1782_call(), 0)
call_3925 = relay.TupleGetItem(func_1784_call(), 0)
var_3926 = relay.var("var_3926", dtype = "float64", shape = (936, 16))#candidate|3926|(936, 16)|var|float64
bop_3927 = relay.bitwise_or(call_3924.astype('uint64'), var_3926.astype('uint64')) # shape=(936, 16)
bop_3930 = relay.bitwise_or(call_3925.astype('uint64'), var_3926.astype('uint64')) # shape=(936, 16)
func_1270_call = mod.get_global_var('func_1270')
func_1274_call = mutated_mod.get_global_var('func_1274')
var_3941 = relay.var("var_3941", dtype = "uint32", shape = (75,))#candidate|3941|(75,)|var|uint32
var_3942 = relay.var("var_3942", dtype = "uint32", shape = (675,))#candidate|3942|(675,)|var|uint32
call_3940 = func_1270_call(relay.reshape(var_3941.astype('uint32'), [15, 5, 1]), relay.reshape(var_3942.astype('uint32'), [15, 5, 9]), )
call_3943 = func_1270_call(relay.reshape(var_3941.astype('uint32'), [15, 5, 1]), relay.reshape(var_3942.astype('uint32'), [15, 5, 9]), )
func_3829_call = mod.get_global_var('func_3829')
func_3833_call = mutated_mod.get_global_var('func_3833')
const_3946 = relay.const([[-3.395522,-9.089269,-4.702749,-9.095433,-7.993810,2.716722,2.312784,1.995914,-6.567884,5.473094,-7.901313,4.523555,-5.224096,7.465288,4.629472,-4.789293,-9.212575,9.349165,6.930639,-0.666644,-9.714271,-6.781491,-4.069965,3.556944,5.936115,-2.620716,5.664665,2.847267,-8.179671,-1.829552,0.216550,-4.114423,1.363650,4.075208,3.430509,-9.754544,1.080518,-3.070772,-5.867417,-2.058950,-2.917088,-2.694753,-4.190460,-6.380130,-6.835424,-5.420647,9.861235,-8.237824,-6.649478,8.595520,0.507350,4.498033,9.979730,-6.306001,-0.894889,8.857387,-6.817732,-2.722453,2.139536,9.751280,3.376625,-0.733006,-2.050188,-6.860722,-3.757669,9.772771,8.073172,-2.142266,-5.809653,4.707892,6.571306,2.918675,-5.557497,-1.624766,-4.782219,2.197827,-1.989313,-9.134550,-4.109415,7.325474,3.435368,9.908384,-0.496574,9.534017,-3.270783,3.953181,6.719808,3.950857,-9.983797,-5.599438,-1.338261,-0.155267,0.966654,9.765730,1.341106,-6.701824,7.113844,-0.614465,8.709992]], dtype = "float32")#candidate|3946|(1, 99)|const|float32
call_3945 = relay.TupleGetItem(func_3829_call(relay.reshape(const_3946.astype('float32'), [9, 11, 1]), relay.reshape(const_3946.astype('float32'), [9, 11, 1]), ), 0)
call_3947 = relay.TupleGetItem(func_3833_call(relay.reshape(const_3946.astype('float32'), [9, 11, 1]), relay.reshape(const_3946.astype('float32'), [9, 11, 1]), ), 0)
output = relay.Tuple([bop_3927,call_3940,var_3941,var_3942,call_3945,const_3946,])
output2 = relay.Tuple([bop_3930,call_3943,var_3941,var_3942,call_3947,const_3946,])
func_3954 = relay.Function([var_3926,var_3941,var_3942,], output)
mod['func_3954'] = func_3954
mod = relay.transform.InferType()(mod)
var_3955 = relay.var("var_3955", dtype = "float64", shape = (936, 16))#candidate|3955|(936, 16)|var|float64
var_3956 = relay.var("var_3956", dtype = "uint32", shape = (75,))#candidate|3956|(75,)|var|uint32
var_3957 = relay.var("var_3957", dtype = "uint32", shape = (675,))#candidate|3957|(675,)|var|uint32
output = func_3954(var_3955,var_3956,var_3957,)
func_3958 = relay.Function([var_3955,var_3956,var_3957,], output)
mutated_mod['func_3958'] = func_3958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2103_call = mod.get_global_var('func_2103')
func_2104_call = mutated_mod.get_global_var('func_2104')
call_3963 = relay.TupleGetItem(func_2103_call(), 0)
call_3964 = relay.TupleGetItem(func_2104_call(), 0)
output = relay.Tuple([call_3963,])
output2 = relay.Tuple([call_3964,])
func_3967 = relay.Function([], output)
mod['func_3967'] = func_3967
mod = relay.transform.InferType()(mod)
output = func_3967()
func_3968 = relay.Function([], output)
mutated_mod['func_3968'] = func_3968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3714_call = mod.get_global_var('func_3714')
func_3715_call = mutated_mod.get_global_var('func_3715')
call_4019 = func_3714_call()
call_4020 = func_3714_call()
output = call_4019
output2 = call_4020
func_4076 = relay.Function([], output)
mod['func_4076'] = func_4076
mod = relay.transform.InferType()(mod)
output = func_4076()
func_4077 = relay.Function([], output)
mutated_mod['func_4077'] = func_4077
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4095 = relay.const([[[0.195901,5.281419,-1.403086,-9.993060,5.379431,4.224673,6.290455]],[[1.633978,9.934279,-9.323588,0.022176,-2.268486,3.460234,0.457650]],[[-5.295797,7.172027,-6.875144,8.582895,7.154691,1.954894,3.652296]],[[0.383026,1.854733,6.690201,2.203332,-4.733486,-6.947420,-4.062590]],[[-3.810789,-5.557770,-1.316414,-6.207590,-1.719989,-6.019048,3.030182]],[[9.487536,-6.159664,1.873464,3.925713,-5.652207,7.826275,6.001603]],[[2.525156,0.184775,-3.452850,-3.219434,0.275042,5.555519,3.110688]],[[-2.681557,4.124658,2.859255,-7.403103,-0.908417,9.893903,-5.975652]],[[2.648286,-7.279080,7.577989,-3.311619,6.955748,-5.691386,8.339807]],[[-8.109077,0.978485,-4.815392,-2.603426,-5.233810,-3.465338,-2.716980]]], dtype = "float64")#candidate|4095|(10, 1, 7)|const|float64
uop_4096 = relay.acos(const_4095.astype('float64')) # shape=(10, 1, 7)
func_2199_call = mod.get_global_var('func_2199')
func_2202_call = mutated_mod.get_global_var('func_2202')
var_4099 = relay.var("var_4099", dtype = "int64", shape = (60, 2))#candidate|4099|(60, 2)|var|int64
const_4100 = relay.const([-7,10,3,-5,-3,-4,4,7,-10,3,-3,10,-6,4,-2,-2,-3,8,-10,2,1,-6,-8,1,3,-3,-6,-10,2,6,-7,5,-3,-6,8,-4,-6,6,-3,-1,2,5,-7,-8,-10,-4,-5,7,-4,10,-10,2,5,1,6,8,-8,-6,9,5,-2,-4,-2,4,-3,7,-9,1,-9,-3,4,5,-4,6,-8,-1,-4,7,8,-1,6,-6,8,-10,-8,4,-4,-2,3,-2,-1,-3,-1,-10,-4,2,8,4,5,-5,-8,-5,-9,3,-6,-4,9,3,-10,1,-3,-5,-2,7,4,10,-10,-2,-3,4,9,6,5,-2,-4,10,-7,-8,-3,-8,-8,7,-5,-8,6,-8,10,-7,-5,2,1,5,-7,8,-10,9,7,6,6,2,6,9,4,-2,4,-8,-8,-4,6,6,-10,-3,-10,-3,-1,-10,-5,-2,8,9,10,8,10,4,4,1,-7,-3,3,5,10,-2,8,-5,-10,8,-10,7,-6,6,-10,-6,-3,-6,-6,10,-8,-3,6,1,-10,5,3,10,2,-3,-2,1,-9,-2,8,3,6,-10,-1,10,10,-1,-9,4,6,-6,-6,6,6,2,-3,7,10,2,10,5,7,-5,-7,-10,6,-3,-4,10,8,3,-9,-9,-2,10,-2,2,-1,8,5,2,5,-6,4,-1,9,2,-6,7,-3,-10,4,-6,8,-2,3,4,7,9,7,-4,3,6,-8,-7,-2,7,6,10,9,-7,-5,-2,-3,4,8,8,-5,-1,9,-3,3,-6,3,-5,7,-7,-4,-5,-10,9,-8,-9,3,-3,6,-5,7,-9,9,-5,5,7,2,8,-2,10,-8,-10,-9,-5,-10,-5,4,-7,8,-7,5,2,-9,-9,-9,-8,8,-8,-2,5,3,-1,3,-10,-2,-4,5,4,6,5,-2,2,3,-10,-3,9,2,5,-9,-8,3,10,6,2,-7,9,1,3,3,9,6,-4,-9,6,3,9,-6,6,2,5,-6,-1,8,-1,7,7,-1,4,9,7,5,-9,-4,-4,4,6,-6,9,4,6,-3,5,-3,1,10,-3,-4,6,9,4,1,-7,10,-2,-7,4,-3,-3,7,-10,4,1,-8,-5,9,2,1,7,-5,-4,9,-4,8,-1,-3,-3,6,4,5,3,-1,1,6,3,-9,8,8,4,-9,-2,-8,1,1,10,-7,9,9,1,-10,-9,-5,10,-8,7,1,-2,-6,-5,-10,-2,-9,6,3,-5,6,-3,-2,-2,7,-10,1,-7,6,-6,8,-3,1,5,1,-6,-6,7,1,-8,1,5,1,10,6,4,-6,-9,10,-10,5,-9,-6,-9,-4,-3,7,6,2,7,-2,9,2,6,3,-5,3,-9,8,5,-7,8,6,1,-2,5,-9,-3,-4,5,6,-8,-1,9,5,5,2,-5,9,-8,4,8,-10,6,-9,-3,-10,5,8,-3,8,4,-3,-8,-4,-7,10,4,6,5,-3,-2,7,-4,-3,-7,-7,3,-9,6,7,-2,9,-8,7,4,-2,-1,-6,-4,-4,-2,-4,-4,-5,-6,6,-3,5,-1,7,-2,-2,7,-10,8,4,6,4,10,-2,4,-4,2,10,-2,9,-5,-9,-10,5,-2,10,6,-9,5,-3,-9,6,8,5,3,6,-6,10,3,-5,-4,-4,-9,9,6,3,-10,-7,8,-8,5,-1,-8,-8,-6,-5,-8,-5,6,10,-5,-7,5,5,5,4,-9,10,6,8,1,-6,-4,5,-2,-2,-2,-4,-5,2,-4,10,3,-1,-10,-3,-2,-9,10,8,10,1,-1,1,-5,3,-1,-3,5,-3,2,-5,7,-1,-9,-8,-1,3,3,-7,6,8,-5,2,-4,4,-5,10,-4,-8,2,-1,7,6,-7,10,6,-3,-10,2,3,2,6,1,-5,-2,7,9,-7,-3,9,-2,-3,8,1,9,-8,4,-3,6,4,-4,-1,-4,-9,7,-10,4,3,9,2,9,-9,3,-8,9,-7,2,7,8,-2,-7,-3,6,-3,-1,-2,-2,-5,-4,-4,-4,7,8,-3,3,3,-8,9,4,10,6,8,-5,-2,6,4,-4,-8,-9,1,6,10,-2,-9,-2,2,3,5,-2,8,5,-8,5,3,8,-5,-8,2,7,-6,2,-8,-9,2,-2,-7,-2,-7,-2,-2,4,9,-6,4,2,-4,-10,-7,5,-10,2,5,-2,-3,-5,-7,4,-3,-6,-4,10,1,8,9,-9,-2,6,-7,2,-5,4,-7,9,-9,-8,-1,10,-8,-2,-6,8,4,-7,-4,-10,7,-4,-4,-4,-8,-7,3,-3,-10,2,7,-3,-5,3,-1,-10,-7,-5,-9,-6,-3,8,-4,7,-9,7,-8,-9,3,2,-5,4,-9,4,8,-7,-7,-7,7,5,2,3,4,-2,-4,-1,-9,2,4,7,8,-4,-8,-5,6,2,2,9,7,-1,8,-9,-8,6,-7,-5,9,-9,4,-4,4,8,3,-1,1,-3,-5,7,-5,5,-7,8,-4,3,-5,-8,-4,4,-4,-10,-9,3,7,-7,-4,-8,-7,-7,5,8,-6,8,3,-9,-1,3,2,-5,-5,-5,7,9,10,-6,5,-5,-2,-3,9,3,9,-9,9,3,-6,-2,2,8,7,-6,-10,3,8,-7,6,-4,-6,-9,6,-1,-10,5,6,3,9,-6,-2,1,3,-6,9,-5,2,-2,-5,1,7,7,-1,-9,-2,9,3,4,7,-6,-10,1,-4,2,-5,-5,3,8,-4,4,1,2,1,-10,5,-5,7,-1,-9,10,-10,-6,1,-6,-2,-1,-4,-7,-8,-3,2,-2,-6,-10,7,-6,-7,7,10,-2,-4,5,7,-2,10,-10,5,-1,-4,-5,3,8,-8,7,-8,10,4,-9,1,6,9,4,-9,-7,8,-3,-5,-2,-6,9,-9,-6,-8,4,6,-9,-5,1,9,-6,-1,-9,-2,7,9,-3,-9,-1,-6,4,-2,-9,7,-2,9,5,-1,-4,5,-2,-1,3,4,5,-9,-1,4,-10,9,7,-2,-8,7,5,-5,-8,-1,-6,-5,4,2,6,5,-4,10,4,4,-4,-4,-4,-7,7,3,3,-6,3,10,3,7,-10,1,-8,6,9,-2,-10,5,-7,3,-8,4,-7,1,2,1,5,-5,-10,-5,-10,-2,-8,-10,-5,2,9,7,2,8,-5,5,-3,-3,3,10,8,6,8,8,6,-9,10,3,-3,8,-1,10,-5,-5,-4,2,8,6,1,-1,8,3,5,1,-8,8,2,-3,4,5,-4,7,-4,-8,-1,-3,-9,6,-10,-4,4,8,-1,-2,9,-2,-4,-5,-4,-3,-1,3,-3,-6,5,-3,-3,8,-4,-10,8,7,2,2,4,2,-4,-7,-5,-9,-4,-3,5,-2,10,1,-5,3,10,-3,1,-4,-10,1,6,8,-4,9,-10,8,5,1,-10,5,-10,-6,4,5,1,-3,-5,8,-2,9,-10,-6,-8,2,1,-8,8,1,4,-7,-9,-3,-3,-4,-10,9,-1,2,1,-7,-3,-3,-1,-2,8,9,2,-2,2,10,-10,-9,-1,2,7,4,6,-3,-2,9,6,9,-9,5,-8,3,-3,9,-5,7,10,-4,-1,-3,-1,4,2,7,4,-3,6,-2,-8,6,4,7,-7,2,9,-10,10,10,-7,3,9,-4,10,6,9,-1,-5,8,-1,-9,-6,1,-3,7,-7,1,-4,3,-3,2,-2,4,3,-1,-2,5,9,3,-6,-2,-9,-3,10,-9,-6,6,5,-7,-1,5,7,1,-5,-10,3,7,6,6,-5,-10,5,-1,5,-1,4,-10,-5,9,-3,2,-2,9,7,6,10,3,2,-8,-1,1,-4,-8,-2,-6,7,-1,6,-9,-7,5,2,3,-5,1,9,-1,3,-9,-8,9,4,8,-2,-5,3,6,-9,1,1,9,-4,-2,-2,3,7,-7,4,3,2,6,-7,3,3,-1,6,4,-2,6,-7,-4,-10,7,6,-9,7,8,-10,-3,6,9,6,9,-8,-10,3,9,-6,-7,-8,3,-6,3,-3,-10,10,1,3,-2,7,5,-7,-5,-5,-7,3,-10,2,-4,10,4,-1,4,4,-4,1,3,8,-2,2,-5,1,1,-9,-8,9,8], dtype = "int64")#candidate|4100|(1560,)|const|int64
call_4098 = relay.TupleGetItem(func_2199_call(relay.reshape(var_4099.astype('int64'), [3, 40]), relay.reshape(const_4100.astype('int64'), [1560,]), ), 2)
call_4101 = relay.TupleGetItem(func_2202_call(relay.reshape(var_4099.astype('int64'), [3, 40]), relay.reshape(const_4100.astype('int64'), [1560,]), ), 2)
func_3017_call = mod.get_global_var('func_3017')
func_3019_call = mutated_mod.get_global_var('func_3019')
call_4107 = relay.TupleGetItem(func_3017_call(), 0)
call_4108 = relay.TupleGetItem(func_3019_call(), 0)
func_205_call = mod.get_global_var('func_205')
func_207_call = mutated_mod.get_global_var('func_207')
call_4113 = func_205_call()
call_4114 = func_205_call()
output = relay.Tuple([uop_4096,call_4098,var_4099,const_4100,call_4107,call_4113,])
output2 = relay.Tuple([uop_4096,call_4101,var_4099,const_4100,call_4108,call_4114,])
func_4117 = relay.Function([var_4099,], output)
mod['func_4117'] = func_4117
mod = relay.transform.InferType()(mod)
var_4118 = relay.var("var_4118", dtype = "int64", shape = (60, 2))#candidate|4118|(60, 2)|var|int64
output = func_4117(var_4118)
func_4119 = relay.Function([var_4118], output)
mutated_mod['func_4119'] = func_4119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mod.get_global_var('func_666')
func_667_call = mutated_mod.get_global_var('func_667')
call_4149 = relay.TupleGetItem(func_666_call(), 0)
call_4150 = relay.TupleGetItem(func_667_call(), 0)
output = call_4149
output2 = call_4150
func_4168 = relay.Function([], output)
mod['func_4168'] = func_4168
mod = relay.transform.InferType()(mod)
output = func_4168()
func_4169 = relay.Function([], output)
mutated_mod['func_4169'] = func_4169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mod.get_global_var('func_4168')
func_4169_call = mutated_mod.get_global_var('func_4169')
call_4175 = func_4168_call()
call_4176 = func_4168_call()
func_4117_call = mod.get_global_var('func_4117')
func_4119_call = mutated_mod.get_global_var('func_4119')
const_4180 = relay.const([4,-4,-2,6,-7,-3,8,-1,5,-1,-8,8,10,-8,-10,-5,10,5,-4,7,-5,6,10,-4,-3,-7,-7,-10,4,-2,-10,3,10,-1,-1,4,9,-9,-9,-7,5,5,9,-1,-3,9,1,3,-10,-6,5,4,3,-4,-6,5,4,-3,5,-6,-6,2,-7,-1,-1,5,-8,-1,-4,-3,5,2,-8,-2,1,-1,-5,6,-10,-8,-7,-9,3,6,-3,8,9,-7,6,-9,-9,4,3,-3,-1,6,-3,-3,-2,-6,9,5,5,-4,3,-6,4,-6,1,4,10,8,-2,2,1,1,3,10,9,-8], dtype = "int64")#candidate|4180|(120,)|const|int64
call_4179 = relay.TupleGetItem(func_4117_call(relay.reshape(const_4180.astype('int64'), [60, 2])), 1)
call_4181 = relay.TupleGetItem(func_4119_call(relay.reshape(const_4180.astype('int64'), [60, 2])), 1)
func_2199_call = mod.get_global_var('func_2199')
func_2202_call = mutated_mod.get_global_var('func_2202')
const_4194 = relay.const([[7,7,-7,1,-10,-4,4,3,-1,6,8,2,-7,-10,10,-10,10,-8,-6,6,10,8,7,7,10,8,1,9,5,-4,-3,-2,4,9,-9,-6,6,-4,5,-3,-5,3,10,-8,1,-10,6,7,-1,10,3,10,-1,-4,-6,-3,7,8,10,-2,8,7,-3,-6,3,8,-3,7,5,-2,10,3,-3,-3,-9,-6,-7,10,9,8,-3,8,-5,10,10,-10,-9,-6,-5,7,-5,8,-8,-6,6,7,-10,-5,-3,4,9,2,8,2,10,-5,2,9,-4,5,10,-9,-8,-5,1,4,5,10,5,-7,1,2,-7,-1,7,-3,1,-7,-8,10,4,-1,-10,-2,-3,2,1,7,-6,-9,6,9,-3,6,1,-3,10,3,7,6,6,-5,-1,-5,3,-9,-5,8,-7,3,2,10,-2,-3,10,-2,-9,-3,9,5,-1,3,-3,8,-5,7,-7,-9,-1,9,-4,-8,-7,-3,-1,10,-5,10,2,-9,6,-4,4,-1,8,8,10,6,9,4,8,-1,-5,-10,-6,-5,4,5,-3,-2,-6,-6,6,-4,1,-4,1,3,-6,-6,3,-7,1,4,-8,-6,7,-3,-5,-10,4,-7,-9,3,-5,-10,-8,-5,8,-4,4,-3,3,-5,-2,7,7,10,-6,3,-2,10,-9,9,-4,4,-5,10,2,6,-8,-9,-7,-3,10,4,1,1,1,-5,-5,3,-5,-9,8,-10,-10,-1,8,2,4,-9,2,-4,4,-7,8,10,-3,-2,-6,-7,-3,-3,-6,8,-1,-4,-1,-7,8,5,-4,-1,3,9,-8,-4,-5,-10,2,-1,-7,7,3,-2,-7,-7,9,7,-3,-3,-3,10,6,10,-9,2,-6,-3,-2,-10,-1,10,-6,4,-5,8,6,7,1,-9,-10,8,9,-7,-8,9,-5,-1,-6,-8,-4,1,8,1,7,2,10,-5,3,9,8,-1,7,-2,7,-5,10,-10,-4,-8,10,10,9,-8,-5,2,-4,-4,6,-5,-8,3,-6,6,5,-3,-1,-6,6,3,-10,-5,-9,-7,-7,-8,-3,-2,-6,-1,10,8,6,-4,-8,6,-1,4,9,4,4,-10,-5,-5,9,-3,-9,2,5,-10,2,-2,-6,-4,-10,1,-10,-2,-1,7,-5,9,-3,1,-9,-2,-6,8,3,-7,10,-6,6,7,-4,-9,7,5,1,10,7,-4,10,-5,2,5,-9,-2,8,-6,6,-3,3,4,4,-5,8,3,1,-1,3,7,-7,-9,-10,9,-10,8,-10,9,-6,2,6,-4,-7,-10,-2,-2,-5,4,-8,1,5,3,-4,7,7,-6,9,7,-6,8,-5,-7,-3,-6,-3,-3,8,4,-6,-2,2,-3,-9,-9,-9,-2,-7,-5,-9,-3,9,3,-2,9,-7,1,10,-2,-4,5,8,-10,-8,5,-5,2,-6,3,-1,6,-5,7,10,-6,10,10,3,-1,4,-10,8,-2,8,-2,8,-7,4,-2,-3,9,-2,-1,10,7,10,10,1,2,-9,-8,-4,-2,9,5,4,5,-4,10,8,5,-5,6,10,5,2,-6,8,-7,4,9,5,-4,10,-10,-3,6,1,-6,-10,10,-4,-8,-6,9,4,-8,4,7,-7,-2,-1,8,10,5,-5,-2,1,3,-5,-7,-2,10,-8,10,4,-4,2,-9,8,-2,8,3,-4,-5,1,-9,-9,-3,-6,2,6,-4,-2,9,-8,-2,-5,-6,-3,7,4,-9,5,-2,4,10,2,8,-1,-3,-8,-5,-9,-1,1,6,-3,2,8,10,10,4,8,-5,9,-7,-2,-9,3,-3,7,4,4,-10,8,6,4,1,10,-10,-3,-5,1,-5,-3,1,-8,1,-8,6,-5,-5,2,10,1,2,-8,10,2,-4,-6,6,9,-7,10,-5,8,3,-8,-2,4,-5,-1,-2,2,8,10,-3,-1,7,6,6,2,1,-4,-8,-9,3,-10,2,2,10,-6,-2,-5,-10,-1,-6,8,4,2,-4,-7,-10,-5,-8,2,10,3,7,-3,1,-3,-8,6,-7,-7,9,8,-10,-2,2,8,-2,-6,-1,5,-6,10,-1,7,5,9,-10,3,-1,-10,-9,-7,-1,1,3,-7,4,4,-4,-5,4,4,2,6,4,-8,-4,5,7,9,-10,10,4,1,-4,-10,10,-4,3,8,6,10,3,7,-1,-2,5,-5,8,10,2,-4,-3,-5,-8,4,10,-6,-9,-5,-1,9,10,8,2,2,7,-6,-4,-7,-7,8,2,2,-9,10,-1,8,7,-1,-4,-4,-7,-1,3,-3,6,-8,7,10,5,6,2,-1,-1,-9,3,8,-6,-1,5,-9,-7,-9,-9,10,10,-3,-1,-3,-5,9,-8,8,-6,-2,2,1,-10,-4,1,4,10,-6,-2,-5,-3,-4,3,-2,-2,-1,-8,4,5,1,-1,-7,-2,4,-4,-2,-5,-6,10,-7,-6,7,-1,4,-10,-1,-9,4,3,-7,6,4,6,10,-9,6,-5,1,-5,-3,-9,-6,3,2,-7,-3,-6,4,6,-8,1,2,9,6,-8,9,-3,8,6,-4,-10,-7,3,-10,7,5,2,-6,1,-6,-10,8,9,-3,-7,9,-5,4,10,-8,2,5,-3,6,2,4,-5,9,-10,1,9,-5,-8,2,-2,7,8,-7,-2,6,5,9,-2,-7,9,10,-10,2,-3,-8,-7,-7,8,5,-9,7,10,-5,2,-5,-10,1,-9,7,-7,4,-3,-8,-7,2,-5,1,3,-8,-5,-8,-7,4,9,-7,-8,2,-4,-2,-7,-8,-1,6,2,-1,-6,-4,7,6,-9,4,-3,-9,-9,9,-5,-8,5,-2,-7,-6,1,3,-9,-6,3,-8,-8,-5,-9,-5,-3,-1,-7,5,-6,-7,4,5,-3,2,2,-4,8,-7,6,-1,7,5,-5,-9,3,9,8,-1,-4,-6,-2,7,2,6,8,-4,9,8,-2,-6,3,-4,-9,1,-7,-2,-9,-8,-4,8,-10,-8,2,5,-3,10,-6,8,-7,-3,-9,-3,5,-1,4,1,-2,4,-5,7,-2,5,-9,-5,3,3,4,-2,7,-8,-3,-8,-9,8,-1,-3,9,-3,2,-9,8,9,-7,-3,-4,-7,9,1,-10,-2,-3,-6,-5,-3,8,2,-3,10,-3,6,1,4,1,-9,-4,1,-6,-10,-5,7,-6,-1,-1,-8,-3,10,8,-7,-1,9,5,-3,-9,3,-5,-9,-9,-9,-1,-5,-1,-10,10,9,4,-7,10,-2,-2,-2,5,-7,2,-5,2,9,4,2,9,-7,9,-1,-3,-5,10,-9,1,-9,3,7,-5,-9,-8,-5,2,9,6,-8,5,-2,-5,1,-9,8,-6,7,3,-2,-7,-1,9,-10,-2,-3,-4,-3,8,-4,4,-10,10,4,5,6,3,3,-7,-8,-1,-7,6,5,-6,2,2,-2,1,-6,2,-10,-9,-8,6,-5,-6,4,-4,7,-8,2,1,10,4,8,-8,-2,1,-3,-5,-6,3,-7,8,1,-5,8,8,9,4,7,-6,-8,10,-4,2,-8,-9,-5,10,-5,-8,-2,10,10,9,-7,8,-1,-9,-5,-2,-7,9,8,-8,4,-5,-6,-6,-1,6,9,1,4,5,-10,-2,8,9,-9,-10,-4,-9,-1,7,-1,8,-8,-10,-1,-10,1,-10,-1,6,7,-5,10,3,9,3,-4,-10,10,-3,-6,-3,-4,8,1,7,2,9,6,-5,-2,4,9,-6,-5,-1,-3,10,5,-5,3,-4,-4,9,5,-4,10,2,-4,-10,9,-2,4,-2,-3,7,10,3,2,-5,-3,3,7,-5,-4,-1,-4,7,-6,-9,7,5,7,1,-7,8,5,7,7,-2,7,-5,-6,-3,3,-1,9,-6,-3,6,3,-2,-7,10,-1,6,6,2,-6,-6,8,9,-3,-2,4,-6,3,-5,7,6,-8,7,-6,7,6,2,9,9,-8,8,-2,7,2,-8,7,-8,-6,10,6,7,1,5,-3,-1,9,1,4,7,-1,-7,-10,-7,2,10,5,1,9,5,2,4,-5,-1,6,9,6,8,-2,2,-4,-3,2,-4,-2,4,5,5,3,-3,5,-6,5,-7,-1,-3,9,-4,2,3,-7,7,-5,3,10,6,-5,8]], dtype = "int64")#candidate|4194|(1, 1560)|const|int64
call_4193 = relay.TupleGetItem(func_2199_call(relay.reshape(call_4179.astype('int64'), [3, 40]), relay.reshape(const_4194.astype('int64'), [1560,]), ), 1)
call_4195 = relay.TupleGetItem(func_2202_call(relay.reshape(call_4179.astype('int64'), [3, 40]), relay.reshape(const_4194.astype('int64'), [1560,]), ), 1)
func_1496_call = mod.get_global_var('func_1496')
func_1497_call = mutated_mod.get_global_var('func_1497')
call_4199 = relay.TupleGetItem(func_1496_call(), 0)
call_4200 = relay.TupleGetItem(func_1497_call(), 0)
output = relay.Tuple([call_4175,call_4179,const_4180,call_4193,const_4194,call_4199,])
output2 = relay.Tuple([call_4176,call_4181,const_4180,call_4195,const_4194,call_4200,])
func_4201 = relay.Function([], output)
mod['func_4201'] = func_4201
mod = relay.transform.InferType()(mod)
output = func_4201()
func_4202 = relay.Function([], output)
mutated_mod['func_4202'] = func_4202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1310_call = mod.get_global_var('func_1310')
func_1311_call = mutated_mod.get_global_var('func_1311')
call_4222 = func_1310_call()
call_4223 = func_1310_call()
func_4076_call = mod.get_global_var('func_4076')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_4227 = func_4076_call()
call_4228 = func_4076_call()
func_2103_call = mod.get_global_var('func_2103')
func_2104_call = mutated_mod.get_global_var('func_2104')
call_4237 = relay.TupleGetItem(func_2103_call(), 1)
call_4238 = relay.TupleGetItem(func_2104_call(), 1)
func_1110_call = mod.get_global_var('func_1110')
func_1112_call = mutated_mod.get_global_var('func_1112')
var_4251 = relay.var("var_4251", dtype = "int64", shape = (120,))#candidate|4251|(120,)|var|int64
call_4250 = relay.TupleGetItem(func_1110_call(relay.reshape(var_4251.astype('int64'), [120,])), 3)
call_4252 = relay.TupleGetItem(func_1112_call(relay.reshape(var_4251.astype('int64'), [120,])), 3)
var_4256 = relay.var("var_4256", dtype = "int64", shape = (16, 1560))#candidate|4256|(16, 1560)|var|int64
bop_4257 = relay.multiply(call_4250.astype('float32'), var_4256.astype('float32')) # shape=(16, 1560)
bop_4260 = relay.multiply(call_4252.astype('float32'), var_4256.astype('float32')) # shape=(16, 1560)
bop_4278 = relay.logical_and(call_4250.astype('bool'), bop_4257.astype('bool')) # shape=(16, 1560)
bop_4281 = relay.logical_and(call_4252.astype('bool'), bop_4260.astype('bool')) # shape=(16, 1560)
uop_4319 = relay.sqrt(call_4250.astype('float32')) # shape=(1, 1560)
uop_4321 = relay.sqrt(call_4252.astype('float32')) # shape=(1, 1560)
func_1408_call = mod.get_global_var('func_1408')
func_1412_call = mutated_mod.get_global_var('func_1412')
const_4324 = relay.const([-8.103276,4.737159,9.837747,-5.489496,6.384930,-5.300290,9.751031,5.125965,6.645760,8.107955,4.473673,-9.435027,4.588612,-3.696222,3.035340,-2.327316,-9.379134,-2.008674,9.419495,-1.414501,2.174030,-0.195419,-1.575951,8.305578,-5.407045,0.375833,-6.676585,-0.849207,-9.771019,-3.345446,-8.119064,6.292702,-0.445927,4.368251,5.794315,-4.172467,-2.243349,6.373406,-8.177536,5.679139,9.918668,7.559370,-1.767926,-7.683007,-7.189883,-0.737764,3.587540,3.357277,1.084332,5.076221,5.068129,-3.193910,2.563659,-8.514381,-0.520358,-5.732825,8.056101,8.659253,3.644349,-4.424696,-9.687903,7.016435,1.004670,5.203588,4.830445,1.462794,-2.157133,-4.335477,9.598306,-0.927814,-0.533092,-9.242526,-9.463078,5.712965,5.139324], dtype = "float64")#candidate|4324|(75,)|const|float64
call_4323 = relay.TupleGetItem(func_1408_call(relay.reshape(const_4324.astype('float64'), [75,]), relay.reshape(const_4324.astype('float64'), [75,]), ), 2)
call_4325 = relay.TupleGetItem(func_1412_call(relay.reshape(const_4324.astype('float64'), [75,]), relay.reshape(const_4324.astype('float64'), [75,]), ), 2)
output = relay.Tuple([call_4222,call_4227,call_4237,var_4251,bop_4278,uop_4319,call_4323,const_4324,])
output2 = relay.Tuple([call_4223,call_4228,call_4238,var_4251,bop_4281,uop_4321,call_4325,const_4324,])
func_4328 = relay.Function([var_4251,var_4256,], output)
mod['func_4328'] = func_4328
mod = relay.transform.InferType()(mod)
mutated_mod['func_4328'] = func_4328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mutated_mod.get_global_var('func_4328')
var_4330 = relay.var("var_4330", dtype = "int64", shape = (120,))#candidate|4330|(120,)|var|int64
var_4331 = relay.var("var_4331", dtype = "int64", shape = (16, 1560))#candidate|4331|(16, 1560)|var|int64
call_4329 = func_4328_call(var_4330,var_4331,)
output = call_4329
func_4332 = relay.Function([var_4330,var_4331,], output)
mutated_mod['func_4332'] = func_4332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2429_call = mod.get_global_var('func_2429')
func_2431_call = mutated_mod.get_global_var('func_2431')
call_4342 = func_2429_call()
call_4343 = func_2429_call()
output = relay.Tuple([call_4342,])
output2 = relay.Tuple([call_4343,])
func_4344 = relay.Function([], output)
mod['func_4344'] = func_4344
mod = relay.transform.InferType()(mod)
mutated_mod['func_4344'] = func_4344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4344_call = mutated_mod.get_global_var('func_4344')
call_4345 = func_4344_call()
output = call_4345
func_4346 = relay.Function([], output)
mutated_mod['func_4346'] = func_4346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1873_call = mod.get_global_var('func_1873')
func_1874_call = mutated_mod.get_global_var('func_1874')
call_4347 = func_1873_call()
call_4348 = func_1873_call()
output = relay.Tuple([call_4347,])
output2 = relay.Tuple([call_4348,])
func_4349 = relay.Function([], output)
mod['func_4349'] = func_4349
mod = relay.transform.InferType()(mod)
output = func_4349()
func_4350 = relay.Function([], output)
mutated_mod['func_4350'] = func_4350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1310_call = mod.get_global_var('func_1310')
func_1311_call = mutated_mod.get_global_var('func_1311')
call_4405 = func_1310_call()
call_4406 = func_1310_call()
func_4201_call = mod.get_global_var('func_4201')
func_4202_call = mutated_mod.get_global_var('func_4202')
call_4408 = relay.TupleGetItem(func_4201_call(), 3)
call_4409 = relay.TupleGetItem(func_4202_call(), 3)
func_3757_call = mod.get_global_var('func_3757')
func_3759_call = mutated_mod.get_global_var('func_3759')
const_4413 = relay.const([[-1,5,2,9,2,-5,-3,-10,6,-3,7,4,-2,7,-2,-3,-8,8,6,-9,-5,1,1,-5,9,7,-7,5,7,7,5,-2,-8,-4,-10,-3,7,-2,-7,5,-5,3,-5,-9,2,-2,6,1,-8,10,-8,-10,-1,3,-9,6,-5,4,-9,2,1,-8,2,4,-4,6,9,9,10,2,4,-3,-6,9,-2,-7,-9,-1,-4,-10,9,-4,-6,2,5,-5,-9,8,-7,-3,1,3,4,-2,-1,1,-10,10,-8,-2,-6,1,-5,-3,7,-1,-7,-8,-8,-3,3,-1,-9,-7,-5,9,5,-7,9,3]], dtype = "int64")#candidate|4413|(1, 120)|const|int64
call_4412 = relay.TupleGetItem(func_3757_call(relay.reshape(const_4413.astype('int64'), [120,])), 2)
call_4414 = relay.TupleGetItem(func_3759_call(relay.reshape(const_4413.astype('int64'), [120,])), 2)
output = relay.Tuple([call_4405,call_4408,call_4412,const_4413,])
output2 = relay.Tuple([call_4406,call_4409,call_4414,const_4413,])
func_4420 = relay.Function([], output)
mod['func_4420'] = func_4420
mod = relay.transform.InferType()(mod)
mutated_mod['func_4420'] = func_4420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4420_call = mutated_mod.get_global_var('func_4420')
call_4421 = func_4420_call()
output = call_4421
func_4422 = relay.Function([], output)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1873_call = mod.get_global_var('func_1873')
func_1874_call = mutated_mod.get_global_var('func_1874')
call_4423 = func_1873_call()
call_4424 = func_1873_call()
output = call_4423
output2 = call_4424
func_4437 = relay.Function([], output)
mod['func_4437'] = func_4437
mod = relay.transform.InferType()(mod)
mutated_mod['func_4437'] = func_4437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4437_call = mutated_mod.get_global_var('func_4437')
call_4438 = func_4437_call()
output = call_4438
func_4439 = relay.Function([], output)
mutated_mod['func_4439'] = func_4439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4497 = relay.var("var_4497", dtype = "int32", shape = ())#candidate|4497|()|var|int32
var_4498 = relay.var("var_4498", dtype = "int32", shape = (8, 8, 1))#candidate|4498|(8, 8, 1)|var|int32
bop_4499 = relay.add(var_4497.astype('int32'), var_4498.astype('int32')) # shape=(8, 8, 1)
output = bop_4499
output2 = bop_4499
func_4513 = relay.Function([var_4497,var_4498,], output)
mod['func_4513'] = func_4513
mod = relay.transform.InferType()(mod)
mutated_mod['func_4513'] = func_4513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4513_call = mutated_mod.get_global_var('func_4513')
var_4515 = relay.var("var_4515", dtype = "int32", shape = ())#candidate|4515|()|var|int32
var_4516 = relay.var("var_4516", dtype = "int32", shape = (8, 8, 1))#candidate|4516|(8, 8, 1)|var|int32
call_4514 = func_4513_call(var_4515,var_4516,)
output = call_4514
func_4517 = relay.Function([var_4515,var_4516,], output)
mutated_mod['func_4517'] = func_4517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4201_call = mod.get_global_var('func_4201')
func_4202_call = mutated_mod.get_global_var('func_4202')
call_4540 = relay.TupleGetItem(func_4201_call(), 1)
call_4541 = relay.TupleGetItem(func_4202_call(), 1)
uop_4544 = relay.tan(call_4540.astype('float32')) # shape=(3, 40)
uop_4546 = relay.tan(call_4541.astype('float32')) # shape=(3, 40)
func_382_call = mod.get_global_var('func_382')
func_383_call = mutated_mod.get_global_var('func_383')
call_4550 = relay.TupleGetItem(func_382_call(), 0)
call_4551 = relay.TupleGetItem(func_383_call(), 0)
func_539_call = mod.get_global_var('func_539')
func_540_call = mutated_mod.get_global_var('func_540')
call_4555 = func_539_call()
call_4556 = func_539_call()
output = relay.Tuple([uop_4544,call_4550,call_4555,])
output2 = relay.Tuple([uop_4546,call_4551,call_4556,])
func_4557 = relay.Function([], output)
mod['func_4557'] = func_4557
mod = relay.transform.InferType()(mod)
output = func_4557()
func_4558 = relay.Function([], output)
mutated_mod['func_4558'] = func_4558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3161_call = mod.get_global_var('func_3161')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_4581 = func_3161_call()
call_4582 = func_3161_call()
func_2151_call = mod.get_global_var('func_2151')
func_2153_call = mutated_mod.get_global_var('func_2153')
var_4593 = relay.var("var_4593", dtype = "float32", shape = (7488,))#candidate|4593|(7488,)|var|float32
call_4592 = relay.TupleGetItem(func_2151_call(relay.reshape(var_4593.astype('float32'), [936, 8])), 0)
call_4594 = relay.TupleGetItem(func_2153_call(relay.reshape(var_4593.astype('float32'), [936, 8])), 0)
bop_4608 = relay.left_shift(call_4581.astype('uint32'), relay.reshape(call_4592.astype('uint32'), relay.shape_of(call_4581))) # shape=(11, 13, 13)
bop_4611 = relay.left_shift(call_4582.astype('uint32'), relay.reshape(call_4594.astype('uint32'), relay.shape_of(call_4582))) # shape=(11, 13, 13)
output = relay.Tuple([var_4593,bop_4608,])
output2 = relay.Tuple([var_4593,bop_4611,])
func_4613 = relay.Function([var_4593,], output)
mod['func_4613'] = func_4613
mod = relay.transform.InferType()(mod)
var_4614 = relay.var("var_4614", dtype = "float32", shape = (7488,))#candidate|4614|(7488,)|var|float32
output = func_4613(var_4614)
func_4615 = relay.Function([var_4614], output)
mutated_mod['func_4615'] = func_4615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_635_call = mod.get_global_var('func_635')
func_636_call = mutated_mod.get_global_var('func_636')
call_4624 = relay.TupleGetItem(func_635_call(), 0)
call_4625 = relay.TupleGetItem(func_636_call(), 0)
output = relay.Tuple([call_4624,])
output2 = relay.Tuple([call_4625,])
func_4629 = relay.Function([], output)
mod['func_4629'] = func_4629
mod = relay.transform.InferType()(mod)
output = func_4629()
func_4630 = relay.Function([], output)
mutated_mod['func_4630'] = func_4630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1124_call = mod.get_global_var('func_1124')
func_1126_call = mutated_mod.get_global_var('func_1126')
call_4647 = func_1124_call()
call_4648 = func_1124_call()
var_4681 = relay.var("var_4681", dtype = "float64", shape = (936, 12))#candidate|4681|(936, 12)|var|float64
bop_4682 = relay.greater_equal(call_4647.astype('bool'), var_4681.astype('bool')) # shape=(936, 12)
bop_4685 = relay.greater_equal(call_4648.astype('bool'), var_4681.astype('bool')) # shape=(936, 12)
func_3017_call = mod.get_global_var('func_3017')
func_3019_call = mutated_mod.get_global_var('func_3019')
call_4693 = relay.TupleGetItem(func_3017_call(), 4)
call_4694 = relay.TupleGetItem(func_3019_call(), 4)
uop_4701 = relay.cos(var_4681.astype('float32')) # shape=(936, 12)
uop_4706 = relay.asin(call_4647.astype('float64')) # shape=(936, 1)
uop_4708 = relay.asin(call_4648.astype('float64')) # shape=(936, 1)
output = relay.Tuple([bop_4682,call_4693,uop_4701,uop_4706,])
output2 = relay.Tuple([bop_4685,call_4694,uop_4701,uop_4708,])
func_4713 = relay.Function([var_4681,], output)
mod['func_4713'] = func_4713
mod = relay.transform.InferType()(mod)
var_4714 = relay.var("var_4714", dtype = "float64", shape = (936, 12))#candidate|4714|(936, 12)|var|float64
output = func_4713(var_4714)
func_4715 = relay.Function([var_4714], output)
mutated_mod['func_4715'] = func_4715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_4735 = relay.TupleGetItem(func_124_call(), 2)
call_4736 = relay.TupleGetItem(func_125_call(), 2)
output = call_4735
output2 = call_4736
func_4737 = relay.Function([], output)
mod['func_4737'] = func_4737
mod = relay.transform.InferType()(mod)
mutated_mod['func_4737'] = func_4737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4737_call = mutated_mod.get_global_var('func_4737')
call_4738 = func_4737_call()
output = call_4738
func_4739 = relay.Function([], output)
mutated_mod['func_4739'] = func_4739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_4765 = relay.TupleGetItem(func_124_call(), 0)
call_4766 = relay.TupleGetItem(func_125_call(), 0)
func_1623_call = mod.get_global_var('func_1623')
func_1626_call = mutated_mod.get_global_var('func_1626')
const_4783 = relay.const([-9,4,6,-6,-5,4,-3,-7,-8,7,3,8,5,-2,-5,-8,10,10,5,-6,-10,-10,-5,3,-10,-7,-6,-6,-10,8,9,-10,1,-7,-7,-9,-3,-1,6,6,-6,-6,-10,5,-1,3,-10,3,2,-10,-10,5,7,-6,10,6,-6,8,7,4,-6,-1,10,8,1,1,6,-7,-2,4,6,9,6,-8,1,-2,8,5,-7,-10,-2,10,-6,1,-1,-1,-8,-8,8,-7,7,7,-3,3,-9,8,5,1,8,-9,-8,-7,1,-1,3,-9,7,8,-10,2,6,-1,10,2,4,9,4,-10,-3,-5,9,9,-9,8,7,-1,9,-4,3,-1,9,-1,-7,-9,4,-9,7,-10,2,-8,-7,-2,10,-7,1,-2,-9,-3,-5,-9,6,3,5,-2,9,-7,-10,5,6,2,2,-8,-6,9,3,2,7,5,-9,10,8,6,-8,-7,-5,-2,1,-9,-10,2,-6,7,10,-3,10,8,-3,-7,5,5,-10,-8,6,-2,4,2,-8,1,-10,8,-2,-9,3,5,-7,-10,7,2,5,-2,7,9,2,5,8,1,2,-4,5,2,2,-10,2,-4,3,-4,-9,-6,-4,-10,-6,10,-2,-2,-4,8,-8,4,-10,7,-4,4,5,-2,-2,-1,7,6,-8,6,-5,-7,-5,-5,1,8,2,-7,-3,5,-3,-6,10,10,2,-9,2,-4,-8,10,2,5,10,-2,-2,10,5,-6,8,2,-3,1,-8,-2,3,-6,-10,8,2,4,-8,9,-10,8,-4,10,-5,5,-3,10,1,-2,8,2,1,-5,-10,-2,-3,6,3,5,6,-1,-8,-6,8,9,-1,7,-7,-3,-9,5,5,9,9,8,-5,6,-2,4,2,10,-4,-7,1,8,-3,2,-4,10,7,9,-8,9,7,4,7,-5,10,2,10,-1,-2,-2,8,-2,-1,10,5,-1,-1,6,-6,-10,2,10,-1,4,-8,2,10,10,4,-3,9,3,-9,-9,9,3,-1,-3,6,8,6,9,-3,-7,8,5,-6,-7,-9,-9,-6,-10,-7,-9,-10,6,-8,-2,-3,7,-1,-1,3,1,6,10,6,7,5,-8,-5,-1,-9,-4,-3,8,-5,10,-6,-10,3,-4,-4,-2,-9,3,7,10,6,10,7,3,6,-10,6,-7,-1,-10,4,-3,-4,-10,10,-7,-4,-6,-5,-10,4,-7,9,-3,-5,-7,-5,-3,-7,-10,-10,3,-3,2,-8,1,2,4,2,-2,-8,-5,9,4,10,5,8,-4,5,-9,8,-2,-7,-2,4,5,4,5,-9,-3,2,9,-4,-10,-8,-9,-10,9,-9,-6,6,5,3,-5,-10,1,4,1,-4,-6,-4,1,8,-3,10,10,-1,5,-4,6,9,-5,9,3,-8,8,-6,6,-6,10,8,-1,6,5,-6,-3,10,10,-5,5,-1,-7,-9,-10,-2,10,-4,-1,6,-10,6,-7,-1,-6,-9,-2,-3,9,2,6,2,5,8,4,-1,4,8,-6,8,7,-4,-10,-8,6,8,5,9,-4,6,-10,-4,4,6,3,3,-3,-1,-1,-2,8,-2,-10,2,7,5,5,-2,1,1,3,-4,-1,9,-3,-1,-3,-3,-4,-10,-3,10,4,8,-1,-9,-3,9,9,5,3,2,-1,-10,2,-7,4,-4,9,-6,-3,5,10,-1,3,1,-4,-1,-8,9,2,-8,3,-7,-5,5,9,-3,5,8,-10,4,-9,-10,-10,10,4,10,-9,-4,-9,-10,10,-7,-7,-2,1,-2,5,-1,10,-6,-7,-6,3,-1,-10,3,4,6,5,10,-6,-10,4,-5,-1,1,-7,-6,-8,7,8,9,-9,5,4,4,8,10,-5,8,-8,-8,7,-7,1,-4,-3,-2,9,10,5,-1,10,-6,-8,3,-5,-1,4,-7,2,-5,6,9,7,7,3,-4,1,8,-4,5,9,-4,-6,10,-4,-6,6,-4,-5,4,10,1,-10,3,9,5,-6,2,10,3,-7,-2,4,-6,10,-7,10,4,-6,-5,-4,2,7,-3,6,-9,-7,-7,-1,-10,-5,-1,-6,6,-9,6,9,-5,-1,-1,6,-1,-5,4,1,6,10,2,2,7,-9,7,2,-4,10,-2,-7,9,-9,-7,6,6,-1,-1,6,-4,-2,3,-3,-7,-2,1,-1,-3,-5,1,-4,-5,-3,5,6,-4,-10,-2,-2,8,-9,-5,-1,-9,9,-8,-6,7,1,1,-1,6,2,4,9,9,-3,8,-7,2,6,-8,-3,4,-6,1,-9,-9,-7,6,7,3,4,-5,8,-6,5,9,-8,2,-7,9,2,-1,-1,4,-4,7,10,-6,9,-5,5,-2,8,-7,7,-4,-4,-7,-10,4,-9,2,4,10,-10,-8,8,8,-4,-2,10,9,9,-2,6,-4,8,-6,4,4,8,8,1,-3,-8,-7,1,4,-1,-10,2,-4,10,3,-4,7,-10,-2,-1,-8,-2], dtype = "int32")#candidate|4783|(936,)|const|int32
call_4782 = relay.TupleGetItem(func_1623_call(relay.reshape(const_4783.astype('int32'), [6, 13, 12])), 2)
call_4784 = relay.TupleGetItem(func_1626_call(relay.reshape(const_4783.astype('int32'), [6, 13, 12])), 2)
output = relay.Tuple([call_4765,call_4782,const_4783,])
output2 = relay.Tuple([call_4766,call_4784,const_4783,])
func_4790 = relay.Function([], output)
mod['func_4790'] = func_4790
mod = relay.transform.InferType()(mod)
mutated_mod['func_4790'] = func_4790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4790_call = mutated_mod.get_global_var('func_4790')
call_4791 = func_4790_call()
output = call_4791
func_4792 = relay.Function([], output)
mutated_mod['func_4792'] = func_4792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1782_call = mod.get_global_var('func_1782')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_4856 = relay.TupleGetItem(func_1782_call(), 0)
call_4857 = relay.TupleGetItem(func_1784_call(), 0)
uop_4872 = relay.acos(call_4856.astype('float64')) # shape=(936, 1)
uop_4874 = relay.acos(call_4857.astype('float64')) # shape=(936, 1)
output = uop_4872
output2 = uop_4874
func_4876 = relay.Function([], output)
mod['func_4876'] = func_4876
mod = relay.transform.InferType()(mod)
output = func_4876()
func_4877 = relay.Function([], output)
mutated_mod['func_4877'] = func_4877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mod.get_global_var('func_666')
func_667_call = mutated_mod.get_global_var('func_667')
call_4916 = relay.TupleGetItem(func_666_call(), 0)
call_4917 = relay.TupleGetItem(func_667_call(), 0)
func_4344_call = mod.get_global_var('func_4344')
func_4346_call = mutated_mod.get_global_var('func_4346')
call_4926 = relay.TupleGetItem(func_4344_call(), 0)
call_4927 = relay.TupleGetItem(func_4346_call(), 0)
const_4935 = relay.const([[[-6.428011,1.896029,-0.379570,0.240252,-8.084434,1.495210,0.277922,4.179337,1.005422,8.389562,4.647337,-3.592151],[-8.338104,5.960073,-0.216425,-4.604982,6.379741,-9.784307,-0.204278,-2.317410,-5.800542,7.832905,3.051785,-9.248903],[-0.131731,7.093696,3.651715,7.577069,6.821851,-9.247600,9.232230,-4.253902,-5.817764,-4.477946,2.444316,7.739226],[-4.701975,2.979052,9.029210,-5.745004,2.778397,-8.543892,-0.703760,-6.388056,-2.993388,3.786941,6.736183,-7.394364],[-4.033414,-3.537223,0.160577,0.433568,0.305098,-3.304136,-7.234993,-0.522401,-1.231674,3.186498,-5.220880,-2.194242],[-3.948491,-6.955718,-9.649365,9.282701,-6.951432,-9.334364,1.700317,4.652865,-7.780006,1.187018,4.561167,-7.928216],[-9.890361,-2.279849,6.630207,3.011444,-9.586666,3.308477,-0.876489,-2.189779,5.908252,2.853751,-1.122745,3.048651],[-0.294500,-8.186884,-9.403432,7.527562,-0.901582,-2.869054,9.432530,0.495147,3.596040,-6.480801,1.664519,-7.538405],[5.295595,3.479059,1.393243,-5.855849,9.581052,4.366293,2.314425,1.483897,-2.302203,6.235207,2.374066,4.775415],[7.374215,7.571698,-3.862967,5.802535,6.849404,-4.744276,4.042189,-3.837269,0.339486,5.843636,-4.676139,-7.590989],[-4.677920,-8.769546,-7.930354,-7.488229,3.621114,-9.029771,-9.121932,3.265219,-3.571049,-9.955320,-6.855700,-6.341884],[-8.497613,-7.796052,-5.557382,3.818872,-7.458281,1.624533,6.628227,5.585061,8.348503,3.550089,9.649910,3.241263],[-5.679881,-9.020785,-0.052051,-4.718489,-4.309355,2.542453,5.096867,0.816221,0.861970,-1.285672,-4.308378,0.536305]],[[1.888687,9.530199,-9.978464,-9.004515,-4.548173,5.400458,5.963519,2.761085,9.535068,2.552207,4.070550,-7.331469],[7.930504,-5.739031,-5.904791,2.575595,-8.259889,1.846002,2.345801,4.073692,-8.578657,-5.751514,-5.208445,0.108608],[-0.889799,-1.643375,9.164561,-2.985234,2.733644,-0.022567,2.944748,9.803599,0.882925,-0.784254,-7.795393,-3.875661],[-3.365519,-2.110271,3.487874,-8.664266,-1.995011,8.942217,-4.819827,-2.067427,-2.369254,1.027649,-4.507709,8.292102],[5.411742,-1.852858,7.369180,-8.639559,5.623886,-4.578387,-9.179457,1.302154,0.889610,-4.052859,-4.667457,1.408287],[-8.145378,-5.922774,8.305470,-4.274562,3.456958,-0.012375,3.601369,1.729608,-0.329623,5.021367,-3.462752,4.621610],[-6.815316,9.989715,7.930398,2.458238,-2.837694,-7.797347,-6.836652,-8.990584,-3.927303,-1.194626,-7.912296,-7.719852],[-1.981050,4.141340,-2.036933,-2.178623,9.765731,-6.446645,1.106587,-2.864871,8.808445,9.457835,2.881996,-1.456911],[9.029630,0.196181,-1.023007,-0.133330,-6.177630,7.827101,-5.240144,5.846410,-0.829483,-2.742830,6.696304,2.331437],[-5.595866,-9.381613,-1.703265,5.357571,-9.850977,6.054721,-3.124310,3.829169,-6.503707,-7.921159,-2.344134,-0.930580],[8.458437,-0.727691,3.475245,2.747925,8.245343,6.475177,-5.547868,5.018400,2.198526,0.520586,-6.694602,-9.550439],[-9.911834,1.679667,-9.370296,4.512240,3.443055,0.272797,9.752096,-7.347292,-7.594934,-4.410736,-4.171141,3.246418],[2.800025,5.533599,5.657647,-7.962114,-0.064811,9.564961,3.933578,-2.856237,-3.960049,7.551127,8.110075,-1.603519]],[[3.153167,-7.846429,-4.513015,3.037948,1.268567,0.111976,2.760163,-8.293981,-7.426977,-8.850457,-3.762439,-0.285850],[-9.937472,-3.601345,1.019400,-4.570259,4.102946,-0.551556,-5.129679,9.000835,-0.355234,6.113177,-4.399186,-7.845120],[9.023693,-0.193201,7.352285,-4.706854,-5.491510,7.614189,-2.487214,-2.206830,9.774410,7.019766,8.060987,7.826221],[-1.126578,8.969053,-1.648330,2.206058,-9.012348,3.741084,-8.160460,-2.889251,-9.881029,-0.234510,8.682198,-9.242996],[2.225703,-4.518145,4.459223,-1.704860,-0.199497,-1.215441,9.368905,-0.796309,-8.719330,-6.455592,-2.569335,3.250171],[-1.212816,2.075560,4.425422,-5.504634,2.833755,8.092780,-0.311103,-3.629795,8.009809,9.081090,-0.411986,-8.973365],[7.594906,7.604922,2.595870,-3.240218,-9.476079,4.604166,-2.385179,-8.329253,2.448627,-9.458859,-6.280896,-1.523288],[4.574021,-1.980263,-8.612300,-4.711271,4.028402,8.935284,0.001893,0.561388,1.804591,0.860182,-6.875413,1.894456],[3.985525,-9.353085,4.626050,2.412130,-0.945679,-5.262460,-8.462596,4.173079,8.529579,9.158723,-9.134368,-8.390051],[2.292426,3.874132,-5.516057,8.086338,-0.340297,5.994167,5.554726,2.272504,-9.852436,-0.454995,-7.283525,8.426379],[-7.886272,-5.053852,1.829535,-8.961342,-2.532952,-7.744781,-7.335562,-5.084673,7.485482,-7.965525,-0.429347,8.328111],[-4.500545,-3.845178,3.903923,-0.898402,-5.649755,-7.083314,2.949533,-3.466809,5.342034,-8.461586,3.326130,-3.434322],[-5.374960,2.927481,-2.435198,-6.319967,-5.014644,-7.386336,-9.451309,2.503378,3.042599,-0.222114,-4.414628,0.245820]],[[3.456747,7.714360,-6.214956,-7.210183,9.258028,-0.228163,-4.188874,-8.817437,5.635645,-4.249107,3.417833,-9.158195],[9.429589,0.576256,4.324863,1.433980,9.582911,6.232620,1.305954,-9.816017,2.223446,-9.750540,2.385228,-4.987405],[0.851278,-8.798330,-6.740248,-8.584349,1.943701,8.191532,-9.398663,-5.075014,-5.194768,0.960873,5.920666,-5.840843],[-5.450524,-0.720134,6.811953,-8.347317,5.323464,9.517764,0.887182,3.139609,6.414249,-5.269025,-9.003442,1.348020],[-6.238504,-0.477724,1.111208,6.883437,5.772095,1.064728,-8.938056,-8.441964,1.484420,-6.716104,5.465360,7.296827],[-0.184808,-1.159545,-8.036091,7.019817,-5.272330,-7.475565,-5.186583,-2.598881,4.512996,-7.760449,7.809699,2.921885],[-8.846256,-1.766307,-2.528062,9.049953,5.911426,8.110795,7.603298,-7.153423,-4.243351,4.483233,-3.392371,-6.416364],[-4.260961,-8.093249,6.149692,-0.166941,6.242872,5.603328,-0.776061,-4.348158,-5.693813,-8.669432,8.000905,-3.781884],[3.037886,-7.209140,1.004270,-7.386988,-2.545285,9.076047,-7.845026,6.232801,-6.372234,2.641554,3.088908,-3.317843],[3.766044,-1.185584,-0.298401,-3.194664,-6.554835,6.865395,-1.178640,6.005167,-6.887758,-1.517266,-5.730411,-2.825453],[2.595209,-7.052063,-3.143741,-8.329411,5.126637,-5.503716,0.151823,9.197687,0.308078,9.057807,-5.859343,-1.948116],[-5.337755,-9.080452,5.363305,4.944960,-1.671516,1.028765,8.721379,1.060300,-4.492071,-6.330735,-2.758617,-4.712030],[-1.905482,1.609887,-2.990092,-8.559068,3.915751,-0.779432,4.875648,5.227426,8.107337,-9.487413,-1.613049,0.064151]],[[0.601435,7.392208,3.823400,-5.433605,5.531615,9.092270,3.447850,-2.681173,-4.480324,3.769872,0.572410,9.859214],[-5.979904,8.355046,1.144159,5.166057,-3.054190,7.738618,-7.365272,1.083240,9.438240,-7.705450,-1.413813,9.895814],[5.093286,0.224705,0.429640,8.493711,-3.250005,8.837669,5.917883,5.565384,9.129695,7.420316,-1.998909,1.228969],[9.288999,-9.841702,6.207408,-3.029029,1.153480,3.038686,3.335437,-1.129712,2.240354,4.875561,-0.127001,-7.189409],[8.128746,-7.367677,-1.838799,-7.005459,5.399475,-6.906369,-4.864052,3.084838,-0.252545,0.114852,2.948910,7.428639],[3.336040,3.702760,8.043218,7.112007,2.641487,-5.765076,8.139365,-9.952289,-8.359559,7.854970,1.876720,-5.870767],[9.029822,3.136102,1.085257,0.167409,-8.617805,-6.872834,-0.012143,-2.310777,8.738511,-0.806130,3.858437,1.660424],[6.737898,2.300418,9.840856,-8.091472,9.365699,2.159152,-2.710364,0.599698,5.119952,9.901394,2.453055,-6.089421],[-5.373578,5.754950,1.486018,8.300522,-4.316939,2.449800,-3.157657,-0.505361,-7.000275,-7.589415,4.731090,4.575854],[-5.397733,-4.767223,-7.019614,-8.030206,3.779986,1.120717,9.329470,0.336434,1.992158,5.015883,-7.155733,5.204222],[-3.275057,-6.099984,2.399486,-4.251579,-3.766629,3.667013,5.101061,2.661563,3.747765,2.416489,-5.848231,-8.607983],[-4.926524,1.450445,-4.275500,7.560956,4.259678,-2.117028,6.175662,-5.960067,4.169222,-2.031841,7.840217,-3.447936],[-7.921227,7.350964,-7.803963,-3.753839,-2.134751,-1.624614,-5.058978,0.479690,6.690584,-3.394625,-8.762066,-9.937496]],[[-6.903936,5.945748,-1.906546,2.322203,6.638474,4.931540,-9.534320,-9.441358,-1.103670,8.165568,-0.058255,-3.943908],[-8.445816,-4.715743,7.853813,9.192156,-1.899556,2.716246,-8.323657,6.802364,-7.480347,9.991556,7.572466,6.710012],[-8.297783,-5.919882,4.776319,-9.092308,-2.471694,-4.448929,9.987359,3.263468,-2.770567,3.602787,2.856387,7.844785],[4.722700,4.688481,-7.195897,-5.846599,6.629036,-0.734896,5.097175,7.048369,0.644284,5.397053,6.220548,-8.642019],[-3.759907,-2.960344,0.392838,4.528384,-0.951992,8.259767,0.118334,-3.452521,-5.261259,4.216798,5.412676,6.024132],[-1.171686,-7.405210,-7.812199,-7.838645,-5.451251,-9.037640,-4.134694,-4.615396,-2.186114,1.526853,-6.488144,7.670091],[-7.290341,-5.900013,1.415993,9.044073,5.837887,9.907320,-4.207297,-6.996654,-5.407867,-8.707031,-3.287625,6.724338],[-5.198585,-9.928873,-7.438782,-7.448623,-5.527901,9.637507,-1.036066,8.073219,-5.274109,8.937446,-3.921683,1.768706],[4.063349,6.168902,-9.458714,-7.262903,-9.231618,2.749079,-5.738206,2.799047,9.913055,-7.897188,3.407622,0.180885],[-6.247857,4.264663,-6.694952,4.875955,-1.008819,4.466660,-6.892973,-2.211133,-0.850952,8.559831,6.793209,4.550074],[9.857269,-2.612520,8.126231,-3.843818,0.917106,9.237377,-1.159927,0.202297,2.468861,-5.188831,-2.212958,-5.535260],[-2.750896,-6.463239,0.557439,-2.586930,0.289277,6.856745,-8.898919,6.335229,1.244899,4.181306,8.300431,0.978742],[5.578902,-7.669197,-8.498098,-8.215709,8.630152,-4.950699,-5.578518,0.086753,0.335438,2.387278,5.714138,0.783489]]], dtype = "float64")#candidate|4935|(6, 13, 12)|const|float64
bop_4936 = relay.logical_and(call_4926.astype('bool'), relay.reshape(const_4935.astype('bool'), relay.shape_of(call_4926))) # shape=(6, 13, 12)
bop_4939 = relay.logical_and(call_4927.astype('bool'), relay.reshape(const_4935.astype('bool'), relay.shape_of(call_4927))) # shape=(6, 13, 12)
output = relay.Tuple([call_4916,bop_4936,])
output2 = relay.Tuple([call_4917,bop_4939,])
func_4947 = relay.Function([], output)
mod['func_4947'] = func_4947
mod = relay.transform.InferType()(mod)
output = func_4947()
func_4948 = relay.Function([], output)
mutated_mod['func_4948'] = func_4948
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4976 = relay.var("var_4976", dtype = "float64", shape = (16, 4, 16))#candidate|4976|(16, 4, 16)|var|float64
uop_4977 = relay.log10(var_4976.astype('float64')) # shape=(16, 4, 16)
uop_4980 = relay.acosh(uop_4977.astype('float32')) # shape=(16, 4, 16)
output = uop_4980
output2 = uop_4980
func_4983 = relay.Function([var_4976,], output)
mod['func_4983'] = func_4983
mod = relay.transform.InferType()(mod)
var_4984 = relay.var("var_4984", dtype = "float64", shape = (16, 4, 16))#candidate|4984|(16, 4, 16)|var|float64
output = func_4983(var_4984)
func_4985 = relay.Function([var_4984], output)
mutated_mod['func_4985'] = func_4985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3636_call = mod.get_global_var('func_3636')
func_3637_call = mutated_mod.get_global_var('func_3637')
call_4991 = relay.TupleGetItem(func_3636_call(), 0)
call_4992 = relay.TupleGetItem(func_3637_call(), 0)
output = call_4991
output2 = call_4992
func_4999 = relay.Function([], output)
mod['func_4999'] = func_4999
mod = relay.transform.InferType()(mod)
output = func_4999()
func_5000 = relay.Function([], output)
mutated_mod['func_5000'] = func_5000
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5009 = relay.const([[[-2.222333,4.553750,1.782673,3.605630,-1.438935,0.517345,-3.491674,-9.785949],[-8.246101,3.803471,-7.205590,-3.448860,5.163823,9.826782,-0.495641,7.130872],[6.441709,-4.120695,-8.916529,-4.917616,2.781722,1.177095,4.096248,6.917948],[1.001917,-9.873582,-8.035326,-3.666602,-5.280708,-6.342761,1.454284,1.889852],[-9.813024,8.319831,-1.774952,9.804257,2.279765,2.226616,-0.817174,-5.213852],[4.607671,-5.632295,4.746146,-4.775832,-6.906951,2.062818,-1.578578,-7.736328],[-4.406601,-6.436880,0.843211,-9.477848,-6.144727,9.753420,-8.514908,2.710875]],[[-3.941686,-5.567852,-1.629117,9.922294,1.864549,-8.652365,-1.697964,-0.188998],[-0.531573,8.979955,8.488774,4.499918,2.126806,-3.804033,-2.159601,2.497139],[7.600814,3.707927,-3.583269,7.612557,4.732707,-4.539379,-1.785180,-1.238055],[5.179512,3.640454,-1.538114,-8.594381,2.038134,4.724969,-8.106724,8.827891],[-7.161361,-4.091460,0.407209,-9.377358,6.147222,-3.540647,-5.897483,8.082164],[-1.793275,-9.862088,4.607902,-8.784425,4.144611,-0.630831,8.946688,-2.469557],[-8.559893,-3.524262,-0.829081,-3.978553,8.656603,9.649381,-6.630663,7.401478]],[[4.757599,8.461037,0.127465,-1.762777,6.231968,-1.720431,-6.507668,2.487393],[0.371964,-1.834055,-3.496217,-6.435524,-7.508640,9.745081,-2.243431,2.498521],[-4.221928,-9.712427,9.217712,3.834088,0.725896,3.320034,-8.551096,4.309700],[-6.741894,7.387605,-2.577028,3.975826,7.615196,3.174862,9.151812,-9.776546],[0.216324,6.526637,4.255003,-7.936189,7.901312,-0.022464,-5.776408,1.428006],[7.470101,3.531271,-7.346231,-1.379188,-0.370381,3.410238,8.425719,3.213005],[-3.135502,7.544045,6.567058,3.697003,2.380769,-2.352396,5.369853,-1.766412]],[[-4.851204,-3.909150,-9.486204,8.111116,3.942821,6.176715,-6.256997,4.941137],[3.415523,-2.267496,-0.970705,1.957138,6.054476,3.772355,-6.326875,5.057296],[-1.821066,3.296450,8.886051,0.931981,-5.474726,9.499221,0.675857,0.035213],[0.214688,-0.466548,4.948974,9.946060,6.526456,0.850621,-3.755214,6.052360],[2.652070,-3.600952,7.649597,5.952122,-4.597350,-3.113455,6.544753,-7.251494],[2.488954,1.977041,0.691832,0.881886,9.438290,-5.670862,7.356458,-3.584993],[-7.191282,2.689146,-6.933464,8.904956,0.651213,7.812401,-1.780463,7.928381]],[[-8.871573,-7.125896,2.156922,-7.120208,9.396419,0.522934,-7.558244,8.342189],[-9.032009,-2.892198,5.105856,1.338316,3.139497,1.871468,-5.501171,6.279851],[8.978302,-3.678963,2.923402,-8.659239,6.488943,-8.638808,9.089142,7.264942],[-8.274221,5.416462,2.373764,1.795492,9.851526,-8.402708,5.313212,-6.571371],[-1.460633,-5.460485,6.600315,-7.530243,-0.827936,7.218163,-6.635707,1.633558],[-4.487951,-5.638541,8.353789,3.575147,-0.121061,-0.134193,8.949790,4.449122],[-7.979039,-8.180258,-8.279510,-6.024508,1.883950,-4.598256,-8.424685,-5.952864]],[[-3.664174,1.794737,-9.233408,-9.113842,-2.557425,1.621563,3.087104,4.944424],[-6.632607,-9.559762,-7.869618,8.970322,-5.594700,8.846030,0.557423,5.757725],[-3.677142,1.785975,6.771375,-7.738358,-3.947998,-0.596434,-3.978999,4.303439],[2.069639,4.296612,7.245657,0.066731,-1.333566,-0.344612,-3.785533,-5.124323],[-4.489717,-6.445601,4.099034,-8.453866,-4.453481,-8.608606,-0.597340,3.049822],[4.906819,-0.393391,7.940777,-5.580061,-7.628440,6.856714,-9.098873,-0.996180],[8.463215,9.380743,4.225908,-8.087712,-2.677658,-7.754028,7.256279,-2.672665]],[[-8.465658,2.365468,-2.323170,9.383858,-9.210649,0.269447,-2.621869,-2.094815],[-7.481913,9.354661,2.833495,2.654054,-7.148312,-2.677462,4.457834,-7.924500],[3.980477,7.676188,8.244963,7.963940,7.472185,-9.072861,-9.626606,1.783507],[-5.637132,-1.134640,4.345298,6.423522,2.845881,6.896552,-1.370110,-2.091003],[6.266705,3.162718,-4.841783,-3.171498,-4.006787,-9.275278,3.104691,1.944446],[-3.883784,9.496929,-6.179795,0.659730,2.510500,-8.767540,-2.429304,6.327265],[3.608500,-3.961090,5.637919,3.696875,5.711886,-0.993296,-0.263632,4.888074]],[[3.952552,-2.678767,9.928432,3.915584,-0.702828,7.495467,-2.810093,-5.032304],[0.306109,-4.468216,9.693426,-0.566292,4.757896,-5.953383,5.600344,-4.525176],[-5.415463,-5.814256,-9.097287,-8.415038,8.159161,2.491228,9.178482,0.362697],[-1.176877,4.031175,-9.507555,-5.615969,3.753121,8.559924,-0.194259,9.960334],[-9.694026,3.753180,-6.229488,7.284933,6.491521,1.668305,-5.064064,5.509115],[-8.298669,-2.654502,5.745957,-6.747735,4.821940,2.366339,7.860421,3.103759],[-1.375078,-7.652677,-9.878678,-3.531765,-2.597821,-1.260426,9.869146,2.677142]]], dtype = "float32")#candidate|5009|(8, 7, 8)|const|float32
uop_5010 = relay.cosh(const_5009.astype('float32')) # shape=(8, 7, 8)
func_1124_call = mod.get_global_var('func_1124')
func_1126_call = mutated_mod.get_global_var('func_1126')
call_5015 = func_1124_call()
call_5016 = func_1124_call()
output = relay.Tuple([uop_5010,call_5015,])
output2 = relay.Tuple([uop_5010,call_5016,])
func_5017 = relay.Function([], output)
mod['func_5017'] = func_5017
mod = relay.transform.InferType()(mod)
output = func_5017()
func_5018 = relay.Function([], output)
mutated_mod['func_5018'] = func_5018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1541_call = mod.get_global_var('func_1541')
func_1543_call = mutated_mod.get_global_var('func_1543')
call_5019 = relay.TupleGetItem(func_1541_call(), 2)
call_5020 = relay.TupleGetItem(func_1543_call(), 2)
output = relay.Tuple([call_5019,])
output2 = relay.Tuple([call_5020,])
func_5023 = relay.Function([], output)
mod['func_5023'] = func_5023
mod = relay.transform.InferType()(mod)
mutated_mod['func_5023'] = func_5023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5023_call = mutated_mod.get_global_var('func_5023')
call_5024 = func_5023_call()
output = call_5024
func_5025 = relay.Function([], output)
mutated_mod['func_5025'] = func_5025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4349_call = mod.get_global_var('func_4349')
func_4350_call = mutated_mod.get_global_var('func_4350')
call_5065 = relay.TupleGetItem(func_4349_call(), 0)
call_5066 = relay.TupleGetItem(func_4350_call(), 0)
func_1772_call = mod.get_global_var('func_1772')
func_1773_call = mutated_mod.get_global_var('func_1773')
call_5076 = relay.TupleGetItem(func_1772_call(), 2)
call_5077 = relay.TupleGetItem(func_1773_call(), 2)
output = relay.Tuple([call_5065,call_5076,])
output2 = relay.Tuple([call_5066,call_5077,])
func_5078 = relay.Function([], output)
mod['func_5078'] = func_5078
mod = relay.transform.InferType()(mod)
mutated_mod['func_5078'] = func_5078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5078_call = mutated_mod.get_global_var('func_5078')
call_5079 = func_5078_call()
output = call_5079
func_5080 = relay.Function([], output)
mutated_mod['func_5080'] = func_5080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2829_call = mod.get_global_var('func_2829')
func_2830_call = mutated_mod.get_global_var('func_2830')
call_5120 = func_2829_call()
call_5121 = func_2829_call()
output = relay.Tuple([call_5120,])
output2 = relay.Tuple([call_5121,])
func_5131 = relay.Function([], output)
mod['func_5131'] = func_5131
mod = relay.transform.InferType()(mod)
output = func_5131()
func_5132 = relay.Function([], output)
mutated_mod['func_5132'] = func_5132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3714_call = mod.get_global_var('func_3714')
func_3715_call = mutated_mod.get_global_var('func_3715')
call_5148 = func_3714_call()
call_5149 = func_3714_call()
func_893_call = mod.get_global_var('func_893')
func_895_call = mutated_mod.get_global_var('func_895')
call_5150 = relay.TupleGetItem(func_893_call(), 5)
call_5151 = relay.TupleGetItem(func_895_call(), 5)
output = relay.Tuple([call_5148,call_5150,])
output2 = relay.Tuple([call_5149,call_5151,])
func_5183 = relay.Function([], output)
mod['func_5183'] = func_5183
mod = relay.transform.InferType()(mod)
output = func_5183()
func_5184 = relay.Function([], output)
mutated_mod['func_5184'] = func_5184
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5188 = relay.var("var_5188", dtype = "float32", shape = (13, 10, 4))#candidate|5188|(13, 10, 4)|var|float32
uop_5189 = relay.log(var_5188.astype('float32')) # shape=(13, 10, 4)
var_5200 = relay.var("var_5200", dtype = "float32", shape = (13, 10, 4))#candidate|5200|(13, 10, 4)|var|float32
bop_5201 = relay.right_shift(uop_5189.astype('uint64'), relay.reshape(var_5200.astype('uint64'), relay.shape_of(uop_5189))) # shape=(13, 10, 4)
func_3161_call = mod.get_global_var('func_3161')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_5207 = func_3161_call()
call_5208 = func_3161_call()
uop_5216 = relay.exp(var_5188.astype('float64')) # shape=(13, 10, 4)
func_1772_call = mod.get_global_var('func_1772')
func_1773_call = mutated_mod.get_global_var('func_1773')
call_5228 = relay.TupleGetItem(func_1772_call(), 4)
call_5229 = relay.TupleGetItem(func_1773_call(), 4)
func_5078_call = mod.get_global_var('func_5078')
func_5080_call = mutated_mod.get_global_var('func_5080')
call_5234 = relay.TupleGetItem(func_5078_call(), 0)
call_5235 = relay.TupleGetItem(func_5080_call(), 0)
uop_5240 = relay.sin(call_5228.astype('float32')) # shape=(5, 11, 14)
uop_5242 = relay.sin(call_5229.astype('float32')) # shape=(5, 11, 14)
func_2350_call = mod.get_global_var('func_2350')
func_2352_call = mutated_mod.get_global_var('func_2352')
const_5245 = relay.const([[-0.177443,-4.476372,6.856583,-0.488083,4.814697],[-5.837369,2.355722,3.995811,-2.157574,-8.497267],[-3.539706,-2.167771,-6.351370,3.418627,5.677468],[-8.157819,-3.286678,9.133681,-6.519825,-2.460864],[1.172483,5.395269,2.819316,9.611103,4.123898],[6.537294,1.442449,-5.487270,-2.805701,-7.854587],[-3.961458,1.571644,-8.668411,-1.251832,-6.130230],[-2.071084,0.788552,7.471060,-4.158855,6.373455],[-9.487679,9.677955,-9.730033,5.201911,-6.273715],[-6.232895,6.954115,6.501268,4.993707,-4.040046],[5.406782,2.178312,-1.789446,2.577610,2.800036],[1.123207,-7.667484,1.187146,-0.675256,2.504891],[-1.171419,-0.855096,2.732039,8.145721,5.063777],[2.014194,4.534504,-5.386106,5.535921,-5.608154],[-0.769126,-0.868032,8.939273,7.669203,-7.572110]], dtype = "float64")#candidate|5245|(15, 5)|const|float64
call_5244 = relay.TupleGetItem(func_2350_call(relay.reshape(const_5245.astype('float64'), [75,])), 3)
call_5246 = relay.TupleGetItem(func_2352_call(relay.reshape(const_5245.astype('float64'), [75,])), 3)
func_5183_call = mod.get_global_var('func_5183')
func_5184_call = mutated_mod.get_global_var('func_5184')
call_5247 = relay.TupleGetItem(func_5183_call(), 1)
call_5248 = relay.TupleGetItem(func_5184_call(), 1)
func_4420_call = mod.get_global_var('func_4420')
func_4422_call = mutated_mod.get_global_var('func_4422')
call_5258 = relay.TupleGetItem(func_4420_call(), 3)
call_5259 = relay.TupleGetItem(func_4422_call(), 3)
func_437_call = mod.get_global_var('func_437')
func_441_call = mutated_mod.get_global_var('func_441')
const_5265 = relay.const([9,-3,6,-10,2,10,-8,1,8,8,-3,-1,4,9,4,-4,-7,1,-10,10,-7,-9,-5,-4,8,-4,-8,5,-7,-4,8,5,-9,-9,-7,3,1,6,2,10,3,1,1,1,-4,-10,-7,8,-1,-4,-7,-4,-9,-4,-2,1,8,-7,7,6,7,4,1,9,-8,-10,-2,-1,7,-1,2,4,-3,-1,-1,2,5,3,7,-9,6,7,-6,-8,8,9,9,-1,6,-5,-1,6,-4,-5,2,-5,3,-8,-4,9,-4,-1,-4,7,4,-1,-10,4,-8,4,-1,8,-5,-3,3,-9,2,1,-2,-8,-10,-3,5,-4,-6,-3,-9,1,7,3,5,6,3,5,-8,4,-1,-10,-6,-1,3,1,5,8,-5,-4,4,-10,-9,-4,8,-5,-5,-7,-7,5,-2,-6,8,1,-6,6,4,8,-10,8,-10,-9,6,-6,-4,-7,-7,1,6,9,-6,-3,-10,4,3,8,-5,-8,2,-5,7,1,4,7,6,3,10,2,7,8,10,-3,2,5,5,10,-4,6,-5,-8,-9,-4,-5,9,-4,3,-4,8,-8,-1,7,-7,-2,-6,5,7,5,3,10,3,8,8,2,9,1,5,1,6,4,-2,8,-3,3,-2,-7,-4,10,-8,-10,-4,-6,8,2,3,-7,-7,4,-5,-5,7,3,6,5,-8,10,5,-3,-3,6,5,9,-6,1,8,-10,7,-8,7,-6,8,8,-1,-6,-10,-10,-6,6,-4,7,2,-8,-3,3,-10,6,6,-3,7,-1,4,1,-4,5,-3,-9,10,-7,2,2,8,3,-3,10,8,6,-7,-5,3,7,2,4,-1,-4,10,8,5,-1,8,10,-5,1,3,-10,-5,4,-3,9,9,9,-1,-7,-6,7,-2,-3,1,-8,9,-1,-7,4,-5,-3,6,4,-7,-4,-9,-9,5,-7,-6,-1,7,1,-8,3,6,8,8,-9,-2,9,1,-2,2,5,8,-2,1,-8,-8,4,7,-8,-3,9,10,-5,-8,9,8,-5,-1,9,2,-1,-8,-8,7,1,3,-3,10,5,-7,-7,10,1,-10,-3,8,7,-1,5,1,7,-8,8,-10,-5,9,4,-3,-1,5,-9,10,-1,9,6,-3,-3,-5,8,-3,-6,6,-2,-5,4,-4,5,7,4,3,5,5,7,-10,-7,10,7,-5,5,-9,10,-1,9,10,-5,5,10,-7,-2,-10,2,-4,5,6,-7,-8,10,3,-7,-5,7,2,10,2,6,10,-3,-7,-4,-8,-7,2,-6,-9,8,-5,3,-2,-7,-4,-8,3,1,-2,10,-7,-4,6,-4,3,10,6,-5,6,-5,-7,5,6,9,-2,-8,7,8,2,-2,-5,-4,4,1,3,10,-1,-9,10,5,-6,1,-4,9,-2,-4,-1,-9,-8,-5,-6,-1,10,4,-6,10,-1,-5,1,-3,-5,9,5,-3,8,-6,-4,3,-6,4,5,6,-6,-1,5,9,10,5,7,10,7,2,-2,-5,-2,-2,2,3,9,6,-9,-3,4,8,-8,-7,-4,-6,3,-7,-10,-2,-7,2,-10,-1,3,1,3,-9,8,8,6,-10,-7,6,10,-2,4,4,-2,6,-8,-5,8,2,3,-10,3,-9,-9,-8,4,5,-3,3,-3,-5,6,9,-5,10,2,8,-9,8,4,8,-5,8,-3,5,10,6,9,1,-8,-3,-2,6,8,1,9,9,-4,1,-10,5,8,7,7,-3,-1,-5,-7,-4,4,-6,9,-6,4,2,6,3,9,1,-8,-2,1,1,8,-3,-5,7,6,-6,-1,-6,8,-10,9,-4,6,-5,-3,6,-4,-6,-10,2,6,-8,-8,5,4,-2,9,-10,-2,-3,-3,-8,10,7,-9,-7,7,-4,-10,9,-6,-6,7,-1,3,3,5,-5,5,6,-1,1,-8,10,-3,1,2,-6,3,9,1,4,-5,-2,10,-6,-9,-8,-1,-5,9,-6,3,-1,9,-2,4,-6,-4,-9,6,-7,10,2,-6,-6,2,8,-5,-2,1,-5,-10,1,-9,10,6,10,5,-9,-10,-5,-10,10,4,-8,-9,-7,3,-5,-10,10,2,-4,-6,7,-2,2,7,-5,-5,-3,7,-3,10,5,-3,-8,8,4,-6,2,3,-10,-6,-9,-10,-5,-4,7,8,-4,10,-6,3,-2,10,9,-6,4,-5,-4,7,2,-10,5,-5,-9,-2,-3,6,6,-7,-9,-5,6,-6,-5,-2,4,9,7,10,-9,2,7,-7,-2,-9,9,4,4,-8,2,-5,1,6,8,-6,8,10,4,10,2,-8,3,-8,1,5,9,10,6,10,1,2,3,-7,-9,-4,-8,2,4,8,10,-1,-5,-9,-6,-4,4,-10,-10,-6,4,10,2,-3,3,-4,-7,2,-5,-3,-7,-1,5,-9,-6,3,-3,-4,-4,3,-2,-2,3,1,2,-10,4,-3,-3,-5,-5,1,-3,5,3,7,-7,4,-1,-10,2,-6,-1,5,-1,-3,9,6,-10,-1,1,10,-5,9,-1,2,9,8,-7,2,-3,4,-2,4,-1,6,-3,1,-1,5,-9,3,-5,6,4,-9,6,9,-6,-9,-7,1,1,9,2,2,-9,9,-8,5,6,6,-9,-9,9,-4,-5,8,8,-10,9,4,-6,1,10,5,2,-10,-8,10,1,4,10,3,-9,-8,4,-8,7,-6,9,-4,5,-4,5,10,7,-1,6,-4,-9,-5,6,-3,7,9,3,7,-9,8,-2,-9,2,7,-8,-5,3,9,-7,2,4,-8,-7,2,5,-10,-8,-7,3,-10,-4,7,7,7,-8,10,10,-8,4,-3,-10,5,3,8,-7,-6,-3,8,-7,-8,4,7,-5,-3,5,-7,8,-2,-5,9,-1,2,-8,-6,5,-1,1,5,3,6,-3,-2,4,-3,6,-10,7,-1,-10,1,2,-6,-10,-10,10,-10,8,3,-9,10,8,-2,-9,9,1,-7,-2,7,-8,4,2,1,9,1,-10,-1,10,3,-8,1,4,2,2,5,-6,-8,-4,-10,10,-9,4,-9,5,4,-6,-1,-2,4,2,-4,10,-9,-10,7,4,-2,-8,-3,-5,-8,-1,-1,4,6,9,-6,-3,-3,-6,5,-10,8,-8,-3,-7,5,-2,2,-4,-1,10,1,-4,8,-7,-10,8,7,9,10,-10,6,3,-7,-8,-9,-10,4,7,4,5,-2,-1,10,8,-8,4,2,5,4,10,4,6,-3,-1,6,10,6,5,-5,-5,1,8,1,-3,-9,-10,4,-10,-6,4,7,-10,-9,-1,7,-7,7,2,-1,5,-1,-10,1,-3,-2,-1,-5,2,-5,6,8,2,1,5,2,-1,-5,9,-4,4,-3,3,-5,10,7,-4,1,2,2,5,7,7,8,9,10,6,-8,1,-5,3,-1,6,-3,-4,-6,-8,-5,-7,1,-5,-9,6,1,1,10,-5,-1,3,-1,-10,7,2,-1,7,6,6,-2,-3,2,6,-7,5,3,-3,-8,-1,-1,9,3,7,-5,-5,7,-9,-1,3,7,8,-7,-6,6,-9,2,10,-1,3,9,-4,-5,5,9,3,-7,6,2,10,1,6,7,-7,2,-8,-7,9,-7,-5,4,10,9,-7,2,-10,9,4,-1,-6,-10,-5,-9,8,-9,-2,-3,6,10,4,1,5,-9,7,2,4,-8,-1,-3,2,-4,-7,-7,-8,6,-3,5,8,6,3,-9,-2,-5,-5,-1,-4,-3,1,-4,1,10,-1,-1,-6,-6,-7,-7,-3,1,3,-7,9,8,2,-9,-3,4,-4,3,-1,1,4,-6,-10,-5,1,10,1,-7,9,3,-7,-6,-3,-2,-9,-4,-3,-10,-7,8,6,-5,-3,8,-10,-3,-10,-9,9,-9,6,-1,-4,-4,7,-9,7,10,10,-3,10,9,-7,5,2,6,7,-7,-2,2,-2,-2,6,-2,-3,9,2,-5,8,7,-4,-10,-2,-10,7,-4,4,9,-2,-8,-5,-8,7,-8,-3,-9,-1,8,5,10,1,-2,-1,-4,-3,8,1,6,1,-7,10,3,-2,-5,-10,-8,10,-5,2,-6,4,-4,1,-3,4,7,3,-5,1,-3,-6,4,-2,7,-10,10,8,-7,3,-1,9,1], dtype = "int64")#candidate|5265|(1560,)|const|int64
call_5264 = relay.TupleGetItem(func_437_call(relay.reshape(call_5258.astype('int64'), [120,]), relay.reshape(const_5265.astype('int64'), [6, 260]), ), 4)
call_5266 = relay.TupleGetItem(func_441_call(relay.reshape(call_5258.astype('int64'), [120,]), relay.reshape(const_5265.astype('int64'), [6, 260]), ), 4)
bop_5267 = relay.logical_and(uop_5240.astype('bool'), relay.reshape(call_5228.astype('bool'), relay.shape_of(uop_5240))) # shape=(5, 11, 14)
bop_5270 = relay.logical_and(uop_5242.astype('bool'), relay.reshape(call_5229.astype('bool'), relay.shape_of(uop_5242))) # shape=(5, 11, 14)
func_2245_call = mod.get_global_var('func_2245')
func_2246_call = mutated_mod.get_global_var('func_2246')
call_5275 = relay.TupleGetItem(func_2245_call(), 0)
call_5276 = relay.TupleGetItem(func_2246_call(), 0)
var_5290 = relay.var("var_5290", dtype = "float64", shape = (13, 10, 4))#candidate|5290|(13, 10, 4)|var|float64
bop_5291 = relay.multiply(uop_5216.astype('int32'), relay.reshape(var_5290.astype('int32'), relay.shape_of(uop_5216))) # shape=(13, 10, 4)
output = relay.Tuple([bop_5201,call_5207,call_5234,call_5244,const_5245,call_5247,call_5258,call_5264,const_5265,bop_5267,call_5275,bop_5291,])
output2 = relay.Tuple([bop_5201,call_5208,call_5235,call_5246,const_5245,call_5248,call_5259,call_5266,const_5265,bop_5270,call_5276,bop_5291,])
func_5294 = relay.Function([var_5188,var_5200,var_5290,], output)
mod['func_5294'] = func_5294
mod = relay.transform.InferType()(mod)
mutated_mod['func_5294'] = func_5294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5294_call = mutated_mod.get_global_var('func_5294')
var_5296 = relay.var("var_5296", dtype = "float32", shape = (13, 10, 4))#candidate|5296|(13, 10, 4)|var|float32
var_5297 = relay.var("var_5297", dtype = "float32", shape = (13, 10, 4))#candidate|5297|(13, 10, 4)|var|float32
var_5298 = relay.var("var_5298", dtype = "float64", shape = (13, 10, 4))#candidate|5298|(13, 10, 4)|var|float64
call_5295 = func_5294_call(var_5296,var_5297,var_5298,)
output = call_5295
func_5299 = relay.Function([var_5296,var_5297,var_5298,], output)
mutated_mod['func_5299'] = func_5299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_242_call = mod.get_global_var('func_242')
func_244_call = mutated_mod.get_global_var('func_244')
call_5378 = relay.TupleGetItem(func_242_call(), 0)
call_5379 = relay.TupleGetItem(func_244_call(), 0)
func_1270_call = mod.get_global_var('func_1270')
func_1274_call = mutated_mod.get_global_var('func_1274')
const_5385 = relay.const([-3,-6,5,9,10,9,9,-3,2,-10,10,7,-3,3,-1,-10,5,5,1,2,-2,-7,-4,10,2,5,3,-5,-8,6,9,4,-1,-4,1,-2,-8,3,-3,8,-1,7,-4,4,-3,9,-4,5,-2,-8,4,5,10,4,1,9,4,7,10,-9,-2,4,3,-3,-8,-9,10,-4,4,-4,-9,-6,-10,-2,8], dtype = "uint32")#candidate|5385|(75,)|const|uint32
const_5386 = relay.const([2,-8,-9,-2,-4,9,5,-6,3,-3,-4,-7,5,5,1,-3,-7,9,-4,3,10,-1,7,-5,9,7,10,-8,-3,6,10,8,2,3,6,1,-8,-4,-2,-9,8,4,10,-3,-4,-7,-10,-4,-10,-8,3,-4,-4,9,-7,6,-2,7,10,-5,1,-1,-6,-5,3,5,-5,-8,7,-4,4,4,-10,-10,-1,7,6,4,4,-10,-5,5,-6,-8,10,9,-3,2,4,-4,-6,6,8,3,3,10,-10,7,-8,9,8,2,1,-5,-5,-9,-7,-10,-8,8,8,-9,-5,-2,-5,10,1,5,5,8,-8,-10,5,-1,-5,-4,6,-1,4,-3,6,-2,-7,-10,8,4,-6,-10,-6,-6,9,6,-5,-8,2,-8,7,9,9,-8,-9,3,-7,-8,6,-6,6,-10,-10,-10,2,-3,9,4,-1,-7,7,8,4,8,10,5,-7,6,5,-10,-7,-9,4,4,-8,-8,10,-8,1,-4,-2,-8,-4,-6,2,8,-8,-6,10,10,1,-2,3,7,8,5,-10,8,-7,3,-10,-9,-7,1,-4,-5,8,-8,-9,-4,-6,-8,-2,-10,-3,-8,-5,-1,1,2,-4,10,6,4,-1,-6,-9,-5,3,10,10,10,7,10,5,1,10,-3,9,6,8,-9,6,-8,7,6,-7,5,-8,-10,-10,4,4,8,7,-3,6,1,-4,-3,-8,2,-5,-9,-3,-6,2,3,-7,9,-5,-10,6,2,-2,-3,-4,-6,-2,-4,6,10,-1,-7,-3,4,-1,-8,-8,7,7,-2,4,2,5,-1,-7,2,-3,8,-5,6,9,-5,6,8,-1,-6,8,-1,3,5,-2,-8,6,-2,10,-1,2,7,7,1,4,2,-5,-7,4,10,3,-2,-6,3,2,5,9,4,-7,-3,4,5,8,-10,7,10,-10,8,9,-3,5,-7,-10,-10,9,10,-1,-5,-8,-3,8,5,-8,-3,-6,7,4,6,8,3,-1,3,7,-1,4,9,9,-10,-9,-3,-9,6,6,-1,8,-2,-8,-1,2,1,-7,-9,-6,-5,-2,-2,9,-8,2,9,-5,10,-7,-8,2,6,10,8,-4,3,-1,1,-4,5,8,7,7,7,-8,-3,-2,4,4,-10,-6,8,-7,-7,10,1,6,-3,7,6,-3,-10,8,9,-7,-2,-1,10,9,-10,-9,-9,1,9,10,-5,-4,9,8,-4,6,-8,6,4,-7,-6,-7,1,-5,-6,-6,9,6,10,6,9,-1,9,-8,5,-9,-2,-8,-4,3,-7,3,-9,-3,-2,-2,-3,1,2,-6,5,-10,4,9,-10,-8,-3,4,-9,-10,8,-4,-7,-4,4,-4,5,-3,-1,-7,-5,7,-7,10,7,-6,2,-7,-5,-5,-1,8,-4,-7,3,5,10,-8,4,2,5,-8,10,-5,-6,-5,-1,5,2,-2,7,-5,-1,5,-10,-7,-6,4,-10,-4,1,-5,2,8,3,1,9,-6,-10,4,-9,6,5,3,1,2,-7,-4,9,5,4,-2,1,-3,-1,2,7,-5,-10,-8,6,-2,-6,-3,8,7,-1,7,6,-6,7,7,6,6,10,8,3,10,6,-6,-1,-8,-9,8,-5,6,-2,5,5,-5,-7,-3,-3,-2,8,3,9,4,6,-7,4,-2,6,-6,9,6,-4,-8,3,6,-8,-1,-2,-8,6,-9,1,-9,-9,10,4,-5,6,-5,-3,-10,-10,9,5,10,5,4,-5,2,5,3,7,-10,-1,-2,6,5,-3,7,4,-9,-1,2,5,-7,8,-2], dtype = "uint32")#candidate|5386|(675,)|const|uint32
call_5384 = func_1270_call(relay.reshape(const_5385.astype('uint32'), [15, 5, 1]), relay.reshape(const_5386.astype('uint32'), [15, 5, 9]), )
call_5387 = func_1270_call(relay.reshape(const_5385.astype('uint32'), [15, 5, 1]), relay.reshape(const_5386.astype('uint32'), [15, 5, 9]), )
output = relay.Tuple([call_5378,call_5384,const_5385,const_5386,])
output2 = relay.Tuple([call_5379,call_5387,const_5385,const_5386,])
func_5403 = relay.Function([], output)
mod['func_5403'] = func_5403
mod = relay.transform.InferType()(mod)
mutated_mod['func_5403'] = func_5403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5403_call = mutated_mod.get_global_var('func_5403')
call_5404 = func_5403_call()
output = call_5404
func_5405 = relay.Function([], output)
mutated_mod['func_5405'] = func_5405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1496_call = mod.get_global_var('func_1496')
func_1497_call = mutated_mod.get_global_var('func_1497')
call_5420 = relay.TupleGetItem(func_1496_call(), 1)
call_5421 = relay.TupleGetItem(func_1497_call(), 1)
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
const_5432 = relay.const([2.178512,9.570154,3.118690,-5.573640,-6.898151,-9.568753,6.444342,-1.475206,-7.673863,9.451864,6.976694,2.847991,7.868125,-4.817027,-2.443545,-6.377198,3.108107,-3.712360,4.186010,-1.901746,7.206478,6.842864,-8.637811,5.851735,-6.568724,-1.052437,-6.691283,-5.015917,-2.629295,-2.351663,-4.825883,9.145938,-1.836429,-0.751044,-5.601839,-1.742906,7.981251,-4.326695,8.470187,-1.372194,-6.142589,4.653455,4.676726,6.555700,-9.622743,-6.435938,-8.278074,-1.897069,6.739928,-5.062611,5.580975,-2.026060,7.613693,-5.541302,-5.893456,-4.606313,6.538458,1.613581,6.630170,-7.300327,-3.776124,-4.362849,-5.035328,5.211959,9.451318,-3.315164,-4.611790,-6.560462,7.444051,-5.455582,0.777936,9.526552,-0.005648,9.673115,0.405020,0.248744,8.724112,-2.229442,-4.269813,4.617539,-4.498796,-0.488097,-1.563555,-5.062298,2.726753,4.550144,6.433069,1.566496,9.187890,1.669776,3.208947,-0.926610,9.663075,-6.038918,7.631506,0.908485,7.679011,-2.714764,-2.449836,-3.996939,-9.562609,5.703001,-2.067761,8.079331,9.800640,-6.763862,-8.694046,5.181441,3.333666,4.716730,-4.673843,-9.655764,5.465724,5.593662,0.076865,2.146493,-6.396770,4.442999,-7.716288,-2.302872,-1.057209,-9.827540,-6.396648,-8.302876,8.482308,-9.693601,-6.226416,-0.654653,4.881689,-6.804211,8.507782,-7.653844,-0.585794,-4.171582,8.814480,-0.903599,7.141062,-8.515462,8.077765,2.237572,-8.117556,-7.522206,3.325616,-4.246383,-4.373813,6.651436,1.632553,5.792020,-3.724029,-5.878105,8.122202,2.123111,1.045934,-4.817854,-9.922324,0.740131,0.131940,1.239443,-1.398001,8.372561,-4.968848,-6.844687,1.045066,6.397619,8.220715,4.148746,4.213963,1.629439,-6.699713,4.131357,-9.406335,3.376613,-1.006866,-0.357878,9.091088,4.022219,-6.990822,1.608369,-9.819625,6.083470,-7.229556,-1.915366,3.586743,-6.069112,4.275155,-5.638749,-2.153071,5.631628,5.719723,-3.691141,4.496527,-6.638897,0.597602,3.716063,0.314342,-6.438674,2.774127,2.547527,-7.054232,-1.918830,4.726454,5.748995,0.048911,-3.613809,-3.444213,4.794216,-2.378787,-1.178708,6.460003,3.640510,-0.031575,-2.075451,-4.278565,7.011794,5.981907,-6.190092,-5.244405,-5.917083,-9.701873,-6.320630,0.427284,0.671820,-8.029569,-2.128474,9.021490,-2.042741,8.578037,-0.915423,-8.260827,-6.512581,2.709225,-0.036668,4.002536,1.377391,5.958692,-9.932495,6.925560,-5.258684,4.604300,8.866824,4.596130,2.841529,-4.093665,-3.798922,4.116393,-0.606607,-1.221559,-3.495163,-9.531014,4.282226,-9.902276,-8.821929,3.171994,0.970236,4.278514,-6.375719,-3.302397,7.106479,4.786823,7.671620,8.747930,9.430611,-4.524968,1.318142,-9.703004,-7.367236,-2.365135,-4.633616,5.281784,6.584250,7.902871,8.753670,2.801805,-9.751222,9.716309,2.817853,-9.777444,-0.740133,-1.045791,1.717136,-6.840409,4.377811,-8.777346,6.440065,8.664225,3.636998,-5.421145,-1.134721,2.448755,-3.603699,-8.356607,2.367716,-6.200211,4.947228,8.105435,2.562127,-9.919518,5.629400,9.901671,7.254892,2.539537,6.037061,2.419818,4.375522,-1.325602,6.879078,9.149848,2.376520,-3.765946,-5.315776,9.567394,-8.714021,7.110526,3.103873,-6.737281,6.046393,3.209399,9.142364,6.162007,5.176055,-3.130559,-2.138494,-0.071033,5.712201,4.400643,-6.083163,-6.700981,-8.803835,-8.001376,-3.442016,-6.536195,-8.824725,-4.160082,9.495376,-6.693589,4.905558,2.706799,-5.035476,-8.601566,2.760772,-3.228509,-8.951894,-7.720402,-7.601940,-8.548030,0.269204,-7.347588,-3.292358,2.528331,-9.632734,4.440295,-0.714571,-2.346147,-4.102860,-8.577309,-2.745933,4.835445,3.803467,3.796690,6.491154,-7.566648,6.574861,-9.795109,7.073625,8.044812,-6.954242,-7.297560,1.033608,3.316158,0.223761,0.656364,-2.191963,-4.445463,-9.747182,2.976503,-1.885703,-7.003721,2.734663,4.007535,-9.761655,-0.547893,4.907109,0.126860,5.305786,-1.466828,6.164470,-3.962479,3.593246,2.899183,7.248041,0.870615,7.534647,5.099490,-0.653077,9.811427,2.146657,3.267676,-9.233763,5.276045,-3.543159,-5.015100,-6.993781,8.305846,-4.001191,7.105726,-2.284319,2.425578,1.749442,-7.778604,9.120332,-8.840361,7.191437,-5.264380,7.272562,-6.033926,7.532812,8.863123,8.316288,0.095051,4.145552,1.008837,4.054632,4.515752,7.874357,1.809539,-3.433869,6.785849,7.723964,1.092067,-3.557955,-5.323489,5.794735,4.456704,4.839021,-2.984539,2.046611,-3.860469,-6.949430,8.290077,0.791402,-5.019285,7.516771,7.828107,4.140952,3.992540,-1.850592,-1.511886,5.362562,2.401209,-0.629607,9.591977,9.912671,2.036930,-5.195460,-9.577422,6.781875,6.514541,-7.778765,7.706353,2.772968,0.314393,5.224346,3.799137,5.374729,5.401791,-0.505833,-4.658035,-9.522980,5.852880,-9.771604,-4.251374,5.335197,-1.522797,-4.285104,7.828494,-7.362610,-2.889414,-9.717379,-9.259399,-6.572299,-1.513854,4.415363,-4.481697,-0.885538,-5.925463,2.235270,-3.226455,-8.433348,7.763757,-0.439843,-6.044757,8.524088,-0.164588,9.143606,-6.613485,-7.664579,-6.495544,6.859982,5.229678,6.209059,-2.306680,-0.218879,5.531254,-2.489829,-8.601769,6.353713,8.239567,2.990809,8.374569,2.193376,-4.814335,-5.856649,2.501758,0.982377,5.317155,-8.449035,-6.950785,-7.946759,6.502531,-1.177258,7.160687,-5.559376,-3.916249,8.428399,-7.201031,2.557282,-8.136679,-3.230958,2.469508,9.450906,-2.966888,3.682203,-0.865592,-6.913046,-4.327274,1.548863,-3.612710,-9.484274,8.356762,-2.768323,-7.661761,-2.334558,6.019772,-8.467556,4.530226,9.294648,3.950401,-3.000734,-0.552391,5.335526,4.437064,5.047362,8.943014,-1.810598,7.254156,-6.391587,7.540508,-3.723188,6.717915,3.173162,-1.177701,-0.594291,8.304240,-3.872659,9.363019,-4.293217,-9.274999,2.522718,-6.766752,9.752969,-6.875793,6.538514,-4.540154,0.553352,7.128374,-6.940588,7.581881,7.665461,2.098859,4.137095,-6.011665,5.562427,8.336298,-2.136064,6.998955,5.429595,7.532845,8.204971,-0.909294,-6.645316,7.752514,-9.217584,6.840085,-9.563914,9.148083,-3.925604,1.421198,-1.031706,-9.156971,-8.271467,-1.485848,2.110508,4.651971,-4.683729,1.953771,2.633560,3.550438,-0.222723,6.492785,-3.940590,-7.768092,-8.164162,-5.506889,-8.715029,7.832680,-4.881685,-0.563765,-7.852260,-4.173700,0.391442,8.023450,7.185158,-4.625817,2.009246,-7.749804,-9.964404,-6.076349,-1.246672,-1.107166,5.602428,-7.429382,4.595626,-4.219448,-3.587068,-6.309290,-9.443055,-3.358907,3.912653,4.642677,-0.866130,-6.802125,-8.961186,-1.532986,0.583853,4.862799,-5.726769,4.006723,-3.106652,6.276405,-3.135374,9.988848,4.755108,-7.926246,-7.642005,-6.965016,3.088361,-0.551316,6.818737,4.430158,5.579152,-6.071014,-8.755939,2.509628,0.161169,6.889938,9.017717,-9.951131,-0.116131,2.119164,8.614594,4.375020,-3.861630,-8.546597,-0.876668,-9.021166,2.705192,-2.421628,-8.959323,-9.533553,-1.515171,-0.918262,-9.405834,4.065788,5.477641,-1.939265,-9.709401,-3.715532,9.481205,-3.610407,-2.226461,4.943696,1.288391,9.358511,2.236069,0.687370,5.445365,8.239653,2.587746,-7.105585,2.733394,4.657525,-3.284054,-2.935238,-9.464256,-9.013101,-5.579722,-8.246100,7.352746,6.202307,-0.570148,-4.417403,-1.934996,0.484642,-9.969882,3.846681,-7.163462,9.330491,-3.858403,-5.821332,1.009888,8.768458,-8.581551,6.507947,3.766278,6.421343,-0.270090,3.920284,0.841593,-4.377145,-5.734618,-6.060611,-3.594086,8.951222,9.396688,6.875583,-7.483401,-0.689929,5.961827,-2.308646,0.229785,-3.068453,-2.306886,-9.482473,-8.531015,1.971930,-3.749900,-5.270918,-1.142409,5.860872,5.587001,-9.855199,7.350874,1.110952,-8.890024,6.299172,7.235964,0.815100,7.912828,5.019841,-7.096751,-5.595221,-1.394088,8.385180,9.743918,4.174825,-2.964577,-0.682266,-8.575687,-7.715590,-8.910019,-6.173419,4.903125,3.278745,-8.973156,-1.749397,3.979105,5.607459,2.950169,-1.529584,-4.560978,-4.500384,3.089123,-2.312443,-0.832689,7.557641,6.955148,-3.606700,2.810508,8.141948,-1.044151,6.574967,7.312954,-6.485344,2.070315,2.431893,-2.115866,-4.152668,-7.576311,7.134773,1.067858,7.253793,3.474474,8.122104,3.894632,-1.203341,4.095526,-6.198615,-5.269681,1.575598,3.319342,4.303024,-5.293562,-3.527595,1.390388,3.777723,-7.442054,5.056099,-7.927167,-0.203027,6.511602,-8.679527,-5.438750,2.373253,0.866853,8.049675,7.775290,-2.304560,-5.090323,8.014251,-4.488448,1.370813,7.657059,-9.809971,9.388810,-9.975836,7.558608,2.227746,2.712382,7.024755,-7.075470,9.053946,6.217710,2.440294,-4.672646,2.906675,-2.535520,7.680314,2.317929,3.424077,7.174694,-5.517176,-0.882610,-8.642371,-2.237511,-1.744826,-8.572801,9.366829,1.052981,-3.129000,2.945703,8.943834,-3.432047,8.113047,-8.135892,-1.799800,-7.472829,3.033858,3.703859,-9.465933,4.887964,-8.791328,0.962380,5.226477,-5.867014,-3.750092,-5.372204,8.212582,9.298151,-2.105206,-8.872699,6.156218,0.613559,6.471122,-1.944379,3.535811,7.033026,-7.988515,1.910146,6.731025,9.159841,0.720982,9.254322,-8.749709,6.635350,1.127645,5.278295,6.916530,1.569378,1.876735,-6.606524,8.463163,-0.477103,-9.657614,2.069586,-4.280730,-2.298976,-1.805224,-0.425645,-3.039610,-8.685050,2.228321,-1.903761,-7.934960,-8.422319,2.256805,-7.959133,-3.006143,-1.045957,-6.200957,-6.919448,-3.806453,-6.256134,7.495387,2.875768,5.652279,2.694335,-8.553213,7.361004,5.170243,-3.035314,-7.763664,5.436271,-4.034640,-0.283726,0.157674,8.759573], dtype = "float64")#candidate|5432|(936,)|const|float64
call_5431 = func_64_call(relay.reshape(const_5432.astype('float64'), [6, 13, 12]), relay.reshape(const_5432.astype('float64'), [6, 13, 12]), )
call_5433 = func_64_call(relay.reshape(const_5432.astype('float64'), [6, 13, 12]), relay.reshape(const_5432.astype('float64'), [6, 13, 12]), )
uop_5442 = relay.sin(call_5431.astype('float64')) # shape=(6, 13, 12)
uop_5444 = relay.sin(call_5433.astype('float64')) # shape=(6, 13, 12)
func_4557_call = mod.get_global_var('func_4557')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_5445 = relay.TupleGetItem(func_4557_call(), 1)
call_5446 = relay.TupleGetItem(func_4558_call(), 1)
output = relay.Tuple([call_5420,const_5432,uop_5442,call_5445,])
output2 = relay.Tuple([call_5421,const_5432,uop_5444,call_5446,])
func_5452 = relay.Function([], output)
mod['func_5452'] = func_5452
mod = relay.transform.InferType()(mod)
output = func_5452()
func_5453 = relay.Function([], output)
mutated_mod['func_5453'] = func_5453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2939_call = mod.get_global_var('func_2939')
func_2941_call = mutated_mod.get_global_var('func_2941')
call_5459 = relay.TupleGetItem(func_2939_call(), 0)
call_5460 = relay.TupleGetItem(func_2941_call(), 0)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_5462 = relay.TupleGetItem(func_2637_call(), 2)
call_5463 = relay.TupleGetItem(func_2638_call(), 2)
func_1668_call = mod.get_global_var('func_1668')
func_1669_call = mutated_mod.get_global_var('func_1669')
call_5500 = relay.TupleGetItem(func_1668_call(), 0)
call_5501 = relay.TupleGetItem(func_1669_call(), 0)
func_2637_call = mod.get_global_var('func_2637')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_5525 = relay.TupleGetItem(func_2637_call(), 1)
call_5526 = relay.TupleGetItem(func_2638_call(), 1)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_5527 = func_807_call(relay.reshape(call_5525.astype('float32'), [11, 13, 13]))
call_5528 = func_807_call(relay.reshape(call_5525.astype('float32'), [11, 13, 13]))
func_3017_call = mod.get_global_var('func_3017')
func_3019_call = mutated_mod.get_global_var('func_3019')
call_5529 = relay.TupleGetItem(func_3017_call(), 2)
call_5530 = relay.TupleGetItem(func_3019_call(), 2)
func_3967_call = mod.get_global_var('func_3967')
func_3968_call = mutated_mod.get_global_var('func_3968')
call_5539 = relay.TupleGetItem(func_3967_call(), 0)
call_5540 = relay.TupleGetItem(func_3968_call(), 0)
func_3067_call = mod.get_global_var('func_3067')
func_3069_call = mutated_mod.get_global_var('func_3069')
call_5541 = relay.TupleGetItem(func_3067_call(), 0)
call_5542 = relay.TupleGetItem(func_3069_call(), 0)
func_4344_call = mod.get_global_var('func_4344')
func_4346_call = mutated_mod.get_global_var('func_4346')
call_5555 = relay.TupleGetItem(func_4344_call(), 0)
call_5556 = relay.TupleGetItem(func_4346_call(), 0)
func_1060_call = mod.get_global_var('func_1060')
func_1063_call = mutated_mod.get_global_var('func_1063')
const_5563 = relay.const([[6,6],[2,7],[8,-2],[-2,-10],[9,-4],[10,3],[-4,-2],[2,2],[-9,3],[10,7],[-9,3],[-3,-6],[2,7],[9,9],[-9,-10],[-4,9],[3,-7],[6,-3],[5,6],[-8,-2],[2,4],[7,7],[-2,-9],[1,2],[-1,-7],[4,-2],[5,-7],[-10,-5],[6,6],[-3,-1],[1,-3],[-9,-8],[-7,7],[-6,-8],[-7,-4],[-4,1],[-8,-3],[-1,-6],[-4,5],[-8,-4],[-8,4],[-2,-5],[-7,-7],[-7,1],[5,-6],[10,-9],[5,-10],[8,5],[6,10],[-4,-8],[5,4],[-4,-9],[8,-7],[1,3],[-1,6],[6,5],[-3,-2],[1,9],[-3,-10],[-7,8]], dtype = "int64")#candidate|5563|(60, 2)|const|int64
call_5562 = relay.TupleGetItem(func_1060_call(relay.reshape(const_5563.astype('int64'), [120,])), 0)
call_5564 = relay.TupleGetItem(func_1063_call(relay.reshape(const_5563.astype('int64'), [120,])), 0)
func_3581_call = mod.get_global_var('func_3581')
func_3582_call = mutated_mod.get_global_var('func_3582')
call_5572 = relay.TupleGetItem(func_3581_call(), 0)
call_5573 = relay.TupleGetItem(func_3582_call(), 0)
bop_5574 = relay.minimum(call_5459.astype('int32'), relay.reshape(call_5555.astype('int32'), relay.shape_of(call_5459))) # shape=(936, 1)
bop_5577 = relay.minimum(call_5460.astype('int32'), relay.reshape(call_5556.astype('int32'), relay.shape_of(call_5460))) # shape=(936, 1)
bop_5579 = relay.multiply(bop_5574.astype('uint64'), relay.reshape(call_5459.astype('uint64'), relay.shape_of(bop_5574))) # shape=(936, 1)
bop_5582 = relay.multiply(bop_5577.astype('uint64'), relay.reshape(call_5460.astype('uint64'), relay.shape_of(bop_5577))) # shape=(936, 1)
output = relay.Tuple([call_5462,call_5500,call_5525,call_5527,call_5529,call_5539,call_5541,call_5562,const_5563,call_5572,bop_5579,])
output2 = relay.Tuple([call_5463,call_5501,call_5526,call_5528,call_5530,call_5540,call_5542,call_5564,const_5563,call_5573,bop_5582,])
func_5585 = relay.Function([], output)
mod['func_5585'] = func_5585
mod = relay.transform.InferType()(mod)
output = func_5585()
func_5586 = relay.Function([], output)
mutated_mod['func_5586'] = func_5586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4420_call = mod.get_global_var('func_4420')
func_4422_call = mutated_mod.get_global_var('func_4422')
call_5603 = relay.TupleGetItem(func_4420_call(), 3)
call_5604 = relay.TupleGetItem(func_4422_call(), 3)
func_64_call = mod.get_global_var('func_64')
func_68_call = mutated_mod.get_global_var('func_68')
const_5610 = relay.const([-9.414821,2.794066,4.697265,8.370574,7.097694,-4.719085,2.696314,-8.816981,-9.373390,-0.224197,4.466680,4.762484,-4.959781,-5.528782,-4.033783,-6.856352,4.531838,-1.587060,1.899258,5.614707,-2.517177,8.703988,6.940844,-3.292739,-3.898228,6.265510,-5.199066,1.173956,4.579351,-5.842879,1.943349,-7.924029,-2.530590,8.836836,9.591567,-1.152732,6.650989,3.346651,5.347032,-0.681916,-6.914424,0.306349,6.749552,8.601488,-0.027978,-4.036850,-7.048312,-7.882207,4.152626,-4.322819,-6.798618,8.019914,-5.454463,0.263158,-0.445207,9.451481,9.965657,9.551727,-1.769018,5.064277,-9.327700,-0.292080,-1.731070,-2.842388,3.385716,-0.552681,2.023196,4.790564,-6.144316,-1.797525,-7.390607,1.107031,-6.900256,-8.962323,9.059142,-8.485211,-8.077715,-7.251493,9.729251,-5.733097,6.578949,7.131838,-7.687601,4.370786,0.088527,-7.911810,5.406504,3.906776,-4.275872,-4.235893,9.168082,-9.864934,-8.534655,-2.491304,7.876155,-5.076826,-7.665333,3.336258,-5.157025,9.150842,-6.908678,4.627929,-3.973897,-2.839937,0.384129,-9.132202,7.757628,-6.998059,-6.217922,8.476548,5.987189,-5.190561,2.733956,3.926497,-4.014303,6.221139,-8.858969,7.293452,2.238807,7.124799,-2.349093,6.244838,-8.434295,0.752071,0.848307,-3.848103,-6.871514,-6.432892,9.447762,5.555817,-2.125997,-4.664578,-1.640176,3.451009,9.993361,-5.596889,5.170144,3.674764,3.259656,-2.510772,-7.367372,4.173791,9.895403,-6.971695,4.969144,4.367503,8.610109,-0.947730,9.427067,8.548525,1.604681,-2.742035,-7.611145,-8.735388,8.441534,-4.363386,-2.719591,-6.160282,5.697268,-2.167211,9.052469,-1.545868,3.110741,-5.435617,4.066700,-4.964070,5.846538,4.485416,-7.313170,0.848123,-7.339295,0.817515,8.047244,-6.656987,4.095722,-3.887857,-9.297638,8.921697,7.893467,-8.632971,7.597353,9.559665,-7.551862,-8.201362,5.368119,-7.004780,1.341047,-8.066147,8.300137,5.259780,6.977364,4.175157,4.009713,0.926751,-4.283127,1.424989,-4.682592,-0.524143,8.275951,-6.526588,-0.296804,-7.173319,-7.943731,3.038167,4.791722,-1.135516,-0.700063,9.003151,-7.302630,-0.664392,-4.696780,7.964440,0.937181,4.801756,-1.700293,5.648877,-4.347460,0.553335,-9.104024,6.698912,9.509198,-5.971099,1.329072,6.014253,-0.706375,1.688514,4.290550,-9.150295,-2.455339,4.375712,9.529080,-5.358324,-4.561867,-6.807404,-5.233699,8.759736,-8.434901,1.550220,9.663826,7.198976,-3.837708,-5.121553,8.538658,-2.935796,8.947140,5.269175,-1.948962,-7.993411,1.584113,6.175725,-0.829456,8.262325,-1.897051,8.632969,-9.694866,-2.252840,9.746366,-1.797753,7.137724,-7.640043,9.203817,5.758748,1.216175,-1.854481,-4.450603,-1.708022,-4.289028,1.146563,-0.483241,-1.630116,-7.762345,-2.751595,-2.618683,-9.637450,4.865754,-3.696924,-3.254801,9.039593,8.568452,-3.142276,2.544821,0.406997,3.801603,1.094059,5.278805,-0.468231,-0.944452,6.204926,2.536847,-5.782932,-6.597788,1.151755,-0.837148,0.642921,0.316265,1.870719,-2.961973,-9.625438,-0.602111,-1.906414,-1.442566,2.254137,6.178099,1.970689,-2.737174,9.787962,-1.256576,-0.327789,4.996352,-4.851813,3.625257,-9.176093,-2.473373,1.995254,-6.301748,-6.686420,-9.021479,7.739669,-8.590144,6.018915,-3.101602,-8.925394,3.199269,8.195210,-7.371234,7.965994,5.923199,5.442551,4.828292,-3.233658,-9.113850,-3.083649,-2.041978,-5.204053,-7.486714,-0.709248,0.086680,0.944162,4.368831,1.316522,-3.158617,6.685723,-9.524031,-4.833571,-2.372164,4.364336,6.132568,9.132279,1.431491,9.757249,1.807137,-6.439943,-0.407605,-5.083972,-8.270063,7.637065,-6.901748,8.294043,3.655973,-1.618313,-6.414118,4.958928,3.529263,-9.892203,-5.563356,-3.589604,0.978581,-3.274087,-4.806065,3.599477,0.890603,-3.971490,8.388051,-6.756345,4.212310,-5.136066,7.642759,2.990663,1.713055,1.005804,2.063769,4.226448,6.857476,-1.355502,-0.195427,-7.658555,-7.506307,-2.321488,-7.759199,6.944807,7.935802,-9.732975,0.714393,-9.844493,4.212987,-9.491538,8.008805,2.368580,-7.085518,4.506759,4.774057,-0.170055,-4.300865,4.851212,9.106365,-0.142550,7.363786,4.458367,-6.919425,7.338446,-4.565712,0.631125,6.950314,-4.830045,-3.699311,8.265093,8.457274,-5.584007,-9.062104,7.798838,-5.393721,-7.288979,-3.880110,-3.786981,3.863127,-1.024822,1.521871,-7.682503,-6.184820,-5.952278,-4.674185,-3.384464,4.827168,0.903682,-0.747295,-8.578053,-6.952126,-7.235381,-9.126020,7.110219,-8.507659,4.595875,7.269319,2.545999,-3.809777,2.901410,7.387121,6.293240,-8.861921,-6.199438,4.448951,0.407616,8.590000,-0.729846,-7.806995,-9.482091,6.838243,-7.803171,4.660428,-7.597451,-1.741067,-8.497103,7.062499,-6.273572,-0.657746,-0.280676,7.919743,7.737736,-4.473383,4.813424,3.522355,8.707088,6.987399,-3.349855,4.560031,9.327155,-4.167033,7.427023,6.246128,6.058504,-7.546789,0.948843,0.649337,7.376092,-6.503596,-0.590601,-9.919564,-0.169745,4.685547,-0.807023,3.010460,-2.163562,8.568657,5.984123,-7.833255,-0.942685,-3.472646,-0.307093,-5.023994,3.275750,-2.328635,-7.994560,-8.535553,1.837101,2.674042,-8.732508,2.862298,-5.651467,8.953827,9.297777,-3.059800,-7.546032,9.957261,-2.267140,-2.916007,-9.075447,1.119311,8.604282,7.677869,-1.207464,-6.801426,1.779870,4.524404,-6.156267,0.556322,-0.311441,7.579624,-5.535521,-3.876663,-3.326827,3.831306,1.671754,-0.311814,-5.587992,6.302346,-7.999573,4.185038,2.480916,-5.381369,0.272484,9.530362,2.419301,5.959344,1.311658,1.044876,-3.816295,-8.828575,8.003414,4.614263,-1.057555,-6.095090,-1.484342,-8.776721,9.742365,-7.988450,-6.778576,-2.357552,-7.759414,-7.616231,3.238876,-5.872550,-4.197037,-1.466337,8.482548,1.164712,-5.410759,-7.562514,3.243636,7.730605,4.055473,-5.062271,2.595935,-0.945404,-4.130865,-7.114718,-2.718257,6.688820,7.121829,-8.241625,7.512227,3.110221,-9.112298,3.461948,-4.907400,-0.384540,-4.467437,-9.051138,3.862361,7.833988,4.712593,-8.923273,-6.748340,-4.355949,8.293403,-9.610800,-0.868673,-9.109409,-1.791788,-7.510469,-1.391698,-8.856882,5.131059,1.170330,4.144379,-4.610678,-2.976025,-8.308165,1.529994,-9.042086,-6.315646,2.411277,-2.321245,4.726837,3.279754,-4.764379,-2.096266,-2.496537,4.801329,-9.053767,8.997558,0.980277,7.453707,-2.647607,-3.849293,2.426428,-3.576307,9.691193,2.302675,1.187093,-1.741597,-0.232608,-7.345186,8.919040,-6.402348,6.402965,-2.042239,5.320077,-6.791904,-4.175838,6.010206,1.442287,5.679104,-3.450770,8.368203,0.586911,8.471079,-0.127062,3.450912,4.233338,-4.336841,0.841888,0.502563,-9.807804,-0.511802,-0.785741,1.966034,7.036822,-5.648122,9.711646,0.737189,-6.557812,-8.406562,0.942471,-3.253961,-1.655638,9.169735,6.690551,-2.763643,-7.098413,2.985484,-9.849896,1.012870,2.968723,-4.687854,9.745553,9.723652,-1.491198,8.050123,0.120980,3.973117,-0.723490,4.999005,1.033260,8.412472,5.165929,8.610782,9.288098,3.767040,-5.608008,5.655724,-8.719009,7.125409,8.008935,-4.371893,-1.931950,-5.284468,-3.320996,3.325353,5.340190,7.008112,0.292779,3.417101,1.709142,9.866981,-3.782252,-6.119800,7.373831,2.573711,-0.863756,-1.225570,4.721308,0.859920,-1.357397,-2.795938,5.969146,-5.177644,-3.993488,-2.663105,7.892753,4.918584,-1.724727,-6.909918,-5.643957,-0.585630,3.654002,7.385523,9.193864,-1.797888,3.442520,-5.846876,-7.396258,5.067768,-6.244697,6.272029,8.394484,7.173465,-0.015458,-9.584706,7.810849,7.709342,3.913150,-7.172728,8.917259,-2.339321,8.851615,8.305495,-3.240622,-8.867378,-2.404260,-3.931575,-1.820955,-3.503206,5.252163,0.548307,9.301983,0.805630,-8.518376,-3.410795,-6.846001,-6.800418,6.734363,6.740654,6.088574,-7.104582,1.409788,0.417310,-3.664086,-4.656645,-7.030309,-8.637343,-9.760232,-2.653828,9.742350,-5.288962,-3.471270,2.833431,4.538064,1.750098,-4.206420,-5.366935,-0.216606,-4.817047,8.922104,-8.004623,-4.727232,-8.940659,-7.910830,8.189618,5.507560,9.362806,1.150010,2.578952,4.887266,3.845788,-7.898653,-2.926267,3.960662,8.879969,7.581030,1.613817,-8.428255,0.651277,-7.348373,5.224963,-8.961951,3.195230,1.740275,-6.315474,4.479088,9.861104,-1.182855,-1.085844,-4.693041,-6.599885,3.322710,5.899193,4.451839,-8.778570,-0.882931,0.466511,-1.386501,-7.548138,7.518200,2.568754,-5.594608,-6.607290,-1.074101,-8.136983,-0.142334,-2.089732,-8.569566,-2.967223,-7.057226,-0.103356,-9.219193,-0.277143,-0.357170,-8.422591,9.742109,5.921911,-6.632298,-9.274605,-1.722111,6.633787,-2.305692,7.907226,-0.654771,-4.886847,-0.306965,4.353712,9.353207,-7.789140,-6.176508,7.025892,-1.643428,3.640212,1.402708,5.327647,-8.589963,-2.817825,-6.223473,-3.690636,0.018112,-8.846601,5.828419,-9.241288,9.254018,-7.903794,-3.254730,5.221490,-1.821208,6.137583,2.733822,-5.696711,-6.685060,-0.326578,-0.726100,0.236354,5.160612,6.902738,9.433325,8.036225,-1.892261,-8.148634,-9.811066,8.554738,-7.641366,-1.685890,4.016817,1.327348,9.560334,0.297520,-0.224597,-7.687236,-1.811861,-8.561138,8.596820,-6.414599,-3.115865,-5.108501,-2.075857,6.075506,1.563258,-4.714604,-0.765181,-7.543205,5.585512,2.768284,-4.387731,-4.788524,-1.459582,-2.402246,-1.373543,3.750765,3.260704,4.721635,-0.131466,-1.216014,-9.293018,-3.072781,-9.398474,5.114439,-5.575234,-8.794115,-4.674912,4.547423,0.463933,-1.583046,-5.445994,-8.536091,-3.327971,-1.373119,1.478189,-4.325869,7.439640,-4.136691], dtype = "float64")#candidate|5610|(936,)|const|float64
call_5609 = func_64_call(relay.reshape(const_5610.astype('float64'), [6, 13, 12]), relay.reshape(const_5610.astype('float64'), [6, 13, 12]), )
call_5611 = func_64_call(relay.reshape(const_5610.astype('float64'), [6, 13, 12]), relay.reshape(const_5610.astype('float64'), [6, 13, 12]), )
func_5452_call = mod.get_global_var('func_5452')
func_5453_call = mutated_mod.get_global_var('func_5453')
call_5613 = relay.TupleGetItem(func_5452_call(), 2)
call_5614 = relay.TupleGetItem(func_5453_call(), 2)
bop_5621 = relay.floor_mod(call_5609.astype('float64'), relay.reshape(call_5613.astype('float64'), relay.shape_of(call_5609))) # shape=(6, 13, 12)
bop_5624 = relay.floor_mod(call_5611.astype('float64'), relay.reshape(call_5614.astype('float64'), relay.shape_of(call_5611))) # shape=(6, 13, 12)
output = relay.Tuple([call_5603,const_5610,bop_5621,])
output2 = relay.Tuple([call_5604,const_5610,bop_5624,])
func_5635 = relay.Function([], output)
mod['func_5635'] = func_5635
mod = relay.transform.InferType()(mod)
output = func_5635()
func_5636 = relay.Function([], output)
mutated_mod['func_5636'] = func_5636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_539_call = mod.get_global_var('func_539')
func_540_call = mutated_mod.get_global_var('func_540')
call_5681 = func_539_call()
call_5682 = func_539_call()
output = relay.Tuple([call_5681,])
output2 = relay.Tuple([call_5682,])
func_5715 = relay.Function([], output)
mod['func_5715'] = func_5715
mod = relay.transform.InferType()(mod)
output = func_5715()
func_5716 = relay.Function([], output)
mutated_mod['func_5716'] = func_5716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2103_call = mod.get_global_var('func_2103')
func_2104_call = mutated_mod.get_global_var('func_2104')
call_5725 = relay.TupleGetItem(func_2103_call(), 1)
call_5726 = relay.TupleGetItem(func_2104_call(), 1)
output = call_5725
output2 = call_5726
func_5743 = relay.Function([], output)
mod['func_5743'] = func_5743
mod = relay.transform.InferType()(mod)
mutated_mod['func_5743'] = func_5743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5743_call = mutated_mod.get_global_var('func_5743')
call_5744 = func_5743_call()
output = call_5744
func_5745 = relay.Function([], output)
mutated_mod['func_5745'] = func_5745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4201_call = mod.get_global_var('func_4201')
func_4202_call = mutated_mod.get_global_var('func_4202')
call_5749 = relay.TupleGetItem(func_4201_call(), 0)
call_5750 = relay.TupleGetItem(func_4202_call(), 0)
func_1496_call = mod.get_global_var('func_1496')
func_1497_call = mutated_mod.get_global_var('func_1497')
call_5752 = relay.TupleGetItem(func_1496_call(), 0)
call_5753 = relay.TupleGetItem(func_1497_call(), 0)
func_4629_call = mod.get_global_var('func_4629')
func_4630_call = mutated_mod.get_global_var('func_4630')
call_5760 = relay.TupleGetItem(func_4629_call(), 0)
call_5761 = relay.TupleGetItem(func_4630_call(), 0)
func_4737_call = mod.get_global_var('func_4737')
func_4739_call = mutated_mod.get_global_var('func_4739')
call_5795 = func_4737_call()
call_5796 = func_4737_call()
output = relay.Tuple([call_5749,call_5752,call_5760,call_5795,])
output2 = relay.Tuple([call_5750,call_5753,call_5761,call_5796,])
func_5801 = relay.Function([], output)
mod['func_5801'] = func_5801
mod = relay.transform.InferType()(mod)
output = func_5801()
func_5802 = relay.Function([], output)
mutated_mod['func_5802'] = func_5802
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5901 = relay.const([[[9,-8,-2,10,1,-2,-10,8,-6,-3],[-4,1,5,-2,1,9,-10,10,-10,-2],[10,5,-2,1,-9,-4,9,3,-3,-7],[5,-6,-6,6,7,-8,-4,7,6,-6],[2,-8,-5,-3,7,5,-9,-8,-9,1],[-4,3,2,6,9,2,3,-2,-10,9],[6,-1,8,10,-6,3,9,-8,9,-8],[-7,10,10,-10,-7,-2,-6,-8,4,2],[-10,-8,5,8,1,2,8,-9,4,-3],[-10,-3,-7,1,-10,3,-9,9,-8,-8],[4,-6,2,1,5,-6,-8,-1,2,8],[4,4,-2,-5,-9,-9,3,-5,3,10],[1,-2,4,6,5,2,5,1,8,-10],[-1,1,-6,-8,6,8,-3,-8,6,-5],[-6,-10,-2,10,9,6,-9,-3,-7,6]],[[8,-1,-6,7,1,-5,-10,9,6,-1],[-9,4,-8,-5,-7,-6,-4,-5,6,-4],[-6,5,4,10,-5,-6,10,4,-8,-2],[-9,1,7,-6,7,-1,1,-1,-4,-6],[3,-5,3,-2,-8,7,5,1,-1,5],[6,-3,2,3,-6,-4,10,-6,1,-3],[2,-6,-7,9,3,6,-9,-8,4,8],[-10,-8,4,-3,-2,3,6,3,6,1],[-5,1,-7,-5,-2,-10,-5,-3,2,5],[-4,-2,-10,6,-6,-7,6,-4,-9,-4],[4,-3,2,-10,-4,2,3,-8,8,9],[3,-4,-6,-3,-1,-7,-1,-4,8,1],[8,10,5,6,-4,-7,1,-5,4,-3],[5,8,10,-10,7,-2,3,8,-2,3],[-7,2,-4,8,-4,-2,9,-4,-3,9]],[[6,-5,-5,-8,5,-2,2,4,-2,-3],[-1,5,5,1,4,8,-3,-8,7,-3],[7,-7,-1,4,-5,-10,-10,-8,-4,4],[1,9,-6,2,5,6,-5,3,-5,-1],[-4,7,-8,10,6,-4,-8,4,-2,-7],[-4,-10,-7,-4,10,3,6,7,-6,8],[2,2,-4,2,-1,-4,-2,-1,-7,-1],[10,-2,-5,4,5,3,3,7,-2,-5],[10,7,4,-2,4,-10,7,-5,-1,4],[-3,5,-4,5,-3,-8,-2,6,-4,-8],[2,-7,10,-3,-2,-10,6,1,8,-6],[8,6,9,-5,8,3,1,-1,1,5],[1,-6,-9,-6,5,-1,-4,-5,7,-7],[-3,-7,10,9,-1,5,-8,-10,-2,-5],[8,1,3,6,6,-4,-4,5,-8,5]],[[7,-3,5,-3,10,3,3,10,10,5],[9,-4,10,-7,4,-10,-4,-7,6,5],[7,2,9,-8,-7,-4,-10,-9,10,1],[-10,6,-3,4,-2,-5,-4,-10,8,4],[9,-2,-6,3,9,-9,-4,2,9,-9],[4,1,9,-2,1,4,4,1,9,6],[-10,6,2,-3,5,-4,-4,-6,8,3],[6,9,5,9,-6,1,-2,9,-6,-4],[4,7,-5,-2,3,-2,3,8,-5,-2],[-2,8,10,5,-2,5,9,4,9,6],[-3,10,4,-4,2,10,10,7,7,-6],[-5,5,-6,-5,-8,6,1,-7,-1,2],[8,-1,-1,-8,2,-7,6,-10,-4,-7],[6,-2,-7,-2,2,6,-7,6,-5,8],[8,-6,-1,9,1,-6,9,-6,6,7]],[[-1,8,9,-7,10,-6,3,5,10,7],[-9,-2,10,-5,5,6,6,-3,-10,3],[-6,-8,-3,-2,6,8,-2,-2,-6,1],[-10,7,-1,-2,9,-10,-4,-5,-1,4],[4,-1,-10,-9,1,-10,-6,-8,5,9],[5,2,-10,-10,2,6,-4,2,-1,2],[10,-4,7,5,-2,-8,6,8,-7,-4],[-2,4,-9,-10,7,4,-2,-4,-8,2],[5,-9,-2,-4,-7,7,-1,7,-5,-10],[-9,-2,3,-1,-6,3,5,-2,-10,5],[5,9,2,7,3,2,2,-6,-9,-5],[1,6,-9,4,-5,9,2,-9,3,2],[1,-9,-7,7,-1,-2,-10,10,-9,1],[5,7,5,10,9,-4,-5,5,-8,-9],[-7,-3,1,8,-10,-5,8,-10,7,-1]],[[-1,7,9,-7,6,-10,-7,2,8,10],[-9,-1,-9,2,-1,2,-1,6,-3,-9],[-9,2,1,5,-3,7,4,-3,-9,10],[-9,9,-1,9,10,-5,-6,6,-10,-9],[10,7,6,-6,4,-2,-8,10,-8,5],[7,-6,6,4,-4,1,1,-5,-9,-1],[-9,-3,-3,-8,3,8,5,5,-5,9],[4,-3,-9,3,3,10,-8,-9,-7,-2],[2,10,-6,-9,6,2,10,-8,-8,-7],[-6,3,10,-4,10,-7,10,10,-4,6],[-10,3,-8,1,3,-8,-4,2,-4,-3],[4,9,-9,9,1,-5,-6,3,9,-1],[-1,-3,10,9,4,10,-1,-2,-1,4],[-6,3,7,-7,9,1,5,-2,-9,-10],[-4,1,-1,-6,3,2,-8,3,-2,-4]],[[-8,-10,-8,9,5,10,-10,-5,-3,-1],[10,8,-2,-5,-9,7,3,10,2,-1],[-9,-8,-4,-7,-5,-5,-4,5,4,-10],[7,10,-7,-3,4,-9,5,-9,2,7],[-6,4,-5,-6,7,2,7,5,-6,4],[10,-2,-3,-5,-9,-4,-7,5,-5,3],[-8,7,-8,-9,1,-6,-9,10,-9,8],[-7,3,1,8,-10,10,-5,-3,-1,9],[10,-5,-4,-2,9,-1,2,-2,1,-1],[-8,-10,9,-6,-8,4,-10,6,3,-5],[7,1,-9,4,-3,-2,7,-2,5,-9],[-4,-2,4,-8,-5,-1,10,-4,5,10],[5,8,6,-8,-9,6,2,8,4,-2],[9,-5,-5,10,9,9,4,5,7,-10],[2,2,2,9,5,8,7,5,-4,-6]],[[-4,6,2,9,7,-8,5,-5,7,6],[-7,6,-10,8,5,-7,-6,-9,6,-8],[7,-4,-3,3,2,1,-6,3,-9,9],[4,-3,1,-9,-1,-10,2,-3,2,6],[-7,-3,-8,-8,9,1,5,4,-9,3],[-1,-8,-8,9,-9,3,-5,-9,-5,10],[-6,7,-6,-7,5,2,-4,10,-5,1],[-5,-2,-1,5,-9,9,-5,-7,9,-5],[6,2,-10,-2,-1,-1,-7,9,5,3],[-9,9,1,5,10,6,-9,-5,-9,6],[-2,-8,-9,7,1,7,-2,-5,2,5],[-10,-7,-9,8,1,-10,10,-2,-5,4],[-6,-7,9,1,2,3,-7,2,3,4],[5,-7,-3,5,-5,-5,4,-1,-4,6],[8,-9,-10,-3,-3,8,-2,-3,3,5]],[[1,-3,4,9,6,-3,5,-1,4,-9],[-2,5,2,-1,9,7,5,-6,1,6],[-3,4,-4,-4,-1,-5,9,-9,9,-8],[-5,10,-4,-1,-4,-4,10,6,5,2],[4,-2,-9,-6,10,-9,-8,9,5,-8],[-8,7,-10,-4,4,2,-5,-3,-5,5],[2,4,-2,3,-2,-8,3,8,2,-8],[-8,-6,-7,9,5,-1,7,10,-8,-9],[-4,-9,-4,-10,-1,-5,-1,3,-8,-1],[-8,4,8,7,7,-6,-4,-7,4,-7],[8,-5,2,6,-4,-5,-3,-10,-2,-7],[-2,9,-8,4,-4,8,-2,-10,2,-4],[-6,9,-7,10,-3,-8,10,10,-4,9],[-7,1,-9,-4,8,7,9,1,4,-7],[8,3,1,-7,2,-4,-4,-10,3,-6]],[[-4,-4,1,-10,9,-4,-3,7,2,10],[10,5,-6,-7,-9,-1,-5,7,-2,-1],[-6,-8,-1,4,6,9,7,-10,-7,5],[7,10,-3,-10,-5,6,7,10,-10,3],[-10,4,6,-2,10,-2,7,10,8,5],[-2,-5,-8,9,1,5,-6,-9,-4,7],[2,2,-1,9,4,-5,6,7,6,3],[-8,9,9,6,2,-9,5,2,-4,9],[5,-6,5,7,9,-3,10,1,-1,-5],[4,-7,-5,-9,2,-9,-2,-9,8,2],[-8,4,-6,-1,6,2,-2,-9,10,8],[-5,-8,-1,8,5,-7,-5,-4,8,2],[1,-3,2,2,1,-1,-4,-3,-8,-4],[-1,9,-4,10,6,7,5,4,2,-9],[-3,-9,-1,-4,5,3,3,-5,5,-10]],[[-7,-10,-8,2,-10,5,3,-4,8,5],[-8,-1,-2,-9,-2,-8,7,-5,-4,-7],[8,-8,5,7,-2,9,3,-2,-6,2],[1,1,9,4,-3,-8,2,1,-9,-3],[3,10,1,10,10,-9,3,-8,-6,-6],[3,7,9,3,8,-7,-7,6,-7,-7],[-10,10,4,6,2,8,-3,1,5,-9],[1,2,3,7,-6,-10,9,-10,8,5],[-5,5,10,-1,1,7,-8,-1,-7,-4],[1,9,-2,6,-4,-9,-6,8,-10,10],[-3,-3,-6,-3,-1,7,-10,3,-5,3],[-2,8,-7,-3,-9,8,7,-4,-6,-5],[-3,10,-9,7,-3,-3,1,2,-10,-6],[-7,-3,-8,9,-4,-10,9,2,2,-1],[-8,-2,8,10,1,8,-2,4,8,5]],[[-2,-8,-4,8,-10,3,-3,-8,8,-10],[-5,7,-9,-9,-8,8,-7,8,9,-9],[7,8,6,-1,-5,5,1,-7,-7,-9],[9,3,-6,-9,-1,5,-2,-5,8,-5],[1,10,4,-2,4,-3,9,-10,1,1],[10,7,6,2,-2,-6,9,-4,-5,-3],[8,-1,4,-1,3,-6,-5,-4,-8,6],[5,2,-7,-6,-3,-9,-5,-7,4,-5],[-9,9,-7,-6,1,-5,-3,10,-5,10],[7,8,-4,2,-2,-4,-1,6,3,-3],[5,1,-6,8,1,-9,1,-10,-2,-2],[3,-7,6,2,-7,-6,-2,-10,9,-2],[-8,-7,-10,-2,3,-9,10,9,-9,-5],[-6,9,-7,-8,9,-7,5,-3,-4,9],[3,-4,-4,-8,3,-9,6,7,-1,2]],[[-7,6,-4,6,6,-7,-5,-1,-3,-4],[-2,-5,3,2,9,3,-4,7,-7,-7],[-10,3,3,-4,3,-3,1,5,-10,-9],[10,2,-2,-1,-3,6,-1,9,-5,10],[-3,4,1,-9,8,-7,-3,-4,9,3],[-4,-7,10,-10,-9,2,5,7,7,4],[-5,4,3,2,-3,-6,-6,3,7,8],[8,-9,9,-7,-1,2,6,-5,-5,-9],[-3,-7,-7,4,8,1,3,-6,-7,9],[-8,7,8,-10,-8,3,-5,-10,-3,-6],[6,6,1,-2,-7,-8,3,-8,7,7],[-7,9,-1,4,-3,6,2,-1,-3,3],[5,4,7,2,-10,-1,7,8,-9,5],[-5,-3,10,9,-8,-5,4,-2,1,-6],[1,7,5,10,-8,-6,-4,1,5,-1]],[[-4,6,6,-10,-10,-8,-4,-10,10,5],[-5,-2,-1,6,3,-7,-2,5,-8,6],[1,-2,-7,-6,-4,-5,-1,9,10,-6],[-3,-1,5,-4,1,3,-2,-1,-9,7],[5,2,3,-7,-7,5,7,4,2,-7],[7,-8,-6,9,-5,9,-2,-7,-4,-7],[9,-10,10,8,-1,-8,6,-7,-5,8],[-7,-2,-9,6,-3,-4,-9,-1,-8,2],[6,8,-7,2,5,4,8,5,-4,1],[-5,4,-7,4,3,-5,-7,-1,-1,-8],[5,-10,-9,10,-5,-3,-6,-8,-1,8],[-10,7,9,-4,2,-7,-6,-2,2,-8],[-5,-9,9,3,10,8,-8,7,-2,8],[-3,-3,-1,-3,8,-10,-4,5,-8,5],[-2,8,-9,-7,-8,-5,9,-9,4,1]]], dtype = "int8")#candidate|5901|(14, 15, 10)|const|int8
var_5902 = relay.var("var_5902", dtype = "int8", shape = (14, 15, 10))#candidate|5902|(14, 15, 10)|var|int8
bop_5903 = relay.less(const_5901.astype('bool'), relay.reshape(var_5902.astype('bool'), relay.shape_of(const_5901))) # shape=(14, 15, 10)
uop_5907 = relay.exp(bop_5903.astype('float32')) # shape=(14, 15, 10)
func_454_call = mod.get_global_var('func_454')
func_457_call = mutated_mod.get_global_var('func_457')
var_5910 = relay.var("var_5910", dtype = "float64", shape = (1, 75))#candidate|5910|(1, 75)|var|float64
call_5909 = func_454_call(relay.reshape(var_5910.astype('float64'), [1, 15, 5]))
call_5911 = func_454_call(relay.reshape(var_5910.astype('float64'), [1, 15, 5]))
func_5452_call = mod.get_global_var('func_5452')
func_5453_call = mutated_mod.get_global_var('func_5453')
call_5918 = relay.TupleGetItem(func_5452_call(), 3)
call_5919 = relay.TupleGetItem(func_5453_call(), 3)
output = relay.Tuple([uop_5907,call_5909,var_5910,call_5918,])
output2 = relay.Tuple([uop_5907,call_5911,var_5910,call_5919,])
func_5924 = relay.Function([var_5902,var_5910,], output)
mod['func_5924'] = func_5924
mod = relay.transform.InferType()(mod)
var_5925 = relay.var("var_5925", dtype = "int8", shape = (14, 15, 10))#candidate|5925|(14, 15, 10)|var|int8
var_5926 = relay.var("var_5926", dtype = "float64", shape = (1, 75))#candidate|5926|(1, 75)|var|float64
output = func_5924(var_5925,var_5926,)
func_5927 = relay.Function([var_5925,var_5926,], output)
mutated_mod['func_5927'] = func_5927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4349_call = mod.get_global_var('func_4349')
func_4350_call = mutated_mod.get_global_var('func_4350')
call_5940 = relay.TupleGetItem(func_4349_call(), 0)
call_5941 = relay.TupleGetItem(func_4350_call(), 0)
output = relay.Tuple([call_5940,])
output2 = relay.Tuple([call_5941,])
func_5943 = relay.Function([], output)
mod['func_5943'] = func_5943
mod = relay.transform.InferType()(mod)
mutated_mod['func_5943'] = func_5943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5943_call = mutated_mod.get_global_var('func_5943')
call_5944 = func_5943_call()
output = call_5944
func_5945 = relay.Function([], output)
mutated_mod['func_5945'] = func_5945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4076_call = mod.get_global_var('func_4076')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_6007 = func_4076_call()
call_6008 = func_4076_call()
func_2610_call = mod.get_global_var('func_2610')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_6014 = relay.TupleGetItem(func_2610_call(), 0)
call_6015 = relay.TupleGetItem(func_2611_call(), 0)
output = relay.Tuple([call_6007,call_6014,])
output2 = relay.Tuple([call_6008,call_6015,])
func_6017 = relay.Function([], output)
mod['func_6017'] = func_6017
mod = relay.transform.InferType()(mod)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6017_call = mutated_mod.get_global_var('func_6017')
call_6018 = func_6017_call()
output = call_6018
func_6019 = relay.Function([], output)
mutated_mod['func_6019'] = func_6019
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6052 = relay.var("var_6052", dtype = "float32", shape = (15, 7, 4))#candidate|6052|(15, 7, 4)|var|float32
uop_6053 = relay.erf(var_6052.astype('float32')) # shape=(15, 7, 4)
output = relay.Tuple([uop_6053,])
output2 = relay.Tuple([uop_6053,])
func_6056 = relay.Function([var_6052,], output)
mod['func_6056'] = func_6056
mod = relay.transform.InferType()(mod)
var_6057 = relay.var("var_6057", dtype = "float32", shape = (15, 7, 4))#candidate|6057|(15, 7, 4)|var|float32
output = func_6056(var_6057)
func_6058 = relay.Function([var_6057], output)
mutated_mod['func_6058'] = func_6058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5017_call = mod.get_global_var('func_5017')
func_5018_call = mutated_mod.get_global_var('func_5018')
call_6088 = relay.TupleGetItem(func_5017_call(), 0)
call_6089 = relay.TupleGetItem(func_5018_call(), 0)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_6105 = relay.TupleGetItem(func_124_call(), 2)
call_6106 = relay.TupleGetItem(func_125_call(), 2)
uop_6107 = relay.acosh(call_6088.astype('float64')) # shape=(8, 7, 8)
uop_6109 = relay.acosh(call_6089.astype('float64')) # shape=(8, 7, 8)
output = relay.Tuple([call_6105,uop_6107,])
output2 = relay.Tuple([call_6106,uop_6109,])
func_6117 = relay.Function([], output)
mod['func_6117'] = func_6117
mod = relay.transform.InferType()(mod)
output = func_6117()
func_6118 = relay.Function([], output)
mutated_mod['func_6118'] = func_6118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_6189 = relay.TupleGetItem(func_124_call(), 0)
call_6190 = relay.TupleGetItem(func_125_call(), 0)
output = relay.Tuple([call_6189,])
output2 = relay.Tuple([call_6190,])
func_6203 = relay.Function([], output)
mod['func_6203'] = func_6203
mod = relay.transform.InferType()(mod)
output = func_6203()
func_6204 = relay.Function([], output)
mutated_mod['func_6204'] = func_6204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5715_call = mod.get_global_var('func_5715')
func_5716_call = mutated_mod.get_global_var('func_5716')
call_6205 = relay.TupleGetItem(func_5715_call(), 0)
call_6206 = relay.TupleGetItem(func_5716_call(), 0)
output = call_6205
output2 = call_6206
func_6222 = relay.Function([], output)
mod['func_6222'] = func_6222
mod = relay.transform.InferType()(mod)
output = func_6222()
func_6223 = relay.Function([], output)
mutated_mod['func_6223'] = func_6223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6243 = relay.var("var_6243", dtype = "uint32", shape = ())#candidate|6243|()|var|uint32
const_6244 = relay.const([[[9,4,8,-1,2],[5,-8,9,9,-6],[10,3,-9,10,-5],[6,4,-3,-5,-7],[10,7,8,-1,3],[-5,7,-4,3,10],[1,-3,-8,-1,1]]], dtype = "uint32")#candidate|6244|(1, 7, 5)|const|uint32
bop_6245 = relay.right_shift(var_6243.astype('uint32'), const_6244.astype('uint32')) # shape=(1, 7, 5)
uop_6261 = relay.tan(bop_6245.astype('float32')) # shape=(1, 7, 5)
bop_6266 = relay.greater_equal(uop_6261.astype('bool'), relay.reshape(bop_6245.astype('bool'), relay.shape_of(uop_6261))) # shape=(1, 7, 5)
bop_6278 = relay.less_equal(uop_6261.astype('bool'), relay.reshape(bop_6245.astype('bool'), relay.shape_of(uop_6261))) # shape=(1, 7, 5)
output = relay.Tuple([bop_6266,bop_6278,])
output2 = relay.Tuple([bop_6266,bop_6278,])
func_6284 = relay.Function([var_6243,], output)
mod['func_6284'] = func_6284
mod = relay.transform.InferType()(mod)
var_6285 = relay.var("var_6285", dtype = "uint32", shape = ())#candidate|6285|()|var|uint32
output = func_6284(var_6285)
func_6286 = relay.Function([var_6285], output)
mutated_mod['func_6286'] = func_6286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2103_call = mod.get_global_var('func_2103')
func_2104_call = mutated_mod.get_global_var('func_2104')
call_6300 = relay.TupleGetItem(func_2103_call(), 1)
call_6301 = relay.TupleGetItem(func_2104_call(), 1)
func_539_call = mod.get_global_var('func_539')
func_540_call = mutated_mod.get_global_var('func_540')
call_6302 = func_539_call()
call_6303 = func_539_call()
func_5131_call = mod.get_global_var('func_5131')
func_5132_call = mutated_mod.get_global_var('func_5132')
call_6312 = relay.TupleGetItem(func_5131_call(), 0)
call_6313 = relay.TupleGetItem(func_5132_call(), 0)
func_4983_call = mod.get_global_var('func_4983')
func_4985_call = mutated_mod.get_global_var('func_4985')
const_6316 = relay.const([-5.489293,-3.183467,-5.111420,-2.766853,8.044221,-1.584498,7.245333,-9.877895,9.092202,2.844818,-7.050939,-4.790875,1.120529,6.072637,-9.037489,-9.700312,-4.387215,6.838922,-2.388098,1.240612,-2.679019,-3.715398,2.377427,-4.353017,-5.465474,-8.505951,-1.221905,4.278128,3.407887,-8.313133,7.868375,-2.851769,5.819966,-8.629815,3.032117,-7.688934,5.137798,9.209814,7.994587,-5.598250,-9.813843,-2.556232,7.612258,-2.008249,-7.997764,-6.476772,8.595504,-5.713273,-4.846753,-7.379611,-1.574298,3.963789,8.873259,-7.325392,9.992190,7.952220,8.151207,-4.742741,7.806699,3.385540,0.482747,4.829996,-1.568139,-0.352690,-2.288969,8.973788,0.416246,2.822480,0.713980,4.284255,-0.896520,-7.598812,0.018123,-3.294309,5.255891,-9.819221,7.518455,3.842558,2.174070,-9.717690,-3.895710,-9.174512,-7.656303,4.465736,3.362243,-5.159285,8.215717,4.824745,4.957653,3.711269,6.633609,-8.607514,0.668021,4.469527,6.531703,-2.664361,6.055721,6.329620,-1.192540,5.369286,3.532735,9.453451,3.085210,2.457525,-7.381499,2.732858,6.812105,-4.509422,-8.022972,5.694422,7.152401,0.109956,9.662014,8.362536,3.565627,2.207146,-4.932454,6.066343,-2.286279,2.723174,7.383894,-9.422625,-5.079386,1.399311,-9.568033,-9.771357,4.280503,-9.797489,-1.133348,-8.451919,9.712327,-2.647394,8.091883,5.982578,9.963624,-3.811324,9.463516,5.082250,-3.769075,-9.907067,0.584822,-1.781393,1.051375,0.255300,-1.379846,6.431214,-3.878376,-0.429621,-6.700578,6.791398,-6.993671,-8.260888,-7.882836,2.802627,6.526483,-7.550340,-5.882976,5.317378,7.287018,1.507856,-2.596159,5.748894,-9.299303,-0.806440,9.544398,-8.502551,-6.822760,-0.415316,-3.679403,9.160251,4.784072,5.193408,-7.043894,3.886939,3.062195,-8.963354,-5.846036,-0.751904,5.416619,9.255107,-7.483087,-9.798035,-0.230679,-2.304531,-6.974884,-5.251579,2.521008,6.826357,-7.012472,3.864560,7.612724,-2.922941,-4.677189,-4.590229,3.337500,-4.000147,-5.544379,-6.196339,7.632472,2.936813,-3.765655,-1.562907,1.385139,-4.375033,-1.067734,-0.948570,3.166751,4.733941,7.205671,1.025801,4.664144,5.544563,-3.414485,9.947561,-5.416231,9.595117,-6.679989,-3.562728,5.777082,-9.024330,-4.498201,0.302316,6.985315,5.269252,-6.942671,1.753119,8.616291,6.539683,1.260467,7.231390,-3.909317,-4.251988,-6.072868,-1.443020,6.814849,-3.472904,8.292316,6.346300,-7.235448,-2.785454,5.408599,1.625540,-6.760521,-8.239592,0.687571,5.154924,-2.803008,-5.585188,-7.559216,-3.463258,1.189768,1.381268,-4.829814,6.917159,-5.125413,-9.795779,-8.761218,-3.419850,-6.338931,-8.247178,-5.680349,8.148456,2.809722,-6.941334,8.523463,-8.299031,6.124800,4.357498,-3.075078,-9.371646,-0.877607,2.311394,-4.172056,6.604031,-5.448575,-5.778207,3.047346,-5.172763,-8.128966,-0.114328,3.270704,-6.923178,0.607432,9.897673,7.322663,-7.810876,-9.800205,-9.954999,6.719584,8.868891,1.532435,-1.941502,-2.654055,4.356384,6.901149,-3.367916,-4.700411,2.696973,-7.918741,-5.008109,8.362148,-7.957185,-6.363310,-3.707353,-9.474742,3.426604,-5.442946,4.623634,-2.074656,5.075945,-2.033026,2.087269,-2.221787,-9.302308,3.960395,-0.689267,2.211986,-0.818685,7.016768,0.680678,-6.657950,3.400313,9.238654,8.221941,-0.737849,0.701906,-6.864003,4.584489,-6.238087,-4.757512,-8.335291,-9.781223,5.255061,4.978834,9.145644,-4.807001,-4.369749,-8.181253,-1.860986,3.198949,-0.783929,-6.563924,5.960381,-9.620413,3.755258,1.169948,4.048829,-5.158851,-0.549444,-4.496378,-1.285866,-1.723482,-1.646943,-3.176730,-9.892122,7.096772,3.276948,-3.349270,-1.534816,-8.255412,8.546974,7.709525,2.987965,0.532996,-2.869962,2.930110,-4.026733,9.569938,2.387441,-6.079589,8.782787,-5.376844,2.454218,-9.498392,7.219166,5.504425,-2.673606,-6.235251,-5.194332,-0.510482,6.321110,-8.886763,8.091296,-3.416533,3.133355,-6.186300,2.034944,6.175880,3.242964,-7.220641,-9.295646,7.017909,-5.441105,-3.634986,1.705637,7.393995,3.360752,4.991111,2.967403,8.060292,-9.412583,-1.020589,-3.085074,-3.106353,9.802960,3.181321,-4.309811,-0.208382,-5.600186,-6.420831,1.133459,-6.102120,3.245430,4.276692,6.241634,4.057298,6.153312,9.290168,-6.053585,4.423450,-4.012405,4.230147,-5.907865,-6.948071,0.423047,-8.852901,-8.041150,8.614600,-5.402084,2.496948,1.430758,9.485499,-3.493023,-1.344643,-4.186094,-3.129242,-9.638847,-3.621108,6.946426,0.913845,2.289755,-0.933304,-5.754645,5.970420,-7.959266,6.254435,0.835523,-3.841653,5.337340,-7.161217,7.644316,2.547814,1.045001,-7.444694,-7.435663,6.407059,4.469759,1.528741,0.085256,1.530751,2.917182,1.732308,3.782207,-0.740313,-4.117412,4.787883,9.872815,-4.263212,-0.691539,-9.532329,-9.769274,-8.179385,0.186084,-7.554636,-8.522085,-9.445522,-7.409444,-6.958370,-3.077100,-3.630057,-5.102633,-1.172181,-4.541546,-2.737988,1.761811,0.126730,-2.944973,0.786406,-7.247825,-8.403039,1.552567,-9.097094,-6.726061,-9.818657,-4.479083,3.220756,-5.623238,-7.638664,-6.561861,3.080772,9.293783,-1.339596,-8.707457,3.883843,8.544783,2.730195,1.987778,-1.714594,-5.206671,-5.110132,3.081298,1.040170,9.113507,4.798489,-0.865168,4.282389,3.103088,5.839960,4.622013,-4.002247,-1.696278,-4.680840,-9.896539,4.840027,1.359484,7.184335,-3.775495,-5.099930,-9.607458,7.554996,-3.996190,1.265443,-5.439282,0.573458,1.163385,-9.964926,4.409834,8.029667,0.531863,-3.141869,-1.188642,-0.748217,3.823574,-7.085347,-5.553870,-6.145325,-4.526340,-6.399358,8.220314,4.561258,-0.652771,-0.017412,-4.772045,3.880662,3.786630,-8.949976,3.954760,-9.192995,8.474232,-4.742447,-9.702160,-9.926515,-4.324553,-7.382821,-5.755259,4.465906,0.937612,-1.677441,5.512976,-3.618505,6.071923,1.092745,9.483361,7.196717,-3.657849,-0.838074,8.238543,-6.070327,1.920842,6.330688,-7.338061,-4.945139,-8.845205,9.940218,-8.178211,-4.549334,-8.255041,-9.271748,6.012901,-8.749806,-0.714719,1.071277,0.596754,1.264741,-6.400437,-9.980241,1.294719,-2.246145,2.640597,-6.811119,6.754506,0.246423,-7.739357,7.945146,-5.196373,9.999724,-0.892525,-9.538139,-5.245004,8.112268,-8.826243,4.136838,-3.215571,5.626068,6.072461,-2.677887,2.993884,-5.012616,0.703105,9.959501,4.342477,-8.946816,9.465330,4.248643,5.086991,-2.557883,-3.417071,4.184008,-2.945378,-2.690806,-3.910592,-3.388984,6.936532,4.805918,6.790191,-2.326056,-2.839457,-0.464360,0.265279,8.302991,-9.974302,-2.022393,-5.766461,-0.891176,-5.911143,-5.085829,0.936818,-3.740069,-2.935971,9.537723,1.853829,-1.583640,7.034621,1.263714,2.402180,2.663043,3.691034,-2.256389,4.396075,-2.652296,-6.828679,7.280312,1.540381,-6.957937,5.161365,6.482799,8.129374,-7.874632,7.421424,7.021131,7.772136,-1.600986,-5.246114,-2.062358,6.567357,9.869803,1.570630,5.952072,4.420176,-2.830201,-0.381897,4.335881,-6.632002,-3.022559,4.257537,-4.465571,-2.790653,9.266576,5.854309,-2.909819,-4.742547,-7.399314,-4.463952,8.331422,2.797163,5.712982,0.287042,9.589741,-5.011788,9.085116,5.449234,-1.133049,1.724261,-4.497469,8.010543,9.089441,4.601137,-0.234975,-4.929054,1.219264,0.446159,1.357328,6.583574,-3.692273,-2.153986,5.906904,8.545176,6.248133,-0.210443,-2.718937,-7.818309,3.403920,8.989231,-8.504802,3.827125,-0.231044,-1.909093,-5.882123,-8.225924,4.861331,-0.959634,1.056886,9.565491,-1.532977,-2.194418,2.407498,0.210028,-6.066321,-5.442203,-6.401980,-3.730908,6.363906,-0.143896,-5.297460,-4.680426,9.720667,2.317013,9.325846,6.459220,-4.237838,-1.978207,-8.448507,-0.461901,-0.619698,5.925173,3.117092,4.324973,-6.674120,-4.087856,1.738345,6.052190,0.083630,3.073262,6.526530,6.640714,-6.257609,9.095224,6.587224,-5.048957,6.491070,-0.903675,4.367227,3.674945,8.211309,0.813574,-0.833292,1.389127,9.149225,-8.068553,5.093815,-6.536368,6.028079,-8.788881,4.935849,0.362044,1.145882,0.981413,5.998895,-4.078604,-3.518165,3.555920,-3.907661,8.660700,8.046652,-6.918808,6.058270,9.826399,3.218643,4.779819,-0.020973,6.828177,-2.809960,-6.825518,3.785000,-4.686514,-7.012517,-2.367054,-1.683721,-9.454191,-4.624819,-1.613933,2.324562,-2.515633,0.623461,-8.851244,-4.158829,5.280982,-0.731065,1.700879,9.056797,-5.960201,8.024268,-6.781977,-2.467813,-0.900721,-6.760849,-0.740102,-7.411817,-8.287824,-4.048862,8.400429,-2.587242,5.867655,-4.553032,-3.852816,-7.456058,-8.250489,9.001758,1.195512,2.484162,-0.529599,-9.862061,-9.908611,-2.270741,-9.139021,6.744752,5.705733,7.093798,-1.760635,7.016708,4.188568,8.785692,-3.158844,-1.180484,-7.818932,3.641905,7.837576,4.100133,-9.077709,-5.641680,-8.008996,-0.315152,8.105198,-6.971295,1.440040,-1.665461,9.695107,-3.779226,9.671063,8.879692,8.548321,-0.314233,-6.151784,-5.255013,7.024806,-9.972430,-2.963616,-7.763328,-6.742541,2.172413,-1.082390,-7.265318,-8.410879,9.991300,7.955793,1.452374,2.348081,-7.872300,-7.749164,-2.344620,7.622577,7.602639,6.124851,-4.677194,7.167908,-5.726380,6.256449,3.105936,3.182150,6.572869,-8.543344,8.514854,1.907813,1.139359,-8.981461,3.974365,-5.987946,9.604770,-2.401805,7.856384,-4.881057,-0.454234,-5.888793,1.187549,-2.711166,1.590285,4.703966,4.906806,-1.231657,-7.092752,-3.052378,-5.293227,7.073538,7.720573,8.541169,5.424776,-6.543414,-7.380725,6.925887,-9.000474,-7.604192,-6.239394,5.857595,-1.194328,1.191052,-7.270872,8.201456,-2.386097,4.989966,-2.783363,0.204818,-1.935705,7.263248,-0.739130,-4.363971,9.377472,-6.781470,-9.467531,1.949522,8.068807,-5.490228,-0.090656,5.239929,-1.183310,-4.086868,7.326830,-5.888192,2.984224,-2.670520,-4.851780,9.080827,-4.277896,-5.163061,5.781633,9.877839,-8.722261,-8.889236,3.047652,9.605759,-6.131948,5.634306,9.165229,5.333949,0.342315,0.378304,-6.045791,9.000180,-9.730537,-7.710921,4.234398,6.678864,3.492955,0.674053,5.714577,-9.134018,-9.980869,9.266426,2.884576,2.818816,9.214507,-4.393551,7.974304,-9.393414,8.747867,7.101927,-1.102865,-4.397378,-9.624090,4.740925,5.312208,-8.260737,9.369858,1.982870,-1.184990,8.023053,5.108493,-2.377661,-7.865110,6.519163,8.991234,-9.909120,1.975113,7.549155,-0.549507,3.276507,-6.254804,-1.933124,1.240855,-8.967522,-0.283603,0.780366,3.592158,-8.144811,-7.689266], dtype = "float64")#candidate|6316|(1024,)|const|float64
call_6315 = func_4983_call(relay.reshape(const_6316.astype('float64'), [16, 4, 16]))
call_6317 = func_4983_call(relay.reshape(const_6316.astype('float64'), [16, 4, 16]))
output = relay.Tuple([call_6300,call_6302,call_6312,call_6315,const_6316,])
output2 = relay.Tuple([call_6301,call_6303,call_6313,call_6317,const_6316,])
func_6320 = relay.Function([], output)
mod['func_6320'] = func_6320
mod = relay.transform.InferType()(mod)
output = func_6320()
func_6321 = relay.Function([], output)
mutated_mod['func_6321'] = func_6321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4947_call = mod.get_global_var('func_4947')
func_4948_call = mutated_mod.get_global_var('func_4948')
call_6326 = relay.TupleGetItem(func_4947_call(), 1)
call_6327 = relay.TupleGetItem(func_4948_call(), 1)
func_3812_call = mod.get_global_var('func_3812')
func_3815_call = mutated_mod.get_global_var('func_3815')
const_6336 = relay.const([-8.256345,-8.979621,-9.966282,-7.600438,-5.272648,5.753329,3.031280,9.392780,-8.154671,6.687771,-2.029520,4.977215,-8.067637,-8.275124,2.352582,-6.184702,5.059078,9.706451,6.608717,-1.608937,6.695011,9.854547,4.058884,-1.834413,-3.046675,-5.555562,-5.863172,3.224436,-3.744137,1.830661,-1.642434,6.712261,-8.643930,5.563637,3.819488,-6.552715,3.465083,7.400151,-6.425704,-2.693048,7.358807,2.795929,9.655623,-4.140088,0.117609,8.532097,1.879927,2.427471,7.468084,3.903356,-9.532756,-9.479167,0.152809,4.660338,3.341740,1.351144,-0.011825,-6.831578,3.965636,5.773896,-3.305393,-2.288750,1.588519,-4.387219,-3.389650,5.578593,5.148470,6.741026,8.432437,-7.274156,-8.174570,4.926169,-6.166803,-8.684753,-1.764883,-0.755705,2.121236,-9.018722,-2.562330,1.143058,-0.724804,-3.413274,-2.509010,9.785094,-7.676753,-0.657404,8.374859,6.923956,-0.190152,7.012932,4.806372,9.600438,7.151856,3.978103,-5.808070,-1.271250,-4.051530,-1.140146,-7.033926,-7.352907,2.452077,-7.528325,2.134573,3.177977,6.871113,-7.180468,-2.680853,7.845620,-2.494011,-9.307997,-2.062580,7.010797,6.333637,2.189308,1.742489,-6.871270,3.904214,8.414411,-5.188610,-8.065239,-1.792749,-1.767406,-2.707694,-2.370886,-0.145484,-9.442508,7.578532,2.574752,5.257216,0.900305,7.610049,-8.200517,-2.399036,2.658039,-7.836605,-5.676430,-4.508865,1.863237,2.706407,7.023449,-3.423718,-6.582871,-7.980126,-6.503559,-3.630244,-5.611497,6.169507,-7.311961,7.955157,-6.035036,5.913261,-4.254616,8.925247,5.502199,6.110136,3.436310,-7.601588,8.533334,8.246968,-7.615256,1.265464,7.502131,8.971792,-4.317399,2.605489,-1.959275,-4.514233,3.494813,9.503067,-5.933792,2.600688,-6.284616,0.569072,-2.950333,-7.759775,-9.327044,-8.379728,-9.577002,-3.472622,-8.922655,-5.255850,-9.734999,4.016217,-1.196035,-3.050526,4.312231,-2.370410,9.957178,2.258130,5.968971,8.930903,-9.785951,2.050142,9.230935,8.281501,-1.202421,5.987041,-8.014319,-6.270465,0.669188,8.855911,-2.888273,-3.519424,5.550836,-9.238515,8.997422,7.383782,4.976879,5.669187,-7.690788,-2.196863,-3.276763,8.782911,-2.548982,4.650886,2.505223,-7.642306,5.666855,5.782611,-9.106209,4.511933,8.322245,8.260360,8.814232,-3.089540,-7.096037,-0.008628,-9.014092,1.226154,7.695940,-2.871114,-2.798250,9.370057,0.227082,-4.560522,-0.226814,-1.454246,-8.814815,-4.642466,-0.392803,9.458779,1.407780,2.380746,-7.200301,-1.905734,8.107880,-2.545759,1.936337,1.249429,-4.776209,-1.423387,6.634405,2.487642,2.297818,-5.386671,-9.193450,-6.439154,4.550357,3.957550,-2.151264,-9.506607,-8.084505,7.834413,-1.986135,-5.036758,6.924693,9.477277,0.642085,-9.977108,-8.818099,-4.746823,0.934343,-7.731095,-6.580597,-4.957571,5.261127,5.935843,8.177073,6.182500,7.278844,-2.299581,-2.997762,-6.474071,-3.513249,-9.578221,0.393653,4.220961,7.740717,1.618951,6.342372,5.255033,-0.725405,-0.232299,2.820986,8.138106,-0.287899,3.821802,5.384611,-6.304857,3.257393,-8.410017,-0.894024,1.112240,8.025702,4.091353,-8.807998,5.007539,0.840901,-7.426284,3.268857,-5.545089,1.453759,7.930681,7.047344,7.224210,-3.871759,6.284824,3.332250,2.818274,2.441075,-5.543462,0.820020,3.126534,5.192351,2.505666,1.232975,-6.022808,-7.984791,-8.491208,-0.343870,-0.429346,7.176733,9.460566,-4.885024,-5.468099,7.605207,9.771375,-9.469462,-9.749234,-0.289427,3.623217,2.377575,-6.583257,0.924854,5.466067,-3.575014,-5.673976,2.313697,5.846110,-4.367543,3.612401,-2.933769,-7.223408,7.101026,-7.661893,6.787396,-4.497543,-0.349025,-1.763455,1.313554,7.745214,2.484754,1.917043,7.288109,-5.300979,-8.287530,3.726774,-6.949340,-0.613056,-3.957604,0.939367,-1.316284,-9.475007,-7.062983,-1.037823,-6.291810,-2.578869,1.132343,-1.925438,-8.475996,4.396438,7.804768,2.926823,-8.361084,9.039118,-8.754570,-8.353079,-2.547203,6.704680,4.657153,-8.750219,0.490108,3.030103,7.899016,6.557185,-5.475695,-8.779879,-1.497585,2.488248,6.892536,8.242911,2.124252,-8.348600,0.299641,4.853600,3.812789,-4.096224,-6.489203,-4.784563,-1.091963,2.310160,-5.037957,-8.621824,4.113414,6.546782,-7.897498,-5.719529,7.685919,-9.398621,1.144563,1.139803,7.246752,1.708097,-9.459251,8.210132,-9.209158,6.300590,9.097238,1.347138,-8.621218,6.773853,3.443636,-7.295989,2.083165,7.416201,-0.826518,6.572150,8.620733,2.540999,-7.295103,-9.511590,7.388626,4.344251,5.210101,4.996102,-9.059783,-1.170521,7.640887,-6.311970,6.188598,3.175268,-4.542839,-3.817062,5.238515,9.147551,-0.957204,-2.077703,-5.858182,-4.484403,-8.783462,0.533686,9.878504,5.607770,-8.544360,9.046875,9.139470,-9.209511,5.307919,0.909864,-0.059098,8.260337,-9.145576,8.275193,3.098072,-3.435685,6.158198,-1.514989,-4.050324,0.571847,7.838968,-0.054945,2.951316,1.250684,4.963016,-9.298306,4.062567,8.790533,4.592800,-1.015567,-9.374885,1.896640,-8.667524,-3.318938,9.501836,-1.681678,-3.692821,2.659519,8.367458,9.125956,-1.569797,-9.989353,7.664644,1.588952,-8.726913,1.176867,4.460720,8.771370,0.010525,-6.934430,9.286795,1.351906,9.406248,-4.542957,4.350753,-2.160942,3.392797,-9.688924,-2.359585,7.731618,3.561825,0.639006,0.201352,3.671760,2.198173,0.975685,-3.741951,-4.778694,-1.566314,-8.529093,-7.983923,8.722556,1.270521,-5.821960,1.521003,7.457159,3.223366,8.535945,7.263702,3.254696,-1.949598,4.252357,7.077487,7.669632,-5.117780,-6.658467,-5.865267,-0.845096,7.818865,0.825035,4.512735,1.490324,9.114855,2.326531,6.206698,0.429460,-5.254492,-9.550065,4.301648,0.770092,6.460771,-3.296554,2.428542,-9.627984,-5.939500,6.687557,-2.554528,-4.646933,-2.855124,-9.221402,-6.003909,2.707201,-7.259512,-7.052997,1.602132,-7.997069,9.159404,-7.171181,1.991075,4.111290,-7.835680,6.104922,-3.742392,9.625528,-4.354061,-8.687437,4.463258,9.776446,-7.664252,1.230543,4.308475,-4.305146,9.906646,5.029262,9.167414,-3.137400,4.353879,-4.476004,1.991585,-7.768420,6.455154,-3.533898,1.682188,9.794131,2.328361,2.961629,-5.244215,-6.682287,6.206771,-4.072967,-7.296239,-1.960231,1.560072,5.405734,-2.775213,-3.799300,4.826180,6.506945,-4.320156,-2.185603,3.939777,-3.109473,8.766288,1.284311,-7.174810,-4.214218,-3.806713,-3.120852,8.622806,-7.970388,-1.939141,-9.916014,1.885521,-1.240636,-6.428082,-8.040297,-3.900523,2.201197,1.013310,-6.099364,-0.062529,-6.702058,-7.178670,-1.918095,3.324245,1.963976,5.245911,6.959622,5.167054,-5.828661,-0.983565,-3.144183,9.561306,-8.551012,-5.716025,-5.096883,4.774607,-9.326665,-0.738267,-1.752331,6.563488,0.441618,9.941975,-7.636902,-0.847871,-0.532982,1.511045,4.246547,-3.464220,6.838102,6.869174,0.194211,-0.371503,-7.978795,0.007281,-0.602961,-3.106920,5.179590,-4.443676,4.330481,9.693559,0.977825,-4.398223,1.154461,5.128487,1.641904,5.138471,8.888797,-8.964797,-8.045412,-5.239622,8.317346,-9.944363,-7.566680,-2.576242,4.143132,2.528564,-5.799201,9.439421,-3.227645,-1.069063,8.410965,3.357055,3.795316,-3.178736,8.858749,9.081798,-9.521188,6.183673,-2.293835,-7.904619,0.684567,7.027511,2.682772,-9.537576,8.640831,7.181121,-3.020396,1.304131,1.036028,7.474224,2.785648,3.108849,-1.929276,-2.941950,-6.086684,-6.678765,6.252971,8.927333,-8.154646,-6.499808,-3.987035,4.222274,-7.456636,-4.312688,-0.112289,-0.669733,-9.957728,6.409159,7.664765,-6.053653,-9.552867,2.730875,-9.309597,-8.826185,-4.441167,-1.508462,5.919315,4.753463,-6.227423,3.232225,2.122770,-2.431291,9.645727,-6.072613,-5.423934,-8.906470,5.418390,-5.677394,-2.543171,3.247379,5.030803,3.137571,8.385759,7.346954,-0.441770,-0.253083,-2.330374,-0.071909,6.341776,-6.298838,3.837910,-5.406837,4.905232,-8.315356,-3.589054,-1.210047,4.419192,-1.189413,0.703419,-6.267566,-4.152643,1.855688,-3.785797,-0.731840,4.599635,8.360781,5.773532,9.216834,-0.408271,-4.118716,1.498481,-9.056679,-6.179998,6.848478,-0.082133,1.100276,5.752606,-5.294093,-2.386342,3.337126,4.626014,-1.674791,-6.498788,4.926711,5.728767,8.376136,2.101129,6.562208,-2.763948,8.037839,2.452355,1.054426,6.642299,-7.878403,-1.374219,3.296580,-4.513448,-0.041763,-4.134280,3.320915,0.725983,-2.411431,-3.519549,-1.780375,7.299862,-4.911131,3.371878,5.387841,5.479748,-9.650399,8.633821,3.838067,-8.606440,-6.485010,-6.138285,-1.157115,9.841570,-2.657497,9.662411,-7.218788,-4.078559,9.475839,4.766277,-5.329968,-4.440047,-6.959563,2.052399,8.833506,-4.480122,-2.034168,7.660777,-1.552004,9.581968,-6.177220,-7.489695,4.821752,3.328709,-1.898244,7.809479,9.717262,2.966283,6.609214,-5.363260,-9.551309,0.635652,1.505446,-5.236690,2.538838,-4.721656,-7.294685,-2.396079,4.919357,-0.606337,-4.790726,-7.712558,2.976189,-9.252129,-8.323397,0.523849,7.752810,1.131557,2.182045,-8.389190,-2.369566,-3.085193,4.413603,-6.185069,9.320180,-7.164276,6.843575,2.370323,1.533122,5.511718,-5.124797,-1.314004,1.543991,-2.438842,4.906923,1.746995,7.978001,-0.057358,7.392971,9.570364,0.297877,-0.819507,7.514834,0.176686,2.968722,-9.198357,4.891768,2.326338,2.865600,4.014143,9.222960,-8.536587,8.000539,1.810975,4.726614,9.725511,8.588601,8.167933,8.510115,9.976274,-4.999615,1.958912,-3.982823,-1.149896,-4.869296,9.944145,0.343222,1.751001,-1.456557,7.687354,4.740758,1.933879,-0.267335,7.038338,5.725671,4.385953,8.274028,-2.289901,3.738340,0.469797,-3.372451,8.248629,-9.516646,-0.581960,-2.986898,-6.599503,-7.897492,-0.405554,4.247372,5.758129,-3.197365,-3.633321,7.030766,1.491972,1.301322,-5.230820,1.348404,4.302895,-1.265136,3.236709,6.814866,2.959778,1.449996,1.363520,2.120487,0.146556,2.053206,4.532357,-0.823817,1.571828,1.636223,-9.215435,-2.421354,-5.441271,3.038404,6.870329,-1.282959,1.300836,-3.861343,-2.376964,1.392003,6.630512,3.714281,6.164641,6.618816,1.369518,-0.749361,-1.526207,-0.933540,-6.849343,-9.415822,-5.645026,-5.663102,-2.964442,-7.422986,-1.989598,-1.254670,-1.853131,4.584868,-2.815944,0.987642,3.385309,5.279011,-6.645318,5.081960,6.784400,-0.014851,-5.806163,2.767468,8.032794,8.463363,6.575168,1.164587,6.726544,0.508813,9.965257,1.965951,5.268525,-2.482110,-7.868634,-7.070263,7.870401,-2.888715,3.747693,-6.067926,9.282717,-9.468832,-9.333720,0.685997,-4.084117,5.278281,7.792488,4.236553,7.529746,-6.700818,3.952594,4.061519,3.581459,-0.921254,-1.531978,6.561914,-0.361122,-6.520807,7.976532,-8.495776,4.628985,2.424095,-9.536633,7.847192,9.369616,-6.164812,-3.697562,9.625911,8.228018,-2.761100,6.508785,8.684288,8.155925,-4.855856,8.441989,2.095380,-2.768244,7.003789,5.217322,-7.143328,-4.707962,3.386475,-6.904681,-7.784433,-2.024859,1.317818,-6.466057,8.114191,9.706002,-9.581112,-5.966689,4.438358,4.845089,7.169409,9.781124,7.722206,-3.219460,-3.357132,4.491742,-8.692747,9.148934,2.801610,1.163366,9.330837,-9.585446,5.112978,0.335211,6.699371,-2.877738,0.265152,-9.591557,5.993449,9.150599,-6.550747,9.283421,-4.633765,-2.224199,-3.079872,-5.617485,-5.367323,-3.941352,5.237826,-0.850657,-4.693219,-1.558851,-2.199127,-9.708916,5.830311,4.731973,-4.149609,2.831977,3.664283,2.176232,8.072426,-2.825397,-5.141981,2.156258,-5.030288,8.990002,-2.214111,7.524667,-9.842510,4.693856,4.951292,2.176065,2.993230,5.249066,9.712323,-7.235155,-7.737146,-1.988806,9.492597,4.656474,-9.342829,-2.389343,-8.832768,3.310732,8.297031,-7.482812,-6.755154,6.555845,-9.527541,-5.738290,1.710185,-9.044793,6.570546,-6.623198,1.978461,5.422356,-1.586801,-4.930967,9.223810,-4.647725,-8.385383,4.372082,-7.238237,-0.609184,2.088843,-3.905907,-3.457825,5.704516,-6.891131,-3.658575,9.824987,3.939758,-6.741511,-6.451102,5.141708,-5.794161,3.126632,-8.745652,-7.912417,8.044997,-5.403383,-9.550300,-4.150698,-8.473406,-6.778930,-1.653953,-5.851302,8.486918,-0.913231,-2.392231,-2.999929,8.805053,4.961108,-2.485288,6.198002,0.801793,4.906649,-3.438152,4.272854,-8.394905,6.347205,7.198825,-6.307613,-0.796919,-2.005601,9.850946,-6.757010,1.970147,-0.099132,5.394894,6.950597,8.934764,8.463843,-7.499400,8.566649,-0.140281,-4.158178,-4.167454,-7.650497,2.253439,-8.238625,-7.015842,2.787508,-6.550001,6.428347,3.874701,-0.625620,5.830632,-8.159843,8.951100,5.462711,5.111326,6.262458,-0.422831,-3.095096,8.784368,-2.523901,3.479315,2.487781,-1.109047,-9.241337,9.886746,-2.420052,-1.475022,-7.588131,-4.524762,6.968795,4.002327,-6.641243,-2.380306,2.469369,6.500368,8.924299,-7.693672,-4.110934,1.217026,-7.601935,7.578672,-1.027386,-5.994624,0.257925,-0.049814,-2.815407,-1.783635,6.034030,9.352280,-6.137140,8.784068,-4.314837,-4.029722,-3.456604,9.144136,-0.325360,8.513958,-3.657816,7.343230,5.013583,-1.026840,-9.104478,-1.475437,4.627866,-4.112294,-3.637811,-5.491902,4.304314,7.350046,-2.367418,9.137259,8.700938,2.648421,-6.253978,-7.936684,-6.077724,7.639861,5.872352,3.032151,4.490494,-0.642200,2.870137,-7.783260,6.987211,-8.555571,-8.286985,-8.096385,-7.224505,8.106022,-5.110030,-6.503268,-7.885357,4.560195,1.467511,8.498900,9.655976,-9.490437,-3.094419,4.939455,-4.616732,5.267301,8.981429,1.578749,-7.634043,-3.242406,-6.222784,0.707781,-2.156679,-4.048730,4.351599,6.497723,2.290959,3.969634,-1.678763,5.787137,-4.610460,-0.691129,-0.733283,-7.897776,-1.543745,0.244971,2.598130,-6.735480,-7.276991,-9.812529,-2.087726,-9.515341,1.880988,4.059217,-8.124022,1.288972,9.821464,6.102384,2.719728,-4.168939,-7.501613,-5.369653,5.986000,-8.311002,2.633041,5.699599,-5.941332,7.577629,-7.333439,4.479142,2.107498,9.098658,-0.800650,-4.411646,-7.756390,-7.288897,-4.756156,5.522062,8.370528,3.911489,-6.808347,-4.030676,-8.431266,-5.212519,-8.059596,-1.190209,-8.419101,-8.067872,-3.683036,-2.309882,-9.620217,2.337988,7.767570,-8.778362,-5.420073,1.319699,-1.291385,3.988291,9.153394,8.418181,-3.895429,8.370243,-0.617939,2.184141,-8.743005,5.138153,-5.903166,-5.639440,6.835166,-1.399928,-3.016881,-9.564420,7.642242,-4.584760,-6.091166,-1.894050,2.194178,4.994298,-7.239606,-8.154371,3.872300,5.088421,-8.072588,9.622180,-8.033429,-1.151777,-6.878850,9.350493,-8.748461,-7.296876,-8.716495,7.126682,7.333083,6.483523,-1.072483,-7.353873,0.536391,8.933495,8.587808,-8.024505,7.323634,0.853619,5.247899,6.023254,-1.807045,-7.208535,4.899730,-3.686187,6.652371,-7.078949,5.182589,1.314934,-3.780592,-6.896180,6.801927,4.447763,6.182756,-4.473671,5.825899,9.576020,-9.338375,-4.787492,5.972588,-3.930791,-7.149718,-2.958491,9.187878,5.470307,7.686178,-3.788218,-9.628046,8.619047,-9.017065,-6.249671,8.437634,1.915368,-9.542323,1.910257,-3.223739,-5.413139,-9.781871,-0.245051,-3.773323,8.350339,6.567716,-6.462578,8.702780,-1.446645,-8.474031,-3.894705,-1.070685,8.380568,9.528200,-2.791096,-5.800365,0.318787,-9.692051,-0.851195,7.110441,-2.644673,0.759944,-2.286816,-5.289219,-7.924808,9.467529,-0.015148,-7.169998,-9.557070,3.918297,0.452397,9.425115,-1.124320,-9.112058,-1.602081,9.504714,6.659221,-9.883124,2.080885,-1.432354,0.369373,-6.464398,8.936504,1.977890,5.263274,-4.792257,-3.297849,3.421028,6.629928,6.717953,2.430682,-5.416396,-5.496535,-6.036724,7.472769,7.815633,-4.096093,1.690619,8.698259,-1.202104,0.445805,1.762793,-9.425755,-0.403281,4.752878,-5.940376,-7.460117,9.907438,7.986655,8.385491,-3.007038,7.346993,-3.233427,-0.920794,8.573029,-6.071068,8.250791,-9.433405,-2.955872,-5.033519,-2.372672,-9.201089,0.948952,9.962205,7.747894,-8.864181,-8.355443,7.524057,-3.497465,-0.757117,-4.408446,-0.169554,-2.110574,7.436203,9.526382,-2.693836,-9.669375,4.467310,-9.999767,-0.845112,1.776754,1.456564,-2.364233,-8.741411,-6.626898,-8.831738,-1.592228,2.303800,4.913839,5.485650,-9.617958,0.229347,2.220073,-4.686566,8.976432,9.230953,3.417576,-4.531168,1.469926,-9.187330,4.934447,-4.556264,8.590020,5.807728,6.555305,-2.107054,-8.898532,-9.440680,-7.969845,-7.473012,-8.831032,-0.899075,-7.199797,8.096547,4.567890,-9.473336,9.280191,-2.240877,-2.615392,2.951530,3.478866,9.159631,0.749693,2.124157,-4.251497,-6.914309,6.772113,8.083016,5.162829,-8.438906,-8.636634,-4.710843,0.641820,7.907449,-8.889641,8.173111,-9.302771,0.919596,9.932164,7.889007,-7.823499,-8.481033,-1.699343,-3.056303,-7.097707,-7.096255,3.370028,-8.085587,-6.356593,-9.970454,3.506415,-6.162816,-0.527638,5.673910,-2.252962,2.316476,-6.432830,-6.471067,4.134160,9.639201,0.931315,1.416826,-7.675356,-0.140483,8.189781,9.184130,-1.830748,-6.354273,4.221981,-3.684851,-2.856959,2.958775,9.473796,0.974091,-9.900209,8.470932,-5.414005,-8.817266,-7.951123,9.467328,5.700185,-0.051167,-1.507667,-9.975377,7.838835,5.834620,-5.533376,-5.074768,8.584608,2.877793,-9.728090,8.969019,5.314087,4.035848,-7.435522,9.653311,8.263533,-9.815923,-4.255295,-3.445500,5.469976,1.517201,-5.448554,-4.145035,9.328540,9.240257,-0.729640,-7.015804,-0.313827,3.078198,0.590832,-0.095243,4.311872,-6.656633,7.752694,5.231642,9.781030,-0.162486,-6.621059,7.891878,-9.359822,-2.344528,5.075171,-8.800528,-5.832980,5.643850,-7.059020,8.582769,-9.357612,7.022258,-4.919458,-3.855096,7.713825,2.303024,2.028917,6.969825,1.118393,-7.579726,0.057339,-9.837210,5.497148,1.563166,1.899865,4.911781,-3.267340,5.627290,4.182661,-0.896355,-6.900485,-1.910364,-0.909788,-2.271614,1.552588,1.153886,3.248951,8.404515,3.653309,7.270880,8.490725,-2.460008,9.780648,-4.465973,2.389424,-3.684981,-0.665503,-4.991410,-3.521557,-0.668867,5.493521,-6.229161,5.260963,8.004481,-7.348742,5.551922,3.211630,-3.819466,6.252289,0.800002,8.450150,-7.434679,4.910760,7.149638,7.953973,5.556300,0.968651,-3.651321,5.838600,6.377578,-0.814939,0.931544,-4.301801,-7.368704,-0.606743,-4.172531,9.060835,0.341483,1.355029,8.803084,-2.037939,-1.735686,-6.096104,-6.137892,-7.792584,-5.235168,-2.194279,7.262102,9.889395,-4.262821,1.997186,1.032044,-4.191944,8.700448,6.626310,-3.221318,-1.490704,7.131565,6.310213,-1.636637,2.553598,-1.674470,5.052038,-9.615927,-0.081577,-8.019636,-6.907221,-5.873666,2.333935,-2.743942,-9.341493,-4.198777,4.203809,-3.449718,-6.226972,3.964906,6.473053,7.908982,3.916384,9.580920,5.973727,0.900610,4.183620,-4.497348,-3.203165,-0.769138,1.041712,6.827173,-1.846359,-1.230054,-9.710845,3.384277,7.185325,-0.274444,-2.776826,-9.928156,-9.806981,8.754528,-8.387400,-6.550518,6.683142,1.257578,7.455052,6.639495,-5.029219,-5.855150,2.692201,-9.872791,9.355204,3.015176,-1.820456,1.797643,-2.381820,2.417207,-1.371218,8.352708,-5.368198,-8.046298,0.681429,5.975688,0.893886,-9.117669,3.828135,-1.920440,-4.730318,5.545518,5.123915,5.214938,5.869133,-4.314842,-8.576302,9.398220,6.442304,-2.194659,-1.399857,-6.519702,-3.442829,-5.801571,-0.756930,-7.420483,8.531834,2.654231,-2.384301,-2.418579,9.623563,4.629229,-4.457682,-9.273430,-5.975486,-4.671371,7.810883,4.878183,8.246023,3.107506,-3.879199,-0.960231,6.179612,-9.346654,-8.947047,-2.079915,-6.008206,2.512567,-7.130485,-4.290299,3.121567,5.391925,8.404061,-4.796509,9.597624,-6.205945,3.937927,0.167507,4.367446,-9.661328,-4.079332,1.335118,-7.717588,8.208188,3.658778,4.494323,-9.361043,6.950393,8.523518,-4.011935,6.115981,-4.586271,-1.500630,-9.727898,-6.580314,6.817621,1.644510,4.930912,-2.951874,-2.100161,-2.257227,-4.310029,6.570696,-4.445087,3.620357,6.975185,-4.818907,1.519866,0.302925,-0.542164,-6.157864,-9.432975,-5.549321,3.038238,-6.772524,-9.811116,5.149721,9.614005,-0.668971,-7.181524,-2.244918,4.252553,3.258480,7.487518,-8.485679,-9.947273,-8.781550,-1.625506,-6.992138,0.489022,2.477297,7.628993,-8.601862,2.768505,3.163267,-9.488273,0.455205,-0.235840,-4.955636,9.562708,8.372529,7.090652,-2.716555,-4.230723,0.625488,9.571074,-2.978957,5.901115,8.224380,3.083914,-1.678094,7.170074,6.680918,6.266582,2.887239,-2.634082,-6.587999,-4.662071,7.667978,-2.452088,-8.769068,-8.220352,-6.298368,2.956926,-1.755621,-0.910897,-9.407841,8.920832,0.429829,9.007036,9.099975,3.064674,0.111181,8.940627,2.213963,0.317329,5.204607,-0.380870,-5.183572,-7.132617,-0.321180,0.927853,-5.221864,4.546717,7.428573,-2.389947,-3.487448,1.825753,-8.798457,0.639791,-8.516951,5.511221,-5.769772,5.484804,-2.137632,5.891047,1.029994,8.712375,5.811783,1.141457,-9.130381,-2.338685,-9.588692,-3.075756,-8.028323,-7.816729,0.784133,-1.300106,6.937536,-3.282751,5.379710,-5.235514,-9.451042,-7.338377,-4.131638,2.547442,-3.369767,-3.625056,7.117266,2.946566,-7.694644,-8.229536,5.484704,2.774853,-9.776864,-3.561804,6.140287,-7.757662,4.504620,-7.644718,9.978283,-1.852692,7.624227,-0.373381,8.523154,-0.299150,6.331659,4.826905,5.601500,9.376270,-3.115724,-8.364832,-7.941502,-2.439005,2.684889,-4.352430,-6.023474,-3.160675,1.188684,-8.350295,-4.738629,-3.546561,1.672664,7.704261,-1.948200,-7.321485,-3.606032,-8.690953,-4.725775,-1.844894,2.343888,-3.481919,6.458623,8.800421,3.641070,-2.149570,-4.471721,8.000018,-8.016735,8.745074,2.384577,-5.678556,-1.830250,-4.642163,5.140922,-6.015059,8.924939,-8.466603,-2.283378,8.842574,2.998338,8.596403,-3.795009,0.971954,1.201494,9.788175,-0.557695,7.656098,8.356235,7.158213,-0.682744,9.474715,-8.945378,7.558800,-0.589855,-1.297742,-9.917674,3.962079,-5.660139,9.293027,7.209453,-2.456929,-5.817668,-2.264822,-8.007647,-7.708861,-5.939922,-9.025951,9.137642,9.247508,3.146471,8.955443,7.509680,-1.806060,4.184548,-6.523154,8.248534,6.580131,-6.303320,5.430822,1.057295,5.330671,1.547585,2.890307,7.620980,-2.447791,-7.018163,-0.064883,4.398086,-0.603493,7.543525,8.527392,5.616239,-5.237060,2.335494,-1.941092,-0.195078,-5.300227,-1.910025,-2.978149,-9.741505,-3.607188,1.918707,-1.249413,2.976341,0.222734,9.644403,6.019095,8.894356,-5.192299,6.011693,-4.058072,6.297553,-4.225067,-9.002628,7.320880,7.348910,2.752776,2.952348,7.754810,-1.149895,2.277720,-7.438311,4.239394,-4.146941,-9.600050,-7.754501,9.722922,2.180340,7.254239,9.010082,-2.266343,-2.838670,1.727768,9.462080,2.982815,0.287088,-8.983497,6.780306,-7.277423,2.936694,-1.149769,4.053154,3.194834,5.300651,-6.866977,-6.578287,4.330738,-0.371753,-0.136585,-7.082994,-1.731377,-1.051637,7.704903,-7.445929,8.116662,-9.000501,9.882660,-8.490472,-1.664932,-6.159659,-6.839353,4.150919,7.560095,-4.350003,2.844030,6.425016,-7.998687,-4.714147,-4.764896,0.645793,5.121038,0.595766,7.084145,8.112433,9.252167,-1.936060,-1.224481,5.050196,-7.777133,3.421024,-2.811891,8.242100,-0.233604,-0.537821,-2.228912,5.534497,0.886883,-7.850817,-8.590270,-2.662827,0.635192,6.156804,-0.390506,-6.874951,-7.181742,5.855443,-5.941898,8.273455,-5.951901,3.249962,-5.442080,-5.664100,6.227551,-6.485190,6.994971,8.206121,-2.798145,-8.195473,-7.634737,1.209330,7.059665,8.105184,4.942690,-2.399813,8.189809,-1.600387,-8.495438,0.011826,0.877371,8.276248,1.312896,-7.877375,1.137441,-2.477338,7.310489,-7.750464,-3.695985,-1.283281,6.949828,-6.936058,1.182098,-3.194867,3.838702,2.178199,2.261288,2.495919,-0.043548,-5.486257,9.313122,2.215032,-3.041863,9.728578,0.648633,-6.526204,-1.256987,9.388452,4.668582,-2.412436,-1.803504,-1.695167,-0.001577,-6.422244,6.532744,0.654137,2.707157,7.717082,-5.262932,9.151892,-5.765990,-1.152629,-3.472545,-4.420355,9.725390,-5.579508,6.835760,-5.657435,0.328571,-4.616497,0.556463,3.287354,-3.645871,4.403524,3.400309,-5.706158,-2.416550,-7.810279,7.609196,1.887285,8.438421,-0.007653,-4.156119,2.850326,8.287266,-9.941773,1.976723,5.673837,-0.306101,-3.913390,1.835291,5.881109,-7.001345,-2.877328,6.442495,-8.201758,-6.897227,2.553728,1.096783,-2.430537,-6.043358,-6.398886,-8.646819,9.666737,-8.154571,-3.791513,-3.080383,1.712219,2.582204,-2.457842,8.626554,-4.050379,3.984174,-2.093029,-5.874640,6.804539,1.130650,-7.419900,-7.301778,-5.152898,1.125619,-6.917030,6.615608,-4.099251,-9.935910,8.760529,-2.612891,2.286282,0.399581,-8.221879,-0.122476,-8.354325,7.730134,8.499474,-3.098434,-9.436840,-7.765856,6.986317,3.590935,-0.891542,7.006873,0.542788,2.690406,9.226857,9.070595,-9.733099,-3.412024,5.247726,5.814260,0.727420,8.177559,-9.096335,-0.101114,5.160347,0.346228,8.597528,5.723165,-4.142895,2.770249,4.798556,-5.341777,-6.440804,-0.932209,-9.639955,-4.961042,5.431073,-3.518879,2.649729,1.475574,-9.163690,1.548459,1.612272,-2.978773,8.468493,-6.004192,-3.568632,2.964663,3.407849,1.238962,1.712983,3.188315,5.164357,-3.607579,-4.570190,0.367059,9.818731,9.983117,8.950545,-9.562329,6.665359,9.980327,3.955881,4.699769,-5.292002,3.088250,-1.509306,-8.412043,-4.872540,2.563345,-6.427258,9.036047,4.705825,3.320090,-5.186957,1.874345,-3.127412,-1.327678,7.396239,-4.727602,-3.385040,-2.237076,-9.636327,-1.019271,8.035302,1.837418,-4.909942,4.296087,9.454747,-4.888667,9.348690,-0.412927,-2.582374,1.239002,-8.238269,0.435453,2.184460,0.470706,-9.511880,-2.274521,2.216037,2.469296,-5.256306,2.221827,0.857109,-7.271663,-7.662774,-0.802878,7.624890,-4.751616,5.870358,-9.404468,3.525454,-7.261491,4.825124,-9.594342,5.978792,-2.110092,-3.267699,8.923216,3.642731,-5.336043,-6.720881,-7.679453,3.385274,0.459432,-2.012217,3.506383,-4.905022,4.704968,9.790950,-5.112098,6.908885,-2.118161,7.717898,-2.785292,4.166054,-0.906381,2.063053,5.820986,5.604915,-1.690046,-7.477420,-2.878132,3.545393,-4.973978,0.090092,6.652569,5.011213,-2.626548,-6.495664,7.589254,-0.281503,0.623884,-8.601497,-5.216867,-0.235964,0.066455,-1.482639,9.819980,4.760902,-9.983005,-7.845676,-6.465921,-2.339362,-9.602703,6.585007,-0.876316,1.605035,9.556041,1.958854,-1.705111,-4.960929,-5.043967,3.351497,3.413676,-3.068098,6.471556,0.086957,-9.682313,-2.748929,-3.948644,1.084254,9.129721,0.913971,-4.347814,-8.914176,-1.452946,4.252980,-6.045038,-4.334637,8.262004,0.257060,7.127459,-2.658313,-6.233336,0.857991,-9.131252,-9.238777,1.118544,7.762661,-7.691328,-5.964888,-7.499629,8.241742,-0.588078,-7.908014,-9.700340,-3.053530,1.286718,-4.603462,-8.255765,-1.209411,-5.616963,-8.580247,-9.058596,4.698149,-2.233425,5.745042,4.999424,3.280866,-1.316369,-3.421733,1.857643,0.317762,4.870843,4.731321,7.727799,8.857510,-9.638837,4.777512,6.641497,5.058833,4.906330,-4.742325,1.690553,-2.419815,-8.269267,3.430464,-2.734769,-5.425387,-9.934941,1.310844,5.340148,7.353085,-1.085427,6.499519,3.770628,0.719341,3.587200,-7.191753,6.665259,9.614316,6.738021,-9.036272,1.630490,8.916471,-4.921756,6.835700,5.866655,5.349275,3.346421,7.528935,2.210613,4.776374,8.091745,1.876629,1.855729,-3.548106,5.111734,-0.914917,2.977104,-4.873504,-1.252305,7.089131,-1.154455,9.678699,7.445953,8.033365,-7.298138,-8.568185,-3.095038,-5.897266,-8.588345,-8.544577,8.707647,-8.419307,-9.312102,-5.507463,-4.949702,8.568231,-0.334586,-5.980033,3.551783,-2.285625,4.125802,0.526173,7.995514,7.281706,-9.203066,1.108665,-1.741571,-1.825600,2.984544,8.692573,2.415705,-2.174540,3.869576,0.463951,-4.624400,-8.630843,-8.688473,7.169172,-0.679062,5.000424,-0.657230,-9.987456,-7.027308,-7.752045,-8.624568,3.235614,-6.747744,5.502911,0.905589,-5.430635,9.949830,1.724433,6.497307,3.355456,0.807030,-4.281752,9.727005,-5.725865,-3.843253,3.588169,-1.347967,-9.636224,6.162130,-2.449757,-8.020857,-7.639524,-8.019767,-3.905691,1.021315,8.417797,-1.662114,-5.117984,-6.455242,-4.200771,1.378223,8.238407,-6.123929,-5.954005,-8.678005,-8.769043,-1.414455,-5.153390,-1.060046,-3.419863,-7.197106,-4.101100,2.206204,-0.908235,4.324375,-2.700335,2.232862,-7.052654,0.221328,9.481147,-2.205853,9.586739,-2.657335,4.707075,-8.878490,-6.679711,4.916259,4.361108,-2.509109,-9.509876,-9.151698,-6.958311,6.498386,-1.902522,-2.407890,-4.770070,3.952065,1.298731,1.118527,1.186928,-8.108974,-4.468330,-4.542703,-0.899818,0.457287,8.003823,-1.154415], dtype = "float64")#candidate|6336|(2808,)|const|float64
call_6335 = relay.TupleGetItem(func_3812_call(relay.reshape(const_6336.astype('float64'), [936, 3])), 0)
call_6337 = relay.TupleGetItem(func_3815_call(relay.reshape(const_6336.astype('float64'), [936, 3])), 0)
func_1772_call = mod.get_global_var('func_1772')
func_1773_call = mutated_mod.get_global_var('func_1773')
call_6340 = relay.TupleGetItem(func_1772_call(), 0)
call_6341 = relay.TupleGetItem(func_1773_call(), 0)
var_6342 = relay.var("var_6342", dtype = "bool", shape = (6, 13, 12))#candidate|6342|(6, 13, 12)|var|bool
bop_6343 = relay.add(call_6326.astype('uint32'), relay.reshape(var_6342.astype('uint32'), relay.shape_of(call_6326))) # shape=(6, 13, 12)
bop_6346 = relay.add(call_6327.astype('uint32'), relay.reshape(var_6342.astype('uint32'), relay.shape_of(call_6327))) # shape=(6, 13, 12)
func_1124_call = mod.get_global_var('func_1124')
func_1126_call = mutated_mod.get_global_var('func_1126')
call_6352 = func_1124_call()
call_6353 = func_1124_call()
func_6056_call = mod.get_global_var('func_6056')
func_6058_call = mutated_mod.get_global_var('func_6058')
var_6355 = relay.var("var_6355", dtype = "float32", shape = (420,))#candidate|6355|(420,)|var|float32
call_6354 = relay.TupleGetItem(func_6056_call(relay.reshape(var_6355.astype('float32'), [15, 7, 4])), 0)
call_6356 = relay.TupleGetItem(func_6058_call(relay.reshape(var_6355.astype('float32'), [15, 7, 4])), 0)
uop_6362 = relay.sin(call_6354.astype('float64')) # shape=(15, 7, 4)
uop_6364 = relay.sin(call_6356.astype('float64')) # shape=(15, 7, 4)
func_3390_call = mod.get_global_var('func_3390')
func_3395_call = mutated_mod.get_global_var('func_3395')
const_6374 = relay.const(-1, dtype = "uint64")#candidate|6374|()|const|uint64
const_6375 = relay.const([10,-2,-10,4,7,3,-10,-9,1,8,-4,-10,-8,-2,-5,-3,7,-9,-10,-9,5,-8,-4,-6,5,-2,-6,-9,-1,5,-10,-2,-2,5,2,-8,8,9,-7,9,-3,-10,-1,5,-9,-9,-9,-5,-10,4,6,8,-9,8,-4,-7,-7,-7,-5,-10,3,3,-10,2,1,-3,-9,3,-8,4,-9,8,-8,-4,-5,7,-6,1,-9,8,-10,-6,-10,7,-1,9,-3,-6,1,-4,-4,6,1,8,10,-9,6,9,6,3,6,7,-10,10,5,-8,7,1,-1,10,-6,2,-4,-8,-7,-8,-5,-4,-2,-4,2,-7,8,-9,-8,2,7,6,5,4,4,-8,-6,4,9,-4,2,10,-1,8,-7,3,-4,-7,-10,-2,-2,-3,-3,8,-5,-2,6,-6,8,-6,6,-1,8,-1,9,-5,4,-1,7,10,2,10,4,4,-1,9,10,10,-7,8,-4,9,3,6,9,-3,-10,8,-10,-5,1,-10,3,-8,-1,-8,-1,3,-9,3,9,-1,-10,10,-1,1,-9,4,-3,2,-1,6,-1,6,-10,-8,-7,-7,-9,-7,3,4,-10,-4,3,4,-10,7,-1,-1,-6,-9,9,-9,2,9,-3,7,-1,4,-1,-1,-1,10,3,-3,2,1,-8,8,-6,5,-9,-1,-7,6,3,7,-8,-6,-10,-2,-10,2,3,10,-8,-9,9,-7,4,2,-3,-3,-8,3,-9,10,8,-9,-3,-2,-2,-8,-8,-7,10,-2,-10,5,-6,-6,3,-4,8,-2,10,2,5,-7,6,-7,-5,1,-6,3,-5,6,-5,-7,-4,3,-4,-10,-4,-4,-10,7,2,9,2,-1,-1,3,9,-8,-2,1,-6,9,-7,-10,-5,-2,-5,-6,-5,4,-6,-1,-10,10,-9,-9,9,7,-10,2,-4,-4,-5,5,-9,-5,7,-10,4,8,10,-10,-5,6,4,3,-2,6,-7,-9,-10,-1,-10,-2,2,10,7,-2,1,-10,-8,4,9,-1,-10,1,3,-7,-5,-9,-8,9,-3,2,1,-8,6,-2,1,-9,2,-3,4,-1,-8,3,1,3,-5,7,-8,8,8,-7,1,-2,-8,1,-4,8,-3,9,-5,8,-9,9,-2,9,6,9,-2,2,7,-1,-6,-4,-1,2,5,-7,5,-2,-4,-6,-7,-6,5,10,-3,-4,9,7,1,6,-9,2,1,-10,-5,3,-1,-2,9,10,-2,-1,2,-8,7,-1,-7,2,-5,2,1,1,-6,-10,-4,9,5,-4,7,-2,-6,-3,-3,10,9,9,7,4,4,8,-2,-5,-6,6,3,-10,-10,-3,-9,-3,6,10,6,7,-6,10,-4,7,-4,-5,-2,5,9,-4,-2,7,-3,-1,1,-8,5,-4,-1,-8,7,-1,10,10,-5,-8,-3,4,1,4,-1,8,-8,-4,-5,-3,8,1,1,7,-6,-4,-9,-7,-2,-2,-1,1,-5,10,9,-2,7,-7,7,-6,-7,3,7,-6,-9,3,1,3,9,5,7,9,3,4,-7,2,-1,10,5,8,-6,-7,-5,4,2,-5,9,4,-7,-3,-9,10,9,9,-8,9,-7,3,-5,-9,-8,-7,-8,8,-9,2,7,-9,4,10,6,7,6,-7,-9,-1,1,-2,8,4,3,7,-8,6,-6,-3,10,6,-10,-8,-1,5,-4,1,-1,3,-1,-5,9,-8,-10,7,-10,5,-8,-10,9,-1,4,-8,6,-8,2,-3,-5,-7,-3,6,-1,-5,3,10,-1,-6,4,2,5,-7,5,1,-3,6,7,3,-4,-9,-4,-10,1,-1,-2,-2,-3,6,-9,10,7,1,-10,2,-3,-1,-9,3,7,-4,9,3,-5,1,-8,-9,7,-9,-4,-8,-3,5,8,-1,-4,-3,10,-6,-7,-2,-6,-1,1,-7,-2,-4,-6,6,-9,-10,-1,5,-8,-10,-5,-1,-5,5,2,-3,-9,-9,7,10,2,8,-2,7,-5,-5,1,-3,-8,-2,-2,-7,5,-7,-9,10,-6,7,3,-8,-2,1,10,-10,4,-1,1,7,-1,-8,-9,6,-7,5,-6,10,-9,1,-7,-10,-5,7,-8,-1,9,3,-8,-5,-9,-6,-5,-3,1,6,9,1,6,1,2,-2,1,-1,2,5,8,8,-10,-10,9,9,9,-1,7,8,3,-2,-5,3,-7,-1,-10,8,10,-2,-3,6,-10,6,10,-9,-4,-7,-4,-8,-1,-7,8,2,5,-8,5,-10,-10,4,-10,2,4,3,-2,-8,-10,7,-10,5,-2,-4,6,4,10,-5,-1,-4,-6,2,10,2,-6,-9,7,2,8,10,9,9,2,-10,8,-9,-5,-4,-2,6,-5,-4,10,4,3,-9,8,4,1,-4,-7,5,3,-6,6,-2,-8,5,-6,3,5,-4,9,4,1,9,8,-10,5,-7,-2,4,-9,8,-2,-5,-3,1,-6,-4,-10,4,8,10,-4,4,7,-3,-9,-10,-2,-9,5,-8,2,9,-4,-1,-9,-6,9,6,-8,-10,2,9,6,-10,7,-5,10,2,-7,6,5,8,2,9,6,10,-9,3,-8,-10,1,-5,-9,4,-1,3,-2,1,8,-7,-9,-4,5,-6,2,-7,1,-3,8,-8,8,6,-4,-8,-5,7,-10,-2,8,-10,-6,-3,-9,-9,4,6,1,-3,-7,7,4,5,5,-10,7,-5,-7,2,-5,-2,2,-2,-8,-6,-6,8,-7,5,-4,6,7,6,10,-1,-3,-3,-1,-6,9,-7,-6,-4,-9,6,-8,-7,-2,10,-5,6,-3,2,3,4,-3,9,-5,-2,-4,10,-9,-4,1,4,6,-3,8,-5,-5,-4,-10,-8,6,3,-8,-9,-1,-1,-8,8,2,4,-9,2,-8,10,9,-4,8,2,-10,7,7,-6,1,-10,-5,3,-1,-8,1,-6,-8,5,10,3,10,3,-6,-2,-3,1,7,4,1,7,-1,-2,5,-4,7,-7,7,-4,-9,1,-1,9,-8,-5,4,1,-7,4,-10,-9,8,-4,5,10,-6,-5,-5,4,9,10,-5,1,-4,6,-5,-3,-10,-8,6,-1,10,9,4,9,-7,9,10,4,8,9,4,8,10,-2,-5,9,1,-3,5,10,-8,4,2,-3,-9,-4,6,-8,8,-3,5,10,-1,-2,-2,-6,1,2,9,4,10,10,9,-2,-2,-2,6,2,5,-4,6,1,2,-1,-9,-9,-2,-4,-1,-10,3,9,-5,9,-8,-1,2,2,-3,7,9,-10,-8,-5,-3,3,8,7,4,-7,6,-7,-8,-4,-5,5,-6,-8,-1,3,-8,10,-8,-3,-3,-5,6,9,2,-7,2,-2,8,3,10,5,-2,-8,-4,-5,9,5,-3,-9,8,3,-9,10,-2,9,1,-4,1,-5,10,1,1,7,4,10,-4,-2,7,-10,-5,3,-5,10,8,2,-7,-9,10,-2,-2,6,5,-8,-10,-1,9,2,10,1,-9,-6,-5,3,-9,-2,7,-8,6,3,6,2,8,1,-9,-4,5,-3,4,-6,2,5,-5,-2,-9,-8,10,2,5,-6,8,-3,1,-3,-3,-8,-8,6,4,-4,-4,-7,2,6,3,-2,-3,3], dtype = "uint64")#candidate|6375|(1352,)|const|uint64
call_6373 = relay.TupleGetItem(func_3390_call(relay.reshape(const_6374.astype('uint64'), []), relay.reshape(const_6375.astype('uint64'), [8, 13, 13]), relay.reshape(var_6342.astype('float64'), [936,]), relay.reshape(const_6375.astype('bool'), [8, 13, 13]), ), 4)
call_6376 = relay.TupleGetItem(func_3395_call(relay.reshape(const_6374.astype('uint64'), []), relay.reshape(const_6375.astype('uint64'), [8, 13, 13]), relay.reshape(var_6342.astype('float64'), [936,]), relay.reshape(const_6375.astype('bool'), [8, 13, 13]), ), 4)
uop_6381 = relay.log(uop_6362.astype('float32')) # shape=(15, 7, 4)
uop_6383 = relay.log(uop_6364.astype('float32')) # shape=(15, 7, 4)
func_2755_call = mod.get_global_var('func_2755')
func_2756_call = mutated_mod.get_global_var('func_2756')
call_6397 = relay.TupleGetItem(func_2755_call(), 0)
call_6398 = relay.TupleGetItem(func_2756_call(), 0)
output = relay.Tuple([call_6335,const_6336,call_6340,bop_6343,call_6352,var_6355,call_6373,const_6374,const_6375,uop_6381,call_6397,])
output2 = relay.Tuple([call_6337,const_6336,call_6341,bop_6346,call_6353,var_6355,call_6376,const_6374,const_6375,uop_6383,call_6398,])
func_6402 = relay.Function([var_6342,var_6355,], output)
mod['func_6402'] = func_6402
mod = relay.transform.InferType()(mod)
mutated_mod['func_6402'] = func_6402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6402_call = mutated_mod.get_global_var('func_6402')
var_6404 = relay.var("var_6404", dtype = "bool", shape = (6, 13, 12))#candidate|6404|(6, 13, 12)|var|bool
var_6405 = relay.var("var_6405", dtype = "float32", shape = (420,))#candidate|6405|(420,)|var|float32
call_6403 = func_6402_call(var_6404,var_6405,)
output = call_6403
func_6406 = relay.Function([var_6404,var_6405,], output)
mutated_mod['func_6406'] = func_6406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_6408 = relay.TupleGetItem(func_124_call(), 0)
call_6409 = relay.TupleGetItem(func_125_call(), 0)
output = call_6408
output2 = call_6409
func_6414 = relay.Function([], output)
mod['func_6414'] = func_6414
mod = relay.transform.InferType()(mod)
output = func_6414()
func_6415 = relay.Function([], output)
mutated_mod['func_6415'] = func_6415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3017_call = mod.get_global_var('func_3017')
func_3019_call = mutated_mod.get_global_var('func_3019')
call_6416 = relay.TupleGetItem(func_3017_call(), 5)
call_6417 = relay.TupleGetItem(func_3019_call(), 5)
output = call_6416
output2 = call_6417
func_6434 = relay.Function([], output)
mod['func_6434'] = func_6434
mod = relay.transform.InferType()(mod)
output = func_6434()
func_6435 = relay.Function([], output)
mutated_mod['func_6435'] = func_6435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5635_call = mod.get_global_var('func_5635')
func_5636_call = mutated_mod.get_global_var('func_5636')
call_6443 = relay.TupleGetItem(func_5635_call(), 2)
call_6444 = relay.TupleGetItem(func_5636_call(), 2)
const_6460 = relay.const([[[-7.158244,0.224136,-9.126248,-1.344215,2.175902,-1.922936,3.505082,-7.796943,1.731981,9.712661,-7.667484,3.528994],[-0.739293,8.475590,2.420272,-0.838616,-0.819890,4.111685,8.733030,6.564849,3.601410,0.875100,-5.561684,-0.154275],[-6.791705,-5.682853,9.493356,5.406238,1.925275,-5.480679,6.876634,-7.966790,0.822439,2.856141,-6.689224,4.797910],[-5.359738,-0.325809,-5.781772,5.614376,8.298025,9.475712,1.629627,-7.404711,8.000439,-7.974423,8.859407,-6.024825],[-6.425172,-2.437910,5.248280,-0.825671,-6.767479,-3.410790,4.852642,2.950217,6.210946,-6.826853,4.159165,2.765193],[7.266340,9.015339,3.449433,9.325462,6.484578,-0.630620,1.941719,2.468726,9.354975,-1.279213,0.237201,3.771736],[-9.110976,1.328804,-5.390142,-1.091008,-4.102603,2.005074,-5.148798,3.526987,-0.939012,-6.888497,-7.470675,8.127787],[7.866686,2.839088,8.213193,-7.740242,-3.985326,5.360936,-1.351778,-1.527616,1.393412,-6.991077,9.576751,-0.314727],[9.374979,2.092448,-0.505947,-4.044531,2.040319,-4.192563,-5.390122,-4.812527,-7.755712,-1.146147,-6.735640,-0.645542],[-6.928112,9.943370,-7.592371,6.816008,-4.819090,-3.800039,3.456296,-6.014924,-6.203575,2.701425,7.065621,9.661491],[1.696810,6.701929,-0.502337,6.241621,-9.387797,-5.572123,-1.565666,1.126078,3.280833,4.493048,-7.643902,6.766273],[-6.067180,5.961780,-4.955162,-3.595142,-1.043753,5.074951,1.708735,9.468374,5.238560,-7.717148,6.415790,-9.995540],[2.846379,7.313912,-6.219061,-1.425969,4.899651,-1.225241,-5.113770,9.199448,-8.049912,-4.131475,-9.403563,-8.804264]],[[4.319122,9.773537,-7.403125,5.360599,-5.877958,1.251012,5.672053,4.283099,4.109622,5.370485,-2.585188,1.393080],[4.118403,-8.313235,4.239932,-4.958145,-1.719737,-7.576419,0.792095,-5.252375,-0.504902,-8.336235,-3.721344,7.152804],[-7.958099,6.036983,6.929319,0.153048,-1.829978,-9.565739,-2.556792,6.902088,5.066228,7.777761,2.296796,-2.104169],[5.857828,-9.681015,-7.914316,-4.339055,-1.817679,-3.400473,-6.009072,-2.093233,8.142398,-4.833155,9.554915,-9.939426],[9.660349,-2.915380,-0.048841,0.266874,1.663418,2.892909,8.403045,-1.245526,7.668303,6.382425,0.741799,3.635414],[0.764335,-2.337016,0.562792,0.119439,7.407141,9.679618,-7.741395,7.527678,-8.094963,7.291331,-1.983134,8.267633],[-1.445797,1.390804,5.029249,3.308717,8.906353,1.856575,-4.255790,9.611154,-0.724495,6.981360,4.337749,3.196671],[2.660374,6.084084,-3.227536,-5.066107,-1.453016,-6.546364,-0.417545,-3.296604,-7.232457,-7.140022,-7.189512,-8.241444],[-5.158459,6.306149,-6.007384,-1.497941,5.256888,-5.621130,-9.386687,1.633652,-5.336314,-6.282817,0.440337,-3.525573],[5.531259,-9.776041,7.516563,-7.841430,5.366358,8.482882,-4.372191,8.850640,-9.039839,-2.917515,-1.092003,9.776312],[9.913812,5.776308,-4.856495,-2.102185,-7.180815,2.755075,7.278247,-7.800246,2.807848,3.043702,6.068239,8.329322],[-4.137412,-9.453033,3.530734,9.232143,-0.700895,2.626909,4.786900,-0.832374,4.060428,5.829532,8.642463,4.334251],[5.658462,4.715388,2.779035,-5.651595,-7.925914,7.235712,-7.125587,-0.672644,7.863812,0.411608,-7.356962,2.867727]],[[9.779691,-3.488924,-6.719675,4.842143,-1.134213,-5.002054,-7.760784,4.762684,2.156326,-9.394188,-5.023460,-7.113603],[6.019871,-6.722930,1.969379,7.375528,-7.388904,-1.884232,0.286694,-3.847798,-4.092392,0.307920,-9.985769,0.196424],[4.513832,5.528591,-1.770913,-2.555804,-0.402882,3.868195,-7.086853,-9.076557,7.265504,9.682836,1.737034,-7.008469],[-2.111832,-9.394702,9.064216,-8.801505,2.251563,-7.483936,-4.858628,3.324825,0.282458,-0.974839,2.894761,-2.117015],[7.269383,1.436707,5.664236,-0.624412,-8.110668,-5.428416,-3.157602,-2.821296,7.384429,-9.422767,5.649445,-1.301207],[-3.546591,-2.753214,0.194575,-8.802654,-9.196489,4.757614,-8.712124,6.339862,-1.842383,-8.738891,7.462352,7.070898],[5.518914,-1.650471,7.756238,3.888306,5.141448,-0.829420,-0.582774,-3.620928,-0.590976,-1.093107,5.889270,4.618735],[-5.522863,6.499715,1.552280,-2.588008,-2.893269,1.005156,6.798163,2.957611,6.211346,9.899393,8.780472,-9.381808],[-0.730998,-1.359419,6.935333,4.927092,5.187655,3.850139,2.778575,8.472186,-8.289392,-1.802262,5.171773,-0.569395],[3.735245,-6.805738,8.264335,-6.665459,6.143253,-1.268726,8.587728,-3.101964,-3.997832,7.145044,2.297705,3.377816],[2.249782,8.989877,8.167741,1.696239,-3.584709,3.978025,1.128226,4.986999,-1.908547,5.227491,7.061294,-3.296419],[9.737807,-9.188359,-7.546702,-0.993433,7.805656,-8.987421,8.422303,6.503707,7.656414,-3.451523,-3.514176,-1.130890],[6.650727,-9.847512,8.449618,-2.235102,-9.910403,-8.043565,-7.169410,3.266980,-7.272967,-4.751884,0.708239,6.127861]],[[6.584262,2.663626,0.385707,-3.061443,2.508494,-0.622478,-7.978148,9.035718,9.455817,9.637369,-0.886620,9.029987],[8.019248,0.614181,8.861685,8.150452,-0.761454,-4.909339,-0.482730,-7.338087,-6.159610,0.037963,7.758070,2.688972],[-6.957132,-2.430397,6.973569,8.965160,2.043610,-2.186597,-8.186201,9.022562,-2.250186,-2.664313,1.364229,0.889483],[3.068324,-2.082688,8.844018,7.556192,-0.785637,6.218486,8.385941,-7.285289,2.607066,5.410488,6.756677,-5.207066],[6.986718,-7.286207,0.998373,-4.240703,-7.028379,9.455434,-4.145876,4.014495,-8.348869,8.345905,-1.543362,-3.399353],[-9.700711,6.181727,3.549111,7.719564,-4.210751,4.008181,1.416124,2.381178,-8.067070,-8.318433,7.748201,4.316428],[-6.040842,-5.187700,2.428598,-7.321424,-8.189320,2.433441,8.117275,-7.673864,-7.781881,3.148899,8.521392,-4.455370],[0.197489,8.389050,-9.107693,-4.839032,3.965835,3.443640,7.060431,-2.470092,4.019559,4.267693,-6.619927,7.002226],[8.214559,2.396170,4.968859,-0.053670,-9.546938,4.598152,0.963094,0.305297,-4.945938,7.846449,-9.169096,-1.644593],[5.072786,-3.358771,5.156615,-2.747169,-1.980071,-9.499095,9.420727,-5.295009,-4.974623,9.069346,4.016216,-5.313367],[3.555547,6.379992,8.343530,-3.938689,-4.783289,-7.921742,-1.604902,-6.407138,-5.720133,-4.553113,-0.307219,9.779951],[-6.517362,-3.220884,0.995598,-1.739642,-6.165598,-4.011312,1.745170,-9.323538,8.481269,6.103910,5.956440,-0.797187],[-5.583790,-5.244903,8.952485,7.579491,-8.200673,3.343855,-5.984680,-2.810803,-7.361080,-8.530396,2.972152,6.514376]],[[-4.081601,-8.404949,-9.044467,1.322619,7.915468,4.427556,-0.593448,0.536842,-4.218674,-0.686493,-3.790761,4.063983],[-6.008318,-3.863939,-1.784511,-1.135742,-3.470284,0.115001,-8.421381,-9.542785,-1.710738,-8.582855,-1.794330,9.589085],[4.479876,-6.723808,-7.141915,-9.050620,4.096783,6.254158,-7.723225,-3.781251,-7.100926,8.804077,5.710325,8.570376],[-2.146025,-0.654141,3.556601,2.604180,3.900560,-3.184278,-3.175476,-9.221450,3.042100,9.001345,-2.848633,-0.081418],[5.566543,4.159988,4.165863,-0.506331,-1.581707,7.087665,-0.812793,-0.929069,-8.445392,-3.862078,3.708283,-9.597931],[-5.344876,-7.647556,-0.855908,5.832810,8.529029,-6.234077,6.217537,-2.257908,6.440508,2.089144,-9.954991,2.862269],[-0.139691,1.776661,8.286672,-9.491387,-7.588315,-7.073214,-8.317335,-6.097242,-5.640168,-5.187736,-6.288027,3.683924],[-2.112570,6.863943,8.149259,5.940786,-0.065535,5.720860,7.793410,2.458524,3.002474,-6.813767,-4.020812,4.187417],[9.588110,-0.230562,-9.726388,1.614356,9.732566,3.742411,2.479786,-8.151468,-0.395110,8.482247,-2.423769,3.805605],[-5.775673,6.262337,-5.681807,5.940156,-5.509585,5.030771,-7.234693,-5.432051,-8.487884,-6.894227,-9.207990,3.947748],[-3.747282,-5.636052,-0.647272,-8.077941,3.359030,6.197068,-6.886236,0.081209,-3.888233,6.649223,2.221051,-2.016953],[-3.893606,-9.610537,-1.226790,9.032766,-0.305178,0.854161,0.231372,-4.046953,1.819209,-1.323160,-6.870776,-6.835366],[6.798478,5.941359,3.794068,-3.699560,-3.993518,5.555408,-8.963980,-0.878674,-1.374077,2.084148,4.827285,1.049967]],[[0.783328,7.938033,5.147693,5.465422,1.059738,-9.953029,-5.849807,-8.882423,6.325224,0.553123,-0.401491,-5.003437],[3.214232,-1.842609,3.809962,5.154380,-5.608985,5.394321,3.867644,-8.290160,2.985363,7.356616,6.196966,7.430635],[1.977581,-4.363619,-6.876827,7.794785,6.486342,-7.452050,2.717154,8.393700,-8.072275,5.370866,8.751522,9.505776],[-1.054728,1.775439,-0.676009,-2.092244,2.345479,-3.499944,-6.679999,-1.750735,7.910381,-1.000675,-9.314533,-2.289814],[-1.858302,-4.370580,8.569802,7.976374,6.124052,0.286475,9.495745,2.851033,7.762341,-3.452453,3.533253,6.532423],[4.823022,6.111026,3.185992,4.551793,-0.127284,-1.744269,3.861860,1.465199,-4.117908,-7.468359,4.891223,-0.114687],[0.812278,-0.140293,6.732943,-5.209992,2.200298,8.905262,2.575209,4.011648,-1.685042,-0.717275,9.665730,-6.094036],[-7.765791,0.709357,7.241373,-7.152672,-2.878606,9.481204,-0.124658,-6.441916,-3.861196,4.685836,-5.460076,0.008130],[-5.887762,-9.434006,4.629331,3.085668,-9.059648,4.265415,-7.043101,-3.682618,-7.873456,6.062767,6.463938,0.264384],[9.033520,-6.837835,0.644018,-7.073053,8.811249,9.160879,-0.959031,-1.691883,1.190777,-6.141223,-9.524147,-4.215422],[-2.625077,7.880706,3.016620,5.348396,9.511595,7.550180,1.223122,-6.978122,-3.756503,-0.727397,-3.477693,3.918193],[-5.742001,-2.771900,4.411235,-5.890235,-6.810078,6.656943,-8.948710,-9.677306,-7.443755,-2.666954,4.623701,-3.346849],[-5.152157,-2.215574,-3.671991,-4.110289,4.769702,3.934131,5.407082,0.415363,6.267179,0.040745,2.404314,-5.755645]]], dtype = "float64")#candidate|6460|(6, 13, 12)|const|float64
bop_6461 = relay.bitwise_xor(call_6443.astype('uint8'), relay.reshape(const_6460.astype('uint8'), relay.shape_of(call_6443))) # shape=(6, 13, 12)
bop_6464 = relay.bitwise_xor(call_6444.astype('uint8'), relay.reshape(const_6460.astype('uint8'), relay.shape_of(call_6444))) # shape=(6, 13, 12)
output = bop_6461
output2 = bop_6464
func_6492 = relay.Function([], output)
mod['func_6492'] = func_6492
mod = relay.transform.InferType()(mod)
mutated_mod['func_6492'] = func_6492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6492_call = mutated_mod.get_global_var('func_6492')
call_6493 = func_6492_call()
output = call_6493
func_6494 = relay.Function([], output)
mutated_mod['func_6494'] = func_6494
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6524 = relay.const([[[-3,8,7,5,-9,7,10,-1,-6,-6],[-8,1,8,-4,-6,1,-3,1,2,6],[-6,-5,3,-5,-6,9,3,-10,7,1],[4,-3,1,-7,-9,6,-7,4,-8,10],[1,8,9,-8,-3,10,-1,4,-8,-4],[-5,-2,1,4,-4,-3,-4,-8,10,1],[-5,1,-5,-7,-6,-8,3,-5,8,6],[-6,7,-2,4,1,5,8,3,1,-6],[2,1,-6,2,8,3,8,5,-5,2],[-6,-3,5,6,5,-4,-6,4,1,-5],[5,2,-2,-3,-8,4,-4,-6,2,-6],[6,5,6,5,9,-8,-1,-8,-9,-9]]], dtype = "int8")#candidate|6524|(1, 12, 10)|const|int8
var_6525 = relay.var("var_6525", dtype = "int8", shape = (8, 12, 10))#candidate|6525|(8, 12, 10)|var|int8
bop_6526 = relay.right_shift(const_6524.astype('int8'), var_6525.astype('int8')) # shape=(8, 12, 10)
var_6530 = relay.var("var_6530", dtype = "int8", shape = (8, 12, 10))#candidate|6530|(8, 12, 10)|var|int8
bop_6531 = relay.bitwise_xor(var_6525.astype('int16'), relay.reshape(var_6530.astype('int16'), relay.shape_of(var_6525))) # shape=(8, 12, 10)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_6536 = relay.TupleGetItem(func_124_call(), 2)
call_6537 = relay.TupleGetItem(func_125_call(), 2)
func_6222_call = mod.get_global_var('func_6222')
func_6223_call = mutated_mod.get_global_var('func_6223')
call_6541 = func_6222_call()
call_6542 = func_6222_call()
func_4947_call = mod.get_global_var('func_4947')
func_4948_call = mutated_mod.get_global_var('func_4948')
call_6543 = relay.TupleGetItem(func_4947_call(), 0)
call_6544 = relay.TupleGetItem(func_4948_call(), 0)
func_492_call = mod.get_global_var('func_492')
func_494_call = mutated_mod.get_global_var('func_494')
call_6553 = func_492_call()
call_6554 = func_492_call()
output = relay.Tuple([bop_6526,bop_6531,call_6536,call_6541,call_6543,call_6553,])
output2 = relay.Tuple([bop_6526,bop_6531,call_6537,call_6542,call_6544,call_6554,])
func_6565 = relay.Function([var_6525,var_6530,], output)
mod['func_6565'] = func_6565
mod = relay.transform.InferType()(mod)
var_6566 = relay.var("var_6566", dtype = "int8", shape = (8, 12, 10))#candidate|6566|(8, 12, 10)|var|int8
var_6567 = relay.var("var_6567", dtype = "int8", shape = (8, 12, 10))#candidate|6567|(8, 12, 10)|var|int8
output = func_6565(var_6566,var_6567,)
func_6568 = relay.Function([var_6566,var_6567,], output)
mutated_mod['func_6568'] = func_6568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4999_call = mod.get_global_var('func_4999')
func_5000_call = mutated_mod.get_global_var('func_5000')
call_6634 = func_4999_call()
call_6635 = func_4999_call()
func_4344_call = mod.get_global_var('func_4344')
func_4346_call = mutated_mod.get_global_var('func_4346')
call_6645 = relay.TupleGetItem(func_4344_call(), 0)
call_6646 = relay.TupleGetItem(func_4346_call(), 0)
func_4437_call = mod.get_global_var('func_4437')
func_4439_call = mutated_mod.get_global_var('func_4439')
call_6649 = func_4437_call()
call_6650 = func_4437_call()
uop_6653 = relay.atan(call_6645.astype('float32')) # shape=(6, 13, 12)
uop_6655 = relay.atan(call_6646.astype('float32')) # shape=(6, 13, 12)
func_124_call = mod.get_global_var('func_124')
func_125_call = mutated_mod.get_global_var('func_125')
call_6656 = relay.TupleGetItem(func_124_call(), 0)
call_6657 = relay.TupleGetItem(func_125_call(), 0)
output = relay.Tuple([call_6634,call_6649,uop_6653,call_6656,])
output2 = relay.Tuple([call_6635,call_6650,uop_6655,call_6657,])
func_6698 = relay.Function([], output)
mod['func_6698'] = func_6698
mod = relay.transform.InferType()(mod)
mutated_mod['func_6698'] = func_6698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6698_call = mutated_mod.get_global_var('func_6698')
call_6699 = func_6698_call()
output = call_6699
func_6700 = relay.Function([], output)
mutated_mod['func_6700'] = func_6700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4629_call = mod.get_global_var('func_4629')
func_4630_call = mutated_mod.get_global_var('func_4630')
call_6727 = relay.TupleGetItem(func_4629_call(), 0)
call_6728 = relay.TupleGetItem(func_4630_call(), 0)
var_6754 = relay.var("var_6754", dtype = "float32", shape = (11, 13, 13))#candidate|6754|(11, 13, 13)|var|float32
bop_6755 = relay.logical_or(call_6727.astype('bool'), relay.reshape(var_6754.astype('bool'), relay.shape_of(call_6727))) # shape=(11, 13, 13)
bop_6758 = relay.logical_or(call_6728.astype('bool'), relay.reshape(var_6754.astype('bool'), relay.shape_of(call_6728))) # shape=(11, 13, 13)
func_1668_call = mod.get_global_var('func_1668')
func_1669_call = mutated_mod.get_global_var('func_1669')
call_6774 = relay.TupleGetItem(func_1668_call(), 0)
call_6775 = relay.TupleGetItem(func_1669_call(), 0)
output = relay.Tuple([bop_6755,call_6774,])
output2 = relay.Tuple([bop_6758,call_6775,])
func_6782 = relay.Function([var_6754,], output)
mod['func_6782'] = func_6782
mod = relay.transform.InferType()(mod)
var_6783 = relay.var("var_6783", dtype = "float32", shape = (11, 13, 13))#candidate|6783|(11, 13, 13)|var|float32
output = func_6782(var_6783)
func_6784 = relay.Function([var_6783], output)
mutated_mod['func_6784'] = func_6784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6320_call = mod.get_global_var('func_6320')
func_6321_call = mutated_mod.get_global_var('func_6321')
call_6837 = relay.TupleGetItem(func_6320_call(), 1)
call_6838 = relay.TupleGetItem(func_6321_call(), 1)
func_2476_call = mod.get_global_var('func_2476')
func_2478_call = mutated_mod.get_global_var('func_2478')
const_6866 = relay.const([8,5,7,-9,1,2,7,3,-2,-5,9,10,5,3,6,5,2,-5,-3,2,4,6,-5,-1,9,6,7,2,-8,7,8,9,4,-3,-10,-1,-8,4,-7,10,2,-3,-2,4,-9,5,5,-1,9,5,6,-4,4,-8,4,6,6,8,4,9,4,-5,9,9,-10,7,-2,-4,10,9,2,1,-5,-5,10,-6,-7,5,-7,-5,-9,-6,-5,9,-2,9,-4,-1,9,9,7,6,-6,-3,-3,3,3,3,2,5,-10,10,-7,2,5,7,-7,-10,-2,-10,-1,9,4,4,-3,2,5,7,2,-8,-1,1,-8,4,3,-4,-9,-10,4,1,-3,3,4,10,9,3,2,9,4,-9,9,1,6,-3,5,10,-6,8,4,5,5,-5,-9,-9,10,-10,-1,7,2,10,3,-7,-4,10,-2,-1,-1,6,-1,-5,-2,1,5,5,-9,7,6,2,7,-9,-7,6,7,1,8,10,-10,5,1,5,4,4,5,1,-10,-1,-1,6,-2,7,-3,-9,-9,10,-6,-2,8,2,3,-5,6,-1,-4,6,-4,-5,-1,9,1,-4,6,-9,1,10,-7,-9,3,-9,-7,-3,7,9,4,-9,-9,6,-8,-2,8,-7,6,-9,5,6,-2,-4,-8,-8,1,1,-2,-5,-4,3,8,-9,3,-3,-6,2,-9,9,-1,2,-6,-4,-2,1,8,5,2,-2,2,5,4,7,8,-1,-5,-5,-7,-9,7,-4,4,5,-5,-2,2,-6,7,-10,-1,7,7,7,8,5,-8,4,-10,9,-4,2,-8,-4,6,-3,-8,-5,10,-1,9,-8,4,-10,-1,-8,10,2,-2,7,2,-7,10,-5,5,1,-1,3,-2,-10,2,7,1,1,8,1,6,2,9,6,-3,-8,-7,2,3,-2,1,8,1,-5,-5,-10,-4,9,-10,-9,-4,-9,-7,-2,-2,-7,4,-5,5,7,-6,-3,1,-6,-6,6,-2,-3,-8,3,-7,-5,8,-9,9,4,-3,8,6,-5,-10,4,-7,-5,2,-7,10,4,-1,10,-7,7,-1,3,8,-2,8,2,-5,-2,-5,-7,-2,-3,-4,-5,9,-2,-5,-8,3,-5,7,8,-4,-8,3,6,-8,8,-3,-2,3,3,-9,4,2,-4,-7,-3,-7,2,8,-5,8,-8,-6,-5,6,-8,-10,8,-2,-1,9,9,-6,-5,-10,1,-4,9,1,1,-2,2,-1,-4,-5,1,-10,1,3,10,-6,1,2,-2,-4,10,-1,-7,-5,7,-7,-5,1,1,-1,9,-2,1,-10,6,-7,-1,-1,3,1,-7,10,-3,9,7,5,-1,-6,-2,7,-4,6,-3,6,-4,-7,5,-4,-8,-4,-5,3,-7,-8,9,9,-10,-9,-2,10,-3,-7,-4,-7,-4,-7,10,-4,-9,8,-8,1,1,-10,8,9,4,-10,-6,1,9,-10,-10,-10,9,-8,4,-4,1,8,-3,-9,-2,7,9,8,8,9,-4,-6,6,9,-3,-4,6,-2,-10,6,-1,10,1,-7,7,4,4,4,3,-9,4,-1,-5,9,-3,7,-8,-3,6,9,-4,5,-4,-8,-10,-5,10,7,6,-3,1,-2,-7,-1,3,-6,-2,6,8,4,3,-4,-5,8,-9,10,-1,10,-7], dtype = "int8")#candidate|6866|(624,)|const|int8
call_6865 = func_2476_call(relay.reshape(const_6866.astype('int8'), [13, 16, 3]))
call_6867 = func_2476_call(relay.reshape(const_6866.astype('int8'), [13, 16, 3]))
func_1124_call = mod.get_global_var('func_1124')
func_1126_call = mutated_mod.get_global_var('func_1126')
call_6875 = func_1124_call()
call_6876 = func_1124_call()
func_1346_call = mod.get_global_var('func_1346')
func_1349_call = mutated_mod.get_global_var('func_1349')
const_6884 = relay.const(False, dtype = "bool")#candidate|6884|()|const|bool
call_6883 = relay.TupleGetItem(func_1346_call(relay.reshape(const_6884.astype('bool'), [])), 1)
call_6885 = relay.TupleGetItem(func_1349_call(relay.reshape(const_6884.astype('bool'), [])), 1)
func_5801_call = mod.get_global_var('func_5801')
func_5802_call = mutated_mod.get_global_var('func_5802')
call_6894 = relay.TupleGetItem(func_5801_call(), 0)
call_6895 = relay.TupleGetItem(func_5802_call(), 0)
output = relay.Tuple([call_6837,call_6865,const_6866,call_6875,call_6883,const_6884,call_6894,])
output2 = relay.Tuple([call_6838,call_6867,const_6866,call_6876,call_6885,const_6884,call_6895,])
func_6900 = relay.Function([], output)
mod['func_6900'] = func_6900
mod = relay.transform.InferType()(mod)
output = func_6900()
func_6901 = relay.Function([], output)
mutated_mod['func_6901'] = func_6901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3618_call = mod.get_global_var('func_3618')
func_3620_call = mutated_mod.get_global_var('func_3620')
call_6902 = relay.TupleGetItem(func_3618_call(), 0)
call_6903 = relay.TupleGetItem(func_3620_call(), 0)
func_4513_call = mod.get_global_var('func_4513')
func_4517_call = mutated_mod.get_global_var('func_4517')
const_6905 = relay.const(8, dtype = "int32")#candidate|6905|()|const|int32
const_6906 = relay.const([[-3,-8,1,-4,2,-3,-4,-7,5,-5,-8,-10,-5,5,5,3,-4,-10,2,-7,3,5,10,-8,-6,6,3,3,5,7,9,7,-10,10,2,-8,-9,2,7,-4,2,-8,-6,-4,-1,10,-10,3,3,-6,3,1,7,3,1,8,7,-10,-7,5,-7,7,-1,1]], dtype = "int32")#candidate|6906|(1, 64)|const|int32
call_6904 = func_4513_call(relay.reshape(const_6905.astype('int32'), []), relay.reshape(const_6906.astype('int32'), [8, 8, 1]), )
call_6907 = func_4513_call(relay.reshape(const_6905.astype('int32'), []), relay.reshape(const_6906.astype('int32'), [8, 8, 1]), )
output = relay.Tuple([call_6902,call_6904,const_6905,const_6906,])
output2 = relay.Tuple([call_6903,call_6907,const_6905,const_6906,])
func_6908 = relay.Function([], output)
mod['func_6908'] = func_6908
mod = relay.transform.InferType()(mod)
output = func_6908()
func_6909 = relay.Function([], output)
mutated_mod['func_6909'] = func_6909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_205_call = mod.get_global_var('func_205')
func_207_call = mutated_mod.get_global_var('func_207')
call_7034 = func_205_call()
call_7035 = func_205_call()
output = call_7034
output2 = call_7035
func_7042 = relay.Function([], output)
mod['func_7042'] = func_7042
mod = relay.transform.InferType()(mod)
mutated_mod['func_7042'] = func_7042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mutated_mod.get_global_var('func_7042')
call_7043 = func_7042_call()
output = call_7043
func_7044 = relay.Function([], output)
mutated_mod['func_7044'] = func_7044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_382_call = mod.get_global_var('func_382')
func_383_call = mutated_mod.get_global_var('func_383')
call_7088 = relay.TupleGetItem(func_382_call(), 0)
call_7089 = relay.TupleGetItem(func_383_call(), 0)
uop_7091 = relay.tan(call_7088.astype('float64')) # shape=(6, 13, 12)
uop_7093 = relay.tan(call_7089.astype('float64')) # shape=(6, 13, 12)
func_1408_call = mod.get_global_var('func_1408')
func_1412_call = mutated_mod.get_global_var('func_1412')
var_7097 = relay.var("var_7097", dtype = "float64", shape = (75,))#candidate|7097|(75,)|var|float64
call_7096 = relay.TupleGetItem(func_1408_call(relay.reshape(var_7097.astype('float64'), [75,]), relay.reshape(var_7097.astype('float64'), [75,]), ), 0)
call_7098 = relay.TupleGetItem(func_1412_call(relay.reshape(var_7097.astype('float64'), [75,]), relay.reshape(var_7097.astype('float64'), [75,]), ), 0)
func_2829_call = mod.get_global_var('func_2829')
func_2830_call = mutated_mod.get_global_var('func_2830')
call_7104 = func_2829_call()
call_7105 = func_2829_call()
var_7108 = relay.var("var_7108", dtype = "float64", shape = (6, 13, 12))#candidate|7108|(6, 13, 12)|var|float64
bop_7109 = relay.floor_divide(uop_7091.astype('float32'), relay.reshape(var_7108.astype('float32'), relay.shape_of(uop_7091))) # shape=(6, 13, 12)
bop_7112 = relay.floor_divide(uop_7093.astype('float32'), relay.reshape(var_7108.astype('float32'), relay.shape_of(uop_7093))) # shape=(6, 13, 12)
func_4328_call = mod.get_global_var('func_4328')
func_4332_call = mutated_mod.get_global_var('func_4332')
const_7119 = relay.const([[-6,-2,-10,-8,9,-4,2,5,2,-4,-3,-4,6,-5,-9,-10,9,-3,-5,4,10,-6,-3,-4,-2,-2,3,-8,-10,-5,-5,-4,-9,3,-10,9,-6,-2,-5,4,5,6,1,-1,8,2,3,6,-4,9,6,4,4,-1,-2,-8,-10,-9,8,-4,5,10,1,-1,4,9,-9,-4,-10,-10,7,-1,2,-9,-9,-9,-6,-4,4,2,-7,-10,5,-7,-6,-7,-7,-1,10,1,1,-8,6,6,9,-8,8,-3,1,-7,-1,9,5,-8,9,8,9,9,-8,-7,-4,5,2,-4,-10,-9,5,8,7,-7]], dtype = "int64")#candidate|7119|(1, 120)|const|int64
const_7120 = relay.const([[6,-6,8,10,-6,-2,-9,1,9,-1,-7,-9,-6,6,2,9,-1,-10,-9,-5,-7,2,-7,-7,-4,7,-7,-10,3,-5,5,-3,-2,-5,5,4,8,6,-8,-2,-1,6,7,1,1,7,1,-2,4,4,9,1,-5,-3,-10,-7,-7,-9,6,-6,-5,3,-4,-10,4,8,-3,1,6,3,10,-6,-1,-1,2,-6,-10,-6,-5,3,-4,3,9,-5,7,-10,-6,-3,-9,3,-10,2,-7,-6,-7,-4,-9,-8,10,-3,1,-5,8,-5,-10,10,-9,-4,3,1,-9,2,-3,-6,6,-1,5,-6,-1,1,3,-3,-6,-1,7,10,8,-3,4,3,1,7,-7,10,-7,-1,-6,3,3,2,5,-5,-6,3,8,-10,-9,8,3,5,-10,-10,-5,10,-4,-8,-6,5,9,-2,5,9,-10,-9,-4,-2,-5,3,-5,7,-5,10,10,-3,-3,-8,-8,2,4,2,-8,-4,-7,4,-10,-3,8,6,9,6,6,-2,-3,-4,-8,6,-3,10,7,-3,-4,10,10,-1,7,4,-5,8,3,-6,-10,-6,1,4,9,-5,-4,9,2,4,9,-1,-6,-2,-2,-7,-9,7,10,-9,1,-4,-8,-2,4,10,-5,8,1,-8,6,-7,-10,-6,8,-9,-1,7,-7,2,4,-3,-2,-10,-10,-5,-6,3,9,-6,7,7,2,9,-10,9,2,4,-4,8,3,-10,8,-4,-5,3,10,9,-3,-9,1,8,3,-9,6,-1,-5,-9,6,-9,6,2,3,5,-2,-10,6,6,1,6,-5,8,2,2,-1,-9,-6,-4,-4,6,5,9,-3,1,-2,-1,6,8,7,5,4,8,9,-8,10,9,7,9,4,-4,-6,7,4,-1,-5,2,2,-9,9,4,-1,-5,2,10,3,-4,9,-5,7,6,2,-3,-8,-5,-10,-6,-1,-1,6,-9,-5,2,-6,-9,-10,-5,4,7,10,9,-1,5,6,7,9,-3,-10,-10,-9,-9,5,1,2,9,2,-6,-3,-4,-6,2,-8,-2,9,5,3,9,8,5,-10,3,-4,-4,9,7,9,-5,-4,5,10,-3,4,9,4,3,2,-7,-7,5,-8,-5,4,6,-6,-3,-3,-7,10,10,-2,9,8,-2,6,-3,2,5,-8,3,-4,-8,3,-3,-3,-7,5,-1,-4,10,-4,6,2,1,-2,2,3,2,-7,-10,-7,5,5,-7,-1,-10,-1,-1,8,1,-10,-6,6,8,-3,2,-5,4,-3,10,-7,8,-7,-10,-3,-2,7,4,6,-5,-2,8,5,9,2,-1,2,-8,-8,-1,-3,-4,3,-4,-1,7,-7,1,9,-10,-1,-4,2,-1,2,3,-7,8,4,8,-10,-7,1,10,9,-3,-5,-3,-10,-9,-6,-10,9,10,7,-7,4,7,-1,7,9,10,8,-8,10,3,-10,-7,-8,-2,-9,-5,2,-10,8,-5,-1,8,-10,10,-6,6,-3,-4,-1,9,5,5,-5,-2,-2,8,4,3,-2,4,5,3,2,-10,-4,-5,2,-8,-4,-7,-9,-2,-3,-7,-9,3,10,1,-5,-8,-1,-10,4,-9,10,9,-3,4,-7,2,-3,-9,3,6,-4,-7,-9,7,8,-2,-3,10,1,3,5,5,10,-1,-5,-1,3,-3,6,6,7,2,8,-10,-8,-8,-10,-10,-6,-3,10,-1,1,-3,-7,3,-6,7,-9,-4,10,7,-4,10,10,2,-9,-10,10,-9,4,-2,7,4,-6,10,-2,-6,7,-6,-1,-4,-5,1,2,4,-10,-4,-6,2,1,-8,2,-7,9,-4,6,-9,4,8,-9,-2,9,-7,-6,-6,4,10,-7,-3,-2,9,6,-1,-9,8,1,9,6,6,-7,-1,-8,7,7,4,-6,1,2,-4,-1,10,-4,4,7,4,-2,-6,-5,6,2,5,-4,2,8,-8,10,-3,-7,4,4,-7,-4,-5,-6,3,10,6,4,-9,-3,1,4,-10,8,-4,-4,9,4,7,4,5,-7,9,8,4,-6,9,-9,-1,-2,1,6,2,-3,-9,8,-2,-7,-8,10,8,-7,8,-5,6,5,-3,-7,-10,-5,-9,5,2,4,-8,-10,-2,5,-6,10,8,-9,-6,-8,-9,7,10,9,5,9,-10,2,-9,-2,7,-7,7,8,2,-10,-2,7,1,1,-1,-1,-3,-3,-10,-7,8,4,10,7,-1,-1,5,3,7,-4,-8,9,10,4,-6,-8,5,-10,-7,6,-5,9,8,8,9,2,-6,9,-3,-5,3,5,-7,-4,-3,2,-9,10,4,1,-7,-9,5,9,10,-1,7,-3,-1,9,-9,-4,2,6,-9,9,1,8,-7,-6,-1,10,-2,-2,-3,-9,-4,3,-6,-3,-5,10,2,3,-7,4,7,5,10,4,-10,8,-5,-1,-7,5,-7,-9,7,6,-3,3,8,-9,7,4,6,3,-2,-10,9,2,-2,-4,-2,-2,-3,-7,3,1,-9,7,-8,5,-5,8,2,-9,-10,-3,3,9,8,-9,2,-1,7,-4,-10,-5,-8,8,-3,-6,10,-9,-5,-1,6,6,-9,7,-4,-1,2,1,10,-1,8,8,-7,3,5,4,3,9,6,-8,-9,-7,6,2,-7,9,-10,-5,5,-8,-1,2,-4,-4,7,5,2,8,1,-5,4,-4,-2,1,7,10,4,2,2,-10,-9,-6,6,10,-5,6,9,-4,-10,-10,6,7,-1,8,4,-4,-1,-3,-4,4,7,1,-3,1,-1,2,-1,5,-5,-5,1,1,10,8,-8,5,6,5,10,3,-7,9,4,-1,-9,8,-6,1,-3,-1,-3,6,4,-9,7,8,-6,3,-2,-9,-1,-2,-5,4,-2,-9,-3,4,-8,2,2,-9,-6,10,-5,1,-5,-4,6,10,-2,2,-6,3,-9,9,-4,2,3,9,1,5,-5,-6,-6,8,5,-5,6,7,4,7,-8,-7,-10,-10,-10,-7,-3,-5,-1,-1,3,-9,6,4,-4,8,-1,3,-3,4,-8,-8,6,-4,-6,-5,-2,10,4,10,7,2,-4,3,7,-1,-8,8,2,-5,8,9,-6,-10,5,10,9,-1,-4,10,-2,8,10,8,-7,-2,2,-7,-2,-1,-8,-8,1,-1,6,8,-2,1,-2,6,1,8,-1,4,-1,-8,-5,7,-10,3,-10,5,9,6,5,5,-9,-9,-8,-4,7,-10,-2,8,-5,-7,6,-7,-8,-8,-4,-8,6,5,-10,2,3,-2,9,7,3,-7,6,1,6,4,2,2,1,1,6,-1,-5,4,-2,-6,-4,1,-6,1,-4,9,-9,6,-8,-1,10,5,-6,-9,-9,1,-7,-1,-7,-6,-7,8,8,6,-3,-2,1,-10,6,5,-4,9,1,6,-2,10,9,-5,-6,-5,-10,-1,6,-9,-1,-8,-1,6,-4,-1,-7,6,-2,5,6,4,6,-8,-9,5,-3,4,-7,-5,5,9,-8,-9,10,6,-3,3,-10,-2,-9,-8,9,6,2,-8,9,10,6,10,3,-3,8,6,6,6,4,-10,6,8,9,-7,-7,8,8,1,-5,10,2,-3,3,-6,5,-9,-1,-9,4,1,-2,-7,10,-4,6,-8,9,7,-3,8,-8,-9,3,-3,5,-2,-6,9,-9,-9,-6,-3,10,-6,2,3,10,-1,3,4,10,6,7,10,-10,-10,7,3,3,4,-3,5,10,-10,10,10,-10,-5,-2,2,3,-8,7,-2,1,6,-3,-9,7,-8,3,-8,-2,9,-8,-6,7,3,-5,6,1,10,-5,10,8,2,4,4,2,2,8,-3,1,-1,-3,4,1,1,-5,-9,-7,-6,-10,6,6,4,-5,-9,4,-7,-6,-4,-7,2,-6,-6,-1,-3,-3,-5,-9,10,-5,-4,-8,-8,2,-3,7,-10,8,7,8,-2,-10,-9,3,7,-10,-9,-2,5,10,-2,5,1,9,5,-7,10,4,-10,-1,-7,8,3,4,3,-8,-1,6,-8,-10,-2,-10,6,-4,-10,-3,-7,-2,2,-8,10,-9,-9,-10,10,2,7,-6,5,-9,-4,4,7,4,2,6,8,-2,2,5,-2,-6,10,-3,-2,2,7,1,-1,-5,7,-4,9,-1,10,3,-5,-2,-10,10,9,2,-5,2,-8,-1,-8,-9,3,-6,-7,4,7,-7,-2,1,-8,-9,-7,-10,-8,9,6,-3,-7,-1,-9,8,-2,2,-1,-5,-9,-3,5,-1,-2,7,8,6,-10,-2,3,-2,5,9,1,9,8,6,5,6,-10,7,4,5,-2,10,9,8,-8,-3,1,-8,-2,-4,-4,6,3,1,-7,-1,5,4,-3,-7,-9,1,2,3,-6,3,-7,-3,10,-10,-10,6,2,9,-2,8,7,-5,3,-3,7,10,-4,-4,4,-1,-5,-2,-9,-2,-7,6,4,-5,1,7,-3,-10,7,-1,-2,-9,-1,3,2,-1,-10,5,10,2,-7,7,-3,6,5,-2,10,-3,2,9,3,-5,8,-8,9,10,-6,-5,-4,-10,-8,5,6,9,5,-4,-9,-3,10,-7,-9,6,-4,6,-3,8,-9,-9,2,-4,5,5,-8,5,8,-8,9,-4,-4,10,5,9,10,10,6,-8,4,9,10,2,5,4,-2,6,9,3,5,-9,-10,8,-4,8,-8,2,10,7,-1,-9,1,9,5,-3,4,7,2,-3,-2,6,10,9,9,-5,-8,3,2,-9,-4,7,-6,-5,10,9,-10,3,1,10,-7,-2,9,-4,7,-8,-8,10,-9,-4,-4,-10,-8,-4,4,-2,-7,8,8,-9,-5,-6,3,-9,-5,-3,8,3,8,-6,9,7,-2,6,-7,5,-3,7,10,-10,8,2,-9,-1,-2,3,-7,-1,-3,9,1,4,-6,10,8,9,-5,2,-5,5,4,-1,6,9,7,1,-3,-4,9,-5,5,-3,-6,-6,-9,-2,-9,-5,-3,6,4,1,-6,8,-10,2,-10,8,7,-1,-7,1,-4,-2,-1,-10,-10,4,-6,1,9,1,-6,5,5,2,-9,-9,-9,1,-9,-7,-1,-5,5,-1,9,4,-1,1,-7,7,7,-8,-6,8,-1,6,-10,-7,7,1,-1,1,6,-9,4,8,3,10,6,-5,-7,-8,-2,-1,-4,2,7,-9,-5,5,-6,3,-8,7,2,-2,-4,3,-7,2,-9,1,10,-1,10,-6,-9,-6,-1,3,-8,2,7,-6,2,-10,-2,6,-10,-9,-3,9,-4,-8,-7,-10,-8,-6,8,1,-10,10,1,6,-5,4,-9,-9,-5,2,8,8,4,10,6,3,-2,7,-3,5,-7,-5,9,1,-8,9,-5,-3,10,5,5,-9,-3,10,-9,-3,5,7,9,-9,3,7,4,-8,-1,8,3,5,-6,-3,2,-3,1,1,10,-10,-10,10,5,8,-3,6,-6,3,5,-6,1,4,-1,-3,-8,3,-10,-2,1,4,8,1,10,5,7,2,5,1,2,-9,8,8,3,6,-2,9,10,-4,-3,6],[4,-9,6,7,3,-8,-7,1,-8,5,9,10,5,2,4,-9,7,-9,5,3,-1,-1,7,10,2,5,-3,-3,-8,-8,4,-3,3,-4,-8,-10,-7,-9,4,-2,-5,8,-4,6,-5,-6,-10,-9,-1,-3,9,-9,-4,-3,-8,-7,-5,-10,-7,3,-1,-8,-2,-7,-10,-3,4,7,2,10,-6,2,-3,2,-1,9,-8,4,-6,4,-1,-4,10,-7,-1,2,-6,-3,-7,9,2,1,-9,-1,-5,-8,1,-5,5,-1,1,-8,-8,-7,5,-2,-6,-8,-7,9,-3,2,10,3,1,4,7,-8,10,-9,-1,-4,5,5,3,6,2,-10,-5,-10,6,8,-3,-10,2,-9,-2,4,-7,9,-3,-7,-3,7,-7,4,-10,-9,-1,-7,-10,-7,-9,10,-10,-7,-6,-7,-1,-6,-3,4,-3,8,1,8,-10,-6,8,7,6,2,-10,8,-5,-10,5,4,6,-3,-5,-10,7,-8,-9,4,10,-7,5,2,10,-8,3,-4,-4,-5,9,8,1,-1,-2,8,-1,2,8,5,5,4,5,-8,6,-10,1,1,5,-4,8,-8,-5,-4,6,3,-1,3,5,-7,-7,6,-8,-1,10,9,-5,7,-7,5,8,-9,6,-7,3,4,4,9,-6,4,-4,-5,9,-1,3,-2,-3,-2,-2,2,4,7,-5,-1,-9,-8,-7,3,5,4,7,8,8,-1,-8,8,-8,-1,5,5,-8,-6,7,3,-3,-9,5,-2,-7,5,-7,-7,-10,-9,4,-7,-8,9,4,9,-1,8,6,-10,7,8,10,1,8,5,6,4,6,-1,-7,8,9,-5,9,9,3,-10,-5,-1,4,6,-9,-6,-4,-5,-7,1,8,2,3,3,-1,9,7,10,7,1,-6,8,6,-5,6,-1,-1,-4,-6,-10,-2,-4,10,-10,2,2,-10,2,-4,9,10,-6,4,-5,7,-1,6,-9,1,-3,3,-3,-4,9,9,-9,9,-9,-7,7,-2,4,4,-4,3,8,-1,-8,-5,6,-6,-10,-2,2,-5,-3,7,-7,-1,8,8,-9,-8,-5,-6,4,8,9,-6,1,-9,-8,-2,-9,-6,6,-4,3,3,-2,1,-3,1,8,4,-9,-4,1,-4,10,9,3,2,-5,6,-8,-5,-5,-4,6,-2,10,3,-3,-4,-8,10,8,9,-1,-3,1,9,-6,1,-10,8,1,3,-2,-9,-2,4,-3,1,10,-2,-2,9,3,-2,4,-4,5,1,4,8,2,-6,-6,10,3,-9,10,-4,9,-7,8,-10,-7,-10,2,9,-9,9,-3,1,1,-8,-1,6,-8,3,-2,-1,-3,-4,-9,8,-7,3,-8,-4,8,9,-6,-9,8,4,-4,-1,-4,-1,5,10,8,3,-2,4,1,-7,-10,3,8,-8,-2,9,-1,8,-2,9,4,8,9,3,-7,8,9,-5,-1,-9,-1,9,-9,-9,5,-10,2,-2,10,-2,8,-6,5,3,-6,7,9,3,-2,6,2,4,-4,6,4,2,-2,-8,-2,1,3,9,-5,-9,-5,-2,-3,-3,-5,-2,9,-4,4,7,4,8,-7,7,-9,7,-1,1,7,10,2,-4,6,3,-9,8,8,9,10,7,4,3,5,9,7,4,1,-10,6,-9,-4,8,-2,7,-7,-3,-10,-6,10,5,-5,5,-8,7,10,1,-4,6,-8,-9,-9,5,9,-4,-7,6,-9,1,8,5,5,-2,5,-6,10,1,10,-1,-7,7,4,-7,-6,4,6,2,5,2,-3,-6,-4,4,-1,2,-10,4,-4,-8,-9,6,2,-7,-3,7,-7,-9,-8,-6,8,8,9,-3,-3,5,3,-7,9,-2,-3,8,-1,-1,-10,9,7,7,1,10,10,6,-9,8,5,10,-8,9,5,-8,7,2,-9,9,-6,-4,6,-2,10,-3,-10,6,3,-7,3,3,5,5,4,-3,-5,-9,-6,-8,-8,3,5,-6,-3,9,10,-10,-5,10,1,2,-10,-10,9,-3,10,7,-7,6,-7,8,4,4,-6,-1,-10,4,-1,6,-4,-8,-7,2,9,-4,2,4,3,-7,4,6,10,-4,6,-2,-9,7,-5,-9,-6,1,-6,-3,-4,-6,8,-2,3,1,6,-2,-4,-10,-9,-3,2,2,-8,-7,-5,3,-4,-2,-3,-6,6,5,-8,-9,5,-9,-6,7,6,-8,-6,6,8,-8,-3,-9,4,-9,10,-9,-1,-4,-1,-3,-4,10,4,1,-6,-2,-7,7,6,4,-3,-2,1,-3,6,9,-9,-9,7,-4,1,9,8,9,-2,-3,-6,-3,-1,-1,-2,-7,9,3,-8,-8,-4,6,3,-9,10,3,-7,7,3,-4,-6,6,-7,-3,10,3,-8,-8,-8,-9,-9,6,-9,3,-9,-6,8,-4,3,-1,9,-6,6,-10,-3,3,-3,7,4,-5,6,9,5,2,-3,2,-8,-10,6,-9,1,2,-4,6,-8,-10,4,10,-5,1,5,3,-6,8,-5,3,-2,9,-4,2,10,6,-3,5,-9,7,2,9,-3,1,5,-5,9,-3,-1,-4,-6,4,9,7,-8,3,-6,-9,9,-8,-6,-1,5,9,-8,-6,3,4,-9,-1,-7,6,-7,2,-9,-10,1,1,7,3,-2,10,9,9,-4,7,-3,5,-10,-5,5,-3,9,2,3,-1,-4,-10,6,-3,8,-4,-2,2,-3,-2,-4,-5,-8,-9,2,-6,5,-9,7,-3,-9,7,-5,-5,10,7,2,-7,10,-3,-7,9,9,5,2,-1,5,4,1,-8,-7,-4,-8,-1,-6,1,7,7,1,-2,-10,-6,10,-2,-9,1,5,7,4,-2,-4,8,-6,-7,-7,-10,1,1,-5,-4,5,-2,-9,-4,1,-7,-10,8,10,-10,4,5,5,-9,-8,7,-8,-4,2,-4,-5,-7,6,8,1,-2,-10,-2,-2,7,4,5,-5,-1,-6,-7,5,-5,-7,6,3,-3,-6,7,-8,10,-8,-3,4,7,8,3,8,-4,-9,3,8,-4,-2,2,7,9,-9,-8,10,-2,-9,-4,3,4,-8,-5,-4,3,-1,-4,-9,4,9,10,7,-8,9,5,-9,5,5,-6,-8,-3,-3,7,-1,-9,-3,10,3,6,1,3,10,7,-7,-4,-1,-5,-7,-8,5,9,-6,-8,10,-2,-5,10,4,-1,-2,7,-4,-8,7,9,3,2,10,10,-5,-8,-9,6,-8,6,1,-3,-8,-8,-9,10,7,-1,3,-7,-8,-9,-5,-2,-1,3,4,9,-1,8,5,9,-10,-1,6,3,2,2,-6,-10,-5,-9,3,10,8,-1,7,-7,2,2,-5,-3,7,-4,-10,-8,-1,3,-6,7,4,-6,-10,8,10,-2,-6,-2,10,6,4,4,-2,9,-3,-3,-6,8,4,10,9,-9,-6,-8,8,-6,-7,-6,-9,-8,-3,1,-1,-7,-6,-9,6,-8,8,7,-9,6,3,-4,9,7,4,-3,-5,-10,-5,6,6,4,-9,7,5,-3,-5,1,10,8,-5,10,1,-3,-8,10,2,-5,-6,-8,-6,-9,7,-7,-9,-2,7,-4,-2,9,-7,-4,-2,9,-1,-8,7,8,-9,-2,1,1,-6,8,-6,-9,-5,-10,-2,-6,-6,-10,4,-9,-4,-9,7,-4,-9,-2,-9,-5,-4,1,6,10,4,6,-9,-10,6,-9,1,7,-8,-4,9,-1,-8,10,-2,5,10,1,-4,4,10,4,-9,-3,9,-3,-1,-5,9,-1,6,4,-7,7,7,3,9,1,8,6,-5,10,-5,3,10,2,1,-4,-2,10,-6,-7,2,-2,3,-10,9,4,-2,-6,2,10,4,2,7,-5,6,-6,1,-9,-10,-5,-8,2,6,4,-6,1,-8,-9,-6,-8,8,3,5,-6,-2,3,9,-1,3,-1,2,2,7,-7,-6,7,10,-5,-3,-10,-1,-6,10,5,5,-4,-8,-8,-8,7,-1,-9,-4,8,3,-6,-2,-7,2,-6,6,5,-8,10,-8,-1,-1,10,3,7,-5,-2,-5,-9,-9,-5,5,-2,3,-9,8,9,-8,-7,6,-7,-6,8,-8,-10,2,-5,-5,7,8,10,6,5,10,-7,5,7,-2,3,-4,8,-10,2,-9,-3,7,-1,5,-8,-8,-9,-6,-4,-5,-10,-2,4,1,-7,-5,7,6,-2,4,3,-5,-6,-3,1,1,-7,-2,-5,5,5,-6,9,-10,2,2,-7,2,-8,-6,-10,-2,2,-8,-7,10,-2,-2,-8,-3,-8,8,4,1,-4,2,-3,-3,-6,-3,3,-5,-10,7,1,10,6,5,7,-3,2,-7,10,4,-10,-1,10,7,6,10,5,-9,8,-3,1,-8,-3,-1,-4,1,10,8,-1,-2,10,-6,-1,-7,2,-8,8,-7,-2,4,-3,-1,-8,-5,-3,-5,8,-7,8,-2,4,5,-7,-2,1,6,-10,9,5,8,2,10,-7,-2,10,7,-3,5,5,10,3,1,2,-3,7,-6,5,8,-4,-6,4,10,6,-7,3,6,-3,1,-9,6,-6,-5,-10,-2,5,1,-3,-7,6,-9,-3,-5,4,-6,10,8,-2,-8,8,-7,10,-10,-8,-2,-5,5,6,6,8,2,2,6,3,-6,-4,3,2,-6,2,-7,7,-5,-2,2,3,-7,-3,10,-5,-8,1,2,5,-4,-6,-4,-10,7,-1,1,-4,-10,-1,5,-7,6,2,-3,-8,4,7,8,-8,-1,-5,-5,-3,5,7,4,1,-4,-10,10,4,-5,-1,-2,9,1,8,-4,-3,6,9,6,2,4,8,3,7,5,-10,-10,10,4,7,10,-6,-2,8,6,-7,-3,4,9,3,-3,10,-3,-3,10,-6,-2,1,-9,1,1,4,4,-10,-1,-6,-8,-8,-7,-10,2,9,8,5,9,3,-5,3,-6,10,-8,4,3,8,2,8,4,6,-5,1,9,3,-2,-3,1,-8,2,-8,-3,-4,2,8,9,-10,-7,8,5,-1,-10,-5,-10,4,6,-6,6,-3,3,-8,5,7,-7,9,-8,8,7,-3,-8,-8,6,-1,-5,5,-6,-2,-9,3,6,9,-2,-4,-2,-3,-3,-3,6,-5,10,1,-3,5,2,1,9,3,-6,-10,3,9,6,-7,7,3,2,-3,7,-6,-7,-6,-6,8,8,-2,-3,9,2,4,-7,-5,1,3,-6,-8,7,-9,-4,7,-7,5,10,9,-9,9,10,-7,2,2,1,2,3,-9,8,-9,4,5,7,6,-9,-5,1,-3,-2,-2,4,-8,-5,3,4,-10,-7,2,3,3,-3,4,-10,6,1,-6,-1,-9,5,2,6,-8,9,9,10,-5,-8,-8,5,4,-1,8,-7,10,10,9,-6,-9,9,-8,-9,3,-1,8,4,-9,-2,-8,-5,-9,4,3,7,6,1,6,-8,-7,-9,-4,-9,-7,-1,2,-7,1,10,-1,7,4,3,7,-8,-10,-1,9,7,-5,-5,4,-7,-1,-10,-2,2,-6,6,8,-10,-1,1],[3,8,-8,-2,-4,9,5,-10,8,-5,-10,-8,4,-5,8,-7,-5,10,9,-6,-2,8,6,-4,-3,9,-7,10,-4,8,-2,-5,-1,2,7,-3,-5,-4,-1,5,7,-5,-10,10,1,-6,-3,2,5,4,-4,-1,-7,9,-7,-2,-6,-1,-6,-2,8,-10,10,7,-7,-9,9,9,-7,4,1,-10,-6,5,3,7,-7,4,-10,-3,3,8,-2,-8,3,4,-9,-3,5,-7,7,-10,2,10,-7,10,4,10,5,6,-1,6,-3,6,-8,6,8,10,2,-5,4,8,5,6,7,2,2,-1,6,5,-2,-9,-1,-2,10,1,-5,6,7,2,3,4,-9,-10,-4,-8,8,-7,-8,-1,8,-4,10,-3,-1,-3,-6,-10,3,9,-7,-4,-4,-5,1,3,-7,-2,-7,6,-7,-2,7,7,4,-7,-3,-5,3,-9,5,6,9,10,3,5,4,-5,9,-3,8,-3,1,7,-7,8,10,-5,2,-6,1,6,-9,8,-3,-9,9,1,10,-3,8,-3,5,-9,3,-3,9,2,10,-5,9,3,8,9,6,8,-5,-4,9,9,-1,8,2,7,10,-3,8,6,-2,3,-6,1,2,-2,-9,6,-3,-1,4,7,1,-2,7,-2,-2,-6,8,2,1,10,8,1,10,-6,-1,10,-2,9,-10,-8,-8,5,-2,-5,-4,6,-2,-1,10,-9,-10,-10,-1,4,4,6,-8,7,9,-4,8,2,6,4,-3,-6,-4,-7,-7,-8,7,-2,-6,-7,-2,7,1,-2,3,5,-9,-10,7,-9,10,-7,5,2,-10,-8,1,4,5,1,10,-3,-6,3,2,-10,-9,-1,-6,-6,3,-1,-9,8,-1,-1,6,-3,9,-8,5,-5,-6,-9,-1,-1,10,1,-8,-3,-8,1,8,-8,9,-8,-5,9,9,-4,-6,7,8,5,-4,5,1,-8,2,-8,6,-5,8,4,3,-2,-4,7,6,6,-10,-4,8,2,9,-1,5,-6,10,-4,8,4,-4,2,2,-8,2,3,-3,10,-4,-7,-8,2,10,1,-2,8,5,-4,1,-7,-5,2,5,1,4,-8,8,-10,-6,6,7,3,-5,9,2,-8,-8,4,2,-3,-3,1,-1,-10,2,-6,-2,-1,8,5,-5,5,-3,7,6,4,-10,-3,-5,-9,-8,8,-4,9,8,-9,6,6,-7,-7,-4,-4,-7,7,-9,1,-1,-9,7,-6,1,7,9,9,8,-1,-8,-9,2,-8,-2,10,9,10,-7,-10,2,-6,-1,-9,10,1,4,4,4,7,-3,3,4,8,10,10,3,2,-10,3,8,-7,-2,8,-2,-5,-10,9,-2,5,-4,1,-10,1,4,9,8,6,-8,-7,9,-7,2,5,2,-5,5,-4,-1,-7,1,-10,-4,10,-3,4,10,-3,9,6,7,8,7,9,8,-4,-1,-9,-3,9,-7,9,8,2,9,-9,-7,-6,-10,4,-10,9,5,8,-9,5,4,7,-6,-9,5,9,8,10,-2,-6,-7,6,2,-1,3,-9,9,-8,5,10,-7,3,8,-3,-10,-5,-3,8,-4,-8,-6,-1,3,2,9,9,4,-3,-7,-3,3,-3,-8,2,1,-7,9,4,9,9,9,-6,-1,-3,3,-3,-3,-5,-9,-1,10,-9,-7,-8,-8,-6,8,8,-1,6,-7,4,-7,-9,7,9,9,6,-1,-4,-5,4,4,-1,-2,-1,-5,-9,4,-3,7,10,-1,3,1,1,-10,7,8,9,4,9,4,6,-5,1,-10,-9,5,5,9,-4,-2,3,9,-9,3,-4,5,5,8,3,4,1,6,-9,-1,-6,-4,-2,-2,-7,9,1,5,4,-1,3,1,-7,9,3,-9,-4,9,-7,7,7,-9,-9,-4,6,-2,-1,3,1,5,6,3,6,-6,-5,9,6,-10,-10,8,2,-5,4,-2,-3,-8,-1,-7,-5,10,-5,-9,4,-5,-6,10,-4,10,6,2,-6,-6,-3,4,7,7,-2,4,8,2,-4,-9,-9,6,-10,3,-9,5,-4,-10,-4,5,-5,-3,8,-6,-10,-3,-3,-2,-9,1,6,2,4,2,-10,5,6,8,-5,-10,-9,-4,2,-9,3,-1,-5,-10,4,8,-1,-7,3,2,-2,-5,-3,-5,-4,-8,-4,7,-1,-8,-9,6,9,6,1,-4,-10,3,-7,-2,5,-10,-10,-8,-6,-3,5,6,5,8,1,10,-2,-7,-3,1,-1,-9,-10,10,-5,2,4,-4,9,6,5,-3,1,5,9,4,-9,-8,9,-6,3,-4,5,4,3,7,-8,-6,-10,-2,9,8,-8,8,6,-4,3,4,8,-5,1,-1,-10,-5,8,-9,3,4,6,9,-9,1,-2,1,6,-3,5,6,-10,6,-8,4,2,3,1,2,-6,1,1,-10,-5,-3,-6,8,10,4,8,-1,6,-10,7,-9,6,-1,-2,-3,-1,-9,-7,-4,8,-7,6,7,-2,-10,-9,-10,-7,-4,-1,5,-5,-10,9,9,2,4,-2,9,-9,2,6,-5,-4,-3,5,-8,2,1,2,1,-6,1,9,3,-8,6,-9,-8,-7,10,9,-10,-8,4,-5,-5,1,8,-7,-8,7,1,-2,-3,-2,-2,-2,5,7,9,4,10,9,7,-2,3,8,7,4,10,-2,-10,7,2,5,-4,5,-6,4,10,-10,-5,-6,-8,-2,-10,-3,1,-6,-1,-6,9,9,-4,3,-8,9,-9,6,7,8,-6,-10,10,-10,6,-6,-5,-4,-7,-5,8,-8,10,8,4,5,-8,5,-10,9,-10,2,-7,6,-1,-8,-6,-10,10,4,-4,4,-5,-10,-3,-2,3,10,-10,5,-9,4,7,4,2,1,-10,-7,-3,1,-5,1,-8,-7,9,-4,5,6,4,9,-9,-1,5,-3,5,8,-8,8,-2,-6,9,9,-10,3,-6,-7,5,5,5,2,-1,-2,7,-5,-6,-10,-5,-8,6,8,-6,-9,4,-2,-2,-1,-3,2,-2,1,-1,3,-1,-8,2,9,10,10,-3,-3,9,6,6,5,6,-5,8,3,-1,-6,-7,-3,-4,3,7,2,1,-7,-7,-6,-8,-2,-1,6,5,4,-9,-3,10,-10,-5,3,10,4,4,-2,10,-1,-8,2,-8,-9,3,-2,1,2,-6,-3,-6,-6,6,-3,2,9,10,7,-10,-5,-10,10,10,-7,-6,3,-7,10,-6,4,-6,2,-6,4,-7,1,-7,-1,2,3,10,9,4,-3,-2,-2,1,2,3,5,6,-7,8,10,-6,7,-9,-3,6,7,6,6,-1,5,6,-4,-10,5,-9,-8,-8,-10,1,-3,-3,5,-8,-5,1,3,-3,-10,-7,9,-2,2,-3,-10,-8,-1,1,-10,-9,10,-8,7,-1,2,-4,8,9,-7,-2,9,7,-3,-8,-1,-8,6,5,7,10,6,2,9,3,6,-2,5,6,2,-9,-2,-4,-4,2,5,-1,-8,-6,-4,5,-4,4,-8,7,6,-3,-6,-5,-5,2,-10,4,3,5,1,-7,6,-6,4,4,-1,6,-5,-8,9,2,-2,-7,8,-4,1,6,5,-2,5,-8,-7,4,7,-2,-1,-6,-3,-7,3,2,3,1,-7,-6,3,9,-10,9,2,-4,6,-7,10,-1,-5,9,8,7,-7,8,-1,-9,9,-6,1,-5,9,7,-5,-4,-9,2,3,5,-4,-9,1,6,7,-2,-4,-7,-8,-2,-5,7,7,3,1,-1,4,-10,7,-6,7,-5,6,4,8,-9,2,7,7,1,-10,3,-2,9,-8,-6,-5,-8,4,-5,7,3,1,-3,2,6,-8,-5,1,-2,1,4,10,6,-3,6,4,3,1,-6,10,4,9,8,3,9,-9,-1,4,-5,-10,-8,10,2,7,-6,-9,7,-10,-10,-7,9,1,-7,9,5,-2,-4,6,6,5,2,-2,2,4,-5,10,-8,-7,-9,6,-8,8,-3,-9,8,2,-5,-9,-6,-8,5,-8,2,-8,2,4,-4,-1,7,-5,3,6,-2,7,-9,3,-5,-7,-6,8,8,-9,4,-9,-1,5,4,2,-10,5,5,3,7,-7,-4,-1,6,-7,10,-9,-2,5,-10,1,-7,9,-2,-4,-2,-4,-5,-3,4,1,-5,7,9,-3,-2,-8,9,-2,10,2,8,-2,-2,6,-4,2,-9,9,4,6,-4,-6,2,8,8,7,7,-9,-4,-4,3,-8,-8,8,-8,-9,-1,-9,-5,-6,-8,-8,-2,-1,5,-5,-3,9,-1,-3,-3,3,-7,8,9,4,-9,-2,3,-7,1,5,6,-5,-2,8,-1,1,5,-10,5,4,8,5,1,10,-6,6,-10,1,-1,9,-1,-8,2,-3,-3,1,4,5,-7,-7,-9,-7,6,-10,8,-7,-2,7,4,-2,-10,-8,-8,8,-7,10,-10,4,-4,10,-6,3,3,-3,-4,6,10,6,7,3,1,-2,10,-6,4,6,-5,9,1,-7,-7,-8,-6,-4,10,-9,-3,-3,-10,-7,5,4,4,-9,5,1,10,-10,-6,1,4,-9,2,-9,-1,7,-10,5,6,1,10,7,1,-6,4,5,7,6,-7,4,-3,-1,3,7,10,3,9,-9,7,-9,1,10,9,-9,-5,4,3,-9,3,-8,-3,2,10,2,7,10,-7,-9,-8,-5,-9,-1,6,9,-7,4,-7,-3,10,-6,-9,8,-9,-4,-3,-2,-6,5,2,-3,2,-10,-4,7,10,-2,2,-7,-6,9,-8,4,-3,-7,-4,5,-8,6,-10,7,-8,1,10,8,8,7,-8,3,-9,-6,3,-2,4,2,-3,-4,-9,-9,-4,4,6,-10,-2,6,3,6,-1,6,8,-1,-8,-10,-1,-3,9,7,-9,-10,1,-2,-7,-2,-9,-6,-8,-8,4,-1,-10,-10,-4,-4,5,3,1,-10,-6,-7,-3,-3,-9,-7,-10,6,5,-9,-2,-1,9,2,-9,-6,-9,9,-5,-2,5,5,-8,-5,8,1,9,8,-5,-7,7,9,-8,7,-5,8,-8,5,-6,10,-6,-6,4,4,6,-6,-9,-10,-7,2,6,2,-5,-2,7,8,3,-10,-10,8,8,-1,-1,5,8,10,9,9,-8,6,-3,1,-10,4,-5,-6,-8,-1,-9,-9,-2,-2,10,7,-2,-3,9,10,-5,7,-7,-3,1,-6,-10,9,3,-5,3,-10,4,10,7,1,4,-10,-3,8,8,-6,8,-2,-7,3,-6,-4,6,4,-4,3,-4,-9,-9,3,-10,8,2,-8,-7,-10,-3,5,-8,1,5,10,-9,8,-5,-7,-10,2,5,3,-8,-6,7,10,-2,9,-7,1,-7,3,-10,6,5,1,5,-3,7,6,1,-1,-9,4,-9,-1,2,6,-6,1,10,3,-6,-2,6,-8,6,-1,10,-10,-10,3,8,-3,6,6,-8,3,5,-8,5,-9,-3,-7,-8,2,-9,10,-8,2,9,-10,-8,10,8,6,1,-4,8,9,-10,1,-8,9],[-6,-10,10,1,-2,-1,8,-4,5,-7,-1,8,-9,-5,2,5,-4,10,-6,1,-1,-10,2,-9,-2,-9,-3,6,-7,-9,4,4,2,3,-6,-5,9,-7,-9,-1,3,6,8,-7,5,-2,1,-7,2,10,6,-7,3,9,2,-3,-9,-10,2,-10,3,-4,-1,-9,4,-3,5,9,-5,9,8,10,-10,-6,8,-9,-9,-7,-7,3,6,-4,-7,-10,-1,10,1,-9,-10,5,-1,1,9,-2,4,8,3,-2,2,5,-1,5,4,-2,6,-4,-2,-9,-3,-5,-6,7,-4,-2,-3,2,-1,-3,-10,9,2,5,8,-5,4,-8,-3,-2,7,5,-2,-1,5,-5,-1,-1,10,9,1,-9,-3,7,-5,5,4,10,-1,6,7,1,8,10,-9,7,10,4,6,-1,10,-3,-8,-8,-5,2,-8,9,4,-5,8,-10,-8,4,-6,5,1,-10,-2,-7,-5,-9,2,8,-7,9,-4,6,5,-6,-6,-9,-8,7,9,6,-3,-8,3,10,-10,-7,-2,-8,6,-10,-4,1,-1,-3,10,-6,-4,-7,2,-9,8,9,-1,-7,-1,-9,-9,9,9,-10,-1,2,-3,-4,-6,-9,9,4,-5,8,1,10,-10,-10,1,5,-6,-7,6,6,-4,-6,-3,4,-5,-3,-4,8,2,-10,-8,4,4,5,-3,-3,3,10,2,-5,10,5,1,-7,-9,-3,-4,1,8,-1,6,-8,3,-7,3,4,-8,-9,-10,1,3,-8,-2,-8,-6,1,-1,9,8,1,-7,-7,3,3,2,5,-9,4,-4,4,-9,10,-6,6,-6,-7,1,10,-10,9,9,7,9,-1,-2,-2,10,3,-4,9,-5,5,-10,1,-7,4,-4,-4,-2,5,10,9,3,5,10,-9,10,-4,-6,2,3,9,-7,-10,10,5,7,1,5,-9,-1,3,-10,-4,9,-2,-2,-2,6,9,1,9,9,10,-7,10,-5,1,-9,-4,3,-3,-8,5,10,3,2,-1,-1,5,-10,-4,-8,-2,2,-7,1,1,6,-5,-3,-8,-10,4,-8,7,-5,-2,-8,2,-10,6,-9,-3,4,-1,-8,-10,8,8,-4,-5,-8,4,3,7,-2,-7,9,-8,-9,7,-10,8,2,5,2,9,-8,5,6,5,4,-3,-3,7,-9,-1,-3,6,-4,-5,2,-4,4,2,-3,2,-10,-2,3,4,4,-3,-4,-4,2,5,-1,4,2,7,-4,5,-3,4,-6,10,-6,9,-1,-10,-2,7,-8,1,7,-5,7,5,-7,-6,9,-7,10,-9,-10,-6,-6,6,-5,1,-4,-5,6,-1,-10,8,-6,6,-10,8,4,2,6,3,6,-5,2,-1,9,1,-2,9,-3,-1,10,3,-3,3,5,-3,9,1,-8,-10,-8,-6,-2,-6,10,8,-9,3,7,3,3,3,6,3,-10,-10,-6,9,-1,-10,4,-2,-2,5,2,-3,6,9,2,5,-7,-10,-3,-10,4,7,10,9,6,-3,-1,-5,2,8,-8,-6,2,-7,-7,-3,-8,6,-2,2,-10,6,9,10,-5,-5,-5,-7,1,4,-2,-6,9,-8,1,-9,-5,2,-6,5,-3,6,5,5,-9,3,-5,-4,3,5,4,-4,-9,-10,9,6,-10,-9,6,-1,2,10,3,2,-6,9,-1,6,1,4,-5,-1,-5,-8,-6,-7,2,-6,1,-10,-8,-4,4,-8,-10,-5,3,10,8,-8,-6,3,-4,3,-10,10,-2,5,-8,10,-5,3,-1,-5,-2,3,2,7,6,9,1,-2,-8,10,1,-4,-3,4,1,-2,6,2,-5,2,-7,7,-2,2,7,-6,1,7,-8,-7,2,-3,-9,6,3,5,-9,-1,-3,-1,-6,1,6,9,-10,-4,-8,-3,-1,10,7,6,-10,-8,-10,5,7,-1,-5,6,9,-10,-8,-3,-1,3,-10,3,5,-5,2,1,8,-2,-4,-10,10,-9,4,7,7,-3,-10,7,10,10,-1,-1,5,-4,4,2,-6,4,5,7,-3,8,-9,-9,-6,2,2,-8,9,-5,-8,8,-8,-5,-4,-2,3,10,-7,-2,10,2,-7,10,-4,8,-2,7,-9,-10,7,9,3,1,-10,5,-6,3,-7,9,10,3,-6,-9,-3,7,2,-9,9,7,2,9,-8,1,-9,-7,8,8,-10,-8,-9,-2,-2,8,-2,1,8,2,-4,1,3,-2,-10,2,1,-5,-6,-1,-10,2,-5,-8,2,-7,2,2,10,6,-6,1,10,-8,-7,-5,-10,-10,9,-6,-7,9,-2,5,-9,-1,-9,4,2,-6,-1,-7,9,5,-5,-10,3,2,-2,-7,-5,-6,5,-4,2,-6,-2,-5,10,8,9,8,7,9,-6,-2,9,5,-8,10,10,4,-1,-4,6,-8,10,-9,5,-8,-4,-2,-8,6,-8,7,-6,-2,7,10,8,10,-4,-6,-5,-2,5,-4,10,1,8,-10,7,3,-9,-9,1,-4,-8,-7,-5,6,10,-4,-9,10,1,2,-1,-3,-8,-7,4,5,4,-5,-1,-10,10,-1,9,6,3,-9,3,-7,6,9,7,-10,-5,9,-7,-7,1,5,3,-9,9,1,1,10,-1,-5,-4,9,-1,7,5,4,4,-5,1,3,3,-10,1,-2,-1,-3,2,-4,8,1,-5,-1,-6,-8,-2,5,-3,2,6,-10,-10,10,5,-5,7,-8,2,-3,-6,5,10,-7,-6,-10,-2,-9,-3,4,-5,1,-6,-6,8,9,10,4,-6,6,-10,4,7,6,-2,-8,-1,1,-7,8,-6,-9,-10,8,-4,8,1,9,7,9,-8,-8,-7,-8,6,10,-4,-8,-2,2,1,1,4,-1,5,-10,-9,2,7,-8,8,5,-7,-6,-1,6,-10,5,4,5,-8,-2,5,-2,-8,7,10,-7,7,7,-4,2,-7,8,-5,-3,-7,-1,-3,-7,3,4,-8,-10,6,4,10,4,3,1,6,-2,-2,-7,3,-3,-10,10,10,2,7,8,4,-7,5,-4,3,-3,-8,-10,-6,7,-10,3,-7,7,-3,-3,6,-3,-7,1,-2,7,-7,-10,9,-9,6,-10,7,1,4,-6,-4,-3,-5,-1,1,6,4,-2,-7,4,3,8,-3,9,-3,-8,-1,7,7,2,7,-7,7,-6,10,-8,7,-2,-5,8,3,4,-8,1,-9,5,-2,9,-2,4,6,-7,-7,5,-8,-9,-10,-9,4,-6,-5,-10,-3,-6,3,-9,9,-4,-4,8,4,5,10,6,3,8,-5,7,-5,-5,3,1,-9,-10,-6,5,6,3,5,2,3,8,-8,6,-5,4,-4,-2,2,5,8,7,1,2,1,-4,3,10,4,-5,-6,9,-5,-2,2,-4,-9,-6,3,8,3,-8,-3,-8,-4,-10,-3,10,-1,-7,-2,-5,4,-3,9,-2,-5,-9,-9,-7,-1,5,7,5,8,1,5,-10,7,-7,-7,1,9,10,8,-1,4,6,-1,-1,3,6,-8,-6,-2,-1,1,-8,-3,-8,-6,1,-7,3,-8,-5,-6,8,9,-9,10,-9,4,-1,6,8,-10,-3,-6,5,3,-4,2,5,9,-4,3,-9,-3,-4,2,2,-10,9,5,9,-5,-9,8,-10,-7,7,-10,-9,-7,-3,-4,2,-3,-10,-4,-6,-6,6,10,-3,4,7,6,-6,-8,3,5,-5,-6,-7,-8,9,-2,9,5,-7,2,3,-7,-3,10,-6,-3,5,10,10,-7,-3,6,-8,-4,9,8,-5,1,-3,-8,-5,-2,10,2,-9,1,-7,3,-9,4,-4,8,-9,-1,-7,1,-10,4,-4,-2,-5,-6,1,2,6,-7,-8,2,-1,2,-2,2,6,3,-2,7,-9,4,4,-1,-1,1,-1,-9,-5,-4,3,-8,2,1,6,3,-10,-7,-4,5,7,5,10,-2,-4,-2,2,6,-1,10,-4,3,2,10,-8,-1,4,5,-1,-9,-3,2,10,9,-6,9,4,5,3,1,-4,-8,-8,10,-8,-6,1,8,7,-1,8,4,3,7,-7,-7,1,-7,8,10,-10,9,-8,1,4,-10,-3,6,4,-1,-2,-1,-4,5,10,10,-4,9,5,9,5,4,4,3,-5,-10,-5,-1,-1,-10,2,1,8,9,-2,-7,-8,7,2,9,-6,-4,1,-9,2,5,9,1,10,5,10,10,-2,9,7,-9,8,4,-1,-4,-2,8,-7,-1,10,-8,7,-8,5,2,7,6,7,5,-1,-10,7,4,-8,10,2,-10,-8,-9,8,-6,5,8,-10,-1,-1,-3,2,2,-4,-9,2,5,-8,4,8,-8,-2,8,-1,-4,-3,-9,-6,-2,-3,7,10,7,6,3,1,-8,10,-6,4,-1,9,-9,-5,5,4,5,-4,2,-2,-6,6,6,10,7,4,-1,2,-9,-5,-4,8,2,10,4,1,-6,5,-3,4,9,9,-10,-1,5,7,4,-9,-9,-4,-4,4,2,-10,2,-6,-1,-10,8,-1,-7,4,-4,-10,3,-6,7,-7,-7,7,-10,-10,-9,-3,2,-10,4,10,7,9,-4,-7,4,1,10,1,-10,-4,-3,-4,2,-6,7,2,-6,6,-7,10,-8,5,6,9,-8,4,9,-6,3,-5,8,4,10,5,-2,1,5,-7,1,-8,10,-10,-10,-10,-8,1,2,-9,5,4,-8,-9,-2,-5,-4,-3,5,-3,-8,5,-8,2,-4,-6,9,-10,6,2,-8,10,2,-6,7,-9,4,2,2,2,9,9,-8,4,8,4,5,-8,9,3,7,10,-7,3,-8,-9,5,-4,-9,-8,4,-3,-6,-7,8,1,-1,-7,3,10,-5,10,-9,4,3,-4,-2,8,-9,4,-3,5,6,-4,1,2,-3,7,-7,9,-3,-8,10,-4,1,8,-3,-9,4,7,7,5,-4,-3,3,2,5,-10,6,-5,2,-2,-6,-3,4,8,-1,-3,-5,-5,-8,-4,-7,-7,-8,9,-6,6,-1,4,9,7,5,5,6,-10,-9,9,-7,-6,-1,-7,-7,8,-10,-5,4,-10,-4,3,-7,6,5,1,-2,-9,3,1,-8,9,-1,8,-8,8,-5,2,4,-9,3,-3,6,-1,7,-2,1,3,-8,1,3,-10,10,2,1,-3,3,3,-7,2,-6,-10,-8,9,6,-3,-9,7,6,1,5,6,-9,9,3,9,6,4,-4,7,3,1,5,-1,-9,10,6,2,-5,1,-2,5,2,9,4,-8,-8,-1,8,5,4,-1,-1,8,-4,4,-3,-4,-8,-3,-9,-1,1,-3,4,4,3,-10,10,10,9,2,3,-7,8,-7,-2,-7,10,9,6,-2,3,-5,4,-9,-1,4,-6,7,4,3,2,-8,8,6,3,6,2,10,-9,8,9,-4,-7,-1,6,-7,-3,-1,-2,-8,-7,-2,-6,-4,1,-4,7,7,2,-7,1,-7,6,-7,4,-5,10,9,-10,-10,8,1,-4,1,6,2,-1,4,-6,-8,-8,1,-2,3,-3,5],[9,-7,4,-8,-8,-10,1,6,4,-10,-9,-10,9,-5,8,-6,-5,1,2,2,4,-9,-3,-4,1,9,5,2,-3,-8,6,10,-6,-1,-2,10,-4,-1,-4,-5,-9,4,4,-7,3,-9,-9,10,-2,8,5,-10,-5,-7,-5,3,-7,-7,-4,-9,2,-6,9,-10,7,4,6,-3,4,1,10,-5,-2,7,9,-3,-4,-1,4,-3,-1,-5,3,-7,7,8,3,-4,6,-3,5,-3,6,1,7,-3,3,5,-7,4,-2,1,6,10,-5,4,-10,9,2,6,-4,-10,-8,-2,7,8,8,5,-5,3,-10,1,5,6,10,9,-2,2,5,-4,9,2,-3,3,-5,-9,-5,-7,-10,10,-6,3,-9,7,-8,6,4,9,6,7,-8,6,-5,-4,7,-5,2,-8,-3,-4,-5,2,-8,-1,1,-6,4,-2,9,4,-1,-7,-8,-5,2,-6,10,8,-7,2,7,-6,-4,-10,8,8,-4,6,2,5,-3,-10,-6,-10,-7,2,-4,5,-9,-2,-10,8,-5,-5,8,-8,-10,-3,-7,1,9,8,-2,-1,7,-9,4,-10,-4,6,5,-2,-2,-3,-7,-5,-8,10,-5,2,-6,10,2,1,-6,-7,-10,-8,-1,-3,7,-7,-10,-6,9,8,3,-7,9,9,4,-6,3,7,7,6,-6,1,-9,-1,-7,4,-1,4,-7,-5,9,5,7,9,2,10,-6,5,7,4,9,5,6,-9,-2,-6,-10,-6,3,-3,-1,-4,-1,4,5,4,-3,3,8,-6,8,3,3,5,7,2,10,-4,-4,-10,6,4,-3,-1,-1,-1,-1,7,6,-1,-1,-10,10,3,-4,-5,-7,2,-8,-2,1,7,10,5,7,8,8,10,-3,4,-6,-8,1,-6,2,-7,-1,-3,10,8,4,9,3,-4,2,4,8,-4,3,-8,-6,-7,1,10,10,3,4,-7,-1,5,-8,3,2,-5,-5,-9,-7,-2,8,2,-9,-1,-6,10,-1,3,6,7,1,-5,4,1,-10,-2,2,6,10,4,10,-3,1,-2,2,-8,-9,3,-7,-7,-5,7,4,1,-3,-9,-1,3,10,2,5,7,3,9,2,8,6,7,3,3,-4,-10,-7,-10,10,-1,10,-9,7,2,8,9,9,4,-5,-7,-1,4,10,7,6,5,5,10,5,-1,3,-5,-7,4,7,-9,-8,8,-8,8,-4,-1,-8,-3,4,4,-6,-2,9,3,7,6,-6,3,-1,2,-3,-4,-6,4,1,-9,-6,-7,9,2,-3,-1,-3,7,-7,-7,1,-1,-8,-5,2,7,-7,4,-6,1,-3,10,-9,9,-3,-6,2,9,4,-1,2,-4,-2,-4,-5,10,9,5,7,6,4,4,1,6,-1,-2,4,-1,-4,-7,-10,-8,-6,-1,-7,-1,-10,7,-10,9,-9,-2,8,-9,8,3,2,-9,2,-1,8,2,-9,-1,9,10,-4,-10,8,7,7,4,-1,8,-4,4,1,1,-4,-8,-4,-2,-3,-1,2,-4,7,-8,2,2,5,9,-2,7,-3,-1,-3,5,5,-6,-3,-8,10,-7,-4,-10,4,6,-10,-4,-7,-1,-9,-8,-2,3,-7,-4,-7,-9,9,-1,-1,-9,-1,5,9,10,-2,-10,5,10,4,-8,6,-5,9,7,4,-2,-8,-3,-2,-3,-3,9,-8,-9,2,7,-9,2,-8,-9,-5,-7,7,-10,-5,1,7,8,-8,10,-6,-9,-9,4,-10,-2,-3,7,-1,9,1,-5,-2,6,10,4,-4,3,-6,1,-10,-10,-1,3,6,-9,-1,-7,-7,-5,-10,-7,1,-8,-6,2,1,7,3,-6,-1,7,-9,-9,9,7,4,-2,3,2,10,-3,10,-2,1,3,5,8,-6,2,10,5,-3,-8,8,4,-6,6,1,8,-10,-6,2,-8,-10,4,-2,-3,-5,-9,-3,-8,4,-8,5,-6,8,7,5,-8,10,4,-8,-4,2,-5,-10,5,-8,8,-8,6,6,5,1,-8,-3,2,1,-6,3,7,4,-7,6,4,10,1,-3,9,10,-6,10,-6,-4,-4,-4,10,5,-8,3,-7,2,-10,6,1,-7,-1,-5,-9,-9,-7,6,-9,-7,3,9,-4,10,5,5,2,-5,10,9,-2,-6,3,6,-4,9,2,1,-8,-10,-9,-1,9,-5,7,-10,-4,7,8,-9,8,-2,-7,-8,6,-8,-5,5,4,-2,-3,9,7,-7,1,9,-6,-2,4,10,8,-4,-6,6,6,-2,-10,-8,-6,2,-1,-7,-2,9,-8,7,-6,10,7,-3,-6,3,5,3,-6,-9,5,-3,-4,4,-1,8,1,3,-6,4,1,-5,9,-8,-2,2,-2,6,-7,-7,-3,-8,-5,-6,-7,-2,-8,-7,-5,-3,-1,-4,-10,-10,-3,7,-6,-2,-8,-3,-9,-5,1,5,6,-3,-3,-1,-1,1,-2,2,5,-8,-2,-8,-5,5,7,-4,-8,-10,-7,-7,4,4,8,3,-10,6,3,1,9,5,-8,8,7,-8,-1,-5,-2,-10,-5,-4,3,4,-6,-3,5,-2,9,10,8,-2,-4,3,-8,-8,5,5,-2,1,6,-4,3,3,-7,-8,2,5,1,-3,10,-9,1,-10,-4,2,6,10,-5,-1,-7,-7,-3,6,10,-2,-1,5,6,7,-10,-10,9,8,-7,4,10,-5,-4,4,2,-6,8,5,9,-3,-4,-5,-5,5,-2,7,2,2,5,-2,3,-10,-7,4,-8,5,10,-5,3,-6,-10,-4,5,10,3,6,10,-6,10,5,4,2,-9,10,8,4,9,4,-3,5,-6,1,-5,-5,6,-5,-9,6,-5,-8,2,-2,-10,-6,-1,-1,2,-3,1,-3,7,7,4,-1,-10,1,3,-1,-10,-7,10,7,2,-6,-7,9,-7,-1,-2,10,-3,1,2,10,3,-10,9,-2,7,-5,-8,-2,3,-6,8,-8,-4,-9,-5,10,-8,8,10,-8,9,-3,8,-4,1,-9,-5,-7,7,7,5,-9,-8,2,-8,-4,4,6,5,4,-9,4,-1,2,9,8,-9,-8,-4,6,1,-1,-9,6,6,-1,-4,-8,6,-2,1,8,7,-8,6,-4,-4,-1,-3,-9,8,5,-5,-8,-5,5,-10,-8,10,-9,10,5,-2,6,-3,6,5,7,4,-2,-6,7,-1,-5,10,9,-9,1,1,7,-2,-9,-6,-8,2,9,6,-5,10,-10,-4,-10,3,4,-1,-2,-6,4,5,-2,2,6,7,7,-9,-10,5,-8,3,6,3,-9,-7,2,-4,1,-6,-6,-8,2,9,2,4,-4,-2,-1,8,-5,-2,9,1,-4,8,-2,10,-6,8,2,-8,8,-9,-4,-8,4,-5,-8,6,3,-9,-10,1,-7,-6,2,9,1,-9,-7,-3,7,-7,-6,6,-6,-6,-3,4,7,-10,3,9,9,8,-4,-8,-1,-7,-7,8,-5,2,3,-9,8,-1,1,5,-9,6,6,-6,9,3,6,1,-6,-1,-3,-9,-10,-1,2,10,1,-7,-10,-1,8,-8,7,-6,-4,-2,-9,-9,-3,9,8,-1,5,-5,2,-7,2,-5,-5,-2,9,-8,-6,7,-9,9,6,-8,7,-8,-9,-9,10,-2,4,6,9,-10,-2,4,-3,-1,-2,-2,2,8,-4,-4,1,-1,-1,8,10,-5,-5,4,-4,9,-1,7,-2,5,-3,2,7,9,-8,-10,-5,1,-5,-1,7,7,10,1,10,-10,9,9,3,5,-6,-2,-1,-4,5,7,5,1,-1,-9,-10,-6,-1,4,4,7,-6,1,-1,6,-10,9,-9,3,3,-1,-1,2,1,-7,-7,4,-3,-1,-2,2,1,9,2,-2,-6,-7,-1,8,-7,8,9,-7,9,-9,-6,6,2,9,-9,-8,5,1,-8,-7,-6,-9,9,9,6,10,1,-1,-1,-7,-3,-5,-4,-4,9,-7,8,-2,-4,4,1,3,-2,-4,-5,5,-8,6,-9,4,2,3,-7,-9,-5,10,9,-7,8,-3,-2,10,-1,2,7,-9,5,-2,-8,5,2,-3,-9,-1,10,9,-6,-2,7,8,7,-6,-3,7,7,-9,7,1,2,2,-10,4,10,-3,-9,3,-2,2,-5,-1,1,3,-1,6,8,5,-7,-4,-6,-5,9,5,-7,9,6,-4,9,8,2,1,-10,-8,7,7,8,-10,-10,-10,-2,8,-8,-6,10,7,6,5,-6,4,-4,7,-2,3,-4,6,-4,3,-7,-9,2,2,-7,5,-10,7,1,8,-2,5,3,-1,8,-9,2,-3,-5,6,1,-5,2,5,-7,9,5,5,-7,-5,8,-1,1,9,-10,9,-6,-10,-8,4,-9,5,8,2,-4,-2,10,-7,9,10,-8,-9,-5,3,-8,-9,1,-3,-1,6,-1,-10,-4,-3,-2,10,-3,-6,-10,2,-7,6,-2,-7,-3,8,3,-6,-6,8,1,-10,7,-3,-5,6,3,-10,-9,7,1,-8,5,9,-3,3,-5,8,-1,10,5,7,-7,2,7,-10,7,3,9,7,-9,8,3,7,-9,9,-2,-4,5,-7,-7,1,4,-6,-7,7,-3,-1,10,-10,6,5,-8,-9,6,5,2,5,-1,-8,-6,-4,9,5,3,10,-7,-9,5,5,-3,-3,10,8,-3,-8,1,-7,-7,-2,10,-2,-9,9,7,5,8,-5,-10,-10,9,-3,9,-3,-4,1,-6,-2,-3,1,9,-10,-6,5,-7,-10,-2,9,2,-10,-6,4,-3,9,7,6,5,-3,2,-8,1,-7,2,-4,9,-3,-4,-9,1,-3,-5,6,-4,5,-5,4,3,-10,-7,-9,10,-3,9,3,7,10,-4,6,-5,1,3,9,7,9,6,2,10,-2,5,-8,-1,8,7,3,-2,2,-2,-1,10,4,-10,2,4,-8,1,-3,6,-8,-3,5,-7,-3,7,9,4,5,-2,3,-3,4,8,-6,9,9,7,1,10,5,8,9,7,-7,1,4,-2,5,6,-6,9,10,9,2,-5,-1,8,6,-3,4,-4,5,-7,-8,6,-1,-1,-1,-4,2,-9,-2,-4,-4,-1,9,9,1,-6,10,-3,5,3,6,8,-7,-2,5,9,-3,8,-8,-5,2,10,-3,4,-8,-5,-4,-2,-9,-2,-2,-4,5,-6,8,4,3,1,-6,6,-1,8,-4,-8,9,-9,-5,8,2,3,-3,9,8,4,4,9,10,5,-2,-7,7,3,-9,-9,3,1,6,6,10,9,-9,-3,8,3,3,2,-7,1,4,-7,2,4,7,-4,-9,5,3,-9,8,-2,3,2,-7,-4,-2,9,-8,-4,3,6,-2,4,-2,8,-4,-2,2,-6,6,-1,2,4,3,9,-7,1,-7,-7,-5,-9,-7,7,5,-10,3,9,1,5,1,-3,-8,-8,-7,-4,-1,-5,-1,8,4,-7,9,-2,9,-6,3,9,-4,-8,5,7,-4,4,3,-3,2,-5,6,-3,9,7,1,-7,6,-9,-7],[7,-9,1,5,-10,-6,9,-6,-8,4,-1,3,3,3,-10,-6,-4,-2,-8,10,3,5,-7,6,10,-3,8,-6,7,3,-10,6,6,10,4,-4,-6,-1,-1,-8,-9,-9,7,10,-5,-1,1,-10,5,1,-1,-8,-3,8,8,-7,7,7,-3,7,-7,-4,8,-7,5,-4,-4,-1,-3,-3,7,1,-7,-9,3,-8,-4,9,8,5,-6,2,-1,-7,4,-7,-1,6,-5,8,-10,-8,-3,-8,-5,-6,2,-10,-1,-1,-8,-9,-9,9,-1,-3,5,7,10,-9,-8,5,3,7,4,-2,-6,-1,5,8,7,8,3,-10,-1,-8,-5,9,10,-3,-1,7,5,2,-2,-7,2,-2,1,7,-2,8,-2,5,-4,8,-5,-5,-5,-10,9,-5,-5,7,-9,-7,-1,-10,4,5,-6,-3,8,-9,5,1,1,7,4,-1,8,6,2,2,-1,-2,-10,8,-3,4,-8,-3,2,4,-4,1,-10,-1,2,8,4,2,7,3,-7,-9,1,-6,2,7,5,-7,-4,9,4,3,9,2,-5,5,2,-9,-8,4,-4,-3,10,6,-8,3,-2,2,2,-7,-8,1,8,5,-6,5,1,-1,-10,6,-1,2,5,-7,7,-8,-8,-7,10,2,2,-7,7,-5,-6,5,-1,-3,8,-5,-3,1,1,-10,1,-8,9,-7,5,3,2,9,2,10,-3,8,8,-9,-9,-2,9,5,-5,-6,2,-2,-7,8,4,-3,10,2,1,9,-8,-2,10,9,-10,8,6,8,10,5,1,10,7,1,3,8,10,-2,-7,-6,6,1,-3,-7,5,8,8,-9,-1,-3,-2,-10,10,3,-3,-4,-2,-2,4,-9,-9,-4,6,-4,-6,3,-5,-2,-3,2,-5,-4,3,-3,5,-5,10,3,-7,-3,3,2,-7,5,-9,-7,-5,-3,-6,5,-8,-8,-4,-4,-10,-3,-1,1,9,-9,2,3,6,6,-2,-5,-3,-1,-6,5,2,-10,-3,2,-6,-10,-6,6,9,-3,-2,3,3,-2,9,-6,-7,3,-7,2,5,-4,5,2,-3,-4,5,-2,-1,9,6,-10,-4,-3,-7,6,6,-4,1,4,-3,9,-8,-6,7,-9,-5,-6,-2,-9,5,-3,-5,-4,3,10,-8,3,10,-5,9,2,4,10,-6,-7,6,3,-8,-8,9,-6,7,-5,3,7,-5,-3,-4,5,5,2,1,-3,-6,-2,10,-2,-9,7,-6,-3,1,9,10,7,3,7,9,-7,-2,10,6,1,8,9,-10,4,-10,-9,5,8,-7,6,-4,3,-1,-7,4,4,6,5,-6,9,3,8,4,-10,10,9,8,-1,-2,5,6,9,3,-10,-4,-6,-7,-7,-2,-1,2,6,9,-8,-6,8,-4,-6,10,9,6,-3,2,1,-6,6,-4,7,-2,6,-9,1,-3,2,4,-9,7,-3,-1,-2,-9,-4,-3,-8,-7,-4,-1,2,4,7,-7,10,8,4,-10,-8,-7,3,3,-6,6,-7,-2,8,4,6,2,5,7,-3,6,-5,-6,-2,10,1,7,-10,8,-7,-5,-2,-6,9,6,2,5,-2,6,10,-3,1,-9,-1,10,9,-10,2,-10,1,5,6,1,-9,-4,-4,-1,1,7,-9,9,-4,-9,-6,9,4,1,2,-8,10,1,2,-10,-2,-4,-5,6,-3,8,-5,7,9,-9,-9,-1,10,-2,1,-7,8,-3,6,4,6,1,9,3,5,8,-9,-2,10,-3,-7,-4,-4,9,6,-9,7,6,-7,1,-8,-7,-7,-8,-4,-8,3,-5,-10,-7,8,-1,-8,-1,5,-1,1,2,7,-5,-4,10,-6,6,-9,-10,-1,-4,-7,7,6,-7,-4,-5,10,1,-2,1,8,-1,10,-6,4,1,-4,3,4,5,10,10,9,-6,-4,6,-4,-1,-8,-7,-6,4,-7,-7,9,-3,-3,1,-6,-10,3,6,-5,-4,-3,-7,-1,8,2,-3,9,-1,10,-4,-8,1,-2,-9,-4,-2,-5,-4,2,6,-7,-4,-6,-9,-7,-5,7,6,-2,8,1,-3,-1,-5,-8,4,10,4,-2,-2,-7,-6,10,-6,9,8,-6,-6,-9,9,-2,5,-2,7,3,5,-4,-4,2,-1,-6,1,-2,-8,-8,8,-9,-1,1,4,-7,6,9,8,-10,2,-7,-7,-2,10,1,9,1,10,5,-8,3,4,3,-5,2,-10,-10,10,1,1,7,3,-7,-2,7,7,-5,3,-4,1,-6,6,8,-8,-7,-3,7,4,9,8,-7,7,7,-10,-10,8,-3,-2,2,2,-10,-6,2,-3,-8,-8,-10,-7,-7,-10,1,3,-4,-5,-8,8,5,-5,3,-10,10,6,-3,7,-3,8,-4,-5,9,-7,-10,-5,10,-4,9,-6,3,1,6,-7,4,2,-6,10,-1,-2,-3,-8,6,-6,9,4,-3,-8,-2,1,-10,-7,9,4,4,3,-3,-8,6,-4,7,6,2,10,-1,-1,3,-9,-3,4,-1,5,-1,-4,9,1,7,-6,3,4,-9,5,5,4,-7,7,9,-3,-5,7,-7,9,-6,-3,-1,1,6,-1,9,8,8,-5,7,7,-7,7,-3,-7,1,7,1,-3,-5,-7,-4,2,10,8,7,3,-10,-9,-7,1,10,-4,-10,-5,3,-9,7,-6,-9,8,10,4,-10,-2,-1,8,4,10,9,9,9,9,-9,5,-1,-8,4,2,4,2,-10,-5,-2,-8,-2,3,5,9,8,6,9,-2,-5,-7,-2,-2,-9,7,-4,2,-10,-9,-6,-10,4,-6,9,4,-4,-3,-9,-7,4,10,8,5,-7,-4,-3,-9,-2,8,5,-5,2,-3,5,-9,-5,8,-1,1,7,2,2,7,-8,-5,-10,10,-10,-2,5,5,-2,-1,-8,-10,-10,5,6,3,-10,7,-1,-1,-1,8,-8,-6,-8,3,1,-10,-8,2,8,7,6,-9,2,9,-5,-9,-10,1,-4,-1,-8,8,8,1,7,-6,-2,1,-5,7,-7,-2,1,-4,-8,2,8,3,1,-1,-1,-5,-4,-9,7,8,4,3,-3,-2,2,8,-5,-5,6,7,7,-4,-8,-9,-3,-3,8,2,-10,2,-10,1,5,2,-4,-3,-2,-1,2,-7,6,1,3,5,8,7,-2,-3,-6,10,-5,2,-2,8,-10,8,-5,2,-2,3,-6,8,-9,-5,-6,-7,-10,6,10,5,-9,10,1,1,-10,-1,-5,6,-10,10,-8,4,-6,9,4,-9,-4,-6,2,-8,2,-1,-10,10,8,5,7,-3,2,10,-5,-1,-8,5,6,2,-5,-4,10,5,4,-5,9,-5,-1,7,3,-6,-6,-3,-6,-10,-10,8,-10,9,2,6,-3,4,-7,-1,-8,-3,9,7,-3,-6,1,2,-6,-5,6,-2,4,2,-7,-4,-9,9,5,3,3,10,5,5,-4,2,4,6,9,1,-2,-3,2,-10,8,-4,5,6,5,-3,-2,8,8,5,-3,-5,9,-5,-2,7,-10,-2,4,-7,9,-7,-5,-8,8,-2,10,-5,7,-10,-7,-8,8,2,-8,-1,8,-10,3,-4,1,-4,-5,-2,9,1,10,2,1,-10,-2,-8,10,-1,-5,-6,5,9,-8,-2,4,-4,-5,2,10,-5,-4,-3,2,-7,-3,5,-4,-7,9,1,3,6,2,3,4,6,-2,2,7,3,4,-7,6,1,1,7,-5,-3,-4,1,-8,-6,10,-6,-9,6,-7,-2,-4,8,-4,3,-1,8,-5,-1,-8,3,5,2,8,-9,-10,10,3,3,-5,7,-3,1,-4,2,1,9,-5,-2,-10,10,10,-5,-7,10,-5,10,-2,7,-3,-7,6,-10,6,6,3,-5,5,7,10,-6,4,2,-6,1,10,4,3,-9,-8,-4,-8,-3,1,-6,7,6,9,9,-9,-7,-10,6,-8,4,-7,-6,-9,9,9,3,-9,-7,-6,-4,-7,-3,3,-2,-2,5,-5,6,10,-8,-3,4,7,-8,8,-8,-2,-3,8,-6,-2,-2,1,-4,5,9,10,-8,7,-10,10,9,8,-7,-9,-9,-3,1,8,7,7,1,-1,6,7,-2,-3,8,-5,10,-7,5,9,-6,-1,-10,10,6,2,-9,8,-5,2,-4,8,1,10,-7,-3,-6,7,3,-1,9,10,2,9,3,-1,-10,-1,-4,6,2,6,6,-5,-9,9,-2,5,-9,1,8,8,-9,-9,-2,6,-6,1,4,-10,-4,10,-8,-10,-1,-10,3,9,7,-8,-6,-2,-5,-4,-10,-3,-5,-2,7,-1,-5,1,9,3,-9,4,3,8,10,10,-8,6,-3,-8,2,-3,10,-6,-4,-4,8,-6,3,-3,-6,3,-4,-9,9,1,7,-8,-8,6,3,-4,-8,-4,-2,2,-9,-4,-5,-2,-10,-4,9,-4,10,8,9,-6,2,-8,8,4,6,-10,1,-3,-7,8,3,-2,5,8,-1,3,-6,-10,2,2,4,-8,8,-5,-2,-8,8,-10,9,7,10,-3,-2,3,-9,-1,-8,5,2,-10,7,-1,-9,10,-7,-10,-8,5,8,-1,2,-7,2,-8,-3,1,8,7,-1,5,-5,-4,8,2,-7,10,-6,2,10,-4,-8,-5,7,4,-10,-5,-4,7,-10,9,-3,-7,-7,-8,-8,-9,9,1,-7,-3,3,-3,9,-10,-10,-6,-7,3,1,10,6,-6,-5,-1,3,1,-4,-5,-8,-9,2,-3,-8,5,-10,1,-4,8,-5,4,-5,-3,3,9,3,-10,-5,5,1,-5,5,-6,-2,-10,5,6,-1,6,-9,3,-3,8,-10,-1,5,4,3,-10,-4,3,-6,-7,10,-9,8,-2,7,-1,2,-9,-10,-8,-1,-8,-1,-4,2,2,-5,-2,4,-6,-3,-9,-10,4,1,3,-10,-9,-1,-8,4,-4,2,4,9,9,6,7,-10,6,-10,-5,9,1,-7,-5,-8,2,7,8,-5,-8,-6,-6,5,-8,-10,-7,-9,1,9,8,4,-9,-7,7,-3,2,-1,8,2,-10,10,-3,8,-4,-9,4,4,6,-10,3,9,5,-6,5,10,2,5,-7,-1,-1,5,8,9,-3,9,4,-3,-8,-3,-9,-2,-1,8,1,-2,4,8,-9,3,9,7,-10,2,9,4,-8,-1,-3,-8,-2,7,-8,-5,-5,8,-2,7,5,-1,7,-4,-2,-4,6,9,2,2,-4,-6,7,3,9,3,-1,10,-2,1,-1,-10,6,-5,-7,8,-7,-10,-8,-6,-7,1,-7,-6,-7,-4,-3,-5,2,-9,10,10,-4,2,7,9,10,2,4,6,-6,-10,-3,-7,-7,-5,4,4,8,-9,7,9,-1,3,-6,7,-9,10,-3,8,5,-9,-9,-8,3,3,7,-7,10,4,-1,9,-7,10,8,-10,-1,6,3,8,1,-6,-3,7,-5,1,-3,3,-1,-1,-3,6,1,-4,3,-10,7,-5,1,6,-4,-9,9,-8,-7,3,-10,-3,-10,5,1,8,-3],[8,6,9,3,8,2,-4,4,8,-6,-5,10,-10,7,-10,-2,4,4,-9,-3,-9,-2,3,-2,-2,-6,7,-8,8,6,6,6,-7,3,-7,4,1,-1,-3,-9,-3,3,10,8,7,-6,3,2,4,7,-4,-7,6,9,-3,4,3,8,7,1,-10,-6,9,-3,5,-4,1,-2,-1,6,-1,-2,6,-10,-5,-8,8,-8,-3,-9,2,-5,-5,2,2,-4,8,1,-7,8,10,9,-9,-4,-7,-1,6,-4,7,-1,-3,3,-2,-5,3,-2,-1,-2,7,5,1,-5,-3,2,-4,-8,9,-10,4,-9,-1,4,10,-4,-4,-1,4,5,-6,7,9,8,-5,-8,-6,-9,-8,10,-1,-6,-5,1,4,7,3,9,7,2,6,4,7,-10,6,-4,6,1,7,-1,10,-9,9,-6,5,-10,-10,-4,8,3,-8,1,6,-7,6,2,-5,-8,10,1,-4,8,-5,-10,-10,7,9,-2,-9,-8,7,8,2,6,-2,7,10,-7,-10,8,-1,8,10,-6,8,-4,3,-7,-10,9,10,5,1,-4,2,-1,-4,4,8,5,-4,-3,10,6,-4,1,10,5,1,-2,-1,5,-1,-1,1,-7,4,-3,-1,-6,3,9,7,-5,-3,-1,-2,-10,-7,4,-9,-4,2,-1,8,5,7,5,10,-2,8,7,-2,-5,-10,-9,-3,-3,-2,-5,2,-2,-8,2,-10,8,8,10,-2,8,-7,2,10,2,-2,2,10,4,4,3,10,2,7,-7,8,-3,-4,4,4,8,4,1,-4,2,-1,-2,8,-1,7,-6,-5,1,-5,5,-2,5,-3,-1,-1,6,10,5,3,3,-5,-6,-7,4,-1,-1,-2,-8,3,3,-4,10,-7,2,-2,-10,3,1,-3,3,-4,9,-3,2,-8,-3,-3,6,7,-10,2,-6,-7,8,2,8,-10,-3,-5,10,-1,8,4,-4,4,10,5,3,-4,4,6,1,8,-6,10,-8,1,-5,-2,7,-4,-3,6,-10,9,-6,5,-9,-3,4,5,4,-10,10,-5,-9,4,9,8,-10,-3,-1,6,-9,-9,4,-9,-7,-5,-10,-3,-1,-10,9,-10,-4,7,-3,-7,4,7,9,4,4,4,2,-4,-6,-3,-2,-4,-8,-2,-2,5,-7,3,10,-2,9,-10,-3,5,-1,-2,3,-7,-5,-4,-10,-4,-3,2,6,-8,2,-5,-4,-4,-9,8,-2,-5,-6,7,-9,-4,10,4,2,3,1,8,-8,-2,9,-1,7,-2,-8,-10,10,9,-9,-7,6,6,-8,7,-7,5,9,8,5,-8,9,-9,-1,10,-1,3,-5,-7,3,8,-2,-5,10,-8,5,5,-3,4,3,4,-1,3,5,-8,1,8,9,-6,-1,2,-2,2,5,9,-10,-2,-1,-6,5,5,-9,1,6,-5,-6,3,-7,-3,-2,10,7,-2,9,5,1,-1,-2,-6,-4,7,9,-5,-6,-9,-3,8,-3,8,-8,5,2,-8,8,5,7,1,-2,4,-7,4,-4,-9,5,-10,-2,-2,10,-1,6,-2,7,-10,-10,-9,-1,-8,-7,3,-6,-5,-7,3,9,-10,1,9,-5,-9,3,-3,-10,9,-8,7,7,-2,-1,4,10,-4,-3,-9,1,-5,-7,-1,1,-4,4,3,-5,6,10,5,-3,9,1,-6,7,9,2,-10,-9,2,-6,-5,-9,-9,2,-9,5,10,-7,10,-10,9,-8,6,3,-1,4,2,-10,2,-4,-6,8,-5,-4,10,-4,7,8,-9,1,2,7,-9,-4,6,4,5,8,9,-6,6,-8,2,-4,8,1,1,1,-3,-10,3,3,-6,-9,-2,5,-5,-1,-8,-7,2,-4,4,-2,-2,-9,8,4,-2,-10,8,-4,-8,-1,10,5,-6,7,-6,-10,-3,3,9,-7,10,5,5,-4,-4,1,5,-8,-5,-2,3,-9,-8,-8,-2,10,-6,-4,6,-4,-3,6,1,8,10,6,1,-2,2,8,6,-7,-2,-3,-9,7,-2,-1,-1,-8,10,-4,3,-1,-7,8,4,-6,-8,-3,6,2,-4,-2,3,-6,7,-3,-8,-5,1,6,3,-2,-3,-10,6,8,3,7,-3,9,2,10,8,5,-1,7,-5,2,5,-4,4,-10,-3,4,-9,3,9,-3,9,8,-9,1,-5,9,-7,-10,-8,-9,-7,-6,-8,-10,-4,-3,1,2,-8,3,10,-5,8,9,6,-6,2,1,-10,-8,6,-7,5,-8,-6,8,6,2,-7,-9,-10,-7,-4,2,-1,-10,2,-7,-9,-1,7,-9,-1,8,-4,10,-1,-6,-7,-1,-9,-7,-8,-9,9,-2,-9,3,3,-7,-6,1,-6,-2,-5,1,-6,8,-3,1,-9,2,5,8,-5,-7,2,8,-6,10,7,-7,10,-7,2,-4,-2,-9,-10,-8,-9,-5,4,-10,-8,-2,-10,8,-4,-2,2,9,2,4,4,8,7,-6,-1,-1,-7,-3,-2,8,5,-4,5,2,1,3,8,-1,-9,7,-3,8,-1,-6,4,-1,-3,-8,10,10,-8,7,6,-2,-4,4,7,-7,5,-3,9,-9,-1,-3,-7,-2,-7,10,6,-8,-10,8,-6,-8,-10,1,-7,4,-5,10,-1,6,3,1,7,10,2,7,-2,-9,7,6,10,3,8,-5,8,-8,7,-10,1,-6,-7,2,-9,6,3,-2,-1,-6,10,9,-5,1,-6,-10,1,9,10,-1,-4,-7,-8,-8,5,7,7,5,3,-6,7,6,-2,7,-8,-1,5,7,-6,-4,9,6,7,8,5,9,-9,-9,-1,3,5,2,-1,-5,4,-7,3,10,3,10,-3,-2,-3,5,9,5,-1,6,-6,10,2,-4,1,5,-2,-3,-3,9,-10,-1,-2,3,-3,-7,3,8,5,2,-6,9,3,6,1,-3,-8,9,3,5,-4,3,-10,-5,-5,-10,-6,-2,2,-7,3,-3,-6,-3,6,-3,8,8,-8,-2,1,-7,-10,-8,-7,7,-4,-1,7,-7,1,3,-7,7,5,-10,3,5,-6,-8,-7,1,9,10,-7,9,9,7,-5,1,6,-8,1,-2,6,10,-5,3,-4,-10,-1,6,2,-4,-10,7,-8,-4,-8,-6,6,-8,-6,7,-5,10,7,-6,1,-4,-6,-6,-5,5,-7,-10,6,4,-8,-3,-7,10,3,10,5,5,-6,8,-3,7,-4,1,-4,4,-5,6,2,-5,-2,-10,-1,-8,8,-8,-9,-1,3,-4,8,-10,7,-4,-4,5,-3,2,-10,1,-10,-10,-6,-3,4,6,5,4,4,4,-8,3,-4,7,7,5,-7,-6,6,1,-7,2,3,-6,8,4,-1,-9,-3,-10,-4,-10,9,-3,-5,7,-1,6,6,10,3,10,-10,10,5,6,6,10,1,-2,-6,-10,7,1,-1,-9,-7,-10,-10,-2,10,-4,-1,-4,8,9,-5,2,-7,9,-6,-2,-9,-1,3,-2,9,-1,-10,3,1,3,2,-9,-8,7,-7,6,1,5,-1,7,4,-10,-3,4,8,-1,5,-9,10,-9,-7,5,2,-2,-6,3,-8,-6,-10,6,-10,-8,9,-7,7,8,-1,-2,2,8,-2,9,7,-3,-10,7,-6,-6,-4,5,-9,5,-5,-6,8,4,6,2,-3,-2,-3,-2,4,5,-10,-1,-1,-10,-1,3,10,-9,-5,10,7,-10,1,-9,-9,-2,3,10,8,-10,6,-8,5,3,-2,5,-4,-8,-6,-9,9,5,-7,-8,3,-5,3,5,3,-5,10,-2,6,9,-7,8,2,-10,6,-3,5,-2,-1,6,5,-9,-5,1,-3,5,1,-9,-7,-1,8,6,1,-4,4,-6,-5,-6,-10,-2,-9,4,-2,-2,-4,6,6,7,-1,-2,3,6,5,-8,8,9,-9,-7,5,-4,2,-3,3,8,1,8,9,9,5,10,-9,1,9,-1,-7,7,4,-2,10,-10,9,2,-4,-4,10,4,-1,7,5,8,2,3,-5,-2,4,-3,-2,3,-8,6,-10,-9,-7,3,-6,-4,-6,4,-4,6,8,3,4,5,4,4,-2,-7,1,9,-10,-6,1,-10,6,-5,5,4,5,-3,-1,-4,-10,-9,10,-8,2,9,-6,10,-6,8,-4,-1,4,-9,3,-5,4,-5,2,5,9,-7,4,1,-2,-9,3,-7,-6,-1,10,3,10,6,-3,-7,-6,1,4,8,-1,4,1,-1,6,7,8,9,9,-1,8,-7,2,2,8,-2,1,2,-5,-10,-3,-6,8,-8,-1,-1,4,-3,8,10,7,4,8,-1,-9,4,9,-4,5,8,-10,7,9,-10,-5,-2,4,4,5,5,-8,7,-8,6,2,3,3,6,10,-8,8,-1,9,4,-1,-10,-9,6,-8,5,4,-2,8,10,5,4,9,6,1,4,3,8,-10,9,7,-8,2,10,1,9,-8,-9,-10,-9,-9,10,-6,3,-5,6,8,2,5,1,2,1,-5,-10,-7,6,1,-7,-6,-5,-3,-10,-4,-1,6,6,-2,-9,9,-1,-8,4,5,-8,-10,-10,3,-3,4,-9,-4,8,4,-2,-7,-1,2,-2,-9,-7,-5,-3,1,-7,-8,7,1,-9,-3,8,-7,-2,-8,-7,-7,5,5,10,2,1,4,-5,3,10,6,-5,10,-4,-4,-3,-7,-2,-6,6,-2,1,5,10,9,-4,-9,10,6,6,-4,10,-9,4,9,-5,-9,6,10,3,-8,-8,4,6,1,10,3,1,-4,-7,-6,-3,-9,-8,9,-10,-8,3,6,4,1,7,3,8,-10,10,7,1,-4,-5,-2,-9,-5,2,2,-9,9,-1,-3,-2,3,-10,-5,6,-2,2,8,-4,-4,4,-4,10,-10,-8,9,-7,1,-3,-8,8,2,4,1,-4,-6,-2,-1,4,5,-4,9,7,9,-8,8,7,-8,-1,2,-8,2,-9,-4,6,-4,-6,-4,-4,-2,9,10,10,-10,-9,-6,1,6,-3,-2,2,1,-8,10,9,-4,-1,-6,-2,-4,9,9,8,-9,-6,1,-8,5,-9,-7,6,-9,-6,10,3,3,5,-3,5,-5,-4,10,-1,7,-1,-10,-6,6,4,-3,1,1,6,-9,8,4,2,-6,-1,5,-7,-9,-2,8,2,-4,-5,-8,-1,-4,3,-2,3,10,-3,6,-7,-5,-1,-8,-4,5,-7,2,10,-6,-7,-9,-8,-6,1,-9,8,-1,6,-1,2,-10,9,-9,-10,-3,3,9,1,2,-7,4,6,-6,5,-5,-5,5,8,4,-9,7,3,5,9,-9,8,-4,9,9,9,-10,-8,10,-1,6,-5,5,-6,1,-10,4,4,-4,-7,-6,6,3,-4,-2,9,-8,10,10,6,1,-2,3,2,8,10,-10,-3,-10,5,-4,1,-9,-7,-7,4,8,5,-1,-1,-10,6,-7,2,6,1,-4,-5,-3,5,5,8,-5,-9,1,7,10,9,2,7,9,-1,-10,9,9,3,-1,-9,3,-3,7,6,-3,7],[6,-3,-1,9,1,7,10,-1,-1,9,10,8,2,-5,9,-8,3,10,-8,-7,9,-6,-2,-1,-9,6,-2,7,10,-7,-1,4,10,1,-4,-4,2,3,-1,8,-5,-1,1,-1,9,10,4,-5,-7,-10,-5,-6,-8,-3,-5,9,5,9,8,-7,-7,-7,8,-5,10,-7,-4,2,-4,-1,3,-9,9,-4,-7,4,-5,-6,2,-9,-7,-7,-3,-2,-3,-8,-2,7,-6,-8,2,-6,10,-2,-3,7,1,-10,-3,3,-5,4,-7,-9,-2,5,-7,-2,5,1,9,8,2,-6,2,10,-10,5,5,-10,8,-10,-6,-4,-8,-9,-5,-7,-4,-3,-10,-4,-9,-8,10,1,1,5,-8,10,-5,1,3,8,-10,-6,6,-3,-10,9,-8,9,4,9,-2,7,8,-9,7,10,8,8,-9,-9,1,-8,8,8,-1,5,-8,3,10,6,-1,5,-6,3,3,2,-8,10,-10,-10,-7,-8,-7,10,-5,7,7,-5,-4,-8,-10,10,3,-6,2,7,10,4,-6,-7,5,7,7,-4,-10,-9,-3,10,10,-10,-3,2,2,-3,4,-1,5,8,-10,2,-5,2,-9,-5,-10,1,-3,7,1,-6,-1,2,3,-9,-4,-4,-3,8,-9,-2,9,-10,-8,-10,8,-4,10,-6,-9,7,5,4,-8,-9,7,-5,7,-1,-4,-4,6,1,5,3,2,9,1,-7,-8,-5,-10,-3,6,1,-4,2,6,-10,-1,-7,10,2,1,-2,6,4,-8,2,-9,-5,2,7,-1,9,7,-6,-1,-10,-10,1,-8,1,-10,-1,7,-5,1,7,6,-7,1,10,4,6,2,9,2,7,4,-4,4,-10,-1,9,4,-10,9,-8,-2,6,-4,4,-4,10,9,-9,-3,-7,7,-2,4,-5,-4,8,1,-1,-9,-1,-8,-3,6,1,2,-4,6,1,9,-2,10,2,4,-6,-10,9,9,6,-3,-7,-7,-5,8,-4,3,4,8,5,-9,6,-10,-9,7,6,-4,-7,5,-7,-10,-2,9,-6,-1,-10,2,2,-2,-10,-8,-1,1,-5,-1,-7,-3,6,4,10,3,-6,7,8,10,-8,-6,1,6,2,-10,2,10,7,10,-1,-9,-9,-6,-6,4,-5,5,-8,5,10,-10,1,10,6,-7,-4,-6,5,-7,8,-6,-4,10,2,1,-1,6,-3,-1,-10,-7,-7,5,-5,-2,6,8,9,-1,5,4,-2,-9,-1,-7,-1,3,-7,9,-5,-9,-10,-2,-8,1,4,1,-10,-3,3,9,-4,1,5,7,2,2,4,-3,6,6,-3,-7,9,1,-10,5,7,9,-7,-3,-4,-3,8,3,-3,-3,7,-7,-10,8,1,7,-9,-1,5,-7,8,1,7,-1,4,7,5,-8,2,-6,9,-2,-2,-7,6,9,-4,-1,4,-3,7,-10,2,9,3,-9,-9,-1,6,9,1,-10,-8,-8,-5,3,-9,-6,10,-6,-1,5,10,2,-3,-9,-2,-9,-2,-5,6,-10,-10,7,-2,-10,2,4,1,-9,10,9,9,-2,-5,-9,-4,9,7,-3,2,5,-1,7,6,6,-6,-8,7,7,7,-4,-8,5,10,6,1,6,-10,-4,9,-2,9,9,10,-7,-3,-7,5,-6,-10,-6,6,3,-3,4,-8,-6,-8,2,-10,-4,9,3,3,-8,-4,2,-6,-7,3,-10,10,8,10,6,9,2,1,-4,7,-5,-8,-10,-3,3,10,9,-1,8,8,-1,5,-7,-3,1,4,-10,7,7,6,-8,-5,-8,5,-8,-1,-10,-6,-5,7,-8,3,3,7,10,10,-2,4,-1,-6,-1,-10,5,9,7,-5,-9,3,8,2,3,-7,-8,5,-1,-8,7,-3,-8,-4,10,-9,10,1,-10,-10,-6,8,-8,-3,3,1,-1,-4,-9,-5,-8,8,-6,7,-5,-1,-4,4,3,2,1,7,10,-3,10,9,-2,-7,7,6,-3,-2,-7,10,6,-7,-3,-10,-6,1,-1,-3,7,-3,3,8,-6,4,9,-5,-4,-3,-5,-2,-8,-6,-5,-3,-8,-9,-8,9,-9,9,-5,-6,-7,7,-4,4,4,-10,-8,1,1,-6,-9,3,8,-8,6,-1,5,-6,7,-10,7,-9,-2,10,-2,-4,-3,-1,-9,-3,6,-10,4,-7,-6,-1,6,-8,2,-6,6,7,7,10,10,-2,7,-5,-8,9,1,6,2,8,6,8,3,1,5,5,3,2,-1,-9,1,-2,-2,2,6,9,5,2,-5,6,-4,-7,-10,7,4,-10,-5,-9,-3,-2,2,-9,-1,5,-5,7,-3,4,-1,-3,-8,2,-5,10,-2,7,6,-3,8,-2,-10,-2,-3,-6,-9,9,-4,-9,-2,1,5,-1,5,-7,-1,-5,8,-6,4,-5,-3,-10,-5,-9,10,-4,7,6,-7,-4,2,9,-9,-10,7,7,10,-10,-6,4,1,3,-1,-10,3,-9,5,4,-5,6,2,3,-1,-8,3,5,10,-2,10,-1,5,-8,8,-4,-6,4,-4,-1,1,1,1,-10,7,-2,-5,10,3,-2,-7,5,-7,-5,-9,5,4,-5,-6,-6,8,-10,2,-5,-7,9,3,1,-4,-2,-1,-2,5,-1,-6,-5,-6,-9,4,-5,-3,7,8,-8,4,-7,7,3,-9,-4,-3,1,-2,8,-6,-1,7,5,-7,10,-10,-8,6,-10,8,-2,-1,-10,3,10,-3,6,-10,7,-3,9,-4,2,-10,7,-4,-1,-1,-7,1,4,2,-5,-1,10,-1,-9,7,7,2,7,4,-3,1,9,-1,5,3,6,4,1,-4,-2,-2,10,6,1,7,5,6,-9,7,10,6,7,9,-7,8,4,2,-3,-3,-8,-8,10,9,1,-3,-7,5,3,1,7,-1,9,-6,2,5,-2,3,9,1,-7,8,-7,9,7,2,-1,-8,8,3,5,-10,-2,-1,4,-8,-6,6,-1,3,-8,3,-8,2,-5,6,2,9,10,5,-9,6,1,-1,8,10,1,-7,-4,-6,1,-9,7,-9,7,10,6,3,9,-2,2,-5,7,3,-1,2,-1,7,10,-7,-7,-5,5,4,4,3,10,-10,-9,2,-3,2,-7,6,-2,-6,-1,5,9,-2,-7,-10,2,-6,6,-1,-2,5,-3,-7,-5,5,2,-4,1,-5,-10,7,-8,4,-1,-2,-9,2,-9,6,-2,2,5,6,-1,-6,7,-6,8,-8,7,2,7,10,3,-2,1,2,9,3,10,-2,5,-1,-7,2,8,-2,5,5,-7,4,10,-3,-5,-6,8,-3,5,5,-4,-6,8,9,7,3,10,2,-3,-6,1,-5,-9,1,-2,-6,1,9,7,3,2,7,-3,-2,6,-7,10,-6,-8,-5,-3,-7,2,-4,-5,-4,-2,9,-2,4,-6,4,4,-7,9,5,4,6,9,6,8,-1,8,8,10,7,6,4,-3,2,-6,4,2,-5,-2,7,8,10,7,-8,-1,-4,8,5,-2,3,-8,7,7,-1,2,8,-5,10,6,2,6,-4,-8,6,-8,8,-4,-5,9,-1,-5,5,-7,5,-4,3,-3,-4,6,10,7,-1,5,5,6,-6,-4,3,5,-7,5,1,-8,8,5,9,8,-6,-10,6,6,6,-5,1,7,1,9,9,-6,-1,-4,4,4,4,10,9,6,-8,-4,-10,-9,4,-4,-7,-9,3,1,-5,9,9,3,-7,-3,7,4,-10,-8,-2,7,-3,8,-10,-5,-3,8,4,-8,-8,4,8,-3,-2,5,5,3,-8,6,-1,-5,-3,-6,4,-8,7,-8,-9,-5,5,-6,2,10,2,10,-5,8,7,5,-10,-4,4,-3,-6,-5,-10,1,2,-4,5,6,8,-10,-7,-8,7,-1,-5,-5,3,-10,-4,-5,-2,9,-2,7,-8,-4,-3,10,-4,2,-5,10,10,-3,3,-9,8,2,2,1,-8,4,7,1,7,3,-2,-2,-5,7,4,2,-3,-3,6,6,8,5,-6,-9,2,4,6,-8,-2,8,-10,-1,7,-7,-7,6,3,-3,2,1,-7,-9,3,-4,2,-5,4,-3,-10,-3,5,2,-3,-6,-10,-8,-4,-8,4,-3,5,7,4,10,2,8,-5,5,9,4,10,6,10,-10,7,-1,1,-2,1,6,-5,1,9,7,-7,7,2,-1,7,-7,7,7,-9,3,-10,1,7,5,-8,-4,-5,4,4,2,-9,8,-10,-3,5,-6,7,10,1,-8,2,-6,4,-6,5,2,10,9,-6,-6,-8,-5,2,-9,-3,-2,10,1,5,-2,9,6,5,-9,10,3,-8,5,6,-2,2,3,9,-7,5,-9,-5,-4,-2,3,-8,2,-5,-5,2,9,1,-7,9,-9,3,-9,-2,-9,7,8,10,-1,-6,5,6,-1,7,-1,10,-1,9,3,4,-8,6,6,6,9,4,2,-10,-10,1,-3,3,-5,-5,-4,10,10,7,-2,-1,-9,-6,8,-3,5,10,-6,2,-5,-2,6,2,2,1,-4,-4,9,3,-8,-6,2,-10,10,4,3,-6,-1,-4,-10,4,9,-9,10,6,8,-2,9,-1,-8,-6,-10,-9,-3,-2,9,-6,-6,7,-7,-7,-6,-5,2,3,10,2,-4,-1,-5,-9,-8,3,10,-1,4,3,-6,-4,-4,-10,-8,4,-3,-8,-7,3,2,1,-5,-10,-2,-8,1,9,-8,-2,3,-8,-1,5,3,-5,-3,8,1,-8,1,1,5,-7,-1,9,7,2,-4,-7,-6,-4,1,10,10,-2,3,2,3,3,10,-10,9,-6,1,-10,8,-8,5,-10,4,-7,5,-7,1,-4,3,-8,6,-5,-9,-3,-8,5,-7,-10,7,1,7,4,-9,-8,4,3,2,-6,3,-10,-10,-4,-2,-1,-2,-2,-10,6,5,-10,-2,9,-10,-6,6,-4,1,-5,-2,1,-9,-2,9,8,2,1,2,-7,-4,-5,-9,9,7,-2,-2,-3,-5,-4,3,-8,-2,8,-8,-8,9,7,2,-7,-1,8,-1,-8,5,3,-4,4,10,9,8,4,-1,-5,-6,4,1,-3,-2,-1,1,-7,-4,10,-3,-6,6,-10,3,-2,8,-8,-7,-3,10,-7,7,7,-5,9,-7,10,-7,2,6,8,-1,4,5,-8,1,-7,1,2,-2,3,6,-5,-4,10,3,3,-4,4,2,6,9,-4,9,8,6,1,5,-2,4,-8,-2,3,-5,5,2,3,-5,4,4,5,3,2,3,6,8,6,-2,3,-7,9,8,-3,-10,6,6,3,-9,-9,9,-2,9,6,-7,3,7,-5,3,-9,4,-6,-9,2,-4,-2,6,1,-2,-9,5,-6,1,9,-9,8,6,-6,2,4,-8,-10,-10,10,-5,-10,-8,-3,8,-2,2,2,3,-4,-3,5,-5,-6,6,-7,-2,3,5,-8,10,2,1,2,10,-2,-4,-6,10,4,-5,-8,9,-6,7,-9,-5,1,-5,-1,8,-1,8],[1,-9,-5,7,-1,5,3,3,-1,3,4,6,4,-9,-6,10,7,4,4,-5,10,-4,4,-4,-8,8,4,9,9,1,-5,3,-2,1,-10,3,-8,2,-6,8,3,6,-1,-5,3,4,-1,-9,5,9,8,-5,10,-8,-4,-10,4,6,1,4,1,3,8,-5,1,8,7,-6,3,-1,10,-5,7,10,3,5,3,-6,-7,-3,4,-8,9,7,-7,8,-2,-2,2,-1,5,1,-2,-8,-7,-1,-6,-3,2,6,10,7,-5,-3,8,-4,-7,-10,3,2,-2,-2,-2,3,4,-1,1,8,-6,5,-4,8,5,2,9,9,-9,-8,-5,-2,10,5,3,7,4,-5,10,-10,5,-2,-10,-4,1,7,-4,-7,4,4,-7,9,5,-2,1,-10,7,-9,-5,3,4,4,-9,-2,4,2,-9,7,-5,8,2,-2,-2,-4,-3,-2,7,7,-8,-8,-5,8,-1,9,-1,-2,5,-1,-5,3,-2,-7,3,-2,2,-5,-10,4,-7,7,-10,-2,5,1,8,9,10,-8,1,6,-2,2,-6,-3,-9,-1,-1,3,6,-7,-7,6,-4,2,4,1,-1,-8,-1,-9,1,-9,-5,-8,6,7,4,3,-8,3,1,8,9,8,-4,10,9,8,2,6,3,-1,9,-7,7,8,6,-1,-9,4,-7,1,-2,9,6,9,-1,8,-6,-6,7,-4,-10,-7,-5,-4,-3,-10,1,8,7,9,-10,5,-2,-1,-4,1,10,-3,-8,9,10,-6,-9,10,-4,3,6,1,8,8,-7,-6,-8,1,-5,-5,10,-10,6,6,-9,-3,6,6,6,-5,-4,9,1,-7,-10,3,-6,2,3,3,6,8,1,-5,-9,-1,3,-4,-10,3,3,-2,9,2,-2,5,-2,2,-6,-2,9,-7,-1,-9,1,-3,-7,7,8,9,6,-10,6,4,8,8,-9,-2,-7,-3,4,-5,10,-9,1,10,10,6,1,10,5,-7,-3,7,1,-8,-6,5,7,4,-2,7,-4,9,-2,5,5,2,-10,-9,8,5,2,-10,6,1,6,-1,1,-6,-9,2,2,3,2,-4,-1,6,2,4,-8,5,3,6,8,-6,-2,2,-2,-7,-8,7,-1,3,-9,-1,-4,-2,-4,8,10,-8,2,-6,6,-1,6,6,-2,-1,7,-7,8,-7,-10,4,-1,-2,-4,-9,4,7,-9,7,1,2,8,9,1,-8,-1,10,-5,-4,3,-9,5,-8,8,-6,1,-5,9,5,-9,10,-7,1,3,3,1,4,10,8,7,-5,2,-9,5,1,-9,4,-3,10,-2,-3,-6,7,-1,4,-1,-6,10,-3,1,10,9,6,9,-8,-8,4,-10,-10,7,10,-4,2,4,-2,1,5,-6,-2,6,5,-2,9,-1,-4,-6,6,-3,-7,-4,-3,9,-7,-8,1,8,9,-7,4,1,6,-4,-7,-1,-5,-3,3,6,-8,-8,10,5,8,10,-1,9,8,10,-4,10,-9,8,5,-2,10,-2,-6,10,10,-5,10,-8,1,4,10,-5,-8,-1,-8,-6,2,7,-4,3,6,6,-4,-6,2,-8,-5,1,5,6,2,-4,-9,-2,9,-10,-3,-2,-9,-2,10,3,-3,9,-6,-3,-9,5,-7,3,-4,10,-9,4,1,-9,6,-6,-8,-6,2,-5,4,10,-6,-7,8,-8,2,-5,8,3,9,2,8,2,-5,2,-6,5,7,-2,1,-2,-4,5,-2,-7,-2,8,6,2,6,5,8,4,1,-2,10,5,-10,9,3,-3,-6,4,9,-5,2,7,-9,-7,10,5,1,5,4,-3,9,-1,5,9,3,-10,-4,-7,1,5,3,-1,-2,8,-10,3,9,6,-1,-9,-7,-1,8,-5,-4,-10,2,3,-6,10,-6,-5,6,8,-4,-10,-7,-5,-1,-4,3,-3,-5,-9,-9,-7,1,-7,-3,2,3,-2,7,5,-10,-2,-3,9,1,-9,6,-7,-9,-6,1,-4,2,-5,5,-6,9,9,-4,1,6,-8,-7,-1,-1,-1,-7,-7,2,9,-9,2,4,1,-10,5,-4,8,10,-10,-6,-3,7,-1,9,-6,-4,8,2,8,-4,5,8,9,-5,-10,1,4,-1,-9,-7,-1,-5,-9,-10,10,1,-10,-1,8,-10,-6,10,-3,7,5,6,2,-7,-2,-1,-9,-8,-1,1,-4,6,6,-2,-8,8,10,1,9,7,5,4,8,6,-2,9,-10,7,-10,4,5,-3,-7,-1,2,-8,5,2,3,-5,5,-10,-6,10,6,-5,-5,8,-5,-8,6,-4,5,6,-4,-2,2,3,-9,-5,-6,-7,-1,4,-5,-2,8,4,6,3,1,-8,-7,5,3,-10,2,-1,-2,8,-7,8,10,9,2,-5,-7,-7,3,10,-2,8,-8,7,-4,-7,7,8,-7,-3,-9,1,-1,-10,-2,10,-1,-8,-7,-8,9,-4,1,6,-9,7,7,-5,8,-1,-8,-4,1,-9,-8,1,-2,-6,7,9,10,7,3,6,-9,-4,9,-7,2,1,3,-7,-7,6,-4,-3,10,-2,1,-6,4,-9,-8,5,4,-1,-8,-2,1,2,-4,10,4,-8,-9,-7,-4,7,-5,-5,-10,8,5,6,9,-3,-4,10,6,-5,4,-9,-10,-4,1,-4,6,-3,-1,8,9,-4,6,-3,3,7,-1,8,3,4,9,-6,-9,5,8,-9,-5,-9,8,3,-1,-9,-7,2,8,5,-4,-4,2,3,3,8,-7,-8,1,8,-2,-2,3,10,-10,1,-9,-8,-4,-4,3,6,-1,8,-6,3,3,-8,9,-10,-4,-4,-7,8,3,10,-4,-9,1,-6,-2,-6,4,3,-1,-4,-5,-1,-1,4,1,-2,-10,-9,-6,9,-5,3,8,-5,-9,7,-9,6,7,4,4,2,-6,-7,9,-10,-1,-6,-1,8,-3,-3,3,-10,9,-10,-1,1,7,-10,3,3,-5,5,-3,7,9,-6,-9,-5,-2,5,9,-3,-3,-3,2,-2,-6,-4,-9,-2,-1,3,7,-2,2,4,-3,-8,-9,5,-8,2,-4,-2,7,3,4,-2,5,4,1,-1,-7,1,1,-9,4,4,8,-3,9,5,-6,-6,10,8,-8,-8,-9,10,6,10,1,-8,-7,-3,10,4,4,-5,-10,8,4,-4,6,3,-5,9,-7,4,1,4,5,7,8,8,7,-7,-3,-3,8,8,-1,9,8,-3,1,10,5,-7,-1,10,-10,-10,1,1,-1,3,10,1,-7,6,-2,-6,-4,-10,8,3,-7,1,8,7,3,-1,-4,-10,9,-1,-2,9,-9,-3,7,5,10,-1,-9,6,-8,4,3,5,10,4,4,-10,-10,-2,-8,2,4,-4,4,5,-1,6,-3,-6,10,4,1,8,6,10,-6,10,8,5,4,-3,-8,-8,1,-5,4,-4,-5,6,-2,-3,-9,-2,-7,-8,-6,-7,-10,-7,-1,-10,2,-7,8,-8,2,-1,-4,-7,-10,3,3,-10,5,4,8,10,-1,8,-2,10,-8,4,-3,-3,5,-9,-6,-3,-4,8,4,5,4,-3,-10,10,-3,1,7,-1,2,3,8,-10,7,-8,3,-4,-9,-5,1,8,-10,-4,-5,-9,6,4,2,-8,-1,9,2,-2,2,1,-1,-7,-9,9,-5,-2,4,5,-9,4,1,-3,7,-3,3,2,2,6,-2,7,5,8,-5,-7,8,-6,5,4,-5,2,-1,-1,-4,6,3,-3,3,2,-8,4,-10,-7,-2,-6,-7,4,-3,-5,-5,2,4,-10,1,-9,-1,-5,5,-6,2,-3,-2,-9,5,1,4,-10,3,7,2,-10,-1,1,-6,3,1,-7,5,8,-9,-2,4,-1,-1,-8,-6,-3,-3,3,3,5,1,5,-9,8,1,1,1,2,-2,-3,9,7,2,1,-7,-7,2,6,4,9,3,1,-2,6,-3,4,4,-6,-3,-10,-5,1,-9,-9,1,8,-6,10,2,-3,4,9,-1,6,1,-4,-5,6,-2,-8,-10,10,7,-5,-7,-4,-6,-1,-7,10,-5,4,1,-5,-4,-5,1,-2,5,-7,-6,3,5,10,1,10,6,7,6,10,4,4,-1,4,-6,10,4,-5,-7,3,-6,-7,8,10,3,4,5,1,-6,4,7,-3,5,-2,-4,-4,7,-3,-3,-1,-10,4,-4,-1,-1,4,7,9,-7,8,-5,4,-4,-6,-9,-5,-3,4,3,10,2,-4,-3,-3,-3,4,5,-9,-6,-8,-4,-5,2,-6,7,-1,-2,-8,-7,7,-5,-7,10,1,-2,2,2,5,-7,10,-1,-2,7,9,-2,5,9,8,-1,7,8,9,7,3,-7,7,-6,-10,-7,-9,5,-6,8,-6,-1,-2,4,-8,-7,4,-5,-3,-8,-4,-2,-5,6,5,-5,5,-6,6,10,1,-4,3,-6,10,7,-10,-4,-10,-6,6,-6,9,8,3,9,5,-1,-5,-3,2,7,-3,-6,-3,7,-6,-10,6,10,4,-5,5,7,4,2,-4,-5,2,-9,6,4,-9,-6,-10,6,6,-7,7,10,6,7,-1,-4,-6,9,8,-1,-6,4,3,-4,-1,-9,-4,2,-1,9,-3,-6,-7,10,-8,4,8,-4,10,-10,-10,1,-8,-6,-4,-2,10,-6,4,-2,-7,-8,6,5,-9,-9,4,3,-5,-2,3,-7,-3,-10,9,9,10,-10,-9,-2,-2,7,1,9,-10,6,-8,-8,4,-9,-2,10,6,-6,-6,3,-9,5,4,-7,-6,10,4,6,8,2,2,1,3,-4,8,-9,10,9,8,10,7,-10,10,10,9,-9,5,10,-1,-8,-2,8,-9,-7,4,-10,7,-3,-6,-6,-4,-6,7,6,-10,7,-9,7,-3,-4,-4,-8,-6,10,2,5,-3,7,-8,-7,9,-4,10,-8,-6,8,1,-2,6,7,8,-8,-4,2,-7,-2,-3,-7,-10,4,9,5,-9,-5,9,-5,-5,-9,-7,2,-9,2,-3,-5,-4,-8,-2,-1,1,7,9,8,-4,-4,7,-5,-4,-8,-6,1,-3,-2,-3,-7,-10,-6,-6,-6,1,-1,8,5,-3,-1,8,-8,1,6,-3,-10,-9,4,1,8,-10,10,-7,1,2,10,4,-10,7,8,-3,5,-5,7,-10,7,6,-9,-4,4,2,5,1,10,-5,10,-1,8,-5,-1,4,7,7,4,6,-9,-3,6,-4,-3,-9,7,-7,5,1,-9,5,-6,1,8,-9,8,3,-5,-4,-6,-1,-2,-7,2,-2,7,-6,4,5,5,-8,4,-8,-10,7,-5,8,-7,-2,-7,10,6,6,-1,1,-3,-10,-2,-7,-3,8,-1,3,3,4,4,3,10,-1,8,-9,-2,-9,-7,9,-1,8,-5,-9,-10,8,7,-5,1,-7,9,2,-5,8,-7,2,5,-9,10,-7,-1,4,8,-6,-7,-8,1,10,10,9,-4,-7,-10,-9,6,-3,-3,-6,8,10,7,2,7,-3,9,-6],[5,-3,-2,7,10,-3,-1,-4,1,4,1,5,9,4,-1,2,4,3,10,1,2,-1,-5,1,10,-5,5,-10,9,2,-6,8,-2,5,-10,9,4,-6,8,6,-5,10,10,-4,-6,9,-3,-4,-7,-6,-9,1,-7,-2,-4,-5,-9,1,-7,-8,-1,6,3,8,1,9,9,3,4,-10,-4,-9,10,-10,-3,1,-5,-8,9,10,-10,-1,-8,-6,8,1,3,-4,-8,-1,5,6,10,-2,-2,8,3,2,4,2,-3,5,-4,8,-5,4,-10,-10,4,9,6,7,-7,-9,-6,2,-7,-5,5,-3,-2,-10,5,3,4,5,-9,7,1,6,8,-7,6,6,-5,4,3,-10,-6,8,-2,9,-5,-7,4,-4,-5,9,-2,7,-3,-5,-6,5,-7,-1,-5,-10,9,-9,-5,9,-3,-5,5,-2,-2,-5,1,10,4,-7,-4,-3,6,-7,-2,-3,7,10,8,2,-7,10,-8,6,-2,5,9,10,-8,6,-5,5,-7,-6,4,-8,-7,-1,-9,-1,7,6,1,-1,2,1,8,-1,-10,9,7,7,6,-10,-4,-5,-4,6,8,6,-5,-9,-4,8,-7,10,-6,9,6,6,-10,-10,3,-4,5,3,9,-5,-2,7,-9,5,-3,-9,4,8,6,2,5,-2,-8,-10,-7,-9,7,-8,10,-6,-8,1,-8,-7,6,6,7,-2,5,1,-9,8,-8,-4,8,3,-3,-7,3,9,-7,-1,-5,9,-6,-1,-3,-1,-5,-9,-7,10,-7,2,3,9,8,-4,4,-4,-6,-5,2,-9,-3,10,3,1,-9,9,-6,-1,10,-7,1,-5,6,5,8,-5,-4,-2,-6,-6,5,6,6,6,-5,10,-6,-2,-7,-10,-2,-7,-1,5,3,4,-9,-9,-2,-10,-8,4,5,4,-4,8,-1,-4,5,2,3,4,-10,6,8,8,6,7,9,-3,8,-9,-8,1,-2,-9,-3,-6,8,5,-8,1,7,5,-3,-9,2,10,-2,-3,-8,-1,7,-5,9,-2,-5,3,5,7,8,9,-7,2,-3,-4,-5,-1,-4,1,6,-2,-8,-2,5,-9,7,-5,-8,-4,9,-2,-4,-1,1,2,3,8,-9,4,-10,-8,-2,3,-9,-1,-4,-5,5,-5,-5,-4,10,-2,2,4,-1,-3,7,-3,1,-5,6,-3,5,9,-6,-2,7,-9,2,-5,8,-3,1,9,9,-7,5,8,-8,4,10,-2,2,7,5,-4,-7,-7,-5,10,-2,9,-7,-1,-1,-10,-1,-9,-6,-4,8,3,8,-6,8,-7,5,10,-10,-8,6,-6,-4,9,-3,10,-4,9,-5,-5,10,-5,-5,-6,8,9,-4,10,-10,-8,3,-4,-3,8,-7,2,4,-2,-4,5,-4,5,-1,-8,5,4,3,6,-1,3,5,5,3,-10,6,9,2,-10,1,2,3,6,5,2,-6,6,-2,-3,-8,4,-8,6,6,-1,-3,5,-2,-1,-4,-5,-10,2,-9,9,-7,3,-5,-3,6,-10,-8,6,7,-7,4,3,-10,-8,-1,-8,7,2,-4,-2,9,-1,8,-7,9,-8,-3,-7,-8,-3,9,5,-7,-9,-4,-1,-5,-1,4,-8,3,3,8,10,4,-5,7,10,-9,-4,2,-5,10,9,-6,-6,-4,-5,-1,-10,-8,-10,7,8,-1,-8,-8,7,8,1,-3,-1,7,3,10,-5,-10,-5,6,-2,6,7,2,-3,2,-4,-2,-3,-2,-1,2,5,2,1,-3,-3,5,-4,-6,9,2,2,-10,-5,3,-9,3,-7,1,-10,-2,-7,3,-4,-10,-6,6,-8,-4,1,10,-2,-1,5,6,-10,10,-5,-1,-3,-2,5,8,-6,-8,-8,6,-9,-9,-1,-2,5,-8,-7,1,-2,-1,-5,-10,-9,-8,7,9,9,2,4,2,-6,-4,-1,-4,-2,-10,2,-5,-10,-10,-5,3,-6,5,-9,-3,-7,-9,-2,3,-6,10,-5,-8,8,-2,-6,8,-7,6,-1,-2,-6,9,2,3,-5,5,-7,-4,3,-9,-10,1,-1,-5,5,-3,6,10,-3,9,3,-9,9,7,-1,8,-5,-1,9,-9,1,5,5,9,-8,8,-2,-4,-4,2,-9,-9,1,-1,5,-5,3,6,-7,5,-3,1,-2,6,-7,-3,1,9,1,-4,-9,1,-1,1,3,-7,1,-2,2,8,8,-4,-3,-1,-4,-9,4,-6,-8,-4,2,-7,-9,5,9,-1,-7,6,-1,-4,-1,-7,-4,1,1,-5,9,6,-1,1,6,-8,8,-5,-2,1,2,10,4,-10,-1,8,6,-9,-4,-10,-4,-5,4,-9,-9,-10,2,-6,5,9,-2,-7,-10,-7,9,-9,6,5,-4,-4,7,-1,-8,-3,-7,-1,1,7,-4,-8,-2,8,-10,5,7,4,-7,-3,4,-10,-10,9,-8,-3,-1,-7,-7,-8,-8,-1,-4,1,10,8,9,6,-8,-1,1,9,6,-4,3,-1,7,-7,7,-4,-1,-2,10,-10,-2,5,6,7,3,8,-5,8,1,3,-5,-4,1,7,-3,-2,-9,-2,2,-10,1,3,-8,-8,-10,6,9,-2,-7,2,9,9,-10,4,10,-8,-3,-9,-4,10,9,7,-10,-6,1,9,1,-7,-8,-2,-6,-1,1,-10,8,-9,7,-3,-7,6,-9,8,-2,1,-6,10,3,-3,-3,1,4,-6,-6,-8,10,-2,8,10,-5,-1,4,-6,-5,3,-1,-7,4,6,4,4,-9,-6,-6,-8,-7,-3,2,-10,-8,5,9,4,7,3,5,9,2,10,2,-1,9,-10,5,10,-4,3,-8,5,7,9,5,-6,3,-7,6,-2,3,-7,-3,-2,-1,8,-1,7,3,8,3,-7,9,-9,-3,9,-4,-6,5,-4,2,8,-7,9,-10,-9,10,7,-3,6,9,6,4,-2,10,7,-8,-3,-9,-8,-9,4,-5,3,-9,-6,4,4,3,-1,10,3,3,6,8,5,-10,-1,9,-5,-2,-7,-4,-6,-4,10,-5,3,-8,-3,10,-8,-4,7,2,10,-2,2,-7,-5,-7,5,7,-1,-9,-5,-10,-1,-1,-8,10,-9,-4,-10,-9,-3,9,8,8,-1,2,7,-9,6,7,-5,1,-1,4,7,-8,10,8,3,5,-4,10,-1,-10,-10,-1,5,-8,-7,2,6,6,-7,-3,-2,-4,7,6,2,-5,6,-7,7,9,-10,10,1,1,10,-8,-6,7,-8,-3,2,3,3,-10,7,-6,2,-2,-2,3,-1,-4,-5,2,7,-4,-3,-8,-8,9,-8,4,-1,-3,3,4,-6,3,-1,-5,-8,9,7,-10,-4,4,-3,9,7,6,-7,6,-9,9,3,2,4,-5,-9,-7,3,4,-10,-10,9,8,4,-1,4,7,-5,-9,10,-9,-6,-3,-10,6,4,-8,10,8,2,9,1,-5,6,-5,-5,-7,-3,-3,9,-2,3,-5,7,-9,3,7,5,-10,6,-7,-2,-4,-5,7,-6,7,10,-4,-3,6,-10,-2,4,8,-7,-1,-9,3,3,10,-2,1,-8,7,-8,9,-7,-5,-1,1,7,-7,10,-4,4,4,-10,-6,-8,10,-7,3,8,-6,-2,6,-10,8,7,-3,-6,4,10,4,4,-5,1,-6,-10,7,-9,1,-10,-9,3,-5,-9,-8,-1,-10,-6,-10,6,7,10,8,-9,-1,10,-5,4,-5,-8,-3,-5,8,9,-8,3,3,-9,5,9,-8,-5,-5,2,-3,3,1,-10,-7,4,6,-3,3,7,4,3,7,5,-9,2,-7,-10,10,5,1,-7,1,5,3,-9,9,9,1,10,8,2,6,4,-3,7,10,-10,-3,-4,-8,3,6,5,-3,5,-8,9,-10,2,-1,9,1,2,-4,-10,1,2,-5,-3,4,2,-7,-6,1,4,4,-3,3,-9,-4,-1,-2,2,-2,6,5,9,-8,-2,-2,-10,8,-3,1,-9,-3,-1,3,-2,10,-2,7,-10,-6,-1,9,-7,7,9,2,-6,-8,1,2,-8,-1,-9,2,3,-2,-6,-8,-7,3,-6,5,3,8,-5,-5,-5,5,-7,3,-5,-6,5,4,-10,9,-5,5,8,-9,-6,-7,-5,4,9,3,2,7,-3,9,-9,9,-5,-1,8,7,8,-4,8,6,5,3,9,5,2,-5,-4,-6,-9,-1,9,-2,4,10,3,-1,-5,8,-4,-4,-6,-9,3,9,-4,-10,8,2,7,-4,-7,-1,-1,4,1,-4,-1,5,-8,-6,5,-5,-8,-7,-8,7,7,-8,8,-4,2,-4,-8,-6,5,9,10,5,1,-2,4,-4,7,7,-4,4,6,-10,9,3,10,6,-7,7,-6,7,-8,8,3,-3,-8,-6,5,1,3,-9,-7,4,-7,-10,-2,2,-9,7,8,2,7,2,-3,-7,8,-1,1,7,-8,3,-7,10,-5,-2,7,1,-2,-5,8,5,-7,9,4,8,-6,-4,3,-10,2,-3,6,2,-9,-4,10,2,-6,5,-10,1,-1,-8,-10,-5,8,1,6,-1,2,-3,-5,-8,-6,10,-4,-2,8,3,8,-10,10,2,5,-10,-9,9,-7,-6,10,9,-10,10,10,-8,3,-5,-9,6,10,-3,10,6,9,-2,-9,2,1,9,-9,-10,-7,3,1,4,-9,4,-6,-9,-2,3,-2,-3,1,4,1,2,10,5,-7,5,-5,7,7,8,9,-3,10,-5,9,1,-5,7,-10,-7,3,-3,10,2,8,-1,3,7,9,4,-3,-8,-10,4,-9,-7,4,3,-1,-5,4,5,9,1,-6,-6,2,7,-8,1,3,-4,-9,-3,1,-7,-4,-2,-6,1,-8,3,10,3,3,7,-4,-7,7,1,-9,-3,-5,-6,-10,5,3,-9,9,2,7,-10,-2,4,-6,-7,5,8,7,-3,2,-6,-5,9,-6,-6,2,-4,2,4,-2,4,3,9,7,-8,9,3,8,8,5,-8,1,-3,-9,4,10,-1,10,-4,2,-6,-7,-5,-5,10,8,-8,2,-3,-8,4,-4,2,3,-3,-9,5,9,10,2,3,2,10,-3,-6,-1,1,-3,1,1,2,2,8,7,7,-10,1,2,-5,-8,5,9,-5,1,2,-8,5,-10,-3,-1,-8,1,-2,-3,-7,7,-8,-8,-1,-1,-2,-5,-10,10,-6,4,-1,-3,7,1,5,-5,-6,-8,-3,-10,-7,-2,4,10,2,-1,-8,-9,8,-6,9,6,6,2,2,-4,7,-5,9,-8,-9,7,3,2,-7,-6,4,10,7,-7,4,-7,-9,-9,-8,-3,-7,-6,-6,4,1,-10,2,-2,3,-6,-3,5,5,-4,2,10,8,2,6,-9,-5,-1,8,4,5,8,4,1,7,4,3,-1,-2,6,8,-7,4,-10,3,4,7,-7,-5,-2,-6,-6,-10,1,-1,-2,-2,-1,-8,9,-6,-1,-6,6,9,-6,4,-5,8,-8,2,-7,2,-1,1,-4,-2,2,3,1,-5,8,-6,6,8],[-2,-8,7,9,10,7,-6,9,8,5,-6,6,-2,5,-8,-3,-5,1,1,-9,9,5,8,-5,-5,-8,3,-5,6,-2,-4,7,8,-1,-10,-9,10,-6,5,-5,-2,-3,4,-9,-7,9,9,-9,5,-5,-4,-6,8,1,3,-6,-8,9,5,6,-8,3,10,4,4,4,4,2,-10,-5,-10,8,-8,-2,5,-6,3,-2,-1,-2,-6,5,-6,3,-10,9,-9,-8,3,3,9,3,-9,9,-1,-5,7,8,4,9,10,-4,6,10,-3,9,2,-4,-7,9,3,-5,-5,-4,-6,5,-3,-7,-10,-2,9,4,5,10,-10,10,-4,-6,7,10,-2,-1,3,-6,4,7,-9,-5,-9,-4,6,4,8,1,-9,1,5,8,10,2,-10,-9,9,1,1,-9,-1,8,-5,5,9,7,7,-3,-7,-1,3,-6,-6,-10,-4,5,-2,-5,4,-2,7,7,3,1,5,9,-3,-8,-3,7,9,-3,5,-9,9,1,9,1,10,-3,5,-2,-6,9,-1,9,8,-3,1,3,-1,9,6,3,-2,-2,-8,-3,-7,6,-9,-9,8,-2,-4,-10,-1,5,8,5,4,-5,2,-9,-10,-8,-9,-8,1,-5,-4,9,5,-5,4,1,7,-2,-3,9,-5,4,6,-2,-1,3,5,5,8,3,9,-1,1,7,-4,9,5,-7,7,-9,10,6,-4,7,10,-5,5,9,-9,10,-3,7,4,1,5,10,2,3,6,9,2,-8,9,-1,-2,-6,-9,4,-8,5,-5,-1,2,2,-5,-5,-4,-2,-8,3,-5,8,-3,9,7,3,8,10,9,7,4,3,-5,-3,9,5,-7,7,-5,-9,10,-6,-9,10,8,-4,-1,10,-3,9,1,5,6,9,-10,-6,2,1,-8,-9,-2,1,-1,1,6,-3,5,6,-2,5,-3,2,-4,-7,8,1,3,5,-4,6,-6,8,9,-7,1,2,-4,1,1,-10,-6,-9,4,-2,10,-8,-9,2,-2,-10,8,7,8,9,6,8,-2,-2,3,-5,-2,-3,-9,10,1,-4,-1,2,1,-1,-3,-10,10,-3,5,-7,-1,9,-3,-3,6,7,10,-1,3,7,-2,2,10,4,1,4,10,-4,-10,-1,-6,-8,-6,-9,-10,4,7,4,1,-5,-9,-6,10,-4,-9,-1,-3,-3,-7,-9,-1,10,1,5,2,-2,-7,-10,10,-1,10,4,-10,-4,1,3,8,-10,-7,-9,-3,10,1,10,7,-8,3,2,-1,10,10,4,9,5,6,-5,-6,2,-8,-7,-4,-1,9,10,-8,1,-6,-5,8,-10,-3,5,1,-7,10,3,-2,-2,-6,2,5,-3,8,-3,-10,-1,10,-4,-5,-10,-6,-8,-5,-1,3,8,-7,-8,-1,-3,5,-5,2,-4,2,-2,6,9,10,-6,-5,10,5,9,8,8,8,8,5,-6,7,9,8,7,-10,-3,-7,-9,1,-2,-9,-4,-6,-6,-4,9,-10,5,8,10,-6,5,5,8,9,9,-10,5,-5,6,3,3,6,5,-1,-4,-5,-10,2,-8,-8,10,-10,-4,8,-8,-7,-6,10,-9,-4,10,3,-10,10,5,-5,-5,-2,1,9,10,-10,-3,6,3,-6,-9,-3,-3,9,10,-4,2,-4,-5,2,-2,-2,5,6,9,-3,10,-9,10,2,-5,-4,2,10,4,-5,-8,-1,4,-3,9,1,-3,-6,-10,2,5,-2,8,6,-6,8,7,-9,7,4,-9,9,7,4,2,-3,-5,-7,9,-5,-4,10,-4,-4,2,-9,3,4,1,-9,5,-1,-9,5,2,6,5,-9,7,-10,-1,2,4,6,-4,-10,9,1,-10,7,-6,-9,-8,-2,4,-4,10,1,-9,-9,3,4,-1,-9,1,4,-6,-2,3,-7,-5,-4,-6,7,3,8,7,8,-9,2,3,-9,1,3,-5,-3,-1,3,3,3,-10,-1,-5,7,-8,-3,-7,7,-4,-3,1,9,-4,-9,6,10,3,3,2,1,8,-10,6,2,8,-1,1,10,6,-2,-3,6,-6,5,8,-10,10,3,5,-8,-3,3,2,-9,5,9,-6,6,-4,1,-5,-2,9,10,3,9,8,-9,-7,9,2,10,2,7,6,-10,7,7,7,1,7,5,-4,-8,-3,-5,-4,10,-2,2,6,-9,5,-10,3,-2,5,-8,2,-10,-2,1,-1,-1,-9,-10,-6,10,5,4,3,-8,5,-5,-3,-3,1,10,4,-4,-6,-10,3,2,7,-6,3,-7,2,-5,-1,2,4,-6,5,3,-6,2,10,7,-1,10,-9,-2,10,-7,-8,7,-1,2,6,-7,-6,-4,-2,-6,6,-7,-2,5,8,7,1,10,6,9,-5,4,3,2,9,-10,-3,-7,8,8,-3,2,8,7,-1,-4,1,2,6,-1,1,7,10,10,7,4,5,-6,-9,5,-9,8,8,6,-5,6,-10,-1,-8,-10,1,5,-3,8,-3,-2,3,2,4,-5,7,-5,4,-9,7,7,5,-1,-2,10,4,-6,4,8,8,-6,-5,-1,-5,3,-10,-9,2,-3,10,8,5,-1,-5,-8,-4,-7,-5,10,-9,-3,5,5,-1,2,2,-5,7,8,7,-3,10,10,8,-7,-6,5,-10,9,-1,-5,2,-1,-6,-10,-7,-5,-3,-6,8,-10,-2,6,-7,5,7,-2,2,9,-4,-2,-4,-2,2,9,-9,-4,4,-7,4,-1,-4,1,6,-3,-1,-3,-3,-3,3,7,-1,-7,1,-7,7,-8,-1,-6,-1,5,-7,-8,-5,5,4,-10,-3,1,-10,-8,8,-8,5,4,-7,9,-9,-4,7,-2,1,6,-10,7,9,9,-9,6,2,-9,1,5,-4,-6,-10,2,2,-7,-8,4,-10,-3,-9,3,1,2,-10,5,8,7,-2,3,-8,6,-5,-3,3,-5,5,4,2,9,7,-7,5,-4,2,1,-8,-6,-9,-1,5,3,-4,7,6,-7,7,-7,8,9,1,-10,7,3,4,-8,-9,-10,-9,8,-4,6,1,-6,-9,6,5,10,-1,9,8,-6,-8,10,5,1,-7,1,-4,-6,1,2,8,-7,-6,6,-4,9,-1,9,8,-5,1,-2,2,8,10,7,-4,8,-3,-4,-7,8,3,-3,-7,8,6,-3,-8,2,-2,5,-5,4,9,4,-2,-5,-10,-5,-9,-7,3,-3,-10,6,-4,-8,7,-9,-1,-4,7,-5,10,-6,-3,5,-4,6,3,-7,-4,-6,-6,-7,7,-9,3,-1,-6,-5,3,-6,8,2,3,-8,4,-7,-6,9,-10,-8,-4,7,8,-10,1,8,7,3,-9,6,5,-6,-2,6,7,4,-3,-1,2,-1,-5,-4,-1,2,-8,-5,-4,3,10,-7,-1,6,1,-6,9,5,8,-8,-6,1,9,-4,7,-10,-7,3,5,4,7,8,-9,9,2,-8,-8,-2,-3,1,-4,-8,-5,8,10,-7,-2,-4,9,8,-1,-10,3,5,8,9,-6,-4,-10,2,-4,1,-7,7,-8,-5,-1,-7,7,-4,7,-7,-2,3,-3,6,-7,5,9,8,-9,6,10,-8,-5,-9,8,3,-9,4,1,-3,-6,-10,2,-4,-3,-5,-4,-9,7,-9,-6,-5,-9,10,10,6,-2,2,-6,-7,7,-1,6,1,-8,10,-5,10,5,-1,3,-2,-6,9,1,1,1,-2,-2,2,-5,5,-7,-3,-6,1,4,4,-8,-3,10,-10,6,8,4,9,2,1,-2,4,-9,-9,8,6,-6,-4,3,-7,-5,8,-5,-1,4,8,4,-5,-7,-9,-6,1,-4,-10,1,5,-2,-7,1,-6,10,2,-8,-1,9,-1,5,-9,-9,5,8,-7,-4,-9,-4,1,-3,-10,-7,-5,10,-3,10,-5,5,-8,-1,-3,-1,1,1,9,-6,4,-7,2,-5,-4,1,3,-1,-6,7,-9,-4,-4,-4,-9,-10,-6,2,-6,-4,-3,2,-10,-8,-7,-8,3,-7,-8,-8,3,-8,8,-8,-6,-7,-9,4,3,-8,6,7,9,-6,8,2,3,10,-1,-6,-1,7,-3,9,-2,8,-2,-7,2,-6,9,-10,1,6,10,-8,-6,-3,7,-6,-9,-8,3,2,1,4,7,4,7,9,-1,-8,-3,7,3,8,10,-2,1,8,1,2,9,-5,6,-4,10,-4,-5,2,6,9,-8,-1,-5,1,-3,4,-8,8,3,-1,-4,-8,7,6,-2,9,5,8,-1,6,1,7,8,-5,7,-4,4,1,-3,-5,3,-6,-6,-10,3,-10,-3,8,-2,2,1,-2,1,-6,-2,3,7,-6,4,-9,-2,-3,-5,8,-6,-7,-8,1,4,-6,-10,-4,8,1,5,-9,8,2,7,-1,10,-9,6,-10,9,7,-4,-8,10,-4,-1,10,7,3,3,6,-1,-4,6,7,1,-7,-6,9,6,1,-8,-7,4,-10,5,10,2,-4,9,4,-7,9,5,9,5,9,10,10,-7,1,-8,-9,-7,9,-6,10,-3,7,8,1,4,7,-7,8,-9,7,1,10,-1,-6,1,2,-4,1,-3,-5,2,2,9,5,-10,7,-10,-1,-7,8,2,1,-9,8,-5,-10,5,8,2,3,-4,3,-9,-5,-1,4,4,-1,-6,-6,2,-9,8,10,-9,-3,-5,-8,-3,1,-7,9,-10,6,-9,-8,8,9,-3,7,-4,-4,7,3,5,5,-1,-5,5,9,-2,7,2,-8,-7,-6,5,9,-4,-3,-8,-10,3,2,-7,-3,7,10,8,-6,-3,5,4,2,-8,-6,-3,7,-2,-7,-1,-7,-2,8,5,8,-6,-7,-7,-8,-4,-1,-1,-5,9,-3,2,-1,-8,-8,-2,-2,9,1,-6,1,3,9,2,8,-5,6,-2,-4,5,-5,8,7,7,-3,7,7,8,4,9,3,-5,-1,-5,9,-7,-9,4,-2,6,-5,9,-4,7,9,2,-8,-3,3,-6,-10,-9,-9,6,3,9,6,-2,-7,8,3,-7,8,3,-10,6,-1,-8,7,4,-10,1,-2,-8,-2,-4,8,-9,1,-8,9,10,8,-4,6,8,-2,-1,2,3,6,2,-9,8,10,-3,-1,-3,-5,-5,-7,-6,-2,3,-6,1,-4,-6,3,-4,-2,-6,-2,-2,-5,5,-10,1,7,9,2,5,-2,-8,-5,-9,-7,-9,-3,-3,8,10,-10,1,7,-1,1,-3,-7,7,1,-8,-1,9,-8,2,-2,-3,5,2,-3,9,10,-6,-4,8,2,-6,-3,-9,-7,4,-5,-4,2,-4,-2,8,6,-1,-10,6,7,5,4,10,6,3,-2,4,6,8,1,-1,1,-5,-3,4,-2,-7,-4,-10,-2,2,1,-5,-3,6,-10,-1,9,3,-9,-1,6,9,-6,10,1,1,9,-10,10,8,-3,10,-7,5,1,-8,3,-7,-6,4,-9,9,10,2,-3,9,-9,9,3,5,7,1,1,-6,4,-4,6,3,-3,5,5],[-4,-4,-4,5,1,3,2,1,-10,-2,10,-8,-4,-9,-8,5,-3,-5,6,-6,-3,-10,-4,-5,-5,-1,-4,1,-1,-9,7,1,4,8,-5,8,5,3,8,4,-4,10,5,6,-2,-4,-2,10,10,-8,2,3,4,5,-3,-5,5,6,5,-5,-10,7,-4,6,4,-9,9,-4,-7,5,1,10,5,7,10,10,-10,10,3,8,-1,6,6,-5,2,-6,1,-10,-9,-10,-8,9,-5,-2,6,-8,6,8,-7,-6,2,1,-5,2,7,-5,2,4,2,8,7,-4,1,6,5,-6,-3,2,7,6,-6,10,4,5,-10,-5,-10,-10,10,-8,8,-2,10,-1,-8,2,7,-1,-6,8,-1,2,3,-2,-10,8,6,-10,-5,-5,9,8,9,-8,8,-10,-8,-8,-8,4,3,-7,5,7,-10,5,-2,-7,2,6,1,7,-2,-2,7,8,1,1,5,-6,-10,6,3,3,-9,3,6,-3,7,9,-3,-8,-4,-10,6,-6,8,8,-7,7,9,10,-2,-6,-8,4,1,6,2,-6,4,5,-6,-3,4,-1,-10,10,3,10,10,5,-8,9,-6,8,-7,-2,-6,5,3,-4,-8,4,10,-7,7,-4,-10,5,-9,8,8,8,2,-5,-1,9,-1,5,6,4,1,-10,-4,-10,10,9,-5,3,10,6,6,5,10,-1,-1,10,4,4,5,-10,-10,-4,-6,4,-4,1,6,9,5,10,6,7,-2,-7,5,-3,-8,1,3,-4,-6,8,1,5,7,10,-7,-3,-8,-7,10,9,6,-4,5,-7,2,-2,1,7,-3,1,-3,-1,5,-3,10,2,4,-5,3,10,9,8,-9,10,-1,-6,-3,5,-6,2,-2,2,-10,5,-10,1,-8,1,-6,-3,-10,-3,-7,3,-9,-9,-7,9,9,5,10,1,6,9,-3,-1,1,-7,4,-2,-3,6,-2,-1,8,2,-3,7,-5,3,9,2,-8,6,9,3,-9,-5,-3,-5,2,10,-10,-7,5,4,2,4,5,1,8,-5,4,-1,6,-9,-3,8,-8,-10,-2,7,-2,-5,-2,10,-2,-8,-5,-3,-5,3,-3,-3,3,6,-10,3,-5,-9,-7,-7,-4,-5,-4,-3,-5,8,5,-9,-5,-8,-7,8,-1,8,-6,7,10,10,-4,-2,7,-5,1,5,-8,-2,-3,-6,5,-2,-9,-10,3,-2,1,6,-3,-4,-4,2,-1,-6,5,1,-7,1,-4,-2,1,3,-7,-3,9,-9,-6,6,5,4,-5,-10,-7,-8,-3,7,-6,9,-1,-6,-10,5,5,-7,-5,-2,7,-5,-4,5,-7,5,-7,7,-7,-8,9,6,9,6,-6,6,-10,-8,-8,-4,-9,6,-5,2,7,10,-7,2,2,2,8,-1,-1,-5,-6,-3,9,-9,-4,6,-4,1,-7,-9,-3,-8,1,1,10,2,-6,1,6,-2,4,6,-6,-1,-10,-3,3,5,-1,-7,-2,-7,4,6,9,-2,5,10,5,-6,4,-9,1,1,10,-4,-7,-5,-10,-2,-10,-1,4,-8,-5,-5,6,-3,10,2,2,-6,-9,-1,-3,-2,-7,8,6,-2,10,7,-3,-6,8,5,-4,-10,-2,-5,-2,-8,2,2,-9,9,2,-9,8,-10,-3,-6,-7,-1,-7,-6,5,-10,7,5,6,7,-9,5,-2,-6,1,2,-10,7,-3,-6,6,-5,8,8,5,-2,-4,6,3,8,3,1,7,3,-10,8,5,-8,-5,-8,4,9,-8,-3,-6,-4,3,4,-3,9,6,-1,1,5,-8,10,-3,-9,1,-2,4,-6,1,-6,7,-2,-1,5,4,9,2,-5,8,6,7,6,3,-8,-6,-3,-10,-7,9,4,-9,-7,-4,-6,10,2,9,9,-4,10,-1,-2,-9,-3,-8,-4,-2,9,-5,10,6,-3,2,9,-10,5,-2,-2,3,-9,-4,9,6,-4,3,-8,-8,4,-4,-7,1,-6,8,-6,-5,3,10,5,-1,8,-5,-3,-7,4,-1,4,4,7,-9,-2,-1,-4,-8,-6,-10,-3,9,9,-4,-7,-7,-6,-2,10,9,-8,8,1,10,4,-2,-6,-2,8,9,10,-8,-4,3,-4,9,-1,3,-4,-1,-5,-5,5,6,-5,3,-9,-2,-3,-9,7,10,-5,-10,-6,-9,-6,-1,-4,-6,-10,-4,10,-3,1,10,10,-6,3,-5,-10,1,9,-7,-9,-1,2,1,1,4,6,2,4,-2,-7,-7,3,1,9,6,10,10,-5,5,3,-2,5,-6,3,7,6,6,-1,-3,4,-2,-1,8,3,3,-5,6,6,-1,1,10,-4,-9,3,7,3,4,2,-7,-7,3,-5,2,-3,2,-4,1,7,3,2,-9,-1,-9,5,10,-8,2,1,5,-10,8,-9,2,-9,-8,-6,5,10,-2,2,4,4,1,3,-1,-5,7,-10,-4,5,-1,8,10,-2,2,-6,-1,-4,8,-2,-10,-2,3,-9,10,-8,7,-6,6,1,1,-6,-8,9,-8,6,10,-7,9,-1,-10,-9,6,5,-3,-2,4,9,10,9,-8,6,-5,10,-10,3,9,8,7,-9,-8,7,1,-3,3,-9,-6,-7,-1,-5,8,-3,-9,-4,4,9,6,-5,1,10,-9,4,-7,8,-10,8,-10,4,-4,6,-2,10,-10,-9,-5,6,9,1,1,-3,-4,-8,6,4,10,5,-4,4,-2,-8,1,10,3,7,3,-4,2,9,-2,5,-2,8,7,-3,-4,-5,4,4,-9,1,10,8,5,-10,-10,-3,-7,-10,2,5,-4,-10,8,-8,-6,8,4,9,-3,10,-6,-10,3,-9,-5,10,7,-8,5,-3,-4,-6,8,10,6,7,-3,5,8,5,-10,-1,-7,1,6,3,-4,-10,8,-6,-10,-6,-9,-2,-5,-10,-4,-2,-1,-2,-7,-1,-6,5,-3,-8,-3,7,-5,1,-8,7,-2,-2,1,4,-9,-3,5,8,-9,10,-1,8,-8,6,-9,-7,-3,4,10,-4,-2,-5,4,-3,-2,-9,-10,8,3,3,8,-3,-8,5,-4,9,5,-2,-9,-6,-8,3,9,7,5,3,1,-4,-4,8,-7,5,3,3,-2,3,3,7,5,-3,5,6,4,4,-9,6,-9,8,-8,-4,-1,10,2,3,3,-10,5,-4,-5,7,-1,10,5,4,10,-2,6,4,-9,-5,-6,-1,-10,8,-3,9,-9,6,8,5,-9,-10,9,2,2,10,-2,-9,-6,-8,-3,3,-8,3,-10,-4,7,5,-10,6,4,-2,-9,-9,-9,3,7,-3,4,9,-6,4,-10,3,-6,4,7,8,-8,-2,-5,-8,-1,-7,8,-3,-10,-10,-6,10,4,-3,9,-8,10,3,-6,-8,-3,4,-3,-8,3,-3,2,4,9,-6,1,-7,-3,6,3,-8,1,8,10,6,3,-4,-5,1,-8,-2,9,9,10,-3,1,1,-5,3,4,-9,-1,4,-1,-7,1,9,-9,-6,-4,-3,-10,7,3,1,1,8,2,7,-6,4,4,-9,-2,3,4,2,-2,1,1,5,-1,4,-5,-7,-5,-10,6,5,4,5,6,2,-4,-5,5,9,-5,7,5,-10,-9,-1,-10,3,6,2,3,2,-8,-4,-9,9,7,-3,-2,-3,5,-5,2,-3,-6,-2,10,8,-1,3,7,-3,7,-7,10,1,-5,4,-4,8,1,-1,-4,-1,3,-4,-5,7,4,3,5,3,8,-9,-4,4,-9,-8,-4,-7,-4,-9,9,-3,1,8,7,6,-9,-10,4,-2,-1,-5,1,1,-2,-8,-10,3,-6,7,-2,-1,-10,6,8,-8,-8,1,-6,9,-7,-6,-8,6,9,9,6,2,2,-3,-8,7,-5,-7,5,6,5,-8,-2,8,10,3,-7,4,-5,-10,-8,-8,7,2,5,3,2,2,-8,7,8,-3,-9,2,2,8,1,2,3,-2,-2,8,-6,9,-1,-9,-8,-1,9,-2,7,2,-6,-8,8,7,2,-7,-6,-4,5,-5,8,-2,3,-8,2,10,6,-6,5,8,9,-10,2,-3,9,-1,-7,-2,7,-1,-3,8,1,4,9,5,-7,-4,-1,7,-6,5,-3,4,-10,-2,7,2,6,-4,-8,-3,-6,-6,-6,6,-3,-7,-9,-10,-5,-4,2,10,2,3,5,-4,4,7,-5,4,-4,-8,-2,-6,3,-1,3,-3,7,4,-3,-4,-10,-9,-4,7,-3,-2,5,2,-7,-3,4,5,3,5,8,2,-10,7,5,-3,10,5,-3,-5,2,1,5,9,-3,-3,4,3,10,10,-3,-4,-8,10,10,2,-5,-9,-8,10,5,-6,-3,-4,8,-6,7,-6,3,-8,3,-4,-4,-1,-1,6,4,-4,-1,-8,4,-10,8,-8,3,-1,-8,7,7,-4,6,-4,-4,-9,-9,-3,-3,-6,8,1,1,-8,-8,-1,-2,3,9,-2,8,-7,8,-1,-3,-3,2,2,7,-4,-6,10,-4,-8,2,5,1,6,1,2,6,-3,-9,-4,7,-1,-5,-3,-6,3,2,8,9,5,-1,2,-2,6,1,8,-9,1,2,4,-4,5,-4,-1,7,1,-3,-3,-9,6,10,8,-5,-3,2,4,-4,-3,-2,-1,10,-6,8,-6,10,-7,-8,-8,-3,-1,-8,-2,-5,-3,1,5,8,2,3,-3,4,1,-4,-6,-2,3,-3,4,-1,-5,3,-4,3,6,-6,9,6,3,-1,-8,-7,2,-7,-5,5,3,-2,-8,-4,1,1,1,9,9,2,-2,-10,6,3,6,-3,-6,7,-2,-8,3,2,-7,6,1,-5,7,-7,3,-8,8,9,8,9,6,-2,7,3,-5,1,-8,-6,2,-10,3,-3,1,8,9,-9,7,4,-7,7,5,-5,6,8,7,2,-7,-5,-8,-8,-2,-4,10,10,-4,-7,-7,-1,-8,-1,-8,6,-10,4,6,7,-8,-7,-6,6,-6,-10,-9,-5,2,1,9,-5,-10,6,-10,-6,-3,-9,-1,-10,9,-1,-1,-3,-2,-10,4,9,8,-10,8,9,10,-10,-2,-10,-10,-9,-9,1,7,-4,1,-4,9,-5,1,-8,-3,-2,1,-8,-4,10,-9,5,-4,-8,-2,-2,-10,10,3,4,8,-3,-7,8,9,-5,8,-6,-8,-5,-9,-3,-6,-2,-3,-6,-2,8,1,-1,3,-9,-5,-5,-1,5,-9,-3,-3,3,9,7,-8,1,10,-10,-7,7,-5,-2,5,10,-8,-9,6,-9,1,8,-10,9,-2,-6,-7,8,-5,10,-10,6,-3,-10,-6,8,4,7,7,-5,-2,-6,4,-2,-6,1,-5,5,1,-9,-6,-4,-2,-6,6,10,2,8,-1,7,5,5,-6,-7,6,5,2,-4,-2,-7,-4,8,-2,4,-9,3,10,3,6,4,-6,6,10,-4,2,3,-8,-2,9,6,-8,1,4,-3,-4,4,7,9,4,10,-7,-2,3,-5,-1,-8,7,6,-3,-2,7,6,8]], dtype = "int64")#candidate|7120|(12, 2080)|const|int64
call_7118 = relay.TupleGetItem(func_4328_call(relay.reshape(const_7119.astype('int64'), [120,]), relay.reshape(const_7120.astype('int64'), [16, 1560]), ), 4)
call_7121 = relay.TupleGetItem(func_4332_call(relay.reshape(const_7119.astype('int64'), [120,]), relay.reshape(const_7120.astype('int64'), [16, 1560]), ), 4)
func_3581_call = mod.get_global_var('func_3581')
func_3582_call = mutated_mod.get_global_var('func_3582')
call_7126 = relay.TupleGetItem(func_3581_call(), 0)
call_7127 = relay.TupleGetItem(func_3582_call(), 0)
uop_7135 = relay.sqrt(const_7120.astype('float32')) # shape=(12, 2080)
uop_7141 = relay.erf(uop_7135.astype('float64')) # shape=(12, 2080)
uop_7148 = relay.sin(uop_7141.astype('float32')) # shape=(12, 2080)
output = relay.Tuple([call_7096,var_7097,call_7104,bop_7109,call_7118,const_7119,call_7126,uop_7148,])
output2 = relay.Tuple([call_7098,var_7097,call_7105,bop_7112,call_7121,const_7119,call_7127,uop_7148,])
func_7157 = relay.Function([var_7097,var_7108,], output)
mod['func_7157'] = func_7157
mod = relay.transform.InferType()(mod)
mutated_mod['func_7157'] = func_7157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7157_call = mutated_mod.get_global_var('func_7157')
var_7159 = relay.var("var_7159", dtype = "float64", shape = (75,))#candidate|7159|(75,)|var|float64
var_7160 = relay.var("var_7160", dtype = "float64", shape = (6, 13, 12))#candidate|7160|(6, 13, 12)|var|float64
call_7158 = func_7157_call(var_7159,var_7160,)
output = call_7158
func_7161 = relay.Function([var_7159,var_7160,], output)
mutated_mod['func_7161'] = func_7161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4420_call = mod.get_global_var('func_4420')
func_4422_call = mutated_mod.get_global_var('func_4422')
call_7180 = relay.TupleGetItem(func_4420_call(), 2)
call_7181 = relay.TupleGetItem(func_4422_call(), 2)
func_3829_call = mod.get_global_var('func_3829')
func_3833_call = mutated_mod.get_global_var('func_3833')
var_7189 = relay.var("var_7189", dtype = "float32", shape = (99,))#candidate|7189|(99,)|var|float32
call_7188 = relay.TupleGetItem(func_3829_call(relay.reshape(var_7189.astype('float32'), [9, 11, 1]), relay.reshape(var_7189.astype('float32'), [9, 11, 1]), ), 0)
call_7190 = relay.TupleGetItem(func_3833_call(relay.reshape(var_7189.astype('float32'), [9, 11, 1]), relay.reshape(var_7189.astype('float32'), [9, 11, 1]), ), 0)
const_7192 = relay.const([[[-9.798083,-4.906185,6.063687,-4.079666,0.673258,2.362565,-1.659530,9.936780,4.954455,-7.373946,-3.450440],[0.217664,4.650714,-8.103383,-8.086183,-4.260082,-7.022364,-2.133031,0.768489,1.563336,2.272732,-9.975706],[-7.624283,8.048548,2.736966,5.873921,0.308656,8.216978,-3.229773,9.936144,-8.601237,-8.213365,8.303887],[-1.111251,5.094652,3.304794,7.212467,-4.363028,9.495230,3.161764,1.337018,-2.875318,5.391808,0.074059],[2.510685,2.480535,7.430693,3.383603,-6.785791,7.212551,8.736889,-4.992564,1.437465,-1.529410,1.629088],[1.017575,1.872385,0.001223,0.521034,-0.414705,7.496288,-7.947202,0.392555,8.886621,-0.109682,-7.210324],[0.123965,-9.399266,8.181885,9.814146,-1.885558,-7.934291,3.837939,-8.525985,-3.948882,3.328106,-7.952393],[-4.102861,7.870184,0.881124,7.405123,-2.490168,4.777406,9.928712,1.262987,0.775566,4.957236,6.271550],[3.763410,2.913153,5.593250,6.053589,3.766339,8.193507,-5.768852,-2.861739,-0.959421,-3.603142,0.640723],[9.026539,4.776888,-7.866383,-1.031662,8.767695,1.501522,9.094223,5.001231,2.058429,9.949290,-6.433628],[9.049587,4.642553,1.898696,7.276668,2.337979,6.394023,5.594721,9.583934,-9.030678,6.983082,7.071501]],[[-9.906191,-3.622810,4.556868,-0.853551,7.590761,-9.325234,-8.317890,-0.884931,-5.464765,-6.636803,-3.433909],[2.996019,6.308282,-2.406739,-3.025798,2.123343,0.282963,-5.567857,3.212638,-8.673912,-1.636138,7.818210],[-4.152232,3.651258,4.026034,-4.437142,8.020936,6.389327,2.368815,-4.304499,-3.662453,-2.924214,8.892755],[-0.753298,-4.430028,5.190027,-5.426657,2.474506,-9.850448,1.106396,-1.209297,-6.463536,-8.397835,-6.182583],[1.455467,1.988968,-4.300320,4.260025,-2.322504,7.270786,-1.808252,0.868071,9.984175,2.880131,5.420098],[-1.708031,4.757193,-2.986621,-2.529660,7.857399,2.725377,1.393159,8.720645,1.070995,1.618311,-4.222879],[7.682653,-8.544270,-8.106821,-5.643866,-6.128413,9.952445,2.850688,3.796458,-0.128605,-2.648444,0.082116],[2.917413,-0.794972,-7.551239,3.891217,-1.907372,2.848798,-7.414675,-4.478375,7.740644,0.443778,-1.227382],[-9.059216,-5.368499,0.934720,-7.249073,2.832012,0.481379,-3.007334,5.497485,-6.801892,-4.075429,-8.183463],[7.658128,-1.893632,6.464274,1.213688,-2.942591,-2.723604,-2.954385,8.422100,-6.449657,-1.779311,0.876261],[-2.374420,8.567659,-8.747692,-3.158645,-2.680063,9.904299,-2.652741,-8.466002,6.876297,-6.235737,5.921806]],[[5.690256,2.176625,8.230184,0.881415,1.048168,9.418264,-3.276435,-5.637663,-5.824161,-2.281947,5.776319],[0.819006,-1.025282,4.938766,-6.796348,6.901999,5.198005,1.118777,-2.639899,2.468908,-9.794139,-2.636637],[-6.287795,0.888432,9.355132,9.513829,1.317527,-3.369524,6.265614,-5.415593,7.247107,8.044456,-2.775476],[8.875121,8.657247,-9.265318,-6.294863,-1.028784,-6.539536,5.364244,9.456649,-4.986124,3.294775,-6.539616],[-0.375582,-2.140034,-0.613831,6.079868,0.280271,9.208087,1.100635,-3.705215,8.393016,7.779819,2.280478],[6.112495,9.886784,3.684643,8.479661,4.853993,-6.728757,6.980989,4.023594,4.777173,4.077008,5.175811],[7.347513,-1.015946,-1.745747,-8.238314,0.424203,-7.003557,8.674154,2.184458,0.854622,2.541142,7.553405],[-3.985982,0.650652,5.684635,-6.137921,7.546129,-7.836030,-4.403990,6.178507,-9.607951,4.686722,7.432750],[-0.486305,7.965157,7.819438,9.348931,7.742185,3.616622,-9.959396,5.342580,7.759995,-8.815182,2.542496],[-3.107278,0.019810,1.667171,6.065516,2.299952,9.567646,5.629777,7.521594,5.462202,-6.230894,0.724437],[0.334237,-0.100667,-8.218725,1.702470,4.765864,-1.371051,-2.502708,2.579820,9.204924,-0.204196,6.516496]],[[3.752936,-9.607035,8.450351,-8.608114,6.590875,-0.528455,-7.602319,-2.230324,-8.323528,-0.274781,-5.087136],[-1.108219,-6.697465,9.729060,-9.154521,3.489948,5.281803,8.717179,-0.351592,-5.390677,3.431571,8.143954],[7.001754,8.234219,-9.618462,-8.154267,0.417857,-6.941858,-9.285180,-3.765942,2.384779,9.163436,8.345750],[6.422449,-8.167841,-4.868190,-5.110155,9.831842,5.474173,9.894505,-1.572748,0.999668,-1.341616,-5.036037],[4.875301,-7.310778,-2.092779,5.673068,-2.530727,1.755809,-2.473224,-0.506127,-4.703356,-8.181096,7.707454],[3.769418,-0.324687,3.500392,-0.011652,3.836127,-7.443153,-4.001482,1.452501,-2.428808,6.553361,-4.910061],[5.489932,-2.857093,0.878111,-7.290359,0.174355,-9.015847,-8.591859,-5.766411,8.289394,-4.741388,3.033334],[-2.682045,-9.347286,-7.334228,6.449436,-4.551601,-6.413643,-8.590105,7.657590,-8.172134,-1.521925,-7.140352],[-1.246490,6.325112,6.347477,7.686741,1.091947,5.035594,-9.136218,8.629240,8.903609,7.874364,-7.019235],[1.607400,-4.389981,-2.898177,-4.870539,9.136378,-0.156564,0.013204,-9.123541,-5.427402,-6.664314,1.911119],[-3.938176,-5.205775,-4.430368,4.943218,3.980161,6.715809,-1.255413,-5.460197,-9.008942,8.529167,0.744842]],[[-4.819427,4.381341,4.985196,8.443281,-3.977583,3.869484,6.790318,-4.737890,-7.870002,8.792332,6.563593],[-3.130308,-9.920415,8.086900,2.912966,-5.759616,-8.502586,-4.515337,-1.479589,9.644167,5.536846,3.417846],[-6.720500,9.783014,-1.648112,-1.467428,-1.117949,2.526282,-4.662082,-5.160422,7.093426,1.404752,-4.228437],[0.119226,5.374851,-8.529861,3.144879,0.763364,3.251337,6.379619,6.838156,-5.235577,-6.855034,5.847469],[-7.005812,-5.059031,-9.704935,-1.488864,1.319108,4.667939,-5.869855,-2.977380,-5.482727,1.306955,-2.187947],[1.156380,6.162891,-6.084050,2.277823,-9.381090,3.979237,-0.330101,-8.740910,0.928300,-5.010611,8.650669],[-4.687415,1.714371,5.796703,-5.999957,5.370637,-5.997132,3.193473,-8.216847,-9.659854,5.313913,7.437521],[6.345942,-4.447580,2.491285,-2.304069,2.355305,-4.228639,2.624501,4.868114,-5.846547,6.018407,3.619818],[0.139087,0.827973,-8.996996,3.376148,-9.203664,-7.720726,8.881360,-5.391632,-7.356144,-2.195798,-4.127055],[-5.796520,-8.886508,-7.305080,1.120566,-4.919044,4.062814,-3.239482,-4.091264,5.633040,6.897819,1.434746],[3.321891,-1.635388,4.962933,5.968931,-5.289252,-2.009444,-8.841844,-6.926117,-8.723557,-4.477623,-1.901641]],[[-3.311048,-7.500728,-9.642387,6.146801,6.331205,2.367581,-1.930067,-4.734408,-7.528248,1.248730,2.294622],[4.563255,-6.251640,6.212032,8.239068,3.118387,-3.330204,7.264675,5.878246,9.842411,6.978432,-8.945704],[6.305514,9.103484,4.074892,-0.742080,-3.977953,-8.279425,-8.031987,6.973132,-9.479796,1.656513,7.754628],[4.072960,8.641583,4.939402,6.633224,-6.644503,-4.441709,-8.397600,-1.112805,6.858588,-1.734302,4.813256],[8.083752,-4.169832,-4.357984,-8.069249,-6.370092,-4.314870,-0.062865,-5.604890,-1.434174,2.488418,2.409546],[-9.647023,-9.746253,-4.296378,-4.321284,9.047591,0.854851,1.545816,3.056460,9.551590,5.862819,8.646257],[0.853287,1.225003,-0.890754,-5.651435,-2.108197,-2.103173,-5.786423,8.923415,-0.388326,-0.810812,-1.149956],[2.256134,-1.329525,4.480883,9.705973,9.608409,-0.248308,-1.407347,4.016973,-8.142914,5.674045,8.198976],[-9.713845,-1.129452,3.829365,-8.016183,-9.787655,-1.989007,-0.173503,-6.588719,-0.925670,-6.612742,-2.460214],[-8.868405,1.201831,1.281264,5.267414,4.677021,3.438151,-8.426941,-7.475962,-9.471656,1.622545,9.420396],[-1.387198,0.032447,-3.251089,-8.458148,-5.374336,-6.559411,1.296060,-3.982291,-9.261627,-5.117825,-9.196586]],[[1.998150,6.574564,0.440081,-0.156827,-9.106482,6.497168,7.654557,3.218348,-4.873433,-6.367042,-6.549623],[4.542814,-2.763494,-1.039674,7.243002,-6.441891,0.788924,5.557528,-5.993238,-2.873502,-9.880476,-4.294144],[5.558632,1.829133,5.656047,-0.758071,-0.146714,-2.865451,-4.880382,2.706995,4.456600,-5.739956,-2.481322],[-2.278680,0.789787,9.337282,-9.869805,5.758428,-0.411459,9.436768,7.447346,6.251906,2.095069,-5.424740],[-1.775059,-7.690539,3.019491,-0.539423,-8.478147,-6.533523,1.964989,3.836319,2.785910,7.466008,-2.981352],[3.129495,5.068398,5.715542,0.540171,-1.863217,6.707171,4.863727,8.590107,-2.880488,-7.881017,1.773222],[3.359455,7.990112,0.353548,-0.447006,-6.547067,0.109225,-1.022537,-4.631890,8.754008,0.514511,0.881662],[6.295665,-9.897136,-1.107494,1.415404,2.590722,8.434650,3.537296,9.278826,-0.828644,-8.927277,3.690184],[-4.079013,-2.501622,-6.837207,-8.813629,-8.395649,-0.070051,-9.100309,-1.252898,-2.894014,-6.731576,-8.365162],[4.102969,7.592575,9.244769,5.318940,-7.246990,5.504952,7.762711,-4.501784,9.601601,-4.641896,2.267372],[1.138217,-9.549123,5.559115,8.488057,-2.592121,-7.441819,-3.465610,2.025874,-7.083396,2.343073,-8.069957]],[[-0.349471,-2.086265,-6.481817,8.763254,1.248113,1.438779,3.313733,-5.232498,-5.059511,1.118374,-6.899476],[8.839562,9.424234,3.488900,0.236737,-3.806189,-3.905346,7.531742,5.108493,6.769378,9.785041,-1.475420],[1.828666,0.405353,2.007268,-5.963910,-4.812374,-4.257445,-9.436917,-4.063817,1.937757,5.181067,-8.165138],[-1.264479,8.520606,-2.104575,-6.344536,4.326982,-1.328294,-6.814973,3.061091,7.887168,-4.741970,-8.735846],[-9.675705,-8.564260,4.457674,4.961775,-2.296783,3.912734,2.060801,3.017129,-0.632796,-8.415279,9.993730],[-6.203798,7.741285,4.433496,4.759314,-3.615965,-8.832410,-1.230132,-7.020520,3.239212,4.452069,3.153506],[0.406226,5.993064,9.314361,-8.786703,-5.383987,-9.632648,-9.806185,2.461244,7.898749,7.591587,-2.674879],[8.617200,-8.730952,6.778430,6.059717,-4.612901,9.851933,-6.275526,5.680213,-5.432489,7.088251,-5.811241],[-5.881102,-9.036555,5.654306,7.102708,9.198029,6.825086,-5.127051,5.099660,2.951517,-5.597088,6.033698],[1.119675,3.861284,-6.239234,-9.909125,-5.747605,-1.391073,-6.631261,1.157935,5.934789,-4.066349,-8.305422],[-1.935258,-0.472907,4.805413,-2.233999,1.668803,-5.168227,5.291638,-4.554108,3.449568,-6.152013,2.561170]],[[1.026499,8.747913,9.710831,3.765017,-3.725423,6.640862,1.010384,0.857406,-6.526759,-4.359567,4.537236],[8.486911,9.229621,-3.459207,8.483954,5.266773,-0.191855,1.204067,-8.163128,3.618089,-3.451273,-1.777256],[-3.011120,-1.273811,-8.117362,8.123664,-6.452243,0.927592,3.786269,-9.209305,5.965622,8.495524,-8.094270],[8.172443,-2.422708,4.762884,-5.938602,-8.601550,9.657749,7.172316,3.279116,5.713897,1.393949,-5.920549],[-6.678964,8.195463,-8.173505,-8.191908,-6.511955,4.127394,-0.113918,9.419858,-9.206150,4.273046,-1.373502],[-1.624887,0.261220,-2.739241,-7.571026,1.716250,7.696800,8.775342,-2.006079,-6.527983,1.105203,2.230746],[-4.106336,-6.840367,-4.159949,-5.305578,-4.900419,2.939041,-0.254018,4.253284,-3.979118,9.259823,7.009432],[1.809765,-9.357066,-0.893238,3.255769,-9.454634,0.064057,8.033571,-7.849307,-5.543239,-9.932108,8.370364],[4.147041,0.365227,3.711005,0.621686,2.295254,-4.723507,-7.501633,-1.011051,-7.138339,8.445347,8.161418],[-6.095436,-2.939980,2.986558,-7.355305,6.333166,0.606113,4.819606,-0.712018,7.363809,2.925482,5.144991],[0.142641,3.989150,-4.406992,4.800828,2.251818,-3.751406,-4.785414,-9.001318,-5.148016,6.986171,5.862699]]], dtype = "float32")#candidate|7192|(9, 11, 11)|const|float32
bop_7193 = relay.greater_equal(call_7188.astype('bool'), const_7192.astype('bool')) # shape=(9, 11, 11)
bop_7196 = relay.greater_equal(call_7190.astype('bool'), const_7192.astype('bool')) # shape=(9, 11, 11)
var_7217 = relay.var("var_7217", dtype = "float32", shape = (99,))#candidate|7217|(99,)|var|float32
bop_7218 = relay.mod(var_7189.astype('float32'), relay.reshape(var_7217.astype('float32'), relay.shape_of(var_7189))) # shape=(99,)
func_1487_call = mod.get_global_var('func_1487')
func_1489_call = mutated_mod.get_global_var('func_1489')
call_7225 = relay.TupleGetItem(func_1487_call(), 0)
call_7226 = relay.TupleGetItem(func_1489_call(), 0)
func_492_call = mod.get_global_var('func_492')
func_494_call = mutated_mod.get_global_var('func_494')
call_7228 = func_492_call()
call_7229 = func_492_call()
func_1310_call = mod.get_global_var('func_1310')
func_1311_call = mutated_mod.get_global_var('func_1311')
call_7230 = func_1310_call()
call_7231 = func_1310_call()
uop_7243 = relay.tan(bop_7193.astype('float32')) # shape=(9, 11, 11)
uop_7245 = relay.tan(bop_7196.astype('float32')) # shape=(9, 11, 11)
func_6908_call = mod.get_global_var('func_6908')
func_6909_call = mutated_mod.get_global_var('func_6909')
call_7247 = relay.TupleGetItem(func_6908_call(), 2)
call_7248 = relay.TupleGetItem(func_6909_call(), 2)
func_893_call = mod.get_global_var('func_893')
func_895_call = mutated_mod.get_global_var('func_895')
call_7249 = relay.TupleGetItem(func_893_call(), 5)
call_7250 = relay.TupleGetItem(func_895_call(), 5)
func_4947_call = mod.get_global_var('func_4947')
func_4948_call = mutated_mod.get_global_var('func_4948')
call_7272 = relay.TupleGetItem(func_4947_call(), 1)
call_7273 = relay.TupleGetItem(func_4948_call(), 1)
func_492_call = mod.get_global_var('func_492')
func_494_call = mutated_mod.get_global_var('func_494')
call_7280 = func_492_call()
call_7281 = func_492_call()
output = relay.Tuple([call_7180,bop_7218,call_7225,call_7228,call_7230,uop_7243,call_7247,call_7249,call_7272,call_7280,])
output2 = relay.Tuple([call_7181,bop_7218,call_7226,call_7229,call_7231,uop_7245,call_7248,call_7250,call_7273,call_7281,])
func_7293 = relay.Function([var_7189,var_7217,], output)
mod['func_7293'] = func_7293
mod = relay.transform.InferType()(mod)
var_7294 = relay.var("var_7294", dtype = "float32", shape = (99,))#candidate|7294|(99,)|var|float32
var_7295 = relay.var("var_7295", dtype = "float32", shape = (99,))#candidate|7295|(99,)|var|float32
output = func_7293(var_7294,var_7295,)
func_7296 = relay.Function([var_7294,var_7295,], output)
mutated_mod['func_7296'] = func_7296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7378 = relay.var("var_7378", dtype = "float64", shape = (5, 6, 13))#candidate|7378|(5, 6, 13)|var|float64
uop_7379 = relay.log2(var_7378.astype('float64')) # shape=(5, 6, 13)
bop_7393 = relay.multiply(uop_7379.astype('int16'), relay.reshape(var_7378.astype('int16'), relay.shape_of(uop_7379))) # shape=(5, 6, 13)
output = relay.Tuple([bop_7393,])
output2 = relay.Tuple([bop_7393,])
func_7401 = relay.Function([var_7378,], output)
mod['func_7401'] = func_7401
mod = relay.transform.InferType()(mod)
var_7402 = relay.var("var_7402", dtype = "float64", shape = (5, 6, 13))#candidate|7402|(5, 6, 13)|var|float64
output = func_7401(var_7402)
func_7403 = relay.Function([var_7402], output)
mutated_mod['func_7403'] = func_7403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1310_call = mod.get_global_var('func_1310')
func_1311_call = mutated_mod.get_global_var('func_1311')
call_7407 = func_1310_call()
call_7408 = func_1310_call()
func_1496_call = mod.get_global_var('func_1496')
func_1497_call = mutated_mod.get_global_var('func_1497')
call_7420 = relay.TupleGetItem(func_1496_call(), 0)
call_7421 = relay.TupleGetItem(func_1497_call(), 0)
func_1270_call = mod.get_global_var('func_1270')
func_1274_call = mutated_mod.get_global_var('func_1274')
const_7434 = relay.const([9,7,6,2,8,-2,-1,3,6,3,6,1,6,-8,-4,-5,4,3,-3,1,10,-2,-6,4,2,-3,1,-8,7,3,10,4,-1,-6,-3,6,10,4,-2,7,-6,-4,6,5,9,-5,-7,5,-8,-10,7,4,-3,-3,-7,-1,-3,-1,9,2,-3,9,8,5,4,-8,-3,-8,1,3,2,-2,-9,5,8], dtype = "uint32")#candidate|7434|(75,)|const|uint32
const_7435 = relay.const([6,10,-9,-9,2,4,10,-2,-1,-10,9,9,-6,7,2,6,10,-2,-10,-2,8,8,7,-8,4,-3,-1,-2,-7,-10,5,-6,1,5,-1,-4,2,7,-9,-8,-5,10,3,3,-3,10,-9,4,-6,-1,-6,6,-4,-7,-1,10,4,-4,-1,9,-9,5,-9,8,-8,2,4,3,-2,1,-3,-9,-8,-8,-9,-5,7,-8,9,-2,7,-4,-2,6,-5,-7,-7,-9,-7,-8,-3,-7,-2,-9,-1,1,-4,8,10,-10,-3,7,-3,-9,-3,-9,7,-1,8,-4,-2,8,8,2,2,-6,10,6,-2,-4,-1,5,8,9,-5,-7,-7,-3,-3,-4,-10,9,-4,3,-2,-10,1,-1,1,-5,2,-5,6,-4,4,3,8,2,-9,-5,4,-3,1,4,-3,-10,10,6,1,5,7,9,-2,-7,-8,1,10,-4,8,-4,-6,8,8,-4,-3,6,8,7,-8,10,-9,-5,5,-1,-9,3,-9,-3,-6,-8,5,1,1,1,6,-3,-2,-3,2,-1,-1,8,7,5,-6,2,-8,5,5,-7,9,4,-10,10,5,3,-6,-3,2,-6,-2,-2,-1,8,-4,7,-6,-7,-9,8,-10,9,-4,9,-10,-4,1,-1,-4,-10,-5,-6,-9,-9,1,4,10,7,6,10,9,8,-2,6,-9,6,5,-7,4,5,-3,7,2,7,-8,-2,1,-10,-9,8,-3,2,-6,-4,-4,6,-6,1,4,4,7,10,-5,10,5,2,4,-9,4,9,-10,5,7,-4,8,-3,-5,2,1,4,1,7,-1,-4,-8,2,9,4,7,-4,-5,7,-10,-9,-10,9,10,-5,-10,5,3,8,9,5,-9,9,6,5,5,-6,-7,-6,-9,-8,-1,1,-4,-3,10,-9,9,-4,-5,8,10,-5,-9,6,4,-8,-10,-9,7,-7,2,-5,-3,-5,-5,8,-8,-4,8,4,-5,8,-3,-10,-1,-7,-3,5,1,-6,-4,4,1,-9,-8,-8,-7,-8,3,3,7,10,-4,7,4,2,10,-10,-3,-10,1,-6,6,1,6,-5,7,2,-10,-7,-4,4,6,-7,-4,2,4,-6,-5,-10,-4,-1,-2,-2,-2,9,-9,-10,-1,-4,3,-2,3,7,-8,7,6,3,-1,-10,-4,-8,6,-10,6,-1,9,8,-5,9,4,5,6,-7,1,-9,-8,1,-7,-10,4,-2,9,4,4,5,-1,-9,-8,-5,4,5,-3,8,7,2,1,2,-3,4,-10,-7,-1,8,-3,-8,7,10,2,-9,-4,-10,-5,7,-9,-7,-9,-9,-3,10,10,-2,1,-8,-10,2,9,10,-4,-2,-7,-3,-5,7,-1,-3,-4,9,-7,-10,5,-10,6,8,7,5,1,10,-2,4,-5,4,2,-7,-2,5,-3,-2,4,-10,-10,-5,-5,-8,4,-10,-9,-8,-10,7,4,-9,-6,5,-1,-3,2,-5,-4,5,3,7,-10,2,-2,9,-2,4,-1,9,7,-4,-1,7,-10,-3,8,6,7,-7,6,6,6,5,2,-9,8,-8,-4,4,9,-8,7,4,-1,-2,7,-6,-1,-10,7,-4,5,-3,8,3,-3,4,-7,4,7,7,-6,-7,-4,-2,8,-3,7,-10,-3,2,-3,8,5,8,-9,-8,-7,-2,3,1,9,2,2,-10,-4,3,-9,7,-4,-7,-9,-8,1,-9,-5,6,4,9,-2,1,3,5,-6,7,-9,-10,9,-7,7,5,-6,-5,10,6,-5,2,-2,2,-1,-7,5,-1,5,-7,5,4,4,2,5], dtype = "uint32")#candidate|7435|(675,)|const|uint32
call_7433 = func_1270_call(relay.reshape(const_7434.astype('uint32'), [15, 5, 1]), relay.reshape(const_7435.astype('uint32'), [15, 5, 9]), )
call_7436 = func_1270_call(relay.reshape(const_7434.astype('uint32'), [15, 5, 1]), relay.reshape(const_7435.astype('uint32'), [15, 5, 9]), )
uop_7449 = relay.sinh(const_7435.astype('float64')) # shape=(675,)
output = relay.Tuple([call_7407,call_7420,call_7433,const_7434,uop_7449,])
output2 = relay.Tuple([call_7408,call_7421,call_7436,const_7434,uop_7449,])
func_7475 = relay.Function([], output)
mod['func_7475'] = func_7475
mod = relay.transform.InferType()(mod)
mutated_mod['func_7475'] = func_7475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7475_call = mutated_mod.get_global_var('func_7475')
call_7476 = func_7475_call()
output = call_7476
func_7477 = relay.Function([], output)
mutated_mod['func_7477'] = func_7477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6900_call = mod.get_global_var('func_6900')
func_6901_call = mutated_mod.get_global_var('func_6901')
call_7523 = relay.TupleGetItem(func_6900_call(), 5)
call_7524 = relay.TupleGetItem(func_6901_call(), 5)
func_3636_call = mod.get_global_var('func_3636')
func_3637_call = mutated_mod.get_global_var('func_3637')
call_7535 = relay.TupleGetItem(func_3636_call(), 0)
call_7536 = relay.TupleGetItem(func_3637_call(), 0)
output = relay.Tuple([call_7523,call_7535,])
output2 = relay.Tuple([call_7524,call_7536,])
func_7539 = relay.Function([], output)
mod['func_7539'] = func_7539
mod = relay.transform.InferType()(mod)
output = func_7539()
func_7540 = relay.Function([], output)
mutated_mod['func_7540'] = func_7540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1236_call = mod.get_global_var('func_1236')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_7550 = func_1236_call()
call_7551 = func_1236_call()
output = call_7550
output2 = call_7551
func_7585 = relay.Function([], output)
mod['func_7585'] = func_7585
mod = relay.transform.InferType()(mod)
output = func_7585()
func_7586 = relay.Function([], output)
mutated_mod['func_7586'] = func_7586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4947_call = mod.get_global_var('func_4947')
func_4948_call = mutated_mod.get_global_var('func_4948')
call_7634 = relay.TupleGetItem(func_4947_call(), 1)
call_7635 = relay.TupleGetItem(func_4948_call(), 1)
output = call_7634
output2 = call_7635
func_7641 = relay.Function([], output)
mod['func_7641'] = func_7641
mod = relay.transform.InferType()(mod)
mutated_mod['func_7641'] = func_7641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7641_call = mutated_mod.get_global_var('func_7641')
call_7642 = func_7641_call()
output = call_7642
func_7643 = relay.Function([], output)
mutated_mod['func_7643'] = func_7643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2103_call = mod.get_global_var('func_2103')
func_2104_call = mutated_mod.get_global_var('func_2104')
call_7644 = relay.TupleGetItem(func_2103_call(), 0)
call_7645 = relay.TupleGetItem(func_2104_call(), 0)
output = relay.Tuple([call_7644,])
output2 = relay.Tuple([call_7645,])
func_7660 = relay.Function([], output)
mod['func_7660'] = func_7660
mod = relay.transform.InferType()(mod)
mutated_mod['func_7660'] = func_7660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7660_call = mutated_mod.get_global_var('func_7660')
call_7661 = func_7660_call()
output = call_7661
func_7662 = relay.Function([], output)
mutated_mod['func_7662'] = func_7662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4947_call = mod.get_global_var('func_4947')
func_4948_call = mutated_mod.get_global_var('func_4948')
call_7703 = relay.TupleGetItem(func_4947_call(), 1)
call_7704 = relay.TupleGetItem(func_4948_call(), 1)
func_3067_call = mod.get_global_var('func_3067')
func_3069_call = mutated_mod.get_global_var('func_3069')
call_7706 = relay.TupleGetItem(func_3067_call(), 1)
call_7707 = relay.TupleGetItem(func_3069_call(), 1)
uop_7708 = relay.log2(call_7703.astype('float32')) # shape=(6, 13, 12)
uop_7710 = relay.log2(call_7704.astype('float32')) # shape=(6, 13, 12)
uop_7722 = relay.sinh(uop_7708.astype('float64')) # shape=(6, 13, 12)
uop_7724 = relay.sinh(uop_7710.astype('float64')) # shape=(6, 13, 12)
bop_7728 = relay.less(uop_7708.astype('bool'), relay.reshape(uop_7722.astype('bool'), relay.shape_of(uop_7708))) # shape=(6, 13, 12)
bop_7731 = relay.less(uop_7710.astype('bool'), relay.reshape(uop_7724.astype('bool'), relay.shape_of(uop_7710))) # shape=(6, 13, 12)
output = relay.Tuple([call_7706,bop_7728,])
output2 = relay.Tuple([call_7707,bop_7731,])
func_7748 = relay.Function([], output)
mod['func_7748'] = func_7748
mod = relay.transform.InferType()(mod)
output = func_7748()
func_7749 = relay.Function([], output)
mutated_mod['func_7749'] = func_7749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_635_call = mod.get_global_var('func_635')
func_636_call = mutated_mod.get_global_var('func_636')
call_7752 = relay.TupleGetItem(func_635_call(), 0)
call_7753 = relay.TupleGetItem(func_636_call(), 0)
output = call_7752
output2 = call_7753
func_7755 = relay.Function([], output)
mod['func_7755'] = func_7755
mod = relay.transform.InferType()(mod)
mutated_mod['func_7755'] = func_7755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7755_call = mutated_mod.get_global_var('func_7755')
call_7756 = func_7755_call()
output = call_7756
func_7757 = relay.Function([], output)
mutated_mod['func_7757'] = func_7757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7789 = relay.var("var_7789", dtype = "uint32", shape = (3, 7, 5))#candidate|7789|(3, 7, 5)|var|uint32
const_7790 = relay.const([[[1,4,-1,-8,-10],[2,-5,-2,-8,-10],[9,-7,-10,-10,-8],[-7,-1,6,5,-4],[-4,2,-3,-4,1],[2,-7,-3,-4,8],[-6,-1,-9,8,9]],[[-10,-8,-4,7,4],[1,-9,4,7,-7],[-2,-1,9,-7,3],[8,-1,-8,-9,-5],[4,-8,-6,7,2],[10,8,-6,1,-5],[-3,2,9,-1,4]],[[1,3,2,-4,3],[-4,2,4,10,-3],[-4,10,-10,-5,-9],[-8,8,10,1,9],[-1,-6,-5,-1,8],[2,10,-7,10,3],[10,10,5,9,5]]], dtype = "uint32")#candidate|7790|(3, 7, 5)|const|uint32
bop_7791 = relay.greater(var_7789.astype('bool'), relay.reshape(const_7790.astype('bool'), relay.shape_of(var_7789))) # shape=(3, 7, 5)
output = relay.Tuple([bop_7791,])
output2 = relay.Tuple([bop_7791,])
func_7796 = relay.Function([var_7789,], output)
mod['func_7796'] = func_7796
mod = relay.transform.InferType()(mod)
var_7797 = relay.var("var_7797", dtype = "uint32", shape = (3, 7, 5))#candidate|7797|(3, 7, 5)|var|uint32
output = func_7796(var_7797)
func_7798 = relay.Function([var_7797], output)
mutated_mod['func_7798'] = func_7798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4629_call = mod.get_global_var('func_4629')
func_4630_call = mutated_mod.get_global_var('func_4630')
call_7872 = relay.TupleGetItem(func_4629_call(), 0)
call_7873 = relay.TupleGetItem(func_4630_call(), 0)
func_6698_call = mod.get_global_var('func_6698')
func_6700_call = mutated_mod.get_global_var('func_6700')
call_7874 = relay.TupleGetItem(func_6698_call(), 3)
call_7875 = relay.TupleGetItem(func_6700_call(), 3)
output = relay.Tuple([call_7872,call_7874,])
output2 = relay.Tuple([call_7873,call_7875,])
func_7878 = relay.Function([], output)
mod['func_7878'] = func_7878
mod = relay.transform.InferType()(mod)
output = func_7878()
func_7879 = relay.Function([], output)
mutated_mod['func_7879'] = func_7879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2755_call = mod.get_global_var('func_2755')
func_2756_call = mutated_mod.get_global_var('func_2756')
call_7941 = relay.TupleGetItem(func_2755_call(), 0)
call_7942 = relay.TupleGetItem(func_2756_call(), 0)
func_1969_call = mod.get_global_var('func_1969')
func_1972_call = mutated_mod.get_global_var('func_1972')
var_7947 = relay.var("var_7947", dtype = "float64", shape = (936,))#candidate|7947|(936,)|var|float64
call_7946 = relay.TupleGetItem(func_1969_call(relay.reshape(var_7947.astype('float64'), [2, 468])), 2)
call_7948 = relay.TupleGetItem(func_1972_call(relay.reshape(var_7947.astype('float64'), [2, 468])), 2)
uop_7971 = relay.atan(call_7946.astype('float64')) # shape=(2, 468)
uop_7973 = relay.atan(call_7948.astype('float64')) # shape=(2, 468)
bop_7978 = relay.equal(uop_7971.astype('bool'), relay.reshape(var_7947.astype('bool'), relay.shape_of(uop_7971))) # shape=(2, 468)
bop_7981 = relay.equal(uop_7973.astype('bool'), relay.reshape(var_7947.astype('bool'), relay.shape_of(uop_7973))) # shape=(2, 468)
uop_7989 = relay.cosh(uop_7971.astype('float64')) # shape=(2, 468)
uop_7991 = relay.cosh(uop_7973.astype('float64')) # shape=(2, 468)
output = relay.Tuple([call_7941,bop_7978,uop_7989,])
output2 = relay.Tuple([call_7942,bop_7981,uop_7991,])
F = relay.Function([var_7947,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7947,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_6384() -> (Tensor[(2028), float64],) {
  %0 = @func_4325() /* ty=(Tensor[(2028), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_7408() -> Tensor[(2016), float64] {
  %2 = @func_3870() /* ty=(Tensor[(2016), float64],) */;
  %2.0
}

def @func_6032(%var_5977: Tensor[(11, 9, 8), int16], %var_5978: Tensor[(11, 9, 8), int16]) -> (Tensor[(11, 9, 8), bool], Tensor[(11, 9, 8), float64]) {
  %3 = cast(%var_5978, dtype="bool") /* ty=Tensor[(11, 9, 8), bool] */;
  %4 = shape_of(%var_5977, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%var_5977, dtype="bool") /* ty=Tensor[(11, 9, 8), bool] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %7 = cast(%var_5977, dtype="float64") /* ty=Tensor[(11, 9, 8), float64] */;
  %8 = equal(%5, %6) /* ty=Tensor[(11, 9, 8), bool] */;
  %9 = log2(%7) /* ty=Tensor[(11, 9, 8), float64] */;
  (%8, %9)
}

def @func_12242(%var_12219: Tensor[(1), int8]) -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(1), int8], Tensor[(2, 11, 2), float32]) {
  %10 = @func_5661() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %11 = cast(%var_12219, dtype="int8") /* ty=Tensor[(1), int8] */;
  %12 = reshape(%11, newshape=[1]) /* ty=Tensor[(1), int8] */;
  %13 = @func_7886(%12) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(360, 2028), float64]) */;
  %14 = %10.0;
  %15 = %13.6;
  %16 = @func_3521() /* ty=Tensor[(2, 11, 2), float32] */;
  (%14, %15, %var_12219, %16)
}

def @func_3456() -> Tensor[(2, 11, 2), float32] {
  %17 = @func_2612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %17.0
}

def @func_18488() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) {
  %18 = @func_10641() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %19 = @func_4337() /* ty=(Tensor[(2028), float64],) */;
  %20 = @func_5105() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %21 = %18.0;
  %22 = %19.0;
  %23 = %20.1;
  (%21, %22, %23)
}

def @func_1217() -> Tensor[(2028), float64] {
  %24 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %24.0
}

def @func_4885() -> (Tensor[(2, 11, 2), float32],) {
  %25 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %26 = %25.1;
  (%26,)
}

def @func_1769(%var_1767: Tensor[(1014, 2), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(1014, 2), float64]) {
  %27 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %28 = @func_842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %29 = cast(%var_1767, dtype="float64") /* ty=Tensor[(1014, 2), float64] */;
  %30 = reshape(%29, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %31 = @func_949(%30) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */;
  %32 = %27.2;
  %33 = %28.1;
  %34 = %31.2;
  (%32, %33, %34, %var_1767)
}

def @func_6732() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %35 = @func_4217() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %36 = @func_1625() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %37 = %35.0;
  %38 = %36.1;
  (%37, %38)
}

def @func_18705() -> Tensor[(2, 11, 2), float32] {
  %39 = @func_9418() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %39.0
}

def @func_447(%var_415: Tensor[(9, 16, 14), float64]) -> (Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) {
  %40 = cast(%var_415, dtype="float64") /* ty=Tensor[(9, 16, 14), float64] */;
  %41 = cast(meta[relay.Constant][0] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %42 = reshape(%41, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
  %43 = @func_161(%42) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */;
  %44 = %43.0;
  %45 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 13, 13), float64] */, dtype="uint64") /* ty=Tensor[(12, 13, 13), uint64] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%44, dtype="uint64") /* ty=Tensor[(12, 13, 13), uint64] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %49 = exp(%40) /* ty=Tensor[(9, 16, 14), float64] */;
  %50 = logical_xor(%47, %48) /* ty=Tensor[(12, 13, 13), uint64] */;
  (%49, meta[relay.Constant][0] /* ty=Tensor[(2028), float64] */, %50)
}

def @func_14424() -> (Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) {
  %51 = @func_8988() /* ty=Tensor[(2016), float32] */;
  %52 = @func_7693() /* ty=Tensor[(2, 11, 2), float32] */;
  (%51, %52)
}

def @func_6964() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %53 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %54 = @func_5677() /* ty=Tensor[(2, 11, 2), float32] */;
  %55 = %53.0;
  (%54, %55)
}

def @func_3521() -> Tensor[(2, 11, 2), float32] {
  %56 = @func_2572() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %56.1
}

def @func_6243(%var_6056: Tensor[(288, 1), float64], %var_6075: Tensor[(288, 10), float64], %var_6085: Tensor[(288, 10), int32], %var_6153: Tensor[(288, 10), float32]) -> (Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(2, 11, 2), float32], Tensor[(288, 1), float32], Tensor[(288, 10), float32], Tensor[(288, 10), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(288, 10), bool], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %57 = cast(%var_6056, dtype="float64") /* ty=Tensor[(288, 1), float64] */;
  %58 = cast(%var_6056, dtype="float64") /* ty=Tensor[(288, 1), float64] */;
  %59 = reshape(%57, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
  %60 = reshape(%58, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
  %61 = cast(%var_6056, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %62 = cast(%var_6056, dtype="bool") /* ty=Tensor[(288, 1), bool] */;
  %63 = cast(%var_6075, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
  %64 = equal(%62, %63) /* ty=Tensor[(288, 10), bool] */;
  %65 = cast(%var_6075, dtype="int32") /* ty=Tensor[(288, 10), int32] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(2), int32] */;
  %67 = cast(%64, dtype="int32") /* ty=Tensor[(288, 10), int32] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %69 = right_shift(%67, %68) /* ty=Tensor[(288, 10), int32] */;
  %70 = cast(%var_6085, dtype="int32") /* ty=Tensor[(288, 10), int32] */;
  %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(2), int32] */;
  %72 = cast(%69, dtype="int32") /* ty=Tensor[(288, 10), int32] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %74 = bitwise_and(%72, %73) /* ty=Tensor[(288, 10), int32] */;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(288, 10), float64] */;
  %76 = log2(%75) /* ty=Tensor[(288, 10), float64] */;
  %77 = cast(%var_6075, dtype="float32") /* ty=Tensor[(288, 10), float32] */;
  %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(2), int32] */;
  %79 = cast(%76, dtype="float32") /* ty=Tensor[(288, 10), float32] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %81 = cast(%76, dtype="float32") /* ty=Tensor[(288, 10), float32] */;
  %82 = erf(%81) /* ty=Tensor[(288, 10), float32] */;
  %83 = cast(%var_6153, dtype="uint16") /* ty=Tensor[(288, 10), uint16] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(2), int32] */;
  %85 = cast(%82, dtype="uint16") /* ty=Tensor[(288, 10), uint16] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %87 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %88 = @func_4337() /* ty=(Tensor[(2028), float64],) */;
  %89 = cast(%82, dtype="float64") /* ty=Tensor[(288, 10), float64] */;
  %90 = asin(%89) /* ty=Tensor[(288, 10), float64] */;
  %91 = cast(%var_6075, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
  %92 = cast(%var_6056, dtype="bool") /* ty=Tensor[(288, 1), bool] */;
  %93 = logical_or(%91, %92) /* ty=Tensor[(288, 10), bool] */;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(288, 10), float32] */;
  %95 = atanh(%94) /* ty=Tensor[(288, 10), float32] */;
  %96 = cast(%95, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
  %97 = shape_of(%90, dtype="int32") /* ty=Tensor[(2), int32] */;
  %98 = cast(%90, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %100 = less_equal(%98, %99) /* ty=Tensor[(288, 10), bool] */;
  %101 = cast(%100, dtype="float32") /* ty=Tensor[(288, 10), float32] */;
  %102 = log10(%101) /* ty=Tensor[(288, 10), float32] */;
  %103 = cast(%76, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(2), int32] */;
  %105 = cast(%102, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %107 = @func_712() /* ty=Tensor[(2, 11, 2), float32] */;
  %108 = @func_2190(%59, %60) /* ty=Tensor[(6, 16, 3), float64] */;
  %109 = @func_5596() /* ty=Tensor[(2, 11, 2), float32] */;
  %110 = rsqrt(%61) /* ty=Tensor[(288, 1), float32] */;
  %111 = floor_divide(%79, %80) /* ty=Tensor[(288, 10), float32] */;
  %112 = bitwise_or(%85, %86) /* ty=Tensor[(288, 10), uint16] */;
  %113 = %87.0;
  %114 = @func_5677() /* ty=Tensor[(2, 11, 2), float32] */;
  %115 = %88.0;
  %116 = greater(%105, %106) /* ty=Tensor[(288, 10), bool] */;
  %117 = @func_5857() /* ty=Tensor[(2, 11, 2), float32] */;
  %118 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%107, %108, %109, %110, %111, %112, %113, %114, %115, %116, %117, %118)
}

def @func_5677() -> Tensor[(2, 11, 2), float32] {
  @func_5596() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_16899() -> Tensor[(2, 11, 2), float32] {
  @func_712() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_4683(%var_4643: uint16, %var_4644: Tensor[(12, 4, 10), uint16]) -> (Tensor[(12, 4, 10), bool], Tensor[(2, 11, 2), float32]) {
  %119 = cast(%var_4643, dtype="bool") /* ty=bool */;
  %120 = cast(%var_4644, dtype="bool") /* ty=Tensor[(12, 4, 10), bool] */;
  %121 = @func_842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %122 = greater_equal(%119, %120) /* ty=Tensor[(12, 4, 10), bool] */;
  %123 = %121.2;
  (%122, %123)
}

def @func_378() -> (Tensor[(2, 11, 2), float32],) {
  %124 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %125 = %124.0;
  (%125,)
}

def @func_7265() -> Tensor[(2, 11, 2), float32] {
  @func_3701() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_4325() -> (Tensor[(2028), float64],) {
  %126 = @func_2458() /* ty=(Tensor[(2028), float64],) */;
  %127 = %126.0;
  (%127,)
}

def @func_1625() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %128 = @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %129 = @func_998() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %130 = %128.0;
  %131 = %129.0;
  (%130, %131)
}

def @func_8208() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %132 = @func_6964() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %133 = %132.0;
  %134 = @func_3456() /* ty=Tensor[(2, 11, 2), float32] */;
  (%133, %134)
}

def @func_6615() -> Tensor[(2, 11, 2), float32] {
  %135 = @func_2612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %135.1
}

def @func_11664() -> Tensor[(2, 11, 2), float32] {
  %136 = @func_10965() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %136.0
}

def @func_16653() -> Tensor[(2, 11, 2), float64] {
  %137 = @func_2885() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) */;
  %137.1
}

def @func_4070() -> (Tensor[(2, 11, 2), float32],) {
  %138 = @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %139 = %138.0;
  (%139,)
}

def @func_4382(%var_4368: Tensor[(11, 12, 7), int32]) -> Tensor[(11, 12, 7), int32] {
  %140 = cast(%var_4368, dtype="int32") /* ty=Tensor[(11, 12, 7), int32] */;
  %141 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(11, 12, 7), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 12, 7), int32] */, dtype="int32") /* ty=Tensor[(11, 12, 7), int32] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_or(%142, %143) /* ty=Tensor[(11, 12, 7), int32] */
}

def @func_2885() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) {
  %144 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %145 = %144.2;
  %146 = @func_2846() /* ty=Tensor[(2, 11, 2), float64] */;
  %147 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
  (%145, %146, %147)
}

def @func_16863() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %148 = @func_12753() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %149 = @func_7215() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %150 = %148.0;
  %151 = %149.1;
  (%150, %151)
}

def @func_13485() -> Tensor[(2, 11, 2), float32] {
  @func_12993() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_9682() -> (Tensor[(2016), float32],) {
  %152 = @func_8404() /* ty=Tensor[(2016), float32] */;
  (%152,)
}

def @func_8291() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), bool]) {
  %153 = @func_4632() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %154 = @func_5926() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %155 = %154.0;
  %156 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %157 = %156.1;
  %158 = cast(%157, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %159 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(%155, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %162 = %153.2;
  %163 = greater_equal(%160, %161) /* ty=Tensor[(2, 11, 2), bool] */;
  (%162, %163)
}

def @func_7693() -> Tensor[(2, 11, 2), float32] {
  %164 = @func_6732() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %164.0
}

def @func_3761() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %165 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %166 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %167 = %165.1;
  %168 = %166.0;
  (%167, %168)
}

def @func_8553() -> (Tensor[(2, 11, 2), float32], Tensor[(8, 8, 16), float64], Tensor[(1024), float64]) {
  %169 = @func_6964() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %170 = cast(meta[relay.Constant][3] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %171 = cast(meta[relay.Constant][3] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %172 = reshape(%170, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
  %173 = reshape(%171, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
  %174 = @func_6679(%172, %173) /* ty=(Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), float32]) */;
  %175 = %169.1;
  %176 = %174.0;
  (%175, %176, meta[relay.Constant][3] /* ty=Tensor[(1024), float64] */)
}

def @func_1594() -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %177 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %178 = @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %179 = @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %180 = %177.0;
  %181 = %178.0;
  %182 = %179.0;
  (%180, %181, %182)
}

def @func_18235() -> (Tensor[(2, 11, 2), float32],) {
  %183 = @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %184 = %183.0;
  (%184,)
}

def @func_17472() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %185 = @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %186 = @func_5661() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %187 = @func_14994() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %188 = %185.0;
  %189 = @func_7265() /* ty=Tensor[(2, 11, 2), float32] */;
  %190 = %186.0;
  %191 = %187.0;
  (%188, %189, %190, %191)
}

def @func_18244() -> Tensor[(2028), float64] {
  %192 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %192.0
}

def @func_9865() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16]) {
  %193 = @func_3870() /* ty=(Tensor[(2016), float64],) */;
  %194 = @func_3521() /* ty=Tensor[(2, 11, 2), float32] */;
  %195 = %193.0;
  %196 = @func_1454() /* ty=Tensor[(2, 11, 2), float32] */;
  %197 = @func_4991() /* ty=Tensor[(12, 13, 15), uint16] */;
  (%194, %195, %196, %197)
}

def @func_4991() -> Tensor[(12, 13, 15), uint16] {
  %198 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %198.0
}

def @func_15216(%var_15202: Tensor[(5, 13, 3), float32]) -> (Tensor[(5, 13, 3), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %199 = cast(%var_15202, dtype="float32") /* ty=Tensor[(5, 13, 3), float32] */;
  %200 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(5, 13, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 13, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 13, 3), float32] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %203 = @func_11618() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %204 = @func_14100() /* ty=(Tensor[(2016), float64],) */;
  %205 = minimum(%201, %202) /* ty=Tensor[(5, 13, 3), float32] */;
  %206 = %203.0;
  %207 = %204.0;
  (%205, %206, %207)
}

def @func_16383() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %208 = @func_11618() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %209 = @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %210 = %208.1;
  %211 = %209.0;
  (%210, %211)
}

def @func_11216() -> (Tensor[(4, 14, 11), int8], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) {
  %212 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 14, 11), int8] */, dtype="int8") /* ty=Tensor[(4, 14, 11), int8] */;
  %213 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(4, 14, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 14, 11), int8] */, dtype="int8") /* ty=Tensor[(4, 14, 11), int8] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %216 = @func_7215() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %217 = maximum(%214, %215) /* ty=Tensor[(4, 14, 11), int8] */;
  %218 = @func_9170() /* ty=Tensor[(2, 11, 2), float64] */;
  %219 = %216.0;
  (%217, %218, %219)
}

def @func_4197() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %220 = @func_2612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %221 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
  %222 = %220.1;
  %223 = %221.1;
  (%222, %223)
}

def @func_17191() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %224 = @func_14672() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %225 = @func_6493() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %226 = @func_5677() /* ty=Tensor[(2, 11, 2), float32] */;
  %227 = %224.0;
  %228 = @func_12993() /* ty=Tensor[(2, 11, 2), float32] */;
  %229 = %225.2;
  (%226, %227, %228, %229)
}

def @func_13653() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %230 = @func_3452() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %231 = @func_1625() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %232 = %230.0;
  %233 = %231.1;
  (%232, %233)
}

def @func_1708(%var_1692: Tensor[(2, 11, 2), float32]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool]) {
  %234 = @func_378() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %235 = @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %236 = %235.0;
  %237 = cast(%var_1692, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%236, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %241 = %234.0;
  %242 = logical_or(%239, %240) /* ty=Tensor[(2, 11, 2), bool] */;
  (%241, %242)
}

def @func_14100() -> (Tensor[(2016), float64],) {
  %243 = @func_13852() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %244 = %243.0;
  (%244,)
}

def @func_12993() -> Tensor[(2, 11, 2), float32] {
  %245 = @func_11396() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %245.1
}

def @func_15252() -> Tensor[(2016), float64] {
  %246 = @func_13852() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %246.0
}

def @func_1519() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %247 = @func_589() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %248 = @func_526() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) */;
  %249 = %247.0;
  %250 = %248.0;
  (%249, %250)
}

def @func_9190() -> (Tensor[(2, 11, 2), float32],) {
  %251 = @func_4197() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %252 = %251.1;
  (%252,)
}

def @func_11396() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %253 = @func_5508() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) */;
  %254 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %255 = %253.0;
  %256 = %254.2;
  (%255, %256)
}

def @func_17862() -> Tensor[(2, 11, 2), float32] {
  %257 = @func_6974() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %257.0
}

def @func_13852() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %258 = @func_11271() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %259 = @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %260 = %258.1;
  %261 = %259.0;
  (%260, %261)
}

def @func_16628() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %262 = @func_12753() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %263 = %262.0;
  %264 = @func_11664() /* ty=Tensor[(2, 11, 2), float32] */;
  (%263, %264)
}

def @func_4917() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32]) {
  %265 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %266 = %265.0;
  %267 = cast(%266, dtype="float32") /* ty=Tensor[(2028), float32] */;
  %268 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %269 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  %270 = sqrt(%267) /* ty=Tensor[(2028), float32] */;
  %271 = %268.0;
  (%269, %270, %271)
}

def @func_11704() -> (Tensor[(2, 11, 2), float32],) {
  %272 = @func_11664() /* ty=Tensor[(2, 11, 2), float32] */;
  (%272,)
}

def @func_161(%var_149: Tensor[(12, 13, 13), float64]) -> (Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) {
  %273 = cast(%var_149, dtype="float64") /* ty=Tensor[(12, 13, 13), float64] */;
  %274 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %275 = atan(%273) /* ty=Tensor[(12, 13, 13), float64] */;
  %276 = %274.0;
  (%275, %276)
}

def @func_16348() -> Tensor[(2, 11, 2), float32] {
  %277 = @func_9254() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %277.1
}

def @func_9997() -> Tensor[(2, 11, 2), float32] {
  %278 = @func_9210() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %278.0
}

def @func_4733() -> (Tensor[(2, 11, 2), float64],) {
  %279 = @func_2846() /* ty=Tensor[(2, 11, 2), float64] */;
  (%279,)
}

def @func_14963() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) {
  %280 = @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %281 = @func_14620() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) */;
  %282 = %280.0;
  %283 = @func_12959() /* ty=Tensor[(2016), float32] */;
  %284 = %281.1;
  %285 = @func_12714() /* ty=Tensor[(2016), float32] */;
  (%282, %283, %284, %285)
}

def @func_18374() -> (Tensor[(2, 11, 2), float64],) {
  %286 = @func_11164() /* ty=Tensor[(2, 11, 2), float64] */;
  (%286,)
}

def @func_6588() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %287 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %288 = @func_2523() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %289 = %287.2;
  %290 = %288.2;
  (%289, %290)
}

def @func_16318() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %291 = @func_13099() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %292 = @func_16006() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %293 = @func_2066() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %294 = %291.6;
  %295 = %292.0;
  %296 = %293.0;
  (%294, %295, %296)
}

def @func_13150() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(1440), float64], Tensor[(2028), float64], Tensor[(2028), float64]) {
  %297 = @func_9713() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) */;
  %298 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %299 = cast(meta[relay.Constant][7] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %300 = reshape(%299, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %301 = @func_12517(%300) /* ty=(Tensor[(2016), float64], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) */;
  %302 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %303 = @func_11409() /* ty=Tensor[(2, 11, 2), float32] */;
  %304 = %297.0;
  %305 = %298.0;
  %306 = %301.0;
  %307 = %302.0;
  %308 = @func_8686() /* ty=Tensor[(2028), float64] */;
  (%303, %304, %305, %306, meta[relay.Constant][7] /* ty=Tensor[(1440), float64] */, %307, %308)
}

def @func_17635(%var_17610: int32) -> Tensor[(?, 4, 7), float32] {
  %309 = cast(%var_17610, dtype="int32") /* ty=int32 */;
  %310 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 4, 7), int32] */, dtype="int32") /* ty=Tensor[(1, 4, 7), int32] */;
  %311 = bitwise_and(%309, %310) /* ty=Tensor[(1, 4, 7), int32] */;
  %312 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 4, 7), int32] */, dtype="float32") /* ty=Tensor[(1, 4, 7), float32] */;
  %313 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%311, dtype="float32") /* ty=Tensor[(1, 4, 7), float32] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  maximum(%314, %315) /* ty=Tensor[(?, 4, 7), float32] */
}

def @func_3870() -> (Tensor[(2016), float64],) {
  %316 = @func_2057() /* ty=(Tensor[(2016), float64],) */;
  %317 = %316.0;
  (%317,)
}

def @func_636() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) {
  %318 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %319 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %320 = cast(meta[relay.Constant][9] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %321 = reshape(%320, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
  %322 = @func_447(%321) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
  %323 = %318.1;
  %324 = %319.0;
  %325 = %322.2;
  (%323, %324, %325, meta[relay.Constant][9] /* ty=Tensor[(2016), float64] */)
}

def @func_3009(%var_2933: Tensor[(2016), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), bool], Tensor[(12, 13, 15), float64], Tensor[(2, 11, 2), float32]) {
  %326 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %327 = cast(%var_2933, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %328 = reshape(%327, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
  %329 = @func_447(%328) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
  %330 = %326.0;
  %331 = cast(%330, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %332 = reshape(%331, newshape=[2, 11, 2]) /* ty=Tensor[(2, 11, 2), float32] */;
  %333 = @func_1708(%332) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool]) */;
  %334 = @func_1594() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %335 = %334.0;
  %336 = cast(%335, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %337 = %329.1;
  %338 = cast(%337, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %339 = reshape(%338, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %340 = @func_949(%339) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */;
  %341 = %333.1;
  %342 = exp(%336) /* ty=Tensor[(12, 13, 15), float64] */;
  %343 = %340.1;
  (%330, %337, %var_2933, %341, %342, %343)
}

def @func_10054() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %344 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %345 = @func_712() /* ty=Tensor[(2, 11, 2), float32] */;
  %346 = %344.0;
  (%345, %346)
}

def @func_581() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %347 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %348 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %349 = %347.0;
  %350 = %348.0;
  %351 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%349, %350, %351)
}

def @func_8128(%var_8115: Tensor[(9, 10, 16), float64]) -> (Tensor[(9, 10, 16), float64],) {
  %352 = cast(%var_8115, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %353 = erf(%352) /* ty=Tensor[(9, 10, 16), float64] */;
  (%353,)
}

def @func_7471() -> (Tensor[(12, 13, 15), uint16],) {
  %354 = @func_4991() /* ty=Tensor[(12, 13, 15), uint16] */;
  (%354,)
}

def @func_2035() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %355 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %356 = @func_998() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %357 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %358 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %359 = @func_998() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %360 = %355.0;
  %361 = %356.0;
  %362 = %357.0;
  %363 = %358.0;
  %364 = %359.1;
  (%360, %361, %362, %363, %364)
}

def @func_12959() -> Tensor[(2016), float32] {
  %365 = @func_9682() /* ty=(Tensor[(2016), float32],) */;
  %365.0
}

def @func_5635() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %366 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %367 = @func_998() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %368 = @func_2458() /* ty=(Tensor[(2028), float64],) */;
  %369 = %366.0;
  %370 = %367.0;
  %371 = %368.0;
  (%369, %370, %371)
}

def @func_6403(%var_6393: Tensor[(36, 16), uint64]) -> (Tensor[(2, 11, 2), float32], Tensor[(6, 96), uint64], Tensor[(36, 16), uint64]) {
  %372 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %373 = cast(%var_6393, dtype="uint64") /* ty=Tensor[(36, 16), uint64] */;
  %374 = reshape(%373, newshape=[6, 96]) /* ty=Tensor[(6, 96), uint64] */;
  %375 = @func_6274(%374) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(6, 96), uint64]) */;
  %376 = %372.0;
  %377 = %375.2;
  (%376, %377, %var_6393)
}

def @func_10266(%var_10209: Tensor[(9, 14, 6), float32]) -> (Tensor[(9, 14, 6), float32], Tensor[(9, 14, 6), float64], Tensor[(2016), float32]) {
  %378 = cast(%var_10209, dtype="float32") /* ty=Tensor[(9, 14, 6), float32] */;
  %379 = cast(%var_10209, dtype="float64") /* ty=Tensor[(9, 14, 6), float64] */;
  %380 = @func_9682() /* ty=(Tensor[(2016), float32],) */;
  %381 = rsqrt(%378) /* ty=Tensor[(9, 14, 6), float32] */;
  %382 = atan(%379) /* ty=Tensor[(9, 14, 6), float64] */;
  %383 = %380.0;
  (%381, %382, %383)
}

def @func_2323() -> Tensor[(2, 11, 2), float32] {
  %384 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %384.0
}

def @func_4031() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %385 = @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %386 = %385.0;
  %387 = @func_1454() /* ty=Tensor[(2, 11, 2), float32] */;
  (%386, %387)
}

def @func_8518() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %388 = @func_8208() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %389 = @func_7738() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %390 = @func_7693() /* ty=Tensor[(2, 11, 2), float32] */;
  %391 = %388.1;
  %392 = %389.0;
  (%390, %391, %392)
}

def @func_1045() -> (Tensor[(2, 11, 2), float32],) {
  %393 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%393,)
}

def @func_9367() -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %394 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %395 = @func_4875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %396 = %394.0;
  %397 = %395.0;
  %398 = @func_3521() /* ty=Tensor[(2, 11, 2), float32] */;
  (%396, %397, %398)
}

def @func_13857() -> Tensor[(2, 11, 2), float32] {
  %399 = @func_4031() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %399.1
}

def @func_8686() -> Tensor[(2028), float64] {
  %400 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %400.0
}

def @func_12557() -> Tensor[(2, 11, 2), bool] {
  %401 = @func_9406() /* ty=(Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) */;
  %401.0
}

def @func_18501() -> Tensor[(2, 11, 2), float32] {
  %402 = @func_12785() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %402.0
}

def @func_5596() -> Tensor[(2, 11, 2), float32] {
  %403 = @func_5105() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %403.0
}

def @func_10184() -> Tensor[(2, 11, 2), float32] {
  @func_5596() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_1488() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %404 = @func_378() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %405 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %406 = %404.0;
  %407 = %405.0;
  (%406, %407)
}

def @func_118() -> (Tensor[(2, 11, 2), float32],) {
  %408 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 11, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %409 = acosh(%408) /* ty=Tensor[(2, 11, 2), float32] */;
  (%409,)
}

def @func_15114() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) {
  %410 = @func_2523() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %411 = @func_842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %412 = cast(meta[relay.Constant][11] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %413 = reshape(%412, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %414 = @func_8128(%413) /* ty=(Tensor[(9, 10, 16), float64],) */;
  %415 = %410.3;
  %416 = %411.0;
  %417 = %414.0;
  (%415, %416, %417, meta[relay.Constant][11] /* ty=Tensor[(1440), float64] */)
}

def @func_11633() -> (Tensor[(2, 11, 2), float32],) {
  %418 = @func_6615() /* ty=Tensor[(2, 11, 2), float32] */;
  (%418,)
}

def @func_3452() -> (Tensor[(2, 11, 2), float32],) {
  %419 = @func_2523() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %420 = %419.0;
  (%420,)
}

def @func_14831() -> (Tensor[(2028), float64],) {
  %421 = @func_6545() /* ty=(Tensor[(2028), float64],) */;
  %422 = %421.0;
  (%422,)
}

def @func_17068() -> Tensor[(2, 11, 2), float32] {
  %423 = @func_7321() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64]) */;
  %423.2
}

def @func_4875() -> (Tensor[(2, 11, 2), float32],) {
  %424 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %425 = %424.1;
  (%425,)
}

def @func_10310() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(504, 4), float64]) {
  %426 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %427 = cast(meta[relay.Constant][12] /* ty=Tensor[(504, 4), float64] */, dtype="float64") /* ty=Tensor[(504, 4), float64] */;
  %428 = reshape(%427, newshape=[2016, 1]) /* ty=Tensor[(2016, 1), float64] */;
  %429 = @func_1352(%428) /* ty=(Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2028), float64], Tensor[(2016, 1), float64]) */;
  %430 = %426.0;
  %431 = %429.0;
  (%430, %431, meta[relay.Constant][12] /* ty=Tensor[(504, 4), float64] */)
}

def @func_6493() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %432 = @func_5508() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) */;
  %433 = @func_3394() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %434 = %432.2;
  %435 = %433.0;
  %436 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%434, %435, %436)
}

def @func_7045() -> Tensor[(2, 11, 2), float32] {
  %437 = @func_842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %437.0
}

def @func_17284() -> (Tensor[(2, 11, 2), float32],) {
  %438 = @func_15840() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %439 = %438.0;
  (%439,)
}

def @func_1807() -> (Tensor[(2, 11, 2), float32],) {
  %440 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %441 = %440.0;
  (%441,)
}

def @func_17252() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %442 = cast(meta[relay.Constant][13] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %443 = reshape(%442, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %444 = @func_14576(%443) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */;
  %445 = @func_13485() /* ty=Tensor[(2, 11, 2), float32] */;
  %446 = %444.0;
  (%445, %446, meta[relay.Constant][13] /* ty=Tensor[(2028), float64] */)
}

def @func_18151() -> (Tensor[(2028), float64],) {
  %447 = @func_13099() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %448 = %447.8;
  (%448,)
}

def @func_12345(%var_12342: Tensor[(12, 48), uint64]) -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 48), uint64]) {
  %449 = @func_4875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %450 = @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %451 = @func_4217() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %452 = cast(%var_12342, dtype="uint64") /* ty=Tensor[(12, 48), uint64] */;
  %453 = reshape(%452, newshape=[36, 16]) /* ty=Tensor[(36, 16), uint64] */;
  %454 = @func_6403(%453) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 96), uint64], Tensor[(36, 16), uint64]) */;
  %455 = @func_6308() /* ty=Tensor[(2016), float64] */;
  %456 = %449.0;
  %457 = %450.0;
  %458 = @func_8471() /* ty=Tensor[(2, 11, 2), float32] */;
  %459 = @func_5596() /* ty=Tensor[(2, 11, 2), float32] */;
  %460 = %451.0;
  %461 = %454.0;
  (%455, %456, %457, %458, %459, %460, %461, %var_12342)
}

def @func_5189(%var_5141: Tensor[(2, 288), uint64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float64], Tensor[(6, 16, 6), float64], Tensor[(12, 13, 13), float64]) {
  %462 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %463 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %464 = @func_4733() /* ty=(Tensor[(2, 11, 2), float64],) */;
  %465 = cast(%var_5141, dtype="uint64") /* ty=Tensor[(2, 288), uint64] */;
  %466 = reshape(%465, newshape=[6, 16, 6]) /* ty=Tensor[(6, 16, 6), uint64] */;
  %467 = @func_1404(%466) /* ty=(Tensor[(6, 16, 6), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %468 = %467.0;
  %469 = cast(%468, dtype="float32") /* ty=Tensor[(6, 16, 6), float32] */;
  %470 = erf(%469) /* ty=Tensor[(6, 16, 6), float32] */;
  %471 = cast(%470, dtype="float64") /* ty=Tensor[(6, 16, 6), float64] */;
  %472 = %463.0;
  %473 = cast(%472, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %474 = reshape(%473, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
  %475 = @func_161(%474) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */;
  %476 = %462.1;
  %477 = @func_3701() /* ty=Tensor[(2, 11, 2), float32] */;
  %478 = %464.0;
  %479 = rsqrt(%471) /* ty=Tensor[(6, 16, 6), float64] */;
  %480 = %475.0;
  (%476, %var_5141, %477, %472, %478, %479, %480)
}

def @func_15712() -> (Tensor[(2, 11, 2), float32],) {
  %481 = @func_9418() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %482 = %481.0;
  (%482,)
}

def @func_12517(%var_12515: Tensor[(1440), float64]) -> (Tensor[(2016), float64], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) {
  %483 = @func_8770() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %484 = cast(%var_12515, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %485 = reshape(%484, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %486 = @func_8128(%485) /* ty=(Tensor[(9, 10, 16), float64],) */;
  %487 = %483.0;
  %488 = %486.0;
  (%487, %488, %var_12515)
}

def @func_12438() -> (Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16]) {
  %489 = @func_7632() /* ty=Tensor[(2, 11, 2), float32] */;
  %490 = @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */;
  (%489, %490)
}

def @func_3593(%var_3585: Tensor[(6, 7, 1), float64]) -> (Tensor[(6, 7, 9), float64],) {
  %491 = cast(%var_3585, dtype="float64") /* ty=Tensor[(6, 7, 1), float64] */;
  %492 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 9), float64] */;
  %493 = power(%491, %492) /* ty=Tensor[(6, 7, 9), float64] */;
  (%493,)
}

def @func_15840() -> (Tensor[(2, 11, 2), float32],) {
  %494 = @func_13968() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %495 = %494.0;
  (%495,)
}

def @func_10080() -> (Tensor[(12, 1, 13), float64], Tensor[(2, 11, 2), float32]) {
  %496 = cast(3.1569f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %497 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(12, 1, 13), float64] */;
  %498 = cast(3.1569f64 /* ty=float64 */, dtype="int8") /* ty=int8 */;
  %499 = reshape(%498, newshape=[1]) /* ty=Tensor[(1), int8] */;
  %500 = @func_7886(%499) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(360, 2028), float64]) */;
  %501 = power(%496, %497) /* ty=Tensor[(12, 1, 13), float64] */;
  %502 = %500.5;
  (%501, %502)
}

def @func_15966() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %503 = @func_13150() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(1440), float64], Tensor[(2028), float64], Tensor[(2028), float64]) */;
  %504 = @func_13852() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %505 = @func_10140() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %506 = %503.3;
  %507 = %504.1;
  %508 = @func_9997() /* ty=Tensor[(2, 11, 2), float32] */;
  %509 = @func_6906() /* ty=Tensor[(2, 11, 2), float32] */;
  %510 = %505.0;
  (%506, %507, %508, %509, %510)
}

def @func_5031(%var_5022: Tensor[(1, 1, 1), int8], %var_5023: Tensor[(6, 6, 10), int8]) -> Tensor[(6, 6, 10), int8] {
  %511 = cast(%var_5022, dtype="int8") /* ty=Tensor[(1, 1, 1), int8] */;
  %512 = cast(%var_5023, dtype="int8") /* ty=Tensor[(6, 6, 10), int8] */;
  bitwise_and(%511, %512) /* ty=Tensor[(6, 6, 10), int8] */
}

def @func_7570() -> Tensor[(2, 11, 2), float64] {
  @func_6452() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_6523() -> (Tensor[(2016), float32], Tensor[(12, 13, 13), uint64]) {
  %513 = @func_5508() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) */;
  %514 = %513.1;
  %515 = cast(%514, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %516 = reshape(%515, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
  %517 = @func_447(%516) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
  %518 = %517.2;
  (%514, %518)
}

def @func_2190(%var_2184: Tensor[(6, 16, 3), float64], %var_2185: Tensor[(6, 16, 3), float64]) -> Tensor[(6, 16, 3), float64] {
  %519 = cast(%var_2185, dtype="float64") /* ty=Tensor[(6, 16, 3), float64] */;
  %520 = shape_of(%var_2184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%var_2184, dtype="float64") /* ty=Tensor[(6, 16, 3), float64] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%521, %522) /* ty=Tensor[(6, 16, 3), float64] */
}

def @func_17033() -> Tensor[(2, 11, 2), float32] {
  @func_5857() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_17659() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028, 1), float64]) {
  %523 = cast(meta[relay.Constant][16] /* ty=Tensor[(2028, 1), float64] */, dtype="float64") /* ty=Tensor[(2028, 1), float64] */;
  %524 = reshape(%523, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %525 = @func_7494(%524) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %526 = @func_15035() /* ty=Tensor[(2, 11, 2), float32] */;
  %527 = @func_7045() /* ty=Tensor[(2, 11, 2), float32] */;
  %528 = %525.1;
  (%526, %527, %528, meta[relay.Constant][16] /* ty=Tensor[(2028, 1), float64] */)
}

def @func_1404(%var_1382: Tensor[(6, 16, 6), uint64]) -> (Tensor[(6, 16, 6), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) {
  %529 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 16, 6), uint64] */, dtype="bool") /* ty=Tensor[(6, 16, 6), bool] */;
  %530 = shape_of(%var_1382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%var_1382, dtype="bool") /* ty=Tensor[(6, 16, 6), bool] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %533 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %534 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %535 = not_equal(%531, %532) /* ty=Tensor[(6, 16, 6), bool] */;
  %536 = %533.0;
  %537 = %534.0;
  (%535, %536, %537)
}

def @func_16271() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %538 = @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %539 = @func_14963() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) */;
  %540 = %538.0;
  %541 = %539.2;
  (%540, %541)
}

def @func_9278() -> Tensor[(12, 13, 15), uint16] {
  %542 = @func_7471() /* ty=(Tensor[(12, 13, 15), uint16],) */;
  %542.0
}

def @func_6274(%var_6272: Tensor[(6, 96), uint64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(6, 96), uint64]) {
  %543 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %544 = cast(%var_6272, dtype="uint64") /* ty=Tensor[(6, 96), uint64] */;
  %545 = reshape(%544, newshape=[2, 288]) /* ty=Tensor[(2, 288), uint64] */;
  %546 = @func_5189(%545) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float64], Tensor[(6, 16, 6), float64], Tensor[(12, 13, 13), float64]) */;
  %547 = %543.0;
  %548 = %546.4;
  (%547, %548, %var_6272)
}

def @func_14672() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %549 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %550 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
  %551 = %549.0;
  (%550, %551)
}

def @func_16006() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %552 = @func_9865() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16]) */;
  %553 = %552.0;
  %554 = @func_6308() /* ty=Tensor[(2016), float64] */;
  (%553, %554)
}

def @func_12714() -> Tensor[(2016), float32] {
  @func_8404() /* ty=Tensor[(2016), float32] */
}

def @func_3701() -> Tensor[(2, 11, 2), float32] {
  %555 = @func_3350() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %555.0
}

def @func_15766() -> (Tensor[(2028), float64],) {
  %556 = @func_4325() /* ty=(Tensor[(2028), float64],) */;
  %557 = %556.0;
  (%557,)
}

def @func_2612() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %558 = @func_378() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %559 = cast(meta[relay.Constant][18] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %560 = reshape(%559, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %561 = @func_949(%560) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */;
  %562 = %558.0;
  %563 = %561.1;
  (%562, %563, meta[relay.Constant][18] /* ty=Tensor[(2028), float64] */)
}

def @func_10613(%var_10592: Tensor[(360), int8]) -> (Tensor[(2, 11, 2), float64], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(360), int8], Tensor[(2, 11, 2), float32], Tensor[(84, 24), float64], Tensor[(2028), float64]) {
  %564 = @func_4733() /* ty=(Tensor[(2, 11, 2), float64],) */;
  %565 = cast(meta[relay.Constant][19] /* ty=Tensor[(1), int8] */, dtype="int8") /* ty=Tensor[(1), int8] */;
  %566 = cast(%var_10592, dtype="int8") /* ty=Tensor[(360), int8] */;
  %567 = reshape(%565, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), int8] */;
  %568 = reshape(%566, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), int8] */;
  %569 = cast(meta[relay.Constant][20] /* ty=Tensor[(84, 24), float64] */, dtype="float64") /* ty=Tensor[(84, 24), float64] */;
  %570 = reshape(%569, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
  %571 = @func_3033(%570) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) */;
  %572 = %564.0;
  %573 = @func_5031(%567, %568) /* ty=Tensor[(6, 6, 10), int8] */;
  %574 = %571.0;
  %575 = @func_8686() /* ty=Tensor[(2028), float64] */;
  (%572, %573, meta[relay.Constant][19] /* ty=Tensor[(1), int8] */, %var_10592, %574, meta[relay.Constant][20] /* ty=Tensor[(84, 24), float64] */, %575)
}

def @func_16025() -> (Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32]) {
  %576 = @func_11511() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32], Tensor[(3, 117), float32]) */;
  %577 = @func_7570() /* ty=Tensor[(2, 11, 2), float64] */;
  %578 = @func_3521() /* ty=Tensor[(2, 11, 2), float32] */;
  %579 = %576.1;
  (%577, %578, %579)
}

def @func_15023() -> (Tensor[(12, 13, 15), uint16],) {
  %580 = @func_9278() /* ty=Tensor[(12, 13, 15), uint16] */;
  (%580,)
}

def @func_11861() -> Tensor[(2, 11, 2), float32] {
  @func_5677() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_949(%var_937: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) {
  %581 = @func_378() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %582 = cast(%var_937, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %583 = reshape(%582, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
  %584 = @func_161(%583) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */;
  %585 = %581.0;
  %586 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  %587 = %584.0;
  (%585, %586, %587, %var_937)
}

def @func_11037() -> Tensor[(2, 11, 2), float32] {
  %588 = @func_10054() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %588.1
}

def @func_10417() -> (Tensor[(12, 13, 15), uint16],) {
  %589 = @func_4991() /* ty=Tensor[(12, 13, 15), uint16] */;
  (%589,)
}

def @func_11164() -> Tensor[(2, 11, 2), float64] {
  @func_9170() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_11409() -> Tensor[(2, 11, 2), float32] {
  %590 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %590.0
}

def @func_14576(%var_14574: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) {
  %591 = @func_13852() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %592 = cast(%var_14574, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %593 = reshape(%592, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %594 = @func_949(%593) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */;
  %595 = %591.1;
  %596 = %594.2;
  (%595, %596, %var_14574)
}

def @func_10166() -> (Tensor[(2016), float64],) {
  %597 = @func_6308() /* ty=Tensor[(2016), float64] */;
  (%597,)
}

def @func_8937() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2016), float32], Tensor[(2028), float64]) {
  %598 = @func_3870() /* ty=(Tensor[(2016), float64],) */;
  %599 = @func_8155() /* ty=Tensor[(2, 11, 2), float32] */;
  %600 = %598.0;
  %601 = @func_8404() /* ty=Tensor[(2016), float32] */;
  %602 = @func_1217() /* ty=Tensor[(2028), float64] */;
  (%599, %600, %601, %602)
}

def @func_2066() -> (Tensor[(2, 11, 2), float32],) {
  %603 = @func_1454() /* ty=Tensor[(2, 11, 2), float32] */;
  (%603,)
}

def @func_10140() -> (Tensor[(2, 11, 2), float32],) {
  %604 = @func_10054() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %605 = %604.1;
  (%605,)
}

def @func_7632() -> Tensor[(2, 11, 2), float32] {
  %606 = @func_3350() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %606.0
}

def @func_13257() -> Tensor[(2, 11, 2), float32] {
  @func_2323() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_5926() -> (Tensor[(2, 11, 2), float32],) {
  %607 = @func_5857() /* ty=Tensor[(2, 11, 2), float32] */;
  (%607,)
}

def @func_9335() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %608 = @func_3761() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %609 = %608.1;
  %610 = @func_6308() /* ty=Tensor[(2016), float64] */;
  (%609, %610)
}

def @func_10641() -> (Tensor[(2, 11, 2), float32],) {
  %611 = @func_6732() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %612 = %611.0;
  (%612,)
}

def @func_15091() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %613 = @func_1594() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %614 = %613.1;
  %615 = @func_5677() /* ty=Tensor[(2, 11, 2), float32] */;
  (%614, %615)
}

def @func_2645(%var_2634: Tensor[(3, 5, 8), float32]) -> Tensor[(3, 5, 8), float32] {
  %616 = cast(%var_2634, dtype="float32") /* ty=Tensor[(3, 5, 8), float32] */;
  atanh(%616) /* ty=Tensor[(3, 5, 8), float32] */
}

def @func_9406() -> (Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) {
  %617 = @func_8291() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), bool]) */;
  %618 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %619 = %617.1;
  %620 = %618.2;
  (%619, %620)
}

def @func_7215() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %621 = @func_6785() /* ty=(Tensor[(2016), float64], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %622 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %623 = %621.2;
  %624 = %622.4;
  %625 = @func_712() /* ty=Tensor[(2, 11, 2), float32] */;
  (%623, %624, %625)
}

def @func_11812() -> (Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(288), float64], Tensor[(2, 11, 2), float32]) {
  %626 = @func_8553() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(8, 8, 16), float64], Tensor[(1024), float64]) */;
  %627 = @func_8291() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), bool]) */;
  %628 = @func_11396() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %629 = cast(meta[relay.Constant][21] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %630 = cast(meta[relay.Constant][21] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %631 = reshape(%629, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
  %632 = reshape(%630, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
  %633 = %626.1;
  %634 = %627.1;
  %635 = %628.1;
  %636 = @func_2190(%631, %632) /* ty=Tensor[(6, 16, 3), float64] */;
  %637 = @func_7265() /* ty=Tensor[(2, 11, 2), float32] */;
  (%633, %634, %635, %636, meta[relay.Constant][21] /* ty=Tensor[(288), float64] */, %637)
}

def @func_12415() -> (Tensor[(2, 11, 2), float32],) {
  %638 = @func_11191() /* ty=Tensor[(2, 11, 2), float32] */;
  (%638,)
}

def @func_8636(%var_8621: Tensor[(2016), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) {
  %639 = cast(%var_8621, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %640 = reshape(%639, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
  %641 = @func_447(%640) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
  %642 = @func_2428() /* ty=Tensor[(2, 11, 2), float32] */;
  %643 = %641.1;
  (%642, %643, %var_8621)
}

def @func_17532() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %644 = @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %645 = @func_7693() /* ty=Tensor[(2, 11, 2), float32] */;
  %646 = %644.1;
  (%645, %646)
}

def @func_4337() -> (Tensor[(2028), float64],) {
  %647 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %648 = %647.0;
  (%648,)
}

def @func_9170() -> Tensor[(2, 11, 2), float64] {
  %649 = @func_4733() /* ty=(Tensor[(2, 11, 2), float64],) */;
  %649.0
}

def @func_9210() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %650 = @func_6493() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %651 = @func_6711() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %652 = %650.1;
  %653 = %651.1;
  (%652, %653)
}

def @func_12208(%var_12177: Tensor[(12, 10, 10), float32]) -> Tensor[(12, 10, 10), float32] {
  %654 = cast(%var_12177, dtype="float32") /* ty=Tensor[(12, 10, 10), float32] */;
  exp(%654) /* ty=Tensor[(12, 10, 10), float32] */
}

def @func_842() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %655 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %656 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %657 = %655.0;
  %658 = %656.2;
  %659 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%657, %658, %659)
}

def @func_7494(%var_7490: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %660 = cast(meta[relay.Constant][22] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %661 = reshape(%660, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
  %662 = @func_161(%661) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */;
  %663 = cast(%var_7490, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %664 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(2028), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %665 = cast(meta[relay.Constant][22] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?), float64] */;
  %667 = @func_3456() /* ty=Tensor[(2, 11, 2), float32] */;
  %668 = %662.1;
  %669 = mod(%665, %666) /* ty=Tensor[(2028), float64] */;
  (%667, %668, %669)
}

def @func_2846() -> Tensor[(2, 11, 2), float64] {
  %670 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
  %671 = %670.1;
  %672 = cast(%671, dtype="float64") /* ty=Tensor[(2, 11, 2), float64] */;
  erf(%672) /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_6452() -> Tensor[(2, 11, 2), float64] {
  @func_5270() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_7738() -> (Tensor[(2, 11, 2), float32],) {
  %673 = @func_2428() /* ty=Tensor[(2, 11, 2), float32] */;
  (%673,)
}

def @func_9254() -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
  %674 = @func_7471() /* ty=(Tensor[(12, 13, 15), uint16],) */;
  %675 = @func_4632() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %676 = %674.0;
  %677 = %675.0;
  (%676, %677)
}

def @func_8029() -> (Tensor[(2, 11, 2), float32],) {
  %678 = @func_6974() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %679 = %678.0;
  (%679,)
}

def @func_998() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %680 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %681 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
  %682 = %680.0;
  (%681, %682)
}

def @func_13780() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(162), float64], Tensor[(12, 1, 13), float64], Tensor[(2, 11, 2), bool]) {
  %683 = @func_4419() /* ty=Tensor[(2016), float64] */;
  %684 = cast(%683, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %685 = cast(meta[relay.Constant][23] /* ty=Tensor[(162), float64] */, dtype="float64") /* ty=Tensor[(162), float64] */;
  %686 = reshape(%685, newshape=[6, 3, 9]) /* ty=Tensor[(6, 3, 9), float64] */;
  %687 = @func_11330(%686) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), int32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), float32], Tensor[(2016), float64]) */;
  %688 = @func_11111() /* ty=(Tensor[(12, 1, 13), float64],) */;
  %689 = @func_2783() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) */;
  %690 = cosh(%684) /* ty=Tensor[(2016), float64] */;
  %691 = %687.0;
  %692 = %688.0;
  %693 = %689.1;
  (%690, %691, meta[relay.Constant][23] /* ty=Tensor[(162), float64] */, %692, %693)
}

def @func_14350() -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
  %694 = @func_10140() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %695 = @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */;
  %696 = %694.0;
  (%695, %696)
}

def @func_9144() -> (Tensor[(2, 11, 2), bool], Tensor[(36, 16), int16]) {
  %697 = @func_2783() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) */;
  %698 = cast(meta[relay.Constant][24] /* ty=Tensor[(576), uint64] */, dtype="uint64") /* ty=Tensor[(576), uint64] */;
  %699 = reshape(%698, newshape=[36, 16]) /* ty=Tensor[(36, 16), uint64] */;
  %700 = @func_6403(%699) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 96), uint64], Tensor[(36, 16), uint64]) */;
  %701 = %700.2;
  %702 = cast(meta[relay.Constant][24] /* ty=Tensor[(576), uint64] */, dtype="int16") /* ty=Tensor[(576), int16] */;
  %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(2), int32] */;
  %704 = cast(%701, dtype="int16") /* ty=Tensor[(36, 16), int16] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %706 = %697.1;
  %707 = bitwise_or(%704, %705) /* ty=Tensor[(36, 16), int16] */;
  (%706, %707)
}

def @func_15069() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %708 = @func_11618() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %709 = @func_13456() /* ty=Tensor[(2, 11, 2), float32] */;
  %710 = %708.0;
  (%709, %710)
}

def @func_6351(%var_6324: Tensor[(5, 13, 5), float64]) -> (Tensor[(5, 13, 5), float32], Tensor[(2016), float64]) {
  %711 = cast(%var_6324, dtype="float64") /* ty=Tensor[(5, 13, 5), float64] */;
  %712 = cos(%711) /* ty=Tensor[(5, 13, 5), float64] */;
  %713 = cast(%712, dtype="float32") /* ty=Tensor[(5, 13, 5), float32] */;
  %714 = log2(%713) /* ty=Tensor[(5, 13, 5), float32] */;
  %715 = @func_6308() /* ty=Tensor[(2016), float64] */;
  (%714, %715)
}

def @func_8471() -> Tensor[(2, 11, 2), float32] {
  %716 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %716.2
}

def @func_10965() -> (Tensor[(2, 11, 2), float32],) {
  %717 = @func_6974() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %718 = %717.0;
  (%718,)
}

def @func_11838() -> Tensor[(2, 11, 2), float32] {
  %719 = @func_8208() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %719.1
}

def @func_14697() -> Tensor[(2, 11, 2), float32] {
  %720 = @func_4917() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32]) */;
  %720.2
}

def @func_17057() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %721 = @func_16598() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %722 = %721.2;
  %723 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%722, %723)
}

def @func_13881() -> (Tensor[(2016), float64], Tensor[(2028), uint16], Tensor[(2028, 1), float64]) {
  %724 = cast(meta[relay.Constant][25] /* ty=Tensor[(2028, 1), float64] */, dtype="float64") /* ty=Tensor[(2028, 1), float64] */;
  %725 = reshape(%724, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %726 = @func_1151(%725) /* ty=(Tensor[(2028), uint16],) */;
  %727 = @func_4419() /* ty=Tensor[(2016), float64] */;
  %728 = %726.0;
  (%727, %728, meta[relay.Constant][25] /* ty=Tensor[(2028, 1), float64] */)
}

def @func_8155() -> Tensor[(2, 11, 2), float32] {
  @func_2323() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_13099() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %729 = @func_8842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %730 = @func_4217() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %731 = @func_9254() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %732 = @func_6732() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %733 = %729.1;
  %734 = @func_9997() /* ty=Tensor[(2, 11, 2), float32] */;
  %735 = @func_12103() /* ty=Tensor[(2, 11, 2), float32] */;
  %736 = %730.0;
  %737 = %731.0;
  %738 = %732.0;
  %739 = @func_10911() /* ty=Tensor[(2, 11, 2), float32] */;
  %740 = @func_6615() /* ty=Tensor[(2, 11, 2), float32] */;
  %741 = @func_8686() /* ty=Tensor[(2028), float64] */;
  (%733, %734, %735, %736, %737, %738, %739, %740, %741)
}

def @func_13026() -> Tensor[(2, 11, 2), float32] {
  %742 = @func_11271() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %742.0
}

def @func_14044() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %743 = @func_6588() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %744 = @func_6545() /* ty=(Tensor[(2028), float64],) */;
  %745 = %743.0;
  %746 = %744.0;
  (%745, %746)
}

def @func_5857() -> Tensor[(2, 11, 2), float32] {
  %747 = @func_4885() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %747.0
}

def @func_10364(%var_10355: Tensor[(2880), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(8, 36), float64], Tensor[(2880), float64]) {
  %748 = @func_8029() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %749 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %750 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %751 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 36), float64] */, dtype="float64") /* ty=Tensor[(8, 36), float64] */;
  %752 = cast(%var_10355, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %753 = cast(%var_10355, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %754 = cast(%var_10355, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %755 = reshape(%751, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %756 = reshape(%752, newshape=[288, 10]) /* ty=Tensor[(288, 10), float64] */;
  %757 = reshape(%753, newshape=[288, 10]) /* ty=Tensor[(288, 10), int32] */;
  %758 = reshape(%754, newshape=[288, 10]) /* ty=Tensor[(288, 10), float32] */;
  %759 = @func_6243(%755, %756, %757, %758) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(2, 11, 2), float32], Tensor[(288, 1), float32], Tensor[(288, 10), float32], Tensor[(288, 10), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(288, 10), bool], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %760 = %748.0;
  %761 = %749.0;
  %762 = %750.1;
  %763 = @func_6578() /* ty=Tensor[(2016), float64] */;
  %764 = %759.10;
  (%760, %761, %762, %763, %764, meta[relay.Constant][26] /* ty=Tensor[(8, 36), float64] */, %var_10355)
}

def @func_10125() -> Tensor[(2, 11, 2), float32] {
  @func_9997() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_526() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) {
  %765 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %766 = cast(meta[relay.Constant][27] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %767 = reshape(%766, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
  %768 = @func_447(%767) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
  %769 = %765.0;
  %770 = %768.1;
  (%769, %770, meta[relay.Constant][27] /* ty=Tensor[(2016), float64] */)
}

def @func_4217() -> (Tensor[(2, 11, 2), float32],) {
  %771 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %772 = %771.2;
  (%772,)
}

def @func_10911() -> Tensor[(2, 11, 2), float32] {
  %773 = @func_3394() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %773.0
}

def @func_5105() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %774 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %775 = @func_998() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %776 = %774.1;
  %777 = %775.1;
  (%776, %777)
}

def @func_3350() -> (Tensor[(2, 11, 2), float32],) {
  %778 = @func_2323() /* ty=Tensor[(2, 11, 2), float32] */;
  (%778,)
}

def @func_8988() -> Tensor[(2016), float32] {
  @func_8404() /* ty=Tensor[(2016), float32] */
}

def @func_8404() -> Tensor[(2016), float32] {
  %779 = @func_6523() /* ty=(Tensor[(2016), float32], Tensor[(12, 13, 13), uint64]) */;
  %779.0
}

def @func_6578() -> Tensor[(2016), float64] {
  %780 = @func_3870() /* ty=(Tensor[(2016), float64],) */;
  %780.0
}

def @func_2458() -> (Tensor[(2028), float64],) {
  %781 = @func_1217() /* ty=Tensor[(2028), float64] */;
  (%781,)
}

def @func_12785() -> (Tensor[(2, 11, 2), float32],) {
  %782 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%782,)
}

def @func_12886() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(12, 13, 15), uint16]) {
  %783 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %784 = @func_10166() /* ty=(Tensor[(2016), float64],) */;
  %785 = @func_10417() /* ty=(Tensor[(12, 13, 15), uint16],) */;
  %786 = @func_7408() /* ty=Tensor[(2016), float64] */;
  %787 = %783.0;
  %788 = %784.0;
  %789 = %785.0;
  (%786, %787, %788, %789)
}

def @func_13574(%var_13564: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2028), bool]) {
  %790 = @func_2612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %791 = @func_4337() /* ty=(Tensor[(2028), float64],) */;
  %792 = %791.0;
  %793 = cast(%var_13564, dtype="bool") /* ty=Tensor[(2028), bool] */;
  %794 = shape_of(%792, dtype="int32") /* ty=Tensor[(1), int32] */;
  %795 = cast(%792, dtype="bool") /* ty=Tensor[(2028), bool] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?), bool] */;
  %797 = %790.1;
  %798 = equal(%795, %796) /* ty=Tensor[(2028), bool] */;
  (%797, %798)
}

def @func_11059() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %799 = @func_5661() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %800 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
  %801 = %799.1;
  (%800, %801)
}

def @func_14620() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) {
  %802 = @func_1625() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %803 = %802.1;
  %804 = @func_11037() /* ty=Tensor[(2, 11, 2), float32] */;
  %805 = @func_8988() /* ty=Tensor[(2016), float32] */;
  (%803, %804, %805)
}

def @func_14994() -> (Tensor[(2, 11, 2), float32],) {
  %806 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %807 = %806.0;
  (%807,)
}

def @func_15292() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %808 = @func_9335() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %809 = @func_4875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %810 = %808.1;
  %811 = %809.0;
  (%810, %811)
}

def @func_650() -> (Tensor[(2028), float64],) {
  %812 = @func_526() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) */;
  %813 = %812.1;
  (%813,)
}

def @func_15612() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) {
  %814 = @func_3761() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %815 = %814.1;
  %816 = @func_1454() /* ty=Tensor[(2, 11, 2), float32] */;
  %817 = @func_11664() /* ty=Tensor[(2, 11, 2), float32] */;
  %818 = @func_9990() /* ty=Tensor[(2, 11, 2), float32] */;
  %819 = @func_8404() /* ty=Tensor[(2016), float32] */;
  (%815, %816, %817, %818, %819)
}

def @func_18629() -> Tensor[(2, 11, 2), float32] {
  %820 = @func_10140() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %820.0
}

def @func_18121(%var_18104: Tensor[(126), float64]) -> (Tensor[(2016), float32], Tensor[(14, 9, 1), float64], Tensor[(126), float64]) {
  %821 = cast(%var_18104, dtype="float64") /* ty=Tensor[(126), float64] */;
  %822 = reshape(%821, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float64] */;
  %823 = @func_16832(%822) /* ty=(Tensor[(14, 9, 1), float64],) */;
  %824 = @func_12959() /* ty=Tensor[(2016), float32] */;
  %825 = %823.0;
  (%824, %825, %var_18104)
}

def @func_18805() -> (Tensor[(2, 11, 2), float64], Tensor[(12, 13, 13), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %826 = @func_18374() /* ty=(Tensor[(2, 11, 2), float64],) */;
  %827 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
  %828 = %827.2;
  %829 = cast(%828, dtype="float32") /* ty=Tensor[(12, 13, 13), float32] */;
  %830 = @func_15966() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %831 = @func_9418() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %832 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %833 = %832.0;
  %834 = cast(%833, dtype="float32") /* ty=Tensor[(2028), float32] */;
  %835 = @func_10530() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float64]) */;
  %836 = %826.0;
  %837 = asinh(%829) /* ty=Tensor[(12, 13, 13), float32] */;
  %838 = %830.4;
  %839 = %831.0;
  %840 = sin(%834) /* ty=Tensor[(2028), float32] */;
  %841 = %835.1;
  %842 = @func_7632() /* ty=Tensor[(2, 11, 2), float32] */;
  (%836, %837, %838, %839, %840, %841, %842)
}

def @func_1305() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %843 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
  %844 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %845 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %846 = %843.3;
  %847 = %844.1;
  %848 = %845.0;
  (%846, %847, %848)
}

def @func_4593() -> Tensor[(2, 11, 2), float32] {
  @func_2323() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_13331() -> (Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
  %849 = @func_7980() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), float32]) */;
  %850 = %849.0;
  %851 = @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */;
  %852 = @func_11037() /* ty=Tensor[(2, 11, 2), float32] */;
  (%850, %851, %852)
}

def @func_7141() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) {
  %853 = @func_2885() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) */;
  %854 = @func_6887() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %855 = @func_5857() /* ty=Tensor[(2, 11, 2), float32] */;
  %856 = %853.2;
  %857 = %854.0;
  %858 = @func_5270() /* ty=Tensor[(2, 11, 2), float64] */;
  (%855, %856, %857, %858)
}

def @func_1927(%var_1923: Tensor[(2, 1008), float64]) -> (Tensor[(2028), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 1008), int32]) {
  %859 = @func_1217() /* ty=Tensor[(2028), float64] */;
  %860 = cast(%859, dtype="float32") /* ty=Tensor[(2028), float32] */;
  %861 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %862 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %863 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 1008), float64] */, dtype="float64") /* ty=Tensor[(2, 1008), float64] */;
  %864 = reshape(%863, newshape=[2016, 1]) /* ty=Tensor[(2016, 1), float64] */;
  %865 = @func_1352(%864) /* ty=(Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2028), float64], Tensor[(2016, 1), float64]) */;
  %866 = cast(%var_1923, dtype="int32") /* ty=Tensor[(2, 1008), int32] */;
  %867 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(2, 1008), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %868 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 1008), float64] */, dtype="int32") /* ty=Tensor[(2, 1008), int32] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %870 = erf(%860) /* ty=Tensor[(2028), float32] */;
  %871 = %861.0;
  %872 = %862.0;
  %873 = %865.1;
  %874 = add(%868, %869) /* ty=Tensor[(2, 1008), int32] */;
  (%870, %871, %872, %873, %874)
}

def @func_12170(%var_12134: Tensor[(12, 12, 5), float32], %var_12135: Tensor[(12, 12, 5), float32]) -> (Tensor[(12, 12, 5), float32], Tensor[(2, 11, 2), float32]) {
  %875 = cast(%var_12135, dtype="float32") /* ty=Tensor[(12, 12, 5), float32] */;
  %876 = shape_of(%var_12134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%var_12134, dtype="float32") /* ty=Tensor[(12, 12, 5), float32] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %879 = @func_5105() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %880 = divide(%877, %878) /* ty=Tensor[(12, 12, 5), float32] */;
  %881 = %879.1;
  (%880, %881)
}

def @func_3140(%var_3115: Tensor[(2028), float64]) -> (Tensor[(2, 12, 3), uint8], Tensor[(12, 13, 13), float64], Tensor[(2028), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %882 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 12, 3), uint8] */, dtype="uint8") /* ty=Tensor[(2, 12, 3), uint8] */;
  %883 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(2, 12, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 12, 3), uint8] */, dtype="uint8") /* ty=Tensor[(2, 12, 3), uint8] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %886 = cast(%var_3115, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %887 = reshape(%886, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
  %888 = @func_161(%887) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */;
  %889 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %890 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %891 = bitwise_or(%884, %885) /* ty=Tensor[(2, 12, 3), uint8] */;
  %892 = %888.0;
  %893 = %889.0;
  %894 = %890.0;
  (%891, %892, %var_3115, %893, %894)
}

def @func_15814(%var_15780: Tensor[(13, 11, 3), float64], %var_15794: Tensor[(2, 288), uint64]) -> (Tensor[(13, 11, 3), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2028), float64]) {
  %895 = cast(%var_15780, dtype="float64") /* ty=Tensor[(13, 11, 3), float64] */;
  %896 = @func_15292() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %897 = cast(%var_15794, dtype="uint64") /* ty=Tensor[(2, 288), uint64] */;
  %898 = reshape(%897, newshape=[2, 288]) /* ty=Tensor[(2, 288), uint64] */;
  %899 = @func_5189(%898) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float64], Tensor[(6, 16, 6), float64], Tensor[(12, 13, 13), float64]) */;
  %900 = @func_6384() /* ty=(Tensor[(2028), float64],) */;
  %901 = log10(%895) /* ty=Tensor[(13, 11, 3), float64] */;
  %902 = %896.1;
  %903 = %899.0;
  %904 = %900.0;
  (%901, %902, %903, %var_15794, %904)
}

def @func_6679(%var_6644: Tensor[(8, 8, 16), float64], %var_6645: Tensor[(8, 8, 16), float64]) -> (Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), float32]) {
  %905 = cast(%var_6645, dtype="float64") /* ty=Tensor[(8, 8, 16), float64] */;
  %906 = shape_of(%var_6644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %907 = cast(%var_6644, dtype="float64") /* ty=Tensor[(8, 8, 16), float64] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %909 = @func_2066() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %910 = floor_divide(%907, %908) /* ty=Tensor[(8, 8, 16), float64] */;
  %911 = %909.0;
  (%910, %911)
}

def @func_11330(%var_11273: Tensor[(6, 3, 9), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), int32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), float32], Tensor[(2016), float64]) {
  %912 = cast(%var_11273, dtype="float64") /* ty=Tensor[(6, 3, 9), float64] */;
  %913 = rsqrt(%912) /* ty=Tensor[(6, 3, 9), float64] */;
  %914 = cast(%var_11273, dtype="int32") /* ty=Tensor[(6, 3, 9), int32] */;
  %915 = shape_of(%913, dtype="int32") /* ty=Tensor[(3), int32] */;
  %916 = cast(%913, dtype="int32") /* ty=Tensor[(6, 3, 9), int32] */;
  %917 = dyn.reshape(%914, %915, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %918 = @func_8518() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %919 = @func_2572() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %920 = cast(%var_11273, dtype="float32") /* ty=Tensor[(6, 3, 9), float32] */;
  %921 = @func_6615() /* ty=Tensor[(2, 11, 2), float32] */;
  %922 = add(%916, %917) /* ty=Tensor[(6, 3, 9), int32] */;
  %923 = %918.1;
  %924 = %919.0;
  %925 = exp(%920) /* ty=Tensor[(6, 3, 9), float32] */;
  %926 = @func_4419() /* ty=Tensor[(2016), float64] */;
  (%921, %922, %923, %924, %925, %926)
}

def @func_589() -> (Tensor[(2, 11, 2), float32],) {
  %927 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %928 = %927.1;
  (%928,)
}

def @func_11271() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %929 = @func_9648() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(9, 10, 16), float64], Tensor[(20, 72), float64], Tensor[(2028), float32]) */;
  %930 = @func_526() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) */;
  %931 = %929.0;
  %932 = %930.2;
  (%931, %932)
}

def @func_17998() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float64]) {
  %933 = @func_7408() /* ty=Tensor[(2016), float64] */;
  %934 = @func_5270() /* ty=Tensor[(2, 11, 2), float64] */;
  (%933, %934)
}

def @func_18294() -> (Tensor[(2028), float64],) {
  %935 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %936 = %935.0;
  (%936,)
}

def @func_11904(%var_11888: Tensor[(2028), float64]) -> (Tensor[(2028), bool], Tensor[(2, 11, 2), float32]) {
  %937 = @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %938 = %937.2;
  %939 = cast(%var_11888, dtype="bool") /* ty=Tensor[(2028), bool] */;
  %940 = shape_of(%938, dtype="int32") /* ty=Tensor[(1), int32] */;
  %941 = cast(%938, dtype="bool") /* ty=Tensor[(2028), bool] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?), bool] */;
  %943 = @func_7141() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) */;
  %944 = greater(%941, %942) /* ty=Tensor[(2028), bool] */;
  %945 = %943.1;
  (%944, %945)
}

def @func_12394(%var_12371: Tensor[(10, 12, 8), float32]) -> (Tensor[(10, 12, 8), float32], Tensor[(2, 11, 2), float32], Tensor[(576), uint64], Tensor[(2, 11, 2), float32]) {
  %946 = cast(%var_12371, dtype="float32") /* ty=Tensor[(10, 12, 8), float32] */;
  %947 = cast(meta[relay.Constant][31] /* ty=Tensor[(576), uint64] */, dtype="uint64") /* ty=Tensor[(576), uint64] */;
  %948 = reshape(%947, newshape=[2, 288]) /* ty=Tensor[(2, 288), uint64] */;
  %949 = @func_5189(%948) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float64], Tensor[(6, 16, 6), float64], Tensor[(12, 13, 13), float64]) */;
  %950 = @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %951 = atan(%946) /* ty=Tensor[(10, 12, 8), float32] */;
  %952 = %949.0;
  %953 = %950.1;
  (%951, %952, meta[relay.Constant][31] /* ty=Tensor[(576), uint64] */, %953)
}

def @func_2428() -> Tensor[(2, 11, 2), float32] {
  %954 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %954.0
}

def @func_5661() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %955 = @func_4632() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %956 = %955.2;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %958 = reshape(%957, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
  %959 = @func_3033(%958) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) */;
  %960 = @func_4031() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %961 = %959.0;
  %962 = %960.1;
  (%956, %961, %962)
}

def @func_6906() -> Tensor[(2, 11, 2), float32] {
  %963 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %963.0
}

def @func_6872(%var_6839: uint32, %var_6840: Tensor[(12, 13, 1), uint32]) -> Tensor[(12, 13, 1), bool] {
  %964 = cast(%var_6839, dtype="bool") /* ty=bool */;
  %965 = cast(%var_6840, dtype="bool") /* ty=Tensor[(12, 13, 1), bool] */;
  %966 = less(%964, %965) /* ty=Tensor[(12, 13, 1), bool] */;
  %967 = cast(%var_6839, dtype="bool") /* ty=bool */;
  %968 = cast(%966, dtype="bool") /* ty=Tensor[(12, 13, 1), bool] */;
  less_equal(%967, %968) /* ty=Tensor[(12, 13, 1), bool] */
}

def @func_3854(%var_3847: int8, %var_3848: Tensor[(10, 13, 1), int8]) -> Tensor[(10, 13, 1), int8] {
  %969 = cast(%var_3847, dtype="int8") /* ty=int8 */;
  %970 = cast(%var_3848, dtype="int8") /* ty=Tensor[(10, 13, 1), int8] */;
  bitwise_and(%969, %970) /* ty=Tensor[(10, 13, 1), int8] */
}

def @func_8770() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %971 = @func_6974() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %972 = @func_7408() /* ty=Tensor[(2016), float64] */;
  %973 = %971.0;
  (%972, %973)
}

def @func_7321() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64]) {
  %974 = @func_5105() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %975 = @func_4070() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %976 = @func_5926() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %977 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
  %978 = %977.2;
  %979 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 13, 13), uint64] */, dtype="float64") /* ty=Tensor[(12, 13, 13), float64] */;
  %980 = shape_of(%978, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(%978, dtype="float64") /* ty=Tensor[(12, 13, 13), float64] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %983 = %974.0;
  %984 = %975.0;
  %985 = %976.0;
  %986 = floor_mod(%981, %982) /* ty=Tensor[(12, 13, 13), float64] */;
  (%983, %984, %985, %986)
}

def @func_11500() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %987 = @func_10641() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %988 = @func_6964() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %989 = @func_7381() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %990 = @func_8937() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2016), float32], Tensor[(2028), float64]) */;
  %991 = @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %992 = @func_2057() /* ty=(Tensor[(2016), float64],) */;
  %993 = %987.0;
  %994 = %988.0;
  %995 = %989.1;
  %996 = @func_9997() /* ty=Tensor[(2, 11, 2), float32] */;
  %997 = %990.2;
  %998 = %991.0;
  %999 = %992.0;
  (%993, %994, %995, %996, %997, %998, %999)
}

def @func_4419() -> Tensor[(2016), float64] {
  %1000 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1000.0
}

def @func_13991(%var_13978: Tensor[(2, 4, 4), uint64]) -> Tensor[(2, 4, 4), bool] {
  %1001 = cast(meta[relay.Constant][33] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %1002 = cast(%var_13978, dtype="bool") /* ty=Tensor[(2, 4, 4), bool] */;
  not_equal(%1001, %1002) /* ty=Tensor[(2, 4, 4), bool] */
}

def @func_8842() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1003 = @func_4632() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %1004 = @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1005 = %1003.0;
  %1006 = %1004.1;
  (%1005, %1006)
}

def @func_13456() -> Tensor[(2, 11, 2), float32] {
  %1007 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %1007.1
}

def @func_16967() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2016), float64]) {
  %1008 = @func_5677() /* ty=Tensor[(2, 11, 2), float32] */;
  %1009 = cast(%1008, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %1010 = reshape(%1009, newshape=[2, 11, 2]) /* ty=Tensor[(2, 11, 2), float32] */;
  %1011 = @func_1708(%1010) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool]) */;
  %1012 = @func_5661() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1013 = %1011.1;
  %1014 = %1012.0;
  (%1008, %1013, %1014)
}

def @func_9914() -> Tensor[(2, 11, 2), float32] {
  %1015 = @func_6732() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1015.1
}

def @func_10530() -> (Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float64]) {
  %1016 = @func_7980() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), float32]) */;
  %1017 = @func_7980() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), float32]) */;
  %1018 = %1016.0;
  %1019 = @func_8155() /* ty=Tensor[(2, 11, 2), float32] */;
  %1020 = @func_9914() /* ty=Tensor[(2, 11, 2), float32] */;
  %1021 = @func_6578() /* ty=Tensor[(2016), float64] */;
  %1022 = %1017.0;
  (%1018, %1019, %1020, %1021, %1022)
}

def @func_18842() -> Tensor[(2, 11, 2), float32] {
  @func_11838() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_12103() -> Tensor[(2, 11, 2), float32] {
  %1023 = @func_11511() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32], Tensor[(3, 117), float32]) */;
  %1023.0
}

def @func_2523() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1024 = @func_1594() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1025 = @func_2057() /* ty=(Tensor[(2016), float64],) */;
  %1026 = @func_589() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1027 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1028 = %1024.1;
  %1029 = %1025.0;
  %1030 = %1026.0;
  %1031 = %1027.2;
  (%1028, %1029, %1030, %1031)
}

def @main(%var_18960: float64, %var_18961: Tensor[(8, 14, 12), float64]) -> Tensor[(8, 14, 12), float64] {
  %1032 = cast(%var_18960, dtype="float64") /* ty=float64 */;
  %1033 = cast(%var_18961, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  divide(%1032, %1033) /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_190() -> (Tensor[(2, 11, 2), float32],) {
  %1034 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1035 = %1034.0;
  (%1035,)
}

def @func_6545() -> (Tensor[(2028), float64],) {
  %1036 = @func_2458() /* ty=(Tensor[(2028), float64],) */;
  %1037 = %1036.0;
  %1038 = cast(%1037, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1039 = cos(%1038) /* ty=Tensor[(2028), float64] */;
  (%1039,)
}

def @func_8794() -> (Tensor[(2, 11, 2), float32], Tensor[(12, 13, 1), bool], uint32, Tensor[(39, 4), uint32]) {
  %1040 = cast(meta[relay.Constant][34] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1041 = cast(meta[relay.Constant][35] /* ty=Tensor[(39, 4), uint32] */, dtype="uint32") /* ty=Tensor[(39, 4), uint32] */;
  %1042 = reshape(%1040, newshape=[]) /* ty=uint32 */;
  %1043 = reshape(%1041, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), uint32] */;
  %1044 = @func_7045() /* ty=Tensor[(2, 11, 2), float32] */;
  %1045 = @func_6872(%1042, %1043) /* ty=Tensor[(12, 13, 1), bool] */;
  (%1044, %1045, meta[relay.Constant][34] /* ty=uint32 */, meta[relay.Constant][35] /* ty=Tensor[(39, 4), uint32] */)
}

def @func_1151(%var_1135: Tensor[(2028), float64]) -> (Tensor[(2028), uint16],) {
  %1046 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %1047 = %1046.0;
  %1048 = cast(%var_1135, dtype="uint16") /* ty=Tensor[(2028), uint16] */;
  %1049 = shape_of(%1047, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1050 = cast(%1047, dtype="uint16") /* ty=Tensor[(2028), uint16] */;
  %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1052 = logical_xor(%1050, %1051) /* ty=Tensor[(2028), uint16] */;
  (%1052,)
}

def @func_8456() -> (Tensor[(2, 11, 2), float32],) {
  %1053 = @func_7265() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1053,)
}

def @func_3299(%var_3216: Tensor[(2016), float64], %var_3245: Tensor[(12, 13, 15), uint16], %var_3265: Tensor[(576), uint64]) -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), float64], Tensor[(2, 11, 2), float32], Tensor[(576), uint64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float32]) {
  %1054 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1055 = @func_1594() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1056 = %1055.0;
  %1057 = cast(%var_3245, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %1058 = shape_of(%1056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1059 = cast(%1056, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1061 = cast(%var_3265, dtype="uint64") /* ty=Tensor[(576), uint64] */;
  %1062 = reshape(%1061, newshape=[6, 16, 6]) /* ty=Tensor[(6, 16, 6), uint64] */;
  %1063 = @func_1404(%1062) /* ty=(Tensor[(6, 16, 6), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %1064 = @func_1594() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1065 = @func_2885() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) */;
  %1066 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1067 = cast(%var_3216, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1068 = reshape(%1067, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
  %1069 = @func_447(%1068) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
  %1070 = %1069.2;
  %1071 = cast(%1070, dtype="float64") /* ty=Tensor[(12, 13, 13), float64] */;
  %1072 = sigmoid(%1071) /* ty=Tensor[(12, 13, 13), float64] */;
  %1073 = cast(%1072, dtype="float32") /* ty=Tensor[(12, 13, 13), float32] */;
  %1074 = %1054.0;
  %1075 = power(%1059, %1060) /* ty=Tensor[(12, 13, 15), float64] */;
  %1076 = %1063.2;
  %1077 = %1064.0;
  %1078 = %1065.0;
  %1079 = %1066.1;
  %1080 = atanh(%1073) /* ty=Tensor[(12, 13, 13), float32] */;
  (%var_3216, %1074, %1075, %1076, %var_3265, %1077, %1078, %1079, %1080)
}

def @func_3430(%var_3423: Tensor[(15, 8, 7), float64]) -> (Tensor[(15, 8, 7), bool], Tensor[(2, 11, 2), float32]) {
  %1081 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 8, 7), float64] */, dtype="bool") /* ty=Tensor[(15, 8, 7), bool] */;
  %1082 = shape_of(%var_3423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1083 = cast(%var_3423, dtype="bool") /* ty=Tensor[(15, 8, 7), bool] */;
  %1084 = dyn.reshape(%1081, %1082, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1085 = greater_equal(%1083, %1084) /* ty=Tensor[(15, 8, 7), bool] */;
  %1086 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1085, %1086)
}

def @func_909() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1087 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
  %1088 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1089 = %1087.1;
  %1090 = %1088.0;
  (%1089, %1090)
}

def @func_17820() -> Tensor[(3, 3, 10), float32] {
  %1091 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 3, 10), float32] */;
  rsqrt(%1091) /* ty=Tensor[(3, 3, 10), float32] */
}

def @func_1352(%var_1349: Tensor[(2016, 1), float64]) -> (Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2028), float64], Tensor[(2016, 1), float64]) {
  %1092 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1093 = %1092.0;
  %1094 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  %1095 = cast(%1094, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %1096 = shape_of(%1093, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1097 = cast(%1093, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1099 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %1100 = cast(%var_1349, dtype="float64") /* ty=Tensor[(2016, 1), float64] */;
  %1101 = reshape(%1100, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
  %1102 = @func_447(%1101) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
  %1103 = less(%1097, %1098) /* ty=Tensor[(2, 11, 2), bool] */;
  %1104 = @func_712() /* ty=Tensor[(2, 11, 2), float32] */;
  %1105 = %1099.0;
  %1106 = %1102.1;
  (%1103, %1104, %1105, %1106, %var_1349)
}

def @func_15442(%var_15356: uint16, %var_15357: Tensor[(480), uint16], %var_15382: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(3, 5, 8), float32], Tensor[(120), float32], Tensor[(12, 4, 10), bool], uint16, Tensor[(480), uint16], Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(9, 16, 14), float64]) {
  %1107 = @func_7321() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64]) */;
  %1108 = cast(meta[relay.Constant][38] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1109 = reshape(%1108, newshape=[3, 5, 8]) /* ty=Tensor[(3, 5, 8), float32] */;
  %1110 = cast(%var_15356, dtype="uint16") /* ty=uint16 */;
  %1111 = cast(%var_15357, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %1112 = reshape(%1110, newshape=[]) /* ty=uint16 */;
  %1113 = reshape(%1111, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), uint16] */;
  %1114 = @func_4683(%1112, %1113) /* ty=(Tensor[(12, 4, 10), bool], Tensor[(2, 11, 2), float32]) */;
  %1115 = @func_12886() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(12, 13, 15), uint16]) */;
  %1116 = cast(meta[relay.Constant][39] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1117 = reshape(%1116, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
  %1118 = @func_3033(%1117) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) */;
  %1119 = @func_6974() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1120 = cast(%var_15382, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1121 = cast(%var_15382, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1122 = cast(%var_15382, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1123 = reshape(%1120, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %1124 = reshape(%1121, newshape=[1014, 2]) /* ty=Tensor[(1014, 2), float64] */;
  %1125 = reshape(%1122, newshape=[1014, 2]) /* ty=Tensor[(1014, 2), float64] */;
  %1126 = @func_5376(%1123, %1124, %1125) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(1014, 2), int64], Tensor[(6, 7, 9), float64], Tensor[(42), float64], Tensor[(1014, 2), bool], Tensor[(2, 11, 2), float64], Tensor[(2028), float64]) */;
  %1127 = @func_2572() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1128 = @func_14963() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) */;
  %1129 = cast(meta[relay.Constant][39] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1130 = reshape(%1129, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
  %1131 = @func_3033(%1130) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) */;
  %1132 = %1107.2;
  %1133 = @func_2645(%1109) /* ty=Tensor[(3, 5, 8), float32] */;
  %1134 = %1114.0;
  %1135 = %1115.1;
  %1136 = %1118.1;
  %1137 = %1119.0;
  %1138 = %1126.2;
  %1139 = @func_9278() /* ty=Tensor[(12, 13, 15), uint16] */;
  %1140 = %1127.0;
  %1141 = %1128.3;
  %1142 = %1131.1;
  (%1132, %1133, meta[relay.Constant][38] /* ty=Tensor[(120), float32] */, %1134, %var_15356, %var_15357, %1135, %1136, meta[relay.Constant][39] /* ty=Tensor[(2016), float64] */, %1137, %1138, %var_15382, %1139, %1140, %1141, %1142)
}

def @func_11111() -> (Tensor[(12, 1, 13), float64],) {
  %1143 = @func_10080() /* ty=(Tensor[(12, 1, 13), float64], Tensor[(2, 11, 2), float32]) */;
  %1144 = %1143.0;
  %1145 = cast(%1144, dtype="float64") /* ty=Tensor[(12, 1, 13), float64] */;
  %1146 = sqrt(%1145) /* ty=Tensor[(12, 1, 13), float64] */;
  (%1146,)
}

def @func_7381() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1147 = @func_2066() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1148 = @func_6964() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1149 = %1147.0;
  %1150 = %1148.0;
  (%1149, %1150)
}

def @func_2057() -> (Tensor[(2016), float64],) {
  %1151 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
  %1152 = %1151.3;
  (%1152,)
}

def @func_16598() -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1153 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1154 = @func_8686() /* ty=Tensor[(2028), float64] */;
  %1155 = %1153.2;
  %1156 = @func_2695() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1154, %1155, %1156)
}

def @func_18610() -> Tensor[(5, 7, 10), float32] {
  %1157 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 7, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  atan(%1157) /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_11191() -> Tensor[(2, 11, 2), float32] {
  @func_5596() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_9418() -> (Tensor[(2, 11, 2), float32],) {
  %1158 = @func_3701() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1158,)
}

def @func_18948(%var_18921: Tensor[(6, 10, 10), int64], %var_18922: Tensor[(6, 10, 10), int64]) -> (Tensor[(6, 10, 10), int64],) {
  %1159 = cast(%var_18922, dtype="int64") /* ty=Tensor[(6, 10, 10), int64] */;
  %1160 = shape_of(%var_18921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1161 = cast(%var_18921, dtype="int64") /* ty=Tensor[(6, 10, 10), int64] */;
  %1162 = dyn.reshape(%1159, %1160, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1163 = add(%1161, %1162) /* ty=Tensor[(6, 10, 10), int64] */;
  (%1163,)
}

def @func_5508() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) {
  %1164 = @func_4419() /* ty=Tensor[(2016), float64] */;
  %1165 = cast(%1164, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %1166 = @func_4885() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1167 = @func_3521() /* ty=Tensor[(2, 11, 2), float32] */;
  %1168 = cos(%1165) /* ty=Tensor[(2016), float32] */;
  %1169 = %1166.0;
  (%1167, %1168, %1169)
}

def @func_7980() -> (Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), float32]) {
  %1170 = @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */;
  %1171 = cast(%1170, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %1172 = @func_5270() /* ty=Tensor[(2, 11, 2), float64] */;
  %1173 = acos(%1171) /* ty=Tensor[(12, 13, 15), float32] */;
  (%1172, %1173)
}

def @func_9648() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(9, 10, 16), float64], Tensor[(20, 72), float64], Tensor[(2028), float32]) {
  %1174 = @func_5508() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) */;
  %1175 = @func_909() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1176 = @func_9406() /* ty=(Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) */;
  %1177 = @func_2458() /* ty=(Tensor[(2028), float64],) */;
  %1178 = %1177.0;
  %1179 = cast(%1178, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1180 = atan(%1179) /* ty=Tensor[(2028), float64] */;
  %1181 = cast(%1180, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1182 = acosh(%1181) /* ty=Tensor[(2028), float64] */;
  %1183 = cast(%1182, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1184 = @func_7738() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1185 = @func_9144() /* ty=(Tensor[(2, 11, 2), bool], Tensor[(36, 16), int16]) */;
  %1186 = cast(meta[relay.Constant][41] /* ty=Tensor[(20, 72), float64] */, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %1187 = reshape(%1186, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %1188 = @func_8128(%1187) /* ty=(Tensor[(9, 10, 16), float64],) */;
  %1189 = cast(%1182, dtype="float32") /* ty=Tensor[(2028), float32] */;
  %1190 = %1174.2;
  %1191 = %1175.0;
  %1192 = @func_7570() /* ty=Tensor[(2, 11, 2), float64] */;
  %1193 = %1176.0;
  %1194 = acos(%1183) /* ty=Tensor[(2028), float64] */;
  %1195 = %1184.0;
  %1196 = %1185.0;
  %1197 = %1188.0;
  %1198 = log10(%1189) /* ty=Tensor[(2028), float32] */;
  (%1190, %1191, %1192, %1193, %1194, %1195, %1196, %1197, meta[relay.Constant][41] /* ty=Tensor[(20, 72), float64] */, %1198)
}

def @func_11511() -> (Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32], Tensor[(3, 117), float32]) {
  %1199 = @func_2612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %1200 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 117), float32] */, dtype="float32") /* ty=Tensor[(3, 117), float32] */;
  %1201 = reshape(%1200, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), float32] */;
  %1202 = @func_8582(%1201) /* ty=(Tensor[(9, 3, 13), float32], Tensor[(9, 3, 13), int64]) */;
  %1203 = %1199.1;
  %1204 = %1202.0;
  (%1203, %1204, meta[relay.Constant][42] /* ty=Tensor[(3, 117), float32] */)
}

def @func_16048() -> (Tensor[(12, 13, 15), uint16],) {
  %1205 = @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */;
  (%1205,)
}

def @func_13249() -> Tensor[(12, 13, 15), uint16] {
  %1206 = @func_9254() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %1206.0
}

def @func_17971() -> Tensor[(2028), float32] {
  %1207 = @func_4917() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32]) */;
  %1207.1
}

def @func_2695() -> Tensor[(2, 11, 2), float32] {
  %1208 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1208.0
}

def @func_18899() -> Tensor[(2, 11, 2), float32] {
  %1209 = @func_9335() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %1209.0
}

def @func_5376(%var_5318: Tensor[(2028), float64], %var_5331: Tensor[(1014, 2), float64], %var_5359: Tensor[(1014, 2), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(1014, 2), int64], Tensor[(6, 7, 9), float64], Tensor[(42), float64], Tensor[(1014, 2), bool], Tensor[(2, 11, 2), float64], Tensor[(2028), float64]) {
  %1210 = @func_4885() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1211 = cast(%var_5318, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1212 = reshape(%1211, newshape=[1014, 2]) /* ty=Tensor[(1014, 2), float64] */;
  %1213 = @func_1769(%1212) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(1014, 2), float64]) */;
  %1214 = %1213.3;
  %1215 = cast(%var_5331, dtype="int64") /* ty=Tensor[(1014, 2), int64] */;
  %1216 = shape_of(%1214, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1217 = cast(%1214, dtype="int64") /* ty=Tensor[(1014, 2), int64] */;
  %1218 = dyn.reshape(%1215, %1216, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1219 = cast(meta[relay.Constant][43] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %1220 = reshape(%1219, newshape=[6, 7, 1]) /* ty=Tensor[(6, 7, 1), float64] */;
  %1221 = @func_3593(%1220) /* ty=(Tensor[(6, 7, 9), float64],) */;
  %1222 = cast(%var_5359, dtype="bool") /* ty=Tensor[(1014, 2), bool] */;
  %1223 = shape_of(%var_5331, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1224 = cast(%var_5331, dtype="bool") /* ty=Tensor[(1014, 2), bool] */;
  %1225 = dyn.reshape(%1222, %1223, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1226 = @func_4733() /* ty=(Tensor[(2, 11, 2), float64],) */;
  %1227 = cast(%var_5318, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1228 = %1210.0;
  %1229 = @func_2846() /* ty=Tensor[(2, 11, 2), float64] */;
  %1230 = @func_3701() /* ty=Tensor[(2, 11, 2), float32] */;
  %1231 = minimum(%1217, %1218) /* ty=Tensor[(1014, 2), int64] */;
  %1232 = %1221.0;
  %1233 = not_equal(%1224, %1225) /* ty=Tensor[(1014, 2), bool] */;
  %1234 = %1226.0;
  %1235 = rsqrt(%1227) /* ty=Tensor[(2028), float64] */;
  (%1228, %1229, %1230, %1231, %1232, meta[relay.Constant][43] /* ty=Tensor[(42), float64] */, %1233, %1234, %1235)
}

def @func_5579(%var_5567: Tensor[(240, 2), uint16]) -> (Tensor[(2, 11, 2), float32], Tensor[(12, 4, 10), bool], uint16, Tensor[(240, 2), uint16], Tensor[(2028), float64]) {
  %1236 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1237 = cast(meta[relay.Constant][44] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1238 = cast(%var_5567, dtype="uint16") /* ty=Tensor[(240, 2), uint16] */;
  %1239 = reshape(%1237, newshape=[]) /* ty=uint16 */;
  %1240 = reshape(%1238, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), uint16] */;
  %1241 = @func_4683(%1239, %1240) /* ty=(Tensor[(12, 4, 10), bool], Tensor[(2, 11, 2), float32]) */;
  %1242 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %1243 = %1236.1;
  %1244 = %1241.0;
  %1245 = %1242.0;
  (%1243, %1244, meta[relay.Constant][44] /* ty=uint16 */, %var_5567, %1245)
}

def @func_15732() -> Tensor[(2, 11, 2), float32] {
  @func_11838() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_294() -> Tensor[(2, 11, 2), float32] {
  %1246 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1246.0
}

def @func_18344() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %1247 = @func_13653() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1248 = @func_6578() /* ty=Tensor[(2016), float64] */;
  %1249 = %1247.1;
  (%1248, %1249)
}

def @func_18449() -> Tensor[(12, 13, 15), bool] {
  %1250 = @func_15023() /* ty=(Tensor[(12, 13, 15), uint16],) */;
  %1251 = %1250.0;
  %1252 = cast(%1251, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %1253 = sin(%1252) /* ty=Tensor[(12, 13, 15), float64] */;
  %1254 = cast(%1253, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %1255 = shape_of(%1251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1256 = cast(%1251, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %1257 = dyn.reshape(%1254, %1255, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1258 = floor_mod(%1256, %1257) /* ty=Tensor[(12, 13, 15), float64] */;
  %1259 = cast(%1253, dtype="bool") /* ty=Tensor[(12, 13, 15), bool] */;
  %1260 = shape_of(%1258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1261 = cast(%1258, dtype="bool") /* ty=Tensor[(12, 13, 15), bool] */;
  %1262 = dyn.reshape(%1259, %1260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1261, %1262) /* ty=Tensor[(12, 13, 15), bool] */
}

def @func_8582(%var_8578: Tensor[(9, 3, 13), float32]) -> (Tensor[(9, 3, 13), float32], Tensor[(9, 3, 13), int64]) {
  %1263 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 3, 13), float32] */, dtype="float32") /* ty=Tensor[(9, 3, 13), float32] */;
  %1264 = cast(%var_8578, dtype="int64") /* ty=Tensor[(9, 3, 13), int64] */;
  %1265 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(9, 3, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1266 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 3, 13), float32] */, dtype="int64") /* ty=Tensor[(9, 3, 13), int64] */;
  %1267 = dyn.reshape(%1264, %1265, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1268 = acosh(%1263) /* ty=Tensor[(9, 3, 13), float32] */;
  %1269 = bitwise_and(%1266, %1267) /* ty=Tensor[(9, 3, 13), int64] */;
  (%1268, %1269)
}

def @func_5270() -> Tensor[(2, 11, 2), float64] {
  @func_2846() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_11618() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1270 = @func_9648() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(9, 10, 16), float64], Tensor[(20, 72), float64], Tensor[(2028), float32]) */;
  %1271 = @func_9914() /* ty=Tensor[(2, 11, 2), float32] */;
  %1272 = %1270.0;
  (%1271, %1272)
}

def @func_1065() -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
  %1273 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 13, 15), uint16] */, dtype="uint16") /* ty=Tensor[(12, 13, 15), uint16] */;
  %1274 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(12, 13, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1275 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 13, 15), uint16] */, dtype="uint16") /* ty=Tensor[(12, 13, 15), uint16] */;
  %1276 = dyn.reshape(%1273, %1274, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1277 = left_shift(%1275, %1276) /* ty=Tensor[(12, 13, 15), uint16] */;
  %1278 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1277, %1278)
}

def @func_11982() -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1279 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %1280 = @func_8842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1281 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1282 = %1279.0;
  %1283 = %1280.1;
  %1284 = %1281.0;
  (%1282, %1283, %1284)
}

def @func_1454() -> Tensor[(2, 11, 2), float32] {
  %1285 = @func_909() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1285.1
}

def @func_6785() -> (Tensor[(2016), float64], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1286 = @func_526() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) */;
  %1287 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %1288 = %1287.0;
  %1289 = cast(%1288, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1290 = reshape(%1289, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %1291 = @func_3140(%1290) /* ty=(Tensor[(2, 12, 3), uint8], Tensor[(12, 13, 13), float64], Tensor[(2028), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %1292 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1293 = %1286.2;
  %1294 = %1291.4;
  %1295 = %1292.0;
  (%1293, %1288, %1294, %1295)
}

def @func_4632() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %1296 = @func_589() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1297 = cast(meta[relay.Constant][48] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1298 = reshape(%1297, newshape=[2, 1008]) /* ty=Tensor[(2, 1008), float64] */;
  %1299 = @func_1927(%1298) /* ty=(Tensor[(2028), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 1008), int32]) */;
  %1300 = %1296.0;
  %1301 = %1299.2;
  (%1300, %1301, meta[relay.Constant][48] /* ty=Tensor[(2016), float64] */)
}

def @func_6308() -> Tensor[(2016), float64] {
  %1302 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1302.0
}

def @func_13404() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1303 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1304 = @func_10054() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1305 = %1303.0;
  %1306 = @func_2323() /* ty=Tensor[(2, 11, 2), float32] */;
  %1307 = %1304.1;
  (%1305, %1306, %1307)
}

def @func_8236(%var_8210: Tensor[(5, 6, 3), float64], %var_8211: Tensor[(5, 6, 3), float64]) -> Tensor[(5, 6, 3), float64] {
  %1308 = cast(%var_8211, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %1309 = shape_of(%var_8210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1310 = cast(%var_8210, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %1311 = dyn.reshape(%1308, %1309, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1310, %1311) /* ty=Tensor[(5, 6, 3), float64] */
}

def @func_17377() -> (Tensor[(8, 8, 16), float64], Tensor[(6, 16, 3), float64], Tensor[(288), float64], Tensor[(2, 11, 2), float32]) {
  %1312 = @func_11812() /* ty=(Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(288), float64], Tensor[(2, 11, 2), float32]) */;
  %1313 = cast(meta[relay.Constant][49] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1314 = cast(meta[relay.Constant][49] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1315 = reshape(%1313, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
  %1316 = reshape(%1314, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
  %1317 = %1312.0;
  %1318 = @func_2190(%1315, %1316) /* ty=Tensor[(6, 16, 3), float64] */;
  %1319 = @func_11037() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1317, %1318, meta[relay.Constant][49] /* ty=Tensor[(288), float64] */, %1319)
}

def @func_10200() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %1320 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %1321 = @func_7265() /* ty=Tensor[(2, 11, 2), float32] */;
  %1322 = %1320.0;
  (%1321, %1322)
}

def @func_12753() -> (Tensor[(2, 11, 2), float32],) {
  %1323 = @func_1625() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1324 = %1323.0;
  (%1324,)
}

def @func_2783() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) {
  %1325 = @func_2323() /* ty=Tensor[(2, 11, 2), float32] */;
  %1326 = cast(%1325, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %1327 = reshape(%1326, newshape=[2, 11, 2]) /* ty=Tensor[(2, 11, 2), float32] */;
  %1328 = @func_1708(%1327) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool]) */;
  %1329 = %1328.0;
  %1330 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %1331 = %1330.1;
  %1332 = cast(%1331, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %1333 = shape_of(%1329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1334 = cast(%1329, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %1335 = dyn.reshape(%1332, %1333, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1336 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1337 = logical_and(%1334, %1335) /* ty=Tensor[(2, 11, 2), bool] */;
  %1338 = %1336.0;
  (%1325, %1337, %1338)
}

def @func_10434() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %1339 = @func_6493() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1340 = @func_9367() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1341 = %1339.1;
  %1342 = %1340.0;
  (%1341, %1342)
}

def @func_15862() -> (Tensor[(2, 11, 2), float32],) {
  %1343 = @func_14697() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1343,)
}

def @func_1875() -> (Tensor[(2, 11, 2), float32],) {
  %1344 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1345 = %1344.1;
  (%1345,)
}

def @func_12637() -> (Tensor[(2, 11, 2), float32],) {
  %1346 = @func_2572() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1347 = %1346.0;
  (%1347,)
}

def @func_16832(%var_16824: Tensor[(14, 9, 1), float64]) -> (Tensor[(14, 9, 1), float64],) {
  %1348 = cast(%var_16824, dtype="float64") /* ty=Tensor[(14, 9, 1), float64] */;
  %1349 = exp(%1348) /* ty=Tensor[(14, 9, 1), float64] */;
  (%1349,)
}

def @func_1104() -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) {
  %1350 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %1351 = @func_589() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1352 = %1350.0;
  %1353 = %1351.0;
  (%1352, %1353)
}

def @func_6887() -> (Tensor[(2, 11, 2), float32],) {
  %1354 = @func_909() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1355 = %1354.0;
  (%1355,)
}

def @func_729() -> Tensor[(2, 11, 2), float32] {
  @func_712() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_2572() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1356 = @func_589() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1357 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %1358 = %1356.0;
  %1359 = %1357.1;
  (%1358, %1359)
}

def @func_1727() -> (Tensor[(2, 11, 2), float32],) {
  %1360 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1361 = %1360.2;
  (%1361,)
}

def @func_6711() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1362 = @func_2885() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) */;
  %1363 = %1362.2;
  %1364 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1363, %1364)
}

def @func_15035() -> Tensor[(2, 11, 2), float32] {
  @func_5677() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_7436() -> Tensor[(12, 13, 15), uint16] {
  %1365 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1365.2
}

def @func_15908() -> (Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1366 = @func_4733() /* ty=(Tensor[(2, 11, 2), float64],) */;
  %1367 = @func_8208() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1368 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1369 = %1366.0;
  %1370 = %1367.1;
  %1371 = %1368.0;
  (%1369, %1370, %1371)
}

def @func_13213(%var_13192: uint16, %var_13207: Tensor[(2028), float64]) -> (Tensor[(2, 14, 14), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), uint16], Tensor[(2028), float64]) {
  %1372 = cast(%var_13192, dtype="bool") /* ty=bool */;
  %1373 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 14, 14), uint16] */, dtype="bool") /* ty=Tensor[(2, 14, 14), bool] */;
  %1374 = @func_11633() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1375 = cast(%var_13207, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1376 = reshape(%1375, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %1377 = @func_1151(%1376) /* ty=(Tensor[(2028), uint16],) */;
  %1378 = equal(%1372, %1373) /* ty=Tensor[(2, 14, 14), bool] */;
  %1379 = %1374.0;
  %1380 = %1377.0;
  (%1378, %1379, %1380, %var_13207)
}

def @func_14194() -> (Tensor[(2, 11, 2), float32],) {
  %1381 = @func_12993() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1381,)
}

def @func_3033(%var_3031: Tensor[(2016), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) {
  %1382 = @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1383 = cast(%var_3031, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1384 = reshape(%1383, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
  %1385 = @func_447(%1384) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
  %1386 = %1382.0;
  %1387 = %1385.0;
  (%1386, %1387, %var_3031)
}

def @func_8361(%var_8353: Tensor[(2028), float64]) -> Tensor[(2028), bool] {
  %1388 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %1389 = %1388.0;
  %1390 = cast(%var_8353, dtype="bool") /* ty=Tensor[(2028), bool] */;
  %1391 = shape_of(%1389, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1392 = cast(%1389, dtype="bool") /* ty=Tensor[(2028), bool] */;
  %1393 = dyn.reshape(%1390, %1391, newshape=[]) /* ty=Tensor[(?), bool] */;
  greater_equal(%1392, %1393) /* ty=Tensor[(2028), bool] */
}

def @func_12074() -> (Tensor[(2, 11, 2), float32],) {
  %1394 = @func_2523() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1395 = %1394.2;
  (%1395,)
}

def @func_17886() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(576), uint64]) {
  %1396 = @func_5926() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1397 = cast(meta[relay.Constant][51] /* ty=Tensor[(576), uint64] */, dtype="uint64") /* ty=Tensor[(576), uint64] */;
  %1398 = reshape(%1397, newshape=[6, 16, 6]) /* ty=Tensor[(6, 16, 6), uint64] */;
  %1399 = @func_1404(%1398) /* ty=(Tensor[(6, 16, 6), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %1400 = %1396.0;
  %1401 = %1399.1;
  (%1400, %1401, meta[relay.Constant][51] /* ty=Tensor[(576), uint64] */)
}

def @func_13968() -> (Tensor[(2, 11, 2), float32],) {
  %1402 = @func_6711() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1403 = %1402.0;
  (%1403,)
}

def @func_9990() -> Tensor[(2, 11, 2), float32] {
  @func_8155() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_6974() -> (Tensor[(2, 11, 2), float32],) {
  %1404 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1404,)
}

def @func_7886(%var_7842: Tensor[(1), int8]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(360, 2028), float64]) {
  %1405 = @func_4875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1406 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1407 = cast(%var_7842, dtype="int8") /* ty=Tensor[(1), int8] */;
  %1408 = cast(meta[relay.Constant][52] /* ty=Tensor[(360, 1), int8] */, dtype="int8") /* ty=Tensor[(360, 1), int8] */;
  %1409 = reshape(%1407, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), int8] */;
  %1410 = reshape(%1408, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), int8] */;
  %1411 = @func_5926() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1412 = @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %1413 = @func_6545() /* ty=(Tensor[(2028), float64],) */;
  %1414 = %1413.0;
  %1415 = cast(%1414, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1416 = cast(meta[relay.Constant][52] /* ty=Tensor[(360, 1), int8] */, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %1417 = @func_2695() /* ty=Tensor[(2, 11, 2), float32] */;
  %1418 = %1405.0;
  %1419 = %1406.0;
  %1420 = @func_5031(%1409, %1410) /* ty=Tensor[(6, 6, 10), int8] */;
  %1421 = %1411.0;
  %1422 = %1412.0;
  %1423 = floor_divide(%1415, %1416) /* ty=Tensor[(360, 2028), float64] */;
  (%1417, %1418, %1419, %1420, %var_7842, %1421, %1422, %1423)
}

def @func_3394() -> (Tensor[(2, 11, 2), float32],) {
  %1424 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %1425 = %1424.1;
  (%1425,)
}

def @func_18358() -> (Tensor[(2, 11, 2), float32],) {
  %1426 = @func_7265() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1426,)
}

def @func_712() -> Tensor[(2, 11, 2), float32] {
  %1427 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1427.0
}

def @func_9713() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) {
  %1428 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1429 = %1428.0;
  %1430 = @func_2846() /* ty=Tensor[(2, 11, 2), float64] */;
  (%1429, %1430)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1306() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %6 = fn () -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %0 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
    %1 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
    %2 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %3 = %0.3;
    %4 = %1.1;
    %5 = %2.0;
    (%3, %4, %5)
  };
  %6() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_6734() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_6732() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_12345(%var_12342: Tensor[(12, 48), uint64]) -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 48), uint64]) {
  %7 = @func_4875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %8 = @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %9 = @func_4217() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %10 = cast(%var_12342, dtype="uint64") /* ty=Tensor[(12, 48), uint64] */;
  %11 = reshape(%10, newshape=[36, 16]) /* ty=Tensor[(36, 16), uint64] */;
  %12 = @func_6403(%11) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 96), uint64], Tensor[(36, 16), uint64]) */;
  %13 = @func_6308() /* ty=Tensor[(2016), float64] */;
  %14 = %7.0;
  %15 = %8.0;
  %16 = @func_8471() /* ty=Tensor[(2, 11, 2), float32] */;
  %17 = @func_5596() /* ty=Tensor[(2, 11, 2), float32] */;
  %18 = %9.0;
  %19 = %12.0;
  (%13, %14, %15, %16, %17, %18, %19, %var_12342)
}

def @func_7142() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) {
  %26 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) {
    %20 = @func_2885() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) */;
    %21 = @func_6887() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %22 = @func_5857() /* ty=Tensor[(2, 11, 2), float32] */;
    %23 = %20.2;
    %24 = %21.0;
    %25 = @func_5270() /* ty=Tensor[(2, 11, 2), float64] */;
    (%22, %23, %24, %25)
  };
  %26() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) */
}

def @func_294() -> Tensor[(2, 11, 2), float32] {
  %27 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %27.0
}

def @func_8405() -> Tensor[(2016), float32] {
  %29 = fn () -> Tensor[(2016), float32] {
    %28 = @func_6523() /* ty=(Tensor[(2016), float32], Tensor[(12, 13, 13), uint64]) */;
    %28.0
  };
  %29() /* ty=Tensor[(2016), float32] */
}

def @func_13406() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_13404() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_8582(%var_8578: Tensor[(9, 3, 13), float32]) -> (Tensor[(9, 3, 13), float32], Tensor[(9, 3, 13), int64]) {
  %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 3, 13), float32] */, dtype="float32") /* ty=Tensor[(9, 3, 13), float32] */;
  %31 = cast(%var_8578, dtype="int64") /* ty=Tensor[(9, 3, 13), int64] */;
  %32 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(9, 3, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 3, 13), float32] */, dtype="int64") /* ty=Tensor[(9, 3, 13), int64] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %35 = acosh(%30) /* ty=Tensor[(9, 3, 13), float32] */;
  %36 = bitwise_and(%33, %34) /* ty=Tensor[(9, 3, 13), int64] */;
  (%35, %36)
}

def @func_10186() -> Tensor[(2, 11, 2), float32] {
  @func_10184() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_14102() -> (Tensor[(2016), float64],) {
  @func_14100() /* ty=(Tensor[(2016), float64],) */
}

def @func_7570() -> Tensor[(2, 11, 2), float64] {
  @func_6452() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_10417() -> (Tensor[(12, 13, 15), uint16],) {
  %37 = @func_4991() /* ty=Tensor[(12, 13, 15), uint16] */;
  (%37,)
}

def @func_15024() -> (Tensor[(12, 13, 15), uint16],) {
  %39 = fn () -> (Tensor[(12, 13, 15), uint16],) {
    %38 = @func_9278() /* ty=Tensor[(12, 13, 15), uint16] */;
    (%38,)
  };
  %39() /* ty=(Tensor[(12, 13, 15), uint16],) */
}

def @func_13994(%var_13992: Tensor[(2, 4, 4), uint64]) -> Tensor[(2, 4, 4), bool] {
  @func_13991(%var_13992) /* ty=Tensor[(2, 4, 4), bool] */
}

def @func_11814() -> (Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(288), float64], Tensor[(2, 11, 2), float32]) {
  @func_11812() /* ty=(Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(288), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_650() -> (Tensor[(2028), float64],) {
  %40 = @func_526() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) */;
  %41 = %40.1;
  (%41,)
}

def @func_7889(%var_7887: Tensor[(1), int8]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(360, 2028), float64]) {
  @func_7886(%var_7887) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(360, 2028), float64]) */
}

def @func_13152() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(1440), float64], Tensor[(2028), float64], Tensor[(2028), float64]) {
  @func_13150() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(1440), float64], Tensor[(2028), float64], Tensor[(2028), float64]) */
}

def @func_5858() -> Tensor[(2, 11, 2), float32] {
  %43 = fn () -> Tensor[(2, 11, 2), float32] {
    %42 = @func_4885() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %42.0
  };
  %43() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_1627() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_1625() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_18807() -> (Tensor[(2, 11, 2), float64], Tensor[(12, 13, 13), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_18805() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(12, 13, 13), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_15767() -> (Tensor[(2028), float64],) {
  %46 = fn () -> (Tensor[(2028), float64],) {
    %44 = @func_4325() /* ty=(Tensor[(2028), float64],) */;
    %45 = %44.0;
    (%45,)
  };
  %46() /* ty=(Tensor[(2028), float64],) */
}

def @func_11193() -> Tensor[(2, 11, 2), float32] {
  @func_11191() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_3872() -> (Tensor[(2016), float64],) {
  @func_3870() /* ty=(Tensor[(2016), float64],) */
}

def @func_9867() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16]) {
  @func_9865() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16]) */
}

def @func_17473() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %54 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
    %47 = @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %48 = @func_5661() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %49 = @func_14994() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %50 = %47.0;
    %51 = @func_7265() /* ty=Tensor[(2, 11, 2), float32] */;
    %52 = %48.0;
    %53 = %49.0;
    (%50, %51, %52, %53)
  };
  %54() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_18901() -> Tensor[(2, 11, 2), float32] {
  @func_18899() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_5596() -> Tensor[(2, 11, 2), float32] {
  %55 = @func_5105() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %55.0
}

def @func_12105() -> Tensor[(2, 11, 2), float32] {
  @func_12103() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_12786() -> (Tensor[(2, 11, 2), float32],) {
  %57 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %56 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
    (%56,)
  };
  %57() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_18612() -> Tensor[(5, 7, 10), float32] {
  @func_18610() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_6579() -> Tensor[(2016), float64] {
  %59 = fn () -> Tensor[(2016), float64] {
    %58 = @func_3870() /* ty=(Tensor[(2016), float64],) */;
    %58.0
  };
  %59() /* ty=Tensor[(2016), float64] */
}

def @func_18952(%var_18950: Tensor[(6, 10, 10), int64], %var_18951: Tensor[(6, 10, 10), int64]) -> (Tensor[(6, 10, 10), int64],) {
  @func_18948(%var_18950, %var_18951) /* ty=(Tensor[(6, 10, 10), int64],) */
}

def @func_1930(%var_1928: Tensor[(2, 1008), float64]) -> (Tensor[(2028), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 1008), int32]) {
  @func_1927(%var_1928) /* ty=(Tensor[(2028), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 1008), int32]) */
}

def @func_5192(%var_5190: Tensor[(2, 288), uint64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float64], Tensor[(6, 16, 6), float64], Tensor[(12, 13, 13), float64]) {
  @func_5189(%var_5190) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float64], Tensor[(6, 16, 6), float64], Tensor[(12, 13, 13), float64]) */
}

def @func_9368() -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %65 = fn () -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %60 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
    %61 = @func_4875() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %62 = %60.0;
    %63 = %61.0;
    %64 = @func_3521() /* ty=Tensor[(2, 11, 2), float32] */;
    (%62, %63, %64)
  };
  %65() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_10912() -> Tensor[(2, 11, 2), float32] {
  %67 = fn () -> Tensor[(2, 11, 2), float32] {
    %66 = @func_3394() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %66.0
  };
  %67() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_18375() -> (Tensor[(2, 11, 2), float64],) {
  %69 = fn () -> (Tensor[(2, 11, 2), float64],) {
    %68 = @func_11164() /* ty=Tensor[(2, 11, 2), float64] */;
    (%68,)
  };
  %69() /* ty=(Tensor[(2, 11, 2), float64],) */
}

def @func_8842() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %70 = @func_4632() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %71 = @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %72 = %70.0;
  %73 = %71.1;
  (%72, %73)
}

def @func_4594() -> Tensor[(2, 11, 2), float32] {
  %74 = fn () -> Tensor[(2, 11, 2), float32] {
    @func_2323() /* ty=Tensor[(2, 11, 2), float32] */
  };
  %74() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_6248(%var_6244: Tensor[(288, 1), float64], %var_6245: Tensor[(288, 10), float64], %var_6246: Tensor[(288, 10), int32], %var_6247: Tensor[(288, 10), float32]) -> (Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(2, 11, 2), float32], Tensor[(288, 1), float32], Tensor[(288, 10), float32], Tensor[(288, 10), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(288, 10), bool], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %137 = fn (%var_6056: Tensor[(288, 1), float64], %var_6075: Tensor[(288, 10), float64], %var_6085: Tensor[(288, 10), int32], %var_6153: Tensor[(288, 10), float32]) -> (Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(2, 11, 2), float32], Tensor[(288, 1), float32], Tensor[(288, 10), float32], Tensor[(288, 10), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(288, 10), bool], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %75 = cast(%var_6056, dtype="float64") /* ty=Tensor[(288, 1), float64] */;
    %76 = cast(%var_6056, dtype="float64") /* ty=Tensor[(288, 1), float64] */;
    %77 = reshape(%75, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
    %78 = reshape(%76, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
    %79 = cast(%var_6056, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
    %80 = cast(%var_6056, dtype="bool") /* ty=Tensor[(288, 1), bool] */;
    %81 = cast(%var_6075, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
    %82 = equal(%80, %81) /* ty=Tensor[(288, 10), bool] */;
    %83 = cast(%var_6075, dtype="int32") /* ty=Tensor[(288, 10), int32] */;
    %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(2), int32] */;
    %85 = cast(%82, dtype="int32") /* ty=Tensor[(288, 10), int32] */;
    %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %87 = right_shift(%85, %86) /* ty=Tensor[(288, 10), int32] */;
    %88 = cast(%var_6085, dtype="int32") /* ty=Tensor[(288, 10), int32] */;
    %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(2), int32] */;
    %90 = cast(%87, dtype="int32") /* ty=Tensor[(288, 10), int32] */;
    %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %92 = bitwise_and(%90, %91) /* ty=Tensor[(288, 10), int32] */;
    %93 = cast(%92, dtype="float64") /* ty=Tensor[(288, 10), float64] */;
    %94 = log2(%93) /* ty=Tensor[(288, 10), float64] */;
    %95 = cast(%var_6075, dtype="float32") /* ty=Tensor[(288, 10), float32] */;
    %96 = shape_of(%94, dtype="int32") /* ty=Tensor[(2), int32] */;
    %97 = cast(%94, dtype="float32") /* ty=Tensor[(288, 10), float32] */;
    %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %99 = cast(%94, dtype="float32") /* ty=Tensor[(288, 10), float32] */;
    %100 = erf(%99) /* ty=Tensor[(288, 10), float32] */;
    %101 = cast(%var_6153, dtype="uint16") /* ty=Tensor[(288, 10), uint16] */;
    %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(2), int32] */;
    %103 = cast(%100, dtype="uint16") /* ty=Tensor[(288, 10), uint16] */;
    %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %105 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %106 = @func_4337() /* ty=(Tensor[(2028), float64],) */;
    %107 = cast(%100, dtype="float64") /* ty=Tensor[(288, 10), float64] */;
    %108 = asin(%107) /* ty=Tensor[(288, 10), float64] */;
    %109 = cast(%var_6075, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
    %110 = cast(%var_6056, dtype="bool") /* ty=Tensor[(288, 1), bool] */;
    %111 = logical_or(%109, %110) /* ty=Tensor[(288, 10), bool] */;
    %112 = cast(%111, dtype="float32") /* ty=Tensor[(288, 10), float32] */;
    %113 = atanh(%112) /* ty=Tensor[(288, 10), float32] */;
    %114 = cast(%113, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
    %115 = shape_of(%108, dtype="int32") /* ty=Tensor[(2), int32] */;
    %116 = cast(%108, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
    %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %118 = less_equal(%116, %117) /* ty=Tensor[(288, 10), bool] */;
    %119 = cast(%118, dtype="float32") /* ty=Tensor[(288, 10), float32] */;
    %120 = log10(%119) /* ty=Tensor[(288, 10), float32] */;
    %121 = cast(%94, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
    %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(2), int32] */;
    %123 = cast(%120, dtype="bool") /* ty=Tensor[(288, 10), bool] */;
    %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %125 = @func_712() /* ty=Tensor[(2, 11, 2), float32] */;
    %126 = @func_2190(%77, %78) /* ty=Tensor[(6, 16, 3), float64] */;
    %127 = @func_5596() /* ty=Tensor[(2, 11, 2), float32] */;
    %128 = rsqrt(%79) /* ty=Tensor[(288, 1), float32] */;
    %129 = floor_divide(%97, %98) /* ty=Tensor[(288, 10), float32] */;
    %130 = bitwise_or(%103, %104) /* ty=Tensor[(288, 10), uint16] */;
    %131 = %105.0;
    %132 = @func_5677() /* ty=Tensor[(2, 11, 2), float32] */;
    %133 = %106.0;
    %134 = greater(%123, %124) /* ty=Tensor[(288, 10), bool] */;
    %135 = @func_5857() /* ty=Tensor[(2, 11, 2), float32] */;
    %136 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
    (%125, %126, %127, %128, %129, %130, %131, %132, %133, %134, %135, %136)
  };
  %137(%var_6244, %var_6245, %var_6246, %var_6247) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(2, 11, 2), float32], Tensor[(288, 1), float32], Tensor[(288, 10), float32], Tensor[(288, 10), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(288, 10), bool], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_637() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) {
  %146 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) {
    %138 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %139 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %140 = cast(meta[relay.Constant][1] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %141 = reshape(%140, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
    %142 = @func_447(%141) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
    %143 = %138.1;
    %144 = %139.0;
    %145 = %142.2;
    (%143, %144, %145, meta[relay.Constant][1] /* ty=Tensor[(2016), float64] */)
  };
  %146() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */
}

def @func_7740() -> (Tensor[(2, 11, 2), float32],) {
  @func_7738() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_1407(%var_1405: Tensor[(6, 16, 6), uint64]) -> (Tensor[(6, 16, 6), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) {
  @func_1404(%var_1405) /* ty=(Tensor[(6, 16, 6), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_7382() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %151 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %147 = @func_2066() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %148 = @func_6964() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %149 = %147.0;
    %150 = %148.0;
    (%149, %150)
  };
  %151() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_10166() -> (Tensor[(2016), float64],) {
  %152 = @func_6308() /* ty=Tensor[(2016), float64] */;
  (%152,)
}

def @func_9172() -> Tensor[(2, 11, 2), float64] {
  @func_9170() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_9212() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_9210() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_8293() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), bool]) {
  @func_8291() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), bool]) */
}

def @func_3011(%var_3010: Tensor[(2016), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), bool], Tensor[(12, 13, 15), float64], Tensor[(2, 11, 2), float32]) {
  %171 = fn (%var_2933: Tensor[(2016), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), bool], Tensor[(12, 13, 15), float64], Tensor[(2, 11, 2), float32]) {
    %153 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %154 = cast(%var_2933, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %155 = reshape(%154, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
    %156 = @func_447(%155) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
    %157 = %153.0;
    %158 = cast(%157, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
    %159 = reshape(%158, newshape=[2, 11, 2]) /* ty=Tensor[(2, 11, 2), float32] */;
    %160 = @func_1708(%159) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool]) */;
    %161 = @func_1594() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %162 = %161.0;
    %163 = cast(%162, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
    %164 = %156.1;
    %165 = cast(%164, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %166 = reshape(%165, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
    %167 = @func_949(%166) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */;
    %168 = %160.1;
    %169 = exp(%163) /* ty=Tensor[(12, 13, 15), float64] */;
    %170 = %167.1;
    (%157, %164, %var_2933, %168, %169, %170)
  };
  %171(%var_3010) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), bool], Tensor[(12, 13, 15), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_11191() -> Tensor[(2, 11, 2), float32] {
  @func_5596() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_11060() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %175 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %172 = @func_5661() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %173 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
    %174 = %172.1;
    (%173, %174)
  };
  %175() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_16006() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %176 = @func_9865() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16]) */;
  %177 = %176.0;
  %178 = @func_6308() /* ty=Tensor[(2016), float64] */;
  (%177, %178)
}

def @func_16865() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_16863() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_13991(%var_13978: Tensor[(2, 4, 4), uint64]) -> Tensor[(2, 4, 4), bool] {
  %179 = cast(meta[relay.Constant][2] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %180 = cast(%var_13978, dtype="bool") /* ty=Tensor[(2, 4, 4), bool] */;
  not_equal(%179, %180) /* ty=Tensor[(2, 4, 4), bool] */
}

def @func_10532() -> (Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float64]) {
  @func_10530() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float64]) */
}

def @func_6524() -> (Tensor[(2016), float32], Tensor[(12, 13, 13), uint64]) {
  %187 = fn () -> (Tensor[(2016), float32], Tensor[(12, 13, 13), uint64]) {
    %181 = @func_5508() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) */;
    %182 = %181.1;
    %183 = cast(%182, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %184 = reshape(%183, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
    %185 = @func_447(%184) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
    %186 = %185.2;
    (%182, %186)
  };
  %187() /* ty=(Tensor[(2016), float32], Tensor[(12, 13, 13), uint64]) */
}

def @func_16008() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  @func_16006() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */
}

def @func_16899() -> Tensor[(2, 11, 2), float32] {
  @func_712() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_18630() -> Tensor[(2, 11, 2), float32] {
  %189 = fn () -> Tensor[(2, 11, 2), float32] {
    %188 = @func_10140() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %188.0
  };
  %189() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_1521() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_15614() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) {
  @func_15612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) */
}

def @func_17286() -> (Tensor[(2, 11, 2), float32],) {
  @func_17284() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_2037() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_731() -> Tensor[(2, 11, 2), float32] {
  @func_729() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_10055() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %193 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %190 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %191 = @func_712() /* ty=Tensor[(2, 11, 2), float32] */;
    %192 = %190.0;
    (%191, %192)
  };
  %193() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_1105() -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) {
  %198 = fn () -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) {
    %194 = @func_650() /* ty=(Tensor[(2028), float64],) */;
    %195 = @func_589() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %196 = %194.0;
    %197 = %195.0;
    (%196, %197)
  };
  %198() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_13456() -> Tensor[(2, 11, 2), float32] {
  %199 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %199.1
}

def @func_6351(%var_6324: Tensor[(5, 13, 5), float64]) -> (Tensor[(5, 13, 5), float32], Tensor[(2016), float64]) {
  %200 = cast(%var_6324, dtype="float64") /* ty=Tensor[(5, 13, 5), float64] */;
  %201 = cos(%200) /* ty=Tensor[(5, 13, 5), float64] */;
  %202 = cast(%201, dtype="float32") /* ty=Tensor[(5, 13, 5), float32] */;
  %203 = log2(%202) /* ty=Tensor[(5, 13, 5), float32] */;
  %204 = @func_6308() /* ty=Tensor[(2016), float64] */;
  (%203, %204)
}

def @func_5662() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %213 = fn () -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %205 = @func_4632() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
    %206 = %205.2;
    %207 = cast(%206, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %208 = reshape(%207, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
    %209 = @func_3033(%208) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) */;
    %210 = @func_4031() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %211 = %209.0;
    %212 = %210.1;
    (%206, %211, %212)
  };
  %213() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_15612() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) {
  %214 = @func_3761() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %215 = %214.1;
  %216 = @func_1454() /* ty=Tensor[(2, 11, 2), float32] */;
  %217 = @func_11664() /* ty=Tensor[(2, 11, 2), float32] */;
  %218 = @func_9990() /* ty=Tensor[(2, 11, 2), float32] */;
  %219 = @func_8404() /* ty=Tensor[(2016), float32] */;
  (%215, %216, %217, %218, %219)
}

def @func_10615(%var_10614: Tensor[(360), int8]) -> (Tensor[(2, 11, 2), float64], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(360), int8], Tensor[(2, 11, 2), float32], Tensor[(84, 24), float64], Tensor[(2028), float64]) {
  %232 = fn (%var_10592: Tensor[(360), int8]) -> (Tensor[(2, 11, 2), float64], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(360), int8], Tensor[(2, 11, 2), float32], Tensor[(84, 24), float64], Tensor[(2028), float64]) {
    %220 = @func_4733() /* ty=(Tensor[(2, 11, 2), float64],) */;
    %221 = cast(meta[relay.Constant][3] /* ty=Tensor[(1), int8] */, dtype="int8") /* ty=Tensor[(1), int8] */;
    %222 = cast(%var_10592, dtype="int8") /* ty=Tensor[(360), int8] */;
    %223 = reshape(%221, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), int8] */;
    %224 = reshape(%222, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), int8] */;
    %225 = cast(meta[relay.Constant][4] /* ty=Tensor[(84, 24), float64] */, dtype="float64") /* ty=Tensor[(84, 24), float64] */;
    %226 = reshape(%225, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
    %227 = @func_3033(%226) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) */;
    %228 = %220.0;
    %229 = @func_5031(%223, %224) /* ty=Tensor[(6, 6, 10), int8] */;
    %230 = %227.0;
    %231 = @func_8686() /* ty=Tensor[(2028), float64] */;
    (%228, %229, meta[relay.Constant][3] /* ty=Tensor[(1), int8] */, %var_10592, %230, meta[relay.Constant][4] /* ty=Tensor[(84, 24), float64] */, %231)
  };
  %232(%var_10614) /* ty=(Tensor[(2, 11, 2), float64], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(360), int8], Tensor[(2, 11, 2), float32], Tensor[(84, 24), float64], Tensor[(2028), float64]) */
}

def @func_8585(%var_8583: Tensor[(9, 3, 13), float32]) -> (Tensor[(9, 3, 13), float32], Tensor[(9, 3, 13), int64]) {
  @func_8582(%var_8583) /* ty=(Tensor[(9, 3, 13), float32], Tensor[(9, 3, 13), int64]) */
}

def @func_11410() -> Tensor[(2, 11, 2), float32] {
  %234 = fn () -> Tensor[(2, 11, 2), float32] {
    %233 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %233.0
  };
  %234() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_7981() -> (Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), float32]) {
  %239 = fn () -> (Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), float32]) {
    %235 = @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */;
    %236 = cast(%235, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
    %237 = @func_5270() /* ty=Tensor[(2, 11, 2), float64] */;
    %238 = acos(%236) /* ty=Tensor[(12, 13, 15), float32] */;
    (%237, %238)
  };
  %239() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), float32]) */
}

def @func_12397(%var_12395: Tensor[(10, 12, 8), float32]) -> (Tensor[(10, 12, 8), float32], Tensor[(2, 11, 2), float32], Tensor[(576), uint64], Tensor[(2, 11, 2), float32]) {
  @func_12394(%var_12395) /* ty=(Tensor[(10, 12, 8), float32], Tensor[(2, 11, 2), float32], Tensor[(576), uint64], Tensor[(2, 11, 2), float32]) */
}

def @func_12210(%var_12209: Tensor[(12, 10, 10), float32]) -> Tensor[(12, 10, 10), float32] {
  %241 = fn (%var_12177: Tensor[(12, 10, 10), float32]) -> Tensor[(12, 10, 10), float32] {
    %240 = cast(%var_12177, dtype="float32") /* ty=Tensor[(12, 10, 10), float32] */;
    exp(%240) /* ty=Tensor[(12, 10, 10), float32] */
  };
  %241(%var_12209) /* ty=Tensor[(12, 10, 10), float32] */
}

def @func_2695() -> Tensor[(2, 11, 2), float32] {
  %242 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %242.0
}

def @func_5189(%var_5141: Tensor[(2, 288), uint64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float64], Tensor[(6, 16, 6), float64], Tensor[(12, 13, 13), float64]) {
  %243 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %244 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %245 = @func_4733() /* ty=(Tensor[(2, 11, 2), float64],) */;
  %246 = cast(%var_5141, dtype="uint64") /* ty=Tensor[(2, 288), uint64] */;
  %247 = reshape(%246, newshape=[6, 16, 6]) /* ty=Tensor[(6, 16, 6), uint64] */;
  %248 = @func_1404(%247) /* ty=(Tensor[(6, 16, 6), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %249 = %248.0;
  %250 = cast(%249, dtype="float32") /* ty=Tensor[(6, 16, 6), float32] */;
  %251 = erf(%250) /* ty=Tensor[(6, 16, 6), float32] */;
  %252 = cast(%251, dtype="float64") /* ty=Tensor[(6, 16, 6), float64] */;
  %253 = %244.0;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %255 = reshape(%254, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
  %256 = @func_161(%255) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */;
  %257 = %243.1;
  %258 = @func_3701() /* ty=Tensor[(2, 11, 2), float32] */;
  %259 = %245.0;
  %260 = rsqrt(%252) /* ty=Tensor[(6, 16, 6), float64] */;
  %261 = %256.0;
  (%257, %var_5141, %258, %253, %259, %260, %261)
}

def @func_5380(%var_5377: Tensor[(2028), float64], %var_5378: Tensor[(1014, 2), float64], %var_5379: Tensor[(1014, 2), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(1014, 2), int64], Tensor[(6, 7, 9), float64], Tensor[(42), float64], Tensor[(1014, 2), bool], Tensor[(2, 11, 2), float64], Tensor[(2028), float64]) {
  %288 = fn (%var_5318: Tensor[(2028), float64], %var_5331: Tensor[(1014, 2), float64], %var_5359: Tensor[(1014, 2), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(1014, 2), int64], Tensor[(6, 7, 9), float64], Tensor[(42), float64], Tensor[(1014, 2), bool], Tensor[(2, 11, 2), float64], Tensor[(2028), float64]) {
    %262 = @func_4885() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %263 = cast(%var_5318, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %264 = reshape(%263, newshape=[1014, 2]) /* ty=Tensor[(1014, 2), float64] */;
    %265 = @func_1769(%264) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(1014, 2), float64]) */;
    %266 = %265.3;
    %267 = cast(%var_5331, dtype="int64") /* ty=Tensor[(1014, 2), int64] */;
    %268 = shape_of(%266, dtype="int32") /* ty=Tensor[(2), int32] */;
    %269 = cast(%266, dtype="int64") /* ty=Tensor[(1014, 2), int64] */;
    %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %271 = cast(meta[relay.Constant][5] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
    %272 = reshape(%271, newshape=[6, 7, 1]) /* ty=Tensor[(6, 7, 1), float64] */;
    %273 = @func_3593(%272) /* ty=(Tensor[(6, 7, 9), float64],) */;
    %274 = cast(%var_5359, dtype="bool") /* ty=Tensor[(1014, 2), bool] */;
    %275 = shape_of(%var_5331, dtype="int32") /* ty=Tensor[(2), int32] */;
    %276 = cast(%var_5331, dtype="bool") /* ty=Tensor[(1014, 2), bool] */;
    %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %278 = @func_4733() /* ty=(Tensor[(2, 11, 2), float64],) */;
    %279 = cast(%var_5318, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %280 = %262.0;
    %281 = @func_2846() /* ty=Tensor[(2, 11, 2), float64] */;
    %282 = @func_3701() /* ty=Tensor[(2, 11, 2), float32] */;
    %283 = minimum(%269, %270) /* ty=Tensor[(1014, 2), int64] */;
    %284 = %273.0;
    %285 = not_equal(%276, %277) /* ty=Tensor[(1014, 2), bool] */;
    %286 = %278.0;
    %287 = rsqrt(%279) /* ty=Tensor[(2028), float64] */;
    (%280, %281, %282, %283, %284, meta[relay.Constant][5] /* ty=Tensor[(42), float64] */, %285, %286, %287)
  };
  %288(%var_5377, %var_5378, %var_5379) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(1014, 2), int64], Tensor[(6, 7, 9), float64], Tensor[(42), float64], Tensor[(1014, 2), bool], Tensor[(2, 11, 2), float64], Tensor[(2028), float64]) */
}

def @func_6309() -> Tensor[(2016), float64] {
  %290 = fn () -> Tensor[(2016), float64] {
    %289 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %289.0
  };
  %290() /* ty=Tensor[(2016), float64] */
}

def @func_16271() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %291 = @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %292 = @func_14963() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) */;
  %293 = %291.0;
  %294 = %292.2;
  (%293, %294)
}

def @func_16969() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2016), float64]) {
  @func_16967() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2016), float64]) */
}

def @func_4887() -> (Tensor[(2, 11, 2), float32],) {
  @func_4885() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_3036(%var_3034: Tensor[(2016), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) {
  @func_3033(%var_3034) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) */
}

def @func_3304(%var_3301: Tensor[(2016), float64], %var_3302: Tensor[(12, 13, 15), uint16], %var_3303: Tensor[(576), uint64]) -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), float64], Tensor[(2, 11, 2), float32], Tensor[(576), uint64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float32]) {
  @func_3299(%var_3301, %var_3302, %var_3303) /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), float64], Tensor[(2, 11, 2), float32], Tensor[(576), uint64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float32]) */
}

def @func_3394() -> (Tensor[(2, 11, 2), float32],) {
  %295 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %296 = %295.1;
  (%296,)
}

def @func_7634() -> Tensor[(2, 11, 2), float32] {
  @func_7632() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_13969() -> (Tensor[(2, 11, 2), float32],) {
  %299 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %297 = @func_6711() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %298 = %297.0;
    (%298,)
  };
  %299() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_2785() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) {
  @func_2783() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) */
}

def @func_13883() -> (Tensor[(2016), float64], Tensor[(2028), uint16], Tensor[(2028, 1), float64]) {
  @func_13881() /* ty=(Tensor[(2016), float64], Tensor[(2028), uint16], Tensor[(2028, 1), float64]) */
}

def @func_1595() -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %306 = fn () -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %300 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
    %301 = @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %302 = @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %303 = %300.0;
    %304 = %301.0;
    %305 = %302.0;
    (%303, %304, %305)
  };
  %306() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_17191() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %307 = @func_14672() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %308 = @func_6493() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %309 = @func_5677() /* ty=Tensor[(2, 11, 2), float32] */;
  %310 = %307.0;
  %311 = @func_12993() /* ty=Tensor[(2, 11, 2), float32] */;
  %312 = %308.2;
  (%309, %310, %311, %312)
}

def @func_13577(%var_13575: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2028), bool]) {
  @func_13574(%var_13575) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), bool]) */
}

def @func_2847() -> Tensor[(2, 11, 2), float64] {
  %316 = fn () -> Tensor[(2, 11, 2), float64] {
    %313 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
    %314 = %313.1;
    %315 = cast(%314, dtype="float64") /* ty=Tensor[(2, 11, 2), float64] */;
    erf(%315) /* ty=Tensor[(2, 11, 2), float64] */
  };
  %316() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_9210() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %317 = @func_6493() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %318 = @func_6711() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %319 = %317.1;
  %320 = %318.1;
  (%319, %320)
}

def @func_2886() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) {
  %325 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) {
    %321 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %322 = %321.2;
    %323 = @func_2846() /* ty=Tensor[(2, 11, 2), float64] */;
    %324 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
    (%322, %323, %324)
  };
  %325() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_12394(%var_12371: Tensor[(10, 12, 8), float32]) -> (Tensor[(10, 12, 8), float32], Tensor[(2, 11, 2), float32], Tensor[(576), uint64], Tensor[(2, 11, 2), float32]) {
  %326 = cast(%var_12371, dtype="float32") /* ty=Tensor[(10, 12, 8), float32] */;
  %327 = cast(meta[relay.Constant][6] /* ty=Tensor[(576), uint64] */, dtype="uint64") /* ty=Tensor[(576), uint64] */;
  %328 = reshape(%327, newshape=[2, 288]) /* ty=Tensor[(2, 288), uint64] */;
  %329 = @func_5189(%328) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float64], Tensor[(6, 16, 6), float64], Tensor[(12, 13, 13), float64]) */;
  %330 = @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %331 = atan(%326) /* ty=Tensor[(10, 12, 8), float32] */;
  %332 = %329.0;
  %333 = %330.1;
  (%331, %332, meta[relay.Constant][6] /* ty=Tensor[(576), uint64] */, %333)
}

def @func_8771() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %337 = fn () -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
    %334 = @func_6974() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %335 = @func_7408() /* ty=Tensor[(2016), float64] */;
    %336 = %334.0;
    (%335, %336)
  };
  %337() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_9990() -> Tensor[(2, 11, 2), float32] {
  @func_8155() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_4218() -> (Tensor[(2, 11, 2), float32],) {
  %340 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %338 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %339 = %338.2;
    (%339,)
  };
  %340() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_13150() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(1440), float64], Tensor[(2028), float64], Tensor[(2028), float64]) {
  %341 = @func_9713() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) */;
  %342 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %343 = cast(meta[relay.Constant][7] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %344 = reshape(%343, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %345 = @func_12517(%344) /* ty=(Tensor[(2016), float64], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) */;
  %346 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %347 = @func_11409() /* ty=Tensor[(2, 11, 2), float32] */;
  %348 = %341.0;
  %349 = %342.0;
  %350 = %345.0;
  %351 = %346.0;
  %352 = @func_8686() /* ty=Tensor[(2028), float64] */;
  (%347, %348, %349, %350, meta[relay.Constant][7] /* ty=Tensor[(1440), float64] */, %351, %352)
}

def @func_1151(%var_1135: Tensor[(2028), float64]) -> (Tensor[(2028), uint16],) {
  %353 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %354 = %353.0;
  %355 = cast(%var_1135, dtype="uint16") /* ty=Tensor[(2028), uint16] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(1), int32] */;
  %357 = cast(%354, dtype="uint16") /* ty=Tensor[(2028), uint16] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %359 = logical_xor(%357, %358) /* ty=Tensor[(2028), uint16] */;
  (%359,)
}

def @func_4198() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %364 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %360 = @func_2612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
    %361 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
    %362 = %360.1;
    %363 = %361.1;
    (%362, %363)
  };
  %364() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_6454() -> Tensor[(2, 11, 2), float64] {
  @func_6452() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_15091() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %365 = @func_1594() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %366 = %365.1;
  %367 = @func_5677() /* ty=Tensor[(2, 11, 2), float32] */;
  (%366, %367)
}

def @func_6713() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_6711() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_14578(%var_14577: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) {
  %374 = fn (%var_14574: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) {
    %368 = @func_13852() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
    %369 = cast(%var_14574, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %370 = reshape(%369, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
    %371 = @func_949(%370) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */;
    %372 = %368.1;
    %373 = %371.2;
    (%372, %373, %var_14574)
  };
  %374(%var_14577) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */
}

def @func_6975() -> (Tensor[(2, 11, 2), float32],) {
  %376 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %375 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
    (%375,)
  };
  %376() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_7438() -> Tensor[(12, 13, 15), uint16] {
  @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */
}

def @func_15294() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  @func_15292() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_15840() -> (Tensor[(2, 11, 2), float32],) {
  %377 = @func_13968() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %378 = %377.0;
  (%378,)
}

def @func_15862() -> (Tensor[(2, 11, 2), float32],) {
  %379 = @func_14697() /* ty=Tensor[(2, 11, 2), float32] */;
  (%379,)
}

def @func_6887() -> (Tensor[(2, 11, 2), float32],) {
  %380 = @func_909() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %381 = %380.0;
  (%381,)
}

def @func_2193(%var_2191: Tensor[(6, 16, 3), float64], %var_2192: Tensor[(6, 16, 3), float64]) -> Tensor[(6, 16, 3), float64] {
  %386 = fn (%var_2184: Tensor[(6, 16, 3), float64], %var_2185: Tensor[(6, 16, 3), float64]) -> Tensor[(6, 16, 3), float64] {
    %382 = cast(%var_2185, dtype="float64") /* ty=Tensor[(6, 16, 3), float64] */;
    %383 = shape_of(%var_2184, dtype="int32") /* ty=Tensor[(3), int32] */;
    %384 = cast(%var_2184, dtype="float64") /* ty=Tensor[(6, 16, 3), float64] */;
    %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%384, %385) /* ty=Tensor[(6, 16, 3), float64] */
  };
  %386(%var_2191, %var_2192) /* ty=Tensor[(6, 16, 3), float64] */
}

def @func_18000() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float64]) {
  @func_17998() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float64]) */
}

def @func_3299(%var_3216: Tensor[(2016), float64], %var_3245: Tensor[(12, 13, 15), uint16], %var_3265: Tensor[(576), uint64]) -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), float64], Tensor[(2, 11, 2), float32], Tensor[(576), uint64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float32]) {
  %387 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %388 = @func_1594() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %389 = %388.0;
  %390 = cast(%var_3245, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %394 = cast(%var_3265, dtype="uint64") /* ty=Tensor[(576), uint64] */;
  %395 = reshape(%394, newshape=[6, 16, 6]) /* ty=Tensor[(6, 16, 6), uint64] */;
  %396 = @func_1404(%395) /* ty=(Tensor[(6, 16, 6), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %397 = @func_1594() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %398 = @func_2885() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) */;
  %399 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %400 = cast(%var_3216, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %401 = reshape(%400, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
  %402 = @func_447(%401) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
  %403 = %402.2;
  %404 = cast(%403, dtype="float64") /* ty=Tensor[(12, 13, 13), float64] */;
  %405 = sigmoid(%404) /* ty=Tensor[(12, 13, 13), float64] */;
  %406 = cast(%405, dtype="float32") /* ty=Tensor[(12, 13, 13), float32] */;
  %407 = %387.0;
  %408 = power(%392, %393) /* ty=Tensor[(12, 13, 15), float64] */;
  %409 = %396.2;
  %410 = %397.0;
  %411 = %398.0;
  %412 = %399.1;
  %413 = atanh(%406) /* ty=Tensor[(12, 13, 13), float32] */;
  (%var_3216, %407, %408, %409, %var_3265, %410, %411, %412, %413)
}

def @func_18948(%var_18921: Tensor[(6, 10, 10), int64], %var_18922: Tensor[(6, 10, 10), int64]) -> (Tensor[(6, 10, 10), int64],) {
  %414 = cast(%var_18922, dtype="int64") /* ty=Tensor[(6, 10, 10), int64] */;
  %415 = shape_of(%var_18921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%var_18921, dtype="int64") /* ty=Tensor[(6, 10, 10), int64] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %418 = add(%416, %417) /* ty=Tensor[(6, 10, 10), int64] */;
  (%418,)
}

def @func_12755() -> (Tensor[(2, 11, 2), float32],) {
  @func_12753() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_10310() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(504, 4), float64]) {
  %419 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %420 = cast(meta[relay.Constant][8] /* ty=Tensor[(504, 4), float64] */, dtype="float64") /* ty=Tensor[(504, 4), float64] */;
  %421 = reshape(%420, newshape=[2016, 1]) /* ty=Tensor[(2016, 1), float64] */;
  %422 = @func_1352(%421) /* ty=(Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2028), float64], Tensor[(2016, 1), float64]) */;
  %423 = %419.0;
  %424 = %422.0;
  (%423, %424, meta[relay.Constant][8] /* ty=Tensor[(504, 4), float64] */)
}

def @func_6617() -> Tensor[(2, 11, 2), float32] {
  @func_6615() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_9998() -> Tensor[(2, 11, 2), float32] {
  %426 = fn () -> Tensor[(2, 11, 2), float32] {
    %425 = @func_9210() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %425.0
  };
  %426() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_11618() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %427 = @func_9648() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(9, 10, 16), float64], Tensor[(20, 72), float64], Tensor[(2028), float32]) */;
  %428 = @func_9914() /* ty=Tensor[(2, 11, 2), float32] */;
  %429 = %427.0;
  (%428, %429)
}

def @func_17821() -> Tensor[(3, 3, 10), float32] {
  %431 = fn () -> Tensor[(3, 3, 10), float32] {
    %430 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 3, 10), float32] */;
    rsqrt(%430) /* ty=Tensor[(3, 3, 10), float32] */
  };
  %431() /* ty=Tensor[(3, 3, 10), float32] */
}

def @func_12173(%var_12171: Tensor[(12, 12, 5), float32], %var_12172: Tensor[(12, 12, 5), float32]) -> (Tensor[(12, 12, 5), float32], Tensor[(2, 11, 2), float32]) {
  %439 = fn (%var_12134: Tensor[(12, 12, 5), float32], %var_12135: Tensor[(12, 12, 5), float32]) -> (Tensor[(12, 12, 5), float32], Tensor[(2, 11, 2), float32]) {
    %432 = cast(%var_12135, dtype="float32") /* ty=Tensor[(12, 12, 5), float32] */;
    %433 = shape_of(%var_12134, dtype="int32") /* ty=Tensor[(3), int32] */;
    %434 = cast(%var_12134, dtype="float32") /* ty=Tensor[(12, 12, 5), float32] */;
    %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %436 = @func_5105() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %437 = divide(%434, %435) /* ty=Tensor[(12, 12, 5), float32] */;
    %438 = %436.1;
    (%437, %438)
  };
  %439(%var_12171, %var_12172) /* ty=(Tensor[(12, 12, 5), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_16835(%var_16833: Tensor[(14, 9, 1), float64]) -> (Tensor[(14, 9, 1), float64],) {
  @func_16832(%var_16833) /* ty=(Tensor[(14, 9, 1), float64],) */
}

def @func_712() -> Tensor[(2, 11, 2), float32] {
  %440 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %440.0
}

def @func_5034(%var_5032: Tensor[(1, 1, 1), int8], %var_5033: Tensor[(6, 6, 10), int8]) -> Tensor[(6, 6, 10), int8] {
  %443 = fn (%var_5022: Tensor[(1, 1, 1), int8], %var_5023: Tensor[(6, 6, 10), int8]) -> Tensor[(6, 6, 10), int8] {
    %441 = cast(%var_5022, dtype="int8") /* ty=Tensor[(1, 1, 1), int8] */;
    %442 = cast(%var_5023, dtype="int8") /* ty=Tensor[(6, 6, 10), int8] */;
    bitwise_and(%441, %442) /* ty=Tensor[(6, 6, 10), int8] */
  };
  %443(%var_5032, %var_5033) /* ty=Tensor[(6, 6, 10), int8] */
}

def @func_3142(%var_3141: Tensor[(2028), float64]) -> (Tensor[(2, 12, 3), uint8], Tensor[(12, 13, 13), float64], Tensor[(2028), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %457 = fn (%var_3115: Tensor[(2028), float64]) -> (Tensor[(2, 12, 3), uint8], Tensor[(12, 13, 13), float64], Tensor[(2028), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
    %444 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 12, 3), uint8] */, dtype="uint8") /* ty=Tensor[(2, 12, 3), uint8] */;
    %445 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(2, 12, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %446 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 12, 3), uint8] */, dtype="uint8") /* ty=Tensor[(2, 12, 3), uint8] */;
    %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %448 = cast(%var_3115, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %449 = reshape(%448, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
    %450 = @func_161(%449) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */;
    %451 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %452 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %453 = bitwise_or(%446, %447) /* ty=Tensor[(2, 12, 3), uint8] */;
    %454 = %450.0;
    %455 = %451.0;
    %456 = %452.0;
    (%453, %454, %var_3115, %455, %456)
  };
  %457(%var_3141) /* ty=(Tensor[(2, 12, 3), uint8], Tensor[(12, 13, 13), float64], Tensor[(2028), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_2574() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_2572() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_6889() -> (Tensor[(2, 11, 2), float32],) {
  @func_6887() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_7217() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_7215() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_5678() -> Tensor[(2, 11, 2), float32] {
  %458 = fn () -> Tensor[(2, 11, 2), float32] {
    @func_5596() /* ty=Tensor[(2, 11, 2), float32] */
  };
  %458() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_7695() -> Tensor[(2, 11, 2), float32] {
  @func_7693() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_6964() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %459 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %460 = @func_5677() /* ty=Tensor[(2, 11, 2), float32] */;
  %461 = %459.0;
  (%460, %461)
}

def @func_5106() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %466 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %462 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %463 = @func_998() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %464 = %462.1;
    %465 = %463.1;
    (%464, %465)
  };
  %466() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_12961() -> Tensor[(2016), float32] {
  @func_12959() /* ty=Tensor[(2016), float32] */
}

def @func_9170() -> Tensor[(2, 11, 2), float64] {
  %467 = @func_4733() /* ty=(Tensor[(2, 11, 2), float64],) */;
  %467.0
}

def @func_9992() -> Tensor[(2, 11, 2), float32] {
  @func_9990() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_7494(%var_7490: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %468 = cast(meta[relay.Constant][12] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %469 = reshape(%468, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
  %470 = @func_161(%469) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */;
  %471 = cast(%var_7490, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %472 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(2028), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %473 = cast(meta[relay.Constant][12] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?), float64] */;
  %475 = @func_3456() /* ty=Tensor[(2, 11, 2), float32] */;
  %476 = %470.1;
  %477 = mod(%473, %474) /* ty=Tensor[(2028), float64] */;
  (%475, %476, %477)
}

def @func_13258() -> Tensor[(2, 11, 2), float32] {
  %478 = fn () -> Tensor[(2, 11, 2), float32] {
    @func_2323() /* ty=Tensor[(2, 11, 2), float32] */
  };
  %478() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_15842() -> (Tensor[(2, 11, 2), float32],) {
  @func_15840() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_16384() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %483 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %479 = @func_11618() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %480 = @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
    %481 = %479.1;
    %482 = %480.0;
    (%481, %482)
  };
  %483() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_16901() -> Tensor[(2, 11, 2), float32] {
  @func_16899() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_8687() -> Tensor[(2028), float64] {
  %485 = fn () -> Tensor[(2028), float64] {
    %484 = @func_650() /* ty=(Tensor[(2028), float64],) */;
    %484.0
  };
  %485() /* ty=Tensor[(2028), float64] */
}

def @func_15218(%var_15217: Tensor[(5, 13, 3), float32]) -> (Tensor[(5, 13, 3), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %495 = fn (%var_15202: Tensor[(5, 13, 3), float32]) -> (Tensor[(5, 13, 3), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
    %486 = cast(%var_15202, dtype="float32") /* ty=Tensor[(5, 13, 3), float32] */;
    %487 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(5, 13, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %488 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 13, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 13, 3), float32] */;
    %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %490 = @func_11618() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %491 = @func_14100() /* ty=(Tensor[(2016), float64],) */;
    %492 = minimum(%488, %489) /* ty=Tensor[(5, 13, 3), float32] */;
    %493 = %490.0;
    %494 = %491.0;
    (%492, %493, %494)
  };
  %495(%var_15217) /* ty=(Tensor[(5, 13, 3), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */
}

def @func_6495() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_6493() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @main(%var_18960: float64, %var_18961: Tensor[(8, 14, 12), float64]) -> Tensor[(8, 14, 12), float64] {
  %496 = cast(%var_18960, dtype="float64") /* ty=float64 */;
  %497 = cast(%var_18961, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  divide(%496, %497) /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_18610() -> Tensor[(5, 7, 10), float32] {
  %498 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 7, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  atan(%498) /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_4419() -> Tensor[(2016), float64] {
  %499 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %499.0
}

def @func_16653() -> Tensor[(2, 11, 2), float64] {
  %500 = @func_2885() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) */;
  %500.1
}

def @func_8030() -> (Tensor[(2, 11, 2), float32],) {
  %503 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %501 = @func_6974() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %502 = %501.0;
    (%502,)
  };
  %503() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_3458() -> Tensor[(2, 11, 2), float32] {
  @func_3456() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_4071() -> (Tensor[(2, 11, 2), float32],) {
  %506 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %504 = @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %505 = %504.0;
    (%505,)
  };
  %506() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_7409() -> Tensor[(2016), float64] {
  %508 = fn () -> Tensor[(2016), float64] {
    %507 = @func_3870() /* ty=(Tensor[(2016), float64],) */;
    %507.0
  };
  %508() /* ty=Tensor[(2016), float64] */
}

def @func_11620() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_11618() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_6875(%var_6873: uint32, %var_6874: Tensor[(12, 13, 1), uint32]) -> Tensor[(12, 13, 1), bool] {
  %514 = fn (%var_6839: uint32, %var_6840: Tensor[(12, 13, 1), uint32]) -> Tensor[(12, 13, 1), bool] {
    %509 = cast(%var_6839, dtype="bool") /* ty=bool */;
    %510 = cast(%var_6840, dtype="bool") /* ty=Tensor[(12, 13, 1), bool] */;
    %511 = less(%509, %510) /* ty=Tensor[(12, 13, 1), bool] */;
    %512 = cast(%var_6839, dtype="bool") /* ty=bool */;
    %513 = cast(%511, dtype="bool") /* ty=Tensor[(12, 13, 1), bool] */;
    less_equal(%512, %513) /* ty=Tensor[(12, 13, 1), bool] */
  };
  %514(%var_6873, %var_6874) /* ty=Tensor[(12, 13, 1), bool] */
}

def @func_8795() -> (Tensor[(2, 11, 2), float32], Tensor[(12, 13, 1), bool], uint32, Tensor[(39, 4), uint32]) {
  %521 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(12, 13, 1), bool], uint32, Tensor[(39, 4), uint32]) {
    %515 = cast(meta[relay.Constant][15] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %516 = cast(meta[relay.Constant][16] /* ty=Tensor[(39, 4), uint32] */, dtype="uint32") /* ty=Tensor[(39, 4), uint32] */;
    %517 = reshape(%515, newshape=[]) /* ty=uint32 */;
    %518 = reshape(%516, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), uint32] */;
    %519 = @func_7045() /* ty=Tensor[(2, 11, 2), float32] */;
    %520 = @func_6872(%517, %518) /* ty=Tensor[(12, 13, 1), bool] */;
    (%519, %520, meta[relay.Constant][15] /* ty=uint32 */, meta[relay.Constant][16] /* ty=Tensor[(39, 4), uint32] */)
  };
  %521() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(12, 13, 1), bool], uint32, Tensor[(39, 4), uint32]) */
}

def @func_10642() -> (Tensor[(2, 11, 2), float32],) {
  %524 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %522 = @func_6732() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %523 = %522.0;
    (%523,)
  };
  %524() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_14697() -> Tensor[(2, 11, 2), float32] {
  %525 = @func_4917() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32]) */;
  %525.2
}

def @func_16049() -> (Tensor[(12, 13, 15), uint16],) {
  %527 = fn () -> (Tensor[(12, 13, 15), uint16],) {
    %526 = @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */;
    (%526,)
  };
  %527() /* ty=(Tensor[(12, 13, 15), uint16],) */
}

def @func_3523() -> Tensor[(2, 11, 2), float32] {
  @func_3521() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_17254() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  @func_17252() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */
}

def @func_9278() -> Tensor[(12, 13, 15), uint16] {
  %528 = @func_7471() /* ty=(Tensor[(12, 13, 15), uint16],) */;
  %528.0
}

def @func_16629() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %532 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %529 = @func_12753() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %530 = %529.0;
    %531 = @func_11664() /* ty=Tensor[(2, 11, 2), float32] */;
    (%530, %531)
  };
  %532() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_2523() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %533 = @func_1594() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %534 = @func_2057() /* ty=(Tensor[(2016), float64],) */;
  %535 = @func_589() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %536 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %537 = %533.1;
  %538 = %534.0;
  %539 = %535.0;
  %540 = %536.2;
  (%537, %538, %539, %540)
}

def @func_9145() -> (Tensor[(2, 11, 2), bool], Tensor[(36, 16), int16]) {
  %552 = fn () -> (Tensor[(2, 11, 2), bool], Tensor[(36, 16), int16]) {
    %541 = @func_2783() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) */;
    %542 = cast(meta[relay.Constant][17] /* ty=Tensor[(576), uint64] */, dtype="uint64") /* ty=Tensor[(576), uint64] */;
    %543 = reshape(%542, newshape=[36, 16]) /* ty=Tensor[(36, 16), uint64] */;
    %544 = @func_6403(%543) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 96), uint64], Tensor[(36, 16), uint64]) */;
    %545 = %544.2;
    %546 = cast(meta[relay.Constant][17] /* ty=Tensor[(576), uint64] */, dtype="int16") /* ty=Tensor[(576), int16] */;
    %547 = shape_of(%545, dtype="int32") /* ty=Tensor[(2), int32] */;
    %548 = cast(%545, dtype="int16") /* ty=Tensor[(36, 16), int16] */;
    %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %550 = %541.1;
    %551 = bitwise_or(%548, %549) /* ty=Tensor[(36, 16), int16] */;
    (%550, %551)
  };
  %552() /* ty=(Tensor[(2, 11, 2), bool], Tensor[(36, 16), int16]) */
}

def @func_8520() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_8518() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_11839() -> Tensor[(2, 11, 2), float32] {
  %554 = fn () -> Tensor[(2, 11, 2), float32] {
    %553 = @func_8208() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %553.1
  };
  %554() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_15447(%var_15444: uint16, %var_15445: Tensor[(480), uint16], %var_15446: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(3, 5, 8), float32], Tensor[(120), float32], Tensor[(12, 4, 10), bool], uint16, Tensor[(480), uint16], Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(9, 16, 14), float64]) {
  @func_15442(%var_15444, %var_15445, %var_15446) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(3, 5, 8), float32], Tensor[(120), float32], Tensor[(12, 4, 10), bool], uint16, Tensor[(480), uint16], Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(9, 16, 14), float64]) */
}

def @func_8131(%var_8129: Tensor[(9, 10, 16), float64]) -> (Tensor[(9, 10, 16), float64],) {
  @func_8128(%var_8129) /* ty=(Tensor[(9, 10, 16), float64],) */
}

def @func_13881() -> (Tensor[(2016), float64], Tensor[(2028), uint16], Tensor[(2028, 1), float64]) {
  %555 = cast(meta[relay.Constant][18] /* ty=Tensor[(2028, 1), float64] */, dtype="float64") /* ty=Tensor[(2028, 1), float64] */;
  %556 = reshape(%555, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %557 = @func_1151(%556) /* ty=(Tensor[(2028), uint16],) */;
  %558 = @func_4419() /* ty=Tensor[(2016), float64] */;
  %559 = %557.0;
  (%558, %559, meta[relay.Constant][18] /* ty=Tensor[(2028, 1), float64] */)
}

def @func_18345() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %563 = fn () -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
    %560 = @func_13653() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %561 = @func_6578() /* ty=Tensor[(2016), float64] */;
    %562 = %560.1;
    (%561, %562)
  };
  %563() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_379() -> (Tensor[(2, 11, 2), float32],) {
  %566 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %564 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %565 = %564.0;
    (%565,)
  };
  %566() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_6403(%var_6393: Tensor[(36, 16), uint64]) -> (Tensor[(2, 11, 2), float32], Tensor[(6, 96), uint64], Tensor[(36, 16), uint64]) {
  %567 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %568 = cast(%var_6393, dtype="uint64") /* ty=Tensor[(36, 16), uint64] */;
  %569 = reshape(%568, newshape=[6, 96]) /* ty=Tensor[(6, 96), uint64] */;
  %570 = @func_6274(%569) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(6, 96), uint64]) */;
  %571 = %567.0;
  %572 = %570.2;
  (%571, %572, %var_6393)
}

def @func_17886() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(576), uint64]) {
  %573 = @func_5926() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %574 = cast(meta[relay.Constant][19] /* ty=Tensor[(576), uint64] */, dtype="uint64") /* ty=Tensor[(576), uint64] */;
  %575 = reshape(%574, newshape=[6, 16, 6]) /* ty=Tensor[(6, 16, 6), uint64] */;
  %576 = @func_1404(%575) /* ty=(Tensor[(6, 16, 6), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %577 = %573.0;
  %578 = %576.1;
  (%577, %578, meta[relay.Constant][19] /* ty=Tensor[(576), uint64] */)
}

def @func_15908() -> (Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %579 = @func_4733() /* ty=(Tensor[(2, 11, 2), float64],) */;
  %580 = @func_8208() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %581 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %582 = %579.0;
  %583 = %580.1;
  %584 = %581.0;
  (%582, %583, %584)
}

def @func_4992() -> Tensor[(12, 13, 15), uint16] {
  %586 = fn () -> Tensor[(12, 13, 15), uint16] {
    %585 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
    %585.0
  };
  %586() /* ty=Tensor[(12, 13, 15), uint16] */
}

def @func_18489() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) {
  %593 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) {
    %587 = @func_10641() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %588 = @func_4337() /* ty=(Tensor[(2028), float64],) */;
    %589 = @func_5105() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %590 = %587.0;
    %591 = %588.0;
    %592 = %589.1;
    (%590, %591, %592)
  };
  %593() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_18707() -> Tensor[(2, 11, 2), float32] {
  @func_18705() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_17533() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %597 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %594 = @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %595 = @func_7693() /* ty=Tensor[(2, 11, 2), float32] */;
    %596 = %594.1;
    (%595, %596)
  };
  %597() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_18842() -> Tensor[(2, 11, 2), float32] {
  @func_11838() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_11039() -> Tensor[(2, 11, 2), float32] {
  @func_11037() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_8471() -> Tensor[(2, 11, 2), float32] {
  %598 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %598.2
}

def @func_11501() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %612 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
    %599 = @func_10641() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %600 = @func_6964() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %601 = @func_7381() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %602 = @func_8937() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2016), float32], Tensor[(2028), float64]) */;
    %603 = @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
    %604 = @func_2057() /* ty=(Tensor[(2016), float64],) */;
    %605 = %599.0;
    %606 = %600.0;
    %607 = %601.1;
    %608 = @func_9997() /* ty=Tensor[(2, 11, 2), float32] */;
    %609 = %602.2;
    %610 = %603.0;
    %611 = %604.0;
    (%605, %606, %607, %608, %609, %610, %611)
  };
  %612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */
}

def @func_3396() -> (Tensor[(2, 11, 2), float32],) {
  @func_3394() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_16600() -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_16598() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_4876() -> (Tensor[(2, 11, 2), float32],) {
  %615 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %613 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %614 = %613.1;
    (%614,)
  };
  %615() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_13251() -> Tensor[(12, 13, 15), uint16] {
  @func_13249() /* ty=Tensor[(12, 13, 15), uint16] */
}

def @func_13487() -> Tensor[(2, 11, 2), float32] {
  @func_13485() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_18805() -> (Tensor[(2, 11, 2), float64], Tensor[(12, 13, 13), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %616 = @func_18374() /* ty=(Tensor[(2, 11, 2), float64],) */;
  %617 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
  %618 = %617.2;
  %619 = cast(%618, dtype="float32") /* ty=Tensor[(12, 13, 13), float32] */;
  %620 = @func_15966() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %621 = @func_9418() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %622 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %623 = %622.0;
  %624 = cast(%623, dtype="float32") /* ty=Tensor[(2028), float32] */;
  %625 = @func_10530() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float64]) */;
  %626 = %616.0;
  %627 = asinh(%619) /* ty=Tensor[(12, 13, 13), float32] */;
  %628 = %620.4;
  %629 = %621.0;
  %630 = sin(%624) /* ty=Tensor[(2028), float32] */;
  %631 = %625.1;
  %632 = @func_7632() /* ty=Tensor[(2, 11, 2), float32] */;
  (%626, %627, %628, %629, %630, %631, %632)
}

def @func_14964() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) {
  %639 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) {
    %633 = @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %634 = @func_14620() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) */;
    %635 = %633.0;
    %636 = @func_12959() /* ty=Tensor[(2016), float32] */;
    %637 = %634.1;
    %638 = @func_12714() /* ty=Tensor[(2016), float32] */;
    (%635, %636, %637, %638)
  };
  %639() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) */
}

def @func_14621() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) {
  %644 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) {
    %640 = @func_1625() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %641 = %640.1;
    %642 = @func_11037() /* ty=Tensor[(2, 11, 2), float32] */;
    %643 = @func_8988() /* ty=Tensor[(2016), float32] */;
    (%641, %642, %643)
  };
  %644() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) */
}

def @func_18236() -> (Tensor[(2, 11, 2), float32],) {
  %647 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %645 = @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
    %646 = %645.0;
    (%646,)
  };
  %647() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_4421() -> Tensor[(2016), float64] {
  @func_4419() /* ty=Tensor[(2016), float64] */
}

def @func_15712() -> (Tensor[(2, 11, 2), float32],) {
  %648 = @func_9418() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %649 = %648.0;
  (%649,)
}

def @func_18844() -> Tensor[(2, 11, 2), float32] {
  @func_18842() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_13101() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  @func_13099() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */
}

def @func_16655() -> Tensor[(2, 11, 2), float64] {
  @func_16653() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_17378() -> (Tensor[(8, 8, 16), float64], Tensor[(6, 16, 3), float64], Tensor[(288), float64], Tensor[(2, 11, 2), float32]) {
  %658 = fn () -> (Tensor[(8, 8, 16), float64], Tensor[(6, 16, 3), float64], Tensor[(288), float64], Tensor[(2, 11, 2), float32]) {
    %650 = @func_11812() /* ty=(Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(288), float64], Tensor[(2, 11, 2), float32]) */;
    %651 = cast(meta[relay.Constant][20] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
    %652 = cast(meta[relay.Constant][20] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
    %653 = reshape(%651, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
    %654 = reshape(%652, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
    %655 = %650.0;
    %656 = @func_2190(%653, %654) /* ty=Tensor[(6, 16, 3), float64] */;
    %657 = @func_11037() /* ty=Tensor[(2, 11, 2), float32] */;
    (%655, %656, meta[relay.Constant][20] /* ty=Tensor[(288), float64] */, %657)
  };
  %658() /* ty=(Tensor[(8, 8, 16), float64], Tensor[(6, 16, 3), float64], Tensor[(288), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_13332() -> (Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
  %663 = fn () -> (Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
    %659 = @func_7980() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), float32]) */;
    %660 = %659.0;
    %661 = @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */;
    %662 = @func_11037() /* ty=Tensor[(2, 11, 2), float32] */;
    (%660, %661, %662)
  };
  %663() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */
}

def @func_17972() -> Tensor[(2028), float32] {
  %665 = fn () -> Tensor[(2028), float32] {
    %664 = @func_4917() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32]) */;
    %664.1
  };
  %665() /* ty=Tensor[(2028), float32] */
}

def @func_1711(%var_1709: Tensor[(2, 11, 2), float32]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool]) {
  @func_1708(%var_1709) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool]) */
}

def @func_14100() -> (Tensor[(2016), float64],) {
  %666 = @func_13852() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %667 = %666.0;
  (%667,)
}

def @func_8473() -> Tensor[(2, 11, 2), float32] {
  @func_8471() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_164(%var_162: Tensor[(12, 13, 13), float64]) -> (Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) {
  @func_161(%var_162) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_12074() -> (Tensor[(2, 11, 2), float32],) {
  %668 = @func_2523() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %669 = %668.2;
  (%669,)
}

def @func_9916() -> Tensor[(2, 11, 2), float32] {
  @func_9914() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_13458() -> Tensor[(2, 11, 2), float32] {
  @func_13456() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_652() -> (Tensor[(2028), float64],) {
  @func_650() /* ty=(Tensor[(2028), float64],) */
}

def @func_18451() -> Tensor[(12, 13, 15), bool] {
  @func_18449() /* ty=Tensor[(12, 13, 15), bool] */
}

def @func_6679(%var_6644: Tensor[(8, 8, 16), float64], %var_6645: Tensor[(8, 8, 16), float64]) -> (Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), float32]) {
  %670 = cast(%var_6645, dtype="float64") /* ty=Tensor[(8, 8, 16), float64] */;
  %671 = shape_of(%var_6644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%var_6644, dtype="float64") /* ty=Tensor[(8, 8, 16), float64] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %674 = @func_2066() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %675 = floor_divide(%672, %673) /* ty=Tensor[(8, 8, 16), float64] */;
  %676 = %674.0;
  (%675, %676)
}

def @func_15035() -> Tensor[(2, 11, 2), float32] {
  @func_5677() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_7322() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64]) {
  %690 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64]) {
    %677 = @func_5105() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %678 = @func_4070() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %679 = @func_5926() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %680 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
    %681 = %680.2;
    %682 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 13, 13), uint64] */, dtype="float64") /* ty=Tensor[(12, 13, 13), float64] */;
    %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
    %684 = cast(%681, dtype="float64") /* ty=Tensor[(12, 13, 13), float64] */;
    %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %686 = %677.0;
    %687 = %678.0;
    %688 = %679.0;
    %689 = floor_mod(%684, %685) /* ty=Tensor[(12, 13, 13), float64] */;
    (%686, %687, %688, %689)
  };
  %690() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64]) */
}

def @func_11330(%var_11273: Tensor[(6, 3, 9), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), int32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), float32], Tensor[(2016), float64]) {
  %691 = cast(%var_11273, dtype="float64") /* ty=Tensor[(6, 3, 9), float64] */;
  %692 = rsqrt(%691) /* ty=Tensor[(6, 3, 9), float64] */;
  %693 = cast(%var_11273, dtype="int32") /* ty=Tensor[(6, 3, 9), int32] */;
  %694 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%692, dtype="int32") /* ty=Tensor[(6, 3, 9), int32] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %697 = @func_8518() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %698 = @func_2572() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %699 = cast(%var_11273, dtype="float32") /* ty=Tensor[(6, 3, 9), float32] */;
  %700 = @func_6615() /* ty=Tensor[(2, 11, 2), float32] */;
  %701 = add(%695, %696) /* ty=Tensor[(6, 3, 9), int32] */;
  %702 = %697.1;
  %703 = %698.0;
  %704 = exp(%699) /* ty=Tensor[(6, 3, 9), float32] */;
  %705 = @func_4419() /* ty=Tensor[(2016), float64] */;
  (%700, %701, %702, %703, %704, %705)
}

def @func_15442(%var_15356: uint16, %var_15357: Tensor[(480), uint16], %var_15382: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(3, 5, 8), float32], Tensor[(120), float32], Tensor[(12, 4, 10), bool], uint16, Tensor[(480), uint16], Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(9, 16, 14), float64]) {
  %706 = @func_7321() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64]) */;
  %707 = cast(meta[relay.Constant][22] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %708 = reshape(%707, newshape=[3, 5, 8]) /* ty=Tensor[(3, 5, 8), float32] */;
  %709 = cast(%var_15356, dtype="uint16") /* ty=uint16 */;
  %710 = cast(%var_15357, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %711 = reshape(%709, newshape=[]) /* ty=uint16 */;
  %712 = reshape(%710, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), uint16] */;
  %713 = @func_4683(%711, %712) /* ty=(Tensor[(12, 4, 10), bool], Tensor[(2, 11, 2), float32]) */;
  %714 = @func_12886() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(12, 13, 15), uint16]) */;
  %715 = cast(meta[relay.Constant][23] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %716 = reshape(%715, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
  %717 = @func_3033(%716) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) */;
  %718 = @func_6974() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %719 = cast(%var_15382, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %720 = cast(%var_15382, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %721 = cast(%var_15382, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %722 = reshape(%719, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %723 = reshape(%720, newshape=[1014, 2]) /* ty=Tensor[(1014, 2), float64] */;
  %724 = reshape(%721, newshape=[1014, 2]) /* ty=Tensor[(1014, 2), float64] */;
  %725 = @func_5376(%722, %723, %724) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(1014, 2), int64], Tensor[(6, 7, 9), float64], Tensor[(42), float64], Tensor[(1014, 2), bool], Tensor[(2, 11, 2), float64], Tensor[(2028), float64]) */;
  %726 = @func_2572() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %727 = @func_14963() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float32]) */;
  %728 = cast(meta[relay.Constant][23] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %729 = reshape(%728, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
  %730 = @func_3033(%729) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) */;
  %731 = %706.2;
  %732 = @func_2645(%708) /* ty=Tensor[(3, 5, 8), float32] */;
  %733 = %713.0;
  %734 = %714.1;
  %735 = %717.1;
  %736 = %718.0;
  %737 = %725.2;
  %738 = @func_9278() /* ty=Tensor[(12, 13, 15), uint16] */;
  %739 = %726.0;
  %740 = %727.3;
  %741 = %730.1;
  (%731, %732, meta[relay.Constant][22] /* ty=Tensor[(120), float32] */, %733, %var_15356, %var_15357, %734, %735, meta[relay.Constant][23] /* ty=Tensor[(2016), float64] */, %736, %737, %var_15382, %738, %739, %740, %741)
}

def @func_2429() -> Tensor[(2, 11, 2), float32] {
  %743 = fn () -> Tensor[(2, 11, 2), float32] {
    %742 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %742.0
  };
  %743() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_8128(%var_8115: Tensor[(9, 10, 16), float64]) -> (Tensor[(9, 10, 16), float64],) {
  %744 = cast(%var_8115, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %745 = erf(%744) /* ty=Tensor[(9, 10, 16), float64] */;
  (%745,)
}

def @func_10435() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %750 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
    %746 = @func_6493() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %747 = @func_9367() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %748 = %746.1;
    %749 = %747.0;
    (%748, %749)
  };
  %750() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */
}

def @func_9190() -> (Tensor[(2, 11, 2), float32],) {
  %751 = @func_4197() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %752 = %751.1;
  (%752,)
}

def @func_11165() -> Tensor[(2, 11, 2), float64] {
  %753 = fn () -> Tensor[(2, 11, 2), float64] {
    @func_9170() /* ty=Tensor[(2, 11, 2), float64] */
  };
  %753() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_4326() -> (Tensor[(2028), float64],) {
  %756 = fn () -> (Tensor[(2028), float64],) {
    %754 = @func_2458() /* ty=(Tensor[(2028), float64],) */;
    %755 = %754.0;
    (%755,)
  };
  %756() /* ty=(Tensor[(2028), float64],) */
}

def @func_2697() -> Tensor[(2, 11, 2), float32] {
  @func_2695() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_11906(%var_11905: Tensor[(2028), float64]) -> (Tensor[(2028), bool], Tensor[(2, 11, 2), float32]) {
  %766 = fn (%var_11888: Tensor[(2028), float64]) -> (Tensor[(2028), bool], Tensor[(2, 11, 2), float32]) {
    %757 = @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
    %758 = %757.2;
    %759 = cast(%var_11888, dtype="bool") /* ty=Tensor[(2028), bool] */;
    %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(1), int32] */;
    %761 = cast(%758, dtype="bool") /* ty=Tensor[(2028), bool] */;
    %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?), bool] */;
    %763 = @func_7141() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) */;
    %764 = greater(%761, %762) /* ty=Tensor[(2028), bool] */;
    %765 = %763.1;
    (%764, %765)
  };
  %766(%var_11905) /* ty=(Tensor[(2028), bool], Tensor[(2, 11, 2), float32]) */
}

def @func_17637(%var_17636: int32) -> Tensor[(?, 4, 7), float32] {
  %774 = fn (%var_17610: int32) -> Tensor[(?, 4, 7), float32] {
    %767 = cast(%var_17610, dtype="int32") /* ty=int32 */;
    %768 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 4, 7), int32] */, dtype="int32") /* ty=Tensor[(1, 4, 7), int32] */;
    %769 = bitwise_and(%767, %768) /* ty=Tensor[(1, 4, 7), int32] */;
    %770 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 4, 7), int32] */, dtype="float32") /* ty=Tensor[(1, 4, 7), float32] */;
    %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
    %772 = cast(%769, dtype="float32") /* ty=Tensor[(1, 4, 7), float32] */;
    %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    maximum(%772, %773) /* ty=Tensor[(?, 4, 7), float32] */
  };
  %774(%var_17636) /* ty=Tensor[(?, 4, 7), float32] */
}

def @func_13655() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_13653() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_1065() -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
  %775 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 13, 15), uint16] */, dtype="uint16") /* ty=Tensor[(12, 13, 15), uint16] */;
  %776 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(12, 13, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 13, 15), uint16] */, dtype="uint16") /* ty=Tensor[(12, 13, 15), uint16] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %779 = left_shift(%777, %778) /* ty=Tensor[(12, 13, 15), uint16] */;
  %780 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
  (%779, %780)
}

def @func_2324() -> Tensor[(2, 11, 2), float32] {
  %782 = fn () -> Tensor[(2, 11, 2), float32] {
    %781 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %781.0
  };
  %782() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_2459() -> (Tensor[(2028), float64],) {
  %784 = fn () -> (Tensor[(2028), float64],) {
    %783 = @func_1217() /* ty=Tensor[(2028), float64] */;
    (%783,)
  };
  %784() /* ty=(Tensor[(2028), float64],) */
}

def @func_6354(%var_6352: Tensor[(5, 13, 5), float64]) -> (Tensor[(5, 13, 5), float32], Tensor[(2016), float64]) {
  @func_6351(%var_6352) /* ty=(Tensor[(5, 13, 5), float32], Tensor[(2016), float64]) */
}

def @func_8457() -> (Tensor[(2, 11, 2), float32],) {
  %786 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %785 = @func_7265() /* ty=Tensor[(2, 11, 2), float32] */;
    (%785,)
  };
  %786() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_9407() -> (Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) {
  %791 = fn () -> (Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) {
    %787 = @func_8291() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), bool]) */;
    %788 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %789 = %787.1;
    %790 = %788.2;
    (%789, %790)
  };
  %791() /* ty=(Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) */
}

def @func_10366(%var_10365: Tensor[(2880), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(8, 36), float64], Tensor[(2880), float64]) {
  %809 = fn (%var_10355: Tensor[(2880), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(8, 36), float64], Tensor[(2880), float64]) {
    %792 = @func_8029() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %793 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %794 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
    %795 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 36), float64] */, dtype="float64") /* ty=Tensor[(8, 36), float64] */;
    %796 = cast(%var_10355, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %797 = cast(%var_10355, dtype="int32") /* ty=Tensor[(2880), int32] */;
    %798 = cast(%var_10355, dtype="float32") /* ty=Tensor[(2880), float32] */;
    %799 = reshape(%795, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
    %800 = reshape(%796, newshape=[288, 10]) /* ty=Tensor[(288, 10), float64] */;
    %801 = reshape(%797, newshape=[288, 10]) /* ty=Tensor[(288, 10), int32] */;
    %802 = reshape(%798, newshape=[288, 10]) /* ty=Tensor[(288, 10), float32] */;
    %803 = @func_6243(%799, %800, %801, %802) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(2, 11, 2), float32], Tensor[(288, 1), float32], Tensor[(288, 10), float32], Tensor[(288, 10), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(288, 10), bool], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %804 = %792.0;
    %805 = %793.0;
    %806 = %794.1;
    %807 = @func_6578() /* ty=Tensor[(2016), float64] */;
    %808 = %803.10;
    (%804, %805, %806, %807, %808, meta[relay.Constant][27] /* ty=Tensor[(8, 36), float64] */, %var_10355)
  };
  %809(%var_10365) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(8, 36), float64], Tensor[(2880), float64]) */
}

def @func_999() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %813 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %810 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %811 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
    %812 = %810.0;
    (%811, %812)
  };
  %813() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_11333(%var_11331: Tensor[(6, 3, 9), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), int32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), float32], Tensor[(2016), float64]) {
  @func_11330(%var_11331) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), int32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), float32], Tensor[(2016), float64]) */
}

def @func_11665() -> Tensor[(2, 11, 2), float32] {
  %815 = fn () -> Tensor[(2, 11, 2), float32] {
    %814 = @func_10965() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %814.0
  };
  %815() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_11272() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %820 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
    %816 = @func_9648() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(9, 10, 16), float64], Tensor[(20, 72), float64], Tensor[(2028), float32]) */;
    %817 = @func_526() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) */;
    %818 = %816.0;
    %819 = %817.2;
    (%818, %819)
  };
  %820() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */
}

def @func_296() -> Tensor[(2, 11, 2), float32] {
  @func_294() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_2783() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) {
  %821 = @func_2323() /* ty=Tensor[(2, 11, 2), float32] */;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %823 = reshape(%822, newshape=[2, 11, 2]) /* ty=Tensor[(2, 11, 2), float32] */;
  %824 = @func_1708(%823) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool]) */;
  %825 = %824.0;
  %826 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %827 = %826.1;
  %828 = cast(%827, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %829 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%825, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %832 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %833 = logical_and(%830, %831) /* ty=Tensor[(2, 11, 2), bool] */;
  %834 = %832.0;
  (%821, %833, %834)
}

def @func_11983() -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %841 = fn () -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %835 = @func_650() /* ty=(Tensor[(2028), float64],) */;
    %836 = @func_8842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %837 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %838 = %835.0;
    %839 = %836.1;
    %840 = %837.0;
    (%838, %839, %840)
  };
  %841() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_12557() -> Tensor[(2, 11, 2), bool] {
  %842 = @func_9406() /* ty=(Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) */;
  %842.0
}

def @func_6966() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_6964() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_3596(%var_3594: Tensor[(6, 7, 1), float64]) -> (Tensor[(6, 7, 9), float64],) {
  @func_3593(%var_3594) /* ty=(Tensor[(6, 7, 9), float64],) */
}

def @func_14426() -> (Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) {
  @func_14424() /* ty=(Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_7436() -> Tensor[(12, 13, 15), uint16] {
  %843 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %843.2
}

def @func_15037() -> Tensor[(2, 11, 2), float32] {
  @func_15035() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_527() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) {
  %850 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) {
    %844 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %845 = cast(meta[relay.Constant][28] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %846 = reshape(%845, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
    %847 = @func_447(%846) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
    %848 = %844.0;
    %849 = %847.1;
    (%848, %849, meta[relay.Constant][28] /* ty=Tensor[(2016), float64] */)
  };
  %850() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) */
}

def @func_582() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %856 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %851 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %852 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %853 = %851.0;
    %854 = %852.0;
    %855 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
    (%853, %854, %855)
  };
  %856() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_1046() -> (Tensor[(2, 11, 2), float32],) {
  %858 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %857 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
    (%857,)
  };
  %858() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_9255() -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
  %863 = fn () -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
    %859 = @func_7471() /* ty=(Tensor[(12, 13, 15), uint16],) */;
    %860 = @func_4632() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
    %861 = %859.0;
    %862 = %860.0;
    (%861, %862)
  };
  %863() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */
}

def @func_13780() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(162), float64], Tensor[(12, 1, 13), float64], Tensor[(2, 11, 2), bool]) {
  %864 = @func_4419() /* ty=Tensor[(2016), float64] */;
  %865 = cast(%864, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %866 = cast(meta[relay.Constant][29] /* ty=Tensor[(162), float64] */, dtype="float64") /* ty=Tensor[(162), float64] */;
  %867 = reshape(%866, newshape=[6, 3, 9]) /* ty=Tensor[(6, 3, 9), float64] */;
  %868 = @func_11330(%867) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), int32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 3, 9), float32], Tensor[(2016), float64]) */;
  %869 = @func_11111() /* ty=(Tensor[(12, 1, 13), float64],) */;
  %870 = @func_2783() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) */;
  %871 = cosh(%865) /* ty=Tensor[(2016), float64] */;
  %872 = %868.0;
  %873 = %869.0;
  %874 = %870.1;
  (%871, %872, meta[relay.Constant][29] /* ty=Tensor[(162), float64] */, %873, %874)
}

def @func_1404(%var_1382: Tensor[(6, 16, 6), uint64]) -> (Tensor[(6, 16, 6), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) {
  %875 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 16, 6), uint64] */, dtype="bool") /* ty=Tensor[(6, 16, 6), bool] */;
  %876 = shape_of(%var_1382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%var_1382, dtype="bool") /* ty=Tensor[(6, 16, 6), bool] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %879 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %880 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %881 = not_equal(%877, %878) /* ty=Tensor[(6, 16, 6), bool] */;
  %882 = %879.0;
  %883 = %880.0;
  (%881, %882, %883)
}

def @func_12244(%var_12243: Tensor[(1), int8]) -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(1), int8], Tensor[(2, 11, 2), float32]) {
  %891 = fn (%var_12219: Tensor[(1), int8]) -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(1), int8], Tensor[(2, 11, 2), float32]) {
    %884 = @func_5661() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %885 = cast(%var_12219, dtype="int8") /* ty=Tensor[(1), int8] */;
    %886 = reshape(%885, newshape=[1]) /* ty=Tensor[(1), int8] */;
    %887 = @func_7886(%886) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(360, 2028), float64]) */;
    %888 = %884.0;
    %889 = %887.6;
    %890 = @func_3521() /* ty=Tensor[(2, 11, 2), float32] */;
    (%888, %889, %var_12219, %890)
  };
  %891(%var_12243) /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(1), int8], Tensor[(2, 11, 2), float32]) */
}

def @func_12076() -> (Tensor[(2, 11, 2), float32],) {
  @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_1067() -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
  @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */
}

def @func_15254() -> Tensor[(2016), float64] {
  @func_15252() /* ty=Tensor[(2016), float64] */
}

def @func_9682() -> (Tensor[(2016), float32],) {
  %892 = @func_8404() /* ty=Tensor[(2016), float32] */;
  (%892,)
}

def @func_10530() -> (Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float64]) {
  %893 = @func_7980() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), float32]) */;
  %894 = @func_7980() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(12, 13, 15), float32]) */;
  %895 = %893.0;
  %896 = @func_8155() /* ty=Tensor[(2, 11, 2), float32] */;
  %897 = @func_9914() /* ty=Tensor[(2, 11, 2), float32] */;
  %898 = @func_6578() /* ty=Tensor[(2016), float64] */;
  %899 = %894.0;
  (%895, %896, %897, %898, %899)
}

def @func_2613() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %906 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
    %900 = @func_378() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %901 = cast(meta[relay.Constant][31] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %902 = reshape(%901, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
    %903 = @func_949(%902) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */;
    %904 = %900.0;
    %905 = %903.1;
    (%904, %905, meta[relay.Constant][31] /* ty=Tensor[(2028), float64] */)
  };
  %906() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */
}

def @func_9336() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %910 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
    %907 = @func_3761() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %908 = %907.1;
    %909 = @func_6308() /* ty=Tensor[(2016), float64] */;
    (%908, %909)
  };
  %910() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */
}

def @func_10266(%var_10209: Tensor[(9, 14, 6), float32]) -> (Tensor[(9, 14, 6), float32], Tensor[(9, 14, 6), float64], Tensor[(2016), float32]) {
  %911 = cast(%var_10209, dtype="float32") /* ty=Tensor[(9, 14, 6), float32] */;
  %912 = cast(%var_10209, dtype="float64") /* ty=Tensor[(9, 14, 6), float64] */;
  %913 = @func_9682() /* ty=(Tensor[(2016), float32],) */;
  %914 = rsqrt(%911) /* ty=Tensor[(9, 14, 6), float32] */;
  %915 = atan(%912) /* ty=Tensor[(9, 14, 6), float64] */;
  %916 = %913.0;
  (%914, %915, %916)
}

def @func_3762() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %921 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %917 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
    %918 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %919 = %917.1;
    %920 = %918.0;
    (%919, %920)
  };
  %921() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_17998() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float64]) {
  %922 = @func_7408() /* ty=Tensor[(2016), float64] */;
  %923 = @func_5270() /* ty=Tensor[(2, 11, 2), float64] */;
  (%922, %923)
}

def @func_5927() -> (Tensor[(2, 11, 2), float32],) {
  %925 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %924 = @func_5857() /* ty=Tensor[(2, 11, 2), float32] */;
    (%924,)
  };
  %925() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_17864() -> Tensor[(2, 11, 2), float32] {
  @func_17862() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_3870() -> (Tensor[(2016), float64],) {
  %926 = @func_2057() /* ty=(Tensor[(2016), float64],) */;
  %927 = %926.0;
  (%927,)
}

def @func_6406(%var_6404: Tensor[(36, 16), uint64]) -> (Tensor[(2, 11, 2), float32], Tensor[(6, 96), uint64], Tensor[(36, 16), uint64]) {
  @func_6403(%var_6404) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(6, 96), uint64], Tensor[(36, 16), uint64]) */
}

def @func_1807() -> (Tensor[(2, 11, 2), float32],) {
  %928 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %929 = %928.0;
  (%929,)
}

def @func_11112() -> (Tensor[(12, 1, 13), float64],) {
  %934 = fn () -> (Tensor[(12, 1, 13), float64],) {
    %930 = @func_10080() /* ty=(Tensor[(12, 1, 13), float64], Tensor[(2, 11, 2), float32]) */;
    %931 = %930.0;
    %932 = cast(%931, dtype="float64") /* ty=Tensor[(12, 1, 13), float64] */;
    %933 = sqrt(%932) /* ty=Tensor[(12, 1, 13), float64] */;
    (%933,)
  };
  %934() /* ty=(Tensor[(12, 1, 13), float64],) */
}

def @func_4686(%var_4684: uint16, %var_4685: Tensor[(12, 4, 10), uint16]) -> (Tensor[(12, 4, 10), bool], Tensor[(2, 11, 2), float32]) {
  %940 = fn (%var_4643: uint16, %var_4644: Tensor[(12, 4, 10), uint16]) -> (Tensor[(12, 4, 10), bool], Tensor[(2, 11, 2), float32]) {
    %935 = cast(%var_4643, dtype="bool") /* ty=bool */;
    %936 = cast(%var_4644, dtype="bool") /* ty=Tensor[(12, 4, 10), bool] */;
    %937 = @func_842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %938 = greater_equal(%935, %936) /* ty=Tensor[(12, 4, 10), bool] */;
    %939 = %937.2;
    (%938, %939)
  };
  %940(%var_4684, %var_4685) /* ty=(Tensor[(12, 4, 10), bool], Tensor[(2, 11, 2), float32]) */
}

def @func_118() -> (Tensor[(2, 11, 2), float32],) {
  %941 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 11, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %942 = acosh(%941) /* ty=Tensor[(2, 11, 2), float32] */;
  (%942,)
}

def @func_1454() -> Tensor[(2, 11, 2), float32] {
  %943 = @func_909() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %943.1
}

def @func_13782() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(162), float64], Tensor[(12, 1, 13), float64], Tensor[(2, 11, 2), bool]) {
  @func_13780() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(162), float64], Tensor[(12, 1, 13), float64], Tensor[(2, 11, 2), bool]) */
}

def @func_10184() -> Tensor[(2, 11, 2), float32] {
  @func_5596() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_7693() -> Tensor[(2, 11, 2), float32] {
  %944 = @func_6732() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %944.0
}

def @func_2572() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %945 = @func_589() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %946 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %947 = %945.0;
  %948 = %946.1;
  (%947, %948)
}

def @func_6035(%var_6033: Tensor[(11, 9, 8), int16], %var_6034: Tensor[(11, 9, 8), int16]) -> (Tensor[(11, 9, 8), bool], Tensor[(11, 9, 8), float64]) {
  %956 = fn (%var_5977: Tensor[(11, 9, 8), int16], %var_5978: Tensor[(11, 9, 8), int16]) -> (Tensor[(11, 9, 8), bool], Tensor[(11, 9, 8), float64]) {
    %949 = cast(%var_5978, dtype="bool") /* ty=Tensor[(11, 9, 8), bool] */;
    %950 = shape_of(%var_5977, dtype="int32") /* ty=Tensor[(3), int32] */;
    %951 = cast(%var_5977, dtype="bool") /* ty=Tensor[(11, 9, 8), bool] */;
    %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %953 = cast(%var_5977, dtype="float64") /* ty=Tensor[(11, 9, 8), float64] */;
    %954 = equal(%951, %952) /* ty=Tensor[(11, 9, 8), bool] */;
    %955 = log2(%953) /* ty=Tensor[(11, 9, 8), float64] */;
    (%954, %955)
  };
  %956(%var_6033, %var_6034) /* ty=(Tensor[(11, 9, 8), bool], Tensor[(11, 9, 8), float64]) */
}

def @func_13485() -> Tensor[(2, 11, 2), float32] {
  @func_12993() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_8209() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %960 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %957 = @func_6964() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %958 = %957.0;
    %959 = @func_3456() /* ty=Tensor[(2, 11, 2), float32] */;
    (%958, %959)
  };
  %960() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_6683(%var_6681: Tensor[(8, 8, 16), float64], %var_6682: Tensor[(8, 8, 16), float64]) -> (Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), float32]) {
  @func_6679(%var_6681, %var_6682) /* ty=(Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_1927(%var_1923: Tensor[(2, 1008), float64]) -> (Tensor[(2028), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 1008), int32]) {
  %961 = @func_1217() /* ty=Tensor[(2028), float64] */;
  %962 = cast(%961, dtype="float32") /* ty=Tensor[(2028), float32] */;
  %963 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %964 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %965 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 1008), float64] */, dtype="float64") /* ty=Tensor[(2, 1008), float64] */;
  %966 = reshape(%965, newshape=[2016, 1]) /* ty=Tensor[(2016, 1), float64] */;
  %967 = @func_1352(%966) /* ty=(Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2028), float64], Tensor[(2016, 1), float64]) */;
  %968 = cast(%var_1923, dtype="int32") /* ty=Tensor[(2, 1008), int32] */;
  %969 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(2, 1008), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %970 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 1008), float64] */, dtype="int32") /* ty=Tensor[(2, 1008), int32] */;
  %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %972 = erf(%962) /* ty=Tensor[(2028), float32] */;
  %973 = %963.0;
  %974 = %964.0;
  %975 = %967.1;
  %976 = add(%970, %971) /* ty=Tensor[(2, 1008), int32] */;
  (%972, %973, %974, %975, %976)
}

def @func_11863() -> Tensor[(2, 11, 2), float32] {
  @func_11861() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_714() -> Tensor[(2, 11, 2), float32] {
  @func_712() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_10126() -> Tensor[(2, 11, 2), float32] {
  %977 = fn () -> Tensor[(2, 11, 2), float32] {
    @func_9997() /* ty=Tensor[(2, 11, 2), float32] */
  };
  %977() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_15733() -> Tensor[(2, 11, 2), float32] {
  %978 = fn () -> Tensor[(2, 11, 2), float32] {
    @func_11838() /* ty=Tensor[(2, 11, 2), float32] */
  };
  %978() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_8518() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %979 = @func_8208() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %980 = @func_7738() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %981 = @func_7693() /* ty=Tensor[(2, 11, 2), float32] */;
  %982 = %979.1;
  %983 = %980.0;
  (%981, %982, %983)
}

def @func_10419() -> (Tensor[(12, 13, 15), uint16],) {
  @func_10417() /* ty=(Tensor[(12, 13, 15), uint16],) */
}

def @func_6907() -> Tensor[(2, 11, 2), float32] {
  %985 = fn () -> Tensor[(2, 11, 2), float32] {
    %984 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %984.0
  };
  %985() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_12103() -> Tensor[(2, 11, 2), float32] {
  %986 = @func_11511() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32], Tensor[(3, 117), float32]) */;
  %986.0
}

def @func_5635() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %987 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %988 = @func_998() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %989 = @func_2458() /* ty=(Tensor[(2028), float64],) */;
  %990 = %987.0;
  %991 = %988.0;
  %992 = %989.0;
  (%990, %991, %992)
}

def @func_2035() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %993 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %994 = @func_998() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %995 = @func_1065() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %996 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %997 = @func_998() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %998 = %993.0;
  %999 = %994.0;
  %1000 = %995.0;
  %1001 = %996.0;
  %1002 = %997.1;
  (%998, %999, %1000, %1001, %1002)
}

def @func_12439() -> (Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16]) {
  %1005 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16]) {
    %1003 = @func_7632() /* ty=Tensor[(2, 11, 2), float32] */;
    %1004 = @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */;
    (%1003, %1004)
  };
  %1005() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16]) */
}

def @func_8236(%var_8210: Tensor[(5, 6, 3), float64], %var_8211: Tensor[(5, 6, 3), float64]) -> Tensor[(5, 6, 3), float64] {
  %1006 = cast(%var_8211, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %1007 = shape_of(%var_8210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1008 = cast(%var_8210, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1008, %1009) /* ty=Tensor[(5, 6, 3), float64] */
}

def @func_12520(%var_12518: Tensor[(1440), float64]) -> (Tensor[(2016), float64], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) {
  @func_12517(%var_12518) /* ty=(Tensor[(2016), float64], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) */
}

def @func_17059() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_17057() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_17862() -> Tensor[(2, 11, 2), float32] {
  %1010 = @func_6974() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1010.0
}

def @func_15864() -> (Tensor[(2, 11, 2), float32],) {
  @func_15862() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_13216(%var_13214: uint16, %var_13215: Tensor[(2028), float64]) -> (Tensor[(2, 14, 14), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), uint16], Tensor[(2028), float64]) {
  %1020 = fn (%var_13192: uint16, %var_13207: Tensor[(2028), float64]) -> (Tensor[(2, 14, 14), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), uint16], Tensor[(2028), float64]) {
    %1011 = cast(%var_13192, dtype="bool") /* ty=bool */;
    %1012 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 14, 14), uint16] */, dtype="bool") /* ty=Tensor[(2, 14, 14), bool] */;
    %1013 = @func_11633() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1014 = cast(%var_13207, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %1015 = reshape(%1014, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
    %1016 = @func_1151(%1015) /* ty=(Tensor[(2028), uint16],) */;
    %1017 = equal(%1011, %1012) /* ty=Tensor[(2, 14, 14), bool] */;
    %1018 = %1013.0;
    %1019 = %1016.0;
    (%1017, %1018, %1019, %var_13207)
  };
  %1020(%var_13214, %var_13215) /* ty=(Tensor[(2, 14, 14), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), uint16], Tensor[(2028), float64]) */
}

def @func_8937() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2016), float32], Tensor[(2028), float64]) {
  %1021 = @func_3870() /* ty=(Tensor[(2016), float64],) */;
  %1022 = @func_8155() /* ty=Tensor[(2, 11, 2), float32] */;
  %1023 = %1021.0;
  %1024 = @func_8404() /* ty=Tensor[(2016), float32] */;
  %1025 = @func_1217() /* ty=Tensor[(2028), float64] */;
  (%1022, %1023, %1024, %1025)
}

def @func_1809() -> (Tensor[(2, 11, 2), float32],) {
  @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_13099() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %1026 = @func_8842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1027 = @func_4217() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1028 = @func_9254() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %1029 = @func_6732() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1030 = %1026.1;
  %1031 = @func_9997() /* ty=Tensor[(2, 11, 2), float32] */;
  %1032 = @func_12103() /* ty=Tensor[(2, 11, 2), float32] */;
  %1033 = %1027.0;
  %1034 = %1028.0;
  %1035 = %1029.0;
  %1036 = @func_10911() /* ty=Tensor[(2, 11, 2), float32] */;
  %1037 = @func_6615() /* ty=Tensor[(2, 11, 2), float32] */;
  %1038 = @func_8686() /* ty=Tensor[(2028), float64] */;
  (%1030, %1031, %1032, %1033, %1034, %1035, %1036, %1037, %1038)
}

def @func_1490() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_590() -> (Tensor[(2, 11, 2), float32],) {
  %1041 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1039 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1040 = %1039.1;
    (%1040,)
  };
  %1041() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_14699() -> Tensor[(2, 11, 2), float32] {
  @func_14697() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_13574(%var_13564: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2028), bool]) {
  %1042 = @func_2612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %1043 = @func_4337() /* ty=(Tensor[(2028), float64],) */;
  %1044 = %1043.0;
  %1045 = cast(%var_13564, dtype="bool") /* ty=Tensor[(2028), bool] */;
  %1046 = shape_of(%1044, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1047 = cast(%1044, dtype="bool") /* ty=Tensor[(2028), bool] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1049 = %1042.1;
  %1050 = equal(%1047, %1048) /* ty=Tensor[(2028), bool] */;
  (%1049, %1050)
}

def @func_15115() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) {
  %1059 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) {
    %1051 = @func_2523() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1052 = @func_842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1053 = cast(meta[relay.Constant][35] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %1054 = reshape(%1053, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
    %1055 = @func_8128(%1054) /* ty=(Tensor[(9, 10, 16), float64],) */;
    %1056 = %1051.3;
    %1057 = %1052.0;
    %1058 = %1055.0;
    (%1056, %1057, %1058, meta[relay.Constant][35] /* ty=Tensor[(1440), float64] */)
  };
  %1059() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) */
}

def @func_18899() -> Tensor[(2, 11, 2), float32] {
  %1060 = @func_9335() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %1060.0
}

def @func_120() -> (Tensor[(2, 11, 2), float32],) {
  @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_10269(%var_10267: Tensor[(9, 14, 6), float32]) -> (Tensor[(9, 14, 6), float32], Tensor[(9, 14, 6), float64], Tensor[(2016), float32]) {
  @func_10266(%var_10267) /* ty=(Tensor[(9, 14, 6), float32], Tensor[(9, 14, 6), float64], Tensor[(2016), float32]) */
}

def @func_16318() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1061 = @func_13099() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %1062 = @func_16006() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %1063 = @func_2066() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1064 = %1061.6;
  %1065 = %1062.0;
  %1066 = %1063.0;
  (%1064, %1065, %1066)
}

def @func_16273() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_16271() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_16027() -> (Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32]) {
  @func_16025() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32]) */
}

def @func_13854() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  @func_13852() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_7473() -> (Tensor[(12, 13, 15), uint16],) {
  @func_7471() /* ty=(Tensor[(12, 13, 15), uint16],) */
}

def @func_9419() -> (Tensor[(2, 11, 2), float32],) {
  %1068 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1067 = @func_3701() /* ty=Tensor[(2, 11, 2), float32] */;
    (%1067,)
  };
  %1068() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_8989() -> Tensor[(2016), float32] {
  %1069 = fn () -> Tensor[(2016), float32] {
    @func_8404() /* ty=Tensor[(2016), float32] */
  };
  %1069() /* ty=Tensor[(2016), float32] */
}

def @func_9714() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) {
  %1073 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) {
    %1070 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1071 = %1070.0;
    %1072 = @func_2846() /* ty=Tensor[(2, 11, 2), float64] */;
    (%1071, %1072)
  };
  %1073() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64]) */
}

def @func_4632() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  %1074 = @func_589() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1075 = cast(meta[relay.Constant][36] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1076 = reshape(%1075, newshape=[2, 1008]) /* ty=Tensor[(2, 1008), float64] */;
  %1077 = @func_1927(%1076) /* ty=(Tensor[(2028), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 1008), int32]) */;
  %1078 = %1074.0;
  %1079 = %1077.2;
  (%1078, %1079, meta[relay.Constant][36] /* ty=Tensor[(2016), float64] */)
}

def @func_6711() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1080 = @func_2885() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) */;
  %1081 = %1080.2;
  %1082 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1081, %1082)
}

def @func_7267() -> Tensor[(2, 11, 2), float32] {
  @func_7265() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_14996() -> (Tensor[(2, 11, 2), float32],) {
  @func_14994() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_10081() -> (Tensor[(12, 1, 13), float64], Tensor[(2, 11, 2), float32]) {
  %1090 = fn () -> (Tensor[(12, 1, 13), float64], Tensor[(2, 11, 2), float32]) {
    %1083 = cast(3.1569f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1084 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(12, 1, 13), float64] */;
    %1085 = cast(3.1569f64 /* ty=float64 */, dtype="int8") /* ty=int8 */;
    %1086 = reshape(%1085, newshape=[1]) /* ty=Tensor[(1), int8] */;
    %1087 = @func_7886(%1086) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(360, 2028), float64]) */;
    %1088 = power(%1083, %1084) /* ty=Tensor[(12, 1, 13), float64] */;
    %1089 = %1087.5;
    (%1088, %1089)
  };
  %1090() /* ty=(Tensor[(12, 1, 13), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_5271() -> Tensor[(2, 11, 2), float64] {
  %1091 = fn () -> Tensor[(2, 11, 2), float64] {
    @func_2846() /* ty=Tensor[(2, 11, 2), float64] */
  };
  %1091() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_12959() -> Tensor[(2016), float32] {
  %1092 = @func_9682() /* ty=(Tensor[(2016), float32],) */;
  %1092.0
}

def @func_16320() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_16318() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_8638(%var_8637: Tensor[(2016), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) {
  %1098 = fn (%var_8621: Tensor[(2016), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) {
    %1093 = cast(%var_8621, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %1094 = reshape(%1093, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
    %1095 = @func_447(%1094) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
    %1096 = @func_2428() /* ty=Tensor[(2, 11, 2), float32] */;
    %1097 = %1095.1;
    (%1096, %1097, %var_8621)
  };
  %1098(%var_8637) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) */
}

def @func_9914() -> Tensor[(2, 11, 2), float32] {
  %1099 = @func_6732() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1099.1
}

def @func_1876() -> (Tensor[(2, 11, 2), float32],) {
  %1102 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1100 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1101 = %1100.1;
    (%1101,)
  };
  %1102() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_13653() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1103 = @func_3452() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1104 = @func_1625() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1105 = %1103.0;
  %1106 = %1104.1;
  (%1105, %1106)
}

def @func_1154(%var_1152: Tensor[(2028), float64]) -> (Tensor[(2028), uint16],) {
  @func_1151(%var_1152) /* ty=(Tensor[(2028), uint16],) */
}

def @func_15968() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_15966() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_12994() -> Tensor[(2, 11, 2), float32] {
  %1108 = fn () -> Tensor[(2, 11, 2), float32] {
    %1107 = @func_11396() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1107.1
  };
  %1108() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_1456() -> Tensor[(2, 11, 2), float32] {
  @func_1454() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_4338() -> (Tensor[(2028), float64],) {
  %1111 = fn () -> (Tensor[(2028), float64],) {
    %1109 = @func_650() /* ty=(Tensor[(2028), float64],) */;
    %1110 = %1109.0;
    (%1110,)
  };
  %1111() /* ty=(Tensor[(2028), float64],) */
}

def @func_11861() -> Tensor[(2, 11, 2), float32] {
  @func_5677() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_13027() -> Tensor[(2, 11, 2), float32] {
  %1113 = fn () -> Tensor[(2, 11, 2), float32] {
    %1112 = @func_11271() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
    %1112.0
  };
  %1113() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_17193() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_17191() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_16863() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1114 = @func_12753() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1115 = @func_7215() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1116 = %1114.0;
  %1117 = %1115.1;
  (%1116, %1117)
}

def @func_14831() -> (Tensor[(2028), float64],) {
  %1118 = @func_6545() /* ty=(Tensor[(2028), float64],) */;
  %1119 = %1118.0;
  (%1119,)
}

def @func_17659() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028, 1), float64]) {
  %1120 = cast(meta[relay.Constant][38] /* ty=Tensor[(2028, 1), float64] */, dtype="float64") /* ty=Tensor[(2028, 1), float64] */;
  %1121 = reshape(%1120, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %1122 = @func_7494(%1121) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %1123 = @func_15035() /* ty=Tensor[(2, 11, 2), float32] */;
  %1124 = @func_7045() /* ty=Tensor[(2, 11, 2), float32] */;
  %1125 = %1122.1;
  (%1123, %1124, %1125, meta[relay.Constant][38] /* ty=Tensor[(2028, 1), float64] */)
}

def @func_17888() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(576), uint64]) {
  @func_17886() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(576), uint64]) */
}

def @func_5509() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) {
  %1132 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) {
    %1126 = @func_4419() /* ty=Tensor[(2016), float64] */;
    %1127 = cast(%1126, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %1128 = @func_4885() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1129 = @func_3521() /* ty=Tensor[(2, 11, 2), float32] */;
    %1130 = cos(%1127) /* ty=Tensor[(2016), float32] */;
    %1131 = %1128.0;
    (%1129, %1130, %1131)
  };
  %1132() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_10168() -> (Tensor[(2016), float64],) {
  @func_10166() /* ty=(Tensor[(2016), float64],) */
}

def @func_3702() -> Tensor[(2, 11, 2), float32] {
  %1134 = fn () -> Tensor[(2, 11, 2), float32] {
    %1133 = @func_3350() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1133.0
  };
  %1134() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_7215() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1135 = @func_6785() /* ty=(Tensor[(2016), float64], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1136 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1137 = %1135.2;
  %1138 = %1136.4;
  %1139 = @func_712() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1137, %1138, %1139)
}

def @func_17661() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028, 1), float64]) {
  @func_17659() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028, 1), float64]) */
}

def @func_18705() -> Tensor[(2, 11, 2), float32] {
  %1140 = @func_9418() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1140.0
}

def @func_6589() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1145 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %1141 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1142 = @func_2523() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1143 = %1141.2;
    %1144 = %1142.2;
    (%1143, %1144)
  };
  %1145() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_6493() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1146 = @func_5508() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) */;
  %1147 = @func_3394() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1148 = %1146.2;
  %1149 = %1147.0;
  %1150 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1148, %1149, %1150)
}

def @func_10142() -> (Tensor[(2, 11, 2), float32],) {
  @func_10140() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_16967() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(2016), float64]) {
  %1151 = @func_5677() /* ty=Tensor[(2, 11, 2), float32] */;
  %1152 = cast(%1151, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %1153 = reshape(%1152, newshape=[2, 11, 2]) /* ty=Tensor[(2, 11, 2), float32] */;
  %1154 = @func_1708(%1153) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool]) */;
  %1155 = @func_5661() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1156 = %1154.1;
  %1157 = %1155.0;
  (%1151, %1156, %1157)
}

def @func_16598() -> (Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1158 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1159 = @func_8686() /* ty=Tensor[(2028), float64] */;
  %1160 = %1158.2;
  %1161 = @func_2695() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1159, %1160, %1161)
}

def @func_14673() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1165 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %1162 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1163 = @func_729() /* ty=Tensor[(2, 11, 2), float32] */;
    %1164 = %1162.0;
    (%1163, %1164)
  };
  %1165() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_7886(%var_7842: Tensor[(1), int8]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(6, 6, 10), int8], Tensor[(1), int8], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(360, 2028), float64]) {
  %1166 = @func_4875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1167 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1168 = cast(%var_7842, dtype="int8") /* ty=Tensor[(1), int8] */;
  %1169 = cast(meta[relay.Constant][39] /* ty=Tensor[(360, 1), int8] */, dtype="int8") /* ty=Tensor[(360, 1), int8] */;
  %1170 = reshape(%1168, newshape=[1, 1, 1]) /* ty=Tensor[(1, 1, 1), int8] */;
  %1171 = reshape(%1169, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), int8] */;
  %1172 = @func_5926() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1173 = @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %1174 = @func_6545() /* ty=(Tensor[(2028), float64],) */;
  %1175 = %1174.0;
  %1176 = cast(%1175, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1177 = cast(meta[relay.Constant][39] /* ty=Tensor[(360, 1), int8] */, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %1178 = @func_2695() /* ty=Tensor[(2, 11, 2), float32] */;
  %1179 = %1166.0;
  %1180 = %1167.0;
  %1181 = @func_5031(%1170, %1171) /* ty=Tensor[(6, 6, 10), int8] */;
  %1182 = %1172.0;
  %1183 = %1173.0;
  %1184 = floor_divide(%1176, %1177) /* ty=Tensor[(360, 2028), float64] */;
  (%1178, %1179, %1180, %1181, %var_7842, %1182, %1183, %1184)
}

def @func_191() -> (Tensor[(2, 11, 2), float32],) {
  %1187 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1185 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1186 = %1185.0;
    (%1186,)
  };
  %1187() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_3433(%var_3431: Tensor[(15, 8, 7), float64]) -> (Tensor[(15, 8, 7), bool], Tensor[(2, 11, 2), float32]) {
  @func_3430(%var_3431) /* ty=(Tensor[(15, 8, 7), bool], Tensor[(2, 11, 2), float32]) */
}

def @func_4918() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32]) {
  %1195 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32]) {
    %1188 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
    %1189 = %1188.0;
    %1190 = cast(%1189, dtype="float32") /* ty=Tensor[(2028), float32] */;
    %1191 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1192 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
    %1193 = sqrt(%1190) /* ty=Tensor[(2028), float32] */;
    %1194 = %1191.0;
    (%1192, %1193, %1194)
  };
  %1195() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_1218() -> Tensor[(2028), float64] {
  %1197 = fn () -> Tensor[(2028), float64] {
    %1196 = @func_650() /* ty=(Tensor[(2028), float64],) */;
    %1196.0
  };
  %1197() /* ty=Tensor[(2028), float64] */
}

def @func_161(%var_149: Tensor[(12, 13, 13), float64]) -> (Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) {
  %1198 = cast(%var_149, dtype="float64") /* ty=Tensor[(12, 13, 13), float64] */;
  %1199 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1200 = atan(%1198) /* ty=Tensor[(12, 13, 13), float64] */;
  %1201 = %1199.0;
  (%1200, %1201)
}

def @func_9280() -> Tensor[(12, 13, 15), uint16] {
  @func_9278() /* ty=Tensor[(12, 13, 15), uint16] */
}

def @func_12559() -> Tensor[(2, 11, 2), bool] {
  @func_12557() /* ty=Tensor[(2, 11, 2), bool] */
}

def @func_6785() -> (Tensor[(2016), float64], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1202 = @func_526() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) */;
  %1203 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %1204 = %1203.0;
  %1205 = cast(%1204, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1206 = reshape(%1205, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %1207 = @func_3140(%1206) /* ty=(Tensor[(2, 12, 3), uint8], Tensor[(12, 13, 13), float64], Tensor[(2028), float64], Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %1208 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1209 = %1202.2;
  %1210 = %1207.4;
  %1211 = %1208.0;
  (%1209, %1204, %1210, %1211)
}

def @func_12887() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(12, 13, 15), uint16]) {
  %1219 = fn () -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(12, 13, 15), uint16]) {
    %1212 = @func_1875() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1213 = @func_10166() /* ty=(Tensor[(2016), float64],) */;
    %1214 = @func_10417() /* ty=(Tensor[(12, 13, 15), uint16],) */;
    %1215 = @func_7408() /* ty=Tensor[(2016), float64] */;
    %1216 = %1212.0;
    %1217 = %1213.0;
    %1218 = %1214.0;
    (%1215, %1216, %1217, %1218)
  };
  %1219() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(12, 13, 15), uint16]) */
}

def @func_4032() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1223 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %1220 = @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1221 = %1220.0;
    %1222 = @func_1454() /* ty=Tensor[(2, 11, 2), float32] */;
    (%1221, %1222)
  };
  %1223() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_18123(%var_18122: Tensor[(126), float64]) -> (Tensor[(2016), float32], Tensor[(14, 9, 1), float64], Tensor[(126), float64]) {
  %1229 = fn (%var_18104: Tensor[(126), float64]) -> (Tensor[(2016), float32], Tensor[(14, 9, 1), float64], Tensor[(126), float64]) {
    %1224 = cast(%var_18104, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1225 = reshape(%1224, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), float64] */;
    %1226 = @func_16832(%1225) /* ty=(Tensor[(14, 9, 1), float64],) */;
    %1227 = @func_12959() /* ty=Tensor[(2016), float32] */;
    %1228 = %1226.0;
    (%1227, %1228, %var_18104)
  };
  %1229(%var_18122) /* ty=(Tensor[(2016), float32], Tensor[(14, 9, 1), float64], Tensor[(126), float64]) */
}

def @func_16025() -> (Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32]) {
  %1230 = @func_11511() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32], Tensor[(3, 117), float32]) */;
  %1231 = @func_7570() /* ty=Tensor[(2, 11, 2), float64] */;
  %1232 = @func_3521() /* ty=Tensor[(2, 11, 2), float32] */;
  %1233 = %1230.1;
  (%1231, %1232, %1233)
}

def @func_15910() -> (Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_15908() /* ty=(Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_2647(%var_2646: Tensor[(3, 5, 8), float32]) -> Tensor[(3, 5, 8), float32] {
  %1235 = fn (%var_2634: Tensor[(3, 5, 8), float32]) -> Tensor[(3, 5, 8), float32] {
    %1234 = cast(%var_2634, dtype="float32") /* ty=Tensor[(3, 5, 8), float32] */;
    atanh(%1234) /* ty=Tensor[(3, 5, 8), float32] */
  };
  %1235(%var_2646) /* ty=Tensor[(3, 5, 8), float32] */
}

def @func_5598() -> Tensor[(2, 11, 2), float32] {
  @func_5596() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_729() -> Tensor[(2, 11, 2), float32] {
  @func_712() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_1354(%var_1353: Tensor[(2016, 1), float64]) -> (Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2028), float64], Tensor[(2016, 1), float64]) {
  %1251 = fn (%var_1349: Tensor[(2016, 1), float64]) -> (Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2028), float64], Tensor[(2016, 1), float64]) {
    %1236 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1237 = %1236.0;
    %1238 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
    %1239 = cast(%1238, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
    %1240 = shape_of(%1237, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1241 = cast(%1237, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
    %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1243 = @func_650() /* ty=(Tensor[(2028), float64],) */;
    %1244 = cast(%var_1349, dtype="float64") /* ty=Tensor[(2016, 1), float64] */;
    %1245 = reshape(%1244, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
    %1246 = @func_447(%1245) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
    %1247 = less(%1241, %1242) /* ty=Tensor[(2, 11, 2), bool] */;
    %1248 = @func_712() /* ty=Tensor[(2, 11, 2), float32] */;
    %1249 = %1243.0;
    %1250 = %1246.1;
    (%1247, %1248, %1249, %1250, %var_1349)
  };
  %1251(%var_1353) /* ty=(Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2028), float64], Tensor[(2016, 1), float64]) */
}

def @func_10201() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %1255 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
    %1252 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
    %1253 = @func_7265() /* ty=Tensor[(2, 11, 2), float32] */;
    %1254 = %1252.0;
    (%1253, %1254)
  };
  %1255() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */
}

def @func_7632() -> Tensor[(2, 11, 2), float32] {
  %1256 = @func_3350() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1256.0
}

def @func_910() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1261 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %1257 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
    %1258 = @func_190() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1259 = %1257.1;
    %1260 = %1258.0;
    (%1259, %1260)
  };
  %1261() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_8554() -> (Tensor[(2, 11, 2), float32], Tensor[(8, 8, 16), float64], Tensor[(1024), float64]) {
  %1270 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(8, 8, 16), float64], Tensor[(1024), float64]) {
    %1262 = @func_6964() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1263 = cast(meta[relay.Constant][40] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %1264 = cast(meta[relay.Constant][40] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %1265 = reshape(%1263, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
    %1266 = reshape(%1264, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
    %1267 = @func_6679(%1265, %1266) /* ty=(Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), float32]) */;
    %1268 = %1262.1;
    %1269 = %1267.0;
    (%1268, %1269, meta[relay.Constant][40] /* ty=Tensor[(1024), float64] */)
  };
  %1270() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(8, 8, 16), float64], Tensor[(1024), float64]) */
}

def @func_2058() -> (Tensor[(2016), float64],) {
  %1273 = fn () -> (Tensor[(2016), float64],) {
    %1271 = @func_636() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), uint64], Tensor[(2016), float64]) */;
    %1272 = %1271.3;
    (%1272,)
  };
  %1273() /* ty=(Tensor[(2016), float64],) */
}

def @func_10140() -> (Tensor[(2, 11, 2), float32],) {
  %1274 = @func_10054() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1275 = %1274.1;
  (%1275,)
}

def @func_6787() -> (Tensor[(2016), float64], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_6785() /* ty=(Tensor[(2016), float64], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_9684() -> (Tensor[(2016), float32],) {
  @func_9682() /* ty=(Tensor[(2016), float32],) */
}

def @func_1625() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1276 = @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1277 = @func_998() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1278 = %1276.0;
  %1279 = %1277.0;
  (%1278, %1279)
}

def @func_8156() -> Tensor[(2, 11, 2), float32] {
  %1280 = fn () -> Tensor[(2, 11, 2), float32] {
    @func_2323() /* ty=Tensor[(2, 11, 2), float32] */
  };
  %1280() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_10966() -> (Tensor[(2, 11, 2), float32],) {
  %1283 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1281 = @func_6974() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1282 = %1281.0;
    (%1282,)
  };
  %1283() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_11397() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1288 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %1284 = @func_5508() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) */;
    %1285 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1286 = %1284.0;
    %1287 = %1285.2;
    (%1286, %1287)
  };
  %1288() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_1488() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1289 = @func_378() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1290 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1291 = %1289.0;
  %1292 = %1290.0;
  (%1291, %1292)
}

def @func_14351() -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
  %1296 = fn () -> (Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) {
    %1293 = @func_10140() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1294 = @func_7436() /* ty=Tensor[(12, 13, 15), uint16] */;
    %1295 = %1293.0;
    (%1294, %1295)
  };
  %1296() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */
}

def @func_12348(%var_12346: Tensor[(12, 48), uint64]) -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 48), uint64]) {
  @func_12345(%var_12346) /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 48), uint64]) */
}

def @func_15818(%var_15816: Tensor[(13, 11, 3), float64], %var_15817: Tensor[(2, 288), uint64]) -> (Tensor[(13, 11, 3), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2028), float64]) {
  @func_15814(%var_15816, %var_15817) /* ty=(Tensor[(13, 11, 3), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2028), float64]) */
}

def @func_3430(%var_3423: Tensor[(15, 8, 7), float64]) -> (Tensor[(15, 8, 7), bool], Tensor[(2, 11, 2), float32]) {
  %1297 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 8, 7), float64] */, dtype="bool") /* ty=Tensor[(15, 8, 7), bool] */;
  %1298 = shape_of(%var_3423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1299 = cast(%var_3423, dtype="bool") /* ty=Tensor[(15, 8, 7), bool] */;
  %1300 = dyn.reshape(%1297, %1298, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1301 = greater_equal(%1299, %1300) /* ty=Tensor[(15, 8, 7), bool] */;
  %1302 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1301, %1302)
}

def @func_5637() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  @func_5635() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */
}

def @func_3521() -> Tensor[(2, 11, 2), float32] {
  %1303 = @func_2572() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1303.1
}

def @func_18245() -> Tensor[(2028), float64] {
  %1305 = fn () -> Tensor[(2028), float64] {
    %1304 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
    %1304.0
  };
  %1305() /* ty=Tensor[(2028), float64] */
}

def @func_6546() -> (Tensor[(2028), float64],) {
  %1310 = fn () -> (Tensor[(2028), float64],) {
    %1306 = @func_2458() /* ty=(Tensor[(2028), float64],) */;
    %1307 = %1306.0;
    %1308 = cast(%1307, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %1309 = cos(%1308) /* ty=Tensor[(2028), float64] */;
    (%1309,)
  };
  %1310() /* ty=(Tensor[(2028), float64],) */
}

def @func_3593(%var_3585: Tensor[(6, 7, 1), float64]) -> (Tensor[(6, 7, 9), float64],) {
  %1311 = cast(%var_3585, dtype="float64") /* ty=Tensor[(6, 7, 1), float64] */;
  %1312 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 9), float64] */;
  %1313 = power(%1311, %1312) /* ty=Tensor[(6, 7, 9), float64] */;
  (%1313,)
}

def @func_13249() -> Tensor[(12, 13, 15), uint16] {
  %1314 = @func_9254() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
  %1314.0
}

def @func_11217() -> (Tensor[(4, 14, 11), int8], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) {
  %1323 = fn () -> (Tensor[(4, 14, 11), int8], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) {
    %1315 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 14, 11), int8] */, dtype="int8") /* ty=Tensor[(4, 14, 11), int8] */;
    %1316 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(4, 14, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1317 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 14, 11), int8] */, dtype="int8") /* ty=Tensor[(4, 14, 11), int8] */;
    %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1319 = @func_7215() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1320 = maximum(%1317, %1318) /* ty=Tensor[(4, 14, 11), int8] */;
    %1321 = @func_9170() /* ty=Tensor[(2, 11, 2), float64] */;
    %1322 = %1319.0;
    (%1320, %1321, %1322)
  };
  %1323() /* ty=(Tensor[(4, 14, 11), int8], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), float32]) */
}

def @func_10312() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(504, 4), float64]) {
  @func_10310() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(504, 4), float64]) */
}

def @func_1708(%var_1692: Tensor[(2, 11, 2), float32]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool]) {
  %1324 = @func_378() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1325 = @func_1519() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1326 = %1325.0;
  %1327 = cast(%var_1692, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %1328 = shape_of(%1326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1329 = cast(%1326, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %1330 = dyn.reshape(%1327, %1328, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1331 = %1324.0;
  %1332 = logical_or(%1329, %1330) /* ty=Tensor[(2, 11, 2), bool] */;
  (%1331, %1332)
}

def @func_8939() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2016), float32], Tensor[(2028), float64]) {
  @func_8937() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2016), float32], Tensor[(2028), float64]) */
}

def @func_14833() -> (Tensor[(2028), float64],) {
  @func_14831() /* ty=(Tensor[(2028), float64],) */
}

def @func_5579(%var_5567: Tensor[(240, 2), uint16]) -> (Tensor[(2, 11, 2), float32], Tensor[(12, 4, 10), bool], uint16, Tensor[(240, 2), uint16], Tensor[(2028), float64]) {
  %1333 = @func_2035() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1334 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1335 = cast(%var_5567, dtype="uint16") /* ty=Tensor[(240, 2), uint16] */;
  %1336 = reshape(%1334, newshape=[]) /* ty=uint16 */;
  %1337 = reshape(%1335, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), uint16] */;
  %1338 = @func_4683(%1336, %1337) /* ty=(Tensor[(12, 4, 10), bool], Tensor[(2, 11, 2), float32]) */;
  %1339 = @func_650() /* ty=(Tensor[(2028), float64],) */;
  %1340 = %1333.1;
  %1341 = %1338.0;
  %1342 = %1339.0;
  (%1340, %1341, meta[relay.Constant][45] /* ty=uint16 */, %var_5567, %1342)
}

def @func_18152() -> (Tensor[(2028), float64],) {
  %1345 = fn () -> (Tensor[(2028), float64],) {
    %1343 = @func_13099() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
    %1344 = %1343.8;
    (%1344,)
  };
  %1345() /* ty=(Tensor[(2028), float64],) */
}

def @func_17068() -> Tensor[(2, 11, 2), float32] {
  %1346 = @func_7321() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64]) */;
  %1346.2
}

def @func_12416() -> (Tensor[(2, 11, 2), float32],) {
  %1348 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1347 = @func_11191() /* ty=Tensor[(2, 11, 2), float32] */;
    (%1347,)
  };
  %1348() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_14994() -> (Tensor[(2, 11, 2), float32],) {
  %1349 = @func_1727() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1350 = %1349.0;
  (%1350,)
}

def @func_4634() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) {
  @func_4632() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */
}

def @func_6452() -> Tensor[(2, 11, 2), float64] {
  @func_5270() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_15070() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1354 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %1351 = @func_11618() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1352 = @func_13456() /* ty=Tensor[(2, 11, 2), float32] */;
    %1353 = %1351.0;
    (%1352, %1353)
  };
  %1354() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_17284() -> (Tensor[(2, 11, 2), float32],) {
  %1355 = @func_15840() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1356 = %1355.0;
  (%1356,)
}

def @func_13852() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %1357 = @func_11271() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %1358 = @func_12074() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1359 = %1357.1;
  %1360 = %1358.0;
  (%1359, %1360)
}

def @func_3456() -> Tensor[(2, 11, 2), float32] {
  %1361 = @func_2612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %1361.0
}

def @func_14424() -> (Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) {
  %1362 = @func_8988() /* ty=Tensor[(2016), float32] */;
  %1363 = @func_7693() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1362, %1363)
}

def @func_12638() -> (Tensor[(2, 11, 2), float32],) {
  %1366 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1364 = @func_2572() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1365 = %1364.0;
    (%1365,)
  };
  %1366() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_3857(%var_3855: int8, %var_3856: Tensor[(10, 13, 1), int8]) -> Tensor[(10, 13, 1), int8] {
  %1369 = fn (%var_3847: int8, %var_3848: Tensor[(10, 13, 1), int8]) -> Tensor[(10, 13, 1), int8] {
    %1367 = cast(%var_3847, dtype="int8") /* ty=int8 */;
    %1368 = cast(%var_3848, dtype="int8") /* ty=Tensor[(10, 13, 1), int8] */;
    bitwise_and(%1367, %1368) /* ty=Tensor[(10, 13, 1), int8] */
  };
  %1369(%var_3855, %var_3856) /* ty=Tensor[(10, 13, 1), int8] */
}

def @func_7497(%var_7495: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  @func_7494(%var_7495) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */
}

def @func_15814(%var_15780: Tensor[(13, 11, 3), float64], %var_15794: Tensor[(2, 288), uint64]) -> (Tensor[(13, 11, 3), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2028), float64]) {
  %1370 = cast(%var_15780, dtype="float64") /* ty=Tensor[(13, 11, 3), float64] */;
  %1371 = @func_15292() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %1372 = cast(%var_15794, dtype="uint64") /* ty=Tensor[(2, 288), uint64] */;
  %1373 = reshape(%1372, newshape=[2, 288]) /* ty=Tensor[(2, 288), uint64] */;
  %1374 = @func_5189(%1373) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float64], Tensor[(6, 16, 6), float64], Tensor[(12, 13, 13), float64]) */;
  %1375 = @func_6384() /* ty=(Tensor[(2028), float64],) */;
  %1376 = log10(%1370) /* ty=Tensor[(13, 11, 3), float64] */;
  %1377 = %1371.1;
  %1378 = %1374.0;
  %1379 = %1375.0;
  (%1376, %1377, %1378, %var_15794, %1379)
}

def @func_843() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1385 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
    %1380 = @func_118() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1381 = @func_581() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1382 = %1380.0;
    %1383 = %1381.2;
    %1384 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
    (%1382, %1383, %1384)
  };
  %1385() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_7045() -> Tensor[(2, 11, 2), float32] {
  %1386 = @func_842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1386.0
}

def @func_1771(%var_1770: Tensor[(1014, 2), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(1014, 2), float64]) {
  %1395 = fn (%var_1767: Tensor[(1014, 2), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(1014, 2), float64]) {
    %1387 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1388 = @func_842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1389 = cast(%var_1767, dtype="float64") /* ty=Tensor[(1014, 2), float64] */;
    %1390 = reshape(%1389, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
    %1391 = @func_949(%1390) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */;
    %1392 = %1387.2;
    %1393 = %1388.1;
    %1394 = %1391.2;
    (%1392, %1393, %1394, %var_1767)
  };
  %1395(%var_1770) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(1014, 2), float64]) */
}

def @func_17070() -> Tensor[(2, 11, 2), float32] {
  @func_17068() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_15093() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_15091() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_4384(%var_4383: Tensor[(11, 12, 7), int32]) -> Tensor[(11, 12, 7), int32] {
  %1400 = fn (%var_4368: Tensor[(11, 12, 7), int32]) -> Tensor[(11, 12, 7), int32] {
    %1396 = cast(%var_4368, dtype="int32") /* ty=Tensor[(11, 12, 7), int32] */;
    %1397 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(11, 12, 7), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1398 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 12, 7), int32] */, dtype="int32") /* ty=Tensor[(11, 12, 7), int32] */;
    %1399 = dyn.reshape(%1396, %1397, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    bitwise_or(%1398, %1399) /* ty=Tensor[(11, 12, 7), int32] */
  };
  %1400(%var_4383) /* ty=Tensor[(11, 12, 7), int32] */
}

def @func_449(%var_448: Tensor[(9, 16, 14), float64]) -> (Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) {
  %1412 = fn (%var_415: Tensor[(9, 16, 14), float64]) -> (Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) {
    %1401 = cast(%var_415, dtype="float64") /* ty=Tensor[(9, 16, 14), float64] */;
    %1402 = cast(meta[relay.Constant][47] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %1403 = reshape(%1402, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
    %1404 = @func_161(%1403) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */;
    %1405 = %1404.0;
    %1406 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 13, 13), float64] */, dtype="uint64") /* ty=Tensor[(12, 13, 13), uint64] */;
    %1407 = shape_of(%1405, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1408 = cast(%1405, dtype="uint64") /* ty=Tensor[(12, 13, 13), uint64] */;
    %1409 = dyn.reshape(%1406, %1407, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1410 = exp(%1401) /* ty=Tensor[(9, 16, 14), float64] */;
    %1411 = logical_xor(%1408, %1409) /* ty=Tensor[(12, 13, 13), uint64] */;
    (%1410, meta[relay.Constant][47] /* ty=Tensor[(2028), float64] */, %1411)
  };
  %1412(%var_448) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */
}

def @func_8844() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_8842() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_11705() -> (Tensor[(2, 11, 2), float32],) {
  %1414 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1413 = @func_11664() /* ty=Tensor[(2, 11, 2), float32] */;
    (%1413,)
  };
  %1414() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_6615() -> Tensor[(2, 11, 2), float32] {
  %1415 = @func_2612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
  %1415.1
}

def @func_14045() -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %1420 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
    %1416 = @func_6588() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1417 = @func_6545() /* ty=(Tensor[(2028), float64],) */;
    %1418 = %1416.0;
    %1419 = %1417.0;
    (%1418, %1419)
  };
  %1420() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */
}

def @func_2525() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  @func_2523() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */
}

def @func_15252() -> Tensor[(2016), float64] {
  %1421 = @func_13852() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %1421.0
}

def @func_951(%var_950: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) {
  %1429 = fn (%var_937: Tensor[(2028), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) {
    %1422 = @func_378() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1423 = cast(%var_937, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %1424 = reshape(%1423, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
    %1425 = @func_161(%1424) /* ty=(Tensor[(12, 13, 13), float64], Tensor[(2, 11, 2), float32]) */;
    %1426 = %1422.0;
    %1427 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
    %1428 = %1425.0;
    (%1426, %1427, %1428, %var_937)
  };
  %1429(%var_950) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */
}

def @func_3351() -> (Tensor[(2, 11, 2), float32],) {
  %1431 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1430 = @func_2323() /* ty=Tensor[(2, 11, 2), float32] */;
    (%1430,)
  };
  %1431() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_2067() -> (Tensor[(2, 11, 2), float32],) {
  %1433 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1432 = @func_1454() /* ty=Tensor[(2, 11, 2), float32] */;
    (%1432,)
  };
  %1433() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_11037() -> Tensor[(2, 11, 2), float32] {
  %1434 = @func_10054() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1434.1
}

def @func_8363(%var_8362: Tensor[(2028), float64]) -> Tensor[(2028), bool] {
  %1441 = fn (%var_8353: Tensor[(2028), float64]) -> Tensor[(2028), bool] {
    %1435 = @func_650() /* ty=(Tensor[(2028), float64],) */;
    %1436 = %1435.0;
    %1437 = cast(%var_8353, dtype="bool") /* ty=Tensor[(2028), bool] */;
    %1438 = shape_of(%1436, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1439 = cast(%1436, dtype="bool") /* ty=Tensor[(2028), bool] */;
    %1440 = dyn.reshape(%1437, %1438, newshape=[]) /* ty=Tensor[(?), bool] */;
    greater_equal(%1439, %1440) /* ty=Tensor[(2028), bool] */
  };
  %1441(%var_8362) /* ty=Tensor[(2028), bool] */
}

def @func_12715() -> Tensor[(2016), float32] {
  %1442 = fn () -> Tensor[(2016), float32] {
    @func_8404() /* ty=Tensor[(2016), float32] */
  };
  %1442() /* ty=Tensor[(2016), float32] */
}

def @func_9648() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(9, 10, 16), float64], Tensor[(20, 72), float64], Tensor[(2028), float32]) {
  %1443 = @func_5508() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float32], Tensor[(2, 11, 2), float32]) */;
  %1444 = @func_909() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1445 = @func_9406() /* ty=(Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32]) */;
  %1446 = @func_2458() /* ty=(Tensor[(2028), float64],) */;
  %1447 = %1446.0;
  %1448 = cast(%1447, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1449 = atan(%1448) /* ty=Tensor[(2028), float64] */;
  %1450 = cast(%1449, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1451 = acosh(%1450) /* ty=Tensor[(2028), float64] */;
  %1452 = cast(%1451, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1453 = @func_7738() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1454 = @func_9144() /* ty=(Tensor[(2, 11, 2), bool], Tensor[(36, 16), int16]) */;
  %1455 = cast(meta[relay.Constant][49] /* ty=Tensor[(20, 72), float64] */, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %1456 = reshape(%1455, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %1457 = @func_8128(%1456) /* ty=(Tensor[(9, 10, 16), float64],) */;
  %1458 = cast(%1451, dtype="float32") /* ty=Tensor[(2028), float32] */;
  %1459 = %1443.2;
  %1460 = %1444.0;
  %1461 = @func_7570() /* ty=Tensor[(2, 11, 2), float64] */;
  %1462 = %1445.0;
  %1463 = acos(%1452) /* ty=Tensor[(2028), float64] */;
  %1464 = %1453.0;
  %1465 = %1454.0;
  %1466 = %1457.0;
  %1467 = log10(%1458) /* ty=Tensor[(2028), float32] */;
  (%1459, %1460, %1461, %1462, %1463, %1464, %1465, %1466, meta[relay.Constant][49] /* ty=Tensor[(20, 72), float64] */, %1467)
}

def @func_16349() -> Tensor[(2, 11, 2), float32] {
  %1469 = fn () -> Tensor[(2, 11, 2), float32] {
    %1468 = @func_9254() /* ty=(Tensor[(12, 13, 15), uint16], Tensor[(2, 11, 2), float32]) */;
    %1468.1
  };
  %1469() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_8291() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), bool]) {
  %1470 = @func_4632() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %1471 = @func_5926() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1472 = %1471.0;
  %1473 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
  %1474 = %1473.1;
  %1475 = cast(%1474, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %1476 = shape_of(%1472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1477 = cast(%1472, dtype="bool") /* ty=Tensor[(2, 11, 2), bool] */;
  %1478 = dyn.reshape(%1475, %1476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1479 = %1470.2;
  %1480 = greater_equal(%1477, %1478) /* ty=Tensor[(2, 11, 2), bool] */;
  (%1479, %1480)
}

def @func_9650() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(9, 10, 16), float64], Tensor[(20, 72), float64], Tensor[(2028), float32]) {
  @func_9648() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(2, 11, 2), bool], Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), bool], Tensor[(9, 10, 16), float64], Tensor[(20, 72), float64], Tensor[(2028), float32]) */
}

def @func_17034() -> Tensor[(2, 11, 2), float32] {
  %1481 = fn () -> Tensor[(2, 11, 2), float32] {
    @func_5857() /* ty=Tensor[(2, 11, 2), float32] */
  };
  %1481() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_17252() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) {
  %1482 = cast(meta[relay.Constant][50] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1483 = reshape(%1482, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %1484 = @func_14576(%1483) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(12, 13, 13), float64], Tensor[(2028), float64]) */;
  %1485 = @func_13485() /* ty=Tensor[(2, 11, 2), float32] */;
  %1486 = %1484.0;
  (%1485, %1486, meta[relay.Constant][50] /* ty=Tensor[(2028), float64] */)
}

def @func_6732() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1487 = @func_4217() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1488 = @func_1625() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1489 = %1487.0;
  %1490 = %1488.1;
  (%1489, %1490)
}

def @func_4734() -> (Tensor[(2, 11, 2), float64],) {
  %1492 = fn () -> (Tensor[(2, 11, 2), float64],) {
    %1491 = @func_2846() /* ty=Tensor[(2, 11, 2), float64] */;
    (%1491,)
  };
  %1492() /* ty=(Tensor[(2, 11, 2), float64],) */
}

def @func_5582(%var_5580: Tensor[(240, 2), uint16]) -> (Tensor[(2, 11, 2), float32], Tensor[(12, 4, 10), bool], uint16, Tensor[(240, 2), uint16], Tensor[(2028), float64]) {
  @func_5579(%var_5580) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(12, 4, 10), bool], uint16, Tensor[(240, 2), uint16], Tensor[(2028), float64]) */
}

def @func_9865() -> (Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(12, 13, 15), uint16]) {
  %1493 = @func_3870() /* ty=(Tensor[(2016), float64],) */;
  %1494 = @func_3521() /* ty=Tensor[(2, 11, 2), float32] */;
  %1495 = %1493.0;
  %1496 = @func_1454() /* ty=Tensor[(2, 11, 2), float32] */;
  %1497 = @func_4991() /* ty=Tensor[(12, 13, 15), uint16] */;
  (%1494, %1495, %1496, %1497)
}

def @func_18502() -> Tensor[(2, 11, 2), float32] {
  %1499 = fn () -> Tensor[(2, 11, 2), float32] {
    %1498 = @func_12785() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1498.0
  };
  %1499() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_6276(%var_6275: Tensor[(6, 96), uint64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(6, 96), uint64]) {
  %1506 = fn (%var_6272: Tensor[(6, 96), uint64]) -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(6, 96), uint64]) {
    %1500 = @func_1807() /* ty=(Tensor[(2, 11, 2), float32],) */;
    %1501 = cast(%var_6272, dtype="uint64") /* ty=Tensor[(6, 96), uint64] */;
    %1502 = reshape(%1501, newshape=[2, 288]) /* ty=Tensor[(2, 288), uint64] */;
    %1503 = @func_5189(%1502) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 288), uint64], Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2, 11, 2), float64], Tensor[(6, 16, 6), float64], Tensor[(12, 13, 13), float64]) */;
    %1504 = %1500.0;
    %1505 = %1503.4;
    (%1504, %1505, %var_6272)
  };
  %1506(%var_6275) /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float64], Tensor[(6, 96), uint64]) */
}

def @func_7471() -> (Tensor[(12, 13, 15), uint16],) {
  %1507 = @func_4991() /* ty=Tensor[(12, 13, 15), uint16] */;
  (%1507,)
}

def @func_18359() -> (Tensor[(2, 11, 2), float32],) {
  %1509 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1508 = @func_7265() /* ty=Tensor[(2, 11, 2), float32] */;
    (%1508,)
  };
  %1509() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_9192() -> (Tensor[(2, 11, 2), float32],) {
  @func_9190() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_18449() -> Tensor[(12, 13, 15), bool] {
  %1510 = @func_15023() /* ty=(Tensor[(12, 13, 15), uint16],) */;
  %1511 = %1510.0;
  %1512 = cast(%1511, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %1513 = sin(%1512) /* ty=Tensor[(12, 13, 15), float64] */;
  %1514 = cast(%1513, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %1515 = shape_of(%1511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1516 = cast(%1511, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %1517 = dyn.reshape(%1514, %1515, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1518 = floor_mod(%1516, %1517) /* ty=Tensor[(12, 13, 15), float64] */;
  %1519 = cast(%1513, dtype="bool") /* ty=Tensor[(12, 13, 15), bool] */;
  %1520 = shape_of(%1518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1521 = cast(%1518, dtype="bool") /* ty=Tensor[(12, 13, 15), bool] */;
  %1522 = dyn.reshape(%1519, %1520, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1521, %1522) /* ty=Tensor[(12, 13, 15), bool] */
}

def @func_11512() -> (Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32], Tensor[(3, 117), float32]) {
  %1529 = fn () -> (Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32], Tensor[(3, 117), float32]) {
    %1523 = @func_2612() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2028), float64]) */;
    %1524 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 117), float32] */, dtype="float32") /* ty=Tensor[(3, 117), float32] */;
    %1525 = reshape(%1524, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), float32] */;
    %1526 = @func_8582(%1525) /* ty=(Tensor[(9, 3, 13), float32], Tensor[(9, 3, 13), int64]) */;
    %1527 = %1523.1;
    %1528 = %1526.0;
    (%1527, %1528, meta[relay.Constant][51] /* ty=Tensor[(3, 117), float32] */)
  };
  %1529() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(9, 3, 13), float32], Tensor[(3, 117), float32]) */
}

def @func_11634() -> (Tensor[(2, 11, 2), float32],) {
  %1531 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1530 = @func_6615() /* ty=Tensor[(2, 11, 2), float32] */;
    (%1530,)
  };
  %1531() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_6385() -> (Tensor[(2028), float64],) {
  %1534 = fn () -> (Tensor[(2028), float64],) {
    %1532 = @func_4325() /* ty=(Tensor[(2028), float64],) */;
    %1533 = %1532.0;
    (%1533,)
  };
  %1534() /* ty=(Tensor[(2028), float64],) */
}

def @func_3453() -> (Tensor[(2, 11, 2), float32],) {
  %1537 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1535 = @func_2523() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1536 = %1535.0;
    (%1536,)
  };
  %1537() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_7572() -> Tensor[(2, 11, 2), float64] {
  @func_7570() /* ty=Tensor[(2, 11, 2), float64] */
}

def @func_8240(%var_8238: Tensor[(5, 6, 3), float64], %var_8239: Tensor[(5, 6, 3), float64]) -> Tensor[(5, 6, 3), float64] {
  @func_8236(%var_8238, %var_8239) /* ty=Tensor[(5, 6, 3), float64] */
}

def @func_3033(%var_3031: Tensor[(2016), float64]) -> (Tensor[(2, 11, 2), float32], Tensor[(9, 16, 14), float64], Tensor[(2016), float64]) {
  %1538 = @func_1488() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1539 = cast(%var_3031, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1540 = reshape(%1539, newshape=[9, 16, 14]) /* ty=Tensor[(9, 16, 14), float64] */;
  %1541 = @func_447(%1540) /* ty=(Tensor[(9, 16, 14), float64], Tensor[(2028), float64], Tensor[(12, 13, 13), uint64]) */;
  %1542 = %1538.0;
  %1543 = %1541.0;
  (%1542, %1543, %var_3031)
}

def @func_11812() -> (Tensor[(8, 8, 16), float64], Tensor[(2, 11, 2), bool], Tensor[(2, 11, 2), float32], Tensor[(6, 16, 3), float64], Tensor[(288), float64], Tensor[(2, 11, 2), float32]) {
  %1544 = @func_8553() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(8, 8, 16), float64], Tensor[(1024), float64]) */;
  %1545 = @func_8291() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), bool]) */;
  %1546 = @func_11396() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1547 = cast(meta[relay.Constant][52] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1548 = cast(meta[relay.Constant][52] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1549 = reshape(%1547, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
  %1550 = reshape(%1548, newshape=[6, 16, 3]) /* ty=Tensor[(6, 16, 3), float64] */;
  %1551 = %1544.1;
  %1552 = %1545.1;
  %1553 = %1546.1;
  %1554 = @func_2190(%1549, %1550) /* ty=Tensor[(6, 16, 3), float64] */;
  %1555 = @func_7265() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1551, %1552, %1553, %1554, meta[relay.Constant][52] /* ty=Tensor[(288), float64] */, %1555)
}

def @func_13404() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1556 = @func_1045() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1557 = @func_10054() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1558 = %1556.0;
  %1559 = @func_2323() /* ty=Tensor[(2, 11, 2), float32] */;
  %1560 = %1557.1;
  (%1558, %1559, %1560)
}

def @func_4885() -> (Tensor[(2, 11, 2), float32],) {
  %1561 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1562 = %1561.1;
  (%1562,)
}

def @func_16832(%var_16824: Tensor[(14, 9, 1), float64]) -> (Tensor[(14, 9, 1), float64],) {
  %1563 = cast(%var_16824, dtype="float64") /* ty=Tensor[(14, 9, 1), float64] */;
  %1564 = exp(%1563) /* ty=Tensor[(14, 9, 1), float64] */;
  (%1564,)
}

def @func_14195() -> (Tensor[(2, 11, 2), float32],) {
  %1566 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1565 = @func_12993() /* ty=Tensor[(2, 11, 2), float32] */;
    (%1565,)
  };
  %1566() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_13858() -> Tensor[(2, 11, 2), float32] {
  %1568 = fn () -> Tensor[(2, 11, 2), float32] {
    %1567 = @func_4031() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1567.1
  };
  %1568() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_7738() -> (Tensor[(2, 11, 2), float32],) {
  %1569 = @func_2428() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1569,)
}

def @func_15966() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1570 = @func_13150() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32], Tensor[(2016), float64], Tensor[(1440), float64], Tensor[(2028), float64], Tensor[(2028), float64]) */;
  %1571 = @func_13852() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %1572 = @func_10140() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1573 = %1570.3;
  %1574 = %1571.1;
  %1575 = @func_9997() /* ty=Tensor[(2, 11, 2), float32] */;
  %1576 = @func_6906() /* ty=Tensor[(2, 11, 2), float32] */;
  %1577 = %1572.0;
  (%1573, %1574, %1575, %1576, %1577)
}

def @func_18295() -> (Tensor[(2028), float64],) {
  %1580 = fn () -> (Tensor[(2028), float64],) {
    %1578 = @func_1104() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32]) */;
    %1579 = %1578.0;
    (%1579,)
  };
  %1580() /* ty=(Tensor[(2028), float64],) */
}

def @func_7265() -> Tensor[(2, 11, 2), float32] {
  @func_3701() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_7047() -> Tensor[(2, 11, 2), float32] {
  @func_7045() /* ty=Tensor[(2, 11, 2), float32] */
}

def @func_15714() -> (Tensor[(2, 11, 2), float32],) {
  @func_15712() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_1519() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1581 = @func_589() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1582 = @func_526() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2028), float64], Tensor[(2016), float64]) */;
  %1583 = %1581.0;
  %1584 = %1582.0;
  (%1583, %1584)
}

def @func_15292() -> (Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) {
  %1585 = @func_9335() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2016), float64]) */;
  %1586 = @func_4875() /* ty=(Tensor[(2, 11, 2), float32],) */;
  %1587 = %1585.1;
  %1588 = %1586.0;
  (%1587, %1588)
}

def @func_1728() -> (Tensor[(2, 11, 2), float32],) {
  %1591 = fn () -> (Tensor[(2, 11, 2), float32],) {
    %1589 = @func_1305() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
    %1590 = %1589.2;
    (%1590,)
  };
  %1591() /* ty=(Tensor[(2, 11, 2), float32],) */
}

def @func_12753() -> (Tensor[(2, 11, 2), float32],) {
  %1592 = @func_1625() /* ty=(Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1593 = %1592.0;
  (%1593,)
}

def @func_12517(%var_12515: Tensor[(1440), float64]) -> (Tensor[(2016), float64], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) {
  %1594 = @func_8770() /* ty=(Tensor[(2016), float64], Tensor[(2, 11, 2), float32]) */;
  %1595 = cast(%var_12515, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %1596 = reshape(%1595, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %1597 = @func_8128(%1596) /* ty=(Tensor[(9, 10, 16), float64],) */;
  %1598 = %1594.0;
  %1599 = %1597.0;
  (%1598, %1599, %var_12515)
}

def @func_17057() -> (Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) {
  %1600 = @func_16598() /* ty=(Tensor[(2028), float64], Tensor[(2, 11, 2), float32], Tensor[(2, 11, 2), float32]) */;
  %1601 = %1600.2;
  %1602 = @func_294() /* ty=Tensor[(2, 11, 2), float32] */;
  (%1601, %1602)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen757/build/output.py:6307: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen757/build/output.py", line 6312, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_divide_kernel0(double* __restrict__ T_divide, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1344) {
    T_divide[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (placeholder[(0)] / placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


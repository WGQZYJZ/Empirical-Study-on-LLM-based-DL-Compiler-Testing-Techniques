==========mod==========
#[version = "0.0.5"]
def @func_5880(%var_5851: Tensor[(352, 1), float64]) -> (Tensor[(2, 7, 8), bool], Tensor[(352, 1), float64], Tensor[(4, 8, 11), float32], float32, Tensor[(840, 1), int16]) {
  %0 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(2, 7, 8), bool] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(2, 7, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(2, 7, 8), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(%var_5851, dtype="float64") /* ty=Tensor[(352, 1), float64] */;
  %5 = reshape(%4, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %6 = @func_262(%5) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) */;
  %7 = %6.0;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(4, 8, 11), float32] */;
  %9 = cast(meta[relay.Constant][2] /* ty=Tensor[(840, 1), int16] */, dtype="int16") /* ty=Tensor[(840, 1), int16] */;
  %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(840, 1), int16] */, dtype="int16") /* ty=Tensor[(840, 1), int16] */;
  %11 = reshape(%9, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int16] */;
  %12 = reshape(%10, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int16] */;
  %13 = @func_348(%11, %12) /* ty=(Tensor[(5, 12, 14), int16], Tensor[(7, 15, 2), bool], float32) */;
  %14 = logical_or(%2, %3) /* ty=Tensor[(2, 7, 8), bool] */;
  %15 = log10(%8) /* ty=Tensor[(4, 8, 11), float32] */;
  %16 = %13.2;
  (%14, %var_5851, %15, %16, meta[relay.Constant][2] /* ty=Tensor[(840, 1), int16] */)
}

def @func_1569(%var_1529: Tensor[(1, 8, 4), uint16], %var_1530: Tensor[(3, 8, 4), uint16], %var_1555: Tensor[(420, 2), int16]) -> (Tensor[(3, 8, 4), bool], Tensor[(6, 6, 3), bool], Tensor[(108), int16], Tensor[(7, 15, 2), bool], Tensor[(1430), uint32], Tensor[(99), uint64], Tensor[(420, 2), bool]) {
  %17 = cast(%var_1529, dtype="bool") /* ty=Tensor[(1, 8, 4), bool] */;
  %18 = cast(%var_1530, dtype="bool") /* ty=Tensor[(3, 8, 4), bool] */;
  %19 = cast(meta[relay.Constant][3] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %20 = cast(meta[relay.Constant][3] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %21 = reshape(%19, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %22 = reshape(%20, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %23 = @func_297(%21, %22) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="int16") /* ty=Tensor[(6, 6, 3), int16] */;
  %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %27 = reshape(%25, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %28 = reshape(%26, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %29 = @func_297(%27, %28) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */;
  %30 = cast(meta[relay.Constant][4] /* ty=Tensor[(99), uint64] */, dtype="uint64") /* ty=Tensor[(99), uint64] */;
  %31 = cast(meta[relay.Constant][4] /* ty=Tensor[(99), uint64] */, dtype="uint64") /* ty=Tensor[(99), uint64] */;
  %32 = cast(%var_1555, dtype="int16") /* ty=Tensor[(420, 2), int16] */;
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %34 = reshape(%30, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), uint64] */;
  %35 = reshape(%31, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), uint64] */;
  %36 = reshape(%32, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %37 = reshape(%33, newshape=[54, 2]) /* ty=Tensor[(54, 2), int16] */;
  %38 = @func_620(%34, %35, %36, %37) /* ty=(Tensor[(11, 3, 3), uint64], float32, Tensor[(840), int16], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(6, 6, 3), bool], Tensor[(54, 2), int16], float32) */;
  %39 = cast(%var_1555, dtype="float32") /* ty=Tensor[(420, 2), float32] */;
  %40 = acos(%39) /* ty=Tensor[(420, 2), float32] */;
  %41 = cast(%var_1555, dtype="bool") /* ty=Tensor[(420, 2), bool] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(2), int32] */;
  %43 = cast(%40, dtype="bool") /* ty=Tensor[(420, 2), bool] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %45 = equal(%17, %18) /* ty=Tensor[(3, 8, 4), bool] */;
  %46 = %29.1;
  %47 = %38.4;
  %48 = not_equal(%43, %44) /* ty=Tensor[(420, 2), bool] */;
  (%45, %24, meta[relay.Constant][3] /* ty=Tensor[(108), int16] */, %46, %47, meta[relay.Constant][4] /* ty=Tensor[(99), uint64] */, %48)
}

def @func_8702() -> Tensor[(3, 10, 4), float32] {
  %49 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %49.0
}

def @func_2976(%var_2938: Tensor[(10, 15, 9), float32], %var_2965: Tensor[(10, 15, 9), float32], %var_2970: Tensor[(44), float64]) -> (Tensor[(10, 15, 9), float64], Tensor[(10, 15, 9), float32], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) {
  %50 = cast(%var_2938, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
  %51 = sinh(%50) /* ty=Tensor[(10, 15, 9), float32] */;
  %52 = cast(%var_2938, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
  %53 = acos(%52) /* ty=Tensor[(10, 15, 9), float32] */;
  %54 = cast(%53, dtype="uint32") /* ty=Tensor[(10, 15, 9), uint32] */;
  %55 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%51, dtype="uint32") /* ty=Tensor[(10, 15, 9), uint32] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %58 = bitwise_xor(%56, %57) /* ty=Tensor[(10, 15, 9), uint32] */;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(10, 15, 9), float64] */;
  %60 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%51, dtype="float64") /* ty=Tensor[(10, 15, 9), float64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %63 = cast(%var_2965, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
  %64 = shape_of(%var_2938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%var_2938, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %67 = cast(%var_2970, dtype="float64") /* ty=Tensor[(44), float64] */;
  %68 = reshape(%67, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), float64] */;
  %69 = @func_2002(%68) /* ty=(Tensor[(4, 11, 1), float64],) */;
  %70 = floor_mod(%61, %62) /* ty=Tensor[(10, 15, 9), float64] */;
  %71 = divide(%65, %66) /* ty=Tensor[(10, 15, 9), float32] */;
  %72 = %69.0;
  (%70, %71, %72, %var_2970)
}

def @func_7855(%var_7828: Tensor[(16, 15, 4), float64], %var_7839: Tensor[(78), float64]) -> (Tensor[(16, 15, 4), bool], Tensor[(44), float64], Tensor[(8), float64], Tensor[(78), float64], Tensor[(16, 15, 4), uint8]) {
  %73 = cast(%var_7828, dtype="float64") /* ty=Tensor[(16, 15, 4), float64] */;
  %74 = log2(%73) /* ty=Tensor[(16, 15, 4), float64] */;
  %75 = cast(%74, dtype="bool") /* ty=Tensor[(16, 15, 4), bool] */;
  %76 = shape_of(%var_7828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%var_7828, dtype="bool") /* ty=Tensor[(16, 15, 4), bool] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %79 = cast(meta[relay.Constant][5] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %80 = cast(%var_7839, dtype="float64") /* ty=Tensor[(78), float64] */;
  %81 = reshape(%79, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float64] */;
  %82 = reshape(%80, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %83 = @func_4134(%81, %82) /* ty=(Tensor[(?, 8, ?), bool], Tensor[(44), float64], Tensor[(78), float64]) */;
  %84 = cast(%var_7828, dtype="uint8") /* ty=Tensor[(16, 15, 4), uint8] */;
  %85 = shape_of(%74, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%74, dtype="uint8") /* ty=Tensor[(16, 15, 4), uint8] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %88 = greater_equal(%77, %78) /* ty=Tensor[(16, 15, 4), bool] */;
  %89 = %83.1;
  %90 = left_shift(%86, %87) /* ty=Tensor[(16, 15, 4), uint8] */;
  (%88, %89, meta[relay.Constant][5] /* ty=Tensor[(8), float64] */, %var_7839, %90)
}

def @func_8896() -> (Tensor[(3, 10, 4), float32],) {
  %91 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %92 = %91.0;
  (%92,)
}

def @func_620(%var_580: Tensor[(11, 3, 3), uint64], %var_581: Tensor[(11, 3, 3), uint64], %var_604: Tensor[(840), int16], %var_610: Tensor[(54, 2), int16]) -> (Tensor[(11, 3, 3), uint64], float32, Tensor[(840), int16], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(6, 6, 3), bool], Tensor[(54, 2), int16], float32) {
  %93 = cast(%var_581, dtype="uint64") /* ty=Tensor[(11, 3, 3), uint64] */;
  %94 = shape_of(%var_580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%var_580, dtype="uint64") /* ty=Tensor[(11, 3, 3), uint64] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %97 = cast(%var_604, dtype="int16") /* ty=Tensor[(840), int16] */;
  %98 = cast(%var_604, dtype="int16") /* ty=Tensor[(840), int16] */;
  %99 = reshape(%97, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int16] */;
  %100 = reshape(%98, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int16] */;
  %101 = @func_348(%99, %100) /* ty=(Tensor[(5, 12, 14), int16], Tensor[(7, 15, 2), bool], float32) */;
  %102 = cast(meta[relay.Constant][6] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
  %103 = cast(meta[relay.Constant][6] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
  %104 = reshape(%102, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
  %105 = reshape(%103, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
  %106 = cast(%var_610, dtype="int16") /* ty=Tensor[(54, 2), int16] */;
  %107 = cast(%var_610, dtype="int16") /* ty=Tensor[(54, 2), int16] */;
  %108 = reshape(%106, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %109 = reshape(%107, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %110 = @func_297(%108, %109) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */;
  %111 = %110.0;
  %112 = cast(%111, dtype="int16") /* ty=Tensor[(6, 6, 3), int16] */;
  %113 = cast(%111, dtype="int16") /* ty=Tensor[(6, 6, 3), int16] */;
  %114 = reshape(%112, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %115 = reshape(%113, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %116 = @func_297(%114, %115) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */;
  %117 = subtract(%95, %96) /* ty=Tensor[(11, 3, 3), uint64] */;
  %118 = %101.2;
  %119 = @func_542(%104, %105) /* ty=Tensor[(10, 11, 13), uint32] */;
  %120 = %116.2;
  (%117, %118, %var_604, %119, meta[relay.Constant][6] /* ty=Tensor[(1430), uint32] */, %111, %var_610, %120)
}

def @func_644(%var_639: Tensor[(12, 12, 11), float64]) -> Tensor[(12, 12, 11), float64] {
  %121 = cast(%var_639, dtype="float64") /* ty=Tensor[(12, 12, 11), float64] */;
  acos(%121) /* ty=Tensor[(12, 12, 11), float64] */
}

def @func_8814(%var_8776: Tensor[(24, 120), bool]) -> (Tensor[(15, 14, 16), float64], Tensor[(6, 10, 13), bool], Tensor[(780), float64], Tensor[(24, 120), bool]) {
  %122 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 14, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 14, 16), float64] */;
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %124 = cast(meta[relay.Constant][8] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %125 = cast(meta[relay.Constant][8] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %126 = reshape(%123, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float64] */;
  %127 = reshape(%124, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float64] */;
  %128 = reshape(%125, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float64] */;
  %129 = @func_5237(%126, %127, %128) /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), uint16], Tensor[(6, 10, 13), bool]) */;
  %130 = cast(%var_8776, dtype="bool") /* ty=Tensor[(24, 120), bool] */;
  %131 = cast(%var_8776, dtype="bool") /* ty=Tensor[(24, 120), bool] */;
  %132 = reshape(%130, newshape=[15, 16, 12]) /* ty=Tensor[(15, 16, 12), bool] */;
  %133 = reshape(%131, newshape=[15, 16, 12]) /* ty=Tensor[(15, 16, 12), bool] */;
  %134 = @func_3199(%132, %133) /* ty=(Tensor[(15, 16, 12), bool],) */;
  %135 = %134.0;
  %136 = cast(%135, dtype="bool") /* ty=Tensor[(15, 16, 12), bool] */;
  %137 = shape_of(%var_8776, dtype="int32") /* ty=Tensor[(2), int32] */;
  %138 = cast(%var_8776, dtype="bool") /* ty=Tensor[(24, 120), bool] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %140 = sigmoid(%122) /* ty=Tensor[(15, 14, 16), float64] */;
  %141 = %129.2;
  %142 = equal(%138, %139) /* ty=Tensor[(24, 120), bool] */;
  (%140, %141, meta[relay.Constant][8] /* ty=Tensor[(780), float64] */, %142)
}

def @func_8654() -> (Tensor[(3, 10, 4), float32],) {
  %143 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 10, 4), float64] */, dtype="float64") /* ty=Tensor[(3, 10, 4), float64] */;
  %144 = asin(%143) /* ty=Tensor[(3, 10, 4), float64] */;
  %145 = cast(%144, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
  %146 = erf(%145) /* ty=Tensor[(3, 10, 4), float32] */;
  (%146,)
}

def @func_8091(%var_8086: Tensor[(5, 10, 14), float64], %var_8087: Tensor[(5, 10, 14), float64]) -> Tensor[(5, 10, 14), float64] {
  %147 = cast(%var_8087, dtype="float64") /* ty=Tensor[(5, 10, 14), float64] */;
  %148 = shape_of(%var_8086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%var_8086, dtype="float64") /* ty=Tensor[(5, 10, 14), float64] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%149, %150) /* ty=Tensor[(5, 10, 14), float64] */
}

def @func_5024(%var_4980: Tensor[(3, 3), uint16], %var_4981: Tensor[(3, 3), uint16]) -> (Tensor[(3, 3), bool],) {
  %151 = cast(%var_4981, dtype="bool") /* ty=Tensor[(3, 3), bool] */;
  %152 = shape_of(%var_4980, dtype="int32") /* ty=Tensor[(2), int32] */;
  %153 = cast(%var_4980, dtype="bool") /* ty=Tensor[(3, 3), bool] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %155 = greater(%153, %154) /* ty=Tensor[(3, 3), bool] */;
  (%155,)
}

def @func_262(%var_249: Tensor[(4, 8, 11), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) {
  %156 = cast(%var_249, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %157 = cast(0.161778f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %158 = reshape(%157, newshape=[]) /* ty=float32 */;
  %159 = @func_35(%158) /* ty=(Tensor[(7, 15, 2), bool],) */;
  %160 = acos(%156) /* ty=Tensor[(4, 8, 11), float64] */;
  %161 = %159.0;
  (%160, %161, 0.161778f /* ty=float32 */)
}

def @func_8880(%var_8873: int32) -> (Tensor[(16, 1, 13), bool],) {
  %162 = cast(%var_8873, dtype="bool") /* ty=bool */;
  %163 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 1, 13), int32] */, dtype="bool") /* ty=Tensor[(16, 1, 13), bool] */;
  %164 = less_equal(%162, %163) /* ty=Tensor[(16, 1, 13), bool] */;
  (%164,)
}

def @func_3994(%var_3977: Tensor[(1, 10, 3), float32]) -> (Tensor[(?, 10, 3), uint32],) {
  %165 = cast(%var_3977, dtype="float32") /* ty=Tensor[(1, 10, 3), float32] */;
  %166 = sinh(%165) /* ty=Tensor[(1, 10, 3), float32] */;
  %167 = cast(%var_3977, dtype="uint32") /* ty=Tensor[(1, 10, 3), uint32] */;
  %168 = shape_of(%166, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%166, dtype="uint32") /* ty=Tensor[(1, 10, 3), uint32] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %171 = multiply(%169, %170) /* ty=Tensor[(?, 10, 3), uint32] */;
  (%171,)
}

def @func_5817(%var_5787: Tensor[(44), float64]) -> (Tensor[(4, 8, 5), float64], Tensor[(10, 15, 9), float32], Tensor[(1350, 1), float32], Tensor[(44), float64]) {
  %172 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(4, 8, 5), float64] */;
  %173 = cast(meta[relay.Constant][12] /* ty=Tensor[(1350, 1), float32] */, dtype="float32") /* ty=Tensor[(1350, 1), float32] */;
  %174 = cast(meta[relay.Constant][12] /* ty=Tensor[(1350, 1), float32] */, dtype="float32") /* ty=Tensor[(1350, 1), float32] */;
  %175 = cast(%var_5787, dtype="float64") /* ty=Tensor[(44), float64] */;
  %176 = reshape(%173, newshape=[10, 15, 9]) /* ty=Tensor[(10, 15, 9), float32] */;
  %177 = reshape(%174, newshape=[10, 15, 9]) /* ty=Tensor[(10, 15, 9), float32] */;
  %178 = reshape(%175, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %179 = @func_2976(%176, %177, %178) /* ty=(Tensor[(10, 15, 9), float64], Tensor[(10, 15, 9), float32], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) */;
  %180 = tan(%172) /* ty=Tensor[(4, 8, 5), float64] */;
  %181 = %179.1;
  (%180, %181, meta[relay.Constant][12] /* ty=Tensor[(1350, 1), float32] */, %var_5787)
}

def @func_8956() -> (Tensor[(3, 10, 4), uint32], Tensor[(3, 10, 4), float32], Tensor[(3, 10, 4), float32]) {
  %182 = @func_8918() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %183 = %182.0;
  %184 = cast(%183, dtype="float64") /* ty=Tensor[(3, 10, 4), float64] */;
  %185 = sin(%184) /* ty=Tensor[(3, 10, 4), float64] */;
  %186 = cast(%183, dtype="uint32") /* ty=Tensor[(3, 10, 4), uint32] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%185, dtype="uint32") /* ty=Tensor[(3, 10, 4), uint32] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %190 = cast(%183, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
  %191 = @func_8670() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %192 = add(%188, %189) /* ty=Tensor[(3, 10, 4), uint32] */;
  %193 = log2(%190) /* ty=Tensor[(3, 10, 4), float32] */;
  %194 = %191.0;
  (%192, %193, %194)
}

def @func_5730(%var_5726: Tensor[(8, 11, 11), float64]) -> Tensor[(8, 11, 11), float64] {
  %195 = cast(%var_5726, dtype="float64") /* ty=Tensor[(8, 11, 11), float64] */;
  sin(%195) /* ty=Tensor[(8, 11, 11), float64] */
}

def @func_3199(%var_3192: Tensor[(15, 16, 12), bool], %var_3193: Tensor[(15, 16, 12), bool]) -> (Tensor[(15, 16, 12), bool],) {
  %196 = cast(%var_3193, dtype="bool") /* ty=Tensor[(15, 16, 12), bool] */;
  %197 = shape_of(%var_3192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%var_3192, dtype="bool") /* ty=Tensor[(15, 16, 12), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %200 = logical_and(%198, %199) /* ty=Tensor[(15, 16, 12), bool] */;
  (%200,)
}

def @func_3809(%var_3780: Tensor[(576), uint8], %var_3781: Tensor[(99, 1), uint64], %var_3782: Tensor[(840), int16], %var_3783: Tensor[(54, 2), int16], %var_3792: Tensor[(144), float32]) -> (Tensor[(5, 2, 12), bool], Tensor[(6, 6, 3), bool], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(54, 2), int16], Tensor[(208), float32], Tensor[(352), float64], Tensor[(144), float32], Tensor[(352), float64], Tensor[(10, 15, 9), float32], Tensor[(1350), float32], Tensor[(44), float64], Tensor[(4, 11, 1), float64]) {
  %201 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(5, 2, 12), float32] */;
  %202 = sigmoid(%201) /* ty=Tensor[(5, 2, 12), float32] */;
  %203 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 2, 12), float32] */, dtype="uint16") /* ty=Tensor[(5, 2, 12), uint16] */;
  %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%202, dtype="uint16") /* ty=Tensor[(5, 2, 12), uint16] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %207 = bitwise_or(%205, %206) /* ty=Tensor[(5, 2, 12), uint16] */;
  %208 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 2, 12), float32] */, dtype="bool") /* ty=Tensor[(5, 2, 12), bool] */;
  %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%207, dtype="bool") /* ty=Tensor[(5, 2, 12), bool] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %212 = cast(%var_3780, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %213 = cast(%var_3780, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %214 = cast(%var_3781, dtype="uint64") /* ty=Tensor[(99, 1), uint64] */;
  %215 = cast(%var_3782, dtype="int16") /* ty=Tensor[(840), int16] */;
  %216 = cast(%var_3783, dtype="int16") /* ty=Tensor[(54, 2), int16] */;
  %217 = cast(meta[relay.Constant][14] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %218 = reshape(%212, newshape=[6, 12, 8]) /* ty=Tensor[(6, 12, 8), uint8] */;
  %219 = reshape(%213, newshape=[6, 12, 8]) /* ty=Tensor[(6, 12, 8), uint8] */;
  %220 = reshape(%214, newshape=[99]) /* ty=Tensor[(99), uint64] */;
  %221 = reshape(%215, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %222 = reshape(%216, newshape=[108, 1]) /* ty=Tensor[(108, 1), int16] */;
  %223 = reshape(%217, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %224 = @func_2374(%218, %219, %220, %221, %222, %223) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(99), uint64], Tensor[(108, 840), uint8], Tensor[(6, 12, 8), bool], Tensor[(8, 2, 13), float32], Tensor[(208), float32]) */;
  %225 = cast(%var_3792, dtype="float32") /* ty=Tensor[(144), float32] */;
  %226 = cast(%var_3792, dtype="float32") /* ty=Tensor[(144), float32] */;
  %227 = cast(meta[relay.Constant][15] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %228 = reshape(%225, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), float32] */;
  %229 = reshape(%226, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), float32] */;
  %230 = reshape(%227, newshape=[352]) /* ty=Tensor[(352), float64] */;
  %231 = @func_3520(%228, %229, %230) /* ty=(Tensor[(8, 2, 13), float32], Tensor[(208), float32], Tensor[(7, 15, 2), bool], Tensor[(352), float64], Tensor[(2, 8, 9), float64], Tensor[(2, 8, 9), uint16]) */;
  %232 = cast(meta[relay.Constant][16] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %233 = cast(meta[relay.Constant][16] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %234 = cast(meta[relay.Constant][17] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %235 = reshape(%232, newshape=[10, 15, 9]) /* ty=Tensor[(10, 15, 9), float32] */;
  %236 = reshape(%233, newshape=[10, 15, 9]) /* ty=Tensor[(10, 15, 9), float32] */;
  %237 = reshape(%234, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %238 = @func_2976(%235, %236, %237) /* ty=(Tensor[(10, 15, 9), float64], Tensor[(10, 15, 9), float32], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) */;
  %239 = cast(meta[relay.Constant][17] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %240 = reshape(%239, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), float64] */;
  %241 = @func_2002(%240) /* ty=(Tensor[(4, 11, 1), float64],) */;
  %242 = less(%210, %211) /* ty=Tensor[(5, 2, 12), bool] */;
  %243 = %224.0;
  %244 = %231.3;
  %245 = %238.1;
  %246 = %241.0;
  (%242, %243, %var_3780, %var_3781, %var_3782, %var_3783, meta[relay.Constant][14] /* ty=Tensor[(208), float32] */, %244, %var_3792, meta[relay.Constant][15] /* ty=Tensor[(352), float64] */, %245, meta[relay.Constant][16] /* ty=Tensor[(1350), float32] */, meta[relay.Constant][17] /* ty=Tensor[(44), float64] */, %246)
}

def @func_8859() -> Tensor[(3, 10, 4), float32] {
  %247 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %248 = %247.0;
  %249 = cast(%248, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
  asinh(%249) /* ty=Tensor[(3, 10, 4), float32] */
}

def @func_4134(%var_4086: Tensor[(1, 8, 1), float64], %var_4128: Tensor[(78), float64]) -> (Tensor[(?, 8, ?), bool], Tensor[(44), float64], Tensor[(78), float64]) {
  %250 = cast(%var_4086, dtype="float64") /* ty=Tensor[(1, 8, 1), float64] */;
  %251 = sin(%250) /* ty=Tensor[(1, 8, 1), float64] */;
  %252 = cast(%var_4086, dtype="float32") /* ty=Tensor[(1, 8, 1), float32] */;
  %253 = asinh(%252) /* ty=Tensor[(1, 8, 1), float32] */;
  %254 = cast(%253, dtype="bool") /* ty=Tensor[(1, 8, 1), bool] */;
  %255 = shape_of(%251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%251, dtype="bool") /* ty=Tensor[(1, 8, 1), bool] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %258 = cast(%var_4128, dtype="float64") /* ty=Tensor[(78), float64] */;
  %259 = reshape(%258, newshape=[3, 13, 2]) /* ty=Tensor[(3, 13, 2), float64] */;
  %260 = @func_2864(%259) /* ty=(Tensor[(3, 13, 2), float64], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) */;
  %261 = logical_and(%256, %257) /* ty=Tensor[(?, 8, ?), bool] */;
  %262 = %260.2;
  (%261, %262, %var_4128)
}

def @func_9282() -> (Tensor[(3, 10, 4), uint32],) {
  %263 = @func_8956() /* ty=(Tensor[(3, 10, 4), uint32], Tensor[(3, 10, 4), float32], Tensor[(3, 10, 4), float32]) */;
  %264 = %263.0;
  (%264,)
}

def @func_8670() -> (Tensor[(3, 10, 4), float32],) {
  %265 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %266 = %265.0;
  (%266,)
}

def @func_5237(%var_5198: Tensor[(6, 10, 13), float64], %var_5224: Tensor[(6, 10, 13), float64], %var_5229: Tensor[(6, 10, 13), float64]) -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), uint16], Tensor[(6, 10, 13), bool]) {
  %267 = cast(%var_5198, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
  %268 = sinh(%267) /* ty=Tensor[(6, 10, 13), float64] */;
  %269 = cast(%268, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
  %270 = shape_of(%var_5198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%var_5198, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %273 = cast(%var_5224, dtype="uint16") /* ty=Tensor[(6, 10, 13), uint16] */;
  %274 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%268, dtype="uint16") /* ty=Tensor[(6, 10, 13), uint16] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %277 = cast(%var_5229, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %278 = shape_of(%var_5224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %279 = cast(%var_5224, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %281 = floor_divide(%271, %272) /* ty=Tensor[(6, 10, 13), float64] */;
  %282 = bitwise_and(%275, %276) /* ty=Tensor[(6, 10, 13), uint16] */;
  %283 = equal(%279, %280) /* ty=Tensor[(6, 10, 13), bool] */;
  (%281, %282, %283)
}

def @func_9257() -> (Tensor[(3, 10, 4), float32],) {
  %284 = @func_8859() /* ty=Tensor[(3, 10, 4), float32] */;
  (%284,)
}

def @func_9180(%var_9150: Tensor[(3, 10, 4), float32]) -> (Tensor[(3, 10, 4), float32], Tensor[(5, 13, 8), uint8], Tensor[(5, 104), uint8]) {
  %285 = @func_8859() /* ty=Tensor[(3, 10, 4), float32] */;
  %286 = cast(%var_9150, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%285, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %290 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 104), uint8] */, dtype="uint8") /* ty=Tensor[(5, 104), uint8] */;
  %291 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 104), uint8] */, dtype="uint8") /* ty=Tensor[(5, 104), uint8] */;
  %292 = reshape(%290, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint8] */;
  %293 = reshape(%291, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint8] */;
  %294 = @func_3669(%292, %293) /* ty=(Tensor[(5, 13, 8), uint8],) */;
  %295 = mod(%288, %289) /* ty=Tensor[(3, 10, 4), float32] */;
  %296 = %294.0;
  (%295, %296, meta[relay.Constant][18] /* ty=Tensor[(5, 104), uint8] */)
}

def @func_7684(%var_7673: Tensor[(11, 8, 1), float32]) -> (Tensor[(11, 8, 1), float32],) {
  %297 = cast(%var_7673, dtype="float32") /* ty=Tensor[(11, 8, 1), float32] */;
  %298 = sin(%297) /* ty=Tensor[(11, 8, 1), float32] */;
  (%298,)
}

def @func_5601(%var_5584: Tensor[(7, 4, 6), float64], %var_5585: Tensor[(7, 4, 6), float64]) -> (Tensor[(7, 4, 6), float64],) {
  %299 = cast(%var_5585, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
  %300 = shape_of(%var_5584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%var_5584, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %303 = power(%301, %302) /* ty=Tensor[(7, 4, 6), float64] */;
  (%303,)
}

def @func_2002(%var_1995: Tensor[(4, 11, 1), float64]) -> (Tensor[(4, 11, 1), float64],) {
  %304 = cast(%var_1995, dtype="float64") /* ty=Tensor[(4, 11, 1), float64] */;
  %305 = sinh(%304) /* ty=Tensor[(4, 11, 1), float64] */;
  (%305,)
}

def @func_6218(%var_6185: Tensor[(2, 7, 7), float64], %var_6191: Tensor[(576), uint8], %var_6192: Tensor[(99, 1), uint64], %var_6193: Tensor[(840), int16], %var_6195: Tensor[(144), float32]) -> (Tensor[(2, 7, 7), float64], Tensor[(44), float64], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(108), int16], Tensor[(144), float32], Tensor[(4, 11, 1), float64]) {
  %306 = cast(%var_6185, dtype="float64") /* ty=Tensor[(2, 7, 7), float64] */;
  %307 = cast(%var_6191, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %308 = cast(%var_6192, dtype="uint64") /* ty=Tensor[(99, 1), uint64] */;
  %309 = cast(%var_6193, dtype="int16") /* ty=Tensor[(840), int16] */;
  %310 = cast(meta[relay.Constant][19] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %311 = cast(%var_6195, dtype="float32") /* ty=Tensor[(144), float32] */;
  %312 = reshape(%307, newshape=[576]) /* ty=Tensor[(576), uint8] */;
  %313 = reshape(%308, newshape=[99, 1]) /* ty=Tensor[(99, 1), uint64] */;
  %314 = reshape(%309, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %315 = reshape(%310, newshape=[54, 2]) /* ty=Tensor[(54, 2), int16] */;
  %316 = reshape(%311, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %317 = @func_3809(%312, %313, %314, %315, %316) /* ty=(Tensor[(5, 2, 12), bool], Tensor[(6, 6, 3), bool], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(54, 2), int16], Tensor[(208), float32], Tensor[(352), float64], Tensor[(144), float32], Tensor[(352), float64], Tensor[(10, 15, 9), float32], Tensor[(1350), float32], Tensor[(44), float64], Tensor[(4, 11, 1), float64]) */;
  %318 = %317.12;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(44), float64] */;
  %320 = reshape(%319, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), float64] */;
  %321 = @func_2002(%320) /* ty=(Tensor[(4, 11, 1), float64],) */;
  %322 = cos(%306) /* ty=Tensor[(2, 7, 7), float64] */;
  %323 = %321.0;
  (%322, %318, %var_6191, %var_6192, %var_6193, meta[relay.Constant][19] /* ty=Tensor[(108), int16] */, %var_6195, %323)
}

def @func_3520(%var_3448: Tensor[(2, 8, 9), float32], %var_3449: Tensor[(2, 8, 9), float32], %var_3488: Tensor[(352), float64]) -> (Tensor[(8, 2, 13), float32], Tensor[(208), float32], Tensor[(7, 15, 2), bool], Tensor[(352), float64], Tensor[(2, 8, 9), float64], Tensor[(2, 8, 9), uint16]) {
  %324 = cast(meta[relay.Constant][20] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %325 = reshape(%324, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float32] */;
  %326 = @func_2125(%325) /* ty=(Tensor[(8, 2, 13), float32],) */;
  %327 = cast(%var_3488, dtype="float64") /* ty=Tensor[(352), float64] */;
  %328 = reshape(%327, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %329 = @func_262(%328) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) */;
  %330 = cast(%var_3449, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
  %331 = shape_of(%var_3448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%var_3448, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %334 = equal(%332, %333) /* ty=Tensor[(2, 8, 9), bool] */;
  %335 = cast(%var_3449, dtype="int64") /* ty=Tensor[(2, 8, 9), int64] */;
  %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%334, dtype="int64") /* ty=Tensor[(2, 8, 9), int64] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %339 = logical_xor(%337, %338) /* ty=Tensor[(2, 8, 9), int64] */;
  %340 = cast(%339, dtype="float64") /* ty=Tensor[(2, 8, 9), float64] */;
  %341 = cast(%339, dtype="uint16") /* ty=Tensor[(2, 8, 9), uint16] */;
  %342 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%334, dtype="uint16") /* ty=Tensor[(2, 8, 9), uint16] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %345 = %326.0;
  %346 = %329.1;
  %347 = cos(%340) /* ty=Tensor[(2, 8, 9), float64] */;
  %348 = minimum(%343, %344) /* ty=Tensor[(2, 8, 9), uint16] */;
  (%345, meta[relay.Constant][20] /* ty=Tensor[(208), float32] */, %346, %var_3488, %347, %348)
}

def @func_2864(%var_2842: Tensor[(3, 13, 2), float64]) -> (Tensor[(3, 13, 2), float64], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) {
  %349 = cast(%var_2842, dtype="float64") /* ty=Tensor[(3, 13, 2), float64] */;
  %350 = cast(meta[relay.Constant][21] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %351 = reshape(%350, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), float64] */;
  %352 = @func_2002(%351) /* ty=(Tensor[(4, 11, 1), float64],) */;
  %353 = sqrt(%349) /* ty=Tensor[(3, 13, 2), float64] */;
  %354 = %352.0;
  (%353, %354, meta[relay.Constant][21] /* ty=Tensor[(44), float64] */)
}

def @func_8918() -> (Tensor[(3, 10, 4), float32],) {
  %355 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %356 = %355.0;
  (%356,)
}

def @func_3376(%var_3348: Tensor[(13, 2, 14), uint32]) -> Tensor[(13, 2, 14), uint32] {
  %357 = cast(%var_3348, dtype="uint32") /* ty=Tensor[(13, 2, 14), uint32] */;
  %358 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(13, 2, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 2, 14), uint32] */, dtype="uint32") /* ty=Tensor[(13, 2, 14), uint32] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%359, %360) /* ty=Tensor[(13, 2, 14), uint32] */
}

def @func_9050() -> (Tensor[(3, 10, 4), float32],) {
  %361 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %362 = %361.0;
  (%362,)
}

def @func_6972(%var_6955: Tensor[(12, 15, 14), int8]) -> (Tensor[(12, 15, 14), bool], Tensor[(12, 12, 11), float64], Tensor[(1584), float64]) {
  %363 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 15, 14), int8] */, dtype="bool") /* ty=Tensor[(12, 15, 14), bool] */;
  %364 = shape_of(%var_6955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%var_6955, dtype="bool") /* ty=Tensor[(12, 15, 14), bool] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %367 = cast(meta[relay.Constant][24] /* ty=Tensor[(1584), float64] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %368 = reshape(%367, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), float64] */;
  %369 = less(%365, %366) /* ty=Tensor[(12, 15, 14), bool] */;
  %370 = @func_644(%368) /* ty=Tensor[(12, 12, 11), float64] */;
  (%369, %370, meta[relay.Constant][24] /* ty=Tensor[(1584), float64] */)
}

def @func_4654(%var_4638: Tensor[(3, 13, 8), int64], %var_4646: Tensor[(78), float64]) -> (Tensor[(3, 13, 8), int64], Tensor[(44), float64], Tensor[(78), float64]) {
  %371 = cast(%var_4638, dtype="int64") /* ty=Tensor[(3, 13, 8), int64] */;
  %372 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(3, 13, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 13, 8), int64] */, dtype="int64") /* ty=Tensor[(3, 13, 8), int64] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %375 = cast(%var_4646, dtype="float64") /* ty=Tensor[(78), float64] */;
  %376 = reshape(%375, newshape=[3, 13, 2]) /* ty=Tensor[(3, 13, 2), float64] */;
  %377 = @func_2864(%376) /* ty=(Tensor[(3, 13, 2), float64], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) */;
  %378 = logical_xor(%373, %374) /* ty=Tensor[(3, 13, 8), int64] */;
  %379 = %377.2;
  (%378, %379, %var_4646)
}

def @func_6361(%var_6336: Tensor[(6, 3, 14), int16], %var_6337: Tensor[(6, 3, 14), int16], %var_6346: Tensor[(78), float64]) -> (Tensor[(6, 3, 14), int16], Tensor[(78), float64], Tensor[(2, 4), float64], Tensor[(78), float64]) {
  %380 = cast(%var_6337, dtype="int16") /* ty=Tensor[(6, 3, 14), int16] */;
  %381 = shape_of(%var_6336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_6336, dtype="int16") /* ty=Tensor[(6, 3, 14), int16] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %384 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 4), float64] */;
  %385 = cast(%var_6346, dtype="float64") /* ty=Tensor[(78), float64] */;
  %386 = reshape(%384, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float64] */;
  %387 = reshape(%385, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %388 = @func_4134(%386, %387) /* ty=(Tensor[(?, 8, ?), bool], Tensor[(44), float64], Tensor[(78), float64]) */;
  %389 = add(%382, %383) /* ty=Tensor[(6, 3, 14), int16] */;
  %390 = %388.2;
  (%389, %390, meta[relay.Constant][26] /* ty=Tensor[(2, 4), float64] */, %var_6346)
}

def @func_348(%var_325: Tensor[(5, 12, 14), int16], %var_326: Tensor[(5, 12, 14), int16]) -> (Tensor[(5, 12, 14), int16], Tensor[(7, 15, 2), bool], float32) {
  %391 = cast(%var_326, dtype="int16") /* ty=Tensor[(5, 12, 14), int16] */;
  %392 = shape_of(%var_325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%var_325, dtype="int16") /* ty=Tensor[(5, 12, 14), int16] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %395 = cast(-5.84129f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %396 = reshape(%395, newshape=[]) /* ty=float32 */;
  %397 = @func_35(%396) /* ty=(Tensor[(7, 15, 2), bool],) */;
  %398 = bitwise_and(%393, %394) /* ty=Tensor[(5, 12, 14), int16] */;
  %399 = %397.0;
  (%398, %399, -5.84129f /* ty=float32 */)
}

def @func_869(%var_816: Tensor[(5, 9, 1), uint64], %var_817: Tensor[(5, 9, 6), uint64], %var_824: Tensor[(352), float64]) -> (Tensor[(352), float64], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(12, 12, 11), float64], Tensor[(1584), float64], Tensor[(5, 9, 6), bool], Tensor[(5, 9, 6), uint8]) {
  %400 = cast(meta[relay.Constant][27] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
  %401 = cast(meta[relay.Constant][27] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
  %402 = reshape(%400, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
  %403 = reshape(%401, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
  %404 = cast(meta[relay.Constant][28] /* ty=Tensor[(1584), float64] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %405 = reshape(%404, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), float64] */;
  %406 = cast(%var_824, dtype="float64") /* ty=Tensor[(352), float64] */;
  %407 = reshape(%406, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %408 = @func_262(%407) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) */;
  %409 = %408.2;
  %410 = cast(%var_817, dtype="bool") /* ty=Tensor[(5, 9, 6), bool] */;
  %411 = cast(%409, dtype="bool") /* ty=bool */;
  %412 = cast(%var_816, dtype="uint64") /* ty=Tensor[(5, 9, 1), uint64] */;
  %413 = cast(%var_817, dtype="uint64") /* ty=Tensor[(5, 9, 6), uint64] */;
  %414 = right_shift(%412, %413) /* ty=Tensor[(5, 9, 6), uint64] */;
  %415 = cast(%414, dtype="float64") /* ty=Tensor[(5, 9, 6), float64] */;
  %416 = sqrt(%415) /* ty=Tensor[(5, 9, 6), float64] */;
  %417 = cast(%var_817, dtype="uint8") /* ty=Tensor[(5, 9, 6), uint8] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="uint8") /* ty=Tensor[(5, 9, 6), uint8] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %421 = @func_542(%402, %403) /* ty=Tensor[(10, 11, 13), uint32] */;
  %422 = @func_644(%405) /* ty=Tensor[(12, 12, 11), float64] */;
  %423 = less(%410, %411) /* ty=Tensor[(5, 9, 6), bool] */;
  %424 = bitwise_and(%419, %420) /* ty=Tensor[(5, 9, 6), uint8] */;
  (%var_824, %421, meta[relay.Constant][27] /* ty=Tensor[(1430), uint32] */, %422, meta[relay.Constant][28] /* ty=Tensor[(1584), float64] */, %423, %424)
}

def @func_6610(%var_6553: Tensor[(13, 3, 5), float32], %var_6581: Tensor[(98), float64], %var_6583: Tensor[(99), uint64], %var_6584: Tensor[(840), int16]) -> (Tensor[(576), uint8], Tensor[(98), float64], Tensor[(576), uint8], Tensor[(99), uint64], Tensor[(840), int16], Tensor[(144), float32], Tensor[(13, 3, 5), float32]) {
  %425 = cast(%var_6581, dtype="float64") /* ty=Tensor[(98), float64] */;
  %426 = cast(meta[relay.Constant][29] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %427 = cast(%var_6583, dtype="uint64") /* ty=Tensor[(99), uint64] */;
  %428 = cast(%var_6584, dtype="int16") /* ty=Tensor[(840), int16] */;
  %429 = cast(meta[relay.Constant][30] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %430 = reshape(%425, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), float64] */;
  %431 = reshape(%426, newshape=[576]) /* ty=Tensor[(576), uint8] */;
  %432 = reshape(%427, newshape=[99, 1]) /* ty=Tensor[(99, 1), uint64] */;
  %433 = reshape(%428, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %434 = reshape(%429, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %435 = @func_6218(%430, %431, %432, %433, %434) /* ty=(Tensor[(2, 7, 7), float64], Tensor[(44), float64], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(108), int16], Tensor[(144), float32], Tensor[(4, 11, 1), float64]) */;
  %436 = cast(%var_6553, dtype="float32") /* ty=Tensor[(13, 3, 5), float32] */;
  %437 = asin(%436) /* ty=Tensor[(13, 3, 5), float32] */;
  %438 = cast(%437, dtype="bool") /* ty=Tensor[(13, 3, 5), bool] */;
  %439 = shape_of(%var_6553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%var_6553, dtype="bool") /* ty=Tensor[(13, 3, 5), bool] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %442 = greater_equal(%440, %441) /* ty=Tensor[(13, 3, 5), bool] */;
  %443 = cast(%437, dtype="float32") /* ty=Tensor[(13, 3, 5), float32] */;
  %444 = shape_of(%442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%442, dtype="float32") /* ty=Tensor[(13, 3, 5), float32] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %447 = %435.2;
  %448 = floor_mod(%445, %446) /* ty=Tensor[(13, 3, 5), float32] */;
  (%447, %var_6581, meta[relay.Constant][29] /* ty=Tensor[(576), uint8] */, %var_6583, %var_6584, meta[relay.Constant][30] /* ty=Tensor[(144), float32] */, %448)
}

def @func_4583(%var_4577: Tensor[(10, 7, 9), uint64], %var_4578: Tensor[(10, 7, 9), uint64]) -> (Tensor[(10, 7, 9), bool],) {
  %449 = cast(%var_4578, dtype="bool") /* ty=Tensor[(10, 7, 9), bool] */;
  %450 = shape_of(%var_4577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%var_4577, dtype="bool") /* ty=Tensor[(10, 7, 9), bool] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %453 = greater_equal(%451, %452) /* ty=Tensor[(10, 7, 9), bool] */;
  (%453,)
}

def @func_9410(%var_9355: Tensor[(392), uint32], %var_9360: Tensor[(208), float32], %var_9366: Tensor[(576), uint8], %var_9368: Tensor[(840), int16]) -> (Tensor[(3, 10, 4), float32], Tensor[(1430), uint32], Tensor[(12, 12, 11), float64], Tensor[(2520, 1), int8], Tensor[(7, 14, 4), uint32], Tensor[(392), uint32], Tensor[(8, 2, 13), float32], Tensor[(208), float32], Tensor[(840), int16], Tensor[(576), uint8], Tensor[(99), uint64], Tensor[(840), int16], Tensor[(144), float32], Tensor[(6, 18), float64], Tensor[(10, 11, 13), float32]) {
  %454 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %455 = cast(meta[relay.Constant][32] /* ty=Tensor[(2520, 1), int8] */, dtype="int8") /* ty=Tensor[(2520, 1), int8] */;
  %456 = reshape(%455, newshape=[12, 15, 14]) /* ty=Tensor[(12, 15, 14), int8] */;
  %457 = @func_6972(%456) /* ty=(Tensor[(12, 15, 14), bool], Tensor[(12, 12, 11), float64], Tensor[(1584), float64]) */;
  %458 = cast(%var_9355, dtype="uint32") /* ty=Tensor[(392), uint32] */;
  %459 = reshape(%458, newshape=[7, 14, 4]) /* ty=Tensor[(7, 14, 4), uint32] */;
  %460 = @func_2830(%459) /* ty=(Tensor[(7, 14, 4), uint32],) */;
  %461 = cast(%var_9360, dtype="float32") /* ty=Tensor[(208), float32] */;
  %462 = reshape(%461, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float32] */;
  %463 = @func_2125(%462) /* ty=(Tensor[(8, 2, 13), float32],) */;
  %464 = cast(%var_9366, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %465 = cast(meta[relay.Constant][33] /* ty=Tensor[(99), uint64] */, dtype="uint64") /* ty=Tensor[(99), uint64] */;
  %466 = cast(%var_9368, dtype="int16") /* ty=Tensor[(840), int16] */;
  %467 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 18), int16] */, dtype="int16") /* ty=Tensor[(6, 18), int16] */;
  %468 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %469 = reshape(%464, newshape=[576]) /* ty=Tensor[(576), uint8] */;
  %470 = reshape(%465, newshape=[99, 1]) /* ty=Tensor[(99, 1), uint64] */;
  %471 = reshape(%466, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %472 = reshape(%467, newshape=[54, 2]) /* ty=Tensor[(54, 2), int16] */;
  %473 = reshape(%468, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %474 = @func_3809(%469, %470, %471, %472, %473) /* ty=(Tensor[(5, 2, 12), bool], Tensor[(6, 6, 3), bool], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(54, 2), int16], Tensor[(208), float32], Tensor[(352), float64], Tensor[(144), float32], Tensor[(352), float64], Tensor[(10, 15, 9), float32], Tensor[(1350), float32], Tensor[(44), float64], Tensor[(4, 11, 1), float64]) */;
  %475 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 18), int16] */, dtype="float64") /* ty=Tensor[(6, 18), float64] */;
  %476 = cast(meta[relay.Constant][31] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
  %477 = cast(meta[relay.Constant][31] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
  %478 = reshape(%476, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
  %479 = reshape(%477, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
  %480 = @func_542(%478, %479) /* ty=Tensor[(10, 11, 13), uint32] */;
  %481 = cast(%480, dtype="float32") /* ty=Tensor[(10, 11, 13), float32] */;
  %482 = sigmoid(%481) /* ty=Tensor[(10, 11, 13), float32] */;
  %483 = cast(%482, dtype="float64") /* ty=Tensor[(10, 11, 13), float64] */;
  %484 = asinh(%483) /* ty=Tensor[(10, 11, 13), float64] */;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(10, 11, 13), float32] */;
  %486 = %454.0;
  %487 = %457.1;
  %488 = %460.0;
  %489 = %463.0;
  %490 = %474.4;
  %491 = log(%475) /* ty=Tensor[(6, 18), float64] */;
  %492 = atan(%485) /* ty=Tensor[(10, 11, 13), float32] */;
  (%486, meta[relay.Constant][31] /* ty=Tensor[(1430), uint32] */, %487, meta[relay.Constant][32] /* ty=Tensor[(2520, 1), int8] */, %488, %var_9355, %489, %var_9360, %490, %var_9366, meta[relay.Constant][33] /* ty=Tensor[(99), uint64] */, %var_9368, meta[relay.Constant][35] /* ty=Tensor[(144), float32] */, %491, %492)
}

def @func_297(%var_276: Tensor[(6, 6, 3), int16], %var_277: Tensor[(6, 6, 3), int16]) -> (Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) {
  %493 = cast(%var_277, dtype="bool") /* ty=Tensor[(6, 6, 3), bool] */;
  %494 = shape_of(%var_276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%var_276, dtype="bool") /* ty=Tensor[(6, 6, 3), bool] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %497 = cast(2.59927f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %498 = reshape(%497, newshape=[]) /* ty=float32 */;
  %499 = @func_35(%498) /* ty=(Tensor[(7, 15, 2), bool],) */;
  %500 = greater_equal(%495, %496) /* ty=Tensor[(6, 6, 3), bool] */;
  %501 = %499.0;
  (%500, %501, 2.59927f /* ty=float32 */)
}

def @func_7705(%var_7689: Tensor[(14, 6, 8), int8]) -> Tensor[(14, 6, 8), uint16] {
  %502 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 6, 8), int8] */, dtype="bool") /* ty=Tensor[(14, 6, 8), bool] */;
  %503 = shape_of(%var_7689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(%var_7689, dtype="bool") /* ty=Tensor[(14, 6, 8), bool] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %506 = less_equal(%504, %505) /* ty=Tensor[(14, 6, 8), bool] */;
  %507 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 6, 8), int8] */, dtype="uint16") /* ty=Tensor[(14, 6, 8), uint16] */;
  %508 = shape_of(%506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%506, dtype="uint16") /* ty=Tensor[(14, 6, 8), uint16] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%509, %510) /* ty=Tensor[(14, 6, 8), uint16] */
}

def @func_3669(%var_3656: Tensor[(5, 13, 8), uint8], %var_3657: Tensor[(5, 13, 8), uint8]) -> (Tensor[(5, 13, 8), uint8],) {
  %511 = cast(%var_3657, dtype="uint8") /* ty=Tensor[(5, 13, 8), uint8] */;
  %512 = shape_of(%var_3656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%var_3656, dtype="uint8") /* ty=Tensor[(5, 13, 8), uint8] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %515 = subtract(%513, %514) /* ty=Tensor[(5, 13, 8), uint8] */;
  (%515,)
}

def @func_6680(%var_6653: Tensor[(14, 15, 10), int8], %var_6663: Tensor[(352), float64], %var_6667: Tensor[(5, 126), uint64]) -> (Tensor[(14, 15, 10), int8], Tensor[(352, 1), float64], Tensor[(352), float64], Tensor[(10, 7, 9), bool], Tensor[(5, 126), uint64]) {
  %516 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 15, 10), int8] */, dtype="int8") /* ty=Tensor[(14, 15, 10), int8] */;
  %517 = shape_of(%var_6653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%var_6653, dtype="int8") /* ty=Tensor[(14, 15, 10), int8] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %520 = cast(%var_6663, dtype="float64") /* ty=Tensor[(352), float64] */;
  %521 = reshape(%520, newshape=[352, 1]) /* ty=Tensor[(352, 1), float64] */;
  %522 = @func_5880(%521) /* ty=(Tensor[(2, 7, 8), bool], Tensor[(352, 1), float64], Tensor[(4, 8, 11), float32], float32, Tensor[(840, 1), int16]) */;
  %523 = cast(%var_6667, dtype="uint64") /* ty=Tensor[(5, 126), uint64] */;
  %524 = cast(%var_6667, dtype="uint64") /* ty=Tensor[(5, 126), uint64] */;
  %525 = reshape(%523, newshape=[10, 7, 9]) /* ty=Tensor[(10, 7, 9), uint64] */;
  %526 = reshape(%524, newshape=[10, 7, 9]) /* ty=Tensor[(10, 7, 9), uint64] */;
  %527 = @func_4583(%525, %526) /* ty=(Tensor[(10, 7, 9), bool],) */;
  %528 = bitwise_or(%518, %519) /* ty=Tensor[(14, 15, 10), int8] */;
  %529 = %522.1;
  %530 = %527.0;
  (%528, %529, %var_6663, %530, %var_6667)
}

def @func_2830(%var_2819: Tensor[(7, 14, 4), uint32]) -> (Tensor[(7, 14, 4), uint32],) {
  %531 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 14, 4), uint32] */, dtype="uint32") /* ty=Tensor[(7, 14, 4), uint32] */;
  %532 = shape_of(%var_2819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(%var_2819, dtype="uint32") /* ty=Tensor[(7, 14, 4), uint32] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %535 = logical_xor(%533, %534) /* ty=Tensor[(7, 14, 4), uint32] */;
  (%535,)
}

def @func_4805(%var_4792: Tensor[(3, 6, 12), float32], %var_4793: Tensor[(3, 6, 12), float32]) -> (Tensor[(3, 6, 12), float32],) {
  %536 = cast(%var_4793, dtype="float32") /* ty=Tensor[(3, 6, 12), float32] */;
  %537 = shape_of(%var_4792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%var_4792, dtype="float32") /* ty=Tensor[(3, 6, 12), float32] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %540 = power(%538, %539) /* ty=Tensor[(3, 6, 12), float32] */;
  (%540,)
}

def @func_9115(%var_9107: Tensor[(14, 7), float64], %var_9112: Tensor[(352), float64]) -> (Tensor[(3, 10, 4), uint32], Tensor[(98), float64], Tensor[(195), float32], Tensor[(14, 7), float64], Tensor[(11, 9), uint64], Tensor[(840), int16], Tensor[(7, 15, 2), bool], Tensor[(352), float64]) {
  %541 = @func_8896() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %542 = %541.0;
  %543 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 10, 4), float32] */, dtype="uint32") /* ty=Tensor[(3, 10, 4), uint32] */;
  %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%542, dtype="uint32") /* ty=Tensor[(3, 10, 4), uint32] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %547 = cast(meta[relay.Constant][40] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %548 = cast(%var_9107, dtype="float64") /* ty=Tensor[(14, 7), float64] */;
  %549 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 9), uint64] */, dtype="uint64") /* ty=Tensor[(11, 9), uint64] */;
  %550 = cast(meta[relay.Constant][42] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %551 = reshape(%547, newshape=[13, 3, 5]) /* ty=Tensor[(13, 3, 5), float32] */;
  %552 = reshape(%548, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %553 = reshape(%549, newshape=[99]) /* ty=Tensor[(99), uint64] */;
  %554 = reshape(%550, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %555 = @func_6610(%551, %552, %553, %554) /* ty=(Tensor[(576), uint8], Tensor[(98), float64], Tensor[(576), uint8], Tensor[(99), uint64], Tensor[(840), int16], Tensor[(144), float32], Tensor[(13, 3, 5), float32]) */;
  %556 = cast(%var_9112, dtype="float64") /* ty=Tensor[(352), float64] */;
  %557 = reshape(%556, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %558 = @func_262(%557) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) */;
  %559 = bitwise_and(%545, %546) /* ty=Tensor[(3, 10, 4), uint32] */;
  %560 = %555.1;
  %561 = %558.1;
  (%559, %560, meta[relay.Constant][40] /* ty=Tensor[(195), float32] */, %var_9107, meta[relay.Constant][41] /* ty=Tensor[(11, 9), uint64] */, meta[relay.Constant][42] /* ty=Tensor[(840), int16] */, %561, %var_9112)
}

def @func_5342(%var_5321: int16) -> (Tensor[(10, 5, 10), int16], Tensor[(10, 5, 10), float64]) {
  %562 = cast(%var_5321, dtype="int16") /* ty=int16 */;
  %563 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 5, 10), int16] */, dtype="int16") /* ty=Tensor[(10, 5, 10), int16] */;
  %564 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 5, 10), int16] */, dtype="float64") /* ty=Tensor[(10, 5, 10), float64] */;
  %565 = left_shift(%562, %563) /* ty=Tensor[(10, 5, 10), int16] */;
  %566 = exp(%564) /* ty=Tensor[(10, 5, 10), float64] */;
  (%565, %566)
}

def @func_6720(%var_6699: Tensor[(12, 4, 8), float32], %var_6700: Tensor[(12, 4, 8), float32]) -> (Tensor[(12, 4, 8), float32], Tensor[(1350, 1), float32], Tensor[(44), float64]) {
  %567 = cast(%var_6700, dtype="float32") /* ty=Tensor[(12, 4, 8), float32] */;
  %568 = shape_of(%var_6699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%var_6699, dtype="float32") /* ty=Tensor[(12, 4, 8), float32] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %571 = cast(meta[relay.Constant][44] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %572 = reshape(%571, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %573 = @func_5817(%572) /* ty=(Tensor[(4, 8, 5), float64], Tensor[(10, 15, 9), float32], Tensor[(1350, 1), float32], Tensor[(44), float64]) */;
  %574 = mod(%569, %570) /* ty=Tensor[(12, 4, 8), float32] */;
  %575 = %573.2;
  (%574, %575, meta[relay.Constant][44] /* ty=Tensor[(44), float64] */)
}

def @func_2125(%var_2119: Tensor[(8, 2, 13), float32]) -> (Tensor[(8, 2, 13), float32],) {
  %576 = cast(%var_2119, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
  %577 = log10(%576) /* ty=Tensor[(8, 2, 13), float32] */;
  (%577,)
}

def @main(%var_9474: Tensor[(3, 10, 4), float32]) -> (Tensor[(3, 3), bool], Tensor[(9), uint16], Tensor[(3, 10, 4), bool]) {
  %578 = cast(meta[relay.Constant][45] /* ty=Tensor[(9), uint16] */, dtype="uint16") /* ty=Tensor[(9), uint16] */;
  %579 = cast(meta[relay.Constant][45] /* ty=Tensor[(9), uint16] */, dtype="uint16") /* ty=Tensor[(9), uint16] */;
  %580 = reshape(%578, newshape=[3, 3]) /* ty=Tensor[(3, 3), uint16] */;
  %581 = reshape(%579, newshape=[3, 3]) /* ty=Tensor[(3, 3), uint16] */;
  %582 = @func_5024(%580, %581) /* ty=(Tensor[(3, 3), bool],) */;
  %583 = @func_8702() /* ty=Tensor[(3, 10, 4), float32] */;
  %584 = cast(%var_9474, dtype="bool") /* ty=Tensor[(3, 10, 4), bool] */;
  %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%583, dtype="bool") /* ty=Tensor[(3, 10, 4), bool] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %588 = %582.0;
  %589 = greater(%586, %587) /* ty=Tensor[(3, 10, 4), bool] */;
  (%588, meta[relay.Constant][45] /* ty=Tensor[(9), uint16] */, %589)
}

def @func_542(%var_536: Tensor[(10, 11, 13), uint32], %var_537: Tensor[(10, 11, 13), uint32]) -> Tensor[(10, 11, 13), uint32] {
  %590 = cast(%var_537, dtype="uint32") /* ty=Tensor[(10, 11, 13), uint32] */;
  %591 = shape_of(%var_536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%var_536, dtype="uint32") /* ty=Tensor[(10, 11, 13), uint32] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%592, %593) /* ty=Tensor[(10, 11, 13), uint32] */
}

def @func_6537(%var_6523: Tensor[(15, 6, 16), float32]) -> (Tensor[(15, 1, 16), float32], Tensor[(15, 6, 16), bool], Tensor[(10, 5, 10), float64], int16) {
  %594 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %595 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 1, 16), float32] */, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %596 = cast(%var_6523, dtype="bool") /* ty=Tensor[(15, 6, 16), bool] */;
  %597 = cast(meta[relay.Constant][47] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %598 = reshape(%597, newshape=[]) /* ty=int16 */;
  %599 = @func_5342(%598) /* ty=(Tensor[(10, 5, 10), int16], Tensor[(10, 5, 10), float64]) */;
  %600 = sigmoid(%594) /* ty=Tensor[(15, 1, 16), float32] */;
  %601 = greater(%595, %596) /* ty=Tensor[(15, 6, 16), bool] */;
  %602 = %599.1;
  (%600, %601, %602, meta[relay.Constant][47] /* ty=int16 */)
}

def @func_4743(%var_4716: bool, %var_4717: Tensor[(1, 12, 3), bool]) -> (Tensor[(?, 12, 3), float64],) {
  %603 = cast(%var_4716, dtype="bool") /* ty=bool */;
  %604 = cast(%var_4717, dtype="bool") /* ty=Tensor[(1, 12, 3), bool] */;
  %605 = logical_or(%603, %604) /* ty=Tensor[(1, 12, 3), bool] */;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(1, 12, 3), float64] */;
  %607 = sinh(%606) /* ty=Tensor[(1, 12, 3), float64] */;
  %608 = cast(%607, dtype="float32") /* ty=Tensor[(1, 12, 3), float32] */;
  %609 = rsqrt(%608) /* ty=Tensor[(1, 12, 3), float32] */;
  %610 = cast(%609, dtype="float64") /* ty=Tensor[(1, 12, 3), float64] */;
  %611 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%607, dtype="float64") /* ty=Tensor[(1, 12, 3), float64] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %614 = power(%612, %613) /* ty=Tensor[(?, 12, 3), float64] */;
  (%614,)
}

def @func_7665(%var_7650: Tensor[(10, 15, 14), int8], %var_7657: Tensor[(78), float64]) -> (Tensor[(10, 15, 14), bool], Tensor[(3, 13, 8), int64], Tensor[(312), int64], Tensor[(78), float64]) {
  %615 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 15, 14), int8] */, dtype="bool") /* ty=Tensor[(10, 15, 14), bool] */;
  %616 = shape_of(%var_7650, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%var_7650, dtype="bool") /* ty=Tensor[(10, 15, 14), bool] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %619 = cast(meta[relay.Constant][49] /* ty=Tensor[(312), int64] */, dtype="int64") /* ty=Tensor[(312), int64] */;
  %620 = cast(%var_7657, dtype="float64") /* ty=Tensor[(78), float64] */;
  %621 = reshape(%619, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), int64] */;
  %622 = reshape(%620, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %623 = @func_4654(%621, %622) /* ty=(Tensor[(3, 13, 8), int64], Tensor[(44), float64], Tensor[(78), float64]) */;
  %624 = not_equal(%617, %618) /* ty=Tensor[(10, 15, 14), bool] */;
  %625 = %623.0;
  (%624, %625, meta[relay.Constant][49] /* ty=Tensor[(312), int64] */, %var_7657)
}

def @func_7763(%var_7739: Tensor[(968), float64], %var_7751: Tensor[(108), int16]) -> (Tensor[(9, 6, 13), float64], Tensor[(8, 11, 11), float64], Tensor[(968), float64], Tensor[(?, 10, 3), uint32], Tensor[(1, 30), float32], Tensor[(6, 6, 3), bool], Tensor[(108), int16]) {
  %626 = cast(meta[relay.Constant][50] /* ty=Tensor[(9, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 6, 13), float64] */;
  %627 = cast(%var_7739, dtype="float64") /* ty=Tensor[(968), float64] */;
  %628 = reshape(%627, newshape=[8, 11, 11]) /* ty=Tensor[(8, 11, 11), float64] */;
  %629 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 30), float32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %630 = reshape(%629, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), float32] */;
  %631 = @func_3994(%630) /* ty=(Tensor[(?, 10, 3), uint32],) */;
  %632 = cast(%var_7751, dtype="int16") /* ty=Tensor[(108), int16] */;
  %633 = cast(%var_7751, dtype="int16") /* ty=Tensor[(108), int16] */;
  %634 = reshape(%632, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %635 = reshape(%633, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %636 = @func_297(%634, %635) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */;
  %637 = sin(%626) /* ty=Tensor[(9, 6, 13), float64] */;
  %638 = @func_5730(%628) /* ty=Tensor[(8, 11, 11), float64] */;
  %639 = %631.0;
  %640 = %636.0;
  (%637, %638, %var_7739, %639, meta[relay.Constant][51] /* ty=Tensor[(1, 30), float32] */, %640, %var_7751)
}

def @func_8241(%var_8231: Tensor[(6, 13, 8), uint64]) -> Tensor[(6, 13, 8), bool] {
  %641 = cast(%var_8231, dtype="bool") /* ty=Tensor[(6, 13, 8), bool] */;
  %642 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(6, 13, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 13, 8), uint64] */, dtype="bool") /* ty=Tensor[(6, 13, 8), bool] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%643, %644) /* ty=Tensor[(6, 13, 8), bool] */
}

def @func_35(%var_17: float32) -> (Tensor[(7, 15, 2), bool],) {
  %645 = cast(%var_17, dtype="float32") /* ty=float32 */;
  %646 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 15, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 15, 2), float32] */;
  %647 = mod(%645, %646) /* ty=Tensor[(1, 15, 2), float32] */;
  %648 = cast(%647, dtype="bool") /* ty=Tensor[(1, 15, 2), bool] */;
  %649 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 15, 2), float32] */, dtype="bool") /* ty=Tensor[(7, 15, 2), bool] */;
  %650 = less(%648, %649) /* ty=Tensor[(7, 15, 2), bool] */;
  (%650,)
}

def @func_6245(%var_6227: Tensor[(15, 10, 9), uint16], %var_6228: Tensor[(15, 10, 9), uint16], %var_6237: Tensor[(168), float64], %var_6242: Tensor[(312), int64]) -> (Tensor[(15, 10, 9), uint16], Tensor[(7, 4, 6), float64], Tensor[(168), float64], Tensor[(78), float64], Tensor[(312), int64], Tensor[(78), float64]) {
  %651 = cast(%var_6228, dtype="uint16") /* ty=Tensor[(15, 10, 9), uint16] */;
  %652 = shape_of(%var_6227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%var_6227, dtype="uint16") /* ty=Tensor[(15, 10, 9), uint16] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %655 = cast(%var_6237, dtype="float64") /* ty=Tensor[(168), float64] */;
  %656 = cast(%var_6237, dtype="float64") /* ty=Tensor[(168), float64] */;
  %657 = reshape(%655, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), float64] */;
  %658 = reshape(%656, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), float64] */;
  %659 = @func_5601(%657, %658) /* ty=(Tensor[(7, 4, 6), float64],) */;
  %660 = cast(%var_6242, dtype="int64") /* ty=Tensor[(312), int64] */;
  %661 = cast(meta[relay.Constant][55] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %662 = reshape(%660, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), int64] */;
  %663 = reshape(%661, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %664 = @func_4654(%662, %663) /* ty=(Tensor[(3, 13, 8), int64], Tensor[(44), float64], Tensor[(78), float64]) */;
  %665 = right_shift(%653, %654) /* ty=Tensor[(15, 10, 9), uint16] */;
  %666 = %659.0;
  %667 = %664.2;
  (%665, %666, %var_6237, %667, %var_6242, meta[relay.Constant][55] /* ty=Tensor[(78), float64] */)
}

def @func_1748(%var_1741: Tensor[(9, 4, 9), float32]) -> (Tensor[(9, 4, 9), uint64],) {
  %668 = cast(%var_1741, dtype="float32") /* ty=Tensor[(9, 4, 9), float32] */;
  %669 = sin(%668) /* ty=Tensor[(9, 4, 9), float32] */;
  %670 = cast(%669, dtype="uint64") /* ty=Tensor[(9, 4, 9), uint64] */;
  %671 = shape_of(%var_1741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%var_1741, dtype="uint64") /* ty=Tensor[(9, 4, 9), uint64] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %674 = bitwise_and(%672, %673) /* ty=Tensor[(9, 4, 9), uint64] */;
  (%674,)
}

def @func_2374(%var_2312: Tensor[(6, 12, 8), uint8], %var_2313: Tensor[(6, 12, 8), uint8], %var_2322: Tensor[(99), uint64], %var_2323: Tensor[(840), int16], %var_2324: Tensor[(108, 1), int16], %var_2372: Tensor[(208), float32]) -> (Tensor[(6, 6, 3), bool], Tensor[(99), uint64], Tensor[(108, 840), uint8], Tensor[(6, 12, 8), bool], Tensor[(8, 2, 13), float32], Tensor[(208), float32]) {
  %675 = cast(%var_2322, dtype="uint64") /* ty=Tensor[(99), uint64] */;
  %676 = cast(%var_2322, dtype="uint64") /* ty=Tensor[(99), uint64] */;
  %677 = cast(%var_2323, dtype="int16") /* ty=Tensor[(840), int16] */;
  %678 = cast(%var_2324, dtype="int16") /* ty=Tensor[(108, 1), int16] */;
  %679 = reshape(%675, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), uint64] */;
  %680 = reshape(%676, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), uint64] */;
  %681 = reshape(%677, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %682 = reshape(%678, newshape=[54, 2]) /* ty=Tensor[(54, 2), int16] */;
  %683 = @func_620(%679, %680, %681, %682) /* ty=(Tensor[(11, 3, 3), uint64], float32, Tensor[(840), int16], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(6, 6, 3), bool], Tensor[(54, 2), int16], float32) */;
  %684 = cast(%var_2323, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %685 = cast(%var_2324, dtype="uint8") /* ty=Tensor[(108, 1), uint8] */;
  %686 = cast(%var_2313, dtype="bool") /* ty=Tensor[(6, 12, 8), bool] */;
  %687 = shape_of(%var_2312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%var_2312, dtype="bool") /* ty=Tensor[(6, 12, 8), bool] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %690 = less(%688, %689) /* ty=Tensor[(6, 12, 8), bool] */;
  %691 = cast(%var_2312, dtype="bool") /* ty=Tensor[(6, 12, 8), bool] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%690, dtype="bool") /* ty=Tensor[(6, 12, 8), bool] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %695 = cast(%var_2372, dtype="float32") /* ty=Tensor[(208), float32] */;
  %696 = reshape(%695, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float32] */;
  %697 = @func_2125(%696) /* ty=(Tensor[(8, 2, 13), float32],) */;
  %698 = %683.5;
  %699 = bitwise_and(%684, %685) /* ty=Tensor[(108, 840), uint8] */;
  %700 = greater(%693, %694) /* ty=Tensor[(6, 12, 8), bool] */;
  %701 = %697.0;
  (%698, %var_2322, %699, %700, %701, %var_2372)
}

def @func_9432() -> Tensor[(3, 10, 4), float32] {
  %702 = @func_8918() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %702.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6974(%var_6973: Tensor[(12, 15, 14), int8]) -> (Tensor[(12, 15, 14), bool], Tensor[(12, 12, 11), float64], Tensor[(1584), float64]) {
  %8 = fn (%var_6955: Tensor[(12, 15, 14), int8]) -> (Tensor[(12, 15, 14), bool], Tensor[(12, 12, 11), float64], Tensor[(1584), float64]) {
    %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 15, 14), int8] */, dtype="bool") /* ty=Tensor[(12, 15, 14), bool] */;
    %1 = shape_of(%var_6955, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(%var_6955, dtype="bool") /* ty=Tensor[(12, 15, 14), bool] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(1584), float64] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
    %5 = reshape(%4, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), float64] */;
    %6 = less(%2, %3) /* ty=Tensor[(12, 15, 14), bool] */;
    %7 = @func_644(%5) /* ty=Tensor[(12, 12, 11), float64] */;
    (%6, %7, meta[relay.Constant][1] /* ty=Tensor[(1584), float64] */)
  };
  %8(%var_6973) /* ty=(Tensor[(12, 15, 14), bool], Tensor[(12, 12, 11), float64], Tensor[(1584), float64]) */
}

def @func_2981(%var_2978: Tensor[(10, 15, 9), float32], %var_2979: Tensor[(10, 15, 9), float32], %var_2980: Tensor[(44), float64]) -> (Tensor[(10, 15, 9), float64], Tensor[(10, 15, 9), float32], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) {
  @func_2976(%var_2978, %var_2979, %var_2980) /* ty=(Tensor[(10, 15, 9), float64], Tensor[(10, 15, 9), float32], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) */
}

def @func_2128(%var_2126: Tensor[(8, 2, 13), float32]) -> (Tensor[(8, 2, 13), float32],) {
  @func_2125(%var_2126) /* ty=(Tensor[(8, 2, 13), float32],) */
}

def @func_9182(%var_9181: Tensor[(3, 10, 4), float32]) -> (Tensor[(3, 10, 4), float32], Tensor[(5, 13, 8), uint8], Tensor[(5, 104), uint8]) {
  %21 = fn (%var_9150: Tensor[(3, 10, 4), float32]) -> (Tensor[(3, 10, 4), float32], Tensor[(5, 13, 8), uint8], Tensor[(5, 104), uint8]) {
    %9 = @func_8859() /* ty=Tensor[(3, 10, 4), float32] */;
    %10 = cast(%var_9150, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
    %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
    %12 = cast(%9, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
    %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %14 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 104), uint8] */, dtype="uint8") /* ty=Tensor[(5, 104), uint8] */;
    %15 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 104), uint8] */, dtype="uint8") /* ty=Tensor[(5, 104), uint8] */;
    %16 = reshape(%14, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint8] */;
    %17 = reshape(%15, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint8] */;
    %18 = @func_3669(%16, %17) /* ty=(Tensor[(5, 13, 8), uint8],) */;
    %19 = mod(%12, %13) /* ty=Tensor[(3, 10, 4), float32] */;
    %20 = %18.0;
    (%19, %20, meta[relay.Constant][2] /* ty=Tensor[(5, 104), uint8] */)
  };
  %21(%var_9181) /* ty=(Tensor[(3, 10, 4), float32], Tensor[(5, 13, 8), uint8], Tensor[(5, 104), uint8]) */
}

def @func_5027(%var_5025: Tensor[(3, 3), uint16], %var_5026: Tensor[(3, 3), uint16]) -> (Tensor[(3, 3), bool],) {
  %27 = fn (%var_4980: Tensor[(3, 3), uint16], %var_4981: Tensor[(3, 3), uint16]) -> (Tensor[(3, 3), bool],) {
    %22 = cast(%var_4981, dtype="bool") /* ty=Tensor[(3, 3), bool] */;
    %23 = shape_of(%var_4980, dtype="int32") /* ty=Tensor[(2), int32] */;
    %24 = cast(%var_4980, dtype="bool") /* ty=Tensor[(3, 3), bool] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %26 = greater(%24, %25) /* ty=Tensor[(3, 3), bool] */;
    (%26,)
  };
  %27(%var_5025, %var_5026) /* ty=(Tensor[(3, 3), bool],) */
}

def @func_1751(%var_1749: Tensor[(9, 4, 9), float32]) -> (Tensor[(9, 4, 9), uint64],) {
  @func_1748(%var_1749) /* ty=(Tensor[(9, 4, 9), uint64],) */
}

def @func_3994(%var_3977: Tensor[(1, 10, 3), float32]) -> (Tensor[(?, 10, 3), uint32],) {
  %28 = cast(%var_3977, dtype="float32") /* ty=Tensor[(1, 10, 3), float32] */;
  %29 = sinh(%28) /* ty=Tensor[(1, 10, 3), float32] */;
  %30 = cast(%var_3977, dtype="uint32") /* ty=Tensor[(1, 10, 3), uint32] */;
  %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%29, dtype="uint32") /* ty=Tensor[(1, 10, 3), uint32] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %34 = multiply(%32, %33) /* ty=Tensor[(?, 10, 3), uint32] */;
  (%34,)
}

def @func_4657(%var_4655: Tensor[(3, 13, 8), int64], %var_4656: Tensor[(78), float64]) -> (Tensor[(3, 13, 8), int64], Tensor[(44), float64], Tensor[(78), float64]) {
  %44 = fn (%var_4638: Tensor[(3, 13, 8), int64], %var_4646: Tensor[(78), float64]) -> (Tensor[(3, 13, 8), int64], Tensor[(44), float64], Tensor[(78), float64]) {
    %35 = cast(%var_4638, dtype="int64") /* ty=Tensor[(3, 13, 8), int64] */;
    %36 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(3, 13, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 13, 8), int64] */, dtype="int64") /* ty=Tensor[(3, 13, 8), int64] */;
    %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %39 = cast(%var_4646, dtype="float64") /* ty=Tensor[(78), float64] */;
    %40 = reshape(%39, newshape=[3, 13, 2]) /* ty=Tensor[(3, 13, 2), float64] */;
    %41 = @func_2864(%40) /* ty=(Tensor[(3, 13, 2), float64], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) */;
    %42 = logical_xor(%37, %38) /* ty=Tensor[(3, 13, 8), int64] */;
    %43 = %41.2;
    (%42, %43, %var_4646)
  };
  %44(%var_4655, %var_4656) /* ty=(Tensor[(3, 13, 8), int64], Tensor[(44), float64], Tensor[(78), float64]) */
}

def @func_8244(%var_8242: Tensor[(6, 13, 8), uint64]) -> Tensor[(6, 13, 8), bool] {
  @func_8241(%var_8242) /* ty=Tensor[(6, 13, 8), bool] */
}

def @func_9283() -> (Tensor[(3, 10, 4), uint32],) {
  %47 = fn () -> (Tensor[(3, 10, 4), uint32],) {
    %45 = @func_8956() /* ty=(Tensor[(3, 10, 4), uint32], Tensor[(3, 10, 4), float32], Tensor[(3, 10, 4), float32]) */;
    %46 = %45.0;
    (%46,)
  };
  %47() /* ty=(Tensor[(3, 10, 4), uint32],) */
}

def @func_625(%var_621: Tensor[(11, 3, 3), uint64], %var_622: Tensor[(11, 3, 3), uint64], %var_623: Tensor[(840), int16], %var_624: Tensor[(54, 2), int16]) -> (Tensor[(11, 3, 3), uint64], float32, Tensor[(840), int16], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(6, 6, 3), bool], Tensor[(54, 2), int16], float32) {
  %76 = fn (%var_580: Tensor[(11, 3, 3), uint64], %var_581: Tensor[(11, 3, 3), uint64], %var_604: Tensor[(840), int16], %var_610: Tensor[(54, 2), int16]) -> (Tensor[(11, 3, 3), uint64], float32, Tensor[(840), int16], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(6, 6, 3), bool], Tensor[(54, 2), int16], float32) {
    %48 = cast(%var_581, dtype="uint64") /* ty=Tensor[(11, 3, 3), uint64] */;
    %49 = shape_of(%var_580, dtype="int32") /* ty=Tensor[(3), int32] */;
    %50 = cast(%var_580, dtype="uint64") /* ty=Tensor[(11, 3, 3), uint64] */;
    %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %52 = cast(%var_604, dtype="int16") /* ty=Tensor[(840), int16] */;
    %53 = cast(%var_604, dtype="int16") /* ty=Tensor[(840), int16] */;
    %54 = reshape(%52, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int16] */;
    %55 = reshape(%53, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int16] */;
    %56 = @func_348(%54, %55) /* ty=(Tensor[(5, 12, 14), int16], Tensor[(7, 15, 2), bool], float32) */;
    %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
    %58 = cast(meta[relay.Constant][4] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
    %59 = reshape(%57, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
    %60 = reshape(%58, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
    %61 = cast(%var_610, dtype="int16") /* ty=Tensor[(54, 2), int16] */;
    %62 = cast(%var_610, dtype="int16") /* ty=Tensor[(54, 2), int16] */;
    %63 = reshape(%61, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
    %64 = reshape(%62, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
    %65 = @func_297(%63, %64) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */;
    %66 = %65.0;
    %67 = cast(%66, dtype="int16") /* ty=Tensor[(6, 6, 3), int16] */;
    %68 = cast(%66, dtype="int16") /* ty=Tensor[(6, 6, 3), int16] */;
    %69 = reshape(%67, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
    %70 = reshape(%68, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
    %71 = @func_297(%69, %70) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */;
    %72 = subtract(%50, %51) /* ty=Tensor[(11, 3, 3), uint64] */;
    %73 = %56.2;
    %74 = @func_542(%59, %60) /* ty=Tensor[(10, 11, 13), uint32] */;
    %75 = %71.2;
    (%72, %73, %var_604, %74, meta[relay.Constant][4] /* ty=Tensor[(1430), uint32] */, %66, %var_610, %75)
  };
  %76(%var_621, %var_622, %var_623, %var_624) /* ty=(Tensor[(11, 3, 3), uint64], float32, Tensor[(840), int16], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(6, 6, 3), bool], Tensor[(54, 2), int16], float32) */
}

def @func_3203(%var_3201: Tensor[(15, 16, 12), bool], %var_3202: Tensor[(15, 16, 12), bool]) -> (Tensor[(15, 16, 12), bool],) {
  @func_3199(%var_3201, %var_3202) /* ty=(Tensor[(15, 16, 12), bool],) */
}

def @func_3673(%var_3671: Tensor[(5, 13, 8), uint8], %var_3672: Tensor[(5, 13, 8), uint8]) -> (Tensor[(5, 13, 8), uint8],) {
  @func_3669(%var_3671, %var_3672) /* ty=(Tensor[(5, 13, 8), uint8],) */
}

def @func_8897() -> (Tensor[(3, 10, 4), float32],) {
  %79 = fn () -> (Tensor[(3, 10, 4), float32],) {
    %77 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
    %78 = %77.0;
    (%78,)
  };
  %79() /* ty=(Tensor[(3, 10, 4), float32],) */
}

def @func_9432() -> Tensor[(3, 10, 4), float32] {
  %80 = @func_8918() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %80.0
}

def @main(%var_9474: Tensor[(3, 10, 4), float32]) -> (Tensor[(3, 3), bool], Tensor[(9), uint16], Tensor[(3, 10, 4), bool]) {
  %81 = cast(meta[relay.Constant][5] /* ty=Tensor[(9), uint16] */, dtype="uint16") /* ty=Tensor[(9), uint16] */;
  %82 = cast(meta[relay.Constant][5] /* ty=Tensor[(9), uint16] */, dtype="uint16") /* ty=Tensor[(9), uint16] */;
  %83 = reshape(%81, newshape=[3, 3]) /* ty=Tensor[(3, 3), uint16] */;
  %84 = reshape(%82, newshape=[3, 3]) /* ty=Tensor[(3, 3), uint16] */;
  %85 = @func_5027(%83, %84) /* ty=(Tensor[(3, 3), bool],) */;
  %86 = @func_8702() /* ty=Tensor[(3, 10, 4), float32] */;
  %87 = cast(%var_9474, dtype="bool") /* ty=Tensor[(3, 10, 4), bool] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="bool") /* ty=Tensor[(3, 10, 4), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %91 = %85.0;
  %92 = greater(%89, %90) /* ty=Tensor[(3, 10, 4), bool] */;
  (%91, meta[relay.Constant][5] /* ty=Tensor[(9), uint16] */, %92)
}

def @func_9257() -> (Tensor[(3, 10, 4), float32],) {
  %93 = @func_8859() /* ty=Tensor[(3, 10, 4), float32] */;
  (%93,)
}

def @func_7708(%var_7706: Tensor[(14, 6, 8), int8]) -> Tensor[(14, 6, 8), uint16] {
  @func_7705(%var_7706) /* ty=Tensor[(14, 6, 8), uint16] */
}

def @func_6365(%var_6362: Tensor[(6, 3, 14), int16], %var_6363: Tensor[(6, 3, 14), int16], %var_6364: Tensor[(78), float64]) -> (Tensor[(6, 3, 14), int16], Tensor[(78), float64], Tensor[(2, 4), float64], Tensor[(78), float64]) {
  %105 = fn (%var_6336: Tensor[(6, 3, 14), int16], %var_6337: Tensor[(6, 3, 14), int16], %var_6346: Tensor[(78), float64]) -> (Tensor[(6, 3, 14), int16], Tensor[(78), float64], Tensor[(2, 4), float64], Tensor[(78), float64]) {
    %94 = cast(%var_6337, dtype="int16") /* ty=Tensor[(6, 3, 14), int16] */;
    %95 = shape_of(%var_6336, dtype="int32") /* ty=Tensor[(3), int32] */;
    %96 = cast(%var_6336, dtype="int16") /* ty=Tensor[(6, 3, 14), int16] */;
    %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %98 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 4), float64] */;
    %99 = cast(%var_6346, dtype="float64") /* ty=Tensor[(78), float64] */;
    %100 = reshape(%98, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float64] */;
    %101 = reshape(%99, newshape=[78]) /* ty=Tensor[(78), float64] */;
    %102 = @func_4134(%100, %101) /* ty=(Tensor[(?, 8, ?), bool], Tensor[(44), float64], Tensor[(78), float64]) */;
    %103 = add(%96, %97) /* ty=Tensor[(6, 3, 14), int16] */;
    %104 = %102.2;
    (%103, %104, meta[relay.Constant][6] /* ty=Tensor[(2, 4), float64] */, %var_6346)
  };
  %105(%var_6362, %var_6363, %var_6364) /* ty=(Tensor[(6, 3, 14), int16], Tensor[(78), float64], Tensor[(2, 4), float64], Tensor[(78), float64]) */
}

def @func_7668(%var_7666: Tensor[(10, 15, 14), int8], %var_7667: Tensor[(78), float64]) -> (Tensor[(10, 15, 14), bool], Tensor[(3, 13, 8), int64], Tensor[(312), int64], Tensor[(78), float64]) {
  %117 = fn (%var_7650: Tensor[(10, 15, 14), int8], %var_7657: Tensor[(78), float64]) -> (Tensor[(10, 15, 14), bool], Tensor[(3, 13, 8), int64], Tensor[(312), int64], Tensor[(78), float64]) {
    %106 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 15, 14), int8] */, dtype="bool") /* ty=Tensor[(10, 15, 14), bool] */;
    %107 = shape_of(%var_7650, dtype="int32") /* ty=Tensor[(3), int32] */;
    %108 = cast(%var_7650, dtype="bool") /* ty=Tensor[(10, 15, 14), bool] */;
    %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %110 = cast(meta[relay.Constant][8] /* ty=Tensor[(312), int64] */, dtype="int64") /* ty=Tensor[(312), int64] */;
    %111 = cast(%var_7657, dtype="float64") /* ty=Tensor[(78), float64] */;
    %112 = reshape(%110, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), int64] */;
    %113 = reshape(%111, newshape=[78]) /* ty=Tensor[(78), float64] */;
    %114 = @func_4654(%112, %113) /* ty=(Tensor[(3, 13, 8), int64], Tensor[(44), float64], Tensor[(78), float64]) */;
    %115 = not_equal(%108, %109) /* ty=Tensor[(10, 15, 14), bool] */;
    %116 = %114.0;
    (%115, %116, meta[relay.Constant][8] /* ty=Tensor[(312), int64] */, %var_7657)
  };
  %117(%var_7666, %var_7667) /* ty=(Tensor[(10, 15, 14), bool], Tensor[(3, 13, 8), int64], Tensor[(312), int64], Tensor[(78), float64]) */
}

def @func_6225(%var_6220: Tensor[(2, 7, 7), float64], %var_6221: Tensor[(576), uint8], %var_6222: Tensor[(99, 1), uint64], %var_6223: Tensor[(840), int16], %var_6224: Tensor[(144), float32]) -> (Tensor[(2, 7, 7), float64], Tensor[(44), float64], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(108), int16], Tensor[(144), float32], Tensor[(4, 11, 1), float64]) {
  @func_6218(%var_6220, %var_6221, %var_6222, %var_6223, %var_6224) /* ty=(Tensor[(2, 7, 7), float64], Tensor[(44), float64], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(108), int16], Tensor[(144), float32], Tensor[(4, 11, 1), float64]) */
}

def @func_6615(%var_6611: Tensor[(13, 3, 5), float32], %var_6612: Tensor[(98), float64], %var_6613: Tensor[(99), uint64], %var_6614: Tensor[(840), int16]) -> (Tensor[(576), uint8], Tensor[(98), float64], Tensor[(576), uint8], Tensor[(99), uint64], Tensor[(840), int16], Tensor[(144), float32], Tensor[(13, 3, 5), float32]) {
  %142 = fn (%var_6553: Tensor[(13, 3, 5), float32], %var_6581: Tensor[(98), float64], %var_6583: Tensor[(99), uint64], %var_6584: Tensor[(840), int16]) -> (Tensor[(576), uint8], Tensor[(98), float64], Tensor[(576), uint8], Tensor[(99), uint64], Tensor[(840), int16], Tensor[(144), float32], Tensor[(13, 3, 5), float32]) {
    %118 = cast(%var_6581, dtype="float64") /* ty=Tensor[(98), float64] */;
    %119 = cast(meta[relay.Constant][9] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
    %120 = cast(%var_6583, dtype="uint64") /* ty=Tensor[(99), uint64] */;
    %121 = cast(%var_6584, dtype="int16") /* ty=Tensor[(840), int16] */;
    %122 = cast(meta[relay.Constant][10] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %123 = reshape(%118, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), float64] */;
    %124 = reshape(%119, newshape=[576]) /* ty=Tensor[(576), uint8] */;
    %125 = reshape(%120, newshape=[99, 1]) /* ty=Tensor[(99, 1), uint64] */;
    %126 = reshape(%121, newshape=[840]) /* ty=Tensor[(840), int16] */;
    %127 = reshape(%122, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %128 = @func_6218(%123, %124, %125, %126, %127) /* ty=(Tensor[(2, 7, 7), float64], Tensor[(44), float64], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(108), int16], Tensor[(144), float32], Tensor[(4, 11, 1), float64]) */;
    %129 = cast(%var_6553, dtype="float32") /* ty=Tensor[(13, 3, 5), float32] */;
    %130 = asin(%129) /* ty=Tensor[(13, 3, 5), float32] */;
    %131 = cast(%130, dtype="bool") /* ty=Tensor[(13, 3, 5), bool] */;
    %132 = shape_of(%var_6553, dtype="int32") /* ty=Tensor[(3), int32] */;
    %133 = cast(%var_6553, dtype="bool") /* ty=Tensor[(13, 3, 5), bool] */;
    %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %135 = greater_equal(%133, %134) /* ty=Tensor[(13, 3, 5), bool] */;
    %136 = cast(%130, dtype="float32") /* ty=Tensor[(13, 3, 5), float32] */;
    %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
    %138 = cast(%135, dtype="float32") /* ty=Tensor[(13, 3, 5), float32] */;
    %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %140 = %128.2;
    %141 = floor_mod(%138, %139) /* ty=Tensor[(13, 3, 5), float32] */;
    (%140, %var_6581, meta[relay.Constant][9] /* ty=Tensor[(576), uint8] */, %var_6583, %var_6584, meta[relay.Constant][10] /* ty=Tensor[(144), float32] */, %141)
  };
  %142(%var_6611, %var_6612, %var_6613, %var_6614) /* ty=(Tensor[(576), uint8], Tensor[(98), float64], Tensor[(576), uint8], Tensor[(99), uint64], Tensor[(840), int16], Tensor[(144), float32], Tensor[(13, 3, 5), float32]) */
}

def @func_2002(%var_1995: Tensor[(4, 11, 1), float64]) -> (Tensor[(4, 11, 1), float64],) {
  %143 = cast(%var_1995, dtype="float64") /* ty=Tensor[(4, 11, 1), float64] */;
  %144 = sinh(%143) /* ty=Tensor[(4, 11, 1), float64] */;
  (%144,)
}

def @func_300(%var_298: Tensor[(6, 6, 3), int16], %var_299: Tensor[(6, 6, 3), int16]) -> (Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) {
  %154 = fn (%var_276: Tensor[(6, 6, 3), int16], %var_277: Tensor[(6, 6, 3), int16]) -> (Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) {
    %145 = cast(%var_277, dtype="bool") /* ty=Tensor[(6, 6, 3), bool] */;
    %146 = shape_of(%var_276, dtype="int32") /* ty=Tensor[(3), int32] */;
    %147 = cast(%var_276, dtype="bool") /* ty=Tensor[(6, 6, 3), bool] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %149 = cast(2.59927f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %150 = reshape(%149, newshape=[]) /* ty=float32 */;
    %151 = @func_35(%150) /* ty=(Tensor[(7, 15, 2), bool],) */;
    %152 = greater_equal(%147, %148) /* ty=Tensor[(6, 6, 3), bool] */;
    %153 = %151.0;
    (%152, %153, 2.59927f /* ty=float32 */)
  };
  %154(%var_298, %var_299) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */
}

def @func_8859() -> Tensor[(3, 10, 4), float32] {
  %155 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %156 = %155.0;
  %157 = cast(%156, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
  asinh(%157) /* ty=Tensor[(3, 10, 4), float32] */
}

def @func_1574(%var_1571: Tensor[(1, 8, 4), uint16], %var_1572: Tensor[(3, 8, 4), uint16], %var_1573: Tensor[(420, 2), int16]) -> (Tensor[(3, 8, 4), bool], Tensor[(6, 6, 3), bool], Tensor[(108), int16], Tensor[(7, 15, 2), bool], Tensor[(1430), uint32], Tensor[(99), uint64], Tensor[(420, 2), bool]) {
  @func_1569(%var_1571, %var_1572, %var_1573) /* ty=(Tensor[(3, 8, 4), bool], Tensor[(6, 6, 3), bool], Tensor[(108), int16], Tensor[(7, 15, 2), bool], Tensor[(1430), uint32], Tensor[(99), uint64], Tensor[(420, 2), bool]) */
}

def @func_6537(%var_6523: Tensor[(15, 6, 16), float32]) -> (Tensor[(15, 1, 16), float32], Tensor[(15, 6, 16), bool], Tensor[(10, 5, 10), float64], int16) {
  %158 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %159 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 1, 16), float32] */, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %160 = cast(%var_6523, dtype="bool") /* ty=Tensor[(15, 6, 16), bool] */;
  %161 = cast(meta[relay.Constant][12] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %162 = reshape(%161, newshape=[]) /* ty=int16 */;
  %163 = @func_5342(%162) /* ty=(Tensor[(10, 5, 10), int16], Tensor[(10, 5, 10), float64]) */;
  %164 = sigmoid(%158) /* ty=Tensor[(15, 1, 16), float32] */;
  %165 = greater(%159, %160) /* ty=Tensor[(15, 6, 16), bool] */;
  %166 = %163.1;
  (%164, %165, %166, meta[relay.Constant][12] /* ty=int16 */)
}

def @func_6680(%var_6653: Tensor[(14, 15, 10), int8], %var_6663: Tensor[(352), float64], %var_6667: Tensor[(5, 126), uint64]) -> (Tensor[(14, 15, 10), int8], Tensor[(352, 1), float64], Tensor[(352), float64], Tensor[(10, 7, 9), bool], Tensor[(5, 126), uint64]) {
  %167 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 15, 10), int8] */, dtype="int8") /* ty=Tensor[(14, 15, 10), int8] */;
  %168 = shape_of(%var_6653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%var_6653, dtype="int8") /* ty=Tensor[(14, 15, 10), int8] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %171 = cast(%var_6663, dtype="float64") /* ty=Tensor[(352), float64] */;
  %172 = reshape(%171, newshape=[352, 1]) /* ty=Tensor[(352, 1), float64] */;
  %173 = @func_5880(%172) /* ty=(Tensor[(2, 7, 8), bool], Tensor[(352, 1), float64], Tensor[(4, 8, 11), float32], float32, Tensor[(840, 1), int16]) */;
  %174 = cast(%var_6667, dtype="uint64") /* ty=Tensor[(5, 126), uint64] */;
  %175 = cast(%var_6667, dtype="uint64") /* ty=Tensor[(5, 126), uint64] */;
  %176 = reshape(%174, newshape=[10, 7, 9]) /* ty=Tensor[(10, 7, 9), uint64] */;
  %177 = reshape(%175, newshape=[10, 7, 9]) /* ty=Tensor[(10, 7, 9), uint64] */;
  %178 = @func_4583(%176, %177) /* ty=(Tensor[(10, 7, 9), bool],) */;
  %179 = bitwise_or(%169, %170) /* ty=Tensor[(14, 15, 10), int8] */;
  %180 = %173.1;
  %181 = %178.0;
  (%179, %180, %var_6663, %181, %var_6667)
}

def @func_2374(%var_2312: Tensor[(6, 12, 8), uint8], %var_2313: Tensor[(6, 12, 8), uint8], %var_2322: Tensor[(99), uint64], %var_2323: Tensor[(840), int16], %var_2324: Tensor[(108, 1), int16], %var_2372: Tensor[(208), float32]) -> (Tensor[(6, 6, 3), bool], Tensor[(99), uint64], Tensor[(108, 840), uint8], Tensor[(6, 12, 8), bool], Tensor[(8, 2, 13), float32], Tensor[(208), float32]) {
  %182 = cast(%var_2322, dtype="uint64") /* ty=Tensor[(99), uint64] */;
  %183 = cast(%var_2322, dtype="uint64") /* ty=Tensor[(99), uint64] */;
  %184 = cast(%var_2323, dtype="int16") /* ty=Tensor[(840), int16] */;
  %185 = cast(%var_2324, dtype="int16") /* ty=Tensor[(108, 1), int16] */;
  %186 = reshape(%182, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), uint64] */;
  %187 = reshape(%183, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), uint64] */;
  %188 = reshape(%184, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %189 = reshape(%185, newshape=[54, 2]) /* ty=Tensor[(54, 2), int16] */;
  %190 = @func_620(%186, %187, %188, %189) /* ty=(Tensor[(11, 3, 3), uint64], float32, Tensor[(840), int16], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(6, 6, 3), bool], Tensor[(54, 2), int16], float32) */;
  %191 = cast(%var_2323, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %192 = cast(%var_2324, dtype="uint8") /* ty=Tensor[(108, 1), uint8] */;
  %193 = cast(%var_2313, dtype="bool") /* ty=Tensor[(6, 12, 8), bool] */;
  %194 = shape_of(%var_2312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%var_2312, dtype="bool") /* ty=Tensor[(6, 12, 8), bool] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %197 = less(%195, %196) /* ty=Tensor[(6, 12, 8), bool] */;
  %198 = cast(%var_2312, dtype="bool") /* ty=Tensor[(6, 12, 8), bool] */;
  %199 = shape_of(%197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%197, dtype="bool") /* ty=Tensor[(6, 12, 8), bool] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %202 = cast(%var_2372, dtype="float32") /* ty=Tensor[(208), float32] */;
  %203 = reshape(%202, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float32] */;
  %204 = @func_2125(%203) /* ty=(Tensor[(8, 2, 13), float32],) */;
  %205 = %190.5;
  %206 = bitwise_and(%191, %192) /* ty=Tensor[(108, 840), uint8] */;
  %207 = greater(%200, %201) /* ty=Tensor[(6, 12, 8), bool] */;
  %208 = %204.0;
  (%205, %var_2322, %206, %207, %208, %var_2372)
}

def @func_37(%var_36: float32) -> (Tensor[(7, 15, 2), bool],) {
  %215 = fn (%var_17: float32) -> (Tensor[(7, 15, 2), bool],) {
    %209 = cast(%var_17, dtype="float32") /* ty=float32 */;
    %210 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 15, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 15, 2), float32] */;
    %211 = mod(%209, %210) /* ty=Tensor[(1, 15, 2), float32] */;
    %212 = cast(%211, dtype="bool") /* ty=Tensor[(1, 15, 2), bool] */;
    %213 = cast(meta[relay.Constant][15] /* ty=Tensor[(7, 15, 2), float32] */, dtype="bool") /* ty=Tensor[(7, 15, 2), bool] */;
    %214 = less(%212, %213) /* ty=Tensor[(7, 15, 2), bool] */;
    (%214,)
  };
  %215(%var_36) /* ty=(Tensor[(7, 15, 2), bool],) */
}

def @func_6218(%var_6185: Tensor[(2, 7, 7), float64], %var_6191: Tensor[(576), uint8], %var_6192: Tensor[(99, 1), uint64], %var_6193: Tensor[(840), int16], %var_6195: Tensor[(144), float32]) -> (Tensor[(2, 7, 7), float64], Tensor[(44), float64], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(108), int16], Tensor[(144), float32], Tensor[(4, 11, 1), float64]) {
  %216 = cast(%var_6185, dtype="float64") /* ty=Tensor[(2, 7, 7), float64] */;
  %217 = cast(%var_6191, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %218 = cast(%var_6192, dtype="uint64") /* ty=Tensor[(99, 1), uint64] */;
  %219 = cast(%var_6193, dtype="int16") /* ty=Tensor[(840), int16] */;
  %220 = cast(meta[relay.Constant][16] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %221 = cast(%var_6195, dtype="float32") /* ty=Tensor[(144), float32] */;
  %222 = reshape(%217, newshape=[576]) /* ty=Tensor[(576), uint8] */;
  %223 = reshape(%218, newshape=[99, 1]) /* ty=Tensor[(99, 1), uint64] */;
  %224 = reshape(%219, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %225 = reshape(%220, newshape=[54, 2]) /* ty=Tensor[(54, 2), int16] */;
  %226 = reshape(%221, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %227 = @func_3809(%222, %223, %224, %225, %226) /* ty=(Tensor[(5, 2, 12), bool], Tensor[(6, 6, 3), bool], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(54, 2), int16], Tensor[(208), float32], Tensor[(352), float64], Tensor[(144), float32], Tensor[(352), float64], Tensor[(10, 15, 9), float32], Tensor[(1350), float32], Tensor[(44), float64], Tensor[(4, 11, 1), float64]) */;
  %228 = %227.12;
  %229 = cast(%228, dtype="float64") /* ty=Tensor[(44), float64] */;
  %230 = reshape(%229, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), float64] */;
  %231 = @func_2002(%230) /* ty=(Tensor[(4, 11, 1), float64],) */;
  %232 = cos(%216) /* ty=Tensor[(2, 7, 7), float64] */;
  %233 = %231.0;
  (%232, %228, %var_6191, %var_6192, %var_6193, meta[relay.Constant][16] /* ty=Tensor[(108), int16] */, %var_6195, %233)
}

def @func_646(%var_645: Tensor[(12, 12, 11), float64]) -> Tensor[(12, 12, 11), float64] {
  %235 = fn (%var_639: Tensor[(12, 12, 11), float64]) -> Tensor[(12, 12, 11), float64] {
    %234 = cast(%var_639, dtype="float64") /* ty=Tensor[(12, 12, 11), float64] */;
    acos(%234) /* ty=Tensor[(12, 12, 11), float64] */
  };
  %235(%var_645) /* ty=Tensor[(12, 12, 11), float64] */
}

def @func_3199(%var_3192: Tensor[(15, 16, 12), bool], %var_3193: Tensor[(15, 16, 12), bool]) -> (Tensor[(15, 16, 12), bool],) {
  %236 = cast(%var_3193, dtype="bool") /* ty=Tensor[(15, 16, 12), bool] */;
  %237 = shape_of(%var_3192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%var_3192, dtype="bool") /* ty=Tensor[(15, 16, 12), bool] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %240 = logical_and(%238, %239) /* ty=Tensor[(15, 16, 12), bool] */;
  (%240,)
}

def @func_873(%var_870: Tensor[(5, 9, 1), uint64], %var_871: Tensor[(5, 9, 6), uint64], %var_872: Tensor[(352), float64]) -> (Tensor[(352), float64], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(12, 12, 11), float64], Tensor[(1584), float64], Tensor[(5, 9, 6), bool], Tensor[(5, 9, 6), uint8]) {
  %266 = fn (%var_816: Tensor[(5, 9, 1), uint64], %var_817: Tensor[(5, 9, 6), uint64], %var_824: Tensor[(352), float64]) -> (Tensor[(352), float64], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(12, 12, 11), float64], Tensor[(1584), float64], Tensor[(5, 9, 6), bool], Tensor[(5, 9, 6), uint8]) {
    %241 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
    %242 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
    %243 = reshape(%241, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
    %244 = reshape(%242, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
    %245 = cast(meta[relay.Constant][18] /* ty=Tensor[(1584), float64] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
    %246 = reshape(%245, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), float64] */;
    %247 = cast(%var_824, dtype="float64") /* ty=Tensor[(352), float64] */;
    %248 = reshape(%247, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
    %249 = @func_262(%248) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) */;
    %250 = %249.2;
    %251 = cast(%var_817, dtype="bool") /* ty=Tensor[(5, 9, 6), bool] */;
    %252 = cast(%250, dtype="bool") /* ty=bool */;
    %253 = cast(%var_816, dtype="uint64") /* ty=Tensor[(5, 9, 1), uint64] */;
    %254 = cast(%var_817, dtype="uint64") /* ty=Tensor[(5, 9, 6), uint64] */;
    %255 = right_shift(%253, %254) /* ty=Tensor[(5, 9, 6), uint64] */;
    %256 = cast(%255, dtype="float64") /* ty=Tensor[(5, 9, 6), float64] */;
    %257 = sqrt(%256) /* ty=Tensor[(5, 9, 6), float64] */;
    %258 = cast(%var_817, dtype="uint8") /* ty=Tensor[(5, 9, 6), uint8] */;
    %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
    %260 = cast(%257, dtype="uint8") /* ty=Tensor[(5, 9, 6), uint8] */;
    %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %262 = @func_542(%243, %244) /* ty=Tensor[(10, 11, 13), uint32] */;
    %263 = @func_644(%246) /* ty=Tensor[(12, 12, 11), float64] */;
    %264 = less(%251, %252) /* ty=Tensor[(5, 9, 6), bool] */;
    %265 = bitwise_and(%260, %261) /* ty=Tensor[(5, 9, 6), uint8] */;
    (%var_824, %262, meta[relay.Constant][17] /* ty=Tensor[(1430), uint32] */, %263, meta[relay.Constant][18] /* ty=Tensor[(1584), float64] */, %264, %265)
  };
  %266(%var_870, %var_871, %var_872) /* ty=(Tensor[(352), float64], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(12, 12, 11), float64], Tensor[(1584), float64], Tensor[(5, 9, 6), bool], Tensor[(5, 9, 6), uint8]) */
}

def @func_3669(%var_3656: Tensor[(5, 13, 8), uint8], %var_3657: Tensor[(5, 13, 8), uint8]) -> (Tensor[(5, 13, 8), uint8],) {
  %267 = cast(%var_3657, dtype="uint8") /* ty=Tensor[(5, 13, 8), uint8] */;
  %268 = shape_of(%var_3656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%var_3656, dtype="uint8") /* ty=Tensor[(5, 13, 8), uint8] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %271 = subtract(%269, %270) /* ty=Tensor[(5, 13, 8), uint8] */;
  (%271,)
}

def @func_6685(%var_6682: Tensor[(14, 15, 10), int8], %var_6683: Tensor[(352), float64], %var_6684: Tensor[(5, 126), uint64]) -> (Tensor[(14, 15, 10), int8], Tensor[(352, 1), float64], Tensor[(352), float64], Tensor[(10, 7, 9), bool], Tensor[(5, 126), uint64]) {
  @func_6680(%var_6682, %var_6683, %var_6684) /* ty=(Tensor[(14, 15, 10), int8], Tensor[(352, 1), float64], Tensor[(352), float64], Tensor[(10, 7, 9), bool], Tensor[(5, 126), uint64]) */
}

def @func_5241(%var_5238: Tensor[(6, 10, 13), float64], %var_5239: Tensor[(6, 10, 13), float64], %var_5240: Tensor[(6, 10, 13), float64]) -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), uint16], Tensor[(6, 10, 13), bool]) {
  %289 = fn (%var_5198: Tensor[(6, 10, 13), float64], %var_5224: Tensor[(6, 10, 13), float64], %var_5229: Tensor[(6, 10, 13), float64]) -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), uint16], Tensor[(6, 10, 13), bool]) {
    %272 = cast(%var_5198, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
    %273 = sinh(%272) /* ty=Tensor[(6, 10, 13), float64] */;
    %274 = cast(%273, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
    %275 = shape_of(%var_5198, dtype="int32") /* ty=Tensor[(3), int32] */;
    %276 = cast(%var_5198, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
    %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %278 = cast(%var_5224, dtype="uint16") /* ty=Tensor[(6, 10, 13), uint16] */;
    %279 = shape_of(%273, dtype="int32") /* ty=Tensor[(3), int32] */;
    %280 = cast(%273, dtype="uint16") /* ty=Tensor[(6, 10, 13), uint16] */;
    %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %282 = cast(%var_5229, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
    %283 = shape_of(%var_5224, dtype="int32") /* ty=Tensor[(3), int32] */;
    %284 = cast(%var_5224, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
    %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %286 = floor_divide(%276, %277) /* ty=Tensor[(6, 10, 13), float64] */;
    %287 = bitwise_and(%280, %281) /* ty=Tensor[(6, 10, 13), uint16] */;
    %288 = equal(%284, %285) /* ty=Tensor[(6, 10, 13), bool] */;
    (%286, %287, %288)
  };
  %289(%var_5238, %var_5239, %var_5240) /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), uint16], Tensor[(6, 10, 13), bool]) */
}

def @func_351(%var_349: Tensor[(5, 12, 14), int16], %var_350: Tensor[(5, 12, 14), int16]) -> (Tensor[(5, 12, 14), int16], Tensor[(7, 15, 2), bool], float32) {
  %299 = fn (%var_325: Tensor[(5, 12, 14), int16], %var_326: Tensor[(5, 12, 14), int16]) -> (Tensor[(5, 12, 14), int16], Tensor[(7, 15, 2), bool], float32) {
    %290 = cast(%var_326, dtype="int16") /* ty=Tensor[(5, 12, 14), int16] */;
    %291 = shape_of(%var_325, dtype="int32") /* ty=Tensor[(3), int32] */;
    %292 = cast(%var_325, dtype="int16") /* ty=Tensor[(5, 12, 14), int16] */;
    %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %294 = cast(-5.84129f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %295 = reshape(%294, newshape=[]) /* ty=float32 */;
    %296 = @func_35(%295) /* ty=(Tensor[(7, 15, 2), bool],) */;
    %297 = bitwise_and(%292, %293) /* ty=Tensor[(5, 12, 14), int16] */;
    %298 = %296.0;
    (%297, %298, -5.84129f /* ty=float32 */)
  };
  %299(%var_349, %var_350) /* ty=(Tensor[(5, 12, 14), int16], Tensor[(7, 15, 2), bool], float32) */
}

def @func_6724(%var_6722: Tensor[(12, 4, 8), float32], %var_6723: Tensor[(12, 4, 8), float32]) -> (Tensor[(12, 4, 8), float32], Tensor[(1350, 1), float32], Tensor[(44), float64]) {
  @func_6720(%var_6722, %var_6723) /* ty=(Tensor[(12, 4, 8), float32], Tensor[(1350, 1), float32], Tensor[(44), float64]) */
}

def @func_9052() -> (Tensor[(3, 10, 4), float32],) {
  @func_9050() /* ty=(Tensor[(3, 10, 4), float32],) */
}

def @func_9115(%var_9107: Tensor[(14, 7), float64], %var_9112: Tensor[(352), float64]) -> (Tensor[(3, 10, 4), uint32], Tensor[(98), float64], Tensor[(195), float32], Tensor[(14, 7), float64], Tensor[(11, 9), uint64], Tensor[(840), int16], Tensor[(7, 15, 2), bool], Tensor[(352), float64]) {
  %300 = @func_8896() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %301 = %300.0;
  %302 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 10, 4), float32] */, dtype="uint32") /* ty=Tensor[(3, 10, 4), uint32] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="uint32") /* ty=Tensor[(3, 10, 4), uint32] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %306 = cast(meta[relay.Constant][20] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %307 = cast(%var_9107, dtype="float64") /* ty=Tensor[(14, 7), float64] */;
  %308 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 9), uint64] */, dtype="uint64") /* ty=Tensor[(11, 9), uint64] */;
  %309 = cast(meta[relay.Constant][22] /* ty=Tensor[(840), int16] */, dtype="int16") /* ty=Tensor[(840), int16] */;
  %310 = reshape(%306, newshape=[13, 3, 5]) /* ty=Tensor[(13, 3, 5), float32] */;
  %311 = reshape(%307, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %312 = reshape(%308, newshape=[99]) /* ty=Tensor[(99), uint64] */;
  %313 = reshape(%309, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %314 = @func_6610(%310, %311, %312, %313) /* ty=(Tensor[(576), uint8], Tensor[(98), float64], Tensor[(576), uint8], Tensor[(99), uint64], Tensor[(840), int16], Tensor[(144), float32], Tensor[(13, 3, 5), float32]) */;
  %315 = cast(%var_9112, dtype="float64") /* ty=Tensor[(352), float64] */;
  %316 = reshape(%315, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %317 = @func_262(%316) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) */;
  %318 = bitwise_and(%304, %305) /* ty=Tensor[(3, 10, 4), uint32] */;
  %319 = %314.1;
  %320 = %317.1;
  (%318, %319, meta[relay.Constant][20] /* ty=Tensor[(195), float32] */, %var_9107, meta[relay.Constant][21] /* ty=Tensor[(11, 9), uint64] */, meta[relay.Constant][22] /* ty=Tensor[(840), int16] */, %320, %var_9112)
}

def @func_6540(%var_6538: Tensor[(15, 6, 16), float32]) -> (Tensor[(15, 1, 16), float32], Tensor[(15, 6, 16), bool], Tensor[(10, 5, 10), float64], int16) {
  @func_6537(%var_6538) /* ty=(Tensor[(15, 1, 16), float32], Tensor[(15, 6, 16), bool], Tensor[(10, 5, 10), float64], int16) */
}

def @func_7705(%var_7689: Tensor[(14, 6, 8), int8]) -> Tensor[(14, 6, 8), uint16] {
  %321 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 6, 8), int8] */, dtype="bool") /* ty=Tensor[(14, 6, 8), bool] */;
  %322 = shape_of(%var_7689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%var_7689, dtype="bool") /* ty=Tensor[(14, 6, 8), bool] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %325 = less_equal(%323, %324) /* ty=Tensor[(14, 6, 8), bool] */;
  %326 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 6, 8), int8] */, dtype="uint16") /* ty=Tensor[(14, 6, 8), uint16] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="uint16") /* ty=Tensor[(14, 6, 8), uint16] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%328, %329) /* ty=Tensor[(14, 6, 8), uint16] */
}

def @func_2382(%var_2376: Tensor[(6, 12, 8), uint8], %var_2377: Tensor[(6, 12, 8), uint8], %var_2378: Tensor[(99), uint64], %var_2379: Tensor[(840), int16], %var_2380: Tensor[(108, 1), int16], %var_2381: Tensor[(208), float32]) -> (Tensor[(6, 6, 3), bool], Tensor[(99), uint64], Tensor[(108, 840), uint8], Tensor[(6, 12, 8), bool], Tensor[(8, 2, 13), float32], Tensor[(208), float32]) {
  @func_2374(%var_2376, %var_2377, %var_2378, %var_2379, %var_2380, %var_2381) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(99), uint64], Tensor[(108, 840), uint8], Tensor[(6, 12, 8), bool], Tensor[(8, 2, 13), float32], Tensor[(208), float32]) */
}

def @func_5820(%var_5818: Tensor[(44), float64]) -> (Tensor[(4, 8, 5), float64], Tensor[(10, 15, 9), float32], Tensor[(1350, 1), float32], Tensor[(44), float64]) {
  @func_5817(%var_5818) /* ty=(Tensor[(4, 8, 5), float64], Tensor[(10, 15, 9), float32], Tensor[(1350, 1), float32], Tensor[(44), float64]) */
}

def @func_5880(%var_5851: Tensor[(352, 1), float64]) -> (Tensor[(2, 7, 8), bool], Tensor[(352, 1), float64], Tensor[(4, 8, 11), float32], float32, Tensor[(840, 1), int16]) {
  %330 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(2, 7, 8), bool] */;
  %331 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(2, 7, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(2, 7, 8), bool] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %334 = cast(%var_5851, dtype="float64") /* ty=Tensor[(352, 1), float64] */;
  %335 = reshape(%334, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %336 = @func_262(%335) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) */;
  %337 = %336.0;
  %338 = cast(%337, dtype="float32") /* ty=Tensor[(4, 8, 11), float32] */;
  %339 = cast(meta[relay.Constant][26] /* ty=Tensor[(840, 1), int16] */, dtype="int16") /* ty=Tensor[(840, 1), int16] */;
  %340 = cast(meta[relay.Constant][26] /* ty=Tensor[(840, 1), int16] */, dtype="int16") /* ty=Tensor[(840, 1), int16] */;
  %341 = reshape(%339, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int16] */;
  %342 = reshape(%340, newshape=[5, 12, 14]) /* ty=Tensor[(5, 12, 14), int16] */;
  %343 = @func_348(%341, %342) /* ty=(Tensor[(5, 12, 14), int16], Tensor[(7, 15, 2), bool], float32) */;
  %344 = logical_or(%332, %333) /* ty=Tensor[(2, 7, 8), bool] */;
  %345 = log10(%338) /* ty=Tensor[(4, 8, 11), float32] */;
  %346 = %343.2;
  (%344, %var_5851, %345, %346, meta[relay.Constant][26] /* ty=Tensor[(840, 1), int16] */)
}

def @func_4808(%var_4806: Tensor[(3, 6, 12), float32], %var_4807: Tensor[(3, 6, 12), float32]) -> (Tensor[(3, 6, 12), float32],) {
  %352 = fn (%var_4792: Tensor[(3, 6, 12), float32], %var_4793: Tensor[(3, 6, 12), float32]) -> (Tensor[(3, 6, 12), float32],) {
    %347 = cast(%var_4793, dtype="float32") /* ty=Tensor[(3, 6, 12), float32] */;
    %348 = shape_of(%var_4792, dtype="int32") /* ty=Tensor[(3), int32] */;
    %349 = cast(%var_4792, dtype="float32") /* ty=Tensor[(3, 6, 12), float32] */;
    %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %351 = power(%349, %350) /* ty=Tensor[(3, 6, 12), float32] */;
    (%351,)
  };
  %352(%var_4806, %var_4807) /* ty=(Tensor[(3, 6, 12), float32],) */
}

def @func_8880(%var_8873: int32) -> (Tensor[(16, 1, 13), bool],) {
  %353 = cast(%var_8873, dtype="bool") /* ty=bool */;
  %354 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 1, 13), int32] */, dtype="bool") /* ty=Tensor[(16, 1, 13), bool] */;
  %355 = less_equal(%353, %354) /* ty=Tensor[(16, 1, 13), bool] */;
  (%355,)
}

def @func_8883(%var_8881: int32) -> (Tensor[(16, 1, 13), bool],) {
  @func_8880(%var_8881) /* ty=(Tensor[(16, 1, 13), bool],) */
}

def @func_2976(%var_2938: Tensor[(10, 15, 9), float32], %var_2965: Tensor[(10, 15, 9), float32], %var_2970: Tensor[(44), float64]) -> (Tensor[(10, 15, 9), float64], Tensor[(10, 15, 9), float32], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) {
  %356 = cast(%var_2938, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
  %357 = sinh(%356) /* ty=Tensor[(10, 15, 9), float32] */;
  %358 = cast(%var_2938, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
  %359 = acos(%358) /* ty=Tensor[(10, 15, 9), float32] */;
  %360 = cast(%359, dtype="uint32") /* ty=Tensor[(10, 15, 9), uint32] */;
  %361 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%357, dtype="uint32") /* ty=Tensor[(10, 15, 9), uint32] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %364 = bitwise_xor(%362, %363) /* ty=Tensor[(10, 15, 9), uint32] */;
  %365 = cast(%364, dtype="float64") /* ty=Tensor[(10, 15, 9), float64] */;
  %366 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%357, dtype="float64") /* ty=Tensor[(10, 15, 9), float64] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %369 = cast(%var_2965, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
  %370 = shape_of(%var_2938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%var_2938, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %373 = cast(%var_2970, dtype="float64") /* ty=Tensor[(44), float64] */;
  %374 = reshape(%373, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), float64] */;
  %375 = @func_2002(%374) /* ty=(Tensor[(4, 11, 1), float64],) */;
  %376 = floor_mod(%367, %368) /* ty=Tensor[(10, 15, 9), float64] */;
  %377 = divide(%371, %372) /* ty=Tensor[(10, 15, 9), float32] */;
  %378 = %375.0;
  (%376, %377, %378, %var_2970)
}

def @func_8957() -> (Tensor[(3, 10, 4), uint32], Tensor[(3, 10, 4), float32], Tensor[(3, 10, 4), float32]) {
  %392 = fn () -> (Tensor[(3, 10, 4), uint32], Tensor[(3, 10, 4), float32], Tensor[(3, 10, 4), float32]) {
    %379 = @func_8918() /* ty=(Tensor[(3, 10, 4), float32],) */;
    %380 = %379.0;
    %381 = cast(%380, dtype="float64") /* ty=Tensor[(3, 10, 4), float64] */;
    %382 = sin(%381) /* ty=Tensor[(3, 10, 4), float64] */;
    %383 = cast(%380, dtype="uint32") /* ty=Tensor[(3, 10, 4), uint32] */;
    %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
    %385 = cast(%382, dtype="uint32") /* ty=Tensor[(3, 10, 4), uint32] */;
    %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %387 = cast(%380, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
    %388 = @func_8670() /* ty=(Tensor[(3, 10, 4), float32],) */;
    %389 = add(%385, %386) /* ty=Tensor[(3, 10, 4), uint32] */;
    %390 = log2(%387) /* ty=Tensor[(3, 10, 4), float32] */;
    %391 = %388.0;
    (%389, %390, %391)
  };
  %392() /* ty=(Tensor[(3, 10, 4), uint32], Tensor[(3, 10, 4), float32], Tensor[(3, 10, 4), float32]) */
}

def @func_5601(%var_5584: Tensor[(7, 4, 6), float64], %var_5585: Tensor[(7, 4, 6), float64]) -> (Tensor[(7, 4, 6), float64],) {
  %393 = cast(%var_5585, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
  %394 = shape_of(%var_5584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%var_5584, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %397 = power(%395, %396) /* ty=Tensor[(7, 4, 6), float64] */;
  (%397,)
}

def @func_5817(%var_5787: Tensor[(44), float64]) -> (Tensor[(4, 8, 5), float64], Tensor[(10, 15, 9), float32], Tensor[(1350, 1), float32], Tensor[(44), float64]) {
  %398 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(4, 8, 5), float64] */;
  %399 = cast(meta[relay.Constant][29] /* ty=Tensor[(1350, 1), float32] */, dtype="float32") /* ty=Tensor[(1350, 1), float32] */;
  %400 = cast(meta[relay.Constant][29] /* ty=Tensor[(1350, 1), float32] */, dtype="float32") /* ty=Tensor[(1350, 1), float32] */;
  %401 = cast(%var_5787, dtype="float64") /* ty=Tensor[(44), float64] */;
  %402 = reshape(%399, newshape=[10, 15, 9]) /* ty=Tensor[(10, 15, 9), float32] */;
  %403 = reshape(%400, newshape=[10, 15, 9]) /* ty=Tensor[(10, 15, 9), float32] */;
  %404 = reshape(%401, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %405 = @func_2976(%402, %403, %404) /* ty=(Tensor[(10, 15, 9), float64], Tensor[(10, 15, 9), float32], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) */;
  %406 = tan(%398) /* ty=Tensor[(4, 8, 5), float64] */;
  %407 = %405.1;
  (%406, %407, meta[relay.Constant][29] /* ty=Tensor[(1350, 1), float32] */, %var_5787)
}

def @func_5605(%var_5603: Tensor[(7, 4, 6), float64], %var_5604: Tensor[(7, 4, 6), float64]) -> (Tensor[(7, 4, 6), float64],) {
  @func_5601(%var_5603, %var_5604) /* ty=(Tensor[(7, 4, 6), float64],) */
}

def @func_7684(%var_7673: Tensor[(11, 8, 1), float32]) -> (Tensor[(11, 8, 1), float32],) {
  %408 = cast(%var_7673, dtype="float32") /* ty=Tensor[(11, 8, 1), float32] */;
  %409 = sin(%408) /* ty=Tensor[(11, 8, 1), float32] */;
  (%409,)
}

def @func_8919() -> (Tensor[(3, 10, 4), float32],) {
  %412 = fn () -> (Tensor[(3, 10, 4), float32],) {
    %410 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
    %411 = %410.0;
    (%411,)
  };
  %412() /* ty=(Tensor[(3, 10, 4), float32],) */
}

def @func_1569(%var_1529: Tensor[(1, 8, 4), uint16], %var_1530: Tensor[(3, 8, 4), uint16], %var_1555: Tensor[(420, 2), int16]) -> (Tensor[(3, 8, 4), bool], Tensor[(6, 6, 3), bool], Tensor[(108), int16], Tensor[(7, 15, 2), bool], Tensor[(1430), uint32], Tensor[(99), uint64], Tensor[(420, 2), bool]) {
  %413 = cast(%var_1529, dtype="bool") /* ty=Tensor[(1, 8, 4), bool] */;
  %414 = cast(%var_1530, dtype="bool") /* ty=Tensor[(3, 8, 4), bool] */;
  %415 = cast(meta[relay.Constant][30] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %416 = cast(meta[relay.Constant][30] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %417 = reshape(%415, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %418 = reshape(%416, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %419 = @func_297(%417, %418) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */;
  %420 = %419.0;
  %421 = cast(%420, dtype="int16") /* ty=Tensor[(6, 6, 3), int16] */;
  %422 = cast(meta[relay.Constant][30] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %423 = reshape(%421, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %424 = reshape(%422, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %425 = @func_297(%423, %424) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */;
  %426 = cast(meta[relay.Constant][31] /* ty=Tensor[(99), uint64] */, dtype="uint64") /* ty=Tensor[(99), uint64] */;
  %427 = cast(meta[relay.Constant][31] /* ty=Tensor[(99), uint64] */, dtype="uint64") /* ty=Tensor[(99), uint64] */;
  %428 = cast(%var_1555, dtype="int16") /* ty=Tensor[(420, 2), int16] */;
  %429 = cast(meta[relay.Constant][30] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %430 = reshape(%426, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), uint64] */;
  %431 = reshape(%427, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), uint64] */;
  %432 = reshape(%428, newshape=[840]) /* ty=Tensor[(840), int16] */;
  %433 = reshape(%429, newshape=[54, 2]) /* ty=Tensor[(54, 2), int16] */;
  %434 = @func_620(%430, %431, %432, %433) /* ty=(Tensor[(11, 3, 3), uint64], float32, Tensor[(840), int16], Tensor[(10, 11, 13), uint32], Tensor[(1430), uint32], Tensor[(6, 6, 3), bool], Tensor[(54, 2), int16], float32) */;
  %435 = cast(%var_1555, dtype="float32") /* ty=Tensor[(420, 2), float32] */;
  %436 = acos(%435) /* ty=Tensor[(420, 2), float32] */;
  %437 = cast(%var_1555, dtype="bool") /* ty=Tensor[(420, 2), bool] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(2), int32] */;
  %439 = cast(%436, dtype="bool") /* ty=Tensor[(420, 2), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %441 = equal(%413, %414) /* ty=Tensor[(3, 8, 4), bool] */;
  %442 = %425.1;
  %443 = %434.4;
  %444 = not_equal(%439, %440) /* ty=Tensor[(420, 2), bool] */;
  (%441, %420, meta[relay.Constant][30] /* ty=Tensor[(108), int16] */, %442, %443, meta[relay.Constant][31] /* ty=Tensor[(99), uint64] */, %444)
}

def @func_9415(%var_9411: Tensor[(392), uint32], %var_9412: Tensor[(208), float32], %var_9413: Tensor[(576), uint8], %var_9414: Tensor[(840), int16]) -> (Tensor[(3, 10, 4), float32], Tensor[(1430), uint32], Tensor[(12, 12, 11), float64], Tensor[(2520, 1), int8], Tensor[(7, 14, 4), uint32], Tensor[(392), uint32], Tensor[(8, 2, 13), float32], Tensor[(208), float32], Tensor[(840), int16], Tensor[(576), uint8], Tensor[(99), uint64], Tensor[(840), int16], Tensor[(144), float32], Tensor[(6, 18), float64], Tensor[(10, 11, 13), float32]) {
  %484 = fn (%var_9355: Tensor[(392), uint32], %var_9360: Tensor[(208), float32], %var_9366: Tensor[(576), uint8], %var_9368: Tensor[(840), int16]) -> (Tensor[(3, 10, 4), float32], Tensor[(1430), uint32], Tensor[(12, 12, 11), float64], Tensor[(2520, 1), int8], Tensor[(7, 14, 4), uint32], Tensor[(392), uint32], Tensor[(8, 2, 13), float32], Tensor[(208), float32], Tensor[(840), int16], Tensor[(576), uint8], Tensor[(99), uint64], Tensor[(840), int16], Tensor[(144), float32], Tensor[(6, 18), float64], Tensor[(10, 11, 13), float32]) {
    %445 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
    %446 = cast(meta[relay.Constant][33] /* ty=Tensor[(2520, 1), int8] */, dtype="int8") /* ty=Tensor[(2520, 1), int8] */;
    %447 = reshape(%446, newshape=[12, 15, 14]) /* ty=Tensor[(12, 15, 14), int8] */;
    %448 = @func_6972(%447) /* ty=(Tensor[(12, 15, 14), bool], Tensor[(12, 12, 11), float64], Tensor[(1584), float64]) */;
    %449 = cast(%var_9355, dtype="uint32") /* ty=Tensor[(392), uint32] */;
    %450 = reshape(%449, newshape=[7, 14, 4]) /* ty=Tensor[(7, 14, 4), uint32] */;
    %451 = @func_2830(%450) /* ty=(Tensor[(7, 14, 4), uint32],) */;
    %452 = cast(%var_9360, dtype="float32") /* ty=Tensor[(208), float32] */;
    %453 = reshape(%452, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float32] */;
    %454 = @func_2125(%453) /* ty=(Tensor[(8, 2, 13), float32],) */;
    %455 = cast(%var_9366, dtype="uint8") /* ty=Tensor[(576), uint8] */;
    %456 = cast(meta[relay.Constant][34] /* ty=Tensor[(99), uint64] */, dtype="uint64") /* ty=Tensor[(99), uint64] */;
    %457 = cast(%var_9368, dtype="int16") /* ty=Tensor[(840), int16] */;
    %458 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 18), int16] */, dtype="int16") /* ty=Tensor[(6, 18), int16] */;
    %459 = cast(meta[relay.Constant][36] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %460 = reshape(%455, newshape=[576]) /* ty=Tensor[(576), uint8] */;
    %461 = reshape(%456, newshape=[99, 1]) /* ty=Tensor[(99, 1), uint64] */;
    %462 = reshape(%457, newshape=[840]) /* ty=Tensor[(840), int16] */;
    %463 = reshape(%458, newshape=[54, 2]) /* ty=Tensor[(54, 2), int16] */;
    %464 = reshape(%459, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %465 = @func_3809(%460, %461, %462, %463, %464) /* ty=(Tensor[(5, 2, 12), bool], Tensor[(6, 6, 3), bool], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(54, 2), int16], Tensor[(208), float32], Tensor[(352), float64], Tensor[(144), float32], Tensor[(352), float64], Tensor[(10, 15, 9), float32], Tensor[(1350), float32], Tensor[(44), float64], Tensor[(4, 11, 1), float64]) */;
    %466 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 18), int16] */, dtype="float64") /* ty=Tensor[(6, 18), float64] */;
    %467 = cast(meta[relay.Constant][32] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
    %468 = cast(meta[relay.Constant][32] /* ty=Tensor[(1430), uint32] */, dtype="uint32") /* ty=Tensor[(1430), uint32] */;
    %469 = reshape(%467, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
    %470 = reshape(%468, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), uint32] */;
    %471 = @func_542(%469, %470) /* ty=Tensor[(10, 11, 13), uint32] */;
    %472 = cast(%471, dtype="float32") /* ty=Tensor[(10, 11, 13), float32] */;
    %473 = sigmoid(%472) /* ty=Tensor[(10, 11, 13), float32] */;
    %474 = cast(%473, dtype="float64") /* ty=Tensor[(10, 11, 13), float64] */;
    %475 = asinh(%474) /* ty=Tensor[(10, 11, 13), float64] */;
    %476 = cast(%475, dtype="float32") /* ty=Tensor[(10, 11, 13), float32] */;
    %477 = %445.0;
    %478 = %448.1;
    %479 = %451.0;
    %480 = %454.0;
    %481 = %465.4;
    %482 = log(%466) /* ty=Tensor[(6, 18), float64] */;
    %483 = atan(%476) /* ty=Tensor[(10, 11, 13), float32] */;
    (%477, meta[relay.Constant][32] /* ty=Tensor[(1430), uint32] */, %478, meta[relay.Constant][33] /* ty=Tensor[(2520, 1), int8] */, %479, %var_9355, %480, %var_9360, %481, %var_9366, meta[relay.Constant][34] /* ty=Tensor[(99), uint64] */, %var_9368, meta[relay.Constant][36] /* ty=Tensor[(144), float32] */, %482, %483)
  };
  %484(%var_9411, %var_9412, %var_9413, %var_9414) /* ty=(Tensor[(3, 10, 4), float32], Tensor[(1430), uint32], Tensor[(12, 12, 11), float64], Tensor[(2520, 1), int8], Tensor[(7, 14, 4), uint32], Tensor[(392), uint32], Tensor[(8, 2, 13), float32], Tensor[(208), float32], Tensor[(840), int16], Tensor[(576), uint8], Tensor[(99), uint64], Tensor[(840), int16], Tensor[(144), float32], Tensor[(6, 18), float64], Tensor[(10, 11, 13), float32]) */
}

def @func_2125(%var_2119: Tensor[(8, 2, 13), float32]) -> (Tensor[(8, 2, 13), float32],) {
  %485 = cast(%var_2119, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
  %486 = log10(%485) /* ty=Tensor[(8, 2, 13), float32] */;
  (%486,)
}

def @func_8091(%var_8086: Tensor[(5, 10, 14), float64], %var_8087: Tensor[(5, 10, 14), float64]) -> Tensor[(5, 10, 14), float64] {
  %487 = cast(%var_8087, dtype="float64") /* ty=Tensor[(5, 10, 14), float64] */;
  %488 = shape_of(%var_8086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%var_8086, dtype="float64") /* ty=Tensor[(5, 10, 14), float64] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%489, %490) /* ty=Tensor[(5, 10, 14), float64] */
}

def @func_3815(%var_3810: Tensor[(576), uint8], %var_3811: Tensor[(99, 1), uint64], %var_3812: Tensor[(840), int16], %var_3813: Tensor[(54, 2), int16], %var_3814: Tensor[(144), float32]) -> (Tensor[(5, 2, 12), bool], Tensor[(6, 6, 3), bool], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(54, 2), int16], Tensor[(208), float32], Tensor[(352), float64], Tensor[(144), float32], Tensor[(352), float64], Tensor[(10, 15, 9), float32], Tensor[(1350), float32], Tensor[(44), float64], Tensor[(4, 11, 1), float64]) {
  %537 = fn (%var_3780: Tensor[(576), uint8], %var_3781: Tensor[(99, 1), uint64], %var_3782: Tensor[(840), int16], %var_3783: Tensor[(54, 2), int16], %var_3792: Tensor[(144), float32]) -> (Tensor[(5, 2, 12), bool], Tensor[(6, 6, 3), bool], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(54, 2), int16], Tensor[(208), float32], Tensor[(352), float64], Tensor[(144), float32], Tensor[(352), float64], Tensor[(10, 15, 9), float32], Tensor[(1350), float32], Tensor[(44), float64], Tensor[(4, 11, 1), float64]) {
    %491 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(5, 2, 12), float32] */;
    %492 = sigmoid(%491) /* ty=Tensor[(5, 2, 12), float32] */;
    %493 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 2, 12), float32] */, dtype="uint16") /* ty=Tensor[(5, 2, 12), uint16] */;
    %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
    %495 = cast(%492, dtype="uint16") /* ty=Tensor[(5, 2, 12), uint16] */;
    %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %497 = bitwise_or(%495, %496) /* ty=Tensor[(5, 2, 12), uint16] */;
    %498 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 2, 12), float32] */, dtype="bool") /* ty=Tensor[(5, 2, 12), bool] */;
    %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
    %500 = cast(%497, dtype="bool") /* ty=Tensor[(5, 2, 12), bool] */;
    %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %502 = cast(%var_3780, dtype="uint8") /* ty=Tensor[(576), uint8] */;
    %503 = cast(%var_3780, dtype="uint8") /* ty=Tensor[(576), uint8] */;
    %504 = cast(%var_3781, dtype="uint64") /* ty=Tensor[(99, 1), uint64] */;
    %505 = cast(%var_3782, dtype="int16") /* ty=Tensor[(840), int16] */;
    %506 = cast(%var_3783, dtype="int16") /* ty=Tensor[(54, 2), int16] */;
    %507 = cast(meta[relay.Constant][38] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
    %508 = reshape(%502, newshape=[6, 12, 8]) /* ty=Tensor[(6, 12, 8), uint8] */;
    %509 = reshape(%503, newshape=[6, 12, 8]) /* ty=Tensor[(6, 12, 8), uint8] */;
    %510 = reshape(%504, newshape=[99]) /* ty=Tensor[(99), uint64] */;
    %511 = reshape(%505, newshape=[840]) /* ty=Tensor[(840), int16] */;
    %512 = reshape(%506, newshape=[108, 1]) /* ty=Tensor[(108, 1), int16] */;
    %513 = reshape(%507, newshape=[208]) /* ty=Tensor[(208), float32] */;
    %514 = @func_2374(%508, %509, %510, %511, %512, %513) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(99), uint64], Tensor[(108, 840), uint8], Tensor[(6, 12, 8), bool], Tensor[(8, 2, 13), float32], Tensor[(208), float32]) */;
    %515 = cast(%var_3792, dtype="float32") /* ty=Tensor[(144), float32] */;
    %516 = cast(%var_3792, dtype="float32") /* ty=Tensor[(144), float32] */;
    %517 = cast(meta[relay.Constant][39] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
    %518 = reshape(%515, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), float32] */;
    %519 = reshape(%516, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), float32] */;
    %520 = reshape(%517, newshape=[352]) /* ty=Tensor[(352), float64] */;
    %521 = @func_3520(%518, %519, %520) /* ty=(Tensor[(8, 2, 13), float32], Tensor[(208), float32], Tensor[(7, 15, 2), bool], Tensor[(352), float64], Tensor[(2, 8, 9), float64], Tensor[(2, 8, 9), uint16]) */;
    %522 = cast(meta[relay.Constant][40] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
    %523 = cast(meta[relay.Constant][40] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
    %524 = cast(meta[relay.Constant][41] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
    %525 = reshape(%522, newshape=[10, 15, 9]) /* ty=Tensor[(10, 15, 9), float32] */;
    %526 = reshape(%523, newshape=[10, 15, 9]) /* ty=Tensor[(10, 15, 9), float32] */;
    %527 = reshape(%524, newshape=[44]) /* ty=Tensor[(44), float64] */;
    %528 = @func_2976(%525, %526, %527) /* ty=(Tensor[(10, 15, 9), float64], Tensor[(10, 15, 9), float32], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) */;
    %529 = cast(meta[relay.Constant][41] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
    %530 = reshape(%529, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), float64] */;
    %531 = @func_2002(%530) /* ty=(Tensor[(4, 11, 1), float64],) */;
    %532 = less(%500, %501) /* ty=Tensor[(5, 2, 12), bool] */;
    %533 = %514.0;
    %534 = %521.3;
    %535 = %528.1;
    %536 = %531.0;
    (%532, %533, %var_3780, %var_3781, %var_3782, %var_3783, meta[relay.Constant][38] /* ty=Tensor[(208), float32] */, %534, %var_3792, meta[relay.Constant][39] /* ty=Tensor[(352), float64] */, %535, meta[relay.Constant][40] /* ty=Tensor[(1350), float32] */, meta[relay.Constant][41] /* ty=Tensor[(44), float64] */, %536)
  };
  %537(%var_3810, %var_3811, %var_3812, %var_3813, %var_3814) /* ty=(Tensor[(5, 2, 12), bool], Tensor[(6, 6, 3), bool], Tensor[(576), uint8], Tensor[(99, 1), uint64], Tensor[(840), int16], Tensor[(54, 2), int16], Tensor[(208), float32], Tensor[(352), float64], Tensor[(144), float32], Tensor[(352), float64], Tensor[(10, 15, 9), float32], Tensor[(1350), float32], Tensor[(44), float64], Tensor[(4, 11, 1), float64]) */
}

def @func_2832(%var_2831: Tensor[(7, 14, 4), uint32]) -> (Tensor[(7, 14, 4), uint32],) {
  %543 = fn (%var_2819: Tensor[(7, 14, 4), uint32]) -> (Tensor[(7, 14, 4), uint32],) {
    %538 = cast(meta[relay.Constant][42] /* ty=Tensor[(7, 14, 4), uint32] */, dtype="uint32") /* ty=Tensor[(7, 14, 4), uint32] */;
    %539 = shape_of(%var_2819, dtype="int32") /* ty=Tensor[(3), int32] */;
    %540 = cast(%var_2819, dtype="uint32") /* ty=Tensor[(7, 14, 4), uint32] */;
    %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %542 = logical_xor(%540, %541) /* ty=Tensor[(7, 14, 4), uint32] */;
    (%542,)
  };
  %543(%var_2831) /* ty=(Tensor[(7, 14, 4), uint32],) */
}

def @func_545(%var_543: Tensor[(10, 11, 13), uint32], %var_544: Tensor[(10, 11, 13), uint32]) -> Tensor[(10, 11, 13), uint32] {
  %548 = fn (%var_536: Tensor[(10, 11, 13), uint32], %var_537: Tensor[(10, 11, 13), uint32]) -> Tensor[(10, 11, 13), uint32] {
    %544 = cast(%var_537, dtype="uint32") /* ty=Tensor[(10, 11, 13), uint32] */;
    %545 = shape_of(%var_536, dtype="int32") /* ty=Tensor[(3), int32] */;
    %546 = cast(%var_536, dtype="uint32") /* ty=Tensor[(10, 11, 13), uint32] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    logical_xor(%546, %547) /* ty=Tensor[(10, 11, 13), uint32] */
  };
  %548(%var_543, %var_544) /* ty=Tensor[(10, 11, 13), uint32] */
}

def @func_9050() -> (Tensor[(3, 10, 4), float32],) {
  %549 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
  %550 = %549.0;
  (%550,)
}

def @func_7763(%var_7739: Tensor[(968), float64], %var_7751: Tensor[(108), int16]) -> (Tensor[(9, 6, 13), float64], Tensor[(8, 11, 11), float64], Tensor[(968), float64], Tensor[(?, 10, 3), uint32], Tensor[(1, 30), float32], Tensor[(6, 6, 3), bool], Tensor[(108), int16]) {
  %551 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 6, 13), float64] */;
  %552 = cast(%var_7739, dtype="float64") /* ty=Tensor[(968), float64] */;
  %553 = reshape(%552, newshape=[8, 11, 11]) /* ty=Tensor[(8, 11, 11), float64] */;
  %554 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 30), float32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %555 = reshape(%554, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), float32] */;
  %556 = @func_3994(%555) /* ty=(Tensor[(?, 10, 3), uint32],) */;
  %557 = cast(%var_7751, dtype="int16") /* ty=Tensor[(108), int16] */;
  %558 = cast(%var_7751, dtype="int16") /* ty=Tensor[(108), int16] */;
  %559 = reshape(%557, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %560 = reshape(%558, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), int16] */;
  %561 = @func_297(%559, %560) /* ty=(Tensor[(6, 6, 3), bool], Tensor[(7, 15, 2), bool], float32) */;
  %562 = sin(%551) /* ty=Tensor[(9, 6, 13), float64] */;
  %563 = @func_5730(%553) /* ty=Tensor[(8, 11, 11), float64] */;
  %564 = %556.0;
  %565 = %561.0;
  (%562, %563, %var_7739, %564, meta[relay.Constant][44] /* ty=Tensor[(1, 30), float32] */, %565, %var_7751)
}

def @func_8703() -> Tensor[(3, 10, 4), float32] {
  %567 = fn () -> Tensor[(3, 10, 4), float32] {
    %566 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
    %566.0
  };
  %567() /* ty=Tensor[(3, 10, 4), float32] */
}

def @func_5344(%var_5343: int16) -> (Tensor[(10, 5, 10), int16], Tensor[(10, 5, 10), float64]) {
  %573 = fn (%var_5321: int16) -> (Tensor[(10, 5, 10), int16], Tensor[(10, 5, 10), float64]) {
    %568 = cast(%var_5321, dtype="int16") /* ty=int16 */;
    %569 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 5, 10), int16] */, dtype="int16") /* ty=Tensor[(10, 5, 10), int16] */;
    %570 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 5, 10), int16] */, dtype="float64") /* ty=Tensor[(10, 5, 10), float64] */;
    %571 = left_shift(%568, %569) /* ty=Tensor[(10, 5, 10), int16] */;
    %572 = exp(%570) /* ty=Tensor[(10, 5, 10), float64] */;
    (%571, %572)
  };
  %573(%var_5343) /* ty=(Tensor[(10, 5, 10), int16], Tensor[(10, 5, 10), float64]) */
}

def @func_8861() -> Tensor[(3, 10, 4), float32] {
  @func_8859() /* ty=Tensor[(3, 10, 4), float32] */
}

def @func_9119(%var_9117: Tensor[(14, 7), float64], %var_9118: Tensor[(352), float64]) -> (Tensor[(3, 10, 4), uint32], Tensor[(98), float64], Tensor[(195), float32], Tensor[(14, 7), float64], Tensor[(11, 9), uint64], Tensor[(840), int16], Tensor[(7, 15, 2), bool], Tensor[(352), float64]) {
  @func_9115(%var_9117, %var_9118) /* ty=(Tensor[(3, 10, 4), uint32], Tensor[(98), float64], Tensor[(195), float32], Tensor[(14, 7), float64], Tensor[(11, 9), uint64], Tensor[(840), int16], Tensor[(7, 15, 2), bool], Tensor[(352), float64]) */
}

def @func_7767(%var_7765: Tensor[(968), float64], %var_7766: Tensor[(108), int16]) -> (Tensor[(9, 6, 13), float64], Tensor[(8, 11, 11), float64], Tensor[(968), float64], Tensor[(?, 10, 3), uint32], Tensor[(1, 30), float32], Tensor[(6, 6, 3), bool], Tensor[(108), int16]) {
  @func_7763(%var_7765, %var_7766) /* ty=(Tensor[(9, 6, 13), float64], Tensor[(8, 11, 11), float64], Tensor[(968), float64], Tensor[(?, 10, 3), uint32], Tensor[(1, 30), float32], Tensor[(6, 6, 3), bool], Tensor[(108), int16]) */
}

def @func_6720(%var_6699: Tensor[(12, 4, 8), float32], %var_6700: Tensor[(12, 4, 8), float32]) -> (Tensor[(12, 4, 8), float32], Tensor[(1350, 1), float32], Tensor[(44), float64]) {
  %574 = cast(%var_6700, dtype="float32") /* ty=Tensor[(12, 4, 8), float32] */;
  %575 = shape_of(%var_6699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%var_6699, dtype="float32") /* ty=Tensor[(12, 4, 8), float32] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %578 = cast(meta[relay.Constant][46] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %579 = reshape(%578, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %580 = @func_5817(%579) /* ty=(Tensor[(4, 8, 5), float64], Tensor[(10, 15, 9), float32], Tensor[(1350, 1), float32], Tensor[(44), float64]) */;
  %581 = mod(%576, %577) /* ty=Tensor[(12, 4, 8), float32] */;
  %582 = %580.2;
  (%581, %582, meta[relay.Constant][46] /* ty=Tensor[(44), float64] */)
}

def @func_2867(%var_2865: Tensor[(3, 13, 2), float64]) -> (Tensor[(3, 13, 2), float64], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) {
  @func_2864(%var_2865) /* ty=(Tensor[(3, 13, 2), float64], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) */
}

def @func_8095(%var_8093: Tensor[(5, 10, 14), float64], %var_8094: Tensor[(5, 10, 14), float64]) -> Tensor[(5, 10, 14), float64] {
  @func_8091(%var_8093, %var_8094) /* ty=Tensor[(5, 10, 14), float64] */
}

def @func_3997(%var_3995: Tensor[(1, 10, 3), float32]) -> (Tensor[(?, 10, 3), uint32],) {
  @func_3994(%var_3995) /* ty=(Tensor[(?, 10, 3), uint32],) */
}

def @func_4746(%var_4744: bool, %var_4745: Tensor[(1, 12, 3), bool]) -> (Tensor[(?, 12, 3), float64],) {
  %595 = fn (%var_4716: bool, %var_4717: Tensor[(1, 12, 3), bool]) -> (Tensor[(?, 12, 3), float64],) {
    %583 = cast(%var_4716, dtype="bool") /* ty=bool */;
    %584 = cast(%var_4717, dtype="bool") /* ty=Tensor[(1, 12, 3), bool] */;
    %585 = logical_or(%583, %584) /* ty=Tensor[(1, 12, 3), bool] */;
    %586 = cast(%585, dtype="float64") /* ty=Tensor[(1, 12, 3), float64] */;
    %587 = sinh(%586) /* ty=Tensor[(1, 12, 3), float64] */;
    %588 = cast(%587, dtype="float32") /* ty=Tensor[(1, 12, 3), float32] */;
    %589 = rsqrt(%588) /* ty=Tensor[(1, 12, 3), float32] */;
    %590 = cast(%589, dtype="float64") /* ty=Tensor[(1, 12, 3), float64] */;
    %591 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
    %592 = cast(%587, dtype="float64") /* ty=Tensor[(1, 12, 3), float64] */;
    %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %594 = power(%592, %593) /* ty=Tensor[(?, 12, 3), float64] */;
    (%594,)
  };
  %595(%var_4744, %var_4745) /* ty=(Tensor[(?, 12, 3), float64],) */
}

def @func_6250(%var_6246: Tensor[(15, 10, 9), uint16], %var_6247: Tensor[(15, 10, 9), uint16], %var_6248: Tensor[(168), float64], %var_6249: Tensor[(312), int64]) -> (Tensor[(15, 10, 9), uint16], Tensor[(7, 4, 6), float64], Tensor[(168), float64], Tensor[(78), float64], Tensor[(312), int64], Tensor[(78), float64]) {
  %613 = fn (%var_6227: Tensor[(15, 10, 9), uint16], %var_6228: Tensor[(15, 10, 9), uint16], %var_6237: Tensor[(168), float64], %var_6242: Tensor[(312), int64]) -> (Tensor[(15, 10, 9), uint16], Tensor[(7, 4, 6), float64], Tensor[(168), float64], Tensor[(78), float64], Tensor[(312), int64], Tensor[(78), float64]) {
    %596 = cast(%var_6228, dtype="uint16") /* ty=Tensor[(15, 10, 9), uint16] */;
    %597 = shape_of(%var_6227, dtype="int32") /* ty=Tensor[(3), int32] */;
    %598 = cast(%var_6227, dtype="uint16") /* ty=Tensor[(15, 10, 9), uint16] */;
    %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %600 = cast(%var_6237, dtype="float64") /* ty=Tensor[(168), float64] */;
    %601 = cast(%var_6237, dtype="float64") /* ty=Tensor[(168), float64] */;
    %602 = reshape(%600, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), float64] */;
    %603 = reshape(%601, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), float64] */;
    %604 = @func_5601(%602, %603) /* ty=(Tensor[(7, 4, 6), float64],) */;
    %605 = cast(%var_6242, dtype="int64") /* ty=Tensor[(312), int64] */;
    %606 = cast(meta[relay.Constant][47] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %607 = reshape(%605, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), int64] */;
    %608 = reshape(%606, newshape=[78]) /* ty=Tensor[(78), float64] */;
    %609 = @func_4654(%607, %608) /* ty=(Tensor[(3, 13, 8), int64], Tensor[(44), float64], Tensor[(78), float64]) */;
    %610 = right_shift(%598, %599) /* ty=Tensor[(15, 10, 9), uint16] */;
    %611 = %604.0;
    %612 = %609.2;
    (%610, %611, %var_6237, %612, %var_6242, meta[relay.Constant][47] /* ty=Tensor[(78), float64] */)
  };
  %613(%var_6246, %var_6247, %var_6248, %var_6249) /* ty=(Tensor[(15, 10, 9), uint16], Tensor[(7, 4, 6), float64], Tensor[(168), float64], Tensor[(78), float64], Tensor[(312), int64], Tensor[(78), float64]) */
}

def @func_9259() -> (Tensor[(3, 10, 4), float32],) {
  @func_9257() /* ty=(Tensor[(3, 10, 4), float32],) */
}

def @func_3520(%var_3448: Tensor[(2, 8, 9), float32], %var_3449: Tensor[(2, 8, 9), float32], %var_3488: Tensor[(352), float64]) -> (Tensor[(8, 2, 13), float32], Tensor[(208), float32], Tensor[(7, 15, 2), bool], Tensor[(352), float64], Tensor[(2, 8, 9), float64], Tensor[(2, 8, 9), uint16]) {
  %614 = cast(meta[relay.Constant][48] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %615 = reshape(%614, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float32] */;
  %616 = @func_2125(%615) /* ty=(Tensor[(8, 2, 13), float32],) */;
  %617 = cast(%var_3488, dtype="float64") /* ty=Tensor[(352), float64] */;
  %618 = reshape(%617, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %619 = @func_262(%618) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) */;
  %620 = cast(%var_3449, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
  %621 = shape_of(%var_3448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%var_3448, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %624 = equal(%622, %623) /* ty=Tensor[(2, 8, 9), bool] */;
  %625 = cast(%var_3449, dtype="int64") /* ty=Tensor[(2, 8, 9), int64] */;
  %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%624, dtype="int64") /* ty=Tensor[(2, 8, 9), int64] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %629 = logical_xor(%627, %628) /* ty=Tensor[(2, 8, 9), int64] */;
  %630 = cast(%629, dtype="float64") /* ty=Tensor[(2, 8, 9), float64] */;
  %631 = cast(%629, dtype="uint16") /* ty=Tensor[(2, 8, 9), uint16] */;
  %632 = shape_of(%624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%624, dtype="uint16") /* ty=Tensor[(2, 8, 9), uint16] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %635 = %616.0;
  %636 = %619.1;
  %637 = cos(%630) /* ty=Tensor[(2, 8, 9), float64] */;
  %638 = minimum(%633, %634) /* ty=Tensor[(2, 8, 9), uint16] */;
  (%635, meta[relay.Constant][48] /* ty=Tensor[(208), float32] */, %636, %var_3488, %637, %638)
}

def @func_8241(%var_8231: Tensor[(6, 13, 8), uint64]) -> Tensor[(6, 13, 8), bool] {
  %639 = cast(%var_8231, dtype="bool") /* ty=Tensor[(6, 13, 8), bool] */;
  %640 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(6, 13, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 13, 8), uint64] */, dtype="bool") /* ty=Tensor[(6, 13, 8), bool] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%641, %642) /* ty=Tensor[(6, 13, 8), bool] */
}

def @func_8671() -> (Tensor[(3, 10, 4), float32],) {
  %645 = fn () -> (Tensor[(3, 10, 4), float32],) {
    %643 = @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */;
    %644 = %643.0;
    (%644,)
  };
  %645() /* ty=(Tensor[(3, 10, 4), float32],) */
}

def @func_4137(%var_4135: Tensor[(1, 8, 1), float64], %var_4136: Tensor[(78), float64]) -> (Tensor[(?, 8, ?), bool], Tensor[(44), float64], Tensor[(78), float64]) {
  %659 = fn (%var_4086: Tensor[(1, 8, 1), float64], %var_4128: Tensor[(78), float64]) -> (Tensor[(?, 8, ?), bool], Tensor[(44), float64], Tensor[(78), float64]) {
    %646 = cast(%var_4086, dtype="float64") /* ty=Tensor[(1, 8, 1), float64] */;
    %647 = sin(%646) /* ty=Tensor[(1, 8, 1), float64] */;
    %648 = cast(%var_4086, dtype="float32") /* ty=Tensor[(1, 8, 1), float32] */;
    %649 = asinh(%648) /* ty=Tensor[(1, 8, 1), float32] */;
    %650 = cast(%649, dtype="bool") /* ty=Tensor[(1, 8, 1), bool] */;
    %651 = shape_of(%647, dtype="int32") /* ty=Tensor[(3), int32] */;
    %652 = cast(%647, dtype="bool") /* ty=Tensor[(1, 8, 1), bool] */;
    %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %654 = cast(%var_4128, dtype="float64") /* ty=Tensor[(78), float64] */;
    %655 = reshape(%654, newshape=[3, 13, 2]) /* ty=Tensor[(3, 13, 2), float64] */;
    %656 = @func_2864(%655) /* ty=(Tensor[(3, 13, 2), float64], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) */;
    %657 = logical_and(%652, %653) /* ty=Tensor[(?, 8, ?), bool] */;
    %658 = %656.2;
    (%657, %658, %var_4128)
  };
  %659(%var_4135, %var_4136) /* ty=(Tensor[(?, 8, ?), bool], Tensor[(44), float64], Tensor[(78), float64]) */
}

def @func_2864(%var_2842: Tensor[(3, 13, 2), float64]) -> (Tensor[(3, 13, 2), float64], Tensor[(4, 11, 1), float64], Tensor[(44), float64]) {
  %660 = cast(%var_2842, dtype="float64") /* ty=Tensor[(3, 13, 2), float64] */;
  %661 = cast(meta[relay.Constant][50] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %662 = reshape(%661, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), float64] */;
  %663 = @func_2002(%662) /* ty=(Tensor[(4, 11, 1), float64],) */;
  %664 = sqrt(%660) /* ty=Tensor[(3, 13, 2), float64] */;
  %665 = %663.0;
  (%664, %665, meta[relay.Constant][50] /* ty=Tensor[(44), float64] */)
}

def @func_5732(%var_5731: Tensor[(8, 11, 11), float64]) -> Tensor[(8, 11, 11), float64] {
  %667 = fn (%var_5726: Tensor[(8, 11, 11), float64]) -> Tensor[(8, 11, 11), float64] {
    %666 = cast(%var_5726, dtype="float64") /* ty=Tensor[(8, 11, 11), float64] */;
    sin(%666) /* ty=Tensor[(8, 11, 11), float64] */
  };
  %667(%var_5731) /* ty=Tensor[(8, 11, 11), float64] */
}

def @func_8656() -> (Tensor[(3, 10, 4), float32],) {
  @func_8654() /* ty=(Tensor[(3, 10, 4), float32],) */
}

def @func_7687(%var_7685: Tensor[(11, 8, 1), float32]) -> (Tensor[(11, 8, 1), float32],) {
  @func_7684(%var_7685) /* ty=(Tensor[(11, 8, 1), float32],) */
}

def @func_262(%var_249: Tensor[(4, 8, 11), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) {
  %668 = cast(%var_249, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %669 = cast(0.161778f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %670 = reshape(%669, newshape=[]) /* ty=float32 */;
  %671 = @func_35(%670) /* ty=(Tensor[(7, 15, 2), bool],) */;
  %672 = acos(%668) /* ty=Tensor[(4, 8, 11), float64] */;
  %673 = %671.0;
  (%672, %673, 0.161778f /* ty=float32 */)
}

def @func_1748(%var_1741: Tensor[(9, 4, 9), float32]) -> (Tensor[(9, 4, 9), uint64],) {
  %674 = cast(%var_1741, dtype="float32") /* ty=Tensor[(9, 4, 9), float32] */;
  %675 = sin(%674) /* ty=Tensor[(9, 4, 9), float32] */;
  %676 = cast(%675, dtype="uint64") /* ty=Tensor[(9, 4, 9), uint64] */;
  %677 = shape_of(%var_1741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%var_1741, dtype="uint64") /* ty=Tensor[(9, 4, 9), uint64] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %680 = bitwise_and(%678, %679) /* ty=Tensor[(9, 4, 9), uint64] */;
  (%680,)
}

def @func_3376(%var_3348: Tensor[(13, 2, 14), uint32]) -> Tensor[(13, 2, 14), uint32] {
  %681 = cast(%var_3348, dtype="uint32") /* ty=Tensor[(13, 2, 14), uint32] */;
  %682 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(13, 2, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(meta[relay.Constant][51] /* ty=Tensor[(13, 2, 14), uint32] */, dtype="uint32") /* ty=Tensor[(13, 2, 14), uint32] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%683, %684) /* ty=Tensor[(13, 2, 14), uint32] */
}

def @func_8654() -> (Tensor[(3, 10, 4), float32],) {
  %685 = cast(meta[relay.Constant][52] /* ty=Tensor[(3, 10, 4), float64] */, dtype="float64") /* ty=Tensor[(3, 10, 4), float64] */;
  %686 = asin(%685) /* ty=Tensor[(3, 10, 4), float64] */;
  %687 = cast(%686, dtype="float32") /* ty=Tensor[(3, 10, 4), float32] */;
  %688 = erf(%687) /* ty=Tensor[(3, 10, 4), float32] */;
  (%688,)
}

def @func_3525(%var_3522: Tensor[(2, 8, 9), float32], %var_3523: Tensor[(2, 8, 9), float32], %var_3524: Tensor[(352), float64]) -> (Tensor[(8, 2, 13), float32], Tensor[(208), float32], Tensor[(7, 15, 2), bool], Tensor[(352), float64], Tensor[(2, 8, 9), float64], Tensor[(2, 8, 9), uint16]) {
  @func_3520(%var_3522, %var_3523, %var_3524) /* ty=(Tensor[(8, 2, 13), float32], Tensor[(208), float32], Tensor[(7, 15, 2), bool], Tensor[(352), float64], Tensor[(2, 8, 9), float64], Tensor[(2, 8, 9), uint16]) */
}

def @func_8816(%var_8815: Tensor[(24, 120), bool]) -> (Tensor[(15, 14, 16), float64], Tensor[(6, 10, 13), bool], Tensor[(780), float64], Tensor[(24, 120), bool]) {
  %710 = fn (%var_8776: Tensor[(24, 120), bool]) -> (Tensor[(15, 14, 16), float64], Tensor[(6, 10, 13), bool], Tensor[(780), float64], Tensor[(24, 120), bool]) {
    %689 = cast(meta[relay.Constant][53] /* ty=Tensor[(15, 14, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 14, 16), float64] */;
    %690 = cast(meta[relay.Constant][54] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
    %691 = cast(meta[relay.Constant][54] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
    %692 = cast(meta[relay.Constant][54] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
    %693 = reshape(%690, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float64] */;
    %694 = reshape(%691, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float64] */;
    %695 = reshape(%692, newshape=[6, 10, 13]) /* ty=Tensor[(6, 10, 13), float64] */;
    %696 = @func_5237(%693, %694, %695) /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), uint16], Tensor[(6, 10, 13), bool]) */;
    %697 = cast(%var_8776, dtype="bool") /* ty=Tensor[(24, 120), bool] */;
    %698 = cast(%var_8776, dtype="bool") /* ty=Tensor[(24, 120), bool] */;
    %699 = reshape(%697, newshape=[15, 16, 12]) /* ty=Tensor[(15, 16, 12), bool] */;
    %700 = reshape(%698, newshape=[15, 16, 12]) /* ty=Tensor[(15, 16, 12), bool] */;
    %701 = @func_3199(%699, %700) /* ty=(Tensor[(15, 16, 12), bool],) */;
    %702 = %701.0;
    %703 = cast(%702, dtype="bool") /* ty=Tensor[(15, 16, 12), bool] */;
    %704 = shape_of(%var_8776, dtype="int32") /* ty=Tensor[(2), int32] */;
    %705 = cast(%var_8776, dtype="bool") /* ty=Tensor[(24, 120), bool] */;
    %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %707 = sigmoid(%689) /* ty=Tensor[(15, 14, 16), float64] */;
    %708 = %696.2;
    %709 = equal(%705, %706) /* ty=Tensor[(24, 120), bool] */;
    (%707, %708, meta[relay.Constant][54] /* ty=Tensor[(780), float64] */, %709)
  };
  %710(%var_8815) /* ty=(Tensor[(15, 14, 16), float64], Tensor[(6, 10, 13), bool], Tensor[(780), float64], Tensor[(24, 120), bool]) */
}

def @func_9434() -> Tensor[(3, 10, 4), float32] {
  @func_9432() /* ty=Tensor[(3, 10, 4), float32] */
}

def @func_5883(%var_5881: Tensor[(352, 1), float64]) -> (Tensor[(2, 7, 8), bool], Tensor[(352, 1), float64], Tensor[(4, 8, 11), float32], float32, Tensor[(840, 1), int16]) {
  @func_5880(%var_5881) /* ty=(Tensor[(2, 7, 8), bool], Tensor[(352, 1), float64], Tensor[(4, 8, 11), float32], float32, Tensor[(840, 1), int16]) */
}

def @func_7855(%var_7828: Tensor[(16, 15, 4), float64], %var_7839: Tensor[(78), float64]) -> (Tensor[(16, 15, 4), bool], Tensor[(44), float64], Tensor[(8), float64], Tensor[(78), float64], Tensor[(16, 15, 4), uint8]) {
  %711 = cast(%var_7828, dtype="float64") /* ty=Tensor[(16, 15, 4), float64] */;
  %712 = log2(%711) /* ty=Tensor[(16, 15, 4), float64] */;
  %713 = cast(%712, dtype="bool") /* ty=Tensor[(16, 15, 4), bool] */;
  %714 = shape_of(%var_7828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%var_7828, dtype="bool") /* ty=Tensor[(16, 15, 4), bool] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %717 = cast(meta[relay.Constant][55] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %718 = cast(%var_7839, dtype="float64") /* ty=Tensor[(78), float64] */;
  %719 = reshape(%717, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float64] */;
  %720 = reshape(%718, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %721 = @func_4134(%719, %720) /* ty=(Tensor[(?, 8, ?), bool], Tensor[(44), float64], Tensor[(78), float64]) */;
  %722 = cast(%var_7828, dtype="uint8") /* ty=Tensor[(16, 15, 4), uint8] */;
  %723 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%712, dtype="uint8") /* ty=Tensor[(16, 15, 4), uint8] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %726 = greater_equal(%715, %716) /* ty=Tensor[(16, 15, 4), bool] */;
  %727 = %721.1;
  %728 = left_shift(%724, %725) /* ty=Tensor[(16, 15, 4), uint8] */;
  (%726, %727, meta[relay.Constant][55] /* ty=Tensor[(8), float64] */, %var_7839, %728)
}

def @func_265(%var_263: Tensor[(4, 8, 11), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) {
  @func_262(%var_263) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 15, 2), bool], float32) */
}

def @func_4587(%var_4585: Tensor[(10, 7, 9), uint64], %var_4586: Tensor[(10, 7, 9), uint64]) -> (Tensor[(10, 7, 9), bool],) {
  @func_4583(%var_4585, %var_4586) /* ty=(Tensor[(10, 7, 9), bool],) */
}

def @func_4583(%var_4577: Tensor[(10, 7, 9), uint64], %var_4578: Tensor[(10, 7, 9), uint64]) -> (Tensor[(10, 7, 9), bool],) {
  %729 = cast(%var_4578, dtype="bool") /* ty=Tensor[(10, 7, 9), bool] */;
  %730 = shape_of(%var_4577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%var_4577, dtype="bool") /* ty=Tensor[(10, 7, 9), bool] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %733 = greater_equal(%731, %732) /* ty=Tensor[(10, 7, 9), bool] */;
  (%733,)
}

def @func_7859(%var_7857: Tensor[(16, 15, 4), float64], %var_7858: Tensor[(78), float64]) -> (Tensor[(16, 15, 4), bool], Tensor[(44), float64], Tensor[(8), float64], Tensor[(78), float64], Tensor[(16, 15, 4), uint8]) {
  @func_7855(%var_7857, %var_7858) /* ty=(Tensor[(16, 15, 4), bool], Tensor[(44), float64], Tensor[(8), float64], Tensor[(78), float64], Tensor[(16, 15, 4), uint8]) */
}

def @func_2005(%var_2003: Tensor[(4, 11, 1), float64]) -> (Tensor[(4, 11, 1), float64],) {
  @func_2002(%var_2003) /* ty=(Tensor[(4, 11, 1), float64],) */
}

def @func_3379(%var_3377: Tensor[(13, 2, 14), uint32]) -> Tensor[(13, 2, 14), uint32] {
  @func_3376(%var_3377) /* ty=Tensor[(13, 2, 14), uint32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

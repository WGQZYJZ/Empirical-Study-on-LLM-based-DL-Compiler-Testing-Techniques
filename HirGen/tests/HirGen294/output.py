import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_17 = relay.var("var_17", dtype = "float32", shape = ())#candidate|17|()|var|float32
const_18 = relay.const([[[-1.266107,1.118321],[6.100062,0.468630],[-5.030705,8.791846],[-4.963269,2.843257],[7.151368,5.767508],[7.921576,-7.289201],[-2.389507,0.665765],[4.366890,-7.811857],[7.097304,-4.415970],[6.206412,-2.734474],[-1.587106,3.705247],[-5.149635,6.393481],[-3.383668,-4.189230],[9.184756,-6.566527],[-9.356999,-7.344939]]], dtype = "float32")#candidate|18|(1, 15, 2)|const|float32
bop_19 = relay.mod(var_17.astype('float32'), const_18.astype('float32')) # shape=(1, 15, 2)
const_26 = relay.const([[[-5.777118,9.300356],[5.174998,-9.104625],[-5.130200,4.904273],[-4.255670,-4.729905],[-6.131077,6.798423],[-4.852848,5.720935],[2.716724,5.797677],[-6.273069,-8.208884],[7.501607,-5.967745],[9.548608,8.473333],[-8.704701,-8.397121],[-4.522958,-2.458306],[-4.688480,-5.971090],[3.800572,6.162913],[-5.668152,2.869221]],[[-2.550297,3.551794],[-5.832948,-7.073539],[-9.331022,2.933641],[-7.504253,7.961848],[-0.323669,-5.028097],[-1.356208,1.112261],[-6.986092,-9.368538],[4.629894,-7.878464],[8.629254,8.916087],[7.983080,-8.790720],[4.248684,-1.138684],[7.556614,3.206468],[-2.947678,-4.662534],[-1.713345,-2.247488],[7.587551,0.589109]],[[1.576720,-0.025145],[3.771440,-8.759776],[6.181074,-2.455166],[-0.851773,-6.689679],[6.593236,9.390916],[3.409394,-5.494274],[5.310545,3.049474],[2.656125,8.433681],[-9.997699,-2.054530],[5.345303,-4.049729],[1.545638,4.901694],[5.336617,8.908916],[6.753462,-6.691000],[8.560246,8.325287],[-2.111378,3.026457]],[[5.530636,-4.702377],[-2.739521,-2.056420],[4.126201,-6.030710],[0.567676,-0.538057],[1.902555,4.244263],[-2.981100,-1.989713],[-5.875313,-4.409638],[-3.337635,0.181159],[-2.515640,7.644528],[-6.809652,-2.139684],[-4.054961,-8.635971],[-8.708872,-6.249935],[-6.367598,0.224294],[-2.565308,-2.336791],[7.284049,8.202179]],[[-1.513559,3.241352],[-6.305714,3.761570],[-5.627004,-9.249300],[-3.610373,4.420501],[8.863645,9.853766],[4.587468,-9.200980],[-8.937416,7.735464],[0.757461,2.780849],[3.158289,-8.367840],[3.933675,-4.496186],[7.045471,-1.887646],[2.779185,-0.801502],[7.543045,-7.116647],[-2.357179,-2.828560],[-8.855804,-9.792060]],[[-9.844458,8.955617],[0.558275,7.543529],[-4.875577,-2.728627],[-3.917294,5.754892],[-0.024428,-2.292965],[8.722403,2.856815],[2.757173,-2.367213],[7.180420,1.213095],[-6.219471,1.922775],[-9.537867,-4.595010],[-4.854983,-5.999661],[3.616196,-3.647863],[-8.673907,-2.930881],[6.229485,2.496616],[7.949406,-2.958049]],[[7.443781,7.691853],[1.872413,7.172822],[5.022268,-7.080415],[-4.501707,5.150174],[-2.360509,-5.602871],[-9.644631,4.164608],[-1.376331,2.905055],[-8.002770,-5.890551],[8.844337,-5.426293],[-9.420352,0.467729],[9.985802,4.026279],[-8.856507,-0.895236],[-2.948826,7.633281],[6.038143,-9.376015],[-3.824858,3.352512]]], dtype = "float32")#candidate|26|(7, 15, 2)|const|float32
bop_27 = relay.less(bop_19.astype('bool'), const_26.astype('bool')) # shape=(7, 15, 2)
output = relay.Tuple([bop_27,])
output2 = relay.Tuple([bop_27,])
func_35 = relay.Function([var_17,], output)
mod['func_35'] = func_35
mod = relay.transform.InferType()(mod)
var_36 = relay.var("var_36", dtype = "float32", shape = ())#candidate|36|()|var|float32
output = func_35(var_36)
func_37 = relay.Function([var_36], output)
mutated_mod['func_37'] = func_37
mutated_mod = relay.transform.InferType()(mutated_mod)
var_249 = relay.var("var_249", dtype = "float64", shape = (4, 8, 11))#candidate|249|(4, 8, 11)|var|float64
uop_250 = relay.acos(var_249.astype('float64')) # shape=(4, 8, 11)
func_35_call = mod.get_global_var('func_35')
func_37_call = mutated_mod.get_global_var('func_37')
const_260 = relay.const(0.161778, dtype = "float32")#candidate|260|()|const|float32
call_259 = relay.TupleGetItem(func_35_call(relay.reshape(const_260.astype('float32'), [])), 0)
call_261 = relay.TupleGetItem(func_37_call(relay.reshape(const_260.astype('float32'), [])), 0)
output = relay.Tuple([uop_250,call_259,const_260,])
output2 = relay.Tuple([uop_250,call_261,const_260,])
func_262 = relay.Function([var_249,], output)
mod['func_262'] = func_262
mod = relay.transform.InferType()(mod)
mutated_mod['func_262'] = func_262
mutated_mod = relay.transform.InferType()(mutated_mod)
var_263 = relay.var("var_263", dtype = "float64", shape = (4, 8, 11))#candidate|263|(4, 8, 11)|var|float64
func_262_call = mutated_mod.get_global_var('func_262')
call_264 = func_262_call(var_263)
output = call_264
func_265 = relay.Function([var_263], output)
mutated_mod['func_265'] = func_265
mutated_mod = relay.transform.InferType()(mutated_mod)
var_276 = relay.var("var_276", dtype = "int16", shape = (6, 6, 3))#candidate|276|(6, 6, 3)|var|int16
var_277 = relay.var("var_277", dtype = "int16", shape = (6, 6, 3))#candidate|277|(6, 6, 3)|var|int16
bop_278 = relay.greater_equal(var_276.astype('bool'), relay.reshape(var_277.astype('bool'), relay.shape_of(var_276))) # shape=(6, 6, 3)
func_35_call = mod.get_global_var('func_35')
func_37_call = mutated_mod.get_global_var('func_37')
const_295 = relay.const(2.599269, dtype = "float32")#candidate|295|()|const|float32
call_294 = relay.TupleGetItem(func_35_call(relay.reshape(const_295.astype('float32'), [])), 0)
call_296 = relay.TupleGetItem(func_37_call(relay.reshape(const_295.astype('float32'), [])), 0)
output = relay.Tuple([bop_278,call_294,const_295,])
output2 = relay.Tuple([bop_278,call_296,const_295,])
func_297 = relay.Function([var_276,var_277,], output)
mod['func_297'] = func_297
mod = relay.transform.InferType()(mod)
var_298 = relay.var("var_298", dtype = "int16", shape = (6, 6, 3))#candidate|298|(6, 6, 3)|var|int16
var_299 = relay.var("var_299", dtype = "int16", shape = (6, 6, 3))#candidate|299|(6, 6, 3)|var|int16
output = func_297(var_298,var_299,)
func_300 = relay.Function([var_298,var_299,], output)
mutated_mod['func_300'] = func_300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_325 = relay.var("var_325", dtype = "int16", shape = (5, 12, 14))#candidate|325|(5, 12, 14)|var|int16
var_326 = relay.var("var_326", dtype = "int16", shape = (5, 12, 14))#candidate|326|(5, 12, 14)|var|int16
bop_327 = relay.bitwise_and(var_325.astype('int16'), relay.reshape(var_326.astype('int16'), relay.shape_of(var_325))) # shape=(5, 12, 14)
func_35_call = mod.get_global_var('func_35')
func_37_call = mutated_mod.get_global_var('func_37')
const_332 = relay.const(-5.841288, dtype = "float32")#candidate|332|()|const|float32
call_331 = relay.TupleGetItem(func_35_call(relay.reshape(const_332.astype('float32'), [])), 0)
call_333 = relay.TupleGetItem(func_37_call(relay.reshape(const_332.astype('float32'), [])), 0)
output = relay.Tuple([bop_327,call_331,const_332,])
output2 = relay.Tuple([bop_327,call_333,const_332,])
func_348 = relay.Function([var_325,var_326,], output)
mod['func_348'] = func_348
mod = relay.transform.InferType()(mod)
var_349 = relay.var("var_349", dtype = "int16", shape = (5, 12, 14))#candidate|349|(5, 12, 14)|var|int16
var_350 = relay.var("var_350", dtype = "int16", shape = (5, 12, 14))#candidate|350|(5, 12, 14)|var|int16
output = func_348(var_349,var_350,)
func_351 = relay.Function([var_349,var_350,], output)
mutated_mod['func_351'] = func_351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_536 = relay.var("var_536", dtype = "uint32", shape = (10, 11, 13))#candidate|536|(10, 11, 13)|var|uint32
var_537 = relay.var("var_537", dtype = "uint32", shape = (10, 11, 13))#candidate|537|(10, 11, 13)|var|uint32
bop_538 = relay.logical_xor(var_536.astype('uint32'), relay.reshape(var_537.astype('uint32'), relay.shape_of(var_536))) # shape=(10, 11, 13)
output = bop_538
output2 = bop_538
func_542 = relay.Function([var_536,var_537,], output)
mod['func_542'] = func_542
mod = relay.transform.InferType()(mod)
var_543 = relay.var("var_543", dtype = "uint32", shape = (10, 11, 13))#candidate|543|(10, 11, 13)|var|uint32
var_544 = relay.var("var_544", dtype = "uint32", shape = (10, 11, 13))#candidate|544|(10, 11, 13)|var|uint32
output = func_542(var_543,var_544,)
func_545 = relay.Function([var_543,var_544,], output)
mutated_mod['func_545'] = func_545
mutated_mod = relay.transform.InferType()(mutated_mod)
var_580 = relay.var("var_580", dtype = "uint64", shape = (11, 3, 3))#candidate|580|(11, 3, 3)|var|uint64
var_581 = relay.var("var_581", dtype = "uint64", shape = (11, 3, 3))#candidate|581|(11, 3, 3)|var|uint64
bop_582 = relay.subtract(var_580.astype('uint64'), relay.reshape(var_581.astype('uint64'), relay.shape_of(var_580))) # shape=(11, 3, 3)
func_348_call = mod.get_global_var('func_348')
func_351_call = mutated_mod.get_global_var('func_351')
var_604 = relay.var("var_604", dtype = "int16", shape = (840,))#candidate|604|(840,)|var|int16
call_603 = relay.TupleGetItem(func_348_call(relay.reshape(var_604.astype('int16'), [5, 12, 14]), relay.reshape(var_604.astype('int16'), [5, 12, 14]), ), 2)
call_605 = relay.TupleGetItem(func_351_call(relay.reshape(var_604.astype('int16'), [5, 12, 14]), relay.reshape(var_604.astype('int16'), [5, 12, 14]), ), 2)
func_542_call = mod.get_global_var('func_542')
func_545_call = mutated_mod.get_global_var('func_545')
const_607 = relay.const([9,3,3,7,3,1,-3,10,-10,-1,-4,-5,3,-8,-6,-8,5,6,-3,7,4,-6,10,-7,1,-9,-6,-3,-6,1,4,-6,-3,6,-5,9,-2,8,-3,10,2,10,6,5,2,4,7,6,2,3,-6,9,-1,10,4,9,3,-4,-1,-9,-6,3,-2,-3,-3,-4,-3,7,-3,-8,-8,3,-6,-10,-5,-4,-1,6,3,8,8,-5,6,-2,10,4,-7,-9,3,2,8,2,-2,-1,-8,3,10,6,9,-2,10,-8,4,-3,-9,-8,-10,6,-9,-9,9,-4,9,4,-9,-8,6,-7,-3,1,5,1,-10,-9,8,-7,-9,6,10,-5,-8,-10,-9,7,7,-6,-5,-2,-7,-5,1,2,2,8,-7,3,-8,-10,-9,-8,2,1,-4,6,3,6,3,6,3,-1,6,8,8,10,-4,6,-4,-7,1,2,5,10,4,-5,-9,-9,-2,-9,-4,8,7,6,-2,-4,6,-8,1,-9,5,6,-10,-9,2,3,-8,6,4,9,-4,-10,8,-9,8,-8,4,7,8,6,-3,-8,9,-6,-5,-8,1,-9,-8,10,6,6,-1,-4,8,-1,-1,4,4,-3,-7,7,-1,-9,-5,-4,8,-3,-3,-1,8,-4,2,1,9,2,6,-6,-4,-5,-3,-9,9,1,8,-6,4,7,9,-10,1,4,3,-6,2,-5,-10,-7,8,-4,-10,7,2,9,-4,-8,3,2,-2,3,2,1,6,-3,-6,5,9,1,7,-1,-1,4,2,9,6,10,-4,2,-10,6,-3,-3,2,2,-4,-10,5,-8,-2,5,-1,-8,7,-4,-4,-1,3,7,-8,5,-5,4,9,-9,10,-10,6,-5,7,-9,2,-8,-4,10,-6,-3,-2,-1,10,3,-1,-1,3,1,7,-1,-10,2,3,-9,9,-2,-10,1,2,-1,10,-1,2,-3,1,-8,4,-8,-3,10,8,2,-2,1,-10,-6,-8,1,10,-9,-1,-6,6,-6,1,-1,-7,-9,8,4,2,-6,8,10,-5,-8,5,-3,-8,-10,-6,-9,5,-3,-8,1,-6,2,-6,9,1,-10,-3,-7,-6,1,-7,-5,8,5,3,-8,3,-3,4,4,1,-2,-9,-7,-6,-6,-9,-7,-9,7,-8,-10,-6,-4,7,6,2,-4,8,7,-10,-7,6,-9,6,-8,10,-7,-3,7,-9,-7,4,3,3,-6,-6,3,8,-6,8,9,4,-6,-9,4,-7,-8,-2,-3,-4,7,3,-2,4,5,4,1,2,-2,2,6,6,-10,-6,3,-3,9,-10,5,9,-7,-4,10,8,6,9,-9,7,-5,-6,2,-9,-5,2,-5,10,5,-2,1,-8,-2,-8,-5,-2,-7,-1,8,-7,-10,-5,-9,9,-10,-10,3,-7,-8,5,9,6,-8,4,-8,10,-10,-3,9,-7,-10,-9,7,-9,-10,-8,4,2,10,1,-7,-6,-6,-9,8,4,-3,3,9,-4,-6,6,6,-3,6,-4,5,-3,6,7,-8,-4,-6,-10,8,-5,-4,-6,1,-9,-3,1,3,-10,5,-5,-2,3,-5,-4,5,-9,10,-1,5,9,3,6,5,-6,-5,3,-9,5,7,9,1,-3,3,4,-4,-4,5,2,9,-10,9,2,-10,-4,-10,-1,10,10,9,-1,-8,-9,-8,3,-9,2,8,7,-4,-7,3,3,-3,9,8,-7,5,-9,9,10,9,-7,5,5,3,4,-1,1,2,5,8,-8,10,-7,3,8,-9,-9,8,-6,7,9,6,1,10,10,10,2,-9,-8,6,2,-10,2,6,-1,5,-10,-9,-1,-1,-6,10,2,9,-2,5,-2,7,-4,-9,6,4,7,1,2,-10,2,6,-1,-3,10,7,4,6,-6,3,-1,2,-10,-7,-2,3,-8,7,4,2,-7,-7,-4,-8,-8,-4,10,6,-8,2,-1,-3,6,8,-9,5,1,8,-5,-8,1,-1,-8,9,-1,6,-8,10,-1,3,1,10,9,9,-6,6,-1,-8,-5,6,2,7,3,3,8,-5,-5,4,3,-10,2,-8,-3,1,5,-4,-9,6,-8,7,-6,-6,-7,7,-4,3,-2,-9,7,-3,-9,-9,7,2,4,-5,2,-1,4,1,4,-5,4,1,6,-6,-10,3,10,-5,5,-3,1,-7,4,4,3,4,3,-1,-7,2,-1,5,10,-6,-9,-3,-4,7,10,6,9,3,5,-9,-10,-2,-5,6,8,-10,10,-9,-6,6,10,-9,4,-10,-5,-1,-1,-10,9,-4,8,6,-9,-4,-3,-1,4,1,4,-5,4,6,1,4,3,-9,-1,-9,-1,-5,5,9,-6,5,4,8,8,-3,-1,-8,-4,3,1,-6,-7,9,5,-9,-10,10,6,2,-2,-2,-4,7,-9,-3,-4,-5,10,-1,1,5,-6,-5,-2,6,-4,7,9,3,-6,-8,-5,-9,4,1,2,7,10,-10,-1,-8,-5,10,-1,-1,1,-7,-10,-3,-10,4,-10,-2,4,-7,-8,-7,-2,-6,2,-1,-5,-1,-7,-3,-1,-1,-7,3,4,-4,5,-7,8,1,1,5,4,-4,4,-10,-2,8,-1,-1,-1,9,-8,-4,-2,-8,-10,-8,3,-5,-9,4,5,3,2,-3,10,-10,10,5,-2,-4,10,-7,6,-1,-9,8,-6,-10,-6,-1,4,-5,5,8,-4,2,-6,6,2,-7,-2,-5,-6,7,5,-6,-9,-5,2,-4,6,10,-2,4,-6,5,5,-8,-4,-1,-3,9,-10,8,10,8,-5,-7,-7,-3,3,-4,-9,-7,9,9,7,-6,4,6,-4,-1,-3,8,-1,-4,10,-1,2,9,8,-5,-9,9,-3,-9,-1,7,-9,7,-5,-4,-1,-5,5,-4,3,-7,8,-8,-4,9,-5,1,-1,-6,9,3,-7,3,-2,4,-6,-10,8,9,-4,7,-5,5,-7,4,1,8,-6,9,-9,5,-5,-2,-4,-4,9,10,-10,-2,4,-6,3,-4,-6,7,7,1,-1,-6,5,-3,-3,-2,8,1,10,-8,3,2,-4,-5,4,-4,10,-10,-1,-1,8,7,-7,-9,-8,-10,8,10,-4,4,2,1,-9,7,5,-4,1,-6,-2,5,-3,-10,-10,4,7,10,-7,1,3,6,8,-1,-1,-9,-4,-2,-1,8,7,5,-2,-3,-7,5,-2,10,-2,9,9,-6,-4,10,5,7,9,-5,-7,8,-3,-8,5,-5,10,-10,-3,2,9,3,7,5,3,5,-8,-8,7,6,-3,-8,-6,-9,-7,6,-10,-9,2,3,5,7,-10,-6,8,-8,2,3,-6,-7,-3,8,-4,2,-2,1,-4,1,-3,10,9,-4,6,9,2,-5,-8,2,-2,8,-1,3,9,-9,3,8,1,-2,-1,-1,8,-10,10,10,8,10,-9,5,9,2,5,-3,-4,-3,8,10,9,4,-3,5,-2,-1,8,-1,-1,-6,-5,-3,5,-3,-10,-1,-4,2,9,1,2,4,-9,4,8,-6,-10,1,5,-10,-9,-5,8,-2,-7,-10,-4,-9,-7,-3,-5,-9,10,-10,-4,-1,3,-5,5,8,10,-9,10,7,10,-4,9,-10,3,-3,2,9,-9,-4,4,6,-10,6,2,-9,3,9,-7,2,-1,-7,8,8,-2,4,6,10,5,-6,-1,-1,-8,-8,-9,7,5,5,-9,1,-9,1,-4,-1,-9,6,-4,6,-5,-9,3,6,-9,1,6,-3,-8,-10,5,1,-10,6,4,-8,-4,-5,2,-7,4,10,2,3,-8,-2,4,-7,-2,8,4,-5,4,9], dtype = "uint32")#candidate|607|(1430,)|const|uint32
call_606 = func_542_call(relay.reshape(const_607.astype('uint32'), [10, 11, 13]), relay.reshape(const_607.astype('uint32'), [10, 11, 13]), )
call_608 = func_542_call(relay.reshape(const_607.astype('uint32'), [10, 11, 13]), relay.reshape(const_607.astype('uint32'), [10, 11, 13]), )
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
var_610 = relay.var("var_610", dtype = "int16", shape = (54, 2))#candidate|610|(54, 2)|var|int16
call_609 = relay.TupleGetItem(func_297_call(relay.reshape(var_610.astype('int16'), [6, 6, 3]), relay.reshape(var_610.astype('int16'), [6, 6, 3]), ), 0)
call_611 = relay.TupleGetItem(func_300_call(relay.reshape(var_610.astype('int16'), [6, 6, 3]), relay.reshape(var_610.astype('int16'), [6, 6, 3]), ), 0)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
call_617 = relay.TupleGetItem(func_297_call(relay.reshape(call_609.astype('int16'), [6, 6, 3]), relay.reshape(call_609.astype('int16'), [6, 6, 3]), ), 2)
call_618 = relay.TupleGetItem(func_300_call(relay.reshape(call_609.astype('int16'), [6, 6, 3]), relay.reshape(call_609.astype('int16'), [6, 6, 3]), ), 2)
output = relay.Tuple([bop_582,call_603,var_604,call_606,const_607,call_609,var_610,call_617,])
output2 = relay.Tuple([bop_582,call_605,var_604,call_608,const_607,call_611,var_610,call_618,])
func_620 = relay.Function([var_580,var_581,var_604,var_610,], output)
mod['func_620'] = func_620
mod = relay.transform.InferType()(mod)
var_621 = relay.var("var_621", dtype = "uint64", shape = (11, 3, 3))#candidate|621|(11, 3, 3)|var|uint64
var_622 = relay.var("var_622", dtype = "uint64", shape = (11, 3, 3))#candidate|622|(11, 3, 3)|var|uint64
var_623 = relay.var("var_623", dtype = "int16", shape = (840,))#candidate|623|(840,)|var|int16
var_624 = relay.var("var_624", dtype = "int16", shape = (54, 2))#candidate|624|(54, 2)|var|int16
output = func_620(var_621,var_622,var_623,var_624,)
func_625 = relay.Function([var_621,var_622,var_623,var_624,], output)
mutated_mod['func_625'] = func_625
mutated_mod = relay.transform.InferType()(mutated_mod)
var_639 = relay.var("var_639", dtype = "float64", shape = (12, 12, 11))#candidate|639|(12, 12, 11)|var|float64
uop_640 = relay.acos(var_639.astype('float64')) # shape=(12, 12, 11)
output = uop_640
output2 = uop_640
func_644 = relay.Function([var_639,], output)
mod['func_644'] = func_644
mod = relay.transform.InferType()(mod)
var_645 = relay.var("var_645", dtype = "float64", shape = (12, 12, 11))#candidate|645|(12, 12, 11)|var|float64
output = func_644(var_645)
func_646 = relay.Function([var_645], output)
mutated_mod['func_646'] = func_646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_816 = relay.var("var_816", dtype = "uint64", shape = (5, 9, 1))#candidate|816|(5, 9, 1)|var|uint64
var_817 = relay.var("var_817", dtype = "uint64", shape = (5, 9, 6))#candidate|817|(5, 9, 6)|var|uint64
bop_818 = relay.right_shift(var_816.astype('uint64'), var_817.astype('uint64')) # shape=(5, 9, 6)
func_262_call = mod.get_global_var('func_262')
func_265_call = mutated_mod.get_global_var('func_265')
var_824 = relay.var("var_824", dtype = "float64", shape = (352,))#candidate|824|(352,)|var|float64
call_823 = relay.TupleGetItem(func_262_call(relay.reshape(var_824.astype('float64'), [4, 8, 11])), 2)
call_825 = relay.TupleGetItem(func_265_call(relay.reshape(var_824.astype('float64'), [4, 8, 11])), 2)
func_542_call = mod.get_global_var('func_542')
func_545_call = mutated_mod.get_global_var('func_545')
const_836 = relay.const([1,-4,-6,-3,4,6,-4,3,-6,2,-5,5,4,-3,5,-4,-4,3,9,-4,8,4,-2,-6,1,-4,-6,10,-1,3,-3,-4,-5,8,5,-7,-9,-6,2,-9,1,-9,-4,-9,2,-3,-8,1,-6,-7,10,-3,-7,-1,-1,1,-4,9,9,-3,9,-5,4,10,6,10,-1,4,2,-8,6,6,-10,-7,4,-2,-7,2,7,-9,9,-7,-4,10,-6,10,-8,1,-5,10,10,6,1,9,10,-8,-9,1,8,9,2,6,-10,-1,-7,6,-3,5,10,9,-5,-9,4,8,-5,-5,-10,8,-8,-5,-10,-2,-5,6,-2,5,3,-4,8,-8,10,-10,4,8,-7,-7,-8,-9,-8,10,9,9,-1,-9,-4,-2,2,-3,-9,10,-6,4,-8,6,-7,5,-4,-8,-7,4,5,6,-7,6,9,-4,3,-8,-1,6,-3,-4,7,-1,-10,-8,2,-4,10,-5,-6,-6,6,-1,-10,-5,-9,-1,-10,3,-9,6,-2,8,-10,4,3,6,-2,6,-5,-7,7,-9,10,8,-2,9,-5,-9,-2,-3,-1,-4,-8,-6,-1,-5,9,-7,5,-8,-10,-2,-6,1,2,-6,-3,-5,-3,3,-4,-2,4,3,7,-8,-10,1,9,-7,6,-3,4,-1,9,-2,-2,-5,6,-6,1,9,4,9,-3,-6,10,9,9,2,4,2,-8,2,7,6,-2,9,-4,9,5,-6,5,10,5,-6,7,5,-7,9,5,-1,-10,-2,1,2,9,2,5,-9,-7,9,3,9,-1,1,6,4,6,-10,9,2,2,-1,-9,7,-5,8,-10,-7,7,-8,2,1,-8,-5,-5,-5,3,5,-8,8,9,-3,-6,10,8,8,-2,8,-2,-8,-1,5,1,-8,4,-4,3,-2,6,2,-1,-6,9,-2,-8,-7,3,3,-4,3,-8,-9,-4,9,4,-6,4,-8,7,-4,-10,3,5,-7,8,6,-9,-8,7,-5,-1,-8,2,-9,-5,3,6,-1,2,1,-10,-6,4,-3,1,4,8,6,7,8,-10,7,5,-6,-8,6,4,8,-4,-10,9,-7,-5,7,-10,-4,-6,-4,-1,-7,-9,-8,3,-2,-8,-1,4,4,-1,-1,-5,-9,6,-1,6,-5,-1,10,8,10,-4,-5,-9,8,-9,8,2,7,3,-4,-6,-5,-3,-2,7,-6,-4,-9,-9,2,-6,6,-10,-5,-10,3,9,4,3,2,7,10,1,4,-6,2,9,-1,10,3,6,-8,1,8,8,-5,2,-6,-7,-4,1,7,3,-8,-4,3,-6,-7,-10,3,7,-5,-5,1,-3,5,1,3,-9,-7,3,-3,10,6,-4,-10,-6,7,5,-3,3,4,1,-7,10,1,3,-10,3,3,-4,-6,7,4,-1,2,-7,7,-4,8,6,7,3,-2,-3,4,9,2,5,-10,4,-2,10,1,-2,10,-8,9,4,8,8,7,-1,-5,-2,3,-9,-9,4,5,-8,-6,-9,8,8,-1,9,4,-4,6,-6,-3,6,3,3,8,10,8,10,-3,3,5,-1,-1,9,-2,-10,7,-9,10,8,-1,-3,-10,-6,-3,8,-10,8,5,-3,-2,3,3,-2,2,-10,-10,4,5,-4,9,-6,-2,-2,-2,5,-8,-3,-10,1,-7,-7,-3,7,-2,-6,-5,-8,9,-6,-5,-4,1,3,4,-3,6,-8,-2,-8,-7,5,-1,1,-5,10,9,-2,-3,2,-2,8,7,-8,4,5,-4,-3,5,4,2,7,-8,-2,7,-8,-10,-8,4,-10,-4,10,-7,-3,-9,-10,1,-10,8,9,9,4,-4,8,10,8,5,4,-3,4,-5,10,-2,4,6,7,1,-7,-6,6,-5,10,6,-1,2,-10,-10,5,-5,-3,-4,-6,-6,3,8,-9,-6,4,-4,1,-10,5,5,3,-8,-1,-1,-7,-10,10,-10,2,10,9,10,-2,-3,4,4,8,-6,-4,5,-3,-2,4,1,-9,3,5,-10,-8,3,-2,7,-10,-6,9,8,6,-2,3,8,6,-1,-7,-9,5,6,2,-7,8,9,-5,-7,6,-3,7,-2,-5,4,-6,-8,7,-8,7,1,9,3,8,4,1,4,1,9,-1,-7,-7,7,8,3,3,1,6,5,-3,-8,8,-2,-10,-4,-5,-7,7,6,-3,1,3,-7,3,4,3,-10,-6,2,3,-4,-9,1,-6,1,4,-3,-3,9,-4,-2,5,-2,4,4,7,8,-10,4,-5,-3,-7,7,9,-6,7,4,1,2,7,5,-5,-2,1,10,10,-5,10,-7,-8,-5,-2,-8,2,-2,-7,5,-9,8,2,6,-3,-9,2,3,-10,6,5,6,-5,8,-5,-7,-1,-6,5,7,2,-1,3,-6,-2,4,8,9,-10,9,-2,-10,3,6,-8,8,-10,-4,-4,-5,-5,-8,-2,-8,3,-8,6,-6,5,-9,-6,3,-7,-10,-9,9,-5,-7,-1,-9,-4,7,-8,9,6,6,-4,-9,-10,-3,-3,5,9,-7,8,-7,7,-2,-1,-8,-8,1,7,-4,1,8,-10,-4,-6,3,10,-10,-8,-4,3,5,8,1,8,-4,3,-4,4,5,-10,-8,10,1,-8,4,5,-3,7,-10,-1,5,4,-8,7,2,2,2,-8,10,6,-9,5,-5,6,-9,-8,1,-4,-2,-2,10,4,6,5,-10,-9,-3,9,-9,3,-1,4,5,-1,-1,-3,9,-5,1,-10,-2,-8,-5,4,3,6,10,-6,-10,-4,-3,1,6,6,7,-10,7,5,6,-8,7,-3,-3,-2,7,1,-2,-2,2,10,4,-10,8,2,5,3,3,-8,6,-9,-3,2,7,-8,2,10,-7,-6,8,-9,10,-6,9,-1,-4,-7,-5,6,5,-10,-1,-10,3,-3,5,-5,-5,8,-6,10,-1,9,-6,-7,7,7,-10,-6,4,-3,1,-2,10,2,-10,6,-9,-9,-7,7,4,4,2,4,-9,-3,-6,9,-8,1,-5,-1,-1,-3,-7,-4,4,-4,10,-10,-6,9,1,-9,1,9,9,2,2,-8,-6,9,-2,6,-2,1,3,-1,10,-5,2,-8,-4,10,-8,5,3,-3,9,-9,8,-9,1,-5,-10,5,4,4,6,6,-4,-7,6,-6,-9,-6,-6,-6,-2,10,-1,7,-8,3,-5,-7,9,8,4,-10,8,8,10,-2,6,8,7,-5,6,-1,9,2,4,5,5,-10,3,8,3,6,4,-1,9,7,3,6,8,2,-1,7,-2,2,5,9,-2,1,8,6,-7,-3,-1,-4,9,8,-1,-8,3,10,-10,8,-3,7,-1,9,5,10,-2,-4,10,-3,-8,8,2,1,-5,3,8,-1,2,8,-1,1,5,-6,-9,8,1,9,3,5,-9,-8,-8,-9,-9,8,-5,5,6,7,-8,3,10,-3,3,3,-6,-10,-9,7,-6,-10,-3,3,4,-5,4,4,-1,8,-4,-8,1,-9,9,-8,10,-7,3,-4,-1,-1,-8,-10,-1,3,-9,-10,-10,-1,-4,3,-7,8,-2,6,1,8,-2,8,-9,1,-3,8,-9,-10,10,-4,4,8,4,1,3,7,-10,-9,10,-8,-2,-4,-7,-3,-10,5,-10,-1,-9,2,-4,5,5,-4,5,-8,8,9,8,2,8,-1,-2,-3,-7,-3,3,4,4,-5,-7,8,-4,-9,-9,-10,10,-5,6,-1,10,-1,-2,3,10,-6,10,2,-3,6,-4,8,8,6,9,4,-1,-4,-9,-2,-4,5,4,-8,8,8,-10,6,8], dtype = "uint32")#candidate|836|(1430,)|const|uint32
call_835 = func_542_call(relay.reshape(const_836.astype('uint32'), [10, 11, 13]), relay.reshape(const_836.astype('uint32'), [10, 11, 13]), )
call_837 = func_542_call(relay.reshape(const_836.astype('uint32'), [10, 11, 13]), relay.reshape(const_836.astype('uint32'), [10, 11, 13]), )
uop_843 = relay.sqrt(bop_818.astype('float64')) # shape=(5, 9, 6)
func_644_call = mod.get_global_var('func_644')
func_646_call = mutated_mod.get_global_var('func_646')
const_847 = relay.const([4.057535,-4.499119,7.383673,2.229430,-4.170842,5.284918,9.245642,4.448233,5.542322,-8.044634,-1.981595,-1.119836,-3.862354,1.558006,6.550351,5.320993,-5.741526,4.688081,9.321292,5.272665,-2.548717,9.359032,-5.577582,-9.518730,-7.539549,-1.524664,0.983891,8.229548,-6.846489,-0.474298,9.679971,4.142559,2.293446,-4.406438,3.133025,-0.284867,-7.220718,8.044950,-7.880465,-0.523484,-7.694511,5.399969,0.788472,-1.814843,-6.235601,3.437483,-7.552520,0.184786,-1.333264,-2.198199,8.920911,8.677237,-3.422243,9.834873,-3.309470,-9.176356,-5.176169,9.029386,-1.712558,-3.857511,-8.252623,-6.463793,-4.532443,-4.889354,0.163369,-1.028231,3.821360,-4.320274,-6.554516,-6.571678,4.043436,6.775040,6.113091,6.706542,-0.064198,-4.829847,-4.320091,8.113484,-2.705934,5.466535,-2.085261,7.109421,4.237559,-6.678349,1.522033,4.011154,0.173669,-0.639757,1.836788,-8.082198,5.462834,-5.449271,0.837789,-1.504980,4.461938,-1.753681,9.054316,3.791567,0.544646,-1.399339,-6.581589,-5.472289,7.564086,-2.580690,-1.191382,-4.066363,9.959281,1.840418,7.765585,4.439151,3.614630,-7.805530,4.994532,-1.503283,6.901147,0.188214,-9.332655,7.674833,-5.764175,-4.294661,-5.295992,2.608834,0.602601,9.007183,-5.662323,5.137892,-5.521848,3.915076,8.543777,-9.932539,-3.113249,-3.504950,6.719705,-0.211322,-9.012639,7.062373,-7.401630,-8.371599,7.234507,-1.760469,-6.862830,-1.679258,7.555423,-2.884474,1.826939,-2.063972,-0.169104,-7.646981,-1.056481,-9.549571,1.874834,-4.454952,-7.575376,6.253336,-0.595058,1.382299,8.756771,0.138503,1.916088,4.530170,-5.985166,7.322982,-0.068435,5.974916,-4.052172,7.210769,3.469540,6.333992,9.392600,3.154390,-8.864584,-8.761222,-0.868571,3.065766,-6.783747,-5.037734,-4.847608,0.686316,2.460786,8.579650,-6.985079,3.722983,-7.966407,0.098052,1.010028,2.298316,-7.793219,8.735248,4.857672,-2.329511,4.135502,4.466016,-1.104692,7.209026,6.016988,-7.005632,8.846459,5.201829,-8.589099,4.127885,3.575827,-0.784219,2.628477,6.058547,-4.330876,-7.889341,-2.532549,4.686218,-5.631756,7.578505,3.258118,-9.426726,2.192116,2.988554,-4.876157,-7.498683,2.376534,7.279195,-0.563416,-0.339652,7.222263,4.992852,-6.907541,-0.171987,0.721906,-4.487588,6.356348,9.084706,-6.360011,8.011481,-8.955909,-4.806302,-4.838221,-8.244592,-6.530088,6.821702,5.463512,-2.209129,6.832548,-4.199698,-0.962931,6.298337,5.783620,-8.267577,0.345358,5.983224,0.576667,-1.929766,6.645348,8.530526,6.910958,7.024907,2.564490,-1.378824,2.530431,2.842634,9.353750,1.178716,3.120515,-9.431104,6.585656,-7.457304,1.907804,-6.495302,9.297542,2.652048,-6.574921,2.567810,-0.902560,-6.221876,1.029115,7.646441,4.309844,7.713610,-9.331325,6.068719,0.865669,0.856105,-0.959553,-0.888207,3.196120,-2.861360,-1.560276,6.578898,2.238558,-7.382052,4.413691,9.278175,2.812709,5.473558,-7.724888,7.512076,4.184178,2.889157,1.962932,8.586120,1.980969,-2.570511,-8.333695,-8.701687,-5.270825,-6.965649,-6.782098,-3.643806,-0.427373,6.192486,-8.629696,4.483733,4.750223,-7.410275,-7.050436,7.283499,1.412119,2.321711,2.299824,-6.340627,0.646259,3.170896,-9.291074,3.465199,-9.016473,-5.972179,1.279805,-1.292064,-4.226195,4.345211,-2.662530,-7.001469,3.657400,9.659664,9.123083,-2.705490,-3.224250,-0.582146,7.238454,-6.318520,-3.357159,-6.274822,-1.254473,0.669843,8.712760,0.189760,3.483655,-5.549946,5.628712,-4.585779,9.269501,2.619725,-6.141301,-3.405060,6.213058,3.351466,5.610370,-8.518645,-7.176810,-2.654659,-1.577892,-4.122140,5.370204,-5.698212,-0.172229,1.757952,0.738557,-4.688607,-7.401007,6.062279,0.090654,-5.084780,3.295803,-2.977090,-2.825123,3.596831,-5.313179,-5.217741,-2.457550,-8.394206,8.390540,-3.384743,2.649810,1.906237,-3.705882,2.481498,7.910163,-1.293350,-1.099094,8.636987,-2.978119,-2.970091,-7.489140,-7.656412,6.778538,0.229333,8.492883,-4.964862,-7.378604,-3.076477,-7.255830,-9.494754,7.054611,-0.006416,1.883564,-5.710945,4.381039,-9.368714,-0.252713,-7.189945,-8.178455,-7.763400,-6.973758,-6.083127,-4.072003,8.212364,-2.551285,7.517624,-1.323619,-7.466002,6.502055,1.469487,5.631497,-0.939628,6.201394,4.467706,-2.552903,4.794391,-1.818337,-0.517354,-1.860116,-3.862550,5.016067,8.571223,1.883176,-5.544715,-8.833537,3.464437,9.532850,6.213101,3.450361,-8.293167,0.707974,-7.208761,7.465777,-0.681974,-3.032501,7.470659,-3.608557,1.565733,-2.207169,-9.705641,-2.106357,-5.212951,7.480472,-3.092763,-4.446957,4.756647,-8.798380,-7.958837,-8.360814,8.406977,3.197636,-4.178853,8.164969,3.372386,2.298242,5.061135,-3.770158,-4.536818,7.751985,-2.516274,9.676615,0.779739,6.124851,-7.180191,0.099963,-2.697467,-6.967550,-3.200032,-8.315883,3.741588,-0.992753,4.501708,-7.778295,-2.297579,-1.136449,4.445410,-5.616572,4.142400,-1.673289,9.485613,-6.669809,-1.070382,5.538191,-8.349845,2.932599,2.560489,-9.320492,-7.665081,-3.943891,4.422586,7.811244,9.512226,9.774571,8.202165,-3.429354,3.805114,-4.308827,0.347327,3.238679,4.319200,6.710246,-7.792258,-9.085142,-5.399005,1.002206,8.302530,-6.312165,0.154611,-5.437182,-4.894051,9.496702,3.126636,2.286770,0.043801,-2.755948,9.098137,-6.214800,-8.563019,-9.389529,9.506938,-3.675953,-9.289261,7.078715,-3.544212,-2.123442,-7.564749,1.392125,5.598077,-6.380580,0.971334,-9.727806,-2.083747,-0.906279,6.065309,2.333323,-8.261098,4.434958,9.292237,-3.204497,-2.992841,-2.271356,2.932549,-4.073619,-5.585872,5.687876,-6.169407,3.996562,-4.861458,0.515815,-5.423058,2.505835,-8.599564,-8.480735,0.689367,1.352600,7.376341,7.708387,5.963429,-4.705813,-0.930772,1.861003,3.722547,-9.137340,-1.119823,3.240599,-0.928602,-7.987860,9.495021,-1.543753,6.098959,5.740463,9.680748,2.421669,-1.286495,9.545012,-8.065011,2.808711,5.140743,9.511601,8.208946,-8.330917,9.902016,-2.734259,5.458011,-7.853580,8.129847,-4.733793,-8.427561,2.128051,9.561446,5.845816,-9.079517,6.179479,-6.823216,9.148375,6.817217,-6.679367,-8.043600,4.018370,0.544001,0.441483,7.722813,-0.221618,3.347943,7.386678,-3.332628,-6.199369,7.778627,-7.785670,6.783121,-3.496745,6.215501,1.665925,3.722973,-5.293450,-0.571763,7.010931,9.303350,0.694646,-3.071933,6.262508,-0.453408,4.423271,3.721395,7.628460,5.841084,4.169363,-3.291738,2.616686,1.660025,2.118040,8.592237,-5.864564,-4.770073,9.051050,-8.092586,7.052445,6.686181,-8.344581,-3.239686,0.746768,0.369806,-6.069985,9.185015,-0.596704,2.340595,3.700745,-3.402944,7.094544,8.276357,8.006410,4.725003,-3.181689,8.036875,3.790571,8.856657,-3.953572,7.876095,-1.337652,-9.236255,-3.206918,-8.894717,-8.183119,4.517257,6.126151,-1.511370,-7.210419,3.980821,-6.093457,5.156873,-2.805016,-7.769093,-5.762838,-8.725382,9.024138,9.477083,-6.132585,8.033178,-6.486878,5.556302,7.329008,1.023441,1.454374,9.879836,3.806649,-6.318353,9.677793,-5.902243,-7.137977,-9.087212,9.126609,2.666165,-5.145961,-6.781311,1.778228,-1.420210,-1.553249,-8.102322,8.169672,5.813415,0.580979,-5.466156,6.901221,-7.513982,9.931461,0.861099,-3.297123,2.292037,6.860306,3.248103,1.947104,4.465258,1.088903,8.310114,1.401505,-2.195127,-9.663674,7.579880,6.824164,-8.216345,1.663882,-8.498739,-9.249519,-2.487157,4.770329,4.147724,5.824623,-9.570994,-4.815593,7.826303,7.096652,-6.278749,3.838283,3.320010,6.970257,3.047158,8.541670,-4.766379,6.451258,0.178402,0.144312,9.076356,9.391104,9.946282,-5.710297,-4.614094,-8.206290,7.739357,-4.524051,9.613432,-4.942652,-3.607243,-6.289400,-1.704281,0.018431,-6.108534,-4.720597,-2.001368,-1.138166,5.825254,-3.679451,-7.592089,6.792946,-6.169775,-8.534017,6.668190,6.455098,-6.807885,5.250792,3.606271,-1.172162,4.547038,-8.691301,-4.140059,5.571433,8.635682,7.765271,2.891365,8.727862,8.335326,3.385083,4.501255,-7.796126,-5.549851,-6.185820,6.432174,6.162656,6.928182,-6.864440,-6.869599,6.100201,7.634567,3.536639,2.224873,3.349111,-4.059043,-8.026464,5.783079,5.183281,-9.903717,6.322437,-8.483678,-7.056300,-8.532039,-1.581109,-2.938671,-3.907706,-4.758271,-9.355104,4.576925,-3.406587,-7.636483,4.558130,-4.575393,5.415589,-4.811067,-2.130681,-6.716668,-7.377346,4.855446,6.033119,-3.752178,4.568215,-3.060100,4.561997,7.378584,9.534244,-4.527009,8.369063,-7.329106,0.851521,-6.147198,0.002447,-2.819952,1.475663,-5.317309,5.019475,9.319243,-8.368934,5.399148,6.071697,7.616861,-5.449048,5.871296,-6.655595,9.145088,-8.115411,3.235275,-4.276030,3.007068,8.789648,-1.033800,-5.547695,-0.459488,4.465652,-5.113229,-4.615705,-2.626116,6.888324,8.842900,1.145276,4.620943,-3.670848,2.045987,-9.436381,-8.928660,4.011590,4.902863,-5.461229,-8.408391,3.590106,-0.523170,-4.769565,-5.152462,-1.951068,-8.257735,-7.789001,8.009756,-3.841939,6.077753,9.996219,4.560592,6.402673,2.228674,-4.480984,6.747447,-4.025575,2.985796,-8.964492,9.109561,2.336369,-9.526310,4.229639,-1.683796,3.840590,9.273262,-2.327980,2.469109,5.846938,3.870842,-2.611727,7.267589,9.450611,7.026795,-8.468197,-9.384905,-1.772382,-5.113696,2.069914,-4.932558,-5.368990,8.181064,-0.460409,-1.878781,9.204128,8.627251,0.418612,4.716949,7.196694,-5.562370,3.432907,-4.378139,-6.018532,0.530076,0.295054,-5.529683,4.960698,-8.747705,-6.055640,6.945284,2.285801,7.759343,0.641951,6.111326,9.189799,1.056422,-4.844288,8.699208,-9.938996,-2.645032,-3.213771,1.019745,9.628356,3.281593,1.446464,6.912072,7.261004,0.258338,8.943785,6.119834,-5.887999,0.327605,-7.197178,2.588954,-3.341303,1.851599,-5.108145,-8.017015,-2.068530,1.362719,2.399211,-9.020432,2.034839,0.028755,-2.402116,-5.391330,7.741268,-1.178902,-8.171899,-8.290696,5.384668,4.875778,9.134591,5.600332,4.539813,1.225038,-5.951125,6.479053,4.754947,-7.078502,4.050479,-1.564722,2.255468,3.922555,9.035279,-6.392919,5.913167,-2.286529,9.442722,-8.148673,3.446803,2.630012,-4.427585,4.982000,-2.681445,9.252232,-7.791760,-0.589166,-2.238009,6.739735,-8.756886,2.730895,5.524035,-6.978355,6.084483,4.453799,-9.537281,-9.839066,5.463412,-2.505146,-5.057399,-2.545044,0.140117,-6.698521,-7.390834,4.798748,7.334787,-8.091257,7.382531,1.928898,6.662768,3.425914,-8.967622,-1.715033,5.878716,6.361948,5.600190,3.600256,-1.969080,-4.090715,4.199937,7.677170,-2.974248,-5.317280,-6.012594,2.740145,-5.051887,6.947213,-0.645794,7.148310,-1.499549,6.819303,-5.273311,7.220594,-0.469355,0.065812,2.763465,-8.465984,-7.184796,0.612362,3.497346,-5.883685,8.201909,-1.561730,-0.419495,-7.789433,-5.307540,-1.937256,-4.113556,2.516319,9.026498,-9.244961,-3.366422,2.836593,2.478892,0.349489,0.503855,3.283218,-3.374807,-0.836741,6.605134,0.720088,3.109919,-4.046793,3.679074,-5.437471,-0.241512,-3.777763,-0.266826,5.114506,-9.367658,-4.453261,-5.391684,8.946217,5.809882,2.047748,-3.566025,-0.782235,-3.207073,5.142026,-0.331316,5.968918,-5.408256,1.353771,3.909879,9.121985,-8.286049,6.338323,4.899683,7.974221,-9.794470,6.248403,6.349447,-4.171016,-7.792654,-4.258858,-3.444847,9.555875,8.324937,0.750086,8.023394,-9.290007,-6.007640,-2.641134,-2.422450,-7.558862,8.960450,1.833502,2.628899,-2.033920,5.785078,-1.820306,-8.161902,9.586230,2.521157,-0.797881,7.107929,-7.670053,-8.252616,8.524725,-5.575389,-5.042406,2.219768,-7.938942,6.704716,-1.514848,5.207928,-9.626257,-1.730494,5.379976,-1.100657,-0.304630,6.431591,0.841374,0.032461,-1.389619,-0.160610,5.761753,9.036716,-9.233253,5.355429,9.249264,-5.655674,-9.323663,6.248109,-6.502465,-1.758001,0.093423,9.998032,3.111891,4.637572,-2.980265,-4.093443,5.185949,9.597111,6.867214,-7.227666,-8.918509,-6.368106,1.650043,-6.925112,-2.258865,-6.380972,-8.473292,-5.694218,4.835864,-7.527054,-0.177831,9.619321,-3.526482,3.333362,0.435590,-4.006904,-8.623415,3.580899,8.804119,6.965788,-4.114795,7.178887,8.326900,-8.922279,-8.205640,-6.556484,-1.595664,-4.619392,3.641786,-8.027269,-4.289159,-9.345732,8.602455,-4.423229,7.544125,-4.182354,-5.428049,8.080358,-5.485625,-7.058010,-1.122163,3.752510,-0.582439,2.047780,2.771189,4.618381,-5.378742,0.612052,5.643317,-5.904778,2.203896,-2.142403,8.871355,-2.172447,8.178143,-7.577508,9.022456,-6.585794,9.413583,8.144010,7.118696,-3.375843,-0.798006,-5.309011,-2.746680,6.915068,0.189717,7.747989,3.281551,-1.549582,-5.110119,-2.231903,-3.225674,6.694769,-5.364224,0.742423,8.825344,6.206955,1.847683,3.234839,7.675217,2.404326,-6.942976,8.875906,-0.042802,4.865049,-4.450065,2.822599,-9.817748,-3.061947,0.819989,0.883772,-8.969408,1.883993,-6.475581,7.086078,9.420552,-6.167917,0.493794,8.139378,-4.540225,-8.624646,-1.549234,4.945113,-2.618018,9.863767,8.619230,6.321510,7.380756,3.401432,9.185741,8.740480,-2.017854,4.729768,2.288725,5.783808,3.638677,-0.028787,3.827784,-1.606937,-4.967547,-4.091360,-0.599715,9.298316,-4.728668,9.993005,3.151683,-4.497041,0.447848,7.996256,-4.186356,-5.429186,-5.120011,9.443399,-0.106653,6.276406,7.742276,0.715292,2.030060,2.690154,5.313456,-1.245550,-1.675647,-3.022090,-6.277816,-4.027054,6.467438,-0.008052,-3.672121,8.670170,0.235297,7.179548,-7.965244,6.794544,3.754162,6.892807,5.055933,9.720025,-3.625939,6.664577,9.347429,4.440374,-0.757888,-1.483725,6.828928,-9.182669,-0.120672,2.483872,-0.620291,7.819474,-0.029540,-1.196779,-9.654662,3.479716,-0.959494,1.742543,-2.630904,-3.339925,-1.382514,0.534743,-7.491190,-8.311187,8.239066,-4.783950,-9.466420,8.945864,-9.253204,5.722930,3.639368,-9.978592,7.232206,5.624747,-8.126849,4.631258,-9.671589,1.454062,-6.833292,-4.039424,6.168397,5.380388,-9.069733,-3.198771,-9.030555,3.879543,-5.923648,9.898736,3.451273,-2.082470,-5.649644,-7.800617,-8.511923,-5.374426,3.827356,7.134212,8.210672,2.746352,7.841711,-2.551455,8.401796,-4.877177,0.476789,9.196034,-0.104806,8.121311,4.059853,-4.678799,9.543181,-5.893754,9.019322,3.482587,-5.196077,-3.066442,5.014286,-1.442930,-4.050402,-0.581016,-7.322741,-7.601483,5.742364,-0.572882,6.661919,1.810266,4.777554,3.397093,6.428014,3.787541,5.129802,2.006408,-6.257506,5.024002,-0.141129,7.436420,-6.720466,-3.397927,3.310441,-7.075475,8.396487,3.937554,-6.384871,1.431723,3.992264,8.472737,-8.492191,8.186768,-9.767897,6.873308,0.826808,-0.646835,-5.392338,8.392832,6.374011,-0.876325,8.976767,2.632948,-5.210503,6.229728,0.844618,0.920958,-9.600988,-6.780973,0.005247,1.591033,-6.197527,-4.800721,-0.652864,-2.773488,-7.967348,-1.830837,-6.475511,5.393080,-0.402959,5.775282,2.831013,3.326443,9.343915,4.403380,0.635559,7.698712,-5.774879,-8.473864,-1.416108,-8.498756,3.277980,-0.214961,-0.069673,3.716524,4.963003,-1.151602,6.087228,-4.920482,3.397094,8.585864,-7.113677,1.877073,6.287702,-0.320848,-9.409385,-0.380589,1.938995,-7.994117,-0.676705,8.623045,-2.224312,-6.489722,9.699513,-2.296903,-0.565876,-6.551412,9.232918,2.153267,7.238919,-4.409094,-5.179574,-0.918579,7.600163,7.958647,-9.217081,9.916454,-2.395594,-5.739118,-7.572219,4.253226,-3.803071,-9.267638,4.140428,-3.576404,7.843449,-1.688121,0.362462,6.206224,5.166319,-1.551920,2.312224,-9.560916,-6.658777,-4.009039,-4.218421,1.819634,7.542380,-0.310589,-6.043645,6.206854,2.828820,1.683900,-5.439291,5.434549,-6.039114,6.599443,-4.387954,5.624279,-2.255551,7.328479,2.773093,-1.604630,-7.422153,0.470559,5.282253,-2.975234,1.085420,-4.463959,1.215954,6.457746,4.148376,8.539629,6.877414,-6.929858,-0.729381,-9.539525,9.480276,-7.720669,1.019273,-4.973217,7.490833,0.714799,-7.637592,-8.318766,1.645204,8.829877,2.455908,-2.829108,-9.335927,-7.146601,3.907641,-1.526884,8.615033,-2.673468,4.725774,-0.872190,-6.193912], dtype = "float64")#candidate|847|(1584,)|const|float64
call_846 = func_644_call(relay.reshape(const_847.astype('float64'), [12, 12, 11]))
call_848 = func_644_call(relay.reshape(const_847.astype('float64'), [12, 12, 11]))
bop_850 = relay.less(var_817.astype('bool'), call_823.astype('bool')) # shape=(5, 9, 6)
bop_853 = relay.less(var_817.astype('bool'), call_825.astype('bool')) # shape=(5, 9, 6)
bop_859 = relay.bitwise_and(uop_843.astype('uint8'), relay.reshape(var_817.astype('uint8'), relay.shape_of(uop_843))) # shape=(5, 9, 6)
output = relay.Tuple([var_824,call_835,const_836,call_846,const_847,bop_850,bop_859,])
output2 = relay.Tuple([var_824,call_837,const_836,call_848,const_847,bop_853,bop_859,])
func_869 = relay.Function([var_816,var_817,var_824,], output)
mod['func_869'] = func_869
mod = relay.transform.InferType()(mod)
var_870 = relay.var("var_870", dtype = "uint64", shape = (5, 9, 1))#candidate|870|(5, 9, 1)|var|uint64
var_871 = relay.var("var_871", dtype = "uint64", shape = (5, 9, 6))#candidate|871|(5, 9, 6)|var|uint64
var_872 = relay.var("var_872", dtype = "float64", shape = (352,))#candidate|872|(352,)|var|float64
output = func_869(var_870,var_871,var_872,)
func_873 = relay.Function([var_870,var_871,var_872,], output)
mutated_mod['func_873'] = func_873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1529 = relay.var("var_1529", dtype = "uint16", shape = (1, 8, 4))#candidate|1529|(1, 8, 4)|var|uint16
var_1530 = relay.var("var_1530", dtype = "uint16", shape = (3, 8, 4))#candidate|1530|(3, 8, 4)|var|uint16
bop_1531 = relay.equal(var_1529.astype('bool'), var_1530.astype('bool')) # shape=(3, 8, 4)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
const_1540 = relay.const([-7,2,-10,5,8,8,-7,10,6,-9,1,-5,8,2,-3,8,-1,-10,-9,-7,-4,-8,7,-7,4,-6,-1,-9,-10,-4,-3,3,-5,4,-7,-8,5,-1,8,5,-1,4,-4,1,-7,7,7,3,-2,-3,-10,-1,1,-7,-8,-10,5,-1,8,-3,6,2,-1,-3,-5,-3,1,10,-5,-10,1,-2,-3,-5,4,3,-9,1,-3,-4,-5,3,-4,6,10,-10,6,-7,-6,10,-4,10,-2,-5,7,3,-10,-8,7,-2,9,-8,-8,6,1,2,10,9], dtype = "int16")#candidate|1540|(108,)|const|int16
call_1539 = relay.TupleGetItem(func_297_call(relay.reshape(const_1540.astype('int16'), [6, 6, 3]), relay.reshape(const_1540.astype('int16'), [6, 6, 3]), ), 0)
call_1541 = relay.TupleGetItem(func_300_call(relay.reshape(const_1540.astype('int16'), [6, 6, 3]), relay.reshape(const_1540.astype('int16'), [6, 6, 3]), ), 0)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
call_1551 = relay.TupleGetItem(func_297_call(relay.reshape(call_1539.astype('int16'), [6, 6, 3]), relay.reshape(const_1540.astype('int16'), [6, 6, 3]), ), 1)
call_1552 = relay.TupleGetItem(func_300_call(relay.reshape(call_1539.astype('int16'), [6, 6, 3]), relay.reshape(const_1540.astype('int16'), [6, 6, 3]), ), 1)
func_620_call = mod.get_global_var('func_620')
func_625_call = mutated_mod.get_global_var('func_625')
const_1554 = relay.const([-2,-6,4,7,-5,10,-10,-6,10,5,1,-3,-4,-5,-2,10,1,-9,7,1,-2,-2,7,-9,1,10,2,10,10,2,4,-8,-7,-9,2,-6,2,-7,5,7,10,8,9,-9,5,-10,5,-3,-4,-9,-6,-1,3,7,-5,-4,10,-6,9,-9,-9,3,-9,-8,-1,-1,2,-5,-1,-2,7,-1,5,-7,3,1,6,-5,2,-10,-10,10,-3,6,-7,2,4,10,-9,6,-2,-3,10,-5,-1,5,-6,-5,10], dtype = "uint64")#candidate|1554|(99,)|const|uint64
var_1555 = relay.var("var_1555", dtype = "int16", shape = (420, 2))#candidate|1555|(420, 2)|var|int16
call_1553 = relay.TupleGetItem(func_620_call(relay.reshape(const_1554.astype('uint64'), [11, 3, 3]), relay.reshape(const_1554.astype('uint64'), [11, 3, 3]), relay.reshape(var_1555.astype('int16'), [840,]), relay.reshape(const_1540.astype('int16'), [54, 2]), ), 4)
call_1556 = relay.TupleGetItem(func_625_call(relay.reshape(const_1554.astype('uint64'), [11, 3, 3]), relay.reshape(const_1554.astype('uint64'), [11, 3, 3]), relay.reshape(var_1555.astype('int16'), [840,]), relay.reshape(const_1540.astype('int16'), [54, 2]), ), 4)
uop_1564 = relay.acos(var_1555.astype('float32')) # shape=(420, 2)
bop_1566 = relay.not_equal(uop_1564.astype('bool'), relay.reshape(var_1555.astype('bool'), relay.shape_of(uop_1564))) # shape=(420, 2)
output = relay.Tuple([bop_1531,call_1539,const_1540,call_1551,call_1553,const_1554,bop_1566,])
output2 = relay.Tuple([bop_1531,call_1541,const_1540,call_1552,call_1556,const_1554,bop_1566,])
func_1569 = relay.Function([var_1529,var_1530,var_1555,], output)
mod['func_1569'] = func_1569
mod = relay.transform.InferType()(mod)
mutated_mod['func_1569'] = func_1569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1569_call = mutated_mod.get_global_var('func_1569')
var_1571 = relay.var("var_1571", dtype = "uint16", shape = (1, 8, 4))#candidate|1571|(1, 8, 4)|var|uint16
var_1572 = relay.var("var_1572", dtype = "uint16", shape = (3, 8, 4))#candidate|1572|(3, 8, 4)|var|uint16
var_1573 = relay.var("var_1573", dtype = "int16", shape = (420, 2))#candidate|1573|(420, 2)|var|int16
call_1570 = func_1569_call(var_1571,var_1572,var_1573,)
output = call_1570
func_1574 = relay.Function([var_1571,var_1572,var_1573,], output)
mutated_mod['func_1574'] = func_1574
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1741 = relay.var("var_1741", dtype = "float32", shape = (9, 4, 9))#candidate|1741|(9, 4, 9)|var|float32
uop_1742 = relay.sin(var_1741.astype('float32')) # shape=(9, 4, 9)
bop_1744 = relay.bitwise_and(var_1741.astype('uint64'), relay.reshape(uop_1742.astype('uint64'), relay.shape_of(var_1741))) # shape=(9, 4, 9)
output = relay.Tuple([bop_1744,])
output2 = relay.Tuple([bop_1744,])
func_1748 = relay.Function([var_1741,], output)
mod['func_1748'] = func_1748
mod = relay.transform.InferType()(mod)
mutated_mod['func_1748'] = func_1748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1749 = relay.var("var_1749", dtype = "float32", shape = (9, 4, 9))#candidate|1749|(9, 4, 9)|var|float32
func_1748_call = mutated_mod.get_global_var('func_1748')
call_1750 = func_1748_call(var_1749)
output = call_1750
func_1751 = relay.Function([var_1749], output)
mutated_mod['func_1751'] = func_1751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1995 = relay.var("var_1995", dtype = "float64", shape = (4, 11, 1))#candidate|1995|(4, 11, 1)|var|float64
uop_1996 = relay.sinh(var_1995.astype('float64')) # shape=(4, 11, 1)
output = relay.Tuple([uop_1996,])
output2 = relay.Tuple([uop_1996,])
func_2002 = relay.Function([var_1995,], output)
mod['func_2002'] = func_2002
mod = relay.transform.InferType()(mod)
mutated_mod['func_2002'] = func_2002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2003 = relay.var("var_2003", dtype = "float64", shape = (4, 11, 1))#candidate|2003|(4, 11, 1)|var|float64
func_2002_call = mutated_mod.get_global_var('func_2002')
call_2004 = func_2002_call(var_2003)
output = call_2004
func_2005 = relay.Function([var_2003], output)
mutated_mod['func_2005'] = func_2005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2119 = relay.var("var_2119", dtype = "float32", shape = (8, 2, 13))#candidate|2119|(8, 2, 13)|var|float32
uop_2120 = relay.log10(var_2119.astype('float32')) # shape=(8, 2, 13)
output = relay.Tuple([uop_2120,])
output2 = relay.Tuple([uop_2120,])
func_2125 = relay.Function([var_2119,], output)
mod['func_2125'] = func_2125
mod = relay.transform.InferType()(mod)
mutated_mod['func_2125'] = func_2125
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2126 = relay.var("var_2126", dtype = "float32", shape = (8, 2, 13))#candidate|2126|(8, 2, 13)|var|float32
func_2125_call = mutated_mod.get_global_var('func_2125')
call_2127 = func_2125_call(var_2126)
output = call_2127
func_2128 = relay.Function([var_2126], output)
mutated_mod['func_2128'] = func_2128
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2312 = relay.var("var_2312", dtype = "uint8", shape = (6, 12, 8))#candidate|2312|(6, 12, 8)|var|uint8
var_2313 = relay.var("var_2313", dtype = "uint8", shape = (6, 12, 8))#candidate|2313|(6, 12, 8)|var|uint8
bop_2314 = relay.less(var_2312.astype('bool'), relay.reshape(var_2313.astype('bool'), relay.shape_of(var_2312))) # shape=(6, 12, 8)
func_620_call = mod.get_global_var('func_620')
func_625_call = mutated_mod.get_global_var('func_625')
var_2322 = relay.var("var_2322", dtype = "uint64", shape = (99,))#candidate|2322|(99,)|var|uint64
var_2323 = relay.var("var_2323", dtype = "int16", shape = (840,))#candidate|2323|(840,)|var|int16
var_2324 = relay.var("var_2324", dtype = "int16", shape = (108, 1))#candidate|2324|(108, 1)|var|int16
call_2321 = relay.TupleGetItem(func_620_call(relay.reshape(var_2322.astype('uint64'), [11, 3, 3]), relay.reshape(var_2322.astype('uint64'), [11, 3, 3]), relay.reshape(var_2323.astype('int16'), [840,]), relay.reshape(var_2324.astype('int16'), [54, 2]), ), 5)
call_2325 = relay.TupleGetItem(func_625_call(relay.reshape(var_2322.astype('uint64'), [11, 3, 3]), relay.reshape(var_2322.astype('uint64'), [11, 3, 3]), relay.reshape(var_2323.astype('int16'), [840,]), relay.reshape(var_2324.astype('int16'), [54, 2]), ), 5)
bop_2344 = relay.bitwise_and(var_2323.astype('uint8'), var_2324.astype('uint8')) # shape=(108, 840)
bop_2367 = relay.greater(bop_2314.astype('bool'), relay.reshape(var_2312.astype('bool'), relay.shape_of(bop_2314))) # shape=(6, 12, 8)
func_2125_call = mod.get_global_var('func_2125')
func_2128_call = mutated_mod.get_global_var('func_2128')
var_2372 = relay.var("var_2372", dtype = "float32", shape = (208,))#candidate|2372|(208,)|var|float32
call_2371 = relay.TupleGetItem(func_2125_call(relay.reshape(var_2372.astype('float32'), [8, 2, 13])), 0)
call_2373 = relay.TupleGetItem(func_2128_call(relay.reshape(var_2372.astype('float32'), [8, 2, 13])), 0)
output = relay.Tuple([call_2321,var_2322,bop_2344,bop_2367,call_2371,var_2372,])
output2 = relay.Tuple([call_2325,var_2322,bop_2344,bop_2367,call_2373,var_2372,])
func_2374 = relay.Function([var_2312,var_2313,var_2322,var_2323,var_2324,var_2372,], output)
mod['func_2374'] = func_2374
mod = relay.transform.InferType()(mod)
mutated_mod['func_2374'] = func_2374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2374_call = mutated_mod.get_global_var('func_2374')
var_2376 = relay.var("var_2376", dtype = "uint8", shape = (6, 12, 8))#candidate|2376|(6, 12, 8)|var|uint8
var_2377 = relay.var("var_2377", dtype = "uint8", shape = (6, 12, 8))#candidate|2377|(6, 12, 8)|var|uint8
var_2378 = relay.var("var_2378", dtype = "uint64", shape = (99,))#candidate|2378|(99,)|var|uint64
var_2379 = relay.var("var_2379", dtype = "int16", shape = (840,))#candidate|2379|(840,)|var|int16
var_2380 = relay.var("var_2380", dtype = "int16", shape = (108, 1))#candidate|2380|(108, 1)|var|int16
var_2381 = relay.var("var_2381", dtype = "float32", shape = (208,))#candidate|2381|(208,)|var|float32
call_2375 = func_2374_call(var_2376,var_2377,var_2378,var_2379,var_2380,var_2381,)
output = call_2375
func_2382 = relay.Function([var_2376,var_2377,var_2378,var_2379,var_2380,var_2381,], output)
mutated_mod['func_2382'] = func_2382
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2819 = relay.var("var_2819", dtype = "uint32", shape = (7, 14, 4))#candidate|2819|(7, 14, 4)|var|uint32
const_2820 = relay.const([[[4,-7,5,6],[1,3,-3,-2],[-9,-7,3,3],[-8,9,6,3],[-5,9,-2,-9],[2,-2,-10,3],[-1,10,6,7],[-8,10,-10,-6],[-3,-6,1,-10],[7,8,-6,-9],[-1,-9,2,-3],[-4,6,5,-8],[-8,-3,-10,-4],[5,-6,-10,8]],[[-4,2,-4,-8],[-7,-2,-10,-3],[7,-9,-9,7],[4,-4,10,8],[10,-2,5,5],[-6,-6,-9,7],[5,4,1,-9],[-7,-9,-7,-1],[-7,1,2,-3],[3,7,8,-2],[3,6,-9,9],[8,-1,5,9],[-4,3,8,-4],[-5,5,-8,6]],[[-4,5,7,-7],[2,-7,-1,-10],[-1,-1,-10,2],[-8,1,-5,-7],[-9,-10,6,9],[-7,-4,7,3],[8,-6,9,-6],[-4,-4,1,-8],[4,7,7,-6],[6,-5,6,10],[-4,-2,6,-1],[-4,9,-6,8],[-5,10,2,-8],[-7,-1,1,-9]],[[-2,9,1,-8],[6,-10,6,-4],[2,-5,-9,-3],[4,-9,7,-1],[1,7,-9,-4],[-4,-7,2,-3],[5,-1,9,-9],[9,-1,8,-7],[1,10,9,-4],[8,-3,-5,7],[4,-2,-3,9],[3,-10,1,9],[-1,3,2,-3],[1,3,4,-5]],[[9,3,-2,-3],[2,3,9,7],[-2,-10,-8,-7],[2,-6,-1,7],[2,-3,4,-7],[-7,2,-6,-8],[7,-5,2,5],[-3,10,-6,5],[7,-2,1,-7],[-4,8,8,-8],[-5,-10,-4,-1],[-8,10,-6,-9],[2,5,-3,-6],[3,-4,-10,-4]],[[5,2,-10,6],[-1,-9,-1,1],[-10,-9,-1,9],[-8,5,-7,-3],[-4,2,7,10],[-4,7,7,-9],[6,-1,2,1],[3,8,-4,2],[5,9,-2,9],[8,-1,4,2],[-7,-9,3,1],[-7,-7,9,10],[-5,-7,10,5],[2,2,8,-9]],[[9,6,-9,9],[5,8,7,-9],[7,-3,1,-4],[4,2,2,-8],[9,-4,-2,-6],[-10,10,-2,-2],[-6,7,-3,-2],[-9,-10,6,-3],[-6,5,9,-5],[-6,6,6,7],[3,9,7,4],[6,10,-3,-8],[9,5,3,-8],[-6,6,-4,-4]]], dtype = "uint32")#candidate|2820|(7, 14, 4)|const|uint32
bop_2821 = relay.logical_xor(var_2819.astype('uint32'), relay.reshape(const_2820.astype('uint32'), relay.shape_of(var_2819))) # shape=(7, 14, 4)
output = relay.Tuple([bop_2821,])
output2 = relay.Tuple([bop_2821,])
func_2830 = relay.Function([var_2819,], output)
mod['func_2830'] = func_2830
mod = relay.transform.InferType()(mod)
var_2831 = relay.var("var_2831", dtype = "uint32", shape = (7, 14, 4))#candidate|2831|(7, 14, 4)|var|uint32
output = func_2830(var_2831)
func_2832 = relay.Function([var_2831], output)
mutated_mod['func_2832'] = func_2832
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2842 = relay.var("var_2842", dtype = "float64", shape = (3, 13, 2))#candidate|2842|(3, 13, 2)|var|float64
uop_2843 = relay.sqrt(var_2842.astype('float64')) # shape=(3, 13, 2)
func_2002_call = mod.get_global_var('func_2002')
func_2005_call = mutated_mod.get_global_var('func_2005')
const_2847 = relay.const([-2.802305,6.462540,-8.921951,-2.586893,7.682164,-8.711108,-6.225566,-4.268336,-7.728511,-1.541997,3.202583,-3.622877,9.742898,9.151838,-3.528725,-5.627247,9.467790,7.616374,1.176231,3.601786,-0.433707,-1.177401,7.195090,8.543151,-2.246743,-3.813403,-9.957913,-3.532017,2.947853,-5.716711,4.279377,-1.882789,5.935583,-5.518471,-8.612512,1.314986,6.019183,5.148283,-7.441509,-7.748234,-7.990480,2.872930,-7.526393,-2.986773], dtype = "float64")#candidate|2847|(44,)|const|float64
call_2846 = relay.TupleGetItem(func_2002_call(relay.reshape(const_2847.astype('float64'), [4, 11, 1])), 0)
call_2848 = relay.TupleGetItem(func_2005_call(relay.reshape(const_2847.astype('float64'), [4, 11, 1])), 0)
output = relay.Tuple([uop_2843,call_2846,const_2847,])
output2 = relay.Tuple([uop_2843,call_2848,const_2847,])
func_2864 = relay.Function([var_2842,], output)
mod['func_2864'] = func_2864
mod = relay.transform.InferType()(mod)
mutated_mod['func_2864'] = func_2864
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2865 = relay.var("var_2865", dtype = "float64", shape = (3, 13, 2))#candidate|2865|(3, 13, 2)|var|float64
func_2864_call = mutated_mod.get_global_var('func_2864')
call_2866 = func_2864_call(var_2865)
output = call_2866
func_2867 = relay.Function([var_2865], output)
mutated_mod['func_2867'] = func_2867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2938 = relay.var("var_2938", dtype = "float32", shape = (10, 15, 9))#candidate|2938|(10, 15, 9)|var|float32
uop_2939 = relay.sinh(var_2938.astype('float32')) # shape=(10, 15, 9)
uop_2942 = relay.acos(var_2938.astype('float32')) # shape=(10, 15, 9)
bop_2949 = relay.bitwise_xor(uop_2939.astype('uint32'), relay.reshape(uop_2942.astype('uint32'), relay.shape_of(uop_2939))) # shape=(10, 15, 9)
bop_2954 = relay.floor_mod(uop_2939.astype('float64'), relay.reshape(bop_2949.astype('float64'), relay.shape_of(uop_2939))) # shape=(10, 15, 9)
var_2965 = relay.var("var_2965", dtype = "float32", shape = (10, 15, 9))#candidate|2965|(10, 15, 9)|var|float32
bop_2966 = relay.divide(var_2938.astype('float32'), relay.reshape(var_2965.astype('float32'), relay.shape_of(var_2938))) # shape=(10, 15, 9)
func_2002_call = mod.get_global_var('func_2002')
func_2005_call = mutated_mod.get_global_var('func_2005')
var_2970 = relay.var("var_2970", dtype = "float64", shape = (44,))#candidate|2970|(44,)|var|float64
call_2969 = relay.TupleGetItem(func_2002_call(relay.reshape(var_2970.astype('float64'), [4, 11, 1])), 0)
call_2971 = relay.TupleGetItem(func_2005_call(relay.reshape(var_2970.astype('float64'), [4, 11, 1])), 0)
output = relay.Tuple([bop_2954,bop_2966,call_2969,var_2970,])
output2 = relay.Tuple([bop_2954,bop_2966,call_2971,var_2970,])
func_2976 = relay.Function([var_2938,var_2965,var_2970,], output)
mod['func_2976'] = func_2976
mod = relay.transform.InferType()(mod)
mutated_mod['func_2976'] = func_2976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mutated_mod.get_global_var('func_2976')
var_2978 = relay.var("var_2978", dtype = "float32", shape = (10, 15, 9))#candidate|2978|(10, 15, 9)|var|float32
var_2979 = relay.var("var_2979", dtype = "float32", shape = (10, 15, 9))#candidate|2979|(10, 15, 9)|var|float32
var_2980 = relay.var("var_2980", dtype = "float64", shape = (44,))#candidate|2980|(44,)|var|float64
call_2977 = func_2976_call(var_2978,var_2979,var_2980,)
output = call_2977
func_2981 = relay.Function([var_2978,var_2979,var_2980,], output)
mutated_mod['func_2981'] = func_2981
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3192 = relay.var("var_3192", dtype = "bool", shape = (15, 16, 12))#candidate|3192|(15, 16, 12)|var|bool
var_3193 = relay.var("var_3193", dtype = "bool", shape = (15, 16, 12))#candidate|3193|(15, 16, 12)|var|bool
bop_3194 = relay.logical_and(var_3192.astype('bool'), relay.reshape(var_3193.astype('bool'), relay.shape_of(var_3192))) # shape=(15, 16, 12)
output = relay.Tuple([bop_3194,])
output2 = relay.Tuple([bop_3194,])
func_3199 = relay.Function([var_3192,var_3193,], output)
mod['func_3199'] = func_3199
mod = relay.transform.InferType()(mod)
mutated_mod['func_3199'] = func_3199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3199_call = mutated_mod.get_global_var('func_3199')
var_3201 = relay.var("var_3201", dtype = "bool", shape = (15, 16, 12))#candidate|3201|(15, 16, 12)|var|bool
var_3202 = relay.var("var_3202", dtype = "bool", shape = (15, 16, 12))#candidate|3202|(15, 16, 12)|var|bool
call_3200 = func_3199_call(var_3201,var_3202,)
output = call_3200
func_3203 = relay.Function([var_3201,var_3202,], output)
mutated_mod['func_3203'] = func_3203
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3347 = relay.const([[[7,-3,-9,10,-2,-5,-2,-1,-3,-10,2,7,10,-2],[-2,-4,-10,-7,6,4,10,-6,-2,-7,-7,-5,10,-6]],[[-4,3,1,-7,6,7,1,9,3,-6,-2,9,-1,-2],[-8,1,-7,10,-4,8,-10,4,-8,-5,-10,-5,-7,6]],[[1,-10,6,-1,-6,2,7,-1,-7,-8,-10,4,-5,6],[5,1,10,3,1,-9,-6,-8,-3,7,6,4,10,7]],[[9,9,-5,-8,-10,-9,8,7,-2,-4,-5,-4,-10,-6],[8,-6,-7,9,-5,-7,1,-5,7,-10,8,4,8,-4]],[[-8,-9,-4,-1,1,-4,-10,-1,-8,-7,-10,-4,4,-2],[9,1,6,4,-4,-2,-7,-9,-1,6,-7,-6,2,7]],[[-9,-8,-7,-6,6,5,-4,-3,5,-8,2,-8,8,8],[-4,-6,4,-3,-3,-3,10,-1,7,5,-7,10,8,-10]],[[2,6,3,-2,8,-9,6,-1,2,-1,7,-2,-1,-4],[10,3,2,-9,3,-5,9,-3,-7,-3,8,9,2,-10]],[[4,1,-7,-6,-6,-7,10,-2,-3,-6,-3,1,-7,-9],[-10,1,2,-7,-8,10,-2,5,-7,1,-3,-4,7,10]],[[-4,2,-7,-9,7,-7,-1,-9,6,-4,-10,-6,-3,-1],[-4,6,-7,5,3,2,9,7,8,4,-9,-8,-5,-3]],[[-5,-1,-5,-8,-9,-8,-4,-4,-2,5,-4,-6,9,-3],[-8,-5,5,1,-4,4,-1,-6,3,-2,-1,-4,7,-10]],[[-4,3,3,5,3,-8,7,2,4,-5,-10,-1,3,7],[-3,-8,-2,-9,8,-5,-3,10,6,-10,-10,7,-3,10]],[[-2,-7,4,2,-8,-2,-6,-7,-1,1,-7,-8,-7,6],[3,-7,2,2,1,1,6,4,-2,2,-6,-5,-5,1]],[[-9,-1,4,9,-2,-2,-6,2,8,-5,7,-8,-2,7],[5,9,-6,6,10,5,-8,-5,-10,6,3,10,1,-4]]], dtype = "uint32")#candidate|3347|(13, 2, 14)|const|uint32
var_3348 = relay.var("var_3348", dtype = "uint32", shape = (13, 2, 14))#candidate|3348|(13, 2, 14)|var|uint32
bop_3349 = relay.maximum(const_3347.astype('uint32'), relay.reshape(var_3348.astype('uint32'), relay.shape_of(const_3347))) # shape=(13, 2, 14)
output = bop_3349
output2 = bop_3349
func_3376 = relay.Function([var_3348,], output)
mod['func_3376'] = func_3376
mod = relay.transform.InferType()(mod)
mutated_mod['func_3376'] = func_3376
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3377 = relay.var("var_3377", dtype = "uint32", shape = (13, 2, 14))#candidate|3377|(13, 2, 14)|var|uint32
func_3376_call = mutated_mod.get_global_var('func_3376')
call_3378 = func_3376_call(var_3377)
output = call_3378
func_3379 = relay.Function([var_3377], output)
mutated_mod['func_3379'] = func_3379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3448 = relay.var("var_3448", dtype = "float32", shape = (2, 8, 9))#candidate|3448|(2, 8, 9)|var|float32
var_3449 = relay.var("var_3449", dtype = "float32", shape = (2, 8, 9))#candidate|3449|(2, 8, 9)|var|float32
bop_3450 = relay.equal(var_3448.astype('bool'), relay.reshape(var_3449.astype('bool'), relay.shape_of(var_3448))) # shape=(2, 8, 9)
func_2125_call = mod.get_global_var('func_2125')
func_2128_call = mutated_mod.get_global_var('func_2128')
const_3483 = relay.const([-3.515136,-6.445239,-2.112091,3.806237,-4.232146,4.271280,-2.975504,4.622452,-8.612445,-4.433696,-2.988426,4.511004,2.928376,1.623698,6.336704,1.480009,-8.705647,6.210271,0.494242,-2.845110,4.127674,-6.159779,-3.851817,-8.445843,-8.649010,-4.396244,6.315852,-2.386974,-2.196065,-1.491237,8.248611,1.290086,3.658506,4.443386,7.975541,-7.916538,6.441761,9.865942,-3.523187,1.990697,-8.084953,1.340021,7.132844,-4.123973,-7.322252,5.597280,-8.805011,0.106009,-5.785488,-6.408739,-8.506962,-5.199829,3.543633,-0.826260,-8.377681,5.591516,8.040329,-1.199634,-3.728011,-6.319286,8.010328,-9.898823,-5.444401,2.757560,-6.782185,4.054685,-6.976963,8.932447,9.549914,6.361988,5.137384,-7.418655,-3.282251,5.446133,5.973551,9.215158,3.752018,8.179220,4.256657,-0.279475,-9.933107,-2.120508,-4.630934,5.238149,7.480745,3.998287,7.829596,5.802200,-4.879656,-0.569303,-5.716609,7.681695,8.433581,-2.405474,8.479260,0.684403,-9.067455,2.580315,5.382657,-8.711735,9.519685,5.964406,2.171206,-9.626012,1.966895,5.161767,-3.546395,1.686216,8.128510,-1.711246,3.256427,8.539431,-5.490348,-8.405097,9.009378,-9.575716,-5.058247,3.976668,6.303643,1.805760,-5.596897,-6.307466,2.074474,-0.717597,1.851651,-9.531226,-5.008977,-4.513841,-3.510900,-7.702040,4.861973,-4.914053,-0.489167,4.239428,-6.565583,-9.308663,-0.880878,0.913532,1.429320,-4.684334,0.788142,1.852090,-7.321700,-3.440116,-6.679379,-8.417263,9.973941,3.245947,-0.278099,4.705086,6.731331,2.182061,1.355743,-8.195914,8.186070,4.575061,3.523209,-6.579226,2.662620,-2.078657,-9.260690,8.622797,3.533904,6.266141,-6.543341,-4.613401,5.965393,6.901953,5.111965,4.422276,-1.748581,7.765969,8.499514,-6.613690,-4.033828,-0.654520,9.951895,-8.720917,-4.076606,8.934349,2.329569,-3.984604,2.711892,4.408964,7.669554,3.491355,2.164176,8.820237,6.468928,2.420511,-5.685828,-0.763251,-3.537623,0.616374,-7.913318,3.539426,-8.866251,-7.632180,3.636882,-5.712841,-3.092905,-0.402752,-3.580583,-9.520230,9.394195,8.574056,4.892628,-7.465713], dtype = "float32")#candidate|3483|(208,)|const|float32
call_3482 = relay.TupleGetItem(func_2125_call(relay.reshape(const_3483.astype('float32'), [8, 2, 13])), 0)
call_3484 = relay.TupleGetItem(func_2128_call(relay.reshape(const_3483.astype('float32'), [8, 2, 13])), 0)
func_262_call = mod.get_global_var('func_262')
func_265_call = mutated_mod.get_global_var('func_265')
var_3488 = relay.var("var_3488", dtype = "float64", shape = (352,))#candidate|3488|(352,)|var|float64
call_3487 = relay.TupleGetItem(func_262_call(relay.reshape(var_3488.astype('float64'), [4, 8, 11])), 1)
call_3489 = relay.TupleGetItem(func_265_call(relay.reshape(var_3488.astype('float64'), [4, 8, 11])), 1)
bop_3501 = relay.logical_xor(bop_3450.astype('int64'), relay.reshape(var_3449.astype('int64'), relay.shape_of(bop_3450))) # shape=(2, 8, 9)
uop_3507 = relay.cos(bop_3501.astype('float64')) # shape=(2, 8, 9)
bop_3514 = relay.minimum(bop_3450.astype('uint16'), relay.reshape(bop_3501.astype('uint16'), relay.shape_of(bop_3450))) # shape=(2, 8, 9)
output = relay.Tuple([call_3482,const_3483,call_3487,var_3488,uop_3507,bop_3514,])
output2 = relay.Tuple([call_3484,const_3483,call_3489,var_3488,uop_3507,bop_3514,])
func_3520 = relay.Function([var_3448,var_3449,var_3488,], output)
mod['func_3520'] = func_3520
mod = relay.transform.InferType()(mod)
mutated_mod['func_3520'] = func_3520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3520_call = mutated_mod.get_global_var('func_3520')
var_3522 = relay.var("var_3522", dtype = "float32", shape = (2, 8, 9))#candidate|3522|(2, 8, 9)|var|float32
var_3523 = relay.var("var_3523", dtype = "float32", shape = (2, 8, 9))#candidate|3523|(2, 8, 9)|var|float32
var_3524 = relay.var("var_3524", dtype = "float64", shape = (352,))#candidate|3524|(352,)|var|float64
call_3521 = func_3520_call(var_3522,var_3523,var_3524,)
output = call_3521
func_3525 = relay.Function([var_3522,var_3523,var_3524,], output)
mutated_mod['func_3525'] = func_3525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3656 = relay.var("var_3656", dtype = "uint8", shape = (5, 13, 8))#candidate|3656|(5, 13, 8)|var|uint8
var_3657 = relay.var("var_3657", dtype = "uint8", shape = (5, 13, 8))#candidate|3657|(5, 13, 8)|var|uint8
bop_3658 = relay.subtract(var_3656.astype('uint8'), relay.reshape(var_3657.astype('uint8'), relay.shape_of(var_3656))) # shape=(5, 13, 8)
output = relay.Tuple([bop_3658,])
output2 = relay.Tuple([bop_3658,])
func_3669 = relay.Function([var_3656,var_3657,], output)
mod['func_3669'] = func_3669
mod = relay.transform.InferType()(mod)
mutated_mod['func_3669'] = func_3669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3669_call = mutated_mod.get_global_var('func_3669')
var_3671 = relay.var("var_3671", dtype = "uint8", shape = (5, 13, 8))#candidate|3671|(5, 13, 8)|var|uint8
var_3672 = relay.var("var_3672", dtype = "uint8", shape = (5, 13, 8))#candidate|3672|(5, 13, 8)|var|uint8
call_3670 = func_3669_call(var_3671,var_3672,)
output = call_3670
func_3673 = relay.Function([var_3671,var_3672,], output)
mutated_mod['func_3673'] = func_3673
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3750 = relay.const([[[1.582459,-5.536423,-5.103134,-9.762339,9.443493,7.844536,0.127189,3.339112,-4.282997,-9.355215,-0.533220,-8.137485],[-1.031495,-7.896474,-8.448158,-1.601232,1.235922,4.372807,0.184870,0.504767,-5.940346,5.018097,-9.889768,-9.816802]],[[-7.477377,7.267873,-8.861582,-2.565109,6.221855,1.276135,-6.335040,3.961450,-0.563126,-7.805968,-5.389403,8.422739],[-1.090580,4.517894,7.820030,7.893465,-7.872617,0.747308,-8.868961,-9.717858,-7.641498,2.922320,0.650595,-3.220544]],[[1.374015,1.672159,-8.981071,-1.155772,3.437453,0.259743,9.423427,6.415342,-6.259846,-3.635069,-1.582727,-7.910070],[0.017073,-3.862894,-1.556625,-6.161079,9.264585,-2.145616,-1.501534,-9.032371,-4.201405,9.691636,-5.812516,6.640088]],[[5.850470,6.547513,-5.278763,-0.554424,9.618096,-2.626591,-5.691079,1.241349,-3.638646,4.529268,-2.516299,5.820452],[-8.273010,-6.621764,6.603062,6.277412,-7.637794,-2.509536,-6.304595,-5.731873,8.300015,5.106279,7.273596,1.002210]],[[-0.358703,8.110782,-5.344011,9.724954,9.178762,0.966524,-4.274992,0.991037,2.651887,0.579322,-3.175283,2.243708],[8.681580,6.847609,1.354794,-7.662676,-1.682619,-0.616283,-6.679642,3.067776,-1.921996,-6.626258,2.031117,4.141507]]], dtype = "float32")#candidate|3750|(5, 2, 12)|const|float32
uop_3751 = relay.sigmoid(const_3750.astype('float32')) # shape=(5, 2, 12)
bop_3753 = relay.bitwise_or(uop_3751.astype('uint16'), relay.reshape(const_3750.astype('uint16'), relay.shape_of(uop_3751))) # shape=(5, 2, 12)
bop_3767 = relay.less(bop_3753.astype('bool'), relay.reshape(const_3750.astype('bool'), relay.shape_of(bop_3753))) # shape=(5, 2, 12)
func_2374_call = mod.get_global_var('func_2374')
func_2382_call = mutated_mod.get_global_var('func_2382')
var_3780 = relay.var("var_3780", dtype = "uint8", shape = (576,))#candidate|3780|(576,)|var|uint8
var_3781 = relay.var("var_3781", dtype = "uint64", shape = (99, 1))#candidate|3781|(99, 1)|var|uint64
var_3782 = relay.var("var_3782", dtype = "int16", shape = (840,))#candidate|3782|(840,)|var|int16
var_3783 = relay.var("var_3783", dtype = "int16", shape = (54, 2))#candidate|3783|(54, 2)|var|int16
const_3784 = relay.const([1.921881,-4.600119,9.073628,9.599098,-1.311036,1.840553,-3.580497,7.366244,6.770271,-4.978472,6.997506,3.169480,5.071339,4.858868,0.891265,7.498979,8.896850,6.649969,-1.893204,3.097296,7.712172,-5.550174,5.131220,-1.011364,1.743523,8.006972,7.645390,-3.316171,2.617944,-1.089513,3.642121,6.843567,8.299576,6.819341,-0.224062,-8.882451,3.670279,6.042716,-6.336707,-2.453442,-4.216239,-2.695327,-9.359396,-7.348812,-5.457747,-9.449271,6.281429,-8.908818,8.604982,-9.160946,-9.183857,8.571930,3.778626,-6.520289,-3.289662,-5.178545,2.899571,-3.344045,0.006378,3.380726,6.599171,-0.457476,-7.212113,2.231778,-8.269035,0.657402,-3.047769,0.288649,1.659038,6.640805,-8.153757,-7.855307,-4.811737,8.515161,6.999603,5.356528,2.709965,1.336733,-8.751926,8.182457,7.144469,-0.931813,9.744749,6.091644,9.323624,-9.074154,-9.075194,5.937718,0.351868,7.399734,-9.608372,-9.534435,-1.202923,8.302537,-8.777693,9.920018,0.682444,-8.573528,4.528934,6.086509,-7.434614,-5.133829,-5.507162,-2.933355,7.642005,-5.182828,-6.821177,1.037672,0.353282,-1.227794,8.101047,9.400139,0.917495,7.694561,0.814842,6.215887,-6.607950,4.098799,-6.976358,-5.420843,7.900285,6.393162,8.366968,-2.063343,5.934006,7.650778,-2.989361,8.636727,-8.703038,7.455681,5.905579,7.266628,-5.951144,-6.768253,-1.483189,-9.194444,8.618790,-7.983974,-6.683276,2.262519,2.513535,-7.243697,0.431424,5.785780,-6.594463,-0.980474,6.604917,8.087046,-3.292919,-4.546177,4.458154,-3.412775,-1.083825,5.926165,2.979690,-4.384643,6.072733,-3.536758,-0.094099,-2.037486,-8.143549,-3.093175,7.671786,-8.990641,1.425343,-4.722970,0.769840,-8.641197,9.065780,5.522239,-4.252985,1.263373,-6.424373,9.562578,7.248615,-1.877156,-7.746359,-3.489233,-0.477646,3.081563,6.387839,-4.227945,-5.619952,3.526006,6.826888,-6.839713,-2.052522,0.026171,2.654023,-5.585206,4.701333,6.534966,0.249210,0.010673,-2.600444,-8.695638,-6.792200,-2.764996,1.326663,1.393729,-9.146155,-6.523610,2.923458,-5.797021,-0.609754,-8.230809,3.057619,8.066362], dtype = "float32")#candidate|3784|(208,)|const|float32
call_3779 = relay.TupleGetItem(func_2374_call(relay.reshape(var_3780.astype('uint8'), [6, 12, 8]), relay.reshape(var_3780.astype('uint8'), [6, 12, 8]), relay.reshape(var_3781.astype('uint64'), [99,]), relay.reshape(var_3782.astype('int16'), [840,]), relay.reshape(var_3783.astype('int16'), [108, 1]), relay.reshape(const_3784.astype('float32'), [208,]), ), 0)
call_3785 = relay.TupleGetItem(func_2382_call(relay.reshape(var_3780.astype('uint8'), [6, 12, 8]), relay.reshape(var_3780.astype('uint8'), [6, 12, 8]), relay.reshape(var_3781.astype('uint64'), [99,]), relay.reshape(var_3782.astype('int16'), [840,]), relay.reshape(var_3783.astype('int16'), [108, 1]), relay.reshape(const_3784.astype('float32'), [208,]), ), 0)
func_3520_call = mod.get_global_var('func_3520')
func_3525_call = mutated_mod.get_global_var('func_3525')
var_3792 = relay.var("var_3792", dtype = "float32", shape = (144,))#candidate|3792|(144,)|var|float32
const_3793 = relay.const([4.717919,8.475972,2.470141,0.667205,-8.526906,8.848422,-9.711376,9.486668,4.729495,-0.030404,-3.888420,2.166711,-8.897535,-7.436611,-7.999643,1.931352,1.489499,7.794652,8.768227,3.862627,9.295151,1.484593,-1.427867,6.931517,-3.400126,5.793816,-6.375230,-7.606925,-5.751484,-2.503741,6.764120,6.900299,-1.506107,2.960614,0.095758,5.648524,-9.514222,-9.287937,-6.445538,-3.936086,-3.407811,7.991415,-9.912117,9.862602,-7.511009,-0.804117,-5.239491,8.060462,-8.789432,-7.296315,9.198701,9.504875,-6.592998,-4.481514,8.697621,9.144007,-5.573786,-5.455087,-4.447015,7.337402,8.370326,1.468292,4.975646,-1.201681,0.904299,-8.705785,-8.886434,-1.498170,3.915161,7.522063,0.350931,-5.929413,-0.187812,8.028719,4.617914,5.829518,-4.400185,-6.001064,1.705826,2.537056,7.797534,5.475592,4.213553,-5.438362,-0.036283,2.177277,7.263996,0.019131,-4.428977,-1.631044,-0.326736,-9.485993,-7.261225,-9.092395,3.277088,1.431145,1.434681,3.176649,-1.108447,-2.467565,0.135271,3.685562,4.776775,-3.464583,7.239552,9.391984,8.087307,-7.579081,-1.074478,6.361507,-4.045127,-9.204118,-1.476960,1.774639,-9.591376,5.572863,5.550724,-3.718315,-3.827587,9.667831,6.673288,4.360851,-3.899676,1.027748,-6.274964,1.210007,3.165822,1.273427,1.897413,-4.068558,-2.369665,2.232422,-1.809262,-1.756397,5.990753,-1.890176,9.775197,5.183652,7.164021,-0.267348,8.910760,9.878682,-2.082738,-9.879956,3.907349,3.157424,3.934256,2.894940,-9.681815,-5.491449,5.491028,-7.832667,-4.485847,2.542615,-6.059824,6.592306,1.540928,-1.518485,3.545907,0.996523,-4.788106,-7.294192,5.136777,1.135326,-0.262634,3.420755,5.061247,-3.834870,2.474786,1.377022,4.996715,-6.246389,4.127299,-9.507317,9.752481,8.728344,-8.782028,6.805560,-6.952282,9.726085,-6.394652,-8.716944,6.267882,9.945849,-2.671398,-3.639891,-7.260630,-1.375931,-4.127905,-5.320800,-7.086539,2.648358,-1.078390,7.876999,1.176078,9.860093,4.864850,4.878988,-2.691134,-7.179363,-7.535845,-3.813862,6.855730,-1.384499,-4.766857,6.365371,0.083600,6.436567,-3.712384,-4.830552,-2.093330,5.713758,6.000440,-8.478373,-5.502956,7.305144,8.275990,0.396767,-8.524132,-8.831324,-0.374054,-0.580825,-6.538316,7.585926,-1.296913,3.515887,9.737390,-2.289854,8.430205,-5.099658,0.426158,-8.566891,-0.660924,3.094287,-8.981556,1.007523,-6.286939,-5.271276,6.337668,7.489460,3.746279,-6.812714,5.960272,2.963899,9.894388,-1.123782,1.130080,-5.575172,-6.204072,2.823698,4.886049,-8.706622,-1.999623,6.316961,-6.576515,2.221572,7.427442,2.409446,-8.773569,1.558680,-1.722418,8.626322,3.892872,5.182941,4.744379,-1.782310,2.595384,-3.449786,0.897657,-2.189760,-1.224849,0.818414,4.918274,4.863176,7.922846,-2.777889,-8.590554,-5.896090,2.932715,-0.668950,-0.266854,8.229574,9.987259,1.032284,2.081461,-2.595698,0.103454,6.670773,-3.394931,-9.318180,-0.780357,-1.517137,-8.841716,-3.372495,-4.196738,8.855933,3.103442,8.069101,-9.433482,8.637414,-7.710180,-7.266041,6.398801,-9.303110,-3.828721,5.992848,4.562435,8.192606,-5.627626,7.279859,-4.714251,4.708218,-6.490318,-4.710073,8.544088,-6.894540,-2.481786,1.792748,4.190298,8.596222,4.009116,-6.229621,-8.465345,-1.001598,0.962275,-9.985807,-0.797916,3.003764,-1.935412,-3.900565,0.598598,1.676804,8.595611,7.698935,-2.001725,-3.473025,2.926988,2.571720,-9.986722,5.888319,7.656887,-7.226403,0.596987,-8.972417,5.305643,-3.285701,-4.579493,-7.917303,-4.900217,-8.801998,3.443230,-8.766533], dtype = "float64")#candidate|3793|(352,)|const|float64
call_3791 = relay.TupleGetItem(func_3520_call(relay.reshape(var_3792.astype('float32'), [2, 8, 9]), relay.reshape(var_3792.astype('float32'), [2, 8, 9]), relay.reshape(const_3793.astype('float64'), [352,]), ), 3)
call_3794 = relay.TupleGetItem(func_3525_call(relay.reshape(var_3792.astype('float32'), [2, 8, 9]), relay.reshape(var_3792.astype('float32'), [2, 8, 9]), relay.reshape(const_3793.astype('float64'), [352,]), ), 3)
func_2976_call = mod.get_global_var('func_2976')
func_2981_call = mutated_mod.get_global_var('func_2981')
const_3796 = relay.const([6.736378,9.614695,-1.550567,-8.693972,0.438007,-3.331903,-3.658224,7.295890,-4.214424,6.581788,8.816319,-3.816369,9.656287,7.101214,-0.666384,-1.175577,-5.807154,-4.878456,-3.281121,0.367076,4.516754,-6.575109,-3.945933,-7.574418,-0.457604,-3.856081,-2.619406,7.914896,5.399178,-1.400511,-1.984265,9.479124,-7.541070,3.249814,4.324461,-2.838323,7.526259,-8.052987,-9.233033,-9.582288,2.342238,-7.028694,2.764388,8.459909,2.219316,-7.033825,-1.915764,-5.221365,6.660588,8.554498,-7.680273,5.923046,-3.351193,4.243031,-2.805780,3.764240,-5.471859,0.108456,-6.876704,-7.739914,-3.202366,9.623195,8.803405,4.034558,6.066396,6.706731,-1.506933,1.445438,-8.849311,2.830660,-2.782280,-4.810437,9.087977,-4.073152,-2.593824,5.275958,-7.773005,1.853316,-4.491666,-0.932310,-8.304696,1.304429,0.724681,5.976763,2.438816,-9.248898,-0.067696,8.890448,2.355867,4.081858,-0.505951,-5.607673,5.795391,-9.719619,2.745795,8.920380,-8.304154,-0.497663,-3.819461,-2.535680,1.483426,7.833477,0.548542,9.377279,9.684991,1.183913,2.593080,-4.320378,6.795125,-7.934232,5.228325,-8.563334,-2.216407,3.839242,6.122116,-8.056429,3.938111,-1.718641,-9.638805,2.638758,-2.699759,-4.819686,-5.961637,-8.534748,9.978771,-9.063761,-6.245800,9.073362,-0.688613,9.271230,-2.055955,-4.072479,-2.088254,-9.470235,-5.960410,-5.554412,-2.083680,-5.167064,4.973611,3.865655,8.854570,5.550155,-4.900695,-4.329844,-9.978605,-3.336968,2.701244,-7.203816,8.088674,4.082958,-1.221231,-9.798167,-0.301250,8.409779,4.308266,-6.333981,3.158238,3.193523,-6.963969,-2.078522,9.345482,2.289346,3.563583,-7.846208,3.333739,-2.990189,0.984718,-1.546587,2.413187,7.683358,-1.606155,2.245414,-3.973823,-6.794595,-0.605965,6.415091,3.896641,-0.724567,-9.405802,-0.466093,-2.177407,5.294934,6.908368,2.514110,8.444759,-3.545348,2.527594,4.310677,-6.598512,-0.588147,-1.144050,-5.231088,5.604183,-9.047177,-2.557473,3.440435,0.932313,-4.709402,-3.390804,5.215511,5.313232,-4.772384,2.033349,-0.314771,8.007317,-3.901645,-4.960582,6.334203,-3.712686,3.402876,-6.207710,3.583115,7.644689,4.057526,-8.953895,4.504621,-1.369689,-5.673020,-1.391809,5.240914,3.838572,6.370753,-9.444842,1.131640,8.056677,8.325507,1.687523,0.091997,4.204614,8.134504,-6.609970,9.060620,-8.837079,-8.328544,-4.575406,-1.045382,-2.214688,4.381776,-0.193854,5.734569,1.630591,-2.848819,5.187865,7.730178,-0.999942,-3.254611,7.339671,0.804942,1.385193,-5.532013,7.954856,-7.753135,9.004476,-6.260000,-4.537229,1.083489,2.685889,7.970808,8.388987,6.050941,9.723486,-8.294106,7.113765,-7.769131,-6.230869,-4.405722,4.318700,0.030712,-6.038531,-2.226830,7.608795,-4.071503,9.613433,7.628615,-5.898433,-6.964827,8.738847,-8.024370,-3.602933,7.313353,-1.230679,-4.232752,-7.466682,-4.344632,-5.219064,-4.449756,-6.238117,-1.535939,-4.786035,-8.622678,-3.730176,-0.516066,-7.625034,-4.425782,2.771842,7.910602,7.465093,5.226171,9.712230,-6.889733,-6.984402,3.147666,1.959618,1.940522,7.566647,-8.432189,-7.362849,3.963023,7.615358,-6.785888,-8.019889,-4.915923,6.764953,8.552661,9.602893,-2.026865,-3.767902,-5.711049,6.088612,2.602562,-9.627417,-2.917425,-0.714960,7.707991,5.467942,-1.894255,1.469181,4.200314,-1.163269,2.082714,-3.341168,-2.070203,9.367006,-9.616138,-9.840814,0.067842,8.771503,3.182733,-2.606539,-7.168983,-5.504828,9.118658,8.131101,6.344293,3.214570,-3.246909,-7.086278,1.441166,4.242922,4.082666,0.582200,-1.338931,-2.423558,6.252918,-0.209308,1.036724,-1.736883,-8.977793,0.602634,-5.041576,-1.349384,4.510261,8.345168,-2.876729,-0.262060,-0.079876,5.448922,1.411021,-2.925759,-1.586899,-0.336144,-9.190449,-4.064865,-4.845142,-1.741467,-9.036438,1.352719,3.686496,-9.458444,-1.698847,8.170826,6.883058,3.320244,7.972876,0.430288,0.091263,6.962992,-0.621262,-1.512481,1.079403,0.254062,-8.239424,8.492846,2.451879,5.738989,5.571269,-8.681962,2.863707,2.790226,-3.357960,-8.541647,-7.974835,1.635965,3.930004,4.325447,-2.582472,3.853952,-7.930164,-9.530495,-7.576613,8.671149,8.731395,-7.578804,9.009828,0.166693,-6.036847,3.287426,6.058685,-5.013472,9.367499,3.078706,-3.450505,-5.623039,-6.544224,1.605604,-3.209120,-5.997724,-6.758163,3.640655,-7.625935,7.272401,-5.798228,0.237213,3.267068,9.494524,5.465288,-5.551763,3.013316,-2.100742,-5.130917,-5.110211,-9.015274,-2.895018,-6.545818,7.870461,-0.265868,3.437495,4.470636,-7.359727,-7.255600,1.606633,-9.604195,-8.216708,-4.711817,6.526000,-3.307020,-7.911849,-6.882627,6.609077,-3.820493,0.245983,-1.206348,1.929273,3.756164,-6.269768,1.936412,-1.649187,-5.086784,5.834388,9.999447,2.181453,8.752872,3.830149,-6.252881,-3.471901,8.356200,8.760143,-8.777622,5.265250,-0.557126,-7.529181,-5.511458,9.959884,9.243263,5.223963,-0.600493,-6.877965,-0.241868,6.365121,-3.880781,3.619733,-8.452754,7.595662,-9.587094,-5.698532,0.162907,-8.833234,8.009759,-6.390823,5.059932,-1.595234,-2.932389,6.119144,-2.994625,2.171130,-0.941823,-5.939518,1.448362,2.394506,-7.877795,-0.120189,-9.508729,9.876113,-5.429957,-4.754818,-4.329552,5.637363,6.102474,6.337500,-2.171637,4.339862,-9.224432,5.803879,6.833058,7.121573,-9.261435,3.194912,-4.780736,7.784930,-3.750832,-2.135808,-0.345470,2.338170,-2.487694,3.415204,7.883156,0.357488,-8.804330,9.049974,-3.886221,8.758762,-3.212252,1.351553,-2.287390,-9.065246,5.912023,4.995364,-4.723658,8.056698,9.435678,3.222704,7.468430,-8.367497,4.974481,-4.456879,-9.296407,6.703494,-2.559803,-6.815548,3.658073,-0.572288,8.482631,-6.756313,-5.481057,6.211477,-1.424403,4.457806,2.445612,4.517920,4.781286,-9.143586,5.764621,6.788099,4.841515,-2.575092,-9.128590,2.961479,-6.128522,7.132970,6.611745,7.048232,-7.963380,-9.005365,-7.624792,-8.331747,5.674871,-7.235770,-3.513765,-5.755114,8.844326,-3.762583,0.643044,4.576330,5.734514,2.014940,5.367987,-5.540925,6.468638,-2.660546,-3.454850,3.509342,4.427182,2.179772,3.451008,6.633455,-3.220185,-7.212052,3.355906,-1.031600,9.623778,-3.238699,-9.196276,-6.625080,0.914174,2.286869,1.223836,4.616781,-5.668138,7.465185,-3.633178,-3.311607,-9.666883,2.882645,6.429099,3.598812,1.573754,3.158574,-3.799021,9.093559,-1.909168,-5.755108,0.090215,9.031901,-8.137988,-2.462059,6.215641,1.042397,5.663744,-3.075004,-9.254246,2.915316,9.901704,2.875947,-3.308524,7.459781,-3.038713,0.100152,8.881005,2.912583,5.456275,-9.680971,9.138398,-2.197897,-0.120280,1.479040,-6.650464,-7.988838,2.646281,-8.111429,-4.332588,1.443202,3.872889,1.261210,2.865691,-6.839916,-6.443490,5.164530,-6.198929,-2.582796,-3.829399,-4.996414,5.765997,-0.189715,-7.134021,-9.326928,-3.758081,8.649002,-2.436542,-5.562769,-5.622695,-8.417506,-7.941935,-3.475230,-9.934777,7.872340,-3.535934,5.088185,3.629588,-0.592923,-8.541931,-5.287352,-1.268087,-3.206103,-1.328069,-3.580566,9.713912,1.728410,3.899426,1.231647,6.033387,-4.311578,-6.455270,5.268785,-6.623545,2.889753,-3.315760,0.798379,-4.102368,-7.039240,5.958104,2.991736,7.503952,-6.547002,-5.838972,-2.884236,-6.985064,3.013222,0.825795,-8.838410,-2.606710,-0.049154,-5.577010,-5.804635,-9.615882,2.125757,1.801332,-6.363446,-9.042468,0.687750,-6.688875,-0.910144,6.750521,1.080284,-9.262032,-9.073980,-2.526947,5.249946,-0.258019,7.004636,-5.102921,-4.902419,3.862918,2.174728,8.018492,-9.401728,-0.835281,2.456740,-5.752656,-6.200138,-5.683073,3.123555,-8.329208,3.811662,-3.930717,8.025828,-7.416975,9.650361,-2.407254,7.340142,6.016255,-5.439186,-3.415827,8.180881,-5.258146,6.218963,-8.409096,3.981881,2.981344,-4.580413,2.398596,7.741403,3.249848,9.907533,2.141411,-4.248469,-1.602829,-8.911628,-3.517091,2.979411,-4.624285,0.501580,-4.404502,9.290716,-7.268029,2.410160,2.373506,2.400704,3.172865,-4.930658,3.406858,-8.256767,4.423011,-6.244419,-2.794625,6.385665,-7.202242,-6.367516,6.058419,-2.158894,1.418045,-9.978630,-2.184276,9.203033,-0.847411,-2.617180,-7.361697,-4.763205,-4.674768,1.842948,-0.727580,6.398582,-8.015213,4.449743,2.519821,4.771568,-0.371106,2.404421,6.249054,-7.786836,-4.493062,7.288948,1.928170,0.647107,-7.340687,5.418767,9.364387,9.022557,-3.535958,5.519706,-4.320494,-5.981182,-4.834642,-7.060575,-5.863796,-6.818529,9.536015,-9.433757,0.671102,-4.024335,-2.427013,-9.093941,-7.618141,9.794799,4.154042,-0.186796,7.679059,-8.385577,-0.138229,7.569701,0.911086,-5.435896,1.972513,-5.333879,-2.773370,-8.170499,-8.994062,-5.006220,-5.694607,5.547778,-7.264511,-2.744631,-4.717241,-5.217359,3.148766,1.584753,4.487988,5.382633,-7.562759,8.636616,6.834743,-2.034804,-4.528522,-9.651954,-2.358736,-5.417131,-8.161068,5.654506,8.798856,9.095907,9.114554,-4.741012,-7.200763,-1.282923,8.417657,1.059863,0.526535,-9.864072,-5.934710,3.806297,-6.196051,-9.403377,-8.974960,5.391480,2.210630,-3.403086,5.777095,8.412490,-1.134542,4.113757,6.553944,-6.600560,-4.778521,-9.334704,-7.509152,5.856978,-3.057893,2.524143,6.062475,-6.670695,5.265615,-0.142669,7.798755,2.874917,4.877741,3.907264,2.820705,0.630275,-7.620870,7.384771,5.826440,1.741515,-9.538902,-1.477674,5.557376,-1.278009,5.622238,-6.816063,-2.218982,9.658553,-9.137939,-1.745413,-6.798103,4.574882,2.062114,8.902618,2.259056,-7.657130,1.031511,-0.934568,-3.889635,-9.704573,7.166911,-8.063166,-2.384333,3.279868,0.495528,-6.309455,0.370357,-9.453123,-0.815364,-8.912784,8.657235,5.987418,8.458372,3.145809,-6.465378,-8.139599,-0.801475,2.894696,-0.134021,0.529424,-2.671881,6.450989,1.498412,3.093155,-1.663609,-4.007286,-3.647407,-4.987159,9.983644,2.851142,8.486563,4.449464,0.016446,-6.650887,1.745785,3.749470,-4.947082,7.532774,-7.640092,7.129095,-6.846766,-8.841763,-9.438741,3.035041,3.172256,9.677803,-3.237030,-2.501648,-0.866078,3.548532,5.771155,7.605424,3.623778,8.324345,2.894914,-7.754593,-4.324269,5.096056,-1.938856,-7.113669,7.034424,-4.755549,-5.298737,7.812727,-9.472152,-5.480202,8.986621,6.054959,9.917072,3.016600,4.774154,-0.033519,-1.592998,-4.268965,-8.575853,-4.144170,8.129933,9.663994,-2.158152,-2.980174,7.349560,-9.934474,-1.183797,-1.872130,-2.378413,0.471499,5.671618,-1.045000,9.094454,-7.794699,9.080548,6.844367,-2.746458,4.547764,-7.656047,5.946606,-3.523366,-6.326098,6.196603,-3.923344,-0.102640,1.043619,-1.544976,-1.827352,0.442479,7.443289,4.805375,2.013684,-9.430643,-6.415990,-7.752573,-1.768015,4.728260,0.999289,4.420353,9.087543,5.737486,-5.970450,-1.464193,4.587918,0.760994,-9.427224,-7.914071,-3.592942,-5.715766,3.249790,-9.186671,-1.927575,-5.535331,-8.708108,1.401531,-0.576632,0.733134,-7.472688,7.046969,7.159369,9.733954,0.703702,7.706642,-7.916867,3.451191,-9.837358,3.983455,0.747403,-1.950296,-6.737045,0.144734,6.790605,8.956786,-1.620682,5.570001,0.652658,-1.272936,-3.010015,1.089343,6.306039,-5.009150,-2.709989,-8.224104,-1.673203,-6.224941,1.811441,3.935648,-1.898100,-3.532724,3.819795,-8.410062,-3.190723,0.623012,-4.609402,8.981590,2.532595,1.676054,-6.095914,-3.076335,-1.203917,3.868527,-5.513519,-8.725440,7.885779,-7.940011,4.148875,7.228969,4.814765,-4.787570,9.799686,7.358098,-5.175803,3.954325,8.820513,7.532636,-2.180667,7.936346,5.458415,9.594232,-1.885667,2.815376,-8.061789,-9.608391,7.830327,1.696456,-1.238056,-4.428595,3.998560,5.663733,9.023350,-7.542360,5.068856,-7.736003,-4.893604,4.305070,8.273462,-4.015814,-4.276451,1.461426,4.469243,-0.554212,-4.389962,-4.796399,-7.375231,-3.691975,-2.728040,8.314269,-2.122937,-4.086532,5.396953,7.980357,-8.669437,-5.824560,-5.246151,7.062720,-8.873101,-0.455510,-3.580720,-4.268234,-4.379522,-8.549858,-4.613891,7.807087,5.285256,7.588307,9.472450,-2.348224,-3.145936,-4.492554,-7.369893,-0.380646,-3.678575,4.472769,-8.596638,6.092748,-9.760788,2.726746,-6.242034,7.683287,5.702483,-3.064254,-5.341499,-7.430628,-4.610364,2.540695,-3.501483,8.339172,-9.972992,3.488566,4.929600,-1.413177,-7.402108,-1.276422,-0.654532,0.112339,-4.789570,-7.027065,-6.504237,2.549371,-0.801039,7.723067,-3.144591,4.162627,-5.686323,7.648828,9.125990,2.435848,-4.595172,-4.617308,-8.333501,-1.548602,-5.988703,0.086343,5.687904,4.108747,2.644678,2.413941,5.649897,8.161671,1.858480,5.708354,-7.429049,2.463653,-6.315188,6.872293,4.613081,8.978289,-9.840170,-6.607318,9.394688,5.482924,-2.972157,4.104440,0.054004,9.011588,9.812294,-1.702040,-4.887943,-9.706389,0.460752,5.442440,5.468429,-0.684712,7.776155,-4.888232,-9.497294,0.014990,-1.975997,4.254333,9.026222,-1.082194,2.257705,-5.703686,-7.817101,8.004316,-6.360025,-5.564635,8.909782,-2.567982,6.302047,-6.080665,-8.638426,2.109050,-2.713525,9.615802,9.320210,-3.242106,-8.124351,-4.425723,-1.667142,-1.070827,-4.846794,-0.773166,-3.367926,-2.427405,8.320918,4.912653,7.813325,-9.823088,9.620467,8.475106,-4.110222,-1.119829,7.659172,2.687789,-4.864652,-1.641840,5.880065,-8.845901,0.774232,8.159706,8.360421,3.014535,2.147847,-0.793569,9.478877,-0.670065,-8.036318,-0.363508,0.112545,2.777482,3.808750,8.064482,-4.020759,-9.627854,-1.900131,2.822861,8.077734,-2.540055,-8.052092,5.662712,3.297487,4.213629,-6.785813,8.780316,-8.079368,8.858597,-2.884544,-6.980948,0.650195,1.773321,-9.626512,5.518852,3.649383,1.794791,3.737783,1.627654,-2.203221,-1.402685,-9.189015,-9.618666,-1.677700,-9.872679], dtype = "float32")#candidate|3796|(1350,)|const|float32
const_3797 = relay.const([-2.095121,0.687831,-7.154779,3.961552,1.128507,-4.849854,2.901317,9.493083,-8.783851,5.337800,-2.635093,-3.466069,6.080162,5.884474,-6.658063,7.993467,8.489211,9.606736,0.446838,8.373476,8.956767,2.393585,-0.997234,-9.317875,-5.861291,8.342694,8.476205,7.642904,2.364090,1.896781,-1.710034,-0.963509,-2.325835,4.048894,-9.355047,-2.508273,5.384631,6.740187,-4.133547,-9.439204,5.510274,-4.439394,5.054137,3.885879], dtype = "float64")#candidate|3797|(44,)|const|float64
call_3795 = relay.TupleGetItem(func_2976_call(relay.reshape(const_3796.astype('float32'), [10, 15, 9]), relay.reshape(const_3796.astype('float32'), [10, 15, 9]), relay.reshape(const_3797.astype('float64'), [44,]), ), 1)
call_3798 = relay.TupleGetItem(func_2981_call(relay.reshape(const_3796.astype('float32'), [10, 15, 9]), relay.reshape(const_3796.astype('float32'), [10, 15, 9]), relay.reshape(const_3797.astype('float64'), [44,]), ), 1)
func_2002_call = mod.get_global_var('func_2002')
func_2005_call = mutated_mod.get_global_var('func_2005')
call_3800 = relay.TupleGetItem(func_2002_call(relay.reshape(const_3797.astype('float64'), [4, 11, 1])), 0)
call_3801 = relay.TupleGetItem(func_2005_call(relay.reshape(const_3797.astype('float64'), [4, 11, 1])), 0)
output = relay.Tuple([bop_3767,call_3779,var_3780,var_3781,var_3782,var_3783,const_3784,call_3791,var_3792,const_3793,call_3795,const_3796,const_3797,call_3800,])
output2 = relay.Tuple([bop_3767,call_3785,var_3780,var_3781,var_3782,var_3783,const_3784,call_3794,var_3792,const_3793,call_3798,const_3796,const_3797,call_3801,])
func_3809 = relay.Function([var_3780,var_3781,var_3782,var_3783,var_3792,], output)
mod['func_3809'] = func_3809
mod = relay.transform.InferType()(mod)
var_3810 = relay.var("var_3810", dtype = "uint8", shape = (576,))#candidate|3810|(576,)|var|uint8
var_3811 = relay.var("var_3811", dtype = "uint64", shape = (99, 1))#candidate|3811|(99, 1)|var|uint64
var_3812 = relay.var("var_3812", dtype = "int16", shape = (840,))#candidate|3812|(840,)|var|int16
var_3813 = relay.var("var_3813", dtype = "int16", shape = (54, 2))#candidate|3813|(54, 2)|var|int16
var_3814 = relay.var("var_3814", dtype = "float32", shape = (144,))#candidate|3814|(144,)|var|float32
output = func_3809(var_3810,var_3811,var_3812,var_3813,var_3814,)
func_3815 = relay.Function([var_3810,var_3811,var_3812,var_3813,var_3814,], output)
mutated_mod['func_3815'] = func_3815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3977 = relay.var("var_3977", dtype = "float32", shape = (1, 10, 3))#candidate|3977|(1, 10, 3)|var|float32
uop_3978 = relay.sinh(var_3977.astype('float32')) # shape=(1, 10, 3)
bop_3983 = relay.multiply(uop_3978.astype('uint32'), relay.reshape(var_3977.astype('uint32'), relay.shape_of(uop_3978))) # shape=(1, 10, 3)
output = relay.Tuple([bop_3983,])
output2 = relay.Tuple([bop_3983,])
func_3994 = relay.Function([var_3977,], output)
mod['func_3994'] = func_3994
mod = relay.transform.InferType()(mod)
mutated_mod['func_3994'] = func_3994
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3995 = relay.var("var_3995", dtype = "float32", shape = (1, 10, 3))#candidate|3995|(1, 10, 3)|var|float32
func_3994_call = mutated_mod.get_global_var('func_3994')
call_3996 = func_3994_call(var_3995)
output = call_3996
func_3997 = relay.Function([var_3995], output)
mutated_mod['func_3997'] = func_3997
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4086 = relay.var("var_4086", dtype = "float64", shape = (1, 8, 1))#candidate|4086|(1, 8, 1)|var|float64
uop_4087 = relay.sin(var_4086.astype('float64')) # shape=(1, 8, 1)
uop_4114 = relay.asinh(var_4086.astype('float32')) # shape=(1, 8, 1)
bop_4117 = relay.logical_and(uop_4087.astype('bool'), relay.reshape(uop_4114.astype('bool'), relay.shape_of(uop_4087))) # shape=(1, 8, 1)
func_2864_call = mod.get_global_var('func_2864')
func_2867_call = mutated_mod.get_global_var('func_2867')
var_4128 = relay.var("var_4128", dtype = "float64", shape = (78,))#candidate|4128|(78,)|var|float64
call_4127 = relay.TupleGetItem(func_2864_call(relay.reshape(var_4128.astype('float64'), [3, 13, 2])), 2)
call_4129 = relay.TupleGetItem(func_2867_call(relay.reshape(var_4128.astype('float64'), [3, 13, 2])), 2)
output = relay.Tuple([bop_4117,call_4127,var_4128,])
output2 = relay.Tuple([bop_4117,call_4129,var_4128,])
func_4134 = relay.Function([var_4086,var_4128,], output)
mod['func_4134'] = func_4134
mod = relay.transform.InferType()(mod)
var_4135 = relay.var("var_4135", dtype = "float64", shape = (1, 8, 1))#candidate|4135|(1, 8, 1)|var|float64
var_4136 = relay.var("var_4136", dtype = "float64", shape = (78,))#candidate|4136|(78,)|var|float64
output = func_4134(var_4135,var_4136,)
func_4137 = relay.Function([var_4135,var_4136,], output)
mutated_mod['func_4137'] = func_4137
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4577 = relay.var("var_4577", dtype = "uint64", shape = (10, 7, 9))#candidate|4577|(10, 7, 9)|var|uint64
var_4578 = relay.var("var_4578", dtype = "uint64", shape = (10, 7, 9))#candidate|4578|(10, 7, 9)|var|uint64
bop_4579 = relay.greater_equal(var_4577.astype('bool'), relay.reshape(var_4578.astype('bool'), relay.shape_of(var_4577))) # shape=(10, 7, 9)
output = relay.Tuple([bop_4579,])
output2 = relay.Tuple([bop_4579,])
func_4583 = relay.Function([var_4577,var_4578,], output)
mod['func_4583'] = func_4583
mod = relay.transform.InferType()(mod)
mutated_mod['func_4583'] = func_4583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4583_call = mutated_mod.get_global_var('func_4583')
var_4585 = relay.var("var_4585", dtype = "uint64", shape = (10, 7, 9))#candidate|4585|(10, 7, 9)|var|uint64
var_4586 = relay.var("var_4586", dtype = "uint64", shape = (10, 7, 9))#candidate|4586|(10, 7, 9)|var|uint64
call_4584 = func_4583_call(var_4585,var_4586,)
output = call_4584
func_4587 = relay.Function([var_4585,var_4586,], output)
mutated_mod['func_4587'] = func_4587
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4637 = relay.const([[[8,-3,-7,3,-8,-1,-5,-8],[-8,-5,-10,-1,4,-3,-10,10],[-6,2,4,5,6,-4,1,-7],[2,1,4,1,7,-9,-7,-5],[-4,6,-4,1,-7,8,-6,6],[-8,-10,-10,-10,-6,-2,-10,6],[7,3,3,9,8,9,-2,-1],[-3,-3,-3,9,-4,10,1,-9],[8,-8,-5,-2,-4,-4,-7,9],[8,-4,-4,10,-6,-1,8,3],[-1,6,8,8,8,-10,-9,-6],[10,-5,5,-2,6,7,-5,-8],[3,-10,-4,7,-10,-7,-8,3]],[[-5,2,-4,2,-2,-3,-9,-1],[7,-7,2,2,-1,-1,6,-6],[-4,2,7,-9,-10,5,-5,6],[-10,4,-7,3,7,-6,2,3],[-2,-6,-8,-9,-9,-10,1,-10],[-8,-4,-1,2,3,-3,2,2],[3,-5,5,9,-8,-10,-6,-3],[-5,9,4,-5,1,-1,-4,-9],[1,7,-9,1,5,10,2,-8],[-8,2,-2,10,-3,-8,-6,-5],[2,4,-8,9,-6,7,-2,-4],[3,6,-1,9,-9,-2,-4,3],[-8,-7,2,2,-7,-8,5,1]],[[6,-3,4,-2,7,-8,-2,6],[10,8,9,1,-10,-5,1,-3],[5,-5,-8,-2,2,7,-2,5],[6,3,-5,3,3,4,-8,-10],[-5,-10,3,-7,1,-8,8,-5],[9,4,-2,1,7,-1,2,-7],[-10,9,8,-6,-1,2,-8,-6],[4,-10,8,-6,-7,-1,-2,-8],[-5,4,3,2,4,5,-2,-6],[-2,-7,-8,-9,-1,7,-9,6],[10,-5,9,8,3,5,6,-2],[-10,1,1,4,-10,-5,-4,1],[8,8,5,-1,9,4,9,-6]]], dtype = "int64")#candidate|4637|(3, 13, 8)|const|int64
var_4638 = relay.var("var_4638", dtype = "int64", shape = (3, 13, 8))#candidate|4638|(3, 13, 8)|var|int64
bop_4639 = relay.logical_xor(const_4637.astype('int64'), relay.reshape(var_4638.astype('int64'), relay.shape_of(const_4637))) # shape=(3, 13, 8)
func_2864_call = mod.get_global_var('func_2864')
func_2867_call = mutated_mod.get_global_var('func_2867')
var_4646 = relay.var("var_4646", dtype = "float64", shape = (78,))#candidate|4646|(78,)|var|float64
call_4645 = relay.TupleGetItem(func_2864_call(relay.reshape(var_4646.astype('float64'), [3, 13, 2])), 2)
call_4647 = relay.TupleGetItem(func_2867_call(relay.reshape(var_4646.astype('float64'), [3, 13, 2])), 2)
output = relay.Tuple([bop_4639,call_4645,var_4646,])
output2 = relay.Tuple([bop_4639,call_4647,var_4646,])
func_4654 = relay.Function([var_4638,var_4646,], output)
mod['func_4654'] = func_4654
mod = relay.transform.InferType()(mod)
var_4655 = relay.var("var_4655", dtype = "int64", shape = (3, 13, 8))#candidate|4655|(3, 13, 8)|var|int64
var_4656 = relay.var("var_4656", dtype = "float64", shape = (78,))#candidate|4656|(78,)|var|float64
output = func_4654(var_4655,var_4656,)
func_4657 = relay.Function([var_4655,var_4656,], output)
mutated_mod['func_4657'] = func_4657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4716 = relay.var("var_4716", dtype = "bool", shape = ())#candidate|4716|()|var|bool
var_4717 = relay.var("var_4717", dtype = "bool", shape = (1, 12, 3))#candidate|4717|(1, 12, 3)|var|bool
bop_4718 = relay.logical_or(var_4716.astype('bool'), var_4717.astype('bool')) # shape=(1, 12, 3)
uop_4730 = relay.sinh(bop_4718.astype('float64')) # shape=(1, 12, 3)
uop_4733 = relay.rsqrt(uop_4730.astype('float32')) # shape=(1, 12, 3)
bop_4738 = relay.power(uop_4730.astype('float64'), relay.reshape(uop_4733.astype('float64'), relay.shape_of(uop_4730))) # shape=(1, 12, 3)
output = relay.Tuple([bop_4738,])
output2 = relay.Tuple([bop_4738,])
func_4743 = relay.Function([var_4716,var_4717,], output)
mod['func_4743'] = func_4743
mod = relay.transform.InferType()(mod)
var_4744 = relay.var("var_4744", dtype = "bool", shape = ())#candidate|4744|()|var|bool
var_4745 = relay.var("var_4745", dtype = "bool", shape = (1, 12, 3))#candidate|4745|(1, 12, 3)|var|bool
output = func_4743(var_4744,var_4745,)
func_4746 = relay.Function([var_4744,var_4745,], output)
mutated_mod['func_4746'] = func_4746
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4792 = relay.var("var_4792", dtype = "float32", shape = (3, 6, 12))#candidate|4792|(3, 6, 12)|var|float32
var_4793 = relay.var("var_4793", dtype = "float32", shape = (3, 6, 12))#candidate|4793|(3, 6, 12)|var|float32
bop_4794 = relay.power(var_4792.astype('float32'), relay.reshape(var_4793.astype('float32'), relay.shape_of(var_4792))) # shape=(3, 6, 12)
output = relay.Tuple([bop_4794,])
output2 = relay.Tuple([bop_4794,])
func_4805 = relay.Function([var_4792,var_4793,], output)
mod['func_4805'] = func_4805
mod = relay.transform.InferType()(mod)
var_4806 = relay.var("var_4806", dtype = "float32", shape = (3, 6, 12))#candidate|4806|(3, 6, 12)|var|float32
var_4807 = relay.var("var_4807", dtype = "float32", shape = (3, 6, 12))#candidate|4807|(3, 6, 12)|var|float32
output = func_4805(var_4806,var_4807,)
func_4808 = relay.Function([var_4806,var_4807,], output)
mutated_mod['func_4808'] = func_4808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4980 = relay.var("var_4980", dtype = "uint16", shape = (3, 3))#candidate|4980|(3, 3)|var|uint16
var_4981 = relay.var("var_4981", dtype = "uint16", shape = (3, 3))#candidate|4981|(3, 3)|var|uint16
bop_4982 = relay.greater(var_4980.astype('bool'), relay.reshape(var_4981.astype('bool'), relay.shape_of(var_4980))) # shape=(3, 3)
output = relay.Tuple([bop_4982,])
output2 = relay.Tuple([bop_4982,])
func_5024 = relay.Function([var_4980,var_4981,], output)
mod['func_5024'] = func_5024
mod = relay.transform.InferType()(mod)
var_5025 = relay.var("var_5025", dtype = "uint16", shape = (3, 3))#candidate|5025|(3, 3)|var|uint16
var_5026 = relay.var("var_5026", dtype = "uint16", shape = (3, 3))#candidate|5026|(3, 3)|var|uint16
output = func_5024(var_5025,var_5026,)
func_5027 = relay.Function([var_5025,var_5026,], output)
mutated_mod['func_5027'] = func_5027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5198 = relay.var("var_5198", dtype = "float64", shape = (6, 10, 13))#candidate|5198|(6, 10, 13)|var|float64
uop_5199 = relay.sinh(var_5198.astype('float64')) # shape=(6, 10, 13)
bop_5218 = relay.floor_divide(var_5198.astype('float64'), relay.reshape(uop_5199.astype('float64'), relay.shape_of(var_5198))) # shape=(6, 10, 13)
var_5224 = relay.var("var_5224", dtype = "float64", shape = (6, 10, 13))#candidate|5224|(6, 10, 13)|var|float64
bop_5225 = relay.bitwise_and(uop_5199.astype('uint16'), relay.reshape(var_5224.astype('uint16'), relay.shape_of(uop_5199))) # shape=(6, 10, 13)
var_5229 = relay.var("var_5229", dtype = "float64", shape = (6, 10, 13))#candidate|5229|(6, 10, 13)|var|float64
bop_5230 = relay.equal(var_5224.astype('bool'), relay.reshape(var_5229.astype('bool'), relay.shape_of(var_5224))) # shape=(6, 10, 13)
output = relay.Tuple([bop_5218,bop_5225,bop_5230,])
output2 = relay.Tuple([bop_5218,bop_5225,bop_5230,])
func_5237 = relay.Function([var_5198,var_5224,var_5229,], output)
mod['func_5237'] = func_5237
mod = relay.transform.InferType()(mod)
var_5238 = relay.var("var_5238", dtype = "float64", shape = (6, 10, 13))#candidate|5238|(6, 10, 13)|var|float64
var_5239 = relay.var("var_5239", dtype = "float64", shape = (6, 10, 13))#candidate|5239|(6, 10, 13)|var|float64
var_5240 = relay.var("var_5240", dtype = "float64", shape = (6, 10, 13))#candidate|5240|(6, 10, 13)|var|float64
output = func_5237(var_5238,var_5239,var_5240,)
func_5241 = relay.Function([var_5238,var_5239,var_5240,], output)
mutated_mod['func_5241'] = func_5241
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5321 = relay.var("var_5321", dtype = "int16", shape = ())#candidate|5321|()|var|int16
const_5322 = relay.const([[[-4,2,8,1,9,-7,6,-3,-8,-4],[5,10,-9,-2,5,-5,-9,-10,-5,4],[-8,6,3,-8,10,-9,-9,-4,-4,-9],[8,-9,-3,6,2,5,-1,4,2,4],[-6,-6,-4,5,-7,-8,-8,-4,7,-10]],[[-9,9,-6,3,-6,10,2,9,4,-5],[-8,-8,3,9,3,9,4,10,-10,10],[2,10,-3,1,2,-2,2,-9,3,2],[-9,6,8,5,-8,6,4,5,6,7],[-3,-10,-1,7,9,10,2,-1,-1,-8]],[[3,1,9,-7,4,-5,-4,-2,-8,-9],[-2,-2,4,-3,-2,-5,5,4,-4,3],[6,-6,4,7,1,-8,-4,7,6,2],[3,6,-3,-5,3,6,-5,2,-4,-3],[3,-8,-2,5,-5,9,-2,7,5,-6]],[[-10,-8,7,-8,6,-4,1,-6,-6,-2],[-7,10,-3,-7,-1,-7,-5,9,2,3],[-7,7,-10,2,3,9,-4,-9,8,-7],[1,1,8,8,-7,8,-9,-1,-7,6],[-8,1,-6,1,10,-4,-4,5,-4,2]],[[5,5,-4,-2,1,4,-3,-3,7,2],[2,6,-10,7,-7,7,-10,7,-9,6],[9,1,-7,2,6,1,1,-7,-2,6],[5,3,-6,-9,1,6,7,1,-2,8],[-8,-10,-10,-9,1,-4,-9,-2,-7,-1]],[[-6,8,6,7,-4,-8,6,9,-4,10],[2,-2,1,7,4,-8,-6,-6,-8,2],[10,2,9,3,10,9,-7,4,-6,10],[10,2,6,10,-3,-6,4,10,-9,-7],[6,2,8,3,-6,3,3,-4,7,3]],[[-10,-2,6,10,-5,-6,-2,4,2,-1],[10,-6,3,-4,-8,10,-5,-2,6,-8],[-6,2,1,-7,3,5,6,-8,3,-7],[6,-9,-2,4,3,-9,-8,-9,6,4],[-8,5,-2,10,3,-8,-9,-4,8,-8]],[[-1,1,9,10,8,7,5,-9,-2,-2],[-8,-8,7,-7,9,7,-4,1,10,3],[5,5,1,-7,-3,-2,1,-8,-9,5],[-10,-9,-1,-2,-2,-3,4,-9,2,-9],[-6,7,-10,-4,-10,8,1,8,8,5]],[[4,10,-5,-6,4,-5,-8,-6,7,-7],[10,9,-3,-3,7,-4,7,-3,-1,-3],[-6,-3,-1,3,10,-7,5,2,-2,-10],[5,4,-8,-6,7,3,-8,-8,-7,6],[-2,8,8,-5,4,-1,-1,-3,-1,-7]],[[-10,10,1,6,-10,5,-5,9,-4,-4],[-4,-7,8,-4,-1,-7,-5,9,-6,2],[-9,-8,-4,8,1,-4,6,10,3,5],[8,7,7,-7,-2,9,-10,6,3,-9],[5,-1,-9,5,8,-8,-1,10,-10,3]]], dtype = "int16")#candidate|5322|(10, 5, 10)|const|int16
bop_5323 = relay.left_shift(var_5321.astype('int16'), const_5322.astype('int16')) # shape=(10, 5, 10)
uop_5338 = relay.exp(const_5322.astype('float64')) # shape=(10, 5, 10)
output = relay.Tuple([bop_5323,uop_5338,])
output2 = relay.Tuple([bop_5323,uop_5338,])
func_5342 = relay.Function([var_5321,], output)
mod['func_5342'] = func_5342
mod = relay.transform.InferType()(mod)
var_5343 = relay.var("var_5343", dtype = "int16", shape = ())#candidate|5343|()|var|int16
output = func_5342(var_5343)
func_5344 = relay.Function([var_5343], output)
mutated_mod['func_5344'] = func_5344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5584 = relay.var("var_5584", dtype = "float64", shape = (7, 4, 6))#candidate|5584|(7, 4, 6)|var|float64
var_5585 = relay.var("var_5585", dtype = "float64", shape = (7, 4, 6))#candidate|5585|(7, 4, 6)|var|float64
bop_5586 = relay.power(var_5584.astype('float64'), relay.reshape(var_5585.astype('float64'), relay.shape_of(var_5584))) # shape=(7, 4, 6)
output = relay.Tuple([bop_5586,])
output2 = relay.Tuple([bop_5586,])
func_5601 = relay.Function([var_5584,var_5585,], output)
mod['func_5601'] = func_5601
mod = relay.transform.InferType()(mod)
mutated_mod['func_5601'] = func_5601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5601_call = mutated_mod.get_global_var('func_5601')
var_5603 = relay.var("var_5603", dtype = "float64", shape = (7, 4, 6))#candidate|5603|(7, 4, 6)|var|float64
var_5604 = relay.var("var_5604", dtype = "float64", shape = (7, 4, 6))#candidate|5604|(7, 4, 6)|var|float64
call_5602 = func_5601_call(var_5603,var_5604,)
output = call_5602
func_5605 = relay.Function([var_5603,var_5604,], output)
mutated_mod['func_5605'] = func_5605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5726 = relay.var("var_5726", dtype = "float64", shape = (8, 11, 11))#candidate|5726|(8, 11, 11)|var|float64
uop_5727 = relay.sin(var_5726.astype('float64')) # shape=(8, 11, 11)
output = uop_5727
output2 = uop_5727
func_5730 = relay.Function([var_5726,], output)
mod['func_5730'] = func_5730
mod = relay.transform.InferType()(mod)
var_5731 = relay.var("var_5731", dtype = "float64", shape = (8, 11, 11))#candidate|5731|(8, 11, 11)|var|float64
output = func_5730(var_5731)
func_5732 = relay.Function([var_5731], output)
mutated_mod['func_5732'] = func_5732
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5772 = relay.const([[[-5.935533,8.574626,4.486864,1.811102,-1.500610],[-9.935997,3.425611,2.070430,-7.725315,-8.131133],[-9.183127,5.021472,-6.068637,-2.535975,-5.367709],[7.670805,5.700195,-7.483440,-3.012409,0.962400],[-4.505630,5.868741,1.592405,-9.711768,-1.277713],[4.604290,4.049956,-3.428131,-4.991461,2.056478],[-3.801193,-7.690316,1.375075,-3.583313,-2.398247],[7.653708,4.055882,-2.415635,0.313614,-4.847368]],[[5.004451,-0.611970,-2.812376,-8.548938,-0.311245],[2.054572,-7.834493,-6.915444,-4.012291,2.753288],[-1.639396,5.900577,4.845667,-4.637774,-7.466420],[3.021773,-3.188341,-2.199087,-4.125418,-0.953444],[-0.205417,4.850047,8.306054,5.015674,-7.916020],[-3.094818,8.661774,-2.334066,6.917364,0.210331],[4.639856,7.655925,3.501298,-7.175902,-7.974858],[-5.400378,-8.849678,3.029822,3.178329,-4.414216]],[[8.905549,-4.181298,-2.096560,-2.774843,-3.128314],[-7.177305,-7.747661,1.688897,0.452347,1.316171],[-0.184712,9.838603,8.954825,-1.827669,5.220769],[-3.125761,4.897969,0.363897,5.134254,2.116066],[8.807345,6.814575,2.848497,8.292455,-6.260113],[-6.519266,-6.709048,6.004271,-2.661914,-1.451848],[-6.439668,4.451793,-2.753171,-9.124874,-1.853447],[7.314105,9.248621,8.242698,9.695445,9.248566]],[[0.626389,0.045285,0.630642,3.089870,-0.049854],[0.046559,-8.716817,0.684150,0.142165,-0.699447],[6.520618,-8.763121,-6.888534,-7.968864,-6.063762],[9.669762,0.069374,-6.796953,5.057929,8.228755],[4.433518,7.667753,9.099452,-1.015084,-2.545068],[-5.785789,-3.047818,-5.420502,-9.349239,3.998163],[-7.527156,-5.128398,6.570838,7.544384,-0.998200],[-9.960448,6.409582,7.614302,-7.764703,-0.973486]]], dtype = "float64")#candidate|5772|(4, 8, 5)|const|float64
uop_5773 = relay.tan(const_5772.astype('float64')) # shape=(4, 8, 5)
func_2976_call = mod.get_global_var('func_2976')
func_2981_call = mutated_mod.get_global_var('func_2981')
const_5786 = relay.const([[0.297518],[3.784801],[0.495209],[-8.337799],[4.365906],[4.029948],[-0.303152],[6.018080],[-8.892984],[-5.670899],[-4.495347],[3.566265],[-8.677488],[-0.263747],[-3.490563],[-5.673296],[7.106673],[8.003111],[9.284009],[6.621350],[1.811660],[6.606477],[-2.012377],[4.662342],[-8.580577],[3.433452],[-4.728301],[2.196622],[9.360993],[2.882837],[-0.816939],[6.969236],[-9.679102],[5.185318],[-1.351971],[-5.496256],[2.821544],[9.089254],[-1.568558],[-1.029465],[3.723175],[-1.864677],[5.486691],[-4.639589],[2.535641],[-2.968406],[-8.600019],[-5.865501],[-0.209024],[-9.658706],[-0.666353],[-4.855162],[-3.756608],[1.414836],[8.278146],[0.823928],[0.117171],[-8.871119],[3.665813],[3.951174],[5.934223],[3.775349],[-0.505742],[-4.902959],[8.991137],[4.715457],[9.487163],[9.677371],[-2.086068],[5.119527],[4.072797],[-2.983084],[-7.411663],[0.925337],[6.994033],[-6.272515],[-6.373249],[-8.988307],[0.635976],[-8.514217],[-3.510506],[-3.662632],[6.396419],[6.437640],[-3.135398],[8.086746],[-6.559797],[-2.109403],[8.242201],[-3.897402],[2.525277],[5.139802],[-9.223476],[-7.231335],[-8.562562],[-7.552759],[-9.607658],[-8.134629],[2.597715],[5.549790],[-1.634634],[7.677399],[-1.032628],[0.790472],[7.268245],[1.684268],[9.137217],[-2.255032],[-7.328601],[9.131737],[9.694992],[3.206991],[0.420404],[-2.646246],[-2.521803],[-5.673260],[-1.765501],[6.198853],[-2.875412],[-8.736782],[-0.091652],[-6.642632],[-4.970669],[-0.842954],[4.486398],[2.752744],[6.368216],[-2.613090],[6.968395],[0.116430],[4.250099],[-3.166012],[4.016219],[-6.636494],[3.090439],[5.275631],[-8.869147],[5.150274],[0.478920],[-3.531928],[4.297103],[4.512090],[-0.879959],[3.452839],[-1.745382],[3.993237],[5.839819],[-4.427485],[2.880355],[-3.790131],[3.415463],[7.620716],[3.281751],[9.674928],[-3.526533],[4.578132],[4.770382],[-8.967704],[-2.857583],[8.717733],[8.771892],[-0.714742],[3.611597],[4.839125],[-9.634356],[6.511361],[-6.838645],[5.197796],[1.272889],[-1.004220],[-4.260784],[9.065623],[-1.080510],[-2.429712],[-6.637071],[-6.153712],[-8.645597],[-3.220654],[6.689318],[7.159598],[1.607018],[6.662873],[9.482321],[1.851184],[9.482732],[-0.858671],[3.913297],[-2.698961],[1.207470],[-2.878055],[-8.118619],[7.214574],[-6.548138],[-8.967320],[-1.500935],[8.264994],[-1.913210],[8.577057],[2.981971],[-9.282065],[-4.103913],[2.445788],[8.214151],[4.408572],[-5.623942],[-3.868833],[-7.954569],[0.586654],[6.154779],[-6.760439],[1.008076],[5.284838],[4.485852],[5.120437],[6.167954],[4.109449],[-2.699460],[8.940670],[-9.175114],[7.498011],[-4.722476],[-8.916590],[8.630003],[6.243226],[5.639530],[-0.851619],[8.493596],[4.626451],[-1.475572],[-5.560242],[-9.645619],[9.808684],[-6.777036],[-8.653799],[-9.411552],[2.528800],[4.564895],[9.820252],[0.083166],[7.366960],[5.611861],[-6.642750],[7.730470],[0.271148],[-9.286294],[7.281267],[7.307395],[-5.652138],[8.516386],[5.943869],[-5.180583],[8.690987],[-4.526568],[-3.358930],[7.537186],[-2.196833],[-0.277350],[-6.408262],[-3.021578],[4.623383],[0.739489],[-7.948034],[-2.143248],[-3.209472],[0.997906],[6.930377],[-9.345731],[-1.065086],[6.424212],[-9.712805],[-9.074164],[2.784047],[3.243375],[4.804929],[5.396904],[7.171266],[0.035875],[-1.060728],[-3.773815],[-9.987406],[-3.671851],[6.877019],[-8.253796],[7.604262],[-8.933423],[-6.808923],[-3.243166],[5.354247],[3.090279],[-4.192320],[-1.036967],[9.729929],[1.042598],[2.968727],[-9.384950],[1.916443],[2.568526],[2.529947],[-4.932735],[9.039358],[7.704387],[-8.157290],[-1.018332],[5.771421],[-1.037869],[-5.623372],[5.974857],[-1.375150],[6.910927],[-0.267320],[7.495499],[-2.390776],[-8.047953],[-5.343335],[-4.542508],[-6.759421],[-3.156441],[-8.190284],[-2.247155],[-4.649851],[2.816509],[8.739594],[6.528555],[5.742488],[8.122725],[-7.956422],[9.008603],[2.370646],[8.875743],[3.231862],[-1.873993],[2.881320],[-7.695011],[2.580937],[1.970379],[2.852878],[-4.816080],[-5.443332],[-0.682301],[1.188735],[9.872345],[6.807782],[-4.183656],[6.477175],[-3.811571],[-8.512409],[-2.390711],[7.208618],[0.453459],[2.247655],[7.102927],[6.609114],[-9.820795],[3.567963],[1.873908],[-3.913825],[-3.321735],[6.569599],[1.359924],[-9.883251],[1.374276],[-6.909632],[-3.657711],[-2.066497],[-2.051063],[0.144504],[-6.416972],[3.001528],[-9.648237],[-2.786432],[2.489777],[-2.687453],[-0.696908],[2.749216],[-1.010680],[8.003045],[-4.032867],[1.475280],[-4.813314],[-7.753009],[-7.098619],[-1.208450],[-6.501672],[0.148912],[-0.944926],[-2.511634],[-6.489079],[4.725568],[-8.589962],[-6.150058],[1.608394],[7.361639],[8.311157],[-8.616642],[-2.415337],[-7.729105],[-4.845904],[-8.414207],[8.084083],[3.706877],[2.111522],[1.641408],[2.580570],[-1.240296],[1.504091],[-7.238695],[-2.861836],[-6.532509],[0.179604],[5.798471],[5.502061],[-1.612607],[-7.696479],[-3.264049],[-0.801884],[3.458000],[2.960386],[4.243853],[-4.354828],[0.053767],[8.780309],[-2.281654],[0.263105],[5.048510],[8.042291],[-5.091778],[4.730604],[8.968122],[3.005458],[3.068158],[1.013191],[0.461963],[0.553919],[6.160133],[-7.072503],[-0.121510],[5.553742],[-2.258302],[2.257298],[7.950691],[-7.452661],[-9.730077],[-9.815778],[-3.378737],[5.018353],[1.804930],[-6.811594],[-5.541553],[9.985454],[2.680914],[-0.136082],[4.749987],[-4.942058],[-8.746790],[-8.399280],[7.140868],[1.975981],[-4.172180],[3.521680],[-4.456716],[-4.119630],[6.792974],[-0.225950],[-8.106536],[-3.573441],[-4.870360],[0.167174],[-2.441303],[8.976665],[-6.470115],[-6.094104],[-8.152530],[1.568727],[7.757207],[8.753162],[8.152403],[1.314678],[7.581912],[-6.009141],[7.791997],[1.993059],[7.512393],[-7.945612],[1.945641],[-6.563451],[4.228805],[1.439233],[1.436902],[-3.965882],[8.484083],[-8.295380],[3.486211],[7.744963],[5.329652],[-8.214636],[-9.210135],[-7.575069],[0.388927],[4.328145],[-5.299306],[-9.377002],[-8.133713],[-6.724804],[-3.410063],[-2.587927],[-2.239488],[-7.681075],[-5.710689],[-5.607931],[-5.365033],[4.444032],[0.584744],[-8.357328],[-5.834455],[3.282699],[-4.248874],[-0.372023],[7.611152],[-7.866213],[6.228455],[3.787646],[6.251286],[9.926461],[5.400959],[2.434515],[-0.898179],[9.527710],[2.803554],[-0.712133],[2.896905],[-3.402323],[8.135834],[5.317913],[0.005688],[-4.281902],[-4.903076],[9.054206],[-1.144966],[-1.017039],[-0.935623],[1.906164],[-0.675955],[-1.697001],[-1.128511],[8.875550],[-1.783178],[3.451934],[-0.955316],[-2.353274],[-9.206560],[-5.527755],[-4.172003],[-8.604355],[-5.214364],[0.677716],[9.471959],[2.848113],[8.713398],[4.475603],[4.738874],[2.710573],[-5.679601],[1.154893],[2.214994],[0.184166],[6.940481],[1.757612],[1.044841],[-2.688706],[-1.644488],[-1.214500],[-8.610933],[2.296468],[-2.275389],[4.453767],[6.448626],[4.959904],[-0.539997],[-9.893780],[7.722256],[5.287631],[3.100780],[-0.848238],[6.670275],[-6.827963],[-6.285645],[1.899606],[-4.819226],[-4.080220],[3.198549],[-4.099348],[4.310440],[-3.905078],[0.356925],[7.551702],[-2.197184],[8.537559],[3.332348],[-4.419274],[-6.926709],[-3.460758],[-4.113867],[0.620731],[-9.724413],[6.123607],[4.482661],[-7.476295],[9.736535],[-0.492181],[0.052131],[6.248498],[1.698835],[1.917102],[8.178414],[3.761000],[-6.382715],[-9.948200],[9.543506],[-3.845972],[-1.436251],[4.079500],[2.889018],[-0.874101],[-4.178373],[2.926310],[-2.476210],[-3.832017],[8.759469],[7.542629],[9.005708],[-4.388098],[-5.958107],[-2.417530],[-8.965216],[-2.013948],[-1.852235],[3.795031],[2.930185],[3.903914],[-3.524568],[-0.018610],[1.256190],[-5.859542],[-6.508120],[5.571643],[-5.722339],[-1.655349],[2.632455],[-6.932744],[9.395531],[-1.300603],[-2.206139],[0.051668],[7.680670],[-2.850919],[-5.316021],[-6.051857],[4.294288],[-5.535700],[-5.184110],[0.193174],[-3.969071],[-8.455520],[7.345822],[5.447004],[3.543577],[-8.499396],[9.169980],[1.266474],[-6.359325],[9.481399],[-8.977833],[0.006369],[-1.358475],[-7.274722],[5.436719],[-8.880675],[7.449790],[4.596052],[9.324042],[2.283854],[-9.642267],[2.906031],[7.695908],[-2.131987],[-1.174373],[-2.279404],[-1.744627],[-0.857407],[-4.991942],[1.419341],[-8.948421],[3.320327],[-8.687930],[-8.371322],[4.828713],[-1.511215],[-1.700869],[-1.641133],[6.686168],[0.250554],[-5.551964],[-7.891256],[7.034870],[6.706785],[1.502334],[-9.757026],[-9.655360],[5.826335],[-4.813076],[2.286786],[1.232708],[-3.217369],[6.412726],[-9.762195],[9.069435],[-4.817980],[4.992496],[-7.217860],[6.948287],[-9.756527],[8.271314],[-4.084915],[-4.253514],[-6.002998],[-5.559761],[9.025984],[-4.457482],[6.309576],[-8.009173],[-2.382875],[1.080738],[8.929389],[9.680480],[-1.151378],[2.119879],[-9.355386],[4.237248],[4.657535],[-1.829137],[-7.890949],[7.351576],[5.890582],[7.310309],[0.022879],[-8.905359],[-6.309088],[-3.057188],[-0.354105],[5.343405],[-3.524479],[-4.797628],[1.511874],[4.424664],[0.457210],[3.411747],[-1.016047],[7.671857],[-2.768221],[-4.669205],[-3.559775],[7.428391],[0.189677],[-0.597633],[5.688411],[-9.619225],[9.722240],[-8.391471],[-2.060134],[7.170690],[-9.589961],[1.712042],[2.697013],[-8.378859],[-1.841414],[9.008589],[3.314856],[0.905947],[-3.421263],[-9.959882],[2.206068],[4.501942],[1.969201],[-0.022026],[1.725686],[-2.897294],[-4.767341],[0.138497],[-8.414157],[3.902228],[-0.629614],[-3.736412],[1.661727],[-5.408200],[9.387294],[5.271841],[7.867422],[2.392415],[4.465503],[-5.098532],[0.146223],[-9.479074],[9.819022],[8.202368],[2.624357],[-5.344106],[4.421343],[5.885069],[-1.439163],[-5.433774],[-8.294388],[-6.014847],[-1.605945],[3.271009],[4.367185],[0.533777],[-4.670403],[-6.907242],[3.699861],[1.650559],[-7.417530],[-9.258527],[-8.528092],[-5.498128],[-1.985803],[3.117697],[8.086603],[-0.229310],[8.525304],[5.468204],[-5.050027],[-7.309971],[-3.531914],[-1.330950],[-0.354515],[-7.773801],[0.625060],[0.815142],[-9.810011],[-2.550700],[-9.985597],[0.857838],[1.652478],[-1.907936],[0.194494],[-2.070935],[-0.624361],[-8.438253],[3.136663],[-1.878914],[7.104445],[0.099886],[6.928865],[-7.298011],[-5.454490],[-7.861468],[-6.042803],[-4.750512],[-5.454323],[2.908754],[-9.606200],[3.552318],[-4.484435],[4.627311],[-8.964089],[9.810245],[-3.568826],[-0.949779],[2.524441],[9.057553],[3.234642],[2.260470],[-3.760526],[4.625948],[-5.641802],[-2.591315],[-2.748085],[8.536312],[-2.980749],[0.202262],[-2.690414],[-2.185506],[0.323409],[-5.925141],[0.570222],[-4.125331],[-1.593383],[3.713333],[-8.618736],[2.775307],[6.757739],[7.824280],[8.284718],[-3.113507],[-3.166272],[-5.018285],[-5.193518],[7.026431],[7.466689],[4.430109],[-9.060077],[2.914419],[5.177629],[2.247869],[1.336657],[-7.555046],[-0.135427],[4.079172],[-3.233210],[3.190854],[7.149207],[1.607059],[-0.419002],[4.781118],[-1.077396],[8.092119],[-7.352599],[8.319258],[3.407608],[1.614971],[2.921847],[5.211118],[-7.326549],[5.331323],[-0.374246],[5.668932],[-6.878881],[7.315389],[8.047460],[-2.138457],[4.283837],[-1.825989],[-6.194446],[5.013043],[-7.346333],[5.922545],[-2.736004],[-1.980639],[8.230072],[3.597581],[-8.458260],[0.347464],[6.046749],[-2.498796],[7.772070],[0.720575],[-4.929261],[-2.678894],[9.834623],[-8.402558],[0.758210],[-1.793161],[-9.893975],[-5.272321],[-1.437789],[9.896210],[-2.486993],[-8.345567],[8.988483],[-9.841797],[5.277207],[-0.904215],[-1.290066],[9.988811],[-3.025987],[2.740284],[7.077778],[-9.226443],[-9.695532],[0.906727],[-4.554095],[-6.674291],[7.503680],[6.846260],[2.294912],[6.931874],[0.957918],[-3.621706],[-8.984907],[6.606259],[8.754847],[-0.988140],[-8.872372],[-1.774324],[0.220501],[-4.735540],[-1.329562],[-3.590448],[6.579357],[-6.578844],[-8.153214],[2.626207],[0.219818],[8.560481],[8.760821],[7.360517],[4.074016],[4.857353],[-3.638221],[8.194100],[1.570987],[4.969792],[-2.422832],[2.526294],[0.407368],[-4.415247],[7.109284],[7.663780],[8.567111],[3.116343],[-6.007421],[0.665896],[-1.630486],[2.594732],[-4.941864],[6.111356],[-0.814022],[3.935418],[-2.548116],[-9.344234],[-4.373442],[5.761116],[8.702439],[9.055418],[1.754615],[5.085124],[8.959176],[-0.488640],[-6.933838],[-4.530686],[-1.569598],[-3.992680],[-6.480133],[7.031281],[3.132863],[4.019343],[-8.856584],[6.222461],[6.820956],[-8.336304],[6.997684],[-6.970464],[-2.569530],[1.741129],[2.611176],[7.930066],[6.035050],[-4.558181],[6.367580],[-3.367426],[-4.707707],[-9.963961],[2.682690],[-4.759153],[-9.473249],[5.069753],[-1.537054],[-7.392654],[-4.050980],[0.592972],[6.644148],[6.817245],[5.486104],[4.411170],[3.599655],[2.108958],[3.613964],[-4.186754],[9.652088],[9.073742],[1.942238],[-8.769353],[8.450816],[-7.523176],[-0.293014],[9.831800],[-7.895883],[-5.834722],[-7.658265],[-6.679641],[5.459220],[3.859888],[-0.896556],[2.868833],[-0.967424],[4.842830],[-0.791070],[-0.027283],[8.101745],[9.589812],[-0.803251],[4.970296],[-7.479726],[-5.464201],[7.960685],[-4.336647],[-2.510832],[0.007194],[-1.082760],[4.683988],[-9.861959],[-6.627675],[-6.535662],[-4.386111],[-8.417421],[2.608467],[-7.137691],[9.805176],[-8.101672],[6.383849],[1.767753],[-6.984114],[-1.602810],[-2.156936],[4.932272],[2.342387],[-9.131626],[-4.712873],[-9.588153],[-1.391669],[-6.016191],[-0.824337],[5.013449],[4.968023],[2.269961],[0.164312],[9.060350],[0.074064],[-6.813871],[-0.777435],[5.597246],[6.031489],[4.574138],[-1.094329],[-4.545504],[-8.704924],[-9.495983],[3.153789],[3.164751],[3.184010],[6.626169],[3.483369],[-6.051726],[-0.347896],[-3.450751],[-5.039440],[1.234540],[0.605277],[6.137171],[-0.932460],[7.612357],[6.683752],[2.219743],[3.500277],[9.046002],[-8.801084],[4.136341],[9.583852],[-6.612974],[-7.035201],[-1.845347],[-2.147893],[-1.253451],[1.676550],[7.006214],[8.025803],[-9.092849],[-6.196048],[8.837608],[-1.824965],[-2.838838],[-2.798729],[-4.300105],[1.218101],[2.885465],[9.405407],[2.476296],[3.637618],[-8.038709],[7.486723],[3.105765],[-8.634259],[9.833170],[6.181144],[-1.546986],[-0.567399],[-6.169164],[-0.754844],[-2.151755],[6.297808],[-8.678964],[-6.219464],[-5.744752],[6.166583],[-0.670048],[-3.512429],[-2.591565],[2.542398],[8.569306],[-9.744739],[5.750894],[-9.161965],[8.560585],[-2.411211],[2.500914],[-6.346220],[8.817294],[6.421440],[-4.159033],[-1.729726],[6.300627],[-0.227612],[1.933180],[-4.286527],[6.397702],[-5.070821],[6.862548],[-7.058306],[7.457560],[-2.972832],[1.118845],[-4.523123],[1.368459],[-6.333229],[6.411269],[-5.571898],[-7.165815],[-9.417204],[5.491112],[-0.623646],[8.483019],[4.086268],[-0.445945],[-5.084160],[-0.695942],[-0.933672],[6.659577],[-4.804567],[-0.510827],[-4.116224],[5.031117],[-7.445979],[-3.636782],[6.211984],[3.588173],[-3.244397],[-0.990636],[5.212235],[6.464973],[0.455485],[5.550137],[3.220205],[-2.219130],[0.149760],[6.220886],[-9.109585],[8.714546],[-4.576444],[1.770312],[4.021138],[0.235968],[-6.012758],[6.212686],[-4.998509],[6.747508],[-4.482802],[6.602624],[8.058148],[-7.426425],[-5.419561],[-9.091103],[-2.481405],[-4.945145],[0.132080],[4.893357],[-6.635531],[-3.721382],[-0.114578],[2.199707],[3.506552],[-3.792409],[1.419585],[7.692219],[-4.335568],[0.027315],[5.104842],[8.560691],[0.326469],[-8.046026],[-7.876248],[4.676985],[3.576500],[7.841834],[7.655131],[-3.814863],[2.698080],[4.039176],[1.790433],[0.384438],[-9.594760],[-5.061877],[-0.661565],[4.030551],[0.048356],[3.227333],[3.940056],[7.609861],[-6.221714],[5.921208],[9.996528],[-1.441923],[-8.150546],[2.034800],[8.665382],[6.643669],[0.619507],[1.744778],[-0.637331],[-7.279003],[3.903794],[7.954662],[-3.187802],[0.494902],[7.585473],[3.441991],[-8.101388],[5.085747],[6.467164],[-1.788688],[9.606793],[-6.211750],[-2.120874],[-8.371564],[-4.751863],[-7.446083],[-9.096518],[1.244941],[-4.221932],[-9.367320],[1.324605],[-6.961220],[5.619134],[-7.509836],[-2.310568],[4.664632],[8.628073],[3.188897],[-1.030157],[-5.338594],[-4.849897]], dtype = "float32")#candidate|5786|(1350, 1)|const|float32
var_5787 = relay.var("var_5787", dtype = "float64", shape = (44,))#candidate|5787|(44,)|var|float64
call_5785 = relay.TupleGetItem(func_2976_call(relay.reshape(const_5786.astype('float32'), [10, 15, 9]), relay.reshape(const_5786.astype('float32'), [10, 15, 9]), relay.reshape(var_5787.astype('float64'), [44,]), ), 1)
call_5788 = relay.TupleGetItem(func_2981_call(relay.reshape(const_5786.astype('float32'), [10, 15, 9]), relay.reshape(const_5786.astype('float32'), [10, 15, 9]), relay.reshape(var_5787.astype('float64'), [44,]), ), 1)
output = relay.Tuple([uop_5773,call_5785,const_5786,var_5787,])
output2 = relay.Tuple([uop_5773,call_5788,const_5786,var_5787,])
func_5817 = relay.Function([var_5787,], output)
mod['func_5817'] = func_5817
mod = relay.transform.InferType()(mod)
mutated_mod['func_5817'] = func_5817
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5818 = relay.var("var_5818", dtype = "float64", shape = (44,))#candidate|5818|(44,)|var|float64
func_5817_call = mutated_mod.get_global_var('func_5817')
call_5819 = func_5817_call(var_5818)
output = call_5819
func_5820 = relay.Function([var_5818], output)
mutated_mod['func_5820'] = func_5820
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5839 = relay.const([[[True,True,True,False,True,True,True,True],[False,True,False,False,False,False,True,False],[True,False,False,False,False,False,False,True],[False,False,False,True,False,False,True,False],[True,True,False,True,False,True,False,False],[False,True,False,False,True,False,False,True],[False,False,True,False,False,True,True,False]],[[True,True,True,False,True,True,False,True],[False,False,False,False,True,False,True,True],[True,True,True,True,True,True,False,True],[True,True,True,True,False,False,True,True],[False,False,True,True,True,True,False,True],[True,False,False,False,True,True,True,False],[False,False,True,False,True,True,True,False]]], dtype = "bool")#candidate|5839|(2, 7, 8)|const|bool
const_5840 = relay.const([[[True,True,False,True,False,False,True,True],[True,True,False,True,True,False,False,False],[False,True,True,True,False,True,True,True],[True,True,False,False,True,True,True,False],[False,True,True,True,True,True,False,True],[False,False,False,True,False,False,True,False],[True,False,True,False,False,True,True,True]],[[False,True,True,True,False,False,True,True],[False,True,False,True,False,False,False,False],[False,False,True,True,True,True,True,False],[True,True,False,True,False,True,False,False],[True,False,False,True,False,True,False,False],[False,False,False,False,False,False,False,True],[True,False,False,False,True,True,False,False]]], dtype = "bool")#candidate|5840|(2, 7, 8)|const|bool
bop_5841 = relay.logical_or(const_5839.astype('bool'), relay.reshape(const_5840.astype('bool'), relay.shape_of(const_5839))) # shape=(2, 7, 8)
func_262_call = mod.get_global_var('func_262')
func_265_call = mutated_mod.get_global_var('func_265')
var_5851 = relay.var("var_5851", dtype = "float64", shape = (352, 1))#candidate|5851|(352, 1)|var|float64
call_5850 = relay.TupleGetItem(func_262_call(relay.reshape(var_5851.astype('float64'), [4, 8, 11])), 0)
call_5852 = relay.TupleGetItem(func_265_call(relay.reshape(var_5851.astype('float64'), [4, 8, 11])), 0)
uop_5863 = relay.log10(call_5850.astype('float32')) # shape=(4, 8, 11)
uop_5865 = relay.log10(call_5852.astype('float32')) # shape=(4, 8, 11)
func_348_call = mod.get_global_var('func_348')
func_351_call = mutated_mod.get_global_var('func_351')
const_5870 = relay.const([[10],[2],[-7],[3],[-3],[-1],[6],[-1],[-8],[-3],[-6],[5],[-9],[-9],[-1],[-9],[-6],[-3],[3],[-8],[-4],[7],[1],[-8],[7],[-4],[-10],[-4],[-4],[-7],[5],[-5],[5],[3],[-5],[-6],[-10],[-8],[-1],[1],[-10],[2],[-6],[2],[-1],[-4],[-2],[-7],[-7],[5],[-1],[-3],[-6],[-5],[-9],[-4],[1],[-10],[4],[6],[10],[-2],[-9],[7],[1],[-9],[5],[-7],[-3],[5],[-7],[3],[-8],[-5],[-7],[-10],[1],[7],[-2],[7],[6],[-10],[-8],[-1],[9],[4],[-6],[-6],[-10],[-9],[-3],[3],[-10],[5],[5],[-7],[-8],[4],[-4],[-6],[1],[-1],[-5],[-3],[9],[3],[10],[8],[-6],[-4],[-3],[-2],[8],[6],[10],[-8],[-1],[8],[-5],[4],[-3],[-6],[3],[-5],[-4],[-8],[7],[-9],[-9],[-10],[-8],[10],[7],[-7],[10],[-4],[8],[-8],[-3],[10],[1],[4],[9],[5],[-10],[-6],[5],[-8],[-5],[5],[-8],[-10],[1],[7],[-2],[-1],[4],[-1],[1],[-2],[-4],[9],[-4],[2],[-2],[5],[-9],[6],[5],[-4],[-2],[-8],[-2],[-1],[4],[6],[-4],[7],[-2],[9],[9],[-5],[1],[8],[9],[-2],[9],[-7],[-8],[6],[4],[2],[-4],[7],[-10],[-3],[-10],[-7],[2],[-6],[-9],[9],[-8],[-1],[-7],[-10],[6],[2],[-1],[-10],[-5],[1],[-9],[-8],[-6],[-9],[-3],[-3],[7],[7],[10],[8],[7],[7],[-8],[10],[8],[-9],[-10],[10],[-1],[10],[-1],[5],[8],[3],[-9],[-5],[-2],[-6],[-9],[-6],[-8],[8],[3],[-5],[-8],[10],[-10],[7],[-7],[8],[-5],[4],[-5],[-10],[7],[-5],[-10],[-4],[-10],[-7],[5],[-8],[-2],[-5],[-7],[-7],[-5],[-2],[1],[9],[5],[-4],[5],[-9],[-8],[3],[-6],[6],[-8],[-9],[5],[-7],[-8],[3],[10],[-9],[5],[1],[-3],[5],[7],[-3],[-9],[-2],[-4],[-1],[-8],[-9],[9],[10],[-5],[-4],[4],[10],[-4],[-9],[3],[5],[-2],[8],[-8],[3],[9],[-4],[6],[-6],[3],[-3],[3],[-4],[-6],[-1],[4],[-2],[1],[-2],[-9],[4],[-9],[-6],[2],[-7],[-4],[-2],[4],[6],[-7],[-1],[-3],[7],[3],[2],[4],[-1],[6],[-9],[-1],[-3],[-9],[-4],[9],[4],[-6],[-6],[8],[-2],[3],[-6],[-2],[10],[-6],[6],[5],[4],[4],[-6],[-7],[10],[-7],[-4],[-2],[-7],[-2],[1],[-10],[4],[10],[-5],[1],[9],[-7],[-10],[-7],[-2],[9],[-9],[-2],[-5],[1],[-10],[9],[-7],[6],[-3],[3],[-4],[-9],[9],[-7],[2],[6],[-6],[-10],[-7],[-10],[-10],[-3],[-7],[-2],[7],[4],[-8],[-6],[-1],[-7],[-8],[4],[3],[6],[5],[-7],[5],[3],[-8],[-2],[-10],[6],[1],[6],[-4],[5],[-6],[-5],[-5],[9],[7],[4],[-5],[-1],[3],[9],[2],[-3],[7],[3],[2],[1],[-8],[-7],[7],[2],[3],[5],[-4],[2],[-2],[3],[4],[4],[-5],[3],[8],[-5],[2],[1],[9],[3],[-9],[9],[-7],[-1],[2],[4],[9],[-7],[7],[-2],[-4],[1],[-1],[5],[-6],[-2],[-9],[10],[-4],[6],[4],[1],[-7],[10],[8],[7],[8],[-8],[-2],[9],[-1],[3],[-3],[-5],[-4],[4],[8],[3],[-4],[9],[4],[-4],[6],[9],[2],[6],[-8],[1],[-1],[-10],[-7],[5],[10],[1],[1],[-5],[-8],[7],[-10],[-1],[-6],[-6],[-5],[-8],[5],[-3],[2],[8],[-6],[-9],[-10],[3],[-5],[1],[-9],[-8],[9],[-1],[-10],[3],[7],[-8],[2],[3],[6],[6],[-6],[2],[-1],[7],[-5],[-7],[8],[1],[7],[3],[-9],[-2],[-6],[10],[7],[-8],[7],[6],[-4],[10],[-7],[-6],[-6],[-3],[10],[-4],[-9],[-2],[3],[9],[-8],[-5],[-8],[4],[6],[-3],[-2],[-8],[-7],[-3],[6],[-8],[4],[-2],[-1],[-9],[7],[-7],[6],[8],[5],[5],[-10],[10],[-5],[-4],[8],[8],[1],[-1],[8],[-5],[-3],[-9],[-4],[-3],[8],[-8],[2],[-6],[9],[-7],[-4],[-3],[2],[1],[-5],[4],[-9],[-8],[-2],[3],[10],[8],[9],[6],[8],[9],[8],[-8],[9],[10],[-6],[-3],[-9],[-1],[4],[1],[-5],[-6],[5],[-6],[-7],[4],[8],[-8],[3],[-10],[-4],[5],[4],[4],[-10],[-3],[-6],[-1],[1],[5],[-4],[-5],[-2],[1],[1],[-4],[4],[10],[-7],[-7],[-1],[-4],[-7],[9],[4],[-8],[-2],[-3],[6],[-10],[3],[3],[5],[-7],[-2],[-1],[-5],[2],[-2],[2],[3],[-4],[-4],[9],[-9],[8],[5],[1],[-9],[-2],[3],[5],[-10],[9],[-8],[-6],[2],[-7],[-9],[8],[-7],[1],[-2],[-2],[1],[1],[9],[9],[3],[-1],[-9],[-3],[9],[7],[8],[5],[4],[9],[-10],[-4],[-7],[4],[-10],[-5],[-3],[5],[3],[4],[10],[9],[7],[-5],[-2],[4],[5],[5],[-4],[8],[-4],[-9],[9],[-10],[4],[8],[5],[1],[-3],[-2],[3],[9],[5],[-10],[2],[5],[10],[4],[9],[-6],[8],[-6],[1],[-5],[-6],[-1],[5],[6],[1],[1],[1],[1],[1],[3],[-1],[-5],[-10],[2],[-10],[8],[-7],[6],[-7],[2],[-8],[5],[-10],[-3],[4],[-10],[-4],[4],[8],[7],[-4],[-8],[4],[-3],[-6],[-2],[9],[-4],[-4],[1],[-2],[2],[8],[9],[-3],[-5],[-1],[-10],[-5],[-5],[9],[7],[-5],[-10],[-7]], dtype = "int16")#candidate|5870|(840, 1)|const|int16
call_5869 = relay.TupleGetItem(func_348_call(relay.reshape(const_5870.astype('int16'), [5, 12, 14]), relay.reshape(const_5870.astype('int16'), [5, 12, 14]), ), 2)
call_5871 = relay.TupleGetItem(func_351_call(relay.reshape(const_5870.astype('int16'), [5, 12, 14]), relay.reshape(const_5870.astype('int16'), [5, 12, 14]), ), 2)
output = relay.Tuple([bop_5841,var_5851,uop_5863,call_5869,const_5870,])
output2 = relay.Tuple([bop_5841,var_5851,uop_5865,call_5871,const_5870,])
func_5880 = relay.Function([var_5851,], output)
mod['func_5880'] = func_5880
mod = relay.transform.InferType()(mod)
mutated_mod['func_5880'] = func_5880
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5881 = relay.var("var_5881", dtype = "float64", shape = (352, 1))#candidate|5881|(352, 1)|var|float64
func_5880_call = mutated_mod.get_global_var('func_5880')
call_5882 = func_5880_call(var_5881)
output = call_5882
func_5883 = relay.Function([var_5881], output)
mutated_mod['func_5883'] = func_5883
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6185 = relay.var("var_6185", dtype = "float64", shape = (2, 7, 7))#candidate|6185|(2, 7, 7)|var|float64
uop_6186 = relay.cos(var_6185.astype('float64')) # shape=(2, 7, 7)
func_3809_call = mod.get_global_var('func_3809')
func_3815_call = mutated_mod.get_global_var('func_3815')
var_6191 = relay.var("var_6191", dtype = "uint8", shape = (576,))#candidate|6191|(576,)|var|uint8
var_6192 = relay.var("var_6192", dtype = "uint64", shape = (99, 1))#candidate|6192|(99, 1)|var|uint64
var_6193 = relay.var("var_6193", dtype = "int16", shape = (840,))#candidate|6193|(840,)|var|int16
const_6194 = relay.const([-4,-6,-2,5,8,2,8,-5,-7,-2,10,9,-8,10,-9,9,-3,8,-2,3,-8,4,-4,3,-3,10,-2,-9,-4,-2,5,-8,8,4,-8,10,2,4,-2,-9,-1,6,-8,8,3,-6,-3,7,-10,-1,-9,-4,6,7,4,3,-7,-1,-6,-8,8,9,6,-3,6,3,-5,-6,-5,-9,1,4,-2,2,3,9,3,3,4,6,-9,5,7,5,4,-1,-7,-4,10,-9,5,-4,-7,-8,4,1,4,-9,7,3,9,8,-8,7,8,1,-7,2], dtype = "int16")#candidate|6194|(108,)|const|int16
var_6195 = relay.var("var_6195", dtype = "float32", shape = (144,))#candidate|6195|(144,)|var|float32
call_6190 = relay.TupleGetItem(func_3809_call(relay.reshape(var_6191.astype('uint8'), [576,]), relay.reshape(var_6192.astype('uint64'), [99, 1]), relay.reshape(var_6193.astype('int16'), [840,]), relay.reshape(const_6194.astype('int16'), [54, 2]), relay.reshape(var_6195.astype('float32'), [144,]), ), 12)
call_6196 = relay.TupleGetItem(func_3815_call(relay.reshape(var_6191.astype('uint8'), [576,]), relay.reshape(var_6192.astype('uint64'), [99, 1]), relay.reshape(var_6193.astype('int16'), [840,]), relay.reshape(const_6194.astype('int16'), [54, 2]), relay.reshape(var_6195.astype('float32'), [144,]), ), 12)
func_2002_call = mod.get_global_var('func_2002')
func_2005_call = mutated_mod.get_global_var('func_2005')
call_6215 = relay.TupleGetItem(func_2002_call(relay.reshape(call_6190.astype('float64'), [4, 11, 1])), 0)
call_6216 = relay.TupleGetItem(func_2005_call(relay.reshape(call_6190.astype('float64'), [4, 11, 1])), 0)
output = relay.Tuple([uop_6186,call_6190,var_6191,var_6192,var_6193,const_6194,var_6195,call_6215,])
output2 = relay.Tuple([uop_6186,call_6196,var_6191,var_6192,var_6193,const_6194,var_6195,call_6216,])
func_6218 = relay.Function([var_6185,var_6191,var_6192,var_6193,var_6195,], output)
mod['func_6218'] = func_6218
mod = relay.transform.InferType()(mod)
mutated_mod['func_6218'] = func_6218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6218_call = mutated_mod.get_global_var('func_6218')
var_6220 = relay.var("var_6220", dtype = "float64", shape = (2, 7, 7))#candidate|6220|(2, 7, 7)|var|float64
var_6221 = relay.var("var_6221", dtype = "uint8", shape = (576,))#candidate|6221|(576,)|var|uint8
var_6222 = relay.var("var_6222", dtype = "uint64", shape = (99, 1))#candidate|6222|(99, 1)|var|uint64
var_6223 = relay.var("var_6223", dtype = "int16", shape = (840,))#candidate|6223|(840,)|var|int16
var_6224 = relay.var("var_6224", dtype = "float32", shape = (144,))#candidate|6224|(144,)|var|float32
call_6219 = func_6218_call(var_6220,var_6221,var_6222,var_6223,var_6224,)
output = call_6219
func_6225 = relay.Function([var_6220,var_6221,var_6222,var_6223,var_6224,], output)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6227 = relay.var("var_6227", dtype = "uint16", shape = (15, 10, 9))#candidate|6227|(15, 10, 9)|var|uint16
var_6228 = relay.var("var_6228", dtype = "uint16", shape = (15, 10, 9))#candidate|6228|(15, 10, 9)|var|uint16
bop_6229 = relay.right_shift(var_6227.astype('uint16'), relay.reshape(var_6228.astype('uint16'), relay.shape_of(var_6227))) # shape=(15, 10, 9)
func_5601_call = mod.get_global_var('func_5601')
func_5605_call = mutated_mod.get_global_var('func_5605')
var_6237 = relay.var("var_6237", dtype = "float64", shape = (168,))#candidate|6237|(168,)|var|float64
call_6236 = relay.TupleGetItem(func_5601_call(relay.reshape(var_6237.astype('float64'), [7, 4, 6]), relay.reshape(var_6237.astype('float64'), [7, 4, 6]), ), 0)
call_6238 = relay.TupleGetItem(func_5605_call(relay.reshape(var_6237.astype('float64'), [7, 4, 6]), relay.reshape(var_6237.astype('float64'), [7, 4, 6]), ), 0)
func_4654_call = mod.get_global_var('func_4654')
func_4657_call = mutated_mod.get_global_var('func_4657')
var_6242 = relay.var("var_6242", dtype = "int64", shape = (312,))#candidate|6242|(312,)|var|int64
const_6243 = relay.const([0.644214,5.662320,-4.950292,3.243479,-9.549501,4.022954,-4.635294,-1.338856,-3.505195,1.490941,5.323037,5.233637,0.689851,-8.415861,3.569858,9.003453,0.722554,-8.370209,3.498780,2.629260,7.935432,-1.990951,6.094005,4.176223,9.796353,-6.142025,-3.564274,-8.636258,3.435747,-0.014764,6.865046,7.225806,-2.961812,-7.196022,2.427147,4.657360,-9.498519,-3.614908,-3.756267,3.692219,5.406828,-2.967982,-6.999133,0.869408,6.272751,-7.567428,1.131097,-0.691599,1.990259,-5.311872,-4.951303,-2.292068,2.117986,-2.850927,-3.369119,9.962611,2.524035,9.942753,1.273029,8.501044,-4.223965,6.791744,4.979985,-6.252392,-0.524033,5.283828,-9.595165,1.368927,9.597498,-6.188916,-7.483452,7.822074,2.855762,4.908053,2.715643,-4.483024,-3.187887,0.894498], dtype = "float64")#candidate|6243|(78,)|const|float64
call_6241 = relay.TupleGetItem(func_4654_call(relay.reshape(var_6242.astype('int64'), [3, 13, 8]), relay.reshape(const_6243.astype('float64'), [78,]), ), 2)
call_6244 = relay.TupleGetItem(func_4657_call(relay.reshape(var_6242.astype('int64'), [3, 13, 8]), relay.reshape(const_6243.astype('float64'), [78,]), ), 2)
output = relay.Tuple([bop_6229,call_6236,var_6237,call_6241,var_6242,const_6243,])
output2 = relay.Tuple([bop_6229,call_6238,var_6237,call_6244,var_6242,const_6243,])
func_6245 = relay.Function([var_6227,var_6228,var_6237,var_6242,], output)
mod['func_6245'] = func_6245
mod = relay.transform.InferType()(mod)
var_6246 = relay.var("var_6246", dtype = "uint16", shape = (15, 10, 9))#candidate|6246|(15, 10, 9)|var|uint16
var_6247 = relay.var("var_6247", dtype = "uint16", shape = (15, 10, 9))#candidate|6247|(15, 10, 9)|var|uint16
var_6248 = relay.var("var_6248", dtype = "float64", shape = (168,))#candidate|6248|(168,)|var|float64
var_6249 = relay.var("var_6249", dtype = "int64", shape = (312,))#candidate|6249|(312,)|var|int64
output = func_6245(var_6246,var_6247,var_6248,var_6249,)
func_6250 = relay.Function([var_6246,var_6247,var_6248,var_6249,], output)
mutated_mod['func_6250'] = func_6250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6336 = relay.var("var_6336", dtype = "int16", shape = (6, 3, 14))#candidate|6336|(6, 3, 14)|var|int16
var_6337 = relay.var("var_6337", dtype = "int16", shape = (6, 3, 14))#candidate|6337|(6, 3, 14)|var|int16
bop_6338 = relay.add(var_6336.astype('int16'), relay.reshape(var_6337.astype('int16'), relay.shape_of(var_6336))) # shape=(6, 3, 14)
func_4134_call = mod.get_global_var('func_4134')
func_4137_call = mutated_mod.get_global_var('func_4137')
const_6345 = relay.const([[6.114476,-2.415815,5.879959,-4.806822],[-4.718858,1.424712,1.049974,-0.044991]], dtype = "float64")#candidate|6345|(2, 4)|const|float64
var_6346 = relay.var("var_6346", dtype = "float64", shape = (78,))#candidate|6346|(78,)|var|float64
call_6344 = relay.TupleGetItem(func_4134_call(relay.reshape(const_6345.astype('float64'), [1, 8, 1]), relay.reshape(var_6346.astype('float64'), [78,]), ), 2)
call_6347 = relay.TupleGetItem(func_4137_call(relay.reshape(const_6345.astype('float64'), [1, 8, 1]), relay.reshape(var_6346.astype('float64'), [78,]), ), 2)
output = relay.Tuple([bop_6338,call_6344,const_6345,var_6346,])
output2 = relay.Tuple([bop_6338,call_6347,const_6345,var_6346,])
func_6361 = relay.Function([var_6336,var_6337,var_6346,], output)
mod['func_6361'] = func_6361
mod = relay.transform.InferType()(mod)
var_6362 = relay.var("var_6362", dtype = "int16", shape = (6, 3, 14))#candidate|6362|(6, 3, 14)|var|int16
var_6363 = relay.var("var_6363", dtype = "int16", shape = (6, 3, 14))#candidate|6363|(6, 3, 14)|var|int16
var_6364 = relay.var("var_6364", dtype = "float64", shape = (78,))#candidate|6364|(78,)|var|float64
output = func_6361(var_6362,var_6363,var_6364,)
func_6365 = relay.Function([var_6362,var_6363,var_6364,], output)
mutated_mod['func_6365'] = func_6365
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6520 = relay.const([[[-3.986409,-3.369884,-0.872413,7.550296,-8.610144,-2.075439,-5.493316,0.982232,-4.380999,3.631960,7.079699,4.429860,9.478083,1.852833,-1.603114,0.994036]],[[9.788912,-0.461870,-5.238184,-4.567345,9.352026,6.989360,3.309263,8.860833,-8.869048,1.024731,-5.943111,8.147056,6.920549,5.154024,1.164266,-4.511316]],[[9.485038,-9.105228,3.327706,-0.428259,-7.859749,-7.047590,-3.553134,7.175850,-7.325665,-5.601136,1.635807,-6.581341,9.666298,-1.246699,-9.811504,5.707952]],[[0.487077,-0.572939,-5.985849,8.860259,-2.651301,-8.494278,3.828951,-6.621301,-0.080357,-8.248681,-6.736357,-1.334235,2.784003,-1.493383,-3.972470,1.066302]],[[-2.567996,-7.001568,-3.142644,9.678340,7.527355,3.606673,3.637066,4.252039,-6.047736,7.949027,-5.526609,-7.305994,8.462328,-8.443135,-5.060315,6.664915]],[[1.657848,7.156885,-4.845704,-1.290716,9.635893,-4.689661,7.237689,-4.925175,-0.859190,-8.993799,-4.383351,-6.045535,-0.148476,9.055357,-5.824156,2.472124]],[[-0.616606,9.831312,6.385062,-0.057026,7.515813,6.601619,-8.372394,-7.372201,9.948913,-9.012250,-8.487913,3.514114,2.781707,8.614732,-1.807524,3.708920]],[[-2.312639,9.708685,-6.885101,-0.051879,-9.084055,9.813156,3.022605,8.051145,-0.918671,-8.817731,-7.048154,9.961882,-4.862633,3.410507,3.375917,6.732746]],[[0.688425,9.367274,0.679327,5.138313,3.423723,-0.847518,0.415920,-0.453262,8.986305,-9.503618,-9.225562,6.279871,-3.888221,7.005721,4.970045,1.695124]],[[0.097964,3.682750,-2.163937,1.683523,2.158197,2.693072,7.979888,-3.325495,-9.266990,5.779238,8.063573,-2.805825,7.060048,4.946239,-8.257101,-5.197523]],[[-9.575837,-7.096496,-1.295940,-0.967559,-7.209762,-3.638527,2.938663,-2.260648,1.457840,0.395659,2.583267,9.783697,2.951187,7.946093,6.972262,-8.811466]],[[5.846006,9.040343,-1.203227,0.064653,6.689026,-1.146688,8.036383,-1.343022,-7.780067,3.082182,5.862687,1.183580,0.528141,9.117726,-1.540517,-4.808168]],[[-6.816089,6.298379,-9.344919,6.101925,0.782812,-9.522322,2.156746,3.156934,-9.042145,2.264484,4.342151,6.897418,4.693873,-4.015193,-6.445304,-8.069054]],[[-4.997266,0.279574,-3.770181,-7.065946,-7.712661,-5.972105,1.400804,-7.674041,-2.539459,-8.330367,-1.761022,4.125450,-9.063524,3.045974,-8.735308,7.568655]],[[8.066284,0.722549,-2.883162,3.826223,2.654614,-5.715955,-9.275082,-6.779614,-7.154222,-9.251980,-8.237990,-5.754762,1.509002,6.500670,5.227840,-2.309854]]], dtype = "float32")#candidate|6520|(15, 1, 16)|const|float32
uop_6521 = relay.sigmoid(const_6520.astype('float32')) # shape=(15, 1, 16)
var_6523 = relay.var("var_6523", dtype = "float32", shape = (15, 6, 16))#candidate|6523|(15, 6, 16)|var|float32
bop_6524 = relay.greater(const_6520.astype('bool'), var_6523.astype('bool')) # shape=(15, 6, 16)
func_5342_call = mod.get_global_var('func_5342')
func_5344_call = mutated_mod.get_global_var('func_5344')
const_6528 = relay.const(-7, dtype = "int16")#candidate|6528|()|const|int16
call_6527 = relay.TupleGetItem(func_5342_call(relay.reshape(const_6528.astype('int16'), [])), 1)
call_6529 = relay.TupleGetItem(func_5344_call(relay.reshape(const_6528.astype('int16'), [])), 1)
output = relay.Tuple([uop_6521,bop_6524,call_6527,const_6528,])
output2 = relay.Tuple([uop_6521,bop_6524,call_6529,const_6528,])
func_6537 = relay.Function([var_6523,], output)
mod['func_6537'] = func_6537
mod = relay.transform.InferType()(mod)
mutated_mod['func_6537'] = func_6537
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6538 = relay.var("var_6538", dtype = "float32", shape = (15, 6, 16))#candidate|6538|(15, 6, 16)|var|float32
func_6537_call = mutated_mod.get_global_var('func_6537')
call_6539 = func_6537_call(var_6538)
output = call_6539
func_6540 = relay.Function([var_6538], output)
mutated_mod['func_6540'] = func_6540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6553 = relay.var("var_6553", dtype = "float32", shape = (13, 3, 5))#candidate|6553|(13, 3, 5)|var|float32
uop_6554 = relay.asin(var_6553.astype('float32')) # shape=(13, 3, 5)
func_6218_call = mod.get_global_var('func_6218')
func_6225_call = mutated_mod.get_global_var('func_6225')
var_6581 = relay.var("var_6581", dtype = "float64", shape = (98,))#candidate|6581|(98,)|var|float64
const_6582 = relay.const([-7,3,-5,7,7,2,-7,-8,-9,-1,-3,-4,-2,8,4,8,-10,-5,-9,4,10,-1,-4,-1,9,-1,-4,7,-3,3,-2,1,1,8,10,-6,-7,-9,-8,-5,-4,-9,3,-4,1,-6,-10,7,-2,-3,-7,3,8,7,4,-2,10,7,-7,2,8,-1,2,10,-2,-8,-2,3,5,-5,-3,9,10,7,-7,-5,4,5,-3,3,8,4,-2,-9,8,10,-2,-5,7,2,-2,10,5,3,10,3,7,7,4,-10,1,4,-9,8,2,9,-6,-9,4,-7,9,-2,7,10,7,-6,8,-4,10,2,-9,-3,9,6,-5,8,2,2,1,-3,-2,7,-10,8,10,-9,10,-5,-5,2,3,3,2,-7,7,-1,10,10,6,9,7,-6,9,6,2,3,10,1,3,-6,1,-1,5,10,-9,-9,6,-3,-7,-10,-1,-6,-10,4,6,-6,-9,-7,-8,6,-7,-4,-10,-9,-10,-8,3,1,-1,-9,-6,4,-1,8,2,-7,-8,-4,-1,-5,-6,-1,7,2,-6,-6,5,-8,5,-6,-1,-7,-5,7,-6,7,7,10,-10,3,5,-10,3,9,-3,4,7,5,2,9,4,1,6,7,-8,-1,2,-5,9,-3,-8,-8,-8,-6,5,-2,1,-10,7,-2,10,9,-5,8,-10,-8,-10,3,7,2,-7,1,-8,-5,-2,1,2,-5,8,-3,-8,7,7,-8,1,8,-2,6,-2,8,-1,6,-1,-2,-8,-7,6,-4,6,-9,2,5,-6,6,3,2,5,7,10,-4,6,5,-5,-7,1,-10,-3,8,7,9,-10,-3,-2,-10,2,3,5,-2,-6,-3,-6,3,7,1,7,-5,-5,-1,-1,-9,3,4,9,8,6,-6,6,2,-9,9,-4,-3,3,4,-3,8,7,5,8,3,5,-6,7,6,10,-3,8,-1,-10,-4,2,-2,-5,-4,8,-9,-5,6,3,-9,7,-7,-8,5,-5,-4,4,5,10,-4,-7,3,-10,-5,3,7,-7,-5,3,4,3,-7,3,6,-1,2,-7,-1,6,-1,-1,-10,-3,5,9,5,7,-8,-4,-4,7,5,10,3,4,-8,-2,-3,-7,8,8,-7,5,-7,-2,-6,-6,-4,-8,4,-9,-7,3,4,8,8,-7,-3,4,3,-9,-4,-1,1,3,1,10,-5,-8,6,2,4,-1,-6,-4,-1,-10,-10,-3,-10,8,10,-1,-2,-5,7,-2,-9,-5,-10,-3,-4,5,-4,4,-5,-7,-10,-4,-7,3,-6,-4,-10,1,-8,10,-7,-5,-3,5,1,5,-10,6,-7,3,3,-10,6,4,6,-7,9,4,-3,10,-2,-7,-5,2,-3,-7,2,-1,9,-4,9,9,-5,8,3,4,-2,-8,6,-10,6,-3,-5,1,-10,-10,-8,7,-2,-1,-2,10,6,2,1,8,7,8,-8,7,-3,8,-6,5,9,-6,-1,-6,6,8,10,-7,-1,-1,3,8,-5,-9,3,-2,10,-3,4,-9,-9,-10,-6,8,-1], dtype = "uint8")#candidate|6582|(576,)|const|uint8
var_6583 = relay.var("var_6583", dtype = "uint64", shape = (99,))#candidate|6583|(99,)|var|uint64
var_6584 = relay.var("var_6584", dtype = "int16", shape = (840,))#candidate|6584|(840,)|var|int16
const_6585 = relay.const([3.888190,-5.744602,6.202414,6.454552,-0.279051,-7.102226,-5.270543,8.256478,5.045685,4.593336,-9.485962,-8.769772,0.814315,-1.733153,3.586370,0.274967,4.763275,-6.528129,1.130621,2.245355,5.219960,-6.975181,7.023364,3.582768,3.459849,-4.491085,8.520958,-5.618124,7.920870,-1.706091,-2.484976,0.500257,3.472772,-4.925744,-8.649216,-4.717112,-1.684686,8.801710,5.704182,-0.080920,8.332547,-2.209452,2.676074,9.338438,-7.254112,-7.336435,-4.815814,-7.395836,2.719337,-2.990737,-2.645733,-2.584215,5.901161,-6.656998,-5.206412,8.550706,-1.318222,3.425939,-3.890896,-4.674156,-9.800058,0.318486,2.962178,-7.967801,9.289971,-4.530164,9.043254,-4.766566,-3.129122,3.468268,6.754776,3.072097,9.825301,3.993625,2.196787,-8.997535,-3.858855,-7.647975,6.372666,9.250235,9.465872,2.049355,-7.107361,2.667749,-4.587214,1.653302,0.452336,5.619400,2.769453,5.694496,8.206456,-7.046506,3.409714,6.328150,1.606328,2.375279,-1.327756,-9.208004,-0.347203,6.206033,-3.642295,-7.598338,4.000963,-9.443110,9.574020,-0.437070,6.989004,-1.719594,1.177398,-2.063498,-4.007415,-6.283335,-4.994789,6.786646,-7.982143,1.040125,-6.062568,4.251908,-3.881567,-2.507325,9.191965,-5.895135,-2.477406,2.452198,-6.865453,-8.425423,-5.779021,8.708615,0.449356,5.259720,1.894185,8.163349,6.323474,-5.728063,-8.852209,7.324718,1.142844,8.349188,-0.893378,5.228974,-5.906650,-8.285090,-1.979161,8.133489], dtype = "float32")#candidate|6585|(144,)|const|float32
call_6580 = relay.TupleGetItem(func_6218_call(relay.reshape(var_6581.astype('float64'), [2, 7, 7]), relay.reshape(const_6582.astype('uint8'), [576,]), relay.reshape(var_6583.astype('uint64'), [99, 1]), relay.reshape(var_6584.astype('int16'), [840,]), relay.reshape(const_6585.astype('float32'), [144,]), ), 2)
call_6586 = relay.TupleGetItem(func_6225_call(relay.reshape(var_6581.astype('float64'), [2, 7, 7]), relay.reshape(const_6582.astype('uint8'), [576,]), relay.reshape(var_6583.astype('uint64'), [99, 1]), relay.reshape(var_6584.astype('int16'), [840,]), relay.reshape(const_6585.astype('float32'), [144,]), ), 2)
bop_6594 = relay.greater_equal(var_6553.astype('bool'), relay.reshape(uop_6554.astype('bool'), relay.shape_of(var_6553))) # shape=(13, 3, 5)
bop_6600 = relay.floor_mod(bop_6594.astype('float32'), relay.reshape(uop_6554.astype('float32'), relay.shape_of(bop_6594))) # shape=(13, 3, 5)
output = relay.Tuple([call_6580,var_6581,const_6582,var_6583,var_6584,const_6585,bop_6600,])
output2 = relay.Tuple([call_6586,var_6581,const_6582,var_6583,var_6584,const_6585,bop_6600,])
func_6610 = relay.Function([var_6553,var_6581,var_6583,var_6584,], output)
mod['func_6610'] = func_6610
mod = relay.transform.InferType()(mod)
var_6611 = relay.var("var_6611", dtype = "float32", shape = (13, 3, 5))#candidate|6611|(13, 3, 5)|var|float32
var_6612 = relay.var("var_6612", dtype = "float64", shape = (98,))#candidate|6612|(98,)|var|float64
var_6613 = relay.var("var_6613", dtype = "uint64", shape = (99,))#candidate|6613|(99,)|var|uint64
var_6614 = relay.var("var_6614", dtype = "int16", shape = (840,))#candidate|6614|(840,)|var|int16
output = func_6610(var_6611,var_6612,var_6613,var_6614,)
func_6615 = relay.Function([var_6611,var_6612,var_6613,var_6614,], output)
mutated_mod['func_6615'] = func_6615
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6653 = relay.var("var_6653", dtype = "int8", shape = (14, 15, 10))#candidate|6653|(14, 15, 10)|var|int8
const_6654 = relay.const([[[-3,4,8,6,2,-9,10,-5,-10,6],[5,10,-6,-5,-9,6,-3,5,4,-1],[1,-7,8,2,7,3,2,3,2,-4],[6,4,2,-3,3,5,6,6,4,-3],[8,10,-9,-5,-9,-3,10,-8,-9,9],[9,-7,-7,-8,-3,-9,-8,10,-4,-8],[5,-9,1,7,10,-1,3,-3,-4,-9],[-3,9,-9,-9,-5,5,-10,-7,6,10],[-2,-7,10,-5,-1,1,-5,7,9,-7],[7,-8,-10,6,9,-4,-9,-7,-10,-3],[-7,9,7,5,6,-2,-8,7,-5,6],[1,8,2,8,10,-5,10,-8,-1,-2],[-9,-7,-7,6,9,10,3,-9,5,-7],[3,-1,-7,9,-6,-3,7,3,-4,8],[3,3,-5,-3,10,-5,-3,5,9,-5]],[[4,1,8,5,-7,5,-10,7,1,-6],[-1,5,1,-3,-5,-9,-8,10,6,-2],[-8,-4,7,4,1,-10,-4,6,8,-8],[-10,2,9,8,7,10,-6,6,6,-1],[1,-1,8,-2,9,-7,-9,8,1,5],[5,5,-10,3,2,-4,5,10,3,10],[-4,-10,6,-10,6,-8,3,-10,-6,-10],[9,1,-9,9,-3,-1,-6,9,-1,-10],[6,-7,1,5,-2,-6,-1,7,8,-10],[-5,-9,4,-2,6,-1,7,-5,-7,6],[5,2,-8,6,7,10,-8,2,4,-6],[-5,5,7,2,10,5,1,1,-10,-9],[4,-10,6,-6,-5,3,1,4,7,4],[-8,-3,8,-10,3,-5,9,-1,7,-7],[2,-4,9,-3,-6,2,-7,2,-10,-2]],[[-4,-4,-4,9,-4,4,8,9,6,4],[10,-5,-2,2,9,-9,-3,-5,-9,6],[5,-9,10,2,1,-7,3,-8,6,9],[4,-8,10,-3,2,-2,1,-9,1,-4],[-7,-5,-2,-7,1,-6,5,-1,1,-6],[5,-9,-1,-5,2,-7,2,-9,-5,3],[-4,2,-4,4,8,8,8,-8,-6,3],[4,-6,4,-1,4,6,4,5,10,3],[1,-3,-9,-10,-6,2,5,-6,-5,-9],[-2,7,10,6,-5,-1,-2,-5,-3,-7],[-8,-9,-7,3,4,3,6,2,3,-7],[6,-5,10,9,-3,-6,-5,5,2,6],[-1,-1,-10,-4,-2,-1,8,-9,6,-6],[4,9,7,-3,-5,4,-9,-4,2,2],[-8,2,-1,-6,9,-5,4,-4,9,9]],[[-10,1,-9,-8,4,5,-7,9,6,-6],[-9,-9,6,-5,5,-10,-6,4,-7,-8],[-6,-2,-8,2,8,2,-8,2,4,-8],[1,4,8,-7,-4,-5,-6,3,8,1],[-3,5,1,5,7,8,3,9,2,8],[1,-6,10,2,-5,6,-5,1,-2,-5],[4,-1,5,-10,-6,-3,-10,5,-6,-10],[1,3,8,-3,-4,1,10,-5,-2,2],[-3,-4,-3,5,-5,4,-10,1,3,-8],[10,5,1,-7,-6,2,7,2,-4,-9],[1,-6,-10,-9,-9,-10,-8,1,4,4],[-10,-9,2,-6,10,9,9,-10,-10,-4],[6,10,-6,3,2,1,-6,8,4,6],[9,5,1,-9,-6,2,6,8,-4,3],[2,7,-6,6,8,6,-9,7,10,-3]],[[-10,2,6,7,3,-5,6,3,-6,4],[10,1,-4,-1,8,-3,-8,2,7,3],[1,-6,-9,-7,-7,9,2,9,2,-10],[-4,7,-10,-6,-10,8,7,6,-5,1],[5,-1,3,3,-2,4,-6,7,-1,2],[4,-5,-5,6,-8,-2,-10,10,-5,-7],[-3,-4,-3,4,6,7,5,-8,5,-10],[5,-5,-5,8,-7,-6,9,9,10,8],[-1,-5,-9,7,-1,6,-9,10,-8,-5],[-7,-5,-10,6,10,-8,-1,7,8,-3],[-3,4,3,-7,6,4,-10,8,5,-3],[-10,-8,-6,10,-1,4,3,5,3,7],[-1,-3,-9,-2,-6,3,-8,4,6,-9],[-6,-8,-10,-7,2,-4,-2,-5,-7,9],[-5,-7,1,-6,-7,1,-7,-4,-1,-2]],[[2,9,3,9,2,3,-8,10,-4,-8],[3,-4,-10,9,-7,8,9,5,1,3],[-10,1,-9,-1,9,-3,9,-3,6,-4],[-7,2,10,-9,1,-6,-8,-1,10,-9],[-9,1,2,1,-10,-10,-9,-4,-2,-2],[4,-6,-9,-1,-6,9,-5,-7,6,6],[5,2,10,3,-8,-9,-6,-7,9,-5],[-2,-2,7,-5,-9,9,-7,-8,-9,-3],[9,-1,4,-2,-10,9,1,9,3,3],[5,8,6,-2,-10,-2,-6,5,-3,-4],[2,-4,-7,5,9,3,-1,-7,-10,10],[6,10,8,-2,10,3,1,9,10,-9],[-9,4,-5,6,2,7,9,9,-1,-8],[1,5,1,-10,-5,2,3,-5,-9,-6],[-9,8,-2,-7,10,-6,-9,2,2,-10]],[[3,4,-8,-6,1,7,-9,-8,-3,-4],[2,-3,10,10,-9,10,2,10,4,-6],[-2,-5,-9,-1,-7,5,-4,10,-6,-7],[-9,-9,-2,3,-6,1,2,-8,10,-3],[-4,-6,-9,-2,7,1,8,-8,-8,-6],[-10,2,-4,4,10,1,-10,-4,-5,5],[8,9,4,6,-10,6,-1,3,9,-9],[9,-4,-9,9,5,-8,-9,-6,-6,-7],[-5,8,3,3,-3,2,-4,-10,-3,9],[-4,-10,3,8,-10,-8,7,-1,7,2],[-8,-1,-1,5,1,-3,-10,8,10,-5],[-10,-5,6,9,2,3,-8,-10,7,-4],[-9,3,-1,-5,8,1,-2,5,2,3],[-5,-2,3,1,-9,-10,3,8,-6,-7],[4,2,-4,-3,-1,10,7,9,8,-1]],[[7,5,-5,-8,-7,-5,2,-6,4,-5],[-10,-1,1,-6,-1,3,-10,-2,1,-6],[-4,9,10,-4,-7,-9,6,-3,-9,-3],[5,10,4,10,1,-6,-1,-5,-2,-5],[-10,5,4,2,-6,6,2,-9,-10,-4],[9,8,-6,-10,1,-9,-2,6,4,-1],[-4,-4,-7,-5,-3,9,-10,1,1,-6],[7,-3,2,4,1,8,4,-2,-6,7],[-5,-3,-3,-10,-6,-7,2,3,-3,-1],[4,-10,3,1,-8,-1,5,9,-6,4],[-5,-6,-5,2,6,10,7,8,1,-9],[8,-5,4,2,-1,2,9,3,-7,-10],[2,-2,-2,-7,10,6,-8,10,3,1],[-8,9,3,1,-9,-2,5,-8,-4,3],[-4,1,-8,-3,-5,-6,-1,2,7,5]],[[-6,-6,1,-9,-2,-9,9,-8,3,1],[-8,-2,-2,-3,8,6,5,7,8,10],[-8,6,-3,6,6,5,-4,2,-9,-4],[3,3,4,3,-7,3,4,-3,-4,4],[-8,-3,-3,-6,-10,-3,2,10,-7,-9],[-5,-10,-2,9,-3,5,1,-4,4,1],[2,-8,10,-10,2,3,-2,10,7,-9],[2,2,5,-8,-7,5,-2,4,3,-1],[5,-4,-9,10,-4,8,4,-7,-7,-8],[-5,4,7,9,3,-7,-6,-3,3,-2],[-2,-3,2,5,-7,4,5,-9,-5,4],[-2,6,10,-4,-3,-2,-9,-3,-4,-10],[3,-5,3,3,-4,-6,6,4,-1,10],[5,3,6,-4,-6,3,10,8,-2,1],[-7,-4,-1,8,-7,8,-10,-7,-6,-7]],[[5,2,8,1,2,-7,3,2,8,-5],[-8,-8,-5,7,5,-6,3,-8,-9,-10],[2,-9,-9,-8,1,-3,-8,9,7,7],[-9,-2,2,-5,2,-1,5,9,3,10],[-3,-4,5,6,-9,-3,7,-3,7,1],[7,4,-4,-5,-2,-8,1,8,7,-9],[-9,7,8,-5,9,-4,8,8,1,-8],[2,10,9,-1,-3,3,1,-8,-9,3],[8,6,-5,1,-2,1,-4,7,-10,-10],[-9,5,-4,-10,-5,-2,-10,1,5,-1],[1,-10,2,10,8,-5,4,8,2,-2],[-10,-9,3,6,-2,-6,1,-7,7,-7],[9,3,-3,-3,10,-9,10,-3,-8,2],[7,4,-5,-3,10,9,-1,5,5,8],[-1,-8,-6,3,-1,7,-4,6,-4,6]],[[-8,-5,9,-4,8,-2,2,10,-10,-4],[-10,8,4,7,-2,3,-6,-10,8,1],[-7,-3,-2,7,-9,-10,-3,-5,2,-4],[3,-6,-6,5,-10,8,-9,4,-7,3],[1,-3,2,1,9,8,-3,-4,1,-10],[8,-6,-10,-10,1,-1,7,-7,5,2],[-3,8,5,4,-3,-6,-4,-10,5,3],[5,8,-9,10,-5,10,3,4,1,-5],[-4,-5,-3,5,7,4,2,-4,1,7],[-6,-3,-4,-8,-7,-9,-4,-1,1,5],[-4,10,2,-6,-7,8,9,-2,-10,-10],[-1,-8,-3,-2,-3,-4,7,-2,9,-4],[3,10,5,9,-10,2,5,-8,9,7],[-8,-10,7,8,1,2,7,-10,-2,8],[5,7,10,-2,-7,2,10,-2,5,4]],[[-5,-2,8,3,-10,-4,-2,6,-6,2],[7,-9,-5,5,3,8,6,10,-1,-2],[5,5,-6,-7,9,-6,-3,-3,-7,10],[8,8,9,5,-1,2,-4,-3,-10,-5],[-2,-5,-5,5,5,-2,5,-6,-9,4],[-8,8,-3,-4,-1,-2,-1,10,-3,8],[2,2,1,2,9,-2,2,10,-10,8],[5,-6,7,2,1,-2,9,2,4,-2],[10,9,-5,-7,3,-8,-7,3,-2,-6],[5,8,3,-8,4,9,3,5,-7,2],[-8,-8,-9,-9,-8,-6,4,-8,5,-6],[-5,2,5,7,8,3,2,-10,-4,1],[-5,-6,-10,8,2,6,-8,-7,-6,6],[4,1,-3,-6,-4,-1,-4,10,5,1],[1,-9,6,4,2,7,1,3,-2,3]],[[6,5,-2,5,-10,-9,6,1,-3,5],[7,3,-3,-2,-5,-9,8,2,6,1],[6,8,-7,-3,4,-6,-1,8,5,-8],[-6,3,10,6,-3,-1,-7,10,-8,2],[2,-2,9,8,4,2,1,-2,1,7],[6,-6,9,-5,-10,8,7,6,3,-7],[7,5,-9,9,6,5,-5,3,8,10],[6,-9,-9,-8,6,-9,9,3,10,7],[9,10,-4,8,2,7,6,-1,-10,9],[-6,-10,-10,-10,-8,-10,10,3,-4,3],[10,4,-5,-3,5,2,-8,-6,-7,1],[-5,2,-9,-7,-5,9,-2,1,1,2],[-6,9,7,2,-6,-9,2,-6,6,5],[6,9,8,-5,4,9,2,-3,5,-4],[6,4,5,-8,5,-4,-7,9,3,-8]],[[-3,-6,-5,5,4,-3,-3,8,-8,10],[-2,-4,-7,6,-1,6,1,1,3,-8],[-7,7,9,-9,4,10,-6,-6,-1,3],[-9,6,-3,8,2,4,8,-9,-1,-3],[10,2,2,-8,-2,-3,-10,-1,-5,-2],[6,4,1,10,-2,6,10,5,-8,3],[4,1,6,-10,2,5,9,-1,-3,-2],[-5,6,-8,7,3,-6,-9,-2,8,5],[-5,-7,2,-5,-10,-9,-7,2,5,1],[-1,-7,-1,-7,-3,10,-5,-2,-6,3],[6,-3,-6,-10,6,8,-8,10,-4,-10],[-1,4,-7,4,-5,-9,8,6,9,-2],[-7,4,5,-5,-3,7,7,-10,8,-10],[-1,-4,3,1,-5,-6,-5,-6,-6,-3],[-9,-1,-2,1,-6,-10,1,6,-5,-7]]], dtype = "int8")#candidate|6654|(14, 15, 10)|const|int8
bop_6655 = relay.bitwise_or(var_6653.astype('int8'), relay.reshape(const_6654.astype('int8'), relay.shape_of(var_6653))) # shape=(14, 15, 10)
func_5880_call = mod.get_global_var('func_5880')
func_5883_call = mutated_mod.get_global_var('func_5883')
var_6663 = relay.var("var_6663", dtype = "float64", shape = (352,))#candidate|6663|(352,)|var|float64
call_6662 = relay.TupleGetItem(func_5880_call(relay.reshape(var_6663.astype('float64'), [352, 1])), 1)
call_6664 = relay.TupleGetItem(func_5883_call(relay.reshape(var_6663.astype('float64'), [352, 1])), 1)
func_4583_call = mod.get_global_var('func_4583')
func_4587_call = mutated_mod.get_global_var('func_4587')
var_6667 = relay.var("var_6667", dtype = "uint64", shape = (5, 126))#candidate|6667|(5, 126)|var|uint64
call_6666 = relay.TupleGetItem(func_4583_call(relay.reshape(var_6667.astype('uint64'), [10, 7, 9]), relay.reshape(var_6667.astype('uint64'), [10, 7, 9]), ), 0)
call_6668 = relay.TupleGetItem(func_4587_call(relay.reshape(var_6667.astype('uint64'), [10, 7, 9]), relay.reshape(var_6667.astype('uint64'), [10, 7, 9]), ), 0)
output = relay.Tuple([bop_6655,call_6662,var_6663,call_6666,var_6667,])
output2 = relay.Tuple([bop_6655,call_6664,var_6663,call_6668,var_6667,])
func_6680 = relay.Function([var_6653,var_6663,var_6667,], output)
mod['func_6680'] = func_6680
mod = relay.transform.InferType()(mod)
mutated_mod['func_6680'] = func_6680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6680_call = mutated_mod.get_global_var('func_6680')
var_6682 = relay.var("var_6682", dtype = "int8", shape = (14, 15, 10))#candidate|6682|(14, 15, 10)|var|int8
var_6683 = relay.var("var_6683", dtype = "float64", shape = (352,))#candidate|6683|(352,)|var|float64
var_6684 = relay.var("var_6684", dtype = "uint64", shape = (5, 126))#candidate|6684|(5, 126)|var|uint64
call_6681 = func_6680_call(var_6682,var_6683,var_6684,)
output = call_6681
func_6685 = relay.Function([var_6682,var_6683,var_6684,], output)
mutated_mod['func_6685'] = func_6685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6699 = relay.var("var_6699", dtype = "float32", shape = (12, 4, 8))#candidate|6699|(12, 4, 8)|var|float32
var_6700 = relay.var("var_6700", dtype = "float32", shape = (12, 4, 8))#candidate|6700|(12, 4, 8)|var|float32
bop_6701 = relay.mod(var_6699.astype('float32'), relay.reshape(var_6700.astype('float32'), relay.shape_of(var_6699))) # shape=(12, 4, 8)
func_5817_call = mod.get_global_var('func_5817')
func_5820_call = mutated_mod.get_global_var('func_5820')
const_6716 = relay.const([-1.432806,-2.594626,3.404293,-2.220966,8.968447,8.946479,-0.678620,-5.231887,-6.533516,-5.421711,0.085750,0.189110,-9.632915,-5.214661,-0.402848,-9.216144,-6.307833,8.056224,-6.641133,-3.448724,0.551192,-5.941646,-0.915042,-4.112526,-2.430394,1.011376,-2.896839,-1.587549,7.338874,-3.293550,-6.012886,-1.923988,4.083856,-6.317762,-9.553312,2.839404,-8.824404,8.536081,-4.850516,8.064486,-8.039979,-1.563510,-3.969728,5.186419], dtype = "float64")#candidate|6716|(44,)|const|float64
call_6715 = relay.TupleGetItem(func_5817_call(relay.reshape(const_6716.astype('float64'), [44,])), 2)
call_6717 = relay.TupleGetItem(func_5820_call(relay.reshape(const_6716.astype('float64'), [44,])), 2)
output = relay.Tuple([bop_6701,call_6715,const_6716,])
output2 = relay.Tuple([bop_6701,call_6717,const_6716,])
func_6720 = relay.Function([var_6699,var_6700,], output)
mod['func_6720'] = func_6720
mod = relay.transform.InferType()(mod)
mutated_mod['func_6720'] = func_6720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6720_call = mutated_mod.get_global_var('func_6720')
var_6722 = relay.var("var_6722", dtype = "float32", shape = (12, 4, 8))#candidate|6722|(12, 4, 8)|var|float32
var_6723 = relay.var("var_6723", dtype = "float32", shape = (12, 4, 8))#candidate|6723|(12, 4, 8)|var|float32
call_6721 = func_6720_call(var_6722,var_6723,)
output = call_6721
func_6724 = relay.Function([var_6722,var_6723,], output)
mutated_mod['func_6724'] = func_6724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6955 = relay.var("var_6955", dtype = "int8", shape = (12, 15, 14))#candidate|6955|(12, 15, 14)|var|int8
const_6956 = relay.const([[[-3,-2,5,1,-9,3,4,7,4,6,-10,-4,6,-6],[8,-6,9,3,9,-6,-2,4,-8,-6,10,4,8,-3],[-7,-9,4,-3,3,-7,-9,-3,-1,-9,-9,-3,-6,-9],[6,-3,8,5,7,-5,5,5,6,-7,4,-7,-10,1],[7,2,-3,-4,7,5,9,-6,-1,-10,-8,3,10,6],[10,6,1,-1,-5,5,6,9,9,2,8,-8,-9,-10],[-3,-1,-6,-8,-6,-9,-6,4,6,9,-1,-9,5,7],[8,-2,-6,4,1,8,3,-8,-4,10,8,-7,-4,-9],[-4,10,-8,5,-7,-5,-10,-6,10,9,8,6,-3,-6],[1,-4,6,9,10,7,10,6,4,-1,5,10,3,1],[1,3,-7,-9,4,-6,-9,-2,6,6,-9,8,-9,9],[-6,-8,-10,-1,9,-9,-5,7,-9,-10,6,-6,-5,1],[3,-7,-2,8,-7,10,-6,-1,5,6,7,-2,-3,8],[-3,5,-10,-6,9,-6,-2,4,-7,-2,3,10,-3,-2],[1,6,10,-3,-4,-3,-5,-9,9,-7,-10,-3,-5,4]],[[-5,4,-6,-3,10,7,7,6,2,8,-9,-10,-2,-4],[5,-4,-4,-10,9,-9,9,4,9,-7,5,2,8,3],[-2,10,-6,-10,3,3,3,-4,9,8,7,-8,-1,-6],[-2,-3,-7,4,5,4,-3,-3,-10,-9,-4,8,2,-2],[8,-4,-9,7,-7,-7,-6,-4,9,-5,4,-9,-1,-10],[5,-8,1,3,10,-4,-4,1,6,-7,3,-4,-6,-7],[-10,-1,-10,7,-4,9,-2,-1,8,6,-7,8,7,-1],[5,-9,5,-9,3,-4,8,-9,10,9,-1,-1,8,-2],[-1,7,1,10,-7,8,-7,-7,8,7,5,6,-1,-6],[-6,5,9,3,9,5,6,-8,-8,10,-10,-5,-5,10],[-8,8,-5,1,-4,-6,-8,10,4,7,-2,7,-5,4],[-3,-7,-1,5,7,-9,-8,5,6,2,-3,10,-7,7],[9,-2,-8,-1,4,-4,-2,4,-10,8,4,3,-8,-5],[2,-4,5,-3,-7,-9,-10,1,-8,2,4,3,9,-7],[9,-1,-4,-1,-3,2,-9,-2,-6,3,-10,3,6,-1]],[[-1,3,10,10,8,-5,-6,-2,7,-5,7,-10,-4,10],[-8,8,-9,9,2,-3,5,-3,4,7,9,8,-2,4],[1,10,5,1,7,-1,-1,1,-4,-8,-10,-4,9,-7],[-10,8,5,3,6,-1,-5,-5,-9,-4,-1,-3,-5,1],[9,-4,-1,2,-4,7,8,4,2,-10,6,-6,-4,7],[8,-5,10,-5,6,8,-2,-10,2,-6,5,-7,-1,7],[4,9,4,8,-5,-4,10,-1,-6,7,-6,4,10,-2],[6,6,-3,-1,-9,10,2,7,3,-6,-10,9,-5,-9],[6,-4,1,4,5,1,-6,9,5,2,5,-9,1,3],[10,-9,-3,1,-4,-10,-2,-4,3,8,1,-8,-8,-1],[6,4,-8,-4,-7,7,-2,2,-9,2,-2,-2,10,9],[-6,6,-6,7,3,-5,8,2,10,-2,2,2,6,-9],[1,-6,-2,-10,1,2,-9,-4,10,7,-2,10,-4,-2],[-4,9,-10,-4,-7,1,-4,-10,2,1,10,4,6,-7],[-8,-3,9,10,6,4,-10,1,-9,-6,7,-7,-3,10]],[[-6,-2,-8,-7,-6,10,2,-7,-10,6,-1,4,-10,-6],[1,4,5,-10,-8,1,3,-8,-5,7,5,-7,-6,4],[-2,-10,-8,-8,10,-9,-6,-4,2,-6,-9,4,-8,2],[-4,1,9,-6,-6,2,-4,-4,-1,-3,-2,-2,2,9],[-9,-4,-7,6,6,3,-6,-8,5,-3,2,-9,-5,-9],[9,8,7,8,7,-8,-5,3,-5,6,-4,-6,6,-3],[8,-7,10,-2,7,10,5,-7,10,-4,2,7,-10,2],[-10,-5,9,-5,9,-5,-9,-10,-7,-5,-6,4,-10,4],[3,5,1,10,-4,-8,-2,9,1,6,-8,-7,-3,-2],[1,4,-2,-7,-9,-4,2,7,-8,-7,-10,7,5,10],[-6,-10,8,10,3,4,4,8,-9,-2,-3,-6,-4,-1],[-10,7,-5,10,3,3,7,9,-5,-7,-1,-3,-10,9],[5,-2,-1,8,8,-9,-10,-6,-2,-10,1,5,-8,8],[9,-3,7,9,6,2,-9,-2,5,-8,2,-6,-5,7],[-9,-5,-4,5,6,7,-3,-4,4,-1,-6,8,7,3]],[[6,9,-6,-6,-3,-2,-6,10,2,4,-2,4,4,-5],[7,4,9,1,-6,-8,9,-9,-10,8,5,-5,5,-6],[-3,-1,-1,6,-6,5,-3,4,-2,-10,-2,-2,8,-3],[-1,3,1,6,9,-2,-6,-9,-2,4,-6,6,-1,-2],[-10,-4,-5,4,-1,8,2,-4,-8,9,6,4,8,-7],[-10,7,-7,10,-8,-9,-5,-6,6,-5,-5,-6,8,2],[-2,4,-1,2,4,9,6,-8,5,-8,-5,7,9,-10],[5,-4,2,-9,-1,-8,-2,-4,7,1,-9,6,2,-4],[9,8,8,9,10,-1,-8,3,-10,-10,10,-2,10,2],[1,3,-2,4,-2,9,10,2,-1,-1,3,-9,-3,-1],[6,5,1,-7,-8,2,3,-4,3,4,1,6,-7,7],[5,10,-1,-1,2,5,1,2,1,1,-9,8,10,-4],[-9,4,-8,5,1,2,-6,-3,-4,-2,-8,9,-8,9],[-8,-3,-3,1,1,-1,-4,6,-9,6,4,8,-9,-1],[-3,2,-3,-10,-2,-6,-9,-7,-9,10,2,1,3,7]],[[-8,8,-9,5,-7,-6,6,-4,-10,-5,-4,7,2,-1],[1,7,-8,-1,7,-9,-2,5,-9,-2,-2,8,-5,-1],[6,10,-9,7,1,-2,-5,-5,8,-5,-1,-7,-6,-8],[-1,6,8,-5,4,-2,-9,5,7,-10,-2,-3,-2,5],[-5,-8,1,-4,-3,-5,10,-6,-4,-2,3,-8,-7,-7],[9,-8,4,-3,-4,-3,7,-8,7,-3,-4,-4,8,-1],[2,5,-9,-8,-3,-7,9,5,-8,-10,-6,-6,9,-5],[-3,-2,-6,8,2,-10,10,-3,9,-2,3,-2,6,-7],[-7,2,3,-6,-4,4,-4,-2,-4,-1,5,10,5,8],[9,6,10,-7,-5,1,9,7,2,6,-6,-8,2,10],[-9,9,-4,3,5,8,-3,1,-6,3,-8,5,8,7],[-3,-7,7,-8,1,6,1,7,-3,-6,-7,-7,10,8],[-9,-7,-4,-3,-10,-2,4,10,10,-9,-6,-1,4,7],[-4,-1,10,3,4,-2,9,-7,2,8,5,-6,-4,3],[7,-3,2,3,-4,5,2,-2,3,-6,9,8,3,4]],[[-1,5,-6,8,-4,2,-7,6,6,2,9,6,-2,-1],[-10,-2,3,-8,8,7,-9,10,5,7,3,-5,-9,-10],[7,6,10,8,-9,-2,-2,-9,-7,-9,4,-6,-7,-9],[1,-7,-3,-6,3,6,-10,-9,7,-5,6,9,-2,-6],[5,3,-5,6,3,10,-8,8,-5,10,4,8,-1,-1],[-3,2,-10,-6,5,-2,-6,6,9,1,2,7,9,7],[4,3,-5,-7,-9,-2,5,-7,-8,-4,-9,-2,6,-7],[7,-7,10,-8,6,-9,-8,-1,5,-5,-1,2,6,10],[-3,9,9,-9,-7,-5,4,-7,-7,7,-8,-6,5,-8],[-10,-5,7,1,1,6,-10,-10,-7,7,7,5,-8,4],[-7,-4,-3,9,4,-6,1,2,5,6,-9,3,8,-1],[8,-2,8,-1,-7,-2,10,6,2,-3,-8,-8,-1,-2],[10,7,-9,-3,7,9,-4,-4,9,-4,-8,9,-5,4],[1,-4,1,10,-2,-6,-9,-2,-6,-7,-6,9,9,1],[-6,-9,3,9,-9,-2,4,-10,3,-5,-8,-5,5,-10]],[[1,-8,8,-5,3,5,-4,10,4,-2,2,7,2,-6],[-7,1,10,6,-9,1,6,-3,-2,8,-3,-5,2,6],[-6,-2,1,-3,-5,2,-2,3,6,8,-8,-4,-9,-9],[10,4,8,-3,9,1,-6,7,6,6,5,10,10,-8],[2,9,-3,-2,-9,1,10,2,-6,6,9,4,5,1],[7,-4,7,2,8,-2,-8,5,-6,6,5,2,3,10],[-9,3,2,-6,3,-10,4,6,-6,2,9,2,9,10],[1,9,-2,-7,-10,-5,2,1,-7,8,9,5,-7,4],[2,-7,3,-2,-8,1,-1,10,2,-1,-2,4,8,-1],[-6,-2,-6,-1,5,-6,-2,1,-3,-9,6,-6,9,-10],[-9,6,4,4,-5,1,-10,-2,-5,-8,-8,3,-6,-10],[1,4,1,-5,-5,4,-6,1,3,-8,10,7,2,-2],[1,3,-4,-9,-6,9,-5,-3,-10,-7,-10,1,3,-6],[8,-3,-1,-10,-3,7,5,-3,9,-3,10,3,-7,8],[2,6,3,10,6,-9,1,10,-2,-8,9,-1,1,9]],[[-8,-1,2,-2,-5,-10,-2,-1,3,-9,-6,-7,8,6],[-1,1,-3,-10,8,-1,-4,-5,10,-9,9,9,5,-2],[3,4,4,-5,-8,5,9,-8,-9,-1,-8,1,8,-3],[-7,8,5,-5,-9,-10,-9,2,1,3,2,-8,-4,-10],[-10,-7,-9,8,-7,5,-5,-3,-7,6,-5,-7,-5,-9],[-5,-1,-3,-3,-3,8,-4,-8,-7,-7,3,6,2,-5],[10,6,-5,2,7,-2,-8,2,5,-5,2,1,-3,3],[10,-4,6,-8,9,10,-7,6,-3,9,2,-2,-4,-10],[-10,6,-3,-10,10,-9,-10,-3,-1,4,9,4,5,-6],[1,-10,8,-10,-4,-1,10,3,1,9,-7,8,6,9],[-1,2,10,-2,-8,1,-7,-6,6,-9,5,1,-2,-10],[-2,-10,4,5,-6,2,1,5,10,5,3,3,3,-2],[2,3,-10,6,-9,-10,6,-8,-9,-5,4,-3,3,5],[-7,-10,8,2,8,-6,7,-1,-9,-1,10,5,7,3],[3,7,4,10,3,-3,-10,-8,-4,1,6,2,-2,-1]],[[7,9,1,-2,3,10,4,7,-2,-2,-3,-4,6,6],[4,-5,3,-3,-9,-3,8,6,-7,-7,-7,-7,-1,1],[6,-7,9,3,7,-8,4,-9,-5,6,10,-10,2,7],[-10,-5,8,-9,4,-8,-10,9,8,-6,-3,-4,8,9],[-3,5,7,-10,-2,9,-2,8,5,-8,3,5,-8,8],[5,8,-2,-3,-3,-3,3,2,10,9,-7,-8,3,-8],[-4,-9,-2,9,1,4,-5,10,10,5,-2,-5,3,1],[7,-1,6,2,-6,-3,-2,-3,-5,-7,5,-4,8,7],[-3,9,2,2,9,-7,6,-4,-8,-9,9,7,-8,10],[10,-9,-10,4,-10,7,4,-8,3,-1,8,5,6,1],[2,-1,-1,-7,1,-10,-10,2,-2,-6,-2,-7,7,-8],[-1,-8,-10,-7,-3,9,-8,7,-5,-3,9,1,6,-2],[7,7,-10,-3,6,-1,-6,5,9,-5,-10,3,-8,1],[-2,7,4,9,1,-4,6,7,4,-8,-3,9,-3,-3],[7,-5,8,10,7,5,3,-6,3,-1,-5,-3,-3,-2]],[[-5,7,8,2,-5,-9,4,-2,-3,8,-2,-6,9,5],[-2,-8,1,-10,9,-6,-6,7,-9,9,-7,-10,7,6],[-3,-9,8,-1,-5,8,5,-8,-1,5,4,-3,-2,-10],[7,6,-8,5,4,-5,-1,5,-10,-8,-8,10,6,2],[6,-6,1,5,7,-5,7,10,-6,-5,7,-5,6,-4],[-9,-2,-2,10,-10,-3,4,-8,10,1,4,-2,9,4],[3,10,8,-8,2,-4,-2,1,-4,9,8,2,5,-3],[-1,2,8,-7,5,7,-5,10,-7,-5,10,9,-3,-2],[-4,3,-3,-1,-6,-7,8,-8,4,-2,1,-4,-1,-10],[1,-1,8,-2,8,2,-2,4,-3,-2,-4,-10,4,-5],[4,-7,9,1,1,-6,7,-2,-9,10,3,-10,8,10],[-1,-7,2,9,-2,-7,-6,-2,5,3,-2,-5,-6,-10],[5,8,-6,-1,9,-10,-2,5,-1,10,-3,-9,5,2],[9,8,3,-9,9,7,-2,8,-3,-2,10,-10,5,9],[-3,3,-4,-5,-7,6,-8,7,-2,-6,7,-1,1,3]],[[-3,8,-3,8,-4,-4,1,10,-5,-9,-1,3,-4,9],[6,-1,-4,4,2,7,-7,8,3,7,-6,-6,-3,6],[-3,-1,9,-7,1,-2,-5,8,2,-2,-7,-2,7,-1],[-6,8,-4,-8,10,-5,1,3,-6,2,10,-2,4,9],[3,4,7,-1,-10,3,8,-3,5,7,-1,-9,2,8],[-5,-7,-7,10,-2,6,-9,4,-8,6,-4,-5,1,-6],[5,-9,10,-1,-9,-2,1,5,-8,-9,5,-10,-10,2],[10,6,-1,-8,-5,8,1,6,-10,3,-7,4,2,9],[-2,-5,10,-10,8,-3,-8,-6,-5,-10,-1,-2,-7,-10],[-2,-1,1,-9,-7,5,-6,8,-3,2,9,10,-4,8],[-9,-10,-9,-7,9,5,-4,3,1,3,-8,-2,6,-6],[-4,-4,7,6,-7,8,1,-3,-4,-3,10,10,3,-6],[4,9,-10,-1,-9,3,-1,3,2,7,4,4,-7,3],[-4,9,1,-6,-3,8,-5,9,9,10,-1,1,6,-9],[-8,3,1,10,1,3,-2,-7,1,4,9,-3,-10,6]]], dtype = "int8")#candidate|6956|(12, 15, 14)|const|int8
bop_6957 = relay.less(var_6955.astype('bool'), relay.reshape(const_6956.astype('bool'), relay.shape_of(var_6955))) # shape=(12, 15, 14)
func_644_call = mod.get_global_var('func_644')
func_646_call = mutated_mod.get_global_var('func_646')
const_6970 = relay.const([7.476516,-8.081640,-7.447817,5.680674,7.217011,3.082789,8.347779,-2.224871,1.722377,3.703723,-4.315825,-6.835958,-3.477300,-4.618383,-7.170753,-6.308746,-4.644167,7.501764,-9.953144,2.405374,4.585944,1.548085,9.551975,-4.480656,-5.465802,-9.494795,8.267247,2.980678,-4.889217,1.282327,2.259606,-2.529970,-4.815529,1.185508,-1.222871,8.304982,4.599592,5.564919,-3.648760,8.786957,8.923116,8.154713,9.807320,-6.623047,-3.950476,-4.772993,-1.398081,6.990897,-3.085181,8.448353,4.223824,1.660463,4.352564,-5.920653,-6.454300,-5.578254,7.898927,-4.286932,9.954246,-8.295505,7.642671,9.032068,-1.162957,-0.589084,4.397487,0.499764,-4.439922,-0.823304,5.341785,8.574137,-6.411779,7.264875,1.711700,-8.976579,2.339557,7.075339,5.241586,-0.515326,8.687235,8.199060,-6.293677,-1.604043,1.755171,-8.082502,4.756036,-2.651255,9.454984,2.051909,-9.190187,9.364904,3.537353,-3.216344,-3.867234,-8.053852,1.536880,-1.716220,-9.489167,9.837300,3.274182,6.729588,0.017460,9.224537,3.326891,-6.111139,-8.534203,2.379349,-4.333420,8.314343,-6.162103,-6.409807,2.381085,5.806163,5.989429,6.138530,-4.310858,1.434874,-7.967089,8.164312,-5.285626,0.600741,0.267460,-6.316553,-6.987607,-3.989325,2.630861,4.065923,-1.576018,-7.521883,5.117815,-4.153165,-9.806122,3.887355,-9.410629,9.367821,-4.529721,-4.415690,4.196178,4.681055,-1.885987,7.544646,8.412751,-9.325526,5.536255,5.127665,-9.966182,1.360174,-5.076856,5.161954,7.561319,6.612783,-6.092245,2.906709,-4.418111,1.418891,9.633005,-0.251762,5.993919,-7.024005,3.745805,6.293309,6.222280,9.321766,-6.503935,9.648752,4.139350,6.621626,-2.555763,1.876062,-2.837742,9.348969,6.169232,-6.188097,-5.193287,-6.010628,-6.327516,3.724900,-8.436824,5.404184,6.379703,-5.545058,9.776416,-5.653289,-2.221690,-8.424434,2.589635,-6.051158,4.257653,7.209832,8.603508,-1.329764,-1.705584,-7.211575,-6.338543,4.729278,-9.806745,-5.869580,9.647028,6.174895,-0.746425,-3.660238,5.956746,0.051669,5.713260,-4.190111,-5.249894,1.353766,-8.693824,6.602817,5.622437,-4.363467,-2.556016,-3.396729,-5.070794,3.112223,3.655000,-1.842922,5.178630,-4.184234,-1.533081,5.022771,1.141479,0.777111,-9.270797,-6.191580,5.902368,1.378367,7.807527,-7.233886,1.486267,-3.678949,4.562652,8.791084,-7.293286,-1.135583,-8.579581,0.740988,-5.931589,6.801728,0.691535,-7.318692,4.750451,-4.769069,0.011210,-1.695787,8.692337,-0.717203,7.960601,6.398420,9.818393,-6.420013,2.726485,4.724856,2.939564,9.330926,-7.443938,9.752006,0.044436,-8.138432,-4.200812,-8.028786,1.777680,4.313475,-4.933405,6.090054,-5.963977,-9.976644,8.134219,4.343848,-1.110603,-8.467410,-3.919659,-0.155698,9.060183,6.277357,3.416471,6.373188,-0.360667,0.719477,4.839302,-7.524729,7.234463,-2.978624,-9.781562,8.183739,-5.846247,4.079315,4.995488,-5.144638,-3.744131,0.291478,0.904461,-0.569926,1.134112,7.060228,-1.619363,-5.131038,-0.216881,2.494638,-5.209252,9.165842,-4.053143,3.747840,4.231186,-4.906761,1.341554,8.828224,1.757793,-8.506867,-6.249521,7.637879,5.354734,-4.301014,-5.823820,-7.223880,-2.772610,1.609163,-1.410197,-2.379032,4.724841,6.178491,-7.185186,3.872764,3.919538,-6.886529,9.107849,-4.234566,9.957466,-4.713002,-2.970468,-0.933196,7.558310,1.922094,5.479370,2.231927,6.196245,9.020795,8.927738,6.646976,2.559018,-7.167057,1.718264,4.778165,1.966768,9.565429,6.842516,-2.207727,8.420098,-5.561595,-4.215626,4.846093,4.639263,7.040067,-0.506844,2.858828,2.449677,-3.753615,-2.943874,1.153243,-5.940088,-4.268207,0.902121,-6.663846,-7.095603,7.638389,-7.823796,-5.565815,9.182179,-5.848553,-5.447198,7.730541,-8.008665,8.317250,-9.070996,-1.191963,0.021605,-8.106194,-5.464506,3.754634,6.160214,1.345279,-1.292715,4.081046,6.630017,1.298177,3.555658,1.787567,-2.710468,8.119096,-5.383428,0.786231,-4.448577,-6.459646,-4.527341,6.210223,-1.940957,2.121015,0.667817,-5.333889,1.338066,-7.739848,2.740108,-9.946978,-3.693161,-0.941518,4.028314,-5.259598,0.008930,-7.004758,5.433325,5.679645,-2.235295,-0.052137,-7.443058,3.954734,-2.509783,-0.782901,7.366156,0.972696,-6.572943,-2.239359,-2.272459,0.239258,8.787065,1.466402,-1.386479,-0.889679,-1.365511,-7.284583,-9.046149,-7.071267,6.142003,-5.474786,8.125268,0.816734,3.734838,0.580812,-9.353120,6.151557,0.742401,-3.194955,7.618075,-9.191707,1.430472,-4.833717,-4.431473,-2.944635,-9.344295,1.973315,2.528653,9.130287,-6.547661,-0.509028,-8.506057,3.479732,-4.720598,9.767225,-3.485915,0.734803,-4.007297,4.967634,-4.123070,-2.597111,-4.751818,-4.636917,-1.789271,-8.703383,1.969776,-9.176083,-8.607007,6.755928,2.666287,4.148107,-7.223359,-5.835987,-9.426203,-6.684997,9.534995,9.700001,-2.872903,0.048378,-9.061588,5.026438,-7.724287,2.154850,8.753510,-6.670678,3.120833,8.008584,-9.370721,-7.081431,2.230001,-0.183119,8.134813,1.750179,9.800189,2.084253,-2.008809,2.669774,-6.095938,-8.523167,1.175755,-2.310352,-5.726268,1.139308,7.841373,1.658822,-0.231326,-1.164100,-6.857342,2.964592,-9.470479,7.481500,1.024575,-3.336084,2.747411,-6.679114,8.868386,3.959797,-7.129779,-3.074584,-8.438896,-4.542201,0.924856,-1.638386,-9.659953,-7.620598,-7.782825,-1.789623,-7.958066,8.573577,2.465580,3.865034,8.808215,-3.022946,8.119629,4.772298,-2.453076,-8.060311,-1.837473,8.953056,-2.778959,-3.409059,8.913482,-9.498983,4.383490,5.243122,3.127746,3.577861,3.055630,-2.677884,-0.204800,-8.974655,-3.172918,7.838968,-9.938681,6.017295,-5.793732,6.348898,-6.426987,5.531585,-2.211128,-0.568341,4.715980,-1.981133,0.470204,3.669056,-9.413605,1.606946,-0.441315,-7.616033,4.682924,6.514023,0.222389,-7.034231,1.556493,2.578688,-4.515811,1.764600,7.229649,4.524391,1.372453,-1.730716,-0.596085,-1.129705,-3.979955,8.276960,-2.328524,0.502510,-0.181735,-1.248005,-4.214590,2.567714,2.697743,-9.405046,-2.473552,-8.877875,4.293247,7.157416,-5.402971,-5.941065,-8.100254,-5.411661,7.767121,-2.203214,9.888106,0.711748,-5.881514,0.894196,2.778198,-9.989881,7.692987,6.101338,-2.066880,-0.575011,-9.526288,6.760989,7.262310,-6.798899,-1.544677,-5.292456,7.693034,7.234155,-0.890639,8.063367,-2.355786,9.697634,-3.742158,-3.900854,3.354225,7.057724,-7.651095,0.632994,7.992406,-1.029108,-3.486499,9.762964,-2.233344,-1.587922,4.788252,-6.444718,1.216486,9.216647,3.253677,-5.466416,8.905398,-3.987013,5.911631,8.780759,1.810688,-2.511792,-0.062803,4.714173,-1.764632,9.989831,-6.041758,7.601089,1.552197,5.169551,0.965888,7.249042,-3.042401,-2.537020,8.036741,-0.890002,7.072298,3.341568,-0.764254,-1.579651,-4.458066,1.650567,6.297060,-9.024074,7.876925,0.496716,-4.931355,2.586178,8.931090,-5.351814,1.678002,9.703736,9.784373,-0.610457,-7.528727,-7.562117,-3.673832,4.346650,-1.768956,-7.486773,8.278319,-4.781212,9.011856,-5.553942,0.364743,2.553193,9.910228,9.657488,7.055353,3.171686,-6.730862,-2.769453,6.241502,6.367195,-0.323501,6.115372,5.843178,3.943941,-0.578520,4.833409,-5.718488,-7.851954,-7.426634,-2.348278,-7.509960,4.878742,5.354430,9.566658,7.746066,-5.279224,2.858352,2.104610,-2.050248,6.145756,0.927897,-9.046761,1.763173,4.268461,7.746312,-6.947188,1.251634,-4.219325,9.139099,3.009161,-8.672845,-6.066599,-9.684340,6.698881,-5.494305,8.848694,3.582695,8.873247,-7.686783,-9.227981,-4.866571,5.790867,-3.002548,-1.501960,-1.438793,-6.304303,-8.920491,-9.050384,2.810317,0.559097,-8.882530,4.104673,-5.193576,-2.793168,9.586010,-1.857589,0.240343,-6.627336,-0.782301,-6.403455,-7.616809,1.623501,3.857215,2.113300,7.068055,6.900192,9.155050,-5.052628,5.594997,6.868394,8.260202,9.811029,3.662125,6.474916,-7.532044,-5.953400,-1.505695,9.415035,9.378103,-6.980009,2.044500,-3.772273,-5.368874,8.999623,-6.884649,7.856302,-7.384193,-2.519936,-3.736878,0.559030,6.089166,4.863433,-6.983103,-8.695650,-3.072196,-0.323394,-4.506030,-7.032707,2.663753,-9.563542,-1.015157,-4.339213,-4.907131,7.169353,-5.564604,-3.691088,-3.856220,3.485067,-0.463799,5.874497,4.090119,4.785866,-5.219722,-9.551848,9.093927,8.991382,-9.085087,-6.596858,9.887056,0.130183,4.573928,2.172484,-6.614980,-9.790442,-8.385460,9.770045,1.712013,0.479051,-3.747654,-9.798508,0.418117,-1.719973,0.551646,-0.496982,-6.615569,-4.708128,7.392658,7.713334,-5.945015,6.041963,0.854384,-9.987549,8.419090,5.562897,-1.149989,7.667299,2.681724,9.760315,-2.759622,0.764940,-8.039654,-3.113155,-9.218029,6.554233,8.433219,5.354139,0.483629,-7.423159,-0.697382,-5.902248,3.891139,-5.360921,8.954274,8.158645,0.153513,-1.965516,-5.459871,-0.500879,6.617880,9.153288,-7.515190,2.634609,0.182857,-0.958538,3.241884,-2.922083,-3.702767,-2.484415,-4.611729,3.312878,-2.160283,6.805283,2.054080,8.283765,3.879384,6.885721,-2.321715,8.082812,-9.852274,0.921363,4.579555,-6.829044,-4.199799,3.470394,-8.220647,-8.443692,0.747490,6.395967,3.273461,7.419451,-0.247556,-3.127071,5.449726,-0.978055,1.325114,-0.338105,3.532502,-5.948943,6.272469,-9.241137,2.621849,-9.757510,1.221393,6.307804,9.235046,5.287893,2.173188,-1.499943,-3.902127,4.075928,-4.029153,-3.047386,-1.033973,2.956544,-0.746326,-7.149085,-0.629988,-7.627114,-6.691181,5.950843,-5.783643,7.895336,-3.185445,3.395975,-3.798457,7.837572,-4.220670,-8.288406,-3.738862,-7.063489,-9.171842,-2.936305,2.451192,-3.077423,-0.613193,9.980560,-7.317105,2.755766,-8.344220,2.495171,7.925587,5.187861,-1.944135,-2.842250,5.963266,-6.392031,6.209654,4.749028,4.295328,4.656970,1.825069,9.997736,3.907216,-3.936406,7.150506,5.527624,-5.236642,-6.443153,-7.234627,-0.398255,8.412152,8.572781,6.507290,5.993475,-5.555059,8.461552,-9.879214,-5.603537,0.554439,2.053938,-6.772796,1.413550,-8.016392,-7.626550,-9.420028,-1.165848,1.345867,0.716355,-8.210181,0.171368,5.759509,-7.365567,0.493129,4.906645,-0.632045,7.795148,2.098951,4.075311,-8.758238,0.296915,-7.384047,-0.801864,6.836907,9.502157,9.489408,4.360467,7.534030,-4.152157,-8.199060,3.336270,-3.235050,6.959288,0.224238,0.036553,-6.709511,-4.375372,8.762839,-9.080738,-1.111408,-0.220559,3.163911,-9.102670,-3.007308,8.456145,7.359564,5.066840,-6.797249,4.031187,7.702002,7.719566,0.691293,8.439638,9.759658,-2.559123,9.428957,0.370813,-6.318912,1.703320,-5.904695,6.333234,6.665078,6.426521,3.150793,3.366242,-8.727161,8.235459,-8.716416,-4.385614,-6.921971,-5.658835,5.523507,-9.155784,6.417435,-4.409469,3.531125,9.047126,-8.920950,-4.652674,-1.794477,2.541043,-4.312710,-0.614635,7.556481,-7.601502,5.743721,7.394723,-6.269967,-9.833554,6.316113,1.837034,-8.812285,9.404896,-0.686088,3.647172,6.114403,8.623837,9.736252,-5.047832,-1.751612,-4.316353,0.353435,-2.661081,-8.361012,-2.191751,-9.849559,-7.165584,-3.777489,6.069599,8.891753,4.459640,6.065731,-6.492808,8.452343,8.693737,-3.135293,3.924407,6.000212,3.879402,9.982418,1.332555,-4.888614,-3.787428,7.484400,3.959404,-7.464307,0.646858,7.976283,-8.398973,0.377164,-5.326026,-4.027087,9.661765,3.036279,4.258089,-4.491078,-9.854808,-5.096700,-5.724128,9.873511,-7.877786,-2.744629,6.715931,2.743678,-9.434909,-3.015007,-2.410203,0.310268,-1.694518,0.048236,8.642542,2.492303,-4.102392,-6.202852,6.767284,-1.562050,-2.025990,-7.293792,-7.668432,7.548946,-6.547370,7.877664,-3.626632,-3.049769,3.584610,-9.203267,-7.453976,7.861569,6.662572,1.178957,2.995058,-2.248231,-9.337598,9.507969,5.370068,-6.775287,-8.778172,-1.080061,-1.794254,-3.533666,-9.328898,-7.689208,-5.241758,3.022383,1.157171,-7.712835,-8.364642,-2.690024,0.455183,9.117204,7.970631,-1.525234,3.560993,-1.239863,-7.381015,-9.763331,-3.867645,2.834992,-9.030555,-5.313542,4.829543,-2.913588,-9.626547,-5.647281,-0.683324,-8.421807,9.998190,-8.618497,4.502588,-4.847947,8.636890,4.225241,6.061579,-1.583830,1.736617,-4.839158,9.332305,7.185764,7.364842,-0.036011,5.277835,0.571129,9.102361,-9.232515,6.873396,-1.205616,5.471400,-9.871572,-9.054198,-4.079437,0.078611,-5.115226,6.053647,-1.561030,-2.481631,-1.088687,7.081285,-9.586690,1.799240,-4.246422,-6.575693,7.755740,-2.309826,-4.912195,-7.330382,-1.044845,5.991852,7.596409,-8.160987,-1.993278,-0.778538,3.725346,-2.224975,-3.729857,-8.209516,-4.268757,-8.298934,-3.981796,4.117267,9.247156,1.856339,-2.181057,3.685704,4.971566,6.015856,-9.606676,-3.813826,-4.802361,7.880181,4.721728,0.820266,-0.519970,5.595863,-2.270007,-6.273446,5.625295,9.642205,-4.178769,6.178375,5.498905,7.101143,-8.679712,7.749432,3.129399,3.162363,-2.868030,-4.416166,-1.845435,5.934449,5.818910,7.184768,2.537486,-8.059209,7.041822,2.717463,-6.373688,-9.535974,-5.903764,2.884720,-8.695689,-2.156948,3.883697,-5.148760,0.219298,-3.617411,6.426033,5.945070,7.718890,-8.935976,5.741534,3.512396,9.710663,-9.956055,0.805198,2.991850,-3.989879,-6.818355,-7.115005,-1.195582,-2.775200,-0.364968,-2.513185,-1.492373,6.620993,-6.412582,-7.564093,1.972305,9.985731,9.248234,4.777429,-1.017405,0.558672,-3.098122,9.179801,2.768147,9.936970,9.920788,9.176293,6.288537,5.765177,1.590203,6.270930,2.901938,-2.065469,4.848767,5.349402,1.551467,-9.174776,-2.013773,-5.723591,6.473768,-6.220559,9.143267,-9.599261,-9.510923,-9.663181,9.255607,-3.238051,-2.231387,-9.236478,9.901434,-5.126356,-1.454795,-9.408600,-4.522297,-3.256109,-1.170162,9.201937,-0.373094,4.577761,1.528624,-2.171913,3.371946,7.474726,7.312493,-1.609500,6.022418,9.624564,0.695942,-7.204254,4.021839,-2.342259,7.793939,6.391423,9.869140,8.130352,8.968337,-6.187967,-6.080978,-0.781181,2.524092,-4.272515,3.250891,-6.956907,5.014235,4.766047,7.817209,8.137792,1.114138,-3.050870,7.848321,9.835812,2.159909,4.143664,0.739878,8.540744,-6.634579,0.956888,2.194752,9.411148,-9.797608,1.587693,-0.167856,5.520180,-2.413540,-6.346717,1.834925,-0.325199,8.632849,-0.749427,2.564192,7.859994,-4.278260,-7.846201,-0.499532,-6.635081,-4.518231,-0.879465,-9.900366,-7.095549,8.699016,-3.038494,-4.465449,4.146517,3.099816,-5.377274,3.120468,-1.529515,-6.977148,-2.660359,-9.057728,8.976279,-9.796785,7.262150,3.308440,0.599135,1.730487,1.173155,-4.447360,5.520703,8.401878,4.829747,-2.390571,-7.737701,-2.904166,1.602950,4.295554,9.520338,7.940886,7.402907,-7.318847,8.412027,-5.029154,7.825217,-2.766024,-9.654772,-0.119229,-5.314850,-3.413451,9.811237,9.792498,0.348584,1.778235,7.077482,-9.353832,-6.026821,7.654925,-7.505155,-9.580883,6.327528,-3.474673,-7.820691,5.798635,6.906277,4.229357,-6.113434,-7.284974,-8.077490,-8.206787,-6.728504,-5.521036,1.698386,-4.079110,5.951242,1.760367,6.811596,5.652115,-9.410513,8.541504,-3.230163,-0.010734,5.594932,-4.489087,-0.877912,7.984511,5.333014,7.612772,-7.094534,-2.436276,0.969968,-9.684593,-7.672137,-8.043202,-1.191779,-1.022816,7.216225,4.639725,6.707970,-3.697596,-4.256626,-8.196273,7.243926,-4.788738,-8.287477,4.516584,-0.119625,-4.981993,7.126999,5.386860,-2.739396,-7.730895,-4.328068,7.869785,-5.842145,7.620954,9.908089,-7.618278,-0.130488,-0.491869,-8.586123,-9.861144,5.200759,2.590588,5.659833,-9.556223,-2.718088,7.572328,-9.562092,6.541301,-8.944124,5.799007,-2.065535,-3.284417,-1.349347,5.778817,1.198146,9.962330,8.266572,1.521452,2.841137,-2.850829,5.158099,-7.301288,-8.470021,-6.335146,3.237109,1.024560,2.244838,-0.273825,-7.995884,-5.445603,6.375737,9.534638,-7.249454,3.995617,-3.508268,-5.499530,-5.091829,-5.564313,-2.805908,9.211928,-6.083638,0.874017,8.296115,-4.675819,-8.696475,0.927839,-3.240014,-4.211740,5.083718,7.431536,6.930527,4.148043,-9.866831,4.587446,-1.728847,-9.387372,6.425808,9.143619,8.605219,-2.080267,-4.965303,8.108768], dtype = "float64")#candidate|6970|(1584,)|const|float64
call_6969 = func_644_call(relay.reshape(const_6970.astype('float64'), [12, 12, 11]))
call_6971 = func_644_call(relay.reshape(const_6970.astype('float64'), [12, 12, 11]))
output = relay.Tuple([bop_6957,call_6969,const_6970,])
output2 = relay.Tuple([bop_6957,call_6971,const_6970,])
func_6972 = relay.Function([var_6955,], output)
mod['func_6972'] = func_6972
mod = relay.transform.InferType()(mod)
var_6973 = relay.var("var_6973", dtype = "int8", shape = (12, 15, 14))#candidate|6973|(12, 15, 14)|var|int8
output = func_6972(var_6973)
func_6974 = relay.Function([var_6973], output)
mutated_mod['func_6974'] = func_6974
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7650 = relay.var("var_7650", dtype = "int8", shape = (10, 15, 14))#candidate|7650|(10, 15, 14)|var|int8
const_7651 = relay.const([[[-8,-9,7,10,-3,5,9,6,-1,-5,-7,-5,-1,7],[9,9,4,8,7,-7,1,10,9,-5,-2,-7,9,1],[2,-4,-7,-8,1,4,-6,-10,2,8,-7,-10,-3,-7],[10,4,7,2,-1,7,-10,1,2,4,1,-3,-7,7],[-3,-4,-2,4,-8,-3,9,-2,3,-7,-3,10,5,4],[10,3,4,4,-8,5,-5,7,-2,-6,-2,-3,6,-3],[-9,-4,-6,10,-6,8,-3,2,-5,5,-7,4,4,6],[-9,8,6,6,-10,-2,1,10,4,3,10,5,-6,9],[-6,-7,-6,4,-8,-1,-5,5,-4,-9,7,-6,-7,-4],[-1,3,8,2,-7,-3,7,5,9,-5,7,1,-5,10],[-9,-6,-7,-8,1,8,-8,-4,7,6,-1,2,6,-1],[10,4,-6,-2,9,8,3,7,9,8,-3,3,-5,2],[-8,-4,-4,2,9,3,-7,8,-6,-3,8,-10,-6,-5],[-10,6,-9,8,1,5,5,9,-8,-2,-2,9,8,1],[4,9,-2,-6,5,8,6,-7,-9,3,-3,-2,-1,7]],[[2,-5,3,-4,9,9,4,2,-9,10,-5,-7,-9,-5],[2,2,-1,2,-1,10,4,3,-7,9,2,-7,-4,5],[-7,-4,4,5,-2,-9,3,10,1,9,-8,7,8,9],[10,5,-6,-8,-6,-4,-2,-3,4,-6,9,-2,-2,9],[5,-3,-3,4,-1,10,7,-8,-8,-6,4,-5,5,-10],[-10,-10,6,-2,2,-8,10,10,1,8,9,-10,-6,-6],[6,-10,4,9,-1,-10,-7,-8,6,6,-8,-9,-8,1],[-7,5,-4,8,-4,1,10,-10,10,5,8,5,6,4],[-2,6,-4,3,-5,-10,-9,-6,-10,5,-6,6,-2,9],[-3,-9,-6,6,-5,9,-9,-1,-8,7,-3,8,3,-1],[-2,-2,-1,-2,6,-10,7,3,8,4,10,6,4,-1],[7,-1,-2,6,3,-4,-7,2,-4,2,10,8,9,-3],[7,9,8,2,4,7,7,-6,6,10,6,9,-10,-8],[-10,-10,-7,-2,-1,-8,2,2,-9,-4,10,-2,-6,2],[10,4,1,9,-5,4,5,2,-9,9,-5,-10,6,1]],[[5,-9,3,8,-7,1,-10,-9,9,4,-6,-6,5,5],[-10,-5,-10,-3,-10,-5,8,1,3,2,-1,-9,-7,-9],[-3,-6,-3,-9,7,-3,10,6,-6,-5,6,2,-2,-8],[8,-3,-4,-3,10,-7,3,-6,10,3,8,8,3,-5],[2,6,-1,-2,-6,9,8,-4,7,-6,-1,-4,4,5],[3,4,1,9,7,-6,-8,-10,2,9,-6,-8,-3,6],[-6,7,-10,5,1,3,5,2,4,-2,-7,-6,6,-10],[8,-8,-8,2,-6,-1,-2,6,6,3,-1,8,7,-3],[-10,4,2,10,7,-9,-10,-1,-7,-2,-6,-2,-1,6],[-4,1,-3,-10,6,-4,2,5,6,-8,2,3,-6,-4],[-5,5,1,-1,-10,9,3,-9,7,-10,-8,5,6,-8],[2,9,6,7,1,-10,-3,9,2,-10,1,-3,6,-1],[-5,7,4,-7,2,-6,3,4,-4,-1,-8,-7,-1,-8],[-8,3,9,-5,8,1,-5,10,4,-6,-6,7,10,-5],[-6,-9,-3,2,-4,4,6,-1,4,-2,7,7,7,-9]],[[9,9,8,-4,2,-2,-10,8,4,10,1,4,-2,-3],[-6,7,8,-3,-5,7,10,6,6,9,-3,7,10,4],[-4,-2,-1,6,-6,4,-3,-3,-10,6,-4,5,-3,-3],[-6,5,-6,-8,8,4,2,-7,1,-1,-8,-7,9,10],[-6,5,10,2,8,2,-6,10,-6,-5,5,-8,-3,5],[-8,-6,-6,8,2,3,-10,6,3,5,2,-8,6,-2],[-2,-2,2,7,-8,5,3,-10,4,10,-5,-9,-5,-6],[7,-1,-6,9,9,-5,9,9,-9,8,6,-3,2,-7],[-10,-9,2,-6,-3,6,1,10,-3,-3,-9,-6,-8,5],[-10,9,9,9,-10,-2,9,6,9,-1,5,5,-6,9],[7,-6,-10,8,-4,3,-3,-6,2,2,8,-4,-9,8],[-7,1,-3,-4,1,4,-1,9,1,6,-5,-5,-4,-7],[7,2,4,-9,-10,2,6,-9,3,3,-3,-7,7,-3],[-10,-8,8,10,-1,9,-3,5,8,-10,-1,-7,2,-7],[6,2,2,3,-9,-2,-4,-4,-1,-8,-2,-10,-1,-1]],[[10,2,8,2,-5,10,9,-4,2,-10,8,9,-8,7],[3,2,4,9,-7,3,-7,-6,4,7,-10,8,7,-8],[-6,4,-2,5,10,9,-7,1,-5,10,7,-5,6,-4],[1,-10,6,-8,-2,-4,7,2,-6,-7,10,-10,5,-1],[-1,6,7,-8,-9,3,9,6,3,-1,-10,7,6,-6],[-3,3,-2,-5,-4,3,-1,-9,-6,-8,2,5,10,4],[7,8,-7,-3,2,9,3,1,8,6,-4,2,-6,2],[9,1,-5,8,-1,-2,-1,1,3,-9,4,7,-2,6],[6,-3,3,10,6,-2,1,2,-3,7,6,8,-1,-8],[4,10,-3,2,10,5,-2,-5,-1,4,-9,-1,-6,5],[-4,2,-10,-5,-9,10,-2,5,4,-6,6,-10,-2,-2],[-9,-10,1,-10,-6,3,-5,5,9,-1,2,1,-9,5],[-3,-4,3,7,5,4,-2,7,3,5,1,-7,5,-1],[1,10,2,-10,7,10,5,-7,4,-6,-5,-8,-9,1],[5,2,9,-1,5,9,-9,8,-4,10,-9,4,-9,2]],[[9,4,7,-1,-8,-1,-6,-7,-9,8,9,5,6,2],[4,-5,-1,-7,5,-7,2,5,8,4,6,5,2,3],[-9,-5,-3,6,-9,2,-2,-6,9,-2,-3,8,-8,7],[3,10,-9,7,-3,-5,7,-6,-8,-3,4,-6,4,8],[-9,2,9,7,6,9,8,-10,3,4,-8,10,2,9],[-2,-10,6,-4,-3,-10,-5,-8,4,8,6,9,-6,-6],[-5,-8,3,-7,-9,3,-1,3,-3,1,-1,-5,8,10],[10,-6,-2,3,10,6,2,3,4,1,7,5,10,6],[3,-4,2,2,-4,-1,7,-6,-9,-2,7,10,-7,3],[-8,-5,-4,6,9,-2,-4,-9,-2,-8,8,-4,7,-10],[-3,-2,-3,-2,6,-5,-7,-7,-1,10,5,-6,1,-5],[-6,-3,-9,9,-1,-9,10,-1,-4,-10,7,10,-9,3],[8,10,-7,2,7,-8,-4,-5,-2,3,-7,2,-4,-7],[9,-5,-2,-1,-8,-2,6,-3,-8,7,7,7,5,-1],[2,-4,-8,9,3,-8,5,-4,-10,3,9,10,-4,-1]],[[6,7,-10,8,9,-7,-7,1,-4,5,6,-4,2,1],[10,-4,-4,4,-4,-1,10,-5,-2,1,5,-4,5,-4],[-1,-2,6,9,7,-3,4,3,-1,-4,-7,1,-2,1],[-4,-6,-9,-7,-4,-7,8,1,-2,-7,-3,8,-6,1],[5,-7,6,-3,2,2,-6,7,8,7,2,-5,-5,-4],[3,10,7,8,-3,-10,2,-2,-2,-2,7,-10,-3,6],[9,2,-5,-3,-2,-6,3,9,-10,4,10,-2,-7,-7],[-1,-2,-3,2,7,-2,6,1,6,5,-2,9,6,8],[8,-6,10,-7,10,-3,-7,-5,3,-2,-7,6,-3,1],[6,3,-9,-3,4,-2,-9,3,-9,9,-6,10,6,-5],[1,-10,-7,3,1,5,-5,-4,-3,2,-7,6,2,9],[2,-10,-1,-1,3,-6,-1,-4,9,1,-4,4,4,7],[5,-7,-1,3,-5,-2,-10,5,-9,-6,-6,10,1,-3],[3,-2,-7,9,-4,-10,7,-9,8,8,2,6,2,10],[-10,-8,-3,3,-9,-8,3,4,-9,6,-9,-5,-8,-1]],[[-6,4,3,1,2,8,6,-6,5,10,-3,1,1,-2],[-6,-9,-5,-10,-5,-6,5,-10,-3,4,6,-10,-10,-10],[-7,-2,-7,-7,4,-1,-6,-7,5,4,4,4,1,9],[-6,-6,1,-10,-9,-1,2,-3,8,-3,-9,-9,-6,5],[10,3,-4,3,-5,6,-7,8,-8,2,-2,9,4,8],[-2,9,8,-1,1,10,6,1,-4,7,-1,-5,3,-6],[-1,-9,7,8,2,-8,3,2,-5,-3,3,10,-8,-6],[-9,2,-5,7,-10,7,-4,6,6,-7,10,-1,-1,-6],[-6,-3,-5,8,-5,3,-10,9,7,3,3,4,1,8],[-6,2,9,8,-10,3,1,-1,6,9,5,-7,-2,-4],[8,-9,-8,-6,-6,-10,-3,2,-9,-9,2,10,-7,-6],[10,6,-5,2,-5,10,-7,10,5,3,4,1,-9,-1],[-10,7,-8,7,7,-7,-10,-6,9,-6,-7,-10,-3,4],[4,8,4,-5,10,4,-3,-2,9,-1,-3,5,-8,-10],[8,10,-9,7,6,4,5,-3,-2,-3,-4,-1,1,-6]],[[1,-9,8,-10,-8,10,8,-1,-5,-1,-1,10,-9,2],[-7,9,2,6,7,-1,-2,2,9,4,8,-3,-2,-4],[-3,10,-5,-7,-9,9,8,5,-2,-1,8,5,1,-5],[-10,-3,-5,3,6,-7,1,-2,-5,-9,2,8,-5,6],[-2,10,-9,-4,-8,2,-5,10,4,-4,-9,-8,3,2],[10,4,8,3,-9,-2,4,-10,5,-4,1,10,3,2],[-5,-5,-4,-6,-5,2,5,-8,9,7,-9,3,-1,4],[10,-1,2,-9,-5,9,-3,1,-4,-7,8,-9,5,10],[4,1,10,10,-7,6,-5,1,3,-7,2,2,-8,-10],[-4,10,-2,3,-4,-2,3,7,3,5,2,5,-6,6],[1,-8,6,-2,-10,10,9,6,-10,-9,3,-10,-5,-10],[5,4,4,10,9,-6,-8,-2,-8,10,-3,2,-2,10],[-1,-8,-8,2,-4,10,6,-2,-4,-1,7,2,-10,-8],[1,10,10,-10,-10,-10,7,-8,10,7,-4,-6,-2,1],[-7,4,8,-1,2,7,-6,-6,9,-7,-4,10,-5,-9]],[[9,8,-10,7,6,8,-9,-10,2,-9,-8,9,-1,9],[9,2,9,-5,4,-1,-10,-8,4,6,-2,8,-1,1],[5,-7,-10,-4,1,-10,-1,-5,7,-2,9,-6,2,10],[-10,5,-3,-2,1,1,-3,-7,1,-7,-5,-1,6,-7],[3,2,-10,-9,-7,-5,-4,2,-9,-4,-3,1,10,4],[1,-4,1,-6,-1,6,-5,-8,-9,-8,3,9,5,-6],[3,-2,-3,7,-2,-5,-9,5,-3,-4,-5,-1,6,-4],[9,9,2,-4,-10,9,7,9,6,-1,6,9,10,2],[9,9,8,10,9,-2,-7,3,4,2,-5,-9,10,2],[10,-8,-10,7,-2,7,-10,-10,-10,3,-6,-6,-9,10],[4,1,-6,3,5,5,4,9,-10,3,6,6,10,-1],[-8,10,4,4,-10,7,6,3,3,5,4,3,-1,-10],[-2,10,3,-10,1,7,10,7,8,-5,3,-2,8,-7],[-6,-10,7,6,7,-6,-1,-10,-7,-8,-8,-5,5,-7],[7,-9,-10,-9,8,6,-1,-6,5,3,4,8,4,-2]]], dtype = "int8")#candidate|7651|(10, 15, 14)|const|int8
bop_7652 = relay.not_equal(var_7650.astype('bool'), relay.reshape(const_7651.astype('bool'), relay.shape_of(var_7650))) # shape=(10, 15, 14)
func_4654_call = mod.get_global_var('func_4654')
func_4657_call = mutated_mod.get_global_var('func_4657')
const_7656 = relay.const([-2,9,10,7,5,-8,8,6,5,3,-1,-9,8,-3,5,-7,-9,-8,-6,-6,-3,-1,-8,-4,-6,-8,-8,1,2,-2,10,-4,8,9,-7,4,-1,-2,-3,-4,7,-7,1,-8,-3,-10,4,3,7,7,-9,3,7,9,-4,-8,-6,-4,2,-10,6,10,-5,1,7,6,-8,-5,6,2,6,-1,-4,9,-8,-3,-2,-4,5,9,-3,7,-3,6,-6,-9,10,-5,6,-2,-7,-1,-7,-6,-2,4,7,7,-4,1,-1,2,-2,-6,5,3,5,8,10,-6,-8,-8,-4,7,7,-9,8,-2,10,-9,7,6,-7,-6,10,-1,-4,5,5,-7,-8,5,-8,8,-6,-5,-8,-7,-9,6,-4,-10,-10,-8,5,-1,2,2,-4,1,7,5,9,2,4,9,-7,-8,-4,-3,-2,3,-8,-5,5,-2,-2,-8,8,10,10,-2,8,5,6,10,-2,-3,10,-5,-4,7,-4,10,7,-8,9,7,9,9,9,3,-4,2,-4,9,3,-7,-1,3,-7,6,-10,-3,-4,-2,4,4,2,4,-4,6,-6,-6,-10,-6,1,-2,4,8,2,1,-9,-5,-3,-9,-9,6,-9,-6,-3,-5,4,-3,-5,-4,-5,2,-2,-5,6,-1,8,-4,-10,-6,-3,-7,-10,-5,5,1,-6,4,-2,2,10,4,-1,-6,1,5,-7,-10,7,10,-7,-2,6,3,-4,5,-8,-5,-1,3,-5,5,3,8,1,3,-1,-2,-2,4,-2,9,1,-1,7,2,2,-5,-3,6,1,3,-4,-8,4,2,2,-3,7,5,8,5,5,7,-3,3], dtype = "int64")#candidate|7656|(312,)|const|int64
var_7657 = relay.var("var_7657", dtype = "float64", shape = (78,))#candidate|7657|(78,)|var|float64
call_7655 = relay.TupleGetItem(func_4654_call(relay.reshape(const_7656.astype('int64'), [3, 13, 8]), relay.reshape(var_7657.astype('float64'), [78,]), ), 0)
call_7658 = relay.TupleGetItem(func_4657_call(relay.reshape(const_7656.astype('int64'), [3, 13, 8]), relay.reshape(var_7657.astype('float64'), [78,]), ), 0)
output = relay.Tuple([bop_7652,call_7655,const_7656,var_7657,])
output2 = relay.Tuple([bop_7652,call_7658,const_7656,var_7657,])
func_7665 = relay.Function([var_7650,var_7657,], output)
mod['func_7665'] = func_7665
mod = relay.transform.InferType()(mod)
var_7666 = relay.var("var_7666", dtype = "int8", shape = (10, 15, 14))#candidate|7666|(10, 15, 14)|var|int8
var_7667 = relay.var("var_7667", dtype = "float64", shape = (78,))#candidate|7667|(78,)|var|float64
output = func_7665(var_7666,var_7667,)
func_7668 = relay.Function([var_7666,var_7667,], output)
mutated_mod['func_7668'] = func_7668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7673 = relay.var("var_7673", dtype = "float32", shape = (11, 8, 1))#candidate|7673|(11, 8, 1)|var|float32
uop_7674 = relay.sin(var_7673.astype('float32')) # shape=(11, 8, 1)
output = relay.Tuple([uop_7674,])
output2 = relay.Tuple([uop_7674,])
func_7684 = relay.Function([var_7673,], output)
mod['func_7684'] = func_7684
mod = relay.transform.InferType()(mod)
mutated_mod['func_7684'] = func_7684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7685 = relay.var("var_7685", dtype = "float32", shape = (11, 8, 1))#candidate|7685|(11, 8, 1)|var|float32
func_7684_call = mutated_mod.get_global_var('func_7684')
call_7686 = func_7684_call(var_7685)
output = call_7686
func_7687 = relay.Function([var_7685], output)
mutated_mod['func_7687'] = func_7687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7689 = relay.var("var_7689", dtype = "int8", shape = (14, 6, 8))#candidate|7689|(14, 6, 8)|var|int8
const_7690 = relay.const([[[-6,-2,9,-8,-9,-1,7,6],[-2,3,-9,3,2,2,-8,8],[3,4,5,10,-8,-1,-10,4],[7,9,-8,3,-10,6,1,3],[5,-5,-9,6,-5,4,-8,-5],[-6,1,9,-5,-1,6,-4,4]],[[-6,10,4,-3,-3,-2,5,-5],[4,-6,10,-3,-2,-2,9,4],[5,-9,9,7,10,4,1,-8],[-5,-9,8,5,2,-6,3,4],[-5,-8,8,-8,-9,4,2,-4],[-8,2,-6,8,4,10,-6,-5]],[[9,7,3,6,10,1,-5,6],[9,-1,-5,-4,5,-4,8,3],[-7,7,-6,1,4,-7,-8,-2],[3,3,-4,-4,-2,-9,-2,-10],[-1,-8,-9,-4,-4,9,5,10],[-7,-5,1,-8,-2,3,-7,2]],[[9,8,2,10,4,7,-3,7],[-9,10,4,2,5,9,-2,2],[2,1,2,9,3,7,-2,-7],[-9,-10,5,8,-1,1,-9,-5],[3,-4,-7,4,10,9,8,-2],[3,9,-7,-9,5,2,-3,4]],[[4,2,4,3,-7,-3,-8,-1],[8,-2,-8,-1,-1,8,1,1],[-3,-9,10,8,-6,-2,7,-7],[3,8,-10,-8,-4,-4,-10,2],[-7,8,-3,-5,-9,-1,-10,1],[-10,9,-8,1,-3,8,-8,-7]],[[-9,2,-3,-9,4,1,2,9],[9,-2,-3,10,7,-1,8,2],[5,9,3,-2,-10,2,5,4],[9,2,8,-10,-1,10,9,9],[9,1,6,10,-8,-7,-6,-8],[6,9,-5,-9,-9,8,-2,-1]],[[-4,5,-10,5,-7,-3,-3,8],[-3,3,5,6,2,4,-10,-7],[1,-2,6,9,10,-6,2,-4],[2,-5,-9,5,-3,-9,5,-5],[7,5,7,-7,-5,1,1,-2],[-3,2,-8,-5,-7,3,-10,8]],[[10,-1,9,-5,4,-2,1,10],[1,-10,-10,-9,9,6,-2,9],[10,-8,-1,-1,-9,10,9,8],[1,-8,-2,5,-10,-5,7,-6],[-5,6,-7,10,10,-10,7,8],[5,-8,-6,10,-8,-10,-8,-4]],[[1,10,-6,8,10,6,7,7],[3,-10,-10,5,-7,3,-1,10],[-6,2,3,-10,9,2,10,-7],[-7,-10,-9,-5,9,-4,4,2],[6,-1,-3,4,7,-7,7,9],[-3,1,5,-10,3,-7,-8,8]],[[-3,5,-2,-10,-4,5,3,3],[7,1,7,10,-5,-8,6,-9],[7,-6,2,7,5,7,-9,5],[4,10,9,-3,7,-9,9,3],[-3,-4,-7,1,2,1,8,-7],[-3,-8,-9,7,4,10,-4,-9]],[[1,2,-2,-9,2,-8,-5,-5],[-4,-1,3,10,3,-1,2,-4],[1,1,10,10,10,-4,-2,5],[1,-10,3,-4,-9,-3,-4,4],[-4,3,-6,8,10,3,1,2],[6,-8,4,-5,-6,-6,7,8]],[[-6,7,-3,-10,-9,8,2,1],[4,7,9,2,10,8,9,-1],[8,-9,-7,5,-3,-3,5,-3],[3,-6,1,10,6,-1,5,-2],[-1,3,9,1,2,-6,-10,-5],[-8,7,-1,-3,4,-3,-5,1]],[[5,4,-3,5,1,-2,10,-3],[-10,-10,-7,9,-8,-2,9,-10],[7,-10,1,4,7,-10,-5,9],[-3,-8,3,-2,2,-3,5,-5],[7,3,-3,9,-6,8,4,-9],[-6,7,-6,10,1,9,9,10]],[[-1,6,-3,3,6,1,1,-6],[8,-8,-2,-2,-4,-3,-7,10],[8,-2,-1,-10,-8,-8,10,-10],[9,3,-8,6,-6,-6,-2,10],[2,-10,-7,-1,-1,8,3,10],[-5,5,9,-5,8,9,10,9]]], dtype = "int8")#candidate|7690|(14, 6, 8)|const|int8
bop_7691 = relay.less_equal(var_7689.astype('bool'), relay.reshape(const_7690.astype('bool'), relay.shape_of(var_7689))) # shape=(14, 6, 8)
bop_7700 = relay.subtract(bop_7691.astype('uint16'), relay.reshape(const_7690.astype('uint16'), relay.shape_of(bop_7691))) # shape=(14, 6, 8)
output = bop_7700
output2 = bop_7700
func_7705 = relay.Function([var_7689,], output)
mod['func_7705'] = func_7705
mod = relay.transform.InferType()(mod)
mutated_mod['func_7705'] = func_7705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7706 = relay.var("var_7706", dtype = "int8", shape = (14, 6, 8))#candidate|7706|(14, 6, 8)|var|int8
func_7705_call = mutated_mod.get_global_var('func_7705')
call_7707 = func_7705_call(var_7706)
output = call_7707
func_7708 = relay.Function([var_7706], output)
mutated_mod['func_7708'] = func_7708
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7721 = relay.const([[[-3.027921,3.043052,1.234077,-5.737300,-8.993018,-2.866842,-3.886298,1.119616,-6.654112,8.097315,-5.701948,-0.753311,8.364624],[9.847651,5.126439,6.039183,-6.469537,-0.359575,5.224095,5.200622,-3.922971,1.205537,0.575052,5.105950,4.208588,6.396098],[-5.152760,-2.578189,-7.586102,-1.483741,-4.278235,5.354211,-0.526620,-1.992388,-1.010568,0.709421,-5.859076,4.400881,3.271880],[0.193059,9.795483,-1.351782,-9.432040,-7.963117,7.757662,-8.736352,-1.652312,-4.306062,-4.515561,9.841895,-5.110865,8.436769],[5.744677,-2.341816,7.507278,-2.134410,4.706690,-4.290084,2.516733,-7.371810,7.170982,-6.145418,1.790393,8.765378,3.885907],[-3.131984,8.720240,-8.840670,3.606979,-6.189823,3.339131,9.280736,3.458573,-0.253376,-4.939901,9.345317,-8.843585,-5.488071]],[[-7.648812,7.385978,-1.928088,-6.927505,4.250018,-6.175141,7.155155,5.300590,0.533393,3.501033,-0.190204,2.009629,8.019863],[-6.745985,-3.957095,8.288750,-7.243174,3.554929,-9.841685,8.010474,-5.887088,-9.858616,-1.122466,-1.653837,8.787918,-2.326281],[-2.707566,-0.348394,1.599276,9.248599,3.611157,-6.386931,3.135566,-9.883007,6.990063,7.660625,-1.686382,-1.732856,3.757479],[-9.653732,-9.811863,-5.916708,5.356334,-9.657116,3.220171,-1.292078,-2.043674,9.334668,-4.230091,-4.506644,2.116248,-8.605410],[0.685472,-5.004974,3.729340,0.533304,5.532929,-8.254375,6.642719,9.184244,-5.715196,0.281687,0.387900,-6.966904,3.226253],[7.741200,-1.466111,-1.854430,-1.758182,-8.372570,0.990957,-1.618039,8.762234,8.915878,8.251298,-7.699157,4.564408,5.330980]],[[-2.463810,-6.150539,-8.935793,-4.570185,4.214618,-6.343556,5.855588,-3.872616,6.328097,4.750370,0.770711,2.177615,-4.600428],[0.960603,6.403577,-2.279468,-4.112424,1.100872,-8.657090,-2.073393,-8.050394,-8.771694,3.525125,6.242366,0.058765,-7.528971],[5.536152,0.067585,7.709009,3.842192,4.468765,-5.665723,1.760601,-9.652069,0.099776,7.973851,-6.844459,2.206566,-8.793194],[-4.425782,4.288634,4.220862,-9.153564,-4.661160,2.420928,-0.906770,9.308449,-2.520937,6.907879,5.809464,6.056790,-7.371571],[-1.630222,-8.039259,-2.188021,-2.661807,2.861452,3.864548,-0.705211,9.987529,4.235365,6.218634,-0.791042,6.107328,-1.170933],[-8.265377,-7.169666,0.761198,-9.286558,5.936444,-3.839030,-7.101353,9.655560,1.213825,-8.650310,0.051508,0.201391,-9.293616]],[[3.787319,0.543824,-9.818395,2.659633,-7.656757,5.860186,-2.479317,-7.842548,-1.742856,-5.679437,-5.699951,-2.938319,-1.821060],[-2.819646,-3.256417,7.066368,4.013084,7.395406,-7.772955,-5.075617,-1.469991,0.115523,-8.479472,3.906870,2.215115,7.461596],[-9.716749,-2.268760,7.098712,-5.606698,3.284464,9.682238,-6.618877,5.825774,-1.557213,0.677435,9.988282,2.847828,-9.580905],[7.163518,0.337004,2.403467,-9.916767,-9.705579,8.126073,2.117015,8.505217,2.301603,0.781699,-8.185758,-2.573875,-6.609670],[6.092920,5.005260,8.555812,3.685130,0.093112,-7.182136,-0.797170,-7.084978,9.109077,-9.162222,-1.656940,-2.537152,-0.905143],[9.562104,-8.193720,4.023094,-8.299536,-0.661504,9.249448,-8.195927,-0.503205,-4.459469,5.920274,-5.984361,-1.027930,3.543787]],[[-0.633175,-4.074392,8.351364,0.187852,-0.237593,5.614846,-0.740370,-0.255188,7.729039,-1.637362,1.818739,-7.546473,0.787012],[8.093159,1.603399,7.659949,-5.968232,7.885222,8.070859,1.828897,7.242350,-1.832588,-2.391646,5.612560,3.211314,-5.851782],[-1.444263,-5.359621,9.278201,1.032712,-6.008574,6.241385,-1.421790,-9.988729,7.898997,3.310272,-0.637150,-0.661791,-1.286011],[-5.952144,-9.190318,-7.387248,1.910402,-6.267644,-3.323905,-0.584525,-7.067741,5.908825,-5.845113,2.668488,-7.289734,-2.985329],[-8.962562,5.821700,-7.105636,9.529810,-7.159033,5.405326,-2.355861,6.807128,9.061816,5.165777,3.855078,-2.694686,7.507579],[7.343577,5.335763,-9.760106,0.708283,-8.491756,-8.440441,-4.484294,-1.503745,-6.100111,4.876353,3.325595,5.211856,1.058200]],[[-8.470018,-3.943571,2.299931,3.398811,6.048863,-4.040492,7.734890,-5.438983,-6.379713,6.439093,-0.124726,5.313405,5.823323],[-0.225504,-6.253606,2.413030,-5.994363,-2.377928,4.994543,-7.507396,5.459697,2.210099,1.761908,-5.008604,-3.058930,-3.655533],[-5.150601,6.019577,8.463241,-8.267880,9.510334,-0.332809,-0.879672,9.855915,-5.062247,-1.950156,-0.167956,-2.723677,-7.844838],[-1.000751,-9.506082,3.954461,-7.555701,-2.738110,6.397583,1.524845,-7.839279,-4.179736,-0.190376,8.263595,5.051138,9.865949],[8.581081,2.597427,-4.031939,3.192006,9.866676,1.216175,9.615938,2.312297,3.011370,8.723425,-0.133021,-8.048407,0.869723],[1.850162,8.397783,-4.794548,-2.578513,-7.286158,2.528057,-8.918247,7.433448,7.426593,6.522505,7.923176,1.541356,5.208986]],[[-2.850772,7.381657,0.350555,-1.532289,3.496235,3.912648,-3.423223,-9.201099,9.853956,-9.944061,3.269485,3.205665,-2.677582],[9.658639,0.245820,4.119248,-0.162389,0.633060,9.728556,-6.569843,9.546206,6.367233,-6.828580,3.164094,-9.868764,-6.945123],[8.783876,-4.710572,-0.655624,-4.870694,-7.946428,4.956011,-8.103773,-1.264072,-1.679712,-0.757738,5.581202,4.812011,1.306167],[5.640273,7.198211,5.383351,-7.684547,-7.447475,9.588819,-6.682701,8.858726,-3.840022,4.666294,8.802209,-8.815173,1.684758],[9.252971,4.164031,8.207623,-9.894348,-3.513191,-5.371458,-9.471317,6.793433,0.008658,9.789484,5.470583,-7.484544,0.499514],[-7.762512,8.406557,2.746521,-1.802705,6.258241,9.754676,-0.771977,-7.646215,-6.183399,-5.548353,-1.122314,-2.307394,-7.659277]],[[-8.123880,-6.029391,-2.128078,4.671066,-4.891323,8.445169,8.714846,-0.444066,-4.670749,-1.838006,9.565155,0.756740,-7.122292],[8.380705,-2.540386,-5.305466,-8.075468,-3.851770,6.595904,-5.861338,-7.170671,-6.421009,9.918088,-7.156522,-4.893765,-0.623235],[-6.360327,7.739009,9.691965,9.908014,-4.906117,-6.455339,-7.502238,0.139397,-1.719902,6.681525,2.139472,-6.485116,-4.437653],[0.002403,1.315580,0.469729,1.362393,-4.409765,9.716656,-1.000997,8.841885,6.742469,2.454093,1.932157,-8.299080,-0.128027],[2.725221,-6.827628,-7.230436,-6.565462,8.737380,1.339194,-9.817113,-3.555995,4.676157,4.333752,4.110900,-6.752665,2.584026],[9.951247,-7.367386,-8.837299,-5.504922,1.724294,-4.268374,8.364912,4.219878,-3.936139,-0.824946,-6.850734,-5.189186,4.772857]],[[-4.744285,-5.431818,2.073865,0.326318,-0.880591,7.410987,2.864626,4.441575,-6.782365,7.551048,3.476053,3.363017,-0.623598],[5.459325,3.259095,8.285935,-4.532625,-7.905953,8.281829,8.707622,9.017878,-6.307291,9.758509,-7.013516,-3.644496,-1.841515],[3.513429,-7.184700,8.288492,-7.945310,-8.614691,-1.817525,-2.421378,-4.864108,-0.267296,6.322258,1.393174,-0.357960,5.364019],[-1.863930,5.433685,6.258137,3.355119,-9.625381,5.951878,3.736053,-9.055154,-2.790282,-1.303277,-2.293858,-8.213430,-6.982282],[-9.487204,-2.244348,8.640250,0.756920,3.067487,-2.046233,-0.496334,9.269060,0.868283,5.682718,-4.934498,-5.591144,1.410086],[-4.539070,-0.220333,8.448837,1.548764,-8.456729,-3.405815,8.254223,-3.823772,-8.728801,8.728323,-1.779241,5.795313,-3.174901]]], dtype = "float64")#candidate|7721|(9, 6, 13)|const|float64
uop_7722 = relay.sin(const_7721.astype('float64')) # shape=(9, 6, 13)
func_5730_call = mod.get_global_var('func_5730')
func_5732_call = mutated_mod.get_global_var('func_5732')
var_7739 = relay.var("var_7739", dtype = "float64", shape = (968,))#candidate|7739|(968,)|var|float64
call_7738 = func_5730_call(relay.reshape(var_7739.astype('float64'), [8, 11, 11]))
call_7740 = func_5730_call(relay.reshape(var_7739.astype('float64'), [8, 11, 11]))
func_3994_call = mod.get_global_var('func_3994')
func_3997_call = mutated_mod.get_global_var('func_3997')
const_7746 = relay.const([[5.572781,2.923867,6.214560,-3.082371,2.073594,-3.165783,2.727406,7.603479,-5.637235,-2.789564,9.645863,9.993599,3.230801,-5.808674,-4.658836,-4.931970,-5.457951,7.055876,-8.222371,3.082595,5.992374,-5.801179,4.919401,-5.150625,6.182897,1.006810,2.632210,-3.238118,-6.220149,-9.835291]], dtype = "float32")#candidate|7746|(1, 30)|const|float32
call_7745 = relay.TupleGetItem(func_3994_call(relay.reshape(const_7746.astype('float32'), [1, 10, 3])), 0)
call_7747 = relay.TupleGetItem(func_3997_call(relay.reshape(const_7746.astype('float32'), [1, 10, 3])), 0)
func_297_call = mod.get_global_var('func_297')
func_300_call = mutated_mod.get_global_var('func_300')
var_7751 = relay.var("var_7751", dtype = "int16", shape = (108,))#candidate|7751|(108,)|var|int16
call_7750 = relay.TupleGetItem(func_297_call(relay.reshape(var_7751.astype('int16'), [6, 6, 3]), relay.reshape(var_7751.astype('int16'), [6, 6, 3]), ), 0)
call_7752 = relay.TupleGetItem(func_300_call(relay.reshape(var_7751.astype('int16'), [6, 6, 3]), relay.reshape(var_7751.astype('int16'), [6, 6, 3]), ), 0)
output = relay.Tuple([uop_7722,call_7738,var_7739,call_7745,const_7746,call_7750,var_7751,])
output2 = relay.Tuple([uop_7722,call_7740,var_7739,call_7747,const_7746,call_7752,var_7751,])
func_7763 = relay.Function([var_7739,var_7751,], output)
mod['func_7763'] = func_7763
mod = relay.transform.InferType()(mod)
mutated_mod['func_7763'] = func_7763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7763_call = mutated_mod.get_global_var('func_7763')
var_7765 = relay.var("var_7765", dtype = "float64", shape = (968,))#candidate|7765|(968,)|var|float64
var_7766 = relay.var("var_7766", dtype = "int16", shape = (108,))#candidate|7766|(108,)|var|int16
call_7764 = func_7763_call(var_7765,var_7766,)
output = call_7764
func_7767 = relay.Function([var_7765,var_7766,], output)
mutated_mod['func_7767'] = func_7767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7828 = relay.var("var_7828", dtype = "float64", shape = (16, 15, 4))#candidate|7828|(16, 15, 4)|var|float64
uop_7829 = relay.log2(var_7828.astype('float64')) # shape=(16, 15, 4)
bop_7834 = relay.greater_equal(var_7828.astype('bool'), relay.reshape(uop_7829.astype('bool'), relay.shape_of(var_7828))) # shape=(16, 15, 4)
func_4134_call = mod.get_global_var('func_4134')
func_4137_call = mutated_mod.get_global_var('func_4137')
const_7838 = relay.const([-9.330549,9.300183,1.784315,3.782740,-0.373021,0.974730,5.869816,-2.478651], dtype = "float64")#candidate|7838|(8,)|const|float64
var_7839 = relay.var("var_7839", dtype = "float64", shape = (78,))#candidate|7839|(78,)|var|float64
call_7837 = relay.TupleGetItem(func_4134_call(relay.reshape(const_7838.astype('float64'), [1, 8, 1]), relay.reshape(var_7839.astype('float64'), [78,]), ), 1)
call_7840 = relay.TupleGetItem(func_4137_call(relay.reshape(const_7838.astype('float64'), [1, 8, 1]), relay.reshape(var_7839.astype('float64'), [78,]), ), 1)
bop_7851 = relay.left_shift(uop_7829.astype('uint8'), relay.reshape(var_7828.astype('uint8'), relay.shape_of(uop_7829))) # shape=(16, 15, 4)
output = relay.Tuple([bop_7834,call_7837,const_7838,var_7839,bop_7851,])
output2 = relay.Tuple([bop_7834,call_7840,const_7838,var_7839,bop_7851,])
func_7855 = relay.Function([var_7828,var_7839,], output)
mod['func_7855'] = func_7855
mod = relay.transform.InferType()(mod)
mutated_mod['func_7855'] = func_7855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7855_call = mutated_mod.get_global_var('func_7855')
var_7857 = relay.var("var_7857", dtype = "float64", shape = (16, 15, 4))#candidate|7857|(16, 15, 4)|var|float64
var_7858 = relay.var("var_7858", dtype = "float64", shape = (78,))#candidate|7858|(78,)|var|float64
call_7856 = func_7855_call(var_7857,var_7858,)
output = call_7856
func_7859 = relay.Function([var_7857,var_7858,], output)
mutated_mod['func_7859'] = func_7859
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8086 = relay.var("var_8086", dtype = "float64", shape = (5, 10, 14))#candidate|8086|(5, 10, 14)|var|float64
var_8087 = relay.var("var_8087", dtype = "float64", shape = (5, 10, 14))#candidate|8087|(5, 10, 14)|var|float64
bop_8088 = relay.power(var_8086.astype('float64'), relay.reshape(var_8087.astype('float64'), relay.shape_of(var_8086))) # shape=(5, 10, 14)
output = bop_8088
output2 = bop_8088
func_8091 = relay.Function([var_8086,var_8087,], output)
mod['func_8091'] = func_8091
mod = relay.transform.InferType()(mod)
mutated_mod['func_8091'] = func_8091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8091_call = mutated_mod.get_global_var('func_8091')
var_8093 = relay.var("var_8093", dtype = "float64", shape = (5, 10, 14))#candidate|8093|(5, 10, 14)|var|float64
var_8094 = relay.var("var_8094", dtype = "float64", shape = (5, 10, 14))#candidate|8094|(5, 10, 14)|var|float64
call_8092 = func_8091_call(var_8093,var_8094,)
output = call_8092
func_8095 = relay.Function([var_8093,var_8094,], output)
mutated_mod['func_8095'] = func_8095
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8230 = relay.const([[[-10,8,-8,2,6,-2,-6,-10],[-5,9,6,-5,-3,-7,-6,-3],[-9,10,5,1,3,6,4,-6],[-10,-4,-5,1,7,1,2,-10],[4,2,9,-3,-7,-2,7,-1],[-5,3,5,7,3,-5,-9,6],[2,7,3,6,8,-2,-7,2],[-9,1,-9,6,-4,7,-6,1],[2,3,-5,-5,6,10,2,5],[-6,-5,-3,-7,6,2,-6,1],[-8,-3,-3,10,6,3,1,-9],[-4,-2,-9,-4,2,6,9,-5],[-4,-2,5,-6,-1,8,9,-8]],[[6,-10,8,10,9,7,-5,-5],[-1,8,10,-8,5,4,7,-6],[2,8,9,-2,-5,-4,-3,1],[-9,-3,-5,1,-1,5,-7,-1],[-7,10,10,-2,-5,7,-9,-4],[-9,7,-10,-5,3,8,-1,8],[-1,-1,4,-8,-4,-7,-5,-1],[-9,-2,7,1,7,8,2,5],[-8,-6,2,1,9,8,10,2],[-6,-8,2,-10,9,-7,8,4],[-10,10,4,-7,9,9,-3,-9],[-3,-1,-8,-4,-1,-8,4,-6],[-4,-4,8,-3,5,8,-3,6]],[[-4,3,-7,1,-9,-8,-4,-5],[1,-7,3,7,4,-7,-2,2],[-7,10,-1,4,1,-3,6,-1],[1,9,-2,1,4,10,10,-4],[9,3,-6,-2,-10,-9,-4,5],[-2,9,-3,-7,-10,-2,1,9],[9,-1,-2,-9,-7,9,1,-7],[10,-7,10,-9,3,1,7,-5],[6,1,-9,8,-3,9,1,-6],[-4,4,-7,4,-4,5,7,-10],[-5,10,-5,2,-7,9,7,-1],[-8,-6,-9,4,-5,7,-8,8],[-9,-9,-9,10,2,-4,-7,-3]],[[-9,8,9,-3,1,-8,-8,2],[5,2,4,7,-3,6,-5,3],[-8,-4,-4,-1,9,-6,6,-4],[1,4,-8,-1,4,-9,6,5],[-6,1,9,7,-1,-5,-10,9],[-7,-7,6,7,5,10,-9,-7],[7,-5,10,-2,-4,10,-10,-3],[4,3,8,-1,-8,-6,10,-4],[-1,-1,2,2,2,7,-10,10],[-2,5,5,-3,-9,-3,-2,3],[-7,-2,10,2,5,6,4,9],[-3,6,-10,-2,-7,7,-2,-3],[-7,-8,3,10,1,-5,-4,-1]],[[-1,-6,5,2,-2,3,3,5],[-5,6,-2,5,-4,10,-5,4],[7,8,7,6,-1,5,7,2],[2,-1,6,-2,6,-8,-1,8],[-2,10,6,-9,4,-9,-6,6],[-2,-4,3,-9,-8,-2,9,6],[8,-1,1,3,3,-8,-6,-7],[-1,7,9,-3,-4,5,-8,-5],[7,3,3,3,10,7,8,-4],[-6,-3,8,-1,2,6,-7,8],[-4,-1,-9,-4,-10,6,-6,-6],[-1,9,-4,2,6,-6,8,6],[7,10,4,6,7,-1,-2,5]],[[-6,5,-7,-6,4,8,7,3],[-3,-1,-6,-10,-7,-6,-8,4],[-9,3,-7,-9,-2,4,-2,7],[-9,4,-3,10,5,-1,-1,6],[4,-6,-10,-4,3,-6,-5,10],[-9,-1,9,4,-9,9,-10,10],[6,-6,10,-1,-6,-7,9,-4],[4,-1,-9,8,-10,10,4,7],[-7,-8,-3,-1,7,-1,-9,-7],[2,-7,4,1,-2,5,10,-8],[5,5,7,8,-5,-2,-5,7],[-6,-10,-10,4,9,-10,3,7],[3,7,-9,-6,5,-7,5,-2]]], dtype = "uint64")#candidate|8230|(6, 13, 8)|const|uint64
var_8231 = relay.var("var_8231", dtype = "uint64", shape = (6, 13, 8))#candidate|8231|(6, 13, 8)|var|uint64
bop_8232 = relay.greater(const_8230.astype('bool'), relay.reshape(var_8231.astype('bool'), relay.shape_of(const_8230))) # shape=(6, 13, 8)
output = bop_8232
output2 = bop_8232
func_8241 = relay.Function([var_8231,], output)
mod['func_8241'] = func_8241
mod = relay.transform.InferType()(mod)
mutated_mod['func_8241'] = func_8241
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8242 = relay.var("var_8242", dtype = "uint64", shape = (6, 13, 8))#candidate|8242|(6, 13, 8)|var|uint64
func_8241_call = mutated_mod.get_global_var('func_8241')
call_8243 = func_8241_call(var_8242)
output = call_8243
func_8244 = relay.Function([var_8242], output)
mutated_mod['func_8244'] = func_8244
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8645 = relay.const([[[-4.169310,-5.242812,-3.692427,-6.255086],[4.537623,-8.101935,7.552956,-6.272683],[-6.698062,-9.686477,-7.060648,-4.427242],[-3.465858,7.971357,-4.440826,-2.588424],[-4.751473,-4.506618,-8.926147,0.810603],[9.003673,0.041496,0.265122,0.525106],[-7.884771,8.287055,6.997621,-3.236944],[-9.474612,-6.982809,-0.618033,-8.671683],[1.809512,5.495494,7.845192,-9.299617],[-9.851718,1.296111,2.600903,7.576865]],[[-8.771930,-1.884403,-2.525759,8.558261],[-5.044950,9.562546,-8.778510,-5.368051],[-2.874643,8.798796,-9.985432,-2.046000],[8.957020,-0.243459,-3.255809,-1.378187],[-6.547123,-7.257493,9.455302,-2.652536],[-4.218130,-8.273310,9.553100,-5.275940],[-9.222955,3.178031,7.593784,1.182334],[-7.403629,1.009079,1.599778,7.044744],[-1.520371,-0.140586,-7.476603,-0.500833],[-6.016293,0.261443,6.466316,1.264148]],[[-4.937289,-7.298143,-4.168981,-0.656892],[-1.911184,-8.558123,-3.057650,9.159988],[3.085220,-8.264951,-9.820448,-9.814706],[-3.767614,-7.061643,-5.495677,1.570622],[5.981366,-3.273960,-3.930134,-4.958105],[0.793567,-3.601577,-4.728617,-4.543869],[-4.133513,1.321926,7.850509,6.442064],[-1.827279,9.598542,-8.218272,1.310351],[9.903906,2.425658,-9.819760,-9.984158],[-2.976737,3.960538,-1.290436,7.230863]]], dtype = "float64")#candidate|8645|(3, 10, 4)|const|float64
uop_8646 = relay.asin(const_8645.astype('float64')) # shape=(3, 10, 4)
uop_8651 = relay.erf(uop_8646.astype('float32')) # shape=(3, 10, 4)
output = relay.Tuple([uop_8651,])
output2 = relay.Tuple([uop_8651,])
func_8654 = relay.Function([], output)
mod['func_8654'] = func_8654
mod = relay.transform.InferType()(mod)
mutated_mod['func_8654'] = func_8654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8654_call = mutated_mod.get_global_var('func_8654')
call_8655 = func_8654_call()
output = call_8655
func_8656 = relay.Function([], output)
mutated_mod['func_8656'] = func_8656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8654_call = mod.get_global_var('func_8654')
func_8656_call = mutated_mod.get_global_var('func_8656')
call_8666 = relay.TupleGetItem(func_8654_call(), 0)
call_8667 = relay.TupleGetItem(func_8656_call(), 0)
output = relay.Tuple([call_8666,])
output2 = relay.Tuple([call_8667,])
func_8670 = relay.Function([], output)
mod['func_8670'] = func_8670
mod = relay.transform.InferType()(mod)
output = func_8670()
func_8671 = relay.Function([], output)
mutated_mod['func_8671'] = func_8671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8654_call = mod.get_global_var('func_8654')
func_8656_call = mutated_mod.get_global_var('func_8656')
call_8700 = relay.TupleGetItem(func_8654_call(), 0)
call_8701 = relay.TupleGetItem(func_8656_call(), 0)
output = call_8700
output2 = call_8701
func_8702 = relay.Function([], output)
mod['func_8702'] = func_8702
mod = relay.transform.InferType()(mod)
output = func_8702()
func_8703 = relay.Function([], output)
mutated_mod['func_8703'] = func_8703
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8736 = relay.const([[[4.635104,7.101940,9.123881,6.829532,-7.324902,5.756514,9.264505,-9.524565,-1.740216,5.460802,8.108793,4.897227,1.891838,-6.728778,-5.211245,-2.196435],[-8.987130,9.511481,2.962739,-9.068732,3.261292,-0.366107,9.243821,-6.716570,7.992788,6.481565,6.037566,3.341074,-7.705243,-3.035235,-5.646961,-6.771271],[1.895154,-2.261018,-0.489590,-9.865590,-5.153076,-3.407011,0.618639,4.117029,-0.682773,9.183294,-0.215986,3.339504,-0.900273,1.142450,-6.238568,-7.362734],[-5.872783,1.942349,4.862517,-0.288620,-2.587456,9.831895,0.457480,-0.281651,6.906202,-9.801878,-9.059879,-7.534949,3.040161,0.993647,3.510165,9.421708],[2.048943,-7.912076,-1.745667,-6.423277,-3.252786,8.826264,0.086214,0.052880,1.062138,-0.647406,1.397524,6.727658,-8.815341,5.638516,-7.510105,1.703633],[9.208212,-9.781345,3.326735,-2.756457,6.578963,1.828694,2.954835,7.218641,-4.054843,-6.298647,7.392112,9.096115,9.368526,0.471322,6.880839,7.083271],[2.863166,7.093486,-3.540236,-8.421029,4.096078,-0.056930,-2.772370,6.568470,3.886862,8.141146,5.418673,0.734271,4.269047,-6.108117,7.808987,5.373825],[-0.892056,3.016998,-2.602724,-3.103429,-0.085419,-4.055802,-2.411394,4.010313,5.021768,-2.813889,7.927020,9.637826,3.474909,-9.806615,9.590570,3.728134],[-2.350455,2.263161,-1.285626,-5.563360,-4.765279,6.248751,-2.631083,3.304374,7.654805,4.444752,7.246951,7.701629,-9.724748,9.714950,7.886457,1.748949],[-0.125993,-1.985985,-3.415103,5.138357,1.033805,-2.157897,4.326797,-0.923669,2.564536,-7.225849,-6.327120,5.176781,4.586141,7.208376,0.913137,-6.432635],[8.772482,-5.462027,5.473846,-3.788111,8.301549,-3.982108,-7.748179,2.307968,-8.006113,-3.664520,-4.015620,-3.416464,8.947327,-7.589315,-5.226162,-9.337514],[-5.400382,-0.446626,-4.198041,-7.875731,7.991715,-8.268128,1.146748,8.786725,6.622041,2.813831,-6.455284,9.371190,0.662493,-8.515942,-4.112019,3.145007],[-4.808683,-3.786233,-7.530676,-2.923750,-5.256909,-1.778933,-3.495210,9.099126,4.881638,4.956683,-1.511781,0.625647,2.888969,-9.652792,-1.369146,-7.710976],[0.579986,3.533982,7.346932,5.087378,8.313868,-8.829360,9.850840,8.196884,-6.527906,-3.291686,-3.553167,-3.739030,-6.636882,6.202912,-1.101377,2.458575]],[[1.978110,4.549044,-6.855898,-8.624296,-0.630230,1.104618,-1.182302,2.118000,-0.091215,-3.343496,0.068690,-5.081922,8.385357,5.928268,9.284924,5.146316],[9.452711,4.220259,0.161614,8.510619,-2.336307,1.398180,-4.730637,9.079704,8.228786,2.395401,-4.415667,-4.098047,8.815944,4.281506,-6.234562,1.942892],[-1.752479,4.618802,-0.134420,0.257040,6.537018,-4.928966,6.683480,-8.885803,8.941421,-7.832764,1.014305,2.716325,-7.913530,1.164686,0.001816,-5.545865],[-1.954258,4.728281,9.914198,6.020300,7.419895,-1.836784,-8.547912,7.692252,-3.434895,3.878719,-1.311762,-5.207811,-0.959750,2.837271,0.390815,5.108693],[1.011380,-3.386104,5.739715,-4.838940,2.276874,-2.317389,3.264247,6.665747,1.973519,-4.835134,0.373011,-5.068505,-5.168799,9.879730,7.227899,7.521022],[9.479127,3.113523,-4.186659,-7.751378,-0.648186,9.171597,-3.874824,6.893429,2.458807,-0.730951,6.430501,-6.170850,-5.948233,2.156943,-7.396998,4.585265],[-5.054520,2.263491,-7.931496,6.748914,-7.216509,-6.732764,2.398845,-2.787260,6.324047,-8.217698,7.020094,2.985147,-6.797618,9.954588,6.676452,7.307617],[-3.693313,-6.906190,-7.110603,6.587687,-9.428941,1.626861,-4.341126,4.687302,-7.810602,-7.137321,-3.581642,-2.637315,-5.701499,-6.285378,-0.784231,2.773490],[-7.657628,1.052046,8.209237,8.167889,-6.451202,-4.808421,-9.336436,7.254026,8.468062,-7.675976,1.591490,-7.863577,-5.532470,6.492670,-8.888927,4.159228],[4.691051,5.506054,-3.104803,-4.472660,-5.926322,6.072097,-3.209574,7.643485,-0.297179,-3.489469,-4.960283,0.513806,5.494249,8.108553,5.814444,-6.640048],[3.617822,-8.605139,-2.143556,3.506359,1.561903,3.136450,8.456333,1.655670,-4.748757,3.816005,-9.485642,1.112319,7.704276,-6.895875,-7.261471,6.156310],[-0.574171,5.543330,4.380786,8.710613,3.811368,-9.859844,-7.788552,-5.271420,1.453225,2.700061,-9.698795,7.457402,-9.412851,-8.661719,-6.030051,-9.868191],[9.452241,8.949799,-7.734244,7.162167,4.356524,-6.375767,3.087260,-7.971148,-0.413664,3.677423,5.965417,5.295864,-7.014206,-6.048815,9.501883,8.341360],[-5.824649,4.140317,-8.468734,-5.708384,0.098991,1.291297,4.819020,1.768656,7.826155,-0.934662,-5.377248,-5.848477,7.603356,6.090418,-3.684172,-5.739805]],[[-1.853490,2.841654,-7.739928,-4.201875,7.174910,6.027769,-1.622556,-8.718062,9.798627,-6.495744,-0.849494,-4.935232,0.539970,0.581325,-8.746643,-4.154242],[2.635427,2.764077,5.567282,1.750954,2.964055,7.592191,-9.625068,-4.003628,-1.327748,9.833162,7.570413,-6.920772,1.635166,-7.926657,5.135348,-7.647296],[3.498005,8.256842,-4.630407,2.800800,3.355259,4.650871,-9.603944,5.437455,-0.889064,-5.450769,-2.288513,-6.963630,-8.913430,1.495863,5.965648,-4.290718],[-0.517800,0.262202,7.312803,-1.138625,4.253203,-6.832124,8.084081,-5.880495,-4.941099,-5.292793,1.279526,-8.852864,4.333209,-7.488784,-0.356714,9.293292],[-0.634929,0.803239,6.540111,-2.648973,4.807037,4.702768,-1.777214,-9.537286,-0.231697,3.901986,1.393018,5.812968,5.439404,1.557051,-6.873401,-7.773663],[9.792861,-7.603206,-9.423429,8.204636,4.997919,-9.236677,-5.730438,-7.477760,7.337940,-2.657963,-3.134747,-0.997124,1.276341,8.936890,-8.463681,-6.865974],[7.518143,9.134910,2.263926,4.787803,4.979879,-5.053899,-3.424164,-8.284571,-1.938680,-7.441099,-0.423351,2.102725,-9.559191,5.162950,-0.458729,-8.781055],[1.306541,6.136663,-6.878613,4.608802,5.304556,4.227956,8.492988,3.659889,-3.509761,-6.392528,-9.090680,0.154403,-7.195675,-5.081253,-1.569862,-4.927073],[-8.664356,3.922632,-7.798037,-6.854673,-4.687540,7.277449,7.418756,-5.502902,-7.421151,-4.531572,-1.189530,8.269908,-2.156047,2.597727,-4.695140,-6.840510],[-5.595486,7.129820,1.657475,-2.975861,1.593953,5.044491,-5.939558,-6.645362,-3.350779,-5.985651,-9.313940,2.525721,6.031572,-9.545284,-8.053686,-3.600073],[-3.479269,5.646169,2.698924,0.933512,9.442506,5.176639,-0.189940,-7.742699,-1.735169,0.939058,-1.139292,7.157232,-0.494145,0.004334,6.977839,2.946568],[3.216303,0.681383,-7.441499,4.588166,7.716117,3.937272,-3.616930,-1.017884,-4.477336,-5.421148,-9.134227,-4.224405,8.266383,1.835973,1.373943,-3.189732],[2.100939,1.430314,-3.409850,2.344007,5.163104,-8.235205,-8.077526,-1.610998,-8.790182,6.273273,5.220595,5.909331,2.253259,6.598871,2.323410,5.002166],[7.330207,-4.620522,0.431030,0.603459,3.902223,-4.140952,-8.760746,-8.547773,4.728460,7.640782,-2.090237,5.615053,8.449247,-4.243601,-6.830572,9.267036]],[[8.095603,-5.728973,7.460136,2.264754,8.947373,-7.899317,3.873914,-3.143205,-5.951484,1.691083,5.868562,-6.871957,9.782313,4.045243,-5.630405,6.062728],[2.358884,-7.742443,8.596168,6.022083,9.168183,-9.580920,-2.153710,-2.944332,-1.020595,2.522564,-2.246937,-5.477492,8.099936,-2.268298,-4.457484,4.529489],[6.247984,-2.229742,5.026981,0.364338,6.176578,7.671713,-4.108525,-3.897512,4.290255,-2.483443,5.239337,8.624249,9.031411,-5.003957,1.399994,4.520540],[7.749515,4.214783,6.075091,2.904778,-2.245332,-2.167552,-3.663954,8.793936,7.263107,-7.744261,-5.662941,0.176317,4.428946,3.038883,0.441625,4.935470],[-5.268670,9.081700,0.061070,-7.260728,-6.974670,-2.319994,8.404540,-5.295144,-3.120539,1.951444,6.899811,-2.666924,-0.573288,2.620554,-7.871340,-9.274007],[-8.697230,-5.566848,5.722430,0.940699,2.738165,-0.865048,-6.381671,2.043829,2.460304,7.689591,0.623258,9.018174,-1.145981,2.012871,7.597397,6.876493],[-5.008804,5.245564,8.920720,4.264660,5.211178,5.599599,-8.882794,-7.366990,-9.431568,-8.508114,7.794514,8.818908,1.314548,-2.889518,4.575513,-4.703034],[6.511449,8.074381,-6.313518,6.531854,-3.443763,4.362720,-7.362363,3.052635,-9.979564,-2.729108,0.443067,8.591187,5.516184,-0.971334,4.562779,-9.360053],[-2.083635,4.823443,-5.060276,-8.211894,-6.753023,6.472752,9.899685,2.464879,9.495733,3.364961,0.926561,1.958779,-3.070589,5.522144,-1.328245,-8.524074],[5.588525,5.021237,2.528734,1.000484,-5.706121,-6.928738,5.281932,1.242397,6.504310,7.831950,2.353035,1.851042,-0.345238,8.676275,-2.002118,-9.306711],[-8.174885,3.624873,7.983880,0.468302,-9.625829,-8.068925,6.835637,-5.721044,-2.539304,6.797500,-7.714740,-0.367148,-3.752320,5.703949,0.013868,-3.106313],[3.635950,2.467663,-5.783187,-1.578025,-7.033727,-5.245161,-4.781936,5.564443,3.000781,-5.113846,4.209078,-0.929558,9.897505,1.004695,7.457168,-2.502922],[1.194771,-0.130078,-3.160107,-0.216606,2.005214,-2.479764,9.102219,-5.271236,-4.271137,-7.952921,9.652061,2.253217,-0.204926,-6.179231,4.603149,1.725524],[-3.388634,-7.085875,-6.702375,-5.165300,-3.364028,-5.317677,-6.792808,-0.159725,8.587694,-6.222863,2.893202,3.359051,-3.448330,-4.237066,-7.761952,0.498699]],[[6.288305,0.061167,-6.484383,8.712125,-1.344221,7.805474,-6.712731,-2.422658,-9.644591,6.841921,-7.150597,-9.796055,-0.980827,-8.786469,-8.830328,2.960150],[-5.812880,0.849191,-5.903439,1.124984,-0.363937,7.443362,-0.510998,7.726843,0.017654,-6.359644,2.148779,-0.567271,4.979039,8.061619,-9.938670,1.599473],[4.649849,-8.287948,5.302162,5.524578,-3.572676,6.889096,-2.417994,7.996342,4.400913,9.007059,-8.984022,-6.752985,0.023001,7.741487,-7.835441,-3.241019],[-6.211409,-2.589606,-7.044402,3.509282,-7.875731,2.340020,5.591906,-1.012858,-9.419287,-1.338754,-0.528566,2.926752,-3.512925,5.246181,5.437605,-7.372519],[-1.955950,-2.583166,-6.289338,6.886681,-4.876311,2.405244,-6.443699,-4.646381,-5.688755,3.913536,0.581445,-7.128037,-1.972486,-7.155594,1.405154,0.735937],[5.129347,-6.814660,4.942975,9.819210,-6.599630,-3.059151,-0.246210,1.481669,2.250273,4.941200,2.991841,-8.644109,-7.273970,-8.090815,6.175721,9.683625],[9.440181,7.414422,-1.258427,-7.201428,7.384445,4.469034,5.864781,-4.518971,4.631659,0.165414,1.695067,-2.355247,-3.042249,6.358180,-9.560549,4.396326],[-7.111453,8.529539,8.824288,6.343955,-5.341232,-4.595090,-8.139365,-3.648216,5.764893,-5.114013,0.625863,-5.224625,7.665284,7.547466,-9.219767,5.983782],[4.103966,1.293227,-3.719070,-6.573579,2.260310,-0.402676,2.154834,-3.239934,-1.185133,-6.989627,0.325562,-5.195511,-2.589530,4.688590,-0.900738,-6.894327],[6.023610,-1.776104,-6.584708,-8.117127,5.077068,2.443104,4.420103,4.692193,6.727798,5.001999,-5.288061,4.713876,4.650607,-9.447258,-2.355066,-2.249848],[-1.421225,9.128114,1.307412,2.237924,4.733654,1.777028,-7.100779,-0.250882,-8.500520,-4.733768,0.447686,-7.962536,-1.406184,-1.840521,3.296347,-8.252239],[7.998350,-2.845002,9.731954,-6.487856,1.391067,3.011141,-4.452301,2.516936,7.543192,-6.871651,9.838455,-8.635851,7.922057,-3.591903,0.887230,-8.531817],[0.010259,2.824858,-9.801730,8.750623,7.277180,8.624828,-2.482554,4.004357,2.410654,4.033204,-2.182015,-3.616743,-5.258984,-9.993498,-8.733953,9.539212],[2.668286,-0.158294,-4.054284,7.436900,0.985655,7.602015,9.971300,9.844503,-9.895119,-4.173928,-1.343994,-5.659277,1.279917,-3.546830,-5.319307,3.957056]],[[-8.722172,6.293069,2.278231,5.357765,-1.037505,7.687300,3.476994,-8.861649,8.445562,-4.290927,3.849087,-7.564242,9.590687,-1.551595,-1.389844,8.858080],[-7.831037,8.502344,-2.581912,-0.771857,-2.487597,-8.374137,-1.553211,4.694428,5.120925,-4.590602,2.362719,-1.337477,7.082732,-6.261830,-8.780913,9.542873],[-8.055379,3.272427,5.744952,7.030105,7.300861,3.149514,-9.241879,2.477297,-1.299037,7.967271,-8.771865,-1.876452,-7.748699,-8.878261,-7.637396,6.304818],[-1.114640,7.043173,-8.087618,2.465259,4.342518,-6.616329,-9.570451,8.404231,4.167168,-0.712618,-6.105287,8.555472,8.615962,-0.028982,0.316539,-7.246493],[-2.046361,4.372982,9.698894,-6.629697,5.435624,-3.736445,-3.724513,-3.811166,-2.173982,2.648610,7.895707,-5.978034,-0.308510,4.464364,-2.201774,-9.034171],[1.819276,-5.362024,-5.077180,8.613934,0.481932,9.751812,-7.217558,9.793204,-3.545586,6.306983,9.180095,-0.744897,-1.704106,-7.664783,-1.882120,0.690290],[-8.406442,-1.008162,-0.867559,2.801478,7.665376,3.937323,-8.577313,5.798979,-4.652264,1.435014,-7.169961,2.493145,0.533570,8.115777,-6.313522,2.411444],[-8.686005,-6.019641,-7.159091,-6.399796,-1.846529,4.623123,-9.363326,-1.080063,3.874535,1.668019,3.809444,9.792442,-0.224741,-2.697357,5.256882,3.879814],[5.549769,9.714051,1.737568,-1.428679,4.791104,7.134532,-9.966108,-0.146703,0.764224,5.545076,6.073536,8.008155,8.222547,-7.654380,6.954613,2.227180],[9.823292,-7.323997,-4.483687,5.983571,-7.747180,-7.297238,-1.305873,2.771951,-7.332429,-8.816715,8.221178,1.718029,-8.822827,6.490801,0.397609,-6.137253],[6.322452,-2.500784,4.046192,-5.489250,-8.620943,-5.218400,2.319127,-0.815636,-1.634058,2.949552,-2.363354,7.852902,2.923074,-1.956219,7.160894,5.065773],[-1.704628,-9.604681,5.554598,6.952259,5.158756,-2.332039,8.637408,-5.247280,-1.671749,0.750083,-1.689442,0.320939,-7.851214,8.818041,-7.342779,-9.550460],[-2.145126,6.968768,9.989138,1.295977,-2.293054,-0.619761,-5.565570,-9.329452,-1.486433,0.405774,-5.096554,-4.381808,-1.196627,-7.890423,6.638301,3.355853],[4.766813,5.485167,-7.966321,-1.409435,9.052947,-3.001317,6.636867,-8.449835,5.383605,3.175854,-8.020541,-6.712362,9.983675,7.881133,9.879286,-2.650533]],[[5.841911,-9.364636,-3.354492,8.104726,7.099609,7.089782,-9.025155,-9.137923,5.541405,6.943244,-9.923662,-7.146949,-8.536888,-2.469414,3.157585,-0.906358],[-0.959338,-4.899711,2.807958,-8.505883,3.501336,-8.217243,8.462823,7.776342,-0.323349,-6.968105,-9.312719,-9.641585,3.704380,3.954332,9.156258,4.203133],[-0.176677,-5.177088,2.002901,-2.150930,-4.328707,-3.061313,1.605112,-1.287868,-1.608450,-7.297768,4.386084,8.180487,0.894535,2.142322,1.418969,7.798232],[-9.574187,4.352372,-2.720706,3.438295,-7.335751,6.391498,2.642170,2.364960,-3.628685,7.873830,-7.890997,-0.326890,9.790504,-2.890215,6.987948,-7.932709],[6.721857,2.720549,1.261360,-8.864728,7.355214,0.235499,0.551764,-0.158990,5.165052,-4.104860,8.300770,0.618357,-8.785168,3.428950,1.926023,-0.903249],[8.835343,4.941319,-9.954071,0.285809,9.704892,-0.658428,9.375348,-5.451176,-9.964280,9.666487,-9.007750,-9.733513,-0.599568,-6.844075,5.581263,6.523250],[-2.072734,6.660555,-3.996789,-9.230059,-3.076510,5.905941,-6.881408,-8.698366,-2.383087,-9.594736,-1.071161,8.732259,-8.613620,3.743189,-3.273804,-9.514998],[8.150366,2.480861,-4.092501,6.471902,1.905678,5.437923,-4.498938,-8.910814,1.915942,6.341729,-7.029402,-0.107263,-3.305495,-0.921531,-8.512530,-1.839252],[4.608915,-4.540695,3.468818,-4.595962,-2.318661,-1.694804,9.502512,0.533509,5.071971,-9.652225,6.661756,-3.190508,-8.088489,3.147899,-9.690869,-6.748128],[2.769426,1.663757,-1.541205,9.967551,4.335008,-1.367065,2.500178,6.568800,-8.968375,-6.781533,3.733145,-3.512337,8.082925,-2.189617,2.780445,7.387153],[7.903139,5.839509,-0.408622,-8.750565,4.321122,-1.397900,-1.516637,0.665346,-5.185613,4.091830,0.402344,7.330862,5.620422,-9.841914,3.350610,1.371556],[-6.609720,-1.339548,-8.322969,5.076921,0.433184,-9.251212,7.696346,8.889416,9.894056,7.080818,-2.638117,0.390747,6.677301,-0.372386,-7.347563,2.068244],[-6.675904,2.449462,9.763807,-7.973948,9.983075,-4.028576,6.727336,-8.418415,-3.991579,0.688367,-5.080923,-8.102545,-7.725062,-2.659180,9.694859,3.945748],[-2.009927,-5.651479,4.080321,-4.256698,2.295416,-9.963137,-4.176230,0.690550,-6.845998,5.869902,4.266561,-0.462198,-9.695960,-9.255822,3.539627,-6.749195]],[[5.623416,9.035389,2.224343,3.709278,-4.493948,6.767844,-6.078917,-5.479296,4.052908,3.796809,6.658285,-6.583953,3.137628,6.447784,7.556825,-4.461242],[-0.728649,3.732088,6.890460,-2.401164,-2.467214,4.555860,-6.404467,-0.987198,3.021990,5.036617,7.924431,2.651324,-8.044762,2.271043,-0.210636,-4.588589],[4.936848,-2.349057,-5.007867,8.677901,9.684023,1.204865,-0.828239,3.157119,-1.566859,-0.503440,4.823430,-4.671373,8.550798,7.008076,1.118780,-6.605077],[3.403609,9.281419,-1.478914,7.683284,6.684083,9.276110,-4.535905,-8.531573,4.801939,-9.665474,-2.055777,0.303909,2.863059,1.461338,-4.368056,8.660190],[-8.692230,-8.708009,4.567393,-9.155713,-3.542040,-2.234496,4.956650,1.323005,-7.075730,5.700992,-1.552337,-6.121714,8.535965,-7.753161,6.237097,7.846057],[3.866534,-7.428615,8.295884,0.019220,7.082833,-0.589552,-1.404381,5.518827,-1.787665,3.158503,5.051998,-5.620074,9.467468,8.782857,-9.290780,2.801351],[-1.566109,9.822355,-4.300494,4.091549,-6.841249,-1.259726,-5.200981,6.170038,-2.586611,5.612367,-9.835707,-4.942608,0.491599,7.190957,4.558244,2.991714],[-4.819721,9.203794,8.222546,-6.737991,9.960843,2.454781,3.632371,-8.258787,0.998755,4.209129,3.405628,-5.084229,7.286540,-0.476377,-8.020024,-5.035719],[-0.432170,5.126623,7.709735,-1.727153,9.563809,-0.267048,-9.173157,-9.525490,-3.209836,-9.904564,-5.858860,-7.067283,-0.677633,-6.301800,-1.566773,2.381556],[-6.768258,4.653967,6.800443,-3.429033,5.036321,8.860055,0.031537,5.814118,2.723381,8.171815,-7.313570,-8.373781,5.287040,4.142216,7.633187,-4.287244],[-8.614454,7.585680,5.354406,-6.235843,-2.354042,6.853302,6.906151,-9.823934,-9.381311,-1.213241,8.400624,4.006956,5.827254,8.522872,3.628125,5.071316],[1.133448,7.354430,-2.456452,9.428197,5.144089,0.657966,2.220092,-0.195680,0.474115,3.500087,9.345669,1.663965,5.711660,5.989551,5.039676,-5.691534],[-7.888424,6.457046,3.185480,2.516150,0.771101,-2.237277,-8.802535,-8.473217,2.733826,5.229496,-9.383767,-1.953863,6.813039,1.227664,-4.322683,5.022842],[9.441751,8.295810,5.067898,-6.770077,9.260067,3.638858,3.360543,-6.896092,0.707523,0.554104,-9.699236,-5.212417,5.302457,-9.314177,0.953876,-6.565407]],[[2.943021,-3.570941,2.756108,5.153590,9.956282,-3.753559,8.140619,0.757044,-2.930438,-3.012978,-9.278265,-1.049517,-8.315252,8.673245,-4.218722,4.121661],[-5.984375,-4.031991,-6.518007,-9.401184,0.336917,-7.931638,9.104222,5.114133,-7.586317,8.097140,-8.449093,-9.471679,-7.432290,1.724848,-3.213021,-2.625171],[-8.357872,-2.962406,8.238245,-3.285215,2.634810,9.924883,-5.384968,0.430949,-0.546468,-6.851263,-4.745193,-3.507356,-7.431765,-7.918728,-1.949025,8.042081],[0.547868,5.349379,9.229528,3.304021,-7.855323,1.868713,-8.128052,0.934714,5.447148,5.195257,-6.015586,6.308938,8.825894,3.375989,-7.550112,-8.563434],[-0.233537,-3.653033,0.892898,0.012756,-4.265306,0.546209,1.849091,-6.286741,-2.981401,-5.184334,1.720005,1.933316,4.498482,-4.508196,-3.129643,-8.057443],[-5.094831,-2.301310,-0.128315,2.872798,-3.749625,8.476895,0.807529,4.480527,-4.008701,-6.038074,2.154032,-0.931044,3.812674,-8.030358,-3.158074,-8.716106],[-2.380303,-8.412553,-6.887867,1.224360,-3.948397,-6.174148,-8.845525,4.542063,-9.686998,-4.508221,-4.137096,-5.365684,8.101383,1.628075,1.674148,-6.181345],[-5.775746,5.634199,-5.141091,8.673141,6.232631,-8.926910,7.928558,-8.839307,-4.034273,4.119891,-9.151746,-0.143808,2.209520,7.610899,3.528640,-8.198767],[-0.946389,0.747168,-0.023671,-1.441258,-6.630261,-8.632526,-9.597780,6.976434,5.877738,2.560637,5.011104,-0.335035,6.336218,5.921645,7.193206,-5.490316],[3.945678,0.503386,7.105539,-5.714676,-8.654066,8.501498,1.966665,1.319113,-0.608647,-4.195125,-6.233419,-7.857188,-8.091953,6.403017,1.015158,-9.551903],[9.534482,-3.632087,0.735574,-1.952999,1.180203,-1.161915,7.766230,-8.822923,1.888144,2.573619,5.939256,0.519468,0.769979,0.880675,7.951114,-6.739687],[3.276411,4.217965,5.926827,5.308282,7.843577,1.616647,1.905534,-4.352461,6.924759,9.241356,8.632190,-4.651084,7.163121,9.311991,2.935810,9.334309],[7.272401,8.197470,-2.080867,9.777525,0.215210,-8.073476,-1.416216,7.375657,-6.597873,-8.712036,3.548440,3.727910,1.165900,2.307419,-1.372531,9.530348],[9.728250,-2.562922,8.690181,-6.051027,-8.499160,-8.230109,4.434853,-5.687886,-7.593176,-0.504496,-4.307398,-4.647449,-7.107276,-4.515805,-3.680717,-5.800246]],[[5.154778,0.778399,1.919091,6.537197,0.388612,-4.587170,9.636876,-3.163689,-5.709140,3.273412,-5.398298,-3.983013,-4.940214,5.120882,-2.117298,-9.352802],[-7.668778,3.923589,1.392234,-2.205169,-0.323049,-1.818652,4.684985,2.258974,1.328074,-4.920176,-9.979002,-8.615965,-4.905703,6.179249,-5.247510,-6.272642],[4.291120,-9.907370,-3.912139,9.443160,3.573110,-5.427630,8.544838,-1.447870,-5.236670,-4.504216,5.795633,9.840640,7.345912,7.364817,2.595031,-7.665768],[3.393928,3.417246,4.275196,-8.819370,-6.865635,-7.841164,-2.292658,-4.214465,6.838821,5.676540,-0.522893,-4.612206,3.271186,1.417371,0.123244,1.925326],[-8.338092,-5.633202,-0.901253,-2.731061,8.729614,-1.109788,-5.045773,2.792540,9.639689,-2.642168,1.148464,0.225676,-2.496443,0.200100,5.298872,-4.055598],[-2.238808,0.002489,5.390899,5.717647,-0.956100,-6.503940,8.622046,2.599065,-7.776848,-6.272122,-8.088106,-6.752529,-0.194982,8.069483,1.463060,2.119105],[-9.596742,-1.293761,-3.647416,8.762905,4.357223,0.884437,9.855069,1.773780,2.835792,3.259710,-9.563457,-2.008758,-1.592427,-5.128375,-5.991959,5.421416],[-5.990824,-5.585571,4.290110,-6.018400,-9.440413,8.618833,-5.207247,9.368141,-2.810119,8.972732,0.154860,1.879542,6.843282,7.580587,4.795100,4.763817],[-2.360866,2.356085,5.705036,-9.743457,4.975864,3.216626,-0.084462,6.133833,7.733084,1.428716,9.892673,-0.732790,-3.000639,-7.847890,-9.517382,-5.972164],[6.422506,4.660657,4.497757,-4.780504,4.930128,-5.889861,8.215848,4.835730,-0.477864,2.977595,1.884219,9.072733,6.115360,-3.126821,7.653280,-1.763146],[-4.313135,6.076350,2.735826,-2.801182,5.056686,-4.730774,5.372765,5.973915,0.384105,2.469242,7.743945,-4.935487,-0.846180,-0.146089,9.681170,-9.563248],[-9.028804,2.274446,-6.431248,8.052790,-5.830685,-0.738229,2.138865,-5.952028,-7.209671,7.918074,-4.533846,-1.719386,-7.843837,-4.332897,4.877069,2.114987],[-6.931021,1.863340,3.665558,-3.870967,-6.957556,6.507050,-0.969585,-5.184849,2.801651,-4.320684,-3.285131,-0.002023,-9.072036,-2.281112,6.950502,6.964762],[8.897371,-4.704122,6.373781,-7.437606,5.333712,6.160051,6.046233,-1.914113,-8.621638,-9.749097,0.573290,9.834471,1.586916,5.881154,-0.841248,-3.170271]],[[2.543852,-9.853805,7.127123,5.659923,-5.132425,0.487281,-3.654818,-1.152549,-5.722873,9.789534,4.762447,7.573578,6.031884,3.638011,-6.197619,8.804638],[9.683625,-9.974230,-8.099312,6.140256,9.632639,9.505185,0.447320,-0.026828,-0.219849,3.462097,-4.712782,9.506668,-5.697329,9.330945,-4.030769,-0.675848],[-7.159345,6.069007,-8.391271,0.638672,5.965640,-6.241738,-0.514167,-7.885221,-0.438823,-9.074930,2.405214,-6.155204,8.841675,-1.678826,-5.774686,9.985358],[2.696766,-8.558710,8.374297,8.901362,-2.261004,8.327647,-4.261948,1.097948,-3.427681,-9.365608,8.004605,5.413210,-9.563615,0.187993,-7.490550,-2.084351],[7.903593,-1.220265,-4.474396,4.944867,7.349163,-0.551007,-6.988352,-2.633198,6.949917,-4.665866,-6.123339,7.469492,8.982423,5.440587,3.801374,-9.141090],[-3.498373,-1.990311,-4.370298,7.870523,-3.355350,-2.893217,-7.214497,9.727799,6.355315,-8.720825,4.943636,-5.793631,-6.114804,7.392712,8.624142,-5.455294],[-3.378058,9.216647,-0.555907,-0.047982,-2.152760,-5.138335,5.704559,-4.750407,0.539483,-8.475459,5.383222,-3.497728,3.555855,3.730472,2.654323,-4.341374],[-7.682400,-6.717431,5.531037,-4.026345,3.554991,-3.827983,-8.552440,6.965664,2.079228,7.529618,7.745193,0.070764,6.219509,1.119425,-4.679900,-5.924829],[3.757872,-2.780433,1.092768,-6.318886,5.381088,7.122738,-7.953992,6.397098,1.804499,-1.127453,-8.007280,5.883155,-0.751888,-3.802237,-4.093857,-5.971007],[-5.893245,-6.152459,6.997944,-6.870551,4.333232,-8.834675,4.778112,-4.478792,-9.257551,2.671682,-3.465387,-0.586593,1.982069,9.887257,9.331819,-8.989204],[-3.541437,9.008249,0.649241,-3.901256,-3.204565,-7.608042,7.010129,-3.799542,0.155582,-3.177817,-1.197106,2.628062,-9.011335,3.349575,-3.430769,7.060850],[1.983942,-1.963737,-6.770304,1.496091,3.809612,-3.296497,-9.359323,3.076202,-6.485855,2.594726,-3.222408,9.054502,-2.492785,5.625884,-6.798184,5.064194],[0.456435,-8.199815,6.651490,-6.444231,-3.091517,9.942933,3.277383,-9.297803,-7.601205,-8.140641,-4.753881,2.475340,9.006143,7.180876,3.091208,8.743968],[-1.974115,2.007548,8.004404,3.812987,-7.990071,7.495595,1.645627,-1.363567,6.157164,-4.127015,-8.047919,-4.913128,-1.001972,2.026981,0.298550,3.387890]],[[-6.471836,0.095423,-9.410632,0.924407,2.176882,5.735732,1.601357,-3.665154,-5.447099,-5.465744,2.197818,-4.900765,7.692923,8.711447,-8.093611,-3.331593],[2.177773,0.749218,-0.177212,9.181588,3.301824,-5.188919,-7.560159,8.107383,-5.734859,5.755623,1.375423,9.196505,7.625474,7.133095,4.314724,-2.725695],[0.437038,6.537347,2.393805,1.187808,8.600763,1.552971,-2.700353,-0.635422,-3.083002,-9.203111,-5.961693,-8.940654,6.118487,3.902096,-9.378327,8.489163],[8.381351,2.010429,2.183815,1.384585,3.693998,-3.502699,-6.355477,-3.625277,-7.275988,-1.784910,-2.256860,-4.091361,-8.409320,7.649345,-2.439249,-0.755062],[5.246530,-6.320652,-8.834113,3.168029,-5.788218,3.803257,-8.274318,8.480553,5.024188,8.593272,6.631479,0.078902,-2.010669,-0.621403,5.349812,-9.081785],[-4.818865,-8.107159,9.626128,-3.871713,4.425648,-6.447570,4.837068,6.502727,1.584298,6.049496,-3.472627,-4.698805,4.533106,8.423708,0.957974,7.975595],[-7.681239,-2.337653,3.672831,9.760336,-5.288409,-0.913259,-0.246524,-2.572349,1.511179,-7.859117,-5.180398,-0.256462,4.604175,3.422673,2.563829,-8.126411],[-5.419382,6.856710,-7.703858,-5.666023,-2.589807,-1.603165,-6.698469,-7.398147,-9.602842,-4.813444,5.077728,-1.994347,-3.965386,0.683833,-8.295815,-7.210570],[-5.095445,-3.050831,-7.757858,-6.931622,-3.720428,2.859790,4.638612,-6.213367,-2.125667,4.149393,5.836070,-3.818418,5.858805,6.188547,-1.566396,-7.306392],[-5.347327,5.274822,6.407644,2.189229,-2.264606,7.313974,2.278055,-1.483580,-6.800817,1.238465,1.488295,6.917944,-6.184419,1.629115,-4.047065,2.192701],[-1.813954,-6.751567,-3.182378,6.164811,-0.873478,7.491695,-2.387863,-5.781160,8.004065,-2.984496,7.539153,3.658808,2.157649,-4.360983,-4.903972,-4.985481],[-5.241363,-1.270475,-2.309117,-3.357142,-9.065161,-5.579311,4.460004,2.288031,2.742664,1.332852,-9.056164,-7.014899,5.197847,8.058863,-9.215395,9.552880],[-0.572758,-0.093418,1.752559,-8.238492,-1.491977,5.629772,2.131926,-6.478709,-1.724214,1.145934,-7.900268,-7.997176,5.606568,5.256623,9.013154,-7.990057],[-4.277141,6.834095,3.446759,-5.771403,-8.746679,4.977605,-2.530616,-3.343530,-9.192309,6.710050,2.009783,-1.610001,-4.318495,6.680171,-2.343260,2.481968]],[[-8.848287,0.339565,-6.720175,1.607374,1.193705,-5.767772,-0.319627,-1.246362,6.195124,8.060021,-6.035547,0.800792,7.393343,-1.417692,-4.157017,-2.788344],[-5.995060,9.111385,2.007839,-0.037230,2.940356,8.894440,3.874831,-0.534552,0.733123,-2.631088,-4.197297,-3.769836,-2.175991,0.474695,2.418859,8.614344],[2.243318,-0.780040,6.750860,9.032309,-6.186067,-8.362757,6.389474,-3.576855,-5.726145,-3.654695,-7.236998,-3.259876,4.185057,4.040697,3.186747,7.020272],[1.694972,-8.829566,-3.649275,-7.415532,-4.317194,-9.647475,9.477500,-5.435258,9.083893,-4.946279,-7.051205,-5.350381,0.451329,-6.282169,-1.870112,4.900556],[4.206344,-6.718279,-8.612271,-1.483355,6.955546,-2.751827,9.556773,-2.306894,8.329705,-9.519577,7.808877,0.907482,0.290871,-5.738466,5.667830,7.667076],[7.137891,-1.458602,-2.315954,-9.360043,-1.334253,6.811464,3.260040,-3.077872,-1.924020,-2.469092,-6.483566,-8.354017,8.756150,3.788152,1.130851,-1.659563],[0.074625,-1.550265,9.001435,6.882343,6.692350,-1.926919,1.440009,8.420967,7.481517,2.756795,3.711166,0.434648,-5.127954,-2.869460,-1.099734,-5.321843],[2.880035,5.425186,0.959691,-5.251881,2.705669,-1.155494,-5.696151,3.634979,9.647627,6.495002,-3.635034,-9.345589,1.112059,-4.429599,1.952096,1.065813],[9.536166,5.884107,-3.652369,2.909150,-5.376434,-4.752310,8.623370,0.361257,-3.596715,-1.534557,0.615616,-3.389655,8.261258,-9.174971,9.402334,3.438977],[6.645255,-4.818184,9.739403,1.545292,8.683383,-5.311780,7.173280,1.828996,-4.736592,0.557271,-2.717566,-2.626134,-2.436310,-5.781620,5.872529,1.474193],[9.551647,-6.329853,1.498497,-7.123155,6.450375,-3.620155,-4.285381,-3.129909,6.853368,8.266362,7.200809,7.845974,-7.742429,-9.125878,6.650971,-3.482637],[5.237374,4.660546,2.592530,8.299621,-7.280430,2.255106,3.259799,4.438523,7.220260,2.414488,3.987504,1.565841,-0.775821,2.499813,9.702057,-5.655449],[-1.180070,4.311004,-6.822560,-4.954430,-8.316157,9.040556,8.388447,-3.474846,2.894523,-4.902528,-4.016581,2.132869,8.351637,1.821669,-7.203404,5.814380],[0.057478,-9.813554,3.921172,3.045973,2.873583,4.924660,4.362926,2.036936,0.257145,3.148626,4.982532,1.968437,0.272132,7.144408,-3.149630,-0.036150]],[[-9.574345,3.770181,2.062462,8.049684,-9.100526,-2.999034,4.583289,-8.908411,4.913181,-1.514743,-1.367859,7.155603,-7.696648,-5.457023,6.089681,6.463187],[5.685934,2.940671,9.755360,3.549937,2.765400,4.585709,-2.744582,-4.335872,-9.159545,-4.676639,-9.412902,-1.260784,9.139748,7.976488,-8.176599,-2.611027],[-5.726495,-9.008147,-7.526932,2.608143,7.037884,-7.832558,-2.976638,6.756411,-5.526931,-1.958201,5.071392,5.208326,5.272677,5.244842,9.114527,3.915326],[7.412222,8.468079,-8.042840,-2.959724,-6.093492,2.994418,2.162778,5.182728,-9.548014,-6.966025,-4.912793,-5.999744,-5.507345,2.984165,8.693403,1.424546],[2.764450,1.460110,6.724416,7.686621,-2.292547,1.399478,-8.305630,1.991189,-8.841688,-8.361820,-0.920447,-7.180398,7.252817,-0.040094,-3.672334,9.902888],[5.966701,6.863139,-9.397502,-9.231632,1.377354,-6.586364,-6.979227,3.973642,4.739301,4.731644,-8.598079,6.806143,-5.251751,8.635570,7.835622,-8.113495],[3.388713,-0.255630,-3.339409,-7.695035,-2.616553,5.263656,1.570636,8.356563,6.092045,-5.958396,-9.887676,3.558101,5.905435,2.946822,6.197215,5.471064],[-1.651534,7.776370,-0.399426,-6.052910,-2.209897,4.898939,-9.874994,0.722972,-2.488835,-4.730439,9.375930,2.983116,-5.503371,7.309725,-9.034900,-9.631129],[-3.778430,7.589089,5.509590,1.549717,-1.276580,4.334931,5.375043,-9.556776,-9.741616,-8.920103,-2.950139,9.114401,6.190857,-1.712914,2.627748,-4.137135],[-4.496347,1.886953,8.661937,-9.165765,8.479691,8.296437,-6.658111,-9.825410,-4.654746,-3.437317,-0.987362,9.889933,-6.802622,6.842779,-7.640852,-4.770117],[-0.350455,-2.637159,-0.256409,3.094710,9.178260,3.083012,-5.125278,-3.210236,-9.644730,6.484034,-7.340263,-7.854029,-4.237357,3.084890,2.030230,-6.922467],[9.029212,-3.056944,1.844750,0.494785,-6.697078,-7.037443,3.558047,6.589117,5.209377,-0.281571,0.139643,-6.427588,4.060807,-3.720254,5.528851,-2.921777],[0.753331,7.524837,-6.589574,2.388911,6.481181,3.709667,0.266237,-3.269279,0.284241,-9.686820,-2.733499,-3.553830,-6.831148,-3.226800,0.571294,-5.805401],[9.024486,5.142349,4.433118,-4.441163,-0.201905,6.425426,-4.263509,-7.999467,-5.576950,-8.603377,-4.331258,-6.088076,0.778321,-5.417376,3.789234,-7.775555]],[[-0.939955,-3.930567,-8.989676,-8.004052,-1.210699,-7.186742,-5.371209,-3.256376,-2.564819,4.849675,-2.958059,4.376228,-8.738841,-4.369671,8.849286,9.817120],[6.039693,3.286175,-7.647316,-3.189703,4.589470,-3.521292,-0.842261,-6.209312,6.734906,5.926777,-6.601193,-3.237058,-5.751612,-2.361836,1.225379,-6.526833],[-3.253860,-1.542472,2.056000,6.093759,-6.988207,-5.999582,4.647925,3.673825,-7.148940,-8.506233,5.944884,-7.237774,0.600373,7.635561,-9.965068,8.849611],[5.439056,2.368820,9.739315,1.099275,-5.942643,-4.957105,5.082711,6.002417,-6.053898,-7.866161,-1.006246,6.959481,4.363079,-9.584591,-3.807656,-0.843868],[8.680884,0.007350,8.858534,-7.362741,-2.945256,8.057765,-5.782411,-5.081600,-4.533552,4.417151,9.199118,-1.760538,6.842077,-6.612982,7.634118,-1.381494],[-2.467817,7.493400,-0.490761,-8.735845,-2.833571,-4.516159,-8.549737,5.498953,1.014203,4.035900,6.955478,-5.053318,-2.001218,6.945692,2.363831,-8.466813],[6.846493,9.806446,-1.402380,-1.173414,6.026365,3.740752,6.430417,-3.677247,4.346870,7.501546,-7.761797,-4.832628,-2.093894,-2.297781,1.749098,-0.708721],[-4.252394,-9.239749,9.121280,7.627651,-1.113543,-3.086433,1.971283,-3.576608,-6.419677,4.868491,0.838201,1.519894,3.147095,-8.782936,-8.673736,2.418810],[-0.843802,1.932548,1.773905,9.144535,-8.406543,6.885465,-4.643324,-1.902285,-5.111487,6.740073,5.178392,8.310541,-4.103221,4.477892,-9.240268,2.291454],[5.872556,-5.648164,4.815799,-9.775761,5.663575,6.567539,4.356185,-0.932898,-7.049837,-1.178500,-4.462416,-9.404967,2.074603,-3.536116,5.683205,-1.593884],[-1.735484,4.664493,-3.654136,8.587351,6.437516,-4.688188,1.693805,-6.512657,-0.408028,6.791625,7.086188,-1.359962,-1.469893,-2.915384,-5.682264,-8.497125],[-0.556899,4.799990,9.066560,-6.600497,8.206837,3.391162,-4.645702,-2.118305,-4.911936,1.681451,-3.946894,-3.226917,-3.730929,-9.029529,-6.145514,-6.281834],[-4.745031,3.844249,-4.769050,-8.387393,-3.488973,-3.083222,-1.136987,-6.896508,3.552353,-3.315992,7.970354,-1.687284,5.767973,-0.062373,2.090776,-1.135461],[-5.135130,4.073897,-3.263536,2.076874,7.779775,4.604758,-4.029712,9.879437,3.088276,5.403946,-6.700489,5.770696,-7.185266,3.413100,-8.088811,8.702592]]], dtype = "float64")#candidate|8736|(15, 14, 16)|const|float64
uop_8737 = relay.sigmoid(const_8736.astype('float64')) # shape=(15, 14, 16)
func_5237_call = mod.get_global_var('func_5237')
func_5241_call = mutated_mod.get_global_var('func_5241')
const_8765 = relay.const([-2.376817,-8.749133,4.623292,7.472635,-5.939033,1.866933,9.814886,2.325979,0.389512,3.878242,4.535459,-9.830752,8.930703,-9.476182,-8.066637,-1.447387,-8.921129,-3.773460,0.595154,-3.861317,-2.030942,7.549453,-9.428710,5.704496,-3.170335,-2.950265,4.894614,-2.868549,-2.894329,7.585436,-8.156489,-2.010913,-3.260283,-0.801344,-0.026127,9.911236,-9.788163,5.899364,3.943942,4.145068,3.163727,3.471612,-8.332234,4.172200,8.832262,-5.142417,3.725711,-7.758985,8.696528,2.084796,2.851809,-9.541153,5.278970,-7.936189,9.864178,-2.101660,-2.689635,1.447673,-6.466777,7.322095,6.257310,2.954873,-1.611948,-6.005047,8.984841,-7.597459,0.006893,-1.342692,-6.894840,2.726486,-1.468997,-4.271193,-5.658593,-0.698656,2.357696,-9.246694,8.450281,0.550197,7.717914,0.929018,2.869774,-8.732536,-2.491307,9.906086,7.247992,-9.351460,-6.817651,-7.998991,-1.391993,7.686791,8.424879,-3.281681,-2.142552,-5.470903,-9.588914,-2.799055,7.171835,-5.413877,7.271617,-6.765586,-0.146629,1.405148,-7.551851,1.682007,-4.763451,-5.542062,-1.879806,-3.189647,-2.657873,8.014265,-4.193021,-5.847644,-8.610740,6.250277,-6.567166,-3.784590,2.119421,1.841748,-0.854408,-5.684887,-0.649088,-4.870290,-8.146031,0.673775,8.717057,3.619766,-3.042443,-7.046164,-2.535159,-9.301633,8.048432,8.685654,-4.175214,-0.309622,-9.399475,2.298444,5.854599,8.514667,-1.939256,-5.001584,9.283651,5.821291,1.872044,-3.970192,-0.308577,-5.352181,-6.614089,-9.130508,0.351758,4.719381,5.333313,-8.850764,-7.368002,-1.237180,-3.426103,-7.811478,-4.747386,3.449644,7.608402,8.429347,-1.362889,-1.313778,-6.378317,-7.621047,9.563761,1.620586,-1.631361,-7.912156,4.258845,-0.409300,1.301804,-4.161613,-7.687182,-3.994651,1.450354,1.544372,3.976003,-5.167912,-3.698567,9.566244,-3.495732,1.835494,-4.812717,6.539287,-5.853264,0.270277,6.876635,-1.331202,5.066769,1.377400,-9.851057,2.023683,-7.723190,8.627702,-7.248419,8.119005,6.462653,4.870694,-3.164037,-8.816963,-4.600365,-8.083562,3.255194,-5.073928,8.923435,1.439449,-8.658357,-3.291100,8.173219,-0.541731,-1.629964,-4.141180,-9.727129,-3.470928,9.130995,5.460859,-2.407460,0.356475,-0.195500,0.386218,2.429596,-2.030676,3.811145,3.777352,-6.323311,-3.702322,4.168857,4.535395,-1.893087,-6.132334,-8.284487,-1.707919,2.556205,-7.157517,5.179586,-7.442924,-6.845390,-4.306141,1.606637,-0.101372,9.551202,-8.343938,-3.961031,-8.817807,4.821777,-5.867678,8.192425,4.795716,-6.107429,-4.161263,0.221839,-2.392493,8.091986,8.293470,-2.896806,6.418509,-1.893388,-7.344751,6.386293,4.608414,5.962724,-7.582943,-9.514060,-6.592171,4.750996,-2.835411,5.515534,-5.682215,-4.019537,7.114126,-4.510297,-7.743084,-5.365397,3.658836,-3.008225,3.416237,-7.482660,-1.600347,1.601208,6.497889,9.201079,7.486096,-0.853443,-2.343931,3.114189,-2.811893,-5.683316,-1.202925,5.000284,-3.832760,-1.858734,-7.857095,3.167206,-9.615093,0.011730,7.124293,4.108591,7.737104,-8.612303,-0.511353,3.430201,5.763377,-1.968696,-2.953371,2.738584,1.454466,-5.497578,-1.144184,-9.413338,-9.954896,-9.777662,-3.134737,-9.043030,-2.018048,5.159334,-1.709839,5.511896,-8.386030,1.243349,1.569723,2.921165,1.467787,-9.039644,1.269336,-4.970243,-9.389436,0.242246,-6.643827,-6.031242,5.268569,-1.540626,-9.509696,9.642279,4.645198,-0.119207,-1.884828,8.731751,2.198768,3.989018,-0.790110,1.345106,5.838776,3.796222,-8.140149,-1.419724,-5.453134,-6.750518,-1.616981,6.662543,-1.336185,-9.030725,-9.239010,-9.823861,-7.976391,-8.427715,8.942305,1.789844,4.065614,2.376363,3.957415,6.832930,-2.302807,-5.999813,4.115284,-4.809347,0.510223,-3.141633,-5.221890,-0.962906,8.206505,4.704137,-9.621012,5.858415,9.861142,1.787951,-3.209520,-9.989241,-3.708175,1.359584,4.328201,-1.736025,-7.114672,-4.550135,1.686613,7.562403,7.944970,-1.809946,-3.015860,5.978124,-3.547686,-8.085560,9.262884,6.473163,8.265770,-0.517587,-7.100659,-9.906234,3.141398,3.439786,5.448735,0.961734,0.281012,-7.171309,0.183231,5.355048,-1.662570,-5.852637,8.679429,-6.312809,-4.647184,1.246002,1.043563,-7.682417,-7.126878,3.367694,-4.788369,-9.131793,-5.285717,8.182171,2.118122,9.440996,-7.640649,1.451607,5.959632,1.090618,-3.784719,-1.127960,-2.437408,4.113921,-5.425743,-0.957457,9.797587,-0.232299,6.000332,-7.228304,1.140293,-8.862171,3.009368,9.423461,6.319991,0.106390,3.844099,1.671927,-4.952236,-3.232967,-4.554693,9.673056,4.919905,3.794655,-4.336412,3.160317,-2.976110,7.027369,-8.993341,-0.180732,2.825278,6.628287,-7.041146,-4.036117,7.281111,5.226753,6.568488,-4.440298,9.207674,9.665240,1.079631,7.586746,4.281904,6.260030,1.590790,9.763405,4.923154,4.058198,-3.706672,-0.603578,-8.489710,3.709003,8.410913,-5.974354,1.076930,-5.085146,2.495851,-7.837922,-8.098947,-7.612280,-6.914264,1.750186,-7.335904,2.534990,-8.026011,2.128320,5.405119,3.733377,-1.265950,1.249245,5.874230,-1.322538,3.193349,6.861148,-6.979311,3.991119,-2.576795,9.902802,0.539371,7.972255,-4.053198,-0.247519,5.577550,-6.690009,-7.989075,4.077264,9.148703,-5.037985,4.140796,4.095054,2.470644,-0.803159,6.527848,-0.725807,-5.096087,-7.714481,-1.562235,-3.288224,-7.570965,3.347447,1.508823,4.613195,-7.225936,7.073352,3.456490,-0.178377,-0.426860,-4.443361,-2.070732,-3.042352,-0.498368,5.981814,-5.236685,-2.539631,1.051052,3.603543,1.269921,9.579986,-2.252568,5.208704,4.410465,-2.737797,-1.009937,8.137053,3.290741,9.006634,3.987286,4.564120,-7.681415,-5.455311,8.366600,-9.336011,-1.043074,5.869344,8.734661,0.635340,-7.959219,-2.257612,-6.473270,0.285373,6.827528,-7.109031,6.093617,-4.946535,3.309704,9.221555,-5.668323,5.669783,-6.114825,1.698314,8.603101,-4.292230,-9.584977,-2.220011,7.101051,1.703716,-2.236769,9.130792,5.891525,-4.373257,-7.978218,1.924227,3.415179,-0.017275,2.770374,0.107253,-5.509916,-1.088024,-4.877030,1.619175,-3.305961,9.752367,-6.645105,1.120055,-9.143976,8.651213,9.593964,-5.347073,2.899783,-9.660998,-4.374597,-4.273131,-3.235349,-5.511801,1.717601,-0.547055,-1.641869,8.166511,-3.681209,-9.886079,-5.548571,9.412253,-5.913641,-9.220822,-3.180583,9.873206,0.567460,3.877296,-3.375491,-3.302341,-4.561337,-8.406212,-4.637008,5.956610,-9.197903,-4.790905,9.244040,-7.631075,4.758089,-5.184119,-6.991092,-5.842581,0.733842,6.620313,4.011589,9.279994,-8.459653,-5.824456,5.348481,9.535196,7.902173,-2.596708,9.880943,4.158024,-2.568665,3.760069,9.625191,-8.489253,4.228921,-6.116676,5.193463,-5.948329,2.733382,2.551311,5.590817,-3.441525,-1.638046,9.362245,-0.491757,-5.026855,-1.170037,7.557828,0.791371,-1.775546,2.678867,-2.619215,8.078779,-6.229676,1.952104,4.758947,-1.620581,-8.980581,9.894839,-5.524458,-4.541195,-0.426964,-3.399331,-5.562547,7.523397,0.727739,8.803070,2.718060,-1.404252,-8.289562,0.779792,-5.522486,7.096748,-2.219748,1.380932,-3.609944,4.474120,-7.441191,-7.928347,-2.515548,-6.151666,-8.149913,3.962175,-4.539456,1.105334,8.971787,-7.753148,-5.502960,-1.143963,-2.268993,-3.438408,3.196394,7.059201,9.923054,-5.432818,9.585195,2.499451,0.923700,-0.048549,7.993069,-7.338075,-7.273245,-7.283881,-9.901643,-8.205856,-7.003812,-5.564891,-0.156681,-1.210523,9.468242,3.746181,4.901094,3.726408,2.358382,-1.235614,2.856176,-3.642735,9.942712,5.862344,4.547413,8.872267,-3.385947,-5.526929,9.978414,-3.843606,4.933954,-3.544236,6.447436,4.682059,5.913094,0.297381,-9.239173,-8.852213,-4.890835,-6.659737,7.424694,-7.450651,8.634158,3.361451,1.758113,6.427318,7.569699,3.055148,3.119851,-0.342607,-8.196995,-3.817243,2.125623,-0.665238,-4.799234,8.688070,-3.476610,1.000502,-6.845111,9.763181,-9.164657,4.404850,-1.357081,-7.865612,0.494737,-4.903462], dtype = "float64")#candidate|8765|(780,)|const|float64
call_8764 = relay.TupleGetItem(func_5237_call(relay.reshape(const_8765.astype('float64'), [6, 10, 13]), relay.reshape(const_8765.astype('float64'), [6, 10, 13]), relay.reshape(const_8765.astype('float64'), [6, 10, 13]), ), 2)
call_8766 = relay.TupleGetItem(func_5241_call(relay.reshape(const_8765.astype('float64'), [6, 10, 13]), relay.reshape(const_8765.astype('float64'), [6, 10, 13]), relay.reshape(const_8765.astype('float64'), [6, 10, 13]), ), 2)
func_3199_call = mod.get_global_var('func_3199')
func_3203_call = mutated_mod.get_global_var('func_3203')
var_8776 = relay.var("var_8776", dtype = "bool", shape = (24, 120))#candidate|8776|(24, 120)|var|bool
call_8775 = relay.TupleGetItem(func_3199_call(relay.reshape(var_8776.astype('bool'), [15, 16, 12]), relay.reshape(var_8776.astype('bool'), [15, 16, 12]), ), 0)
call_8777 = relay.TupleGetItem(func_3203_call(relay.reshape(var_8776.astype('bool'), [15, 16, 12]), relay.reshape(var_8776.astype('bool'), [15, 16, 12]), ), 0)
bop_8780 = relay.equal(var_8776.astype('bool'), relay.reshape(call_8775.astype('bool'), relay.shape_of(var_8776))) # shape=(24, 120)
bop_8783 = relay.equal(var_8776.astype('bool'), relay.reshape(call_8777.astype('bool'), relay.shape_of(var_8776))) # shape=(24, 120)
output = relay.Tuple([uop_8737,call_8764,const_8765,bop_8780,])
output2 = relay.Tuple([uop_8737,call_8766,const_8765,bop_8783,])
func_8814 = relay.Function([var_8776,], output)
mod['func_8814'] = func_8814
mod = relay.transform.InferType()(mod)
var_8815 = relay.var("var_8815", dtype = "bool", shape = (24, 120))#candidate|8815|(24, 120)|var|bool
output = func_8814(var_8815)
func_8816 = relay.Function([var_8815], output)
mutated_mod['func_8816'] = func_8816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8654_call = mod.get_global_var('func_8654')
func_8656_call = mutated_mod.get_global_var('func_8656')
call_8841 = relay.TupleGetItem(func_8654_call(), 0)
call_8842 = relay.TupleGetItem(func_8656_call(), 0)
uop_8852 = relay.asinh(call_8841.astype('float32')) # shape=(3, 10, 4)
uop_8854 = relay.asinh(call_8842.astype('float32')) # shape=(3, 10, 4)
output = uop_8852
output2 = uop_8854
func_8859 = relay.Function([], output)
mod['func_8859'] = func_8859
mod = relay.transform.InferType()(mod)
mutated_mod['func_8859'] = func_8859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8859_call = mutated_mod.get_global_var('func_8859')
call_8860 = func_8859_call()
output = call_8860
func_8861 = relay.Function([], output)
mutated_mod['func_8861'] = func_8861
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8873 = relay.var("var_8873", dtype = "int32", shape = ())#candidate|8873|()|var|int32
const_8874 = relay.const([[[-6,5,8,7,-6,-6,8,-6,7,3,3,-2,-3]],[[-3,5,-1,6,2,-1,-7,2,3,-9,-8,7,2]],[[3,8,5,5,7,2,9,7,-5,-8,8,-8,2]],[[-5,5,8,-1,8,-2,-7,-8,-10,5,8,4,8]],[[9,10,9,-10,-3,4,9,-10,-4,7,6,-8,7]],[[-10,2,-2,3,4,-7,6,-5,2,4,-4,-8,8]],[[-10,-6,2,9,-5,7,-5,10,7,10,8,-7,-5]],[[-1,-2,1,-7,1,5,5,3,8,5,7,-5,6]],[[-10,-8,-6,10,-1,-1,7,8,-2,-4,9,2,-1]],[[7,-8,3,-8,5,-1,-1,7,1,-4,10,5,10]],[[5,7,-10,3,-9,-8,-7,-10,-1,3,3,-3,-4]],[[-2,6,-1,1,-6,4,1,-6,-10,-1,5,3,1]],[[1,-4,7,-2,-5,4,2,-9,9,-10,8,-2,-2]],[[10,-5,3,4,-1,-1,-8,7,-6,-1,-5,-4,9]],[[-7,-2,8,-4,4,-8,-3,1,-3,2,-10,1,3]],[[6,-3,1,6,8,-5,8,10,-8,-7,8,-10,4]]], dtype = "int32")#candidate|8874|(16, 1, 13)|const|int32
bop_8875 = relay.less_equal(var_8873.astype('bool'), const_8874.astype('bool')) # shape=(16, 1, 13)
output = relay.Tuple([bop_8875,])
output2 = relay.Tuple([bop_8875,])
func_8880 = relay.Function([var_8873,], output)
mod['func_8880'] = func_8880
mod = relay.transform.InferType()(mod)
mutated_mod['func_8880'] = func_8880
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8881 = relay.var("var_8881", dtype = "int32", shape = ())#candidate|8881|()|var|int32
func_8880_call = mutated_mod.get_global_var('func_8880')
call_8882 = func_8880_call(var_8881)
output = call_8882
func_8883 = relay.Function([var_8881], output)
mutated_mod['func_8883'] = func_8883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8654_call = mod.get_global_var('func_8654')
func_8656_call = mutated_mod.get_global_var('func_8656')
call_8888 = relay.TupleGetItem(func_8654_call(), 0)
call_8889 = relay.TupleGetItem(func_8656_call(), 0)
output = relay.Tuple([call_8888,])
output2 = relay.Tuple([call_8889,])
func_8896 = relay.Function([], output)
mod['func_8896'] = func_8896
mod = relay.transform.InferType()(mod)
output = func_8896()
func_8897 = relay.Function([], output)
mutated_mod['func_8897'] = func_8897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8654_call = mod.get_global_var('func_8654')
func_8656_call = mutated_mod.get_global_var('func_8656')
call_8916 = relay.TupleGetItem(func_8654_call(), 0)
call_8917 = relay.TupleGetItem(func_8656_call(), 0)
output = relay.Tuple([call_8916,])
output2 = relay.Tuple([call_8917,])
func_8918 = relay.Function([], output)
mod['func_8918'] = func_8918
mod = relay.transform.InferType()(mod)
output = func_8918()
func_8919 = relay.Function([], output)
mutated_mod['func_8919'] = func_8919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8918_call = mod.get_global_var('func_8918')
func_8919_call = mutated_mod.get_global_var('func_8919')
call_8920 = relay.TupleGetItem(func_8918_call(), 0)
call_8921 = relay.TupleGetItem(func_8919_call(), 0)
uop_8929 = relay.sin(call_8920.astype('float64')) # shape=(3, 10, 4)
uop_8931 = relay.sin(call_8921.astype('float64')) # shape=(3, 10, 4)
bop_8933 = relay.add(uop_8929.astype('uint32'), relay.reshape(call_8920.astype('uint32'), relay.shape_of(uop_8929))) # shape=(3, 10, 4)
bop_8936 = relay.add(uop_8931.astype('uint32'), relay.reshape(call_8921.astype('uint32'), relay.shape_of(uop_8931))) # shape=(3, 10, 4)
uop_8946 = relay.log2(call_8920.astype('float32')) # shape=(3, 10, 4)
uop_8948 = relay.log2(call_8921.astype('float32')) # shape=(3, 10, 4)
func_8670_call = mod.get_global_var('func_8670')
func_8671_call = mutated_mod.get_global_var('func_8671')
call_8949 = relay.TupleGetItem(func_8670_call(), 0)
call_8950 = relay.TupleGetItem(func_8671_call(), 0)
output = relay.Tuple([bop_8933,uop_8946,call_8949,])
output2 = relay.Tuple([bop_8936,uop_8948,call_8950,])
func_8956 = relay.Function([], output)
mod['func_8956'] = func_8956
mod = relay.transform.InferType()(mod)
output = func_8956()
func_8957 = relay.Function([], output)
mutated_mod['func_8957'] = func_8957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8654_call = mod.get_global_var('func_8654')
func_8656_call = mutated_mod.get_global_var('func_8656')
call_9035 = relay.TupleGetItem(func_8654_call(), 0)
call_9036 = relay.TupleGetItem(func_8656_call(), 0)
output = relay.Tuple([call_9035,])
output2 = relay.Tuple([call_9036,])
func_9050 = relay.Function([], output)
mod['func_9050'] = func_9050
mod = relay.transform.InferType()(mod)
mutated_mod['func_9050'] = func_9050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9050_call = mutated_mod.get_global_var('func_9050')
call_9051 = func_9050_call()
output = call_9051
func_9052 = relay.Function([], output)
mutated_mod['func_9052'] = func_9052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8896_call = mod.get_global_var('func_8896')
func_8897_call = mutated_mod.get_global_var('func_8897')
call_9064 = relay.TupleGetItem(func_8896_call(), 0)
call_9065 = relay.TupleGetItem(func_8897_call(), 0)
const_9082 = relay.const([[[-5.221353,7.328132,4.696912,7.641778],[-3.767523,-3.984847,-9.540644,-8.845147],[-0.556640,4.642243,-6.709467,5.407573],[2.595527,-6.365340,-8.001141,-0.599227],[6.563765,-1.073766,-4.881831,-4.429766],[-4.476699,-1.004524,4.480707,-4.041082],[8.142197,-9.842730,9.896194,4.483700],[-9.677898,-8.132041,-9.055829,6.686856],[-1.991214,-3.926044,5.511107,6.368501],[-1.451190,-8.419148,-1.237927,0.879144]],[[-6.843687,7.782949,7.902123,-7.886584],[-3.819382,-0.169316,0.959326,-1.052145],[2.804028,7.123274,3.391367,-2.012353],[-7.406488,-0.226453,7.066534,-4.640129],[5.154291,6.743052,-8.097941,3.456092],[-5.881285,0.375937,7.130561,6.337137],[2.512745,-5.118263,9.286265,-9.758433],[5.794829,-0.418340,-4.156517,6.073706],[-9.895601,-2.480607,-9.017455,6.315343],[6.615156,8.916921,-3.159124,1.762978]],[[4.363946,4.614418,1.421164,-6.737884],[-5.872488,7.916718,9.565515,-8.649484],[-5.957156,-4.691711,-9.643140,9.693269],[6.376847,3.813038,-8.341090,3.187088],[-7.172265,-9.224023,-3.363403,-8.020370],[-2.578954,9.137193,-7.047481,6.207572],[-3.181588,-8.136826,-8.169408,-0.320457],[-5.361203,0.050237,-3.311171,-6.501716],[0.586107,-7.570504,6.594994,-3.923058],[6.009692,2.918148,-7.638245,-2.120769]]], dtype = "float32")#candidate|9082|(3, 10, 4)|const|float32
bop_9083 = relay.bitwise_and(call_9064.astype('uint32'), relay.reshape(const_9082.astype('uint32'), relay.shape_of(call_9064))) # shape=(3, 10, 4)
bop_9086 = relay.bitwise_and(call_9065.astype('uint32'), relay.reshape(const_9082.astype('uint32'), relay.shape_of(call_9065))) # shape=(3, 10, 4)
func_6610_call = mod.get_global_var('func_6610')
func_6615_call = mutated_mod.get_global_var('func_6615')
const_9106 = relay.const([2.809987,-3.116636,1.903096,-1.145240,7.211246,-3.149604,9.121572,-1.264853,-9.056913,3.436642,1.440606,4.768511,8.827127,-4.686200,7.449157,-4.915503,-1.599117,-3.153102,7.996385,2.212285,-6.878467,6.590126,6.840019,9.139506,-4.482424,2.731359,7.778906,-1.377696,-4.217462,2.568475,0.892348,4.558156,-5.057821,0.435319,-4.039012,-4.394877,-3.777904,-9.233142,-1.768065,-6.015113,5.215641,-7.227659,-0.904307,9.163031,0.965928,-7.885355,-4.312627,-8.658488,1.872336,4.857792,-4.604690,-2.528887,0.490687,-9.480384,3.707560,9.973152,-4.169673,9.796924,-3.193554,-1.566420,-2.686454,-5.080579,-2.781617,7.764683,7.567948,2.466525,9.256227,-6.693689,-9.256197,-5.134292,4.995385,-2.286284,2.573961,0.111548,7.560295,6.839232,-3.185085,-3.796384,-5.571651,7.990189,-4.208740,-2.266847,-0.595363,7.976675,4.835877,-3.822791,9.649208,5.321336,3.100655,-3.275521,-8.510446,-9.145413,-6.065064,5.046028,-0.782593,-5.768081,4.174272,-1.336892,8.014355,-8.179698,1.040008,-1.904032,-1.322141,7.424740,-9.820234,-2.572518,0.906937,6.615045,3.653955,2.859449,8.581818,9.342323,-4.883786,3.082067,1.749524,-2.351786,-3.273271,9.266956,-6.746604,-6.623631,-9.686568,9.486614,9.775073,3.024980,2.548282,1.215781,-6.511022,0.069476,-5.305746,3.213977,3.605251,5.155481,-1.008543,-8.757335,7.356520,4.985139,0.320445,-2.350411,9.494599,2.385997,-4.612698,-3.213479,0.146223,4.300204,-1.122628,3.034237,-4.102680,4.155363,4.248034,-9.571249,8.516178,0.912143,-2.866533,8.913298,6.858645,3.808070,3.762489,8.772876,1.456201,6.920602,0.486425,9.948176,9.893566,-5.266503,-1.120702,1.636161,-7.541910,-1.192272,-7.455946,-2.528906,4.701204,1.708731,9.928015,2.630945,2.825170,-2.479832,-3.754113,2.275536,4.204298,-0.762138,-7.247220,8.645751,-6.758940,9.660974,2.738770,7.031873,0.472649,-8.145470,9.604439,-7.412734,-8.169393,6.194603,-8.489799,-8.272239,-4.655194], dtype = "float32")#candidate|9106|(195,)|const|float32
var_9107 = relay.var("var_9107", dtype = "float64", shape = (14, 7))#candidate|9107|(14, 7)|var|float64
const_9108 = relay.const([[-3,-7,-1,5,-6,-2,-4,-9,-5],[-6,-1,-1,-7,1,-3,2,-4,-10],[-6,6,6,1,10,-6,6,-7,-8],[-3,5,4,9,-6,7,-7,-3,-4],[-2,10,4,9,5,-6,-6,1,-3],[9,-2,-4,-3,1,5,-6,8,-8],[-9,4,-5,-8,-1,2,3,-7,-8],[-4,-3,6,8,-4,-7,1,-1,1],[-9,-7,-9,4,2,-7,-4,1,3],[7,9,-10,-6,-2,7,-3,4,7],[-8,-5,4,-1,2,8,-9,-9,-6]], dtype = "uint64")#candidate|9108|(11, 9)|const|uint64
const_9109 = relay.const([-1,7,4,-6,-9,-4,-6,9,3,-10,4,-4,-3,-3,1,9,9,-10,7,3,-9,-6,8,-6,-7,-7,6,-4,-6,6,-7,9,-4,-8,7,8,8,2,7,-6,6,-7,-7,-9,-10,-10,1,-10,2,-5,-9,4,5,1,4,8,3,2,6,4,-6,2,6,2,2,-7,-8,-8,7,-7,-1,10,-10,-5,-4,4,-5,-9,2,9,9,-5,-6,-2,-6,-3,5,10,-10,4,6,-5,-8,-2,-8,-2,-8,7,-4,9,9,-7,-9,-10,6,2,3,2,4,2,8,10,-3,-2,-8,-6,-4,1,-4,10,-6,1,-10,3,-9,-5,-8,-5,-1,-7,7,-6,-10,4,-10,1,7,-7,5,10,-4,-2,-9,3,-3,9,-6,3,-3,-10,-3,1,3,6,10,3,-10,-6,4,-9,2,9,2,-5,-10,10,-8,-5,10,10,-9,6,9,-8,-5,-10,-4,6,2,1,-10,9,-3,-8,6,-5,-2,4,-4,4,9,6,-6,9,6,2,-2,-4,3,-10,-8,4,5,-1,2,8,-3,5,9,-7,-6,2,10,-5,-6,6,9,5,-7,4,-6,-1,9,6,9,-4,4,3,2,9,-2,-3,4,-6,8,2,-6,-1,-8,4,2,-4,-4,10,-4,5,5,-6,7,2,4,9,7,-5,-9,-4,-9,-7,7,10,-8,7,2,-2,7,-6,6,-1,5,9,6,-7,4,-9,-3,2,3,-5,-3,6,9,-1,7,-9,9,-10,-3,-2,-1,10,10,-7,1,10,9,6,-9,-4,-10,-3,-10,7,-8,-2,4,4,4,-8,3,1,-3,-1,-5,-1,7,7,4,3,-5,-2,-7,-4,2,-5,10,-7,4,-5,3,5,7,7,6,-5,7,1,-8,6,-4,4,-9,-7,1,2,-8,-3,-9,-8,2,-5,3,-4,10,8,5,10,-3,6,10,7,7,5,-10,-8,-8,-5,2,1,-1,7,-3,9,3,1,5,1,7,7,-1,-4,-1,-2,-8,4,6,-3,-6,6,-10,-3,4,-9,10,-10,3,1,-1,-5,-10,8,10,-4,6,6,-6,10,-2,2,-5,2,6,-9,8,6,5,-3,-7,-1,-4,8,-5,9,7,9,4,1,-5,-9,-6,-3,10,6,-1,-8,-6,-7,7,10,9,-8,-1,5,1,10,-8,10,9,3,5,-6,-10,-3,1,10,1,3,7,7,-1,-7,2,-4,5,10,9,-2,1,3,-9,1,1,1,3,9,-6,2,-6,-8,2,-3,-6,-9,2,-10,-6,-10,-9,8,10,-8,4,4,-4,10,-2,8,-10,6,10,-3,-9,5,8,1,-1,-6,-9,-2,5,-9,-5,-5,-4,6,-9,10,6,9,1,1,1,6,10,-2,-1,9,8,10,-9,5,9,-7,5,8,5,7,-7,-5,10,-1,8,7,-6,-7,-7,-2,-10,-1,4,-10,-9,7,7,-4,-7,7,4,1,-5,6,1,-8,6,7,-9,3,1,5,-1,-8,-5,-4,-1,1,-5,7,5,-8,-5,3,1,1,5,3,-6,-4,6,-9,5,4,-9,8,4,-4,-1,2,-2,-8,-8,1,-2,4,5,6,5,9,-10,-7,3,3,10,-7,-8,-1,8,10,-9,9,-10,-1,4,7,7,8,5,3,7,-10,-7,-1,3,4,-6,3,7,-10,-5,4,-3,9,6,-5,-4,-7,-4,-5,-10,8,-1,3,-6,-8,2,-3,6,2,6,4,2,10,-10,6,5,7,6,3,-2,5,4,-8,-9,-2,-10,4,8,10,10,-7,10,10,-3,-10,-5,1,-2,-2,1,-8,2,3,-6,7,8,1,-7,4,4,-9,10,8,8,2,4,8,-2,8,-3,5,9,9,-7,-10,-8,9,6,9,7,-3,3,-9,-4,4,1,1,5,10,5,-4,8,1,3,9,-3,-5,6,9,10,-9,3,3,-2,-2,2,9,3,3,10,-8,-6,9,-6,4,-4,-8,-5,-4,5,-3,6,-6,-2,5,-3,-6,3,-1,-6,6,9,6,7,2,-8,1,-7,-2,-8,-4,7,1,7,-10,8,10,4,-5,6,4,-2,-9,-4,1,-8,-2,-7,7,-5,-5,-7,-2,1,-1,-7,-4,-2,10,-3,-5,-8,-8,-1,6,-5,1,-8,-2,-4,-7,-10,10,3,7,2,9,-10,-4,-5,9,3,-2,6,-1,1,-9,-8,-4,-10,-7,2,4], dtype = "int16")#candidate|9109|(840,)|const|int16
call_9105 = relay.TupleGetItem(func_6610_call(relay.reshape(const_9106.astype('float32'), [13, 3, 5]), relay.reshape(var_9107.astype('float64'), [98,]), relay.reshape(const_9108.astype('uint64'), [99,]), relay.reshape(const_9109.astype('int16'), [840,]), ), 1)
call_9110 = relay.TupleGetItem(func_6615_call(relay.reshape(const_9106.astype('float32'), [13, 3, 5]), relay.reshape(var_9107.astype('float64'), [98,]), relay.reshape(const_9108.astype('uint64'), [99,]), relay.reshape(const_9109.astype('int16'), [840,]), ), 1)
func_262_call = mod.get_global_var('func_262')
func_265_call = mutated_mod.get_global_var('func_265')
var_9112 = relay.var("var_9112", dtype = "float64", shape = (352,))#candidate|9112|(352,)|var|float64
call_9111 = relay.TupleGetItem(func_262_call(relay.reshape(var_9112.astype('float64'), [4, 8, 11])), 1)
call_9113 = relay.TupleGetItem(func_265_call(relay.reshape(var_9112.astype('float64'), [4, 8, 11])), 1)
output = relay.Tuple([bop_9083,call_9105,const_9106,var_9107,const_9108,const_9109,call_9111,var_9112,])
output2 = relay.Tuple([bop_9086,call_9110,const_9106,var_9107,const_9108,const_9109,call_9113,var_9112,])
func_9115 = relay.Function([var_9107,var_9112,], output)
mod['func_9115'] = func_9115
mod = relay.transform.InferType()(mod)
mutated_mod['func_9115'] = func_9115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9115_call = mutated_mod.get_global_var('func_9115')
var_9117 = relay.var("var_9117", dtype = "float64", shape = (14, 7))#candidate|9117|(14, 7)|var|float64
var_9118 = relay.var("var_9118", dtype = "float64", shape = (352,))#candidate|9118|(352,)|var|float64
call_9116 = func_9115_call(var_9117,var_9118,)
output = call_9116
func_9119 = relay.Function([var_9117,var_9118,], output)
mutated_mod['func_9119'] = func_9119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8859_call = mod.get_global_var('func_8859')
func_8861_call = mutated_mod.get_global_var('func_8861')
call_9141 = func_8859_call()
call_9142 = func_8859_call()
var_9150 = relay.var("var_9150", dtype = "float32", shape = (3, 10, 4))#candidate|9150|(3, 10, 4)|var|float32
bop_9151 = relay.mod(call_9141.astype('float32'), relay.reshape(var_9150.astype('float32'), relay.shape_of(call_9141))) # shape=(3, 10, 4)
bop_9154 = relay.mod(call_9142.astype('float32'), relay.reshape(var_9150.astype('float32'), relay.shape_of(call_9142))) # shape=(3, 10, 4)
func_3669_call = mod.get_global_var('func_3669')
func_3673_call = mutated_mod.get_global_var('func_3673')
const_9173 = relay.const([[-5,-7,-4,-2,7,1,10,-8,-5,-6,-1,1,-1,-9,-10,-4,-6,6,1,4,10,5,-1,-10,-7,7,7,-8,-8,9,-7,-3,-5,7,-8,7,6,5,4,-6,-2,-1,-1,-9,-5,7,3,-7,8,6,4,-4,-7,10,4,4,-8,-7,3,8,-4,10,-4,8,10,9,-9,-4,2,10,9,2,-9,4,4,-2,6,8,10,3,-9,-3,5,-7,-1,-3,-10,-6,5,-5,-2,9,-10,10,-10,9,5,-10,-9,-9,7,-1,-6,-8],[-6,2,-1,-8,6,10,-10,7,-2,8,-7,2,-9,-1,-9,-8,3,7,-8,2,10,2,-2,5,-10,-5,-10,-1,1,3,-10,-7,10,-6,6,4,1,-7,-7,-4,5,-1,6,3,-3,-7,9,7,-7,-2,10,-2,2,-3,2,-5,7,-4,-8,-2,5,-8,-5,-8,8,9,3,-1,1,-5,1,1,-6,5,-2,-6,8,1,-9,-8,-8,6,-10,-8,1,5,-1,-2,-9,-2,-3,8,-2,-5,-10,7,1,1,2,-2,1,5,-4,-1],[-5,6,1,7,6,6,6,6,-9,-9,-4,-4,-8,9,9,7,-4,9,-8,9,-10,-2,10,-2,-2,-10,1,3,4,-5,5,4,-6,5,1,10,10,-8,9,-9,-10,-9,-4,4,8,2,1,3,1,3,-1,-3,-6,-1,-10,8,-1,3,-3,5,4,5,5,5,3,8,-1,-6,4,4,10,-4,-10,10,3,5,3,5,5,4,7,3,-6,5,-8,2,10,3,-4,-5,8,-8,-9,1,-4,3,8,9,7,-2,4,3,1,-4],[-8,-3,9,7,4,-4,-2,10,-5,4,5,-4,-1,1,-6,-6,-7,9,10,-6,4,5,-8,-8,5,2,-7,7,7,9,-6,-6,-3,9,-4,2,-4,6,3,3,-3,6,-3,-7,2,4,10,-8,-8,8,1,-10,8,-7,7,7,-6,1,7,-2,1,-6,9,-5,1,6,5,9,1,4,-5,-9,5,4,7,2,3,10,2,-8,-1,6,-2,9,10,-3,-6,8,4,5,8,-3,3,-5,-1,9,7,7,-10,-5,2,5,-2,-9],[-5,-10,-10,-3,8,-10,-1,10,4,-7,6,3,10,3,-1,10,7,-8,-3,-1,-9,10,10,9,-7,-6,-10,10,7,4,8,-3,-4,-3,3,9,-7,-3,-9,8,-9,-1,-5,9,-4,1,6,10,-6,8,9,1,-6,-2,7,3,8,4,-4,-5,-7,4,-10,-3,7,6,-9,-1,-1,2,-5,-3,10,6,2,4,-8,3,3,6,7,6,-7,3,-10,-4,-9,-9,6,-2,-5,-10,-5,2,-8,7,-8,-5,10,3,-10,-8,-5,7]], dtype = "uint8")#candidate|9173|(5, 104)|const|uint8
call_9172 = relay.TupleGetItem(func_3669_call(relay.reshape(const_9173.astype('uint8'), [5, 13, 8]), relay.reshape(const_9173.astype('uint8'), [5, 13, 8]), ), 0)
call_9174 = relay.TupleGetItem(func_3673_call(relay.reshape(const_9173.astype('uint8'), [5, 13, 8]), relay.reshape(const_9173.astype('uint8'), [5, 13, 8]), ), 0)
output = relay.Tuple([bop_9151,call_9172,const_9173,])
output2 = relay.Tuple([bop_9154,call_9174,const_9173,])
func_9180 = relay.Function([var_9150,], output)
mod['func_9180'] = func_9180
mod = relay.transform.InferType()(mod)
var_9181 = relay.var("var_9181", dtype = "float32", shape = (3, 10, 4))#candidate|9181|(3, 10, 4)|var|float32
output = func_9180(var_9181)
func_9182 = relay.Function([var_9181], output)
mutated_mod['func_9182'] = func_9182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8859_call = mod.get_global_var('func_8859')
func_8861_call = mutated_mod.get_global_var('func_8861')
call_9254 = func_8859_call()
call_9255 = func_8859_call()
output = relay.Tuple([call_9254,])
output2 = relay.Tuple([call_9255,])
func_9257 = relay.Function([], output)
mod['func_9257'] = func_9257
mod = relay.transform.InferType()(mod)
mutated_mod['func_9257'] = func_9257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9257_call = mutated_mod.get_global_var('func_9257')
call_9258 = func_9257_call()
output = call_9258
func_9259 = relay.Function([], output)
mutated_mod['func_9259'] = func_9259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8956_call = mod.get_global_var('func_8956')
func_8957_call = mutated_mod.get_global_var('func_8957')
call_9267 = relay.TupleGetItem(func_8956_call(), 0)
call_9268 = relay.TupleGetItem(func_8957_call(), 0)
output = relay.Tuple([call_9267,])
output2 = relay.Tuple([call_9268,])
func_9282 = relay.Function([], output)
mod['func_9282'] = func_9282
mod = relay.transform.InferType()(mod)
output = func_9282()
func_9283 = relay.Function([], output)
mutated_mod['func_9283'] = func_9283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8654_call = mod.get_global_var('func_8654')
func_8656_call = mutated_mod.get_global_var('func_8656')
call_9335 = relay.TupleGetItem(func_8654_call(), 0)
call_9336 = relay.TupleGetItem(func_8656_call(), 0)
func_542_call = mod.get_global_var('func_542')
func_545_call = mutated_mod.get_global_var('func_545')
const_9339 = relay.const([8,2,-4,-7,-8,-8,2,-4,4,-9,-8,8,-7,-9,9,-5,-4,6,-2,4,-7,4,8,6,3,1,-6,-7,10,-9,-6,5,-3,-9,-5,-4,-3,-4,8,3,5,-3,4,5,-7,-4,-9,6,-1,-7,-8,-9,-1,4,-2,3,2,8,7,2,6,-9,-7,8,-10,4,-6,-10,5,8,-8,5,-6,-8,4,7,7,8,-2,2,1,-1,9,6,3,1,3,-3,-9,-2,-10,5,-6,1,-9,-2,-7,7,-6,9,-7,3,8,-8,9,-2,-8,6,1,-4,10,-1,2,-2,1,8,-6,7,-8,-3,-5,-6,1,9,-9,2,-10,8,-1,8,4,1,6,-5,4,-1,-10,-2,-1,5,-5,-1,2,-6,-10,6,-2,-7,8,5,8,1,-5,3,5,5,-6,4,6,10,6,-3,6,9,9,-4,-9,9,7,1,-9,-1,-5,-3,-4,-8,-1,-9,10,-9,-1,10,-9,8,-10,-9,5,5,6,2,1,2,-10,8,-8,-1,-1,1,-9,-9,7,-9,9,-2,-4,-5,-4,-6,8,8,-3,7,9,6,-8,-6,-3,7,1,-7,6,9,-8,6,-10,-4,-3,-7,-10,10,-9,2,3,4,-9,-6,-4,4,-1,2,7,4,-6,4,-3,-3,-1,4,4,-8,10,7,1,10,6,-3,7,-4,-8,10,-1,6,7,7,-10,4,3,8,5,-7,-7,3,-8,6,5,9,-8,-9,-5,-8,-3,6,6,-9,-1,3,7,-1,-4,2,2,5,-6,-7,-1,7,9,-10,-7,-5,5,6,5,8,-6,-7,10,10,-8,-7,4,-5,-7,-8,-5,-5,-1,4,-10,-5,3,-5,-6,10,-2,5,1,8,6,-4,-9,5,10,5,-4,-4,-4,3,-4,4,-10,-3,-10,2,-9,8,5,-7,5,-5,-4,-7,8,8,2,1,2,4,-6,-7,5,2,-1,5,3,-4,-6,5,10,9,5,4,5,7,-6,-8,-4,-1,9,10,3,-9,6,7,5,-7,-6,-6,-1,-2,-1,-10,-1,9,-4,-2,-2,7,2,3,-8,8,1,4,-10,1,-9,6,9,-9,-4,-1,1,6,2,1,-2,-5,-4,7,9,7,8,-7,-7,-3,7,-7,1,-2,-5,-4,-3,-9,10,-2,5,-5,1,1,8,10,5,-4,3,1,8,-4,-4,9,-3,3,10,-1,1,10,-4,-7,-10,-9,-6,10,8,6,-10,-6,-5,1,6,-8,-1,-8,-1,-6,-5,-3,-7,-8,10,7,-8,3,1,-1,-3,5,9,1,-8,8,-3,-6,-5,-3,8,-5,4,-4,-1,3,-3,-9,4,2,-10,5,3,-4,-6,3,1,-2,5,10,-10,1,-5,-6,2,-1,10,8,9,-2,-2,-9,-7,6,9,-10,-10,2,1,2,-8,8,1,1,-7,-3,10,-2,6,-8,3,-4,9,6,-6,3,-3,3,-4,-2,-7,-2,10,5,1,3,-1,6,-4,10,-1,5,-4,8,3,1,-6,7,6,-3,5,-2,2,-8,8,-8,1,-5,-2,-2,-2,4,-5,-5,3,9,-6,4,-9,-6,-10,-8,-8,5,3,-6,10,4,-1,10,8,1,2,-2,10,8,10,1,6,-9,-3,3,-7,1,-5,-1,2,-7,-7,-3,-6,-7,4,6,5,-8,-4,-6,-9,6,-9,9,9,4,-6,3,8,10,-1,2,4,6,3,9,-10,8,-2,-1,-2,6,-3,-9,10,-5,-6,7,-8,-9,7,-5,-3,-6,-7,-5,-1,-8,-2,5,6,3,8,-5,-4,-9,2,-8,4,-9,1,3,-5,-6,8,10,-3,6,-2,-8,-5,7,-1,-4,1,8,-7,3,2,10,-5,3,-3,9,-2,-4,-6,-6,-8,-3,-2,-10,-4,5,-6,-7,7,-9,9,-8,9,-7,4,3,2,2,9,-6,-7,-10,-8,-2,-4,-5,-10,-3,-6,-3,6,2,-2,-3,-8,-3,-2,6,7,-4,2,6,-4,-1,1,-1,-10,6,-9,2,-10,2,5,1,-7,-4,6,-1,9,1,7,-9,-6,8,4,3,-4,-7,5,4,-2,-1,8,-9,5,9,1,-9,-2,4,-9,-3,4,-4,7,8,-6,-8,-2,-3,6,-9,1,5,6,-3,-6,10,4,6,-3,3,-7,6,-7,-8,-3,1,6,-9,-3,9,-7,-7,2,4,-10,-5,-7,6,-1,8,-3,8,-3,4,-7,5,-10,9,-10,7,10,-6,-4,5,-1,9,-10,-3,-4,-10,8,9,2,9,-10,9,-8,-9,1,8,-6,6,-6,10,-6,4,-8,3,8,-9,10,-10,-6,3,-4,-9,-9,-8,-4,4,-1,-5,1,10,-1,10,10,2,-1,-5,-7,5,9,-1,-4,-2,-3,-7,-4,4,7,-9,-5,2,9,1,2,-1,1,-4,9,1,1,-6,4,-2,-5,-7,3,6,-9,-9,-7,1,-4,-5,9,5,-4,6,-3,9,1,-10,-5,8,5,4,8,10,-10,-5,10,10,-2,-4,-7,5,-8,4,-3,-9,10,2,1,-7,8,-2,3,4,2,-10,-2,-9,-2,-6,-5,-5,8,-2,9,10,3,-6,5,10,10,6,-7,-10,8,-3,-1,-10,6,-8,1,-2,9,1,-8,1,4,-9,10,9,-5,3,-3,-7,-4,5,2,-2,-5,-6,7,-2,3,-2,-3,5,7,6,-2,10,7,-3,-5,1,-9,5,-6,-7,-10,-4,-1,-1,-6,8,-9,3,-6,-4,-3,-10,-3,8,-4,8,3,-5,2,1,-2,-7,-9,-4,7,5,6,-2,-10,8,-7,-6,-10,-5,6,2,6,8,10,-10,3,-8,-9,-5,3,3,-4,10,-1,-8,-10,-6,10,2,7,6,7,6,-6,-7,6,9,-10,-6,4,9,-4,2,6,-1,-8,-2,3,-5,10,-10,-3,-6,7,-5,6,7,-6,4,-3,-6,4,-9,7,-7,-5,1,5,-4,-1,-5,2,9,-9,1,-7,-4,-8,-9,-7,10,-5,-4,10,5,7,-2,-2,-7,1,-4,9,-9,-2,-10,7,3,-10,-4,-2,-6,1,-8,-9,3,-6,-10,6,2,8,-9,1,-8,-8,5,-1,1,-1,4,-5,-1,5,-6,1,-3,9,7,-3,-4,7,-2,-2,-2,-3,4,5,-7,-9,5,8,-2,-7,10,1,-4,-3,9,-1,-10,-9,-10,-4,-5,9,-4,8,-7,-4,-9,-9,7,9,-9,7,7,-6,10,-6,-4,7,-4,-5,-9,6,-7,-1,6,10,-2,-5,-3,-6,10,8,-6,1,7,9,-6,-4,-1,-7,6,-2,-4,-7,-9,-8,4,-4,-10,-8,-2,6,3,3,6,-1,-7,9,4,-6,1,-4,1,-3,5,-1,2,7,7,9,9,-4,-7,-8,10,-3,-2,-6,-7,6,-2,-8,-2,10,-4,3,-1,4,1,-8,-7,-4,10,-4,8,-8,6,-3,-3,-2,-1,4,3,9,-9,-6,10,7,-9,8,2,-8,-5,1,-5,7,-7,8,-9,3,-6,6,1,9,-8,-7,-4,-1,7,7,4,-8,6,-10,-6,5,-3,9,6,-4,-4,5,6,-7,7,-7,-7,-3,-2,8,-7,2,-3,4,9,-6,-6,3,6,-9,3,5,10,2,2,-9,-2,8,2,-7,-7,7,3,-7,7,1,1,-9,5,-2,1,5,-2,9,3,6,8,-5,-3,-9,10,10,7,2,-1,8,-6,7,5,4,3,-10,-5,-3,9,9,-3,1,-10,-3,-5,-5,3,-1,-8,-6,4,4,-3,8,-9,1,7,4,-5,10,-8], dtype = "uint32")#candidate|9339|(1430,)|const|uint32
call_9338 = func_542_call(relay.reshape(const_9339.astype('uint32'), [10, 11, 13]), relay.reshape(const_9339.astype('uint32'), [10, 11, 13]), )
call_9340 = func_542_call(relay.reshape(const_9339.astype('uint32'), [10, 11, 13]), relay.reshape(const_9339.astype('uint32'), [10, 11, 13]), )
func_6972_call = mod.get_global_var('func_6972')
func_6974_call = mutated_mod.get_global_var('func_6974')
const_9342 = relay.const([[9],[3],[8],[-9],[-2],[6],[-4],[6],[-3],[3],[3],[10],[9],[5],[-4],[-2],[4],[-8],[9],[1],[-10],[1],[-7],[-3],[1],[-2],[2],[-4],[-5],[-5],[-7],[-1],[2],[5],[7],[-5],[2],[4],[3],[10],[5],[-10],[5],[8],[-2],[-9],[7],[10],[-9],[3],[1],[-6],[-1],[4],[8],[-10],[7],[10],[4],[2],[-10],[-5],[-2],[8],[-9],[9],[6],[5],[-8],[3],[-5],[10],[5],[-2],[9],[-6],[-6],[6],[5],[-9],[-3],[-4],[-6],[8],[10],[-1],[-6],[-6],[1],[3],[3],[-9],[-10],[5],[8],[-10],[2],[2],[5],[-3],[1],[1],[-5],[10],[5],[5],[3],[-7],[6],[-8],[5],[7],[-2],[-7],[-7],[3],[4],[-7],[8],[-4],[1],[1],[1],[8],[-9],[4],[-4],[1],[-8],[-2],[-1],[-4],[8],[-4],[9],[9],[5],[-3],[-9],[6],[7],[2],[-10],[9],[3],[4],[-8],[-9],[-10],[-3],[10],[8],[-4],[-4],[5],[-1],[-9],[-6],[-7],[-9],[-6],[-4],[-3],[-1],[7],[3],[-7],[-3],[-5],[-6],[-6],[-3],[-9],[5],[1],[6],[-7],[4],[-7],[-5],[8],[-10],[-1],[8],[1],[-6],[-2],[-1],[7],[-6],[-10],[-8],[7],[8],[-6],[8],[3],[2],[2],[-1],[5],[-7],[8],[7],[4],[6],[10],[-10],[5],[-10],[-3],[8],[6],[-3],[10],[-1],[-3],[2],[-8],[7],[-4],[7],[-8],[-8],[-7],[5],[-7],[-7],[10],[1],[-3],[-7],[-3],[-10],[-7],[5],[1],[-5],[1],[1],[4],[-9],[10],[3],[-7],[2],[-9],[10],[5],[2],[-8],[-5],[-1],[7],[4],[1],[5],[-8],[-9],[5],[-5],[7],[5],[3],[7],[3],[-6],[-4],[9],[-8],[-1],[-10],[2],[-1],[8],[6],[4],[-5],[-3],[10],[6],[7],[6],[-9],[-5],[9],[-10],[4],[8],[1],[-3],[7],[-2],[-10],[-3],[-7],[6],[2],[-9],[6],[-10],[10],[5],[-9],[1],[-6],[9],[-4],[8],[-8],[-4],[1],[-10],[1],[-4],[3],[-3],[3],[7],[8],[-4],[-2],[2],[3],[-2],[2],[-7],[8],[-5],[-9],[8],[-10],[-5],[9],[-7],[-1],[3],[-3],[1],[-6],[9],[1],[-10],[3],[7],[-4],[-4],[-6],[-9],[2],[-1],[-4],[-6],[1],[5],[2],[-5],[9],[-9],[-1],[-8],[1],[-9],[-10],[1],[-4],[-5],[-9],[7],[2],[-7],[-7],[-5],[-8],[-3],[-3],[3],[-3],[-3],[3],[-7],[8],[-7],[-6],[-7],[8],[1],[6],[4],[-2],[-2],[9],[1],[2],[-5],[7],[3],[-5],[-2],[-5],[-7],[1],[-10],[6],[1],[-2],[5],[2],[3],[9],[8],[9],[1],[2],[-5],[2],[-1],[10],[10],[-5],[5],[5],[1],[7],[1],[10],[-2],[-1],[-3],[8],[-9],[9],[-5],[-1],[-8],[7],[-6],[-5],[-2],[-8],[8],[2],[-9],[5],[-5],[1],[5],[-6],[-3],[-7],[-5],[-2],[9],[-7],[10],[1],[7],[10],[-6],[9],[9],[-7],[-2],[-7],[10],[-3],[8],[-8],[-5],[-7],[-2],[4],[2],[5],[-8],[1],[-4],[4],[-3],[-8],[6],[-10],[7],[1],[-10],[-8],[7],[-2],[-4],[8],[9],[9],[-8],[-9],[5],[6],[7],[6],[-1],[-7],[-5],[5],[-6],[2],[-4],[-2],[-10],[8],[6],[-10],[5],[2],[9],[7],[7],[5],[10],[4],[9],[-8],[6],[9],[2],[3],[5],[1],[-9],[-1],[3],[10],[-3],[-1],[-5],[10],[3],[-8],[-7],[5],[4],[-9],[3],[-8],[-5],[3],[-6],[-7],[10],[-3],[3],[10],[1],[-6],[-6],[-10],[-1],[1],[9],[10],[-8],[-3],[6],[5],[-7],[2],[2],[-7],[1],[-3],[-4],[-7],[-2],[-1],[-8],[6],[-4],[2],[8],[-7],[-8],[7],[10],[-4],[9],[9],[-10],[10],[-7],[-2],[2],[2],[-8],[9],[2],[5],[4],[9],[-7],[-8],[-10],[-10],[3],[2],[-1],[-4],[-6],[-10],[-1],[-2],[-6],[2],[-8],[5],[-5],[2],[9],[-8],[9],[2],[-6],[-4],[5],[9],[-4],[8],[8],[9],[10],[-1],[-8],[10],[4],[10],[8],[5],[2],[-8],[-3],[2],[8],[5],[-9],[-9],[-8],[-4],[3],[4],[4],[3],[7],[7],[5],[-8],[-2],[6],[-10],[3],[-7],[10],[3],[2],[10],[5],[1],[5],[6],[-9],[7],[1],[-6],[9],[-2],[-7],[5],[4],[1],[-5],[-3],[2],[-10],[4],[-9],[7],[8],[7],[-7],[-2],[-7],[7],[6],[1],[1],[-8],[-8],[-10],[9],[4],[-5],[-6],[-9],[9],[-7],[6],[-9],[7],[6],[3],[-8],[2],[1],[-6],[-6],[-10],[1],[5],[7],[9],[-4],[10],[-8],[1],[9],[-9],[-6],[2],[-3],[-10],[9],[9],[4],[-2],[-8],[6],[4],[5],[7],[3],[-1],[2],[3],[5],[-2],[-4],[-2],[1],[-9],[-8],[-1],[-6],[4],[-6],[9],[-8],[4],[-8],[-4],[5],[-7],[-7],[4],[-7],[-10],[-9],[-1],[6],[8],[8],[-3],[-8],[6],[6],[-8],[-8],[-1],[-3],[2],[7],[5],[2],[1],[-3],[2],[-6],[2],[6],[9],[-10],[2],[-9],[-2],[8],[-2],[-5],[-3],[5],[5],[-4],[-3],[-3],[-4],[3],[-10],[8],[10],[3],[-2],[5],[7],[5],[4],[-3],[9],[-7],[-8],[9],[9],[3],[6],[1],[1],[-7],[6],[8],[-9],[3],[-4],[4],[4],[8],[-4],[-3],[-1],[-4],[8],[-1],[1],[3],[-10],[-3],[6],[4],[-2],[3],[-10],[9],[-10],[-8],[-9],[-7],[8],[-7],[6],[8],[-4],[4],[-7],[-10],[-9],[-7],[6],[4],[8],[-8],[-2],[5],[5],[-1],[-3],[8],[10],[-7],[-2],[-5],[2],[9],[-8],[5],[-3],[-3],[9],[5],[10],[-4],[4],[2],[6],[10],[6],[7],[9],[-7],[9],[3],[6],[8],[-5],[-9],[10],[-10],[7],[-8],[-1],[1],[6],[-7],[-5],[2],[-8],[-7],[4],[-10],[-8],[-6],[2],[3],[-9],[-2],[-1],[-2],[-10],[4],[5],[9],[-2],[8],[2],[4],[6],[-2],[-7],[-2],[8],[-9],[-7],[-8],[9],[-4],[9],[-8],[2],[8],[5],[-7],[4],[-1],[-4],[7],[7],[3],[-4],[2],[-4],[-8],[10],[5],[-3],[7],[6],[8],[1],[1],[2],[-7],[4],[4],[-2],[3],[-3],[-8],[-8],[-8],[-3],[8],[-8],[9],[6],[7],[10],[1],[-6],[3],[-1],[4],[9],[8],[3],[10],[-10],[-5],[-7],[-2],[-6],[2],[-4],[7],[-8],[-8],[9],[5],[-1],[9],[1],[-2],[-10],[-1],[-3],[9],[-1],[3],[-4],[5],[-3],[10],[-6],[1],[-8],[-3],[-10],[9],[-4],[-6],[-1],[-6],[5],[-10],[-10],[-8],[-10],[8],[-1],[-5],[-9],[-7],[-5],[-2],[5],[6],[2],[10],[9],[-6],[-5],[-5],[-3],[2],[2],[-5],[8],[-2],[8],[-10],[2],[1],[-5],[-1],[3],[7],[-4],[-4],[3],[-2],[-5],[-8],[1],[-4],[5],[-2],[-9],[3],[5],[10],[3],[-5],[-8],[-3],[7],[8],[4],[-3],[-7],[6],[10],[-9],[2],[-2],[-5],[-3],[10],[5],[-9],[10],[4],[7],[5],[7],[-6],[2],[-10],[6],[-2],[-6],[-3],[-3],[-9],[2],[7],[-3],[2],[-2],[-10],[9],[-9],[-4],[3],[-10],[-10],[-1],[-7],[7],[-5],[7],[3],[-4],[10],[3],[3],[7],[-4],[-1],[-3],[-3],[-9],[-8],[-9],[6],[4],[-5],[-3],[-3],[4],[-4],[8],[9],[4],[-1],[2],[10],[8],[-2],[4],[2],[-9],[-6],[-5],[7],[5],[-6],[-3],[-6],[-6],[-4],[3],[-4],[3],[-8],[1],[-7],[-9],[5],[10],[-3],[3],[7],[-6],[-5],[-2],[-5],[-4],[-5],[-2],[-3],[5],[7],[3],[-7],[-4],[-9],[2],[5],[10],[2],[-8],[6],[5],[-8],[-4],[-2],[-3],[2],[3],[-10],[-2],[5],[4],[3],[9],[-6],[4],[8],[3],[8],[9],[8],[-3],[9],[-4],[10],[-7],[-1],[5],[4],[3],[1],[-4],[-9],[-7],[6],[-1],[9],[9],[-9],[-4],[-8],[-3],[1],[-6],[4],[-9],[-7],[5],[1],[6],[-7],[6],[-2],[-1],[-7],[-9],[-5],[7],[-4],[5],[10],[-4],[6],[-6],[-9],[-6],[3],[2],[6],[-6],[8],[9],[10],[3],[9],[-2],[1],[-8],[3],[-4],[8],[1],[-2],[7],[-6],[-1],[10],[2],[-6],[-4],[5],[3],[-1],[-3],[-7],[-9],[6],[8],[-2],[-6],[-10],[7],[-6],[10],[5],[6],[1],[4],[-2],[-4],[-3],[-6],[2],[-9],[-1],[-7],[9],[-2],[2],[-7],[-7],[5],[-2],[-8],[5],[3],[-7],[-8],[-3],[5],[1],[6],[5],[-7],[2],[-2],[-6],[-7],[-7],[3],[8],[-9],[-5],[4],[-4],[-3],[-3],[7],[8],[7],[-7],[-9],[7],[1],[10],[5],[8],[-3],[-2],[2],[-9],[3],[7],[-2],[-3],[5],[7],[2],[9],[-7],[5],[-8],[-5],[-9],[-9],[-5],[7],[10],[7],[9],[2],[-9],[-9],[2],[-2],[10],[2],[-4],[9],[4],[-4],[6],[-6],[-7],[10],[-10],[-3],[3],[9],[1],[-6],[-1],[-9],[5],[-10],[-5],[9],[-8],[-10],[5],[-3],[4],[5],[-10],[-3],[-6],[-2],[-7],[-5],[8],[-5],[-10],[4],[9],[-2],[-4],[1],[-3],[-3],[1],[-3],[-7],[7],[5],[-8],[5],[-4],[6],[-2],[-2],[1],[-3],[1],[-1],[8],[2],[-2],[-6],[3],[-8],[4],[4],[8],[-8],[7],[7],[3],[2],[-6],[10],[-6],[7],[1],[4],[-7],[-5],[-8],[1],[-1],[8],[-8],[-7],[7],[-6],[-2],[-6],[9],[6],[-7],[4],[-7],[-6],[-7],[2],[-7],[-7],[-9],[7],[2],[8],[-2],[-4],[-8],[-10],[3],[2],[2],[4],[5],[9],[-10],[7],[1],[-3],[9],[-8],[-6],[1],[5],[2],[5],[7],[-9],[7],[8],[-6],[-4],[-8],[-6],[9],[4],[6],[4],[-5],[-9],[6],[-10],[1],[7],[-5],[-6],[5],[-3],[7],[4],[7],[-5],[-8],[-2],[-7],[-2],[5],[7],[5],[-4],[1],[3],[-1],[9],[-8],[-4],[-2],[9],[8],[-5],[-2],[-8],[-2],[3],[-1],[10],[-6],[-7],[1],[-5],[-10],[-5],[-7],[-2],[-8],[2],[7],[7],[6],[-9],[-6],[8],[1],[-8],[-1],[1],[-1],[-2],[3],[-7],[-3],[10],[-8],[-9],[6],[1],[6],[3],[5],[10],[-6],[9],[-9],[8],[-7],[2],[-2],[9],[-9],[4],[6],[-9],[-5],[8],[8],[7],[-10],[1],[-7],[1],[4],[3],[-4],[-7],[1],[-2],[9],[7],[-8],[3],[4],[-7],[-6],[4],[-7],[-7],[-8],[8],[3],[7],[-9],[10],[10],[9],[4],[-1],[-3],[5],[-9],[5],[5],[9],[-4],[-5],[2],[-10],[-9],[-6],[-8],[5],[10],[2],[-6],[-7],[9],[-1],[5],[8],[-6],[-8],[-5],[9],[1],[-2],[-2],[-2],[-5],[-8],[-5],[-8],[-6],[-9],[-8],[2],[-9],[2],[9],[7],[9],[-10],[8],[-5],[-8],[6],[7],[-8],[-4],[6],[3],[7],[8],[-8],[-3],[8],[6],[-2],[2],[1],[-10],[5],[-2],[2],[9],[7],[-6],[6],[6],[-1],[-8],[-2],[9],[-3],[3],[2],[1],[-3],[-10],[9],[3],[-1],[-4],[2],[-10],[-10],[2],[-5],[8],[-3],[-1],[4],[-2],[-7],[2],[-2],[-3],[3],[-10],[9],[8],[8],[-1],[-2],[-2],[10],[9],[7],[1],[-4],[9],[-9],[8],[10],[-6],[10],[8],[5],[-3],[-10],[1],[-10],[4],[-10],[9],[-9],[9],[-1],[-1],[-7],[-1],[3],[4],[-3],[-3],[4],[3],[-4],[1],[-3],[7],[9],[1],[3],[2],[-10],[-6],[6],[-9],[1],[-10],[-5],[10],[9],[3],[-2],[-5],[8],[-4],[7],[-2],[10],[-10],[-10],[-3],[-10],[-5],[-7],[6],[6],[9],[2],[10],[9],[1],[-9],[5],[-1],[-6],[-5],[-9],[4],[-3],[8],[-9],[1],[-2],[-4],[-2],[-8],[3],[6],[-9],[-4],[-7],[5],[-5],[1],[-2],[-5],[5],[10],[10],[-2],[9],[7],[-1],[1],[-1],[6],[3],[5],[2],[3],[-9],[4],[-8],[-1],[-10],[-1],[7],[2],[-1],[8],[7],[2],[-7],[7],[-5],[3],[3],[-7],[-2],[7],[1],[3],[-6],[-4],[6],[-8],[9],[-5],[7],[6],[-4],[-7],[6],[8],[-10],[10],[-5],[-9],[-7],[-7],[-8],[8],[-7],[4],[4],[-7],[10],[-5],[-9],[4],[8],[-3],[8],[3],[7],[-8],[6],[-2],[8],[-6],[-7],[9],[8],[2],[9],[-9],[2],[9],[3],[5],[1],[-5],[-9],[8],[5],[10],[-9],[-7],[-4],[-6],[-5],[-9],[6],[8],[9],[9],[7],[7],[-3],[5],[-8],[-7],[-3],[6],[3],[2],[7],[-6],[-9],[-10],[8],[-8],[-5],[2],[9],[5],[-2],[6],[7],[7],[-2],[-10],[8],[9],[10],[8],[3],[2],[-3],[8],[-4],[9],[7],[5],[5],[-6],[9],[-7],[-3],[6],[10],[-1],[10],[-2],[2],[4],[3],[3],[-1],[6],[8],[-5],[9],[4],[8],[7],[-2],[10],[-4],[6],[2],[-1],[3],[7],[-10],[-2],[-6],[-3],[-8],[-8],[7],[-6],[-6],[2],[1],[-5],[7],[-8],[-9],[4],[9],[-10],[-2],[-3],[-2],[-9],[-6],[7],[-3],[1],[6],[-7],[-3],[-3],[1],[6],[5],[8],[-8],[10],[-1],[8],[-5],[-9],[-5],[-4],[-8],[6],[-7],[6],[8],[1],[-7],[-3],[-7],[-5],[-3],[6],[-8],[-8],[-5],[6],[5],[-7],[-2],[-2],[6],[-6],[-10],[5],[3],[8],[3],[-1],[8],[3],[-4],[-1],[2],[-1],[2],[7],[-7],[-8],[-3],[6],[5],[9],[7],[8],[-3],[-1],[2],[6],[-9],[-10],[-10],[-6],[1],[4],[8],[-1],[2],[-10],[4],[-4],[-1],[-2],[8],[-8],[-6],[-5],[-5],[-3],[-6],[-4],[9],[-9],[7],[-1],[9],[6],[2],[-2],[-7],[-5],[-9],[9],[-5],[4],[-3],[8],[-4],[-2],[8],[10],[9],[-7],[5],[9],[-10],[-4],[9],[4],[-10],[-5],[-7],[-3],[-2],[1],[-8],[-5],[-6],[-8],[-2],[2],[-3],[2],[2],[6],[-6],[-4],[-8],[5],[-2],[7],[-5],[9],[-7],[-2],[-3],[-2],[3],[-8],[1],[8],[9],[-2],[9],[-4],[-2],[-2],[-7],[10],[-5],[-2],[9],[7],[-7],[-8],[1],[6],[5],[6],[5],[-4],[-2],[6],[7],[-3],[8],[-1],[1],[-8],[2],[-9],[-9],[-4],[4],[10],[-9],[6],[1],[3],[6],[10],[-3],[-1],[-10],[-3],[5],[7],[8],[10],[-1],[-9],[5],[6],[-7],[-3],[4],[9],[6],[-2],[-8],[-9],[6],[9],[-7],[-5],[-9],[3],[-2],[-1],[-7],[-4],[-8],[8],[4],[10],[-4],[7],[3],[5],[-4],[10],[-5],[-7],[-3],[5],[-3],[-1],[-5],[-4],[-9],[-3],[3],[3],[5],[-8],[8],[-2],[3],[9],[-8],[-6],[-5],[-3],[-5],[9],[3],[-7],[1],[2],[9],[5],[-8],[-10],[6],[6],[4],[-6],[-6],[9],[-6],[-5],[10],[3],[1],[-9],[5],[-8],[1],[-1],[9],[-1],[-9],[4],[-4],[9],[1],[10],[6],[-5],[1],[9],[-8],[-7],[7],[3],[7],[-1],[-3],[-2],[-7],[-8],[4],[2],[-1],[9],[10],[8],[-7],[4],[4],[1],[5],[8],[6],[4],[2],[4],[10],[-8],[-2],[5],[-6],[-10],[7],[-8],[5],[-10],[9],[8],[-9],[-9],[-4],[9],[-8],[9],[5],[-3],[-6],[-6],[9],[1],[3],[-6],[-1],[-8],[-5],[-3],[9],[-7],[8],[-6],[-9],[-6],[4],[-5],[5],[-8],[-9],[-1],[-9],[1],[7],[4],[-4],[2],[6],[-7],[-8],[9],[4],[-6],[-10],[-9],[9],[9],[10],[-3],[-4],[2],[8],[1],[3],[1],[10],[3],[6],[5],[4],[-4],[4],[4],[-5],[-9],[-3],[-6],[5],[7],[7],[9],[-9],[-1],[4],[2],[-10],[4],[2],[-5],[2],[-6],[5],[8],[-1],[-9],[-4],[-8],[-3],[-2],[7],[-4],[10],[8],[-5],[-9],[-7],[3],[-8],[3],[5],[-10],[10],[-6],[6],[-9],[-1],[9],[-2],[-3],[2],[-3],[-6],[-2],[-7],[-4],[8],[-5],[-1],[-1],[-10],[10],[-5],[1],[8],[4],[8],[10],[6],[-8],[8],[7],[-7],[6],[5],[5],[-10],[-5],[5],[-2],[-1],[-2],[4],[3],[-5],[-4],[5],[1],[-6],[-10],[-4],[6],[-1],[1],[-8],[1],[-9],[-6],[-7],[4],[-2],[-5],[10],[8],[10],[-6],[-4],[-2],[-3],[3]], dtype = "int8")#candidate|9342|(2520, 1)|const|int8
call_9341 = relay.TupleGetItem(func_6972_call(relay.reshape(const_9342.astype('int8'), [12, 15, 14])), 1)
call_9343 = relay.TupleGetItem(func_6974_call(relay.reshape(const_9342.astype('int8'), [12, 15, 14])), 1)
uop_9345 = relay.sigmoid(call_9338.astype('float32')) # shape=(10, 11, 13)
uop_9347 = relay.sigmoid(call_9340.astype('float32')) # shape=(10, 11, 13)
func_2830_call = mod.get_global_var('func_2830')
func_2832_call = mutated_mod.get_global_var('func_2832')
var_9355 = relay.var("var_9355", dtype = "uint32", shape = (392,))#candidate|9355|(392,)|var|uint32
call_9354 = relay.TupleGetItem(func_2830_call(relay.reshape(var_9355.astype('uint32'), [7, 14, 4])), 0)
call_9356 = relay.TupleGetItem(func_2832_call(relay.reshape(var_9355.astype('uint32'), [7, 14, 4])), 0)
func_2125_call = mod.get_global_var('func_2125')
func_2128_call = mutated_mod.get_global_var('func_2128')
var_9360 = relay.var("var_9360", dtype = "float32", shape = (208,))#candidate|9360|(208,)|var|float32
call_9359 = relay.TupleGetItem(func_2125_call(relay.reshape(var_9360.astype('float32'), [8, 2, 13])), 0)
call_9361 = relay.TupleGetItem(func_2128_call(relay.reshape(var_9360.astype('float32'), [8, 2, 13])), 0)
func_3809_call = mod.get_global_var('func_3809')
func_3815_call = mutated_mod.get_global_var('func_3815')
var_9366 = relay.var("var_9366", dtype = "uint8", shape = (576,))#candidate|9366|(576,)|var|uint8
const_9367 = relay.const([2,-4,1,-3,-8,-6,-1,-5,-4,-1,-10,-5,5,-10,-3,-1,-8,-9,-4,1,7,-2,10,3,8,-3,3,1,-7,8,-4,6,3,-1,10,-10,-1,5,-2,5,4,-6,-5,-2,-10,4,-1,-7,6,3,10,-2,8,2,8,9,9,-7,-4,9,-3,-9,-3,-9,4,4,-7,-7,-6,4,8,3,9,-4,-1,9,7,-8,-4,-9,1,2,-2,3,-8,9,8,-5,-4,-2,-1,-10,-8,-9,7,1,-5,-6,-2], dtype = "uint64")#candidate|9367|(99,)|const|uint64
var_9368 = relay.var("var_9368", dtype = "int16", shape = (840,))#candidate|9368|(840,)|var|int16
const_9369 = relay.const([[3,-4,8,1,-6,4,2,5,2,-5,-2,7,-1,1,-1,10,8,6],[9,-9,10,10,-9,-5,3,-2,-9,2,-6,-2,6,4,9,10,-7,3],[-4,9,-2,-4,8,-9,-5,-9,-6,1,-4,-5,-4,10,-6,9,8,3],[6,-6,-3,3,7,-10,-2,4,5,10,-6,1,3,-4,-1,2,4,2],[-4,5,7,-4,-6,5,-10,3,5,-8,3,3,8,-1,-5,2,-10,-1],[-4,-3,7,-4,-5,3,-8,-10,4,6,9,6,2,3,7,-6,3,1]], dtype = "int16")#candidate|9369|(6, 18)|const|int16
const_9370 = relay.const([8.417005,8.376712,9.242453,1.449908,-8.515159,-3.931457,-1.688077,3.417751,6.853768,4.087629,4.569990,8.335402,8.082565,8.384680,6.755144,5.808964,-9.428889,-2.065959,3.704035,-1.487073,2.316354,7.698297,0.129342,-1.996666,1.346759,8.644611,-9.682652,0.230899,9.952199,5.739357,4.361963,1.111232,7.957532,1.208366,9.780360,-9.160879,2.849291,-1.333326,1.204583,7.027683,-4.779926,5.654154,5.771599,9.984025,-7.682934,0.797284,9.254549,4.834865,1.776024,9.671136,-9.948098,9.585804,-4.404468,-2.801923,-1.488103,-4.105989,-6.394134,-3.092628,-9.270281,2.213203,-4.266823,-9.527427,4.269073,-5.323087,3.779652,-4.985407,-5.282301,0.894247,2.095795,-6.060967,5.056281,2.083290,-7.799908,-7.367580,1.036660,3.224624,-3.342625,2.045266,7.413693,-5.094237,0.835908,9.745823,-2.364142,-9.631610,-9.508838,-7.735370,1.152728,-2.453048,7.009011,3.326551,-6.165999,-9.366820,-2.410607,-3.613306,2.791245,-8.745939,3.121311,-2.473454,-1.951569,-1.066936,9.189313,1.363354,-0.719284,2.146828,-2.470175,-5.961120,1.254683,8.849141,-7.595702,-8.055948,1.852132,-7.879359,-0.039073,-9.544546,-4.767741,2.920207,6.567484,-7.968038,-7.354969,0.154348,-0.329807,4.716768,-3.701052,-9.000516,3.678549,4.495809,6.048661,5.401646,-8.335449,1.324397,-1.022187,5.808110,0.028629,6.605686,1.158523,-5.749107,-9.214141,5.943288,-5.871200,4.717275,-9.167894,-4.715623,6.610939,4.755563], dtype = "float32")#candidate|9370|(144,)|const|float32
call_9365 = relay.TupleGetItem(func_3809_call(relay.reshape(var_9366.astype('uint8'), [576,]), relay.reshape(const_9367.astype('uint64'), [99, 1]), relay.reshape(var_9368.astype('int16'), [840,]), relay.reshape(const_9369.astype('int16'), [54, 2]), relay.reshape(const_9370.astype('float32'), [144,]), ), 4)
call_9371 = relay.TupleGetItem(func_3815_call(relay.reshape(var_9366.astype('uint8'), [576,]), relay.reshape(const_9367.astype('uint64'), [99, 1]), relay.reshape(var_9368.astype('int16'), [840,]), relay.reshape(const_9369.astype('int16'), [54, 2]), relay.reshape(const_9370.astype('float32'), [144,]), ), 4)
uop_9377 = relay.asinh(uop_9345.astype('float64')) # shape=(10, 11, 13)
uop_9379 = relay.asinh(uop_9347.astype('float64')) # shape=(10, 11, 13)
uop_9395 = relay.log(const_9369.astype('float64')) # shape=(6, 18)
uop_9399 = relay.atan(uop_9377.astype('float32')) # shape=(10, 11, 13)
uop_9401 = relay.atan(uop_9379.astype('float32')) # shape=(10, 11, 13)
output = relay.Tuple([call_9335,const_9339,call_9341,const_9342,call_9354,var_9355,call_9359,var_9360,call_9365,var_9366,const_9367,var_9368,const_9370,uop_9395,uop_9399,])
output2 = relay.Tuple([call_9336,const_9339,call_9343,const_9342,call_9356,var_9355,call_9361,var_9360,call_9371,var_9366,const_9367,var_9368,const_9370,uop_9395,uop_9401,])
func_9410 = relay.Function([var_9355,var_9360,var_9366,var_9368,], output)
mod['func_9410'] = func_9410
mod = relay.transform.InferType()(mod)
var_9411 = relay.var("var_9411", dtype = "uint32", shape = (392,))#candidate|9411|(392,)|var|uint32
var_9412 = relay.var("var_9412", dtype = "float32", shape = (208,))#candidate|9412|(208,)|var|float32
var_9413 = relay.var("var_9413", dtype = "uint8", shape = (576,))#candidate|9413|(576,)|var|uint8
var_9414 = relay.var("var_9414", dtype = "int16", shape = (840,))#candidate|9414|(840,)|var|int16
output = func_9410(var_9411,var_9412,var_9413,var_9414,)
func_9415 = relay.Function([var_9411,var_9412,var_9413,var_9414,], output)
mutated_mod['func_9415'] = func_9415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8918_call = mod.get_global_var('func_8918')
func_8919_call = mutated_mod.get_global_var('func_8919')
call_9422 = relay.TupleGetItem(func_8918_call(), 0)
call_9423 = relay.TupleGetItem(func_8919_call(), 0)
output = call_9422
output2 = call_9423
func_9432 = relay.Function([], output)
mod['func_9432'] = func_9432
mod = relay.transform.InferType()(mod)
mutated_mod['func_9432'] = func_9432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9432_call = mutated_mod.get_global_var('func_9432')
call_9433 = func_9432_call()
output = call_9433
func_9434 = relay.Function([], output)
mutated_mod['func_9434'] = func_9434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8702_call = mod.get_global_var('func_8702')
func_8703_call = mutated_mod.get_global_var('func_8703')
call_9458 = func_8702_call()
call_9459 = func_8702_call()
func_5024_call = mod.get_global_var('func_5024')
func_5027_call = mutated_mod.get_global_var('func_5027')
const_9464 = relay.const([-3,-3,7,-6,-3,4,-9,3,5], dtype = "uint16")#candidate|9464|(9,)|const|uint16
call_9463 = relay.TupleGetItem(func_5024_call(relay.reshape(const_9464.astype('uint16'), [3, 3]), relay.reshape(const_9464.astype('uint16'), [3, 3]), ), 0)
call_9465 = relay.TupleGetItem(func_5027_call(relay.reshape(const_9464.astype('uint16'), [3, 3]), relay.reshape(const_9464.astype('uint16'), [3, 3]), ), 0)
var_9474 = relay.var("var_9474", dtype = "float32", shape = (3, 10, 4))#candidate|9474|(3, 10, 4)|var|float32
bop_9475 = relay.greater(call_9458.astype('bool'), relay.reshape(var_9474.astype('bool'), relay.shape_of(call_9458))) # shape=(3, 10, 4)
bop_9478 = relay.greater(call_9459.astype('bool'), relay.reshape(var_9474.astype('bool'), relay.shape_of(call_9459))) # shape=(3, 10, 4)
output = relay.Tuple([call_9463,const_9464,bop_9475,])
output2 = relay.Tuple([call_9465,const_9464,bop_9478,])
F = relay.Function([var_9474,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9474,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

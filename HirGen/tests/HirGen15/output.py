import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_109 = relay.var("var_109", dtype = "float32", shape = (11, 1, 5))#candidate|109|(11, 1, 5)|var|float32
var_110 = relay.var("var_110", dtype = "float32", shape = (11, 10, 5))#candidate|110|(11, 10, 5)|var|float32
bop_111 = relay.divide(var_109.astype('float32'), var_110.astype('float32')) # shape=(11, 10, 5)
bop_152 = relay.floor_divide(var_109.astype('float32'), var_110.astype('float32')) # shape=(11, 10, 5)
output = relay.Tuple([bop_111,bop_152,])
output2 = relay.Tuple([bop_111,bop_152,])
func_159 = relay.Function([var_109,var_110,], output)
mod['func_159'] = func_159
mod = relay.transform.InferType()(mod)
var_160 = relay.var("var_160", dtype = "float32", shape = (11, 1, 5))#candidate|160|(11, 1, 5)|var|float32
var_161 = relay.var("var_161", dtype = "float32", shape = (11, 10, 5))#candidate|161|(11, 10, 5)|var|float32
output = func_159(var_160,var_161,)
func_162 = relay.Function([var_160,var_161,], output)
mutated_mod['func_162'] = func_162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_278 = relay.var("var_278", dtype = "float64", shape = (12, 16, 11))#candidate|278|(12, 16, 11)|var|float64
var_279 = relay.var("var_279", dtype = "float64", shape = (12, 16, 11))#candidate|279|(12, 16, 11)|var|float64
bop_280 = relay.mod(var_278.astype('float64'), relay.reshape(var_279.astype('float64'), relay.shape_of(var_278))) # shape=(12, 16, 11)
output = relay.Tuple([bop_280,])
output2 = relay.Tuple([bop_280,])
func_285 = relay.Function([var_278,var_279,], output)
mod['func_285'] = func_285
mod = relay.transform.InferType()(mod)
var_286 = relay.var("var_286", dtype = "float64", shape = (12, 16, 11))#candidate|286|(12, 16, 11)|var|float64
var_287 = relay.var("var_287", dtype = "float64", shape = (12, 16, 11))#candidate|287|(12, 16, 11)|var|float64
output = func_285(var_286,var_287,)
func_288 = relay.Function([var_286,var_287,], output)
mutated_mod['func_288'] = func_288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_308 = relay.var("var_308", dtype = "float64", shape = (5, 12, 14))#candidate|308|(5, 12, 14)|var|float64
uop_309 = relay.asinh(var_308.astype('float64')) # shape=(5, 12, 14)
output = relay.Tuple([uop_309,])
output2 = relay.Tuple([uop_309,])
func_328 = relay.Function([var_308,], output)
mod['func_328'] = func_328
mod = relay.transform.InferType()(mod)
var_329 = relay.var("var_329", dtype = "float64", shape = (5, 12, 14))#candidate|329|(5, 12, 14)|var|float64
output = func_328(var_329)
func_330 = relay.Function([var_329], output)
mutated_mod['func_330'] = func_330
mutated_mod = relay.transform.InferType()(mutated_mod)
var_429 = relay.var("var_429", dtype = "float64", shape = (15, 11, 7))#candidate|429|(15, 11, 7)|var|float64
uop_430 = relay.asin(var_429.astype('float64')) # shape=(15, 11, 7)
output = uop_430
output2 = uop_430
func_432 = relay.Function([var_429,], output)
mod['func_432'] = func_432
mod = relay.transform.InferType()(mod)
var_433 = relay.var("var_433", dtype = "float64", shape = (15, 11, 7))#candidate|433|(15, 11, 7)|var|float64
output = func_432(var_433)
func_434 = relay.Function([var_433], output)
mutated_mod['func_434'] = func_434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_486 = relay.var("var_486", dtype = "float32", shape = (5, 9, 16))#candidate|486|(5, 9, 16)|var|float32
uop_487 = relay.acosh(var_486.astype('float32')) # shape=(5, 9, 16)
output = relay.Tuple([uop_487,])
output2 = relay.Tuple([uop_487,])
func_510 = relay.Function([var_486,], output)
mod['func_510'] = func_510
mod = relay.transform.InferType()(mod)
var_511 = relay.var("var_511", dtype = "float32", shape = (5, 9, 16))#candidate|511|(5, 9, 16)|var|float32
output = func_510(var_511)
func_512 = relay.Function([var_511], output)
mutated_mod['func_512'] = func_512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_717 = relay.var("var_717", dtype = "uint16", shape = (13, 15, 8))#candidate|717|(13, 15, 8)|var|uint16
const_718 = relay.const([[[7,-7,8,-7,-5,-8,9,3],[2,3,2,-5,-5,3,-9,4],[-3,-1,8,9,2,4,-3,5],[6,-5,5,3,2,6,3,1],[2,6,2,5,-3,5,8,1],[7,-2,7,2,1,5,9,-3],[8,5,7,5,-1,-5,-10,2],[-4,2,2,-3,4,-9,1,-8],[-1,2,2,-7,-8,3,1,-9],[-2,6,-7,-6,-6,5,-9,10],[-5,10,-10,2,9,9,-1,-5],[-9,6,2,6,9,5,6,7],[-8,3,-4,-9,10,-3,6,5],[-10,1,3,8,-1,-7,10,10],[-3,-9,8,1,8,1,3,9]],[[-5,5,-8,-9,8,5,1,8],[-10,2,5,-8,-9,-6,2,-8],[-6,4,-8,4,-10,5,-6,-7],[10,-6,7,7,-2,-10,10,1],[5,-1,-10,-8,-6,4,-8,10],[-4,-2,-10,-7,-3,7,9,1],[-7,6,9,-10,8,7,-8,-3],[-3,3,5,-8,-1,4,-4,1],[-9,-1,-2,5,6,4,-1,6],[2,-9,-1,5,-3,1,6,-1],[10,5,-2,10,4,-9,2,1],[7,1,9,2,-5,-3,7,-7],[-5,-9,-5,-2,4,4,-9,8],[-6,-7,-4,-1,2,-1,-8,-7],[1,10,4,4,7,2,4,-3]],[[-10,7,9,-3,2,1,-2,-2],[2,-8,-6,-4,10,-1,7,-5],[4,1,8,6,9,9,-6,4],[-7,-8,-5,-7,8,9,2,4],[-6,1,10,5,7,-1,-8,-4],[-9,7,-5,-3,2,10,-8,10],[-1,9,10,-9,9,-1,8,2],[-8,-5,7,5,10,3,-2,-3],[6,2,-7,5,4,-4,1,-10],[-7,9,-1,-3,-10,10,-1,-2],[-6,-5,7,8,3,-2,8,-3],[-6,-10,9,-1,-2,-10,5,-10],[-10,1,-4,-9,-1,-3,-6,5],[-1,1,10,8,3,5,-3,7],[1,-1,7,3,-2,6,-5,9]],[[7,5,-2,-7,4,-4,-6,-8],[-1,3,-10,7,-5,9,-5,5],[8,9,-6,8,-8,-6,-3,3],[-5,3,5,5,-2,-9,5,-9],[5,-5,-6,-10,5,-1,10,2],[2,-9,5,6,-10,-4,-8,-8],[-3,-5,-7,-3,3,-1,-2,10],[-10,3,-7,-3,-4,2,10,-7],[6,-3,-1,5,2,8,-3,-8],[-9,8,-9,-5,-8,5,10,2],[-5,8,1,9,1,7,-6,-9],[-7,-3,10,1,6,7,-9,-1],[-3,-8,2,10,-5,-1,6,-9],[7,-1,-1,-6,-10,2,-1,4],[2,2,9,9,-1,-6,8,-9]],[[-7,-3,-5,-5,1,6,2,6],[10,-6,-10,-3,-3,7,4,8],[10,-10,-2,2,4,-5,-8,8],[1,-8,-1,1,10,7,7,5],[-1,-2,10,6,2,2,-4,-9],[-6,-5,8,1,7,-1,-5,10],[1,-9,-8,7,-10,-1,9,9],[-4,4,-4,9,-5,6,9,6],[-1,-3,3,10,-10,8,-10,-9],[-5,8,8,-3,-10,-4,6,-8],[-8,6,4,-5,-7,-8,-3,-3],[9,-8,-7,-1,9,-5,-7,1],[-8,7,1,8,6,-4,2,5],[-9,10,3,2,-7,6,1,-9],[4,-1,-7,-2,-7,-10,-6,-2]],[[-10,-10,6,-7,-8,-8,2,-8],[-1,-9,1,1,-10,9,-6,10],[5,-10,-9,-5,2,7,-9,8],[5,-10,1,-4,-10,8,6,-3],[5,4,-10,4,-10,-4,8,-1],[-1,1,2,-4,8,10,9,7],[-5,-9,-7,7,-6,8,-4,6],[2,7,3,-8,-3,-7,2,-6],[4,-1,2,10,-10,-1,9,-8],[-5,7,-6,10,-1,-4,10,9],[-7,7,-10,-7,-9,-5,-6,-1],[7,8,3,5,-3,-7,10,9],[10,-7,6,1,2,4,-8,-8],[5,2,-4,-1,7,1,6,3],[9,8,-7,1,-6,9,1,9]],[[-5,-3,-8,-7,-4,2,-10,8],[6,7,5,-5,4,-5,3,-3],[6,7,-10,-1,-3,-4,8,4],[-8,-9,8,5,10,-7,3,9],[-5,5,1,10,7,-6,-6,10],[1,8,-5,-9,3,6,-7,-5],[-3,8,6,-5,1,-7,2,-2],[7,2,3,5,-9,-3,-9,-9],[-9,-6,2,-8,-5,-2,2,-9],[4,-1,3,4,-10,-10,-5,1],[3,-1,-1,10,5,4,-5,-8],[-6,-5,-6,3,-6,-5,2,-7],[7,2,6,-5,-5,8,-4,9],[5,1,5,-9,8,1,4,-5],[-3,-9,2,-10,5,-6,-4,10]],[[-1,5,6,-4,-10,4,-3,6],[-7,-5,-1,5,4,-6,8,-2],[-9,-2,10,1,3,7,4,1],[8,-10,2,-4,9,-7,-8,-6],[5,-3,-6,-7,8,4,-7,5],[3,-2,-3,1,10,10,6,-6],[6,6,-2,2,6,3,-2,-7],[-4,-8,-9,10,7,-7,8,4],[3,-7,-2,6,-6,1,9,-3],[-1,1,-1,1,-1,-1,-2,-4],[-4,9,-9,-5,-5,-4,-6,-7],[-7,-9,1,6,-6,2,3,-2],[-4,-4,5,-9,6,5,10,1],[4,4,7,7,7,3,5,7],[-8,4,10,6,-9,-10,-4,-6]],[[10,-2,-10,-2,10,6,-3,-7],[-6,6,8,-2,2,-8,4,5],[-4,10,-7,2,10,-5,3,-7],[2,-2,5,7,-7,-4,-9,-2],[-5,8,7,-1,7,3,7,6],[-1,-10,-4,4,4,-2,-8,-7],[-9,6,2,-4,-3,-7,-6,10],[1,6,10,7,-9,-8,-5,1],[-7,-9,-4,6,-1,8,7,-5],[-9,-6,-2,-5,-1,-9,6,-10],[6,-10,6,8,2,-5,7,7],[-2,6,-7,-6,-2,7,-2,10],[10,-8,9,-4,-3,10,-10,7],[2,-7,-2,7,5,-5,1,-6],[-7,-7,-2,9,-1,-7,-6,4]],[[-6,6,3,6,-9,6,-6,1],[9,-2,-1,8,10,3,-8,5],[-8,-5,-6,9,-10,5,9,1],[-6,-9,-4,8,-10,9,10,5],[-8,-8,-9,-10,-4,-7,5,-3],[1,-9,-8,-8,-10,10,2,7],[-4,-4,4,4,-3,4,-8,-10],[-8,-5,-9,-9,-9,-8,-4,3],[-4,1,-5,7,-7,-7,-10,6],[-7,6,-4,-5,-4,8,-10,4],[-9,3,1,3,2,4,8,-10],[1,-1,1,-9,-10,10,7,-5],[2,-2,9,2,-7,3,-6,-2],[-9,1,-10,-4,7,-4,10,3],[-9,-7,-4,10,-3,9,-6,-8]],[[6,4,2,-8,-1,-5,2,-5],[5,-7,-8,2,-10,5,-2,10],[2,3,1,1,2,5,4,-4],[9,-9,8,2,-2,3,-8,1],[-6,-4,-4,7,10,1,-1,4],[8,-10,-7,-6,9,-3,2,-9],[-8,5,7,-1,3,3,-9,-5],[2,-5,8,-8,-1,-6,-6,-3],[-5,8,10,8,-3,9,-8,1],[2,9,-7,6,9,-5,4,-9],[6,-2,-9,2,-1,-6,-7,-9],[2,8,-6,-9,6,-9,-2,3],[10,-4,6,-2,7,4,-4,-5],[-2,6,-9,4,-1,-8,-5,-10],[-6,3,2,-7,-3,5,5,-4]],[[2,8,6,-7,-6,1,7,6],[8,3,5,9,2,-5,-3,-5],[-8,-8,-4,-3,-9,-2,8,10],[-7,7,5,-2,-1,6,-6,1],[-4,10,4,-10,2,1,-10,-7],[6,-3,-10,-9,-1,-7,6,3],[-4,9,8,3,1,-1,5,-2],[-2,1,1,4,-5,-1,8,-2],[-6,-2,-2,6,9,6,5,-4],[-4,-10,-6,-7,7,3,-1,-8],[6,3,5,1,9,7,-7,3],[-9,-8,-9,-6,-4,-2,4,2],[-3,7,-6,-1,8,-9,2,-8],[-4,6,3,2,2,10,7,5],[-7,-8,-3,-8,-9,-7,8,2]],[[4,-9,-1,-2,-6,-7,6,-3],[-6,-8,9,3,-4,1,-8,5],[-2,-10,-5,3,7,-4,-4,8],[7,-3,1,-6,-6,6,-9,-9],[7,-3,-4,-6,8,5,-9,6],[-6,-2,-4,-1,-5,-8,8,-7],[-9,-9,-7,-3,5,9,-9,-9],[3,-2,-10,-9,10,1,-7,4],[7,8,-6,-2,-10,-6,7,6],[9,-9,2,5,-7,9,3,9],[-7,-7,-7,6,10,-6,9,7],[1,6,3,-5,-6,-4,10,-10],[-8,3,-5,-3,-3,10,-5,8],[2,-9,-5,-5,3,-3,-1,-1],[9,-6,-3,9,-2,-7,-5,-2]]], dtype = "uint16")#candidate|718|(13, 15, 8)|const|uint16
bop_719 = relay.subtract(var_717.astype('uint16'), relay.reshape(const_718.astype('uint16'), relay.shape_of(var_717))) # shape=(13, 15, 8)
func_285_call = mod.get_global_var('func_285')
func_288_call = mutated_mod.get_global_var('func_288')
const_727 = relay.const([7.496564,-8.669171,-7.648700,-1.187808,8.129878,8.060519,1.093561,-8.654561,-8.077333,7.539317,-2.050248,1.060462,-6.301301,8.477846,3.754444,-6.819932,-7.307685,-4.742403,-1.739996,-9.831989,-8.097960,-0.174045,-2.302110,4.857197,1.183284,0.836733,0.008337,-3.202561,2.372624,7.712866,-6.607306,-7.115493,-8.359789,-0.363357,3.980803,-6.876936,-0.422239,5.186125,-2.412172,1.574794,-9.156237,0.157121,-8.515669,8.097354,-3.043761,-7.093195,-7.450833,9.769181,4.444005,8.002776,1.373702,-8.474153,1.315504,-1.011402,-2.113874,8.591666,-5.894554,1.108874,-5.546783,3.133536,7.563347,-2.580382,-1.634460,9.180246,1.291627,-6.077522,-4.574257,-1.951689,-3.027255,5.755236,-8.945116,1.201110,-9.928822,8.795418,1.125568,6.459840,-7.027310,-1.574408,4.789536,1.467426,3.185001,3.518423,-4.738630,3.744920,7.476516,-4.452226,4.147059,-0.625209,-2.930405,-3.868896,-4.103796,-3.126714,6.849934,4.843389,-2.690949,0.469770,-6.392478,-6.309178,-6.506876,-5.630066,-4.321899,-3.581383,-7.642096,4.966121,-2.247270,8.197268,9.768017,-0.434097,-9.644570,-2.857689,-7.515700,-8.181626,-2.825945,3.050707,-1.134720,-7.836445,-7.410064,-1.912579,-8.833061,3.895026,-4.690402,2.307873,8.578767,-3.502214,-5.364911,-0.537724,5.988676,8.333416,6.839295,-4.573100,-2.172625,2.455335,1.964350,-3.324091,1.049184,6.230484,-8.335518,-6.626736,-6.865685,0.406430,8.961521,7.162249,5.754717,-7.924535,4.742937,-7.656899,-3.760235,5.934359,-9.913011,8.373285,6.103383,0.346454,6.749109,0.510165,-8.580245,-8.804922,7.654093,-7.302827,2.019863,1.126947,-3.405457,-1.165096,2.863885,-7.368323,6.754523,-3.915063,-2.402731,-5.483122,7.711058,4.423895,5.971417,3.394025,9.847475,4.795924,-9.857129,-0.627440,-3.955149,7.217226,-3.822359,2.417612,6.443685,-3.724907,3.744652,-6.261386,5.064806,3.134464,2.435364,4.927482,-9.408370,7.796713,2.158703,9.859197,9.535200,-3.449574,5.322179,4.313710,7.464498,-4.058265,2.598095,9.558961,6.975117,5.070670,5.078905,6.225804,5.330143,-7.868126,-8.440770,-5.422018,7.979786,1.741621,4.789349,3.349852,0.684700,8.695985,-8.311448,1.155934,5.593444,0.597532,6.540684,9.893758,1.690894,3.786813,2.069774,4.819545,-8.009744,9.811681,-3.313632,-5.138479,2.650440,-9.367883,-9.287963,6.390241,-9.753747,-7.078633,2.747885,-8.027808,-7.509912,8.323251,2.130725,-0.448361,0.234497,6.302230,-7.588343,7.483005,-5.550037,-5.689675,9.364465,-4.494183,-0.380971,0.001089,-0.822552,-3.610765,-1.054816,4.873379,1.245003,7.004918,1.157425,-9.552109,8.305796,4.399332,5.784848,-3.048739,2.018559,-3.136548,-2.857909,-4.557382,4.553306,4.224227,-7.322373,2.390295,-3.000885,-3.649362,-9.980576,3.137099,2.514551,9.900033,-4.576569,1.118559,-0.826358,5.348344,-2.977720,-7.741305,7.670112,9.797112,-1.797551,3.979168,2.336528,-3.418324,-0.879365,8.250437,4.782146,-9.969628,8.094805,1.814045,0.221466,-3.775104,-9.896025,7.796739,-2.232916,6.839710,4.929827,2.550922,3.609014,-2.702690,0.691758,6.714821,-6.522611,8.581469,3.484100,-9.127613,9.799539,-5.697482,8.062890,0.359433,-1.905448,-1.031003,6.758689,9.771085,8.788654,-9.373088,8.271044,2.783650,0.141945,9.256084,-6.251301,4.063164,-7.508012,5.416017,0.572316,0.727095,-7.379384,-8.267131,6.075690,-8.347233,2.885843,-6.858538,-8.171522,5.061111,-2.334888,-1.673929,-6.286564,-8.289001,-3.344439,-8.631069,5.495888,5.945553,3.958685,7.021540,6.691711,4.452366,9.278382,-8.672429,-0.521387,0.639442,-2.404150,8.349419,-4.926558,-2.074331,9.832421,-3.919822,-8.586541,-2.788633,9.283576,6.205073,4.010744,-7.074080,-4.941743,-3.809304,-8.100926,5.368926,-3.286051,9.928643,-8.689876,4.140939,-9.903678,-3.658320,2.320798,-3.569845,4.539133,-3.875321,-0.788940,9.659494,4.534579,2.031502,4.373203,-3.511024,1.871917,-3.329873,6.068718,-7.234487,-3.774798,7.551436,6.613327,-1.193117,3.944976,-3.908866,4.022351,-2.167483,3.859208,-6.182922,-2.012169,-8.629349,-0.350662,4.268814,-5.710617,7.914005,0.816522,1.083407,-4.650288,2.054934,-5.010272,-9.398217,0.343056,-8.156172,-7.273269,8.795795,0.390707,9.621828,4.094840,-3.552441,-9.524230,-5.891778,-5.998829,-7.405201,0.891227,-6.108334,9.746692,-7.681346,4.315871,-7.061998,2.994234,-0.780822,0.813532,2.119553,-6.351855,7.437212,4.863449,-6.360313,5.719249,5.922752,-8.483939,-1.339662,-5.614663,-3.485831,7.243592,7.885308,3.935599,4.480145,8.741030,1.212040,-6.235966,-7.400140,-2.085527,2.796327,-0.844833,-7.840196,-4.339259,-2.580271,5.203110,-7.103304,8.976748,-9.352832,2.123782,-6.839885,-7.404319,2.170009,-6.633494,-7.102477,-5.431262,-4.164894,-4.174293,-3.529026,7.336322,3.857586,2.069495,5.570352,-2.677461,6.116717,4.157711,-6.435358,6.639747,7.812189,-5.024032,-7.294163,1.904725,9.583942,-6.690437,4.019369,-5.062086,-9.870206,-8.449790,6.359006,7.051287,0.012303,-6.855962,-0.374464,3.891993,1.813706,-2.585396,-4.876512,-8.343883,8.380310,7.048726,-5.432833,-4.704198,-4.042978,-7.971762,1.613634,-6.305684,-9.355366,-3.072922,5.272305,-0.820782,6.101805,-0.127189,3.238529,3.328893,9.155460,6.212483,7.116432,5.828532,-6.574916,2.425939,5.637385,-2.596222,-1.660743,5.070215,-8.987539,-3.037155,-7.625102,-5.068229,5.188095,-4.175040,-3.375542,-5.831093,0.435423,6.391353,8.775025,1.855464,9.113975,-8.925061,8.921292,2.212978,-7.908323,9.483542,-2.290871,-7.877538,-1.532491,7.474449,-7.598659,-8.685212,5.360165,8.971482,-2.730069,5.635720,4.016129,2.299856,8.838862,-3.232307,-9.094148,-2.433334,7.260902,-2.123180,-1.775211,2.648505,6.243013,-8.447979,7.565413,4.218564,2.290652,9.047939,-0.130180,6.320560,7.861040,5.230799,2.553361,3.036201,-3.970699,-8.397138,5.105090,9.073465,6.740870,1.759621,-2.217094,-6.544015,0.638642,-1.958695,-3.587759,-4.318203,9.577149,6.698715,5.744862,-2.011242,-1.289880,-5.619386,-5.196946,-7.165805,-7.083425,-8.396835,-2.885075,-0.817211,6.200576,-2.799206,-5.079478,6.491910,-8.863225,-7.113372,6.397546,-8.872820,-9.008461,5.224258,-7.286069,-4.100006,7.178869,9.181087,-1.913944,-2.795028,-2.645749,9.997175,0.724099,7.691078,-4.748037,4.693110,-9.923832,9.626225,1.235253,2.174086,4.761990,-7.193867,-0.342060,-2.669008,4.324491,-8.320613,3.618099,-8.670792,6.962167,7.788598,9.823836,1.936991,-9.598142,-0.270389,-3.129210,8.628144,-0.697037,-8.722790,-1.697089,6.926201,3.652965,0.859499,6.016350,4.943131,3.345221,-7.751406,-5.244056,-9.973220,7.309119,-0.379262,-2.189358,9.662462,6.462666,-8.810237,-3.936286,7.242547,3.726617,9.716132,-6.256658,0.791361,7.409990,-9.579371,-1.935591,-7.388007,-6.890881,3.947126,-7.343041,8.038475,-9.345005,3.171533,2.111784,5.433637,-5.119172,5.393390,8.137194,-1.367049,7.958738,-2.006544,-4.011835,5.738539,1.358720,2.709310,8.190364,8.610233,-5.750724,-6.071019,9.645886,9.681404,-6.993487,-2.143560,3.252981,-5.807589,-6.562976,-2.781371,2.911245,0.598868,-8.989958,5.709142,3.312973,-8.426234,2.150399,7.236324,-3.320269,-7.168489,5.072137,-7.117491,-9.293734,9.234880,-8.068946,4.083314,0.229409,-4.868524,5.848275,3.900723,8.809576,2.719999,1.493671,4.452892,6.137558,-1.936533,7.740807,9.882585,-6.000512,-9.308148,0.908298,-1.701312,-2.696492,-3.365755,-1.178243,-2.608100,9.851109,3.794685,-0.736428,-2.581470,-3.312586,-1.335859,-8.756289,2.328713,8.458540,7.012785,4.981250,6.809393,-0.754418,-4.072250,-4.764400,-4.843603,-3.080780,-1.985609,2.301602,-2.742119,0.465908,2.031571,-6.929684,-4.649212,-4.642164,-4.521380,-4.999637,9.844715,-5.904161,8.653511,-7.175800,-9.636883,3.552740,9.395103,-7.839096,4.457606,-2.046660,1.701728,5.084726,-2.471877,4.376146,-2.322672,8.511007,-7.971185,9.458305,-3.502915,-6.189190,-3.181199,9.586765,-6.582320,9.215613,3.938830,-3.257602,-3.032709,5.403547,7.156313,-7.588263,-0.829473,0.041749,2.874878,-3.681035,-8.716385,-5.148566,7.071018,-5.100674,2.494520,8.926052,2.781522,1.561323,1.731244,5.039720,7.669416,-6.822776,6.532459,0.949915,-8.464872,-4.770603,-9.753084,3.088029,-6.912527,3.189381,5.255502,-5.030260,-6.742391,6.630327,-8.242549,-8.024152,-7.259951,6.993746,-7.133040,-7.996537,0.547290,9.293773,5.679772,8.537371,-8.894172,-7.008305,3.417736,-7.485271,-7.686278,1.814581,-6.641124,8.654300,4.990783,-5.769417,3.833023,-9.430136,7.342907,-0.303349,6.829532,-2.280334,-4.857205,5.073834,-3.007744,3.245830,8.652718,6.566442,-5.953319,-6.933334,-8.394747,3.783647,9.743125,-5.160140,5.869807,-4.786658,-3.967433,-3.696727,4.983465,-9.174380,2.123397,-2.892334,-4.559328,0.662688,-0.624439,-8.854573,-2.192233,-5.655188,-0.029765,2.384970,1.297059,-3.466667,-0.816737,-6.118379,-2.879202,0.138272,-5.922908,3.671095,-3.699654,4.922952,-0.302521,5.502120,6.206616,1.809479,-5.170454,2.927680,-2.328950,4.617086,-2.301508,-6.649794,-1.549386,0.968480,4.126392,4.222551,3.071083,0.133473,6.674763,-1.437711,-1.353979,-6.675270,-5.176062,1.154271,0.540112,-6.942175,-0.908755,-4.076823,-1.357668,-3.059575,-1.647715,1.622591,-4.133601,-4.300893,8.894557,7.750748,-3.477311,-3.973590,1.008819,0.219569,-8.881246,8.663320,-3.949178,8.924721,4.076218,-0.774542,-9.382607,3.381681,-0.076009,-2.501762,-7.317834,-1.334953,4.534673,-1.410625,-3.891723,3.910302,7.035992,1.180708,-2.568262,-1.321720,-0.565255,-2.562735,6.198525,-3.549309,0.311894,4.059033,-1.445636,-7.748789,1.209588,-3.804874,-6.284392,-2.326504,-8.440404,3.358018,0.591486,-6.355046,-5.120397,-1.146445,-2.525150,-4.304780,4.386762,-9.135197,1.172190,9.377199,2.798065,-8.282469,9.818642,5.146365,-6.631041,-6.600978,-3.473947,-2.778456,0.606415,-3.572642,2.572069,1.708156,8.861457,-8.060113,-7.592439,8.137942,5.547223,2.003288,-0.536760,7.726533,2.883855,-2.818740,-2.308231,2.974430,6.938296,-4.379212,-9.212959,7.352434,6.554232,-5.981163,9.307188,2.498036,5.940591,7.939890,6.343522,-2.559567,6.766774,-9.422342,3.022825,4.349918,-1.841083,6.338639,-0.279816,-9.463926,-1.062546,3.172043,-0.789494,7.543635,-1.043205,5.078992,3.088511,-3.305592,1.720780,-8.011696,-6.539353,0.120835,1.893622,9.238050,-0.236548,8.936831,-9.674382,-7.547919,9.731578,-4.135774,0.403508,4.889770,-3.081491,2.374037,5.644114,-8.593653,6.968138,-7.294102,6.201372,-0.422196,1.410706,-4.701429,3.484400,-2.995521,-5.194187,-0.384418,-8.660442,-6.747058,8.751915,-3.692574,-0.232809,8.563340,5.227140,-1.886245,3.566097,-3.950189,2.317782,8.301239,4.878814,8.671825,-8.011019,3.909330,-9.291889,5.931503,6.962637,-3.283967,3.545341,-9.216257,9.871957,3.980317,1.862828,9.368741,-3.978395,4.792990,-5.079364,-8.467984,-2.396834,2.681085,7.870827,8.444847,0.091367,-0.626906,9.049043,6.796139,-4.450973,3.465028,-3.627035,-7.531836,1.740891,-7.323510,-3.861515,7.108052,5.782829,6.359611,2.500103,7.848349,-9.344629,1.420126,-6.567774,-9.095677,2.298124,6.125843,-8.323257,8.794932,1.694364,4.291776,-0.744118,7.438104,-4.437717,-6.592324,8.478855,-5.963255,-2.458437,7.517573,-5.646137,8.159634,5.809562,2.664357,-7.217267,-8.167964,-5.583078,1.060911,-8.143440,-4.304963,-9.564502,-0.147403,9.848808,9.682204,5.018340,-3.677128,4.695144,8.278171,-8.763317,-6.829168,2.518755,4.120828,5.704672,-9.703467,5.274654,-6.434933,-8.839089,0.990440,9.996721,7.792054,1.887095,-5.697679,3.699702,4.844471,-3.802970,-0.467226,-1.644664,7.175390,-0.533775,3.442380,1.678493,1.015755,8.947744,7.809699,-4.037634,9.728410,-4.873229,-7.271539,1.034546,-7.703547,5.168116,-3.416567,-7.183531,1.929794,8.852418,-3.904128,-5.967808,-8.655427,-6.348980,-5.271768,-3.404829,-0.256846,4.971910,-7.233316,-3.690880,-7.398926,5.809862,-8.173365,3.028485,0.207811,-0.580135,9.253699,8.836236,-3.092760,6.464706,-5.656385,-4.388979,-9.364694,1.401217,9.106691,8.947643,-1.341535,-0.805645,-2.565294,-2.325800,-1.817867,7.856004,-4.812290,-4.517880,-3.498965,2.315067,9.952562,7.651723,-5.674229,4.895106,9.240218,0.958925,9.251231,-9.045691,4.810542,2.574708,1.497168,3.838982,-4.498249,5.381609,1.598237,7.060227,-4.213746,2.163575,-2.319169,-0.200931,3.727830,7.919379,3.783934,8.878813,-7.813068,4.004354,0.990519,0.061020,-1.387667,7.758938,-2.682315,-2.438488,0.088711,6.184224,-7.242676,8.069069,5.785426,3.541519,-3.918873,-8.244126,6.568723,2.484002,-0.957765,-9.361053,5.099015,6.221126,2.701712,-6.548934,5.987058,-6.439255,-9.901843,3.530944,-5.381754,-1.313701,6.705425,8.127008,-2.732711,-0.801849,-4.300970,0.992474,-9.826035,8.177821,2.593906,-5.448230,6.855065,-0.935432,5.604861,1.311971,-6.127191,-6.703043,-3.838629,2.593492,-4.765008,-4.221974,-1.564732,-2.296814,-8.266127,-1.801258,-9.928872,-8.329223,2.239606,9.909446,-4.766292,-6.200836,-1.147944,9.304535,7.644210,-0.374169,-9.144415,-4.006097,-0.148805,1.863496,-3.425472,-2.421049,-8.672222,-9.682755,-3.817233,-5.461978,-2.326215,4.334114,-2.512565,-5.340238,7.464771,5.220121,4.822009,3.816220,7.082530,-1.017151,-1.427099,-6.832788,6.521352,9.186373,-2.208153,-7.419647,-1.555870,4.333544,-1.762383,-8.214277,-9.871725,6.399129,4.913766,-2.413826,4.680139,-5.768422,8.581247,6.292952,7.357818,-0.998139,-7.609997,5.869208,9.661457,0.494957,-3.423112,1.576254,-0.381262,-3.518365,1.624736,-1.253559,3.752906,3.314118,1.967616,6.185468,1.445823,-4.247538,-8.809168,-8.092808,-0.547455,-3.577667,-3.973742,-6.381675,-3.124814,-3.190220,7.017365,3.866997,-9.515268,1.551578,5.218560,-5.624176,6.126942,-8.092753,-9.260100,1.820881,6.456616,6.187806,0.991048,-6.342037,-8.301648,-2.403534,8.209985,-9.849692,-5.453412,1.271231,-4.895524,-0.085119,-2.584547,-2.365638,9.866744,3.472722,1.391641,-4.230300,-7.736050,-4.145700,-4.634014,-3.315758,-7.715250,9.353824,7.809155,-0.343434,-2.276759,1.636831,-7.516587,-5.256801,9.206208,-5.216157,-1.792030,1.240856,5.911865,-8.178935,-6.451407,1.201014,1.166793,1.937259,3.078049,7.394227,-5.525429,-2.121799,-2.839041,7.348579,-6.585165,-5.518110,-7.877597,-7.759374,7.677924,8.089449,9.975185,2.823759,8.097711,8.496214,-2.590475,7.959467,1.928261,5.081068,-4.888711,2.135337,-5.719403,9.927387,-3.854739,-9.117411,-1.220544,8.653617,-0.696539,0.430648,-9.174966,-8.575608,2.109557,9.373897,7.520240,-0.013565,6.105179,1.841587,3.641059,5.909135,-6.329973,4.211919,1.595766,-9.604335,8.331141,-8.790679,5.447156,2.728312,-2.522530,7.148659,0.010210,2.327517,-4.345076,2.791857,8.017495,9.820564,-6.947459,3.891234,3.124035,-4.441693,5.865405,-3.655464,6.046271,0.809628,8.873224,-8.699365,-5.997525,9.511219,-9.442585,-4.141847,4.675337,9.298777,-5.723609,-3.032937,-7.062477,0.172079,5.660509,-3.923321,6.901564,-9.837435,2.659571,2.267313,-8.578349,-6.635995,7.244818,-6.282296,-9.103760,1.462833,-3.072950,-4.141873,-3.396066,-1.653135,-5.111726,-4.278407,-1.115061,-3.536167,0.944304,1.670930,-7.294545,-2.933717,-6.888398,9.011956,-2.281661,-4.870637,-2.664556,-0.331134,-2.636633,-8.998379,4.746138,-7.861216,2.837627,2.729625,-1.477639,-6.949318,-9.323621,2.456018,6.453940,2.642407,6.272006,9.317830,5.894947,-9.874765,-6.014219,-0.021182,5.962593,-1.409516,4.974411,-3.634941,-8.317032,-7.329915,2.302074,-8.635034,-3.559082,4.398212,0.327788,0.009284,-7.181344,-2.859278,-3.452914,-9.507002,0.980521,-9.111661,0.453404,-7.785999,5.867671,-4.752338,-2.533139,-6.875924,6.863633,-3.747833,-1.159768,6.934327,2.144413,2.094229,-5.365255,-2.726151,-9.816969,-7.732904,3.527442,-1.581338,1.042967,3.073182,9.788655,8.154159,8.924767,2.988505,7.056203,-3.628132,-4.758718,0.185941,-2.658739,-7.994892,-2.281103,-8.884741,4.807930,2.294310,9.087519,4.814816,-4.059104,4.857163,-9.191003,8.030719,5.910589,8.862353,4.443271,-1.849678,-8.479279,5.315897,1.506686,-0.164203,-1.262921,-9.153975,-3.650329,-8.391097,-8.411773,1.514058,-1.443190,-9.516386,-5.966641,6.722521,-6.625527,0.669819,-5.702140,-8.584886,-7.038090,-8.166663,-1.392256,0.389032,-6.965740,8.147652,3.364726,-0.750003,8.932091,-6.974271,-3.739744,8.679204,9.924240,3.556432,6.840707,-8.073266,-8.222100,-5.320722,9.965785,3.154128,0.848004,-5.907081,7.202853,-2.423433,5.940251,3.462177,-9.655211,4.841467,0.205892,5.810850,-7.176797,5.625256,2.120746,1.780503,0.339139,-3.674412,9.291300,1.100649,7.614396,5.380340,-7.623708,-7.460914,6.713295,2.655541,-5.178239,-8.594679,-1.192598,5.591819,4.934678,-2.133314,-2.257286,-5.205854,7.959205,-4.660639,8.797433,1.626423,-2.027275,0.593397,2.108371,0.456603,7.717043,-0.326435,6.064088,8.932709,-8.290730,4.415382,6.699649,-5.406845,6.781586,9.448279,-8.398899,3.158612,0.877350,5.376059,5.097875,-3.582868,-0.348083,-4.960603,5.078636,-9.433678,3.577497,-0.709995,4.350844,2.063530,2.214363,-5.733281,0.432734,4.784764,-4.324383,-1.991932,0.852043,-3.231396,2.355038,0.087435,2.476544,5.626355,7.844384,0.237423,-7.968854,6.812219,2.591709,-5.441235,1.019902,5.207155,-1.614173,1.861295,1.658433,2.577848,-3.818332,9.813661,-5.802834,-5.724902,-5.020870,3.595838,-2.132560,-3.901192,-4.748084,6.084597,-8.760892,5.437522,-9.259400,-5.254326,-3.439390,-3.959733,-2.715983,-4.325879,-8.499243,-0.521615,-6.288073,-1.832178,9.624607,0.550748,9.115572,7.795409,0.106656,-8.299284,-2.663670,0.686636,-1.811283,7.566297,5.949240,7.587521,4.489029,-2.684081,0.524328,-3.766723,-6.371826,-9.316928,-2.749812,8.471214,-0.201182,1.973068,2.846123,-8.154121,0.216896,-5.409278,9.799796,-5.846993,-3.939430,4.711857,5.871327,-3.270191,3.073849,8.531636,-0.550007,2.551695,-0.067327,6.070359,-2.996754,1.404194,-3.638051,-7.067238,-7.264654,-8.167311,-2.609165,-8.489978,7.458110,4.358911,-5.540217,9.502002,1.988872,7.058436,3.376856,5.330027,-2.787718,1.000809,0.716818,0.529064,4.597716,-5.435163,6.934324,6.803234,9.882281,3.468086,-4.830448,-2.079903,0.488592,6.551523,3.802712,-2.261963,-9.275247,-9.273734,-8.905291,9.225494,7.437665,2.427064,-9.138183,1.459885,0.259001,2.832200,2.991576,2.816448,-3.969149,-8.611087,-7.321016,3.070907,-6.088512,-3.354687,5.573806,-3.870273,9.304466,7.094552,8.927313,4.900136,0.295667,-0.643061,-6.018914,-6.603583,-4.880188,-0.543088,0.512589,1.829038,3.928783,-2.443750,0.026647,4.910106,-2.199878,9.399947,-7.896266,-9.591111,2.464046,-9.398784,3.827585,-8.778681,8.991509,-2.635718,0.900400,7.296199,6.191565,4.828494,-6.914248,2.472247,-5.192361,-4.007946,1.319457,-3.220869,6.502062,-6.729481,5.708475,7.965827,-7.909345,-3.648043,7.202307,-2.475456,3.040069,-9.195650,6.832511,9.040663,-5.503770,-2.548237,-4.671663,-2.502072,5.314289,-1.012693,-8.199383,-8.660752,1.324066,-8.733726,-6.514691,9.298423,-3.210097,7.755158,6.317085,9.758580,2.713728,5.457148,4.401877,3.245270,4.965448,1.174772,5.251917,-7.087654,-4.363076,-5.693250,9.329089,4.803146,3.034577,1.109165,5.356898,-0.465573,-2.797581,-0.940392,7.125119,1.786392,-0.784379,-3.448560,-4.548337,-9.715546,8.774846,0.948313,1.011415,3.569704,9.635605,8.337738,4.705064,4.519434,-4.941879,5.557933,-4.390502,-3.769267,-8.821367,-7.502086,9.665566,0.204207,0.774694,4.263300,7.479453,8.583872,-1.586135,1.651504,-4.731677,5.391449,1.790333,5.845589,4.532550,-5.370387,-6.476398,-0.726986,6.297282,2.192653,-1.503629,4.822530,2.115859,9.895819,-1.404013,2.682169,6.691425,2.831606,-3.024774,-6.817611,-6.502397,6.399575,-0.090879,-7.473335,2.402368,-6.483868,-8.903623,-7.544158,5.060962,7.463913,-6.345456,-3.615577,-1.637780,-1.920349,-6.523972,-5.246459,4.306366,-6.295873,-1.177401,-1.331852,-5.976156,2.352498,-9.058136,-9.887928,9.498761,9.469865,-4.774800,-8.052151,5.677189,6.214247,3.336204,-7.755254,0.803983,-2.296450,6.166261,-8.977195,-2.809372,8.056915,3.624790,-9.399367,3.899436,-1.747036,9.614190,-5.662855,-8.915367,4.795604,-7.178593,-4.295216,-2.547860,4.264046,6.698978,1.095444,7.127019,4.919934,-0.723026,-1.986400,6.173189,7.873643,3.747442,-6.205357,-3.957962,6.307610,8.013748,-1.051051,4.343237,-5.198046,1.061479,-7.651875,-5.166893,6.739691,1.533201,-9.979376,4.870844,6.194934,-7.636569,-2.542850,8.390066,7.537998,3.904525,-1.124794,6.911586,-5.434924,-7.747798,0.520105,-6.839571,7.542317,-2.894476,-5.212512,-2.307477,-6.386802,5.362359,9.679379,9.715297,-0.720409,-8.776044,9.460584,0.785352,0.583161,-2.542653,-8.215306,5.942498,-7.531091,3.198932,9.250117,-2.378314,-7.492775,-7.682781,5.265592,-5.099449,1.637488,-5.875666,-0.678174,-0.179654,-5.763382,5.423129,7.458802,-7.871509,-1.100512,-2.109578,7.642516,-0.222021,2.558707,0.869429,-6.795423,-6.584196,3.512832,-5.042846,-0.812913,9.858366,8.182858,8.341965,6.809302,-8.074030,4.809688,-8.438136,9.027599,8.360440,0.058054,2.222452,-2.754307,0.796250,6.656133,-3.328999,-6.868591,-6.322483,-3.649097,-5.831147,0.032703,4.956329], dtype = "float64")#candidate|727|(2112,)|const|float64
call_726 = relay.TupleGetItem(func_285_call(relay.reshape(const_727.astype('float64'), [12, 16, 11]), relay.reshape(const_727.astype('float64'), [12, 16, 11]), ), 0)
call_728 = relay.TupleGetItem(func_288_call(relay.reshape(const_727.astype('float64'), [12, 16, 11]), relay.reshape(const_727.astype('float64'), [12, 16, 11]), ), 0)
bop_730 = relay.floor_divide(var_717.astype('float32'), relay.reshape(const_718.astype('float32'), relay.shape_of(var_717))) # shape=(13, 15, 8)
output = relay.Tuple([bop_719,call_726,const_727,bop_730,])
output2 = relay.Tuple([bop_719,call_728,const_727,bop_730,])
func_734 = relay.Function([var_717,], output)
mod['func_734'] = func_734
mod = relay.transform.InferType()(mod)
mutated_mod['func_734'] = func_734
mutated_mod = relay.transform.InferType()(mutated_mod)
var_735 = relay.var("var_735", dtype = "uint16", shape = (13, 15, 8))#candidate|735|(13, 15, 8)|var|uint16
func_734_call = mutated_mod.get_global_var('func_734')
call_736 = func_734_call(var_735)
output = call_736
func_737 = relay.Function([var_735], output)
mutated_mod['func_737'] = func_737
mutated_mod = relay.transform.InferType()(mutated_mod)
var_873 = relay.var("var_873", dtype = "uint16", shape = (3, 8, 7))#candidate|873|(3, 8, 7)|var|uint16
const_874 = relay.const([[[-9,7,3,-10,-8,4,2],[-8,-6,-2,-6,-3,7,-7],[1,2,8,-1,-5,-7,-10],[1,-10,10,9,2,2,-6],[-5,6,6,5,9,2,-6],[7,3,8,8,-9,2,4],[-9,3,-5,9,8,5,1],[-3,8,3,-1,-5,10,6]],[[7,4,-4,9,7,-1,3],[6,3,1,1,-5,4,9],[-5,-6,7,-6,8,-10,-3],[-1,9,10,-7,5,4,10],[1,-2,6,-7,-9,-4,10],[1,9,2,9,1,-3,-4],[8,7,-3,6,-8,-2,7],[3,4,-3,-7,-10,-8,-2]],[[1,10,-10,-1,-5,-4,-1],[7,4,7,3,10,8,-6],[-5,9,-6,5,5,1,-2],[-2,-1,3,10,-5,2,5],[-7,6,9,8,-4,1,9],[-9,7,6,-10,-3,-8,5],[4,-8,1,5,-9,5,-7],[1,8,-9,-1,3,1,-4]]], dtype = "uint16")#candidate|874|(3, 8, 7)|const|uint16
bop_875 = relay.not_equal(var_873.astype('bool'), relay.reshape(const_874.astype('bool'), relay.shape_of(var_873))) # shape=(3, 8, 7)
func_159_call = mod.get_global_var('func_159')
func_162_call = mutated_mod.get_global_var('func_162')
const_882 = relay.const([1.900108,-3.793554,5.764389,5.263329,-0.024233,-3.517851,-0.367306,-3.982881,-9.525433,-0.365576,-2.771434,9.476552,1.492938,-3.891038,-4.894731,5.460255,-6.224360,-4.472049,-3.487820,-2.023074,-6.910112,-5.738649,-7.741853,1.546298,-9.879702,8.253820,-0.957723,-1.360186,8.601090,-6.396178,-9.953154,0.862432,1.694958,-4.124176,9.408532,-4.967204,4.192490,-8.246983,6.961293,-7.671000,5.523683,5.059775,-5.020985,8.046155,-3.744937,-8.342484,-4.135314,2.555548,6.720675,4.895702,0.671730,4.878341,-4.957582,-1.790680,0.251663], dtype = "float32")#candidate|882|(55,)|const|float32
const_883 = relay.const([-9.717609,-1.371076,1.575255,6.469832,6.996563,6.163904,8.028801,1.603063,9.824261,2.923312,4.867813,-6.357565,6.342419,2.339264,-5.573152,0.503332,-6.775968,-1.044500,-8.537466,7.380323,3.313452,6.654436,-5.999842,-8.986952,3.657041,-3.106476,6.968287,-1.667816,-6.728539,-0.738474,-9.120982,5.403819,6.067579,-5.551313,1.033668,-7.408226,-9.831469,6.421556,-5.258698,-2.051403,1.869772,-9.712223,6.111267,-5.821319,-8.022210,-1.522318,-8.326874,-2.044471,-0.770688,-0.209866,-0.713883,-6.563505,-6.416214,5.483996,9.973814,-7.226305,-4.950037,-4.186548,2.563545,5.554312,8.259058,3.021884,0.434689,1.260733,-7.006022,0.818193,-8.110012,-3.417740,-4.087376,6.305138,9.371258,-0.614294,5.396378,-2.985022,1.413445,-6.769905,0.177236,0.384037,9.346993,-1.255782,-8.770505,4.962889,-9.859200,1.962170,6.582931,-7.062036,-0.003051,1.897190,0.462817,-3.987259,5.389921,2.434406,-0.235717,-0.501621,-3.701843,-2.772992,-9.882977,8.151401,9.459845,5.477670,-2.426210,2.819253,3.456805,-3.124744,-9.102924,8.624533,3.531280,8.030441,6.699865,-3.184730,-1.308254,-6.757931,-4.565216,8.589472,-9.658971,-2.276609,3.099213,4.228663,-9.028458,7.129732,5.658845,7.789542,-6.185844,-6.332361,-0.726129,8.524078,1.749386,6.257602,4.261833,5.177674,-1.584690,-3.534058,-2.120271,-1.372956,4.162857,6.326872,-2.710552,-3.300553,9.478540,8.245698,3.976469,5.801600,-7.690158,-7.817847,7.052208,-7.116825,4.986902,3.821518,-5.462183,0.980246,-6.918795,-9.338283,1.150680,3.537424,-9.164922,-2.537132,8.854144,-2.745241,-4.128783,5.132235,3.484413,6.302897,4.790485,-4.885700,-9.715147,9.107551,-3.749459,-4.655803,-5.190995,7.190479,-4.423917,-1.934073,5.582016,8.848357,5.189641,1.317820,-1.390850,-9.466910,-2.557263,-9.845411,-7.700501,1.526548,0.661015,-7.965140,4.128284,-7.867329,9.245308,5.251237,-7.904362,-9.136641,9.803713,-0.608049,6.672545,6.125017,5.543098,-9.801199,-9.953006,-2.762506,8.095070,0.584526,-5.014748,-3.767447,0.041982,-8.276232,8.457649,4.510257,0.678585,-7.449132,-3.408351,-5.882991,1.815604,0.417484,-2.393716,-4.803901,-9.172686,-9.361366,4.007202,-4.929815,-2.851647,-3.393961,-9.158426,-6.278515,3.774642,-6.395097,9.574591,2.321695,2.127650,-6.800777,4.640702,-8.079855,-1.197706,-9.654184,5.645720,-0.262518,-3.770251,6.632118,0.094936,-7.991790,2.679734,-7.730892,7.351020,6.289626,9.444603,-1.676662,-8.146497,-9.884650,8.233947,7.927156,-9.127318,-2.398521,-5.094191,3.141021,9.964025,2.087020,-1.666920,5.849909,0.736128,-7.343517,-3.892921,8.177140,3.023726,-5.082743,3.915979,-3.031481,5.718444,-3.584823,-3.203600,1.633282,1.445302,-6.130138,9.792436,4.526295,7.689848,8.317571,-0.727284,-2.877653,-4.849007,-9.004168,-5.210471,2.505637,7.338106,-1.334203,8.988500,3.545912,-0.041966,-6.772344,-5.415954,-1.406429,-2.543734,2.257193,1.440786,-2.005082,-1.791158,6.110517,1.590751,9.797736,-1.946709,5.046623,5.363142,-9.212723,-2.707856,8.654774,-9.417266,-3.363347,7.822161,7.757743,-7.319468,6.290952,-6.427743,6.865714,5.384540,-3.414899,-3.070247,-9.789536,-1.887777,8.135611,6.732478,1.376655,3.970862,-6.919941,-7.113152,4.702770,-8.846978,4.812037,8.711727,-0.110620,0.532645,-1.446095,-6.301381,-9.073419,5.266995,-2.581636,-3.136180,-6.561939,2.468754,0.296570,-7.751417,-7.925299,0.096832,8.533165,6.233951,5.289624,-5.161634,-6.731157,-7.966674,7.176760,1.766635,7.936093,-9.261776,7.842902,-8.115579,9.848985,6.408080,9.622994,0.901723,6.420326,8.851475,-2.724131,-7.111104,-4.832505,2.904331,-3.939576,4.423374,-2.965921,4.698648,-3.540307,-3.916306,-1.265970,6.072502,-4.016507,-5.336649,9.255939,4.905714,4.781364,3.771413,-6.629991,2.873647,9.241203,-1.830425,-7.172467,9.277408,-3.326349,-4.893953,3.237180,-1.754138,0.289733,2.096517,-4.771330,-2.614318,-4.555859,-9.450514,-7.213381,5.101099,-0.969388,3.554434,9.303562,9.367547,1.936340,-5.926758,-0.932932,-1.430881,8.314413,-0.207732,-2.609277,5.086938,-7.534793,-8.519595,7.127548,-1.856555,0.495868,4.214595,-2.130173,-3.944253,-9.764394,-7.919677,-5.983087,-5.341797,-7.637110,3.480668,7.512230,9.873610,-3.211146,-5.368179,1.161836,-8.027408,3.422881,1.705264,-2.642319,3.621091,-7.246915,7.101438,-5.065303,-8.912487,6.855535,-0.741239,-8.121871,-9.564263,0.099574,8.486487,-6.377412,9.019880,1.564145,3.900803,7.803661,-9.291032,6.246778,-8.002923,-8.193375,-5.071663,-6.302937,-7.818771,8.788726,-7.267201,-3.053491,7.991676,6.385561,-1.415628,-0.430939,-8.162992,-5.491173,6.459021,3.958761,1.202601,9.765899,2.632238,-2.607736,-2.611263,-8.930627,-6.653198,-3.367536,4.171227,7.344264,-8.079314,-9.851958,0.213402,-4.734084,-7.571542,-5.500694,0.124596,8.891111,3.871079,-4.049975,3.316213,-3.935362,7.045133,-0.052024,-5.663002,-7.767982,7.692951,-5.927373,8.512524,9.517235,-7.818610,-7.816731,1.627861,-7.112058,9.647352,1.045061,3.019258,5.677149,-2.917274,-4.148676,9.701003,-2.371018,7.138865,0.020126,3.045766,-2.543274,-3.803462,7.987039,-8.237624,-4.946333,-5.563389,7.383601,-2.020078,6.629702,-8.361534,8.353590,-0.501748,-2.812156,-8.228457,2.004164,-3.384417,0.952604,-4.875262,5.710301,-4.048253,-7.569006,4.668589,2.173567,-2.685385,-9.941718,-7.688415,-8.046784,1.355400,-8.175246,-1.874034,7.340186,2.040279,5.391391,9.065147,-0.907186,0.675390,0.245607,-9.485477,-4.358885,2.247989,9.069368,-7.892295,-4.457073], dtype = "float32")#candidate|883|(550,)|const|float32
call_881 = relay.TupleGetItem(func_159_call(relay.reshape(const_882.astype('float32'), [11, 1, 5]), relay.reshape(const_883.astype('float32'), [11, 10, 5]), ), 1)
call_884 = relay.TupleGetItem(func_162_call(relay.reshape(const_882.astype('float32'), [11, 1, 5]), relay.reshape(const_883.astype('float32'), [11, 10, 5]), ), 1)
bop_886 = relay.less_equal(const_874.astype('bool'), relay.reshape(bop_875.astype('bool'), relay.shape_of(const_874))) # shape=(3, 8, 7)
bop_890 = relay.right_shift(call_881.astype('uint8'), relay.reshape(const_883.astype('uint8'), relay.shape_of(call_881))) # shape=(11, 10, 5)
bop_893 = relay.right_shift(call_884.astype('uint8'), relay.reshape(const_883.astype('uint8'), relay.shape_of(call_884))) # shape=(11, 10, 5)
output = relay.Tuple([const_882,bop_886,bop_890,])
output2 = relay.Tuple([const_882,bop_886,bop_893,])
func_900 = relay.Function([var_873,], output)
mod['func_900'] = func_900
mod = relay.transform.InferType()(mod)
mutated_mod['func_900'] = func_900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_901 = relay.var("var_901", dtype = "uint16", shape = (3, 8, 7))#candidate|901|(3, 8, 7)|var|uint16
func_900_call = mutated_mod.get_global_var('func_900')
call_902 = func_900_call(var_901)
output = call_902
func_903 = relay.Function([var_901], output)
mutated_mod['func_903'] = func_903
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1115 = relay.var("var_1115", dtype = "float32", shape = (8, 6, 4))#candidate|1115|(8, 6, 4)|var|float32
uop_1116 = relay.sin(var_1115.astype('float32')) # shape=(8, 6, 4)
bop_1120 = relay.less_equal(uop_1116.astype('bool'), relay.reshape(var_1115.astype('bool'), relay.shape_of(uop_1116))) # shape=(8, 6, 4)
output = relay.Tuple([bop_1120,])
output2 = relay.Tuple([bop_1120,])
func_1134 = relay.Function([var_1115,], output)
mod['func_1134'] = func_1134
mod = relay.transform.InferType()(mod)
mutated_mod['func_1134'] = func_1134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1135 = relay.var("var_1135", dtype = "float32", shape = (8, 6, 4))#candidate|1135|(8, 6, 4)|var|float32
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1136 = func_1134_call(var_1135)
output = call_1136
func_1137 = relay.Function([var_1135], output)
mutated_mod['func_1137'] = func_1137
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1171 = relay.var("var_1171", dtype = "float64", shape = (14, 3, 10))#candidate|1171|(14, 3, 10)|var|float64
uop_1172 = relay.cosh(var_1171.astype('float64')) # shape=(14, 3, 10)
output = relay.Tuple([uop_1172,])
output2 = relay.Tuple([uop_1172,])
func_1175 = relay.Function([var_1171,], output)
mod['func_1175'] = func_1175
mod = relay.transform.InferType()(mod)
mutated_mod['func_1175'] = func_1175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1176 = relay.var("var_1176", dtype = "float64", shape = (14, 3, 10))#candidate|1176|(14, 3, 10)|var|float64
func_1175_call = mutated_mod.get_global_var('func_1175')
call_1177 = func_1175_call(var_1176)
output = call_1177
func_1178 = relay.Function([var_1176], output)
mutated_mod['func_1178'] = func_1178
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1234 = relay.var("var_1234", dtype = "uint8", shape = (11, 3, 7))#candidate|1234|(11, 3, 7)|var|uint8
var_1235 = relay.var("var_1235", dtype = "uint8", shape = (11, 3, 7))#candidate|1235|(11, 3, 7)|var|uint8
bop_1236 = relay.bitwise_and(var_1234.astype('uint8'), relay.reshape(var_1235.astype('uint8'), relay.shape_of(var_1234))) # shape=(11, 3, 7)
func_432_call = mod.get_global_var('func_432')
func_434_call = mutated_mod.get_global_var('func_434')
var_1240 = relay.var("var_1240", dtype = "float64", shape = (1155,))#candidate|1240|(1155,)|var|float64
call_1239 = func_432_call(relay.reshape(var_1240.astype('float64'), [15, 11, 7]))
call_1241 = func_432_call(relay.reshape(var_1240.astype('float64'), [15, 11, 7]))
func_1175_call = mod.get_global_var('func_1175')
func_1178_call = mutated_mod.get_global_var('func_1178')
const_1243 = relay.const([-5.362320,8.214861,-9.275777,-2.392776,2.882851,5.147550,-2.177221,5.809262,-0.427815,-6.750898,7.496500,-2.142317,-4.532120,0.531296,8.883434,7.442672,8.872374,-1.223759,-9.839007,8.521488,-9.935462,-6.454517,-9.069932,3.786138,4.964469,-5.944113,2.352469,-1.096012,6.016722,-7.194823,4.838275,-7.445445,-6.893993,-8.007022,5.703156,-7.851591,-5.903188,8.170612,-8.730720,5.622656,-5.868112,-5.405039,8.465679,9.300096,-9.635481,7.059191,-2.071557,2.040861,-0.623767,9.515665,2.659672,5.693804,-6.289068,-3.932371,-9.153592,-6.361404,2.592525,-6.415430,-4.121050,-4.941100,7.640340,-1.175396,3.541730,3.132341,-1.196578,-2.337123,-9.396796,1.049130,-9.190562,-6.033298,-0.234183,1.876115,1.076477,-9.642413,5.057684,1.195905,-7.902706,-1.850930,4.274464,-8.896261,-4.002880,1.860557,-3.702432,1.411676,6.248906,4.716492,4.414708,5.934845,4.659667,-6.388338,-4.411693,9.564121,2.796602,1.477813,9.690036,-7.519296,-6.795759,3.032773,4.994754,3.174124,-3.867894,-4.592984,6.074835,-6.075049,5.891897,2.105430,-4.080702,-3.224401,1.867648,-7.720318,1.377107,-5.387828,8.495752,7.685767,1.028660,7.483808,4.661702,9.388434,1.415892,2.304503,-8.220681,9.114185,-3.517555,-8.120661,7.012186,-4.486090,-1.666490,-7.394429,-9.905386,-5.950987,-9.437892,6.984055,9.805914,-0.619627,9.775870,3.511469,-5.534263,-2.695090,-3.720182,-3.433021,-3.837612,6.099579,-9.790733,-1.878692,7.061434,-4.075961,-6.496432,8.091708,-0.281785,-3.554683,-8.167664,2.011220,-1.020148,3.557640,-4.184024,-7.938232,-9.070669,1.912550,5.762841,-4.395805,-0.658744,-5.561878,-0.743469,-2.298430,9.485946,-5.486837,-7.458710,6.414754,-2.236192,-4.376639,-2.454259,6.199322,-4.665166,9.222504,-3.539012,-3.250348,-1.992726,5.821103,-4.331618,9.299099,-0.975699,0.407667,3.025760,-7.704178,5.455868,2.747845,4.293858,6.397988,4.687939,-3.039782,-9.406579,4.750589,3.083136,6.175615,-8.792929,-1.067283,7.083926,-9.170710,-9.932171,-3.181240,4.464689,2.851008,-6.937698,-4.894025,-9.699779,7.814887,7.662036,3.668487,6.845141,-0.031266,-0.920063,-9.197902,7.023653,-8.329716,9.045754,1.173155,-7.004742,-3.193311,9.380896,6.402580,0.445439,-6.091387,2.894017,7.003923,4.247299,-0.781733,-1.888769,2.811771,5.420221,7.901055,-2.378850,9.008607,-3.996418,7.581837,-6.439631,8.878289,0.897544,-5.483061,3.155301,7.655131,-2.184050,-7.617137,-9.185342,-6.274924,-7.638103,9.362713,-9.267382,3.557817,-9.112945,1.410182,3.039995,-9.531947,-3.809308,5.290359,-2.726172,-3.227023,9.919024,-6.660379,-6.952516,7.637117,-9.071160,1.612168,-1.895679,4.244932,3.246835,5.875137,0.369898,0.021158,1.791786,-6.551925,7.964723,-6.932770,3.346341,4.015405,8.726151,-2.952682,6.156934,-0.717315,1.790319,-7.125169,-3.090698,3.223012,9.039623,-8.872604,-3.418180,-2.704055,8.688776,-7.159548,7.580009,8.071118,-1.528730,9.610824,8.750320,4.416290,5.460014,-8.644540,-6.234777,-4.341992,-9.192564,-7.337592,0.986879,9.592593,2.019844,0.386388,9.274588,6.393986,1.788002,6.649231,-3.316316,0.521146,-0.682707,-1.727867,5.185724,-3.857924,6.602883,-3.760637,4.916221,1.287862,9.180908,-7.763480,6.707219,8.163689,-3.568974,-4.986062,2.903837,-3.120199,7.113136,-0.134122,1.769539,-9.852481,6.372461,8.148208,-5.215835,9.124138,-1.133301,-3.305120,9.221971,-1.590044,-6.316107,1.596027,-8.963212,3.566746,-0.545926,-1.037330,-2.598575,-0.689982,-9.726897,3.545379,-8.019010,-7.246591,-5.825646,5.226091,-0.610546,8.693042,-1.307237,0.395204,-2.819958,-1.431776,-5.576753,7.234798,3.245467,8.382066,8.872342,1.549755,9.707132,-2.031218,-4.139748,-8.800950,5.129811,-9.505570,-2.367803,-7.418505,-4.867609,1.026779,-0.534029,-6.236920,-9.222554,2.227665,-4.923248,0.479262,-6.366353,1.585101,6.998140,-1.810615,4.366791,-9.476215,-2.504284,-2.425067,8.361533,7.916451,-2.543259,-1.732277,3.621615,4.204267,-7.732586,-6.664407,-2.593801,5.394389,6.924853,6.846175,-7.354467,-5.672676,-7.249505,-1.575987,-9.985351,5.910664,1.507337,7.076770,5.926384,-0.412558,7.790781,0.328281,-8.899709,-4.835769,-9.005002,-9.782451,0.982412,8.093309,2.203111,-6.401149], dtype = "float64")#candidate|1243|(420,)|const|float64
call_1242 = relay.TupleGetItem(func_1175_call(relay.reshape(const_1243.astype('float64'), [14, 3, 10])), 0)
call_1244 = relay.TupleGetItem(func_1178_call(relay.reshape(const_1243.astype('float64'), [14, 3, 10])), 0)
func_1175_call = mod.get_global_var('func_1175')
func_1178_call = mutated_mod.get_global_var('func_1178')
call_1245 = relay.TupleGetItem(func_1175_call(relay.reshape(call_1242.astype('float64'), [14, 3, 10])), 0)
call_1246 = relay.TupleGetItem(func_1178_call(relay.reshape(call_1242.astype('float64'), [14, 3, 10])), 0)
func_900_call = mod.get_global_var('func_900')
func_903_call = mutated_mod.get_global_var('func_903')
var_1248 = relay.var("var_1248", dtype = "uint16", shape = (84, 2))#candidate|1248|(84, 2)|var|uint16
call_1247 = relay.TupleGetItem(func_900_call(relay.reshape(var_1248.astype('uint16'), [3, 8, 7])), 2)
call_1249 = relay.TupleGetItem(func_903_call(relay.reshape(var_1248.astype('uint16'), [3, 8, 7])), 2)
output = relay.Tuple([bop_1236,call_1239,var_1240,call_1242,const_1243,call_1245,call_1247,var_1248,])
output2 = relay.Tuple([bop_1236,call_1241,var_1240,call_1244,const_1243,call_1246,call_1249,var_1248,])
func_1258 = relay.Function([var_1234,var_1235,var_1240,var_1248,], output)
mod['func_1258'] = func_1258
mod = relay.transform.InferType()(mod)
var_1259 = relay.var("var_1259", dtype = "uint8", shape = (11, 3, 7))#candidate|1259|(11, 3, 7)|var|uint8
var_1260 = relay.var("var_1260", dtype = "uint8", shape = (11, 3, 7))#candidate|1260|(11, 3, 7)|var|uint8
var_1261 = relay.var("var_1261", dtype = "float64", shape = (1155,))#candidate|1261|(1155,)|var|float64
var_1262 = relay.var("var_1262", dtype = "uint16", shape = (84, 2))#candidate|1262|(84, 2)|var|uint16
output = func_1258(var_1259,var_1260,var_1261,var_1262,)
func_1263 = relay.Function([var_1259,var_1260,var_1261,var_1262,], output)
mutated_mod['func_1263'] = func_1263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1344 = relay.var("var_1344", dtype = "uint32", shape = (12, 2, 15))#candidate|1344|(12, 2, 15)|var|uint32
var_1345 = relay.var("var_1345", dtype = "uint32", shape = (12, 2, 15))#candidate|1345|(12, 2, 15)|var|uint32
bop_1346 = relay.multiply(var_1344.astype('uint32'), relay.reshape(var_1345.astype('uint32'), relay.shape_of(var_1344))) # shape=(12, 2, 15)
uop_1361 = relay.log(bop_1346.astype('float32')) # shape=(12, 2, 15)
func_900_call = mod.get_global_var('func_900')
func_903_call = mutated_mod.get_global_var('func_903')
const_1376 = relay.const([[-2,-3],[-3,-1],[-10,-7],[-9,-8],[-7,9],[-2,-7],[-1,1],[-10,4],[-3,10],[5,7],[10,-4],[2,2],[-1,-7],[5,-5],[4,-4],[10,-8],[-8,1],[2,1],[-9,-3],[-10,-2],[7,-3],[-1,1],[-2,-2],[5,-5],[10,6],[-1,6],[-3,3],[-5,4],[6,4],[-6,5],[-2,-10],[8,-9],[1,-4],[4,6],[-10,-3],[-6,5],[-4,9],[6,8],[2,-2],[-5,-1],[-6,-1],[-5,-10],[-6,10],[-9,3],[-5,-3],[-4,-6],[3,7],[1,-6],[-4,-9],[-6,6],[1,-5],[2,-2],[-8,-8],[10,-1],[4,-2],[-9,-3],[-7,-4],[1,-8],[-5,-1],[-1,-1],[-1,-5],[5,-5],[5,3],[6,-7],[-8,8],[10,-2],[-9,1],[7,8],[3,1],[9,-4],[-3,-10],[-4,-2],[9,-2],[7,3],[8,-5],[6,-4],[-9,4],[1,4],[-8,3],[-3,-2],[4,-1],[-9,-7],[8,1],[5,10]], dtype = "uint16")#candidate|1376|(84, 2)|const|uint16
call_1375 = relay.TupleGetItem(func_900_call(relay.reshape(const_1376.astype('uint16'), [3, 8, 7])), 1)
call_1377 = relay.TupleGetItem(func_903_call(relay.reshape(const_1376.astype('uint16'), [3, 8, 7])), 1)
bop_1381 = relay.greater(uop_1361.astype('bool'), relay.reshape(var_1345.astype('bool'), relay.shape_of(uop_1361))) # shape=(12, 2, 15)
output = relay.Tuple([call_1375,const_1376,bop_1381,])
output2 = relay.Tuple([call_1377,const_1376,bop_1381,])
func_1384 = relay.Function([var_1344,var_1345,], output)
mod['func_1384'] = func_1384
mod = relay.transform.InferType()(mod)
mutated_mod['func_1384'] = func_1384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1384_call = mutated_mod.get_global_var('func_1384')
var_1386 = relay.var("var_1386", dtype = "uint32", shape = (12, 2, 15))#candidate|1386|(12, 2, 15)|var|uint32
var_1387 = relay.var("var_1387", dtype = "uint32", shape = (12, 2, 15))#candidate|1387|(12, 2, 15)|var|uint32
call_1385 = func_1384_call(var_1386,var_1387,)
output = call_1385
func_1388 = relay.Function([var_1386,var_1387,], output)
mutated_mod['func_1388'] = func_1388
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1512 = relay.const([[[3,2,2,-5,2,10,9,4,-4,10],[-5,-6,-5,1,-4,-7,-8,10,-1,-4]],[[1,2,9,-1,-7,2,-1,-3,7,-2],[-9,-8,9,7,-7,3,-5,9,-1,9]],[[-3,-7,9,-1,-8,-7,-1,1,3,10],[-1,7,5,1,6,3,-9,4,-2,4]],[[5,4,8,-7,-7,10,-7,-5,-5,-10],[4,-10,4,3,-8,-4,10,-10,5,-1]],[[4,10,10,-6,2,6,9,-3,10,9],[-4,-3,-2,5,2,-2,7,8,9,-2]],[[9,-9,4,3,9,-1,6,-1,7,-8],[2,-5,-9,-8,-6,1,8,6,-3,5]],[[-1,-7,10,-5,-4,8,-10,8,-6,10],[-9,-7,-1,1,4,-8,-4,-1,-2,5]],[[-9,5,4,1,-10,-1,-1,7,3,-8],[6,1,-10,6,9,10,-4,7,8,7]],[[-8,8,9,1,-5,-1,4,1,-8,-6],[10,-7,2,-2,2,8,-10,-9,-2,-2]],[[-1,8,-9,-7,-9,4,-10,-4,4,1],[-5,-8,-7,-5,1,-8,2,-6,-6,-10]],[[8,4,6,8,-2,-8,2,-4,-6,8],[6,-8,3,-1,-8,3,4,4,3,-10]],[[3,-4,7,-3,-6,-8,8,-3,3,7],[-5,-7,-8,-9,-3,6,10,-2,-9,-7]],[[6,7,5,-3,4,-10,-2,9,8,-1],[-8,8,8,-2,2,1,-9,2,-8,2]],[[6,-10,9,-8,-7,7,-7,-3,4,3],[-9,6,3,-9,2,1,-3,4,-8,8]],[[-3,-1,3,-9,-1,5,-7,7,-6,10],[-8,-5,4,5,-4,-9,2,-9,-6,-2]],[[-3,9,5,-1,-4,10,-6,5,4,3],[-4,7,4,1,-6,-9,7,8,-5,4]]], dtype = "int64")#candidate|1512|(16, 2, 10)|const|int64
var_1513 = relay.var("var_1513", dtype = "int64", shape = (16, 2, 10))#candidate|1513|(16, 2, 10)|var|int64
bop_1514 = relay.greater_equal(const_1512.astype('bool'), relay.reshape(var_1513.astype('bool'), relay.shape_of(const_1512))) # shape=(16, 2, 10)
bop_1520 = relay.right_shift(bop_1514.astype('uint64'), relay.reshape(var_1513.astype('uint64'), relay.shape_of(bop_1514))) # shape=(16, 2, 10)
bop_1534 = relay.greater(bop_1520.astype('bool'), relay.reshape(bop_1514.astype('bool'), relay.shape_of(bop_1520))) # shape=(16, 2, 10)
output = relay.Tuple([bop_1534,])
output2 = relay.Tuple([bop_1534,])
func_1539 = relay.Function([var_1513,], output)
mod['func_1539'] = func_1539
mod = relay.transform.InferType()(mod)
var_1540 = relay.var("var_1540", dtype = "int64", shape = (16, 2, 10))#candidate|1540|(16, 2, 10)|var|int64
output = func_1539(var_1540)
func_1541 = relay.Function([var_1540], output)
mutated_mod['func_1541'] = func_1541
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1633 = relay.var("var_1633", dtype = "float32", shape = (13, 8, 12))#candidate|1633|(13, 8, 12)|var|float32
const_1634 = relay.const([[[0.385189,5.876935,-7.100977,-0.180460,3.601233,-0.529538,-5.443265,-6.640803,3.005838,-8.457116,-0.257874,-8.226270],[1.487298,-6.035290,-1.092533,-3.980252,-7.085262,1.494734,3.945152,-1.946588,9.754045,2.150303,-4.153602,-8.156177],[-6.845518,-7.651395,7.022827,0.464376,2.696747,-4.269701,2.977130,5.741262,7.976948,-4.516037,-7.366209,4.945342],[4.077285,1.606465,-7.834643,-9.208585,4.302146,1.417990,2.336007,8.629365,5.265632,9.439477,-1.632014,-7.015469],[4.481938,-2.196124,-7.293751,2.683757,-9.812617,6.568085,1.181259,3.995193,-2.945014,9.668573,-9.254517,-6.428559],[-4.468917,-4.808621,-8.241650,-7.641544,-7.242436,5.999646,-4.562341,-7.368528,-8.874322,4.289817,6.298126,-6.205307],[-2.895807,-8.925159,-2.320739,-2.195780,-7.650726,7.650465,2.106936,-6.007985,-2.542845,-1.633137,-4.837411,-7.077345],[8.026622,-0.255801,-3.155808,-5.884856,-2.211419,9.963851,-5.927696,-9.281873,6.830851,4.885824,0.527808,-9.709000]],[[-1.331127,2.621778,6.136628,2.939831,5.870412,-3.838027,-5.387490,-4.211364,2.271802,0.683536,2.908756,-6.500062],[3.655852,-5.636230,7.538350,-1.476687,2.842739,-5.264949,8.411712,9.431575,-9.322667,5.586011,4.109004,8.963531],[4.512541,-5.739882,-6.953777,2.271532,-8.265117,5.011639,-0.759281,2.026999,3.566963,1.454118,8.958020,1.016560],[-6.075543,-2.043485,1.192279,-6.919293,-5.967983,5.866323,5.406255,-2.463627,-2.236297,9.102819,-5.444455,1.816614],[-7.442212,-6.342229,0.956146,1.310561,-8.121533,4.090832,-2.733159,0.528595,-9.799561,0.340822,9.977327,-7.479856],[9.007584,2.041712,-8.981526,5.102451,3.871157,4.311044,-2.274999,-7.075384,-4.921535,-0.873377,4.973106,-6.426887],[-2.535890,3.420579,5.459840,-4.182519,7.936775,-7.521689,-0.961546,-6.404088,-8.699167,-1.386756,6.055973,1.460440],[3.015752,-3.828494,2.112034,-0.428518,-1.539355,-3.845107,6.632604,3.762038,-9.794196,1.539766,7.928868,-6.174659]],[[7.665340,-3.054006,0.357732,-0.398865,1.890947,5.921694,4.175680,9.000819,2.123782,-1.770677,-4.600490,9.523574],[6.245247,5.769302,-2.840203,-8.073456,-7.939343,-0.749643,7.470857,-1.822813,4.008744,7.660656,-1.204314,9.241881],[-9.697587,-5.837541,3.161630,4.449186,-3.638409,9.546115,-3.455785,-8.833764,2.286997,-1.856361,-7.457621,3.907581],[-2.572091,-3.909712,4.135603,-1.843574,5.528204,-8.575965,-2.430429,-4.447373,-4.933682,-3.685212,9.980696,-2.260445],[1.097867,3.101234,1.863567,-3.092001,-2.201601,-2.559546,-9.143792,5.593886,-0.404990,-0.319424,-4.648540,5.713563],[-7.556273,1.782773,4.550567,-8.455353,4.025312,-6.257382,0.089450,-4.545656,6.674388,7.992526,-6.136537,-0.156983],[9.745865,3.398821,3.160069,-2.904800,-5.341077,4.096499,6.036417,9.792941,-8.059978,-1.949339,-0.998562,2.390515],[2.512994,9.898935,3.847786,-0.386106,-6.331977,-9.101138,0.515089,7.846956,4.762636,7.773383,2.610743,3.046185]],[[-9.339518,6.124763,-5.243947,-1.138931,9.799571,5.941544,9.202096,3.870110,-8.723498,3.322326,9.610200,2.088835],[-4.613024,4.251001,2.515504,9.686923,-3.460964,-9.548101,4.195551,5.214491,-5.222934,5.528826,-8.746887,3.413360],[7.578039,-4.356022,-6.956326,8.572143,-4.676553,-6.743415,6.464211,8.736594,-9.933144,-8.395224,9.494000,-6.680279],[3.131765,8.487892,7.133601,-2.063517,-5.302544,0.712719,-9.824289,2.176223,4.986398,6.592798,7.850763,3.048322],[-0.342386,3.095055,5.623231,-4.182020,6.291999,-6.814238,-3.435309,4.176878,-3.223492,6.904346,2.868376,7.030600],[-3.598340,0.833232,-5.086839,1.358262,9.670638,-2.603228,2.736050,0.819627,-2.191321,5.888531,-5.005847,8.686654],[6.066981,8.444244,6.568641,5.803726,2.319005,4.042097,1.839418,9.572802,9.497717,0.850203,-5.660641,-0.681803],[8.920891,6.196166,-9.017306,-6.621840,-8.031112,5.347656,-2.193880,4.790952,5.656117,0.554565,-7.364074,3.568039]],[[-7.678117,-0.688870,7.384345,-7.619143,-0.568617,-7.448211,-4.992038,-8.600341,7.519033,9.100847,-9.200738,8.598873],[4.699207,8.872330,3.719132,-5.784258,1.643846,-7.961103,2.571128,9.531689,4.455027,-2.914874,-7.418458,-9.885681],[-0.643802,-5.775550,-5.577430,1.391025,-7.801993,5.911293,2.367853,-9.168718,-5.175679,-0.964814,8.802264,3.562051],[3.578793,-4.232786,-0.721729,9.757366,-5.433111,-4.789108,-8.119072,8.235388,-2.689406,-8.107445,-2.420394,-5.320320],[-1.761145,-1.767137,9.253732,-2.319364,4.693048,-2.799732,2.067445,9.690900,0.646776,-4.892087,9.343386,2.435203],[8.785773,9.658377,-8.191483,-6.217658,-0.697070,-7.591460,6.826036,3.815875,8.821960,-8.930502,2.274360,7.268292],[7.778003,-2.175000,5.902561,-1.221247,-1.944246,-2.178200,-4.436497,5.477277,1.088693,-9.000477,-4.785306,3.604616],[0.731099,-3.203702,5.984895,-0.071851,5.460150,1.016273,-9.448059,5.070020,-9.414599,5.360155,4.604745,9.529664]],[[-8.193490,0.927483,0.721560,-2.160583,-2.861414,-5.298987,-6.364383,7.099109,3.182697,-8.256140,-8.716584,-4.645665],[5.048307,0.714071,-1.450195,3.939061,-2.160180,9.885510,-6.647301,7.381709,-7.059822,-6.816423,-7.809938,1.189592],[9.948919,9.485784,7.446611,-3.939623,7.397220,1.893299,-6.020426,-0.039134,9.875170,5.331993,3.443349,0.652277],[-9.212903,7.384392,0.314707,-6.043481,-3.754392,-4.586251,-2.530458,3.733006,2.855504,2.485518,0.126740,-0.872788],[-9.447957,-0.747526,-9.915001,6.276549,-5.074671,8.625132,8.208914,-7.444523,3.015192,-5.883210,0.468287,4.369008],[-9.740045,-8.373555,-5.189321,8.358883,-9.842284,1.702414,6.032621,0.706242,6.074168,3.939357,0.962757,-3.373597],[-1.292172,-4.906130,-7.159684,-3.955618,-0.132924,7.424167,-7.145206,1.842389,-1.185787,6.740106,-7.340748,8.576750],[-9.352877,-1.021992,-7.873991,-4.391632,3.145443,-5.996215,4.093461,2.306802,-8.420637,-8.509740,3.240965,8.926820]],[[-2.323477,3.165634,-8.403845,-6.147623,8.111419,-4.035688,-3.075958,-8.694514,2.585902,0.058111,-7.164540,-5.130803],[6.661602,1.265443,3.757298,9.293393,2.027745,-7.649696,5.198751,-6.549762,3.792612,4.419333,-6.977369,-1.006209],[-9.628853,-9.141742,-7.176917,6.408691,0.304308,-2.939345,-2.671222,3.730991,-5.681981,5.216008,-8.046828,-5.807438],[-7.687182,9.511566,9.636280,-1.916241,-4.634224,-8.064137,7.975223,-1.854806,-3.950216,7.757021,-3.488659,3.662264],[-5.672651,5.487190,-4.641913,0.841977,6.361688,7.007210,-1.722177,-5.866354,-8.038498,5.944939,6.475082,5.900068],[-9.451722,-5.414959,4.289292,1.423958,-6.849894,-5.934989,-1.406903,0.243282,7.688881,-3.692576,-5.948537,-8.103372],[-7.884675,-9.885619,8.629813,9.590142,4.015917,1.577523,6.127773,-2.440215,6.064762,6.242599,-4.269819,2.629157],[0.599821,7.636074,-3.153588,9.982327,1.490571,-9.760402,6.803626,-6.232294,9.747582,0.049704,-2.752715,-8.057116]],[[-2.743973,1.139152,-4.394270,-5.502647,7.437740,6.110033,0.920485,-1.097014,8.057471,-4.443283,-9.881649,8.591758],[-3.330635,7.736290,-0.536556,-8.057907,5.586771,-8.314338,-6.344149,7.064412,-9.658787,0.890356,5.222067,6.807750],[4.856276,5.343855,-8.864664,0.363244,4.457154,-2.600783,5.279068,6.362651,-7.740422,-1.085605,-9.471519,-1.989963],[8.444141,0.877952,4.980008,2.945390,-4.785083,3.945971,9.814800,8.686896,7.437573,-2.046206,-2.072392,6.944992],[4.957413,7.471525,8.436650,2.286777,2.166123,-0.154356,2.499600,9.466083,-4.150031,-2.678190,-2.854278,6.746649],[8.362494,-9.116315,5.574028,5.080252,3.018049,-8.656172,-5.165748,2.380167,-3.325495,4.266204,7.956073,4.344656],[4.779928,6.735789,3.610161,2.591832,5.019843,-0.848879,0.184697,0.275850,-2.827475,2.848006,1.318376,4.042376],[-4.402516,9.948933,1.716967,-1.867138,2.203159,-4.850582,-2.905419,8.200297,4.134653,-1.238811,1.232053,-5.660197]],[[0.599233,3.837038,-7.232619,2.559365,1.259389,4.751649,9.372792,7.554976,5.579310,-7.706829,2.003839,3.165768],[8.621890,7.637881,-7.827237,0.644248,3.188140,-7.462665,8.756825,0.279944,0.138920,4.169065,-2.622181,6.201141],[8.369021,7.204664,2.593943,4.912072,-1.073227,-7.426769,-5.956306,-1.258903,-8.628565,-8.593711,-3.233535,-4.330523],[-7.172395,2.946604,-7.185799,-5.961876,-7.349259,-2.218218,5.477274,-3.658859,-9.135749,-6.389275,-6.019186,-0.520410],[5.368467,-4.937938,-9.484608,9.668566,1.928707,1.300873,7.419897,7.531338,4.530633,-8.986327,9.313809,-3.735329],[2.288809,5.092421,-2.591201,-8.658500,-1.208113,2.991235,2.551829,0.131687,8.042659,-5.544766,-0.419879,-7.282099],[7.697785,-2.149942,-9.816827,-7.234980,2.903640,5.593365,2.737857,-3.844729,1.609723,5.744412,-4.631699,9.600485],[3.585258,0.317930,8.574629,-4.827502,-9.247212,4.261195,7.557093,-0.837152,1.240946,-7.156621,3.965869,-2.321428]],[[1.014037,5.631600,-1.192417,6.052179,-3.514258,-9.828586,3.610477,-8.478706,5.960724,-7.235377,4.672319,-8.791215],[-3.802697,7.270644,9.276641,-9.883652,7.113521,-7.105533,-9.355127,-3.186356,-2.165481,-5.260660,3.736401,6.595262],[3.010485,0.266494,-9.531237,0.104611,5.325245,-9.247066,7.675681,6.652921,-6.088700,-4.268232,2.073402,3.416050],[7.211656,1.267667,-8.065223,-2.183680,-3.865990,-9.339829,1.655215,-5.142244,2.249568,2.330868,8.683799,2.898230],[-3.748027,3.147200,-6.321125,-9.527068,-7.803342,-3.147510,-3.471190,-5.157341,4.610128,-7.857466,6.282116,7.523455],[0.173578,4.550750,2.759690,3.365782,-9.583008,2.461955,8.375947,6.151566,-7.393436,7.733458,-3.609504,8.150368],[-0.590588,-9.378352,-8.254098,-9.387338,-8.178645,5.696909,2.671187,1.967134,4.569593,-8.300857,-9.622823,-7.353990],[-3.225875,-8.350089,-5.551646,-8.516581,3.493677,-0.972634,-9.280993,2.695742,-0.467954,-8.293236,3.787151,0.734688]],[[-6.854965,-6.740194,5.039682,8.469714,-4.886957,-9.186016,-7.695964,6.018853,8.700413,4.891477,8.066855,-3.533076],[5.669316,1.214542,7.932165,4.853526,-6.717034,-4.500533,6.297508,2.003624,3.476358,-7.872251,-2.847704,8.624447],[8.071660,2.968309,-2.334348,-7.428067,-9.673435,-5.296321,-5.480173,-0.263405,1.040578,8.088184,-3.261395,-4.798626],[-9.294956,2.551802,4.680316,0.067151,-1.546085,3.788805,-4.963491,-7.630193,4.083136,-5.973839,4.613176,-8.685319],[-3.457449,7.864230,3.850184,-9.918729,-4.362364,-2.066433,7.549864,-3.618022,7.992514,-2.725815,1.236581,-8.883608],[2.168027,-7.868446,2.931483,-7.927024,-1.058742,4.049442,5.332803,-8.627118,0.845266,8.782499,-8.476188,-0.938113],[1.587688,4.703565,-1.254219,6.141173,1.019114,-9.279614,1.258796,-7.825206,-2.164132,5.360011,7.892992,2.289763],[-4.682117,1.632127,-6.784375,-8.853233,-6.640310,-5.702447,-8.846293,8.120040,5.362605,-6.157047,-3.853687,7.794954]],[[-3.565175,-5.851066,-8.688967,7.018532,2.333177,8.469946,-2.070918,2.910239,1.333736,8.698873,-8.775938,5.441511],[-1.307622,-4.789848,-6.908308,9.659842,-1.058111,5.565346,2.754544,1.114840,0.427761,-9.993656,4.052629,9.800100],[6.586123,-2.187891,5.931181,-2.002310,5.087934,-3.515196,-8.392913,1.850342,7.435194,4.654752,0.305520,4.405329],[9.167339,-9.878304,-0.580497,8.132698,1.144453,1.089175,-2.080741,-8.310191,-6.886222,7.523942,1.296113,6.644541],[6.897703,7.820565,8.475556,-5.131303,4.397325,7.162220,-9.129478,2.220840,-2.326293,-3.906972,-1.000441,6.113303],[5.043847,4.146914,1.553958,6.642374,3.421761,3.270305,-2.477434,2.385228,-6.072359,4.485242,-8.718208,-3.378079],[5.882374,7.547238,-5.184111,-3.842275,2.104288,-5.046596,-9.810645,-4.694667,-5.587805,-4.874639,7.003019,-2.743708],[8.321802,-0.725442,8.200299,-2.330169,4.189383,-3.422774,-1.066891,2.740692,0.199040,-2.482277,5.414355,1.474991]],[[-8.057648,-4.537292,-7.983832,-0.473532,-6.056035,4.653440,3.366119,-6.610605,2.111666,-2.083296,2.028000,7.368425],[8.138804,-8.343594,-8.043278,4.209198,-2.075025,-3.461590,-4.788713,-7.837420,6.340353,-9.189101,1.523497,1.035423],[-3.773676,1.626252,8.002693,-7.513656,-7.068905,-9.965864,-1.125449,-1.782684,7.708151,5.666641,6.713103,7.630872],[0.266637,9.765799,-8.601863,4.109615,2.228381,7.106903,-9.030227,8.634217,-2.036567,5.887402,1.048527,2.440263],[4.435781,5.563813,-3.035598,9.942111,-5.083087,0.463873,-3.033019,7.781089,7.842623,-7.027431,-5.410146,-3.811259],[2.755837,-7.601102,4.464896,-3.579567,-8.278299,8.653423,-9.185025,3.912353,-2.647804,2.716661,8.437939,-0.947150],[7.708452,-7.289529,-9.125023,3.514561,0.427779,4.664139,1.082341,0.078224,7.611334,5.347684,8.364194,-3.928284],[3.982683,-2.448005,0.414646,7.873230,-3.459806,-6.229867,-0.721560,-0.067114,6.154187,3.726219,8.189857,4.882677]]], dtype = "float32")#candidate|1634|(13, 8, 12)|const|float32
bop_1635 = relay.floor_mod(var_1633.astype('float32'), relay.reshape(const_1634.astype('float32'), relay.shape_of(var_1633))) # shape=(13, 8, 12)
func_900_call = mod.get_global_var('func_900')
func_903_call = mutated_mod.get_global_var('func_903')
const_1640 = relay.const([3,2,-9,-7,4,-2,-8,1,8,-4,4,8,9,-2,-7,2,10,-1,6,1,1,-8,6,3,-3,-3,-8,1,-2,-8,7,-8,-6,7,7,4,3,-9,5,-5,10,7,8,-9,-10,-9,9,-3,6,-6,10,-3,6,-2,-7,-9,-6,6,4,-6,2,-3,-3,-5,8,4,-5,-1,-2,-10,-3,-5,-5,2,-8,-6,-4,-3,-5,7,-2,-1,9,-6,6,-7,4,7,7,-9,-10,7,-3,-10,-1,-2,-8,-1,-7,-6,-4,-4,-9,8,-10,10,3,3,-10,-4,2,5,1,6,3,-2,7,7,-7,-1,-3,9,10,4,7,-10,-6,-8,1,8,10,-2,6,-4,-6,3,7,7,-4,-5,1,-1,-10,-7,-4,4,-4,10,8,4,8,5,-9,-3,5,5,5,4,-4,-4,-3,2,-7,-7,8,-8,9,4], dtype = "uint16")#candidate|1640|(168,)|const|uint16
call_1639 = relay.TupleGetItem(func_900_call(relay.reshape(const_1640.astype('uint16'), [3, 8, 7])), 1)
call_1641 = relay.TupleGetItem(func_903_call(relay.reshape(const_1640.astype('uint16'), [3, 8, 7])), 1)
output = relay.Tuple([bop_1635,call_1639,const_1640,])
output2 = relay.Tuple([bop_1635,call_1641,const_1640,])
func_1645 = relay.Function([var_1633,], output)
mod['func_1645'] = func_1645
mod = relay.transform.InferType()(mod)
mutated_mod['func_1645'] = func_1645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1646 = relay.var("var_1646", dtype = "float32", shape = (13, 8, 12))#candidate|1646|(13, 8, 12)|var|float32
func_1645_call = mutated_mod.get_global_var('func_1645')
call_1647 = func_1645_call(var_1646)
output = call_1647
func_1648 = relay.Function([var_1646], output)
mutated_mod['func_1648'] = func_1648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1855 = relay.var("var_1855", dtype = "float64", shape = (3, 3, 1))#candidate|1855|(3, 3, 1)|var|float64
const_1856 = relay.const([[[0.381097],[-0.026701],[-7.626156]],[[-8.439417],[-0.589666],[1.426065]],[[8.929362],[4.334589],[-5.311223]]], dtype = "float64")#candidate|1856|(3, 3, 1)|const|float64
bop_1857 = relay.greater_equal(var_1855.astype('bool'), relay.reshape(const_1856.astype('bool'), relay.shape_of(var_1855))) # shape=(3, 3, 1)
func_432_call = mod.get_global_var('func_432')
func_434_call = mutated_mod.get_global_var('func_434')
var_1863 = relay.var("var_1863", dtype = "float64", shape = (1155,))#candidate|1863|(1155,)|var|float64
call_1862 = func_432_call(relay.reshape(var_1863.astype('float64'), [15, 11, 7]))
call_1864 = func_432_call(relay.reshape(var_1863.astype('float64'), [15, 11, 7]))
output = relay.Tuple([bop_1857,call_1862,var_1863,])
output2 = relay.Tuple([bop_1857,call_1864,var_1863,])
func_1890 = relay.Function([var_1855,var_1863,], output)
mod['func_1890'] = func_1890
mod = relay.transform.InferType()(mod)
mutated_mod['func_1890'] = func_1890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1890_call = mutated_mod.get_global_var('func_1890')
var_1892 = relay.var("var_1892", dtype = "float64", shape = (3, 3, 1))#candidate|1892|(3, 3, 1)|var|float64
var_1893 = relay.var("var_1893", dtype = "float64", shape = (1155,))#candidate|1893|(1155,)|var|float64
call_1891 = func_1890_call(var_1892,var_1893,)
output = call_1891
func_1894 = relay.Function([var_1892,var_1893,], output)
mutated_mod['func_1894'] = func_1894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2213 = relay.var("var_2213", dtype = "uint32", shape = (5, 2, 4))#candidate|2213|(5, 2, 4)|var|uint32
const_2214 = relay.const([[[-3,-8,-1,6],[-8,4,6,-7]],[[5,6,-10,-1],[7,8,4,-3]],[[-3,8,1,-9],[-5,-4,6,-6]],[[3,-4,4,8],[1,-5,8,-3]],[[-10,4,-5,2],[-5,-4,8,-5]]], dtype = "uint32")#candidate|2214|(5, 2, 4)|const|uint32
bop_2215 = relay.bitwise_or(var_2213.astype('uint32'), relay.reshape(const_2214.astype('uint32'), relay.shape_of(var_2213))) # shape=(5, 2, 4)
uop_2220 = relay.sqrt(var_2213.astype('float64')) # shape=(5, 2, 4)
output = relay.Tuple([bop_2215,uop_2220,])
output2 = relay.Tuple([bop_2215,uop_2220,])
func_2224 = relay.Function([var_2213,], output)
mod['func_2224'] = func_2224
mod = relay.transform.InferType()(mod)
var_2225 = relay.var("var_2225", dtype = "uint32", shape = (5, 2, 4))#candidate|2225|(5, 2, 4)|var|uint32
output = func_2224(var_2225)
func_2226 = relay.Function([var_2225], output)
mutated_mod['func_2226'] = func_2226
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2399 = relay.const([[[-9.372646,3.512370,-8.523202,4.154424,2.017377,-6.047935,-8.182156,-4.695585,4.740344,0.221819,-9.613016],[-0.390969,6.301441,8.166761,8.586305,8.305892,-2.381815,8.680611,2.262314,3.144773,1.775871,-7.626621],[1.292798,-3.743832,-0.793957,-1.342911,2.021462,0.024305,-6.089688,-0.203672,1.152811,5.875932,-4.106929],[-0.304957,2.402028,-2.566908,-5.395850,-6.279730,7.848423,-6.698107,-9.088504,-5.971500,0.178949,-8.207852],[4.741671,-9.132593,3.995281,-1.198381,-5.733255,7.200423,-8.828999,-1.260292,-3.153168,8.947266,0.121059],[-5.747590,-7.906081,-9.240569,-4.064670,6.851336,3.859610,2.517402,8.554589,-4.745465,-2.208171,2.006754],[-1.552949,3.941287,7.252732,-9.445717,6.578861,-3.299035,-3.465575,3.714532,-8.400621,-7.550051,-9.214163],[-6.166919,8.472932,-9.891358,-2.252138,5.278443,8.421030,-0.229683,8.432621,-8.459875,8.136454,-2.753191]],[[9.960190,-7.511635,4.517015,4.666695,-4.870894,9.674174,-1.764318,-7.188838,-6.593484,0.400031,-0.647677],[-2.194173,6.253232,-6.982987,4.055763,-5.204578,2.118894,-8.763659,3.156276,-4.234272,1.360735,3.365564],[1.459340,2.798623,5.446928,-4.395801,-1.052607,8.025297,8.062518,-9.914640,7.806588,5.440321,0.539064],[3.302197,7.683790,8.479094,2.472229,-8.924316,-9.451219,-2.114538,6.324316,8.480520,8.042562,7.131626],[5.381820,-3.918889,-4.937403,6.255817,4.490165,-5.859418,-0.626020,-1.649930,-2.881446,5.877536,-6.375494],[8.370150,-9.076966,6.813104,3.157990,-1.746709,-4.160686,0.035707,-4.881223,-5.750283,6.106812,-9.618959],[-5.984692,-6.013518,6.743395,2.675985,5.303484,1.417599,-1.997243,-5.326663,9.905659,-4.000729,4.224871],[-9.629516,-7.301548,2.570473,7.733202,6.128655,-8.909748,0.975764,6.317519,6.374900,3.526517,-4.790389]],[[3.755121,4.549848,9.755768,-1.869150,-0.203586,-5.174395,-8.618934,-0.921452,7.511503,2.678584,9.107674],[-7.667048,-3.760445,-7.325800,-1.221876,2.303992,1.866754,9.387713,-3.061953,8.034762,-9.957936,9.570983],[2.823435,1.882477,3.938130,7.232077,0.693775,-4.302017,3.460732,5.843721,4.189375,-3.922916,0.500916],[-5.167733,0.001573,-5.502698,8.445957,-2.410598,-7.599515,-2.686059,6.710850,-7.778907,2.180589,-0.058697],[4.384633,-2.925444,-5.522537,4.937201,-0.065699,7.017606,3.624338,-0.862940,7.099585,-3.142309,-6.754156],[0.064005,-0.752019,-1.062204,-3.145608,-8.643027,-2.656604,0.824764,0.550746,-2.319778,-5.334445,-4.265167],[-0.280911,-3.483191,8.947688,9.594416,2.484107,8.691663,-2.231413,6.918039,-0.901818,3.456977,5.835114],[1.692676,9.148475,-4.578506,5.595467,-0.642232,9.669707,7.167334,7.092590,-0.869092,-6.689110,-8.813116]],[[5.911091,2.731315,4.769592,-0.114146,4.625139,-1.146667,-3.564709,-6.880760,3.999643,7.867543,-5.520684],[3.538254,2.237272,-6.327624,-6.580518,-1.316878,8.690764,0.832806,-7.043698,5.760302,-7.842638,0.274247],[-3.577311,-2.274908,-1.989897,1.964818,0.958029,-0.357134,-2.385505,-3.972784,9.952170,2.937649,-7.094495],[7.896081,-3.940480,2.202141,-0.680624,1.070594,-7.953480,-3.111093,3.457206,6.732779,4.656273,9.466991],[7.013256,-6.532344,5.374548,1.870392,-0.504039,-3.462242,7.347699,8.611966,-6.804996,-4.502579,8.202990],[9.456980,-3.224604,1.850558,-4.212918,-9.030597,-1.991393,-5.078136,-8.519926,5.370004,9.542415,0.017091],[7.818316,-2.115246,-4.018948,7.975303,-6.373632,-6.432692,7.638479,-4.319837,5.814218,9.388251,3.717283],[0.831922,8.335100,-7.118941,-4.591128,3.942641,1.951884,-3.731513,3.028809,0.504418,-6.649637,-8.752765]],[[3.056280,-8.613999,2.383039,-8.109473,0.063099,-8.475929,-7.375181,9.579548,1.437561,2.389151,2.881372],[-6.099646,0.331170,-0.501836,4.598011,1.209189,9.414998,1.237930,-9.043997,8.449537,5.871680,-1.278377],[-3.820820,7.227582,9.947072,-6.435942,-1.930689,0.206985,-6.336028,8.532180,-0.390166,-1.600694,-1.165104],[2.961283,1.072167,3.580763,-9.379656,4.251512,5.767861,-2.639373,4.090275,3.470705,5.803898,9.912812],[-9.051055,-7.927830,7.509233,-8.378614,-4.014174,-4.467712,-5.693139,3.813430,-0.703862,-2.579069,5.813697],[-3.521347,5.444308,-9.879760,-7.467115,7.844185,-7.742980,7.231020,-7.593395,-7.386423,6.037517,7.149293],[-1.112552,7.837939,6.792604,-8.148329,-5.877844,6.747638,4.946754,1.999696,5.438089,-4.494217,-6.667716],[6.976929,-8.624628,8.537846,2.687136,8.383426,0.008039,-0.430171,-9.172883,4.586274,6.997830,3.981012]],[[-7.442852,-5.405201,0.244262,-0.830953,-3.326195,-7.235700,3.789019,5.632043,-3.961296,-1.922093,5.238616],[-0.027111,5.734276,-2.865703,-8.123007,1.492120,-7.411403,-7.169351,7.663412,0.445278,5.354319,-9.546486],[-5.421608,2.317138,-3.834046,-9.814368,-4.473719,-5.496155,6.949475,-4.091310,-1.500370,-0.635875,9.575025],[-3.968777,4.636824,-7.861765,6.444583,6.932408,-2.565445,0.647950,-7.343253,-2.316640,-1.809184,5.852450],[-7.067508,-3.696422,2.324110,9.114615,6.459008,3.065108,-2.523268,7.890996,-9.331176,4.936824,8.533433],[-1.323450,-9.651620,-0.324239,1.489445,-1.517012,8.106947,-2.662676,-9.995560,6.181222,4.891097,-2.251608],[7.080456,0.925581,4.176534,-0.262074,2.223989,-2.447642,-4.766187,3.148413,-2.328547,6.920329,-1.456126],[8.708779,6.236265,-7.329020,1.044246,-5.451785,8.999335,1.772673,-9.650953,7.800394,-0.018100,-7.972180]],[[5.608492,-2.790909,3.140603,5.305066,5.574252,-3.593461,-5.496770,3.055130,-5.990744,-5.890132,2.363529],[-7.993509,4.135840,-5.085308,0.791990,-3.790562,-1.695973,3.516836,-9.812509,7.382510,4.285724,5.508690],[-4.964080,3.440318,-9.131814,-4.069012,3.406175,-2.056920,5.795199,-8.586279,8.935234,2.064442,9.097689],[6.303319,8.271319,3.332318,2.702604,-5.687920,6.661446,-8.429147,9.767834,-2.153000,5.583098,-9.167034],[0.883301,0.673578,7.401705,-7.112963,0.862189,4.748790,-3.820649,6.690208,6.201357,9.990508,-4.540277],[-3.680557,3.653118,-6.009188,2.365272,6.105259,-0.410777,3.198355,5.029726,-8.094676,-0.965325,0.742917],[7.411325,-3.702476,6.199247,3.275630,4.071948,6.500617,-1.624677,6.323367,-8.608241,-5.204675,4.253776],[5.390084,3.591240,-2.824527,1.059261,-1.093638,-4.211688,2.488059,8.827078,8.748183,-1.961794,7.199541]],[[7.484339,9.544452,7.585033,-6.531955,7.817294,2.116792,7.638379,-9.930050,4.797582,5.171963,8.546962],[7.563564,-0.587586,3.537878,-4.949960,4.021698,1.983798,7.504502,1.836680,-2.429869,3.589023,2.878233],[0.377867,5.127643,5.692014,-5.404826,4.483509,8.937141,2.771904,0.993037,8.765830,0.206384,1.080628],[6.630253,-2.990055,1.132616,5.349795,-1.534646,4.830837,7.185043,9.782725,2.573714,-2.369426,-2.139887],[-1.907961,8.869026,-6.513673,-3.331307,5.000755,-3.874061,1.750398,-7.843418,9.926703,3.235056,-4.205940],[5.249367,2.230863,0.266530,2.087726,6.357871,3.635796,8.899093,3.942484,5.094411,7.197495,-1.541909],[8.391816,1.354035,7.491392,7.839003,9.266931,4.973853,-9.301029,-6.721131,-9.368938,4.473054,-2.553387],[-0.829467,-8.606305,7.251565,4.739797,5.303987,-0.432992,8.143500,9.835118,5.069765,4.084774,5.764635]],[[7.287059,6.014643,1.252284,8.687961,3.882967,4.629000,8.337978,6.324255,-9.355905,-4.290454,6.589005],[7.636694,-6.397510,-1.052894,5.822919,9.109976,1.276862,2.525221,9.780396,8.941361,-5.183107,4.312490],[7.461623,-6.880906,7.472630,-8.454077,2.574336,1.518373,-1.095723,4.524969,-3.479896,3.171742,-8.616187],[-7.214002,2.196311,-4.150186,0.026640,-3.671758,6.096393,-3.021019,7.385563,7.767491,-4.586040,-3.426629],[-7.844793,2.008345,8.220272,0.224351,3.152112,7.219630,9.194748,-6.559343,6.579632,4.946709,9.431305],[8.873289,-3.258602,3.804863,-1.939096,5.134053,-3.431462,4.636578,1.239363,4.430937,-8.672832,-0.497867],[-1.231023,-2.792974,4.583996,-8.645492,-2.497654,7.764229,7.170678,0.058522,-5.410888,-2.601060,5.668423],[-2.813231,-3.841950,9.004042,0.515820,-0.806149,-6.140772,3.613781,-0.626628,0.602624,-3.898342,9.504691]],[[6.564771,8.908021,-9.294979,-2.603549,6.687786,-9.868647,-8.117248,-6.551028,0.656127,-2.445182,-8.762974],[2.410676,5.278374,2.759999,0.229058,8.644172,6.116580,7.024479,5.424378,-4.000680,-1.124083,-0.588522],[-7.724636,-2.560567,-2.376272,-7.283990,5.633948,3.463558,-0.421753,-5.033858,-4.963475,-4.343991,-9.952400],[6.557255,-9.965738,-1.977216,-7.818736,2.146246,3.996680,3.144411,-4.538555,-6.173852,0.264663,4.608667],[-1.008729,-1.338345,4.916562,8.663670,-1.776688,9.288097,-6.637864,9.185051,2.058143,4.893377,5.511069],[-9.791963,-8.868199,9.950810,-1.678866,4.617811,-5.703300,7.015262,9.879177,3.331456,2.522742,-6.352320],[-2.259483,8.666067,-3.402444,-2.173561,8.711530,-4.004881,-2.521456,0.985853,-1.522210,4.935952,-5.232853],[-0.849508,7.202237,3.450831,8.251670,-5.532920,-0.841219,8.946371,7.492831,-1.524013,-0.888560,-6.901658]]], dtype = "float32")#candidate|2399|(10, 8, 11)|const|float32
uop_2400 = relay.sinh(const_2399.astype('float32')) # shape=(10, 8, 11)
uop_2411 = relay.acos(const_2399.astype('float64')) # shape=(10, 8, 11)
output = relay.Tuple([uop_2400,uop_2411,])
output2 = relay.Tuple([uop_2400,uop_2411,])
func_2417 = relay.Function([], output)
mod['func_2417'] = func_2417
mod = relay.transform.InferType()(mod)
output = func_2417()
func_2418 = relay.Function([], output)
mutated_mod['func_2418'] = func_2418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_2437 = relay.TupleGetItem(func_2417_call(), 0)
call_2438 = relay.TupleGetItem(func_2418_call(), 0)
func_900_call = mod.get_global_var('func_900')
func_903_call = mutated_mod.get_global_var('func_903')
var_2467 = relay.var("var_2467", dtype = "uint16", shape = (6, 28))#candidate|2467|(6, 28)|var|uint16
call_2466 = relay.TupleGetItem(func_900_call(relay.reshape(var_2467.astype('uint16'), [3, 8, 7])), 0)
call_2468 = relay.TupleGetItem(func_903_call(relay.reshape(var_2467.astype('uint16'), [3, 8, 7])), 0)
output = relay.Tuple([call_2437,call_2466,var_2467,])
output2 = relay.Tuple([call_2438,call_2468,var_2467,])
func_2483 = relay.Function([var_2467,], output)
mod['func_2483'] = func_2483
mod = relay.transform.InferType()(mod)
var_2484 = relay.var("var_2484", dtype = "uint16", shape = (6, 28))#candidate|2484|(6, 28)|var|uint16
output = func_2483(var_2484)
func_2485 = relay.Function([var_2484], output)
mutated_mod['func_2485'] = func_2485
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2517 = relay.const([[[7.186851,3.849661,-7.022334,5.034215,6.363285,-7.239882,-3.809110,1.346771,-8.916749],[4.873460,-5.509793,-6.210537,2.289657,-1.380056,9.257036,9.607433,-4.410610,-2.413882],[-8.277008,2.124955,6.251027,7.935526,-4.089970,4.357525,8.382160,-8.334083,-7.584585],[-9.407327,-5.897750,-4.329443,6.249920,3.522662,4.631042,-0.896986,2.197567,2.412979],[2.572572,-5.793048,2.838714,-0.937494,-4.749552,7.525219,6.485172,8.330750,-1.020722],[3.433374,5.344902,-9.409383,-7.571437,-9.420213,-9.643411,3.093656,-1.942331,6.234788],[4.833266,1.890503,-8.341201,0.427395,-7.474867,-4.649725,-9.193665,-8.281434,-8.251379],[-6.128911,-0.500793,-4.188920,9.862506,-7.561183,-8.147220,2.749522,-4.725506,4.685130],[6.612196,-1.104508,8.547374,9.025185,6.794362,0.714047,-6.948634,-5.693605,-6.702129],[5.566302,-8.904134,-6.975856,9.121769,3.797853,-9.500455,-4.790209,8.322448,7.608818],[5.476343,-6.436097,4.337030,-1.326050,-1.407705,-1.278637,-5.206856,-9.085346,7.846484],[8.397359,-1.557087,-0.816952,6.463974,1.729164,-7.076710,-2.974765,5.904762,-9.374576],[-9.822811,-3.277872,9.923102,-9.326013,-9.364457,6.948313,0.220223,-0.628371,0.722938]],[[-1.056617,6.591175,1.177829,-9.665985,-2.592159,-1.957588,-5.708037,1.411584,0.917182],[6.836262,-1.966951,-8.381408,-1.433012,-2.410472,-7.872709,2.482466,0.954226,-1.008403],[-6.815939,-4.241293,-7.601145,0.061710,0.500299,0.617860,-7.088681,-6.878946,-3.140174],[-4.925131,-2.674551,0.729315,-8.216805,5.183260,2.634542,-5.242902,9.054252,-0.558522],[6.362501,-3.211440,3.538553,-8.034767,0.205079,-8.769881,2.246971,-2.452634,-7.080920],[-1.448124,-9.006802,-9.399603,3.723860,-0.750747,0.589876,-9.974247,-8.018103,2.620908],[-2.012071,7.710846,1.394159,6.990885,-1.544944,-5.098597,6.307571,1.807688,0.295125],[-0.208398,-4.903629,6.030307,5.177303,6.627713,-5.365962,3.935275,-1.844624,-9.779596],[1.802467,-0.398599,1.374153,-4.485316,-6.290561,4.631479,8.331195,-7.742390,-9.955615],[5.882734,-1.455041,7.619504,5.905445,8.588470,-9.567156,9.180858,-2.846592,6.926272],[4.469953,-1.133464,-4.499335,9.767904,9.540200,1.023238,7.219475,-6.483037,8.804660],[-3.401589,-7.962930,-5.596308,-3.949096,-4.913046,-5.298414,-2.543477,2.025597,2.226673],[-0.739930,1.409578,-6.380033,4.557730,4.365628,6.828594,-2.373488,-8.423102,-0.790893]],[[4.283736,-1.441358,5.533304,4.824809,-0.915264,-7.603084,-4.522370,-6.098304,2.643781],[2.836988,-7.832803,-9.459856,8.944286,-6.299179,9.704567,0.819897,5.599938,0.777271],[-1.331993,-4.296915,4.193776,-9.843077,-4.349361,-6.564384,4.896626,-2.403282,-7.659737],[-5.413616,3.515345,1.195692,0.868360,6.689179,2.619332,1.555994,-9.316398,-9.258700],[-3.424185,5.111119,-9.933345,-4.510633,1.599442,3.863299,4.266023,-3.385302,-2.109087],[-8.374272,-0.636458,-3.414983,-5.812023,9.777381,-9.041046,-3.567248,-6.180862,4.530921],[7.458908,-3.542496,-1.404775,5.862928,3.490175,4.036124,1.648050,8.899585,7.693117],[1.796473,9.549951,-6.951959,6.313468,4.287767,1.134365,-4.158052,-4.401464,1.480950],[-0.940340,5.954768,-6.423704,-4.404715,-1.962852,3.955425,5.997881,1.742278,3.060576],[-0.899947,-8.312054,-1.835129,-3.699732,9.390083,-4.264981,-2.995202,2.857126,-4.822274],[-9.560819,0.980404,6.818607,-2.503966,-5.941159,7.935015,-9.154213,-6.161982,4.348887],[-7.568133,3.556428,5.923226,-5.247168,-5.733353,9.983893,-1.374243,4.466047,-6.564256],[-0.492275,-0.254644,-0.940458,3.669140,7.149593,1.498854,-1.102498,1.398035,6.914320]],[[6.858209,-1.269819,6.511908,9.812765,1.097799,-5.336489,3.655112,-8.978646,3.954468],[7.404872,0.240347,-3.551017,-5.146245,-3.904024,-5.178361,-1.167529,-4.651254,0.307733],[-6.195239,1.304615,-6.870288,5.933878,-9.316681,1.855559,-6.736218,-2.973184,8.431210],[-4.890943,-1.897180,9.345196,5.591944,-8.354123,-2.280660,3.384517,-0.178485,-3.057886],[-7.558927,-7.138805,-4.611134,-8.831834,2.810230,-2.577003,6.108264,-8.359112,-2.592331],[-9.076691,5.118100,5.962928,6.143799,-4.233272,4.699185,-8.594524,-7.169817,-7.111651],[-7.540520,8.538532,-6.738137,-4.605593,-4.676634,1.157160,5.531949,-5.186390,-4.495654],[-1.828917,4.857408,-9.722112,-6.505407,-8.229352,7.714707,8.188772,-1.732064,7.080121],[-1.171690,-0.935785,-9.939377,2.419474,-4.446028,-6.075269,3.603067,-4.878768,9.752678],[4.900501,7.091141,-5.797621,7.407360,-6.057258,-4.225284,-5.456880,2.059319,-7.196085],[-2.248131,8.254969,0.853217,2.100137,7.823361,4.255058,-9.217570,-7.743888,2.983363],[7.166159,-1.316128,-5.113872,6.446466,3.146736,9.061494,8.495738,-5.801706,-8.393698],[-8.846864,-0.168335,8.095305,3.305756,5.364717,9.511319,-4.759403,0.207944,-7.001350]],[[-0.342486,-6.749193,3.943284,7.838557,0.525146,3.560650,0.526602,6.356319,7.725708],[-1.515720,7.605961,-8.679775,-2.300342,3.209011,1.747246,7.291862,9.737621,-7.548112],[0.040234,1.412880,7.605306,8.547304,8.143574,-5.870532,8.045466,7.025953,-0.225053],[-4.022002,-8.449155,-3.629642,3.789407,3.426150,3.832784,2.687941,7.233073,4.351226],[-8.978817,-4.901037,-5.268319,-6.748805,9.274513,-4.484138,-9.019012,-0.978670,-6.999764],[-5.307961,-1.870312,-9.153536,4.722546,-2.587596,6.779475,0.562331,-1.513450,1.316446],[2.955019,4.343558,6.099376,-3.741733,-3.934234,-8.904066,-9.811696,-3.611422,5.731538],[-9.639445,1.414403,3.800902,9.815902,-1.066809,-5.356842,-5.549260,7.346989,-2.431157],[6.537767,-3.972605,1.826630,-6.603504,-4.755210,-0.332697,5.972796,-8.013445,-8.441740],[7.584945,4.069959,1.381446,8.913045,4.266577,9.824672,8.779583,-6.891225,-9.961859],[7.796679,4.739368,-8.372836,1.932964,7.593005,-2.034224,0.468894,1.681894,9.784968],[5.517603,-5.155507,2.077316,-8.715899,-0.698547,9.341576,0.147412,8.025129,-0.117741],[-5.587576,6.442927,5.318892,6.878012,-5.342341,7.258631,-9.050817,-1.957188,8.232830]],[[-8.745874,1.491586,2.663251,-2.725858,1.178209,2.698959,6.469429,3.855259,7.470648],[-1.504741,7.800091,3.911666,-4.581105,8.879564,-3.621033,-4.851505,9.755144,7.625957],[-2.122857,1.888102,4.290903,1.856314,-3.412791,-2.376740,-5.317882,4.641971,2.463447],[-7.826115,-8.914849,-9.027540,6.858957,9.270122,-2.606896,6.926726,-2.379876,-1.432261],[3.321990,-7.735451,-8.517709,-2.879382,7.137862,4.747480,-4.118355,-0.549810,2.945423],[-5.262416,-2.323176,0.888190,-0.787461,2.265830,7.418948,2.486225,-1.414459,4.454640],[-4.037779,2.116678,3.314332,-0.685382,-5.774573,-6.543162,0.055715,-5.300694,-1.505380],[5.803627,-8.883975,-5.576879,-6.667049,0.332149,3.578399,-5.617365,-1.221167,-5.851892],[-8.494890,6.017984,8.460261,-0.346603,-2.926728,-4.294880,1.736119,-7.440208,3.212925],[2.383825,-3.274313,-5.811953,3.259736,2.300403,-7.594445,6.682919,-7.353249,1.566162],[-9.119456,-8.919609,6.400589,-5.519818,-4.283698,-5.041449,1.367212,-5.023780,-1.654912],[6.723243,5.174147,0.085559,-4.841205,-3.381687,-5.986784,6.472778,6.265092,6.824825],[-2.254043,5.461071,-1.402484,-0.088763,-6.345487,8.807164,9.490591,-9.512679,7.389959]]], dtype = "float64")#candidate|2517|(6, 13, 9)|const|float64
var_2518 = relay.var("var_2518", dtype = "float64", shape = (6, 13, 9))#candidate|2518|(6, 13, 9)|var|float64
bop_2519 = relay.maximum(const_2517.astype('float64'), relay.reshape(var_2518.astype('float64'), relay.shape_of(const_2517))) # shape=(6, 13, 9)
func_1645_call = mod.get_global_var('func_1645')
func_1648_call = mutated_mod.get_global_var('func_1648')
var_2535 = relay.var("var_2535", dtype = "float32", shape = (1248,))#candidate|2535|(1248,)|var|float32
call_2534 = relay.TupleGetItem(func_1645_call(relay.reshape(var_2535.astype('float32'), [13, 8, 12])), 0)
call_2536 = relay.TupleGetItem(func_1648_call(relay.reshape(var_2535.astype('float32'), [13, 8, 12])), 0)
uop_2555 = relay.asinh(var_2518.astype('float64')) # shape=(6, 13, 9)
bop_2574 = relay.bitwise_and(uop_2555.astype('uint8'), relay.reshape(bop_2519.astype('uint8'), relay.shape_of(uop_2555))) # shape=(6, 13, 9)
output = relay.Tuple([call_2534,var_2535,bop_2574,])
output2 = relay.Tuple([call_2536,var_2535,bop_2574,])
func_2578 = relay.Function([var_2518,var_2535,], output)
mod['func_2578'] = func_2578
mod = relay.transform.InferType()(mod)
mutated_mod['func_2578'] = func_2578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2578_call = mutated_mod.get_global_var('func_2578')
var_2580 = relay.var("var_2580", dtype = "float64", shape = (6, 13, 9))#candidate|2580|(6, 13, 9)|var|float64
var_2581 = relay.var("var_2581", dtype = "float32", shape = (1248,))#candidate|2581|(1248,)|var|float32
call_2579 = func_2578_call(var_2580,var_2581,)
output = call_2579
func_2582 = relay.Function([var_2580,var_2581,], output)
mutated_mod['func_2582'] = func_2582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_2586 = relay.TupleGetItem(func_2417_call(), 1)
call_2587 = relay.TupleGetItem(func_2418_call(), 1)
func_900_call = mod.get_global_var('func_900')
func_903_call = mutated_mod.get_global_var('func_903')
var_2590 = relay.var("var_2590", dtype = "uint16", shape = (42, 4))#candidate|2590|(42, 4)|var|uint16
call_2589 = relay.TupleGetItem(func_900_call(relay.reshape(var_2590.astype('uint16'), [3, 8, 7])), 1)
call_2591 = relay.TupleGetItem(func_903_call(relay.reshape(var_2590.astype('uint16'), [3, 8, 7])), 1)
uop_2614 = relay.sin(call_2586.astype('float64')) # shape=(10, 8, 11)
uop_2616 = relay.sin(call_2587.astype('float64')) # shape=(10, 8, 11)
output = relay.Tuple([call_2589,var_2590,uop_2614,])
output2 = relay.Tuple([call_2591,var_2590,uop_2616,])
func_2622 = relay.Function([var_2590,], output)
mod['func_2622'] = func_2622
mod = relay.transform.InferType()(mod)
var_2623 = relay.var("var_2623", dtype = "uint16", shape = (42, 4))#candidate|2623|(42, 4)|var|uint16
output = func_2622(var_2623)
func_2624 = relay.Function([var_2623], output)
mutated_mod['func_2624'] = func_2624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_2644 = relay.TupleGetItem(func_2417_call(), 0)
call_2645 = relay.TupleGetItem(func_2418_call(), 0)
output = relay.Tuple([call_2644,])
output2 = relay.Tuple([call_2645,])
func_2675 = relay.Function([], output)
mod['func_2675'] = func_2675
mod = relay.transform.InferType()(mod)
output = func_2675()
func_2676 = relay.Function([], output)
mutated_mod['func_2676'] = func_2676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_2677 = relay.TupleGetItem(func_2675_call(), 0)
call_2678 = relay.TupleGetItem(func_2676_call(), 0)
func_900_call = mod.get_global_var('func_900')
func_903_call = mutated_mod.get_global_var('func_903')
var_2680 = relay.var("var_2680", dtype = "uint16", shape = (168,))#candidate|2680|(168,)|var|uint16
call_2679 = relay.TupleGetItem(func_900_call(relay.reshape(var_2680.astype('uint16'), [3, 8, 7])), 2)
call_2681 = relay.TupleGetItem(func_903_call(relay.reshape(var_2680.astype('uint16'), [3, 8, 7])), 2)
func_432_call = mod.get_global_var('func_432')
func_434_call = mutated_mod.get_global_var('func_434')
const_2701 = relay.const([8.486179,-1.933382,-8.505746,-9.839359,2.677050,7.723448,6.542861,9.533505,-8.428732,-4.098990,6.728872,-1.771868,-1.008919,-4.688398,-5.873729,5.519557,-1.052881,-1.850729,-9.821534,1.701082,5.508750,-4.612861,-5.731708,9.665780,-5.268967,-6.620117,-7.550379,-9.719683,2.703809,5.905995,-9.859012,9.464525,-1.371588,2.959979,-7.023561,3.972167,4.964249,-8.989570,5.868853,9.372612,-4.524526,0.834466,-5.890030,5.253564,-0.189043,2.452843,5.506229,8.271079,9.966534,-8.941238,-5.385372,2.865493,4.272694,2.517108,3.342425,6.982134,-1.919648,-3.728552,-8.553471,9.457463,-7.384822,0.850306,6.509953,-9.085553,7.465079,1.692932,-9.136689,3.112559,-1.805137,-3.416161,2.156197,9.712806,-7.179695,-3.956285,-5.660549,5.005875,4.855184,-5.907546,4.647611,9.437309,-3.702026,-4.535380,7.504137,-4.256812,7.350549,2.536107,-6.804704,-2.878023,-5.084494,6.614240,-6.369332,-9.956009,6.368014,4.593639,7.412475,1.736576,7.483619,-8.458004,-3.507806,-9.774662,0.565103,-9.234986,7.988468,-6.012802,-9.096647,-7.172792,-4.499960,-6.095719,5.380406,-0.531994,-7.567212,-1.714681,-0.501559,-1.106934,-7.578605,-3.403056,-7.257643,7.989136,2.728218,0.818439,-7.822580,6.932606,-6.002793,-6.806285,0.436621,-2.938273,6.763370,2.076023,0.097995,-6.090420,-6.972218,8.134788,7.097480,-2.068032,-6.233619,-9.376905,6.496267,9.925634,6.554377,-4.512551,4.192523,-9.076258,3.368942,-0.192574,8.767930,-6.450514,2.869280,-9.010138,5.379859,6.335380,3.765110,-5.792623,8.060819,-0.825380,4.853456,1.173778,-9.162072,9.187789,2.327834,-6.000989,-6.190678,5.742602,4.958003,0.732137,-0.464110,-7.667105,-7.687891,7.840788,1.496056,4.835668,-8.506700,4.475201,-6.614011,-0.222229,-9.737818,0.968512,-3.996309,-3.099782,-5.656538,-7.560356,-9.134899,-7.506174,9.910967,7.937036,-0.575606,1.305894,3.707234,6.175764,-3.230687,-8.633789,-0.772396,6.475557,-3.719163,-2.202249,6.812255,4.125610,-6.437338,4.444558,2.753627,-6.833340,4.260734,-3.188212,-3.336200,-7.307847,-3.964541,9.306114,-1.573843,6.944273,-8.231893,-6.041371,-7.747572,9.932690,2.743976,-4.685240,9.837215,-0.616861,-1.411250,-2.207172,-3.179702,7.128481,9.337176,-7.132814,-1.251642,-0.405359,2.314883,-2.765995,-7.718381,-3.705376,-0.407360,6.411488,9.696298,-1.984397,-2.896906,-9.560041,-7.685056,7.755624,-4.701700,3.833919,6.451011,1.914586,-7.667370,-1.422429,-3.873105,8.017307,5.266127,-4.011128,-4.884243,5.577686,3.642921,-0.603168,8.284988,1.273960,9.078288,-9.044817,-6.207779,2.486646,-7.401715,-5.273532,8.782464,8.211558,-7.702426,5.871940,1.367876,5.601531,8.710440,-2.691597,-8.400284,-2.896996,-3.614093,-7.474149,9.851846,-9.366588,-2.746005,-3.094624,-0.603926,-6.738935,1.096027,1.384721,-1.717667,-1.303268,-0.185346,7.267018,-7.514666,-1.325922,-3.240216,-7.709276,7.723169,0.666516,0.491290,9.746460,-2.833673,-0.946899,5.934760,-6.103084,-2.964321,3.852650,4.014709,8.323117,2.907859,-3.976373,1.365755,1.900839,5.253484,-2.131691,-8.580337,-1.810615,0.851437,-2.947562,7.477336,2.060358,9.218235,-0.930530,3.208868,6.504095,-6.383372,-6.784269,-4.164201,-6.724107,1.221206,-8.502902,-3.560021,-1.132702,8.678610,-9.183422,6.311633,-2.570272,7.017775,3.412713,0.707485,6.948706,-0.721915,0.323045,3.912739,8.878871,-5.656124,-3.847858,-3.014971,-9.765008,9.875994,-1.077307,-7.456812,-6.468914,-4.835235,-0.461495,-6.700624,8.268486,-7.297326,0.643659,-6.981876,-4.428355,-2.945957,3.396619,3.446345,-2.710999,-7.530708,5.539714,7.217399,-4.626157,9.877282,5.956115,-6.347116,-7.560422,3.279875,-6.190758,-4.713710,-5.278725,1.467312,-7.091422,-6.710984,-7.466378,7.286232,2.839200,9.829996,-2.236895,3.776694,-9.879395,-0.409137,-8.412603,-7.919942,3.342631,8.109402,7.623849,4.610193,6.576425,-8.318969,4.469130,0.478685,-4.315003,-6.504300,9.573542,1.257202,-9.926111,-9.504874,4.335991,7.495954,-9.421739,4.594107,-1.420826,4.176913,-2.162321,9.322649,0.447075,-5.131075,7.962369,1.816908,-1.806134,-9.698882,-7.837852,5.361977,9.617460,3.139074,0.782125,9.169949,6.406038,0.646522,-9.292025,7.668540,1.997129,2.405261,5.871548,8.468897,6.050221,-3.297371,1.887200,-9.614488,-8.464454,-8.824268,-2.237226,5.515442,-1.345255,4.996649,4.758241,-5.573439,-4.678474,3.571463,-2.870375,-7.073622,-5.743518,-7.506899,-7.020040,-8.218775,-6.259742,5.848028,-3.064835,-1.298166,1.424357,0.124855,0.653722,-8.014745,-1.542035,3.683590,-4.515090,-0.406453,-4.884788,-8.638886,9.913230,8.650296,7.984327,-2.331702,-2.778628,-0.129293,-9.531687,-7.428465,-5.981499,-0.416579,5.760558,1.358249,3.590473,-5.483513,-1.121852,-3.946300,-4.854846,8.644554,-3.638964,8.357109,8.398288,8.193597,-3.978013,7.182230,-3.496061,5.783001,7.651270,0.269312,-9.973292,-6.664465,7.408980,2.289666,-1.170442,8.795960,-3.382180,5.994647,2.016944,-8.418995,4.528057,-4.079459,2.262733,2.029556,-0.441787,2.886380,-9.392504,-6.106949,-4.436995,1.665587,-7.494597,-8.513045,-5.123326,-2.860617,-8.298283,4.972232,-2.462005,1.804616,8.029394,-5.104357,6.557444,-1.288228,8.512916,5.600126,-1.921053,6.119628,-0.362908,-9.355924,5.070652,-8.061674,6.604622,0.690926,6.611476,8.217411,9.276397,-0.708684,9.575797,7.775363,6.160255,-1.403304,7.103992,6.390662,2.503327,-1.102431,-5.256306,-9.861678,-0.610197,-3.863172,-0.876681,-1.374583,6.407806,6.217805,-4.527457,-4.217954,2.003836,1.852045,-6.251120,-6.020079,-2.410943,-1.036809,4.114911,-1.597744,8.989464,4.066182,-0.740938,0.099056,0.066930,-6.741408,8.881963,3.443842,-7.479580,-9.218052,1.878837,-6.090223,8.074338,7.927997,-7.248452,1.913575,-2.466390,2.731144,-6.755148,-1.330837,3.276312,9.138376,3.984475,-6.208845,-7.081534,-2.385261,5.678261,4.933452,-3.992187,-1.716281,5.384065,-2.327208,-2.413562,-4.938893,-2.829493,-3.669149,-6.783862,7.068688,6.633171,9.993817,-2.170719,2.404364,-2.793572,-9.567098,4.547842,1.559199,-6.145543,-4.644612,-2.880962,-6.306534,-2.968798,-8.160735,-2.920558,-3.268970,1.170593,1.273148,-2.378042,-3.234882,-7.705991,4.914873,5.036234,-2.431435,-3.066833,-0.588465,2.766043,1.205165,-9.470616,-6.029275,5.551643,-6.080925,-8.736960,-6.837356,-9.444931,-4.769515,-3.923504,7.685796,-6.772772,5.463704,-3.101628,4.330358,-3.855390,2.863845,1.201057,-5.851801,1.215116,3.035690,-0.018388,-3.070571,-3.559606,2.507031,-7.106205,-2.573181,-7.077331,5.768040,-3.957656,5.446489,2.476239,5.391321,-6.314978,-7.094024,-8.034172,-5.309508,8.769379,2.840045,9.772953,-7.561315,6.051329,-5.232647,3.180110,6.011088,8.393187,-9.895974,8.571840,1.532290,2.709293,6.677596,5.049200,6.514322,-7.190693,3.939204,6.224200,8.316123,-9.005523,9.872021,7.600436,6.386590,8.107252,-5.674078,0.270090,-4.653035,2.603783,-0.768582,7.063466,5.624885,8.308922,5.931334,6.099767,3.958061,1.912984,2.194583,8.893738,3.806951,-4.764693,-2.451418,6.986706,8.249706,-2.285202,1.708363,4.794515,-9.672698,5.679554,4.056155,-9.178634,5.707818,7.013935,5.388878,1.603941,1.563736,-0.239560,-5.725858,6.507902,-3.686547,9.456827,2.109984,-8.746934,3.272648,-1.640752,-8.808671,-9.670061,-7.470134,-5.978137,-2.329510,-8.580366,-8.824386,0.465514,-7.827420,-7.989918,9.729572,-9.305152,-6.131004,-7.950389,3.704018,-3.418602,0.389170,7.284070,6.846115,9.079197,2.531806,9.508771,-2.765931,-0.849414,4.009952,9.713939,4.496376,-6.798581,9.496932,3.087640,8.114263,-4.060126,-2.261676,-6.437869,-8.473181,-0.643559,7.111728,6.398577,-5.844171,-8.612456,-0.748963,-2.244283,5.074401,0.483083,2.832097,1.848376,-0.249002,-2.295943,1.815915,-9.345939,-6.880375,-8.258821,9.264462,-4.991137,9.625041,7.821344,-6.289427,3.645372,-9.666101,-5.324086,-6.020837,-1.440862,-2.375037,8.519523,5.121818,1.938798,-6.914516,8.546751,6.295856,-6.576024,-1.306793,-8.493426,1.110336,2.215291,-6.511280,-0.502179,0.012381,4.013549,1.947984,-2.240673,8.941242,-9.261813,0.705191,9.839903,8.024907,6.921451,2.149895,0.332538,-0.530178,2.491539,-1.794056,3.382975,-4.793125,1.982488,7.642141,7.089911,9.457195,9.744393,8.920846,2.247876,-9.293206,6.035071,-5.409516,-6.526720,8.076654,6.310352,9.795727,6.223718,-9.854650,9.828066,-1.751099,-7.032613,9.526862,-1.010424,-5.003441,9.033422,6.650272,-0.139959,5.966606,-6.806676,-0.275783,1.055869,-5.890362,-9.454851,9.230567,-5.812971,-8.144718,-2.787128,-5.118532,-0.926703,-9.356925,3.809409,-1.743483,-3.652236,5.291599,-0.109524,-1.114507,1.966322,1.407857,9.296091,-6.956772,-4.781019,-3.098380,-6.994190,-4.637981,1.710235,-8.055986,-0.851417,0.206944,1.441830,3.354517,-8.646132,3.659831,-2.015935,8.143300,1.802918,3.045694,-1.448881,-9.779951,4.022908,-5.258594,-0.331045,6.250923,6.670014,7.126004,8.470798,8.192511,-8.496754,-6.709395,1.665543,3.230628,6.881876,-0.818208,-3.958804,-6.242296,0.754851,8.125947,5.588892,-2.919824,6.173272,3.282498,-6.026259,-2.074540,3.051959,2.256628,9.418682,-6.048651,-5.601989,-4.430226,0.347982,-0.074310,5.972292,-6.654660,-2.900228,-2.398482,-2.389962,0.589851,-6.784673,-2.498505,-1.136968,-4.974643,-5.958378,-7.096073,7.507243,2.511169,1.915139,-9.841683,5.112288,8.266827,1.427549,8.990022,-9.987269,7.413932,5.361729,-5.957790,0.930769,6.487184,2.403079,-1.034254,-1.949863,-5.161241,6.178819,3.225995,4.499280,0.127141,-4.828201,6.505726,8.150206,4.666641,-9.168760,-8.011674,-7.419396,2.518743,1.410211,-7.439988,3.727432,6.169267,5.335264,-4.284414,5.055669,-8.344360,-1.297909,-5.085688,-5.415441,-5.589501,-4.304644,-7.619170,-3.083208,-4.173593,-7.357872,-3.713500,7.497543,-0.131542,-4.475653,-6.017727,-0.518909,8.795152,-9.735504,-0.011335,3.951801,6.322539,5.319172,-0.663128,4.212871,9.420547,3.052759,9.112135,7.376354,-4.438775,-8.569240,-0.296761,1.025686,-3.322546,0.969617,-1.637005,9.989893,-3.723149,1.981910,9.138222,-8.546390,-3.053752,-2.118840,-0.805333,-5.774800,9.866413,7.944146,9.832936,3.827585,-9.204856,9.943062,4.331197,-9.767119,4.590831,-2.788641,-4.706071,-0.234382,-5.481962,6.536036,-6.525500,2.129278,-2.395537,9.173850,4.361100,6.164518,-9.657397,-7.878872,-0.451112,3.177230,7.447274,-7.050011,-5.651867,-6.434707,2.931656,-3.828740,1.799257,2.468457,-3.418774,-4.333953,4.265679,-6.227413,-4.983460,3.095653,3.561890,-4.096060,-8.137497,5.287084,3.946276,5.970883,2.182525,6.592178,-6.086538,-6.480689,0.493143,-4.933009,2.557997,-5.450547,-3.129854,-9.798148,4.303906,-3.317969,2.475599,-1.048838,9.353777,0.191541,8.830836,-6.976203,5.696658,4.244448,6.094934,3.419534,-3.882946,-8.483063,3.223202,-6.301255,1.218123,-2.529445,-2.888479,-1.479222,-6.919977,-2.208425,-3.051783,2.514890,-1.924524,-5.135327,7.363252,-5.661258,-9.045147,-2.930758,7.242005,-4.422383,1.712242,9.942085,3.552060,2.652935,8.005733,-8.376732,-8.553734,8.294023,-6.792428,-0.109546,2.607174,8.429763,1.991837,7.362001,-7.398611,-6.062877,-3.677560,-9.786130,2.048731,1.165539,1.027074,-5.159934,-4.143419,-4.871187,5.940041,-8.376259,4.266651,-6.814832,7.989929,6.324111,8.329195,4.076313,5.434801,-6.883072,2.998832,2.373657,3.760500,7.755599,9.669437,-3.869784,-4.888013,5.558173,-3.346341,7.232455,1.482204,6.362457,-9.187975,-4.248362,-4.478382,-6.760039,9.407570,4.226705,9.857252,-8.535134,-7.724843,6.316188,1.350258,4.986642,8.960997,7.056567,6.989041,9.281478,3.496908], dtype = "float64")#candidate|2701|(1155,)|const|float64
call_2700 = func_432_call(relay.reshape(const_2701.astype('float64'), [15, 11, 7]))
call_2702 = func_432_call(relay.reshape(const_2701.astype('float64'), [15, 11, 7]))
output = relay.Tuple([call_2677,call_2679,var_2680,call_2700,const_2701,])
output2 = relay.Tuple([call_2678,call_2681,var_2680,call_2702,const_2701,])
func_2705 = relay.Function([var_2680,], output)
mod['func_2705'] = func_2705
mod = relay.transform.InferType()(mod)
mutated_mod['func_2705'] = func_2705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2706 = relay.var("var_2706", dtype = "uint16", shape = (168,))#candidate|2706|(168,)|var|uint16
func_2705_call = mutated_mod.get_global_var('func_2705')
call_2707 = func_2705_call(var_2706)
output = call_2707
func_2708 = relay.Function([var_2706], output)
mutated_mod['func_2708'] = func_2708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_2725 = relay.TupleGetItem(func_2417_call(), 0)
call_2726 = relay.TupleGetItem(func_2418_call(), 0)
const_2747 = relay.const([[[8.558055,2.645867,-7.903200,7.052518,9.750394,-7.414428,-0.932205,2.824198,-3.435916,-8.742439,-0.785370],[-8.280628,3.917099,2.417489,7.041015,2.295198,7.380037,1.677473,7.298919,8.651283,-9.365620,-6.378009],[-3.512298,-5.153184,2.857550,-9.756254,2.287589,-3.270860,-3.890059,3.021294,2.145264,-8.798921,8.765315],[-6.543518,3.362802,1.872543,9.691445,-6.965238,6.711235,-7.908480,9.446300,6.150322,5.510406,-8.521434],[6.840733,8.481313,-4.296953,9.565883,3.739014,-8.671956,-8.851715,9.125971,-0.001920,4.165095,-4.988609],[-7.618147,-2.152003,-2.788939,1.611562,3.852356,8.268582,9.892002,-8.141884,5.824960,-1.854241,-5.359678],[-3.899557,-9.798146,-4.139940,-4.294656,9.315814,-0.208871,-0.145393,6.915563,3.132058,5.331513,9.725662],[-1.551391,6.610248,-3.266069,-8.998528,-1.451566,-7.755859,1.722550,-0.203146,1.839563,-1.500980,6.067953]],[[-6.449660,-0.099235,0.052376,-5.156834,6.172005,6.643755,9.516645,-9.139175,-5.905773,-2.125294,-3.532682],[1.097159,5.569482,-9.499661,1.184631,5.562233,3.656062,9.160642,0.075278,4.004078,5.391809,4.479534],[-4.394592,-5.658798,1.184097,5.256194,-0.734419,-5.331575,1.378513,7.106833,4.150301,2.921511,-4.615484],[7.836396,-5.940941,-7.772025,6.595686,-3.296758,-9.531265,2.597707,8.688666,2.699562,0.862185,-8.780417],[-0.889369,7.769507,-4.973640,-2.536804,-1.961678,-3.069065,2.751709,-4.484274,-3.651302,-2.919108,7.255019],[-1.830391,4.450775,-8.182899,-8.735970,8.949610,-1.679003,-4.799116,1.566786,8.907184,-8.345342,4.761248],[2.044121,8.064422,-8.697673,-6.555356,7.519529,6.405076,-1.091798,0.320129,-2.366881,5.252332,-1.201558],[8.130976,1.473629,8.944183,-8.577160,1.671192,-4.277048,3.538427,-6.790450,-1.106816,0.711758,-7.761916]],[[6.154929,-2.563961,1.129382,-0.822026,4.048206,6.745510,-7.197877,-3.232087,0.269642,-1.596950,-5.355621],[3.320064,7.000611,-8.530721,7.736138,-7.405647,3.793506,-5.161707,1.329817,-6.057131,-8.145950,7.156953],[-6.585263,6.230562,5.603733,6.013844,3.734669,-8.321108,-9.255197,5.458134,-6.716406,-6.554509,-5.387307],[-1.120732,8.379526,-1.437650,-9.766113,-6.848550,-5.788880,1.265542,-8.983216,6.742253,7.887767,-4.217141],[3.160696,6.838821,-0.283596,0.451692,-0.542038,-2.394338,-1.304195,2.025746,-2.863801,1.169875,1.661132],[-5.488672,6.937244,3.587873,3.307828,-7.530564,-2.572661,-3.881369,6.388701,7.920748,4.549289,7.241514],[1.486125,1.174372,-9.739700,-0.080896,3.145264,6.955633,-3.972255,9.122944,3.509915,-8.144215,3.725223],[-0.748853,-7.288363,-3.735993,9.159777,7.401776,-9.127682,-1.973973,5.547608,-7.230351,9.945393,6.171385]],[[-5.560948,8.269336,-7.816890,3.870779,5.560345,-3.742416,-2.439150,2.677298,-6.302417,-9.225213,9.612008],[-2.722907,7.906529,9.551219,-0.900258,-0.432648,2.343722,-2.700826,-9.071255,7.842122,0.321232,2.012314],[-1.715103,4.210437,-0.412913,3.074030,-9.705455,-2.640281,-6.516539,-6.179270,7.955137,-4.560439,6.724207],[-9.926201,-4.559081,5.661574,-5.730253,8.815622,1.007665,0.022068,-1.890688,-3.879110,-7.632746,-4.045088],[-1.775308,-3.267427,-3.742978,2.589775,9.424721,9.731985,3.016326,-8.353828,3.000212,7.210056,-0.779391],[-7.100303,1.235988,-1.574049,-2.529284,4.120278,8.400038,-6.376550,-9.501186,4.169625,0.899245,1.241643],[5.293549,-4.552524,-1.405429,-3.575113,5.561552,6.627789,5.716060,-7.349857,7.215330,-7.124429,9.477618],[-9.204235,-8.115707,-4.053728,-9.465523,3.154197,5.435637,-5.699352,5.549330,-3.642869,-5.234656,2.542352]],[[2.478971,7.676871,2.445245,-7.188493,-5.591253,-3.138541,-6.316265,-4.811766,6.881492,7.187697,-4.871704],[-6.590815,-5.157162,-7.368948,-6.750045,-1.702619,2.565037,-9.722893,8.126309,-8.938422,6.009941,4.099862],[6.154462,-4.540285,6.858932,0.284731,-8.582876,0.956592,-0.252754,8.074068,1.621416,6.752451,1.366755],[-6.380882,-4.749540,-1.785559,9.075671,4.918550,3.917652,8.298045,1.614355,-9.252537,-7.838523,-9.989797],[8.721191,-9.606561,2.489503,-3.353139,7.457951,-1.674823,9.315794,-4.860656,-6.203390,6.168799,0.816464],[-2.111867,7.744983,-1.118389,-3.615710,-6.761212,-3.999361,-0.543961,-8.415364,-0.396225,6.474289,9.987308],[9.255126,-3.779133,-5.373134,-6.527034,-7.596616,-4.483583,4.702537,-9.513565,-7.259138,-9.556725,0.160439],[-3.745732,1.478085,2.931465,2.885152,7.843651,-6.338025,-4.111545,4.285152,3.264284,3.261730,9.628441]],[[-4.404879,-1.441062,-4.962460,-6.339211,-7.499575,-2.655116,3.604825,-6.656966,-1.342988,-2.937953,0.322895],[4.405496,4.048699,7.244789,0.712238,4.313661,-6.638579,-4.298107,-2.081222,-2.624062,0.330645,-7.793174],[-3.554618,-4.887278,-4.722721,-5.283391,9.014837,-7.613596,-6.375210,-7.496437,-9.093976,1.711600,5.056610],[-6.460717,-0.373587,-1.284594,4.875343,5.951089,-9.905634,-6.735625,-9.334376,-6.890248,2.662424,-2.023377],[-9.765513,9.921995,-3.985197,4.979494,-1.387074,-2.569475,-2.263673,-6.560146,8.511883,-5.099364,6.708503],[2.627021,9.724319,-1.273147,-5.126569,-2.159977,2.179525,-7.863329,-7.686378,7.518647,7.202649,-6.475700],[9.716865,6.789946,-7.778077,-7.657558,-6.823489,5.966462,9.120047,-7.290806,-1.441668,6.897022,-2.352049],[9.588524,2.956642,3.448279,-2.119983,1.589244,5.628542,7.489710,-5.070253,5.295191,6.179754,-8.066099]],[[-8.496749,-8.213598,8.431617,-2.855880,6.992258,-7.345802,0.607373,6.554012,7.406650,3.464205,7.756461],[-7.744130,-0.453089,5.536793,-2.240751,-4.398738,-0.088296,4.568435,-2.705649,-5.096749,-2.014543,8.644186],[-3.472281,6.723785,1.492024,-6.270850,0.342695,-7.590657,7.550645,9.048915,1.813958,-4.613051,0.882222],[4.512974,-0.904344,3.618377,-8.880855,-5.055539,-9.482951,7.311939,-0.763182,-7.416485,-0.892609,0.350752],[-7.373535,-8.402852,-1.513275,-3.067691,-7.880449,-2.235379,3.343171,3.927297,-0.505336,-7.989804,-7.987777],[-7.398758,-9.340475,-7.174656,0.884191,-5.736126,4.618342,7.125466,5.348085,0.343804,5.922208,-9.662912],[6.714096,-9.426512,7.554870,-8.484714,-1.404577,-5.208073,-9.564397,-7.658609,-9.564593,7.863709,4.111464],[-6.822773,-2.980807,-7.242143,2.790228,-5.664500,9.140230,-0.808417,-9.453324,-1.344780,3.912376,5.825722]],[[2.467581,6.745332,-0.136819,5.018637,2.659202,-8.310416,0.355286,9.416036,-3.311224,-0.387630,-9.929591],[-4.709646,6.824335,-8.935749,-0.339832,-3.306557,9.863924,2.082127,3.593269,1.325594,-1.450365,-0.495060],[-3.522901,-2.318871,-9.844561,-7.829351,0.787190,1.921985,8.126638,3.032939,8.295291,-5.267817,6.315475],[-4.639947,-0.756049,7.355989,8.321899,8.879485,9.587094,-8.604399,-8.550321,2.421754,-3.253804,-5.299955],[-5.742645,5.615029,-7.539957,-9.867256,3.940531,-0.474399,-0.473531,8.806593,7.789411,2.248029,-8.137667],[-1.792898,6.095640,8.924261,-6.859318,9.242053,0.196500,-1.802904,-5.469382,-3.856119,1.895587,-0.722313],[-4.481272,-1.805207,-7.635608,9.374483,3.425783,1.710730,9.268343,-8.442921,-6.567190,-6.982412,-2.123769],[0.846225,2.723300,7.034027,-5.488129,-8.107718,6.450875,7.953071,-5.565879,-1.854232,-2.141989,-6.187833]],[[-7.574665,-0.894081,3.631669,3.715264,8.691893,-0.067649,-3.635656,-8.914510,1.149829,4.446349,9.683498],[-3.909524,2.137640,7.825653,-9.028041,8.168701,6.057765,-8.141058,-2.290629,-3.819976,-8.669424,-2.926337],[-0.187443,-1.910495,4.515771,-0.338671,-1.850249,0.457386,-1.121701,3.702304,-4.657564,3.736357,-5.977186],[-7.196956,1.143600,3.994280,-2.266028,-5.284641,-9.293421,-4.003800,6.723990,-4.418745,-5.250585,2.633216],[-2.094771,9.692525,-5.043912,-4.643556,-2.116687,8.885111,-0.068657,-1.535355,9.857598,7.639914,3.716257],[6.510152,1.679713,-1.996080,9.031829,-2.989505,-7.832892,1.762031,-1.800558,-9.682477,-3.801195,9.198154],[-4.535513,8.669183,-5.691725,8.082312,4.542575,-6.051059,-5.147554,-9.353344,3.736317,2.784496,-2.075131],[-3.179969,4.065449,-8.296373,-3.864974,-1.163880,9.921538,-9.694672,-2.513686,2.427857,6.149334,-3.729479]],[[-6.629367,5.307835,7.468538,0.718406,3.802026,7.526346,-7.985319,8.506905,7.516640,4.008976,1.530948],[-5.548857,9.163429,1.759241,-5.144160,-0.444982,-5.213141,-9.614595,4.684929,-0.422348,0.311422,6.927833],[2.739701,-3.976450,-7.956783,2.003268,-2.118574,8.372925,5.076983,-1.463930,2.875565,-5.876128,-6.105180],[8.617905,-9.084593,1.385510,6.047080,-9.346982,6.938931,0.871742,-2.642528,1.740474,7.035705,2.992475],[-7.650478,-1.768492,-6.869579,8.863759,4.994929,-5.386783,-4.111092,2.770409,-8.565503,-5.845856,-1.274089],[5.015850,-3.432318,2.543893,-6.914344,-7.301648,-4.270570,-8.334444,9.707326,-1.532913,-6.130239,7.038173],[-7.350947,0.696195,-7.179965,-0.122991,5.965086,7.349816,-3.569072,6.552978,8.610148,0.762464,-3.102625],[4.422729,-9.207831,-4.225001,-2.601713,1.348105,-5.993751,-2.033158,1.501942,-3.487463,-6.171064,-4.744411]]], dtype = "float32")#candidate|2747|(10, 8, 11)|const|float32
bop_2748 = relay.right_shift(call_2725.astype('uint16'), relay.reshape(const_2747.astype('uint16'), relay.shape_of(call_2725))) # shape=(10, 8, 11)
bop_2751 = relay.right_shift(call_2726.astype('uint16'), relay.reshape(const_2747.astype('uint16'), relay.shape_of(call_2726))) # shape=(10, 8, 11)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_2779 = relay.TupleGetItem(func_2417_call(), 0)
call_2780 = relay.TupleGetItem(func_2418_call(), 0)
func_2483_call = mod.get_global_var('func_2483')
func_2485_call = mutated_mod.get_global_var('func_2485')
const_2785 = relay.const([-1,2,2,-9,5,10,-6,-2,10,-1,3,9,7,1,10,-5,-8,3,9,2,1,-3,9,-9,-3,7,-2,-3,4,-6,-9,-9,8,-10,5,-2,-3,3,-8,-2,3,-6,-6,5,2,-6,10,9,-9,-6,10,1,3,-5,8,-2,7,-5,-9,-2,-10,4,-8,-2,2,3,6,-5,-10,9,-10,-9,1,9,-4,2,3,-8,9,-8,-7,-4,5,-1,-2,4,-1,10,-9,-1,1,-9,-9,5,-6,-10,-4,-4,-6,3,-7,-1,-10,-10,9,3,5,4,10,2,2,7,-6,4,-9,-1,8,3,-2,-8,-4,-3,-3,-1,-8,-7,2,-8,-8,-2,3,-1,5,8,9,-8,-5,10,-8,10,-5,-8,-2,7,9,7,3,1,-2,-5,5,3,-4,7,-5,10,6,9,2,-8,-5,3,2,6,-4,-6,4,-8], dtype = "uint16")#candidate|2785|(168,)|const|uint16
call_2784 = relay.TupleGetItem(func_2483_call(relay.reshape(const_2785.astype('uint16'), [6, 28])), 1)
call_2786 = relay.TupleGetItem(func_2485_call(relay.reshape(const_2785.astype('uint16'), [6, 28])), 1)
output = relay.Tuple([bop_2748,call_2779,call_2784,const_2785,])
output2 = relay.Tuple([bop_2751,call_2780,call_2786,const_2785,])
func_2787 = relay.Function([], output)
mod['func_2787'] = func_2787
mod = relay.transform.InferType()(mod)
output = func_2787()
func_2788 = relay.Function([], output)
mutated_mod['func_2788'] = func_2788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_2817 = relay.TupleGetItem(func_2417_call(), 1)
call_2818 = relay.TupleGetItem(func_2418_call(), 1)
output = call_2817
output2 = call_2818
func_2819 = relay.Function([], output)
mod['func_2819'] = func_2819
mod = relay.transform.InferType()(mod)
output = func_2819()
func_2820 = relay.Function([], output)
mutated_mod['func_2820'] = func_2820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_2821 = relay.TupleGetItem(func_2675_call(), 0)
call_2822 = relay.TupleGetItem(func_2676_call(), 0)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_2828 = relay.TupleGetItem(func_2675_call(), 0)
call_2829 = relay.TupleGetItem(func_2676_call(), 0)
output = relay.Tuple([call_2821,call_2828,])
output2 = relay.Tuple([call_2822,call_2829,])
func_2830 = relay.Function([], output)
mod['func_2830'] = func_2830
mod = relay.transform.InferType()(mod)
mutated_mod['func_2830'] = func_2830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2830_call = mutated_mod.get_global_var('func_2830')
call_2831 = func_2830_call()
output = call_2831
func_2832 = relay.Function([], output)
mutated_mod['func_2832'] = func_2832
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2920 = relay.var("var_2920", dtype = "uint8", shape = (4, 10, 8))#candidate|2920|(4, 10, 8)|var|uint8
var_2921 = relay.var("var_2921", dtype = "uint8", shape = (4, 10, 8))#candidate|2921|(4, 10, 8)|var|uint8
bop_2922 = relay.less(var_2920.astype('bool'), relay.reshape(var_2921.astype('bool'), relay.shape_of(var_2920))) # shape=(4, 10, 8)
output = relay.Tuple([bop_2922,])
output2 = relay.Tuple([bop_2922,])
func_2925 = relay.Function([var_2920,var_2921,], output)
mod['func_2925'] = func_2925
mod = relay.transform.InferType()(mod)
var_2926 = relay.var("var_2926", dtype = "uint8", shape = (4, 10, 8))#candidate|2926|(4, 10, 8)|var|uint8
var_2927 = relay.var("var_2927", dtype = "uint8", shape = (4, 10, 8))#candidate|2927|(4, 10, 8)|var|uint8
output = func_2925(var_2926,var_2927,)
func_2928 = relay.Function([var_2926,var_2927,], output)
mutated_mod['func_2928'] = func_2928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_2933 = relay.TupleGetItem(func_2675_call(), 0)
call_2934 = relay.TupleGetItem(func_2676_call(), 0)
output = relay.Tuple([call_2933,])
output2 = relay.Tuple([call_2934,])
func_2953 = relay.Function([], output)
mod['func_2953'] = func_2953
mod = relay.transform.InferType()(mod)
output = func_2953()
func_2954 = relay.Function([], output)
mutated_mod['func_2954'] = func_2954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_2961 = relay.TupleGetItem(func_2675_call(), 0)
call_2962 = relay.TupleGetItem(func_2676_call(), 0)
func_2705_call = mod.get_global_var('func_2705')
func_2708_call = mutated_mod.get_global_var('func_2708')
const_2972 = relay.const([-10,1,7,5,7,-4,-9,2,10,-5,-1,1,-9,9,6,9,-6,-10,-8,4,2,-10,-6,-8,10,9,2,-7,1,-6,4,5,-8,5,-1,-9,7,-3,-4,7,6,-3,-8,-1,8,7,5,-6,-8,-8,1,3,7,-3,9,-2,8,5,-10,8,-6,-4,9,-5,-10,-6,-10,-1,5,7,3,-8,7,-10,10,6,3,6,-9,-8,3,2,-3,8,6,-1,-7,4,2,10,2,-7,-6,-6,3,-6,8,-10,10,8,-5,6,7,5,-4,1,-3,-10,1,-5,-1,-3,-8,1,-4,3,9,-1,-1,-8,-3,8,7,-6,5,-5,2,-5,-2,8,7,-5,-5,3,-5,9,-1,-4,7,7,1,8,1,-6,4,-10,9,7,4,-8,-2,4,7,2,-10,-8,2,-6,1,-9,-8,-6,-6,1,-3,-6,-7,8], dtype = "uint16")#candidate|2972|(168,)|const|uint16
call_2971 = relay.TupleGetItem(func_2705_call(relay.reshape(const_2972.astype('uint16'), [168,])), 1)
call_2973 = relay.TupleGetItem(func_2708_call(relay.reshape(const_2972.astype('uint16'), [168,])), 1)
func_2705_call = mod.get_global_var('func_2705')
func_2708_call = mutated_mod.get_global_var('func_2708')
call_2979 = relay.TupleGetItem(func_2705_call(relay.reshape(const_2972.astype('uint16'), [168,])), 1)
call_2980 = relay.TupleGetItem(func_2708_call(relay.reshape(const_2972.astype('uint16'), [168,])), 1)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_2982 = relay.TupleGetItem(func_2675_call(), 0)
call_2983 = relay.TupleGetItem(func_2676_call(), 0)
bop_2989 = relay.greater_equal(call_2982.astype('bool'), relay.reshape(call_2961.astype('bool'), relay.shape_of(call_2982))) # shape=(10, 8, 11)
bop_2992 = relay.greater_equal(call_2983.astype('bool'), relay.reshape(call_2962.astype('bool'), relay.shape_of(call_2983))) # shape=(10, 8, 11)
output = relay.Tuple([call_2971,const_2972,call_2979,bop_2989,])
output2 = relay.Tuple([call_2973,const_2972,call_2980,bop_2992,])
func_2999 = relay.Function([], output)
mod['func_2999'] = func_2999
mod = relay.transform.InferType()(mod)
output = func_2999()
func_3000 = relay.Function([], output)
mutated_mod['func_3000'] = func_3000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2787_call = mod.get_global_var('func_2787')
func_2788_call = mutated_mod.get_global_var('func_2788')
call_3033 = relay.TupleGetItem(func_2787_call(), 3)
call_3034 = relay.TupleGetItem(func_2788_call(), 3)
func_2999_call = mod.get_global_var('func_2999')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_3042 = relay.TupleGetItem(func_2999_call(), 0)
call_3043 = relay.TupleGetItem(func_3000_call(), 0)
func_510_call = mod.get_global_var('func_510')
func_512_call = mutated_mod.get_global_var('func_512')
var_3045 = relay.var("var_3045", dtype = "float32", shape = (720,))#candidate|3045|(720,)|var|float32
call_3044 = relay.TupleGetItem(func_510_call(relay.reshape(var_3045.astype('float32'), [5, 9, 16])), 0)
call_3046 = relay.TupleGetItem(func_512_call(relay.reshape(var_3045.astype('float32'), [5, 9, 16])), 0)
var_3050 = relay.var("var_3050", dtype = "uint8", shape = (11, 10, 5))#candidate|3050|(11, 10, 5)|var|uint8
bop_3051 = relay.logical_or(call_3042.astype('bool'), relay.reshape(var_3050.astype('bool'), relay.shape_of(call_3042))) # shape=(11, 10, 5)
bop_3054 = relay.logical_or(call_3043.astype('bool'), relay.reshape(var_3050.astype('bool'), relay.shape_of(call_3043))) # shape=(11, 10, 5)
func_1890_call = mod.get_global_var('func_1890')
func_1894_call = mutated_mod.get_global_var('func_1894')
var_3061 = relay.var("var_3061", dtype = "float64", shape = (9, 1))#candidate|3061|(9, 1)|var|float64
var_3062 = relay.var("var_3062", dtype = "float64", shape = (1155,))#candidate|3062|(1155,)|var|float64
call_3060 = relay.TupleGetItem(func_1890_call(relay.reshape(var_3061.astype('float64'), [3, 3, 1]), relay.reshape(var_3062.astype('float64'), [1155,]), ), 2)
call_3063 = relay.TupleGetItem(func_1894_call(relay.reshape(var_3061.astype('float64'), [3, 3, 1]), relay.reshape(var_3062.astype('float64'), [1155,]), ), 2)
uop_3067 = relay.acosh(call_3060.astype('float64')) # shape=(1155,)
uop_3069 = relay.acosh(call_3063.astype('float64')) # shape=(1155,)
output = relay.Tuple([call_3033,call_3044,var_3045,bop_3051,var_3061,var_3062,uop_3067,])
output2 = relay.Tuple([call_3034,call_3046,var_3045,bop_3054,var_3061,var_3062,uop_3069,])
func_3078 = relay.Function([var_3045,var_3050,var_3061,var_3062,], output)
mod['func_3078'] = func_3078
mod = relay.transform.InferType()(mod)
mutated_mod['func_3078'] = func_3078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3078_call = mutated_mod.get_global_var('func_3078')
var_3080 = relay.var("var_3080", dtype = "float32", shape = (720,))#candidate|3080|(720,)|var|float32
var_3081 = relay.var("var_3081", dtype = "uint8", shape = (11, 10, 5))#candidate|3081|(11, 10, 5)|var|uint8
var_3082 = relay.var("var_3082", dtype = "float64", shape = (9, 1))#candidate|3082|(9, 1)|var|float64
var_3083 = relay.var("var_3083", dtype = "float64", shape = (1155,))#candidate|3083|(1155,)|var|float64
call_3079 = func_3078_call(var_3080,var_3081,var_3082,var_3083,)
output = call_3079
func_3084 = relay.Function([var_3080,var_3081,var_3082,var_3083,], output)
mutated_mod['func_3084'] = func_3084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2830_call = mod.get_global_var('func_2830')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_3089 = relay.TupleGetItem(func_2830_call(), 0)
call_3090 = relay.TupleGetItem(func_2832_call(), 0)
output = relay.Tuple([call_3089,])
output2 = relay.Tuple([call_3090,])
func_3093 = relay.Function([], output)
mod['func_3093'] = func_3093
mod = relay.transform.InferType()(mod)
output = func_3093()
func_3094 = relay.Function([], output)
mutated_mod['func_3094'] = func_3094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_3095 = relay.TupleGetItem(func_2417_call(), 0)
call_3096 = relay.TupleGetItem(func_2418_call(), 0)
output = relay.Tuple([call_3095,])
output2 = relay.Tuple([call_3096,])
func_3104 = relay.Function([], output)
mod['func_3104'] = func_3104
mod = relay.transform.InferType()(mod)
mutated_mod['func_3104'] = func_3104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3104_call = mutated_mod.get_global_var('func_3104')
call_3105 = func_3104_call()
output = call_3105
func_3106 = relay.Function([], output)
mutated_mod['func_3106'] = func_3106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_3159 = relay.TupleGetItem(func_2417_call(), 1)
call_3160 = relay.TupleGetItem(func_2418_call(), 1)
func_1175_call = mod.get_global_var('func_1175')
func_1178_call = mutated_mod.get_global_var('func_1178')
var_3175 = relay.var("var_3175", dtype = "float64", shape = (420,))#candidate|3175|(420,)|var|float64
call_3174 = relay.TupleGetItem(func_1175_call(relay.reshape(var_3175.astype('float64'), [14, 3, 10])), 0)
call_3176 = relay.TupleGetItem(func_1178_call(relay.reshape(var_3175.astype('float64'), [14, 3, 10])), 0)
func_1384_call = mod.get_global_var('func_1384')
func_1388_call = mutated_mod.get_global_var('func_1388')
var_3178 = relay.var("var_3178", dtype = "uint32", shape = (360,))#candidate|3178|(360,)|var|uint32
call_3177 = relay.TupleGetItem(func_1384_call(relay.reshape(var_3178.astype('uint32'), [12, 2, 15]), relay.reshape(var_3178.astype('uint32'), [12, 2, 15]), ), 2)
call_3179 = relay.TupleGetItem(func_1388_call(relay.reshape(var_3178.astype('uint32'), [12, 2, 15]), relay.reshape(var_3178.astype('uint32'), [12, 2, 15]), ), 2)
var_3185 = relay.var("var_3185", dtype = "float64", shape = (10, 8, 11))#candidate|3185|(10, 8, 11)|var|float64
bop_3186 = relay.equal(call_3159.astype('bool'), relay.reshape(var_3185.astype('bool'), relay.shape_of(call_3159))) # shape=(10, 8, 11)
bop_3189 = relay.equal(call_3160.astype('bool'), relay.reshape(var_3185.astype('bool'), relay.shape_of(call_3160))) # shape=(10, 8, 11)
bop_3193 = relay.subtract(call_3177.astype('uint32'), relay.reshape(var_3178.astype('uint32'), relay.shape_of(call_3177))) # shape=(12, 2, 15)
bop_3196 = relay.subtract(call_3179.astype('uint32'), relay.reshape(var_3178.astype('uint32'), relay.shape_of(call_3179))) # shape=(12, 2, 15)
func_1134_call = mod.get_global_var('func_1134')
func_1137_call = mutated_mod.get_global_var('func_1137')
const_3198 = relay.const([-4.331897,-8.227876,-6.721931,-7.771944,0.733543,-1.578396,-8.768661,5.707308,-7.823661,-1.828280,1.700455,-1.625118,3.228059,-5.713565,8.389513,8.548849,-7.140203,-0.887115,8.993661,-5.064454,-5.496048,2.180139,-9.937662,-3.868644,-3.276675,-6.214177,3.094738,5.045936,-5.972008,-1.001766,-2.375710,3.238649,6.610203,-4.735530,-8.527108,-5.950202,3.848260,7.091544,-6.256595,5.841371,-5.875859,3.054246,-8.207496,7.500681,-8.495807,-3.298998,9.355195,5.626347,9.221687,2.811135,-4.941785,9.008727,9.236118,0.649529,-6.192233,-2.955506,-0.165035,5.220998,-1.270849,1.281410,-1.206292,-3.607652,4.811455,-3.361608,8.359782,-2.623785,6.852345,1.159963,2.715423,6.202928,2.749081,-8.515258,3.602194,-8.958363,-8.942061,-9.264453,6.974440,4.625223,-2.620703,-6.999869,7.868925,1.426043,-9.313564,-8.661298,2.037106,5.970268,1.911084,-5.411619,5.467234,7.910376,-1.647043,-3.306224,-7.391967,-7.533168,-2.088442,-1.465353,6.904424,-0.589503,-6.474187,8.525572,-9.417585,6.267394,0.880746,-7.303240,-4.652228,-4.608856,3.061281,1.990988,-9.989724,-0.792330,-0.036582,2.475292,-1.324761,9.235724,-2.796024,-3.167066,1.242666,-2.015744,9.242376,-3.434020,-9.979245,-1.799830,4.178081,5.274522,9.666135,-0.829184,-1.212618,-4.859038,-1.455014,-1.547218,-8.814741,2.949549,-3.278351,-5.227452,5.375088,3.911929,-5.185259,9.210121,2.750553,0.068155,7.920893,-0.985904,4.623386,-3.966029,-7.182068,-0.273568,-5.783393,8.733366,-2.794521,-5.497153,-8.286652,9.891936,-4.253239,-0.738277,-8.674282,-7.330259,-4.231778,1.656607,6.891900,0.879725,-2.124800,5.692654,1.232914,5.045096,-9.574001,6.097754,-0.297468,1.347436,-8.317157,-2.579035,-7.831870,-1.578788,-5.588250,-4.179686,8.050940,8.899917,-9.807008,-5.034159,7.391567,6.677153,-4.087347,-4.947818,2.099231,2.134150,-0.089810,-3.047411,-5.496417,0.629639,9.956924,2.439254,1.178175,-2.586034], dtype = "float32")#candidate|3198|(192,)|const|float32
call_3197 = relay.TupleGetItem(func_1134_call(relay.reshape(const_3198.astype('float32'), [8, 6, 4])), 0)
call_3199 = relay.TupleGetItem(func_1137_call(relay.reshape(const_3198.astype('float32'), [8, 6, 4])), 0)
func_285_call = mod.get_global_var('func_285')
func_288_call = mutated_mod.get_global_var('func_288')
const_3211 = relay.const([7.865965,-2.324604,5.409714,3.502729,5.904431,8.433004,-9.879220,0.155256,2.148599,-8.518645,-9.181240,-6.775920,2.712113,9.707198,3.200888,4.553651,-2.594506,-7.183589,7.345130,9.579422,6.386625,8.768499,3.917456,1.587169,-0.478911,-6.914246,-9.011363,2.905886,-1.554387,1.661275,-9.003180,-0.889552,-2.862393,-4.234785,-8.806513,-8.548101,2.137182,2.688156,3.413411,5.498950,-5.039602,-7.729942,-0.758021,9.624142,-6.559803,-3.781002,8.905005,-2.053638,1.884204,1.373062,-3.620640,-7.486289,6.259014,1.617337,-3.808790,-9.659373,-0.996380,-9.415308,8.893598,7.763873,-8.514361,-9.933206,-7.293094,8.341320,9.875888,-6.962282,-2.597989,0.501939,-0.116549,-0.506770,-6.818516,-8.959551,-0.793354,7.295696,-3.519074,6.622319,5.356408,-3.362785,-2.732093,2.128844,7.352807,-8.351492,-2.332264,6.672335,-1.793721,-4.747602,6.650287,3.621649,3.995943,8.120653,3.427221,-6.476360,-9.286964,-4.210674,-4.771863,-8.560561,3.636828,5.149151,4.425983,8.857917,9.475282,-4.858577,-7.200704,-4.364040,-8.430874,1.133840,-5.745516,-6.298355,-8.993985,-3.409978,8.950386,-1.417971,9.251554,-8.374431,9.151923,-9.978086,1.317024,3.208114,-0.149352,4.549359,7.861381,-5.072779,-0.874166,-8.853899,5.765389,2.858545,3.244693,-8.570801,-5.344185,9.547300,-0.830400,-9.501014,-7.785464,5.793836,2.804302,-3.496696,2.481031,-9.687477,8.832061,-3.051865,7.364644,3.741715,-8.037696,6.827000,8.170570,-6.494070,-5.946973,5.250413,-8.989157,5.298029,-7.044375,-8.331500,-8.235207,7.405878,2.188674,5.538594,-6.719947,6.046115,-1.656045,9.063184,-7.716581,4.559198,-5.607253,7.934581,0.067977,-9.063607,-2.489378,4.987125,3.070507,4.830759,-8.861091,-8.443356,6.684088,0.174632,-2.242191,8.004773,-6.226906,-8.623495,-1.608811,9.950040,-7.286088,7.939572,-7.751725,-9.333734,3.715606,-5.764142,-9.349609,-9.009464,7.275664,1.057037,-3.486031,-7.500672,6.566160,3.595405,-9.637781,8.492124,-6.860001,-2.960434,9.547602,5.764642,-4.723594,-9.957140,-4.482785,-8.793499,5.406734,7.371351,4.280446,-3.332960,-2.703378,-6.536198,3.143375,-6.008317,-1.978829,-4.713244,7.877281,-5.115975,-9.606935,-9.596010,-6.753858,-3.456773,-3.996678,2.210298,6.341793,-2.431227,-9.632942,-9.947120,-2.115245,1.042486,3.261213,-8.868684,0.339659,-3.027487,0.594597,-0.083351,-8.562817,9.589741,9.070316,-7.184805,8.106427,-4.843567,4.551249,7.035551,5.661511,-4.420041,-6.148009,9.925927,8.430809,0.902145,-8.640575,-8.042042,-4.441796,5.260500,7.767506,-4.855653,-1.940886,-3.855251,-9.208040,8.497940,-5.303496,-6.468163,-5.005855,9.234345,-9.491567,2.610486,-6.724698,7.813213,3.605016,-4.307180,-3.219526,1.863026,-9.339584,-4.213446,9.079050,-7.718162,4.744441,4.537392,1.387276,7.428079,8.052136,-5.005789,8.682789,3.971273,4.899668,6.201203,-1.853171,-8.397785,-3.419953,0.039792,1.909884,3.434476,6.710072,-0.501504,3.837565,-9.942049,-6.512629,5.689991,-2.531393,0.229188,-3.043717,9.248496,9.698738,4.644538,-9.403654,-1.470727,3.498513,-5.701506,-8.712706,3.436464,-3.431287,-2.127092,-4.041326,-6.256153,-0.377790,-7.967895,-1.687679,-3.879247,-4.510111,4.733038,-8.240943,-6.439333,-8.661306,-8.934016,5.162846,-2.715146,6.936591,4.364282,-5.672238,-9.978383,3.239707,-5.670945,-2.022637,6.029179,-1.209398,0.963337,-6.431189,-0.400954,-4.169608,2.858827,-9.717940,-8.223384,7.905833,-9.947629,5.986896,-0.016622,5.858952,3.306553,1.052897,-9.814510,8.043231,7.899723,4.256438,-3.469141,-6.203846,-8.961575,-8.259571,5.122714,-5.401080,3.484258,-2.845062,-3.944148,-2.655924,-9.609196,-0.535498,-0.611112,-8.384732,-4.653029,7.416715,-6.797558,-8.505374,8.441872,3.114936,-1.256839,-2.430384,2.704563,-0.291071,-5.338824,7.877599,-8.227625,-1.670696,-5.014734,-7.081936,-3.954828,7.919180,-5.119915,6.578205,-7.581912,-6.562559,-8.642957,6.082205,6.970254,7.612561,-9.875239,-8.795974,4.703143,6.254887,-3.961347,-7.630193,-3.270360,8.788060,5.866321,-9.145344,0.384245,5.091448,4.482533,5.305135,-5.187065,-4.418000,-2.832790,1.364825,9.157811,4.532697,7.148071,3.475982,3.279485,-0.586658,1.690383,4.164064,1.013339,3.100096,4.642125,4.946969,4.007407,-4.417189,6.674208,9.600998,4.880308,-1.506940,-9.022866,-0.197914,-5.515552,1.306210,8.570167,-1.716549,4.016204,3.246815,-1.662144,-5.004893,-1.122576,9.173569,-8.961802,8.636470,1.227466,-0.854807,8.998161,-9.535710,2.940708,9.599319,-3.441283,0.598129,3.060023,-2.962473,-2.630052,-3.058271,1.201715,-6.147580,-2.324909,8.473552,7.799751,-2.334752,-8.757635,-1.015579,-3.560302,-9.033660,3.524690,-9.705860,-7.448651,-5.746254,1.734006,-6.635934,9.631627,-8.844597,-4.167357,7.969473,-4.169437,-3.124081,-9.359065,-0.751567,-9.343984,8.734702,7.789018,8.076972,-0.758499,-7.152704,-0.230282,5.527337,6.988974,6.559216,3.708708,1.955594,-8.589969,6.125970,-4.366916,4.920715,-9.768319,-4.909077,-8.818832,-6.058502,6.268217,-5.678351,7.883069,0.859657,-7.365787,-7.434944,-6.942973,6.553815,0.162674,3.461457,-1.349623,-2.004652,-8.205206,-2.131791,-1.866087,0.646074,0.097921,7.391412,1.981155,5.123281,-6.378555,-8.658699,8.437920,7.435951,-6.373211,-1.381087,-3.575173,6.445184,3.153628,6.116157,-7.118720,-6.562397,8.261844,-9.660273,-0.478917,-4.139810,7.295693,4.421745,-9.955207,7.518886,-3.577874,7.391778,6.032116,0.750163,6.063751,-2.994920,5.109965,8.485438,5.210423,-2.979475,-6.388698,-0.669722,9.982012,-6.867661,-2.321434,-2.247514,-2.343243,6.525608,-5.668580,-9.420628,-7.034604,-1.723008,5.674258,-9.125438,2.468915,5.840435,0.509781,-3.563370,8.750224,-8.593006,-7.490337,-3.246343,-2.720322,-8.281630,-8.329582,-5.415491,-9.307731,1.112784,4.485475,-3.928517,-1.773856,-5.228372,6.511183,-1.649593,2.076073,-2.506787,5.367459,-3.945639,0.215887,-1.974307,-4.560844,-1.235919,7.547285,-0.391889,9.918964,-1.668418,-1.341650,3.832024,1.762983,9.779642,-7.150141,-9.325664,-5.769690,1.346411,-8.919074,-2.754273,2.693050,4.598818,-6.429181,3.081748,-7.266293,1.306029,-7.936057,-2.566432,-2.897334,-2.562863,4.209710,-4.375548,-5.423649,8.537281,9.535064,4.755076,-4.846175,-0.226189,-5.345591,-1.108600,5.819947,-3.739089,-4.067342,9.680760,-3.641936,8.242406,-8.168187,8.007729,-1.009351,1.735505,-9.340353,-5.918813,0.187384,7.572992,-1.938721,-0.011058,6.488338,9.823034,2.806490,-0.892381,-1.371721,-6.623345,3.655257,4.542963,-1.647382,-0.433011,8.074718,-1.375020,6.622011,1.016000,7.078365,4.304792,-4.781299,9.587369,0.784978,0.745357,2.363223,-1.874815,2.849101,-2.910753,7.904759,5.354233,1.705502,7.718504,4.019023,-4.524147,8.895302,-6.026730,-9.204440,3.362159,9.734559,-4.668087,-2.959493,-0.238585,-8.261866,-1.147795,3.091699,4.245537,8.224505,2.608870,3.950490,0.791282,4.481498,-6.828655,1.965157,7.930778,-0.408549,-1.042633,-5.947003,-5.629025,2.036564,-0.298491,-9.434489,-1.112077,1.037331,1.327887,7.582523,0.485488,-5.113904,0.354197,2.710669,-7.546235,-4.790184,3.822596,1.043151,9.675074,-2.879314,9.544813,4.904525,-3.772187,5.698079,4.557937,-5.593952,5.085649,-9.458676,0.474496,8.447287,9.676259,-0.849605,3.368474,2.240780,-6.876334,-5.621961,-5.013069,2.068007,-6.916738,-6.753643,-9.719659,-0.196837,5.929797,-7.171722,1.425183,2.298685,1.359344,1.764647,6.912287,6.319477,-5.804904,-9.514061,-8.161658,1.567951,-9.219235,-6.862688,-9.918849,5.742235,-4.997608,-4.621741,6.092263,-2.368551,9.970494,1.448253,-7.875181,9.348091,1.350767,-8.048548,4.850482,-5.954204,7.310766,-8.449508,-9.793664,-5.531189,9.726345,-6.829836,-2.415574,8.085613,-8.302209,-6.313415,-3.690440,1.001548,8.344171,9.433122,1.626987,8.377658,-6.630158,-4.743583,3.879114,1.013777,-0.398977,9.650557,1.507355,-7.564038,-4.065968,-7.532994,-2.841273,-7.330334,4.191694,8.342781,1.401956,-6.349302,-6.794853,-9.891323,9.323381,5.491919,0.474204,-8.589252,5.433576,-9.482877,5.780819,-2.525322,-5.632876,-8.619624,-0.077258,-4.928899,-0.446995,-8.181394,-1.271067,-6.329611,-8.489450,0.017291,-4.135511,-4.041387,-5.717449,9.875061,-7.792763,-1.182039,-6.188122,-9.365842,-2.147573,9.072496,7.579673,1.102920,-6.267955,4.813077,3.111381,4.569769,-8.697048,-9.255363,-6.639034,0.408535,0.569790,-9.248302,-0.675900,6.640087,4.998214,3.657952,-4.706988,-6.763192,-0.098876,5.110780,-0.742573,5.992649,1.680042,-8.417865,-4.509029,-3.595031,9.614917,6.574324,9.904515,-2.818144,9.385741,-6.458313,-4.712306,0.868715,-1.999787,1.772494,4.753421,-4.954805,-6.287400,-8.555500,-6.154618,-5.759327,5.908955,3.697738,-3.559677,-2.233356,9.241630,1.009351,1.920906,-9.251540,-5.893537,5.411938,-8.540164,-3.039852,-8.225743,5.919661,1.763498,-0.480385,-6.060174,8.201079,0.240097,-1.813198,-0.180420,-3.453751,-3.315762,-4.958749,-3.314777,-5.184603,8.276714,4.419867,-8.364377,-4.395199,7.061870,-0.228310,-4.811820,-1.987406,1.058441,-5.052978,3.899943,-3.444609,2.410096,-4.257898,-9.154684,-6.168349,2.640598,8.446866,1.336328,0.170095,-2.660150,-5.406483,1.330136,-0.085416,6.882452,1.135955,5.307662,7.285532,-6.401822,0.001863,-3.350572,-0.924536,3.537073,2.261658,0.837826,0.785231,8.850993,-5.963586,3.293371,7.758951,7.209726,4.058668,-2.696005,6.588732,-9.341410,6.167409,-8.607991,-5.075510,9.487366,-5.771804,-6.946132,-6.225674,4.258196,-0.505824,5.263321,-1.930312,-5.809720,-5.131316,-1.270465,7.158148,-3.058763,6.562987,-9.561225,-7.056284,-6.488490,-8.643384,6.620751,-2.871425,6.850381,1.305636,-3.352951,3.115631,2.283669,-8.985691,6.507177,-2.607596,-3.011851,1.107131,7.228637,4.613679,-7.775199,-7.310206,-9.243179,4.489242,8.090910,0.605832,-3.069838,9.850764,-2.891105,1.386277,3.403949,3.132721,5.463375,6.444669,-5.989007,-8.125775,-8.957538,-7.892428,2.801738,6.546736,-0.675418,2.183736,3.123577,-5.911162,-0.747049,-2.557598,7.454725,6.075349,-4.506299,0.012954,9.454589,4.883242,-6.822652,2.397861,7.397935,8.661545,0.867257,-7.960187,7.861193,-8.877477,-9.351950,9.388015,-7.476460,8.027733,0.719563,9.796616,-0.542153,0.981260,6.405734,3.860438,1.716054,-5.982911,7.218967,4.769021,-4.792554,-2.418668,-3.839754,-7.145477,-2.069472,9.045133,6.611373,9.740429,-3.729286,-9.463608,5.012372,-1.674684,-0.341995,1.179294,-2.635670,-1.835456,-5.607499,6.278235,1.170993,1.898371,6.239923,9.894533,5.421440,9.650094,0.355292,8.533846,5.470767,5.880866,7.544428,0.709857,-7.228106,-9.406534,-2.158347,5.750797,0.450459,9.411547,-2.719451,8.116767,3.633883,9.425491,2.746438,3.994955,-0.861134,-1.877281,5.923237,9.049869,-6.184352,-8.970402,-9.223221,-7.578847,-6.287263,-6.064192,-5.482743,8.814820,-9.931237,3.710300,4.512272,-3.280675,1.679929,9.541334,-6.808694,-2.339644,-5.672881,3.695658,9.915924,2.135372,-3.511024,-4.852318,0.637928,-9.988440,-0.851105,8.813627,5.503094,0.147497,1.175698,8.901467,-3.468610,-4.887626,1.166971,7.898270,8.886741,-8.760370,-2.313660,-9.924343,-6.191371,-2.477805,-4.570032,2.342691,1.496586,4.608561,1.620155,9.254519,-4.241189,1.663995,1.291752,-1.486742,9.083571,-7.774451,5.585521,3.469093,-5.427341,-7.112219,-4.599604,-9.734421,3.027286,-4.746823,-0.377464,-0.791847,9.517077,-1.481803,-2.093332,6.766677,-6.524083,4.854272,-1.837852,3.490432,-7.081462,-9.975469,8.217341,7.834812,-8.785744,-2.926605,2.358066,9.270792,-8.907336,5.456225,8.236804,-3.660564,1.523379,4.190224,-1.549219,-9.816444,7.837550,1.895679,7.292526,8.080077,-3.644120,-5.449821,-6.280979,-0.328423,-2.229125,9.457357,-3.009406,3.871502,4.689892,-3.161781,2.444164,8.036736,4.981036,-1.496368,8.595417,-9.080195,4.183079,8.240790,-5.861783,-4.443882,8.983949,-1.433210,9.896227,7.976361,9.319847,-7.736989,-4.211855,0.444796,4.232317,-2.327240,9.226085,-4.295025,-9.692223,-6.571249,-8.861905,7.879023,-6.956016,9.854055,6.568297,-0.001056,-1.173748,4.967898,-0.954154,-0.388964,-9.228484,-5.450954,4.484467,-5.259648,-0.701276,6.521815,4.411774,4.520143,-5.805541,0.442200,8.151975,-0.170729,6.149089,0.701149,-1.811277,3.265123,-1.310546,-1.934566,-7.091141,8.759158,7.490135,5.895403,2.760870,-1.952718,-8.643418,3.746807,-1.749777,4.224521,-6.268316,1.067695,0.467478,7.655820,8.250993,2.898628,4.639791,-1.558503,5.927234,6.968298,-1.943693,4.505233,-3.472823,4.736806,-8.098843,-1.648842,5.464443,-4.266826,-5.191762,-3.510638,4.901351,8.329233,1.225983,-3.343780,-2.058015,8.401948,6.309655,6.076421,-3.996678,-7.403521,1.041261,4.030562,7.775400,0.583272,8.222270,3.365325,-8.485941,2.040489,-1.760640,-0.248034,-4.796849,-6.277891,-3.448178,9.007569,-3.477763,-5.678023,-8.849234,-2.114653,8.152592,5.056943,8.026938,4.543344,2.206340,8.501475,-4.890053,-3.332708,-2.900837,3.622005,-3.786044,8.750762,-9.333114,5.292536,7.940045,-7.032698,5.536424,0.297375,-4.035033,-1.174992,-2.492090,-2.015836,-1.763532,2.692662,0.588690,5.074707,3.237271,-2.806106,-4.685866,-1.138361,5.887385,-4.413240,-4.331458,8.249763,0.450239,-3.974378,-6.792345,-5.689204,-1.950465,7.060730,-9.305847,3.604253,3.758118,-3.217513,9.560739,9.125334,3.957284,-9.476779,6.675939,8.439850,7.078393,-9.951643,-8.607352,-9.110828,-2.004348,-4.531132,4.270913,-0.158381,4.958930,-5.493698,9.175816,9.854219,-1.953864,-1.479931,5.183954,-1.663851,-7.327673,-0.146051,0.695386,8.456477,-2.057768,3.503119,7.130810,-9.665677,-2.374816,-2.189162,-7.185167,-3.609462,5.182721,4.536073,-6.938643,4.788064,-2.987360,6.506671,7.939167,-7.790065,-7.505796,2.442954,1.600598,-2.142300,-0.848620,-9.857230,-7.203152,2.917974,1.407163,8.292667,-9.075242,-9.361461,-1.347580,1.480241,-6.819158,-9.774251,1.166253,1.182656,1.733463,-9.815956,-1.398426,4.742056,3.438215,-0.271722,1.801054,3.794582,-2.163544,-5.009020,8.963861,-4.874926,6.069339,7.388233,-2.035531,-8.245601,-1.191402,-3.081368,5.603882,-9.157202,-1.357652,9.372605,-3.028585,-5.560089,5.730076,6.391595,-5.924706,-1.681368,-5.083493,-2.774837,-5.596055,6.933463,4.822410,1.833826,9.567761,9.245009,-6.849513,2.435991,1.851634,-7.017885,-9.615207,-3.767318,4.006908,6.090583,-9.808466,7.946886,-5.587690,6.737601,-4.767586,-8.513069,-9.690311,5.302221,-0.621610,7.758687,-4.426060,-5.509560,-9.275603,3.651909,-9.670308,6.983219,-1.770236,7.955543,0.185919,-6.663251,-2.151262,1.307930,5.173043,6.252130,7.571457,4.085351,-9.891068,2.305438,-5.900312,7.540439,6.080305,9.471463,2.275767,-8.229672,-0.328760,-9.378472,5.547283,7.387687,-0.150618,-6.174327,-7.883025,-8.724533,-4.457328,8.658278,-4.869273,0.054423,3.559616,-3.917525,2.204555,-5.800160,5.531873,-3.465204,-5.325744,7.310172,3.637692,8.364360,-0.026004,-3.016035,3.125684,6.589420,-2.004348,2.739823,-7.412165,-0.172671,-1.929384,0.916604,8.887155,-5.240834,5.963490,9.889073,0.110067,-1.547940,-2.849314,-7.701511,-1.153834,0.882140,-3.878360,6.199905,-3.496093,5.862333,-5.706467,4.539244,-5.935744,4.195277,4.303099,-8.024147,9.818344,-5.641250,-5.146226,2.180774,0.034703,1.368806,7.444836,-7.310386,2.801786,-2.606844,-2.233549,5.840047,6.352325,-1.311019,6.617802,-6.873156,-0.981770,-4.967638,1.639692,1.746570,2.414570,6.406903,8.573432,-9.328052,2.134685,-9.788314,-2.559771,-7.491372,0.789495,0.237878,-0.908089,6.174392,-0.416249,2.600625,-7.730366,-7.783705,3.668050,-9.523828,6.242146,1.675366,-6.004389,-5.257781,-2.185669,-3.783119,-8.101201,-8.241556,9.271637,7.195765,-7.671155,-4.468475,4.271718,-0.763409,-3.817721,-6.806164,3.392340,-9.850563,5.361708,9.290142,2.139825,7.605877,7.033103,-3.017662,-1.061275,-3.197413,-7.126504,0.654764,-5.374987,6.347287,-6.109067,-4.023401,6.405147,6.429814,-7.070055,-5.246634,9.381212,2.616854,-0.962773,6.162329,6.889682,8.399479,-2.687587,1.208423,-4.364832,8.463432,-9.180382,-3.865635,-5.689325,7.728551,-5.422914,4.164761,4.041607,-5.640841,-5.258324,-7.605604,-1.693474,-5.685024,-5.521673,3.334548,-1.903890,-6.071409,-0.269817,-6.543600,-0.275333,1.739324,-3.013808,-1.089278,5.504621,0.461651,5.674544,8.804705,8.943313,-5.105925,-1.348582,-0.465795,5.879797,8.210335,1.929812,-2.930557,1.949598,7.209730,-2.043055,-5.421225,-6.175893,-5.423005,7.537880,3.674035,2.980896,7.157495,0.625670,-0.411116,-9.520475,7.331063,5.159540,2.200963,7.768985,-7.337325,4.671445,-2.721191,-7.544728,7.482056,-9.553952,-6.161529,-3.062530,2.876731,4.361286,-4.765120,-0.211146,-1.512246,-0.675903,-9.441792,-7.221987,5.428283,2.001701,1.376195,-1.363362,-2.485608,-2.449680,-5.599549,-7.576364,-7.755238,0.909674,9.175549,-9.248562,-2.081556,4.330009,5.561681,7.710740,8.172373,-0.001723,0.951438,9.828546,9.160277,-3.566069,0.339640,-7.018378,5.644814,-0.350393,6.870369,-8.881653,0.118413,-2.276442,7.405720,-5.671295,4.296811,1.910746,6.235783,-9.471287,-5.447576,0.615163,3.972235,-6.505198,6.997700,5.054021,9.575624,-6.396916,1.800442,6.407495,5.895232,-7.049364,-4.845397,8.660908,-7.864181,9.799459,-0.298816,-2.895202,-2.253235,-5.531403,-1.591993,-7.039387,2.253927,-9.772938,9.765172,3.798664,5.318176,7.414543,-0.191675,-8.624495,-9.378197,7.378102,-5.550070,-1.254454,-6.305062,-4.383357,-9.167434,3.801258,-4.445141,2.305373,8.749024,-5.595109,-1.683117,5.179536,-2.185734,1.856494,4.505731,7.703386,3.514193,-3.884275,3.309893,-4.447976,4.612471,0.831889,1.382196,7.569851,-7.218940,-6.981814,-5.731818,8.935018,0.595222,3.202118,9.546521,-8.155084,9.082907,0.051990,1.526928,-2.456335,4.781164,-4.801478,-4.455624,4.143856,9.683642,4.445853,0.937552,-3.166014,-4.382059,8.510858,6.813680,-3.304327,-0.660709,9.021643,0.526837,-9.293817,1.696667,0.896356,8.506833,-6.328903,-3.322642,-8.943416,-8.186190,-3.839654,-2.871200,5.775355,1.515753,-0.641725,8.603206,-9.760877,-0.232315,6.709498,2.549876,1.787837,0.030395,-5.536618,-4.851779,-0.084025,6.112575,7.467938,-2.349297,6.892894,-7.513277,-3.927721,0.910742,-2.008074,2.400707,-8.607367,-8.964645,3.938400,5.209954,-5.018101,-6.253022,8.526010,5.964599,-7.686777,2.441322,-5.499227,5.814994,8.962141,6.413403,-6.142866,6.341610,0.946345,6.197937,1.535615,-6.533212,-8.352264,-9.212379,5.227627,-3.851009,-5.553001,5.817132,8.487792,1.821737,-2.372169,-4.647319,6.914503,0.590229,8.382008,-0.031912,2.534352,-0.147707,8.435878,9.027518,5.153537,-6.481935,5.553151,-6.372584,4.213924,3.199969,-7.758534,-1.488775,5.970565,-7.626417,-1.170200,-1.082179,-6.980715,6.325440,4.946613,-9.752969,-7.962705,-6.941092,-8.631992,-8.720508,-9.676376,3.160529,4.731210,1.988079,1.812124,-1.760943,-8.958265,-0.942245,3.526145,-4.057816,-4.150954,1.123419,-2.474990,6.545614,-2.799564,-4.341001,1.748812,4.601897,5.990673,-5.624308,2.075542,3.592411,2.139610,-4.442334,2.370751,8.463907,7.131611,1.829927,6.773505,-0.152061,-7.979190,-6.406434,9.964668,8.244789,-1.298806,9.992602,-5.208931,0.657054,-2.555534,-2.781202,6.118218,-5.257735,6.172695,-6.751273,-0.229083,-0.487580,7.243282,-6.746012,5.466962,4.198336,7.761308,7.539155,2.174509,4.245033,-5.831916,-1.868126,-4.389615,-2.437167,-1.548800,-9.160686,6.114811,6.183990,8.428787,8.302744,7.258592,2.197367,-7.578120,-4.084573,0.109215,0.937267,-1.036009,1.029982,-4.636658,-7.241380,-7.140618,7.898921,3.423988,-4.752790,1.096358,6.991425,2.506564,5.972666,0.640403,1.366988,-4.893400,-4.275217,-6.188694,3.648127,1.985138,5.500004,-2.389062,-2.666181,-7.928628,-5.862864,-5.862049,-8.828080,-3.334323,7.772387,-5.676528,5.103209,-4.081909,0.068273,3.784444,6.043137,-5.531369,4.357036,-8.548177,-1.874411,-6.748379,-1.758081,2.115327,-3.397842,-0.240733,4.138512,1.741198,4.988921,5.323136,-0.434222,6.225502,9.832585,6.820198,-1.631834,-4.792837,-0.062717,-7.545974,-5.203104,7.574916,6.900963,-3.885614,-7.955818,7.201969,4.729656,-1.476374,-3.646695,-4.198415,0.969165,-0.797736,5.618542,2.541404,8.099703,-7.350133,0.102861,3.077022,1.483391,8.243024,9.910617,-4.793432,5.587114,-9.726100,-9.252464,-4.800904,-9.991487,-7.489097,0.031380,6.445946,1.668349,-9.757772,-6.139292,7.728984,-0.568308,6.583291,-6.874960,-1.624963,2.881391,8.093836,8.783274,1.579523,-5.375168,2.657634,9.610376,-3.628061,-6.094408,3.145628,-4.904270,6.970686,-9.265573,-8.393780,-9.458912,-3.749448,-4.551692,4.315305,0.297563,9.582776,-8.769226,-3.702705,-2.023967,-2.212735,2.339766,5.264181,5.592681,-7.484357,0.055829,-3.354184,-6.652042,9.820405,-8.685357,-1.858311,-0.704994,0.674031,4.841761,-4.881315,-9.455640,-4.803402,1.723732,-9.273268,-0.802573,-2.487646,0.761153,5.770258,3.030984,-6.427170,-1.874419,-4.045402,9.612940,4.648987,0.553718,-1.853351,6.149108,6.989798,-5.874178,9.005853,8.558314,-6.272722,-9.034507,-4.780122,7.522780,5.472419,2.349065,-1.002735,7.009888,7.450796,0.983080,-0.660688,8.613453,3.182817,8.469228,-6.356601,-4.511589], dtype = "float64")#candidate|3211|(2112,)|const|float64
call_3210 = relay.TupleGetItem(func_285_call(relay.reshape(const_3211.astype('float64'), [12, 16, 11]), relay.reshape(const_3211.astype('float64'), [12, 16, 11]), ), 0)
call_3212 = relay.TupleGetItem(func_288_call(relay.reshape(const_3211.astype('float64'), [12, 16, 11]), relay.reshape(const_3211.astype('float64'), [12, 16, 11]), ), 0)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_3215 = relay.TupleGetItem(func_2675_call(), 0)
call_3216 = relay.TupleGetItem(func_2676_call(), 0)
func_2578_call = mod.get_global_var('func_2578')
func_2582_call = mutated_mod.get_global_var('func_2582')
var_3221 = relay.var("var_3221", dtype = "float64", shape = (234, 3))#candidate|3221|(234, 3)|var|float64
const_3222 = relay.const([5.880773,-8.076204,-0.909186,9.857888,-3.163593,-9.606512,8.198964,1.007915,1.139278,8.066049,-5.210921,-2.321211,5.889849,-8.245006,6.537168,-3.715265,8.359840,-9.158157,-9.624570,3.370919,-7.293889,-4.947351,0.593194,9.947960,9.411278,2.302556,-2.633275,1.782916,4.547412,-2.127870,8.775343,5.659102,4.982398,6.118976,1.583010,-0.167188,-1.111623,-3.854481,1.538867,-5.797146,-7.062336,-2.391958,1.945834,5.951075,1.268666,7.089809,-9.654766,5.555496,5.159394,7.388740,2.814849,-8.616540,-5.699517,-7.170524,-9.067280,4.096224,-6.674393,0.557380,9.113003,-3.681670,-3.532780,9.113412,-7.117134,-9.213636,5.722304,6.557367,-6.632120,-9.978677,-7.410449,-2.924714,-4.092841,2.946146,4.597724,-1.066872,2.782357,6.154204,7.470658,4.960274,-3.530549,3.426407,7.934881,-9.461344,-4.688354,2.205062,5.463223,8.071905,2.718244,-9.951433,7.878082,0.081909,9.993672,-2.831475,4.200322,7.856368,8.300413,-5.563421,7.754817,-9.525107,2.815936,-3.701253,7.033528,-8.863600,-7.894628,3.283429,-9.041997,1.757613,-4.698151,-1.246635,4.678466,7.659935,-6.034855,4.748367,-4.291417,8.733114,9.741360,4.911585,3.482676,5.250993,-6.839795,0.284027,2.055880,9.626975,-4.593604,-2.824764,5.024487,-7.038036,0.839736,5.398915,-5.512438,1.412225,-2.115226,-8.924201,5.554868,3.049266,1.493890,-6.435810,0.691206,-2.950708,1.980114,5.162541,-6.795676,-4.091472,-1.612941,0.061656,-4.879648,-5.364359,1.034812,-3.387731,9.836634,9.737589,-1.551343,3.773790,9.912327,8.442415,-7.038711,2.923812,-8.525144,-1.690912,8.135549,1.311815,2.768884,-9.545168,9.630212,0.947819,-0.555540,4.697222,-6.438238,6.077796,-1.626918,-7.605281,4.794669,3.932731,2.525849,-6.460064,7.603889,-4.467250,-0.096078,-1.499834,0.949446,-1.032145,-4.678772,-6.880750,-2.459284,-1.110503,-9.597405,-4.509117,-9.749546,4.704194,1.474158,-0.911305,-5.500115,8.474762,6.008008,-5.771110,7.673029,-5.149758,-7.069034,-7.608585,-0.231253,0.624602,3.959232,0.878920,2.690288,4.425569,-8.317666,0.314529,-0.795842,1.048684,-8.842596,-8.335723,-1.081818,8.544011,7.338589,-5.197011,-3.606875,-2.019816,6.013013,6.351331,3.261328,1.431054,-4.005243,-8.787175,-3.756286,-4.607351,0.733507,-0.088959,-6.750284,-9.055524,-8.719184,6.780942,-5.097608,-8.611307,4.124319,-4.116441,7.101213,6.707147,-0.766869,-6.530826,0.098762,-8.798654,-4.382578,0.811223,-7.218773,-7.186037,-6.368339,-9.262455,-1.022995,-7.856159,-3.786795,-7.710195,-5.530688,-0.465549,4.839049,4.310556,1.223576,3.127251,2.808616,-8.085208,-4.863443,-9.974471,7.818434,2.642793,5.058552,2.709525,-3.351479,5.230403,6.057097,6.153794,9.986886,-7.418547,-4.884140,-4.863881,-1.785437,-2.773067,2.446751,0.056569,4.151664,-6.584005,-6.445129,-4.118450,7.663245,3.739249,3.399577,9.857247,-5.722178,-2.265284,4.006891,-6.877536,3.001303,-6.312775,9.418878,6.562819,-2.719782,9.426305,-1.928669,7.106570,-3.063534,-9.486314,-7.310654,-8.712710,4.772912,6.743876,7.119089,-4.380675,-2.881257,7.405496,-6.390238,-7.198528,8.861053,1.366670,-8.816807,9.255063,-9.372659,-3.645312,-1.333965,0.194335,0.793404,-3.442878,-7.861851,-3.360509,-0.514033,-3.215373,-9.910019,5.388045,-1.946736,8.209748,-5.232404,3.080369,7.269302,4.123552,-2.758594,6.793664,1.775965,-9.731781,9.492639,2.408512,5.245747,-3.033349,-7.533818,8.488699,3.798369,9.527203,3.288000,-6.814079,2.331490,-7.932050,-9.906752,3.511346,-5.108454,1.258215,-0.657753,3.678126,-2.506262,-8.353275,4.344650,4.086585,-8.634600,-8.185326,-4.891089,-3.963441,-1.133994,8.902682,6.062799,6.608565,0.506079,1.402333,1.064868,4.331228,-3.378049,-7.151299,4.428336,-7.247206,2.773822,4.665205,1.727759,0.065046,3.956988,-1.034212,0.207305,-9.327094,-7.346991,7.787400,-4.205744,3.166540,-1.080112,-4.476244,-3.858439,0.949150,-6.019713,8.821201,7.817006,4.902315,1.611531,4.160492,6.131203,1.304602,3.805194,2.067597,3.032968,-4.480199,9.885329,4.257436,-4.409689,1.655031,-1.862485,-8.279776,5.493801,-0.446228,-8.099704,8.156142,2.863528,7.861565,9.417525,-5.577515,-2.031052,-9.213161,5.846854,2.043727,8.953755,-1.199165,0.984237,5.943566,9.314327,8.539367,9.847112,0.255301,-6.586880,0.810392,-5.685763,-5.119099,-1.497764,-3.571792,2.776024,8.135111,-2.026038,-2.201406,6.136740,-3.833851,7.791512,-3.070928,-5.664480,3.500379,-1.184456,6.511459,-1.055046,7.075116,-6.324864,-9.314113,5.870675,-1.383280,-4.746275,7.044895,-9.453530,-2.208976,-3.321820,-7.511618,-2.767490,7.155759,-0.623856,5.502234,-4.455133,-4.504027,-2.107356,-1.492044,-2.735164,5.275508,8.301470,-0.543918,-7.772971,0.231615,0.783553,-4.771430,8.757651,3.493730,-8.301987,-5.364928,0.197322,1.258433,-4.777745,-6.360120,2.156418,9.190794,-9.557357,-0.876150,-8.839257,8.577190,-9.569371,9.079616,5.645002,3.698638,-8.620133,3.795832,-5.921451,9.860743,-2.770835,-5.128981,-5.098230,2.726289,8.740263,5.906508,4.245855,-4.483014,-3.183881,-9.406118,-2.820607,9.792343,7.519752,-2.977511,-3.577266,-8.117236,9.267462,-2.101539,-4.054581,7.429164,4.875433,6.462378,0.212177,-2.057910,-9.189805,-3.511084,9.162414,8.092838,-2.070505,-7.991283,5.911588,9.569406,9.666770,-4.779103,4.137083,-7.359193,5.728013,-8.287513,0.919836,-5.518367,6.565320,-3.038181,0.102382,4.376523,1.692134,-2.726976,0.631281,-8.501080,0.745900,-1.446441,-3.692969,7.184874,2.843979,-3.663409,2.732595,-7.990223,6.022537,5.245876,-1.374716,-1.359183,-7.356907,-0.687610,9.588344,1.851558,-9.247218,2.136123,-8.814180,-6.997140,-6.653153,-5.185633,4.799823,-7.665095,6.190557,7.860352,2.850447,0.293334,-3.818258,1.179847,-9.506111,-4.464133,-7.450413,9.105895,5.742859,-9.793365,3.159634,4.260262,2.975034,7.050677,1.170676,-0.982787,5.692437,-1.435543,-2.378579,2.702424,-4.702211,4.703613,5.075237,2.736505,-1.709634,5.285990,-7.307247,-8.166647,-4.661348,-1.403964,3.822888,-5.881126,7.810892,-0.439785,-2.438845,-3.353310,-1.139426,-1.546274,1.347258,-6.970994,2.462660,0.780864,-8.309994,-6.418850,4.111868,-6.779053,7.906568,6.523990,4.970207,-9.507568,0.708409,1.649378,-9.221251,-8.803476,2.171195,6.790387,-5.605917,4.598875,6.451734,9.655358,-2.991667,2.628802,2.209486,-8.151727,-7.143862,-9.765505,-9.337353,9.541274,4.006887,-5.911936,-9.088181,-5.519871,-2.487080,2.891285,3.461645,-9.473927,-4.331223,4.346239,1.357595,6.324664,5.193118,4.197637,1.089818,-9.605552,-4.785672,7.715062,4.860177,0.423294,2.104824,1.045508,-7.884639,5.759244,1.472646,-7.272697,-4.639547,-9.261311,5.148507,1.984901,6.398031,-2.103875,-2.183533,-7.423493,4.279070,2.160900,0.380188,8.226706,8.480163,-2.857124,9.619007,5.165711,-1.016488,3.471018,0.923354,-6.574026,5.749942,2.630089,1.428827,2.611074,9.984883,8.328338,3.926113,-9.887398,9.996212,2.144332,1.042524,1.239590,-4.752482,-6.629220,6.509395,-4.118553,6.136608,5.783944,-2.244456,2.011613,3.316131,-8.634583,5.311337,8.188460,5.600677,6.015685,8.872719,1.773182,-0.065651,-4.468931,-7.460130,-3.265567,-9.091717,-0.293428,-3.943114,-8.673515,6.686077,-1.055791,-8.134868,7.180201,-3.042692,-0.809512,8.465170,9.667293,1.768245,-7.831293,2.114455,1.954287,-6.679259,-5.005276,8.672149,-7.494894,9.161515,5.338603,8.424593,0.349930,-0.592149,3.143080,2.913859,9.066413,-1.655801,5.662854,-5.454974,6.687221,-4.535212,6.092056,5.320626,-4.882608,-7.372781,-8.509167,7.687792,1.442067,3.154897,3.816006,3.512709,-9.440191,-9.740764,0.701069,-0.227135,2.022392,-5.278210,7.359801,9.202530,-8.900451,9.314924,9.918005,4.260624,-1.431158,4.895310,7.731128,-8.001443,8.272032,8.484188,2.771736,2.462148,5.973103,7.241866,7.616959,-1.545050,-3.607949,-4.945145,-8.917239,-4.055303,6.472876,7.843864,2.983479,-9.402288,-9.001123,0.305140,5.478082,1.219371,2.026810,1.567725,8.739873,-4.904420,-1.479820,8.374370,-9.509992,1.890287,8.259676,2.278005,1.742803,1.706592,5.046104,9.169790,-7.764724,0.214202,-2.450035,-5.838510,2.663698,2.543687,-4.916237,-4.511882,8.048953,-9.005778,-2.743408,3.073135,7.880248,-9.954647,3.655253,7.200303,-7.852707,9.769827,-3.133039,-4.322454,2.193044,0.348686,-5.843425,-1.347412,3.412080,-8.195013,-5.501068,9.021640,4.757895,0.445721,-0.528016,-6.745919,6.701980,9.228398,4.070070,8.005620,9.651027,-4.911288,3.466525,5.204653,4.250793,-1.003245,9.155257,3.812856,4.757779,-6.240989,-5.525910,-6.875865,-2.808131,5.995019,4.576579,-3.204637,6.047876,-7.966233,-9.535687,5.386728,-4.256989,1.622503,-8.424983,-0.903596,7.994085,0.518135,5.098994,-1.006336,6.243940,2.018356,-0.569681,8.331048,5.881053,-5.390824,-2.346134,7.008791,-8.565823,-1.444370,-1.789233,-6.808630,9.913389,4.767455,-8.311938,5.699900,0.820134,-3.801794,-9.017737,5.829366,-6.251650,8.419370,7.499081,1.820986,-2.807943,-4.017902,-4.150802,-3.394099,-0.220611,-7.467800,1.650878,-3.523038,-2.954193,0.391086,7.078749,-9.762210,-3.267768,-1.047155,7.695356,0.448784,1.108823,-1.591996,8.783745,-8.664781,-7.514896,-2.439026,-5.438467,-9.310279,8.327480,7.057990,-1.560917,-3.331274,-3.225157,-1.723060,-3.604937,2.149869,-8.351505,3.003311,-2.114883,7.549208,-9.855870,1.480865,1.687258,-1.583662,8.856765,5.471575,8.148238,-9.791251,-8.187965,4.153206,1.041012,-8.558796,-9.470425,5.677762,6.536564,8.844789,-0.964174,-4.338005,-0.015113,-9.174655,4.346468,9.443829,-9.289866,-1.350838,9.673838,8.910703,-3.196874,-5.887716,-0.362414,5.845676,-5.835686,1.329711,8.788299,-9.118973,-3.402566,1.404900,-6.073061,9.469138,1.658242,9.498294,5.454991,4.295169,0.688653,0.334122,2.710090,5.070859,4.442983,-7.761981,3.128740,9.485710,8.099509,1.614465,6.796558,-5.087913,-1.543803,8.451134,4.273045,8.542677,-4.204873,-4.696703,1.657411,-0.310748,-2.007642,-3.938223,4.705002,-5.191269,-8.161352,6.971727,-0.313862,-5.279621,3.441969,-0.367372,-7.823113,6.233809,-4.418323,-1.483124,-3.324308,9.934698,4.321008,-5.746641,8.039588,-3.113819,-7.186284,6.946851,0.386685,2.713029,-2.338723,6.159616,2.231745,4.248246,-4.608226,1.053000,-2.438782,-9.881365,-4.318426,1.146349,9.815464,-2.965069,9.089044,-7.954509,2.489044,7.473015,3.264305,6.145108,-6.450502,1.800926,-3.022157,3.886733,5.563692,3.457834,-6.735001,0.973622,-0.964638,0.049823,7.622020,-5.431497,8.882360,-9.116294,2.228332,7.649716,3.118556,-2.207936,2.082709,-3.558296,8.325314,1.052699,-6.846806,4.142374,-8.022531,-3.254611,-7.629725,-3.716159,5.624218,0.621594,-2.304438,-5.155138,4.800818,-2.027564,-3.053519,0.563188,-3.754130,7.003524,4.751020,1.083803,0.959463,7.653543,-1.474263,1.206417,1.842793,-6.002784,7.385973,9.024237,-6.083066,8.838165,-2.216342,-3.933055,0.962637,-0.263395,7.220903,-3.607410,5.892839,-2.784001,-3.633892,5.673159,-0.165035,9.017503,-2.677374,-7.659562,-9.136472,8.448008,-4.517202,2.128477,1.784322,-2.600498,1.000641,7.557193,7.050341,2.934704,2.450468,8.536266,-5.334001,5.746094,2.854142,8.594172,-0.264460,-3.725612,5.559361,-7.880926,6.504881,1.165436,-8.429936,-0.927181,-1.858206,3.014226,-4.756466,-7.590427,4.220586,-4.861894,3.783767,3.075930,-4.955282,7.311478,4.101139,8.167438,-3.911044,-7.844228,6.864586,-7.271962,-1.618088,-7.276400,-4.648654,9.554987,-9.194642,-7.201098,-7.910115,7.446409,-7.716317,-2.871210,9.104519,-1.823437,-6.858888,-6.488051,5.922099,8.315960,-4.306582,6.953209,-1.123877,-5.059900,-9.309420,3.319002,-4.168080,5.797713,3.449489,7.550201,8.981732,-0.957855,-8.886904,-6.212285,-3.891554,9.445144,1.588586,1.728098,7.736228,-2.601012,2.136776,-3.342160,9.211891,-6.536357,2.275141,9.087160,4.787840,-0.598294,-0.901813,-4.749079,0.327242,3.401247,-3.439206,-0.565669,-1.612068,6.070969,-2.953791,-3.887684,2.681259,-5.687827,-0.941700,-5.897365,-1.476510,0.678754,4.651934,9.456967,7.780749,6.819738,6.839824,0.027949,-4.028954,4.951677,5.157278,-4.054004,-6.965107,0.546343,-4.510198,8.454152,3.419338,4.710105,-0.237994,9.343385,4.490334,3.569602,-1.207758,9.551469,9.974350,-7.242333,-2.960354,1.844125,1.367994,9.025734,-7.587678,-2.793756,0.801581,-2.625315,-5.120742,7.354807,-0.571300,1.224694,6.913279,-5.480220,5.713644,6.774170,1.728237,0.999146,-1.858963,8.661598,3.911673,-4.913276,2.428703,-4.421738,-1.498418], dtype = "float32")#candidate|3222|(1248,)|const|float32
call_3220 = relay.TupleGetItem(func_2578_call(relay.reshape(var_3221.astype('float64'), [6, 13, 9]), relay.reshape(const_3222.astype('float32'), [1248,]), ), 2)
call_3223 = relay.TupleGetItem(func_2582_call(relay.reshape(var_3221.astype('float64'), [6, 13, 9]), relay.reshape(const_3222.astype('float32'), [1248,]), ), 2)
func_900_call = mod.get_global_var('func_900')
func_903_call = mutated_mod.get_global_var('func_903')
var_3247 = relay.var("var_3247", dtype = "uint16", shape = (168,))#candidate|3247|(168,)|var|uint16
call_3246 = relay.TupleGetItem(func_900_call(relay.reshape(var_3247.astype('uint16'), [3, 8, 7])), 0)
call_3248 = relay.TupleGetItem(func_903_call(relay.reshape(var_3247.astype('uint16'), [3, 8, 7])), 0)
output = relay.Tuple([call_3174,var_3175,bop_3186,bop_3193,call_3197,const_3198,call_3210,const_3211,call_3215,call_3220,var_3221,const_3222,call_3246,var_3247,])
output2 = relay.Tuple([call_3176,var_3175,bop_3189,bop_3196,call_3199,const_3198,call_3212,const_3211,call_3216,call_3223,var_3221,const_3222,call_3248,var_3247,])
func_3250 = relay.Function([var_3175,var_3178,var_3185,var_3221,var_3247,], output)
mod['func_3250'] = func_3250
mod = relay.transform.InferType()(mod)
var_3251 = relay.var("var_3251", dtype = "float64", shape = (420,))#candidate|3251|(420,)|var|float64
var_3252 = relay.var("var_3252", dtype = "uint32", shape = (360,))#candidate|3252|(360,)|var|uint32
var_3253 = relay.var("var_3253", dtype = "float64", shape = (10, 8, 11))#candidate|3253|(10, 8, 11)|var|float64
var_3254 = relay.var("var_3254", dtype = "float64", shape = (234, 3))#candidate|3254|(234, 3)|var|float64
var_3255 = relay.var("var_3255", dtype = "uint16", shape = (168,))#candidate|3255|(168,)|var|uint16
output = func_3250(var_3251,var_3252,var_3253,var_3254,var_3255,)
func_3256 = relay.Function([var_3251,var_3252,var_3253,var_3254,var_3255,], output)
mutated_mod['func_3256'] = func_3256
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3276 = relay.const(-5.844007, dtype = "float64")#candidate|3276|()|const|float64
var_3277 = relay.var("var_3277", dtype = "float64", shape = (12, 14, 13))#candidate|3277|(12, 14, 13)|var|float64
bop_3278 = relay.divide(const_3276.astype('float64'), var_3277.astype('float64')) # shape=(12, 14, 13)
func_734_call = mod.get_global_var('func_734')
func_737_call = mutated_mod.get_global_var('func_737')
var_3282 = relay.var("var_3282", dtype = "uint16", shape = (1560, 1))#candidate|3282|(1560, 1)|var|uint16
call_3281 = relay.TupleGetItem(func_734_call(relay.reshape(var_3282.astype('uint16'), [13, 15, 8])), 0)
call_3283 = relay.TupleGetItem(func_737_call(relay.reshape(var_3282.astype('uint16'), [13, 15, 8])), 0)
func_159_call = mod.get_global_var('func_159')
func_162_call = mutated_mod.get_global_var('func_162')
var_3298 = relay.var("var_3298", dtype = "float32", shape = (55,))#candidate|3298|(55,)|var|float32
const_3299 = relay.const([[0.139020,1.293707],[9.508503,-3.877635],[-8.415542,0.174163],[-9.883637,-8.968345],[-5.339079,-7.798813],[-1.831817,0.346692],[1.811411,1.461984],[7.987353,-4.262779],[6.665100,7.314648],[-8.084139,-9.070471],[0.882080,-8.929250],[-6.510911,9.034099],[9.187499,-8.419275],[-5.381387,8.658580],[2.252546,2.354222],[-1.415482,6.715105],[2.918479,-8.206605],[5.872456,4.185257],[2.596580,-5.839421],[-2.050398,-9.065268],[0.594177,7.016866],[-2.060895,-7.189297],[-2.670408,-3.828299],[1.630670,-6.358830],[6.581116,-8.216509],[9.210148,7.432198],[1.636822,-0.406470],[8.925814,0.225827],[-6.661492,-7.356915],[-9.446034,-2.292181],[-1.231588,0.897310],[-1.308444,3.354639],[5.827304,-2.211368],[7.647146,2.504649],[-1.797471,-3.453273],[-1.055760,-8.912070],[7.185937,0.499427],[7.054831,-8.833927],[-8.442028,3.678766],[9.479080,-6.257246],[5.626273,-8.525429],[-2.197604,0.253888],[6.616212,-8.926092],[-2.612242,-1.903373],[5.967290,6.469699],[7.960599,7.798481],[0.056129,3.380088],[2.782679,9.722704],[-7.623383,0.322555],[7.393353,6.767913],[-7.619918,-4.657742],[0.192737,-2.301535],[-5.299547,9.452549],[1.459047,-2.209125],[-1.475130,-9.388426],[4.345378,-3.481944],[6.170681,6.176908],[-3.491590,1.220152],[-2.460803,1.005988],[4.537950,5.837985],[4.513203,6.159590],[4.345032,-8.093467],[1.681027,7.079650],[-2.389846,0.973714],[9.316635,7.271319],[3.614227,-5.537791],[-8.845410,1.750680],[-1.674843,-6.714968],[-5.266787,-8.982570],[0.427764,3.585572],[9.167699,9.924302],[-0.040276,8.500637],[2.517934,9.921276],[-9.925851,6.880544],[-2.111407,-8.260202],[7.514314,-8.881452],[-3.330145,6.057256],[3.780240,6.395351],[5.981006,0.249619],[7.182905,8.440600],[1.566374,1.203194],[-3.558606,-6.564358],[-4.447880,1.638646],[0.031938,3.046675],[0.333541,8.289935],[2.909017,4.405675],[-0.146964,-2.199211],[-5.034698,-7.636652],[-2.178418,9.530119],[-0.237125,8.058551],[-6.439568,-7.701222],[4.362380,7.136483],[-4.086921,0.770443],[6.600368,-6.467815],[2.895528,1.323434],[-6.681214,6.609801],[-6.597519,-6.529673],[3.324126,4.349873],[-0.501317,7.707213],[9.436989,-4.178451],[-0.769299,0.471941],[2.944105,6.842658],[-7.485714,-7.918141],[-8.788453,4.185887],[-2.102177,-2.597094],[-7.356670,6.705951],[7.553770,-3.028294],[9.946276,3.748740],[-2.114377,-1.280277],[-0.843137,3.183596],[-6.637809,-5.024482],[4.882117,1.210933],[2.409750,8.705805],[7.374415,-5.979855],[-3.430510,1.717033],[-7.002769,6.088511],[9.090467,-0.512331],[8.107790,-7.386064],[1.599690,-5.780629],[7.250458,-8.892187],[4.676202,-3.635727],[-5.871055,-5.316121],[0.719295,-3.029352],[-8.396426,-7.807478],[3.125179,8.545782],[-8.270487,4.935400],[-6.059693,6.787283],[5.673399,-1.424490],[2.225709,-4.408116],[-6.080497,-2.382039],[-4.848172,1.408314],[-3.281778,2.944568],[-4.671444,-8.821515],[-5.920485,-0.126329],[-1.631999,-0.781225],[8.852976,-9.172856],[7.788724,-0.121854],[1.127381,6.902454],[5.045243,-0.296059],[8.144257,-5.693465],[4.888180,-6.797564],[-7.042131,-5.105990],[-0.835977,-7.114937],[-0.518644,9.608272],[1.027692,9.303290],[-5.240662,5.206517],[1.884506,-7.148572],[9.049133,-2.865460],[5.586840,-4.630520],[2.285881,-0.645229],[-3.977964,4.374082],[-5.158565,-9.002917],[-8.074102,-9.177176],[3.391623,-2.162631],[-6.895855,7.242110],[0.667352,-9.593061],[-2.363648,-3.416025],[1.609238,-5.682414],[-2.932250,-9.836508],[-8.924884,-5.212949],[-4.797397,0.108519],[-3.303465,-5.064503],[-6.746944,-9.930226],[6.678137,1.878582],[-9.415827,3.565181],[-4.864937,6.124974],[7.359227,8.538968],[-8.633986,-3.809022],[0.268490,-4.133248],[-6.137025,-3.793455],[-9.254098,-6.005962],[3.076352,-2.614957],[-7.636187,3.345087],[5.573881,3.139210],[8.189399,-6.297949],[-3.609251,-6.904813],[-7.891820,-1.682310],[-2.155355,-7.006372],[7.562955,-0.107170],[-1.605239,-2.961833],[2.826223,0.278331],[-8.609812,4.950651],[-6.111006,-6.026444],[0.707259,-5.431837],[3.626117,-7.256905],[0.004133,5.651338],[2.491252,9.046174],[-6.767055,-6.265973],[9.907720,-7.506013],[-6.374346,7.437782],[3.437845,-1.604568],[8.814053,-4.054174],[7.770560,-7.489331],[8.907941,9.547184],[0.800138,-5.280953],[3.229449,7.004125],[8.309462,-7.841139],[-8.255308,-3.930829],[8.740015,-2.734990],[9.528349,-7.971939],[3.793381,5.079600],[-5.124967,8.105133],[1.668413,6.944962],[4.653378,4.094376],[-2.349773,-2.490881],[-5.147938,-4.907229],[8.975595,-7.213605],[1.948465,2.036994],[4.145230,-8.824434],[-0.805286,9.921799],[9.071994,-7.598499],[-7.435868,8.927391],[6.078314,6.375569],[-2.233928,-5.019860],[-6.634939,-2.990296],[1.801548,-1.609876],[-2.173717,-3.764950],[-0.208384,-2.257633],[-1.496545,-4.179163],[7.725513,9.220340],[-6.439950,-5.868667],[-1.170996,-4.545119],[2.442868,-7.804468],[8.980750,9.788490],[1.720767,-0.598171],[9.438605,-6.933934],[9.447404,-6.745913],[-7.619897,4.770832],[-0.235175,-0.813767],[-3.508467,3.239167],[0.001316,-2.410901],[-6.560157,3.039976],[9.653587,-7.228930],[-5.579050,-2.562442],[9.114059,-0.696618],[-3.651467,-9.458004],[4.594032,3.262273],[-6.834323,6.958180],[5.136009,-4.934458],[1.704332,1.251509],[9.894188,-9.635198],[-9.896536,7.445114],[2.776479,-7.138989],[2.785625,3.478967],[6.893913,9.824681],[7.491121,9.487896],[-5.708404,5.826501],[5.694155,7.902280],[-4.926206,0.092477],[-7.010919,-4.806749],[-6.180341,-6.090319],[-9.786262,9.809452],[-8.377423,4.779559],[1.944359,-3.994904],[-1.918182,-3.560777],[2.556820,-4.983176],[3.149710,-6.708404],[-9.273078,6.414114],[0.195083,-6.240410],[1.972882,2.199432],[-8.547830,-8.558968],[-6.306426,-6.759266],[-0.727721,-2.755426],[-6.293836,2.461402],[-3.011739,9.830975],[-3.228196,-3.108044],[-6.700650,8.176219],[-9.420443,-3.722776],[3.183951,-8.486824],[5.850491,-8.130283],[8.244112,7.808658],[3.919752,8.419404],[8.291518,-2.732304],[-2.046647,2.360833],[-1.685372,-1.251562]], dtype = "float32")#candidate|3299|(275, 2)|const|float32
call_3297 = relay.TupleGetItem(func_159_call(relay.reshape(var_3298.astype('float32'), [11, 1, 5]), relay.reshape(const_3299.astype('float32'), [11, 10, 5]), ), 0)
call_3300 = relay.TupleGetItem(func_162_call(relay.reshape(var_3298.astype('float32'), [11, 1, 5]), relay.reshape(const_3299.astype('float32'), [11, 10, 5]), ), 0)
uop_3302 = relay.erf(const_3299.astype('float32')) # shape=(275, 2)
output = relay.Tuple([bop_3278,call_3281,var_3282,call_3297,var_3298,uop_3302,])
output2 = relay.Tuple([bop_3278,call_3283,var_3282,call_3300,var_3298,uop_3302,])
func_3305 = relay.Function([var_3277,var_3282,var_3298,], output)
mod['func_3305'] = func_3305
mod = relay.transform.InferType()(mod)
var_3306 = relay.var("var_3306", dtype = "float64", shape = (12, 14, 13))#candidate|3306|(12, 14, 13)|var|float64
var_3307 = relay.var("var_3307", dtype = "uint16", shape = (1560, 1))#candidate|3307|(1560, 1)|var|uint16
var_3308 = relay.var("var_3308", dtype = "float32", shape = (55,))#candidate|3308|(55,)|var|float32
output = func_3305(var_3306,var_3307,var_3308,)
func_3309 = relay.Function([var_3306,var_3307,var_3308,], output)
mutated_mod['func_3309'] = func_3309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2999_call = mod.get_global_var('func_2999')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_3316 = relay.TupleGetItem(func_2999_call(), 1)
call_3317 = relay.TupleGetItem(func_3000_call(), 1)
func_3250_call = mod.get_global_var('func_3250')
func_3256_call = mutated_mod.get_global_var('func_3256')
var_3321 = relay.var("var_3321", dtype = "float64", shape = (420,))#candidate|3321|(420,)|var|float64
const_3322 = relay.const([-2,-4,6,-3,9,-10,6,9,9,9,6,-5,8,-9,-8,8,3,-8,-9,2,2,2,-3,-5,-3,-8,-6,-7,-1,-7,-3,10,6,-9,-6,6,-4,-5,1,9,-4,-3,10,-5,6,-1,-8,9,6,10,6,9,6,6,3,9,2,10,-2,4,-8,9,3,-9,-5,-10,-6,-2,2,10,-5,3,-3,-1,9,-4,-8,10,-2,-10,-1,-7,-1,9,-7,1,10,-1,-8,-7,-10,1,-6,1,3,5,4,-10,1,10,-10,1,-4,2,-9,-8,-10,6,3,3,9,-7,10,-9,9,-8,-10,-9,-3,6,-10,10,-3,-7,4,-2,8,7,9,6,7,6,-2,10,6,7,10,7,4,2,3,-2,-3,6,8,9,5,1,-10,5,10,-3,9,-6,3,-2,3,-7,4,-10,7,-6,-5,-2,-1,-1,10,1,-6,-4,-6,7,-10,-8,10,-7,-9,1,-1,9,1,10,5,-5,-8,-10,-7,6,1,-4,-1,-10,-5,4,-6,-9,-4,2,-2,-8,6,-7,-5,10,6,-7,-6,-9,9,-8,-8,-4,6,2,3,-10,-8,-1,9,-8,-7,4,-3,-4,-8,-9,-9,-9,-9,5,-10,10,-2,-2,-4,8,7,-3,-4,-5,1,-7,7,7,6,9,-9,-4,1,3,-6,7,10,-6,-8,7,4,-10,-1,-8,-9,2,7,-8,-10,6,-10,1,-2,8,-7,9,-2,-6,-6,-9,1,-2,7,-9,-10,5,5,-2,3,8,7,-5,8,2,-6,-10,2,7,1,8,-8,-1,-1,3,5,5,-1,-8,2,5,-1,-4,7,4,-5,9,-7,10,5,1,-5,1,7,-8,-9,6,8,-7,-1,-4,5,-4,4,-8,7,7,6,-9,7,-3,-10,10,-8,6,-10,-8,4,5,5,-6,-7,-4,1,7,3,-8,-8,3,-7,-7,-9,-10,-8,10], dtype = "uint32")#candidate|3322|(360,)|const|uint32
var_3323 = relay.var("var_3323", dtype = "float64", shape = (1, 880))#candidate|3323|(1, 880)|var|float64
var_3324 = relay.var("var_3324", dtype = "float64", shape = (702,))#candidate|3324|(702,)|var|float64
call_3320 = relay.TupleGetItem(func_3250_call(relay.reshape(var_3321.astype('float64'), [420,]), relay.reshape(const_3322.astype('uint32'), [360,]), relay.reshape(var_3323.astype('float64'), [10, 8, 11]), relay.reshape(var_3324.astype('float64'), [234, 3]), relay.reshape(call_3316.astype('uint16'), [168,]), ), 7)
call_3325 = relay.TupleGetItem(func_3256_call(relay.reshape(var_3321.astype('float64'), [420,]), relay.reshape(const_3322.astype('uint32'), [360,]), relay.reshape(var_3323.astype('float64'), [10, 8, 11]), relay.reshape(var_3324.astype('float64'), [234, 3]), relay.reshape(call_3316.astype('uint16'), [168,]), ), 7)
output = relay.Tuple([call_3316,call_3320,var_3321,const_3322,var_3323,var_3324,])
output2 = relay.Tuple([call_3317,call_3325,var_3321,const_3322,var_3323,var_3324,])
func_3367 = relay.Function([var_3321,var_3323,var_3324,], output)
mod['func_3367'] = func_3367
mod = relay.transform.InferType()(mod)
var_3368 = relay.var("var_3368", dtype = "float64", shape = (420,))#candidate|3368|(420,)|var|float64
var_3369 = relay.var("var_3369", dtype = "float64", shape = (1, 880))#candidate|3369|(1, 880)|var|float64
var_3370 = relay.var("var_3370", dtype = "float64", shape = (702,))#candidate|3370|(702,)|var|float64
output = func_3367(var_3368,var_3369,var_3370,)
func_3371 = relay.Function([var_3368,var_3369,var_3370,], output)
mutated_mod['func_3371'] = func_3371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_3381 = relay.TupleGetItem(func_3093_call(), 0)
call_3382 = relay.TupleGetItem(func_3094_call(), 0)
func_285_call = mod.get_global_var('func_285')
func_288_call = mutated_mod.get_global_var('func_288')
const_3387 = relay.const([2.201811,6.655546,0.470707,6.311289,-0.727326,-9.154473,-5.466692,-1.906300,-9.463879,4.831892,-8.096363,-4.940759,8.385301,0.703868,5.634832,7.011493,-9.271005,-1.535369,2.567850,-3.573468,-9.554887,-8.440884,5.082381,-6.655588,-3.915676,-3.183322,-3.158184,8.805305,-6.142502,8.246584,-2.205898,-1.880620,5.353515,-5.510638,-3.494386,-5.541399,0.875511,-1.261342,4.787074,-7.286889,-4.218900,3.656493,-1.012325,0.081101,0.552371,-0.313558,9.368497,-0.381833,-5.811408,8.354618,4.464097,7.707316,9.613548,9.386907,-7.497741,-7.391901,-7.710053,6.280057,-8.998689,7.235305,2.311580,-5.253647,0.008694,5.648586,3.423612,-8.455336,6.410770,-0.979572,3.473040,8.618998,0.012073,5.811638,8.537754,-5.962664,0.200949,9.431287,-3.190096,3.092405,6.152672,9.382519,5.696423,6.986995,1.285536,6.056692,-0.121310,-8.385749,4.555596,1.571190,-0.826638,-1.628251,-5.295316,7.422180,8.676874,-8.365713,3.631804,-3.724209,2.629305,7.246695,2.666845,-0.323041,-0.121328,0.575341,-3.059102,-8.418647,2.125085,-6.808072,9.771262,-2.574516,-8.239527,4.389035,-7.018475,-4.854213,2.676707,-6.152508,4.975276,-7.973832,5.433257,3.846576,1.315147,-2.545292,-2.281075,-2.727584,-1.194478,2.438427,1.864034,9.355969,-9.137240,2.252656,6.867391,-5.092558,-4.151716,-5.610162,-5.435261,8.217779,-3.304834,-3.166252,-1.153735,-8.234168,6.299497,4.108878,-6.864428,-2.314983,0.207676,-1.236355,8.484216,6.714367,-7.595091,2.868519,8.726256,-7.837612,3.041629,-6.522754,4.451986,-6.735199,-3.913096,3.499698,-0.608564,3.172273,0.620594,9.019329,-4.094826,7.547936,-7.339055,-1.794161,5.405477,6.077642,6.913284,1.427989,-4.797713,-9.710602,0.441885,2.851234,1.029919,6.424380,7.616922,-7.584372,0.562584,-0.185958,-6.195647,3.291571,7.661528,-9.500077,6.068131,4.771494,-0.003056,-9.865534,9.449042,9.403591,4.387679,8.961663,7.904047,-7.838074,1.445992,8.585495,7.212296,-0.339891,4.340082,-4.128856,-7.836610,8.715923,2.296471,-3.614712,6.729352,1.245902,2.159429,0.801046,-8.483918,8.932450,-1.477132,-6.503508,-2.064693,-5.083187,5.345967,-9.327217,-1.290645,-8.923887,8.347422,-1.834667,3.397351,9.023328,7.927089,8.095393,5.674800,9.226836,0.866668,4.346543,-6.266369,-7.873997,-5.523436,7.224976,-0.944233,-8.420946,9.302105,-3.041976,5.285760,8.477519,4.380043,-8.886520,2.245763,-1.805443,1.726170,-2.061987,-5.560860,-2.464868,5.265338,8.964119,9.040180,-9.643636,1.522890,3.907016,-3.822393,3.979518,-1.812809,-3.889705,4.987547,-1.217517,6.910892,8.331461,2.559779,-2.237305,9.743615,-2.036095,-7.349591,2.226487,-6.140245,-1.886096,3.710590,-8.711175,4.707470,-6.148822,4.799523,-4.934607,0.866830,-7.695231,2.369663,-2.639183,8.305719,7.251713,8.955923,8.128736,-3.970126,-1.546386,8.866107,7.877012,-5.337913,2.877340,-9.073574,-1.841188,6.178246,6.786862,2.694479,-5.367414,-8.251781,-6.043917,-8.287646,6.342858,1.523106,4.691730,-6.534467,-3.879080,-3.629914,1.767071,1.121442,-9.064851,-1.897923,8.718367,3.241110,-1.305636,9.143652,5.362862,-2.131036,-3.082815,8.422727,-5.580770,-5.645440,-9.583125,9.917693,-1.994489,8.080232,2.023216,-1.635433,4.208265,-3.956139,1.465647,2.368645,-9.908551,-0.759094,6.650739,-2.869549,2.479205,-2.701213,8.739801,1.231466,-9.694111,-3.590487,1.195164,-4.907652,1.140847,-6.954208,9.019432,6.030824,-2.780862,-5.131056,3.377292,0.854553,-6.364672,-8.065569,9.125848,3.615492,-5.900333,-9.508466,-3.499059,7.607253,9.211592,-5.075457,7.264119,-0.295348,5.553960,8.918955,9.075033,-4.010261,0.979067,2.238735,-8.575086,-0.370044,4.422572,-9.428796,-5.315122,0.183171,-1.027743,-6.077906,6.973574,2.321596,6.738086,-9.259174,2.250779,-2.949598,4.234851,-0.088034,-1.746542,1.589800,6.913728,3.133153,4.436215,1.884013,8.858703,7.923289,9.693026,4.335261,4.660309,0.712162,-6.737707,1.908625,-4.316673,-2.730756,1.861414,-8.380213,8.909293,-8.771215,-1.389772,-6.599623,9.180749,-1.745822,-2.492757,9.945330,3.225118,7.751720,6.759168,-8.786855,-9.085661,-4.553232,-0.272448,-6.476744,3.124617,-7.842360,-3.681933,8.870642,-8.796362,-8.208005,3.311976,-1.154944,5.967902,9.201929,9.721476,-6.089157,-0.718819,3.191573,7.671580,-3.545270,-1.468881,-9.224196,-7.850735,-9.103240,6.435363,9.365744,-8.373914,-4.366816,6.492509,-6.613991,4.215514,-1.604749,-2.012887,-4.845529,8.760895,-3.491491,9.384942,0.586024,-6.120183,-6.110756,-6.875356,-5.214994,0.841249,-7.032491,-6.010071,7.494036,3.700055,2.631126,3.131086,9.429087,0.662433,-8.057558,-7.394436,-3.365918,1.521307,0.754771,-4.083078,8.160176,-7.010336,7.061308,-5.234208,-1.617547,-9.965719,1.830859,2.572502,5.340604,-0.203558,5.696838,7.141212,7.660451,-1.334156,-9.494396,9.467445,-3.791773,-4.514313,-8.859645,2.070434,-2.360610,2.069994,0.300208,9.176435,2.512808,7.294484,-9.521704,-2.003141,7.008839,-6.903111,1.118057,6.837633,2.137579,6.257377,5.002426,-9.862523,7.077206,8.504002,-7.185856,5.353237,3.231477,-2.205077,3.691153,0.620773,8.386639,-4.947427,7.363639,8.601137,4.167654,4.427060,7.383409,9.095267,5.069670,1.990369,0.948472,1.349335,1.555970,-2.242773,-0.177025,-4.573774,-6.490919,-6.896717,-7.370401,-3.554941,6.087043,-9.361716,-2.218059,1.671931,9.759579,0.890351,6.183389,4.783917,2.657506,6.078307,6.617571,2.723274,-9.247194,-8.384787,0.521190,6.929442,-1.853024,6.125603,4.351022,-2.118744,-2.514557,8.860488,-2.607382,-6.066491,-5.670571,1.449873,1.181792,6.994478,-1.788308,9.155821,2.946739,-2.429547,-5.889156,-7.139754,-2.186943,-2.861582,-3.983505,-9.605772,-0.417238,-7.549755,-6.951470,8.066725,4.590295,-9.662096,-6.344701,2.938481,-7.614204,5.509654,-2.189639,-9.776940,-6.233712,2.687752,-0.033624,4.250527,-0.219717,2.150929,3.083583,3.061152,-8.684640,-0.765520,6.167639,-9.038674,-4.052930,-5.459926,4.675530,7.639257,-0.677005,-7.206884,8.244837,0.797453,-6.250551,-0.666795,2.473157,-4.603998,1.295294,-7.876155,-5.046907,-3.324792,-8.528085,0.488702,8.746959,4.395382,0.699252,-3.388213,7.284677,5.986639,3.074128,2.993925,3.849475,-3.685631,9.000488,0.485813,9.731682,-9.634824,-3.578265,5.498975,-3.097201,4.672149,-9.464094,-1.880822,-1.391055,3.048290,-5.253386,-3.425124,-0.788357,-6.554005,-7.345659,-4.994509,-0.013152,0.652239,-4.480785,-0.894771,-5.142602,2.584501,-2.789652,-2.692982,8.708839,-0.454873,5.976539,7.531168,7.067522,5.607320,4.633294,9.541844,-5.306865,-5.668812,8.254448,5.582323,6.089197,-5.285728,4.952955,-4.231335,9.446070,-9.263655,3.687484,-1.724222,4.831433,-2.714098,4.838913,-5.957562,2.872790,7.122488,-4.530750,-1.778910,5.881215,5.990538,5.621521,5.192435,-7.166973,0.533946,6.164624,-3.477182,6.152638,2.008094,-9.564970,-6.085252,-5.571903,-1.991450,4.342095,-2.340884,5.562588,8.527594,3.460875,6.502497,-9.256632,-1.335446,6.415779,-0.772047,7.216275,6.086583,-9.090148,8.379460,8.383678,8.330881,-7.773776,7.477193,9.522191,8.169972,2.291462,-5.064461,2.450075,2.535624,7.545015,-9.388061,4.167313,-3.676162,8.187621,1.062382,4.636270,1.040039,-4.486782,9.318428,4.147688,4.338537,-2.559689,-2.707527,-1.402011,-3.189537,-0.723975,-7.444907,-9.132739,4.202913,9.167277,8.316073,1.099306,-5.791830,2.853823,2.820700,-9.053988,-0.686714,-8.624081,8.745113,-5.636947,-8.515332,-0.419535,4.632674,0.611152,-4.731625,5.451868,2.435555,0.701046,-2.040423,5.420915,8.041695,-2.442501,-1.054579,3.345969,9.871202,3.970845,-2.295568,0.385356,1.313573,-1.027338,9.720180,9.645301,-2.884109,-6.322799,0.153527,-1.068119,-2.395387,-6.954662,0.804667,-0.195244,-9.996364,-3.106125,7.954410,-0.419820,-1.047141,-9.466976,-5.888874,-8.192494,-8.970477,7.010084,-0.143544,9.328051,9.735372,-6.915104,0.051732,0.446997,-6.990394,-6.051987,3.460743,-7.449468,9.057686,5.555975,-0.272779,-9.262371,5.779403,6.871249,3.469828,-4.650969,-4.183381,8.692961,2.393035,8.646432,-9.176113,2.567596,-5.089823,2.179087,-0.311068,8.514550,-3.232355,-8.572337,-5.609152,1.883717,-6.544973,-1.157718,-6.023640,-5.960286,-7.534354,-4.463117,5.262878,2.558828,2.012814,3.503950,9.801357,1.109131,-9.636438,3.715215,2.941217,-5.466679,-8.777435,-1.388589,-7.642050,-5.478508,5.701889,9.528803,-8.324322,-3.270243,2.163466,-3.936907,7.594261,-2.752410,9.994202,-7.589894,-9.005962,-2.032132,7.282359,-4.995898,9.399931,-7.983508,5.126354,5.833523,-7.975139,7.458041,9.820019,0.656564,2.592471,-4.824808,1.634284,5.071895,2.772719,4.989419,1.819644,-6.886051,-4.856386,9.822717,-1.875029,-1.502215,-5.418326,-3.491872,6.844223,-4.255552,0.673263,3.962116,2.313287,-5.632300,-6.422891,3.055029,7.133602,-9.579514,3.888550,4.101941,-5.663201,-6.627303,-8.035044,-0.191331,-4.170144,-1.132398,7.813454,5.400788,7.842681,2.651803,3.756557,4.649974,-0.488808,-8.249172,0.095472,4.787067,4.375006,-2.780769,-8.175140,7.617824,-0.654171,-3.298800,7.717275,-7.225683,1.640311,-6.759905,9.771166,-3.901400,2.379152,4.464756,-3.789145,-8.580983,-9.524830,6.892145,2.910416,-2.714254,4.578630,7.327415,-1.014710,3.841845,6.712749,-2.564753,0.023999,-1.456027,8.435214,7.488570,-0.028182,-7.851821,-0.521761,3.079066,-6.365849,4.082329,-3.702862,9.280293,6.155401,1.591810,-3.584392,8.941506,-1.265133,3.561892,0.346909,5.825432,-3.909983,-8.715778,-3.384111,4.961107,1.721755,-8.699600,7.734203,-3.960561,-9.374319,-9.621457,4.398400,-7.148713,9.988515,-1.877073,-4.699850,6.940667,4.334018,7.838159,6.966573,-2.475415,-3.174483,9.920618,-4.326541,-1.263059,9.722277,-4.998165,-4.462279,-8.053577,-7.527216,-0.978368,-8.854042,3.992949,3.372045,6.559294,8.501642,-5.964392,-1.718601,-7.101629,9.142137,2.454041,2.003331,-4.361749,-7.056871,2.257996,3.929548,7.574340,5.562394,1.152017,-9.159692,-5.459409,-5.621059,1.801942,-1.393583,-8.607387,-5.294806,-9.302218,3.784848,3.673375,4.894366,-7.864251,-6.406280,-3.538578,-3.532756,-3.717910,4.149448,2.992525,1.466241,-1.855003,-9.362447,-3.549025,1.999102,-6.060106,2.161491,-7.863934,-0.087809,0.322722,3.827611,2.578658,4.600923,-6.815262,-6.646602,-7.368249,-8.096889,0.793582,8.757405,2.023664,-6.059902,0.322683,4.093359,-0.469102,-0.444991,-6.465652,2.574638,-0.434711,2.109838,2.472148,-9.326445,-4.142889,3.196128,6.322714,4.046116,0.858681,-2.130766,3.522259,-7.317090,9.065879,2.239952,-8.207590,9.654686,7.271232,6.581363,-5.704559,-0.875721,-5.484109,-4.405865,4.555747,-5.702051,7.139628,7.979151,-5.898590,-9.050662,3.379245,3.763195,9.122423,-1.054550,-9.506194,5.066667,4.562462,1.912300,9.925427,8.058786,4.640238,3.176397,-9.930536,5.460361,4.166852,-1.573924,0.145057,-2.968540,1.930283,5.392499,6.822412,-4.531429,-6.354081,-4.540756,-9.588243,-1.257124,-3.812440,-0.251305,6.347471,1.649029,-2.168714,7.317240,-2.336473,-2.466010,-8.577765,8.821154,-2.356155,-7.104251,9.422808,9.065210,-4.520408,6.846337,0.703950,5.310791,7.720644,0.296271,-8.479246,0.080831,9.870849,-8.202640,8.244616,1.575226,-4.536471,-8.572137,-8.086554,2.427297,-8.068759,7.421524,-8.172213,-3.753430,-8.441253,8.106809,-6.309695,8.725042,-8.663577,4.692041,2.094631,-3.311868,-9.318646,8.147859,-7.547374,6.230178,3.141254,-4.773397,6.060361,3.732478,3.411740,-4.950816,5.697664,9.073173,-5.964885,1.356674,9.430204,2.243002,-1.018347,-6.546916,5.136656,6.566581,4.834802,-8.960000,-5.874741,-4.323489,1.317531,2.121356,-3.666143,-9.185027,1.460294,-0.483920,5.369428,-7.986227,-7.649342,-3.423738,-7.792028,-3.154498,-3.893633,-7.784424,-4.203898,-8.486331,-4.165615,-2.376155,-4.487082,0.471841,-5.773295,-4.925860,0.132520,3.171899,7.891187,3.954239,-5.277349,5.348252,-5.363973,0.976822,-6.033567,-2.845804,-1.627186,0.158588,-2.593375,-3.997015,-6.837476,-8.680600,-7.957543,0.308826,-5.548725,3.108194,-8.097904,3.742962,4.157321,8.650806,-6.471211,-2.231403,-7.109622,1.603195,-8.827220,1.146856,-5.971148,-5.074165,-5.260636,-7.284456,-6.626376,7.256672,0.392646,9.362410,0.379640,-0.446495,1.230127,-0.756416,0.164581,-9.388186,-6.456441,-8.261903,0.969764,2.503910,6.358050,-0.429516,2.095315,-4.051677,-8.227319,7.933218,7.232736,9.121543,-5.176516,-6.309505,6.182273,3.518056,3.634613,-3.700134,-4.568673,-2.771786,-7.436582,7.735869,-9.480334,-4.291220,-6.707527,-6.864856,1.750748,-0.332503,-0.251424,7.040783,4.721474,3.012704,2.870679,7.566859,5.675491,3.923651,0.584790,5.547678,-8.461247,-8.959398,-6.230541,-7.607294,3.433871,1.971661,-6.134022,5.718740,-4.151063,-6.902701,5.029290,3.076236,3.434908,-3.283709,-5.939989,-5.578416,5.412584,6.317308,9.224740,0.792093,-4.900867,-6.175119,-6.410362,-3.525014,-7.484075,-4.248846,-4.364046,-3.878047,-5.981460,-2.122861,5.451953,5.422450,-2.381420,-9.794173,8.046526,-2.449433,-4.315003,-1.547293,-1.149691,8.975006,2.090812,-8.789264,-6.973305,6.559612,8.289494,9.568466,-9.260614,5.471882,0.872859,-9.907818,-3.694270,-5.311775,-0.922977,6.935829,3.375367,3.578868,-0.582484,-6.645039,7.153028,3.051452,-3.447134,1.242093,3.229667,1.714685,-0.818022,0.788922,-3.774783,5.538857,-3.073441,0.869524,-9.737677,-6.203314,1.150862,5.645084,-2.497282,6.836431,1.882904,9.873722,-1.576215,5.443802,4.183416,3.439223,-6.448424,-9.240256,6.091800,-1.629034,-2.544026,-3.830166,4.063397,-3.488582,-9.672435,-1.290743,-1.179231,-7.481041,-0.243960,7.676283,1.971689,9.259716,-0.765203,-1.332428,-0.157128,8.904761,-2.338063,-1.261714,0.626794,8.256731,-2.447120,1.622944,-6.368882,5.439215,6.299937,-8.952475,5.598201,-4.561128,6.793089,5.711802,3.519616,-1.428665,-3.490748,5.529593,-4.425765,2.888816,1.529301,8.760249,5.745315,-2.570362,-0.721380,6.704376,2.309534,9.766461,-8.983521,-4.266586,2.632992,6.026461,8.994302,8.073107,-8.736971,-6.517298,3.719615,4.310271,3.878699,6.597175,-4.085788,3.581732,-9.446109,-6.869197,-4.323533,-5.155816,2.552563,9.776301,-3.567711,-4.108373,-5.990163,-4.512228,4.095868,-4.243326,-0.766418,-9.190865,-8.096317,-3.824437,-0.847950,3.698113,2.191448,-9.130929,-2.157217,4.539589,-8.647376,1.091898,-5.436579,-5.937041,8.055161,-7.598343,-2.438991,-4.410989,0.804329,2.941824,9.862110,-7.988176,-6.137119,6.217329,-1.761100,3.560939,5.694546,4.370252,3.144062,8.389102,-6.304089,-0.739844,-3.446186,0.452040,5.794176,5.830325,-1.289492,7.142926,-1.883312,7.057559,4.970352,4.600218,5.971120,-5.000860,-0.639065,9.575570,-5.304027,4.271027,-5.944371,-5.270240,9.491458,-2.377539,4.450099,-3.902272,-4.112497,-2.315487,-4.998366,-0.276951,8.641080,-4.814983,-1.196843,-9.907700,8.988543,6.897373,7.362918,1.844820,4.894230,-9.281097,1.029968,-5.355837,-6.603378,3.980445,-7.287240,-3.326995,3.936426,6.937468,-3.162804,-9.848576,8.928802,4.541666,4.493278,7.955254,-4.535947,6.878665,-6.975540,8.665666,-7.266777,-7.625647,5.833798,-9.841262,4.799799,-1.962950,-4.820841,-8.875852,7.124638,-8.932912,-0.220383,4.528048,2.303281,7.794808,1.653944,-0.478390,5.078405,-2.674661,2.788851,6.894368,6.192303,-7.966656,-5.968806,3.872741,-8.037604,-2.018348,-9.571483,2.237143,-8.547730,3.674371,1.426386,-1.078634,-9.366155,5.275954,0.721271,0.070607,0.248277,-2.129320,-7.222200,6.483862,0.959762,6.819560,3.698016,7.206004,8.023077,4.692434,-9.986827,-2.045794,5.233818,-3.780399,-6.472007,2.812494,7.425268,-8.055047,2.728640,-8.101763,0.412732,-5.610008,-1.187311,1.798547,4.651722,4.901566,-9.630941,-6.600403,3.330608,-8.541353,-2.514240,5.262602,-9.716293,6.867988,3.921618,-0.599107,-5.505695,-0.828074,0.776270,-1.134919,-3.108747,-5.465121,6.195379,-2.476823,-5.513968,2.008227,-0.624654,-1.970507,-1.937870,2.334650,-5.921543,-6.317191,-9.898648,4.501648,-4.717795,-8.313513,0.449312,5.956636,-9.416228,-6.453759,8.407107,0.696474,-3.423653,-4.487713,-4.947992,4.412397,5.320153,6.708432,-0.034219,0.536577,-3.526560,2.781295,1.675181,6.796958,9.486669,-8.613209,2.221304,-2.460462,7.820081,-3.398151,-9.001818,-4.838203,8.230670,-8.639920,9.117031,7.446582,7.146376,6.603734,0.238557,-9.573437,-6.846814,2.561312,8.101443,-7.937758,-0.667718,-1.778435,-0.104368,8.819448,-8.639027,9.958177,6.838977,2.878128,5.183023,8.350715,1.717859,8.206735,-8.746616,1.385182,2.144063,6.189716,-6.629271,-6.441139,-2.407708,4.534943,9.449901,-4.669191,5.568487,-2.665502,0.614930,8.306636,8.811729,-8.333271,-6.976369,8.603056,3.302376,9.685070,-5.860969,-2.707816,7.059947,9.086851,-4.339136,-3.473043,-4.084108,7.515375,-8.123591,-4.517871,2.118381,-5.575922,6.165768,5.364164,-3.945941,-8.389840,3.162003,2.822335,-9.803525,8.512671,5.299352,-1.431652,-4.287335,5.447603,6.685843,2.862792,-3.461351,-6.131754,1.845390,9.081655,-9.224388,2.821041,-5.118573,2.247340,4.520939,-5.594120,-5.150847,-8.557574,-3.925077,0.043358,-7.703317,-5.543903,-6.173445,-2.520237,9.606461,6.500071,3.698203,9.416655,-9.663607,0.714094,3.822509,-0.163390,-5.209239,8.639655,-3.871072,-0.793815,9.707032,4.347198,4.937471,7.126099,1.613988,5.324591,6.847576,1.806674,6.341698,-7.683861,-0.454375,-7.573263,7.318712,0.636819,-0.676618,-5.355496,-2.197148,-1.761797,0.166973,-6.704054,-5.454052,-3.186636,-0.642417,1.930621,-6.155818,1.142917,-5.346546,7.273037,0.118738,0.490199,8.927832,3.316348,-9.631503,9.227814,1.472537,-8.849171,3.628644,-7.205213,-2.762418,7.058777,6.532820,8.309201,-0.917073,9.321533,5.986497,-4.029978,8.087810,4.228181,4.412998,1.845213,-7.516044,-8.989003,-0.459111,-1.471045,5.750185,0.582659,-0.140551,-8.876396,-6.176916,-5.515734,4.797327,-5.094373,-3.472536,-6.840009,-8.828423,-0.279455,5.628813,9.704194,5.887397,6.149379,9.799224,4.535733,1.517757,8.195640,-4.600492,-1.755954,-9.613367,-4.481803,-3.563707,-8.751520,-9.973608,6.096119,4.381269,-7.039877,-6.107209,5.974989,-9.449083,5.328998,0.376858,8.860230,-4.883760,4.325506,-8.207206,2.473278,-3.951825,-4.432281,6.735948,-7.074769,-3.807462,3.298318,-3.429424,-5.161048,-5.712494,7.582853,-1.532055,1.187208,-1.619624,8.063437,-0.922303,5.307103,-6.298694,7.707177,9.969560,1.181513,-5.912148,1.730901,2.225892,-3.265927,2.160080,1.195913,-0.795981,0.513235,5.436284,-0.122021,2.036646,-0.528698,8.422094,1.618203,-2.893563,-3.063860,-6.440069,0.119238,0.965372,3.774574,5.746570,9.903732,6.585354,-3.300680,4.014374,-4.171932,-8.409213,2.580065,-5.433970,5.368365,7.602483,-3.548857,9.839771,8.898781,9.111391,8.145462,-4.785732,-7.031076,6.709723,-9.073280,0.256005,-1.757303,-0.455702,7.058708,-4.280609,2.632049,-8.888938,3.081888,2.298836,0.550459,1.083320,-2.476644,0.623031,1.332511,7.950229,8.764512,-0.607182,4.853785,8.379228,-6.277253,4.560087,4.122475,7.054850,8.519373,-7.080328,2.082276,6.721845,1.551594,-7.860656,-7.372513,-4.493571,6.343374,8.996798,6.557776,4.669082,-9.922998,4.976485,1.885144,8.709088,-4.024521,7.345257,7.392734,8.874965,0.966041,-4.892795,9.164187,2.758379,7.696298,1.421364,-8.962645,-5.030898,9.132995,-0.350368,-2.949134,3.286233,2.425218,-0.010851,-5.062410,7.175368,-5.011711,6.315428,6.152647,-7.615908,9.099613,7.291434,-0.854711,-5.969781,-8.618108,-5.760090,-9.868868,9.946957,-1.067575,7.086600,8.799393,-0.879122,-2.724348,4.535047,3.741628,-4.483368,-2.934318,-1.231706,-5.173595,-2.210574,7.701219,0.703948,3.274869,-0.857360,9.318452,-2.654531,-2.153366,-9.270651,-0.840010,-4.240099,7.670905,-1.818524,5.168968,-3.006398,0.707725,-0.430839,-0.414149,6.563340,-4.898670,0.735608,3.968378,-9.129003,2.454292,-7.631549,-7.877108,1.749959,4.990939,1.019039,-0.169933,-4.318569,5.741369,-9.607456,7.075699,0.166995,3.534030,1.374380,-6.261579,4.711241,-7.899524,2.215355,-2.894634,-9.971102,-1.046465,-2.343768,4.359217,-5.656759,4.801151,-7.372626,-3.594888,-2.383418,7.688214,-1.003019,9.002463,8.457240,7.479841,0.698886,2.701126,-4.766356,7.740328,-1.863766,6.588558,7.322332,6.651502,5.096174,6.212772,-8.336558,8.174637,-6.987663,-3.112646,-9.298550,-8.901504,2.547232,4.829904,7.754577,4.748366,-7.443629,9.578182,9.482222,4.217923,-3.684642,1.304882,7.000060,-9.479916,9.991933,2.583610,-7.243188,8.137080,2.807172,1.225912,-7.914541,-0.448385,-0.327276,-8.748807,2.437240,-6.784042,7.442623,-6.614307,3.360795,-4.906663,9.800746,-9.769626,-5.358584,0.648885,6.242713,-3.672881,4.317231,-2.360905,-6.107118,-5.236708,-6.582178,-9.555344,-5.488145,1.702219,5.945889,-1.011519,1.246938,-6.946388,5.501792,-3.849739,7.771323,-6.904527,7.414820,-8.270294,0.578476,5.136787,1.616134,7.315106,-2.303217,6.101477,1.341043,-3.846342,0.958630,-7.670904,3.690005,4.982332,5.335018,9.104571,-4.841890,4.852162,-6.695211,9.862713,-0.461389,5.950483,0.410328,-4.538505,1.574124,-9.596858,6.507939,8.677039,0.740689,9.129256,-2.369231,8.241960], dtype = "float64")#candidate|3387|(2112,)|const|float64
call_3386 = relay.TupleGetItem(func_285_call(relay.reshape(const_3387.astype('float64'), [12, 16, 11]), relay.reshape(const_3387.astype('float64'), [12, 16, 11]), ), 0)
call_3388 = relay.TupleGetItem(func_288_call(relay.reshape(const_3387.astype('float64'), [12, 16, 11]), relay.reshape(const_3387.astype('float64'), [12, 16, 11]), ), 0)
var_3401 = relay.var("var_3401", dtype = "float64", shape = (12, 16, 11))#candidate|3401|(12, 16, 11)|var|float64
bop_3402 = relay.floor_mod(call_3386.astype('float32'), relay.reshape(var_3401.astype('float32'), relay.shape_of(call_3386))) # shape=(12, 16, 11)
bop_3405 = relay.floor_mod(call_3388.astype('float32'), relay.reshape(var_3401.astype('float32'), relay.shape_of(call_3388))) # shape=(12, 16, 11)
var_3409 = relay.var("var_3409", dtype = "float64", shape = (2112,))#candidate|3409|(2112,)|var|float64
bop_3410 = relay.minimum(const_3387.astype('float64'), relay.reshape(var_3409.astype('float64'), relay.shape_of(const_3387))) # shape=(2112,)
func_2483_call = mod.get_global_var('func_2483')
func_2485_call = mutated_mod.get_global_var('func_2485')
var_3414 = relay.var("var_3414", dtype = "uint16", shape = (168,))#candidate|3414|(168,)|var|uint16
call_3413 = relay.TupleGetItem(func_2483_call(relay.reshape(var_3414.astype('uint16'), [6, 28])), 0)
call_3415 = relay.TupleGetItem(func_2485_call(relay.reshape(var_3414.astype('uint16'), [6, 28])), 0)
bop_3423 = relay.greater(call_3413.astype('bool'), relay.reshape(call_3381.astype('bool'), relay.shape_of(call_3413))) # shape=(10, 8, 11)
bop_3426 = relay.greater(call_3415.astype('bool'), relay.reshape(call_3382.astype('bool'), relay.shape_of(call_3415))) # shape=(10, 8, 11)
output = relay.Tuple([bop_3402,bop_3410,var_3414,bop_3423,])
output2 = relay.Tuple([bop_3405,bop_3410,var_3414,bop_3426,])
func_3438 = relay.Function([var_3401,var_3409,var_3414,], output)
mod['func_3438'] = func_3438
mod = relay.transform.InferType()(mod)
var_3439 = relay.var("var_3439", dtype = "float64", shape = (12, 16, 11))#candidate|3439|(12, 16, 11)|var|float64
var_3440 = relay.var("var_3440", dtype = "float64", shape = (2112,))#candidate|3440|(2112,)|var|float64
var_3441 = relay.var("var_3441", dtype = "uint16", shape = (168,))#candidate|3441|(168,)|var|uint16
output = func_3438(var_3439,var_3440,var_3441,)
func_3442 = relay.Function([var_3439,var_3440,var_3441,], output)
mutated_mod['func_3442'] = func_3442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2954_call = mutated_mod.get_global_var('func_2954')
call_3467 = relay.TupleGetItem(func_2953_call(), 0)
call_3468 = relay.TupleGetItem(func_2954_call(), 0)
output = relay.Tuple([call_3467,])
output2 = relay.Tuple([call_3468,])
func_3485 = relay.Function([], output)
mod['func_3485'] = func_3485
mod = relay.transform.InferType()(mod)
mutated_mod['func_3485'] = func_3485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mutated_mod.get_global_var('func_3485')
call_3486 = func_3485_call()
output = call_3486
func_3487 = relay.Function([], output)
mutated_mod['func_3487'] = func_3487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2954_call = mutated_mod.get_global_var('func_2954')
call_3493 = relay.TupleGetItem(func_2953_call(), 0)
call_3494 = relay.TupleGetItem(func_2954_call(), 0)
output = relay.Tuple([call_3493,])
output2 = relay.Tuple([call_3494,])
func_3498 = relay.Function([], output)
mod['func_3498'] = func_3498
mod = relay.transform.InferType()(mod)
output = func_3498()
func_3499 = relay.Function([], output)
mutated_mod['func_3499'] = func_3499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3104_call = mod.get_global_var('func_3104')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_3503 = relay.TupleGetItem(func_3104_call(), 0)
call_3504 = relay.TupleGetItem(func_3106_call(), 0)
func_3367_call = mod.get_global_var('func_3367')
func_3371_call = mutated_mod.get_global_var('func_3371')
const_3515 = relay.const([9.046628,-1.638777,-4.883256,2.104210,2.369618,-1.539232,-4.443316,-4.225788,9.093636,-1.812374,-6.205789,5.949869,2.415469,1.010115,4.252833,6.181618,8.707748,-0.668326,1.422484,3.172158,1.654094,4.316125,0.595575,0.771766,7.765637,-2.673567,9.334625,5.829846,6.438213,-5.433752,5.782008,5.010184,3.429140,-6.256065,-9.713285,-1.969152,-4.911941,1.071149,5.395089,-3.087075,-5.182883,-7.329340,-1.527144,-3.885523,-5.319258,6.015419,8.282336,-4.735998,-9.932557,4.601954,-7.991562,-5.575685,1.155777,1.794912,-9.231054,0.491182,-0.616566,7.358351,9.422856,-2.476636,-7.889413,1.064777,-4.737161,-7.908333,1.259374,5.911544,1.531880,-1.332537,5.070048,-0.925647,5.551338,6.819639,4.081125,8.171593,-9.884331,9.321715,8.789088,-5.761072,-4.970401,-8.832417,1.755593,-3.729844,-7.738306,0.604885,-5.811832,8.129875,-6.046347,8.858214,5.189907,-1.757392,-4.995285,-4.646855,4.172943,8.750619,-9.083633,0.234874,-0.646263,-2.759912,-7.307899,-7.450779,6.837065,-0.394614,-6.212767,-1.923305,-0.070318,-2.630230,-8.233615,-9.890140,8.624808,8.593834,-5.142000,8.728089,-2.743596,4.700793,-6.609179,8.216630,2.286159,0.206997,2.496020,-2.548091,-2.583879,-4.837848,1.815420,-2.243638,9.624953,-5.909752,-4.418538,-3.752253,-0.983937,5.258225,0.439706,-3.514175,9.764139,3.751684,0.335846,-6.257392,-5.150886,-5.189344,-1.150678,-2.609811,8.324528,1.158149,2.488860,-1.596434,7.015713,-2.908355,6.168327,3.071474,-3.643655,3.380487,-7.426871,5.518802,2.649673,3.536185,6.683117,6.548126,-6.873440,-6.432793,-1.961580,2.564410,8.502732,-8.873269,4.827686,8.826637,-4.409141,1.666769,-5.208675,7.599667,1.523972,9.599355,8.952302,2.128896,4.518107,7.295791,-9.606811,7.702629,-3.004940,-0.215274,-3.862255,1.991312,2.345098,1.129339,0.894228,6.497553,7.244348,1.560742,7.179046,0.466771,2.465621,-7.535507,2.398807,7.280132,1.428699,1.046337,3.043170,7.758563,-2.432642,-2.437475,3.565091,-2.165983,8.331987,5.223668,-1.100043,6.885226,9.459303,4.852016,-5.257036,-9.620857,0.873641,8.510186,-1.902173,6.924037,1.780242,7.884192,5.361040,-6.667439,4.201055,8.872112,-1.656445,5.776678,-1.843495,-0.571586,3.621703,-7.031802,0.904890,1.778867,-5.399886,-9.560430,7.502461,0.078342,6.303896,7.128374,9.443862,-2.191898,4.029388,-2.764992,-2.044072,-2.982079,4.577334,-0.928985,-4.564241,1.307456,-4.541470,1.453929,3.981159,-1.456858,-6.605777,5.300415,-2.338942,4.004494,-7.176337,7.084161,-9.828638,-2.643839,9.468900,-1.773351,8.652536,-0.357164,7.501491,0.876306,-5.666051,1.893829,2.554450,5.526699,-7.680221,6.365546,-7.018397,-8.094068,4.516057,-4.030317,4.992547,-9.154157,-0.872126,7.263572,-8.882849,-1.539623,-0.062721,9.492329,9.100277,-5.968286,6.303729,-8.855752,-2.755882,2.196672,2.089998,-5.987076,-4.380322,8.712088,-3.693316,4.347816,1.888125,9.981738,8.541359,3.281670,4.926569,1.712125,-2.927793,-8.315378,-1.572582,-1.718873,-8.965949,-9.277425,1.186354,8.407109,-0.764439,7.771679,6.545988,-8.978052,9.032855,6.135818,5.294546,-4.468525,-2.232892,-9.135616,-2.456239,-1.646469,-3.894011,8.508255,1.803412,6.534262,4.448695,1.022542,5.859520,-5.724427,-3.785029,-6.661718,-6.282636,6.677466,6.444421,1.539619,-6.271144,-5.524976,-9.052185,-9.739712,2.877244,-9.377970,-1.749678,1.799049,9.074358,9.273607,3.953288,1.095748,-6.667129,-0.918168,-6.971722,9.341411,4.243866,4.184246,6.132870,1.960186,2.671321,-8.738673,-6.979493,-4.765140,9.158730,2.020005,0.580994,-9.158068,9.873411,4.174720,-4.877041,-5.353225,4.045824,8.205935,0.963474,3.542169,-6.724735,8.370109,0.549339,-3.306108,3.968450,9.276074,-9.987505,-0.166754,-2.249391,-2.516960,-1.696247,-6.878349,-6.451084,-2.188525,1.991844,7.054835,1.322574,-1.391960,-9.713869,2.676320,-9.272497,-2.354440,-0.565455,-0.059946,-4.255238,1.365994,1.480910,-4.355241,-1.378806,0.770508,-4.988882,4.377308,3.087584,-3.891550,9.549276,8.487430,-4.541610,-7.958133,-2.439857,2.029960,5.860940,5.514122,7.001489,1.521243,4.207143,7.735090,6.824374,6.209902,-0.362909,-0.807460,-7.609762,3.068984,3.355415,7.257653], dtype = "float64")#candidate|3515|(420,)|const|float64
var_3516 = relay.var("var_3516", dtype = "float64", shape = (702,))#candidate|3516|(702,)|var|float64
call_3514 = relay.TupleGetItem(func_3367_call(relay.reshape(const_3515.astype('float64'), [420,]), relay.reshape(call_3503.astype('float64'), [1, 880]), relay.reshape(var_3516.astype('float64'), [702,]), ), 5)
call_3517 = relay.TupleGetItem(func_3371_call(relay.reshape(const_3515.astype('float64'), [420,]), relay.reshape(call_3503.astype('float64'), [1, 880]), relay.reshape(var_3516.astype('float64'), [702,]), ), 5)
output = relay.Tuple([call_3503,call_3514,const_3515,var_3516,])
output2 = relay.Tuple([call_3504,call_3517,const_3515,var_3516,])
func_3520 = relay.Function([var_3516,], output)
mod['func_3520'] = func_3520
mod = relay.transform.InferType()(mod)
mutated_mod['func_3520'] = func_3520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3521 = relay.var("var_3521", dtype = "float64", shape = (702,))#candidate|3521|(702,)|var|float64
func_3520_call = mutated_mod.get_global_var('func_3520')
call_3522 = func_3520_call(var_3521)
output = call_3522
func_3523 = relay.Function([var_3521], output)
mutated_mod['func_3523'] = func_3523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_3525 = relay.TupleGetItem(func_3485_call(), 0)
call_3526 = relay.TupleGetItem(func_3487_call(), 0)
func_2819_call = mod.get_global_var('func_2819')
func_2820_call = mutated_mod.get_global_var('func_2820')
call_3535 = func_2819_call()
call_3536 = func_2819_call()
output = relay.Tuple([call_3525,call_3535,])
output2 = relay.Tuple([call_3526,call_3536,])
func_3558 = relay.Function([], output)
mod['func_3558'] = func_3558
mod = relay.transform.InferType()(mod)
output = func_3558()
func_3559 = relay.Function([], output)
mutated_mod['func_3559'] = func_3559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_3560 = relay.TupleGetItem(func_3093_call(), 0)
call_3561 = relay.TupleGetItem(func_3094_call(), 0)
output = relay.Tuple([call_3560,])
output2 = relay.Tuple([call_3561,])
func_3565 = relay.Function([], output)
mod['func_3565'] = func_3565
mod = relay.transform.InferType()(mod)
output = func_3565()
func_3566 = relay.Function([], output)
mutated_mod['func_3566'] = func_3566
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3584 = relay.var("var_3584", dtype = "float64", shape = ())#candidate|3584|()|var|float64
const_3585 = relay.const([[[1.546918,-7.683304,-7.740291,-0.436997,-5.536043,-8.643341],[-3.097794,-1.714895,-7.765135,5.243607,-4.760039,-6.118463],[-5.325120,-2.845971,5.952445,-9.880426,0.163142,-0.167327],[0.460878,4.361088,-0.968291,-0.458364,-8.186714,-4.598342],[-3.980840,2.271299,-8.334128,-0.453247,-4.797198,8.954997],[-2.431429,-7.423684,-8.507271,3.635372,8.668316,1.678208]],[[-4.602850,7.062400,-7.568565,-4.536626,6.657179,6.268404],[6.950281,-9.755414,0.003372,7.431192,0.967176,9.491799],[-3.042058,5.308347,9.402530,5.508644,3.941056,3.898815],[1.695967,-5.836178,0.314085,-1.919875,-9.689983,-6.734766],[-6.155418,7.762309,-0.325283,5.193446,-6.555717,-6.268632],[1.738845,7.584911,-5.688210,-7.598558,-1.752345,-4.017854]],[[5.972384,1.281981,-9.504413,5.588543,7.408252,-5.903912],[8.019722,9.028903,9.035110,-4.938466,9.227900,4.264032],[-4.141911,4.852035,-5.568429,-0.344068,-6.050455,6.084965],[5.282053,5.736389,-5.444267,-7.091510,4.701439,5.615827],[-9.922229,7.613917,9.850305,2.751870,4.584237,9.688092],[1.352505,2.932233,2.770555,-2.801555,6.812367,4.275446]],[[1.329408,3.008775,8.426745,1.219525,-3.476963,-5.442572],[7.392142,2.005516,-4.449669,9.025080,-4.755801,-5.605072],[3.601759,1.678633,-8.565877,-2.099473,-4.712219,8.982865],[-1.051660,0.002177,6.094997,4.166183,-7.730196,4.935294],[9.879259,-5.288568,0.790760,8.038671,3.693441,5.519097],[8.692876,0.983276,-3.747851,-2.792471,-3.709382,3.580127]],[[6.167329,-0.727441,-1.391517,-2.945491,-0.099717,1.609046],[8.181652,2.830453,0.014935,0.510985,-7.241214,8.946310],[2.390402,-6.613026,1.424087,9.854186,-4.758865,-3.247968],[-3.663496,-8.515624,9.558206,-1.798405,-7.189041,8.191284],[4.314795,-3.443086,-9.898535,-5.096666,7.431859,2.370119],[-7.098634,3.856083,-5.797337,3.848956,8.940614,-2.492652]],[[-2.870567,4.062547,-9.382693,-8.593849,2.528945,1.017603],[-8.533233,4.645112,-8.397110,2.078937,-7.202415,2.726826],[-1.320278,2.349724,-9.248380,1.775462,-3.286631,1.615478],[5.319441,-1.000826,4.900638,-3.531241,1.203648,6.977439],[-1.394944,8.746966,-0.001736,-6.827122,8.988642,-3.817859],[3.002696,-5.527911,-5.652556,-6.995998,-6.896546,5.585042]],[[-0.606605,9.769711,6.138744,-3.458483,0.765635,-9.508136],[-5.257667,8.098808,-2.752573,-4.705008,9.320938,-4.490822],[-6.586612,9.454380,4.273321,-8.242730,4.296796,-2.951838],[3.142103,-8.989828,-6.702448,-7.222773,4.582792,-8.326124],[6.559702,0.572975,-4.904782,-2.930835,-0.753712,2.165568],[-5.905330,-4.786143,0.288981,8.053096,7.313190,-7.203302]],[[-4.456698,-9.396542,-7.640003,-9.232181,4.029219,-7.396149],[4.014998,7.958024,-7.566129,8.827715,-7.721829,-0.684515],[-8.053115,-3.721271,-9.743715,6.727802,4.386527,-6.708116],[3.984946,5.472841,4.853268,-7.835455,2.528443,-3.346030],[-0.142839,-9.884543,7.956773,-6.135251,-7.363301,4.628097],[5.088630,-3.768324,4.646454,-3.989442,2.957412,9.891350]],[[5.430964,9.103822,3.756988,6.069508,6.924647,1.494369],[-3.748565,7.145905,-3.648184,9.330855,5.162253,5.110335],[4.407699,2.461136,9.793534,0.790759,-4.793500,0.092476],[-4.082772,6.004741,0.629370,1.553320,7.463093,-6.261406],[9.651935,6.024853,9.512132,2.561806,7.931017,4.926034],[-3.191671,5.968526,4.854291,-6.676248,8.009106,-2.646817]],[[-5.390344,7.242610,-9.916796,-5.976708,0.935817,-3.262919],[-1.908760,5.118569,9.798264,-1.933343,1.954116,-7.849696],[4.236209,8.404784,3.558581,7.447704,4.529782,3.918652],[-0.139439,6.066766,9.587649,6.935000,-7.204968,7.613605],[8.427537,7.432580,-9.591471,-3.399155,-6.522288,-1.064485],[4.480228,-5.242229,-0.565936,-8.453847,5.091652,4.828927]],[[3.866675,-4.613952,6.821934,0.876462,0.025200,-8.682185],[1.804587,9.620061,-6.939747,0.910662,5.254721,-0.260808],[3.768796,4.380311,-2.185282,8.150589,8.703009,6.719712],[-7.958035,9.179866,5.046504,5.319482,-9.366321,9.066714],[-5.562316,-9.063554,-4.652101,-8.829339,9.888437,-3.703506],[-8.207824,-9.032907,8.094208,-3.624782,-5.466469,3.815695]]], dtype = "float64")#candidate|3585|(11, 6, 6)|const|float64
bop_3586 = relay.add(var_3584.astype('float64'), const_3585.astype('float64')) # shape=(11, 6, 6)
output = relay.Tuple([bop_3586,])
output2 = relay.Tuple([bop_3586,])
func_3591 = relay.Function([var_3584,], output)
mod['func_3591'] = func_3591
mod = relay.transform.InferType()(mod)
var_3592 = relay.var("var_3592", dtype = "float64", shape = ())#candidate|3592|()|var|float64
output = func_3591(var_3592)
func_3593 = relay.Function([var_3592], output)
mutated_mod['func_3593'] = func_3593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2787_call = mod.get_global_var('func_2787')
func_2788_call = mutated_mod.get_global_var('func_2788')
call_3632 = relay.TupleGetItem(func_2787_call(), 0)
call_3633 = relay.TupleGetItem(func_2788_call(), 0)
output = call_3632
output2 = call_3633
func_3641 = relay.Function([], output)
mod['func_3641'] = func_3641
mod = relay.transform.InferType()(mod)
mutated_mod['func_3641'] = func_3641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3641_call = mutated_mod.get_global_var('func_3641')
call_3642 = func_3641_call()
output = call_3642
func_3643 = relay.Function([], output)
mutated_mod['func_3643'] = func_3643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2954_call = mutated_mod.get_global_var('func_2954')
call_3660 = relay.TupleGetItem(func_2953_call(), 0)
call_3661 = relay.TupleGetItem(func_2954_call(), 0)
output = relay.Tuple([call_3660,])
output2 = relay.Tuple([call_3661,])
func_3666 = relay.Function([], output)
mod['func_3666'] = func_3666
mod = relay.transform.InferType()(mod)
output = func_3666()
func_3667 = relay.Function([], output)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_3676 = relay.TupleGetItem(func_3093_call(), 0)
call_3677 = relay.TupleGetItem(func_3094_call(), 0)
output = call_3676
output2 = call_3677
func_3687 = relay.Function([], output)
mod['func_3687'] = func_3687
mod = relay.transform.InferType()(mod)
mutated_mod['func_3687'] = func_3687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3687_call = mutated_mod.get_global_var('func_3687')
call_3688 = func_3687_call()
output = call_3688
func_3689 = relay.Function([], output)
mutated_mod['func_3689'] = func_3689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3699 = relay.var("var_3699", dtype = "float64", shape = (8, 16))#candidate|3699|(8, 16)|var|float64
uop_3700 = relay.sigmoid(var_3699.astype('float64')) # shape=(8, 16)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_3727 = relay.TupleGetItem(func_3666_call(), 0)
call_3728 = relay.TupleGetItem(func_3667_call(), 0)
var_3735 = relay.var("var_3735", dtype = "float32", shape = (10, 8, 11))#candidate|3735|(10, 8, 11)|var|float32
bop_3736 = relay.bitwise_or(call_3727.astype('int64'), relay.reshape(var_3735.astype('int64'), relay.shape_of(call_3727))) # shape=(10, 8, 11)
bop_3739 = relay.bitwise_or(call_3728.astype('int64'), relay.reshape(var_3735.astype('int64'), relay.shape_of(call_3728))) # shape=(10, 8, 11)
uop_3749 = relay.sigmoid(bop_3736.astype('float32')) # shape=(10, 8, 11)
uop_3751 = relay.sigmoid(bop_3739.astype('float32')) # shape=(10, 8, 11)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_3761 = relay.TupleGetItem(func_3666_call(), 0)
call_3762 = relay.TupleGetItem(func_3667_call(), 0)
bop_3764 = relay.less(var_3735.astype('bool'), relay.reshape(call_3761.astype('bool'), relay.shape_of(var_3735))) # shape=(10, 8, 11)
bop_3767 = relay.less(var_3735.astype('bool'), relay.reshape(call_3762.astype('bool'), relay.shape_of(var_3735))) # shape=(10, 8, 11)
func_3641_call = mod.get_global_var('func_3641')
func_3643_call = mutated_mod.get_global_var('func_3643')
call_3772 = func_3641_call()
call_3773 = func_3641_call()
output = relay.Tuple([uop_3700,uop_3749,bop_3764,call_3772,])
output2 = relay.Tuple([uop_3700,uop_3751,bop_3767,call_3773,])
func_3794 = relay.Function([var_3699,var_3735,], output)
mod['func_3794'] = func_3794
mod = relay.transform.InferType()(mod)
mutated_mod['func_3794'] = func_3794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3794_call = mutated_mod.get_global_var('func_3794')
var_3796 = relay.var("var_3796", dtype = "float64", shape = (8, 16))#candidate|3796|(8, 16)|var|float64
var_3797 = relay.var("var_3797", dtype = "float32", shape = (10, 8, 11))#candidate|3797|(10, 8, 11)|var|float32
call_3795 = func_3794_call(var_3796,var_3797,)
output = call_3795
func_3798 = relay.Function([var_3796,var_3797,], output)
mutated_mod['func_3798'] = func_3798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3890 = relay.var("var_3890", dtype = "uint64", shape = (12, 12, 10))#candidate|3890|(12, 12, 10)|var|uint64
var_3891 = relay.var("var_3891", dtype = "uint64", shape = (12, 12, 10))#candidate|3891|(12, 12, 10)|var|uint64
bop_3892 = relay.greater_equal(var_3890.astype('bool'), relay.reshape(var_3891.astype('bool'), relay.shape_of(var_3890))) # shape=(12, 12, 10)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_3903 = relay.TupleGetItem(func_2675_call(), 0)
call_3904 = relay.TupleGetItem(func_2676_call(), 0)
func_900_call = mod.get_global_var('func_900')
func_903_call = mutated_mod.get_global_var('func_903')
var_3911 = relay.var("var_3911", dtype = "uint16", shape = (1, 168))#candidate|3911|(1, 168)|var|uint16
call_3910 = relay.TupleGetItem(func_900_call(relay.reshape(var_3911.astype('uint16'), [3, 8, 7])), 0)
call_3912 = relay.TupleGetItem(func_903_call(relay.reshape(var_3911.astype('uint16'), [3, 8, 7])), 0)
func_2819_call = mod.get_global_var('func_2819')
func_2820_call = mutated_mod.get_global_var('func_2820')
call_3921 = func_2819_call()
call_3922 = func_2819_call()
func_3558_call = mod.get_global_var('func_3558')
func_3559_call = mutated_mod.get_global_var('func_3559')
call_3924 = relay.TupleGetItem(func_3558_call(), 0)
call_3925 = relay.TupleGetItem(func_3559_call(), 0)
bop_3926 = relay.equal(var_3891.astype('bool'), relay.reshape(var_3890.astype('bool'), relay.shape_of(var_3891))) # shape=(12, 12, 10)
func_3078_call = mod.get_global_var('func_3078')
func_3084_call = mutated_mod.get_global_var('func_3084')
var_3931 = relay.var("var_3931", dtype = "float32", shape = (720,))#candidate|3931|(720,)|var|float32
const_3932 = relay.const([9,-3,3,4,10,-2,8,8,-2,9,-10,10,-2,10,6,-3,-9,3,-10,1,-1,-8,-7,-4,-1,1,-10,7,1,-5,-1,1,7,-4,-1,6,6,-2,2,5,9,-9,9,4,-5,7,7,8,4,-10,4,8,2,4,5,9,5,6,4,-6,-9,5,-2,2,2,10,10,6,7,-5,-1,-8,-4,2,4,-7,10,-1,-2,10,-6,9,-8,7,-7,10,1,-4,-2,-3,6,-9,9,-1,-4,-6,-1,8,2,-7,-2,-8,-4,-7,1,-3,9,5,4,10,9,8,-3,-1,4,7,-6,-8,-7,9,7,7,5,-6,10,-7,-4,-8,3,-5,7,4,4,4,-7,3,4,-9,-4,10,-3,-2,5,-5,9,-7,1,-8,3,8,4,5,-1,-10,9,8,8,8,-2,-4,-4,-7,-4,10,8,7,-9,-3,7,7,5,8,7,-9,-3,-2,-5,4,6,7,3,-10,-8,-5,6,3,-7,-7,10,-5,-8,-10,6,2,-9,7,-5,-4,-10,8,-1,7,3,-4,9,-4,6,10,9,5,-3,7,9,-10,2,-5,10,-1,-6,-4,4,-2,5,4,7,1,2,-9,1,10,-9,6,-6,4,4,9,-7,10,-4,-5,4,3,4,-8,1,-10,-4,-2,7,-2,-4,-9,-1,-3,3,-10,-4,4,-2,6,-4,-6,5,9,-1,-1,2,-6,-10,2,8,10,-4,3,9,-1,-4,-1,2,10,-3,-10,4,-1,-6,-6,4,8,10,-4,-9,-6,-2,5,-9,9,8,6,-5,4,10,6,8,10,5,9,-10,10,-1,6,-10,1,-2,9,6,9,-5,-9,-8,1,4,-9,6,-4,4,9,5,-1,-9,-6,-4,-10,-7,2,-8,3,2,6,-3,4,-2,-1,-3,4,3,-8,5,7,-4,9,1,-6,6,-10,-2,-4,7,1,-10,-3,-7,1,8,-3,-7,6,6,1,-4,9,-5,-2,2,6,10,-4,-2,-8,5,3,-6,1,3,-4,-5,6,-9,4,-4,3,2,1,-4,-4,-2,2,8,-2,7,1,-2,-4,5,-2,10,3,3,-6,4,-8,9,-6,5,-9,5,-6,6,6,8,8,-3,2,4,-5,-7,5,-6,4,-9,8,2,-1,-4,10,6,9,-9,-9,8,1,8,-3,9,8,2,-3,9,-5,-2,-4,2,-2,-4,-4,-5,-10,-3,9,-2,-1,4,9,8,6,-8,2,4,1,-5,2,1,4,7,-7,2,-1,2,10,3,-1,6,1,9,10,6,-3,6,-5,1,-1,-10,9,-4,1,7,-10,-5,-5,-10,8,6,7,9,2,1,-2,8,2,-10,-1,3,10,-10,-4,-9,-10,-4,-7,-8,2,4,2,-5,4,-5,2,4,-10,8,-7,-8,2,-4,6,7,1,2,-1,-6,-4,-10,1,-8,-8,-6,-3,-10,6,-3,-5], dtype = "uint8")#candidate|3932|(550,)|const|uint8
var_3933 = relay.var("var_3933", dtype = "float64", shape = (9, 1))#candidate|3933|(9, 1)|var|float64
const_3934 = relay.const([[3.485525,3.198206,-2.522160,-7.088691,-0.562134,3.233021,7.564822,-6.966892,8.636062,2.133868,1.179669,3.683222,-8.587951,0.156952,-1.549901,-9.414515,-8.979957,4.831923,-6.546620,3.419815,8.003532,-9.602625,-6.110376,-2.916635,5.262579,-5.786134,4.327409,-9.393599,-1.753437,-1.713981,-2.226154,-0.578934,-7.099791,5.969451,-5.012304,7.921753,6.256304,-8.583134,2.076675,6.977200,-2.782687,1.752759,0.526635,9.946102,4.925094,7.952223,4.772675,-7.836025,2.508960,-1.177762,6.071243,-8.780016,1.980710,-3.363920,5.360240,-2.929609,2.085274,9.609428,9.551015,8.109289,-4.384035,-4.324068,-1.378936,4.725539,-2.309107,3.124048,4.546691,-0.556899,6.931910,5.267630,7.996905,-8.579757,-9.181452,2.070947,4.778830,-7.092826,8.979816,8.941306,-2.664193,-8.217728,-6.503069,-2.024580,2.861901,-2.692766,7.452682,3.226594,6.140005,-2.486426,0.877880,-4.657557,-1.922197,-5.748023,1.553615,0.702337,-4.319397,7.212310,-2.273617,-8.530842,-6.513285,-4.760232,8.971596,-2.239192,7.610201,-6.339386,4.512822,8.909044,9.650537,4.662136,2.774550,-1.483714,-9.998572,-7.353954,2.662378,-4.211998,-0.670377,-6.770182,-5.789195,-9.028870,3.694746,-6.027205,1.534876,-3.694226,7.905851,-0.785502,-2.577903,-9.852509,-4.980343,7.913832,-9.441024,3.879543,-3.143186,-9.559398,4.974228,2.856720,4.577402,6.003425,9.401966,7.940100,1.836523,-1.095887,1.612396,4.396409,3.665018,1.868636,-2.924417,-0.611209,-3.233430,-0.943213,-0.601237,-9.434725,1.829474,-8.393201,2.153964,-8.956639,9.317339,4.831973,6.849660,-0.166409,5.188476,-2.824059,1.057134,4.995588,7.843864,7.121420,1.064928],[0.843385,2.600418,7.146421,-3.842478,2.509892,-6.639249,-5.047189,8.609106,5.832474,-2.751726,7.411272,-6.437975,-1.378754,-6.319083,5.878483,7.706919,-6.849607,1.675024,-3.965556,4.049605,6.245805,-0.732888,-5.218652,9.320557,-1.389809,0.594861,6.518239,-4.392571,-7.135270,1.796323,-0.272954,-2.554964,6.259908,8.538240,3.631979,4.075738,-5.214847,-7.872256,-4.976883,-5.670275,-0.740653,-1.451809,-9.298135,0.994756,4.389796,-9.968982,4.215103,-2.335116,-0.401449,-0.207576,1.088272,1.028956,0.461162,-0.958509,7.078659,8.260476,-2.253269,7.431393,-8.973529,0.405080,4.648648,-1.671267,7.101672,8.859966,-1.738715,2.306426,0.299813,7.607351,7.181572,-1.773418,6.934084,-7.446321,3.729632,-2.351170,-9.200495,6.668270,5.844518,-8.114398,1.450306,2.816424,-8.368074,9.519962,0.943376,-9.801539,-8.647246,1.259868,-0.751202,5.443048,7.362488,-6.835732,-5.260026,7.951566,5.189099,-3.551719,6.445011,-9.449224,-5.149191,3.926932,-9.248791,-8.765790,6.982384,-9.446331,5.791553,1.521841,1.862627,-9.844613,-2.679837,-2.534587,-0.063377,-0.596323,-6.329987,9.792798,-6.572476,-8.263512,-8.818065,3.497215,-3.397044,-0.602704,2.755300,-4.621285,0.802373,-4.705123,-7.335982,2.801937,2.994636,-6.080351,-3.493309,3.686056,-2.060328,7.095216,-0.071570,-7.190903,3.657879,7.092167,3.523951,0.937140,-5.664830,-8.604621,-2.318195,9.776623,0.188540,7.954536,1.606528,-5.537413,-0.941289,2.286182,-3.574139,8.524594,-5.052463,-6.414613,-7.136747,-2.469223,-6.754992,5.501387,-9.258241,-1.790580,-9.123453,4.732671,-7.323878,-8.686720,7.139051,-1.348032,4.716113,2.355170,-9.200413],[3.576731,-8.022441,8.103406,-4.712366,3.386936,-1.437517,-8.320074,-3.867257,-8.513219,1.980662,4.416187,-4.161484,-1.847435,-1.813047,8.011489,-0.030037,8.173027,-2.396637,8.274666,-4.572882,0.706350,-5.661501,2.708847,6.468135,-1.619649,-4.915178,-3.380680,7.470042,8.552702,-3.507043,-8.114832,6.214897,9.118810,-5.301160,8.196285,-2.059499,7.559024,-8.741528,6.366521,3.503124,0.221706,8.290114,-6.228622,-3.704309,-5.864211,8.395264,9.578010,5.173411,-0.201866,2.237640,-5.091319,1.544055,2.510904,-7.373020,4.624585,-1.195652,-0.444848,-1.194737,-1.892762,-4.908554,-1.279846,8.859445,-1.862413,-6.591679,-5.725323,-2.495635,5.441415,1.808529,-5.698583,0.559272,2.642693,-8.710205,-8.032830,-3.872958,7.316882,9.866773,-8.980868,-0.953736,0.510957,-0.801625,-8.829411,-0.272655,-4.207990,-9.382778,-5.613934,-6.259024,9.937527,1.825751,-6.771623,-3.155594,-7.381733,0.102198,-0.786217,7.249315,-6.142055,-1.073582,4.531785,5.115204,-8.709415,-9.475006,4.751748,-0.944513,6.628221,-9.582162,4.102811,0.036702,4.520058,3.225674,-0.212346,0.500473,-5.477229,-4.794608,1.495339,9.679413,5.830750,-3.176004,-6.864661,-5.983592,-0.871178,3.455630,2.494881,1.950907,5.627561,6.852828,6.266198,2.849036,-3.899029,7.366537,4.774367,5.661579,-7.719608,2.570161,-2.684108,-9.203780,5.608860,-5.350298,5.910350,7.599007,-9.880316,-2.027468,3.321039,9.721262,9.881228,1.677958,1.210239,-7.480914,-4.459704,4.167201,0.628452,4.575097,8.240565,8.264940,7.730368,-2.858102,8.774488,-1.465519,-9.699995,-0.218929,-1.894803,-5.986812,-0.539441,-9.972248,-7.169644,3.937021,4.911892],[-1.797848,7.064949,9.284964,-4.851582,-9.501261,5.748135,4.629949,7.123023,9.919537,0.534798,0.986537,-7.122434,6.605554,4.754865,-9.915501,4.243594,-0.336659,2.254741,-0.911561,1.143685,4.642092,4.657487,-7.514604,3.068157,-6.732324,3.414282,-0.907554,6.660810,-7.510020,1.357648,-8.538484,-2.946122,2.946391,-2.255327,9.007466,-0.005029,-3.468280,5.729057,-8.384921,9.320986,-5.472961,1.095535,-7.687764,-3.981039,1.654662,-0.666799,-8.595490,-1.010206,-9.248158,1.463226,-5.094679,-9.078808,3.246084,9.609057,-8.075258,6.667357,2.924278,-6.982589,5.070908,6.891848,-6.090706,-2.803801,-5.573910,-9.518884,-9.668028,-8.053555,9.328262,5.243494,7.062100,1.824399,6.495169,-6.064890,3.819013,4.539579,6.924936,7.784519,-4.107984,-0.750728,8.495295,3.105210,3.353485,-4.381389,-7.615159,3.054883,5.193497,-2.266796,7.885935,1.736102,6.864788,-1.561277,6.995823,-7.994454,2.483516,-3.699503,7.843434,-9.288427,-1.169928,8.899020,4.484492,-7.671201,3.527407,3.891153,6.008163,0.580628,5.839888,0.543876,-9.157695,-0.763624,-9.966043,-5.378181,-7.220642,-4.128877,7.586572,-6.490094,5.971895,8.101057,5.765586,4.341556,-9.704575,3.204172,-4.099663,-5.368338,-3.723051,0.867405,-2.331036,-1.989319,-9.084123,1.701080,-9.703284,-0.001594,-4.272604,3.212613,8.709027,-5.904134,0.336591,1.323184,-1.405611,-9.318112,0.011055,2.300711,5.715311,-5.156953,0.087609,-3.574594,4.392038,3.727385,-8.401080,8.238367,4.374832,0.109596,2.881199,9.447939,5.594028,-2.994498,2.678097,-9.324137,8.828379,-8.231567,-8.843132,1.097612,-6.848698,6.836472,7.226573,-9.908441,-7.554821],[3.615874,-9.051595,3.951647,7.881451,-2.442244,5.820671,3.572376,-0.354549,4.978509,-1.235257,-6.907259,3.281062,-3.167032,2.999478,-0.070751,-4.171363,9.232311,-6.610335,-0.814435,3.289488,-1.572987,7.767729,3.260639,6.452184,-1.777691,8.612110,-5.105870,-2.490336,3.586469,1.739370,6.096776,-3.505256,3.230189,3.161206,-0.772708,-8.961918,-3.230645,-6.003368,1.028717,-7.273674,-8.446412,7.964799,3.381303,1.519521,9.612758,-1.230230,-2.163647,3.228378,4.359261,-8.830268,3.787302,-1.679923,-6.993808,-4.827637,-9.805850,-7.234013,-5.832009,-7.805589,0.048050,2.356330,-1.450656,-9.228029,-4.219233,-3.042320,-9.314368,7.238222,-0.141515,0.979354,-6.756016,-4.714869,0.228850,6.516355,-9.415725,1.291536,0.200351,-2.485272,-7.387613,8.551475,5.830882,-4.472692,-5.050572,5.815477,7.559986,0.408974,-5.564914,-2.138410,-8.984704,-0.794991,2.853724,4.126407,-3.706234,4.592358,-6.541447,0.687148,-1.402145,1.387135,9.189335,7.631324,-8.697048,-0.279504,2.906804,-7.992074,6.442311,-2.872248,-3.025874,4.863017,-9.937112,2.057708,9.467826,-2.901818,-5.732098,-4.612572,-0.123507,-6.578865,3.482372,-3.002876,8.883918,-0.156463,1.815535,-6.451366,-7.530557,-7.127971,-7.647440,2.871030,-5.213193,7.498935,-5.131350,-2.219068,-4.932188,0.187555,9.079369,-1.724698,-5.857937,8.554668,5.059363,6.181839,-1.500973,-4.360541,3.025985,-4.540596,3.167230,-5.714641,-7.221714,1.732305,2.316597,-5.884940,-0.223319,5.994121,6.591278,-0.444086,-8.862718,4.338719,6.979921,4.710072,5.288459,-3.022393,-5.024375,-5.358606,4.560621,5.333534,-1.470466,5.252934,-1.135596,7.460810,-2.931722],[-8.727242,9.098382,0.954791,-4.592684,4.476555,-8.692952,-5.113116,-6.588816,3.563100,-8.254302,-7.207188,-8.243959,1.761634,5.373976,2.410981,-9.753203,-0.305815,6.046770,-9.408183,4.707251,6.436650,8.668151,-3.075909,0.919522,4.657456,-8.388591,-3.300293,-0.244656,2.510791,6.127002,2.065468,-3.214727,4.866761,6.040889,8.696730,-7.863369,-9.615763,4.807852,9.353726,9.249497,-2.625943,7.141773,-7.095386,5.519985,4.288945,-1.261316,-7.135547,-4.327491,-8.953308,-5.426675,-4.311758,2.475663,-4.778708,5.645193,3.316220,3.438689,-6.475217,-4.694732,-8.534353,-9.356990,-0.586474,-4.036165,-9.460327,1.849061,-4.457194,-3.976434,-0.253116,6.222593,-6.339014,-3.815450,9.056440,-7.613101,-0.026787,2.269513,-6.659486,-0.006415,-9.238548,3.073775,-3.250900,-5.908792,-7.773456,0.902833,-4.127276,-2.809462,-9.429117,-4.799142,-9.476419,4.171556,0.466760,4.702039,1.817643,4.737227,-1.485290,-4.560293,0.965170,2.564524,1.014590,-8.805646,0.823362,4.066602,2.321406,-5.741025,-6.896858,3.557035,-3.311790,6.320010,-0.358765,8.605517,3.864664,4.087651,-5.037554,4.087543,-0.982329,8.782567,-6.257801,4.150306,-6.896175,2.568632,5.373826,1.958636,9.753174,5.793695,0.533479,-1.679997,-9.664087,6.177374,-5.590135,8.194574,-5.426228,-7.720795,8.359536,-9.008663,2.179038,-9.584901,-4.343424,-6.889009,-4.542393,-6.007720,1.941962,-4.443920,-3.659642,-8.385296,-1.503859,9.710811,0.053189,1.334496,9.497530,-7.819017,4.600430,-7.536330,-5.886729,1.524234,-6.330914,-6.780254,-8.513527,-6.364769,-1.188047,0.494661,-5.798844,0.291859,8.004388,-8.323980,4.668681,6.199497,2.911097],[-3.146578,0.709309,-8.987907,8.085411,0.186747,6.555208,4.320096,-2.969449,0.182225,9.936621,-8.286161,9.956415,-0.031229,-3.314766,-3.837790,6.107000,7.611889,-0.888487,-4.884934,9.257598,-2.485320,6.939555,-9.877194,-7.953006,-5.795469,1.209049,-5.308418,6.748600,4.110086,3.699607,1.250284,-8.671359,2.816002,-2.843002,7.011636,5.623244,9.354458,4.402032,-9.950506,2.049294,4.841269,-5.891235,2.313719,-1.647422,0.925522,-9.847510,-8.157573,4.592629,-2.794497,-5.242135,9.309402,2.171016,-5.818516,0.995801,-6.096685,-3.330056,0.584758,-9.458477,-2.460276,8.326175,-7.153655,9.421997,-7.019520,-7.126862,-6.721462,-7.144732,-0.512516,-4.223997,-0.969537,3.561947,-7.335816,0.006128,-9.406106,7.114203,-6.719390,-0.360186,-7.602466,-4.369365,5.279031,1.315525,9.638614,0.816995,2.901220,-8.384030,9.969078,1.975729,7.645436,8.628666,-0.394156,9.755044,0.835567,6.391943,1.228350,5.950039,-2.171789,-5.241777,-9.753075,0.043262,-1.391892,-9.221604,2.711580,5.464358,-5.250184,6.658511,9.466053,2.014853,-6.041331,5.387370,-7.770250,-0.655635,0.583297,-9.350693,4.841087,-4.468299,-6.826008,1.519274,-7.994720,-2.309509,-6.419450,3.055108,-9.745626,-2.697441,0.433993,-2.373895,-4.526612,-6.693032,-3.685192,-3.646918,-1.048648,4.194588,1.691075,-9.975932,5.218636,-6.545192,-7.067404,-7.933356,-2.557332,-2.905617,-3.808573,-6.813744,9.176255,-1.060228,8.931239,0.440080,4.428561,-2.832984,-5.721938,-5.125283,-8.674104,0.075676,-4.460539,3.808955,-8.213637,-9.988451,2.231993,-5.555339,6.349253,-3.643226,8.092225,-6.132869,-8.591791,4.702546,-1.786158,-0.004212,-4.093868]], dtype = "float64")#candidate|3934|(7, 165)|const|float64
call_3930 = relay.TupleGetItem(func_3078_call(relay.reshape(var_3931.astype('float32'), [720,]), relay.reshape(const_3932.astype('uint8'), [11, 10, 5]), relay.reshape(var_3933.astype('float64'), [9, 1]), relay.reshape(const_3934.astype('float64'), [1155,]), ), 2)
call_3935 = relay.TupleGetItem(func_3084_call(relay.reshape(var_3931.astype('float32'), [720,]), relay.reshape(const_3932.astype('uint8'), [11, 10, 5]), relay.reshape(var_3933.astype('float64'), [9, 1]), relay.reshape(const_3934.astype('float64'), [1155,]), ), 2)
output = relay.Tuple([bop_3892,call_3903,call_3910,var_3911,call_3921,call_3924,bop_3926,call_3930,var_3931,const_3932,var_3933,const_3934,])
output2 = relay.Tuple([bop_3892,call_3904,call_3912,var_3911,call_3922,call_3925,bop_3926,call_3935,var_3931,const_3932,var_3933,const_3934,])
func_3945 = relay.Function([var_3890,var_3891,var_3911,var_3931,var_3933,], output)
mod['func_3945'] = func_3945
mod = relay.transform.InferType()(mod)
mutated_mod['func_3945'] = func_3945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3945_call = mutated_mod.get_global_var('func_3945')
var_3947 = relay.var("var_3947", dtype = "uint64", shape = (12, 12, 10))#candidate|3947|(12, 12, 10)|var|uint64
var_3948 = relay.var("var_3948", dtype = "uint64", shape = (12, 12, 10))#candidate|3948|(12, 12, 10)|var|uint64
var_3949 = relay.var("var_3949", dtype = "uint16", shape = (1, 168))#candidate|3949|(1, 168)|var|uint16
var_3950 = relay.var("var_3950", dtype = "float32", shape = (720,))#candidate|3950|(720,)|var|float32
var_3951 = relay.var("var_3951", dtype = "float64", shape = (9, 1))#candidate|3951|(9, 1)|var|float64
call_3946 = func_3945_call(var_3947,var_3948,var_3949,var_3950,var_3951,)
output = call_3946
func_3952 = relay.Function([var_3947,var_3948,var_3949,var_3950,var_3951,], output)
mutated_mod['func_3952'] = func_3952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2787_call = mod.get_global_var('func_2787')
func_2788_call = mutated_mod.get_global_var('func_2788')
call_3961 = relay.TupleGetItem(func_2787_call(), 1)
call_3962 = relay.TupleGetItem(func_2788_call(), 1)
output = relay.Tuple([call_3961,])
output2 = relay.Tuple([call_3962,])
func_3967 = relay.Function([], output)
mod['func_3967'] = func_3967
mod = relay.transform.InferType()(mod)
output = func_3967()
func_3968 = relay.Function([], output)
mutated_mod['func_3968'] = func_3968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3565_call = mod.get_global_var('func_3565')
func_3566_call = mutated_mod.get_global_var('func_3566')
call_3969 = relay.TupleGetItem(func_3565_call(), 0)
call_3970 = relay.TupleGetItem(func_3566_call(), 0)
output = call_3969
output2 = call_3970
func_3974 = relay.Function([], output)
mod['func_3974'] = func_3974
mod = relay.transform.InferType()(mod)
mutated_mod['func_3974'] = func_3974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3974_call = mutated_mod.get_global_var('func_3974')
call_3975 = func_3974_call()
output = call_3975
func_3976 = relay.Function([], output)
mutated_mod['func_3976'] = func_3976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3498_call = mod.get_global_var('func_3498')
func_3499_call = mutated_mod.get_global_var('func_3499')
call_3979 = relay.TupleGetItem(func_3498_call(), 0)
call_3980 = relay.TupleGetItem(func_3499_call(), 0)
output = relay.Tuple([call_3979,])
output2 = relay.Tuple([call_3980,])
func_3981 = relay.Function([], output)
mod['func_3981'] = func_3981
mod = relay.transform.InferType()(mod)
mutated_mod['func_3981'] = func_3981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mutated_mod.get_global_var('func_3981')
call_3982 = func_3981_call()
output = call_3982
func_3983 = relay.Function([], output)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3984 = relay.const(True, dtype = "bool")#candidate|3984|()|const|bool
const_3985 = relay.const([[[False,True,False,False,False,True,True,False,False,True],[False,True,True,True,True,False,True,True,True,True],[False,True,True,True,True,False,False,False,False,False],[True,False,True,True,False,True,True,True,False,True]],[[True,False,False,False,False,True,False,True,True,True],[False,True,False,True,False,False,False,True,False,False],[True,True,False,False,True,False,False,False,True,False],[True,False,False,True,False,False,False,False,True,True]],[[True,False,True,False,True,True,False,True,False,False],[True,True,False,True,False,True,True,False,True,True],[False,False,True,False,True,False,True,True,False,False],[True,False,False,False,False,False,True,False,True,False]],[[False,True,True,False,False,True,True,False,True,False],[True,True,False,False,False,True,False,True,True,True],[True,False,True,False,False,True,False,True,True,True],[True,True,False,True,False,True,False,True,True,False]],[[False,False,True,False,False,True,False,True,False,True],[False,False,True,True,False,True,False,False,False,True],[True,False,False,False,True,False,True,True,False,False],[True,False,False,True,False,False,False,False,True,True]],[[True,True,True,False,False,True,True,False,True,False],[True,False,False,False,False,True,False,True,False,False],[True,False,False,True,True,True,False,True,True,True],[False,True,True,True,True,True,False,True,False,True]],[[True,True,False,True,True,False,False,False,False,False],[False,True,False,True,True,True,False,True,True,True],[False,True,False,True,True,False,True,True,True,True],[True,False,False,True,True,False,True,True,False,True]],[[True,False,True,False,True,False,True,True,True,False],[True,True,False,True,True,True,True,False,False,False],[True,True,False,True,False,True,True,False,False,True],[True,False,False,False,False,True,False,True,True,True]],[[False,False,True,False,True,False,True,True,False,True],[True,True,True,False,False,True,True,False,True,False],[True,True,False,True,True,False,True,False,True,False],[True,True,False,False,True,True,False,False,False,False]],[[False,False,True,True,False,False,False,True,False,False],[True,True,True,True,True,False,True,False,False,True],[False,False,False,False,False,False,True,True,False,False],[True,False,False,True,True,False,True,False,True,True]],[[False,True,False,True,False,True,True,False,True,False],[True,True,False,True,True,False,True,True,True,False],[True,True,False,True,False,False,True,True,False,False],[False,False,True,False,True,False,False,False,False,True]],[[False,True,True,False,False,False,True,False,True,False],[False,False,True,False,True,True,False,False,False,False],[True,False,False,False,True,True,False,True,False,False],[False,False,True,True,True,False,False,False,False,True]]], dtype = "bool")#candidate|3985|(12, 4, 10)|const|bool
bop_3986 = relay.logical_or(const_3984.astype('bool'), const_3985.astype('bool')) # shape=(12, 4, 10)
uop_3995 = relay.asin(bop_3986.astype('float64')) # shape=(12, 4, 10)
func_1258_call = mod.get_global_var('func_1258')
func_1263_call = mutated_mod.get_global_var('func_1263')
const_3999 = relay.const([[-9],[7],[8],[5],[3],[-4],[-7],[5],[-6],[-3],[-10],[6],[1],[-10],[6],[-3],[-4],[-2],[-2],[-6],[3],[1],[9],[-2],[-2],[8],[3],[-1],[-3],[-3],[-1],[-3],[-7],[-7],[4],[-7],[3],[6],[1],[-9],[-1],[7],[8],[-10],[1],[2],[-2],[-6],[2],[1],[7],[2],[5],[4],[-6],[-10],[-9],[-2],[-7],[9],[-10],[9],[-6],[2],[-8],[-3],[-10],[-7],[-4],[10],[1],[6],[-7],[6],[-5],[-1],[6],[6],[4],[-1],[2],[1],[10],[6],[6],[-4],[7],[8],[10],[-9],[1],[-9],[-1],[10],[-2],[10],[-6],[5],[-9],[-1],[-8],[4],[7],[-3],[-6],[-2],[-4],[5],[-6],[1],[-5],[-2],[-1],[8],[-8],[7],[-6],[-5],[-2],[9],[-1],[-6],[-4],[8],[-5],[7],[-9],[-2],[4],[10],[-1],[-9],[-7],[1],[3],[9],[3],[-6],[-8],[4],[-3],[-3],[8],[3],[-7],[5],[2],[-6],[-10],[-10],[7],[4],[-7],[-4],[5],[6],[10],[8],[-7],[1],[6],[4],[2],[6],[-7],[5],[-4],[-1],[-9],[5],[6],[2],[5],[6],[-3],[-5],[-5],[-4],[9],[8],[-4],[9],[2],[-2],[8],[7],[-1],[9],[-8],[-7],[2],[-7],[-3],[3],[-3],[-7],[6],[9],[-9],[-10],[-8],[-10],[-3],[4],[-4],[2],[5],[2],[-2],[-9],[5],[-4],[-3],[8],[-3],[6],[3],[-10],[-4],[8],[7],[3],[-9],[9],[7],[-8],[3],[3],[4],[7],[-10]], dtype = "uint8")#candidate|3999|(231, 1)|const|uint8
var_4000 = relay.var("var_4000", dtype = "float64", shape = (1155,))#candidate|4000|(1155,)|var|float64
var_4001 = relay.var("var_4001", dtype = "uint16", shape = (168,))#candidate|4001|(168,)|var|uint16
call_3998 = relay.TupleGetItem(func_1258_call(relay.reshape(const_3999.astype('uint8'), [11, 3, 7]), relay.reshape(const_3999.astype('uint8'), [11, 3, 7]), relay.reshape(var_4000.astype('float64'), [1155,]), relay.reshape(var_4001.astype('uint16'), [84, 2]), ), 5)
call_4002 = relay.TupleGetItem(func_1263_call(relay.reshape(const_3999.astype('uint8'), [11, 3, 7]), relay.reshape(const_3999.astype('uint8'), [11, 3, 7]), relay.reshape(var_4000.astype('float64'), [1155,]), relay.reshape(var_4001.astype('uint16'), [84, 2]), ), 5)
bop_4006 = relay.multiply(uop_3995.astype('int64'), relay.reshape(bop_3986.astype('int64'), relay.shape_of(uop_3995))) # shape=(12, 4, 10)
output = relay.Tuple([call_3998,const_3999,var_4000,var_4001,bop_4006,])
output2 = relay.Tuple([call_4002,const_3999,var_4000,var_4001,bop_4006,])
func_4015 = relay.Function([var_4000,var_4001,], output)
mod['func_4015'] = func_4015
mod = relay.transform.InferType()(mod)
var_4016 = relay.var("var_4016", dtype = "float64", shape = (1155,))#candidate|4016|(1155,)|var|float64
var_4017 = relay.var("var_4017", dtype = "uint16", shape = (168,))#candidate|4017|(168,)|var|uint16
output = func_4015(var_4016,var_4017,)
func_4018 = relay.Function([var_4016,var_4017,], output)
mutated_mod['func_4018'] = func_4018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2999_call = mod.get_global_var('func_2999')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_4020 = relay.TupleGetItem(func_2999_call(), 2)
call_4021 = relay.TupleGetItem(func_3000_call(), 2)
func_3498_call = mod.get_global_var('func_3498')
func_3499_call = mutated_mod.get_global_var('func_3499')
call_4038 = relay.TupleGetItem(func_3498_call(), 0)
call_4039 = relay.TupleGetItem(func_3499_call(), 0)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_4040 = relay.TupleGetItem(func_2675_call(), 0)
call_4041 = relay.TupleGetItem(func_2676_call(), 0)
func_1175_call = mod.get_global_var('func_1175')
func_1178_call = mutated_mod.get_global_var('func_1178')
var_4049 = relay.var("var_4049", dtype = "float64", shape = (1, 420))#candidate|4049|(1, 420)|var|float64
call_4048 = relay.TupleGetItem(func_1175_call(relay.reshape(var_4049.astype('float64'), [14, 3, 10])), 0)
call_4050 = relay.TupleGetItem(func_1178_call(relay.reshape(var_4049.astype('float64'), [14, 3, 10])), 0)
func_3967_call = mod.get_global_var('func_3967')
func_3968_call = mutated_mod.get_global_var('func_3968')
call_4056 = relay.TupleGetItem(func_3967_call(), 0)
call_4057 = relay.TupleGetItem(func_3968_call(), 0)
output = relay.Tuple([call_4020,call_4038,call_4040,call_4048,var_4049,call_4056,])
output2 = relay.Tuple([call_4021,call_4039,call_4041,call_4050,var_4049,call_4057,])
func_4058 = relay.Function([var_4049,], output)
mod['func_4058'] = func_4058
mod = relay.transform.InferType()(mod)
mutated_mod['func_4058'] = func_4058
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4059 = relay.var("var_4059", dtype = "float64", shape = (1, 420))#candidate|4059|(1, 420)|var|float64
func_4058_call = mutated_mod.get_global_var('func_4058')
call_4060 = func_4058_call(var_4059)
output = call_4060
func_4061 = relay.Function([var_4059], output)
mutated_mod['func_4061'] = func_4061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_4181 = relay.TupleGetItem(func_3093_call(), 0)
call_4182 = relay.TupleGetItem(func_3094_call(), 0)
output = call_4181
output2 = call_4182
func_4189 = relay.Function([], output)
mod['func_4189'] = func_4189
mod = relay.transform.InferType()(mod)
mutated_mod['func_4189'] = func_4189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4189_call = mutated_mod.get_global_var('func_4189')
call_4190 = func_4189_call()
output = call_4190
func_4191 = relay.Function([], output)
mutated_mod['func_4191'] = func_4191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_4221 = relay.TupleGetItem(func_2417_call(), 0)
call_4222 = relay.TupleGetItem(func_2418_call(), 0)
output = relay.Tuple([call_4221,])
output2 = relay.Tuple([call_4222,])
func_4223 = relay.Function([], output)
mod['func_4223'] = func_4223
mod = relay.transform.InferType()(mod)
mutated_mod['func_4223'] = func_4223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4223_call = mutated_mod.get_global_var('func_4223')
call_4224 = func_4223_call()
output = call_4224
func_4225 = relay.Function([], output)
mutated_mod['func_4225'] = func_4225
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4237 = relay.var("var_4237", dtype = "float32", shape = (8, 16, 15))#candidate|4237|(8, 16, 15)|var|float32
uop_4238 = relay.asin(var_4237.astype('float32')) # shape=(8, 16, 15)
uop_4254 = relay.acos(uop_4238.astype('float64')) # shape=(8, 16, 15)
bop_4258 = relay.logical_xor(uop_4254.astype('int16'), relay.reshape(var_4237.astype('int16'), relay.shape_of(uop_4254))) # shape=(8, 16, 15)
uop_4265 = relay.tan(var_4237.astype('float32')) # shape=(8, 16, 15)
func_2819_call = mod.get_global_var('func_2819')
func_2820_call = mutated_mod.get_global_var('func_2820')
call_4272 = func_2819_call()
call_4273 = func_2819_call()
func_3498_call = mod.get_global_var('func_3498')
func_3499_call = mutated_mod.get_global_var('func_3499')
call_4275 = relay.TupleGetItem(func_3498_call(), 0)
call_4276 = relay.TupleGetItem(func_3499_call(), 0)
bop_4277 = relay.equal(bop_4258.astype('bool'), relay.reshape(var_4237.astype('bool'), relay.shape_of(bop_4258))) # shape=(8, 16, 15)
bop_4286 = relay.logical_and(uop_4265.astype('bool'), relay.reshape(bop_4277.astype('bool'), relay.shape_of(uop_4265))) # shape=(8, 16, 15)
func_3104_call = mod.get_global_var('func_3104')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_4300 = relay.TupleGetItem(func_3104_call(), 0)
call_4301 = relay.TupleGetItem(func_3106_call(), 0)
func_285_call = mod.get_global_var('func_285')
func_288_call = mutated_mod.get_global_var('func_288')
var_4304 = relay.var("var_4304", dtype = "float64", shape = (2112,))#candidate|4304|(2112,)|var|float64
call_4303 = relay.TupleGetItem(func_285_call(relay.reshape(var_4304.astype('float64'), [12, 16, 11]), relay.reshape(var_4304.astype('float64'), [12, 16, 11]), ), 0)
call_4305 = relay.TupleGetItem(func_288_call(relay.reshape(var_4304.astype('float64'), [12, 16, 11]), relay.reshape(var_4304.astype('float64'), [12, 16, 11]), ), 0)
uop_4317 = relay.log10(bop_4286.astype('float64')) # shape=(8, 16, 15)
func_3565_call = mod.get_global_var('func_3565')
func_3566_call = mutated_mod.get_global_var('func_3566')
call_4323 = relay.TupleGetItem(func_3565_call(), 0)
call_4324 = relay.TupleGetItem(func_3566_call(), 0)
output = relay.Tuple([call_4272,call_4275,call_4300,call_4303,var_4304,uop_4317,call_4323,])
output2 = relay.Tuple([call_4273,call_4276,call_4301,call_4305,var_4304,uop_4317,call_4324,])
func_4338 = relay.Function([var_4237,var_4304,], output)
mod['func_4338'] = func_4338
mod = relay.transform.InferType()(mod)
var_4339 = relay.var("var_4339", dtype = "float32", shape = (8, 16, 15))#candidate|4339|(8, 16, 15)|var|float32
var_4340 = relay.var("var_4340", dtype = "float64", shape = (2112,))#candidate|4340|(2112,)|var|float64
output = func_4338(var_4339,var_4340,)
func_4341 = relay.Function([var_4339,var_4340,], output)
mutated_mod['func_4341'] = func_4341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4360 = relay.var("var_4360", dtype = "int64", shape = (16, 13, 10))#candidate|4360|(16, 13, 10)|var|int64
const_4361 = relay.const([[[-6,9,9,1,5,9,5,-3,-10,5],[-6,5,10,-6,8,9,2,-5,3,7],[9,4,-3,-2,3,-9,6,10,-9,-8],[-6,-1,6,-1,4,-9,-3,-5,-9,1],[4,2,-4,-7,1,-2,-4,-7,-10,1],[6,7,2,-6,-10,-4,-9,-4,1,5],[-7,-8,1,5,-4,5,8,-9,-3,3],[6,-8,4,-7,1,6,1,1,1,-1],[-4,-5,8,5,3,-7,-5,-1,6,3],[-1,7,3,2,-6,9,9,2,-9,3],[3,8,-6,7,8,9,-9,9,-4,5],[4,-10,7,-4,-9,8,-8,1,9,4],[-10,-7,1,10,-9,-5,-9,7,9,4]],[[-10,-9,1,10,8,7,9,6,2,-5],[-2,-3,9,9,-3,5,7,2,4,8],[-10,-1,-9,-10,2,1,8,-5,5,-5],[10,4,4,5,-9,-9,6,-9,6,5],[5,-1,1,9,3,6,6,9,9,-5],[7,-9,-5,-7,6,-8,-9,3,7,5],[8,3,5,-1,6,-3,3,5,8,8],[7,6,-6,-5,3,-5,3,-4,-10,3],[4,-10,-7,4,8,-1,9,-2,-6,-8],[-8,9,-8,2,-7,-5,-10,-7,-9,-2],[2,-5,-3,-6,3,10,-4,5,-2,-4],[-3,-2,-4,-9,2,4,-9,5,-4,-2],[4,10,-3,-3,-3,5,-6,10,8,2]],[[3,3,5,-5,-10,5,1,3,-2,10],[-3,-3,4,8,-3,1,8,-1,4,9],[-4,-10,-4,8,1,-3,-5,-5,8,-10],[-6,10,-6,5,6,6,2,5,-10,2],[-3,8,-9,-4,8,1,-8,8,-1,-4],[8,-5,5,-4,2,-6,1,10,9,-9],[1,-3,-3,3,-3,-9,6,-9,3,-7],[1,10,9,2,-8,-5,4,-8,-8,-9],[7,-9,-3,7,4,-10,7,-7,-2,4],[-3,-8,8,2,-8,-6,10,-1,6,8],[2,-4,-8,5,1,1,-8,-9,-7,-2],[-3,-4,-6,5,-3,-1,-10,5,-6,-9],[10,9,1,6,-8,-6,7,-3,5,4]],[[-10,4,-9,-10,-9,-2,-3,7,-8,1],[-1,8,-7,2,10,9,-10,1,-9,-4],[4,-7,6,8,-9,9,-7,10,7,-5],[10,8,4,9,10,4,-9,10,9,9],[-10,9,-7,-1,-3,-3,2,-2,9,-2],[7,7,-10,-1,-7,-8,1,4,8,-2],[4,5,7,2,9,8,-3,1,-2,-4],[-5,3,2,3,5,-1,3,4,-3,7],[-2,9,-10,9,-5,8,-7,-5,8,-7],[3,1,5,-7,2,2,9,-1,4,-10],[5,8,-8,-9,10,1,-5,1,-8,10],[-4,-5,-6,3,-6,-8,2,-1,8,9],[7,3,-10,3,5,-7,-6,4,-9,-1]],[[-2,6,-6,2,-8,-1,-1,-6,-1,1],[2,6,10,-1,7,-4,2,10,-6,1],[-7,8,9,9,4,-9,-7,4,5,8],[7,2,1,-5,-8,2,9,3,7,9],[1,-6,2,-8,5,-2,8,-2,-10,8],[5,5,-2,-3,10,10,9,2,8,-2],[-3,-7,-2,2,8,-2,-9,-7,5,2],[2,-7,-10,6,-8,-4,7,-4,2,1],[-5,3,1,-7,-9,-2,-2,4,7,-1],[10,-7,-7,-6,-6,-9,1,5,1,10],[2,1,-10,-8,-4,-3,-4,-1,-1,2],[-5,8,-2,-10,6,2,-2,4,9,1],[10,-10,-6,7,-10,-7,-7,-1,-10,1]],[[10,8,6,6,-3,-1,-2,-9,-1,-8],[-5,-6,-1,-3,-9,-9,-8,3,-8,-1],[5,-5,-2,5,-9,6,9,-6,8,-1],[4,6,-8,7,-5,8,10,-8,6,-6],[8,10,-4,6,-6,9,-9,-3,3,5],[-6,-9,-8,9,-10,-10,-8,6,7,-4],[-10,-4,-9,8,-6,-1,7,1,6,-9],[6,7,-10,-6,6,3,-2,-7,-3,-4],[-9,1,4,1,-1,-10,-2,1,-1,-10],[-6,5,9,8,8,-2,6,2,5,-3],[6,5,2,9,-2,2,-3,7,-10,5],[-8,6,-10,5,-4,6,-2,7,9,-5],[6,-1,4,-10,-3,-4,-3,5,9,-1]],[[-6,2,-9,2,-4,9,6,-8,7,7],[-4,-1,9,10,-5,8,9,-1,-8,4],[-2,1,-2,8,-6,9,4,-7,-5,-1],[-10,-4,-1,-7,8,1,6,-7,3,-10],[-2,1,9,1,6,6,2,-9,5,-4],[-9,2,-8,-6,6,-2,-4,-6,-2,9],[-8,-6,-5,5,-10,2,3,5,-4,-2],[4,1,-6,3,2,6,6,-2,8,10],[6,9,5,1,-4,2,-9,-8,-7,-3],[-2,1,-4,9,-2,-1,-1,8,-4,-7],[-5,8,1,-9,4,7,2,4,-3,-9],[3,3,-10,-4,-1,-5,-10,-10,-9,-9],[-10,1,-4,-7,9,4,-6,8,10,-4]],[[-2,7,2,-3,6,-3,8,-8,8,-3],[-1,-1,-4,5,-2,4,8,8,-1,-10],[-4,-5,7,-7,1,2,-7,-3,3,-4],[8,10,1,7,-8,-1,10,-7,3,1],[-5,8,-9,4,10,8,-6,-4,-6,-1],[8,9,1,-6,-9,8,4,-6,8,7],[-8,6,5,2,-10,8,-6,5,-2,-2],[10,2,6,6,-10,2,8,-1,-7,-6],[6,5,10,9,-1,-2,-9,-4,4,10],[1,-1,1,3,5,-7,5,2,9,9],[2,-10,8,9,4,-8,-5,-7,1,6],[-1,-8,2,4,-3,3,4,8,9,-4],[7,9,2,-8,-6,-10,7,3,-10,-3]],[[8,8,-1,-4,4,-3,-3,-2,-6,10],[7,7,10,3,7,-2,-10,-8,7,-1],[-3,3,-5,-1,-5,3,10,6,-1,9],[3,-4,-4,-5,-4,3,9,3,10,6],[-2,-9,-10,2,4,-9,5,-1,4,1],[2,-7,-1,-6,-2,-8,3,9,-4,3],[4,-4,-3,-7,1,-7,3,4,4,-5],[-4,3,2,-9,2,-2,-3,-5,-1,5],[10,5,-6,7,8,-6,-5,-10,-8,-1],[10,-7,10,-1,-4,-5,8,10,-8,4],[9,8,9,-8,6,9,5,-1,8,9],[10,-8,3,-4,3,5,-10,-5,-3,-7],[-4,-7,4,5,-1,6,8,2,2,-10]],[[-6,8,-10,-4,-7,1,9,2,5,-7],[-2,10,9,-1,7,-9,-6,10,1,10],[7,1,1,-1,-1,-7,-3,4,8,-6],[-7,-10,3,1,-4,-2,-6,8,8,-8],[-8,-5,9,-5,-5,3,-6,-4,-3,-3],[-10,9,-9,5,-6,8,5,7,3,2],[4,7,-8,-9,8,9,10,-3,-5,-8],[-1,-5,10,-2,-3,-8,-2,7,7,-3],[1,-4,10,-9,6,-5,4,5,3,4],[4,5,8,-9,9,2,4,10,-5,-8],[-4,8,-5,1,-10,4,-6,3,-10,-1],[-2,10,10,9,-8,-6,10,-2,7,-2],[6,-3,4,6,-6,-6,1,4,5,7]],[[-2,8,7,8,-1,10,-8,-10,9,-8],[-5,5,10,7,5,-1,-9,1,-8,9],[-9,7,-6,-10,4,-1,-4,-7,8,-2],[-10,-9,3,-4,-9,10,-5,-7,-5,5],[-7,-10,-3,-7,-3,-3,3,1,-4,-9],[-1,2,6,-9,8,-2,-10,-6,-1,5],[4,-6,-2,5,5,10,2,2,-3,1],[-4,-4,7,-1,-5,-2,-4,7,9,-1],[-7,10,5,7,4,-7,9,5,3,6],[-2,-8,9,2,9,-2,-6,-6,-4,-7],[1,7,7,-7,9,10,-2,-8,6,-8],[-3,3,-1,-8,-2,-3,1,2,-1,-8],[-10,2,9,-2,-9,-9,-1,2,1,-6]],[[9,5,-7,-7,6,1,-6,-10,2,-9],[2,-5,-2,4,-9,8,8,-9,2,5],[1,-8,6,1,9,1,10,4,-3,5],[7,-1,9,-1,-5,-1,-10,-5,-4,-8],[-8,6,-3,8,-9,9,8,-2,-9,6],[-9,2,5,-10,6,1,7,2,8,-5],[4,-4,3,9,-10,7,1,9,-7,-4],[6,-6,5,-2,-9,3,-4,-6,-4,10],[10,-1,7,9,-10,-4,10,-1,8,-9],[4,-10,8,7,1,-6,-5,3,9,-3],[-7,-9,-8,4,-8,5,-7,-2,1,9],[-5,4,-1,9,1,9,10,4,10,6],[-3,10,5,4,-9,9,-7,-3,2,-8]],[[-7,-10,7,-7,-4,-5,-3,6,6,4],[-5,1,-4,10,-10,8,7,4,-3,-9],[3,5,-8,2,3,1,-8,1,7,-7],[-2,-4,-4,1,1,-8,5,-10,4,-8],[9,6,2,-9,-1,-7,3,1,2,-7],[-5,7,8,-4,-1,-1,2,6,-7,2],[-1,-2,-10,4,-7,5,7,4,9,-10],[-2,9,-8,-9,-9,-4,2,7,-1,4],[-3,1,-10,7,-5,-8,-8,5,1,5],[-7,-2,-7,2,9,5,6,-4,-3,6],[10,8,-2,-5,9,4,-9,6,5,-1],[8,10,3,2,7,-7,3,-4,-8,-9],[9,4,2,-3,10,3,3,1,9,4]],[[-3,-10,8,-5,-3,5,8,9,9,-6],[7,6,5,5,-5,8,2,6,4,-6],[6,8,-1,5,-8,-9,-4,-6,-6,-1],[-4,1,-10,5,10,8,5,1,2,5],[1,-6,3,-2,-5,-2,-5,-4,-9,7],[-2,-5,-1,-4,6,-3,-7,10,1,9],[-6,-2,1,5,6,-9,-7,7,3,-10],[-3,4,4,-10,-7,-10,9,5,9,-1],[-2,-3,-5,8,4,-6,3,-8,5,1],[-6,-6,-6,-6,3,-1,-8,-5,-7,-2],[2,-9,-10,-9,5,-9,-2,6,8,-4],[9,-5,10,-9,-4,9,9,-9,4,-5],[10,8,9,-2,7,-7,9,-3,-3,-7]],[[5,2,-3,4,1,-6,3,4,9,-10],[-10,-3,8,-10,-10,7,5,1,10,-5],[7,1,7,-2,1,-5,9,-2,5,8],[-10,-1,4,-1,9,3,-1,-4,2,-7],[9,6,3,5,-9,-3,7,2,-8,-4],[-2,1,-5,-2,-2,-2,4,-7,5,2],[4,-2,1,-2,10,-4,-7,4,1,-1],[-6,3,10,-6,1,-10,5,-6,8,5],[-4,-8,5,2,-9,-8,5,-4,1,-1],[-10,-7,-3,-1,-1,-8,-7,-5,-2,10],[-10,-8,-2,-10,-2,7,-2,-7,9,7],[-6,6,-5,8,10,9,-10,4,9,7],[7,-3,10,3,10,1,4,7,-10,7]],[[5,-9,10,7,9,1,9,4,-6,3],[4,-1,-3,8,-5,3,-10,7,8,-9],[9,5,-8,9,4,1,6,-6,10,2],[10,7,10,10,-7,6,-1,-6,-8,2],[-9,-9,4,-3,3,10,-3,-3,-9,10],[2,-4,7,-1,-4,-6,-7,-7,-2,5],[-10,-9,2,-5,-5,-8,10,-9,1,1],[-4,-8,2,1,-8,1,3,-10,-2,-7],[9,-3,9,-8,-3,-8,6,7,1,-3],[-6,8,4,6,2,-4,-1,4,10,-2],[10,9,6,-3,-8,10,1,-5,6,5],[-5,1,-8,7,6,5,9,-4,-2,4],[5,3,-9,-3,10,-3,6,10,-10,4]]], dtype = "int64")#candidate|4361|(16, 13, 10)|const|int64
bop_4362 = relay.add(var_4360.astype('int64'), relay.reshape(const_4361.astype('int64'), relay.shape_of(var_4360))) # shape=(16, 13, 10)
func_3794_call = mod.get_global_var('func_3794')
func_3798_call = mutated_mod.get_global_var('func_3798')
var_4388 = relay.var("var_4388", dtype = "float64", shape = (128,))#candidate|4388|(128,)|var|float64
var_4389 = relay.var("var_4389", dtype = "float32", shape = (880,))#candidate|4389|(880,)|var|float32
call_4387 = relay.TupleGetItem(func_3794_call(relay.reshape(var_4388.astype('float64'), [8, 16]), relay.reshape(var_4389.astype('float32'), [10, 8, 11]), ), 2)
call_4390 = relay.TupleGetItem(func_3798_call(relay.reshape(var_4388.astype('float64'), [8, 16]), relay.reshape(var_4389.astype('float32'), [10, 8, 11]), ), 2)
var_4402 = relay.var("var_4402", dtype = "int64", shape = (16, 13, 10))#candidate|4402|(16, 13, 10)|var|int64
bop_4403 = relay.mod(const_4361.astype('float32'), relay.reshape(var_4402.astype('float32'), relay.shape_of(const_4361))) # shape=(16, 13, 10)
func_2819_call = mod.get_global_var('func_2819')
func_2820_call = mutated_mod.get_global_var('func_2820')
call_4406 = func_2819_call()
call_4407 = func_2819_call()
output = relay.Tuple([bop_4362,call_4387,var_4388,var_4389,bop_4403,call_4406,])
output2 = relay.Tuple([bop_4362,call_4390,var_4388,var_4389,bop_4403,call_4407,])
func_4408 = relay.Function([var_4360,var_4388,var_4389,var_4402,], output)
mod['func_4408'] = func_4408
mod = relay.transform.InferType()(mod)
var_4409 = relay.var("var_4409", dtype = "int64", shape = (16, 13, 10))#candidate|4409|(16, 13, 10)|var|int64
var_4410 = relay.var("var_4410", dtype = "float64", shape = (128,))#candidate|4410|(128,)|var|float64
var_4411 = relay.var("var_4411", dtype = "float32", shape = (880,))#candidate|4411|(880,)|var|float32
var_4412 = relay.var("var_4412", dtype = "int64", shape = (16, 13, 10))#candidate|4412|(16, 13, 10)|var|int64
output = func_4408(var_4409,var_4410,var_4411,var_4412,)
func_4413 = relay.Function([var_4409,var_4410,var_4411,var_4412,], output)
mutated_mod['func_4413'] = func_4413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2819_call = mod.get_global_var('func_2819')
func_2820_call = mutated_mod.get_global_var('func_2820')
call_4430 = func_2819_call()
call_4431 = func_2819_call()
func_159_call = mod.get_global_var('func_159')
func_162_call = mutated_mod.get_global_var('func_162')
var_4442 = relay.var("var_4442", dtype = "float32", shape = (1, 55))#candidate|4442|(1, 55)|var|float32
const_4443 = relay.const([6.999111,4.424029,2.212125,2.035151,7.096573,-0.546770,8.623204,7.669906,7.797561,9.669971,-4.737280,-2.675358,-4.718718,-0.432141,-3.776672,-1.270134,-5.610612,-1.151268,4.002963,-6.177698,6.191344,7.162982,5.728420,-6.803937,0.666865,-6.344927,-2.231463,2.876680,9.631178,-4.996112,3.552555,3.783111,-0.627168,-5.134272,7.601635,-2.965105,8.660045,-6.116766,8.334478,5.259264,-7.821912,-5.276509,-6.318582,2.810381,4.625004,5.505532,2.093235,-2.420985,7.047002,8.338712,2.315942,1.244288,7.801329,-6.218719,-0.988341,-5.718815,3.565809,7.806883,-1.190672,-7.730058,-4.163989,-2.379841,-6.329166,-5.070158,5.480661,2.916024,7.070835,-0.271067,-7.273548,8.129083,-2.277369,0.227146,9.405797,-3.486486,-9.642955,5.680312,-3.377161,-7.215514,7.059061,-3.634988,-0.348896,4.079105,-2.211948,6.134897,-5.484686,-7.511916,-5.701699,0.279363,-0.995247,2.212579,-9.680494,-6.037439,-3.346945,9.270368,6.011830,2.682586,1.343403,3.227574,-4.076839,-0.288350,-0.117208,0.054878,5.076590,-7.152532,-7.239138,-6.000099,-6.025186,-1.498970,9.864672,-0.948338,5.336014,-8.447813,2.212030,8.864697,-5.965478,-1.776081,-4.033296,2.398059,-1.689983,6.808639,7.086458,8.803406,-2.848849,3.269058,-1.170695,-4.541558,8.625244,-7.357210,3.406952,-2.355419,-0.851623,-3.422340,-0.231441,-3.254368,6.860108,-9.066862,7.563727,-5.704535,0.260144,2.356437,-8.573481,1.942943,-5.960847,-2.054025,7.352854,-1.732609,8.692254,-9.904337,-9.387012,0.318874,4.664808,1.422986,2.288530,-6.283020,8.609910,-2.863504,-8.612578,3.352263,-8.978756,-5.823546,-7.868446,9.083114,8.309731,9.256908,-2.006186,8.748337,-9.645818,-3.789326,-9.669070,-8.348070,-6.817978,0.394938,5.047047,0.699870,-9.901962,0.726966,-9.119218,7.216318,6.044253,-5.086399,9.047323,3.970302,-2.426597,7.995987,-2.925788,-6.682264,6.422126,8.798407,-1.128474,-6.885404,-5.858346,9.656151,-0.623472,-3.420749,0.117228,3.470273,-5.750335,4.834309,-9.515346,-6.589742,-6.149854,0.544975,-5.452483,-0.232574,7.271931,-8.441492,7.504720,0.454632,-5.906323,7.277841,-5.195114,-1.742808,2.824830,7.633605,-2.690820,-0.431900,-5.639365,-7.505951,7.134817,7.489733,5.894696,-4.722779,1.448659,-5.275426,-4.950493,6.822616,-7.754413,7.653022,1.130995,9.887809,-5.550939,0.971428,3.074792,-7.455239,-8.159411,-1.974954,1.567214,-0.358138,-6.656239,-1.954072,-7.819089,1.592781,3.821553,-5.928857,8.041400,-8.165152,-1.723595,-6.662928,-7.768438,-5.375554,-7.163227,-7.280894,1.924501,-1.790855,-6.177145,-5.796806,-7.457919,4.346472,5.428636,6.328439,-5.921557,-2.421767,9.363904,-6.007484,5.497942,-0.416332,6.758405,3.038701,-1.299200,-1.007092,-2.229330,1.754119,-1.352002,-6.689287,0.980224,-7.020318,-7.207968,-4.787606,8.706420,4.577204,6.180628,-1.250105,-4.424748,8.478924,9.615234,5.977266,3.672848,3.108248,-5.485732,0.957204,3.728835,7.141242,-4.579351,7.956917,-9.038405,1.590608,-6.480154,9.698268,6.769616,9.424110,-6.581066,9.436721,-1.690350,-7.118343,-4.439700,-8.051966,7.970062,9.288511,8.874966,-1.373661,6.319313,4.782577,8.816496,1.076305,3.836827,-2.031541,5.719152,6.271885,-5.484355,-7.804765,3.245678,-3.904021,-4.050928,9.984820,-8.511533,-1.546968,2.105644,2.245328,-9.378705,2.520136,-8.653082,9.559327,0.147871,7.572624,-9.682293,3.948792,-1.482452,3.613736,9.338009,-1.596408,-1.308349,-1.376122,-4.923201,-2.638873,-6.848749,-8.360596,2.887904,-8.921673,8.762006,-6.271900,-6.250671,5.149871,0.919857,4.337340,4.866348,-7.929248,-6.762975,4.257674,3.119525,5.274272,-0.495005,-7.730592,-2.632013,-2.391773,-7.972106,9.119705,-2.538732,3.192196,3.249930,5.968686,-7.299949,-8.403702,-3.720515,4.292356,-9.272011,6.034355,-9.060974,-2.569049,-1.575882,-0.533587,-1.086643,9.037145,0.227640,-8.314200,-1.036515,0.287139,-8.255843,0.603210,-5.494157,-5.600434,-9.666223,8.908696,4.311014,5.467197,-6.989524,-6.678209,0.868121,-2.777221,-9.179127,-7.018716,-7.704826,0.092072,3.803931,6.965608,2.510620,-3.142891,3.817203,-1.696403,-3.382892,-2.149617,-6.153324,2.994129,5.664930,-3.097205,-8.274989,-6.397831,-7.949402,0.311713,-8.801496,9.027038,-2.101354,7.520996,6.745075,-6.723571,8.033110,1.356676,8.654543,-8.634892,-3.515806,-8.948018,8.423769,1.571506,-8.307103,5.768010,9.294657,-7.454130,6.709730,7.171244,-1.187341,-3.044831,-2.545156,0.283262,-2.772051,-0.851065,-6.266324,3.101999,4.688920,8.013669,-8.949488,8.871091,-8.149129,4.586600,1.548574,-8.304916,3.882298,-8.736619,-0.707692,1.585582,1.730121,3.931482,4.622687,7.115481,5.553242,-4.602380,5.293057,5.237125,-4.597043,3.223304,2.767236,5.872401,-5.907003,9.882656,9.531638,6.752883,-4.020323,-7.340450,-4.315272,3.957670,-1.520338,2.443955,4.739334,4.204955,9.872416,8.797175,7.387896,0.322354,-9.501235,-0.625125,-8.959912,-4.617877,9.844369,-3.965500,-5.508147,7.469553,0.505375,4.049789,-0.485291,-3.295631,0.519613,-5.187823,-7.260207,5.758750,-3.977659,-4.893506,9.638032,-5.243198,9.035193,-9.383542,-4.168775,7.714259,-7.823512,-1.555798,9.975114,4.540575,-6.626055,5.601060,4.895266,-1.467628,2.286625,-5.976004,7.422805,7.505850,5.919664,0.948431,0.257221,-6.942763,0.151885,-7.580669,5.737179,0.907295,-1.701757,8.196889,7.593918,1.071323,-4.137871,-6.465344,-4.101727,3.002530,0.408369,3.196891,3.644049,7.669323,-1.738809,7.893391,6.751745,-0.166428,-7.280900,0.593711,3.235604,-4.684932], dtype = "float32")#candidate|4443|(550,)|const|float32
call_4441 = relay.TupleGetItem(func_159_call(relay.reshape(var_4442.astype('float32'), [11, 1, 5]), relay.reshape(const_4443.astype('float32'), [11, 10, 5]), ), 1)
call_4444 = relay.TupleGetItem(func_162_call(relay.reshape(var_4442.astype('float32'), [11, 1, 5]), relay.reshape(const_4443.astype('float32'), [11, 10, 5]), ), 1)
output = relay.Tuple([call_4430,call_4441,var_4442,const_4443,])
output2 = relay.Tuple([call_4431,call_4444,var_4442,const_4443,])
func_4453 = relay.Function([var_4442,], output)
mod['func_4453'] = func_4453
mod = relay.transform.InferType()(mod)
var_4454 = relay.var("var_4454", dtype = "float32", shape = (1, 55))#candidate|4454|(1, 55)|var|float32
output = func_4453(var_4454)
func_4455 = relay.Function([var_4454], output)
mutated_mod['func_4455'] = func_4455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4489 = relay.var("var_4489", dtype = "uint32", shape = ())#candidate|4489|()|var|uint32
const_4490 = relay.const([[[5,-6,-4,2,5,-3,-6,-1,-4],[5,8,5,2,-6,2,-4,9,-7],[-9,9,9,-8,-3,-7,3,2,8],[7,-7,-10,-2,5,-4,-6,-1,6],[7,5,4,8,-4,1,8,-9,-10],[-3,3,6,10,8,-5,3,2,-5],[-10,8,-5,-3,8,7,2,10,10],[1,-6,-3,-7,6,-4,8,3,-5]],[[4,1,-9,7,10,7,3,-10,-8],[1,-9,5,-9,-5,-6,3,8,1],[4,-1,7,-4,5,-1,-9,6,-3],[-1,-1,-5,9,-8,-3,6,-9,2],[2,-8,4,-10,6,-2,7,9,2],[-7,-3,-7,6,-4,8,-10,-3,-9],[-10,1,7,2,7,-3,7,-9,7],[-7,-9,7,-8,-10,-7,-10,-10,-10]],[[-4,-10,-6,-1,3,5,8,-2,-4],[4,7,-3,-7,-1,3,3,-6,10],[5,6,1,-9,-3,6,1,-7,6],[-3,4,1,7,-5,-8,-4,-6,1],[2,-6,1,10,2,2,-9,2,-9],[1,6,1,-2,-6,-5,-6,9,2],[2,3,9,-3,-10,-2,-7,-7,8],[8,2,8,3,6,6,3,10,-3]],[[1,9,-8,-2,-3,-9,-6,-3,-10],[-8,7,-4,-2,2,-3,2,10,7],[2,2,-8,-6,-7,-3,-10,-10,6],[9,-1,9,5,-1,-3,-2,6,10],[-8,-8,-7,-1,-3,5,5,7,-6],[-3,8,-7,-10,5,6,2,6,-8],[3,2,-10,-5,-3,-2,-9,-2,-7],[-7,10,5,-1,-10,8,-10,7,9]],[[10,-2,-6,-2,9,3,6,5,4],[-4,8,4,3,-9,7,-6,1,10],[4,4,9,-9,7,-1,-5,-8,10],[-9,7,1,-5,10,7,-5,3,4],[5,7,9,-5,-4,9,6,-6,7],[6,6,-8,-8,-6,2,-3,5,-9],[7,-9,6,4,8,-4,7,7,-7],[-8,9,6,-4,-8,-8,-3,10,5]],[[-2,9,-8,2,-4,9,-3,-4,1],[-4,8,5,-9,-10,-2,7,5,3],[1,-1,4,4,-8,-4,10,-5,-9],[6,-9,-9,3,-5,3,6,-3,9],[-6,9,-5,3,10,-6,6,-7,8],[6,-3,4,6,2,-4,1,5,-3],[2,8,4,8,-5,5,-2,-7,-1],[-5,-8,8,-9,3,8,6,4,9]],[[5,-9,6,-4,-6,-7,1,-4,10],[-2,-1,-5,-2,9,3,5,-9,10],[10,-6,-6,-1,-3,-7,-7,2,-5],[6,-7,7,-5,10,7,-9,-4,5],[-6,-9,1,3,-7,7,3,-3,-10],[-10,1,1,8,8,5,-3,10,-3],[8,-1,3,10,3,8,-2,-10,-8],[4,1,9,-5,-8,-4,8,-6,-10]],[[-8,9,-4,7,-5,10,10,-9,-7],[-6,1,-7,-4,9,-3,1,7,-3],[6,8,8,3,1,-8,10,-1,9],[-4,-3,3,1,-5,5,-1,9,2],[-7,-5,7,-9,7,-8,7,9,6],[-6,-9,7,-3,5,-8,-1,-4,-5],[10,-9,-3,-3,-10,2,6,3,1],[9,10,5,-3,-3,3,-9,2,-9]],[[-7,-7,7,-3,7,8,7,3,-1],[7,7,2,-8,4,-1,6,7,6],[-3,9,-6,10,-2,3,3,9,10],[1,-2,-1,-8,-10,-10,-1,7,3],[-6,-9,7,-6,-3,-10,4,-4,-8],[1,2,3,8,-5,5,-10,-2,-3],[-2,7,4,10,-3,-6,1,-7,9],[-5,5,3,9,-2,10,-9,-4,10]]], dtype = "uint32")#candidate|4490|(9, 8, 9)|const|uint32
bop_4491 = relay.maximum(var_4489.astype('uint32'), const_4490.astype('uint32')) # shape=(9, 8, 9)
func_2578_call = mod.get_global_var('func_2578')
func_2582_call = mutated_mod.get_global_var('func_2582')
var_4497 = relay.var("var_4497", dtype = "float64", shape = (3, 234))#candidate|4497|(3, 234)|var|float64
const_4498 = relay.const([[6.002797,-7.824982,6.079201,-0.252870,9.327346,9.929842,-3.383357,-2.340888,-0.159050,-6.771355,0.793867,-2.750816],[-1.801443,-5.865964,4.681475,7.511693,-4.900174,8.840116,9.045614,8.659408,7.844359,-4.985933,5.354124,5.110164],[9.204670,-4.524265,-1.313171,1.520250,7.964895,4.298373,8.613771,4.282142,-6.242826,-5.536819,-4.580686,2.958701],[-5.146586,3.108562,-2.412452,0.340475,-8.713932,-8.332619,-6.534108,8.119276,9.238371,7.781852,3.713240,-8.884133],[1.227884,-4.038927,-3.232965,3.156962,9.658451,-7.369478,7.338587,8.285374,-8.559800,-7.432557,8.980910,-7.744245],[0.110614,-7.821188,-4.075746,-1.514959,7.711890,0.801472,-4.959091,-1.577096,7.150915,7.584020,-8.892043,-8.535684],[-4.969932,-3.297145,-7.156681,9.960975,-8.069957,4.955590,-4.122572,-5.786843,-3.339647,-9.543788,-4.354122,-0.826582],[2.100206,5.951426,-9.496496,-6.121173,-4.747470,3.581502,7.694972,-3.020761,-8.355015,-4.390312,-3.781131,-1.296457],[-8.824966,4.795482,6.074587,-0.950553,-1.177578,-7.057355,7.756978,3.297957,3.253568,5.924831,5.931030,-8.140495],[7.679046,8.926483,7.386426,-4.568928,-3.995170,4.356756,4.136645,-8.774377,9.652030,-8.437634,-9.299624,-4.689878],[-2.336580,-9.385580,-7.771061,1.125067,-5.216372,3.662343,-1.129890,5.252089,4.753991,-7.289443,2.187929,-0.538463],[-4.930522,4.440573,6.431992,-7.995803,4.568238,5.570923,-0.381256,1.921704,0.480359,-8.201375,-1.332115,-0.398518],[-8.300749,-2.445784,-7.638312,-4.575446,-4.494290,7.187628,-4.751119,2.642204,-2.461106,7.620984,-2.564886,5.120938],[1.577877,9.133226,-8.673112,6.288114,9.211865,-9.401394,4.056587,-0.559953,-2.588230,4.469824,7.256767,6.328263],[3.461508,-2.026808,9.062330,-9.748088,-6.143239,1.477296,8.630875,0.926807,-2.441872,-5.077498,8.519326,7.989998],[-6.651529,-7.813756,-3.167518,-0.003618,-0.520620,6.928753,-0.103981,-4.655593,1.531702,3.362254,-5.338779,5.732580],[-5.443921,-8.111826,-8.406061,-3.085547,-8.997586,2.282841,-2.819440,2.961632,-0.810042,-2.644240,-5.044763,7.063986],[-2.688676,-8.397473,-6.231103,-9.191651,-1.612308,-5.225443,-5.687549,6.734137,4.303218,3.127385,-1.962340,-2.694780],[4.228753,-0.774771,0.170016,-8.865237,-2.040758,-9.544435,-5.736965,-6.770451,-4.454270,-8.448873,6.836971,6.122870],[-8.413816,-1.112523,4.420938,5.255698,9.058139,-1.253793,-7.893131,4.835410,-4.123300,7.073061,-7.101933,1.731732],[-9.380118,8.610150,8.919729,-8.798250,-8.460546,8.848870,5.940422,-6.863607,-2.151475,6.951688,9.993316,9.968531],[-7.762218,3.772073,-0.404459,9.478200,-8.784219,-4.762806,-9.572087,3.095256,7.569058,-6.432091,2.768166,-2.688758],[-0.282155,-6.826982,-0.892748,1.705863,-1.602114,8.258840,2.598639,3.311745,9.999208,7.028948,-9.602977,-9.595252],[7.703515,-9.904250,-7.518103,-5.644594,-1.246379,-8.211612,9.403188,-8.952211,-4.754038,-4.379028,-2.771475,1.340788],[-1.398218,6.770062,4.626891,-8.660284,7.390937,-0.952005,2.819889,-5.971035,7.377710,-3.045033,-6.923703,5.538644],[-8.160345,-9.841059,8.089339,7.185243,-8.555766,4.423346,-6.031471,3.170227,-7.730857,6.117097,-1.557892,-6.269831],[8.954975,-2.639865,1.888261,-3.181396,-5.754365,-2.306715,2.676760,4.881037,1.441548,0.641045,-9.352754,7.717790],[-1.375093,7.227977,-6.453890,6.494476,-6.278910,0.295457,2.689037,-2.821008,-1.354541,5.990370,-2.441539,3.240945],[7.652736,4.263960,5.744275,5.812073,-2.221802,1.956932,-8.601913,-1.827177,-6.112155,-9.403411,0.191993,0.891826],[8.191252,2.475280,0.561419,4.932713,-1.671446,7.545185,3.033632,6.594979,9.036134,-7.469864,0.661142,-7.101790],[-1.272843,1.733535,6.845455,9.637370,-6.496817,-1.357604,-9.624960,-3.369923,6.994736,-1.405063,-6.018158,-4.942572],[-3.686817,9.318907,3.520770,-0.529486,-8.432346,2.617563,-4.281509,7.239275,-1.692894,9.771786,9.577292,4.932324],[4.821471,-8.566520,8.582516,0.912867,3.041265,-6.180585,-2.015130,8.291912,-7.250030,3.763333,0.217588,7.769299],[-8.566212,-7.554076,3.952604,-5.544760,-3.002276,-6.185141,6.312905,2.533672,0.462062,9.134977,-6.670695,-7.372271],[-0.711564,-4.666217,-5.583409,0.315796,-2.676164,2.360548,2.976338,-9.463947,-9.967829,5.212715,-8.651101,-3.520684],[-8.610719,6.489235,-8.666030,-3.953944,5.299298,0.778744,-2.632579,4.621201,-4.683490,-3.613257,-1.744581,9.473858],[-7.792534,0.086150,-1.196948,-4.961116,4.518701,2.275457,2.735469,-8.803207,-0.172871,3.170145,-3.042752,7.431304],[7.903546,-4.076633,-6.386273,-5.649934,7.781143,4.003515,6.336664,-7.695258,-4.089009,4.788568,1.448187,-4.452110],[4.692569,6.369897,-6.616842,-5.599942,-3.360453,-9.699713,9.006428,3.792503,-7.476848,-7.707889,-9.272549,-8.356998],[-5.435691,3.457173,-6.794915,-5.772115,2.082675,0.925583,-0.762250,0.950545,3.944225,-1.976421,-9.445795,0.858269],[-1.218795,-0.416032,-6.968775,1.939892,-1.401708,6.835281,3.480084,-6.871903,2.971881,-7.371643,-2.680159,-5.822731],[8.022823,-4.969964,2.382988,-7.157057,9.364419,-4.293292,-1.810709,-4.632680,-3.677808,5.806603,3.119180,-3.273892],[9.124640,7.237964,-3.032848,6.887477,-0.359384,8.594633,8.018948,2.752555,6.616555,5.263918,-0.901443,-5.195890],[2.111694,-3.178038,-8.432894,7.418000,1.514829,7.339924,-8.245809,-9.715463,-2.328680,-0.329258,0.103869,-6.140379],[-6.809875,-1.990508,1.385928,7.345522,-9.157901,-3.743053,1.382164,7.345005,-8.178647,-7.032418,3.221419,4.124860],[4.446366,-4.040063,1.701514,9.232856,-8.622905,-7.768937,-4.587468,-3.314461,4.715858,4.452985,-5.435308,-2.536114],[2.392791,6.039076,8.907865,-1.649396,8.335970,4.822961,3.599419,-5.009205,6.877280,-2.532248,-0.695776,-3.968228],[6.703573,-6.648579,-7.896420,-0.242664,-2.126628,4.200397,-3.448405,-1.089917,-4.041093,-3.921153,-3.742392,3.569175],[-8.658642,9.538469,-3.511650,-7.867253,-4.871929,0.737695,7.759902,-7.894901,3.860077,0.862494,-4.229993,1.367108],[-0.205027,-2.388757,-4.166340,-0.963610,7.212515,-4.123947,7.414001,4.913865,2.595646,6.261158,-2.004100,-7.525943],[5.759022,9.429720,3.457876,-5.391720,8.371017,-1.367806,-6.243593,-5.445062,9.453076,4.548956,1.264915,-7.648723],[0.939570,-3.207887,2.241268,1.714055,-5.514247,-6.925818,-2.890069,5.166186,-3.691682,0.201936,-5.257915,-0.467464],[-4.055157,8.698942,7.390518,3.244237,7.535341,-5.841765,-0.694900,8.494997,8.558309,5.666825,-7.306499,3.537086],[-8.937169,6.745660,-7.245228,-8.748164,8.865196,-8.876747,3.904642,2.953786,8.300338,-0.747986,8.760101,7.903480],[1.730211,-4.011298,0.094445,-4.762667,6.025374,9.936336,-1.092434,-6.356083,5.776027,-2.968703,-5.394346,4.367309],[5.625376,-1.579321,5.722154,6.495553,-8.104509,-5.287741,9.319236,6.841711,-9.798046,-1.719872,8.935674,-2.429499],[-7.102301,6.846800,-5.941679,-9.114333,-8.034890,-1.076123,-8.765483,9.491082,-5.459790,5.343621,-5.396047,-6.320999],[8.529696,8.936229,2.137508,5.737929,-1.420025,3.468187,8.480951,1.388042,-6.297843,0.746903,2.783795,9.049182],[-0.202561,-2.506559,0.628652,0.749546,9.636438,2.574286,-6.119491,-3.583209,-1.905602,1.186419,-8.050749,2.568580],[-1.348842,5.636185,2.931873,9.331230,4.482594,6.325342,-6.196049,1.420521,1.513416,2.347866,7.586015,7.186208],[8.934959,1.863996,0.241607,-8.649047,6.093744,5.474391,-7.177384,-9.849037,-7.667621,-4.710208,-4.825801,0.537603],[7.052895,1.767390,-2.089224,-1.075026,2.770867,0.479747,-4.679112,4.514469,-9.639411,4.697857,0.717638,-3.126267],[6.635107,5.362186,5.088964,5.178099,0.025168,2.587947,1.160550,8.411315,-0.176738,0.738853,-8.650209,-8.860773],[-6.372623,6.868065,-4.966184,5.916752,-1.734229,7.232811,3.871009,-3.351011,-8.822535,5.822867,7.370248,-7.046240],[0.227324,2.449723,-1.287871,-7.086608,2.115077,5.405327,-8.863778,0.730142,0.859272,-6.095533,8.587717,2.817596],[-3.474306,-8.217723,0.026951,1.954041,-5.728774,-5.644729,0.983681,0.165607,-7.916202,-0.176333,-0.281348,0.325892],[-4.979185,-1.957612,5.208831,9.344632,-4.100756,1.611191,9.996450,7.743088,9.095277,-4.400772,-3.490113,9.714301],[-6.532407,5.057726,0.033568,-9.785754,-0.282488,-1.857057,-8.528056,-5.935096,0.913907,-4.858763,-4.298159,-7.010192],[6.684678,-2.026320,0.052146,-7.509601,1.505535,-8.419322,7.970367,9.090342,9.199724,0.530621,5.372593,3.553470],[1.325082,9.728059,4.084595,-9.543890,3.250485,-3.455190,-6.160539,-8.010034,4.254657,9.165849,-3.789613,-7.459775],[-3.625811,2.669130,7.700687,-2.615785,6.482960,2.250506,0.512468,0.567124,-7.761328,1.811913,9.798827,2.085652],[-9.868837,1.241459,1.678241,0.533331,0.441551,3.792293,4.332828,3.541673,-7.121459,3.752291,-9.979219,-5.786490],[-3.710310,-5.554686,9.495192,-7.876533,-1.168907,-3.590850,-5.852318,1.464753,7.642482,-2.613125,-6.383712,1.308248],[-6.029478,-4.857869,8.381964,-1.167179,7.717099,4.441141,-3.220584,-2.518261,6.736004,-1.339009,-6.128741,7.040795],[-8.253965,-8.620897,-1.736756,4.167639,-6.370343,0.560784,-3.351863,-1.650544,-5.309268,1.168508,3.166893,4.223416],[-8.884589,-6.938612,8.578812,-0.203636,-9.245893,-0.644431,-4.714956,2.935905,-6.109774,1.075703,-5.832939,-3.361014],[8.219388,3.266216,3.489083,-2.017994,-3.172992,6.633629,-7.909232,-6.175657,-1.355959,7.298051,-7.996518,-3.775882],[-2.237513,-0.373218,4.735991,3.419683,-5.790078,9.742503,-5.539630,8.141823,6.076259,-6.638177,2.779503,-4.878962],[-8.139731,-6.977704,-7.528469,3.495451,-5.111696,-5.830059,-2.242102,0.113207,-5.318254,-0.207985,-9.386027,-8.044583],[-7.087046,4.424292,6.702810,-3.066365,-3.477237,-8.847911,7.231978,8.483439,1.565024,4.294481,9.500078,-3.459423],[4.559835,-5.724095,1.084179,0.228394,-4.142333,6.257687,-4.405594,7.901205,-7.658285,-1.282809,8.108047,-8.105578],[7.696575,-0.442072,-4.808855,-9.276228,5.092536,9.696720,2.812778,3.716113,0.101395,7.825748,-2.776325,-9.635771],[0.976526,-7.435846,-3.170428,3.826631,-2.468361,8.530697,1.880411,-5.134229,-9.137907,4.458948,0.038309,2.468187],[5.330423,-7.992071,5.864980,-0.297020,8.359939,0.069987,5.180167,3.260030,-3.090600,-0.161189,7.970241,3.477607],[-9.250310,1.182941,3.088552,1.103400,-0.815515,-9.923588,-9.034173,-5.280616,9.157329,-5.933212,-5.073500,-0.578776],[-7.437506,-8.076642,7.751419,8.059982,-3.706679,1.081891,-6.616666,-4.066754,6.930076,-7.987559,-2.489786,1.130626],[8.461945,-9.403281,-0.179456,-3.491250,-9.906664,-0.437993,-3.204979,9.877991,-2.413192,-1.319503,8.370977,0.104390],[6.545083,2.644239,-1.252699,2.191366,-8.318784,-0.292080,-3.417547,5.104299,2.477908,9.696627,0.381052,2.971838],[8.078464,-6.644103,-4.148418,6.070429,-0.103291,6.566341,-8.099111,-0.655328,7.995084,3.690239,5.858418,-4.447558],[-3.909670,4.125969,-7.965172,7.556228,-1.330461,6.075197,-3.317319,9.701699,1.816372,3.968580,6.169263,-8.113119],[-6.903677,1.719215,-8.922381,0.062115,9.103575,-0.874908,8.111478,8.710851,-3.015249,-3.845452,-0.455993,1.131926],[8.778284,1.216677,-5.751278,7.267332,2.320033,-7.255223,-6.195170,-0.402797,-3.868283,2.977477,-3.006205,-0.256963],[9.557331,8.829814,-6.933679,9.181563,-4.803069,-3.437529,-6.463224,8.214853,-7.881006,8.260822,6.419823,-1.555141],[0.346844,8.655773,6.365569,-8.205163,7.840210,-4.663645,-0.447083,0.166061,-5.578793,8.873631,4.258209,-3.553763],[-6.567787,-3.181523,7.974668,-8.504430,-9.355639,-7.991109,2.153801,7.351746,5.502211,-3.929553,3.705234,-9.585063],[3.958812,4.848045,-6.403139,7.087307,2.509677,0.056570,-5.669830,5.745488,9.796894,-3.999844,-5.154053,9.632222],[8.125864,3.976457,5.239682,-9.646246,5.746587,4.914332,0.773072,6.251662,-4.349315,0.959295,-4.973300,-8.029408],[8.107409,-5.829875,-2.470494,3.836336,1.116474,-2.887253,-0.680456,0.521066,-2.171943,4.136009,2.522646,1.484966],[5.535480,5.688905,3.716260,-2.863025,-3.733298,6.357921,-9.564869,9.768257,2.749450,8.660017,-2.460729,-5.809258],[8.734775,0.568076,-2.840594,0.934749,1.732365,4.690358,-1.932220,5.285153,-8.405583,6.999921,6.955392,-5.123805],[-3.077815,-0.730343,-1.894018,-1.272280,6.972717,3.534683,-9.326462,1.078553,8.787100,-5.930215,-8.271474,-3.928170],[-2.821743,-6.408444,-4.531896,7.839745,-4.724126,-4.681863,-6.524598,-8.015460,-9.202573,1.620113,-0.830065,-4.529579],[6.233173,5.733658,0.498015,-8.976272,6.797078,2.121874,8.824775,3.243692,2.177939,-5.416238,-8.177788,9.652943],[-7.908635,3.219703,6.733269,-3.601413,-5.104343,3.858084,-8.365379,-0.235351,-0.798674,3.696827,-9.800717,8.538605]], dtype = "float32")#candidate|4498|(104, 12)|const|float32
call_4496 = relay.TupleGetItem(func_2578_call(relay.reshape(var_4497.astype('float64'), [6, 13, 9]), relay.reshape(const_4498.astype('float32'), [1248,]), ), 1)
call_4499 = relay.TupleGetItem(func_2582_call(relay.reshape(var_4497.astype('float64'), [6, 13, 9]), relay.reshape(const_4498.astype('float32'), [1248,]), ), 1)
func_3498_call = mod.get_global_var('func_3498')
func_3499_call = mutated_mod.get_global_var('func_3499')
call_4507 = relay.TupleGetItem(func_3498_call(), 0)
call_4508 = relay.TupleGetItem(func_3499_call(), 0)
output = relay.Tuple([bop_4491,call_4496,var_4497,const_4498,call_4507,])
output2 = relay.Tuple([bop_4491,call_4499,var_4497,const_4498,call_4508,])
func_4509 = relay.Function([var_4489,var_4497,], output)
mod['func_4509'] = func_4509
mod = relay.transform.InferType()(mod)
mutated_mod['func_4509'] = func_4509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4509_call = mutated_mod.get_global_var('func_4509')
var_4511 = relay.var("var_4511", dtype = "uint32", shape = ())#candidate|4511|()|var|uint32
var_4512 = relay.var("var_4512", dtype = "float64", shape = (3, 234))#candidate|4512|(3, 234)|var|float64
call_4510 = func_4509_call(var_4511,var_4512,)
output = call_4510
func_4513 = relay.Function([var_4511,var_4512,], output)
mutated_mod['func_4513'] = func_4513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_4588 = relay.TupleGetItem(func_3093_call(), 0)
call_4589 = relay.TupleGetItem(func_3094_call(), 0)
func_4189_call = mod.get_global_var('func_4189')
func_4191_call = mutated_mod.get_global_var('func_4191')
call_4605 = func_4189_call()
call_4606 = func_4189_call()
output = relay.Tuple([call_4588,call_4605,])
output2 = relay.Tuple([call_4589,call_4606,])
func_4611 = relay.Function([], output)
mod['func_4611'] = func_4611
mod = relay.transform.InferType()(mod)
output = func_4611()
func_4612 = relay.Function([], output)
mutated_mod['func_4612'] = func_4612
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4634 = relay.var("var_4634", dtype = "int32", shape = (16, 3, 7))#candidate|4634|(16, 3, 7)|var|int32
var_4635 = relay.var("var_4635", dtype = "int32", shape = (16, 3, 7))#candidate|4635|(16, 3, 7)|var|int32
bop_4636 = relay.right_shift(var_4634.astype('int32'), relay.reshape(var_4635.astype('int32'), relay.shape_of(var_4634))) # shape=(16, 3, 7)
output = bop_4636
output2 = bop_4636
func_4643 = relay.Function([var_4634,var_4635,], output)
mod['func_4643'] = func_4643
mod = relay.transform.InferType()(mod)
var_4644 = relay.var("var_4644", dtype = "int32", shape = (16, 3, 7))#candidate|4644|(16, 3, 7)|var|int32
var_4645 = relay.var("var_4645", dtype = "int32", shape = (16, 3, 7))#candidate|4645|(16, 3, 7)|var|int32
output = func_4643(var_4644,var_4645,)
func_4646 = relay.Function([var_4644,var_4645,], output)
mutated_mod['func_4646'] = func_4646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_4657 = relay.TupleGetItem(func_2417_call(), 1)
call_4658 = relay.TupleGetItem(func_2418_call(), 1)
output = relay.Tuple([call_4657,])
output2 = relay.Tuple([call_4658,])
func_4660 = relay.Function([], output)
mod['func_4660'] = func_4660
mod = relay.transform.InferType()(mod)
output = func_4660()
func_4661 = relay.Function([], output)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_4684 = relay.TupleGetItem(func_3093_call(), 0)
call_4685 = relay.TupleGetItem(func_3094_call(), 0)
func_3641_call = mod.get_global_var('func_3641')
func_3643_call = mutated_mod.get_global_var('func_3643')
call_4700 = func_3641_call()
call_4701 = func_3641_call()
output = relay.Tuple([call_4684,call_4700,])
output2 = relay.Tuple([call_4685,call_4701,])
func_4703 = relay.Function([], output)
mod['func_4703'] = func_4703
mod = relay.transform.InferType()(mod)
mutated_mod['func_4703'] = func_4703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mutated_mod.get_global_var('func_4703')
call_4704 = func_4703_call()
output = call_4704
func_4705 = relay.Function([], output)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3498_call = mod.get_global_var('func_3498')
func_3499_call = mutated_mod.get_global_var('func_3499')
call_4712 = relay.TupleGetItem(func_3498_call(), 0)
call_4713 = relay.TupleGetItem(func_3499_call(), 0)
uop_4718 = relay.asinh(call_4712.astype('float32')) # shape=(10, 8, 11)
uop_4720 = relay.asinh(call_4713.astype('float32')) # shape=(10, 8, 11)
output = uop_4718
output2 = uop_4720
func_4724 = relay.Function([], output)
mod['func_4724'] = func_4724
mod = relay.transform.InferType()(mod)
mutated_mod['func_4724'] = func_4724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4724_call = mutated_mod.get_global_var('func_4724')
call_4725 = func_4724_call()
output = call_4725
func_4726 = relay.Function([], output)
mutated_mod['func_4726'] = func_4726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3641_call = mod.get_global_var('func_3641')
func_3643_call = mutated_mod.get_global_var('func_3643')
call_4765 = func_3641_call()
call_4766 = func_3641_call()
output = call_4765
output2 = call_4766
func_4769 = relay.Function([], output)
mod['func_4769'] = func_4769
mod = relay.transform.InferType()(mod)
output = func_4769()
func_4770 = relay.Function([], output)
mutated_mod['func_4770'] = func_4770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3104_call = mod.get_global_var('func_3104')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_4798 = relay.TupleGetItem(func_3104_call(), 0)
call_4799 = relay.TupleGetItem(func_3106_call(), 0)
output = call_4798
output2 = call_4799
func_4809 = relay.Function([], output)
mod['func_4809'] = func_4809
mod = relay.transform.InferType()(mod)
output = func_4809()
func_4810 = relay.Function([], output)
mutated_mod['func_4810'] = func_4810
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4828 = relay.const([[1.859146,2.748945,0.424777,4.435505,-1.461463,-7.428633],[-9.800783,-8.250128,9.594981,7.457117,5.341508,4.503480],[-9.172623,0.639995,-8.409939,-4.857741,4.798298,-9.336101],[-2.008350,-8.695738,8.807364,4.848587,7.473157,-0.994338],[1.486155,-5.307550,3.031989,-8.350466,7.886786,0.908551],[-0.411056,-5.125414,8.674121,-6.600135,-6.171084,-7.186737],[2.354407,1.767998,8.875421,-7.001234,-6.307939,-8.815316],[-7.126159,0.134707,-3.231802,9.005554,-2.231152,-0.615824],[-0.761855,9.861228,-8.078274,5.806719,0.037658,-7.651566],[-5.878447,-1.295302,-6.540875,-0.667055,8.522733,-9.900935],[-1.636769,-6.608288,5.105034,-7.389185,3.429143,-9.466573],[-9.297821,-2.796552,6.250167,-0.632765,1.865903,-4.044626]], dtype = "float32")#candidate|4828|(12, 6)|const|float32
uop_4829 = relay.cosh(const_4828.astype('float32')) # shape=(12, 6)
output = uop_4829
output2 = uop_4829
func_4835 = relay.Function([], output)
mod['func_4835'] = func_4835
mod = relay.transform.InferType()(mod)
output = func_4835()
func_4836 = relay.Function([], output)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4660_call = mod.get_global_var('func_4660')
func_4661_call = mutated_mod.get_global_var('func_4661')
call_4857 = relay.TupleGetItem(func_4660_call(), 0)
call_4858 = relay.TupleGetItem(func_4661_call(), 0)
output = relay.Tuple([call_4857,])
output2 = relay.Tuple([call_4858,])
func_4898 = relay.Function([], output)
mod['func_4898'] = func_4898
mod = relay.transform.InferType()(mod)
output = func_4898()
func_4899 = relay.Function([], output)
mutated_mod['func_4899'] = func_4899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_4915 = relay.TupleGetItem(func_3666_call(), 0)
call_4916 = relay.TupleGetItem(func_3667_call(), 0)
var_4928 = relay.var("var_4928", dtype = "float32", shape = (10, 8, 11))#candidate|4928|(10, 8, 11)|var|float32
bop_4929 = relay.minimum(call_4915.astype('int64'), relay.reshape(var_4928.astype('int64'), relay.shape_of(call_4915))) # shape=(10, 8, 11)
bop_4932 = relay.minimum(call_4916.astype('int64'), relay.reshape(var_4928.astype('int64'), relay.shape_of(call_4916))) # shape=(10, 8, 11)
func_3794_call = mod.get_global_var('func_3794')
func_3798_call = mutated_mod.get_global_var('func_3798')
var_4950 = relay.var("var_4950", dtype = "float64", shape = (4, 32))#candidate|4950|(4, 32)|var|float64
call_4949 = relay.TupleGetItem(func_3794_call(relay.reshape(var_4950.astype('float64'), [8, 16]), relay.reshape(bop_4929.astype('float32'), [10, 8, 11]), ), 1)
call_4951 = relay.TupleGetItem(func_3798_call(relay.reshape(var_4950.astype('float64'), [8, 16]), relay.reshape(bop_4929.astype('float32'), [10, 8, 11]), ), 1)
func_3438_call = mod.get_global_var('func_3438')
func_3442_call = mutated_mod.get_global_var('func_3442')
var_4958 = relay.var("var_4958", dtype = "float64", shape = (2112,))#candidate|4958|(2112,)|var|float64
var_4959 = relay.var("var_4959", dtype = "uint16", shape = (168,))#candidate|4959|(168,)|var|uint16
call_4957 = relay.TupleGetItem(func_3438_call(relay.reshape(var_4958.astype('float64'), [12, 16, 11]), relay.reshape(var_4958.astype('float64'), [2112,]), relay.reshape(var_4959.astype('uint16'), [168,]), ), 1)
call_4960 = relay.TupleGetItem(func_3442_call(relay.reshape(var_4958.astype('float64'), [12, 16, 11]), relay.reshape(var_4958.astype('float64'), [2112,]), relay.reshape(var_4959.astype('uint16'), [168,]), ), 1)
bop_4961 = relay.multiply(call_4957.astype('int32'), relay.reshape(var_4958.astype('int32'), relay.shape_of(call_4957))) # shape=(2112,)
bop_4964 = relay.multiply(call_4960.astype('int32'), relay.reshape(var_4958.astype('int32'), relay.shape_of(call_4960))) # shape=(2112,)
output = relay.Tuple([bop_4929,call_4949,var_4950,var_4959,bop_4961,])
output2 = relay.Tuple([bop_4932,call_4951,var_4950,var_4959,bop_4964,])
func_4966 = relay.Function([var_4928,var_4950,var_4958,var_4959,], output)
mod['func_4966'] = func_4966
mod = relay.transform.InferType()(mod)
var_4967 = relay.var("var_4967", dtype = "float32", shape = (10, 8, 11))#candidate|4967|(10, 8, 11)|var|float32
var_4968 = relay.var("var_4968", dtype = "float64", shape = (4, 32))#candidate|4968|(4, 32)|var|float64
var_4969 = relay.var("var_4969", dtype = "float64", shape = (2112,))#candidate|4969|(2112,)|var|float64
var_4970 = relay.var("var_4970", dtype = "uint16", shape = (168,))#candidate|4970|(168,)|var|uint16
output = func_4966(var_4967,var_4968,var_4969,var_4970,)
func_4971 = relay.Function([var_4967,var_4968,var_4969,var_4970,], output)
mutated_mod['func_4971'] = func_4971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2819_call = mod.get_global_var('func_2819')
func_2820_call = mutated_mod.get_global_var('func_2820')
call_5028 = func_2819_call()
call_5029 = func_2819_call()
output = relay.Tuple([call_5028,])
output2 = relay.Tuple([call_5029,])
func_5038 = relay.Function([], output)
mod['func_5038'] = func_5038
mod = relay.transform.InferType()(mod)
mutated_mod['func_5038'] = func_5038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5038_call = mutated_mod.get_global_var('func_5038')
call_5039 = func_5038_call()
output = call_5039
func_5040 = relay.Function([], output)
mutated_mod['func_5040'] = func_5040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4189_call = mod.get_global_var('func_4189')
func_4191_call = mutated_mod.get_global_var('func_4191')
call_5070 = func_4189_call()
call_5071 = func_4189_call()
output = call_5070
output2 = call_5071
func_5074 = relay.Function([], output)
mod['func_5074'] = func_5074
mod = relay.transform.InferType()(mod)
output = func_5074()
func_5075 = relay.Function([], output)
mutated_mod['func_5075'] = func_5075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3687_call = mod.get_global_var('func_3687')
func_3689_call = mutated_mod.get_global_var('func_3689')
call_5092 = func_3687_call()
call_5093 = func_3687_call()
func_4189_call = mod.get_global_var('func_4189')
func_4191_call = mutated_mod.get_global_var('func_4191')
call_5110 = func_4189_call()
call_5111 = func_4189_call()
uop_5122 = relay.log2(call_5092.astype('float64')) # shape=(10, 8, 11)
uop_5124 = relay.log2(call_5093.astype('float64')) # shape=(10, 8, 11)
output = relay.Tuple([call_5110,uop_5122,])
output2 = relay.Tuple([call_5111,uop_5124,])
func_5138 = relay.Function([], output)
mod['func_5138'] = func_5138
mod = relay.transform.InferType()(mod)
mutated_mod['func_5138'] = func_5138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5138_call = mutated_mod.get_global_var('func_5138')
call_5139 = func_5138_call()
output = call_5139
func_5140 = relay.Function([], output)
mutated_mod['func_5140'] = func_5140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4223_call = mod.get_global_var('func_4223')
func_4225_call = mutated_mod.get_global_var('func_4225')
call_5265 = relay.TupleGetItem(func_4223_call(), 0)
call_5266 = relay.TupleGetItem(func_4225_call(), 0)
output = call_5265
output2 = call_5266
func_5267 = relay.Function([], output)
mod['func_5267'] = func_5267
mod = relay.transform.InferType()(mod)
mutated_mod['func_5267'] = func_5267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5267_call = mutated_mod.get_global_var('func_5267')
call_5268 = func_5267_call()
output = call_5268
func_5269 = relay.Function([], output)
mutated_mod['func_5269'] = func_5269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3565_call = mod.get_global_var('func_3565')
func_3566_call = mutated_mod.get_global_var('func_3566')
call_5299 = relay.TupleGetItem(func_3565_call(), 0)
call_5300 = relay.TupleGetItem(func_3566_call(), 0)
func_5074_call = mod.get_global_var('func_5074')
func_5075_call = mutated_mod.get_global_var('func_5075')
call_5320 = func_5074_call()
call_5321 = func_5074_call()
output = relay.Tuple([call_5299,call_5320,])
output2 = relay.Tuple([call_5300,call_5321,])
func_5328 = relay.Function([], output)
mod['func_5328'] = func_5328
mod = relay.transform.InferType()(mod)
mutated_mod['func_5328'] = func_5328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mutated_mod.get_global_var('func_5328')
call_5329 = func_5328_call()
output = call_5329
func_5330 = relay.Function([], output)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5406 = relay.var("var_5406", dtype = "int8", shape = (9, 6, 5))#candidate|5406|(9, 6, 5)|var|int8
var_5407 = relay.var("var_5407", dtype = "int8", shape = (9, 6, 5))#candidate|5407|(9, 6, 5)|var|int8
bop_5408 = relay.greater_equal(var_5406.astype('bool'), relay.reshape(var_5407.astype('bool'), relay.shape_of(var_5406))) # shape=(9, 6, 5)
func_5138_call = mod.get_global_var('func_5138')
func_5140_call = mutated_mod.get_global_var('func_5140')
call_5415 = relay.TupleGetItem(func_5138_call(), 0)
call_5416 = relay.TupleGetItem(func_5140_call(), 0)
func_4769_call = mod.get_global_var('func_4769')
func_4770_call = mutated_mod.get_global_var('func_4770')
call_5426 = func_4769_call()
call_5427 = func_4769_call()
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_5428 = relay.TupleGetItem(func_3981_call(), 0)
call_5429 = relay.TupleGetItem(func_3983_call(), 0)
output = relay.Tuple([bop_5408,call_5415,call_5426,call_5428,])
output2 = relay.Tuple([bop_5408,call_5416,call_5427,call_5429,])
func_5432 = relay.Function([var_5406,var_5407,], output)
mod['func_5432'] = func_5432
mod = relay.transform.InferType()(mod)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5432_call = mutated_mod.get_global_var('func_5432')
var_5434 = relay.var("var_5434", dtype = "int8", shape = (9, 6, 5))#candidate|5434|(9, 6, 5)|var|int8
var_5435 = relay.var("var_5435", dtype = "int8", shape = (9, 6, 5))#candidate|5435|(9, 6, 5)|var|int8
call_5433 = func_5432_call(var_5434,var_5435,)
output = call_5433
func_5436 = relay.Function([var_5434,var_5435,], output)
mutated_mod['func_5436'] = func_5436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5466 = relay.var("var_5466", dtype = "float64", shape = (13, 7, 4))#candidate|5466|(13, 7, 4)|var|float64
uop_5467 = relay.atanh(var_5466.astype('float64')) # shape=(13, 7, 4)
func_4724_call = mod.get_global_var('func_4724')
func_4726_call = mutated_mod.get_global_var('func_4726')
call_5487 = func_4724_call()
call_5488 = func_4724_call()
output = relay.Tuple([uop_5467,call_5487,])
output2 = relay.Tuple([uop_5467,call_5488,])
func_5496 = relay.Function([var_5466,], output)
mod['func_5496'] = func_5496
mod = relay.transform.InferType()(mod)
mutated_mod['func_5496'] = func_5496
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5497 = relay.var("var_5497", dtype = "float64", shape = (13, 7, 4))#candidate|5497|(13, 7, 4)|var|float64
func_5496_call = mutated_mod.get_global_var('func_5496')
call_5498 = func_5496_call(var_5497)
output = call_5498
func_5499 = relay.Function([var_5497], output)
mutated_mod['func_5499'] = func_5499
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5557 = relay.var("var_5557", dtype = "int32", shape = (12, 10, 13))#candidate|5557|(12, 10, 13)|var|int32
var_5558 = relay.var("var_5558", dtype = "int32", shape = (12, 10, 13))#candidate|5558|(12, 10, 13)|var|int32
bop_5559 = relay.equal(var_5557.astype('bool'), relay.reshape(var_5558.astype('bool'), relay.shape_of(var_5557))) # shape=(12, 10, 13)
output = bop_5559
output2 = bop_5559
func_5562 = relay.Function([var_5557,var_5558,], output)
mod['func_5562'] = func_5562
mod = relay.transform.InferType()(mod)
var_5563 = relay.var("var_5563", dtype = "int32", shape = (12, 10, 13))#candidate|5563|(12, 10, 13)|var|int32
var_5564 = relay.var("var_5564", dtype = "int32", shape = (12, 10, 13))#candidate|5564|(12, 10, 13)|var|int32
output = func_5562(var_5563,var_5564,)
func_5565 = relay.Function([var_5563,var_5564,], output)
mutated_mod['func_5565'] = func_5565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mod.get_global_var('func_5328')
func_5330_call = mutated_mod.get_global_var('func_5330')
call_5567 = relay.TupleGetItem(func_5328_call(), 1)
call_5568 = relay.TupleGetItem(func_5330_call(), 1)
func_3104_call = mod.get_global_var('func_3104')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_5589 = relay.TupleGetItem(func_3104_call(), 0)
call_5590 = relay.TupleGetItem(func_3106_call(), 0)
output = relay.Tuple([call_5567,call_5589,])
output2 = relay.Tuple([call_5568,call_5590,])
func_5594 = relay.Function([], output)
mod['func_5594'] = func_5594
mod = relay.transform.InferType()(mod)
mutated_mod['func_5594'] = func_5594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5594_call = mutated_mod.get_global_var('func_5594')
call_5595 = func_5594_call()
output = call_5595
func_5596 = relay.Function([], output)
mutated_mod['func_5596'] = func_5596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_5636 = relay.TupleGetItem(func_3981_call(), 0)
call_5637 = relay.TupleGetItem(func_3983_call(), 0)
func_4643_call = mod.get_global_var('func_4643')
func_4646_call = mutated_mod.get_global_var('func_4646')
var_5666 = relay.var("var_5666", dtype = "int32", shape = (336,))#candidate|5666|(336,)|var|int32
call_5665 = func_4643_call(relay.reshape(var_5666.astype('int32'), [16, 3, 7]), relay.reshape(var_5666.astype('int32'), [16, 3, 7]), )
call_5667 = func_4643_call(relay.reshape(var_5666.astype('int32'), [16, 3, 7]), relay.reshape(var_5666.astype('int32'), [16, 3, 7]), )
func_3967_call = mod.get_global_var('func_3967')
func_3968_call = mutated_mod.get_global_var('func_3968')
call_5668 = relay.TupleGetItem(func_3967_call(), 0)
call_5669 = relay.TupleGetItem(func_3968_call(), 0)
uop_5681 = relay.tan(call_5668.astype('float32')) # shape=(10, 8, 11)
uop_5683 = relay.tan(call_5669.astype('float32')) # shape=(10, 8, 11)
output = relay.Tuple([call_5636,call_5665,var_5666,uop_5681,])
output2 = relay.Tuple([call_5637,call_5667,var_5666,uop_5683,])
func_5692 = relay.Function([var_5666,], output)
mod['func_5692'] = func_5692
mod = relay.transform.InferType()(mod)
mutated_mod['func_5692'] = func_5692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5693 = relay.var("var_5693", dtype = "int32", shape = (336,))#candidate|5693|(336,)|var|int32
func_5692_call = mutated_mod.get_global_var('func_5692')
call_5694 = func_5692_call(var_5693)
output = call_5694
func_5695 = relay.Function([var_5693], output)
mutated_mod['func_5695'] = func_5695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_5714 = relay.TupleGetItem(func_2675_call(), 0)
call_5715 = relay.TupleGetItem(func_2676_call(), 0)
output = relay.Tuple([call_5714,])
output2 = relay.Tuple([call_5715,])
func_5716 = relay.Function([], output)
mod['func_5716'] = func_5716
mod = relay.transform.InferType()(mod)
mutated_mod['func_5716'] = func_5716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5716_call = mutated_mod.get_global_var('func_5716')
call_5717 = func_5716_call()
output = call_5717
func_5718 = relay.Function([], output)
mutated_mod['func_5718'] = func_5718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3641_call = mod.get_global_var('func_3641')
func_3643_call = mutated_mod.get_global_var('func_3643')
call_5752 = func_3641_call()
call_5753 = func_3641_call()
output = relay.Tuple([call_5752,])
output2 = relay.Tuple([call_5753,])
func_5768 = relay.Function([], output)
mod['func_5768'] = func_5768
mod = relay.transform.InferType()(mod)
mutated_mod['func_5768'] = func_5768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5768_call = mutated_mod.get_global_var('func_5768')
call_5769 = func_5768_call()
output = call_5769
func_5770 = relay.Function([], output)
mutated_mod['func_5770'] = func_5770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2830_call = mod.get_global_var('func_2830')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_5824 = relay.TupleGetItem(func_2830_call(), 1)
call_5825 = relay.TupleGetItem(func_2832_call(), 1)
func_4223_call = mod.get_global_var('func_4223')
func_4225_call = mutated_mod.get_global_var('func_4225')
call_5837 = relay.TupleGetItem(func_4223_call(), 0)
call_5838 = relay.TupleGetItem(func_4225_call(), 0)
output = relay.Tuple([call_5824,call_5837,])
output2 = relay.Tuple([call_5825,call_5838,])
func_5840 = relay.Function([], output)
mod['func_5840'] = func_5840
mod = relay.transform.InferType()(mod)
mutated_mod['func_5840'] = func_5840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mutated_mod.get_global_var('func_5840')
call_5841 = func_5840_call()
output = call_5841
func_5842 = relay.Function([], output)
mutated_mod['func_5842'] = func_5842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3687_call = mod.get_global_var('func_3687')
func_3689_call = mutated_mod.get_global_var('func_3689')
call_5997 = func_3687_call()
call_5998 = func_3687_call()
func_5562_call = mod.get_global_var('func_5562')
func_5565_call = mutated_mod.get_global_var('func_5565')
var_6000 = relay.var("var_6000", dtype = "int32", shape = (780, 2))#candidate|6000|(780, 2)|var|int32
call_5999 = func_5562_call(relay.reshape(var_6000.astype('int32'), [12, 10, 13]), relay.reshape(var_6000.astype('int32'), [12, 10, 13]), )
call_6001 = func_5562_call(relay.reshape(var_6000.astype('int32'), [12, 10, 13]), relay.reshape(var_6000.astype('int32'), [12, 10, 13]), )
bop_6002 = relay.maximum(var_6000.astype('float64'), relay.reshape(call_5999.astype('float64'), relay.shape_of(var_6000))) # shape=(780, 2)
bop_6005 = relay.maximum(var_6000.astype('float64'), relay.reshape(call_6001.astype('float64'), relay.shape_of(var_6000))) # shape=(780, 2)
bop_6037 = relay.mod(var_6000.astype('float32'), relay.reshape(call_5999.astype('float32'), relay.shape_of(var_6000))) # shape=(780, 2)
bop_6040 = relay.mod(var_6000.astype('float32'), relay.reshape(call_6001.astype('float32'), relay.shape_of(var_6000))) # shape=(780, 2)
uop_6046 = relay.asinh(bop_6002.astype('float64')) # shape=(780, 2)
uop_6048 = relay.asinh(bop_6005.astype('float64')) # shape=(780, 2)
uop_6051 = relay.atanh(uop_6046.astype('float64')) # shape=(780, 2)
uop_6053 = relay.atanh(uop_6048.astype('float64')) # shape=(780, 2)
func_4809_call = mod.get_global_var('func_4809')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_6061 = func_4809_call()
call_6062 = func_4809_call()
func_4809_call = mod.get_global_var('func_4809')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_6083 = func_4809_call()
call_6084 = func_4809_call()
func_3591_call = mod.get_global_var('func_3591')
func_3593_call = mutated_mod.get_global_var('func_3593')
var_6086 = relay.var("var_6086", dtype = "float64", shape = ())#candidate|6086|()|var|float64
call_6085 = relay.TupleGetItem(func_3591_call(relay.reshape(var_6086.astype('float64'), [])), 0)
call_6087 = relay.TupleGetItem(func_3593_call(relay.reshape(var_6086.astype('float64'), [])), 0)
var_6089 = relay.var("var_6089", dtype = "float64", shape = (780, 2))#candidate|6089|(780, 2)|var|float64
bop_6090 = relay.divide(uop_6051.astype('float32'), relay.reshape(var_6089.astype('float32'), relay.shape_of(uop_6051))) # shape=(780, 2)
bop_6093 = relay.divide(uop_6053.astype('float32'), relay.reshape(var_6089.astype('float32'), relay.shape_of(uop_6053))) # shape=(780, 2)
uop_6096 = relay.acos(uop_6046.astype('float32')) # shape=(780, 2)
uop_6098 = relay.acos(uop_6048.astype('float32')) # shape=(780, 2)
bop_6100 = relay.minimum(uop_6046.astype('float32'), var_6086.astype('float32')) # shape=(780, 2)
bop_6103 = relay.minimum(uop_6048.astype('float32'), var_6086.astype('float32')) # shape=(780, 2)
func_3687_call = mod.get_global_var('func_3687')
func_3689_call = mutated_mod.get_global_var('func_3689')
call_6113 = func_3687_call()
call_6114 = func_3687_call()
func_3974_call = mod.get_global_var('func_3974')
func_3976_call = mutated_mod.get_global_var('func_3976')
call_6116 = func_3974_call()
call_6117 = func_3974_call()
output = relay.Tuple([call_5997,bop_6037,call_6061,call_6083,call_6085,bop_6090,uop_6096,bop_6100,call_6113,call_6116,])
output2 = relay.Tuple([call_5998,bop_6040,call_6062,call_6084,call_6087,bop_6093,uop_6098,bop_6103,call_6114,call_6117,])
func_6128 = relay.Function([var_6000,var_6086,var_6089,], output)
mod['func_6128'] = func_6128
mod = relay.transform.InferType()(mod)
var_6129 = relay.var("var_6129", dtype = "int32", shape = (780, 2))#candidate|6129|(780, 2)|var|int32
var_6130 = relay.var("var_6130", dtype = "float64", shape = ())#candidate|6130|()|var|float64
var_6131 = relay.var("var_6131", dtype = "float64", shape = (780, 2))#candidate|6131|(780, 2)|var|float64
output = func_6128(var_6129,var_6130,var_6131,)
func_6132 = relay.Function([var_6129,var_6130,var_6131,], output)
mutated_mod['func_6132'] = func_6132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2819_call = mod.get_global_var('func_2819')
func_2820_call = mutated_mod.get_global_var('func_2820')
call_6143 = func_2819_call()
call_6144 = func_2819_call()
uop_6148 = relay.rsqrt(call_6143.astype('float64')) # shape=(10, 8, 11)
uop_6150 = relay.rsqrt(call_6144.astype('float64')) # shape=(10, 8, 11)
output = uop_6148
output2 = uop_6150
func_6157 = relay.Function([], output)
mod['func_6157'] = func_6157
mod = relay.transform.InferType()(mod)
output = func_6157()
func_6158 = relay.Function([], output)
mutated_mod['func_6158'] = func_6158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4809_call = mod.get_global_var('func_4809')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_6171 = func_4809_call()
call_6172 = func_4809_call()
func_2622_call = mod.get_global_var('func_2622')
func_2624_call = mutated_mod.get_global_var('func_2624')
var_6174 = relay.var("var_6174", dtype = "uint16", shape = (168,))#candidate|6174|(168,)|var|uint16
call_6173 = relay.TupleGetItem(func_2622_call(relay.reshape(var_6174.astype('uint16'), [42, 4])), 0)
call_6175 = relay.TupleGetItem(func_2624_call(relay.reshape(var_6174.astype('uint16'), [42, 4])), 0)
func_5432_call = mod.get_global_var('func_5432')
func_5436_call = mutated_mod.get_global_var('func_5436')
var_6190 = relay.var("var_6190", dtype = "int8", shape = (270,))#candidate|6190|(270,)|var|int8
call_6189 = relay.TupleGetItem(func_5432_call(relay.reshape(var_6190.astype('int8'), [9, 6, 5]), relay.reshape(var_6190.astype('int8'), [9, 6, 5]), ), 1)
call_6191 = relay.TupleGetItem(func_5436_call(relay.reshape(var_6190.astype('int8'), [9, 6, 5]), relay.reshape(var_6190.astype('int8'), [9, 6, 5]), ), 1)
uop_6204 = relay.sqrt(call_6173.astype('float64')) # shape=(3, 8, 7)
uop_6206 = relay.sqrt(call_6175.astype('float64')) # shape=(3, 8, 7)
output = relay.Tuple([call_6171,var_6174,call_6189,var_6190,uop_6204,])
output2 = relay.Tuple([call_6172,var_6174,call_6191,var_6190,uop_6206,])
func_6211 = relay.Function([var_6174,var_6190,], output)
mod['func_6211'] = func_6211
mod = relay.transform.InferType()(mod)
mutated_mod['func_6211'] = func_6211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6211_call = mutated_mod.get_global_var('func_6211')
var_6213 = relay.var("var_6213", dtype = "uint16", shape = (168,))#candidate|6213|(168,)|var|uint16
var_6214 = relay.var("var_6214", dtype = "int8", shape = (270,))#candidate|6214|(270,)|var|int8
call_6212 = func_6211_call(var_6213,var_6214,)
output = call_6212
func_6215 = relay.Function([var_6213,var_6214,], output)
mutated_mod['func_6215'] = func_6215
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6232 = relay.const([[[6,3,7,-10,3,-10,-1,5,8,6],[-7,-4,5,9,8,7,3,-7,1,7]],[[-5,10,5,-10,5,6,5,6,-7,-3],[6,10,9,-10,-9,6,-4,-1,-4,-4]],[[9,10,2,-5,10,-6,7,8,7,8],[-6,1,-3,-1,-5,5,-4,9,2,5]],[[-9,2,10,4,9,5,-8,-7,1,9],[10,-2,-2,10,-3,8,9,10,10,-9]],[[7,4,2,-10,9,1,-5,6,1,3],[-5,8,1,-3,3,1,10,7,9,7]],[[7,7,-8,-1,-1,5,-5,9,-4,-8],[6,8,5,10,-3,1,-4,3,-3,4]],[[-9,9,-3,-4,1,-3,1,3,-9,1],[-9,-1,1,6,10,-8,-9,7,-3,1]],[[10,1,7,9,-8,-7,5,1,-4,1],[-8,-5,6,-1,10,5,7,-3,-3,-8]],[[5,9,3,-7,8,3,7,-5,9,-5],[9,2,9,8,-10,-10,-4,-6,-10,6]],[[-8,-6,-8,-9,-8,-9,-6,10,-4,5],[9,-10,6,-9,-6,-6,5,-1,-2,1]],[[7,-6,-9,-6,9,9,-1,-8,-5,-5],[4,-5,-3,4,-9,7,5,6,-4,-8]]], dtype = "uint64")#candidate|6232|(11, 2, 10)|const|uint64
var_6233 = relay.var("var_6233", dtype = "uint64", shape = (11, 2, 10))#candidate|6233|(11, 2, 10)|var|uint64
bop_6234 = relay.minimum(const_6232.astype('uint64'), relay.reshape(var_6233.astype('uint64'), relay.shape_of(const_6232))) # shape=(11, 2, 10)
output = bop_6234
output2 = bop_6234
func_6249 = relay.Function([var_6233,], output)
mod['func_6249'] = func_6249
mod = relay.transform.InferType()(mod)
mutated_mod['func_6249'] = func_6249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6250 = relay.var("var_6250", dtype = "uint64", shape = (11, 2, 10))#candidate|6250|(11, 2, 10)|var|uint64
func_6249_call = mutated_mod.get_global_var('func_6249')
call_6251 = func_6249_call(var_6250)
output = call_6251
func_6252 = relay.Function([var_6250], output)
mutated_mod['func_6252'] = func_6252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3641_call = mod.get_global_var('func_3641')
func_3643_call = mutated_mod.get_global_var('func_3643')
call_6351 = func_3641_call()
call_6352 = func_3641_call()
func_3565_call = mod.get_global_var('func_3565')
func_3566_call = mutated_mod.get_global_var('func_3566')
call_6356 = relay.TupleGetItem(func_3565_call(), 0)
call_6357 = relay.TupleGetItem(func_3566_call(), 0)
output = relay.Tuple([call_6351,call_6356,])
output2 = relay.Tuple([call_6352,call_6357,])
func_6361 = relay.Function([], output)
mod['func_6361'] = func_6361
mod = relay.transform.InferType()(mod)
output = func_6361()
func_6362 = relay.Function([], output)
mutated_mod['func_6362'] = func_6362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2999_call = mod.get_global_var('func_2999')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_6374 = relay.TupleGetItem(func_2999_call(), 1)
call_6375 = relay.TupleGetItem(func_3000_call(), 1)
output = call_6374
output2 = call_6375
func_6387 = relay.Function([], output)
mod['func_6387'] = func_6387
mod = relay.transform.InferType()(mod)
output = func_6387()
func_6388 = relay.Function([], output)
mutated_mod['func_6388'] = func_6388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5716_call = mod.get_global_var('func_5716')
func_5718_call = mutated_mod.get_global_var('func_5718')
call_6504 = relay.TupleGetItem(func_5716_call(), 0)
call_6505 = relay.TupleGetItem(func_5718_call(), 0)
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_6532 = relay.TupleGetItem(func_4703_call(), 0)
call_6533 = relay.TupleGetItem(func_4705_call(), 0)
output = relay.Tuple([call_6504,call_6532,])
output2 = relay.Tuple([call_6505,call_6533,])
func_6534 = relay.Function([], output)
mod['func_6534'] = func_6534
mod = relay.transform.InferType()(mod)
output = func_6534()
func_6535 = relay.Function([], output)
mutated_mod['func_6535'] = func_6535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4899_call = mutated_mod.get_global_var('func_4899')
call_6539 = relay.TupleGetItem(func_4898_call(), 0)
call_6540 = relay.TupleGetItem(func_4899_call(), 0)
func_3104_call = mod.get_global_var('func_3104')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_6543 = relay.TupleGetItem(func_3104_call(), 0)
call_6544 = relay.TupleGetItem(func_3106_call(), 0)
func_900_call = mod.get_global_var('func_900')
func_903_call = mutated_mod.get_global_var('func_903')
var_6564 = relay.var("var_6564", dtype = "uint16", shape = (6, 28))#candidate|6564|(6, 28)|var|uint16
call_6563 = relay.TupleGetItem(func_900_call(relay.reshape(var_6564.astype('uint16'), [3, 8, 7])), 0)
call_6565 = relay.TupleGetItem(func_903_call(relay.reshape(var_6564.astype('uint16'), [3, 8, 7])), 0)
output = relay.Tuple([call_6539,call_6543,call_6563,var_6564,])
output2 = relay.Tuple([call_6540,call_6544,call_6565,var_6564,])
func_6568 = relay.Function([var_6564,], output)
mod['func_6568'] = func_6568
mod = relay.transform.InferType()(mod)
mutated_mod['func_6568'] = func_6568
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6569 = relay.var("var_6569", dtype = "uint16", shape = (6, 28))#candidate|6569|(6, 28)|var|uint16
func_6568_call = mutated_mod.get_global_var('func_6568')
call_6570 = func_6568_call(var_6569)
output = call_6570
func_6571 = relay.Function([var_6569], output)
mutated_mod['func_6571'] = func_6571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6584 = relay.var("var_6584", dtype = "float64", shape = (15, 6, 14))#candidate|6584|(15, 6, 14)|var|float64
uop_6585 = relay.exp(var_6584.astype('float64')) # shape=(15, 6, 14)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_6590 = relay.TupleGetItem(func_3981_call(), 0)
call_6591 = relay.TupleGetItem(func_3983_call(), 0)
uop_6592 = relay.atanh(uop_6585.astype('float64')) # shape=(15, 6, 14)
bop_6607 = relay.logical_or(uop_6585.astype('bool'), relay.reshape(uop_6592.astype('bool'), relay.shape_of(uop_6585))) # shape=(15, 6, 14)
output = relay.Tuple([call_6590,bop_6607,])
output2 = relay.Tuple([call_6591,bop_6607,])
func_6612 = relay.Function([var_6584,], output)
mod['func_6612'] = func_6612
mod = relay.transform.InferType()(mod)
var_6613 = relay.var("var_6613", dtype = "float64", shape = (15, 6, 14))#candidate|6613|(15, 6, 14)|var|float64
output = func_6612(var_6613)
func_6614 = relay.Function([var_6613], output)
mutated_mod['func_6614'] = func_6614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3498_call = mod.get_global_var('func_3498')
func_3499_call = mutated_mod.get_global_var('func_3499')
call_6651 = relay.TupleGetItem(func_3498_call(), 0)
call_6652 = relay.TupleGetItem(func_3499_call(), 0)
func_4769_call = mod.get_global_var('func_4769')
func_4770_call = mutated_mod.get_global_var('func_4770')
call_6653 = func_4769_call()
call_6654 = func_4769_call()
func_4898_call = mod.get_global_var('func_4898')
func_4899_call = mutated_mod.get_global_var('func_4899')
call_6661 = relay.TupleGetItem(func_4898_call(), 0)
call_6662 = relay.TupleGetItem(func_4899_call(), 0)
func_6361_call = mod.get_global_var('func_6361')
func_6362_call = mutated_mod.get_global_var('func_6362')
call_6683 = relay.TupleGetItem(func_6361_call(), 0)
call_6684 = relay.TupleGetItem(func_6362_call(), 0)
output = relay.Tuple([call_6651,call_6653,call_6661,call_6683,])
output2 = relay.Tuple([call_6652,call_6654,call_6662,call_6684,])
func_6692 = relay.Function([], output)
mod['func_6692'] = func_6692
mod = relay.transform.InferType()(mod)
mutated_mod['func_6692'] = func_6692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6692_call = mutated_mod.get_global_var('func_6692')
call_6693 = func_6692_call()
output = call_6693
func_6694 = relay.Function([], output)
mutated_mod['func_6694'] = func_6694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_6704 = relay.TupleGetItem(func_3666_call(), 0)
call_6705 = relay.TupleGetItem(func_3667_call(), 0)
output = call_6704
output2 = call_6705
func_6714 = relay.Function([], output)
mod['func_6714'] = func_6714
mod = relay.transform.InferType()(mod)
mutated_mod['func_6714'] = func_6714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6714_call = mutated_mod.get_global_var('func_6714')
call_6715 = func_6714_call()
output = call_6715
func_6716 = relay.Function([], output)
mutated_mod['func_6716'] = func_6716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_6731 = relay.TupleGetItem(func_3485_call(), 0)
call_6732 = relay.TupleGetItem(func_3487_call(), 0)
func_6534_call = mod.get_global_var('func_6534')
func_6535_call = mutated_mod.get_global_var('func_6535')
call_6738 = relay.TupleGetItem(func_6534_call(), 1)
call_6739 = relay.TupleGetItem(func_6535_call(), 1)
output = relay.Tuple([call_6731,call_6738,])
output2 = relay.Tuple([call_6732,call_6739,])
func_6751 = relay.Function([], output)
mod['func_6751'] = func_6751
mod = relay.transform.InferType()(mod)
output = func_6751()
func_6752 = relay.Function([], output)
mutated_mod['func_6752'] = func_6752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2417_call = mod.get_global_var('func_2417')
func_2418_call = mutated_mod.get_global_var('func_2418')
call_6808 = relay.TupleGetItem(func_2417_call(), 0)
call_6809 = relay.TupleGetItem(func_2418_call(), 0)
func_6692_call = mod.get_global_var('func_6692')
func_6694_call = mutated_mod.get_global_var('func_6694')
call_6817 = relay.TupleGetItem(func_6692_call(), 3)
call_6818 = relay.TupleGetItem(func_6694_call(), 3)
func_3104_call = mod.get_global_var('func_3104')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_6828 = relay.TupleGetItem(func_3104_call(), 0)
call_6829 = relay.TupleGetItem(func_3106_call(), 0)
func_3305_call = mod.get_global_var('func_3305')
func_3309_call = mutated_mod.get_global_var('func_3309')
const_6833 = relay.const([[-1.389004,1.944788,-2.240158,5.261903,-1.330497,-5.765172,5.352363,-7.739256,3.287451,9.744275,-0.317198,-0.801838,9.328624,2.369370,6.120412,-8.280853,1.548017,4.413485,-2.512920,-6.221733,-4.570426,-4.501585,8.476340,-4.239266,1.302217,-1.262489],[5.614390,2.679089,-3.426217,-5.428793,-2.726544,-0.514028,-3.050919,4.714388,-5.575813,-2.602643,-0.926344,-8.947729,2.026700,-5.775912,-7.942676,-1.543846,-6.423861,-3.759309,6.676226,-7.764366,-1.623674,9.367437,-5.289568,1.590526,6.501890,7.459754],[4.266694,6.247969,-7.124619,4.446042,-9.834282,-1.917842,2.183218,-9.490158,4.152422,-4.874243,9.728403,6.577141,-4.766662,-2.253368,-5.666202,-6.313363,1.634806,-8.193205,3.594998,-1.009073,-6.146386,-2.301994,4.731048,-3.916045,3.015576,-3.967714],[-2.476129,-4.667870,4.898401,-6.844442,9.474012,5.540022,-3.764698,-3.077964,0.126082,-0.527909,-4.894067,0.778385,0.364568,-5.619871,0.345948,1.451810,-3.762045,-4.603381,-9.103920,5.704755,6.315494,-1.769035,6.201760,-0.648160,0.393832,-4.044931],[0.283390,8.253021,3.395083,-4.894580,9.461832,-1.831072,7.433619,8.029486,-3.436676,9.037750,6.437370,6.413715,1.028894,3.958306,-7.716847,-3.744900,2.728881,-6.164280,0.643365,4.438505,-9.635744,6.935629,7.521753,3.744007,9.653912,2.717012],[-4.171246,9.552949,-1.244074,-7.843870,-0.999563,8.350619,4.068527,-2.673952,-1.943621,8.328640,-4.979686,-0.683154,9.364637,3.570148,2.206747,1.675684,6.790879,9.734282,1.702861,5.792803,-9.161971,6.994154,-9.725225,-2.862648,-8.830746,-8.340686],[-4.485623,-4.231738,-9.073165,5.981588,-3.829958,-6.890421,8.404921,-8.050377,6.940379,6.882389,-1.165711,7.081346,-7.541175,6.143150,8.312595,7.947242,-3.653460,4.139702,5.619065,-3.136123,5.439029,-5.122556,-6.624064,0.850845,-5.149423,5.051163],[-6.331448,5.846069,7.712960,0.123659,-7.903931,-6.139368,-4.766888,-1.427647,-5.388193,5.194169,7.449208,2.506400,-5.221893,9.653686,5.874656,1.389977,-1.010162,-0.096587,0.673910,-7.048173,8.630311,9.607758,6.218325,9.615655,-0.915151,7.364969],[-8.161524,-8.934707,-1.963091,0.587463,-0.076197,0.703330,-7.988946,-7.942616,7.129319,1.181043,-0.885075,-8.548206,-0.424648,8.021939,-7.196196,-7.897490,8.653930,-9.465842,7.551424,2.799506,-7.613004,-6.667401,3.205442,9.993331,0.096167,7.468913],[7.813335,0.704709,1.934532,-2.476993,-3.141854,0.623065,6.623285,6.694517,5.024050,0.486351,6.593452,-8.923520,-2.002887,9.686683,1.737771,5.288526,-4.080329,-0.874024,-6.151408,9.626247,-4.251023,-4.945964,-3.804859,-6.547465,3.124556,-2.403569],[8.398069,2.218332,-7.250480,6.843647,2.933367,-3.072957,-8.538491,3.455137,7.744791,3.585000,9.503940,-5.617220,1.207994,-6.520821,-7.363136,8.520839,8.245188,1.154296,4.741449,5.415952,-6.424287,-0.711162,5.830109,2.346100,-9.015858,-0.301394],[-6.554156,-9.868088,6.709782,-0.740064,6.739751,9.756601,-0.308501,-8.106184,8.725896,-2.802897,1.038436,-1.684385,3.755784,7.350839,-8.584966,1.746517,-5.793654,-2.264759,-1.947201,7.693890,-3.901946,1.663298,-8.655057,-9.064992,2.526827,4.944496],[1.067665,1.410061,2.313913,2.843237,-4.261041,-2.464173,-4.923541,-6.015851,-4.539110,-0.629509,-8.982346,7.842183,4.042328,1.144730,5.529779,7.659100,-4.586964,4.681995,0.170766,-3.319424,6.967716,7.256581,8.211609,4.930269,1.087445,0.537344],[1.184256,-6.468028,-2.172085,5.722770,-9.977201,3.663912,-4.098059,-6.036703,2.959734,2.467629,-1.071467,-3.251991,8.205247,8.661684,1.791971,-5.468667,4.253703,9.361230,-4.967180,3.108274,9.705853,-4.110684,6.311750,3.592005,7.344912,-3.260538],[7.348697,0.743013,-8.970766,-7.830804,1.740575,-5.484697,8.025711,4.598696,-1.933030,4.229683,8.502157,1.098227,-1.771295,6.018199,-2.947422,1.639917,-8.294114,-6.920801,5.721755,-3.432907,5.031174,-0.383456,-9.152917,4.479061,-4.468148,-1.436494],[-3.569836,3.418745,-0.103760,-1.148078,-9.852745,9.705579,-0.713665,7.456836,-5.203568,7.736800,-5.288285,-6.361663,5.261556,1.326479,-6.075623,2.714327,-8.727754,-2.618596,3.969238,7.252686,-2.190685,-4.311405,-4.428913,9.980986,7.811398,-1.142982],[-4.302496,-7.193377,-2.813931,3.634669,6.355826,3.229041,2.268032,-5.697795,-6.719026,-6.337967,-7.752919,-2.568448,-4.686861,3.029891,-3.124469,8.554432,2.237293,-8.112896,-0.973862,-4.331585,-7.623913,6.222261,4.674678,-0.698970,9.071387,3.968366],[9.069280,-5.463033,3.894647,9.707361,8.503492,-4.652950,-0.797016,3.214282,-0.775732,-6.487571,3.146383,5.845514,6.422168,5.896416,-9.518301,7.386753,-3.557138,-9.947987,0.046164,7.288497,-7.547591,5.778208,-3.245867,1.663903,9.171321,9.621987],[0.650121,1.634847,-0.487883,0.773286,1.556201,-7.141299,-5.391998,2.743743,-8.541416,8.200744,-9.539996,3.545184,5.340513,-5.105587,-2.192009,5.002244,-5.988489,-0.084761,1.606861,9.603001,-7.857893,-1.154812,-3.036211,7.127711,-0.630356,-3.989761],[2.494549,2.868733,-5.154211,0.865333,0.971518,0.825106,-4.664810,-0.281849,1.294826,-8.550125,5.567160,9.971235,9.481876,-9.332980,5.903079,-8.692901,-1.919923,1.125380,0.251204,5.004597,6.707045,-4.233903,1.402346,-2.619730,2.833811,-7.861966],[9.359472,-1.762687,-1.783824,5.172379,9.435169,6.745415,0.315886,7.928297,8.011798,-8.556255,4.861364,-0.675211,4.122350,0.089586,-8.481122,-6.694367,5.002114,-7.496912,7.825086,3.672828,1.582209,2.642073,1.350705,-0.208810,5.074273,-5.182727],[1.691185,6.786559,3.968127,0.186657,5.687490,3.692511,3.255472,-7.277816,4.535345,7.509497,-0.697516,-0.240194,5.364864,6.247501,4.310030,9.837484,-1.070046,5.873644,-6.844198,0.421277,-9.220552,-6.490323,-8.744895,6.573218,6.254334,6.838508],[4.857928,7.945019,-3.063512,2.572552,-9.830884,-5.755147,-5.681823,-6.109095,4.043807,-1.781757,4.264804,9.263769,5.901955,2.312009,1.175104,2.000937,-8.978912,-1.147230,0.088111,-7.050594,-0.802298,-8.550846,3.386881,3.632232,2.647919,-4.252349],[0.697236,-2.605720,-2.982139,4.241616,-8.418864,-6.620609,6.201568,2.526964,1.788052,0.565944,7.522558,-2.259600,-4.538477,8.005234,5.451421,-1.410715,5.001737,6.833020,3.067960,0.322527,0.770229,-9.175695,-2.341234,0.468086,-2.872257,-0.385263],[5.413500,-8.879986,-6.659118,1.598567,2.234405,-1.067504,-8.837080,7.231710,-0.785186,-0.406376,-7.359638,5.230048,-4.315356,-0.422786,8.435424,-1.795160,0.843782,-2.443664,-5.135027,9.307750,-1.378425,-1.104865,-8.130015,-4.526331,2.469796,-2.676463],[8.397929,-2.949093,2.956384,-2.191355,1.908487,3.126524,3.825720,2.051417,3.296328,-5.110311,-6.080986,-4.253367,-1.539789,-9.094513,9.277118,7.241154,-9.947316,9.306428,8.422313,-0.750620,-6.226459,9.037363,2.921647,-3.654203,-7.582403,-8.827768],[1.571039,7.419428,3.220021,1.889168,-6.604074,-4.377345,9.831651,-5.845173,7.958520,0.612064,-6.349027,-6.144764,5.859116,-4.094077,3.898967,2.232021,-6.631472,-5.526559,-3.216301,-8.885232,-8.257328,5.215413,-7.932450,-8.184154,-6.542994,-3.719250],[6.335224,-2.977652,0.675280,-1.293714,-8.160734,0.917537,-2.231616,-3.763338,-1.625203,9.495745,1.584315,-3.171265,0.463306,-3.994971,-4.626876,-9.455797,1.070961,1.201098,-7.729334,8.843605,5.733640,7.299456,-5.529157,-3.070758,-1.829659,9.889168],[-6.669525,-1.556157,7.084264,4.850474,6.572773,7.361755,-3.485400,2.301130,-6.283296,9.541229,6.723535,4.043520,2.598251,-9.066225,8.730395,4.943878,6.622817,9.011783,-0.007690,8.867133,6.348586,-7.360577,2.958367,-3.625738,-4.011942,9.623311],[-2.575457,6.508243,-0.399727,1.590065,-7.589040,7.633632,-9.230180,-6.392701,5.378845,-7.398137,-3.889145,-9.612276,-2.716124,1.838883,9.121753,6.662188,3.122419,2.229460,-3.823891,2.010690,3.312545,4.475396,-0.165534,4.881022,6.408334,-9.319237],[-5.419785,4.562761,7.428018,-2.197955,5.540701,-9.804622,-7.920984,-8.732110,-6.585516,0.114077,-0.466504,-9.479433,-0.150726,-7.268881,7.501817,2.941753,6.314683,7.536105,8.648902,7.590090,8.732731,4.585502,2.237410,-4.775493,-9.546043,-3.869641],[-6.178817,0.168686,-3.736547,-3.924750,-7.034993,4.852384,-6.063442,-2.014044,-6.909902,-3.432418,2.551136,-5.251010,5.190742,-3.456566,-2.132036,-5.806008,7.779216,-8.315607,6.518332,-4.118247,-9.286516,-1.151858,-1.819341,4.950333,-0.693249,-5.761247],[3.027075,7.637856,9.349300,-6.449188,-4.266080,5.851175,-8.239629,9.464448,-2.233864,3.689448,0.701515,-0.114051,-5.334386,2.709936,1.385545,-5.093231,-7.522831,-8.805638,-1.699829,8.243436,3.921368,-9.135175,-9.222761,-0.853283,9.062224,-4.183106],[4.302033,-0.593372,-6.538807,-4.298826,7.088327,-1.489701,-6.896242,-8.456595,-0.943656,2.885643,-9.951504,8.845202,5.195859,6.658877,-2.613493,-5.055296,-7.099416,8.842871,-2.381714,4.970808,2.057846,9.190218,-6.812055,-3.891477,8.886271,-0.945619],[1.352116,0.497201,1.900962,-0.772452,-6.105948,5.113034,2.491589,8.694859,2.008113,-6.967169,-9.853324,-5.010461,5.640759,5.702979,7.672324,-5.902137,-9.166616,7.015703,-2.905218,3.174803,-9.434694,-4.011899,2.131203,9.039718,-9.734839,6.131603],[9.911534,5.402340,-3.343312,-1.625436,-2.005664,8.514081,-5.973524,0.839135,-6.225333,8.394145,5.560112,-8.390567,3.364759,2.611294,9.025455,-9.775033,3.319674,7.058939,4.869135,0.217415,-9.133602,-0.580726,6.605886,-2.037229,-1.781312,0.167314],[9.352901,-2.696203,9.947128,-4.987594,3.878959,-8.711983,-5.486543,-1.681137,5.294806,5.478627,-2.061884,-7.179712,0.203987,4.741012,-6.587227,-2.167284,3.955494,-0.895854,-5.255437,9.974195,9.687110,-2.816608,-4.060445,3.311857,-6.583236,8.785370],[-0.586596,9.760479,-8.597254,6.175753,1.279964,-4.441254,2.403826,3.501182,8.563072,3.794753,-5.355006,-0.908646,-8.419188,-2.752186,2.743057,-5.827199,1.956852,2.796642,-9.752456,-4.817918,-7.036756,-7.278104,9.910953,-7.162001,3.442928,-0.855162],[7.807440,-4.956670,-6.517929,2.862711,-2.607410,-6.490188,1.382269,-8.644301,-7.250693,3.731270,9.423600,-7.621316,9.389385,-3.403700,-6.187262,7.709031,8.189629,-5.898818,-0.613364,0.288742,2.535597,6.796645,-3.314621,-4.531212,-1.760265,6.316935],[-5.926372,3.535286,-7.079284,-7.501459,-1.556968,8.898339,8.387781,6.733658,6.137022,-7.780197,-1.385543,3.269739,8.542754,-9.423821,3.433990,-3.366802,9.750363,0.949663,4.945075,3.699752,1.062810,3.302684,-3.536166,0.360787,-3.884308,-3.644335],[1.243069,6.487403,6.902233,-3.568360,3.749113,-9.764680,-5.611296,5.017998,9.776471,2.856653,5.123864,6.954030,-1.682129,6.758618,7.241905,3.474330,0.436297,8.875790,-5.698005,4.234403,-4.820240,4.032917,0.622007,-2.210593,4.352579,-0.320481],[8.584226,-9.255231,-2.097230,-2.887754,1.413755,-8.042310,-1.890710,5.301323,6.359267,-6.401335,9.385458,3.744409,-8.732320,3.173192,3.407086,-3.024384,-3.516552,-9.156764,-2.275809,-5.143751,8.223105,-2.518362,-9.366698,-5.726008,-0.979818,-5.131648],[-9.885453,9.652971,7.903285,-3.950799,-2.410183,8.513132,0.486160,6.903338,-7.730196,4.299972,-6.793492,8.513204,-9.806216,-2.018826,9.510003,-4.907947,-2.419309,-4.930370,-5.143054,9.123526,-5.260648,2.528237,-8.516002,3.636863,-6.300982,-3.563821],[8.434166,-8.250523,-8.617854,-2.086085,3.064449,8.037693,-8.721421,2.433276,0.286196,0.326785,-0.149768,1.109608,0.085094,5.641768,-9.102177,-6.804027,-5.636582,5.260073,-3.231759,-0.294256,-9.202934,2.042142,1.440854,5.845504,3.722811,-2.897973],[-0.632923,3.887735,3.906939,1.954803,-5.267733,6.107003,-1.441771,6.989870,-9.370394,-4.761743,-2.552968,-1.829578,0.254706,-0.128442,-9.099391,-2.501995,-7.347074,8.946758,-4.497588,5.049994,-8.677869,2.346693,5.869946,1.430383,-5.218844,-7.008108],[-5.186158,2.170427,3.360938,-0.981686,-6.611775,-1.019786,-2.123735,-3.292128,-0.095947,-5.633506,-1.317971,-6.112702,-0.223642,-9.558461,0.316709,8.401591,4.987501,4.333930,-7.285232,-0.907072,-7.639409,-4.672420,-7.299297,-2.501988,-7.604720,-1.788679],[-9.221574,6.550000,-5.713364,-1.359226,-3.480853,2.920527,-6.867865,-5.683744,0.936235,3.282018,3.019778,-3.581303,5.348566,8.909537,5.404224,-3.931910,-7.409116,0.843395,3.982406,-2.047383,9.226991,6.803103,8.668260,1.330644,1.469307,-6.112931],[-5.009220,-3.641557,1.223874,2.247465,3.909135,8.568755,8.704342,9.489073,-8.517159,7.130417,1.766435,0.217015,-1.530694,4.914742,2.454784,7.242736,3.683182,4.043548,2.108493,8.752437,1.710534,-8.540614,1.373268,0.170678,9.111850,-4.811513],[-8.261884,4.478537,-1.787922,-7.904066,6.495045,3.634244,2.714886,4.411329,8.394620,-2.434695,0.122650,-9.160383,-6.034682,-0.495179,-5.877773,-6.604194,-1.539641,1.259107,2.281021,1.442577,1.476795,6.173682,7.608755,0.706165,2.494456,8.366415],[-7.061108,-4.212419,-6.657830,0.831027,4.170344,0.914064,2.676372,-7.417646,-5.353244,8.798725,-2.153022,-4.967749,-4.298445,-5.669991,0.435268,-0.076502,3.343372,-9.819090,-3.131642,-3.471510,-3.422885,1.639809,4.687678,-7.803847,7.552145,1.191480],[-7.384375,-1.809376,-7.243600,-0.335150,-5.237825,2.575216,1.791160,5.338715,6.360785,7.123763,1.052990,-8.706978,-2.493928,-5.045434,-4.505194,1.612252,-5.428517,3.279839,6.587650,-7.059946,2.220875,6.107876,-6.180880,-5.167517,3.071262,7.610453],[-5.091119,5.994114,-1.663415,8.724983,6.197822,6.218028,-4.153791,-7.124727,-2.794407,5.496799,7.482234,0.826244,-5.555925,9.887266,8.666741,-8.069014,-2.056079,6.100428,-9.494020,-0.507535,7.129939,7.750633,-9.496006,7.002797,-1.355320,-3.975248],[-4.125541,7.403262,2.934513,-5.926389,2.154966,5.299291,-6.066065,-9.625581,0.424388,-6.569402,-1.880662,-3.842650,-1.982679,-5.578048,-1.186908,-4.226213,-1.097977,1.092370,-1.451676,-6.602344,1.006370,-9.797244,-8.352161,-5.024223,3.671705,6.484054],[-3.937737,-7.816778,9.462694,8.593661,-5.757881,-1.738241,-7.240134,-4.061263,8.267912,-1.574987,-7.846029,-7.191639,-6.218058,-2.940874,-6.367788,3.306177,2.998897,0.557236,-9.102461,5.202900,-0.067633,4.945007,9.254307,3.374527,4.096519,9.085961],[-8.945409,-5.009248,-0.922017,-1.331139,-9.162253,3.538801,-6.582887,7.049962,-4.736806,2.668328,-8.352750,7.936994,-5.719442,0.428544,-2.121752,-2.210347,-4.473348,3.566151,3.508510,7.502269,-8.919647,-5.695370,8.618714,2.431583,-3.625219,-2.072247],[-3.409899,-2.125463,6.230317,-9.930106,3.515593,-8.763070,1.822083,-8.935378,-7.099623,6.127291,1.060280,3.756217,5.103658,-8.641760,2.191530,-3.656121,-2.715597,-4.047125,-7.928697,5.177190,4.668487,-3.312560,-2.464622,-8.578987,-4.125172,9.447519],[1.744754,7.763520,6.225841,-2.879618,-3.036745,-4.330795,6.109368,-2.488777,0.755188,5.791020,-7.736776,-5.983384,6.995219,3.378496,-0.915907,9.872938,9.107360,-0.567905,-1.413653,7.432507,6.622974,3.705921,-7.533138,4.041481,1.674494,4.222820],[-4.809935,-5.636729,-5.632874,2.951477,-0.025837,-2.281680,4.077211,3.153173,8.935584,1.111042,-7.946487,5.505134,-9.219862,2.552712,-1.486549,2.192506,-0.540529,-8.721046,7.587658,7.444909,-7.654442,3.189439,-7.092469,2.224828,9.994021,-1.700993],[9.378954,3.779451,-9.689109,6.207340,4.819859,6.768086,1.779838,-2.108080,-8.716675,-8.791880,6.834565,-5.449470,-1.049166,4.014726,-4.940046,-0.888175,4.688751,-4.188449,-3.276825,-5.099923,-2.812110,9.072851,2.916090,2.817218,3.745343,-0.273838],[9.606166,-4.705392,-5.267411,-6.995050,6.861590,-8.880946,-3.928592,5.605077,0.809401,-7.075697,4.305369,9.984585,5.883369,-9.371713,-1.707191,4.962962,-6.923146,-4.040771,3.015838,7.602006,1.874711,2.747316,-0.724222,-8.929620,9.374395,-8.314317],[-8.495521,4.612180,-7.867288,-8.626708,8.741979,-4.053383,0.613168,-6.684638,7.186264,5.018019,-5.039638,-8.321594,8.648995,-0.929000,5.503823,-2.642156,-1.716611,0.217385,9.041910,7.077762,2.609029,-2.539340,-2.729961,8.083995,2.677742,-9.590860],[-7.041481,-0.615694,8.294478,-2.496419,1.710759,-1.944297,-8.706078,-1.875607,0.208309,-3.579446,-9.379246,3.246155,-0.411375,-1.492833,-8.841654,4.517295,-4.796749,-2.371816,-7.166110,-6.823707,9.376192,6.699493,0.827884,-4.695564,5.783965,6.252285],[7.261287,9.264396,-3.244533,4.530212,-8.705060,1.450977,7.228099,7.022942,-7.969407,6.994683,-8.228073,6.361272,4.833030,8.301293,5.731196,-2.584176,7.120549,-9.613425,1.876819,-7.082027,-9.625937,-2.899013,-9.716772,7.056513,-2.797879,-7.425652],[2.756433,-9.833551,3.884538,7.126782,-2.087247,-9.054750,3.922117,4.872849,-8.362698,9.109331,1.258508,-0.319745,3.407442,-7.724690,6.133860,-2.111913,5.132313,9.607979,-5.502324,6.251933,-2.358180,0.146520,-4.578122,-0.124506,-7.310625,0.861067],[-6.371035,2.321783,8.108405,4.018086,2.549210,5.163340,-6.880709,7.457779,4.383178,9.113336,-4.377386,-5.784011,-0.758184,-6.776653,-8.833861,-7.280276,6.825609,-7.704035,-3.573695,5.706391,2.771289,-1.578754,1.430895,5.258957,-8.565185,-9.535283],[5.568165,4.939938,-1.959237,-5.369779,9.738188,3.247630,5.648670,4.063712,2.170389,2.943872,6.057009,-1.949533,8.261893,1.098965,-3.843686,5.695708,-3.299972,2.425357,-9.420187,4.468416,5.379052,-8.806806,-9.840343,-9.529499,8.831793,7.986185],[9.784162,7.820427,5.886330,-8.108529,6.341756,2.194394,-1.208027,-2.310280,-9.558212,-5.905323,-9.632350,-9.215914,-0.440975,-6.802788,-2.389875,-8.183685,5.015806,8.816401,-7.359837,-4.437694,0.525048,-8.165469,8.865013,-8.989614,-0.384177,3.376589],[6.647658,-9.958215,-2.186105,2.132762,-2.072829,-8.509915,-0.542480,-4.941641,9.288686,-7.403667,-5.284265,-4.123587,6.382053,5.505291,0.759197,-4.764131,0.877549,-2.203711,8.002041,-5.734019,3.661666,4.277165,-2.241150,-0.299747,-9.456512,-2.969578],[3.986821,-4.441069,3.521894,5.541839,-0.682079,-5.209224,-6.218260,7.803677,-3.306819,0.756770,-4.232843,8.248380,-9.297226,-6.060338,-4.840232,8.951632,2.714356,-4.579421,5.361023,2.118621,5.430638,3.828060,-5.957251,0.573508,4.206062,-4.924406],[3.510291,-4.310507,-6.752981,1.539640,-4.028654,-7.592419,-8.937442,-2.400026,-6.186938,-3.770020,5.673975,3.640986,-6.587251,1.547426,4.306039,-8.621806,3.984025,-6.283552,0.127954,5.145922,-0.596029,-7.148046,-3.149461,6.598362,-2.376949,4.912009],[8.351471,-7.077686,3.690993,5.263753,2.378274,-9.284348,2.651367,-4.414614,-1.752409,-0.515547,-3.128982,6.263846,4.365625,5.745026,-0.188400,-5.778445,-5.053794,-1.710804,-2.981289,-8.742737,4.013745,-4.949493,-3.718956,1.405951,-1.584669,1.012580],[-1.272956,-2.282736,4.605247,-7.510693,-4.931362,-8.653682,5.327007,-9.933477,-5.141570,7.607789,8.663301,-3.959174,6.383982,-1.998324,9.554998,-1.954942,4.082274,-6.577842,-7.509761,-3.817099,0.452114,4.692252,0.698582,-4.087271,5.378948,0.647956],[0.323459,-5.983430,-5.452505,0.397622,-8.941621,5.274156,-0.702142,1.748239,-5.954343,0.661850,-0.546814,-6.422740,-0.673907,6.307113,0.442920,0.830502,5.550377,9.133071,-3.952733,4.713688,-9.239409,-0.217704,-9.390254,7.838293,-4.750986,-3.904720],[-3.929758,-1.750646,1.100102,-1.130814,7.767425,-4.617594,0.038421,-4.592721,-8.709891,-1.684054,-2.024023,0.659406,-4.723961,-4.822332,0.384486,3.844796,0.223851,-1.990111,-8.813431,6.626916,-7.754094,-6.673510,6.885593,-5.368907,-3.370242,-5.667032],[2.632975,-2.864062,6.056445,-8.491449,2.479875,-2.194556,-6.767164,-8.094153,4.846001,-8.730841,1.076124,7.808140,0.604672,-1.817284,-2.652121,-2.330544,-4.254267,-4.717076,4.877977,-8.259327,-2.590193,-2.908970,6.452060,6.500617,-9.357490,5.843264],[-4.153366,2.743569,-3.128433,-5.738951,-2.434763,-3.429032,5.409632,-0.007455,-1.041031,5.576562,3.648323,5.963090,-9.804658,5.078967,-2.592886,-4.627794,0.248310,-4.111079,2.466846,8.367761,2.543340,-7.670285,-8.315610,-0.121777,0.683929,9.972652],[2.262479,-4.311103,-3.412398,-8.713127,-1.362207,2.197355,-7.333662,6.074302,-0.951251,-3.260483,-9.207532,-1.910046,1.658080,4.790697,0.356776,-6.511015,0.975408,-1.432947,-2.485814,-1.097240,-4.193724,1.648190,8.431777,-3.514514,1.031029,-8.019036],[-2.820460,-5.527402,4.233770,-6.320866,-8.786215,9.940795,2.818133,4.164618,-9.202318,-7.613602,-1.020628,-5.037802,-4.712439,9.263456,7.502676,-6.974368,1.311855,0.261030,-6.605257,0.294695,-6.032220,2.882993,-8.947506,-7.376740,-3.713131,1.417841],[-9.521165,7.184028,3.295927,-0.177043,-8.162925,-1.102269,9.338924,-5.000831,0.155190,-4.827821,-7.525387,-0.509954,2.252453,0.149934,9.024269,-7.743402,-2.247858,1.731217,-2.695721,-1.826798,-7.485762,-3.291276,1.803022,9.522438,-1.778464,-2.936126],[1.944093,-8.372592,3.258392,3.512023,-9.818291,-3.044376,6.965426,-2.591452,3.579917,-3.321566,8.956921,4.801575,9.037632,-0.106849,2.838189,-4.930316,9.838032,0.382373,-8.326920,5.431813,-8.896566,-6.798705,8.908743,3.082455,0.611016,-3.747896],[5.362575,4.324406,9.028008,-5.200088,0.935835,0.591304,7.894944,5.646325,1.808119,3.975402,2.116580,7.263511,-0.347963,2.902520,-7.175123,7.498391,-8.010065,-8.948259,-8.037937,-8.118083,2.237608,-2.856200,-6.229699,1.055986,-7.505094,8.996809],[-4.318552,6.747850,8.141090,-4.819253,-0.165595,4.597444,1.678281,-3.684831,4.135361,2.680763,5.853638,6.142029,5.257915,4.630113,2.697685,4.457248,-7.711414,0.382895,-8.127423,9.745534,7.244831,9.625186,8.646664,-5.672765,-9.117658,5.555921],[3.778726,4.740685,0.839025,-7.161142,2.739696,-6.036554,-6.977604,0.678264,-1.840471,-2.593212,-7.480564,-8.183245,5.628649,-0.073402,-0.465299,4.664429,-2.031252,-8.172346,-5.081029,8.540896,1.147818,8.536285,7.875599,-0.584705,9.859437,3.113122],[-8.668761,3.820173,-8.184809,3.288451,-2.308685,-1.129230,2.170201,-6.050817,7.239609,7.753298,-3.897184,2.337807,5.620537,2.219555,-8.944378,-3.326723,-6.886193,-1.939164,8.249119,3.811884,9.918990,3.162304,-6.524499,-2.606725,4.856817,-9.361106]], dtype = "float64")#candidate|6833|(84, 26)|const|float64
var_6834 = relay.var("var_6834", dtype = "uint16", shape = (1560,))#candidate|6834|(1560,)|var|uint16
const_6835 = relay.const([5.468977,-8.099891,1.571216,-6.003013,-6.242471,-9.338141,5.547668,-8.858865,4.476718,6.399819,-6.770497,-5.362689,2.788563,1.210334,-6.396784,-4.175737,-4.718969,2.165410,-2.319525,7.029282,1.362206,-5.304017,5.809425,6.908169,6.328560,7.924505,-1.827347,-5.463965,8.933177,9.820262,1.014554,8.700573,-0.425169,3.606018,-5.939144,-5.757589,-2.323332,-7.622580,9.138223,1.340376,-9.414380,3.333576,-3.977035,3.548568,2.554393,-7.821277,-3.934425,-7.900119,-3.822696,7.815896,-0.588978,6.474132,-6.582283,-6.727262,6.003328], dtype = "float32")#candidate|6835|(55,)|const|float32
call_6832 = relay.TupleGetItem(func_3305_call(relay.reshape(const_6833.astype('float64'), [12, 14, 13]), relay.reshape(var_6834.astype('uint16'), [1560, 1]), relay.reshape(const_6835.astype('float32'), [55,]), ), 0)
call_6836 = relay.TupleGetItem(func_3309_call(relay.reshape(const_6833.astype('float64'), [12, 14, 13]), relay.reshape(var_6834.astype('uint16'), [1560, 1]), relay.reshape(const_6835.astype('float32'), [55,]), ), 0)
bop_6850 = relay.logical_xor(const_6833.astype('uint32'), relay.reshape(call_6832.astype('uint32'), relay.shape_of(const_6833))) # shape=(84, 26)
bop_6853 = relay.logical_xor(const_6833.astype('uint32'), relay.reshape(call_6836.astype('uint32'), relay.shape_of(const_6833))) # shape=(84, 26)
func_4809_call = mod.get_global_var('func_4809')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_6857 = func_4809_call()
call_6858 = func_4809_call()
func_2787_call = mod.get_global_var('func_2787')
func_2788_call = mutated_mod.get_global_var('func_2788')
call_6864 = relay.TupleGetItem(func_2787_call(), 1)
call_6865 = relay.TupleGetItem(func_2788_call(), 1)
var_6872 = relay.var("var_6872", dtype = "float32", shape = (10, 8, 11))#candidate|6872|(10, 8, 11)|var|float32
bop_6873 = relay.logical_and(call_6808.astype('bool'), relay.reshape(var_6872.astype('bool'), relay.shape_of(call_6808))) # shape=(10, 8, 11)
bop_6876 = relay.logical_and(call_6809.astype('bool'), relay.reshape(var_6872.astype('bool'), relay.shape_of(call_6809))) # shape=(10, 8, 11)
func_4724_call = mod.get_global_var('func_4724')
func_4726_call = mutated_mod.get_global_var('func_4726')
call_6883 = func_4724_call()
call_6884 = func_4724_call()
func_1890_call = mod.get_global_var('func_1890')
func_1894_call = mutated_mod.get_global_var('func_1894')
const_6908 = relay.const([[-8.763741,-1.642303,4.438279],[-3.837656,9.034849,7.283837],[4.824870,7.298657,-8.147439]], dtype = "float64")#candidate|6908|(3, 3)|const|float64
var_6909 = relay.var("var_6909", dtype = "float64", shape = (1155,))#candidate|6909|(1155,)|var|float64
call_6907 = relay.TupleGetItem(func_1890_call(relay.reshape(const_6908.astype('float64'), [3, 3, 1]), relay.reshape(var_6909.astype('float64'), [1155,]), ), 1)
call_6910 = relay.TupleGetItem(func_1894_call(relay.reshape(const_6908.astype('float64'), [3, 3, 1]), relay.reshape(var_6909.astype('float64'), [1155,]), ), 1)
output = relay.Tuple([call_6817,call_6828,var_6834,const_6835,bop_6850,call_6857,call_6864,bop_6873,call_6883,call_6907,const_6908,var_6909,])
output2 = relay.Tuple([call_6818,call_6829,var_6834,const_6835,bop_6853,call_6858,call_6865,bop_6876,call_6884,call_6910,const_6908,var_6909,])
func_6915 = relay.Function([var_6834,var_6872,var_6909,], output)
mod['func_6915'] = func_6915
mod = relay.transform.InferType()(mod)
mutated_mod['func_6915'] = func_6915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6915_call = mutated_mod.get_global_var('func_6915')
var_6917 = relay.var("var_6917", dtype = "uint16", shape = (1560,))#candidate|6917|(1560,)|var|uint16
var_6918 = relay.var("var_6918", dtype = "float32", shape = (10, 8, 11))#candidate|6918|(10, 8, 11)|var|float32
var_6919 = relay.var("var_6919", dtype = "float64", shape = (1155,))#candidate|6919|(1155,)|var|float64
call_6916 = func_6915_call(var_6917,var_6918,var_6919,)
output = call_6916
func_6920 = relay.Function([var_6917,var_6918,var_6919,], output)
mutated_mod['func_6920'] = func_6920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_6946 = relay.TupleGetItem(func_3485_call(), 0)
call_6947 = relay.TupleGetItem(func_3487_call(), 0)
output = relay.Tuple([call_6946,])
output2 = relay.Tuple([call_6947,])
func_6963 = relay.Function([], output)
mod['func_6963'] = func_6963
mod = relay.transform.InferType()(mod)
output = func_6963()
func_6964 = relay.Function([], output)
mutated_mod['func_6964'] = func_6964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_7011 = relay.TupleGetItem(func_3485_call(), 0)
call_7012 = relay.TupleGetItem(func_3487_call(), 0)
output = relay.Tuple([call_7011,])
output2 = relay.Tuple([call_7012,])
func_7016 = relay.Function([], output)
mod['func_7016'] = func_7016
mod = relay.transform.InferType()(mod)
mutated_mod['func_7016'] = func_7016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7016_call = mutated_mod.get_global_var('func_7016')
call_7017 = func_7016_call()
output = call_7017
func_7018 = relay.Function([], output)
mutated_mod['func_7018'] = func_7018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_7027 = relay.TupleGetItem(func_3485_call(), 0)
call_7028 = relay.TupleGetItem(func_3487_call(), 0)
func_734_call = mod.get_global_var('func_734')
func_737_call = mutated_mod.get_global_var('func_737')
var_7043 = relay.var("var_7043", dtype = "uint16", shape = (1560,))#candidate|7043|(1560,)|var|uint16
call_7042 = relay.TupleGetItem(func_734_call(relay.reshape(var_7043.astype('uint16'), [13, 15, 8])), 1)
call_7044 = relay.TupleGetItem(func_737_call(relay.reshape(var_7043.astype('uint16'), [13, 15, 8])), 1)
func_2925_call = mod.get_global_var('func_2925')
func_2928_call = mutated_mod.get_global_var('func_2928')
const_7046 = relay.const([-3,-3,9,3,-6,1,-1,7,4,2,-3,-4,2,-1,6,-4,-10,-7,4,4,10,-9,4,4,1,3,-3,-10,-3,-5,-6,-7,3,-5,3,8,-7,-6,-4,-10,6,-8,10,-5,2,1,8,-2,3,-1,-7,2,7,-4,8,-7,-9,3,-6,2,10,-4,1,-3,-5,3,-3,-7,-2,-1,-7,5,5,5,8,-7,-1,9,1,8,-6,10,-7,10,-6,-10,-9,-8,10,-6,-3,9,6,-7,9,2,8,7,-7,-5,-5,-9,-7,-1,-2,-7,9,-8,1,-3,3,-10,-9,4,-1,2,-3,2,-8,7,9,-7,-8,-5,-10,-3,-6,-4,9,1,-9,6,4,2,-3,3,2,4,5,-3,10,10,1,2,-3,8,8,4,3,3,4,2,6,-10,-7,-7,-10,-4,-10,9,-9,-7,-2,-8,-6,3,-7,-10,2,5,2,6,-9,-1,5,4,8,1,-4,-4,-10,-2,5,1,1,-7,-9,5,3,9,-7,-2,-8,-2,3,-3,-5,1,9,7,9,-3,7,6,-3,8,2,4,4,-10,-3,8,-10,-10,-1,8,-1,8,-8,-5,-3,-2,2,3,-3,-1,-8,4,9,6,1,10,5,-7,6,8,5,-2,-8,-3,10,5,4,-5,-5,3,-4,-5,4,-4,6,-8,3,-7,7,-2,-5,-6,-8,2,-5,-9,-1,-10,6,5,-7,2,5,1,-1,-10,1,5,-10,-5,3,3,-8,-9,8,-8,-7,5,10,-5,-10,-7,-2,2,-1,-8,-1,-8,-4,5,3,7,4,1,9,-6,10,9,8,-5,-6,-3,3,-6,-10,-1,4,2,-9,3,10,6,-5,-5], dtype = "uint8")#candidate|7046|(320,)|const|uint8
call_7045 = relay.TupleGetItem(func_2925_call(relay.reshape(const_7046.astype('uint8'), [4, 10, 8]), relay.reshape(const_7046.astype('uint8'), [4, 10, 8]), ), 0)
call_7047 = relay.TupleGetItem(func_2928_call(relay.reshape(const_7046.astype('uint8'), [4, 10, 8]), relay.reshape(const_7046.astype('uint8'), [4, 10, 8]), ), 0)
var_7051 = relay.var("var_7051", dtype = "uint16", shape = (1560,))#candidate|7051|(1560,)|var|uint16
bop_7052 = relay.left_shift(var_7043.astype('uint16'), relay.reshape(var_7051.astype('uint16'), relay.shape_of(var_7043))) # shape=(1560,)
func_1134_call = mod.get_global_var('func_1134')
func_1137_call = mutated_mod.get_global_var('func_1137')
var_7057 = relay.var("var_7057", dtype = "float32", shape = (96, 2))#candidate|7057|(96, 2)|var|float32
call_7056 = relay.TupleGetItem(func_1134_call(relay.reshape(var_7057.astype('float32'), [8, 6, 4])), 0)
call_7058 = relay.TupleGetItem(func_1137_call(relay.reshape(var_7057.astype('float32'), [8, 6, 4])), 0)
bop_7060 = relay.bitwise_xor(call_7045.astype('uint32'), relay.reshape(const_7046.astype('uint32'), relay.shape_of(call_7045))) # shape=(4, 10, 8)
bop_7063 = relay.bitwise_xor(call_7047.astype('uint32'), relay.reshape(const_7046.astype('uint32'), relay.shape_of(call_7047))) # shape=(4, 10, 8)
bop_7068 = relay.less_equal(call_7045.astype('bool'), relay.reshape(bop_7060.astype('bool'), relay.shape_of(call_7045))) # shape=(4, 10, 8)
bop_7071 = relay.less_equal(call_7047.astype('bool'), relay.reshape(bop_7063.astype('bool'), relay.shape_of(call_7047))) # shape=(4, 10, 8)
bop_7082 = relay.logical_or(bop_7052.astype('bool'), relay.reshape(var_7051.astype('bool'), relay.shape_of(bop_7052))) # shape=(1560,)
bop_7085 = relay.divide(bop_7052.astype('float64'), relay.reshape(bop_7082.astype('float64'), relay.shape_of(bop_7052))) # shape=(1560,)
uop_7088 = relay.tan(bop_7068.astype('float64')) # shape=(4, 10, 8)
uop_7090 = relay.tan(bop_7071.astype('float64')) # shape=(4, 10, 8)
uop_7092 = relay.acosh(bop_7085.astype('float32')) # shape=(1560,)
output = relay.Tuple([call_7027,call_7042,call_7056,var_7057,uop_7088,uop_7092,])
output2 = relay.Tuple([call_7028,call_7044,call_7058,var_7057,uop_7090,uop_7092,])
func_7141 = relay.Function([var_7043,var_7051,var_7057,], output)
mod['func_7141'] = func_7141
mod = relay.transform.InferType()(mod)
var_7142 = relay.var("var_7142", dtype = "uint16", shape = (1560,))#candidate|7142|(1560,)|var|uint16
var_7143 = relay.var("var_7143", dtype = "uint16", shape = (1560,))#candidate|7143|(1560,)|var|uint16
var_7144 = relay.var("var_7144", dtype = "float32", shape = (96, 2))#candidate|7144|(96, 2)|var|float32
output = func_7141(var_7142,var_7143,var_7144,)
func_7145 = relay.Function([var_7142,var_7143,var_7144,], output)
mutated_mod['func_7145'] = func_7145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5074_call = mod.get_global_var('func_5074')
func_5075_call = mutated_mod.get_global_var('func_5075')
call_7167 = func_5074_call()
call_7168 = func_5074_call()
output = relay.Tuple([call_7167,])
output2 = relay.Tuple([call_7168,])
func_7180 = relay.Function([], output)
mod['func_7180'] = func_7180
mod = relay.transform.InferType()(mod)
mutated_mod['func_7180'] = func_7180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7180_call = mutated_mod.get_global_var('func_7180')
call_7181 = func_7180_call()
output = call_7181
func_7182 = relay.Function([], output)
mutated_mod['func_7182'] = func_7182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6963_call = mod.get_global_var('func_6963')
func_6964_call = mutated_mod.get_global_var('func_6964')
call_7251 = relay.TupleGetItem(func_6963_call(), 0)
call_7252 = relay.TupleGetItem(func_6964_call(), 0)
func_7016_call = mod.get_global_var('func_7016')
func_7018_call = mutated_mod.get_global_var('func_7018')
call_7262 = relay.TupleGetItem(func_7016_call(), 0)
call_7263 = relay.TupleGetItem(func_7018_call(), 0)
output = relay.Tuple([call_7251,call_7262,])
output2 = relay.Tuple([call_7252,call_7263,])
func_7271 = relay.Function([], output)
mod['func_7271'] = func_7271
mod = relay.transform.InferType()(mod)
output = func_7271()
func_7272 = relay.Function([], output)
mutated_mod['func_7272'] = func_7272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5594_call = mod.get_global_var('func_5594')
func_5596_call = mutated_mod.get_global_var('func_5596')
call_7276 = relay.TupleGetItem(func_5594_call(), 0)
call_7277 = relay.TupleGetItem(func_5596_call(), 0)
var_7294 = relay.var("var_7294", dtype = "float32", shape = (10, 8, 11))#candidate|7294|(10, 8, 11)|var|float32
bop_7295 = relay.add(call_7276.astype('uint64'), relay.reshape(var_7294.astype('uint64'), relay.shape_of(call_7276))) # shape=(10, 8, 11)
bop_7298 = relay.add(call_7277.astype('uint64'), relay.reshape(var_7294.astype('uint64'), relay.shape_of(call_7277))) # shape=(10, 8, 11)
output = relay.Tuple([bop_7295,])
output2 = relay.Tuple([bop_7298,])
func_7300 = relay.Function([var_7294,], output)
mod['func_7300'] = func_7300
mod = relay.transform.InferType()(mod)
var_7301 = relay.var("var_7301", dtype = "float32", shape = (10, 8, 11))#candidate|7301|(10, 8, 11)|var|float32
output = func_7300(var_7301)
func_7302 = relay.Function([var_7301], output)
mutated_mod['func_7302'] = func_7302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_7343 = relay.TupleGetItem(func_3485_call(), 0)
call_7344 = relay.TupleGetItem(func_3487_call(), 0)
output = relay.Tuple([call_7343,])
output2 = relay.Tuple([call_7344,])
func_7345 = relay.Function([], output)
mod['func_7345'] = func_7345
mod = relay.transform.InferType()(mod)
mutated_mod['func_7345'] = func_7345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7345_call = mutated_mod.get_global_var('func_7345')
call_7346 = func_7345_call()
output = call_7346
func_7347 = relay.Function([], output)
mutated_mod['func_7347'] = func_7347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mod.get_global_var('func_5328')
func_5330_call = mutated_mod.get_global_var('func_5330')
call_7357 = relay.TupleGetItem(func_5328_call(), 1)
call_7358 = relay.TupleGetItem(func_5330_call(), 1)
output = call_7357
output2 = call_7358
func_7417 = relay.Function([], output)
mod['func_7417'] = func_7417
mod = relay.transform.InferType()(mod)
mutated_mod['func_7417'] = func_7417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7417_call = mutated_mod.get_global_var('func_7417')
call_7418 = func_7417_call()
output = call_7418
func_7419 = relay.Function([], output)
mutated_mod['func_7419'] = func_7419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5267_call = mod.get_global_var('func_5267')
func_5269_call = mutated_mod.get_global_var('func_5269')
call_7462 = func_5267_call()
call_7463 = func_5267_call()
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_7482 = relay.TupleGetItem(func_4703_call(), 0)
call_7483 = relay.TupleGetItem(func_4705_call(), 0)
output = relay.Tuple([call_7462,call_7482,])
output2 = relay.Tuple([call_7463,call_7483,])
func_7485 = relay.Function([], output)
mod['func_7485'] = func_7485
mod = relay.transform.InferType()(mod)
output = func_7485()
func_7486 = relay.Function([], output)
mutated_mod['func_7486'] = func_7486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7508 = relay.var("var_7508", dtype = "float32", shape = (5, 14, 13))#candidate|7508|(5, 14, 13)|var|float32
uop_7509 = relay.log10(var_7508.astype('float32')) # shape=(5, 14, 13)
output = uop_7509
output2 = uop_7509
func_7515 = relay.Function([var_7508,], output)
mod['func_7515'] = func_7515
mod = relay.transform.InferType()(mod)
mutated_mod['func_7515'] = func_7515
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7516 = relay.var("var_7516", dtype = "float32", shape = (5, 14, 13))#candidate|7516|(5, 14, 13)|var|float32
func_7515_call = mutated_mod.get_global_var('func_7515')
call_7517 = func_7515_call(var_7516)
output = call_7517
func_7518 = relay.Function([var_7516], output)
mutated_mod['func_7518'] = func_7518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mod.get_global_var('func_5328')
func_5330_call = mutated_mod.get_global_var('func_5330')
call_7530 = relay.TupleGetItem(func_5328_call(), 1)
call_7531 = relay.TupleGetItem(func_5330_call(), 1)
func_7180_call = mod.get_global_var('func_7180')
func_7182_call = mutated_mod.get_global_var('func_7182')
call_7546 = relay.TupleGetItem(func_7180_call(), 0)
call_7547 = relay.TupleGetItem(func_7182_call(), 0)
output = relay.Tuple([call_7530,call_7546,])
output2 = relay.Tuple([call_7531,call_7547,])
func_7550 = relay.Function([], output)
mod['func_7550'] = func_7550
mod = relay.transform.InferType()(mod)
mutated_mod['func_7550'] = func_7550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7550_call = mutated_mod.get_global_var('func_7550')
call_7551 = func_7550_call()
output = call_7551
func_7552 = relay.Function([], output)
mutated_mod['func_7552'] = func_7552
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7553 = relay.var("var_7553", dtype = "float64", shape = (1, 13, 1))#candidate|7553|(1, 13, 1)|var|float64
uop_7554 = relay.erf(var_7553.astype('float64')) # shape=(1, 13, 1)
func_3641_call = mod.get_global_var('func_3641')
func_3643_call = mutated_mod.get_global_var('func_3643')
call_7562 = func_3641_call()
call_7563 = func_3641_call()
bop_7574 = relay.floor_divide(uop_7554.astype('float64'), relay.reshape(var_7553.astype('float64'), relay.shape_of(uop_7554))) # shape=(1, 13, 1)
uop_7580 = relay.asinh(bop_7574.astype('float64')) # shape=(1, 13, 1)
output = relay.Tuple([call_7562,uop_7580,])
output2 = relay.Tuple([call_7563,uop_7580,])
F = relay.Function([var_7553,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7553,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

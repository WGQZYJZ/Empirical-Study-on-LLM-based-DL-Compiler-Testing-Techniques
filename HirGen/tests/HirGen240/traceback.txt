==========mod==========
#[version = "0.0.5"]
def @func_5369(%var_5354: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(13, 4), float32]) {
  %0 = @func_2963() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %1 = cast(%var_5354, dtype="float64") /* ty=Tensor[(616), float64] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 4), float32] */;
  %3 = reshape(%1, newshape=[154, 4]) /* ty=Tensor[(154, 4), float64] */;
  %4 = reshape(%2, newshape=[52]) /* ty=Tensor[(52), float32] */;
  %5 = @func_2287(%3, %4) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) */;
  %6 = %0.0;
  %7 = %5.1;
  (%6, %7, %var_5354, meta[relay.Constant][0] /* ty=Tensor[(13, 4), float32] */)
}

def @func_7242(%var_7219: Tensor[(8, 1, 1), float64]) -> (Tensor[(8, 1, 1), float64], Tensor[(8, 1, 1), float32], Tensor[(8, 1, 1), float32]) {
  %8 = cast(%var_7219, dtype="float64") /* ty=Tensor[(8, 1, 1), float64] */;
  %9 = cast(%var_7219, dtype="float32") /* ty=Tensor[(8, 1, 1), float32] */;
  %10 = cast(%var_7219, dtype="float32") /* ty=Tensor[(8, 1, 1), float32] */;
  %11 = tan(%8) /* ty=Tensor[(8, 1, 1), float64] */;
  %12 = acos(%9) /* ty=Tensor[(8, 1, 1), float32] */;
  %13 = log10(%10) /* ty=Tensor[(8, 1, 1), float32] */;
  (%11, %12, %13)
}

def @func_5996(%var_5946: Tensor[(16, 9, 7), uint16], %var_5947: Tensor[(16, 9, 7), uint16]) -> (Tensor[(16, 9, 7), bool], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(16, 9, 7), float64], Tensor[(9, 2, 10), bool]) {
  %14 = cast(%var_5947, dtype="bool") /* ty=Tensor[(16, 9, 7), bool] */;
  %15 = shape_of(%var_5946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%var_5946, dtype="bool") /* ty=Tensor[(16, 9, 7), bool] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %18 = @func_5808() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %19 = cast(%var_5946, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %20 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %21 = equal(%16, %17) /* ty=Tensor[(16, 9, 7), bool] */;
  %22 = %18.0;
  %23 = @func_2039() /* ty=Tensor[(9, 2, 10), bool] */;
  %24 = asinh(%19) /* ty=Tensor[(16, 9, 7), float64] */;
  %25 = %20.0;
  (%21, %22, %23, %24, %25)
}

def @func_6383() -> (Tensor[(9, 2, 10), uint8], Tensor[(180), bool], Tensor[(1, 52), float32], Tensor[(7, 88), float64]) {
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(180), bool] */, dtype="bool") /* ty=Tensor[(180), bool] */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 52), float32] */, dtype="float32") /* ty=Tensor[(1, 52), float32] */;
  %28 = reshape(%26, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
  %29 = reshape(%27, newshape=[13, 4]) /* ty=Tensor[(13, 4), float32] */;
  %30 = @func_3150(%28, %29) /* ty=(Tensor[(9, 2, 10), uint8], Tensor[(616), float64], Tensor[(13, 4), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %31 = @func_4918() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(7, 88), float64]) */;
  %32 = %31.2;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %34 = asin(%33) /* ty=Tensor[(7, 88), float32] */;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %36 = cosh(%35) /* ty=Tensor[(7, 88), float32] */;
  %37 = cast(%32, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(2), int32] */;
  %39 = cast(%36, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %41 = %30.0;
  %42 = divide(%39, %40) /* ty=Tensor[(7, 88), float64] */;
  (%41, meta[relay.Constant][1] /* ty=Tensor[(180), bool] */, meta[relay.Constant][2] /* ty=Tensor[(1, 52), float32] */, %42)
}

def @func_2178(%var_2162: Tensor[(3, 1, 4), float32], %var_2170: Tensor[(60, 1), float64], %var_2171: Tensor[(616), float64]) -> (Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) {
  %43 = cast(%var_2162, dtype="float32") /* ty=Tensor[(3, 1, 4), float32] */;
  %44 = cast(%var_2170, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %45 = cast(%var_2171, dtype="float64") /* ty=Tensor[(616), float64] */;
  %46 = reshape(%44, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %47 = reshape(%45, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %48 = @func_1209(%46, %47) /* ty=(Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %49 = log10(%43) /* ty=Tensor[(3, 1, 4), float32] */;
  %50 = %48.2;
  (%49, %50, %var_2170, %var_2171)
}

def @func_2226(%var_2218: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), float64],) {
  %51 = @func_2129() /* ty=Tensor[(9, 2, 10), bool] */;
  %52 = cast(%var_2218, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%51, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %56 = mod(%54, %55) /* ty=Tensor[(9, 2, 10), float64] */;
  (%56,)
}

def @func_6158() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 6, 16), float32], Tensor[(864), bool]) {
  %57 = cast(meta[relay.Constant][3] /* ty=Tensor[(864), bool] */, dtype="bool") /* ty=Tensor[(864), bool] */;
  %58 = cast(meta[relay.Constant][3] /* ty=Tensor[(864), bool] */, dtype="bool") /* ty=Tensor[(864), bool] */;
  %59 = reshape(%57, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
  %60 = reshape(%58, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
  %61 = @func_2787(%59, %60) /* ty=(Tensor[(9, 6, 16), bool], Tensor[(9, 6, 16), float32]) */;
  %62 = @func_4221() /* ty=Tensor[(9, 2, 10), bool] */;
  %63 = @func_6047() /* ty=Tensor[(9, 2, 10), bool] */;
  %64 = %61.1;
  (%62, %63, %64, meta[relay.Constant][3] /* ty=Tensor[(864), bool] */)
}

def @func_1424(%var_1409: int32, %var_1410: Tensor[(15, 13, 4), int32]) -> (Tensor[(15, 13, 4), int32],) {
  %65 = cast(%var_1409, dtype="int32") /* ty=int32 */;
  %66 = cast(%var_1410, dtype="int32") /* ty=Tensor[(15, 13, 4), int32] */;
  %67 = multiply(%65, %66) /* ty=Tensor[(15, 13, 4), int32] */;
  (%67,)
}

def @func_3398() -> Tensor[(9, 2, 10), bool] {
  %68 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %68.1
}

def @func_7654(%var_7648: Tensor[(60), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(3, 2, 10), float64], Tensor[(60), float64], Tensor[(9, 2, 10), bool], Tensor[(616), float64]) {
  %69 = cast(%var_7648, dtype="float64") /* ty=Tensor[(60), float64] */;
  %70 = reshape(%69, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %71 = @func_4716(%70) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(3, 2, 10), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
  %72 = cast(meta[relay.Constant][4] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %73 = reshape(%72, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %74 = @func_6326(%73) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(9, 2, 10), bool], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(60, 1), float64], Tensor[(12), float32], Tensor[(616), float64]) */;
  %75 = @func_2039() /* ty=Tensor[(9, 2, 10), bool] */;
  %76 = %71.1;
  %77 = %74.5;
  (%75, %76, %var_7648, %77, meta[relay.Constant][4] /* ty=Tensor[(616), float64] */)
}

def @func_2808() -> Tensor[(9, 2, 10), bool] {
  @func_2129() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_694(%var_627: Tensor[(1, 5, 3), float32], %var_644: Tensor[(18, 6), float64]) -> (Tensor[(?, 5, 3), int32], Tensor[(6, 2, 9), uint16]) {
  %78 = cast(%var_627, dtype="float32") /* ty=Tensor[(1, 5, 3), float32] */;
  %79 = cos(%78) /* ty=Tensor[(1, 5, 3), float32] */;
  %80 = cast(%var_627, dtype="float64") /* ty=Tensor[(1, 5, 3), float64] */;
  %81 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%79, dtype="float64") /* ty=Tensor[(1, 5, 3), float64] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %84 = power(%82, %83) /* ty=Tensor[(?, 5, 3), float64] */;
  %85 = cast(%var_627, dtype="uint8") /* ty=Tensor[(1, 5, 3), uint8] */;
  %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%84, dtype="uint8") /* ty=Tensor[(?, 5, 3), uint8] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %89 = add(%87, %88) /* ty=Tensor[(?, 5, 3), uint8] */;
  %90 = cast(%79, dtype="int32") /* ty=Tensor[(1, 5, 3), int32] */;
  %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%89, dtype="int32") /* ty=Tensor[(?, 5, 3), int32] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %94 = bitwise_xor(%92, %93) /* ty=Tensor[(?, 5, 3), int32] */;
  %95 = cast(%84, dtype="uint32") /* ty=Tensor[(?, 5, 3), uint32] */;
  %96 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%79, dtype="uint32") /* ty=Tensor[(1, 5, 3), uint32] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %99 = bitwise_and(%97, %98) /* ty=Tensor[(?, 5, 3), uint32] */;
  %100 = cast(%99, dtype="int32") /* ty=Tensor[(?, 5, 3), int32] */;
  %101 = shape_of(%94, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%94, dtype="int32") /* ty=Tensor[(?, 5, 3), int32] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %104 = cast(%var_644, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %105 = cast(%var_644, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %106 = reshape(%104, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
  %107 = reshape(%105, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
  %108 = @func_251(%106, %107) /* ty=(Tensor[(6, 2, 9), bool], Tensor[(6, 2, 9), float64]) */;
  %109 = %108.1;
  %110 = cast(%var_644, dtype="uint16") /* ty=Tensor[(18, 6), uint16] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="uint16") /* ty=Tensor[(6, 2, 9), uint16] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %114 = subtract(%102, %103) /* ty=Tensor[(?, 5, 3), int32] */;
  %115 = multiply(%112, %113) /* ty=Tensor[(6, 2, 9), uint16] */;
  (%114, %115)
}

def @func_3695() -> Tensor[(9, 2, 10), bool] {
  @func_3398() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_7765() -> (Tensor[(9, 2, 10), bool], Tensor[(1, 52), float32]) {
  %116 = @func_3387() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) */;
  %117 = %116.0;
  %118 = @func_7728() /* ty=Tensor[(1, 52), float32] */;
  (%117, %118)
}

def @func_5808() -> (Tensor[(9, 2, 10), float32],) {
  %119 = @func_3769() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %120 = %119.0;
  %121 = cast(%120, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %122 = cos(%121) /* ty=Tensor[(9, 2, 10), float32] */;
  (%122,)
}

def @func_6071(%var_6060: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), float64],) {
  %123 = @func_6047() /* ty=Tensor[(9, 2, 10), bool] */;
  %124 = cast(%var_6060, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %125 = shape_of(%123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%123, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %128 = power(%126, %127) /* ty=Tensor[(9, 2, 10), float64] */;
  %129 = cast(%128, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %130 = asin(%129) /* ty=Tensor[(9, 2, 10), float64] */;
  (%130,)
}

def @func_251(%var_216: Tensor[(6, 2, 9), float64], %var_217: Tensor[(6, 2, 9), float64]) -> (Tensor[(6, 2, 9), bool], Tensor[(6, 2, 9), float64]) {
  %131 = cast(%var_217, dtype="bool") /* ty=Tensor[(6, 2, 9), bool] */;
  %132 = shape_of(%var_216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%var_216, dtype="bool") /* ty=Tensor[(6, 2, 9), bool] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %135 = cast(%var_217, dtype="float64") /* ty=Tensor[(6, 2, 9), float64] */;
  %136 = less(%133, %134) /* ty=Tensor[(6, 2, 9), bool] */;
  %137 = atanh(%135) /* ty=Tensor[(6, 2, 9), float64] */;
  (%136, %137)
}

def @func_3150(%var_3131: Tensor[(9, 2, 10), bool], %var_3138: Tensor[(13, 4), float32]) -> (Tensor[(9, 2, 10), uint8], Tensor[(616), float64], Tensor[(13, 4), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) {
  %138 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %139 = %138.0;
  %140 = cast(%var_3131, dtype="uint8") /* ty=Tensor[(9, 2, 10), uint8] */;
  %141 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%139, dtype="uint8") /* ty=Tensor[(9, 2, 10), uint8] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %144 = cast(%var_3131, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %145 = cast(meta[relay.Constant][5] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %146 = cast(%var_3138, dtype="float32") /* ty=Tensor[(13, 4), float32] */;
  %147 = reshape(%145, newshape=[154, 4]) /* ty=Tensor[(154, 4), float64] */;
  %148 = reshape(%146, newshape=[52]) /* ty=Tensor[(52), float32] */;
  %149 = @func_2287(%147, %148) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) */;
  %150 = %149.0;
  %151 = cast(%150, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %152 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%139, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %155 = left_shift(%142, %143) /* ty=Tensor[(9, 2, 10), uint8] */;
  %156 = exp(%144) /* ty=Tensor[(9, 2, 10), float32] */;
  %157 = not_equal(%153, %154) /* ty=Tensor[(9, 2, 10), bool] */;
  (%155, meta[relay.Constant][5] /* ty=Tensor[(616), float64] */, %var_3138, %156, %157)
}

def @func_2931(%var_2922: Tensor[(864), bool]) -> (Tensor[(9, 2, 10), float32], Tensor[(9, 6, 16), bool], Tensor[(864), bool]) {
  %158 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %159 = %158.0;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %161 = cast(%var_2922, dtype="bool") /* ty=Tensor[(864), bool] */;
  %162 = cast(%var_2922, dtype="bool") /* ty=Tensor[(864), bool] */;
  %163 = reshape(%161, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
  %164 = reshape(%162, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
  %165 = @func_2787(%163, %164) /* ty=(Tensor[(9, 6, 16), bool], Tensor[(9, 6, 16), float32]) */;
  %166 = acosh(%160) /* ty=Tensor[(9, 2, 10), float32] */;
  %167 = %165.0;
  (%166, %167, %var_2922)
}

def @func_6090() -> Tensor[(9, 2, 10), bool] {
  @func_2808() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_6933(%var_6894: Tensor[(7, 11, 12), float64], %var_6917: Tensor[(7, 11, 12), float64]) -> (Tensor[(7, 11, 12), float64], Tensor[(7, 11, 12), int8]) {
  %168 = cast(%var_6894, dtype="float64") /* ty=Tensor[(7, 11, 12), float64] */;
  %169 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(7, 11, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 11, 12), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 12), float64] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %172 = cast(%var_6917, dtype="int8") /* ty=Tensor[(7, 11, 12), int8] */;
  %173 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(7, 11, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 11, 12), float64] */, dtype="int8") /* ty=Tensor[(7, 11, 12), int8] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %176 = mod(%170, %171) /* ty=Tensor[(7, 11, 12), float64] */;
  %177 = logical_xor(%174, %175) /* ty=Tensor[(7, 11, 12), int8] */;
  (%176, %177)
}

def @func_5909(%var_5889: Tensor[(24, 12), int16]) -> (Tensor[(9, 2, 10), bool], Tensor[(24, 12), int16], Tensor[(12, 8, 3), float64], Tensor[(10, 3, 13), float64]) {
  %178 = cast(%var_5889, dtype="int16") /* ty=Tensor[(24, 12), int16] */;
  %179 = cast(%var_5889, dtype="int16") /* ty=Tensor[(24, 12), int16] */;
  %180 = reshape(%178, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %181 = reshape(%179, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %182 = @func_835(%180, %181) /* ty=(Tensor[(12, 8, 3), float64],) */;
  %183 = %182.0;
  %184 = cast(%183, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %185 = @func_4313() /* ty=(Tensor[(10, 3, 13), float64],) */;
  %186 = @func_2808() /* ty=Tensor[(9, 2, 10), bool] */;
  %187 = cosh(%184) /* ty=Tensor[(12, 8, 3), float64] */;
  %188 = %185.0;
  (%186, %var_5889, %187, %188)
}

def @func_7467() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), float32]) {
  %189 = @func_3010() /* ty=Tensor[(9, 2, 10), bool] */;
  %190 = cast(%189, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %191 = reshape(%190, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
  %192 = @func_5172(%191) /* ty=(Tensor[(9, 2, 10), float64],) */;
  %193 = @func_6265() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %194 = @func_7317() /* ty=Tensor[(9, 2, 10), bool] */;
  %195 = %192.0;
  %196 = %193.0;
  (%194, %189, %195, %196)
}

def @func_4854() -> Tensor[(9, 2, 10), bool] {
  @func_4666() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_125(%var_116: Tensor[(8, 11, 7), float64]) -> (Tensor[(8, 11, 7), float64],) {
  %197 = cast(%var_116, dtype="float64") /* ty=Tensor[(8, 11, 7), float64] */;
  %198 = asin(%197) /* ty=Tensor[(8, 11, 7), float64] */;
  (%198,)
}

def @main(%var_7850: Tensor[(3, 12, 5), int64], %var_7856: Tensor[(3, 12, 5), int64], %var_7861: Tensor[(3, 12, 5), int64]) -> (Tensor[(3, 12, 5), int64], Tensor[(3, 12, 5), uint64], Tensor[(3, 12, 5), bool]) {
  %199 = cast(%var_7850, dtype="int64") /* ty=Tensor[(3, 12, 5), int64] */;
  %200 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(3, 12, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 12, 5), int64] */, dtype="int64") /* ty=Tensor[(3, 12, 5), int64] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %203 = cast(%var_7856, dtype="uint64") /* ty=Tensor[(3, 12, 5), uint64] */;
  %204 = shape_of(%var_7850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%var_7850, dtype="uint64") /* ty=Tensor[(3, 12, 5), uint64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %207 = cast(%var_7861, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %208 = shape_of(%var_7856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%var_7856, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %211 = bitwise_or(%201, %202) /* ty=Tensor[(3, 12, 5), int64] */;
  %212 = minimum(%205, %206) /* ty=Tensor[(3, 12, 5), uint64] */;
  %213 = less(%209, %210) /* ty=Tensor[(3, 12, 5), bool] */;
  (%211, %212, %213)
}

def @func_3047(%var_3035: Tensor[(315), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(12), float32], Tensor[(315), float32], Tensor[(9, 2, 10), bool]) {
  %214 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %215 = cast(meta[relay.Constant][8] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %216 = cast(%var_3035, dtype="float32") /* ty=Tensor[(315), float32] */;
  %217 = reshape(%215, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %218 = reshape(%216, newshape=[15, 21]) /* ty=Tensor[(15, 21), float32] */;
  %219 = @func_2627(%217, %218) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(15, 13, 4), int32], int32, Tensor[(780), int32], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool], Tensor[(7, 3, 1), float64], Tensor[(616), float64], Tensor[(15, 21), bool]) */;
  %220 = %214.0;
  %221 = %219.8;
  %222 = @func_2039() /* ty=Tensor[(9, 2, 10), bool] */;
  (%220, %221, meta[relay.Constant][8] /* ty=Tensor[(12), float32] */, %var_3035, %222)
}

def @func_6490(%var_6485: Tensor[(12), float32]) -> (Tensor[(9, 2, 10), float32], Tensor[(10, 3, 13), float64], Tensor[(15, 21), bool], Tensor[(12), float32], Tensor[(315), float32]) {
  %223 = cast(%var_6485, dtype="float32") /* ty=Tensor[(12), float32] */;
  %224 = cast(meta[relay.Constant][9] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %225 = reshape(%223, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %226 = reshape(%224, newshape=[15, 21]) /* ty=Tensor[(15, 21), float32] */;
  %227 = @func_2627(%225, %226) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(15, 13, 4), int32], int32, Tensor[(780), int32], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool], Tensor[(7, 3, 1), float64], Tensor[(616), float64], Tensor[(15, 21), bool]) */;
  %228 = @func_3790() /* ty=Tensor[(9, 2, 10), float32] */;
  %229 = @func_4354() /* ty=Tensor[(10, 3, 13), float64] */;
  %230 = %227.11;
  (%228, %229, %230, %var_6485, meta[relay.Constant][9] /* ty=Tensor[(315), float32] */)
}

def @func_6326(%var_6323: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(9, 2, 10), bool], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(60, 1), float64], Tensor[(12), float32], Tensor[(616), float64]) {
  %231 = @func_5252() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %232 = cast(meta[relay.Constant][10] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %233 = cast(meta[relay.Constant][11] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %234 = reshape(%232, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %235 = reshape(%233, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %236 = @func_5149(%234, %235) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(616), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64]) */;
  %237 = cast(meta[relay.Constant][12] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %238 = reshape(%237, newshape=[24, 12]) /* ty=Tensor[(24, 12), int16] */;
  %239 = @func_5909(%238) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(24, 12), int16], Tensor[(12, 8, 3), float64], Tensor[(10, 3, 13), float64]) */;
  %240 = cast(meta[relay.Constant][13] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %241 = cast(meta[relay.Constant][11] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %242 = cast(%var_6323, dtype="float64") /* ty=Tensor[(616), float64] */;
  %243 = reshape(%240, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %244 = reshape(%241, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
  %245 = reshape(%242, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %246 = @func_2178(%243, %244, %245) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
  %247 = %231.0;
  %248 = @func_6115() /* ty=Tensor[(9, 2, 10), float32] */;
  %249 = %236.2;
  %250 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  %251 = %239.2;
  %252 = %246.2;
  (%247, %248, %249, meta[relay.Constant][10] /* ty=Tensor[(528), float64] */, meta[relay.Constant][11] /* ty=Tensor[(60), float64] */, %250, %251, meta[relay.Constant][12] /* ty=Tensor[(288), int16] */, %252, meta[relay.Constant][13] /* ty=Tensor[(12), float32] */, %var_6323)
}

def @func_2735() -> (Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) {
  %253 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  %254 = cast(%253, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %255 = log2(%254) /* ty=Tensor[(9, 2, 10), float32] */;
  %256 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  (%255, %256)
}

def @func_7101(%var_7063: Tensor[(616), float64], %var_7069: Tensor[(80), uint16]) -> (Tensor[(9, 2, 10), bool], Tensor[(616), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(8, 5, 2), float64], Tensor[(80), uint16], Tensor[(9, 2, 10), bool]) {
  %257 = cast(meta[relay.Constant][14] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %258 = cast(%var_7063, dtype="float64") /* ty=Tensor[(616), float64] */;
  %259 = reshape(%257, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %260 = reshape(%258, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %261 = @func_1209(%259, %260) /* ty=(Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %262 = cast(%var_7069, dtype="uint16") /* ty=Tensor[(80), uint16] */;
  %263 = reshape(%262, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint16] */;
  %264 = @func_1255(%263) /* ty=(Tensor[(8, 5, 2), float64],) */;
  %265 = @func_2689() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %266 = @func_4221() /* ty=Tensor[(9, 2, 10), bool] */;
  %267 = %261.2;
  %268 = %264.0;
  %269 = %265.0;
  (%266, %267, meta[relay.Constant][14] /* ty=Tensor[(60), float64] */, %var_7063, %268, %var_7069, %269)
}

def @func_4612() -> Tensor[(9, 2, 10), bool] {
  %270 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %270.1
}

def @func_3445(%var_3423: Tensor[(9, 2, 10), float32], %var_3440: Tensor[(528), float64], %var_3442: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) {
  %271 = @func_2963() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %272 = %271.0;
  %273 = cast(%var_3423, dtype="int32") /* ty=Tensor[(9, 2, 10), int32] */;
  %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%272, dtype="int32") /* ty=Tensor[(9, 2, 10), int32] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %277 = cast(%var_3423, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %278 = cast(%var_3440, dtype="float64") /* ty=Tensor[(528), float64] */;
  %279 = cast(meta[relay.Constant][15] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %280 = cast(%var_3442, dtype="float64") /* ty=Tensor[(616), float64] */;
  %281 = reshape(%278, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %282 = reshape(%279, newshape=[1, 60]) /* ty=Tensor[(1, 60), float64] */;
  %283 = reshape(%280, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %284 = @func_3213(%281, %282, %283) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(3, 4), float32], Tensor[(616), float64], Tensor[(1, 60), float64]) */;
  %285 = bitwise_or(%275, %276) /* ty=Tensor[(9, 2, 10), int32] */;
  %286 = erf(%277) /* ty=Tensor[(9, 2, 10), float32] */;
  %287 = %284.1;
  (%285, %286, %287, %var_3440, meta[relay.Constant][15] /* ty=Tensor[(60), float64] */, %var_3442)
}

def @func_7522() -> (Tensor[(1, 52), float32],) {
  %288 = @func_6383() /* ty=(Tensor[(9, 2, 10), uint8], Tensor[(180), bool], Tensor[(1, 52), float32], Tensor[(7, 88), float64]) */;
  %289 = %288.2;
  (%289,)
}

def @func_1554(%var_1542: Tensor[(11, 12, 4), float64], %var_1543: Tensor[(11, 12, 4), float64]) -> (Tensor[(11, 12, 4), float64],) {
  %290 = cast(%var_1543, dtype="float64") /* ty=Tensor[(11, 12, 4), float64] */;
  %291 = shape_of(%var_1542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%var_1542, dtype="float64") /* ty=Tensor[(11, 12, 4), float64] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %294 = floor_mod(%292, %293) /* ty=Tensor[(11, 12, 4), float64] */;
  (%294,)
}

def @func_3010() -> Tensor[(9, 2, 10), bool] {
  @func_2129() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_5172(%var_5164: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), float64],) {
  %295 = @func_2808() /* ty=Tensor[(9, 2, 10), bool] */;
  %296 = cast(%var_5164, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %297 = shape_of(%295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%295, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %300 = add(%298, %299) /* ty=Tensor[(9, 2, 10), float64] */;
  (%300,)
}

def @func_1713(%var_1705: Tensor[(14, 10, 14), float64]) -> (Tensor[(14, 10, 14), bool],) {
  %301 = cast(%var_1705, dtype="float64") /* ty=Tensor[(14, 10, 14), float64] */;
  %302 = acos(%301) /* ty=Tensor[(14, 10, 14), float64] */;
  %303 = cast(%var_1705, dtype="bool") /* ty=Tensor[(14, 10, 14), bool] */;
  %304 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%302, dtype="bool") /* ty=Tensor[(14, 10, 14), bool] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %307 = not_equal(%305, %306) /* ty=Tensor[(14, 10, 14), bool] */;
  (%307,)
}

def @func_6265() -> (Tensor[(9, 2, 10), float32],) {
  %308 = @func_4114() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32]) */;
  %309 = %308.1;
  (%309,)
}

def @func_6690() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(315), float32]) {
  %310 = @func_2808() /* ty=Tensor[(9, 2, 10), bool] */;
  %311 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 2, 10), bool] */, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%310, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %315 = cast(meta[relay.Constant][17] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %316 = reshape(%315, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %317 = @func_4790(%316) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(60), float64], Tensor[(12), float32], Tensor[(315), float32]) */;
  %318 = greater_equal(%313, %314) /* ty=Tensor[(9, 2, 10), bool] */;
  %319 = %317.0;
  (%318, %319, meta[relay.Constant][17] /* ty=Tensor[(315), float32] */)
}

def @func_3790() -> Tensor[(9, 2, 10), float32] {
  %320 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %320.0
}

def @func_1255(%var_1239: Tensor[(8, 5, 2), uint16]) -> (Tensor[(8, 5, 2), float64],) {
  %321 = cast(%var_1239, dtype="bool") /* ty=Tensor[(8, 5, 2), bool] */;
  %322 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(8, 5, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 5, 2), uint16] */, dtype="bool") /* ty=Tensor[(8, 5, 2), bool] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %325 = not_equal(%323, %324) /* ty=Tensor[(8, 5, 2), bool] */;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(8, 5, 2), float64] */;
  %327 = sigmoid(%326) /* ty=Tensor[(8, 5, 2), float64] */;
  (%327,)
}

def @func_4532(%var_4510: Tensor[(2, 14, 8), float64], %var_4523: Tensor[(180), bool]) -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float32], Tensor[(60), float64], Tensor[(180), bool]) {
  %328 = cast(%var_4510, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %329 = cast(%var_4510, dtype="float32") /* ty=Tensor[(2, 14, 8), float32] */;
  %330 = cast(%var_4523, dtype="bool") /* ty=Tensor[(180), bool] */;
  %331 = reshape(%330, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
  %332 = @func_4284(%331) /* ty=(Tensor[(9, 2, 10), uint32], Tensor[(60), float64], Tensor[(528), float64], Tensor[(616), float64]) */;
  %333 = sin(%328) /* ty=Tensor[(2, 14, 8), float64] */;
  %334 = cos(%329) /* ty=Tensor[(2, 14, 8), float32] */;
  %335 = %332.1;
  (%333, %334, %335, %var_4523)
}

def @func_2129() -> Tensor[(9, 2, 10), bool] {
  @func_2039() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_7489() -> (Tensor[(9, 2, 10), bool],) {
  %336 = @func_6090() /* ty=Tensor[(9, 2, 10), bool] */;
  (%336,)
}

def @func_5149(%var_5106: Tensor[(528), float64], %var_5128: Tensor[(60), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(616), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64]) {
  %337 = @func_2963() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %338 = %337.0;
  %339 = cast(%338, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %340 = cast(%var_5106, dtype="float64") /* ty=Tensor[(528), float64] */;
  %341 = cast(meta[relay.Constant][19] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %342 = reshape(%339, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), float32] */;
  %343 = reshape(%340, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %344 = reshape(%341, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %345 = @func_3445(%342, %343, %344) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
  %346 = cast(meta[relay.Constant][20] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %347 = cast(%var_5128, dtype="float64") /* ty=Tensor[(60), float64] */;
  %348 = %345.5;
  %349 = cast(%348, dtype="float64") /* ty=Tensor[(616), float64] */;
  %350 = reshape(%346, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %351 = reshape(%347, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
  %352 = reshape(%349, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %353 = @func_2178(%350, %351, %352) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
  %354 = cast(meta[relay.Constant][19] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %355 = %353.3;
  %356 = sinh(%354) /* ty=Tensor[(616), float64] */;
  (%338, %348, %var_5106, %355, meta[relay.Constant][20] /* ty=Tensor[(12), float32] */, %var_5128, %356)
}

def @func_7550(%var_7534: Tensor[(11, 5, 11), float64]) -> (Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64]) {
  %357 = cast(%var_7534, dtype="float64") /* ty=Tensor[(11, 5, 11), float64] */;
  %358 = cast(%var_7534, dtype="float64") /* ty=Tensor[(11, 5, 11), float64] */;
  %359 = rsqrt(%357) /* ty=Tensor[(11, 5, 11), float64] */;
  %360 = cos(%358) /* ty=Tensor[(11, 5, 11), float64] */;
  (%359, %360)
}

def @func_4284(%var_4264: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), uint32], Tensor[(60), float64], Tensor[(528), float64], Tensor[(616), float64]) {
  %361 = @func_2689() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %362 = %361.0;
  %363 = cast(%var_4264, dtype="uint32") /* ty=Tensor[(9, 2, 10), uint32] */;
  %364 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%362, dtype="uint32") /* ty=Tensor[(9, 2, 10), uint32] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %367 = cast(%var_4264, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %368 = cast(meta[relay.Constant][21] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %369 = cast(meta[relay.Constant][22] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %370 = reshape(%367, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), float32] */;
  %371 = reshape(%368, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %372 = reshape(%369, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %373 = @func_3445(%370, %371, %372) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
  %374 = right_shift(%365, %366) /* ty=Tensor[(9, 2, 10), uint32] */;
  %375 = %373.4;
  (%374, %375, meta[relay.Constant][21] /* ty=Tensor[(528), float64] */, meta[relay.Constant][22] /* ty=Tensor[(616), float64] */)
}

def @func_6115() -> Tensor[(9, 2, 10), float32] {
  @func_3790() /* ty=Tensor[(9, 2, 10), float32] */
}

def @func_7030(%var_6969: Tensor[(52), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(13, 4), float32], Tensor[(52), float32]) {
  %376 = @func_6090() /* ty=Tensor[(9, 2, 10), bool] */;
  %377 = cast(%376, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %378 = cast(%var_6969, dtype="float32") /* ty=Tensor[(52), float32] */;
  %379 = reshape(%377, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
  %380 = reshape(%378, newshape=[13, 4]) /* ty=Tensor[(13, 4), float32] */;
  %381 = @func_3150(%379, %380) /* ty=(Tensor[(9, 2, 10), uint8], Tensor[(616), float64], Tensor[(13, 4), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %382 = @func_4666() /* ty=Tensor[(9, 2, 10), bool] */;
  %383 = %381.2;
  (%376, %382, %383, %var_6969)
}

def @func_2627(%var_2585: Tensor[(12), float32], %var_2621: Tensor[(15, 21), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(15, 13, 4), int32], int32, Tensor[(780), int32], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool], Tensor[(7, 3, 1), float64], Tensor[(616), float64], Tensor[(15, 21), bool]) {
  %384 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %385 = cast(2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %386 = cast(meta[relay.Constant][23] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %387 = reshape(%385, newshape=[]) /* ty=int32 */;
  %388 = reshape(%386, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), int32] */;
  %389 = @func_1424(%387, %388) /* ty=(Tensor[(15, 13, 4), int32],) */;
  %390 = cast(%var_2585, dtype="float32") /* ty=Tensor[(12), float32] */;
  %391 = cast(meta[relay.Constant][24] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %392 = cast(meta[relay.Constant][25] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %393 = reshape(%390, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %394 = reshape(%391, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
  %395 = reshape(%392, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %396 = @func_2178(%393, %394, %395) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
  %397 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 21), float64] */, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
  %398 = reshape(%397, newshape=[7, 3, 1]) /* ty=Tensor[(7, 3, 1), float64] */;
  %399 = cast(%var_2585, dtype="float32") /* ty=Tensor[(12), float32] */;
  %400 = cast(meta[relay.Constant][24] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %401 = %396.3;
  %402 = cast(%401, dtype="float64") /* ty=Tensor[(616), float64] */;
  %403 = reshape(%399, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %404 = reshape(%400, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
  %405 = reshape(%402, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %406 = @func_2178(%403, %404, %405) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
  %407 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 21), float64] */, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  %408 = sinh(%407) /* ty=Tensor[(1, 21), float32] */;
  %409 = cast(%408, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
  %410 = cast(%var_2621, dtype="bool") /* ty=Tensor[(15, 21), bool] */;
  %411 = %384.0;
  %412 = %389.0;
  %413 = @func_2129() /* ty=Tensor[(9, 2, 10), bool] */;
  %414 = @func_1762(%398) /* ty=Tensor[(7, 3, 1), float64] */;
  %415 = %406.3;
  %416 = not_equal(%409, %410) /* ty=Tensor[(15, 21), bool] */;
  (%411, %412, 2 /* ty=int32 */, meta[relay.Constant][23] /* ty=Tensor[(780), int32] */, %401, %var_2585, meta[relay.Constant][24] /* ty=Tensor[(60), float64] */, meta[relay.Constant][25] /* ty=Tensor[(616), float64] */, %413, %414, %415, %416)
}

def @func_4918() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(7, 88), float64]) {
  %417 = @func_3387() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) */;
  %418 = @func_3010() /* ty=Tensor[(9, 2, 10), bool] */;
  %419 = @func_4854() /* ty=Tensor[(9, 2, 10), bool] */;
  %420 = %417.3;
  (%418, %419, %420)
}

def @func_7728() -> Tensor[(1, 52), float32] {
  %421 = @func_7522() /* ty=(Tensor[(1, 52), float32],) */;
  %422 = %421.0;
  %423 = cast(%422, dtype="float32") /* ty=Tensor[(1, 52), float32] */;
  asin(%423) /* ty=Tensor[(1, 52), float32] */
}

def @func_4207(%var_4140: Tensor[(9, 2, 10), bool], %var_4163: Tensor[(117), float64], %var_4192: Tensor[(15), float32], %var_4194: Tensor[(528), float64], %var_4195: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 12, 13), float32], Tensor[(3, 468), float64], Tensor[(117), float32], Tensor[(12, 8, 3), float64], Tensor[(15), float32], Tensor[(288), int16], Tensor[(528), float64], Tensor[(616), float64], Tensor[(117), int16]) {
  %424 = @func_4114() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32]) */;
  %425 = %424.0;
  %426 = cast(%var_4140, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%425, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %430 = cast(%var_4163, dtype="float64") /* ty=Tensor[(117), float64] */;
  %431 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 468), float64] */, dtype="float64") /* ty=Tensor[(3, 468), float64] */;
  %432 = reshape(%430, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %433 = reshape(%431, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %434 = @func_3915(%432, %433) /* ty=(Tensor[(9, 12, 13), float32],) */;
  %435 = cast(%var_4163, dtype="float64") /* ty=Tensor[(117), float64] */;
  %436 = asinh(%435) /* ty=Tensor[(117), float64] */;
  %437 = cast(%436, dtype="float32") /* ty=Tensor[(117), float32] */;
  %438 = cast(%var_4192, dtype="float32") /* ty=Tensor[(15), float32] */;
  %439 = cast(meta[relay.Constant][28] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %440 = cast(%var_4194, dtype="float64") /* ty=Tensor[(528), float64] */;
  %441 = cast(%var_4195, dtype="float64") /* ty=Tensor[(616), float64] */;
  %442 = reshape(%438, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %443 = reshape(%439, newshape=[288]) /* ty=Tensor[(288), int16] */;
  %444 = reshape(%440, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %445 = reshape(%441, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %446 = @func_3996(%442, %443, %444, %445) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(?, 5, 3), int32], Tensor[(15), float32], Tensor[(108), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(616), float64]) */;
  %447 = cast(%436, dtype="float64") /* ty=Tensor[(117), float64] */;
  %448 = acosh(%447) /* ty=Tensor[(117), float64] */;
  %449 = cast(%var_4163, dtype="int16") /* ty=Tensor[(117), int16] */;
  %450 = shape_of(%448, dtype="int32") /* ty=Tensor[(1), int32] */;
  %451 = cast(%448, dtype="int16") /* ty=Tensor[(117), int16] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?), int16] */;
  %453 = logical_and(%428, %429) /* ty=Tensor[(9, 2, 10), bool] */;
  %454 = %434.0;
  %455 = log(%437) /* ty=Tensor[(117), float32] */;
  %456 = %446.4;
  %457 = right_shift(%451, %452) /* ty=Tensor[(117), int16] */;
  (%453, %454, meta[relay.Constant][27] /* ty=Tensor[(3, 468), float64] */, %455, %456, %var_4192, meta[relay.Constant][28] /* ty=Tensor[(288), int16] */, %var_4194, %var_4195, %457)
}

def @func_4608() -> (Tensor[(9, 2, 10), bool], Tensor[(10, 3, 13), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), bool], Tensor[(315), float32]) {
  %458 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %459 = cast(meta[relay.Constant][29] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %460 = cast(meta[relay.Constant][29] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %461 = reshape(%459, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %462 = reshape(%460, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %463 = @func_835(%461, %462) /* ty=(Tensor[(12, 8, 3), float64],) */;
  %464 = cast(meta[relay.Constant][30] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %465 = reshape(%464, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %466 = @func_3047(%465) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(12), float32], Tensor[(315), float32], Tensor[(9, 2, 10), bool]) */;
  %467 = %458.0;
  %468 = @func_4354() /* ty=Tensor[(10, 3, 13), float64] */;
  %469 = %463.0;
  %470 = %466.0;
  (%467, %468, %469, meta[relay.Constant][29] /* ty=Tensor[(288), int16] */, %470, meta[relay.Constant][30] /* ty=Tensor[(315), float32] */)
}

def @func_7365() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) {
  %471 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %472 = @func_2129() /* ty=Tensor[(9, 2, 10), bool] */;
  %473 = %471.0;
  (%472, %473)
}

def @func_5533() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) {
  %474 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %475 = %474.0;
  %476 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  (%475, %476)
}

def @func_7278() -> Tensor[(9, 2, 10), bool] {
  @func_5943() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_5040() -> (Tensor[(9, 2, 10), bool],) {
  %477 = @func_2689() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %478 = %477.0;
  (%478,)
}

def @func_7592(%var_7576: Tensor[(15, 2, 15), uint16], %var_7577: Tensor[(15, 2, 15), uint16]) -> Tensor[(15, 2, 15), bool] {
  %479 = cast(%var_7577, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
  %480 = shape_of(%var_7576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%var_7576, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%481, %482) /* ty=Tensor[(15, 2, 15), bool] */
}

def @func_3915(%var_3896: Tensor[(9, 1, 13), float64], %var_3897: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float32],) {
  %483 = cast(%var_3896, dtype="float64") /* ty=Tensor[(9, 1, 13), float64] */;
  %484 = cast(%var_3897, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %485 = floor_divide(%483, %484) /* ty=Tensor[(9, 12, 13), float64] */;
  %486 = cast(%var_3896, dtype="int8") /* ty=Tensor[(9, 1, 13), int8] */;
  %487 = cast(%var_3897, dtype="int8") /* ty=Tensor[(9, 12, 13), int8] */;
  %488 = left_shift(%486, %487) /* ty=Tensor[(9, 12, 13), int8] */;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %490 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %491 = cast(%485, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %493 = add(%491, %492) /* ty=Tensor[(9, 12, 13), float32] */;
  (%493,)
}

def @func_7785() -> Tensor[(9, 2, 10), bool] {
  @func_2039() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_7192(%var_7136: Tensor[(616), float64], %var_7137: Tensor[(52), float32], %var_7159: Tensor[(52), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(154, 4), float64], Tensor[(616), float64], Tensor[(52), int32]) {
  %494 = cast(%var_7136, dtype="float64") /* ty=Tensor[(616), float64] */;
  %495 = cast(%var_7137, dtype="float32") /* ty=Tensor[(52), float32] */;
  %496 = reshape(%494, newshape=[154, 4]) /* ty=Tensor[(154, 4), float64] */;
  %497 = reshape(%495, newshape=[52]) /* ty=Tensor[(52), float32] */;
  %498 = @func_2287(%496, %497) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) */;
  %499 = cast(%var_7137, dtype="float64") /* ty=Tensor[(52), float64] */;
  %500 = asinh(%499) /* ty=Tensor[(52), float64] */;
  %501 = cast(%var_7159, dtype="uint32") /* ty=Tensor[(52), uint32] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(1), int32] */;
  %503 = cast(%500, dtype="uint32") /* ty=Tensor[(52), uint32] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %505 = add(%503, %504) /* ty=Tensor[(52), uint32] */;
  %506 = cast(%505, dtype="int32") /* ty=Tensor[(52), int32] */;
  %507 = shape_of(%500, dtype="int32") /* ty=Tensor[(1), int32] */;
  %508 = cast(%500, dtype="int32") /* ty=Tensor[(52), int32] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?), int32] */;
  %510 = @func_6090() /* ty=Tensor[(9, 2, 10), bool] */;
  %511 = %498.2;
  %512 = left_shift(%508, %509) /* ty=Tensor[(52), int32] */;
  (%510, %511, %var_7136, %512)
}

def @func_2689() -> (Tensor[(9, 2, 10), bool],) {
  %513 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %514 = %513.0;
  (%514,)
}

def @func_4221() -> Tensor[(9, 2, 10), bool] {
  @func_3398() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_4790(%var_4767: Tensor[(315), float32]) -> (Tensor[(9, 2, 10), float32], Tensor[(60), float64], Tensor[(12), float32], Tensor[(315), float32]) {
  %515 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %516 = cast(meta[relay.Constant][31] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %517 = cast(%var_4767, dtype="float32") /* ty=Tensor[(315), float32] */;
  %518 = reshape(%516, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %519 = reshape(%517, newshape=[15, 21]) /* ty=Tensor[(15, 21), float32] */;
  %520 = @func_2627(%518, %519) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(15, 13, 4), int32], int32, Tensor[(780), int32], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool], Tensor[(7, 3, 1), float64], Tensor[(616), float64], Tensor[(15, 21), bool]) */;
  %521 = %515.0;
  %522 = %520.6;
  (%521, %522, meta[relay.Constant][31] /* ty=Tensor[(12), float32] */, %var_4767)
}

def @func_6258() -> (Tensor[(10, 3, 13), float64],) {
  %523 = @func_4313() /* ty=(Tensor[(10, 3, 13), float64],) */;
  %524 = %523.0;
  (%524,)
}

def @func_2787(%var_2771: Tensor[(9, 6, 16), bool], %var_2772: Tensor[(9, 6, 16), bool]) -> (Tensor[(9, 6, 16), bool], Tensor[(9, 6, 16), float32]) {
  %525 = cast(%var_2772, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %526 = shape_of(%var_2771, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%var_2771, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %529 = cast(%var_2771, dtype="float32") /* ty=Tensor[(9, 6, 16), float32] */;
  %530 = logical_or(%527, %528) /* ty=Tensor[(9, 6, 16), bool] */;
  %531 = sinh(%529) /* ty=Tensor[(9, 6, 16), float32] */;
  (%530, %531)
}

def @func_4354() -> Tensor[(10, 3, 13), float64] {
  %532 = @func_4313() /* ty=(Tensor[(10, 3, 13), float64],) */;
  %532.0
}

def @func_2149() -> Tensor[(9, 2, 10), bool] {
  @func_2129() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_3213(%var_3180: Tensor[(528), float64], %var_3187: Tensor[(1, 60), float64], %var_3188: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(3, 4), float32], Tensor[(616), float64], Tensor[(1, 60), float64]) {
  %533 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %534 = cast(%var_3180, dtype="float64") /* ty=Tensor[(528), float64] */;
  %535 = cast(%var_3180, dtype="float64") /* ty=Tensor[(528), float64] */;
  %536 = reshape(%534, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float64] */;
  %537 = reshape(%535, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float64] */;
  %538 = @func_1554(%536, %537) /* ty=(Tensor[(11, 12, 4), float64],) */;
  %539 = cast(meta[relay.Constant][32] /* ty=Tensor[(3, 4), float32] */, dtype="float32") /* ty=Tensor[(3, 4), float32] */;
  %540 = cast(%var_3187, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %541 = cast(%var_3188, dtype="float64") /* ty=Tensor[(616), float64] */;
  %542 = reshape(%539, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %543 = reshape(%540, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
  %544 = reshape(%541, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %545 = @func_2178(%542, %543, %544) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
  %546 = cast(%var_3187, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %547 = %533.1;
  %548 = %538.0;
  %549 = %545.1;
  %550 = log(%546) /* ty=Tensor[(1, 60), float64] */;
  (%547, %548, %var_3180, %549, meta[relay.Constant][32] /* ty=Tensor[(3, 4), float32] */, %var_3188, %550)
}

def @func_1762(%var_1741: Tensor[(7, 3, 1), float64]) -> Tensor[(7, 3, 1), float64] {
  %551 = cast(%var_1741, dtype="float64") /* ty=Tensor[(7, 3, 1), float64] */;
  acosh(%551) /* ty=Tensor[(7, 3, 1), float64] */
}

def @func_6579(%var_6534: Tensor[(12, 11, 3), float64], %var_6561: Tensor[(117), float64], %var_6562: Tensor[(15), float32], %var_6563: Tensor[(528), float64], %var_6564: Tensor[(616), float64]) -> (Tensor[(12, 11, 3), float64], Tensor[(9, 2, 10), bool], Tensor[(117), float32], Tensor[(117), float64], Tensor[(15), float32], Tensor[(528), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool]) {
  %552 = cast(%var_6534, dtype="float64") /* ty=Tensor[(12, 11, 3), float64] */;
  %553 = @func_3695() /* ty=Tensor[(9, 2, 10), bool] */;
  %554 = cast(%553, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %555 = cast(%var_6561, dtype="float64") /* ty=Tensor[(117), float64] */;
  %556 = cast(%var_6562, dtype="float32") /* ty=Tensor[(15), float32] */;
  %557 = cast(%var_6563, dtype="float64") /* ty=Tensor[(528), float64] */;
  %558 = cast(%var_6564, dtype="float64") /* ty=Tensor[(616), float64] */;
  %559 = reshape(%554, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
  %560 = reshape(%555, newshape=[117]) /* ty=Tensor[(117), float64] */;
  %561 = reshape(%556, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %562 = reshape(%557, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %563 = reshape(%558, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %564 = @func_4207(%559, %560, %561, %562, %563) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 12, 13), float32], Tensor[(3, 468), float64], Tensor[(117), float32], Tensor[(12, 8, 3), float64], Tensor[(15), float32], Tensor[(288), int16], Tensor[(528), float64], Tensor[(616), float64], Tensor[(117), int16]) */;
  %565 = @func_3769() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %566 = erf(%552) /* ty=Tensor[(12, 11, 3), float64] */;
  %567 = %564.3;
  %568 = %565.0;
  (%566, %553, %567, %var_6561, %var_6562, %var_6563, %var_6564, %568)
}

def @func_2039() -> Tensor[(9, 2, 10), bool] {
  %569 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 2, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %570 = rsqrt(%569) /* ty=Tensor[(9, 2, 10), float64] */;
  %571 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 2, 10), float64] */, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%570, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%573, %574) /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_6770() -> Tensor[(8, 11, 7), float64] {
  %575 = @func_3387() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) */;
  %575.2
}

def @func_5205(%var_5184: Tensor[(5, 7, 6), int8]) -> (Tensor[(5, 7, 6), int8], Tensor[(5, 7, 6), float64]) {
  %576 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 7, 6), int8] */, dtype="int8") /* ty=Tensor[(5, 7, 6), int8] */;
  %577 = shape_of(%var_5184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%var_5184, dtype="int8") /* ty=Tensor[(5, 7, 6), int8] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %580 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 7, 6), int8] */, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %581 = tan(%580) /* ty=Tensor[(5, 7, 6), float32] */;
  %582 = cast(%581, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  %583 = add(%578, %579) /* ty=Tensor[(5, 7, 6), int8] */;
  %584 = acos(%582) /* ty=Tensor[(5, 7, 6), float64] */;
  (%583, %584)
}

def @func_6199(%var_6175: Tensor[(15, 12, 14), float32]) -> (Tensor[(15, 12, 14), float32], Tensor[(9, 2, 10), bool]) {
  %585 = cast(%var_6175, dtype="float32") /* ty=Tensor[(15, 12, 14), float32] */;
  %586 = log2(%585) /* ty=Tensor[(15, 12, 14), float32] */;
  %587 = @func_4612() /* ty=Tensor[(9, 2, 10), bool] */;
  (%586, %587)
}

def @func_2963() -> (Tensor[(9, 2, 10), float32],) {
  %588 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %589 = %588.0;
  (%589,)
}

def @func_4313() -> (Tensor[(10, 3, 13), float64],) {
  %590 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 3, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 3, 13), float64] */;
  %591 = erf(%590) /* ty=Tensor[(10, 3, 13), float64] */;
  (%591,)
}

def @func_4972(%var_4962: Tensor[(60), float64], %var_4963: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(3, 1, 4), float32], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64]) {
  %592 = @func_3769() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %593 = cast(meta[relay.Constant][36] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %594 = cast(%var_4962, dtype="float64") /* ty=Tensor[(60), float64] */;
  %595 = cast(%var_4963, dtype="float64") /* ty=Tensor[(616), float64] */;
  %596 = reshape(%593, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %597 = reshape(%594, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
  %598 = reshape(%595, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %599 = @func_2178(%596, %597, %598) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
  %600 = %592.0;
  %601 = %599.0;
  (%600, %601, meta[relay.Constant][36] /* ty=Tensor[(12), float32] */, %var_4962, %var_4963)
}

def @func_5943() -> Tensor[(9, 2, 10), bool] {
  %602 = @func_2689() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %602.0
}

def @func_3996(%var_3943: Tensor[(15), float32], %var_3947: Tensor[(288), int16], %var_3954: Tensor[(528), float64], %var_3955: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(?, 5, 3), int32], Tensor[(15), float32], Tensor[(108), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(616), float64]) {
  %603 = cast(%var_3943, dtype="float32") /* ty=Tensor[(15), float32] */;
  %604 = cast(meta[relay.Constant][37] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %605 = reshape(%603, newshape=[1, 5, 3]) /* ty=Tensor[(1, 5, 3), float32] */;
  %606 = reshape(%604, newshape=[18, 6]) /* ty=Tensor[(18, 6), float64] */;
  %607 = @func_694(%605, %606) /* ty=(Tensor[(?, 5, 3), int32], Tensor[(6, 2, 9), uint16]) */;
  %608 = cast(%var_3947, dtype="int16") /* ty=Tensor[(288), int16] */;
  %609 = cast(%var_3947, dtype="int16") /* ty=Tensor[(288), int16] */;
  %610 = reshape(%608, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %611 = reshape(%609, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %612 = @func_835(%610, %611) /* ty=(Tensor[(12, 8, 3), float64],) */;
  %613 = @func_2808() /* ty=Tensor[(9, 2, 10), bool] */;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %615 = cast(%var_3954, dtype="float64") /* ty=Tensor[(528), float64] */;
  %616 = cast(%var_3955, dtype="float64") /* ty=Tensor[(616), float64] */;
  %617 = reshape(%614, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), float32] */;
  %618 = reshape(%615, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %619 = reshape(%616, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %620 = @func_3445(%617, %618, %619) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
  %621 = %607.0;
  %622 = %612.0;
  %623 = %620.1;
  (%613, %621, %var_3943, meta[relay.Constant][37] /* ty=Tensor[(108), float64] */, %622, %var_3947, %623, %var_3954, %var_3955)
}

def @func_7567() -> (Tensor[(9, 2, 10), float32],) {
  %624 = @func_6265() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %625 = %624.0;
  (%625,)
}

def @func_5582() -> Tensor[(6, 5, 14), float64] {
  %626 = @func_3530() /* ty=(Tensor[(180), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), bool], Tensor[(6, 5, 14), float64]) */;
  %626.3
}

def @func_3530() -> (Tensor[(180), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), bool], Tensor[(6, 5, 14), float64]) {
  %627 = cast(meta[relay.Constant][38] /* ty=Tensor[(180), bool] */, dtype="bool") /* ty=Tensor[(180), bool] */;
  %628 = reshape(%627, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
  %629 = @func_2226(%628) /* ty=(Tensor[(9, 2, 10), float64],) */;
  %630 = %629.0;
  %631 = @func_2689() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %632 = %631.0;
  %633 = cast(%632, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %634 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%630, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %637 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(6, 5, 14), float64] */;
  %638 = sigmoid(%637) /* ty=Tensor[(6, 5, 14), float64] */;
  %639 = cast(%638, dtype="float64") /* ty=Tensor[(6, 5, 14), float64] */;
  %640 = divide(%635, %636) /* ty=Tensor[(9, 2, 10), float64] */;
  %641 = @func_3398() /* ty=Tensor[(9, 2, 10), bool] */;
  %642 = erf(%639) /* ty=Tensor[(6, 5, 14), float64] */;
  (meta[relay.Constant][38] /* ty=Tensor[(180), bool] */, %640, %641, %642)
}

def @func_7317() -> Tensor[(9, 2, 10), bool] {
  @func_4612() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_4666() -> Tensor[(9, 2, 10), bool] {
  @func_2039() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_2287(%var_2239: Tensor[(154, 4), float64], %var_2279: Tensor[(52), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) {
  %643 = cast(%var_2239, dtype="float64") /* ty=Tensor[(154, 4), float64] */;
  %644 = reshape(%643, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %645 = @func_125(%644) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %646 = cast(meta[relay.Constant][40] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %647 = %645.0;
  %648 = cast(%647, dtype="float64") /* ty=Tensor[(8, 11, 7), float64] */;
  %649 = reshape(%646, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %650 = reshape(%648, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %651 = @func_1209(%649, %650) /* ty=(Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %652 = cast(%var_2279, dtype="float32") /* ty=Tensor[(52), float32] */;
  %653 = reshape(%652, newshape=[13, 1, 4]) /* ty=Tensor[(13, 1, 4), float32] */;
  %654 = @func_779(%653) /* ty=(Tensor[(6, 2, 9), bool], Tensor[(108), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(13, ?, 4), int64]) */;
  %655 = @func_2039() /* ty=Tensor[(9, 2, 10), bool] */;
  %656 = %651.1;
  %657 = %654.3;
  (%655, %647, %var_2239, %656, meta[relay.Constant][40] /* ty=Tensor[(60), float64] */, %657, %var_2279)
}

def @func_2951(%var_2938: Tensor[(11, 10, 12), int32]) -> (Tensor[(11, 10, 12), bool], Tensor[(9, 2, 10), bool]) {
  %658 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 10, 12), int32] */, dtype="bool") /* ty=Tensor[(11, 10, 12), bool] */;
  %659 = shape_of(%var_2938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%var_2938, dtype="bool") /* ty=Tensor[(11, 10, 12), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = not_equal(%660, %661) /* ty=Tensor[(11, 10, 12), bool] */;
  %663 = @func_2129() /* ty=Tensor[(9, 2, 10), bool] */;
  (%662, %663)
}

def @func_7837() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) {
  %664 = @func_5533() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) */;
  %665 = @func_4666() /* ty=Tensor[(9, 2, 10), bool] */;
  %666 = %664.0;
  (%665, %666)
}

def @func_1209(%var_1174: Tensor[(3, 2, 10), float64], %var_1205: Tensor[(616), float64]) -> (Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) {
  %667 = cast(%var_1174, dtype="float64") /* ty=Tensor[(3, 2, 10), float64] */;
  %668 = log(%667) /* ty=Tensor[(3, 2, 10), float64] */;
  %669 = cast(%668, dtype="float32") /* ty=Tensor[(3, 2, 10), float32] */;
  %670 = log10(%669) /* ty=Tensor[(3, 2, 10), float32] */;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(3, 2, 10), float64] */;
  %672 = cast(%var_1205, dtype="float64") /* ty=Tensor[(616), float64] */;
  %673 = reshape(%672, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %674 = @func_125(%673) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %675 = erf(%671) /* ty=Tensor[(3, 2, 10), float64] */;
  %676 = %674.0;
  (%675, %676, %var_1205)
}

def @func_4114() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32]) {
  %677 = @func_2808() /* ty=Tensor[(9, 2, 10), bool] */;
  %678 = cast(%677, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %679 = log(%678) /* ty=Tensor[(9, 2, 10), float64] */;
  %680 = cast(%679, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %681 = @func_3398() /* ty=Tensor[(9, 2, 10), bool] */;
  %682 = sinh(%680) /* ty=Tensor[(9, 2, 10), float32] */;
  (%681, %682)
}

def @func_5080() -> (Tensor[(9, 2, 10), bool],) {
  %683 = @func_2129() /* ty=Tensor[(9, 2, 10), bool] */;
  (%683,)
}

def @func_5252() -> (Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) {
  %684 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %686 = cast(meta[relay.Constant][42] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %687 = reshape(%686, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %688 = @func_125(%687) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %689 = atan(%685) /* ty=Tensor[(9, 2, 10), float32] */;
  %690 = %688.0;
  (%689, %690, meta[relay.Constant][42] /* ty=Tensor[(616), float64] */)
}

def @func_6047() -> Tensor[(9, 2, 10), bool] {
  %691 = @func_5533() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) */;
  %691.1
}

def @func_3769() -> (Tensor[(9, 2, 10), bool],) {
  %692 = @func_3010() /* ty=Tensor[(9, 2, 10), bool] */;
  (%692,)
}

def @func_4716(%var_4704: Tensor[(60), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(3, 2, 10), float64], Tensor[(60), float64], Tensor[(616), float64]) {
  %693 = @func_3769() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %694 = cast(%var_4704, dtype="float64") /* ty=Tensor[(60), float64] */;
  %695 = cast(meta[relay.Constant][43] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %696 = reshape(%694, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %697 = reshape(%695, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %698 = @func_1209(%696, %697) /* ty=(Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %699 = %693.0;
  %700 = %698.0;
  (%699, %700, %var_4704, meta[relay.Constant][43] /* ty=Tensor[(616), float64] */)
}

def @func_4433(%var_4426: Tensor[(1, 616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), int32], Tensor[(528), float64], Tensor[(1, 616), float64]) {
  %701 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %702 = @func_3387() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) */;
  %703 = %702.0;
  %704 = cast(%703, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %705 = cast(meta[relay.Constant][44] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %706 = cast(%var_4426, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %707 = reshape(%704, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), float32] */;
  %708 = reshape(%705, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %709 = reshape(%706, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %710 = @func_3445(%707, %708, %709) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
  %711 = %701.0;
  %712 = %710.0;
  (%711, %703, %712, meta[relay.Constant][44] /* ty=Tensor[(528), float64] */, %var_4426)
}

def @func_6883(%var_6859: Tensor[(616), float64], %var_6873: Tensor[(528), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(9, 12, 13), float32], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(6, 5, 14), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(528), uint32], Tensor[(10, 3, 13), float64]) {
  %713 = @func_5808() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %714 = @func_4918() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(7, 88), float64]) */;
  %715 = %714.0;
  %716 = cast(%715, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %717 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %718 = cast(meta[relay.Constant][45] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
  %719 = cast(meta[relay.Constant][46] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %720 = reshape(%718, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %721 = reshape(%719, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %722 = @func_3915(%720, %721) /* ty=(Tensor[(9, 12, 13), float32],) */;
  %723 = @func_3530() /* ty=(Tensor[(180), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), bool], Tensor[(6, 5, 14), float64]) */;
  %724 = atanh(%716) /* ty=Tensor[(9, 2, 10), float32] */;
  %725 = cast(%724, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %726 = cast(meta[relay.Constant][47] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %727 = cast(%var_6859, dtype="float64") /* ty=Tensor[(616), float64] */;
  %728 = reshape(%725, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), float32] */;
  %729 = reshape(%726, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %730 = reshape(%727, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %731 = @func_3445(%728, %729, %730) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
  %732 = cast(%var_6873, dtype="uint32") /* ty=Tensor[(528), uint32] */;
  %733 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(528), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %734 = cast(meta[relay.Constant][47] /* ty=Tensor[(528), float64] */, dtype="uint32") /* ty=Tensor[(528), uint32] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %736 = @func_4313() /* ty=(Tensor[(10, 3, 13), float64],) */;
  %737 = %713.0;
  %738 = %717.1;
  %739 = %722.0;
  %740 = %723.3;
  %741 = %731.3;
  %742 = left_shift(%734, %735) /* ty=Tensor[(528), uint32] */;
  %743 = %736.0;
  (%737, %724, %738, %739, meta[relay.Constant][45] /* ty=Tensor[(117), float64] */, meta[relay.Constant][46] /* ty=Tensor[(1404), float64] */, %740, %741, %var_6859, %742, %743)
}

def @func_3387() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) {
  %744 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %745 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 88), float64] */, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %746 = reshape(%745, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %747 = @func_125(%746) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %748 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  %749 = %744.0;
  %750 = %747.0;
  (%748, %749, %750, meta[relay.Constant][48] /* ty=Tensor[(7, 88), float64] */)
}

def @func_779(%var_751: Tensor[(13, 1, 4), float32]) -> (Tensor[(6, 2, 9), bool], Tensor[(108), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(13, ?, 4), int64]) {
  %751 = cast(meta[relay.Constant][49] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %752 = cast(meta[relay.Constant][49] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %753 = reshape(%751, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
  %754 = reshape(%752, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
  %755 = @func_251(%753, %754) /* ty=(Tensor[(6, 2, 9), bool], Tensor[(6, 2, 9), float64]) */;
  %756 = cast(meta[relay.Constant][50] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %757 = reshape(%756, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %758 = @func_125(%757) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %759 = cast(%var_751, dtype="float32") /* ty=Tensor[(13, 1, 4), float32] */;
  %760 = acos(%759) /* ty=Tensor[(13, 1, 4), float32] */;
  %761 = cast(%var_751, dtype="int64") /* ty=Tensor[(13, 1, 4), int64] */;
  %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%760, dtype="int64") /* ty=Tensor[(13, 1, 4), int64] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %765 = %755.0;
  %766 = %758.0;
  %767 = logical_xor(%763, %764) /* ty=Tensor[(13, ?, 4), int64] */;
  (%765, meta[relay.Constant][49] /* ty=Tensor[(108), float64] */, %766, meta[relay.Constant][50] /* ty=Tensor[(616), float64] */, %767)
}

def @func_2513(%var_2426: Tensor[(9, 2, 10), bool], %var_2457: Tensor[(108), float64], %var_2506: Tensor[(616), float64], %var_2510: int32) -> (Tensor[(9, 2, 10), uint8], Tensor[(288), int16], Tensor[(6, 2, 9), float64], Tensor[(108), float64], Tensor[(12, 8, 3), int16], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(52, 1), float32], Tensor[(16, 4, 11), float32], int32) {
  %768 = @func_2039() /* ty=Tensor[(9, 2, 10), bool] */;
  %769 = cast(%var_2426, dtype="uint8") /* ty=Tensor[(9, 2, 10), uint8] */;
  %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%768, dtype="uint8") /* ty=Tensor[(9, 2, 10), uint8] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %773 = cast(%var_2457, dtype="float64") /* ty=Tensor[(108), float64] */;
  %774 = cast(%var_2457, dtype="float64") /* ty=Tensor[(108), float64] */;
  %775 = reshape(%773, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
  %776 = reshape(%774, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
  %777 = @func_251(%775, %776) /* ty=(Tensor[(6, 2, 9), bool], Tensor[(6, 2, 9), float64]) */;
  %778 = cast(meta[relay.Constant][51] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %779 = cast(meta[relay.Constant][51] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %780 = reshape(%778, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %781 = reshape(%779, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %782 = @func_835(%780, %781) /* ty=(Tensor[(12, 8, 3), float64],) */;
  %783 = %782.0;
  %784 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 8, 3), float64] */, dtype="int16") /* ty=Tensor[(12, 8, 3), int16] */;
  %785 = shape_of(%783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%783, dtype="int16") /* ty=Tensor[(12, 8, 3), int16] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %788 = cast(%var_2506, dtype="float64") /* ty=Tensor[(616), float64] */;
  %789 = cast(meta[relay.Constant][53] /* ty=Tensor[(52, 1), float32] */, dtype="float32") /* ty=Tensor[(52, 1), float32] */;
  %790 = reshape(%788, newshape=[154, 4]) /* ty=Tensor[(154, 4), float64] */;
  %791 = reshape(%789, newshape=[52]) /* ty=Tensor[(52), float32] */;
  %792 = @func_2287(%790, %791) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) */;
  %793 = cast(%var_2510, dtype="int32") /* ty=int32 */;
  %794 = reshape(%793, newshape=[]) /* ty=int32 */;
  %795 = @func_2014(%794) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float32], Tensor[(15, 13, 4), int32], int32, Tensor[(5, 156), int32]) */;
  %796 = minimum(%771, %772) /* ty=Tensor[(9, 2, 10), uint8] */;
  %797 = %777.1;
  %798 = multiply(%786, %787) /* ty=Tensor[(12, 8, 3), int16] */;
  %799 = %792.3;
  %800 = %795.2;
  (%796, meta[relay.Constant][51] /* ty=Tensor[(288), int16] */, %797, %var_2457, %798, %799, %var_2506, meta[relay.Constant][53] /* ty=Tensor[(52, 1), float32] */, %800, %var_2510)
}

def @func_2388() -> (Tensor[(9, 2, 10), bool],) {
  %801 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  (%801,)
}

def @func_835(%var_827: Tensor[(12, 8, 3), int16], %var_828: Tensor[(12, 8, 3), int16]) -> (Tensor[(12, 8, 3), float64],) {
  %802 = cast(%var_828, dtype="bool") /* ty=Tensor[(12, 8, 3), bool] */;
  %803 = shape_of(%var_827, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%var_827, dtype="bool") /* ty=Tensor[(12, 8, 3), bool] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %806 = greater(%804, %805) /* ty=Tensor[(12, 8, 3), bool] */;
  %807 = cast(%806, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %808 = asin(%807) /* ty=Tensor[(12, 8, 3), float64] */;
  (%808,)
}

def @func_2014(%var_2006: int32) -> (Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float32], Tensor[(15, 13, 4), int32], int32, Tensor[(5, 156), int32]) {
  %809 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %810 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 4, 11), float32] */, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %811 = asinh(%810) /* ty=Tensor[(16, 4, 11), float64] */;
  %812 = cast(%811, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %813 = cast(%811, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %814 = cast(%var_2006, dtype="int32") /* ty=int32 */;
  %815 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 156), int32] */, dtype="int32") /* ty=Tensor[(5, 156), int32] */;
  %816 = reshape(%814, newshape=[]) /* ty=int32 */;
  %817 = reshape(%815, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), int32] */;
  %818 = @func_1424(%816, %817) /* ty=(Tensor[(15, 13, 4), int32],) */;
  %819 = log(%809) /* ty=Tensor[(16, 4, 11), float32] */;
  %820 = exp(%812) /* ty=Tensor[(16, 4, 11), float64] */;
  %821 = sqrt(%813) /* ty=Tensor[(16, 4, 11), float32] */;
  %822 = %818.0;
  (%819, %820, %821, %822, %var_2006, meta[relay.Constant][55] /* ty=Tensor[(5, 156), int32] */)
}

def @func_5486(%var_5465: Tensor[(15), float32], %var_5467: Tensor[(528), float64], %var_5468: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(15), float32], Tensor[(1, 288), int16], Tensor[(528), float64], Tensor[(616), float64]) {
  %823 = @func_3695() /* ty=Tensor[(9, 2, 10), bool] */;
  %824 = cast(%823, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %825 = cast(%var_5465, dtype="float32") /* ty=Tensor[(15), float32] */;
  %826 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 288), int16] */, dtype="int16") /* ty=Tensor[(1, 288), int16] */;
  %827 = cast(%var_5467, dtype="float64") /* ty=Tensor[(528), float64] */;
  %828 = cast(%var_5468, dtype="float64") /* ty=Tensor[(616), float64] */;
  %829 = reshape(%825, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %830 = reshape(%826, newshape=[288]) /* ty=Tensor[(288), int16] */;
  %831 = reshape(%827, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %832 = reshape(%828, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %833 = @func_3996(%829, %830, %831, %832) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(?, 5, 3), int32], Tensor[(15), float32], Tensor[(108), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(616), float64]) */;
  %834 = @func_4221() /* ty=Tensor[(9, 2, 10), bool] */;
  %835 = log10(%824) /* ty=Tensor[(9, 2, 10), float32] */;
  %836 = %833.0;
  (%834, %835, %836, %var_5465, meta[relay.Constant][56] /* ty=Tensor[(1, 288), int16] */, %var_5467, %var_5468)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2519(%var_2515: Tensor[(9, 2, 10), bool], %var_2516: Tensor[(108), float64], %var_2517: Tensor[(616), float64], %var_2518: int32) -> (Tensor[(9, 2, 10), uint8], Tensor[(288), int16], Tensor[(6, 2, 9), float64], Tensor[(108), float64], Tensor[(12, 8, 3), int16], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(52, 1), float32], Tensor[(16, 4, 11), float32], int32) {
  @func_2513(%var_2515, %var_2516, %var_2517, %var_2518) /* ty=(Tensor[(9, 2, 10), uint8], Tensor[(288), int16], Tensor[(6, 2, 9), float64], Tensor[(108), float64], Tensor[(12, 8, 3), int16], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(52, 1), float32], Tensor[(16, 4, 11), float32], int32) */
}

def @func_4002(%var_3998: Tensor[(15), float32], %var_3999: Tensor[(288), int16], %var_4000: Tensor[(528), float64], %var_4001: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(?, 5, 3), int32], Tensor[(15), float32], Tensor[(108), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(616), float64]) {
  @func_3996(%var_3998, %var_3999, %var_4000, %var_4001) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(?, 5, 3), int32], Tensor[(15), float32], Tensor[(108), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(616), float64]) */
}

def @func_2951(%var_2938: Tensor[(11, 10, 12), int32]) -> (Tensor[(11, 10, 12), bool], Tensor[(9, 2, 10), bool]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 10, 12), int32] */, dtype="bool") /* ty=Tensor[(11, 10, 12), bool] */;
  %1 = shape_of(%var_2938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_2938, dtype="bool") /* ty=Tensor[(11, 10, 12), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = not_equal(%2, %3) /* ty=Tensor[(11, 10, 12), bool] */;
  %5 = @func_2129() /* ty=Tensor[(9, 2, 10), bool] */;
  (%4, %5)
}

def @func_2129() -> Tensor[(9, 2, 10), bool] {
  @func_2039() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_6383() -> (Tensor[(9, 2, 10), uint8], Tensor[(180), bool], Tensor[(1, 52), float32], Tensor[(7, 88), float64]) {
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(180), bool] */, dtype="bool") /* ty=Tensor[(180), bool] */;
  %7 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 52), float32] */, dtype="float32") /* ty=Tensor[(1, 52), float32] */;
  %8 = reshape(%6, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
  %9 = reshape(%7, newshape=[13, 4]) /* ty=Tensor[(13, 4), float32] */;
  %10 = @func_3150(%8, %9) /* ty=(Tensor[(9, 2, 10), uint8], Tensor[(616), float64], Tensor[(13, 4), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %11 = @func_4918() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(7, 88), float64]) */;
  %12 = %11.2;
  %13 = cast(%12, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %14 = asin(%13) /* ty=Tensor[(7, 88), float32] */;
  %15 = cast(%14, dtype="float32") /* ty=Tensor[(7, 88), float32] */;
  %16 = cosh(%15) /* ty=Tensor[(7, 88), float32] */;
  %17 = cast(%12, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(2), int32] */;
  %19 = cast(%16, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %21 = %10.0;
  %22 = divide(%19, %20) /* ty=Tensor[(7, 88), float64] */;
  (%21, meta[relay.Constant][1] /* ty=Tensor[(180), bool] */, meta[relay.Constant][2] /* ty=Tensor[(1, 52), float32] */, %22)
}

def @func_3792() -> Tensor[(9, 2, 10), float32] {
  @func_3790() /* ty=Tensor[(9, 2, 10), float32] */
}

def @func_7105(%var_7103: Tensor[(616), float64], %var_7104: Tensor[(80), uint16]) -> (Tensor[(9, 2, 10), bool], Tensor[(616), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(8, 5, 2), float64], Tensor[(80), uint16], Tensor[(9, 2, 10), bool]) {
  @func_7101(%var_7103, %var_7104) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(616), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(8, 5, 2), float64], Tensor[(80), uint16], Tensor[(9, 2, 10), bool]) */
}

def @func_7469() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), float32]) {
  @func_7467() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), float32]) */
}

def @func_6074(%var_6072: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), float64],) {
  @func_6071(%var_6072) /* ty=(Tensor[(9, 2, 10), float64],) */
}

def @func_1258(%var_1256: Tensor[(8, 5, 2), uint16]) -> (Tensor[(8, 5, 2), float64],) {
  @func_1255(%var_1256) /* ty=(Tensor[(8, 5, 2), float64],) */
}

def @func_7101(%var_7063: Tensor[(616), float64], %var_7069: Tensor[(80), uint16]) -> (Tensor[(9, 2, 10), bool], Tensor[(616), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(8, 5, 2), float64], Tensor[(80), uint16], Tensor[(9, 2, 10), bool]) {
  %23 = cast(meta[relay.Constant][3] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %24 = cast(%var_7063, dtype="float64") /* ty=Tensor[(616), float64] */;
  %25 = reshape(%23, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %26 = reshape(%24, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %27 = @func_1209(%25, %26) /* ty=(Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %28 = cast(%var_7069, dtype="uint16") /* ty=Tensor[(80), uint16] */;
  %29 = reshape(%28, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint16] */;
  %30 = @func_1255(%29) /* ty=(Tensor[(8, 5, 2), float64],) */;
  %31 = @func_2689() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %32 = @func_4221() /* ty=Tensor[(9, 2, 10), bool] */;
  %33 = %27.2;
  %34 = %30.0;
  %35 = %31.0;
  (%32, %33, meta[relay.Constant][3] /* ty=Tensor[(60), float64] */, %var_7063, %34, %var_7069, %35)
}

def @func_4213(%var_4208: Tensor[(9, 2, 10), bool], %var_4209: Tensor[(117), float64], %var_4210: Tensor[(15), float32], %var_4211: Tensor[(528), float64], %var_4212: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 12, 13), float32], Tensor[(3, 468), float64], Tensor[(117), float32], Tensor[(12, 8, 3), float64], Tensor[(15), float32], Tensor[(288), int16], Tensor[(528), float64], Tensor[(616), float64], Tensor[(117), int16]) {
  %70 = fn (%var_4140: Tensor[(9, 2, 10), bool], %var_4163: Tensor[(117), float64], %var_4192: Tensor[(15), float32], %var_4194: Tensor[(528), float64], %var_4195: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 12, 13), float32], Tensor[(3, 468), float64], Tensor[(117), float32], Tensor[(12, 8, 3), float64], Tensor[(15), float32], Tensor[(288), int16], Tensor[(528), float64], Tensor[(616), float64], Tensor[(117), int16]) {
    %36 = @func_4114() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32]) */;
    %37 = %36.0;
    %38 = cast(%var_4140, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
    %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
    %40 = cast(%37, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %42 = cast(%var_4163, dtype="float64") /* ty=Tensor[(117), float64] */;
    %43 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 468), float64] */, dtype="float64") /* ty=Tensor[(3, 468), float64] */;
    %44 = reshape(%42, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
    %45 = reshape(%43, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
    %46 = @func_3915(%44, %45) /* ty=(Tensor[(9, 12, 13), float32],) */;
    %47 = cast(%var_4163, dtype="float64") /* ty=Tensor[(117), float64] */;
    %48 = asinh(%47) /* ty=Tensor[(117), float64] */;
    %49 = cast(%48, dtype="float32") /* ty=Tensor[(117), float32] */;
    %50 = cast(%var_4192, dtype="float32") /* ty=Tensor[(15), float32] */;
    %51 = cast(meta[relay.Constant][5] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
    %52 = cast(%var_4194, dtype="float64") /* ty=Tensor[(528), float64] */;
    %53 = cast(%var_4195, dtype="float64") /* ty=Tensor[(616), float64] */;
    %54 = reshape(%50, newshape=[15]) /* ty=Tensor[(15), float32] */;
    %55 = reshape(%51, newshape=[288]) /* ty=Tensor[(288), int16] */;
    %56 = reshape(%52, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %57 = reshape(%53, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %58 = @func_3996(%54, %55, %56, %57) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(?, 5, 3), int32], Tensor[(15), float32], Tensor[(108), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(616), float64]) */;
    %59 = cast(%48, dtype="float64") /* ty=Tensor[(117), float64] */;
    %60 = acosh(%59) /* ty=Tensor[(117), float64] */;
    %61 = cast(%var_4163, dtype="int16") /* ty=Tensor[(117), int16] */;
    %62 = shape_of(%60, dtype="int32") /* ty=Tensor[(1), int32] */;
    %63 = cast(%60, dtype="int16") /* ty=Tensor[(117), int16] */;
    %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?), int16] */;
    %65 = logical_and(%40, %41) /* ty=Tensor[(9, 2, 10), bool] */;
    %66 = %46.0;
    %67 = log(%49) /* ty=Tensor[(117), float32] */;
    %68 = %58.4;
    %69 = right_shift(%63, %64) /* ty=Tensor[(117), int16] */;
    (%65, %66, meta[relay.Constant][4] /* ty=Tensor[(3, 468), float64] */, %67, %68, %var_4192, meta[relay.Constant][5] /* ty=Tensor[(288), int16] */, %var_4194, %var_4195, %69)
  };
  %70(%var_4208, %var_4209, %var_4210, %var_4211, %var_4212) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 12, 13), float32], Tensor[(3, 468), float64], Tensor[(117), float32], Tensor[(12, 8, 3), float64], Tensor[(15), float32], Tensor[(288), int16], Tensor[(528), float64], Tensor[(616), float64], Tensor[(117), int16]) */
}

def @func_2963() -> (Tensor[(9, 2, 10), float32],) {
  %71 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %72 = %71.0;
  (%72,)
}

def @func_4793(%var_4791: Tensor[(315), float32]) -> (Tensor[(9, 2, 10), float32], Tensor[(60), float64], Tensor[(12), float32], Tensor[(315), float32]) {
  @func_4790(%var_4791) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(60), float64], Tensor[(12), float32], Tensor[(315), float32]) */
}

def @func_6585(%var_6580: Tensor[(12, 11, 3), float64], %var_6581: Tensor[(117), float64], %var_6582: Tensor[(15), float32], %var_6583: Tensor[(528), float64], %var_6584: Tensor[(616), float64]) -> (Tensor[(12, 11, 3), float64], Tensor[(9, 2, 10), bool], Tensor[(117), float32], Tensor[(117), float64], Tensor[(15), float32], Tensor[(528), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool]) {
  %90 = fn (%var_6534: Tensor[(12, 11, 3), float64], %var_6561: Tensor[(117), float64], %var_6562: Tensor[(15), float32], %var_6563: Tensor[(528), float64], %var_6564: Tensor[(616), float64]) -> (Tensor[(12, 11, 3), float64], Tensor[(9, 2, 10), bool], Tensor[(117), float32], Tensor[(117), float64], Tensor[(15), float32], Tensor[(528), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool]) {
    %73 = cast(%var_6534, dtype="float64") /* ty=Tensor[(12, 11, 3), float64] */;
    %74 = @func_3695() /* ty=Tensor[(9, 2, 10), bool] */;
    %75 = cast(%74, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
    %76 = cast(%var_6561, dtype="float64") /* ty=Tensor[(117), float64] */;
    %77 = cast(%var_6562, dtype="float32") /* ty=Tensor[(15), float32] */;
    %78 = cast(%var_6563, dtype="float64") /* ty=Tensor[(528), float64] */;
    %79 = cast(%var_6564, dtype="float64") /* ty=Tensor[(616), float64] */;
    %80 = reshape(%75, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
    %81 = reshape(%76, newshape=[117]) /* ty=Tensor[(117), float64] */;
    %82 = reshape(%77, newshape=[15]) /* ty=Tensor[(15), float32] */;
    %83 = reshape(%78, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %84 = reshape(%79, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %85 = @func_4207(%80, %81, %82, %83, %84) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 12, 13), float32], Tensor[(3, 468), float64], Tensor[(117), float32], Tensor[(12, 8, 3), float64], Tensor[(15), float32], Tensor[(288), int16], Tensor[(528), float64], Tensor[(616), float64], Tensor[(117), int16]) */;
    %86 = @func_3769() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %87 = erf(%73) /* ty=Tensor[(12, 11, 3), float64] */;
    %88 = %85.3;
    %89 = %86.0;
    (%87, %74, %88, %var_6561, %var_6562, %var_6563, %var_6564, %89)
  };
  %90(%var_6580, %var_6581, %var_6582, %var_6583, %var_6584) /* ty=(Tensor[(12, 11, 3), float64], Tensor[(9, 2, 10), bool], Tensor[(117), float32], Tensor[(117), float64], Tensor[(15), float32], Tensor[(528), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool]) */
}

def @func_6933(%var_6894: Tensor[(7, 11, 12), float64], %var_6917: Tensor[(7, 11, 12), float64]) -> (Tensor[(7, 11, 12), float64], Tensor[(7, 11, 12), int8]) {
  %91 = cast(%var_6894, dtype="float64") /* ty=Tensor[(7, 11, 12), float64] */;
  %92 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(7, 11, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 11, 12), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 12), float64] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %95 = cast(%var_6917, dtype="int8") /* ty=Tensor[(7, 11, 12), int8] */;
  %96 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(7, 11, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 11, 12), float64] */, dtype="int8") /* ty=Tensor[(7, 11, 12), int8] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %99 = mod(%93, %94) /* ty=Tensor[(7, 11, 12), float64] */;
  %100 = logical_xor(%97, %98) /* ty=Tensor[(7, 11, 12), int8] */;
  (%99, %100)
}

def @func_4536(%var_4534: Tensor[(2, 14, 8), float64], %var_4535: Tensor[(180), bool]) -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float32], Tensor[(60), float64], Tensor[(180), bool]) {
  @func_4532(%var_4534, %var_4535) /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float32], Tensor[(60), float64], Tensor[(180), bool]) */
}

def @func_6385() -> (Tensor[(9, 2, 10), uint8], Tensor[(180), bool], Tensor[(1, 52), float32], Tensor[(7, 88), float64]) {
  @func_6383() /* ty=(Tensor[(9, 2, 10), uint8], Tensor[(180), bool], Tensor[(1, 52), float32], Tensor[(7, 88), float64]) */
}

def @func_5945() -> Tensor[(9, 2, 10), bool] {
  @func_5943() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_7365() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) {
  %101 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %102 = @func_2129() /* ty=Tensor[(9, 2, 10), bool] */;
  %103 = %101.0;
  (%102, %103)
}

def @func_6266() -> (Tensor[(9, 2, 10), float32],) {
  %106 = fn () -> (Tensor[(9, 2, 10), float32],) {
    %104 = @func_4114() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32]) */;
    %105 = %104.1;
    (%105,)
  };
  %106() /* ty=(Tensor[(9, 2, 10), float32],) */
}

def @func_3450(%var_3447: Tensor[(9, 2, 10), float32], %var_3448: Tensor[(528), float64], %var_3449: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) {
  @func_3445(%var_3447, %var_3448, %var_3449) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */
}

def @func_1764(%var_1763: Tensor[(7, 3, 1), float64]) -> Tensor[(7, 3, 1), float64] {
  %108 = fn (%var_1741: Tensor[(7, 3, 1), float64]) -> Tensor[(7, 3, 1), float64] {
    %107 = cast(%var_1741, dtype="float64") /* ty=Tensor[(7, 3, 1), float64] */;
    acosh(%107) /* ty=Tensor[(7, 3, 1), float64] */
  };
  %108(%var_1763) /* ty=Tensor[(7, 3, 1), float64] */
}

def @func_6201(%var_6200: Tensor[(15, 12, 14), float32]) -> (Tensor[(15, 12, 14), float32], Tensor[(9, 2, 10), bool]) {
  %112 = fn (%var_6175: Tensor[(15, 12, 14), float32]) -> (Tensor[(15, 12, 14), float32], Tensor[(9, 2, 10), bool]) {
    %109 = cast(%var_6175, dtype="float32") /* ty=Tensor[(15, 12, 14), float32] */;
    %110 = log2(%109) /* ty=Tensor[(15, 12, 14), float32] */;
    %111 = @func_4612() /* ty=Tensor[(9, 2, 10), bool] */;
    (%110, %111)
  };
  %112(%var_6200) /* ty=(Tensor[(15, 12, 14), float32], Tensor[(9, 2, 10), bool]) */
}

def @func_6259() -> (Tensor[(10, 3, 13), float64],) {
  %115 = fn () -> (Tensor[(10, 3, 13), float64],) {
    %113 = @func_4313() /* ty=(Tensor[(10, 3, 13), float64],) */;
    %114 = %113.0;
    (%114,)
  };
  %115() /* ty=(Tensor[(10, 3, 13), float64],) */
}

def @func_7522() -> (Tensor[(1, 52), float32],) {
  %116 = @func_6383() /* ty=(Tensor[(9, 2, 10), uint8], Tensor[(180), bool], Tensor[(1, 52), float32], Tensor[(7, 88), float64]) */;
  %117 = %116.2;
  (%117,)
}

def @func_782(%var_780: Tensor[(13, 1, 4), float32]) -> (Tensor[(6, 2, 9), bool], Tensor[(108), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(13, ?, 4), int64]) {
  @func_779(%var_780) /* ty=(Tensor[(6, 2, 9), bool], Tensor[(108), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(13, ?, 4), int64]) */
}

def @func_7319() -> Tensor[(9, 2, 10), bool] {
  @func_7317() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_7785() -> Tensor[(9, 2, 10), bool] {
  @func_2039() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_4609() -> (Tensor[(9, 2, 10), bool], Tensor[(10, 3, 13), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), bool], Tensor[(315), float32]) {
  %131 = fn () -> (Tensor[(9, 2, 10), bool], Tensor[(10, 3, 13), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), bool], Tensor[(315), float32]) {
    %118 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %119 = cast(meta[relay.Constant][7] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
    %120 = cast(meta[relay.Constant][7] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
    %121 = reshape(%119, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
    %122 = reshape(%120, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
    %123 = @func_835(%121, %122) /* ty=(Tensor[(12, 8, 3), float64],) */;
    %124 = cast(meta[relay.Constant][8] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %125 = reshape(%124, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %126 = @func_3047(%125) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(12), float32], Tensor[(315), float32], Tensor[(9, 2, 10), bool]) */;
    %127 = %118.0;
    %128 = @func_4354() /* ty=Tensor[(10, 3, 13), float64] */;
    %129 = %123.0;
    %130 = %126.0;
    (%127, %128, %129, meta[relay.Constant][7] /* ty=Tensor[(288), int16] */, %130, meta[relay.Constant][8] /* ty=Tensor[(315), float32] */)
  };
  %131() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(10, 3, 13), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), bool], Tensor[(315), float32]) */
}

def @func_6329(%var_6327: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(9, 2, 10), bool], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(60, 1), float64], Tensor[(12), float32], Tensor[(616), float64]) {
  @func_6326(%var_6327) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(9, 2, 10), bool], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(60, 1), float64], Tensor[(12), float32], Tensor[(616), float64]) */
}

def @func_5909(%var_5889: Tensor[(24, 12), int16]) -> (Tensor[(9, 2, 10), bool], Tensor[(24, 12), int16], Tensor[(12, 8, 3), float64], Tensor[(10, 3, 13), float64]) {
  %132 = cast(%var_5889, dtype="int16") /* ty=Tensor[(24, 12), int16] */;
  %133 = cast(%var_5889, dtype="int16") /* ty=Tensor[(24, 12), int16] */;
  %134 = reshape(%132, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %135 = reshape(%133, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %136 = @func_835(%134, %135) /* ty=(Tensor[(12, 8, 3), float64],) */;
  %137 = %136.0;
  %138 = cast(%137, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %139 = @func_4313() /* ty=(Tensor[(10, 3, 13), float64],) */;
  %140 = @func_2808() /* ty=Tensor[(9, 2, 10), bool] */;
  %141 = cosh(%138) /* ty=Tensor[(12, 8, 3), float64] */;
  %142 = %139.0;
  (%140, %var_5889, %141, %142)
}

def @func_4532(%var_4510: Tensor[(2, 14, 8), float64], %var_4523: Tensor[(180), bool]) -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float32], Tensor[(60), float64], Tensor[(180), bool]) {
  %143 = cast(%var_4510, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %144 = cast(%var_4510, dtype="float32") /* ty=Tensor[(2, 14, 8), float32] */;
  %145 = cast(%var_4523, dtype="bool") /* ty=Tensor[(180), bool] */;
  %146 = reshape(%145, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
  %147 = @func_4284(%146) /* ty=(Tensor[(9, 2, 10), uint32], Tensor[(60), float64], Tensor[(528), float64], Tensor[(616), float64]) */;
  %148 = sin(%143) /* ty=Tensor[(2, 14, 8), float64] */;
  %149 = cos(%144) /* ty=Tensor[(2, 14, 8), float32] */;
  %150 = %147.1;
  (%148, %149, %150, %var_4523)
}

def @func_1557(%var_1555: Tensor[(11, 12, 4), float64], %var_1556: Tensor[(11, 12, 4), float64]) -> (Tensor[(11, 12, 4), float64],) {
  %156 = fn (%var_1542: Tensor[(11, 12, 4), float64], %var_1543: Tensor[(11, 12, 4), float64]) -> (Tensor[(11, 12, 4), float64],) {
    %151 = cast(%var_1543, dtype="float64") /* ty=Tensor[(11, 12, 4), float64] */;
    %152 = shape_of(%var_1542, dtype="int32") /* ty=Tensor[(3), int32] */;
    %153 = cast(%var_1542, dtype="float64") /* ty=Tensor[(11, 12, 4), float64] */;
    %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %155 = floor_mod(%153, %154) /* ty=Tensor[(11, 12, 4), float64] */;
    (%155,)
  };
  %156(%var_1555, %var_1556) /* ty=(Tensor[(11, 12, 4), float64],) */
}

def @func_7568() -> (Tensor[(9, 2, 10), float32],) {
  %159 = fn () -> (Tensor[(9, 2, 10), float32],) {
    %157 = @func_6265() /* ty=(Tensor[(9, 2, 10), float32],) */;
    %158 = %157.0;
    (%158,)
  };
  %159() /* ty=(Tensor[(9, 2, 10), float32],) */
}

def @func_3695() -> Tensor[(9, 2, 10), bool] {
  @func_3398() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_255(%var_253: Tensor[(6, 2, 9), float64], %var_254: Tensor[(6, 2, 9), float64]) -> (Tensor[(6, 2, 9), bool], Tensor[(6, 2, 9), float64]) {
  @func_251(%var_253, %var_254) /* ty=(Tensor[(6, 2, 9), bool], Tensor[(6, 2, 9), float64]) */
}

def @func_3790() -> Tensor[(9, 2, 10), float32] {
  %160 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %160.0
}

def @func_4716(%var_4704: Tensor[(60), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(3, 2, 10), float64], Tensor[(60), float64], Tensor[(616), float64]) {
  %161 = @func_3769() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %162 = cast(%var_4704, dtype="float64") /* ty=Tensor[(60), float64] */;
  %163 = cast(meta[relay.Constant][9] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %164 = reshape(%162, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %165 = reshape(%163, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %166 = @func_1209(%164, %165) /* ty=(Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %167 = %161.0;
  %168 = %166.0;
  (%167, %168, %var_4704, meta[relay.Constant][9] /* ty=Tensor[(616), float64] */)
}

def @func_2131() -> Tensor[(9, 2, 10), bool] {
  @func_2129() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_7787() -> Tensor[(9, 2, 10), bool] {
  @func_7785() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_5534() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) {
  %172 = fn () -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) {
    %169 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %170 = %169.0;
    %171 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
    (%170, %171)
  };
  %172() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) */
}

def @func_4920() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(7, 88), float64]) {
  @func_4918() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(7, 88), float64]) */
}

def @func_697(%var_695: Tensor[(1, 5, 3), float32], %var_696: Tensor[(18, 6), float64]) -> (Tensor[(?, 5, 3), int32], Tensor[(6, 2, 9), uint16]) {
  %211 = fn (%var_627: Tensor[(1, 5, 3), float32], %var_644: Tensor[(18, 6), float64]) -> (Tensor[(?, 5, 3), int32], Tensor[(6, 2, 9), uint16]) {
    %173 = cast(%var_627, dtype="float32") /* ty=Tensor[(1, 5, 3), float32] */;
    %174 = cos(%173) /* ty=Tensor[(1, 5, 3), float32] */;
    %175 = cast(%var_627, dtype="float64") /* ty=Tensor[(1, 5, 3), float64] */;
    %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %177 = cast(%174, dtype="float64") /* ty=Tensor[(1, 5, 3), float64] */;
    %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %179 = power(%177, %178) /* ty=Tensor[(?, 5, 3), float64] */;
    %180 = cast(%var_627, dtype="uint8") /* ty=Tensor[(1, 5, 3), uint8] */;
    %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
    %182 = cast(%179, dtype="uint8") /* ty=Tensor[(?, 5, 3), uint8] */;
    %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %184 = add(%182, %183) /* ty=Tensor[(?, 5, 3), uint8] */;
    %185 = cast(%174, dtype="int32") /* ty=Tensor[(1, 5, 3), int32] */;
    %186 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
    %187 = cast(%184, dtype="int32") /* ty=Tensor[(?, 5, 3), int32] */;
    %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %189 = bitwise_xor(%187, %188) /* ty=Tensor[(?, 5, 3), int32] */;
    %190 = cast(%179, dtype="uint32") /* ty=Tensor[(?, 5, 3), uint32] */;
    %191 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %192 = cast(%174, dtype="uint32") /* ty=Tensor[(1, 5, 3), uint32] */;
    %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %194 = bitwise_and(%192, %193) /* ty=Tensor[(?, 5, 3), uint32] */;
    %195 = cast(%194, dtype="int32") /* ty=Tensor[(?, 5, 3), int32] */;
    %196 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
    %197 = cast(%189, dtype="int32") /* ty=Tensor[(?, 5, 3), int32] */;
    %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %199 = cast(%var_644, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
    %200 = cast(%var_644, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
    %201 = reshape(%199, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
    %202 = reshape(%200, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
    %203 = @func_251(%201, %202) /* ty=(Tensor[(6, 2, 9), bool], Tensor[(6, 2, 9), float64]) */;
    %204 = %203.1;
    %205 = cast(%var_644, dtype="uint16") /* ty=Tensor[(18, 6), uint16] */;
    %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %207 = cast(%204, dtype="uint16") /* ty=Tensor[(6, 2, 9), uint16] */;
    %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %209 = subtract(%197, %198) /* ty=Tensor[(?, 5, 3), int32] */;
    %210 = multiply(%207, %208) /* ty=Tensor[(6, 2, 9), uint16] */;
    (%209, %210)
  };
  %211(%var_695, %var_696) /* ty=(Tensor[(?, 5, 3), int32], Tensor[(6, 2, 9), uint16]) */
}

def @func_5208(%var_5206: Tensor[(5, 7, 6), int8]) -> (Tensor[(5, 7, 6), int8], Tensor[(5, 7, 6), float64]) {
  @func_5205(%var_5206) /* ty=(Tensor[(5, 7, 6), int8], Tensor[(5, 7, 6), float64]) */
}

def @func_6091() -> Tensor[(9, 2, 10), bool] {
  %212 = fn () -> Tensor[(9, 2, 10), bool] {
    @func_2808() /* ty=Tensor[(9, 2, 10), bool] */
  };
  %212() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_6692() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(315), float32]) {
  @func_6690() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(315), float32]) */
}

def @func_7730() -> Tensor[(1, 52), float32] {
  @func_7728() /* ty=Tensor[(1, 52), float32] */
}

def @func_4314() -> (Tensor[(10, 3, 13), float64],) {
  %215 = fn () -> (Tensor[(10, 3, 13), float64],) {
    %213 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 3, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 3, 13), float64] */;
    %214 = erf(%213) /* ty=Tensor[(10, 3, 13), float64] */;
    (%214,)
  };
  %215() /* ty=(Tensor[(10, 3, 13), float64],) */
}

def @func_3996(%var_3943: Tensor[(15), float32], %var_3947: Tensor[(288), int16], %var_3954: Tensor[(528), float64], %var_3955: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(?, 5, 3), int32], Tensor[(15), float32], Tensor[(108), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(616), float64]) {
  %216 = cast(%var_3943, dtype="float32") /* ty=Tensor[(15), float32] */;
  %217 = cast(meta[relay.Constant][11] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %218 = reshape(%216, newshape=[1, 5, 3]) /* ty=Tensor[(1, 5, 3), float32] */;
  %219 = reshape(%217, newshape=[18, 6]) /* ty=Tensor[(18, 6), float64] */;
  %220 = @func_694(%218, %219) /* ty=(Tensor[(?, 5, 3), int32], Tensor[(6, 2, 9), uint16]) */;
  %221 = cast(%var_3947, dtype="int16") /* ty=Tensor[(288), int16] */;
  %222 = cast(%var_3947, dtype="int16") /* ty=Tensor[(288), int16] */;
  %223 = reshape(%221, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %224 = reshape(%222, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %225 = @func_835(%223, %224) /* ty=(Tensor[(12, 8, 3), float64],) */;
  %226 = @func_2808() /* ty=Tensor[(9, 2, 10), bool] */;
  %227 = cast(%226, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %228 = cast(%var_3954, dtype="float64") /* ty=Tensor[(528), float64] */;
  %229 = cast(%var_3955, dtype="float64") /* ty=Tensor[(616), float64] */;
  %230 = reshape(%227, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), float32] */;
  %231 = reshape(%228, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %232 = reshape(%229, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %233 = @func_3445(%230, %231, %232) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
  %234 = %220.0;
  %235 = %225.0;
  %236 = %233.1;
  (%226, %234, %var_3943, meta[relay.Constant][11] /* ty=Tensor[(108), float64] */, %235, %var_3947, %236, %var_3954, %var_3955)
}

def @func_4355() -> Tensor[(10, 3, 13), float64] {
  %238 = fn () -> Tensor[(10, 3, 13), float64] {
    %237 = @func_4313() /* ty=(Tensor[(10, 3, 13), float64],) */;
    %237.0
  };
  %238() /* ty=Tensor[(10, 3, 13), float64] */
}

def @func_4854() -> Tensor[(9, 2, 10), bool] {
  @func_4666() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_2291(%var_2289: Tensor[(154, 4), float64], %var_2290: Tensor[(52), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) {
  @func_2287(%var_2289, %var_2290) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) */
}

def @func_4612() -> Tensor[(9, 2, 10), bool] {
  %239 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %239.1
}

def @func_5041() -> (Tensor[(9, 2, 10), bool],) {
  %242 = fn () -> (Tensor[(9, 2, 10), bool],) {
    %240 = @func_2689() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %241 = %240.0;
    (%241,)
  };
  %242() /* ty=(Tensor[(9, 2, 10), bool],) */
}

def @func_2513(%var_2426: Tensor[(9, 2, 10), bool], %var_2457: Tensor[(108), float64], %var_2506: Tensor[(616), float64], %var_2510: int32) -> (Tensor[(9, 2, 10), uint8], Tensor[(288), int16], Tensor[(6, 2, 9), float64], Tensor[(108), float64], Tensor[(12, 8, 3), int16], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(52, 1), float32], Tensor[(16, 4, 11), float32], int32) {
  %243 = @func_2039() /* ty=Tensor[(9, 2, 10), bool] */;
  %244 = cast(%var_2426, dtype="uint8") /* ty=Tensor[(9, 2, 10), uint8] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="uint8") /* ty=Tensor[(9, 2, 10), uint8] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %248 = cast(%var_2457, dtype="float64") /* ty=Tensor[(108), float64] */;
  %249 = cast(%var_2457, dtype="float64") /* ty=Tensor[(108), float64] */;
  %250 = reshape(%248, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
  %251 = reshape(%249, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
  %252 = @func_251(%250, %251) /* ty=(Tensor[(6, 2, 9), bool], Tensor[(6, 2, 9), float64]) */;
  %253 = cast(meta[relay.Constant][12] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %254 = cast(meta[relay.Constant][12] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %255 = reshape(%253, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %256 = reshape(%254, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), int16] */;
  %257 = @func_835(%255, %256) /* ty=(Tensor[(12, 8, 3), float64],) */;
  %258 = %257.0;
  %259 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 8, 3), float64] */, dtype="int16") /* ty=Tensor[(12, 8, 3), int16] */;
  %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%258, dtype="int16") /* ty=Tensor[(12, 8, 3), int16] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %263 = cast(%var_2506, dtype="float64") /* ty=Tensor[(616), float64] */;
  %264 = cast(meta[relay.Constant][14] /* ty=Tensor[(52, 1), float32] */, dtype="float32") /* ty=Tensor[(52, 1), float32] */;
  %265 = reshape(%263, newshape=[154, 4]) /* ty=Tensor[(154, 4), float64] */;
  %266 = reshape(%264, newshape=[52]) /* ty=Tensor[(52), float32] */;
  %267 = @func_2287(%265, %266) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) */;
  %268 = cast(%var_2510, dtype="int32") /* ty=int32 */;
  %269 = reshape(%268, newshape=[]) /* ty=int32 */;
  %270 = @func_2014(%269) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float32], Tensor[(15, 13, 4), int32], int32, Tensor[(5, 156), int32]) */;
  %271 = minimum(%246, %247) /* ty=Tensor[(9, 2, 10), uint8] */;
  %272 = %252.1;
  %273 = multiply(%261, %262) /* ty=Tensor[(12, 8, 3), int16] */;
  %274 = %267.3;
  %275 = %270.2;
  (%271, meta[relay.Constant][12] /* ty=Tensor[(288), int16] */, %272, %var_2457, %273, %274, %var_2506, meta[relay.Constant][14] /* ty=Tensor[(52, 1), float32] */, %275, %var_2510)
}

def @func_2954(%var_2952: Tensor[(11, 10, 12), int32]) -> (Tensor[(11, 10, 12), bool], Tensor[(9, 2, 10), bool]) {
  @func_2951(%var_2952) /* ty=(Tensor[(11, 10, 12), bool], Tensor[(9, 2, 10), bool]) */
}

def @func_779(%var_751: Tensor[(13, 1, 4), float32]) -> (Tensor[(6, 2, 9), bool], Tensor[(108), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(13, ?, 4), int64]) {
  %276 = cast(meta[relay.Constant][15] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %277 = cast(meta[relay.Constant][15] /* ty=Tensor[(108), float64] */, dtype="float64") /* ty=Tensor[(108), float64] */;
  %278 = reshape(%276, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
  %279 = reshape(%277, newshape=[6, 2, 9]) /* ty=Tensor[(6, 2, 9), float64] */;
  %280 = @func_251(%278, %279) /* ty=(Tensor[(6, 2, 9), bool], Tensor[(6, 2, 9), float64]) */;
  %281 = cast(meta[relay.Constant][16] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %282 = reshape(%281, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %283 = @func_125(%282) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %284 = cast(%var_751, dtype="float32") /* ty=Tensor[(13, 1, 4), float32] */;
  %285 = acos(%284) /* ty=Tensor[(13, 1, 4), float32] */;
  %286 = cast(%var_751, dtype="int64") /* ty=Tensor[(13, 1, 4), int64] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%285, dtype="int64") /* ty=Tensor[(13, 1, 4), int64] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %290 = %280.0;
  %291 = %283.0;
  %292 = logical_xor(%288, %289) /* ty=Tensor[(13, ?, 4), int64] */;
  (%290, meta[relay.Constant][15] /* ty=Tensor[(108), float64] */, %291, meta[relay.Constant][16] /* ty=Tensor[(616), float64] */, %292)
}

def @main(%var_7850: Tensor[(3, 12, 5), int64], %var_7856: Tensor[(3, 12, 5), int64], %var_7861: Tensor[(3, 12, 5), int64]) -> (Tensor[(3, 12, 5), int64], Tensor[(3, 12, 5), uint64], Tensor[(3, 12, 5), bool]) {
  %293 = cast(%var_7850, dtype="int64") /* ty=Tensor[(3, 12, 5), int64] */;
  %294 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(3, 12, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 12, 5), int64] */, dtype="int64") /* ty=Tensor[(3, 12, 5), int64] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %297 = cast(%var_7856, dtype="uint64") /* ty=Tensor[(3, 12, 5), uint64] */;
  %298 = shape_of(%var_7850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%var_7850, dtype="uint64") /* ty=Tensor[(3, 12, 5), uint64] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %301 = cast(%var_7861, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %302 = shape_of(%var_7856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%var_7856, dtype="bool") /* ty=Tensor[(3, 12, 5), bool] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %305 = bitwise_or(%295, %296) /* ty=Tensor[(3, 12, 5), int64] */;
  %306 = minimum(%299, %300) /* ty=Tensor[(3, 12, 5), uint64] */;
  %307 = less(%303, %304) /* ty=Tensor[(3, 12, 5), bool] */;
  (%305, %306, %307)
}

def @func_4614() -> Tensor[(9, 2, 10), bool] {
  @func_4612() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_4975(%var_4973: Tensor[(60), float64], %var_4974: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(3, 1, 4), float32], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64]) {
  %318 = fn (%var_4962: Tensor[(60), float64], %var_4963: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(3, 1, 4), float32], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64]) {
    %308 = @func_3769() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %309 = cast(meta[relay.Constant][18] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
    %310 = cast(%var_4962, dtype="float64") /* ty=Tensor[(60), float64] */;
    %311 = cast(%var_4963, dtype="float64") /* ty=Tensor[(616), float64] */;
    %312 = reshape(%309, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
    %313 = reshape(%310, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
    %314 = reshape(%311, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %315 = @func_2178(%312, %313, %314) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
    %316 = %308.0;
    %317 = %315.0;
    (%316, %317, meta[relay.Constant][18] /* ty=Tensor[(12), float32] */, %var_4962, %var_4963)
  };
  %318(%var_4973, %var_4974) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(3, 1, 4), float32], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64]) */
}

def @func_6493(%var_6491: Tensor[(12), float32]) -> (Tensor[(9, 2, 10), float32], Tensor[(10, 3, 13), float64], Tensor[(15, 21), bool], Tensor[(12), float32], Tensor[(315), float32]) {
  @func_6490(%var_6491) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(10, 3, 13), float64], Tensor[(15, 21), bool], Tensor[(12), float32], Tensor[(315), float32]) */
}

def @func_2041() -> Tensor[(9, 2, 10), bool] {
  @func_2039() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_5490(%var_5487: Tensor[(15), float32], %var_5488: Tensor[(528), float64], %var_5489: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(15), float32], Tensor[(1, 288), int16], Tensor[(528), float64], Tensor[(616), float64]) {
  %333 = fn (%var_5465: Tensor[(15), float32], %var_5467: Tensor[(528), float64], %var_5468: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(15), float32], Tensor[(1, 288), int16], Tensor[(528), float64], Tensor[(616), float64]) {
    %319 = @func_3695() /* ty=Tensor[(9, 2, 10), bool] */;
    %320 = cast(%319, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
    %321 = cast(%var_5465, dtype="float32") /* ty=Tensor[(15), float32] */;
    %322 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 288), int16] */, dtype="int16") /* ty=Tensor[(1, 288), int16] */;
    %323 = cast(%var_5467, dtype="float64") /* ty=Tensor[(528), float64] */;
    %324 = cast(%var_5468, dtype="float64") /* ty=Tensor[(616), float64] */;
    %325 = reshape(%321, newshape=[15]) /* ty=Tensor[(15), float32] */;
    %326 = reshape(%322, newshape=[288]) /* ty=Tensor[(288), int16] */;
    %327 = reshape(%323, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %328 = reshape(%324, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %329 = @func_3996(%325, %326, %327, %328) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(?, 5, 3), int32], Tensor[(15), float32], Tensor[(108), float64], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(616), float64]) */;
    %330 = @func_4221() /* ty=Tensor[(9, 2, 10), bool] */;
    %331 = log10(%320) /* ty=Tensor[(9, 2, 10), float32] */;
    %332 = %329.0;
    (%330, %331, %332, %var_5465, meta[relay.Constant][19] /* ty=Tensor[(1, 288), int16] */, %var_5467, %var_5468)
  };
  %333(%var_5487, %var_5488, %var_5489) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(15), float32], Tensor[(1, 288), int16], Tensor[(528), float64], Tensor[(616), float64]) */
}

def @func_2151() -> Tensor[(9, 2, 10), bool] {
  @func_2149() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_7490() -> (Tensor[(9, 2, 10), bool],) {
  %335 = fn () -> (Tensor[(9, 2, 10), bool],) {
    %334 = @func_6090() /* ty=Tensor[(9, 2, 10), bool] */;
    (%334,)
  };
  %335() /* ty=(Tensor[(9, 2, 10), bool],) */
}

def @func_4719(%var_4717: Tensor[(60), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(3, 2, 10), float64], Tensor[(60), float64], Tensor[(616), float64]) {
  @func_4716(%var_4717) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(3, 2, 10), float64], Tensor[(60), float64], Tensor[(616), float64]) */
}

def @func_2016(%var_2015: int32) -> (Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float32], Tensor[(15, 13, 4), int32], int32, Tensor[(5, 156), int32]) {
  %350 = fn (%var_2006: int32) -> (Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float32], Tensor[(15, 13, 4), int32], int32, Tensor[(5, 156), int32]) {
    %336 = cast(meta[relay.Constant][20] /* ty=Tensor[(16, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
    %337 = cast(meta[relay.Constant][20] /* ty=Tensor[(16, 4, 11), float32] */, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
    %338 = asinh(%337) /* ty=Tensor[(16, 4, 11), float64] */;
    %339 = cast(%338, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
    %340 = cast(%338, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
    %341 = cast(%var_2006, dtype="int32") /* ty=int32 */;
    %342 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 156), int32] */, dtype="int32") /* ty=Tensor[(5, 156), int32] */;
    %343 = reshape(%341, newshape=[]) /* ty=int32 */;
    %344 = reshape(%342, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), int32] */;
    %345 = @func_1424(%343, %344) /* ty=(Tensor[(15, 13, 4), int32],) */;
    %346 = log(%336) /* ty=Tensor[(16, 4, 11), float32] */;
    %347 = exp(%339) /* ty=Tensor[(16, 4, 11), float64] */;
    %348 = sqrt(%340) /* ty=Tensor[(16, 4, 11), float32] */;
    %349 = %345.0;
    (%346, %347, %348, %349, %var_2006, meta[relay.Constant][21] /* ty=Tensor[(5, 156), int32] */)
  };
  %350(%var_2015) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float64], Tensor[(16, 4, 11), float32], Tensor[(15, 13, 4), int32], int32, Tensor[(5, 156), int32]) */
}

def @func_7728() -> Tensor[(1, 52), float32] {
  %351 = @func_7522() /* ty=(Tensor[(1, 52), float32],) */;
  %352 = %351.0;
  %353 = cast(%352, dtype="float32") /* ty=Tensor[(1, 52), float32] */;
  asin(%353) /* ty=Tensor[(1, 52), float32] */
}

def @func_3388() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) {
  %361 = fn () -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) {
    %354 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
    %355 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 88), float64] */, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
    %356 = reshape(%355, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
    %357 = @func_125(%356) /* ty=(Tensor[(8, 11, 7), float64],) */;
    %358 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
    %359 = %354.0;
    %360 = %357.0;
    (%358, %359, %360, meta[relay.Constant][22] /* ty=Tensor[(7, 88), float64] */)
  };
  %361() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) */
}

def @func_5912(%var_5910: Tensor[(24, 12), int16]) -> (Tensor[(9, 2, 10), bool], Tensor[(24, 12), int16], Tensor[(12, 8, 3), float64], Tensor[(10, 3, 13), float64]) {
  @func_5909(%var_5910) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(24, 12), int16], Tensor[(12, 8, 3), float64], Tensor[(10, 3, 13), float64]) */
}

def @func_6937(%var_6935: Tensor[(7, 11, 12), float64], %var_6936: Tensor[(7, 11, 12), float64]) -> (Tensor[(7, 11, 12), float64], Tensor[(7, 11, 12), int8]) {
  @func_6933(%var_6935, %var_6936) /* ty=(Tensor[(7, 11, 12), float64], Tensor[(7, 11, 12), int8]) */
}

def @func_2287(%var_2239: Tensor[(154, 4), float64], %var_2279: Tensor[(52), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) {
  %362 = cast(%var_2239, dtype="float64") /* ty=Tensor[(154, 4), float64] */;
  %363 = reshape(%362, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %364 = @func_125(%363) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %365 = cast(meta[relay.Constant][23] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %366 = %364.0;
  %367 = cast(%366, dtype="float64") /* ty=Tensor[(8, 11, 7), float64] */;
  %368 = reshape(%365, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %369 = reshape(%367, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %370 = @func_1209(%368, %369) /* ty=(Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %371 = cast(%var_2279, dtype="float32") /* ty=Tensor[(52), float32] */;
  %372 = reshape(%371, newshape=[13, 1, 4]) /* ty=Tensor[(13, 1, 4), float32] */;
  %373 = @func_779(%372) /* ty=(Tensor[(6, 2, 9), bool], Tensor[(108), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(13, ?, 4), int64]) */;
  %374 = @func_2039() /* ty=Tensor[(9, 2, 10), bool] */;
  %375 = %370.1;
  %376 = %373.3;
  (%374, %366, %var_2239, %375, meta[relay.Constant][23] /* ty=Tensor[(60), float64] */, %376, %var_2279)
}

def @func_5152(%var_5150: Tensor[(528), float64], %var_5151: Tensor[(60), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(616), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64]) {
  %397 = fn (%var_5106: Tensor[(528), float64], %var_5128: Tensor[(60), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(616), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64]) {
    %377 = @func_2963() /* ty=(Tensor[(9, 2, 10), float32],) */;
    %378 = %377.0;
    %379 = cast(%378, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
    %380 = cast(%var_5106, dtype="float64") /* ty=Tensor[(528), float64] */;
    %381 = cast(meta[relay.Constant][24] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %382 = reshape(%379, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), float32] */;
    %383 = reshape(%380, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %384 = reshape(%381, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %385 = @func_3445(%382, %383, %384) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
    %386 = cast(meta[relay.Constant][25] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
    %387 = cast(%var_5128, dtype="float64") /* ty=Tensor[(60), float64] */;
    %388 = %385.5;
    %389 = cast(%388, dtype="float64") /* ty=Tensor[(616), float64] */;
    %390 = reshape(%386, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
    %391 = reshape(%387, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
    %392 = reshape(%389, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %393 = @func_2178(%390, %391, %392) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
    %394 = cast(meta[relay.Constant][24] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %395 = %393.3;
    %396 = sinh(%394) /* ty=Tensor[(616), float64] */;
    (%378, %388, %var_5106, %395, meta[relay.Constant][25] /* ty=Tensor[(12), float32] */, %var_5128, %396)
  };
  %397(%var_5150, %var_5151) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(616), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64]) */
}

def @func_6115() -> Tensor[(9, 2, 10), float32] {
  @func_3790() /* ty=Tensor[(9, 2, 10), float32] */
}

def @func_6117() -> Tensor[(9, 2, 10), float32] {
  @func_6115() /* ty=Tensor[(9, 2, 10), float32] */
}

def @func_1212(%var_1210: Tensor[(3, 2, 10), float64], %var_1211: Tensor[(616), float64]) -> (Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) {
  %408 = fn (%var_1174: Tensor[(3, 2, 10), float64], %var_1205: Tensor[(616), float64]) -> (Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) {
    %398 = cast(%var_1174, dtype="float64") /* ty=Tensor[(3, 2, 10), float64] */;
    %399 = log(%398) /* ty=Tensor[(3, 2, 10), float64] */;
    %400 = cast(%399, dtype="float32") /* ty=Tensor[(3, 2, 10), float32] */;
    %401 = log10(%400) /* ty=Tensor[(3, 2, 10), float32] */;
    %402 = cast(%401, dtype="float64") /* ty=Tensor[(3, 2, 10), float64] */;
    %403 = cast(%var_1205, dtype="float64") /* ty=Tensor[(616), float64] */;
    %404 = reshape(%403, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
    %405 = @func_125(%404) /* ty=(Tensor[(8, 11, 7), float64],) */;
    %406 = erf(%402) /* ty=Tensor[(3, 2, 10), float64] */;
    %407 = %405.0;
    (%406, %407, %var_1205)
  };
  %408(%var_1210, %var_1211) /* ty=(Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */
}

def @func_7278() -> Tensor[(9, 2, 10), bool] {
  @func_5943() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_5372(%var_5370: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(13, 4), float32]) {
  @func_5369(%var_5370) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(13, 4), float32]) */
}

def @func_6690() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(315), float32]) {
  %409 = @func_2808() /* ty=Tensor[(9, 2, 10), bool] */;
  %410 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 2, 10), bool] */, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%409, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %414 = cast(meta[relay.Constant][27] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %415 = reshape(%414, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %416 = @func_4790(%415) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(60), float64], Tensor[(12), float32], Tensor[(315), float32]) */;
  %417 = greater_equal(%412, %413) /* ty=Tensor[(9, 2, 10), bool] */;
  %418 = %416.0;
  (%417, %418, meta[relay.Constant][27] /* ty=Tensor[(315), float32] */)
}

def @func_125(%var_116: Tensor[(8, 11, 7), float64]) -> (Tensor[(8, 11, 7), float64],) {
  %419 = cast(%var_116, dtype="float64") /* ty=Tensor[(8, 11, 7), float64] */;
  %420 = asin(%419) /* ty=Tensor[(8, 11, 7), float64] */;
  (%420,)
}

def @func_838(%var_836: Tensor[(12, 8, 3), int16], %var_837: Tensor[(12, 8, 3), int16]) -> (Tensor[(12, 8, 3), float64],) {
  %428 = fn (%var_827: Tensor[(12, 8, 3), int16], %var_828: Tensor[(12, 8, 3), int16]) -> (Tensor[(12, 8, 3), float64],) {
    %421 = cast(%var_828, dtype="bool") /* ty=Tensor[(12, 8, 3), bool] */;
    %422 = shape_of(%var_827, dtype="int32") /* ty=Tensor[(3), int32] */;
    %423 = cast(%var_827, dtype="bool") /* ty=Tensor[(12, 8, 3), bool] */;
    %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %425 = greater(%423, %424) /* ty=Tensor[(12, 8, 3), bool] */;
    %426 = cast(%425, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
    %427 = asin(%426) /* ty=Tensor[(12, 8, 3), float64] */;
    (%427,)
  };
  %428(%var_836, %var_837) /* ty=(Tensor[(12, 8, 3), float64],) */
}

def @func_2389() -> (Tensor[(9, 2, 10), bool],) {
  %430 = fn () -> (Tensor[(9, 2, 10), bool],) {
    %429 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
    (%429,)
  };
  %430() /* ty=(Tensor[(9, 2, 10), bool],) */
}

def @func_6771() -> Tensor[(8, 11, 7), float64] {
  %432 = fn () -> Tensor[(8, 11, 7), float64] {
    %431 = @func_3387() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) */;
    %431.2
  };
  %432() /* ty=Tensor[(8, 11, 7), float64] */
}

def @func_2630(%var_2628: Tensor[(12), float32], %var_2629: Tensor[(15, 21), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(15, 13, 4), int32], int32, Tensor[(780), int32], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool], Tensor[(7, 3, 1), float64], Tensor[(616), float64], Tensor[(15, 21), bool]) {
  %466 = fn (%var_2585: Tensor[(12), float32], %var_2621: Tensor[(15, 21), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(15, 13, 4), int32], int32, Tensor[(780), int32], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool], Tensor[(7, 3, 1), float64], Tensor[(616), float64], Tensor[(15, 21), bool]) {
    %433 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %434 = cast(2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %435 = cast(meta[relay.Constant][28] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
    %436 = reshape(%434, newshape=[]) /* ty=int32 */;
    %437 = reshape(%435, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), int32] */;
    %438 = @func_1424(%436, %437) /* ty=(Tensor[(15, 13, 4), int32],) */;
    %439 = cast(%var_2585, dtype="float32") /* ty=Tensor[(12), float32] */;
    %440 = cast(meta[relay.Constant][29] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %441 = cast(meta[relay.Constant][30] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %442 = reshape(%439, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
    %443 = reshape(%440, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
    %444 = reshape(%441, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %445 = @func_2178(%442, %443, %444) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
    %446 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 21), float64] */, dtype="float64") /* ty=Tensor[(1, 21), float64] */;
    %447 = reshape(%446, newshape=[7, 3, 1]) /* ty=Tensor[(7, 3, 1), float64] */;
    %448 = cast(%var_2585, dtype="float32") /* ty=Tensor[(12), float32] */;
    %449 = cast(meta[relay.Constant][29] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %450 = %445.3;
    %451 = cast(%450, dtype="float64") /* ty=Tensor[(616), float64] */;
    %452 = reshape(%448, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
    %453 = reshape(%449, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
    %454 = reshape(%451, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %455 = @func_2178(%452, %453, %454) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
    %456 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 21), float64] */, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
    %457 = sinh(%456) /* ty=Tensor[(1, 21), float32] */;
    %458 = cast(%457, dtype="bool") /* ty=Tensor[(1, 21), bool] */;
    %459 = cast(%var_2621, dtype="bool") /* ty=Tensor[(15, 21), bool] */;
    %460 = %433.0;
    %461 = %438.0;
    %462 = @func_2129() /* ty=Tensor[(9, 2, 10), bool] */;
    %463 = @func_1762(%447) /* ty=Tensor[(7, 3, 1), float64] */;
    %464 = %455.3;
    %465 = not_equal(%458, %459) /* ty=Tensor[(15, 21), bool] */;
    (%460, %461, 2 /* ty=int32 */, meta[relay.Constant][28] /* ty=Tensor[(780), int32] */, %450, %var_2585, meta[relay.Constant][29] /* ty=Tensor[(60), float64] */, meta[relay.Constant][30] /* ty=Tensor[(616), float64] */, %462, %463, %464, %465)
  };
  %466(%var_2628, %var_2629) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(15, 13, 4), int32], int32, Tensor[(780), int32], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool], Tensor[(7, 3, 1), float64], Tensor[(616), float64], Tensor[(15, 21), bool]) */
}

def @func_2178(%var_2162: Tensor[(3, 1, 4), float32], %var_2170: Tensor[(60, 1), float64], %var_2171: Tensor[(616), float64]) -> (Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) {
  %467 = cast(%var_2162, dtype="float32") /* ty=Tensor[(3, 1, 4), float32] */;
  %468 = cast(%var_2170, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %469 = cast(%var_2171, dtype="float64") /* ty=Tensor[(616), float64] */;
  %470 = reshape(%468, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %471 = reshape(%469, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %472 = @func_1209(%470, %471) /* ty=(Tensor[(3, 2, 10), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %473 = log10(%467) /* ty=Tensor[(3, 1, 4), float32] */;
  %474 = %472.2;
  (%473, %474, %var_2170, %var_2171)
}

def @func_4856() -> Tensor[(9, 2, 10), bool] {
  @func_4854() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_6048() -> Tensor[(9, 2, 10), bool] {
  %476 = fn () -> Tensor[(9, 2, 10), bool] {
    %475 = @func_5533() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) */;
    %475.1
  };
  %476() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_7524() -> (Tensor[(1, 52), float32],) {
  @func_7522() /* ty=(Tensor[(1, 52), float32],) */
}

def @func_2965() -> (Tensor[(9, 2, 10), float32],) {
  @func_2963() /* ty=(Tensor[(9, 2, 10), float32],) */
}

def @func_5082() -> (Tensor[(9, 2, 10), bool],) {
  @func_5080() /* ty=(Tensor[(9, 2, 10), bool],) */
}

def @func_4286(%var_4285: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), uint32], Tensor[(60), float64], Tensor[(528), float64], Tensor[(616), float64]) {
  %492 = fn (%var_4264: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), uint32], Tensor[(60), float64], Tensor[(528), float64], Tensor[(616), float64]) {
    %477 = @func_2689() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %478 = %477.0;
    %479 = cast(%var_4264, dtype="uint32") /* ty=Tensor[(9, 2, 10), uint32] */;
    %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
    %481 = cast(%478, dtype="uint32") /* ty=Tensor[(9, 2, 10), uint32] */;
    %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %483 = cast(%var_4264, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
    %484 = cast(meta[relay.Constant][32] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %485 = cast(meta[relay.Constant][33] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %486 = reshape(%483, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), float32] */;
    %487 = reshape(%484, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %488 = reshape(%485, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %489 = @func_3445(%486, %487, %488) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
    %490 = right_shift(%481, %482) /* ty=Tensor[(9, 2, 10), uint32] */;
    %491 = %489.4;
    (%490, %491, meta[relay.Constant][32] /* ty=Tensor[(528), float64] */, meta[relay.Constant][33] /* ty=Tensor[(616), float64] */)
  };
  %492(%var_4285) /* ty=(Tensor[(9, 2, 10), uint32], Tensor[(60), float64], Tensor[(528), float64], Tensor[(616), float64]) */
}

def @func_2183(%var_2180: Tensor[(3, 1, 4), float32], %var_2181: Tensor[(60, 1), float64], %var_2182: Tensor[(616), float64]) -> (Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) {
  @func_2178(%var_2180, %var_2181, %var_2182) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */
}

def @func_7196(%var_7193: Tensor[(616), float64], %var_7194: Tensor[(52), float32], %var_7195: Tensor[(52), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(154, 4), float64], Tensor[(616), float64], Tensor[(52), int32]) {
  %512 = fn (%var_7136: Tensor[(616), float64], %var_7137: Tensor[(52), float32], %var_7159: Tensor[(52), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(154, 4), float64], Tensor[(616), float64], Tensor[(52), int32]) {
    %493 = cast(%var_7136, dtype="float64") /* ty=Tensor[(616), float64] */;
    %494 = cast(%var_7137, dtype="float32") /* ty=Tensor[(52), float32] */;
    %495 = reshape(%493, newshape=[154, 4]) /* ty=Tensor[(154, 4), float64] */;
    %496 = reshape(%494, newshape=[52]) /* ty=Tensor[(52), float32] */;
    %497 = @func_2287(%495, %496) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) */;
    %498 = cast(%var_7137, dtype="float64") /* ty=Tensor[(52), float64] */;
    %499 = asinh(%498) /* ty=Tensor[(52), float64] */;
    %500 = cast(%var_7159, dtype="uint32") /* ty=Tensor[(52), uint32] */;
    %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(1), int32] */;
    %502 = cast(%499, dtype="uint32") /* ty=Tensor[(52), uint32] */;
    %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %504 = add(%502, %503) /* ty=Tensor[(52), uint32] */;
    %505 = cast(%504, dtype="int32") /* ty=Tensor[(52), int32] */;
    %506 = shape_of(%499, dtype="int32") /* ty=Tensor[(1), int32] */;
    %507 = cast(%499, dtype="int32") /* ty=Tensor[(52), int32] */;
    %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?), int32] */;
    %509 = @func_6090() /* ty=Tensor[(9, 2, 10), bool] */;
    %510 = %497.2;
    %511 = left_shift(%507, %508) /* ty=Tensor[(52), int32] */;
    (%509, %510, %var_7136, %511)
  };
  %512(%var_7193, %var_7194, %var_7195) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(154, 4), float64], Tensor[(616), float64], Tensor[(52), int32]) */
}

def @func_3213(%var_3180: Tensor[(528), float64], %var_3187: Tensor[(1, 60), float64], %var_3188: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(3, 4), float32], Tensor[(616), float64], Tensor[(1, 60), float64]) {
  %513 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %514 = cast(%var_3180, dtype="float64") /* ty=Tensor[(528), float64] */;
  %515 = cast(%var_3180, dtype="float64") /* ty=Tensor[(528), float64] */;
  %516 = reshape(%514, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float64] */;
  %517 = reshape(%515, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float64] */;
  %518 = @func_1554(%516, %517) /* ty=(Tensor[(11, 12, 4), float64],) */;
  %519 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 4), float32] */, dtype="float32") /* ty=Tensor[(3, 4), float32] */;
  %520 = cast(%var_3187, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %521 = cast(%var_3188, dtype="float64") /* ty=Tensor[(616), float64] */;
  %522 = reshape(%519, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %523 = reshape(%520, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
  %524 = reshape(%521, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %525 = @func_2178(%522, %523, %524) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
  %526 = cast(%var_3187, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %527 = %513.1;
  %528 = %518.0;
  %529 = %525.1;
  %530 = log(%526) /* ty=Tensor[(1, 60), float64] */;
  (%527, %528, %var_3180, %529, meta[relay.Constant][34] /* ty=Tensor[(3, 4), float32] */, %var_3188, %530)
}

def @func_7367() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) {
  @func_7365() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) */
}

def @func_6159() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 6, 16), float32], Tensor[(864), bool]) {
  %539 = fn () -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 6, 16), float32], Tensor[(864), bool]) {
    %531 = cast(meta[relay.Constant][35] /* ty=Tensor[(864), bool] */, dtype="bool") /* ty=Tensor[(864), bool] */;
    %532 = cast(meta[relay.Constant][35] /* ty=Tensor[(864), bool] */, dtype="bool") /* ty=Tensor[(864), bool] */;
    %533 = reshape(%531, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
    %534 = reshape(%532, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
    %535 = @func_2787(%533, %534) /* ty=(Tensor[(9, 6, 16), bool], Tensor[(9, 6, 16), float32]) */;
    %536 = @func_4221() /* ty=Tensor[(9, 2, 10), bool] */;
    %537 = @func_6047() /* ty=Tensor[(9, 2, 10), bool] */;
    %538 = %535.1;
    (%536, %537, %538, meta[relay.Constant][35] /* ty=Tensor[(864), bool] */)
  };
  %539() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 6, 16), float32], Tensor[(864), bool]) */
}

def @func_7467() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), float32]) {
  %540 = @func_3010() /* ty=Tensor[(9, 2, 10), bool] */;
  %541 = cast(%540, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %542 = reshape(%541, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
  %543 = @func_5172(%542) /* ty=(Tensor[(9, 2, 10), float64],) */;
  %544 = @func_6265() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %545 = @func_7317() /* ty=Tensor[(9, 2, 10), bool] */;
  %546 = %543.0;
  %547 = %544.0;
  (%545, %540, %546, %547)
}

def @func_5809() -> (Tensor[(9, 2, 10), float32],) {
  %552 = fn () -> (Tensor[(9, 2, 10), float32],) {
    %548 = @func_3769() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %549 = %548.0;
    %550 = cast(%549, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
    %551 = cos(%550) /* ty=Tensor[(9, 2, 10), float32] */;
    (%551,)
  };
  %552() /* ty=(Tensor[(9, 2, 10), float32],) */
}

def @func_7280() -> Tensor[(9, 2, 10), bool] {
  @func_7278() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_2737() -> (Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) {
  @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */
}

def @func_4221() -> Tensor[(9, 2, 10), bool] {
  @func_3398() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_5583() -> Tensor[(6, 5, 14), float64] {
  %554 = fn () -> Tensor[(6, 5, 14), float64] {
    %553 = @func_3530() /* ty=(Tensor[(180), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), bool], Tensor[(6, 5, 14), float64]) */;
    %553.3
  };
  %554() /* ty=Tensor[(6, 5, 14), float64] */
}

def @func_3918(%var_3916: Tensor[(9, 1, 13), float64], %var_3917: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float32],) {
  %566 = fn (%var_3896: Tensor[(9, 1, 13), float64], %var_3897: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float32],) {
    %555 = cast(%var_3896, dtype="float64") /* ty=Tensor[(9, 1, 13), float64] */;
    %556 = cast(%var_3897, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
    %557 = floor_divide(%555, %556) /* ty=Tensor[(9, 12, 13), float64] */;
    %558 = cast(%var_3896, dtype="int8") /* ty=Tensor[(9, 1, 13), int8] */;
    %559 = cast(%var_3897, dtype="int8") /* ty=Tensor[(9, 12, 13), int8] */;
    %560 = left_shift(%558, %559) /* ty=Tensor[(9, 12, 13), int8] */;
    %561 = cast(%560, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
    %562 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
    %563 = cast(%557, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
    %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %565 = add(%563, %564) /* ty=Tensor[(9, 12, 13), float32] */;
    (%565,)
  };
  %566(%var_3916, %var_3917) /* ty=(Tensor[(9, 12, 13), float32],) */
}

def @func_4667() -> Tensor[(9, 2, 10), bool] {
  %567 = fn () -> Tensor[(9, 2, 10), bool] {
    @func_2039() /* ty=Tensor[(9, 2, 10), bool] */
  };
  %567() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_4116() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32]) {
  @func_4114() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32]) */
}

def @func_2228(%var_2227: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), float64],) {
  %574 = fn (%var_2218: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), float64],) {
    %568 = @func_2129() /* ty=Tensor[(9, 2, 10), bool] */;
    %569 = cast(%var_2218, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
    %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
    %571 = cast(%568, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
    %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %573 = mod(%571, %572) /* ty=Tensor[(9, 2, 10), float64] */;
    (%573,)
  };
  %574(%var_2227) /* ty=(Tensor[(9, 2, 10), float64],) */
}

def @func_7838() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) {
  %578 = fn () -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) {
    %575 = @func_5533() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) */;
    %576 = @func_4666() /* ty=Tensor[(9, 2, 10), bool] */;
    %577 = %575.0;
    (%576, %577)
  };
  %578() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool]) */
}

def @func_4790(%var_4767: Tensor[(315), float32]) -> (Tensor[(9, 2, 10), float32], Tensor[(60), float64], Tensor[(12), float32], Tensor[(315), float32]) {
  %579 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %580 = cast(meta[relay.Constant][36] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %581 = cast(%var_4767, dtype="float32") /* ty=Tensor[(315), float32] */;
  %582 = reshape(%580, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %583 = reshape(%581, newshape=[15, 21]) /* ty=Tensor[(15, 21), float32] */;
  %584 = @func_2627(%582, %583) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(15, 13, 4), int32], int32, Tensor[(780), int32], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool], Tensor[(7, 3, 1), float64], Tensor[(616), float64], Tensor[(15, 21), bool]) */;
  %585 = %579.0;
  %586 = %584.6;
  (%585, %586, meta[relay.Constant][36] /* ty=Tensor[(12), float32] */, %var_4767)
}

def @func_6326(%var_6323: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(9, 2, 10), bool], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(60, 1), float64], Tensor[(12), float32], Tensor[(616), float64]) {
  %587 = @func_5252() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %588 = cast(meta[relay.Constant][37] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %589 = cast(meta[relay.Constant][38] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %590 = reshape(%588, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %591 = reshape(%589, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %592 = @func_5149(%590, %591) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(616), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64]) */;
  %593 = cast(meta[relay.Constant][39] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %594 = reshape(%593, newshape=[24, 12]) /* ty=Tensor[(24, 12), int16] */;
  %595 = @func_5909(%594) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(24, 12), int16], Tensor[(12, 8, 3), float64], Tensor[(10, 3, 13), float64]) */;
  %596 = cast(meta[relay.Constant][40] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %597 = cast(meta[relay.Constant][38] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %598 = cast(%var_6323, dtype="float64") /* ty=Tensor[(616), float64] */;
  %599 = reshape(%596, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %600 = reshape(%597, newshape=[60, 1]) /* ty=Tensor[(60, 1), float64] */;
  %601 = reshape(%598, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %602 = @func_2178(%599, %600, %601) /* ty=(Tensor[(3, 1, 4), float32], Tensor[(616), float64], Tensor[(60, 1), float64], Tensor[(616), float64]) */;
  %603 = %587.0;
  %604 = @func_6115() /* ty=Tensor[(9, 2, 10), float32] */;
  %605 = %592.2;
  %606 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  %607 = %595.2;
  %608 = %602.2;
  (%603, %604, %605, meta[relay.Constant][37] /* ty=Tensor[(528), float64] */, meta[relay.Constant][38] /* ty=Tensor[(60), float64] */, %606, %607, meta[relay.Constant][39] /* ty=Tensor[(288), int16] */, %608, meta[relay.Constant][40] /* ty=Tensor[(12), float32] */, %var_6323)
}

def @func_1427(%var_1425: int32, %var_1426: Tensor[(15, 13, 4), int32]) -> (Tensor[(15, 13, 4), int32],) {
  %612 = fn (%var_1409: int32, %var_1410: Tensor[(15, 13, 4), int32]) -> (Tensor[(15, 13, 4), int32],) {
    %609 = cast(%var_1409, dtype="int32") /* ty=int32 */;
    %610 = cast(%var_1410, dtype="int32") /* ty=Tensor[(15, 13, 4), int32] */;
    %611 = multiply(%609, %610) /* ty=Tensor[(15, 13, 4), int32] */;
    (%611,)
  };
  %612(%var_1425, %var_1426) /* ty=(Tensor[(15, 13, 4), int32],) */
}

def @func_3011() -> Tensor[(9, 2, 10), bool] {
  %613 = fn () -> Tensor[(9, 2, 10), bool] {
    @func_2129() /* ty=Tensor[(9, 2, 10), bool] */
  };
  %613() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_2735() -> (Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) {
  %614 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %616 = log2(%615) /* ty=Tensor[(9, 2, 10), float32] */;
  %617 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  (%616, %617)
}

def @func_5080() -> (Tensor[(9, 2, 10), bool],) {
  %618 = @func_2129() /* ty=Tensor[(9, 2, 10), bool] */;
  (%618,)
}

def @func_7317() -> Tensor[(9, 2, 10), bool] {
  @func_4612() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_6886(%var_6884: Tensor[(616), float64], %var_6885: Tensor[(528), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(9, 12, 13), float32], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(6, 5, 14), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(528), uint32], Tensor[(10, 3, 13), float64]) {
  %650 = fn (%var_6859: Tensor[(616), float64], %var_6873: Tensor[(528), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(9, 12, 13), float32], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(6, 5, 14), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(528), uint32], Tensor[(10, 3, 13), float64]) {
    %619 = @func_5808() /* ty=(Tensor[(9, 2, 10), float32],) */;
    %620 = @func_4918() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(7, 88), float64]) */;
    %621 = %620.0;
    %622 = cast(%621, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
    %623 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
    %624 = cast(meta[relay.Constant][41] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
    %625 = cast(meta[relay.Constant][42] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %626 = reshape(%624, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
    %627 = reshape(%625, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
    %628 = @func_3915(%626, %627) /* ty=(Tensor[(9, 12, 13), float32],) */;
    %629 = @func_3530() /* ty=(Tensor[(180), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), bool], Tensor[(6, 5, 14), float64]) */;
    %630 = atanh(%622) /* ty=Tensor[(9, 2, 10), float32] */;
    %631 = cast(%630, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
    %632 = cast(meta[relay.Constant][43] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %633 = cast(%var_6859, dtype="float64") /* ty=Tensor[(616), float64] */;
    %634 = reshape(%631, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), float32] */;
    %635 = reshape(%632, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %636 = reshape(%633, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %637 = @func_3445(%634, %635, %636) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
    %638 = cast(%var_6873, dtype="uint32") /* ty=Tensor[(528), uint32] */;
    %639 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(528), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %640 = cast(meta[relay.Constant][43] /* ty=Tensor[(528), float64] */, dtype="uint32") /* ty=Tensor[(528), uint32] */;
    %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %642 = @func_4313() /* ty=(Tensor[(10, 3, 13), float64],) */;
    %643 = %619.0;
    %644 = %623.1;
    %645 = %628.0;
    %646 = %629.3;
    %647 = %637.3;
    %648 = left_shift(%640, %641) /* ty=Tensor[(528), uint32] */;
    %649 = %642.0;
    (%643, %630, %644, %645, meta[relay.Constant][41] /* ty=Tensor[(117), float64] */, meta[relay.Constant][42] /* ty=Tensor[(1404), float64] */, %646, %647, %var_6859, %648, %649)
  };
  %650(%var_6884, %var_6885) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(9, 12, 13), float32], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(6, 5, 14), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(528), uint32], Tensor[(10, 3, 13), float64]) */
}

def @func_7656(%var_7655: Tensor[(60), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(3, 2, 10), float64], Tensor[(60), float64], Tensor[(9, 2, 10), bool], Tensor[(616), float64]) {
  %660 = fn (%var_7648: Tensor[(60), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(3, 2, 10), float64], Tensor[(60), float64], Tensor[(9, 2, 10), bool], Tensor[(616), float64]) {
    %651 = cast(%var_7648, dtype="float64") /* ty=Tensor[(60), float64] */;
    %652 = reshape(%651, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %653 = @func_4716(%652) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(3, 2, 10), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
    %654 = cast(meta[relay.Constant][44] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %655 = reshape(%654, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %656 = @func_6326(%655) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(9, 2, 10), bool], Tensor[(12, 8, 3), float64], Tensor[(288), int16], Tensor[(60, 1), float64], Tensor[(12), float32], Tensor[(616), float64]) */;
    %657 = @func_2039() /* ty=Tensor[(9, 2, 10), bool] */;
    %658 = %653.1;
    %659 = %656.5;
    (%657, %658, %var_7648, %659, meta[relay.Constant][44] /* ty=Tensor[(616), float64] */)
  };
  %660(%var_7655) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(3, 2, 10), float64], Tensor[(60), float64], Tensor[(9, 2, 10), bool], Tensor[(616), float64]) */
}

def @func_3770() -> (Tensor[(9, 2, 10), bool],) {
  %662 = fn () -> (Tensor[(9, 2, 10), bool],) {
    %661 = @func_3010() /* ty=Tensor[(9, 2, 10), bool] */;
    (%661,)
  };
  %662() /* ty=(Tensor[(9, 2, 10), bool],) */
}

def @func_3218(%var_3215: Tensor[(528), float64], %var_3216: Tensor[(1, 60), float64], %var_3217: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(3, 4), float32], Tensor[(616), float64], Tensor[(1, 60), float64]) {
  @func_3213(%var_3215, %var_3216, %var_3217) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(3, 4), float32], Tensor[(616), float64], Tensor[(1, 60), float64]) */
}

def @func_5252() -> (Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) {
  %663 = @func_2149() /* ty=Tensor[(9, 2, 10), bool] */;
  %664 = cast(%663, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %665 = cast(meta[relay.Constant][45] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %666 = reshape(%665, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %667 = @func_125(%666) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %668 = atan(%664) /* ty=Tensor[(9, 2, 10), float32] */;
  %669 = %667.0;
  (%668, %669, meta[relay.Constant][45] /* ty=Tensor[(616), float64] */)
}

def @func_2149() -> Tensor[(9, 2, 10), bool] {
  @func_2129() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_6000(%var_5998: Tensor[(16, 9, 7), uint16], %var_5999: Tensor[(16, 9, 7), uint16]) -> (Tensor[(16, 9, 7), bool], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(16, 9, 7), float64], Tensor[(9, 2, 10), bool]) {
  @func_5996(%var_5998, %var_5999) /* ty=(Tensor[(16, 9, 7), bool], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(16, 9, 7), float64], Tensor[(9, 2, 10), bool]) */
}

def @func_5254() -> (Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) {
  @func_5252() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */
}

def @func_6071(%var_6060: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), float64],) {
  %670 = @func_6047() /* ty=Tensor[(9, 2, 10), bool] */;
  %671 = cast(%var_6060, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%670, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %675 = power(%673, %674) /* ty=Tensor[(9, 2, 10), float64] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %677 = asin(%676) /* ty=Tensor[(9, 2, 10), float64] */;
  (%677,)
}

def @func_3445(%var_3423: Tensor[(9, 2, 10), float32], %var_3440: Tensor[(528), float64], %var_3442: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) {
  %678 = @func_2963() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %679 = %678.0;
  %680 = cast(%var_3423, dtype="int32") /* ty=Tensor[(9, 2, 10), int32] */;
  %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%679, dtype="int32") /* ty=Tensor[(9, 2, 10), int32] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %684 = cast(%var_3423, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %685 = cast(%var_3440, dtype="float64") /* ty=Tensor[(528), float64] */;
  %686 = cast(meta[relay.Constant][46] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %687 = cast(%var_3442, dtype="float64") /* ty=Tensor[(616), float64] */;
  %688 = reshape(%685, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %689 = reshape(%686, newshape=[1, 60]) /* ty=Tensor[(1, 60), float64] */;
  %690 = reshape(%687, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %691 = @func_3213(%688, %689, %690) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(616), float64], Tensor[(3, 4), float32], Tensor[(616), float64], Tensor[(1, 60), float64]) */;
  %692 = bitwise_or(%682, %683) /* ty=Tensor[(9, 2, 10), int32] */;
  %693 = erf(%684) /* ty=Tensor[(9, 2, 10), float32] */;
  %694 = %691.1;
  (%692, %693, %694, %var_3440, meta[relay.Constant][46] /* ty=Tensor[(60), float64] */, %var_3442)
}

def @func_4223() -> Tensor[(9, 2, 10), bool] {
  @func_4221() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_5205(%var_5184: Tensor[(5, 7, 6), int8]) -> (Tensor[(5, 7, 6), int8], Tensor[(5, 7, 6), float64]) {
  %695 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 7, 6), int8] */, dtype="int8") /* ty=Tensor[(5, 7, 6), int8] */;
  %696 = shape_of(%var_5184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%var_5184, dtype="int8") /* ty=Tensor[(5, 7, 6), int8] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %699 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 7, 6), int8] */, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %700 = tan(%699) /* ty=Tensor[(5, 7, 6), float32] */;
  %701 = cast(%700, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  %702 = add(%697, %698) /* ty=Tensor[(5, 7, 6), int8] */;
  %703 = acos(%701) /* ty=Tensor[(5, 7, 6), float64] */;
  (%702, %703)
}

def @func_2039() -> Tensor[(9, 2, 10), bool] {
  %704 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 2, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %705 = rsqrt(%704) /* ty=Tensor[(9, 2, 10), float64] */;
  %706 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 2, 10), float64] */, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %707 = shape_of(%705, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%705, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%708, %709) /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_3532() -> (Tensor[(180), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), bool], Tensor[(6, 5, 14), float64]) {
  @func_3530() /* ty=(Tensor[(180), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), bool], Tensor[(6, 5, 14), float64]) */
}

def @func_4114() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32]) {
  %710 = @func_2808() /* ty=Tensor[(9, 2, 10), bool] */;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %712 = log(%711) /* ty=Tensor[(9, 2, 10), float64] */;
  %713 = cast(%712, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %714 = @func_3398() /* ty=Tensor[(9, 2, 10), bool] */;
  %715 = sinh(%713) /* ty=Tensor[(9, 2, 10), float32] */;
  (%714, %715)
}

def @func_3530() -> (Tensor[(180), bool], Tensor[(9, 2, 10), float64], Tensor[(9, 2, 10), bool], Tensor[(6, 5, 14), float64]) {
  %716 = cast(meta[relay.Constant][49] /* ty=Tensor[(180), bool] */, dtype="bool") /* ty=Tensor[(180), bool] */;
  %717 = reshape(%716, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
  %718 = @func_2226(%717) /* ty=(Tensor[(9, 2, 10), float64],) */;
  %719 = %718.0;
  %720 = @func_2689() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %721 = %720.0;
  %722 = cast(%721, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %723 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%719, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %726 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(6, 5, 14), float64] */;
  %727 = sigmoid(%726) /* ty=Tensor[(6, 5, 14), float64] */;
  %728 = cast(%727, dtype="float64") /* ty=Tensor[(6, 5, 14), float64] */;
  %729 = divide(%724, %725) /* ty=Tensor[(9, 2, 10), float64] */;
  %730 = @func_3398() /* ty=Tensor[(9, 2, 10), bool] */;
  %731 = erf(%728) /* ty=Tensor[(6, 5, 14), float64] */;
  (meta[relay.Constant][49] /* ty=Tensor[(180), bool] */, %729, %730, %731)
}

def @func_5996(%var_5946: Tensor[(16, 9, 7), uint16], %var_5947: Tensor[(16, 9, 7), uint16]) -> (Tensor[(16, 9, 7), bool], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool], Tensor[(16, 9, 7), float64], Tensor[(9, 2, 10), bool]) {
  %732 = cast(%var_5947, dtype="bool") /* ty=Tensor[(16, 9, 7), bool] */;
  %733 = shape_of(%var_5946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_5946, dtype="bool") /* ty=Tensor[(16, 9, 7), bool] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %736 = @func_5808() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %737 = cast(%var_5946, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %738 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %739 = equal(%734, %735) /* ty=Tensor[(16, 9, 7), bool] */;
  %740 = %736.0;
  %741 = @func_2039() /* ty=Tensor[(9, 2, 10), bool] */;
  %742 = asinh(%737) /* ty=Tensor[(16, 9, 7), float64] */;
  %743 = %738.0;
  (%739, %740, %741, %742, %743)
}

def @func_3400() -> Tensor[(9, 2, 10), bool] {
  @func_3398() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_4918() -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(7, 88), float64]) {
  %744 = @func_3387() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) */;
  %745 = @func_3010() /* ty=Tensor[(9, 2, 10), bool] */;
  %746 = @func_4854() /* ty=Tensor[(9, 2, 10), bool] */;
  %747 = %744.3;
  (%745, %746, %747)
}

def @func_3697() -> Tensor[(9, 2, 10), bool] {
  @func_3695() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_7552(%var_7551: Tensor[(11, 5, 11), float64]) -> (Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64]) {
  %752 = fn (%var_7534: Tensor[(11, 5, 11), float64]) -> (Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64]) {
    %748 = cast(%var_7534, dtype="float64") /* ty=Tensor[(11, 5, 11), float64] */;
    %749 = cast(%var_7534, dtype="float64") /* ty=Tensor[(11, 5, 11), float64] */;
    %750 = rsqrt(%748) /* ty=Tensor[(11, 5, 11), float64] */;
    %751 = cos(%749) /* ty=Tensor[(11, 5, 11), float64] */;
    (%750, %751)
  };
  %752(%var_7551) /* ty=(Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64]) */
}

def @func_1255(%var_1239: Tensor[(8, 5, 2), uint16]) -> (Tensor[(8, 5, 2), float64],) {
  %753 = cast(%var_1239, dtype="bool") /* ty=Tensor[(8, 5, 2), bool] */;
  %754 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(8, 5, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(meta[relay.Constant][51] /* ty=Tensor[(8, 5, 2), uint16] */, dtype="bool") /* ty=Tensor[(8, 5, 2), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %757 = not_equal(%755, %756) /* ty=Tensor[(8, 5, 2), bool] */;
  %758 = cast(%757, dtype="float64") /* ty=Tensor[(8, 5, 2), float64] */;
  %759 = sigmoid(%758) /* ty=Tensor[(8, 5, 2), float64] */;
  (%759,)
}

def @func_2790(%var_2788: Tensor[(9, 6, 16), bool], %var_2789: Tensor[(9, 6, 16), bool]) -> (Tensor[(9, 6, 16), bool], Tensor[(9, 6, 16), float32]) {
  %767 = fn (%var_2771: Tensor[(9, 6, 16), bool], %var_2772: Tensor[(9, 6, 16), bool]) -> (Tensor[(9, 6, 16), bool], Tensor[(9, 6, 16), float32]) {
    %760 = cast(%var_2772, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
    %761 = shape_of(%var_2771, dtype="int32") /* ty=Tensor[(3), int32] */;
    %762 = cast(%var_2771, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
    %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %764 = cast(%var_2771, dtype="float32") /* ty=Tensor[(9, 6, 16), float32] */;
    %765 = logical_or(%762, %763) /* ty=Tensor[(9, 6, 16), bool] */;
    %766 = sinh(%764) /* ty=Tensor[(9, 6, 16), float32] */;
    (%765, %766)
  };
  %767(%var_2788, %var_2789) /* ty=(Tensor[(9, 6, 16), bool], Tensor[(9, 6, 16), float32]) */
}

def @func_3398() -> Tensor[(9, 2, 10), bool] {
  %768 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
  %768.1
}

def @func_2933(%var_2932: Tensor[(864), bool]) -> (Tensor[(9, 2, 10), float32], Tensor[(9, 6, 16), bool], Tensor[(864), bool]) {
  %779 = fn (%var_2922: Tensor[(864), bool]) -> (Tensor[(9, 2, 10), float32], Tensor[(9, 6, 16), bool], Tensor[(864), bool]) {
    %769 = @func_2735() /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
    %770 = %769.0;
    %771 = cast(%770, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
    %772 = cast(%var_2922, dtype="bool") /* ty=Tensor[(864), bool] */;
    %773 = cast(%var_2922, dtype="bool") /* ty=Tensor[(864), bool] */;
    %774 = reshape(%772, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
    %775 = reshape(%773, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
    %776 = @func_2787(%774, %775) /* ty=(Tensor[(9, 6, 16), bool], Tensor[(9, 6, 16), float32]) */;
    %777 = acosh(%771) /* ty=Tensor[(9, 2, 10), float32] */;
    %778 = %776.0;
    (%777, %778, %var_2922)
  };
  %779(%var_2932) /* ty=(Tensor[(9, 2, 10), float32], Tensor[(9, 6, 16), bool], Tensor[(864), bool]) */
}

def @func_4433(%var_4426: Tensor[(1, 616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), int32], Tensor[(528), float64], Tensor[(1, 616), float64]) {
  %780 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %781 = @func_3387() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) */;
  %782 = %781.0;
  %783 = cast(%782, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
  %784 = cast(meta[relay.Constant][52] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %785 = cast(%var_4426, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %786 = reshape(%783, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), float32] */;
  %787 = reshape(%784, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %788 = reshape(%785, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %789 = @func_3445(%786, %787, %788) /* ty=(Tensor[(9, 2, 10), int32], Tensor[(9, 2, 10), float32], Tensor[(11, 12, 4), float64], Tensor[(528), float64], Tensor[(60), float64], Tensor[(616), float64]) */;
  %790 = %780.0;
  %791 = %789.0;
  (%790, %782, %791, meta[relay.Constant][52] /* ty=Tensor[(528), float64] */, %var_4426)
}

def @func_7244(%var_7243: Tensor[(8, 1, 1), float64]) -> (Tensor[(8, 1, 1), float64], Tensor[(8, 1, 1), float32], Tensor[(8, 1, 1), float32]) {
  %798 = fn (%var_7219: Tensor[(8, 1, 1), float64]) -> (Tensor[(8, 1, 1), float64], Tensor[(8, 1, 1), float32], Tensor[(8, 1, 1), float32]) {
    %792 = cast(%var_7219, dtype="float64") /* ty=Tensor[(8, 1, 1), float64] */;
    %793 = cast(%var_7219, dtype="float32") /* ty=Tensor[(8, 1, 1), float32] */;
    %794 = cast(%var_7219, dtype="float32") /* ty=Tensor[(8, 1, 1), float32] */;
    %795 = tan(%792) /* ty=Tensor[(8, 1, 1), float64] */;
    %796 = acos(%793) /* ty=Tensor[(8, 1, 1), float32] */;
    %797 = log10(%794) /* ty=Tensor[(8, 1, 1), float32] */;
    (%795, %796, %797)
  };
  %798(%var_7243) /* ty=(Tensor[(8, 1, 1), float64], Tensor[(8, 1, 1), float32], Tensor[(8, 1, 1), float32]) */
}

def @func_1715(%var_1714: Tensor[(14, 10, 14), float64]) -> (Tensor[(14, 10, 14), bool],) {
  %806 = fn (%var_1705: Tensor[(14, 10, 14), float64]) -> (Tensor[(14, 10, 14), bool],) {
    %799 = cast(%var_1705, dtype="float64") /* ty=Tensor[(14, 10, 14), float64] */;
    %800 = acos(%799) /* ty=Tensor[(14, 10, 14), float64] */;
    %801 = cast(%var_1705, dtype="bool") /* ty=Tensor[(14, 10, 14), bool] */;
    %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
    %803 = cast(%800, dtype="bool") /* ty=Tensor[(14, 10, 14), bool] */;
    %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %805 = not_equal(%803, %804) /* ty=Tensor[(14, 10, 14), bool] */;
    (%805,)
  };
  %806(%var_1714) /* ty=(Tensor[(14, 10, 14), bool],) */
}

def @func_6490(%var_6485: Tensor[(12), float32]) -> (Tensor[(9, 2, 10), float32], Tensor[(10, 3, 13), float64], Tensor[(15, 21), bool], Tensor[(12), float32], Tensor[(315), float32]) {
  %807 = cast(%var_6485, dtype="float32") /* ty=Tensor[(12), float32] */;
  %808 = cast(meta[relay.Constant][53] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %809 = reshape(%807, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %810 = reshape(%808, newshape=[15, 21]) /* ty=Tensor[(15, 21), float32] */;
  %811 = @func_2627(%809, %810) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(15, 13, 4), int32], int32, Tensor[(780), int32], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool], Tensor[(7, 3, 1), float64], Tensor[(616), float64], Tensor[(15, 21), bool]) */;
  %812 = @func_3790() /* ty=Tensor[(9, 2, 10), float32] */;
  %813 = @func_4354() /* ty=Tensor[(10, 3, 13), float64] */;
  %814 = %811.11;
  (%812, %813, %814, %var_6485, meta[relay.Constant][53] /* ty=Tensor[(315), float32] */)
}

def @func_251(%var_216: Tensor[(6, 2, 9), float64], %var_217: Tensor[(6, 2, 9), float64]) -> (Tensor[(6, 2, 9), bool], Tensor[(6, 2, 9), float64]) {
  %815 = cast(%var_217, dtype="bool") /* ty=Tensor[(6, 2, 9), bool] */;
  %816 = shape_of(%var_216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%var_216, dtype="bool") /* ty=Tensor[(6, 2, 9), bool] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %819 = cast(%var_217, dtype="float64") /* ty=Tensor[(6, 2, 9), float64] */;
  %820 = less(%817, %818) /* ty=Tensor[(6, 2, 9), bool] */;
  %821 = atanh(%819) /* ty=Tensor[(6, 2, 9), float64] */;
  (%820, %821)
}

def @func_3153(%var_3151: Tensor[(9, 2, 10), bool], %var_3152: Tensor[(13, 4), float32]) -> (Tensor[(9, 2, 10), uint8], Tensor[(616), float64], Tensor[(13, 4), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) {
  %842 = fn (%var_3131: Tensor[(9, 2, 10), bool], %var_3138: Tensor[(13, 4), float32]) -> (Tensor[(9, 2, 10), uint8], Tensor[(616), float64], Tensor[(13, 4), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) {
    %822 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %823 = %822.0;
    %824 = cast(%var_3131, dtype="uint8") /* ty=Tensor[(9, 2, 10), uint8] */;
    %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
    %826 = cast(%823, dtype="uint8") /* ty=Tensor[(9, 2, 10), uint8] */;
    %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %828 = cast(%var_3131, dtype="float32") /* ty=Tensor[(9, 2, 10), float32] */;
    %829 = cast(meta[relay.Constant][54] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %830 = cast(%var_3138, dtype="float32") /* ty=Tensor[(13, 4), float32] */;
    %831 = reshape(%829, newshape=[154, 4]) /* ty=Tensor[(154, 4), float64] */;
    %832 = reshape(%830, newshape=[52]) /* ty=Tensor[(52), float32] */;
    %833 = @func_2287(%831, %832) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) */;
    %834 = %833.0;
    %835 = cast(%834, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
    %836 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
    %837 = cast(%823, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
    %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %839 = left_shift(%826, %827) /* ty=Tensor[(9, 2, 10), uint8] */;
    %840 = exp(%828) /* ty=Tensor[(9, 2, 10), float32] */;
    %841 = not_equal(%837, %838) /* ty=Tensor[(9, 2, 10), bool] */;
    (%839, meta[relay.Constant][54] /* ty=Tensor[(616), float64] */, %var_3138, %840, %841)
  };
  %842(%var_3151, %var_3152) /* ty=(Tensor[(9, 2, 10), uint8], Tensor[(616), float64], Tensor[(13, 4), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */
}

def @func_7595(%var_7593: Tensor[(15, 2, 15), uint16], %var_7594: Tensor[(15, 2, 15), uint16]) -> Tensor[(15, 2, 15), bool] {
  %847 = fn (%var_7576: Tensor[(15, 2, 15), uint16], %var_7577: Tensor[(15, 2, 15), uint16]) -> Tensor[(15, 2, 15), bool] {
    %843 = cast(%var_7577, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
    %844 = shape_of(%var_7576, dtype="int32") /* ty=Tensor[(3), int32] */;
    %845 = cast(%var_7576, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%845, %846) /* ty=Tensor[(15, 2, 15), bool] */
  };
  %847(%var_7593, %var_7594) /* ty=Tensor[(15, 2, 15), bool] */
}

def @func_5369(%var_5354: Tensor[(616), float64]) -> (Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(616), float64], Tensor[(13, 4), float32]) {
  %848 = @func_2963() /* ty=(Tensor[(9, 2, 10), float32],) */;
  %849 = cast(%var_5354, dtype="float64") /* ty=Tensor[(616), float64] */;
  %850 = cast(meta[relay.Constant][55] /* ty=Tensor[(13, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 4), float32] */;
  %851 = reshape(%849, newshape=[154, 4]) /* ty=Tensor[(154, 4), float64] */;
  %852 = reshape(%850, newshape=[52]) /* ty=Tensor[(52), float32] */;
  %853 = @func_2287(%851, %852) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(8, 11, 7), float64], Tensor[(154, 4), float64], Tensor[(8, 11, 7), float64], Tensor[(60), float64], Tensor[(616), float64], Tensor[(52), float32]) */;
  %854 = %848.0;
  %855 = %853.1;
  (%854, %855, %var_5354, meta[relay.Constant][55] /* ty=Tensor[(13, 4), float32] */)
}

def @func_2809() -> Tensor[(9, 2, 10), bool] {
  %856 = fn () -> Tensor[(9, 2, 10), bool] {
    @func_2129() /* ty=Tensor[(9, 2, 10), bool] */
  };
  %856() /* ty=Tensor[(9, 2, 10), bool] */
}

def @func_5174(%var_5173: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), float64],) {
  %863 = fn (%var_5164: Tensor[(9, 2, 10), bool]) -> (Tensor[(9, 2, 10), float64],) {
    %857 = @func_2808() /* ty=Tensor[(9, 2, 10), bool] */;
    %858 = cast(%var_5164, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
    %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
    %860 = cast(%857, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
    %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %862 = add(%860, %861) /* ty=Tensor[(9, 2, 10), float64] */;
    (%862,)
  };
  %863(%var_5173) /* ty=(Tensor[(9, 2, 10), float64],) */
}

def @func_128(%var_126: Tensor[(8, 11, 7), float64]) -> (Tensor[(8, 11, 7), float64],) {
  @func_125(%var_126) /* ty=(Tensor[(8, 11, 7), float64],) */
}

def @func_4436(%var_4434: Tensor[(1, 616), float64]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), int32], Tensor[(528), float64], Tensor[(1, 616), float64]) {
  @func_4433(%var_4434) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), int32], Tensor[(528), float64], Tensor[(1, 616), float64]) */
}

def @func_7766() -> (Tensor[(9, 2, 10), bool], Tensor[(1, 52), float32]) {
  %867 = fn () -> (Tensor[(9, 2, 10), bool], Tensor[(1, 52), float32]) {
    %864 = @func_3387() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), float32], Tensor[(8, 11, 7), float64], Tensor[(7, 88), float64]) */;
    %865 = %864.0;
    %866 = @func_7728() /* ty=Tensor[(1, 52), float32] */;
    (%865, %866)
  };
  %867() /* ty=(Tensor[(9, 2, 10), bool], Tensor[(1, 52), float32]) */
}

def @func_5943() -> Tensor[(9, 2, 10), bool] {
  %868 = @func_2689() /* ty=(Tensor[(9, 2, 10), bool],) */;
  %868.0
}

def @func_2690() -> (Tensor[(9, 2, 10), bool],) {
  %871 = fn () -> (Tensor[(9, 2, 10), bool],) {
    %869 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %870 = %869.0;
    (%870,)
  };
  %871() /* ty=(Tensor[(9, 2, 10), bool],) */
}

def @func_7032(%var_7031: Tensor[(52), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(13, 4), float32], Tensor[(52), float32]) {
  %880 = fn (%var_6969: Tensor[(52), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(13, 4), float32], Tensor[(52), float32]) {
    %872 = @func_6090() /* ty=Tensor[(9, 2, 10), bool] */;
    %873 = cast(%872, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
    %874 = cast(%var_6969, dtype="float32") /* ty=Tensor[(52), float32] */;
    %875 = reshape(%873, newshape=[9, 2, 10]) /* ty=Tensor[(9, 2, 10), bool] */;
    %876 = reshape(%874, newshape=[13, 4]) /* ty=Tensor[(13, 4), float32] */;
    %877 = @func_3150(%875, %876) /* ty=(Tensor[(9, 2, 10), uint8], Tensor[(616), float64], Tensor[(13, 4), float32], Tensor[(9, 2, 10), float32], Tensor[(9, 2, 10), bool]) */;
    %878 = @func_4666() /* ty=Tensor[(9, 2, 10), bool] */;
    %879 = %877.2;
    (%872, %878, %879, %var_6969)
  };
  %880(%var_7031) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(13, 4), float32], Tensor[(52), float32]) */
}

def @func_3049(%var_3048: Tensor[(315), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(12), float32], Tensor[(315), float32], Tensor[(9, 2, 10), bool]) {
  %890 = fn (%var_3035: Tensor[(315), float32]) -> (Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(12), float32], Tensor[(315), float32], Tensor[(9, 2, 10), bool]) {
    %881 = @func_2388() /* ty=(Tensor[(9, 2, 10), bool],) */;
    %882 = cast(meta[relay.Constant][56] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
    %883 = cast(%var_3035, dtype="float32") /* ty=Tensor[(315), float32] */;
    %884 = reshape(%882, newshape=[12]) /* ty=Tensor[(12), float32] */;
    %885 = reshape(%883, newshape=[15, 21]) /* ty=Tensor[(15, 21), float32] */;
    %886 = @func_2627(%884, %885) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(15, 13, 4), int32], int32, Tensor[(780), int32], Tensor[(616), float64], Tensor[(12), float32], Tensor[(60), float64], Tensor[(616), float64], Tensor[(9, 2, 10), bool], Tensor[(7, 3, 1), float64], Tensor[(616), float64], Tensor[(15, 21), bool]) */;
    %887 = %881.0;
    %888 = %886.8;
    %889 = @func_2039() /* ty=Tensor[(9, 2, 10), bool] */;
    (%887, %888, meta[relay.Constant][56] /* ty=Tensor[(12), float32] */, %var_3035, %889)
  };
  %890(%var_3048) /* ty=(Tensor[(9, 2, 10), bool], Tensor[(9, 2, 10), bool], Tensor[(12), float32], Tensor[(315), float32], Tensor[(9, 2, 10), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen240/build/output.py:2249: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen240/build/output.py", line 2254, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(180) tvmgen_default_fused_cast_cast_reshape_minimum_kernel0(uint64_t* __restrict__ T_minimum, int64_t* __restrict__ placeholder, int64_t* __restrict__ placeholder1) {
  T_minimum[(((int)threadIdx.x))] = min(((uint64_t)placeholder[(((int)threadIdx.x))]), ((uint64_t)placeholder1[(((int)threadIdx.x))]));
}

extern "C" __global__ void __launch_bounds__(180) tvmgen_default_fused_reshape_bitwise_or_kernel0(int64_t* __restrict__ T_bitwise_or, int64_t* __restrict__ placeholder, int64_t* __restrict__ placeholder1) {
  T_bitwise_or[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] | placeholder1[(((int)threadIdx.x))]);
}

extern "C" __global__ void __launch_bounds__(180) tvmgen_default_fused_cast_cast_reshape_less_kernel0(signed char* __restrict__ T_less, int64_t* __restrict__ placeholder, int64_t* __restrict__ placeholder1) {
  T_less[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) < ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


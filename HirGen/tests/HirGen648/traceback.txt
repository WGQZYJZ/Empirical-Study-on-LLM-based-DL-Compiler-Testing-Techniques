==========mod==========
#[version = "0.0.5"]
def @func_8726(%var_8699: Tensor[(1188), float64], %var_8705: Tensor[(40), float32], %var_8707: Tensor[(168), int16]) -> (Tensor[(15, 1, 7), float32], Tensor[(1188), bool], Tensor[(1280), float32], Tensor[(1280), float32], Tensor[(40), float32], Tensor[(2, 1), int16], Tensor[(168), int16], Tensor[(286), float64], Tensor[(15, 1, 7), float32], Tensor[(11, 9, 12), float64]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(1188), uint32] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %1 = cos(%0) /* ty=Tensor[(1188), float64] */;
  %2 = cast(%var_8699, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(1), int32] */;
  %4 = cast(%1, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?), bool] */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(1280), float32] */, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %7 = cast(%var_8705, dtype="float32") /* ty=Tensor[(40), float32] */;
  %8 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 1), int16] */, dtype="int16") /* ty=Tensor[(2, 1), int16] */;
  %9 = cast(%var_8707, dtype="int16") /* ty=Tensor[(168), int16] */;
  %10 = cast(meta[relay.Constant][3] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %11 = reshape(%6, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %12 = reshape(%7, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %13 = reshape(%8, newshape=[2]) /* ty=Tensor[(2), int16] */;
  %14 = reshape(%9, newshape=[168]) /* ty=Tensor[(168), int16] */;
  %15 = reshape(%10, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %16 = @func_7210(%11, %12, %13, %14, %15) /* ty=(Tensor[(28, 48), int32], Tensor[(1188), uint32], Tensor[(1280), float32], Tensor[(176), int8], Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(15, ?, 7), uint16], Tensor[(15, 1, 7), float32], Tensor[(1680), float64], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(168), int16], Tensor[(286), float64]) */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %18 = reshape(%17, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), uint32] */;
  %19 = @func_1727(%18) /* ty=(Tensor[(11, 9, 12), bool],) */;
  %20 = %19.0;
  %21 = cast(%20, dtype="float64") /* ty=Tensor[(11, 9, 12), float64] */;
  %22 = @func_5724() /* ty=Tensor[(15, 1, 7), float32] */;
  %23 = equal(%4, %5) /* ty=Tensor[(1188), bool] */;
  %24 = %16.2;
  %25 = @func_7867() /* ty=Tensor[(15, 1, 7), float32] */;
  %26 = asinh(%21) /* ty=Tensor[(11, 9, 12), float64] */;
  (%22, %23, %24, meta[relay.Constant][1] /* ty=Tensor[(1280), float32] */, %var_8705, meta[relay.Constant][2] /* ty=Tensor[(2, 1), int16] */, %var_8707, meta[relay.Constant][3] /* ty=Tensor[(286), float64] */, %25, %26)
}

def @func_8377() -> (Tensor[(28, 48), float64],) {
  %27 = @func_7631() /* ty=Tensor[(28, 48), float32] */;
  %28 = cast(%27, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %29 = acos(%28) /* ty=Tensor[(28, 48), float32] */;
  %30 = cast(%29, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %31 = log2(%30) /* ty=Tensor[(28, 48), float64] */;
  (%31,)
}

def @func_10105(%var_10087: Tensor[(13, 4, 6), uint8]) -> Tensor[(13, 4, 6), uint8] {
  %32 = cast(%var_10087, dtype="uint8") /* ty=Tensor[(13, 4, 6), uint8] */;
  %33 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(13, 4, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 4, 6), uint8] */, dtype="uint8") /* ty=Tensor[(13, 4, 6), uint8] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%34, %35) /* ty=Tensor[(13, 4, 6), uint8] */
}

def @func_2306(%var_2281: Tensor[(2, 1, 1), int16], %var_2282: Tensor[(2, 6, 14), int16], %var_2298: Tensor[(13, 22), float64]) -> (Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) {
  %36 = cast(%var_2281, dtype="bool") /* ty=Tensor[(2, 1, 1), bool] */;
  %37 = cast(%var_2282, dtype="bool") /* ty=Tensor[(2, 6, 14), bool] */;
  %38 = not_equal(%36, %37) /* ty=Tensor[(2, 6, 14), bool] */;
  %39 = cast(%38, dtype="float32") /* ty=Tensor[(2, 6, 14), float32] */;
  %40 = cast(%var_2281, dtype="float32") /* ty=Tensor[(2, 1, 1), float32] */;
  %41 = cast(%var_2298, dtype="float64") /* ty=Tensor[(13, 22), float64] */;
  %42 = cast(%var_2298, dtype="float64") /* ty=Tensor[(13, 22), float64] */;
  %43 = cast(meta[relay.Constant][5] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %44 = reshape(%41, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float64] */;
  %45 = reshape(%42, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float64] */;
  %46 = reshape(%43, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %47 = @func_1190(%44, %45, %46) /* ty=(Tensor[(11, 2, 13), float64], Tensor[(8, 2, 5), float32], Tensor[(80), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32]) */;
  %48 = %47.0;
  %49 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 2, 13), float64] */, dtype="int64") /* ty=Tensor[(11, 2, 13), int64] */;
  %50 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%48, dtype="int64") /* ty=Tensor[(11, 2, 13), int64] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %53 = floor_mod(%39, %40) /* ty=Tensor[(2, 6, 14), float32] */;
  %54 = bitwise_or(%51, %52) /* ty=Tensor[(11, 2, 13), int64] */;
  (%53, %var_2298, meta[relay.Constant][5] /* ty=Tensor[(20, 4), float32] */, %54)
}

def @func_7210(%var_7122: Tensor[(1280), float32], %var_7129: Tensor[(40), float32], %var_7194: Tensor[(2), int16], %var_7195: Tensor[(168), int16], %var_7196: Tensor[(286), float64]) -> (Tensor[(28, 48), int32], Tensor[(1188), uint32], Tensor[(1280), float32], Tensor[(176), int8], Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(15, ?, 7), uint16], Tensor[(15, 1, 7), float32], Tensor[(1680), float64], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(168), int16], Tensor[(286), float64]) {
  %55 = cast(%var_7122, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %56 = cast(meta[relay.Constant][7] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %57 = reshape(%55, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %58 = reshape(%56, newshape=[4, 11, 4]) /* ty=Tensor[(4, 11, 4), int8] */;
  %59 = @func_6597(%57, %58) /* ty=(Tensor[(168), int16], Tensor[(1280), float32], Tensor[(1188), uint32], Tensor[(80), float32], Tensor[(4, 11, 4), bool]) */;
  %60 = cast(%var_7129, dtype="float32") /* ty=Tensor[(40), float32] */;
  %61 = reshape(%60, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float32] */;
  %62 = cast(meta[relay.Constant][8] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %63 = reshape(%62, newshape=[15, 16, 7]) /* ty=Tensor[(15, 16, 7), float32] */;
  %64 = @func_6293(%63) /* ty=(Tensor[(15, 16, 7), int8], Tensor[(15, ?, 7), uint16]) */;
  %65 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %66 = cast(meta[relay.Constant][8] /* ty=Tensor[(1680), float32] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %67 = cast(%var_7194, dtype="int16") /* ty=Tensor[(2), int16] */;
  %68 = cast(%var_7195, dtype="int16") /* ty=Tensor[(168), int16] */;
  %69 = cast(%var_7196, dtype="float64") /* ty=Tensor[(286), float64] */;
  %70 = reshape(%67, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
  %71 = reshape(%68, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
  %72 = reshape(%69, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
  %73 = @func_2306(%70, %71, %72) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
  %74 = @func_6545() /* ty=Tensor[(28, 48), int32] */;
  %75 = %59.2;
  %76 = @func_1406(%61) /* ty=Tensor[(10, 2, 2), float32] */;
  %77 = %64.1;
  %78 = %65.1;
  %79 = tan(%66) /* ty=Tensor[(1680), float64] */;
  %80 = %73.1;
  (%74, %75, %var_7122, meta[relay.Constant][7] /* ty=Tensor[(176), int8] */, %76, %var_7129, %77, %78, %79, %80, %var_7194, %var_7195, %var_7196)
}

def @func_7542() -> Tensor[(15, 1, 7), float32] {
  %81 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %81.1
}

def @func_1727(%var_1723: Tensor[(11, 9, 12), uint32]) -> (Tensor[(11, 9, 12), bool],) {
  %82 = cast(%var_1723, dtype="bool") /* ty=Tensor[(11, 9, 12), bool] */;
  %83 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(11, 9, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 9, 12), uint32] */, dtype="bool") /* ty=Tensor[(11, 9, 12), bool] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %86 = greater(%84, %85) /* ty=Tensor[(11, 9, 12), bool] */;
  (%86,)
}

def @func_5724() -> Tensor[(15, 1, 7), float32] {
  @func_5276() /* ty=Tensor[(15, 1, 7), float32] */
}

def @func_9292() -> (Tensor[(4, 11, 4), float64], Tensor[(28, 48), uint64], Tensor[(105), float32], Tensor[(28, 48), float32], Tensor[(80), float32], Tensor[(1280), float32]) {
  %87 = @func_8958() /* ty=(Tensor[(28, 48), float64], Tensor[(4, 11, 4), float64], Tensor[(80), float32], Tensor[(1470), float32]) */;
  %88 = @func_7360() /* ty=(Tensor[(4, 11, 4), float32], Tensor[(105), float32]) */;
  %89 = @func_8377() /* ty=(Tensor[(28, 48), float64],) */;
  %90 = %89.0;
  %91 = cast(%90, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %92 = sinh(%91) /* ty=Tensor[(28, 48), float64] */;
  %93 = cast(%92, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %94 = cast(meta[relay.Constant][10] /* ty=Tensor[(1280), float32] */, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %95 = %87.1;
  %96 = cast(%95, dtype="int8") /* ty=Tensor[(4, 11, 4), int8] */;
  %97 = reshape(%94, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %98 = reshape(%96, newshape=[4, 11, 4]) /* ty=Tensor[(4, 11, 4), int8] */;
  %99 = @func_6597(%97, %98) /* ty=(Tensor[(168), int16], Tensor[(1280), float32], Tensor[(1188), uint32], Tensor[(80), float32], Tensor[(4, 11, 4), bool]) */;
  %100 = @func_7102() /* ty=Tensor[(28, 48), uint64] */;
  %101 = %88.1;
  %102 = sin(%93) /* ty=Tensor[(28, 48), float32] */;
  %103 = %99.3;
  (%95, %100, %101, %102, %103, meta[relay.Constant][10] /* ty=Tensor[(1280), float32] */)
}

def @func_1406(%var_1386: Tensor[(10, 2, 2), float32]) -> Tensor[(10, 2, 2), float32] {
  %104 = cast(%var_1386, dtype="float32") /* ty=Tensor[(10, 2, 2), float32] */;
  cosh(%104) /* ty=Tensor[(10, 2, 2), float32] */
}

def @func_3159(%var_3152: Tensor[(80, 1), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 2, 5), float32], Tensor[(80, 1), float32]) {
  %105 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 8, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %106 = cast(%var_3152, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
  %107 = reshape(%106, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %108 = @func_12(%107) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %109 = acos(%105) /* ty=Tensor[(8, 8, 4), float64] */;
  %110 = %108.0;
  (%109, %110, %var_3152)
}

def @func_10814() -> (Tensor[(15, 1, 7), float32],) {
  %111 = @func_7542() /* ty=Tensor[(15, 1, 7), float32] */;
  (%111,)
}

def @func_5351(%var_5323: Tensor[(15, 15, 7), float32], %var_5336: Tensor[(15, 14, 7), float32]) -> (Tensor[(15, 15, 7), bool], Tensor[(15, 14, 7), bool], Tensor[(15, 1, 7), float32]) {
  %112 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  %113 = cast(%112, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %114 = cast(%var_5323, dtype="bool") /* ty=Tensor[(15, 15, 7), bool] */;
  %115 = cast(%112, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %116 = cast(%var_5336, dtype="bool") /* ty=Tensor[(15, 14, 7), bool] */;
  %117 = less(%113, %114) /* ty=Tensor[(15, 15, 7), bool] */;
  %118 = less(%115, %116) /* ty=Tensor[(15, 14, 7), bool] */;
  %119 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  (%117, %118, %119)
}

def @func_8407() -> Tensor[(4, 11, 4), int8] {
  %120 = @func_8086() /* ty=(Tensor[(4, 11, 4), int8],) */;
  %120.0
}

def @func_6170(%var_6165: Tensor[(168), int16]) -> (Tensor[(15, 1, 7), float32], Tensor[(84, 2), int16], Tensor[(168), int16], Tensor[(286), float64]) {
  %121 = cast(%var_6165, dtype="int16") /* ty=Tensor[(168), int16] */;
  %122 = cast(meta[relay.Constant][12] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %123 = @func_5724() /* ty=Tensor[(15, 1, 7), float32] */;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %125 = reshape(%121, newshape=[84, 2]) /* ty=Tensor[(84, 2), int16] */;
  %126 = reshape(%122, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %127 = reshape(%124, newshape=[7, 15]) /* ty=Tensor[(7, 15), float32] */;
  %128 = @func_5201(%125, %126, %127) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(84, 2), int16], Tensor[(15, 1, 7), float32], Tensor[(324), int64], Tensor[(7, 15), float32], Tensor[(286), float64]) */;
  %129 = %128.3;
  (%123, %129, %var_6165, meta[relay.Constant][12] /* ty=Tensor[(286), float64] */)
}

def @func_8521() -> (Tensor[(9, 12, 3), bool], Tensor[(28, 48), int32]) {
  %130 = @func_7938() /* ty=(Tensor[(105), float32], Tensor[(105), float32], Tensor[(9, 36), int64], Tensor[(9, 12, 3), bool], Tensor[(10, 5, 13), float32], Tensor[(65, 10), float32]) */;
  %131 = %130.3;
  %132 = @func_7608() /* ty=Tensor[(28, 48), int32] */;
  (%131, %132)
}

def @func_1349(%var_1304: Tensor[(14, 8, 12), int32]) -> (Tensor[(8, 2, 5), float32], Tensor[(20, 4), float32], Tensor[(14, 8, 12), bool], Tensor[(14, 8, 12), float64]) {
  %133 = cast(meta[relay.Constant][13] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %134 = reshape(%133, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %135 = @func_12(%134) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %136 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 8, 12), int32] */, dtype="int32") /* ty=Tensor[(14, 8, 12), int32] */;
  %137 = shape_of(%var_1304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%var_1304, dtype="int32") /* ty=Tensor[(14, 8, 12), int32] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %140 = left_shift(%138, %139) /* ty=Tensor[(14, 8, 12), int32] */;
  %141 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 8, 12), int32] */, dtype="bool") /* ty=Tensor[(14, 8, 12), bool] */;
  %142 = shape_of(%140, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%140, dtype="bool") /* ty=Tensor[(14, 8, 12), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %145 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 8, 12), int32] */, dtype="float64") /* ty=Tensor[(14, 8, 12), float64] */;
  %146 = %135.0;
  %147 = logical_or(%143, %144) /* ty=Tensor[(14, 8, 12), bool] */;
  %148 = exp(%145) /* ty=Tensor[(14, 8, 12), float64] */;
  (%146, meta[relay.Constant][13] /* ty=Tensor[(20, 4), float32] */, %147, %148)
}

def @func_6761(%var_6720: Tensor[(12), uint32], %var_6724: Tensor[(168), int16], %var_6735: Tensor[(15, 11, 7), bool]) -> (Tensor[(3, 4, 1), uint32], uint32, Tensor[(12), uint32], Tensor[(88, 2), float64], Tensor[(176), int8], Tensor[(168), int16], Tensor[(10, 5, 13), float32], Tensor[(15, 11, 7), bool], Tensor[(5, 130), float32]) {
  %149 = cast(meta[relay.Constant][16] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %150 = cast(%var_6720, dtype="uint32") /* ty=Tensor[(12), uint32] */;
  %151 = reshape(%149, newshape=[]) /* ty=uint32 */;
  %152 = reshape(%150, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), uint32] */;
  %153 = cast(meta[relay.Constant][17] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %154 = cast(%var_6724, dtype="int16") /* ty=Tensor[(168), int16] */;
  %155 = reshape(%153, newshape=[88, 2]) /* ty=Tensor[(88, 2), int8] */;
  %156 = reshape(%154, newshape=[1, 168]) /* ty=Tensor[(1, 168), int16] */;
  %157 = @func_6533(%155, %156) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), uint8], Tensor[(15, 1, 7), float32], Tensor[(88, 2), float64], Tensor[(84, 2), int16], Tensor[(1, 168), int16], Tensor[(26, 11), float64]) */;
  %158 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 130), float32] */, dtype="float32") /* ty=Tensor[(5, 130), float32] */;
  %159 = reshape(%158, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
  %160 = @func_2796(%159) /* ty=(Tensor[(10, 5, 13), float32],) */;
  %161 = @func_5641() /* ty=Tensor[(15, 11, 7), bool] */;
  %162 = cast(%var_6735, dtype="bool") /* ty=Tensor[(15, 11, 7), bool] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%161, dtype="bool") /* ty=Tensor[(15, 11, 7), bool] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %166 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 130), float32] */, dtype="float64") /* ty=Tensor[(5, 130), float64] */;
  %167 = sqrt(%166) /* ty=Tensor[(5, 130), float64] */;
  %168 = cast(%167, dtype="float32") /* ty=Tensor[(5, 130), float32] */;
  %169 = @func_2993(%151, %152) /* ty=Tensor[(3, 4, 1), uint32] */;
  %170 = %157.3;
  %171 = %160.0;
  %172 = not_equal(%164, %165) /* ty=Tensor[(15, 11, 7), bool] */;
  %173 = rsqrt(%168) /* ty=Tensor[(5, 130), float32] */;
  (%169, meta[relay.Constant][16] /* ty=uint32 */, %var_6720, %170, meta[relay.Constant][17] /* ty=Tensor[(176), int8] */, %var_6724, %171, %172, %173)
}

def @func_3320(%var_3279: Tensor[(16, 16, 5), float32], %var_3310: Tensor[(16, 16, 5), uint64]) -> (Tensor[(16, 16, 5), bool], Tensor[(16, 16, 5), float32]) {
  %174 = cast(%var_3279, dtype="float32") /* ty=Tensor[(16, 16, 5), float32] */;
  %175 = cosh(%174) /* ty=Tensor[(16, 16, 5), float32] */;
  %176 = cast(%175, dtype="uint64") /* ty=Tensor[(16, 16, 5), uint64] */;
  %177 = shape_of(%var_3279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%var_3279, dtype="uint64") /* ty=Tensor[(16, 16, 5), uint64] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %180 = bitwise_xor(%178, %179) /* ty=Tensor[(16, 16, 5), uint64] */;
  %181 = cast(%var_3310, dtype="bool") /* ty=Tensor[(16, 16, 5), bool] */;
  %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%180, dtype="bool") /* ty=Tensor[(16, 16, 5), bool] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %185 = cast(%175, dtype="float64") /* ty=Tensor[(16, 16, 5), float64] */;
  %186 = atan(%185) /* ty=Tensor[(16, 16, 5), float64] */;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(16, 16, 5), float32] */;
  %188 = equal(%183, %184) /* ty=Tensor[(16, 16, 5), bool] */;
  %189 = sigmoid(%187) /* ty=Tensor[(16, 16, 5), float32] */;
  (%188, %189)
}

def @func_6965(%var_6916: Tensor[(13, 13, 12), float64], %var_6922: Tensor[(14, 105), float32], %var_6956: Tensor[(286), float64]) -> (Tensor[(13, 13, 12), float64], Tensor[(15, 14, 7), bool], Tensor[(1575), float32], Tensor[(14, 105), float32], Tensor[(13, 13, 12), uint32], Tensor[(15, 1, 7), float32], Tensor[(13, 13, 12), bool], Tensor[(80), float32], Tensor[(286), float64], Tensor[(80), float32], Tensor[(13, 13, 12), float32]) {
  %190 = cast(%var_6916, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
  %191 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(13, 13, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %194 = cast(meta[relay.Constant][20] /* ty=Tensor[(1575), float32] */, dtype="float32") /* ty=Tensor[(1575), float32] */;
  %195 = cast(%var_6922, dtype="float32") /* ty=Tensor[(14, 105), float32] */;
  %196 = reshape(%194, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), float32] */;
  %197 = reshape(%195, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), float32] */;
  %198 = @func_5351(%196, %197) /* ty=(Tensor[(15, 15, 7), bool], Tensor[(15, 14, 7), bool], Tensor[(15, 1, 7), float32]) */;
  %199 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 13, 12), float64] */, dtype="uint32") /* ty=Tensor[(13, 13, 12), uint32] */;
  %200 = shape_of(%var_6916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%var_6916, dtype="uint32") /* ty=Tensor[(13, 13, 12), uint32] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %203 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 13, 12), float64] */, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
  %204 = shape_of(%var_6916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%var_6916, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %207 = cast(%var_6956, dtype="float64") /* ty=Tensor[(286), float64] */;
  %208 = cast(%var_6956, dtype="float64") /* ty=Tensor[(286), float64] */;
  %209 = cast(meta[relay.Constant][21] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %210 = reshape(%207, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float64] */;
  %211 = reshape(%208, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float64] */;
  %212 = reshape(%209, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %213 = @func_1190(%210, %211, %212) /* ty=(Tensor[(11, 2, 13), float64], Tensor[(8, 2, 5), float32], Tensor[(80), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32]) */;
  %214 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 13, 12), float64] */, dtype="float32") /* ty=Tensor[(13, 13, 12), float32] */;
  %215 = power(%192, %193) /* ty=Tensor[(13, 13, 12), float64] */;
  %216 = %198.1;
  %217 = bitwise_or(%201, %202) /* ty=Tensor[(13, 13, 12), uint32] */;
  %218 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  %219 = less_equal(%205, %206) /* ty=Tensor[(13, 13, 12), bool] */;
  %220 = %213.2;
  %221 = sigmoid(%214) /* ty=Tensor[(13, 13, 12), float32] */;
  (%215, %216, meta[relay.Constant][20] /* ty=Tensor[(1575), float32] */, %var_6922, %217, %218, %219, %220, %var_6956, meta[relay.Constant][21] /* ty=Tensor[(80), float32] */, %221)
}

def @func_2606(%var_2602: Tensor[(1344), int32]) -> (Tensor[(6, 15, 7), float32], Tensor[(20, 4), float32], Tensor[(1344), int32], Tensor[(6, 15, 7), float64]) {
  %222 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 1, 7), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 7), float32] */;
  %223 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 15, 7), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 7), float32] */;
  %224 = cast(%var_2602, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %225 = reshape(%224, newshape=[14, 8, 12]) /* ty=Tensor[(14, 8, 12), int32] */;
  %226 = @func_1349(%225) /* ty=(Tensor[(8, 2, 5), float32], Tensor[(20, 4), float32], Tensor[(14, 8, 12), bool], Tensor[(14, 8, 12), float64]) */;
  %227 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 15, 7), float32] */, dtype="float64") /* ty=Tensor[(6, 15, 7), float64] */;
  %228 = floor_mod(%222, %223) /* ty=Tensor[(6, 15, 7), float32] */;
  %229 = %226.1;
  %230 = erf(%227) /* ty=Tensor[(6, 15, 7), float64] */;
  (%228, %229, %var_2602, %230)
}

def @func_9701(%var_9679: Tensor[(6, 28), int16]) -> (Tensor[(28, 48), float32], Tensor[(168), int16], Tensor[(6, 28), int16], Tensor[(15, 1, 7), float32]) {
  %231 = cast(%var_9679, dtype="int16") /* ty=Tensor[(6, 28), int16] */;
  %232 = reshape(%231, newshape=[168]) /* ty=Tensor[(168), int16] */;
  %233 = @func_6170(%232) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(84, 2), int16], Tensor[(168), int16], Tensor[(286), float64]) */;
  %234 = @func_6787() /* ty=(Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), int32], Tensor[(176), int8]) */;
  %235 = @func_7631() /* ty=Tensor[(28, 48), float32] */;
  %236 = %233.2;
  %237 = %234.0;
  (%235, %236, %var_9679, %237)
}

def @func_7631() -> Tensor[(28, 48), float32] {
  %238 = @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */;
  %239 = %238.1;
  %240 = cast(%239, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  atan(%240) /* ty=Tensor[(28, 48), float32] */
}

def @func_9839() -> (Tensor[(28, 48), float32],) {
  %241 = @func_7631() /* ty=Tensor[(28, 48), float32] */;
  (%241,)
}

def @func_5400() -> Tensor[(4, 11, 4), int8] {
  %242 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %242.0
}

def @func_7608() -> Tensor[(28, 48), int32] {
  %243 = @func_5803() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(20, 4), float32], Tensor[(28, 48), int32]) */;
  %243.2
}

def @func_8086() -> (Tensor[(4, 11, 4), int8],) {
  %244 = @func_7874() /* ty=Tensor[(4, 11, 4), int8] */;
  (%244,)
}

def @func_3780(%var_3768: Tensor[(15, 1, 7), float32]) -> (Tensor[(15, 1, 7), float32],) {
  %245 = cast(%var_3768, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %246 = asinh(%245) /* ty=Tensor[(15, 1, 7), float32] */;
  (%246,)
}

def @func_8451() -> (Tensor[(4, 11, 4), int8], Tensor[(28, 48), float32]) {
  %247 = @func_8407() /* ty=Tensor[(4, 11, 4), int8] */;
  %248 = @func_7631() /* ty=Tensor[(28, 48), float32] */;
  (%247, %248)
}

def @func_7849() -> (Tensor[(105), float32],) {
  %249 = @func_5903() /* ty=(Tensor[(105), float32], Tensor[(15, 11, 7), bool]) */;
  %250 = %249.0;
  (%250,)
}

def @func_6674() -> (Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) {
  %251 = @func_6545() /* ty=Tensor[(28, 48), int32] */;
  %252 = cast(meta[relay.Constant][24] /* ty=Tensor[(28, 48), int32] */, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %253 = shape_of(%251, dtype="int32") /* ty=Tensor[(2), int32] */;
  %254 = cast(%251, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %256 = floor_divide(%254, %255) /* ty=Tensor[(28, 48), float32] */;
  %257 = cast(meta[relay.Constant][24] /* ty=Tensor[(28, 48), int32] */, dtype="uint64") /* ty=Tensor[(28, 48), uint64] */;
  %258 = shape_of(%256, dtype="int32") /* ty=Tensor[(2), int32] */;
  %259 = cast(%256, dtype="uint64") /* ty=Tensor[(28, 48), uint64] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %261 = cast(%251, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %262 = rsqrt(%261) /* ty=Tensor[(28, 48), float32] */;
  %263 = cast(meta[relay.Constant][24] /* ty=Tensor[(28, 48), int32] */, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %264 = shape_of(%256, dtype="int32") /* ty=Tensor[(2), int32] */;
  %265 = cast(%256, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %267 = logical_and(%265, %266) /* ty=Tensor[(28, 48), bool] */;
  %268 = cast(%267, dtype="int32") /* ty=Tensor[(28, 48), int32] */;
  %269 = shape_of(%262, dtype="int32") /* ty=Tensor[(2), int32] */;
  %270 = cast(%262, dtype="int32") /* ty=Tensor[(28, 48), int32] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %272 = bitwise_xor(%259, %260) /* ty=Tensor[(28, 48), uint64] */;
  %273 = minimum(%270, %271) /* ty=Tensor[(28, 48), int32] */;
  (%272, %273)
}

def @func_8249() -> (Tensor[(15, 1, 7), float32], Tensor[(105), float32], Tensor[(28, 48), int32]) {
  %274 = @func_6508() /* ty=(Tensor[(105), float32],) */;
  %275 = @func_7745() /* ty=(Tensor[(28, 48), int32],) */;
  %276 = @func_7542() /* ty=Tensor[(15, 1, 7), float32] */;
  %277 = %274.0;
  %278 = %275.0;
  (%276, %277, %278)
}

def @func_7771() -> (Tensor[(15, 1, 7), float32],) {
  %279 = @func_7542() /* ty=Tensor[(15, 1, 7), float32] */;
  (%279,)
}

def @func_10436() -> (Tensor[(4, 11, 4), int8], Tensor[(20, 4), uint16]) {
  %280 = @func_9458() /* ty=(Tensor[(28, 48), float64], Tensor[(20, 4), uint16], Tensor[(286, 1), float64]) */;
  %281 = @func_7874() /* ty=Tensor[(4, 11, 4), int8] */;
  %282 = %280.1;
  (%281, %282)
}

def @func_5991(%var_5988: Tensor[(80), float32]) -> (Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(8, 8, 4), float64], Tensor[(80), float32]) {
  %283 = @func_5903() /* ty=(Tensor[(105), float32], Tensor[(15, 11, 7), bool]) */;
  %284 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %285 = cast(%var_5988, dtype="float32") /* ty=Tensor[(80), float32] */;
  %286 = reshape(%285, newshape=[80, 1]) /* ty=Tensor[(80, 1), float32] */;
  %287 = @func_3159(%286) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 2, 5), float32], Tensor[(80, 1), float32]) */;
  %288 = %283.1;
  %289 = %284.2;
  %290 = %287.0;
  (%288, %289, %290, %var_5988)
}

def @func_6545() -> Tensor[(28, 48), int32] {
  %291 = @func_5803() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(20, 4), float32], Tensor[(28, 48), int32]) */;
  %291.2
}

def @func_7874() -> Tensor[(4, 11, 4), int8] {
  @func_5400() /* ty=Tensor[(4, 11, 4), int8] */
}

def @func_8338() -> Tensor[(28, 48), bool] {
  %292 = @func_7745() /* ty=(Tensor[(28, 48), int32],) */;
  %293 = %292.0;
  %294 = cast(%293, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %295 = asinh(%294) /* ty=Tensor[(28, 48), float64] */;
  %296 = cast(%293, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %297 = erf(%296) /* ty=Tensor[(28, 48), float32] */;
  %298 = cast(%297, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %299 = shape_of(%295, dtype="int32") /* ty=Tensor[(2), int32] */;
  %300 = cast(%295, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%300, %301) /* ty=Tensor[(28, 48), bool] */
}

def @func_9989() -> (Tensor[(28, 48), uint64],) {
  %302 = @func_7702() /* ty=Tensor[(28, 48), uint64] */;
  (%302,)
}

def @func_9406() -> (Tensor[(15, 1, 7), float32],) {
  %303 = @func_7867() /* ty=Tensor[(15, 1, 7), float32] */;
  (%303,)
}

def @func_10040() -> (Tensor[(176), int8], Tensor[(15, 1, 7), float32]) {
  %304 = @func_8627() /* ty=(Tensor[(176), int8],) */;
  %305 = %304.0;
  %306 = @func_5724() /* ty=Tensor[(15, 1, 7), float32] */;
  (%305, %306)
}

def @func_7702() -> Tensor[(28, 48), uint64] {
  @func_7102() /* ty=Tensor[(28, 48), uint64] */
}

def @func_10317() -> (Tensor[(4, 11, 4), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32], Tensor[(105), float32], Tensor[(28, 48), int32], Tensor[(28, 48), uint64]) {
  %307 = @func_7360() /* ty=(Tensor[(4, 11, 4), float32], Tensor[(105), float32]) */;
  %308 = cast(meta[relay.Constant][25] /* ty=Tensor[(1280), float32] */, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %309 = reshape(%308, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %310 = @func_5542(%309) /* ty=(Tensor[(105), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32]) */;
  %311 = @func_6508() /* ty=(Tensor[(105), float32],) */;
  %312 = @func_9989() /* ty=(Tensor[(28, 48), uint64],) */;
  %313 = %307.0;
  %314 = %310.1;
  %315 = %311.0;
  %316 = @func_9945() /* ty=Tensor[(28, 48), int32] */;
  %317 = %312.0;
  (%313, %314, meta[relay.Constant][25] /* ty=Tensor[(1280), float32] */, %315, %316, %317)
}

def @func_9458() -> (Tensor[(28, 48), float64], Tensor[(20, 4), uint16], Tensor[(286, 1), float64]) {
  %318 = @func_7745() /* ty=(Tensor[(28, 48), int32],) */;
  %319 = %318.0;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %321 = cosh(%320) /* ty=Tensor[(28, 48), float32] */;
  %322 = cast(%321, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %323 = cast(meta[relay.Constant][26] /* ty=Tensor[(286, 1), float64] */, dtype="float64") /* ty=Tensor[(286, 1), float64] */;
  %324 = reshape(%323, newshape=[26, 11]) /* ty=Tensor[(26, 11), float64] */;
  %325 = @func_5689(%324) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2), int16], Tensor[(168), int16], Tensor[(26, 11), float64], Tensor[(8, 8, 4), float64], Tensor[(4, 11, 4), int32], Tensor[(20, 4), uint16]) */;
  %326 = cos(%322) /* ty=Tensor[(28, 48), float64] */;
  %327 = %325.6;
  (%326, %327, meta[relay.Constant][26] /* ty=Tensor[(286, 1), float64] */)
}

def @func_10690(%var_10674: Tensor[(28, 48), uint64]) -> Tensor[(28, 48), bool] {
  %328 = @func_7702() /* ty=Tensor[(28, 48), uint64] */;
  %329 = cast(%var_10674, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(2), int32] */;
  %331 = cast(%328, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  logical_or(%331, %332) /* ty=Tensor[(28, 48), bool] */
}

def @main(%var_11088: Tensor[(15, 5, 5), float32], %var_11089: Tensor[(15, 5, 5), float32]) -> Tensor[(15, 5, 5), float32] {
  %333 = cast(%var_11089, dtype="float32") /* ty=Tensor[(15, 5, 5), float32] */;
  %334 = shape_of(%var_11088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(%var_11088, dtype="float32") /* ty=Tensor[(15, 5, 5), float32] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%335, %336) /* ty=Tensor[(15, 5, 5), float32] */
}

def @func_6461(%var_6361: Tensor[(1280), float32], %var_6366: Tensor[(1188), uint32], %var_6405: Tensor[(1188), uint32], %var_6431: Tensor[(1188), uint32], %var_6439: Tensor[(20, 4), float32]) -> (Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(1280), uint8], Tensor[(11, 9, 12), bool], Tensor[(168), int16], Tensor[(15, 1, 7), float32], Tensor[(15, 1, 7), float32], Tensor[(1188), float32], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(286), uint64], Tensor[(1188), bool], Tensor[(20, 4), float64]) {
  %337 = cast(meta[relay.Constant][27] /* ty=Tensor[(1280), float32] */, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %338 = reshape(%337, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %339 = @func_5542(%338) /* ty=(Tensor[(105), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32]) */;
  %340 = cast(%var_6361, dtype="uint8") /* ty=Tensor[(1280), uint8] */;
  %341 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(1280), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %342 = cast(meta[relay.Constant][27] /* ty=Tensor[(1280), float32] */, dtype="uint8") /* ty=Tensor[(1280), uint8] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %344 = cast(%var_6366, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %345 = reshape(%344, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), uint32] */;
  %346 = @func_1727(%345) /* ty=(Tensor[(11, 9, 12), bool],) */;
  %347 = cast(meta[relay.Constant][28] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %348 = reshape(%347, newshape=[26, 11]) /* ty=Tensor[(26, 11), float64] */;
  %349 = @func_5689(%348) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2), int16], Tensor[(168), int16], Tensor[(26, 11), float64], Tensor[(8, 8, 4), float64], Tensor[(4, 11, 4), int32], Tensor[(20, 4), uint16]) */;
  %350 = cast(%var_6405, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %351 = shape_of(%var_6366, dtype="int32") /* ty=Tensor[(1), int32] */;
  %352 = cast(%var_6366, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?), float32] */;
  %354 = cast(meta[relay.Constant][29] /* ty=Tensor[(2), int16] */, dtype="int16") /* ty=Tensor[(2), int16] */;
  %355 = %349.2;
  %356 = cast(%355, dtype="int16") /* ty=Tensor[(168), int16] */;
  %357 = cast(meta[relay.Constant][28] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %358 = reshape(%354, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
  %359 = reshape(%356, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
  %360 = reshape(%357, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
  %361 = @func_2306(%358, %359, %360) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
  %362 = cast(meta[relay.Constant][30] /* ty=Tensor[(286), float64] */, dtype="uint64") /* ty=Tensor[(286), uint64] */;
  %363 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(286), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %364 = cast(meta[relay.Constant][28] /* ty=Tensor[(286), float64] */, dtype="uint64") /* ty=Tensor[(286), uint64] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %366 = cast(%var_6431, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %367 = shape_of(%var_6405, dtype="int32") /* ty=Tensor[(1), int32] */;
  %368 = cast(%var_6405, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?), bool] */;
  %370 = cast(meta[relay.Constant][29] /* ty=Tensor[(2), int16] */, dtype="int16") /* ty=Tensor[(2), int16] */;
  %371 = cast(%355, dtype="int16") /* ty=Tensor[(168), int16] */;
  %372 = cast(meta[relay.Constant][30] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %373 = reshape(%370, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
  %374 = reshape(%371, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
  %375 = reshape(%372, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
  %376 = @func_2306(%373, %374, %375) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
  %377 = %376.2;
  %378 = cast(%var_6439, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(2), int32] */;
  %380 = cast(%377, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %382 = @func_5641() /* ty=Tensor[(15, 11, 7), bool] */;
  %383 = %339.0;
  %384 = minimum(%342, %343) /* ty=Tensor[(1280), uint8] */;
  %385 = %346.0;
  %386 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  %387 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  %388 = power(%352, %353) /* ty=Tensor[(1188), float32] */;
  %389 = %361.1;
  %390 = bitwise_and(%364, %365) /* ty=Tensor[(286), uint64] */;
  %391 = logical_and(%368, %369) /* ty=Tensor[(1188), bool] */;
  %392 = floor_divide(%380, %381) /* ty=Tensor[(20, 4), float64] */;
  (%382, %383, %384, %385, %355, %386, %387, %388, %389, meta[relay.Constant][29] /* ty=Tensor[(2), int16] */, %390, %391, %392)
}

def @func_3757(%var_3743: Tensor[(2, 5, 6), float64]) -> (Tensor[(2, 5, 6), float64],) {
  %393 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 5, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 5, 6), float64] */;
  %394 = shape_of(%var_3743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%var_3743, dtype="float64") /* ty=Tensor[(2, 5, 6), float64] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %397 = floor_mod(%395, %396) /* ty=Tensor[(2, 5, 6), float64] */;
  (%397,)
}

def @func_10622() -> (Tensor[(6, 15, 7), float32],) {
  %398 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 15, 7), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 7), float32] */;
  %399 = log10(%398) /* ty=Tensor[(6, 15, 7), float32] */;
  (%399,)
}

def @func_10340() -> (Tensor[(28, 48), int32],) {
  %400 = @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */;
  %401 = %400.1;
  (%401,)
}

def @func_9905(%var_9877: Tensor[(13, 2, 8), float64], %var_9897: Tensor[(1, 286), float64]) -> (Tensor[(13, 2, 8), float64], Tensor[(20, 4), uint16], Tensor[(1, 286), float64]) {
  %402 = cast(%var_9877, dtype="float64") /* ty=Tensor[(13, 2, 8), float64] */;
  %403 = cast(%var_9897, dtype="float64") /* ty=Tensor[(1, 286), float64] */;
  %404 = reshape(%403, newshape=[26, 11]) /* ty=Tensor[(26, 11), float64] */;
  %405 = @func_5689(%404) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2), int16], Tensor[(168), int16], Tensor[(26, 11), float64], Tensor[(8, 8, 4), float64], Tensor[(4, 11, 4), int32], Tensor[(20, 4), uint16]) */;
  %406 = cosh(%402) /* ty=Tensor[(13, 2, 8), float64] */;
  %407 = %405.6;
  (%406, %407, %var_9897)
}

def @func_10405() -> (Tensor[(105), float32], Tensor[(105), float32]) {
  %408 = @func_7849() /* ty=(Tensor[(105), float32],) */;
  %409 = @func_6508() /* ty=(Tensor[(105), float32],) */;
  %410 = %408.0;
  %411 = %409.0;
  (%410, %411)
}

def @func_6597(%var_6582: Tensor[(1280), float32], %var_6591: Tensor[(4, 11, 4), int8]) -> (Tensor[(168), int16], Tensor[(1280), float32], Tensor[(1188), uint32], Tensor[(80), float32], Tensor[(4, 11, 4), bool]) {
  %412 = cast(%var_6582, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %413 = cast(meta[relay.Constant][33] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %414 = cast(meta[relay.Constant][33] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %415 = cast(meta[relay.Constant][33] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %416 = cast(meta[relay.Constant][34] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %417 = reshape(%412, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %418 = reshape(%413, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
  %419 = reshape(%414, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
  %420 = reshape(%415, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
  %421 = reshape(%416, newshape=[20, 4]) /* ty=Tensor[(20, 4), float32] */;
  %422 = @func_6461(%417, %418, %419, %420, %421) /* ty=(Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(1280), uint8], Tensor[(11, 9, 12), bool], Tensor[(168), int16], Tensor[(15, 1, 7), float32], Tensor[(15, 1, 7), float32], Tensor[(1188), float32], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(286), uint64], Tensor[(1188), bool], Tensor[(20, 4), float64]) */;
  %423 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %424 = cast(%var_6591, dtype="bool") /* ty=Tensor[(4, 11, 4), bool] */;
  %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%423, dtype="bool") /* ty=Tensor[(4, 11, 4), bool] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %428 = %422.4;
  %429 = logical_or(%426, %427) /* ty=Tensor[(4, 11, 4), bool] */;
  (%428, %var_6582, meta[relay.Constant][33] /* ty=Tensor[(1188), uint32] */, meta[relay.Constant][34] /* ty=Tensor[(80), float32] */, %429)
}

def @func_7745() -> (Tensor[(28, 48), int32],) {
  %430 = @func_7608() /* ty=Tensor[(28, 48), int32] */;
  (%430,)
}

def @func_8297(%var_8290: Tensor[(1, 12, 6), float32]) -> (Tensor[(1, 12, 6), float32],) {
  %431 = cast(%var_8290, dtype="float32") /* ty=Tensor[(1, 12, 6), float32] */;
  %432 = acosh(%431) /* ty=Tensor[(1, 12, 6), float32] */;
  (%432,)
}

def @func_9782(%var_9739: Tensor[(15, 9, 7), float32]) -> (Tensor[(4, 11, 4), int8], Tensor[(15, 9, 7), bool]) {
  %433 = @func_9126() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(28, 48), int32]) */;
  %434 = @func_5724() /* ty=Tensor[(15, 1, 7), float32] */;
  %435 = cast(%434, dtype="float64") /* ty=Tensor[(15, 1, 7), float64] */;
  %436 = cast(%var_9739, dtype="float64") /* ty=Tensor[(15, 9, 7), float64] */;
  %437 = power(%435, %436) /* ty=Tensor[(15, 9, 7), float64] */;
  %438 = cast(%437, dtype="bool") /* ty=Tensor[(15, 9, 7), bool] */;
  %439 = cast(%434, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %440 = %433.0;
  %441 = not_equal(%438, %439) /* ty=Tensor[(15, 9, 7), bool] */;
  (%440, %441)
}

def @func_6787() -> (Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), int32], Tensor[(176), int8]) {
  %442 = cast(meta[relay.Constant][35] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %443 = reshape(%442, newshape=[4, 11, 4]) /* ty=Tensor[(4, 11, 4), int8] */;
  %444 = @func_5139(%443) /* ty=(Tensor[(4, 11, 4), int32], Tensor[(4, 11, 4), float32]) */;
  %445 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  %446 = %444.0;
  (%445, %446, meta[relay.Constant][35] /* ty=Tensor[(176), int8] */)
}

def @func_9173() -> Tensor[(105), float32] {
  %447 = @func_6508() /* ty=(Tensor[(105), float32],) */;
  %447.0
}

def @func_7867() -> Tensor[(15, 1, 7), float32] {
  @func_7542() /* ty=Tensor[(15, 1, 7), float32] */
}

def @func_6533(%var_6520: Tensor[(88, 2), int8], %var_6527: Tensor[(1, 168), int16]) -> (Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), uint8], Tensor[(15, 1, 7), float32], Tensor[(88, 2), float64], Tensor[(84, 2), int16], Tensor[(1, 168), int16], Tensor[(26, 11), float64]) {
  %448 = cast(%var_6520, dtype="int8") /* ty=Tensor[(88, 2), int8] */;
  %449 = reshape(%448, newshape=[4, 11, 4]) /* ty=Tensor[(4, 11, 4), int8] */;
  %450 = @func_6068(%449) /* ty=(Tensor[(4, 11, 4), uint8],) */;
  %451 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %452 = cast(%var_6520, dtype="float64") /* ty=Tensor[(88, 2), float64] */;
  %453 = cast(%var_6527, dtype="int16") /* ty=Tensor[(1, 168), int16] */;
  %454 = cast(meta[relay.Constant][36] /* ty=Tensor[(26, 11), float64] */, dtype="float64") /* ty=Tensor[(26, 11), float64] */;
  %455 = @func_5724() /* ty=Tensor[(15, 1, 7), float32] */;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %457 = reshape(%453, newshape=[84, 2]) /* ty=Tensor[(84, 2), int16] */;
  %458 = reshape(%454, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %459 = reshape(%456, newshape=[7, 15]) /* ty=Tensor[(7, 15), float32] */;
  %460 = @func_5201(%457, %458, %459) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(84, 2), int16], Tensor[(15, 1, 7), float32], Tensor[(324), int64], Tensor[(7, 15), float32], Tensor[(286), float64]) */;
  %461 = %450.0;
  %462 = %451.1;
  %463 = cos(%452) /* ty=Tensor[(88, 2), float64] */;
  %464 = %460.3;
  (%455, %461, %462, %463, %464, %var_6527, meta[relay.Constant][36] /* ty=Tensor[(26, 11), float64] */)
}

def @func_9126() -> (Tensor[(4, 11, 4), int8], Tensor[(28, 48), int32]) {
  %465 = @func_7874() /* ty=Tensor[(4, 11, 4), int8] */;
  %466 = @func_6545() /* ty=Tensor[(28, 48), int32] */;
  (%465, %466)
}

def @func_10569(%var_10516: Tensor[(945), float32], %var_10530: Tensor[(1, 80), float32]) -> (Tensor[(176), int8], Tensor[(176), int8], Tensor[(176), int8], Tensor[(4, 11, 4), int8], Tensor[(8, 2, 5), float32], Tensor[(1, 80), float32], Tensor[(28, 48), int32], Tensor[(28, 48), bool], Tensor[(28, 48), float32], Tensor[(945), uint32]) {
  %467 = @func_6894() /* ty=(Tensor[(176), int8],) */;
  %468 = @func_8627() /* ty=(Tensor[(176), int8],) */;
  %469 = @func_6894() /* ty=(Tensor[(176), int8],) */;
  %470 = cast(%var_10516, dtype="float32") /* ty=Tensor[(945), float32] */;
  %471 = reshape(%470, newshape=[15, 9, 7]) /* ty=Tensor[(15, 9, 7), float32] */;
  %472 = @func_9782(%471) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 9, 7), bool]) */;
  %473 = cast(%var_10530, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %474 = reshape(%473, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %475 = @func_12(%474) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %476 = cast(%var_10530, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %477 = reshape(%476, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %478 = @func_7074(%477) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(80), float32], Tensor[(28, 48), bool]) */;
  %479 = @func_8451() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(28, 48), float32]) */;
  %480 = cast(%var_10516, dtype="float64") /* ty=Tensor[(945), float64] */;
  %481 = atan(%480) /* ty=Tensor[(945), float64] */;
  %482 = cast(%var_10516, dtype="uint32") /* ty=Tensor[(945), uint32] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(1), int32] */;
  %484 = cast(%481, dtype="uint32") /* ty=Tensor[(945), uint32] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %486 = %467.0;
  %487 = %468.0;
  %488 = %469.0;
  %489 = %472.0;
  %490 = %475.0;
  %491 = @func_7608() /* ty=Tensor[(28, 48), int32] */;
  %492 = %478.2;
  %493 = %479.1;
  %494 = bitwise_xor(%484, %485) /* ty=Tensor[(945), uint32] */;
  (%486, %487, %488, %489, %490, %var_10530, %491, %492, %493, %494)
}

def @func_5803() -> (Tensor[(4, 11, 4), int8], Tensor[(20, 4), float32], Tensor[(28, 48), int32]) {
  %495 = cast(meta[relay.Constant][37] /* ty=Tensor[(28, 48), int32] */, dtype="int32") /* ty=Tensor[(28, 48), int32] */;
  %496 = reshape(%495, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
  %497 = @func_2606(%496) /* ty=(Tensor[(6, 15, 7), float32], Tensor[(20, 4), float32], Tensor[(1344), int32], Tensor[(6, 15, 7), float64]) */;
  %498 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %499 = %497.1;
  (%498, %499, meta[relay.Constant][37] /* ty=Tensor[(28, 48), int32] */)
}

def @func_7938() -> (Tensor[(105), float32], Tensor[(105), float32], Tensor[(9, 36), int64], Tensor[(9, 12, 3), bool], Tensor[(10, 5, 13), float32], Tensor[(65, 10), float32]) {
  %500 = @func_7849() /* ty=(Tensor[(105), float32],) */;
  %501 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 36), int64] */, dtype="int64") /* ty=Tensor[(9, 36), int64] */;
  %502 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 36), int64] */, dtype="int64") /* ty=Tensor[(9, 36), int64] */;
  %503 = %500.0;
  %504 = cast(%503, dtype="float32") /* ty=Tensor[(105), float32] */;
  %505 = reshape(%501, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
  %506 = reshape(%502, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
  %507 = reshape(%504, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %508 = @func_4236(%505, %506, %507) /* ty=(Tensor[(9, 12, 3), bool], Tensor[(6, 15, 7), float64], Tensor[(1344), int32], Tensor[(10, 5, 13), float32], Tensor[(650), float32], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %509 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 36), int64] */, dtype="int64") /* ty=Tensor[(9, 36), int64] */;
  %510 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 36), int64] */, dtype="int64") /* ty=Tensor[(9, 36), int64] */;
  %511 = %508.6;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(105), float32] */;
  %513 = reshape(%509, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
  %514 = reshape(%510, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
  %515 = reshape(%512, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %516 = @func_4236(%513, %514, %515) /* ty=(Tensor[(9, 12, 3), bool], Tensor[(6, 15, 7), float64], Tensor[(1344), int32], Tensor[(10, 5, 13), float32], Tensor[(650), float32], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %517 = cast(meta[relay.Constant][39] /* ty=Tensor[(65, 10), float32] */, dtype="float32") /* ty=Tensor[(65, 10), float32] */;
  %518 = reshape(%517, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
  %519 = @func_2796(%518) /* ty=(Tensor[(10, 5, 13), float32],) */;
  %520 = %516.0;
  %521 = %519.0;
  (%503, %511, meta[relay.Constant][38] /* ty=Tensor[(9, 36), int64] */, %520, %521, meta[relay.Constant][39] /* ty=Tensor[(65, 10), float32] */)
}

def @func_5689(%var_5655: Tensor[(26, 11), float64]) -> (Tensor[(4, 11, 4), int8], Tensor[(2), int16], Tensor[(168), int16], Tensor[(26, 11), float64], Tensor[(8, 8, 4), float64], Tensor[(4, 11, 4), int32], Tensor[(20, 4), uint16]) {
  %522 = cast(meta[relay.Constant][40] /* ty=Tensor[(2), int16] */, dtype="int16") /* ty=Tensor[(2), int16] */;
  %523 = cast(meta[relay.Constant][41] /* ty=Tensor[(168), int16] */, dtype="int16") /* ty=Tensor[(168), int16] */;
  %524 = cast(%var_5655, dtype="float64") /* ty=Tensor[(26, 11), float64] */;
  %525 = reshape(%522, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
  %526 = reshape(%523, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
  %527 = reshape(%524, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
  %528 = @func_2306(%525, %526, %527) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
  %529 = %528.2;
  %530 = cast(%529, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %531 = reshape(%530, newshape=[80, 1]) /* ty=Tensor[(80, 1), float32] */;
  %532 = @func_3159(%531) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 2, 5), float32], Tensor[(80, 1), float32]) */;
  %533 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %534 = cast(%533, dtype="int8") /* ty=Tensor[(4, 11, 4), int8] */;
  %535 = reshape(%534, newshape=[4, 11, 4]) /* ty=Tensor[(4, 11, 4), int8] */;
  %536 = @func_5139(%535) /* ty=(Tensor[(4, 11, 4), int32], Tensor[(4, 11, 4), float32]) */;
  %537 = cast(meta[relay.Constant][42] /* ty=Tensor[(20, 4), float32] */, dtype="uint16") /* ty=Tensor[(20, 4), uint16] */;
  %538 = shape_of(%529, dtype="int32") /* ty=Tensor[(2), int32] */;
  %539 = cast(%529, dtype="uint16") /* ty=Tensor[(20, 4), uint16] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %541 = %532.0;
  %542 = %536.0;
  %543 = left_shift(%539, %540) /* ty=Tensor[(20, 4), uint16] */;
  (%533, meta[relay.Constant][40] /* ty=Tensor[(2), int16] */, meta[relay.Constant][41] /* ty=Tensor[(168), int16] */, %var_5655, %541, %542, %543)
}

def @func_2993(%var_2983: uint32, %var_2984: Tensor[(3, 4, 1), uint32]) -> Tensor[(3, 4, 1), uint32] {
  %544 = cast(%var_2983, dtype="uint32") /* ty=uint32 */;
  %545 = cast(%var_2984, dtype="uint32") /* ty=Tensor[(3, 4, 1), uint32] */;
  maximum(%544, %545) /* ty=Tensor[(3, 4, 1), uint32] */
}

def @func_7074(%var_7045: Tensor[(80), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(80), float32], Tensor[(28, 48), bool]) {
  %546 = cast(%var_7045, dtype="float32") /* ty=Tensor[(80), float32] */;
  %547 = reshape(%546, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %548 = @func_5991(%547) /* ty=(Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(8, 8, 4), float64], Tensor[(80), float32]) */;
  %549 = @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %552 = log(%551) /* ty=Tensor[(28, 48), float64] */;
  %553 = cast(%552, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %554 = shape_of(%550, dtype="int32") /* ty=Tensor[(2), int32] */;
  %555 = cast(%550, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %557 = equal(%555, %556) /* ty=Tensor[(28, 48), bool] */;
  %558 = cast(%550, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(2), int32] */;
  %560 = cast(%557, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %562 = %548.2;
  %563 = less(%560, %561) /* ty=Tensor[(28, 48), bool] */;
  (%562, %var_7045, %563)
}

def @func_7255() -> (Tensor[(28, 48), int32],) {
  %564 = @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */;
  %565 = %564.1;
  (%565,)
}

def @func_7484(%var_7475: Tensor[(4, 11, 4), int8]) -> Tensor[(4, 11, 4), bool] {
  %566 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %567 = cast(%var_7475, dtype="bool") /* ty=Tensor[(4, 11, 4), bool] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%566, dtype="bool") /* ty=Tensor[(4, 11, 4), bool] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%569, %570) /* ty=Tensor[(4, 11, 4), bool] */
}

def @func_4236(%var_4204: Tensor[(9, 12, 3), int64], %var_4205: Tensor[(9, 12, 3), int64], %var_4226: Tensor[(105), float32]) -> (Tensor[(9, 12, 3), bool], Tensor[(6, 15, 7), float64], Tensor[(1344), int32], Tensor[(10, 5, 13), float32], Tensor[(650), float32], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) {
  %571 = cast(%var_4205, dtype="bool") /* ty=Tensor[(9, 12, 3), bool] */;
  %572 = shape_of(%var_4204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%var_4204, dtype="bool") /* ty=Tensor[(9, 12, 3), bool] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %575 = cast(meta[relay.Constant][43] /* ty=Tensor[(1344), int32] */, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %576 = reshape(%575, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
  %577 = @func_2606(%576) /* ty=(Tensor[(6, 15, 7), float32], Tensor[(20, 4), float32], Tensor[(1344), int32], Tensor[(6, 15, 7), float64]) */;
  %578 = cast(meta[relay.Constant][44] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %579 = reshape(%578, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
  %580 = @func_2796(%579) /* ty=(Tensor[(10, 5, 13), float32],) */;
  %581 = cast(%var_4226, dtype="float32") /* ty=Tensor[(105), float32] */;
  %582 = reshape(%581, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float32] */;
  %583 = @func_3780(%582) /* ty=(Tensor[(15, 1, 7), float32],) */;
  %584 = equal(%573, %574) /* ty=Tensor[(9, 12, 3), bool] */;
  %585 = %577.3;
  %586 = %580.0;
  %587 = %583.0;
  (%584, %585, meta[relay.Constant][43] /* ty=Tensor[(1344), int32] */, %586, meta[relay.Constant][44] /* ty=Tensor[(650), float32] */, %587, %var_4226)
}

def @func_7443(%var_7406: Tensor[(1680), float32]) -> (Tensor[(1680), float32], Tensor[(15, ?, 7), float32], Tensor[(15, 11, 7), bool]) {
  %588 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %589 = %588.1;
  %590 = cast(%var_7406, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %591 = reshape(%590, newshape=[15, 16, 7]) /* ty=Tensor[(15, 16, 7), float32] */;
  %592 = @func_6293(%591) /* ty=(Tensor[(15, 16, 7), int8], Tensor[(15, ?, 7), uint16]) */;
  %593 = %592.1;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(15, ?, 7), float32] */;
  %595 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%589, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %598 = floor_divide(%596, %597) /* ty=Tensor[(15, ?, 7), float32] */;
  %599 = @func_5641() /* ty=Tensor[(15, 11, 7), bool] */;
  (%var_7406, %598, %599)
}

def @func_9623(%var_9575: Tensor[(2028), float64], %var_9576: Tensor[(98, 15), float32], %var_9577: Tensor[(286), float64]) -> (Tensor[(28, 48), int32], Tensor[(286), float64], Tensor[(2028), float64], Tensor[(286), float64], Tensor[(98, 15), float64]) {
  %600 = @func_7255() /* ty=(Tensor[(28, 48), int32],) */;
  %601 = cast(%var_9575, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %602 = cast(%var_9576, dtype="float32") /* ty=Tensor[(98, 15), float32] */;
  %603 = cast(%var_9577, dtype="float64") /* ty=Tensor[(286), float64] */;
  %604 = reshape(%601, newshape=[13, 13, 12]) /* ty=Tensor[(13, 13, 12), float64] */;
  %605 = reshape(%602, newshape=[14, 105]) /* ty=Tensor[(14, 105), float32] */;
  %606 = reshape(%603, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %607 = @func_6965(%604, %605, %606) /* ty=(Tensor[(13, 13, 12), float64], Tensor[(15, 14, 7), bool], Tensor[(1575), float32], Tensor[(14, 105), float32], Tensor[(13, 13, 12), uint32], Tensor[(15, 1, 7), float32], Tensor[(13, 13, 12), bool], Tensor[(80), float32], Tensor[(286), float64], Tensor[(80), float32], Tensor[(13, 13, 12), float32]) */;
  %608 = cast(meta[relay.Constant][45] /* ty=Tensor[(98, 15), float32] */, dtype="float64") /* ty=Tensor[(98, 15), float64] */;
  %609 = shape_of(%var_9576, dtype="int32") /* ty=Tensor[(2), int32] */;
  %610 = cast(%var_9576, dtype="float64") /* ty=Tensor[(98, 15), float64] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %612 = %600.0;
  %613 = %607.8;
  %614 = floor_divide(%610, %611) /* ty=Tensor[(98, 15), float64] */;
  (%612, %613, %var_9575, %var_9577, %614)
}

def @func_8577(%var_8533: Tensor[(15, 10, 7), float32]) -> (Tensor[(15, 10, 7), bool], Tensor[(11, 9, 12), bool], Tensor[(1188), uint32], Tensor[(8, 2, 5), float32], Tensor[(80), float32]) {
  %615 = @func_7771() /* ty=(Tensor[(15, 1, 7), float32],) */;
  %616 = %615.0;
  %617 = cast(%616, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %618 = cast(%var_8533, dtype="bool") /* ty=Tensor[(15, 10, 7), bool] */;
  %619 = cast(meta[relay.Constant][46] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %620 = reshape(%619, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), uint32] */;
  %621 = @func_1727(%620) /* ty=(Tensor[(11, 9, 12), bool],) */;
  %622 = cast(meta[relay.Constant][47] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %623 = reshape(%622, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %624 = @func_12(%623) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %625 = less_equal(%617, %618) /* ty=Tensor[(15, 10, 7), bool] */;
  %626 = %621.0;
  %627 = %624.0;
  (%625, %626, meta[relay.Constant][46] /* ty=Tensor[(1188), uint32] */, %627, meta[relay.Constant][47] /* ty=Tensor[(80), float32] */)
}

def @func_6068(%var_6054: Tensor[(4, 11, 4), int8]) -> (Tensor[(4, 11, 4), uint8],) {
  %628 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %629 = cast(%var_6054, dtype="uint8") /* ty=Tensor[(4, 11, 4), uint8] */;
  %630 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(%628, dtype="uint8") /* ty=Tensor[(4, 11, 4), uint8] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %633 = maximum(%631, %632) /* ty=Tensor[(4, 11, 4), uint8] */;
  (%633,)
}

def @func_9382(%var_9325: Tensor[(2), int16], %var_9326: Tensor[(168), int16], %var_9360: Tensor[(105, 15), float32]) -> (Tensor[(28, 48), uint64], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(168), int16], Tensor[(286), float64], Tensor[(20, 4), float64], Tensor[(15, 15, 7), bool], Tensor[(105, 15), float32], Tensor[(1470), float32]) {
  %634 = cast(%var_9325, dtype="int16") /* ty=Tensor[(2), int16] */;
  %635 = cast(%var_9326, dtype="int16") /* ty=Tensor[(168), int16] */;
  %636 = cast(meta[relay.Constant][48] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %637 = reshape(%634, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
  %638 = reshape(%635, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
  %639 = reshape(%636, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
  %640 = @func_2306(%637, %638, %639) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
  %641 = @func_7102() /* ty=Tensor[(28, 48), uint64] */;
  %642 = cast(%641, dtype="int32") /* ty=Tensor[(28, 48), int32] */;
  %643 = reshape(%642, newshape=[14, 8, 12]) /* ty=Tensor[(14, 8, 12), int32] */;
  %644 = @func_1349(%643) /* ty=(Tensor[(8, 2, 5), float32], Tensor[(20, 4), float32], Tensor[(14, 8, 12), bool], Tensor[(14, 8, 12), float64]) */;
  %645 = %644.1;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %647 = cast(%var_9360, dtype="float32") /* ty=Tensor[(105, 15), float32] */;
  %648 = cast(meta[relay.Constant][49] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %649 = reshape(%647, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), float32] */;
  %650 = reshape(%648, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), float32] */;
  %651 = @func_5351(%649, %650) /* ty=(Tensor[(15, 15, 7), bool], Tensor[(15, 14, 7), bool], Tensor[(15, 1, 7), float32]) */;
  %652 = %640.0;
  %653 = cosh(%646) /* ty=Tensor[(20, 4), float64] */;
  %654 = %651.0;
  (%641, %652, %var_9325, %var_9326, meta[relay.Constant][48] /* ty=Tensor[(286), float64] */, %653, %654, %var_9360, meta[relay.Constant][49] /* ty=Tensor[(1470), float32] */)
}

def @func_5903() -> (Tensor[(105), float32], Tensor[(15, 11, 7), bool]) {
  %655 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %656 = %655.2;
  %657 = @func_5641() /* ty=Tensor[(15, 11, 7), bool] */;
  (%656, %657)
}

def @func_7102() -> Tensor[(28, 48), uint64] {
  %658 = @func_6545() /* ty=Tensor[(28, 48), int32] */;
  %659 = cast(%658, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %660 = acosh(%659) /* ty=Tensor[(28, 48), float32] */;
  %661 = cast(%658, dtype="uint64") /* ty=Tensor[(28, 48), uint64] */;
  %662 = shape_of(%660, dtype="int32") /* ty=Tensor[(2), int32] */;
  %663 = cast(%660, dtype="uint64") /* ty=Tensor[(28, 48), uint64] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  maximum(%663, %664) /* ty=Tensor[(28, 48), uint64] */
}

def @func_5139(%var_5121: Tensor[(4, 11, 4), int8]) -> (Tensor[(4, 11, 4), int32], Tensor[(4, 11, 4), float32]) {
  %665 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %666 = %665.0;
  %667 = cast(%var_5121, dtype="int32") /* ty=Tensor[(4, 11, 4), int32] */;
  %668 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%666, dtype="int32") /* ty=Tensor[(4, 11, 4), int32] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %671 = cast(%666, dtype="float32") /* ty=Tensor[(4, 11, 4), float32] */;
  %672 = bitwise_and(%669, %670) /* ty=Tensor[(4, 11, 4), int32] */;
  %673 = cos(%671) /* ty=Tensor[(4, 11, 4), float32] */;
  (%672, %673)
}

def @func_2796(%var_2786: Tensor[(10, 5, 13), float32]) -> (Tensor[(10, 5, 13), float32],) {
  %674 = cast(%var_2786, dtype="float32") /* ty=Tensor[(10, 5, 13), float32] */;
  %675 = tan(%674) /* ty=Tensor[(10, 5, 13), float32] */;
  (%675,)
}

def @func_5062() -> (Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) {
  %676 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 11, 4), int8] */, dtype="int8") /* ty=Tensor[(4, 11, 4), int8] */;
  %677 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(4, 11, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(meta[relay.Constant][50] /* ty=Tensor[(4, 11, 4), int8] */, dtype="int8") /* ty=Tensor[(4, 11, 4), int8] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %680 = cast(meta[relay.Constant][52] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %681 = reshape(%680, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float32] */;
  %682 = @func_3780(%681) /* ty=(Tensor[(15, 1, 7), float32],) */;
  %683 = bitwise_or(%678, %679) /* ty=Tensor[(4, 11, 4), int8] */;
  %684 = %682.0;
  (%683, %684, meta[relay.Constant][52] /* ty=Tensor[(105), float32] */)
}

def @func_5542(%var_5523: Tensor[(1280), float32]) -> (Tensor[(105), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32]) {
  %685 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %686 = cast(%var_5523, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %687 = cast(%var_5523, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %688 = reshape(%686, newshape=[16, 16, 5]) /* ty=Tensor[(16, 16, 5), float32] */;
  %689 = reshape(%687, newshape=[16, 16, 5]) /* ty=Tensor[(16, 16, 5), uint64] */;
  %690 = @func_3320(%688, %689) /* ty=(Tensor[(16, 16, 5), bool], Tensor[(16, 16, 5), float32]) */;
  %691 = %685.2;
  %692 = %690.0;
  (%691, %692, %var_5523)
}

def @func_9542(%var_9517: Tensor[(28, 48), uint64]) -> Tensor[(28, 48), uint16] {
  %693 = @func_9292() /* ty=(Tensor[(4, 11, 4), float64], Tensor[(28, 48), uint64], Tensor[(105), float32], Tensor[(28, 48), float32], Tensor[(80), float32], Tensor[(1280), float32]) */;
  %694 = %693.1;
  %695 = cast(%var_9517, dtype="uint16") /* ty=Tensor[(28, 48), uint16] */;
  %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(2), int32] */;
  %697 = cast(%694, dtype="uint16") /* ty=Tensor[(28, 48), uint16] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  bitwise_or(%697, %698) /* ty=Tensor[(28, 48), uint16] */
}

def @func_6894() -> (Tensor[(176), int8],) {
  %699 = @func_6787() /* ty=(Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), int32], Tensor[(176), int8]) */;
  %700 = %699.2;
  (%700,)
}

def @func_8627() -> (Tensor[(176), int8],) {
  %701 = @func_6894() /* ty=(Tensor[(176), int8],) */;
  %702 = %701.0;
  (%702,)
}

def @func_11010(%var_11000: Tensor[(4, 11, 4), int8]) -> Tensor[(4, 11, 4), int32] {
  %703 = @func_8086() /* ty=(Tensor[(4, 11, 4), int8],) */;
  %704 = %703.0;
  %705 = cast(%var_11000, dtype="int32") /* ty=Tensor[(4, 11, 4), int32] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%704, dtype="int32") /* ty=Tensor[(4, 11, 4), int32] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%707, %708) /* ty=Tensor[(4, 11, 4), int32] */
}

def @func_7360() -> (Tensor[(4, 11, 4), float32], Tensor[(105), float32]) {
  %709 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %710 = cast(%709, dtype="float32") /* ty=Tensor[(4, 11, 4), float32] */;
  %711 = @func_6508() /* ty=(Tensor[(105), float32],) */;
  %712 = acos(%710) /* ty=Tensor[(4, 11, 4), float32] */;
  %713 = %711.0;
  (%712, %713)
}

def @func_6293(%var_6282: Tensor[(15, 16, 7), float32]) -> (Tensor[(15, 16, 7), int8], Tensor[(15, ?, 7), uint16]) {
  %714 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %715 = %714.1;
  %716 = cast(%715, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %717 = reshape(%716, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float32] */;
  %718 = @func_3780(%717) /* ty=(Tensor[(15, 1, 7), float32],) */;
  %719 = %718.0;
  %720 = cast(%719, dtype="int8") /* ty=Tensor[(15, 1, 7), int8] */;
  %721 = cast(%var_6282, dtype="int8") /* ty=Tensor[(15, 16, 7), int8] */;
  %722 = cast(%719, dtype="uint16") /* ty=Tensor[(15, 1, 7), uint16] */;
  %723 = shape_of(%715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%715, dtype="uint16") /* ty=Tensor[(15, 1, 7), uint16] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %726 = bitwise_or(%720, %721) /* ty=Tensor[(15, 16, 7), int8] */;
  %727 = right_shift(%724, %725) /* ty=Tensor[(15, ?, 7), uint16] */;
  (%726, %727)
}

def @func_9945() -> Tensor[(28, 48), int32] {
  %728 = @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */;
  %728.1
}

def @func_8958() -> (Tensor[(28, 48), float64], Tensor[(4, 11, 4), float64], Tensor[(80), float32], Tensor[(1470), float32]) {
  %729 = @func_7608() /* ty=Tensor[(28, 48), int32] */;
  %730 = cast(%729, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %731 = asin(%730) /* ty=Tensor[(28, 48), float64] */;
  %732 = cast(%729, dtype="int8") /* ty=Tensor[(28, 48), int8] */;
  %733 = shape_of(%731, dtype="int32") /* ty=Tensor[(2), int32] */;
  %734 = cast(%731, dtype="int8") /* ty=Tensor[(28, 48), int8] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %736 = right_shift(%734, %735) /* ty=Tensor[(28, 48), int8] */;
  %737 = cast(%736, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %738 = shape_of(%729, dtype="int32") /* ty=Tensor[(2), int32] */;
  %739 = cast(%729, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %741 = floor_mod(%739, %740) /* ty=Tensor[(28, 48), float64] */;
  %742 = cast(%741, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %743 = cast(meta[relay.Constant][53] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %744 = cast(meta[relay.Constant][54] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %745 = reshape(%742, newshape=[28, 48]) /* ty=Tensor[(28, 48), bool] */;
  %746 = reshape(%743, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %747 = reshape(%744, newshape=[1, 1470]) /* ty=Tensor[(1, 1470), float32] */;
  %748 = @func_8851(%745, %746, %747) /* ty=(Tensor[(176), int8], Tensor[(80), float32], Tensor[(80), float32], Tensor[(4, 11, 4), float64], Tensor[(28, 48), int8], Tensor[(286), float64], Tensor[(2028), float64], Tensor[(1, 1470), float32], Tensor[(286, 1), float64]) */;
  %749 = %748.3;
  (%741, %749, meta[relay.Constant][53] /* ty=Tensor[(80), float32] */, meta[relay.Constant][54] /* ty=Tensor[(1470), float32] */)
}

def @func_10922() -> (Tensor[(20, 4), uint16],) {
  %750 = @func_10436() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(20, 4), uint16]) */;
  %751 = %750.1;
  (%751,)
}

def @func_6508() -> (Tensor[(105), float32],) {
  %752 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %753 = %752.2;
  (%753,)
}

def @func_5201(%var_5181: Tensor[(84, 2), int16], %var_5182: Tensor[(286), float64], %var_5187: Tensor[(7, 15), float32]) -> (Tensor[(4, 11, 4), int8], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(84, 2), int16], Tensor[(15, 1, 7), float32], Tensor[(324), int64], Tensor[(7, 15), float32], Tensor[(286), float64]) {
  %754 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %755 = cast(meta[relay.Constant][55] /* ty=Tensor[(2), int16] */, dtype="int16") /* ty=Tensor[(2), int16] */;
  %756 = cast(%var_5181, dtype="int16") /* ty=Tensor[(84, 2), int16] */;
  %757 = cast(%var_5182, dtype="float64") /* ty=Tensor[(286), float64] */;
  %758 = reshape(%755, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
  %759 = reshape(%756, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
  %760 = reshape(%757, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
  %761 = @func_2306(%758, %759, %760) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
  %762 = cast(meta[relay.Constant][56] /* ty=Tensor[(324), int64] */, dtype="int64") /* ty=Tensor[(324), int64] */;
  %763 = cast(meta[relay.Constant][56] /* ty=Tensor[(324), int64] */, dtype="int64") /* ty=Tensor[(324), int64] */;
  %764 = cast(%var_5187, dtype="float32") /* ty=Tensor[(7, 15), float32] */;
  %765 = reshape(%762, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
  %766 = reshape(%763, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
  %767 = reshape(%764, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %768 = @func_4236(%765, %766, %767) /* ty=(Tensor[(9, 12, 3), bool], Tensor[(6, 15, 7), float64], Tensor[(1344), int32], Tensor[(10, 5, 13), float32], Tensor[(650), float32], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %769 = cast(%var_5182, dtype="float64") /* ty=Tensor[(286), float64] */;
  %770 = %754.0;
  %771 = %761.0;
  %772 = %768.5;
  %773 = log2(%769) /* ty=Tensor[(286), float64] */;
  (%770, %771, meta[relay.Constant][55] /* ty=Tensor[(2), int16] */, %var_5181, %772, meta[relay.Constant][56] /* ty=Tensor[(324), int64] */, %var_5187, %773)
}

def @func_5641() -> Tensor[(15, 11, 7), bool] {
  %774 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  %775 = cast(%774, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %776 = cast(meta[relay.Constant][57] /* ty=Tensor[(15, 11, 7), float32] */, dtype="bool") /* ty=Tensor[(15, 11, 7), bool] */;
  greater_equal(%775, %776) /* ty=Tensor[(15, 11, 7), bool] */
}

def @func_1802(%var_1793: Tensor[(2, 16, 1), float64], %var_1797: Tensor[(2, 16, 13), float64]) -> (Tensor[(2, 16, 1), float64], Tensor[(2, 16, 13), int16]) {
  %777 = cast(%var_1793, dtype="float64") /* ty=Tensor[(2, 16, 1), float64] */;
  %778 = cast(%var_1793, dtype="int16") /* ty=Tensor[(2, 16, 1), int16] */;
  %779 = cast(%var_1797, dtype="int16") /* ty=Tensor[(2, 16, 13), int16] */;
  %780 = log10(%777) /* ty=Tensor[(2, 16, 1), float64] */;
  %781 = maximum(%778, %779) /* ty=Tensor[(2, 16, 13), int16] */;
  (%780, %781)
}

def @func_8851(%var_8798: Tensor[(28, 48), bool], %var_8819: Tensor[(80), float32], %var_8848: Tensor[(1, 1470), float32]) -> (Tensor[(176), int8], Tensor[(80), float32], Tensor[(80), float32], Tensor[(4, 11, 4), float64], Tensor[(28, 48), int8], Tensor[(286), float64], Tensor[(2028), float64], Tensor[(1, 1470), float32], Tensor[(286, 1), float64]) {
  %782 = @func_6894() /* ty=(Tensor[(176), int8],) */;
  %783 = cast(%var_8819, dtype="float32") /* ty=Tensor[(80), float32] */;
  %784 = reshape(%783, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %785 = @func_5991(%784) /* ty=(Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(8, 8, 4), float64], Tensor[(80), float32]) */;
  %786 = @func_8407() /* ty=Tensor[(4, 11, 4), int8] */;
  %787 = cast(meta[relay.Constant][58] /* ty=Tensor[(4, 11, 4), int8] */, dtype="float64") /* ty=Tensor[(4, 11, 4), float64] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%786, dtype="float64") /* ty=Tensor[(4, 11, 4), float64] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %791 = @func_8338() /* ty=Tensor[(28, 48), bool] */;
  %792 = cast(%var_8798, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(2), int32] */;
  %794 = cast(%791, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %796 = mod(%794, %795) /* ty=Tensor[(28, 48), float64] */;
  %797 = cast(%791, dtype="int8") /* ty=Tensor[(28, 48), int8] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(2), int32] */;
  %799 = cast(%796, dtype="int8") /* ty=Tensor[(28, 48), int8] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %801 = cast(meta[relay.Constant][59] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %802 = cast(%var_8848, dtype="float32") /* ty=Tensor[(1, 1470), float32] */;
  %803 = cast(meta[relay.Constant][60] /* ty=Tensor[(286, 1), float64] */, dtype="float64") /* ty=Tensor[(286, 1), float64] */;
  %804 = reshape(%801, newshape=[13, 13, 12]) /* ty=Tensor[(13, 13, 12), float64] */;
  %805 = reshape(%802, newshape=[14, 105]) /* ty=Tensor[(14, 105), float32] */;
  %806 = reshape(%803, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %807 = @func_6965(%804, %805, %806) /* ty=(Tensor[(13, 13, 12), float64], Tensor[(15, 14, 7), bool], Tensor[(1575), float32], Tensor[(14, 105), float32], Tensor[(13, 13, 12), uint32], Tensor[(15, 1, 7), float32], Tensor[(13, 13, 12), bool], Tensor[(80), float32], Tensor[(286), float64], Tensor[(80), float32], Tensor[(13, 13, 12), float32]) */;
  %808 = %782.0;
  %809 = %785.3;
  %810 = floor_divide(%789, %790) /* ty=Tensor[(4, 11, 4), float64] */;
  %811 = left_shift(%799, %800) /* ty=Tensor[(28, 48), int8] */;
  %812 = %807.8;
  (%808, %809, %var_8819, %810, %811, %812, meta[relay.Constant][59] /* ty=Tensor[(2028), float64] */, %var_8848, meta[relay.Constant][60] /* ty=Tensor[(286, 1), float64] */)
}

def @func_10771(%var_10742: Tensor[(2028), float64], %var_10744: Tensor[(286), float64]) -> (Tensor[(105), float32], Tensor[(15, 1, 7), float32], Tensor[(2028), float64], Tensor[(1470), float32], Tensor[(286), float64], Tensor[(28, 48), int32]) {
  %813 = @func_6508() /* ty=(Tensor[(105), float32],) */;
  %814 = cast(%var_10742, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %815 = cast(meta[relay.Constant][61] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %816 = cast(%var_10744, dtype="float64") /* ty=Tensor[(286), float64] */;
  %817 = reshape(%814, newshape=[13, 13, 12]) /* ty=Tensor[(13, 13, 12), float64] */;
  %818 = reshape(%815, newshape=[14, 105]) /* ty=Tensor[(14, 105), float32] */;
  %819 = reshape(%816, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %820 = @func_6965(%817, %818, %819) /* ty=(Tensor[(13, 13, 12), float64], Tensor[(15, 14, 7), bool], Tensor[(1575), float32], Tensor[(14, 105), float32], Tensor[(13, 13, 12), uint32], Tensor[(15, 1, 7), float32], Tensor[(13, 13, 12), bool], Tensor[(80), float32], Tensor[(286), float64], Tensor[(80), float32], Tensor[(13, 13, 12), float32]) */;
  %821 = @func_10317() /* ty=(Tensor[(4, 11, 4), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32], Tensor[(105), float32], Tensor[(28, 48), int32], Tensor[(28, 48), uint64]) */;
  %822 = %813.0;
  %823 = %820.5;
  %824 = %821.4;
  (%822, %823, %var_10742, meta[relay.Constant][61] /* ty=Tensor[(1470), float32] */, %var_10744, %824)
}

def @func_10985(%var_10953: Tensor[(5, 14, 10), int32]) -> (Tensor[(5, 14, 10), int32],) {
  %825 = cast(%var_10953, dtype="int32") /* ty=Tensor[(5, 14, 10), int32] */;
  %826 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(5, 14, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(meta[relay.Constant][62] /* ty=Tensor[(5, 14, 10), int32] */, dtype="int32") /* ty=Tensor[(5, 14, 10), int32] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %829 = right_shift(%827, %828) /* ty=Tensor[(5, 14, 10), int32] */;
  (%829,)
}

def @func_10828() -> Tensor[(28, 48), int32] {
  @func_9945() /* ty=Tensor[(28, 48), int32] */
}

def @func_9500() -> (Tensor[(28, 48), int32],) {
  %830 = @func_8987() /* ty=(Tensor[(176), int8], Tensor[(28, 48), int32]) */;
  %831 = %830.1;
  (%831,)
}

def @func_5276() -> Tensor[(15, 1, 7), float32] {
  %832 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %832.1
}

def @func_6259(%var_6256: Tensor[(2, 12, 11), float32]) -> (Tensor[(2, 12, 11), float32],) {
  %833 = cast(%var_6256, dtype="float32") /* ty=Tensor[(2, 12, 11), float32] */;
  %834 = exp(%833) /* ty=Tensor[(2, 12, 11), float32] */;
  (%834,)
}

def @func_1190(%var_1145: Tensor[(11, 2, 13), float64], %var_1146: Tensor[(11, 2, 13), float64], %var_1154: Tensor[(80), float32]) -> (Tensor[(11, 2, 13), float64], Tensor[(8, 2, 5), float32], Tensor[(80), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32]) {
  %835 = cast(%var_1146, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
  %836 = shape_of(%var_1145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%var_1145, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %839 = cast(%var_1154, dtype="float32") /* ty=Tensor[(80), float32] */;
  %840 = reshape(%839, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %841 = @func_12(%840) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %842 = %841.0;
  %843 = cast(%842, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %844 = reshape(%843, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %845 = @func_12(%844) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %846 = %845.0;
  %847 = cast(%846, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %848 = reshape(%847, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %849 = @func_12(%848) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %850 = %849.0;
  %851 = cast(%850, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %852 = reshape(%851, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %853 = @func_12(%852) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %854 = floor_mod(%837, %838) /* ty=Tensor[(11, 2, 13), float64] */;
  %855 = %853.0;
  (%854, %842, %var_1154, %846, %850, %855)
}

def @func_11030() -> Tensor[(6, 15, 7), float32] {
  %856 = @func_10622() /* ty=(Tensor[(6, 15, 7), float32],) */;
  %856.0
}

def @func_8987() -> (Tensor[(176), int8], Tensor[(28, 48), int32]) {
  %857 = @func_8627() /* ty=(Tensor[(176), int8],) */;
  %858 = %857.0;
  %859 = @func_7608() /* ty=Tensor[(28, 48), int32] */;
  (%858, %859)
}

def @func_10860() -> Tensor[(6, 15, 7), float32] {
  %860 = @func_10622() /* ty=(Tensor[(6, 15, 7), float32],) */;
  %860.0
}

def @func_12(%var_0: Tensor[(8, 2, 5), float32]) -> (Tensor[(8, 2, 5), float32],) {
  %861 = cast(%var_0, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %862 = rsqrt(%861) /* ty=Tensor[(8, 2, 5), float32] */;
  (%862,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10107(%var_10106: Tensor[(13, 4, 6), uint8]) -> Tensor[(13, 4, 6), uint8] {
  %4 = fn (%var_10087: Tensor[(13, 4, 6), uint8]) -> Tensor[(13, 4, 6), uint8] {
    %0 = cast(%var_10087, dtype="uint8") /* ty=Tensor[(13, 4, 6), uint8] */;
    %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(13, 4, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 4, 6), uint8] */, dtype="uint8") /* ty=Tensor[(13, 4, 6), uint8] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_or(%2, %3) /* ty=Tensor[(13, 4, 6), uint8] */
  };
  %4(%var_10106) /* ty=Tensor[(13, 4, 6), uint8] */
}

def @func_8731(%var_8728: Tensor[(1188), float64], %var_8729: Tensor[(40), float32], %var_8730: Tensor[(168), int16]) -> (Tensor[(15, 1, 7), float32], Tensor[(1188), bool], Tensor[(1280), float32], Tensor[(1280), float32], Tensor[(40), float32], Tensor[(2, 1), int16], Tensor[(168), int16], Tensor[(286), float64], Tensor[(15, 1, 7), float32], Tensor[(11, 9, 12), float64]) {
  @func_8726(%var_8728, %var_8729, %var_8730) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(1188), bool], Tensor[(1280), float32], Tensor[(1280), float32], Tensor[(40), float32], Tensor[(2, 1), int16], Tensor[(168), int16], Tensor[(286), float64], Tensor[(15, 1, 7), float32], Tensor[(11, 9, 12), float64]) */
}

def @func_5904() -> (Tensor[(105), float32], Tensor[(15, 11, 7), bool]) {
  %8 = fn () -> (Tensor[(105), float32], Tensor[(15, 11, 7), bool]) {
    %5 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
    %6 = %5.2;
    %7 = @func_5641() /* ty=Tensor[(15, 11, 7), bool] */;
    (%6, %7)
  };
  %8() /* ty=(Tensor[(105), float32], Tensor[(15, 11, 7), bool]) */
}

def @func_1190(%var_1145: Tensor[(11, 2, 13), float64], %var_1146: Tensor[(11, 2, 13), float64], %var_1154: Tensor[(80), float32]) -> (Tensor[(11, 2, 13), float64], Tensor[(8, 2, 5), float32], Tensor[(80), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32]) {
  %9 = cast(%var_1146, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
  %10 = shape_of(%var_1145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%var_1145, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %13 = cast(%var_1154, dtype="float32") /* ty=Tensor[(80), float32] */;
  %14 = reshape(%13, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %15 = @func_12(%14) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %16 = %15.0;
  %17 = cast(%16, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %18 = reshape(%17, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %19 = @func_12(%18) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %20 = %19.0;
  %21 = cast(%20, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %22 = reshape(%21, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %23 = @func_12(%22) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %26 = reshape(%25, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %27 = @func_12(%26) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %28 = floor_mod(%11, %12) /* ty=Tensor[(11, 2, 13), float64] */;
  %29 = %27.0;
  (%28, %16, %var_1154, %20, %24, %29)
}

def @func_7445(%var_7444: Tensor[(1680), float32]) -> (Tensor[(1680), float32], Tensor[(15, ?, 7), float32], Tensor[(15, 11, 7), bool]) {
  %42 = fn (%var_7406: Tensor[(1680), float32]) -> (Tensor[(1680), float32], Tensor[(15, ?, 7), float32], Tensor[(15, 11, 7), bool]) {
    %30 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
    %31 = %30.1;
    %32 = cast(%var_7406, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %33 = reshape(%32, newshape=[15, 16, 7]) /* ty=Tensor[(15, 16, 7), float32] */;
    %34 = @func_6293(%33) /* ty=(Tensor[(15, 16, 7), int8], Tensor[(15, ?, 7), uint16]) */;
    %35 = %34.1;
    %36 = cast(%35, dtype="float32") /* ty=Tensor[(15, ?, 7), float32] */;
    %37 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
    %38 = cast(%31, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
    %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %40 = floor_divide(%38, %39) /* ty=Tensor[(15, ?, 7), float32] */;
    %41 = @func_5641() /* ty=Tensor[(15, 11, 7), bool] */;
    (%var_7406, %40, %41)
  };
  %42(%var_7444) /* ty=(Tensor[(1680), float32], Tensor[(15, ?, 7), float32], Tensor[(15, 11, 7), bool]) */
}

def @func_8522() -> (Tensor[(9, 12, 3), bool], Tensor[(28, 48), int32]) {
  %46 = fn () -> (Tensor[(9, 12, 3), bool], Tensor[(28, 48), int32]) {
    %43 = @func_7938() /* ty=(Tensor[(105), float32], Tensor[(105), float32], Tensor[(9, 36), int64], Tensor[(9, 12, 3), bool], Tensor[(10, 5, 13), float32], Tensor[(65, 10), float32]) */;
    %44 = %43.3;
    %45 = @func_7608() /* ty=Tensor[(28, 48), int32] */;
    (%44, %45)
  };
  %46() /* ty=(Tensor[(9, 12, 3), bool], Tensor[(28, 48), int32]) */
}

def @func_3324(%var_3322: Tensor[(16, 16, 5), float32], %var_3323: Tensor[(16, 16, 5), uint64]) -> (Tensor[(16, 16, 5), bool], Tensor[(16, 16, 5), float32]) {
  @func_3320(%var_3322, %var_3323) /* ty=(Tensor[(16, 16, 5), bool], Tensor[(16, 16, 5), float32]) */
}

def @func_5141(%var_5140: Tensor[(4, 11, 4), int8]) -> (Tensor[(4, 11, 4), int32], Tensor[(4, 11, 4), float32]) {
  %56 = fn (%var_5121: Tensor[(4, 11, 4), int8]) -> (Tensor[(4, 11, 4), int32], Tensor[(4, 11, 4), float32]) {
    %47 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
    %48 = %47.0;
    %49 = cast(%var_5121, dtype="int32") /* ty=Tensor[(4, 11, 4), int32] */;
    %50 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
    %51 = cast(%48, dtype="int32") /* ty=Tensor[(4, 11, 4), int32] */;
    %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %53 = cast(%48, dtype="float32") /* ty=Tensor[(4, 11, 4), float32] */;
    %54 = bitwise_and(%51, %52) /* ty=Tensor[(4, 11, 4), int32] */;
    %55 = cos(%53) /* ty=Tensor[(4, 11, 4), float32] */;
    (%54, %55)
  };
  %56(%var_5140) /* ty=(Tensor[(4, 11, 4), int32], Tensor[(4, 11, 4), float32]) */
}

def @func_5641() -> Tensor[(15, 11, 7), bool] {
  %57 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  %58 = cast(%57, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %59 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 11, 7), float32] */, dtype="bool") /* ty=Tensor[(15, 11, 7), bool] */;
  greater_equal(%58, %59) /* ty=Tensor[(15, 11, 7), bool] */
}

def @func_5691(%var_5690: Tensor[(26, 11), float64]) -> (Tensor[(4, 11, 4), int8], Tensor[(2), int16], Tensor[(168), int16], Tensor[(26, 11), float64], Tensor[(8, 8, 4), float64], Tensor[(4, 11, 4), int32], Tensor[(20, 4), uint16]) {
  %82 = fn (%var_5655: Tensor[(26, 11), float64]) -> (Tensor[(4, 11, 4), int8], Tensor[(2), int16], Tensor[(168), int16], Tensor[(26, 11), float64], Tensor[(8, 8, 4), float64], Tensor[(4, 11, 4), int32], Tensor[(20, 4), uint16]) {
    %60 = cast(meta[relay.Constant][2] /* ty=Tensor[(2), int16] */, dtype="int16") /* ty=Tensor[(2), int16] */;
    %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(168), int16] */, dtype="int16") /* ty=Tensor[(168), int16] */;
    %62 = cast(%var_5655, dtype="float64") /* ty=Tensor[(26, 11), float64] */;
    %63 = reshape(%60, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
    %64 = reshape(%61, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
    %65 = reshape(%62, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
    %66 = @func_2306(%63, %64, %65) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
    %67 = %66.2;
    %68 = cast(%67, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
    %69 = reshape(%68, newshape=[80, 1]) /* ty=Tensor[(80, 1), float32] */;
    %70 = @func_3159(%69) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 2, 5), float32], Tensor[(80, 1), float32]) */;
    %71 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
    %72 = cast(%71, dtype="int8") /* ty=Tensor[(4, 11, 4), int8] */;
    %73 = reshape(%72, newshape=[4, 11, 4]) /* ty=Tensor[(4, 11, 4), int8] */;
    %74 = @func_5139(%73) /* ty=(Tensor[(4, 11, 4), int32], Tensor[(4, 11, 4), float32]) */;
    %75 = cast(meta[relay.Constant][4] /* ty=Tensor[(20, 4), float32] */, dtype="uint16") /* ty=Tensor[(20, 4), uint16] */;
    %76 = shape_of(%67, dtype="int32") /* ty=Tensor[(2), int32] */;
    %77 = cast(%67, dtype="uint16") /* ty=Tensor[(20, 4), uint16] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %79 = %70.0;
    %80 = %74.0;
    %81 = left_shift(%77, %78) /* ty=Tensor[(20, 4), uint16] */;
    (%71, meta[relay.Constant][2] /* ty=Tensor[(2), int16] */, meta[relay.Constant][3] /* ty=Tensor[(168), int16] */, %var_5655, %79, %80, %81)
  };
  %82(%var_5690) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2), int16], Tensor[(168), int16], Tensor[(26, 11), float64], Tensor[(8, 8, 4), float64], Tensor[(4, 11, 4), int32], Tensor[(20, 4), uint16]) */
}

def @func_7867() -> Tensor[(15, 1, 7), float32] {
  @func_7542() /* ty=Tensor[(15, 1, 7), float32] */
}

def @func_8408() -> Tensor[(4, 11, 4), int8] {
  %84 = fn () -> Tensor[(4, 11, 4), int8] {
    %83 = @func_8086() /* ty=(Tensor[(4, 11, 4), int8],) */;
    %83.0
  };
  %84() /* ty=Tensor[(4, 11, 4), int8] */
}

def @func_8960() -> (Tensor[(28, 48), float64], Tensor[(4, 11, 4), float64], Tensor[(80), float32], Tensor[(1470), float32]) {
  @func_8958() /* ty=(Tensor[(28, 48), float64], Tensor[(4, 11, 4), float64], Tensor[(80), float32], Tensor[(1470), float32]) */
}

def @func_7633() -> Tensor[(28, 48), float32] {
  @func_7631() /* ty=Tensor[(28, 48), float32] */
}

def @func_1352(%var_1350: Tensor[(14, 8, 12), int32]) -> (Tensor[(8, 2, 5), float32], Tensor[(20, 4), float32], Tensor[(14, 8, 12), bool], Tensor[(14, 8, 12), float64]) {
  @func_1349(%var_1350) /* ty=(Tensor[(8, 2, 5), float32], Tensor[(20, 4), float32], Tensor[(14, 8, 12), bool], Tensor[(14, 8, 12), float64]) */
}

def @func_7747() -> (Tensor[(28, 48), int32],) {
  @func_7745() /* ty=(Tensor[(28, 48), int32],) */
}

def @func_6761(%var_6720: Tensor[(12), uint32], %var_6724: Tensor[(168), int16], %var_6735: Tensor[(15, 11, 7), bool]) -> (Tensor[(3, 4, 1), uint32], uint32, Tensor[(12), uint32], Tensor[(88, 2), float64], Tensor[(176), int8], Tensor[(168), int16], Tensor[(10, 5, 13), float32], Tensor[(15, 11, 7), bool], Tensor[(5, 130), float32]) {
  %85 = cast(meta[relay.Constant][5] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %86 = cast(%var_6720, dtype="uint32") /* ty=Tensor[(12), uint32] */;
  %87 = reshape(%85, newshape=[]) /* ty=uint32 */;
  %88 = reshape(%86, newshape=[3, 4, 1]) /* ty=Tensor[(3, 4, 1), uint32] */;
  %89 = cast(meta[relay.Constant][6] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %90 = cast(%var_6724, dtype="int16") /* ty=Tensor[(168), int16] */;
  %91 = reshape(%89, newshape=[88, 2]) /* ty=Tensor[(88, 2), int8] */;
  %92 = reshape(%90, newshape=[1, 168]) /* ty=Tensor[(1, 168), int16] */;
  %93 = @func_6533(%91, %92) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), uint8], Tensor[(15, 1, 7), float32], Tensor[(88, 2), float64], Tensor[(84, 2), int16], Tensor[(1, 168), int16], Tensor[(26, 11), float64]) */;
  %94 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 130), float32] */, dtype="float32") /* ty=Tensor[(5, 130), float32] */;
  %95 = reshape(%94, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
  %96 = @func_2796(%95) /* ty=(Tensor[(10, 5, 13), float32],) */;
  %97 = @func_5641() /* ty=Tensor[(15, 11, 7), bool] */;
  %98 = cast(%var_6735, dtype="bool") /* ty=Tensor[(15, 11, 7), bool] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="bool") /* ty=Tensor[(15, 11, 7), bool] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %102 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 130), float32] */, dtype="float64") /* ty=Tensor[(5, 130), float64] */;
  %103 = sqrt(%102) /* ty=Tensor[(5, 130), float64] */;
  %104 = cast(%103, dtype="float32") /* ty=Tensor[(5, 130), float32] */;
  %105 = @func_2993(%87, %88) /* ty=Tensor[(3, 4, 1), uint32] */;
  %106 = %93.3;
  %107 = %96.0;
  %108 = not_equal(%100, %101) /* ty=Tensor[(15, 11, 7), bool] */;
  %109 = rsqrt(%104) /* ty=Tensor[(5, 130), float32] */;
  (%105, meta[relay.Constant][5] /* ty=uint32 */, %var_6720, %106, meta[relay.Constant][6] /* ty=Tensor[(176), int8] */, %var_6724, %107, %108, %109)
}

def @func_9386(%var_9383: Tensor[(2), int16], %var_9384: Tensor[(168), int16], %var_9385: Tensor[(105, 15), float32]) -> (Tensor[(28, 48), uint64], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(168), int16], Tensor[(286), float64], Tensor[(20, 4), float64], Tensor[(15, 15, 7), bool], Tensor[(105, 15), float32], Tensor[(1470), float32]) {
  %131 = fn (%var_9325: Tensor[(2), int16], %var_9326: Tensor[(168), int16], %var_9360: Tensor[(105, 15), float32]) -> (Tensor[(28, 48), uint64], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(168), int16], Tensor[(286), float64], Tensor[(20, 4), float64], Tensor[(15, 15, 7), bool], Tensor[(105, 15), float32], Tensor[(1470), float32]) {
    %110 = cast(%var_9325, dtype="int16") /* ty=Tensor[(2), int16] */;
    %111 = cast(%var_9326, dtype="int16") /* ty=Tensor[(168), int16] */;
    %112 = cast(meta[relay.Constant][8] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
    %113 = reshape(%110, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
    %114 = reshape(%111, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
    %115 = reshape(%112, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
    %116 = @func_2306(%113, %114, %115) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
    %117 = @func_7102() /* ty=Tensor[(28, 48), uint64] */;
    %118 = cast(%117, dtype="int32") /* ty=Tensor[(28, 48), int32] */;
    %119 = reshape(%118, newshape=[14, 8, 12]) /* ty=Tensor[(14, 8, 12), int32] */;
    %120 = @func_1349(%119) /* ty=(Tensor[(8, 2, 5), float32], Tensor[(20, 4), float32], Tensor[(14, 8, 12), bool], Tensor[(14, 8, 12), float64]) */;
    %121 = %120.1;
    %122 = cast(%121, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
    %123 = cast(%var_9360, dtype="float32") /* ty=Tensor[(105, 15), float32] */;
    %124 = cast(meta[relay.Constant][9] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %125 = reshape(%123, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), float32] */;
    %126 = reshape(%124, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), float32] */;
    %127 = @func_5351(%125, %126) /* ty=(Tensor[(15, 15, 7), bool], Tensor[(15, 14, 7), bool], Tensor[(15, 1, 7), float32]) */;
    %128 = %116.0;
    %129 = cosh(%122) /* ty=Tensor[(20, 4), float64] */;
    %130 = %127.0;
    (%117, %128, %var_9325, %var_9326, meta[relay.Constant][8] /* ty=Tensor[(286), float64] */, %129, %130, %var_9360, meta[relay.Constant][9] /* ty=Tensor[(1470), float32] */)
  };
  %131(%var_9383, %var_9384, %var_9385) /* ty=(Tensor[(28, 48), uint64], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(168), int16], Tensor[(286), float64], Tensor[(20, 4), float64], Tensor[(15, 15, 7), bool], Tensor[(105, 15), float32], Tensor[(1470), float32]) */
}

def @func_5400() -> Tensor[(4, 11, 4), int8] {
  %132 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %132.0
}

def @func_2609(%var_2607: Tensor[(1344), int32]) -> (Tensor[(6, 15, 7), float32], Tensor[(20, 4), float32], Tensor[(1344), int32], Tensor[(6, 15, 7), float64]) {
  @func_2606(%var_2607) /* ty=(Tensor[(6, 15, 7), float32], Tensor[(20, 4), float32], Tensor[(1344), int32], Tensor[(6, 15, 7), float64]) */
}

def @func_7702() -> Tensor[(28, 48), uint64] {
  @func_7102() /* ty=Tensor[(28, 48), uint64] */
}

def @func_6172(%var_6171: Tensor[(168), int16]) -> (Tensor[(15, 1, 7), float32], Tensor[(84, 2), int16], Tensor[(168), int16], Tensor[(286), float64]) {
  %142 = fn (%var_6165: Tensor[(168), int16]) -> (Tensor[(15, 1, 7), float32], Tensor[(84, 2), int16], Tensor[(168), int16], Tensor[(286), float64]) {
    %133 = cast(%var_6165, dtype="int16") /* ty=Tensor[(168), int16] */;
    %134 = cast(meta[relay.Constant][10] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
    %135 = @func_5724() /* ty=Tensor[(15, 1, 7), float32] */;
    %136 = cast(%135, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
    %137 = reshape(%133, newshape=[84, 2]) /* ty=Tensor[(84, 2), int16] */;
    %138 = reshape(%134, newshape=[286]) /* ty=Tensor[(286), float64] */;
    %139 = reshape(%136, newshape=[7, 15]) /* ty=Tensor[(7, 15), float32] */;
    %140 = @func_5201(%137, %138, %139) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(84, 2), int16], Tensor[(15, 1, 7), float32], Tensor[(324), int64], Tensor[(7, 15), float32], Tensor[(286), float64]) */;
    %141 = %140.3;
    (%135, %141, %var_6165, meta[relay.Constant][10] /* ty=Tensor[(286), float64] */)
  };
  %142(%var_6171) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(84, 2), int16], Tensor[(168), int16], Tensor[(286), float64]) */
}

def @func_7876() -> Tensor[(4, 11, 4), int8] {
  @func_7874() /* ty=Tensor[(4, 11, 4), int8] */
}

def @func_8299(%var_8298: Tensor[(1, 12, 6), float32]) -> (Tensor[(1, 12, 6), float32],) {
  %145 = fn (%var_8290: Tensor[(1, 12, 6), float32]) -> (Tensor[(1, 12, 6), float32],) {
    %143 = cast(%var_8290, dtype="float32") /* ty=Tensor[(1, 12, 6), float32] */;
    %144 = acosh(%143) /* ty=Tensor[(1, 12, 6), float32] */;
    (%144,)
  };
  %145(%var_8298) /* ty=(Tensor[(1, 12, 6), float32],) */
}

def @func_10775(%var_10773: Tensor[(2028), float64], %var_10774: Tensor[(286), float64]) -> (Tensor[(105), float32], Tensor[(15, 1, 7), float32], Tensor[(2028), float64], Tensor[(1470), float32], Tensor[(286), float64], Tensor[(28, 48), int32]) {
  @func_10771(%var_10773, %var_10774) /* ty=(Tensor[(105), float32], Tensor[(15, 1, 7), float32], Tensor[(2028), float64], Tensor[(1470), float32], Tensor[(286), float64], Tensor[(28, 48), int32]) */
}

def @func_6068(%var_6054: Tensor[(4, 11, 4), int8]) -> (Tensor[(4, 11, 4), uint8],) {
  %146 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %147 = cast(%var_6054, dtype="uint8") /* ty=Tensor[(4, 11, 4), uint8] */;
  %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%146, dtype="uint8") /* ty=Tensor[(4, 11, 4), uint8] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %151 = maximum(%149, %150) /* ty=Tensor[(4, 11, 4), uint8] */;
  (%151,)
}

def @func_7074(%var_7045: Tensor[(80), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(80), float32], Tensor[(28, 48), bool]) {
  %152 = cast(%var_7045, dtype="float32") /* ty=Tensor[(80), float32] */;
  %153 = reshape(%152, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %154 = @func_5991(%153) /* ty=(Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(8, 8, 4), float64], Tensor[(80), float32]) */;
  %155 = @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */;
  %156 = %155.0;
  %157 = cast(%156, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %158 = log(%157) /* ty=Tensor[(28, 48), float64] */;
  %159 = cast(%158, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %160 = shape_of(%156, dtype="int32") /* ty=Tensor[(2), int32] */;
  %161 = cast(%156, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %163 = equal(%161, %162) /* ty=Tensor[(28, 48), bool] */;
  %164 = cast(%156, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(2), int32] */;
  %166 = cast(%163, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %168 = %154.2;
  %169 = less(%166, %167) /* ty=Tensor[(28, 48), bool] */;
  (%168, %var_7045, %169)
}

def @func_11031() -> Tensor[(6, 15, 7), float32] {
  %171 = fn () -> Tensor[(6, 15, 7), float32] {
    %170 = @func_10622() /* ty=(Tensor[(6, 15, 7), float32],) */;
    %170.0
  };
  %171() /* ty=Tensor[(6, 15, 7), float32] */
}

def @func_8580(%var_8578: Tensor[(15, 10, 7), float32]) -> (Tensor[(15, 10, 7), bool], Tensor[(11, 9, 12), bool], Tensor[(1188), uint32], Tensor[(8, 2, 5), float32], Tensor[(80), float32]) {
  @func_8577(%var_8578) /* ty=(Tensor[(15, 10, 7), bool], Tensor[(11, 9, 12), bool], Tensor[(1188), uint32], Tensor[(8, 2, 5), float32], Tensor[(80), float32]) */
}

def @func_5726() -> Tensor[(15, 1, 7), float32] {
  @func_5724() /* ty=Tensor[(15, 1, 7), float32] */
}

def @func_9128() -> (Tensor[(4, 11, 4), int8], Tensor[(28, 48), int32]) {
  @func_9126() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(28, 48), int32]) */
}

def @func_10924() -> (Tensor[(20, 4), uint16],) {
  @func_10922() /* ty=(Tensor[(20, 4), uint16],) */
}

def @func_9991() -> (Tensor[(28, 48), uint64],) {
  @func_9989() /* ty=(Tensor[(28, 48), uint64],) */
}

def @func_6597(%var_6582: Tensor[(1280), float32], %var_6591: Tensor[(4, 11, 4), int8]) -> (Tensor[(168), int16], Tensor[(1280), float32], Tensor[(1188), uint32], Tensor[(80), float32], Tensor[(4, 11, 4), bool]) {
  %172 = cast(%var_6582, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %173 = cast(meta[relay.Constant][11] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %174 = cast(meta[relay.Constant][11] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %175 = cast(meta[relay.Constant][11] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %176 = cast(meta[relay.Constant][12] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %177 = reshape(%172, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %178 = reshape(%173, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
  %179 = reshape(%174, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
  %180 = reshape(%175, newshape=[1188]) /* ty=Tensor[(1188), uint32] */;
  %181 = reshape(%176, newshape=[20, 4]) /* ty=Tensor[(20, 4), float32] */;
  %182 = @func_6461(%177, %178, %179, %180, %181) /* ty=(Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(1280), uint8], Tensor[(11, 9, 12), bool], Tensor[(168), int16], Tensor[(15, 1, 7), float32], Tensor[(15, 1, 7), float32], Tensor[(1188), float32], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(286), uint64], Tensor[(1188), bool], Tensor[(20, 4), float64]) */;
  %183 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %184 = cast(%var_6591, dtype="bool") /* ty=Tensor[(4, 11, 4), bool] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%183, dtype="bool") /* ty=Tensor[(4, 11, 4), bool] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %188 = %182.4;
  %189 = logical_or(%186, %187) /* ty=Tensor[(4, 11, 4), bool] */;
  (%188, %var_6582, meta[relay.Constant][11] /* ty=Tensor[(1188), uint32] */, meta[relay.Constant][12] /* ty=Tensor[(80), float32] */, %189)
}

def @func_3757(%var_3743: Tensor[(2, 5, 6), float64]) -> (Tensor[(2, 5, 6), float64],) {
  %190 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 5, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 5, 6), float64] */;
  %191 = shape_of(%var_3743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%var_3743, dtype="float64") /* ty=Tensor[(2, 5, 6), float64] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %194 = floor_mod(%192, %193) /* ty=Tensor[(2, 5, 6), float64] */;
  (%194,)
}

def @func_10040() -> (Tensor[(176), int8], Tensor[(15, 1, 7), float32]) {
  %195 = @func_8627() /* ty=(Tensor[(176), int8],) */;
  %196 = %195.0;
  %197 = @func_5724() /* ty=Tensor[(15, 1, 7), float32] */;
  (%196, %197)
}

def @func_8855(%var_8852: Tensor[(28, 48), bool], %var_8853: Tensor[(80), float32], %var_8854: Tensor[(1, 1470), float32]) -> (Tensor[(176), int8], Tensor[(80), float32], Tensor[(80), float32], Tensor[(4, 11, 4), float64], Tensor[(28, 48), int8], Tensor[(286), float64], Tensor[(2028), float64], Tensor[(1, 1470), float32], Tensor[(286, 1), float64]) {
  %229 = fn (%var_8798: Tensor[(28, 48), bool], %var_8819: Tensor[(80), float32], %var_8848: Tensor[(1, 1470), float32]) -> (Tensor[(176), int8], Tensor[(80), float32], Tensor[(80), float32], Tensor[(4, 11, 4), float64], Tensor[(28, 48), int8], Tensor[(286), float64], Tensor[(2028), float64], Tensor[(1, 1470), float32], Tensor[(286, 1), float64]) {
    %198 = @func_6894() /* ty=(Tensor[(176), int8],) */;
    %199 = cast(%var_8819, dtype="float32") /* ty=Tensor[(80), float32] */;
    %200 = reshape(%199, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %201 = @func_5991(%200) /* ty=(Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(8, 8, 4), float64], Tensor[(80), float32]) */;
    %202 = @func_8407() /* ty=Tensor[(4, 11, 4), int8] */;
    %203 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 11, 4), int8] */, dtype="float64") /* ty=Tensor[(4, 11, 4), float64] */;
    %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
    %205 = cast(%202, dtype="float64") /* ty=Tensor[(4, 11, 4), float64] */;
    %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %207 = @func_8338() /* ty=Tensor[(28, 48), bool] */;
    %208 = cast(%var_8798, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
    %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(2), int32] */;
    %210 = cast(%207, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
    %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %212 = mod(%210, %211) /* ty=Tensor[(28, 48), float64] */;
    %213 = cast(%207, dtype="int8") /* ty=Tensor[(28, 48), int8] */;
    %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(2), int32] */;
    %215 = cast(%212, dtype="int8") /* ty=Tensor[(28, 48), int8] */;
    %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %217 = cast(meta[relay.Constant][15] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %218 = cast(%var_8848, dtype="float32") /* ty=Tensor[(1, 1470), float32] */;
    %219 = cast(meta[relay.Constant][16] /* ty=Tensor[(286, 1), float64] */, dtype="float64") /* ty=Tensor[(286, 1), float64] */;
    %220 = reshape(%217, newshape=[13, 13, 12]) /* ty=Tensor[(13, 13, 12), float64] */;
    %221 = reshape(%218, newshape=[14, 105]) /* ty=Tensor[(14, 105), float32] */;
    %222 = reshape(%219, newshape=[286]) /* ty=Tensor[(286), float64] */;
    %223 = @func_6965(%220, %221, %222) /* ty=(Tensor[(13, 13, 12), float64], Tensor[(15, 14, 7), bool], Tensor[(1575), float32], Tensor[(14, 105), float32], Tensor[(13, 13, 12), uint32], Tensor[(15, 1, 7), float32], Tensor[(13, 13, 12), bool], Tensor[(80), float32], Tensor[(286), float64], Tensor[(80), float32], Tensor[(13, 13, 12), float32]) */;
    %224 = %198.0;
    %225 = %201.3;
    %226 = floor_divide(%205, %206) /* ty=Tensor[(4, 11, 4), float64] */;
    %227 = left_shift(%215, %216) /* ty=Tensor[(28, 48), int8] */;
    %228 = %223.8;
    (%224, %225, %var_8819, %226, %227, %228, meta[relay.Constant][15] /* ty=Tensor[(2028), float64] */, %var_8848, meta[relay.Constant][16] /* ty=Tensor[(286, 1), float64] */)
  };
  %229(%var_8852, %var_8853, %var_8854) /* ty=(Tensor[(176), int8], Tensor[(80), float32], Tensor[(80), float32], Tensor[(4, 11, 4), float64], Tensor[(28, 48), int8], Tensor[(286), float64], Tensor[(2028), float64], Tensor[(1, 1470), float32], Tensor[(286, 1), float64]) */
}

def @func_10437() -> (Tensor[(4, 11, 4), int8], Tensor[(20, 4), uint16]) {
  %233 = fn () -> (Tensor[(4, 11, 4), int8], Tensor[(20, 4), uint16]) {
    %230 = @func_9458() /* ty=(Tensor[(28, 48), float64], Tensor[(20, 4), uint16], Tensor[(286, 1), float64]) */;
    %231 = @func_7874() /* ty=Tensor[(4, 11, 4), int8] */;
    %232 = %230.1;
    (%231, %232)
  };
  %233() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(20, 4), uint16]) */
}

def @func_7772() -> (Tensor[(15, 1, 7), float32],) {
  %235 = fn () -> (Tensor[(15, 1, 7), float32],) {
    %234 = @func_7542() /* ty=Tensor[(15, 1, 7), float32] */;
    (%234,)
  };
  %235() /* ty=(Tensor[(15, 1, 7), float32],) */
}

def @func_5724() -> Tensor[(15, 1, 7), float32] {
  @func_5276() /* ty=Tensor[(15, 1, 7), float32] */
}

def @func_9701(%var_9679: Tensor[(6, 28), int16]) -> (Tensor[(28, 48), float32], Tensor[(168), int16], Tensor[(6, 28), int16], Tensor[(15, 1, 7), float32]) {
  %236 = cast(%var_9679, dtype="int16") /* ty=Tensor[(6, 28), int16] */;
  %237 = reshape(%236, newshape=[168]) /* ty=Tensor[(168), int16] */;
  %238 = @func_6170(%237) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(84, 2), int16], Tensor[(168), int16], Tensor[(286), float64]) */;
  %239 = @func_6787() /* ty=(Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), int32], Tensor[(176), int8]) */;
  %240 = @func_7631() /* ty=Tensor[(28, 48), float32] */;
  %241 = %238.2;
  %242 = %239.0;
  (%240, %241, %var_9679, %242)
}

def @func_7210(%var_7122: Tensor[(1280), float32], %var_7129: Tensor[(40), float32], %var_7194: Tensor[(2), int16], %var_7195: Tensor[(168), int16], %var_7196: Tensor[(286), float64]) -> (Tensor[(28, 48), int32], Tensor[(1188), uint32], Tensor[(1280), float32], Tensor[(176), int8], Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(15, ?, 7), uint16], Tensor[(15, 1, 7), float32], Tensor[(1680), float64], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(168), int16], Tensor[(286), float64]) {
  %243 = cast(%var_7122, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %244 = cast(meta[relay.Constant][17] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %245 = reshape(%243, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %246 = reshape(%244, newshape=[4, 11, 4]) /* ty=Tensor[(4, 11, 4), int8] */;
  %247 = @func_6597(%245, %246) /* ty=(Tensor[(168), int16], Tensor[(1280), float32], Tensor[(1188), uint32], Tensor[(80), float32], Tensor[(4, 11, 4), bool]) */;
  %248 = cast(%var_7129, dtype="float32") /* ty=Tensor[(40), float32] */;
  %249 = reshape(%248, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float32] */;
  %250 = cast(meta[relay.Constant][18] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %251 = reshape(%250, newshape=[15, 16, 7]) /* ty=Tensor[(15, 16, 7), float32] */;
  %252 = @func_6293(%251) /* ty=(Tensor[(15, 16, 7), int8], Tensor[(15, ?, 7), uint16]) */;
  %253 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %254 = cast(meta[relay.Constant][18] /* ty=Tensor[(1680), float32] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %255 = cast(%var_7194, dtype="int16") /* ty=Tensor[(2), int16] */;
  %256 = cast(%var_7195, dtype="int16") /* ty=Tensor[(168), int16] */;
  %257 = cast(%var_7196, dtype="float64") /* ty=Tensor[(286), float64] */;
  %258 = reshape(%255, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
  %259 = reshape(%256, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
  %260 = reshape(%257, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
  %261 = @func_2306(%258, %259, %260) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
  %262 = @func_6545() /* ty=Tensor[(28, 48), int32] */;
  %263 = %247.2;
  %264 = @func_1406(%249) /* ty=Tensor[(10, 2, 2), float32] */;
  %265 = %252.1;
  %266 = %253.1;
  %267 = tan(%254) /* ty=Tensor[(1680), float64] */;
  %268 = %261.1;
  (%262, %263, %var_7122, meta[relay.Constant][17] /* ty=Tensor[(176), int8] */, %264, %var_7129, %265, %266, %267, %268, %var_7194, %var_7195, %var_7196)
}

def @func_9839() -> (Tensor[(28, 48), float32],) {
  %269 = @func_7631() /* ty=Tensor[(28, 48), float32] */;
  (%269,)
}

def @func_6895() -> (Tensor[(176), int8],) {
  %272 = fn () -> (Tensor[(176), int8],) {
    %270 = @func_6787() /* ty=(Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), int32], Tensor[(176), int8]) */;
    %271 = %270.2;
    (%271,)
  };
  %272() /* ty=(Tensor[(176), int8],) */
}

def @func_3161(%var_3160: Tensor[(80, 1), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 2, 5), float32], Tensor[(80, 1), float32]) {
  %279 = fn (%var_3152: Tensor[(80, 1), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 2, 5), float32], Tensor[(80, 1), float32]) {
    %273 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 8, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %274 = cast(%var_3152, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
    %275 = reshape(%274, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
    %276 = @func_12(%275) /* ty=(Tensor[(8, 2, 5), float32],) */;
    %277 = acos(%273) /* ty=Tensor[(8, 8, 4), float64] */;
    %278 = %276.0;
    (%277, %278, %var_3152)
  };
  %279(%var_3160) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 2, 5), float32], Tensor[(80, 1), float32]) */
}

def @func_2997(%var_2995: uint32, %var_2996: Tensor[(3, 4, 1), uint32]) -> Tensor[(3, 4, 1), uint32] {
  @func_2993(%var_2995, %var_2996) /* ty=Tensor[(3, 4, 1), uint32] */
}

def @func_7077(%var_7075: Tensor[(80), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(80), float32], Tensor[(28, 48), bool]) {
  @func_7074(%var_7075) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(80), float32], Tensor[(28, 48), bool]) */
}

def @func_10692(%var_10691: Tensor[(28, 48), uint64]) -> Tensor[(28, 48), bool] {
  %285 = fn (%var_10674: Tensor[(28, 48), uint64]) -> Tensor[(28, 48), bool] {
    %280 = @func_7702() /* ty=Tensor[(28, 48), uint64] */;
    %281 = cast(%var_10674, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
    %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(2), int32] */;
    %283 = cast(%280, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
    %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    logical_or(%283, %284) /* ty=Tensor[(28, 48), bool] */
  };
  %285(%var_10691) /* ty=Tensor[(28, 48), bool] */
}

def @func_6766(%var_6763: Tensor[(12), uint32], %var_6764: Tensor[(168), int16], %var_6765: Tensor[(15, 11, 7), bool]) -> (Tensor[(3, 4, 1), uint32], uint32, Tensor[(12), uint32], Tensor[(88, 2), float64], Tensor[(176), int8], Tensor[(168), int16], Tensor[(10, 5, 13), float32], Tensor[(15, 11, 7), bool], Tensor[(5, 130), float32]) {
  @func_6761(%var_6763, %var_6764, %var_6765) /* ty=(Tensor[(3, 4, 1), uint32], uint32, Tensor[(12), uint32], Tensor[(88, 2), float64], Tensor[(176), int8], Tensor[(168), int16], Tensor[(10, 5, 13), float32], Tensor[(15, 11, 7), bool], Tensor[(5, 130), float32]) */
}

def @func_9544(%var_9543: Tensor[(28, 48), uint64]) -> Tensor[(28, 48), uint16] {
  %292 = fn (%var_9517: Tensor[(28, 48), uint64]) -> Tensor[(28, 48), uint16] {
    %286 = @func_9292() /* ty=(Tensor[(4, 11, 4), float64], Tensor[(28, 48), uint64], Tensor[(105), float32], Tensor[(28, 48), float32], Tensor[(80), float32], Tensor[(1280), float32]) */;
    %287 = %286.1;
    %288 = cast(%var_9517, dtype="uint16") /* ty=Tensor[(28, 48), uint16] */;
    %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(2), int32] */;
    %290 = cast(%287, dtype="uint16") /* ty=Tensor[(28, 48), uint16] */;
    %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    bitwise_or(%290, %291) /* ty=Tensor[(28, 48), uint16] */
  };
  %292(%var_9543) /* ty=Tensor[(28, 48), uint16] */
}

def @func_10922() -> (Tensor[(20, 4), uint16],) {
  %293 = @func_10436() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(20, 4), uint16]) */;
  %294 = %293.1;
  (%294,)
}

def @func_10341() -> (Tensor[(28, 48), int32],) {
  %297 = fn () -> (Tensor[(28, 48), int32],) {
    %295 = @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */;
    %296 = %295.1;
    (%296,)
  };
  %297() /* ty=(Tensor[(28, 48), int32],) */
}

def @func_9126() -> (Tensor[(4, 11, 4), int8], Tensor[(28, 48), int32]) {
  %298 = @func_7874() /* ty=Tensor[(4, 11, 4), int8] */;
  %299 = @func_6545() /* ty=Tensor[(28, 48), int32] */;
  (%298, %299)
}

def @func_9785(%var_9783: Tensor[(15, 9, 7), float32]) -> (Tensor[(4, 11, 4), int8], Tensor[(15, 9, 7), bool]) {
  @func_9782(%var_9783) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 9, 7), bool]) */
}

def @func_7484(%var_7475: Tensor[(4, 11, 4), int8]) -> Tensor[(4, 11, 4), bool] {
  %300 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %301 = cast(%var_7475, dtype="bool") /* ty=Tensor[(4, 11, 4), bool] */;
  %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%300, dtype="bool") /* ty=Tensor[(4, 11, 4), bool] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%303, %304) /* ty=Tensor[(4, 11, 4), bool] */
}

def @func_8378() -> (Tensor[(28, 48), float64],) {
  %310 = fn () -> (Tensor[(28, 48), float64],) {
    %305 = @func_7631() /* ty=Tensor[(28, 48), float32] */;
    %306 = cast(%305, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
    %307 = acos(%306) /* ty=Tensor[(28, 48), float32] */;
    %308 = cast(%307, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
    %309 = log2(%308) /* ty=Tensor[(28, 48), float64] */;
    (%309,)
  };
  %310() /* ty=(Tensor[(28, 48), float64],) */
}

def @func_5351(%var_5323: Tensor[(15, 15, 7), float32], %var_5336: Tensor[(15, 14, 7), float32]) -> (Tensor[(15, 15, 7), bool], Tensor[(15, 14, 7), bool], Tensor[(15, 1, 7), float32]) {
  %311 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  %312 = cast(%311, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %313 = cast(%var_5323, dtype="bool") /* ty=Tensor[(15, 15, 7), bool] */;
  %314 = cast(%311, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %315 = cast(%var_5336, dtype="bool") /* ty=Tensor[(15, 14, 7), bool] */;
  %316 = less(%312, %313) /* ty=Tensor[(15, 15, 7), bool] */;
  %317 = less(%314, %315) /* ty=Tensor[(15, 14, 7), bool] */;
  %318 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  (%316, %317, %318)
}

def @func_1805(%var_1803: Tensor[(2, 16, 1), float64], %var_1804: Tensor[(2, 16, 13), float64]) -> (Tensor[(2, 16, 1), float64], Tensor[(2, 16, 13), int16]) {
  %324 = fn (%var_1793: Tensor[(2, 16, 1), float64], %var_1797: Tensor[(2, 16, 13), float64]) -> (Tensor[(2, 16, 1), float64], Tensor[(2, 16, 13), int16]) {
    %319 = cast(%var_1793, dtype="float64") /* ty=Tensor[(2, 16, 1), float64] */;
    %320 = cast(%var_1793, dtype="int16") /* ty=Tensor[(2, 16, 1), int16] */;
    %321 = cast(%var_1797, dtype="int16") /* ty=Tensor[(2, 16, 13), int16] */;
    %322 = log10(%319) /* ty=Tensor[(2, 16, 1), float64] */;
    %323 = maximum(%320, %321) /* ty=Tensor[(2, 16, 13), int16] */;
    (%322, %323)
  };
  %324(%var_1803, %var_1804) /* ty=(Tensor[(2, 16, 1), float64], Tensor[(2, 16, 13), int16]) */
}

def @func_5803() -> (Tensor[(4, 11, 4), int8], Tensor[(20, 4), float32], Tensor[(28, 48), int32]) {
  %325 = cast(meta[relay.Constant][20] /* ty=Tensor[(28, 48), int32] */, dtype="int32") /* ty=Tensor[(28, 48), int32] */;
  %326 = reshape(%325, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
  %327 = @func_2606(%326) /* ty=(Tensor[(6, 15, 7), float32], Tensor[(20, 4), float32], Tensor[(1344), int32], Tensor[(6, 15, 7), float64]) */;
  %328 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %329 = %327.1;
  (%328, %329, meta[relay.Constant][20] /* ty=Tensor[(28, 48), int32] */)
}

def @func_7102() -> Tensor[(28, 48), uint64] {
  %330 = @func_6545() /* ty=Tensor[(28, 48), int32] */;
  %331 = cast(%330, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %332 = acosh(%331) /* ty=Tensor[(28, 48), float32] */;
  %333 = cast(%330, dtype="uint64") /* ty=Tensor[(28, 48), uint64] */;
  %334 = shape_of(%332, dtype="int32") /* ty=Tensor[(2), int32] */;
  %335 = cast(%332, dtype="uint64") /* ty=Tensor[(28, 48), uint64] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  maximum(%335, %336) /* ty=Tensor[(28, 48), uint64] */
}

def @func_7745() -> (Tensor[(28, 48), int32],) {
  %337 = @func_7608() /* ty=Tensor[(28, 48), int32] */;
  (%337,)
}

def @func_5402() -> Tensor[(4, 11, 4), int8] {
  @func_5400() /* ty=Tensor[(4, 11, 4), int8] */
}

def @func_8988() -> (Tensor[(176), int8], Tensor[(28, 48), int32]) {
  %341 = fn () -> (Tensor[(176), int8], Tensor[(28, 48), int32]) {
    %338 = @func_8627() /* ty=(Tensor[(176), int8],) */;
    %339 = %338.0;
    %340 = @func_7608() /* ty=Tensor[(28, 48), int32] */;
    (%339, %340)
  };
  %341() /* ty=(Tensor[(176), int8], Tensor[(28, 48), int32]) */
}

def @func_3782(%var_3781: Tensor[(15, 1, 7), float32]) -> (Tensor[(15, 1, 7), float32],) {
  %344 = fn (%var_3768: Tensor[(15, 1, 7), float32]) -> (Tensor[(15, 1, 7), float32],) {
    %342 = cast(%var_3768, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
    %343 = asinh(%342) /* ty=Tensor[(15, 1, 7), float32] */;
    (%343,)
  };
  %344(%var_3781) /* ty=(Tensor[(15, 1, 7), float32],) */
}

def @func_7362() -> (Tensor[(4, 11, 4), float32], Tensor[(105), float32]) {
  @func_7360() /* ty=(Tensor[(4, 11, 4), float32], Tensor[(105), float32]) */
}

def @func_5993(%var_5992: Tensor[(80), float32]) -> (Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(8, 8, 4), float64], Tensor[(80), float32]) {
  %353 = fn (%var_5988: Tensor[(80), float32]) -> (Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(8, 8, 4), float64], Tensor[(80), float32]) {
    %345 = @func_5903() /* ty=(Tensor[(105), float32], Tensor[(15, 11, 7), bool]) */;
    %346 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
    %347 = cast(%var_5988, dtype="float32") /* ty=Tensor[(80), float32] */;
    %348 = reshape(%347, newshape=[80, 1]) /* ty=Tensor[(80, 1), float32] */;
    %349 = @func_3159(%348) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 2, 5), float32], Tensor[(80, 1), float32]) */;
    %350 = %345.1;
    %351 = %346.2;
    %352 = %349.0;
    (%350, %351, %352, %var_5988)
  };
  %353(%var_5992) /* ty=(Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(8, 8, 4), float64], Tensor[(80), float32]) */
}

def @func_9174() -> Tensor[(105), float32] {
  %355 = fn () -> Tensor[(105), float32] {
    %354 = @func_6508() /* ty=(Tensor[(105), float32],) */;
    %354.0
  };
  %355() /* ty=Tensor[(105), float32] */
}

def @func_5643() -> Tensor[(15, 11, 7), bool] {
  @func_5641() /* ty=Tensor[(15, 11, 7), bool] */
}

def @func_10406() -> (Tensor[(105), float32], Tensor[(105), float32]) {
  %360 = fn () -> (Tensor[(105), float32], Tensor[(105), float32]) {
    %356 = @func_7849() /* ty=(Tensor[(105), float32],) */;
    %357 = @func_6508() /* ty=(Tensor[(105), float32],) */;
    %358 = %356.0;
    %359 = %357.0;
    (%358, %359)
  };
  %360() /* ty=(Tensor[(105), float32], Tensor[(105), float32]) */
}

def @func_7257() -> (Tensor[(28, 48), int32],) {
  @func_7255() /* ty=(Tensor[(28, 48), int32],) */
}

def @func_5062() -> (Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) {
  %361 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 11, 4), int8] */, dtype="int8") /* ty=Tensor[(4, 11, 4), int8] */;
  %362 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(4, 11, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 11, 4), int8] */, dtype="int8") /* ty=Tensor[(4, 11, 4), int8] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %365 = cast(meta[relay.Constant][23] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %366 = reshape(%365, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float32] */;
  %367 = @func_3780(%366) /* ty=(Tensor[(15, 1, 7), float32],) */;
  %368 = bitwise_or(%363, %364) /* ty=Tensor[(4, 11, 4), int8] */;
  %369 = %367.0;
  (%368, %369, meta[relay.Constant][23] /* ty=Tensor[(105), float32] */)
}

def @func_6296(%var_6294: Tensor[(15, 16, 7), float32]) -> (Tensor[(15, 16, 7), int8], Tensor[(15, ?, 7), uint16]) {
  @func_6293(%var_6294) /* ty=(Tensor[(15, 16, 7), int8], Tensor[(15, ?, 7), uint16]) */
}

def @func_12(%var_0: Tensor[(8, 2, 5), float32]) -> (Tensor[(8, 2, 5), float32],) {
  %370 = cast(%var_0, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %371 = rsqrt(%370) /* ty=Tensor[(8, 2, 5), float32] */;
  (%371,)
}

def @func_7543() -> Tensor[(15, 1, 7), float32] {
  %373 = fn () -> Tensor[(15, 1, 7), float32] {
    %372 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
    %372.1
  };
  %373() /* ty=Tensor[(15, 1, 7), float32] */
}

def @func_1406(%var_1386: Tensor[(10, 2, 2), float32]) -> Tensor[(10, 2, 2), float32] {
  %374 = cast(%var_1386, dtype="float32") /* ty=Tensor[(10, 2, 2), float32] */;
  cosh(%374) /* ty=Tensor[(10, 2, 2), float32] */
}

def @func_7704() -> Tensor[(28, 48), uint64] {
  @func_7702() /* ty=Tensor[(28, 48), uint64] */
}

def @func_7217(%var_7212: Tensor[(1280), float32], %var_7213: Tensor[(40), float32], %var_7214: Tensor[(2), int16], %var_7215: Tensor[(168), int16], %var_7216: Tensor[(286), float64]) -> (Tensor[(28, 48), int32], Tensor[(1188), uint32], Tensor[(1280), float32], Tensor[(176), int8], Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(15, ?, 7), uint16], Tensor[(15, 1, 7), float32], Tensor[(1680), float64], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(168), int16], Tensor[(286), float64]) {
  @func_7210(%var_7212, %var_7213, %var_7214, %var_7215, %var_7216) /* ty=(Tensor[(28, 48), int32], Tensor[(1188), uint32], Tensor[(1280), float32], Tensor[(176), int8], Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(15, ?, 7), uint16], Tensor[(15, 1, 7), float32], Tensor[(1680), float64], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(168), int16], Tensor[(286), float64]) */
}

def @func_6545() -> Tensor[(28, 48), int32] {
  %375 = @func_5803() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(20, 4), float32], Tensor[(28, 48), int32]) */;
  %375.2
}

def @func_1729(%var_1728: Tensor[(11, 9, 12), uint32]) -> (Tensor[(11, 9, 12), bool],) {
  %381 = fn (%var_1723: Tensor[(11, 9, 12), uint32]) -> (Tensor[(11, 9, 12), bool],) {
    %376 = cast(%var_1723, dtype="bool") /* ty=Tensor[(11, 9, 12), bool] */;
    %377 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(11, 9, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %378 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 9, 12), uint32] */, dtype="bool") /* ty=Tensor[(11, 9, 12), bool] */;
    %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %380 = greater(%378, %379) /* ty=Tensor[(11, 9, 12), bool] */;
    (%380,)
  };
  %381(%var_1728) /* ty=(Tensor[(11, 9, 12), bool],) */
}

def @func_2798(%var_2797: Tensor[(10, 5, 13), float32]) -> (Tensor[(10, 5, 13), float32],) {
  %384 = fn (%var_2786: Tensor[(10, 5, 13), float32]) -> (Tensor[(10, 5, 13), float32],) {
    %382 = cast(%var_2786, dtype="float32") /* ty=Tensor[(10, 5, 13), float32] */;
    %383 = tan(%382) /* ty=Tensor[(10, 5, 13), float32] */;
    (%383,)
  };
  %384(%var_2797) /* ty=(Tensor[(10, 5, 13), float32],) */
}

def @func_8251() -> (Tensor[(15, 1, 7), float32], Tensor[(105), float32], Tensor[(28, 48), int32]) {
  @func_8249() /* ty=(Tensor[(15, 1, 7), float32], Tensor[(105), float32], Tensor[(28, 48), int32]) */
}

def @func_8086() -> (Tensor[(4, 11, 4), int8],) {
  %385 = @func_7874() /* ty=Tensor[(4, 11, 4), int8] */;
  (%385,)
}

def @func_10988(%var_10986: Tensor[(5, 14, 10), int32]) -> (Tensor[(5, 14, 10), int32],) {
  @func_10985(%var_10986) /* ty=(Tensor[(5, 14, 10), int32],) */
}

def @func_9292() -> (Tensor[(4, 11, 4), float64], Tensor[(28, 48), uint64], Tensor[(105), float32], Tensor[(28, 48), float32], Tensor[(80), float32], Tensor[(1280), float32]) {
  %386 = @func_8958() /* ty=(Tensor[(28, 48), float64], Tensor[(4, 11, 4), float64], Tensor[(80), float32], Tensor[(1470), float32]) */;
  %387 = @func_7360() /* ty=(Tensor[(4, 11, 4), float32], Tensor[(105), float32]) */;
  %388 = @func_8377() /* ty=(Tensor[(28, 48), float64],) */;
  %389 = %388.0;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %391 = sinh(%390) /* ty=Tensor[(28, 48), float64] */;
  %392 = cast(%391, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %393 = cast(meta[relay.Constant][25] /* ty=Tensor[(1280), float32] */, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %394 = %386.1;
  %395 = cast(%394, dtype="int8") /* ty=Tensor[(4, 11, 4), int8] */;
  %396 = reshape(%393, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %397 = reshape(%395, newshape=[4, 11, 4]) /* ty=Tensor[(4, 11, 4), int8] */;
  %398 = @func_6597(%396, %397) /* ty=(Tensor[(168), int16], Tensor[(1280), float32], Tensor[(1188), uint32], Tensor[(80), float32], Tensor[(4, 11, 4), bool]) */;
  %399 = @func_7102() /* ty=Tensor[(28, 48), uint64] */;
  %400 = %387.1;
  %401 = sin(%392) /* ty=Tensor[(28, 48), float32] */;
  %402 = %398.3;
  (%394, %399, %400, %401, %402, meta[relay.Constant][25] /* ty=Tensor[(1280), float32] */)
}

def @func_4240(%var_4237: Tensor[(9, 12, 3), int64], %var_4238: Tensor[(9, 12, 3), int64], %var_4239: Tensor[(105), float32]) -> (Tensor[(9, 12, 3), bool], Tensor[(6, 15, 7), float64], Tensor[(1344), int32], Tensor[(10, 5, 13), float32], Tensor[(650), float32], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) {
  %420 = fn (%var_4204: Tensor[(9, 12, 3), int64], %var_4205: Tensor[(9, 12, 3), int64], %var_4226: Tensor[(105), float32]) -> (Tensor[(9, 12, 3), bool], Tensor[(6, 15, 7), float64], Tensor[(1344), int32], Tensor[(10, 5, 13), float32], Tensor[(650), float32], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) {
    %403 = cast(%var_4205, dtype="bool") /* ty=Tensor[(9, 12, 3), bool] */;
    %404 = shape_of(%var_4204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %405 = cast(%var_4204, dtype="bool") /* ty=Tensor[(9, 12, 3), bool] */;
    %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %407 = cast(meta[relay.Constant][26] /* ty=Tensor[(1344), int32] */, dtype="int32") /* ty=Tensor[(1344), int32] */;
    %408 = reshape(%407, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
    %409 = @func_2606(%408) /* ty=(Tensor[(6, 15, 7), float32], Tensor[(20, 4), float32], Tensor[(1344), int32], Tensor[(6, 15, 7), float64]) */;
    %410 = cast(meta[relay.Constant][27] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
    %411 = reshape(%410, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
    %412 = @func_2796(%411) /* ty=(Tensor[(10, 5, 13), float32],) */;
    %413 = cast(%var_4226, dtype="float32") /* ty=Tensor[(105), float32] */;
    %414 = reshape(%413, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float32] */;
    %415 = @func_3780(%414) /* ty=(Tensor[(15, 1, 7), float32],) */;
    %416 = equal(%405, %406) /* ty=Tensor[(9, 12, 3), bool] */;
    %417 = %409.3;
    %418 = %412.0;
    %419 = %415.0;
    (%416, %417, meta[relay.Constant][26] /* ty=Tensor[(1344), int32] */, %418, meta[relay.Constant][27] /* ty=Tensor[(650), float32] */, %419, %var_4226)
  };
  %420(%var_4237, %var_4238, %var_4239) /* ty=(Tensor[(9, 12, 3), bool], Tensor[(6, 15, 7), float64], Tensor[(1344), int32], Tensor[(10, 5, 13), float32], Tensor[(650), float32], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */
}

def @func_1409(%var_1407: Tensor[(10, 2, 2), float32]) -> Tensor[(10, 2, 2), float32] {
  @func_1406(%var_1407) /* ty=Tensor[(10, 2, 2), float32] */
}

def @func_6547() -> Tensor[(28, 48), int32] {
  @func_6545() /* ty=Tensor[(28, 48), int32] */
}

def @func_9294() -> (Tensor[(4, 11, 4), float64], Tensor[(28, 48), uint64], Tensor[(105), float32], Tensor[(28, 48), float32], Tensor[(80), float32], Tensor[(1280), float32]) {
  @func_9292() /* ty=(Tensor[(4, 11, 4), float64], Tensor[(28, 48), uint64], Tensor[(105), float32], Tensor[(28, 48), float32], Tensor[(80), float32], Tensor[(1280), float32]) */
}

def @func_1349(%var_1304: Tensor[(14, 8, 12), int32]) -> (Tensor[(8, 2, 5), float32], Tensor[(20, 4), float32], Tensor[(14, 8, 12), bool], Tensor[(14, 8, 12), float64]) {
  %421 = cast(meta[relay.Constant][28] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %422 = reshape(%421, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %423 = @func_12(%422) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %424 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 8, 12), int32] */, dtype="int32") /* ty=Tensor[(14, 8, 12), int32] */;
  %425 = shape_of(%var_1304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%var_1304, dtype="int32") /* ty=Tensor[(14, 8, 12), int32] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %428 = left_shift(%426, %427) /* ty=Tensor[(14, 8, 12), int32] */;
  %429 = cast(meta[relay.Constant][30] /* ty=Tensor[(14, 8, 12), int32] */, dtype="bool") /* ty=Tensor[(14, 8, 12), bool] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="bool") /* ty=Tensor[(14, 8, 12), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %433 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 8, 12), int32] */, dtype="float64") /* ty=Tensor[(14, 8, 12), float64] */;
  %434 = %423.0;
  %435 = logical_or(%431, %432) /* ty=Tensor[(14, 8, 12), bool] */;
  %436 = exp(%433) /* ty=Tensor[(14, 8, 12), float64] */;
  (%434, meta[relay.Constant][28] /* ty=Tensor[(20, 4), float32] */, %435, %436)
}

def @func_6788() -> (Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), int32], Tensor[(176), int8]) {
  %442 = fn () -> (Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), int32], Tensor[(176), int8]) {
    %437 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
    %438 = reshape(%437, newshape=[4, 11, 4]) /* ty=Tensor[(4, 11, 4), int8] */;
    %439 = @func_5139(%438) /* ty=(Tensor[(4, 11, 4), int32], Tensor[(4, 11, 4), float32]) */;
    %440 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
    %441 = %439.0;
    (%440, %441, meta[relay.Constant][31] /* ty=Tensor[(176), int8] */)
  };
  %442() /* ty=(Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), int32], Tensor[(176), int8]) */
}

def @func_10861() -> Tensor[(6, 15, 7), float32] {
  %444 = fn () -> Tensor[(6, 15, 7), float32] {
    %443 = @func_10622() /* ty=(Tensor[(6, 15, 7), float32],) */;
    %443.0
  };
  %444() /* ty=Tensor[(6, 15, 7), float32] */
}

def @func_10828() -> Tensor[(28, 48), int32] {
  @func_9945() /* ty=Tensor[(28, 48), int32] */
}

def @func_8726(%var_8699: Tensor[(1188), float64], %var_8705: Tensor[(40), float32], %var_8707: Tensor[(168), int16]) -> (Tensor[(15, 1, 7), float32], Tensor[(1188), bool], Tensor[(1280), float32], Tensor[(1280), float32], Tensor[(40), float32], Tensor[(2, 1), int16], Tensor[(168), int16], Tensor[(286), float64], Tensor[(15, 1, 7), float32], Tensor[(11, 9, 12), float64]) {
  %445 = cast(meta[relay.Constant][32] /* ty=Tensor[(1188), uint32] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %446 = cos(%445) /* ty=Tensor[(1188), float64] */;
  %447 = cast(%var_8699, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(1), int32] */;
  %449 = cast(%446, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?), bool] */;
  %451 = cast(meta[relay.Constant][33] /* ty=Tensor[(1280), float32] */, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %452 = cast(%var_8705, dtype="float32") /* ty=Tensor[(40), float32] */;
  %453 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 1), int16] */, dtype="int16") /* ty=Tensor[(2, 1), int16] */;
  %454 = cast(%var_8707, dtype="int16") /* ty=Tensor[(168), int16] */;
  %455 = cast(meta[relay.Constant][35] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %456 = reshape(%451, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %457 = reshape(%452, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %458 = reshape(%453, newshape=[2]) /* ty=Tensor[(2), int16] */;
  %459 = reshape(%454, newshape=[168]) /* ty=Tensor[(168), int16] */;
  %460 = reshape(%455, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %461 = @func_7210(%456, %457, %458, %459, %460) /* ty=(Tensor[(28, 48), int32], Tensor[(1188), uint32], Tensor[(1280), float32], Tensor[(176), int8], Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(15, ?, 7), uint16], Tensor[(15, 1, 7), float32], Tensor[(1680), float64], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(168), int16], Tensor[(286), float64]) */;
  %462 = cast(meta[relay.Constant][32] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %463 = reshape(%462, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), uint32] */;
  %464 = @func_1727(%463) /* ty=(Tensor[(11, 9, 12), bool],) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="float64") /* ty=Tensor[(11, 9, 12), float64] */;
  %467 = @func_5724() /* ty=Tensor[(15, 1, 7), float32] */;
  %468 = equal(%449, %450) /* ty=Tensor[(1188), bool] */;
  %469 = %461.2;
  %470 = @func_7867() /* ty=Tensor[(15, 1, 7), float32] */;
  %471 = asinh(%466) /* ty=Tensor[(11, 9, 12), float64] */;
  (%467, %468, %469, meta[relay.Constant][33] /* ty=Tensor[(1280), float32] */, %var_8705, meta[relay.Constant][34] /* ty=Tensor[(2, 1), int16] */, %var_8707, meta[relay.Constant][35] /* ty=Tensor[(286), float64] */, %470, %471)
}

def @func_7631() -> Tensor[(28, 48), float32] {
  %472 = @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */;
  %473 = %472.1;
  %474 = cast(%473, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  atan(%474) /* ty=Tensor[(28, 48), float32] */
}

def @func_8627() -> (Tensor[(176), int8],) {
  %475 = @func_6894() /* ty=(Tensor[(176), int8],) */;
  %476 = %475.0;
  (%476,)
}

def @func_5205(%var_5202: Tensor[(84, 2), int16], %var_5203: Tensor[(286), float64], %var_5204: Tensor[(7, 15), float32]) -> (Tensor[(4, 11, 4), int8], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(84, 2), int16], Tensor[(15, 1, 7), float32], Tensor[(324), int64], Tensor[(7, 15), float32], Tensor[(286), float64]) {
  %497 = fn (%var_5181: Tensor[(84, 2), int16], %var_5182: Tensor[(286), float64], %var_5187: Tensor[(7, 15), float32]) -> (Tensor[(4, 11, 4), int8], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(84, 2), int16], Tensor[(15, 1, 7), float32], Tensor[(324), int64], Tensor[(7, 15), float32], Tensor[(286), float64]) {
    %477 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
    %478 = cast(meta[relay.Constant][36] /* ty=Tensor[(2), int16] */, dtype="int16") /* ty=Tensor[(2), int16] */;
    %479 = cast(%var_5181, dtype="int16") /* ty=Tensor[(84, 2), int16] */;
    %480 = cast(%var_5182, dtype="float64") /* ty=Tensor[(286), float64] */;
    %481 = reshape(%478, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
    %482 = reshape(%479, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
    %483 = reshape(%480, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
    %484 = @func_2306(%481, %482, %483) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
    %485 = cast(meta[relay.Constant][37] /* ty=Tensor[(324), int64] */, dtype="int64") /* ty=Tensor[(324), int64] */;
    %486 = cast(meta[relay.Constant][37] /* ty=Tensor[(324), int64] */, dtype="int64") /* ty=Tensor[(324), int64] */;
    %487 = cast(%var_5187, dtype="float32") /* ty=Tensor[(7, 15), float32] */;
    %488 = reshape(%485, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
    %489 = reshape(%486, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
    %490 = reshape(%487, newshape=[105]) /* ty=Tensor[(105), float32] */;
    %491 = @func_4236(%488, %489, %490) /* ty=(Tensor[(9, 12, 3), bool], Tensor[(6, 15, 7), float64], Tensor[(1344), int32], Tensor[(10, 5, 13), float32], Tensor[(650), float32], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
    %492 = cast(%var_5182, dtype="float64") /* ty=Tensor[(286), float64] */;
    %493 = %477.0;
    %494 = %484.0;
    %495 = %491.5;
    %496 = log2(%492) /* ty=Tensor[(286), float64] */;
    (%493, %494, meta[relay.Constant][36] /* ty=Tensor[(2), int16] */, %var_5181, %495, meta[relay.Constant][37] /* ty=Tensor[(324), int64] */, %var_5187, %496)
  };
  %497(%var_5202, %var_5203, %var_5204) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(84, 2), int16], Tensor[(15, 1, 7), float32], Tensor[(324), int64], Tensor[(7, 15), float32], Tensor[(286), float64]) */
}

def @func_6536(%var_6534: Tensor[(88, 2), int8], %var_6535: Tensor[(1, 168), int16]) -> (Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), uint8], Tensor[(15, 1, 7), float32], Tensor[(88, 2), float64], Tensor[(84, 2), int16], Tensor[(1, 168), int16], Tensor[(26, 11), float64]) {
  %515 = fn (%var_6520: Tensor[(88, 2), int8], %var_6527: Tensor[(1, 168), int16]) -> (Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), uint8], Tensor[(15, 1, 7), float32], Tensor[(88, 2), float64], Tensor[(84, 2), int16], Tensor[(1, 168), int16], Tensor[(26, 11), float64]) {
    %498 = cast(%var_6520, dtype="int8") /* ty=Tensor[(88, 2), int8] */;
    %499 = reshape(%498, newshape=[4, 11, 4]) /* ty=Tensor[(4, 11, 4), int8] */;
    %500 = @func_6068(%499) /* ty=(Tensor[(4, 11, 4), uint8],) */;
    %501 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
    %502 = cast(%var_6520, dtype="float64") /* ty=Tensor[(88, 2), float64] */;
    %503 = cast(%var_6527, dtype="int16") /* ty=Tensor[(1, 168), int16] */;
    %504 = cast(meta[relay.Constant][38] /* ty=Tensor[(26, 11), float64] */, dtype="float64") /* ty=Tensor[(26, 11), float64] */;
    %505 = @func_5724() /* ty=Tensor[(15, 1, 7), float32] */;
    %506 = cast(%505, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
    %507 = reshape(%503, newshape=[84, 2]) /* ty=Tensor[(84, 2), int16] */;
    %508 = reshape(%504, newshape=[286]) /* ty=Tensor[(286), float64] */;
    %509 = reshape(%506, newshape=[7, 15]) /* ty=Tensor[(7, 15), float32] */;
    %510 = @func_5201(%507, %508, %509) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2, 6, 14), float32], Tensor[(2), int16], Tensor[(84, 2), int16], Tensor[(15, 1, 7), float32], Tensor[(324), int64], Tensor[(7, 15), float32], Tensor[(286), float64]) */;
    %511 = %500.0;
    %512 = %501.1;
    %513 = cos(%502) /* ty=Tensor[(88, 2), float64] */;
    %514 = %510.3;
    (%505, %511, %512, %513, %514, %var_6527, meta[relay.Constant][38] /* ty=Tensor[(26, 11), float64] */)
  };
  %515(%var_6534, %var_6535) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(4, 11, 4), uint8], Tensor[(15, 1, 7), float32], Tensor[(88, 2), float64], Tensor[(84, 2), int16], Tensor[(1, 168), int16], Tensor[(26, 11), float64]) */
}

def @func_10042() -> (Tensor[(176), int8], Tensor[(15, 1, 7), float32]) {
  @func_10040() /* ty=(Tensor[(176), int8], Tensor[(15, 1, 7), float32]) */
}

def @func_6261(%var_6260: Tensor[(2, 12, 11), float32]) -> (Tensor[(2, 12, 11), float32],) {
  %518 = fn (%var_6256: Tensor[(2, 12, 11), float32]) -> (Tensor[(2, 12, 11), float32],) {
    %516 = cast(%var_6256, dtype="float32") /* ty=Tensor[(2, 12, 11), float32] */;
    %517 = exp(%516) /* ty=Tensor[(2, 12, 11), float32] */;
    (%517,)
  };
  %518(%var_6260) /* ty=(Tensor[(2, 12, 11), float32],) */
}

def @func_6461(%var_6361: Tensor[(1280), float32], %var_6366: Tensor[(1188), uint32], %var_6405: Tensor[(1188), uint32], %var_6431: Tensor[(1188), uint32], %var_6439: Tensor[(20, 4), float32]) -> (Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(1280), uint8], Tensor[(11, 9, 12), bool], Tensor[(168), int16], Tensor[(15, 1, 7), float32], Tensor[(15, 1, 7), float32], Tensor[(1188), float32], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(286), uint64], Tensor[(1188), bool], Tensor[(20, 4), float64]) {
  %519 = cast(meta[relay.Constant][39] /* ty=Tensor[(1280), float32] */, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %520 = reshape(%519, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %521 = @func_5542(%520) /* ty=(Tensor[(105), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32]) */;
  %522 = cast(%var_6361, dtype="uint8") /* ty=Tensor[(1280), uint8] */;
  %523 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(1280), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %524 = cast(meta[relay.Constant][39] /* ty=Tensor[(1280), float32] */, dtype="uint8") /* ty=Tensor[(1280), uint8] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %526 = cast(%var_6366, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %527 = reshape(%526, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), uint32] */;
  %528 = @func_1727(%527) /* ty=(Tensor[(11, 9, 12), bool],) */;
  %529 = cast(meta[relay.Constant][40] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %530 = reshape(%529, newshape=[26, 11]) /* ty=Tensor[(26, 11), float64] */;
  %531 = @func_5689(%530) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2), int16], Tensor[(168), int16], Tensor[(26, 11), float64], Tensor[(8, 8, 4), float64], Tensor[(4, 11, 4), int32], Tensor[(20, 4), uint16]) */;
  %532 = cast(%var_6405, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %533 = shape_of(%var_6366, dtype="int32") /* ty=Tensor[(1), int32] */;
  %534 = cast(%var_6366, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?), float32] */;
  %536 = cast(meta[relay.Constant][41] /* ty=Tensor[(2), int16] */, dtype="int16") /* ty=Tensor[(2), int16] */;
  %537 = %531.2;
  %538 = cast(%537, dtype="int16") /* ty=Tensor[(168), int16] */;
  %539 = cast(meta[relay.Constant][40] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %540 = reshape(%536, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
  %541 = reshape(%538, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
  %542 = reshape(%539, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
  %543 = @func_2306(%540, %541, %542) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
  %544 = cast(meta[relay.Constant][42] /* ty=Tensor[(286), float64] */, dtype="uint64") /* ty=Tensor[(286), uint64] */;
  %545 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(286), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %546 = cast(meta[relay.Constant][40] /* ty=Tensor[(286), float64] */, dtype="uint64") /* ty=Tensor[(286), uint64] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %548 = cast(%var_6431, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %549 = shape_of(%var_6405, dtype="int32") /* ty=Tensor[(1), int32] */;
  %550 = cast(%var_6405, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?), bool] */;
  %552 = cast(meta[relay.Constant][41] /* ty=Tensor[(2), int16] */, dtype="int16") /* ty=Tensor[(2), int16] */;
  %553 = cast(%537, dtype="int16") /* ty=Tensor[(168), int16] */;
  %554 = cast(meta[relay.Constant][42] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %555 = reshape(%552, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int16] */;
  %556 = reshape(%553, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int16] */;
  %557 = reshape(%554, newshape=[13, 22]) /* ty=Tensor[(13, 22), float64] */;
  %558 = @func_2306(%555, %556, %557) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */;
  %559 = %558.2;
  %560 = cast(%var_6439, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(2), int32] */;
  %562 = cast(%559, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %564 = @func_5641() /* ty=Tensor[(15, 11, 7), bool] */;
  %565 = %521.0;
  %566 = minimum(%524, %525) /* ty=Tensor[(1280), uint8] */;
  %567 = %528.0;
  %568 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  %569 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
  %570 = power(%534, %535) /* ty=Tensor[(1188), float32] */;
  %571 = %543.1;
  %572 = bitwise_and(%546, %547) /* ty=Tensor[(286), uint64] */;
  %573 = logical_and(%550, %551) /* ty=Tensor[(1188), bool] */;
  %574 = floor_divide(%562, %563) /* ty=Tensor[(20, 4), float64] */;
  (%564, %565, %566, %567, %537, %568, %569, %570, %571, meta[relay.Constant][41] /* ty=Tensor[(2), int16] */, %572, %573, %574)
}

def @func_2310(%var_2307: Tensor[(2, 1, 1), int16], %var_2308: Tensor[(2, 6, 14), int16], %var_2309: Tensor[(13, 22), float64]) -> (Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) {
  %594 = fn (%var_2281: Tensor[(2, 1, 1), int16], %var_2282: Tensor[(2, 6, 14), int16], %var_2298: Tensor[(13, 22), float64]) -> (Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) {
    %575 = cast(%var_2281, dtype="bool") /* ty=Tensor[(2, 1, 1), bool] */;
    %576 = cast(%var_2282, dtype="bool") /* ty=Tensor[(2, 6, 14), bool] */;
    %577 = not_equal(%575, %576) /* ty=Tensor[(2, 6, 14), bool] */;
    %578 = cast(%577, dtype="float32") /* ty=Tensor[(2, 6, 14), float32] */;
    %579 = cast(%var_2281, dtype="float32") /* ty=Tensor[(2, 1, 1), float32] */;
    %580 = cast(%var_2298, dtype="float64") /* ty=Tensor[(13, 22), float64] */;
    %581 = cast(%var_2298, dtype="float64") /* ty=Tensor[(13, 22), float64] */;
    %582 = cast(meta[relay.Constant][43] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
    %583 = reshape(%580, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float64] */;
    %584 = reshape(%581, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float64] */;
    %585 = reshape(%582, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %586 = @func_1190(%583, %584, %585) /* ty=(Tensor[(11, 2, 13), float64], Tensor[(8, 2, 5), float32], Tensor[(80), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32]) */;
    %587 = %586.0;
    %588 = cast(meta[relay.Constant][44] /* ty=Tensor[(11, 2, 13), float64] */, dtype="int64") /* ty=Tensor[(11, 2, 13), int64] */;
    %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
    %590 = cast(%587, dtype="int64") /* ty=Tensor[(11, 2, 13), int64] */;
    %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %592 = floor_mod(%578, %579) /* ty=Tensor[(2, 6, 14), float32] */;
    %593 = bitwise_or(%590, %591) /* ty=Tensor[(11, 2, 13), int64] */;
    (%592, %var_2298, meta[relay.Constant][43] /* ty=Tensor[(20, 4), float32] */, %593)
  };
  %594(%var_2307, %var_2308, %var_2309) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(13, 22), float64], Tensor[(20, 4), float32], Tensor[(11, 2, 13), int64]) */
}

def @func_7850() -> (Tensor[(105), float32],) {
  %597 = fn () -> (Tensor[(105), float32],) {
    %595 = @func_5903() /* ty=(Tensor[(105), float32], Tensor[(15, 11, 7), bool]) */;
    %596 = %595.0;
    (%596,)
  };
  %597() /* ty=(Tensor[(105), float32],) */
}

def @func_5542(%var_5523: Tensor[(1280), float32]) -> (Tensor[(105), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32]) {
  %598 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %599 = cast(%var_5523, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %600 = cast(%var_5523, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %601 = reshape(%599, newshape=[16, 16, 5]) /* ty=Tensor[(16, 16, 5), float32] */;
  %602 = reshape(%600, newshape=[16, 16, 5]) /* ty=Tensor[(16, 16, 5), uint64] */;
  %603 = @func_3320(%601, %602) /* ty=(Tensor[(16, 16, 5), bool], Tensor[(16, 16, 5), float32]) */;
  %604 = %598.2;
  %605 = %603.0;
  (%604, %605, %var_5523)
}

def @func_2606(%var_2602: Tensor[(1344), int32]) -> (Tensor[(6, 15, 7), float32], Tensor[(20, 4), float32], Tensor[(1344), int32], Tensor[(6, 15, 7), float64]) {
  %606 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 1, 7), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 7), float32] */;
  %607 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 15, 7), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 7), float32] */;
  %608 = cast(%var_2602, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %609 = reshape(%608, newshape=[14, 8, 12]) /* ty=Tensor[(14, 8, 12), int32] */;
  %610 = @func_1349(%609) /* ty=(Tensor[(8, 2, 5), float32], Tensor[(20, 4), float32], Tensor[(14, 8, 12), bool], Tensor[(14, 8, 12), float64]) */;
  %611 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 15, 7), float32] */, dtype="float64") /* ty=Tensor[(6, 15, 7), float64] */;
  %612 = floor_mod(%606, %607) /* ty=Tensor[(6, 15, 7), float32] */;
  %613 = %610.1;
  %614 = erf(%611) /* ty=Tensor[(6, 15, 7), float64] */;
  (%612, %613, %var_2602, %614)
}

def @func_10318() -> (Tensor[(4, 11, 4), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32], Tensor[(105), float32], Tensor[(28, 48), int32], Tensor[(28, 48), uint64]) {
  %626 = fn () -> (Tensor[(4, 11, 4), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32], Tensor[(105), float32], Tensor[(28, 48), int32], Tensor[(28, 48), uint64]) {
    %615 = @func_7360() /* ty=(Tensor[(4, 11, 4), float32], Tensor[(105), float32]) */;
    %616 = cast(meta[relay.Constant][47] /* ty=Tensor[(1280), float32] */, dtype="float32") /* ty=Tensor[(1280), float32] */;
    %617 = reshape(%616, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
    %618 = @func_5542(%617) /* ty=(Tensor[(105), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32]) */;
    %619 = @func_6508() /* ty=(Tensor[(105), float32],) */;
    %620 = @func_9989() /* ty=(Tensor[(28, 48), uint64],) */;
    %621 = %615.0;
    %622 = %618.1;
    %623 = %619.0;
    %624 = @func_9945() /* ty=Tensor[(28, 48), int32] */;
    %625 = %620.0;
    (%621, %622, meta[relay.Constant][47] /* ty=Tensor[(1280), float32] */, %623, %624, %625)
  };
  %626() /* ty=(Tensor[(4, 11, 4), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32], Tensor[(105), float32], Tensor[(28, 48), int32], Tensor[(28, 48), uint64]) */
}

def @func_7938() -> (Tensor[(105), float32], Tensor[(105), float32], Tensor[(9, 36), int64], Tensor[(9, 12, 3), bool], Tensor[(10, 5, 13), float32], Tensor[(65, 10), float32]) {
  %627 = @func_7849() /* ty=(Tensor[(105), float32],) */;
  %628 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 36), int64] */, dtype="int64") /* ty=Tensor[(9, 36), int64] */;
  %629 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 36), int64] */, dtype="int64") /* ty=Tensor[(9, 36), int64] */;
  %630 = %627.0;
  %631 = cast(%630, dtype="float32") /* ty=Tensor[(105), float32] */;
  %632 = reshape(%628, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
  %633 = reshape(%629, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
  %634 = reshape(%631, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %635 = @func_4236(%632, %633, %634) /* ty=(Tensor[(9, 12, 3), bool], Tensor[(6, 15, 7), float64], Tensor[(1344), int32], Tensor[(10, 5, 13), float32], Tensor[(650), float32], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %636 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 36), int64] */, dtype="int64") /* ty=Tensor[(9, 36), int64] */;
  %637 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 36), int64] */, dtype="int64") /* ty=Tensor[(9, 36), int64] */;
  %638 = %635.6;
  %639 = cast(%638, dtype="float32") /* ty=Tensor[(105), float32] */;
  %640 = reshape(%636, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
  %641 = reshape(%637, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int64] */;
  %642 = reshape(%639, newshape=[105]) /* ty=Tensor[(105), float32] */;
  %643 = @func_4236(%640, %641, %642) /* ty=(Tensor[(9, 12, 3), bool], Tensor[(6, 15, 7), float64], Tensor[(1344), int32], Tensor[(10, 5, 13), float32], Tensor[(650), float32], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %644 = cast(meta[relay.Constant][49] /* ty=Tensor[(65, 10), float32] */, dtype="float32") /* ty=Tensor[(65, 10), float32] */;
  %645 = reshape(%644, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
  %646 = @func_2796(%645) /* ty=(Tensor[(10, 5, 13), float32],) */;
  %647 = %643.0;
  %648 = %646.0;
  (%630, %638, meta[relay.Constant][48] /* ty=Tensor[(9, 36), int64] */, %647, %648, meta[relay.Constant][49] /* ty=Tensor[(65, 10), float32] */)
}

def @func_6674() -> (Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) {
  %649 = @func_6545() /* ty=Tensor[(28, 48), int32] */;
  %650 = cast(meta[relay.Constant][50] /* ty=Tensor[(28, 48), int32] */, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %651 = shape_of(%649, dtype="int32") /* ty=Tensor[(2), int32] */;
  %652 = cast(%649, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %654 = floor_divide(%652, %653) /* ty=Tensor[(28, 48), float32] */;
  %655 = cast(meta[relay.Constant][50] /* ty=Tensor[(28, 48), int32] */, dtype="uint64") /* ty=Tensor[(28, 48), uint64] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(2), int32] */;
  %657 = cast(%654, dtype="uint64") /* ty=Tensor[(28, 48), uint64] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %659 = cast(%649, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
  %660 = rsqrt(%659) /* ty=Tensor[(28, 48), float32] */;
  %661 = cast(meta[relay.Constant][50] /* ty=Tensor[(28, 48), int32] */, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %662 = shape_of(%654, dtype="int32") /* ty=Tensor[(2), int32] */;
  %663 = cast(%654, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %665 = logical_and(%663, %664) /* ty=Tensor[(28, 48), bool] */;
  %666 = cast(%665, dtype="int32") /* ty=Tensor[(28, 48), int32] */;
  %667 = shape_of(%660, dtype="int32") /* ty=Tensor[(2), int32] */;
  %668 = cast(%660, dtype="int32") /* ty=Tensor[(28, 48), int32] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %670 = bitwise_xor(%657, %658) /* ty=Tensor[(28, 48), uint64] */;
  %671 = minimum(%668, %669) /* ty=Tensor[(28, 48), int32] */;
  (%670, %671)
}

def @func_8339() -> Tensor[(28, 48), bool] {
  %682 = fn () -> Tensor[(28, 48), bool] {
    %672 = @func_7745() /* ty=(Tensor[(28, 48), int32],) */;
    %673 = %672.0;
    %674 = cast(%673, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
    %675 = asinh(%674) /* ty=Tensor[(28, 48), float64] */;
    %676 = cast(%673, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
    %677 = erf(%676) /* ty=Tensor[(28, 48), float32] */;
    %678 = cast(%677, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
    %679 = shape_of(%675, dtype="int32") /* ty=Tensor[(2), int32] */;
    %680 = cast(%675, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
    %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    less_equal(%680, %681) /* ty=Tensor[(28, 48), bool] */
  };
  %682() /* ty=Tensor[(28, 48), bool] */
}

def @func_8452() -> (Tensor[(4, 11, 4), int8], Tensor[(28, 48), float32]) {
  %685 = fn () -> (Tensor[(4, 11, 4), int8], Tensor[(28, 48), float32]) {
    %683 = @func_8407() /* ty=Tensor[(4, 11, 4), int8] */;
    %684 = @func_7631() /* ty=Tensor[(28, 48), float32] */;
    (%683, %684)
  };
  %685() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(28, 48), float32]) */
}

def @func_7609() -> Tensor[(28, 48), int32] {
  %687 = fn () -> Tensor[(28, 48), int32] {
    %686 = @func_5803() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(20, 4), float32], Tensor[(28, 48), int32]) */;
    %686.2
  };
  %687() /* ty=Tensor[(28, 48), int32] */
}

def @func_5278() -> Tensor[(15, 1, 7), float32] {
  @func_5276() /* ty=Tensor[(15, 1, 7), float32] */
}

def @func_9627(%var_9624: Tensor[(2028), float64], %var_9625: Tensor[(98, 15), float32], %var_9626: Tensor[(286), float64]) -> (Tensor[(28, 48), int32], Tensor[(286), float64], Tensor[(2028), float64], Tensor[(286), float64], Tensor[(98, 15), float64]) {
  %703 = fn (%var_9575: Tensor[(2028), float64], %var_9576: Tensor[(98, 15), float32], %var_9577: Tensor[(286), float64]) -> (Tensor[(28, 48), int32], Tensor[(286), float64], Tensor[(2028), float64], Tensor[(286), float64], Tensor[(98, 15), float64]) {
    %688 = @func_7255() /* ty=(Tensor[(28, 48), int32],) */;
    %689 = cast(%var_9575, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %690 = cast(%var_9576, dtype="float32") /* ty=Tensor[(98, 15), float32] */;
    %691 = cast(%var_9577, dtype="float64") /* ty=Tensor[(286), float64] */;
    %692 = reshape(%689, newshape=[13, 13, 12]) /* ty=Tensor[(13, 13, 12), float64] */;
    %693 = reshape(%690, newshape=[14, 105]) /* ty=Tensor[(14, 105), float32] */;
    %694 = reshape(%691, newshape=[286]) /* ty=Tensor[(286), float64] */;
    %695 = @func_6965(%692, %693, %694) /* ty=(Tensor[(13, 13, 12), float64], Tensor[(15, 14, 7), bool], Tensor[(1575), float32], Tensor[(14, 105), float32], Tensor[(13, 13, 12), uint32], Tensor[(15, 1, 7), float32], Tensor[(13, 13, 12), bool], Tensor[(80), float32], Tensor[(286), float64], Tensor[(80), float32], Tensor[(13, 13, 12), float32]) */;
    %696 = cast(meta[relay.Constant][51] /* ty=Tensor[(98, 15), float32] */, dtype="float64") /* ty=Tensor[(98, 15), float64] */;
    %697 = shape_of(%var_9576, dtype="int32") /* ty=Tensor[(2), int32] */;
    %698 = cast(%var_9576, dtype="float64") /* ty=Tensor[(98, 15), float64] */;
    %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %700 = %688.0;
    %701 = %695.8;
    %702 = floor_divide(%698, %699) /* ty=Tensor[(98, 15), float64] */;
    (%700, %701, %var_9575, %var_9577, %702)
  };
  %703(%var_9624, %var_9625, %var_9626) /* ty=(Tensor[(28, 48), int32], Tensor[(286), float64], Tensor[(2028), float64], Tensor[(286), float64], Tensor[(98, 15), float64]) */
}

def @func_8577(%var_8533: Tensor[(15, 10, 7), float32]) -> (Tensor[(15, 10, 7), bool], Tensor[(11, 9, 12), bool], Tensor[(1188), uint32], Tensor[(8, 2, 5), float32], Tensor[(80), float32]) {
  %704 = @func_7771() /* ty=(Tensor[(15, 1, 7), float32],) */;
  %705 = %704.0;
  %706 = cast(%705, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %707 = cast(%var_8533, dtype="bool") /* ty=Tensor[(15, 10, 7), bool] */;
  %708 = cast(meta[relay.Constant][52] /* ty=Tensor[(1188), uint32] */, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %709 = reshape(%708, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), uint32] */;
  %710 = @func_1727(%709) /* ty=(Tensor[(11, 9, 12), bool],) */;
  %711 = cast(meta[relay.Constant][53] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %712 = reshape(%711, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %713 = @func_12(%712) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %714 = less_equal(%706, %707) /* ty=Tensor[(15, 10, 7), bool] */;
  %715 = %710.0;
  %716 = %713.0;
  (%714, %715, meta[relay.Constant][52] /* ty=Tensor[(1188), uint32] */, %716, meta[relay.Constant][53] /* ty=Tensor[(80), float32] */)
}

def @func_7360() -> (Tensor[(4, 11, 4), float32], Tensor[(105), float32]) {
  %717 = @func_5400() /* ty=Tensor[(4, 11, 4), int8] */;
  %718 = cast(%717, dtype="float32") /* ty=Tensor[(4, 11, 4), float32] */;
  %719 = @func_6508() /* ty=(Tensor[(105), float32],) */;
  %720 = acos(%718) /* ty=Tensor[(4, 11, 4), float32] */;
  %721 = %719.0;
  (%720, %721)
}

def @main(%var_11088: Tensor[(15, 5, 5), float32], %var_11089: Tensor[(15, 5, 5), float32]) -> Tensor[(15, 5, 5), float32] {
  %722 = cast(%var_11089, dtype="float32") /* ty=Tensor[(15, 5, 5), float32] */;
  %723 = shape_of(%var_11088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%var_11088, dtype="float32") /* ty=Tensor[(15, 5, 5), float32] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%724, %725) /* ty=Tensor[(15, 5, 5), float32] */
}

def @func_3760(%var_3758: Tensor[(2, 5, 6), float64]) -> (Tensor[(2, 5, 6), float64],) {
  @func_3757(%var_3758) /* ty=(Tensor[(2, 5, 6), float64],) */
}

def @func_10830() -> Tensor[(28, 48), int32] {
  @func_10828() /* ty=Tensor[(28, 48), int32] */
}

def @func_10623() -> (Tensor[(6, 15, 7), float32],) {
  %728 = fn () -> (Tensor[(6, 15, 7), float32],) {
    %726 = cast(meta[relay.Constant][54] /* ty=Tensor[(6, 15, 7), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 7), float32] */;
    %727 = log10(%726) /* ty=Tensor[(6, 15, 7), float32] */;
    (%727,)
  };
  %728() /* ty=(Tensor[(6, 15, 7), float32],) */
}

def @func_11010(%var_11000: Tensor[(4, 11, 4), int8]) -> Tensor[(4, 11, 4), int32] {
  %729 = @func_8086() /* ty=(Tensor[(4, 11, 4), int8],) */;
  %730 = %729.0;
  %731 = cast(%var_11000, dtype="int32") /* ty=Tensor[(4, 11, 4), int32] */;
  %732 = shape_of(%730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%730, dtype="int32") /* ty=Tensor[(4, 11, 4), int32] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%733, %734) /* ty=Tensor[(4, 11, 4), int32] */
}

def @func_15(%var_13: Tensor[(8, 2, 5), float32]) -> (Tensor[(8, 2, 5), float32],) {
  @func_12(%var_13) /* ty=(Tensor[(8, 2, 5), float32],) */
}

def @func_9704(%var_9702: Tensor[(6, 28), int16]) -> (Tensor[(28, 48), float32], Tensor[(168), int16], Tensor[(6, 28), int16], Tensor[(15, 1, 7), float32]) {
  @func_9701(%var_9702) /* ty=(Tensor[(28, 48), float32], Tensor[(168), int16], Tensor[(6, 28), int16], Tensor[(15, 1, 7), float32]) */
}

def @func_5355(%var_5353: Tensor[(15, 15, 7), float32], %var_5354: Tensor[(15, 14, 7), float32]) -> (Tensor[(15, 15, 7), bool], Tensor[(15, 14, 7), bool], Tensor[(15, 1, 7), float32]) {
  @func_5351(%var_5353, %var_5354) /* ty=(Tensor[(15, 15, 7), bool], Tensor[(15, 14, 7), bool], Tensor[(15, 1, 7), float32]) */
}

def @func_6468(%var_6463: Tensor[(1280), float32], %var_6464: Tensor[(1188), uint32], %var_6465: Tensor[(1188), uint32], %var_6466: Tensor[(1188), uint32], %var_6467: Tensor[(20, 4), float32]) -> (Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(1280), uint8], Tensor[(11, 9, 12), bool], Tensor[(168), int16], Tensor[(15, 1, 7), float32], Tensor[(15, 1, 7), float32], Tensor[(1188), float32], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(286), uint64], Tensor[(1188), bool], Tensor[(20, 4), float64]) {
  @func_6461(%var_6463, %var_6464, %var_6465, %var_6466, %var_6467) /* ty=(Tensor[(15, 11, 7), bool], Tensor[(105), float32], Tensor[(1280), uint8], Tensor[(11, 9, 12), bool], Tensor[(168), int16], Tensor[(15, 1, 7), float32], Tensor[(15, 1, 7), float32], Tensor[(1188), float32], Tensor[(13, 22), float64], Tensor[(2), int16], Tensor[(286), uint64], Tensor[(1188), bool], Tensor[(20, 4), float64]) */
}

def @func_10985(%var_10953: Tensor[(5, 14, 10), int32]) -> (Tensor[(5, 14, 10), int32],) {
  %735 = cast(%var_10953, dtype="int32") /* ty=Tensor[(5, 14, 10), int32] */;
  %736 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(5, 14, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 14, 10), int32] */, dtype="int32") /* ty=Tensor[(5, 14, 10), int32] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %739 = right_shift(%737, %738) /* ty=Tensor[(5, 14, 10), int32] */;
  (%739,)
}

def @func_9406() -> (Tensor[(15, 1, 7), float32],) {
  %740 = @func_7867() /* ty=Tensor[(15, 1, 7), float32] */;
  (%740,)
}

def @func_9945() -> Tensor[(28, 48), int32] {
  %741 = @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */;
  %741.1
}

def @func_3320(%var_3279: Tensor[(16, 16, 5), float32], %var_3310: Tensor[(16, 16, 5), uint64]) -> (Tensor[(16, 16, 5), bool], Tensor[(16, 16, 5), float32]) {
  %742 = cast(%var_3279, dtype="float32") /* ty=Tensor[(16, 16, 5), float32] */;
  %743 = cosh(%742) /* ty=Tensor[(16, 16, 5), float32] */;
  %744 = cast(%743, dtype="uint64") /* ty=Tensor[(16, 16, 5), uint64] */;
  %745 = shape_of(%var_3279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%var_3279, dtype="uint64") /* ty=Tensor[(16, 16, 5), uint64] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %748 = bitwise_xor(%746, %747) /* ty=Tensor[(16, 16, 5), uint64] */;
  %749 = cast(%var_3310, dtype="bool") /* ty=Tensor[(16, 16, 5), bool] */;
  %750 = shape_of(%748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%748, dtype="bool") /* ty=Tensor[(16, 16, 5), bool] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %753 = cast(%743, dtype="float64") /* ty=Tensor[(16, 16, 5), float64] */;
  %754 = atan(%753) /* ty=Tensor[(16, 16, 5), float64] */;
  %755 = cast(%754, dtype="float32") /* ty=Tensor[(16, 16, 5), float32] */;
  %756 = equal(%751, %752) /* ty=Tensor[(16, 16, 5), bool] */;
  %757 = sigmoid(%755) /* ty=Tensor[(16, 16, 5), float32] */;
  (%756, %757)
}

def @func_9908(%var_9906: Tensor[(13, 2, 8), float64], %var_9907: Tensor[(1, 286), float64]) -> (Tensor[(13, 2, 8), float64], Tensor[(20, 4), uint16], Tensor[(1, 286), float64]) {
  %764 = fn (%var_9877: Tensor[(13, 2, 8), float64], %var_9897: Tensor[(1, 286), float64]) -> (Tensor[(13, 2, 8), float64], Tensor[(20, 4), uint16], Tensor[(1, 286), float64]) {
    %758 = cast(%var_9877, dtype="float64") /* ty=Tensor[(13, 2, 8), float64] */;
    %759 = cast(%var_9897, dtype="float64") /* ty=Tensor[(1, 286), float64] */;
    %760 = reshape(%759, newshape=[26, 11]) /* ty=Tensor[(26, 11), float64] */;
    %761 = @func_5689(%760) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2), int16], Tensor[(168), int16], Tensor[(26, 11), float64], Tensor[(8, 8, 4), float64], Tensor[(4, 11, 4), int32], Tensor[(20, 4), uint16]) */;
    %762 = cosh(%758) /* ty=Tensor[(13, 2, 8), float64] */;
    %763 = %761.6;
    (%762, %763, %var_9897)
  };
  %764(%var_9906, %var_9907) /* ty=(Tensor[(13, 2, 8), float64], Tensor[(20, 4), uint16], Tensor[(1, 286), float64]) */
}

def @func_6293(%var_6282: Tensor[(15, 16, 7), float32]) -> (Tensor[(15, 16, 7), int8], Tensor[(15, ?, 7), uint16]) {
  %765 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %766 = %765.1;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %768 = reshape(%767, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float32] */;
  %769 = @func_3780(%768) /* ty=(Tensor[(15, 1, 7), float32],) */;
  %770 = %769.0;
  %771 = cast(%770, dtype="int8") /* ty=Tensor[(15, 1, 7), int8] */;
  %772 = cast(%var_6282, dtype="int8") /* ty=Tensor[(15, 16, 7), int8] */;
  %773 = cast(%770, dtype="uint16") /* ty=Tensor[(15, 1, 7), uint16] */;
  %774 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%766, dtype="uint16") /* ty=Tensor[(15, 1, 7), uint16] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %777 = bitwise_or(%771, %772) /* ty=Tensor[(15, 16, 7), int8] */;
  %778 = right_shift(%775, %776) /* ty=Tensor[(15, ?, 7), uint16] */;
  (%777, %778)
}

def @func_9459() -> (Tensor[(28, 48), float64], Tensor[(20, 4), uint16], Tensor[(286, 1), float64]) {
  %789 = fn () -> (Tensor[(28, 48), float64], Tensor[(20, 4), uint16], Tensor[(286, 1), float64]) {
    %779 = @func_7745() /* ty=(Tensor[(28, 48), int32],) */;
    %780 = %779.0;
    %781 = cast(%780, dtype="float32") /* ty=Tensor[(28, 48), float32] */;
    %782 = cosh(%781) /* ty=Tensor[(28, 48), float32] */;
    %783 = cast(%782, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
    %784 = cast(meta[relay.Constant][56] /* ty=Tensor[(286, 1), float64] */, dtype="float64") /* ty=Tensor[(286, 1), float64] */;
    %785 = reshape(%784, newshape=[26, 11]) /* ty=Tensor[(26, 11), float64] */;
    %786 = @func_5689(%785) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(2), int16], Tensor[(168), int16], Tensor[(26, 11), float64], Tensor[(8, 8, 4), float64], Tensor[(4, 11, 4), int32], Tensor[(20, 4), uint16]) */;
    %787 = cos(%783) /* ty=Tensor[(28, 48), float64] */;
    %788 = %786.6;
    (%787, %788, meta[relay.Constant][56] /* ty=Tensor[(286, 1), float64] */)
  };
  %789() /* ty=(Tensor[(28, 48), float64], Tensor[(20, 4), uint16], Tensor[(286, 1), float64]) */
}

def @func_10573(%var_10571: Tensor[(945), float32], %var_10572: Tensor[(1, 80), float32]) -> (Tensor[(176), int8], Tensor[(176), int8], Tensor[(176), int8], Tensor[(4, 11, 4), int8], Tensor[(8, 2, 5), float32], Tensor[(1, 80), float32], Tensor[(28, 48), int32], Tensor[(28, 48), bool], Tensor[(28, 48), float32], Tensor[(945), uint32]) {
  @func_10569(%var_10571, %var_10572) /* ty=(Tensor[(176), int8], Tensor[(176), int8], Tensor[(176), int8], Tensor[(4, 11, 4), int8], Tensor[(8, 2, 5), float32], Tensor[(1, 80), float32], Tensor[(28, 48), int32], Tensor[(28, 48), bool], Tensor[(28, 48), float32], Tensor[(945), uint32]) */
}

def @func_9989() -> (Tensor[(28, 48), uint64],) {
  %790 = @func_7702() /* ty=Tensor[(28, 48), uint64] */;
  (%790,)
}

def @func_7255() -> (Tensor[(28, 48), int32],) {
  %791 = @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */;
  %792 = %791.1;
  (%792,)
}

def @func_5545(%var_5543: Tensor[(1280), float32]) -> (Tensor[(105), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32]) {
  @func_5542(%var_5543) /* ty=(Tensor[(105), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32]) */
}

def @func_10771(%var_10742: Tensor[(2028), float64], %var_10744: Tensor[(286), float64]) -> (Tensor[(105), float32], Tensor[(15, 1, 7), float32], Tensor[(2028), float64], Tensor[(1470), float32], Tensor[(286), float64], Tensor[(28, 48), int32]) {
  %793 = @func_6508() /* ty=(Tensor[(105), float32],) */;
  %794 = cast(%var_10742, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %795 = cast(meta[relay.Constant][57] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %796 = cast(%var_10744, dtype="float64") /* ty=Tensor[(286), float64] */;
  %797 = reshape(%794, newshape=[13, 13, 12]) /* ty=Tensor[(13, 13, 12), float64] */;
  %798 = reshape(%795, newshape=[14, 105]) /* ty=Tensor[(14, 105), float32] */;
  %799 = reshape(%796, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %800 = @func_6965(%797, %798, %799) /* ty=(Tensor[(13, 13, 12), float64], Tensor[(15, 14, 7), bool], Tensor[(1575), float32], Tensor[(14, 105), float32], Tensor[(13, 13, 12), uint32], Tensor[(15, 1, 7), float32], Tensor[(13, 13, 12), bool], Tensor[(80), float32], Tensor[(286), float64], Tensor[(80), float32], Tensor[(13, 13, 12), float32]) */;
  %801 = @func_10317() /* ty=(Tensor[(4, 11, 4), float32], Tensor[(16, 16, 5), bool], Tensor[(1280), float32], Tensor[(105), float32], Tensor[(28, 48), int32], Tensor[(28, 48), uint64]) */;
  %802 = %793.0;
  %803 = %800.5;
  %804 = %801.4;
  (%802, %803, %var_10742, meta[relay.Constant][57] /* ty=Tensor[(1470), float32] */, %var_10744, %804)
}

def @func_7874() -> Tensor[(4, 11, 4), int8] {
  @func_5400() /* ty=Tensor[(4, 11, 4), int8] */
}

def @func_5276() -> Tensor[(15, 1, 7), float32] {
  %805 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
  %805.1
}

def @func_9782(%var_9739: Tensor[(15, 9, 7), float32]) -> (Tensor[(4, 11, 4), int8], Tensor[(15, 9, 7), bool]) {
  %806 = @func_9126() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(28, 48), int32]) */;
  %807 = @func_5724() /* ty=Tensor[(15, 1, 7), float32] */;
  %808 = cast(%807, dtype="float64") /* ty=Tensor[(15, 1, 7), float64] */;
  %809 = cast(%var_9739, dtype="float64") /* ty=Tensor[(15, 9, 7), float64] */;
  %810 = power(%808, %809) /* ty=Tensor[(15, 9, 7), float64] */;
  %811 = cast(%810, dtype="bool") /* ty=Tensor[(15, 9, 7), bool] */;
  %812 = cast(%807, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %813 = %806.0;
  %814 = not_equal(%811, %812) /* ty=Tensor[(15, 9, 7), bool] */;
  (%813, %814)
}

def @func_8958() -> (Tensor[(28, 48), float64], Tensor[(4, 11, 4), float64], Tensor[(80), float32], Tensor[(1470), float32]) {
  %815 = @func_7608() /* ty=Tensor[(28, 48), int32] */;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %817 = asin(%816) /* ty=Tensor[(28, 48), float64] */;
  %818 = cast(%815, dtype="int8") /* ty=Tensor[(28, 48), int8] */;
  %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(2), int32] */;
  %820 = cast(%817, dtype="int8") /* ty=Tensor[(28, 48), int8] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %822 = right_shift(%820, %821) /* ty=Tensor[(28, 48), int8] */;
  %823 = cast(%822, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %824 = shape_of(%815, dtype="int32") /* ty=Tensor[(2), int32] */;
  %825 = cast(%815, dtype="float64") /* ty=Tensor[(28, 48), float64] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %827 = floor_mod(%825, %826) /* ty=Tensor[(28, 48), float64] */;
  %828 = cast(%827, dtype="bool") /* ty=Tensor[(28, 48), bool] */;
  %829 = cast(meta[relay.Constant][58] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %830 = cast(meta[relay.Constant][59] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %831 = reshape(%828, newshape=[28, 48]) /* ty=Tensor[(28, 48), bool] */;
  %832 = reshape(%829, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %833 = reshape(%830, newshape=[1, 1470]) /* ty=Tensor[(1, 1470), float32] */;
  %834 = @func_8851(%831, %832, %833) /* ty=(Tensor[(176), int8], Tensor[(80), float32], Tensor[(80), float32], Tensor[(4, 11, 4), float64], Tensor[(28, 48), int8], Tensor[(286), float64], Tensor[(2028), float64], Tensor[(1, 1470), float32], Tensor[(286, 1), float64]) */;
  %835 = %834.3;
  (%827, %835, meta[relay.Constant][58] /* ty=Tensor[(80), float32] */, meta[relay.Constant][59] /* ty=Tensor[(1470), float32] */)
}

def @func_5805() -> (Tensor[(4, 11, 4), int8], Tensor[(20, 4), float32], Tensor[(28, 48), int32]) {
  @func_5803() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(20, 4), float32], Tensor[(28, 48), int32]) */
}

def @func_9408() -> (Tensor[(15, 1, 7), float32],) {
  @func_9406() /* ty=(Tensor[(15, 1, 7), float32],) */
}

def @func_2993(%var_2983: uint32, %var_2984: Tensor[(3, 4, 1), uint32]) -> Tensor[(3, 4, 1), uint32] {
  %836 = cast(%var_2983, dtype="uint32") /* ty=uint32 */;
  %837 = cast(%var_2984, dtype="uint32") /* ty=Tensor[(3, 4, 1), uint32] */;
  maximum(%836, %837) /* ty=Tensor[(3, 4, 1), uint32] */
}

def @func_6676() -> (Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) {
  @func_6674() /* ty=(Tensor[(28, 48), uint64], Tensor[(28, 48), int32]) */
}

def @func_8249() -> (Tensor[(15, 1, 7), float32], Tensor[(105), float32], Tensor[(28, 48), int32]) {
  %838 = @func_6508() /* ty=(Tensor[(105), float32],) */;
  %839 = @func_7745() /* ty=(Tensor[(28, 48), int32],) */;
  %840 = @func_7542() /* ty=Tensor[(15, 1, 7), float32] */;
  %841 = %838.0;
  %842 = %839.0;
  (%840, %841, %842)
}

def @func_9841() -> (Tensor[(28, 48), float32],) {
  @func_9839() /* ty=(Tensor[(28, 48), float32],) */
}

def @func_7487(%var_7485: Tensor[(4, 11, 4), int8]) -> Tensor[(4, 11, 4), bool] {
  @func_7484(%var_7485) /* ty=Tensor[(4, 11, 4), bool] */
}

def @func_8629() -> (Tensor[(176), int8],) {
  @func_8627() /* ty=(Tensor[(176), int8],) */
}

def @func_6601(%var_6599: Tensor[(1280), float32], %var_6600: Tensor[(4, 11, 4), int8]) -> (Tensor[(168), int16], Tensor[(1280), float32], Tensor[(1188), uint32], Tensor[(80), float32], Tensor[(4, 11, 4), bool]) {
  @func_6597(%var_6599, %var_6600) /* ty=(Tensor[(168), int16], Tensor[(1280), float32], Tensor[(1188), uint32], Tensor[(80), float32], Tensor[(4, 11, 4), bool]) */
}

def @func_1195(%var_1192: Tensor[(11, 2, 13), float64], %var_1193: Tensor[(11, 2, 13), float64], %var_1194: Tensor[(80), float32]) -> (Tensor[(11, 2, 13), float64], Tensor[(8, 2, 5), float32], Tensor[(80), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32]) {
  @func_1190(%var_1192, %var_1193, %var_1194) /* ty=(Tensor[(11, 2, 13), float64], Tensor[(8, 2, 5), float32], Tensor[(80), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32]) */
}

def @func_8088() -> (Tensor[(4, 11, 4), int8],) {
  @func_8086() /* ty=(Tensor[(4, 11, 4), int8],) */
}

def @func_11013(%var_11011: Tensor[(4, 11, 4), int8]) -> Tensor[(4, 11, 4), int32] {
  @func_11010(%var_11011) /* ty=Tensor[(4, 11, 4), int32] */
}

def @func_9501() -> (Tensor[(28, 48), int32],) {
  %845 = fn () -> (Tensor[(28, 48), int32],) {
    %843 = @func_8987() /* ty=(Tensor[(176), int8], Tensor[(28, 48), int32]) */;
    %844 = %843.1;
    (%844,)
  };
  %845() /* ty=(Tensor[(28, 48), int32],) */
}

def @func_7940() -> (Tensor[(105), float32], Tensor[(105), float32], Tensor[(9, 36), int64], Tensor[(9, 12, 3), bool], Tensor[(10, 5, 13), float32], Tensor[(65, 10), float32]) {
  @func_7938() /* ty=(Tensor[(105), float32], Tensor[(105), float32], Tensor[(9, 36), int64], Tensor[(9, 12, 3), bool], Tensor[(10, 5, 13), float32], Tensor[(65, 10), float32]) */
}

def @func_7104() -> Tensor[(28, 48), uint64] {
  @func_7102() /* ty=Tensor[(28, 48), uint64] */
}

def @func_10815() -> (Tensor[(15, 1, 7), float32],) {
  %847 = fn () -> (Tensor[(15, 1, 7), float32],) {
    %846 = @func_7542() /* ty=Tensor[(15, 1, 7), float32] */;
    (%846,)
  };
  %847() /* ty=(Tensor[(15, 1, 7), float32],) */
}

def @func_5064() -> (Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) {
  @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */
}

def @func_6509() -> (Tensor[(105), float32],) {
  %850 = fn () -> (Tensor[(105), float32],) {
    %848 = @func_5062() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 1, 7), float32], Tensor[(105), float32]) */;
    %849 = %848.2;
    (%849,)
  };
  %850() /* ty=(Tensor[(105), float32],) */
}

def @func_9947() -> Tensor[(28, 48), int32] {
  @func_9945() /* ty=Tensor[(28, 48), int32] */
}

def @func_7869() -> Tensor[(15, 1, 7), float32] {
  @func_7867() /* ty=Tensor[(15, 1, 7), float32] */
}

def @func_10569(%var_10516: Tensor[(945), float32], %var_10530: Tensor[(1, 80), float32]) -> (Tensor[(176), int8], Tensor[(176), int8], Tensor[(176), int8], Tensor[(4, 11, 4), int8], Tensor[(8, 2, 5), float32], Tensor[(1, 80), float32], Tensor[(28, 48), int32], Tensor[(28, 48), bool], Tensor[(28, 48), float32], Tensor[(945), uint32]) {
  %851 = @func_6894() /* ty=(Tensor[(176), int8],) */;
  %852 = @func_8627() /* ty=(Tensor[(176), int8],) */;
  %853 = @func_6894() /* ty=(Tensor[(176), int8],) */;
  %854 = cast(%var_10516, dtype="float32") /* ty=Tensor[(945), float32] */;
  %855 = reshape(%854, newshape=[15, 9, 7]) /* ty=Tensor[(15, 9, 7), float32] */;
  %856 = @func_9782(%855) /* ty=(Tensor[(4, 11, 4), int8], Tensor[(15, 9, 7), bool]) */;
  %857 = cast(%var_10530, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %858 = reshape(%857, newshape=[8, 2, 5]) /* ty=Tensor[(8, 2, 5), float32] */;
  %859 = @func_12(%858) /* ty=(Tensor[(8, 2, 5), float32],) */;
  %860 = cast(%var_10530, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %861 = reshape(%860, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %862 = @func_7074(%861) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(80), float32], Tensor[(28, 48), bool]) */;
  %863 = @func_8451() /* ty=(Tensor[(4, 11, 4), int8], Tensor[(28, 48), float32]) */;
  %864 = cast(%var_10516, dtype="float64") /* ty=Tensor[(945), float64] */;
  %865 = atan(%864) /* ty=Tensor[(945), float64] */;
  %866 = cast(%var_10516, dtype="uint32") /* ty=Tensor[(945), uint32] */;
  %867 = shape_of(%865, dtype="int32") /* ty=Tensor[(1), int32] */;
  %868 = cast(%865, dtype="uint32") /* ty=Tensor[(945), uint32] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %870 = %851.0;
  %871 = %852.0;
  %872 = %853.0;
  %873 = %856.0;
  %874 = %859.0;
  %875 = @func_7608() /* ty=Tensor[(28, 48), int32] */;
  %876 = %862.2;
  %877 = %863.1;
  %878 = bitwise_xor(%868, %869) /* ty=Tensor[(945), uint32] */;
  (%870, %871, %872, %873, %874, %var_10530, %875, %876, %877, %878)
}

def @func_6969(%var_6966: Tensor[(13, 13, 12), float64], %var_6967: Tensor[(14, 105), float32], %var_6968: Tensor[(286), float64]) -> (Tensor[(13, 13, 12), float64], Tensor[(15, 14, 7), bool], Tensor[(1575), float32], Tensor[(14, 105), float32], Tensor[(13, 13, 12), uint32], Tensor[(15, 1, 7), float32], Tensor[(13, 13, 12), bool], Tensor[(80), float32], Tensor[(286), float64], Tensor[(80), float32], Tensor[(13, 13, 12), float32]) {
  %911 = fn (%var_6916: Tensor[(13, 13, 12), float64], %var_6922: Tensor[(14, 105), float32], %var_6956: Tensor[(286), float64]) -> (Tensor[(13, 13, 12), float64], Tensor[(15, 14, 7), bool], Tensor[(1575), float32], Tensor[(14, 105), float32], Tensor[(13, 13, 12), uint32], Tensor[(15, 1, 7), float32], Tensor[(13, 13, 12), bool], Tensor[(80), float32], Tensor[(286), float64], Tensor[(80), float32], Tensor[(13, 13, 12), float32]) {
    %879 = cast(%var_6916, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
    %880 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(13, 13, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %881 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
    %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %883 = cast(meta[relay.Constant][61] /* ty=Tensor[(1575), float32] */, dtype="float32") /* ty=Tensor[(1575), float32] */;
    %884 = cast(%var_6922, dtype="float32") /* ty=Tensor[(14, 105), float32] */;
    %885 = reshape(%883, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), float32] */;
    %886 = reshape(%884, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), float32] */;
    %887 = @func_5351(%885, %886) /* ty=(Tensor[(15, 15, 7), bool], Tensor[(15, 14, 7), bool], Tensor[(15, 1, 7), float32]) */;
    %888 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 13, 12), float64] */, dtype="uint32") /* ty=Tensor[(13, 13, 12), uint32] */;
    %889 = shape_of(%var_6916, dtype="int32") /* ty=Tensor[(3), int32] */;
    %890 = cast(%var_6916, dtype="uint32") /* ty=Tensor[(13, 13, 12), uint32] */;
    %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %892 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 13, 12), float64] */, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
    %893 = shape_of(%var_6916, dtype="int32") /* ty=Tensor[(3), int32] */;
    %894 = cast(%var_6916, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %896 = cast(%var_6956, dtype="float64") /* ty=Tensor[(286), float64] */;
    %897 = cast(%var_6956, dtype="float64") /* ty=Tensor[(286), float64] */;
    %898 = cast(meta[relay.Constant][62] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %899 = reshape(%896, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float64] */;
    %900 = reshape(%897, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float64] */;
    %901 = reshape(%898, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %902 = @func_1190(%899, %900, %901) /* ty=(Tensor[(11, 2, 13), float64], Tensor[(8, 2, 5), float32], Tensor[(80), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32], Tensor[(8, 2, 5), float32]) */;
    %903 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 13, 12), float64] */, dtype="float32") /* ty=Tensor[(13, 13, 12), float32] */;
    %904 = power(%881, %882) /* ty=Tensor[(13, 13, 12), float64] */;
    %905 = %887.1;
    %906 = bitwise_or(%890, %891) /* ty=Tensor[(13, 13, 12), uint32] */;
    %907 = @func_5276() /* ty=Tensor[(15, 1, 7), float32] */;
    %908 = less_equal(%894, %895) /* ty=Tensor[(13, 13, 12), bool] */;
    %909 = %902.2;
    %910 = sigmoid(%903) /* ty=Tensor[(13, 13, 12), float32] */;
    (%904, %905, meta[relay.Constant][61] /* ty=Tensor[(1575), float32] */, %var_6922, %906, %907, %908, %909, %var_6956, meta[relay.Constant][62] /* ty=Tensor[(80), float32] */, %910)
  };
  %911(%var_6966, %var_6967, %var_6968) /* ty=(Tensor[(13, 13, 12), float64], Tensor[(15, 14, 7), bool], Tensor[(1575), float32], Tensor[(14, 105), float32], Tensor[(13, 13, 12), uint32], Tensor[(15, 1, 7), float32], Tensor[(13, 13, 12), bool], Tensor[(80), float32], Tensor[(286), float64], Tensor[(80), float32], Tensor[(13, 13, 12), float32]) */
}

def @func_6071(%var_6069: Tensor[(4, 11, 4), int8]) -> (Tensor[(4, 11, 4), uint8],) {
  @func_6068(%var_6069) /* ty=(Tensor[(4, 11, 4), uint8],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen648/build/output.py:2308: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen648/build/output.py", line 2313, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(375) tvmgen_default_fused_reshape_mod_kernel0(float* __restrict__ T_mod, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_mod[(((int)threadIdx.x))] = fmodf(placeholder[(((int)threadIdx.x))], placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


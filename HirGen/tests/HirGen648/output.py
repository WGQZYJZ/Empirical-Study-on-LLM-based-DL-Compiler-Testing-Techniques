import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_0 = relay.var("var_0", dtype = "float32", shape = (8, 2, 5))#candidate|0|(8, 2, 5)|var|float32
uop_1 = relay.rsqrt(var_0.astype('float32')) # shape=(8, 2, 5)
output = relay.Tuple([uop_1,])
output2 = relay.Tuple([uop_1,])
func_12 = relay.Function([var_0,], output)
mod['func_12'] = func_12
mod = relay.transform.InferType()(mod)
mutated_mod['func_12'] = func_12
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13 = relay.var("var_13", dtype = "float32", shape = (8, 2, 5))#candidate|13|(8, 2, 5)|var|float32
func_12_call = mutated_mod.get_global_var('func_12')
call_14 = func_12_call(var_13)
output = call_14
func_15 = relay.Function([var_13], output)
mutated_mod['func_15'] = func_15
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1145 = relay.var("var_1145", dtype = "float64", shape = (11, 2, 13))#candidate|1145|(11, 2, 13)|var|float64
var_1146 = relay.var("var_1146", dtype = "float64", shape = (11, 2, 13))#candidate|1146|(11, 2, 13)|var|float64
bop_1147 = relay.floor_mod(var_1145.astype('float64'), relay.reshape(var_1146.astype('float64'), relay.shape_of(var_1145))) # shape=(11, 2, 13)
func_12_call = mod.get_global_var('func_12')
func_15_call = mutated_mod.get_global_var('func_15')
var_1154 = relay.var("var_1154", dtype = "float32", shape = (80,))#candidate|1154|(80,)|var|float32
call_1153 = relay.TupleGetItem(func_12_call(relay.reshape(var_1154.astype('float32'), [8, 2, 5])), 0)
call_1155 = relay.TupleGetItem(func_15_call(relay.reshape(var_1154.astype('float32'), [8, 2, 5])), 0)
func_12_call = mod.get_global_var('func_12')
func_15_call = mutated_mod.get_global_var('func_15')
call_1160 = relay.TupleGetItem(func_12_call(relay.reshape(call_1153.astype('float32'), [8, 2, 5])), 0)
call_1161 = relay.TupleGetItem(func_15_call(relay.reshape(call_1153.astype('float32'), [8, 2, 5])), 0)
func_12_call = mod.get_global_var('func_12')
func_15_call = mutated_mod.get_global_var('func_15')
call_1173 = relay.TupleGetItem(func_12_call(relay.reshape(call_1160.astype('float32'), [8, 2, 5])), 0)
call_1174 = relay.TupleGetItem(func_15_call(relay.reshape(call_1160.astype('float32'), [8, 2, 5])), 0)
func_12_call = mod.get_global_var('func_12')
func_15_call = mutated_mod.get_global_var('func_15')
call_1184 = relay.TupleGetItem(func_12_call(relay.reshape(call_1173.astype('float32'), [8, 2, 5])), 0)
call_1185 = relay.TupleGetItem(func_15_call(relay.reshape(call_1173.astype('float32'), [8, 2, 5])), 0)
output = relay.Tuple([bop_1147,call_1153,var_1154,call_1160,call_1173,call_1184,])
output2 = relay.Tuple([bop_1147,call_1155,var_1154,call_1161,call_1174,call_1185,])
func_1190 = relay.Function([var_1145,var_1146,var_1154,], output)
mod['func_1190'] = func_1190
mod = relay.transform.InferType()(mod)
mutated_mod['func_1190'] = func_1190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1190_call = mutated_mod.get_global_var('func_1190')
var_1192 = relay.var("var_1192", dtype = "float64", shape = (11, 2, 13))#candidate|1192|(11, 2, 13)|var|float64
var_1193 = relay.var("var_1193", dtype = "float64", shape = (11, 2, 13))#candidate|1193|(11, 2, 13)|var|float64
var_1194 = relay.var("var_1194", dtype = "float32", shape = (80,))#candidate|1194|(80,)|var|float32
call_1191 = func_1190_call(var_1192,var_1193,var_1194,)
output = call_1191
func_1195 = relay.Function([var_1192,var_1193,var_1194,], output)
mutated_mod['func_1195'] = func_1195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1304 = relay.var("var_1304", dtype = "int32", shape = (14, 8, 12))#candidate|1304|(14, 8, 12)|var|int32
const_1305 = relay.const([[[-3,-7,-3,8,3,9,3,-9,6,-5,2,-1],[-5,-9,9,4,-4,-10,5,-10,2,-10,-1,2],[-9,-10,-10,-9,7,9,-3,-9,-3,1,7,-10],[-1,1,-9,1,-9,-1,9,3,10,-3,6,-10],[-1,9,-10,-8,-9,-5,2,-8,-5,10,-1,-4],[-9,-5,-1,4,-4,1,-3,-7,7,-1,-5,2],[10,-6,6,-3,8,-10,1,-2,-8,-10,-3,-3],[8,1,-5,-3,-6,-7,10,-7,-5,7,10,10]],[[-2,9,7,8,-8,-9,4,1,3,-10,7,3],[-4,-8,10,4,-8,9,-5,-1,6,9,1,7],[7,9,7,-3,-2,7,1,-4,-4,-6,-10,3],[4,5,1,1,1,1,-2,1,7,6,9,7],[-4,2,10,9,9,-1,-8,-10,2,7,6,-8],[3,-1,3,-6,2,3,3,-6,-8,3,-1,2],[-4,9,-6,3,2,-2,3,-4,-5,-7,-10,1],[3,-1,8,-10,-4,-2,-10,10,10,-9,-1,10]],[[-1,-6,-1,9,2,-8,7,3,-7,-2,10,10],[-5,5,-3,3,1,7,6,-5,5,-9,1,4],[6,8,-7,8,-7,-1,9,6,-3,3,6,8],[-3,-6,10,6,-7,6,1,7,8,-8,-1,-6],[-5,4,6,7,-2,6,4,-9,-6,-4,-10,7],[-10,-6,9,-7,-10,-10,-4,8,9,-9,-5,3],[-5,8,-1,-7,10,-1,-5,7,-9,2,3,3],[-3,6,-3,9,9,5,-2,8,6,-5,10,-8]],[[7,4,1,4,10,-2,-3,10,8,-10,10,6],[-1,-8,-1,10,6,9,-3,-1,-5,7,4,7],[-5,-6,-9,10,3,1,-4,-3,-8,10,-7,8],[6,9,-3,5,5,2,4,-6,-9,3,9,-8],[8,10,-8,7,-2,-5,-5,2,2,6,5,4],[-8,-1,-3,-5,6,-8,2,8,4,-10,4,10],[7,1,-9,-7,-4,-5,-7,1,4,8,9,-3],[-3,-3,-8,-2,-9,8,-10,5,3,-2,-8,6]],[[4,-1,1,-5,8,1,9,2,8,5,3,3],[-10,10,10,4,-9,-5,1,-7,8,-7,-1,4],[-7,9,-1,-9,7,-8,5,-9,7,7,5,-6],[-3,-9,-2,-6,-4,-10,-7,-3,-10,1,5,2],[-5,-9,-4,-3,-10,3,-7,-2,4,-5,4,-5],[-1,10,6,7,10,4,-2,10,3,-5,-2,1],[-2,-7,6,-1,-8,-2,-2,8,6,-5,-10,10],[10,-4,-6,-10,-1,5,9,-6,-8,1,-9,1]],[[10,-4,2,-6,1,5,-4,6,-10,-5,-10,5],[-9,-7,5,4,3,-8,1,-7,5,-2,7,-6],[-2,7,2,-9,8,9,-5,1,-8,2,4,-4],[1,7,3,-4,-4,6,-3,-7,2,-6,-9,-4],[9,-8,7,-3,-7,8,-4,6,5,6,-6,3],[-10,-6,8,-10,8,-10,-2,-5,3,-3,-10,-7],[-1,-5,7,-9,-6,8,5,-1,-9,-7,-3,-2],[-10,5,5,2,-4,-5,4,-8,8,-6,-7,3]],[[-7,-7,-7,-9,5,4,6,8,-7,-3,-8,3],[10,-7,6,10,-2,-6,-7,5,-8,4,7,8],[-4,4,1,-7,7,-7,-4,6,4,-7,4,-5],[-3,10,8,5,-6,-5,8,-9,6,8,3,-9],[4,7,10,-2,-10,6,-10,-1,1,7,-8,4],[2,-5,6,1,-10,9,10,-2,6,8,8,-4],[7,-10,-8,10,-8,3,7,-5,-2,-4,8,3],[-5,-1,2,3,7,-6,-8,4,-9,2,-1,-2]],[[1,-5,5,6,1,-4,5,4,-1,-6,7,4],[7,4,3,10,4,-5,-5,7,-8,-1,-8,-4],[5,7,2,-2,7,6,1,-6,-1,-2,-3,10],[-1,4,-6,-8,10,7,-9,8,4,-8,8,-8],[6,-5,10,-10,-8,10,-3,-7,6,-3,-2,10],[5,-10,3,-3,-7,-8,6,8,2,-8,-10,8],[-8,10,-3,5,-10,2,3,2,6,9,-8,3],[-8,-7,-3,-2,-5,2,-3,-6,4,-6,-5,-6]],[[-8,10,3,8,-2,10,9,10,-6,-3,-1,-4],[9,1,8,-3,-4,2,6,-1,-6,-8,4,-2],[10,1,-6,-6,5,-9,7,-9,4,-8,-5,1],[-1,8,-6,-6,-8,10,4,-9,5,1,-9,-3],[-6,-3,2,-2,-2,-8,1,-7,-3,-2,-6,3],[6,-5,6,8,-9,-3,-5,-3,7,7,5,6],[-2,-2,-9,2,-3,-2,5,3,3,4,-2,6],[10,7,9,3,4,-2,4,-10,-2,-6,-4,-10]],[[6,6,-3,-5,-6,-10,6,8,3,-4,-5,4],[1,-4,-10,4,8,-3,-10,6,1,-5,-1,10],[5,9,-10,-7,4,6,6,9,7,9,-2,-7],[10,3,-3,3,7,-9,-6,6,10,5,9,3],[6,3,-6,-3,2,-10,-7,4,7,-10,10,5],[5,9,4,2,-2,9,7,6,8,-4,-1,10],[2,2,-6,-5,7,-7,-3,-2,-3,-7,-5,-10],[9,7,-2,7,-6,9,8,-5,7,-5,-10,-7]],[[9,3,-7,4,-9,-7,1,7,4,9,2,-6],[-5,-7,-9,-8,-8,-10,-6,-2,-9,-5,2,-8],[-10,8,-3,8,5,-3,-4,1,-3,-9,-9,-1],[-10,9,-10,8,-3,1,9,4,-9,-8,-7,4],[-2,-7,2,9,6,-3,2,8,10,-1,-1,2],[-1,10,9,-6,-7,-2,-2,-2,-9,-7,-8,8],[4,-6,-6,4,1,5,-10,-3,-5,7,-7,8],[-5,7,-1,1,4,-2,-6,-8,-2,8,-6,-10]],[[-7,-2,7,-10,-6,4,-10,3,-2,6,1,6],[-9,-7,7,-7,4,9,-9,4,4,5,4,-9],[2,6,-1,7,9,6,1,10,-5,9,-6,1],[2,5,3,2,-1,-9,3,2,-1,-7,2,-10],[-4,10,1,-9,5,-8,-10,-4,-9,3,10,-5],[2,5,-9,10,5,5,-9,-8,-10,5,-7,9],[3,-9,7,-7,-5,-2,7,-8,-2,-8,-7,9],[5,5,4,-9,8,-3,-1,6,3,10,2,4]],[[-1,6,1,5,-1,9,6,4,7,3,-10,-5],[6,4,-5,3,3,4,-5,1,9,1,9,3],[7,-5,2,-9,-7,-8,3,6,1,1,9,1],[-3,5,-2,-9,4,-3,4,-7,-6,3,6,-5],[-9,2,10,8,-8,7,-1,6,-10,2,-4,7],[5,9,-9,-8,-1,-8,6,4,9,1,-8,3],[-9,-4,-5,-2,2,2,4,-4,2,5,8,-9],[1,-4,10,-8,6,1,4,-2,3,-10,7,3]],[[5,-7,-9,9,10,-8,-5,-9,-8,-2,2,-1],[-1,-3,6,-8,-7,-4,-3,6,-8,-4,-1,-4],[1,-3,4,-1,6,3,-1,-3,-8,-5,-3,6],[5,6,5,7,8,3,6,6,8,-6,-2,7],[9,5,-3,3,3,4,-1,-5,2,10,-10,4],[10,6,10,-4,-7,2,1,8,7,3,-4,7],[-6,6,7,-5,1,-9,-7,3,-1,6,10,-6],[-5,-7,9,4,2,3,-1,6,-2,-4,-7,6]]], dtype = "int32")#candidate|1305|(14, 8, 12)|const|int32
bop_1306 = relay.left_shift(var_1304.astype('int32'), relay.reshape(const_1305.astype('int32'), relay.shape_of(var_1304))) # shape=(14, 8, 12)
func_12_call = mod.get_global_var('func_12')
func_15_call = mutated_mod.get_global_var('func_15')
const_1312 = relay.const([[0.870739,-5.719671,1.668564,-3.644662],[-0.248495,5.455607,7.452270,7.702943],[1.945074,-4.502559,-3.249140,-3.289958],[-8.506714,-8.114880,8.033808,-7.063479],[8.333941,-3.484408,7.490078,8.790780],[-8.053544,8.774359,5.336841,-0.238830],[9.772473,4.404629,-0.301302,-4.382241],[9.913347,9.013062,2.275875,9.463882],[7.694118,6.716666,3.611487,-6.121506],[-9.618189,1.474521,-4.482372,-4.945206],[4.006553,7.949759,0.259506,-4.537266],[4.613920,-4.227376,6.894150,5.572280],[2.098330,4.955421,-3.686359,-3.348396],[-6.324664,-0.439126,1.692905,-4.879095],[-6.982439,-6.569511,9.297177,-1.888794],[-0.726423,1.083535,-3.383651,-9.598774],[-4.716016,-3.530992,8.842405,7.313183],[8.038170,0.923113,-4.373595,5.249089],[9.001218,-2.629465,-9.648237,0.467944],[0.831479,-4.458159,-5.973169,9.548158]], dtype = "float32")#candidate|1312|(20, 4)|const|float32
call_1311 = relay.TupleGetItem(func_12_call(relay.reshape(const_1312.astype('float32'), [8, 2, 5])), 0)
call_1313 = relay.TupleGetItem(func_15_call(relay.reshape(const_1312.astype('float32'), [8, 2, 5])), 0)
const_1321 = relay.const([[[-8,-9,5,9,-1,7,4,-7,5,-4,10,-1],[10,-6,5,-4,6,-4,-5,7,3,-7,6,-10],[6,4,-1,-5,-2,-2,1,-10,1,-8,-8,-2],[6,2,5,-3,-5,-9,3,-9,-6,-2,1,4],[9,-10,-4,9,-4,-4,-2,4,-3,8,-8,10],[10,-1,-7,2,-6,2,5,-1,-4,-1,-1,8],[7,-1,4,9,7,-4,-6,10,-1,1,8,6],[-7,10,2,-4,-3,4,-8,1,4,10,4,-9]],[[4,10,3,2,4,8,10,-5,-6,-10,3,-8],[7,-4,-7,5,-4,-1,-2,5,-7,-4,-4,9],[9,4,1,8,1,-8,-6,10,-9,-6,-6,-10],[5,-1,4,-1,-1,6,9,9,-5,-8,1,10],[-1,-2,-9,-3,6,-3,5,-3,1,8,1,-9],[6,9,9,5,8,-8,-10,1,-6,6,8,-10],[7,8,7,6,9,9,9,-8,5,-3,-9,-3],[-9,-8,6,-8,8,-3,-3,8,-6,-10,5,1]],[[-5,5,1,1,-6,-8,1,-5,2,-5,9,-9],[-4,-10,-6,-7,9,7,1,-1,8,-9,-5,-9],[-4,-4,-10,8,1,-1,10,7,1,9,-3,8],[10,-2,2,4,6,9,-10,-7,4,7,7,5],[-10,-3,5,-4,-9,-1,-8,6,-2,9,1,-4],[-6,-1,7,-5,10,-1,9,3,-2,6,-9,3],[7,-5,7,-3,10,-8,-10,5,-2,9,2,7],[6,5,8,-9,9,5,-3,1,-2,2,3,-6]],[[-6,4,8,-3,7,-2,-5,1,-6,9,5,-3],[-10,-3,-4,10,3,-7,7,7,-7,10,9,5],[-10,-5,6,-3,2,-1,-4,-6,7,10,-5,-10],[4,-4,3,-8,-6,9,-10,-10,10,-1,-4,-1],[-2,7,-8,10,6,6,-5,-6,5,3,-10,10],[-8,-4,9,5,8,9,-8,-7,4,8,8,-8],[-1,-10,6,1,-10,8,4,-1,5,8,10,10],[1,-3,1,-3,4,3,3,8,3,-5,9,-7]],[[7,-8,3,2,5,2,-7,-10,8,5,-9,7],[6,7,5,10,1,10,7,7,-5,9,6,7],[3,5,4,2,-1,7,-4,9,-6,-9,-9,6],[9,-8,-5,9,6,9,-6,-1,-9,5,5,9],[5,4,-8,9,-6,-2,-3,-8,-3,-10,10,-5],[8,-4,-6,-4,-5,-4,-9,-10,-2,-3,-3,4],[1,-4,5,-2,1,-8,9,5,-10,-6,-2,1],[9,8,8,8,6,-10,3,-4,8,-1,-3,2]],[[7,-4,4,-4,-1,7,-4,1,-8,3,-1,-8],[-8,-7,-7,-8,-4,-5,8,-5,2,10,-8,-8],[-10,-2,7,-1,8,9,4,10,-8,10,4,4],[-7,2,3,-4,10,-7,5,-1,5,-8,7,-9],[-5,-10,-4,7,-9,7,-8,9,6,-4,-4,-3],[6,10,-3,8,-9,9,3,7,6,5,6,3],[-10,2,-3,-4,8,2,-2,1,7,7,7,-3],[7,-6,-4,6,5,9,-2,-5,-5,-4,-7,2]],[[-7,5,2,-9,-10,3,-4,-7,6,-7,6,-3],[-10,2,3,3,-1,-6,-8,6,-9,-1,10,4],[-5,4,-6,6,3,-3,-10,-8,5,-5,-8,1],[2,4,2,-5,10,10,-8,10,-4,2,1,4],[4,9,2,3,5,-3,-5,6,2,9,-4,-3],[-4,-10,-5,-3,6,4,3,2,-3,5,-5,-1],[-8,-7,1,-1,-5,2,-5,-10,6,-1,-9,8],[-7,-2,-5,7,5,-8,-6,-3,-9,-10,1,-9]],[[3,-9,10,6,2,8,-3,3,-3,-6,1,9],[-8,6,10,-8,5,7,7,-3,-3,8,-9,6],[3,8,-3,4,5,-3,-7,-10,-10,-8,-10,6],[3,3,-5,2,1,2,7,7,9,-9,-3,-9],[-3,2,9,1,3,1,-3,8,3,9,-7,3],[8,-2,-8,6,9,7,7,9,-1,8,5,7],[-5,9,-5,-9,4,-6,4,6,-1,3,-2,-7],[-5,7,10,-10,-10,-8,3,10,9,-4,9,6]],[[4,7,4,-8,-9,-8,7,-6,9,4,1,3],[-1,3,-6,9,10,3,9,2,-6,-7,-10,-2],[6,5,9,7,5,-9,1,-1,1,5,-7,8],[-7,6,9,-8,-3,2,1,1,9,6,-7,1],[3,10,10,3,4,-7,-7,-7,10,-4,1,8],[7,-10,-1,2,4,5,-9,-3,8,-7,-9,-7],[8,-9,-9,6,10,-10,-6,6,4,4,-10,10],[1,2,4,8,-3,8,3,-9,2,6,2,8]],[[5,-1,2,-2,-9,-10,8,-4,4,-4,-9,-2],[2,9,-1,-2,-10,3,4,-3,-4,5,-3,-2],[4,6,10,-4,-7,6,1,-6,1,-5,7,-8],[-2,-2,4,4,1,-3,9,3,2,3,7,8],[-1,5,-10,-8,5,-9,-5,9,4,-6,9,8],[9,9,-3,8,-10,1,-3,2,10,-9,6,-2],[9,-5,7,4,-9,4,1,-5,4,-1,-8,6],[-8,-4,4,7,1,-4,9,4,2,-9,1,-6]],[[-3,-3,1,8,6,-6,-7,-4,6,7,-7,-5],[-3,3,-10,9,7,-2,-3,10,4,10,8,8],[-5,1,-9,2,-1,-4,-6,-2,-6,3,-7,-1],[-6,10,6,-8,-6,2,5,5,-10,5,-5,1],[3,3,7,-9,-4,9,-9,-10,7,-10,5,-8],[-6,3,2,-5,9,5,9,-9,4,-2,6,-8],[3,5,3,4,-8,3,2,7,5,7,5,-6],[5,-2,9,4,-9,-9,-2,-4,-10,10,-6,-5]],[[-8,-4,10,2,9,8,5,7,9,-6,8,1],[8,2,-10,-4,9,1,-7,5,-8,-3,5,7],[-3,4,5,-9,-7,-5,-8,-5,-7,6,-3,2],[-6,-6,-3,4,8,-9,-3,5,1,-9,1,6],[2,3,-5,-7,-8,-9,-6,10,10,6,-10,-3],[1,2,6,9,9,1,7,-4,-1,-7,-5,2],[6,7,8,-9,-10,2,-8,-3,-5,3,-4,-6],[-10,-3,-1,8,-2,-3,5,-1,2,10,-4,-1]],[[7,10,10,6,2,3,-2,-9,6,-5,6,5],[-9,2,-7,-4,-4,6,4,-4,-1,8,-7,-8],[-2,5,10,8,6,5,-2,10,5,9,-7,-4],[9,-2,2,1,-4,4,8,-3,1,-10,7,10],[-3,1,-4,-6,8,9,-9,-6,9,-9,1,1],[-2,-6,8,-10,4,1,-8,-1,7,8,2,-1],[1,10,-1,-3,-2,1,4,-5,3,-6,-4,-9],[7,-1,9,-2,9,2,10,5,4,-6,-7,7]],[[-6,5,10,-5,9,-7,-5,1,-8,-7,8,-2],[8,-1,8,9,2,6,-5,-10,4,-5,4,-6],[-8,-1,-3,-1,3,-7,1,-5,-9,-5,-1,-1],[10,-7,-1,-7,3,5,10,-8,7,2,-1,-3],[9,5,2,-8,-1,9,7,10,1,-8,3,-4],[3,-10,-4,-5,10,-6,7,7,10,-9,-3,8],[8,6,4,-4,5,-1,7,-3,-9,1,4,1],[5,10,-1,-3,6,10,7,-7,8,-3,-8,-1]]], dtype = "int32")#candidate|1321|(14, 8, 12)|const|int32
bop_1322 = relay.logical_or(bop_1306.astype('bool'), relay.reshape(const_1321.astype('bool'), relay.shape_of(bop_1306))) # shape=(14, 8, 12)
uop_1340 = relay.exp(const_1305.astype('float64')) # shape=(14, 8, 12)
output = relay.Tuple([call_1311,const_1312,bop_1322,uop_1340,])
output2 = relay.Tuple([call_1313,const_1312,bop_1322,uop_1340,])
func_1349 = relay.Function([var_1304,], output)
mod['func_1349'] = func_1349
mod = relay.transform.InferType()(mod)
mutated_mod['func_1349'] = func_1349
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1350 = relay.var("var_1350", dtype = "int32", shape = (14, 8, 12))#candidate|1350|(14, 8, 12)|var|int32
func_1349_call = mutated_mod.get_global_var('func_1349')
call_1351 = func_1349_call(var_1350)
output = call_1351
func_1352 = relay.Function([var_1350], output)
mutated_mod['func_1352'] = func_1352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1386 = relay.var("var_1386", dtype = "float32", shape = (10, 2, 2))#candidate|1386|(10, 2, 2)|var|float32
uop_1387 = relay.cosh(var_1386.astype('float32')) # shape=(10, 2, 2)
output = uop_1387
output2 = uop_1387
func_1406 = relay.Function([var_1386,], output)
mod['func_1406'] = func_1406
mod = relay.transform.InferType()(mod)
mutated_mod['func_1406'] = func_1406
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1407 = relay.var("var_1407", dtype = "float32", shape = (10, 2, 2))#candidate|1407|(10, 2, 2)|var|float32
func_1406_call = mutated_mod.get_global_var('func_1406')
call_1408 = func_1406_call(var_1407)
output = call_1408
func_1409 = relay.Function([var_1407], output)
mutated_mod['func_1409'] = func_1409
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1722 = relay.const([[[10,-4,-3,-6,8,6,7,8,-10,-9,10,1],[-1,10,8,2,1,3,-3,-5,-2,-4,10,9],[9,-8,-4,-2,5,7,-7,-1,2,-4,-3,-10],[9,-6,-6,-10,2,3,9,1,7,-7,-4,5],[-2,-5,-8,-2,8,6,2,8,4,-10,-9,8],[8,10,-4,9,6,1,-8,-10,10,10,-2,5],[-2,-10,7,-6,-3,-8,3,-3,3,10,-6,8],[6,7,6,5,-1,8,-5,5,-1,5,4,3],[-3,-1,-5,6,-4,-1,-8,-10,-3,7,5,4]],[[-8,-1,8,-2,-7,1,-1,-5,-1,-7,3,6],[-8,-2,6,10,-6,8,5,4,-2,-7,-9,10],[-7,8,6,5,-8,8,4,10,1,3,-10,1],[9,5,-8,-9,1,6,1,3,10,-5,-1,6],[5,-9,6,4,-8,5,-3,-3,-2,-2,-2,-4],[6,9,-6,-9,-2,-5,10,4,-10,4,-5,-8],[9,2,4,-4,-7,8,-5,4,7,8,9,-5],[-2,2,9,-6,1,8,6,-6,4,-8,-10,8],[2,-7,7,1,1,9,-7,-8,3,-4,7,-5]],[[3,-4,6,2,-8,-10,-1,8,-8,3,2,-4],[7,-7,7,9,-3,-4,-5,-8,7,9,3,-1],[-4,6,6,-10,-5,9,-9,3,9,1,-6,-6],[9,1,5,-2,-6,3,-6,7,2,-5,-4,4],[-6,7,6,-2,-3,6,5,-4,-6,-5,4,6],[-7,8,1,-5,7,-8,-9,7,-5,7,10,-3],[10,1,-1,9,-9,-9,9,5,10,-8,-4,-1],[7,-1,9,7,1,3,-4,1,-1,4,-6,5],[-4,5,7,9,1,-5,1,2,-10,5,7,-7]],[[-6,-6,10,8,-6,4,-6,9,10,-10,8,6],[-4,9,-8,-10,7,-7,-1,5,-8,1,1,-1],[-6,3,-2,-1,1,-10,8,5,7,-6,-7,-4],[-7,8,8,10,-10,-9,3,1,-10,5,10,-5],[4,-5,-10,7,-7,7,4,-9,-2,9,6,1],[10,4,-8,8,10,-2,-4,10,-1,5,4,-2],[-2,-2,-10,6,9,-1,-1,-8,4,-1,-6,-10],[-6,4,10,-6,6,1,-1,9,9,6,1,-8],[3,-5,-8,5,1,6,7,4,-2,-1,-3,2]],[[2,-9,3,8,-9,-4,-10,-5,-10,2,4,3],[10,8,6,-5,-9,1,-4,-7,-4,1,2,4],[-6,-9,10,-6,-8,6,-6,2,7,-9,-4,5],[-9,-1,4,-3,10,3,-6,4,3,7,3,5],[3,-3,10,5,6,-10,-1,-3,7,-5,-2,8],[-1,7,4,-3,5,4,-4,7,-2,10,-4,-4],[-6,-5,-8,-8,-9,2,-6,-10,1,-8,-2,-4],[-6,8,9,10,-3,-8,9,1,-8,3,7,4],[-7,2,-9,-4,5,4,7,1,-10,-2,-2,9]],[[3,-3,5,-10,-10,-2,1,6,9,1,-6,6],[1,7,1,5,-5,-4,-6,5,-9,6,4,-7],[4,10,10,5,4,-7,5,-8,-10,3,9,3],[4,7,5,-10,1,6,6,5,3,-6,3,1],[6,-9,-1,-4,-6,-2,4,10,3,-9,9,-10],[5,1,10,1,-7,3,-5,-4,10,1,-1,1],[7,5,-5,8,-3,-8,-4,-10,-9,10,2,8],[3,5,-2,-10,-8,7,-1,3,-6,6,-2,-1],[-1,-9,-7,6,6,-6,10,7,10,-3,-1,-5]],[[-9,-6,-1,-2,-10,-7,7,8,5,-2,-9,-4],[3,10,-4,-10,7,-4,7,-1,8,-5,-1,8],[9,2,-9,9,-2,7,-5,8,4,-10,-1,-7],[1,6,9,8,4,-7,6,8,-6,-3,1,-1],[-7,-6,-6,-7,-7,8,7,-5,8,5,-10,10],[-7,5,6,2,8,10,-3,10,-10,-5,4,7],[3,-4,6,-7,8,-10,7,-8,4,-1,-6,6],[-9,2,-2,-7,-2,8,-8,-8,6,-1,-2,1],[8,2,5,10,10,9,-3,-8,9,1,-8,4]],[[-7,-8,5,-6,1,8,5,-10,-2,-8,5,-7],[10,2,7,4,2,-6,1,-1,-9,8,9,-10],[7,5,3,-6,10,-3,-5,-2,10,5,9,6],[7,3,-10,-6,-2,-8,-4,8,-6,2,1,-8],[3,4,1,1,2,3,-8,10,1,3,-4,-9],[5,2,7,-6,-5,-2,10,4,9,7,-8,5],[5,-5,2,-9,-7,-4,-1,5,-3,-2,-10,7],[4,7,1,3,4,4,4,-5,-2,-7,1,9],[-9,-7,7,-10,-9,5,1,-5,8,2,-3,-4]],[[8,-10,-3,3,9,-3,-5,9,2,-4,-4,9],[-8,-5,-10,6,2,8,-4,-7,10,-1,-3,-1],[-6,9,5,3,10,4,7,-9,7,-4,8,-6],[-3,5,9,2,-2,9,-8,-3,-10,-10,9,8],[7,-9,-5,-5,-1,-4,-8,-8,-7,10,-9,4],[1,8,5,6,-10,-9,9,1,4,-10,4,-3],[-5,6,5,3,8,-6,9,-5,8,-2,-5,6],[-2,10,-6,-7,-5,7,7,-7,-3,-5,4,1],[-3,-8,-8,8,3,-6,-2,-4,-7,8,-2,8]],[[8,10,-3,-4,4,7,-8,-3,-2,4,1,-2],[10,2,-6,9,-4,-6,2,7,3,9,6,4],[1,3,-5,-2,-8,-9,5,-6,9,-9,-3,-6],[-8,-8,8,-4,2,-3,-6,-4,-9,7,-10,-4],[7,7,-10,6,1,4,-6,10,-10,4,8,-10],[-10,-3,-2,-9,-10,10,-1,-10,8,2,4,3],[5,-10,7,1,7,-8,-9,-9,-3,-1,-5,7],[-4,-9,-10,-2,2,-9,-10,-8,2,-7,3,4],[-6,2,-5,-5,7,9,6,4,3,-1,-4,1]],[[5,1,-5,5,9,1,6,4,9,3,-7,5],[2,7,7,4,-6,-1,9,2,-5,3,-8,7],[4,-3,8,-3,6,-8,7,-4,-8,-6,2,6],[-1,-9,8,6,-7,-3,9,-5,7,7,-7,9],[-7,-2,-2,-6,-9,-4,2,-9,9,4,-1,10],[-4,1,9,5,-4,-4,-7,-1,-9,5,3,10],[7,7,-3,-5,-5,6,-6,-9,-10,-7,7,-5],[-3,8,4,7,10,-9,-2,-9,3,-2,-8,9],[5,-9,4,-1,-4,-2,-6,10,-4,10,5,6]]], dtype = "uint32")#candidate|1722|(11, 9, 12)|const|uint32
var_1723 = relay.var("var_1723", dtype = "uint32", shape = (11, 9, 12))#candidate|1723|(11, 9, 12)|var|uint32
bop_1724 = relay.greater(const_1722.astype('bool'), relay.reshape(var_1723.astype('bool'), relay.shape_of(const_1722))) # shape=(11, 9, 12)
output = relay.Tuple([bop_1724,])
output2 = relay.Tuple([bop_1724,])
func_1727 = relay.Function([var_1723,], output)
mod['func_1727'] = func_1727
mod = relay.transform.InferType()(mod)
var_1728 = relay.var("var_1728", dtype = "uint32", shape = (11, 9, 12))#candidate|1728|(11, 9, 12)|var|uint32
output = func_1727(var_1728)
func_1729 = relay.Function([var_1728], output)
mutated_mod['func_1729'] = func_1729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1793 = relay.var("var_1793", dtype = "float64", shape = (2, 16, 1))#candidate|1793|(2, 16, 1)|var|float64
uop_1794 = relay.log10(var_1793.astype('float64')) # shape=(2, 16, 1)
var_1797 = relay.var("var_1797", dtype = "float64", shape = (2, 16, 13))#candidate|1797|(2, 16, 13)|var|float64
bop_1798 = relay.maximum(var_1793.astype('int16'), var_1797.astype('int16')) # shape=(2, 16, 13)
output = relay.Tuple([uop_1794,bop_1798,])
output2 = relay.Tuple([uop_1794,bop_1798,])
func_1802 = relay.Function([var_1793,var_1797,], output)
mod['func_1802'] = func_1802
mod = relay.transform.InferType()(mod)
var_1803 = relay.var("var_1803", dtype = "float64", shape = (2, 16, 1))#candidate|1803|(2, 16, 1)|var|float64
var_1804 = relay.var("var_1804", dtype = "float64", shape = (2, 16, 13))#candidate|1804|(2, 16, 13)|var|float64
output = func_1802(var_1803,var_1804,)
func_1805 = relay.Function([var_1803,var_1804,], output)
mutated_mod['func_1805'] = func_1805
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2281 = relay.var("var_2281", dtype = "int16", shape = (2, 1, 1))#candidate|2281|(2, 1, 1)|var|int16
var_2282 = relay.var("var_2282", dtype = "int16", shape = (2, 6, 14))#candidate|2282|(2, 6, 14)|var|int16
bop_2283 = relay.not_equal(var_2281.astype('bool'), var_2282.astype('bool')) # shape=(2, 6, 14)
bop_2291 = relay.floor_mod(bop_2283.astype('float32'), var_2281.astype('float32')) # shape=(2, 6, 14)
func_1190_call = mod.get_global_var('func_1190')
func_1195_call = mutated_mod.get_global_var('func_1195')
var_2298 = relay.var("var_2298", dtype = "float64", shape = (13, 22))#candidate|2298|(13, 22)|var|float64
const_2299 = relay.const([[9.922362,-0.872724,0.118682,0.523077],[-7.732820,9.543956,9.520852,3.891089],[-1.751859,-9.145737,5.982052,4.855607],[-7.504832,-5.608667,8.151955,-6.043216],[1.552494,-6.212387,-1.796001,0.204280],[-7.287076,-1.376336,-0.087742,-2.104990],[4.299143,0.014293,1.205185,0.049756],[-4.870966,7.524962,-1.707580,-7.786619],[-4.438768,3.014415,-2.665590,4.555936],[6.983018,-6.501650,9.246413,-6.974782],[7.932698,1.441627,1.670300,4.489059],[-4.984987,7.845954,-7.445581,4.472084],[5.083491,2.690927,3.626288,-7.478821],[-9.190526,3.188225,-6.509030,4.773778],[1.763224,-8.471778,5.109809,-3.069021],[-5.880165,-1.153807,-1.027166,4.604216],[-2.232112,6.448491,-7.208436,5.970285],[9.608725,-0.287020,-3.281519,0.683561],[2.947054,-4.917337,5.418778,-0.672765],[8.186292,9.425506,-5.276062,3.448182]], dtype = "float32")#candidate|2299|(20, 4)|const|float32
call_2297 = relay.TupleGetItem(func_1190_call(relay.reshape(var_2298.astype('float64'), [11, 2, 13]), relay.reshape(var_2298.astype('float64'), [11, 2, 13]), relay.reshape(const_2299.astype('float32'), [80,]), ), 0)
call_2300 = relay.TupleGetItem(func_1195_call(relay.reshape(var_2298.astype('float64'), [11, 2, 13]), relay.reshape(var_2298.astype('float64'), [11, 2, 13]), relay.reshape(const_2299.astype('float32'), [80,]), ), 0)
const_2301 = relay.const([[[0.608511,1.451027,8.265048,9.493697,9.404148,-4.432201,-2.589216,-2.508923,2.506392,-6.868312,-0.863844,-8.308020,-1.291260],[-3.357470,3.131979,5.607003,7.287762,1.487357,1.488518,2.038854,5.930643,7.256936,9.164685,-3.337698,6.347448,-1.366997]],[[-1.291999,-8.182454,-5.556730,-7.008777,6.804901,-9.442256,6.638028,2.990235,-9.058484,2.363112,-2.616480,1.166951,-2.345246],[-4.398981,-4.981461,2.945994,8.066719,6.672113,8.874721,-1.691311,-3.329427,0.137218,-4.070589,-9.349567,6.041093,-0.981775]],[[-9.541409,-2.445712,-1.884599,-0.383787,4.828954,6.324651,0.427230,-2.302279,0.802681,6.281965,0.679690,5.145440,5.775517],[-1.654829,3.097700,5.532879,-9.370972,-2.946631,-7.717961,-4.574895,-9.301759,7.025376,-7.798777,-2.025407,-0.653516,7.245486]],[[-7.933941,1.933140,-5.400283,1.290563,2.700720,3.404057,-6.901114,-6.498930,-5.921805,-1.654874,-1.438959,5.178243,6.604008],[-6.322021,8.696508,0.949585,-1.383830,-7.869927,-5.489349,-7.631174,-4.079008,3.708167,9.698599,6.238176,-9.257619,1.796611]],[[6.153874,-7.713591,-8.187757,-0.924931,-6.939044,-5.234718,6.304915,-3.036158,-8.910740,7.800732,-4.471240,5.383247,-6.599045],[-2.783738,-6.508331,0.682998,-2.896811,-4.554123,0.390465,-6.940362,-6.482356,-8.752409,4.320854,3.536704,-5.766159,-5.497159]],[[4.970162,-0.343305,2.127747,1.372294,-6.158004,5.009806,-0.079614,-0.122040,5.796298,0.722400,9.226175,5.706706,-6.421096],[-9.854100,0.867599,-2.804655,-1.351215,-7.655828,6.880539,8.039463,-9.971208,-0.572846,-4.943378,-5.780325,4.520230,7.743806]],[[-4.619556,-6.857149,6.717981,8.832065,6.127143,5.793439,-6.757216,8.871780,6.221864,-8.945473,-6.486441,-9.637365,3.334755],[-0.009839,2.239063,7.368497,-1.722842,-2.397931,-0.169294,-7.717546,5.283855,4.086944,5.246049,1.511723,0.960015,-1.779331]],[[-6.994535,-2.681497,-1.129977,4.978699,-7.729892,0.147273,-8.203937,-9.465604,0.203867,-6.824354,-2.850239,-7.512709,4.485149],[5.080452,1.597801,-5.412542,-6.128209,2.724396,1.769282,-6.847489,9.994651,-6.583080,-0.585132,-5.976513,3.301784,-1.936473]],[[-2.486314,9.626032,1.537491,-3.316168,-7.778011,-5.668923,7.985562,2.826070,-8.257017,-2.477684,6.892953,8.326420,4.771827],[1.492970,3.352846,5.891510,1.361669,2.378281,1.395998,9.664582,-4.103564,-6.078992,-7.498225,-5.732343,-5.971064,-5.676091]],[[2.401776,9.188340,-5.631110,7.138791,-7.654819,0.919095,3.162749,-3.245088,0.768393,-4.068477,-5.259901,8.798912,5.665200],[3.287302,0.746435,4.110033,-9.706287,7.514720,-9.174715,-4.920086,0.390442,-2.893609,-5.948494,9.007442,-2.692257,1.575767]],[[0.371521,4.084377,-8.603497,-6.267239,6.330840,-7.111440,-3.753719,-4.565131,-4.698930,4.553121,-2.867077,-5.265597,7.737877],[-0.014137,4.817995,-8.666247,5.602865,3.271199,-5.797829,2.997823,-5.152168,4.861932,2.757996,6.551836,-7.882098,-0.504733]]], dtype = "float64")#candidate|2301|(11, 2, 13)|const|float64
bop_2302 = relay.bitwise_or(call_2297.astype('int64'), relay.reshape(const_2301.astype('int64'), relay.shape_of(call_2297))) # shape=(11, 2, 13)
bop_2305 = relay.bitwise_or(call_2300.astype('int64'), relay.reshape(const_2301.astype('int64'), relay.shape_of(call_2300))) # shape=(11, 2, 13)
output = relay.Tuple([bop_2291,var_2298,const_2299,bop_2302,])
output2 = relay.Tuple([bop_2291,var_2298,const_2299,bop_2305,])
func_2306 = relay.Function([var_2281,var_2282,var_2298,], output)
mod['func_2306'] = func_2306
mod = relay.transform.InferType()(mod)
var_2307 = relay.var("var_2307", dtype = "int16", shape = (2, 1, 1))#candidate|2307|(2, 1, 1)|var|int16
var_2308 = relay.var("var_2308", dtype = "int16", shape = (2, 6, 14))#candidate|2308|(2, 6, 14)|var|int16
var_2309 = relay.var("var_2309", dtype = "float64", shape = (13, 22))#candidate|2309|(13, 22)|var|float64
output = func_2306(var_2307,var_2308,var_2309,)
func_2310 = relay.Function([var_2307,var_2308,var_2309,], output)
mutated_mod['func_2310'] = func_2310
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2592 = relay.const([[[3.796136,-8.503384,1.865795,-0.805633,8.228148,6.221818,-2.099253]],[[8.631971,-8.286815,6.761366,3.480920,3.582076,-4.465663,4.909334]],[[-3.161099,-4.499219,-2.713516,2.307715,-2.414100,9.535592,-3.559517]],[[6.938634,-5.711907,-1.429808,2.490698,4.575841,1.939002,-4.296960]],[[7.895066,-2.230669,-6.086122,-7.220720,3.340295,6.609660,2.073661]],[[-1.686846,5.147935,-0.880642,-6.377599,-6.263590,-1.606913,1.044045]]], dtype = "float32")#candidate|2592|(6, 1, 7)|const|float32
const_2593 = relay.const([[[6.505632,-7.073406,-3.510348,-7.476060,-8.042887,7.648788,5.803595],[7.835325,-9.213385,-2.621535,8.997895,-0.135439,-1.429790,8.468061],[-1.196513,0.701011,-6.919166,6.583953,-8.242344,6.924135,0.142109],[-9.160514,-7.070347,6.788483,5.545924,3.905060,8.417221,-7.420778],[5.948057,5.391832,-2.476589,-8.758135,-7.736503,1.668065,0.110874],[-6.550328,3.281718,3.465440,-5.334796,-7.408778,-3.033420,-7.088812],[-4.075181,-2.576757,6.421807,4.914422,-5.279938,-5.128033,5.172074],[4.684452,-2.665645,-8.826576,-8.795515,0.410599,-4.348964,-0.337263],[-9.595831,-8.388873,8.888375,-0.160036,-0.417188,-3.751195,1.136772],[-6.953770,-2.419861,-0.245601,8.285713,-0.634123,-9.537417,-9.639145],[-3.890881,-6.465538,-3.640659,4.603015,5.135201,-0.360546,2.002436],[-2.685093,6.130966,2.267812,-2.539534,1.467894,-4.392826,1.612513],[4.413303,-6.655360,-7.416837,-5.661537,4.517714,-4.801277,-3.308477],[7.382803,3.562729,-0.648417,-3.162131,-8.796542,4.892738,-8.021792],[8.330575,7.205600,3.035556,-5.466432,-9.286278,-5.184336,-8.574376]],[[-9.212887,9.273186,-8.858120,4.677746,-4.003875,6.465153,-6.551873],[-9.083936,-9.365932,-0.677735,-5.412380,0.372061,7.510973,-3.621797],[-6.393029,-1.931417,8.318133,-5.437392,-2.195164,-3.722004,9.629232],[9.601029,4.615914,-7.927465,0.906878,8.657034,-3.467674,2.820055],[-8.765696,-7.288315,-7.094937,4.993877,-8.933811,-7.787704,1.434368],[6.929493,-7.139237,-1.178434,-9.824459,5.172087,0.627454,-6.068037],[-6.491342,7.600666,4.248696,9.440120,-7.916105,3.093450,-2.458469],[5.746707,-5.986609,-6.827014,7.992267,-2.330827,7.681505,6.411876],[-4.529693,-9.829002,8.759094,8.916987,4.112607,7.986634,7.162989],[2.030905,-2.188571,0.153220,1.901325,2.478213,-1.555198,3.669820],[7.490746,-1.057785,-6.368025,-8.281083,-9.650140,-4.538033,-2.499735],[5.566962,-5.014205,3.371174,1.693651,6.785339,-6.743621,7.577519],[7.020126,-2.514405,-4.625353,-1.020938,-1.302976,-7.054023,9.631056],[-9.772909,-9.464516,3.275942,-3.932743,8.818876,-6.728637,3.299181],[1.710455,4.732416,2.137947,-2.498865,1.333970,-0.647520,2.170222]],[[-0.867975,0.063824,2.208168,2.115861,-5.266570,4.455236,9.958748],[-3.924187,5.117662,-2.357319,-6.532927,-5.087689,5.851100,-5.392110],[1.475174,-4.628231,-9.465203,2.820546,-9.781182,-6.543762,-0.110586],[-8.794344,0.092042,-8.292766,5.922466,-8.022950,-6.764282,-6.379318],[-9.879610,5.897049,-0.535276,1.507253,7.355614,-2.338617,3.456546],[-3.269386,4.164578,-8.211817,-7.838902,2.732469,5.753216,3.981213],[-3.008041,2.956537,-9.512748,4.787940,-1.163734,3.981260,3.423249],[0.688633,3.366668,-7.114732,2.997883,3.304972,-9.457411,6.179829],[-1.863792,0.276962,-7.719476,1.805243,-6.234566,7.247830,-1.153780],[-0.258913,2.802750,-1.446389,-3.104033,2.027355,2.088200,1.450156],[6.169374,0.800308,6.291181,-4.943458,5.198189,8.758792,-8.562201],[4.060170,2.198862,-7.430979,6.329440,0.896430,-1.479797,5.966619],[-8.604235,7.777455,1.722026,3.202442,4.629518,-2.256935,-8.072432],[-2.944035,0.229241,3.621685,-3.087691,8.831641,-9.957071,8.870559],[1.110638,1.490656,9.923757,6.787416,4.355603,2.854689,-0.951322]],[[-8.643638,6.855499,-4.319179,-7.461617,-4.082930,2.439833,-0.832213],[-2.527572,-7.548410,8.251209,9.224756,-5.243102,7.805584,-5.835506],[5.928476,0.925705,3.732492,-8.821551,5.316316,9.873793,0.630246],[6.404810,-6.457041,7.988615,9.540847,-4.148362,6.496137,2.322071],[6.292117,-7.839181,-0.027066,-6.710866,-3.884886,1.125582,2.642681],[6.430196,-2.960742,-7.864338,9.352450,2.132142,-9.042546,8.815247],[2.671087,6.401976,-9.432417,4.239476,8.552774,-1.379254,-5.642309],[5.733696,-5.710645,6.261501,1.488204,-9.698557,9.076887,4.708240],[0.524857,-6.396628,6.045511,1.108340,1.982220,-0.475813,-7.926009],[-8.982255,1.958627,-4.462408,8.071191,-5.570611,-6.950585,9.725676],[-5.049177,5.503822,0.296340,-3.935644,5.266311,5.568030,-8.424786],[2.617037,-6.799709,-4.233471,5.505795,-3.829852,-1.528327,0.059570],[0.936711,-1.147761,5.953101,2.913759,1.773172,4.458704,-3.428093],[0.515575,6.561724,0.149838,3.136202,9.697185,5.542205,3.215334],[-7.674219,-6.521335,9.791627,6.427528,-8.923867,2.156813,0.281134]],[[0.380607,0.688645,-6.317579,7.264187,2.427278,1.689110,-2.091857],[-7.195754,-2.908383,-9.608259,-4.208732,-7.548388,4.313862,-8.775268],[-2.553115,0.132581,6.723971,0.555295,8.589194,-6.796488,0.364409],[5.115954,-2.634561,5.397474,-7.718764,7.194236,0.680879,8.487770],[-4.623834,6.947914,4.018623,-4.596538,-7.963539,-0.373795,6.987290],[-9.560018,8.581975,-4.878395,1.787388,-9.576045,5.476843,-5.442815],[1.423578,6.901376,4.835008,6.572017,-4.389295,-6.793508,1.277137],[-5.387127,2.172115,5.340874,9.815421,-3.552553,8.192581,-0.597248],[-0.660010,9.929841,-7.139300,2.645344,0.432911,-1.515849,6.026416],[-8.729017,-4.560965,9.311181,3.438207,-0.116772,-4.716882,1.600281],[0.719880,-6.125668,-4.604786,-7.001665,0.884519,1.810875,-8.220676],[-4.130236,-0.887616,-9.792783,4.184440,-6.401325,-9.046532,9.161590],[8.341458,-8.049430,9.048942,-0.875174,-7.808868,-2.491117,-7.581407],[-3.344712,-5.550417,-4.234559,-2.872826,9.132609,-4.041597,-1.269170],[-9.845279,7.025733,0.687233,-7.473373,2.149291,-6.540193,9.104064]],[[5.462594,-6.307221,-1.230197,-6.056255,7.317454,5.757474,-2.396237],[-2.433119,-2.377802,9.657110,-8.273697,8.423304,4.975460,3.340578],[-6.038631,-9.862762,4.778318,-0.902110,3.351102,-7.192447,5.506390],[3.675759,-7.820493,-3.840325,-5.961042,-0.128603,-4.240230,-6.254088],[-1.052613,-2.345804,-5.504829,-5.497416,4.393624,-4.679085,4.811746],[-1.486002,-1.237885,7.939683,1.654283,-3.345955,8.833772,8.622185],[-3.803186,4.888177,5.991894,-7.231040,-8.453065,6.211573,8.926202],[6.184220,6.075051,0.777992,3.495582,-9.651008,-2.293284,2.830863],[8.600174,-8.231011,-9.783184,1.261591,9.934709,3.176865,-8.791928],[5.844644,-5.820657,9.043915,-5.845083,-7.797500,6.519670,9.643583],[3.092239,6.270874,7.124803,-9.366901,4.461620,9.833290,6.251106],[-7.204823,-9.054084,4.841266,-3.661051,-3.069156,1.477761,5.573668],[6.777080,6.118395,3.497552,5.302194,-3.738486,-1.105970,4.604366],[-3.670555,-5.568476,7.211501,-9.229707,-6.388640,7.038617,-8.403691],[0.997577,7.954729,-8.763722,0.064128,6.873615,-0.802758,-8.118384]]], dtype = "float32")#candidate|2593|(6, 15, 7)|const|float32
bop_2594 = relay.floor_mod(const_2592.astype('float32'), const_2593.astype('float32')) # shape=(6, 15, 7)
func_1349_call = mod.get_global_var('func_1349')
func_1352_call = mutated_mod.get_global_var('func_1352')
var_2602 = relay.var("var_2602", dtype = "int32", shape = (1344,))#candidate|2602|(1344,)|var|int32
call_2601 = relay.TupleGetItem(func_1349_call(relay.reshape(var_2602.astype('int32'), [14, 8, 12])), 1)
call_2603 = relay.TupleGetItem(func_1352_call(relay.reshape(var_2602.astype('int32'), [14, 8, 12])), 1)
uop_2604 = relay.erf(const_2593.astype('float64')) # shape=(6, 15, 7)
output = relay.Tuple([bop_2594,call_2601,var_2602,uop_2604,])
output2 = relay.Tuple([bop_2594,call_2603,var_2602,uop_2604,])
func_2606 = relay.Function([var_2602,], output)
mod['func_2606'] = func_2606
mod = relay.transform.InferType()(mod)
mutated_mod['func_2606'] = func_2606
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2607 = relay.var("var_2607", dtype = "int32", shape = (1344,))#candidate|2607|(1344,)|var|int32
func_2606_call = mutated_mod.get_global_var('func_2606')
call_2608 = func_2606_call(var_2607)
output = call_2608
func_2609 = relay.Function([var_2607], output)
mutated_mod['func_2609'] = func_2609
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2786 = relay.var("var_2786", dtype = "float32", shape = (10, 5, 13))#candidate|2786|(10, 5, 13)|var|float32
uop_2787 = relay.tan(var_2786.astype('float32')) # shape=(10, 5, 13)
output = relay.Tuple([uop_2787,])
output2 = relay.Tuple([uop_2787,])
func_2796 = relay.Function([var_2786,], output)
mod['func_2796'] = func_2796
mod = relay.transform.InferType()(mod)
var_2797 = relay.var("var_2797", dtype = "float32", shape = (10, 5, 13))#candidate|2797|(10, 5, 13)|var|float32
output = func_2796(var_2797)
func_2798 = relay.Function([var_2797], output)
mutated_mod['func_2798'] = func_2798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2983 = relay.var("var_2983", dtype = "uint32", shape = ())#candidate|2983|()|var|uint32
var_2984 = relay.var("var_2984", dtype = "uint32", shape = (3, 4, 1))#candidate|2984|(3, 4, 1)|var|uint32
bop_2985 = relay.maximum(var_2983.astype('uint32'), var_2984.astype('uint32')) # shape=(3, 4, 1)
output = bop_2985
output2 = bop_2985
func_2993 = relay.Function([var_2983,var_2984,], output)
mod['func_2993'] = func_2993
mod = relay.transform.InferType()(mod)
mutated_mod['func_2993'] = func_2993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2993_call = mutated_mod.get_global_var('func_2993')
var_2995 = relay.var("var_2995", dtype = "uint32", shape = ())#candidate|2995|()|var|uint32
var_2996 = relay.var("var_2996", dtype = "uint32", shape = (3, 4, 1))#candidate|2996|(3, 4, 1)|var|uint32
call_2994 = func_2993_call(var_2995,var_2996,)
output = call_2994
func_2997 = relay.Function([var_2995,var_2996,], output)
mutated_mod['func_2997'] = func_2997
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3146 = relay.const([[[-3.512047,2.989340,2.962979,-7.233320],[9.830734,-7.521006,3.349712,-5.152600],[-3.745011,-9.047769,1.643822,4.312685],[6.769153,-1.707967,-8.176358,-4.906835],[-6.262158,8.597309,-1.166568,-5.330430],[-2.158983,-8.504106,-4.012618,1.864509],[6.937212,-6.131165,-2.436256,5.939012],[-9.960589,5.864498,6.665876,5.959508]],[[-6.849084,3.989923,-4.237471,-4.593060],[7.948033,-3.633872,5.254562,-8.730928],[5.261061,4.668869,-3.409142,3.446844],[8.447150,2.373343,7.919085,-3.355256],[9.766461,-6.002879,3.308940,-4.360238],[9.874030,-8.347012,-6.653757,3.587944],[4.870058,8.800193,4.106571,-1.629377],[-2.498273,-4.349089,-6.232070,1.921189]],[[-7.411042,-1.291227,-1.950177,-7.757877],[6.315379,-9.381173,0.352578,-8.961949],[8.990300,-9.136305,-8.628595,1.673649],[3.502741,-6.492608,-5.971730,9.028824],[9.756953,-7.001898,9.858590,1.014810],[2.534145,-7.169313,-1.777108,2.840168],[9.226775,-0.594801,4.814487,-0.682648],[8.190557,-1.061230,-4.930332,6.392963]],[[3.423218,5.100894,-0.598280,-3.926994],[-3.911392,5.949901,2.851072,-7.322170],[-0.147891,-5.153887,-9.524293,-9.257822],[-8.228475,7.139860,6.030091,-8.933562],[-1.748306,0.673023,8.772983,-1.159846],[-4.713277,-8.858678,5.708957,-8.523141],[7.236631,1.907679,8.060792,-1.028978],[-5.678702,-0.515742,-7.953184,2.132816]],[[-8.787415,3.936240,-9.404267,-6.251939],[1.734481,-3.078195,3.372462,5.517113],[5.245391,7.190850,-1.486265,-3.439605],[1.948734,-5.126666,-1.072763,6.269424],[-9.143745,-4.519922,-5.270790,-3.238082],[0.277002,-1.954780,9.555037,4.285785],[-7.964976,-2.965215,-8.653268,-6.830831],[2.541264,2.816906,-1.929063,1.346671]],[[-0.895336,0.074112,-6.981156,-6.444551],[-8.526744,-5.068917,-6.155924,-0.635662],[-2.964462,-2.125713,-6.545776,5.172296],[4.785176,1.636761,9.615801,1.804175],[-9.334789,-6.867846,-8.276623,-8.153256],[-4.231305,-1.403841,-8.051395,1.959110],[4.727893,-2.291387,-2.475786,-2.227899],[-9.945621,6.534978,-7.475708,7.852454]],[[6.788810,6.037894,0.310758,-0.392005],[-2.967637,-7.451028,-1.182890,-4.827728],[9.456910,3.361532,-2.551751,-1.810802],[9.741722,-9.246188,-2.214310,-9.006339],[2.287227,1.225385,0.017228,-3.578137],[-1.165175,-2.514861,7.058350,2.041025],[4.798582,-4.762610,-0.318180,8.532369],[6.228778,5.191530,6.782126,3.826759]],[[9.256255,1.112796,7.332670,-8.468116],[9.640346,-6.952839,6.840699,5.192604],[-9.041594,-7.846750,-9.056714,-8.697297],[6.370074,2.595258,8.216945,-6.496155],[9.008946,3.164880,0.436010,3.742640],[-4.665685,5.711087,3.943496,4.253585],[6.128638,-2.009491,5.362953,2.211756],[-5.929875,1.759115,5.303358,-3.527819]]], dtype = "float64")#candidate|3146|(8, 8, 4)|const|float64
uop_3147 = relay.acos(const_3146.astype('float64')) # shape=(8, 8, 4)
func_12_call = mod.get_global_var('func_12')
func_15_call = mutated_mod.get_global_var('func_15')
var_3152 = relay.var("var_3152", dtype = "float32", shape = (80, 1))#candidate|3152|(80, 1)|var|float32
call_3151 = relay.TupleGetItem(func_12_call(relay.reshape(var_3152.astype('float32'), [8, 2, 5])), 0)
call_3153 = relay.TupleGetItem(func_15_call(relay.reshape(var_3152.astype('float32'), [8, 2, 5])), 0)
output = relay.Tuple([uop_3147,call_3151,var_3152,])
output2 = relay.Tuple([uop_3147,call_3153,var_3152,])
func_3159 = relay.Function([var_3152,], output)
mod['func_3159'] = func_3159
mod = relay.transform.InferType()(mod)
var_3160 = relay.var("var_3160", dtype = "float32", shape = (80, 1))#candidate|3160|(80, 1)|var|float32
output = func_3159(var_3160)
func_3161 = relay.Function([var_3160], output)
mutated_mod['func_3161'] = func_3161
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3279 = relay.var("var_3279", dtype = "float32", shape = (16, 16, 5))#candidate|3279|(16, 16, 5)|var|float32
uop_3280 = relay.cosh(var_3279.astype('float32')) # shape=(16, 16, 5)
bop_3291 = relay.bitwise_xor(var_3279.astype('uint64'), relay.reshape(uop_3280.astype('uint64'), relay.shape_of(var_3279))) # shape=(16, 16, 5)
uop_3302 = relay.atan(uop_3280.astype('float64')) # shape=(16, 16, 5)
var_3310 = relay.var("var_3310", dtype = "uint64", shape = (16, 16, 5))#candidate|3310|(16, 16, 5)|var|uint64
bop_3311 = relay.equal(bop_3291.astype('bool'), relay.reshape(var_3310.astype('bool'), relay.shape_of(bop_3291))) # shape=(16, 16, 5)
uop_3318 = relay.sigmoid(uop_3302.astype('float32')) # shape=(16, 16, 5)
output = relay.Tuple([bop_3311,uop_3318,])
output2 = relay.Tuple([bop_3311,uop_3318,])
func_3320 = relay.Function([var_3279,var_3310,], output)
mod['func_3320'] = func_3320
mod = relay.transform.InferType()(mod)
mutated_mod['func_3320'] = func_3320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3320_call = mutated_mod.get_global_var('func_3320')
var_3322 = relay.var("var_3322", dtype = "float32", shape = (16, 16, 5))#candidate|3322|(16, 16, 5)|var|float32
var_3323 = relay.var("var_3323", dtype = "uint64", shape = (16, 16, 5))#candidate|3323|(16, 16, 5)|var|uint64
call_3321 = func_3320_call(var_3322,var_3323,)
output = call_3321
func_3324 = relay.Function([var_3322,var_3323,], output)
mutated_mod['func_3324'] = func_3324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3743 = relay.var("var_3743", dtype = "float64", shape = (2, 5, 6))#candidate|3743|(2, 5, 6)|var|float64
const_3744 = relay.const([[[-1.332483,-8.233236,-0.358463,-4.077730,9.174349,9.204091],[9.743294,-3.059225,-3.383765,-9.771761,3.386588,-9.613558],[1.733397,-6.531410,5.852293,5.854098,3.231591,6.543258],[-3.929186,-7.832623,3.388934,-3.634444,-8.678435,3.951213],[-1.859589,-5.930661,8.764451,-3.210592,5.278118,-0.210257]],[[2.189054,-2.456702,5.151935,-4.463877,-1.835359,-0.269265],[-6.278805,-0.396145,8.985048,1.091775,-7.245597,9.129980],[-9.822722,-7.016898,9.326039,-6.508977,-1.463516,1.089878],[-4.192662,3.628045,3.625537,3.324297,-2.437314,-6.656162],[3.753764,2.497347,7.452954,7.397078,6.598985,6.090651]]], dtype = "float64")#candidate|3744|(2, 5, 6)|const|float64
bop_3745 = relay.floor_mod(var_3743.astype('float64'), relay.reshape(const_3744.astype('float64'), relay.shape_of(var_3743))) # shape=(2, 5, 6)
output = relay.Tuple([bop_3745,])
output2 = relay.Tuple([bop_3745,])
func_3757 = relay.Function([var_3743,], output)
mod['func_3757'] = func_3757
mod = relay.transform.InferType()(mod)
mutated_mod['func_3757'] = func_3757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3758 = relay.var("var_3758", dtype = "float64", shape = (2, 5, 6))#candidate|3758|(2, 5, 6)|var|float64
func_3757_call = mutated_mod.get_global_var('func_3757')
call_3759 = func_3757_call(var_3758)
output = call_3759
func_3760 = relay.Function([var_3758], output)
mutated_mod['func_3760'] = func_3760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3768 = relay.var("var_3768", dtype = "float32", shape = (15, 1, 7))#candidate|3768|(15, 1, 7)|var|float32
uop_3769 = relay.asinh(var_3768.astype('float32')) # shape=(15, 1, 7)
output = relay.Tuple([uop_3769,])
output2 = relay.Tuple([uop_3769,])
func_3780 = relay.Function([var_3768,], output)
mod['func_3780'] = func_3780
mod = relay.transform.InferType()(mod)
var_3781 = relay.var("var_3781", dtype = "float32", shape = (15, 1, 7))#candidate|3781|(15, 1, 7)|var|float32
output = func_3780(var_3781)
func_3782 = relay.Function([var_3781], output)
mutated_mod['func_3782'] = func_3782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4204 = relay.var("var_4204", dtype = "int64", shape = (9, 12, 3))#candidate|4204|(9, 12, 3)|var|int64
var_4205 = relay.var("var_4205", dtype = "int64", shape = (9, 12, 3))#candidate|4205|(9, 12, 3)|var|int64
bop_4206 = relay.equal(var_4204.astype('bool'), relay.reshape(var_4205.astype('bool'), relay.shape_of(var_4204))) # shape=(9, 12, 3)
func_2606_call = mod.get_global_var('func_2606')
func_2609_call = mutated_mod.get_global_var('func_2609')
const_4210 = relay.const([-3,-6,7,4,3,-1,5,-8,-3,-9,-3,-6,-2,5,-10,-3,9,2,5,2,-3,-3,-4,-7,8,-10,7,-7,-7,-3,9,9,-7,-6,6,2,-10,10,-8,3,-7,6,-8,-2,-5,3,-1,4,5,2,-7,-3,-1,-4,-1,6,1,9,5,6,8,-4,4,-7,-9,10,-3,-4,5,-3,7,4,1,7,7,-6,1,-4,-9,3,9,-3,-6,9,6,-10,1,-1,7,10,9,9,-5,6,3,1,3,-6,-10,-4,7,9,10,-2,-6,-1,8,7,-10,-7,-10,-4,-10,-6,5,9,6,10,6,2,-4,-8,-2,6,-6,4,-1,3,-1,4,-10,8,10,9,1,9,4,-8,2,8,-6,6,-3,1,-7,-7,-9,-1,2,7,3,9,-3,4,10,3,-4,-5,5,10,4,-9,2,-2,-1,-10,-6,2,7,-7,7,6,9,10,-9,10,-8,6,8,-8,8,-3,-8,-6,-10,3,4,-1,-1,1,-1,-3,9,-1,-7,5,-9,-2,1,2,-4,1,4,-3,4,3,6,-6,-5,-9,8,-2,2,3,-3,-7,2,4,-1,-9,2,10,-9,-10,-3,-9,-5,-7,-4,-10,-7,-5,-6,-3,6,2,5,6,10,10,-7,6,1,-6,-4,-3,3,10,-7,-6,6,-2,4,8,-6,-9,9,-4,1,-5,-8,7,-6,-1,-1,-5,9,-1,5,-8,10,-3,-5,9,-7,-10,-5,-6,-6,-4,-8,-6,-6,9,-6,2,8,-5,2,-8,10,-4,7,-6,9,-9,-8,-1,2,6,10,-6,-3,1,4,-4,7,9,-8,-8,4,-1,2,7,-3,-4,10,1,-8,9,-10,-6,1,-5,-10,-3,10,-7,7,6,6,2,7,-3,6,9,-7,4,-2,-6,-2,9,4,-4,-9,-10,8,4,5,-2,-9,6,-8,5,-3,-4,-1,-7,-8,-5,-1,3,9,7,-5,5,-10,2,-5,-9,8,-3,6,-6,-3,1,-8,-3,10,-10,-1,-8,8,-10,-7,-1,-4,-5,-6,-3,2,5,8,6,10,-2,-1,-1,-2,-3,-1,5,-1,-6,-1,-8,-4,-2,10,10,-4,-10,-7,-5,3,-8,-2,-2,5,-2,6,9,2,2,-1,-4,9,1,7,4,4,8,7,9,-5,-6,10,1,-9,5,-5,5,5,9,4,5,5,1,1,-4,10,7,7,1,-1,4,-7,2,-6,7,-4,5,-6,-3,-8,-5,-7,10,10,-8,10,-9,-2,1,3,8,-10,7,3,5,7,2,2,-9,-5,-3,10,2,-4,4,2,-5,6,10,-3,3,-3,-7,-8,7,-5,8,4,-9,-4,-8,-6,-1,-8,-4,-6,-3,3,-3,-6,6,-3,-7,6,-7,-1,-9,9,-9,-2,8,-9,6,2,-5,-2,-2,-5,3,-6,-2,-5,-4,-4,1,-6,-2,1,9,1,-4,2,9,-4,9,-3,9,-5,-4,5,-2,6,6,-6,-1,-8,10,-10,9,1,7,2,-4,8,5,5,6,5,-9,8,8,6,8,-4,3,7,-9,-6,8,-1,9,4,7,9,2,7,-3,-5,10,-8,-7,1,-5,-9,2,8,7,-7,3,2,3,-3,-4,-5,-10,-7,9,-2,-6,-7,-2,10,-9,6,4,5,-9,4,-7,-10,-2,-5,-7,-5,-8,3,-9,1,-1,8,-5,5,-9,9,-5,-4,-8,-10,-6,1,-7,-5,-7,-2,3,8,-3,4,-9,10,4,3,-3,-10,-9,-4,-5,-3,-5,-3,-5,8,3,1,-7,-5,5,4,4,8,4,8,-10,2,-7,6,7,1,-8,-1,3,5,-8,7,-4,3,-6,-7,-3,-4,5,4,5,-1,8,-7,10,1,4,7,-5,-6,-3,-7,-2,-9,-10,1,8,8,6,7,9,1,5,1,-10,1,10,2,-9,-10,-3,6,-7,-7,10,-8,-1,-4,8,-6,-2,4,5,5,8,-4,-8,-6,3,-7,-7,-5,5,7,-5,-2,10,-9,3,-8,9,5,10,-4,5,7,-6,2,-2,-5,-2,3,4,-4,4,-9,3,10,-5,6,6,2,8,5,3,-6,-6,8,1,-6,-3,7,9,9,2,2,1,-1,-7,10,6,-6,4,-10,-5,9,-1,4,-6,4,10,-7,7,1,-6,-6,6,-5,-4,-5,-3,-7,-3,-4,7,8,-3,8,4,-6,10,-3,3,-7,2,6,-8,-10,7,1,-4,-9,5,7,-9,-10,-6,-5,8,6,4,5,-4,-7,9,-4,9,9,3,3,-10,10,5,-5,-7,-3,2,7,3,8,3,6,-5,8,-3,-9,6,-1,7,6,-6,9,8,-5,-1,4,2,10,5,5,-2,2,-8,-1,-8,2,-5,-1,8,-2,8,-7,-6,-10,-6,10,1,-6,-5,-5,1,7,8,-8,6,9,8,6,2,6,1,6,7,1,10,-5,3,8,3,-2,-6,5,-5,-9,-7,7,-10,-1,8,1,10,-8,1,6,1,-5,7,10,-2,-10,-3,-8,3,-2,-1,-8,10,-4,1,-4,-8,-9,8,-8,10,1,7,8,9,1,-4,1,-5,6,-4,8,9,6,9,-10,-2,-2,-10,-8,-2,-1,10,-2,-6,10,-7,4,8,-5,-2,5,6,4,10,5,3,-8,-7,-5,-9,6,7,-3,-8,1,-1,-7,-8,3,10,-1,5,5,2,-6,9,6,-2,9,5,-1,10,5,8,7,-5,3,10,1,-10,-2,1,-2,-6,2,-5,-2,-10,3,5,7,8,10,-6,9,-10,-4,10,-1,-9,10,5,-8,-8,-4,-1,-1,-9,-9,3,-4,1,-3,1,7,-8,-3,8,-9,-2,-7,4,-4,-10,1,-2,-8,2,-2,-7,3,6,8,7,10,2,10,5,2,-8,-1,-9,-1,-10,4,-4,3,-2,3,10,-7,-1,10,-5,-3,7,-1,-5,-7,-7,-2,-5,10,8,9,7,2,-6,-5,-7,2,-4,-2,7,-4,8,7,3,-5,1,10,-1,-7,7,6,10,-9,2,5,-1,-8,-7,6,-2,-2,4,-2,-4,-2,1,-4,7,-7,-7,10,1,8,-3,-9,-5,10,3,-6,3,8,5,6,7,9,-6,-1,9,5,6,-6,5,2,-8,-6,6,6,8,-1,5,-9,3,6,-1,-3,-4,-10,5,-6,-2,-5,-6,10,-2,9,3,8,9,-7,6,-9,-6,-7,1,-5,6,1,-10,-8,-2,-2,6,-10,-4,7,-4,10,5,3,3,-1,8,2,5,-2,8,1,-4,9,7,-9,10,2,-9,3,3,-2,8,-8,-6,9,6,8,-10,-9,-10,-1,-10,-8,-8,-10,5,-3,-5,-5,3,7,-3,-9,-9,-3,9,-9,-6,7,-8,-6,-8,-9,10,-6,-7,2,7,4,-4,-4,10,1,10,10,4,4,-5,-4,6,-7,4,-4,3,-6,-6,9,4,2,9,-6,7,6,3,-6,2,4,5,7,-6,4,-3,-8,4,-1,-9,7,-6,-10,2,10,1,2,-1,-5,-1,-1,-3,-9,6,-1,8,-4,10,-7,-2,-8,2,1,6,2,-5], dtype = "int32")#candidate|4210|(1344,)|const|int32
call_4209 = relay.TupleGetItem(func_2606_call(relay.reshape(const_4210.astype('int32'), [1344,])), 3)
call_4211 = relay.TupleGetItem(func_2609_call(relay.reshape(const_4210.astype('int32'), [1344,])), 3)
func_2796_call = mod.get_global_var('func_2796')
func_2798_call = mutated_mod.get_global_var('func_2798')
const_4219 = relay.const([-6.626628,-3.629620,3.915129,-0.200723,-7.758928,3.120668,0.781099,5.862653,-9.014015,-8.162312,-1.905553,7.958709,-4.645065,-2.196256,-4.687847,-9.126060,9.307106,-4.136080,2.799095,-4.801227,-2.880770,-2.952876,7.701732,1.568883,3.256131,1.216194,5.105649,0.001936,3.152149,-7.681905,-3.985138,-1.083152,6.840949,-7.062628,2.332493,5.532002,-4.056065,-8.750409,6.848051,-9.933296,6.557415,-8.837563,-5.151108,-4.519670,7.076630,-6.517301,9.773147,5.326019,8.431279,5.981280,-0.795918,-4.243494,-0.428733,-5.300625,-9.809885,-5.135649,-2.685974,9.767329,-5.228541,4.611466,-9.010140,6.047652,-7.397988,-8.564623,-6.251217,3.954059,-6.184486,-3.641719,-4.595691,-0.274748,7.900004,-1.087102,6.654746,-3.724926,2.125602,0.534987,9.737978,8.317173,1.360775,7.240746,0.802260,-7.505720,-3.475528,-2.138968,0.894650,-7.654064,-4.449031,1.870341,-3.336768,3.955534,1.023146,3.248819,-6.981519,-3.298522,-0.168601,3.002685,-7.021159,-0.695068,-3.883717,1.577441,6.653520,-3.569586,-1.954596,-3.871997,-1.691663,-2.828370,-5.154431,-6.093056,-3.801853,9.581587,9.137597,-5.152657,-1.073574,-7.447343,-0.390124,2.793651,4.638684,2.589950,8.827101,-0.009423,6.674506,5.962289,-4.622565,-8.239157,-0.474229,-0.771868,2.137455,-4.639188,7.763217,-5.998636,-3.776412,5.893815,-4.357346,-3.575456,-9.957314,9.068413,5.862413,-1.774629,-8.349487,5.136342,-7.339685,-5.735772,-9.552244,3.667096,-9.194920,3.856196,3.631463,-9.948723,3.900415,1.156788,-2.411530,-8.371588,1.862043,7.997805,9.490463,7.895479,-6.509051,8.675299,-8.748513,-0.745654,1.398382,9.120399,9.664983,-9.753419,-3.789930,-2.794865,-0.731885,5.103181,9.390202,6.783886,8.173292,-0.607767,4.147391,-2.306638,3.134633,-5.075480,7.727065,2.049761,8.603496,8.295603,-1.619082,-8.517365,-9.749043,-5.892604,6.854035,3.408039,-4.936753,-7.647328,2.327618,2.339124,-7.599385,2.850127,-0.429099,-7.736093,-8.007102,7.098914,5.662288,4.054932,9.817955,-5.821762,-5.006965,5.471130,6.647209,-1.144154,3.922830,6.708153,9.987127,4.728151,-2.596113,9.686884,1.688338,9.808185,1.273147,2.388893,-4.450028,3.398195,3.974098,-8.514591,-9.217117,2.162454,-5.764747,8.170273,-6.204985,6.723705,-2.023194,5.947925,-2.866736,6.152015,-5.428274,-6.066624,-1.466917,7.259010,0.497431,-3.819796,-8.252498,5.887736,3.873996,-9.427972,5.530578,-1.752971,-8.350103,4.481107,-7.522568,-0.586319,8.716230,2.198839,-4.524818,7.925835,-2.324387,-5.060021,-2.811881,-8.004006,-7.003763,1.934871,-8.790957,-6.215501,6.846592,0.234735,-5.802712,-4.783630,1.294695,8.665377,-6.971798,4.924371,-1.977497,3.115020,3.058145,-7.297658,-3.659279,5.758761,9.064435,-2.866188,1.153226,-9.212699,9.346303,-8.357680,4.844642,9.796773,-3.938708,-9.014811,-4.928412,6.732067,8.239666,3.647691,7.489542,9.530885,-1.756250,-8.135583,1.293895,6.478702,5.221238,1.808036,7.989721,1.584726,5.756036,4.422997,8.441821,4.372995,-0.150306,2.791374,2.849009,1.720066,-9.102003,-3.086015,-9.051902,-5.029760,4.292252,-7.870929,-2.928848,-0.088075,-8.113568,5.885200,2.413837,-1.174724,-8.868442,6.807077,-9.765229,3.865089,-4.937635,8.604246,-3.196964,2.045861,1.333696,-1.773897,8.779646,-2.109296,-1.078147,8.812649,-9.021760,-5.024330,9.826566,3.483258,-4.074300,-5.681236,-5.227405,2.123241,-3.397340,-9.317920,3.083777,3.570828,1.887829,-4.210823,-5.183728,8.335362,9.716925,2.928688,-3.287193,7.658365,8.012178,1.184599,8.028730,-3.539459,8.405111,7.083873,-1.584493,4.727352,-3.545654,9.472624,-7.422899,-4.745160,-7.337703,-7.893217,-7.272375,6.781474,-0.762690,1.104041,-4.417407,6.075257,-0.666422,-7.952629,9.318706,-5.831379,3.281638,-7.929935,8.077459,4.317770,-4.813536,-4.002234,8.105798,8.761656,-0.380341,8.647771,-1.216134,7.515598,-2.739970,7.933691,4.734238,0.147113,-7.955043,-4.007786,-9.388772,7.746270,-4.985810,1.887218,-1.302981,9.182165,6.749886,1.574308,7.857183,-6.575987,-5.857009,1.734039,-6.189014,-1.724313,2.542218,-5.064988,-1.418426,-1.520077,8.283953,7.387051,-0.228699,-5.070349,5.132827,-3.410332,-0.432186,-4.615428,-7.072398,6.743112,5.406877,1.383921,-1.919239,-6.930818,-3.373037,3.121983,0.914876,5.947454,3.487742,9.002162,4.543415,3.188862,1.046930,-8.355885,-3.502778,-0.343951,0.537356,-5.709234,2.107396,-0.933913,1.706005,8.919090,-7.600826,1.503978,-5.087618,1.657436,-6.298696,-3.464887,-6.410672,7.218110,-8.474712,-6.181913,-7.067625,5.892640,-1.147028,2.416859,-5.481307,-6.858093,0.238747,-9.058355,-0.827107,2.399809,1.509815,-6.204997,-2.175964,-9.285450,2.184356,-5.041859,2.922921,1.739969,9.794128,0.871071,7.221369,5.979097,2.021947,6.193345,6.247204,-0.711554,-9.855004,-7.779654,7.701966,3.308008,-6.380456,-8.771841,4.862727,2.103409,-4.099680,-1.013423,-2.780964,-9.931705,-1.324613,1.884115,-2.827183,-6.241208,6.030695,5.559571,5.728046,1.670837,-2.767806,1.253299,-7.329889,-0.100519,1.407854,-7.305286,-3.899177,-8.070875,-0.249476,-9.578565,5.843364,4.471706,-5.751656,2.491496,7.942485,7.788298,-6.637207,-9.429424,0.441184,3.024253,6.149537,-0.552280,-6.373743,-6.195646,-8.695500,5.871481,8.066543,-7.364375,0.871834,3.771396,3.002816,-3.377827,3.538999,-8.463802,-0.568392,-9.451446,7.622367,5.667995,9.799441,0.519313,9.963328,3.267547,8.581516,-8.050768,-2.791319,-4.576486,-4.377269,1.812517,8.732399,-4.424935,-6.976033,4.261582,4.567572,9.963449,9.197473,-1.658326,-6.680018,9.192335,-3.562122,-6.385799,-7.319502,-8.541494,-2.940464,-9.587586,9.198679,8.390818,7.271443,9.073736,6.854463,4.417186,1.133385,4.393602,-8.506724,-1.451196,-5.209013,1.436691,7.838293,9.250567,6.089477,2.560238,-2.911253,-2.617567,9.882898,-9.314300,9.026917,4.332155,-7.607062,-1.179468,-9.833495,4.011865,2.545623,7.179277,-8.250113,-6.984597,-2.074950,-4.540950,-9.816091,7.897940,-1.530565,5.513724,2.519979,1.000109,3.252640,-3.169709,-0.572718,6.626976,-8.630774,-1.977619,4.368572,5.121579,-8.286959,9.068582,-5.756797,-9.228250,-4.675875,-3.144211,6.398947,7.554503,0.002421,-5.221391,4.474262,-0.876753,-4.701822,-5.014119,1.705375,2.077184,3.066805,2.653913,6.795540,8.443689,3.191989,-7.850314,4.521936,1.060973,4.229631,-3.047610,6.969180,1.817052,6.425557,-2.522760,5.255344,-0.661505,-8.325444,-0.803367,7.496674,6.594665,-5.873072,2.865131,-7.865602,-6.244005,-2.911214,-3.548838,1.096524,6.338286], dtype = "float32")#candidate|4219|(650,)|const|float32
call_4218 = relay.TupleGetItem(func_2796_call(relay.reshape(const_4219.astype('float32'), [10, 5, 13])), 0)
call_4220 = relay.TupleGetItem(func_2798_call(relay.reshape(const_4219.astype('float32'), [10, 5, 13])), 0)
func_3780_call = mod.get_global_var('func_3780')
func_3782_call = mutated_mod.get_global_var('func_3782')
var_4226 = relay.var("var_4226", dtype = "float32", shape = (105,))#candidate|4226|(105,)|var|float32
call_4225 = relay.TupleGetItem(func_3780_call(relay.reshape(var_4226.astype('float32'), [15, 1, 7])), 0)
call_4227 = relay.TupleGetItem(func_3782_call(relay.reshape(var_4226.astype('float32'), [15, 1, 7])), 0)
output = relay.Tuple([bop_4206,call_4209,const_4210,call_4218,const_4219,call_4225,var_4226,])
output2 = relay.Tuple([bop_4206,call_4211,const_4210,call_4220,const_4219,call_4227,var_4226,])
func_4236 = relay.Function([var_4204,var_4205,var_4226,], output)
mod['func_4236'] = func_4236
mod = relay.transform.InferType()(mod)
var_4237 = relay.var("var_4237", dtype = "int64", shape = (9, 12, 3))#candidate|4237|(9, 12, 3)|var|int64
var_4238 = relay.var("var_4238", dtype = "int64", shape = (9, 12, 3))#candidate|4238|(9, 12, 3)|var|int64
var_4239 = relay.var("var_4239", dtype = "float32", shape = (105,))#candidate|4239|(105,)|var|float32
output = func_4236(var_4237,var_4238,var_4239,)
func_4240 = relay.Function([var_4237,var_4238,var_4239,], output)
mutated_mod['func_4240'] = func_4240
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5039 = relay.const([[[1,-4,-2,-9],[9,7,10,-2],[7,-9,8,9],[10,10,6,-7],[-7,-1,3,-9],[-7,6,4,-10],[9,-4,-1,-2],[1,-10,5,3],[-10,3,4,6],[10,-9,-1,5],[-10,-8,4,-3]],[[1,3,1,-9],[10,-4,4,8],[-3,8,7,3],[-4,8,10,-4],[-7,6,3,-8],[-7,-1,-4,7],[-5,-1,-10,-10],[5,4,-1,6],[-7,5,8,-5],[8,8,-5,1],[-3,4,9,10]],[[4,-1,6,5],[10,3,5,-4],[4,-5,10,10],[-8,-7,-10,1],[4,-3,9,-2],[-9,-8,-1,-7],[6,-3,-10,10],[-9,5,7,-5],[9,-9,-5,-7],[6,-9,10,3],[10,2,2,7]],[[2,-3,7,-8],[-8,-5,10,9],[9,-6,-4,5],[-8,3,3,-1],[10,-2,4,5],[10,6,2,-9],[-3,-2,-3,-2],[-5,1,5,-3],[-8,3,-6,7],[-8,8,-10,3],[-2,-2,-9,8]]], dtype = "int8")#candidate|5039|(4, 11, 4)|const|int8
const_5040 = relay.const([[[-10,-5,-6,1],[5,-6,-9,1],[-1,2,-4,2],[10,7,6,7],[-6,7,3,1],[-2,-4,2,-4],[-8,4,3,-1],[4,8,1,4],[-8,-9,-10,3],[-7,-3,-2,4],[3,-3,2,9]],[[1,-5,-3,-10],[-1,3,9,-3],[1,-7,-3,3],[7,-4,10,-6],[-3,3,-2,-8],[-2,-4,5,9],[-5,10,-7,6],[9,-6,5,9],[-3,-5,-5,-7],[2,-10,-1,4],[5,-6,7,10]],[[-3,-6,-6,-8],[7,-3,-4,9],[-2,-4,10,-10],[4,-9,7,-10],[6,1,-10,3],[2,-10,-6,4],[-10,2,-10,4],[10,6,3,-10],[-9,10,-9,7],[-9,-8,5,-5],[-2,-2,-1,6]],[[-2,-1,-8,3],[-3,7,8,-5],[-10,-1,7,-10],[5,3,10,9],[2,6,-2,-7],[4,7,1,-10],[-7,6,9,2],[7,1,-5,-7],[2,-8,4,9],[1,-1,-10,-3],[-4,-10,4,6]]], dtype = "int8")#candidate|5040|(4, 11, 4)|const|int8
bop_5041 = relay.bitwise_or(const_5039.astype('int8'), relay.reshape(const_5040.astype('int8'), relay.shape_of(const_5039))) # shape=(4, 11, 4)
func_3780_call = mod.get_global_var('func_3780')
func_3782_call = mutated_mod.get_global_var('func_3782')
const_5045 = relay.const([-5.015408,0.871611,0.137521,-0.860560,-1.641788,6.927102,-2.615894,-9.085503,9.543963,-7.121829,2.862772,-5.441444,0.472452,-5.568093,2.327050,-5.789859,2.540564,-4.661826,6.878573,-4.535955,4.556368,5.573806,-1.447849,-7.839204,3.930869,2.021558,-8.955989,1.724714,5.958654,-9.602528,2.135766,9.289451,-0.878632,-9.703527,-1.547663,3.632069,-6.981783,2.322445,8.512221,-3.203486,-4.589409,1.703486,2.083301,7.070967,-4.225092,-7.396802,-0.353626,-9.715189,7.928735,-0.657204,2.147851,-0.068074,-8.579273,-7.452988,2.376458,-9.936414,-2.235050,-6.869920,-0.927278,5.242189,-8.041482,1.587585,6.666663,2.164674,-8.817829,-2.900166,-7.788009,9.698949,-0.568205,-0.698945,-4.683841,5.863952,-3.296491,4.094823,4.480311,4.396858,-5.296284,-8.434152,-6.516308,-6.157972,-2.561347,-0.614256,6.556308,7.010157,7.515663,-6.210974,5.394975,6.899286,9.495241,-4.558190,5.597840,-2.141402,-2.253004,0.013689,1.975796,7.836142,-0.234386,-8.813665,1.493457,6.212892,5.259631,9.008258,8.921048,-2.396242,0.466714], dtype = "float32")#candidate|5045|(105,)|const|float32
call_5044 = relay.TupleGetItem(func_3780_call(relay.reshape(const_5045.astype('float32'), [15, 1, 7])), 0)
call_5046 = relay.TupleGetItem(func_3782_call(relay.reshape(const_5045.astype('float32'), [15, 1, 7])), 0)
output = relay.Tuple([bop_5041,call_5044,const_5045,])
output2 = relay.Tuple([bop_5041,call_5046,const_5045,])
func_5062 = relay.Function([], output)
mod['func_5062'] = func_5062
mod = relay.transform.InferType()(mod)
mutated_mod['func_5062'] = func_5062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mutated_mod.get_global_var('func_5062')
call_5063 = func_5062_call()
output = call_5063
func_5064 = relay.Function([], output)
mutated_mod['func_5064'] = func_5064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_5119 = relay.TupleGetItem(func_5062_call(), 0)
call_5120 = relay.TupleGetItem(func_5064_call(), 0)
var_5121 = relay.var("var_5121", dtype = "int8", shape = (4, 11, 4))#candidate|5121|(4, 11, 4)|var|int8
bop_5122 = relay.bitwise_and(call_5119.astype('int32'), relay.reshape(var_5121.astype('int32'), relay.shape_of(call_5119))) # shape=(4, 11, 4)
bop_5125 = relay.bitwise_and(call_5120.astype('int32'), relay.reshape(var_5121.astype('int32'), relay.shape_of(call_5120))) # shape=(4, 11, 4)
uop_5129 = relay.cos(call_5119.astype('float32')) # shape=(4, 11, 4)
uop_5131 = relay.cos(call_5120.astype('float32')) # shape=(4, 11, 4)
output = relay.Tuple([bop_5122,uop_5129,])
output2 = relay.Tuple([bop_5125,uop_5131,])
func_5139 = relay.Function([var_5121,], output)
mod['func_5139'] = func_5139
mod = relay.transform.InferType()(mod)
var_5140 = relay.var("var_5140", dtype = "int8", shape = (4, 11, 4))#candidate|5140|(4, 11, 4)|var|int8
output = func_5139(var_5140)
func_5141 = relay.Function([var_5140], output)
mutated_mod['func_5141'] = func_5141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_5169 = relay.TupleGetItem(func_5062_call(), 0)
call_5170 = relay.TupleGetItem(func_5064_call(), 0)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
const_5180 = relay.const([3,9], dtype = "int16")#candidate|5180|(2,)|const|int16
var_5181 = relay.var("var_5181", dtype = "int16", shape = (84, 2))#candidate|5181|(84, 2)|var|int16
var_5182 = relay.var("var_5182", dtype = "float64", shape = (286,))#candidate|5182|(286,)|var|float64
call_5179 = relay.TupleGetItem(func_2306_call(relay.reshape(const_5180.astype('int16'), [2, 1, 1]), relay.reshape(var_5181.astype('int16'), [2, 6, 14]), relay.reshape(var_5182.astype('float64'), [13, 22]), ), 0)
call_5183 = relay.TupleGetItem(func_2310_call(relay.reshape(const_5180.astype('int16'), [2, 1, 1]), relay.reshape(var_5181.astype('int16'), [2, 6, 14]), relay.reshape(var_5182.astype('float64'), [13, 22]), ), 0)
func_4236_call = mod.get_global_var('func_4236')
func_4240_call = mutated_mod.get_global_var('func_4240')
const_5186 = relay.const([1,-1,-5,-4,-2,6,6,-4,-9,8,8,5,-8,2,-1,8,9,8,10,8,-8,-5,8,-3,-2,1,2,-4,6,-2,-8,-10,10,3,-9,-1,-5,-3,6,2,-4,-9,-8,9,-10,-2,1,-5,1,2,9,6,2,9,-5,9,3,-8,-1,-4,5,-7,-7,9,10,-7,-7,-3,4,8,-2,-9,-2,-5,-1,4,-4,-2,5,10,-3,4,-1,8,8,3,2,4,-6,-7,-7,-2,-3,-1,-8,-4,7,-2,5,-4,-5,-5,-6,10,-10,-10,1,-8,-8,3,-10,-10,4,-5,-1,6,-5,-4,-3,-4,5,-10,8,9,6,4,10,5,6,-7,-9,7,-5,5,-7,-1,-3,-9,10,8,1,-4,-8,6,-6,-4,-3,9,2,-6,-2,-3,9,-7,9,4,7,-2,-6,-10,-9,-9,5,-2,1,8,-8,-10,3,5,3,4,7,7,-4,6,-1,-6,3,3,-10,9,4,-3,7,10,7,-9,10,8,5,5,-8,-4,3,-7,10,8,-5,10,-1,9,-4,2,6,-8,-3,9,-6,-6,-10,-1,-9,6,-2,-6,-7,-10,-5,3,-2,4,-5,-1,-6,1,8,-8,-3,-2,9,9,-3,6,-1,1,1,-3,10,9,-8,2,4,-4,-4,-3,2,-8,-1,5,5,-9,1,3,3,7,-2,-7,1,-3,-8,8,8,-5,2,5,5,-4,-6,-10,-8,-10,8,-7,1,-3,-6,-10,-9,-5,4,8,4,8,10,-8,-8,1,8,-4,9,9,-10,-2,-4,10,7,-9,-2,8,6,-2,-6,10,-4,4,-6,9,-2,3,-7,5,-2,4,3,8,8,6,5,-8,2,10,-7,-4], dtype = "int64")#candidate|5186|(324,)|const|int64
var_5187 = relay.var("var_5187", dtype = "float32", shape = (7, 15))#candidate|5187|(7, 15)|var|float32
call_5185 = relay.TupleGetItem(func_4236_call(relay.reshape(const_5186.astype('int64'), [9, 12, 3]), relay.reshape(const_5186.astype('int64'), [9, 12, 3]), relay.reshape(var_5187.astype('float32'), [105,]), ), 5)
call_5188 = relay.TupleGetItem(func_4240_call(relay.reshape(const_5186.astype('int64'), [9, 12, 3]), relay.reshape(const_5186.astype('int64'), [9, 12, 3]), relay.reshape(var_5187.astype('float32'), [105,]), ), 5)
uop_5193 = relay.log2(var_5182.astype('float64')) # shape=(286,)
output = relay.Tuple([call_5169,call_5179,const_5180,var_5181,call_5185,const_5186,var_5187,uop_5193,])
output2 = relay.Tuple([call_5170,call_5183,const_5180,var_5181,call_5188,const_5186,var_5187,uop_5193,])
func_5201 = relay.Function([var_5181,var_5182,var_5187,], output)
mod['func_5201'] = func_5201
mod = relay.transform.InferType()(mod)
var_5202 = relay.var("var_5202", dtype = "int16", shape = (84, 2))#candidate|5202|(84, 2)|var|int16
var_5203 = relay.var("var_5203", dtype = "float64", shape = (286,))#candidate|5203|(286,)|var|float64
var_5204 = relay.var("var_5204", dtype = "float32", shape = (7, 15))#candidate|5204|(7, 15)|var|float32
output = func_5201(var_5202,var_5203,var_5204,)
func_5205 = relay.Function([var_5202,var_5203,var_5204,], output)
mutated_mod['func_5205'] = func_5205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_5274 = relay.TupleGetItem(func_5062_call(), 1)
call_5275 = relay.TupleGetItem(func_5064_call(), 1)
output = call_5274
output2 = call_5275
func_5276 = relay.Function([], output)
mod['func_5276'] = func_5276
mod = relay.transform.InferType()(mod)
mutated_mod['func_5276'] = func_5276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5276_call = mutated_mod.get_global_var('func_5276')
call_5277 = func_5276_call()
output = call_5277
func_5278 = relay.Function([], output)
mutated_mod['func_5278'] = func_5278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
call_5314 = func_5276_call()
call_5315 = func_5276_call()
var_5323 = relay.var("var_5323", dtype = "float32", shape = (15, 15, 7))#candidate|5323|(15, 15, 7)|var|float32
bop_5324 = relay.less(call_5314.astype('bool'), var_5323.astype('bool')) # shape=(15, 15, 7)
bop_5327 = relay.less(call_5315.astype('bool'), var_5323.astype('bool')) # shape=(15, 15, 7)
var_5336 = relay.var("var_5336", dtype = "float32", shape = (15, 14, 7))#candidate|5336|(15, 14, 7)|var|float32
bop_5337 = relay.less(call_5314.astype('bool'), var_5336.astype('bool')) # shape=(15, 14, 7)
bop_5340 = relay.less(call_5315.astype('bool'), var_5336.astype('bool')) # shape=(15, 14, 7)
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
call_5341 = func_5276_call()
call_5342 = func_5276_call()
output = relay.Tuple([bop_5324,bop_5337,call_5341,])
output2 = relay.Tuple([bop_5327,bop_5340,call_5342,])
func_5351 = relay.Function([var_5323,var_5336,], output)
mod['func_5351'] = func_5351
mod = relay.transform.InferType()(mod)
mutated_mod['func_5351'] = func_5351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5351_call = mutated_mod.get_global_var('func_5351')
var_5353 = relay.var("var_5353", dtype = "float32", shape = (15, 15, 7))#candidate|5353|(15, 15, 7)|var|float32
var_5354 = relay.var("var_5354", dtype = "float32", shape = (15, 14, 7))#candidate|5354|(15, 14, 7)|var|float32
call_5352 = func_5351_call(var_5353,var_5354,)
output = call_5352
func_5355 = relay.Function([var_5353,var_5354,], output)
mutated_mod['func_5355'] = func_5355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_5397 = relay.TupleGetItem(func_5062_call(), 0)
call_5398 = relay.TupleGetItem(func_5064_call(), 0)
output = call_5397
output2 = call_5398
func_5400 = relay.Function([], output)
mod['func_5400'] = func_5400
mod = relay.transform.InferType()(mod)
mutated_mod['func_5400'] = func_5400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mutated_mod.get_global_var('func_5400')
call_5401 = func_5400_call()
output = call_5401
func_5402 = relay.Function([], output)
mutated_mod['func_5402'] = func_5402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_5473 = relay.TupleGetItem(func_5062_call(), 2)
call_5474 = relay.TupleGetItem(func_5064_call(), 2)
func_3320_call = mod.get_global_var('func_3320')
func_3324_call = mutated_mod.get_global_var('func_3324')
var_5523 = relay.var("var_5523", dtype = "float32", shape = (1280,))#candidate|5523|(1280,)|var|float32
call_5522 = relay.TupleGetItem(func_3320_call(relay.reshape(var_5523.astype('float32'), [16, 16, 5]), relay.reshape(var_5523.astype('uint64'), [16, 16, 5]), ), 0)
call_5524 = relay.TupleGetItem(func_3324_call(relay.reshape(var_5523.astype('float32'), [16, 16, 5]), relay.reshape(var_5523.astype('uint64'), [16, 16, 5]), ), 0)
output = relay.Tuple([call_5473,call_5522,var_5523,])
output2 = relay.Tuple([call_5474,call_5524,var_5523,])
func_5542 = relay.Function([var_5523,], output)
mod['func_5542'] = func_5542
mod = relay.transform.InferType()(mod)
mutated_mod['func_5542'] = func_5542
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5543 = relay.var("var_5543", dtype = "float32", shape = (1280,))#candidate|5543|(1280,)|var|float32
func_5542_call = mutated_mod.get_global_var('func_5542')
call_5544 = func_5542_call(var_5543)
output = call_5544
func_5545 = relay.Function([var_5543], output)
mutated_mod['func_5545'] = func_5545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
call_5596 = func_5276_call()
call_5597 = func_5276_call()
const_5634 = relay.const([[[9.289266,-1.593532,-4.285274,0.678253,0.533900,4.193378,-2.943805],[2.126809,-5.258056,4.252035,-6.380157,0.876878,5.921861,7.104618],[-8.726730,-0.591671,-3.790639,-8.564476,4.708330,8.270117,3.781253],[-0.078814,-0.048339,6.181957,-6.076267,7.703883,5.183938,-9.016108],[9.432333,-5.862573,-8.349855,-6.727352,9.509183,-3.560297,-2.549558],[-3.696615,-1.827979,2.587394,-5.104468,6.393305,-7.322049,5.896756],[2.886283,-5.059001,-7.944675,0.433781,1.525323,6.561107,-5.088722],[6.819467,-2.914557,-6.679309,-2.683669,3.113135,-0.353775,-5.138445],[7.810160,4.155490,1.298914,-5.960647,-9.208864,4.512921,8.918509],[-2.271817,-0.001038,-0.654264,4.558630,6.005785,3.809617,-8.775251],[6.266304,-3.020228,7.598682,-1.851147,8.557673,-6.234505,-6.582651]],[[5.514458,-8.849558,3.402390,-0.054067,6.276375,-5.849183,6.108457],[5.525752,8.337980,-6.628091,-4.490917,0.204264,3.991230,8.139716],[-9.382249,2.924949,9.054363,-3.185693,-5.050425,-3.201852,-3.978376],[-3.115080,-0.530156,-9.188323,-0.470334,7.606263,-1.101407,9.428902],[6.182755,7.924708,-7.137764,-0.680358,-1.205036,-0.909063,0.123624],[2.872023,2.552854,0.246959,6.831946,-6.997910,2.572777,-7.448190],[-8.092390,5.949130,-2.694601,-7.460902,4.528109,-2.247326,7.512731],[-6.972540,-7.197571,-1.512773,0.912874,8.695095,5.151932,-0.114291],[-0.642867,-4.313053,4.494563,-5.253283,-1.417152,-4.688399,0.472159],[-7.084047,-0.547728,7.416472,-2.846355,-7.564755,-5.151508,-8.672767],[2.397487,-2.069139,-6.418465,0.014122,-0.868824,7.921573,-3.966341]],[[-3.255826,7.358193,-9.171046,5.215750,-1.043048,6.877062,2.953727],[-6.672842,-5.427882,-5.796028,0.510828,5.642086,-5.284869,4.732750],[0.917475,-4.197023,7.851858,-8.643760,4.053355,-9.306343,7.793566],[-9.692389,0.096043,-8.152291,0.223815,-8.503031,4.152934,2.518192],[7.975729,-9.266311,-2.161433,-8.813970,-8.255966,5.909899,-9.030452],[3.565154,7.430963,-0.833232,-0.918765,-6.415030,1.137668,4.946935],[4.389551,9.894417,7.824052,3.942480,-1.791776,3.292798,-2.172487],[-5.091753,-1.271293,-8.992680,0.278972,-3.628447,8.245391,3.103350],[3.434436,-3.804057,8.891980,5.316565,4.294209,-7.661091,-8.675425],[-2.906906,-9.731423,3.988657,-7.738368,4.673635,-6.461338,8.831080],[-0.815384,6.305114,0.391830,-5.975375,5.540872,3.047198,-2.602815]],[[-9.126382,-6.796559,7.369200,8.197767,8.169651,-5.479612,7.368378],[3.813800,3.500244,-3.061506,7.001039,-9.750166,-1.603625,-4.352749],[-1.807909,-3.603511,6.386225,6.438717,9.267689,-1.865571,-1.509601],[7.946777,1.621967,-0.715774,9.244256,4.703597,5.555553,-2.287175],[7.361437,9.253703,-2.630310,-4.377100,-6.247415,-9.606900,-2.341727],[4.306631,-4.553091,7.353016,9.047484,-7.125499,-5.591791,4.928760],[1.500164,6.463845,-2.804758,-2.843480,-0.925288,6.131620,-5.068646],[3.105728,-5.757687,7.106028,7.333368,-8.926484,-1.945485,8.655951],[6.023255,-5.376871,5.143771,5.205863,2.780295,-6.263586,1.769533],[-1.892353,5.029378,-4.341254,-6.413054,-9.040571,-9.179476,-7.394065],[5.784448,7.762154,0.524408,7.154194,-1.013257,-9.687076,-0.555236]],[[6.040327,-9.878656,9.187947,4.259953,7.615952,7.811219,-7.727038],[8.995152,4.346555,-5.142027,6.347267,-4.859513,-5.228102,2.901894],[-4.451600,5.111430,6.314977,-8.134827,-9.799075,7.447963,1.962776],[5.530762,-0.544457,8.884159,-3.717454,0.850785,0.450377,-4.554209],[-0.168640,-0.084426,-5.384478,-8.572046,-3.912829,-8.325278,3.079711],[-4.228989,8.383476,-0.786821,-5.124012,3.967632,8.566179,-9.078070],[-3.805954,4.315224,2.508792,-2.315242,0.853124,4.711818,6.587018],[-8.199483,8.683870,3.497904,2.828815,0.820509,2.217471,-6.610228],[2.932382,4.155584,8.881457,-9.927134,0.875494,-0.624834,6.416303],[-7.987837,-9.577256,7.750981,8.860990,-7.578261,-9.056457,6.061734],[-1.285343,0.278613,-2.835007,7.293092,4.626802,-6.304408,-5.689933]],[[0.318130,8.723535,-9.243150,5.067935,8.018969,0.264435,8.162784],[0.695929,9.433001,-8.733363,0.463064,-8.550164,-9.706267,-9.956291],[-6.732490,-6.968057,7.747927,2.845831,3.937793,7.939932,3.119216],[-5.730020,3.818587,3.441343,0.045347,9.205282,9.515508,9.876739],[3.950714,-2.204511,7.330015,4.559691,-6.457249,-1.688959,2.822677],[6.592252,-9.857921,8.903023,6.762618,5.640859,-2.456743,-6.252731],[-2.530603,-9.801639,7.193961,9.517472,4.669794,6.913668,4.138570],[7.114006,-3.762195,3.013728,-4.367384,-4.182876,-6.748890,-7.941265],[-6.108950,-3.141311,-4.590177,-2.052326,7.316509,-2.279467,-2.665270],[9.694923,-6.511031,9.019319,3.994088,4.549090,2.918203,6.802737],[4.530625,7.658551,-1.621909,-7.516475,-9.394470,9.859624,-0.058759]],[[-6.687455,1.506455,-8.623790,-5.719961,-8.264656,3.563285,1.993216],[1.233488,-2.982800,-4.227622,-0.800129,1.143199,4.386923,5.422457],[3.911191,2.701083,2.335594,2.570286,-9.978019,5.169214,8.338152],[-4.082106,0.123984,-9.564553,0.095947,0.861753,0.411535,-5.888248],[-3.363384,0.021455,-8.662238,3.315399,-2.208255,3.262590,-3.670563],[1.026149,6.009235,-7.830675,-4.195329,-2.983542,2.600875,1.783941],[-9.115259,-5.552431,-5.921092,2.391641,-0.883296,-8.896278,3.351704],[5.542299,-9.066052,-8.531468,-4.195345,-1.161155,3.198120,-1.436922],[1.721149,6.606995,-4.097507,-5.427888,-2.468679,0.365798,8.281289],[5.095199,7.763718,-5.930405,9.435753,-5.173428,-7.975519,-8.787234],[5.946849,-5.125405,3.157208,4.925155,1.260442,-7.532573,9.991364]],[[-7.289267,9.766331,4.908280,-5.694383,-3.138986,-2.155227,-0.632211],[8.463893,-9.677423,8.177935,7.087059,3.846824,-8.528097,5.501256],[-8.456487,-8.103899,8.684982,-4.881811,6.167199,-2.155606,-3.875518],[-6.633618,1.203361,-5.338397,-2.131708,0.645940,-5.741876,-1.505743],[6.349046,5.792710,-3.885630,6.668628,7.389432,7.737790,-7.938806],[-3.213264,-1.662031,1.100029,-7.599090,-6.125080,-5.163275,5.292330],[-0.320352,1.083658,1.874162,8.101668,1.575922,6.829953,-4.172379],[1.720406,-4.969405,7.400781,-3.807554,0.529182,-5.094109,2.826325],[5.221159,8.360588,8.713905,0.283071,4.394249,-7.494358,8.398602],[4.738205,-3.645183,0.305276,-2.278529,-4.269836,6.675944,-2.673498],[5.144095,-3.368238,-8.360788,-2.800401,4.328297,-2.196846,-7.208122]],[[0.541117,-2.715667,8.638646,6.122961,1.610292,1.554233,-2.548725],[6.414130,1.226483,-0.125418,9.044911,3.388487,-9.792684,-0.573496],[-6.529618,-1.228981,-9.411266,-2.000357,9.891123,-3.797464,-9.182619],[-3.073389,4.039727,3.241578,-8.487815,-8.463251,-7.114727,7.449323],[-7.969993,6.881578,-7.822830,-7.878483,-3.332162,-7.861581,-9.060076],[-4.986096,3.885128,8.534982,6.444955,5.922745,2.051169,9.711820],[8.857305,-7.084351,-9.290386,-1.265999,2.144721,-8.576369,-1.865821],[-5.658954,2.743620,7.420576,7.217519,6.105060,2.634254,6.921557],[6.072634,-7.001631,1.302378,-1.537403,-7.601866,0.128884,-0.894256],[5.769041,-4.216268,2.342453,-5.008311,-6.352751,-9.965434,-0.156387],[-2.181442,-5.592828,3.626560,7.565479,4.720515,-7.598711,-1.939184]],[[-4.159496,5.513556,2.637289,4.815764,-5.669579,7.263405,0.264665],[-8.531736,3.444929,0.875189,-0.113577,-3.461158,-7.394628,-2.624102],[0.969265,-2.760238,8.060174,0.316668,6.854405,9.860883,8.842485],[0.104735,-8.583513,-6.312689,-5.796961,5.857318,-9.266187,-1.360582],[-9.149476,-0.098570,-5.559704,2.901756,-1.637105,-5.402591,2.289360],[1.688300,3.835580,5.869370,5.180650,4.511118,-5.961506,-1.209180],[8.442143,4.955741,3.999345,3.838629,-3.936298,2.022635,-6.729199],[-7.095982,-7.544736,-3.274699,-8.774320,1.901289,1.580469,-8.537343],[-9.767556,1.188236,4.130889,3.716469,-4.845409,-1.690830,3.047390],[4.288300,-8.663562,1.427536,-4.721167,-6.493627,2.530331,-0.950006],[-9.658455,-1.540973,0.756552,-5.028128,-0.348206,-0.414064,2.839905]],[[5.058773,-2.782714,-5.906693,6.715254,7.709302,7.753940,-3.342344],[-1.941077,4.326016,0.879940,8.975424,4.220444,-1.235447,6.957219],[-1.395611,4.062047,5.567142,0.831205,-0.387005,1.867357,-0.487009],[2.756057,0.088399,0.592646,1.210120,6.031585,4.927223,-9.145130],[-3.805677,-9.255479,-7.858767,1.843853,-1.709993,8.532366,8.039154],[-7.158827,7.007831,-0.074294,8.441162,-4.226283,6.948564,0.517384],[-1.611972,-2.241644,1.807288,-6.168153,-1.571897,9.748462,-5.308319],[-7.269713,2.761978,2.147367,-4.572108,-3.433699,4.808025,-9.636971],[-3.725476,0.464742,-6.078320,7.095415,2.728276,6.239077,1.660304],[-1.108814,-2.136589,3.779071,9.848480,-7.995856,3.572443,-2.098247],[5.295517,7.542870,-3.109890,5.320498,-2.972050,8.524553,-8.135330]],[[6.712394,5.977915,0.802175,-2.814832,-9.952772,0.839346,-8.843195],[8.881951,4.891688,6.389166,-4.465163,3.031491,-6.152283,-1.447769],[6.711630,1.237718,2.885134,-8.094848,-0.232533,3.000335,8.382709],[8.659271,1.827262,-7.123231,-2.126769,7.440523,2.396765,-5.100089],[-6.336303,6.607001,7.865161,8.535632,-4.490213,6.351637,-2.951835],[2.262390,3.889387,3.309206,4.751963,9.518798,-1.008954,-7.983173],[0.949405,5.956621,1.443395,-4.212883,2.463850,5.530736,3.288467],[-8.424577,-0.488064,9.185903,6.361311,-6.183367,-9.201146,-6.359958],[7.336437,8.656741,7.249083,-6.007124,2.509703,2.492300,-2.840352],[-9.579349,0.324944,-8.820759,-6.882784,5.720453,-7.846075,-0.508733],[9.822987,3.589928,5.843787,7.744047,-9.350734,-7.739044,-0.137999]],[[-5.685473,-7.592825,3.876604,-0.213696,6.542016,5.294352,-8.093994],[5.073498,2.671798,4.829052,3.250277,2.512551,2.270724,-2.539658],[3.382984,6.595760,-9.185654,1.550483,5.441215,3.154795,-5.921312],[6.327627,-7.376296,-5.624280,5.584516,5.315148,-1.435707,2.434143],[-6.354939,2.500101,9.718167,2.252812,5.895484,6.572524,-9.059683],[7.852890,3.241872,5.755874,1.110543,2.396563,9.184097,8.390976],[5.454073,4.900033,7.041889,-1.789790,8.759707,-8.135708,-8.243737],[3.593747,-1.752712,9.453530,4.618050,5.489375,-8.262682,6.751792],[0.720505,-7.051026,-8.636755,-6.314161,-9.655985,-2.057450,6.377113],[-1.646595,-5.044956,-3.862059,9.846226,-0.067028,7.797613,0.813649],[3.151400,7.015726,-6.037970,9.565076,-2.963273,-3.589333,-4.143101]],[[-1.584577,0.007190,2.697189,5.485434,-7.093805,-3.798744,7.306973],[-7.180839,6.417182,-1.599990,1.946323,-1.584590,2.549753,-4.851391],[-7.736957,-2.223196,-8.533554,7.428650,6.634935,-8.094420,0.570382],[-5.722086,-9.446922,-5.551967,-3.620678,-0.277896,3.989639,9.351431],[8.723539,-4.485825,-3.164693,1.968069,-1.736343,3.741275,1.094314],[3.937484,-2.644023,1.163687,-6.645501,-9.538298,-7.819111,-1.258895],[-7.396849,-5.464495,-0.321869,0.133696,7.525456,5.813998,8.043791],[0.490882,-9.756223,-2.920893,1.717094,7.931429,6.292633,-5.638336],[6.581805,6.446439,-7.362235,7.316612,-3.787911,-1.797302,0.928202],[0.838092,-5.651151,1.679021,7.008889,3.708415,-2.285775,-1.756508],[-7.766152,2.746999,-0.076886,8.056857,7.880425,7.327988,6.271084]],[[4.467698,6.317085,-5.697244,-9.501299,4.403601,4.852977,-2.408109],[7.137663,4.478040,4.417380,7.145356,9.118743,4.024300,-5.815234],[-6.461938,-6.877654,-2.946754,-7.897210,5.115457,2.155356,-1.628853],[3.094866,-5.213078,5.603955,-6.878025,-7.353070,-2.534597,8.199593],[-9.236819,-0.053471,1.484226,7.853346,3.239059,-0.980022,-6.715861],[7.797875,-7.436213,5.868545,0.724871,-1.154470,7.796605,-6.897260],[-8.488120,1.147268,9.404875,8.089942,-1.260516,-0.897049,-3.215609],[-2.199082,-0.457737,0.985606,-1.887743,4.459978,-8.324298,-8.191562],[3.328575,8.908050,-6.266015,-4.232521,9.459002,-0.372129,-0.596872],[8.467958,-5.267476,5.763393,0.647425,9.985311,3.466976,4.871923],[2.752270,-7.008745,-5.588068,-8.822737,-0.648955,-9.537149,4.240534]]], dtype = "float32")#candidate|5634|(15, 11, 7)|const|float32
bop_5635 = relay.greater_equal(call_5596.astype('bool'), const_5634.astype('bool')) # shape=(15, 11, 7)
bop_5638 = relay.greater_equal(call_5597.astype('bool'), const_5634.astype('bool')) # shape=(15, 11, 7)
output = bop_5635
output2 = bop_5638
func_5641 = relay.Function([], output)
mod['func_5641'] = func_5641
mod = relay.transform.InferType()(mod)
mutated_mod['func_5641'] = func_5641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5641_call = mutated_mod.get_global_var('func_5641')
call_5642 = func_5641_call()
output = call_5642
func_5643 = relay.Function([], output)
mutated_mod['func_5643'] = func_5643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mod.get_global_var('func_5400')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_5646 = func_5400_call()
call_5647 = func_5400_call()
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
const_5653 = relay.const([10,-1], dtype = "int16")#candidate|5653|(2,)|const|int16
const_5654 = relay.const([-2,9,-3,10,8,-6,-2,10,-10,7,-7,-5,-7,-10,9,-8,2,-10,-10,-2,-10,7,-1,-5,3,-6,-8,7,-5,-6,10,-5,1,7,4,2,-10,-7,-5,4,4,-10,-9,10,4,8,9,-6,9,-2,3,-6,-2,-5,-5,6,-7,2,3,-9,7,1,-3,6,2,-2,3,-1,-2,3,5,7,-8,-9,-10,-10,-8,-10,-9,10,4,10,3,-2,6,-2,-9,-5,5,-7,-2,9,7,-10,8,2,5,9,1,-3,-1,10,-2,-4,-8,-2,-10,-2,-4,5,-4,2,-9,7,4,-9,-5,-4,5,-3,-1,-3,10,9,-8,4,3,5,-8,-2,-2,-9,1,3,-3,8,5,-6,9,-9,-2,-10,10,7,-8,2,1,9,5,7,-10,4,8,-10,-5,-3,1,-10,-1,-7,-5,10,-2,-7,9,-7,-10,-4], dtype = "int16")#candidate|5654|(168,)|const|int16
var_5655 = relay.var("var_5655", dtype = "float64", shape = (26, 11))#candidate|5655|(26, 11)|var|float64
call_5652 = relay.TupleGetItem(func_2306_call(relay.reshape(const_5653.astype('int16'), [2, 1, 1]), relay.reshape(const_5654.astype('int16'), [2, 6, 14]), relay.reshape(var_5655.astype('float64'), [13, 22]), ), 2)
call_5656 = relay.TupleGetItem(func_2310_call(relay.reshape(const_5653.astype('int16'), [2, 1, 1]), relay.reshape(const_5654.astype('int16'), [2, 6, 14]), relay.reshape(var_5655.astype('float64'), [13, 22]), ), 2)
func_3159_call = mod.get_global_var('func_3159')
func_3161_call = mutated_mod.get_global_var('func_3161')
call_5675 = relay.TupleGetItem(func_3159_call(relay.reshape(call_5652.astype('float32'), [80, 1])), 0)
call_5676 = relay.TupleGetItem(func_3161_call(relay.reshape(call_5652.astype('float32'), [80, 1])), 0)
func_5139_call = mod.get_global_var('func_5139')
func_5141_call = mutated_mod.get_global_var('func_5141')
call_5678 = relay.TupleGetItem(func_5139_call(relay.reshape(call_5646.astype('int8'), [4, 11, 4])), 0)
call_5679 = relay.TupleGetItem(func_5141_call(relay.reshape(call_5646.astype('int8'), [4, 11, 4])), 0)
const_5682 = relay.const([[0.727289,-1.046629,-8.216383,4.983491],[-3.544473,-4.211284,-2.836340,-0.960399],[-6.729629,-2.874701,-3.828885,-7.401101],[-8.682089,2.325669,-4.989353,-0.697624],[3.264494,-6.861082,-1.544001,1.526814],[4.090230,2.486546,-8.367369,-1.857395],[-5.037799,1.750781,0.062581,-4.716714],[-2.640828,-9.553230,3.408577,-2.948730],[9.389209,-7.016689,-2.288615,-9.702813],[5.089893,5.746965,5.576456,-4.972302],[6.713798,-3.625051,-2.650345,-7.660725],[-9.136701,4.111087,3.363537,1.149966],[-3.529200,-9.460636,4.645950,-3.903459],[-1.478885,-5.967745,-7.469404,9.444168],[-0.595922,-9.795497,0.221874,-4.352217],[9.733358,8.819401,8.365296,0.685407],[-8.459427,5.561737,-6.746238,-8.740046],[1.782646,3.576589,5.027711,4.773244],[-4.492141,-5.727084,-9.834998,-8.757212],[-6.690097,-2.419457,-3.133758,-0.405546]], dtype = "float32")#candidate|5682|(20, 4)|const|float32
bop_5683 = relay.left_shift(call_5652.astype('uint16'), relay.reshape(const_5682.astype('uint16'), relay.shape_of(call_5652))) # shape=(20, 4)
bop_5686 = relay.left_shift(call_5656.astype('uint16'), relay.reshape(const_5682.astype('uint16'), relay.shape_of(call_5656))) # shape=(20, 4)
output = relay.Tuple([call_5646,const_5653,const_5654,var_5655,call_5675,call_5678,bop_5683,])
output2 = relay.Tuple([call_5647,const_5653,const_5654,var_5655,call_5676,call_5679,bop_5686,])
func_5689 = relay.Function([var_5655,], output)
mod['func_5689'] = func_5689
mod = relay.transform.InferType()(mod)
var_5690 = relay.var("var_5690", dtype = "float64", shape = (26, 11))#candidate|5690|(26, 11)|var|float64
output = func_5689(var_5690)
func_5691 = relay.Function([var_5690], output)
mutated_mod['func_5691'] = func_5691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
call_5693 = func_5276_call()
call_5694 = func_5276_call()
output = call_5693
output2 = call_5694
func_5724 = relay.Function([], output)
mod['func_5724'] = func_5724
mod = relay.transform.InferType()(mod)
mutated_mod['func_5724'] = func_5724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5724_call = mutated_mod.get_global_var('func_5724')
call_5725 = func_5724_call()
output = call_5725
func_5726 = relay.Function([], output)
mutated_mod['func_5726'] = func_5726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mod.get_global_var('func_5400')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_5740 = func_5400_call()
call_5741 = func_5400_call()
func_2606_call = mod.get_global_var('func_2606')
func_2609_call = mutated_mod.get_global_var('func_2609')
const_5748 = relay.const([[-6,6,10,-10,-8,9,-7,1,-8,-4,-4,5,4,2,-9,8,7,-7,-1,8,-2,-1,-7,-6,1,-5,-7,-10,-4,-10,9,2,-3,-2,4,6,-6,-4,-9,10,-4,-7,-5,-1,-1,6,8,5],[5,-8,7,8,10,8,4,-1,3,9,-7,1,-1,8,-4,-3,-10,1,-6,3,-1,-7,-9,5,-8,-1,5,3,-10,-7,3,5,-2,1,5,4,-4,-3,9,4,2,-2,-9,1,7,-4,-10,6],[-7,-8,2,10,-2,7,-1,-9,-8,10,-8,-5,-8,9,-7,-10,3,-7,-1,-1,2,-6,-10,-5,-6,4,-5,2,9,5,-8,10,-4,-8,-6,10,8,-10,-1,-7,-2,-2,1,2,7,5,2,-9],[-4,1,-8,5,-7,4,-10,4,1,8,-1,-1,-10,4,-4,8,1,-8,-2,-5,-8,6,8,-1,-7,-1,1,-5,-2,3,-3,6,4,-1,8,5,4,7,3,-1,5,7,7,9,2,-7,-4,-6],[-8,-7,4,-4,5,-2,-7,9,6,10,-7,-5,2,3,-3,-6,-10,7,5,4,-3,8,-9,6,2,-3,6,9,7,3,3,-3,2,-6,-3,9,-7,10,4,5,1,-7,5,-4,-10,-2,-6,-5],[-7,3,3,10,9,-10,-3,2,-3,2,7,-10,-2,-1,9,5,8,8,2,-5,-7,7,-10,-7,-10,-10,-6,3,5,6,-9,-4,3,-10,1,9,10,7,4,2,-4,10,-5,7,6,-5,-8,-4],[10,-9,1,8,-3,1,10,3,6,-3,-6,-10,-6,9,-6,7,9,7,-2,-3,-2,2,8,6,-9,-4,7,-7,-10,7,9,2,-9,-10,-5,-6,5,-9,-5,6,1,-9,5,1,4,3,-3,-3],[-7,-1,-6,-9,7,6,10,6,-4,-8,-2,-6,9,2,-8,4,10,6,-4,-10,1,-5,-10,2,9,-2,-1,9,-2,3,8,3,-5,-5,-4,-2,-9,-7,1,2,9,10,4,3,-2,6,-6,-7],[10,9,-5,2,-9,4,8,7,1,1,-9,-3,-1,-1,10,7,8,-5,-7,8,7,4,-7,7,10,-3,-2,-10,-7,-1,8,6,-4,-8,1,-4,9,4,-9,-4,-10,-8,5,-7,-10,7,6,4],[8,10,-10,-6,2,-5,-2,10,5,-4,7,-3,2,4,5,10,10,3,-2,-8,-10,5,-1,-5,4,-9,5,-9,3,-4,3,-4,-4,4,-5,-2,5,-8,-2,-5,6,-9,-7,5,4,-10,5,-10],[10,-5,-6,1,-4,-10,-6,5,10,-3,4,8,-9,-5,-2,-3,8,-9,-7,-8,1,-9,4,9,10,10,9,-2,-6,-5,3,-1,8,-7,-10,7,-4,8,-2,9,-6,6,9,-4,-6,-1,6,9],[-4,8,1,7,2,3,-2,-6,3,4,3,-5,8,7,2,8,4,9,-3,-3,2,1,-10,2,2,-7,5,-5,10,7,-9,7,4,1,4,4,-1,2,5,-7,2,-1,6,10,-7,-9,5,-2],[-3,6,-8,-5,-7,-2,-3,-1,-1,-1,-8,2,-1,6,8,-3,-2,8,1,-2,-2,-1,1,1,-4,-6,5,-2,10,2,-7,-9,-8,-10,2,-7,6,1,-2,7,5,10,5,10,-1,5,1,-6],[1,-6,-10,1,-1,-1,-5,8,-4,-3,2,6,6,-9,5,4,3,-1,4,-9,4,-7,8,2,6,3,-9,-9,-10,1,-6,-1,8,-2,-6,7,-10,-1,-10,2,-8,-3,-4,1,-5,-9,-1,9],[-4,10,-3,2,-1,-4,5,8,1,-2,8,-8,8,-3,8,8,5,2,5,3,-6,-9,-1,6,-10,6,2,10,-1,-10,-7,9,-6,-1,-4,9,9,2,-4,-3,-9,-2,-3,2,5,3,10,-3],[-2,9,9,7,-7,8,-7,8,10,-6,4,8,-2,1,-2,10,1,9,9,-7,-5,8,6,8,7,10,4,3,7,-9,10,-3,9,8,10,-2,10,6,7,-3,-10,8,-1,1,4,-6,-7,5],[3,-4,9,-7,-8,-9,5,-3,-5,8,-3,5,-8,2,-2,-1,-10,-9,1,-2,-6,-5,-2,-7,-9,-4,-5,10,10,9,10,-8,-5,3,-10,6,-5,9,9,-4,-3,3,-5,-9,6,8,8,-8],[2,10,6,10,-6,9,-6,-6,-3,-7,1,-5,6,4,-1,8,6,7,-3,-5,7,6,1,2,-10,-2,5,-9,3,4,8,9,-9,7,-5,-2,-8,-6,8,-3,-5,9,-4,-10,2,3,7,5],[10,9,-4,-10,9,1,1,8,-9,-7,-7,-10,-10,-10,-8,-4,-7,-6,6,-3,-1,4,8,-10,-1,10,4,9,-6,3,-6,-2,2,3,-3,4,-3,-8,2,-10,4,3,1,-4,-2,8,-5,-10],[10,4,-4,-7,-9,-9,-4,-4,-10,-6,10,7,8,2,10,10,-9,-3,-3,9,-7,2,9,10,6,2,8,10,9,-9,7,-6,4,-9,-10,-10,9,8,8,9,4,2,1,9,-5,8,8,6],[3,-10,6,-10,1,-2,6,5,-3,5,6,-5,-4,10,-6,5,-4,4,4,4,2,6,-9,9,5,-7,7,3,4,-5,-2,2,7,5,-10,9,-4,1,6,-5,-5,4,-6,-5,-10,3,-3,9],[2,3,4,-3,9,-4,-5,5,-3,2,-6,10,-9,10,-9,-2,-7,-3,7,1,-2,-8,-6,-7,-2,10,7,-3,-4,-6,4,-6,-3,1,-6,5,-7,-7,7,-4,6,-6,6,9,4,5,-5,8],[1,-7,2,-9,6,6,3,-4,-5,-1,-4,3,8,-6,10,-1,5,-9,2,8,5,3,5,6,10,1,8,9,-1,-6,-3,3,5,-7,-2,-6,10,-7,-7,-4,-10,8,-8,-3,4,-9,8,-6],[-4,1,9,-2,-7,3,4,8,2,-4,-2,9,-8,-6,-8,3,-7,-7,4,-5,-2,4,8,10,9,-2,10,-1,-8,9,9,-10,-6,1,8,-10,8,6,7,6,9,7,9,-10,-4,5,-8,-8],[-3,4,-8,-4,10,2,4,-3,6,-2,7,4,-10,-5,-5,3,-5,-9,-3,9,3,-3,9,-1,6,-2,7,6,-4,-6,-7,4,7,-7,8,-6,-7,-9,-4,3,-6,-5,-8,10,6,-10,-4,5],[2,2,7,-3,6,1,4,10,-9,-3,-9,-1,-7,-8,-9,-2,6,-1,3,-9,5,1,-4,-1,7,1,7,9,-5,8,-1,-5,6,9,-9,10,-8,5,-9,8,2,-2,-3,6,-9,4,-5,-6],[-4,-10,-5,6,9,-9,10,6,7,1,-10,-10,1,2,2,7,-5,6,5,-5,-5,-5,-2,-5,1,-10,4,4,5,-1,4,-2,5,10,2,-6,-2,10,-4,-4,4,7,-8,-3,-5,-10,4,-7],[-2,9,-2,2,6,9,-8,6,-9,-10,-2,-1,-9,7,5,-2,-2,-4,6,10,8,3,-2,-8,9,-9,-10,1,3,5,-3,6,10,2,4,9,3,7,-10,-8,10,-2,-10,-4,-3,1,-5,-5]], dtype = "int32")#candidate|5748|(28, 48)|const|int32
call_5747 = relay.TupleGetItem(func_2606_call(relay.reshape(const_5748.astype('int32'), [1344,])), 1)
call_5749 = relay.TupleGetItem(func_2609_call(relay.reshape(const_5748.astype('int32'), [1344,])), 1)
output = relay.Tuple([call_5740,call_5747,const_5748,])
output2 = relay.Tuple([call_5741,call_5749,const_5748,])
func_5803 = relay.Function([], output)
mod['func_5803'] = func_5803
mod = relay.transform.InferType()(mod)
mutated_mod['func_5803'] = func_5803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5803_call = mutated_mod.get_global_var('func_5803')
call_5804 = func_5803_call()
output = call_5804
func_5805 = relay.Function([], output)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_5885 = relay.TupleGetItem(func_5062_call(), 2)
call_5886 = relay.TupleGetItem(func_5064_call(), 2)
func_5641_call = mod.get_global_var('func_5641')
func_5643_call = mutated_mod.get_global_var('func_5643')
call_5892 = func_5641_call()
call_5893 = func_5641_call()
output = relay.Tuple([call_5885,call_5892,])
output2 = relay.Tuple([call_5886,call_5893,])
func_5903 = relay.Function([], output)
mod['func_5903'] = func_5903
mod = relay.transform.InferType()(mod)
output = func_5903()
func_5904 = relay.Function([], output)
mutated_mod['func_5904'] = func_5904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5903_call = mod.get_global_var('func_5903')
func_5904_call = mutated_mod.get_global_var('func_5904')
call_5951 = relay.TupleGetItem(func_5903_call(), 1)
call_5952 = relay.TupleGetItem(func_5904_call(), 1)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_5955 = relay.TupleGetItem(func_5062_call(), 2)
call_5956 = relay.TupleGetItem(func_5064_call(), 2)
func_3159_call = mod.get_global_var('func_3159')
func_3161_call = mutated_mod.get_global_var('func_3161')
var_5988 = relay.var("var_5988", dtype = "float32", shape = (80,))#candidate|5988|(80,)|var|float32
call_5987 = relay.TupleGetItem(func_3159_call(relay.reshape(var_5988.astype('float32'), [80, 1])), 0)
call_5989 = relay.TupleGetItem(func_3161_call(relay.reshape(var_5988.astype('float32'), [80, 1])), 0)
output = relay.Tuple([call_5951,call_5955,call_5987,var_5988,])
output2 = relay.Tuple([call_5952,call_5956,call_5989,var_5988,])
func_5991 = relay.Function([var_5988,], output)
mod['func_5991'] = func_5991
mod = relay.transform.InferType()(mod)
var_5992 = relay.var("var_5992", dtype = "float32", shape = (80,))#candidate|5992|(80,)|var|float32
output = func_5991(var_5992)
func_5993 = relay.Function([var_5992], output)
mutated_mod['func_5993'] = func_5993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mod.get_global_var('func_5400')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_6044 = func_5400_call()
call_6045 = func_5400_call()
var_6054 = relay.var("var_6054", dtype = "int8", shape = (4, 11, 4))#candidate|6054|(4, 11, 4)|var|int8
bop_6055 = relay.maximum(call_6044.astype('uint8'), relay.reshape(var_6054.astype('uint8'), relay.shape_of(call_6044))) # shape=(4, 11, 4)
bop_6058 = relay.maximum(call_6045.astype('uint8'), relay.reshape(var_6054.astype('uint8'), relay.shape_of(call_6045))) # shape=(4, 11, 4)
output = relay.Tuple([bop_6055,])
output2 = relay.Tuple([bop_6058,])
func_6068 = relay.Function([var_6054,], output)
mod['func_6068'] = func_6068
mod = relay.transform.InferType()(mod)
mutated_mod['func_6068'] = func_6068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6069 = relay.var("var_6069", dtype = "int8", shape = (4, 11, 4))#candidate|6069|(4, 11, 4)|var|int8
func_6068_call = mutated_mod.get_global_var('func_6068')
call_6070 = func_6068_call(var_6069)
output = call_6070
func_6071 = relay.Function([var_6069], output)
mutated_mod['func_6071'] = func_6071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5724_call = mod.get_global_var('func_5724')
func_5726_call = mutated_mod.get_global_var('func_5726')
call_6162 = func_5724_call()
call_6163 = func_5724_call()
func_5201_call = mod.get_global_var('func_5201')
func_5205_call = mutated_mod.get_global_var('func_5205')
var_6165 = relay.var("var_6165", dtype = "int16", shape = (168,))#candidate|6165|(168,)|var|int16
const_6166 = relay.const([8.681773,6.371529,4.005756,-8.387846,-8.711192,8.439301,-9.398639,-5.873122,-9.505937,-3.871550,5.515553,2.926989,-7.525706,-1.310652,1.768538,-0.720069,5.080580,-3.681213,4.038328,8.244413,-4.287536,5.894525,8.841709,6.063177,-8.383961,3.522195,-8.230104,-7.159479,4.931148,-5.231799,-1.486646,6.937816,-2.389769,-0.998887,-9.577347,8.420063,1.427203,-7.659447,-7.920929,-3.970636,6.394997,-5.285777,-2.643830,-5.367537,9.500723,0.906521,-7.466883,-4.420481,-9.163188,-3.515833,-5.107403,1.135040,-4.881891,-5.456402,3.252213,-7.665744,-5.006380,-1.600968,3.449632,-4.825440,-9.845705,-8.029982,0.459721,1.215529,7.788354,-8.373345,-5.713817,8.355351,7.623547,7.311172,-8.363434,1.761611,1.187959,-7.622182,9.469537,2.813224,-5.126489,-8.873238,-5.529457,1.694281,6.568010,8.137336,-5.016271,-4.125196,5.749873,-1.777883,8.889839,-1.634652,-7.132159,3.598207,-4.693149,2.971024,-4.968033,-3.450454,1.502761,3.209653,5.103421,-0.306577,2.567757,-7.528895,4.072197,2.572276,-5.559169,5.355770,-9.758469,-2.152609,4.767530,3.849622,7.897861,2.433391,7.999454,0.617368,6.909412,-0.519050,9.570882,7.801121,-3.730237,3.178166,8.124158,8.079911,-8.288713,-8.575245,8.900017,4.215834,4.681866,1.695152,6.352948,3.076921,9.238713,-8.569045,-0.453961,1.046453,-1.596194,-9.907585,5.800204,3.825732,6.772749,8.526437,6.061478,-3.010356,3.139779,8.426749,-1.866758,-0.084474,4.692151,-9.201162,-6.051771,-6.856152,5.204325,-0.998229,-7.557978,-7.425115,7.993501,-4.435627,-3.226919,1.380284,-4.957794,4.502419,-8.888986,-8.741230,-8.347199,2.157301,-3.956330,2.102713,-3.912161,-8.156135,6.585716,1.246510,6.194149,2.659561,-6.563686,2.181030,7.407164,9.063363,-3.830418,0.560094,6.966649,-7.551399,-2.489022,5.558869,1.368277,0.352013,-0.488977,-7.929746,-7.182176,8.449890,-0.740732,-8.112636,5.816715,7.532919,7.117593,-7.560153,-1.599536,5.196019,-1.890957,5.859961,-3.784974,-4.258198,8.209915,-5.246509,-1.417890,-1.595806,6.886600,0.576702,9.039062,-6.672290,4.208858,5.607752,4.644025,9.629230,2.541625,-2.083111,1.549834,-1.695412,4.677833,5.647594,-2.826116,-5.061725,-8.621894,9.066321,9.891334,-1.509078,-8.354237,-1.566345,-2.072538,-0.844007,-9.979942,-9.189602,3.825924,6.890012,9.815107,3.771764,-5.612525,5.208488,6.813701,-1.043022,2.904599,7.633867,-6.198300,0.776304,8.066425,-7.997967,-3.908070,-3.399851,1.286203,-4.603332,-0.252629,4.456683,-4.894402,3.617439,5.709112,-6.211465,-7.467534,-8.250968,9.969107,-6.200452,8.114706,-4.524448,8.686771,-6.956927,-8.902826,5.091850,-2.989889,-8.069485,-0.146790,-9.574110,7.273152,-2.786895,-6.926219,1.526376,-4.373989,3.773446,-1.852163,-1.154394,-4.592199,9.693297,3.856622,2.028554,1.213759,-0.376063,1.432556,0.782792,3.049592,-7.965758,-0.570432,4.811244], dtype = "float64")#candidate|6166|(286,)|const|float64
call_6164 = relay.TupleGetItem(func_5201_call(relay.reshape(var_6165.astype('int16'), [84, 2]), relay.reshape(const_6166.astype('float64'), [286,]), relay.reshape(call_6162.astype('float32'), [7, 15]), ), 3)
call_6167 = relay.TupleGetItem(func_5205_call(relay.reshape(var_6165.astype('int16'), [84, 2]), relay.reshape(const_6166.astype('float64'), [286,]), relay.reshape(call_6162.astype('float32'), [7, 15]), ), 3)
output = relay.Tuple([call_6162,call_6164,var_6165,const_6166,])
output2 = relay.Tuple([call_6163,call_6167,var_6165,const_6166,])
func_6170 = relay.Function([var_6165,], output)
mod['func_6170'] = func_6170
mod = relay.transform.InferType()(mod)
var_6171 = relay.var("var_6171", dtype = "int16", shape = (168,))#candidate|6171|(168,)|var|int16
output = func_6170(var_6171)
func_6172 = relay.Function([var_6171], output)
mutated_mod['func_6172'] = func_6172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6256 = relay.var("var_6256", dtype = "float32", shape = (2, 12, 11))#candidate|6256|(2, 12, 11)|var|float32
uop_6257 = relay.exp(var_6256.astype('float32')) # shape=(2, 12, 11)
output = relay.Tuple([uop_6257,])
output2 = relay.Tuple([uop_6257,])
func_6259 = relay.Function([var_6256,], output)
mod['func_6259'] = func_6259
mod = relay.transform.InferType()(mod)
var_6260 = relay.var("var_6260", dtype = "float32", shape = (2, 12, 11))#candidate|6260|(2, 12, 11)|var|float32
output = func_6259(var_6260)
func_6261 = relay.Function([var_6260], output)
mutated_mod['func_6261'] = func_6261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_6272 = relay.TupleGetItem(func_5062_call(), 1)
call_6273 = relay.TupleGetItem(func_5064_call(), 1)
func_3780_call = mod.get_global_var('func_3780')
func_3782_call = mutated_mod.get_global_var('func_3782')
call_6276 = relay.TupleGetItem(func_3780_call(relay.reshape(call_6272.astype('float32'), [15, 1, 7])), 0)
call_6277 = relay.TupleGetItem(func_3782_call(relay.reshape(call_6272.astype('float32'), [15, 1, 7])), 0)
var_6282 = relay.var("var_6282", dtype = "float32", shape = (15, 16, 7))#candidate|6282|(15, 16, 7)|var|float32
bop_6283 = relay.bitwise_or(call_6276.astype('int8'), var_6282.astype('int8')) # shape=(15, 16, 7)
bop_6286 = relay.bitwise_or(call_6277.astype('int8'), var_6282.astype('int8')) # shape=(15, 16, 7)
bop_6288 = relay.right_shift(call_6272.astype('uint16'), relay.reshape(call_6276.astype('uint16'), relay.shape_of(call_6272))) # shape=(15, 1, 7)
bop_6291 = relay.right_shift(call_6273.astype('uint16'), relay.reshape(call_6277.astype('uint16'), relay.shape_of(call_6273))) # shape=(15, 1, 7)
output = relay.Tuple([bop_6283,bop_6288,])
output2 = relay.Tuple([bop_6286,bop_6291,])
func_6293 = relay.Function([var_6282,], output)
mod['func_6293'] = func_6293
mod = relay.transform.InferType()(mod)
mutated_mod['func_6293'] = func_6293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6294 = relay.var("var_6294", dtype = "float32", shape = (15, 16, 7))#candidate|6294|(15, 16, 7)|var|float32
func_6293_call = mutated_mod.get_global_var('func_6293')
call_6295 = func_6293_call(var_6294)
output = call_6295
func_6296 = relay.Function([var_6294], output)
mutated_mod['func_6296'] = func_6296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5641_call = mod.get_global_var('func_5641')
func_5643_call = mutated_mod.get_global_var('func_5643')
call_6325 = func_5641_call()
call_6326 = func_5641_call()
func_5542_call = mod.get_global_var('func_5542')
func_5545_call = mutated_mod.get_global_var('func_5545')
const_6330 = relay.const([-1.937632,5.137020,2.360057,-7.887730,-1.743589,7.499777,-7.757510,-1.475677,3.126543,9.479962,-7.011595,-4.923229,0.182966,4.328630,2.970604,6.948633,-7.372823,4.282298,-7.350440,4.613450,-7.980925,2.141472,3.303500,-1.060452,-8.361222,9.235425,-6.888482,1.263081,7.729801,-4.605712,-8.595994,-5.546244,-1.022114,5.128962,4.011232,-3.961382,6.670918,-2.228397,9.751408,-8.606568,7.846414,4.190585,1.644598,4.415234,4.989803,-3.638754,9.896265,-1.198787,-6.410348,6.064642,3.010284,2.235947,0.682624,7.379652,-8.717764,-4.940098,-6.126551,1.661698,-3.192225,-1.023222,6.077319,-1.241204,7.938606,-2.511461,-0.067021,-5.755060,5.670695,-2.047225,4.442571,-9.656499,4.432538,1.881525,-1.972094,-4.993387,-7.766365,-6.484638,2.776540,-4.704130,-6.998377,-5.169614,-5.385352,-5.406835,-8.818062,-8.291016,-6.606390,4.328828,5.170021,3.891265,-2.792016,0.111908,-0.518283,-4.430280,-6.628126,6.873543,0.982532,2.716284,-9.033299,-4.574497,-4.521395,-8.098461,7.815684,9.305929,3.123944,-1.192922,-8.645819,-8.947835,9.137169,-7.069212,3.831551,-5.700576,1.249804,9.444381,6.871544,-8.203276,-9.996298,4.525646,-3.754052,9.434761,4.605476,4.686196,4.448756,7.988495,-3.127560,-8.427426,3.223002,7.128925,-5.266511,-5.025284,-4.966411,1.229746,1.084623,-8.487068,0.766187,6.637860,3.905888,-2.290955,-8.189477,4.513702,8.914972,5.526451,5.923888,5.753532,9.274252,5.574797,-5.275544,-0.958677,9.763714,-8.376967,-4.369776,-2.521250,-1.265306,-6.047242,-0.518204,-2.731980,1.935494,-2.456954,-6.864832,-2.943677,1.912568,7.186556,6.339232,7.013194,-4.074132,9.863438,-0.681483,-4.742816,0.626715,0.047684,-4.418503,3.701267,5.118267,-3.747748,-3.222753,6.660189,8.550184,1.721332,2.469938,7.840950,-3.615221,-0.360604,-4.323328,-3.019203,-0.816079,2.668248,4.268026,-4.183019,-1.830853,-7.740507,-7.328394,-7.346414,-5.674546,-5.265485,1.688687,8.002128,-3.103820,-1.484402,-6.292412,-0.824261,-6.868010,8.727514,0.437534,1.952145,5.232798,-8.175495,9.162243,6.629493,-8.465321,1.754141,0.442872,-0.208077,4.559204,0.449049,9.578442,-8.477004,4.987072,2.352829,4.489851,3.162820,-7.845376,-6.425818,-7.509905,6.007568,2.062372,-2.229995,5.478145,6.934433,5.551485,-7.410503,-6.381832,1.483211,-1.031608,-3.794073,8.018378,-3.305744,7.203382,6.152431,-9.067433,6.238340,-5.931624,5.147546,-4.277616,-9.014081,2.654104,-3.358021,6.070587,7.407614,-2.880044,1.822821,4.419534,0.320679,4.553466,6.251923,0.517388,2.316806,-3.189382,7.302134,7.277863,4.128729,-2.562798,4.337082,5.136388,3.113934,-8.361201,8.020952,8.498003,2.694727,0.202626,-2.936861,1.245943,-1.496919,-3.333060,-0.350436,9.951668,-0.132265,0.460468,4.054443,4.411005,-4.508713,-6.561511,7.744117,-4.494423,-1.371337,1.975971,-7.145230,-2.703451,1.810038,-8.938992,0.730297,9.574168,1.927117,0.649938,4.494649,3.758483,-9.418916,4.610715,3.088693,-4.731984,7.066074,9.891906,-2.332487,4.442235,-8.979102,3.019397,6.736762,-1.967056,9.020479,-9.250120,-1.974797,-0.906765,9.781662,-5.769704,7.545930,-5.656949,4.414725,-8.843686,7.305131,4.312096,1.802909,4.770814,9.098123,9.014590,6.908742,6.877634,-6.963023,7.075122,7.787465,-9.217841,-5.193922,1.613430,-2.845208,-2.669287,1.139798,-4.800430,-4.100270,-4.246968,5.283980,0.329528,8.192987,-1.133626,-8.559281,6.252704,7.774667,0.102464,-0.640629,0.130193,-7.566384,-7.278960,7.487113,5.564626,3.948992,2.786177,1.264003,9.943273,8.822355,-0.892835,3.683617,5.590460,-8.942173,1.387815,-1.102936,3.401349,-1.914797,-7.452012,-4.036747,0.547887,6.449897,-4.275031,6.480352,9.657607,8.515158,4.175304,8.388273,-1.806653,8.896553,-8.546179,-3.738857,-1.793237,-1.887191,7.889798,-5.267571,-2.841492,1.688074,0.208686,-4.039413,-0.901763,-8.473115,5.670952,-4.372743,0.453295,3.777110,6.210251,-5.547178,-6.581816,8.095018,4.572762,-8.892501,0.938333,4.015417,4.217210,-7.994832,6.425514,4.569234,-8.889339,-5.382053,4.243968,-4.900304,-6.729012,-4.320925,8.699064,-3.602473,-6.139481,-2.716472,-3.771843,-3.357558,3.635176,9.380794,8.682288,8.614108,6.695887,-9.353829,4.999365,2.653982,6.432548,-2.048174,9.722834,4.565521,-1.335423,-7.134686,8.214352,-0.479207,9.849301,-4.115786,-4.259603,-8.204141,0.187731,-8.544162,5.081180,-2.966164,1.536218,6.874369,9.647852,-7.651841,-1.307658,6.466609,4.467642,5.762180,7.151476,-2.029228,9.766994,6.169370,7.131546,-4.691323,-3.378967,9.079255,8.345895,-6.084160,8.701598,-2.338483,4.105484,-8.589826,6.487464,5.911807,8.839915,-9.128539,5.886125,9.425841,9.462941,0.873579,3.451970,-5.522517,-2.178794,1.619205,1.044489,5.155737,1.056626,-3.612318,6.882793,-0.261087,9.827610,-1.979909,-6.511820,6.529001,9.118828,1.004586,2.746061,1.404629,9.254290,1.108466,2.888268,8.198829,-1.737348,4.884826,-0.039787,-4.572622,6.988401,-8.663727,3.100306,4.707514,-4.136137,2.745140,-5.593009,9.904291,6.403252,6.436647,-4.610396,-9.143651,-7.895868,-5.151922,4.165908,-9.821202,4.562737,-5.676580,-7.527382,7.095018,7.009892,-6.520349,-8.164152,4.776266,-0.012003,-2.518656,0.742984,-5.729741,-4.118498,-4.054356,6.577926,-6.387738,2.658219,1.479857,2.731574,7.931860,4.290498,-5.212067,9.361522,-2.001586,-1.737718,-1.537945,8.707134,2.509204,-4.435152,9.127567,-4.762711,-0.804657,-7.405183,9.374582,6.961271,-9.961473,-8.627668,-4.885213,-8.358367,-5.542560,1.146634,8.158849,2.272785,-5.610767,-5.245373,1.487462,-7.395904,0.781317,-3.600750,-3.661980,3.027565,-1.930507,2.165766,8.507653,6.254005,1.418425,3.190756,1.976861,3.710486,-3.925181,0.194448,7.724685,2.969228,7.733205,5.802305,8.650294,-4.627413,7.156838,-1.635838,-3.209681,-3.886474,-9.878408,-9.489132,-9.835931,-8.860752,3.887238,-1.226362,0.551586,7.550103,5.714242,-0.232237,2.940190,2.693846,-4.426810,-0.841256,7.481555,-2.642637,-0.988772,-4.346610,5.205369,4.071711,-7.119963,6.503858,5.328400,-4.161952,1.440259,-4.947094,-4.485381,0.565376,0.234180,8.984276,-2.133344,0.904102,-4.625071,2.277058,-9.624114,-1.278688,0.814823,-6.131886,2.346818,1.268254,9.963888,7.996141,8.970023,-3.928640,-4.277339,-7.916348,-7.659357,3.413566,3.931076,-7.574143,0.661054,-0.001927,-5.909497,-4.774731,-8.312954,-3.185085,0.519807,8.963002,8.268252,5.725158,7.495945,-1.693038,0.763112,-8.334305,6.118522,-6.729409,3.962518,5.951844,1.586476,9.941561,2.137794,4.762606,-3.900880,-0.306518,9.426518,2.466586,1.251490,-2.887838,-8.957316,1.934998,2.515199,-2.643769,-9.453493,-6.894546,3.116088,8.105736,6.730125,4.272086,1.547811,0.287333,-3.543007,2.569160,7.754634,-8.682423,-8.953462,0.463885,-1.425721,9.004750,8.058153,-8.166120,9.052841,0.305414,9.370461,-3.674500,-2.954358,5.857588,2.621996,-7.597870,-7.813283,-5.663055,-8.669044,-1.317955,2.485982,-2.012445,1.250085,-0.150506,-9.989380,4.262708,-6.538055,7.034324,-8.681610,9.105634,3.518557,-0.436435,6.921066,8.133970,-8.909598,-9.507463,8.778389,-5.240421,6.566804,3.017261,-6.247425,1.966555,4.404341,-5.090648,5.172193,8.064017,8.414343,-8.042159,-5.392500,0.128707,8.282543,-3.939669,-9.490305,7.180240,8.460772,6.105811,-5.167379,5.378066,6.602876,9.187122,6.683326,-7.844178,-8.181020,5.954408,-0.539424,7.932622,-5.196630,-1.460839,-2.945499,9.943196,-2.396923,5.371707,5.026647,-4.372909,-7.878347,-3.192768,-0.244045,5.097345,8.057867,8.981269,5.290012,-5.709101,3.061595,-4.302918,-2.385647,1.061874,-2.479708,5.010386,3.283216,8.483782,8.647293,-3.946200,-9.030349,-5.680469,-6.035770,8.651357,-7.356996,-1.025716,-5.724835,0.557769,-4.011863,6.764130,-2.183964,-6.941953,6.746958,3.096565,0.353954,-1.779190,3.697582,-6.248827,0.914522,3.944688,0.210400,7.230858,-8.581528,-8.451550,3.741344,-3.050446,4.091977,-9.052348,-5.019704,9.384166,8.330261,1.168756,8.962092,-3.353382,7.769511,-5.951505,1.349826,-9.464146,8.994071,-8.880898,-5.115760,-6.576581,-6.633601,-5.639570,-7.233137,-2.343432,-0.239138,8.291684,8.982193,-2.540311,0.404980,3.307878,-7.284709,1.744381,4.590818,-5.969993,-3.199128,3.761549,6.798776,7.774161,6.354438,2.969906,1.944350,6.813999,4.092340,1.862324,9.641425,7.208722,-3.682283,4.701366,6.371647,6.823358,-7.225843,-0.577145,4.853601,5.402832,4.556234,-5.667810,4.686117,-0.680161,8.259580,-0.476250,-1.156031,-0.534409,-8.600660,-6.764247,9.701541,3.523079,-5.518236,-6.719992,3.788503,3.341516,-5.263966,0.882974,9.812300,-7.973501,2.014161,8.958420,4.180556,-0.642463,3.748542,2.525808,-9.304025,-1.826556,-5.607317,-4.093876,4.076457,-4.978023,6.239862,3.649115,0.116279,3.536389,-3.271100,1.321421,-8.669905,4.387328,-6.117518,8.245245,7.242051,-2.858115,-9.085682,3.315932,-3.518236,8.148784,8.186236,-1.445025,1.185535,9.593790,8.312627,9.802744,-4.970757,3.878245,3.634431,-6.180395,3.552281,-6.253995,7.627735,9.758921,9.665362,-5.510903,2.443247,-1.182943,-4.938316,3.372369,-1.993776,-1.463508,1.800065,7.304238,-1.439890,-2.516310,-2.428750,2.708074,-4.742498,4.324048,5.635718,9.975827,5.830281,0.250960,7.142809,9.536578,8.182149,0.819508,9.343048,8.576962,-3.261516,9.064451,-4.672343,-8.538785,8.368769,8.846767,3.357976,-3.755503,-6.816340,8.592370,-6.729370,9.001935,-7.861601,-3.195645,2.519493,7.692678,5.289369,5.804559,9.037359,8.288530,5.837537,4.275961,2.541325,6.776955,-2.660253,8.164932,1.671557,-2.930056,9.229428,-1.520977,7.823703,-9.640361,-4.869769,-1.870327,-0.373201,4.241251,-9.921913,-1.987426,-4.504230,5.652033,-4.296779,2.819815,4.918075,1.728811,-4.726772,-8.527156,3.570786,3.060158,-0.777230,0.771060,0.859934,-8.575635,-5.383497,9.638336,5.091932,0.922314,2.981225,8.242987,-3.809374,-4.695244,-4.439583,-3.078233,2.521707,-5.515862,-2.587795,-7.374161,-1.845580,5.467354,-2.946293,1.055220,-3.902400,4.559995,7.175799,-3.113353,-6.813475,-8.981372,2.052348,-4.294493,-7.970714,-8.228746,0.796189,-8.088263,-8.377364,-5.511998,-6.539839,-5.053700,-4.992877,3.283457,-4.371172,4.585949,-6.729960,-1.653787,2.855669,-0.755223,3.543323,-9.080185,-9.608669,-1.457440,-9.887504,9.692705,-4.259064,7.174189,6.672380,-4.788106,4.920029,-9.038520,4.135796,0.462075,-5.290197,0.363135,4.058210,-3.662045,-6.311165,-2.230998,9.670797,-4.984916,1.538668,-5.937740,-3.576146,-2.246895,-6.811393,7.763575,0.772444,-1.828571,-6.896597,5.458075,8.996069,5.468417,-4.392167,9.797949,8.517505,2.895507,4.108773,-1.953778,-2.502334,2.457408,8.891467,8.521935,-1.756655,-0.619175,7.413788,-5.635631,8.480380,-3.549314,9.498018,1.553860,0.890562,9.522708,-3.769495,-5.348897,-2.337421,-8.240272,-0.987475,7.586548,5.126949,-8.226214,3.342455,-1.090426,-1.033296,8.425814,-8.021119,7.232456,0.707409,-0.746118,-8.964893,3.042427,3.191511,-2.666661,9.307156,-5.077028,-6.308426,2.039306,6.162201,-4.677252,-3.172829,9.562362,4.063134,8.353134,5.799312,-7.189026,-3.433710,-4.751618,1.771103,-2.518603,-5.297146,-9.296954,0.798572,8.799534,8.964382,-4.149987,6.923256,-6.243401,-0.410004,7.353153,6.585962,1.663413,5.196986,7.178551,1.180427,1.687186,-6.917925,-4.462213,7.084654,-6.114404,4.098829,7.180438,-2.506408,9.219207,2.673953,-7.139341,4.140605,-7.689238,-9.932726,8.310999,5.376897,4.646914,-5.077651,6.900741,8.872523,-3.025004,5.791090,8.247606,3.116934,-1.382520,-7.515495,-8.495486,7.821673,-6.194284,-1.169009,3.504920,0.333098,-8.868180,-6.393594,0.136110,5.846213,-4.812527,2.200732,2.432266,9.001805,2.990504,-9.734717,0.775200,3.930774,2.662171,3.617329,4.871210,-1.590784,4.071239,-9.922754,-1.302972,-9.290557,-8.726750,3.047654,5.647753,1.380981,-0.976233,-7.443311,7.818227,5.182827,0.781951,6.144956,0.580405,-6.493716,-1.839306,-6.589343,0.811500,-1.122789,-0.174470,5.067446,-4.917988,5.066639,-5.936562,-9.577836,0.773888,6.628265,-3.201067,7.473631,-2.131418,-0.391924,-5.629369,9.575324,-9.762464,2.417862,2.491216,-2.561648,-3.993923,-4.315138,4.138105,-4.214746,4.556853,6.838658,5.128761,2.706430,9.961507,-6.090916,-8.447349,0.381449,9.607894,-8.428753,5.741363,-3.555820,-6.442893,-1.229107,0.560755,-9.093708,-5.817313,6.277012,-6.779072,1.771187,-2.927438,-0.640008,-8.579506,0.558742,-9.394077,-2.627723,-5.412898,4.974320,-1.470584,-0.196732,0.552694,-9.795972,7.249996,7.784227,-9.518002,3.276911,-2.603114,-4.097062,3.226825,8.057887,0.493835,6.521931,-5.301870,-6.223046,-7.273587,3.971936,0.044599,-6.905124,1.822292,-9.594319,-6.535346,-9.476357,5.851440,9.593307,3.044436,3.359890,4.555729,-8.442627,9.627007,-1.740172,-7.835243,8.148329], dtype = "float32")#candidate|6330|(1280,)|const|float32
call_6329 = relay.TupleGetItem(func_5542_call(relay.reshape(const_6330.astype('float32'), [1280,])), 0)
call_6331 = relay.TupleGetItem(func_5545_call(relay.reshape(const_6330.astype('float32'), [1280,])), 0)
var_6361 = relay.var("var_6361", dtype = "float32", shape = (1280,))#candidate|6361|(1280,)|var|float32
bop_6362 = relay.minimum(const_6330.astype('uint8'), relay.reshape(var_6361.astype('uint8'), relay.shape_of(const_6330))) # shape=(1280,)
func_1727_call = mod.get_global_var('func_1727')
func_1729_call = mutated_mod.get_global_var('func_1729')
var_6366 = relay.var("var_6366", dtype = "uint32", shape = (1188,))#candidate|6366|(1188,)|var|uint32
call_6365 = relay.TupleGetItem(func_1727_call(relay.reshape(var_6366.astype('uint32'), [11, 9, 12])), 0)
call_6367 = relay.TupleGetItem(func_1729_call(relay.reshape(var_6366.astype('uint32'), [11, 9, 12])), 0)
func_5689_call = mod.get_global_var('func_5689')
func_5691_call = mutated_mod.get_global_var('func_5691')
const_6382 = relay.const([5.422401,5.763263,-8.391377,0.309302,-6.006070,5.516708,-8.511482,9.505583,-4.754012,-4.231514,2.535844,4.527667,-0.510865,-4.499250,-2.876991,3.078225,-7.263911,7.807379,-8.798510,-2.457597,-3.162333,7.134330,7.305157,-1.340106,0.525399,5.330051,1.432137,-6.185705,-9.103954,2.716528,3.673224,-3.068240,9.072586,-9.539701,-3.041261,7.787082,-9.902474,0.461872,5.706322,1.934740,3.648594,7.845991,9.709252,-8.023317,-8.230660,-3.875371,-7.691903,6.315455,7.668889,0.845514,7.053440,-9.317308,1.226620,5.227390,4.347188,4.101567,1.768699,-8.218122,1.908178,-9.575820,-4.089045,6.227280,-2.495546,3.203590,-0.816427,4.789665,0.115840,6.584559,-4.555638,7.372822,1.416901,-6.137478,8.151314,1.522760,4.873231,-1.752896,-8.167725,-5.509054,-2.170132,-1.021784,-8.553937,-0.548764,1.594354,-9.274584,-4.917250,-7.502070,-5.783915,-6.554345,4.747535,-1.812477,-8.721630,-2.298021,-9.542218,4.548045,-0.429829,3.110553,1.139163,-8.099680,2.864265,-6.322720,-8.164141,7.850625,5.011190,-5.309485,0.865109,4.929144,6.172197,2.288722,-8.693709,4.206463,-7.278872,5.157767,-8.892645,6.753874,-4.519384,-6.077765,-1.869633,-2.459650,5.945907,-1.868823,9.875275,-3.222411,5.548627,4.646243,-6.000699,9.939824,5.175358,3.213342,-6.201318,-8.172413,-9.815402,-9.485413,-5.966940,6.075058,1.922705,1.979508,4.519480,-2.246395,1.601040,0.721173,-6.204900,-0.702306,8.651889,4.469777,-9.546230,5.243355,-1.177982,0.533893,-1.413326,8.905689,-6.191720,-0.199841,-0.545735,7.714922,-1.599639,-0.216571,4.942111,9.508333,-0.937378,-1.603349,-8.681855,1.163662,7.578902,2.249833,2.035568,-4.155224,2.981708,-8.281594,7.504246,7.673144,-7.942689,-7.735072,8.904111,-4.473034,-2.426767,-4.332028,-3.141014,-9.473774,8.042022,7.652079,-6.238800,-2.814759,8.541154,5.067460,-0.793272,-5.816912,-5.116462,-9.321490,-8.434630,2.318162,-8.283362,9.168976,-5.135301,-3.448250,-1.410454,-1.324380,1.816005,-8.098692,7.432321,0.289737,0.946422,-0.884174,-9.235384,3.157663,-5.547009,-5.425196,-7.760711,1.229345,9.218548,-0.509498,-7.769960,-1.621138,-9.951157,-2.862258,-6.287785,8.494483,3.420817,-2.896889,8.110226,4.181389,-6.547865,-4.226809,0.231312,3.744168,8.193778,-6.769204,9.279208,-6.264552,-6.679278,3.169454,-1.387674,-7.481367,0.205583,-3.609353,-1.459754,-5.579471,1.934885,6.742474,-4.258599,1.931590,4.781307,4.564949,-5.210224,-4.822730,-7.659191,4.709469,-2.024816,9.812166,-5.201777,-8.014620,6.263093,-4.477972,9.105587,3.275942,-9.717846,-7.712097,5.653620,-3.405637,8.266297,-2.988013,4.119404,-3.764607,0.832948,5.040800,2.800531,-9.211828,-1.017760,0.046522,-5.740698,2.727317,9.466218,-2.543660,-9.714451,-1.661498,5.433583,9.442235,6.542451,5.009273,2.400937,-6.273293,-2.877803,5.908069,6.413642,6.519097,-1.316767,1.713944], dtype = "float64")#candidate|6382|(286,)|const|float64
call_6381 = relay.TupleGetItem(func_5689_call(relay.reshape(const_6382.astype('float64'), [26, 11])), 2)
call_6383 = relay.TupleGetItem(func_5691_call(relay.reshape(const_6382.astype('float64'), [26, 11])), 2)
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
call_6388 = func_5276_call()
call_6389 = func_5276_call()
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
call_6393 = func_5276_call()
call_6394 = func_5276_call()
var_6405 = relay.var("var_6405", dtype = "uint32", shape = (1188,))#candidate|6405|(1188,)|var|uint32
bop_6406 = relay.power(var_6366.astype('float32'), relay.reshape(var_6405.astype('float32'), relay.shape_of(var_6366))) # shape=(1188,)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
const_6413 = relay.const([3,3], dtype = "int16")#candidate|6413|(2,)|const|int16
call_6412 = relay.TupleGetItem(func_2306_call(relay.reshape(const_6413.astype('int16'), [2, 1, 1]), relay.reshape(call_6381.astype('int16'), [2, 6, 14]), relay.reshape(const_6382.astype('float64'), [13, 22]), ), 1)
call_6414 = relay.TupleGetItem(func_2310_call(relay.reshape(const_6413.astype('int16'), [2, 1, 1]), relay.reshape(call_6381.astype('int16'), [2, 6, 14]), relay.reshape(const_6382.astype('float64'), [13, 22]), ), 1)
const_6415 = relay.const([6.957191,-8.629387,5.133990,7.171509,9.723060,0.298811,5.040431,-6.337835,4.281184,-1.514122,-8.246738,-5.790650,1.440898,-1.763254,2.015315,3.761332,1.334605,1.951217,6.603461,-6.289324,7.854936,2.661005,-0.699012,8.986542,-0.777673,-6.840508,-0.373432,8.933184,-0.722286,-3.302771,7.088080,-3.255785,0.428139,-7.445932,0.655011,-8.946496,-4.629488,9.417813,4.013306,-7.206718,-9.928139,1.111932,-9.291002,-2.365063,-0.969454,-1.409647,-3.387362,4.108097,-5.376721,-3.502961,-4.661863,3.423234,4.628391,9.194841,7.861019,-8.586810,-1.680157,-4.966604,-8.150123,8.124665,2.612352,-0.209014,1.089845,-8.685652,2.985504,1.773366,3.233389,8.111249,3.758323,1.887765,-8.624372,-3.827489,2.013962,0.102153,0.300974,2.876731,-8.974429,-3.348458,5.339162,-2.091969,-3.308147,-6.672803,-5.179973,-1.207037,-4.731365,-6.370978,6.552567,5.154196,1.842993,-3.911726,-4.397157,3.072860,9.164405,-5.452206,-6.374227,-9.557233,-9.288606,-4.656235,-6.599241,-6.852217,1.787772,1.749568,2.636977,3.158564,-4.031392,7.002214,1.708361,7.595425,-6.193806,2.115891,-4.272387,1.973846,-7.197481,1.545629,-1.176818,5.777752,-7.310976,-8.721225,-0.011380,-3.138159,2.803222,1.617129,4.726834,-5.320161,-2.486552,-1.104886,2.996272,9.577688,-5.606015,-9.837265,-7.663017,-1.549691,-2.933281,-1.303655,-5.016056,8.418489,-8.170337,1.500830,-4.383674,5.895454,3.912605,1.294306,-1.996634,6.420478,-3.574189,0.340665,6.078164,5.304618,6.537836,-6.389603,8.666404,3.079918,-0.025785,2.289983,-7.254842,5.897057,-5.884515,-0.136628,8.537241,8.275275,7.304096,-0.572339,-0.466457,8.956846,8.769837,-0.163826,3.851018,-4.193327,-0.282243,-1.341350,4.558839,-8.114893,8.811826,-3.160480,-8.387588,-7.380022,-2.167758,3.242848,-9.855462,-4.680448,-2.544358,-0.745527,7.503377,-9.921884,-8.433871,-8.971713,-0.439913,-9.310562,-4.066658,8.232898,-3.077227,-1.753450,-8.300861,-2.669778,-8.306512,5.617225,6.920930,3.285663,-2.904156,-7.706035,-8.953103,-4.517266,4.753058,-3.994223,8.314636,8.841886,2.908312,4.251553,2.781878,1.443702,-9.518292,-1.888166,-2.800993,-1.644186,0.848696,-9.668964,-5.673467,3.204608,7.471069,9.252423,3.279150,-2.177828,-3.770564,-2.130250,4.745468,-9.774000,-9.870446,9.394153,-6.439811,-9.513503,-0.146125,2.459276,8.875235,0.139386,0.377936,-0.764245,3.886276,7.542349,-5.141014,6.090487,1.413432,8.998028,-4.776143,2.490959,0.796329,9.434086,-9.075248,-8.669749,8.689721,-3.029602,-8.496543,1.163746,3.598413,2.634863,-0.326224,-5.525165,-8.736235,-9.744577,-6.949338,7.257270,3.532166,-6.434534,-6.518137,2.612783,-9.124615,-0.094516,-6.280423,-5.480141,-1.011293,1.501065,-3.152049,8.532185,-6.027521,9.153548,6.780695,-4.874478,0.935554,-9.379735,8.717676,6.876691,6.446515,-3.542686,9.898058,5.418911,-2.025723,2.028842], dtype = "float64")#candidate|6415|(286,)|const|float64
bop_6416 = relay.bitwise_and(const_6382.astype('uint64'), relay.reshape(const_6415.astype('uint64'), relay.shape_of(const_6382))) # shape=(286,)
var_6431 = relay.var("var_6431", dtype = "uint32", shape = (1188,))#candidate|6431|(1188,)|var|uint32
bop_6432 = relay.logical_and(var_6405.astype('bool'), relay.reshape(var_6431.astype('bool'), relay.shape_of(var_6405))) # shape=(1188,)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
call_6437 = relay.TupleGetItem(func_2306_call(relay.reshape(const_6413.astype('int16'), [2, 1, 1]), relay.reshape(call_6381.astype('int16'), [2, 6, 14]), relay.reshape(const_6415.astype('float64'), [13, 22]), ), 2)
call_6438 = relay.TupleGetItem(func_2310_call(relay.reshape(const_6413.astype('int16'), [2, 1, 1]), relay.reshape(call_6381.astype('int16'), [2, 6, 14]), relay.reshape(const_6415.astype('float64'), [13, 22]), ), 2)
var_6439 = relay.var("var_6439", dtype = "float32", shape = (20, 4))#candidate|6439|(20, 4)|var|float32
bop_6440 = relay.floor_divide(call_6437.astype('float64'), relay.reshape(var_6439.astype('float64'), relay.shape_of(call_6437))) # shape=(20, 4)
bop_6443 = relay.floor_divide(call_6438.astype('float64'), relay.reshape(var_6439.astype('float64'), relay.shape_of(call_6438))) # shape=(20, 4)
output = relay.Tuple([call_6325,call_6329,bop_6362,call_6365,call_6381,call_6388,call_6393,bop_6406,call_6412,const_6413,bop_6416,bop_6432,bop_6440,])
output2 = relay.Tuple([call_6326,call_6331,bop_6362,call_6367,call_6383,call_6389,call_6394,bop_6406,call_6414,const_6413,bop_6416,bop_6432,bop_6443,])
func_6461 = relay.Function([var_6361,var_6366,var_6405,var_6431,var_6439,], output)
mod['func_6461'] = func_6461
mod = relay.transform.InferType()(mod)
mutated_mod['func_6461'] = func_6461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6461_call = mutated_mod.get_global_var('func_6461')
var_6463 = relay.var("var_6463", dtype = "float32", shape = (1280,))#candidate|6463|(1280,)|var|float32
var_6464 = relay.var("var_6464", dtype = "uint32", shape = (1188,))#candidate|6464|(1188,)|var|uint32
var_6465 = relay.var("var_6465", dtype = "uint32", shape = (1188,))#candidate|6465|(1188,)|var|uint32
var_6466 = relay.var("var_6466", dtype = "uint32", shape = (1188,))#candidate|6466|(1188,)|var|uint32
var_6467 = relay.var("var_6467", dtype = "float32", shape = (20, 4))#candidate|6467|(20, 4)|var|float32
call_6462 = func_6461_call(var_6463,var_6464,var_6465,var_6466,var_6467,)
output = call_6462
func_6468 = relay.Function([var_6463,var_6464,var_6465,var_6466,var_6467,], output)
mutated_mod['func_6468'] = func_6468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_6493 = relay.TupleGetItem(func_5062_call(), 2)
call_6494 = relay.TupleGetItem(func_5064_call(), 2)
output = relay.Tuple([call_6493,])
output2 = relay.Tuple([call_6494,])
func_6508 = relay.Function([], output)
mod['func_6508'] = func_6508
mod = relay.transform.InferType()(mod)
output = func_6508()
func_6509 = relay.Function([], output)
mutated_mod['func_6509'] = func_6509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5724_call = mod.get_global_var('func_5724')
func_5726_call = mutated_mod.get_global_var('func_5726')
call_6510 = func_5724_call()
call_6511 = func_5724_call()
func_6068_call = mod.get_global_var('func_6068')
func_6071_call = mutated_mod.get_global_var('func_6071')
var_6520 = relay.var("var_6520", dtype = "int8", shape = (88, 2))#candidate|6520|(88, 2)|var|int8
call_6519 = relay.TupleGetItem(func_6068_call(relay.reshape(var_6520.astype('int8'), [4, 11, 4])), 0)
call_6521 = relay.TupleGetItem(func_6071_call(relay.reshape(var_6520.astype('int8'), [4, 11, 4])), 0)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_6522 = relay.TupleGetItem(func_5062_call(), 1)
call_6523 = relay.TupleGetItem(func_5064_call(), 1)
uop_6524 = relay.cos(var_6520.astype('float64')) # shape=(88, 2)
func_5201_call = mod.get_global_var('func_5201')
func_5205_call = mutated_mod.get_global_var('func_5205')
var_6527 = relay.var("var_6527", dtype = "int16", shape = (1, 168))#candidate|6527|(1, 168)|var|int16
const_6528 = relay.const([[-2.666271,-3.336508,-2.993989,-2.118221,-1.884612,-7.655678,-7.603704,9.017715,-7.325059,-3.647910,-3.118411],[0.538479,-2.928255,-6.378098,0.178755,7.594837,-1.810194,8.229000,1.567444,0.970899,-2.407186,-9.996247],[-0.167989,0.743057,0.960550,8.194440,4.495889,8.223977,6.492527,-0.630960,5.649686,-6.348614,7.402225],[7.259390,-4.668370,-6.889013,-6.581228,1.411057,-5.953168,8.272339,-9.063143,-4.334096,-5.840344,0.272532],[6.494262,-8.293198,8.285325,4.636541,-6.742804,-3.370983,7.768855,4.986740,2.138094,-3.082543,-1.972366],[4.075700,-2.684123,-5.677481,7.552704,6.343496,3.494394,5.997482,-2.534501,-8.244093,5.130809,8.884634],[0.888964,-0.368564,5.487493,3.596805,3.791420,1.123898,-1.200951,-1.946741,3.122837,-9.236721,4.274310],[-1.384692,-5.955936,4.972752,9.282301,6.662040,0.907513,2.880361,-9.845426,-6.052534,7.484302,-6.767123],[1.181951,5.845504,-7.939687,-0.804986,9.096471,1.090190,0.646373,-5.191317,-3.482844,7.568879,2.362620],[-5.020209,0.354006,6.706575,-9.368986,-2.011560,-4.385277,3.067290,-7.297759,9.068436,-3.091295,1.379048],[9.259033,-6.546146,8.828996,9.594744,-1.514021,0.466962,7.924784,-1.261712,-8.813054,0.823088,-1.768217],[3.153376,-4.802206,-7.642331,0.325544,-1.517498,1.086648,-6.789790,4.454055,-6.874277,-9.147147,3.662369],[-7.145667,3.334226,7.520813,-8.947019,8.833350,-4.123977,-2.041065,-3.137032,-7.544708,-7.503196,9.127951],[8.722023,-7.643346,-2.973829,0.130900,-2.046344,4.699080,-7.604811,5.829696,-2.645300,-4.008901,-3.167980],[-8.554990,-7.359119,-6.557449,-9.474053,-4.652279,-4.062572,0.419707,7.489107,-6.974701,1.038081,6.089787],[-7.417888,-0.261942,-9.335753,8.856824,0.454511,2.813563,5.494949,-8.060187,-2.401287,4.586507,2.463899],[5.872235,5.788804,8.666063,-2.395661,-5.801362,4.148064,2.064409,6.715367,-8.111408,-4.424911,-5.346271],[6.526455,-1.408666,1.560825,-7.428906,-1.284441,9.691755,-3.585313,-5.503950,-1.893467,4.753228,7.679455],[0.265244,-8.897632,6.415134,1.135410,-6.726574,-3.984516,-6.792866,-7.332596,9.845719,1.804841,-4.509832],[9.606010,-0.949154,7.910351,3.445172,-7.583133,2.784567,-1.312385,-7.283408,-7.001255,8.861399,0.451934],[8.999583,-4.032499,-5.123034,9.558631,3.429827,-8.234932,-8.087977,-5.549604,-1.600166,-0.057477,6.914336],[6.442535,9.453642,-6.547974,-6.675316,-4.306341,0.759883,-2.225571,-1.103300,-0.341740,-5.156331,3.183258],[-4.628519,-7.199503,7.207760,-5.577155,-6.601115,-2.435856,4.644141,-0.191917,-1.730698,7.823510,4.819943],[6.482147,-3.672426,-7.117569,-8.301418,5.199708,2.914439,-8.169424,0.237137,7.438305,-8.698940,5.677597],[-3.410295,3.178722,-6.911032,-9.712425,8.741220,-7.153831,4.591573,-7.568486,-4.180624,-3.654344,-6.397247],[-4.032827,6.804586,1.119063,4.586539,9.133140,-0.986339,-4.017916,-3.248020,-7.280542,5.247595,3.654594]], dtype = "float64")#candidate|6528|(26, 11)|const|float64
call_6526 = relay.TupleGetItem(func_5201_call(relay.reshape(var_6527.astype('int16'), [84, 2]), relay.reshape(const_6528.astype('float64'), [286,]), relay.reshape(call_6510.astype('float32'), [7, 15]), ), 3)
call_6529 = relay.TupleGetItem(func_5205_call(relay.reshape(var_6527.astype('int16'), [84, 2]), relay.reshape(const_6528.astype('float64'), [286,]), relay.reshape(call_6510.astype('float32'), [7, 15]), ), 3)
output = relay.Tuple([call_6510,call_6519,call_6522,uop_6524,call_6526,var_6527,const_6528,])
output2 = relay.Tuple([call_6511,call_6521,call_6523,uop_6524,call_6529,var_6527,const_6528,])
func_6533 = relay.Function([var_6520,var_6527,], output)
mod['func_6533'] = func_6533
mod = relay.transform.InferType()(mod)
var_6534 = relay.var("var_6534", dtype = "int8", shape = (88, 2))#candidate|6534|(88, 2)|var|int8
var_6535 = relay.var("var_6535", dtype = "int16", shape = (1, 168))#candidate|6535|(1, 168)|var|int16
output = func_6533(var_6534,var_6535,)
func_6536 = relay.Function([var_6534,var_6535,], output)
mutated_mod['func_6536'] = func_6536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5803_call = mod.get_global_var('func_5803')
func_5805_call = mutated_mod.get_global_var('func_5805')
call_6541 = relay.TupleGetItem(func_5803_call(), 2)
call_6542 = relay.TupleGetItem(func_5805_call(), 2)
output = call_6541
output2 = call_6542
func_6545 = relay.Function([], output)
mod['func_6545'] = func_6545
mod = relay.transform.InferType()(mod)
mutated_mod['func_6545'] = func_6545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6545_call = mutated_mod.get_global_var('func_6545')
call_6546 = func_6545_call()
output = call_6546
func_6547 = relay.Function([], output)
mutated_mod['func_6547'] = func_6547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mod.get_global_var('func_5400')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_6571 = func_5400_call()
call_6572 = func_5400_call()
func_6461_call = mod.get_global_var('func_6461')
func_6468_call = mutated_mod.get_global_var('func_6468')
var_6582 = relay.var("var_6582", dtype = "float32", shape = (1280,))#candidate|6582|(1280,)|var|float32
const_6583 = relay.const([2,6,3,-8,2,4,5,3,5,-4,10,10,-3,-10,-10,-5,-3,8,10,-10,1,2,-5,7,-5,-2,4,8,-4,-10,3,9,-8,-3,-4,-9,-6,-2,8,-1,-8,-1,5,-2,6,-3,7,7,2,6,-5,-10,-7,-2,-2,9,-3,4,8,7,8,-4,-4,4,3,2,4,8,6,6,10,6,4,1,8,7,-10,2,-2,-9,-6,-4,5,-2,2,7,-3,-7,-4,10,-8,7,8,3,-8,4,5,4,9,-1,4,-3,2,6,10,-10,-3,-6,10,2,2,-2,5,7,10,5,7,-10,9,6,2,-8,5,-7,-5,-3,-6,-4,-10,4,-10,-5,8,5,-1,-9,-9,9,4,10,-6,4,9,2,-10,9,-5,8,-10,-5,6,-6,-2,10,3,-3,3,1,-9,1,-7,-1,7,-8,-2,9,-8,2,10,-7,-10,-3,10,-4,5,10,6,-8,1,-9,10,1,-5,-9,-5,-9,7,-9,-6,-7,10,4,-9,10,-8,-2,-9,6,8,-10,-10,-1,10,5,4,-6,-1,2,-5,-9,1,1,6,5,-5,-8,-1,3,8,-7,3,-9,-6,-2,3,-5,-5,-6,6,-7,-6,5,4,9,9,6,-3,-4,-8,-1,-10,-7,3,-5,5,-9,7,-8,-3,6,-7,3,9,-9,6,8,-4,-10,-8,-3,7,4,7,6,1,3,-4,5,4,10,2,5,-3,-3,9,4,8,-9,-1,7,7,-1,-6,4,-10,9,2,-10,-8,6,10,3,-1,3,9,6,-9,7,-3,5,-7,7,-10,-6,1,8,-5,9,3,-6,3,-8,-8,8,-8,-5,9,4,-3,8,2,7,-6,3,-10,4,2,-10,9,-2,-10,9,2,-9,-4,1,4,5,-4,-1,-7,2,9,2,7,-4,-2,8,-8,9,7,-10,-5,1,3,-6,9,2,7,9,-7,-4,-7,2,-3,-7,-10,9,4,-7,-2,-7,-10,-2,-2,-2,3,7,10,5,-8,-2,-3,-6,-3,-2,-5,-7,-10,3,-9,1,2,-1,-5,8,3,4,4,-1,-2,-1,3,-1,8,-5,10,8,1,-8,6,-10,7,4,-3,-6,7,-1,7,3,5,-4,-1,-8,-10,9,-2,6,2,-1,-3,9,6,4,3,1,-5,-4,5,-1,10,-2,10,2,-6,-8,-1,2,-8,-1,6,-10,8,1,5,10,-3,-10,2,6,6,-8,-4,4,-9,-4,10,-5,-5,-2,8,10,6,-6,-1,-6,-8,-5,9,4,-6,-2,-10,3,-5,10,8,-7,-9,3,-5,8,-5,6,2,-3,-8,-5,4,-8,4,4,-7,8,-6,-5,-2,-6,5,3,4,6,-1,-2,8,5,9,3,2,1,2,3,-8,3,3,-9,-1,8,-5,-8,2,4,-3,-7,-10,-5,4,-8,-6,-6,-6,3,1,1,4,8,1,9,-2,-8,-5,-7,-10,-3,-6,5,-3,1,-2,9,-2,-5,-10,-8,1,5,1,-6,6,7,-6,6,-3,-5,-1,-2,-3,7,-9,8,-5,7,4,8,1,-2,10,-10,4,7,-2,-8,3,-10,4,-4,10,4,-5,4,8,4,-3,-10,-10,4,-3,6,-10,2,-6,-3,-8,-2,9,-8,3,6,6,5,-10,-9,1,-1,-4,7,1,-8,-6,1,-8,4,-5,-9,4,-9,3,9,5,-9,5,1,-7,-5,9,10,-9,1,3,-4,-4,-3,-3,4,-4,-9,10,-7,8,2,1,7,6,-3,5,-8,-4,-7,5,7,4,-2,-5,-9,-10,2,-3,-3,-4,2,6,10,2,9,9,-1,-1,7,-10,2,-9,3,-3,3,-3,-9,-6,10,-6,-7,4,-10,-9,-4,-3,-10,1,4,-2,-1,3,-5,-9,-5,6,4,10,-7,-8,7,-7,2,2,2,-5,10,-3,7,4,8,3,-9,5,1,9,5,-7,-6,4,-5,-8,-9,4,4,-7,7,6,5,4,-5,6,-2,8,1,5,5,1,-6,-9,2,-3,-7,4,10,-10,2,-6,8,-2,8,-3,1,-6,-8,5,2,-8,7,-5,-8,2,2,6,-2,6,-6,-4,4,5,-6,3,-10,-8,-1,-6,9,-10,-5,-8,-7,-8,5,1,1,-1,-6,-4,-5,5,-7,-6,-8,7,5,2,-2,-4,-4,4,8,-4,-2,-3,3,3,-9,-6,5,10,-9,-1,-5,-7,7,6,-1,-4,-9,9,4,-1,3,10,3,10,-4,-4,-6,-10,4,-10,4,-7,-10,-4,2,-9,-5,5,-3,-1,-7,-6,7,6,1,6,2,6,-2,10,6,-1,2,-8,-2,-10,5,2,3,3,5,-9,3,-3,-8,2,-4,-4,8,9,-2,-9,-8,-6,8,-7,9,2,-1,-10,7,2,3,-8,-9,-1,10,5,10,1,3,8,1,-3,-6,1,4,-7,-9,-8,-5,-9,-10,3,8,-7,-9,2,-7,-4,9,-6,-9,10,9,-6,10,9,2,9,5,10,10,-6,10,-10,5,9,-1,2,8,6,3,-7,7,-6,3,6,9,-10,2,-7,-10,-1,-7,4,-10,1,-4,-10,-6,5,2,3,-5,-10,7,-6,-4,-9,-7,-6,1,-2,-8,8,-9,-3,4,4,-9,8,4,2,-8,-10,-1,-4,4,9,-8,-5,-2,10,2,-7,2,6,7,5,8,2,2,2,-4,7,10,1,-2,-7,-6,-7,10,-4,3,4,-5,-9,-6,2,-3,-2,-4,-4,5,-1,6,1,1,-4,-7,6,-9,-10,7,3,-2,3,-7,10,-10,2,9,3,9,6,8,-9,-6,-9,10,3,6,-9,4,-4,-2,-2,10,-1,-7,-6,-7,-1,3,-6,-2,6,-4,5,-4,-4,-7,-7,6,-7,-5,7,7,6,5,-2,10,9,1,-6,4,1,-8,8,6,-6,-10,4,-10,5,2,-6,-3,8,10,-1,4,6,10,-8,1,7,9,-9,4,4,-3,-10,-7,2,-4,2,5,-2,1,-1,-5,6,-2,1,-10,1,7,-10,10,2,7,2,9,6,3,6,6,10,-6,-1,9,-10,3,-3,-5,7,-6,-3,2,-6,-5,-2,2,-8,-6,7,-2,4,-10,-10,-1,-7,5,-9,-7,3,7,4,1,2,-2,-5,-7,-2,5], dtype = "uint32")#candidate|6583|(1188,)|const|uint32
const_6584 = relay.const([-9.299768,2.937246,-5.010734,-4.254569,1.920580,-7.475529,4.009032,4.972244,0.719022,-5.192246,9.578211,-6.217720,-6.918722,-9.694918,3.022623,1.808161,-7.068450,-1.903085,-5.900727,-3.478633,3.080886,-6.403198,7.513834,-3.933097,7.118465,4.839015,5.410743,4.241761,2.306200,2.896741,-4.523186,-2.515093,4.392969,6.847485,6.329780,7.759294,-2.940027,5.532633,-1.461264,-6.316048,-3.621676,-1.628908,-0.915604,3.867741,7.009167,-3.180102,8.401304,-9.911783,2.050325,-9.564774,8.780652,-8.926728,5.026603,3.025339,1.045677,5.142646,6.759657,3.723169,-5.018644,1.916764,9.292215,0.119878,-9.131643,-8.632104,8.942513,-5.075490,-2.418490,-3.264668,7.661793,9.059526,-5.758334,-0.052853,7.449178,7.041349,7.917790,9.212917,-7.716292,9.577570,9.837824,-1.619418], dtype = "float32")#candidate|6584|(80,)|const|float32
call_6581 = relay.TupleGetItem(func_6461_call(relay.reshape(var_6582.astype('float32'), [1280,]), relay.reshape(const_6583.astype('uint32'), [1188,]), relay.reshape(const_6583.astype('uint32'), [1188,]), relay.reshape(const_6583.astype('uint32'), [1188,]), relay.reshape(const_6584.astype('float32'), [20, 4]), ), 4)
call_6585 = relay.TupleGetItem(func_6468_call(relay.reshape(var_6582.astype('float32'), [1280,]), relay.reshape(const_6583.astype('uint32'), [1188,]), relay.reshape(const_6583.astype('uint32'), [1188,]), relay.reshape(const_6583.astype('uint32'), [1188,]), relay.reshape(const_6584.astype('float32'), [20, 4]), ), 4)
var_6591 = relay.var("var_6591", dtype = "int8", shape = (4, 11, 4))#candidate|6591|(4, 11, 4)|var|int8
bop_6592 = relay.logical_or(call_6571.astype('bool'), relay.reshape(var_6591.astype('bool'), relay.shape_of(call_6571))) # shape=(4, 11, 4)
bop_6595 = relay.logical_or(call_6572.astype('bool'), relay.reshape(var_6591.astype('bool'), relay.shape_of(call_6572))) # shape=(4, 11, 4)
output = relay.Tuple([call_6581,var_6582,const_6583,const_6584,bop_6592,])
output2 = relay.Tuple([call_6585,var_6582,const_6583,const_6584,bop_6595,])
func_6597 = relay.Function([var_6582,var_6591,], output)
mod['func_6597'] = func_6597
mod = relay.transform.InferType()(mod)
mutated_mod['func_6597'] = func_6597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6597_call = mutated_mod.get_global_var('func_6597')
var_6599 = relay.var("var_6599", dtype = "float32", shape = (1280,))#candidate|6599|(1280,)|var|float32
var_6600 = relay.var("var_6600", dtype = "int8", shape = (4, 11, 4))#candidate|6600|(4, 11, 4)|var|int8
call_6598 = func_6597_call(var_6599,var_6600,)
output = call_6598
func_6601 = relay.Function([var_6599,var_6600,], output)
mutated_mod['func_6601'] = func_6601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6545_call = mod.get_global_var('func_6545')
func_6547_call = mutated_mod.get_global_var('func_6547')
call_6614 = func_6545_call()
call_6615 = func_6545_call()
const_6625 = relay.const([[-7,5,3,7,10,8,3,2,-1,-1,4,9,5,3,-1,1,1,8,-5,5,10,-3,-9,6,-7,-8,-1,9,10,-9,8,-3,-6,-4,5,-6,5,9,6,6,2,-4,-3,-2,-6,6,-1,-4],[-7,9,8,-6,-9,-8,10,-8,-8,-7,7,5,-10,-7,9,1,-10,7,-10,-10,8,1,2,2,4,-2,-9,-4,10,-4,-5,-5,5,-10,9,-3,-7,-6,-6,10,8,-10,-1,-7,-6,-9,6,-3],[-10,-6,-4,-5,-5,-10,9,-10,-2,-3,-5,-3,1,-1,6,10,8,2,-6,2,7,-2,-4,3,-3,8,-9,8,-10,7,-2,1,-4,1,-1,-9,7,-7,4,-6,8,-4,4,7,10,2,-2,1],[6,-5,-6,-7,6,3,-6,8,4,1,5,-2,5,-6,-6,2,-8,1,1,-9,2,8,3,-1,9,5,-1,10,10,2,2,8,-3,6,-6,3,-8,-5,-9,10,-10,6,3,-7,10,8,5,4],[6,-4,-6,2,9,7,-6,8,3,7,-9,-8,6,-1,-6,9,-6,6,-9,3,8,6,8,-1,-7,4,5,-7,10,9,4,7,10,-9,2,7,-4,5,6,-3,-6,-10,-9,-9,-4,6,-8,-5],[6,9,10,9,8,5,2,6,-5,9,5,4,10,-7,-2,-9,8,6,4,1,-1,-4,4,-3,10,4,1,3,9,10,-4,-10,6,10,1,-2,10,5,9,7,-9,-3,1,4,7,1,-2,4],[5,10,9,-8,9,5,3,-5,2,-5,-5,-3,2,4,5,5,-5,-7,6,-3,3,3,9,8,-8,-4,-1,-5,-3,8,8,7,8,-8,-1,1,9,10,4,1,1,4,4,-5,-8,-2,-8,-2],[5,3,8,-2,2,7,7,9,-5,10,-2,-6,-9,9,-1,6,-10,4,6,7,5,3,3,-10,5,-10,4,-9,6,2,10,3,-8,-8,-2,-2,10,-9,-9,3,-8,1,3,-6,-10,8,8,-10],[10,-1,-2,7,2,6,6,5,4,-5,8,6,2,7,-5,6,-4,8,-2,7,3,-5,-5,-3,8,6,9,-5,-7,-1,-1,10,4,1,-2,-1,-4,-4,-9,-7,-4,5,4,6,-4,6,4,1],[1,-5,2,10,4,-4,2,2,-4,-1,8,-2,4,8,-1,7,2,-6,8,2,-1,-5,-8,9,5,-10,7,3,-9,1,-1,3,10,2,5,-10,-2,9,3,4,8,-10,8,-8,6,7,10,1],[-9,-8,8,-3,4,-10,8,6,8,10,-9,2,-10,3,1,7,-6,6,-4,4,-9,-4,10,2,6,-5,10,10,-6,-9,-6,7,-1,8,10,-3,8,-5,-9,-6,10,-4,9,-10,7,-4,-6,-9],[-3,-4,10,-3,7,7,-6,-5,-6,-7,-2,-10,6,6,-4,-3,-3,-10,-6,-5,1,-3,7,-3,6,8,7,-9,-3,-7,1,5,-8,-8,8,-9,7,7,-1,-7,-10,-7,2,-10,-2,-3,8,6],[3,-2,9,-1,3,-10,-10,-3,1,-5,-5,-9,1,-9,-2,-5,-1,5,8,8,-5,8,-5,-6,-1,1,-6,-3,4,8,-7,8,-9,1,2,3,-10,-5,-1,3,-9,-8,-5,-4,2,-5,-4,-8],[10,2,-1,-1,5,-7,-6,2,7,2,10,-2,-5,-3,2,2,3,5,-1,4,-4,-4,-3,8,6,-3,6,-1,2,2,5,9,-9,1,-1,-6,8,-5,-8,-1,3,-3,7,3,-9,-7,-10,4],[1,9,-10,6,9,-9,4,-3,1,-9,-1,-2,-7,7,-7,9,6,-9,7,4,-9,-2,10,4,-3,-2,7,-7,4,4,-4,-9,-2,-9,-6,-4,-4,1,-4,-7,-8,-3,6,-1,-3,2,-7,2],[-9,-8,-1,-1,-1,-3,7,-1,-1,-2,-4,7,-6,-9,-10,-4,-1,6,-7,9,1,-2,-1,5,-7,9,10,3,7,-10,-4,-7,-7,6,-4,-1,-8,3,-5,-1,5,-8,-8,-2,-2,3,7,10],[7,-9,3,-5,-4,-8,9,3,-1,-9,-1,-5,3,10,8,-5,6,-3,5,-9,8,-8,-1,1,2,-3,2,8,4,5,-8,4,-4,4,-6,-8,2,-1,7,-5,1,1,-5,-9,5,-10,4,-6],[2,-2,4,-5,6,-1,6,-1,3,-2,-9,7,5,-6,3,1,-3,-6,-3,-5,-4,9,2,1,-1,6,-4,-3,-2,9,-2,-9,-1,4,-5,-2,-5,1,2,5,-4,1,-3,6,3,1,6,-2],[6,-3,-7,9,8,9,1,1,-4,3,7,5,7,-9,7,-1,9,1,9,-8,-10,-4,1,-6,10,-4,-3,10,4,-2,-1,3,7,6,2,2,10,-2,-5,-8,2,-1,3,-2,1,8,-8,-1],[-5,-10,10,-10,10,-1,-2,10,-1,8,4,-2,7,8,1,8,-8,-4,2,9,7,9,-9,5,1,5,-5,-2,-7,6,2,7,-4,-8,-4,-10,-7,10,9,-7,1,6,10,-8,8,8,-10,10],[5,-4,-3,2,5,-7,9,5,-9,-6,8,-8,10,6,3,7,6,-1,-6,-10,-6,5,10,-5,-10,-9,-5,-5,-5,6,-1,-9,4,5,-2,-3,9,-4,-8,9,10,-8,-7,1,-6,-1,1,3],[10,5,2,-10,6,1,3,-3,9,9,4,7,6,-8,-10,2,8,3,5,-2,-9,6,6,4,-1,-1,-2,7,-10,5,-8,1,-4,8,10,-2,-5,-1,-6,-6,10,1,8,2,-5,-8,-5,10],[5,-1,-10,-4,-1,-5,1,-5,-9,-5,-6,-6,5,7,5,9,7,-5,-5,3,-3,5,10,-7,8,-9,-10,-9,-1,6,4,-5,7,2,-6,-10,-5,-5,4,-5,5,-7,1,1,-2,7,2,1],[-4,3,-7,-1,5,7,-7,2,-8,-6,-6,-8,-1,8,-9,-3,1,-2,-7,1,8,-5,-2,-4,7,9,6,6,4,-1,1,7,1,10,-4,-4,-3,-7,6,-7,-1,10,4,7,10,-3,3,2],[-9,4,7,6,-6,7,6,5,-8,7,1,-2,-3,1,-4,1,-9,-9,-2,-8,-9,10,-9,-3,2,-1,-3,3,7,-3,10,6,-1,-8,1,-1,1,6,-8,6,-10,-2,-9,10,-10,-7,-8,-10],[10,-2,-3,1,-6,-3,9,-2,-6,3,-9,1,9,2,3,-6,1,1,-1,-8,-3,-1,10,-3,-8,-4,-1,-10,5,8,3,10,-2,-8,5,-9,-6,-3,4,7,-2,2,-7,8,4,1,-9,-1],[-2,-3,-6,-7,5,-3,8,2,10,-5,-6,-1,8,8,-3,-10,2,3,-8,-10,-2,1,-2,10,-6,-1,10,1,-3,9,1,-2,3,-9,-6,3,4,8,6,10,-6,2,-2,-6,-5,-3,-4,-7],[10,9,9,-6,5,-10,5,-1,-8,7,-8,-9,7,7,-8,-10,2,-6,1,-5,9,5,5,3,9,-5,4,-7,-7,4,-1,-4,4,-8,-6,-9,-8,7,2,-7,1,-7,-8,-5,1,10,6,8]], dtype = "int32")#candidate|6625|(28, 48)|const|int32
bop_6626 = relay.floor_divide(call_6614.astype('float32'), relay.reshape(const_6625.astype('float32'), relay.shape_of(call_6614))) # shape=(28, 48)
bop_6629 = relay.floor_divide(call_6615.astype('float32'), relay.reshape(const_6625.astype('float32'), relay.shape_of(call_6615))) # shape=(28, 48)
bop_6645 = relay.bitwise_xor(bop_6626.astype('uint64'), relay.reshape(const_6625.astype('uint64'), relay.shape_of(bop_6626))) # shape=(28, 48)
bop_6648 = relay.bitwise_xor(bop_6629.astype('uint64'), relay.reshape(const_6625.astype('uint64'), relay.shape_of(bop_6629))) # shape=(28, 48)
bop_6649 = relay.logical_and(bop_6626.astype('bool'), relay.reshape(const_6625.astype('bool'), relay.shape_of(bop_6626))) # shape=(28, 48)
bop_6652 = relay.logical_and(bop_6629.astype('bool'), relay.reshape(const_6625.astype('bool'), relay.shape_of(bop_6629))) # shape=(28, 48)
uop_6661 = relay.rsqrt(call_6614.astype('float32')) # shape=(28, 48)
uop_6663 = relay.rsqrt(call_6615.astype('float32')) # shape=(28, 48)
bop_6664 = relay.minimum(uop_6661.astype('int32'), relay.reshape(bop_6649.astype('int32'), relay.shape_of(uop_6661))) # shape=(28, 48)
bop_6667 = relay.minimum(uop_6663.astype('int32'), relay.reshape(bop_6652.astype('int32'), relay.shape_of(uop_6663))) # shape=(28, 48)
output = relay.Tuple([bop_6645,bop_6664,])
output2 = relay.Tuple([bop_6648,bop_6667,])
func_6674 = relay.Function([], output)
mod['func_6674'] = func_6674
mod = relay.transform.InferType()(mod)
mutated_mod['func_6674'] = func_6674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mutated_mod.get_global_var('func_6674')
call_6675 = func_6674_call()
output = call_6675
func_6676 = relay.Function([], output)
mutated_mod['func_6676'] = func_6676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5641_call = mod.get_global_var('func_5641')
func_5643_call = mutated_mod.get_global_var('func_5643')
call_6712 = func_5641_call()
call_6713 = func_5641_call()
func_2993_call = mod.get_global_var('func_2993')
func_2997_call = mutated_mod.get_global_var('func_2997')
const_6719 = relay.const(-1, dtype = "uint32")#candidate|6719|()|const|uint32
var_6720 = relay.var("var_6720", dtype = "uint32", shape = (12,))#candidate|6720|(12,)|var|uint32
call_6718 = func_2993_call(relay.reshape(const_6719.astype('uint32'), []), relay.reshape(var_6720.astype('uint32'), [3, 4, 1]), )
call_6721 = func_2993_call(relay.reshape(const_6719.astype('uint32'), []), relay.reshape(var_6720.astype('uint32'), [3, 4, 1]), )
func_6533_call = mod.get_global_var('func_6533')
func_6536_call = mutated_mod.get_global_var('func_6536')
const_6723 = relay.const([7,10,-7,7,-5,9,-9,-10,1,7,10,7,6,7,1,7,-6,-1,5,2,-10,5,2,-8,-3,-10,6,7,7,3,1,-6,-6,-10,9,-10,3,-8,3,9,-2,8,-8,-2,-10,5,-7,-10,9,6,4,-5,-3,3,1,-1,2,-3,-6,-7,1,2,2,1,-2,9,2,4,-9,3,-10,2,-6,2,1,-2,3,8,-4,7,7,3,-10,-7,3,-6,4,4,-7,4,8,-8,-10,6,-7,-1,9,-6,-10,-7,-2,-5,-4,-8,7,-7,-10,6,3,-3,7,7,-7,-4,-5,-1,5,-5,6,8,-7,-10,1,-6,-8,-7,4,-10,6,-1,6,-7,-9,9,-4,-9,-3,-10,5,-9,9,-9,-9,-6,-2,3,9,8,-10,3,6,-9,-3,3,6,-2,-9,8,9,-10,-2,-10,5,-9,6,3,6,-1,10,6,8,-1,-6,-5,-2,7], dtype = "int8")#candidate|6723|(176,)|const|int8
var_6724 = relay.var("var_6724", dtype = "int16", shape = (168,))#candidate|6724|(168,)|var|int16
call_6722 = relay.TupleGetItem(func_6533_call(relay.reshape(const_6723.astype('int8'), [88, 2]), relay.reshape(var_6724.astype('int16'), [1, 168]), ), 3)
call_6725 = relay.TupleGetItem(func_6536_call(relay.reshape(const_6723.astype('int8'), [88, 2]), relay.reshape(var_6724.astype('int16'), [1, 168]), ), 3)
func_2796_call = mod.get_global_var('func_2796')
func_2798_call = mutated_mod.get_global_var('func_2798')
const_6733 = relay.const([[1.958159,9.521349,0.087418,-9.502154,8.022436,-9.707820,0.740262,-5.544539,0.540796,-8.997224,7.030337,-7.152356,5.589660,2.312776,3.009215,4.203033,9.035673,8.083214,2.675560,-4.802981,6.704963,6.812290,-9.386429,-2.049946,-3.371898,8.854018,2.519686,4.119150,9.506481,-5.406072,-2.186783,-4.417529,-4.255115,-2.943485,4.731692,2.238975,0.182437,7.338000,-9.820905,7.492773,-0.996882,-7.816581,1.728678,5.771568,0.255318,1.638390,9.806630,4.406963,0.504328,2.029324,2.946623,9.408859,4.237311,-3.492930,-6.250106,4.976419,-3.297752,-3.609923,6.345353,4.274384,-5.453345,-4.769852,-4.351107,5.762056,-0.845627,-5.675351,8.271599,-9.645197,-3.870295,-0.207660,7.563164,-7.095878,-5.408737,1.011276,-0.614932,-6.008670,2.316826,-4.141693,-0.410999,6.916523,-1.451563,-8.860079,0.046858,9.684395,-5.491861,-3.997730,6.351014,0.772308,-2.800412,7.758027,3.141097,6.937201,-9.785303,-2.247925,2.951098,2.562783,4.334503,-9.233387,1.151330,6.876958,0.766884,5.946063,-1.386475,-7.718837,7.896204,4.613692,4.571134,7.909340,-2.389132,5.568490,2.594248,2.222190,-7.580458,5.862804,0.903843,3.226119,-8.513000,6.642213,-0.880175,6.810556,5.293386,-4.374156,3.782890,1.878431,-1.080553,-9.927448,9.082919,-0.017651,5.382989,6.516950],[-4.983284,3.716962,8.238410,7.800209,5.047290,8.041224,1.841531,9.356507,8.654458,-0.878869,2.609446,1.018844,3.104741,6.936688,7.714492,5.125796,3.059904,4.657629,-4.241394,-6.541110,9.041965,-5.978864,-7.675382,-6.804566,-0.053409,4.293045,0.893928,8.298600,-3.135736,3.000271,8.506624,-5.669087,3.019613,-2.623188,-6.047147,2.608766,-5.150860,0.182807,-3.305331,7.107544,-7.800426,-8.740660,9.721819,-6.134827,-4.122637,-9.241527,1.991884,9.242795,-3.218671,-9.183690,-7.121951,-2.837793,2.100606,8.055040,7.935954,3.484589,8.445649,5.543347,8.699665,1.913903,6.585266,0.258582,-0.671899,-4.497465,-5.241565,2.696490,-2.509515,-1.982937,5.590789,3.863441,-3.576449,5.892236,3.390738,-4.257555,-8.531881,-4.166138,2.195541,-7.262911,-2.045053,-6.855314,0.563083,-7.364890,-2.021291,-5.284546,-5.028554,-5.553210,-1.778499,1.802809,9.004025,-8.469747,4.402246,5.226996,-5.052766,-5.031104,-8.413237,-7.095045,-2.377766,-4.395104,5.974900,4.338715,-2.837308,-3.470911,0.320395,-1.585283,2.244943,-3.912663,-9.882072,-4.262742,-4.835959,9.766525,8.852166,-3.429828,-2.869884,-3.591979,5.831036,-3.777263,-7.651584,-1.089929,-0.580232,-4.617207,2.402635,-7.380518,-4.403189,0.021101,2.820397,-8.533834,-1.038823,-0.279264,8.628522,-2.196128],[-8.114515,-9.972668,7.919350,-9.783249,-0.384473,2.875362,-3.786696,8.788982,-0.523522,9.190575,3.571882,0.726401,-4.017889,2.777991,-2.517670,8.925824,-6.701057,2.297855,-9.775722,8.216717,-9.970794,6.461102,-5.414578,-9.268263,6.537683,-8.042541,2.023827,-9.736172,9.836538,9.301321,1.877622,5.214881,-6.925913,3.359998,-2.428996,0.912009,6.080106,9.170002,6.835958,0.937639,6.232572,-9.566340,3.975477,4.715491,-0.932848,-4.696039,4.933232,1.335632,5.302683,-8.706874,0.221116,-8.189354,-5.778396,-6.103603,1.701366,-3.257487,5.916947,4.510531,3.625337,7.855586,5.813065,2.382109,2.111759,3.313172,5.833690,2.510734,0.723661,-0.272011,2.214073,-5.056840,-1.202365,-7.595262,3.178266,-6.832291,-2.908759,-0.712396,9.607264,-5.670369,-7.398816,9.455278,2.576037,-3.023939,0.203816,7.587011,3.647494,2.749079,-2.855744,3.111356,-9.487033,3.559762,6.583634,-1.692184,5.880251,-6.385133,-5.026676,-7.174160,-2.275924,1.203710,0.040581,-6.652038,-3.386183,-9.528608,5.041270,-5.931022,1.762663,-1.281856,0.524309,1.866619,4.223953,-8.854347,-7.126627,-2.376555,5.046578,-8.750079,-7.621207,5.351040,-5.573625,8.123441,2.215090,5.715907,1.089644,8.418766,8.154455,-8.502260,-8.428221,-0.527000,7.099950,3.385729,-6.877543,9.132789],[9.324230,2.345405,-1.023555,8.334398,-3.332218,-8.547088,4.406649,-6.519672,-6.208193,1.893644,9.268817,7.912085,-3.782517,1.386830,-2.302192,7.191136,6.589867,-9.104986,-7.166311,3.751789,-0.175081,-9.446469,-2.369121,-8.367959,9.613996,1.508508,-5.380872,4.220789,-7.585477,0.256338,5.561632,-3.158235,-5.334026,-5.880834,-0.242342,8.882778,1.974091,-9.262810,1.510543,2.558485,0.158537,5.496757,2.471669,-9.693590,-2.785182,0.895321,1.744454,-1.180873,-1.020707,-3.807368,3.804766,8.676617,6.389365,-1.818071,4.026987,-9.697023,-4.167005,-5.924292,-8.852810,8.989313,-1.944933,8.733255,-7.958480,1.726766,-4.637946,-8.808925,-4.700113,3.681730,3.436571,-0.027450,8.693246,3.427172,-8.172609,5.350332,6.507420,5.220907,0.933309,6.269997,4.580022,-4.666683,-9.864179,5.702868,2.391717,-2.622224,-3.493137,3.919152,1.193027,9.612023,-1.718000,9.885369,-0.231377,3.048465,3.158787,4.641625,-2.827998,-8.669967,-8.444736,7.886740,-3.824888,5.041879,-8.893420,-0.441453,5.162093,6.480301,3.737529,5.637155,-8.368500,5.224432,6.597685,-4.825602,7.534574,-1.662533,-4.335628,8.810341,-1.211810,6.916637,3.339025,-7.488977,4.703856,-3.557434,-6.694833,-0.801800,-7.877630,-7.634701,3.425145,4.176221,-2.781690,-0.661345,8.883147,1.123709],[-3.614290,-8.123841,6.365277,2.677374,8.839216,2.764982,9.792192,-5.713284,4.964143,-4.241868,1.791569,0.543305,7.530715,-6.766534,2.968313,-3.294519,-4.390140,1.286651,-8.633366,-3.810995,-2.220714,8.679967,-1.962360,-8.444443,3.953423,-1.212897,-1.538784,-3.383818,0.946913,8.003400,-8.505300,7.826291,-6.165566,-1.213576,2.828000,-7.787407,-7.007367,9.878492,1.447997,5.091337,-6.579926,9.506476,2.919773,5.409086,-3.203499,-2.891309,-7.446381,9.062287,-3.209799,9.474947,0.472583,-7.796743,-2.813229,-4.089895,1.505298,-5.080576,4.852469,-0.666134,6.135147,1.841011,-7.758796,-9.716872,8.270601,-4.412017,-3.498991,4.032330,2.095104,3.098280,-7.553343,-1.944171,5.981475,6.633116,-1.460649,-2.163624,9.961230,-8.209842,6.674041,4.436173,-4.660842,-0.621251,8.047057,-9.278405,5.721375,-8.237050,1.799155,7.529957,6.261490,3.258068,6.379668,9.840595,-8.252904,-1.600214,6.813786,-8.198676,5.953084,-8.240207,7.172070,-9.086227,-4.144924,-0.180349,6.360377,1.092102,-8.163497,-0.308938,-7.556130,3.816902,5.311274,-5.166746,5.930687,7.585416,6.927833,8.209076,-3.146166,-8.774632,3.079161,3.642318,-9.458360,3.069806,6.202315,-2.445238,-5.811577,-0.426420,-0.727499,-8.242544,-4.824503,-6.846455,8.903224,-7.622559,1.966154,-1.964984]], dtype = "float32")#candidate|6733|(5, 130)|const|float32
call_6732 = relay.TupleGetItem(func_2796_call(relay.reshape(const_6733.astype('float32'), [10, 5, 13])), 0)
call_6734 = relay.TupleGetItem(func_2798_call(relay.reshape(const_6733.astype('float32'), [10, 5, 13])), 0)
var_6735 = relay.var("var_6735", dtype = "bool", shape = (15, 11, 7))#candidate|6735|(15, 11, 7)|var|bool
bop_6736 = relay.not_equal(call_6712.astype('bool'), relay.reshape(var_6735.astype('bool'), relay.shape_of(call_6712))) # shape=(15, 11, 7)
bop_6739 = relay.not_equal(call_6713.astype('bool'), relay.reshape(var_6735.astype('bool'), relay.shape_of(call_6713))) # shape=(15, 11, 7)
uop_6744 = relay.sqrt(const_6733.astype('float64')) # shape=(5, 130)
uop_6752 = relay.rsqrt(uop_6744.astype('float32')) # shape=(5, 130)
output = relay.Tuple([call_6718,const_6719,var_6720,call_6722,const_6723,var_6724,call_6732,bop_6736,uop_6752,])
output2 = relay.Tuple([call_6721,const_6719,var_6720,call_6725,const_6723,var_6724,call_6734,bop_6739,uop_6752,])
func_6761 = relay.Function([var_6720,var_6724,var_6735,], output)
mod['func_6761'] = func_6761
mod = relay.transform.InferType()(mod)
mutated_mod['func_6761'] = func_6761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6761_call = mutated_mod.get_global_var('func_6761')
var_6763 = relay.var("var_6763", dtype = "uint32", shape = (12,))#candidate|6763|(12,)|var|uint32
var_6764 = relay.var("var_6764", dtype = "int16", shape = (168,))#candidate|6764|(168,)|var|int16
var_6765 = relay.var("var_6765", dtype = "bool", shape = (15, 11, 7))#candidate|6765|(15, 11, 7)|var|bool
call_6762 = func_6761_call(var_6763,var_6764,var_6765,)
output = call_6762
func_6766 = relay.Function([var_6763,var_6764,var_6765,], output)
mutated_mod['func_6766'] = func_6766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
call_6781 = func_5276_call()
call_6782 = func_5276_call()
func_5139_call = mod.get_global_var('func_5139')
func_5141_call = mutated_mod.get_global_var('func_5141')
const_6785 = relay.const([4,9,-7,6,-5,-1,3,4,7,4,-8,-8,-1,-7,4,6,-5,7,-5,3,1,8,-8,-6,8,7,-6,2,-1,-8,10,-2,-8,-8,-2,-3,-7,-7,-3,-9,4,9,-3,1,10,1,-3,7,-2,6,-6,-8,-10,-9,9,-8,-6,-7,5,-2,-7,-7,4,4,8,1,-9,-10,-4,-3,-7,-8,-5,-1,-10,9,4,10,1,5,1,5,4,8,4,-1,-4,3,3,-2,-5,-2,9,8,-5,-7,-8,6,-8,2,-8,1,3,3,-10,-10,-6,-5,-6,4,5,-8,4,6,10,1,10,-10,-8,8,-8,4,-3,-10,9,10,5,-8,2,10,10,10,5,-1,-2,2,7,5,-2,-9,-9,6,9,-1,-6,2,2,5,1,10,-7,3,-6,-6,-3,3,7,4,-3,-4,-7,8,8,7,-1,3,9,6,4,8,-10,-9,-10,1,-1,-6], dtype = "int8")#candidate|6785|(176,)|const|int8
call_6784 = relay.TupleGetItem(func_5139_call(relay.reshape(const_6785.astype('int8'), [4, 11, 4])), 0)
call_6786 = relay.TupleGetItem(func_5141_call(relay.reshape(const_6785.astype('int8'), [4, 11, 4])), 0)
output = relay.Tuple([call_6781,call_6784,const_6785,])
output2 = relay.Tuple([call_6782,call_6786,const_6785,])
func_6787 = relay.Function([], output)
mod['func_6787'] = func_6787
mod = relay.transform.InferType()(mod)
output = func_6787()
func_6788 = relay.Function([], output)
mutated_mod['func_6788'] = func_6788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6787_call = mod.get_global_var('func_6787')
func_6788_call = mutated_mod.get_global_var('func_6788')
call_6882 = relay.TupleGetItem(func_6787_call(), 2)
call_6883 = relay.TupleGetItem(func_6788_call(), 2)
output = relay.Tuple([call_6882,])
output2 = relay.Tuple([call_6883,])
func_6894 = relay.Function([], output)
mod['func_6894'] = func_6894
mod = relay.transform.InferType()(mod)
output = func_6894()
func_6895 = relay.Function([], output)
mutated_mod['func_6895'] = func_6895
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6915 = relay.constdtype = "float64")#candidate|6915|(13, 13, 12)|const|float64
var_6916 = relay.var("var_6916", dtype = "float64", shape = (13, 13, 12))#candidate|6916|(13, 13, 12)|var|float64
bop_6917 = relay.power(const_6915.astype('float64'), relay.reshape(var_6916.astype('float64'), relay.shape_of(const_6915))) # shape=(13, 13, 12)
func_5351_call = mod.get_global_var('func_5351')
func_5355_call = mutated_mod.get_global_var('func_5355')
const_6921 = relay.const([-9.467846,7.400287,-4.815215,7.490773,6.669257,-2.676810,2.048866,8.455991,7.100635,-3.232165,6.998497,5.029262,-6.171914,7.726910,-5.703308,-6.212520,0.283782,-7.361614,6.726203,-9.376822,-8.014273,2.542213,-4.676880,9.424081,-8.612482,-5.950200,-4.695715,-0.089685,6.946368,-0.451704,1.440693,-1.203774,5.567070,-2.075740,7.636561,8.714309,3.030858,3.897555,-1.270105,3.048228,-7.130608,-0.794786,9.409246,6.834363,-9.080205,3.339898,-4.044866,2.478353,-9.858938,-6.591184,-3.822079,6.120992,-2.906831,0.945974,5.233155,1.933969,-8.266101,3.985308,0.983936,2.633800,-0.010746,0.266783,-7.829623,-2.854466,0.195183,-5.623212,2.676033,0.268988,-3.455282,-9.986972,-6.262234,6.960200,3.947692,-7.059252,7.711780,2.541919,-8.729630,-2.961314,6.648583,2.782499,2.123760,-5.319106,7.619906,-8.132958,9.792086,-8.675487,0.916927,-7.546728,-3.669316,1.054143,-3.648555,1.357499,7.186846,-8.757739,3.904308,2.003818,6.332090,5.022114,-9.793638,1.552702,-4.414103,2.633904,0.580818,-0.317010,-7.743838,-5.046846,-0.643410,-1.556712,8.371746,-1.239452,-6.508853,-4.093954,-3.671928,0.175624,1.378459,-4.899413,-3.915212,6.379318,7.364132,2.260065,3.415796,5.907943,3.759160,-1.733851,-3.245534,9.011939,-1.802027,-1.449154,6.256603,5.058180,-3.889934,-5.727043,7.342457,9.004195,-1.107234,7.905730,-0.036815,9.306048,-8.062949,-8.859950,7.782367,7.914743,4.045957,-6.823858,4.102535,-1.882152,2.142941,-5.527824,-2.186218,5.879517,-8.655057,0.045415,1.427228,1.980915,-9.052819,-9.125691,0.153376,5.999988,-1.469130,-0.940697,-3.678987,3.730771,4.077731,-2.727442,1.082861,-9.423715,-7.616444,-2.823739,9.032288,5.770682,-8.350974,1.479928,-4.432463,-5.574845,-7.881546,-2.590021,0.026803,-2.100805,-7.856986,7.467807,-4.669511,7.470273,4.307079,2.621268,3.914844,-4.701570,-6.803056,-1.726586,-0.937251,8.890366,0.266712,9.940584,-0.187471,1.517911,3.138245,-7.937704,2.415119,-0.740860,-4.441132,1.627367,2.984896,5.543808,6.306755,-5.034930,-0.981204,-5.971886,4.575183,2.588740,1.458933,-1.786650,7.489332,-1.719178,7.310930,0.081260,-6.998460,0.290098,-3.218330,-8.912536,-2.880485,6.696520,-2.929817,-6.798733,-5.973340,9.214819,5.271888,-3.058099,1.227986,3.987642,3.103275,-1.040464,1.507772,2.696315,-6.256946,9.452075,-1.277558,6.114870,-4.244591,7.955804,4.123832,-1.498801,-8.699849,5.459762,1.899901,-8.131149,7.233655,8.457476,4.880111,-1.513130,-4.601296,-0.741094,4.499145,0.395347,-1.319839,-8.937213,-7.876998,-4.129099,0.301180,-1.007451,-9.285976,5.617509,0.068991,-9.217647,-2.727303,-2.529186,-7.126031,7.929731,-1.098404,7.562866,9.390288,9.843796,-5.393066,7.229545,4.467606,-1.463527,-2.247178,-8.850331,-7.104056,-7.678146,7.516488,2.524357,-8.186894,2.517906,-4.974156,1.963542,-7.001119,0.179406,-9.600367,-4.302244,-0.311043,9.681478,5.741160,-3.526379,-2.506770,-2.700164,0.321112,7.990846,-7.968622,-2.888204,0.848009,3.213632,-1.424320,-4.205139,8.047797,8.608718,1.781351,-4.158561,-8.943416,8.862913,-6.015328,-7.122479,9.575755,4.189757,0.845327,-8.696552,2.019430,-3.024886,-8.443018,-6.944128,-8.378381,9.401638,-4.075472,-1.626190,-8.223071,3.214704,3.382646,-0.229985,9.414877,-8.706505,-6.446507,9.770909,-4.851797,3.064917,-8.440831,-8.603501,5.865980,-7.367735,-1.832337,-5.148916,-2.477577,7.611173,-1.403052,1.602538,2.196690,-2.831093,-8.765520,8.994151,1.095760,-8.370374,-9.206315,-4.765339,-2.293334,3.302930,9.429761,-9.659906,8.837903,5.071999,3.705993,8.945841,2.110067,-4.307403,7.611863,-7.147480,7.242369,-3.377388,-9.024165,7.931958,5.992494,4.104050,8.829873,9.616947,5.290334,-3.398682,0.407280,1.765471,1.543178,-1.784748,7.391002,0.949811,4.796282,-0.972253,5.323838,9.949074,-8.434467,2.761964,-0.150819,-7.696361,-0.551722,-6.169230,-9.782104,-2.122378,-4.698126,-1.865166,6.168931,-7.250065,4.253395,-0.418051,-9.726472,3.530367,-5.767997,-7.444509,9.447640,-1.594124,1.782267,1.912338,-5.313009,8.864416,4.887448,-3.986889,-4.302566,9.709730,5.414142,-1.861708,3.741683,-7.685329,-4.297706,-4.270451,2.598261,4.900461,-5.630515,-9.362723,-3.625558,3.575823,6.216057,4.374169,-8.277285,5.608220,-3.087888,7.004484,-1.963413,-1.887673,8.704942,-5.206614,0.933004,8.354040,2.139036,1.480219,-5.598343,4.379280,-3.343222,5.267282,7.463590,8.205876,-5.076340,-7.928414,-8.673983,5.196036,4.826383,9.424619,-2.731116,-1.168067,-5.015342,9.862229,-5.439947,8.421347,8.847788,9.633523,4.370728,3.282703,-3.242579,-2.411702,-7.548223,-2.115271,-6.909279,-6.444394,-5.944154,-7.229038,-3.500051,0.183275,-9.914486,-7.890787,1.977708,-2.903607,-1.378867,-9.010466,3.576246,9.179071,5.001153,-0.650492,1.127853,-0.254724,9.249966,9.714393,-0.357772,0.263239,2.888265,0.308388,3.065838,6.560518,1.061936,-8.309802,1.903209,-3.020492,8.940568,-9.239259,8.523290,5.368860,4.183722,2.543244,4.559812,-9.537272,-4.989625,-4.329830,2.534001,3.722130,1.287792,-1.990467,7.995798,9.650658,7.494562,-9.901656,-6.548587,6.863534,-8.618864,-3.087277,4.859050,-8.714868,-8.643128,-7.473914,-5.745533,-2.055606,0.496363,-6.500468,2.202465,-1.789340,5.377574,0.573031,-8.623564,0.411456,5.101410,-7.261441,-3.549667,-5.666118,7.185307,7.359801,-4.793454,-7.178857,-8.121319,0.252447,-9.086741,-6.661664,-6.583459,-5.680262,-4.868678,2.536077,6.875332,0.423976,-7.003446,-8.572804,-6.748811,5.036904,9.231820,-5.688210,4.357076,5.867168,2.310846,2.028335,1.971194,-3.911235,-5.447708,-6.445594,-3.439737,9.851642,4.965812,-5.510085,4.013663,9.610813,9.290039,-7.381153,9.030581,6.947256,9.631014,-2.856159,-3.236322,4.005400,-0.819320,-1.630367,1.888260,5.231513,0.400814,-0.340031,8.510527,7.597824,6.978979,7.392849,0.760863,-0.649820,-5.020915,5.462505,2.810251,4.466919,-2.189515,-6.706568,9.332645,0.136828,-9.824602,-3.610760,3.481787,-0.926203,0.894791,1.331351,-6.454081,-6.405995,-9.048076,3.067228,-5.336757,9.971315,-5.640522,-5.196607,7.738562,-8.667752,7.778022,0.252383,-4.018146,2.140566,-4.849147,-0.853671,-5.640779,6.251186,0.842966,8.900096,9.932527,-4.834165,-1.141065,5.472499,-8.719725,6.443020,-5.115218,-6.793615,3.661674,4.108887,-6.261871,-5.692468,-6.662787,1.896811,4.467215,0.344670,2.325170,-9.869326,-0.614055,8.912390,-1.835975,-6.486127,-2.437924,0.852282,-9.123119,5.391223,9.650760,-8.836029,2.055732,3.492002,-5.395081,7.654271,-3.144584,7.829826,3.567815,-5.401542,-2.797125,0.069822,4.617774,-2.386168,7.403756,0.359686,7.791843,-3.064665,0.593744,7.242490,-3.925023,-7.314865,2.803272,7.275332,-3.575546,-5.951638,-2.844526,0.272804,-7.003609,9.082599,4.244414,-7.526829,-7.401326,8.669451,-9.734648,6.643820,2.864615,-3.402847,-4.366791,-3.210981,0.903731,7.454482,-7.506681,8.126337,-4.377972,-0.902273,8.794257,-0.940470,6.372453,-8.300513,1.691473,-1.217569,4.517423,5.931733,-2.935125,-9.465970,-3.995466,8.388804,1.970877,8.941159,2.296593,8.826759,1.805925,3.537195,-5.667836,-9.399797,1.067118,-9.345541,9.360695,-4.252977,0.174959,5.487840,-5.912210,-4.800970,-1.144842,2.870480,7.754592,-3.920775,3.998188,6.983977,0.221976,7.880756,-7.146883,9.712384,8.496969,9.703511,9.614746,-6.865727,5.983688,1.552334,-0.230722,-5.454509,9.184965,-2.242082,-1.163044,-4.945315,-6.710846,-8.328157,-5.094428,-2.601449,-5.047444,-9.622600,1.342557,7.727479,-7.152874,-5.079500,-7.724072,-3.687193,0.878561,-8.844130,5.482533,-8.566822,-1.837246,-2.381118,-5.079804,-9.894527,6.948240,-7.822908,9.237322,3.080833,-6.889087,-0.081631,-0.833409,1.947897,-8.934313,3.165910,-7.939766,6.746695,9.173224,0.161676,-9.801600,-5.668714,1.880685,-6.740719,-6.912708,-8.600138,1.435127,2.466515,8.164740,-4.106423,-7.759308,1.983160,2.058162,7.018927,3.580870,-6.569583,-3.734231,6.157002,-1.941908,-2.621665,3.451766,7.081351,-2.224051,8.550135,5.479033,6.809645,5.354667,4.369268,6.611598,4.241382,1.171590,-0.100181,-6.740711,3.864159,-1.219070,-5.833437,-8.265691,-2.297408,-1.391403,8.540351,7.868897,-7.600317,1.958458,2.701666,-4.380734,2.628330,3.309923,-6.877016,0.423465,-0.320206,8.923901,-6.227082,-2.278281,-5.103971,-1.173406,4.743253,-2.376219,-8.328052,2.499791,-6.601899,2.652840,0.252318,-6.145418,-4.523865,-0.069273,6.838490,2.266631,8.158276,-7.700949,4.163111,7.084077,2.023383,-1.695845,-5.695425,1.859328,0.842797,-8.238409,2.237983,-8.255820,6.030011,-4.206983,5.739333,-2.729746,-0.928609,-8.954480,4.598146,-3.227399,-9.690301,-8.893759,-2.411796,9.756920,-6.878329,-3.486907,-5.066652,-3.875422,2.252106,-3.964601,-6.109837,-1.209546,-1.823170,-3.284541,-2.119457,-2.274597,8.883681,5.418995,-3.580132,-7.129087,6.306505,0.107693,6.257993,4.645709,-6.119542,9.383376,-2.779639,6.757187,6.045118,-7.137832,-0.742494,-6.556195,2.408102,9.094756,-1.856175,4.821307,6.510483,-0.733780,-4.010238,0.148922,4.581058,1.994450,-9.110584,-7.248822,1.371272,-1.094918,3.134398,6.977957,-4.496252,9.621691,-4.001728,-8.791447,1.874202,9.455331,-1.716800,-0.292474,7.083197,5.794600,2.974025,6.843996,-6.065983,-7.920430,-0.743810,5.742784,2.130029,-4.026201,4.939331,0.535429,4.865354,-9.594053,8.358354,3.384566,-4.626826,8.719056,4.662516,-7.310687,-6.163896,1.129639,2.294680,1.500648,0.099568,-3.607910,2.080664,6.973155,-7.486094,-2.804790,4.395333,0.046835,5.378222,5.080820,0.104336,-6.655514,-5.781623,3.877199,-5.095099,-7.347736,-2.335254,-4.143992,-8.309166,-1.094522,0.486180,7.824821,-9.642940,0.751841,5.590075,-4.320191,-1.359080,-6.519251,0.829067,-5.593705,-1.267462,9.771054,-1.670468,-2.695597,-0.349758,7.606134,-9.679996,-3.573510,0.478217,-3.699248,-1.208056,-5.295040,3.149674,3.277076,-8.259141,9.005794,9.813488,2.561806,-0.252200,-5.163512,-9.618209,8.325818,-7.959521,2.674541,1.302627,-7.111183,2.738976,-4.470792,7.435746,8.387798,-6.695398,0.966755,5.250196,3.715242,-3.946463,-5.694848,7.864659,5.711038,1.650199,-0.762232,-4.443177,-6.239741,4.145114,5.655691,1.192101,-1.566705,3.869523,9.322236,-9.887982,-7.365745,-0.676782,8.280443,-2.576817,-6.349298,7.869641,-6.056442,2.966736,1.908490,-2.877148,-2.121163,6.318383,5.931632,-1.383483,-0.204053,7.698794,7.202626,5.096489,0.362733,-2.312282,-9.808752,-5.773708,4.213652,6.596951,-8.347525,2.264102,7.806417,6.885028,1.180596,2.134930,-4.563960,7.358224,4.845249,-3.543149,-4.517362,-8.919961,2.754328,-1.522848,-8.006750,0.949343,2.171595,3.574638,-0.573735,1.745227,-1.782460,0.211823,8.128981,7.050823,4.397180,0.908303,-3.681931,-0.056135,9.941909,-3.879634,7.133831,-0.542770,5.075163,3.763612,8.806055,2.867486,-7.314222,-3.171180,1.280532,-9.411552,-3.847469,9.160727,6.295455,-3.389159,-3.049621,-3.516203,-5.895944,-1.170943,7.033234,2.273570,-4.037025,-7.516710,1.801078,-2.558787,-7.576098,-7.680006,-6.821536,8.228859,7.484001,-1.765587,6.801513,3.963828,-1.764283,7.776796,-6.934245,-2.520336,3.564133,2.873375,2.145208,-9.303712,-0.719831,-0.989109,-8.128241,-5.751540,3.475710,2.318274,8.216535,9.438282,-5.440258,1.335529,9.707831,6.126982,3.102841,-0.263429,-5.017132,-6.585418,4.389964,1.276855,9.640705,9.136839,6.721864,0.241673,-6.691342,-3.874357,3.405070,6.636467,3.584050,5.259408,7.798756,4.265891,-6.438783,-3.211024,5.164479,2.906113,7.877638,9.997477,2.480525,4.440437,4.121263,-5.482924,-5.320024,-2.182198,-4.995436,-5.436190,1.615793,5.363877,9.132465,3.419191,-0.062988,9.803231,2.460247,-4.395626,4.153688,-6.353805,0.300435,9.155144,-0.832955,1.031799,-2.157061,-3.849593,7.157547,5.178489,5.400737,1.273050,-8.596779,5.340943,-7.554026,-1.633381,-1.887885,-0.045838,-3.434516,1.406139,8.377948,8.332023,-4.670727,7.021986,-9.020743,-5.302851,9.134414,4.279032,1.087354,-7.005270,-4.101485,4.563526,9.397295,-6.992120,-0.467075,7.565543,-7.217900,1.248604,-7.743626,-2.034853,8.675160,4.390509,1.057757,-0.350405,2.982836,-2.501804,-8.804156,-1.691974,1.092554,8.246899,-9.426858,-9.201642,4.722716,5.398729,-7.916000,-8.258205,2.742717,9.089988,-3.167424,2.775311,-9.592510,3.651788,6.863711,-4.414368,-2.094724,-5.574760,-9.901620,5.667213,-0.130109,-4.795028,7.888255,5.281110,-7.393511,7.836471,-6.284288,-4.026180,-0.354361,7.152177,-4.637455,-2.908815,4.052733,3.717253,2.691480,-6.570768,-3.726503,6.226773,8.954268,-6.228483,8.964273,4.338873,-7.510265,-8.011404,9.835781,-1.107709,7.368743,3.849084,-8.414285,5.290558,4.594083,6.483243,-3.660997,2.543709,2.701937,9.783274,2.670058,8.849827,-0.917594,-8.746947,4.424459,7.606456,-1.205916,-9.931416,-0.166663,-6.316999,7.590649,1.803282,-4.831407,8.319195,-6.945196,-6.291850,4.182494,6.758184,3.127698,-2.363167,-2.348237,-6.577221,-0.697199,3.748818,-3.618875,-7.065677,-5.836673,0.662863,2.645131,-2.285563,4.504418,7.575969,-3.339487,-7.599503,4.612059,1.377588,7.729577,-5.787158,-3.727116,-9.986282,6.502002,-3.799772,-6.097928,2.597844,-9.066919,7.076272,-5.766215,8.082264,1.260027,2.444232,-1.179905,-7.747018,-8.930948,0.904168,6.073174,5.775080,-3.580940,-4.704202,4.559818,-8.712955,2.610266,4.121035,8.629546,9.492180,-2.333931,4.273814,9.807218,-9.770905,-6.860809,-9.947386,8.172311,-8.160498,9.922899,-3.538070,-9.232113,-9.083879,-8.452753,-6.581162,-7.507953,-2.441814,-3.732304,7.062261,-8.914838,7.110642,5.412148,-9.306069,2.797973,6.518783,3.926722,3.814802,-5.558395,5.146424,9.807634,-1.375737,7.257781,-4.981674,-6.360200,7.938007,-7.845136,1.838867,-5.623137,-9.336860,7.682698,-7.267614,-7.992938,-3.124598,-1.519925,0.591105,7.239272,4.149292,2.619991,-0.851232,-2.358044,-4.295441,-1.913383,-1.790412,6.617796,-8.255590,-3.375066,1.596360,-6.804665,-6.847636,1.315820,-0.990420,4.262680,-5.962272,-5.968923,3.463247,-6.531929,4.914133,0.083483,-4.452528,-8.951943,6.891341,3.220791,0.793780,2.101557,-0.207002,-6.270186,8.470359,5.753774,-1.616590,4.158756,-2.800186,2.526389,-3.001554,7.428040,7.032464,-5.952254,0.225054,6.026528,7.021245,-5.287187,6.692487,7.028125,-5.022232,-1.568006,-8.966930,-4.612516,-2.827616,-8.932108,6.319398,9.729475,3.639119,1.351277,3.890489,-9.558249,8.007214,2.338127,7.620636,-2.488706,0.240713,-4.109334,-8.366628,-7.278613,-9.158703,7.429384,-7.167092,-5.567300,-9.892759,-8.596641,-5.010914,3.861674,0.719131,-1.379432,0.743833,0.008352,-9.739308,-3.087089,-4.688194,1.343307,8.173855,-4.780667,1.301719,8.034865,2.719447,2.768675,-2.161207,6.208751,4.441974,-5.387715,-1.635469,2.221663,7.706931,5.355859,-2.920608,-0.900035,-0.761062,-7.900194,3.574652,9.082457,5.510691,-6.411556,6.218560,-7.302531,-2.991918,1.493706,-3.682918,7.986781,-1.034072,2.273158,4.550693,-7.862839,2.267288,6.499385,8.662681,2.495527,1.146827,-7.244041,6.910608,-3.044244,-5.308657,7.061120,-8.861279,-0.983050,0.444171,-7.390461,-3.031386,-6.676559,1.991532,-9.070885,5.678622,8.946543,-2.201655,2.538900,-7.894894,1.861284,-1.050429,1.628173,7.105417,3.681667,-1.569230,3.689492,5.133498,-1.968902,3.257202,5.775079,-0.076819,6.606060,-7.870744,-4.435576,-8.730766,5.785695,-2.093504,-5.016305,0.016760,4.086607,0.368607,-6.071616,-8.272053,7.684290,7.171037,-1.534699,0.387967,-4.467898,5.580502,9.097627,-9.737659,-2.322966,2.015626,-4.303119,-5.122170,-6.331953,-8.569982,-4.083310,4.796842,-9.638865,-8.431947,-9.803499,9.152828,-5.302297,-0.179572,-8.566717,-7.612079,4.466713,3.988026,-8.180770,9.523370,6.752801,0.956797,1.339611,9.009699,-9.955801], dtype = "float32")#candidate|6921|(1575,)|const|float32
var_6922 = relay.var("var_6922", dtype = "float32", shape = (14, 105))#candidate|6922|(14, 105)|var|float32
call_6920 = relay.TupleGetItem(func_5351_call(relay.reshape(const_6921.astype('float32'), [15, 15, 7]), relay.reshape(var_6922.astype('float32'), [15, 14, 7]), ), 1)
call_6923 = relay.TupleGetItem(func_5355_call(relay.reshape(const_6921.astype('float32'), [15, 15, 7]), relay.reshape(var_6922.astype('float32'), [15, 14, 7]), ), 1)
bop_6943 = relay.bitwise_or(var_6916.astype('uint32'), relay.reshape(const_6915.astype('uint32'), relay.shape_of(var_6916))) # shape=(13, 13, 12)
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
call_6948 = func_5276_call()
call_6949 = func_5276_call()
bop_6952 = relay.less_equal(var_6916.astype('bool'), relay.reshape(const_6915.astype('bool'), relay.shape_of(var_6916))) # shape=(13, 13, 12)
func_1190_call = mod.get_global_var('func_1190')
func_1195_call = mutated_mod.get_global_var('func_1195')
var_6956 = relay.var("var_6956", dtype = "float64", shape = (286,))#candidate|6956|(286,)|var|float64
const_6957 = relay.const([-5.409845,-0.477330,-7.876877,9.734688,3.241106,-7.365312,-7.025705,7.609118,-7.461158,0.761626,-4.608664,4.539917,1.697892,-7.834109,8.383869,-4.262766,-9.865261,-4.707043,-6.888425,6.027363,3.394203,-1.271157,-7.768860,7.489645,-1.753177,7.437277,4.659396,-2.358903,2.260750,4.987325,-2.317873,7.598768,-3.158791,-0.004490,3.640296,-3.605296,8.704821,-6.524500,-0.142127,-9.639195,-7.832814,4.397136,8.298096,-2.036997,-2.149149,7.642824,0.116846,9.387784,8.974727,-6.810730,0.589431,4.864195,-5.885859,6.642905,4.273399,6.286795,1.380287,8.239277,-1.529068,5.462041,0.708967,-0.819432,2.075623,-9.602181,0.339705,5.875856,1.087428,6.080206,-8.045173,-7.858204,4.115954,2.729261,7.762427,7.703943,9.812324,-3.385746,6.492562,4.252061,9.065687,9.763287], dtype = "float32")#candidate|6957|(80,)|const|float32
call_6955 = relay.TupleGetItem(func_1190_call(relay.reshape(var_6956.astype('float64'), [11, 2, 13]), relay.reshape(var_6956.astype('float64'), [11, 2, 13]), relay.reshape(const_6957.astype('float32'), [80,]), ), 2)
call_6958 = relay.TupleGetItem(func_1195_call(relay.reshape(var_6956.astype('float64'), [11, 2, 13]), relay.reshape(var_6956.astype('float64'), [11, 2, 13]), relay.reshape(const_6957.astype('float32'), [80,]), ), 2)
uop_6961 = relay.sigmoid(const_6915.astype('float32')) # shape=(13, 13, 12)
output = relay.Tuple([bop_6917,call_6920,const_6921,var_6922,bop_6943,call_6948,bop_6952,call_6955,var_6956,const_6957,uop_6961,])
output2 = relay.Tuple([bop_6917,call_6923,const_6921,var_6922,bop_6943,call_6949,bop_6952,call_6958,var_6956,const_6957,uop_6961,])
func_6965 = relay.Function([var_6916,var_6922,var_6956,], output)
mod['func_6965'] = func_6965
mod = relay.transform.InferType()(mod)
var_6966 = relay.var("var_6966", dtype = "float64", shape = (13, 13, 12))#candidate|6966|(13, 13, 12)|var|float64
var_6967 = relay.var("var_6967", dtype = "float32", shape = (14, 105))#candidate|6967|(14, 105)|var|float32
var_6968 = relay.var("var_6968", dtype = "float64", shape = (286,))#candidate|6968|(286,)|var|float64
output = func_6965(var_6966,var_6967,var_6968,)
func_6969 = relay.Function([var_6966,var_6967,var_6968,], output)
mutated_mod['func_6969'] = func_6969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6676_call = mutated_mod.get_global_var('func_6676')
call_7013 = relay.TupleGetItem(func_6674_call(), 0)
call_7014 = relay.TupleGetItem(func_6676_call(), 0)
uop_7038 = relay.log(call_7013.astype('float64')) # shape=(28, 48)
uop_7040 = relay.log(call_7014.astype('float64')) # shape=(28, 48)
func_5991_call = mod.get_global_var('func_5991')
func_5993_call = mutated_mod.get_global_var('func_5993')
var_7045 = relay.var("var_7045", dtype = "float32", shape = (80,))#candidate|7045|(80,)|var|float32
call_7044 = relay.TupleGetItem(func_5991_call(relay.reshape(var_7045.astype('float32'), [80,])), 2)
call_7046 = relay.TupleGetItem(func_5993_call(relay.reshape(var_7045.astype('float32'), [80,])), 2)
bop_7049 = relay.equal(call_7013.astype('bool'), relay.reshape(uop_7038.astype('bool'), relay.shape_of(call_7013))) # shape=(28, 48)
bop_7052 = relay.equal(call_7014.astype('bool'), relay.reshape(uop_7040.astype('bool'), relay.shape_of(call_7014))) # shape=(28, 48)
bop_7063 = relay.less(bop_7049.astype('bool'), relay.reshape(call_7013.astype('bool'), relay.shape_of(bop_7049))) # shape=(28, 48)
bop_7066 = relay.less(bop_7052.astype('bool'), relay.reshape(call_7014.astype('bool'), relay.shape_of(bop_7052))) # shape=(28, 48)
output = relay.Tuple([call_7044,var_7045,bop_7063,])
output2 = relay.Tuple([call_7046,var_7045,bop_7066,])
func_7074 = relay.Function([var_7045,], output)
mod['func_7074'] = func_7074
mod = relay.transform.InferType()(mod)
mutated_mod['func_7074'] = func_7074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7075 = relay.var("var_7075", dtype = "float32", shape = (80,))#candidate|7075|(80,)|var|float32
func_7074_call = mutated_mod.get_global_var('func_7074')
call_7076 = func_7074_call(var_7075)
output = call_7076
func_7077 = relay.Function([var_7075], output)
mutated_mod['func_7077'] = func_7077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6545_call = mod.get_global_var('func_6545')
func_6547_call = mutated_mod.get_global_var('func_6547')
call_7081 = func_6545_call()
call_7082 = func_6545_call()
uop_7090 = relay.acosh(call_7081.astype('float32')) # shape=(28, 48)
uop_7092 = relay.acosh(call_7082.astype('float32')) # shape=(28, 48)
bop_7097 = relay.maximum(uop_7090.astype('uint64'), relay.reshape(call_7081.astype('uint64'), relay.shape_of(uop_7090))) # shape=(28, 48)
bop_7100 = relay.maximum(uop_7092.astype('uint64'), relay.reshape(call_7082.astype('uint64'), relay.shape_of(uop_7092))) # shape=(28, 48)
output = bop_7097
output2 = bop_7100
func_7102 = relay.Function([], output)
mod['func_7102'] = func_7102
mod = relay.transform.InferType()(mod)
mutated_mod['func_7102'] = func_7102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7102_call = mutated_mod.get_global_var('func_7102')
call_7103 = func_7102_call()
output = call_7103
func_7104 = relay.Function([], output)
mutated_mod['func_7104'] = func_7104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6545_call = mod.get_global_var('func_6545')
func_6547_call = mutated_mod.get_global_var('func_6547')
call_7119 = func_6545_call()
call_7120 = func_6545_call()
func_6597_call = mod.get_global_var('func_6597')
func_6601_call = mutated_mod.get_global_var('func_6601')
var_7122 = relay.var("var_7122", dtype = "float32", shape = (1280,))#candidate|7122|(1280,)|var|float32
const_7123 = relay.const([-6,9,8,-10,-1,-4,5,-5,6,3,-9,4,-7,6,-9,-1,7,-2,7,9,-6,-2,10,5,-1,-1,-3,2,6,-1,-7,1,-2,9,4,7,3,-1,7,7,2,-8,-7,-5,2,-7,8,-3,2,10,-3,7,8,-9,4,5,-7,1,5,4,-3,8,-10,2,4,9,-10,-3,4,5,9,-6,-5,8,-4,-9,7,6,8,-1,-1,2,-9,-2,-7,3,-9,2,-5,-7,-3,5,4,9,-9,-8,1,2,5,4,-2,-7,3,8,10,-6,2,4,3,9,4,-2,5,4,9,3,-5,6,-10,6,8,4,3,5,1,-8,9,-7,-8,-8,1,10,-2,3,-9,-1,-3,6,-2,2,4,8,3,-2,8,-8,9,-4,4,-2,-6,-1,-9,7,-7,7,-10,-7,-10,-4,6,7,1,8,-9,-8,5,-6,-6,8,-1,-7,7,5,-2,6], dtype = "int8")#candidate|7123|(176,)|const|int8
call_7121 = relay.TupleGetItem(func_6597_call(relay.reshape(var_7122.astype('float32'), [1280,]), relay.reshape(const_7123.astype('int8'), [4, 11, 4]), ), 2)
call_7124 = relay.TupleGetItem(func_6601_call(relay.reshape(var_7122.astype('float32'), [1280,]), relay.reshape(const_7123.astype('int8'), [4, 11, 4]), ), 2)
func_1406_call = mod.get_global_var('func_1406')
func_1409_call = mutated_mod.get_global_var('func_1409')
var_7129 = relay.var("var_7129", dtype = "float32", shape = (40,))#candidate|7129|(40,)|var|float32
call_7128 = func_1406_call(relay.reshape(var_7129.astype('float32'), [10, 2, 2]))
call_7130 = func_1406_call(relay.reshape(var_7129.astype('float32'), [10, 2, 2]))
func_6293_call = mod.get_global_var('func_6293')
func_6296_call = mutated_mod.get_global_var('func_6296')
const_7174 = relay.const([-9.467804,-5.991177,-4.583703,-6.133863,1.000366,4.658530,3.229970,3.808915,-9.615155,7.019410,5.979982,-1.820471,-8.602388,1.908293,0.796294,-3.818919,0.770631,6.167877,0.779023,3.193835,-6.131894,-9.412591,1.183551,-3.740390,2.970656,-7.767114,7.751643,5.815448,3.340754,1.531054,-2.526829,-1.249415,-4.924806,8.387806,0.028719,-5.383759,9.907862,7.985154,0.922453,2.494486,-3.408861,3.426880,-2.467608,7.410967,5.859047,-3.601336,-6.899669,-7.340426,2.593087,-6.782290,-1.174664,-2.190510,-0.622914,2.961767,-3.956088,-0.285095,-4.814246,-0.207747,-5.474697,-0.485458,0.203287,8.787101,-7.491223,-6.187664,6.422156,-2.743301,-2.932318,-3.268690,0.125322,-5.466875,-1.643369,-2.646824,-4.536058,7.067742,-5.429290,1.959024,-9.574307,9.862098,-5.139475,-6.693060,6.871113,1.810278,-4.494902,-8.664773,6.610918,4.135747,2.728797,-3.788646,-1.220873,2.846918,-6.861277,-9.627356,5.877572,8.711930,-8.603042,-7.815675,-2.183551,1.213654,7.049223,-6.542634,-3.634630,-6.468906,9.915027,3.892926,-4.134286,-6.236041,1.083443,1.503444,9.419082,-2.968287,9.952157,4.562247,8.007184,-1.204354,-3.535598,7.524273,-7.735942,-7.381689,5.919134,5.069262,-0.267206,-0.710275,4.118640,5.968611,-4.332102,-8.098474,-5.922255,3.730849,-3.432698,-3.421065,0.771715,3.254163,1.785918,7.792706,9.874607,-0.767751,3.715202,-7.081247,-9.085795,5.838181,9.972807,-9.501252,5.874062,4.973108,6.254781,-2.663402,-8.104724,-0.054335,2.462323,-5.632180,6.591849,8.926890,7.241637,9.276296,4.986929,-1.060872,-4.579979,-1.635678,-7.101441,7.817399,4.355659,-1.707774,1.232992,7.430575,0.601368,1.442912,-3.268680,8.407899,-6.236583,1.236013,5.534169,4.198037,9.920477,6.749326,6.006325,2.637847,-0.793865,-2.627781,4.407567,-5.220580,2.970511,2.001460,-5.631825,6.794075,4.305153,-6.654859,-3.176097,-6.847229,6.386980,-2.712699,-5.081142,6.906728,8.852685,-7.609153,2.239689,8.208362,-5.581739,-8.392846,7.454144,-0.584391,0.624224,3.946650,-0.725397,7.211808,9.376057,-0.169710,1.823616,-1.715174,-2.342114,1.011259,-8.604177,-9.293943,3.278243,2.036989,8.338590,4.206969,2.511875,-7.696405,-2.375278,7.095839,0.408507,1.688806,-6.327614,-4.380489,-1.050484,-2.618051,-1.706260,-5.617280,-5.790466,0.056215,3.524146,-2.595744,6.379168,-5.464739,-5.911845,-8.054426,7.033231,-0.570750,0.144509,-7.878704,7.395438,-0.849443,-8.903114,2.943256,5.260592,-1.662704,-0.001141,8.930842,6.760863,2.195653,0.996697,-9.337748,-6.353721,-5.573612,5.946184,0.665085,-0.141552,-2.278575,-6.787746,5.885144,-4.458669,-2.915641,-6.980122,8.325409,3.067364,3.996628,-4.523132,-2.672921,-4.633887,-2.196084,5.522978,-8.642492,-8.735399,-9.438775,4.952695,-0.834130,5.614221,-6.704517,-7.402444,-9.443078,-5.342714,-0.144396,8.705598,3.121320,-7.255687,2.819191,-1.610794,7.734704,-6.103595,9.954128,1.960062,-7.728522,5.817163,-4.033872,-5.922827,5.136779,-2.922406,3.691095,-8.821485,6.160603,-9.264945,1.287575,9.985916,2.301822,-9.287284,4.082906,-7.001823,2.080399,-8.644137,6.547501,-8.982171,4.024674,9.996379,-9.970918,-2.882580,-7.773014,-4.009752,9.623038,-9.361976,4.240019,2.391006,-2.324837,-4.989907,6.212797,2.947487,3.000969,-3.732564,-2.692489,8.871869,3.263849,-7.835485,6.410485,3.460461,-6.015369,6.803612,9.017423,-8.534267,0.040177,5.411647,8.493147,2.531223,-4.841442,-9.210339,6.914256,8.277815,9.215527,-9.767727,-5.271054,2.085130,5.710206,-4.922842,0.762222,-7.838510,-1.072201,-8.694903,-1.525800,-6.465158,1.333013,4.376615,7.595115,2.619482,6.602656,5.991668,-0.533533,-8.212080,7.989705,-4.571928,-8.993160,0.678496,-2.987029,-0.938168,-7.032746,7.748659,7.165626,-7.250296,6.566996,7.597410,-8.998807,-8.234850,2.389862,-8.199845,8.565208,-7.558265,-9.714918,-0.616446,9.567809,5.686373,-2.355298,3.284254,-0.242342,-0.135593,5.747402,-9.581670,-2.548349,-3.263368,1.423390,-9.907995,3.578736,-2.382054,1.037944,-4.125643,-5.946288,-4.566893,-7.060398,-5.633665,6.682463,-5.681233,8.963662,-5.376218,8.102974,9.888629,-9.375133,-4.685753,-0.864056,8.931335,8.017568,-1.878917,9.406344,-0.985180,-5.590565,-3.408423,2.602177,8.054391,9.418606,-6.517848,-6.158838,-6.886992,-7.797859,8.602927,2.825293,-1.674598,-3.859622,-6.822028,3.863489,-2.756406,-7.652247,6.149140,4.718039,-7.607941,0.766291,-0.828531,-5.598314,-0.085872,1.970214,-5.128145,-6.218450,4.993294,4.872920,-9.020524,3.302706,7.785918,-7.498725,9.079722,2.320548,-9.655377,3.111565,-3.061255,2.491773,-1.509254,-8.307126,-4.729625,8.162051,-1.580571,4.163711,7.413759,4.596688,-2.236097,5.525928,9.177193,6.568857,6.140669,-5.487120,7.737724,-3.974919,-4.565646,-4.087762,2.525360,5.337750,-3.885931,3.840700,9.834306,-8.263133,-0.427724,5.723476,-1.730172,5.380654,4.189496,-8.336043,-3.861001,-1.328362,7.686098,1.215093,-9.092733,-4.334042,4.547410,-4.885894,-2.415202,2.334108,8.332519,0.835752,4.693531,6.028338,-7.394961,2.558072,1.841775,-5.257432,-2.175016,0.881197,-9.960781,-4.756725,4.716151,-7.124846,0.920650,-1.693374,-2.120400,0.888134,1.307557,2.570265,-0.298526,-0.680254,-7.389274,-1.179257,-1.846665,-3.892116,-0.890343,-7.806620,4.085796,8.085181,-7.132509,1.893068,1.671252,1.462380,-1.025011,8.776971,4.781144,-9.256218,-3.545412,8.253450,-5.568978,6.004914,-8.235158,5.616219,-3.666437,-5.943620,-9.075164,1.690606,-6.463141,-8.404992,8.072342,3.084068,4.728488,3.086191,4.081892,-0.155631,-8.867706,-7.586189,-5.395133,-4.617567,-6.870906,8.855588,3.304225,1.986469,2.471946,-2.133384,4.111970,-6.769896,1.795058,-1.023450,-3.217038,-7.721197,-3.750420,4.457869,-8.157369,7.769113,-7.498662,-5.037233,7.152318,-3.943120,1.182323,-2.686665,-3.548984,-1.336314,-6.438168,-8.798477,8.293770,7.934331,2.526820,-9.771374,-1.646987,8.317228,5.208518,-9.075390,6.083214,8.623920,9.796027,8.095485,-5.622483,3.854498,-2.984580,5.586230,9.165799,2.062231,7.756252,-8.122940,9.983031,7.578807,5.280285,7.518182,-1.802364,-4.926305,-1.819270,6.144801,6.398992,6.830315,2.072733,1.859477,4.755042,1.699264,3.425097,2.769144,7.127896,7.767065,-3.276913,0.769761,9.529518,2.051448,6.936197,9.678418,0.773032,-6.602909,5.379556,6.535567,-8.327970,-2.015071,6.239331,-2.144621,-1.814732,3.816430,7.302005,4.102776,-4.532252,-1.590205,4.185417,-4.728615,5.716471,5.537671,0.756213,9.402818,-3.100667,9.944438,9.075971,-2.452631,3.900035,0.241403,0.016364,2.882934,1.168307,8.819926,5.866307,7.377352,7.022651,-7.997823,-5.553470,-0.293687,7.423386,-3.614234,-8.719031,-8.306214,-3.949912,-7.094687,-3.535933,-3.299855,9.041390,-5.003659,0.455455,5.076358,1.340778,0.885255,-9.762804,-6.029873,1.376717,-8.393055,8.288400,2.288927,-7.309654,3.652330,-7.925019,-0.357071,-4.722986,-8.491372,4.890282,-1.389950,0.043927,-2.119653,0.776471,3.470153,1.190441,-3.072357,-7.270347,-0.158284,4.817775,1.896202,0.769796,-6.069719,0.042422,-9.264324,-7.408052,0.568033,-6.117769,1.412137,-6.395240,8.552947,1.509687,-8.172028,6.520536,-8.481076,3.497793,-6.400806,-4.381110,-3.288880,-3.239670,-1.097288,2.184485,-5.152321,6.822745,6.100621,9.464567,7.089943,6.639174,-0.582526,-8.695010,9.068666,7.867561,7.935049,-0.148559,5.202399,-7.820912,-6.994431,0.539694,0.745204,-2.054543,-4.555517,1.949496,-7.964869,5.547556,-8.266927,-7.768978,1.178353,7.919887,8.406432,-9.078308,-2.103151,-6.718906,-3.166450,-2.319860,-2.762736,9.210243,-0.761454,-1.363277,6.531709,9.051903,7.437812,1.674347,3.999925,5.521030,8.777243,8.239751,-8.900945,-3.253940,2.363250,3.348986,1.535883,-1.576172,9.340540,5.376353,3.758894,-3.439294,-0.987298,5.110546,5.797244,-1.461032,5.070337,-7.157720,9.767553,-2.503623,2.326190,-8.093908,-9.582413,-1.414470,5.718564,-5.313011,2.435080,5.252916,7.716322,8.413207,-1.095820,9.806803,-1.587964,8.393136,-5.253462,-6.757702,0.645561,-1.247014,-1.942720,-4.476703,-0.287680,-8.932021,9.131328,6.228588,-4.693375,0.493467,-8.445613,-3.452316,0.089577,-5.437402,-0.958365,0.562128,1.401103,6.269374,9.969053,9.408224,8.739126,1.449274,-9.553798,5.976865,6.898954,1.103395,6.263222,-0.063027,4.460049,-3.979672,-2.696354,-6.519767,4.772154,7.290189,4.106724,5.008233,-0.453219,7.383490,1.946814,8.471093,-8.659559,6.521099,6.707993,-3.528869,-1.564563,-4.104664,-6.216548,1.378239,-4.542049,-9.125637,9.697335,-6.695815,-2.566065,-7.506991,-8.472242,5.616716,-8.864551,-3.660105,-7.069810,1.744142,7.071817,6.212116,-6.001587,-9.986857,1.064297,-7.145446,-3.588827,-5.372230,-9.981927,-1.137998,8.637843,4.097097,-7.090680,3.404510,-2.027634,-7.349735,-2.815701,-1.712446,-8.975825,5.387247,5.594754,-2.766809,1.052055,7.731077,-9.055315,-6.203041,5.713745,0.524472,-2.142933,-5.881450,3.884638,-8.650841,4.724313,-0.675019,4.090987,3.258466,3.143568,-1.638813,4.936444,1.612715,-1.508717,8.362784,2.834613,0.939221,9.354543,3.469224,-4.936613,-2.816819,-7.111728,6.175662,-7.625316,-0.767453,0.220845,-6.257396,-0.282742,-5.190951,-0.823279,-6.762842,-6.235049,5.143571,-9.136658,2.159366,-8.695157,-5.796069,-1.799337,8.138529,-2.889534,4.939288,-5.096391,-9.815551,4.749425,9.622678,-3.773914,4.702371,-7.156899,-4.131609,8.283907,0.938691,4.845809,-3.162343,-3.065374,2.693888,-1.483267,-9.624940,-6.371302,6.263114,3.519448,2.850297,5.386261,-0.817319,5.153583,-6.820328,-4.033264,8.898585,1.110809,-8.852841,1.152623,-9.434654,-3.655631,-8.907593,-8.419557,-5.331051,7.677043,9.344331,-0.638895,-6.874593,3.623401,0.668339,-4.967867,3.100909,-1.635014,9.868347,0.091824,3.966195,-5.698621,9.747952,-8.836259,-1.370860,4.842709,-4.823039,-1.546526,-2.518528,5.913946,4.798747,-4.594842,0.747383,-8.342411,-1.319549,-0.444413,7.898413,5.775621,7.390605,-3.096905,0.921413,-4.229265,-1.367400,-3.242313,-9.370805,-8.244750,-8.030938,-8.898358,8.665639,-8.845039,8.029195,-4.890011,-3.594503,2.179650,1.902645,5.966242,9.348805,-7.218732,-8.892329,-7.003340,-2.820528,0.939462,6.953151,-9.127172,-8.646858,-2.510824,7.027117,3.717481,8.066954,-5.221383,-9.829275,9.646888,7.148388,0.641182,9.241008,-7.464400,-1.646606,-9.617437,8.384690,6.502166,9.137046,9.774606,-3.931938,-7.061586,1.141926,-8.786283,8.868395,-0.449027,2.518856,-1.371920,5.674152,-6.199273,-9.724413,-4.248603,8.601002,-7.112327,8.142483,3.004868,-0.100311,6.152634,-3.108239,4.169410,-3.845385,-7.363183,-2.712559,-6.225696,9.193872,9.030901,5.683410,-8.592693,7.399090,3.940884,-4.223905,-3.556933,2.530676,4.857080,8.848506,8.126046,-2.487952,2.638010,-4.764199,-0.061021,-2.549142,-3.051155,8.094876,-1.251102,9.153664,-5.285186,0.682061,-3.433315,-4.320920,-7.558755,-7.029064,6.733698,-3.412850,4.362116,-3.092069,-9.154766,-8.458607,-6.450898,3.278707,-7.435928,8.945588,0.965701,-4.901753,2.722276,6.184329,-6.692009,5.847536,-4.071924,3.124055,-1.851579,1.385923,-9.579842,1.314719,-9.331172,-3.737559,6.081794,5.545043,-8.571827,-7.882523,-9.208789,5.602649,-0.207812,7.953692,-9.470654,-5.030519,-1.373999,-1.483101,8.264112,-4.597820,-1.139191,8.766377,-4.353030,-2.281475,-5.156146,-9.793951,-2.632045,1.919859,-7.267639,9.660343,0.187520,7.807581,-2.889830,4.232613,-4.867177,8.489882,-7.091294,-8.460950,9.326935,8.473552,-6.410944,-1.915078,7.100135,7.074592,-4.693639,3.972805,-1.913572,-0.897897,-6.684254,2.558411,8.009265,7.955305,5.747686,-6.599604,6.941810,-2.821318,5.876621,-0.604700,-1.903476,-9.470835,9.835118,6.884985,-9.697161,-3.462694,1.934552,8.708911,-7.680112,-0.327619,5.579052,-7.613219,-3.748313,-3.743771,2.676176,-8.231310,-1.947870,0.993312,-4.936728,3.616555,-2.899048,0.686897,0.725097,-7.810646,-9.683811,5.577232,1.592350,-1.023006,-6.007073,7.680011,8.651221,-8.523910,-5.669182,4.246566,-0.412247,7.114865,-7.550237,-7.888689,-9.588173,5.733137,6.208879,-6.602604,-1.821079,-4.724269,7.581806,5.027841,1.316942,-2.593673,1.262040,7.761714,-9.183285,-1.316898,2.207200,2.093680,8.913294,-9.540429,1.742760,4.837028,1.937080,0.648622,6.525096,-3.523225,-8.927330,-9.087322,-4.606608,9.167380,-9.966486,-3.418995,-1.050872,7.496189,-0.441817,-5.523477,-9.326755,-5.175954,7.748289,-4.689846,-6.387969,7.404092,1.049627,-2.941207,2.960665,2.231765,7.200683,-8.213189,3.765824,4.296708,3.200245,4.891373,8.177712,-1.621424,1.907659,0.707307,6.393328,-5.471677,-6.222656,-9.470013,-5.339655,9.918041,9.237085,2.350525,-1.672316,4.158589,-4.525946,8.220528,-8.467765,-5.596041,8.430136,6.299345,5.585021,3.891636,-0.796408,3.973062,7.043431,-3.216228,-6.388081,9.553782,-9.999490,5.933291,-9.992537,-5.052311,-7.680819,-1.713293,-1.952385,-9.867766,-2.948765,9.131475,2.632275,6.996171,6.975854,-2.878971,-7.625211,-4.244976,-0.012501,8.966126,5.582083,9.441708,2.485968,6.320064,9.889598,0.087596,8.056000,-5.386914,8.932012,-5.158308,4.862100,9.704048,-0.277330,-1.480679,7.457131,0.412410,6.849269,-7.299887,2.879489,-9.476469,1.739613,-8.542933,-6.284841,7.254423,-3.220302,-4.035108,-5.379359,8.168367,-0.206076,5.251373,-0.776612,-0.777200,8.717590,-1.140243,-7.061534,5.115003,-6.046156,-5.764964,-1.842630,-3.067979,6.202362,-9.219485,-8.671715,4.012975,0.614548,-7.530482,8.057498,2.768298,5.353113,2.875037,-0.177979,8.367889,-1.338586,1.103138,-2.593435,-5.693164,4.219756,6.249874,-5.988645,-4.603579,-3.938256,5.189517,0.969155,-6.755775,-1.868806,-0.763966,6.290169,0.183397,3.317892,-8.659931,6.205792,-3.604170,-7.025929,-5.063896,-7.996699,-8.082563,-7.490050,-0.694325,9.550433,-2.882835,0.436133,-5.479240,7.607266,-5.091945,5.931666,-1.926207,5.682543,5.528781,-8.032609,6.900233,-2.123613,4.736850,8.349055,-3.002213,0.785831,2.730082,4.371606,9.665235,3.040463,5.644406,-8.283193,2.390799,-8.244577,7.472001,5.484652,1.864275,6.490725,-1.474915,2.891138,5.966636,4.127368,1.859614,-2.898426,9.210552,-1.099704,-4.606937,-8.929324,6.558533,-9.608286,-1.917811,5.392976,2.963572,-5.710015,6.036461,-4.407150,-1.441127,0.664944,-7.147300,-9.712602,-3.185246,2.686967,-3.434881,-0.077328,-7.047569,-5.693158,-0.461620,1.567623,-2.438344,9.920617,2.547344,-2.779650,-5.153028,5.945051,-8.977057,-6.786877,-1.902617,4.334061,-1.087337,-6.628641,6.500869,1.390795,-1.319033,8.299716,-3.595981,6.092982,5.595848,-8.025781,3.179682,-4.730645,6.432539,-5.684613,-2.519021,-4.911408,-5.603141,-4.339650,-0.428277,2.540854,-7.610779,1.125661,-7.453432,-3.562529,4.500908,9.642869,-6.838332,-1.173683,-7.718691,6.272352,-0.397884,1.370152,9.182595,-4.193252,7.840092,-9.608538,2.516823,5.970808,-4.183414,0.925561,-5.186021,0.714233,-6.223055,-4.971636,-4.655515,-9.815843,-3.071712,7.599318,5.066943,9.651159,-3.000687,-8.399615,5.967613,8.760068,4.560753,7.939899,5.080767,-1.076546,-5.129926,-9.033837,-9.062541,-5.982173,5.494547,-8.554911,3.152875,1.602297,-0.694914,4.157788,4.965299,9.936257,5.223936,-9.244638,6.308964,9.765761,-4.088071,8.630115,-7.177904,4.535142,2.700120,-4.105580,6.783423,-6.703059,1.546413,0.957533,-1.051429,3.217785,-7.334194,-7.337900,-4.646559,5.646363,-8.071408,0.157101,-3.987211,-3.061603,4.831202,6.111787,-1.171506,-2.616514,0.250047,2.737372,-5.708441,-1.241901,-9.539936,8.290574,-2.074987,0.532128,7.300484,2.529275,1.096385,2.847619,-4.074305,8.034320,0.661226,-7.796710,-1.738149,-6.213002,-1.825230,4.253522,-2.113473,9.476117,2.553397,9.505364,2.528449,8.328369,-4.145316,9.173694,8.117970,9.934860,-0.701134,0.025026,9.697535,-6.494393,-1.667131,6.808183,-7.157257,1.205316,4.245435,-8.633922,5.510063,-4.513853,-0.136155,-0.858893,-2.637423,-1.245413,2.932122,1.872193,-5.513670,-0.977292,7.042280,6.084641,-5.506665,-0.535977,4.208037,0.946423,-8.001148,-0.158429,4.772273,-2.265275,-5.434312,8.150077,-7.491228,5.618120,-0.247116,-1.051874,8.255656,5.694226,-4.948304,6.858746,-6.677874,6.805475,-7.142406,9.513480,-1.077965,-8.141706,9.634969,5.950488,-4.551672,-9.597732,-5.367273,9.789488,-3.876440,-0.716947,-1.098104,-0.705480,-2.542339,8.765801,3.196941,-6.913348,-8.722424,-5.178726,-4.040501,7.661026,-6.475014,1.031936,-3.493596,-9.515679,9.128899,-9.918305,5.763223,-8.985346,-3.157697,-6.861843,5.381629,1.311591,9.669643,9.668188,1.561407,4.052224,-8.248406,1.444357,9.614536,0.272188,-8.500335,-2.214286,-4.365551,0.962708,-0.754894,-5.316162,-5.353980,7.683717,0.232084,-9.413757,2.905389,3.405345,-1.078010,5.200845,-0.359024,7.312832,-5.753550,-2.938400,-6.822531,1.431540,-2.770898,-2.674728,9.691858,-4.738635], dtype = "float32")#candidate|7174|(1680,)|const|float32
call_7173 = relay.TupleGetItem(func_6293_call(relay.reshape(const_7174.astype('float32'), [15, 16, 7])), 1)
call_7175 = relay.TupleGetItem(func_6296_call(relay.reshape(const_7174.astype('float32'), [15, 16, 7])), 1)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_7176 = relay.TupleGetItem(func_5062_call(), 1)
call_7177 = relay.TupleGetItem(func_5064_call(), 1)
uop_7185 = relay.tan(const_7174.astype('float64')) # shape=(1680,)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
var_7194 = relay.var("var_7194", dtype = "int16", shape = (2,))#candidate|7194|(2,)|var|int16
var_7195 = relay.var("var_7195", dtype = "int16", shape = (168,))#candidate|7195|(168,)|var|int16
var_7196 = relay.var("var_7196", dtype = "float64", shape = (286,))#candidate|7196|(286,)|var|float64
call_7193 = relay.TupleGetItem(func_2306_call(relay.reshape(var_7194.astype('int16'), [2, 1, 1]), relay.reshape(var_7195.astype('int16'), [2, 6, 14]), relay.reshape(var_7196.astype('float64'), [13, 22]), ), 1)
call_7197 = relay.TupleGetItem(func_2310_call(relay.reshape(var_7194.astype('int16'), [2, 1, 1]), relay.reshape(var_7195.astype('int16'), [2, 6, 14]), relay.reshape(var_7196.astype('float64'), [13, 22]), ), 1)
output = relay.Tuple([call_7119,call_7121,var_7122,const_7123,call_7128,var_7129,call_7173,call_7176,uop_7185,call_7193,var_7194,var_7195,var_7196,])
output2 = relay.Tuple([call_7120,call_7124,var_7122,const_7123,call_7130,var_7129,call_7175,call_7177,uop_7185,call_7197,var_7194,var_7195,var_7196,])
func_7210 = relay.Function([var_7122,var_7129,var_7194,var_7195,var_7196,], output)
mod['func_7210'] = func_7210
mod = relay.transform.InferType()(mod)
mutated_mod['func_7210'] = func_7210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7210_call = mutated_mod.get_global_var('func_7210')
var_7212 = relay.var("var_7212", dtype = "float32", shape = (1280,))#candidate|7212|(1280,)|var|float32
var_7213 = relay.var("var_7213", dtype = "float32", shape = (40,))#candidate|7213|(40,)|var|float32
var_7214 = relay.var("var_7214", dtype = "int16", shape = (2,))#candidate|7214|(2,)|var|int16
var_7215 = relay.var("var_7215", dtype = "int16", shape = (168,))#candidate|7215|(168,)|var|int16
var_7216 = relay.var("var_7216", dtype = "float64", shape = (286,))#candidate|7216|(286,)|var|float64
call_7211 = func_7210_call(var_7212,var_7213,var_7214,var_7215,var_7216,)
output = call_7211
func_7217 = relay.Function([var_7212,var_7213,var_7214,var_7215,var_7216,], output)
mutated_mod['func_7217'] = func_7217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6676_call = mutated_mod.get_global_var('func_6676')
call_7253 = relay.TupleGetItem(func_6674_call(), 1)
call_7254 = relay.TupleGetItem(func_6676_call(), 1)
output = relay.Tuple([call_7253,])
output2 = relay.Tuple([call_7254,])
func_7255 = relay.Function([], output)
mod['func_7255'] = func_7255
mod = relay.transform.InferType()(mod)
mutated_mod['func_7255'] = func_7255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7255_call = mutated_mod.get_global_var('func_7255')
call_7256 = func_7255_call()
output = call_7256
func_7257 = relay.Function([], output)
mutated_mod['func_7257'] = func_7257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mod.get_global_var('func_5400')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_7317 = func_5400_call()
call_7318 = func_5400_call()
uop_7327 = relay.acos(call_7317.astype('float32')) # shape=(4, 11, 4)
uop_7329 = relay.acos(call_7318.astype('float32')) # shape=(4, 11, 4)
func_6508_call = mod.get_global_var('func_6508')
func_6509_call = mutated_mod.get_global_var('func_6509')
call_7356 = relay.TupleGetItem(func_6508_call(), 0)
call_7357 = relay.TupleGetItem(func_6509_call(), 0)
output = relay.Tuple([uop_7327,call_7356,])
output2 = relay.Tuple([uop_7329,call_7357,])
func_7360 = relay.Function([], output)
mod['func_7360'] = func_7360
mod = relay.transform.InferType()(mod)
mutated_mod['func_7360'] = func_7360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7360_call = mutated_mod.get_global_var('func_7360')
call_7361 = func_7360_call()
output = call_7361
func_7362 = relay.Function([], output)
mutated_mod['func_7362'] = func_7362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_7397 = relay.TupleGetItem(func_5062_call(), 1)
call_7398 = relay.TupleGetItem(func_5064_call(), 1)
func_6293_call = mod.get_global_var('func_6293')
func_6296_call = mutated_mod.get_global_var('func_6296')
var_7406 = relay.var("var_7406", dtype = "float32", shape = (1680,))#candidate|7406|(1680,)|var|float32
call_7405 = relay.TupleGetItem(func_6293_call(relay.reshape(var_7406.astype('float32'), [15, 16, 7])), 1)
call_7407 = relay.TupleGetItem(func_6296_call(relay.reshape(var_7406.astype('float32'), [15, 16, 7])), 1)
bop_7409 = relay.floor_divide(call_7397.astype('float32'), relay.reshape(call_7405.astype('float32'), relay.shape_of(call_7397))) # shape=(15, 1, 7)
bop_7412 = relay.floor_divide(call_7398.astype('float32'), relay.reshape(call_7407.astype('float32'), relay.shape_of(call_7398))) # shape=(15, 1, 7)
func_5641_call = mod.get_global_var('func_5641')
func_5643_call = mutated_mod.get_global_var('func_5643')
call_7440 = func_5641_call()
call_7441 = func_5641_call()
output = relay.Tuple([var_7406,bop_7409,call_7440,])
output2 = relay.Tuple([var_7406,bop_7412,call_7441,])
func_7443 = relay.Function([var_7406,], output)
mod['func_7443'] = func_7443
mod = relay.transform.InferType()(mod)
var_7444 = relay.var("var_7444", dtype = "float32", shape = (1680,))#candidate|7444|(1680,)|var|float32
output = func_7443(var_7444)
func_7445 = relay.Function([var_7444], output)
mutated_mod['func_7445'] = func_7445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mod.get_global_var('func_5400')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_7471 = func_5400_call()
call_7472 = func_5400_call()
var_7475 = relay.var("var_7475", dtype = "int8", shape = (4, 11, 4))#candidate|7475|(4, 11, 4)|var|int8
bop_7476 = relay.less_equal(call_7471.astype('bool'), relay.reshape(var_7475.astype('bool'), relay.shape_of(call_7471))) # shape=(4, 11, 4)
bop_7479 = relay.less_equal(call_7472.astype('bool'), relay.reshape(var_7475.astype('bool'), relay.shape_of(call_7472))) # shape=(4, 11, 4)
output = bop_7476
output2 = bop_7479
func_7484 = relay.Function([var_7475,], output)
mod['func_7484'] = func_7484
mod = relay.transform.InferType()(mod)
mutated_mod['func_7484'] = func_7484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7485 = relay.var("var_7485", dtype = "int8", shape = (4, 11, 4))#candidate|7485|(4, 11, 4)|var|int8
func_7484_call = mutated_mod.get_global_var('func_7484')
call_7486 = func_7484_call(var_7485)
output = call_7486
func_7487 = relay.Function([var_7485], output)
mutated_mod['func_7487'] = func_7487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_7531 = relay.TupleGetItem(func_5062_call(), 1)
call_7532 = relay.TupleGetItem(func_5064_call(), 1)
output = call_7531
output2 = call_7532
func_7542 = relay.Function([], output)
mod['func_7542'] = func_7542
mod = relay.transform.InferType()(mod)
output = func_7542()
func_7543 = relay.Function([], output)
mutated_mod['func_7543'] = func_7543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5803_call = mod.get_global_var('func_5803')
func_5805_call = mutated_mod.get_global_var('func_5805')
call_7604 = relay.TupleGetItem(func_5803_call(), 2)
call_7605 = relay.TupleGetItem(func_5805_call(), 2)
output = call_7604
output2 = call_7605
func_7608 = relay.Function([], output)
mod['func_7608'] = func_7608
mod = relay.transform.InferType()(mod)
output = func_7608()
func_7609 = relay.Function([], output)
mutated_mod['func_7609'] = func_7609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6676_call = mutated_mod.get_global_var('func_6676')
call_7615 = relay.TupleGetItem(func_6674_call(), 1)
call_7616 = relay.TupleGetItem(func_6676_call(), 1)
uop_7622 = relay.atan(call_7615.astype('float32')) # shape=(28, 48)
uop_7624 = relay.atan(call_7616.astype('float32')) # shape=(28, 48)
output = uop_7622
output2 = uop_7624
func_7631 = relay.Function([], output)
mod['func_7631'] = func_7631
mod = relay.transform.InferType()(mod)
mutated_mod['func_7631'] = func_7631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7631_call = mutated_mod.get_global_var('func_7631')
call_7632 = func_7631_call()
output = call_7632
func_7633 = relay.Function([], output)
mutated_mod['func_7633'] = func_7633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7102_call = mod.get_global_var('func_7102')
func_7104_call = mutated_mod.get_global_var('func_7104')
call_7683 = func_7102_call()
call_7684 = func_7102_call()
output = call_7683
output2 = call_7684
func_7702 = relay.Function([], output)
mod['func_7702'] = func_7702
mod = relay.transform.InferType()(mod)
mutated_mod['func_7702'] = func_7702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mutated_mod.get_global_var('func_7702')
call_7703 = func_7702_call()
output = call_7703
func_7704 = relay.Function([], output)
mutated_mod['func_7704'] = func_7704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7608_call = mod.get_global_var('func_7608')
func_7609_call = mutated_mod.get_global_var('func_7609')
call_7714 = func_7608_call()
call_7715 = func_7608_call()
output = relay.Tuple([call_7714,])
output2 = relay.Tuple([call_7715,])
func_7745 = relay.Function([], output)
mod['func_7745'] = func_7745
mod = relay.transform.InferType()(mod)
mutated_mod['func_7745'] = func_7745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7745_call = mutated_mod.get_global_var('func_7745')
call_7746 = func_7745_call()
output = call_7746
func_7747 = relay.Function([], output)
mutated_mod['func_7747'] = func_7747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7542_call = mod.get_global_var('func_7542')
func_7543_call = mutated_mod.get_global_var('func_7543')
call_7768 = func_7542_call()
call_7769 = func_7542_call()
output = relay.Tuple([call_7768,])
output2 = relay.Tuple([call_7769,])
func_7771 = relay.Function([], output)
mod['func_7771'] = func_7771
mod = relay.transform.InferType()(mod)
output = func_7771()
func_7772 = relay.Function([], output)
mutated_mod['func_7772'] = func_7772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5903_call = mod.get_global_var('func_5903')
func_5904_call = mutated_mod.get_global_var('func_5904')
call_7844 = relay.TupleGetItem(func_5903_call(), 0)
call_7845 = relay.TupleGetItem(func_5904_call(), 0)
output = relay.Tuple([call_7844,])
output2 = relay.Tuple([call_7845,])
func_7849 = relay.Function([], output)
mod['func_7849'] = func_7849
mod = relay.transform.InferType()(mod)
output = func_7849()
func_7850 = relay.Function([], output)
mutated_mod['func_7850'] = func_7850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7542_call = mod.get_global_var('func_7542')
func_7543_call = mutated_mod.get_global_var('func_7543')
call_7851 = func_7542_call()
call_7852 = func_7542_call()
output = call_7851
output2 = call_7852
func_7867 = relay.Function([], output)
mod['func_7867'] = func_7867
mod = relay.transform.InferType()(mod)
mutated_mod['func_7867'] = func_7867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7867_call = mutated_mod.get_global_var('func_7867')
call_7868 = func_7867_call()
output = call_7868
func_7869 = relay.Function([], output)
mutated_mod['func_7869'] = func_7869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5400_call = mod.get_global_var('func_5400')
func_5402_call = mutated_mod.get_global_var('func_5402')
call_7870 = func_5400_call()
call_7871 = func_5400_call()
output = call_7870
output2 = call_7871
func_7874 = relay.Function([], output)
mod['func_7874'] = func_7874
mod = relay.transform.InferType()(mod)
mutated_mod['func_7874'] = func_7874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mutated_mod.get_global_var('func_7874')
call_7875 = func_7874_call()
output = call_7875
func_7876 = relay.Function([], output)
mutated_mod['func_7876'] = func_7876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7849_call = mod.get_global_var('func_7849')
func_7850_call = mutated_mod.get_global_var('func_7850')
call_7907 = relay.TupleGetItem(func_7849_call(), 0)
call_7908 = relay.TupleGetItem(func_7850_call(), 0)
func_4236_call = mod.get_global_var('func_4236')
func_4240_call = mutated_mod.get_global_var('func_4240')
const_7927 = relay.const([[9,-3,10,9,-6,-7,2,-10,5,1,4,-10,-7,-2,1,9,10,4,-1,-1,4,5,-10,-4,-3,-10,1,3,-7,6,-9,-9,6,-10,4,6],[-3,-4,6,-7,-5,7,5,3,-6,-9,4,5,9,7,-1,1,-3,-5,3,9,9,3,5,5,4,6,3,-6,-9,8,-7,1,6,-9,10,-8],[-4,-2,-4,2,-2,-6,4,-7,-6,-2,-4,2,-1,-10,9,-9,-6,5,7,-9,-10,3,-6,6,5,-4,-10,-10,7,1,7,-10,2,-4,7,-7],[-8,-10,1,6,-3,-9,-5,2,-9,10,7,-9,-7,8,-6,-10,5,9,-5,6,-5,9,-3,2,7,10,-3,-1,-3,4,-3,-4,-2,6,7,-5],[6,2,6,3,-9,-5,3,-1,-4,6,9,8,4,-1,8,5,10,3,-5,-9,-1,-5,2,-1,-10,6,8,1,7,-2,7,-7,5,5,10,2],[-8,-6,-2,-9,-5,-4,-6,-2,6,-6,-1,2,-4,-6,10,-6,5,-3,10,-3,-4,7,-1,-2,2,2,2,-9,-2,3,-5,4,-2,8,6,6],[-8,1,1,-6,5,8,5,-6,-4,-1,-9,-8,-10,2,10,8,-2,-7,6,7,3,-9,-3,-5,5,6,1,-6,2,8,7,-2,-7,-1,4,4],[-3,6,-9,5,-9,1,-4,-10,4,-10,6,-9,3,-9,10,-2,8,1,1,5,-4,9,-3,6,-8,8,10,-10,9,-8,3,-2,-10,-8,6,10],[-10,-9,7,-10,-2,9,-6,-5,-8,-2,4,10,4,6,3,-9,2,-6,3,-2,-4,9,1,5,-8,8,10,8,8,-3,8,6,1,-7,-9,1]], dtype = "int64")#candidate|7927|(9, 36)|const|int64
call_7926 = relay.TupleGetItem(func_4236_call(relay.reshape(const_7927.astype('int64'), [9, 12, 3]), relay.reshape(const_7927.astype('int64'), [9, 12, 3]), relay.reshape(call_7907.astype('float32'), [105,]), ), 6)
call_7928 = relay.TupleGetItem(func_4240_call(relay.reshape(const_7927.astype('int64'), [9, 12, 3]), relay.reshape(const_7927.astype('int64'), [9, 12, 3]), relay.reshape(call_7907.astype('float32'), [105,]), ), 6)
func_4236_call = mod.get_global_var('func_4236')
func_4240_call = mutated_mod.get_global_var('func_4240')
call_7930 = relay.TupleGetItem(func_4236_call(relay.reshape(const_7927.astype('int64'), [9, 12, 3]), relay.reshape(const_7927.astype('int64'), [9, 12, 3]), relay.reshape(call_7926.astype('float32'), [105,]), ), 0)
call_7931 = relay.TupleGetItem(func_4240_call(relay.reshape(const_7927.astype('int64'), [9, 12, 3]), relay.reshape(const_7927.astype('int64'), [9, 12, 3]), relay.reshape(call_7926.astype('float32'), [105,]), ), 0)
func_2796_call = mod.get_global_var('func_2796')
func_2798_call = mutated_mod.get_global_var('func_2798')
const_7934 = relay.const([[7.052392,-7.795940,3.707056,7.439023,9.606465,4.327956,5.480310,9.098004,-7.117917,-6.982236],[9.167991,-4.415308,-6.382959,-8.841936,-9.065121,-3.513764,-5.920260,-1.691233,-8.231347,-1.128976],[9.992114,9.576366,-7.130038,-2.049270,3.786680,8.230519,8.403636,-3.810325,2.788334,-7.231373],[7.914035,0.005510,3.050720,1.168007,8.223426,2.290637,1.177639,-0.479211,2.602017,-4.483474],[8.138011,2.587831,-5.641778,-7.641771,-7.154527,4.087221,3.846503,0.192004,-3.956771,9.542617],[3.841545,-0.210141,0.941923,-0.349820,1.253103,3.550984,-8.293122,6.204999,-0.155122,-4.071687],[-6.970574,-6.220217,-2.420196,-5.938816,-4.608545,-0.736454,-6.214937,2.480768,6.981447,-9.386116],[-4.416140,1.343633,4.908388,6.722726,1.462327,-7.104878,1.861133,8.440887,0.223604,-2.699011],[4.301006,8.986198,1.356090,4.191296,-9.221692,-8.356693,-1.065059,4.215172,-9.851339,7.190794],[-7.887639,-1.607067,8.671375,9.661557,6.242180,-7.602927,-8.751121,3.010455,-1.831515,7.767475],[-3.007439,-0.616398,5.118207,-7.617396,-5.080570,1.629732,-1.241135,7.216934,-9.739270,-2.654956],[-3.657617,-5.399807,-1.563101,7.690959,3.636062,5.084388,-2.014806,-9.211400,1.881119,4.777639],[-4.593186,-2.966739,-3.084301,-6.482157,-6.099846,9.095784,-3.190749,5.088298,7.391785,3.708539],[7.361896,-2.189205,-1.280672,-8.975344,-6.818093,-0.919555,-7.857811,6.572456,-7.886667,2.375346],[-8.175772,8.675117,0.399952,9.436017,5.845626,2.233803,8.213870,-1.518090,-0.419168,2.320871],[4.377693,2.086131,-1.427137,-6.414322,0.151227,2.365197,-1.557939,-6.383884,5.018773,-6.510570],[-7.072042,-4.646980,-8.407237,-3.356529,9.337821,0.089027,8.265067,-4.725379,1.998491,-3.787087],[0.630898,-1.928747,-7.866071,5.365337,-7.791332,6.647859,8.914878,-6.313778,-8.668298,-7.854767],[-2.718803,-9.010171,-6.421074,6.262073,-2.204416,-6.523810,2.548079,2.475958,8.355370,8.717172],[2.888635,2.012521,-5.247352,-5.365524,-5.628464,-2.112365,-2.494143,-2.568054,-3.361828,-5.880505],[0.494927,-8.393242,0.842050,-6.194113,-8.166635,-6.918510,-2.836707,-3.278627,1.916363,-2.778320],[8.594248,-2.130529,7.312475,-0.916503,-0.329985,-8.943063,-6.814501,-0.121746,2.928199,-4.879499],[-3.470643,1.780484,-4.047816,-7.397179,-1.309390,1.283996,0.888869,0.551262,-5.671588,-2.213289],[-1.672676,-2.561252,2.829568,-5.582258,-0.107509,-0.706847,4.389285,4.180361,4.048919,1.133156],[-4.074043,7.831125,-3.874203,5.371253,4.900128,6.326264,-1.823782,-8.199474,-3.118951,-0.674692],[8.763772,5.935741,-2.233702,8.806424,-8.985142,0.196306,5.804578,5.259144,7.885028,6.494441],[-8.928877,-6.291602,-5.577701,8.108127,1.830181,1.009240,-8.981669,9.701936,-0.726076,7.410126],[1.046948,8.341156,7.433193,-9.624269,1.309934,7.244860,-4.494672,8.928307,-7.586959,5.444409],[-6.714936,4.518922,-6.888834,-3.019496,5.497689,3.394093,-1.585044,4.357515,4.812220,3.050132],[1.492676,5.071535,-8.160903,4.579929,8.506403,0.536255,3.395083,-6.496085,1.675977,-9.306804],[-5.174874,-2.328624,9.394524,0.079533,7.166951,6.780251,8.061842,8.099704,0.192192,5.943382],[5.700951,1.850686,7.083477,-5.613639,-4.541427,0.693732,0.011807,6.499001,7.828440,9.916733],[9.570865,-0.151125,9.009265,7.403846,-3.369850,7.590112,5.685608,-8.947588,9.040519,6.172153],[-0.682311,-0.156117,-4.936155,-9.902557,-1.473996,4.441899,-3.414267,2.124504,3.488335,4.612472],[1.054029,6.265915,8.790593,5.428242,1.242609,-5.611707,9.493422,8.577062,-0.639852,8.772664],[6.926271,6.107532,-3.938533,-0.353166,1.717113,9.022522,-3.544131,7.266846,6.071854,-4.392277],[9.137769,-5.361935,-5.659447,9.643302,9.884655,9.362389,7.291874,-7.807960,8.046532,5.649052],[-5.729639,7.645988,3.960750,-7.579693,7.096710,8.150700,4.788403,7.355320,2.419209,4.209524],[-9.958544,-6.388282,7.372547,0.686758,7.922943,1.196483,-8.371714,-5.324639,0.656886,-0.244153],[-4.858095,3.164479,7.121713,8.832042,6.166028,3.732558,1.192162,3.188543,-4.724317,-8.465545],[1.450805,-9.759219,-7.865908,-8.809141,3.482781,2.205334,-8.936648,-4.677316,8.742747,0.028316],[-8.730367,-1.676647,-2.738095,-8.447884,1.741762,-1.678396,-8.619346,-9.060314,0.948411,-2.340776],[9.136164,-2.094516,-7.271295,6.629054,-2.179977,1.258993,2.797445,5.441253,1.860622,-2.776893],[-1.165776,-5.702339,7.734096,1.044422,2.846705,-3.750986,0.434076,-0.893367,9.691342,-7.363970],[-7.250660,-9.702920,9.551899,6.968875,5.488728,0.112642,-3.447103,-5.495755,-5.019277,9.617058],[5.965604,-1.170401,-5.697684,-6.628897,-7.119277,-2.802879,-5.320009,-2.496125,-3.790834,6.715058],[-4.160855,7.448214,-3.371731,-8.849373,0.023163,-8.940761,9.568249,-6.531900,8.135025,6.537769],[9.797544,6.263018,-2.935047,0.696481,8.649727,-2.707378,-2.477729,5.173395,5.181167,1.762870],[9.154820,2.894699,5.321882,-8.260217,4.056374,-2.302770,9.202223,-4.897287,-1.172529,-6.345100],[-6.963271,1.793046,-4.367332,7.970483,-5.306976,6.440448,-4.736060,9.143113,-0.393984,5.525499],[6.719311,-8.603126,5.867944,1.113320,-7.137149,9.747679,-3.316145,3.234877,8.189747,7.424159],[-5.580585,1.176333,8.368646,-3.911800,5.441221,5.091037,9.816521,9.740117,8.705072,-1.182963],[3.720782,-8.056379,-7.808779,-2.100509,9.762090,-1.718624,-2.347929,-6.784971,-6.323499,2.492371],[-5.806126,-6.938146,-0.371760,-3.458828,-0.185607,-8.118242,4.951102,-7.950411,-5.653443,3.101823],[-8.301181,1.221814,-3.317393,-7.694227,-7.907556,-1.623754,7.801593,1.615898,-2.325934,7.169506],[-8.958881,-9.392228,-3.764558,-5.600521,-2.300646,-6.843685,6.902913,0.220125,-4.233229,-6.823185],[-0.784687,3.812609,5.347662,1.527819,2.652212,6.938923,-2.990439,0.003583,-1.661238,-9.500442],[9.046853,5.322579,-8.310017,-8.976833,-6.893342,-4.282087,2.836725,-1.496883,-6.534501,0.356597],[-6.170928,8.513294,-8.122722,-0.352523,-9.959164,9.163166,7.644660,-2.130585,-7.740449,-3.089843],[8.709190,3.542301,5.728963,-1.176024,3.416003,7.649673,-7.317300,6.424608,4.955672,2.559144],[-4.191704,4.073322,7.022335,5.692477,4.991315,-3.562326,-0.537995,8.457580,-4.924240,3.111077],[6.599183,9.675382,-3.238575,3.535524,-7.107459,1.422034,2.727069,0.817784,7.170871,-4.097210],[-9.393083,5.949503,-1.447079,-8.114252,-8.805907,6.684593,-3.186169,4.192177,0.008318,-7.093863],[3.167579,-7.280271,2.917697,2.380685,-1.346350,2.709868,2.711842,-2.822183,6.639576,-7.847275],[-6.193015,-6.556437,-3.601666,8.631690,-4.249741,-0.553373,-6.252935,-9.052981,-6.783173,-0.962136]], dtype = "float32")#candidate|7934|(65, 10)|const|float32
call_7933 = relay.TupleGetItem(func_2796_call(relay.reshape(const_7934.astype('float32'), [10, 5, 13])), 0)
call_7935 = relay.TupleGetItem(func_2798_call(relay.reshape(const_7934.astype('float32'), [10, 5, 13])), 0)
output = relay.Tuple([call_7907,call_7926,const_7927,call_7930,call_7933,const_7934,])
output2 = relay.Tuple([call_7908,call_7928,const_7927,call_7931,call_7935,const_7934,])
func_7938 = relay.Function([], output)
mod['func_7938'] = func_7938
mod = relay.transform.InferType()(mod)
mutated_mod['func_7938'] = func_7938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7938_call = mutated_mod.get_global_var('func_7938')
call_7939 = func_7938_call()
output = call_7939
func_7940 = relay.Function([], output)
mutated_mod['func_7940'] = func_7940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_8078 = func_7874_call()
call_8079 = func_7874_call()
output = relay.Tuple([call_8078,])
output2 = relay.Tuple([call_8079,])
func_8086 = relay.Function([], output)
mod['func_8086'] = func_8086
mod = relay.transform.InferType()(mod)
mutated_mod['func_8086'] = func_8086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8086_call = mutated_mod.get_global_var('func_8086')
call_8087 = func_8086_call()
output = call_8087
func_8088 = relay.Function([], output)
mutated_mod['func_8088'] = func_8088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7542_call = mod.get_global_var('func_7542')
func_7543_call = mutated_mod.get_global_var('func_7543')
call_8211 = func_7542_call()
call_8212 = func_7542_call()
func_6508_call = mod.get_global_var('func_6508')
func_6509_call = mutated_mod.get_global_var('func_6509')
call_8216 = relay.TupleGetItem(func_6508_call(), 0)
call_8217 = relay.TupleGetItem(func_6509_call(), 0)
func_7745_call = mod.get_global_var('func_7745')
func_7747_call = mutated_mod.get_global_var('func_7747')
call_8228 = relay.TupleGetItem(func_7745_call(), 0)
call_8229 = relay.TupleGetItem(func_7747_call(), 0)
output = relay.Tuple([call_8211,call_8216,call_8228,])
output2 = relay.Tuple([call_8212,call_8217,call_8229,])
func_8249 = relay.Function([], output)
mod['func_8249'] = func_8249
mod = relay.transform.InferType()(mod)
mutated_mod['func_8249'] = func_8249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8249_call = mutated_mod.get_global_var('func_8249')
call_8250 = func_8249_call()
output = call_8250
func_8251 = relay.Function([], output)
mutated_mod['func_8251'] = func_8251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8290 = relay.var("var_8290", dtype = "float32", shape = (1, 12, 6))#candidate|8290|(1, 12, 6)|var|float32
uop_8291 = relay.acosh(var_8290.astype('float32')) # shape=(1, 12, 6)
output = relay.Tuple([uop_8291,])
output2 = relay.Tuple([uop_8291,])
func_8297 = relay.Function([var_8290,], output)
mod['func_8297'] = func_8297
mod = relay.transform.InferType()(mod)
var_8298 = relay.var("var_8298", dtype = "float32", shape = (1, 12, 6))#candidate|8298|(1, 12, 6)|var|float32
output = func_8297(var_8298)
func_8299 = relay.Function([var_8298], output)
mutated_mod['func_8299'] = func_8299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7745_call = mod.get_global_var('func_7745')
func_7747_call = mutated_mod.get_global_var('func_7747')
call_8320 = relay.TupleGetItem(func_7745_call(), 0)
call_8321 = relay.TupleGetItem(func_7747_call(), 0)
uop_8322 = relay.erf(call_8320.astype('float32')) # shape=(28, 48)
uop_8324 = relay.erf(call_8321.astype('float32')) # shape=(28, 48)
uop_8326 = relay.asinh(call_8320.astype('float64')) # shape=(28, 48)
uop_8328 = relay.asinh(call_8321.astype('float64')) # shape=(28, 48)
bop_8330 = relay.less_equal(uop_8326.astype('bool'), relay.reshape(uop_8322.astype('bool'), relay.shape_of(uop_8326))) # shape=(28, 48)
bop_8333 = relay.less_equal(uop_8328.astype('bool'), relay.reshape(uop_8324.astype('bool'), relay.shape_of(uop_8328))) # shape=(28, 48)
output = bop_8330
output2 = bop_8333
func_8338 = relay.Function([], output)
mod['func_8338'] = func_8338
mod = relay.transform.InferType()(mod)
output = func_8338()
func_8339 = relay.Function([], output)
mutated_mod['func_8339'] = func_8339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7631_call = mod.get_global_var('func_7631')
func_7633_call = mutated_mod.get_global_var('func_7633')
call_8349 = func_7631_call()
call_8350 = func_7631_call()
uop_8365 = relay.acos(call_8349.astype('float32')) # shape=(28, 48)
uop_8367 = relay.acos(call_8350.astype('float32')) # shape=(28, 48)
uop_8371 = relay.log2(uop_8365.astype('float64')) # shape=(28, 48)
uop_8373 = relay.log2(uop_8367.astype('float64')) # shape=(28, 48)
output = relay.Tuple([uop_8371,])
output2 = relay.Tuple([uop_8373,])
func_8377 = relay.Function([], output)
mod['func_8377'] = func_8377
mod = relay.transform.InferType()(mod)
output = func_8377()
func_8378 = relay.Function([], output)
mutated_mod['func_8378'] = func_8378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8086_call = mod.get_global_var('func_8086')
func_8088_call = mutated_mod.get_global_var('func_8088')
call_8402 = relay.TupleGetItem(func_8086_call(), 0)
call_8403 = relay.TupleGetItem(func_8088_call(), 0)
output = call_8402
output2 = call_8403
func_8407 = relay.Function([], output)
mod['func_8407'] = func_8407
mod = relay.transform.InferType()(mod)
output = func_8407()
func_8408 = relay.Function([], output)
mutated_mod['func_8408'] = func_8408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_8433 = func_8407_call()
call_8434 = func_8407_call()
func_7631_call = mod.get_global_var('func_7631')
func_7633_call = mutated_mod.get_global_var('func_7633')
call_8435 = func_7631_call()
call_8436 = func_7631_call()
output = relay.Tuple([call_8433,call_8435,])
output2 = relay.Tuple([call_8434,call_8436,])
func_8451 = relay.Function([], output)
mod['func_8451'] = func_8451
mod = relay.transform.InferType()(mod)
output = func_8451()
func_8452 = relay.Function([], output)
mutated_mod['func_8452'] = func_8452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7938_call = mod.get_global_var('func_7938')
func_7940_call = mutated_mod.get_global_var('func_7940')
call_8514 = relay.TupleGetItem(func_7938_call(), 3)
call_8515 = relay.TupleGetItem(func_7940_call(), 3)
func_7608_call = mod.get_global_var('func_7608')
func_7609_call = mutated_mod.get_global_var('func_7609')
call_8517 = func_7608_call()
call_8518 = func_7608_call()
output = relay.Tuple([call_8514,call_8517,])
output2 = relay.Tuple([call_8515,call_8518,])
func_8521 = relay.Function([], output)
mod['func_8521'] = func_8521
mod = relay.transform.InferType()(mod)
output = func_8521()
func_8522 = relay.Function([], output)
mutated_mod['func_8522'] = func_8522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7771_call = mod.get_global_var('func_7771')
func_7772_call = mutated_mod.get_global_var('func_7772')
call_8525 = relay.TupleGetItem(func_7771_call(), 0)
call_8526 = relay.TupleGetItem(func_7772_call(), 0)
var_8533 = relay.var("var_8533", dtype = "float32", shape = (15, 10, 7))#candidate|8533|(15, 10, 7)|var|float32
bop_8534 = relay.less_equal(call_8525.astype('bool'), var_8533.astype('bool')) # shape=(15, 10, 7)
bop_8537 = relay.less_equal(call_8526.astype('bool'), var_8533.astype('bool')) # shape=(15, 10, 7)
func_1727_call = mod.get_global_var('func_1727')
func_1729_call = mutated_mod.get_global_var('func_1729')
const_8563 = relay.const([1,6,2,-8,4,5,-7,6,9,5,8,7,10,3,-4,7,8,-7,-5,-1,4,2,10,5,-5,-7,6,5,5,5,-8,-9,6,-7,10,-1,-3,-6,-2,4,-1,-2,-6,5,7,-3,10,3,9,-6,-7,3,-1,5,-10,-3,-10,10,-4,-7,4,-9,-5,10,-2,1,5,-9,3,-4,-3,-3,-3,-8,9,1,-7,-10,3,-6,-10,2,3,4,7,8,-6,-2,-6,-6,-6,-2,7,7,4,3,-10,-1,-10,8,4,9,7,-7,-2,1,1,-4,5,-10,-3,-5,10,6,1,-9,-10,-5,2,1,6,-3,-5,-7,8,-1,10,6,4,-4,-7,-1,3,-3,7,-8,-6,-10,-10,1,-4,-9,-10,6,8,-8,5,10,-5,-1,-7,-5,-4,3,-2,1,9,-10,-6,3,-8,-7,-2,1,1,10,-2,2,10,9,-2,-7,10,-9,6,8,-5,-9,5,-6,1,-6,-3,-9,6,4,-8,-10,-8,5,-3,2,-2,-6,-10,-1,10,-5,6,5,-4,1,-10,10,-9,4,10,1,6,6,2,8,-7,-7,7,-6,-1,-2,-5,10,7,-6,-7,-6,-4,10,2,-10,-9,1,-10,-6,3,3,10,1,-5,-4,-4,7,5,-6,5,5,4,9,-4,-5,5,-4,-1,-4,-2,1,1,5,-7,-2,-6,6,4,4,-4,-2,6,6,10,6,-10,-7,-4,6,1,4,6,9,-7,7,-1,10,4,-7,-6,6,9,-7,-4,-6,3,-4,10,-9,8,8,-5,-9,4,3,8,-8,-3,-9,9,3,5,-1,3,-6,7,10,-4,-3,6,10,7,10,4,6,7,5,9,1,-9,-2,-10,-10,-3,3,-3,3,3,-10,5,10,7,5,1,-7,2,-9,-4,-5,4,-6,2,-6,5,2,6,-3,7,-1,4,1,9,-8,-8,2,2,-8,-1,9,-2,5,3,3,6,8,-1,-5,8,-5,-10,-6,-9,9,1,-6,-1,3,7,-5,7,2,-4,-8,2,-7,-2,-7,9,1,-5,5,5,1,-1,6,2,5,7,-8,-9,-3,10,-4,-5,-1,1,8,1,2,8,1,8,-9,3,5,-2,5,-8,5,5,6,1,3,-5,-5,3,-6,3,-5,3,-8,-8,-1,1,2,9,1,-3,-3,9,5,1,2,-7,10,-7,-6,-9,-1,-2,-6,10,2,-2,-2,-10,-3,-8,-7,-4,-6,-5,-5,-1,7,-7,6,-2,1,-3,7,9,6,-6,2,-2,-2,3,3,4,-5,5,-8,-10,-3,1,-6,-9,-8,9,-7,-10,-2,-6,7,7,1,-3,-10,-10,-8,2,-1,-10,8,-3,-2,5,6,-9,1,4,7,-3,-4,8,3,-8,3,-5,5,7,3,-1,1,-1,-5,4,-6,-7,-9,-2,6,-7,6,-9,2,-10,6,-1,3,-1,8,-2,-2,5,-5,4,-5,-10,4,3,5,-8,-7,8,-4,-2,-4,-9,3,-10,10,-10,6,5,-9,-4,4,-3,-5,-2,-2,1,7,6,1,8,1,-8,8,-7,-2,1,-6,-6,7,-8,-2,-9,-7,9,-1,1,7,-9,3,-1,-10,2,7,5,-7,7,9,8,-8,-8,-6,-1,8,-7,9,-9,-2,-2,-8,7,9,-5,-9,-6,10,6,-3,-10,-10,-4,-6,-7,-4,7,6,-9,7,3,7,-3,-3,4,7,-7,-10,7,5,-6,2,3,9,-5,6,-2,-7,-1,-5,6,-10,10,-5,-7,2,-9,7,4,-4,2,-7,6,-1,-4,-3,-8,-3,-4,-7,9,4,-4,2,9,-9,9,-7,-9,1,5,-4,-6,5,-7,10,-2,6,5,7,5,5,1,-6,-10,-6,10,10,-10,7,-7,-3,-1,-8,8,-10,-9,-4,9,-3,-6,6,10,3,10,7,-7,8,-3,4,-10,-2,-1,1,8,-9,-4,2,10,6,-7,7,5,-2,2,8,10,2,10,-9,9,3,-2,1,-4,2,-10,-5,-6,3,-3,-9,5,-4,5,3,1,9,-5,-5,-7,-10,8,4,-2,-10,-2,-10,8,-3,-7,-9,4,-6,-10,8,8,6,3,9,-1,-2,8,1,6,-1,10,-5,-9,3,-10,9,-9,5,9,7,5,-4,-3,-8,-8,-4,-10,3,8,9,9,9,2,-9,-9,10,8,-4,-8,-2,3,7,4,1,7,1,9,-3,-3,-4,9,-6,-10,9,-7,4,-6,-1,2,2,5,5,-3,-5,-1,1,-2,8,-9,10,8,6,-7,-2,-1,8,8,-10,-2,-7,3,-4,7,7,-8,2,2,-10,6,-8,8,3,-9,-7,7,5,-4,-4,-2,-6,9,8,5,10,10,8,-2,-4,-7,2,-6,3,8,10,-10,2,-6,9,-8,5,-7,-6,8,-1,-10,9,2,8,1,3,6,-9,8,8,-8,-4,7,-3,-9,-10,-7,-4,10,2,2,3,1,-2,1,-4,2,2,-7,4,1,-4,-2,-9,2,6,-7,2,10,-8,6,7,-10,-7,8,-3,-7,7,-7,4,10,-1,-8,6,9,-8,-5,-2,6,2,-3,10,3,-1,-6,10,-4,4,4,-1,-3,9,-4,3,-4,-3,-1,9,4,6,5,-7,-7,-3,2,-7,3,-3,8,-8,-10,-1,7,8,-10,-3,-10,-5,3,9,2,-10,-3,3,-8,6,-5,10,-9,-3,-3,-5,7,2,-8,5,9,6,-8,-5,-3,4,-2,-7,-3,9,7,10,5,-1,-7,4,2,9,-2,-6,-7,-10,9,9,8,-9,-5,-8,-5,3,7,-7,9,1,-2,4,-9,10,2,1,9,-6,1,5,6,5,7,-2,-9,8,2,-1,-6,1,2,1,-2,-6,-2,-10,-10,2,8,-4,9,-6,-3,9,10,1,-2,3,-9,10,1,2,4,9,-7,6,-4,-6,3,-8,7,-7,2,-4,9,6,1,-3,1,-6,-4,6,-9,7,-8,-7,6,4,1,1,-2,-4,-3,10,9,-4,-10,-5,3,-1,6,-5,-9,10,-9,-4,6,-5,-4,-6,-1,-10,-1,10,-6,6,-10,-4,-10,-10,7,-9,1,3,9,8,10,-2,10,8,4,8,2,2,-10,2,-6,10,5,3,-5,-5,-9,-9,-9,-7,-8,9,-10,-4], dtype = "uint32")#candidate|8563|(1188,)|const|uint32
call_8562 = relay.TupleGetItem(func_1727_call(relay.reshape(const_8563.astype('uint32'), [11, 9, 12])), 0)
call_8564 = relay.TupleGetItem(func_1729_call(relay.reshape(const_8563.astype('uint32'), [11, 9, 12])), 0)
func_12_call = mod.get_global_var('func_12')
func_15_call = mutated_mod.get_global_var('func_15')
const_8575 = relay.const([-1.314000,6.564256,0.729425,4.111222,3.946720,-5.437207,-3.604447,-8.194242,4.955628,3.022714,7.945898,-1.805597,-0.731997,1.860700,-1.820268,9.110820,-3.535191,1.801072,-3.710741,-6.933225,-1.100286,-3.909784,4.386596,-5.913412,-2.675820,-7.968242,-4.041385,7.511279,0.150295,8.116024,6.786785,-3.423488,8.141247,6.192748,7.345222,2.022425,1.108050,-2.716355,-7.566721,6.510700,-0.137154,-0.553301,-3.523008,4.067071,-3.674294,-7.954666,8.456020,-5.583980,-8.914023,-2.578518,0.654180,1.272131,5.709922,2.017695,-7.863013,0.237995,3.599892,-7.024154,6.178400,6.494045,-5.127450,-9.532136,-7.980852,-1.641888,-8.798766,-0.289932,-2.283314,-1.470677,1.599887,7.163892,-9.417074,-1.570526,-0.270532,-9.583781,-0.565091,-5.840761,4.766230,-5.195886,7.013057,-6.167734], dtype = "float32")#candidate|8575|(80,)|const|float32
call_8574 = relay.TupleGetItem(func_12_call(relay.reshape(const_8575.astype('float32'), [8, 2, 5])), 0)
call_8576 = relay.TupleGetItem(func_15_call(relay.reshape(const_8575.astype('float32'), [8, 2, 5])), 0)
output = relay.Tuple([bop_8534,call_8562,const_8563,call_8574,const_8575,])
output2 = relay.Tuple([bop_8537,call_8564,const_8563,call_8576,const_8575,])
func_8577 = relay.Function([var_8533,], output)
mod['func_8577'] = func_8577
mod = relay.transform.InferType()(mod)
mutated_mod['func_8577'] = func_8577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8578 = relay.var("var_8578", dtype = "float32", shape = (15, 10, 7))#candidate|8578|(15, 10, 7)|var|float32
func_8577_call = mutated_mod.get_global_var('func_8577')
call_8579 = func_8577_call(var_8578)
output = call_8579
func_8580 = relay.Function([var_8578], output)
mutated_mod['func_8580'] = func_8580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6894_call = mod.get_global_var('func_6894')
func_6895_call = mutated_mod.get_global_var('func_6895')
call_8623 = relay.TupleGetItem(func_6894_call(), 0)
call_8624 = relay.TupleGetItem(func_6895_call(), 0)
output = relay.Tuple([call_8623,])
output2 = relay.Tuple([call_8624,])
func_8627 = relay.Function([], output)
mod['func_8627'] = func_8627
mod = relay.transform.InferType()(mod)
mutated_mod['func_8627'] = func_8627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8627_call = mutated_mod.get_global_var('func_8627')
call_8628 = func_8627_call()
output = call_8628
func_8629 = relay.Function([], output)
mutated_mod['func_8629'] = func_8629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5724_call = mod.get_global_var('func_5724')
func_5726_call = mutated_mod.get_global_var('func_5726')
call_8669 = func_5724_call()
call_8670 = func_5724_call()
func_1727_call = mod.get_global_var('func_1727')
func_1729_call = mutated_mod.get_global_var('func_1729')
const_8672 = relay.const([-3,4,-3,-5,-1,-1,-1,-9,-3,-4,8,-5,-6,6,6,-6,2,-2,-3,7,7,8,-4,2,-1,-2,-6,8,9,-3,-7,-3,10,-7,4,8,2,9,4,7,8,4,6,7,4,-10,8,4,-9,-1,-5,-4,7,-4,7,-6,-1,-8,-2,4,-4,9,-8,-9,3,9,1,6,-9,8,-2,-10,5,-1,4,3,10,1,4,-6,-4,-7,-10,-4,5,-6,8,-1,-7,-10,-8,10,-4,5,-3,-6,-5,1,-8,-6,-8,-10,-8,7,-3,-8,-1,-8,-9,4,-3,-8,-3,-4,5,6,2,-8,-6,8,6,-10,-4,2,1,-5,6,3,-4,2,8,-5,-3,3,-1,-9,-6,-4,7,-2,-1,3,2,-9,-2,10,-1,10,-7,3,1,5,-1,8,6,-6,-8,-6,-4,1,-8,-6,5,4,9,1,1,9,-6,10,6,-1,-5,-7,4,5,-6,-10,6,-2,-3,-7,1,-6,3,-1,4,-5,8,9,7,-3,-4,-5,-9,7,4,-4,-10,-1,6,3,-3,10,8,3,-5,2,1,4,-6,2,7,-4,6,-1,9,-6,-10,-6,-8,-6,9,-2,7,10,7,5,10,2,-7,2,-6,-10,5,-5,-9,5,10,8,-5,3,2,7,-7,10,1,10,8,-4,-10,-7,-3,-6,-2,-2,-3,-1,3,9,-7,4,8,-7,-5,-3,-1,3,3,-9,-2,-3,6,-1,2,-6,8,-8,3,-5,6,3,-8,-3,6,7,-3,-4,-4,5,-7,-6,-3,3,10,6,6,7,-8,7,2,-3,-6,-3,5,8,-3,7,1,-3,8,8,3,-1,6,4,-2,5,3,10,-10,-10,-5,10,-8,6,6,-3,-9,-9,-10,7,9,2,3,-2,10,-7,-10,8,2,6,-8,-7,3,6,-9,7,-8,-2,1,-6,-7,-6,10,6,10,9,3,8,2,-1,-8,10,7,7,-7,1,-5,-2,-2,6,2,-1,1,-1,3,5,10,9,7,-7,10,6,-6,-8,-7,-10,10,-4,-1,6,-8,-7,-4,10,-4,-6,7,-8,10,-9,2,8,3,5,-10,9,-1,8,3,-9,-7,9,-6,-4,5,-5,-5,9,6,1,4,-4,8,-2,-10,-8,-3,10,6,-6,-7,7,6,9,9,-6,2,8,1,-1,-9,9,-5,-3,-1,3,-2,10,-4,9,-9,-6,4,10,-4,-8,9,-6,4,-7,-10,3,-1,-1,-1,8,-5,10,-8,5,-1,-4,-8,-7,2,9,4,-6,-6,10,7,-7,2,-4,-8,-2,-1,1,1,-4,-4,6,7,-3,-9,10,2,-2,5,-7,-4,3,-9,5,-4,2,-5,4,-10,-7,-3,-9,-2,-1,5,-9,-1,4,-7,-10,1,-9,-2,-8,-1,3,10,8,3,1,9,8,-2,-10,3,-2,-3,9,-3,8,-2,9,-5,7,10,7,-6,9,-7,-9,-10,5,1,7,-2,9,5,7,-8,-7,2,8,-9,8,-8,6,-7,1,4,-3,4,10,3,-1,-4,9,-4,-4,4,1,-8,-9,-8,4,-10,-10,-10,-4,-10,3,-5,9,-9,-2,-6,4,10,10,4,1,2,8,4,6,7,9,4,-1,3,-4,6,5,-1,-3,-1,-1,-10,7,-3,7,4,3,-3,1,-8,7,2,8,-8,-10,-9,-2,-2,-10,-3,4,-2,7,1,-3,10,-1,-1,8,3,-8,3,-1,10,9,-10,-1,1,-10,-6,1,1,10,2,3,8,-8,-1,5,2,-5,6,-7,-5,-9,-9,7,-2,-4,-7,-10,8,5,8,-1,5,-5,3,9,-10,-9,9,-9,-4,-5,-9,5,2,-7,1,3,3,8,1,-5,4,-1,1,3,-4,6,3,1,3,-8,-5,2,-10,-5,6,3,4,-2,-4,10,-3,-3,10,-4,3,9,4,7,10,4,-4,7,-2,2,-5,-6,-9,-9,-5,1,-4,8,-10,1,-9,-9,5,-10,6,-3,-2,-3,9,9,-2,2,1,-5,6,-2,-2,-9,-6,4,-9,-4,7,4,-7,2,3,7,-5,-4,10,-8,-6,1,-6,-3,1,7,-5,8,4,-1,-3,3,-3,-10,3,-9,-5,-3,5,-5,5,6,3,-10,-3,5,3,5,3,1,1,6,-10,6,-7,4,3,10,6,-2,-4,5,3,3,5,-5,-6,4,-2,-3,-3,10,9,-9,-1,3,8,-3,10,-10,-4,3,5,-7,-10,-7,9,7,7,-2,9,-4,-5,-9,-4,10,-3,7,-10,9,9,1,1,-6,5,7,-5,-2,-9,-5,-1,1,8,6,-4,-8,-8,1,-8,-8,-8,1,-9,4,-6,-10,-6,3,-3,-5,-1,-2,-3,-8,1,-6,-4,-2,9,-10,-9,-4,-3,2,-5,5,-10,-6,-9,4,2,-10,-8,-9,10,-2,10,-7,-2,-1,4,4,2,-8,4,-2,3,-3,4,-8,1,-5,-7,-6,-1,-7,-4,10,-2,-6,10,5,7,6,1,-8,-3,5,-7,-10,-9,-5,1,8,4,2,-9,-1,6,-8,9,-1,-10,6,-7,-6,-5,-1,6,10,1,-6,-8,7,-2,10,2,8,6,-7,-10,1,-4,4,10,-10,5,-3,2,-4,6,8,3,-8,-1,4,-10,1,-9,-3,-6,-2,-6,-3,-5,-3,-10,7,-10,-4,3,-4,-5,8,7,-5,-4,-5,1,1,6,-7,8,2,2,-8,-6,-10,7,-6,-1,1,-7,-8,-6,-6,-4,9,-8,7,-6,5,-9,-4,-4,3,1,-3,-10,-1,-1,-1,10,4,-10,8,-9,-2,9,-5,6,2,-3,8,-7,2,-5,-2,2,5,-8,1,-5,6,-9,-8,-2,-2,7,-8,8,2,-4,10,-10,-9,-5,10,5,5,8,7,-6,-4,-9,-7,6,-2,-4,6,5,-6,10,-2,1,-7,5,-8,-4,-5,-9,-10,2,3,2,9,7,-10,9,-9,1,1,3,8,4,-8,4,5,-2,1,10,-3,-5,-3,5,7,2,-2,7,-10,-3,-5,-8,4,-1,-6,-5,7,2,-8,-3,-2,3,10,6,-3,10,-8,8,-10,7,1,7,-3,9,-7,-6,-9,-7,-1,9,-3,-3,9,3,2,7,1,1,-4,-3,3,2,-8,-9,1,2,8,5,7], dtype = "uint32")#candidate|8672|(1188,)|const|uint32
call_8671 = relay.TupleGetItem(func_1727_call(relay.reshape(const_8672.astype('uint32'), [11, 9, 12])), 0)
call_8673 = relay.TupleGetItem(func_1729_call(relay.reshape(const_8672.astype('uint32'), [11, 9, 12])), 0)
uop_8691 = relay.cos(const_8672.astype('float64')) # shape=(1188,)
var_8699 = relay.var("var_8699", dtype = "float64", shape = (1188,))#candidate|8699|(1188,)|var|float64
bop_8700 = relay.equal(uop_8691.astype('bool'), relay.reshape(var_8699.astype('bool'), relay.shape_of(uop_8691))) # shape=(1188,)
func_7210_call = mod.get_global_var('func_7210')
func_7217_call = mutated_mod.get_global_var('func_7217')
const_8704 = relay.const([-6.442818,-0.490695,1.397437,5.362930,-7.718969,5.370378,-5.190581,-5.334230,9.142905,-8.220400,9.639550,4.480685,2.331073,-5.623203,-0.730561,9.286334,-5.557026,8.637575,-0.034626,-1.816025,-3.421201,6.287306,6.210612,2.587353,0.644655,-7.201586,9.506013,8.560223,-7.671389,7.335134,6.972801,0.744261,4.361855,-5.567167,-1.126032,-5.173298,-6.467638,9.008255,1.582403,8.039189,-4.573874,-8.285840,0.441110,-0.001268,2.048119,-7.089352,-3.175907,-3.645771,-0.235575,-0.494733,0.435134,-8.715764,-4.204856,-7.462131,-9.545966,-1.278944,2.703060,8.091905,7.374543,9.684904,0.488715,5.089905,6.676424,9.643173,-5.354383,-6.821567,-6.987361,-9.674173,-4.620014,2.293907,-6.258190,9.373664,-2.642231,-2.378666,-7.530255,-2.437865,6.358724,-4.837694,7.724993,5.355320,4.448980,0.600481,-5.281695,-2.356311,-3.565551,3.393686,-3.247330,4.916459,6.963860,-2.445233,1.071055,-7.402837,-5.561197,0.866222,-5.518200,-7.537911,7.048461,-4.644156,6.291087,-7.972911,-0.888738,-9.282728,2.032158,1.776110,4.337117,-3.790130,-6.898244,2.242918,9.902744,-6.004199,5.399875,8.061666,-5.630262,-4.559137,2.372599,-1.269857,6.240989,-8.486105,-5.933250,2.681213,0.700334,-8.201249,-1.070790,-0.194662,-1.674708,-6.765797,3.504112,-3.596332,6.499535,4.236692,-4.730531,-4.413426,-6.697748,-1.691813,-0.922175,-7.805512,9.529165,4.657156,9.872165,-0.935641,-4.650714,6.115226,-6.225159,2.990777,0.146489,-8.615775,-1.015780,0.319827,7.730851,4.638769,7.729314,4.087082,-8.913966,1.188421,6.126060,-4.488899,-6.747573,3.841539,9.181671,-7.504306,-5.321110,-5.158116,2.429397,8.277885,8.164329,-6.539462,0.802193,-4.056388,-4.850622,0.519326,1.619977,1.308327,4.673419,-8.778576,1.588566,6.756315,-5.361154,4.337331,8.131219,-6.596774,4.082660,-3.131109,2.982606,8.967880,-8.065675,9.508644,-5.027436,1.375342,0.591363,-8.863703,-9.039137,-4.387842,-0.503780,-3.013831,2.389354,-0.116245,1.376882,3.968897,3.342746,-1.370630,2.764954,9.301237,-8.125948,1.973887,4.162319,-1.330862,-3.343330,-8.859784,-7.826127,-7.897152,8.250543,2.292124,5.242125,9.119133,5.062944,-4.824140,6.351465,-2.500730,-3.377074,-1.863878,2.635022,5.164244,8.081470,-8.093722,-7.532216,9.545100,-9.810243,-2.767624,2.816493,-0.247512,6.718720,9.162309,7.641048,-0.661613,-7.940987,1.228087,-8.969039,1.629548,-9.474284,2.833567,-1.034618,-7.111791,6.291017,1.520824,7.072225,7.160794,-3.498496,1.385502,-0.870416,-0.543528,-6.542684,1.789094,-3.545754,0.432186,-2.499525,-7.903005,0.230793,5.001294,8.400086,-9.489284,0.346305,-1.508850,-8.784410,7.692314,6.558576,7.348979,4.552214,-8.067968,7.185641,-8.841358,4.654706,5.926709,4.844444,5.141514,1.514196,2.955543,-6.900001,-8.480204,-6.012281,8.126305,1.142055,7.873949,5.298329,5.556965,7.521109,0.117260,-8.411740,-6.509348,0.508221,-1.921149,9.831870,1.547447,0.291914,-2.452534,2.076736,-5.371312,0.101811,6.158315,4.891408,6.623287,-0.859330,6.676486,1.332015,7.489209,-4.864067,0.304619,3.236741,1.890340,2.481768,-3.737813,3.511687,6.948732,7.312553,-8.830807,9.133586,8.336694,-2.140281,-0.066429,-7.481398,-7.494564,-7.539538,-0.243581,3.824833,-9.890866,-8.024455,7.725936,4.973925,-7.639555,-9.234252,-1.875860,-7.162941,6.208804,-3.600634,1.807409,6.844589,3.500682,8.347603,-0.848669,0.204682,2.594969,1.548869,-9.626069,-5.302445,8.710204,4.811979,-9.563411,-2.816839,-5.080544,-0.244738,1.144043,1.966719,1.998339,5.268157,4.531375,-1.711506,-2.538231,-9.023710,9.729973,9.739564,1.212752,-3.787995,-6.598966,0.170961,9.392671,-1.804161,-5.939292,-2.125391,3.125280,7.738090,-8.098757,4.901076,7.750678,0.610888,-7.907374,-9.269420,4.529712,-2.790874,3.592827,-9.518983,7.107444,8.559798,4.897776,0.901821,2.784344,8.911393,-0.840550,-9.267570,-1.585810,-1.861944,-6.919526,-0.223539,0.544413,-3.789336,2.278542,-6.937117,6.262204,-8.658537,7.066358,3.670727,-8.880871,-5.603543,-4.590667,-1.989379,3.318086,0.546597,3.784968,8.365624,-2.788041,4.150042,9.159025,-3.011381,-3.148712,4.806577,-8.281884,-8.291559,5.191186,-3.031331,-2.992728,2.502126,2.458127,4.126671,-8.278877,-3.205962,-3.869209,-2.326299,2.956950,1.427628,7.502286,8.549557,2.241496,-9.227109,-1.792874,-7.159505,-0.987627,-4.940910,7.707184,-5.275228,0.195819,-3.469138,2.111772,8.000390,-5.831329,-4.982836,2.224266,2.829943,8.335178,9.480854,-6.524927,-4.140268,5.405157,3.250783,2.179631,3.589282,-3.465869,-9.273263,-5.191470,-0.751014,-8.371409,2.995310,-2.315185,5.265784,-5.690810,1.148579,-1.316197,7.136913,3.658109,-6.060340,0.503288,3.446475,-3.534367,5.401637,1.769343,3.504365,-1.021621,4.578229,8.387342,-2.344504,4.597733,4.496611,-4.115295,-1.260609,3.496851,-0.998638,-7.027348,-3.622051,7.825293,5.672487,6.359892,7.073352,7.189131,-3.983488,0.253157,6.572227,-7.498856,-7.690611,9.069763,-5.929995,-7.999370,6.919325,-7.693263,8.699309,5.174668,-3.255213,9.128292,-1.194816,-8.318228,1.499658,-4.807624,5.845619,3.561539,6.759775,-1.257458,6.878499,-1.895515,4.496301,-0.222668,-1.783340,2.420722,-0.920517,-2.523144,-4.084479,5.395651,-5.938184,-9.438931,5.331022,-5.884086,-1.277192,-9.160509,8.076112,2.592842,-8.640154,9.077538,0.192289,9.615657,1.793495,8.238974,5.894568,9.121816,-6.122756,2.099008,-4.062135,-8.999199,-9.597117,-1.793446,7.192601,-1.485423,-2.733706,-6.946175,-8.990785,4.210615,-7.160672,0.585041,-3.445905,5.622736,-4.401167,-2.512140,-7.291622,-8.087465,4.390871,-6.482150,-6.190442,-8.781649,-5.960920,-6.165704,7.105539,-9.774330,-0.266540,2.238051,7.602664,4.310838,7.087063,-9.121534,-8.019797,-2.824380,9.734543,-9.290553,0.432170,-0.414871,-8.718931,-8.298058,6.874096,6.002641,9.414041,-9.552753,0.858597,-3.187723,7.666677,0.478538,4.076538,1.851192,-4.936308,-6.868113,1.081452,-2.808659,-2.061292,2.260252,8.307005,8.575273,9.414831,2.232015,-2.532846,3.564603,-8.889168,3.414333,-6.338808,6.958551,5.115147,-1.230728,-0.034259,-6.955518,2.149475,-1.261090,-2.272213,1.067877,5.804814,-5.284107,8.269172,1.987755,-9.596357,4.971535,-0.035509,-7.878399,7.273947,-5.613890,1.691117,-2.887598,-0.391118,3.904235,-4.867004,-8.567165,-6.913381,3.789918,-7.449091,3.541984,-3.397006,1.361995,1.613721,-0.134082,-0.813223,9.312787,6.598968,-0.248045,-2.486942,-8.863237,5.445427,5.921993,4.356793,8.821394,4.046235,3.841898,2.434675,-1.106787,-7.136990,8.783363,0.543641,-0.063679,-6.942947,-6.917142,-9.519156,-3.031717,9.264526,4.181020,-0.628552,-3.355904,-0.696460,0.101181,-7.922638,-9.281661,-0.564527,8.226540,-6.879864,-8.506788,6.439272,-7.639359,4.954804,2.287052,-9.668189,-4.142249,9.808361,-9.431144,-6.860327,8.722169,-5.003253,5.816205,-6.934252,-6.562711,-9.635323,0.367963,-8.690778,6.242231,-1.911959,-7.273126,-1.590005,-4.426241,-3.747080,2.495508,-7.232860,1.499630,-6.053490,-8.560979,-8.718378,-3.641653,9.274661,-8.689839,2.063112,-1.875914,-9.731946,-7.227111,3.681034,-4.576653,4.250279,-4.025989,-3.596099,-3.297296,-2.121172,8.051939,-7.672358,7.341416,-9.302610,6.499070,7.082858,3.247231,-6.553197,-5.143410,-7.777224,8.292039,-9.888105,-6.742571,-2.504578,-9.444542,1.431808,4.785367,0.141870,4.534760,-0.974009,5.335917,-6.098377,7.653621,-4.839830,-4.867581,-8.995086,-3.592893,4.253540,5.497557,-9.549984,-2.544027,-1.729067,8.563828,-5.126704,4.838778,6.363238,9.701743,9.174077,-7.703627,-6.759111,0.330741,5.737463,-3.609409,-5.205995,-2.220833,4.229804,-9.510026,-7.772514,4.229478,-8.412544,4.481676,3.975783,-4.301190,2.066853,-5.330091,5.451475,-7.004902,2.422805,-3.830245,-7.044719,-0.248766,0.152417,6.477794,-7.825122,1.015071,9.130887,-0.956806,0.168170,-1.481703,-5.206864,-0.288836,-0.034873,-0.081290,6.848335,2.830239,1.715751,1.713035,-2.258602,-0.512105,8.677767,3.214775,-0.335328,0.897700,-3.805519,-8.571722,-2.478565,0.408295,3.218085,4.957048,-6.432977,-2.057614,-8.462659,-0.853694,3.174810,-6.306197,-5.612250,0.659375,9.997999,-9.402105,-1.546839,-9.081611,-5.819629,5.426613,3.488753,-6.842078,4.344745,6.441261,7.739255,-3.019041,-4.747025,5.758468,8.354090,4.884503,-0.017016,-0.761993,-9.867589,3.286338,-0.782072,-7.427284,4.628539,6.192598,-7.389922,4.899217,4.667013,-8.111463,-6.253714,-2.704254,-4.297600,-6.753225,-4.067160,-2.972922,-0.106633,1.955272,-0.995350,-4.099391,-4.654114,1.086769,9.825504,-1.771664,-3.161670,-7.171932,5.734833,-6.496924,8.608348,-3.200852,-0.639601,-7.275688,-0.223539,0.681232,-8.923522,4.401422,-7.743806,8.195190,4.559134,-3.598545,-8.211381,-9.399592,9.137348,8.857475,8.854321,-2.752650,-9.683686,-8.166011,-3.240928,-0.226224,-6.890249,-9.272955,-7.513667,-7.303674,4.621754,0.243295,5.804828,8.300580,3.096693,3.336551,-1.771044,-8.295910,0.273376,-3.827152,-5.166552,-8.676359,-1.250985,4.939457,-2.391918,-8.315453,-4.583244,0.587785,2.450064,6.142658,0.244332,5.351649,-5.851909,6.205574,2.955071,-2.805201,-5.723723,-6.856739,6.795691,3.118012,3.850415,5.527355,5.917343,8.568222,-7.215219,8.401280,-1.798618,6.664134,-3.925611,-9.814079,-6.516155,-3.254963,8.337667,8.334182,-2.010438,-6.721431,-6.480446,-5.454214,-6.855732,-2.219015,-7.743498,-8.921338,0.591149,8.133535,-0.074658,8.388523,-7.162703,8.168430,-8.848591,-1.802337,7.847044,-9.236586,0.255747,-8.346889,-0.778139,-9.291257,-9.716990,5.969076,-6.502783,-5.420038,-6.006734,-1.222367,7.473672,-8.930984,-8.459160,-6.557156,6.251776,-1.301207,0.100503,-9.844290,1.765854,-3.243660,-5.655001,5.682421,2.495679,9.422058,1.716001,-7.448004,-7.644975,-7.763044,-8.903607,-5.212935,2.819476,-9.508409,9.445187,5.274504,0.498746,6.812880,2.184310,-8.850093,-5.254432,3.094849,2.925826,-5.021183,-7.059717,4.390873,3.285482,3.587552,-8.009912,-9.173405,-1.781311,-9.588554,8.176190,7.565564,5.726473,0.597397,-9.565535,0.035227,6.353779,7.111432,7.154482,-3.655185,-9.628905,6.379217,2.065728,6.126173,4.185171,2.023538,1.956273,-8.654493,-0.724348,-5.568578,-5.975848,7.025671,2.992807,1.969705,5.006759,2.054802,1.414543,-0.226040,-7.097431,6.151943,2.295715,8.842553,8.119636,4.919208,7.854668,-6.974113,-4.821854,7.357335,-6.101558,-1.128170,-0.693221,-5.447988,-0.302460,-2.070298,-8.547035,9.090983,-2.313956,-5.717544,-6.244641,-9.682812,2.046695,1.391655,-5.112655,0.785055,5.725501,-0.825235,7.556582,-6.997904,9.299572,6.266000,-9.174409,6.409039,9.677254,-5.088675,-9.123658,0.437154,-7.400494,1.346375,-5.398528,9.802517,-3.902911,1.064913,-1.489746,7.029507,0.841265,1.285231,4.908824,-9.367425,-6.512814,-6.769830,2.831376,-2.789778,-8.837064,-4.901940,-3.688418,3.481782,1.161017,7.222868,-1.040668,0.703629,6.544907,2.622211,-9.460982,5.335410,-1.780350,4.773793,2.611901,7.681388,7.837990,-4.598876,-6.029229,-8.176116,4.187714,2.448343,-4.082427,1.948541,-0.919012,7.247919,-3.501659,7.195880,-2.069258,4.268471,1.782424,-1.602558,-3.319543,-7.678239,-5.577623,9.888563,-9.476777,5.210134,4.174356,-4.873554,0.022030,-4.555929,-1.139464,-6.043717,-7.129007,3.777870,7.525860,-7.516791,-2.765652,-5.807036,6.498246,-1.645211,-7.364567,6.924865,-6.668888,6.909273,7.821922,-0.158843,-8.188303,-4.313259,-6.812782,-8.000797,8.924651,4.331112,0.580400,-4.966477,8.825804,2.801207,-3.617576,-3.180352,-5.167978,-6.070465,0.233626,-8.520531,-2.370513,9.780982,-3.735643,-9.282805,-0.973638,2.435746,8.812071,0.743188,7.202969,-0.152021,5.649202,-5.854129,9.187086,1.190743,1.860768,-9.057721,-4.203848,-8.878852,9.570381,6.033644,2.966533,6.159926,-2.102997,2.156204,0.191512,-1.640094,-1.733860,3.121586,0.881117,8.446985,-7.622925,-7.090816,8.432456,7.410855,7.260136,-2.551789,3.156055,1.582384,-1.397674,5.095167,5.428277,-7.285824,7.632022,7.079471,-5.972440,0.364072,-3.732912,-0.372366,9.965258,-2.891568,-6.654698,8.383435,-0.054548,0.815315,4.891526,9.561312,-7.087223,6.432076,6.519681,7.251364,2.704739,-6.172875,-6.794579,8.821172,-4.298108,8.871050,-3.200498,-2.457004,6.797641,-1.883579,1.303640,4.461448,6.036989,5.974771,2.757665,8.290209,0.538885,-5.277903,-3.957816,7.754505,7.187771,4.083388,0.242570,8.813237,3.110091,-1.431669,4.060220,1.005961,-7.773505,0.252645,0.273502,-7.809471,-4.982483,-6.098941,-5.692310,3.485692,-5.285458,5.852627,-2.937570,3.224128,-3.789694,-5.038780,6.280598,1.361434,-4.034444,-7.974232,7.943852,0.818158,9.042513,-4.963212,8.033544,-8.498840,-6.644232,-7.924716,-3.869191,-7.611595,0.959125,-1.063899,-8.780770,-4.934676,-2.113729,-3.662621,4.540419,3.890468,-7.427606,-4.287562,2.434913,7.344413], dtype = "float32")#candidate|8704|(1280,)|const|float32
var_8705 = relay.var("var_8705", dtype = "float32", shape = (40,))#candidate|8705|(40,)|var|float32
const_8706 = relay.const([[-10],[9]], dtype = "int16")#candidate|8706|(2, 1)|const|int16
var_8707 = relay.var("var_8707", dtype = "int16", shape = (168,))#candidate|8707|(168,)|var|int16
const_8708 = relay.const([-1.892578,-2.276163,-4.529341,3.483562,6.467693,8.430900,1.796543,-7.279978,1.267776,-3.620644,0.709652,-7.164032,-9.278134,2.694786,6.673801,9.269033,2.117729,-6.473479,-4.290965,5.301944,-8.942306,1.765596,-1.060321,2.185100,-3.498064,-2.547258,8.702533,0.747221,8.997336,-2.515651,4.270621,-6.587273,3.010871,-4.027940,-6.569186,-1.828815,6.910505,-7.497767,1.713565,7.604811,2.421397,-5.628527,-5.427020,-4.062001,-3.105455,2.118328,-7.260531,4.970911,-5.941410,5.400947,1.810432,9.408106,-7.466535,-6.337330,-1.977184,0.774514,1.774380,-9.566442,-0.917226,7.602440,8.944519,-5.425257,-2.302878,-3.296278,-6.279450,1.488233,3.413792,-6.929337,-5.272105,9.867574,-2.957218,-4.760382,-6.898191,1.858589,0.888577,-0.889745,2.830556,-7.989589,-8.256412,-1.107524,4.234461,-3.543107,4.610119,-5.413876,4.406227,-0.271037,-9.122741,5.641939,1.554518,2.026628,-6.175893,-9.941838,6.563773,3.900724,3.460845,-6.581459,-4.522174,5.591437,5.900901,3.965431,1.592586,-1.319859,0.089127,4.897974,-9.864617,4.253785,-4.222612,7.623942,5.394807,6.074191,-4.387535,4.415920,-7.399468,-9.593457,-5.952859,-3.374842,4.359487,2.157517,-3.842540,-7.248615,-1.561865,9.804033,4.677951,-1.940473,-7.752654,9.537519,4.902798,1.985248,5.643594,6.475105,0.543964,8.916477,-0.284745,5.997080,5.434499,5.455282,-2.581164,-6.427549,1.975086,-7.880829,-5.091625,0.636287,-6.121000,0.468038,-8.656821,1.652355,-1.894524,0.532416,9.012839,-1.706768,-9.253593,-3.845871,-6.831205,-3.164424,0.805755,0.968631,-8.939405,6.134301,7.267811,-6.920259,6.303628,-3.916417,-2.479233,-4.819734,-5.897659,2.685528,3.799177,6.617735,-6.995856,3.450623,-8.951116,-1.171502,6.239623,8.821684,-6.642981,0.049651,8.193870,-2.998007,1.106383,-8.944449,9.206008,-5.210423,1.567643,-2.815518,9.989859,-6.852213,3.267024,-1.926637,-4.324051,9.595855,7.942495,2.950952,-6.916636,-1.820871,-5.150738,-1.848448,-9.938672,-0.065816,-2.403210,-5.502323,3.390721,-0.138544,9.841926,4.289132,-5.308821,-4.080522,9.787367,7.319848,1.340073,3.615823,-1.449411,2.793726,-9.263433,-6.285891,3.043369,-8.074038,3.262999,8.102309,8.797381,6.704932,9.896066,2.740297,7.399553,9.848103,0.210866,-3.257236,-9.160610,-9.759447,-7.779947,3.757912,3.197553,-0.807259,-0.881964,8.080053,-2.649925,-0.660607,5.261096,7.036351,-6.680111,8.120038,4.497773,1.465691,-3.015299,8.049368,-1.473664,-7.812204,-9.853986,6.117427,-1.497298,4.670570,6.634750,-8.633115,2.800724,6.791656,-3.231636,5.632590,-3.190431,7.031086,8.880320,0.494390,-7.108406,4.004346,-5.462368,8.915579,-8.048224,-1.390412,-3.266075,-5.913334,-0.535308,3.447730,-3.065988,-3.846293,8.450020,8.461814,-1.781207,1.678261,-9.809444,-2.007428,1.353049,8.143028,-4.332005,3.258263,1.206953,-6.579254,2.411526,-9.044477], dtype = "float64")#candidate|8708|(286,)|const|float64
call_8703 = relay.TupleGetItem(func_7210_call(relay.reshape(const_8704.astype('float32'), [1280,]), relay.reshape(var_8705.astype('float32'), [40,]), relay.reshape(const_8706.astype('int16'), [2,]), relay.reshape(var_8707.astype('int16'), [168,]), relay.reshape(const_8708.astype('float64'), [286,]), ), 2)
call_8709 = relay.TupleGetItem(func_7217_call(relay.reshape(const_8704.astype('float32'), [1280,]), relay.reshape(var_8705.astype('float32'), [40,]), relay.reshape(const_8706.astype('int16'), [2,]), relay.reshape(var_8707.astype('int16'), [168,]), relay.reshape(const_8708.astype('float64'), [286,]), ), 2)
func_7867_call = mod.get_global_var('func_7867')
func_7869_call = mutated_mod.get_global_var('func_7869')
call_8717 = func_7867_call()
call_8718 = func_7867_call()
uop_8722 = relay.asinh(call_8671.astype('float64')) # shape=(11, 9, 12)
uop_8724 = relay.asinh(call_8673.astype('float64')) # shape=(11, 9, 12)
output = relay.Tuple([call_8669,bop_8700,call_8703,const_8704,var_8705,const_8706,var_8707,const_8708,call_8717,uop_8722,])
output2 = relay.Tuple([call_8670,bop_8700,call_8709,const_8704,var_8705,const_8706,var_8707,const_8708,call_8718,uop_8724,])
func_8726 = relay.Function([var_8699,var_8705,var_8707,], output)
mod['func_8726'] = func_8726
mod = relay.transform.InferType()(mod)
mutated_mod['func_8726'] = func_8726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8726_call = mutated_mod.get_global_var('func_8726')
var_8728 = relay.var("var_8728", dtype = "float64", shape = (1188,))#candidate|8728|(1188,)|var|float64
var_8729 = relay.var("var_8729", dtype = "float32", shape = (40,))#candidate|8729|(40,)|var|float32
var_8730 = relay.var("var_8730", dtype = "int16", shape = (168,))#candidate|8730|(168,)|var|int16
call_8727 = func_8726_call(var_8728,var_8729,var_8730,)
output = call_8727
func_8731 = relay.Function([var_8728,var_8729,var_8730,], output)
mutated_mod['func_8731'] = func_8731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6894_call = mod.get_global_var('func_6894')
func_6895_call = mutated_mod.get_global_var('func_6895')
call_8794 = relay.TupleGetItem(func_6894_call(), 0)
call_8795 = relay.TupleGetItem(func_6895_call(), 0)
func_8338_call = mod.get_global_var('func_8338')
func_8339_call = mutated_mod.get_global_var('func_8339')
call_8796 = func_8338_call()
call_8797 = func_8338_call()
var_8798 = relay.var("var_8798", dtype = "bool", shape = (28, 48))#candidate|8798|(28, 48)|var|bool
bop_8799 = relay.mod(call_8796.astype('float64'), relay.reshape(var_8798.astype('float64'), relay.shape_of(call_8796))) # shape=(28, 48)
bop_8802 = relay.mod(call_8797.astype('float64'), relay.reshape(var_8798.astype('float64'), relay.shape_of(call_8797))) # shape=(28, 48)
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_8808 = func_8407_call()
call_8809 = func_8407_call()
func_5991_call = mod.get_global_var('func_5991')
func_5993_call = mutated_mod.get_global_var('func_5993')
var_8819 = relay.var("var_8819", dtype = "float32", shape = (80,))#candidate|8819|(80,)|var|float32
call_8818 = relay.TupleGetItem(func_5991_call(relay.reshape(var_8819.astype('float32'), [80,])), 3)
call_8820 = relay.TupleGetItem(func_5993_call(relay.reshape(var_8819.astype('float32'), [80,])), 3)
const_8827 = relay.const([[[3,10,1,-3],[-5,-8,-8,3],[10,-10,3,-2],[-3,-2,10,-3],[-10,-1,5,5],[-9,-10,-3,-8],[-4,5,-10,-2],[-5,7,10,8],[-3,10,-3,9],[-7,8,-4,2],[-5,-5,6,-7]],[[4,6,-4,-4],[3,6,-1,9],[5,-8,4,-7],[1,-5,9,-7],[7,-9,-10,-9],[-8,-1,1,-7],[-9,-3,8,-3],[2,-5,-1,-6],[-8,9,-9,-10],[-3,-6,-5,1],[1,-7,6,8]],[[-8,-10,5,-7],[-2,-10,-5,8],[3,4,-8,-2],[-1,-5,-8,4],[6,-5,4,4],[8,-7,-4,5],[-10,9,-6,-4],[-9,5,-4,5],[2,10,4,2],[-8,7,7,-3],[-4,2,3,-8]],[[-8,4,-1,1],[1,-1,-7,-6],[-3,1,8,-6],[6,2,-7,6],[5,-5,-8,-10],[-10,-1,6,-4],[-2,-1,-6,-3],[-7,4,5,-7],[-9,-7,-3,-4],[-9,-9,-4,-6],[-5,9,3,8]]], dtype = "int8")#candidate|8827|(4, 11, 4)|const|int8
bop_8828 = relay.floor_divide(call_8808.astype('float64'), relay.reshape(const_8827.astype('float64'), relay.shape_of(call_8808))) # shape=(4, 11, 4)
bop_8831 = relay.floor_divide(call_8809.astype('float64'), relay.reshape(const_8827.astype('float64'), relay.shape_of(call_8809))) # shape=(4, 11, 4)
bop_8834 = relay.left_shift(bop_8799.astype('int8'), relay.reshape(call_8796.astype('int8'), relay.shape_of(bop_8799))) # shape=(28, 48)
bop_8837 = relay.left_shift(bop_8802.astype('int8'), relay.reshape(call_8797.astype('int8'), relay.shape_of(bop_8802))) # shape=(28, 48)
func_6965_call = mod.get_global_var('func_6965')
func_6969_call = mutated_mod.get_global_var('func_6969')
const_8847 = relay.const([-8.677414,-2.120216,-2.300180,-7.801507,-6.896189,-3.664633,-8.576657,1.989970,8.918953,4.497665,-7.021844,7.846530,-4.349083,-9.540257,8.218725,6.654354,5.970059,-8.672428,-6.725093,7.171812,-6.939137,8.099653,-5.836681,-3.022238,-0.883939,-8.146652,-9.716684,5.432654,-7.023466,8.414747,1.927694,5.122082,-5.949815,-8.178058,3.093444,-2.088746,-1.201359,-7.449783,-4.092516,-0.321502,5.618066,7.476333,-9.623424,-0.977983,-9.723208,-9.246595,4.283161,-7.654548,2.859146,-2.158331,1.252142,-2.837131,-4.361516,-3.647069,5.765675,2.801294,9.218481,-1.636188,5.035050,-2.490730,-9.216957,-5.504533,-7.970318,-4.559509,8.161172,-8.320947,4.242002,-1.876834,-5.995167,-4.438146,1.931953,-6.980045,-1.202238,-8.799114,7.659498,4.861955,1.935820,9.560179,-5.519249,7.526131,9.855477,-2.054387,-7.141502,-1.303125,0.646032,-7.961901,3.433825,3.780955,-4.194012,9.751033,-1.069322,3.073678,-6.821317,-8.742425,-8.333953,8.284779,6.079710,-5.437050,-4.458495,-1.735564,1.078647,4.986004,1.976757,-1.829977,-8.801479,-7.486494,-9.084792,4.999914,-1.762830,-1.903334,4.007653,-0.391131,9.269028,5.960378,-7.818597,-9.547252,-3.971528,-9.094039,-2.181256,2.613080,-4.885912,-6.556329,-1.178484,-3.818848,7.684253,4.415990,-1.460552,2.572720,9.552179,8.198873,9.107368,6.439217,8.473668,5.276382,2.437259,9.404613,-7.477356,-9.879823,8.749656,-7.180653,2.033558,9.818971,0.737158,-1.743099,8.999332,-4.093004,2.798066,1.250171,6.100557,-2.507702,7.056309,4.417123,4.458098,-8.445362,-0.861791,9.198416,5.685383,7.657115,-1.259258,6.007532,3.807677,-6.360002,5.690555,-5.551924,-6.984110,2.122006,-0.161199,-5.455784,9.081790,-6.536083,9.798407,5.818551,-1.958785,5.851594,-6.417353,8.751019,8.902320,-8.961456,4.630005,4.668064,-7.036004,3.591324,7.526484,-7.158536,9.648156,-6.231163,8.833193,5.556299,-3.859474,-6.453494,6.438166,1.717010,4.902027,5.785566,-2.105823,-2.213880,-6.787154,0.212474,5.928995,-2.657992,-4.068642,8.253324,-2.987863,8.720394,-6.322780,-8.582782,1.032989,-9.373935,3.534151,4.760742,-1.303208,-8.598329,-6.199946,7.161850,-5.631147,-1.240773,-5.570495,-8.247340,-8.244387,-7.418551,4.292288,-2.103303,-1.725448,5.303176,-2.990695,8.759557,-4.216369,0.873509,4.037569,2.535577,-4.435622,-9.149271,2.365356,-0.677496,-8.818552,-4.441333,0.723508,6.472819,2.126915,6.056204,9.647314,7.298071,2.860750,-5.505084,6.816036,-7.481055,1.341766,-2.380449,0.223190,-8.002432,0.096096,2.192530,9.627027,-3.160334,9.455365,6.593728,-2.622585,-5.926444,2.012182,-9.338769,-8.341596,7.425202,8.921952,6.478208,-5.340954,2.643165,-3.947225,-7.432137,0.553659,2.211291,-7.928066,8.731390,8.037159,-0.829532,5.487942,0.124502,4.431150,1.274679,-3.973757,2.916622,7.641420,7.290921,2.671400,0.221214,-2.138027,4.710037,3.953183,-9.675035,0.719411,-1.389631,4.494662,-1.615590,-2.802006,-1.247180,-1.671627,3.356548,-5.427180,-2.853138,-6.572035,-6.215194,-5.556271,5.222355,-0.075270,-9.287279,3.937581,-9.332649,-8.227342,2.290372,7.114505,0.474752,-2.075171,5.920154,7.075100,-8.826961,4.703648,1.850358,5.277622,-3.409790,-8.251973,3.165905,9.031636,-6.758454,-4.992452,-2.952605,2.521215,-4.980988,-3.952945,-3.257422,6.149370,6.829826,6.593761,-1.289515,7.412781,3.573381,2.986091,9.753501,-1.768623,-3.922540,-8.437522,-5.585870,-4.126793,9.138405,-3.465776,9.224172,-1.765213,4.074543,0.010020,-4.853182,-1.412404,-1.572165,-6.718248,-9.291136,7.066769,-6.377008,3.848628,-5.879405,8.517566,-4.150555,1.532727,4.405321,-2.255153,-3.384604,-5.848015,-8.825065,-9.881859,-3.022928,3.393015,3.738252,0.758194,-0.658465,0.352564,-6.226143,-1.727462,-8.657422,-3.047414,6.413562,-3.414155,-2.751034,6.357820,8.844445,0.452826,-7.177972,-3.073432,-5.569602,2.941878,-9.683354,6.377564,7.181770,8.331077,9.067393,7.788388,-8.712406,-6.340508,-3.925363,-2.533715,0.967597,8.941745,-7.141992,-5.656874,8.215555,8.713164,-7.981772,4.011247,-5.827933,1.909230,-4.434558,-6.404857,1.236169,-0.736220,-0.643840,2.698439,-1.005573,-2.135442,7.930637,1.738828,-2.565965,-0.742331,7.918292,0.943670,2.945721,-2.255143,8.173693,-3.425107,3.765906,6.164550,4.460624,-3.693358,7.951455,-4.404447,3.460948,-0.303469,-1.011231,-7.903227,-3.291729,4.499429,-2.487064,5.734373,6.873467,-8.836398,-5.752122,-9.046173,0.215277,-9.938691,7.562821,9.652647,-8.611448,7.903414,-3.820222,7.964912,9.644649,-7.276096,-2.398456,5.081908,-1.878238,-5.341468,3.669589,-0.203210,9.084630,-4.009548,-5.382636,6.474668,0.996970,3.656019,-4.632215,-4.352614,-8.586518,-1.095418,-5.350004,-2.640374,1.710728,-2.284535,3.209609,5.797996,6.570677,-8.264798,9.763513,-8.930569,-1.736454,6.213681,-7.340519,-6.479196,-3.144532,3.690465,-5.587554,0.808150,3.197312,7.582596,1.793836,9.358348,-3.836601,-7.795768,-5.229440,-9.208475,-6.308535,5.320921,0.395540,0.256488,-9.992711,-9.396509,-7.507336,8.295231,1.151281,7.970921,5.671855,4.695328,-1.512141,-3.946903,2.782166,8.015157,-9.371831,-4.181160,-0.913168,8.667533,0.706489,4.866413,-1.658932,4.248392,8.237556,-7.668892,5.192120,-1.850631,2.070053,-2.114761,0.486302,-5.788388,5.426522,2.263731,3.799605,-5.223427,7.506481,-2.218882,-3.629510,5.116561,-9.894060,9.538344,-8.696116,1.342847,-6.478955,-2.291602,1.341041,6.263686,3.264821,-7.318807,2.189778,3.817274,6.773312,-0.419810,9.941054,9.817517,4.217859,-1.678272,3.884021,0.561085,7.332872,0.870187,2.568506,1.053907,-2.907034,2.006031,4.901056,-5.149143,-8.698773,-0.286254,-5.980060,-5.682163,-9.675602,6.369662,-3.791744,3.212269,-4.446735,8.625488,3.765676,9.807841,-6.941282,-0.034723,5.309467,-3.592155,8.714411,-5.685102,8.108283,-4.409092,3.234067,1.382658,-5.488921,7.724120,2.709943,-0.802230,-0.479318,-1.207356,-2.474887,-9.012937,9.063678,-4.957176,7.961854,9.629686,1.467014,5.383876,1.897688,-8.636174,6.042696,9.582852,-4.419794,-2.124781,0.440188,-3.692061,1.761902,9.346968,3.867746,1.489856,-2.859283,3.006917,-9.589060,-4.374472,4.547543,-1.835198,1.302327,-9.904845,1.491067,-1.932168,2.871909,6.713284,4.787070,-8.545519,-4.997783,9.147750,-0.109299,-7.704581,9.786497,-9.395990,1.036976,-0.063365,-8.600490,9.156656,6.314882,-7.916387,-6.991748,4.250369,3.064076,-6.448549,5.900145,-5.812843,5.168254,0.031666,-8.089229,4.765136,-0.069995,-4.822081,-8.265296,-2.732512,1.837332,9.541868,-1.497263,3.134928,-7.164247,0.490089,4.786874,1.754901,-2.731048,-2.459457,-1.510107,7.546512,2.184315,-9.128378,3.631818,9.694472,2.129124,-7.431059,3.351715,4.157490,1.159118,5.678271,7.428377,8.867395,4.286276,-1.841066,-2.294312,-9.843610,2.699704,4.690706,-9.997095,3.706404,8.345440,3.060587,8.327232,-0.605787,-7.342262,2.890794,-9.080801,6.197195,-0.172863,-1.707063,0.500803,-8.356699,3.200032,6.228521,-6.915373,3.254873,-3.042610,-1.931797,-0.374423,2.853757,3.702267,-3.641464,8.569560,5.983492,9.305931,-0.390623,8.387667,0.379572,6.793751,-5.058815,1.202901,7.400830,-2.643596,0.530065,8.752082,5.529573,0.476586,-6.375187,-4.159294,2.199092,4.359154,-4.601105,-1.923833,6.332336,0.074301,-9.201585,-3.837504,-4.396162,9.758394,0.278913,-5.025248,5.980272,-1.676654,0.334801,-5.759831,-9.410677,-7.642468,-5.193698,-5.847816,-2.549090,3.837672,-6.276617,3.471401,-3.879219,-2.738191,1.016930,7.550609,-2.620363,-2.002911,-4.764125,-9.760022,3.975289,5.629369,-2.001343,9.375070,3.827858,1.477368,-6.086591,3.767436,2.612382,-1.154583,-9.328622,-1.845325,4.095584,-3.601563,5.930891,-4.835032,-2.201019,-0.727831,2.600349,3.178666,-4.143691,-1.012598,7.790992,4.262286,9.853481,7.044846,5.246026,7.676196,6.037412,-5.435014,-0.694038,1.473378,5.661138,6.523691,2.992226,6.016603,8.322697,9.916783,1.912727,-7.853982,-2.117548,0.518082,0.297575,1.124234,-4.467207,3.424984,-5.057053,9.711790,-3.026718,7.374852,-0.066738,2.245700,-1.450347,-3.775996,7.922199,0.442372,5.207412,-0.292460,2.394687,3.139440,6.825002,-0.792570,0.120631,2.525097,6.813900,7.209727,-8.861791,3.041027,4.804403,-3.840714,-8.633027,2.690732,-7.024815,-4.563026,3.120360,-7.409044,-0.990262,-5.567507,-5.058756,6.896718,-3.021029,8.936370,1.212961,-4.498929,6.583918,-7.769582,-7.159421,0.645129,3.846828,-7.801818,2.113204,4.242546,1.605125,7.916800,-5.342343,8.873168,9.305583,0.496675,-0.444621,-7.655693,-0.033744,5.446418,-8.809208,-3.165522,6.345655,-9.962400,8.062706,-7.179144,0.764879,-3.827787,1.498856,5.659832,0.247990,3.579460,-6.934599,7.883619,-2.391005,9.122642,1.291435,-1.257403,-1.335374,6.000536,1.304967,-2.557261,6.236704,-8.719304,8.094025,9.967931,-8.224425,-7.542274,-6.403177,3.561838,-6.230648,3.410784,-4.223141,-7.529721,-2.324460,-8.476218,-4.918039,3.991224,-0.895630,-0.633842,5.783208,-5.001648,-2.397612,-2.205275,-9.663751,-2.740629,-6.336242,-6.383659,8.188100,5.886293,-5.050350,9.234341,-1.763575,-4.052830,-0.973346,-1.442038,-3.188298,5.341149,1.904982,-7.982477,-7.004884,5.892140,-6.457606,1.625024,-5.173340,-0.138989,6.465999,3.937942,-2.689503,-6.281612,-6.047155,-5.440579,2.287309,-2.299342,1.673398,-2.945381,4.405672,-8.292576,1.964488,8.592511,-4.211604,-0.408914,-8.647490,2.712185,1.785125,5.737569,6.056269,-4.620664,-3.826851,7.484336,2.613402,5.979950,7.262646,0.668012,6.997674,2.569678,-3.730085,4.345858,8.633422,9.842173,-3.423468,1.124325,-1.141056,-9.589249,-2.545852,-5.269075,8.920262,-7.331172,0.562596,9.944546,-8.130752,-4.562966,-3.060994,8.207874,-9.554756,-4.681867,-4.000661,-7.207823,-9.873127,5.791481,4.253272,-9.670178,5.699995,3.405636,-0.614329,1.390706,5.509641,8.351276,-4.470265,-6.039688,1.477003,8.685748,-0.737035,-6.411648,3.505685,2.727341,1.294627,7.076626,-2.816149,9.565254,-3.977863,9.583177,-3.421665,9.808472,-5.315028,-7.074465,1.118940,4.809488,6.552988,-3.473895,0.456559,9.657723,2.542680,6.773970,-4.450945,1.053541,7.449579,-7.506623,3.181953,-5.639119,3.436043,-7.300027,3.853047,-2.184931,7.416301,6.711499,-6.542671,-6.662388,9.598415,5.280518,-2.525287,-8.334262,-0.944027,-6.069383,9.813916,0.521928,6.725516,4.853072,5.128259,5.995229,-6.369553,6.935275,-1.136261,-3.078696,0.388766,1.516686,-8.523485,9.141949,-0.159335,9.554914,1.652638,0.196815,-1.675170,0.666870,-6.841355,-6.439022,7.103663,-3.554771,2.459253,9.145948,-1.183266,0.220719,8.710767,7.088300,-7.032627,4.001985,1.641412,-3.422211,3.451454,9.863626,-9.786848,-0.743461,7.697142,8.876977,5.403537,1.818196,3.757364,4.011401,-3.987084,1.855719,7.780760,-1.895605,6.447995,-5.607124,-0.244021,-7.931694,9.094231,-2.826371,9.797603,-4.549871,-0.094771,2.644825,-9.455521,-2.264844,3.553642,8.011486,-1.647568,-0.883241,-7.278601,-0.565355,-5.457921,9.274641,3.924902,5.362971,-6.618287,-3.525119,7.152989,-9.907023,-8.368699,-4.595860,-7.938436,-8.117173,3.791381,-5.071374,2.610905,-6.997025,-5.520686,9.790593,4.597659,-0.388596,-3.026398,4.411589,-0.615543,9.100343,-3.049516,7.715038,5.456622,-0.131383,-9.314884,-0.706925,9.969634,4.449898,4.577677,-7.581431,1.542654,-8.851085,2.808660,-1.550833,1.720823,-6.358604,3.414815,8.534786,7.601919,-0.452208,-8.652238,8.556375,5.384752,8.178177,0.187388,-3.801434,1.618313,5.811519,-9.249611,-4.234893,6.387384,7.292440,-4.968687,-1.580008,-2.074993,8.966757,4.550818,9.079779,-9.771464,4.452861,-2.097538,-4.389328,-2.511673,-6.145386,6.081113,6.233583,7.947337,-3.564244,0.226990,7.824251,4.347876,-1.348681,0.690473,3.781531,0.207523,0.173421,-7.967977,6.979846,9.199679,8.297828,-7.549422,-2.902934,-8.114061,-8.242635,6.718406,5.318603,-3.577943,6.732288,4.501333,2.313261,-6.879660,-5.931029,7.543515,3.186841,2.286091,7.181691,3.477427,1.785793,-6.325578,1.498815,6.495345,-1.746448,4.319004,1.378042,4.112205,0.754923,-0.598488,-3.435120,0.998613,-4.377417,7.715527,-4.840591,8.733136,-2.946661,1.468867,2.995981,-9.331742,6.221098,-5.221090,0.127427,6.813436,9.568548,-5.890739,7.964109,2.363031,3.884914,-7.178732,-0.293313,1.793925,9.487711,-2.333820,-8.869862,5.814580,-1.712167,-0.314524,8.472899,-9.629247,8.634698,-0.646480,-6.027231,5.386152,-1.193305,-5.400196,6.054974,1.691200,-4.927484,-9.501590,4.250656,-9.516412,0.721341,7.828347,7.215338,4.918628,-5.612449,0.777151,8.387888,-1.892092,-1.746161,-6.296349,9.540215,0.438682,-5.389331,-8.382343,2.579399,8.570656,9.995806,0.853464,8.450994,-1.350891,-9.586058,-3.701637,-8.993510,-5.366690,2.649619,-8.664111,-6.949594,3.796802,0.132147,-8.032085,-9.270846,3.101867,-6.081015,-8.588941,1.800650,-0.216920,7.057398,-8.989202,2.542393,-5.914338,9.347530,7.657103,-4.187899,-3.854761,-3.420787,-6.283338,2.974532,4.708023,-8.139015,1.105366,-2.712515,-1.939025,-8.092970,5.731633,1.974489,3.525062,-6.341266,-3.048684,2.917162,5.074010,-1.349511,-8.936104,9.815614,6.629630,-9.903244,-1.509765,-1.433480,-8.508623,0.652191,0.696172,1.407417,9.436476,9.290079,1.365405,6.549065,2.457710,-5.492759,6.117913,1.308655,-5.124574,5.583553,-2.458455,5.833604,-1.535008,-0.548146,4.264890,-6.878766,1.026037,-4.831450,-8.730742,7.052458,9.066325,-6.127576,-7.449627,-2.098235,8.208956,8.325026,1.127130,-1.397416,0.131179,2.898329,-4.263102,6.054753,-6.783956,-8.855073,9.872883,-0.902237,-1.747678,4.545780,-6.722447,2.196950,0.954029,4.913703,0.803122,6.487759,-4.675302,3.490066,-7.550982,-9.242060,-4.634999,-1.075368,6.455561,9.296067,0.480430,-4.480693,-5.625496,5.561595,-6.694210,-6.735569,-2.444566,-3.576475,5.668138,4.206987,-6.642812,-4.825230,9.205116,9.911072,4.550616,-7.328016,5.854618,-3.561599,-7.955008,-6.045535,-3.458543,-2.888428,-4.515996,5.871888,-3.827377,2.933243,-4.318995,8.949374,-9.479984,-5.157090,6.891844,-2.744891,6.569207,-7.812130,-5.812559,-6.328866,-6.024672,3.361608,1.790473,-0.957730,-8.536588,8.798904,9.218034,-1.701259,2.195682,8.353922,9.999610,8.510673,-0.417889,-9.108807,-3.043800,9.645454,0.639209,3.592918,2.147419,-5.667566,-4.535874,-7.338514,-8.035868,6.693947,-3.994110,0.207502,6.970709,-2.969295,-8.745736,-2.944721,-0.624683,9.240661,1.725824,-2.099944,-7.579104,-8.662350,-7.070186,-2.583305,1.113176,-2.622640,-6.610200,0.021213,5.685120,5.773909,-5.970117,-2.615844,7.996319,-3.577558,3.746918,6.823638,1.550244,-9.084808,0.542668,-6.156929,-7.220655,-5.445362,-9.988533,-8.909285,8.361444,-6.877183,-6.865512,-5.801506,-0.764540,-8.812457,-3.137413,-9.431723,2.701467,3.571965,2.593040,6.333758,9.950672,3.112913,8.949395,7.259263,7.531526,-8.693041,-8.297912,-4.551351,7.867669,-9.065790,-8.299966,7.042395,2.143351,-0.068056,-8.864401,9.852377,9.207046,-3.799889,-7.652849,-3.026766,1.999173,9.485480,5.024040,-0.411268,-0.672431,-3.844522,3.928288,-2.185729,9.702832,-7.072538,-3.201944,5.185248,-4.204540,-0.376296,7.887036,-7.737777,3.270850,-1.371293,6.465318,9.805344,-7.354616,2.465408,3.118978,-3.210856,-6.167528,3.396492,-2.491082,8.549900,-1.035585,-8.887901,-8.234859,-0.903181,-0.651935,-9.012041,4.279590,-2.065401,-6.184327,-7.332878,0.753769,-0.664169,8.983306,1.050984,-4.028722,-9.470904,-6.547028,-5.315795,2.301345,2.988126,5.956686,-7.549383,2.379059,-7.035575,-3.073374,-8.778415,-4.660455,4.679043,-1.362676,5.366843,6.254936,6.469753,-8.619614,-1.265869,-7.100785,-1.601087,-8.537980,-9.055157,0.687678,9.022960,5.247006,5.159404,-7.218707,8.109485,9.182706,8.601827,-6.665586,8.476632,-0.244596,4.782842,6.258552,-6.847659,-6.475606,8.139271,-1.914570,1.257808,-1.986425,8.441600,6.493794,6.700831,8.389314,-2.995109,1.625720,9.396202,6.746487,-3.001405,-0.796763,-9.938387,-1.241728,-6.931929,-9.157685,-6.797129,-9.399957,9.853525,8.380593,8.957924,4.538317,-4.340591,3.502176,-1.915030,-9.125539,1.133151,-4.264694,3.129659,3.126386,7.663776,5.982445,6.426215,8.637649,-2.794999,0.958401,3.821028,8.374427,-9.744918,9.268015,8.586416,3.391075,-2.216019,2.129553,-1.777831,6.016663,-4.455503,-4.461434,7.053886,4.749338,-4.037911,2.815869,0.141342,0.103959,7.523771,7.801879,6.881358,1.108755,-3.891112,8.242009,9.641748,-3.509832,-8.980450,5.380275,-7.252701,0.831829,-6.032361,-5.185414,9.170815,4.763722,7.053080,3.076835,1.729355,-8.479829,7.458357,6.831209,2.218800,0.650104,-4.742060,4.449660,5.189294,5.486859,0.230931,3.387438,8.043791,5.819482,2.627208,5.680644,6.836196,-0.383888,-1.518728,5.864036,8.212650,1.356109,-5.562414,-5.215615,2.226324,1.073723,-6.732683,8.044845,2.711397,-4.711787,1.327552,6.661022,9.231234,-0.089198,1.595810,7.721934,-7.012548,-6.337073,0.981343,-0.927134,-4.157097,2.276320,-9.560508,6.124981,4.584300,3.101001,1.434168,4.183094,-3.257439,-6.064454,-0.088268,2.816262,-5.749226,7.247958,-2.073756,-4.457961,6.961937,0.461933,-6.269193,3.641747,-8.772596,4.966991,6.076288,8.735809,-1.548351,-0.914255,1.319934,7.979567,7.850630,-0.986636,-6.788060,8.734457,-7.061409,3.740005,0.341822,9.286989,1.720221,3.911919,4.874135,2.425857,0.940125,-7.799862,5.874529,-8.180557,-2.421712,-1.606993,-2.871608,-7.450884,2.870023,7.553632,-5.953645,-2.551033,0.744996,5.683514,-3.296870,-7.597313,-6.774436,1.952963,-2.239693,-2.786744,-5.568941,8.657329,-4.236047,6.883173,-7.547521,-6.472099,1.064756,-1.985211,8.386401,-8.317198,-5.359728,5.628195,4.412996,-6.645437,-0.706986,0.017393,-5.658480,5.862047,-6.189454,-1.656472,-9.951306,-1.825943,3.219059,-0.995058,-4.672036,8.697040,-2.810886,8.891391,8.329746,3.352811,-1.209634,-9.920429,-1.082824,-1.878395,-1.724234,5.265075,1.685853,3.472812,-4.475854,7.742075,-9.023337,-3.118503,1.851158,-4.422901,3.025298,2.246335,-9.953220,-9.846859,0.661516,-5.506647,3.705593,-7.570158,0.563907,-5.902939,-8.191252,-4.819072,-6.333163,4.453291,-9.691888,-5.787084,3.890883,7.506978,1.238142,-0.505241,-5.026804,-4.262120,-0.298578,9.695015,-7.609929,-7.918007,2.473229,7.835491,1.751775,-6.009155,5.177046,4.314704,-3.560491,-6.628406,6.781607,-1.831078,3.528658,3.231035,-5.224256,7.351939,-9.951686,3.811566,-2.868137,4.259875,2.080741,7.815348,-3.163668,8.278359,-5.055450,-5.521954,6.761678,5.024090,-0.845551,-7.417059,7.185986,9.075793,4.205976,-8.346113,-4.769523,2.638967,1.167313,-1.224619,-4.104918,-3.051136,0.500575,-4.492521,3.051197,-2.626975,-3.547913,-3.846606,-2.639089,-5.403189,-0.206314,-3.923550,-2.185014,-3.265392,-9.549846,-1.662199,0.963637,9.012818,3.429344,2.384145,-6.804003,-9.586309,-7.211611,-1.019406,7.173971,4.084810,1.134708,-8.592253,7.582112,1.830589,1.128948,-6.046555,-0.725707,1.412543,7.139866,4.475247,-6.142681,3.593530,-6.072820,-2.773231,-7.110342,-4.094505,5.887815,5.258560,1.463768,-1.459535,-1.531603,6.375040,3.505166,8.296703,7.076774,-8.693258,-3.733376,8.102396,3.170394,-4.555633,1.899168,-2.677265,1.002690,6.959773,-4.701184,0.357517,9.793770,-3.092564,-6.026300,7.062446,-2.865666,1.179262,5.022584,2.899793,-5.698966,-3.636935,-4.748795,-6.340078,1.342491,1.157259,-8.118732,-3.282810,3.177309,-9.539364,-7.869169,-0.127840,1.468496,-6.798712,-6.554771,0.631792,0.744695,-8.682445,-6.026419,-6.255956,-6.173463,-0.753108,-4.473914,-6.744371,6.234057,4.255478,0.424538,-7.774373,-4.971968,8.159356,-8.591918,6.070324,7.200746,-4.898945,9.050196,3.198983,-6.555529,-1.856086,-0.967335,-5.820619,2.660968,-1.460172,8.180581,5.174240,6.357449,-8.438544,6.221216,0.909447,5.405540,4.747384,-8.531993,0.698176,-8.290721,-3.257439,-1.373019,-5.077483,-0.282281,-3.657914,2.022082,5.616082,8.501759,-6.740136,-5.000107,9.020810,5.773458,-3.738213,8.718817,-1.284642,2.500737,-8.012925,-2.228389,6.492342,7.192830,-3.271577,9.448824,8.635067,-1.703902,2.704852,-2.930589,-3.167390,3.758476,8.946295,-8.409560,-5.502913,-4.419147,-4.108578,2.348525,-4.057866,2.819044,4.101146,-6.738931,5.056745,1.547951,0.865190,1.505299,4.780889,-4.066108,4.008176,7.932786,-5.921409,6.687122], dtype = "float64")#candidate|8847|(2028,)|const|float64
var_8848 = relay.var("var_8848", dtype = "float32", shape = (1, 1470))#candidate|8848|(1, 1470)|var|float32
const_8849 = relay.const([[-2.482763],[1.399188],[9.419489],[-4.383881],[0.512700],[1.291126],[2.841648],[0.805340],[6.067492],[-5.507041],[2.346163],[-9.475815],[1.672775],[-1.087135],[3.041047],[3.081949],[-3.758123],[-8.155982],[-2.936044],[-7.525096],[8.410438],[-6.457999],[-8.119402],[9.261945],[-3.995931],[0.243769],[-6.727375],[2.404537],[-3.583766],[-4.649127],[-5.774151],[1.744688],[-6.335415],[-1.623658],[-1.683168],[-2.187000],[-9.180103],[7.748688],[-5.700767],[-8.507028],[-2.532148],[2.854313],[1.900744],[-9.022844],[-6.125753],[-4.564949],[4.290795],[4.753636],[5.107517],[-6.551430],[-2.104590],[0.717614],[8.253544],[-9.421572],[9.618919],[5.592104],[-9.935615],[7.986643],[0.787422],[4.329897],[-4.625164],[-5.834548],[-9.893008],[1.788750],[3.678590],[7.881739],[-5.327820],[-5.748775],[2.930013],[-5.165462],[-1.997426],[6.539932],[-3.373846],[-6.497322],[-2.284383],[6.701113],[4.265715],[-5.277668],[9.788381],[2.571378],[1.020736],[-8.764041],[-2.250305],[-3.600394],[4.348011],[-4.618320],[-8.237064],[8.514204],[-3.797001],[-5.969330],[5.326064],[7.325502],[3.969270],[-7.704836],[6.333706],[3.267199],[0.353831],[3.968766],[-9.070471],[9.726639],[-7.901939],[5.105019],[5.715683],[9.094378],[3.286317],[7.255982],[5.985159],[3.748182],[-9.105008],[1.367736],[-4.443628],[6.473108],[-1.796972],[7.226952],[-7.648616],[0.091318],[-2.512092],[4.292044],[9.068274],[-5.065755],[-3.205749],[5.993818],[-0.861927],[-7.815469],[4.498743],[5.164927],[-0.178079],[0.348024],[2.673258],[3.729448],[1.526100],[-0.860908],[-3.550280],[-7.837659],[-9.429503],[-5.086585],[-7.760836],[-6.312863],[-6.662343],[5.701305],[-3.747282],[7.468874],[4.766682],[3.536970],[8.725221],[-8.572831],[7.800647],[1.305301],[-9.100964],[8.143559],[-6.680908],[4.895827],[-7.983961],[6.390512],[-2.906261],[-9.014194],[1.076222],[8.115119],[-8.773741],[1.747299],[-1.142849],[-5.018792],[-9.040254],[9.742012],[2.298484],[9.206988],[-9.811743],[-6.648795],[-8.698462],[8.662782],[5.847154],[6.824378],[-1.496486],[1.821321],[-0.847890],[-6.295055],[6.829122],[-6.522903],[-7.101900],[-0.846822],[9.901579],[8.241147],[8.355770],[-9.448226],[-2.614630],[-5.394164],[1.836641],[-4.063676],[9.268852],[-4.901074],[8.736696],[-4.322197],[5.357374],[-6.993557],[-2.972681],[-1.871238],[9.274178],[6.417087],[0.291689],[-2.276607],[5.667929],[9.155101],[4.413471],[-3.282885],[-0.409808],[-5.904915],[-1.926948],[-4.422964],[4.628938],[2.890378],[2.743615],[1.368319],[-1.381244],[2.359582],[-8.187539],[4.494128],[0.422142],[-3.486014],[-0.039813],[4.721006],[3.724873],[-0.928492],[-2.468507],[-1.300351],[-2.828977],[2.743970],[2.425362],[-9.630853],[1.928124],[0.083243],[8.972230],[4.380623],[-1.046478],[4.700565],[6.616442],[8.534586],[-4.092754],[-9.179263],[-5.984660],[9.663897],[-5.443929],[-9.891994],[0.838720],[0.015743],[1.920324],[9.808583],[6.801692],[0.102911],[-3.237506],[0.546704],[5.971315],[6.367628],[-6.559615],[-8.974086],[-9.579869],[2.923237],[-0.694993],[-5.715439],[-2.743230],[-0.307732],[-4.223870],[8.414662],[-7.294802],[7.408081],[8.516224],[-6.390958],[0.548097],[5.576741],[7.231128],[-8.385573],[8.825345],[2.015220],[-8.739590],[0.128073],[7.157016],[-6.421233],[3.075120],[-8.635920],[-8.513623],[9.923176],[-9.891676],[-2.171397],[5.263716],[7.661168],[4.446960],[-4.509244]], dtype = "float64")#candidate|8849|(286, 1)|const|float64
call_8846 = relay.TupleGetItem(func_6965_call(relay.reshape(const_8847.astype('float64'), [13, 13, 12]), relay.reshape(var_8848.astype('float32'), [14, 105]), relay.reshape(const_8849.astype('float64'), [286,]), ), 8)
call_8850 = relay.TupleGetItem(func_6969_call(relay.reshape(const_8847.astype('float64'), [13, 13, 12]), relay.reshape(var_8848.astype('float32'), [14, 105]), relay.reshape(const_8849.astype('float64'), [286,]), ), 8)
output = relay.Tuple([call_8794,call_8818,var_8819,bop_8828,bop_8834,call_8846,const_8847,var_8848,const_8849,])
output2 = relay.Tuple([call_8795,call_8820,var_8819,bop_8831,bop_8837,call_8850,const_8847,var_8848,const_8849,])
func_8851 = relay.Function([var_8798,var_8819,var_8848,], output)
mod['func_8851'] = func_8851
mod = relay.transform.InferType()(mod)
var_8852 = relay.var("var_8852", dtype = "bool", shape = (28, 48))#candidate|8852|(28, 48)|var|bool
var_8853 = relay.var("var_8853", dtype = "float32", shape = (80,))#candidate|8853|(80,)|var|float32
var_8854 = relay.var("var_8854", dtype = "float32", shape = (1, 1470))#candidate|8854|(1, 1470)|var|float32
output = func_8851(var_8852,var_8853,var_8854,)
func_8855 = relay.Function([var_8852,var_8853,var_8854,], output)
mutated_mod['func_8855'] = func_8855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7608_call = mod.get_global_var('func_7608')
func_7609_call = mutated_mod.get_global_var('func_7609')
call_8931 = func_7608_call()
call_8932 = func_7608_call()
uop_8936 = relay.asin(call_8931.astype('float64')) # shape=(28, 48)
uop_8938 = relay.asin(call_8932.astype('float64')) # shape=(28, 48)
bop_8940 = relay.right_shift(uop_8936.astype('int8'), relay.reshape(call_8931.astype('int8'), relay.shape_of(uop_8936))) # shape=(28, 48)
bop_8943 = relay.right_shift(uop_8938.astype('int8'), relay.reshape(call_8932.astype('int8'), relay.shape_of(uop_8938))) # shape=(28, 48)
bop_8946 = relay.floor_mod(call_8931.astype('float64'), relay.reshape(bop_8940.astype('float64'), relay.shape_of(call_8931))) # shape=(28, 48)
bop_8949 = relay.floor_mod(call_8932.astype('float64'), relay.reshape(bop_8943.astype('float64'), relay.shape_of(call_8932))) # shape=(28, 48)
func_8851_call = mod.get_global_var('func_8851')
func_8855_call = mutated_mod.get_global_var('func_8855')
const_8955 = relay.const([-2.919799,-7.251495,-1.619467,8.772724,-1.653569,4.704673,-5.358708,-4.211728,-0.197844,4.969036,-9.458106,2.984349,-1.691598,1.205992,-6.501720,2.886181,1.923855,-5.534819,-3.721406,1.454257,8.794741,3.040935,-3.269478,-7.168725,-0.208987,2.296155,-5.995765,9.522371,5.440360,-8.634008,-5.890884,-5.565566,8.097250,-1.605617,-8.191974,-2.400107,-9.631257,7.188917,9.936547,-0.299649,2.700856,4.775374,-5.423653,-6.172887,5.606282,3.470195,7.998112,7.964222,8.980705,-9.518717,4.923520,7.048390,-2.254059,8.810577,-2.395826,-1.862882,2.192939,5.003248,-2.841566,0.689202,-3.796926,2.257905,-2.942544,-0.894502,-9.984205,-4.223643,8.620214,-7.642362,-5.938383,3.879477,7.449612,3.841091,7.399718,-8.685989,-5.754248,-1.383233,6.456272,-3.152527,-6.266248,8.493987], dtype = "float32")#candidate|8955|(80,)|const|float32
const_8956 = relay.const([2.878203,1.433786,7.569259,-9.111723,-2.198120,6.635661,-8.715529,8.796895,-3.612598,6.757953,1.898557,7.036748,-4.684552,5.957685,-0.566635,-1.889927,-8.035216,-6.149900,-8.385616,-0.308896,-0.420235,3.160513,7.188946,5.834327,-0.916633,6.671048,1.553242,3.941406,1.408684,3.367217,4.632926,2.661000,1.113262,0.319534,-8.201366,-6.995654,-5.917408,5.577524,-3.797189,5.750290,3.352736,8.570528,2.832743,-3.060244,5.477526,5.005392,3.813060,-0.316270,-3.796080,6.215353,0.539979,5.969033,5.936926,0.717797,2.147023,-7.893696,-1.092300,7.818053,-4.112610,-9.956723,-5.678689,8.067093,8.572227,-9.408810,2.693192,-0.873581,-0.815859,-5.594499,4.388216,1.203470,-7.530882,9.567163,8.498593,2.248619,6.216696,4.559831,8.542165,9.408609,-5.606131,-8.554234,9.811535,-4.936574,-4.694578,1.209977,0.757983,-8.979668,-3.811281,-7.946814,4.434526,-9.911416,3.900729,-3.232571,-2.888267,0.240000,7.202449,-0.616556,4.630502,-6.962341,-8.553133,5.931973,2.963565,8.202960,7.904132,5.970559,2.595616,1.744044,-6.736513,5.940626,-1.284078,3.876791,-2.667191,-4.239859,0.428099,9.852454,0.381538,8.730293,8.776432,-8.395663,-9.906734,1.731823,9.017738,-2.552777,-6.268381,-5.741886,0.136775,-5.331904,-1.170666,0.877255,-5.248665,5.040326,6.245135,-1.965865,6.548009,3.683104,-9.655169,-5.952389,-1.065265,2.714992,-4.986424,0.849511,-8.128014,-5.421190,-3.796214,-6.508752,-2.692568,-0.719753,-9.034395,-6.408424,-6.862364,0.063842,-6.074789,-2.038064,-4.295641,9.765415,-0.130659,-0.290025,6.108639,3.042581,-8.380243,-5.868080,1.444801,-9.466879,8.102194,2.634392,6.886942,-4.267150,-8.728002,-9.315446,8.091798,-2.111359,-4.955780,-8.230047,0.146058,3.348394,6.795506,-7.259682,8.823290,-7.208286,-2.627042,-5.488133,-6.372252,4.675032,0.687796,2.164527,-7.307623,-5.349854,6.366236,-1.810751,-1.725369,-3.200431,0.526530,-1.089121,-7.707186,8.225639,0.914256,-3.321827,-3.757371,-1.655271,7.720729,-9.994594,6.865678,-0.627947,4.327269,2.681598,-7.002325,2.672655,8.279295,-7.354724,-0.753151,-0.517637,0.711804,6.054509,-2.699668,-2.983860,-7.870541,6.652922,8.522397,-1.951586,-1.827025,3.518890,7.259044,-1.955549,-4.264018,-1.405061,-7.430020,-4.961185,1.554594,-4.461380,-4.964480,7.080171,5.992774,-8.225955,-8.696755,-5.655570,9.590182,-5.798914,-5.973789,4.121445,4.753400,-6.993492,-2.362594,-7.123196,-6.329355,5.770388,4.980285,9.173024,-7.320599,0.207277,-2.790134,3.747930,7.838476,9.073339,4.773612,3.132602,-0.606260,-4.100449,-5.604440,4.245228,0.878056,9.884585,4.619931,-9.268199,5.588292,0.132305,8.704787,2.083424,-7.461631,-0.002772,0.827105,-8.953091,2.725653,-5.030671,8.527512,5.963806,-9.830654,4.934140,9.282646,6.165328,-4.454170,1.656953,-6.896226,-8.335636,3.703407,-1.682317,-5.445994,-5.879246,0.094941,-1.791362,-2.384449,-8.127548,-6.039366,8.900413,0.215599,-0.015153,6.734373,3.407993,-9.431283,-9.138265,-9.857822,-4.631122,9.709199,9.630272,7.721404,-1.680777,1.887995,5.346754,-5.943201,4.213665,3.171994,7.199958,4.482243,-5.733369,5.038745,5.880989,9.407024,-8.587025,3.183614,-3.738696,8.275780,-7.509922,0.903515,2.836816,-9.725037,6.547171,-2.777078,-3.297075,1.720190,-4.998485,4.256856,-7.210089,5.246844,-8.793423,-6.896456,-9.377591,0.480256,-2.515097,-9.958740,-7.557969,7.622354,-5.814614,7.031295,4.821136,-2.976503,1.434052,-0.401305,-7.661857,-3.452143,-8.250826,9.029475,8.240246,2.120767,3.175332,3.405489,4.729856,8.285458,-3.914729,-0.609741,6.553471,9.208650,7.768791,8.879402,-4.185613,-9.309306,-1.765999,6.309530,-2.840273,-8.815682,-8.597474,9.621945,-0.920758,8.144499,1.627340,-9.781961,-5.980443,7.721399,4.277422,-7.242266,1.541335,-5.780003,-0.215876,4.090223,3.770580,1.560312,7.689611,6.282859,3.139225,-1.060199,-1.629705,-7.674930,0.271493,-7.801382,-4.021826,-0.990699,8.221361,9.255453,-3.126709,-0.152721,-8.594537,5.715904,7.370903,0.204988,7.013915,1.281503,1.789789,6.247458,-0.292092,8.199588,-4.068641,-7.383900,5.345392,2.309827,-0.841090,0.838795,5.404510,-4.203530,2.411551,-0.404472,3.543739,-4.781841,6.284155,6.460100,-2.334274,-0.785820,-3.796508,-4.899460,-8.774359,8.256498,-0.082325,-9.409487,4.777052,-5.261043,-1.579926,-3.654850,-7.029719,-1.341475,-8.689233,2.993800,7.523480,3.689128,-1.305074,7.811919,3.236678,6.529371,3.231365,-7.252020,-4.457179,1.095627,3.410478,7.145472,-3.662692,4.162543,4.171325,9.755564,-4.953367,5.804252,6.987014,5.086423,0.297729,-4.960628,-1.682251,-6.732464,4.325670,-5.938425,0.063182,-9.774923,9.485768,-8.914689,2.494476,7.825581,-7.841948,-8.041308,3.191996,-3.571764,8.073294,2.941044,5.357695,-0.311555,3.581761,0.533444,-5.016781,2.467407,5.101667,0.924067,4.528844,-3.343862,5.981186,5.977894,9.038531,5.741722,-5.502519,-4.104905,-4.663604,-8.169929,7.776344,-1.689094,-6.486365,-1.669788,0.719855,-4.559947,-7.657357,-7.211445,9.319786,3.462630,-8.170716,8.987980,3.344334,-9.737167,4.642090,-6.665811,9.089448,-2.451755,-0.671850,5.313156,-2.158955,-8.156497,6.145817,-0.887634,2.706829,7.733918,6.941144,-2.872892,-5.017777,-7.540304,-9.500976,0.272991,-3.196145,2.017077,-5.601886,-9.165627,-4.114184,4.743867,-9.635999,-9.982317,8.399539,7.656441,6.539148,-2.709870,-7.699480,9.224169,7.466131,-0.952830,-5.547843,-6.579752,0.047338,-6.218365,8.425576,7.183700,8.501697,0.689608,7.162029,2.721679,6.014374,-3.014674,8.955166,-4.698297,-4.219862,-5.783222,-2.940415,6.603511,9.451091,2.449191,-9.772090,-5.387525,-0.689438,-0.992288,-6.799211,-5.968317,9.803591,-5.637670,-0.962853,8.114276,5.222495,-1.830083,-3.193338,9.301007,5.102290,6.379215,4.684409,5.077303,4.805863,2.512676,-3.739400,2.280342,7.362075,-6.865875,-4.606293,-9.720112,9.994829,3.610095,0.632363,4.081514,5.251329,-0.045603,1.303160,7.449686,8.088541,-8.129764,-0.787376,-2.035752,6.685130,-3.495466,-5.618027,-3.833973,6.796885,-2.266214,-8.588206,4.930086,-9.680348,5.618055,3.465377,-6.011671,1.571546,-3.920599,1.598271,2.469243,7.243784,-7.595736,3.551969,4.977105,9.600820,3.482542,-0.867814,6.398560,-0.866390,-2.492328,6.415266,-7.078087,6.213987,5.869829,1.473553,-0.238318,-6.206367,6.072247,7.128619,-9.326986,-1.554570,-3.547647,-4.413618,7.721388,-2.370268,-9.907686,-4.271051,7.465175,-7.948368,-7.244149,8.154710,-4.207541,-0.418402,1.513844,3.365298,-4.268043,9.977981,-2.750023,-5.522898,-8.782268,1.178602,4.845240,-2.016815,3.304455,3.690988,-5.610036,-3.928387,-7.932640,-9.775518,-3.262010,1.321196,1.037082,-6.106506,-2.960151,3.234706,7.671073,2.458518,3.166005,5.349026,-7.725218,-7.886743,-2.092838,-3.478628,7.911195,-2.849454,-1.094639,-6.534060,3.902834,6.347312,-1.045495,-2.436881,1.888783,-4.741396,5.036734,3.419840,-6.816926,0.357563,6.693037,0.408053,-5.146846,-0.464312,0.265657,0.819788,0.235758,-1.389530,8.721605,-3.493764,-4.108004,5.140741,-2.397570,-3.208639,8.542780,6.249544,7.645722,6.949318,6.003739,-4.967387,2.324272,6.629777,-1.608335,-5.820029,-7.916006,-1.471477,7.714639,2.520132,-4.923466,-5.810200,2.759961,-8.802255,-4.625716,-1.992584,-0.221184,-9.455544,-0.333846,-2.665974,5.046041,1.773382,8.263944,-3.130040,6.104199,4.324153,5.990208,5.394131,0.423219,9.305338,-8.340191,6.246410,-0.954997,-9.357160,8.592561,0.188187,0.215932,5.988995,-0.696789,4.813078,7.833747,-9.018577,-9.646102,6.909545,3.796483,1.675616,-8.488218,-1.687187,-8.003628,-3.186643,-7.546629,-4.168274,-2.886201,-9.316581,7.017481,-6.162782,-1.693255,-4.441439,9.200923,8.206402,-0.276583,-5.255930,0.018970,-6.840616,1.668918,-3.036761,-4.761779,7.712799,-8.722676,-3.292780,7.310878,-4.529516,6.388716,-9.621619,-8.817092,9.590848,-3.133966,2.546682,7.082821,0.331649,-8.259031,-6.366189,-2.369906,5.884693,0.427643,-7.502870,8.475958,8.856344,9.969621,6.083812,1.101537,5.712429,-0.915477,9.421965,-9.413354,-5.977275,-7.239463,2.975983,-6.423576,7.090797,-8.117427,-2.976271,-0.675171,-8.441614,3.845179,4.833380,0.732367,-5.732483,-1.364893,2.592647,-4.889739,2.709570,-8.838518,7.637412,-0.319383,-2.296272,-4.496220,-0.831986,-9.106617,8.119775,-5.835892,-9.524981,1.032217,1.363157,3.407186,-2.836169,-0.957983,-5.911913,-7.054980,3.760711,0.650651,-4.442650,-2.697691,-4.624396,5.362722,-9.675751,4.289714,1.446188,3.642397,-9.156009,2.163950,-1.837202,-3.269341,-9.851437,-3.139281,3.077525,-4.427548,4.753240,-8.231275,5.744207,4.669969,7.232947,7.365560,6.474123,5.365257,1.397729,-1.358803,-7.715170,-7.468709,-4.694352,-0.947412,-1.192338,7.017529,3.817187,-4.016634,2.481804,-2.812517,-7.911407,-8.022313,-1.882547,8.649599,-2.995584,3.901515,-2.725547,-6.712454,-7.004567,4.458950,3.496372,9.633190,-9.893418,2.679902,7.260403,9.839108,5.102465,-2.103185,6.070992,4.661254,9.138780,5.569463,3.204456,-9.572432,-8.352657,-4.174208,-0.735626,5.462260,0.401953,3.100037,-3.841545,-6.441866,-9.603651,-9.453414,-2.862507,6.249915,-8.900241,-4.518663,-9.391855,-1.134431,-3.523880,-2.662162,-6.065880,0.525376,6.589865,-6.685333,7.973172,6.915435,1.753156,-9.776313,-7.514882,-0.458794,-3.952445,-2.417090,3.313004,9.587825,2.450862,4.117549,6.075504,-0.823854,8.731299,9.523583,8.064281,-2.013970,-2.602204,3.396128,-7.003838,7.266476,-6.340768,-7.305131,-5.935926,5.585084,9.696858,9.898316,5.522904,1.116786,7.445890,-2.122067,-3.813328,2.829693,9.386586,9.231286,-0.516250,-0.543214,-6.650844,3.755035,-4.499886,-3.025901,6.341533,3.032470,9.077908,6.215539,8.285965,-7.397108,-8.960947,-0.969618,-2.199369,3.776425,-4.190823,1.922684,-4.410728,-3.800116,1.563482,8.689786,-6.495699,8.663407,9.462514,-1.342252,-2.406540,-9.734355,6.830240,-4.905031,-3.146332,-2.566507,3.770935,0.515541,-5.973374,3.706924,4.366635,-3.900513,1.765810,8.558159,-8.349970,8.593138,-8.770703,2.507403,-4.582958,6.289187,-7.106603,4.446985,9.493150,9.475501,-4.888484,0.047711,4.742476,-0.694359,-9.739917,-1.966097,5.906316,8.052720,1.935623,4.336398,3.906191,1.601894,2.112346,0.304871,7.321782,-2.401770,3.208981,7.028207,-3.153135,4.550031,-2.256979,2.316884,2.374140,4.938607,-1.123163,-5.137875,-3.038662,0.382748,8.052378,-7.254782,2.409499,-0.965375,3.646438,-8.956415,0.276404,-4.241181,2.525128,-1.460668,-5.980464,4.027187,-3.466674,-5.115928,8.625280,-7.183113,8.496294,-6.610659,-5.577933,5.695893,-4.295839,5.189791,-2.880515,5.331975,3.852411,-0.419862,-2.489829,-1.303211,-2.116495,0.518042,-7.845294,-6.906117,-9.739788,9.945200,1.649669,-8.600674,-7.212329,-0.869155,6.381386,-5.006597,0.264741,8.190741,-5.820503,-4.627920,-1.325691,4.001355,-4.339002,-2.412429,-3.783380,6.582511,6.707793,2.103594,7.347786,-3.242918,-5.465388,3.815161,2.197545,6.904304,1.382297,-9.755249,1.790661,-9.334605,7.240712,-1.410071,-1.147495,-9.039190,-8.199959,3.549482,6.685971,-2.194910,-6.540581,3.040842,-1.179314,-4.667089,-8.250442,-9.951338,-3.980885,8.080746,3.377674,3.382753,5.695134,5.580633,2.418170,5.629524,-8.158554,-3.584850,-4.879959,1.510312,-0.467327,-2.325720,-7.896491,-2.177261,6.287732,8.619194,-3.170233,0.831872,-2.915770,8.957845,9.820269,-6.995129,-3.567906,2.935969,-3.587335,-6.561606,-8.573381,6.996267,5.795508,1.701845,-4.870118,1.926576,3.562351,-4.687569,-0.960860,0.181459,0.506707,0.930522,8.899648,-8.600326,0.968223,-1.221995,5.858148,5.413360,-2.994545,7.456215,4.266629,2.815733,6.044455,-3.760379,1.520620,-6.175709,2.523442,-5.270123,-0.623413,-5.810648,9.646237,6.981894,-0.917359,0.934823,7.949926,9.071816,-4.049904,5.013923,9.552219,1.097365,9.474300,0.775095,5.467002,4.757844,-6.604791,-5.912132,9.972857,-5.314567,-5.478228,-1.317956,-4.806805,-6.402354,-1.813024,3.502518,9.766736,-2.659771,-9.626979,5.701424,1.138278,3.199417,-7.866933,-7.899292,0.515654,9.126533,-1.462182,2.266646,-5.076754,6.627664,7.975015,-2.121317,3.180957,8.198307,-0.037934,-1.382611,-3.053913,8.655751,6.231554,-7.342945,-4.142178,-5.776177,3.694974,5.199790,8.450879,-7.403082,0.503654,9.211923,6.444399,-4.845480,0.495455,0.936712,-7.698123,-1.050984,-8.299011,-6.138312,-8.652986,-1.780276,-8.170958,9.141376,-1.549628,-0.608257,-3.332382,3.970733,9.928583,5.240579,-7.783429,-6.132084,6.726074,-6.777744,5.859432,-7.488969,8.892108,6.770529,8.042659,3.979781,-7.135521,0.100085,5.863928,-4.617871,5.561838,6.710137,-0.319172,-6.942066,-4.179162,-0.783625,-0.974876,5.391936,5.913854,3.079182,-9.496630,-4.854181,6.930844,5.924741,-3.137391,0.374738,-3.678734,8.232068,-1.067597,-5.031001,-0.884831,-4.364062,-7.572652,-2.705918,-4.095676,-9.153395,-6.054277,6.522011,-2.345401,-1.303236,-4.500769,-2.245098,-1.509584,8.198379,-2.906689,7.253261,-3.808946,3.690714,-0.125436,-6.777733,2.275465,4.669034,-5.503015,6.087780,3.139884,0.652361,8.404284,-9.395222,-5.756722,-9.311071,-5.409609,9.458989,0.128777,8.524705,6.539502,-7.593379,-5.506083,-2.003346,-1.956776,2.718047,-2.733897,0.322957,6.755576,9.979974,-1.188624,-1.491863,-7.774020,8.038893,-2.696928,0.300388,8.183993,-7.901124,3.816205,-5.903488,2.269992,0.745219,-9.912029,0.937797,4.267696,9.132046,1.252447,-7.755048,-2.436013,4.070043,-6.588573,-2.463118,5.068084,8.343865,1.454566,-4.759240,0.986929,-9.667725,9.491452,0.953759,5.371706,-6.177484,-3.781186,-7.031824,-7.180397,8.177026,-8.875055,-1.637409,0.014744,-0.871291,8.376636,7.501427,-2.678328,5.836614,2.660666,-5.789996,0.685149,8.883758,5.237305,-9.037070,-0.989918,-1.051066,6.885986,-9.530687,-4.496048,-8.880292,4.458713,9.202849,8.755977,0.721040,4.901789,4.533722,-6.442704,9.343653,-6.810496,-7.318519,5.774071,9.245644,2.412500,9.909238,-9.473380,-4.960433,9.042240,-8.898194,-5.715428,-4.838963,2.291658,-9.676981,-5.489842,-3.420911,-6.122454,3.572136,5.074413,-8.498748,-0.424461,9.061437,2.191158,6.041933,4.313428,-7.515839,5.786137,6.314314,-3.368671,2.704474,8.881212,-3.013133,-8.235319,-6.596321,-9.857729,-7.837661,-6.829853,-0.957617,5.854662,9.466034,5.895304,-3.529102,-3.131390,8.145942,-6.034301,4.060025,-6.189816,7.265627,-2.481515,1.252809,-2.192849,1.887996,2.212743,3.218385,3.560539,3.773789,-3.526710,-6.731713,1.317470,6.799339,-6.828822,-6.421935,-2.820866,3.068600,0.399999,-3.537458,-7.779094,-7.316359,1.021481,3.283669,-5.259872,7.545431,-5.724791,5.743247,3.107876,2.227794,-8.958877,6.671950,0.550861,4.717755,5.793601,6.285003,7.275797], dtype = "float32")#candidate|8956|(1470,)|const|float32
call_8954 = relay.TupleGetItem(func_8851_call(relay.reshape(bop_8946.astype('bool'), [28, 48]), relay.reshape(const_8955.astype('float32'), [80,]), relay.reshape(const_8956.astype('float32'), [1, 1470]), ), 3)
call_8957 = relay.TupleGetItem(func_8855_call(relay.reshape(bop_8946.astype('bool'), [28, 48]), relay.reshape(const_8955.astype('float32'), [80,]), relay.reshape(const_8956.astype('float32'), [1, 1470]), ), 3)
output = relay.Tuple([bop_8946,call_8954,const_8955,const_8956,])
output2 = relay.Tuple([bop_8949,call_8957,const_8955,const_8956,])
func_8958 = relay.Function([], output)
mod['func_8958'] = func_8958
mod = relay.transform.InferType()(mod)
mutated_mod['func_8958'] = func_8958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8958_call = mutated_mod.get_global_var('func_8958')
call_8959 = func_8958_call()
output = call_8959
func_8960 = relay.Function([], output)
mutated_mod['func_8960'] = func_8960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8627_call = mod.get_global_var('func_8627')
func_8629_call = mutated_mod.get_global_var('func_8629')
call_8969 = relay.TupleGetItem(func_8627_call(), 0)
call_8970 = relay.TupleGetItem(func_8629_call(), 0)
func_7608_call = mod.get_global_var('func_7608')
func_7609_call = mutated_mod.get_global_var('func_7609')
call_8981 = func_7608_call()
call_8982 = func_7608_call()
output = relay.Tuple([call_8969,call_8981,])
output2 = relay.Tuple([call_8970,call_8982,])
func_8987 = relay.Function([], output)
mod['func_8987'] = func_8987
mod = relay.transform.InferType()(mod)
output = func_8987()
func_8988 = relay.Function([], output)
mutated_mod['func_8988'] = func_8988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_9095 = func_7874_call()
call_9096 = func_7874_call()
func_6545_call = mod.get_global_var('func_6545')
func_6547_call = mutated_mod.get_global_var('func_6547')
call_9120 = func_6545_call()
call_9121 = func_6545_call()
output = relay.Tuple([call_9095,call_9120,])
output2 = relay.Tuple([call_9096,call_9121,])
func_9126 = relay.Function([], output)
mod['func_9126'] = func_9126
mod = relay.transform.InferType()(mod)
mutated_mod['func_9126'] = func_9126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9126_call = mutated_mod.get_global_var('func_9126')
call_9127 = func_9126_call()
output = call_9127
func_9128 = relay.Function([], output)
mutated_mod['func_9128'] = func_9128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6508_call = mod.get_global_var('func_6508')
func_6509_call = mutated_mod.get_global_var('func_6509')
call_9171 = relay.TupleGetItem(func_6508_call(), 0)
call_9172 = relay.TupleGetItem(func_6509_call(), 0)
output = call_9171
output2 = call_9172
func_9173 = relay.Function([], output)
mod['func_9173'] = func_9173
mod = relay.transform.InferType()(mod)
output = func_9173()
func_9174 = relay.Function([], output)
mutated_mod['func_9174'] = func_9174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8377_call = mod.get_global_var('func_8377')
func_8378_call = mutated_mod.get_global_var('func_8378')
call_9211 = relay.TupleGetItem(func_8377_call(), 0)
call_9212 = relay.TupleGetItem(func_8378_call(), 0)
uop_9222 = relay.sinh(call_9211.astype('float64')) # shape=(28, 48)
uop_9224 = relay.sinh(call_9212.astype('float64')) # shape=(28, 48)
func_8958_call = mod.get_global_var('func_8958')
func_8960_call = mutated_mod.get_global_var('func_8960')
call_9247 = relay.TupleGetItem(func_8958_call(), 1)
call_9248 = relay.TupleGetItem(func_8960_call(), 1)
func_7102_call = mod.get_global_var('func_7102')
func_7104_call = mutated_mod.get_global_var('func_7104')
call_9249 = func_7102_call()
call_9250 = func_7102_call()
func_7360_call = mod.get_global_var('func_7360')
func_7362_call = mutated_mod.get_global_var('func_7362')
call_9258 = relay.TupleGetItem(func_7360_call(), 1)
call_9259 = relay.TupleGetItem(func_7362_call(), 1)
uop_9265 = relay.sin(uop_9222.astype('float32')) # shape=(28, 48)
uop_9267 = relay.sin(uop_9224.astype('float32')) # shape=(28, 48)
func_6597_call = mod.get_global_var('func_6597')
func_6601_call = mutated_mod.get_global_var('func_6601')
const_9269 = relay.const([-6.482530,0.472519,1.895600,0.674596,4.717939,-9.218238,-9.371471,-0.197313,8.353684,-9.919088,-3.154172,3.854262,-8.341204,-2.512181,-9.693235,-0.225578,-6.965867,2.559776,5.843793,9.696033,9.935790,0.447347,-3.056224,-6.643821,3.743332,-4.870724,-7.434530,-7.780889,-0.679040,-4.634194,1.786522,-3.613461,-9.324234,0.317560,-1.289712,-9.092954,-6.898233,1.974622,8.372796,-5.966127,-3.846697,-6.033870,-7.699340,7.865969,-7.374774,3.712565,-4.138024,5.907839,-3.963696,-5.936441,4.086924,-1.723094,2.337145,7.455041,4.055021,9.472906,-5.356442,-8.042136,-4.120244,-5.361081,8.778651,-1.028469,7.741575,-5.406187,-3.401960,-2.461118,-5.678490,-6.340414,-9.126118,-5.180179,0.904222,6.236674,-4.949571,2.727946,0.266541,9.478890,4.698740,-4.342469,3.604247,-8.439910,4.526749,2.682060,-1.967780,9.871594,7.024733,-2.378126,4.904646,1.286171,-9.234089,-6.423981,-2.703994,-4.511616,2.033056,-8.138918,-9.387056,2.155700,3.323133,3.248058,-2.079401,-3.371220,-5.686788,-0.771590,-0.297878,8.508354,-3.031863,-6.447726,5.722433,9.275252,7.803939,8.206248,-5.932551,3.381171,-0.078405,8.336066,-6.596876,-6.639542,7.626021,-6.850969,-8.450057,-0.348330,-8.244185,5.519827,4.688344,-1.395610,-8.232456,-2.814223,-6.281985,-8.363680,-9.253270,4.098187,9.601770,-2.715467,0.571223,-2.329321,-2.411596,-5.987845,0.818392,1.566935,-0.264547,4.378972,7.311962,-8.565683,-5.033075,-7.539371,-5.536415,4.623060,-5.781237,-5.130643,-8.699066,2.813234,8.265339,2.254518,-2.632884,-9.198968,0.595450,0.003117,8.557956,-9.770568,8.215157,1.404632,1.590360,5.830718,-6.283011,2.202106,6.950886,7.722777,-1.498313,1.210205,7.786979,-5.634306,-3.552411,-6.797403,0.181934,6.850272,3.702826,-6.795547,7.796126,-4.079517,-7.091233,-5.993053,7.101881,-9.171270,2.150163,-6.896936,1.885506,1.985017,-5.232839,-9.381863,-1.603548,-9.433161,-6.229034,-4.988245,8.093195,3.582045,-8.658616,1.475120,9.948205,-3.039504,0.024478,-7.165099,0.258167,-5.596370,5.871953,2.887199,-2.421978,4.360494,-6.146441,-4.625967,1.392191,7.149365,-4.434790,6.839642,9.731645,-6.769518,-9.240576,5.591423,-3.026797,7.922886,-8.588341,8.033637,3.752380,0.376209,8.111318,4.170941,6.783695,-3.183907,0.788379,-7.198387,2.174615,0.003515,3.171521,2.331418,6.496121,1.823644,2.000828,-2.299120,0.298953,9.686270,-6.346263,3.864930,6.264881,3.270884,9.254101,3.575261,-3.736534,-7.414194,-3.030824,6.582611,5.874529,7.008262,2.812490,0.137623,-6.832073,1.057718,6.123859,-0.299185,8.436250,3.169852,5.394278,5.379872,7.411762,4.843305,-7.540607,8.119833,2.591582,-5.183989,6.161252,-9.731556,-1.421470,-2.638416,-6.238076,7.468239,-2.419311,2.940910,7.848138,1.264001,-9.709568,-7.851668,3.196171,-2.153137,7.633785,6.190221,-3.287359,-8.549020,-2.536546,-8.357572,6.990263,-7.795546,-5.328946,-8.102450,-1.554926,5.121448,-3.328675,3.598117,5.243694,6.816883,5.882737,2.097933,-3.609205,-3.173380,-5.926499,7.909832,-1.129345,3.681050,4.434683,8.594814,7.914172,4.623794,-6.187003,9.384387,-3.015171,-0.597925,-8.270119,-3.527462,3.101403,0.325423,7.860889,-0.790915,-3.769359,8.469363,7.238261,6.656945,2.397599,-5.347520,-2.700373,6.186992,-3.568979,-2.753131,-2.747218,3.803046,9.850097,3.357929,-7.950931,4.621837,-8.071329,-0.712283,2.033525,-8.638573,-0.507752,-1.068766,0.999320,-7.711966,-2.436079,-5.827739,5.820377,-2.971283,-8.531447,2.036909,4.736561,6.136591,4.783499,5.418823,7.197967,9.829848,1.458202,-3.457805,-7.834635,-6.211866,9.960605,3.829050,5.156770,-9.048008,5.153729,-6.740430,-7.106886,-5.268479,8.803417,-8.076148,-0.299732,7.190802,9.904595,-8.943054,-9.846964,-2.208943,3.875663,-5.904569,-4.535151,-0.079743,-7.674778,-1.688807,-2.012150,5.942195,6.858500,-2.516674,3.448060,1.046868,-3.492001,-9.850510,-4.664913,-4.040566,-4.927871,-6.448086,0.913975,4.481517,9.266739,-3.936978,-1.856603,-5.788354,5.211617,6.587233,-5.751873,-0.222049,-1.141300,9.318543,2.909280,-8.657866,-8.999786,-2.762664,6.668414,6.689978,-3.763128,-1.970316,5.077075,-6.348788,-0.146791,-6.296676,-5.557752,7.747305,9.992343,9.449943,-3.538955,9.099186,2.691794,2.886198,5.898973,5.200852,-2.799233,-7.776351,-1.979375,3.160735,5.528695,1.634918,-9.635529,-8.574228,3.390068,-1.940924,-3.232458,-6.359327,-7.403019,-3.576769,2.195577,8.505869,-3.396092,9.447559,-1.432490,8.923318,-2.426162,3.148032,9.712873,2.804698,1.278830,-6.655368,4.292504,6.830636,-8.192771,9.024273,-6.156019,-6.406590,-8.817549,6.842152,-6.494885,-1.197038,-8.317516,4.229578,-3.459467,-1.569760,-9.906927,4.587496,-8.578317,0.775260,-3.848207,-5.729450,4.367662,0.852122,-4.313207,-4.725323,5.774419,-2.365054,-4.992786,3.625507,-5.824549,9.004279,7.748873,-4.990423,9.359090,-8.520850,-9.028803,-6.241946,0.576896,2.796625,1.259465,-7.620824,2.028759,-8.903354,-5.089370,-1.555897,1.937748,-5.412532,-6.344289,-4.478754,-6.545315,4.982119,9.691462,4.121557,-2.344674,9.337560,-0.276077,-9.870345,-2.847366,-9.372553,5.303204,1.865220,-0.859861,2.169447,-8.602519,-3.074718,-9.323907,6.781579,-7.612609,1.139376,5.979151,-8.587171,-4.433995,9.592512,6.139874,-9.093812,-3.996448,2.059185,6.604121,1.449670,8.404003,-2.431103,-0.922530,3.756659,-6.738044,5.258581,1.394800,-4.603542,-8.996344,-5.606783,7.320092,-5.325801,-2.920539,-0.118373,-0.686272,9.585892,5.238061,-0.556460,1.742001,-9.622794,-7.613708,-5.272246,6.746123,5.138073,-4.911797,4.995290,-7.433003,-5.016661,-3.845915,-1.834152,-2.127111,-5.566970,-2.680576,8.739822,-5.947665,0.990038,8.988614,1.834101,-5.534215,8.178786,-8.343414,-4.428068,-8.900244,-5.139466,6.167339,-2.597243,-3.295606,-9.685487,6.961343,2.781331,8.849252,-9.837773,-3.930194,-1.166737,-2.215056,0.031575,-2.099627,-9.549414,-5.088722,0.931988,6.199845,-9.187045,-2.326664,-7.260574,-2.622704,-1.979986,7.610206,7.707883,-9.527955,-1.225596,1.345773,8.770131,-7.338998,-5.596025,-3.259014,-9.029125,7.714751,-7.526462,1.973521,2.103799,-7.616166,-9.695769,-6.584094,6.601825,4.445456,-5.966778,6.735453,-6.374304,7.956912,1.315589,6.613895,2.811326,-5.438163,-2.635213,0.363782,0.898948,1.487523,9.599929,4.690258,-3.022674,-8.030204,9.318993,0.847336,9.853602,5.842855,-1.965865,4.698514,2.484642,9.503357,4.129323,-8.922225,-8.802188,-1.201957,7.421241,-3.452157,-5.689934,-5.929681,5.674821,-6.785389,-6.152247,1.597427,-3.923614,9.072876,-6.024937,9.403671,8.644714,-8.066797,-0.181668,8.210364,4.202675,3.498021,-1.034559,8.477714,1.569142,9.288463,2.366400,5.869367,4.032907,-9.305799,6.284464,3.444167,3.495541,1.335577,2.487688,6.033680,-9.253877,-9.614910,1.686470,-4.193403,5.742194,-7.277481,-2.251845,-5.968860,-5.265811,9.110087,4.795732,-6.880734,4.706376,-9.951942,-1.718654,4.734823,-6.550239,-7.766703,8.413228,8.415258,-0.414080,-1.395956,1.145724,-1.710855,4.377988,7.719664,-7.164818,3.417727,6.596782,-1.523148,3.000999,9.932160,-4.520576,1.321059,-4.533605,-5.891629,2.489682,-4.931293,-1.477053,-4.443001,-2.345801,-2.979136,-3.014566,-2.292286,7.883722,0.222411,-8.001575,-4.305307,-0.730732,1.667737,-2.942844,5.447291,-8.916855,-8.147251,-9.466670,-4.366201,7.303386,-6.579702,-5.710756,3.103841,3.018148,-9.455724,4.720479,-3.447330,7.205331,6.602169,-7.273341,7.191462,-7.447163,1.413850,-3.725392,2.244628,-6.546365,4.984470,3.284233,-5.880807,-0.627288,-2.089875,2.113957,1.478291,-2.457230,7.758622,-2.744040,5.561722,-3.222886,1.239471,-2.964137,-1.039719,-0.260414,1.718669,2.549318,8.117626,9.155709,7.994549,-6.398146,9.163964,2.505626,5.645074,6.972082,-7.409968,2.101380,-6.188196,9.785149,-3.255191,0.286263,8.045682,4.017357,-6.222638,-1.091121,-0.484596,-7.630658,-3.365130,-9.596476,8.066122,-3.491139,5.740349,-6.074689,-9.705349,1.982470,4.524334,-0.765351,8.726067,9.370015,-1.644515,3.931025,0.216789,-1.587215,-0.435984,6.129218,-0.109134,0.875581,-1.471608,-7.489788,5.120474,3.738285,-6.196527,9.625516,-6.285359,9.617232,2.186618,7.432143,-0.175131,-6.135154,-9.997281,5.683259,6.109843,-5.091015,-5.447576,-3.251103,-0.212377,-0.073814,-5.408644,-1.756991,6.666789,5.100971,1.457014,2.854983,4.064710,-4.874841,7.086741,-4.089451,-5.246608,-4.594830,8.376385,8.113892,3.766176,-0.218760,7.983276,-9.623742,-3.446587,4.470089,-1.005887,-5.292003,-7.927040,4.422884,-2.000937,9.028706,-8.154671,9.129435,-8.324906,-8.366098,-9.571442,2.196454,8.032605,-9.212531,-6.801820,7.096960,-4.565322,-9.100215,-3.299503,5.210449,5.686623,-3.665299,-0.601364,-6.279922,-2.186597,-9.867362,8.859186,-9.438002,8.246106,7.984414,6.823633,-7.548029,-8.118377,-5.945995,-8.269871,1.396950,-1.338406,-4.420438,8.403662,-7.109083,6.359657,-6.344052,-9.459382,0.218998,-9.676292,9.447588,-2.288981,5.203860,-7.662362,0.222538,9.695274,9.694843,-5.900203,6.580953,-6.382211,1.972951,-4.762609,-7.483529,5.295007,1.246492,-2.007562,5.071992,-0.447821,3.967329,-3.262308,-5.721777,6.924880,-9.934067,9.191772,8.571782,3.175674,2.532017,3.743021,-0.878524,4.394784,-5.196986,9.564280,-0.713413,-6.827065,-9.009943,3.088455,8.042791,-8.005390,-2.643591,5.166164,3.155476,8.752021,-8.876306,5.478908,9.876199,-7.986393,-5.233527,1.974128,-2.222574,5.328544,-1.244030,5.576826,2.249249,6.327022,0.297118,-7.304170,5.283196,2.167395,-1.016511,8.108160,4.450600,8.688625,3.491979,4.197664,-6.619349,-3.335669,9.415258,-5.387697,-7.468607,-4.080031,-2.219305,-5.133372,-1.888671,-6.174663,-5.828906,-8.926295,2.835762,-0.991253,-6.189533,-9.430714,-4.879177,-8.885663,-9.979764,-2.303282,-2.302489,-6.336878,5.300647,2.948349,-5.245795,-4.696875,7.561119,7.736775,-1.890608,8.591057,2.338286,-2.524083,-8.929568,9.852937,3.756050,7.085763,-0.505320,1.958392,3.380338,-3.181683,-7.786538,-8.132481,7.345642,-0.185188,2.948551,6.235027,-8.202677,-7.255365,-2.254998,7.515902,-7.526124,0.136237,9.328183,-8.868019,2.918109,-2.396563,-4.931641,6.462734,-0.263369,6.585064,6.690075,-9.377068,-2.672309,0.743703,-8.210473,3.982346,9.225299,-1.997489,2.685951,8.102965,4.711361,-2.283914,0.023048,4.964612,5.729462,7.508188,5.484361,-1.958699,0.239701,-6.372473,6.227533,-8.958353,1.584986,7.976434,9.524078,9.278737,-9.435386,-5.986261,-3.033481,-0.672096,4.180370,-2.307151,9.608667,-3.409691,-0.279678,3.387329,-4.999130,6.543752,-1.519317,-0.309192,5.881465,-1.459465,9.253531,5.316884,-4.664720,-2.636198,-0.698579,1.296859,8.359137,-4.160762,-0.124453,8.633818,4.516275,-5.739876,6.047192,9.932283,3.552336,4.137901,1.036313,-4.098089,-0.306621,6.543813,7.392052,-2.882508,-6.280887,8.119006,-3.547231,-0.454127,9.399267,2.858932,9.561260,2.865643,-2.393699,-4.329604,-0.905686,-7.816361,2.185314,8.278261,-3.393605,6.465892,-3.815008,6.003992,-7.370930,-0.059994,1.874864,-1.134921,-2.154791,0.589571,-4.306173,-2.772979,-1.279793,3.607065,-1.595445,-3.055823,3.459541,-6.369973,-2.379876,-7.878295,5.223503,-5.336868,5.906485,4.328651,2.233599,-7.310010,-2.505662,-6.545238,7.068448,-8.976873,-1.207052,-8.629039,3.689233,8.983485,3.927547,-0.725284,-4.022157,7.629911,3.447579,4.584757,5.741011,8.582797,9.980445,-6.523457,7.356722,-0.716614,9.581876,6.522859,3.545841,1.463245,7.730752,3.509416,-2.084249,2.243252,-0.636806,-6.568308,-0.645106,4.265682,3.182646,8.657563,5.137529,-6.160394,-7.768581,9.689942,-4.303726,-6.943467,-3.464764,5.520465,-5.498886,-1.203006,-9.864592,-9.335696,-3.685593,-3.235690,8.323017,8.475047,9.457284,-1.511779,3.941788,-8.667726,-0.648179,7.772885,-0.835263,6.324057,7.878822,2.559174,3.753413,3.804567,-7.261607,1.737345,9.616865,-5.220081,4.477341,-3.751402,-0.155870,-5.156355,-3.647910,7.229181,6.982221,3.531978,-0.239205,-9.423534,7.047146,-1.017285,3.487243,8.968704,-6.708165,6.690873,-2.518829,-6.873517,-6.709472,0.627740,9.140389,-2.826509,-3.587347,1.729025,-0.672740,-7.732623,5.251561,3.491842,-3.706956,4.558927,-9.641045,-8.570458,4.733213,6.802976,-9.311095,-3.923145,8.890601,-7.446489,-0.655995,6.849309,8.276110,-3.668095,-6.114489,5.342302,0.932596,6.656874,4.649358,-4.310520,-6.186515,8.575904,8.446645,-3.448499,-7.389905,-7.430438,5.634834,5.371539,7.269787,0.376092,-7.232593,-9.901183,-4.953683,8.612618,-6.377109,-1.796466,-7.130724,3.906275,4.746369,-6.110934,-8.411667,-4.465626,-7.971905,-8.966721,-9.647221,0.353094,-5.428777,-7.635210,3.895782,-0.391942,0.435731,9.656547,-2.624099,2.128320,-4.236705,7.211012,-9.823649,-5.226612,-9.268523,-2.548798,9.655698,2.478073,-4.139165,-9.785088,3.651622,0.343226,9.756203], dtype = "float32")#candidate|9269|(1280,)|const|float32
call_9268 = relay.TupleGetItem(func_6597_call(relay.reshape(const_9269.astype('float32'), [1280,]), relay.reshape(call_9247.astype('int8'), [4, 11, 4]), ), 3)
call_9270 = relay.TupleGetItem(func_6601_call(relay.reshape(const_9269.astype('float32'), [1280,]), relay.reshape(call_9247.astype('int8'), [4, 11, 4]), ), 3)
output = relay.Tuple([call_9247,call_9249,call_9258,uop_9265,call_9268,const_9269,])
output2 = relay.Tuple([call_9248,call_9250,call_9259,uop_9267,call_9270,const_9269,])
func_9292 = relay.Function([], output)
mod['func_9292'] = func_9292
mod = relay.transform.InferType()(mod)
mutated_mod['func_9292'] = func_9292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9292_call = mutated_mod.get_global_var('func_9292')
call_9293 = func_9292_call()
output = call_9293
func_9294 = relay.Function([], output)
mutated_mod['func_9294'] = func_9294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7102_call = mod.get_global_var('func_7102')
func_7104_call = mutated_mod.get_global_var('func_7104')
call_9299 = func_7102_call()
call_9300 = func_7102_call()
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
var_9325 = relay.var("var_9325", dtype = "int16", shape = (2,))#candidate|9325|(2,)|var|int16
var_9326 = relay.var("var_9326", dtype = "int16", shape = (168,))#candidate|9326|(168,)|var|int16
const_9327 = relay.const([-5.738458,1.695461,5.374808,-7.703803,0.019616,8.927567,-3.486296,-6.570496,-2.300443,9.541467,7.299014,-8.513751,-8.111301,-3.733330,8.775891,1.803716,4.018705,5.761376,-5.999683,1.146620,-5.800568,-5.872433,-6.531923,-8.567980,-3.700666,8.174143,2.552892,6.538472,-1.624289,-8.118742,6.856688,4.634169,-8.648295,0.488374,-8.544423,-3.082575,2.756205,9.490185,-1.448272,-3.270573,-9.997581,-7.988880,2.313069,8.998574,0.259427,7.955775,-4.654598,7.849607,5.046681,5.265671,1.956792,7.578632,-0.399781,-4.079020,-9.819502,3.210428,5.792795,6.069850,1.722779,-8.917684,-8.058480,9.554648,-4.723000,3.912396,1.225236,6.943896,-5.918047,7.957788,0.413825,1.064200,-4.162991,-1.328883,-4.313261,-7.824707,5.546949,-4.796871,-4.098324,-1.181734,-2.583802,1.363692,-1.532443,1.343905,8.895143,2.612074,-9.941191,-0.251444,9.644306,-7.638445,-4.151461,7.255893,0.647447,0.699556,4.973522,-4.856869,4.928639,7.525533,-0.837441,7.782148,2.579626,7.161167,8.623102,-8.233168,-5.965179,0.873511,7.208013,-9.485046,-0.503261,-9.086965,9.478440,-5.224298,-0.329516,-8.642465,-6.136209,-5.068334,-4.740908,1.774053,-0.448360,-7.154377,0.232884,4.725482,-9.612516,2.756431,-1.724846,-0.930347,4.207216,-3.846808,-2.477618,-1.137344,-3.743379,-4.793002,-4.767455,3.132722,8.133580,-8.080200,2.534587,1.407987,5.096628,-0.082552,0.075702,-5.063350,0.897346,-8.048913,2.438210,-1.477155,-2.387212,1.343183,6.273214,0.775657,-1.279326,9.244848,4.214504,-4.789210,0.205840,-3.866915,8.448648,6.044251,-1.750041,4.993489,8.701742,3.406651,-5.397553,-5.192790,5.117907,0.700732,4.285740,8.178938,1.581571,-7.277044,3.547333,4.383381,8.818248,8.159188,4.241457,7.442908,9.431634,-2.855121,0.350650,0.139141,-0.995109,6.606009,0.028601,-4.946808,-4.333268,4.867978,-2.917753,-6.234195,-0.332658,5.984795,-8.858359,-8.382131,5.470594,-9.532277,8.765076,-6.672645,-4.765481,-9.757608,-6.850060,-3.117325,3.840261,-8.627376,9.017050,6.830592,4.845131,7.183066,3.820958,2.350981,-3.326375,-1.151700,1.283176,6.977769,-2.399074,3.770003,-6.192638,8.493265,0.422490,2.781355,-9.123273,-9.545687,3.553763,-8.278818,8.487406,-1.475661,6.245422,-3.253745,2.021443,-4.277636,1.561309,-3.406178,1.866179,8.194412,-5.130407,4.384713,6.358895,-1.185351,2.195929,3.069491,-4.451019,-3.712640,-9.549487,-6.555663,-4.240313,0.695598,-2.042384,-4.157617,8.461426,-2.023818,-0.740648,8.286198,-4.323817,8.298544,-4.922132,-0.257981,-8.373712,-7.172876,7.666527,-0.234377,1.764557,7.546603,9.915024,4.420913,2.517923,-6.338168,-4.579805,0.138532,5.556255,-9.060913,-0.477949,-5.329889,-8.166673,1.649525,0.323760,5.971877,-9.766964,-4.052743,-1.303538,-6.200948,-9.524939,-5.287402,-8.335424,1.747267,-3.976317,3.002133,-0.380989,3.344491,-7.619273,0.002297], dtype = "float64")#candidate|9327|(286,)|const|float64
call_9324 = relay.TupleGetItem(func_2306_call(relay.reshape(var_9325.astype('int16'), [2, 1, 1]), relay.reshape(var_9326.astype('int16'), [2, 6, 14]), relay.reshape(const_9327.astype('float64'), [13, 22]), ), 0)
call_9328 = relay.TupleGetItem(func_2310_call(relay.reshape(var_9325.astype('int16'), [2, 1, 1]), relay.reshape(var_9326.astype('int16'), [2, 6, 14]), relay.reshape(const_9327.astype('float64'), [13, 22]), ), 0)
func_1349_call = mod.get_global_var('func_1349')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_9340 = relay.TupleGetItem(func_1349_call(relay.reshape(call_9299.astype('int32'), [14, 8, 12])), 1)
call_9341 = relay.TupleGetItem(func_1352_call(relay.reshape(call_9299.astype('int32'), [14, 8, 12])), 1)
uop_9345 = relay.cosh(call_9340.astype('float64')) # shape=(20, 4)
uop_9347 = relay.cosh(call_9341.astype('float64')) # shape=(20, 4)
func_5351_call = mod.get_global_var('func_5351')
func_5355_call = mutated_mod.get_global_var('func_5355')
var_9360 = relay.var("var_9360", dtype = "float32", shape = (105, 15))#candidate|9360|(105, 15)|var|float32
const_9361 = relay.const([-7.603487,-9.062349,8.213100,8.390292,-5.165355,-4.456602,-5.724645,0.875175,-3.936647,2.820884,3.639589,9.157033,6.906777,-2.570799,-5.474675,1.346137,-0.843263,-0.889036,4.458107,3.557694,-4.236839,-9.721847,-4.939694,0.824978,-2.603210,1.485970,9.490149,3.989904,-5.488338,3.304507,-9.418722,-9.955601,-4.889771,-3.297730,-5.424221,-3.763863,5.711270,-7.016037,-1.738308,6.894371,-0.447821,-6.409869,3.739760,8.833481,2.141710,-5.189271,8.075871,8.518232,7.208944,-3.949313,1.993398,-3.519433,5.796067,-2.083111,0.207210,-9.321822,-2.681513,5.540326,-2.470761,-9.022149,6.133420,8.968242,2.962337,2.072328,7.059379,-0.190324,-0.159665,1.345818,5.656644,5.714677,4.130687,2.826997,-9.205743,-2.227419,3.208691,-2.025391,4.627355,0.409864,-1.062443,-4.614605,-1.395199,-7.429947,9.844470,0.038981,-2.886251,4.269092,-5.552569,2.806245,9.834481,-2.250813,-2.895148,-5.425811,-5.922843,-3.237426,-7.484482,-3.542771,-0.825071,7.374401,9.891800,-7.663987,1.873947,4.092378,-8.420270,-3.852885,-7.898447,-9.347394,5.725546,6.660660,9.961417,9.560812,-8.865889,-1.100018,-0.402856,-8.051491,-4.952607,9.935389,7.153865,-0.865922,-8.242163,3.705503,1.467450,9.970101,-0.070342,-6.178307,5.524250,7.962154,-5.110663,-2.012849,5.518740,-1.493080,0.217307,8.153688,-7.257640,5.703510,-4.815563,-9.763443,-3.024048,8.836459,-0.328420,-2.898585,1.249804,4.499868,-6.481587,-5.328772,-2.397998,1.210913,8.067591,-2.090309,-6.440517,-4.445618,3.917209,-9.255344,-2.672091,-0.167020,-6.658371,-0.308211,8.797198,6.809674,0.764327,8.506295,-7.843697,-0.393792,-6.247355,7.169361,-4.103292,7.488941,-1.190907,4.750835,0.742511,6.565196,7.093118,8.526165,0.639319,-2.421805,8.744319,3.356661,-1.905393,1.589178,-9.809266,-0.676350,-5.290515,-9.151772,9.957689,4.444973,-7.877492,-5.642518,3.696521,-6.845286,-5.301096,4.160809,-3.175831,8.253924,-7.689539,3.554256,-6.929440,5.374467,-8.737537,6.213360,-1.344325,-9.779847,-2.561202,-9.549357,2.353482,-4.219734,8.916859,9.271355,-9.801054,-0.542717,2.129509,-3.777813,9.651329,-5.934955,2.787253,-4.227172,-4.398981,-9.810308,1.466898,-6.786659,6.481825,5.284059,7.750230,1.493119,1.211717,-3.174205,2.361340,-8.117296,7.386005,-5.224320,2.480426,-1.641449,-1.861160,-4.624384,0.145013,-5.401944,0.554453,9.134176,-1.322018,6.598683,-3.554971,-3.969189,-1.683811,9.686546,2.990810,-5.730770,-1.456180,-3.175372,-2.232273,-6.787864,-4.580347,-2.401710,-7.796771,-1.153567,-9.754071,0.702791,3.432358,9.314639,-6.282082,0.125454,-8.992856,-0.532054,-1.352497,8.196873,9.867543,-2.446917,-8.579767,-6.267982,-7.400435,4.643895,-2.341021,-2.586144,-4.861845,5.688764,-4.543455,-7.789817,-4.750365,0.312590,-1.101716,8.921851,-6.075421,6.500950,6.141599,-6.351604,-1.288889,-7.330291,-9.538143,-8.917405,-3.298419,6.495143,2.879125,-8.109681,4.507231,-8.677313,-1.195277,5.614369,-0.009945,-8.514130,-4.196984,3.360334,-7.101535,7.660286,-4.013350,-8.304307,3.187243,4.306935,4.616267,7.498244,7.982159,-2.908351,2.712773,1.425688,-3.167884,7.365289,-6.087175,7.891076,8.990400,5.303577,4.392903,-2.885443,8.393626,1.875364,7.739910,8.574057,-3.051191,8.500860,-7.924228,7.561496,-0.113298,4.136769,-9.322659,0.357539,-1.073832,4.699546,-1.651839,-1.255228,-8.318569,3.759203,-1.864354,-6.734311,-3.571848,7.182095,-4.408752,-9.113879,4.207882,1.164301,-4.278303,2.339695,3.387458,-7.454944,4.313384,-6.166375,-6.681755,6.152920,-9.072708,-4.168633,2.920030,7.485367,-3.330915,-9.842522,-6.590442,4.908083,7.021347,5.306348,-0.836693,-8.763454,-5.554809,4.290430,-7.271126,-9.680201,-3.174396,-5.763623,-1.956829,-1.524408,1.742635,-6.092750,-9.119201,-1.762718,9.934381,5.072797,-3.723058,3.709869,-7.356843,6.371669,4.159190,9.452445,-7.979704,-4.013700,-9.631238,-2.306762,8.156803,5.954471,-3.986717,7.707995,7.987569,9.479524,8.309435,-1.460220,7.980048,-0.468954,2.800394,3.866996,0.956751,-9.986915,-2.053008,3.721339,-9.565213,1.095229,2.026927,-8.357671,5.312732,-6.788348,-8.498109,-7.187961,-1.132434,-1.397987,4.428546,-0.869865,5.814005,-3.322487,8.502135,-6.242614,-3.139394,-8.878518,-8.925840,-7.004925,1.229538,-2.802743,8.215973,5.500192,-0.146157,-4.400381,2.837150,-9.998767,0.803857,-4.610265,7.910171,-2.143975,6.316249,5.418893,4.184977,1.981018,-6.391590,-6.818931,9.415965,5.163724,-8.254516,3.917644,-8.322853,-8.762878,-7.787911,-4.343069,1.041160,9.248691,-4.821540,2.872452,-7.324249,-8.922712,-3.468613,-9.120719,-6.230974,0.531943,2.155392,6.300384,2.502972,-1.552063,-1.871288,8.125396,5.138479,-2.060746,8.660003,-4.482776,8.926264,-7.945680,8.738195,4.833857,-9.248845,-7.930921,0.135540,-1.418383,-6.933298,-9.632138,7.426215,-1.624595,-5.172267,-9.689122,-0.432270,1.777138,1.991063,-9.320851,-7.812600,7.353996,-6.309340,1.020085,6.655129,-5.899530,-6.470308,-7.735568,-0.979288,-3.814331,-8.552160,-8.388302,8.383506,-9.250992,3.068819,-7.969866,-8.511104,1.487368,9.893475,-4.247103,-0.465647,-6.683452,7.243355,-8.182125,-0.315993,-3.380274,-3.012395,3.690577,-1.001147,-5.056568,-8.435563,9.268639,-6.964931,-3.857848,4.592467,-1.778389,9.060709,-7.362321,-8.632246,9.666167,-1.407575,5.849990,-6.106617,-7.631635,-3.228775,4.684338,7.906910,0.382677,6.025771,-0.692132,-6.729962,-7.670908,8.659183,-8.369915,2.076121,-9.190790,5.888139,-7.781240,7.924672,-9.961452,-7.861675,-6.640297,-3.114458,7.286723,3.713193,7.062091,4.785655,-4.150351,-9.734022,-6.835724,-5.360668,7.171311,-1.587315,2.765002,9.416301,7.044610,2.858442,8.432629,6.125599,9.444861,-2.974675,-0.829380,-4.333140,6.951209,0.119211,8.353247,-3.679999,4.130147,-2.468961,-1.712912,-4.794559,2.162197,-1.295806,0.513187,-7.670858,-0.693430,2.668778,-7.405243,0.477176,8.717746,4.990760,-4.281769,0.971028,-2.520469,5.795327,4.823217,-0.946263,1.978938,-3.689076,-9.290959,-7.918110,4.164263,5.863934,5.048586,3.402814,2.279135,3.678762,6.665502,3.312372,3.701525,-8.417552,-7.636877,7.377189,2.492319,-9.399250,-2.235061,5.639932,9.143916,7.129648,4.071978,1.646166,2.632495,5.905756,4.583365,-0.150916,1.839404,-8.341768,4.087753,9.717914,3.777628,-2.762042,-0.888361,8.185769,-5.778789,1.478697,-9.368042,-4.631640,0.697824,-9.489915,-7.956678,3.281912,1.440462,7.108651,-2.444968,-1.235412,0.223060,4.564863,-3.546286,3.647210,-1.556928,-1.555354,4.457849,-8.730634,-5.435416,7.185173,-1.943303,-5.966708,-3.151840,-1.647369,9.935834,-5.567421,-3.554766,-0.728892,9.117950,2.732250,-1.533082,-9.874312,4.251919,8.786917,2.850508,-1.606484,8.470561,7.237115,8.019713,-1.329508,-1.732864,3.589708,7.492163,3.702205,5.410509,-3.357048,8.386211,9.817199,3.786952,-0.329050,8.853750,-7.178117,-5.997336,0.963686,-4.850879,-0.393379,-0.749537,9.090608,4.966800,-5.954370,8.608375,0.555341,1.089588,8.174376,9.358354,2.614434,1.273526,9.384352,-1.660658,5.816081,8.612660,9.209728,1.473757,6.103364,-0.367144,2.123075,-9.835346,-5.201715,2.991999,-7.769934,8.415440,8.058595,-9.159628,-0.165594,0.383645,0.693142,3.242594,1.859869,3.669761,-3.412707,-8.596873,2.896580,-4.605281,0.700234,-1.081954,-0.230733,1.846924,-4.312436,-2.073574,-0.286308,-4.166754,-3.763426,0.904143,-8.600723,-7.249732,-7.071411,-1.281404,0.249599,0.584192,-2.671581,6.644125,7.079656,-0.214147,-5.420256,8.306419,3.370764,-9.431760,7.565963,6.963992,-5.238114,-5.611529,-7.745509,-7.342090,8.824361,-5.927211,1.108629,-8.618848,0.440712,-3.754020,-5.268518,-2.208696,7.630941,4.507484,-9.257384,-4.110177,7.616812,7.064684,8.611162,1.568149,3.424710,-5.641067,4.859520,-0.818192,-8.944199,-9.942869,-0.616047,-7.853991,8.962977,-9.621992,-1.514093,-3.087391,-2.567055,8.563688,-7.235405,-7.802563,0.303234,-4.455231,-9.974157,1.634086,-8.863635,2.716068,-2.332453,-3.427015,1.700683,-6.653835,-1.960936,3.456528,-4.728737,-0.585394,-7.972321,5.596220,-5.039580,-9.418828,-9.402674,7.945996,-5.868868,0.080746,-5.165309,-5.438449,-2.373228,7.127577,-9.068011,8.162682,6.923348,8.882230,6.630848,1.184148,-4.070830,-0.680728,5.785462,1.626137,-3.971576,5.535508,2.597752,-5.466296,-2.023609,-3.727088,0.753688,9.783494,1.955102,-5.088311,3.112259,-2.307818,8.917296,-4.953905,-9.539294,-0.378483,-6.155047,2.351078,-6.052891,-4.884583,3.207050,3.750239,-8.176116,-8.183126,6.755348,-1.948133,-6.644853,-9.080855,7.477497,8.751986,5.234749,-7.844764,1.809298,4.497695,-5.502502,-7.956378,-1.410577,-4.349747,-5.303105,-9.498639,3.125172,4.074097,-7.887976,9.612495,-6.679554,3.216519,7.078061,-5.969431,-9.995383,-9.150224,9.693067,-3.071677,-6.414424,-8.766833,7.354169,-9.074755,-2.130714,3.837147,5.213851,-1.671500,2.265341,3.942729,-7.621241,7.437195,9.751833,8.101722,-4.529167,-0.788504,-0.724279,4.797203,-5.089396,-6.921234,0.426591,4.578743,-7.890492,2.364171,1.038959,-6.777529,-6.853927,-3.717170,2.479448,-2.223301,-3.636390,-5.686886,0.119307,-4.672667,9.197100,-1.421116,-3.058931,-4.556086,-2.627476,-1.190533,-2.691139,1.780308,-5.480457,3.082348,0.075308,8.143473,-3.671661,-9.558509,-9.650116,8.032453,6.483182,-7.143046,7.783659,-5.528126,-6.531197,-0.015185,-9.691789,3.005466,6.265169,-5.122709,-4.502394,-8.376922,-9.413536,8.219191,-9.113143,-2.176160,-8.471329,3.984152,7.358033,0.071038,4.798400,6.194281,6.885911,-1.664446,2.582426,4.040443,9.179560,-6.246766,-8.760952,-8.227289,4.672523,-6.882420,3.115580,2.875560,-7.027850,0.248298,-2.875495,9.354593,4.854437,9.354361,-9.785998,8.291881,-2.510645,8.527128,9.768920,5.032468,1.270034,-5.487206,-7.296322,0.895232,7.376943,-8.649925,4.025859,8.973783,0.232024,1.861076,-5.642200,8.673575,2.475210,6.900111,-2.894073,7.592959,4.578537,2.966174,5.760513,-9.028505,2.228477,8.999499,-2.202123,2.156832,7.266801,0.759624,3.993523,-0.929242,-7.529750,1.148798,9.563343,-2.952294,2.927479,-9.372613,-8.934021,5.906930,5.631849,7.900870,8.428486,6.616680,2.177597,-9.440276,-2.670676,4.085912,7.600869,1.611872,3.682645,9.393581,3.098002,-3.364471,-9.566499,4.456197,-9.173270,8.788120,-5.427421,-4.205389,6.495723,-1.191734,5.281683,-8.899699,5.018236,3.570480,5.174151,4.202727,-2.328131,7.316424,2.315063,-6.533999,2.470727,4.341465,8.502129,5.447904,3.451331,-8.013416,-1.763615,3.038074,-0.150645,-6.103337,3.423777,6.083383,4.190416,-5.377065,4.459418,-5.620586,-9.655918,-8.516383,8.699563,-5.957582,-5.044554,-9.142063,-5.445059,-3.931509,-9.329952,-8.196368,-8.802133,-1.593135,-6.032917,-3.462768,3.302288,-6.924995,-4.625952,2.759185,4.793930,-6.522086,-6.229115,-6.622681,-9.982904,-5.746724,2.591722,-9.288959,-8.324068,-3.291424,1.753217,-3.679234,0.213297,-0.635525,-6.434558,-7.329069,-3.573938,0.728108,8.936526,5.503620,-8.375228,-1.738635,-7.476801,5.121943,6.831948,-3.327085,-6.547810,-2.923745,1.669946,9.146101,-3.499327,9.685985,0.328326,-9.818299,-5.878422,-5.302122,6.913248,0.656446,-4.160347,-1.937705,-7.641889,-2.976972,9.218685,-9.988111,-9.439513,-5.801068,1.130096,2.790128,-1.033536,7.637748,6.182283,1.412681,7.157736,-6.284351,0.841125,8.285638,0.885905,-6.837535,-5.157210,-8.845466,7.683199,-2.122203,-1.742754,1.604768,2.738824,-0.893509,-5.948197,5.384759,-9.520507,4.769457,-2.750528,7.278938,9.144830,-6.136537,-7.738503,-9.939499,-5.772447,9.637268,-3.441704,9.959467,6.602813,-4.635297,-7.958681,9.792514,0.800666,-3.405795,-6.946700,-3.164640,-8.281306,1.990589,5.246287,-8.652361,-9.407529,-0.323722,-7.088731,-1.566824,4.199785,0.587365,-4.193325,-4.818398,-3.628295,0.497632,-7.678566,-4.489705,1.010868,-5.476968,9.127176,-0.369534,-5.697194,-5.529787,-6.316508,-2.291798,0.894767,9.687244,6.200734,5.482041,1.646194,-4.836923,-8.598071,-2.501696,-3.254335,-8.718545,0.037909,-7.926025,-0.845874,-1.938478,9.914735,-3.213908,-7.093267,2.820264,-8.086252,5.306532,9.619888,0.282292,-2.334871,5.909334,-5.817298,-6.934768,-5.166408,2.464357,4.629395,-4.074003,6.848402,6.349839,-1.684490,4.167422,-8.673024,-3.802797,-9.967294,1.538062,4.105994,0.294244,8.369307,8.727164,-5.099935,-5.175550,-5.882685,7.188067,1.870975,-5.066473,7.027694,-6.541048,-5.459416,1.895825,9.534600,-3.660202,-0.864707,-7.625549,2.622672,6.976530,1.287110,-8.586480,-3.355092,4.649873,-5.606850,-1.939060,6.069942,7.151214,2.712293,-8.329981,-3.963021,-7.637659,-2.914628,-5.619768,-2.085804,-6.510791,3.600325,-9.032740,-3.837192,5.495974,4.469904,-6.142508,3.649898,-1.427802,-5.363028,6.605449,7.838537,8.726634,-2.344374,-3.965866,-9.371194,-3.893533,0.806475,2.465483,-9.964335,-9.226147,-8.992099,-9.701237,7.349217,8.401564,1.959623,-6.558697,-8.447987,4.150179,2.812097,5.045473,-9.484889,0.552242,-8.414070,5.317342,8.920751,-0.618474,-8.079941,2.638689,-1.378426,9.427498,2.739578,-0.966907,-1.496033,3.377866,2.844183,8.636161,-4.361505,1.316590,7.498426,-1.132138,6.778747,1.100113,5.801401,5.246685,5.462994,-3.893237,-9.814295,-2.121506,-8.658144,-5.168368,-1.749042,5.712479,-0.758292,-9.901615,0.657163,-9.325164,0.985725,-8.163361,1.376394,-5.469634,-7.472272,5.816500,-9.138914,9.177014,7.793679,-3.741080,9.006969,3.256653,1.810689,-5.529125,-0.708169,1.929213,-8.667237,-9.310372,6.923772,-2.449249,6.855164,-7.435463,8.326589,-0.448834,1.981323,-2.558672,-6.004471,-1.828608,0.079463,-7.780349,5.595910,-5.109332,1.937824,0.007454,1.243591,4.400742,-3.848565,-4.264892,5.586086,-7.147701,-7.524513,-7.208281,-2.284886,-2.919212,9.998420,9.729259,-8.512791,-0.367401,9.102536,-4.356593,0.672569,5.350771,2.328196,4.013097,0.496318,8.822271,-0.764437,-9.819624,-9.257031,0.168043,-7.587467,-8.670289,-4.499748,-3.126135,8.973390,-2.933634,-1.560774,-3.925445,-0.164375,0.065451,5.078824,0.452476,-4.487511,2.300063,-8.103486,-6.412029,1.034771,0.311734,2.680229,9.518333,-9.158752,3.186575,-2.144269,-7.750466,8.078107,-0.815356,-7.065592,-7.624237,4.045331,8.950799,-9.705652,-4.662136,-3.133091,7.066411,-5.549808,-6.007644,6.078265,2.409682,2.396891,-8.991512,1.551170,-8.860336,-3.066042,-0.213645,-6.902967,2.168603,4.258582,-2.336926,3.945310,1.763508,3.145323,-6.830040,2.803282,-1.421098,0.797451,5.537473,7.066725,-6.357338,3.476080,4.557921,-6.747519,-2.819070,4.747350,1.490120,5.504516,-4.446041,7.451752,1.861320,-3.087753,5.440827,-4.658580,6.787342,-1.678924,3.719429,-2.775548,2.043710,7.535581,4.398398,9.732985,3.212575,4.056098,7.104873,-3.844855,-5.976480], dtype = "float32")#candidate|9361|(1470,)|const|float32
call_9359 = relay.TupleGetItem(func_5351_call(relay.reshape(var_9360.astype('float32'), [15, 15, 7]), relay.reshape(const_9361.astype('float32'), [15, 14, 7]), ), 0)
call_9362 = relay.TupleGetItem(func_5355_call(relay.reshape(var_9360.astype('float32'), [15, 15, 7]), relay.reshape(const_9361.astype('float32'), [15, 14, 7]), ), 0)
output = relay.Tuple([call_9299,call_9324,var_9325,var_9326,const_9327,uop_9345,call_9359,var_9360,const_9361,])
output2 = relay.Tuple([call_9300,call_9328,var_9325,var_9326,const_9327,uop_9347,call_9362,var_9360,const_9361,])
func_9382 = relay.Function([var_9325,var_9326,var_9360,], output)
mod['func_9382'] = func_9382
mod = relay.transform.InferType()(mod)
var_9383 = relay.var("var_9383", dtype = "int16", shape = (2,))#candidate|9383|(2,)|var|int16
var_9384 = relay.var("var_9384", dtype = "int16", shape = (168,))#candidate|9384|(168,)|var|int16
var_9385 = relay.var("var_9385", dtype = "float32", shape = (105, 15))#candidate|9385|(105, 15)|var|float32
output = func_9382(var_9383,var_9384,var_9385,)
func_9386 = relay.Function([var_9383,var_9384,var_9385,], output)
mutated_mod['func_9386'] = func_9386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7867_call = mod.get_global_var('func_7867')
func_7869_call = mutated_mod.get_global_var('func_7869')
call_9402 = func_7867_call()
call_9403 = func_7867_call()
output = relay.Tuple([call_9402,])
output2 = relay.Tuple([call_9403,])
func_9406 = relay.Function([], output)
mod['func_9406'] = func_9406
mod = relay.transform.InferType()(mod)
mutated_mod['func_9406'] = func_9406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9406_call = mutated_mod.get_global_var('func_9406')
call_9407 = func_9406_call()
output = call_9407
func_9408 = relay.Function([], output)
mutated_mod['func_9408'] = func_9408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7745_call = mod.get_global_var('func_7745')
func_7747_call = mutated_mod.get_global_var('func_7747')
call_9435 = relay.TupleGetItem(func_7745_call(), 0)
call_9436 = relay.TupleGetItem(func_7747_call(), 0)
uop_9440 = relay.cosh(call_9435.astype('float32')) # shape=(28, 48)
uop_9442 = relay.cosh(call_9436.astype('float32')) # shape=(28, 48)
uop_9448 = relay.cos(uop_9440.astype('float64')) # shape=(28, 48)
uop_9450 = relay.cos(uop_9442.astype('float64')) # shape=(28, 48)
func_5689_call = mod.get_global_var('func_5689')
func_5691_call = mutated_mod.get_global_var('func_5691')
const_9454 = relay.const([[3.343601],[3.599997],[-1.913674],[-0.831023],[1.601847],[-9.277079],[9.536802],[3.793377],[8.517092],[-1.087048],[-9.599797],[9.542185],[-8.381634],[-8.127693],[7.281805],[6.668998],[0.068451],[4.376406],[-6.628891],[-2.927820],[9.793237],[-8.553389],[7.991072],[6.769316],[-9.377325],[-6.281641],[-2.042012],[5.871280],[-4.220803],[1.232429],[-6.636549],[-4.610864],[4.310472],[-3.561603],[-9.758447],[9.410605],[5.715562],[-3.664170],[-3.938435],[0.546292],[-2.973898],[7.167131],[-0.882873],[8.056483],[-3.959443],[-1.017793],[-8.505521],[9.767147],[9.960373],[5.819924],[-9.322661],[2.246071],[-8.803586],[-7.002744],[9.741098],[1.375304],[4.689571],[-7.822647],[-2.237064],[-6.526865],[-4.336538],[3.807285],[3.650172],[-2.281605],[-3.888941],[-3.464149],[2.781438],[8.082428],[-1.697169],[-3.201098],[0.170568],[0.733835],[-1.585527],[-7.828048],[6.721872],[-4.485233],[-7.921986],[-2.561427],[-1.387233],[-8.288757],[-7.024630],[7.350130],[-0.040069],[-6.166303],[-7.498828],[5.148751],[-6.152405],[-9.138071],[-3.063684],[4.764286],[5.599602],[-4.565593],[-9.204050],[7.617884],[3.619058],[6.449758],[1.293128],[5.820940],[0.830086],[-1.286207],[-6.371687],[-6.915453],[-3.453237],[-5.286407],[1.796318],[-2.164517],[9.696000],[-0.819720],[-5.963032],[-4.459616],[0.502125],[7.570910],[-4.414979],[3.604013],[-1.841235],[9.913984],[4.753591],[-6.985510],[-1.300137],[-1.273551],[-7.335093],[-1.174833],[8.158466],[6.944789],[-0.442881],[-5.545547],[-4.671450],[-0.103676],[-7.685293],[-7.041161],[8.872280],[-6.022790],[9.507433],[-1.681563],[5.924452],[-1.751300],[-9.413977],[6.598999],[1.806284],[6.114981],[-5.741742],[-3.302707],[9.264413],[9.168858],[-4.874139],[7.310324],[1.584463],[-1.248866],[-2.935183],[-0.140844],[0.675193],[4.743281],[1.945663],[-2.847207],[-8.801771],[-2.050197],[5.748853],[3.972017],[-4.611381],[-7.822137],[-9.971438],[-3.410264],[8.334275],[8.023917],[-8.922131],[0.552852],[-0.923833],[0.153743],[4.941902],[-0.596559],[7.713088],[-6.249157],[1.726232],[5.794047],[-8.627366],[-9.233868],[5.565298],[-8.265728],[0.340052],[-2.573398],[0.620421],[-0.148710],[6.402158],[7.464689],[1.659060],[-1.637199],[4.484524],[0.013117],[-2.324524],[-3.915784],[-1.409521],[2.371707],[8.457946],[3.535436],[1.538029],[-9.909454],[7.268589],[-1.787684],[-7.673037],[-3.955806],[-7.287217],[-5.567696],[5.592959],[-5.611725],[2.573562],[0.612181],[-7.593070],[2.441725],[-0.724335],[-1.405514],[7.342362],[7.160005],[1.515824],[8.432839],[4.856359],[8.054936],[-8.097322],[6.189947],[0.495057],[2.786617],[-8.555627],[8.923250],[6.026726],[6.207633],[8.011703],[-2.829122],[-0.547805],[2.808394],[5.076488],[-8.540741],[-5.212885],[-8.504781],[6.567814],[7.699710],[-7.086664],[5.623485],[6.803262],[0.299974],[-5.430528],[-0.106570],[-1.598226],[-6.517080],[-2.975596],[5.423105],[-9.514402],[5.057648],[9.984948],[5.463096],[4.155531],[-8.963271],[8.855686],[5.590975],[-9.094490],[9.252076],[5.901717],[-0.085065],[-0.466922],[-4.632049],[-4.901080],[8.888670],[9.008788],[-0.268739],[-3.347193],[-4.233682],[-8.550982],[8.578844],[-4.199005],[-2.731060],[9.950282],[4.833058],[5.248339],[1.696886],[-9.134909],[2.556790],[8.539708],[0.495899],[6.058988],[8.792520],[7.663145],[7.463153],[-3.217623],[5.450270],[7.241728],[3.101217],[-4.679332],[2.934985]], dtype = "float64")#candidate|9454|(286, 1)|const|float64
call_9453 = relay.TupleGetItem(func_5689_call(relay.reshape(const_9454.astype('float64'), [26, 11])), 6)
call_9455 = relay.TupleGetItem(func_5691_call(relay.reshape(const_9454.astype('float64'), [26, 11])), 6)
output = relay.Tuple([uop_9448,call_9453,const_9454,])
output2 = relay.Tuple([uop_9450,call_9455,const_9454,])
func_9458 = relay.Function([], output)
mod['func_9458'] = func_9458
mod = relay.transform.InferType()(mod)
output = func_9458()
func_9459 = relay.Function([], output)
mutated_mod['func_9459'] = func_9459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8987_call = mod.get_global_var('func_8987')
func_8988_call = mutated_mod.get_global_var('func_8988')
call_9495 = relay.TupleGetItem(func_8987_call(), 1)
call_9496 = relay.TupleGetItem(func_8988_call(), 1)
output = relay.Tuple([call_9495,])
output2 = relay.Tuple([call_9496,])
func_9500 = relay.Function([], output)
mod['func_9500'] = func_9500
mod = relay.transform.InferType()(mod)
output = func_9500()
func_9501 = relay.Function([], output)
mutated_mod['func_9501'] = func_9501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9292_call = mod.get_global_var('func_9292')
func_9294_call = mutated_mod.get_global_var('func_9294')
call_9513 = relay.TupleGetItem(func_9292_call(), 1)
call_9514 = relay.TupleGetItem(func_9294_call(), 1)
var_9517 = relay.var("var_9517", dtype = "uint64", shape = (28, 48))#candidate|9517|(28, 48)|var|uint64
bop_9518 = relay.bitwise_or(call_9513.astype('uint16'), relay.reshape(var_9517.astype('uint16'), relay.shape_of(call_9513))) # shape=(28, 48)
bop_9521 = relay.bitwise_or(call_9514.astype('uint16'), relay.reshape(var_9517.astype('uint16'), relay.shape_of(call_9514))) # shape=(28, 48)
output = bop_9518
output2 = bop_9521
func_9542 = relay.Function([var_9517,], output)
mod['func_9542'] = func_9542
mod = relay.transform.InferType()(mod)
var_9543 = relay.var("var_9543", dtype = "uint64", shape = (28, 48))#candidate|9543|(28, 48)|var|uint64
output = func_9542(var_9543)
func_9544 = relay.Function([var_9543], output)
mutated_mod['func_9544'] = func_9544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7255_call = mod.get_global_var('func_7255')
func_7257_call = mutated_mod.get_global_var('func_7257')
call_9555 = relay.TupleGetItem(func_7255_call(), 0)
call_9556 = relay.TupleGetItem(func_7257_call(), 0)
func_6965_call = mod.get_global_var('func_6965')
func_6969_call = mutated_mod.get_global_var('func_6969')
var_9575 = relay.var("var_9575", dtype = "float64", shape = (2028,))#candidate|9575|(2028,)|var|float64
var_9576 = relay.var("var_9576", dtype = "float32", shape = (98, 15))#candidate|9576|(98, 15)|var|float32
var_9577 = relay.var("var_9577", dtype = "float64", shape = (286,))#candidate|9577|(286,)|var|float64
call_9574 = relay.TupleGetItem(func_6965_call(relay.reshape(var_9575.astype('float64'), [13, 13, 12]), relay.reshape(var_9576.astype('float32'), [14, 105]), relay.reshape(var_9577.astype('float64'), [286,]), ), 8)
call_9578 = relay.TupleGetItem(func_6969_call(relay.reshape(var_9575.astype('float64'), [13, 13, 12]), relay.reshape(var_9576.astype('float32'), [14, 105]), relay.reshape(var_9577.astype('float64'), [286,]), ), 8)
const_9610 = relay.const([[8.251129,-4.709686,-3.837160,2.534445,-2.379837,-4.285279,-5.265002,9.497469,-7.896779,-5.096576,-5.982345,4.193599,-6.532677,-2.385720,-6.340564],[1.280895,-1.796428,-3.981261,-7.858539,5.273556,2.664256,0.885338,-9.907767,-9.740084,-8.396750,4.107141,-2.275259,-6.431013,1.768111,-4.343225],[-5.797215,-0.892081,-7.415347,-4.699471,-4.782568,9.667397,3.685239,-9.720426,4.546781,-9.501874,0.819619,-7.569242,-9.574053,-1.531687,-2.791714],[0.147378,-7.230968,2.801462,-4.925921,-4.295599,8.693552,-9.718102,-2.024826,9.928078,4.179655,0.644257,5.123613,3.071533,4.325705,-3.112891],[-5.640581,-5.772972,5.380268,0.992254,0.651441,-9.252623,6.071947,9.814082,9.153990,-0.159062,-5.375984,-1.662066,1.594260,2.085169,0.602730],[-9.838543,4.263550,9.154176,9.335856,2.235423,-4.477475,8.658418,-6.437624,0.906790,0.136715,7.776684,3.543151,-2.426289,9.534491,2.794800],[1.493026,-2.935872,5.060373,4.614954,8.872261,8.564834,-3.102842,4.515616,-0.040174,4.638047,-9.715326,1.453861,-1.963645,4.908523,-4.312112],[-7.256033,-2.351035,-4.518523,-2.065604,-2.884591,-0.507615,1.330075,2.980596,-6.657601,3.144115,1.915389,-6.184485,-9.390667,-3.643001,-7.880817],[-7.522788,-0.468958,1.117646,-3.548812,-6.955529,2.913813,9.633855,-2.697013,-9.593981,-6.086455,-3.569431,0.068131,-1.169705,9.980546,2.437505],[2.927407,-1.311228,9.621836,3.067197,-8.988856,-7.328741,-7.990402,-8.173478,-2.038130,3.199007,4.089456,8.381415,-5.059155,-7.421401,-8.969798],[1.370549,9.930513,-7.419984,-6.885106,3.375404,6.488407,-2.821588,4.919789,-4.020154,8.168584,-2.319633,3.134816,-8.546112,2.900872,7.340147],[-9.121067,-0.073097,0.295163,-4.162736,-3.781542,-3.968248,-3.469787,9.008024,3.848044,0.668354,-1.186002,9.518815,7.111114,3.793299,-6.287393],[3.880570,-4.835853,2.462396,-7.754114,4.423569,6.506903,-4.419068,-0.537150,1.568492,-3.249107,9.465827,-2.953826,-5.727068,-2.263296,-5.986594],[1.295536,6.701002,4.238273,0.367880,0.586177,-9.390542,-7.672930,-6.989380,9.869024,-7.037849,-6.553486,-3.878286,9.745911,8.607057,-1.090964],[-7.939073,5.131043,7.786977,-7.484822,-6.735795,1.527088,-2.720377,6.906516,4.197180,-3.752262,-2.702919,0.615691,1.048677,-7.238266,-5.337036],[5.782191,-0.928614,-6.905513,6.673186,-8.738944,-5.173562,0.549473,6.285689,8.850517,6.813172,-0.739152,3.086581,-1.655243,-8.535821,5.360335],[7.763512,-6.886590,1.495908,-7.887528,2.585985,-1.141801,-5.250191,9.513582,-0.323572,-2.821832,-0.930763,-8.055397,-3.078474,4.937858,2.199829],[7.595466,5.196313,-8.426992,9.992768,6.093458,0.155784,-5.354440,9.996817,4.303016,7.697212,8.192030,-7.136032,1.438183,-4.061376,-2.189538],[0.588531,8.931905,2.560962,5.810503,-3.909498,5.362827,-5.423162,8.332691,9.992691,4.424510,0.081904,9.557336,-4.768951,-8.684570,0.465063],[-1.789336,9.247836,8.501922,2.282403,1.436065,1.427675,0.701321,-8.041259,-7.312727,2.185794,-3.739923,-4.280281,9.828999,-2.362917,-7.906400],[-0.679604,-6.112613,-8.531914,-8.764531,-4.128356,8.680680,-6.912390,2.982578,4.058733,5.850338,-6.070865,0.344125,8.434316,8.488172,3.781931],[4.792353,2.382951,1.051682,8.235706,0.379887,8.421583,1.206193,-2.757420,-8.824964,-1.971312,-2.381135,-5.291867,-0.990184,-4.893158,9.323724],[0.424098,9.391690,2.253293,-1.091059,-6.242557,-2.304462,-5.048154,-6.293073,6.595658,-9.868947,-0.973766,-5.496721,5.289503,-2.957928,-5.320574],[0.453290,-4.570004,-8.386361,0.493554,-8.428876,0.498918,9.235834,-3.015738,-6.628703,-1.081947,-3.889025,9.207725,9.523675,0.088468,1.980584],[-6.409135,8.800739,5.036996,-5.498324,-1.465098,3.876328,0.872079,3.871828,-9.446917,9.580520,-1.833526,7.079692,-1.771235,-5.259703,-6.287701],[-3.428193,-8.546570,7.552837,4.816108,-9.849169,-8.721104,2.553851,-1.521791,6.819105,-9.966495,-0.810057,-2.270039,0.589503,-5.100396,-9.685696],[1.947330,6.962112,-2.495032,7.464184,-3.903122,7.064916,2.970860,1.105409,7.929510,-3.445624,1.604741,5.487053,-5.040768,5.862636,-2.854720],[1.834167,-0.598613,-8.295385,6.471425,-1.092261,9.845021,-3.587731,4.394466,6.968886,3.267024,-8.100178,-6.398920,-5.107913,-2.939070,0.399672],[-8.230908,-4.960860,-3.079221,1.704037,9.751138,3.404520,-1.103646,5.380851,5.636776,-5.984421,5.973780,-0.157066,-3.155698,-4.484588,-7.782643],[-4.786070,8.941416,2.222084,2.922183,0.432474,-2.742957,2.220374,6.206441,-3.944449,9.390219,4.369155,-8.409739,-1.182711,-0.307761,0.421801],[0.506203,2.164931,4.905623,-4.811125,-7.947307,6.000412,-0.249282,1.113480,2.394070,5.206981,-6.338196,4.219278,-7.296852,-5.316095,7.288307],[9.365037,2.689405,1.650311,0.356583,7.519270,2.480543,-1.628348,8.556759,5.890565,-0.918315,-0.132147,2.193947,5.994743,7.707952,5.868997],[2.465022,8.189496,4.204567,2.999696,-6.882178,-3.868460,2.199444,-8.817352,-1.491475,-3.927546,-9.769854,-7.375074,-0.124861,0.411989,5.019484],[-4.116203,2.874417,3.698199,-1.006951,5.677751,2.434221,1.041062,-7.891428,4.277947,2.759358,1.764211,-5.027439,-6.361116,7.179183,1.815172],[-7.375543,-8.001912,5.127183,-4.252806,-5.517839,8.441672,-7.916153,5.303088,-0.417888,2.821639,-6.766685,9.211745,-1.278210,4.110059,6.440361],[-4.891955,0.474019,1.333272,-3.147308,-4.215088,6.004824,-8.227042,-1.267141,-6.807912,3.324939,6.624036,4.738946,-5.627017,-8.574455,0.869976],[-2.937059,2.743941,-3.361097,4.105051,-2.301208,-6.040644,5.444196,5.881228,-1.407464,-6.181454,-9.133234,9.464658,-0.408473,6.111029,6.499081],[-8.575641,8.780862,4.549420,-6.285277,-5.898566,6.893009,-1.816468,-0.679437,-4.677991,9.896469,-0.198963,-7.870559,4.164334,4.187599,3.313877],[-4.591502,6.780297,7.695751,8.071471,7.048662,4.755613,-6.482806,5.887900,1.158901,0.130135,-9.586675,-6.433854,0.287306,9.879555,0.259715],[-3.738412,-6.878226,3.150939,-7.411397,7.939441,-6.076513,-9.397407,-6.689040,9.000105,-5.927923,-6.467118,-3.797744,8.067918,7.089329,2.811594],[-2.415723,-0.489611,8.129657,-3.556829,-8.535384,5.226490,-6.266737,-5.607438,2.544907,1.148428,-4.994918,-0.989458,-3.180257,2.391804,-5.952679],[-7.794458,-1.408321,3.447903,-5.157050,2.432414,0.253549,-9.099494,5.566185,-5.464650,-6.994460,-1.619337,8.850246,-5.456451,-9.108996,9.073452],[-8.446916,2.869026,-8.822867,-0.834480,5.338988,-7.637363,-3.633251,-1.767836,2.080196,-3.381434,-2.717085,-3.857065,5.254183,-4.860192,-6.212556],[-2.584197,7.333405,3.394366,-9.823214,6.238361,-1.688455,-8.881956,-7.371641,-6.226358,6.432657,1.639691,4.342473,7.489631,-3.839389,-4.156565],[-9.807801,5.279308,5.064245,3.438718,-1.703934,3.251048,-8.352411,7.886343,-6.381048,-7.126526,-2.216730,-4.558943,-5.211297,-9.309456,5.667179],[2.959447,0.718918,4.322190,-5.631166,-3.250116,6.141734,5.503359,4.148298,-4.531146,-6.823313,2.298648,0.860895,-4.708275,-4.217545,-9.464843],[5.253609,3.610107,9.401638,0.172146,0.291522,-8.039656,4.829367,3.688793,1.390673,1.888896,-3.833809,-7.250912,-9.464007,2.701756,-9.668630],[-7.395828,-7.883875,-6.964005,-4.835023,7.502317,-4.714263,8.426997,6.815179,-3.129987,-9.311631,-3.445345,3.804066,-5.717482,7.163730,-0.993797],[-5.805660,5.896037,-0.612767,-1.325921,-0.389604,-0.472086,9.678219,-1.550435,-2.741344,1.538294,-3.586868,-2.669935,8.639397,7.945005,-2.372828],[-8.509952,-6.548455,4.577084,2.243892,-4.096904,4.894680,-9.626311,-4.821171,7.963131,-5.366387,4.374540,-6.035943,-7.699933,4.322123,-4.482524],[1.786207,-1.387507,9.039885,-7.842036,3.921368,-5.664855,6.865306,9.578697,0.248312,7.440131,-7.884822,0.605276,-0.734044,-9.807348,3.658595],[9.310886,2.482831,8.577845,-4.814485,9.476623,-0.567491,-8.128261,9.319023,4.750481,5.131938,-2.105860,9.352398,-8.581823,8.122765,4.407514],[-3.134938,2.448740,-7.021786,-7.266991,-4.876321,-7.148354,6.942392,-5.514940,5.604114,3.768180,-8.673239,-1.022643,7.657054,9.294680,7.439467],[-0.179170,-8.888512,2.978772,-7.105045,1.979262,1.555575,1.842174,-1.159799,7.518104,5.792734,-6.043729,-1.597168,3.322047,-4.457682,-5.169995],[-6.816146,6.119139,-0.691592,2.341497,-7.496572,8.784226,1.357459,-2.277752,1.348861,1.904477,-7.985613,-4.168901,-7.649685,1.941199,9.982068],[-7.103794,-6.083442,-9.995725,-4.346469,8.998580,-4.878458,-7.836076,5.410256,4.285236,0.460241,7.480553,7.704093,-3.813221,3.892090,-0.585928],[-1.093457,-8.252948,-8.705044,1.497090,7.782564,5.044367,-1.337349,6.205069,-4.960046,-1.430099,7.866555,1.283295,8.994374,-4.878328,7.369053],[1.295363,0.923336,-7.627104,-8.175087,-5.375011,-2.311389,9.614859,6.178630,-3.802833,-7.722926,5.207968,-1.347251,-5.311516,0.567117,2.180437],[5.701996,-5.991388,-5.480691,-9.218476,-0.741229,-4.664399,-9.921905,5.461833,-1.497944,5.998672,-4.884527,-4.745815,6.907632,7.373543,0.372234],[-0.190914,5.890003,7.595212,4.082284,3.879260,-3.177998,9.799444,7.084055,5.981269,-4.956921,-2.920888,4.949435,-2.310730,9.493009,9.169457],[-5.357527,4.857500,-8.958280,6.879659,-4.426163,-5.920291,8.765940,4.681203,-1.787392,-7.481051,0.305683,-6.850017,-9.670847,-0.885891,-6.673595],[-4.543789,4.015184,-7.903174,9.982611,9.665209,-9.682905,-6.763021,6.862702,2.406435,-2.798885,9.848694,-2.971532,0.517523,-2.830649,5.509825],[1.729007,9.041095,1.180028,1.503676,9.212992,8.908646,-1.435065,7.692788,1.639092,5.237467,3.338660,-2.930848,-2.893643,-1.204235,8.893507],[1.685763,2.529736,7.069579,5.517715,9.657797,6.362429,-8.833780,6.346831,-1.295477,-9.925359,-3.224023,-4.482875,-1.227113,-2.406981,1.508499],[-0.126838,3.326352,1.333369,-0.999659,9.952951,2.720134,-6.488426,-8.473278,-5.020793,4.397623,-3.517508,-7.732552,-8.414166,-0.934323,3.376018],[-6.139827,-1.911988,0.384585,-1.035225,-0.756897,-3.862373,-3.639358,-9.929784,-0.614360,0.625111,6.153230,5.094922,-0.761803,-2.726245,0.946872],[-5.451413,8.845273,3.146002,-8.038769,5.988463,2.715259,5.248171,-3.361200,-3.796558,-9.745187,-5.031236,5.699957,8.325065,5.100748,-7.424618],[5.962309,-1.604283,-5.529962,4.145140,6.505385,8.957869,-2.341224,7.387153,-6.722754,3.877603,5.391233,3.269311,-1.783728,9.240588,-1.021558],[-9.263903,-7.061112,4.206694,-4.449415,-8.813342,0.031061,-2.598721,-5.778277,-2.649840,4.823812,7.088100,-4.123884,1.257188,9.154822,-9.363111],[6.806505,4.005696,-5.731825,-5.521139,6.529847,-8.170235,-6.652707,8.624891,-7.341718,-0.530674,6.906712,3.812382,-3.516213,-5.614808,6.152275],[5.335004,8.482474,-1.314362,9.951598,-6.630703,5.603524,3.757297,0.813372,-4.193146,8.824188,3.400082,-8.982805,-1.919542,-5.303515,-3.588092],[8.633252,-1.718971,-3.789865,-1.197787,0.698837,1.717328,-9.864631,-5.683701,1.978703,2.269881,4.846062,3.653660,5.857727,-5.661920,0.325537],[0.395525,3.035526,1.180115,8.790544,1.674905,7.281377,1.853018,-8.085417,7.680030,5.190478,-8.127923,-1.865237,-9.214179,1.560377,4.565607],[-5.501415,3.538924,-5.315829,6.995211,2.418439,-7.737037,2.224667,-3.701509,0.346310,6.566360,-2.311030,-4.886377,-6.297387,8.258738,1.336965],[-5.839470,9.706941,4.233136,-0.883737,1.321944,-7.251714,-0.244476,-9.053595,1.494360,3.904770,-2.855732,-3.219425,-4.830133,6.953361,-0.139357],[-6.581247,-2.749571,-8.963050,0.186910,9.801254,-3.411683,-3.143773,9.306724,2.403818,-4.032596,-2.452009,1.579345,6.299509,4.545944,8.951387],[-3.478853,-9.622924,1.870983,-8.826764,6.538801,-5.848674,5.877647,5.631792,0.429945,4.803040,1.443961,-3.486785,-1.112765,-8.718472,-3.814512],[7.967185,0.046551,-0.238939,3.257413,5.007180,-6.501412,-9.550276,-1.459079,-2.344849,6.406378,3.227725,3.047127,9.055966,-2.843377,5.080205],[9.068641,2.062431,-2.936474,0.155725,-5.294502,3.923939,-8.310360,3.582121,4.865206,-0.142112,6.435119,7.120289,1.113272,2.030325,-9.954666],[4.715674,1.127549,-4.956118,-3.515797,2.034633,-6.706133,6.109447,5.934457,7.631474,-0.745915,8.024037,2.454806,3.801585,0.648411,-7.486190],[3.002798,6.629441,-5.830784,3.689598,7.775675,-9.888766,4.087819,4.947793,-8.466256,6.196379,-3.678314,-8.425441,9.774981,6.292426,-2.228095],[-7.738361,3.468421,5.412110,4.230753,-4.546755,7.921321,-8.320411,-2.283459,8.941253,-8.187178,6.950889,8.844365,-4.967049,9.245358,3.627429],[-1.511695,-3.614510,7.824402,0.506659,-8.783440,-3.987553,-6.741570,-1.745245,-3.496579,9.903098,-7.142754,2.381249,5.280826,-1.337676,7.602150],[-1.929594,0.505231,4.742885,-9.803401,0.448898,-8.705320,8.658682,-4.688125,6.760442,9.345969,0.814323,-7.761563,-3.385248,-8.333930,-8.749192],[-9.432585,8.334250,4.322334,9.119597,-0.854085,-6.276792,-2.793089,4.947278,8.869363,1.510858,-2.519543,-3.180107,4.905227,-0.918850,4.905238],[-8.596221,9.523729,9.674406,-8.822305,5.299087,5.257290,-3.673975,8.980003,-9.533764,-4.003798,0.183062,-0.560137,7.266544,-0.525940,-7.433955],[1.454062,-0.481708,-2.810397,4.890452,-0.263998,0.093139,6.646604,4.689703,-9.705896,0.227510,2.426864,5.402276,8.832305,6.785217,-1.234831],[3.469050,-5.830778,-6.615003,-5.920933,-2.493076,-0.732761,-9.049762,7.465617,-9.697051,-5.820354,-8.263379,0.955244,0.717809,3.473725,-2.380672],[-5.365173,4.653228,4.141038,-3.599916,5.629858,-0.523130,-0.124798,6.819337,-4.886932,0.717879,-0.870685,-0.015080,3.915988,-6.781316,4.605708],[-7.758952,-0.530970,-5.475596,-3.339087,1.269128,7.305887,7.843621,2.962959,4.298882,8.978614,-2.519396,2.519956,1.894481,-9.204183,8.267568],[-9.550165,-0.387510,5.140162,2.225874,5.722322,6.977263,-8.213691,-6.810539,-2.960133,-0.759056,0.623381,1.317005,1.824780,2.930801,-4.302247],[5.373194,7.100262,0.013939,8.214132,-7.096721,-0.840301,1.427677,-2.515757,-8.262470,-9.982617,-8.895926,1.749164,-6.678503,-6.843801,-5.638547],[-6.582812,-1.532604,4.048437,-3.039465,-7.626191,8.535282,-0.340040,8.784560,0.616397,4.422364,-0.270979,6.962143,6.417728,8.990710,6.461564],[-4.834564,4.085651,9.175461,4.827848,3.101058,-2.735843,-6.868796,-9.675306,-2.976998,4.718523,9.223200,9.738748,0.729628,-2.407925,5.588477],[-5.902660,2.510035,-7.043919,9.594167,-5.840067,8.596293,0.556244,4.070836,4.541464,5.027256,-7.130398,1.581972,7.675833,-7.273323,4.258396],[-4.716746,-4.395981,8.607025,-2.589888,-8.078326,-5.218440,-2.295298,3.136491,8.829310,0.773711,2.681318,7.241735,4.573598,5.693613,-3.338853],[1.691869,-5.026944,-5.724267,-0.087374,-1.848269,0.749968,-3.547854,1.705737,0.416424,8.807907,2.691013,-4.856388,5.535557,-1.638245,-2.555108],[6.135377,7.373610,8.012398,9.529956,-3.282054,-5.934044,-8.751337,5.446293,-5.700378,-6.938678,8.847245,-2.347758,-3.866244,-2.969489,-8.924599]], dtype = "float32")#candidate|9610|(98, 15)|const|float32
bop_9611 = relay.floor_divide(var_9576.astype('float64'), relay.reshape(const_9610.astype('float64'), relay.shape_of(var_9576))) # shape=(98, 15)
output = relay.Tuple([call_9555,call_9574,var_9575,var_9577,bop_9611,])
output2 = relay.Tuple([call_9556,call_9578,var_9575,var_9577,bop_9611,])
func_9623 = relay.Function([var_9575,var_9576,var_9577,], output)
mod['func_9623'] = func_9623
mod = relay.transform.InferType()(mod)
var_9624 = relay.var("var_9624", dtype = "float64", shape = (2028,))#candidate|9624|(2028,)|var|float64
var_9625 = relay.var("var_9625", dtype = "float32", shape = (98, 15))#candidate|9625|(98, 15)|var|float32
var_9626 = relay.var("var_9626", dtype = "float64", shape = (286,))#candidate|9626|(286,)|var|float64
output = func_9623(var_9624,var_9625,var_9626,)
func_9627 = relay.Function([var_9624,var_9625,var_9626,], output)
mutated_mod['func_9627'] = func_9627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7631_call = mod.get_global_var('func_7631')
func_7633_call = mutated_mod.get_global_var('func_7633')
call_9658 = func_7631_call()
call_9659 = func_7631_call()
func_6170_call = mod.get_global_var('func_6170')
func_6172_call = mutated_mod.get_global_var('func_6172')
var_9679 = relay.var("var_9679", dtype = "int16", shape = (6, 28))#candidate|9679|(6, 28)|var|int16
call_9678 = relay.TupleGetItem(func_6170_call(relay.reshape(var_9679.astype('int16'), [168,])), 2)
call_9680 = relay.TupleGetItem(func_6172_call(relay.reshape(var_9679.astype('int16'), [168,])), 2)
func_6787_call = mod.get_global_var('func_6787')
func_6788_call = mutated_mod.get_global_var('func_6788')
call_9690 = relay.TupleGetItem(func_6787_call(), 0)
call_9691 = relay.TupleGetItem(func_6788_call(), 0)
output = relay.Tuple([call_9658,call_9678,var_9679,call_9690,])
output2 = relay.Tuple([call_9659,call_9680,var_9679,call_9691,])
func_9701 = relay.Function([var_9679,], output)
mod['func_9701'] = func_9701
mod = relay.transform.InferType()(mod)
mutated_mod['func_9701'] = func_9701
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9702 = relay.var("var_9702", dtype = "int16", shape = (6, 28))#candidate|9702|(6, 28)|var|int16
func_9701_call = mutated_mod.get_global_var('func_9701')
call_9703 = func_9701_call(var_9702)
output = call_9703
func_9704 = relay.Function([var_9702], output)
mutated_mod['func_9704'] = func_9704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9126_call = mod.get_global_var('func_9126')
func_9128_call = mutated_mod.get_global_var('func_9128')
call_9711 = relay.TupleGetItem(func_9126_call(), 0)
call_9712 = relay.TupleGetItem(func_9128_call(), 0)
func_5724_call = mod.get_global_var('func_5724')
func_5726_call = mutated_mod.get_global_var('func_5726')
call_9715 = func_5724_call()
call_9716 = func_5724_call()
var_9739 = relay.var("var_9739", dtype = "float32", shape = (15, 9, 7))#candidate|9739|(15, 9, 7)|var|float32
bop_9740 = relay.power(call_9715.astype('float64'), var_9739.astype('float64')) # shape=(15, 9, 7)
bop_9743 = relay.power(call_9716.astype('float64'), var_9739.astype('float64')) # shape=(15, 9, 7)
bop_9757 = relay.not_equal(bop_9740.astype('bool'), call_9715.astype('bool')) # shape=(15, 9, 7)
bop_9760 = relay.not_equal(bop_9743.astype('bool'), call_9716.astype('bool')) # shape=(15, 9, 7)
output = relay.Tuple([call_9711,bop_9757,])
output2 = relay.Tuple([call_9712,bop_9760,])
func_9782 = relay.Function([var_9739,], output)
mod['func_9782'] = func_9782
mod = relay.transform.InferType()(mod)
mutated_mod['func_9782'] = func_9782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9783 = relay.var("var_9783", dtype = "float32", shape = (15, 9, 7))#candidate|9783|(15, 9, 7)|var|float32
func_9782_call = mutated_mod.get_global_var('func_9782')
call_9784 = func_9782_call(var_9783)
output = call_9784
func_9785 = relay.Function([var_9783], output)
mutated_mod['func_9785'] = func_9785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7631_call = mod.get_global_var('func_7631')
func_7633_call = mutated_mod.get_global_var('func_7633')
call_9837 = func_7631_call()
call_9838 = func_7631_call()
output = relay.Tuple([call_9837,])
output2 = relay.Tuple([call_9838,])
func_9839 = relay.Function([], output)
mod['func_9839'] = func_9839
mod = relay.transform.InferType()(mod)
mutated_mod['func_9839'] = func_9839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9839_call = mutated_mod.get_global_var('func_9839')
call_9840 = func_9839_call()
output = call_9840
func_9841 = relay.Function([], output)
mutated_mod['func_9841'] = func_9841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9877 = relay.var("var_9877", dtype = "float64", shape = (13, 2, 8))#candidate|9877|(13, 2, 8)|var|float64
uop_9878 = relay.cosh(var_9877.astype('float64')) # shape=(13, 2, 8)
func_5689_call = mod.get_global_var('func_5689')
func_5691_call = mutated_mod.get_global_var('func_5691')
var_9897 = relay.var("var_9897", dtype = "float64", shape = (1, 286))#candidate|9897|(1, 286)|var|float64
call_9896 = relay.TupleGetItem(func_5689_call(relay.reshape(var_9897.astype('float64'), [26, 11])), 6)
call_9898 = relay.TupleGetItem(func_5691_call(relay.reshape(var_9897.astype('float64'), [26, 11])), 6)
output = relay.Tuple([uop_9878,call_9896,var_9897,])
output2 = relay.Tuple([uop_9878,call_9898,var_9897,])
func_9905 = relay.Function([var_9877,var_9897,], output)
mod['func_9905'] = func_9905
mod = relay.transform.InferType()(mod)
var_9906 = relay.var("var_9906", dtype = "float64", shape = (13, 2, 8))#candidate|9906|(13, 2, 8)|var|float64
var_9907 = relay.var("var_9907", dtype = "float64", shape = (1, 286))#candidate|9907|(1, 286)|var|float64
output = func_9905(var_9906,var_9907,)
func_9908 = relay.Function([var_9906,var_9907,], output)
mutated_mod['func_9908'] = func_9908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6676_call = mutated_mod.get_global_var('func_6676')
call_9943 = relay.TupleGetItem(func_6674_call(), 1)
call_9944 = relay.TupleGetItem(func_6676_call(), 1)
output = call_9943
output2 = call_9944
func_9945 = relay.Function([], output)
mod['func_9945'] = func_9945
mod = relay.transform.InferType()(mod)
mutated_mod['func_9945'] = func_9945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9945_call = mutated_mod.get_global_var('func_9945')
call_9946 = func_9945_call()
output = call_9946
func_9947 = relay.Function([], output)
mutated_mod['func_9947'] = func_9947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_9983 = func_7702_call()
call_9984 = func_7702_call()
output = relay.Tuple([call_9983,])
output2 = relay.Tuple([call_9984,])
func_9989 = relay.Function([], output)
mod['func_9989'] = func_9989
mod = relay.transform.InferType()(mod)
mutated_mod['func_9989'] = func_9989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9989_call = mutated_mod.get_global_var('func_9989')
call_9990 = func_9989_call()
output = call_9990
func_9991 = relay.Function([], output)
mutated_mod['func_9991'] = func_9991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8627_call = mod.get_global_var('func_8627')
func_8629_call = mutated_mod.get_global_var('func_8629')
call_10008 = relay.TupleGetItem(func_8627_call(), 0)
call_10009 = relay.TupleGetItem(func_8629_call(), 0)
func_5724_call = mod.get_global_var('func_5724')
func_5726_call = mutated_mod.get_global_var('func_5726')
call_10036 = func_5724_call()
call_10037 = func_5724_call()
output = relay.Tuple([call_10008,call_10036,])
output2 = relay.Tuple([call_10009,call_10037,])
func_10040 = relay.Function([], output)
mod['func_10040'] = func_10040
mod = relay.transform.InferType()(mod)
mutated_mod['func_10040'] = func_10040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10040_call = mutated_mod.get_global_var('func_10040')
call_10041 = func_10040_call()
output = call_10041
func_10042 = relay.Function([], output)
mutated_mod['func_10042'] = func_10042
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10086 = relay.const([[[9,1,-7,3,-1,-5],[-2,1,-10,-1,-3,9],[6,9,-2,-9,-4,-10],[1,7,2,10,-8,4]],[[-10,-9,1,1,5,1],[10,8,-10,-7,2,2],[5,-2,7,-10,-2,-9],[9,10,-7,-3,1,-1]],[[10,2,3,7,-8,-2],[4,1,3,1,-8,-7],[-2,-4,-2,3,-4,-3],[9,-6,9,-3,9,1]],[[1,-7,-2,8,5,-6],[4,8,-4,-6,2,-3],[9,8,-9,-2,-2,1],[-3,8,10,8,5,3]],[[-8,-2,8,-3,-1,-7],[-1,-1,7,-7,-3,-10],[-10,7,4,-3,-9,-5],[2,6,-1,4,-1,5]],[[8,-8,-6,6,-9,-1],[2,-7,3,-10,2,-8],[10,-6,-8,-6,-2,1],[-5,4,-9,8,1,4]],[[7,-6,-1,-1,10,-1],[8,-7,4,-8,5,4],[9,5,7,-3,-5,-1],[-5,7,-2,6,-8,2]],[[-2,-2,4,-9,7,-2],[-5,-9,4,-5,4,6],[2,10,6,-1,-4,-5],[8,1,10,-2,-10,3]],[[10,-7,-4,2,7,-6],[-4,3,-10,6,4,5],[-5,-9,5,1,4,2],[2,-5,-6,4,-8,7]],[[5,7,-3,3,9,-2],[-6,2,2,-9,7,-5],[-3,-4,6,-10,-7,8],[1,-7,-3,-5,-6,10]],[[-2,-4,1,4,8,8],[9,5,-6,7,4,8],[-7,-8,-1,-10,-9,3],[-6,5,-5,10,-2,-2]],[[-5,6,5,9,-8,-4],[9,-3,10,8,3,2],[8,-1,-4,-9,-4,-10],[-2,2,10,-10,-9,5]],[[8,-7,-9,-8,10,9],[2,3,-4,6,6,5],[-3,-2,7,4,-5,6],[-2,2,4,4,-9,6]]], dtype = "uint8")#candidate|10086|(13, 4, 6)|const|uint8
var_10087 = relay.var("var_10087", dtype = "uint8", shape = (13, 4, 6))#candidate|10087|(13, 4, 6)|var|uint8
bop_10088 = relay.bitwise_or(const_10086.astype('uint8'), relay.reshape(var_10087.astype('uint8'), relay.shape_of(const_10086))) # shape=(13, 4, 6)
output = bop_10088
output2 = bop_10088
func_10105 = relay.Function([var_10087,], output)
mod['func_10105'] = func_10105
mod = relay.transform.InferType()(mod)
var_10106 = relay.var("var_10106", dtype = "uint8", shape = (13, 4, 6))#candidate|10106|(13, 4, 6)|var|uint8
output = func_10105(var_10106)
func_10107 = relay.Function([var_10106], output)
mutated_mod['func_10107'] = func_10107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7360_call = mod.get_global_var('func_7360')
func_7362_call = mutated_mod.get_global_var('func_7362')
call_10260 = relay.TupleGetItem(func_7360_call(), 0)
call_10261 = relay.TupleGetItem(func_7362_call(), 0)
func_5542_call = mod.get_global_var('func_5542')
func_5545_call = mutated_mod.get_global_var('func_5545')
const_10263 = relay.const([-4.919655,-2.394152,0.553190,2.790336,5.487775,5.295990,-1.610540,1.824591,9.875108,-6.571345,6.308785,1.489609,8.807799,1.484699,-7.756671,-7.461237,-7.419661,-2.653044,-5.938492,-8.129748,9.120782,9.772003,7.601761,-1.736176,9.549968,-0.113506,-0.580486,-7.313283,-3.319726,1.718512,-3.706789,5.210148,-7.690028,3.778476,6.327042,-6.975667,0.281468,-8.841089,5.899381,1.316288,0.522403,4.969044,1.889378,1.151848,9.146656,-2.526356,-2.679986,-0.873511,4.242619,-8.721883,7.072997,-3.970138,-6.740278,6.981994,7.109348,-9.950215,-0.605376,2.487662,2.031936,-3.334689,0.772491,9.738854,-8.163446,-6.771656,0.720931,1.177234,-8.731937,5.729069,-1.827066,-7.849903,9.866981,8.927878,-2.523086,9.089754,0.808435,-1.894333,7.502559,1.832550,9.088952,9.030548,-5.948980,9.034911,-0.312920,9.843058,7.360174,0.377983,-4.117069,3.818293,8.503509,-2.326606,-6.722338,6.561068,-6.879806,7.691450,-2.479252,-7.933145,0.382063,7.893614,-0.926604,3.402733,-3.507080,-8.796784,1.129079,4.233496,9.569074,6.056361,-5.417321,8.697739,7.985613,-8.127181,9.433725,-7.017642,-4.992256,9.211154,-6.206082,7.300856,8.632579,8.166030,2.127303,7.663109,7.092052,-0.917484,4.760631,-4.725168,-8.223914,-1.923983,-0.455298,0.527291,5.066866,6.060014,7.435255,-0.529481,6.820870,6.001185,4.886517,9.453978,0.457619,-2.149201,0.859823,-8.442637,-5.856843,6.196808,7.678571,5.046404,1.377743,1.727426,7.091439,9.113073,5.189301,4.570026,0.393830,5.002018,-3.542170,7.145855,6.340732,-4.941348,3.905482,-5.020372,-4.942519,4.758624,-7.441491,-0.461919,-0.778993,-6.000667,-0.442234,-9.227962,-4.406067,-9.376404,-8.650463,-1.169642,0.869985,7.403866,0.138330,-2.199977,7.226378,3.633398,-7.725633,-8.269246,-1.127006,-2.245752,-6.823414,-1.811469,5.530201,-3.988497,2.334335,6.549782,9.794735,3.224093,-5.129409,-0.042405,8.910026,5.421379,7.554657,-6.788325,7.514816,-1.907537,-1.797885,-7.770893,2.214596,8.691932,-8.208795,-5.983232,9.879391,-5.251730,3.967685,8.854835,-3.334468,-1.610634,-6.329783,4.212173,9.257242,-1.993768,5.305642,6.650549,0.186572,2.347320,1.950058,4.589077,8.860233,-3.474166,-1.794527,8.440657,9.335174,-1.433384,-7.243172,5.042706,3.906259,9.040552,-4.784233,4.307540,4.911043,1.768637,-0.616285,8.265730,-5.065240,-0.708586,-8.930420,-8.605767,3.260831,3.006060,-6.711021,-9.511678,-1.358056,-2.501171,-7.191866,-8.851957,-0.448976,2.861113,-3.916822,-8.463394,-8.297579,5.550571,-1.581271,-0.473988,-8.304160,-1.278734,-8.245060,-7.006118,-5.640162,-7.296182,0.141419,1.696444,-8.657295,-7.673028,2.413020,-3.209816,-9.617807,-6.699538,5.647139,-5.402572,0.242572,-6.157579,4.030357,-9.834285,-2.278186,2.401131,-8.695522,9.513415,0.686771,4.333715,0.968435,-2.901499,-6.669142,-7.874299,-6.844207,9.927376,4.562792,3.406416,4.679665,1.559123,-9.029724,7.426505,6.035212,-6.970332,-6.098709,2.964272,3.783355,0.991950,9.779422,4.922775,0.277317,5.821224,-3.521243,7.764801,-9.192146,2.785765,6.737601,4.636244,-8.485825,9.086612,-1.080943,-6.797050,9.571818,0.908641,4.299865,-8.072935,8.796917,-5.675314,-8.015234,1.770838,-1.349392,-7.731437,8.892545,-9.701939,5.941577,6.437574,-3.847212,2.348519,0.582462,-2.594251,5.554448,4.559191,-0.109985,-7.105943,-2.713789,-4.601405,7.464064,-8.189132,-9.239211,-9.320893,8.114212,3.341331,3.901526,8.881236,6.650335,7.364565,-6.663527,-1.160454,-8.838568,4.449353,-8.950761,7.222813,-4.080427,9.933664,-8.509780,-0.648255,8.252960,-1.482966,-8.164009,8.756123,4.928484,-0.798662,-4.366894,8.026021,-0.082281,3.371134,-8.854223,-2.167907,-3.814539,8.502411,8.780767,-5.037059,-0.882483,7.277377,-5.002323,-3.520270,7.030239,6.963935,8.615547,1.107294,-8.958146,9.170839,1.626074,3.521910,7.875763,9.779336,2.561002,5.652160,-7.050655,-9.993499,9.151844,-1.253343,-0.101021,-2.854934,-0.447540,5.692085,-7.219281,0.045581,-6.512535,-9.925781,-9.882065,-5.507727,0.880994,1.063929,-8.892952,6.895435,-1.180642,-2.939880,9.378755,8.372541,-1.154222,-9.217733,8.214361,8.950230,7.723685,4.236206,3.898397,7.845623,2.059612,-8.895687,-2.898803,1.486058,9.630512,2.353211,5.976677,5.987398,0.067206,-2.189048,1.810338,-0.760391,3.691854,-1.469881,6.332272,-7.484436,-0.491963,-1.109249,-0.629071,-8.729292,-3.414968,-9.296556,-5.422616,7.495149,-3.122780,-6.856593,5.800301,-5.334967,-9.253701,1.195745,-5.299969,-2.362524,-6.728250,7.900959,-0.137878,3.260414,-9.298483,-5.605220,6.865673,-7.121055,-7.952392,3.852354,-9.086012,-8.205942,7.572522,-2.226026,6.057672,-3.829473,-1.231631,-0.361069,7.406748,1.308308,-6.288906,-8.558646,6.210076,9.728258,4.154226,-1.981372,-1.884627,-4.642254,-7.384291,0.317570,8.160836,-1.187173,9.602208,3.362315,-5.422604,-3.767429,-3.889310,-1.639827,-5.707865,6.187725,-6.989094,8.175874,3.981772,-7.647148,-3.019697,9.791594,-9.007618,5.117628,5.122653,-4.348520,5.521061,-4.246716,-8.110057,-6.910311,-8.741447,-0.964276,6.045867,7.131991,-4.053324,-2.615458,6.440576,-0.818112,0.273476,9.906239,-1.089898,-0.495738,0.977908,-6.482048,1.688908,-6.219388,-5.946933,7.870727,-2.951667,-7.629670,-0.936705,0.906132,9.807130,2.468765,-2.240121,6.599563,4.405508,-0.429729,-2.307597,-2.063474,5.708108,2.911910,2.663312,0.694943,0.987331,-7.750891,9.408764,0.197199,-0.920192,6.402898,7.648650,6.670680,2.757653,8.873847,-3.178090,2.366660,-5.969109,-6.402137,5.627428,8.512767,3.250505,5.976161,-7.750098,1.798878,3.751473,6.045474,2.707832,5.618721,-7.947865,-1.776302,-6.090440,1.878895,-8.097744,1.833542,6.995156,-0.973734,-8.547241,7.919529,-7.842737,8.631856,-0.452586,3.149448,-9.790592,-5.714761,3.122786,8.550218,-7.211590,1.387333,-1.097568,3.411715,5.492301,3.305228,1.852074,-4.087443,0.638234,3.811792,-6.285199,-3.750135,-6.673328,-3.691505,3.233404,2.740897,-5.848865,6.507988,8.562124,-0.406312,-6.130822,9.118145,1.826446,-3.311816,9.165392,-5.606021,-7.419980,-9.148123,8.695614,-1.860286,4.025093,-5.366810,-2.999769,-0.928619,-6.002314,6.412511,-1.833909,-3.895982,-7.883505,5.543757,7.212447,-2.876749,-5.186873,-9.872197,4.274652,-9.552594,-9.782901,-8.598694,-3.366493,5.464826,3.856185,-7.143286,4.816502,1.448714,4.991017,7.163809,-4.979578,-7.505709,2.981687,-8.632464,8.632081,0.130015,-4.895736,5.576116,-9.144925,6.185591,6.221962,-6.634190,9.556207,-4.364289,-0.266861,0.401087,4.036811,0.280958,-3.167994,6.223790,-6.388199,9.266620,-7.059390,-7.272284,3.066775,6.433416,6.785003,1.602085,6.991593,5.807180,-1.495672,7.871995,-4.183959,-2.185684,-2.229333,-6.949450,-6.913191,7.436537,-9.709729,6.397093,-1.765563,-0.103634,-6.981001,-3.057606,-6.748110,6.889387,-4.021309,-9.191305,7.467548,8.912064,9.777026,3.338086,5.082719,-8.856906,-4.835046,-2.562743,-3.609287,-4.421057,-5.700748,0.560952,-6.375945,8.349384,2.477337,1.410105,-9.210007,-3.674701,-4.940435,1.209473,5.244124,-4.176056,-9.386749,-7.792961,7.208265,0.567021,1.259649,-1.834627,-9.437716,-6.113980,-7.158563,-1.673401,-6.810387,-7.736234,-5.723051,-9.651854,0.397934,2.472686,7.704936,8.556510,-3.552082,2.190019,2.358039,6.752953,7.415700,7.075465,6.899742,3.138550,-0.049758,3.085763,5.103866,-8.774098,-5.532422,-1.244609,6.069967,-9.277639,3.406278,3.968490,-8.026845,-6.438274,-9.273415,6.757539,5.401744,6.474861,-2.653487,6.001471,1.215192,-1.967838,9.331803,5.579188,-3.019965,1.408781,3.848718,-8.147632,9.172681,-5.294994,-1.350603,-3.335574,-6.427682,-2.786870,-4.510831,-5.249580,8.607643,4.259415,-5.894396,-2.402833,-4.244730,-1.953175,-9.059626,1.211932,1.011871,-4.845716,2.718084,1.789595,-6.379006,-0.106492,8.549684,-1.637642,-6.568209,-6.193271,2.610645,0.724608,-6.050506,8.008577,2.034295,-8.011004,-9.746669,-3.469870,4.940676,5.689432,6.688388,-2.833086,8.125224,-8.904284,-6.179833,-3.458299,6.918341,-4.662900,3.530824,-9.255300,-5.221427,4.973210,9.440709,4.194885,8.365935,7.890445,-7.337586,-5.113043,-4.693572,9.353491,6.149469,-2.578137,-3.067117,-5.112194,0.488315,-7.015960,6.580752,-5.010370,3.375988,-4.828183,4.588498,-6.098728,7.708090,8.440469,1.173970,9.593326,-2.455772,7.944264,-8.231010,-9.121373,-7.021417,8.862845,-9.925736,8.192516,7.658285,-2.962010,5.728934,5.261705,6.135099,-3.260429,3.817468,6.006944,-7.443179,-2.938694,-6.989820,-9.577027,2.236994,9.841797,1.891423,-0.388148,-2.113280,7.797960,2.819186,-2.621609,9.538500,7.768409,-5.608611,-0.451324,6.800480,9.309738,0.772717,-7.610267,-1.933488,-0.169450,-6.351381,-1.271931,-0.946337,-3.291622,-4.002642,-8.034541,-3.020682,5.139970,1.928824,9.788969,-5.732789,-8.329594,-0.840332,4.055437,-1.748314,-1.759400,-4.183620,1.243657,4.755164,-6.381644,3.110935,5.415036,-1.674749,-9.179527,4.857823,-3.011169,6.170688,8.808797,8.229047,-0.654982,2.639800,8.956296,8.705968,-2.818534,-4.966013,0.423987,9.025399,4.297160,1.741077,9.219739,6.744995,-3.942647,2.288613,-3.500376,-7.107076,-4.123035,-1.478146,7.585437,1.734353,-2.660950,-5.684339,9.828013,-4.193670,8.146292,-6.543042,-4.177404,-0.463602,-8.895474,5.039228,0.948984,9.055399,9.423841,4.710416,-3.901472,-6.999291,-6.677849,-7.531312,-4.507768,0.343654,-9.439246,7.090290,6.555566,3.530900,4.542455,0.044755,3.124387,-6.850972,-4.622563,5.551387,-5.281480,7.730123,3.737944,-7.705421,-0.550475,2.472936,-5.464473,-7.200461,8.584058,6.402930,-8.426761,5.141223,-0.973157,-6.884358,5.062512,0.024055,2.777410,-4.053300,-7.236664,-5.483925,-5.619485,5.214716,-9.268119,7.220120,6.641647,-9.708246,7.173033,9.355585,-8.948960,-0.827551,-6.033003,7.718772,-2.744777,-9.813321,8.541440,5.942665,-8.805813,-5.869749,-8.694861,-5.400283,-0.959719,0.334412,-3.733338,6.493678,-6.366806,-8.093788,5.615161,-1.597906,-5.608067,-3.110240,-5.129459,9.267323,-9.347742,9.519465,0.302652,2.323909,3.244434,2.287367,7.860496,-2.920720,-4.206232,-1.597865,-7.716917,3.747803,7.289917,-8.928363,-9.452756,6.565199,1.183167,6.213098,-8.048553,7.945120,-5.591075,-0.031967,1.761171,8.452170,0.293784,-8.409642,9.650934,-5.001893,7.899969,-1.631336,4.473837,3.832323,-5.196137,8.015317,2.929069,-8.467185,-5.296133,4.006761,6.950340,5.148334,4.111237,4.371558,-4.446080,3.728640,-8.788196,1.455101,8.278273,2.024458,7.829491,5.790568,6.037972,-7.967138,-3.332141,0.929099,8.964543,-2.055454,-9.318831,9.193775,-1.057846,8.848745,-6.860532,-7.281192,1.283083,1.173465,-1.797682,9.510170,8.356252,8.064717,9.098916,1.141851,-0.769421,8.292144,6.096362,1.251869,-2.153676,4.732929,6.030299,-1.786632,5.308031,2.012030,-3.352499,3.925655,8.399525,7.400010,2.343631,9.177406,4.198096,7.901030,8.245253,-1.882208,3.902265,-0.215232,3.172564,3.773762,-8.473905,-1.236786,9.133069,-2.169898,4.655112,6.571890,8.775733,-7.892844,-5.176624,9.904446,-2.035329,8.805451,4.323924,-2.690211,-3.743159,3.005229,-2.250931,-6.016865,7.520367,-6.138190,-0.220353,-9.551975,-2.401985,-6.479308,-7.618587,-8.513118,8.913451,-8.853081,1.432109,7.612642,-7.285311,2.786093,3.194093,-7.914175,-5.073486,3.896784,-9.391805,-0.201218,-6.648267,6.982601,1.665164,7.571214,1.279066,7.457402,-1.166350,4.409947,-7.544246,8.087713,-8.762867,-4.260130,0.068571,4.757222,0.760158,-3.335413,8.235283,-4.338595,-7.505304,6.866557,6.171887,-4.674244,-6.804979,-3.425267,-0.144362,-5.477225,4.122327,-6.365559,-0.086071,7.077030,7.274097,6.471338,0.298519,5.447569,7.277996,-9.774122,-9.983496,-7.972989,-7.462232,9.621221,-7.784910,3.622799,-5.297259,-0.223821,2.138146,0.645321,-3.163241,7.330617,-5.318353,2.760261,-9.086781,9.552085,-5.498848,2.741886,-3.792852,-4.159819,-9.611030,2.479384,0.320726,3.423139,6.061549,4.723835,7.619940,4.076692,-9.961640,8.257357,-0.501612,4.617435,-7.292534,6.693329,0.905834,9.547329,8.711413,-3.318925,0.677662,-4.580307,-5.342113,-0.419020,-3.668858,-9.060780,-8.366524,6.289378,-0.854730,9.492486,8.868196,9.366740,-1.615053,-2.128936,9.989264,-9.047453,-3.151933,8.095628,7.571543,-0.500506,-9.574954,-5.765075,-1.520376,0.009771,-5.626226,7.327287,-9.757159,-8.415164,-7.303518,-3.183934,5.897487,-0.307479,3.186852,1.433952,0.786253,4.844237,-3.442628,-1.956539,7.264287,0.526598,-0.826071,-2.185965,6.426085,-2.773125,9.963843,-7.244252,0.783781,5.122996,-0.122383,4.427493,-1.588812,2.627256,-1.668771,-0.993163,-7.614506,6.481956,-3.722362,3.524860,-3.069811,5.776670,-0.810962,0.761451,-6.586195,5.142729,1.301162,-7.888490,8.949123,-5.035331,8.717832,9.302887,-4.472290,9.139330,-9.551087,-6.869360,-3.798076], dtype = "float32")#candidate|10263|(1280,)|const|float32
call_10262 = relay.TupleGetItem(func_5542_call(relay.reshape(const_10263.astype('float32'), [1280,])), 1)
call_10264 = relay.TupleGetItem(func_5545_call(relay.reshape(const_10263.astype('float32'), [1280,])), 1)
func_6508_call = mod.get_global_var('func_6508')
func_6509_call = mutated_mod.get_global_var('func_6509')
call_10295 = relay.TupleGetItem(func_6508_call(), 0)
call_10296 = relay.TupleGetItem(func_6509_call(), 0)
func_9945_call = mod.get_global_var('func_9945')
func_9947_call = mutated_mod.get_global_var('func_9947')
call_10297 = func_9945_call()
call_10298 = func_9945_call()
func_9989_call = mod.get_global_var('func_9989')
func_9991_call = mutated_mod.get_global_var('func_9991')
call_10306 = relay.TupleGetItem(func_9989_call(), 0)
call_10307 = relay.TupleGetItem(func_9991_call(), 0)
output = relay.Tuple([call_10260,call_10262,const_10263,call_10295,call_10297,call_10306,])
output2 = relay.Tuple([call_10261,call_10264,const_10263,call_10296,call_10298,call_10307,])
func_10317 = relay.Function([], output)
mod['func_10317'] = func_10317
mod = relay.transform.InferType()(mod)
output = func_10317()
func_10318 = relay.Function([], output)
mutated_mod['func_10318'] = func_10318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6676_call = mutated_mod.get_global_var('func_6676')
call_10331 = relay.TupleGetItem(func_6674_call(), 1)
call_10332 = relay.TupleGetItem(func_6676_call(), 1)
output = relay.Tuple([call_10331,])
output2 = relay.Tuple([call_10332,])
func_10340 = relay.Function([], output)
mod['func_10340'] = func_10340
mod = relay.transform.InferType()(mod)
output = func_10340()
func_10341 = relay.Function([], output)
mutated_mod['func_10341'] = func_10341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7849_call = mod.get_global_var('func_7849')
func_7850_call = mutated_mod.get_global_var('func_7850')
call_10387 = relay.TupleGetItem(func_7849_call(), 0)
call_10388 = relay.TupleGetItem(func_7850_call(), 0)
func_6508_call = mod.get_global_var('func_6508')
func_6509_call = mutated_mod.get_global_var('func_6509')
call_10401 = relay.TupleGetItem(func_6508_call(), 0)
call_10402 = relay.TupleGetItem(func_6509_call(), 0)
output = relay.Tuple([call_10387,call_10401,])
output2 = relay.Tuple([call_10388,call_10402,])
func_10405 = relay.Function([], output)
mod['func_10405'] = func_10405
mod = relay.transform.InferType()(mod)
output = func_10405()
func_10406 = relay.Function([], output)
mutated_mod['func_10406'] = func_10406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_10425 = func_7874_call()
call_10426 = func_7874_call()
func_9458_call = mod.get_global_var('func_9458')
func_9459_call = mutated_mod.get_global_var('func_9459')
call_10434 = relay.TupleGetItem(func_9458_call(), 1)
call_10435 = relay.TupleGetItem(func_9459_call(), 1)
output = relay.Tuple([call_10425,call_10434,])
output2 = relay.Tuple([call_10426,call_10435,])
func_10436 = relay.Function([], output)
mod['func_10436'] = func_10436
mod = relay.transform.InferType()(mod)
output = func_10436()
func_10437 = relay.Function([], output)
mutated_mod['func_10437'] = func_10437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6894_call = mod.get_global_var('func_6894')
func_6895_call = mutated_mod.get_global_var('func_6895')
call_10466 = relay.TupleGetItem(func_6894_call(), 0)
call_10467 = relay.TupleGetItem(func_6895_call(), 0)
func_8627_call = mod.get_global_var('func_8627')
func_8629_call = mutated_mod.get_global_var('func_8629')
call_10469 = relay.TupleGetItem(func_8627_call(), 0)
call_10470 = relay.TupleGetItem(func_8629_call(), 0)
func_6894_call = mod.get_global_var('func_6894')
func_6895_call = mutated_mod.get_global_var('func_6895')
call_10491 = relay.TupleGetItem(func_6894_call(), 0)
call_10492 = relay.TupleGetItem(func_6895_call(), 0)
func_9782_call = mod.get_global_var('func_9782')
func_9785_call = mutated_mod.get_global_var('func_9785')
var_10516 = relay.var("var_10516", dtype = "float32", shape = (945,))#candidate|10516|(945,)|var|float32
call_10515 = relay.TupleGetItem(func_9782_call(relay.reshape(var_10516.astype('float32'), [15, 9, 7])), 0)
call_10517 = relay.TupleGetItem(func_9785_call(relay.reshape(var_10516.astype('float32'), [15, 9, 7])), 0)
uop_10520 = relay.atan(var_10516.astype('float64')) # shape=(945,)
func_12_call = mod.get_global_var('func_12')
func_15_call = mutated_mod.get_global_var('func_15')
var_10530 = relay.var("var_10530", dtype = "float32", shape = (1, 80))#candidate|10530|(1, 80)|var|float32
call_10529 = relay.TupleGetItem(func_12_call(relay.reshape(var_10530.astype('float32'), [8, 2, 5])), 0)
call_10531 = relay.TupleGetItem(func_15_call(relay.reshape(var_10530.astype('float32'), [8, 2, 5])), 0)
func_7608_call = mod.get_global_var('func_7608')
func_7609_call = mutated_mod.get_global_var('func_7609')
call_10535 = func_7608_call()
call_10536 = func_7608_call()
func_7074_call = mod.get_global_var('func_7074')
func_7077_call = mutated_mod.get_global_var('func_7077')
call_10546 = relay.TupleGetItem(func_7074_call(relay.reshape(var_10530.astype('float32'), [80,])), 2)
call_10547 = relay.TupleGetItem(func_7077_call(relay.reshape(var_10530.astype('float32'), [80,])), 2)
func_8451_call = mod.get_global_var('func_8451')
func_8452_call = mutated_mod.get_global_var('func_8452')
call_10552 = relay.TupleGetItem(func_8451_call(), 1)
call_10553 = relay.TupleGetItem(func_8452_call(), 1)
bop_10562 = relay.bitwise_xor(uop_10520.astype('uint32'), relay.reshape(var_10516.astype('uint32'), relay.shape_of(uop_10520))) # shape=(945,)
output = relay.Tuple([call_10466,call_10469,call_10491,call_10515,call_10529,var_10530,call_10535,call_10546,call_10552,bop_10562,])
output2 = relay.Tuple([call_10467,call_10470,call_10492,call_10517,call_10531,var_10530,call_10536,call_10547,call_10553,bop_10562,])
func_10569 = relay.Function([var_10516,var_10530,], output)
mod['func_10569'] = func_10569
mod = relay.transform.InferType()(mod)
mutated_mod['func_10569'] = func_10569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10569_call = mutated_mod.get_global_var('func_10569')
var_10571 = relay.var("var_10571", dtype = "float32", shape = (945,))#candidate|10571|(945,)|var|float32
var_10572 = relay.var("var_10572", dtype = "float32", shape = (1, 80))#candidate|10572|(1, 80)|var|float32
call_10570 = func_10569_call(var_10571,var_10572,)
output = call_10570
func_10573 = relay.Function([var_10571,var_10572,], output)
mutated_mod['func_10573'] = func_10573
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10608 = relay.const([[[2.023678,-1.186838,0.355549,-7.605680,1.915938,-7.378376,-1.382591],[-2.979348,4.241255,-7.711404,1.483821,-4.741329,-1.529957,9.626027],[-8.937984,-8.395461,-1.936668,-8.038301,-7.170373,1.425769,-0.068352],[0.933188,0.919230,3.028859,-4.995905,-8.069811,-2.788195,9.689280],[-8.303298,6.212871,-0.604903,0.380721,-9.147942,-9.179616,-7.125392],[5.994698,0.600639,8.733312,-9.191662,4.614029,-8.833982,-6.139769],[-5.522651,-9.575054,-3.452023,1.640701,2.979852,0.204253,-5.991239],[-3.496392,-7.236226,-1.829831,-1.910218,-1.514242,-0.400203,7.354863],[1.606208,-6.295064,-8.426034,2.646327,-5.099768,5.262197,9.622450],[7.479969,-2.580060,-4.638251,9.491118,-9.788201,-5.954899,-9.872224],[-5.792750,1.846157,-0.154892,0.115297,-6.676080,1.223270,0.919333],[-2.091648,-8.243070,-1.677661,-7.331474,1.202737,3.873846,5.704991],[-1.361597,8.221560,-8.127062,-7.021264,-4.132415,2.965025,-8.606068],[8.734536,3.929363,-1.753003,0.032872,-9.606651,9.931451,-8.028658],[9.715499,-7.632325,3.064006,-0.809514,7.535143,-7.809071,-5.308619]],[[-5.436189,6.207359,-7.867505,-0.585671,-6.812520,3.575383,6.350939],[-8.640005,-8.971087,4.919679,7.739920,-0.483066,-1.238745,-8.516516],[6.355916,-4.254312,-6.049170,6.418336,-5.242331,3.790636,8.218941],[1.020220,-9.133945,-1.079730,3.824240,1.889926,9.588115,-4.167001],[5.246112,-6.662976,1.550540,9.739121,-5.568758,-1.639237,-9.796192],[7.036597,8.788129,-2.257936,-3.169913,-8.326933,-5.210359,-2.389410],[7.675601,-8.735734,-0.949316,3.146297,7.131564,5.597863,3.065497],[1.408873,7.504856,5.502350,7.709240,-1.848896,9.809289,-5.984975],[6.953790,3.673634,3.740948,9.297883,-0.703053,-9.306479,9.431415],[-0.700342,8.155468,-0.270670,-3.545503,6.756330,7.877807,-5.409307],[-6.289545,5.090142,9.584336,-8.461509,-1.094838,-0.187625,-2.812203],[-5.314506,-6.515650,-7.236812,-5.422400,3.358262,6.906506,1.049348],[-1.365660,3.710259,-3.194117,-5.636674,5.770628,-5.351148,3.200458],[-8.546863,9.609549,7.438676,0.820614,-6.087309,4.621001,4.198290],[-2.138486,7.554930,-4.783874,-4.378355,9.870062,-9.560622,1.059715]],[[-1.841512,-6.049875,8.953780,-0.850617,7.642062,-6.484695,5.127864],[5.119407,-3.606597,4.073600,0.001613,-3.743099,-8.182745,-9.194729],[-5.467430,-4.224358,-4.777739,-9.853896,-1.377263,8.516275,-6.840348],[1.099944,4.847821,-7.569671,6.956049,4.174990,2.680751,-0.661740],[-9.626864,8.522077,-8.349111,5.259808,-3.049422,-8.960077,-3.027406],[-4.973064,-8.512442,2.891621,0.880255,8.843623,9.530111,8.574562],[6.068939,7.197633,-3.247552,-3.681340,-9.431777,-2.153720,3.466027],[2.005421,-4.601148,1.218462,-2.084366,-8.425795,-6.362582,-0.609938],[-8.595758,5.042589,8.270728,3.299404,9.719316,-9.368680,-7.987798],[-1.849273,-3.383130,4.282097,0.097766,9.557202,6.204922,8.301809],[9.952253,-4.794926,5.077391,8.481460,-1.161293,2.990748,9.667518],[2.872210,-9.063967,9.620174,5.104525,5.300092,3.560380,-9.975374],[-4.298263,9.636557,5.593205,8.002491,5.672752,0.047347,-2.364468],[2.949121,9.528653,5.022578,-8.174653,-7.101341,4.623475,-5.953446],[-1.146847,-4.191968,8.343863,-4.828790,1.346358,8.726496,7.572515]],[[-4.061631,9.382497,1.189535,-7.409180,-3.089752,3.832237,-8.823141],[-1.245181,-1.406731,-9.098901,6.996490,-2.603610,-7.198802,-6.590523],[-0.034069,5.432753,7.418365,-3.846310,1.612076,0.781320,8.122151],[-1.627883,9.798450,-6.592101,3.343593,-5.829051,-5.530076,-1.623893],[-4.558109,3.910012,-6.446615,3.078266,6.075074,-9.621131,-0.647439],[4.419202,3.264263,-4.189815,-8.389116,-1.174395,4.246149,9.415398],[4.665743,-5.608309,-3.552517,-6.128842,-1.752373,-8.530104,4.383901],[-5.752865,-8.057136,2.593932,3.908800,-5.081146,-1.344865,8.235038],[-1.486462,-7.229538,0.074815,3.143210,-9.579203,-5.739210,-3.155885],[-6.955526,-5.026734,0.306444,-8.421233,-3.044039,-3.767277,-9.992320],[2.673399,-6.276234,-5.273768,6.106545,-4.547281,2.913081,-6.185926],[4.203455,-2.164655,-3.359073,1.452034,7.335337,-6.398073,4.837990],[-3.861706,6.976898,-2.621042,4.147531,-8.629224,-7.823445,-1.606358],[7.740198,1.795495,6.548752,5.909455,-6.978007,5.210108,-7.391636],[6.389771,3.249339,9.494877,7.047529,-5.291672,-7.730179,9.181723]],[[7.592649,-2.709095,-5.320683,-0.120619,0.475018,5.829840,-1.556615],[2.865109,-9.866597,-0.028271,6.544476,5.796697,6.603518,6.931223],[-8.565680,-4.392734,-2.208704,4.351164,6.613056,-0.331043,9.515498],[-8.776081,3.348038,-8.132694,8.289277,3.365882,9.117378,8.753440],[-3.273912,-6.160677,-6.158570,2.232606,-3.958498,5.854686,-8.478266],[-2.458674,-6.505049,9.835322,5.250669,0.753569,-2.848614,4.455283],[4.432155,1.659089,7.618299,1.727200,-0.058976,0.706849,6.427788],[-5.018260,-0.481034,3.935659,-3.389480,-0.627095,-9.422465,-6.364460],[-7.958378,-2.595346,-1.547018,-4.213241,-6.288314,2.335464,-1.303273],[5.430500,-6.759557,6.710575,-2.888248,3.686329,1.714767,-0.225098],[5.612265,-1.204100,-8.169788,-4.172731,-1.178190,8.636366,-5.748332],[-7.015198,2.542410,-7.986903,7.288484,-2.997398,-8.187830,-2.347937],[-5.919332,5.636505,9.549045,9.697819,1.338705,4.587454,-6.470307],[-3.939489,1.093963,2.444045,-2.860271,-3.748334,8.858696,7.944703],[-9.438016,1.913635,5.787943,8.968181,2.729140,-4.901065,-5.315820]],[[-5.528718,-2.280215,7.669285,0.309942,-0.401608,-4.380446,-6.159604],[-5.492258,6.937502,5.788822,1.248552,7.129444,-7.606871,3.564149],[7.283219,-3.864868,7.010213,-2.932246,-0.732464,5.022249,1.132305],[-5.676470,-9.327600,-6.915999,1.544460,-6.194190,-9.475361,8.615578],[-5.233439,5.835451,-1.723396,-1.663990,5.455407,-6.370964,-1.075475],[-3.611673,3.480934,0.832717,6.712254,6.197834,-8.562699,8.622829],[-2.964138,0.942536,-4.092531,-2.939245,-6.055184,-6.078515,-7.872777],[0.832570,-5.698746,-8.536808,-1.660058,9.445960,1.930264,2.905564],[7.459470,-4.241959,1.345384,-3.847068,9.093987,3.777104,5.072825],[9.595223,-9.367289,6.701665,-0.105910,2.789816,1.570660,8.338211],[2.825718,-0.712652,5.141189,-9.712827,-1.744257,-1.516176,-4.991563],[0.288628,5.400141,3.841317,-8.037052,6.634908,-8.287762,6.866182],[5.297449,0.640775,1.789296,8.647985,-3.840956,-2.311370,1.997566],[-8.679444,-7.907874,7.517504,-5.221090,6.996404,3.929360,-6.646950],[8.101079,-3.425363,-8.991853,-3.410555,4.162475,-6.856855,9.520146]]], dtype = "float32")#candidate|10608|(6, 15, 7)|const|float32
uop_10609 = relay.log10(const_10608.astype('float32')) # shape=(6, 15, 7)
output = relay.Tuple([uop_10609,])
output2 = relay.Tuple([uop_10609,])
func_10622 = relay.Function([], output)
mod['func_10622'] = func_10622
mod = relay.transform.InferType()(mod)
output = func_10622()
func_10623 = relay.Function([], output)
mutated_mod['func_10623'] = func_10623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_10664 = func_7702_call()
call_10665 = func_7702_call()
var_10674 = relay.var("var_10674", dtype = "uint64", shape = (28, 48))#candidate|10674|(28, 48)|var|uint64
bop_10675 = relay.logical_or(call_10664.astype('bool'), relay.reshape(var_10674.astype('bool'), relay.shape_of(call_10664))) # shape=(28, 48)
bop_10678 = relay.logical_or(call_10665.astype('bool'), relay.reshape(var_10674.astype('bool'), relay.shape_of(call_10665))) # shape=(28, 48)
output = bop_10675
output2 = bop_10678
func_10690 = relay.Function([var_10674,], output)
mod['func_10690'] = func_10690
mod = relay.transform.InferType()(mod)
var_10691 = relay.var("var_10691", dtype = "uint64", shape = (28, 48))#candidate|10691|(28, 48)|var|uint64
output = func_10690(var_10691)
func_10692 = relay.Function([var_10691], output)
mutated_mod['func_10692'] = func_10692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6508_call = mod.get_global_var('func_6508')
func_6509_call = mutated_mod.get_global_var('func_6509')
call_10736 = relay.TupleGetItem(func_6508_call(), 0)
call_10737 = relay.TupleGetItem(func_6509_call(), 0)
func_6965_call = mod.get_global_var('func_6965')
func_6969_call = mutated_mod.get_global_var('func_6969')
var_10742 = relay.var("var_10742", dtype = "float64", shape = (2028,))#candidate|10742|(2028,)|var|float64
const_10743 = relay.const([-0.560340,-5.241774,2.577704,-0.231290,-5.224013,-0.352804,-8.622987,-4.930819,7.821336,-7.539288,-1.428143,-3.812194,8.721866,-3.895710,6.004207,2.951012,4.810131,-4.764100,7.418633,5.425190,-8.856314,1.760360,-1.609590,-9.430074,6.629073,8.578587,1.641848,-5.763437,-3.306189,-2.731492,1.387583,5.798677,6.389301,5.487382,2.736859,-2.608147,5.822296,-7.664821,6.711099,1.073844,5.791147,9.768033,-1.313090,1.534266,-3.086723,9.327555,1.124578,-5.132029,-8.931583,-2.741841,8.319855,9.458253,-5.236642,-9.974526,-2.874085,4.376582,6.470075,2.652064,-0.995774,-4.007088,-7.107754,-0.058848,7.810177,-3.045044,0.832904,9.789126,5.178008,5.827548,-7.603812,5.664652,9.239044,-9.200846,8.813084,-7.911686,-2.528301,8.222011,-9.333391,-5.150845,-6.476110,3.432606,5.204817,-1.353849,0.822992,5.691694,-6.838503,3.893332,9.955534,-7.367132,0.069397,-0.121311,4.911150,-7.537138,-4.813030,8.836399,4.058754,-1.450068,7.684526,8.732834,-4.745327,-8.423990,6.363193,-6.751478,9.937144,-4.293035,6.350938,-9.532939,-7.396620,0.972940,-3.082410,0.285708,0.628220,-5.385505,1.092632,-4.976978,-5.933137,-8.546034,-4.764357,-2.462642,0.590113,-5.162499,-8.158532,9.855077,4.107491,7.569080,-7.255841,2.580800,-3.544414,-7.979284,7.759276,4.953112,-8.643369,4.347018,-2.598191,-5.717893,-8.012822,-0.111156,-4.989696,6.624881,-6.035802,2.793604,-6.534698,4.934675,-0.023001,-6.489523,-5.586803,-2.689923,4.616029,5.380370,4.023258,8.979377,-0.319973,-0.146230,2.766804,-9.197740,-2.432605,-4.230719,-0.198003,3.126545,-7.146940,-1.449268,0.111655,7.066649,-4.401028,-6.274482,-1.335304,-4.960965,-4.901362,7.482834,-7.203723,6.373361,4.171627,1.522264,7.855584,6.270170,-9.937571,-7.310192,-3.939016,-4.896958,-0.076155,-8.829396,-1.371675,1.258962,-8.694426,9.009544,-1.334503,5.007154,-8.842154,2.654308,-2.955116,6.281368,-7.505769,-9.475853,9.659598,-1.581054,-9.152452,8.940394,0.836888,8.266342,4.978910,-4.328884,1.757784,-5.125562,3.805861,-5.252939,-8.033717,-6.794162,2.436580,1.279074,-9.597139,3.318758,-7.416745,6.125552,5.616509,0.606636,9.639927,3.623426,-2.353297,6.520978,8.847592,3.592382,3.907605,4.534925,-9.004632,-0.854059,-6.022424,0.907264,-9.085927,-7.586477,0.442200,-6.434332,8.212909,-6.854762,7.781062,4.635488,1.218713,-0.150651,9.618479,7.492922,-2.867697,-2.243727,5.564635,-8.642922,-8.096548,-6.377637,-1.589713,8.906815,-6.979939,5.953555,9.668870,-7.572674,3.125094,0.001924,-1.437965,0.227176,-3.576223,9.824175,2.717296,3.280065,-0.968103,-7.834322,3.110778,3.259035,8.644436,2.546668,6.156209,7.182300,5.769776,4.493582,7.942489,-5.783439,-0.672074,-2.948389,9.889669,-0.579639,7.861362,0.476665,-7.369968,-1.503862,7.463696,-9.120420,7.902135,-6.773227,-5.739768,6.403891,-9.055780,-1.555246,2.472125,-5.100267,-3.811994,3.209932,2.070679,-9.962899,9.886031,3.182032,0.373522,8.770546,8.984178,0.057334,-7.221683,-3.969037,-6.997571,3.879474,6.997882,5.981813,-1.393599,3.588290,6.587103,7.575270,-8.535673,9.137781,-3.637897,-7.588240,-1.241493,-1.284444,-1.532843,8.120442,2.895604,6.974472,9.521148,-2.401838,8.800179,7.820401,-6.906624,8.860015,-4.344659,-6.255447,4.337513,-5.246920,-8.795049,-7.522582,9.620675,3.382923,2.000177,2.702345,4.888413,-2.827310,5.522665,5.335527,2.314667,-7.525212,-4.461989,-3.343410,-8.010763,3.933319,5.132389,2.406290,-5.228926,1.340632,2.173018,-1.733665,4.960998,2.711601,-5.326295,-8.357383,6.514624,8.255790,9.739028,-7.486275,0.342771,-4.091951,1.361684,2.142413,-1.276931,3.843757,-2.320233,0.182108,0.410566,-1.933905,7.225951,8.857233,-0.176016,-7.028607,-6.599267,8.607989,2.202541,9.303899,5.148245,-8.501799,2.512945,-4.026436,8.049203,7.817095,-9.773427,-2.959439,-5.355631,2.371366,1.839739,-8.915643,-5.328009,2.252580,5.405965,-4.245662,1.153043,7.823059,8.771057,-4.153493,9.934774,6.044482,-7.390554,4.918805,6.986587,0.183350,6.551200,-8.384106,6.468394,3.381252,-8.049122,7.430891,-3.195059,5.208351,-8.748933,-8.071787,7.270731,-9.872713,1.782102,7.471610,-2.551447,7.045587,-0.587866,5.359611,9.820815,7.836041,-5.107542,-8.938639,9.424980,-7.708594,6.376684,3.244526,-7.556968,-4.974321,5.826552,-1.174703,-2.348778,5.767664,-2.569714,-7.907494,1.915320,2.586544,6.982188,-9.965065,6.047583,-8.962857,9.115427,-5.881914,9.167909,-2.963109,-8.391003,-5.871280,-3.489149,7.025045,-0.429409,7.893585,8.601502,-3.212828,-2.409139,4.142459,3.065618,-5.043537,1.788316,8.522370,-9.799018,-7.807942,-0.771658,3.838840,-2.051379,8.752941,1.706981,0.883600,-0.959079,7.999833,-0.356606,-9.725071,-3.513336,9.834025,7.924125,0.204289,-7.693382,-8.237867,-0.649303,0.742025,6.138681,-1.534177,4.847627,4.659201,9.647867,-8.334771,-7.753775,3.414273,-1.347623,-9.104825,4.000546,7.343020,2.032386,6.803617,5.786097,1.989377,9.959930,6.391866,1.506689,-2.569956,3.726082,-9.290583,-3.598489,1.658227,-3.340567,-9.487505,0.284089,9.825975,-7.548980,-9.929642,-4.653257,-3.291980,3.891496,-2.484741,-6.392063,9.172812,-2.420475,6.264486,-2.356871,1.120167,0.794827,-2.861737,9.075262,7.643981,-0.815333,2.593379,1.030842,4.177931,-1.864342,2.805119,-2.307742,-5.540574,8.594306,1.888552,-1.256406,-6.389447,4.845455,-1.438260,1.934971,-5.939211,-7.332340,-5.058498,5.997613,-8.659593,3.130665,-3.923258,9.830362,-5.010193,8.675802,-6.839509,-5.280793,2.639708,9.600040,-6.870182,1.613347,5.353050,2.952026,-0.943987,0.632048,-7.131369,-5.823749,-1.874827,7.138874,-3.878687,4.520777,6.776422,-7.523177,3.752377,-2.541961,-9.479798,-5.416515,3.704455,4.194928,-1.074843,6.985344,4.622934,0.755222,1.559381,9.975719,2.624938,-6.355263,-7.968155,9.173821,-1.874282,-8.110627,-4.889799,-5.180701,-6.715841,0.391011,-6.661091,0.337665,-9.219854,-5.356584,9.587548,-1.192952,-5.239262,8.029621,5.292442,-7.353672,2.773473,-6.474511,5.362110,6.200266,-1.263388,-7.398325,0.440077,-6.895068,-9.942743,9.490727,-8.462198,5.537246,-0.154745,-6.886561,2.635418,-4.289342,8.259599,-8.236518,8.823768,-3.783400,-7.827554,3.498445,-0.447955,-1.587054,-4.758038,-8.474884,5.793849,2.924093,5.585891,6.688874,-2.173871,4.578100,-8.490348,-7.709557,0.697359,8.144272,5.417369,-9.896474,-4.396042,-6.809775,-0.186404,-2.877229,-7.570917,-7.664376,2.860600,7.693132,6.253666,4.441999,-8.221857,6.386396,-9.543278,-9.158628,4.196473,0.231374,9.717362,-3.173029,-5.642668,5.392797,-2.056649,-2.175241,5.507096,9.210260,-2.428423,-7.599903,-5.163665,0.970911,-4.344317,-4.107913,-2.668635,3.015128,-7.776296,2.170584,-4.308726,5.746773,-3.414540,-0.464399,7.288492,-5.375293,-4.630876,4.595467,5.123037,8.951817,-4.575450,1.063190,3.954501,-1.231783,1.281476,3.061786,-8.887139,-3.175287,-1.320203,-9.882450,0.113835,-2.096441,2.089292,-0.141805,-6.810793,-2.957056,-0.976214,4.347650,-7.875327,0.283354,8.780777,-8.435314,2.831518,2.476314,4.973470,-2.472198,-7.784433,9.165561,-4.175533,-0.507999,5.224211,0.782263,4.253760,-9.727375,-3.956378,3.676367,-6.472698,0.487842,-4.300141,3.526463,-8.597355,-8.732099,-3.820608,-8.155794,-9.313045,1.129671,4.722537,5.915283,7.599653,-8.431168,2.283856,-5.081940,5.750817,7.264422,-9.988946,-4.988675,-9.633535,9.859996,-5.335235,5.673514,0.200250,-3.412614,3.663521,1.407930,2.593255,-6.184707,4.704092,-4.687153,-7.447267,-5.940058,1.679623,8.823127,-3.433883,-8.468114,-1.221030,6.611840,3.932631,-9.673056,2.148504,6.441303,-2.614140,6.773399,-9.458879,-6.504628,8.044151,4.210994,7.588517,5.720602,-6.008626,-7.677853,2.702439,-0.931389,-5.456602,-4.709357,-1.509406,-7.075211,9.568622,-0.976431,-5.985242,3.980712,4.164211,-7.765362,4.862646,-8.634940,1.644763,3.234324,-6.308683,0.575705,-1.881720,-1.575153,-5.362347,3.901002,-3.297212,3.640618,8.545543,0.614704,-7.205408,4.838799,0.858915,3.997263,4.396331,5.637328,-7.738201,-2.769024,-1.758772,8.064864,1.816227,9.452287,-7.061618,-8.849849,6.726934,-8.867450,4.773140,9.376139,-2.453680,-1.132532,5.726352,1.860979,-4.266370,5.668669,3.015653,1.575348,3.990301,-0.632245,-5.907685,8.370106,-7.533160,8.820511,-8.041050,-8.946456,5.036406,-4.660594,7.293873,-5.427981,4.170442,-4.927865,-9.547762,0.025025,-5.405334,4.300115,4.216434,-2.346674,-6.864552,5.336935,1.612799,9.542482,-3.134902,8.931759,-3.631213,-2.939128,7.131916,-1.750520,-7.631628,-5.222938,8.533282,2.626828,-0.241113,7.296394,1.369658,4.695252,-4.402616,9.600148,-7.444549,-7.321329,-5.938381,-7.338704,-3.022855,5.557560,9.150393,4.083682,5.531995,0.198171,4.432712,0.193391,8.502769,5.629668,7.288341,7.864651,6.231747,-5.272025,-0.089026,-9.103357,0.040771,4.827328,9.512689,-5.278385,-2.925534,-5.252827,-3.000651,-1.060404,7.578894,3.473938,2.284797,-5.995075,8.778426,-0.439363,-4.254428,-9.534353,2.250519,-4.377557,-8.719322,8.542243,-1.048046,-5.085726,4.637601,-0.455868,-4.341832,-6.726314,-2.437114,5.000438,8.755235,0.193813,-4.805241,-0.950177,-8.872532,-0.175730,3.466546,0.561550,3.350101,-1.776370,-5.537616,0.846509,-6.307472,-2.899162,6.815441,-9.402039,-2.713787,-9.749128,3.271713,-9.762481,4.936787,4.803785,-5.242424,-2.110614,-4.179677,8.256830,0.977100,-5.646789,-6.386088,8.181614,-4.469427,-7.768662,1.999248,4.319174,8.419231,-6.386223,-2.091532,8.761264,-2.759063,-1.036339,-0.783729,-6.353889,5.227100,-7.967566,8.844487,1.139299,6.313284,-8.364159,-1.166933,-5.927014,2.991815,-3.632436,-1.187114,3.525389,4.054034,8.407120,2.413000,1.177858,-7.960616,-1.644329,9.425693,8.680784,9.019892,-5.933321,7.545074,-7.806197,8.012293,-8.403275,-9.753940,6.029932,-7.352424,-4.064897,-0.008173,-5.454422,7.862576,-8.274087,-7.872640,6.850573,-4.763188,8.422276,-7.907649,-1.121544,-4.486660,6.301496,-0.905054,-2.924085,-9.436876,-0.674084,-3.252862,2.042667,5.086466,5.905032,-4.081021,-7.772181,-8.222995,-3.980775,5.189313,-4.999112,-5.120006,-7.813480,-7.466279,1.116344,8.129990,3.082168,-0.668489,4.826474,2.247151,9.635434,-4.488688,-7.266797,0.265363,9.118746,7.165616,-5.221048,-2.346169,8.644416,2.190151,7.173131,-0.753471,-8.884358,1.869160,6.624804,-1.801843,-6.489628,-6.162733,4.033630,-9.512449,-0.203259,8.709030,2.313454,7.207537,-9.191277,9.806134,-5.933999,9.754694,-1.670291,-8.815115,0.432674,-3.061450,2.275670,-7.151106,-1.286068,-2.422577,-9.563118,6.389236,3.283187,-5.474333,3.151254,4.876162,-4.516099,-0.004038,5.620293,-3.384199,-5.314386,9.053314,6.243120,-5.785605,-2.634931,-1.315322,-3.110662,-6.805035,-9.980522,-7.471770,-8.599857,7.325112,-1.553556,0.957393,3.601919,-4.935684,-4.383269,2.503018,8.788567,8.495324,-7.601060,-1.358130,8.607051,-7.905104,-9.103431,5.123065,-5.257128,1.408497,-4.170421,3.126692,-9.188200,9.209468,4.713696,-2.715512,2.846606,-7.650576,2.281837,-4.855953,6.054289,-3.481483,8.199730,-9.397732,8.688737,-9.220616,-3.241664,0.129317,8.630521,6.490634,8.670434,7.396461,4.160790,8.096400,3.475414,0.784294,-0.241695,-5.855285,9.893691,-5.083066,-5.029805,-7.323861,-1.733045,8.847202,6.399774,-4.774528,-3.032074,6.425936,2.523664,-1.362513,-4.033698,3.077238,5.822486,2.153421,-6.377097,3.922624,-9.135153,5.373336,0.362597,3.497153,0.723743,-8.505519,7.441905,4.426536,-0.921048,1.492377,4.950082,7.715974,-6.560429,2.489240,-7.562571,2.327167,-3.214413,7.212265,4.161022,-1.935630,-8.118635,-4.884032,-7.114617,-1.706301,9.844481,-6.453916,-9.677530,-6.653161,-7.637437,8.660465,-9.534541,0.536998,2.031537,4.118336,7.336279,0.902217,-3.243572,-6.800727,7.580544,3.805762,-5.948909,5.820494,9.019209,-5.069901,7.816654,4.685830,-8.659770,5.314655,6.333558,3.261630,-6.748509,6.379569,-5.979859,-5.166050,-4.145113,7.610777,9.118643,-0.832263,-4.562591,-6.027222,-9.658879,4.624185,-1.511648,1.054591,1.638696,8.912853,0.618988,-1.779294,-8.755149,-7.856493,-7.728566,8.093172,-2.138220,3.638627,-0.491173,5.442073,6.063386,-6.424104,3.711034,9.307511,-2.023680,-3.296405,2.725789,0.313099,5.385577,9.214759,1.450258,1.176874,-0.798541,-3.892565,-5.038116,0.253988,7.513794,-8.108372,3.254905,5.423265,-0.308169,-6.554714,6.272987,9.319576,4.719726,-0.621222,7.710770,-0.267797,-8.237653,5.244403,-8.191528,-0.461222,-8.148573,-2.240098,8.321792,3.423081,-6.285005,5.276686,5.563980,-3.435859,2.334542,-2.683366,8.969650,-8.271835,0.541152,-3.119868,0.570944,1.665641,1.086806,1.617078,-6.774613,-9.946177,-1.321516,-2.722257,-0.322008,-0.913758,1.829665,2.451911,-5.933938,9.045715,3.150171,0.167218,-7.163077,-8.840154,3.521009,-7.506251,-8.304558,-2.017321,4.256532,-0.142742,4.005250,6.504194,6.821407,6.903704,8.531401,-9.886023,4.980103,3.246013,-0.688805,3.799229,2.920273,6.332799,8.490830,9.073670,-8.745699,-2.607718,-2.055051,6.002455,-8.967897,4.884315,5.185384,-8.428606,-6.242827,-7.345462,9.705354,-2.787008,-8.374566,-4.528301,0.599439,-4.001322,-8.200246,7.959521,-4.470230,-2.719423,-9.041657,-2.475340,9.941707,-5.861343,-5.057390,1.549212,-1.341292,2.468989,7.636590,-5.306238,2.140438,6.575490,-1.038914,-0.369338,4.782745,6.622439,3.462153,3.476108,4.002096,-2.208300,-8.425455,4.509987,1.710042,2.707623,6.259673,5.300151,-2.436915,-1.703982,0.020696,-1.556535,2.174509,-6.468629,6.887726,-7.866828,8.843885,1.614529,-1.871009,5.927507,6.556129,-8.400635,-4.054599,1.783165,-4.779774,8.624657,-8.498454,-1.314748,-6.473766,-4.236532,-7.106339,-4.925169,0.456041,-8.097151,-4.026888,8.141387,-2.242882,-0.975197,4.183875,-2.097185,1.088345,-1.054695,2.653578,-8.703024,6.190163,5.963488,8.095337,-3.897887,6.014353,-8.289603,-5.915839,6.065494,9.508137,7.978972,0.065310,6.695584,-0.574202,5.697941,-5.263161,4.836176,-1.245046,-2.993746,-7.349477,4.727685,1.660137,0.670955,6.250199,-7.066093,1.333781,-9.121337,5.797736,1.092392,8.137525,0.927066,-1.419008,7.516491,-3.257845,-1.154466,-0.847906,-2.907783,8.833396,3.656865,8.361478,-9.815954,-4.242969,4.839890,-6.018705,6.192561,0.612543,1.120745,3.877256,3.713407,-4.581445,-0.091552,4.045163,-7.062203,-3.953347,1.521030,-7.738442,-8.933147,-5.026948,-9.991234,3.607525,-7.526332,6.934304,-6.840600,3.391539,-4.551542,-8.566231,-8.283330,8.572991,-4.863920,9.619427,9.094477,7.026467,-8.589369,-8.805183,-4.569311,-5.350246,-4.604098,3.823419,-1.449241,-3.173755,-4.862844,9.839513,-3.421136,-7.222532,-1.817396,9.797222,9.848383,-0.788915,-9.009279,-8.221970,-9.460078], dtype = "float32")#candidate|10743|(1470,)|const|float32
var_10744 = relay.var("var_10744", dtype = "float64", shape = (286,))#candidate|10744|(286,)|var|float64
call_10741 = relay.TupleGetItem(func_6965_call(relay.reshape(var_10742.astype('float64'), [13, 13, 12]), relay.reshape(const_10743.astype('float32'), [14, 105]), relay.reshape(var_10744.astype('float64'), [286,]), ), 5)
call_10745 = relay.TupleGetItem(func_6969_call(relay.reshape(var_10742.astype('float64'), [13, 13, 12]), relay.reshape(const_10743.astype('float32'), [14, 105]), relay.reshape(var_10744.astype('float64'), [286,]), ), 5)
func_10317_call = mod.get_global_var('func_10317')
func_10318_call = mutated_mod.get_global_var('func_10318')
call_10746 = relay.TupleGetItem(func_10317_call(), 4)
call_10747 = relay.TupleGetItem(func_10318_call(), 4)
output = relay.Tuple([call_10736,call_10741,var_10742,const_10743,var_10744,call_10746,])
output2 = relay.Tuple([call_10737,call_10745,var_10742,const_10743,var_10744,call_10747,])
func_10771 = relay.Function([var_10742,var_10744,], output)
mod['func_10771'] = func_10771
mod = relay.transform.InferType()(mod)
mutated_mod['func_10771'] = func_10771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10771_call = mutated_mod.get_global_var('func_10771')
var_10773 = relay.var("var_10773", dtype = "float64", shape = (2028,))#candidate|10773|(2028,)|var|float64
var_10774 = relay.var("var_10774", dtype = "float64", shape = (286,))#candidate|10774|(286,)|var|float64
call_10772 = func_10771_call(var_10773,var_10774,)
output = call_10772
func_10775 = relay.Function([var_10773,var_10774,], output)
mutated_mod['func_10775'] = func_10775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7542_call = mod.get_global_var('func_7542')
func_7543_call = mutated_mod.get_global_var('func_7543')
call_10782 = func_7542_call()
call_10783 = func_7542_call()
output = relay.Tuple([call_10782,])
output2 = relay.Tuple([call_10783,])
func_10814 = relay.Function([], output)
mod['func_10814'] = func_10814
mod = relay.transform.InferType()(mod)
output = func_10814()
func_10815 = relay.Function([], output)
mutated_mod['func_10815'] = func_10815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9945_call = mod.get_global_var('func_9945')
func_9947_call = mutated_mod.get_global_var('func_9947')
call_10816 = func_9945_call()
call_10817 = func_9945_call()
output = call_10816
output2 = call_10817
func_10828 = relay.Function([], output)
mod['func_10828'] = func_10828
mod = relay.transform.InferType()(mod)
mutated_mod['func_10828'] = func_10828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10828_call = mutated_mod.get_global_var('func_10828')
call_10829 = func_10828_call()
output = call_10829
func_10830 = relay.Function([], output)
mutated_mod['func_10830'] = func_10830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10622_call = mod.get_global_var('func_10622')
func_10623_call = mutated_mod.get_global_var('func_10623')
call_10846 = relay.TupleGetItem(func_10622_call(), 0)
call_10847 = relay.TupleGetItem(func_10623_call(), 0)
output = call_10846
output2 = call_10847
func_10860 = relay.Function([], output)
mod['func_10860'] = func_10860
mod = relay.transform.InferType()(mod)
output = func_10860()
func_10861 = relay.Function([], output)
mutated_mod['func_10861'] = func_10861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10436_call = mod.get_global_var('func_10436')
func_10437_call = mutated_mod.get_global_var('func_10437')
call_10912 = relay.TupleGetItem(func_10436_call(), 1)
call_10913 = relay.TupleGetItem(func_10437_call(), 1)
output = relay.Tuple([call_10912,])
output2 = relay.Tuple([call_10913,])
func_10922 = relay.Function([], output)
mod['func_10922'] = func_10922
mod = relay.transform.InferType()(mod)
mutated_mod['func_10922'] = func_10922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10922_call = mutated_mod.get_global_var('func_10922')
call_10923 = func_10922_call()
output = call_10923
func_10924 = relay.Function([], output)
mutated_mod['func_10924'] = func_10924
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10952 = relay.const([[[8,-9,-4,4,-2,-5,-10,-4,9,3],[10,5,2,2,8,-1,-3,-9,-9,5],[9,-10,6,-6,-7,-1,4,2,7,-7],[-7,-1,1,7,5,9,-2,3,-6,-5],[7,-8,1,8,4,-2,6,-1,-3,4],[4,2,-6,-6,-1,3,-6,-8,3,-6],[3,-9,-1,-3,1,-2,3,-1,-8,-1],[-7,-8,7,3,-4,-6,4,4,-6,-2],[6,-3,10,10,-10,-7,-7,-3,3,-4],[-2,-3,-8,4,4,2,-9,-1,-1,-7],[1,-2,-8,-3,-9,-7,-9,-9,-7,-2],[10,3,1,8,-4,-4,8,-3,1,7],[-5,10,5,3,-4,-3,9,4,9,-1],[-7,-7,-3,3,-6,-3,-7,7,4,-3]],[[2,-3,-5,2,-10,-6,10,-4,-4,6],[-9,3,1,9,-7,-6,-10,2,7,-9],[7,-4,9,-1,-8,2,-5,3,-2,-3],[-5,-10,7,2,5,1,-9,10,-4,10],[7,9,-7,-10,-7,2,2,-10,-5,3],[6,-4,8,10,5,5,-1,6,9,9],[-10,1,-4,-1,3,-8,7,-1,-8,-6],[-2,8,7,3,1,3,4,3,3,6],[-9,3,10,10,7,-2,-7,2,6,10],[-1,9,9,3,8,-7,6,3,-8,-4],[9,3,10,-9,-3,4,-6,-9,-6,6],[-4,1,5,-7,-6,-7,1,-10,5,5],[-10,4,-3,10,7,-3,9,2,7,6],[-10,-6,-10,10,-8,7,-6,-4,6,-8]],[[10,-4,3,-2,5,4,10,8,6,7],[-7,-2,5,-1,1,-4,9,1,-7,-4],[10,10,8,2,-8,-8,5,-7,7,5],[-7,1,8,2,5,-8,2,9,-9,-5],[-1,-1,2,-1,8,-9,5,-3,-3,10],[8,7,9,-1,-6,-5,-9,7,4,2],[-6,-7,10,5,2,3,5,-4,-3,-1],[1,-8,-2,-2,5,-8,-5,-3,4,10],[3,-8,1,-3,6,5,-9,10,10,-8],[5,7,1,-7,-7,-3,-10,9,4,8],[-7,7,-8,7,-8,4,-3,5,8,-10],[-1,-5,5,-4,7,7,7,-10,-3,-2],[4,-8,4,2,7,8,7,1,-7,-9],[9,8,3,10,7,-1,-7,-7,-2,6]],[[2,-9,5,-1,7,1,-9,9,-7,10],[-2,-4,-9,1,-1,-1,10,4,-2,-2],[-6,-2,-9,8,1,-1,-8,3,5,9],[10,1,-1,-5,-9,-1,-9,-1,-7,6],[9,-2,-2,6,-6,5,6,8,-10,-4],[10,-5,10,9,7,5,3,-6,-2,-4],[9,6,5,5,-7,-6,6,-7,-9,4],[-2,-5,8,-1,4,-1,-5,8,-1,9],[4,6,-7,6,1,-6,-1,-7,-10,1],[4,-7,-7,2,8,7,-7,1,7,-1],[-5,1,-6,7,7,-2,-8,-1,-5,-6],[-2,-6,5,4,3,2,2,8,-2,-8],[2,1,10,-6,4,-10,4,-7,3,3],[-7,-6,8,7,-8,10,-6,10,2,-2]],[[10,3,6,-5,9,5,-2,-5,4,10],[-8,1,-1,9,-9,-8,-1,-2,-10,7],[2,-5,4,5,-1,-1,-5,-2,-3,2],[2,-10,-2,3,7,1,-4,6,-6,10],[-5,-8,-5,-1,-3,-10,-2,9,3,5],[-2,1,-3,-5,-7,-10,-6,-5,1,9],[8,9,2,-5,10,4,6,-9,2,2],[1,-2,-10,-9,-4,7,10,3,5,-6],[9,8,-5,6,3,5,-10,10,-7,-3],[9,-4,-7,10,6,-7,-4,-10,-4,-6],[-2,10,9,4,-10,6,6,-8,-8,4],[-2,7,-8,7,-3,10,6,-9,-1,-3],[-9,-10,-1,-9,7,-3,4,7,6,5],[-10,5,4,-3,7,6,6,-5,6,-8]]], dtype = "int32")#candidate|10952|(5, 14, 10)|const|int32
var_10953 = relay.var("var_10953", dtype = "int32", shape = (5, 14, 10))#candidate|10953|(5, 14, 10)|var|int32
bop_10954 = relay.right_shift(const_10952.astype('int32'), relay.reshape(var_10953.astype('int32'), relay.shape_of(const_10952))) # shape=(5, 14, 10)
output = relay.Tuple([bop_10954,])
output2 = relay.Tuple([bop_10954,])
func_10985 = relay.Function([var_10953,], output)
mod['func_10985'] = func_10985
mod = relay.transform.InferType()(mod)
mutated_mod['func_10985'] = func_10985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10986 = relay.var("var_10986", dtype = "int32", shape = (5, 14, 10))#candidate|10986|(5, 14, 10)|var|int32
func_10985_call = mutated_mod.get_global_var('func_10985')
call_10987 = func_10985_call(var_10986)
output = call_10987
func_10988 = relay.Function([var_10986], output)
mutated_mod['func_10988'] = func_10988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8086_call = mod.get_global_var('func_8086')
func_8088_call = mutated_mod.get_global_var('func_8088')
call_10990 = relay.TupleGetItem(func_8086_call(), 0)
call_10991 = relay.TupleGetItem(func_8088_call(), 0)
var_11000 = relay.var("var_11000", dtype = "int8", shape = (4, 11, 4))#candidate|11000|(4, 11, 4)|var|int8
bop_11001 = relay.left_shift(call_10990.astype('int32'), relay.reshape(var_11000.astype('int32'), relay.shape_of(call_10990))) # shape=(4, 11, 4)
bop_11004 = relay.left_shift(call_10991.astype('int32'), relay.reshape(var_11000.astype('int32'), relay.shape_of(call_10991))) # shape=(4, 11, 4)
output = bop_11001
output2 = bop_11004
func_11010 = relay.Function([var_11000,], output)
mod['func_11010'] = func_11010
mod = relay.transform.InferType()(mod)
mutated_mod['func_11010'] = func_11010
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11011 = relay.var("var_11011", dtype = "int8", shape = (4, 11, 4))#candidate|11011|(4, 11, 4)|var|int8
func_11010_call = mutated_mod.get_global_var('func_11010')
call_11012 = func_11010_call(var_11011)
output = call_11012
func_11013 = relay.Function([var_11011], output)
mutated_mod['func_11013'] = func_11013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10622_call = mod.get_global_var('func_10622')
func_10623_call = mutated_mod.get_global_var('func_10623')
call_11028 = relay.TupleGetItem(func_10622_call(), 0)
call_11029 = relay.TupleGetItem(func_10623_call(), 0)
output = call_11028
output2 = call_11029
func_11030 = relay.Function([], output)
mod['func_11030'] = func_11030
mod = relay.transform.InferType()(mod)
output = func_11030()
func_11031 = relay.Function([], output)
mutated_mod['func_11031'] = func_11031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11088 = relay.var("var_11088", dtype = "float32", shape = (15, 5, 5))#candidate|11088|(15, 5, 5)|var|float32
var_11089 = relay.var("var_11089", dtype = "float32", shape = (15, 5, 5))#candidate|11089|(15, 5, 5)|var|float32
bop_11090 = relay.mod(var_11088.astype('float32'), relay.reshape(var_11089.astype('float32'), relay.shape_of(var_11088))) # shape=(15, 5, 5)
output = bop_11090
output2 = bop_11090
F = relay.Function([var_11088,var_11089,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11088,var_11089,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_6681() -> Tensor[(14, 4, 7), float32] {
  @func_5844() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_7602(%var_7583: Tensor[(936), uint8]) -> (Tensor[(50), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8]) {
  %0 = @func_4653() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32]) */;
  %1 = cast(%var_7583, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %2 = cast(%var_7583, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %3 = reshape(%1, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
  %4 = reshape(%2, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
  %5 = %0.3;
  %6 = @func_2664(%3, %4) /* ty=Tensor[(13, 8, 9), uint8] */;
  (%5, %6, %var_7583)
}

def @func_4097() -> (Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) {
  %7 = @func_4005() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(1365, 1), float64] */, dtype="float64") /* ty=Tensor[(1365, 1), float64] */;
  %9 = reshape(%8, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %10 = @func_170(%9) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %11 = %10.0;
  %12 = cast(%11, dtype="float32") /* ty=Tensor[(15, 7, 13), float32] */;
  %13 = %7.1;
  %14 = rsqrt(%12) /* ty=Tensor[(15, 7, 13), float32] */;
  (%13, meta[relay.Constant][0] /* ty=Tensor[(1365, 1), float64] */, %14)
}

def @func_5522() -> (Tensor[(14, 4, 7), float32],) {
  %15 = @func_4769() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %16 = %15.0;
  (%16,)
}

def @func_4712() -> (Tensor[(14, 4, 7), float32], Tensor[(7, 10, 8), float32], Tensor[(560), int8], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) {
  %17 = @func_4005() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(560), int8] */, dtype="int8") /* ty=Tensor[(560), int8] */;
  %19 = reshape(%18, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int8] */;
  %20 = @func_4384(%19) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */;
  %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %22 = reshape(%21, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %23 = @func_1812(%22) /* ty=(Tensor[(5, 3, 4), float64],) */;
  %24 = %17.2;
  %25 = %20.1;
  %26 = %23.0;
  (%24, %25, meta[relay.Constant][1] /* ty=Tensor[(560), int8] */, %26, meta[relay.Constant][2] /* ty=Tensor[(60), float64] */)
}

def @func_6152() -> (Tensor[(1365), float64],) {
  %27 = @func_4211() /* ty=(Tensor[(1365), float64],) */;
  %28 = %27.0;
  (%28,)
}

def @func_2570(%var_2549: Tensor[(52), float64], %var_2561: Tensor[(42, 1), float64]) -> (Tensor[(1365), float64], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(14, 4, 7), int32], Tensor[(3, 4, 2), float64], Tensor[(42, 1), float64], Tensor[(1365, 1), float64]) {
  %29 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %30 = cast(%var_2549, dtype="float64") /* ty=Tensor[(52), float64] */;
  %31 = %29.2;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %33 = reshape(%30, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %34 = reshape(%32, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %35 = @func_1714(%33, %34) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %36 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %37 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %38 = %37.0;
  %39 = cast(%38, dtype="int32") /* ty=Tensor[(14, 4, 7), int32] */;
  %40 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%36, dtype="int32") /* ty=Tensor[(14, 4, 7), int32] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %43 = cast(%var_2561, dtype="float64") /* ty=Tensor[(42, 1), float64] */;
  %44 = %35.1;
  %45 = cast(%44, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %46 = reshape(%43, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), float64] */;
  %47 = reshape(%45, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), float64] */;
  %48 = @func_834(%46, %47) /* ty=(Tensor[(14, 1, 3), float64], Tensor[(3, 4, 2), float64], Tensor[(12, 2), float64], Tensor[(15, 7, 13), bool], Tensor[(1365, 1), float64]) */;
  %49 = cast(%var_2561, dtype="float64") /* ty=Tensor[(42, 1), float64] */;
  %50 = cast(%44, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %51 = reshape(%49, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), float64] */;
  %52 = reshape(%50, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), float64] */;
  %53 = @func_834(%51, %52) /* ty=(Tensor[(14, 1, 3), float64], Tensor[(3, 4, 2), float64], Tensor[(12, 2), float64], Tensor[(15, 7, 13), bool], Tensor[(1365, 1), float64]) */;
  %54 = bitwise_and(%41, %42) /* ty=Tensor[(14, 4, 7), int32] */;
  %55 = %48.1;
  %56 = %53.4;
  (%31, %44, %var_2549, %54, %55, %var_2561, %56)
}

def @func_3428(%var_3414: Tensor[(2, 5, 9), float32], %var_3419: Tensor[(24), float64]) -> (Tensor[(2, 5, 9), float32], Tensor[(3, 4, 2), float64], Tensor[(24), float64]) {
  %57 = cast(%var_3414, dtype="float32") /* ty=Tensor[(2, 5, 9), float32] */;
  %58 = cast(%var_3419, dtype="float64") /* ty=Tensor[(24), float64] */;
  %59 = reshape(%58, newshape=[3, 4, 2]) /* ty=Tensor[(3, 4, 2), float64] */;
  %60 = sin(%57) /* ty=Tensor[(2, 5, 9), float32] */;
  %61 = @func_759(%59) /* ty=Tensor[(3, 4, 2), float64] */;
  (%60, %61, %var_3419)
}

def @func_759(%var_748: Tensor[(3, 4, 2), float64]) -> Tensor[(3, 4, 2), float64] {
  %62 = cast(%var_748, dtype="float64") /* ty=Tensor[(3, 4, 2), float64] */;
  %63 = acosh(%62) /* ty=Tensor[(3, 4, 2), float64] */;
  %64 = cast(%63, dtype="float64") /* ty=Tensor[(3, 4, 2), float64] */;
  erf(%64) /* ty=Tensor[(3, 4, 2), float64] */
}

def @func_4769() -> (Tensor[(14, 4, 7), float32],) {
  %65 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %66 = %65.0;
  (%66,)
}

def @func_8231() -> (Tensor[(14, 4, 7), float32], Tensor[(3, 4, 2), float64], Tensor[(6, 4), float64]) {
  %67 = @func_5522() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %68 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 4), float64] */, dtype="float64") /* ty=Tensor[(6, 4), float64] */;
  %69 = reshape(%68, newshape=[3, 4, 2]) /* ty=Tensor[(3, 4, 2), float64] */;
  %70 = %67.0;
  %71 = @func_759(%69) /* ty=Tensor[(3, 4, 2), float64] */;
  (%70, %71, meta[relay.Constant][3] /* ty=Tensor[(6, 4), float64] */)
}

def @func_2968(%var_2957: Tensor[(1176), float64]) -> (Tensor[(14, 4, 7), float64], Tensor[(15, 7, 13), bool], Tensor[(1176), float64]) {
  %72 = @func_2768() /* ty=(Tensor[(14, 4, 7), float64], Tensor[(1365), float64]) */;
  %73 = %72.0;
  %74 = cast(%73, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %75 = cast(%var_2957, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %76 = reshape(%75, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), float64] */;
  %77 = @func_284(%76) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) */;
  %78 = tan(%74) /* ty=Tensor[(14, 4, 7), float64] */;
  %79 = %77.3;
  (%78, %79, %var_2957)
}

def @func_7420(%var_7371: Tensor[(11, 1, 1), float64]) -> (Tensor[(11, ?, ?), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(52), float64], Tensor[(52), float64], Tensor[(11, 1, 1), float64]) {
  %80 = cast(%var_7371, dtype="float64") /* ty=Tensor[(11, 1, 1), float64] */;
  %81 = sigmoid(%80) /* ty=Tensor[(11, 1, 1), float64] */;
  %82 = cast(%var_7371, dtype="bool") /* ty=Tensor[(11, 1, 1), bool] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%81, dtype="bool") /* ty=Tensor[(11, 1, 1), bool] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %86 = cast(meta[relay.Constant][4] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %87 = reshape(%86, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %88 = @func_2968(%87) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(15, 7, 13), bool], Tensor[(1176), float64]) */;
  %89 = cast(meta[relay.Constant][5] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %90 = reshape(%89, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %91 = @func_6389(%90) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(11, 15, 15), bool], Tensor[(2475), float64], Tensor[(52), float64], Tensor[(1, 1365), float64], Tensor[(15, 7, 13), bool]) */;
  %92 = cast(%var_7371, dtype="float64") /* ty=Tensor[(11, 1, 1), float64] */;
  %93 = less_equal(%84, %85) /* ty=Tensor[(11, ?, ?), bool] */;
  %94 = %88.2;
  %95 = %91.3;
  %96 = cos(%92) /* ty=Tensor[(11, 1, 1), float64] */;
  (%93, %94, meta[relay.Constant][4] /* ty=Tensor[(1176), float64] */, %95, meta[relay.Constant][5] /* ty=Tensor[(52), float64] */, %96)
}

def @func_3179() -> (Tensor[(14, 4, 7), float32],) {
  %97 = @func_2372() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %98 = %97.0;
  (%98,)
}

def @func_7268() -> (Tensor[(1365), float64],) {
  %99 = @func_5449() /* ty=(Tensor[(60), float64], Tensor[(5, 3, 4), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %100 = %99.3;
  (%100,)
}

def @func_4561(%var_4530: Tensor[(144), float32], %var_4534: Tensor[(560), int8]) -> (Tensor[(576), bool], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 10, 8), int8], Tensor[(560), int8], Tensor[(14, 4, 7), float32]) {
  %101 = @func_4345() /* ty=(Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(576), bool]) */;
  %102 = cast(%var_4530, dtype="float32") /* ty=Tensor[(144), float32] */;
  %103 = reshape(%102, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), float32] */;
  %104 = cast(%var_4534, dtype="int8") /* ty=Tensor[(560), int8] */;
  %105 = reshape(%104, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int8] */;
  %106 = @func_4384(%105) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */;
  %107 = %101.2;
  %108 = @func_4119(%103) /* ty=Tensor[(9, 16, 1), float64] */;
  %109 = %106.0;
  %110 = @func_3378() /* ty=Tensor[(14, 4, 7), float32] */;
  (%107, %108, %var_4530, %109, %var_4534, %110)
}

def @func_6843() -> Tensor[(14, 4, 7), float32] {
  %111 = @func_5042() /* ty=(Tensor[(50), float32], Tensor[(14, 4, 7), float32]) */;
  %111.1
}

def @func_8561(%var_8546: uint16) -> Tensor[(11, 1), uint16] {
  %112 = cast(%var_8546, dtype="uint16") /* ty=uint16 */;
  %113 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 1), uint16] */, dtype="uint16") /* ty=Tensor[(11, 1), uint16] */;
  bitwise_or(%112, %113) /* ty=Tensor[(11, 1), uint16] */
}

def @func_4252() -> (Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) {
  %114 = @func_4097() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) */;
  %115 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %116 = cast(meta[relay.Constant][7] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %117 = reshape(%116, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float32] */;
  %118 = cast(meta[relay.Constant][8] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %119 = reshape(%118, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %120 = @func_1812(%119) /* ty=(Tensor[(5, 3, 4), float64],) */;
  %121 = %114.0;
  %122 = %115.0;
  %123 = @func_3190(%117) /* ty=Tensor[(1, 10, 5), float32] */;
  %124 = %120.0;
  (%121, %122, %123, meta[relay.Constant][7] /* ty=Tensor[(50), float32] */, %124, meta[relay.Constant][8] /* ty=Tensor[(60), float64] */)
}

def @func_3152() -> Tensor[(14, 4, 7), float32] {
  @func_1970() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_3880() -> Tensor[(14, 4, 7), bool] {
  %125 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
  %125.0
}

def @main(%var_9647: Tensor[(2, 360), int64]) -> (Tensor[(14, 4, 7), float32], Tensor[(2, 360), int64], Tensor[(1365), float64]) {
  %126 = cast(%var_9647, dtype="int64") /* ty=Tensor[(2, 360), int64] */;
  %127 = cast(%var_9647, dtype="int64") /* ty=Tensor[(2, 360), int64] */;
  %128 = reshape(%126, newshape=[3, 16, 15]) /* ty=Tensor[(3, 16, 15), int64] */;
  %129 = reshape(%127, newshape=[3, 16, 15]) /* ty=Tensor[(3, 16, 15), int64] */;
  %130 = @func_1195(%128, %129) /* ty=(Tensor[(3, 16, 15), int64], Tensor[(1365), float64], Tensor[(1176), float64]) */;
  %131 = %130.1;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %133 = @func_3683() /* ty=Tensor[(14, 4, 7), float32] */;
  %134 = cosh(%132) /* ty=Tensor[(1365), float64] */;
  (%133, %var_9647, %134)
}

def @func_9187() -> (Tensor[(60), float64],) {
  %135 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
  %136 = %135.5;
  (%136,)
}

def @func_1428(%var_1419: Tensor[(7, 12, 3), float64], %var_1420: Tensor[(7, 12, 3), float64]) -> (Tensor[(7, 12, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(7, 195), float64]) {
  %137 = cast(%var_1420, dtype="bool") /* ty=Tensor[(7, 12, 3), bool] */;
  %138 = shape_of(%var_1419, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%var_1419, dtype="bool") /* ty=Tensor[(7, 12, 3), bool] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %141 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 195), float64] */, dtype="float64") /* ty=Tensor[(7, 195), float64] */;
  %142 = reshape(%141, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %143 = @func_170(%142) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %144 = not_equal(%139, %140) /* ty=Tensor[(7, 12, 3), bool] */;
  %145 = %143.0;
  (%144, %145, meta[relay.Constant][9] /* ty=Tensor[(7, 195), float64] */)
}

def @func_1950(%var_1927: Tensor[(14, 14, 6), bool], %var_1928: Tensor[(14, 14, 6), bool]) -> (Tensor[(14, 14, 6), bool], Tensor[(7, 195), float64], Tensor[(252), float64]) {
  %146 = cast(%var_1928, dtype="bool") /* ty=Tensor[(14, 14, 6), bool] */;
  %147 = shape_of(%var_1927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%var_1927, dtype="bool") /* ty=Tensor[(14, 14, 6), bool] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %150 = cast(meta[relay.Constant][10] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %151 = cast(meta[relay.Constant][10] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %152 = reshape(%150, newshape=[7, 12, 3]) /* ty=Tensor[(7, 12, 3), float64] */;
  %153 = reshape(%151, newshape=[7, 12, 3]) /* ty=Tensor[(7, 12, 3), float64] */;
  %154 = @func_1428(%152, %153) /* ty=(Tensor[(7, 12, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(7, 195), float64]) */;
  %155 = logical_or(%148, %149) /* ty=Tensor[(14, 14, 6), bool] */;
  %156 = %154.2;
  (%155, %156, meta[relay.Constant][10] /* ty=Tensor[(252), float64] */)
}

def @func_4179() -> Tensor[(14, 4, 7), float32] {
  %157 = @func_4005() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %157.2
}

def @func_5405(%var_5374: Tensor[(15, 10, 5), float32]) -> Tensor[(15, 10, 5), int32] {
  %158 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
  %159 = %158.2;
  %160 = cast(%159, dtype="int32") /* ty=Tensor[(1, 10, 5), int32] */;
  %161 = cast(%var_5374, dtype="int32") /* ty=Tensor[(15, 10, 5), int32] */;
  left_shift(%160, %161) /* ty=Tensor[(15, 10, 5), int32] */
}

def @func_5106(%var_5098: Tensor[(14, 4, 7), float64]) -> (Tensor[(14, 4, 7), float64],) {
  %162 = @func_4160() /* ty=Tensor[(14, 4, 7), float32] */;
  %163 = cast(%162, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %164 = sinh(%163) /* ty=Tensor[(14, 4, 7), float64] */;
  %165 = cast(%var_5098, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %166 = shape_of(%164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%164, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %169 = less_equal(%167, %168) /* ty=Tensor[(14, 4, 7), bool] */;
  %170 = cast(%169, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %171 = sigmoid(%170) /* ty=Tensor[(14, 4, 7), float64] */;
  (%171,)
}

def @func_636(%var_628: float64) -> (Tensor[(12, 8, 9), float64],) {
  %172 = cast(%var_628, dtype="float64") /* ty=float64 */;
  %173 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(12, 8, 9), float64] */;
  %174 = minimum(%172, %173) /* ty=Tensor[(12, 8, 9), float64] */;
  (%174,)
}

def @func_7823() -> (Tensor[(1176), float64], Tensor[(14, 4, 7), bool]) {
  %175 = @func_6532() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 12, 14), float32], Tensor[(1176), float64]) */;
  %176 = @func_5338() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %177 = %175.4;
  %178 = %176.0;
  (%177, %178)
}

def @func_6339() -> (Tensor[(14, 4, 7), float64],) {
  %179 = @func_5000() /* ty=Tensor[(14, 4, 7), float64] */;
  (%179,)
}

def @func_9084() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool]) {
  %180 = @func_8276() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(60), float64]) */;
  %181 = @func_8182() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %182 = %180.0;
  %183 = %181.0;
  (%182, %183)
}

def @func_3378() -> Tensor[(14, 4, 7), float32] {
  @func_2939() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_4345() -> (Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(576), bool]) {
  %184 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
  %185 = cast(meta[relay.Constant][12] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %186 = reshape(%185, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float64] */;
  %187 = @func_1464(%186) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), float64]) */;
  %188 = %187.0;
  %189 = cast(%188, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
  %190 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(576), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %191 = cast(meta[relay.Constant][12] /* ty=Tensor[(576), float64] */, dtype="bool") /* ty=Tensor[(576), bool] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?), bool] */;
  %193 = %184.2;
  %194 = @func_3541() /* ty=Tensor[(14, 4, 7), float32] */;
  %195 = logical_and(%191, %192) /* ty=Tensor[(576), bool] */;
  (%193, %194, %195)
}

def @func_7857() -> Tensor[(14, 4, 7), float32] {
  @func_7180() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_1195(%var_1173: Tensor[(3, 16, 15), int64], %var_1174: Tensor[(3, 16, 15), int64]) -> (Tensor[(3, 16, 15), int64], Tensor[(1365), float64], Tensor[(1176), float64]) {
  %196 = cast(%var_1174, dtype="int64") /* ty=Tensor[(3, 16, 15), int64] */;
  %197 = shape_of(%var_1173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%var_1173, dtype="int64") /* ty=Tensor[(3, 16, 15), int64] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %200 = cast(meta[relay.Constant][13] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %201 = reshape(%200, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), float64] */;
  %202 = @func_284(%201) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) */;
  %203 = subtract(%198, %199) /* ty=Tensor[(3, 16, 15), int64] */;
  %204 = %202.2;
  (%203, %204, meta[relay.Constant][13] /* ty=Tensor[(1176), float64] */)
}

def @func_4160() -> Tensor[(14, 4, 7), float32] {
  @func_3541() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_3799(%var_3796: float64) -> (Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64) {
  %205 = @func_3269() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %206 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %207 = cast(%var_3796, dtype="float64") /* ty=float64 */;
  %208 = reshape(%207, newshape=[]) /* ty=float64 */;
  %209 = @func_2431(%208) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(14, 4, 7), float32]) */;
  %210 = %205.0;
  %211 = %206.1;
  %212 = %209.1;
  (%210, %211, %212, %var_3796)
}

def @func_9273() -> (Tensor[(14, 4, 7), float64], Tensor[(14, 4, 7), bool]) {
  %213 = @func_8799() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %214 = @func_5000() /* ty=Tensor[(14, 4, 7), float64] */;
  %215 = %213.0;
  (%214, %215)
}

def @func_2939() -> Tensor[(14, 4, 7), float32] {
  %216 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %216.0
}

def @func_7566(%var_7536: Tensor[(11, 11, 14), int16], %var_7537: Tensor[(11, 11, 14), int16]) -> (Tensor[(11, 11, 14), int8], Tensor[(8, 9, 14), float32], Tensor[(1008), uint64], Tensor[(1365), float64], Tensor[(11, 11, 14), float64]) {
  %217 = cast(%var_7537, dtype="bool") /* ty=Tensor[(11, 11, 14), bool] */;
  %218 = shape_of(%var_7536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%var_7536, dtype="bool") /* ty=Tensor[(11, 11, 14), bool] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %221 = not_equal(%219, %220) /* ty=Tensor[(11, 11, 14), bool] */;
  %222 = cast(%221, dtype="int8") /* ty=Tensor[(11, 11, 14), int8] */;
  %223 = shape_of(%var_7537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%var_7537, dtype="int8") /* ty=Tensor[(11, 11, 14), int8] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %226 = cast(meta[relay.Constant][14] /* ty=Tensor[(1008), uint64] */, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %227 = cast(meta[relay.Constant][14] /* ty=Tensor[(1008), uint64] */, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %228 = cast(meta[relay.Constant][15] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %229 = reshape(%226, newshape=[8, 9, 14]) /* ty=Tensor[(8, 9, 14), uint64] */;
  %230 = reshape(%227, newshape=[8, 9, 14]) /* ty=Tensor[(8, 9, 14), uint64] */;
  %231 = reshape(%228, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %232 = @func_6087(%229, %230, %231) /* ty=(Tensor[(14, 4, 7), bool], float64, Tensor[(8, 9, 14), float32], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %233 = cast(%221, dtype="uint16") /* ty=Tensor[(11, 11, 14), uint16] */;
  %234 = shape_of(%var_7536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%var_7536, dtype="uint16") /* ty=Tensor[(11, 11, 14), uint16] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %237 = minimum(%235, %236) /* ty=Tensor[(11, 11, 14), uint16] */;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(11, 11, 14), float64] */;
  %239 = shape_of(%var_7536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%var_7536, dtype="float64") /* ty=Tensor[(11, 11, 14), float64] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %242 = right_shift(%224, %225) /* ty=Tensor[(11, 11, 14), int8] */;
  %243 = %232.2;
  %244 = divide(%240, %241) /* ty=Tensor[(11, 11, 14), float64] */;
  (%242, %243, meta[relay.Constant][14] /* ty=Tensor[(1008), uint64] */, meta[relay.Constant][15] /* ty=Tensor[(1365), float64] */, %244)
}

def @func_2460() -> (Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) {
  %245 = cast(meta[relay.Constant][16] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %246 = reshape(%245, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %247 = @func_170(%246) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %248 = cast(meta[relay.Constant][16] /* ty=Tensor[(1365), float64] */, dtype="float32") /* ty=Tensor[(1365), float32] */;
  %249 = asinh(%248) /* ty=Tensor[(1365), float32] */;
  %250 = cast(%249, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %251 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %252 = %247.0;
  %253 = tan(%250) /* ty=Tensor[(1365), float64] */;
  (%251, %252, %253)
}

def @func_5716() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %254 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %255 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %256 = @func_4179() /* ty=Tensor[(14, 4, 7), float32] */;
  %257 = @func_2793() /* ty=Tensor[(14, 4, 7), float32] */;
  %258 = %254.0;
  %259 = %255.0;
  %260 = @func_2793() /* ty=Tensor[(14, 4, 7), float32] */;
  (%256, %257, %258, %259, %260)
}

def @func_2512(%var_2475: Tensor[(252), float64]) -> (Tensor[(15, 7, 13), bool], Tensor[(252), float64], Tensor[(14, 4, 7), bool]) {
  %261 = cast(%var_2475, dtype="float64") /* ty=Tensor[(252), float64] */;
  %262 = cast(%var_2475, dtype="float64") /* ty=Tensor[(252), float64] */;
  %263 = reshape(%261, newshape=[7, 12, 3]) /* ty=Tensor[(7, 12, 3), float64] */;
  %264 = reshape(%262, newshape=[7, 12, 3]) /* ty=Tensor[(7, 12, 3), float64] */;
  %265 = @func_1428(%263, %264) /* ty=(Tensor[(7, 12, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(7, 195), float64]) */;
  %266 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %267 = @func_2372() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %268 = %267.0;
  %269 = cast(%268, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %270 = shape_of(%266, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%266, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %273 = %265.1;
  %274 = not_equal(%271, %272) /* ty=Tensor[(14, 4, 7), bool] */;
  (%273, %var_2475, %274)
}

def @func_9131() -> Tensor[(14, 4, 7), bool] {
  %275 = @func_5338() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %275.0
}

def @func_9026(%var_9023: Tensor[(52), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(8, 18), bool], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(42), float64]) {
  %276 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 18), float32] */, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
  %277 = reshape(%276, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), float32] */;
  %278 = @func_4119(%277) /* ty=Tensor[(9, 16, 1), float64] */;
  %279 = cast(%278, dtype="bool") /* ty=Tensor[(9, 16, 1), bool] */;
  %280 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(8, 18), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %281 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 18), float32] */, dtype="bool") /* ty=Tensor[(8, 18), bool] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %283 = cast(%var_9023, dtype="float64") /* ty=Tensor[(52), float64] */;
  %284 = cast(meta[relay.Constant][18] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %285 = reshape(%283, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %286 = reshape(%284, newshape=[42, 1]) /* ty=Tensor[(42, 1), float64] */;
  %287 = @func_2570(%285, %286) /* ty=(Tensor[(1365), float64], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(14, 4, 7), int32], Tensor[(3, 4, 2), float64], Tensor[(42, 1), float64], Tensor[(1365, 1), float64]) */;
  %288 = @func_5288() /* ty=Tensor[(14, 4, 7), float32] */;
  %289 = logical_and(%281, %282) /* ty=Tensor[(8, 18), bool] */;
  %290 = %287.1;
  (%288, %289, %290, %var_9023, meta[relay.Constant][18] /* ty=Tensor[(42), float64] */)
}

def @func_7180() -> Tensor[(14, 4, 7), float32] {
  %291 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %291.0
}

def @func_9170() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool]) {
  %292 = @func_5288() /* ty=Tensor[(14, 4, 7), float32] */;
  %293 = @func_5568() /* ty=Tensor[(14, 4, 7), bool] */;
  (%292, %293)
}

def @func_7239(%var_7205: Tensor[(4, 1), uint32], %var_7206: Tensor[(4, 1), uint32]) -> (Tensor[(4, ?), uint32], Tensor[(14, 4, 7), float32]) {
  %294 = cast(%var_7206, dtype="uint32") /* ty=Tensor[(4, 1), uint32] */;
  %295 = shape_of(%var_7205, dtype="int32") /* ty=Tensor[(2), int32] */;
  %296 = cast(%var_7205, dtype="uint32") /* ty=Tensor[(4, 1), uint32] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %298 = multiply(%296, %297) /* ty=Tensor[(4, ?), uint32] */;
  %299 = @func_7180() /* ty=Tensor[(14, 4, 7), float32] */;
  (%298, %299)
}

def @func_3972() -> Tensor[(14, 4, 7), bool] {
  %300 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
  %300.0
}

def @func_6300(%var_6291: Tensor[(252), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(252), float64], Tensor[(252), float64]) {
  %301 = @func_5716() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %302 = cast(%var_6291, dtype="float64") /* ty=Tensor[(252), float64] */;
  %303 = reshape(%302, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %304 = @func_2512(%303) /* ty=(Tensor[(15, 7, 13), bool], Tensor[(252), float64], Tensor[(14, 4, 7), bool]) */;
  %305 = %301.1;
  %306 = %304.1;
  (%305, %306, %var_6291)
}

def @func_2431(%var_2412: float64) -> (Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(14, 4, 7), float32]) {
  %307 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %308 = cast(%var_2412, dtype="float64") /* ty=float64 */;
  %309 = reshape(%308, newshape=[]) /* ty=float64 */;
  %310 = @func_636(%309) /* ty=(Tensor[(12, 8, 9), float64],) */;
  %311 = cast(meta[relay.Constant][19] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %312 = reshape(%311, newshape=[3, 4, 2]) /* ty=Tensor[(3, 4, 2), float64] */;
  %313 = %307.0;
  %314 = cast(%313, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %315 = reshape(%314, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float32] */;
  %316 = %310.0;
  %317 = @func_759(%312) /* ty=Tensor[(3, 4, 2), float64] */;
  %318 = @func_2212(%315) /* ty=Tensor[(14, 4, 7), float32] */;
  (%313, %316, %var_2412, %317, meta[relay.Constant][19] /* ty=Tensor[(24), float64] */, %318)
}

def @func_2212(%var_2204: Tensor[(14, 4, 7), float32]) -> Tensor[(14, 4, 7), float32] {
  %319 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %320 = cast(%var_2204, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%319, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%322, %323) /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_7953() -> (Tensor[(14, 4, 7), float32],) {
  %324 = @func_4005() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %325 = %324.2;
  (%325,)
}

def @func_5265(%var_5253: Tensor[(8, 70), int8]) -> (Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(1365), float64], Tensor[(52), float64], Tensor[(7, 10, 8), float32], Tensor[(8, 70), int8], Tensor[(14, 4, 7), float32]) {
  %326 = @func_4211() /* ty=(Tensor[(1365), float64],) */;
  %327 = @func_2372() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %328 = cast(meta[relay.Constant][20] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %329 = %326.0;
  %330 = cast(%329, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %331 = reshape(%328, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %332 = reshape(%330, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %333 = @func_1714(%331, %332) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %334 = cast(%var_5253, dtype="int8") /* ty=Tensor[(8, 70), int8] */;
  %335 = reshape(%334, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int8] */;
  %336 = @func_4384(%335) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */;
  %337 = @func_4769() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %338 = %327.0;
  %339 = %333.2;
  %340 = %336.1;
  %341 = %337.0;
  (%329, %338, %339, meta[relay.Constant][20] /* ty=Tensor[(52), float64] */, %340, %var_5253, %341)
}

def @func_8582() -> Tensor[(14, 4, 7), bool] {
  %342 = @func_7823() /* ty=(Tensor[(1176), float64], Tensor[(14, 4, 7), bool]) */;
  %342.1
}

def @func_8835() -> Tensor[(1365), float64] {
  %343 = @func_4211() /* ty=(Tensor[(1365), float64],) */;
  %343.0
}

def @func_7155() -> (Tensor[(60), float64],) {
  %344 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
  %345 = %344.5;
  (%345,)
}

def @func_2632(%var_2606: Tensor[(11, 15, 15), float64], %var_2619: Tensor[(1, 52), float64], %var_2620: Tensor[(1365), float64]) -> (Tensor[(11, 15, 15), bool], Tensor[(11, 15, 15), int8], Tensor[(15, 7, 13), bool], Tensor[(1, 52), float64], Tensor[(1365), float64]) {
  %346 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 15, 15), float64] */, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %347 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(11, 15, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 15, 15), float64] */, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %350 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %351 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(11, 15, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %352 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %354 = divide(%352, %353) /* ty=Tensor[(11, 15, 15), float64] */;
  %355 = cast(%var_2606, dtype="int8") /* ty=Tensor[(11, 15, 15), int8] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%354, dtype="int8") /* ty=Tensor[(11, 15, 15), int8] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %359 = cast(%var_2619, dtype="float64") /* ty=Tensor[(1, 52), float64] */;
  %360 = cast(%var_2620, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %361 = reshape(%359, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %362 = reshape(%360, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %363 = @func_1714(%361, %362) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %364 = greater_equal(%348, %349) /* ty=Tensor[(11, 15, 15), bool] */;
  %365 = multiply(%357, %358) /* ty=Tensor[(11, 15, 15), int8] */;
  %366 = %363.1;
  (%364, %365, %366, %var_2619, %var_2620)
}

def @func_1464(%var_1443: Tensor[(8, 6, 12), float64]) -> (Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), float64]) {
  %367 = cast(%var_1443, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %368 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 6, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %369 = shape_of(%var_1443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%var_1443, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %372 = asin(%367) /* ty=Tensor[(8, 6, 12), float64] */;
  %373 = floor_divide(%370, %371) /* ty=Tensor[(8, 6, 12), float64] */;
  (%372, %373)
}

def @func_5781(%var_5754: Tensor[(975), float32]) -> (Tensor[(14, 4, 7), uint64], Tensor[(52), float64], Tensor[(975), float32]) {
  %374 = @func_5716() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %375 = %374.2;
  %376 = cast(%375, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %377 = sqrt(%376) /* ty=Tensor[(14, 4, 7), float64] */;
  %378 = @func_2939() /* ty=Tensor[(14, 4, 7), float32] */;
  %379 = cast(%378, dtype="uint64") /* ty=Tensor[(14, 4, 7), uint64] */;
  %380 = shape_of(%377, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%377, dtype="uint64") /* ty=Tensor[(14, 4, 7), uint64] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %383 = cast(%var_5754, dtype="float32") /* ty=Tensor[(975), float32] */;
  %384 = cast(%var_5754, dtype="float32") /* ty=Tensor[(975), float32] */;
  %385 = cast(%var_5754, dtype="float32") /* ty=Tensor[(975), float32] */;
  %386 = reshape(%383, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %387 = reshape(%384, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %388 = reshape(%385, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %389 = @func_2705(%386, %387, %388) /* ty=(Tensor[(1365), float64], Tensor[(52), float64], Tensor[(14, 3), float64], Tensor[(15, 5, 13), bool]) */;
  %390 = bitwise_xor(%381, %382) /* ty=Tensor[(14, 4, 7), uint64] */;
  %391 = %389.1;
  (%390, %391, %var_5754)
}

def @func_1714(%var_1693: Tensor[(13, 4, 1), float64], %var_1707: Tensor[(1365), float64]) -> (Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) {
  %392 = cast(%var_1693, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
  %393 = sqrt(%392) /* ty=Tensor[(13, 4, 1), float64] */;
  %394 = cast(%393, dtype="int8") /* ty=Tensor[(13, 4, 1), int8] */;
  %395 = shape_of(%var_1693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%var_1693, dtype="int8") /* ty=Tensor[(13, 4, 1), int8] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %398 = cast(%var_1707, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %399 = reshape(%398, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %400 = @func_170(%399) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %401 = cast(%393, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
  %402 = add(%396, %397) /* ty=Tensor[(13, 4, ?), int8] */;
  %403 = %400.0;
  %404 = cosh(%401) /* ty=Tensor[(13, 4, 1), float64] */;
  (%402, %403, %var_1707, %404)
}

def @func_4384(%var_4369: Tensor[(7, 10, 8), int8]) -> (Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) {
  %405 = cast(%var_4369, dtype="int8") /* ty=Tensor[(7, 10, 8), int8] */;
  %406 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(7, 10, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 10, 8), int8] */, dtype="int8") /* ty=Tensor[(7, 10, 8), int8] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %409 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 10, 8), int8] */, dtype="float32") /* ty=Tensor[(7, 10, 8), float32] */;
  %410 = minimum(%407, %408) /* ty=Tensor[(7, 10, 8), int8] */;
  %411 = sigmoid(%409) /* ty=Tensor[(7, 10, 8), float32] */;
  (%410, %411)
}

def @func_2664(%var_2646: Tensor[(13, 8, 9), uint8], %var_2647: Tensor[(13, 8, 9), uint8]) -> Tensor[(13, 8, 9), uint8] {
  %412 = cast(%var_2647, dtype="uint8") /* ty=Tensor[(13, 8, 9), uint8] */;
  %413 = shape_of(%var_2646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%var_2646, dtype="uint8") /* ty=Tensor[(13, 8, 9), uint8] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%414, %415) /* ty=Tensor[(13, 8, 9), uint8] */
}

def @func_6087(%var_6002: Tensor[(8, 9, 14), uint64], %var_6003: Tensor[(8, 9, 14), uint64], %var_6081: Tensor[(1365), float64]) -> (Tensor[(14, 4, 7), bool], float64, Tensor[(8, 9, 14), float32], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) {
  %416 = cast(-6.54915f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %417 = reshape(%416, newshape=[]) /* ty=float64 */;
  %418 = @func_3799(%417) /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64) */;
  %419 = cast(%var_6003, dtype="bool") /* ty=Tensor[(8, 9, 14), bool] */;
  %420 = shape_of(%var_6002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%var_6002, dtype="bool") /* ty=Tensor[(8, 9, 14), bool] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %423 = greater(%421, %422) /* ty=Tensor[(8, 9, 14), bool] */;
  %424 = cast(%423, dtype="float32") /* ty=Tensor[(8, 9, 14), float32] */;
  %425 = atan(%424) /* ty=Tensor[(8, 9, 14), float32] */;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(8, 9, 14), float64] */;
  %427 = acosh(%426) /* ty=Tensor[(8, 9, 14), float64] */;
  %428 = cast(%var_6002, dtype="int64") /* ty=Tensor[(8, 9, 14), int64] */;
  %429 = shape_of(%var_6003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%var_6003, dtype="int64") /* ty=Tensor[(8, 9, 14), int64] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %432 = right_shift(%430, %431) /* ty=Tensor[(8, 9, 14), int64] */;
  %433 = cast(%432, dtype="float32") /* ty=Tensor[(8, 9, 14), float32] */;
  %434 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%427, dtype="float32") /* ty=Tensor[(8, 9, 14), float32] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %437 = cast(-6.54915f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %438 = reshape(%437, newshape=[]) /* ty=float64 */;
  %439 = @func_3799(%438) /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64) */;
  %440 = cast(meta[relay.Constant][25] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %441 = reshape(%440, newshape=[3, 4, 2]) /* ty=Tensor[(3, 4, 2), float64] */;
  %442 = cast(%var_6081, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %443 = reshape(%442, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %444 = @func_170(%443) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %445 = %418.0;
  %446 = mod(%435, %436) /* ty=Tensor[(8, 9, 14), float32] */;
  %447 = %439.3;
  %448 = @func_759(%441) /* ty=Tensor[(3, 4, 2), float64] */;
  %449 = %444.0;
  (%445, -6.54915f64 /* ty=float64 */, %446, %447, %448, meta[relay.Constant][25] /* ty=Tensor[(24), float64] */, %449, %var_6081)
}

def @func_4979(%var_4963: Tensor[(1, 52), float64], %var_4964: Tensor[(7, 195), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(5, 10), float32], Tensor[(13, 4, ?), int8], Tensor[(1, 52), float64], Tensor[(7, 195), float64], Tensor[(252), float64], Tensor[(1176), bool], Tensor[(14, 4, 7), float32]) {
  %450 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %451 = reshape(%450, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float32] */;
  %452 = cast(%var_4963, dtype="float64") /* ty=Tensor[(1, 52), float64] */;
  %453 = cast(%var_4964, dtype="float64") /* ty=Tensor[(7, 195), float64] */;
  %454 = reshape(%452, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %455 = reshape(%453, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %456 = @func_1714(%454, %455) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %457 = cast(meta[relay.Constant][27] /* ty=Tensor[(1176), bool] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %458 = cast(meta[relay.Constant][27] /* ty=Tensor[(1176), bool] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %459 = reshape(%457, newshape=[14, 14, 6]) /* ty=Tensor[(14, 14, 6), bool] */;
  %460 = reshape(%458, newshape=[14, 14, 6]) /* ty=Tensor[(14, 14, 6), bool] */;
  %461 = @func_1950(%459, %460) /* ty=(Tensor[(14, 14, 6), bool], Tensor[(7, 195), float64], Tensor[(252), float64]) */;
  %462 = @func_3683() /* ty=Tensor[(14, 4, 7), float32] */;
  %463 = @func_3190(%451) /* ty=Tensor[(1, 10, 5), float32] */;
  %464 = %456.0;
  %465 = %461.2;
  %466 = @func_3378() /* ty=Tensor[(14, 4, 7), float32] */;
  (%462, %463, meta[relay.Constant][26] /* ty=Tensor[(5, 10), float32] */, %464, %var_4963, %var_4964, %465, meta[relay.Constant][27] /* ty=Tensor[(1176), bool] */, %466)
}

def @func_9367() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %467 = @func_8202() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %468 = @func_4179() /* ty=Tensor[(14, 4, 7), float32] */;
  %469 = %467.0;
  (%468, %469)
}

def @func_3541() -> Tensor[(14, 4, 7), float32] {
  %470 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %470.0
}

def @func_9322() -> (Tensor[(14, 4, 7), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8], Tensor[(15, 7, 13), float32]) {
  %471 = @func_4908() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %472 = cast(meta[relay.Constant][28] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %473 = reshape(%472, newshape=[936]) /* ty=Tensor[(936), uint8] */;
  %474 = @func_7602(%473) /* ty=(Tensor[(50), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8]) */;
  %475 = @func_4097() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) */;
  %476 = %471.0;
  %477 = %474.1;
  %478 = %475.2;
  (%476, %477, meta[relay.Constant][28] /* ty=Tensor[(936), uint8] */, %478)
}

def @func_5909(%var_5890: Tensor[(7, 9, 14), uint16], %var_5891: Tensor[(7, 9, 14), uint16]) -> (Tensor[(7, 9, 14), bool], Tensor[(14, 4, 7), float64]) {
  %479 = cast(%var_5891, dtype="uint16") /* ty=Tensor[(7, 9, 14), uint16] */;
  %480 = shape_of(%var_5890, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%var_5890, dtype="uint16") /* ty=Tensor[(7, 9, 14), uint16] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %483 = subtract(%481, %482) /* ty=Tensor[(7, 9, 14), uint16] */;
  %484 = cast(%483, dtype="bool") /* ty=Tensor[(7, 9, 14), bool] */;
  %485 = shape_of(%var_5890, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%var_5890, dtype="bool") /* ty=Tensor[(7, 9, 14), bool] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %488 = not_equal(%486, %487) /* ty=Tensor[(7, 9, 14), bool] */;
  %489 = @func_5000() /* ty=Tensor[(14, 4, 7), float64] */;
  (%488, %489)
}

def @func_9592(%var_9539: Tensor[(7, 14, 4), bool], %var_9563: Tensor[(52), float64]) -> (Tensor[(52), float64], Tensor[(52), float64], Tensor[(7, 14, 4), float64], Tensor[(14, 4, 7), bool]) {
  %490 = cast(%var_9563, dtype="float64") /* ty=Tensor[(52), float64] */;
  %491 = reshape(%490, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %492 = @func_6389(%491) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(11, 15, 15), bool], Tensor[(2475), float64], Tensor[(52), float64], Tensor[(1, 1365), float64], Tensor[(15, 7, 13), bool]) */;
  %493 = cast(%var_9539, dtype="bool") /* ty=Tensor[(7, 14, 4), bool] */;
  %494 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(7, 14, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 14, 4), bool] */, dtype="bool") /* ty=Tensor[(7, 14, 4), bool] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %497 = logical_and(%495, %496) /* ty=Tensor[(7, 14, 4), bool] */;
  %498 = @func_8154() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %499 = %498.0;
  %500 = cast(%499, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %501 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%497, dtype="float64") /* ty=Tensor[(7, 14, 4), float64] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %504 = @func_5000() /* ty=Tensor[(14, 4, 7), float64] */;
  %505 = cast(%499, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %506 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %507 = cast(%504, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %509 = %492.3;
  %510 = power(%502, %503) /* ty=Tensor[(7, 14, 4), float64] */;
  %511 = greater(%507, %508) /* ty=Tensor[(14, 4, 7), bool] */;
  (%509, %var_9563, %510, %511)
}

def @func_2190() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %512 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %513 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %514 = cast(%513, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %515 = %512.0;
  %516 = exp(%514) /* ty=Tensor[(14, 4, 7), float32] */;
  (%515, %516)
}

def @func_4005() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) {
  %517 = @func_3214() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %518 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %519 = %517.0;
  %520 = @func_3152() /* ty=Tensor[(14, 4, 7), float32] */;
  (%518, %519, %520)
}

def @func_3714() -> Tensor[(14, 4, 7), float32] {
  %521 = @func_3269() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %521.1
}

def @func_9246() -> Tensor[(15, 7, 13), bool] {
  %522 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %522.1
}

def @func_6651() -> (Tensor[(14, 4, 7), float64], Tensor[(2475), float64], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(52), float32], Tensor[(52), int16]) {
  %523 = @func_6339() /* ty=(Tensor[(14, 4, 7), float64],) */;
  %524 = cast(meta[relay.Constant][30] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %525 = reshape(%524, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %526 = @func_6389(%525) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(11, 15, 15), bool], Tensor[(2475), float64], Tensor[(52), float64], Tensor[(1, 1365), float64], Tensor[(15, 7, 13), bool]) */;
  %527 = @func_5460() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %528 = @func_3214() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %529 = cast(meta[relay.Constant][31] /* ty=Tensor[(52), float64] */, dtype="float32") /* ty=Tensor[(52), float32] */;
  %530 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(52), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %531 = cast(meta[relay.Constant][30] /* ty=Tensor[(52), float64] */, dtype="float32") /* ty=Tensor[(52), float32] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?), float32] */;
  %533 = cast(meta[relay.Constant][30] /* ty=Tensor[(52), float64] */, dtype="int16") /* ty=Tensor[(52), int16] */;
  %534 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(52), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %535 = cast(meta[relay.Constant][31] /* ty=Tensor[(52), float64] */, dtype="int16") /* ty=Tensor[(52), int16] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?), int16] */;
  %537 = %523.0;
  %538 = %526.2;
  %539 = %527.0;
  %540 = %528.0;
  %541 = floor_mod(%531, %532) /* ty=Tensor[(52), float32] */;
  %542 = bitwise_and(%535, %536) /* ty=Tensor[(52), int16] */;
  (%537, %538, %539, %540, %541, %542)
}

def @func_8202() -> (Tensor[(14, 4, 7), float32],) {
  %543 = @func_5716() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %544 = %543.1;
  (%544,)
}

def @func_6734() -> Tensor[(14, 4, 7), float32] {
  @func_2939() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_8648(%var_8631: Tensor[(30), int32], %var_8640: Tensor[(12, 8, 9), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(30), int32], Tensor[(1, 1176), float64], Tensor[(12, 8, 9), bool], Tensor[(7, 10, 8), float32], Tensor[(560), int8]) {
  %545 = @func_3152() /* ty=Tensor[(14, 4, 7), float32] */;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %547 = cast(%var_8631, dtype="int32") /* ty=Tensor[(30), int32] */;
  %548 = cast(%var_8631, dtype="int32") /* ty=Tensor[(30), int32] */;
  %549 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 1176), float64] */, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
  %550 = reshape(%547, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
  %551 = reshape(%548, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
  %552 = reshape(%549, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %553 = @func_713(%550, %551, %552) /* ty=(Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) */;
  %554 = %553.1;
  %555 = cast(%var_8640, dtype="bool") /* ty=Tensor[(12, 8, 9), bool] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="bool") /* ty=Tensor[(12, 8, 9), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %559 = cast(meta[relay.Constant][33] /* ty=Tensor[(560), int8] */, dtype="int8") /* ty=Tensor[(560), int8] */;
  %560 = reshape(%559, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int8] */;
  %561 = @func_4384(%560) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */;
  %562 = acosh(%546) /* ty=Tensor[(14, 4, 7), float32] */;
  %563 = @func_7528() /* ty=Tensor[(14, 4, 7), float32] */;
  %564 = less_equal(%557, %558) /* ty=Tensor[(12, 8, 9), bool] */;
  %565 = %561.1;
  (%562, %563, %var_8631, meta[relay.Constant][32] /* ty=Tensor[(1, 1176), float64] */, %564, %565, meta[relay.Constant][33] /* ty=Tensor[(560), int8] */)
}

def @func_7613() -> Tensor[(14, 4, 7), float32] {
  @func_1970() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_5338() -> (Tensor[(14, 4, 7), bool],) {
  %566 = @func_3214() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %567 = %566.0;
  (%567,)
}

def @func_4119(%var_4105: Tensor[(9, 16, 1), float32]) -> Tensor[(9, 16, 1), float64] {
  %568 = cast(%var_4105, dtype="float32") /* ty=Tensor[(9, 16, 1), float32] */;
  %569 = cosh(%568) /* ty=Tensor[(9, 16, 1), float32] */;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(9, 16, 1), float64] */;
  asin(%570) /* ty=Tensor[(9, 16, 1), float64] */
}

def @func_3269() -> (Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) {
  %571 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
  %572 = %571.0;
  %573 = @func_2939() /* ty=Tensor[(14, 4, 7), float32] */;
  (%572, %573)
}

def @func_2137(%var_2119: Tensor[(60), float64], %var_2126: Tensor[(42, 1), float64], %var_2127: Tensor[(1365), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64], Tensor[(14, 1, 3), float64], Tensor[(42, 1), float64], Tensor[(1365), float64], Tensor[(14, 4, 7), float32]) {
  %574 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %575 = cast(%var_2119, dtype="float64") /* ty=Tensor[(60), float64] */;
  %576 = reshape(%575, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %577 = @func_1812(%576) /* ty=(Tensor[(5, 3, 4), float64],) */;
  %578 = cast(%var_2126, dtype="float64") /* ty=Tensor[(42, 1), float64] */;
  %579 = cast(%var_2127, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %580 = reshape(%578, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), float64] */;
  %581 = reshape(%579, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), float64] */;
  %582 = @func_834(%580, %581) /* ty=(Tensor[(14, 1, 3), float64], Tensor[(3, 4, 2), float64], Tensor[(12, 2), float64], Tensor[(15, 7, 13), bool], Tensor[(1365, 1), float64]) */;
  %583 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %584 = %574.0;
  %585 = %577.0;
  %586 = %582.0;
  %587 = %583.0;
  (%584, %585, %var_2119, %586, %var_2126, %var_2127, %587)
}

def @func_713(%var_658: Tensor[(5, 3, 2), int32], %var_659: Tensor[(5, 3, 2), int32], %var_702: Tensor[(1176), float64]) -> (Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) {
  %588 = cast(%var_659, dtype="int32") /* ty=Tensor[(5, 3, 2), int32] */;
  %589 = shape_of(%var_658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%var_658, dtype="int32") /* ty=Tensor[(5, 3, 2), int32] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %592 = cast(-9.50255f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %593 = reshape(%592, newshape=[]) /* ty=float64 */;
  %594 = @func_636(%593) /* ty=(Tensor[(12, 8, 9), float64],) */;
  %595 = cast(meta[relay.Constant][34] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %596 = reshape(%595, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), float64] */;
  %597 = @func_284(%596) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) */;
  %598 = cast(%var_702, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %599 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(1176), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %600 = cast(meta[relay.Constant][34] /* ty=Tensor[(1176), float64] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?), bool] */;
  %602 = subtract(%590, %591) /* ty=Tensor[(5, 3, 2), int32] */;
  %603 = %594.0;
  %604 = %597.0;
  %605 = logical_or(%600, %601) /* ty=Tensor[(1176), bool] */;
  (%602, %603, -9.50255f64 /* ty=float64 */, %604, %605)
}

def @func_7126(%var_7097: int64, %var_7098: Tensor[(13, 13, 1), int64], %var_7119: Tensor[(30), int32]) -> (Tensor[(13, 13, 1), int64], Tensor[(7, 12, 14), float32], Tensor[(30), int32], Tensor[(1176, 1), float64], Tensor[(13, 13, 1), float32]) {
  %606 = cast(%var_7097, dtype="int64") /* ty=int64 */;
  %607 = cast(%var_7098, dtype="int64") /* ty=Tensor[(13, 13, 1), int64] */;
  %608 = cast(%var_7119, dtype="int32") /* ty=Tensor[(30), int32] */;
  %609 = cast(%var_7119, dtype="int32") /* ty=Tensor[(30), int32] */;
  %610 = cast(meta[relay.Constant][35] /* ty=Tensor[(1176, 1), float64] */, dtype="float64") /* ty=Tensor[(1176, 1), float64] */;
  %611 = reshape(%608, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
  %612 = reshape(%609, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
  %613 = reshape(%610, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %614 = @func_713(%611, %612, %613) /* ty=(Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) */;
  %615 = cast(%var_7098, dtype="float32") /* ty=Tensor[(13, 13, 1), float32] */;
  %616 = maximum(%606, %607) /* ty=Tensor[(13, 13, 1), int64] */;
  %617 = %614.3;
  %618 = acosh(%615) /* ty=Tensor[(13, 13, 1), float32] */;
  (%616, %617, %var_7119, meta[relay.Constant][35] /* ty=Tensor[(1176, 1), float64] */, %618)
}

def @func_7046() -> Tensor[(14, 4, 7), float32] {
  @func_6843() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_8276() -> (Tensor[(14, 4, 7), float32], Tensor[(60), float64]) {
  %619 = @func_7155() /* ty=(Tensor[(60), float64],) */;
  %620 = @func_5648() /* ty=Tensor[(14, 4, 7), float32] */;
  %621 = %619.0;
  (%620, %621)
}

def @func_8606() -> (Tensor[(60), float64],) {
  %622 = @func_7155() /* ty=(Tensor[(60), float64],) */;
  %623 = %622.0;
  (%623,)
}

def @func_9375() -> (Tensor[(60), float64],) {
  %624 = @func_9187() /* ty=(Tensor[(60), float64],) */;
  %625 = %624.0;
  (%625,)
}

def @func_284(%var_262: Tensor[(7, 12, 14), float64]) -> (Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) {
  %626 = cast(%var_262, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
  %627 = cos(%626) /* ty=Tensor[(7, 12, 14), float64] */;
  %628 = cast(%627, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %629 = cast(meta[relay.Constant][36] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %630 = reshape(%629, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %631 = @func_170(%630) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %632 = %631.0;
  %633 = cast(%632, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %634 = reshape(%633, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %635 = @func_170(%634) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %636 = erf(%628) /* ty=Tensor[(7, 12, 14), float32] */;
  %637 = %635.0;
  (%636, %632, meta[relay.Constant][36] /* ty=Tensor[(1365), float64] */, %637)
}

def @func_1970() -> Tensor[(14, 4, 7), float32] {
  %638 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %638.0
}

def @func_5648() -> Tensor[(14, 4, 7), float32] {
  @func_5288() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_6532() -> (Tensor[(14, 4, 7), float32], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 12, 14), float32], Tensor[(1176), float64]) {
  %639 = @func_5716() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %640 = cast(meta[relay.Constant][37] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %641 = reshape(%640, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), float32] */;
  %642 = cast(meta[relay.Constant][38] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %643 = reshape(%642, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), float64] */;
  %644 = @func_284(%643) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) */;
  %645 = %639.4;
  %646 = @func_4119(%641) /* ty=Tensor[(9, 16, 1), float64] */;
  %647 = %644.0;
  (%645, %646, meta[relay.Constant][37] /* ty=Tensor[(144), float32] */, %647, meta[relay.Constant][38] /* ty=Tensor[(1176), float64] */)
}

def @func_2869(%var_2812: Tensor[(11, 15, 3), int8], %var_2813: Tensor[(11, 15, 3), int8], %var_2842: Tensor[(91, 15), float64]) -> (Tensor[(11, 15, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(91, 15), float64], Tensor[(13, 4, 1), float64], Tensor[(26, 2), float64]) {
  %648 = cast(%var_2813, dtype="int8") /* ty=Tensor[(11, 15, 3), int8] */;
  %649 = shape_of(%var_2812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%var_2812, dtype="int8") /* ty=Tensor[(11, 15, 3), int8] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %652 = left_shift(%650, %651) /* ty=Tensor[(11, 15, 3), int8] */;
  %653 = cast(%var_2812, dtype="bool") /* ty=Tensor[(11, 15, 3), bool] */;
  %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(%652, dtype="bool") /* ty=Tensor[(11, 15, 3), bool] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %657 = cast(%var_2842, dtype="float64") /* ty=Tensor[(91, 15), float64] */;
  %658 = reshape(%657, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %659 = @func_170(%658) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %660 = cast(meta[relay.Constant][39] /* ty=Tensor[(26, 2), float64] */, dtype="float64") /* ty=Tensor[(26, 2), float64] */;
  %661 = %659.0;
  %662 = cast(%661, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %663 = reshape(%660, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %664 = reshape(%662, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %665 = @func_1714(%663, %664) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %666 = logical_and(%655, %656) /* ty=Tensor[(11, 15, 3), bool] */;
  %667 = %665.3;
  (%666, %661, %var_2842, %667, meta[relay.Constant][39] /* ty=Tensor[(26, 2), float64] */)
}

def @func_4653() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32]) {
  %668 = @func_3214() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %669 = %668.0;
  %670 = cast(%669, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %671 = cast(meta[relay.Constant][40] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %672 = reshape(%671, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float32] */;
  %673 = @func_3378() /* ty=Tensor[(14, 4, 7), float32] */;
  %674 = erf(%670) /* ty=Tensor[(14, 4, 7), float32] */;
  %675 = @func_3190(%672) /* ty=Tensor[(1, 10, 5), float32] */;
  (%673, %674, %675, meta[relay.Constant][40] /* ty=Tensor[(50), float32] */)
}

def @func_6389(%var_6377: Tensor[(52), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(11, 15, 15), bool], Tensor[(2475), float64], Tensor[(52), float64], Tensor[(1, 1365), float64], Tensor[(15, 7, 13), bool]) {
  %676 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %677 = cast(meta[relay.Constant][41] /* ty=Tensor[(2475), float64] */, dtype="float64") /* ty=Tensor[(2475), float64] */;
  %678 = cast(%var_6377, dtype="float64") /* ty=Tensor[(52), float64] */;
  %679 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 1365), float64] */, dtype="float64") /* ty=Tensor[(1, 1365), float64] */;
  %680 = reshape(%677, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float64] */;
  %681 = reshape(%678, newshape=[1, 52]) /* ty=Tensor[(1, 52), float64] */;
  %682 = reshape(%679, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %683 = @func_2632(%680, %681, %682) /* ty=(Tensor[(11, 15, 15), bool], Tensor[(11, 15, 15), int8], Tensor[(15, 7, 13), bool], Tensor[(1, 52), float64], Tensor[(1365), float64]) */;
  %684 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 1365), float64] */, dtype="float64") /* ty=Tensor[(1, 1365), float64] */;
  %685 = reshape(%684, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %686 = @func_170(%685) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %687 = %676.0;
  %688 = %683.0;
  %689 = %686.0;
  (%687, %688, meta[relay.Constant][41] /* ty=Tensor[(2475), float64] */, %var_6377, meta[relay.Constant][42] /* ty=Tensor[(1, 1365), float64] */, %689)
}

def @func_6273(%var_6263: Tensor[(10, 15, 13), float32]) -> Tensor[(10, 15, 13), float32] {
  %690 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(10, 15, 1), float32] */;
  %691 = cast(%var_6263, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %692 = divide(%690, %691) /* ty=Tensor[(10, 15, 13), float32] */;
  %693 = cast(%var_6263, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %694 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%692, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%695, %696) /* ty=Tensor[(10, 15, 13), float32] */
}

def @func_8154() -> (Tensor[(14, 4, 7), float32],) {
  %697 = @func_4179() /* ty=Tensor[(14, 4, 7), float32] */;
  (%697,)
}

def @func_5844() -> Tensor[(14, 4, 7), float32] {
  @func_1970() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_3683() -> Tensor[(14, 4, 7), float32] {
  @func_2793() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_5199(%var_5168: Tensor[(12, 8, 9), float32], %var_5184: Tensor[(52), float64], %var_5188: Tensor[(1176), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(252), float64], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), bool], Tensor[(42), float64], Tensor[(52), float64], Tensor[(455, 3), float64], Tensor[(60), float64], Tensor[(14, 3), float64], Tensor[(1176), float64], Tensor[(14, 4, 7), bool]) {
  %698 = @func_3714() /* ty=Tensor[(14, 4, 7), float32] */;
  %699 = cast(%698, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %700 = reshape(%699, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %701 = @func_3335(%700) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), uint64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(14, 4, 7), float32]) */;
  %702 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
  %703 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
  %704 = %703.1;
  %705 = cast(%var_5168, dtype="bool") /* ty=Tensor[(12, 8, 9), bool] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%704, dtype="bool") /* ty=Tensor[(12, 8, 9), bool] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %709 = cast(%var_5184, dtype="float64") /* ty=Tensor[(52), float64] */;
  %710 = cast(meta[relay.Constant][44] /* ty=Tensor[(455, 3), float64] */, dtype="float64") /* ty=Tensor[(455, 3), float64] */;
  %711 = cast(meta[relay.Constant][45] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %712 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 3), float64] */;
  %713 = cast(%var_5188, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %714 = reshape(%709, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %715 = reshape(%710, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %716 = reshape(%711, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %717 = reshape(%712, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %718 = reshape(%713, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %719 = @func_2306(%714, %715, %716, %717, %718) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(52), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(42, 1365), bool], float64, Tensor[(30), int32], Tensor[(1176), float64], Tensor[(13, 4, 1365), bool]) */;
  %720 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
  %721 = %701.3;
  %722 = %702.1;
  %723 = logical_or(%707, %708) /* ty=Tensor[(12, 8, 9), bool] */;
  %724 = %719.3;
  %725 = %720.0;
  (%698, %721, %722, %723, %724, %var_5184, meta[relay.Constant][44] /* ty=Tensor[(455, 3), float64] */, meta[relay.Constant][45] /* ty=Tensor[(60), float64] */, meta[relay.Constant][46] /* ty=Tensor[(14, 3), float64] */, %var_5188, %725)
}

def @func_6784() -> Tensor[(14, 4, 7), float64] {
  %726 = @func_3152() /* ty=Tensor[(14, 4, 7), float32] */;
  %727 = cast(%726, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  asinh(%727) /* ty=Tensor[(14, 4, 7), float64] */
}

def @func_4743(%var_4728: Tensor[(3, 9, 4), int8], %var_4729: Tensor[(3, 9, 4), int8]) -> (Tensor[(3, 9, 4), int8], Tensor[(14, 4, 7), bool]) {
  %728 = cast(%var_4729, dtype="int8") /* ty=Tensor[(3, 9, 4), int8] */;
  %729 = shape_of(%var_4728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%var_4728, dtype="int8") /* ty=Tensor[(3, 9, 4), int8] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %732 = @func_3214() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %733 = subtract(%730, %731) /* ty=Tensor[(3, 9, 4), int8] */;
  %734 = %732.0;
  (%733, %734)
}

def @func_5449() -> (Tensor[(60), float64], Tensor[(5, 3, 4), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) {
  %735 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
  %736 = %735.5;
  %737 = cast(%736, dtype="float64") /* ty=Tensor[(60), float64] */;
  %738 = reshape(%737, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %739 = @func_1812(%738) /* ty=(Tensor[(5, 3, 4), float64],) */;
  %740 = cast(meta[relay.Constant][47] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %741 = reshape(%740, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %742 = @func_170(%741) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %743 = %739.0;
  %744 = %742.0;
  (%736, %743, %744, meta[relay.Constant][47] /* ty=Tensor[(1365), float64] */)
}

def @func_8038(%var_7983: Tensor[(3, 5, 14), float64], %var_7984: Tensor[(3, 5, 14), float64], %var_8028: Tensor[(30), int32], %var_8029: Tensor[(1176), float64]) -> (Tensor[(3, 5, 14), uint64], Tensor[(14, 4, 7), float32], Tensor[(3, 5, 14), float64], Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(7, 12, 14), float32], Tensor[(30), int32], Tensor[(1176), float64]) {
  %745 = cast(%var_7984, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
  %746 = shape_of(%var_7983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%var_7983, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %749 = power(%747, %748) /* ty=Tensor[(3, 5, 14), float64] */;
  %750 = cast(%749, dtype="uint64") /* ty=Tensor[(3, 5, 14), uint64] */;
  %751 = shape_of(%var_7983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %752 = cast(%var_7983, dtype="uint64") /* ty=Tensor[(3, 5, 14), uint64] */;
  %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %754 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %755 = cast(%749, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
  %756 = erf(%755) /* ty=Tensor[(3, 5, 14), float64] */;
  %757 = cast(%756, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
  %758 = @func_4653() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32]) */;
  %759 = cast(%var_8028, dtype="int32") /* ty=Tensor[(30), int32] */;
  %760 = cast(%var_8028, dtype="int32") /* ty=Tensor[(30), int32] */;
  %761 = cast(%var_8029, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %762 = reshape(%759, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
  %763 = reshape(%760, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
  %764 = reshape(%761, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %765 = @func_713(%762, %763, %764) /* ty=(Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) */;
  %766 = bitwise_and(%752, %753) /* ty=Tensor[(3, 5, 14), uint64] */;
  %767 = %754.0;
  %768 = log(%757) /* ty=Tensor[(3, 5, 14), float64] */;
  %769 = %758.2;
  %770 = @func_7180() /* ty=Tensor[(14, 4, 7), float32] */;
  %771 = %765.3;
  (%766, %767, %768, %769, %770, %771, %var_8028, %var_8029)
}

def @func_9439() -> (Tensor[(14, 4, 7), float32],) {
  %772 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %773 = %772.0;
  (%773,)
}

def @func_5460() -> (Tensor[(14, 4, 7), float32],) {
  %774 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  (%774,)
}

def @func_4858(%var_4848: Tensor[(1, 4, 12), float64]) -> (Tensor[(2, 4, 12), float64], Tensor[(14, 4, 7), bool]) {
  %775 = cast(%var_4848, dtype="float64") /* ty=Tensor[(1, 4, 12), float64] */;
  %776 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 4, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 12), float64] */;
  %777 = @func_4097() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) */;
  %778 = floor_divide(%775, %776) /* ty=Tensor[(2, 4, 12), float64] */;
  %779 = %777.0;
  (%778, %779)
}

def @func_8347(%var_8334: Tensor[(560), int8]) -> (Tensor[(1365), float64], Tensor[(7, 10, 8), float32], Tensor[(560), int8], float64, Tensor[(1008), uint64]) {
  %780 = @func_6152() /* ty=(Tensor[(1365), float64],) */;
  %781 = %780.0;
  %782 = cast(%781, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %783 = cast(%var_8334, dtype="int8") /* ty=Tensor[(560), int8] */;
  %784 = reshape(%783, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int8] */;
  %785 = @func_4384(%784) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */;
  %786 = cast(meta[relay.Constant][49] /* ty=Tensor[(1008), uint64] */, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %787 = cast(meta[relay.Constant][49] /* ty=Tensor[(1008), uint64] */, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %788 = cast(%781, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %789 = reshape(%786, newshape=[8, 9, 14]) /* ty=Tensor[(8, 9, 14), uint64] */;
  %790 = reshape(%787, newshape=[8, 9, 14]) /* ty=Tensor[(8, 9, 14), uint64] */;
  %791 = reshape(%788, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %792 = @func_6087(%789, %790, %791) /* ty=(Tensor[(14, 4, 7), bool], float64, Tensor[(8, 9, 14), float32], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %793 = log2(%782) /* ty=Tensor[(1365), float64] */;
  %794 = %785.1;
  %795 = %792.3;
  (%793, %794, %var_8334, %795, meta[relay.Constant][49] /* ty=Tensor[(1008), uint64] */)
}

def @func_2705(%var_2669: Tensor[(15, 5, 13), float32], %var_2670: Tensor[(15, 5, 13), float32], %var_2689: Tensor[(15, 5, 13), float32]) -> (Tensor[(1365), float64], Tensor[(52), float64], Tensor[(14, 3), float64], Tensor[(15, 5, 13), bool]) {
  %796 = cast(meta[relay.Constant][50] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %797 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 3), float64] */;
  %798 = reshape(%796, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %799 = reshape(%797, newshape=[42, 1]) /* ty=Tensor[(42, 1), float64] */;
  %800 = @func_2570(%798, %799) /* ty=(Tensor[(1365), float64], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(14, 4, 7), int32], Tensor[(3, 4, 2), float64], Tensor[(42, 1), float64], Tensor[(1365, 1), float64]) */;
  %801 = cast(%var_2670, dtype="float32") /* ty=Tensor[(15, 5, 13), float32] */;
  %802 = shape_of(%var_2669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%var_2669, dtype="float32") /* ty=Tensor[(15, 5, 13), float32] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %805 = mod(%803, %804) /* ty=Tensor[(15, 5, 13), float32] */;
  %806 = cast(%805, dtype="float32") /* ty=Tensor[(15, 5, 13), float32] */;
  %807 = log2(%806) /* ty=Tensor[(15, 5, 13), float32] */;
  %808 = cast(%var_2689, dtype="bool") /* ty=Tensor[(15, 5, 13), bool] */;
  %809 = shape_of(%807, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(%807, dtype="bool") /* ty=Tensor[(15, 5, 13), bool] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %812 = %800.0;
  %813 = not_equal(%810, %811) /* ty=Tensor[(15, 5, 13), bool] */;
  (%812, meta[relay.Constant][50] /* ty=Tensor[(52), float64] */, meta[relay.Constant][51] /* ty=Tensor[(14, 3), float64] */, %813)
}

def @func_2793() -> Tensor[(14, 4, 7), float32] {
  %814 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %814.0
}

def @func_8760() -> Tensor[(14, 4, 7), float32] {
  %815 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %815.0
}

def @func_5568() -> Tensor[(14, 4, 7), bool] {
  @func_3880() /* ty=Tensor[(14, 4, 7), bool] */
}

def @func_8799() -> (Tensor[(14, 4, 7), bool],) {
  %816 = @func_5568() /* ty=Tensor[(14, 4, 7), bool] */;
  (%816,)
}

def @func_5992() -> (Tensor[(14, 4, 7), float32], Tensor[(60), float64], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(560), int8], Tensor[(14, 4, 7), float32]) {
  %817 = @func_4712() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(7, 10, 8), float32], Tensor[(560), int8], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
  %818 = cast(meta[relay.Constant][52] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %819 = cast(meta[relay.Constant][53] /* ty=Tensor[(560), int8] */, dtype="int8") /* ty=Tensor[(560), int8] */;
  %820 = reshape(%818, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %821 = reshape(%819, newshape=[560]) /* ty=Tensor[(560), int8] */;
  %822 = @func_4561(%820, %821) /* ty=(Tensor[(576), bool], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 10, 8), int8], Tensor[(560), int8], Tensor[(14, 4, 7), float32]) */;
  %823 = @func_2939() /* ty=Tensor[(14, 4, 7), float32] */;
  %824 = %817.4;
  %825 = %822.1;
  %826 = @func_3683() /* ty=Tensor[(14, 4, 7), float32] */;
  (%823, %824, %825, meta[relay.Constant][52] /* ty=Tensor[(144), float32] */, meta[relay.Constant][53] /* ty=Tensor[(560), int8] */, %826)
}

def @func_8931() -> Tensor[(14, 4, 7), float32] {
  %827 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %827.1
}

def @func_834(%var_814: Tensor[(14, 1, 3), float64], %var_828: Tensor[(1365, 1), float64]) -> (Tensor[(14, 1, 3), float64], Tensor[(3, 4, 2), float64], Tensor[(12, 2), float64], Tensor[(15, 7, 13), bool], Tensor[(1365, 1), float64]) {
  %828 = cast(%var_814, dtype="float64") /* ty=Tensor[(14, 1, 3), float64] */;
  %829 = cast(meta[relay.Constant][54] /* ty=Tensor[(12, 2), float64] */, dtype="float64") /* ty=Tensor[(12, 2), float64] */;
  %830 = reshape(%829, newshape=[3, 4, 2]) /* ty=Tensor[(3, 4, 2), float64] */;
  %831 = cast(%var_828, dtype="float64") /* ty=Tensor[(1365, 1), float64] */;
  %832 = reshape(%831, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %833 = @func_170(%832) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %834 = cos(%828) /* ty=Tensor[(14, 1, 3), float64] */;
  %835 = @func_759(%830) /* ty=Tensor[(3, 4, 2), float64] */;
  %836 = %833.0;
  (%834, %835, meta[relay.Constant][54] /* ty=Tensor[(12, 2), float64] */, %836, %var_828)
}

def @func_1812(%var_1788: Tensor[(5, 3, 4), float64]) -> (Tensor[(5, 3, 4), float64],) {
  %837 = cast(%var_1788, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %838 = exp(%837) /* ty=Tensor[(5, 3, 4), float64] */;
  (%838,)
}

def @func_2306(%var_2253: Tensor[(52), float64], %var_2254: Tensor[(1365), float64], %var_2272: Tensor[(60), float64], %var_2273: Tensor[(42), float64], %var_2299: Tensor[(1176), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(52), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(42, 1365), bool], float64, Tensor[(30), int32], Tensor[(1176), float64], Tensor[(13, 4, 1365), bool]) {
  %839 = cast(%var_2272, dtype="float64") /* ty=Tensor[(60), float64] */;
  %840 = cast(%var_2273, dtype="float64") /* ty=Tensor[(42), float64] */;
  %841 = cast(%var_2254, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %842 = reshape(%839, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %843 = reshape(%840, newshape=[42, 1]) /* ty=Tensor[(42, 1), float64] */;
  %844 = reshape(%841, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %845 = @func_2137(%842, %843, %844) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64], Tensor[(14, 1, 3), float64], Tensor[(42, 1), float64], Tensor[(1365), float64], Tensor[(14, 4, 7), float32]) */;
  %846 = %845.4;
  %847 = cast(%846, dtype="bool") /* ty=Tensor[(42, 1), bool] */;
  %848 = cast(%var_2254, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %849 = cast(meta[relay.Constant][55] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %850 = cast(meta[relay.Constant][55] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %851 = cast(%var_2299, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %852 = reshape(%849, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
  %853 = reshape(%850, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
  %854 = reshape(%851, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %855 = @func_713(%852, %853, %854) /* ty=(Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) */;
  %856 = cast(%var_2253, dtype="float64") /* ty=Tensor[(52), float64] */;
  %857 = cast(%var_2254, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %858 = reshape(%856, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %859 = reshape(%857, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %860 = @func_1714(%858, %859) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %861 = %860.3;
  %862 = cast(%861, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
  %863 = cast(%var_2254, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %864 = divide(%862, %863) /* ty=Tensor[(13, 4, 1365), float64] */;
  %865 = cast(%var_2254, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %866 = cast(%864, dtype="bool") /* ty=Tensor[(13, 4, 1365), bool] */;
  %867 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %868 = equal(%847, %848) /* ty=Tensor[(42, 1365), bool] */;
  %869 = %855.2;
  %870 = equal(%865, %866) /* ty=Tensor[(13, 4, 1365), bool] */;
  (%867, %var_2253, %var_2272, %var_2273, %868, %869, meta[relay.Constant][55] /* ty=Tensor[(30), int32] */, %var_2299, %870)
}

def @func_5000() -> Tensor[(14, 4, 7), float64] {
  %871 = @func_2768() /* ty=(Tensor[(14, 4, 7), float64], Tensor[(1365), float64]) */;
  %871.0
}

def @func_4511(%var_4499: Tensor[(4, 8, 2), int32]) -> (Tensor[(4, 8, 2), int32], Tensor[(14, 4, 7), float32]) {
  %872 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 8, 2), int32] */, dtype="int32") /* ty=Tensor[(4, 8, 2), int32] */;
  %873 = shape_of(%var_4499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%var_4499, dtype="int32") /* ty=Tensor[(4, 8, 2), int32] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %876 = minimum(%874, %875) /* ty=Tensor[(4, 8, 2), int32] */;
  %877 = @func_4179() /* ty=Tensor[(14, 4, 7), float32] */;
  (%876, %877)
}

def @func_5042() -> (Tensor[(50), float32], Tensor[(14, 4, 7), float32]) {
  %878 = @func_4653() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32]) */;
  %879 = %878.3;
  %880 = @func_3541() /* ty=Tensor[(14, 4, 7), float32] */;
  (%879, %880)
}

def @func_6464(%var_6454: Tensor[(8, 16, 2), uint64], %var_6455: Tensor[(8, 16, 2), uint64]) -> Tensor[(8, 16, 2), uint64] {
  %881 = cast(%var_6455, dtype="uint64") /* ty=Tensor[(8, 16, 2), uint64] */;
  %882 = shape_of(%var_6454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%var_6454, dtype="uint64") /* ty=Tensor[(8, 16, 2), uint64] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  subtract(%883, %884) /* ty=Tensor[(8, 16, 2), uint64] */
}

def @func_2768() -> (Tensor[(14, 4, 7), float64], Tensor[(1365), float64]) {
  %885 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %886 = %885.0;
  %887 = cast(%886, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %888 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %889 = rsqrt(%887) /* ty=Tensor[(14, 4, 7), float64] */;
  %890 = %888.2;
  (%889, %890)
}

def @func_8182() -> (Tensor[(14, 4, 7), bool],) {
  %891 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
  %892 = %891.0;
  (%892,)
}

def @func_7782(%var_7774: Tensor[(936), uint8]) -> (Tensor[(14, 4, 7), float32], Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8]) {
  %893 = @func_4211() /* ty=(Tensor[(1365), float64],) */;
  %894 = cast(%var_7774, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %895 = cast(%var_7774, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %896 = reshape(%894, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
  %897 = reshape(%895, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
  %898 = @func_3152() /* ty=Tensor[(14, 4, 7), float32] */;
  %899 = %893.0;
  %900 = @func_6681() /* ty=Tensor[(14, 4, 7), float32] */;
  %901 = @func_2664(%896, %897) /* ty=Tensor[(13, 8, 9), uint8] */;
  (%898, %899, %900, %901, %var_7774)
}

def @func_7973() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %902 = @func_7180() /* ty=Tensor[(14, 4, 7), float32] */;
  %903 = @func_7180() /* ty=Tensor[(14, 4, 7), float32] */;
  (%902, %903)
}

def @func_8705() -> Tensor[(14, 4, 7), float32] {
  %904 = @func_8202() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %904.0
}

def @func_2372() -> (Tensor[(14, 4, 7), float32],) {
  %905 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %906 = %905.1;
  (%906,)
}

def @func_3123() -> (Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) {
  %907 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %908 = %907.1;
  %909 = cast(%908, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %910 = cast(8.22347f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %911 = cast(8.22347f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %912 = reshape(%911, newshape=[]) /* ty=float64 */;
  %913 = @func_2431(%912) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(14, 4, 7), float32]) */;
  %914 = %913.1;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(12, 8, 9), float32] */;
  %916 = greater_equal(%909, %910) /* ty=Tensor[(14, 4, 7), bool] */;
  %917 = log2(%915) /* ty=Tensor[(12, 8, 9), float32] */;
  (%916, %917)
}

def @func_9222() -> (Tensor[(60), float64],) {
  %918 = @func_8276() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(60), float64]) */;
  %919 = %918.1;
  (%919,)
}

def @func_8738() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %920 = @func_2939() /* ty=Tensor[(14, 4, 7), float32] */;
  %921 = cast(%920, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %922 = reshape(%921, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float32] */;
  %923 = @func_2212(%922) /* ty=Tensor[(14, 4, 7), float32] */;
  (%920, %923)
}

def @func_7034(%var_7019: Tensor[(1365), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(13, 4, ?), int8], Tensor[(52), float64], Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %924 = @func_5716() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %925 = cast(meta[relay.Constant][57] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %926 = cast(%var_7019, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %927 = reshape(%925, newshape=[1, 52]) /* ty=Tensor[(1, 52), float64] */;
  %928 = reshape(%926, newshape=[7, 195]) /* ty=Tensor[(7, 195), float64] */;
  %929 = @func_4979(%927, %928) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(5, 10), float32], Tensor[(13, 4, ?), int8], Tensor[(1, 52), float64], Tensor[(7, 195), float64], Tensor[(252), float64], Tensor[(1176), bool], Tensor[(14, 4, 7), float32]) */;
  %930 = @func_4345() /* ty=(Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(576), bool]) */;
  %931 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %932 = %924.4;
  %933 = %929.3;
  %934 = %930.1;
  %935 = %931.0;
  (%932, %933, meta[relay.Constant][57] /* ty=Tensor[(52), float64] */, %var_7019, %934, %935)
}

def @func_5288() -> Tensor[(14, 4, 7), float32] {
  %936 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %936.1
}

def @func_1864() -> (Tensor[(14, 4, 7), float32],) {
  %937 = cast(meta[relay.Constant][58] /* ty=Tensor[(14, 4, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %938 = log(%937) /* ty=Tensor[(14, 4, 7), float32] */;
  (%938,)
}

def @func_3509(%var_3501: Tensor[(60), float64], %var_3502: Tensor[(42), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(42, 1365), bool], Tensor[(52), float64], Tensor[(1365), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(1176), float64]) {
  %939 = cast(meta[relay.Constant][59] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %940 = cast(meta[relay.Constant][60] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %941 = cast(%var_3501, dtype="float64") /* ty=Tensor[(60), float64] */;
  %942 = cast(%var_3502, dtype="float64") /* ty=Tensor[(42), float64] */;
  %943 = cast(meta[relay.Constant][61] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %944 = reshape(%939, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %945 = reshape(%940, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %946 = reshape(%941, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %947 = reshape(%942, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %948 = reshape(%943, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %949 = @func_2306(%944, %945, %946, %947, %948) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(52), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(42, 1365), bool], float64, Tensor[(30), int32], Tensor[(1176), float64], Tensor[(13, 4, 1365), bool]) */;
  %950 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %951 = %949.4;
  (%950, %951, meta[relay.Constant][59] /* ty=Tensor[(52), float64] */, meta[relay.Constant][60] /* ty=Tensor[(1365), float64] */, %var_3501, %var_3502, meta[relay.Constant][61] /* ty=Tensor[(1176), float64] */)
}

def @func_4908() -> (Tensor[(14, 4, 7), float32],) {
  %952 = @func_4179() /* ty=Tensor[(14, 4, 7), float32] */;
  (%952,)
}

def @func_170(%var_114: Tensor[(15, 7, 13), float64]) -> (Tensor[(15, 7, 13), bool],) {
  %953 = cast(%var_114, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %954 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(15, 7, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(meta[relay.Constant][62] /* ty=Tensor[(15, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %957 = divide(%955, %956) /* ty=Tensor[(15, 7, 13), float64] */;
  %958 = cast(%var_114, dtype="int8") /* ty=Tensor[(15, 7, 13), int8] */;
  %959 = shape_of(%957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%957, dtype="int8") /* ty=Tensor[(15, 7, 13), int8] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %962 = minimum(%960, %961) /* ty=Tensor[(15, 7, 13), int8] */;
  %963 = cast(%957, dtype="bool") /* ty=Tensor[(15, 7, 13), bool] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="bool") /* ty=Tensor[(15, 7, 13), bool] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %967 = less(%965, %966) /* ty=Tensor[(15, 7, 13), bool] */;
  (%967,)
}

def @func_9197() -> (Tensor[(14, 4, 7), float32],) {
  %968 = @func_4769() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %969 = %968.0;
  (%969,)
}

def @func_3190(%var_3182: Tensor[(1, 10, 5), float32]) -> Tensor[(1, 10, 5), float32] {
  %970 = cast(%var_3182, dtype="float32") /* ty=Tensor[(1, 10, 5), float32] */;
  asin(%970) /* ty=Tensor[(1, 10, 5), float32] */
}

def @func_3214() -> (Tensor[(14, 4, 7), bool],) {
  %971 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
  %972 = %971.0;
  (%972,)
}

def @func_8791() -> (Tensor[(14, 4, 7), float32], Tensor[(3, 4, 2), float64]) {
  %973 = @func_8056() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %974 = @func_8231() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(3, 4, 2), float64], Tensor[(6, 4), float64]) */;
  %975 = %973.0;
  %976 = %974.1;
  (%975, %976)
}

def @func_7720() -> (Tensor[(60), float64], Tensor[(15, 7, 13), float32], Tensor[(52), float64], Tensor[(13, 4, 1), float32], Tensor[(15, 7, 13), bool]) {
  %977 = @func_7155() /* ty=(Tensor[(60), float64],) */;
  %978 = @func_4097() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) */;
  %979 = cast(meta[relay.Constant][63] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %980 = %978.2;
  %981 = cast(%980, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %982 = reshape(%979, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %983 = reshape(%981, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %984 = @func_1714(%982, %983) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %985 = %984.3;
  %986 = cast(%985, dtype="float32") /* ty=Tensor[(13, 4, 1), float32] */;
  %987 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %988 = %977.0;
  %989 = cos(%986) /* ty=Tensor[(13, 4, 1), float32] */;
  %990 = %987.1;
  (%988, %980, meta[relay.Constant][63] /* ty=Tensor[(52), float64] */, %989, %990)
}

def @func_8056() -> (Tensor[(14, 4, 7), float32],) {
  %991 = @func_6734() /* ty=Tensor[(14, 4, 7), float32] */;
  (%991,)
}

def @func_8300() -> Tensor[(60), float64] {
  %992 = @func_7720() /* ty=(Tensor[(60), float64], Tensor[(15, 7, 13), float32], Tensor[(52), float64], Tensor[(13, 4, 1), float32], Tensor[(15, 7, 13), bool]) */;
  %992.0
}

def @func_7528() -> Tensor[(14, 4, 7), float32] {
  %993 = @func_5042() /* ty=(Tensor[(50), float32], Tensor[(14, 4, 7), float32]) */;
  %993.1
}

def @func_4211() -> (Tensor[(1365), float64],) {
  %994 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %995 = %994.2;
  (%995,)
}

def @func_8943() -> Tensor[(15, 7, 13), bool] {
  %996 = @func_5449() /* ty=(Tensor[(60), float64], Tensor[(5, 3, 4), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %996.2
}

def @func_3335(%var_3301: Tensor[(14, 4, 7), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), uint64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(14, 4, 7), float32]) {
  %997 = @func_3269() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %998 = @func_2768() /* ty=(Tensor[(14, 4, 7), float64], Tensor[(1365), float64]) */;
  %999 = %998.0;
  %1000 = cast(%var_3301, dtype="uint64") /* ty=Tensor[(14, 4, 7), uint64] */;
  %1001 = shape_of(%999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1002 = cast(%999, dtype="uint64") /* ty=Tensor[(14, 4, 7), uint64] */;
  %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1004 = cast(meta[relay.Constant][64] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1005 = reshape(%1004, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %1006 = @func_2512(%1005) /* ty=(Tensor[(15, 7, 13), bool], Tensor[(252), float64], Tensor[(14, 4, 7), bool]) */;
  %1007 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %1008 = %997.1;
  %1009 = left_shift(%1002, %1003) /* ty=Tensor[(14, 4, 7), uint64] */;
  %1010 = %1006.1;
  %1011 = %1007.0;
  (%1008, %1009, %1010, meta[relay.Constant][64] /* ty=Tensor[(252), float64] */, %1011)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5044() -> (Tensor[(50), float32], Tensor[(14, 4, 7), float32]) {
  @func_5042() /* ty=(Tensor[(50), float32], Tensor[(14, 4, 7), float32]) */
}

def @func_2570(%var_2549: Tensor[(52), float64], %var_2561: Tensor[(42, 1), float64]) -> (Tensor[(1365), float64], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(14, 4, 7), int32], Tensor[(3, 4, 2), float64], Tensor[(42, 1), float64], Tensor[(1365, 1), float64]) {
  %0 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %1 = cast(%var_2549, dtype="float64") /* ty=Tensor[(52), float64] */;
  %2 = %0.2;
  %3 = cast(%2, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %4 = reshape(%1, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %5 = reshape(%3, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %6 = @func_1714(%4, %5) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %7 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %8 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %9 = %8.0;
  %10 = cast(%9, dtype="int32") /* ty=Tensor[(14, 4, 7), int32] */;
  %11 = shape_of(%7, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%7, dtype="int32") /* ty=Tensor[(14, 4, 7), int32] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %14 = cast(%var_2561, dtype="float64") /* ty=Tensor[(42, 1), float64] */;
  %15 = %6.1;
  %16 = cast(%15, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %17 = reshape(%14, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), float64] */;
  %18 = reshape(%16, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), float64] */;
  %19 = @func_834(%17, %18) /* ty=(Tensor[(14, 1, 3), float64], Tensor[(3, 4, 2), float64], Tensor[(12, 2), float64], Tensor[(15, 7, 13), bool], Tensor[(1365, 1), float64]) */;
  %20 = cast(%var_2561, dtype="float64") /* ty=Tensor[(42, 1), float64] */;
  %21 = cast(%15, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %22 = reshape(%20, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), float64] */;
  %23 = reshape(%21, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), float64] */;
  %24 = @func_834(%22, %23) /* ty=(Tensor[(14, 1, 3), float64], Tensor[(3, 4, 2), float64], Tensor[(12, 2), float64], Tensor[(15, 7, 13), bool], Tensor[(1365, 1), float64]) */;
  %25 = bitwise_and(%12, %13) /* ty=Tensor[(14, 4, 7), int32] */;
  %26 = %19.1;
  %27 = %24.4;
  (%2, %15, %var_2549, %25, %26, %var_2561, %27)
}

def @func_2705(%var_2669: Tensor[(15, 5, 13), float32], %var_2670: Tensor[(15, 5, 13), float32], %var_2689: Tensor[(15, 5, 13), float32]) -> (Tensor[(1365), float64], Tensor[(52), float64], Tensor[(14, 3), float64], Tensor[(15, 5, 13), bool]) {
  %28 = cast(meta[relay.Constant][0] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 3), float64] */;
  %30 = reshape(%28, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %31 = reshape(%29, newshape=[42, 1]) /* ty=Tensor[(42, 1), float64] */;
  %32 = @func_2570(%30, %31) /* ty=(Tensor[(1365), float64], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(14, 4, 7), int32], Tensor[(3, 4, 2), float64], Tensor[(42, 1), float64], Tensor[(1365, 1), float64]) */;
  %33 = cast(%var_2670, dtype="float32") /* ty=Tensor[(15, 5, 13), float32] */;
  %34 = shape_of(%var_2669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%var_2669, dtype="float32") /* ty=Tensor[(15, 5, 13), float32] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %37 = mod(%35, %36) /* ty=Tensor[(15, 5, 13), float32] */;
  %38 = cast(%37, dtype="float32") /* ty=Tensor[(15, 5, 13), float32] */;
  %39 = log2(%38) /* ty=Tensor[(15, 5, 13), float32] */;
  %40 = cast(%var_2689, dtype="bool") /* ty=Tensor[(15, 5, 13), bool] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="bool") /* ty=Tensor[(15, 5, 13), bool] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %44 = %32.0;
  %45 = not_equal(%42, %43) /* ty=Tensor[(15, 5, 13), bool] */;
  (%44, meta[relay.Constant][0] /* ty=Tensor[(52), float64] */, meta[relay.Constant][1] /* ty=Tensor[(14, 3), float64] */, %45)
}

def @func_2637(%var_2634: Tensor[(11, 15, 15), float64], %var_2635: Tensor[(1, 52), float64], %var_2636: Tensor[(1365), float64]) -> (Tensor[(11, 15, 15), bool], Tensor[(11, 15, 15), int8], Tensor[(15, 7, 13), bool], Tensor[(1, 52), float64], Tensor[(1365), float64]) {
  @func_2632(%var_2634, %var_2635, %var_2636) /* ty=(Tensor[(11, 15, 15), bool], Tensor[(11, 15, 15), int8], Tensor[(15, 7, 13), bool], Tensor[(1, 52), float64], Tensor[(1365), float64]) */
}

def @func_2795() -> Tensor[(14, 4, 7), float32] {
  @func_2793() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_7859() -> Tensor[(14, 4, 7), float32] {
  @func_7857() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_2941() -> Tensor[(14, 4, 7), float32] {
  @func_2939() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_3179() -> (Tensor[(14, 4, 7), float32],) {
  %46 = @func_2372() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %47 = %46.0;
  (%47,)
}

def @func_3335(%var_3301: Tensor[(14, 4, 7), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), uint64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(14, 4, 7), float32]) {
  %48 = @func_3269() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %49 = @func_2768() /* ty=(Tensor[(14, 4, 7), float64], Tensor[(1365), float64]) */;
  %50 = %49.0;
  %51 = cast(%var_3301, dtype="uint64") /* ty=Tensor[(14, 4, 7), uint64] */;
  %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%50, dtype="uint64") /* ty=Tensor[(14, 4, 7), uint64] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %55 = cast(meta[relay.Constant][2] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %56 = reshape(%55, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %57 = @func_2512(%56) /* ty=(Tensor[(15, 7, 13), bool], Tensor[(252), float64], Tensor[(14, 4, 7), bool]) */;
  %58 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %59 = %48.1;
  %60 = left_shift(%53, %54) /* ty=Tensor[(14, 4, 7), uint64] */;
  %61 = %57.1;
  %62 = %58.0;
  (%59, %60, %61, meta[relay.Constant][2] /* ty=Tensor[(252), float64] */, %62)
}

def @func_4253() -> (Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) {
  %74 = fn () -> (Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) {
    %63 = @func_4097() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) */;
    %64 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
    %66 = reshape(%65, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float32] */;
    %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %68 = reshape(%67, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
    %69 = @func_1812(%68) /* ty=(Tensor[(5, 3, 4), float64],) */;
    %70 = %63.0;
    %71 = %64.0;
    %72 = @func_3190(%66) /* ty=Tensor[(1, 10, 5), float32] */;
    %73 = %69.0;
    (%70, %71, %72, meta[relay.Constant][3] /* ty=Tensor[(50), float32] */, %73, meta[relay.Constant][4] /* ty=Tensor[(60), float64] */)
  };
  %74() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */
}

def @func_2434(%var_2432: float64) -> (Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(14, 4, 7), float32]) {
  @func_2431(%var_2432) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(14, 4, 7), float32]) */
}

def @func_7604(%var_7603: Tensor[(936), uint8]) -> (Tensor[(50), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8]) {
  %82 = fn (%var_7583: Tensor[(936), uint8]) -> (Tensor[(50), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8]) {
    %75 = @func_4653() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32]) */;
    %76 = cast(%var_7583, dtype="uint8") /* ty=Tensor[(936), uint8] */;
    %77 = cast(%var_7583, dtype="uint8") /* ty=Tensor[(936), uint8] */;
    %78 = reshape(%76, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
    %79 = reshape(%77, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
    %80 = %75.3;
    %81 = @func_2664(%78, %79) /* ty=Tensor[(13, 8, 9), uint8] */;
    (%80, %81, %var_7583)
  };
  %82(%var_7603) /* ty=(Tensor[(50), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8]) */
}

def @func_5992() -> (Tensor[(14, 4, 7), float32], Tensor[(60), float64], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(560), int8], Tensor[(14, 4, 7), float32]) {
  %83 = @func_4712() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(7, 10, 8), float32], Tensor[(560), int8], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
  %84 = cast(meta[relay.Constant][5] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %85 = cast(meta[relay.Constant][6] /* ty=Tensor[(560), int8] */, dtype="int8") /* ty=Tensor[(560), int8] */;
  %86 = reshape(%84, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %87 = reshape(%85, newshape=[560]) /* ty=Tensor[(560), int8] */;
  %88 = @func_4561(%86, %87) /* ty=(Tensor[(576), bool], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 10, 8), int8], Tensor[(560), int8], Tensor[(14, 4, 7), float32]) */;
  %89 = @func_2939() /* ty=Tensor[(14, 4, 7), float32] */;
  %90 = %83.4;
  %91 = %88.1;
  %92 = @func_3683() /* ty=Tensor[(14, 4, 7), float32] */;
  (%89, %90, %91, meta[relay.Constant][5] /* ty=Tensor[(144), float32] */, meta[relay.Constant][6] /* ty=Tensor[(560), int8] */, %92)
}

def @func_2939() -> Tensor[(14, 4, 7), float32] {
  %93 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %93.0
}

def @func_9026(%var_9023: Tensor[(52), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(8, 18), bool], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(42), float64]) {
  %94 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 18), float32] */, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
  %95 = reshape(%94, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), float32] */;
  %96 = @func_4119(%95) /* ty=Tensor[(9, 16, 1), float64] */;
  %97 = cast(%96, dtype="bool") /* ty=Tensor[(9, 16, 1), bool] */;
  %98 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(8, 18), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %99 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 18), float32] */, dtype="bool") /* ty=Tensor[(8, 18), bool] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %101 = cast(%var_9023, dtype="float64") /* ty=Tensor[(52), float64] */;
  %102 = cast(meta[relay.Constant][8] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %103 = reshape(%101, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %104 = reshape(%102, newshape=[42, 1]) /* ty=Tensor[(42, 1), float64] */;
  %105 = @func_2570(%103, %104) /* ty=(Tensor[(1365), float64], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(14, 4, 7), int32], Tensor[(3, 4, 2), float64], Tensor[(42, 1), float64], Tensor[(1365, 1), float64]) */;
  %106 = @func_5288() /* ty=Tensor[(14, 4, 7), float32] */;
  %107 = logical_and(%99, %100) /* ty=Tensor[(8, 18), bool] */;
  %108 = %105.1;
  (%106, %107, %108, %var_9023, meta[relay.Constant][8] /* ty=Tensor[(42), float64] */)
}

def @func_8203() -> (Tensor[(14, 4, 7), float32],) {
  %111 = fn () -> (Tensor[(14, 4, 7), float32],) {
    %109 = @func_5716() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
    %110 = %109.1;
    (%110,)
  };
  %111() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_4179() -> Tensor[(14, 4, 7), float32] {
  %112 = @func_4005() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %112.2
}

def @func_7180() -> Tensor[(14, 4, 7), float32] {
  %113 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %113.0
}

def @func_4769() -> (Tensor[(14, 4, 7), float32],) {
  %114 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %115 = %114.0;
  (%115,)
}

def @func_1717(%var_1715: Tensor[(13, 4, 1), float64], %var_1716: Tensor[(1365), float64]) -> (Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) {
  %129 = fn (%var_1693: Tensor[(13, 4, 1), float64], %var_1707: Tensor[(1365), float64]) -> (Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) {
    %116 = cast(%var_1693, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
    %117 = sqrt(%116) /* ty=Tensor[(13, 4, 1), float64] */;
    %118 = cast(%117, dtype="int8") /* ty=Tensor[(13, 4, 1), int8] */;
    %119 = shape_of(%var_1693, dtype="int32") /* ty=Tensor[(3), int32] */;
    %120 = cast(%var_1693, dtype="int8") /* ty=Tensor[(13, 4, 1), int8] */;
    %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %122 = cast(%var_1707, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %123 = reshape(%122, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
    %124 = @func_170(%123) /* ty=(Tensor[(15, 7, 13), bool],) */;
    %125 = cast(%117, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
    %126 = add(%120, %121) /* ty=Tensor[(13, 4, ?), int8] */;
    %127 = %124.0;
    %128 = cosh(%125) /* ty=Tensor[(13, 4, 1), float64] */;
    (%126, %127, %var_1707, %128)
  };
  %129(%var_1715, %var_1716) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */
}

def @func_8156() -> (Tensor[(14, 4, 7), float32],) {
  @func_8154() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_7528() -> Tensor[(14, 4, 7), float32] {
  %130 = @func_5042() /* ty=(Tensor[(50), float32], Tensor[(14, 4, 7), float32]) */;
  %130.1
}

def @func_8583() -> Tensor[(14, 4, 7), bool] {
  %132 = fn () -> Tensor[(14, 4, 7), bool] {
    %131 = @func_7823() /* ty=(Tensor[(1176), float64], Tensor[(14, 4, 7), bool]) */;
    %131.1
  };
  %132() /* ty=Tensor[(14, 4, 7), bool] */
}

def @func_9275() -> (Tensor[(14, 4, 7), float64], Tensor[(14, 4, 7), bool]) {
  @func_9273() /* ty=(Tensor[(14, 4, 7), float64], Tensor[(14, 4, 7), bool]) */
}

def @func_5784(%var_5782: Tensor[(975), float32]) -> (Tensor[(14, 4, 7), uint64], Tensor[(52), float64], Tensor[(975), float32]) {
  @func_5781(%var_5782) /* ty=(Tensor[(14, 4, 7), uint64], Tensor[(52), float64], Tensor[(975), float32]) */
}

def @func_4654() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32]) {
  %141 = fn () -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32]) {
    %133 = @func_3214() /* ty=(Tensor[(14, 4, 7), bool],) */;
    %134 = %133.0;
    %135 = cast(%134, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
    %136 = cast(meta[relay.Constant][9] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
    %137 = reshape(%136, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float32] */;
    %138 = @func_3378() /* ty=Tensor[(14, 4, 7), float32] */;
    %139 = erf(%135) /* ty=Tensor[(14, 4, 7), float32] */;
    %140 = @func_3190(%137) /* ty=Tensor[(1, 10, 5), float32] */;
    (%138, %139, %140, meta[relay.Constant][9] /* ty=Tensor[(50), float32] */)
  };
  %141() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32]) */
}

def @func_7857() -> Tensor[(14, 4, 7), float32] {
  @func_7180() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_7955() -> (Tensor[(14, 4, 7), float32],) {
  @func_7953() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_8301() -> Tensor[(60), float64] {
  %143 = fn () -> Tensor[(60), float64] {
    %142 = @func_7720() /* ty=(Tensor[(60), float64], Tensor[(15, 7, 13), float32], Tensor[(52), float64], Tensor[(13, 4, 1), float32], Tensor[(15, 7, 13), bool]) */;
    %142.0
  };
  %143() /* ty=Tensor[(60), float64] */
}

def @func_8350(%var_8348: Tensor[(560), int8]) -> (Tensor[(1365), float64], Tensor[(7, 10, 8), float32], Tensor[(560), int8], float64, Tensor[(1008), uint64]) {
  @func_8347(%var_8348) /* ty=(Tensor[(1365), float64], Tensor[(7, 10, 8), float32], Tensor[(560), int8], float64, Tensor[(1008), uint64]) */
}

def @func_2374() -> (Tensor[(14, 4, 7), float32],) {
  @func_2372() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_8056() -> (Tensor[(14, 4, 7), float32],) {
  %144 = @func_6734() /* ty=Tensor[(14, 4, 7), float32] */;
  (%144,)
}

def @func_9172() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool]) {
  @func_9170() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool]) */
}

def @func_5407(%var_5406: Tensor[(15, 10, 5), float32]) -> Tensor[(15, 10, 5), int32] {
  %149 = fn (%var_5374: Tensor[(15, 10, 5), float32]) -> Tensor[(15, 10, 5), int32] {
    %145 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
    %146 = %145.2;
    %147 = cast(%146, dtype="int32") /* ty=Tensor[(1, 10, 5), int32] */;
    %148 = cast(%var_5374, dtype="int32") /* ty=Tensor[(15, 10, 5), int32] */;
    left_shift(%147, %148) /* ty=Tensor[(15, 10, 5), int32] */
  };
  %149(%var_5406) /* ty=Tensor[(15, 10, 5), int32] */
}

def @func_7034(%var_7019: Tensor[(1365), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(13, 4, ?), int8], Tensor[(52), float64], Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %150 = @func_5716() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %151 = cast(meta[relay.Constant][10] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %152 = cast(%var_7019, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %153 = reshape(%151, newshape=[1, 52]) /* ty=Tensor[(1, 52), float64] */;
  %154 = reshape(%152, newshape=[7, 195]) /* ty=Tensor[(7, 195), float64] */;
  %155 = @func_4979(%153, %154) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(5, 10), float32], Tensor[(13, 4, ?), int8], Tensor[(1, 52), float64], Tensor[(7, 195), float64], Tensor[(252), float64], Tensor[(1176), bool], Tensor[(14, 4, 7), float32]) */;
  %156 = @func_4345() /* ty=(Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(576), bool]) */;
  %157 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %158 = %150.4;
  %159 = %155.3;
  %160 = %156.1;
  %161 = %157.0;
  (%158, %159, meta[relay.Constant][10] /* ty=Tensor[(52), float64] */, %var_7019, %160, %161)
}

def @func_170(%var_114: Tensor[(15, 7, 13), float64]) -> (Tensor[(15, 7, 13), bool],) {
  %162 = cast(%var_114, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %163 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(15, 7, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %166 = divide(%164, %165) /* ty=Tensor[(15, 7, 13), float64] */;
  %167 = cast(%var_114, dtype="int8") /* ty=Tensor[(15, 7, 13), int8] */;
  %168 = shape_of(%166, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%166, dtype="int8") /* ty=Tensor[(15, 7, 13), int8] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %171 = minimum(%169, %170) /* ty=Tensor[(15, 7, 13), int8] */;
  %172 = cast(%166, dtype="bool") /* ty=Tensor[(15, 7, 13), bool] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%171, dtype="bool") /* ty=Tensor[(15, 7, 13), bool] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %176 = less(%174, %175) /* ty=Tensor[(15, 7, 13), bool] */;
  (%176,)
}

def @func_1815(%var_1813: Tensor[(5, 3, 4), float64]) -> (Tensor[(5, 3, 4), float64],) {
  @func_1812(%var_1813) /* ty=(Tensor[(5, 3, 4), float64],) */
}

def @func_3801(%var_3800: float64) -> (Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64) {
  %185 = fn (%var_3796: float64) -> (Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64) {
    %177 = @func_3269() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
    %178 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
    %179 = cast(%var_3796, dtype="float64") /* ty=float64 */;
    %180 = reshape(%179, newshape=[]) /* ty=float64 */;
    %181 = @func_2431(%180) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(14, 4, 7), float32]) */;
    %182 = %177.0;
    %183 = %178.1;
    %184 = %181.1;
    (%182, %183, %184, %var_3796)
  };
  %185(%var_3800) /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64) */
}

def @func_6468(%var_6466: Tensor[(8, 16, 2), uint64], %var_6467: Tensor[(8, 16, 2), uint64]) -> Tensor[(8, 16, 2), uint64] {
  @func_6464(%var_6466, %var_6467) /* ty=Tensor[(8, 16, 2), uint64] */
}

def @func_4858(%var_4848: Tensor[(1, 4, 12), float64]) -> (Tensor[(2, 4, 12), float64], Tensor[(14, 4, 7), bool]) {
  %186 = cast(%var_4848, dtype="float64") /* ty=Tensor[(1, 4, 12), float64] */;
  %187 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 4, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 12), float64] */;
  %188 = @func_4097() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) */;
  %189 = floor_divide(%186, %187) /* ty=Tensor[(2, 4, 12), float64] */;
  %190 = %188.0;
  (%189, %190)
}

def @func_7973() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %191 = @func_7180() /* ty=Tensor[(14, 4, 7), float32] */;
  %192 = @func_7180() /* ty=Tensor[(14, 4, 7), float32] */;
  (%191, %192)
}

def @func_837(%var_835: Tensor[(14, 1, 3), float64], %var_836: Tensor[(1365, 1), float64]) -> (Tensor[(14, 1, 3), float64], Tensor[(3, 4, 2), float64], Tensor[(12, 2), float64], Tensor[(15, 7, 13), bool], Tensor[(1365, 1), float64]) {
  %202 = fn (%var_814: Tensor[(14, 1, 3), float64], %var_828: Tensor[(1365, 1), float64]) -> (Tensor[(14, 1, 3), float64], Tensor[(3, 4, 2), float64], Tensor[(12, 2), float64], Tensor[(15, 7, 13), bool], Tensor[(1365, 1), float64]) {
    %193 = cast(%var_814, dtype="float64") /* ty=Tensor[(14, 1, 3), float64] */;
    %194 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 2), float64] */, dtype="float64") /* ty=Tensor[(12, 2), float64] */;
    %195 = reshape(%194, newshape=[3, 4, 2]) /* ty=Tensor[(3, 4, 2), float64] */;
    %196 = cast(%var_828, dtype="float64") /* ty=Tensor[(1365, 1), float64] */;
    %197 = reshape(%196, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
    %198 = @func_170(%197) /* ty=(Tensor[(15, 7, 13), bool],) */;
    %199 = cos(%193) /* ty=Tensor[(14, 1, 3), float64] */;
    %200 = @func_759(%195) /* ty=Tensor[(3, 4, 2), float64] */;
    %201 = %198.0;
    (%199, %200, meta[relay.Constant][13] /* ty=Tensor[(12, 2), float64] */, %201, %var_828)
  };
  %202(%var_835, %var_836) /* ty=(Tensor[(14, 1, 3), float64], Tensor[(3, 4, 2), float64], Tensor[(12, 2), float64], Tensor[(15, 7, 13), bool], Tensor[(1365, 1), float64]) */
}

def @func_2512(%var_2475: Tensor[(252), float64]) -> (Tensor[(15, 7, 13), bool], Tensor[(252), float64], Tensor[(14, 4, 7), bool]) {
  %203 = cast(%var_2475, dtype="float64") /* ty=Tensor[(252), float64] */;
  %204 = cast(%var_2475, dtype="float64") /* ty=Tensor[(252), float64] */;
  %205 = reshape(%203, newshape=[7, 12, 3]) /* ty=Tensor[(7, 12, 3), float64] */;
  %206 = reshape(%204, newshape=[7, 12, 3]) /* ty=Tensor[(7, 12, 3), float64] */;
  %207 = @func_1428(%205, %206) /* ty=(Tensor[(7, 12, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(7, 195), float64]) */;
  %208 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %209 = @func_2372() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %210 = %209.0;
  %211 = cast(%210, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %212 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%208, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %215 = %207.1;
  %216 = not_equal(%213, %214) /* ty=Tensor[(14, 4, 7), bool] */;
  (%215, %var_2475, %216)
}

def @func_1971() -> Tensor[(14, 4, 7), float32] {
  %218 = fn () -> Tensor[(14, 4, 7), float32] {
    %217 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %217.0
  };
  %218() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_7182() -> Tensor[(14, 4, 7), float32] {
  @func_7180() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_4181() -> Tensor[(14, 4, 7), float32] {
  @func_4179() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_4122(%var_4120: Tensor[(9, 16, 1), float32]) -> Tensor[(9, 16, 1), float64] {
  @func_4119(%var_4120) /* ty=Tensor[(9, 16, 1), float64] */
}

def @func_8738() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %219 = @func_2939() /* ty=Tensor[(14, 4, 7), float32] */;
  %220 = cast(%219, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %221 = reshape(%220, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float32] */;
  %222 = @func_2212(%221) /* ty=Tensor[(14, 4, 7), float32] */;
  (%219, %222)
}

def @func_4387(%var_4385: Tensor[(7, 10, 8), int8]) -> (Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) {
  @func_4384(%var_4385) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */
}

def @func_2313(%var_2308: Tensor[(52), float64], %var_2309: Tensor[(1365), float64], %var_2310: Tensor[(60), float64], %var_2311: Tensor[(42), float64], %var_2312: Tensor[(1176), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(52), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(42, 1365), bool], float64, Tensor[(30), int32], Tensor[(1176), float64], Tensor[(13, 4, 1365), bool]) {
  @func_2306(%var_2308, %var_2309, %var_2310, %var_2311, %var_2312) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(52), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(42, 1365), bool], float64, Tensor[(30), int32], Tensor[(1176), float64], Tensor[(13, 4, 1365), bool]) */
}

def @func_4714() -> (Tensor[(14, 4, 7), float32], Tensor[(7, 10, 8), float32], Tensor[(560), int8], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) {
  @func_4712() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(7, 10, 8), float32], Tensor[(560), int8], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */
}

def @func_7975() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  @func_7973() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */
}

def @func_6736() -> Tensor[(14, 4, 7), float32] {
  @func_6734() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_6091(%var_6088: Tensor[(8, 9, 14), uint64], %var_6089: Tensor[(8, 9, 14), uint64], %var_6090: Tensor[(1365), float64]) -> (Tensor[(14, 4, 7), bool], float64, Tensor[(8, 9, 14), float32], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) {
  %257 = fn (%var_6002: Tensor[(8, 9, 14), uint64], %var_6003: Tensor[(8, 9, 14), uint64], %var_6081: Tensor[(1365), float64]) -> (Tensor[(14, 4, 7), bool], float64, Tensor[(8, 9, 14), float32], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) {
    %223 = cast(-6.54915f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %224 = reshape(%223, newshape=[]) /* ty=float64 */;
    %225 = @func_3799(%224) /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64) */;
    %226 = cast(%var_6003, dtype="bool") /* ty=Tensor[(8, 9, 14), bool] */;
    %227 = shape_of(%var_6002, dtype="int32") /* ty=Tensor[(3), int32] */;
    %228 = cast(%var_6002, dtype="bool") /* ty=Tensor[(8, 9, 14), bool] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %230 = greater(%228, %229) /* ty=Tensor[(8, 9, 14), bool] */;
    %231 = cast(%230, dtype="float32") /* ty=Tensor[(8, 9, 14), float32] */;
    %232 = atan(%231) /* ty=Tensor[(8, 9, 14), float32] */;
    %233 = cast(%232, dtype="float64") /* ty=Tensor[(8, 9, 14), float64] */;
    %234 = acosh(%233) /* ty=Tensor[(8, 9, 14), float64] */;
    %235 = cast(%var_6002, dtype="int64") /* ty=Tensor[(8, 9, 14), int64] */;
    %236 = shape_of(%var_6003, dtype="int32") /* ty=Tensor[(3), int32] */;
    %237 = cast(%var_6003, dtype="int64") /* ty=Tensor[(8, 9, 14), int64] */;
    %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %239 = right_shift(%237, %238) /* ty=Tensor[(8, 9, 14), int64] */;
    %240 = cast(%239, dtype="float32") /* ty=Tensor[(8, 9, 14), float32] */;
    %241 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
    %242 = cast(%234, dtype="float32") /* ty=Tensor[(8, 9, 14), float32] */;
    %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %244 = cast(-6.54915f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %245 = reshape(%244, newshape=[]) /* ty=float64 */;
    %246 = @func_3799(%245) /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64) */;
    %247 = cast(meta[relay.Constant][14] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
    %248 = reshape(%247, newshape=[3, 4, 2]) /* ty=Tensor[(3, 4, 2), float64] */;
    %249 = cast(%var_6081, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %250 = reshape(%249, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
    %251 = @func_170(%250) /* ty=(Tensor[(15, 7, 13), bool],) */;
    %252 = %225.0;
    %253 = mod(%242, %243) /* ty=Tensor[(8, 9, 14), float32] */;
    %254 = %246.3;
    %255 = @func_759(%248) /* ty=Tensor[(3, 4, 2), float64] */;
    %256 = %251.0;
    (%252, -6.54915f64 /* ty=float64 */, %253, %254, %255, meta[relay.Constant][14] /* ty=Tensor[(24), float64] */, %256, %var_6081)
  };
  %257(%var_6088, %var_6089, %var_6090) /* ty=(Tensor[(14, 4, 7), bool], float64, Tensor[(8, 9, 14), float32], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */
}

def @func_3513(%var_3511: Tensor[(60), float64], %var_3512: Tensor[(42), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(42, 1365), bool], Tensor[(52), float64], Tensor[(1365), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(1176), float64]) {
  @func_3509(%var_3511, %var_3512) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(42, 1365), bool], Tensor[(52), float64], Tensor[(1365), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(1176), float64]) */
}

def @func_638(%var_637: float64) -> (Tensor[(12, 8, 9), float64],) {
  %261 = fn (%var_628: float64) -> (Tensor[(12, 8, 9), float64],) {
    %258 = cast(%var_628, dtype="float64") /* ty=float64 */;
    %259 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(12, 8, 9), float64] */;
    %260 = minimum(%258, %259) /* ty=Tensor[(12, 8, 9), float64] */;
    (%260,)
  };
  %261(%var_637) /* ty=(Tensor[(12, 8, 9), float64],) */
}

def @func_4006() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) {
  %266 = fn () -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) {
    %262 = @func_3214() /* ty=(Tensor[(14, 4, 7), bool],) */;
    %263 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
    %264 = %262.0;
    %265 = @func_3152() /* ty=Tensor[(14, 4, 7), float32] */;
    (%263, %264, %265)
  };
  %266() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */
}

def @func_4861(%var_4859: Tensor[(1, 4, 12), float64]) -> (Tensor[(2, 4, 12), float64], Tensor[(14, 4, 7), bool]) {
  @func_4858(%var_4859) /* ty=(Tensor[(2, 4, 12), float64], Tensor[(14, 4, 7), bool]) */
}

def @func_5339() -> (Tensor[(14, 4, 7), bool],) {
  %269 = fn () -> (Tensor[(14, 4, 7), bool],) {
    %267 = @func_3214() /* ty=(Tensor[(14, 4, 7), bool],) */;
    %268 = %267.0;
    (%268,)
  };
  %269() /* ty=(Tensor[(14, 4, 7), bool],) */
}

def @func_6273(%var_6263: Tensor[(10, 15, 13), float32]) -> Tensor[(10, 15, 13), float32] {
  %270 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(10, 15, 1), float32] */;
  %271 = cast(%var_6263, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %272 = divide(%270, %271) /* ty=Tensor[(10, 15, 13), float32] */;
  %273 = cast(%var_6263, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%272, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%275, %276) /* ty=Tensor[(10, 15, 13), float32] */
}

def @func_1865() -> (Tensor[(14, 4, 7), float32],) {
  %279 = fn () -> (Tensor[(14, 4, 7), float32],) {
    %277 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 4, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
    %278 = log(%277) /* ty=Tensor[(14, 4, 7), float32] */;
    (%278,)
  };
  %279() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_5717() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %287 = fn () -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
    %280 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %281 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %282 = @func_4179() /* ty=Tensor[(14, 4, 7), float32] */;
    %283 = @func_2793() /* ty=Tensor[(14, 4, 7), float32] */;
    %284 = %280.0;
    %285 = %281.0;
    %286 = @func_2793() /* ty=Tensor[(14, 4, 7), float32] */;
    (%282, %283, %284, %285, %286)
  };
  %287() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */
}

def @func_2190() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %288 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %289 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %291 = %288.0;
  %292 = exp(%290) /* ty=Tensor[(14, 4, 7), float32] */;
  (%291, %292)
}

def @func_2970(%var_2969: Tensor[(1176), float64]) -> (Tensor[(14, 4, 7), float64], Tensor[(15, 7, 13), bool], Tensor[(1176), float64]) {
  %301 = fn (%var_2957: Tensor[(1176), float64]) -> (Tensor[(14, 4, 7), float64], Tensor[(15, 7, 13), bool], Tensor[(1176), float64]) {
    %293 = @func_2768() /* ty=(Tensor[(14, 4, 7), float64], Tensor[(1365), float64]) */;
    %294 = %293.0;
    %295 = cast(%294, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
    %296 = cast(%var_2957, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %297 = reshape(%296, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), float64] */;
    %298 = @func_284(%297) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) */;
    %299 = tan(%295) /* ty=Tensor[(14, 4, 7), float64] */;
    %300 = %298.3;
    (%299, %300, %var_2957)
  };
  %301(%var_2969) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(15, 7, 13), bool], Tensor[(1176), float64]) */
}

def @func_6534() -> (Tensor[(14, 4, 7), float32], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 12, 14), float32], Tensor[(1176), float64]) {
  @func_6532() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 12, 14), float32], Tensor[(1176), float64]) */
}

def @func_9029(%var_9027: Tensor[(52), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(8, 18), bool], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(42), float64]) {
  @func_9026(%var_9027) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(8, 18), bool], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(42), float64]) */
}

def @func_3684() -> Tensor[(14, 4, 7), float32] {
  %302 = fn () -> Tensor[(14, 4, 7), float32] {
    @func_2793() /* ty=Tensor[(14, 4, 7), float32] */
  };
  %302() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_8232() -> (Tensor[(14, 4, 7), float32], Tensor[(3, 4, 2), float64], Tensor[(6, 4), float64]) {
  %308 = fn () -> (Tensor[(14, 4, 7), float32], Tensor[(3, 4, 2), float64], Tensor[(6, 4), float64]) {
    %303 = @func_5522() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %304 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 4), float64] */, dtype="float64") /* ty=Tensor[(6, 4), float64] */;
    %305 = reshape(%304, newshape=[3, 4, 2]) /* ty=Tensor[(3, 4, 2), float64] */;
    %306 = %303.0;
    %307 = @func_759(%305) /* ty=Tensor[(3, 4, 2), float64] */;
    (%306, %307, meta[relay.Constant][18] /* ty=Tensor[(6, 4), float64] */)
  };
  %308() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(3, 4, 2), float64], Tensor[(6, 4), float64]) */
}

def @func_5570() -> Tensor[(14, 4, 7), bool] {
  @func_5568() /* ty=Tensor[(14, 4, 7), bool] */
}

def @func_2215(%var_2213: Tensor[(14, 4, 7), float32]) -> Tensor[(14, 4, 7), float32] {
  @func_2212(%var_2213) /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_6843() -> Tensor[(14, 4, 7), float32] {
  %309 = @func_5042() /* ty=(Tensor[(50), float32], Tensor[(14, 4, 7), float32]) */;
  %309.1
}

def @func_7423(%var_7421: Tensor[(11, 1, 1), float64]) -> (Tensor[(11, ?, ?), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(52), float64], Tensor[(52), float64], Tensor[(11, 1, 1), float64]) {
  @func_7420(%var_7421) /* ty=(Tensor[(11, ?, ?), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(52), float64], Tensor[(52), float64], Tensor[(11, 1, 1), float64]) */
}

def @func_287(%var_285: Tensor[(7, 12, 14), float64]) -> (Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) {
  @func_284(%var_285) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) */
}

def @func_4909() -> (Tensor[(14, 4, 7), float32],) {
  %311 = fn () -> (Tensor[(14, 4, 7), float32],) {
    %310 = @func_4179() /* ty=Tensor[(14, 4, 7), float32] */;
    (%310,)
  };
  %311() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_8154() -> (Tensor[(14, 4, 7), float32],) {
  %312 = @func_4179() /* ty=Tensor[(14, 4, 7), float32] */;
  (%312,)
}

def @func_5523() -> (Tensor[(14, 4, 7), float32],) {
  %315 = fn () -> (Tensor[(14, 4, 7), float32],) {
    %313 = @func_4769() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %314 = %313.0;
    (%314,)
  };
  %315() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_6276(%var_6274: Tensor[(10, 15, 13), float32]) -> Tensor[(10, 15, 13), float32] {
  @func_6273(%var_6274) /* ty=Tensor[(10, 15, 13), float32] */
}

def @func_7614() -> Tensor[(14, 4, 7), float32] {
  %316 = fn () -> Tensor[(14, 4, 7), float32] {
    @func_1970() /* ty=Tensor[(14, 4, 7), float32] */
  };
  %316() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_7047() -> Tensor[(14, 4, 7), float32] {
  %317 = fn () -> Tensor[(14, 4, 7), float32] {
    @func_6843() /* ty=Tensor[(14, 4, 7), float32] */
  };
  %317() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_8836() -> Tensor[(1365), float64] {
  %319 = fn () -> Tensor[(1365), float64] {
    %318 = @func_4211() /* ty=(Tensor[(1365), float64],) */;
    %318.0
  };
  %319() /* ty=Tensor[(1365), float64] */
}

def @func_2372() -> (Tensor[(14, 4, 7), float32],) {
  %320 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %321 = %320.1;
  (%321,)
}

def @func_5909(%var_5890: Tensor[(7, 9, 14), uint16], %var_5891: Tensor[(7, 9, 14), uint16]) -> (Tensor[(7, 9, 14), bool], Tensor[(14, 4, 7), float64]) {
  %322 = cast(%var_5891, dtype="uint16") /* ty=Tensor[(7, 9, 14), uint16] */;
  %323 = shape_of(%var_5890, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%var_5890, dtype="uint16") /* ty=Tensor[(7, 9, 14), uint16] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %326 = subtract(%324, %325) /* ty=Tensor[(7, 9, 14), uint16] */;
  %327 = cast(%326, dtype="bool") /* ty=Tensor[(7, 9, 14), bool] */;
  %328 = shape_of(%var_5890, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%var_5890, dtype="bool") /* ty=Tensor[(7, 9, 14), bool] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %331 = not_equal(%329, %330) /* ty=Tensor[(7, 9, 14), bool] */;
  %332 = @func_5000() /* ty=Tensor[(14, 4, 7), float64] */;
  (%331, %332)
}

def @func_759(%var_748: Tensor[(3, 4, 2), float64]) -> Tensor[(3, 4, 2), float64] {
  %333 = cast(%var_748, dtype="float64") /* ty=Tensor[(3, 4, 2), float64] */;
  %334 = acosh(%333) /* ty=Tensor[(3, 4, 2), float64] */;
  %335 = cast(%334, dtype="float64") /* ty=Tensor[(3, 4, 2), float64] */;
  erf(%335) /* ty=Tensor[(3, 4, 2), float64] */
}

def @func_2306(%var_2253: Tensor[(52), float64], %var_2254: Tensor[(1365), float64], %var_2272: Tensor[(60), float64], %var_2273: Tensor[(42), float64], %var_2299: Tensor[(1176), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(52), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(42, 1365), bool], float64, Tensor[(30), int32], Tensor[(1176), float64], Tensor[(13, 4, 1365), bool]) {
  %336 = cast(%var_2272, dtype="float64") /* ty=Tensor[(60), float64] */;
  %337 = cast(%var_2273, dtype="float64") /* ty=Tensor[(42), float64] */;
  %338 = cast(%var_2254, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %339 = reshape(%336, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %340 = reshape(%337, newshape=[42, 1]) /* ty=Tensor[(42, 1), float64] */;
  %341 = reshape(%338, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %342 = @func_2137(%339, %340, %341) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64], Tensor[(14, 1, 3), float64], Tensor[(42, 1), float64], Tensor[(1365), float64], Tensor[(14, 4, 7), float32]) */;
  %343 = %342.4;
  %344 = cast(%343, dtype="bool") /* ty=Tensor[(42, 1), bool] */;
  %345 = cast(%var_2254, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %346 = cast(meta[relay.Constant][19] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %347 = cast(meta[relay.Constant][19] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %348 = cast(%var_2299, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %349 = reshape(%346, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
  %350 = reshape(%347, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
  %351 = reshape(%348, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %352 = @func_713(%349, %350, %351) /* ty=(Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) */;
  %353 = cast(%var_2253, dtype="float64") /* ty=Tensor[(52), float64] */;
  %354 = cast(%var_2254, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %355 = reshape(%353, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %356 = reshape(%354, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %357 = @func_1714(%355, %356) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %358 = %357.3;
  %359 = cast(%358, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
  %360 = cast(%var_2254, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %361 = divide(%359, %360) /* ty=Tensor[(13, 4, 1365), float64] */;
  %362 = cast(%var_2254, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %363 = cast(%361, dtype="bool") /* ty=Tensor[(13, 4, 1365), bool] */;
  %364 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %365 = equal(%344, %345) /* ty=Tensor[(42, 1365), bool] */;
  %366 = %352.2;
  %367 = equal(%362, %363) /* ty=Tensor[(13, 4, 1365), bool] */;
  (%364, %var_2253, %var_2272, %var_2273, %365, %366, meta[relay.Constant][19] /* ty=Tensor[(30), int32] */, %var_2299, %367)
}

def @func_8651(%var_8649: Tensor[(30), int32], %var_8650: Tensor[(12, 8, 9), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(30), int32], Tensor[(1, 1176), float64], Tensor[(12, 8, 9), bool], Tensor[(7, 10, 8), float32], Tensor[(560), int8]) {
  %389 = fn (%var_8631: Tensor[(30), int32], %var_8640: Tensor[(12, 8, 9), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(30), int32], Tensor[(1, 1176), float64], Tensor[(12, 8, 9), bool], Tensor[(7, 10, 8), float32], Tensor[(560), int8]) {
    %368 = @func_3152() /* ty=Tensor[(14, 4, 7), float32] */;
    %369 = cast(%368, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
    %370 = cast(%var_8631, dtype="int32") /* ty=Tensor[(30), int32] */;
    %371 = cast(%var_8631, dtype="int32") /* ty=Tensor[(30), int32] */;
    %372 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 1176), float64] */, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
    %373 = reshape(%370, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
    %374 = reshape(%371, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
    %375 = reshape(%372, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %376 = @func_713(%373, %374, %375) /* ty=(Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) */;
    %377 = %376.1;
    %378 = cast(%var_8640, dtype="bool") /* ty=Tensor[(12, 8, 9), bool] */;
    %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(3), int32] */;
    %380 = cast(%377, dtype="bool") /* ty=Tensor[(12, 8, 9), bool] */;
    %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %382 = cast(meta[relay.Constant][21] /* ty=Tensor[(560), int8] */, dtype="int8") /* ty=Tensor[(560), int8] */;
    %383 = reshape(%382, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int8] */;
    %384 = @func_4384(%383) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */;
    %385 = acosh(%369) /* ty=Tensor[(14, 4, 7), float32] */;
    %386 = @func_7528() /* ty=Tensor[(14, 4, 7), float32] */;
    %387 = less_equal(%380, %381) /* ty=Tensor[(12, 8, 9), bool] */;
    %388 = %384.1;
    (%385, %386, %var_8631, meta[relay.Constant][20] /* ty=Tensor[(1, 1176), float64] */, %387, %388, meta[relay.Constant][21] /* ty=Tensor[(560), int8] */)
  };
  %389(%var_8649, %var_8650) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(30), int32], Tensor[(1, 1176), float64], Tensor[(12, 8, 9), bool], Tensor[(7, 10, 8), float32], Tensor[(560), int8]) */
}

def @func_7242(%var_7240: Tensor[(4, 1), uint32], %var_7241: Tensor[(4, 1), uint32]) -> (Tensor[(4, ?), uint32], Tensor[(14, 4, 7), float32]) {
  %396 = fn (%var_7205: Tensor[(4, 1), uint32], %var_7206: Tensor[(4, 1), uint32]) -> (Tensor[(4, ?), uint32], Tensor[(14, 4, 7), float32]) {
    %390 = cast(%var_7206, dtype="uint32") /* ty=Tensor[(4, 1), uint32] */;
    %391 = shape_of(%var_7205, dtype="int32") /* ty=Tensor[(2), int32] */;
    %392 = cast(%var_7205, dtype="uint32") /* ty=Tensor[(4, 1), uint32] */;
    %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %394 = multiply(%392, %393) /* ty=Tensor[(4, ?), uint32] */;
    %395 = @func_7180() /* ty=Tensor[(14, 4, 7), float32] */;
    (%394, %395)
  };
  %396(%var_7240, %var_7241) /* ty=(Tensor[(4, ?), uint32], Tensor[(14, 4, 7), float32]) */
}

def @func_3542() -> Tensor[(14, 4, 7), float32] {
  %398 = fn () -> Tensor[(14, 4, 7), float32] {
    %397 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %397.0
  };
  %398() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_3153() -> Tensor[(14, 4, 7), float32] {
  %399 = fn () -> Tensor[(14, 4, 7), float32] {
    @func_1970() /* ty=Tensor[(14, 4, 7), float32] */
  };
  %399() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_1812(%var_1788: Tensor[(5, 3, 4), float64]) -> (Tensor[(5, 3, 4), float64],) {
  %400 = cast(%var_1788, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %401 = exp(%400) /* ty=Tensor[(5, 3, 4), float64] */;
  (%401,)
}

def @func_2710(%var_2707: Tensor[(15, 5, 13), float32], %var_2708: Tensor[(15, 5, 13), float32], %var_2709: Tensor[(15, 5, 13), float32]) -> (Tensor[(1365), float64], Tensor[(52), float64], Tensor[(14, 3), float64], Tensor[(15, 5, 13), bool]) {
  @func_2705(%var_2707, %var_2708, %var_2709) /* ty=(Tensor[(1365), float64], Tensor[(52), float64], Tensor[(14, 3), float64], Tensor[(15, 5, 13), bool]) */
}

def @func_4746(%var_4744: Tensor[(3, 9, 4), int8], %var_4745: Tensor[(3, 9, 4), int8]) -> (Tensor[(3, 9, 4), int8], Tensor[(14, 4, 7), bool]) {
  %409 = fn (%var_4728: Tensor[(3, 9, 4), int8], %var_4729: Tensor[(3, 9, 4), int8]) -> (Tensor[(3, 9, 4), int8], Tensor[(14, 4, 7), bool]) {
    %402 = cast(%var_4729, dtype="int8") /* ty=Tensor[(3, 9, 4), int8] */;
    %403 = shape_of(%var_4728, dtype="int32") /* ty=Tensor[(3), int32] */;
    %404 = cast(%var_4728, dtype="int8") /* ty=Tensor[(3, 9, 4), int8] */;
    %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %406 = @func_3214() /* ty=(Tensor[(14, 4, 7), bool],) */;
    %407 = subtract(%404, %405) /* ty=Tensor[(3, 9, 4), int8] */;
    %408 = %406.0;
    (%407, %408)
  };
  %409(%var_4744, %var_4745) /* ty=(Tensor[(3, 9, 4), int8], Tensor[(14, 4, 7), bool]) */
}

def @func_6302(%var_6301: Tensor[(252), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(252), float64], Tensor[(252), float64]) {
  %416 = fn (%var_6291: Tensor[(252), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(252), float64], Tensor[(252), float64]) {
    %410 = @func_5716() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
    %411 = cast(%var_6291, dtype="float64") /* ty=Tensor[(252), float64] */;
    %412 = reshape(%411, newshape=[252]) /* ty=Tensor[(252), float64] */;
    %413 = @func_2512(%412) /* ty=(Tensor[(15, 7, 13), bool], Tensor[(252), float64], Tensor[(14, 4, 7), bool]) */;
    %414 = %410.1;
    %415 = %413.1;
    (%414, %415, %var_6291)
  };
  %416(%var_6301) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(252), float64], Tensor[(252), float64]) */
}

def @func_2769() -> (Tensor[(14, 4, 7), float64], Tensor[(1365), float64]) {
  %423 = fn () -> (Tensor[(14, 4, 7), float64], Tensor[(1365), float64]) {
    %417 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %418 = %417.0;
    %419 = cast(%418, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
    %420 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
    %421 = rsqrt(%419) /* ty=Tensor[(14, 4, 7), float64] */;
    %422 = %420.2;
    (%421, %422)
  };
  %423() /* ty=(Tensor[(14, 4, 7), float64], Tensor[(1365), float64]) */
}

def @func_2212(%var_2204: Tensor[(14, 4, 7), float32]) -> Tensor[(14, 4, 7), float32] {
  %424 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %425 = cast(%var_2204, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%424, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%427, %428) /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_9131() -> Tensor[(14, 4, 7), bool] {
  %429 = @func_5338() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %429.0
}

def @func_5106(%var_5098: Tensor[(14, 4, 7), float64]) -> (Tensor[(14, 4, 7), float64],) {
  %430 = @func_4160() /* ty=Tensor[(14, 4, 7), float32] */;
  %431 = cast(%430, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %432 = sinh(%431) /* ty=Tensor[(14, 4, 7), float64] */;
  %433 = cast(%var_5098, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %434 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%432, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %437 = less_equal(%435, %436) /* ty=Tensor[(14, 4, 7), bool] */;
  %438 = cast(%437, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %439 = sigmoid(%438) /* ty=Tensor[(14, 4, 7), float64] */;
  (%439,)
}

def @func_7784(%var_7783: Tensor[(936), uint8]) -> (Tensor[(14, 4, 7), float32], Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8]) {
  %449 = fn (%var_7774: Tensor[(936), uint8]) -> (Tensor[(14, 4, 7), float32], Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8]) {
    %440 = @func_4211() /* ty=(Tensor[(1365), float64],) */;
    %441 = cast(%var_7774, dtype="uint8") /* ty=Tensor[(936), uint8] */;
    %442 = cast(%var_7774, dtype="uint8") /* ty=Tensor[(936), uint8] */;
    %443 = reshape(%441, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
    %444 = reshape(%442, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
    %445 = @func_3152() /* ty=Tensor[(14, 4, 7), float32] */;
    %446 = %440.0;
    %447 = @func_6681() /* ty=Tensor[(14, 4, 7), float32] */;
    %448 = @func_2664(%443, %444) /* ty=Tensor[(13, 8, 9), uint8] */;
    (%445, %446, %447, %448, %var_7774)
  };
  %449(%var_7783) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8]) */
}

def @func_8347(%var_8334: Tensor[(560), int8]) -> (Tensor[(1365), float64], Tensor[(7, 10, 8), float32], Tensor[(560), int8], float64, Tensor[(1008), uint64]) {
  %450 = @func_6152() /* ty=(Tensor[(1365), float64],) */;
  %451 = %450.0;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %453 = cast(%var_8334, dtype="int8") /* ty=Tensor[(560), int8] */;
  %454 = reshape(%453, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int8] */;
  %455 = @func_4384(%454) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */;
  %456 = cast(meta[relay.Constant][22] /* ty=Tensor[(1008), uint64] */, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %457 = cast(meta[relay.Constant][22] /* ty=Tensor[(1008), uint64] */, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
  %458 = cast(%451, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %459 = reshape(%456, newshape=[8, 9, 14]) /* ty=Tensor[(8, 9, 14), uint64] */;
  %460 = reshape(%457, newshape=[8, 9, 14]) /* ty=Tensor[(8, 9, 14), uint64] */;
  %461 = reshape(%458, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %462 = @func_6087(%459, %460, %461) /* ty=(Tensor[(14, 4, 7), bool], float64, Tensor[(8, 9, 14), float32], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %463 = log2(%452) /* ty=Tensor[(1365), float64] */;
  %464 = %455.1;
  %465 = %462.3;
  (%463, %464, %var_8334, %465, meta[relay.Constant][22] /* ty=Tensor[(1008), uint64] */)
}

def @func_9439() -> (Tensor[(14, 4, 7), float32],) {
  %466 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %467 = %466.0;
  (%467,)
}

def @func_8800() -> (Tensor[(14, 4, 7), bool],) {
  %469 = fn () -> (Tensor[(14, 4, 7), bool],) {
    %468 = @func_5568() /* ty=Tensor[(14, 4, 7), bool] */;
    (%468,)
  };
  %469() /* ty=(Tensor[(14, 4, 7), bool],) */
}

def @func_9188() -> (Tensor[(60), float64],) {
  %472 = fn () -> (Tensor[(60), float64],) {
    %470 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
    %471 = %470.5;
    (%471,)
  };
  %472() /* ty=(Tensor[(60), float64],) */
}

def @func_1467(%var_1465: Tensor[(8, 6, 12), float64]) -> (Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), float64]) {
  @func_1464(%var_1465) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), float64]) */
}

def @func_5461() -> (Tensor[(14, 4, 7), float32],) {
  %474 = fn () -> (Tensor[(14, 4, 7), float32],) {
    %473 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
    (%473,)
  };
  %474() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_2137(%var_2119: Tensor[(60), float64], %var_2126: Tensor[(42, 1), float64], %var_2127: Tensor[(1365), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64], Tensor[(14, 1, 3), float64], Tensor[(42, 1), float64], Tensor[(1365), float64], Tensor[(14, 4, 7), float32]) {
  %475 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %476 = cast(%var_2119, dtype="float64") /* ty=Tensor[(60), float64] */;
  %477 = reshape(%476, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %478 = @func_1812(%477) /* ty=(Tensor[(5, 3, 4), float64],) */;
  %479 = cast(%var_2126, dtype="float64") /* ty=Tensor[(42, 1), float64] */;
  %480 = cast(%var_2127, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %481 = reshape(%479, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), float64] */;
  %482 = reshape(%480, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), float64] */;
  %483 = @func_834(%481, %482) /* ty=(Tensor[(14, 1, 3), float64], Tensor[(3, 4, 2), float64], Tensor[(12, 2), float64], Tensor[(15, 7, 13), bool], Tensor[(1365, 1), float64]) */;
  %484 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %485 = %475.0;
  %486 = %478.0;
  %487 = %483.0;
  %488 = %484.0;
  (%485, %486, %var_2119, %487, %var_2126, %var_2127, %488)
}

def @func_2869(%var_2812: Tensor[(11, 15, 3), int8], %var_2813: Tensor[(11, 15, 3), int8], %var_2842: Tensor[(91, 15), float64]) -> (Tensor[(11, 15, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(91, 15), float64], Tensor[(13, 4, 1), float64], Tensor[(26, 2), float64]) {
  %489 = cast(%var_2813, dtype="int8") /* ty=Tensor[(11, 15, 3), int8] */;
  %490 = shape_of(%var_2812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %491 = cast(%var_2812, dtype="int8") /* ty=Tensor[(11, 15, 3), int8] */;
  %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %493 = left_shift(%491, %492) /* ty=Tensor[(11, 15, 3), int8] */;
  %494 = cast(%var_2812, dtype="bool") /* ty=Tensor[(11, 15, 3), bool] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="bool") /* ty=Tensor[(11, 15, 3), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %498 = cast(%var_2842, dtype="float64") /* ty=Tensor[(91, 15), float64] */;
  %499 = reshape(%498, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %500 = @func_170(%499) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %501 = cast(meta[relay.Constant][23] /* ty=Tensor[(26, 2), float64] */, dtype="float64") /* ty=Tensor[(26, 2), float64] */;
  %502 = %500.0;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %504 = reshape(%501, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %505 = reshape(%503, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %506 = @func_1714(%504, %505) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %507 = logical_and(%496, %497) /* ty=Tensor[(11, 15, 3), bool] */;
  %508 = %506.3;
  (%507, %502, %var_2842, %508, meta[relay.Constant][23] /* ty=Tensor[(26, 2), float64] */)
}

def @func_4211() -> (Tensor[(1365), float64],) {
  %509 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %510 = %509.2;
  (%510,)
}

def @func_7156() -> (Tensor[(60), float64],) {
  %513 = fn () -> (Tensor[(60), float64],) {
    %511 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
    %512 = %511.5;
    (%512,)
  };
  %513() /* ty=(Tensor[(60), float64],) */
}

def @func_9085() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool]) {
  %518 = fn () -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool]) {
    %514 = @func_8276() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(60), float64]) */;
    %515 = @func_8182() /* ty=(Tensor[(14, 4, 7), bool],) */;
    %516 = %514.0;
    %517 = %515.0;
    (%516, %517)
  };
  %518() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool]) */
}

def @func_9369() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  @func_9367() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */
}

def @func_7269() -> (Tensor[(1365), float64],) {
  %521 = fn () -> (Tensor[(1365), float64],) {
    %519 = @func_5449() /* ty=(Tensor[(60), float64], Tensor[(5, 3, 4), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
    %520 = %519.3;
    (%520,)
  };
  %521() /* ty=(Tensor[(1365), float64],) */
}

def @func_4160() -> Tensor[(14, 4, 7), float32] {
  @func_3541() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_7530() -> Tensor[(14, 4, 7), float32] {
  @func_7528() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_2461() -> (Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) {
  %531 = fn () -> (Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) {
    %522 = cast(meta[relay.Constant][24] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %523 = reshape(%522, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
    %524 = @func_170(%523) /* ty=(Tensor[(15, 7, 13), bool],) */;
    %525 = cast(meta[relay.Constant][24] /* ty=Tensor[(1365), float64] */, dtype="float32") /* ty=Tensor[(1365), float32] */;
    %526 = asinh(%525) /* ty=Tensor[(1365), float32] */;
    %527 = cast(%526, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %528 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
    %529 = %524.0;
    %530 = tan(%527) /* ty=Tensor[(1365), float64] */;
    (%528, %529, %530)
  };
  %531() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */
}

def @func_4119(%var_4105: Tensor[(9, 16, 1), float32]) -> Tensor[(9, 16, 1), float64] {
  %532 = cast(%var_4105, dtype="float32") /* ty=Tensor[(9, 16, 1), float32] */;
  %533 = cosh(%532) /* ty=Tensor[(9, 16, 1), float32] */;
  %534 = cast(%533, dtype="float64") /* ty=Tensor[(9, 16, 1), float64] */;
  asin(%534) /* ty=Tensor[(9, 16, 1), float64] */
}

def @func_6389(%var_6377: Tensor[(52), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(11, 15, 15), bool], Tensor[(2475), float64], Tensor[(52), float64], Tensor[(1, 1365), float64], Tensor[(15, 7, 13), bool]) {
  %535 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %536 = cast(meta[relay.Constant][25] /* ty=Tensor[(2475), float64] */, dtype="float64") /* ty=Tensor[(2475), float64] */;
  %537 = cast(%var_6377, dtype="float64") /* ty=Tensor[(52), float64] */;
  %538 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 1365), float64] */, dtype="float64") /* ty=Tensor[(1, 1365), float64] */;
  %539 = reshape(%536, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float64] */;
  %540 = reshape(%537, newshape=[1, 52]) /* ty=Tensor[(1, 52), float64] */;
  %541 = reshape(%538, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %542 = @func_2632(%539, %540, %541) /* ty=(Tensor[(11, 15, 15), bool], Tensor[(11, 15, 15), int8], Tensor[(15, 7, 13), bool], Tensor[(1, 52), float64], Tensor[(1365), float64]) */;
  %543 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 1365), float64] */, dtype="float64") /* ty=Tensor[(1, 1365), float64] */;
  %544 = reshape(%543, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %545 = @func_170(%544) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %546 = %535.0;
  %547 = %542.0;
  %548 = %545.0;
  (%546, %547, meta[relay.Constant][25] /* ty=Tensor[(2475), float64] */, %var_6377, meta[relay.Constant][26] /* ty=Tensor[(1, 1365), float64] */, %548)
}

def @func_5913(%var_5911: Tensor[(7, 9, 14), uint16], %var_5912: Tensor[(7, 9, 14), uint16]) -> (Tensor[(7, 9, 14), bool], Tensor[(14, 4, 7), float64]) {
  @func_5909(%var_5911, %var_5912) /* ty=(Tensor[(7, 9, 14), bool], Tensor[(14, 4, 7), float64]) */
}

def @func_7420(%var_7371: Tensor[(11, 1, 1), float64]) -> (Tensor[(11, ?, ?), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(52), float64], Tensor[(52), float64], Tensor[(11, 1, 1), float64]) {
  %549 = cast(%var_7371, dtype="float64") /* ty=Tensor[(11, 1, 1), float64] */;
  %550 = sigmoid(%549) /* ty=Tensor[(11, 1, 1), float64] */;
  %551 = cast(%var_7371, dtype="bool") /* ty=Tensor[(11, 1, 1), bool] */;
  %552 = shape_of(%550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%550, dtype="bool") /* ty=Tensor[(11, 1, 1), bool] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %555 = cast(meta[relay.Constant][27] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %556 = reshape(%555, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %557 = @func_2968(%556) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(15, 7, 13), bool], Tensor[(1176), float64]) */;
  %558 = cast(meta[relay.Constant][28] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %559 = reshape(%558, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %560 = @func_6389(%559) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(11, 15, 15), bool], Tensor[(2475), float64], Tensor[(52), float64], Tensor[(1, 1365), float64], Tensor[(15, 7, 13), bool]) */;
  %561 = cast(%var_7371, dtype="float64") /* ty=Tensor[(11, 1, 1), float64] */;
  %562 = less_equal(%553, %554) /* ty=Tensor[(11, ?, ?), bool] */;
  %563 = %557.2;
  %564 = %560.3;
  %565 = cos(%561) /* ty=Tensor[(11, 1, 1), float64] */;
  (%562, %563, meta[relay.Constant][27] /* ty=Tensor[(1176), float64] */, %564, meta[relay.Constant][28] /* ty=Tensor[(52), float64] */, %565)
}

def @main(%var_9647: Tensor[(2, 360), int64]) -> (Tensor[(14, 4, 7), float32], Tensor[(2, 360), int64], Tensor[(1365), float64]) {
  %566 = cast(%var_9647, dtype="int64") /* ty=Tensor[(2, 360), int64] */;
  %567 = cast(%var_9647, dtype="int64") /* ty=Tensor[(2, 360), int64] */;
  %568 = reshape(%566, newshape=[3, 16, 15]) /* ty=Tensor[(3, 16, 15), int64] */;
  %569 = reshape(%567, newshape=[3, 16, 15]) /* ty=Tensor[(3, 16, 15), int64] */;
  %570 = @func_1198(%568, %569) /* ty=(Tensor[(3, 16, 15), int64], Tensor[(1365), float64], Tensor[(1176), float64]) */;
  %571 = %570.1;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %573 = @func_3683() /* ty=Tensor[(14, 4, 7), float32] */;
  %574 = cosh(%572) /* ty=Tensor[(1365), float64] */;
  (%573, %var_9647, %574)
}

def @func_9595(%var_9593: Tensor[(7, 14, 4), bool], %var_9594: Tensor[(52), float64]) -> (Tensor[(52), float64], Tensor[(52), float64], Tensor[(7, 14, 4), float64], Tensor[(14, 4, 7), bool]) {
  %597 = fn (%var_9539: Tensor[(7, 14, 4), bool], %var_9563: Tensor[(52), float64]) -> (Tensor[(52), float64], Tensor[(52), float64], Tensor[(7, 14, 4), float64], Tensor[(14, 4, 7), bool]) {
    %575 = cast(%var_9563, dtype="float64") /* ty=Tensor[(52), float64] */;
    %576 = reshape(%575, newshape=[52]) /* ty=Tensor[(52), float64] */;
    %577 = @func_6389(%576) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(11, 15, 15), bool], Tensor[(2475), float64], Tensor[(52), float64], Tensor[(1, 1365), float64], Tensor[(15, 7, 13), bool]) */;
    %578 = cast(%var_9539, dtype="bool") /* ty=Tensor[(7, 14, 4), bool] */;
    %579 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(7, 14, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %580 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 14, 4), bool] */, dtype="bool") /* ty=Tensor[(7, 14, 4), bool] */;
    %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %582 = logical_and(%580, %581) /* ty=Tensor[(7, 14, 4), bool] */;
    %583 = @func_8154() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %584 = %583.0;
    %585 = cast(%584, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
    %586 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
    %587 = cast(%582, dtype="float64") /* ty=Tensor[(7, 14, 4), float64] */;
    %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %589 = @func_5000() /* ty=Tensor[(14, 4, 7), float64] */;
    %590 = cast(%584, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
    %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
    %592 = cast(%589, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
    %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %594 = %577.3;
    %595 = power(%587, %588) /* ty=Tensor[(7, 14, 4), float64] */;
    %596 = greater(%592, %593) /* ty=Tensor[(14, 4, 7), bool] */;
    (%594, %var_9563, %595, %596)
  };
  %597(%var_9593, %var_9594) /* ty=(Tensor[(52), float64], Tensor[(52), float64], Tensor[(7, 14, 4), float64], Tensor[(14, 4, 7), bool]) */
}

def @func_8705() -> Tensor[(14, 4, 7), float32] {
  %598 = @func_8202() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %598.0
}

def @func_4511(%var_4499: Tensor[(4, 8, 2), int32]) -> (Tensor[(4, 8, 2), int32], Tensor[(14, 4, 7), float32]) {
  %599 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 8, 2), int32] */, dtype="int32") /* ty=Tensor[(4, 8, 2), int32] */;
  %600 = shape_of(%var_4499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%var_4499, dtype="int32") /* ty=Tensor[(4, 8, 2), int32] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %603 = minimum(%601, %602) /* ty=Tensor[(4, 8, 2), int32] */;
  %604 = @func_4179() /* ty=Tensor[(14, 4, 7), float32] */;
  (%603, %604)
}

def @func_7569(%var_7567: Tensor[(11, 11, 14), int16], %var_7568: Tensor[(11, 11, 14), int16]) -> (Tensor[(11, 11, 14), int8], Tensor[(8, 9, 14), float32], Tensor[(1008), uint64], Tensor[(1365), float64], Tensor[(11, 11, 14), float64]) {
  %633 = fn (%var_7536: Tensor[(11, 11, 14), int16], %var_7537: Tensor[(11, 11, 14), int16]) -> (Tensor[(11, 11, 14), int8], Tensor[(8, 9, 14), float32], Tensor[(1008), uint64], Tensor[(1365), float64], Tensor[(11, 11, 14), float64]) {
    %605 = cast(%var_7537, dtype="bool") /* ty=Tensor[(11, 11, 14), bool] */;
    %606 = shape_of(%var_7536, dtype="int32") /* ty=Tensor[(3), int32] */;
    %607 = cast(%var_7536, dtype="bool") /* ty=Tensor[(11, 11, 14), bool] */;
    %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %609 = not_equal(%607, %608) /* ty=Tensor[(11, 11, 14), bool] */;
    %610 = cast(%609, dtype="int8") /* ty=Tensor[(11, 11, 14), int8] */;
    %611 = shape_of(%var_7537, dtype="int32") /* ty=Tensor[(3), int32] */;
    %612 = cast(%var_7537, dtype="int8") /* ty=Tensor[(11, 11, 14), int8] */;
    %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %614 = cast(meta[relay.Constant][31] /* ty=Tensor[(1008), uint64] */, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
    %615 = cast(meta[relay.Constant][31] /* ty=Tensor[(1008), uint64] */, dtype="uint64") /* ty=Tensor[(1008), uint64] */;
    %616 = cast(meta[relay.Constant][32] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %617 = reshape(%614, newshape=[8, 9, 14]) /* ty=Tensor[(8, 9, 14), uint64] */;
    %618 = reshape(%615, newshape=[8, 9, 14]) /* ty=Tensor[(8, 9, 14), uint64] */;
    %619 = reshape(%616, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
    %620 = @func_6087(%617, %618, %619) /* ty=(Tensor[(14, 4, 7), bool], float64, Tensor[(8, 9, 14), float32], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
    %621 = cast(%609, dtype="uint16") /* ty=Tensor[(11, 11, 14), uint16] */;
    %622 = shape_of(%var_7536, dtype="int32") /* ty=Tensor[(3), int32] */;
    %623 = cast(%var_7536, dtype="uint16") /* ty=Tensor[(11, 11, 14), uint16] */;
    %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %625 = minimum(%623, %624) /* ty=Tensor[(11, 11, 14), uint16] */;
    %626 = cast(%625, dtype="float64") /* ty=Tensor[(11, 11, 14), float64] */;
    %627 = shape_of(%var_7536, dtype="int32") /* ty=Tensor[(3), int32] */;
    %628 = cast(%var_7536, dtype="float64") /* ty=Tensor[(11, 11, 14), float64] */;
    %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %630 = right_shift(%612, %613) /* ty=Tensor[(11, 11, 14), int8] */;
    %631 = %620.2;
    %632 = divide(%628, %629) /* ty=Tensor[(11, 11, 14), float64] */;
    (%630, %631, meta[relay.Constant][31] /* ty=Tensor[(1008), uint64] */, meta[relay.Constant][32] /* ty=Tensor[(1365), float64] */, %632)
  };
  %633(%var_7567, %var_7568) /* ty=(Tensor[(11, 11, 14), int8], Tensor[(8, 9, 14), float32], Tensor[(1008), uint64], Tensor[(1365), float64], Tensor[(11, 11, 14), float64]) */
}

def @func_3432(%var_3430: Tensor[(2, 5, 9), float32], %var_3431: Tensor[(24), float64]) -> (Tensor[(2, 5, 9), float32], Tensor[(3, 4, 2), float64], Tensor[(24), float64]) {
  @func_3428(%var_3430, %var_3431) /* ty=(Tensor[(2, 5, 9), float32], Tensor[(3, 4, 2), float64], Tensor[(24), float64]) */
}

def @func_6392(%var_6390: Tensor[(52), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(11, 15, 15), bool], Tensor[(2475), float64], Tensor[(52), float64], Tensor[(1, 1365), float64], Tensor[(15, 7, 13), bool]) {
  @func_6389(%var_6390) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(11, 15, 15), bool], Tensor[(2475), float64], Tensor[(52), float64], Tensor[(1, 1365), float64], Tensor[(15, 7, 13), bool]) */
}

def @func_5845() -> Tensor[(14, 4, 7), float32] {
  %634 = fn () -> Tensor[(14, 4, 7), float32] {
    @func_1970() /* ty=Tensor[(14, 4, 7), float32] */
  };
  %634() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_2793() -> Tensor[(14, 4, 7), float32] {
  %635 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %635.0
}

def @func_9367() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  %636 = @func_8202() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %637 = @func_4179() /* ty=Tensor[(14, 4, 7), float32] */;
  %638 = %636.0;
  (%637, %638)
}

def @func_4384(%var_4369: Tensor[(7, 10, 8), int8]) -> (Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) {
  %639 = cast(%var_4369, dtype="int8") /* ty=Tensor[(7, 10, 8), int8] */;
  %640 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(7, 10, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 10, 8), int8] */, dtype="int8") /* ty=Tensor[(7, 10, 8), int8] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %643 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 10, 8), int8] */, dtype="float32") /* ty=Tensor[(7, 10, 8), float32] */;
  %644 = minimum(%641, %642) /* ty=Tensor[(7, 10, 8), int8] */;
  %645 = sigmoid(%643) /* ty=Tensor[(7, 10, 8), float32] */;
  (%644, %645)
}

def @func_173(%var_171: Tensor[(15, 7, 13), float64]) -> (Tensor[(15, 7, 13), bool],) {
  @func_170(%var_171) /* ty=(Tensor[(15, 7, 13), bool],) */
}

def @func_5650() -> Tensor[(14, 4, 7), float32] {
  @func_5648() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_3124() -> (Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) {
  %657 = fn () -> (Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) {
    %646 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
    %647 = %646.1;
    %648 = cast(%647, dtype="bool") /* ty=Tensor[(14, 4, 7), bool] */;
    %649 = cast(8.22347f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %650 = cast(8.22347f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %651 = reshape(%650, newshape=[]) /* ty=float64 */;
    %652 = @func_2431(%651) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(14, 4, 7), float32]) */;
    %653 = %652.1;
    %654 = cast(%653, dtype="float32") /* ty=Tensor[(12, 8, 9), float32] */;
    %655 = greater_equal(%648, %649) /* ty=Tensor[(14, 4, 7), bool] */;
    %656 = log2(%654) /* ty=Tensor[(12, 8, 9), float32] */;
    (%655, %656)
  };
  %657() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */
}

def @func_3509(%var_3501: Tensor[(60), float64], %var_3502: Tensor[(42), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(42, 1365), bool], Tensor[(52), float64], Tensor[(1365), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(1176), float64]) {
  %658 = cast(meta[relay.Constant][34] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %659 = cast(meta[relay.Constant][35] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %660 = cast(%var_3501, dtype="float64") /* ty=Tensor[(60), float64] */;
  %661 = cast(%var_3502, dtype="float64") /* ty=Tensor[(42), float64] */;
  %662 = cast(meta[relay.Constant][36] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %663 = reshape(%658, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %664 = reshape(%659, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %665 = reshape(%660, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %666 = reshape(%661, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %667 = reshape(%662, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %668 = @func_2306(%663, %664, %665, %666, %667) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(52), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(42, 1365), bool], float64, Tensor[(30), int32], Tensor[(1176), float64], Tensor[(13, 4, 1365), bool]) */;
  %669 = @func_1970() /* ty=Tensor[(14, 4, 7), float32] */;
  %670 = %668.4;
  (%669, %670, meta[relay.Constant][34] /* ty=Tensor[(52), float64] */, meta[relay.Constant][35] /* ty=Tensor[(1365), float64] */, %var_3501, %var_3502, meta[relay.Constant][36] /* ty=Tensor[(1176), float64] */)
}

def @func_2874(%var_2871: Tensor[(11, 15, 3), int8], %var_2872: Tensor[(11, 15, 3), int8], %var_2873: Tensor[(91, 15), float64]) -> (Tensor[(11, 15, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(91, 15), float64], Tensor[(13, 4, 1), float64], Tensor[(26, 2), float64]) {
  @func_2869(%var_2871, %var_2872, %var_2873) /* ty=(Tensor[(11, 15, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(91, 15), float64], Tensor[(13, 4, 1), float64], Tensor[(26, 2), float64]) */
}

def @func_9223() -> (Tensor[(60), float64],) {
  %673 = fn () -> (Tensor[(60), float64],) {
    %671 = @func_8276() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(60), float64]) */;
    %672 = %671.1;
    (%672,)
  };
  %673() /* ty=(Tensor[(60), float64],) */
}

def @func_5267(%var_5266: Tensor[(8, 70), int8]) -> (Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(1365), float64], Tensor[(52), float64], Tensor[(7, 10, 8), float32], Tensor[(8, 70), int8], Tensor[(14, 4, 7), float32]) {
  %690 = fn (%var_5253: Tensor[(8, 70), int8]) -> (Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(1365), float64], Tensor[(52), float64], Tensor[(7, 10, 8), float32], Tensor[(8, 70), int8], Tensor[(14, 4, 7), float32]) {
    %674 = @func_4211() /* ty=(Tensor[(1365), float64],) */;
    %675 = @func_2372() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %676 = cast(meta[relay.Constant][37] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
    %677 = %674.0;
    %678 = cast(%677, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %679 = reshape(%676, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
    %680 = reshape(%678, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
    %681 = @func_1714(%679, %680) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
    %682 = cast(%var_5253, dtype="int8") /* ty=Tensor[(8, 70), int8] */;
    %683 = reshape(%682, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int8] */;
    %684 = @func_4384(%683) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */;
    %685 = @func_4769() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %686 = %675.0;
    %687 = %681.2;
    %688 = %684.1;
    %689 = %685.0;
    (%677, %686, %687, meta[relay.Constant][37] /* ty=Tensor[(52), float64] */, %688, %var_5253, %689)
  };
  %690(%var_5266) /* ty=(Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(1365), float64], Tensor[(52), float64], Tensor[(7, 10, 8), float32], Tensor[(8, 70), int8], Tensor[(14, 4, 7), float32]) */
}

def @func_4982(%var_4980: Tensor[(1, 52), float64], %var_4981: Tensor[(7, 195), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(5, 10), float32], Tensor[(13, 4, ?), int8], Tensor[(1, 52), float64], Tensor[(7, 195), float64], Tensor[(252), float64], Tensor[(1176), bool], Tensor[(14, 4, 7), float32]) {
  %708 = fn (%var_4963: Tensor[(1, 52), float64], %var_4964: Tensor[(7, 195), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(5, 10), float32], Tensor[(13, 4, ?), int8], Tensor[(1, 52), float64], Tensor[(7, 195), float64], Tensor[(252), float64], Tensor[(1176), bool], Tensor[(14, 4, 7), float32]) {
    %691 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
    %692 = reshape(%691, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float32] */;
    %693 = cast(%var_4963, dtype="float64") /* ty=Tensor[(1, 52), float64] */;
    %694 = cast(%var_4964, dtype="float64") /* ty=Tensor[(7, 195), float64] */;
    %695 = reshape(%693, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
    %696 = reshape(%694, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
    %697 = @func_1714(%695, %696) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
    %698 = cast(meta[relay.Constant][39] /* ty=Tensor[(1176), bool] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %699 = cast(meta[relay.Constant][39] /* ty=Tensor[(1176), bool] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %700 = reshape(%698, newshape=[14, 14, 6]) /* ty=Tensor[(14, 14, 6), bool] */;
    %701 = reshape(%699, newshape=[14, 14, 6]) /* ty=Tensor[(14, 14, 6), bool] */;
    %702 = @func_1950(%700, %701) /* ty=(Tensor[(14, 14, 6), bool], Tensor[(7, 195), float64], Tensor[(252), float64]) */;
    %703 = @func_3683() /* ty=Tensor[(14, 4, 7), float32] */;
    %704 = @func_3190(%692) /* ty=Tensor[(1, 10, 5), float32] */;
    %705 = %697.0;
    %706 = %702.2;
    %707 = @func_3378() /* ty=Tensor[(14, 4, 7), float32] */;
    (%703, %704, meta[relay.Constant][38] /* ty=Tensor[(5, 10), float32] */, %705, %var_4963, %var_4964, %706, meta[relay.Constant][39] /* ty=Tensor[(1176), bool] */, %707)
  };
  %708(%var_4980, %var_4981) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(5, 10), float32], Tensor[(13, 4, ?), int8], Tensor[(1, 52), float64], Tensor[(7, 195), float64], Tensor[(252), float64], Tensor[(1176), bool], Tensor[(14, 4, 7), float32]) */
}

def @func_6786() -> Tensor[(14, 4, 7), float64] {
  @func_6784() /* ty=Tensor[(14, 4, 7), float64] */
}

def @func_8043(%var_8039: Tensor[(3, 5, 14), float64], %var_8040: Tensor[(3, 5, 14), float64], %var_8041: Tensor[(30), int32], %var_8042: Tensor[(1176), float64]) -> (Tensor[(3, 5, 14), uint64], Tensor[(14, 4, 7), float32], Tensor[(3, 5, 14), float64], Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(7, 12, 14), float32], Tensor[(30), int32], Tensor[(1176), float64]) {
  %736 = fn (%var_7983: Tensor[(3, 5, 14), float64], %var_7984: Tensor[(3, 5, 14), float64], %var_8028: Tensor[(30), int32], %var_8029: Tensor[(1176), float64]) -> (Tensor[(3, 5, 14), uint64], Tensor[(14, 4, 7), float32], Tensor[(3, 5, 14), float64], Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(7, 12, 14), float32], Tensor[(30), int32], Tensor[(1176), float64]) {
    %709 = cast(%var_7984, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
    %710 = shape_of(%var_7983, dtype="int32") /* ty=Tensor[(3), int32] */;
    %711 = cast(%var_7983, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
    %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %713 = power(%711, %712) /* ty=Tensor[(3, 5, 14), float64] */;
    %714 = cast(%713, dtype="uint64") /* ty=Tensor[(3, 5, 14), uint64] */;
    %715 = shape_of(%var_7983, dtype="int32") /* ty=Tensor[(3), int32] */;
    %716 = cast(%var_7983, dtype="uint64") /* ty=Tensor[(3, 5, 14), uint64] */;
    %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %718 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
    %719 = cast(%713, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
    %720 = erf(%719) /* ty=Tensor[(3, 5, 14), float64] */;
    %721 = cast(%720, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
    %722 = @func_4653() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32]) */;
    %723 = cast(%var_8028, dtype="int32") /* ty=Tensor[(30), int32] */;
    %724 = cast(%var_8028, dtype="int32") /* ty=Tensor[(30), int32] */;
    %725 = cast(%var_8029, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %726 = reshape(%723, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
    %727 = reshape(%724, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
    %728 = reshape(%725, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %729 = @func_713(%726, %727, %728) /* ty=(Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) */;
    %730 = bitwise_and(%716, %717) /* ty=Tensor[(3, 5, 14), uint64] */;
    %731 = %718.0;
    %732 = log(%721) /* ty=Tensor[(3, 5, 14), float64] */;
    %733 = %722.2;
    %734 = @func_7180() /* ty=Tensor[(14, 4, 7), float32] */;
    %735 = %729.3;
    (%730, %731, %732, %733, %734, %735, %var_8028, %var_8029)
  };
  %736(%var_8039, %var_8040, %var_8041, %var_8042) /* ty=(Tensor[(3, 5, 14), uint64], Tensor[(14, 4, 7), float32], Tensor[(3, 5, 14), float64], Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(7, 12, 14), float32], Tensor[(30), int32], Tensor[(1176), float64]) */
}

def @func_2515(%var_2513: Tensor[(252), float64]) -> (Tensor[(15, 7, 13), bool], Tensor[(252), float64], Tensor[(14, 4, 7), bool]) {
  @func_2512(%var_2513) /* ty=(Tensor[(15, 7, 13), bool], Tensor[(252), float64], Tensor[(14, 4, 7), bool]) */
}

def @func_2142(%var_2139: Tensor[(60), float64], %var_2140: Tensor[(42, 1), float64], %var_2141: Tensor[(1365), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64], Tensor[(14, 1, 3), float64], Tensor[(42, 1), float64], Tensor[(1365), float64], Tensor[(14, 4, 7), float32]) {
  @func_2137(%var_2139, %var_2140, %var_2141) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64], Tensor[(14, 1, 3), float64], Tensor[(42, 1), float64], Tensor[(1365), float64], Tensor[(14, 4, 7), float32]) */
}

def @func_3974() -> Tensor[(14, 4, 7), bool] {
  @func_3972() /* ty=Tensor[(14, 4, 7), bool] */
}

def @func_8792() -> (Tensor[(14, 4, 7), float32], Tensor[(3, 4, 2), float64]) {
  %741 = fn () -> (Tensor[(14, 4, 7), float32], Tensor[(3, 4, 2), float64]) {
    %737 = @func_8056() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %738 = @func_8231() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(3, 4, 2), float64], Tensor[(6, 4), float64]) */;
    %739 = %737.0;
    %740 = %738.1;
    (%739, %740)
  };
  %741() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(3, 4, 2), float64]) */
}

def @func_8943() -> Tensor[(15, 7, 13), bool] {
  %742 = @func_5449() /* ty=(Tensor[(60), float64], Tensor[(5, 3, 4), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
  %742.2
}

def @func_4162() -> Tensor[(14, 4, 7), float32] {
  @func_4160() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_2632(%var_2606: Tensor[(11, 15, 15), float64], %var_2619: Tensor[(1, 52), float64], %var_2620: Tensor[(1365), float64]) -> (Tensor[(11, 15, 15), bool], Tensor[(11, 15, 15), int8], Tensor[(15, 7, 13), bool], Tensor[(1, 52), float64], Tensor[(1365), float64]) {
  %743 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 15, 15), float64] */, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %744 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(11, 15, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 15, 15), float64] */, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %747 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %748 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(11, 15, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %751 = divide(%749, %750) /* ty=Tensor[(11, 15, 15), float64] */;
  %752 = cast(%var_2606, dtype="int8") /* ty=Tensor[(11, 15, 15), int8] */;
  %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%751, dtype="int8") /* ty=Tensor[(11, 15, 15), int8] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %756 = cast(%var_2619, dtype="float64") /* ty=Tensor[(1, 52), float64] */;
  %757 = cast(%var_2620, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %758 = reshape(%756, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
  %759 = reshape(%757, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %760 = @func_1714(%758, %759) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
  %761 = greater_equal(%745, %746) /* ty=Tensor[(11, 15, 15), bool] */;
  %762 = multiply(%754, %755) /* ty=Tensor[(11, 15, 15), int8] */;
  %763 = %760.1;
  (%761, %762, %763, %var_2619, %var_2620)
}

def @func_3181() -> (Tensor[(14, 4, 7), float32],) {
  @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_4098() -> (Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) {
  %772 = fn () -> (Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) {
    %764 = @func_4005() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
    %765 = cast(meta[relay.Constant][42] /* ty=Tensor[(1365, 1), float64] */, dtype="float64") /* ty=Tensor[(1365, 1), float64] */;
    %766 = reshape(%765, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
    %767 = @func_170(%766) /* ty=(Tensor[(15, 7, 13), bool],) */;
    %768 = %767.0;
    %769 = cast(%768, dtype="float32") /* ty=Tensor[(15, 7, 13), float32] */;
    %770 = %764.1;
    %771 = rsqrt(%769) /* ty=Tensor[(15, 7, 13), float32] */;
    (%770, meta[relay.Constant][42] /* ty=Tensor[(1365, 1), float64] */, %771)
  };
  %772() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) */
}

def @func_3972() -> Tensor[(14, 4, 7), bool] {
  %773 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
  %773.0
}

def @func_4213() -> (Tensor[(1365), float64],) {
  @func_4211() /* ty=(Tensor[(1365), float64],) */
}

def @func_3379() -> Tensor[(14, 4, 7), float32] {
  %774 = fn () -> Tensor[(14, 4, 7), float32] {
    @func_2939() /* ty=Tensor[(14, 4, 7), float32] */
  };
  %774() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_9198() -> (Tensor[(14, 4, 7), float32],) {
  %777 = fn () -> (Tensor[(14, 4, 7), float32],) {
    %775 = @func_4769() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %776 = %775.0;
    (%776,)
  };
  %777() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_8183() -> (Tensor[(14, 4, 7), bool],) {
  %780 = fn () -> (Tensor[(14, 4, 7), bool],) {
    %778 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
    %779 = %778.0;
    (%779,)
  };
  %780() /* ty=(Tensor[(14, 4, 7), bool],) */
}

def @func_4564(%var_4562: Tensor[(144), float32], %var_4563: Tensor[(560), int8]) -> (Tensor[(576), bool], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 10, 8), int8], Tensor[(560), int8], Tensor[(14, 4, 7), float32]) {
  %791 = fn (%var_4530: Tensor[(144), float32], %var_4534: Tensor[(560), int8]) -> (Tensor[(576), bool], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 10, 8), int8], Tensor[(560), int8], Tensor[(14, 4, 7), float32]) {
    %781 = @func_4345() /* ty=(Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(576), bool]) */;
    %782 = cast(%var_4530, dtype="float32") /* ty=Tensor[(144), float32] */;
    %783 = reshape(%782, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), float32] */;
    %784 = cast(%var_4534, dtype="int8") /* ty=Tensor[(560), int8] */;
    %785 = reshape(%784, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int8] */;
    %786 = @func_4384(%785) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */;
    %787 = %781.2;
    %788 = @func_4119(%783) /* ty=Tensor[(9, 16, 1), float64] */;
    %789 = %786.0;
    %790 = @func_3378() /* ty=Tensor[(14, 4, 7), float32] */;
    (%787, %788, %var_4530, %789, %var_4534, %790)
  };
  %791(%var_4562, %var_4563) /* ty=(Tensor[(576), bool], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 10, 8), int8], Tensor[(560), int8], Tensor[(14, 4, 7), float32]) */
}

def @func_4712() -> (Tensor[(14, 4, 7), float32], Tensor[(7, 10, 8), float32], Tensor[(560), int8], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) {
  %792 = @func_4005() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %793 = cast(meta[relay.Constant][43] /* ty=Tensor[(560), int8] */, dtype="int8") /* ty=Tensor[(560), int8] */;
  %794 = reshape(%793, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int8] */;
  %795 = @func_4384(%794) /* ty=(Tensor[(7, 10, 8), int8], Tensor[(7, 10, 8), float32]) */;
  %796 = cast(meta[relay.Constant][44] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %797 = reshape(%796, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %798 = @func_1812(%797) /* ty=(Tensor[(5, 3, 4), float64],) */;
  %799 = %792.2;
  %800 = %795.1;
  %801 = %798.0;
  (%799, %800, meta[relay.Constant][43] /* ty=Tensor[(560), int8] */, %801, meta[relay.Constant][44] /* ty=Tensor[(60), float64] */)
}

def @func_8707() -> Tensor[(14, 4, 7), float32] {
  @func_8705() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_5781(%var_5754: Tensor[(975), float32]) -> (Tensor[(14, 4, 7), uint64], Tensor[(52), float64], Tensor[(975), float32]) {
  %802 = @func_5716() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %803 = %802.2;
  %804 = cast(%803, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %805 = sqrt(%804) /* ty=Tensor[(14, 4, 7), float64] */;
  %806 = @func_2939() /* ty=Tensor[(14, 4, 7), float32] */;
  %807 = cast(%806, dtype="uint64") /* ty=Tensor[(14, 4, 7), uint64] */;
  %808 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%805, dtype="uint64") /* ty=Tensor[(14, 4, 7), uint64] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %811 = cast(%var_5754, dtype="float32") /* ty=Tensor[(975), float32] */;
  %812 = cast(%var_5754, dtype="float32") /* ty=Tensor[(975), float32] */;
  %813 = cast(%var_5754, dtype="float32") /* ty=Tensor[(975), float32] */;
  %814 = reshape(%811, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %815 = reshape(%812, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %816 = reshape(%813, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %817 = @func_2705(%814, %815, %816) /* ty=(Tensor[(1365), float64], Tensor[(52), float64], Tensor[(14, 3), float64], Tensor[(15, 5, 13), bool]) */;
  %818 = bitwise_xor(%809, %810) /* ty=Tensor[(14, 4, 7), uint64] */;
  %819 = %817.1;
  (%818, %819, %var_5754)
}

def @func_8563(%var_8562: uint16) -> Tensor[(11, 1), uint16] {
  %822 = fn (%var_8546: uint16) -> Tensor[(11, 1), uint16] {
    %820 = cast(%var_8546, dtype="uint16") /* ty=uint16 */;
    %821 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 1), uint16] */, dtype="uint16") /* ty=Tensor[(11, 1), uint16] */;
    bitwise_or(%820, %821) /* ty=Tensor[(11, 1), uint16] */
  };
  %822(%var_8562) /* ty=Tensor[(11, 1), uint16] */
}

def @func_8945() -> Tensor[(15, 7, 13), bool] {
  @func_8943() /* ty=Tensor[(15, 7, 13), bool] */
}

def @func_4514(%var_4512: Tensor[(4, 8, 2), int32]) -> (Tensor[(4, 8, 2), int32], Tensor[(14, 4, 7), float32]) {
  @func_4511(%var_4512) /* ty=(Tensor[(4, 8, 2), int32], Tensor[(14, 4, 7), float32]) */
}

def @func_7823() -> (Tensor[(1176), float64], Tensor[(14, 4, 7), bool]) {
  %823 = @func_6532() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 12, 14), float32], Tensor[(1176), float64]) */;
  %824 = @func_5338() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %825 = %823.4;
  %826 = %824.0;
  (%825, %826)
}

def @func_6532() -> (Tensor[(14, 4, 7), float32], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(7, 12, 14), float32], Tensor[(1176), float64]) {
  %827 = @func_5716() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %828 = cast(meta[relay.Constant][46] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %829 = reshape(%828, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), float32] */;
  %830 = cast(meta[relay.Constant][47] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %831 = reshape(%830, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), float64] */;
  %832 = @func_284(%831) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) */;
  %833 = %827.4;
  %834 = @func_4119(%829) /* ty=Tensor[(9, 16, 1), float64] */;
  %835 = %832.0;
  (%833, %834, meta[relay.Constant][46] /* ty=Tensor[(144), float32] */, %835, meta[relay.Constant][47] /* ty=Tensor[(1176), float64] */)
}

def @func_1953(%var_1951: Tensor[(14, 14, 6), bool], %var_1952: Tensor[(14, 14, 6), bool]) -> (Tensor[(14, 14, 6), bool], Tensor[(7, 195), float64], Tensor[(252), float64]) {
  %847 = fn (%var_1927: Tensor[(14, 14, 6), bool], %var_1928: Tensor[(14, 14, 6), bool]) -> (Tensor[(14, 14, 6), bool], Tensor[(7, 195), float64], Tensor[(252), float64]) {
    %836 = cast(%var_1928, dtype="bool") /* ty=Tensor[(14, 14, 6), bool] */;
    %837 = shape_of(%var_1927, dtype="int32") /* ty=Tensor[(3), int32] */;
    %838 = cast(%var_1927, dtype="bool") /* ty=Tensor[(14, 14, 6), bool] */;
    %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %840 = cast(meta[relay.Constant][48] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %841 = cast(meta[relay.Constant][48] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %842 = reshape(%840, newshape=[7, 12, 3]) /* ty=Tensor[(7, 12, 3), float64] */;
    %843 = reshape(%841, newshape=[7, 12, 3]) /* ty=Tensor[(7, 12, 3), float64] */;
    %844 = @func_1428(%842, %843) /* ty=(Tensor[(7, 12, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(7, 195), float64]) */;
    %845 = logical_or(%838, %839) /* ty=Tensor[(14, 14, 6), bool] */;
    %846 = %844.2;
    (%845, %846, meta[relay.Constant][48] /* ty=Tensor[(252), float64] */)
  };
  %847(%var_1951, %var_1952) /* ty=(Tensor[(14, 14, 6), bool], Tensor[(7, 195), float64], Tensor[(252), float64]) */
}

def @func_6341() -> (Tensor[(14, 4, 7), float64],) {
  @func_6339() /* ty=(Tensor[(14, 4, 7), float64],) */
}

def @func_9376() -> (Tensor[(60), float64],) {
  %850 = fn () -> (Tensor[(60), float64],) {
    %848 = @func_9187() /* ty=(Tensor[(60), float64],) */;
    %849 = %848.0;
    (%849,)
  };
  %850() /* ty=(Tensor[(60), float64],) */
}

def @func_1198(%var_1196: Tensor[(3, 16, 15), int64], %var_1197: Tensor[(3, 16, 15), int64]) -> (Tensor[(3, 16, 15), int64], Tensor[(1365), float64], Tensor[(1176), float64]) {
  %860 = fn (%var_1173: Tensor[(3, 16, 15), int64], %var_1174: Tensor[(3, 16, 15), int64]) -> (Tensor[(3, 16, 15), int64], Tensor[(1365), float64], Tensor[(1176), float64]) {
    %851 = cast(%var_1174, dtype="int64") /* ty=Tensor[(3, 16, 15), int64] */;
    %852 = shape_of(%var_1173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %853 = cast(%var_1173, dtype="int64") /* ty=Tensor[(3, 16, 15), int64] */;
    %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %855 = cast(meta[relay.Constant][49] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %856 = reshape(%855, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), float64] */;
    %857 = @func_284(%856) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) */;
    %858 = subtract(%853, %854) /* ty=Tensor[(3, 16, 15), int64] */;
    %859 = %857.2;
    (%858, %859, meta[relay.Constant][49] /* ty=Tensor[(1176), float64] */)
  };
  %860(%var_1196, %var_1197) /* ty=(Tensor[(3, 16, 15), int64], Tensor[(1365), float64], Tensor[(1176), float64]) */
}

def @func_8740() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  @func_8738() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */
}

def @func_284(%var_262: Tensor[(7, 12, 14), float64]) -> (Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) {
  %861 = cast(%var_262, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
  %862 = cos(%861) /* ty=Tensor[(7, 12, 14), float64] */;
  %863 = cast(%862, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %864 = cast(meta[relay.Constant][50] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %865 = reshape(%864, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %866 = @func_170(%865) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %867 = %866.0;
  %868 = cast(%867, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  %869 = reshape(%868, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %870 = @func_170(%869) /* ty=(Tensor[(15, 7, 13), bool],) */;
  %871 = erf(%863) /* ty=Tensor[(7, 12, 14), float32] */;
  %872 = %870.0;
  (%871, %867, meta[relay.Constant][50] /* ty=Tensor[(1365), float64] */, %872)
}

def @func_717(%var_714: Tensor[(5, 3, 2), int32], %var_715: Tensor[(5, 3, 2), int32], %var_716: Tensor[(1176), float64]) -> (Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) {
  %891 = fn (%var_658: Tensor[(5, 3, 2), int32], %var_659: Tensor[(5, 3, 2), int32], %var_702: Tensor[(1176), float64]) -> (Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) {
    %873 = cast(%var_659, dtype="int32") /* ty=Tensor[(5, 3, 2), int32] */;
    %874 = shape_of(%var_658, dtype="int32") /* ty=Tensor[(3), int32] */;
    %875 = cast(%var_658, dtype="int32") /* ty=Tensor[(5, 3, 2), int32] */;
    %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %877 = cast(-9.50255f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %878 = reshape(%877, newshape=[]) /* ty=float64 */;
    %879 = @func_636(%878) /* ty=(Tensor[(12, 8, 9), float64],) */;
    %880 = cast(meta[relay.Constant][51] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %881 = reshape(%880, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), float64] */;
    %882 = @func_284(%881) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(15, 7, 13), bool]) */;
    %883 = cast(%var_702, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %884 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(1176), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %885 = cast(meta[relay.Constant][51] /* ty=Tensor[(1176), float64] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?), bool] */;
    %887 = subtract(%875, %876) /* ty=Tensor[(5, 3, 2), int32] */;
    %888 = %879.0;
    %889 = %882.0;
    %890 = logical_or(%885, %886) /* ty=Tensor[(1176), bool] */;
    (%887, %888, -9.50255f64 /* ty=float64 */, %889, %890)
  };
  %891(%var_714, %var_715, %var_716) /* ty=(Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) */
}

def @func_762(%var_760: Tensor[(3, 4, 2), float64]) -> Tensor[(3, 4, 2), float64] {
  @func_759(%var_760) /* ty=Tensor[(3, 4, 2), float64] */
}

def @func_6734() -> Tensor[(14, 4, 7), float32] {
  @func_2939() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_9133() -> Tensor[(14, 4, 7), bool] {
  @func_9131() /* ty=Tensor[(14, 4, 7), bool] */
}

def @func_5109(%var_5107: Tensor[(14, 4, 7), float64]) -> (Tensor[(14, 4, 7), float64],) {
  @func_5106(%var_5107) /* ty=(Tensor[(14, 4, 7), float64],) */
}

def @func_3338(%var_3336: Tensor[(14, 4, 7), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), uint64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(14, 4, 7), float32]) {
  @func_3335(%var_3336) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), uint64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(14, 4, 7), float32]) */
}

def @func_3881() -> Tensor[(14, 4, 7), bool] {
  %893 = fn () -> Tensor[(14, 4, 7), bool] {
    %892 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
    %892.0
  };
  %893() /* ty=Tensor[(14, 4, 7), bool] */
}

def @func_3716() -> Tensor[(14, 4, 7), float32] {
  @func_3714() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_3215() -> (Tensor[(14, 4, 7), bool],) {
  %896 = fn () -> (Tensor[(14, 4, 7), bool],) {
    %894 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
    %895 = %894.0;
    (%895,)
  };
  %896() /* ty=(Tensor[(14, 4, 7), bool],) */
}

def @func_6339() -> (Tensor[(14, 4, 7), float64],) {
  %897 = @func_5000() /* ty=Tensor[(14, 4, 7), float64] */;
  (%897,)
}

def @func_6652() -> (Tensor[(14, 4, 7), float64], Tensor[(2475), float64], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(52), float32], Tensor[(52), int16]) {
  %918 = fn () -> (Tensor[(14, 4, 7), float64], Tensor[(2475), float64], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(52), float32], Tensor[(52), int16]) {
    %898 = @func_6339() /* ty=(Tensor[(14, 4, 7), float64],) */;
    %899 = cast(meta[relay.Constant][52] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
    %900 = reshape(%899, newshape=[52]) /* ty=Tensor[(52), float64] */;
    %901 = @func_6389(%900) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(11, 15, 15), bool], Tensor[(2475), float64], Tensor[(52), float64], Tensor[(1, 1365), float64], Tensor[(15, 7, 13), bool]) */;
    %902 = @func_5460() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %903 = @func_3214() /* ty=(Tensor[(14, 4, 7), bool],) */;
    %904 = cast(meta[relay.Constant][53] /* ty=Tensor[(52), float64] */, dtype="float32") /* ty=Tensor[(52), float32] */;
    %905 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(52), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %906 = cast(meta[relay.Constant][52] /* ty=Tensor[(52), float64] */, dtype="float32") /* ty=Tensor[(52), float32] */;
    %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?), float32] */;
    %908 = cast(meta[relay.Constant][52] /* ty=Tensor[(52), float64] */, dtype="int16") /* ty=Tensor[(52), int16] */;
    %909 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(52), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %910 = cast(meta[relay.Constant][53] /* ty=Tensor[(52), float64] */, dtype="int16") /* ty=Tensor[(52), int16] */;
    %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?), int16] */;
    %912 = %898.0;
    %913 = %901.2;
    %914 = %902.0;
    %915 = %903.0;
    %916 = floor_mod(%906, %907) /* ty=Tensor[(52), float32] */;
    %917 = bitwise_and(%910, %911) /* ty=Tensor[(52), int16] */;
    (%912, %913, %914, %915, %916, %917)
  };
  %918() /* ty=(Tensor[(14, 4, 7), float64], Tensor[(2475), float64], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(52), float32], Tensor[(52), int16]) */
}

def @func_7825() -> (Tensor[(1176), float64], Tensor[(14, 4, 7), bool]) {
  @func_7823() /* ty=(Tensor[(1176), float64], Tensor[(14, 4, 7), bool]) */
}

def @func_8762() -> Tensor[(14, 4, 7), float32] {
  @func_8760() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_6464(%var_6454: Tensor[(8, 16, 2), uint64], %var_6455: Tensor[(8, 16, 2), uint64]) -> Tensor[(8, 16, 2), uint64] {
  %919 = cast(%var_6455, dtype="uint64") /* ty=Tensor[(8, 16, 2), uint64] */;
  %920 = shape_of(%var_6454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %921 = cast(%var_6454, dtype="uint64") /* ty=Tensor[(8, 16, 2), uint64] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  subtract(%921, %922) /* ty=Tensor[(8, 16, 2), uint64] */
}

def @func_8932() -> Tensor[(14, 4, 7), float32] {
  %924 = fn () -> Tensor[(14, 4, 7), float32] {
    %923 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
    %923.1
  };
  %924() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_6784() -> Tensor[(14, 4, 7), float64] {
  %925 = @func_3152() /* ty=Tensor[(14, 4, 7), float32] */;
  %926 = cast(%925, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  asinh(%926) /* ty=Tensor[(14, 4, 7), float64] */
}

def @func_5042() -> (Tensor[(50), float32], Tensor[(14, 4, 7), float32]) {
  %927 = @func_4653() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32]) */;
  %928 = %927.3;
  %929 = @func_3541() /* ty=Tensor[(14, 4, 7), float32] */;
  (%928, %929)
}

def @func_1464(%var_1443: Tensor[(8, 6, 12), float64]) -> (Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), float64]) {
  %930 = cast(%var_1443, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %931 = cast(meta[relay.Constant][54] /* ty=Tensor[(8, 6, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %932 = shape_of(%var_1443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%var_1443, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %935 = asin(%930) /* ty=Tensor[(8, 6, 12), float64] */;
  %936 = floor_divide(%933, %934) /* ty=Tensor[(8, 6, 12), float64] */;
  (%935, %936)
}

def @func_5001() -> Tensor[(14, 4, 7), float64] {
  %938 = fn () -> Tensor[(14, 4, 7), float64] {
    %937 = @func_2768() /* ty=(Tensor[(14, 4, 7), float64], Tensor[(1365), float64]) */;
    %937.0
  };
  %938() /* ty=Tensor[(14, 4, 7), float64] */
}

def @func_2192() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */
}

def @func_3428(%var_3414: Tensor[(2, 5, 9), float32], %var_3419: Tensor[(24), float64]) -> (Tensor[(2, 5, 9), float32], Tensor[(3, 4, 2), float64], Tensor[(24), float64]) {
  %939 = cast(%var_3414, dtype="float32") /* ty=Tensor[(2, 5, 9), float32] */;
  %940 = cast(%var_3419, dtype="float64") /* ty=Tensor[(24), float64] */;
  %941 = reshape(%940, newshape=[3, 4, 2]) /* ty=Tensor[(3, 4, 2), float64] */;
  %942 = sin(%939) /* ty=Tensor[(2, 5, 9), float32] */;
  %943 = @func_759(%941) /* ty=Tensor[(3, 4, 2), float64] */;
  (%942, %943, %var_3419)
}

def @func_5450() -> (Tensor[(60), float64], Tensor[(5, 3, 4), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) {
  %954 = fn () -> (Tensor[(60), float64], Tensor[(5, 3, 4), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) {
    %944 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
    %945 = %944.5;
    %946 = cast(%945, dtype="float64") /* ty=Tensor[(60), float64] */;
    %947 = reshape(%946, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
    %948 = @func_1812(%947) /* ty=(Tensor[(5, 3, 4), float64],) */;
    %949 = cast(meta[relay.Constant][55] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %950 = reshape(%949, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
    %951 = @func_170(%950) /* ty=(Tensor[(15, 7, 13), bool],) */;
    %952 = %948.0;
    %953 = %951.0;
    (%945, %952, %953, meta[relay.Constant][55] /* ty=Tensor[(1365), float64] */)
  };
  %954() /* ty=(Tensor[(60), float64], Tensor[(5, 3, 4), float64], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */
}

def @func_8277() -> (Tensor[(14, 4, 7), float32], Tensor[(60), float64]) {
  %958 = fn () -> (Tensor[(14, 4, 7), float32], Tensor[(60), float64]) {
    %955 = @func_7155() /* ty=(Tensor[(60), float64],) */;
    %956 = @func_5648() /* ty=Tensor[(14, 4, 7), float32] */;
    %957 = %955.0;
    (%956, %957)
  };
  %958() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(60), float64]) */
}

def @func_8760() -> Tensor[(14, 4, 7), float32] {
  %959 = @func_3179() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %959.0
}

def @func_6845() -> Tensor[(14, 4, 7), float32] {
  @func_6843() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_5994() -> (Tensor[(14, 4, 7), float32], Tensor[(60), float64], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(560), int8], Tensor[(14, 4, 7), float32]) {
  @func_5992() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(60), float64], Tensor[(9, 16, 1), float64], Tensor[(144), float32], Tensor[(560), int8], Tensor[(14, 4, 7), float32]) */
}

def @func_3192(%var_3191: Tensor[(1, 10, 5), float32]) -> Tensor[(1, 10, 5), float32] {
  %961 = fn (%var_3182: Tensor[(1, 10, 5), float32]) -> Tensor[(1, 10, 5), float32] {
    %960 = cast(%var_3182, dtype="float32") /* ty=Tensor[(1, 10, 5), float32] */;
    asin(%960) /* ty=Tensor[(1, 10, 5), float32] */
  };
  %961(%var_3191) /* ty=Tensor[(1, 10, 5), float32] */
}

def @func_7953() -> (Tensor[(14, 4, 7), float32],) {
  %962 = @func_4005() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %963 = %962.2;
  (%963,)
}

def @func_8058() -> (Tensor[(14, 4, 7), float32],) {
  @func_8056() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_2431(%var_2412: float64) -> (Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), float64], float64, Tensor[(3, 4, 2), float64], Tensor[(24), float64], Tensor[(14, 4, 7), float32]) {
  %964 = @func_1864() /* ty=(Tensor[(14, 4, 7), float32],) */;
  %965 = cast(%var_2412, dtype="float64") /* ty=float64 */;
  %966 = reshape(%965, newshape=[]) /* ty=float64 */;
  %967 = @func_636(%966) /* ty=(Tensor[(12, 8, 9), float64],) */;
  %968 = cast(meta[relay.Constant][56] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %969 = reshape(%968, newshape=[3, 4, 2]) /* ty=Tensor[(3, 4, 2), float64] */;
  %970 = %964.0;
  %971 = cast(%970, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %972 = reshape(%971, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float32] */;
  %973 = %967.0;
  %974 = @func_759(%969) /* ty=Tensor[(3, 4, 2), float64] */;
  %975 = @func_2212(%972) /* ty=Tensor[(14, 4, 7), float32] */;
  (%970, %973, %var_2412, %974, meta[relay.Constant][56] /* ty=Tensor[(24), float64] */, %975)
}

def @func_4771() -> (Tensor[(14, 4, 7), float32],) {
  @func_4769() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_6682() -> Tensor[(14, 4, 7), float32] {
  %976 = fn () -> Tensor[(14, 4, 7), float32] {
    @func_5844() /* ty=Tensor[(14, 4, 7), float32] */
  };
  %976() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_6154() -> (Tensor[(1365), float64],) {
  @func_6152() /* ty=(Tensor[(1365), float64],) */
}

def @func_5203(%var_5200: Tensor[(12, 8, 9), float32], %var_5201: Tensor[(52), float64], %var_5202: Tensor[(1176), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(252), float64], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), bool], Tensor[(42), float64], Tensor[(52), float64], Tensor[(455, 3), float64], Tensor[(60), float64], Tensor[(14, 3), float64], Tensor[(1176), float64], Tensor[(14, 4, 7), bool]) {
  %1005 = fn (%var_5168: Tensor[(12, 8, 9), float32], %var_5184: Tensor[(52), float64], %var_5188: Tensor[(1176), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(252), float64], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), bool], Tensor[(42), float64], Tensor[(52), float64], Tensor[(455, 3), float64], Tensor[(60), float64], Tensor[(14, 3), float64], Tensor[(1176), float64], Tensor[(14, 4, 7), bool]) {
    %977 = @func_3714() /* ty=Tensor[(14, 4, 7), float32] */;
    %978 = cast(%977, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
    %979 = reshape(%978, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
    %980 = @func_3335(%979) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), uint64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(14, 4, 7), float32]) */;
    %981 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
    %982 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
    %983 = %982.1;
    %984 = cast(%var_5168, dtype="bool") /* ty=Tensor[(12, 8, 9), bool] */;
    %985 = shape_of(%983, dtype="int32") /* ty=Tensor[(3), int32] */;
    %986 = cast(%983, dtype="bool") /* ty=Tensor[(12, 8, 9), bool] */;
    %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %988 = cast(%var_5184, dtype="float64") /* ty=Tensor[(52), float64] */;
    %989 = cast(meta[relay.Constant][57] /* ty=Tensor[(455, 3), float64] */, dtype="float64") /* ty=Tensor[(455, 3), float64] */;
    %990 = cast(meta[relay.Constant][58] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %991 = cast(meta[relay.Constant][59] /* ty=Tensor[(14, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 3), float64] */;
    %992 = cast(%var_5188, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %993 = reshape(%988, newshape=[52]) /* ty=Tensor[(52), float64] */;
    %994 = reshape(%989, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
    %995 = reshape(%990, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %996 = reshape(%991, newshape=[42]) /* ty=Tensor[(42), float64] */;
    %997 = reshape(%992, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %998 = @func_2306(%993, %994, %995, %996, %997) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(52), float64], Tensor[(60), float64], Tensor[(42), float64], Tensor[(42, 1365), bool], float64, Tensor[(30), int32], Tensor[(1176), float64], Tensor[(13, 4, 1365), bool]) */;
    %999 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
    %1000 = %980.3;
    %1001 = %981.1;
    %1002 = logical_or(%986, %987) /* ty=Tensor[(12, 8, 9), bool] */;
    %1003 = %998.3;
    %1004 = %999.0;
    (%977, %1000, %1001, %1002, %1003, %var_5184, meta[relay.Constant][57] /* ty=Tensor[(455, 3), float64] */, meta[relay.Constant][58] /* ty=Tensor[(60), float64] */, meta[relay.Constant][59] /* ty=Tensor[(14, 3), float64] */, %var_5188, %1004)
  };
  %1005(%var_5200, %var_5201, %var_5202) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(252), float64], Tensor[(14, 4, 7), float32], Tensor[(12, 8, 9), bool], Tensor[(42), float64], Tensor[(52), float64], Tensor[(455, 3), float64], Tensor[(60), float64], Tensor[(14, 3), float64], Tensor[(1176), float64], Tensor[(14, 4, 7), bool]) */
}

def @func_5288() -> Tensor[(14, 4, 7), float32] {
  %1006 = @func_2190() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */;
  %1006.1
}

def @func_1431(%var_1429: Tensor[(7, 12, 3), float64], %var_1430: Tensor[(7, 12, 3), float64]) -> (Tensor[(7, 12, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(7, 195), float64]) {
  %1016 = fn (%var_1419: Tensor[(7, 12, 3), float64], %var_1420: Tensor[(7, 12, 3), float64]) -> (Tensor[(7, 12, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(7, 195), float64]) {
    %1007 = cast(%var_1420, dtype="bool") /* ty=Tensor[(7, 12, 3), bool] */;
    %1008 = shape_of(%var_1419, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1009 = cast(%var_1419, dtype="bool") /* ty=Tensor[(7, 12, 3), bool] */;
    %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1011 = cast(meta[relay.Constant][60] /* ty=Tensor[(7, 195), float64] */, dtype="float64") /* ty=Tensor[(7, 195), float64] */;
    %1012 = reshape(%1011, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
    %1013 = @func_170(%1012) /* ty=(Tensor[(15, 7, 13), bool],) */;
    %1014 = not_equal(%1009, %1010) /* ty=Tensor[(7, 12, 3), bool] */;
    %1015 = %1013.0;
    (%1014, %1015, meta[relay.Constant][60] /* ty=Tensor[(7, 195), float64] */)
  };
  %1016(%var_1429, %var_1430) /* ty=(Tensor[(7, 12, 3), bool], Tensor[(15, 7, 13), bool], Tensor[(7, 195), float64]) */
}

def @func_5290() -> Tensor[(14, 4, 7), float32] {
  @func_5288() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_7037(%var_7035: Tensor[(1365), float64]) -> (Tensor[(14, 4, 7), float32], Tensor[(13, 4, ?), int8], Tensor[(52), float64], Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) {
  @func_7034(%var_7035) /* ty=(Tensor[(14, 4, 7), float32], Tensor[(13, 4, ?), int8], Tensor[(52), float64], Tensor[(1365), float64], Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), float32]) */
}

def @func_9170() -> (Tensor[(14, 4, 7), float32], Tensor[(14, 4, 7), bool]) {
  %1017 = @func_5288() /* ty=Tensor[(14, 4, 7), float32] */;
  %1018 = @func_5568() /* ty=Tensor[(14, 4, 7), bool] */;
  (%1017, %1018)
}

def @func_9273() -> (Tensor[(14, 4, 7), float64], Tensor[(14, 4, 7), bool]) {
  %1019 = @func_8799() /* ty=(Tensor[(14, 4, 7), bool],) */;
  %1020 = @func_5000() /* ty=Tensor[(14, 4, 7), float64] */;
  %1021 = %1019.0;
  (%1020, %1021)
}

def @func_2574(%var_2572: Tensor[(52), float64], %var_2573: Tensor[(42, 1), float64]) -> (Tensor[(1365), float64], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(14, 4, 7), int32], Tensor[(3, 4, 2), float64], Tensor[(42, 1), float64], Tensor[(1365, 1), float64]) {
  @func_2570(%var_2572, %var_2573) /* ty=(Tensor[(1365), float64], Tensor[(15, 7, 13), bool], Tensor[(52), float64], Tensor[(14, 4, 7), int32], Tensor[(3, 4, 2), float64], Tensor[(42, 1), float64], Tensor[(1365, 1), float64]) */
}

def @func_4346() -> (Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(576), bool]) {
  %1034 = fn () -> (Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(576), bool]) {
    %1022 = @func_4252() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32], Tensor[(1, 10, 5), float32], Tensor[(50), float32], Tensor[(5, 3, 4), float64], Tensor[(60), float64]) */;
    %1023 = cast(meta[relay.Constant][61] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %1024 = reshape(%1023, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float64] */;
    %1025 = @func_1464(%1024) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), float64]) */;
    %1026 = %1025.0;
    %1027 = cast(%1026, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
    %1028 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(576), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1029 = cast(meta[relay.Constant][61] /* ty=Tensor[(576), float64] */, dtype="bool") /* ty=Tensor[(576), bool] */;
    %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1031 = %1022.2;
    %1032 = @func_3541() /* ty=Tensor[(14, 4, 7), float32] */;
    %1033 = logical_and(%1029, %1030) /* ty=Tensor[(576), bool] */;
    (%1031, %1032, %1033)
  };
  %1034() /* ty=(Tensor[(1, 10, 5), float32], Tensor[(14, 4, 7), float32], Tensor[(576), bool]) */
}

def @func_3714() -> Tensor[(14, 4, 7), float32] {
  %1035 = @func_3269() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */;
  %1035.1
}

def @func_5648() -> Tensor[(14, 4, 7), float32] {
  @func_5288() /* ty=Tensor[(14, 4, 7), float32] */
}

def @func_8607() -> (Tensor[(60), float64],) {
  %1038 = fn () -> (Tensor[(60), float64],) {
    %1036 = @func_7155() /* ty=(Tensor[(60), float64],) */;
    %1037 = %1036.0;
    (%1037,)
  };
  %1038() /* ty=(Tensor[(60), float64],) */
}

def @func_9441() -> (Tensor[(14, 4, 7), float32],) {
  @func_9439() /* ty=(Tensor[(14, 4, 7), float32],) */
}

def @func_6152() -> (Tensor[(1365), float64],) {
  %1039 = @func_4211() /* ty=(Tensor[(1365), float64],) */;
  %1040 = %1039.0;
  (%1040,)
}

def @func_2667(%var_2665: Tensor[(13, 8, 9), uint8], %var_2666: Tensor[(13, 8, 9), uint8]) -> Tensor[(13, 8, 9), uint8] {
  %1045 = fn (%var_2646: Tensor[(13, 8, 9), uint8], %var_2647: Tensor[(13, 8, 9), uint8]) -> Tensor[(13, 8, 9), uint8] {
    %1041 = cast(%var_2647, dtype="uint8") /* ty=Tensor[(13, 8, 9), uint8] */;
    %1042 = shape_of(%var_2646, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1043 = cast(%var_2646, dtype="uint8") /* ty=Tensor[(13, 8, 9), uint8] */;
    %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_or(%1043, %1044) /* ty=Tensor[(13, 8, 9), uint8] */
  };
  %1045(%var_2665, %var_2666) /* ty=Tensor[(13, 8, 9), uint8] */
}

def @func_3270() -> (Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) {
  %1049 = fn () -> (Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) {
    %1046 = @func_3123() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(12, 8, 9), float32]) */;
    %1047 = %1046.0;
    %1048 = @func_2939() /* ty=Tensor[(14, 4, 7), float32] */;
    (%1047, %1048)
  };
  %1049() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(14, 4, 7), float32]) */
}

def @func_7130(%var_7127: int64, %var_7128: Tensor[(13, 13, 1), int64], %var_7129: Tensor[(30), int32]) -> (Tensor[(13, 13, 1), int64], Tensor[(7, 12, 14), float32], Tensor[(30), int32], Tensor[(1176, 1), float64], Tensor[(13, 13, 1), float32]) {
  %1063 = fn (%var_7097: int64, %var_7098: Tensor[(13, 13, 1), int64], %var_7119: Tensor[(30), int32]) -> (Tensor[(13, 13, 1), int64], Tensor[(7, 12, 14), float32], Tensor[(30), int32], Tensor[(1176, 1), float64], Tensor[(13, 13, 1), float32]) {
    %1050 = cast(%var_7097, dtype="int64") /* ty=int64 */;
    %1051 = cast(%var_7098, dtype="int64") /* ty=Tensor[(13, 13, 1), int64] */;
    %1052 = cast(%var_7119, dtype="int32") /* ty=Tensor[(30), int32] */;
    %1053 = cast(%var_7119, dtype="int32") /* ty=Tensor[(30), int32] */;
    %1054 = cast(meta[relay.Constant][62] /* ty=Tensor[(1176, 1), float64] */, dtype="float64") /* ty=Tensor[(1176, 1), float64] */;
    %1055 = reshape(%1052, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
    %1056 = reshape(%1053, newshape=[5, 3, 2]) /* ty=Tensor[(5, 3, 2), int32] */;
    %1057 = reshape(%1054, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %1058 = @func_713(%1055, %1056, %1057) /* ty=(Tensor[(5, 3, 2), int32], Tensor[(12, 8, 9), float64], float64, Tensor[(7, 12, 14), float32], Tensor[(1176), bool]) */;
    %1059 = cast(%var_7098, dtype="float32") /* ty=Tensor[(13, 13, 1), float32] */;
    %1060 = maximum(%1050, %1051) /* ty=Tensor[(13, 13, 1), int64] */;
    %1061 = %1058.3;
    %1062 = acosh(%1059) /* ty=Tensor[(13, 13, 1), float32] */;
    (%1060, %1061, %var_7119, meta[relay.Constant][62] /* ty=Tensor[(1176, 1), float64] */, %1062)
  };
  %1063(%var_7127, %var_7128, %var_7129) /* ty=(Tensor[(13, 13, 1), int64], Tensor[(7, 12, 14), float32], Tensor[(30), int32], Tensor[(1176, 1), float64], Tensor[(13, 13, 1), float32]) */
}

def @func_9323() -> (Tensor[(14, 4, 7), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8], Tensor[(15, 7, 13), float32]) {
  %1072 = fn () -> (Tensor[(14, 4, 7), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8], Tensor[(15, 7, 13), float32]) {
    %1064 = @func_4908() /* ty=(Tensor[(14, 4, 7), float32],) */;
    %1065 = cast(meta[relay.Constant][63] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
    %1066 = reshape(%1065, newshape=[936]) /* ty=Tensor[(936), uint8] */;
    %1067 = @func_7602(%1066) /* ty=(Tensor[(50), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8]) */;
    %1068 = @func_4097() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) */;
    %1069 = %1064.0;
    %1070 = %1067.1;
    %1071 = %1068.2;
    (%1069, %1070, meta[relay.Constant][63] /* ty=Tensor[(936), uint8] */, %1071)
  };
  %1072() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(13, 8, 9), uint8], Tensor[(936), uint8], Tensor[(15, 7, 13), float32]) */
}

def @func_7721() -> (Tensor[(60), float64], Tensor[(15, 7, 13), float32], Tensor[(52), float64], Tensor[(13, 4, 1), float32], Tensor[(15, 7, 13), bool]) {
  %1087 = fn () -> (Tensor[(60), float64], Tensor[(15, 7, 13), float32], Tensor[(52), float64], Tensor[(13, 4, 1), float32], Tensor[(15, 7, 13), bool]) {
    %1073 = @func_7155() /* ty=(Tensor[(60), float64],) */;
    %1074 = @func_4097() /* ty=(Tensor[(14, 4, 7), bool], Tensor[(1365, 1), float64], Tensor[(15, 7, 13), float32]) */;
    %1075 = cast(meta[relay.Constant][64] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
    %1076 = %1074.2;
    %1077 = cast(%1076, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
    %1078 = reshape(%1075, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), float64] */;
    %1079 = reshape(%1077, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
    %1080 = @func_1714(%1078, %1079) /* ty=(Tensor[(13, 4, ?), int8], Tensor[(15, 7, 13), bool], Tensor[(1365), float64], Tensor[(13, 4, 1), float64]) */;
    %1081 = %1080.3;
    %1082 = cast(%1081, dtype="float32") /* ty=Tensor[(13, 4, 1), float32] */;
    %1083 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
    %1084 = %1073.0;
    %1085 = cos(%1082) /* ty=Tensor[(13, 4, 1), float32] */;
    %1086 = %1083.1;
    (%1084, %1076, meta[relay.Constant][64] /* ty=Tensor[(52), float64] */, %1085, %1086)
  };
  %1087() /* ty=(Tensor[(60), float64], Tensor[(15, 7, 13), float32], Tensor[(52), float64], Tensor[(13, 4, 1), float32], Tensor[(15, 7, 13), bool]) */
}

def @func_5568() -> Tensor[(14, 4, 7), bool] {
  @func_3880() /* ty=Tensor[(14, 4, 7), bool] */
}

def @func_9247() -> Tensor[(15, 7, 13), bool] {
  %1089 = fn () -> Tensor[(15, 7, 13), bool] {
    %1088 = @func_2460() /* ty=(Tensor[(14, 4, 7), float32], Tensor[(15, 7, 13), bool], Tensor[(1365), float64]) */;
    %1088.1
  };
  %1089() /* ty=Tensor[(15, 7, 13), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 1, found 2

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_13720() -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
  %0 = @func_12178() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1 = @func_10852() /* ty=Tensor[(5, 15, 9), float32] */;
  %2 = %0.1;
  (%1, %2)
}

def @func_11660() -> (Tensor[(13, 15, 8), bool],) {
  %3 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %4 = %3.0;
  (%4,)
}

def @func_15313() -> (Tensor[(13, 15, 8), bool],) {
  %5 = @func_7420() /* ty=Tensor[(13, 15, 8), bool] */;
  (%5,)
}

def @func_14792() -> Tensor[(13, 15, 8), float32] {
  %6 = @func_9679() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) */;
  %6.1
}

def @func_7688() -> Tensor[(5, 15, 9), float64] {
  %7 = @func_6308() /* ty=(Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) */;
  %7.1
}

def @func_18563() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %8 = @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %9 = %8.0;
  %10 = @func_14863() /* ty=Tensor[(13, 15, 8), bool] */;
  (%9, %10)
}

def @func_6308() -> (Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) {
  %11 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %12 = cast(%11, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
  %13 = log(%12) /* ty=Tensor[(13, 15, 8), float32] */;
  %14 = cast(%13, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %16 = reshape(%15, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %17 = @func_201(%16) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %18 = cosh(%14) /* ty=Tensor[(13, 15, 8), float64] */;
  %19 = %17.0;
  (%18, %19, meta[relay.Constant][0] /* ty=Tensor[(675), float64] */)
}

def @func_19918() -> (Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(260), bool]) {
  %20 = @func_12804() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %22 = reshape(%21, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %23 = @func_13525(%22) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(675), float64], Tensor[(36, 1), float32], Tensor[(260), bool], Tensor[(260), bool], Tensor[(56), int8]) */;
  %24 = %20.0;
  %25 = %23.4;
  (%24, %25, meta[relay.Constant][1] /* ty=Tensor[(260), bool] */)
}

def @func_17231() -> Tensor[(13, 15, 8), bool] {
  @func_10206() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_17768() -> (Tensor[(13, 15, 8), bool], Tensor[(792), uint32]) {
  %26 = @func_11442() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %27 = @func_9725() /* ty=(Tensor[(792), uint32], Tensor[(13, 15, 8), bool]) */;
  %28 = %26.0;
  %29 = %27.0;
  (%28, %29)
}

def @func_19331() -> (Tensor[(13, 15, 8), float64], Tensor[(2, 5, 12), float32], Tensor[(1, 120), float32], Tensor[(13, 15, 8), bool]) {
  %30 = @func_7412() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 120), float32] */, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
  %32 = reshape(%31, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %33 = %30.0;
  %34 = @func_2630(%32) /* ty=Tensor[(2, 5, 12), float32] */;
  %35 = @func_11311() /* ty=Tensor[(13, 15, 8), bool] */;
  (%33, %34, meta[relay.Constant][2] /* ty=Tensor[(1, 120), float32] */, %35)
}

def @func_13194(%var_13171: Tensor[(792, 9), float64]) -> (Tensor[(792, 9), bool], Tensor[(792, 9), bool]) {
  %36 = @func_10344() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) */;
  %37 = %36.1;
  %38 = cast(%37, dtype="bool") /* ty=Tensor[(792, 1), bool] */;
  %39 = cast(%var_13171, dtype="bool") /* ty=Tensor[(792, 9), bool] */;
  %40 = cast(%37, dtype="bool") /* ty=Tensor[(792, 1), bool] */;
  %41 = cast(%var_13171, dtype="bool") /* ty=Tensor[(792, 9), bool] */;
  %42 = logical_or(%38, %39) /* ty=Tensor[(792, 9), bool] */;
  %43 = less(%40, %41) /* ty=Tensor[(792, 9), bool] */;
  (%42, %43)
}

def @func_11969() -> (Tensor[(13, 15, 8), bool],) {
  %44 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  (%44,)
}

def @func_19543() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32]) {
  %45 = cast(meta[relay.Constant][3] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %46 = reshape(%45, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %47 = @func_7338(%46) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32]) */;
  %48 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %49 = %47.0;
  (%48, %49, meta[relay.Constant][3] /* ty=Tensor[(792), uint32] */)
}

def @func_11852() -> (Tensor[(13, 15, 8), bool], Tensor[(675), float32]) {
  %50 = @func_10827() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %51 = @func_8833() /* ty=Tensor[(675), float64] */;
  %52 = cast(%51, dtype="float32") /* ty=Tensor[(675), float32] */;
  %53 = %50.0;
  %54 = log(%52) /* ty=Tensor[(675), float32] */;
  (%53, %54)
}

def @func_15511() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %55 = @func_11559() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %56 = %55.0;
  %57 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  (%56, %57)
}

def @func_15198() -> (Tensor[(2, 5, 12), float32],) {
  %58 = @func_6873() /* ty=(Tensor[(2, 5, 12), float32],) */;
  %59 = %58.0;
  (%59,)
}

def @func_14115() -> Tensor[(13, 15, 8), uint64] {
  %60 = @func_9643() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %60.0
}

def @func_10748() -> Tensor[(13, 15, 8), bool] {
  %61 = @func_10185() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %61.1
}

def @func_10185() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %62 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %63 = %62.1;
  %64 = @func_6785() /* ty=Tensor[(13, 15, 8), bool] */;
  (%63, %64)
}

def @func_12287() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(36, 22), uint32], Tensor[(13, 15, 8), float64]) {
  %65 = @func_10388() /* ty=(Tensor[(13, 15, 8), int64],) */;
  %66 = cast(meta[relay.Constant][4] /* ty=Tensor[(36, 22), uint32] */, dtype="uint32") /* ty=Tensor[(36, 22), uint32] */;
  %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(36, 22), uint32] */, dtype="uint32") /* ty=Tensor[(36, 22), uint32] */;
  %68 = reshape(%66, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %69 = reshape(%67, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %70 = @func_10423() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %71 = %65.0;
  %72 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
  %73 = @func_4152(%68, %69) /* ty=Tensor[(6, 12, 11), uint32] */;
  %74 = %70.0;
  (%71, %72, %73, meta[relay.Constant][4] /* ty=Tensor[(36, 22), uint32] */, %74)
}

def @func_16400() -> (Tensor[(5, 15, 9), float32],) {
  %75 = @func_15377() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %76 = %75.0;
  %77 = cast(%76, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %78 = log(%77) /* ty=Tensor[(5, 15, 9), float32] */;
  (%78,)
}

def @func_17621() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %79 = @func_12178() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %80 = @func_11559() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %81 = %79.1;
  %82 = %80.1;
  (%81, %82)
}

def @func_14863() -> Tensor[(13, 15, 8), bool] {
  @func_10625() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_12596() -> (Tensor[(792, 1), float64],) {
  %83 = @func_10344() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) */;
  %84 = %83.1;
  (%84,)
}

def @func_13421() -> (Tensor[(13, 15, 8), bool], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %85 = @func_11442() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %86 = @func_11262() /* ty=(Tensor[(5, 15, 9), float64],) */;
  %87 = @func_11298() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %88 = @func_6234() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %89 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %90 = @func_11298() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %91 = %85.0;
  %92 = @func_8833() /* ty=Tensor[(675), float64] */;
  %93 = %86.0;
  %94 = %87.0;
  %95 = %88.0;
  %96 = %89.1;
  %97 = %90.0;
  (%91, %92, %93, %94, %95, %96, %97)
}

def @func_8833() -> Tensor[(675), float64] {
  %98 = @func_6308() /* ty=(Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) */;
  %98.2
}

def @func_13842() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) {
  %99 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %100 = @func_9888() /* ty=(Tensor[(13, 15, 8), float32],) */;
  %101 = %99.0;
  %102 = %100.0;
  (%101, %102)
}

def @func_11461() -> Tensor[(13, 15, 8), int64] {
  @func_6187() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_20151() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
  %103 = @func_14635() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) */;
  %104 = @func_18309() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %105 = %103.0;
  %106 = %104.0;
  (%105, %106)
}

def @func_14311(%var_14296: Tensor[(2, 396), uint32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(6, 12, 11), uint32], Tensor[(2, 396), uint32]) {
  %107 = @func_13459() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %108 = cast(%var_14296, dtype="uint32") /* ty=Tensor[(2, 396), uint32] */;
  %109 = cast(%var_14296, dtype="uint32") /* ty=Tensor[(2, 396), uint32] */;
  %110 = reshape(%108, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %111 = reshape(%109, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %112 = %107.1;
  %113 = @func_14006() /* ty=Tensor[(13, 15, 8), uint64] */;
  %114 = @func_4152(%110, %111) /* ty=Tensor[(6, 12, 11), uint32] */;
  (%112, %113, %114, %var_14296)
}

def @func_13578() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 132), uint32]) {
  %115 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 132), uint32] */, dtype="uint32") /* ty=Tensor[(6, 132), uint32] */;
  %116 = reshape(%115, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %117 = @func_7338(%116) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32]) */;
  %118 = @func_12047() /* ty=Tensor[(13, 15, 8), int64] */;
  %119 = @func_11461() /* ty=Tensor[(13, 15, 8), int64] */;
  %120 = %117.1;
  (%118, %119, %120, meta[relay.Constant][5] /* ty=Tensor[(6, 132), uint32] */)
}

def @func_14223() -> (Tensor[(13, 15, 8), bool],) {
  %121 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %122 = %121.1;
  (%122,)
}

def @func_15480() -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) {
  %123 = @func_9220() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %124 = cast(meta[relay.Constant][6] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %125 = reshape(%124, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %126 = @func_201(%125) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %127 = @func_13459() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %129 = %123.0;
  %130 = %126.0;
  %131 = %127.1;
  %132 = sin(%128) /* ty=Tensor[(675), float64] */;
  (%129, %130, %131, %132)
}

def @func_19384() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %133 = @func_6234() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %134 = @func_15598() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %135 = %133.0;
  %136 = @func_14863() /* ty=Tensor[(13, 15, 8), bool] */;
  %137 = %134.0;
  (%135, %136, %137)
}

def @func_20966() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %138 = @func_16622() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 70), bool]) */;
  %139 = @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %140 = %138.0;
  %141 = %139.0;
  (%140, %141)
}

def @func_10344() -> (Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) {
  %142 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %143 = %142.1;
  %144 = cast(%143, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %145 = reshape(%144, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), bool] */;
  %146 = @func_6150(%145) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */;
  %147 = %146.2;
  %148 = cast(%147, dtype="float64") /* ty=Tensor[(792, 1), float64] */;
  %149 = log2(%148) /* ty=Tensor[(792, 1), float64] */;
  (%143, %149)
}

def @func_14161() -> Tensor[(5, 15, 9), float32] {
  %150 = @func_13720() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %150.0
}

def @func_13156() -> Tensor[(13, 15, 8), int64] {
  @func_12716() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_11106(%var_11085: Tensor[(13, 5, 1), int64], %var_11086: Tensor[(13, 5, 5), int64]) -> (Tensor[(13, 5, 5), float64],) {
  %151 = cast(%var_11085, dtype="int64") /* ty=Tensor[(13, 5, 1), int64] */;
  %152 = cast(%var_11086, dtype="int64") /* ty=Tensor[(13, 5, 5), int64] */;
  %153 = right_shift(%151, %152) /* ty=Tensor[(13, 5, 5), int64] */;
  %154 = cast(%153, dtype="float64") /* ty=Tensor[(13, 5, 5), float64] */;
  %155 = atanh(%154) /* ty=Tensor[(13, 5, 5), float64] */;
  (%155,)
}

def @func_20582() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(75, 9), float64], Tensor[(675), float64]) {
  %156 = @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %157 = cast(meta[relay.Constant][7] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %158 = reshape(%157, newshape=[75, 9]) /* ty=Tensor[(75, 9), float64] */;
  %159 = @func_10925(%158) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(56), int8], bool, Tensor[(260), bool], Tensor[(75, 9), float64], Tensor[(396, 2), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %160 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  %161 = %156.0;
  %162 = %159.5;
  (%160, %161, %162, meta[relay.Constant][7] /* ty=Tensor[(675), float64] */)
}

def @func_6873() -> (Tensor[(2, 5, 12), float32],) {
  %163 = @func_6646() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %164 = %163.1;
  (%164,)
}

def @func_11817() -> Tensor[(13, 15, 8), bool] {
  @func_11311() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_14104() -> (Tensor[(13, 15, 8), bool],) {
  %165 = @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %166 = %165.0;
  (%166,)
}

def @func_12438(%var_12381: bool) -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), int64], Tensor[(270, 6), float32], Tensor[(36), float32], bool, Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(1287), float64], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32]) {
  %167 = cast(meta[relay.Constant][8] /* ty=Tensor[(270, 6), float32] */, dtype="float32") /* ty=Tensor[(270, 6), float32] */;
  %168 = cast(meta[relay.Constant][8] /* ty=Tensor[(270, 6), float32] */, dtype="int64") /* ty=Tensor[(270, 6), int64] */;
  %169 = cast(meta[relay.Constant][9] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %170 = cast(%var_12381, dtype="bool") /* ty=bool */;
  %171 = cast(meta[relay.Constant][10] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %172 = reshape(%167, newshape=[18, 90]) /* ty=Tensor[(18, 90), float32] */;
  %173 = reshape(%168, newshape=[18, 90]) /* ty=Tensor[(18, 90), int64] */;
  %174 = reshape(%169, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %175 = reshape(%170, newshape=[]) /* ty=bool */;
  %176 = reshape(%171, newshape=[28, 2]) /* ty=Tensor[(28, 2), int8] */;
  %177 = @func_8702(%172, %173, %174, %175, %176) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 90), float32], Tensor[(675), float64], Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool], Tensor[(60, 2), float32], bool, Tensor[(792), uint32], Tensor[(28, 2), int8]) */;
  %178 = @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %179 = cast(meta[relay.Constant][11] /* ty=Tensor[(1287), float64] */, dtype="float64") /* ty=Tensor[(1287), float64] */;
  %180 = cast(%var_12381, dtype="bool") /* ty=bool */;
  %181 = cast(meta[relay.Constant][10] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %182 = cast(meta[relay.Constant][9] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %183 = reshape(%179, newshape=[9, 11, 13]) /* ty=Tensor[(9, 11, 13), float64] */;
  %184 = reshape(%180, newshape=[]) /* ty=bool */;
  %185 = reshape(%181, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %186 = reshape(%182, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %187 = @func_9874(%183, %184, %185, %186) /* ty=(Tensor[(9, 11, 13), float64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(6, 12, 11), uint32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(56), int8], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(1, 1260), float32], Tensor[(1, 36), float32], Tensor[(240), bool]) */;
  %188 = cast(%var_12381, dtype="float32") /* ty=float32 */;
  %189 = cast(meta[relay.Constant][9] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %190 = @func_9705() /* ty=Tensor[(5, 15, 9), float32] */;
  %191 = cast(%190, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %192 = reshape(%188, newshape=[]) /* ty=float32 */;
  %193 = reshape(%189, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
  %194 = reshape(%191, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %195 = @func_3193(%192, %193, %194) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
  %196 = %177.0;
  %197 = %178.0;
  %198 = %187.8;
  %199 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
  %200 = %195.4;
  (%190, %196, meta[relay.Constant][8] /* ty=Tensor[(270, 6), float32] */, meta[relay.Constant][9] /* ty=Tensor[(36), float32] */, %var_12381, meta[relay.Constant][10] /* ty=Tensor[(56), int8] */, %197, %198, meta[relay.Constant][11] /* ty=Tensor[(1287), float64] */, %199, %200)
}

def @func_15257() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64], bool, Tensor[(1287), float64], bool, Tensor[(14, 4), int8], Tensor[(13, 15, 8), bool]) {
  %201 = @func_11660() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %202 = @func_10388() /* ty=(Tensor[(13, 15, 8), int64],) */;
  %203 = cast(meta[relay.Constant][12] /* ty=Tensor[(1287), float64] */, dtype="float64") /* ty=Tensor[(1287), float64] */;
  %204 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %205 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 4), int8] */, dtype="int8") /* ty=Tensor[(14, 4), int8] */;
  %206 = reshape(%203, newshape=[11, 117]) /* ty=Tensor[(11, 117), float64] */;
  %207 = reshape(%204, newshape=[]) /* ty=bool */;
  %208 = reshape(%205, newshape=[2, 28]) /* ty=Tensor[(2, 28), int8] */;
  %209 = @func_14389(%206, %207, %208) /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(1, 1260), float32], bool, Tensor[(2, 28), int8], Tensor[(36), float32], Tensor[(11, 117), float64]) */;
  %210 = @func_11559() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %211 = %201.0;
  %212 = %202.0;
  %213 = %209.2;
  %214 = %210.1;
  (%211, %212, %213, meta[relay.Constant][12] /* ty=Tensor[(1287), float64] */, False /* ty=bool */, meta[relay.Constant][13] /* ty=Tensor[(14, 4), int8] */, %214)
}

def @func_19754(%var_19732: Tensor[(120), float32], %var_19733: bool, %var_19735: Tensor[(792), uint32], %var_19736: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(120), float32], bool, Tensor[(675), float64], Tensor[(792), uint32], Tensor[(56), int8]) {
  %215 = @func_9643() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %216 = cast(%var_19732, dtype="float32") /* ty=Tensor[(120), float32] */;
  %217 = cast(%var_19733, dtype="bool") /* ty=bool */;
  %218 = cast(meta[relay.Constant][14] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %219 = cast(%var_19735, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %220 = cast(%var_19736, dtype="int8") /* ty=Tensor[(56), int8] */;
  %221 = reshape(%216, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %222 = reshape(%217, newshape=[]) /* ty=bool */;
  %223 = reshape(%218, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %224 = reshape(%219, newshape=[12, 66]) /* ty=Tensor[(12, 66), uint32] */;
  %225 = reshape(%220, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %226 = @func_8148(%221, %222, %223, %224, %225) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(260), bool], Tensor[(12, 66), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) */;
  %227 = %215.0;
  %228 = %226.1;
  (%227, %228, %var_19732, %var_19733, meta[relay.Constant][14] /* ty=Tensor[(675), float64] */, %var_19735, %var_19736)
}

def @func_13660(%var_13638: Tensor[(8, 13, 6), float32], %var_13653: Tensor[(675), float64]) -> (Tensor[(8, 13, 6), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(13, 15, 8), int64]) {
  %229 = cast(%var_13638, dtype="float32") /* ty=Tensor[(8, 13, 6), float32] */;
  %230 = cast(%var_13653, dtype="float64") /* ty=Tensor[(675), float64] */;
  %231 = reshape(%230, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %232 = @func_2388(%231) /* ty=(Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64]) */;
  %233 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %234 = erf(%229) /* ty=Tensor[(8, 13, 6), float32] */;
  %235 = %232.3;
  %236 = %233.0;
  (%234, %235, %var_13653, %236)
}

def @func_21081() -> (Tensor[(13, 15, 8), bool],) {
  %237 = @func_18471() /* ty=Tensor[(13, 15, 8), bool] */;
  (%237,)
}

def @func_9025() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %238 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %239 = @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %240 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %241 = %238.3;
  %242 = %239.0;
  %243 = @func_7657() /* ty=Tensor[(13, 15, 8), bool] */;
  %244 = %240.0;
  %245 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %246 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  (%241, %242, %243, %244, %245, %246)
}

def @func_9582() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %247 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %248 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %249 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %250 = %247.1;
  %251 = %248.0;
  (%249, %250, %251)
}

def @func_5121(%var_5078: bool, %var_5079: Tensor[(10, 13, 2), bool], %var_5101: Tensor[(675), float64], %var_5115: Tensor[(792), uint32], %var_5118: Tensor[(56), int8]) -> (Tensor[(10, 13, 2), bool], Tensor[(675), float64], Tensor[(36), float32], Tensor[(675), float64], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) {
  %252 = cast(%var_5078, dtype="bool") /* ty=bool */;
  %253 = cast(%var_5079, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
  %254 = logical_and(%252, %253) /* ty=Tensor[(10, 13, 2), bool] */;
  %255 = cast(%254, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
  %256 = shape_of(%var_5079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%var_5079, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %259 = cast(%var_5078, dtype="float32") /* ty=float32 */;
  %260 = cast(meta[relay.Constant][15] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %261 = cast(%var_5101, dtype="float64") /* ty=Tensor[(675), float64] */;
  %262 = reshape(%259, newshape=[]) /* ty=float32 */;
  %263 = reshape(%260, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
  %264 = reshape(%261, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %265 = @func_3193(%262, %263, %264) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
  %266 = cast(%var_5115, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %267 = cast(%var_5115, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %268 = reshape(%266, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %269 = reshape(%267, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %270 = cast(%var_5118, dtype="int8") /* ty=Tensor[(56), int8] */;
  %271 = reshape(%270, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), int8] */;
  %272 = equal(%257, %258) /* ty=Tensor[(10, 13, 2), bool] */;
  %273 = %265.2;
  %274 = @func_4152(%268, %269) /* ty=Tensor[(6, 12, 11), uint32] */;
  %275 = @func_3518(%271) /* ty=Tensor[(2, 4, 7), int8] */;
  (%272, %273, meta[relay.Constant][15] /* ty=Tensor[(36), float32] */, %var_5101, %274, %var_5115, %275, %var_5118)
}

def @func_11298() -> (Tensor[(13, 15, 8), bool],) {
  %276 = @func_9582() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %277 = %276.2;
  (%277,)
}

def @func_12716() -> Tensor[(13, 15, 8), int64] {
  @func_12047() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_10625() -> Tensor[(13, 15, 8), bool] {
  @func_5962() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_16359() -> (Tensor[(13, 15, 8), bool],) {
  %278 = @func_12856() /* ty=Tensor[(13, 15, 8), bool] */;
  (%278,)
}

def @func_6449() -> (Tensor[(13, 15, 8), bool],) {
  %279 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
  (%279,)
}

def @func_18883() -> (Tensor[(13, 15, 8), bool],) {
  %280 = @func_14104() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %281 = %280.0;
  (%281,)
}

def @func_18941() -> (Tensor[(13, 15, 8), bool],) {
  %282 = @func_9025() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %283 = %282.5;
  (%283,)
}

def @func_8148(%var_8062: Tensor[(2, 5, 12), float32], %var_8103: bool, %var_8105: Tensor[(675), float64], %var_8106: Tensor[(12, 66), uint32], %var_8107: Tensor[(56), int8]) -> (Tensor[(2, 5, 12), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(260), bool], Tensor[(12, 66), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) {
  %284 = @func_6873() /* ty=(Tensor[(2, 5, 12), float32],) */;
  %285 = %284.0;
  %286 = cast(%var_8062, dtype="float64") /* ty=Tensor[(2, 5, 12), float64] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%285, dtype="float64") /* ty=Tensor[(2, 5, 12), float64] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %290 = @func_6754() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */;
  %291 = cast(%var_8103, dtype="bool") /* ty=bool */;
  %292 = cast(meta[relay.Constant][16] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %293 = cast(%var_8105, dtype="float64") /* ty=Tensor[(675), float64] */;
  %294 = cast(%var_8106, dtype="uint32") /* ty=Tensor[(12, 66), uint32] */;
  %295 = cast(%var_8107, dtype="int8") /* ty=Tensor[(56), int8] */;
  %296 = reshape(%291, newshape=[]) /* ty=bool */;
  %297 = reshape(%292, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), bool] */;
  %298 = reshape(%293, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %299 = reshape(%294, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %300 = reshape(%295, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %301 = @func_5121(%296, %297, %298, %299, %300) /* ty=(Tensor[(10, 13, 2), bool], Tensor[(675), float64], Tensor[(36), float32], Tensor[(675), float64], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
  %302 = cast(%var_8105, dtype="float64") /* ty=Tensor[(675), float64] */;
  %303 = cast(%var_8103, dtype="float64") /* ty=float64 */;
  %304 = add(%288, %289) /* ty=Tensor[(2, 5, 12), float64] */;
  %305 = %290.0;
  %306 = %301.5;
  %307 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %308 = floor_divide(%302, %303) /* ty=Tensor[(675), float64] */;
  (%304, %305, %306, meta[relay.Constant][16] /* ty=Tensor[(260), bool] */, %var_8106, %var_8107, %307, %308)
}

def @func_17509(%var_17497: Tensor[(13, 15, 8), bool]) -> (Tensor[(13, 15, 8), uint8],) {
  %309 = @func_16414() /* ty=Tensor[(13, 15, 8), bool] */;
  %310 = cast(%var_17497, dtype="uint8") /* ty=Tensor[(13, 15, 8), uint8] */;
  %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%309, dtype="uint8") /* ty=Tensor[(13, 15, 8), uint8] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %314 = right_shift(%312, %313) /* ty=Tensor[(13, 15, 8), uint8] */;
  (%314,)
}

def @func_15377() -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
  %315 = @func_9705() /* ty=Tensor[(5, 15, 9), float32] */;
  %316 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%315, %316)
}

def @func_19213(%var_19158: Tensor[(3, 4, 1), float32], %var_19182: Tensor[(3, 4, 240), float32], %var_19201: Tensor[(3, 4, 240), float32]) -> (Tensor[(1, 8, 1), int16], Tensor[(8), float64], Tensor[(3, 4, 240), bool]) {
  %317 = cast(meta[relay.Constant][17] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %318 = reshape(%317, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float64] */;
  %319 = @func_13286(%318) /* ty=(Tensor[(1, 8, 1), int16], Tensor[(13, 15, 8), uint64]) */;
  %320 = cast(%var_19158, dtype="float32") /* ty=Tensor[(3, 4, 1), float32] */;
  %321 = sqrt(%320) /* ty=Tensor[(3, 4, 1), float32] */;
  %322 = @func_15747() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(1260), float32], Tensor[(36), float32], Tensor[(240), bool], Tensor[(13, 15, 8), bool]) */;
  %323 = %322.5;
  %324 = cast(%321, dtype="float32") /* ty=Tensor[(3, 4, 1), float32] */;
  %325 = cast(%323, dtype="float32") /* ty=Tensor[(240), float32] */;
  %326 = floor_mod(%324, %325) /* ty=Tensor[(3, 4, 240), float32] */;
  %327 = cast(%var_19182, dtype="uint64") /* ty=Tensor[(3, 4, 240), uint64] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%326, dtype="uint64") /* ty=Tensor[(3, 4, 240), uint64] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %331 = right_shift(%329, %330) /* ty=Tensor[(3, 4, 240), uint64] */;
  %332 = cast(%331, dtype="float32") /* ty=Tensor[(3, 4, 240), float32] */;
  %333 = cos(%332) /* ty=Tensor[(3, 4, 240), float32] */;
  %334 = cast(%var_19201, dtype="bool") /* ty=Tensor[(3, 4, 240), bool] */;
  %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%333, dtype="bool") /* ty=Tensor[(3, 4, 240), bool] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %338 = %319.0;
  %339 = equal(%336, %337) /* ty=Tensor[(3, 4, 240), bool] */;
  (%338, meta[relay.Constant][17] /* ty=Tensor[(8), float64] */, %339)
}

def @func_10106(%var_10102: Tensor[(18, 70), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 2), int64], Tensor[(18, 70), float32], Tensor[(36), float32], Tensor[(240), bool]) {
  %340 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %341 = cast(%var_10102, dtype="float32") /* ty=Tensor[(18, 70), float32] */;
  %342 = cast(meta[relay.Constant][18] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %343 = cast(meta[relay.Constant][19] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %344 = reshape(%341, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float32] */;
  %345 = reshape(%342, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %346 = reshape(%343, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %347 = @func_8476(%344, %345, %346) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) */;
  %348 = @func_6785() /* ty=Tensor[(13, 15, 8), bool] */;
  %349 = %340.1;
  %350 = %347.2;
  (%348, %349, %350, %var_10102, meta[relay.Constant][18] /* ty=Tensor[(36), float32] */, meta[relay.Constant][19] /* ty=Tensor[(240), bool] */)
}

def @func_21250() -> Tensor[(13, 15, 8), bool] {
  @func_11311() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_10852() -> Tensor[(5, 15, 9), float32] {
  @func_9705() /* ty=Tensor[(5, 15, 9), float32] */
}

def @func_12178() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %351 = @func_10344() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) */;
  %352 = @func_9526() /* ty=Tensor[(13, 15, 8), int64] */;
  %353 = %351.0;
  (%352, %353)
}

def @func_14006() -> Tensor[(13, 15, 8), uint64] {
  @func_11717() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_18917(%var_18902: Tensor[(12, 2, 2), float32], %var_18903: Tensor[(12, 2, 2), float32]) -> Tensor[(12, 2, 2), float32] {
  %354 = cast(%var_18903, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %355 = shape_of(%var_18902, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%var_18902, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%356, %357) /* ty=Tensor[(12, 2, 2), float32] */
}

def @func_7031() -> Tensor[(13, 15, 8), bool] {
  %358 = @func_6754() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */;
  %358.0
}

def @func_19991() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(396, 2), uint32]) {
  %359 = @func_18706() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %360 = cast(meta[relay.Constant][20] /* ty=Tensor[(396, 2), uint32] */, dtype="uint32") /* ty=Tensor[(396, 2), uint32] */;
  %361 = reshape(%360, newshape=[2, 396]) /* ty=Tensor[(2, 396), uint32] */;
  %362 = @func_14311(%361) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(6, 12, 11), uint32], Tensor[(2, 396), uint32]) */;
  %363 = %359.1;
  %364 = %362.0;
  (%363, %364, meta[relay.Constant][20] /* ty=Tensor[(396, 2), uint32] */)
}

def @func_8476(%var_8422: Tensor[(1260, 1), float32], %var_8430: Tensor[(36), float32], %var_8459: Tensor[(240), bool]) -> (Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) {
  %365 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %366 = cast(%var_8430, dtype="float32") /* ty=Tensor[(36), float32] */;
  %367 = reshape(%366, newshape=[18, 2]) /* ty=Tensor[(18, 2), float32] */;
  %368 = cast(%var_8422, dtype="float32") /* ty=Tensor[(1260, 1), float32] */;
  %369 = reshape(%368, newshape=[10, 14, 9]) /* ty=Tensor[(10, 14, 9), float32] */;
  %370 = @func_1891(%369) /* ty=(Tensor[(10, 14, 9), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64]) */;
  %371 = %370.3;
  %372 = cast(%371, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %373 = cast(-6.86573f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %374 = @func_7231(%367) /* ty=Tensor[(18, 2), int64] */;
  %375 = cast(%374, dtype="float32") /* ty=Tensor[(18, 2), float32] */;
  %376 = cast(%371, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %377 = reshape(%373, newshape=[]) /* ty=float32 */;
  %378 = reshape(%375, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
  %379 = reshape(%376, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %380 = @func_3193(%377, %378, %379) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
  %381 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %382 = @func_8286() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %383 = %382.0;
  %384 = cast(%383, dtype="int64") /* ty=Tensor[(13, 15, 8), int64] */;
  %385 = reshape(%384, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), int64] */;
  %386 = @func_7195(%385) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) */;
  %387 = cast(%var_8459, dtype="bool") /* ty=Tensor[(240), bool] */;
  %388 = cast(%371, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %389 = cast(-6.86573f /* ty=float32 */, dtype="uint8") /* ty=uint8 */;
  %390 = cast(meta[relay.Constant][21] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %391 = reshape(%387, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), bool] */;
  %392 = reshape(%388, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %393 = reshape(%389, newshape=[]) /* ty=uint8 */;
  %394 = reshape(%390, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %395 = @func_5241(%391, %392, %393, %394) /* ty=(Tensor[(3, 5, 16), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(3, 5, 16), float32], Tensor[(15, 1, 2), uint8], uint8, Tensor[(30), uint8], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
  %396 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %397 = %365.0;
  %398 = log2(%372) /* ty=Tensor[(5, 15, 9), float64] */;
  %399 = %380.1;
  %400 = %381.0;
  %401 = %386.1;
  %402 = %395.7;
  %403 = %396.0;
  (%397, %var_8422, %374, %var_8430, %398, %399, -6.86573f /* ty=float32 */, %400, %383, %401, %402, %var_8459, meta[relay.Constant][21] /* ty=Tensor[(56), int8] */, %403)
}

def @func_21817(%var_21793: Tensor[(16, 16, 5), uint32], %var_21794: Tensor[(16, 16, 5), uint32], %var_21806: Tensor[(1260), float32]) -> (Tensor[(16, 16, 5), uint32], Tensor[(13, 15, 8), bool], Tensor[(1260), float32], Tensor[(260), bool]) {
  %404 = cast(%var_21794, dtype="uint32") /* ty=Tensor[(16, 16, 5), uint32] */;
  %405 = shape_of(%var_21793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%var_21793, dtype="uint32") /* ty=Tensor[(16, 16, 5), uint32] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %408 = cast(%var_21806, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %409 = reshape(%408, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %410 = @func_19304(%409) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) */;
  %411 = @func_19918() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(260), bool]) */;
  %412 = add(%406, %407) /* ty=Tensor[(16, 16, 5), uint32] */;
  %413 = %410.1;
  %414 = %411.2;
  (%412, %413, %var_21806, %414)
}

def @func_18309() -> (Tensor[(13, 15, 8), bool],) {
  %415 = @func_16414() /* ty=Tensor[(13, 15, 8), bool] */;
  (%415,)
}

def @func_18143() -> (Tensor[(13, 15, 8), uint64], Tensor[(2, 5, 12), float32], Tensor[(260), bool], Tensor[(56), int8]) {
  %416 = cast(meta[relay.Constant][22] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %417 = cast(meta[relay.Constant][23] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %418 = reshape(%416, newshape=[260, 1]) /* ty=Tensor[(260, 1), bool] */;
  %419 = reshape(%417, newshape=[28, 2]) /* ty=Tensor[(28, 2), int8] */;
  %420 = @func_13609(%418, %419) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260, 1), bool], Tensor[(675), float64], Tensor[(792), uint32], Tensor[(28, 2), int8], Tensor[(13, 15, 8), int64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) */;
  %421 = @func_11996() /* ty=Tensor[(13, 15, 8), uint64] */;
  %422 = %420.8;
  (%421, %422, meta[relay.Constant][22] /* ty=Tensor[(260), bool] */, meta[relay.Constant][23] /* ty=Tensor[(56), int8] */)
}

def @func_12835() -> (Tensor[(13, 15, 8), bool],) {
  %423 = @func_7657() /* ty=Tensor[(13, 15, 8), bool] */;
  (%423,)
}

def @func_7412() -> (Tensor[(13, 15, 8), float64],) {
  %424 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
  %425 = cast(%424, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
  %426 = asin(%425) /* ty=Tensor[(13, 15, 8), float64] */;
  (%426,)
}

def @func_17855() -> Tensor[(13, 15, 8), uint64] {
  @func_16033() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_17089() -> Tensor[(675), float64] {
  @func_8833() /* ty=Tensor[(675), float64] */
}

def @func_18015(%var_17990: Tensor[(7, 4, 6), float64], %var_17991: Tensor[(7, 4, 6), float64], %var_17997: Tensor[(1620), float32]) -> (Tensor[(7, 4, 6), float64], Tensor[(15, 9, 12), float64], Tensor[(1620), float32]) {
  %427 = cast(%var_17991, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
  %428 = shape_of(%var_17990, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%var_17990, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %431 = cast(%var_17997, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %432 = reshape(%431, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %433 = @func_6366(%432) /* ty=(Tensor[(15, 9, 12), float64],) */;
  %434 = divide(%429, %430) /* ty=Tensor[(7, 4, 6), float64] */;
  %435 = %433.0;
  (%434, %435, %var_17997)
}

def @func_12953() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %436 = @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %437 = %436.0;
  %438 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
  (%437, %438)
}

def @func_8640(%var_8550: Tensor[(1, 16, 6), uint64], %var_8577: Tensor[(56), int8], %var_8592: Tensor[(240), bool], %var_8593: Tensor[(675), float64]) -> (Tensor[(2, 4, 7), int8], Tensor[(56), int8], Tensor[(3, 5, 16), bool], Tensor[(240), bool], Tensor[(675), float64], Tensor[(?, 16, 6), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 1560), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %439 = cast(%var_8577, dtype="int8") /* ty=Tensor[(56), int8] */;
  %440 = reshape(%439, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), int8] */;
  %441 = cast(%var_8592, dtype="bool") /* ty=Tensor[(240), bool] */;
  %442 = cast(%var_8593, dtype="float64") /* ty=Tensor[(675), float64] */;
  %443 = cast(meta[relay.Constant][24] /* ty=uint64 */, dtype="uint8") /* ty=uint8 */;
  %444 = @func_3518(%440) /* ty=Tensor[(2, 4, 7), int8] */;
  %445 = cast(%444, dtype="int8") /* ty=Tensor[(2, 4, 7), int8] */;
  %446 = reshape(%441, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), bool] */;
  %447 = reshape(%442, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %448 = reshape(%443, newshape=[]) /* ty=uint8 */;
  %449 = reshape(%445, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %450 = @func_5241(%446, %447, %448, %449) /* ty=(Tensor[(3, 5, 16), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(3, 5, 16), float32], Tensor[(15, 1, 2), uint8], uint8, Tensor[(30), uint8], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
  %451 = cast(meta[relay.Constant][24] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %452 = cast(%var_8550, dtype="bool") /* ty=Tensor[(1, 16, 6), bool] */;
  %453 = not_equal(%451, %452) /* ty=Tensor[(1, 16, 6), bool] */;
  %454 = cast(meta[relay.Constant][24] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %455 = cast(%var_8550, dtype="bool") /* ty=Tensor[(1, 16, 6), bool] */;
  %456 = less_equal(%454, %455) /* ty=Tensor[(1, 16, 6), bool] */;
  %457 = cast(%456, dtype="float64") /* ty=Tensor[(1, 16, 6), float64] */;
  %458 = shape_of(%453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%453, dtype="float64") /* ty=Tensor[(1, 16, 6), float64] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %461 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 1560), bool] */, dtype="bool") /* ty=Tensor[(1, 1560), bool] */;
  %462 = reshape(%461, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), bool] */;
  %463 = @func_6150(%462) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */;
  %464 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %465 = %450.0;
  %466 = floor_mod(%459, %460) /* ty=Tensor[(?, 16, 6), float64] */;
  %467 = %463.0;
  %468 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %469 = %464.1;
  (%444, %var_8577, %465, %var_8592, %var_8593, %466, %467, meta[relay.Constant][25] /* ty=Tensor[(1, 1560), bool] */, %468, %469)
}

def @func_18248() -> Tensor[(675), float64] {
  @func_17089() /* ty=Tensor[(675), float64] */
}

def @func_21036() -> Tensor[(13, 15, 8), bool] {
  %470 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %470.0
}

def @func_21940() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
  %471 = @func_17849() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %472 = @func_15814() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(260), bool]) */;
  %473 = @func_10388() /* ty=(Tensor[(13, 15, 8), int64],) */;
  %474 = %471.0;
  %475 = %472.0;
  %476 = %473.0;
  (%474, %475, %476)
}

def @func_12905() -> (Tensor[(13, 15, 8), bool], Tensor[(18, 2), float32]) {
  %477 = @func_11056() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %478 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %479 = %477.0;
  %480 = %478.2;
  (%479, %480)
}

def @func_6754() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
  %481 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
  %482 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  (%481, %482)
}

def @func_15814() -> (Tensor[(13, 15, 8), bool], Tensor[(260), bool]) {
  %483 = @func_13992() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float32]) */;
  %484 = @func_6646() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %485 = %483.0;
  %486 = %484.6;
  (%485, %486)
}

def @func_5938(%var_5935: Tensor[(36), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], float32, Tensor[(36), float32], Tensor[(675), float64]) {
  %487 = cast(-4.29603f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %488 = cast(%var_5935, dtype="float32") /* ty=Tensor[(36), float32] */;
  %489 = cast(meta[relay.Constant][26] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %490 = reshape(%487, newshape=[]) /* ty=float32 */;
  %491 = reshape(%488, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
  %492 = reshape(%489, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %493 = @func_3193(%490, %491, %492) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
  %494 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %495 = %493.4;
  (%494, %495, -4.29603f /* ty=float32 */, %var_5935, meta[relay.Constant][26] /* ty=Tensor[(675), float64] */)
}

def @func_20300() -> (Tensor[(13, 15, 8), uint64],) {
  %496 = @func_12540() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %497 = %496.0;
  (%497,)
}

def @func_20356() -> (Tensor[(13, 15, 8), bool],) {
  %498 = @func_18563() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %499 = %498.1;
  (%499,)
}

def @func_18052() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) {
  %500 = @func_14104() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %501 = @func_14529() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %502 = @func_11996() /* ty=Tensor[(13, 15, 8), uint64] */;
  %503 = %500.0;
  %504 = %501.0;
  (%502, %503, %504)
}

def @func_11947() -> (Tensor[(13, 15, 8), bool],) {
  %505 = @func_10032() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(13, 15, 8), bool]) */;
  %506 = %505.0;
  (%506,)
}

def @func_11074() -> (Tensor[(13, 15, 8), bool],) {
  %507 = @func_10768() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */;
  %508 = %507.0;
  (%508,)
}

def @func_19304(%var_19281: Tensor[(1260), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) {
  %509 = @func_10534() /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool]) */;
  %510 = @func_13002() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %511 = cast(%var_19281, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %512 = reshape(%511, newshape=[630, 2]) /* ty=Tensor[(630, 2), float32] */;
  %513 = @func_10478(%512) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(630, 2), float32]) */;
  %514 = @func_16414() /* ty=Tensor[(13, 15, 8), bool] */;
  %515 = @func_11817() /* ty=Tensor[(13, 15, 8), bool] */;
  %516 = %509.1;
  %517 = %510.0;
  %518 = @func_16414() /* ty=Tensor[(13, 15, 8), bool] */;
  %519 = %513.0;
  (%514, %515, %516, %517, %518, %519, %var_19281)
}

def @func_11717() -> Tensor[(13, 15, 8), uint64] {
  @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_20474() -> (Tensor[(13, 15, 8), float64],) {
  %520 = @func_10423() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %521 = %520.0;
  (%521,)
}

def @func_8537() -> (Tensor[(13, 15, 8), float64],) {
  %522 = @func_7412() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %523 = %522.0;
  (%523,)
}

def @func_16117() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %524 = @func_11074() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %525 = @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %526 = @func_14223() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %527 = @func_10185() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %528 = %524.0;
  %529 = %525.0;
  %530 = %526.0;
  %531 = %527.1;
  (%528, %529, %530, %531)
}

def @func_18193() -> Tensor[(5, 15, 9), float64] {
  %532 = @func_12585() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %533 = %532.0;
  %534 = cast(%533, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  acos(%534) /* ty=Tensor[(5, 15, 9), float64] */
}

def @func_10308() -> (Tensor[(13, 15, 8), uint64],) {
  %535 = @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%535,)
}

def @func_9220() -> (Tensor[(13, 15, 8), bool],) {
  %536 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %537 = %536.0;
  (%537,)
}

def @func_7553() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %538 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %539 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %540 = %538.0;
  %541 = %539.0;
  (%540, %541)
}

def @func_201(%var_182: Tensor[(5, 15, 9), float64]) -> (Tensor[(5, 15, 9), float64],) {
  %542 = cast(%var_182, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %543 = sqrt(%542) /* ty=Tensor[(5, 15, 9), float64] */;
  (%543,)
}

def @func_5241(%var_5193: Tensor[(3, 5, 16), bool], %var_5199: Tensor[(675), float64], %var_5222: uint8, %var_5237: Tensor[(56), int8]) -> (Tensor[(3, 5, 16), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(3, 5, 16), float32], Tensor[(15, 1, 2), uint8], uint8, Tensor[(30), uint8], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) {
  %544 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 5, 16), bool] */, dtype="bool") /* ty=Tensor[(3, 5, 16), bool] */;
  %545 = shape_of(%var_5193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%var_5193, dtype="bool") /* ty=Tensor[(3, 5, 16), bool] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %548 = cast(%var_5199, dtype="float64") /* ty=Tensor[(675), float64] */;
  %549 = reshape(%548, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %550 = @func_201(%549) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %551 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 5, 16), bool] */, dtype="float32") /* ty=Tensor[(3, 5, 16), float32] */;
  %552 = cast(%var_5222, dtype="uint8") /* ty=uint8 */;
  %553 = cast(meta[relay.Constant][28] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %554 = reshape(%552, newshape=[]) /* ty=uint8 */;
  %555 = reshape(%553, newshape=[15, 1, 2]) /* ty=Tensor[(15, 1, 2), uint8] */;
  %556 = @func_3464(%554, %555) /* ty=(Tensor[(15, 1, 2), uint8],) */;
  %557 = cast(%var_5237, dtype="int8") /* ty=Tensor[(56), int8] */;
  %558 = reshape(%557, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), int8] */;
  %559 = logical_and(%546, %547) /* ty=Tensor[(3, 5, 16), bool] */;
  %560 = %550.0;
  %561 = rsqrt(%551) /* ty=Tensor[(3, 5, 16), float32] */;
  %562 = %556.0;
  %563 = @func_3518(%558) /* ty=Tensor[(2, 4, 7), int8] */;
  (%559, %560, %var_5199, %561, %562, %var_5222, meta[relay.Constant][28] /* ty=Tensor[(30), uint8] */, %563, %var_5237)
}

def @func_11442() -> (Tensor[(13, 15, 8), bool],) {
  %564 = @func_10584() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %565 = %564.0;
  (%565,)
}

def @func_6342() -> Tensor[(13, 15, 8), bool] {
  @func_5897() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_10584() -> (Tensor[(13, 15, 8), bool],) {
  %566 = @func_9025() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %567 = %566.3;
  (%567,)
}

def @func_14389(%var_14346: Tensor[(11, 117), float64], %var_14347: bool, %var_14348: Tensor[(2, 28), int8]) -> (Tensor[(13, 15, 8), uint64], Tensor[(1, 1260), float32], bool, Tensor[(2, 28), int8], Tensor[(36), float32], Tensor[(11, 117), float64]) {
  %568 = @func_10308() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %569 = cast(%var_14346, dtype="float64") /* ty=Tensor[(11, 117), float64] */;
  %570 = cast(%var_14347, dtype="bool") /* ty=bool */;
  %571 = cast(%var_14348, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
  %572 = cast(meta[relay.Constant][29] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %573 = reshape(%569, newshape=[9, 11, 13]) /* ty=Tensor[(9, 11, 13), float64] */;
  %574 = reshape(%570, newshape=[]) /* ty=bool */;
  %575 = reshape(%571, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %576 = reshape(%572, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %577 = @func_9874(%573, %574, %575, %576) /* ty=(Tensor[(9, 11, 13), float64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(6, 12, 11), uint32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(56), int8], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(1, 1260), float32], Tensor[(1, 36), float32], Tensor[(240), bool]) */;
  %578 = cast(%var_14346, dtype="float64") /* ty=Tensor[(11, 117), float64] */;
  %579 = %568.0;
  %580 = %577.15;
  %581 = sinh(%578) /* ty=Tensor[(11, 117), float64] */;
  (%579, %580, %var_14347, %var_14348, meta[relay.Constant][29] /* ty=Tensor[(36), float32] */, %581)
}

def @func_4152(%var_4130: Tensor[(6, 12, 11), uint32], %var_4131: Tensor[(6, 12, 11), uint32]) -> Tensor[(6, 12, 11), uint32] {
  %582 = cast(%var_4131, dtype="uint32") /* ty=Tensor[(6, 12, 11), uint32] */;
  %583 = shape_of(%var_4130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_4130, dtype="uint32") /* ty=Tensor[(6, 12, 11), uint32] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%584, %585) /* ty=Tensor[(6, 12, 11), uint32] */
}

def @func_6785() -> Tensor[(13, 15, 8), bool] {
  @func_5897() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_12047() -> Tensor[(13, 15, 8), int64] {
  %586 = @func_6754() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */;
  %586.1
}

def @func_13232() -> (Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32], Tensor[(1260), float32]) {
  %587 = cast(meta[relay.Constant][30] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %588 = reshape(%587, newshape=[18, 70]) /* ty=Tensor[(18, 70), float32] */;
  %589 = @func_10106(%588) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 2), int64], Tensor[(18, 70), float32], Tensor[(36), float32], Tensor[(240), bool]) */;
  %590 = @func_12142() /* ty=Tensor[(13, 15, 8), bool] */;
  %591 = %589.3;
  (%590, %591, meta[relay.Constant][30] /* ty=Tensor[(1260), float32] */)
}

def @func_12540() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %592 = @func_11056() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %593 = @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */;
  %594 = %592.1;
  %595 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%593, %594, %595)
}

def @func_20316() -> Tensor[(13, 15, 8), bool] {
  %596 = @func_19384() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %596.1
}

def @func_9679() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) {
  %597 = @func_7420() /* ty=Tensor[(13, 15, 8), bool] */;
  %598 = cast(%597, dtype="int64") /* ty=Tensor[(13, 15, 8), int64] */;
  %599 = reshape(%598, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), int64] */;
  %600 = @func_7195(%599) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) */;
  %601 = %600.0;
  (%597, %601)
}

def @func_16256() -> Tensor[(13, 15, 8), bool] {
  %602 = @func_13002() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %602.0
}

def @func_7277() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %603 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %604 = @func_6754() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */;
  %605 = %603.1;
  %606 = %604.0;
  (%605, %606)
}

def @func_21099() -> Tensor[(13, 15, 8), bool] {
  %607 = @func_11559() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %607.1
}

def @func_5897() -> Tensor[(13, 15, 8), bool] {
  %608 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 15, 8), int8] */, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
  %609 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 15, 8), int8] */, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  less_equal(%608, %609) /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_11311() -> Tensor[(13, 15, 8), bool] {
  @func_8210() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_18706() -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
  %610 = @func_15814() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(260), bool]) */;
  %611 = @func_10852() /* ty=Tensor[(5, 15, 9), float32] */;
  %612 = %610.0;
  (%611, %612)
}

def @func_7070() -> (Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) {
  %613 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %614 = cast(meta[relay.Constant][33] /* ty=Tensor[(18, 2), float32] */, dtype="float32") /* ty=Tensor[(18, 2), float32] */;
  %615 = reshape(%614, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %616 = @func_5938(%615) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], float32, Tensor[(36), float32], Tensor[(675), float64]) */;
  %617 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %618 = %613.0;
  %619 = %616.1;
  %620 = %617.0;
  (%618, %619, meta[relay.Constant][33] /* ty=Tensor[(18, 2), float32] */, %620)
}

def @func_13929(%var_13895: Tensor[(1, 16, 7), int8]) -> (Tensor[(1, 16, 7), int8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(675), float64], Tensor[(13, 15, 8), bool]) {
  %621 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %622 = cast(%var_13895, dtype="int8") /* ty=Tensor[(1, 16, 7), int8] */;
  %623 = cast(meta[relay.Constant][35] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %624 = reshape(%623, newshape=[75, 9]) /* ty=Tensor[(75, 9), float64] */;
  %625 = @func_10925(%624) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(56), int8], bool, Tensor[(260), bool], Tensor[(75, 9), float64], Tensor[(396, 2), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %626 = @func_13459() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %627 = add(%621, %622) /* ty=Tensor[(1, 16, 7), int8] */;
  %628 = @func_11817() /* ty=Tensor[(13, 15, 8), bool] */;
  %629 = %625.1;
  %630 = %626.1;
  (%627, %628, %629, meta[relay.Constant][35] /* ty=Tensor[(675), float64] */, %630)
}

def @func_15598() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %631 = @func_12540() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %632 = %631.2;
  %633 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%632, %633)
}

def @func_16330(%var_16327: Tensor[(9, 6, 16), float64]) -> Tensor[(9, 6, 16), float64] {
  %634 = cast(%var_16327, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
  tan(%634) /* ty=Tensor[(9, 6, 16), float64] */
}

def @func_5962() -> Tensor[(13, 15, 8), bool] {
  @func_5897() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_11699(%var_11675: Tensor[(15, 9, 1), float64]) -> Tensor[(15, 9, 1), float64] {
  %635 = cast(%var_11675, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
  asin(%635) /* ty=Tensor[(15, 9, 1), float64] */
}

def @func_14515(%var_14488: Tensor[(3, 12), float32]) -> (Tensor[(792, 1), uint32], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), uint64], Tensor[(3, 12), float32], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) {
  %636 = @func_8286() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %637 = %636.0;
  %638 = cast(%637, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %639 = reshape(%638, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), bool] */;
  %640 = @func_6150(%639) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */;
  %641 = cast(%637, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
  %642 = cast(%var_14488, dtype="float32") /* ty=Tensor[(3, 12), float32] */;
  %643 = reshape(%642, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %644 = @func_14084(%643) /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(675), float32], Tensor[(5, 15, 9), float64], float32, Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool]) */;
  %645 = cast(meta[relay.Constant][36] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %646 = reshape(%645, newshape=[630, 2]) /* ty=Tensor[(630, 2), float32] */;
  %647 = @func_10478(%646) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(630, 2), float32]) */;
  %648 = %640.2;
  %649 = tan(%641) /* ty=Tensor[(13, 15, 8), float64] */;
  %650 = %644.0;
  %651 = %647.0;
  (%648, %649, %650, %var_14488, %651, meta[relay.Constant][36] /* ty=Tensor[(1260), float32] */)
}

def @func_10032() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(13, 15, 8), bool]) {
  %652 = @func_7949() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %653 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %654 = %653.1;
  %655 = cast(%654, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %656 = %652.1;
  %657 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %658 = sigmoid(%655) /* ty=Tensor[(30, 4), float32] */;
  %659 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%656, %657, %658, %659)
}

def @func_15411() -> Tensor[(13, 15, 8), bool] {
  %660 = @func_13232() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32], Tensor[(1260), float32]) */;
  %660.0
}

def @func_13286(%var_13259: Tensor[(1, 8, 1), float64]) -> (Tensor[(1, 8, 1), int16], Tensor[(13, 15, 8), uint64]) {
  %661 = cast(3.6843f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %662 = cast(%var_13259, dtype="float64") /* ty=Tensor[(1, 8, 1), float64] */;
  %663 = divide(%661, %662) /* ty=Tensor[(1, 8, 1), float64] */;
  %664 = cast(3.6843f64 /* ty=float64 */, dtype="int16") /* ty=int16 */;
  %665 = cast(%663, dtype="int16") /* ty=Tensor[(1, 8, 1), int16] */;
  %666 = bitwise_xor(%664, %665) /* ty=Tensor[(1, 8, 1), int16] */;
  %667 = @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%666, %667)
}

def @func_11808(%var_11781: Tensor[(1287), float64], %var_11782: bool) -> (Tensor[(13, 15, 8), int64], Tensor[(6, 12, 11), uint32], Tensor[(1287), float64], bool, Tensor[(56), int8], Tensor[(36, 1), float32], Tensor[(13, 15, 8), int64]) {
  %668 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %669 = cast(%var_11781, dtype="float64") /* ty=Tensor[(1287), float64] */;
  %670 = cast(%var_11782, dtype="bool") /* ty=bool */;
  %671 = cast(meta[relay.Constant][37] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %672 = cast(meta[relay.Constant][38] /* ty=Tensor[(36, 1), float32] */, dtype="float32") /* ty=Tensor[(36, 1), float32] */;
  %673 = reshape(%669, newshape=[9, 11, 13]) /* ty=Tensor[(9, 11, 13), float64] */;
  %674 = reshape(%670, newshape=[]) /* ty=bool */;
  %675 = reshape(%671, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %676 = reshape(%672, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %677 = @func_9874(%673, %674, %675, %676) /* ty=(Tensor[(9, 11, 13), float64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(6, 12, 11), uint32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(56), int8], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(1, 1260), float32], Tensor[(1, 36), float32], Tensor[(240), bool]) */;
  %678 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %679 = %668.0;
  %680 = %677.4;
  %681 = %678.0;
  (%679, %680, %var_11781, %var_11782, meta[relay.Constant][37] /* ty=Tensor[(56), int8] */, meta[relay.Constant][38] /* ty=Tensor[(36, 1), float32] */, %681)
}

def @func_7657() -> Tensor[(13, 15, 8), bool] {
  @func_5962() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_15747() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(1260), float32], Tensor[(36), float32], Tensor[(240), bool], Tensor[(13, 15, 8), bool]) {
  %682 = @func_10185() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %683 = @func_15377() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %684 = cast(meta[relay.Constant][39] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %685 = cast(meta[relay.Constant][40] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %686 = cast(meta[relay.Constant][41] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %687 = reshape(%684, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float32] */;
  %688 = reshape(%685, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %689 = reshape(%686, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %690 = @func_8476(%687, %688, %689) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) */;
  %691 = @func_9220() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %692 = %682.0;
  %693 = %683.1;
  %694 = %690.10;
  %695 = %691.0;
  (%692, %693, %694, meta[relay.Constant][39] /* ty=Tensor[(1260), float32] */, meta[relay.Constant][40] /* ty=Tensor[(36), float32] */, meta[relay.Constant][41] /* ty=Tensor[(240), bool] */, %695)
}

def @func_11116() -> Tensor[(16, 16, 8), float64] {
  %696 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 16, 8), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 8), float64] */;
  atan(%696) /* ty=Tensor[(16, 16, 8), float64] */
}

def @func_18471() -> Tensor[(13, 15, 8), bool] {
  %697 = @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %697.0
}

def @func_13992() -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float32]) {
  %698 = @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %699 = @func_13720() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %700 = %698.0;
  %701 = %699.0;
  (%700, %701)
}

def @func_16741() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
  %702 = @func_14006() /* ty=Tensor[(13, 15, 8), uint64] */;
  %703 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  (%702, %703)
}

def @func_12142() -> Tensor[(13, 15, 8), bool] {
  @func_7031() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_20529(%var_20506: Tensor[(1620), float32]) -> (Tensor[(13, 15, 8), int64], Tensor[(15, 9, 12), float64], Tensor[(1620), float32], bool, Tensor[(13, 15, 8), bool]) {
  %704 = cast(%var_20506, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %705 = reshape(%704, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %706 = @func_6366(%705) /* ty=(Tensor[(15, 9, 12), float64],) */;
  %707 = @func_15257() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64], bool, Tensor[(1287), float64], bool, Tensor[(14, 4), int8], Tensor[(13, 15, 8), bool]) */;
  %708 = @func_12716() /* ty=Tensor[(13, 15, 8), int64] */;
  %709 = %706.0;
  %710 = %707.2;
  %711 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%708, %709, %var_20506, %710, %711)
}

def @func_18745() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %712 = @func_14863() /* ty=Tensor[(13, 15, 8), bool] */;
  %713 = @func_18471() /* ty=Tensor[(13, 15, 8), bool] */;
  (%712, %713)
}

def @func_7949() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %714 = @func_6234() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %715 = @func_6785() /* ty=Tensor[(13, 15, 8), bool] */;
  %716 = %714.0;
  (%715, %716)
}

def @func_12673(%var_12620: Tensor[(675), float64]) -> (Tensor[(13, 15, 8), int64], Tensor[(792), uint32], bool, Tensor[(675), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %717 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %718 = cast(%var_12620, dtype="float64") /* ty=Tensor[(675), float64] */;
  %719 = reshape(%717, newshape=[]) /* ty=bool */;
  %720 = reshape(%718, newshape=[225, 3]) /* ty=Tensor[(225, 3), float64] */;
  %721 = @func_11529(%719, %720) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(260), bool], Tensor[(6, 20), float32], bool, Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %722 = @func_6478() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %723 = @func_12371() /* ty=(Tensor[(13, 15, 8), int64],) */;
  %724 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %725 = %721.5;
  %726 = %722.0;
  %727 = %723.0;
  %728 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  (%724, %725, True /* ty=bool */, %var_12620, %726, %727, %728)
}

def @func_8286() -> (Tensor[(13, 15, 8), bool],) {
  %729 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
  (%729,)
}

def @func_21168() -> (Tensor[(2, 5, 12), float32], Tensor[(13, 15, 8), bool]) {
  %730 = @func_6873() /* ty=(Tensor[(2, 5, 12), float32],) */;
  %731 = @func_16859() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %732 = %730.0;
  %733 = %731.0;
  (%732, %733)
}

def @func_10925(%var_10907: Tensor[(75, 9), float64]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(56), int8], bool, Tensor[(260), bool], Tensor[(75, 9), float64], Tensor[(396, 2), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) {
  %734 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %735 = cast(%734, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %736 = reshape(%735, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), bool] */;
  %737 = @func_6150(%736) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */;
  %738 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %739 = cast(meta[relay.Constant][43] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %740 = cast(%var_10907, dtype="float64") /* ty=Tensor[(75, 9), float64] */;
  %741 = cast(meta[relay.Constant][44] /* ty=Tensor[(396, 2), uint32] */, dtype="uint32") /* ty=Tensor[(396, 2), uint32] */;
  %742 = cast(meta[relay.Constant][45] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %743 = reshape(%738, newshape=[]) /* ty=bool */;
  %744 = reshape(%739, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %745 = reshape(%740, newshape=[675, 1]) /* ty=Tensor[(675, 1), float64] */;
  %746 = reshape(%741, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %747 = reshape(%742, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %748 = @func_8389(%743, %744, %745, %746, %747) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %749 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %750 = %737.0;
  %751 = %748.9;
  %752 = %749.1;
  (%734, %750, %751, True /* ty=bool */, meta[relay.Constant][43] /* ty=Tensor[(260), bool] */, %var_10907, meta[relay.Constant][44] /* ty=Tensor[(396, 2), uint32] */, meta[relay.Constant][45] /* ty=Tensor[(56), int8] */, %752)
}

def @func_11529(%var_11514: bool, %var_11515: Tensor[(225, 3), float64]) -> (Tensor[(13, 15, 8), float32], Tensor[(260), bool], Tensor[(6, 20), float32], bool, Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8]) {
  %753 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %754 = %753.0;
  %755 = cast(%754, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
  %756 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 20), float32] */, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %757 = cast(%var_11514, dtype="bool") /* ty=bool */;
  %758 = cast(%var_11515, dtype="float64") /* ty=Tensor[(225, 3), float64] */;
  %759 = cast(meta[relay.Constant][47] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %760 = cast(meta[relay.Constant][48] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %761 = reshape(%756, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %762 = reshape(%757, newshape=[]) /* ty=bool */;
  %763 = reshape(%758, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %764 = reshape(%759, newshape=[12, 66]) /* ty=Tensor[(12, 66), uint32] */;
  %765 = reshape(%760, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %766 = @func_8148(%761, %762, %763, %764, %765) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(260), bool], Tensor[(12, 66), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) */;
  %767 = log10(%755) /* ty=Tensor[(13, 15, 8), float32] */;
  %768 = %766.3;
  (%767, %768, meta[relay.Constant][46] /* ty=Tensor[(6, 20), float32] */, %var_11514, %var_11515, meta[relay.Constant][47] /* ty=Tensor[(792), uint32] */, meta[relay.Constant][48] /* ty=Tensor[(56), int8] */)
}

def @func_11642(%var_11614: Tensor[(260), bool], %var_11617: Tensor[(28, 2), int8], %var_11635: Tensor[(28, 2), int8]) -> (Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(675, 792), bool], Tensor[(28, 2), uint32]) {
  %769 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %770 = cast(%var_11614, dtype="bool") /* ty=Tensor[(260), bool] */;
  %771 = cast(meta[relay.Constant][49] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %772 = cast(meta[relay.Constant][50] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %773 = cast(%var_11617, dtype="int8") /* ty=Tensor[(28, 2), int8] */;
  %774 = reshape(%769, newshape=[]) /* ty=bool */;
  %775 = reshape(%770, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %776 = reshape(%771, newshape=[675, 1]) /* ty=Tensor[(675, 1), float64] */;
  %777 = reshape(%772, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %778 = reshape(%773, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %779 = @func_8389(%774, %775, %776, %777, %778) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %780 = %779.7;
  %781 = cast(%780, dtype="bool") /* ty=Tensor[(675, 1), bool] */;
  %782 = cast(meta[relay.Constant][50] /* ty=Tensor[(792), uint32] */, dtype="bool") /* ty=Tensor[(792), bool] */;
  %783 = cast(%var_11635, dtype="uint32") /* ty=Tensor[(28, 2), uint32] */;
  %784 = shape_of(%var_11617, dtype="int32") /* ty=Tensor[(2), int32] */;
  %785 = cast(%var_11617, dtype="uint32") /* ty=Tensor[(28, 2), uint32] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %787 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %788 = greater_equal(%781, %782) /* ty=Tensor[(675, 792), bool] */;
  %789 = add(%785, %786) /* ty=Tensor[(28, 2), uint32] */;
  (%787, False /* ty=bool */, %var_11614, meta[relay.Constant][49] /* ty=Tensor[(675), float64] */, %788, %789)
}

def @func_17723() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64]) {
  %790 = @func_9481() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool]) */;
  %791 = @func_12835() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %792 = @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %793 = %790.4;
  %794 = %791.0;
  %795 = %792.0;
  (%793, %794, %795)
}

def @func_14465(%var_14459: Tensor[(3, 10, 12), int64], %var_14460: Tensor[(3, 10, 12), int64]) -> (Tensor[(3, 10, 12), int64],) {
  %796 = cast(%var_14460, dtype="int64") /* ty=Tensor[(3, 10, 12), int64] */;
  %797 = shape_of(%var_14459, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%var_14459, dtype="int64") /* ty=Tensor[(3, 10, 12), int64] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %800 = bitwise_xor(%798, %799) /* ty=Tensor[(3, 10, 12), int64] */;
  (%800,)
}

def @func_21422() -> Tensor[(6, 12, 11), uint32] {
  %801 = @func_12287() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(36, 22), uint32], Tensor[(13, 15, 8), float64]) */;
  %801.2
}

def @func_17986(%var_17867: Tensor[(4, 15, 4), float32]) -> (Tensor[(13, 15, 8), int64], Tensor[(4, 15, 4), float64], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %802 = cast(%var_17867, dtype="float32") /* ty=Tensor[(4, 15, 4), float32] */;
  %803 = sigmoid(%802) /* ty=Tensor[(4, 15, 4), float32] */;
  %804 = cast(%803, dtype="float64") /* ty=Tensor[(4, 15, 4), float64] */;
  %805 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %806 = @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %807 = @func_10185() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %808 = @func_13156() /* ty=Tensor[(13, 15, 8), int64] */;
  %809 = sinh(%804) /* ty=Tensor[(4, 15, 4), float64] */;
  %810 = %805.2;
  %811 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  %812 = %806.0;
  %813 = @func_12856() /* ty=Tensor[(13, 15, 8), bool] */;
  %814 = %807.0;
  (%808, %809, %810, %811, %812, %813, %814)
}

def @func_3518(%var_3513: Tensor[(2, 4, 7), int8]) -> Tensor[(2, 4, 7), int8] {
  %815 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 4, 7), int8] */, dtype="int8") /* ty=Tensor[(2, 4, 7), int8] */;
  %816 = shape_of(%var_3513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%var_3513, dtype="int8") /* ty=Tensor[(2, 4, 7), int8] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%817, %818) /* ty=Tensor[(2, 4, 7), int8] */
}

def @func_16813() -> Tensor[(13, 15, 8), bool] {
  %819 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %819.0
}

def @func_8210() -> Tensor[(13, 15, 8), bool] {
  @func_7031() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_11996() -> Tensor[(13, 15, 8), uint64] {
  %820 = @func_10308() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %820.0
}

def @func_3464(%var_3424: uint8, %var_3425: Tensor[(15, 1, 2), uint8]) -> (Tensor[(15, 1, 2), uint8],) {
  %821 = cast(%var_3424, dtype="uint8") /* ty=uint8 */;
  %822 = cast(%var_3425, dtype="uint8") /* ty=Tensor[(15, 1, 2), uint8] */;
  %823 = subtract(%821, %822) /* ty=Tensor[(15, 1, 2), uint8] */;
  (%823,)
}

def @func_6478() -> (Tensor[(13, 15, 8), bool],) {
  %824 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  (%824,)
}

def @func_6150(%var_6140: Tensor[(13, 15, 8), bool]) -> (Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) {
  %825 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %826 = cast(%var_6140, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%825, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %830 = cast(meta[relay.Constant][52] /* ty=Tensor[(792, 1), uint32] */, dtype="uint32") /* ty=Tensor[(792, 1), uint32] */;
  %831 = cast(meta[relay.Constant][52] /* ty=Tensor[(792, 1), uint32] */, dtype="uint32") /* ty=Tensor[(792, 1), uint32] */;
  %832 = reshape(%830, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %833 = reshape(%831, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %834 = less(%828, %829) /* ty=Tensor[(13, 15, 8), bool] */;
  %835 = @func_4152(%832, %833) /* ty=Tensor[(6, 12, 11), uint32] */;
  (%834, %835, meta[relay.Constant][52] /* ty=Tensor[(792, 1), uint32] */)
}

def @func_7338(%var_7330: Tensor[(792), uint32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32]) {
  %836 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %837 = cast(%var_7330, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %838 = cast(%var_7330, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %839 = reshape(%837, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %840 = reshape(%838, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %841 = %836.3;
  %842 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %843 = @func_4152(%839, %840) /* ty=Tensor[(6, 12, 11), uint32] */;
  (%841, %842, %843, %var_7330)
}

def @func_17778() -> (Tensor[(13, 15, 8), bool],) {
  %844 = @func_11442() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %845 = %844.0;
  (%845,)
}

def @func_20775() -> (Tensor[(13, 15, 8), bool],) {
  %846 = @func_14104() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %847 = %846.0;
  (%847,)
}

def @func_16033() -> Tensor[(13, 15, 8), uint64] {
  @func_11717() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_14441() -> (Tensor[(675), float64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %848 = @func_6308() /* ty=(Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) */;
  %849 = @func_11660() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %850 = %848.2;
  %851 = @func_7108() /* ty=Tensor[(13, 15, 8), int64] */;
  %852 = %849.0;
  (%850, %851, %852)
}

def @func_11056() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %853 = @func_9342() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %854 = @func_9582() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %855 = %853.0;
  %856 = %854.1;
  (%855, %856)
}

def @func_15043() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(15, 1, 2), uint8], uint8, Tensor[(5, 6), uint8]) {
  %857 = @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %858 = cast(meta[relay.Constant][53] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %859 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 6), uint8] */, dtype="uint8") /* ty=Tensor[(5, 6), uint8] */;
  %860 = reshape(%858, newshape=[]) /* ty=uint8 */;
  %861 = reshape(%859, newshape=[15, 1, 2]) /* ty=Tensor[(15, 1, 2), uint8] */;
  %862 = @func_3464(%860, %861) /* ty=(Tensor[(15, 1, 2), uint8],) */;
  %863 = %857.0;
  %864 = @func_11311() /* ty=Tensor[(13, 15, 8), bool] */;
  %865 = %862.0;
  (%863, %864, %865, meta[relay.Constant][53] /* ty=uint8 */, meta[relay.Constant][54] /* ty=Tensor[(5, 6), uint8] */)
}

def @func_16574() -> Tensor[(13, 15, 8), bool] {
  %866 = @func_15377() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %866.1
}

def @func_15279() -> Tensor[(792), uint32] {
  %867 = @func_6646() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %867.7
}

def @main() -> (Tensor[(13, 15, 8), bool], Tensor[(675), bool]) {
  %868 = @func_20582() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(75, 9), float64], Tensor[(675), float64]) */;
  %869 = @func_17089() /* ty=Tensor[(675), float64] */;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(675), float64] */;
  %871 = atan(%870) /* ty=Tensor[(675), float64] */;
  %872 = cast(meta[relay.Constant][55] /* ty=Tensor[(675), float64] */, dtype="bool") /* ty=Tensor[(675), bool] */;
  %873 = shape_of(%871, dtype="int32") /* ty=Tensor[(1), int32] */;
  %874 = cast(%871, dtype="bool") /* ty=Tensor[(675), bool] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?), bool] */;
  %876 = %868.0;
  %877 = less(%874, %875) /* ty=Tensor[(675), bool] */;
  (%876, %877)
}

def @func_12804() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) {
  %878 = @func_8286() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %879 = %878.0;
  %880 = @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%879, %880)
}

def @func_19699() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %881 = @func_16859() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %882 = @func_10344() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) */;
  %883 = @func_17621() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %884 = @func_7108() /* ty=Tensor[(13, 15, 8), int64] */;
  %885 = %881.0;
  %886 = %882.1;
  %887 = @func_7108() /* ty=Tensor[(13, 15, 8), int64] */;
  %888 = %883.0;
  (%884, %885, %886, %887, %888)
}

def @func_10827() -> (Tensor[(13, 15, 8), bool],) {
  %889 = @func_9481() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool]) */;
  %890 = %889.0;
  (%890,)
}

def @func_13002() -> (Tensor[(13, 15, 8), bool],) {
  %891 = @func_11852() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(675), float32]) */;
  %892 = %891.0;
  (%892,)
}

def @func_14084(%var_14055: Tensor[(1, 36), float32]) -> (Tensor[(13, 15, 8), uint64], Tensor[(675), float32], Tensor[(5, 15, 9), float64], float32, Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool]) {
  %893 = @func_12469() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %894 = @func_11852() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(675), float32]) */;
  %895 = cast(9.82309f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %896 = cast(%var_14055, dtype="float32") /* ty=Tensor[(1, 36), float32] */;
  %897 = %894.1;
  %898 = cast(%897, dtype="float64") /* ty=Tensor[(675), float64] */;
  %899 = reshape(%895, newshape=[]) /* ty=float32 */;
  %900 = reshape(%896, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
  %901 = reshape(%898, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %902 = @func_3193(%899, %900, %901) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
  %903 = @func_10032() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(13, 15, 8), bool]) */;
  %904 = %893.0;
  %905 = %902.1;
  %906 = %903.0;
  (%904, %897, %905, 9.82309f /* ty=float32 */, %var_14055, %906)
}

def @func_11004() -> (Tensor[(13, 15, 8), int64],) {
  %907 = @func_7108() /* ty=Tensor[(13, 15, 8), int64] */;
  (%907,)
}

def @func_9481() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool]) {
  %908 = @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %909 = @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %910 = cast(meta[relay.Constant][56] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %911 = reshape(%910, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %912 = %908.0;
  %913 = %909.0;
  %914 = @func_2630(%911) /* ty=Tensor[(2, 5, 12), float32] */;
  %915 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
  (%912, %913, %914, meta[relay.Constant][56] /* ty=Tensor[(120), float32] */, %915)
}

def @func_16291() -> Tensor[(5, 15, 9), float64] {
  @func_7688() /* ty=Tensor[(5, 15, 9), float64] */
}

def @func_20869(%var_20805: bool) -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(14, 4), int8], Tensor[(13, 15, 8), bool], Tensor[(260), float32], Tensor[(13, 15, 8), bool]) {
  %916 = cast(%var_20805, dtype="bool") /* ty=bool */;
  %917 = cast(meta[relay.Constant][57] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %918 = cast(meta[relay.Constant][58] /* ty=Tensor[(14, 4), int8] */, dtype="int8") /* ty=Tensor[(14, 4), int8] */;
  %919 = reshape(%916, newshape=[]) /* ty=bool */;
  %920 = reshape(%917, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %921 = reshape(%918, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %922 = @func_9320(%919, %920, %921) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], bool, bool, Tensor[(260), bool], Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) */;
  %923 = @func_15598() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %924 = cast(meta[relay.Constant][57] /* ty=Tensor[(260), bool] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %925 = cast(%var_20805, dtype="float32") /* ty=float32 */;
  %926 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %927 = @func_17855() /* ty=Tensor[(13, 15, 8), uint64] */;
  %928 = %922.8;
  %929 = %923.0;
  %930 = multiply(%924, %925) /* ty=Tensor[(260), float32] */;
  %931 = %926.0;
  (%927, %928, meta[relay.Constant][58] /* ty=Tensor[(14, 4), int8] */, %929, %930, %931)
}

def @func_10692() -> (Tensor[(13, 15, 8), bool],) {
  %932 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%932,)
}

def @func_19155() -> (Tensor[(13, 15, 8), bool],) {
  %933 = @func_17621() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %934 = %933.0;
  (%934,)
}

def @func_10423() -> (Tensor[(13, 15, 8), float64],) {
  %935 = @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %936 = %935.0;
  (%936,)
}

def @func_16509(%var_16498: bool) -> (Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(13, 15, 8), float32], Tensor[(5, 135), uint64]) {
  %937 = @func_7412() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %938 = @func_6478() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %939 = cast(%var_16498, dtype="bool") /* ty=bool */;
  %940 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 135), float64] */, dtype="float64") /* ty=Tensor[(5, 135), float64] */;
  %941 = reshape(%939, newshape=[]) /* ty=bool */;
  %942 = reshape(%940, newshape=[225, 3]) /* ty=Tensor[(225, 3), float64] */;
  %943 = @func_11529(%941, %942) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(260), bool], Tensor[(6, 20), float32], bool, Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %944 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 135), float64] */, dtype="uint64") /* ty=Tensor[(5, 135), uint64] */;
  %945 = cast(%var_16498, dtype="uint64") /* ty=uint64 */;
  %946 = %937.0;
  %947 = %938.0;
  %948 = @func_15279() /* ty=Tensor[(792), uint32] */;
  %949 = %943.0;
  %950 = bitwise_or(%944, %945) /* ty=Tensor[(5, 135), uint64] */;
  (%946, %947, %948, %949, %950)
}

def @func_9179(%var_9154: Tensor[(36), float32], %var_9155: Tensor[(1, 675), float64]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(675), float64], Tensor[(13, 15, 8), bool]) {
  %951 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %952 = cast(-6.25949f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %953 = cast(%var_9154, dtype="float32") /* ty=Tensor[(36), float32] */;
  %954 = cast(%var_9155, dtype="float64") /* ty=Tensor[(1, 675), float64] */;
  %955 = reshape(%952, newshape=[]) /* ty=float32 */;
  %956 = reshape(%953, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
  %957 = reshape(%954, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %958 = @func_3193(%955, %956, %957) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
  %959 = %958.2;
  %960 = cast(%959, dtype="float64") /* ty=Tensor[(675), float64] */;
  %961 = cast(-6.25949f /* ty=float32 */, dtype="float64") /* ty=float64 */;
  %962 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %963 = %951.0;
  %964 = floor_mod(%960, %961) /* ty=Tensor[(675), float64] */;
  %965 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%962, %963, %var_9154, %var_9155, %964, %965)
}

def @func_2388(%var_2360: Tensor[(675), float64]) -> (Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64]) {
  %966 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 5), float32] */;
  %967 = cast(%var_2360, dtype="float64") /* ty=Tensor[(675), float64] */;
  %968 = reshape(%967, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %969 = @func_201(%968) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %970 = cast(%var_2360, dtype="float64") /* ty=Tensor[(675), float64] */;
  %971 = reshape(%970, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %972 = @func_201(%971) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %973 = log2(%966) /* ty=Tensor[(1, 12, 5), float32] */;
  %974 = %969.0;
  %975 = %972.0;
  (%973, %974, %var_2360, %975)
}

def @func_17285(%var_17263: Tensor[(1560), int64], %var_17270: Tensor[(6, 12, 11), uint32]) -> (Tensor[(325), int64], Tensor[(1560), int64], Tensor[(6, 12, 11), int64]) {
  %976 = @func_17112() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 5, 5), float64], Tensor[(65), int64], Tensor[(325), int64]) */;
  %977 = cast(%var_17263, dtype="int64") /* ty=Tensor[(1560), int64] */;
  %978 = reshape(%977, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), int64] */;
  %979 = @func_7195(%978) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) */;
  %980 = %979.2;
  %981 = cast(%var_17270, dtype="int64") /* ty=Tensor[(6, 12, 11), int64] */;
  %982 = shape_of(%980, dtype="int32") /* ty=Tensor[(3), int32] */;
  %983 = cast(%980, dtype="int64") /* ty=Tensor[(6, 12, 11), int64] */;
  %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %985 = %976.3;
  %986 = logical_xor(%983, %984) /* ty=Tensor[(6, 12, 11), int64] */;
  (%985, %var_17263, %986)
}

def @func_10997(%var_10972: Tensor[(24, 10), bool], %var_10974: uint8) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), float32], Tensor[(3, 5, 16), float32], Tensor[(24, 10), bool], Tensor[(675), float64], uint8, Tensor[(56), int8]) {
  %987 = @func_10032() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(13, 15, 8), bool]) */;
  %988 = @func_10423() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %989 = @func_9679() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) */;
  %990 = cast(%var_10972, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %991 = cast(meta[relay.Constant][61] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %992 = cast(%var_10974, dtype="uint8") /* ty=uint8 */;
  %993 = cast(meta[relay.Constant][62] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %994 = reshape(%990, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), bool] */;
  %995 = reshape(%991, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %996 = reshape(%992, newshape=[]) /* ty=uint8 */;
  %997 = reshape(%993, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %998 = @func_5241(%994, %995, %996, %997) /* ty=(Tensor[(3, 5, 16), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(3, 5, 16), float32], Tensor[(15, 1, 2), uint8], uint8, Tensor[(30), uint8], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
  %999 = %987.1;
  %1000 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
  %1001 = %988.0;
  %1002 = %989.1;
  %1003 = %998.3;
  (%999, %1000, %1001, %1002, %1003, %var_10972, meta[relay.Constant][61] /* ty=Tensor[(675), float64] */, %var_10974, meta[relay.Constant][62] /* ty=Tensor[(56), int8] */)
}

def @func_12585() -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
  %1004 = @func_12178() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1005 = @func_10852() /* ty=Tensor[(5, 15, 9), float32] */;
  %1006 = %1004.1;
  (%1005, %1006)
}

def @func_9526() -> Tensor[(13, 15, 8), int64] {
  %1007 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1007.0
}

def @func_13459() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %1008 = @func_10388() /* ty=(Tensor[(13, 15, 8), int64],) */;
  %1009 = @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1010 = %1008.0;
  %1011 = %1009.0;
  (%1010, %1011)
}

def @func_17476() -> (Tensor[(13, 15, 8), bool],) {
  %1012 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %1013 = %1012.0;
  (%1013,)
}

def @func_15873() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(36), float32]) {
  %1014 = cast(meta[relay.Constant][63] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %1015 = reshape(%1014, newshape=[3, 12]) /* ty=Tensor[(3, 12), float32] */;
  %1016 = @func_14515(%1015) /* ty=(Tensor[(792, 1), uint32], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), uint64], Tensor[(3, 12), float32], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) */;
  %1017 = @func_14688() /* ty=Tensor[(13, 15, 8), bool] */;
  %1018 = %1016.2;
  (%1017, %1018, meta[relay.Constant][63] /* ty=Tensor[(36), float32] */)
}

def @func_17849() -> (Tensor[(13, 15, 8), bool],) {
  %1019 = @func_9025() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1020 = %1019.4;
  (%1020,)
}

def @func_14529() -> (Tensor[(13, 15, 8), uint64],) {
  %1021 = @func_11717() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%1021,)
}

def @func_15695(%var_15677: Tensor[(1620), float32], %var_15678: Tensor[(36), float32]) -> (Tensor[(5, 15, 9), float32], Tensor[(60, 2), float32], Tensor[(1620), float32], Tensor[(36), float32], bool, Tensor[(2, 28), int8]) {
  %1022 = cast(%var_15677, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1023 = cast(%var_15677, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %1024 = cast(%var_15678, dtype="float32") /* ty=Tensor[(36), float32] */;
  %1025 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1026 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 28), int8] */, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
  %1027 = reshape(%1022, newshape=[18, 90]) /* ty=Tensor[(18, 90), float32] */;
  %1028 = reshape(%1023, newshape=[18, 90]) /* ty=Tensor[(18, 90), int64] */;
  %1029 = reshape(%1024, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %1030 = reshape(%1025, newshape=[]) /* ty=bool */;
  %1031 = reshape(%1026, newshape=[28, 2]) /* ty=Tensor[(28, 2), int8] */;
  %1032 = @func_8702(%1027, %1028, %1029, %1030, %1031) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 90), float32], Tensor[(675), float64], Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool], Tensor[(60, 2), float32], bool, Tensor[(792), uint32], Tensor[(28, 2), int8]) */;
  %1033 = @func_14161() /* ty=Tensor[(5, 15, 9), float32] */;
  %1034 = %1032.7;
  (%1033, %1034, %var_15677, %var_15678, True /* ty=bool */, meta[relay.Constant][64] /* ty=Tensor[(2, 28), int8] */)
}

def @func_12371() -> (Tensor[(13, 15, 8), int64],) {
  %1035 = @func_11461() /* ty=Tensor[(13, 15, 8), int64] */;
  (%1035,)
}

def @func_17464() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %1036 = @func_16117() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1037 = @func_11461() /* ty=Tensor[(13, 15, 8), int64] */;
  %1038 = %1036.0;
  (%1037, %1038)
}

def @func_21324(%var_21285: Tensor[(18, 70), bool], %var_21309: Tensor[(240), float32]) -> (Tensor[(18, 70), int16], Tensor[(5, 15, 9), float64], Tensor[(1, 624), float32], Tensor[(675), float64], Tensor[(18, 70), uint16], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool], Tensor[(240), float32]) {
  %1039 = @func_15115() /* ty=(Tensor[(18, 70), bool], Tensor[(18, 70), float64]) */;
  %1040 = %1039.0;
  %1041 = cast(meta[relay.Constant][65] /* ty=Tensor[(18, 70), bool] */, dtype="int16") /* ty=Tensor[(18, 70), int16] */;
  %1042 = shape_of(%1040, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1043 = cast(%1040, dtype="int16") /* ty=Tensor[(18, 70), int16] */;
  %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1045 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 624), float32] */, dtype="float32") /* ty=Tensor[(1, 624), float32] */;
  %1046 = cast(meta[relay.Constant][67] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1047 = reshape(%1045, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float32] */;
  %1048 = reshape(%1046, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %1049 = @func_13660(%1047, %1048) /* ty=(Tensor[(8, 13, 6), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(13, 15, 8), int64]) */;
  %1050 = cast(%var_21285, dtype="uint16") /* ty=Tensor[(18, 70), uint16] */;
  %1051 = shape_of(%1040, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1052 = cast(%1040, dtype="uint16") /* ty=Tensor[(18, 70), uint16] */;
  %1053 = dyn.reshape(%1050, %1051, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1054 = cast(meta[relay.Constant][68] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1055 = reshape(%1054, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %1056 = cast(%var_21309, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1057 = reshape(%1056, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), float32] */;
  %1058 = @func_17986(%1057) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(4, 15, 4), float64], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1059 = right_shift(%1043, %1044) /* ty=Tensor[(18, 70), int16] */;
  %1060 = %1049.1;
  %1061 = left_shift(%1052, %1053) /* ty=Tensor[(18, 70), uint16] */;
  %1062 = @func_2630(%1055) /* ty=Tensor[(2, 5, 12), float32] */;
  %1063 = %1058.5;
  (%1059, %1060, meta[relay.Constant][66] /* ty=Tensor[(1, 624), float32] */, meta[relay.Constant][67] /* ty=Tensor[(675), float64] */, %1061, %1062, meta[relay.Constant][68] /* ty=Tensor[(120), float32] */, %1063, %var_21309)
}

def @func_9342() -> (Tensor[(13, 15, 8), bool],) {
  %1064 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1065 = %1064.1;
  (%1065,)
}

def @func_21584(%var_21548: uint8, %var_21558: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), int64], Tensor[(15, 1, 2), uint8], uint8, Tensor[(5, 6), uint8], bool, Tensor[(120), float32], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) {
  %1066 = cast(%var_21548, dtype="uint8") /* ty=uint8 */;
  %1067 = cast(meta[relay.Constant][69] /* ty=Tensor[(5, 6), uint8] */, dtype="uint8") /* ty=Tensor[(5, 6), uint8] */;
  %1068 = reshape(%1066, newshape=[]) /* ty=uint8 */;
  %1069 = reshape(%1067, newshape=[15, 1, 2]) /* ty=Tensor[(15, 1, 2), uint8] */;
  %1070 = @func_3464(%1068, %1069) /* ty=(Tensor[(15, 1, 2), uint8],) */;
  %1071 = cast(meta[relay.Constant][70] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1072 = cast(%var_21548, dtype="bool") /* ty=bool */;
  %1073 = cast(meta[relay.Constant][71] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1074 = cast(%var_21558, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1075 = reshape(%1071, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %1076 = reshape(%1072, newshape=[]) /* ty=bool */;
  %1077 = reshape(%1073, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %1078 = reshape(%1074, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1079 = @func_19754(%1075, %1076, %1077, %1078) /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(120), float32], bool, Tensor[(675), float64], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %1080 = @func_12804() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */;
  %1081 = @func_13156() /* ty=Tensor[(13, 15, 8), int64] */;
  %1082 = %1070.0;
  %1083 = %1079.3;
  %1084 = %1080.0;
  %1085 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
  %1086 = @func_11717() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%1081, %1082, %var_21548, meta[relay.Constant][69] /* ty=Tensor[(5, 6), uint8] */, %1083, meta[relay.Constant][70] /* ty=Tensor[(120), float32] */, meta[relay.Constant][71] /* ty=Tensor[(792), uint32] */, %var_21558, %1084, %1085, %1086)
}

def @func_6646() -> (Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) {
  %1087 = cast(-6.63516f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1088 = cast(meta[relay.Constant][72] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %1089 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 675), float64] */, dtype="float64") /* ty=Tensor[(1, 675), float64] */;
  %1090 = reshape(%1087, newshape=[]) /* ty=float32 */;
  %1091 = reshape(%1088, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
  %1092 = reshape(%1089, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %1093 = @func_3193(%1090, %1091, %1092) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
  %1094 = cast(-6.63516f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %1095 = cast(meta[relay.Constant][74] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %1096 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 675), float64] */, dtype="float64") /* ty=Tensor[(1, 675), float64] */;
  %1097 = cast(meta[relay.Constant][75] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1098 = cast(meta[relay.Constant][76] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1099 = reshape(%1094, newshape=[]) /* ty=bool */;
  %1100 = reshape(%1095, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), bool] */;
  %1101 = reshape(%1096, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %1102 = reshape(%1097, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %1103 = reshape(%1098, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1104 = @func_5121(%1099, %1100, %1101, %1102, %1103) /* ty=(Tensor[(10, 13, 2), bool], Tensor[(675), float64], Tensor[(36), float32], Tensor[(675), float64], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
  %1105 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %1106 = %1093.3;
  %1107 = %1104.6;
  (%1105, %1106, -6.63516f /* ty=float32 */, meta[relay.Constant][72] /* ty=Tensor[(36), float32] */, meta[relay.Constant][73] /* ty=Tensor[(1, 675), float64] */, %1107, meta[relay.Constant][74] /* ty=Tensor[(260), bool] */, meta[relay.Constant][75] /* ty=Tensor[(792), uint32] */, meta[relay.Constant][76] /* ty=Tensor[(56), int8] */)
}

def @func_6187() -> Tensor[(13, 15, 8), int64] {
  %1108 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
  %1109 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  %1110 = cast(%1109, dtype="int64") /* ty=Tensor[(13, 15, 8), int64] */;
  %1111 = shape_of(%1108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1112 = cast(%1108, dtype="int64") /* ty=Tensor[(13, 15, 8), int64] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_or(%1112, %1113) /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_11559() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1114 = @func_9342() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1115 = %1114.0;
  %1116 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1115, %1116)
}

def @func_21520() -> Tensor[(13, 15, 8), float32] {
  %1117 = @func_9888() /* ty=(Tensor[(13, 15, 8), float32],) */;
  %1117.0
}

def @func_10388() -> (Tensor[(13, 15, 8), int64],) {
  %1118 = @func_9526() /* ty=Tensor[(13, 15, 8), int64] */;
  (%1118,)
}

def @func_9320(%var_9290: bool, %var_9291: Tensor[(260), bool], %var_9294: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], bool, bool, Tensor[(260), bool], Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) {
  %1119 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1120 = cast(%var_9290, dtype="bool") /* ty=bool */;
  %1121 = cast(%var_9291, dtype="bool") /* ty=Tensor[(260), bool] */;
  %1122 = cast(meta[relay.Constant][77] /* ty=Tensor[(225, 3), float64] */, dtype="float64") /* ty=Tensor[(225, 3), float64] */;
  %1123 = cast(meta[relay.Constant][78] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1124 = cast(%var_9294, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1125 = reshape(%1120, newshape=[]) /* ty=bool */;
  %1126 = reshape(%1121, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %1127 = reshape(%1122, newshape=[675, 1]) /* ty=Tensor[(675, 1), float64] */;
  %1128 = reshape(%1123, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %1129 = reshape(%1124, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1130 = @func_8389(%1125, %1126, %1127, %1128, %1129) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %1131 = cast(meta[relay.Constant][79] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1132 = reshape(%1131, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %1133 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %1134 = %1119.0;
  %1135 = %1130.5;
  %1136 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %1137 = @func_7688() /* ty=Tensor[(5, 15, 9), float64] */;
  %1138 = @func_2630(%1132) /* ty=Tensor[(2, 5, 12), float32] */;
  (%1133, %1134, %1135, %var_9290, %var_9291, meta[relay.Constant][77] /* ty=Tensor[(225, 3), float64] */, meta[relay.Constant][78] /* ty=Tensor[(792), uint32] */, %var_9294, %1136, %1137, %1138, meta[relay.Constant][79] /* ty=Tensor[(120), float32] */)
}

def @func_7420() -> Tensor[(13, 15, 8), bool] {
  %1139 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %1139.0
}

def @func_11571() -> (Tensor[(13, 15, 8), bool],) {
  %1140 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1141 = %1140.0;
  (%1141,)
}

def @func_12856() -> Tensor[(13, 15, 8), bool] {
  @func_5897() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_6485() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %1142 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1143 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %1144 = %1142.0;
  (%1143, %1144)
}

def @func_21851(%var_21825: Tensor[(15, 9, 11), float64]) -> (Tensor[(15, 9, 1), float64], Tensor[(3, 45), float64], Tensor[(15, 9, 11), float64]) {
  %1145 = cast(meta[relay.Constant][80] /* ty=Tensor[(3, 45), float64] */, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %1146 = reshape(%1145, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), float64] */;
  %1147 = cast(%var_21825, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %1148 = atan(%1147) /* ty=Tensor[(15, 9, 11), float64] */;
  %1149 = cast(%1148, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %1150 = @func_11699(%1146) /* ty=Tensor[(15, 9, 1), float64] */;
  %1151 = sin(%1149) /* ty=Tensor[(15, 9, 11), float64] */;
  (%1150, meta[relay.Constant][80] /* ty=Tensor[(3, 45), float64] */, %1151)
}

def @func_17374() -> (Tensor[(13, 15, 8), bool],) {
  %1152 = @func_9342() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1153 = %1152.0;
  (%1153,)
}

def @func_16224() -> Tensor[(13, 15, 8), bool] {
  %1154 = @func_12835() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1154.0
}

def @func_20016() -> Tensor[(13, 15, 8), int64] {
  @func_9526() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_18260() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
  %1155 = @func_12953() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1156 = @func_12371() /* ty=(Tensor[(13, 15, 8), int64],) */;
  %1157 = %1155.1;
  %1158 = %1156.0;
  (%1157, %1158)
}

def @func_18653() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
  %1159 = @func_18052() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */;
  %1160 = @func_6478() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1161 = @func_16574() /* ty=Tensor[(13, 15, 8), bool] */;
  %1162 = %1159.2;
  %1163 = %1160.0;
  (%1161, %1162, %1163)
}

def @func_9643() -> (Tensor[(13, 15, 8), uint64],) {
  %1164 = @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%1164,)
}

def @func_20204() -> (Tensor[(13, 15, 8), uint64],) {
  %1165 = @func_16033() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%1165,)
}

def @func_1891(%var_1851: Tensor[(10, 14, 9), float32]) -> (Tensor[(10, 14, 9), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64]) {
  %1166 = cast(%var_1851, dtype="float32") /* ty=Tensor[(10, 14, 9), float32] */;
  %1167 = cast(meta[relay.Constant][81] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1168 = reshape(%1167, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %1169 = @func_201(%1168) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %1170 = %1169.0;
  %1171 = cast(%1170, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %1172 = reshape(%1171, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %1173 = @func_201(%1172) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %1174 = %1173.0;
  %1175 = cast(%1174, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %1176 = reshape(%1175, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %1177 = @func_201(%1176) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %1178 = %1177.0;
  %1179 = cast(%1178, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %1180 = reshape(%1179, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %1181 = @func_201(%1180) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %1182 = acos(%1166) /* ty=Tensor[(10, 14, 9), float32] */;
  %1183 = %1181.0;
  (%1182, %1170, meta[relay.Constant][81] /* ty=Tensor[(675), float64] */, %1174, %1178, %1183)
}

def @func_12100(%var_12093: Tensor[(1287), float64]) -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], Tensor[(1287), float64], bool, Tensor[(13, 15, 8), bool]) {
  %1184 = cast(%var_12093, dtype="float64") /* ty=Tensor[(1287), float64] */;
  %1185 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1186 = reshape(%1184, newshape=[1287]) /* ty=Tensor[(1287), float64] */;
  %1187 = reshape(%1185, newshape=[]) /* ty=bool */;
  %1188 = @func_11808(%1186, %1187) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(6, 12, 11), uint32], Tensor[(1287), float64], bool, Tensor[(56), int8], Tensor[(36, 1), float32], Tensor[(13, 15, 8), int64]) */;
  %1189 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1190 = @func_11461() /* ty=Tensor[(13, 15, 8), int64] */;
  %1191 = %1188.0;
  %1192 = %1189.0;
  (%1190, %1191, %var_12093, False /* ty=bool */, %1192)
}

def @func_15115() -> (Tensor[(18, 70), bool], Tensor[(18, 70), float64]) {
  %1193 = @func_13232() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32], Tensor[(1260), float32]) */;
  %1194 = %1193.1;
  %1195 = cast(%1194, dtype="float32") /* ty=Tensor[(18, 70), float32] */;
  %1196 = atanh(%1195) /* ty=Tensor[(18, 70), float32] */;
  %1197 = cast(%1194, dtype="bool") /* ty=Tensor[(18, 70), bool] */;
  %1198 = shape_of(%1196, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1199 = cast(%1196, dtype="bool") /* ty=Tensor[(18, 70), bool] */;
  %1200 = dyn.reshape(%1197, %1198, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1201 = cast(%1196, dtype="float32") /* ty=Tensor[(18, 70), float32] */;
  %1202 = sinh(%1201) /* ty=Tensor[(18, 70), float32] */;
  %1203 = cast(%1196, dtype="float64") /* ty=Tensor[(18, 70), float64] */;
  %1204 = shape_of(%1202, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1205 = cast(%1202, dtype="float64") /* ty=Tensor[(18, 70), float64] */;
  %1206 = dyn.reshape(%1203, %1204, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1207 = greater_equal(%1199, %1200) /* ty=Tensor[(18, 70), bool] */;
  %1208 = power(%1205, %1206) /* ty=Tensor[(18, 70), float64] */;
  (%1207, %1208)
}

def @func_10292() -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) {
  %1209 = @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1210 = cast(meta[relay.Constant][82] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1211 = reshape(%1210, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %1212 = @func_2388(%1211) /* ty=(Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64]) */;
  %1213 = %1209.0;
  %1214 = %1212.3;
  (%1213, %1214, meta[relay.Constant][82] /* ty=Tensor[(675), float64] */)
}

def @func_10768() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
  %1215 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
  %1216 = @func_6785() /* ty=Tensor[(13, 15, 8), bool] */;
  %1217 = @func_9526() /* ty=Tensor[(13, 15, 8), int64] */;
  (%1215, %1216, %1217)
}

def @func_11262() -> (Tensor[(5, 15, 9), float64],) {
  %1218 = @func_6308() /* ty=(Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) */;
  %1219 = %1218.1;
  (%1219,)
}

def @func_7231(%var_7222: Tensor[(18, 2), float32]) -> Tensor[(18, 2), int64] {
  %1220 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %1221 = %1220.2;
  %1222 = cast(%var_7222, dtype="int64") /* ty=Tensor[(18, 2), int64] */;
  %1223 = shape_of(%1221, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1224 = cast(%1221, dtype="int64") /* ty=Tensor[(18, 2), int64] */;
  %1225 = dyn.reshape(%1222, %1223, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  maximum(%1224, %1225) /* ty=Tensor[(18, 2), int64] */
}

def @func_21153() -> Tensor[(260), bool] {
  %1226 = @func_19918() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(260), bool]) */;
  %1226.2
}

def @func_9705() -> Tensor[(5, 15, 9), float32] {
  %1227 = @func_7688() /* ty=Tensor[(5, 15, 9), float64] */;
  %1228 = cast(%1227, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %1229 = reshape(%1228, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %1230 = @func_201(%1229) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %1231 = %1230.0;
  %1232 = cast(%1227, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %1233 = shape_of(%1231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1234 = cast(%1231, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %1235 = dyn.reshape(%1232, %1233, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%1234, %1235) /* ty=Tensor[(5, 15, 9), float32] */
}

def @func_9412() -> (Tensor[(13, 15, 8), bool],) {
  %1236 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1237 = %1236.1;
  (%1237,)
}

def @func_2630(%var_2620: Tensor[(2, 5, 12), float32]) -> Tensor[(2, 5, 12), float32] {
  %1238 = cast(%var_2620, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
  acos(%1238) /* ty=Tensor[(2, 5, 12), float32] */
}

def @func_14688() -> Tensor[(13, 15, 8), bool] {
  %1239 = @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1239.0
}

def @func_16859() -> (Tensor[(13, 15, 8), bool],) {
  %1240 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1240,)
}

def @func_15784() -> (Tensor[(13, 15, 8), bool],) {
  %1241 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1242 = %1241.1;
  (%1242,)
}

def @func_7108() -> Tensor[(13, 15, 8), int64] {
  %1243 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1243.0
}

def @func_13609(%var_13595: Tensor[(260, 1), bool], %var_13598: Tensor[(28, 2), int8]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260, 1), bool], Tensor[(675), float64], Tensor[(792), uint32], Tensor[(28, 2), int8], Tensor[(13, 15, 8), int64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) {
  %1244 = @func_11947() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1245 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1246 = cast(%var_13595, dtype="bool") /* ty=Tensor[(260, 1), bool] */;
  %1247 = cast(meta[relay.Constant][83] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1248 = cast(meta[relay.Constant][84] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1249 = cast(%var_13598, dtype="int8") /* ty=Tensor[(28, 2), int8] */;
  %1250 = reshape(%1245, newshape=[]) /* ty=bool */;
  %1251 = reshape(%1246, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %1252 = reshape(%1247, newshape=[675, 1]) /* ty=Tensor[(675, 1), float64] */;
  %1253 = reshape(%1248, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %1254 = reshape(%1249, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1255 = @func_8389(%1250, %1251, %1252, %1253, %1254) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %1256 = @func_12371() /* ty=(Tensor[(13, 15, 8), int64],) */;
  %1257 = cast(meta[relay.Constant][85] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1258 = reshape(%1257, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %1259 = %1244.0;
  %1260 = %1255.10;
  %1261 = %1256.0;
  %1262 = @func_2630(%1258) /* ty=Tensor[(2, 5, 12), float32] */;
  (%1259, %1260, True /* ty=bool */, %var_13595, meta[relay.Constant][83] /* ty=Tensor[(675), float64] */, meta[relay.Constant][84] /* ty=Tensor[(792), uint32] */, %var_13598, %1261, %1262, meta[relay.Constant][85] /* ty=Tensor[(120), float32] */)
}

def @func_6366(%var_6357: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float64],) {
  %1263 = cast(meta[relay.Constant][86] /* ty=Tensor[(15, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
  %1264 = atan(%1263) /* ty=Tensor[(15, 9, 12), float32] */;
  %1265 = cast(%var_6357, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %1266 = shape_of(%1264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1267 = cast(%1264, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %1268 = dyn.reshape(%1265, %1266, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1269 = floor_divide(%1267, %1268) /* ty=Tensor[(15, 9, 12), float64] */;
  (%1269,)
}

def @func_17112() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 5, 5), float64], Tensor[(65), int64], Tensor[(325), int64]) {
  %1270 = @func_12804() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */;
  %1271 = cast(meta[relay.Constant][87] /* ty=Tensor[(65), int64] */, dtype="int64") /* ty=Tensor[(65), int64] */;
  %1272 = cast(meta[relay.Constant][88] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %1273 = reshape(%1271, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), int64] */;
  %1274 = reshape(%1272, newshape=[13, 5, 5]) /* ty=Tensor[(13, 5, 5), int64] */;
  %1275 = @func_11106(%1273, %1274) /* ty=(Tensor[(13, 5, 5), float64],) */;
  %1276 = %1270.0;
  %1277 = %1275.0;
  (%1276, %1277, meta[relay.Constant][87] /* ty=Tensor[(65), int64] */, meta[relay.Constant][88] /* ty=Tensor[(325), int64] */)
}

def @func_14818(%var_14797: Tensor[(16, 6, 8), float32], %var_14798: Tensor[(16, 6, 8), float32]) -> (Tensor[(16, 6, 8), float32], Tensor[(16, 6, 8), float64]) {
  %1278 = cast(%var_14798, dtype="float32") /* ty=Tensor[(16, 6, 8), float32] */;
  %1279 = shape_of(%var_14797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1280 = cast(%var_14797, dtype="float32") /* ty=Tensor[(16, 6, 8), float32] */;
  %1281 = dyn.reshape(%1278, %1279, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1282 = cast(%var_14797, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
  %1283 = shape_of(%var_14798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1284 = cast(%var_14798, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
  %1285 = dyn.reshape(%1282, %1283, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1286 = floor_divide(%1280, %1281) /* ty=Tensor[(16, 6, 8), float32] */;
  %1287 = mod(%1284, %1285) /* ty=Tensor[(16, 6, 8), float64] */;
  (%1286, %1287)
}

def @func_7195(%var_7184: Tensor[(13, 15, 8), int64]) -> (Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) {
  %1288 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %1289 = cast(%1288, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
  %1290 = cast(%var_7184, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %1291 = shape_of(%1288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1292 = cast(%1288, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %1293 = dyn.reshape(%1290, %1291, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1294 = cast(%var_7184, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %1295 = reshape(%1294, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), bool] */;
  %1296 = @func_6150(%1295) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */;
  %1297 = atanh(%1289) /* ty=Tensor[(13, 15, 8), float32] */;
  %1298 = logical_and(%1292, %1293) /* ty=Tensor[(13, 15, 8), bool] */;
  %1299 = %1296.1;
  (%1297, %1298, %1299)
}

def @func_10478(%var_10469: Tensor[(630, 2), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(630, 2), float32]) {
  %1300 = cast(%var_10469, dtype="float32") /* ty=Tensor[(630, 2), float32] */;
  %1301 = reshape(%1300, newshape=[10, 14, 9]) /* ty=Tensor[(10, 14, 9), float32] */;
  %1302 = @func_1891(%1301) /* ty=(Tensor[(10, 14, 9), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64]) */;
  %1303 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  %1304 = %1302.4;
  (%1303, %1304, %var_10469)
}

def @func_20649(%var_20618: Tensor[(36), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(3, 10, 12), int64], Tensor[(180, 2), int64]) {
  %1305 = @func_13002() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1306 = cast(%var_20618, dtype="float32") /* ty=Tensor[(36), float32] */;
  %1307 = reshape(%1306, newshape=[18, 2]) /* ty=Tensor[(18, 2), float32] */;
  %1308 = cast(meta[relay.Constant][89] /* ty=Tensor[(180, 2), int64] */, dtype="int64") /* ty=Tensor[(180, 2), int64] */;
  %1309 = cast(meta[relay.Constant][89] /* ty=Tensor[(180, 2), int64] */, dtype="int64") /* ty=Tensor[(180, 2), int64] */;
  %1310 = reshape(%1308, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), int64] */;
  %1311 = reshape(%1309, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), int64] */;
  %1312 = @func_14465(%1310, %1311) /* ty=(Tensor[(3, 10, 12), int64],) */;
  %1313 = %1305.0;
  %1314 = @func_7231(%1307) /* ty=Tensor[(18, 2), int64] */;
  %1315 = %1312.0;
  (%1313, %1314, %var_20618, %1315, meta[relay.Constant][89] /* ty=Tensor[(180, 2), int64] */)
}

def @func_21444(%var_21429: Tensor[(12, 8, 4), bool]) -> (Tensor[(12, 8, 4), bool], Tensor[(675), float64]) {
  %1316 = cast(meta[relay.Constant][90] /* ty=Tensor[(12, 8, 4), bool] */, dtype="bool") /* ty=Tensor[(12, 8, 4), bool] */;
  %1317 = shape_of(%var_21429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1318 = cast(%var_21429, dtype="bool") /* ty=Tensor[(12, 8, 4), bool] */;
  %1319 = dyn.reshape(%1316, %1317, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1320 = @func_14441() /* ty=(Tensor[(675), float64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1321 = logical_or(%1318, %1319) /* ty=Tensor[(12, 8, 4), bool] */;
  %1322 = %1320.0;
  (%1321, %1322)
}

def @func_18855() -> (Tensor[(13, 15, 8), int64],) {
  %1323 = @func_13578() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 132), uint32]) */;
  %1324 = %1323.0;
  (%1324,)
}

def @func_15140() -> (Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool]) {
  %1325 = @func_13720() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %1326 = @func_7688() /* ty=Tensor[(5, 15, 9), float64] */;
  %1327 = %1325.1;
  (%1326, %1327)
}

def @func_20197() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1328 = @func_10827() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1329 = %1328.0;
  %1330 = @func_16574() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1329, %1330)
}

def @func_21496() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1331 = @func_6234() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1332 = %1331.0;
  %1333 = @func_21036() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1332, %1333)
}

def @func_3193(%var_3159: float32, %var_3160: Tensor[(6, 6, 1), float32], %var_3183: Tensor[(675), float64]) -> (Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) {
  %1334 = cast(%var_3159, dtype="float32") /* ty=float32 */;
  %1335 = cast(%var_3160, dtype="float32") /* ty=Tensor[(6, 6, 1), float32] */;
  %1336 = cast(%var_3183, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1337 = reshape(%1336, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %1338 = @func_201(%1337) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %1339 = cast(meta[relay.Constant][91] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %1340 = reshape(%1339, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %1341 = power(%1334, %1335) /* ty=Tensor[(6, 6, 1), float32] */;
  %1342 = %1338.0;
  %1343 = @func_2630(%1340) /* ty=Tensor[(2, 5, 12), float32] */;
  (%1341, %1342, %var_3183, %1343, meta[relay.Constant][91] /* ty=Tensor[(30, 4), float32] */)
}

def @func_19533() -> (Tensor[(13, 15, 8), uint64],) {
  %1344 = @func_16033() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%1344,)
}

def @func_21765(%var_21695: Tensor[(12, 5, 8), int32]) -> (Tensor[(13, 15, 8), bool], Tensor[(12, 5, 8), bool], Tensor[(12, 5, 8), float32], Tensor[(13, 15, 8), int64]) {
  %1345 = @func_20966() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1346 = cast(%var_21695, dtype="int32") /* ty=Tensor[(12, 5, 8), int32] */;
  %1347 = shape_of(meta[relay.Constant][92] /* ty=Tensor[(12, 5, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1348 = cast(meta[relay.Constant][92] /* ty=Tensor[(12, 5, 8), int32] */, dtype="int32") /* ty=Tensor[(12, 5, 8), int32] */;
  %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1350 = subtract(%1348, %1349) /* ty=Tensor[(12, 5, 8), int32] */;
  %1351 = cast(meta[relay.Constant][92] /* ty=Tensor[(12, 5, 8), int32] */, dtype="bool") /* ty=Tensor[(12, 5, 8), bool] */;
  %1352 = shape_of(%1350, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1353 = cast(%1350, dtype="bool") /* ty=Tensor[(12, 5, 8), bool] */;
  %1354 = dyn.reshape(%1351, %1352, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1355 = cast(%1350, dtype="float32") /* ty=Tensor[(12, 5, 8), float32] */;
  %1356 = shape_of(%var_21695, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1357 = cast(%var_21695, dtype="float32") /* ty=Tensor[(12, 5, 8), float32] */;
  %1358 = dyn.reshape(%1355, %1356, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1359 = %1345.0;
  %1360 = greater(%1353, %1354) /* ty=Tensor[(12, 5, 8), bool] */;
  %1361 = minimum(%1357, %1358) /* ty=Tensor[(12, 5, 8), float32] */;
  %1362 = @func_12716() /* ty=Tensor[(13, 15, 8), int64] */;
  (%1359, %1360, %1361, %1362)
}

def @func_8389(%var_8343: bool, %var_8344: Tensor[(260), bool], %var_8345: Tensor[(675, 1), float64], %var_8346: Tensor[(792), uint32], %var_8347: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) {
  %1363 = @func_7412() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %1364 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1365 = @func_6234() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1366 = cast(%var_8343, dtype="bool") /* ty=bool */;
  %1367 = cast(%var_8344, dtype="bool") /* ty=Tensor[(260), bool] */;
  %1368 = cast(%var_8345, dtype="float64") /* ty=Tensor[(675, 1), float64] */;
  %1369 = cast(%var_8346, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1370 = cast(%var_8347, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1371 = reshape(%1366, newshape=[]) /* ty=bool */;
  %1372 = reshape(%1367, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), bool] */;
  %1373 = reshape(%1368, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %1374 = reshape(%1369, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %1375 = reshape(%1370, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1376 = @func_5121(%1371, %1372, %1373, %1374, %1375) /* ty=(Tensor[(10, 13, 2), bool], Tensor[(675), float64], Tensor[(36), float32], Tensor[(675), float64], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
  %1377 = @func_7949() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1378 = %1363.0;
  %1379 = @func_7657() /* ty=Tensor[(13, 15, 8), bool] */;
  %1380 = %1364.0;
  %1381 = %1365.0;
  %1382 = %1376.5;
  %1383 = %1377.0;
  (%1378, %1379, %1380, %1381, %1382, %var_8343, %var_8344, %var_8345, %var_8346, %var_8347, %1383)
}

def @func_18358() -> (Tensor[(13, 15, 8), bool],) {
  %1384 = @func_16117() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1385 = %1384.0;
  (%1385,)
}

def @func_21058() -> (Tensor[(13, 15, 8), float32],) {
  %1386 = @func_20038() /* ty=Tensor[(13, 15, 8), float32] */;
  (%1386,)
}

def @func_8702(%var_8666: Tensor[(18, 90), float32], %var_8680: Tensor[(18, 90), int64], %var_8692: Tensor[(1, 36), float32], %var_8697: bool, %var_8699: Tensor[(28, 2), int8]) -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 90), float32], Tensor[(675), float64], Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool], Tensor[(60, 2), float32], bool, Tensor[(792), uint32], Tensor[(28, 2), int8]) {
  %1387 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1388 = cast(%var_8666, dtype="float32") /* ty=Tensor[(18, 90), float32] */;
  %1389 = reshape(%1388, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %1390 = @func_6366(%1389) /* ty=(Tensor[(15, 9, 12), float64],) */;
  %1391 = %1390.0;
  %1392 = cast(%1391, dtype="int64") /* ty=Tensor[(15, 9, 12), int64] */;
  %1393 = shape_of(%var_8666, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1394 = cast(%var_8666, dtype="int64") /* ty=Tensor[(18, 90), int64] */;
  %1395 = dyn.reshape(%1392, %1393, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1396 = minimum(%1394, %1395) /* ty=Tensor[(18, 90), int64] */;
  %1397 = cast(%var_8680, dtype="float32") /* ty=Tensor[(18, 90), float32] */;
  %1398 = shape_of(%1396, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1399 = cast(%1396, dtype="float32") /* ty=Tensor[(18, 90), float32] */;
  %1400 = dyn.reshape(%1397, %1398, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1401 = cast(%var_8692, dtype="float32") /* ty=Tensor[(1, 36), float32] */;
  %1402 = reshape(%1401, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %1403 = @func_5938(%1402) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], float32, Tensor[(36), float32], Tensor[(675), float64]) */;
  %1404 = cast(meta[relay.Constant][93] /* ty=Tensor[(60, 2), float32] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %1405 = cast(%var_8697, dtype="bool") /* ty=bool */;
  %1406 = %1403.4;
  %1407 = cast(%1406, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1408 = cast(meta[relay.Constant][94] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1409 = cast(%var_8699, dtype="int8") /* ty=Tensor[(28, 2), int8] */;
  %1410 = reshape(%1404, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %1411 = reshape(%1405, newshape=[]) /* ty=bool */;
  %1412 = reshape(%1407, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %1413 = reshape(%1408, newshape=[12, 66]) /* ty=Tensor[(12, 66), uint32] */;
  %1414 = reshape(%1409, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1415 = @func_8148(%1410, %1411, %1412, %1413, %1414) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(260), bool], Tensor[(12, 66), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) */;
  %1416 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %1417 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  %1418 = %1387.1;
  %1419 = multiply(%1399, %1400) /* ty=Tensor[(18, 90), float32] */;
  %1420 = %1415.6;
  (%1416, %1417, %1418, %1419, %1406, %var_8692, %1420, meta[relay.Constant][93] /* ty=Tensor[(60, 2), float32] */, %var_8697, meta[relay.Constant][94] /* ty=Tensor[(792), uint32] */, %var_8699)
}

def @func_6088() -> Tensor[(13, 15, 8), bool] {
  @func_5897() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_10206() -> Tensor[(13, 15, 8), bool] {
  %1421 = @func_9582() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1421.2
}

def @func_17564(%var_17534: Tensor[(2, 16, 13), float32], %var_17546: Tensor[(1260), float32]) -> (Tensor[(2, 16, 13), float32], Tensor[(5, 15, 9), float64], Tensor[(1260), float32], Tensor[(240), bool], Tensor[(36, ?), uint64]) {
  %1422 = cast(%var_17534, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  %1423 = cast(%var_17546, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1424 = cast(meta[relay.Constant][95] /* ty=Tensor[(36, 1), float32] */, dtype="float32") /* ty=Tensor[(36, 1), float32] */;
  %1425 = cast(meta[relay.Constant][96] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %1426 = reshape(%1423, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float32] */;
  %1427 = reshape(%1424, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %1428 = reshape(%1425, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %1429 = @func_8476(%1426, %1427, %1428) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) */;
  %1430 = cast(meta[relay.Constant][95] /* ty=Tensor[(36, 1), float32] */, dtype="float32") /* ty=Tensor[(36, 1), float32] */;
  %1431 = sin(%1430) /* ty=Tensor[(36, 1), float32] */;
  %1432 = cast(meta[relay.Constant][95] /* ty=Tensor[(36, 1), float32] */, dtype="uint64") /* ty=Tensor[(36, 1), uint64] */;
  %1433 = shape_of(%1431, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1434 = cast(%1431, dtype="uint64") /* ty=Tensor[(36, 1), uint64] */;
  %1435 = dyn.reshape(%1432, %1433, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1436 = asinh(%1422) /* ty=Tensor[(2, 16, 13), float32] */;
  %1437 = %1429.5;
  %1438 = bitwise_or(%1434, %1435) /* ty=Tensor[(36, ?), uint64] */;
  (%1436, %1437, %var_17546, meta[relay.Constant][96] /* ty=Tensor[(240), bool] */, %1438)
}

def @func_20038() -> Tensor[(13, 15, 8), float32] {
  @func_14792() /* ty=Tensor[(13, 15, 8), float32] */
}

def @func_7296() -> (Tensor[(13, 15, 8), bool],) {
  %1439 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1439,)
}

def @func_9725() -> (Tensor[(792), uint32], Tensor[(13, 15, 8), bool]) {
  %1440 = @func_6646() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %1441 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1442 = %1440.7;
  %1443 = %1441.0;
  (%1442, %1443)
}

def @func_13525(%var_13522: Tensor[(260), bool]) -> (Tensor[(13, 15, 8), float64], Tensor[(675), float64], Tensor[(36, 1), float32], Tensor[(260), bool], Tensor[(260), bool], Tensor[(56), int8]) {
  %1444 = @func_10423() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %1445 = cast(meta[relay.Constant][97] /* ty=Tensor[(36, 1), float32] */, dtype="float32") /* ty=Tensor[(36, 1), float32] */;
  %1446 = reshape(%1445, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %1447 = @func_5938(%1446) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], float32, Tensor[(36), float32], Tensor[(675), float64]) */;
  %1448 = cast(%var_13522, dtype="bool") /* ty=Tensor[(260), bool] */;
  %1449 = cast(meta[relay.Constant][98] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1450 = cast(meta[relay.Constant][98] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1451 = reshape(%1448, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %1452 = reshape(%1449, newshape=[28, 2]) /* ty=Tensor[(28, 2), int8] */;
  %1453 = reshape(%1450, newshape=[28, 2]) /* ty=Tensor[(28, 2), int8] */;
  %1454 = @func_11642(%1451, %1452, %1453) /* ty=(Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(675, 792), bool], Tensor[(28, 2), uint32]) */;
  %1455 = %1444.0;
  %1456 = %1447.4;
  %1457 = %1454.2;
  (%1455, %1456, meta[relay.Constant][97] /* ty=Tensor[(36, 1), float32] */, %1457, %var_13522, meta[relay.Constant][98] /* ty=Tensor[(56), int8] */)
}

def @func_20291(%var_20267: Tensor[(18, 70), float64]) -> (Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32]) {
  %1458 = @func_15115() /* ty=(Tensor[(18, 70), bool], Tensor[(18, 70), float64]) */;
  %1459 = %1458.1;
  %1460 = cast(%var_20267, dtype="uint8") /* ty=Tensor[(18, 70), uint8] */;
  %1461 = shape_of(%1459, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1462 = cast(%1459, dtype="uint8") /* ty=Tensor[(18, 70), uint8] */;
  %1463 = dyn.reshape(%1460, %1461, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1464 = subtract(%1462, %1463) /* ty=Tensor[(18, 70), uint8] */;
  %1465 = cast(%1464, dtype="float32") /* ty=Tensor[(18, 70), float32] */;
  %1466 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %1467 = cos(%1465) /* ty=Tensor[(18, 70), float32] */;
  (%1466, %1467)
}

def @func_6234() -> (Tensor[(13, 15, 8), bool],) {
  %1468 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1469 = %1468.1;
  (%1469,)
}

def @func_19500() -> Tensor[(13, 15, 8), bool] {
  @func_10206() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_16007(%var_15964: Tensor[(90, 14), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float32], Tensor[(90, 14), uint8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1470 = @func_10827() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1471 = cast(meta[relay.Constant][99] /* ty=Tensor[(90, 14), float32] */, dtype="float32") /* ty=Tensor[(90, 14), float32] */;
  %1472 = reshape(%1471, newshape=[630, 2]) /* ty=Tensor[(630, 2), float32] */;
  %1473 = @func_10478(%1472) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(630, 2), float32]) */;
  %1474 = %1473.1;
  %1475 = cast(%1474, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %1476 = cast(%var_15964, dtype="uint8") /* ty=Tensor[(90, 14), uint8] */;
  %1477 = shape_of(meta[relay.Constant][99] /* ty=Tensor[(90, 14), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1478 = cast(meta[relay.Constant][99] /* ty=Tensor[(90, 14), float32] */, dtype="uint8") /* ty=Tensor[(90, 14), uint8] */;
  %1479 = dyn.reshape(%1476, %1477, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1480 = @func_10827() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1481 = %1470.0;
  %1482 = atanh(%1475) /* ty=Tensor[(5, 15, 9), float32] */;
  %1483 = left_shift(%1478, %1479) /* ty=Tensor[(90, 14), uint8] */;
  %1484 = @func_12856() /* ty=Tensor[(13, 15, 8), bool] */;
  %1485 = %1480.0;
  (%1481, %1482, %1483, %1484, %1485)
}

def @func_19117() -> (Tensor[(13, 15, 8), bool], bool, Tensor[(675, 56), bool]) {
  %1486 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1487 = cast(meta[relay.Constant][100] /* ty=Tensor[(675, 1), float64] */, dtype="float64") /* ty=Tensor[(675, 1), float64] */;
  %1488 = reshape(%1486, newshape=[]) /* ty=bool */;
  %1489 = reshape(%1487, newshape=[225, 3]) /* ty=Tensor[(225, 3), float64] */;
  %1490 = @func_11529(%1488, %1489) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(260), bool], Tensor[(6, 20), float32], bool, Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %1491 = %1490.6;
  %1492 = cast(meta[relay.Constant][100] /* ty=Tensor[(675, 1), float64] */, dtype="bool") /* ty=Tensor[(675, 1), bool] */;
  %1493 = cast(%1491, dtype="bool") /* ty=Tensor[(56), bool] */;
  %1494 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %1495 = equal(%1492, %1493) /* ty=Tensor[(675, 56), bool] */;
  (%1494, True /* ty=bool */, %1495)
}

def @func_7785() -> Tensor[(13, 15, 8), uint64] {
  %1496 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1497 = %1496.1;
  %1498 = cast(%1497, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
  %1499 = rsqrt(%1498) /* ty=Tensor[(13, 15, 8), float64] */;
  %1500 = cast(%1499, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
  %1501 = exp(%1500) /* ty=Tensor[(13, 15, 8), float32] */;
  %1502 = cast(%1501, dtype="uint64") /* ty=Tensor[(13, 15, 8), uint64] */;
  %1503 = shape_of(%1499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1504 = cast(%1499, dtype="uint64") /* ty=Tensor[(13, 15, 8), uint64] */;
  %1505 = dyn.reshape(%1502, %1503, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%1504, %1505) /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_15186() -> Tensor[(13, 15, 8), bool] {
  %1506 = @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1506.0
}

def @func_10534() -> (Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool]) {
  %1507 = @func_9679() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) */;
  %1508 = @func_10185() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1509 = %1507.1;
  %1510 = %1508.0;
  (%1509, %1510)
}

def @func_6227() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %1511 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %1512 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1511, %1512)
}

def @func_16622() -> (Tensor[(13, 15, 8), bool], Tensor[(18, 70), bool]) {
  %1513 = @func_11852() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(675), float32]) */;
  %1514 = @func_15115() /* ty=(Tensor[(18, 70), bool], Tensor[(18, 70), float64]) */;
  %1515 = %1513.0;
  %1516 = %1514.0;
  (%1515, %1516)
}

def @func_16414() -> Tensor[(13, 15, 8), bool] {
  %1517 = @func_11442() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1517.0
}

def @func_14889() -> Tensor[(13, 15, 8), bool] {
  %1518 = @func_11947() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1518.0
}

def @func_12469() -> (Tensor[(13, 15, 8), uint64],) {
  %1519 = @func_10308() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %1520 = %1519.0;
  (%1520,)
}

def @func_9874(%var_9735: Tensor[(9, 11, 13), float64], %var_9796: bool, %var_9799: Tensor[(56), int8], %var_9868: Tensor[(1, 36), float32]) -> (Tensor[(9, 11, 13), float64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(6, 12, 11), uint32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(56), int8], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(1, 1260), float32], Tensor[(1, 36), float32], Tensor[(240), bool]) {
  %1521 = cast(%var_9735, dtype="float64") /* ty=Tensor[(9, 11, 13), float64] */;
  %1522 = @func_6478() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1523 = cast(meta[relay.Constant][101] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1524 = cast(meta[relay.Constant][101] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1525 = reshape(%1523, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %1526 = reshape(%1524, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %1527 = %1522.0;
  %1528 = cast(%1527, dtype="int64") /* ty=Tensor[(13, 15, 8), int64] */;
  %1529 = reshape(%1528, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), int64] */;
  %1530 = @func_7195(%1529) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) */;
  %1531 = cast(%var_9796, dtype="bool") /* ty=bool */;
  %1532 = cast(meta[relay.Constant][102] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %1533 = cast(meta[relay.Constant][103] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1534 = cast(meta[relay.Constant][101] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1535 = cast(%var_9799, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1536 = reshape(%1531, newshape=[]) /* ty=bool */;
  %1537 = reshape(%1532, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %1538 = reshape(%1533, newshape=[675, 1]) /* ty=Tensor[(675, 1), float64] */;
  %1539 = reshape(%1534, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %1540 = reshape(%1535, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1541 = @func_8389(%1536, %1537, %1538, %1539, %1540) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %1542 = @func_7412() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %1543 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1544 = cast(meta[relay.Constant][103] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1545 = reshape(%1544, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %1546 = @func_2388(%1545) /* ty=(Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64]) */;
  %1547 = cast(meta[relay.Constant][104] /* ty=Tensor[(1, 1260), float32] */, dtype="float32") /* ty=Tensor[(1, 1260), float32] */;
  %1548 = cast(%var_9868, dtype="float32") /* ty=Tensor[(1, 36), float32] */;
  %1549 = cast(meta[relay.Constant][105] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %1550 = reshape(%1547, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float32] */;
  %1551 = reshape(%1548, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %1552 = reshape(%1549, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %1553 = @func_8476(%1550, %1551, %1552) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) */;
  %1554 = log2(%1521) /* ty=Tensor[(9, 11, 13), float64] */;
  %1555 = @func_4152(%1525, %1526) /* ty=Tensor[(6, 12, 11), uint32] */;
  %1556 = %1530.2;
  %1557 = @func_6785() /* ty=Tensor[(13, 15, 8), bool] */;
  %1558 = %1541.10;
  %1559 = %1542.0;
  %1560 = %1543.1;
  %1561 = %1546.0;
  %1562 = %1553.4;
  (%1554, %1527, %1555, meta[relay.Constant][101] /* ty=Tensor[(792), uint32] */, %1556, %1557, %1558, %var_9796, meta[relay.Constant][102] /* ty=Tensor[(260), bool] */, meta[relay.Constant][103] /* ty=Tensor[(675), float64] */, %var_9799, %1559, %1560, %1561, %1562, meta[relay.Constant][104] /* ty=Tensor[(1, 1260), float32] */, %var_9868, meta[relay.Constant][105] /* ty=Tensor[(240), bool] */)
}

def @func_9888() -> (Tensor[(13, 15, 8), float32],) {
  %1563 = @func_9679() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) */;
  %1564 = %1563.1;
  (%1564,)
}

def @func_21025(%var_20978: uint64, %var_20979: Tensor[(7, 14, 9), uint64]) -> (Tensor[(7, 14, 9), float32], Tensor[(13, 15, 8), bool]) {
  %1565 = cast(%var_20978, dtype="bool") /* ty=bool */;
  %1566 = cast(%var_20979, dtype="bool") /* ty=Tensor[(7, 14, 9), bool] */;
  %1567 = not_equal(%1565, %1566) /* ty=Tensor[(7, 14, 9), bool] */;
  %1568 = cast(%1567, dtype="float32") /* ty=Tensor[(7, 14, 9), float32] */;
  %1569 = asinh(%1568) /* ty=Tensor[(7, 14, 9), float32] */;
  %1570 = @func_16256() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1569, %1570)
}

def @func_14635() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
  %1571 = @func_9643() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %1572 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1573 = %1571.0;
  %1574 = %1572.0;
  (%1573, %1574)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_21821(%var_21818: Tensor[(16, 16, 5), uint32], %var_21819: Tensor[(16, 16, 5), uint32], %var_21820: Tensor[(1260), float32]) -> (Tensor[(16, 16, 5), uint32], Tensor[(13, 15, 8), bool], Tensor[(1260), float32], Tensor[(260), bool]) {
  %11 = fn (%var_21793: Tensor[(16, 16, 5), uint32], %var_21794: Tensor[(16, 16, 5), uint32], %var_21806: Tensor[(1260), float32]) -> (Tensor[(16, 16, 5), uint32], Tensor[(13, 15, 8), bool], Tensor[(1260), float32], Tensor[(260), bool]) {
    %0 = cast(%var_21794, dtype="uint32") /* ty=Tensor[(16, 16, 5), uint32] */;
    %1 = shape_of(%var_21793, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(%var_21793, dtype="uint32") /* ty=Tensor[(16, 16, 5), uint32] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %4 = cast(%var_21806, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %5 = reshape(%4, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
    %6 = @func_19304(%5) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) */;
    %7 = @func_19918() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(260), bool]) */;
    %8 = add(%2, %3) /* ty=Tensor[(16, 16, 5), uint32] */;
    %9 = %6.1;
    %10 = %7.2;
    (%8, %9, %var_21806, %10)
  };
  %11(%var_21818, %var_21819, %var_21820) /* ty=(Tensor[(16, 16, 5), uint32], Tensor[(13, 15, 8), bool], Tensor[(1260), float32], Tensor[(260), bool]) */
}

def @func_6308() -> (Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) {
  %12 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %13 = cast(%12, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
  %14 = log(%13) /* ty=Tensor[(13, 15, 8), float32] */;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %17 = reshape(%16, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %18 = @func_201(%17) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %19 = cosh(%15) /* ty=Tensor[(13, 15, 8), float64] */;
  %20 = %18.0;
  (%19, %20, meta[relay.Constant][0] /* ty=Tensor[(675), float64] */)
}

def @func_7197(%var_7196: Tensor[(13, 15, 8), int64]) -> (Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) {
  %33 = fn (%var_7184: Tensor[(13, 15, 8), int64]) -> (Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) {
    %21 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
    %22 = cast(%21, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
    %23 = cast(%var_7184, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
    %24 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
    %25 = cast(%21, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
    %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %27 = cast(%var_7184, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
    %28 = reshape(%27, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), bool] */;
    %29 = @func_6150(%28) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */;
    %30 = atanh(%22) /* ty=Tensor[(13, 15, 8), float32] */;
    %31 = logical_and(%25, %26) /* ty=Tensor[(13, 15, 8), bool] */;
    %32 = %29.1;
    (%30, %31, %32)
  };
  %33(%var_7196) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) */
}

def @func_21520() -> Tensor[(13, 15, 8), float32] {
  %34 = @func_9888() /* ty=(Tensor[(13, 15, 8), float32],) */;
  %34.0
}

def @func_21423() -> Tensor[(6, 12, 11), uint32] {
  %36 = fn () -> Tensor[(6, 12, 11), uint32] {
    %35 = @func_12287() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(36, 22), uint32], Tensor[(13, 15, 8), float64]) */;
    %35.2
  };
  %36() /* ty=Tensor[(6, 12, 11), uint32] */
}

def @func_10585() -> (Tensor[(13, 15, 8), bool],) {
  %39 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %37 = @func_9025() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %38 = %37.3;
    (%38,)
  };
  %39() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_9705() -> Tensor[(5, 15, 9), float32] {
  %40 = @func_7688() /* ty=Tensor[(5, 15, 9), float64] */;
  %41 = cast(%40, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %42 = reshape(%41, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %43 = @func_201(%42) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %44 = %43.0;
  %45 = cast(%40, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%44, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%47, %48) /* ty=Tensor[(5, 15, 9), float32] */
}

def @func_21168() -> (Tensor[(2, 5, 12), float32], Tensor[(13, 15, 8), bool]) {
  %49 = @func_6873() /* ty=(Tensor[(2, 5, 12), float32],) */;
  %50 = @func_16859() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %51 = %49.0;
  %52 = %50.0;
  (%51, %52)
}

def @func_6479() -> (Tensor[(13, 15, 8), bool],) {
  %54 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %53 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
    (%53,)
  };
  %54() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_14518(%var_14516: Tensor[(3, 12), float32]) -> (Tensor[(792, 1), uint32], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), uint64], Tensor[(3, 12), float32], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) {
  @func_14515(%var_14516) /* ty=(Tensor[(792, 1), uint32], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), uint64], Tensor[(3, 12), float32], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) */
}

def @func_12585() -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
  %55 = @func_12178() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %56 = @func_10852() /* ty=Tensor[(5, 15, 9), float32] */;
  %57 = %55.1;
  (%56, %57)
}

def @func_11571() -> (Tensor[(13, 15, 8), bool],) {
  %58 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %59 = %58.0;
  (%59,)
}

def @func_10768() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
  %60 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
  %61 = @func_6785() /* ty=Tensor[(13, 15, 8), bool] */;
  %62 = @func_9526() /* ty=Tensor[(13, 15, 8), int64] */;
  (%60, %61, %62)
}

def @func_10627() -> Tensor[(13, 15, 8), bool] {
  @func_10625() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_6343() -> Tensor[(13, 15, 8), bool] {
  %63 = fn () -> Tensor[(13, 15, 8), bool] {
    @func_5897() /* ty=Tensor[(13, 15, 8), bool] */
  };
  %63() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_2630(%var_2620: Tensor[(2, 5, 12), float32]) -> Tensor[(2, 5, 12), float32] {
  %64 = cast(%var_2620, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
  acos(%64) /* ty=Tensor[(2, 5, 12), float32] */
}

def @func_9874(%var_9735: Tensor[(9, 11, 13), float64], %var_9796: bool, %var_9799: Tensor[(56), int8], %var_9868: Tensor[(1, 36), float32]) -> (Tensor[(9, 11, 13), float64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(6, 12, 11), uint32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(56), int8], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(1, 1260), float32], Tensor[(1, 36), float32], Tensor[(240), bool]) {
  %65 = cast(%var_9735, dtype="float64") /* ty=Tensor[(9, 11, 13), float64] */;
  %66 = @func_6478() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %67 = cast(meta[relay.Constant][1] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %68 = cast(meta[relay.Constant][1] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %69 = reshape(%67, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %70 = reshape(%68, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %71 = %66.0;
  %72 = cast(%71, dtype="int64") /* ty=Tensor[(13, 15, 8), int64] */;
  %73 = reshape(%72, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), int64] */;
  %74 = @func_7195(%73) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) */;
  %75 = cast(%var_9796, dtype="bool") /* ty=bool */;
  %76 = cast(meta[relay.Constant][2] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %77 = cast(meta[relay.Constant][3] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %78 = cast(meta[relay.Constant][1] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %79 = cast(%var_9799, dtype="int8") /* ty=Tensor[(56), int8] */;
  %80 = reshape(%75, newshape=[]) /* ty=bool */;
  %81 = reshape(%76, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %82 = reshape(%77, newshape=[675, 1]) /* ty=Tensor[(675, 1), float64] */;
  %83 = reshape(%78, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %84 = reshape(%79, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %85 = @func_8389(%80, %81, %82, %83, %84) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %86 = @func_7412() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %87 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %88 = cast(meta[relay.Constant][3] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %89 = reshape(%88, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %90 = @func_2388(%89) /* ty=(Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64]) */;
  %91 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 1260), float32] */, dtype="float32") /* ty=Tensor[(1, 1260), float32] */;
  %92 = cast(%var_9868, dtype="float32") /* ty=Tensor[(1, 36), float32] */;
  %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %94 = reshape(%91, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float32] */;
  %95 = reshape(%92, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %96 = reshape(%93, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %97 = @func_8476(%94, %95, %96) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) */;
  %98 = log2(%65) /* ty=Tensor[(9, 11, 13), float64] */;
  %99 = @func_4152(%69, %70) /* ty=Tensor[(6, 12, 11), uint32] */;
  %100 = %74.2;
  %101 = @func_6785() /* ty=Tensor[(13, 15, 8), bool] */;
  %102 = %85.10;
  %103 = %86.0;
  %104 = %87.1;
  %105 = %90.0;
  %106 = %97.4;
  (%98, %71, %99, meta[relay.Constant][1] /* ty=Tensor[(792), uint32] */, %100, %101, %102, %var_9796, meta[relay.Constant][2] /* ty=Tensor[(260), bool] */, meta[relay.Constant][3] /* ty=Tensor[(675), float64] */, %var_9799, %103, %104, %105, %106, meta[relay.Constant][4] /* ty=Tensor[(1, 1260), float32] */, %var_9868, meta[relay.Constant][5] /* ty=Tensor[(240), bool] */)
}

def @func_5964() -> Tensor[(13, 15, 8), bool] {
  @func_5962() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_12469() -> (Tensor[(13, 15, 8), uint64],) {
  %107 = @func_10308() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %108 = %107.0;
  (%108,)
}

def @func_16575() -> Tensor[(13, 15, 8), bool] {
  %110 = fn () -> Tensor[(13, 15, 8), bool] {
    %109 = @func_15377() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
    %109.1
  };
  %110() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_11642(%var_11614: Tensor[(260), bool], %var_11617: Tensor[(28, 2), int8], %var_11635: Tensor[(28, 2), int8]) -> (Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(675, 792), bool], Tensor[(28, 2), uint32]) {
  %111 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %112 = cast(%var_11614, dtype="bool") /* ty=Tensor[(260), bool] */;
  %113 = cast(meta[relay.Constant][6] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %115 = cast(%var_11617, dtype="int8") /* ty=Tensor[(28, 2), int8] */;
  %116 = reshape(%111, newshape=[]) /* ty=bool */;
  %117 = reshape(%112, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %118 = reshape(%113, newshape=[675, 1]) /* ty=Tensor[(675, 1), float64] */;
  %119 = reshape(%114, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %120 = reshape(%115, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %121 = @func_8389(%116, %117, %118, %119, %120) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %122 = %121.7;
  %123 = cast(%122, dtype="bool") /* ty=Tensor[(675, 1), bool] */;
  %124 = cast(meta[relay.Constant][7] /* ty=Tensor[(792), uint32] */, dtype="bool") /* ty=Tensor[(792), bool] */;
  %125 = cast(%var_11635, dtype="uint32") /* ty=Tensor[(28, 2), uint32] */;
  %126 = shape_of(%var_11617, dtype="int32") /* ty=Tensor[(2), int32] */;
  %127 = cast(%var_11617, dtype="uint32") /* ty=Tensor[(28, 2), uint32] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %129 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %130 = greater_equal(%123, %124) /* ty=Tensor[(675, 792), bool] */;
  %131 = add(%127, %128) /* ty=Tensor[(28, 2), uint32] */;
  (%129, False /* ty=bool */, %var_11614, meta[relay.Constant][6] /* ty=Tensor[(675), float64] */, %130, %131)
}

def @func_6486() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %135 = fn () -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
    %132 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %133 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
    %134 = %132.0;
    (%133, %134)
  };
  %135() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */
}

def @func_14531() -> (Tensor[(13, 15, 8), uint64],) {
  @func_14529() /* ty=(Tensor[(13, 15, 8), uint64],) */
}

def @func_21446(%var_21445: Tensor[(12, 8, 4), bool]) -> (Tensor[(12, 8, 4), bool], Tensor[(675), float64]) {
  %143 = fn (%var_21429: Tensor[(12, 8, 4), bool]) -> (Tensor[(12, 8, 4), bool], Tensor[(675), float64]) {
    %136 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 8, 4), bool] */, dtype="bool") /* ty=Tensor[(12, 8, 4), bool] */;
    %137 = shape_of(%var_21429, dtype="int32") /* ty=Tensor[(3), int32] */;
    %138 = cast(%var_21429, dtype="bool") /* ty=Tensor[(12, 8, 4), bool] */;
    %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %140 = @func_14441() /* ty=(Tensor[(675), float64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
    %141 = logical_or(%138, %139) /* ty=Tensor[(12, 8, 4), bool] */;
    %142 = %140.0;
    (%141, %142)
  };
  %143(%var_21445) /* ty=(Tensor[(12, 8, 4), bool], Tensor[(675), float64]) */
}

def @func_19157() -> (Tensor[(13, 15, 8), bool],) {
  @func_19155() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_19119() -> (Tensor[(13, 15, 8), bool], bool, Tensor[(675, 56), bool]) {
  @func_19117() /* ty=(Tensor[(13, 15, 8), bool], bool, Tensor[(675, 56), bool]) */
}

def @func_8702(%var_8666: Tensor[(18, 90), float32], %var_8680: Tensor[(18, 90), int64], %var_8692: Tensor[(1, 36), float32], %var_8697: bool, %var_8699: Tensor[(28, 2), int8]) -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 90), float32], Tensor[(675), float64], Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool], Tensor[(60, 2), float32], bool, Tensor[(792), uint32], Tensor[(28, 2), int8]) {
  %144 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %145 = cast(%var_8666, dtype="float32") /* ty=Tensor[(18, 90), float32] */;
  %146 = reshape(%145, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %147 = @func_6366(%146) /* ty=(Tensor[(15, 9, 12), float64],) */;
  %148 = %147.0;
  %149 = cast(%148, dtype="int64") /* ty=Tensor[(15, 9, 12), int64] */;
  %150 = shape_of(%var_8666, dtype="int32") /* ty=Tensor[(2), int32] */;
  %151 = cast(%var_8666, dtype="int64") /* ty=Tensor[(18, 90), int64] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %153 = minimum(%151, %152) /* ty=Tensor[(18, 90), int64] */;
  %154 = cast(%var_8680, dtype="float32") /* ty=Tensor[(18, 90), float32] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %156 = cast(%153, dtype="float32") /* ty=Tensor[(18, 90), float32] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %158 = cast(%var_8692, dtype="float32") /* ty=Tensor[(1, 36), float32] */;
  %159 = reshape(%158, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %160 = @func_5938(%159) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], float32, Tensor[(36), float32], Tensor[(675), float64]) */;
  %161 = cast(meta[relay.Constant][9] /* ty=Tensor[(60, 2), float32] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %162 = cast(%var_8697, dtype="bool") /* ty=bool */;
  %163 = %160.4;
  %164 = cast(%163, dtype="float64") /* ty=Tensor[(675), float64] */;
  %165 = cast(meta[relay.Constant][10] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %166 = cast(%var_8699, dtype="int8") /* ty=Tensor[(28, 2), int8] */;
  %167 = reshape(%161, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %168 = reshape(%162, newshape=[]) /* ty=bool */;
  %169 = reshape(%164, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %170 = reshape(%165, newshape=[12, 66]) /* ty=Tensor[(12, 66), uint32] */;
  %171 = reshape(%166, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %172 = @func_8148(%167, %168, %169, %170, %171) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(260), bool], Tensor[(12, 66), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) */;
  %173 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %174 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  %175 = %144.1;
  %176 = multiply(%156, %157) /* ty=Tensor[(18, 90), float32] */;
  %177 = %172.6;
  (%173, %174, %175, %176, %163, %var_8692, %177, meta[relay.Constant][9] /* ty=Tensor[(60, 2), float32] */, %var_8697, meta[relay.Constant][10] /* ty=Tensor[(792), uint32] */, %var_8699)
}

def @func_3521(%var_3519: Tensor[(2, 4, 7), int8]) -> Tensor[(2, 4, 7), int8] {
  @func_3518(%var_3519) /* ty=Tensor[(2, 4, 7), int8] */
}

def @func_2633(%var_2631: Tensor[(2, 5, 12), float32]) -> Tensor[(2, 5, 12), float32] {
  @func_2630(%var_2631) /* ty=Tensor[(2, 5, 12), float32] */
}

def @func_8288() -> (Tensor[(13, 15, 8), bool],) {
  @func_8286() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_8537() -> (Tensor[(13, 15, 8), float64],) {
  %178 = @func_7412() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %179 = %178.0;
  (%179,)
}

def @func_6755() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
  %182 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
    %180 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
    %181 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
    (%180, %181)
  };
  %182() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */
}

def @func_7421() -> Tensor[(13, 15, 8), bool] {
  %184 = fn () -> Tensor[(13, 15, 8), bool] {
    %183 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
    %183.0
  };
  %184() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_12371() -> (Tensor[(13, 15, 8), int64],) {
  %185 = @func_11461() /* ty=Tensor[(13, 15, 8), int64] */;
  (%185,)
}

def @func_17623() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  @func_17621() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_15188() -> Tensor[(13, 15, 8), bool] {
  @func_15186() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_17564(%var_17534: Tensor[(2, 16, 13), float32], %var_17546: Tensor[(1260), float32]) -> (Tensor[(2, 16, 13), float32], Tensor[(5, 15, 9), float64], Tensor[(1260), float32], Tensor[(240), bool], Tensor[(36, ?), uint64]) {
  %186 = cast(%var_17534, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  %187 = cast(%var_17546, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %188 = cast(meta[relay.Constant][11] /* ty=Tensor[(36, 1), float32] */, dtype="float32") /* ty=Tensor[(36, 1), float32] */;
  %189 = cast(meta[relay.Constant][12] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %190 = reshape(%187, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float32] */;
  %191 = reshape(%188, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %192 = reshape(%189, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %193 = @func_8476(%190, %191, %192) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) */;
  %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(36, 1), float32] */, dtype="float32") /* ty=Tensor[(36, 1), float32] */;
  %195 = sin(%194) /* ty=Tensor[(36, 1), float32] */;
  %196 = cast(meta[relay.Constant][11] /* ty=Tensor[(36, 1), float32] */, dtype="uint64") /* ty=Tensor[(36, 1), uint64] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(2), int32] */;
  %198 = cast(%195, dtype="uint64") /* ty=Tensor[(36, 1), uint64] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %200 = asinh(%186) /* ty=Tensor[(2, 16, 13), float32] */;
  %201 = %193.5;
  %202 = bitwise_or(%198, %199) /* ty=Tensor[(36, ?), uint64] */;
  (%200, %201, %var_17546, meta[relay.Constant][12] /* ty=Tensor[(240), bool] */, %202)
}

def @func_7070() -> (Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) {
  %203 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %204 = cast(meta[relay.Constant][13] /* ty=Tensor[(18, 2), float32] */, dtype="float32") /* ty=Tensor[(18, 2), float32] */;
  %205 = reshape(%204, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %206 = @func_5938(%205) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], float32, Tensor[(36), float32], Tensor[(675), float64]) */;
  %207 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %208 = %203.0;
  %209 = %206.1;
  %210 = %207.0;
  (%208, %209, meta[relay.Constant][13] /* ty=Tensor[(18, 2), float32] */, %210)
}

def @func_12289() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(36, 22), uint32], Tensor[(13, 15, 8), float64]) {
  @func_12287() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(36, 22), uint32], Tensor[(13, 15, 8), float64]) */
}

def @func_19117() -> (Tensor[(13, 15, 8), bool], bool, Tensor[(675, 56), bool]) {
  %211 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %212 = cast(meta[relay.Constant][14] /* ty=Tensor[(675, 1), float64] */, dtype="float64") /* ty=Tensor[(675, 1), float64] */;
  %213 = reshape(%211, newshape=[]) /* ty=bool */;
  %214 = reshape(%212, newshape=[225, 3]) /* ty=Tensor[(225, 3), float64] */;
  %215 = @func_11529(%213, %214) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(260), bool], Tensor[(6, 20), float32], bool, Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %216 = %215.6;
  %217 = cast(meta[relay.Constant][14] /* ty=Tensor[(675, 1), float64] */, dtype="bool") /* ty=Tensor[(675, 1), bool] */;
  %218 = cast(%216, dtype="bool") /* ty=Tensor[(56), bool] */;
  %219 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %220 = equal(%217, %218) /* ty=Tensor[(675, 56), bool] */;
  (%219, True /* ty=bool */, %220)
}

def @func_6647() -> (Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) {
  %242 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) {
    %221 = cast(-6.63516f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %222 = cast(meta[relay.Constant][15] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
    %223 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 675), float64] */, dtype="float64") /* ty=Tensor[(1, 675), float64] */;
    %224 = reshape(%221, newshape=[]) /* ty=float32 */;
    %225 = reshape(%222, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
    %226 = reshape(%223, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %227 = @func_3193(%224, %225, %226) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
    %228 = cast(-6.63516f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %229 = cast(meta[relay.Constant][17] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
    %230 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 675), float64] */, dtype="float64") /* ty=Tensor[(1, 675), float64] */;
    %231 = cast(meta[relay.Constant][18] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
    %232 = cast(meta[relay.Constant][19] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
    %233 = reshape(%228, newshape=[]) /* ty=bool */;
    %234 = reshape(%229, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), bool] */;
    %235 = reshape(%230, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %236 = reshape(%231, newshape=[792]) /* ty=Tensor[(792), uint32] */;
    %237 = reshape(%232, newshape=[56]) /* ty=Tensor[(56), int8] */;
    %238 = @func_5121(%233, %234, %235, %236, %237) /* ty=(Tensor[(10, 13, 2), bool], Tensor[(675), float64], Tensor[(36), float32], Tensor[(675), float64], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
    %239 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
    %240 = %227.3;
    %241 = %238.6;
    (%239, %240, -6.63516f /* ty=float32 */, meta[relay.Constant][15] /* ty=Tensor[(36), float32] */, meta[relay.Constant][16] /* ty=Tensor[(1, 675), float64] */, %241, meta[relay.Constant][17] /* ty=Tensor[(260), bool] */, meta[relay.Constant][18] /* ty=Tensor[(792), uint32] */, meta[relay.Constant][19] /* ty=Tensor[(56), int8] */)
  };
  %242() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) */
}

def @func_8286() -> (Tensor[(13, 15, 8), bool],) {
  %243 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
  (%243,)
}

def @func_18884() -> (Tensor[(13, 15, 8), bool],) {
  %246 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %244 = @func_14104() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %245 = %244.0;
    (%245,)
  };
  %246() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_10534() -> (Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool]) {
  %247 = @func_9679() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) */;
  %248 = @func_10185() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %249 = %247.1;
  %250 = %248.0;
  (%249, %250)
}

def @func_10770() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
  @func_10768() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */
}

def @func_11442() -> (Tensor[(13, 15, 8), bool],) {
  %251 = @func_10584() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %252 = %251.0;
  (%252,)
}

def @func_17476() -> (Tensor[(13, 15, 8), bool],) {
  %253 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %254 = %253.0;
  (%254,)
}

def @func_11312() -> Tensor[(13, 15, 8), bool] {
  %255 = fn () -> Tensor[(13, 15, 8), bool] {
    @func_8210() /* ty=Tensor[(13, 15, 8), bool] */
  };
  %255() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_12048() -> Tensor[(13, 15, 8), int64] {
  %257 = fn () -> Tensor[(13, 15, 8), int64] {
    %256 = @func_6754() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */;
    %256.1
  };
  %257() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_11263() -> (Tensor[(5, 15, 9), float64],) {
  %260 = fn () -> (Tensor[(5, 15, 9), float64],) {
    %258 = @func_6308() /* ty=(Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) */;
    %259 = %258.1;
    (%259,)
  };
  %260() /* ty=(Tensor[(5, 15, 9), float64],) */
}

def @func_16622() -> (Tensor[(13, 15, 8), bool], Tensor[(18, 70), bool]) {
  %261 = @func_11852() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(675), float32]) */;
  %262 = @func_15115() /* ty=(Tensor[(18, 70), bool], Tensor[(18, 70), float64]) */;
  %263 = %261.0;
  %264 = %262.0;
  (%263, %264)
}

def @func_6227() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %265 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %266 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  (%265, %266)
}

def @func_21767(%var_21766: Tensor[(12, 5, 8), int32]) -> (Tensor[(13, 15, 8), bool], Tensor[(12, 5, 8), bool], Tensor[(12, 5, 8), float32], Tensor[(13, 15, 8), int64]) {
  %285 = fn (%var_21695: Tensor[(12, 5, 8), int32]) -> (Tensor[(13, 15, 8), bool], Tensor[(12, 5, 8), bool], Tensor[(12, 5, 8), float32], Tensor[(13, 15, 8), int64]) {
    %267 = @func_20966() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %268 = cast(%var_21695, dtype="int32") /* ty=Tensor[(12, 5, 8), int32] */;
    %269 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(12, 5, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %270 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 5, 8), int32] */, dtype="int32") /* ty=Tensor[(12, 5, 8), int32] */;
    %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %272 = subtract(%270, %271) /* ty=Tensor[(12, 5, 8), int32] */;
    %273 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 5, 8), int32] */, dtype="bool") /* ty=Tensor[(12, 5, 8), bool] */;
    %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
    %275 = cast(%272, dtype="bool") /* ty=Tensor[(12, 5, 8), bool] */;
    %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %277 = cast(%272, dtype="float32") /* ty=Tensor[(12, 5, 8), float32] */;
    %278 = shape_of(%var_21695, dtype="int32") /* ty=Tensor[(3), int32] */;
    %279 = cast(%var_21695, dtype="float32") /* ty=Tensor[(12, 5, 8), float32] */;
    %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %281 = %267.0;
    %282 = greater(%275, %276) /* ty=Tensor[(12, 5, 8), bool] */;
    %283 = minimum(%279, %280) /* ty=Tensor[(12, 5, 8), float32] */;
    %284 = @func_12716() /* ty=Tensor[(13, 15, 8), int64] */;
    (%281, %282, %283, %284)
  };
  %285(%var_21766) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(12, 5, 8), bool], Tensor[(12, 5, 8), float32], Tensor[(13, 15, 8), int64]) */
}

def @func_9220() -> (Tensor[(13, 15, 8), bool],) {
  %286 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %287 = %286.0;
  (%287,)
}

def @func_6785() -> Tensor[(13, 15, 8), bool] {
  @func_5897() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_19754(%var_19732: Tensor[(120), float32], %var_19733: bool, %var_19735: Tensor[(792), uint32], %var_19736: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(120), float32], bool, Tensor[(675), float64], Tensor[(792), uint32], Tensor[(56), int8]) {
  %288 = @func_9643() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %289 = cast(%var_19732, dtype="float32") /* ty=Tensor[(120), float32] */;
  %290 = cast(%var_19733, dtype="bool") /* ty=bool */;
  %291 = cast(meta[relay.Constant][21] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %292 = cast(%var_19735, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %293 = cast(%var_19736, dtype="int8") /* ty=Tensor[(56), int8] */;
  %294 = reshape(%289, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %295 = reshape(%290, newshape=[]) /* ty=bool */;
  %296 = reshape(%291, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %297 = reshape(%292, newshape=[12, 66]) /* ty=Tensor[(12, 66), uint32] */;
  %298 = reshape(%293, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %299 = @func_8148(%294, %295, %296, %297, %298) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(260), bool], Tensor[(12, 66), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) */;
  %300 = %288.0;
  %301 = %299.1;
  (%300, %301, %var_19732, %var_19733, meta[relay.Constant][21] /* ty=Tensor[(675), float64] */, %var_19735, %var_19736)
}

def @func_20294(%var_20292: Tensor[(18, 70), float64]) -> (Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32]) {
  @func_20291(%var_20292) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32]) */
}

def @func_1893(%var_1892: Tensor[(10, 14, 9), float32]) -> (Tensor[(10, 14, 9), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64]) {
  %320 = fn (%var_1851: Tensor[(10, 14, 9), float32]) -> (Tensor[(10, 14, 9), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64]) {
    %302 = cast(%var_1851, dtype="float32") /* ty=Tensor[(10, 14, 9), float32] */;
    %303 = cast(meta[relay.Constant][22] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
    %304 = reshape(%303, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %305 = @func_201(%304) /* ty=(Tensor[(5, 15, 9), float64],) */;
    %306 = %305.0;
    %307 = cast(%306, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
    %308 = reshape(%307, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %309 = @func_201(%308) /* ty=(Tensor[(5, 15, 9), float64],) */;
    %310 = %309.0;
    %311 = cast(%310, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
    %312 = reshape(%311, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %313 = @func_201(%312) /* ty=(Tensor[(5, 15, 9), float64],) */;
    %314 = %313.0;
    %315 = cast(%314, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
    %316 = reshape(%315, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %317 = @func_201(%316) /* ty=(Tensor[(5, 15, 9), float64],) */;
    %318 = acos(%302) /* ty=Tensor[(10, 14, 9), float32] */;
    %319 = %317.0;
    (%318, %306, meta[relay.Constant][22] /* ty=Tensor[(675), float64] */, %310, %314, %319)
  };
  %320(%var_1892) /* ty=(Tensor[(10, 14, 9), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64]) */
}

def @func_17988(%var_17987: Tensor[(4, 15, 4), float32]) -> (Tensor[(13, 15, 8), int64], Tensor[(4, 15, 4), float64], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %334 = fn (%var_17867: Tensor[(4, 15, 4), float32]) -> (Tensor[(13, 15, 8), int64], Tensor[(4, 15, 4), float64], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %321 = cast(%var_17867, dtype="float32") /* ty=Tensor[(4, 15, 4), float32] */;
    %322 = sigmoid(%321) /* ty=Tensor[(4, 15, 4), float32] */;
    %323 = cast(%322, dtype="float64") /* ty=Tensor[(4, 15, 4), float64] */;
    %324 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
    %325 = @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %326 = @func_10185() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %327 = @func_13156() /* ty=Tensor[(13, 15, 8), int64] */;
    %328 = sinh(%323) /* ty=Tensor[(4, 15, 4), float64] */;
    %329 = %324.2;
    %330 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
    %331 = %325.0;
    %332 = @func_12856() /* ty=Tensor[(13, 15, 8), bool] */;
    %333 = %326.0;
    (%327, %328, %329, %330, %331, %332, %333)
  };
  %334(%var_17987) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(4, 15, 4), float64], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_11004() -> (Tensor[(13, 15, 8), int64],) {
  %335 = @func_7108() /* ty=Tensor[(13, 15, 8), int64] */;
  (%335,)
}

def @func_16007(%var_15964: Tensor[(90, 14), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float32], Tensor[(90, 14), uint8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %336 = @func_10827() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %337 = cast(meta[relay.Constant][23] /* ty=Tensor[(90, 14), float32] */, dtype="float32") /* ty=Tensor[(90, 14), float32] */;
  %338 = reshape(%337, newshape=[630, 2]) /* ty=Tensor[(630, 2), float32] */;
  %339 = @func_10478(%338) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(630, 2), float32]) */;
  %340 = %339.1;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %342 = cast(%var_15964, dtype="uint8") /* ty=Tensor[(90, 14), uint8] */;
  %343 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(90, 14), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %344 = cast(meta[relay.Constant][23] /* ty=Tensor[(90, 14), float32] */, dtype="uint8") /* ty=Tensor[(90, 14), uint8] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %346 = @func_10827() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %347 = %336.0;
  %348 = atanh(%341) /* ty=Tensor[(5, 15, 9), float32] */;
  %349 = left_shift(%344, %345) /* ty=Tensor[(90, 14), uint8] */;
  %350 = @func_12856() /* ty=Tensor[(13, 15, 8), bool] */;
  %351 = %346.0;
  (%347, %348, %349, %350, %351)
}

def @func_20358() -> (Tensor[(13, 15, 8), bool],) {
  @func_20356() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_16511(%var_16510: bool) -> (Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(13, 15, 8), float32], Tensor[(5, 135), uint64]) {
  %366 = fn (%var_16498: bool) -> (Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(13, 15, 8), float32], Tensor[(5, 135), uint64]) {
    %352 = @func_7412() /* ty=(Tensor[(13, 15, 8), float64],) */;
    %353 = @func_6478() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %354 = cast(%var_16498, dtype="bool") /* ty=bool */;
    %355 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 135), float64] */, dtype="float64") /* ty=Tensor[(5, 135), float64] */;
    %356 = reshape(%354, newshape=[]) /* ty=bool */;
    %357 = reshape(%355, newshape=[225, 3]) /* ty=Tensor[(225, 3), float64] */;
    %358 = @func_11529(%356, %357) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(260), bool], Tensor[(6, 20), float32], bool, Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8]) */;
    %359 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 135), float64] */, dtype="uint64") /* ty=Tensor[(5, 135), uint64] */;
    %360 = cast(%var_16498, dtype="uint64") /* ty=uint64 */;
    %361 = %352.0;
    %362 = %353.0;
    %363 = @func_15279() /* ty=Tensor[(792), uint32] */;
    %364 = %358.0;
    %365 = bitwise_or(%359, %360) /* ty=Tensor[(5, 135), uint64] */;
    (%361, %362, %363, %364, %365)
  };
  %366(%var_16510) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(13, 15, 8), float32], Tensor[(5, 135), uint64]) */
}

def @func_15141() -> (Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool]) {
  %370 = fn () -> (Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool]) {
    %367 = @func_13720() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
    %368 = @func_7688() /* ty=Tensor[(5, 15, 9), float64] */;
    %369 = %367.1;
    (%368, %369)
  };
  %370() /* ty=(Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool]) */
}

def @func_18745() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %371 = @func_14863() /* ty=Tensor[(13, 15, 8), bool] */;
  %372 = @func_18471() /* ty=Tensor[(13, 15, 8), bool] */;
  (%371, %372)
}

def @func_13004() -> (Tensor[(13, 15, 8), bool],) {
  @func_13002() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_12718() -> Tensor[(13, 15, 8), int64] {
  @func_12716() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_9179(%var_9154: Tensor[(36), float32], %var_9155: Tensor[(1, 675), float64]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(675), float64], Tensor[(13, 15, 8), bool]) {
  %373 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %374 = cast(-6.25949f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %375 = cast(%var_9154, dtype="float32") /* ty=Tensor[(36), float32] */;
  %376 = cast(%var_9155, dtype="float64") /* ty=Tensor[(1, 675), float64] */;
  %377 = reshape(%374, newshape=[]) /* ty=float32 */;
  %378 = reshape(%375, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
  %379 = reshape(%376, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %380 = @func_3193(%377, %378, %379) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
  %381 = %380.2;
  %382 = cast(%381, dtype="float64") /* ty=Tensor[(675), float64] */;
  %383 = cast(-6.25949f /* ty=float32 */, dtype="float64") /* ty=float64 */;
  %384 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %385 = %373.0;
  %386 = floor_mod(%382, %383) /* ty=Tensor[(675), float64] */;
  %387 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%384, %385, %var_9154, %var_9155, %386, %387)
}

def @func_14469(%var_14467: Tensor[(3, 10, 12), int64], %var_14468: Tensor[(3, 10, 12), int64]) -> (Tensor[(3, 10, 12), int64],) {
  @func_14465(%var_14467, %var_14468) /* ty=(Tensor[(3, 10, 12), int64],) */
}

def @func_12835() -> (Tensor[(13, 15, 8), bool],) {
  %388 = @func_7657() /* ty=Tensor[(13, 15, 8), bool] */;
  (%388,)
}

def @func_10828() -> (Tensor[(13, 15, 8), bool],) {
  %391 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %389 = @func_9481() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool]) */;
    %390 = %389.0;
    (%390,)
  };
  %391() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_11000(%var_10998: Tensor[(24, 10), bool], %var_10999: uint8) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), float32], Tensor[(3, 5, 16), float32], Tensor[(24, 10), bool], Tensor[(675), float64], uint8, Tensor[(56), int8]) {
  %409 = fn (%var_10972: Tensor[(24, 10), bool], %var_10974: uint8) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), float32], Tensor[(3, 5, 16), float32], Tensor[(24, 10), bool], Tensor[(675), float64], uint8, Tensor[(56), int8]) {
    %392 = @func_10032() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(13, 15, 8), bool]) */;
    %393 = @func_10423() /* ty=(Tensor[(13, 15, 8), float64],) */;
    %394 = @func_9679() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) */;
    %395 = cast(%var_10972, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
    %396 = cast(meta[relay.Constant][25] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
    %397 = cast(%var_10974, dtype="uint8") /* ty=uint8 */;
    %398 = cast(meta[relay.Constant][26] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
    %399 = reshape(%395, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), bool] */;
    %400 = reshape(%396, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %401 = reshape(%397, newshape=[]) /* ty=uint8 */;
    %402 = reshape(%398, newshape=[56]) /* ty=Tensor[(56), int8] */;
    %403 = @func_5241(%399, %400, %401, %402) /* ty=(Tensor[(3, 5, 16), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(3, 5, 16), float32], Tensor[(15, 1, 2), uint8], uint8, Tensor[(30), uint8], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
    %404 = %392.1;
    %405 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
    %406 = %393.0;
    %407 = %394.1;
    %408 = %403.3;
    (%404, %405, %406, %407, %408, %var_10972, meta[relay.Constant][25] /* ty=Tensor[(675), float64] */, %var_10974, meta[relay.Constant][26] /* ty=Tensor[(56), int8] */)
  };
  %409(%var_10998, %var_10999) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), float32], Tensor[(3, 5, 16), float32], Tensor[(24, 10), bool], Tensor[(675), float64], uint8, Tensor[(56), int8]) */
}

def @func_10748() -> Tensor[(13, 15, 8), bool] {
  %410 = @func_10185() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %410.1
}

def @func_10928(%var_10926: Tensor[(75, 9), float64]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(56), int8], bool, Tensor[(260), bool], Tensor[(75, 9), float64], Tensor[(396, 2), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) {
  @func_10925(%var_10926) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(56), int8], bool, Tensor[(260), bool], Tensor[(75, 9), float64], Tensor[(396, 2), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */
}

def @func_12856() -> Tensor[(13, 15, 8), bool] {
  @func_5897() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_14822(%var_14820: Tensor[(16, 6, 8), float32], %var_14821: Tensor[(16, 6, 8), float32]) -> (Tensor[(16, 6, 8), float32], Tensor[(16, 6, 8), float64]) {
  @func_14818(%var_14820, %var_14821) /* ty=(Tensor[(16, 6, 8), float32], Tensor[(16, 6, 8), float64]) */
}

def @func_16291() -> Tensor[(5, 15, 9), float64] {
  @func_7688() /* ty=Tensor[(5, 15, 9), float64] */
}

def @func_20652(%var_20650: Tensor[(36), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(3, 10, 12), int64], Tensor[(180, 2), int64]) {
  @func_20649(%var_20650) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(3, 10, 12), int64], Tensor[(180, 2), int64]) */
}

def @func_18921(%var_18919: Tensor[(12, 2, 2), float32], %var_18920: Tensor[(12, 2, 2), float32]) -> Tensor[(12, 2, 2), float32] {
  @func_18917(%var_18919, %var_18920) /* ty=Tensor[(12, 2, 2), float32] */
}

def @func_18310() -> (Tensor[(13, 15, 8), bool],) {
  %412 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %411 = @func_16414() /* ty=Tensor[(13, 15, 8), bool] */;
    (%411,)
  };
  %412() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_21038() -> Tensor[(13, 15, 8), bool] {
  @func_21036() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_20199() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  @func_20197() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_11647(%var_11644: Tensor[(260), bool], %var_11645: Tensor[(28, 2), int8], %var_11646: Tensor[(28, 2), int8]) -> (Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(675, 792), bool], Tensor[(28, 2), uint32]) {
  @func_11642(%var_11644, %var_11645, %var_11646) /* ty=(Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(675, 792), bool], Tensor[(28, 2), uint32]) */
}

def @func_18019(%var_18016: Tensor[(7, 4, 6), float64], %var_18017: Tensor[(7, 4, 6), float64], %var_18018: Tensor[(1620), float32]) -> (Tensor[(7, 4, 6), float64], Tensor[(15, 9, 12), float64], Tensor[(1620), float32]) {
  %422 = fn (%var_17990: Tensor[(7, 4, 6), float64], %var_17991: Tensor[(7, 4, 6), float64], %var_17997: Tensor[(1620), float32]) -> (Tensor[(7, 4, 6), float64], Tensor[(15, 9, 12), float64], Tensor[(1620), float32]) {
    %413 = cast(%var_17991, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
    %414 = shape_of(%var_17990, dtype="int32") /* ty=Tensor[(3), int32] */;
    %415 = cast(%var_17990, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
    %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %417 = cast(%var_17997, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %418 = reshape(%417, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
    %419 = @func_6366(%418) /* ty=(Tensor[(15, 9, 12), float64],) */;
    %420 = divide(%415, %416) /* ty=Tensor[(7, 4, 6), float64] */;
    %421 = %419.0;
    (%420, %421, %var_17997)
  };
  %422(%var_18016, %var_18017, %var_18018) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(15, 9, 12), float64], Tensor[(1620), float32]) */
}

def @func_18195() -> Tensor[(5, 15, 9), float64] {
  @func_18193() /* ty=Tensor[(5, 15, 9), float64] */
}

def @func_10032() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(13, 15, 8), bool]) {
  %423 = @func_7949() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %424 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %425 = %424.1;
  %426 = cast(%425, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %427 = %423.1;
  %428 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %429 = sigmoid(%426) /* ty=Tensor[(30, 4), float32] */;
  %430 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%427, %428, %429, %430)
}

def @func_11462() -> Tensor[(13, 15, 8), int64] {
  %431 = fn () -> Tensor[(13, 15, 8), int64] {
    @func_6187() /* ty=Tensor[(13, 15, 8), int64] */
  };
  %431() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_15314() -> (Tensor[(13, 15, 8), bool],) {
  %433 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %432 = @func_7420() /* ty=Tensor[(13, 15, 8), bool] */;
    (%432,)
  };
  %433() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_10425() -> (Tensor[(13, 15, 8), float64],) {
  @func_10423() /* ty=(Tensor[(13, 15, 8), float64],) */
}

def @func_20206() -> (Tensor[(13, 15, 8), uint64],) {
  @func_20204() /* ty=(Tensor[(13, 15, 8), uint64],) */
}

def @func_14689() -> Tensor[(13, 15, 8), bool] {
  %435 = fn () -> Tensor[(13, 15, 8), bool] {
    %434 = @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %434.0
  };
  %435() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_15786() -> (Tensor[(13, 15, 8), bool],) {
  @func_15784() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_13288(%var_13287: Tensor[(1, 8, 1), float64]) -> (Tensor[(1, 8, 1), int16], Tensor[(13, 15, 8), uint64]) {
  %443 = fn (%var_13259: Tensor[(1, 8, 1), float64]) -> (Tensor[(1, 8, 1), int16], Tensor[(13, 15, 8), uint64]) {
    %436 = cast(3.6843f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %437 = cast(%var_13259, dtype="float64") /* ty=Tensor[(1, 8, 1), float64] */;
    %438 = divide(%436, %437) /* ty=Tensor[(1, 8, 1), float64] */;
    %439 = cast(3.6843f64 /* ty=float64 */, dtype="int16") /* ty=int16 */;
    %440 = cast(%438, dtype="int16") /* ty=Tensor[(1, 8, 1), int16] */;
    %441 = bitwise_xor(%439, %440) /* ty=Tensor[(1, 8, 1), int16] */;
    %442 = @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */;
    (%441, %442)
  };
  %443(%var_13287) /* ty=(Tensor[(1, 8, 1), int16], Tensor[(13, 15, 8), uint64]) */
}

def @func_14161() -> Tensor[(5, 15, 9), float32] {
  %444 = @func_13720() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %444.0
}

def @func_18250() -> Tensor[(675), float64] {
  @func_18248() /* ty=Tensor[(675), float64] */
}

def @func_20152() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
  %449 = fn () -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
    %445 = @func_14635() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) */;
    %446 = @func_18309() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %447 = %445.0;
    %448 = %446.0;
    (%447, %448)
  };
  %449() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) */
}

def @func_10344() -> (Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) {
  %450 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %451 = %450.1;
  %452 = cast(%451, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %453 = reshape(%452, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), bool] */;
  %454 = @func_6150(%453) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */;
  %455 = %454.2;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(792, 1), float64] */;
  %457 = log2(%456) /* ty=Tensor[(792, 1), float64] */;
  (%451, %457)
}

def @func_11662() -> (Tensor[(13, 15, 8), bool],) {
  @func_11660() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_11701(%var_11700: Tensor[(15, 9, 1), float64]) -> Tensor[(15, 9, 1), float64] {
  %459 = fn (%var_11675: Tensor[(15, 9, 1), float64]) -> Tensor[(15, 9, 1), float64] {
    %458 = cast(%var_11675, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
    asin(%458) /* ty=Tensor[(15, 9, 1), float64] */
  };
  %459(%var_11700) /* ty=Tensor[(15, 9, 1), float64] */
}

def @func_13002() -> (Tensor[(13, 15, 8), bool],) {
  %460 = @func_11852() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(675), float32]) */;
  %461 = %460.0;
  (%461,)
}

def @func_8395(%var_8390: bool, %var_8391: Tensor[(260), bool], %var_8392: Tensor[(675, 1), float64], %var_8393: Tensor[(792), uint32], %var_8394: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) {
  %483 = fn (%var_8343: bool, %var_8344: Tensor[(260), bool], %var_8345: Tensor[(675, 1), float64], %var_8346: Tensor[(792), uint32], %var_8347: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) {
    %462 = @func_7412() /* ty=(Tensor[(13, 15, 8), float64],) */;
    %463 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %464 = @func_6234() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %465 = cast(%var_8343, dtype="bool") /* ty=bool */;
    %466 = cast(%var_8344, dtype="bool") /* ty=Tensor[(260), bool] */;
    %467 = cast(%var_8345, dtype="float64") /* ty=Tensor[(675, 1), float64] */;
    %468 = cast(%var_8346, dtype="uint32") /* ty=Tensor[(792), uint32] */;
    %469 = cast(%var_8347, dtype="int8") /* ty=Tensor[(56), int8] */;
    %470 = reshape(%465, newshape=[]) /* ty=bool */;
    %471 = reshape(%466, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), bool] */;
    %472 = reshape(%467, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %473 = reshape(%468, newshape=[792]) /* ty=Tensor[(792), uint32] */;
    %474 = reshape(%469, newshape=[56]) /* ty=Tensor[(56), int8] */;
    %475 = @func_5121(%470, %471, %472, %473, %474) /* ty=(Tensor[(10, 13, 2), bool], Tensor[(675), float64], Tensor[(36), float32], Tensor[(675), float64], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
    %476 = @func_7949() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %477 = %462.0;
    %478 = @func_7657() /* ty=Tensor[(13, 15, 8), bool] */;
    %479 = %463.0;
    %480 = %464.0;
    %481 = %475.5;
    %482 = %476.0;
    (%477, %478, %479, %480, %481, %var_8343, %var_8344, %var_8345, %var_8346, %var_8347, %482)
  };
  %483(%var_8390, %var_8391, %var_8392, %var_8393, %var_8394) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */
}

def @func_12287() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(36, 22), uint32], Tensor[(13, 15, 8), float64]) {
  %484 = @func_10388() /* ty=(Tensor[(13, 15, 8), int64],) */;
  %485 = cast(meta[relay.Constant][27] /* ty=Tensor[(36, 22), uint32] */, dtype="uint32") /* ty=Tensor[(36, 22), uint32] */;
  %486 = cast(meta[relay.Constant][27] /* ty=Tensor[(36, 22), uint32] */, dtype="uint32") /* ty=Tensor[(36, 22), uint32] */;
  %487 = reshape(%485, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %488 = reshape(%486, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %489 = @func_10423() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %490 = %484.0;
  %491 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
  %492 = @func_4152(%487, %488) /* ty=Tensor[(6, 12, 11), uint32] */;
  %493 = %489.0;
  (%490, %491, %492, meta[relay.Constant][27] /* ty=Tensor[(36, 22), uint32] */, %493)
}

def @func_14636() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
  %498 = fn () -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
    %494 = @func_9643() /* ty=(Tensor[(13, 15, 8), uint64],) */;
    %495 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %496 = %494.0;
    %497 = %495.0;
    (%496, %497)
  };
  %498() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) */
}

def @func_10109(%var_10107: Tensor[(18, 70), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 2), int64], Tensor[(18, 70), float32], Tensor[(36), float32], Tensor[(240), bool]) {
  @func_10106(%var_10107) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 2), int64], Tensor[(18, 70), float32], Tensor[(36), float32], Tensor[(240), bool]) */
}

def @func_8833() -> Tensor[(675), float64] {
  %499 = @func_6308() /* ty=(Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) */;
  %499.2
}

def @func_8154(%var_8149: Tensor[(2, 5, 12), float32], %var_8150: bool, %var_8151: Tensor[(675), float64], %var_8152: Tensor[(12, 66), uint32], %var_8153: Tensor[(56), int8]) -> (Tensor[(2, 5, 12), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(260), bool], Tensor[(12, 66), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) {
  %525 = fn (%var_8062: Tensor[(2, 5, 12), float32], %var_8103: bool, %var_8105: Tensor[(675), float64], %var_8106: Tensor[(12, 66), uint32], %var_8107: Tensor[(56), int8]) -> (Tensor[(2, 5, 12), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(260), bool], Tensor[(12, 66), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) {
    %500 = @func_6873() /* ty=(Tensor[(2, 5, 12), float32],) */;
    %501 = %500.0;
    %502 = cast(%var_8062, dtype="float64") /* ty=Tensor[(2, 5, 12), float64] */;
    %503 = shape_of(%501, dtype="int32") /* ty=Tensor[(3), int32] */;
    %504 = cast(%501, dtype="float64") /* ty=Tensor[(2, 5, 12), float64] */;
    %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %506 = @func_6754() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */;
    %507 = cast(%var_8103, dtype="bool") /* ty=bool */;
    %508 = cast(meta[relay.Constant][28] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
    %509 = cast(%var_8105, dtype="float64") /* ty=Tensor[(675), float64] */;
    %510 = cast(%var_8106, dtype="uint32") /* ty=Tensor[(12, 66), uint32] */;
    %511 = cast(%var_8107, dtype="int8") /* ty=Tensor[(56), int8] */;
    %512 = reshape(%507, newshape=[]) /* ty=bool */;
    %513 = reshape(%508, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), bool] */;
    %514 = reshape(%509, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %515 = reshape(%510, newshape=[792]) /* ty=Tensor[(792), uint32] */;
    %516 = reshape(%511, newshape=[56]) /* ty=Tensor[(56), int8] */;
    %517 = @func_5121(%512, %513, %514, %515, %516) /* ty=(Tensor[(10, 13, 2), bool], Tensor[(675), float64], Tensor[(36), float32], Tensor[(675), float64], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
    %518 = cast(%var_8105, dtype="float64") /* ty=Tensor[(675), float64] */;
    %519 = cast(%var_8103, dtype="float64") /* ty=float64 */;
    %520 = add(%504, %505) /* ty=Tensor[(2, 5, 12), float64] */;
    %521 = %506.0;
    %522 = %517.5;
    %523 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
    %524 = floor_divide(%518, %519) /* ty=Tensor[(675), float64] */;
    (%520, %521, %522, meta[relay.Constant][28] /* ty=Tensor[(260), bool] */, %var_8106, %var_8107, %523, %524)
  };
  %525(%var_8149, %var_8150, %var_8151, %var_8152, %var_8153) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(260), bool], Tensor[(12, 66), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) */
}

def @func_12954() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %529 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %526 = @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %527 = %526.0;
    %528 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
    (%527, %528)
  };
  %529() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_12858() -> Tensor[(13, 15, 8), bool] {
  @func_12856() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_21327(%var_21325: Tensor[(18, 70), bool], %var_21326: Tensor[(240), float32]) -> (Tensor[(18, 70), int16], Tensor[(5, 15, 9), float64], Tensor[(1, 624), float32], Tensor[(675), float64], Tensor[(18, 70), uint16], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool], Tensor[(240), float32]) {
  %555 = fn (%var_21285: Tensor[(18, 70), bool], %var_21309: Tensor[(240), float32]) -> (Tensor[(18, 70), int16], Tensor[(5, 15, 9), float64], Tensor[(1, 624), float32], Tensor[(675), float64], Tensor[(18, 70), uint16], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool], Tensor[(240), float32]) {
    %530 = @func_15115() /* ty=(Tensor[(18, 70), bool], Tensor[(18, 70), float64]) */;
    %531 = %530.0;
    %532 = cast(meta[relay.Constant][29] /* ty=Tensor[(18, 70), bool] */, dtype="int16") /* ty=Tensor[(18, 70), int16] */;
    %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(2), int32] */;
    %534 = cast(%531, dtype="int16") /* ty=Tensor[(18, 70), int16] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %536 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 624), float32] */, dtype="float32") /* ty=Tensor[(1, 624), float32] */;
    %537 = cast(meta[relay.Constant][31] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
    %538 = reshape(%536, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float32] */;
    %539 = reshape(%537, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %540 = @func_13660(%538, %539) /* ty=(Tensor[(8, 13, 6), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(13, 15, 8), int64]) */;
    %541 = cast(%var_21285, dtype="uint16") /* ty=Tensor[(18, 70), uint16] */;
    %542 = shape_of(%531, dtype="int32") /* ty=Tensor[(2), int32] */;
    %543 = cast(%531, dtype="uint16") /* ty=Tensor[(18, 70), uint16] */;
    %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %545 = cast(meta[relay.Constant][32] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %546 = reshape(%545, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
    %547 = cast(%var_21309, dtype="float32") /* ty=Tensor[(240), float32] */;
    %548 = reshape(%547, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), float32] */;
    %549 = @func_17986(%548) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(4, 15, 4), float64], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %550 = right_shift(%534, %535) /* ty=Tensor[(18, 70), int16] */;
    %551 = %540.1;
    %552 = left_shift(%543, %544) /* ty=Tensor[(18, 70), uint16] */;
    %553 = @func_2630(%546) /* ty=Tensor[(2, 5, 12), float32] */;
    %554 = %549.5;
    (%550, %551, meta[relay.Constant][30] /* ty=Tensor[(1, 624), float32] */, meta[relay.Constant][31] /* ty=Tensor[(675), float64] */, %552, %553, meta[relay.Constant][32] /* ty=Tensor[(120), float32] */, %554, %var_21309)
  };
  %555(%var_21325, %var_21326) /* ty=(Tensor[(18, 70), int16], Tensor[(5, 15, 9), float64], Tensor[(1, 624), float32], Tensor[(675), float64], Tensor[(18, 70), uint16], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool], Tensor[(240), float32]) */
}

def @func_9890() -> (Tensor[(13, 15, 8), float32],) {
  @func_9888() /* ty=(Tensor[(13, 15, 8), float32],) */
}

def @func_12471() -> (Tensor[(13, 15, 8), uint64],) {
  @func_12469() /* ty=(Tensor[(13, 15, 8), uint64],) */
}

def @func_18941() -> (Tensor[(13, 15, 8), bool],) {
  %556 = @func_9025() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %557 = %556.5;
  (%557,)
}

def @func_13422() -> (Tensor[(13, 15, 8), bool], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %571 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %558 = @func_11442() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %559 = @func_11262() /* ty=(Tensor[(5, 15, 9), float64],) */;
    %560 = @func_11298() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %561 = @func_6234() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %562 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %563 = @func_11298() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %564 = %558.0;
    %565 = @func_8833() /* ty=Tensor[(675), float64] */;
    %566 = %559.0;
    %567 = %560.0;
    %568 = %561.0;
    %569 = %562.1;
    %570 = %563.0;
    (%564, %565, %566, %567, %568, %569, %570)
  };
  %571() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_10854() -> Tensor[(5, 15, 9), float32] {
  @func_10852() /* ty=Tensor[(5, 15, 9), float32] */
}

def @func_13721() -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
  %575 = fn () -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
    %572 = @func_12178() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
    %573 = @func_10852() /* ty=Tensor[(5, 15, 9), float32] */;
    %574 = %572.1;
    (%573, %574)
  };
  %575() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_8480(%var_8477: Tensor[(1260, 1), float32], %var_8478: Tensor[(36), float32], %var_8479: Tensor[(240), bool]) -> (Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) {
  %615 = fn (%var_8422: Tensor[(1260, 1), float32], %var_8430: Tensor[(36), float32], %var_8459: Tensor[(240), bool]) -> (Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) {
    %576 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %577 = cast(%var_8430, dtype="float32") /* ty=Tensor[(36), float32] */;
    %578 = reshape(%577, newshape=[18, 2]) /* ty=Tensor[(18, 2), float32] */;
    %579 = cast(%var_8422, dtype="float32") /* ty=Tensor[(1260, 1), float32] */;
    %580 = reshape(%579, newshape=[10, 14, 9]) /* ty=Tensor[(10, 14, 9), float32] */;
    %581 = @func_1891(%580) /* ty=(Tensor[(10, 14, 9), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64]) */;
    %582 = %581.3;
    %583 = cast(%582, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
    %584 = cast(-6.86573f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %585 = @func_7231(%578) /* ty=Tensor[(18, 2), int64] */;
    %586 = cast(%585, dtype="float32") /* ty=Tensor[(18, 2), float32] */;
    %587 = cast(%582, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
    %588 = reshape(%584, newshape=[]) /* ty=float32 */;
    %589 = reshape(%586, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
    %590 = reshape(%587, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %591 = @func_3193(%588, %589, %590) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
    %592 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %593 = @func_8286() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %594 = %593.0;
    %595 = cast(%594, dtype="int64") /* ty=Tensor[(13, 15, 8), int64] */;
    %596 = reshape(%595, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), int64] */;
    %597 = @func_7195(%596) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) */;
    %598 = cast(%var_8459, dtype="bool") /* ty=Tensor[(240), bool] */;
    %599 = cast(%582, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
    %600 = cast(-6.86573f /* ty=float32 */, dtype="uint8") /* ty=uint8 */;
    %601 = cast(meta[relay.Constant][33] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
    %602 = reshape(%598, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), bool] */;
    %603 = reshape(%599, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %604 = reshape(%600, newshape=[]) /* ty=uint8 */;
    %605 = reshape(%601, newshape=[56]) /* ty=Tensor[(56), int8] */;
    %606 = @func_5241(%602, %603, %604, %605) /* ty=(Tensor[(3, 5, 16), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(3, 5, 16), float32], Tensor[(15, 1, 2), uint8], uint8, Tensor[(30), uint8], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
    %607 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
    %608 = %576.0;
    %609 = log2(%583) /* ty=Tensor[(5, 15, 9), float64] */;
    %610 = %591.1;
    %611 = %592.0;
    %612 = %597.1;
    %613 = %606.7;
    %614 = %607.0;
    (%608, %var_8422, %585, %var_8430, %609, %610, -6.86573f /* ty=float32 */, %611, %594, %612, %613, %var_8459, meta[relay.Constant][33] /* ty=Tensor[(56), int8] */, %614)
  };
  %615(%var_8477, %var_8478, %var_8479) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) */
}

def @func_13843() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) {
  %620 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) {
    %616 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %617 = @func_9888() /* ty=(Tensor[(13, 15, 8), float32],) */;
    %618 = %616.0;
    %619 = %617.0;
    (%618, %619)
  };
  %620() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) */
}

def @func_17850() -> (Tensor[(13, 15, 8), bool],) {
  %623 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %621 = @func_9025() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %622 = %621.4;
    (%622,)
  };
  %623() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_10186() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %627 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %624 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
    %625 = %624.1;
    %626 = @func_6785() /* ty=Tensor[(13, 15, 8), bool] */;
    (%625, %626)
  };
  %627() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_21155() -> Tensor[(260), bool] {
  @func_21153() /* ty=Tensor[(260), bool] */
}

def @func_21941() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
  %634 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
    %628 = @func_17849() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %629 = @func_15814() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(260), bool]) */;
    %630 = @func_10388() /* ty=(Tensor[(13, 15, 8), int64],) */;
    %631 = %628.0;
    %632 = %629.0;
    %633 = %630.0;
    (%631, %632, %633)
  };
  %634() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */
}

def @func_12673(%var_12620: Tensor[(675), float64]) -> (Tensor[(13, 15, 8), int64], Tensor[(792), uint32], bool, Tensor[(675), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %635 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %636 = cast(%var_12620, dtype="float64") /* ty=Tensor[(675), float64] */;
  %637 = reshape(%635, newshape=[]) /* ty=bool */;
  %638 = reshape(%636, newshape=[225, 3]) /* ty=Tensor[(225, 3), float64] */;
  %639 = @func_11529(%637, %638) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(260), bool], Tensor[(6, 20), float32], bool, Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %640 = @func_6478() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %641 = @func_12371() /* ty=(Tensor[(13, 15, 8), int64],) */;
  %642 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %643 = %639.5;
  %644 = %640.0;
  %645 = %641.0;
  %646 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  (%642, %643, True /* ty=bool */, %var_12620, %644, %645, %646)
}

def @func_8709(%var_8704: Tensor[(18, 90), float32], %var_8705: Tensor[(18, 90), int64], %var_8706: Tensor[(1, 36), float32], %var_8707: bool, %var_8708: Tensor[(28, 2), int8]) -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 90), float32], Tensor[(675), float64], Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool], Tensor[(60, 2), float32], bool, Tensor[(792), uint32], Tensor[(28, 2), int8]) {
  @func_8702(%var_8704, %var_8705, %var_8706, %var_8707, %var_8708) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 90), float32], Tensor[(675), float64], Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool], Tensor[(60, 2), float32], bool, Tensor[(792), uint32], Tensor[(28, 2), int8]) */
}

def @func_13612(%var_13610: Tensor[(260, 1), bool], %var_13611: Tensor[(28, 2), int8]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260, 1), bool], Tensor[(675), float64], Tensor[(792), uint32], Tensor[(28, 2), int8], Tensor[(13, 15, 8), int64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) {
  %666 = fn (%var_13595: Tensor[(260, 1), bool], %var_13598: Tensor[(28, 2), int8]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260, 1), bool], Tensor[(675), float64], Tensor[(792), uint32], Tensor[(28, 2), int8], Tensor[(13, 15, 8), int64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) {
    %647 = @func_11947() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %648 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %649 = cast(%var_13595, dtype="bool") /* ty=Tensor[(260, 1), bool] */;
    %650 = cast(meta[relay.Constant][34] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
    %651 = cast(meta[relay.Constant][35] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
    %652 = cast(%var_13598, dtype="int8") /* ty=Tensor[(28, 2), int8] */;
    %653 = reshape(%648, newshape=[]) /* ty=bool */;
    %654 = reshape(%649, newshape=[260]) /* ty=Tensor[(260), bool] */;
    %655 = reshape(%650, newshape=[675, 1]) /* ty=Tensor[(675, 1), float64] */;
    %656 = reshape(%651, newshape=[792]) /* ty=Tensor[(792), uint32] */;
    %657 = reshape(%652, newshape=[56]) /* ty=Tensor[(56), int8] */;
    %658 = @func_8389(%653, %654, %655, %656, %657) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
    %659 = @func_12371() /* ty=(Tensor[(13, 15, 8), int64],) */;
    %660 = cast(meta[relay.Constant][36] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %661 = reshape(%660, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
    %662 = %647.0;
    %663 = %658.10;
    %664 = %659.0;
    %665 = @func_2630(%661) /* ty=Tensor[(2, 5, 12), float32] */;
    (%662, %663, True /* ty=bool */, %var_13595, meta[relay.Constant][34] /* ty=Tensor[(675), float64] */, meta[relay.Constant][35] /* ty=Tensor[(792), uint32] */, %var_13598, %664, %665, meta[relay.Constant][36] /* ty=Tensor[(120), float32] */)
  };
  %666(%var_13610, %var_13611) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260, 1), bool], Tensor[(675), float64], Tensor[(792), uint32], Tensor[(28, 2), int8], Tensor[(13, 15, 8), int64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) */
}

def @func_7657() -> Tensor[(13, 15, 8), bool] {
  @func_5962() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_19218(%var_19215: Tensor[(3, 4, 1), float32], %var_19216: Tensor[(3, 4, 240), float32], %var_19217: Tensor[(3, 4, 240), float32]) -> (Tensor[(1, 8, 1), int16], Tensor[(8), float64], Tensor[(3, 4, 240), bool]) {
  @func_19213(%var_19215, %var_19216, %var_19217) /* ty=(Tensor[(1, 8, 1), int16], Tensor[(8), float64], Tensor[(3, 4, 240), bool]) */
}

def @func_11533(%var_11531: bool, %var_11532: Tensor[(225, 3), float64]) -> (Tensor[(13, 15, 8), float32], Tensor[(260), bool], Tensor[(6, 20), float32], bool, Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8]) {
  @func_11529(%var_11531, %var_11532) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(260), bool], Tensor[(6, 20), float32], bool, Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8]) */
}

def @func_21082() -> (Tensor[(13, 15, 8), bool],) {
  %668 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %667 = @func_18471() /* ty=Tensor[(13, 15, 8), bool] */;
    (%667,)
  };
  %668() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_14818(%var_14797: Tensor[(16, 6, 8), float32], %var_14798: Tensor[(16, 6, 8), float32]) -> (Tensor[(16, 6, 8), float32], Tensor[(16, 6, 8), float64]) {
  %669 = cast(%var_14798, dtype="float32") /* ty=Tensor[(16, 6, 8), float32] */;
  %670 = shape_of(%var_14797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%var_14797, dtype="float32") /* ty=Tensor[(16, 6, 8), float32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %673 = cast(%var_14797, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
  %674 = shape_of(%var_14798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(%var_14798, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %677 = floor_divide(%671, %672) /* ty=Tensor[(16, 6, 8), float32] */;
  %678 = mod(%675, %676) /* ty=Tensor[(16, 6, 8), float64] */;
  (%677, %678)
}

def @func_20317() -> Tensor[(13, 15, 8), bool] {
  %680 = fn () -> Tensor[(13, 15, 8), bool] {
    %679 = @func_19384() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %679.1
  };
  %680() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_14515(%var_14488: Tensor[(3, 12), float32]) -> (Tensor[(792, 1), uint32], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), uint64], Tensor[(3, 12), float32], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) {
  %681 = @func_8286() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %682 = %681.0;
  %683 = cast(%682, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %684 = reshape(%683, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), bool] */;
  %685 = @func_6150(%684) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */;
  %686 = cast(%682, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
  %687 = cast(%var_14488, dtype="float32") /* ty=Tensor[(3, 12), float32] */;
  %688 = reshape(%687, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %689 = @func_14084(%688) /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(675), float32], Tensor[(5, 15, 9), float64], float32, Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool]) */;
  %690 = cast(meta[relay.Constant][37] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %691 = reshape(%690, newshape=[630, 2]) /* ty=Tensor[(630, 2), float32] */;
  %692 = @func_10478(%691) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(630, 2), float32]) */;
  %693 = %685.2;
  %694 = tan(%686) /* ty=Tensor[(13, 15, 8), float64] */;
  %695 = %689.0;
  %696 = %692.0;
  (%693, %694, %695, %var_14488, %696, meta[relay.Constant][37] /* ty=Tensor[(1260), float32] */)
}

def @func_12804() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) {
  %697 = @func_8286() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %698 = %697.0;
  %699 = @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%698, %699)
}

def @func_7340(%var_7339: Tensor[(792), uint32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32]) {
  %708 = fn (%var_7330: Tensor[(792), uint32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32]) {
    %700 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
    %701 = cast(%var_7330, dtype="uint32") /* ty=Tensor[(792), uint32] */;
    %702 = cast(%var_7330, dtype="uint32") /* ty=Tensor[(792), uint32] */;
    %703 = reshape(%701, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
    %704 = reshape(%702, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
    %705 = %700.3;
    %706 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
    %707 = @func_4152(%703, %704) /* ty=Tensor[(6, 12, 11), uint32] */;
    (%705, %706, %707, %var_7330)
  };
  %708(%var_7339) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32]) */
}

def @func_21025(%var_20978: uint64, %var_20979: Tensor[(7, 14, 9), uint64]) -> (Tensor[(7, 14, 9), float32], Tensor[(13, 15, 8), bool]) {
  %709 = cast(%var_20978, dtype="bool") /* ty=bool */;
  %710 = cast(%var_20979, dtype="bool") /* ty=Tensor[(7, 14, 9), bool] */;
  %711 = not_equal(%709, %710) /* ty=Tensor[(7, 14, 9), bool] */;
  %712 = cast(%711, dtype="float32") /* ty=Tensor[(7, 14, 9), float32] */;
  %713 = asinh(%712) /* ty=Tensor[(7, 14, 9), float32] */;
  %714 = @func_16256() /* ty=Tensor[(13, 15, 8), bool] */;
  (%713, %714)
}

def @func_11818() -> Tensor[(13, 15, 8), bool] {
  %715 = fn () -> Tensor[(13, 15, 8), bool] {
    @func_11311() /* ty=Tensor[(13, 15, 8), bool] */
  };
  %715() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_21099() -> Tensor[(13, 15, 8), bool] {
  %716 = @func_11559() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %716.1
}

def @func_11444() -> (Tensor[(13, 15, 8), bool],) {
  @func_11442() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_16860() -> (Tensor[(13, 15, 8), bool],) {
  %718 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %717 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
    (%717,)
  };
  %718() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_15480() -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) {
  %719 = @func_9220() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %720 = cast(meta[relay.Constant][38] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %721 = reshape(%720, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %722 = @func_201(%721) /* ty=(Tensor[(5, 15, 9), float64],) */;
  %723 = @func_13459() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %724 = cast(meta[relay.Constant][38] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %725 = %719.0;
  %726 = %722.0;
  %727 = %723.1;
  %728 = sin(%724) /* ty=Tensor[(675), float64] */;
  (%725, %726, %727, %728)
}

def @func_11660() -> (Tensor[(13, 15, 8), bool],) {
  %729 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %730 = %729.0;
  (%730,)
}

def @func_15280() -> Tensor[(792), uint32] {
  %732 = fn () -> Tensor[(792), uint32] {
    %731 = @func_6646() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) */;
    %731.7
  };
  %732() /* ty=Tensor[(792), uint32] */
}

def @func_9888() -> (Tensor[(13, 15, 8), float32],) {
  %733 = @func_9679() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) */;
  %734 = %733.1;
  (%734,)
}

def @func_16401() -> (Tensor[(5, 15, 9), float32],) {
  %739 = fn () -> (Tensor[(5, 15, 9), float32],) {
    %735 = @func_15377() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
    %736 = %735.0;
    %737 = cast(%736, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
    %738 = log(%737) /* ty=Tensor[(5, 15, 9), float32] */;
    (%738,)
  };
  %739() /* ty=(Tensor[(5, 15, 9), float32],) */
}

def @func_20017() -> Tensor[(13, 15, 8), int64] {
  %740 = fn () -> Tensor[(13, 15, 8), int64] {
    @func_9526() /* ty=Tensor[(13, 15, 8), int64] */
  };
  %740() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_14086(%var_14085: Tensor[(1, 36), float32]) -> (Tensor[(13, 15, 8), uint64], Tensor[(675), float32], Tensor[(5, 15, 9), float64], float32, Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool]) {
  %755 = fn (%var_14055: Tensor[(1, 36), float32]) -> (Tensor[(13, 15, 8), uint64], Tensor[(675), float32], Tensor[(5, 15, 9), float64], float32, Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool]) {
    %741 = @func_12469() /* ty=(Tensor[(13, 15, 8), uint64],) */;
    %742 = @func_11852() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(675), float32]) */;
    %743 = cast(9.82309f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %744 = cast(%var_14055, dtype="float32") /* ty=Tensor[(1, 36), float32] */;
    %745 = %742.1;
    %746 = cast(%745, dtype="float64") /* ty=Tensor[(675), float64] */;
    %747 = reshape(%743, newshape=[]) /* ty=float32 */;
    %748 = reshape(%744, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
    %749 = reshape(%746, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %750 = @func_3193(%747, %748, %749) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
    %751 = @func_10032() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(13, 15, 8), bool]) */;
    %752 = %741.0;
    %753 = %750.1;
    %754 = %751.0;
    (%752, %745, %753, 9.82309f /* ty=float32 */, %var_14055, %754)
  };
  %755(%var_14085) /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(675), float32], Tensor[(5, 15, 9), float64], float32, Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_13993() -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float32]) {
  %760 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float32]) {
    %756 = @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %757 = @func_13720() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
    %758 = %756.0;
    %759 = %757.0;
    (%758, %759)
  };
  %760() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float32]) */
}

def @func_20475() -> (Tensor[(13, 15, 8), float64],) {
  %763 = fn () -> (Tensor[(13, 15, 8), float64],) {
    %761 = @func_10423() /* ty=(Tensor[(13, 15, 8), float64],) */;
    %762 = %761.0;
    (%762,)
  };
  %763() /* ty=(Tensor[(13, 15, 8), float64],) */
}

def @func_20872(%var_20870: bool) -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(14, 4), int8], Tensor[(13, 15, 8), bool], Tensor[(260), float32], Tensor[(13, 15, 8), bool]) {
  @func_20869(%var_20870) /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(14, 4), int8], Tensor[(13, 15, 8), bool], Tensor[(260), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_17512(%var_17510: Tensor[(13, 15, 8), bool]) -> (Tensor[(13, 15, 8), uint8],) {
  @func_17509(%var_17510) /* ty=(Tensor[(13, 15, 8), uint8],) */
}

def @func_13578() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 132), uint32]) {
  %764 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 132), uint32] */, dtype="uint32") /* ty=Tensor[(6, 132), uint32] */;
  %765 = reshape(%764, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %766 = @func_7338(%765) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32]) */;
  %767 = @func_12047() /* ty=Tensor[(13, 15, 8), int64] */;
  %768 = @func_11461() /* ty=Tensor[(13, 15, 8), int64] */;
  %769 = %766.1;
  (%767, %768, %769, meta[relay.Constant][39] /* ty=Tensor[(6, 132), uint32] */)
}

def @func_18261() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
  %774 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) {
    %770 = @func_12953() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %771 = @func_12371() /* ty=(Tensor[(13, 15, 8), int64],) */;
    %772 = %770.1;
    %773 = %771.0;
    (%772, %773)
  };
  %774() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */
}

def @func_14890() -> Tensor[(13, 15, 8), bool] {
  %776 = fn () -> Tensor[(13, 15, 8), bool] {
    %775 = @func_11947() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %775.0
  };
  %776() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_13580() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 132), uint32]) {
  @func_13578() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 132), uint32]) */
}

def @func_6787() -> Tensor[(13, 15, 8), bool] {
  @func_6785() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_17465() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %780 = fn () -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
    %777 = @func_16117() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %778 = @func_11461() /* ty=Tensor[(13, 15, 8), int64] */;
    %779 = %777.0;
    (%778, %779)
  };
  %780() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */
}

def @func_6229() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */
}

def @func_21059() -> (Tensor[(13, 15, 8), float32],) {
  %782 = fn () -> (Tensor[(13, 15, 8), float32],) {
    %781 = @func_20038() /* ty=Tensor[(13, 15, 8), float32] */;
    (%781,)
  };
  %782() /* ty=(Tensor[(13, 15, 8), float32],) */
}

def @func_9222() -> (Tensor[(13, 15, 8), bool],) {
  @func_9220() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_12102(%var_12101: Tensor[(1287), float64]) -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], Tensor[(1287), float64], bool, Tensor[(13, 15, 8), bool]) {
  %792 = fn (%var_12093: Tensor[(1287), float64]) -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], Tensor[(1287), float64], bool, Tensor[(13, 15, 8), bool]) {
    %783 = cast(%var_12093, dtype="float64") /* ty=Tensor[(1287), float64] */;
    %784 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %785 = reshape(%783, newshape=[1287]) /* ty=Tensor[(1287), float64] */;
    %786 = reshape(%784, newshape=[]) /* ty=bool */;
    %787 = @func_11808(%785, %786) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(6, 12, 11), uint32], Tensor[(1287), float64], bool, Tensor[(56), int8], Tensor[(36, 1), float32], Tensor[(13, 15, 8), int64]) */;
    %788 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %789 = @func_11461() /* ty=Tensor[(13, 15, 8), int64] */;
    %790 = %787.0;
    %791 = %788.0;
    (%789, %790, %var_12093, False /* ty=bool */, %791)
  };
  %792(%var_12101) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], Tensor[(1287), float64], bool, Tensor[(13, 15, 8), bool]) */
}

def @func_18855() -> (Tensor[(13, 15, 8), int64],) {
  %793 = @func_13578() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(6, 132), uint32]) */;
  %794 = %793.0;
  (%794,)
}

def @func_13157() -> Tensor[(13, 15, 8), int64] {
  %795 = fn () -> Tensor[(13, 15, 8), int64] {
    @func_12716() /* ty=Tensor[(13, 15, 8), int64] */
  };
  %795() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_7234(%var_7232: Tensor[(18, 2), float32]) -> Tensor[(18, 2), int64] {
  @func_7231(%var_7232) /* ty=Tensor[(18, 2), int64] */
}

def @func_9183(%var_9181: Tensor[(36), float32], %var_9182: Tensor[(1, 675), float64]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(675), float64], Tensor[(13, 15, 8), bool]) {
  @func_9179(%var_9181, %var_9182) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(675), float64], Tensor[(13, 15, 8), bool]) */
}

def @func_3197(%var_3194: float32, %var_3195: Tensor[(6, 6, 1), float32], %var_3196: Tensor[(675), float64]) -> (Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) {
  %806 = fn (%var_3159: float32, %var_3160: Tensor[(6, 6, 1), float32], %var_3183: Tensor[(675), float64]) -> (Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) {
    %796 = cast(%var_3159, dtype="float32") /* ty=float32 */;
    %797 = cast(%var_3160, dtype="float32") /* ty=Tensor[(6, 6, 1), float32] */;
    %798 = cast(%var_3183, dtype="float64") /* ty=Tensor[(675), float64] */;
    %799 = reshape(%798, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %800 = @func_201(%799) /* ty=(Tensor[(5, 15, 9), float64],) */;
    %801 = cast(meta[relay.Constant][40] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
    %802 = reshape(%801, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
    %803 = power(%796, %797) /* ty=Tensor[(6, 6, 1), float32] */;
    %804 = %800.0;
    %805 = @func_2630(%802) /* ty=Tensor[(2, 5, 12), float32] */;
    (%803, %804, %var_3183, %805, meta[relay.Constant][40] /* ty=Tensor[(30, 4), float32] */)
  };
  %806(%var_3194, %var_3195, %var_3196) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */
}

def @func_7950() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %810 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %807 = @func_6234() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %808 = @func_6785() /* ty=Tensor[(13, 15, 8), bool] */;
    %809 = %807.0;
    (%808, %809)
  };
  %810() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_14389(%var_14346: Tensor[(11, 117), float64], %var_14347: bool, %var_14348: Tensor[(2, 28), int8]) -> (Tensor[(13, 15, 8), uint64], Tensor[(1, 1260), float32], bool, Tensor[(2, 28), int8], Tensor[(36), float32], Tensor[(11, 117), float64]) {
  %811 = @func_10308() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %812 = cast(%var_14346, dtype="float64") /* ty=Tensor[(11, 117), float64] */;
  %813 = cast(%var_14347, dtype="bool") /* ty=bool */;
  %814 = cast(%var_14348, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
  %815 = cast(meta[relay.Constant][41] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %816 = reshape(%812, newshape=[9, 11, 13]) /* ty=Tensor[(9, 11, 13), float64] */;
  %817 = reshape(%813, newshape=[]) /* ty=bool */;
  %818 = reshape(%814, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %819 = reshape(%815, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %820 = @func_9874(%816, %817, %818, %819) /* ty=(Tensor[(9, 11, 13), float64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(6, 12, 11), uint32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(56), int8], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(1, 1260), float32], Tensor[(1, 36), float32], Tensor[(240), bool]) */;
  %821 = cast(%var_14346, dtype="float64") /* ty=Tensor[(11, 117), float64] */;
  %822 = %811.0;
  %823 = %820.15;
  %824 = sinh(%821) /* ty=Tensor[(11, 117), float64] */;
  (%822, %823, %var_14347, %var_14348, meta[relay.Constant][41] /* ty=Tensor[(36), float32] */, %824)
}

def @func_16293() -> Tensor[(5, 15, 9), float64] {
  @func_16291() /* ty=Tensor[(5, 15, 9), float64] */
}

def @func_14394(%var_14391: Tensor[(11, 117), float64], %var_14392: bool, %var_14393: Tensor[(2, 28), int8]) -> (Tensor[(13, 15, 8), uint64], Tensor[(1, 1260), float32], bool, Tensor[(2, 28), int8], Tensor[(36), float32], Tensor[(11, 117), float64]) {
  @func_14389(%var_14391, %var_14392, %var_14393) /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(1, 1260), float32], bool, Tensor[(2, 28), int8], Tensor[(36), float32], Tensor[(11, 117), float64]) */
}

def @func_16117() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %825 = @func_11074() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %826 = @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %827 = @func_14223() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %828 = @func_10185() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %829 = %825.0;
  %830 = %826.0;
  %831 = %827.0;
  %832 = %828.1;
  (%829, %830, %831, %832)
}

def @func_21588(%var_21586: uint8, %var_21587: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), int64], Tensor[(15, 1, 2), uint8], uint8, Tensor[(5, 6), uint8], bool, Tensor[(120), float32], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) {
  @func_21584(%var_21586, %var_21587) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(15, 1, 2), uint8], uint8, Tensor[(5, 6), uint8], bool, Tensor[(120), float32], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */
}

def @func_14441() -> (Tensor[(675), float64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %833 = @func_6308() /* ty=(Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) */;
  %834 = @func_11660() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %835 = %833.2;
  %836 = @func_7108() /* ty=Tensor[(13, 15, 8), int64] */;
  %837 = %834.0;
  (%835, %836, %837)
}

def @func_15199() -> (Tensor[(2, 5, 12), float32],) {
  %840 = fn () -> (Tensor[(2, 5, 12), float32],) {
    %838 = @func_6873() /* ty=(Tensor[(2, 5, 12), float32],) */;
    %839 = %838.0;
    (%839,)
  };
  %840() /* ty=(Tensor[(2, 5, 12), float32],) */
}

def @func_16741() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
  %841 = @func_14006() /* ty=Tensor[(13, 15, 8), uint64] */;
  %842 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  (%841, %842)
}

def @func_7787() -> Tensor[(13, 15, 8), uint64] {
  @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_20356() -> (Tensor[(13, 15, 8), bool],) {
  %843 = @func_18563() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %844 = %843.1;
  (%844,)
}

def @func_16034() -> Tensor[(13, 15, 8), uint64] {
  %845 = fn () -> Tensor[(13, 15, 8), uint64] {
    @func_11717() /* ty=Tensor[(13, 15, 8), uint64] */
  };
  %845() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_15784() -> (Tensor[(13, 15, 8), bool],) {
  %846 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %847 = %846.1;
  (%847,)
}

def @func_14106() -> (Tensor[(13, 15, 8), bool],) {
  @func_14104() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_20531(%var_20530: Tensor[(1620), float32]) -> (Tensor[(13, 15, 8), int64], Tensor[(15, 9, 12), float64], Tensor[(1620), float32], bool, Tensor[(13, 15, 8), bool]) {
  %856 = fn (%var_20506: Tensor[(1620), float32]) -> (Tensor[(13, 15, 8), int64], Tensor[(15, 9, 12), float64], Tensor[(1620), float32], bool, Tensor[(13, 15, 8), bool]) {
    %848 = cast(%var_20506, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %849 = reshape(%848, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
    %850 = @func_6366(%849) /* ty=(Tensor[(15, 9, 12), float64],) */;
    %851 = @func_15257() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64], bool, Tensor[(1287), float64], bool, Tensor[(14, 4), int8], Tensor[(13, 15, 8), bool]) */;
    %852 = @func_12716() /* ty=Tensor[(13, 15, 8), int64] */;
    %853 = %850.0;
    %854 = %851.2;
    %855 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
    (%852, %853, %var_20506, %854, %855)
  };
  %856(%var_20530) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(15, 9, 12), float64], Tensor[(1620), float32], bool, Tensor[(13, 15, 8), bool]) */
}

def @func_17568(%var_17566: Tensor[(2, 16, 13), float32], %var_17567: Tensor[(1260), float32]) -> (Tensor[(2, 16, 13), float32], Tensor[(5, 15, 9), float64], Tensor[(1260), float32], Tensor[(240), bool], Tensor[(36, ?), uint64]) {
  @func_17564(%var_17566, %var_17567) /* ty=(Tensor[(2, 16, 13), float32], Tensor[(5, 15, 9), float64], Tensor[(1260), float32], Tensor[(240), bool], Tensor[(36, ?), uint64]) */
}

def @func_8211() -> Tensor[(13, 15, 8), bool] {
  %857 = fn () -> Tensor[(13, 15, 8), bool] {
    @func_7031() /* ty=Tensor[(13, 15, 8), bool] */
  };
  %857() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_12142() -> Tensor[(13, 15, 8), bool] {
  @func_7031() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_11298() -> (Tensor[(13, 15, 8), bool],) {
  %858 = @func_9582() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %859 = %858.2;
  (%859,)
}

def @func_15116() -> (Tensor[(18, 70), bool], Tensor[(18, 70), float64]) {
  %876 = fn () -> (Tensor[(18, 70), bool], Tensor[(18, 70), float64]) {
    %860 = @func_13232() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32], Tensor[(1260), float32]) */;
    %861 = %860.1;
    %862 = cast(%861, dtype="float32") /* ty=Tensor[(18, 70), float32] */;
    %863 = atanh(%862) /* ty=Tensor[(18, 70), float32] */;
    %864 = cast(%861, dtype="bool") /* ty=Tensor[(18, 70), bool] */;
    %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(2), int32] */;
    %866 = cast(%863, dtype="bool") /* ty=Tensor[(18, 70), bool] */;
    %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %868 = cast(%863, dtype="float32") /* ty=Tensor[(18, 70), float32] */;
    %869 = sinh(%868) /* ty=Tensor[(18, 70), float32] */;
    %870 = cast(%863, dtype="float64") /* ty=Tensor[(18, 70), float64] */;
    %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(2), int32] */;
    %872 = cast(%869, dtype="float64") /* ty=Tensor[(18, 70), float64] */;
    %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %874 = greater_equal(%866, %867) /* ty=Tensor[(18, 70), bool] */;
    %875 = power(%872, %873) /* ty=Tensor[(18, 70), float64] */;
    (%874, %875)
  };
  %876() /* ty=(Tensor[(18, 70), bool], Tensor[(18, 70), float64]) */
}

def @func_11006() -> (Tensor[(13, 15, 8), int64],) {
  @func_11004() /* ty=(Tensor[(13, 15, 8), int64],) */
}

def @func_15045() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(15, 1, 2), uint8], uint8, Tensor[(5, 6), uint8]) {
  @func_15043() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(15, 1, 2), uint8], uint8, Tensor[(5, 6), uint8]) */
}

def @func_11812(%var_11810: Tensor[(1287), float64], %var_11811: bool) -> (Tensor[(13, 15, 8), int64], Tensor[(6, 12, 11), uint32], Tensor[(1287), float64], bool, Tensor[(56), int8], Tensor[(36, 1), float32], Tensor[(13, 15, 8), int64]) {
  @func_11808(%var_11810, %var_11811) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(6, 12, 11), uint32], Tensor[(1287), float64], bool, Tensor[(56), int8], Tensor[(36, 1), float32], Tensor[(13, 15, 8), int64]) */
}

def @func_12144() -> Tensor[(13, 15, 8), bool] {
  @func_12142() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_6874() -> (Tensor[(2, 5, 12), float32],) {
  %879 = fn () -> (Tensor[(2, 5, 12), float32],) {
    %877 = @func_6646() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) */;
    %878 = %877.1;
    (%878,)
  };
  %879() /* ty=(Tensor[(2, 5, 12), float32],) */
}

def @func_14443() -> (Tensor[(675), float64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  @func_14441() /* ty=(Tensor[(675), float64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */
}

def @func_7277() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %880 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %881 = @func_6754() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */;
  %882 = %880.1;
  %883 = %881.0;
  (%882, %883)
}

def @func_11075() -> (Tensor[(13, 15, 8), bool],) {
  %886 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %884 = @func_10768() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */;
    %885 = %884.0;
    (%885,)
  };
  %886() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_20039() -> Tensor[(13, 15, 8), float32] {
  %887 = fn () -> Tensor[(13, 15, 8), float32] {
    @func_14792() /* ty=Tensor[(13, 15, 8), float32] */
  };
  %887() /* ty=Tensor[(13, 15, 8), float32] */
}

def @func_6369(%var_6367: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float64],) {
  @func_6366(%var_6367) /* ty=(Tensor[(15, 9, 12), float64],) */
}

def @func_10692() -> (Tensor[(13, 15, 8), bool],) {
  %888 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%888,)
}

def @func_16361() -> (Tensor[(13, 15, 8), bool],) {
  @func_16359() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_11718() -> Tensor[(13, 15, 8), uint64] {
  %889 = fn () -> Tensor[(13, 15, 8), uint64] {
    @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */
  };
  %889() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_11117() -> Tensor[(16, 16, 8), float64] {
  %891 = fn () -> Tensor[(16, 16, 8), float64] {
    %890 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 16, 8), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 8), float64] */;
    atan(%890) /* ty=Tensor[(16, 16, 8), float64] */
  };
  %891() /* ty=Tensor[(16, 16, 8), float64] */
}

def @func_18472() -> Tensor[(13, 15, 8), bool] {
  %893 = fn () -> Tensor[(13, 15, 8), bool] {
    %892 = @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %892.0
  };
  %893() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_13525(%var_13522: Tensor[(260), bool]) -> (Tensor[(13, 15, 8), float64], Tensor[(675), float64], Tensor[(36, 1), float32], Tensor[(260), bool], Tensor[(260), bool], Tensor[(56), int8]) {
  %894 = @func_10423() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %895 = cast(meta[relay.Constant][43] /* ty=Tensor[(36, 1), float32] */, dtype="float32") /* ty=Tensor[(36, 1), float32] */;
  %896 = reshape(%895, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %897 = @func_5938(%896) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], float32, Tensor[(36), float32], Tensor[(675), float64]) */;
  %898 = cast(%var_13522, dtype="bool") /* ty=Tensor[(260), bool] */;
  %899 = cast(meta[relay.Constant][44] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %900 = cast(meta[relay.Constant][44] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %901 = reshape(%898, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %902 = reshape(%899, newshape=[28, 2]) /* ty=Tensor[(28, 2), int8] */;
  %903 = reshape(%900, newshape=[28, 2]) /* ty=Tensor[(28, 2), int8] */;
  %904 = @func_11642(%901, %902, %903) /* ty=(Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(675, 792), bool], Tensor[(28, 2), uint32]) */;
  %905 = %894.0;
  %906 = %897.4;
  %907 = %904.2;
  (%905, %906, meta[relay.Constant][43] /* ty=Tensor[(36, 1), float32] */, %907, %var_13522, meta[relay.Constant][44] /* ty=Tensor[(56), int8] */)
}

def @func_19501() -> Tensor[(13, 15, 8), bool] {
  %908 = fn () -> Tensor[(13, 15, 8), bool] {
    @func_10206() /* ty=Tensor[(13, 15, 8), bool] */
  };
  %908() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_15043() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(15, 1, 2), uint8], uint8, Tensor[(5, 6), uint8]) {
  %909 = @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %910 = cast(meta[relay.Constant][45] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %911 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 6), uint8] */, dtype="uint8") /* ty=Tensor[(5, 6), uint8] */;
  %912 = reshape(%910, newshape=[]) /* ty=uint8 */;
  %913 = reshape(%911, newshape=[15, 1, 2]) /* ty=Tensor[(15, 1, 2), uint8] */;
  %914 = @func_3464(%912, %913) /* ty=(Tensor[(15, 1, 2), uint8],) */;
  %915 = %909.0;
  %916 = @func_11311() /* ty=Tensor[(13, 15, 8), bool] */;
  %917 = %914.0;
  (%915, %916, %917, meta[relay.Constant][45] /* ty=uint8 */, meta[relay.Constant][46] /* ty=Tensor[(5, 6), uint8] */)
}

def @func_20966() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %918 = @func_16622() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 70), bool]) */;
  %919 = @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %920 = %918.0;
  %921 = %919.0;
  (%920, %921)
}

def @func_13660(%var_13638: Tensor[(8, 13, 6), float32], %var_13653: Tensor[(675), float64]) -> (Tensor[(8, 13, 6), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(13, 15, 8), int64]) {
  %922 = cast(%var_13638, dtype="float32") /* ty=Tensor[(8, 13, 6), float32] */;
  %923 = cast(%var_13653, dtype="float64") /* ty=Tensor[(675), float64] */;
  %924 = reshape(%923, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %925 = @func_2388(%924) /* ty=(Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64]) */;
  %926 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %927 = erf(%922) /* ty=Tensor[(8, 13, 6), float32] */;
  %928 = %925.3;
  %929 = %926.0;
  (%927, %928, %var_13653, %929)
}

def @func_15186() -> Tensor[(13, 15, 8), bool] {
  %930 = @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %930.0
}

def @func_7072() -> (Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) {
  @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_9482() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool]) {
  %939 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool]) {
    %931 = @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %932 = @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %933 = cast(meta[relay.Constant][47] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %934 = reshape(%933, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
    %935 = %931.0;
    %936 = %932.0;
    %937 = @func_2630(%934) /* ty=Tensor[(2, 5, 12), float32] */;
    %938 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
    (%935, %936, %937, meta[relay.Constant][47] /* ty=Tensor[(120), float32] */, %938)
  };
  %939() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_11949() -> (Tensor[(13, 15, 8), bool],) {
  @func_11947() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_14115() -> Tensor[(13, 15, 8), uint64] {
  %940 = @func_9643() /* ty=(Tensor[(13, 15, 8), uint64],) */;
  %940.0
}

def @func_14314(%var_14312: Tensor[(2, 396), uint32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(6, 12, 11), uint32], Tensor[(2, 396), uint32]) {
  @func_14311(%var_14312) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(6, 12, 11), uint32], Tensor[(2, 396), uint32]) */
}

def @func_6089() -> Tensor[(13, 15, 8), bool] {
  %941 = fn () -> Tensor[(13, 15, 8), bool] {
    @func_5897() /* ty=Tensor[(13, 15, 8), bool] */
  };
  %941() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_18655() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
  @func_18653() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) */
}

def @func_17090() -> Tensor[(675), float64] {
  %942 = fn () -> Tensor[(675), float64] {
    @func_8833() /* ty=Tensor[(675), float64] */
  };
  %942() /* ty=Tensor[(675), float64] */
}

def @func_7109() -> Tensor[(13, 15, 8), int64] {
  %944 = fn () -> Tensor[(13, 15, 8), int64] {
    %943 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
    %943.0
  };
  %944() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_11573() -> (Tensor[(13, 15, 8), bool],) {
  @func_11571() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_18707() -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
  %948 = fn () -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
    %945 = @func_15814() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(260), bool]) */;
    %946 = @func_10852() /* ty=Tensor[(5, 15, 9), float32] */;
    %947 = %945.0;
    (%946, %947)
  };
  %948() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_16624() -> (Tensor[(13, 15, 8), bool], Tensor[(18, 70), bool]) {
  @func_16622() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 70), bool]) */
}

def @func_17769() -> (Tensor[(13, 15, 8), bool], Tensor[(792), uint32]) {
  %953 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(792), uint32]) {
    %949 = @func_11442() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %950 = @func_9725() /* ty=(Tensor[(792), uint32], Tensor[(13, 15, 8), bool]) */;
    %951 = %949.0;
    %952 = %950.0;
    (%951, %952)
  };
  %953() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(792), uint32]) */
}

def @func_14864() -> Tensor[(13, 15, 8), bool] {
  %954 = fn () -> Tensor[(13, 15, 8), bool] {
    @func_10625() /* ty=Tensor[(13, 15, 8), bool] */
  };
  %954() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_11971() -> (Tensor[(13, 15, 8), bool],) {
  @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_19213(%var_19158: Tensor[(3, 4, 1), float32], %var_19182: Tensor[(3, 4, 240), float32], %var_19201: Tensor[(3, 4, 240), float32]) -> (Tensor[(1, 8, 1), int16], Tensor[(8), float64], Tensor[(3, 4, 240), bool]) {
  %955 = cast(meta[relay.Constant][48] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %956 = reshape(%955, newshape=[1, 8, 1]) /* ty=Tensor[(1, 8, 1), float64] */;
  %957 = @func_13286(%956) /* ty=(Tensor[(1, 8, 1), int16], Tensor[(13, 15, 8), uint64]) */;
  %958 = cast(%var_19158, dtype="float32") /* ty=Tensor[(3, 4, 1), float32] */;
  %959 = sqrt(%958) /* ty=Tensor[(3, 4, 1), float32] */;
  %960 = @func_15747() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(1260), float32], Tensor[(36), float32], Tensor[(240), bool], Tensor[(13, 15, 8), bool]) */;
  %961 = %960.5;
  %962 = cast(%959, dtype="float32") /* ty=Tensor[(3, 4, 1), float32] */;
  %963 = cast(%961, dtype="float32") /* ty=Tensor[(240), float32] */;
  %964 = floor_mod(%962, %963) /* ty=Tensor[(3, 4, 240), float32] */;
  %965 = cast(%var_19182, dtype="uint64") /* ty=Tensor[(3, 4, 240), uint64] */;
  %966 = shape_of(%964, dtype="int32") /* ty=Tensor[(3), int32] */;
  %967 = cast(%964, dtype="uint64") /* ty=Tensor[(3, 4, 240), uint64] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %969 = right_shift(%967, %968) /* ty=Tensor[(3, 4, 240), uint64] */;
  %970 = cast(%969, dtype="float32") /* ty=Tensor[(3, 4, 240), float32] */;
  %971 = cos(%970) /* ty=Tensor[(3, 4, 240), float32] */;
  %972 = cast(%var_19201, dtype="bool") /* ty=Tensor[(3, 4, 240), bool] */;
  %973 = shape_of(%971, dtype="int32") /* ty=Tensor[(3), int32] */;
  %974 = cast(%971, dtype="bool") /* ty=Tensor[(3, 4, 240), bool] */;
  %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %976 = %957.0;
  %977 = equal(%974, %975) /* ty=Tensor[(3, 4, 240), bool] */;
  (%976, meta[relay.Constant][48] /* ty=Tensor[(8), float64] */, %977)
}

def @func_10293() -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) {
  %984 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) {
    %978 = @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %979 = cast(meta[relay.Constant][49] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
    %980 = reshape(%979, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %981 = @func_2388(%980) /* ty=(Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64]) */;
    %982 = %978.0;
    %983 = %981.3;
    (%982, %983, meta[relay.Constant][49] /* ty=Tensor[(675), float64] */)
  };
  %984() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) */
}

def @func_9527() -> Tensor[(13, 15, 8), int64] {
  %986 = fn () -> Tensor[(13, 15, 8), int64] {
    %985 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
    %985.0
  };
  %986() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_21036() -> Tensor[(13, 15, 8), bool] {
  %987 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %987.0
}

def @func_14793() -> Tensor[(13, 15, 8), float32] {
  %989 = fn () -> Tensor[(13, 15, 8), float32] {
    %988 = @func_9679() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) */;
    %988.1
  };
  %989() /* ty=Tensor[(13, 15, 8), float32] */
}

def @func_12597() -> (Tensor[(792, 1), float64],) {
  %992 = fn () -> (Tensor[(792, 1), float64],) {
    %990 = @func_10344() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) */;
    %991 = %990.1;
    (%991,)
  };
  %992() /* ty=(Tensor[(792, 1), float64],) */
}

def @func_11300() -> (Tensor[(13, 15, 8), bool],) {
  @func_11298() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_6310() -> (Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) {
  @func_6308() /* ty=(Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) */
}

def @func_8539() -> (Tensor[(13, 15, 8), float64],) {
  @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */
}

def @func_20776() -> (Tensor[(13, 15, 8), bool],) {
  %995 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %993 = @func_14104() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %994 = %993.0;
    (%994,)
  };
  %995() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_11854() -> (Tensor[(13, 15, 8), bool], Tensor[(675), float32]) {
  @func_11852() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(675), float32]) */
}

def @func_12676(%var_12674: Tensor[(675), float64]) -> (Tensor[(13, 15, 8), int64], Tensor[(792), uint32], bool, Tensor[(675), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  @func_12673(%var_12674) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(792), uint32], bool, Tensor[(675), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */
}

def @func_15815() -> (Tensor[(13, 15, 8), bool], Tensor[(260), bool]) {
  %1000 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(260), bool]) {
    %996 = @func_13992() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float32]) */;
    %997 = @func_6646() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) */;
    %998 = %996.0;
    %999 = %997.6;
    (%998, %999)
  };
  %1000() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(260), bool]) */
}

def @func_15698(%var_15696: Tensor[(1620), float32], %var_15697: Tensor[(36), float32]) -> (Tensor[(5, 15, 9), float32], Tensor[(60, 2), float32], Tensor[(1620), float32], Tensor[(36), float32], bool, Tensor[(2, 28), int8]) {
  %1014 = fn (%var_15677: Tensor[(1620), float32], %var_15678: Tensor[(36), float32]) -> (Tensor[(5, 15, 9), float32], Tensor[(60, 2), float32], Tensor[(1620), float32], Tensor[(36), float32], bool, Tensor[(2, 28), int8]) {
    %1001 = cast(%var_15677, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %1002 = cast(%var_15677, dtype="int64") /* ty=Tensor[(1620), int64] */;
    %1003 = cast(%var_15678, dtype="float32") /* ty=Tensor[(36), float32] */;
    %1004 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %1005 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 28), int8] */, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
    %1006 = reshape(%1001, newshape=[18, 90]) /* ty=Tensor[(18, 90), float32] */;
    %1007 = reshape(%1002, newshape=[18, 90]) /* ty=Tensor[(18, 90), int64] */;
    %1008 = reshape(%1003, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
    %1009 = reshape(%1004, newshape=[]) /* ty=bool */;
    %1010 = reshape(%1005, newshape=[28, 2]) /* ty=Tensor[(28, 2), int8] */;
    %1011 = @func_8702(%1006, %1007, %1008, %1009, %1010) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 90), float32], Tensor[(675), float64], Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool], Tensor[(60, 2), float32], bool, Tensor[(792), uint32], Tensor[(28, 2), int8]) */;
    %1012 = @func_14161() /* ty=Tensor[(5, 15, 9), float32] */;
    %1013 = %1011.7;
    (%1012, %1013, %var_15677, %var_15678, True /* ty=bool */, meta[relay.Constant][50] /* ty=Tensor[(2, 28), int8] */)
  };
  %1014(%var_15696, %var_15697) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(60, 2), float32], Tensor[(1620), float32], Tensor[(36), float32], bool, Tensor[(2, 28), int8]) */
}

def @func_19920() -> (Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(260), bool]) {
  @func_19918() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(260), bool]) */
}

def @func_10388() -> (Tensor[(13, 15, 8), int64],) {
  %1015 = @func_9526() /* ty=Tensor[(13, 15, 8), int64] */;
  (%1015,)
}

def @func_9412() -> (Tensor[(13, 15, 8), bool],) {
  %1016 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1017 = %1016.1;
  (%1017,)
}

def @func_20869(%var_20805: bool) -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(14, 4), int8], Tensor[(13, 15, 8), bool], Tensor[(260), float32], Tensor[(13, 15, 8), bool]) {
  %1018 = cast(%var_20805, dtype="bool") /* ty=bool */;
  %1019 = cast(meta[relay.Constant][51] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %1020 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 4), int8] */, dtype="int8") /* ty=Tensor[(14, 4), int8] */;
  %1021 = reshape(%1018, newshape=[]) /* ty=bool */;
  %1022 = reshape(%1019, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %1023 = reshape(%1020, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1024 = @func_9320(%1021, %1022, %1023) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], bool, bool, Tensor[(260), bool], Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) */;
  %1025 = @func_15598() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1026 = cast(meta[relay.Constant][51] /* ty=Tensor[(260), bool] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1027 = cast(%var_20805, dtype="float32") /* ty=float32 */;
  %1028 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1029 = @func_17855() /* ty=Tensor[(13, 15, 8), uint64] */;
  %1030 = %1024.8;
  %1031 = %1025.0;
  %1032 = multiply(%1026, %1027) /* ty=Tensor[(260), float32] */;
  %1033 = %1028.0;
  (%1029, %1030, meta[relay.Constant][52] /* ty=Tensor[(14, 4), int8] */, %1031, %1032, %1033)
}

def @func_7413() -> (Tensor[(13, 15, 8), float64],) {
  %1037 = fn () -> (Tensor[(13, 15, 8), float64],) {
    %1034 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
    %1035 = cast(%1034, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
    %1036 = asin(%1035) /* ty=Tensor[(13, 15, 8), float64] */;
    (%1036,)
  };
  %1037() /* ty=(Tensor[(13, 15, 8), float64],) */
}

def @func_18653() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
  %1038 = @func_18052() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */;
  %1039 = @func_6478() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1040 = @func_16574() /* ty=Tensor[(13, 15, 8), bool] */;
  %1041 = %1038.2;
  %1042 = %1039.0;
  (%1040, %1041, %1042)
}

def @func_21497() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1046 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %1043 = @func_6234() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1044 = %1043.0;
    %1045 = @func_21036() /* ty=Tensor[(13, 15, 8), bool] */;
    (%1044, %1045)
  };
  %1046() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_9325(%var_9322: bool, %var_9323: Tensor[(260), bool], %var_9324: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], bool, bool, Tensor[(260), bool], Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) {
  @func_9320(%var_9322, %var_9323, %var_9324) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], bool, bool, Tensor[(260), bool], Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) */
}

def @func_16359() -> (Tensor[(13, 15, 8), bool],) {
  %1047 = @func_12856() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1047,)
}

def @func_13233() -> (Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32], Tensor[(1260), float32]) {
  %1053 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32], Tensor[(1260), float32]) {
    %1048 = cast(meta[relay.Constant][53] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %1049 = reshape(%1048, newshape=[18, 70]) /* ty=Tensor[(18, 70), float32] */;
    %1050 = @func_10106(%1049) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 2), int64], Tensor[(18, 70), float32], Tensor[(36), float32], Tensor[(240), bool]) */;
    %1051 = @func_12142() /* ty=Tensor[(13, 15, 8), bool] */;
    %1052 = %1050.3;
    (%1051, %1052, meta[relay.Constant][53] /* ty=Tensor[(1260), float32] */)
  };
  %1053() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32], Tensor[(1260), float32]) */
}

def @func_12837() -> (Tensor[(13, 15, 8), bool],) {
  @func_12835() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_13929(%var_13895: Tensor[(1, 16, 7), int8]) -> (Tensor[(1, 16, 7), int8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(675), float64], Tensor[(13, 15, 8), bool]) {
  %1054 = cast(meta[relay.Constant][54] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1055 = cast(%var_13895, dtype="int8") /* ty=Tensor[(1, 16, 7), int8] */;
  %1056 = cast(meta[relay.Constant][55] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1057 = reshape(%1056, newshape=[75, 9]) /* ty=Tensor[(75, 9), float64] */;
  %1058 = @func_10925(%1057) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(56), int8], bool, Tensor[(260), bool], Tensor[(75, 9), float64], Tensor[(396, 2), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %1059 = @func_13459() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1060 = add(%1054, %1055) /* ty=Tensor[(1, 16, 7), int8] */;
  %1061 = @func_11817() /* ty=Tensor[(13, 15, 8), bool] */;
  %1062 = %1058.1;
  %1063 = %1059.1;
  (%1060, %1061, %1062, meta[relay.Constant][55] /* ty=Tensor[(675), float64] */, %1063)
}

def @func_203(%var_202: Tensor[(5, 15, 9), float64]) -> (Tensor[(5, 15, 9), float64],) {
  %1066 = fn (%var_182: Tensor[(5, 15, 9), float64]) -> (Tensor[(5, 15, 9), float64],) {
    %1064 = cast(%var_182, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
    %1065 = sqrt(%1064) /* ty=Tensor[(5, 15, 9), float64] */;
    (%1065,)
  };
  %1066(%var_202) /* ty=(Tensor[(5, 15, 9), float64],) */
}

def @func_15258() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64], bool, Tensor[(1287), float64], bool, Tensor[(14, 4), int8], Tensor[(13, 15, 8), bool]) {
  %1081 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64], bool, Tensor[(1287), float64], bool, Tensor[(14, 4), int8], Tensor[(13, 15, 8), bool]) {
    %1067 = @func_11660() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1068 = @func_10388() /* ty=(Tensor[(13, 15, 8), int64],) */;
    %1069 = cast(meta[relay.Constant][56] /* ty=Tensor[(1287), float64] */, dtype="float64") /* ty=Tensor[(1287), float64] */;
    %1070 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %1071 = cast(meta[relay.Constant][57] /* ty=Tensor[(14, 4), int8] */, dtype="int8") /* ty=Tensor[(14, 4), int8] */;
    %1072 = reshape(%1069, newshape=[11, 117]) /* ty=Tensor[(11, 117), float64] */;
    %1073 = reshape(%1070, newshape=[]) /* ty=bool */;
    %1074 = reshape(%1071, newshape=[2, 28]) /* ty=Tensor[(2, 28), int8] */;
    %1075 = @func_14389(%1072, %1073, %1074) /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(1, 1260), float32], bool, Tensor[(2, 28), int8], Tensor[(36), float32], Tensor[(11, 117), float64]) */;
    %1076 = @func_11559() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1077 = %1067.0;
    %1078 = %1068.0;
    %1079 = %1075.2;
    %1080 = %1076.1;
    (%1077, %1078, %1079, meta[relay.Constant][56] /* ty=Tensor[(1287), float64] */, False /* ty=bool */, meta[relay.Constant][57] /* ty=Tensor[(14, 4), int8] */, %1080)
  };
  %1081() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64], bool, Tensor[(1287), float64], bool, Tensor[(14, 4), int8], Tensor[(13, 15, 8), bool]) */
}

def @func_17509(%var_17497: Tensor[(13, 15, 8), bool]) -> (Tensor[(13, 15, 8), uint8],) {
  %1082 = @func_16414() /* ty=Tensor[(13, 15, 8), bool] */;
  %1083 = cast(%var_17497, dtype="uint8") /* ty=Tensor[(13, 15, 8), uint8] */;
  %1084 = shape_of(%1082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1085 = cast(%1082, dtype="uint8") /* ty=Tensor[(13, 15, 8), uint8] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1087 = right_shift(%1085, %1086) /* ty=Tensor[(13, 15, 8), uint8] */;
  (%1087,)
}

def @func_17114() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 5, 5), float64], Tensor[(65), int64], Tensor[(325), int64]) {
  @func_17112() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 5, 5), float64], Tensor[(65), int64], Tensor[(325), int64]) */
}

def @func_17780() -> (Tensor[(13, 15, 8), bool],) {
  @func_17778() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_18193() -> Tensor[(5, 15, 9), float64] {
  %1088 = @func_12585() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %1089 = %1088.0;
  %1090 = cast(%1089, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  acos(%1090) /* ty=Tensor[(5, 15, 9), float64] */
}

def @func_21854(%var_21852: Tensor[(15, 9, 11), float64]) -> (Tensor[(15, 9, 1), float64], Tensor[(3, 45), float64], Tensor[(15, 9, 11), float64]) {
  @func_21851(%var_21852) /* ty=(Tensor[(15, 9, 1), float64], Tensor[(3, 45), float64], Tensor[(15, 9, 11), float64]) */
}

def @func_7690() -> Tensor[(5, 15, 9), float64] {
  @func_7688() /* ty=Tensor[(5, 15, 9), float64] */
}

def @func_13197(%var_13195: Tensor[(792, 9), float64]) -> (Tensor[(792, 9), bool], Tensor[(792, 9), bool]) {
  @func_13194(%var_13195) /* ty=(Tensor[(792, 9), bool], Tensor[(792, 9), bool]) */
}

def @func_3467(%var_3465: uint8, %var_3466: Tensor[(15, 1, 2), uint8]) -> (Tensor[(15, 1, 2), uint8],) {
  %1094 = fn (%var_3424: uint8, %var_3425: Tensor[(15, 1, 2), uint8]) -> (Tensor[(15, 1, 2), uint8],) {
    %1091 = cast(%var_3424, dtype="uint8") /* ty=uint8 */;
    %1092 = cast(%var_3425, dtype="uint8") /* ty=Tensor[(15, 1, 2), uint8] */;
    %1093 = subtract(%1091, %1092) /* ty=Tensor[(15, 1, 2), uint8] */;
    (%1093,)
  };
  %1094(%var_3465, %var_3466) /* ty=(Tensor[(15, 1, 2), uint8],) */
}

def @func_15482() -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) {
  @func_15480() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) */
}

def @func_7688() -> Tensor[(5, 15, 9), float64] {
  %1095 = @func_6308() /* ty=(Tensor[(13, 15, 8), float64], Tensor[(5, 15, 9), float64], Tensor[(675), float64]) */;
  %1095.1
}

def @func_10390() -> (Tensor[(13, 15, 8), int64],) {
  @func_10388() /* ty=(Tensor[(13, 15, 8), int64],) */
}

def @func_11997() -> Tensor[(13, 15, 8), uint64] {
  %1097 = fn () -> Tensor[(13, 15, 8), uint64] {
    %1096 = @func_10308() /* ty=(Tensor[(13, 15, 8), uint64],) */;
    %1096.0
  };
  %1097() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_19700() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %1106 = fn () -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
    %1098 = @func_16859() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1099 = @func_10344() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) */;
    %1100 = @func_17621() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1101 = @func_7108() /* ty=Tensor[(13, 15, 8), int64] */;
    %1102 = %1098.0;
    %1103 = %1099.1;
    %1104 = @func_7108() /* ty=Tensor[(13, 15, 8), int64] */;
    %1105 = %1100.0;
    (%1101, %1102, %1103, %1104, %1105)
  };
  %1106() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64], Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */
}

def @func_11559() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1107 = @func_9342() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1108 = %1107.0;
  %1109 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1108, %1109)
}

def @func_15874() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(36), float32]) {
  %1115 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(36), float32]) {
    %1110 = cast(meta[relay.Constant][58] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
    %1111 = reshape(%1110, newshape=[3, 12]) /* ty=Tensor[(3, 12), float32] */;
    %1112 = @func_14515(%1111) /* ty=(Tensor[(792, 1), uint32], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), uint64], Tensor[(3, 12), float32], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) */;
    %1113 = @func_14688() /* ty=Tensor[(13, 15, 8), bool] */;
    %1114 = %1112.2;
    (%1113, %1114, meta[relay.Constant][58] /* ty=Tensor[(36), float32] */)
  };
  %1115() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(36), float32]) */
}

def @func_5898() -> Tensor[(13, 15, 8), bool] {
  %1118 = fn () -> Tensor[(13, 15, 8), bool] {
    %1116 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 15, 8), int8] */, dtype="bool") /* ty=Tensor[(1, 15, 8), bool] */;
    %1117 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 15, 8), int8] */, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
    less_equal(%1116, %1117) /* ty=Tensor[(13, 15, 8), bool] */
  };
  %1118() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_12179() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %1122 = fn () -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
    %1119 = @func_10344() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) */;
    %1120 = @func_9526() /* ty=Tensor[(13, 15, 8), int64] */;
    %1121 = %1119.0;
    (%1120, %1121)
  };
  %1122() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */
}

def @func_21522() -> Tensor[(13, 15, 8), float32] {
  @func_21520() /* ty=Tensor[(13, 15, 8), float32] */
}

def @func_5246(%var_5242: Tensor[(3, 5, 16), bool], %var_5243: Tensor[(675), float64], %var_5244: uint8, %var_5245: Tensor[(56), int8]) -> (Tensor[(3, 5, 16), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(3, 5, 16), float32], Tensor[(15, 1, 2), uint8], uint8, Tensor[(30), uint8], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) {
  %1143 = fn (%var_5193: Tensor[(3, 5, 16), bool], %var_5199: Tensor[(675), float64], %var_5222: uint8, %var_5237: Tensor[(56), int8]) -> (Tensor[(3, 5, 16), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(3, 5, 16), float32], Tensor[(15, 1, 2), uint8], uint8, Tensor[(30), uint8], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) {
    %1123 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 5, 16), bool] */, dtype="bool") /* ty=Tensor[(3, 5, 16), bool] */;
    %1124 = shape_of(%var_5193, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1125 = cast(%var_5193, dtype="bool") /* ty=Tensor[(3, 5, 16), bool] */;
    %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1127 = cast(%var_5199, dtype="float64") /* ty=Tensor[(675), float64] */;
    %1128 = reshape(%1127, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %1129 = @func_201(%1128) /* ty=(Tensor[(5, 15, 9), float64],) */;
    %1130 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 5, 16), bool] */, dtype="float32") /* ty=Tensor[(3, 5, 16), float32] */;
    %1131 = cast(%var_5222, dtype="uint8") /* ty=uint8 */;
    %1132 = cast(meta[relay.Constant][62] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
    %1133 = reshape(%1131, newshape=[]) /* ty=uint8 */;
    %1134 = reshape(%1132, newshape=[15, 1, 2]) /* ty=Tensor[(15, 1, 2), uint8] */;
    %1135 = @func_3464(%1133, %1134) /* ty=(Tensor[(15, 1, 2), uint8],) */;
    %1136 = cast(%var_5237, dtype="int8") /* ty=Tensor[(56), int8] */;
    %1137 = reshape(%1136, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), int8] */;
    %1138 = logical_and(%1125, %1126) /* ty=Tensor[(3, 5, 16), bool] */;
    %1139 = %1129.0;
    %1140 = rsqrt(%1130) /* ty=Tensor[(3, 5, 16), float32] */;
    %1141 = %1135.0;
    %1142 = @func_3518(%1137) /* ty=Tensor[(2, 4, 7), int8] */;
    (%1138, %1139, %var_5199, %1140, %1141, %var_5222, meta[relay.Constant][62] /* ty=Tensor[(30), uint8] */, %1142, %var_5237)
  };
  %1143(%var_5242, %var_5243, %var_5244, %var_5245) /* ty=(Tensor[(3, 5, 16), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(3, 5, 16), float32], Tensor[(15, 1, 2), uint8], uint8, Tensor[(30), uint8], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */
}

def @func_7554() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1148 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %1144 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1145 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1146 = %1144.0;
    %1147 = %1145.0;
    (%1146, %1147)
  };
  %1148() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_8835() -> Tensor[(675), float64] {
  @func_8833() /* ty=Tensor[(675), float64] */
}

def @func_10694() -> (Tensor[(13, 15, 8), bool],) {
  @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_15512() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1152 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %1149 = @func_11559() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1150 = %1149.0;
    %1151 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
    (%1150, %1151)
  };
  %1152() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_18053() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) {
  %1158 = fn () -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) {
    %1153 = @func_14104() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1154 = @func_14529() /* ty=(Tensor[(13, 15, 8), uint64],) */;
    %1155 = @func_11996() /* ty=Tensor[(13, 15, 8), uint64] */;
    %1156 = %1153.0;
    %1157 = %1154.0;
    (%1155, %1156, %1157)
  };
  %1158() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */
}

def @func_9342() -> (Tensor[(13, 15, 8), bool],) {
  %1159 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1160 = %1159.1;
  (%1160,)
}

def @func_13932(%var_13930: Tensor[(1, 16, 7), int8]) -> (Tensor[(1, 16, 7), int8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(675), float64], Tensor[(13, 15, 8), bool]) {
  @func_13929(%var_13930) /* ty=(Tensor[(1, 16, 7), int8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(675), float64], Tensor[(13, 15, 8), bool]) */
}

def @func_19991() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(396, 2), uint32]) {
  %1161 = @func_18706() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
  %1162 = cast(meta[relay.Constant][63] /* ty=Tensor[(396, 2), uint32] */, dtype="uint32") /* ty=Tensor[(396, 2), uint32] */;
  %1163 = reshape(%1162, newshape=[2, 396]) /* ty=Tensor[(2, 396), uint32] */;
  %1164 = @func_14311(%1163) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(6, 12, 11), uint32], Tensor[(2, 396), uint32]) */;
  %1165 = %1161.1;
  %1166 = %1164.0;
  (%1165, %1166, meta[relay.Constant][63] /* ty=Tensor[(396, 2), uint32] */)
}

def @func_2390(%var_2389: Tensor[(675), float64]) -> (Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64]) {
  %1177 = fn (%var_2360: Tensor[(675), float64]) -> (Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64]) {
    %1167 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 5), float32] */;
    %1168 = cast(%var_2360, dtype="float64") /* ty=Tensor[(675), float64] */;
    %1169 = reshape(%1168, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %1170 = @func_201(%1169) /* ty=(Tensor[(5, 15, 9), float64],) */;
    %1171 = cast(%var_2360, dtype="float64") /* ty=Tensor[(675), float64] */;
    %1172 = reshape(%1171, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %1173 = @func_201(%1172) /* ty=(Tensor[(5, 15, 9), float64],) */;
    %1174 = log2(%1167) /* ty=Tensor[(1, 12, 5), float32] */;
    %1175 = %1170.0;
    %1176 = %1173.0;
    (%1174, %1175, %var_2360, %1176)
  };
  %1177(%var_2389) /* ty=(Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64]) */
}

def @func_11529(%var_11514: bool, %var_11515: Tensor[(225, 3), float64]) -> (Tensor[(13, 15, 8), float32], Tensor[(260), bool], Tensor[(6, 20), float32], bool, Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8]) {
  %1178 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1179 = %1178.0;
  %1180 = cast(%1179, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
  %1181 = cast(meta[relay.Constant][65] /* ty=Tensor[(6, 20), float32] */, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %1182 = cast(%var_11514, dtype="bool") /* ty=bool */;
  %1183 = cast(%var_11515, dtype="float64") /* ty=Tensor[(225, 3), float64] */;
  %1184 = cast(meta[relay.Constant][66] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1185 = cast(meta[relay.Constant][67] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1186 = reshape(%1181, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %1187 = reshape(%1182, newshape=[]) /* ty=bool */;
  %1188 = reshape(%1183, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %1189 = reshape(%1184, newshape=[12, 66]) /* ty=Tensor[(12, 66), uint32] */;
  %1190 = reshape(%1185, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1191 = @func_8148(%1186, %1187, %1188, %1189, %1190) /* ty=(Tensor[(2, 5, 12), float64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], Tensor[(260), bool], Tensor[(12, 66), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(675), float64]) */;
  %1192 = log10(%1180) /* ty=Tensor[(13, 15, 8), float32] */;
  %1193 = %1191.3;
  (%1192, %1193, meta[relay.Constant][65] /* ty=Tensor[(6, 20), float32] */, %var_11514, %var_11515, meta[relay.Constant][66] /* ty=Tensor[(792), uint32] */, meta[relay.Constant][67] /* ty=Tensor[(56), int8] */)
}

def @func_13528(%var_13526: Tensor[(260), bool]) -> (Tensor[(13, 15, 8), float64], Tensor[(675), float64], Tensor[(36, 1), float32], Tensor[(260), bool], Tensor[(260), bool], Tensor[(56), int8]) {
  @func_13525(%var_13526) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(675), float64], Tensor[(36, 1), float32], Tensor[(260), bool], Tensor[(260), bool], Tensor[(56), int8]) */
}

def @func_11852() -> (Tensor[(13, 15, 8), bool], Tensor[(675), float32]) {
  %1194 = @func_10827() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1195 = @func_8833() /* ty=Tensor[(675), float64] */;
  %1196 = cast(%1195, dtype="float32") /* ty=Tensor[(675), float32] */;
  %1197 = %1194.0;
  %1198 = log(%1196) /* ty=Tensor[(675), float32] */;
  (%1197, %1198)
}

def @func_15600() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  @func_15598() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_9726() -> (Tensor[(792), uint32], Tensor[(13, 15, 8), bool]) {
  %1203 = fn () -> (Tensor[(792), uint32], Tensor[(13, 15, 8), bool]) {
    %1199 = @func_6646() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], float32, Tensor[(36), float32], Tensor[(1, 675), float64], Tensor[(2, 4, 7), int8], Tensor[(260), bool], Tensor[(792), uint32], Tensor[(56), int8]) */;
    %1200 = @func_6449() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1201 = %1199.7;
    %1202 = %1200.0;
    (%1201, %1202)
  };
  %1203() /* ty=(Tensor[(792), uint32], Tensor[(13, 15, 8), bool]) */
}

def @func_16815() -> Tensor[(13, 15, 8), bool] {
  @func_16813() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_9344() -> (Tensor[(13, 15, 8), bool],) {
  @func_9342() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_10309() -> (Tensor[(13, 15, 8), uint64],) {
  %1205 = fn () -> (Tensor[(13, 15, 8), uint64],) {
    %1204 = @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */;
    (%1204,)
  };
  %1205() /* ty=(Tensor[(13, 15, 8), uint64],) */
}

def @func_12716() -> Tensor[(13, 15, 8), int64] {
  @func_12047() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_14104() -> (Tensor[(13, 15, 8), bool],) {
  %1206 = @func_10692() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1207 = %1206.0;
  (%1207,)
}

def @func_15748() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(1260), float32], Tensor[(36), float32], Tensor[(240), bool], Tensor[(13, 15, 8), bool]) {
  %1222 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(1260), float32], Tensor[(36), float32], Tensor[(240), bool], Tensor[(13, 15, 8), bool]) {
    %1208 = @func_10185() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1209 = @func_15377() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */;
    %1210 = cast(meta[relay.Constant][68] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %1211 = cast(meta[relay.Constant][69] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
    %1212 = cast(meta[relay.Constant][70] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
    %1213 = reshape(%1210, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float32] */;
    %1214 = reshape(%1211, newshape=[36]) /* ty=Tensor[(36), float32] */;
    %1215 = reshape(%1212, newshape=[240]) /* ty=Tensor[(240), bool] */;
    %1216 = @func_8476(%1213, %1214, %1215) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) */;
    %1217 = @func_9220() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1218 = %1208.0;
    %1219 = %1209.1;
    %1220 = %1216.10;
    %1221 = %1217.0;
    (%1218, %1219, %1220, meta[relay.Constant][68] /* ty=Tensor[(1260), float32] */, meta[relay.Constant][69] /* ty=Tensor[(36), float32] */, meta[relay.Constant][70] /* ty=Tensor[(240), bool] */, %1221)
  };
  %1222() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(1260), float32], Tensor[(36), float32], Tensor[(240), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_17231() -> Tensor[(13, 15, 8), bool] {
  @func_10206() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_16332(%var_16331: Tensor[(9, 6, 16), float64]) -> Tensor[(9, 6, 16), float64] {
  %1224 = fn (%var_16327: Tensor[(9, 6, 16), float64]) -> Tensor[(9, 6, 16), float64] {
    %1223 = cast(%var_16327, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
    tan(%1223) /* ty=Tensor[(9, 6, 16), float64] */
  };
  %1224(%var_16331) /* ty=Tensor[(9, 6, 16), float64] */
}

def @func_6188() -> Tensor[(13, 15, 8), int64] {
  %1231 = fn () -> Tensor[(13, 15, 8), int64] {
    %1225 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
    %1226 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
    %1227 = cast(%1226, dtype="int64") /* ty=Tensor[(13, 15, 8), int64] */;
    %1228 = shape_of(%1225, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1229 = cast(%1225, dtype="int64") /* ty=Tensor[(13, 15, 8), int64] */;
    %1230 = dyn.reshape(%1227, %1228, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    bitwise_or(%1229, %1230) /* ty=Tensor[(13, 15, 8), int64] */
  };
  %1231() /* ty=Tensor[(13, 15, 8), int64] */
}

def @func_17724() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64]) {
  %1238 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64]) {
    %1232 = @func_9481() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 5, 12), float32], Tensor[(120), float32], Tensor[(13, 15, 8), bool]) */;
    %1233 = @func_12835() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1234 = @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */;
    %1235 = %1232.4;
    %1236 = %1233.0;
    %1237 = %1234.0;
    (%1235, %1236, %1237)
  };
  %1238() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64]) */
}

def @func_9680() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) {
  %1244 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) {
    %1239 = @func_7420() /* ty=Tensor[(13, 15, 8), bool] */;
    %1240 = cast(%1239, dtype="int64") /* ty=Tensor[(13, 15, 8), int64] */;
    %1241 = reshape(%1240, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), int64] */;
    %1242 = @func_7195(%1241) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) */;
    %1243 = %1242.0;
    (%1239, %1243)
  };
  %1244() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float32]) */
}

def @func_17478() -> (Tensor[(13, 15, 8), bool],) {
  @func_17476() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_18917(%var_18902: Tensor[(12, 2, 2), float32], %var_18903: Tensor[(12, 2, 2), float32]) -> Tensor[(12, 2, 2), float32] {
  %1245 = cast(%var_18903, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %1246 = shape_of(%var_18902, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1247 = cast(%var_18902, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %1248 = dyn.reshape(%1245, %1246, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%1247, %1248) /* ty=Tensor[(12, 2, 2), float32] */
}

def @func_7785() -> Tensor[(13, 15, 8), uint64] {
  %1249 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1250 = %1249.1;
  %1251 = cast(%1250, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
  %1252 = rsqrt(%1251) /* ty=Tensor[(13, 15, 8), float64] */;
  %1253 = cast(%1252, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
  %1254 = exp(%1253) /* ty=Tensor[(13, 15, 8), float32] */;
  %1255 = cast(%1254, dtype="uint64") /* ty=Tensor[(13, 15, 8), uint64] */;
  %1256 = shape_of(%1252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1257 = cast(%1252, dtype="uint64") /* ty=Tensor[(13, 15, 8), uint64] */;
  %1258 = dyn.reshape(%1255, %1256, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%1257, %1258) /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_15378() -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
  %1261 = fn () -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
    %1259 = @func_9705() /* ty=Tensor[(5, 15, 9), float32] */;
    %1260 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
    (%1259, %1260)
  };
  %1261() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_10625() -> Tensor[(13, 15, 8), bool] {
  @func_5962() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_18359() -> (Tensor[(13, 15, 8), bool],) {
  %1264 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %1262 = @func_16117() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1263 = %1262.0;
    (%1263,)
  };
  %1264() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_19385() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1270 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %1265 = @func_6234() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1266 = @func_15598() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1267 = %1265.0;
    %1268 = @func_14863() /* ty=Tensor[(13, 15, 8), bool] */;
    %1269 = %1266.0;
    (%1267, %1268, %1269)
  };
  %1270() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_10536() -> (Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool]) {
  @func_10534() /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_4155(%var_4153: Tensor[(6, 12, 11), uint32], %var_4154: Tensor[(6, 12, 11), uint32]) -> Tensor[(6, 12, 11), uint32] {
  %1275 = fn (%var_4130: Tensor[(6, 12, 11), uint32], %var_4131: Tensor[(6, 12, 11), uint32]) -> Tensor[(6, 12, 11), uint32] {
    %1271 = cast(%var_4131, dtype="uint32") /* ty=Tensor[(6, 12, 11), uint32] */;
    %1272 = shape_of(%var_4130, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1273 = cast(%var_4130, dtype="uint32") /* ty=Tensor[(6, 12, 11), uint32] */;
    %1274 = dyn.reshape(%1271, %1272, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    right_shift(%1273, %1274) /* ty=Tensor[(6, 12, 11), uint32] */
  };
  %1275(%var_4153, %var_4154) /* ty=Tensor[(6, 12, 11), uint32] */
}

def @func_13460() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
  %1280 = fn () -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) {
    %1276 = @func_10388() /* ty=(Tensor[(13, 15, 8), int64],) */;
    %1277 = @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1278 = %1276.0;
    %1279 = %1277.0;
    (%1278, %1279)
  };
  %1280() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */
}

def @func_6366(%var_6357: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float64],) {
  %1281 = cast(meta[relay.Constant][71] /* ty=Tensor[(15, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
  %1282 = atan(%1281) /* ty=Tensor[(15, 9, 12), float32] */;
  %1283 = cast(%var_6357, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %1284 = shape_of(%1282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1285 = cast(%1282, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %1286 = dyn.reshape(%1283, %1284, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1287 = floor_divide(%1285, %1286) /* ty=Tensor[(15, 9, 12), float64] */;
  (%1287,)
}

def @func_12906() -> (Tensor[(13, 15, 8), bool], Tensor[(18, 2), float32]) {
  %1292 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(18, 2), float32]) {
    %1288 = @func_11056() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1289 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
    %1290 = %1288.0;
    %1291 = %1289.2;
    (%1290, %1291)
  };
  %1292() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 2), float32]) */
}

def @func_17778() -> (Tensor[(13, 15, 8), bool],) {
  %1293 = @func_11442() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1294 = %1293.0;
  (%1294,)
}

def @func_10423() -> (Tensor[(13, 15, 8), float64],) {
  %1295 = @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */;
  %1296 = %1295.0;
  (%1296,)
}

def @func_20301() -> (Tensor[(13, 15, 8), uint64],) {
  %1299 = fn () -> (Tensor[(13, 15, 8), uint64],) {
    %1297 = @func_12540() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1298 = %1297.0;
    (%1298,)
  };
  %1299() /* ty=(Tensor[(13, 15, 8), uint64],) */
}

def @func_11947() -> (Tensor[(13, 15, 8), bool],) {
  %1300 = @func_10032() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(13, 15, 8), bool]) */;
  %1301 = %1300.0;
  (%1301,)
}

def @func_7659() -> Tensor[(13, 15, 8), bool] {
  @func_7657() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_3518(%var_3513: Tensor[(2, 4, 7), int8]) -> Tensor[(2, 4, 7), int8] {
  %1302 = cast(meta[relay.Constant][72] /* ty=Tensor[(2, 4, 7), int8] */, dtype="int8") /* ty=Tensor[(2, 4, 7), int8] */;
  %1303 = shape_of(%var_3513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1304 = cast(%var_3513, dtype="int8") /* ty=Tensor[(2, 4, 7), int8] */;
  %1305 = dyn.reshape(%1302, %1303, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%1304, %1305) /* ty=Tensor[(2, 4, 7), int8] */
}

def @func_21851(%var_21825: Tensor[(15, 9, 11), float64]) -> (Tensor[(15, 9, 1), float64], Tensor[(3, 45), float64], Tensor[(15, 9, 11), float64]) {
  %1306 = cast(meta[relay.Constant][73] /* ty=Tensor[(3, 45), float64] */, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %1307 = reshape(%1306, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), float64] */;
  %1308 = cast(%var_21825, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %1309 = atan(%1308) /* ty=Tensor[(15, 9, 11), float64] */;
  %1310 = cast(%1309, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %1311 = @func_11699(%1307) /* ty=Tensor[(15, 9, 1), float64] */;
  %1312 = sin(%1310) /* ty=Tensor[(15, 9, 11), float64] */;
  (%1311, meta[relay.Constant][73] /* ty=Tensor[(3, 45), float64] */, %1312)
}

def @func_10346() -> (Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) {
  @func_10344() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) */
}

def @func_17375() -> (Tensor[(13, 15, 8), bool],) {
  %1315 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %1313 = @func_9342() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1314 = %1313.0;
    (%1314,)
  };
  %1315() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_11109(%var_11107: Tensor[(13, 5, 1), int64], %var_11108: Tensor[(13, 5, 5), int64]) -> (Tensor[(13, 5, 5), float64],) {
  %1321 = fn (%var_11085: Tensor[(13, 5, 1), int64], %var_11086: Tensor[(13, 5, 5), int64]) -> (Tensor[(13, 5, 5), float64],) {
    %1316 = cast(%var_11085, dtype="int64") /* ty=Tensor[(13, 5, 1), int64] */;
    %1317 = cast(%var_11086, dtype="int64") /* ty=Tensor[(13, 5, 5), int64] */;
    %1318 = right_shift(%1316, %1317) /* ty=Tensor[(13, 5, 5), int64] */;
    %1319 = cast(%1318, dtype="float64") /* ty=Tensor[(13, 5, 5), float64] */;
    %1320 = atanh(%1319) /* ty=Tensor[(13, 5, 5), float64] */;
    (%1320,)
  };
  %1321(%var_11107, %var_11108) /* ty=(Tensor[(13, 5, 5), float64],) */
}

def @func_8645(%var_8641: Tensor[(1, 16, 6), uint64], %var_8642: Tensor[(56), int8], %var_8643: Tensor[(240), bool], %var_8644: Tensor[(675), float64]) -> (Tensor[(2, 4, 7), int8], Tensor[(56), int8], Tensor[(3, 5, 16), bool], Tensor[(240), bool], Tensor[(675), float64], Tensor[(?, 16, 6), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 1560), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1353 = fn (%var_8550: Tensor[(1, 16, 6), uint64], %var_8577: Tensor[(56), int8], %var_8592: Tensor[(240), bool], %var_8593: Tensor[(675), float64]) -> (Tensor[(2, 4, 7), int8], Tensor[(56), int8], Tensor[(3, 5, 16), bool], Tensor[(240), bool], Tensor[(675), float64], Tensor[(?, 16, 6), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 1560), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %1322 = cast(%var_8577, dtype="int8") /* ty=Tensor[(56), int8] */;
    %1323 = reshape(%1322, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), int8] */;
    %1324 = cast(%var_8592, dtype="bool") /* ty=Tensor[(240), bool] */;
    %1325 = cast(%var_8593, dtype="float64") /* ty=Tensor[(675), float64] */;
    %1326 = cast(meta[relay.Constant][74] /* ty=uint64 */, dtype="uint8") /* ty=uint8 */;
    %1327 = @func_3518(%1323) /* ty=Tensor[(2, 4, 7), int8] */;
    %1328 = cast(%1327, dtype="int8") /* ty=Tensor[(2, 4, 7), int8] */;
    %1329 = reshape(%1324, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), bool] */;
    %1330 = reshape(%1325, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %1331 = reshape(%1326, newshape=[]) /* ty=uint8 */;
    %1332 = reshape(%1328, newshape=[56]) /* ty=Tensor[(56), int8] */;
    %1333 = @func_5241(%1329, %1330, %1331, %1332) /* ty=(Tensor[(3, 5, 16), bool], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(3, 5, 16), float32], Tensor[(15, 1, 2), uint8], uint8, Tensor[(30), uint8], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */;
    %1334 = cast(meta[relay.Constant][74] /* ty=uint64 */, dtype="bool") /* ty=bool */;
    %1335 = cast(%var_8550, dtype="bool") /* ty=Tensor[(1, 16, 6), bool] */;
    %1336 = not_equal(%1334, %1335) /* ty=Tensor[(1, 16, 6), bool] */;
    %1337 = cast(meta[relay.Constant][74] /* ty=uint64 */, dtype="bool") /* ty=bool */;
    %1338 = cast(%var_8550, dtype="bool") /* ty=Tensor[(1, 16, 6), bool] */;
    %1339 = less_equal(%1337, %1338) /* ty=Tensor[(1, 16, 6), bool] */;
    %1340 = cast(%1339, dtype="float64") /* ty=Tensor[(1, 16, 6), float64] */;
    %1341 = shape_of(%1336, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1342 = cast(%1336, dtype="float64") /* ty=Tensor[(1, 16, 6), float64] */;
    %1343 = dyn.reshape(%1340, %1341, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1344 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 1560), bool] */, dtype="bool") /* ty=Tensor[(1, 1560), bool] */;
    %1345 = reshape(%1344, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), bool] */;
    %1346 = @func_6150(%1345) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */;
    %1347 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
    %1348 = %1333.0;
    %1349 = floor_mod(%1342, %1343) /* ty=Tensor[(?, 16, 6), float64] */;
    %1350 = %1346.0;
    %1351 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
    %1352 = %1347.1;
    (%1327, %var_8577, %1348, %var_8592, %var_8593, %1349, %1350, meta[relay.Constant][75] /* ty=Tensor[(1, 1560), bool] */, %1351, %1352)
  };
  %1353(%var_8641, %var_8642, %var_8643, %var_8644) /* ty=(Tensor[(2, 4, 7), int8], Tensor[(56), int8], Tensor[(3, 5, 16), bool], Tensor[(240), bool], Tensor[(675), float64], Tensor[(?, 16, 6), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 1560), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_18564() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1357 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %1354 = @func_11969() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1355 = %1354.0;
    %1356 = @func_14863() /* ty=Tensor[(13, 15, 8), bool] */;
    (%1355, %1356)
  };
  %1357() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_21584(%var_21548: uint8, %var_21558: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), int64], Tensor[(15, 1, 2), uint8], uint8, Tensor[(5, 6), uint8], bool, Tensor[(120), float32], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) {
  %1358 = cast(%var_21548, dtype="uint8") /* ty=uint8 */;
  %1359 = cast(meta[relay.Constant][76] /* ty=Tensor[(5, 6), uint8] */, dtype="uint8") /* ty=Tensor[(5, 6), uint8] */;
  %1360 = reshape(%1358, newshape=[]) /* ty=uint8 */;
  %1361 = reshape(%1359, newshape=[15, 1, 2]) /* ty=Tensor[(15, 1, 2), uint8] */;
  %1362 = @func_3464(%1360, %1361) /* ty=(Tensor[(15, 1, 2), uint8],) */;
  %1363 = cast(meta[relay.Constant][77] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1364 = cast(%var_21548, dtype="bool") /* ty=bool */;
  %1365 = cast(meta[relay.Constant][78] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1366 = cast(%var_21558, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1367 = reshape(%1363, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %1368 = reshape(%1364, newshape=[]) /* ty=bool */;
  %1369 = reshape(%1365, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %1370 = reshape(%1366, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1371 = @func_19754(%1367, %1368, %1369, %1370) /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(120), float32], bool, Tensor[(675), float64], Tensor[(792), uint32], Tensor[(56), int8]) */;
  %1372 = @func_12804() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */;
  %1373 = @func_13156() /* ty=Tensor[(13, 15, 8), int64] */;
  %1374 = %1362.0;
  %1375 = %1371.3;
  %1376 = %1372.0;
  %1377 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
  %1378 = @func_11717() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%1373, %1374, %var_21548, meta[relay.Constant][76] /* ty=Tensor[(5, 6), uint8] */, %1375, meta[relay.Constant][77] /* ty=Tensor[(120), float32] */, meta[relay.Constant][78] /* ty=Tensor[(792), uint32] */, %var_21558, %1376, %1377, %1378)
}

def @func_10106(%var_10102: Tensor[(18, 70), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 2), int64], Tensor[(18, 70), float32], Tensor[(36), float32], Tensor[(240), bool]) {
  %1379 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1380 = cast(%var_10102, dtype="float32") /* ty=Tensor[(18, 70), float32] */;
  %1381 = cast(meta[relay.Constant][79] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %1382 = cast(meta[relay.Constant][80] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %1383 = reshape(%1380, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), float32] */;
  %1384 = reshape(%1381, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %1385 = reshape(%1382, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %1386 = @func_8476(%1383, %1384, %1385) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(1260, 1), float32], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], float32, Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(2, 4, 7), int8], Tensor[(240), bool], Tensor[(56), int8], Tensor[(13, 15, 8), int64]) */;
  %1387 = @func_6785() /* ty=Tensor[(13, 15, 8), bool] */;
  %1388 = %1379.1;
  %1389 = %1386.2;
  (%1387, %1388, %1389, %var_10102, meta[relay.Constant][79] /* ty=Tensor[(36), float32] */, meta[relay.Constant][80] /* ty=Tensor[(240), bool] */)
}

def @func_9643() -> (Tensor[(13, 15, 8), uint64],) {
  %1390 = @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%1390,)
}

def @func_9880(%var_9876: Tensor[(9, 11, 13), float64], %var_9877: bool, %var_9878: Tensor[(56), int8], %var_9879: Tensor[(1, 36), float32]) -> (Tensor[(9, 11, 13), float64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(6, 12, 11), uint32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(56), int8], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(1, 1260), float32], Tensor[(1, 36), float32], Tensor[(240), bool]) {
  @func_9874(%var_9876, %var_9877, %var_9878, %var_9879) /* ty=(Tensor[(9, 11, 13), float64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(6, 12, 11), uint32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(56), int8], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(1, 1260), float32], Tensor[(1, 36), float32], Tensor[(240), bool]) */
}

def @func_5962() -> Tensor[(13, 15, 8), bool] {
  @func_5897() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_16225() -> Tensor[(13, 15, 8), bool] {
  %1392 = fn () -> Tensor[(13, 15, 8), bool] {
    %1391 = @func_12835() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1391.0
  };
  %1392() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_12587() -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) {
  @func_12585() /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_14465(%var_14459: Tensor[(3, 10, 12), int64], %var_14460: Tensor[(3, 10, 12), int64]) -> (Tensor[(3, 10, 12), int64],) {
  %1393 = cast(%var_14460, dtype="int64") /* ty=Tensor[(3, 10, 12), int64] */;
  %1394 = shape_of(%var_14459, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1395 = cast(%var_14459, dtype="int64") /* ty=Tensor[(3, 10, 12), int64] */;
  %1396 = dyn.reshape(%1393, %1394, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1397 = bitwise_xor(%1395, %1396) /* ty=Tensor[(3, 10, 12), int64] */;
  (%1397,)
}

def @func_12806() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) {
  @func_12804() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */
}

def @func_19543() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32]) {
  %1398 = cast(meta[relay.Constant][81] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1399 = reshape(%1398, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %1400 = @func_7338(%1399) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32]) */;
  %1401 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %1402 = %1400.0;
  (%1401, %1402, meta[relay.Constant][81] /* ty=Tensor[(792), uint32] */)
}

def @func_19155() -> (Tensor[(13, 15, 8), bool],) {
  %1403 = @func_17621() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1404 = %1403.0;
  (%1404,)
}

def @func_15598() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1405 = @func_12540() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1406 = %1405.2;
  %1407 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1406, %1407)
}

def @func_20291(%var_20267: Tensor[(18, 70), float64]) -> (Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32]) {
  %1408 = @func_15115() /* ty=(Tensor[(18, 70), bool], Tensor[(18, 70), float64]) */;
  %1409 = %1408.1;
  %1410 = cast(%var_20267, dtype="uint8") /* ty=Tensor[(18, 70), uint8] */;
  %1411 = shape_of(%1409, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1412 = cast(%1409, dtype="uint8") /* ty=Tensor[(18, 70), uint8] */;
  %1413 = dyn.reshape(%1410, %1411, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1414 = subtract(%1412, %1413) /* ty=Tensor[(18, 70), uint8] */;
  %1415 = cast(%1414, dtype="float32") /* ty=Tensor[(18, 70), float32] */;
  %1416 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %1417 = cos(%1415) /* ty=Tensor[(18, 70), float32] */;
  (%1416, %1417)
}

def @func_21101() -> Tensor[(13, 15, 8), bool] {
  @func_21099() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_7297() -> (Tensor[(13, 15, 8), bool],) {
  %1419 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %1418 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
    (%1418,)
  };
  %1419() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_10034() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(13, 15, 8), bool]) {
  @func_10032() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_6235() -> (Tensor[(13, 15, 8), bool],) {
  %1422 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %1420 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
    %1421 = %1420.1;
    (%1421,)
  };
  %1422() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_16119() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  @func_16117() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_10852() -> Tensor[(5, 15, 9), float32] {
  @func_9705() /* ty=Tensor[(5, 15, 9), float32] */
}

def @func_12373() -> (Tensor[(13, 15, 8), int64],) {
  @func_12371() /* ty=(Tensor[(13, 15, 8), int64],) */
}

def @func_19918() -> (Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(260), bool]) {
  %1423 = @func_12804() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */;
  %1424 = cast(meta[relay.Constant][82] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %1425 = reshape(%1424, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %1426 = @func_13525(%1425) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(675), float64], Tensor[(36, 1), float32], Tensor[(260), bool], Tensor[(260), bool], Tensor[(56), int8]) */;
  %1427 = %1423.0;
  %1428 = %1426.4;
  (%1427, %1428, meta[relay.Constant][82] /* ty=Tensor[(260), bool] */)
}

def @func_14529() -> (Tensor[(13, 15, 8), uint64],) {
  %1429 = @func_11717() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%1429,)
}

def @func_18144() -> (Tensor[(13, 15, 8), uint64], Tensor[(2, 5, 12), float32], Tensor[(260), bool], Tensor[(56), int8]) {
  %1437 = fn () -> (Tensor[(13, 15, 8), uint64], Tensor[(2, 5, 12), float32], Tensor[(260), bool], Tensor[(56), int8]) {
    %1430 = cast(meta[relay.Constant][83] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
    %1431 = cast(meta[relay.Constant][84] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
    %1432 = reshape(%1430, newshape=[260, 1]) /* ty=Tensor[(260, 1), bool] */;
    %1433 = reshape(%1431, newshape=[28, 2]) /* ty=Tensor[(28, 2), int8] */;
    %1434 = @func_13609(%1432, %1433) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260, 1), bool], Tensor[(675), float64], Tensor[(792), uint32], Tensor[(28, 2), int8], Tensor[(13, 15, 8), int64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) */;
    %1435 = @func_11996() /* ty=Tensor[(13, 15, 8), uint64] */;
    %1436 = %1434.8;
    (%1435, %1436, meta[relay.Constant][83] /* ty=Tensor[(260), bool] */, meta[relay.Constant][84] /* ty=Tensor[(56), int8] */)
  };
  %1437() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(2, 5, 12), float32], Tensor[(260), bool], Tensor[(56), int8]) */
}

def @func_10750() -> Tensor[(13, 15, 8), bool] {
  @func_10748() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_5941(%var_5939: Tensor[(36), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], float32, Tensor[(36), float32], Tensor[(675), float64]) {
  @func_5938(%var_5939) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], float32, Tensor[(36), float32], Tensor[(675), float64]) */
}

def @func_11561() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  @func_11559() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_13194(%var_13171: Tensor[(792, 9), float64]) -> (Tensor[(792, 9), bool], Tensor[(792, 9), bool]) {
  %1438 = @func_10344() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(792, 1), float64]) */;
  %1439 = %1438.1;
  %1440 = cast(%1439, dtype="bool") /* ty=Tensor[(792, 1), bool] */;
  %1441 = cast(%var_13171, dtype="bool") /* ty=Tensor[(792, 9), bool] */;
  %1442 = cast(%1439, dtype="bool") /* ty=Tensor[(792, 1), bool] */;
  %1443 = cast(%var_13171, dtype="bool") /* ty=Tensor[(792, 9), bool] */;
  %1444 = logical_or(%1440, %1441) /* ty=Tensor[(792, 9), bool] */;
  %1445 = less(%1442, %1443) /* ty=Tensor[(792, 9), bool] */;
  (%1444, %1445)
}

def @func_9584() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  @func_9582() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_18248() -> Tensor[(675), float64] {
  @func_17089() /* ty=Tensor[(675), float64] */
}

def @func_10480(%var_10479: Tensor[(630, 2), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(630, 2), float32]) {
  %1451 = fn (%var_10469: Tensor[(630, 2), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(630, 2), float32]) {
    %1446 = cast(%var_10469, dtype="float32") /* ty=Tensor[(630, 2), float32] */;
    %1447 = reshape(%1446, newshape=[10, 14, 9]) /* ty=Tensor[(10, 14, 9), float32] */;
    %1448 = @func_1891(%1447) /* ty=(Tensor[(10, 14, 9), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64], Tensor[(5, 15, 9), float64]) */;
    %1449 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
    %1450 = %1448.4;
    (%1449, %1450, %var_10469)
  };
  %1451(%var_10479) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(630, 2), float32]) */
}

def @func_17288(%var_17286: Tensor[(1560), int64], %var_17287: Tensor[(6, 12, 11), uint32]) -> (Tensor[(325), int64], Tensor[(1560), int64], Tensor[(6, 12, 11), int64]) {
  %1463 = fn (%var_17263: Tensor[(1560), int64], %var_17270: Tensor[(6, 12, 11), uint32]) -> (Tensor[(325), int64], Tensor[(1560), int64], Tensor[(6, 12, 11), int64]) {
    %1452 = @func_17112() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 5, 5), float64], Tensor[(65), int64], Tensor[(325), int64]) */;
    %1453 = cast(%var_17263, dtype="int64") /* ty=Tensor[(1560), int64] */;
    %1454 = reshape(%1453, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), int64] */;
    %1455 = @func_7195(%1454) /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32]) */;
    %1456 = %1455.2;
    %1457 = cast(%var_17270, dtype="int64") /* ty=Tensor[(6, 12, 11), int64] */;
    %1458 = shape_of(%1456, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1459 = cast(%1456, dtype="int64") /* ty=Tensor[(6, 12, 11), int64] */;
    %1460 = dyn.reshape(%1457, %1458, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1461 = %1452.3;
    %1462 = logical_xor(%1459, %1460) /* ty=Tensor[(6, 12, 11), int64] */;
    (%1461, %var_17263, %1462)
  };
  %1463(%var_17286, %var_17287) /* ty=(Tensor[(325), int64], Tensor[(1560), int64], Tensor[(6, 12, 11), int64]) */
}

def @func_15413() -> Tensor[(13, 15, 8), bool] {
  @func_15411() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_20197() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1464 = @func_10827() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1465 = %1464.0;
  %1466 = @func_16574() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1465, %1466)
}

def @func_19307(%var_19305: Tensor[(1260), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) {
  @func_19304(%var_19305) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) */
}

def @func_10925(%var_10907: Tensor[(75, 9), float64]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(56), int8], bool, Tensor[(260), bool], Tensor[(75, 9), float64], Tensor[(396, 2), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) {
  %1467 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
  %1468 = cast(%1467, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %1469 = reshape(%1468, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), bool] */;
  %1470 = @func_6150(%1469) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */;
  %1471 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1472 = cast(meta[relay.Constant][85] /* ty=Tensor[(260), bool] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %1473 = cast(%var_10907, dtype="float64") /* ty=Tensor[(75, 9), float64] */;
  %1474 = cast(meta[relay.Constant][86] /* ty=Tensor[(396, 2), uint32] */, dtype="uint32") /* ty=Tensor[(396, 2), uint32] */;
  %1475 = cast(meta[relay.Constant][87] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1476 = reshape(%1471, newshape=[]) /* ty=bool */;
  %1477 = reshape(%1472, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %1478 = reshape(%1473, newshape=[675, 1]) /* ty=Tensor[(675, 1), float64] */;
  %1479 = reshape(%1474, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %1480 = reshape(%1475, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1481 = @func_8389(%1476, %1477, %1478, %1479, %1480) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %1482 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1483 = %1470.0;
  %1484 = %1481.9;
  %1485 = %1482.1;
  (%1467, %1483, %1484, True /* ty=bool */, meta[relay.Constant][85] /* ty=Tensor[(260), bool] */, %var_10907, meta[relay.Constant][86] /* ty=Tensor[(396, 2), uint32] */, meta[relay.Constant][87] /* ty=Tensor[(56), int8] */, %1485)
}

def @func_7231(%var_7222: Tensor[(18, 2), float32]) -> Tensor[(18, 2), int64] {
  %1486 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
  %1487 = %1486.2;
  %1488 = cast(%var_7222, dtype="int64") /* ty=Tensor[(18, 2), int64] */;
  %1489 = shape_of(%1487, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1490 = cast(%1487, dtype="int64") /* ty=Tensor[(18, 2), int64] */;
  %1491 = dyn.reshape(%1488, %1489, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  maximum(%1490, %1491) /* ty=Tensor[(18, 2), int64] */
}

def @func_14007() -> Tensor[(13, 15, 8), uint64] {
  %1492 = fn () -> Tensor[(13, 15, 8), uint64] {
    @func_11717() /* ty=Tensor[(13, 15, 8), uint64] */
  };
  %1492() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_7032() -> Tensor[(13, 15, 8), bool] {
  %1494 = fn () -> Tensor[(13, 15, 8), bool] {
    %1493 = @func_6754() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), int64]) */;
    %1493.0
  };
  %1494() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_19332() -> (Tensor[(13, 15, 8), float64], Tensor[(2, 5, 12), float32], Tensor[(1, 120), float32], Tensor[(13, 15, 8), bool]) {
  %1501 = fn () -> (Tensor[(13, 15, 8), float64], Tensor[(2, 5, 12), float32], Tensor[(1, 120), float32], Tensor[(13, 15, 8), bool]) {
    %1495 = @func_7412() /* ty=(Tensor[(13, 15, 8), float64],) */;
    %1496 = cast(meta[relay.Constant][88] /* ty=Tensor[(1, 120), float32] */, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
    %1497 = reshape(%1496, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
    %1498 = %1495.0;
    %1499 = @func_2630(%1497) /* ty=Tensor[(2, 5, 12), float32] */;
    %1500 = @func_11311() /* ty=Tensor[(13, 15, 8), bool] */;
    (%1498, %1499, meta[relay.Constant][88] /* ty=Tensor[(1, 120), float32] */, %1500)
  };
  %1501() /* ty=(Tensor[(13, 15, 8), float64], Tensor[(2, 5, 12), float32], Tensor[(1, 120), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_9320(%var_9290: bool, %var_9291: Tensor[(260), bool], %var_9294: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), int64], bool, bool, Tensor[(260), bool], Tensor[(225, 3), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(2, 5, 12), float32], Tensor[(120), float32]) {
  %1502 = @func_6227() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1503 = cast(%var_9290, dtype="bool") /* ty=bool */;
  %1504 = cast(%var_9291, dtype="bool") /* ty=Tensor[(260), bool] */;
  %1505 = cast(meta[relay.Constant][89] /* ty=Tensor[(225, 3), float64] */, dtype="float64") /* ty=Tensor[(225, 3), float64] */;
  %1506 = cast(meta[relay.Constant][90] /* ty=Tensor[(792), uint32] */, dtype="uint32") /* ty=Tensor[(792), uint32] */;
  %1507 = cast(%var_9294, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1508 = reshape(%1503, newshape=[]) /* ty=bool */;
  %1509 = reshape(%1504, newshape=[260]) /* ty=Tensor[(260), bool] */;
  %1510 = reshape(%1505, newshape=[675, 1]) /* ty=Tensor[(675, 1), float64] */;
  %1511 = reshape(%1506, newshape=[792]) /* ty=Tensor[(792), uint32] */;
  %1512 = reshape(%1507, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1513 = @func_8389(%1508, %1509, %1510, %1511, %1512) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(792), uint32], bool, Tensor[(260), bool], Tensor[(675, 1), float64], Tensor[(792), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
  %1514 = cast(meta[relay.Constant][91] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1515 = reshape(%1514, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float32] */;
  %1516 = @func_6187() /* ty=Tensor[(13, 15, 8), int64] */;
  %1517 = %1502.0;
  %1518 = %1513.5;
  %1519 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %1520 = @func_7688() /* ty=Tensor[(5, 15, 9), float64] */;
  %1521 = @func_2630(%1515) /* ty=Tensor[(2, 5, 12), float32] */;
  (%1516, %1517, %1518, %var_9290, %var_9291, meta[relay.Constant][89] /* ty=Tensor[(225, 3), float64] */, meta[relay.Constant][90] /* ty=Tensor[(792), uint32] */, %var_9294, %1519, %1520, %1521, meta[relay.Constant][91] /* ty=Tensor[(120), float32] */)
}

def @func_9582() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1522 = @func_7553() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1523 = @func_7296() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1524 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %1525 = %1522.1;
  %1526 = %1523.0;
  (%1524, %1525, %1526)
}

def @func_5127(%var_5122: bool, %var_5123: Tensor[(10, 13, 2), bool], %var_5124: Tensor[(675), float64], %var_5125: Tensor[(792), uint32], %var_5126: Tensor[(56), int8]) -> (Tensor[(10, 13, 2), bool], Tensor[(675), float64], Tensor[(36), float32], Tensor[(675), float64], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) {
  %1551 = fn (%var_5078: bool, %var_5079: Tensor[(10, 13, 2), bool], %var_5101: Tensor[(675), float64], %var_5115: Tensor[(792), uint32], %var_5118: Tensor[(56), int8]) -> (Tensor[(10, 13, 2), bool], Tensor[(675), float64], Tensor[(36), float32], Tensor[(675), float64], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) {
    %1527 = cast(%var_5078, dtype="bool") /* ty=bool */;
    %1528 = cast(%var_5079, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
    %1529 = logical_and(%1527, %1528) /* ty=Tensor[(10, 13, 2), bool] */;
    %1530 = cast(%1529, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
    %1531 = shape_of(%var_5079, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1532 = cast(%var_5079, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
    %1533 = dyn.reshape(%1530, %1531, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1534 = cast(%var_5078, dtype="float32") /* ty=float32 */;
    %1535 = cast(meta[relay.Constant][92] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
    %1536 = cast(%var_5101, dtype="float64") /* ty=Tensor[(675), float64] */;
    %1537 = reshape(%1534, newshape=[]) /* ty=float32 */;
    %1538 = reshape(%1535, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
    %1539 = reshape(%1536, newshape=[675]) /* ty=Tensor[(675), float64] */;
    %1540 = @func_3193(%1537, %1538, %1539) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
    %1541 = cast(%var_5115, dtype="uint32") /* ty=Tensor[(792), uint32] */;
    %1542 = cast(%var_5115, dtype="uint32") /* ty=Tensor[(792), uint32] */;
    %1543 = reshape(%1541, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
    %1544 = reshape(%1542, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
    %1545 = cast(%var_5118, dtype="int8") /* ty=Tensor[(56), int8] */;
    %1546 = reshape(%1545, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), int8] */;
    %1547 = equal(%1532, %1533) /* ty=Tensor[(10, 13, 2), bool] */;
    %1548 = %1540.2;
    %1549 = @func_4152(%1543, %1544) /* ty=Tensor[(6, 12, 11), uint32] */;
    %1550 = @func_3518(%1546) /* ty=Tensor[(2, 4, 7), int8] */;
    (%1547, %1548, meta[relay.Constant][92] /* ty=Tensor[(36), float32] */, %var_5101, %1549, %var_5115, %1550, %var_5118)
  };
  %1551(%var_5122, %var_5123, %var_5124, %var_5125, %var_5126) /* ty=(Tensor[(10, 13, 2), bool], Tensor[(675), float64], Tensor[(36), float32], Tensor[(675), float64], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(2, 4, 7), int8], Tensor[(56), int8]) */
}

def @func_9026() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1561 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %1552 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
    %1553 = @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */;
    %1554 = @func_7070() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], Tensor[(18, 2), float32], Tensor[(13, 15, 8), bool]) */;
    %1555 = %1552.3;
    %1556 = %1553.0;
    %1557 = @func_7657() /* ty=Tensor[(13, 15, 8), bool] */;
    %1558 = %1554.0;
    %1559 = @func_6342() /* ty=Tensor[(13, 15, 8), bool] */;
    %1560 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
    (%1555, %1556, %1557, %1558, %1559, %1560)
  };
  %1561() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_19304(%var_19281: Tensor[(1260), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(1260), float32]) {
  %1562 = @func_10534() /* ty=(Tensor[(13, 15, 8), float32], Tensor[(13, 15, 8), bool]) */;
  %1563 = @func_13002() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1564 = cast(%var_19281, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1565 = reshape(%1564, newshape=[630, 2]) /* ty=Tensor[(630, 2), float32] */;
  %1566 = @func_10478(%1565) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float64], Tensor[(630, 2), float32]) */;
  %1567 = @func_16414() /* ty=Tensor[(13, 15, 8), bool] */;
  %1568 = @func_11817() /* ty=Tensor[(13, 15, 8), bool] */;
  %1569 = %1562.1;
  %1570 = %1563.0;
  %1571 = @func_16414() /* ty=Tensor[(13, 15, 8), bool] */;
  %1572 = %1566.0;
  (%1567, %1568, %1569, %1570, %1571, %1572, %var_19281)
}

def @func_14117() -> Tensor[(13, 15, 8), uint64] {
  @func_14115() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_20968() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  @func_20966() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_16010(%var_16008: Tensor[(90, 14), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float32], Tensor[(90, 14), uint8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  @func_16007(%var_16008) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(5, 15, 9), float32], Tensor[(90, 14), uint8], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_20649(%var_20618: Tensor[(36), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(18, 2), int64], Tensor[(36), float32], Tensor[(3, 10, 12), int64], Tensor[(180, 2), int64]) {
  %1573 = @func_13002() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1574 = cast(%var_20618, dtype="float32") /* ty=Tensor[(36), float32] */;
  %1575 = reshape(%1574, newshape=[18, 2]) /* ty=Tensor[(18, 2), float32] */;
  %1576 = cast(meta[relay.Constant][93] /* ty=Tensor[(180, 2), int64] */, dtype="int64") /* ty=Tensor[(180, 2), int64] */;
  %1577 = cast(meta[relay.Constant][93] /* ty=Tensor[(180, 2), int64] */, dtype="int64") /* ty=Tensor[(180, 2), int64] */;
  %1578 = reshape(%1576, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), int64] */;
  %1579 = reshape(%1577, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), int64] */;
  %1580 = @func_14465(%1578, %1579) /* ty=(Tensor[(3, 10, 12), int64],) */;
  %1581 = %1573.0;
  %1582 = @func_7231(%1575) /* ty=Tensor[(18, 2), int64] */;
  %1583 = %1580.0;
  (%1581, %1582, %var_20618, %1583, meta[relay.Constant][93] /* ty=Tensor[(180, 2), int64] */)
}

def @func_9414() -> (Tensor[(13, 15, 8), bool],) {
  @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_19993() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(396, 2), uint32]) {
  @func_19991() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(396, 2), uint32]) */
}

def @func_9645() -> (Tensor[(13, 15, 8), uint64],) {
  @func_9643() /* ty=(Tensor[(13, 15, 8), uint64],) */
}

def @func_16257() -> Tensor[(13, 15, 8), bool] {
  %1585 = fn () -> Tensor[(13, 15, 8), bool] {
    %1584 = @func_13002() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1584.0
  };
  %1585() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_6152(%var_6151: Tensor[(13, 15, 8), bool]) -> (Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) {
  %1597 = fn (%var_6140: Tensor[(13, 15, 8), bool]) -> (Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) {
    %1586 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
    %1587 = cast(%var_6140, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
    %1588 = shape_of(%1586, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1589 = cast(%1586, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
    %1590 = dyn.reshape(%1587, %1588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1591 = cast(meta[relay.Constant][94] /* ty=Tensor[(792, 1), uint32] */, dtype="uint32") /* ty=Tensor[(792, 1), uint32] */;
    %1592 = cast(meta[relay.Constant][94] /* ty=Tensor[(792, 1), uint32] */, dtype="uint32") /* ty=Tensor[(792, 1), uint32] */;
    %1593 = reshape(%1591, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
    %1594 = reshape(%1592, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
    %1595 = less(%1589, %1590) /* ty=Tensor[(13, 15, 8), bool] */;
    %1596 = @func_4152(%1593, %1594) /* ty=Tensor[(6, 12, 11), uint32] */;
    (%1595, %1596, meta[relay.Constant][94] /* ty=Tensor[(792, 1), uint32] */)
  };
  %1597(%var_6151) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792, 1), uint32]) */
}

def @func_18943() -> (Tensor[(13, 15, 8), bool],) {
  @func_18941() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_12438(%var_12381: bool) -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), int64], Tensor[(270, 6), float32], Tensor[(36), float32], bool, Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(1287), float64], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32]) {
  %1598 = cast(meta[relay.Constant][95] /* ty=Tensor[(270, 6), float32] */, dtype="float32") /* ty=Tensor[(270, 6), float32] */;
  %1599 = cast(meta[relay.Constant][95] /* ty=Tensor[(270, 6), float32] */, dtype="int64") /* ty=Tensor[(270, 6), int64] */;
  %1600 = cast(meta[relay.Constant][96] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %1601 = cast(%var_12381, dtype="bool") /* ty=bool */;
  %1602 = cast(meta[relay.Constant][97] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1603 = reshape(%1598, newshape=[18, 90]) /* ty=Tensor[(18, 90), float32] */;
  %1604 = reshape(%1599, newshape=[18, 90]) /* ty=Tensor[(18, 90), int64] */;
  %1605 = reshape(%1600, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %1606 = reshape(%1601, newshape=[]) /* ty=bool */;
  %1607 = reshape(%1602, newshape=[28, 2]) /* ty=Tensor[(28, 2), int8] */;
  %1608 = @func_8702(%1603, %1604, %1605, %1606, %1607) /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(18, 90), float32], Tensor[(675), float64], Tensor[(1, 36), float32], Tensor[(13, 15, 8), bool], Tensor[(60, 2), float32], bool, Tensor[(792), uint32], Tensor[(28, 2), int8]) */;
  %1609 = @func_9412() /* ty=(Tensor[(13, 15, 8), bool],) */;
  %1610 = cast(meta[relay.Constant][98] /* ty=Tensor[(1287), float64] */, dtype="float64") /* ty=Tensor[(1287), float64] */;
  %1611 = cast(%var_12381, dtype="bool") /* ty=bool */;
  %1612 = cast(meta[relay.Constant][97] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1613 = cast(meta[relay.Constant][96] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %1614 = reshape(%1610, newshape=[9, 11, 13]) /* ty=Tensor[(9, 11, 13), float64] */;
  %1615 = reshape(%1611, newshape=[]) /* ty=bool */;
  %1616 = reshape(%1612, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1617 = reshape(%1613, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %1618 = @func_9874(%1614, %1615, %1616, %1617) /* ty=(Tensor[(9, 11, 13), float64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(6, 12, 11), uint32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(56), int8], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(1, 1260), float32], Tensor[(1, 36), float32], Tensor[(240), bool]) */;
  %1619 = cast(%var_12381, dtype="float32") /* ty=float32 */;
  %1620 = cast(meta[relay.Constant][96] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %1621 = @func_9705() /* ty=Tensor[(5, 15, 9), float32] */;
  %1622 = cast(%1621, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %1623 = reshape(%1619, newshape=[]) /* ty=float32 */;
  %1624 = reshape(%1620, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
  %1625 = reshape(%1622, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %1626 = @func_3193(%1623, %1624, %1625) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
  %1627 = %1608.0;
  %1628 = %1609.0;
  %1629 = %1618.8;
  %1630 = @func_10748() /* ty=Tensor[(13, 15, 8), bool] */;
  %1631 = %1626.4;
  (%1621, %1627, meta[relay.Constant][95] /* ty=Tensor[(270, 6), float32] */, meta[relay.Constant][96] /* ty=Tensor[(36), float32] */, %var_12381, meta[relay.Constant][97] /* ty=Tensor[(56), int8] */, %1628, %1629, meta[relay.Constant][98] /* ty=Tensor[(1287), float64] */, %1630, %1631)
}

def @func_21153() -> Tensor[(260), bool] {
  %1632 = @func_19918() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(260), bool]) */;
  %1632.2
}

def @func_11969() -> (Tensor[(13, 15, 8), bool],) {
  %1633 = @func_5962() /* ty=Tensor[(13, 15, 8), bool] */;
  (%1633,)
}

def @func_17233() -> Tensor[(13, 15, 8), bool] {
  @func_17231() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_17112() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 5, 5), float64], Tensor[(65), int64], Tensor[(325), int64]) {
  %1634 = @func_12804() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64]) */;
  %1635 = cast(meta[relay.Constant][99] /* ty=Tensor[(65), int64] */, dtype="int64") /* ty=Tensor[(65), int64] */;
  %1636 = cast(meta[relay.Constant][100] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %1637 = reshape(%1635, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), int64] */;
  %1638 = reshape(%1636, newshape=[13, 5, 5]) /* ty=Tensor[(13, 5, 5), int64] */;
  %1639 = @func_11106(%1637, %1638) /* ty=(Tensor[(13, 5, 5), float64],) */;
  %1640 = %1634.0;
  %1641 = %1639.0;
  (%1640, %1641, meta[relay.Constant][99] /* ty=Tensor[(65), int64] */, meta[relay.Constant][100] /* ty=Tensor[(325), int64] */)
}

def @func_16415() -> Tensor[(13, 15, 8), bool] {
  %1643 = fn () -> Tensor[(13, 15, 8), bool] {
    %1642 = @func_11442() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1642.0
  };
  %1643() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_5938(%var_5935: Tensor[(36), float32]) -> (Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32], float32, Tensor[(36), float32], Tensor[(675), float64]) {
  %1644 = cast(-4.29603f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1645 = cast(%var_5935, dtype="float32") /* ty=Tensor[(36), float32] */;
  %1646 = cast(meta[relay.Constant][101] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1647 = reshape(%1644, newshape=[]) /* ty=float32 */;
  %1648 = reshape(%1645, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float32] */;
  %1649 = reshape(%1646, newshape=[675]) /* ty=Tensor[(675), float64] */;
  %1650 = @func_3193(%1647, %1648, %1649) /* ty=(Tensor[(6, 6, 1), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(2, 5, 12), float32], Tensor[(30, 4), float32]) */;
  %1651 = @func_5897() /* ty=Tensor[(13, 15, 8), bool] */;
  %1652 = %1650.4;
  (%1651, %1652, -4.29603f /* ty=float32 */, %var_5935, meta[relay.Constant][101] /* ty=Tensor[(675), float64] */)
}

def @func_20204() -> (Tensor[(13, 15, 8), uint64],) {
  %1653 = @func_16033() /* ty=Tensor[(13, 15, 8), uint64] */;
  (%1653,)
}

def @func_11057() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1658 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %1654 = @func_9342() /* ty=(Tensor[(13, 15, 8), bool],) */;
    %1655 = @func_9582() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1656 = %1654.0;
    %1657 = %1655.1;
    (%1656, %1657)
  };
  %1658() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_14311(%var_14296: Tensor[(2, 396), uint32]) -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), uint64], Tensor[(6, 12, 11), uint32], Tensor[(2, 396), uint32]) {
  %1659 = @func_13459() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1660 = cast(%var_14296, dtype="uint32") /* ty=Tensor[(2, 396), uint32] */;
  %1661 = cast(%var_14296, dtype="uint32") /* ty=Tensor[(2, 396), uint32] */;
  %1662 = reshape(%1660, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %1663 = reshape(%1661, newshape=[6, 12, 11]) /* ty=Tensor[(6, 12, 11), uint32] */;
  %1664 = %1659.1;
  %1665 = @func_14006() /* ty=Tensor[(13, 15, 8), uint64] */;
  %1666 = @func_4152(%1662, %1663) /* ty=Tensor[(6, 12, 11), uint32] */;
  (%1664, %1665, %1666, %var_14296)
}

def @func_21250() -> Tensor[(13, 15, 8), bool] {
  @func_11311() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_18747() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  @func_18745() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_19534() -> (Tensor[(13, 15, 8), uint64],) {
  %1668 = fn () -> (Tensor[(13, 15, 8), uint64],) {
    %1667 = @func_16033() /* ty=Tensor[(13, 15, 8), uint64] */;
    (%1667,)
  };
  %1668() /* ty=(Tensor[(13, 15, 8), uint64],) */
}

def @func_11808(%var_11781: Tensor[(1287), float64], %var_11782: bool) -> (Tensor[(13, 15, 8), int64], Tensor[(6, 12, 11), uint32], Tensor[(1287), float64], bool, Tensor[(56), int8], Tensor[(36, 1), float32], Tensor[(13, 15, 8), int64]) {
  %1669 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1670 = cast(%var_11781, dtype="float64") /* ty=Tensor[(1287), float64] */;
  %1671 = cast(%var_11782, dtype="bool") /* ty=bool */;
  %1672 = cast(meta[relay.Constant][102] /* ty=Tensor[(56), int8] */, dtype="int8") /* ty=Tensor[(56), int8] */;
  %1673 = cast(meta[relay.Constant][103] /* ty=Tensor[(36, 1), float32] */, dtype="float32") /* ty=Tensor[(36, 1), float32] */;
  %1674 = reshape(%1670, newshape=[9, 11, 13]) /* ty=Tensor[(9, 11, 13), float64] */;
  %1675 = reshape(%1671, newshape=[]) /* ty=bool */;
  %1676 = reshape(%1672, newshape=[56]) /* ty=Tensor[(56), int8] */;
  %1677 = reshape(%1673, newshape=[1, 36]) /* ty=Tensor[(1, 36), float32] */;
  %1678 = @func_9874(%1674, %1675, %1676, %1677) /* ty=(Tensor[(9, 11, 13), float64], Tensor[(13, 15, 8), bool], Tensor[(6, 12, 11), uint32], Tensor[(792), uint32], Tensor[(6, 12, 11), uint32], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], bool, Tensor[(260), bool], Tensor[(675), float64], Tensor[(56), int8], Tensor[(13, 15, 8), float64], Tensor[(13, 15, 8), bool], Tensor[(1, 12, 5), float32], Tensor[(5, 15, 9), float64], Tensor[(1, 1260), float32], Tensor[(1, 36), float32], Tensor[(240), bool]) */;
  %1679 = @func_6485() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1680 = %1669.0;
  %1681 = %1678.4;
  %1682 = %1679.0;
  (%1680, %1681, %var_11781, %var_11782, meta[relay.Constant][102] /* ty=Tensor[(56), int8] */, meta[relay.Constant][103] /* ty=Tensor[(36, 1), float32] */, %1682)
}

def @func_21029(%var_21027: uint64, %var_21028: Tensor[(7, 14, 9), uint64]) -> (Tensor[(7, 14, 9), float32], Tensor[(13, 15, 8), bool]) {
  @func_21025(%var_21027, %var_21028) /* ty=(Tensor[(7, 14, 9), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_16813() -> Tensor[(13, 15, 8), bool] {
  %1683 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1683.0
}

def @func_10207() -> Tensor[(13, 15, 8), bool] {
  %1685 = fn () -> Tensor[(13, 15, 8), bool] {
    %1684 = @func_9582() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1684.2
  };
  %1685() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_19545() -> (Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32]) {
  @func_19543() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool], Tensor[(792), uint32]) */
}

def @func_18857() -> (Tensor[(13, 15, 8), int64],) {
  @func_18855() /* ty=(Tensor[(13, 15, 8), int64],) */
}

def @func_6450() -> (Tensor[(13, 15, 8), bool],) {
  %1687 = fn () -> (Tensor[(13, 15, 8), bool],) {
    %1686 = @func_6088() /* ty=Tensor[(13, 15, 8), bool] */;
    (%1686,)
  };
  %1687() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_17857() -> Tensor[(13, 15, 8), uint64] {
  @func_17855() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_12441(%var_12439: bool) -> (Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), int64], Tensor[(270, 6), float32], Tensor[(36), float32], bool, Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(1287), float64], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32]) {
  @func_12438(%var_12439) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(13, 15, 8), int64], Tensor[(270, 6), float32], Tensor[(36), float32], bool, Tensor[(56), int8], Tensor[(13, 15, 8), bool], Tensor[(260), bool], Tensor[(1287), float64], Tensor[(13, 15, 8), bool], Tensor[(30, 4), float32]) */
}

def @func_14163() -> Tensor[(5, 15, 9), float32] {
  @func_14161() /* ty=Tensor[(5, 15, 9), float32] */
}

def @func_17621() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1688 = @func_12178() /* ty=(Tensor[(13, 15, 8), int64], Tensor[(13, 15, 8), bool]) */;
  %1689 = @func_11559() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1690 = %1688.1;
  %1691 = %1689.1;
  (%1690, %1691)
}

def @func_20583() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(75, 9), float64], Tensor[(675), float64]) {
  %1699 = fn () -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(75, 9), float64], Tensor[(675), float64]) {
    %1692 = @func_8537() /* ty=(Tensor[(13, 15, 8), float64],) */;
    %1693 = cast(meta[relay.Constant][104] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
    %1694 = reshape(%1693, newshape=[75, 9]) /* ty=Tensor[(75, 9), float64] */;
    %1695 = @func_10925(%1694) /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool], Tensor[(56), int8], bool, Tensor[(260), bool], Tensor[(75, 9), float64], Tensor[(396, 2), uint32], Tensor[(56), int8], Tensor[(13, 15, 8), bool]) */;
    %1696 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
    %1697 = %1692.0;
    %1698 = %1695.5;
    (%1696, %1697, %1698, meta[relay.Constant][104] /* ty=Tensor[(675), float64] */)
  };
  %1699() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(75, 9), float64], Tensor[(675), float64]) */
}

def @func_14225() -> (Tensor[(13, 15, 8), bool],) {
  @func_14223() /* ty=(Tensor[(13, 15, 8), bool],) */
}

def @func_21252() -> Tensor[(13, 15, 8), bool] {
  @func_21250() /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_19760(%var_19756: Tensor[(120), float32], %var_19757: bool, %var_19758: Tensor[(792), uint32], %var_19759: Tensor[(56), int8]) -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(120), float32], bool, Tensor[(675), float64], Tensor[(792), uint32], Tensor[(56), int8]) {
  @func_19754(%var_19756, %var_19757, %var_19758, %var_19759) /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(120), float32], bool, Tensor[(675), float64], Tensor[(792), uint32], Tensor[(56), int8]) */
}

def @func_21170() -> (Tensor[(2, 5, 12), float32], Tensor[(13, 15, 8), bool]) {
  @func_21168() /* ty=(Tensor[(2, 5, 12), float32], Tensor[(13, 15, 8), bool]) */
}

def @func_15411() -> Tensor[(13, 15, 8), bool] {
  %1700 = @func_13232() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(18, 70), float32], Tensor[(1260), float32]) */;
  %1700.0
}

def @func_16743() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) {
  @func_16741() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool]) */
}

def @func_14223() -> (Tensor[(13, 15, 8), bool],) {
  %1701 = @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
  %1702 = %1701.1;
  (%1702,)
}

def @func_9707() -> Tensor[(5, 15, 9), float32] {
  @func_9705() /* ty=Tensor[(5, 15, 9), float32] */
}

def @func_17855() -> Tensor[(13, 15, 8), uint64] {
  @func_16033() /* ty=Tensor[(13, 15, 8), uint64] */
}

def @func_12541() -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  %1707 = fn () -> (Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
    %1703 = @func_11056() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */;
    %1704 = @func_7785() /* ty=Tensor[(13, 15, 8), uint64] */;
    %1705 = %1703.1;
    %1706 = @func_7031() /* ty=Tensor[(13, 15, 8), bool] */;
    (%1704, %1705, %1706)
  };
  %1707() /* ty=(Tensor[(13, 15, 8), uint64], Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

def @func_13664(%var_13662: Tensor[(8, 13, 6), float32], %var_13663: Tensor[(675), float64]) -> (Tensor[(8, 13, 6), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(13, 15, 8), int64]) {
  @func_13660(%var_13662, %var_13663) /* ty=(Tensor[(8, 13, 6), float32], Tensor[(5, 15, 9), float64], Tensor[(675), float64], Tensor[(13, 15, 8), int64]) */
}

def @main() -> (Tensor[(13, 15, 8), bool], Tensor[(675), bool]) {
  %1708 = @func_20583() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), float64], Tensor[(75, 9), float64], Tensor[(675), float64]) */;
  %1709 = @func_17089() /* ty=Tensor[(675), float64] */;
  %1710 = cast(%1709, dtype="float64") /* ty=Tensor[(675), float64] */;
  %1711 = atan(%1710) /* ty=Tensor[(675), float64] */;
  %1712 = cast(meta[relay.Constant][105] /* ty=Tensor[(675), float64] */, dtype="bool") /* ty=Tensor[(675), bool] */;
  %1713 = shape_of(%1711, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1714 = cast(%1711, dtype="bool") /* ty=Tensor[(675), bool] */;
  %1715 = dyn.reshape(%1712, %1713, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1716 = %1708.0;
  %1717 = less(%1714, %1715) /* ty=Tensor[(675), bool] */;
  (%1716, %1717)
}

def @func_7279() -> (Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) {
  @func_7277() /* ty=(Tensor[(13, 15, 8), bool], Tensor[(13, 15, 8), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen963/build/output.py", line 5634, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [15:04:07] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


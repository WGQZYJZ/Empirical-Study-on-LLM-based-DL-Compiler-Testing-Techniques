==========mod==========
#[version = "0.0.5"]
def @func_5440() -> (Tensor[(1, 10), bool],) {
  %0 = @func_4786() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1 = %0.0;
  (%1,)
}

def @func_4298() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %2 = @func_1013() /* ty=Tensor[(1, 10), bool] */;
  %3 = @func_741() /* ty=Tensor[(1, 10), bool] */;
  (%2, %3)
}

def @func_1713() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) {
  %4 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(234, 1), float64] */, dtype="float64") /* ty=Tensor[(234, 1), float64] */;
  %6 = reshape(%5, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %7 = @func_1417(%6) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */;
  %8 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %9 = @func_979() /* ty=(Tensor[(1, 10), bool],) */;
  %10 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(234, 1), float64] */, dtype="float64") /* ty=Tensor[(234, 1), float64] */;
  %12 = reshape(%11, newshape=[3, 78]) /* ty=Tensor[(3, 78), float64] */;
  %13 = @func_1628(%12) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) */;
  %14 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %15 = @func_820() /* ty=Tensor[(1, 10), bool] */;
  %16 = %4.0;
  %17 = %7.2;
  %18 = %8.1;
  %19 = %9.0;
  %20 = %10.1;
  %21 = %13.2;
  %22 = %14.0;
  (%15, %16, %17, meta[relay.Constant][0] /* ty=Tensor[(234, 1), float64] */, %18, %19, %20, %21, %22)
}

def @func_4552() -> (Tensor[(1, 10), bool],) {
  %23 = @func_3428() /* ty=(Tensor[(1, 10), bool],) */;
  %24 = %23.0;
  (%24,)
}

def @func_9334(%var_9326: uint8, %var_9327: Tensor[(2, 14, 8), uint8]) -> Tensor[(2, 14, 8), uint8] {
  %25 = cast(%var_9326, dtype="uint8") /* ty=uint8 */;
  %26 = cast(%var_9327, dtype="uint8") /* ty=Tensor[(2, 14, 8), uint8] */;
  subtract(%25, %26) /* ty=Tensor[(2, 14, 8), uint8] */
}

def @func_9611() -> (Tensor[(16, 5, ?), float64], Tensor[(1, 10), bool]) {
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 1), float64] */;
  %28 = atan(%27) /* ty=Tensor[(16, 5, 1), float64] */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 1), float64] */;
  %30 = shape_of(%28, dtype="int32") /* ty=Tensor[(3), int32] */;
  %31 = cast(%28, dtype="float64") /* ty=Tensor[(16, 5, 1), float64] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %33 = @func_6088() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %34 = power(%31, %32) /* ty=Tensor[(16, 5, ?), float64] */;
  %35 = %33.0;
  (%34, %35)
}

def @func_7090(%var_7081: uint64) -> (Tensor[(1, 10), bool], Tensor[(15, 9, 1), uint64], uint64, Tensor[(135), uint64]) {
  %36 = cast(%var_7081, dtype="uint64") /* ty=uint64 */;
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %38 = reshape(%36, newshape=[]) /* ty=uint64 */;
  %39 = reshape(%37, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), uint64] */;
  %40 = @func_3779() /* ty=Tensor[(1, 10), bool] */;
  %41 = @func_1822(%38, %39) /* ty=Tensor[(15, 9, 1), uint64] */;
  (%40, %41, %var_7081, meta[relay.Constant][2] /* ty=Tensor[(135), uint64] */)
}

def @func_6638() -> Tensor[(1, 10), bool] {
  %42 = @func_6615() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %42.0
}

def @func_10208() -> Tensor[(1, 10), bool] {
  %43 = @func_4786() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %43.1
}

def @main(%var_10451: Tensor[(13, 15, 6), uint8]) -> (Tensor[(13, 15, 6), float64], Tensor[(13, 15, 6), float32]) {
  %44 = cast(%var_10451, dtype="bool") /* ty=Tensor[(13, 15, 6), bool] */;
  %45 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(13, 15, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 15, 6), uint8] */, dtype="bool") /* ty=Tensor[(13, 15, 6), bool] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %48 = equal(%46, %47) /* ty=Tensor[(13, 15, 6), bool] */;
  %49 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 15, 6), uint8] */, dtype="float64") /* ty=Tensor[(13, 15, 6), float64] */;
  %50 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%48, dtype="float64") /* ty=Tensor[(13, 15, 6), float64] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %53 = cast(%var_10451, dtype="float32") /* ty=Tensor[(13, 15, 6), float32] */;
  %54 = divide(%51, %52) /* ty=Tensor[(13, 15, 6), float64] */;
  %55 = asinh(%53) /* ty=Tensor[(13, 15, 6), float32] */;
  (%54, %55)
}

def @func_4502() -> (Tensor[(1, 10), bool],) {
  %56 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %57 = %56.0;
  (%57,)
}

def @func_1154(%var_1132: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32], Tensor[(234), float64], Tensor[(1, 10), bool]) {
  %58 = @func_979() /* ty=(Tensor[(1, 10), bool],) */;
  %59 = cast(%var_1132, dtype="float64") /* ty=Tensor[(234), float64] */;
  %60 = cast(%var_1132, dtype="float64") /* ty=Tensor[(234), float64] */;
  %61 = reshape(%59, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %62 = reshape(%60, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %63 = @func_880(%61, %62) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %64 = cast(%var_1132, dtype="float64") /* ty=Tensor[(234), float64] */;
  %65 = %63.1;
  %66 = cast(%65, dtype="float64") /* ty=Tensor[(2, 13, 9), float64] */;
  %67 = reshape(%64, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %68 = reshape(%66, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %69 = @func_880(%67, %68) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %70 = %58.0;
  %71 = %69.0;
  (%70, %65, %var_1132, %71)
}

def @func_8643() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], int32, Tensor[(77), float32], Tensor[(528), int32], Tensor[(360), int64]) {
  %72 = @func_6088() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %73 = @func_1736() /* ty=(Tensor[(1, 10), bool],) */;
  %74 = cast(meta[relay.Constant][4] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %76 = cast(meta[relay.Constant][6] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %77 = reshape(%74, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %78 = reshape(%75, newshape=[264, 2]) /* ty=Tensor[(264, 2), int32] */;
  %79 = reshape(%76, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %80 = @func_2289(%77, %78, %79) /* ty=(Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(11, 7, 2), bool], Tensor[(810, 1), bool], int32, Tensor[(264, 2), int32], Tensor[(360), int64]) */;
  %81 = %72.2;
  %82 = %73.0;
  %83 = %80.4;
  (%81, %82, %83, meta[relay.Constant][4] /* ty=Tensor[(77), float32] */, meta[relay.Constant][5] /* ty=Tensor[(528), int32] */, meta[relay.Constant][6] /* ty=Tensor[(360), int64] */)
}

def @func_9049() -> Tensor[(1, 10), bool] {
  %84 = @func_6088() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %84.0
}

def @func_1926(%var_1896: float64, %var_1897: Tensor[(10, 2, 2), float64]) -> (Tensor[(10, 2, 2), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 2), uint32]) {
  %85 = cast(%var_1896, dtype="float64") /* ty=float64 */;
  %86 = cast(%var_1897, dtype="float64") /* ty=Tensor[(10, 2, 2), float64] */;
  %87 = @func_1713() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) */;
  %88 = cast(%var_1897, dtype="uint32") /* ty=Tensor[(10, 2, 2), uint32] */;
  %89 = cast(%var_1896, dtype="uint32") /* ty=uint32 */;
  %90 = divide(%85, %86) /* ty=Tensor[(10, 2, 2), float64] */;
  %91 = %87.6;
  %92 = maximum(%88, %89) /* ty=Tensor[(10, 2, 2), uint32] */;
  (%90, %91, %92)
}

def @func_6693() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %93 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %94 = @func_6021() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %95 = %93.0;
  %96 = %94.2;
  (%95, %96)
}

def @func_8097(%var_8054: Tensor[(5, 10), bool], %var_8093: Tensor[(8), float32]) -> (Tensor[(5, 10), bool], Tensor[(4, 8, 15), float32], Tensor[(1, 480), float32], Tensor[(8, 1, 1), float32], Tensor[(8), float32]) {
  %97 = @func_3706() /* ty=Tensor[(1, 10), bool] */;
  %98 = cast(%97, dtype="bool") /* ty=Tensor[(1, 10), bool] */;
  %99 = cast(%var_8054, dtype="bool") /* ty=Tensor[(5, 10), bool] */;
  %100 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 480), float32] */, dtype="float32") /* ty=Tensor[(1, 480), float32] */;
  %101 = reshape(%100, newshape=[4, 8, 15]) /* ty=Tensor[(4, 8, 15), float32] */;
  %102 = cast(%var_8093, dtype="float32") /* ty=Tensor[(8), float32] */;
  %103 = reshape(%102, newshape=[8, 1, 1]) /* ty=Tensor[(8, 1, 1), float32] */;
  %104 = less_equal(%98, %99) /* ty=Tensor[(5, 10), bool] */;
  %105 = @func_6847(%101) /* ty=Tensor[(4, 8, 15), float32] */;
  %106 = @func_3993(%103) /* ty=Tensor[(8, 1, 1), float32] */;
  (%104, %105, meta[relay.Constant][7] /* ty=Tensor[(1, 480), float32] */, %106, %var_8093)
}

def @func_5640(%var_5615: Tensor[(6, 13, 4), int8], %var_5616: Tensor[(6, 13, 4), int8]) -> (Tensor[(6, 13, 4), int8], Tensor[(1, 10), bool]) {
  %107 = cast(%var_5616, dtype="int8") /* ty=Tensor[(6, 13, 4), int8] */;
  %108 = shape_of(%var_5615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%var_5615, dtype="int8") /* ty=Tensor[(6, 13, 4), int8] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %111 = @func_4786() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %112 = add(%109, %110) /* ty=Tensor[(6, 13, 4), int8] */;
  %113 = %111.0;
  (%112, %113)
}

def @func_9375() -> (Tensor[(1, 10), bool],) {
  %114 = @func_2815() /* ty=Tensor[(1, 10), bool] */;
  (%114,)
}

def @func_6739() -> (Tensor[(1, 10), bool],) {
  %115 = @func_5192() /* ty=(Tensor[(1, 10), bool],) */;
  %116 = %115.0;
  (%116,)
}

def @func_2678() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %117 = @func_1736() /* ty=(Tensor[(1, 10), bool],) */;
  %118 = @func_1571() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %119 = %117.0;
  %120 = %118.0;
  (%119, %120)
}

def @func_820() -> Tensor[(1, 10), bool] {
  %121 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %121.0
}

def @func_4738(%var_4710: Tensor[(6, 14, 13), float64]) -> (Tensor[(1, 10), bool], Tensor[(6, 14, 13), float64]) {
  %122 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
  %123 = cast(%var_4710, dtype="float64") /* ty=Tensor[(6, 14, 13), float64] */;
  %124 = atan(%123) /* ty=Tensor[(6, 14, 13), float64] */;
  %125 = cast(%var_4710, dtype="float64") /* ty=Tensor[(6, 14, 13), float64] */;
  %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%124, dtype="float64") /* ty=Tensor[(6, 14, 13), float64] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %129 = %122.0;
  %130 = maximum(%127, %128) /* ty=Tensor[(6, 14, 13), float64] */;
  (%129, %130)
}

def @func_5904() -> Tensor[(1, 10), bool] {
  @func_3236() /* ty=Tensor[(1, 10), bool] */
}

def @func_1571() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %131 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %132 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %133 = %131.0;
  %134 = %132.0;
  %135 = @func_1013() /* ty=Tensor[(1, 10), bool] */;
  (%133, %134, %135)
}

def @func_7678() -> Tensor[(1, 10), bool] {
  %136 = @func_1736() /* ty=(Tensor[(1, 10), bool],) */;
  %136.0
}

def @func_3471() -> (Tensor[(1, 10), bool],) {
  %137 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %138 = %137.0;
  (%138,)
}

def @func_6969(%var_6937: Tensor[(154), float32], %var_6945: Tensor[(77), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(77), bool]) {
  %139 = @func_2940() /* ty=(Tensor[(1, 10), bool],) */;
  %140 = cast(meta[relay.Constant][8] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %141 = cast(%var_6937, dtype="float32") /* ty=Tensor[(154), float32] */;
  %142 = reshape(%140, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %143 = reshape(%141, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %144 = @func_2557(%142, %143) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(10, 2, 2), float64], float64, Tensor[(40), float64]) */;
  %145 = cast(%var_6945, dtype="bool") /* ty=Tensor[(77), bool] */;
  %146 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(77), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(77), float32] */, dtype="bool") /* ty=Tensor[(77), bool] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?), bool] */;
  %149 = %139.0;
  %150 = %144.1;
  %151 = logical_or(%147, %148) /* ty=Tensor[(77), bool] */;
  (%149, %150, %var_6937, %151)
}

def @func_5918() -> Tensor[(1, 10), bool] {
  @func_5904() /* ty=Tensor[(1, 10), bool] */
}

def @func_6021() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %152 = @func_5490() /* ty=(Tensor[(1, 10), bool],) */;
  %153 = @func_4195() /* ty=(Tensor[(1, 10), bool],) */;
  %154 = %152.0;
  %155 = %153.0;
  %156 = @func_5686() /* ty=Tensor[(1, 10), bool] */;
  (%154, %155, %156)
}

def @func_2137(%var_2111: Tensor[(39, 6), float64]) -> (Tensor[(1, 10), bool], float64, Tensor[(1, 10), bool], Tensor[(39, 6), float64], Tensor[(2, 13, 9), float32], Tensor[(10, 2, 2), bool]) {
  %157 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %158 = cast(%var_2111, dtype="float64") /* ty=Tensor[(39, 6), float64] */;
  %159 = reshape(%158, newshape=[3, 78]) /* ty=Tensor[(3, 78), float64] */;
  %160 = @func_1628(%159) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) */;
  %161 = cast(%var_2111, dtype="float64") /* ty=Tensor[(39, 6), float64] */;
  %162 = cast(%var_2111, dtype="float64") /* ty=Tensor[(39, 6), float64] */;
  %163 = reshape(%161, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %164 = reshape(%162, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %165 = @func_880(%163, %164) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %166 = cast(-4.75179f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %167 = cast(meta[relay.Constant][9] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %168 = reshape(%166, newshape=[]) /* ty=float64 */;
  %169 = reshape(%167, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float64] */;
  %170 = @func_1926(%168, %169) /* ty=(Tensor[(10, 2, 2), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 2), uint32]) */;
  %171 = %170.2;
  %172 = cast(meta[relay.Constant][9] /* ty=Tensor[(40), float64] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%171, dtype="float32") /* ty=Tensor[(10, 2, 2), float32] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %176 = floor_divide(%174, %175) /* ty=Tensor[(10, 2, 2), float32] */;
  %177 = cast(%171, dtype="bool") /* ty=Tensor[(10, 2, 2), bool] */;
  %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%176, dtype="bool") /* ty=Tensor[(10, 2, 2), bool] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %181 = %157.1;
  %182 = %160.1;
  %183 = %165.1;
  %184 = greater_equal(%179, %180) /* ty=Tensor[(10, 2, 2), bool] */;
  (%181, -4.75179f64 /* ty=float64 */, %182, %var_2111, %183, %184)
}

def @func_4803() -> Tensor[(1, 10), bool] {
  %185 = @func_3535() /* ty=(Tensor[(1, 10), bool],) */;
  %185.0
}

def @func_5520() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %186 = @func_4502() /* ty=(Tensor[(1, 10), bool],) */;
  %187 = @func_4313() /* ty=(Tensor[(1, 10), bool],) */;
  %188 = %186.0;
  %189 = %187.0;
  (%188, %189)
}

def @func_4391(%var_4389: Tensor[(77), float32]) -> (Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(234), float64], Tensor[(77), float32]) {
  %190 = cast(meta[relay.Constant][10] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %191 = cast(%var_4389, dtype="float32") /* ty=Tensor[(77), float32] */;
  %192 = reshape(%190, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %193 = reshape(%191, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
  %194 = @func_2621(%192, %193) /* ty=(Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7), float32], Tensor[(154), float32]) */;
  %195 = @func_1013() /* ty=Tensor[(1, 10), bool] */;
  %196 = %194.6;
  (%195, %196, meta[relay.Constant][10] /* ty=Tensor[(234), float64] */, %var_4389)
}

def @func_1628(%var_1618: Tensor[(3, 78), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) {
  %197 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %198 = cast(%var_1618, dtype="float64") /* ty=Tensor[(3, 78), float64] */;
  %199 = cast(%var_1618, dtype="float64") /* ty=Tensor[(3, 78), float64] */;
  %200 = reshape(%198, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %201 = reshape(%199, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %202 = @func_880(%200, %201) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %203 = %202.1;
  %204 = cast(%203, dtype="bool") /* ty=Tensor[(2, 13, 9), bool] */;
  %205 = shape_of(%var_1618, dtype="int32") /* ty=Tensor[(2), int32] */;
  %206 = cast(%var_1618, dtype="bool") /* ty=Tensor[(3, 78), bool] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %208 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  %209 = %197.0;
  %210 = logical_and(%206, %207) /* ty=Tensor[(3, 78), bool] */;
  (%208, %209, %210)
}

def @func_741() -> Tensor[(1, 10), bool] {
  %211 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %211.0
}

def @func_3779() -> Tensor[(1, 10), bool] {
  @func_2364() /* ty=Tensor[(1, 10), bool] */
}

def @func_5686() -> Tensor[(1, 10), bool] {
  %212 = @func_4920() /* ty=(Tensor[(1, 10), bool],) */;
  %212.0
}

def @func_9019(%var_9014: Tensor[(8, 14, 9), uint16], %var_9015: Tensor[(8, 14, 9), uint16]) -> (Tensor[(8, 14, 9), uint16],) {
  %213 = cast(%var_9015, dtype="uint16") /* ty=Tensor[(8, 14, 9), uint16] */;
  %214 = shape_of(%var_9014, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%var_9014, dtype="uint16") /* ty=Tensor[(8, 14, 9), uint16] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %217 = bitwise_and(%215, %216) /* ty=Tensor[(8, 14, 9), uint16] */;
  (%217,)
}

def @func_10221() -> (Tensor[(1, 10), bool],) {
  %218 = @func_938() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %219 = %218.1;
  (%219,)
}

def @func_3535() -> (Tensor[(1, 10), bool],) {
  %220 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %221 = %220.1;
  (%221,)
}

def @func_8006(%var_7945: Tensor[(2, 15, 3), int64], %var_7946: Tensor[(2, 15, 3), int64], %var_7975: Tensor[(1050), float32], %var_7989: Tensor[(2, 15, 3), bool]) -> (Tensor[(1, 10), bool], Tensor[(5, 14, 15), float32], Tensor[(1050), float32], Tensor[(1, 10), bool], Tensor[(2, 15, 3), float32], Tensor[(1, 10), bool]) {
  %222 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %223 = cast(%var_7975, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %224 = cast(%var_7975, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %225 = reshape(%223, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %226 = reshape(%224, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %227 = cast(%var_7946, dtype="int64") /* ty=Tensor[(2, 15, 3), int64] */;
  %228 = shape_of(%var_7945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%var_7945, dtype="int64") /* ty=Tensor[(2, 15, 3), int64] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %231 = left_shift(%229, %230) /* ty=Tensor[(2, 15, 3), int64] */;
  %232 = cast(%var_7945, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
  %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%231, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %236 = logical_or(%234, %235) /* ty=Tensor[(2, 15, 3), bool] */;
  %237 = cast(%var_7989, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
  %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%236, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %241 = @func_5440() /* ty=(Tensor[(1, 10), bool],) */;
  %242 = %222.0;
  %243 = @func_7281(%225, %226) /* ty=Tensor[(5, 14, 15), float32] */;
  %244 = @func_4803() /* ty=Tensor[(1, 10), bool] */;
  %245 = floor_divide(%239, %240) /* ty=Tensor[(2, 15, 3), float32] */;
  %246 = %241.0;
  (%242, %243, %var_7975, %244, %245, %246)
}

def @func_190(%var_184: Tensor[(8, 5, 9), int64], %var_185: Tensor[(8, 5, 9), int64]) -> Tensor[(8, 5, 9), int64] {
  %247 = cast(%var_185, dtype="int64") /* ty=Tensor[(8, 5, 9), int64] */;
  %248 = shape_of(%var_184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%var_184, dtype="int64") /* ty=Tensor[(8, 5, 9), int64] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%249, %250) /* ty=Tensor[(8, 5, 9), int64] */
}

def @func_3706() -> Tensor[(1, 10), bool] {
  %251 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
  %251.0
}

def @func_4786() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %252 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %253 = @func_3236() /* ty=Tensor[(1, 10), bool] */;
  %254 = %252.1;
  (%253, %254)
}

def @func_7132() -> Tensor[(1, 10), bool] {
  %255 = @func_4920() /* ty=(Tensor[(1, 10), bool],) */;
  %255.0
}

def @func_1013() -> Tensor[(1, 10), bool] {
  @func_820() /* ty=Tensor[(1, 10), bool] */
}

def @func_6510() -> (Tensor[(1, 10), bool],) {
  %256 = @func_4502() /* ty=(Tensor[(1, 10), bool],) */;
  %257 = %256.0;
  (%257,)
}

def @func_2755(%var_2705: Tensor[(4, 6, 3), uint16]) -> (Tensor[(4, 6, 3), bool], Tensor[(4, 6, 3), float32]) {
  %258 = cast(%var_2705, dtype="bool") /* ty=Tensor[(4, 6, 3), bool] */;
  %259 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(4, 6, 3), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 6, 3), uint16] */, dtype="bool") /* ty=Tensor[(4, 6, 3), bool] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %262 = cast(%var_2705, dtype="float32") /* ty=Tensor[(4, 6, 3), float32] */;
  %263 = less_equal(%260, %261) /* ty=Tensor[(4, 6, 3), bool] */;
  %264 = exp(%262) /* ty=Tensor[(4, 6, 3), float32] */;
  (%263, %264)
}

def @func_7824(%var_7818: Tensor[(11, 7), float32], %var_7819: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(154), float32]) {
  %265 = @func_6739() /* ty=(Tensor[(1, 10), bool],) */;
  %266 = cast(%var_7818, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %267 = cast(%var_7819, dtype="float32") /* ty=Tensor[(154), float32] */;
  %268 = reshape(%266, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %269 = reshape(%267, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %270 = @func_1064(%268, %269) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(77), float32], Tensor[(154), float32]) */;
  %271 = %265.0;
  %272 = %270.1;
  (%271, %272, %var_7818, %var_7819)
}

def @func_8277(%var_8214: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64], Tensor[(22, 7), float32], Tensor[(1, 10), bool], Tensor[(77), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(1, 10), bool]) {
  %273 = @func_1713() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) */;
  %274 = cast(%var_8214, dtype="float64") /* ty=Tensor[(234), float64] */;
  %275 = reshape(%274, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %276 = @func_5724(%275) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */;
  %277 = @func_938() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %278 = cast(meta[relay.Constant][12] /* ty=Tensor[(22, 7), float32] */, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %279 = cast(meta[relay.Constant][13] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %280 = reshape(%278, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %281 = reshape(%279, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %282 = @func_6969(%280, %281) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(77), bool]) */;
  %283 = %282.3;
  %284 = cast(meta[relay.Constant][14] /* ty=Tensor[(77), bool] */, dtype="bool") /* ty=Tensor[(77), bool] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(1), int32] */;
  %286 = cast(%283, dtype="bool") /* ty=Tensor[(77), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?), bool] */;
  %288 = @func_6693() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %289 = cast(meta[relay.Constant][13] /* ty=Tensor[(77), float32] */, dtype="int64") /* ty=Tensor[(77), int64] */;
  %290 = shape_of(%283, dtype="int32") /* ty=Tensor[(1), int32] */;
  %291 = cast(%283, dtype="int64") /* ty=Tensor[(77), int64] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?), int64] */;
  %293 = logical_xor(%291, %292) /* ty=Tensor[(77), int64] */;
  %294 = cast(%293, dtype="float32") /* ty=Tensor[(77), float32] */;
  %295 = %273.4;
  %296 = %276.2;
  %297 = %277.1;
  %298 = equal(%286, %287) /* ty=Tensor[(77), bool] */;
  %299 = %288.0;
  %300 = tan(%294) /* ty=Tensor[(77), float32] */;
  %301 = @func_5765() /* ty=Tensor[(1, 10), bool] */;
  (%295, %296, %var_8214, meta[relay.Constant][12] /* ty=Tensor[(22, 7), float32] */, %297, %298, %299, %300, %301)
}

def @func_1488() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %302 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
  %303 = @func_979() /* ty=(Tensor[(1, 10), bool],) */;
  %304 = %302.0;
  %305 = %303.0;
  (%304, %305)
}

def @func_1334() -> (Tensor[(1, 10), bool],) {
  %306 = @func_979() /* ty=(Tensor[(1, 10), bool],) */;
  %307 = %306.0;
  (%307,)
}

def @func_9824(%var_9781: Tensor[(77), float32], %var_9782: Tensor[(154), float32]) -> (Tensor[(360), int64], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %308 = @func_8755() /* ty=(Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(810), bool], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8), float32], Tensor[(77, 1), float32], Tensor[(77), float32]) */;
  %309 = cast(%var_9781, dtype="float32") /* ty=Tensor[(77), float32] */;
  %310 = cast(%var_9782, dtype="float32") /* ty=Tensor[(154), float32] */;
  %311 = reshape(%309, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
  %312 = reshape(%310, newshape=[11, 14]) /* ty=Tensor[(11, 14), float32] */;
  %313 = @func_2075(%311, %312) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(11, 14), float32]) */;
  %314 = cast(%var_9781, dtype="float32") /* ty=Tensor[(77), float32] */;
  %315 = cast(%var_9782, dtype="float32") /* ty=Tensor[(154), float32] */;
  %316 = reshape(%314, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
  %317 = reshape(%315, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %318 = @func_7824(%316, %317) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(154), float32]) */;
  %319 = %308.3;
  %320 = %313.0;
  %321 = @func_5765() /* ty=Tensor[(1, 10), bool] */;
  %322 = %318.0;
  (%319, %320, %var_9781, %var_9782, %321, %322)
}

def @func_2364() -> Tensor[(1, 10), bool] {
  %323 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %323.0
}

def @func_5765() -> Tensor[(1, 10), bool] {
  @func_2364() /* ty=Tensor[(1, 10), bool] */
}

def @func_997() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %324 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  %325 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  (%324, %325)
}

def @func_2621(%var_2599: Tensor[(234), float64], %var_2615: Tensor[(11, 7), float32]) -> (Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7), float32], Tensor[(154), float32]) {
  %326 = cast(%var_2599, dtype="float64") /* ty=Tensor[(234), float64] */;
  %327 = reshape(%326, newshape=[3, 78]) /* ty=Tensor[(3, 78), float64] */;
  %328 = @func_1628(%327) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) */;
  %329 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
  %330 = cast(%var_2615, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %331 = cast(meta[relay.Constant][15] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %332 = reshape(%330, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
  %333 = reshape(%331, newshape=[11, 14]) /* ty=Tensor[(11, 14), float32] */;
  %334 = @func_2075(%332, %333) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(11, 14), float32]) */;
  %335 = @func_1790() /* ty=Tensor[(1, 10), bool] */;
  %336 = %328.2;
  %337 = %329.0;
  %338 = %334.0;
  (%335, %336, %var_2599, %337, %338, %var_2615, meta[relay.Constant][15] /* ty=Tensor[(154), float32] */)
}

def @func_5192() -> (Tensor[(1, 10), bool],) {
  %339 = @func_3236() /* ty=Tensor[(1, 10), bool] */;
  (%339,)
}

def @func_2174(%var_2143: Tensor[(5, 4, 4), float32]) -> (Tensor[(5, 4, 4), float32], Tensor[(1, 10), bool]) {
  %340 = cast(%var_2143, dtype="float32") /* ty=Tensor[(5, 4, 4), float32] */;
  %341 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %342 = sinh(%340) /* ty=Tensor[(5, 4, 4), float32] */;
  %343 = %341.1;
  (%342, %343)
}

def @func_1790() -> Tensor[(1, 10), bool] {
  %344 = @func_938() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %344.1
}

def @func_4649() -> (Tensor[(1, 10), bool],) {
  %345 = @func_4298() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %346 = %345.1;
  (%346,)
}

def @func_6088() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %347 = @func_4649() /* ty=(Tensor[(1, 10), bool],) */;
  %348 = %347.0;
  %349 = @func_820() /* ty=Tensor[(1, 10), bool] */;
  %350 = @func_820() /* ty=Tensor[(1, 10), bool] */;
  (%348, %349, %350)
}

def @func_4459(%var_4445: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32],) {
  %351 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 16, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %352 = shape_of(%var_4445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%var_4445, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %355 = multiply(%353, %354) /* ty=Tensor[(12, 16, 12), float32] */;
  (%355,)
}

def @func_2815() -> Tensor[(1, 10), bool] {
  @func_820() /* ty=Tensor[(1, 10), bool] */
}

def @func_9244(%var_9229: Tensor[(1008), uint16]) -> (Tensor[(8), float32], Tensor[(8, 14, 9), uint16], Tensor[(1008), uint16]) {
  %356 = cast(%var_9229, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %357 = cast(%var_9229, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %358 = reshape(%356, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), uint16] */;
  %359 = reshape(%357, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), uint16] */;
  %360 = @func_9019(%358, %359) /* ty=(Tensor[(8, 14, 9), uint16],) */;
  %361 = @func_7207() /* ty=Tensor[(8), float32] */;
  %362 = %360.0;
  (%361, %362, %var_9229)
}

def @func_5603() -> Tensor[(1, 10), bool] {
  @func_820() /* ty=Tensor[(1, 10), bool] */
}

def @func_7207() -> Tensor[(8), float32] {
  %363 = @func_5589() /* ty=(Tensor[(1, 10), bool], Tensor[(8, 1, 1), float32], Tensor[(8), float32], Tensor[(4, 6, 3), float32], Tensor[(72), uint16], Tensor[(1, 10), bool]) */;
  %363.2
}

def @func_650() -> Tensor[(1, 10), bool] {
  %364 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %364.0
}

def @func_902() -> (Tensor[(1, 10), bool],) {
  %365 = @func_741() /* ty=Tensor[(1, 10), bool] */;
  (%365,)
}

def @func_3194(%var_3054: Tensor[(77), float32], %var_3055: Tensor[(528), int32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(528), int32], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(810, 77), int8], Tensor[(810, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(1, 10), bool]) {
  %366 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %367 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %368 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %369 = reshape(%367, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %370 = reshape(%368, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %371 = cast(%var_3054, dtype="float32") /* ty=Tensor[(77), float32] */;
  %372 = cast(%var_3055, dtype="int32") /* ty=Tensor[(528), int32] */;
  %373 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %374 = reshape(%371, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %375 = reshape(%372, newshape=[264, 2]) /* ty=Tensor[(264, 2), int32] */;
  %376 = reshape(%373, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %377 = @func_2289(%374, %375, %376) /* ty=(Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(11, 7, 2), bool], Tensor[(810, 1), bool], int32, Tensor[(264, 2), int32], Tensor[(360), int64]) */;
  %378 = %377.3;
  %379 = cast(%var_3054, dtype="bool") /* ty=Tensor[(77), bool] */;
  %380 = cast(%378, dtype="bool") /* ty=Tensor[(810, 1), bool] */;
  %381 = equal(%379, %380) /* ty=Tensor[(810, 77), bool] */;
  %382 = cast(%381, dtype="int8") /* ty=Tensor[(810, 77), int8] */;
  %383 = cast(%378, dtype="int8") /* ty=Tensor[(810, 1), int8] */;
  %384 = bitwise_xor(%382, %383) /* ty=Tensor[(810, 77), int8] */;
  %385 = cast(%384, dtype="int8") /* ty=Tensor[(810, 77), int8] */;
  %386 = shape_of(%381, dtype="int32") /* ty=Tensor[(2), int32] */;
  %387 = cast(%381, dtype="int8") /* ty=Tensor[(810, 77), int8] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %389 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %390 = %389.0;
  %391 = cast(%378, dtype="bool") /* ty=Tensor[(810, 1), bool] */;
  %392 = cast(%390, dtype="bool") /* ty=Tensor[(1, 10), bool] */;
  %393 = not_equal(%391, %392) /* ty=Tensor[(810, 10), bool] */;
  %394 = cast(%393, dtype="uint64") /* ty=Tensor[(810, 10), uint64] */;
  %395 = cast(%390, dtype="uint64") /* ty=Tensor[(1, 10), uint64] */;
  %396 = left_shift(%394, %395) /* ty=Tensor[(810, 10), uint64] */;
  %397 = cast(%390, dtype="float64") /* ty=Tensor[(1, 10), float64] */;
  %398 = cast(%378, dtype="float64") /* ty=Tensor[(810, 1), float64] */;
  %399 = minimum(%397, %398) /* ty=Tensor[(810, 10), float64] */;
  %400 = cast(%393, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
  %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(2), int32] */;
  %402 = cast(%399, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %404 = greater(%402, %403) /* ty=Tensor[(810, 10), bool] */;
  %405 = cast(%404, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
  %406 = shape_of(%396, dtype="int32") /* ty=Tensor[(2), int32] */;
  %407 = cast(%396, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %409 = logical_or(%407, %408) /* ty=Tensor[(810, 10), bool] */;
  %410 = cast(%404, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(2), int32] */;
  %412 = cast(%409, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %414 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %415 = cast(%384, dtype="float64") /* ty=Tensor[(810, 77), float64] */;
  %416 = @func_2815() /* ty=Tensor[(1, 10), bool] */;
  %417 = %366.0;
  %418 = @func_190(%369, %370) /* ty=Tensor[(8, 5, 9), int64] */;
  %419 = minimum(%387, %388) /* ty=Tensor[(810, 77), int8] */;
  %420 = less(%412, %413) /* ty=Tensor[(810, 10), bool] */;
  %421 = %414.1;
  %422 = sinh(%415) /* ty=Tensor[(810, 77), float64] */;
  %423 = @func_2364() /* ty=Tensor[(1, 10), bool] */;
  (%416, %417, %var_3055, meta[relay.Constant][17] /* ty=Tensor[(360), int64] */, %418, %419, %420, %421, %422, %423)
}

def @func_9035(%var_9030: Tensor[(4, 6, 8), float32]) -> Tensor[(4, 6, 8), float32] {
  %424 = cast(%var_9030, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
  erf(%424) /* ty=Tensor[(4, 6, 8), float32] */
}

def @func_5490() -> (Tensor[(1, 10), bool],) {
  %425 = @func_2364() /* ty=Tensor[(1, 10), bool] */;
  (%425,)
}

def @func_2940() -> (Tensor[(1, 10), bool],) {
  %426 = @func_2846() /* ty=(Tensor[(1, 10), bool],) */;
  %427 = %426.0;
  (%427,)
}

def @func_1773(%var_1742: Tensor[(77), float32], %var_1743: Tensor[(154), float32], %var_1748: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) {
  %428 = cast(%var_1742, dtype="float32") /* ty=Tensor[(77), float32] */;
  %429 = cast(%var_1743, dtype="float32") /* ty=Tensor[(154), float32] */;
  %430 = reshape(%428, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %431 = reshape(%429, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %432 = @func_1064(%430, %431) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(77), float32], Tensor[(154), float32]) */;
  %433 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %434 = cast(%var_1748, dtype="float64") /* ty=Tensor[(234), float64] */;
  %435 = cast(%var_1748, dtype="float64") /* ty=Tensor[(234), float64] */;
  %436 = reshape(%434, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %437 = reshape(%435, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %438 = @func_880(%436, %437) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %439 = %438.1;
  %440 = cast(%439, dtype="float64") /* ty=Tensor[(2, 13, 9), float64] */;
  %441 = cast(%var_1748, dtype="float64") /* ty=Tensor[(234), float64] */;
  %442 = reshape(%440, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %443 = reshape(%441, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %444 = @func_880(%442, %443) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %445 = cast(%var_1748, dtype="float32") /* ty=Tensor[(234), float32] */;
  %446 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%439, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %449 = @func_1013() /* ty=Tensor[(1, 10), bool] */;
  %450 = %432.0;
  %451 = %433.0;
  %452 = %444.0;
  %453 = power(%447, %448) /* ty=Tensor[(2, 13, 9), float32] */;
  (%449, %450, %var_1742, %var_1743, %451, %452, %453)
}

def @func_589() -> (Tensor[(1, 10), bool],) {
  %454 = cast(5 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %455 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 10), int64] */, dtype="bool") /* ty=Tensor[(1, 10), bool] */;
  %456 = less(%454, %455) /* ty=Tensor[(1, 10), bool] */;
  (%456,)
}

def @func_1822(%var_1811: uint64, %var_1812: Tensor[(15, 9, 1), uint64]) -> Tensor[(15, 9, 1), uint64] {
  %457 = cast(%var_1811, dtype="uint64") /* ty=uint64 */;
  %458 = cast(%var_1812, dtype="uint64") /* ty=Tensor[(15, 9, 1), uint64] */;
  right_shift(%457, %458) /* ty=Tensor[(15, 9, 1), uint64] */
}

def @func_10089(%var_10082: Tensor[(234), float64]) -> (Tensor[(528), int32], Tensor[(1, 10), bool], Tensor[(?, 10), uint8], Tensor[(234), float64]) {
  %459 = @func_8643() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], int32, Tensor[(77), float32], Tensor[(528), int32], Tensor[(360), int64]) */;
  %460 = @func_5440() /* ty=(Tensor[(1, 10), bool],) */;
  %461 = cast(%var_10082, dtype="float64") /* ty=Tensor[(234), float64] */;
  %462 = reshape(%461, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %463 = @func_1417(%462) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */;
  %464 = %459.4;
  %465 = %460.0;
  %466 = %463.1;
  (%464, %465, %466, %var_10082)
}

def @func_9683() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %467 = @func_9375() /* ty=(Tensor[(1, 10), bool],) */;
  %468 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %469 = %467.0;
  %470 = %468.1;
  (%469, %470)
}

def @func_8682() -> Tensor[(1, 10), bool] {
  %471 = @func_4649() /* ty=(Tensor[(1, 10), bool],) */;
  %471.0
}

def @func_677() -> (Tensor[(1, 10), bool],) {
  %472 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  (%472,)
}

def @func_5299() -> (Tensor[(1, 10), bool],) {
  %473 = @func_4195() /* ty=(Tensor[(1, 10), bool],) */;
  %474 = %473.0;
  (%474,)
}

def @func_7698() -> Tensor[(1, 10), bool] {
  %475 = @func_6088() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %475.2
}

def @func_3970() -> Tensor[(1, 10), bool] {
  %476 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %476.1
}

def @func_10337() -> Tensor[(1, 10), bool] {
  %477 = @func_4502() /* ty=(Tensor[(1, 10), bool],) */;
  %477.0
}

def @func_6424(%var_6384: Tensor[(1, 360), int64], %var_6414: Tensor[(4, 32), float64], %var_6415: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(8, 5, 9), int64], Tensor[(1, 360), int64], Tensor[(234), float64], Tensor[(4, 32), float64], Tensor[(234), float64]) {
  %478 = @func_4313() /* ty=(Tensor[(1, 10), bool],) */;
  %479 = cast(meta[relay.Constant][19] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %480 = reshape(%479, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %481 = @func_4391(%480) /* ty=(Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(234), float64], Tensor[(77), float32]) */;
  %482 = cast(%var_6384, dtype="int64") /* ty=Tensor[(1, 360), int64] */;
  %483 = cast(%var_6384, dtype="int64") /* ty=Tensor[(1, 360), int64] */;
  %484 = reshape(%482, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %485 = reshape(%483, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %486 = cast(%var_6414, dtype="float64") /* ty=Tensor[(4, 32), float64] */;
  %487 = cast(meta[relay.Constant][19] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %488 = cast(%var_6415, dtype="float64") /* ty=Tensor[(234), float64] */;
  %489 = reshape(%486, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), float64] */;
  %490 = reshape(%487, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %491 = reshape(%488, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %492 = @func_4619(%489, %490, %491) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(10, 2, 7), bool], bool, Tensor[(140), bool], Tensor[(8, 2, 8), float32], Tensor[(1, 10), bool], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(234), float64]) */;
  %493 = %478.0;
  %494 = @func_5765() /* ty=Tensor[(1, 10), bool] */;
  %495 = %481.0;
  %496 = @func_190(%484, %485) /* ty=Tensor[(8, 5, 9), int64] */;
  %497 = %492.9;
  (%493, %494, %495, meta[relay.Constant][19] /* ty=Tensor[(77), float32] */, %496, %var_6384, %497, %var_6414, %var_6415)
}

def @func_7332(%var_7312: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), uint64]) {
  %498 = @func_5192() /* ty=(Tensor[(1, 10), bool],) */;
  %499 = cast(%var_7312, dtype="float64") /* ty=Tensor[(234), float64] */;
  %500 = reshape(%499, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %501 = @func_7011(%500) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64]) */;
  %502 = %501.2;
  %503 = cast(%var_7312, dtype="uint64") /* ty=Tensor[(234), uint64] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(1), int32] */;
  %505 = cast(%502, dtype="uint64") /* ty=Tensor[(234), uint64] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %507 = %498.0;
  %508 = subtract(%505, %506) /* ty=Tensor[(234), uint64] */;
  (%507, %508)
}

def @func_8942() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %509 = @func_5011() /* ty=(Tensor[(1, 10), bool],) */;
  %510 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %511 = %509.0;
  %512 = %510.0;
  (%511, %512)
}

def @func_6812() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %513 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
  %514 = cast(meta[relay.Constant][20] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %515 = reshape(%514, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %516 = @func_5724(%515) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */;
  %517 = @func_5520() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %518 = %513.0;
  %519 = %516.0;
  %520 = %517.1;
  %521 = @func_5904() /* ty=Tensor[(1, 10), bool] */;
  %522 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  (%518, %519, meta[relay.Constant][20] /* ty=Tensor[(234), float64] */, %520, %521, %522)
}

def @func_9396() -> Tensor[(4, 7, ?), int8] {
  %523 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 7, 1), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 1), float64] */;
  %524 = rsqrt(%523) /* ty=Tensor[(4, 7, 1), float64] */;
  %525 = cast(%524, dtype="float32") /* ty=Tensor[(4, 7, 1), float32] */;
  %526 = asin(%525) /* ty=Tensor[(4, 7, 1), float32] */;
  %527 = cast(%526, dtype="int8") /* ty=Tensor[(4, 7, 1), int8] */;
  %528 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%524, dtype="int8") /* ty=Tensor[(4, 7, 1), int8] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  maximum(%529, %530) /* ty=Tensor[(4, 7, ?), int8] */
}

def @func_2075(%var_2063: Tensor[(11, 7), float32], %var_2064: Tensor[(11, 14), float32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(11, 14), float32]) {
  %531 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %532 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
  %533 = cast(%var_2063, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %534 = cast(%var_2064, dtype="float32") /* ty=Tensor[(11, 14), float32] */;
  %535 = reshape(%533, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float32] */;
  %536 = reshape(%534, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float32] */;
  %537 = %531.0;
  %538 = %532.0;
  %539 = @func_562(%535, %536) /* ty=Tensor[(11, 7, 2), float32] */;
  (%537, %538, %539, %var_2063, %var_2064)
}

def @func_6615() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %540 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %541 = %540.0;
  %542 = @func_5873() /* ty=Tensor[(1, 10), bool] */;
  (%541, %542)
}

def @func_8130() -> (Tensor[(1, 10), bool],) {
  %543 = @func_4786() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %544 = %543.1;
  (%544,)
}

def @func_5011() -> (Tensor[(1, 10), bool],) {
  %545 = @func_4552() /* ty=(Tensor[(1, 10), bool],) */;
  %546 = %545.0;
  (%546,)
}

def @func_7644() -> Tensor[(2, 3, 4), bool] {
  %547 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %548 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 3, 4), bool] */, dtype="bool") /* ty=Tensor[(2, 3, 4), bool] */;
  logical_or(%547, %548) /* ty=Tensor[(2, 3, 4), bool] */
}

def @func_9317() -> (Tensor[(1, 10), bool], int32) {
  %549 = @func_4195() /* ty=(Tensor[(1, 10), bool],) */;
  %550 = @func_8643() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], int32, Tensor[(77), float32], Tensor[(528), int32], Tensor[(360), int64]) */;
  %551 = %549.0;
  %552 = %550.2;
  (%551, %552)
}

def @func_7281(%var_7273: Tensor[(5, 14, 15), float32], %var_7274: Tensor[(5, 14, 15), float32]) -> Tensor[(5, 14, 15), float32] {
  %553 = cast(%var_7274, dtype="float32") /* ty=Tensor[(5, 14, 15), float32] */;
  %554 = shape_of(%var_7273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%var_7273, dtype="float32") /* ty=Tensor[(5, 14, 15), float32] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%555, %556) /* ty=Tensor[(5, 14, 15), float32] */
}

def @func_4619(%var_4554: Tensor[(8, 2, 8), float64], %var_4593: Tensor[(1, 77), float32], %var_4595: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(10, 2, 7), bool], bool, Tensor[(140), bool], Tensor[(8, 2, 8), float32], Tensor[(1, 10), bool], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(234), float64]) {
  %557 = @func_979() /* ty=(Tensor[(1, 10), bool],) */;
  %558 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %559 = cast(meta[relay.Constant][23] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
  %560 = reshape(%558, newshape=[]) /* ty=bool */;
  %561 = reshape(%559, newshape=[10, 2, 7]) /* ty=Tensor[(10, 2, 7), bool] */;
  %562 = cast(%var_4554, dtype="float64") /* ty=Tensor[(8, 2, 8), float64] */;
  %563 = rsqrt(%562) /* ty=Tensor[(8, 2, 8), float64] */;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
  %565 = cast(%var_4593, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
  %566 = cast(meta[relay.Constant][24] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %567 = cast(%var_4595, dtype="float64") /* ty=Tensor[(234), float64] */;
  %568 = reshape(%565, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %569 = reshape(%566, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %570 = reshape(%567, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %571 = @func_1773(%568, %569, %570) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %572 = %557.0;
  %573 = @func_820() /* ty=Tensor[(1, 10), bool] */;
  %574 = @func_3388(%560, %561) /* ty=Tensor[(10, 2, 7), bool] */;
  %575 = atan(%564) /* ty=Tensor[(8, 2, 8), float32] */;
  %576 = %571.4;
  (%572, %573, %574, True /* ty=bool */, meta[relay.Constant][23] /* ty=Tensor[(140), bool] */, %575, %576, %var_4593, meta[relay.Constant][24] /* ty=Tensor[(154), float32] */, %var_4595)
}

def @func_8707() -> Tensor[(1, 10), bool] {
  %577 = @func_6812() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %577.1
}

def @func_4313() -> (Tensor[(1, 10), bool],) {
  %578 = @func_2364() /* ty=Tensor[(1, 10), bool] */;
  (%578,)
}

def @func_2846() -> (Tensor[(1, 10), bool],) {
  %579 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %580 = %579.0;
  (%580,)
}

def @func_9999() -> (Tensor[(1, 10), bool],) {
  %581 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %582 = %581.1;
  (%582,)
}

def @func_9945(%var_9933: Tensor[(192), float32], %var_9942: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(4, 6, 8), float32], Tensor[(192), float32], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) {
  %583 = @func_4195() /* ty=(Tensor[(1, 10), bool],) */;
  %584 = @func_7582() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %585 = cast(%var_9933, dtype="float32") /* ty=Tensor[(192), float32] */;
  %586 = reshape(%585, newshape=[4, 6, 8]) /* ty=Tensor[(4, 6, 8), float32] */;
  %587 = cast(meta[relay.Constant][25] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %588 = cast(%var_9942, dtype="float32") /* ty=Tensor[(154), float32] */;
  %589 = reshape(%587, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %590 = reshape(%588, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %591 = @func_4858(%589, %590) /* ty=(Tensor[(1, 10), bool], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) */;
  %592 = %583.0;
  %593 = %584.3;
  %594 = @func_9035(%586) /* ty=Tensor[(4, 6, 8), float32] */;
  %595 = %591.1;
  (%592, %593, %594, %var_9933, %595, meta[relay.Constant][25] /* ty=Tensor[(77), float32] */, %var_9942)
}

def @func_7365(%var_7347: Tensor[(77, 1), float32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(77, 1), float32], Tensor[(24, 22), int32]) {
  %596 = @func_3428() /* ty=(Tensor[(1, 10), bool],) */;
  %597 = @func_4920() /* ty=(Tensor[(1, 10), bool],) */;
  %598 = @func_6615() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %599 = cast(%var_7347, dtype="float32") /* ty=Tensor[(77, 1), float32] */;
  %600 = cast(meta[relay.Constant][26] /* ty=Tensor[(24, 22), int32] */, dtype="int32") /* ty=Tensor[(24, 22), int32] */;
  %601 = reshape(%599, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %602 = reshape(%600, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %603 = @func_3194(%601, %602) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(528), int32], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(810, 77), int8], Tensor[(810, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(1, 10), bool]) */;
  %604 = %596.0;
  %605 = %597.0;
  %606 = %598.1;
  %607 = %603.8;
  (%604, %605, %606, %607, %var_7347, meta[relay.Constant][26] /* ty=Tensor[(24, 22), int32] */)
}

def @func_9212(%var_9197: Tensor[(234), float64], %var_9204: Tensor[(360), int64]) -> (Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(11, 7), float32], Tensor[(8, 5, 9), int64], Tensor[(360), int64]) {
  %608 = cast(%var_9197, dtype="float64") /* ty=Tensor[(234), float64] */;
  %609 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %610 = reshape(%608, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %611 = reshape(%609, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
  %612 = @func_2621(%610, %611) /* ty=(Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7), float32], Tensor[(154), float32]) */;
  %613 = cast(%var_9204, dtype="int64") /* ty=Tensor[(360), int64] */;
  %614 = cast(%var_9204, dtype="int64") /* ty=Tensor[(360), int64] */;
  %615 = reshape(%613, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %616 = reshape(%614, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %617 = @func_7132() /* ty=Tensor[(1, 10), bool] */;
  %618 = %612.1;
  %619 = @func_190(%615, %616) /* ty=Tensor[(8, 5, 9), int64] */;
  (%617, %618, %var_9197, meta[relay.Constant][27] /* ty=Tensor[(11, 7), float32] */, %619, %var_9204)
}

def @func_5425() -> (Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(1, 77), float32], Tensor[(154), float32]) {
  %620 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %621 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 77), float32] */, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
  %622 = cast(meta[relay.Constant][29] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %623 = reshape(%621, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %624 = reshape(%622, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %625 = @func_4858(%623, %624) /* ty=(Tensor[(1, 10), bool], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) */;
  %626 = %620.1;
  %627 = %625.2;
  (%626, %627, meta[relay.Constant][28] /* ty=Tensor[(1, 77), float32] */, meta[relay.Constant][29] /* ty=Tensor[(154), float32] */)
}

def @func_5970(%var_5939: Tensor[(72), uint16]) -> (Tensor[(1, 10), bool], Tensor[(4, 6, 3), uint32]) {
  %628 = @func_5011() /* ty=(Tensor[(1, 10), bool],) */;
  %629 = cast(%var_5939, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %630 = reshape(%629, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), uint16] */;
  %631 = @func_2755(%630) /* ty=(Tensor[(4, 6, 3), bool], Tensor[(4, 6, 3), float32]) */;
  %632 = %631.1;
  %633 = cast(%var_5939, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%632, dtype="uint32") /* ty=Tensor[(4, 6, 3), uint32] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %637 = %628.0;
  %638 = right_shift(%635, %636) /* ty=Tensor[(4, 6, 3), uint32] */;
  (%637, %638)
}

def @func_5589() -> (Tensor[(1, 10), bool], Tensor[(8, 1, 1), float32], Tensor[(8), float32], Tensor[(4, 6, 3), float32], Tensor[(72), uint16], Tensor[(1, 10), bool]) {
  %639 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %640 = cast(meta[relay.Constant][30] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %641 = reshape(%640, newshape=[8, 1, 1]) /* ty=Tensor[(8, 1, 1), float32] */;
  %642 = cast(meta[relay.Constant][31] /* ty=Tensor[(72), uint16] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %643 = reshape(%642, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), uint16] */;
  %644 = @func_2755(%643) /* ty=(Tensor[(4, 6, 3), bool], Tensor[(4, 6, 3), float32]) */;
  %645 = @func_5299() /* ty=(Tensor[(1, 10), bool],) */;
  %646 = %639.0;
  %647 = @func_3993(%641) /* ty=Tensor[(8, 1, 1), float32] */;
  %648 = %644.1;
  %649 = %645.0;
  (%646, %647, meta[relay.Constant][30] /* ty=Tensor[(8), float32] */, %648, meta[relay.Constant][31] /* ty=Tensor[(72), uint16] */, %649)
}

def @func_2557(%var_2509: Tensor[(1, 77), float32], %var_2510: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(10, 2, 2), float64], float64, Tensor[(40), float64]) {
  %650 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %651 = cast(%var_2509, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
  %652 = cast(%var_2510, dtype="float32") /* ty=Tensor[(154), float32] */;
  %653 = reshape(%651, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
  %654 = reshape(%652, newshape=[11, 14]) /* ty=Tensor[(11, 14), float32] */;
  %655 = @func_2075(%653, %654) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(11, 14), float32]) */;
  %656 = cast(6.08865f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %657 = cast(meta[relay.Constant][32] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %658 = reshape(%656, newshape=[]) /* ty=float64 */;
  %659 = reshape(%657, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float64] */;
  %660 = @func_1926(%658, %659) /* ty=(Tensor[(10, 2, 2), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 2), uint32]) */;
  %661 = %650.1;
  %662 = %655.4;
  %663 = %660.0;
  (%661, %662, %var_2509, %var_2510, %663, 6.08865f64 /* ty=float64 */, meta[relay.Constant][32] /* ty=Tensor[(40), float64] */)
}

def @func_2454() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %664 = @func_820() /* ty=Tensor[(1, 10), bool] */;
  %665 = @func_741() /* ty=Tensor[(1, 10), bool] */;
  (%664, %665)
}

def @func_2289(%var_2271: Tensor[(77), float32], %var_2283: Tensor[(264, 2), int32], %var_2284: Tensor[(360), int64]) -> (Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(11, 7, 2), bool], Tensor[(810, 1), bool], int32, Tensor[(264, 2), int32], Tensor[(360), int64]) {
  %666 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %667 = cast(%var_2271, dtype="float32") /* ty=Tensor[(77), float32] */;
  %668 = cast(meta[relay.Constant][33] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %669 = reshape(%667, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float32] */;
  %670 = reshape(%668, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float32] */;
  %671 = @func_562(%669, %670) /* ty=Tensor[(11, 7, 2), float32] */;
  %672 = cast(meta[relay.Constant][33] /* ty=Tensor[(154), float32] */, dtype="bool") /* ty=Tensor[(154), bool] */;
  %673 = shape_of(%671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%671, dtype="bool") /* ty=Tensor[(11, 7, 2), bool] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %676 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %677 = cast(%var_2283, dtype="int32") /* ty=Tensor[(264, 2), int32] */;
  %678 = cast(%var_2284, dtype="int64") /* ty=Tensor[(360), int64] */;
  %679 = reshape(%676, newshape=[]) /* ty=int32 */;
  %680 = reshape(%677, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), int32] */;
  %681 = reshape(%678, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %682 = @func_1867(%679, %680, %681) /* ty=(Tensor[(11, 12, 4), bool], Tensor[(15, 9, 6), float64], Tensor[(810, 1), bool], Tensor[(360), int64]) */;
  %683 = %666.0;
  %684 = logical_or(%674, %675) /* ty=Tensor[(11, 7, 2), bool] */;
  %685 = %682.2;
  (%683, %var_2271, %684, %685, -2 /* ty=int32 */, %var_2283, %var_2284)
}

def @func_2916(%var_2884: Tensor[(12, 11, 15), int16]) -> (Tensor[(12, 11, 15), int16], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(12, 11, 15), float32]) {
  %686 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 11, 15), int16] */, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %687 = shape_of(%var_2884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%var_2884, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %690 = cast(meta[relay.Constant][35] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %691 = reshape(%690, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %692 = @func_1154(%691) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32], Tensor[(234), float64], Tensor[(1, 10), bool]) */;
  %693 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 11, 15), int16] */, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %694 = shape_of(%var_2884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%var_2884, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %697 = maximum(%695, %696) /* ty=Tensor[(12, 11, 15), int16] */;
  %698 = cast(%var_2884, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%697, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %702 = bitwise_or(%700, %701) /* ty=Tensor[(12, 11, 15), int16] */;
  %703 = cast(%702, dtype="float32") /* ty=Tensor[(12, 11, 15), float32] */;
  %704 = bitwise_and(%688, %689) /* ty=Tensor[(12, 11, 15), int16] */;
  %705 = %692.0;
  %706 = acos(%703) /* ty=Tensor[(12, 11, 15), float32] */;
  (%704, %705, meta[relay.Constant][35] /* ty=Tensor[(234), float64] */, %706)
}

def @func_3993(%var_3988: Tensor[(8, 1, 1), float32]) -> Tensor[(8, 1, 1), float32] {
  %707 = cast(%var_3988, dtype="float32") /* ty=Tensor[(8, 1, 1), float32] */;
  asinh(%707) /* ty=Tensor[(8, 1, 1), float32] */
}

def @func_10169() -> (Tensor[(1, 10), bool],) {
  %708 = @func_7698() /* ty=Tensor[(1, 10), bool] */;
  (%708,)
}

def @func_8479() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %709 = @func_5011() /* ty=(Tensor[(1, 10), bool],) */;
  %710 = %709.0;
  %711 = @func_1790() /* ty=Tensor[(1, 10), bool] */;
  (%710, %711)
}

def @func_562(%var_557: Tensor[(11, 7, 1), float32], %var_558: Tensor[(11, 7, 2), float32]) -> Tensor[(11, 7, 2), float32] {
  %712 = cast(%var_557, dtype="float32") /* ty=Tensor[(11, 7, 1), float32] */;
  %713 = cast(%var_558, dtype="float32") /* ty=Tensor[(11, 7, 2), float32] */;
  mod(%712, %713) /* ty=Tensor[(11, 7, 2), float32] */
}

def @func_6046(%var_6028: Tensor[(10, 15, 9), float32], %var_6033: float64) -> (Tensor[(10, 15, 9), float32], Tensor[(10, 2, 2), uint32], float64, Tensor[(40), float64]) {
  %714 = cast(%var_6028, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
  %715 = cast(%var_6033, dtype="float64") /* ty=float64 */;
  %716 = cast(meta[relay.Constant][36] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %717 = reshape(%715, newshape=[]) /* ty=float64 */;
  %718 = reshape(%716, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float64] */;
  %719 = @func_1926(%717, %718) /* ty=(Tensor[(10, 2, 2), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 2), uint32]) */;
  %720 = sigmoid(%714) /* ty=Tensor[(10, 15, 9), float32] */;
  %721 = %719.2;
  (%720, %721, %var_6033, meta[relay.Constant][36] /* ty=Tensor[(40), float64] */)
}

def @func_1064(%var_1059: Tensor[(77), float32], %var_1060: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(77), float32], Tensor[(154), float32]) {
  %722 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %723 = cast(%var_1059, dtype="float32") /* ty=Tensor[(77), float32] */;
  %724 = cast(%var_1060, dtype="float32") /* ty=Tensor[(154), float32] */;
  %725 = reshape(%723, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float32] */;
  %726 = reshape(%724, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float32] */;
  %727 = %722.0;
  %728 = @func_562(%725, %726) /* ty=Tensor[(11, 7, 2), float32] */;
  (%727, %728, %var_1059, %var_1060)
}

def @func_5873() -> Tensor[(1, 10), bool] {
  %729 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %729.0
}

def @func_9150(%var_9083: Tensor[(154), float32], %var_9116: Tensor[(77), float32], %var_9130: uint64, %var_9131: Tensor[(135), uint64]) -> (Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(15, 9, 1), uint64], uint64, Tensor[(135), uint64], Tensor[(77), float64], Tensor[(234), float64], Tensor[(234), float64]) {
  %730 = cast(%var_9083, dtype="float32") /* ty=Tensor[(154), float32] */;
  %731 = cast(meta[relay.Constant][37] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %732 = reshape(%730, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %733 = reshape(%731, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %734 = @func_6969(%732, %733) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(77), bool]) */;
  %735 = @func_7466() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %736 = cast(%var_9116, dtype="float32") /* ty=Tensor[(77), float32] */;
  %737 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(77), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %738 = cast(meta[relay.Constant][37] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?), float32] */;
  %740 = cast(%var_9130, dtype="uint64") /* ty=uint64 */;
  %741 = cast(%var_9131, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %742 = reshape(%740, newshape=[]) /* ty=uint64 */;
  %743 = reshape(%741, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), uint64] */;
  %744 = cast(meta[relay.Constant][37] /* ty=Tensor[(77), float32] */, dtype="float64") /* ty=Tensor[(77), float64] */;
  %745 = cast(meta[relay.Constant][38] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %746 = reshape(%745, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %747 = @func_1552(%746) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */;
  %748 = @func_7726() /* ty=Tensor[(1, 10), bool] */;
  %749 = %734.1;
  %750 = %735.3;
  %751 = maximum(%738, %739) /* ty=Tensor[(77), float32] */;
  %752 = @func_1822(%742, %743) /* ty=Tensor[(15, 9, 1), uint64] */;
  %753 = cosh(%744) /* ty=Tensor[(77), float64] */;
  %754 = %747.1;
  (%748, %749, %var_9083, %750, %751, %752, %var_9130, %var_9131, %753, %754, meta[relay.Constant][38] /* ty=Tensor[(234), float64] */)
}

def @func_8447(%var_8405: Tensor[(81, 10), bool], %var_8406: Tensor[(360), int64], %var_8412: Tensor[(81, 10), bool]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(15, 9, 6), float64], Tensor[(360), int64], Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(81, 10), float64], Tensor[(81, 10), float32]) {
  %755 = @func_3471() /* ty=(Tensor[(1, 10), bool],) */;
  %756 = @func_6693() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %757 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %758 = cast(%var_8405, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
  %759 = cast(%var_8405, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
  %760 = cast(%var_8406, dtype="int64") /* ty=Tensor[(360), int64] */;
  %761 = reshape(%758, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), bool] */;
  %762 = reshape(%759, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), bool] */;
  %763 = reshape(%760, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %764 = @func_469(%761, %762, %763) /* ty=(Tensor[(8, 5, 9), int64], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8, 5, 9), int64], Tensor[(15, 9, 6), uint16], Tensor[(15, 9, 6), float64]) */;
  %765 = cast(%var_8412, dtype="float32") /* ty=Tensor[(81, 10), float32] */;
  %766 = @func_1512() /* ty=Tensor[(1, 10), bool] */;
  %767 = cast(%766, dtype="bool") /* ty=Tensor[(1, 10), bool] */;
  %768 = cast(%var_8405, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
  %769 = logical_and(%767, %768) /* ty=Tensor[(81, 10), bool] */;
  %770 = cast(%766, dtype="float64") /* ty=Tensor[(1, 10), float64] */;
  %771 = cast(%769, dtype="float64") /* ty=Tensor[(81, 10), float64] */;
  %772 = cast(%var_8412, dtype="float64") /* ty=Tensor[(81, 10), float64] */;
  %773 = shape_of(%var_8405, dtype="int32") /* ty=Tensor[(2), int32] */;
  %774 = cast(%var_8405, dtype="float64") /* ty=Tensor[(81, 10), float64] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %776 = floor_divide(%774, %775) /* ty=Tensor[(81, 10), float64] */;
  %777 = @func_6739() /* ty=(Tensor[(1, 10), bool],) */;
  %778 = %777.0;
  %779 = cast(%776, dtype="float32") /* ty=Tensor[(81, 10), float32] */;
  %780 = cast(%778, dtype="float32") /* ty=Tensor[(1, 10), float32] */;
  %781 = %755.0;
  %782 = %756.1;
  %783 = %757.1;
  %784 = %764.5;
  %785 = @func_5904() /* ty=Tensor[(1, 10), bool] */;
  %786 = atan(%765) /* ty=Tensor[(81, 10), float32] */;
  %787 = multiply(%770, %771) /* ty=Tensor[(81, 10), float64] */;
  %788 = mod(%779, %780) /* ty=Tensor[(81, 10), float32] */;
  (%781, %782, %783, %784, %var_8406, %785, %786, %787, %788)
}

def @func_8555() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %789 = @func_7466() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %790 = @func_1013() /* ty=Tensor[(1, 10), bool] */;
  %791 = %789.1;
  (%790, %791)
}

def @func_8338(%var_8325: Tensor[(234), float64]) -> (Tensor[(10, 15, 2), float32], Tensor[(234), float64], Tensor[(234), float64]) {
  %792 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 15, 2), float32] */, dtype="float32") /* ty=Tensor[(10, 15, 2), float32] */;
  %793 = cast(%var_8325, dtype="float64") /* ty=Tensor[(234), float64] */;
  %794 = reshape(%793, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %795 = @func_1417(%794) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */;
  %796 = log(%792) /* ty=Tensor[(10, 15, 2), float32] */;
  %797 = %795.0;
  (%796, %797, %var_8325)
}

def @func_6664() -> Tensor[(1, 10), bool] {
  %798 = @func_6510() /* ty=(Tensor[(1, 10), bool],) */;
  %798.0
}

def @func_7879(%var_7855: Tensor[(1, 234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 234), float64]) {
  %799 = @func_1736() /* ty=(Tensor[(1, 10), bool],) */;
  %800 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %801 = cast(%var_7855, dtype="float64") /* ty=Tensor[(1, 234), float64] */;
  %802 = cast(%var_7855, dtype="float64") /* ty=Tensor[(1, 234), float64] */;
  %803 = reshape(%801, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %804 = reshape(%802, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %805 = @func_880(%803, %804) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %806 = %799.0;
  %807 = %800.1;
  %808 = %805.0;
  (%806, %807, %808, %var_7855)
}

def @func_8598(%var_8581: Tensor[(936), float32], %var_8591: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(13, 8, 9), bool], Tensor[(936), float32], Tensor[(234), float32]) {
  %809 = cast(%var_8581, dtype="float32") /* ty=Tensor[(936), float32] */;
  %810 = cast(%var_8581, dtype="float32") /* ty=Tensor[(936), float32] */;
  %811 = reshape(%809, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %812 = reshape(%810, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %813 = @func_5479(%811, %812) /* ty=(Tensor[(13, 8, 9), bool],) */;
  %814 = cast(%var_8591, dtype="float64") /* ty=Tensor[(234), float64] */;
  %815 = reshape(%814, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %816 = @func_5724(%815) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */;
  %817 = %816.2;
  %818 = cast(%817, dtype="float32") /* ty=Tensor[(234), float32] */;
  %819 = shape_of(%var_8591, dtype="int32") /* ty=Tensor[(1), int32] */;
  %820 = cast(%var_8591, dtype="float32") /* ty=Tensor[(234), float32] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?), float32] */;
  %822 = @func_3779() /* ty=Tensor[(1, 10), bool] */;
  %823 = %813.0;
  %824 = floor_mod(%820, %821) /* ty=Tensor[(234), float32] */;
  (%822, %823, %var_8581, %824)
}

def @func_8755() -> (Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(810), bool], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8), float32], Tensor[(77, 1), float32], Tensor[(77), float32]) {
  %825 = @func_6812() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %826 = cast(meta[relay.Constant][40] /* ty=Tensor[(810), bool] */, dtype="bool") /* ty=Tensor[(810), bool] */;
  %827 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %828 = cast(meta[relay.Constant][40] /* ty=Tensor[(810), bool] */, dtype="bool") /* ty=Tensor[(810), bool] */;
  %829 = reshape(%826, newshape=[81, 10]) /* ty=Tensor[(81, 10), bool] */;
  %830 = reshape(%827, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %831 = reshape(%828, newshape=[81, 10]) /* ty=Tensor[(81, 10), bool] */;
  %832 = @func_8447(%829, %830, %831) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(15, 9, 6), float64], Tensor[(360), int64], Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(81, 10), float64], Tensor[(81, 10), float32]) */;
  %833 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %834 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %835 = reshape(%833, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %836 = reshape(%834, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %837 = cast(meta[relay.Constant][42] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %838 = reshape(%837, newshape=[77, 1]) /* ty=Tensor[(77, 1), float32] */;
  %839 = @func_7365(%838) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(77, 1), float32], Tensor[(24, 22), int32]) */;
  %840 = %825.0;
  %841 = %832.6;
  %842 = @func_190(%835, %836) /* ty=Tensor[(8, 5, 9), int64] */;
  %843 = @func_7207() /* ty=Tensor[(8), float32] */;
  %844 = %839.4;
  (%840, %841, meta[relay.Constant][40] /* ty=Tensor[(810), bool] */, meta[relay.Constant][41] /* ty=Tensor[(360), int64] */, %842, %843, %844, meta[relay.Constant][42] /* ty=Tensor[(77), float32] */)
}

def @func_469(%var_416: Tensor[(15, 9, 6), bool], %var_417: Tensor[(15, 9, 6), bool], %var_429: Tensor[(360), int64]) -> (Tensor[(8, 5, 9), int64], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8, 5, 9), int64], Tensor[(15, 9, 6), uint16], Tensor[(15, 9, 6), float64]) {
  %845 = cast(%var_429, dtype="int64") /* ty=Tensor[(360), int64] */;
  %846 = cast(%var_429, dtype="int64") /* ty=Tensor[(360), int64] */;
  %847 = reshape(%845, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %848 = reshape(%846, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %849 = @func_190(%847, %848) /* ty=Tensor[(8, 5, 9), int64] */;
  %850 = cast(%849, dtype="int64") /* ty=Tensor[(8, 5, 9), int64] */;
  %851 = cast(%849, dtype="int64") /* ty=Tensor[(8, 5, 9), int64] */;
  %852 = reshape(%850, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %853 = reshape(%851, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %854 = @func_190(%852, %853) /* ty=Tensor[(8, 5, 9), int64] */;
  %855 = cast(%854, dtype="int64") /* ty=Tensor[(8, 5, 9), int64] */;
  %856 = cast(%var_429, dtype="int64") /* ty=Tensor[(360), int64] */;
  %857 = reshape(%855, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %858 = reshape(%856, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %859 = cast(%var_417, dtype="float32") /* ty=Tensor[(15, 9, 6), float32] */;
  %860 = tan(%859) /* ty=Tensor[(15, 9, 6), float32] */;
  %861 = cast(%var_417, dtype="bool") /* ty=Tensor[(15, 9, 6), bool] */;
  %862 = shape_of(%var_416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%var_416, dtype="bool") /* ty=Tensor[(15, 9, 6), bool] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %865 = logical_and(%863, %864) /* ty=Tensor[(15, 9, 6), bool] */;
  %866 = cast(%865, dtype="int16") /* ty=Tensor[(15, 9, 6), int16] */;
  %867 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %868 = cast(%860, dtype="int16") /* ty=Tensor[(15, 9, 6), int16] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %870 = bitwise_or(%868, %869) /* ty=Tensor[(15, 9, 6), int16] */;
  %871 = cast(%860, dtype="uint16") /* ty=Tensor[(15, 9, 6), uint16] */;
  %872 = shape_of(%870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%870, dtype="uint16") /* ty=Tensor[(15, 9, 6), uint16] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %875 = cast(%870, dtype="float64") /* ty=Tensor[(15, 9, 6), float64] */;
  %876 = @func_190(%857, %858) /* ty=Tensor[(8, 5, 9), int64] */;
  %877 = add(%873, %874) /* ty=Tensor[(15, 9, 6), uint16] */;
  %878 = log(%875) /* ty=Tensor[(15, 9, 6), float64] */;
  (%849, %var_429, %854, %876, %877, %878)
}

def @func_7466() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %879 = @func_5520() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %880 = @func_6021() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %881 = @func_6812() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %882 = @func_6615() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %883 = %879.0;
  %884 = %880.2;
  %885 = %881.0;
  %886 = %882.1;
  (%883, %884, %885, %886)
}

def @func_1189(%var_1171: Tensor[(9, 3, 10), int16], %var_1172: Tensor[(9, 3, 10), int16]) -> (Tensor[(9, 3, 10), int16], Tensor[(9, 3, 10), float64]) {
  %887 = cast(%var_1172, dtype="int16") /* ty=Tensor[(9, 3, 10), int16] */;
  %888 = shape_of(%var_1171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(%var_1171, dtype="int16") /* ty=Tensor[(9, 3, 10), int16] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %891 = cast(%var_1172, dtype="float64") /* ty=Tensor[(9, 3, 10), float64] */;
  %892 = minimum(%889, %890) /* ty=Tensor[(9, 3, 10), int16] */;
  %893 = asinh(%891) /* ty=Tensor[(9, 3, 10), float64] */;
  (%892, %893)
}

def @func_1867(%var_1846: int32, %var_1847: Tensor[(11, 12, 4), int32], %var_1855: Tensor[(360), int64]) -> (Tensor[(11, 12, 4), bool], Tensor[(15, 9, 6), float64], Tensor[(810, 1), bool], Tensor[(360), int64]) {
  %894 = cast(%var_1846, dtype="bool") /* ty=bool */;
  %895 = cast(%var_1847, dtype="bool") /* ty=Tensor[(11, 12, 4), bool] */;
  %896 = cast(meta[relay.Constant][43] /* ty=Tensor[(810, 1), bool] */, dtype="bool") /* ty=Tensor[(810, 1), bool] */;
  %897 = cast(meta[relay.Constant][43] /* ty=Tensor[(810, 1), bool] */, dtype="bool") /* ty=Tensor[(810, 1), bool] */;
  %898 = cast(%var_1855, dtype="int64") /* ty=Tensor[(360), int64] */;
  %899 = reshape(%896, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), bool] */;
  %900 = reshape(%897, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), bool] */;
  %901 = reshape(%898, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %902 = @func_469(%899, %900, %901) /* ty=(Tensor[(8, 5, 9), int64], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8, 5, 9), int64], Tensor[(15, 9, 6), uint16], Tensor[(15, 9, 6), float64]) */;
  %903 = greater_equal(%894, %895) /* ty=Tensor[(11, 12, 4), bool] */;
  %904 = %902.5;
  (%903, %904, meta[relay.Constant][43] /* ty=Tensor[(810, 1), bool] */, %var_1855)
}

def @func_4195() -> (Tensor[(1, 10), bool],) {
  %905 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %906 = %905.1;
  (%906,)
}

def @func_6280(%var_6275: Tensor[(140), bool]) -> (Tensor[(?, 11, 8), int32], Tensor[(1, 10), bool], Tensor[(1, 11, 8), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 7), bool], bool, Tensor[(140), bool]) {
  %907 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 11, 8), float32] */, dtype="float32") /* ty=Tensor[(1, 11, 8), float32] */;
  %908 = tan(%907) /* ty=Tensor[(1, 11, 8), float32] */;
  %909 = cast(%908, dtype="int32") /* ty=Tensor[(1, 11, 8), int32] */;
  %910 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(1, 11, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 11, 8), float32] */, dtype="int32") /* ty=Tensor[(1, 11, 8), int32] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %913 = @func_1713() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) */;
  %914 = cast(%908, dtype="float64") /* ty=Tensor[(1, 11, 8), float64] */;
  %915 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %916 = cast(%var_6275, dtype="bool") /* ty=Tensor[(140), bool] */;
  %917 = reshape(%915, newshape=[]) /* ty=bool */;
  %918 = reshape(%916, newshape=[10, 2, 7]) /* ty=Tensor[(10, 2, 7), bool] */;
  %919 = add(%911, %912) /* ty=Tensor[(?, 11, 8), int32] */;
  %920 = %913.0;
  %921 = sqrt(%914) /* ty=Tensor[(1, 11, 8), float64] */;
  %922 = @func_2364() /* ty=Tensor[(1, 10), bool] */;
  %923 = @func_3388(%917, %918) /* ty=Tensor[(10, 2, 7), bool] */;
  (%919, %920, %921, %922, %923, True /* ty=bool */, %var_6275)
}

def @func_7726() -> Tensor[(1, 10), bool] {
  %924 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %924.1
}

def @func_8835(%var_8798: Tensor[(15, 6, 11), float64], %var_8807: Tensor[(77, 1), float32]) -> (Tensor[(15, 6, 11), float64], Tensor[(11, 7, 2), float32], Tensor[(154), float32], Tensor[(4, 6, 3), uint32], Tensor[(72), uint16], Tensor[(1, 10), bool], Tensor[(77, 1), float64]) {
  %925 = cast(%var_8798, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
  %926 = cast(%var_8807, dtype="float32") /* ty=Tensor[(77, 1), float32] */;
  %927 = cast(meta[relay.Constant][45] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %928 = reshape(%926, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %929 = reshape(%927, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %930 = @func_1064(%928, %929) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(77), float32], Tensor[(154), float32]) */;
  %931 = cast(meta[relay.Constant][46] /* ty=Tensor[(72), uint16] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %932 = reshape(%931, newshape=[72]) /* ty=Tensor[(72), uint16] */;
  %933 = @func_5970(%932) /* ty=(Tensor[(1, 10), bool], Tensor[(4, 6, 3), uint32]) */;
  %934 = cast(%var_8807, dtype="float64") /* ty=Tensor[(77, 1), float64] */;
  %935 = acos(%925) /* ty=Tensor[(15, 6, 11), float64] */;
  %936 = %930.1;
  %937 = %933.1;
  %938 = @func_5918() /* ty=Tensor[(1, 10), bool] */;
  %939 = sin(%934) /* ty=Tensor[(77, 1), float64] */;
  (%935, %936, meta[relay.Constant][45] /* ty=Tensor[(154), float32] */, %937, meta[relay.Constant][46] /* ty=Tensor[(72), uint16] */, %938, %939)
}

def @func_9443() -> (Tensor[(1, 10), bool],) {
  %940 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  (%940,)
}

def @func_8185() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %941 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %942 = @func_8130() /* ty=(Tensor[(1, 10), bool],) */;
  %943 = @func_938() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %944 = %941.0;
  %945 = %942.0;
  %946 = %943.0;
  (%944, %945, %946)
}

def @func_880(%var_865: Tensor[(2, 13, 9), float64], %var_872: Tensor[(2, 13, 9), float64]) -> (Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) {
  %947 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %948 = cast(%var_865, dtype="float64") /* ty=Tensor[(2, 13, 9), float64] */;
  %949 = acos(%948) /* ty=Tensor[(2, 13, 9), float64] */;
  %950 = cast(%var_872, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
  %951 = shape_of(%949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %952 = cast(%949, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %954 = %947.0;
  %955 = floor_mod(%952, %953) /* ty=Tensor[(2, 13, 9), float32] */;
  (%954, %955)
}

def @func_938() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %956 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
  %957 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %958 = %956.0;
  %959 = %957.0;
  (%958, %959)
}

def @func_1512() -> Tensor[(1, 10), bool] {
  %960 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
  %960.0
}

def @func_9959() -> (Tensor[(1, 10), bool],) {
  %961 = @func_7132() /* ty=Tensor[(1, 10), bool] */;
  (%961,)
}

def @func_3388(%var_3380: bool, %var_3381: Tensor[(10, 2, 7), bool]) -> Tensor[(10, 2, 7), bool] {
  %962 = cast(%var_3380, dtype="bool") /* ty=bool */;
  %963 = cast(%var_3381, dtype="bool") /* ty=Tensor[(10, 2, 7), bool] */;
  logical_or(%962, %963) /* ty=Tensor[(10, 2, 7), bool] */
}

def @func_8519() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %964 = @func_5192() /* ty=(Tensor[(1, 10), bool],) */;
  %965 = @func_1736() /* ty=(Tensor[(1, 10), bool],) */;
  %966 = %964.0;
  %967 = %965.0;
  (%966, %967)
}

def @func_3428() -> (Tensor[(1, 10), bool],) {
  %968 = @func_3236() /* ty=Tensor[(1, 10), bool] */;
  (%968,)
}

def @func_3656(%var_3564: Tensor[(1, 77), float32]) -> (Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(154), float32], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(14, 77), float32], Tensor[(14, 77), uint8], Tensor[(234), float64], Tensor[(14, 77), float64]) {
  %969 = cast(%var_3564, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
  %970 = cast(meta[relay.Constant][47] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %971 = cast(meta[relay.Constant][48] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %972 = reshape(%969, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %973 = reshape(%970, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %974 = reshape(%971, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %975 = @func_1773(%972, %973, %974) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %976 = @func_1571() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %977 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 77), float32] */, dtype="float32") /* ty=Tensor[(14, 77), float32] */;
  %978 = cast(%var_3564, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
  %979 = cast(%var_3564, dtype="int8") /* ty=Tensor[(1, 77), int8] */;
  %980 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 77), float32] */, dtype="int8") /* ty=Tensor[(14, 77), int8] */;
  %981 = minimum(%979, %980) /* ty=Tensor[(14, 77), int8] */;
  %982 = cast(%981, dtype="float32") /* ty=Tensor[(14, 77), float32] */;
  %983 = log(%982) /* ty=Tensor[(14, 77), float32] */;
  %984 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 77), float32] */, dtype="uint8") /* ty=Tensor[(14, 77), uint8] */;
  %985 = shape_of(%983, dtype="int32") /* ty=Tensor[(2), int32] */;
  %986 = cast(%983, dtype="uint8") /* ty=Tensor[(14, 77), uint8] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %988 = cast(meta[relay.Constant][48] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %989 = reshape(%988, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %990 = @func_1552(%989) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */;
  %991 = cast(%983, dtype="float64") /* ty=Tensor[(14, 77), float64] */;
  %992 = sin(%991) /* ty=Tensor[(14, 77), float64] */;
  %993 = cast(%992, dtype="float64") /* ty=Tensor[(14, 77), float64] */;
  %994 = @func_2364() /* ty=Tensor[(1, 10), bool] */;
  %995 = %975.3;
  %996 = %976.2;
  %997 = multiply(%977, %978) /* ty=Tensor[(14, 77), float32] */;
  %998 = maximum(%986, %987) /* ty=Tensor[(14, 77), uint8] */;
  %999 = %990.1;
  %1000 = asinh(%993) /* ty=Tensor[(14, 77), float64] */;
  (%994, %995, meta[relay.Constant][47] /* ty=Tensor[(154), float32] */, meta[relay.Constant][48] /* ty=Tensor[(234), float64] */, %996, %997, %998, %999, %1000)
}

def @func_4920() -> (Tensor[(1, 10), bool],) {
  %1001 = @func_3706() /* ty=Tensor[(1, 10), bool] */;
  (%1001,)
}

def @func_1736() -> (Tensor[(1, 10), bool],) {
  %1002 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
  %1003 = %1002.0;
  (%1003,)
}

def @func_7582() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %1004 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
  %1005 = @func_3428() /* ty=(Tensor[(1, 10), bool],) */;
  %1006 = @func_2815() /* ty=Tensor[(1, 10), bool] */;
  %1007 = %1004.0;
  %1008 = @func_5873() /* ty=Tensor[(1, 10), bool] */;
  %1009 = %1005.0;
  (%1006, %1007, %1008, %1009)
}

def @func_5724(%var_5716: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) {
  %1010 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1011 = cast(%var_5716, dtype="float64") /* ty=Tensor[(234), float64] */;
  %1012 = reshape(%1011, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %1013 = @func_1417(%1012) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */;
  %1014 = %1013.0;
  %1015 = cast(%1014, dtype="float64") /* ty=Tensor[(234), float64] */;
  %1016 = %1010.0;
  %1017 = tan(%1015) /* ty=Tensor[(234), float64] */;
  (%1016, %var_5716, %1017)
}

def @func_3375(%var_3371: Tensor[(11, 7), float32]) -> (Tensor[(?, 10), uint32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(117, 2), float64], Tensor[(1, 10), bool], float64, Tensor[(11, 7), float32], Tensor[(154, 1), float32]) {
  %1018 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  %1019 = @func_2940() /* ty=(Tensor[(1, 10), bool],) */;
  %1020 = %1019.0;
  %1021 = cast(%1020, dtype="uint32") /* ty=Tensor[(1, 10), uint32] */;
  %1022 = shape_of(%1018, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1023 = cast(%1018, dtype="uint32") /* ty=Tensor[(1, 10), uint32] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1025 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1026 = cast(meta[relay.Constant][50] /* ty=Tensor[(117, 2), float64] */, dtype="float64") /* ty=Tensor[(117, 2), float64] */;
  %1027 = reshape(%1026, newshape=[3, 78]) /* ty=Tensor[(3, 78), float64] */;
  %1028 = @func_1628(%1027) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) */;
  %1029 = @func_938() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1030 = cast(%var_3371, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %1031 = cast(meta[relay.Constant][51] /* ty=Tensor[(154, 1), float32] */, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %1032 = reshape(%1030, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %1033 = reshape(%1031, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1034 = @func_2557(%1032, %1033) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(10, 2, 2), float64], float64, Tensor[(40), float64]) */;
  %1035 = bitwise_or(%1023, %1024) /* ty=Tensor[(?, 10), uint32] */;
  %1036 = %1025.1;
  %1037 = @func_820() /* ty=Tensor[(1, 10), bool] */;
  %1038 = %1028.0;
  %1039 = %1029.1;
  %1040 = %1034.5;
  (%1035, %1036, %1037, %1038, meta[relay.Constant][50] /* ty=Tensor[(117, 2), float64] */, %1039, %1040, %var_3371, meta[relay.Constant][51] /* ty=Tensor[(154, 1), float32] */)
}

def @func_10361(%var_10341: uint64, %var_10342: Tensor[(2, 11, 3), uint64]) -> (Tensor[(2, 11, 3), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %1041 = cast(%var_10341, dtype="bool") /* ty=bool */;
  %1042 = cast(%var_10342, dtype="bool") /* ty=Tensor[(2, 11, 3), bool] */;
  %1043 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1044 = less_equal(%1041, %1042) /* ty=Tensor[(2, 11, 3), bool] */;
  %1045 = %1043.1;
  %1046 = @func_5873() /* ty=Tensor[(1, 10), bool] */;
  (%1044, %1045, %1046)
}

def @func_6913() -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(11, 7), float32], Tensor[(1, 10), bool]) {
  %1047 = @func_6812() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1048 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %1049 = reshape(%1048, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %1050 = @func_3656(%1049) /* ty=(Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(154), float32], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(14, 77), float32], Tensor[(14, 77), uint8], Tensor[(234), float64], Tensor[(14, 77), float64]) */;
  %1051 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %1052 = %1047.4;
  %1053 = %1050.3;
  %1054 = %1051.0;
  (%1052, %1053, meta[relay.Constant][52] /* ty=Tensor[(11, 7), float32] */, %1054)
}

def @func_6362() -> (Tensor[(1, 10), bool],) {
  %1055 = @func_5686() /* ty=Tensor[(1, 10), bool] */;
  (%1055,)
}

def @func_979() -> (Tensor[(1, 10), bool],) {
  %1056 = @func_741() /* ty=Tensor[(1, 10), bool] */;
  (%1056,)
}

def @func_10444() -> Tensor[(1, 10), bool] {
  @func_5603() /* ty=Tensor[(1, 10), bool] */
}

def @func_7011(%var_6982: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64]) {
  %1057 = @func_4313() /* ty=(Tensor[(1, 10), bool],) */;
  %1058 = cast(%var_6982, dtype="float64") /* ty=Tensor[(234), float64] */;
  %1059 = reshape(%1058, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %1060 = @func_1154(%1059) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32], Tensor[(234), float64], Tensor[(1, 10), bool]) */;
  %1061 = %1057.0;
  %1062 = %1060.0;
  (%1061, %1062, %var_6982)
}

def @func_4858(%var_4843: Tensor[(77), float32], %var_4844: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) {
  %1063 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1064 = cast(%var_4843, dtype="float32") /* ty=Tensor[(77), float32] */;
  %1065 = cast(%var_4844, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1066 = reshape(%1064, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %1067 = reshape(%1065, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1068 = @func_2557(%1066, %1067) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(10, 2, 2), float64], float64, Tensor[(40), float64]) */;
  %1069 = %1063.1;
  %1070 = %1068.4;
  (%1069, %1070, %var_4843, %var_4844)
}

def @func_5162() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %1071 = @func_4502() /* ty=(Tensor[(1, 10), bool],) */;
  %1072 = @func_1713() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) */;
  %1073 = %1071.0;
  %1074 = %1072.8;
  (%1073, %1074)
}

def @func_1552(%var_1546: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) {
  %1075 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
  %1076 = cast(%var_1546, dtype="float64") /* ty=Tensor[(234), float64] */;
  %1077 = reshape(%1076, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %1078 = @func_1417(%1077) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */;
  %1079 = %1075.0;
  %1080 = %1078.0;
  (%1079, %1080, %var_1546)
}

def @func_6847(%var_6822: Tensor[(4, 8, 15), float32]) -> Tensor[(4, 8, 15), float32] {
  %1081 = cast(%var_6822, dtype="float32") /* ty=Tensor[(4, 8, 15), float32] */;
  erf(%1081) /* ty=Tensor[(4, 8, 15), float32] */
}

def @func_1417(%var_1399: Tensor[(234), float64]) -> (Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) {
  %1082 = cast(%var_1399, dtype="float64") /* ty=Tensor[(234), float64] */;
  %1083 = reshape(%1082, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %1084 = @func_1154(%1083) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32], Tensor[(234), float64], Tensor[(1, 10), bool]) */;
  %1085 = %1084.3;
  %1086 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  %1087 = cast(%1086, dtype="uint8") /* ty=Tensor[(1, 10), uint8] */;
  %1088 = shape_of(%1085, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1089 = cast(%1085, dtype="uint8") /* ty=Tensor[(1, 10), uint8] */;
  %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1091 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %1092 = multiply(%1089, %1090) /* ty=Tensor[(?, 10), uint8] */;
  %1093 = %1091.0;
  (%var_1399, %1092, %1093)
}

def @func_3236() -> Tensor[(1, 10), bool] {
  %1094 = @func_2940() /* ty=(Tensor[(1, 10), bool],) */;
  %1094.0
}

def @func_7932() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %1095 = @func_3428() /* ty=(Tensor[(1, 10), bool],) */;
  %1096 = @func_5162() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1097 = @func_7726() /* ty=Tensor[(1, 10), bool] */;
  %1098 = %1095.0;
  %1099 = %1096.1;
  (%1097, %1098, %1099)
}

def @func_5479(%var_5453: Tensor[(13, 8, 9), float32], %var_5475: Tensor[(13, 8, 9), float32]) -> (Tensor[(13, 8, 9), bool],) {
  %1100 = cast(%var_5453, dtype="float32") /* ty=Tensor[(13, 8, 9), float32] */;
  %1101 = log10(%1100) /* ty=Tensor[(13, 8, 9), float32] */;
  %1102 = cast(%var_5475, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
  %1103 = shape_of(%1101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(%1101, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1106 = greater_equal(%1104, %1105) /* ty=Tensor[(13, 8, 9), bool] */;
  (%1106,)
}

def @func_9906(%var_9830: Tensor[(10, 6, 11), bool], %var_9831: Tensor[(10, 6, 11), bool], %var_9889: Tensor[(11, 7), float32]) -> (Tensor[(10, 6, 11), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(8), float32], Tensor[(10, 6, 11), int8], Tensor[(24, 22), int32], Tensor[(11, 7), float32], Tensor[(1, 10), bool]) {
  %1107 = cast(%var_9831, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
  %1108 = shape_of(%var_9830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1109 = cast(%var_9830, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
  %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1111 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
  %1112 = @func_8479() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1113 = @func_4195() /* ty=(Tensor[(1, 10), bool],) */;
  %1114 = cast(%var_9830, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
  %1115 = atanh(%1114) /* ty=Tensor[(10, 6, 11), float32] */;
  %1116 = cast(meta[relay.Constant][53] /* ty=Tensor[(10, 6, 11), float32] */, dtype="int8") /* ty=Tensor[(10, 6, 11), int8] */;
  %1117 = shape_of(%1115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1118 = cast(%1115, dtype="int8") /* ty=Tensor[(10, 6, 11), int8] */;
  %1119 = dyn.reshape(%1116, %1117, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1120 = cast(%var_9889, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %1121 = reshape(%1120, newshape=[77, 1]) /* ty=Tensor[(77, 1), float32] */;
  %1122 = @func_7365(%1121) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(77, 1), float32], Tensor[(24, 22), int32]) */;
  %1123 = logical_and(%1109, %1110) /* ty=Tensor[(10, 6, 11), bool] */;
  %1124 = %1111.0;
  %1125 = %1112.1;
  %1126 = %1113.0;
  %1127 = @func_5904() /* ty=Tensor[(1, 10), bool] */;
  %1128 = @func_7207() /* ty=Tensor[(8), float32] */;
  %1129 = add(%1118, %1119) /* ty=Tensor[(10, 6, 11), int8] */;
  %1130 = %1122.5;
  %1131 = @func_5873() /* ty=Tensor[(1, 10), bool] */;
  (%1123, %1124, %1125, %1126, %1127, %1128, %1129, %1130, %var_9889, %1131)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5590() -> (Tensor[(1, 10), bool], Tensor[(8, 1, 1), float32], Tensor[(8), float32], Tensor[(4, 6, 3), float32], Tensor[(72), uint16], Tensor[(1, 10), bool]) {
  %11 = fn () -> (Tensor[(1, 10), bool], Tensor[(8, 1, 1), float32], Tensor[(8), float32], Tensor[(4, 6, 3), float32], Tensor[(72), uint16], Tensor[(1, 10), bool]) {
    %0 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
    %2 = reshape(%1, newshape=[8, 1, 1]) /* ty=Tensor[(8, 1, 1), float32] */;
    %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(72), uint16] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
    %4 = reshape(%3, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), uint16] */;
    %5 = @func_2755(%4) /* ty=(Tensor[(4, 6, 3), bool], Tensor[(4, 6, 3), float32]) */;
    %6 = @func_5299() /* ty=(Tensor[(1, 10), bool],) */;
    %7 = %0.0;
    %8 = @func_3993(%2) /* ty=Tensor[(8, 1, 1), float32] */;
    %9 = %5.1;
    %10 = %6.0;
    (%7, %8, meta[relay.Constant][0] /* ty=Tensor[(8), float32] */, %9, meta[relay.Constant][1] /* ty=Tensor[(72), uint16] */, %10)
  };
  %11() /* ty=(Tensor[(1, 10), bool], Tensor[(8, 1, 1), float32], Tensor[(8), float32], Tensor[(4, 6, 3), float32], Tensor[(72), uint16], Tensor[(1, 10), bool]) */
}

def @func_5164() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_5162() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_8644() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], int32, Tensor[(77), float32], Tensor[(528), int32], Tensor[(360), int64]) {
  %24 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], int32, Tensor[(77), float32], Tensor[(528), int32], Tensor[(360), int64]) {
    %12 = @func_6088() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %13 = @func_1736() /* ty=(Tensor[(1, 10), bool],) */;
    %14 = cast(meta[relay.Constant][2] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
    %15 = cast(meta[relay.Constant][3] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
    %16 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %17 = reshape(%14, newshape=[77]) /* ty=Tensor[(77), float32] */;
    %18 = reshape(%15, newshape=[264, 2]) /* ty=Tensor[(264, 2), int32] */;
    %19 = reshape(%16, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %20 = @func_2289(%17, %18, %19) /* ty=(Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(11, 7, 2), bool], Tensor[(810, 1), bool], int32, Tensor[(264, 2), int32], Tensor[(360), int64]) */;
    %21 = %12.2;
    %22 = %13.0;
    %23 = %20.4;
    (%21, %22, %23, meta[relay.Constant][2] /* ty=Tensor[(77), float32] */, meta[relay.Constant][3] /* ty=Tensor[(528), int32] */, meta[relay.Constant][4] /* ty=Tensor[(360), int64] */)
  };
  %24() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], int32, Tensor[(77), float32], Tensor[(528), int32], Tensor[(360), int64]) */
}

def @func_9050() -> Tensor[(1, 10), bool] {
  %26 = fn () -> Tensor[(1, 10), bool] {
    %25 = @func_6088() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %25.0
  };
  %26() /* ty=Tensor[(1, 10), bool] */
}

def @func_3656(%var_3564: Tensor[(1, 77), float32]) -> (Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(154), float32], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(14, 77), float32], Tensor[(14, 77), uint8], Tensor[(234), float64], Tensor[(14, 77), float64]) {
  %27 = cast(%var_3564, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
  %28 = cast(meta[relay.Constant][5] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %29 = cast(meta[relay.Constant][6] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %30 = reshape(%27, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %31 = reshape(%28, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %32 = reshape(%29, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %33 = @func_1773(%30, %31, %32) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %34 = @func_1571() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %35 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 77), float32] */, dtype="float32") /* ty=Tensor[(14, 77), float32] */;
  %36 = cast(%var_3564, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
  %37 = cast(%var_3564, dtype="int8") /* ty=Tensor[(1, 77), int8] */;
  %38 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 77), float32] */, dtype="int8") /* ty=Tensor[(14, 77), int8] */;
  %39 = minimum(%37, %38) /* ty=Tensor[(14, 77), int8] */;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(14, 77), float32] */;
  %41 = log(%40) /* ty=Tensor[(14, 77), float32] */;
  %42 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 77), float32] */, dtype="uint8") /* ty=Tensor[(14, 77), uint8] */;
  %43 = shape_of(%41, dtype="int32") /* ty=Tensor[(2), int32] */;
  %44 = cast(%41, dtype="uint8") /* ty=Tensor[(14, 77), uint8] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %46 = cast(meta[relay.Constant][6] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %47 = reshape(%46, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %48 = @func_1552(%47) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */;
  %49 = cast(%41, dtype="float64") /* ty=Tensor[(14, 77), float64] */;
  %50 = sin(%49) /* ty=Tensor[(14, 77), float64] */;
  %51 = cast(%50, dtype="float64") /* ty=Tensor[(14, 77), float64] */;
  %52 = @func_2364() /* ty=Tensor[(1, 10), bool] */;
  %53 = %33.3;
  %54 = %34.2;
  %55 = multiply(%35, %36) /* ty=Tensor[(14, 77), float32] */;
  %56 = maximum(%44, %45) /* ty=Tensor[(14, 77), uint8] */;
  %57 = %48.1;
  %58 = asinh(%51) /* ty=Tensor[(14, 77), float64] */;
  (%52, %53, meta[relay.Constant][5] /* ty=Tensor[(154), float32] */, meta[relay.Constant][6] /* ty=Tensor[(234), float64] */, %54, %55, %56, %57, %58)
}

def @func_9212(%var_9197: Tensor[(234), float64], %var_9204: Tensor[(360), int64]) -> (Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(11, 7), float32], Tensor[(8, 5, 9), int64], Tensor[(360), int64]) {
  %59 = cast(%var_9197, dtype="float64") /* ty=Tensor[(234), float64] */;
  %60 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %61 = reshape(%59, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %62 = reshape(%60, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
  %63 = @func_2621(%61, %62) /* ty=(Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7), float32], Tensor[(154), float32]) */;
  %64 = cast(%var_9204, dtype="int64") /* ty=Tensor[(360), int64] */;
  %65 = cast(%var_9204, dtype="int64") /* ty=Tensor[(360), int64] */;
  %66 = reshape(%64, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %67 = reshape(%65, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %68 = @func_7132() /* ty=Tensor[(1, 10), bool] */;
  %69 = %63.1;
  %70 = @func_190(%66, %67) /* ty=Tensor[(8, 5, 9), int64] */;
  (%68, %69, %var_9197, meta[relay.Constant][8] /* ty=Tensor[(11, 7), float32] */, %70, %var_9204)
}

def @func_7646() -> Tensor[(2, 3, 4), bool] {
  @func_7644() /* ty=Tensor[(2, 3, 4), bool] */
}

def @func_3473() -> (Tensor[(1, 10), bool],) {
  @func_3471() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_5904() -> Tensor[(1, 10), bool] {
  @func_3236() /* ty=Tensor[(1, 10), bool] */
}

def @func_7933() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %76 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %71 = @func_3428() /* ty=(Tensor[(1, 10), bool],) */;
    %72 = @func_5162() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %73 = @func_7726() /* ty=Tensor[(1, 10), bool] */;
    %74 = %71.0;
    %75 = %72.1;
    (%73, %74, %75)
  };
  %76() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_7828(%var_7826: Tensor[(11, 7), float32], %var_7827: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(154), float32]) {
  @func_7824(%var_7826, %var_7827) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(154), float32]) */
}

def @func_1514() -> Tensor[(1, 10), bool] {
  @func_1512() /* ty=Tensor[(1, 10), bool] */
}

def @func_8835(%var_8798: Tensor[(15, 6, 11), float64], %var_8807: Tensor[(77, 1), float32]) -> (Tensor[(15, 6, 11), float64], Tensor[(11, 7, 2), float32], Tensor[(154), float32], Tensor[(4, 6, 3), uint32], Tensor[(72), uint16], Tensor[(1, 10), bool], Tensor[(77, 1), float64]) {
  %77 = cast(%var_8798, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
  %78 = cast(%var_8807, dtype="float32") /* ty=Tensor[(77, 1), float32] */;
  %79 = cast(meta[relay.Constant][9] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %80 = reshape(%78, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %81 = reshape(%79, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %82 = @func_1064(%80, %81) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(77), float32], Tensor[(154), float32]) */;
  %83 = cast(meta[relay.Constant][10] /* ty=Tensor[(72), uint16] */, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %84 = reshape(%83, newshape=[72]) /* ty=Tensor[(72), uint16] */;
  %85 = @func_5970(%84) /* ty=(Tensor[(1, 10), bool], Tensor[(4, 6, 3), uint32]) */;
  %86 = cast(%var_8807, dtype="float64") /* ty=Tensor[(77, 1), float64] */;
  %87 = acos(%77) /* ty=Tensor[(15, 6, 11), float64] */;
  %88 = %82.1;
  %89 = %85.1;
  %90 = @func_5918() /* ty=Tensor[(1, 10), bool] */;
  %91 = sin(%86) /* ty=Tensor[(77, 1), float64] */;
  (%87, %88, meta[relay.Constant][9] /* ty=Tensor[(154), float32] */, %89, meta[relay.Constant][10] /* ty=Tensor[(72), uint16] */, %90, %91)
}

def @func_8451(%var_8448: Tensor[(81, 10), bool], %var_8449: Tensor[(360), int64], %var_8450: Tensor[(81, 10), bool]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(15, 9, 6), float64], Tensor[(360), int64], Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(81, 10), float64], Tensor[(81, 10), float32]) {
  %126 = fn (%var_8405: Tensor[(81, 10), bool], %var_8406: Tensor[(360), int64], %var_8412: Tensor[(81, 10), bool]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(15, 9, 6), float64], Tensor[(360), int64], Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(81, 10), float64], Tensor[(81, 10), float32]) {
    %92 = @func_3471() /* ty=(Tensor[(1, 10), bool],) */;
    %93 = @func_6693() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %94 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %95 = cast(%var_8405, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
    %96 = cast(%var_8405, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
    %97 = cast(%var_8406, dtype="int64") /* ty=Tensor[(360), int64] */;
    %98 = reshape(%95, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), bool] */;
    %99 = reshape(%96, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), bool] */;
    %100 = reshape(%97, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %101 = @func_469(%98, %99, %100) /* ty=(Tensor[(8, 5, 9), int64], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8, 5, 9), int64], Tensor[(15, 9, 6), uint16], Tensor[(15, 9, 6), float64]) */;
    %102 = cast(%var_8412, dtype="float32") /* ty=Tensor[(81, 10), float32] */;
    %103 = @func_1512() /* ty=Tensor[(1, 10), bool] */;
    %104 = cast(%103, dtype="bool") /* ty=Tensor[(1, 10), bool] */;
    %105 = cast(%var_8405, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
    %106 = logical_and(%104, %105) /* ty=Tensor[(81, 10), bool] */;
    %107 = cast(%103, dtype="float64") /* ty=Tensor[(1, 10), float64] */;
    %108 = cast(%106, dtype="float64") /* ty=Tensor[(81, 10), float64] */;
    %109 = cast(%var_8412, dtype="float64") /* ty=Tensor[(81, 10), float64] */;
    %110 = shape_of(%var_8405, dtype="int32") /* ty=Tensor[(2), int32] */;
    %111 = cast(%var_8405, dtype="float64") /* ty=Tensor[(81, 10), float64] */;
    %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %113 = floor_divide(%111, %112) /* ty=Tensor[(81, 10), float64] */;
    %114 = @func_6739() /* ty=(Tensor[(1, 10), bool],) */;
    %115 = %114.0;
    %116 = cast(%113, dtype="float32") /* ty=Tensor[(81, 10), float32] */;
    %117 = cast(%115, dtype="float32") /* ty=Tensor[(1, 10), float32] */;
    %118 = %92.0;
    %119 = %93.1;
    %120 = %94.1;
    %121 = %101.5;
    %122 = @func_5904() /* ty=Tensor[(1, 10), bool] */;
    %123 = atan(%102) /* ty=Tensor[(81, 10), float32] */;
    %124 = multiply(%107, %108) /* ty=Tensor[(81, 10), float64] */;
    %125 = mod(%116, %117) /* ty=Tensor[(81, 10), float32] */;
    (%118, %119, %120, %121, %var_8406, %122, %123, %124, %125)
  };
  %126(%var_8448, %var_8449, %var_8450) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(15, 9, 6), float64], Tensor[(360), int64], Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(81, 10), float64], Tensor[(81, 10), float32]) */
}

def @func_9035(%var_9030: Tensor[(4, 6, 8), float32]) -> Tensor[(4, 6, 8), float32] {
  %127 = cast(%var_9030, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
  erf(%127) /* ty=Tensor[(4, 6, 8), float32] */
}

def @func_3375(%var_3371: Tensor[(11, 7), float32]) -> (Tensor[(?, 10), uint32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(117, 2), float64], Tensor[(1, 10), bool], float64, Tensor[(11, 7), float32], Tensor[(154, 1), float32]) {
  %128 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  %129 = @func_2940() /* ty=(Tensor[(1, 10), bool],) */;
  %130 = %129.0;
  %131 = cast(%130, dtype="uint32") /* ty=Tensor[(1, 10), uint32] */;
  %132 = shape_of(%128, dtype="int32") /* ty=Tensor[(2), int32] */;
  %133 = cast(%128, dtype="uint32") /* ty=Tensor[(1, 10), uint32] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %135 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %136 = cast(meta[relay.Constant][11] /* ty=Tensor[(117, 2), float64] */, dtype="float64") /* ty=Tensor[(117, 2), float64] */;
  %137 = reshape(%136, newshape=[3, 78]) /* ty=Tensor[(3, 78), float64] */;
  %138 = @func_1628(%137) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) */;
  %139 = @func_938() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %140 = cast(%var_3371, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %141 = cast(meta[relay.Constant][12] /* ty=Tensor[(154, 1), float32] */, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %142 = reshape(%140, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %143 = reshape(%141, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %144 = @func_2557(%142, %143) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(10, 2, 2), float64], float64, Tensor[(40), float64]) */;
  %145 = bitwise_or(%133, %134) /* ty=Tensor[(?, 10), uint32] */;
  %146 = %135.1;
  %147 = @func_820() /* ty=Tensor[(1, 10), bool] */;
  %148 = %138.0;
  %149 = %139.1;
  %150 = %144.5;
  (%145, %146, %147, %148, meta[relay.Constant][11] /* ty=Tensor[(117, 2), float64] */, %149, %150, %var_3371, meta[relay.Constant][12] /* ty=Tensor[(154, 1), float32] */)
}

def @func_4862(%var_4860: Tensor[(77), float32], %var_4861: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) {
  @func_4858(%var_4860, %var_4861) /* ty=(Tensor[(1, 10), bool], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) */
}

def @func_2177(%var_2175: Tensor[(5, 4, 4), float32]) -> (Tensor[(5, 4, 4), float32], Tensor[(1, 10), bool]) {
  @func_2174(%var_2175) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(1, 10), bool]) */
}

def @func_2456() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_5766() -> Tensor[(1, 10), bool] {
  %151 = fn () -> Tensor[(1, 10), bool] {
    @func_2364() /* ty=Tensor[(1, 10), bool] */
  };
  %151() /* ty=Tensor[(1, 10), bool] */
}

def @func_5643(%var_5641: Tensor[(6, 13, 4), int8], %var_5642: Tensor[(6, 13, 4), int8]) -> (Tensor[(6, 13, 4), int8], Tensor[(1, 10), bool]) {
  %159 = fn (%var_5615: Tensor[(6, 13, 4), int8], %var_5616: Tensor[(6, 13, 4), int8]) -> (Tensor[(6, 13, 4), int8], Tensor[(1, 10), bool]) {
    %152 = cast(%var_5616, dtype="int8") /* ty=Tensor[(6, 13, 4), int8] */;
    %153 = shape_of(%var_5615, dtype="int32") /* ty=Tensor[(3), int32] */;
    %154 = cast(%var_5615, dtype="int8") /* ty=Tensor[(6, 13, 4), int8] */;
    %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %156 = @func_4786() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %157 = add(%154, %155) /* ty=Tensor[(6, 13, 4), int8] */;
    %158 = %156.0;
    (%157, %158)
  };
  %159(%var_5641, %var_5642) /* ty=(Tensor[(6, 13, 4), int8], Tensor[(1, 10), bool]) */
}

def @func_3471() -> (Tensor[(1, 10), bool],) {
  %160 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %161 = %160.0;
  (%161,)
}

def @func_3971() -> Tensor[(1, 10), bool] {
  %163 = fn () -> Tensor[(1, 10), bool] {
    %162 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %162.1
  };
  %163() /* ty=Tensor[(1, 10), bool] */
}

def @func_5299() -> (Tensor[(1, 10), bool],) {
  %164 = @func_4195() /* ty=(Tensor[(1, 10), bool],) */;
  %165 = %164.0;
  (%165,)
}

def @func_8682() -> Tensor[(1, 10), bool] {
  %166 = @func_4649() /* ty=(Tensor[(1, 10), bool],) */;
  %166.0
}

def @func_8602(%var_8600: Tensor[(936), float32], %var_8601: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(13, 8, 9), bool], Tensor[(936), float32], Tensor[(234), float32]) {
  @func_8598(%var_8600, %var_8601) /* ty=(Tensor[(1, 10), bool], Tensor[(13, 8, 9), bool], Tensor[(936), float32], Tensor[(234), float32]) */
}

def @func_1929(%var_1927: float64, %var_1928: Tensor[(10, 2, 2), float64]) -> (Tensor[(10, 2, 2), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 2), uint32]) {
  %175 = fn (%var_1896: float64, %var_1897: Tensor[(10, 2, 2), float64]) -> (Tensor[(10, 2, 2), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 2), uint32]) {
    %167 = cast(%var_1896, dtype="float64") /* ty=float64 */;
    %168 = cast(%var_1897, dtype="float64") /* ty=Tensor[(10, 2, 2), float64] */;
    %169 = @func_1713() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) */;
    %170 = cast(%var_1897, dtype="uint32") /* ty=Tensor[(10, 2, 2), uint32] */;
    %171 = cast(%var_1896, dtype="uint32") /* ty=uint32 */;
    %172 = divide(%167, %168) /* ty=Tensor[(10, 2, 2), float64] */;
    %173 = %169.6;
    %174 = maximum(%170, %171) /* ty=Tensor[(10, 2, 2), uint32] */;
    (%172, %173, %174)
  };
  %175(%var_1927, %var_1928) /* ty=(Tensor[(10, 2, 2), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 2), uint32]) */
}

def @func_9444() -> (Tensor[(1, 10), bool],) {
  %177 = fn () -> (Tensor[(1, 10), bool],) {
    %176 = @func_650() /* ty=Tensor[(1, 10), bool] */;
    (%176,)
  };
  %177() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_9019(%var_9014: Tensor[(8, 14, 9), uint16], %var_9015: Tensor[(8, 14, 9), uint16]) -> (Tensor[(8, 14, 9), uint16],) {
  %178 = cast(%var_9015, dtype="uint16") /* ty=Tensor[(8, 14, 9), uint16] */;
  %179 = shape_of(%var_9014, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(%var_9014, dtype="uint16") /* ty=Tensor[(8, 14, 9), uint16] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %182 = bitwise_and(%180, %181) /* ty=Tensor[(8, 14, 9), uint16] */;
  (%182,)
}

def @func_9334(%var_9326: uint8, %var_9327: Tensor[(2, 14, 8), uint8]) -> Tensor[(2, 14, 8), uint8] {
  %183 = cast(%var_9326, dtype="uint8") /* ty=uint8 */;
  %184 = cast(%var_9327, dtype="uint8") /* ty=Tensor[(2, 14, 8), uint8] */;
  subtract(%183, %184) /* ty=Tensor[(2, 14, 8), uint8] */
}

def @func_1571() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %185 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %186 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %187 = %185.0;
  %188 = %186.0;
  %189 = @func_1013() /* ty=Tensor[(1, 10), bool] */;
  (%187, %188, %189)
}

def @func_6695() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_6693() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_3430() -> (Tensor[(1, 10), bool],) {
  @func_3428() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_4740(%var_4739: Tensor[(6, 14, 13), float64]) -> (Tensor[(1, 10), bool], Tensor[(6, 14, 13), float64]) {
  %199 = fn (%var_4710: Tensor[(6, 14, 13), float64]) -> (Tensor[(1, 10), bool], Tensor[(6, 14, 13), float64]) {
    %190 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
    %191 = cast(%var_4710, dtype="float64") /* ty=Tensor[(6, 14, 13), float64] */;
    %192 = atan(%191) /* ty=Tensor[(6, 14, 13), float64] */;
    %193 = cast(%var_4710, dtype="float64") /* ty=Tensor[(6, 14, 13), float64] */;
    %194 = shape_of(%192, dtype="int32") /* ty=Tensor[(3), int32] */;
    %195 = cast(%192, dtype="float64") /* ty=Tensor[(6, 14, 13), float64] */;
    %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %197 = %190.0;
    %198 = maximum(%195, %196) /* ty=Tensor[(6, 14, 13), float64] */;
    (%197, %198)
  };
  %199(%var_4739) /* ty=(Tensor[(1, 10), bool], Tensor[(6, 14, 13), float64]) */
}

def @func_3996(%var_3994: Tensor[(8, 1, 1), float32]) -> Tensor[(8, 1, 1), float32] {
  @func_3993(%var_3994) /* ty=Tensor[(8, 1, 1), float32] */
}

def @func_4461(%var_4460: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32],) {
  %205 = fn (%var_4445: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32],) {
    %200 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 16, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
    %201 = shape_of(%var_4445, dtype="int32") /* ty=Tensor[(3), int32] */;
    %202 = cast(%var_4445, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
    %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %204 = multiply(%202, %203) /* ty=Tensor[(12, 16, 12), float32] */;
    (%204,)
  };
  %205(%var_4460) /* ty=(Tensor[(12, 16, 12), float32],) */
}

def @func_5162() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %206 = @func_4502() /* ty=(Tensor[(1, 10), bool],) */;
  %207 = @func_1713() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) */;
  %208 = %206.0;
  %209 = %207.8;
  (%208, %209)
}

def @func_7335(%var_7333: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), uint64]) {
  @func_7332(%var_7333) /* ty=(Tensor[(1, 10), bool], Tensor[(234), uint64]) */
}

def @func_6049(%var_6047: Tensor[(10, 15, 9), float32], %var_6048: float64) -> (Tensor[(10, 15, 9), float32], Tensor[(10, 2, 2), uint32], float64, Tensor[(40), float64]) {
  %218 = fn (%var_6028: Tensor[(10, 15, 9), float32], %var_6033: float64) -> (Tensor[(10, 15, 9), float32], Tensor[(10, 2, 2), uint32], float64, Tensor[(40), float64]) {
    %210 = cast(%var_6028, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
    %211 = cast(%var_6033, dtype="float64") /* ty=float64 */;
    %212 = cast(meta[relay.Constant][14] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %213 = reshape(%211, newshape=[]) /* ty=float64 */;
    %214 = reshape(%212, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float64] */;
    %215 = @func_1926(%213, %214) /* ty=(Tensor[(10, 2, 2), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 2), uint32]) */;
    %216 = sigmoid(%210) /* ty=Tensor[(10, 15, 9), float32] */;
    %217 = %215.2;
    (%216, %217, %var_6033, meta[relay.Constant][14] /* ty=Tensor[(40), float64] */)
  };
  %218(%var_6047, %var_6048) /* ty=(Tensor[(10, 15, 9), float32], Tensor[(10, 2, 2), uint32], float64, Tensor[(40), float64]) */
}

def @func_6666() -> Tensor[(1, 10), bool] {
  @func_6664() /* ty=Tensor[(1, 10), bool] */
}

def @func_2139(%var_2138: Tensor[(39, 6), float64]) -> (Tensor[(1, 10), bool], float64, Tensor[(1, 10), bool], Tensor[(39, 6), float64], Tensor[(2, 13, 9), float32], Tensor[(10, 2, 2), bool]) {
  %247 = fn (%var_2111: Tensor[(39, 6), float64]) -> (Tensor[(1, 10), bool], float64, Tensor[(1, 10), bool], Tensor[(39, 6), float64], Tensor[(2, 13, 9), float32], Tensor[(10, 2, 2), bool]) {
    %219 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %220 = cast(%var_2111, dtype="float64") /* ty=Tensor[(39, 6), float64] */;
    %221 = reshape(%220, newshape=[3, 78]) /* ty=Tensor[(3, 78), float64] */;
    %222 = @func_1628(%221) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) */;
    %223 = cast(%var_2111, dtype="float64") /* ty=Tensor[(39, 6), float64] */;
    %224 = cast(%var_2111, dtype="float64") /* ty=Tensor[(39, 6), float64] */;
    %225 = reshape(%223, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
    %226 = reshape(%224, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
    %227 = @func_880(%225, %226) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
    %228 = cast(-4.75179f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %229 = cast(meta[relay.Constant][15] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %230 = reshape(%228, newshape=[]) /* ty=float64 */;
    %231 = reshape(%229, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float64] */;
    %232 = @func_1926(%230, %231) /* ty=(Tensor[(10, 2, 2), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 2), uint32]) */;
    %233 = %232.2;
    %234 = cast(meta[relay.Constant][15] /* ty=Tensor[(40), float64] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %235 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
    %236 = cast(%233, dtype="float32") /* ty=Tensor[(10, 2, 2), float32] */;
    %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %238 = floor_divide(%236, %237) /* ty=Tensor[(10, 2, 2), float32] */;
    %239 = cast(%233, dtype="bool") /* ty=Tensor[(10, 2, 2), bool] */;
    %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
    %241 = cast(%238, dtype="bool") /* ty=Tensor[(10, 2, 2), bool] */;
    %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %243 = %219.1;
    %244 = %222.1;
    %245 = %227.1;
    %246 = greater_equal(%241, %242) /* ty=Tensor[(10, 2, 2), bool] */;
    (%243, -4.75179f64 /* ty=float64 */, %244, %var_2111, %245, %246)
  };
  %247(%var_2138) /* ty=(Tensor[(1, 10), bool], float64, Tensor[(1, 10), bool], Tensor[(39, 6), float64], Tensor[(2, 13, 9), float32], Tensor[(10, 2, 2), bool]) */
}

def @func_1871(%var_1868: int32, %var_1869: Tensor[(11, 12, 4), int32], %var_1870: Tensor[(360), int64]) -> (Tensor[(11, 12, 4), bool], Tensor[(15, 9, 6), float64], Tensor[(810, 1), bool], Tensor[(360), int64]) {
  %259 = fn (%var_1846: int32, %var_1847: Tensor[(11, 12, 4), int32], %var_1855: Tensor[(360), int64]) -> (Tensor[(11, 12, 4), bool], Tensor[(15, 9, 6), float64], Tensor[(810, 1), bool], Tensor[(360), int64]) {
    %248 = cast(%var_1846, dtype="bool") /* ty=bool */;
    %249 = cast(%var_1847, dtype="bool") /* ty=Tensor[(11, 12, 4), bool] */;
    %250 = cast(meta[relay.Constant][16] /* ty=Tensor[(810, 1), bool] */, dtype="bool") /* ty=Tensor[(810, 1), bool] */;
    %251 = cast(meta[relay.Constant][16] /* ty=Tensor[(810, 1), bool] */, dtype="bool") /* ty=Tensor[(810, 1), bool] */;
    %252 = cast(%var_1855, dtype="int64") /* ty=Tensor[(360), int64] */;
    %253 = reshape(%250, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), bool] */;
    %254 = reshape(%251, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), bool] */;
    %255 = reshape(%252, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %256 = @func_469(%253, %254, %255) /* ty=(Tensor[(8, 5, 9), int64], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8, 5, 9), int64], Tensor[(15, 9, 6), uint16], Tensor[(15, 9, 6), float64]) */;
    %257 = greater_equal(%248, %249) /* ty=Tensor[(11, 12, 4), bool] */;
    %258 = %256.5;
    (%257, %258, meta[relay.Constant][16] /* ty=Tensor[(810, 1), bool] */, %var_1855)
  };
  %259(%var_1868, %var_1869, %var_1870) /* ty=(Tensor[(11, 12, 4), bool], Tensor[(15, 9, 6), float64], Tensor[(810, 1), bool], Tensor[(360), int64]) */
}

def @func_2940() -> (Tensor[(1, 10), bool],) {
  %260 = @func_2846() /* ty=(Tensor[(1, 10), bool],) */;
  %261 = %260.0;
  (%261,)
}

def @func_4197() -> (Tensor[(1, 10), bool],) {
  @func_4195() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_7013(%var_7012: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64]) {
  %268 = fn (%var_6982: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64]) {
    %262 = @func_4313() /* ty=(Tensor[(1, 10), bool],) */;
    %263 = cast(%var_6982, dtype="float64") /* ty=Tensor[(234), float64] */;
    %264 = reshape(%263, newshape=[234]) /* ty=Tensor[(234), float64] */;
    %265 = @func_1154(%264) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32], Tensor[(234), float64], Tensor[(1, 10), bool]) */;
    %266 = %262.0;
    %267 = %265.0;
    (%266, %267, %var_6982)
  };
  %268(%var_7012) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64]) */
}

def @func_6914() -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(11, 7), float32], Tensor[(1, 10), bool]) {
  %277 = fn () -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(11, 7), float32], Tensor[(1, 10), bool]) {
    %269 = @func_6812() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %270 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
    %271 = reshape(%270, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
    %272 = @func_3656(%271) /* ty=(Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(154), float32], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(14, 77), float32], Tensor[(14, 77), uint8], Tensor[(234), float64], Tensor[(14, 77), float64]) */;
    %273 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
    %274 = %269.4;
    %275 = %272.3;
    %276 = %273.0;
    (%274, %275, meta[relay.Constant][17] /* ty=Tensor[(11, 7), float32] */, %276)
  };
  %277() /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(11, 7), float32], Tensor[(1, 10), bool]) */
}

def @func_10338() -> Tensor[(1, 10), bool] {
  %279 = fn () -> Tensor[(1, 10), bool] {
    %278 = @func_4502() /* ty=(Tensor[(1, 10), bool],) */;
    %278.0
  };
  %279() /* ty=Tensor[(1, 10), bool] */
}

def @func_4393(%var_4392: Tensor[(77), float32]) -> (Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(234), float64], Tensor[(77), float32]) {
  %287 = fn (%var_4389: Tensor[(77), float32]) -> (Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(234), float64], Tensor[(77), float32]) {
    %280 = cast(meta[relay.Constant][18] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
    %281 = cast(%var_4389, dtype="float32") /* ty=Tensor[(77), float32] */;
    %282 = reshape(%280, newshape=[234]) /* ty=Tensor[(234), float64] */;
    %283 = reshape(%281, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
    %284 = @func_2621(%282, %283) /* ty=(Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7), float32], Tensor[(154), float32]) */;
    %285 = @func_1013() /* ty=Tensor[(1, 10), bool] */;
    %286 = %284.6;
    (%285, %286, meta[relay.Constant][18] /* ty=Tensor[(234), float64] */, %var_4389)
  };
  %287(%var_4392) /* ty=(Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(234), float64], Tensor[(77), float32]) */
}

def @func_1189(%var_1171: Tensor[(9, 3, 10), int16], %var_1172: Tensor[(9, 3, 10), int16]) -> (Tensor[(9, 3, 10), int16], Tensor[(9, 3, 10), float64]) {
  %288 = cast(%var_1172, dtype="int16") /* ty=Tensor[(9, 3, 10), int16] */;
  %289 = shape_of(%var_1171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%var_1171, dtype="int16") /* ty=Tensor[(9, 3, 10), int16] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %292 = cast(%var_1172, dtype="float64") /* ty=Tensor[(9, 3, 10), float64] */;
  %293 = minimum(%290, %291) /* ty=Tensor[(9, 3, 10), int16] */;
  %294 = asinh(%292) /* ty=Tensor[(9, 3, 10), float64] */;
  (%293, %294)
}

def @func_6739() -> (Tensor[(1, 10), bool],) {
  %295 = @func_5192() /* ty=(Tensor[(1, 10), bool],) */;
  %296 = %295.0;
  (%296,)
}

def @func_8131() -> (Tensor[(1, 10), bool],) {
  %299 = fn () -> (Tensor[(1, 10), bool],) {
    %297 = @func_4786() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %298 = %297.1;
    (%298,)
  };
  %299() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_1336() -> (Tensor[(1, 10), bool],) {
  @func_1334() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_5873() -> Tensor[(1, 10), bool] {
  %300 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %300.0
}

def @func_9828(%var_9826: Tensor[(77), float32], %var_9827: Tensor[(154), float32]) -> (Tensor[(360), int64], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_9824(%var_9826, %var_9827) /* ty=(Tensor[(360), int64], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_9246(%var_9245: Tensor[(1008), uint16]) -> (Tensor[(8), float32], Tensor[(8, 14, 9), uint16], Tensor[(1008), uint16]) {
  %308 = fn (%var_9229: Tensor[(1008), uint16]) -> (Tensor[(8), float32], Tensor[(8, 14, 9), uint16], Tensor[(1008), uint16]) {
    %301 = cast(%var_9229, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %302 = cast(%var_9229, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
    %303 = reshape(%301, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), uint16] */;
    %304 = reshape(%302, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), uint16] */;
    %305 = @func_9019(%303, %304) /* ty=(Tensor[(8, 14, 9), uint16],) */;
    %306 = @func_7207() /* ty=Tensor[(8), float32] */;
    %307 = %305.0;
    (%306, %307, %var_9229)
  };
  %308(%var_9245) /* ty=(Tensor[(8), float32], Tensor[(8, 14, 9), uint16], Tensor[(1008), uint16]) */
}

def @func_8839(%var_8837: Tensor[(15, 6, 11), float64], %var_8838: Tensor[(77, 1), float32]) -> (Tensor[(15, 6, 11), float64], Tensor[(11, 7, 2), float32], Tensor[(154), float32], Tensor[(4, 6, 3), uint32], Tensor[(72), uint16], Tensor[(1, 10), bool], Tensor[(77, 1), float64]) {
  @func_8835(%var_8837, %var_8838) /* ty=(Tensor[(15, 6, 11), float64], Tensor[(11, 7, 2), float32], Tensor[(154), float32], Tensor[(4, 6, 3), uint32], Tensor[(72), uint16], Tensor[(1, 10), bool], Tensor[(77, 1), float64]) */
}

def @func_9038(%var_9036: Tensor[(4, 6, 8), float32]) -> Tensor[(4, 6, 8), float32] {
  @func_9035(%var_9036) /* ty=Tensor[(4, 6, 8), float32] */
}

def @func_6510() -> (Tensor[(1, 10), bool],) {
  %309 = @func_4502() /* ty=(Tensor[(1, 10), bool],) */;
  %310 = %309.0;
  (%310,)
}

def @func_7879(%var_7855: Tensor[(1, 234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 234), float64]) {
  %311 = @func_1736() /* ty=(Tensor[(1, 10), bool],) */;
  %312 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %313 = cast(%var_7855, dtype="float64") /* ty=Tensor[(1, 234), float64] */;
  %314 = cast(%var_7855, dtype="float64") /* ty=Tensor[(1, 234), float64] */;
  %315 = reshape(%313, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %316 = reshape(%314, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %317 = @func_880(%315, %316) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %318 = %311.0;
  %319 = %312.1;
  %320 = %317.0;
  (%318, %319, %320, %var_7855)
}

def @func_193(%var_191: Tensor[(8, 5, 9), int64], %var_192: Tensor[(8, 5, 9), int64]) -> Tensor[(8, 5, 9), int64] {
  %325 = fn (%var_184: Tensor[(8, 5, 9), int64], %var_185: Tensor[(8, 5, 9), int64]) -> Tensor[(8, 5, 9), int64] {
    %321 = cast(%var_185, dtype="int64") /* ty=Tensor[(8, 5, 9), int64] */;
    %322 = shape_of(%var_184, dtype="int32") /* ty=Tensor[(3), int32] */;
    %323 = cast(%var_184, dtype="int64") /* ty=Tensor[(8, 5, 9), int64] */;
    %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    subtract(%323, %324) /* ty=Tensor[(8, 5, 9), int64] */
  };
  %325(%var_191, %var_192) /* ty=Tensor[(8, 5, 9), int64] */
}

def @func_1156(%var_1155: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32], Tensor[(234), float64], Tensor[(1, 10), bool]) {
  %340 = fn (%var_1132: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32], Tensor[(234), float64], Tensor[(1, 10), bool]) {
    %326 = @func_979() /* ty=(Tensor[(1, 10), bool],) */;
    %327 = cast(%var_1132, dtype="float64") /* ty=Tensor[(234), float64] */;
    %328 = cast(%var_1132, dtype="float64") /* ty=Tensor[(234), float64] */;
    %329 = reshape(%327, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
    %330 = reshape(%328, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
    %331 = @func_880(%329, %330) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
    %332 = cast(%var_1132, dtype="float64") /* ty=Tensor[(234), float64] */;
    %333 = %331.1;
    %334 = cast(%333, dtype="float64") /* ty=Tensor[(2, 13, 9), float64] */;
    %335 = reshape(%332, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
    %336 = reshape(%334, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
    %337 = @func_880(%335, %336) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
    %338 = %326.0;
    %339 = %337.0;
    (%338, %333, %var_1132, %339)
  };
  %340(%var_1155) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32], Tensor[(234), float64], Tensor[(1, 10), bool]) */
}

def @func_5603() -> Tensor[(1, 10), bool] {
  @func_820() /* ty=Tensor[(1, 10), bool] */
}

def @func_3392(%var_3390: bool, %var_3391: Tensor[(10, 2, 7), bool]) -> Tensor[(10, 2, 7), bool] {
  @func_3388(%var_3390, %var_3391) /* ty=Tensor[(10, 2, 7), bool] */
}

def @func_3659(%var_3657: Tensor[(1, 77), float32]) -> (Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(154), float32], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(14, 77), float32], Tensor[(14, 77), uint8], Tensor[(234), float64], Tensor[(14, 77), float64]) {
  @func_3656(%var_3657) /* ty=(Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(154), float32], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(14, 77), float32], Tensor[(14, 77), uint8], Tensor[(234), float64], Tensor[(14, 77), float64]) */
}

def @func_10209() -> Tensor[(1, 10), bool] {
  %342 = fn () -> Tensor[(1, 10), bool] {
    %341 = @func_4786() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %341.1
  };
  %342() /* ty=Tensor[(1, 10), bool] */
}

def @func_10445() -> Tensor[(1, 10), bool] {
  %343 = fn () -> Tensor[(1, 10), bool] {
    @func_5603() /* ty=Tensor[(1, 10), bool] */
  };
  %343() /* ty=Tensor[(1, 10), bool] */
}

def @func_473(%var_470: Tensor[(15, 9, 6), bool], %var_471: Tensor[(15, 9, 6), bool], %var_472: Tensor[(360), int64]) -> (Tensor[(8, 5, 9), int64], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8, 5, 9), int64], Tensor[(15, 9, 6), uint16], Tensor[(15, 9, 6), float64]) {
  %378 = fn (%var_416: Tensor[(15, 9, 6), bool], %var_417: Tensor[(15, 9, 6), bool], %var_429: Tensor[(360), int64]) -> (Tensor[(8, 5, 9), int64], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8, 5, 9), int64], Tensor[(15, 9, 6), uint16], Tensor[(15, 9, 6), float64]) {
    %344 = cast(%var_429, dtype="int64") /* ty=Tensor[(360), int64] */;
    %345 = cast(%var_429, dtype="int64") /* ty=Tensor[(360), int64] */;
    %346 = reshape(%344, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
    %347 = reshape(%345, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
    %348 = @func_190(%346, %347) /* ty=Tensor[(8, 5, 9), int64] */;
    %349 = cast(%348, dtype="int64") /* ty=Tensor[(8, 5, 9), int64] */;
    %350 = cast(%348, dtype="int64") /* ty=Tensor[(8, 5, 9), int64] */;
    %351 = reshape(%349, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
    %352 = reshape(%350, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
    %353 = @func_190(%351, %352) /* ty=Tensor[(8, 5, 9), int64] */;
    %354 = cast(%353, dtype="int64") /* ty=Tensor[(8, 5, 9), int64] */;
    %355 = cast(%var_429, dtype="int64") /* ty=Tensor[(360), int64] */;
    %356 = reshape(%354, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
    %357 = reshape(%355, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
    %358 = cast(%var_417, dtype="float32") /* ty=Tensor[(15, 9, 6), float32] */;
    %359 = tan(%358) /* ty=Tensor[(15, 9, 6), float32] */;
    %360 = cast(%var_417, dtype="bool") /* ty=Tensor[(15, 9, 6), bool] */;
    %361 = shape_of(%var_416, dtype="int32") /* ty=Tensor[(3), int32] */;
    %362 = cast(%var_416, dtype="bool") /* ty=Tensor[(15, 9, 6), bool] */;
    %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %364 = logical_and(%362, %363) /* ty=Tensor[(15, 9, 6), bool] */;
    %365 = cast(%364, dtype="int16") /* ty=Tensor[(15, 9, 6), int16] */;
    %366 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
    %367 = cast(%359, dtype="int16") /* ty=Tensor[(15, 9, 6), int16] */;
    %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %369 = bitwise_or(%367, %368) /* ty=Tensor[(15, 9, 6), int16] */;
    %370 = cast(%359, dtype="uint16") /* ty=Tensor[(15, 9, 6), uint16] */;
    %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
    %372 = cast(%369, dtype="uint16") /* ty=Tensor[(15, 9, 6), uint16] */;
    %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %374 = cast(%369, dtype="float64") /* ty=Tensor[(15, 9, 6), float64] */;
    %375 = @func_190(%356, %357) /* ty=Tensor[(8, 5, 9), int64] */;
    %376 = add(%372, %373) /* ty=Tensor[(15, 9, 6), uint16] */;
    %377 = log(%374) /* ty=Tensor[(15, 9, 6), float64] */;
    (%348, %var_429, %353, %375, %376, %377)
  };
  %378(%var_470, %var_471, %var_472) /* ty=(Tensor[(8, 5, 9), int64], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8, 5, 9), int64], Tensor[(15, 9, 6), uint16], Tensor[(15, 9, 6), float64]) */
}

def @func_4623(%var_4620: Tensor[(8, 2, 8), float64], %var_4621: Tensor[(1, 77), float32], %var_4622: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(10, 2, 7), bool], bool, Tensor[(140), bool], Tensor[(8, 2, 8), float32], Tensor[(1, 10), bool], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(234), float64]) {
  %399 = fn (%var_4554: Tensor[(8, 2, 8), float64], %var_4593: Tensor[(1, 77), float32], %var_4595: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(10, 2, 7), bool], bool, Tensor[(140), bool], Tensor[(8, 2, 8), float32], Tensor[(1, 10), bool], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(234), float64]) {
    %379 = @func_979() /* ty=(Tensor[(1, 10), bool],) */;
    %380 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %381 = cast(meta[relay.Constant][19] /* ty=Tensor[(140), bool] */, dtype="bool") /* ty=Tensor[(140), bool] */;
    %382 = reshape(%380, newshape=[]) /* ty=bool */;
    %383 = reshape(%381, newshape=[10, 2, 7]) /* ty=Tensor[(10, 2, 7), bool] */;
    %384 = cast(%var_4554, dtype="float64") /* ty=Tensor[(8, 2, 8), float64] */;
    %385 = rsqrt(%384) /* ty=Tensor[(8, 2, 8), float64] */;
    %386 = cast(%385, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
    %387 = cast(%var_4593, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
    %388 = cast(meta[relay.Constant][20] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %389 = cast(%var_4595, dtype="float64") /* ty=Tensor[(234), float64] */;
    %390 = reshape(%387, newshape=[77]) /* ty=Tensor[(77), float32] */;
    %391 = reshape(%388, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %392 = reshape(%389, newshape=[234]) /* ty=Tensor[(234), float64] */;
    %393 = @func_1773(%390, %391, %392) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
    %394 = %379.0;
    %395 = @func_820() /* ty=Tensor[(1, 10), bool] */;
    %396 = @func_3388(%382, %383) /* ty=Tensor[(10, 2, 7), bool] */;
    %397 = atan(%386) /* ty=Tensor[(8, 2, 8), float32] */;
    %398 = %393.4;
    (%394, %395, %396, True /* ty=bool */, meta[relay.Constant][19] /* ty=Tensor[(140), bool] */, %397, %398, %var_4593, meta[relay.Constant][20] /* ty=Tensor[(154), float32] */, %var_4595)
  };
  %399(%var_4620, %var_4621, %var_4622) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(10, 2, 7), bool], bool, Tensor[(140), bool], Tensor[(8, 2, 8), float32], Tensor[(1, 10), bool], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(234), float64]) */
}

def @func_4786() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %400 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %401 = @func_3236() /* ty=Tensor[(1, 10), bool] */;
  %402 = %400.1;
  (%401, %402)
}

def @func_6282(%var_6281: Tensor[(140), bool]) -> (Tensor[(?, 11, 8), int32], Tensor[(1, 10), bool], Tensor[(1, 11, 8), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 7), bool], bool, Tensor[(140), bool]) {
  %420 = fn (%var_6275: Tensor[(140), bool]) -> (Tensor[(?, 11, 8), int32], Tensor[(1, 10), bool], Tensor[(1, 11, 8), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 7), bool], bool, Tensor[(140), bool]) {
    %403 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 11, 8), float32] */, dtype="float32") /* ty=Tensor[(1, 11, 8), float32] */;
    %404 = tan(%403) /* ty=Tensor[(1, 11, 8), float32] */;
    %405 = cast(%404, dtype="int32") /* ty=Tensor[(1, 11, 8), int32] */;
    %406 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(1, 11, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %407 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 11, 8), float32] */, dtype="int32") /* ty=Tensor[(1, 11, 8), int32] */;
    %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %409 = @func_1713() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) */;
    %410 = cast(%404, dtype="float64") /* ty=Tensor[(1, 11, 8), float64] */;
    %411 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %412 = cast(%var_6275, dtype="bool") /* ty=Tensor[(140), bool] */;
    %413 = reshape(%411, newshape=[]) /* ty=bool */;
    %414 = reshape(%412, newshape=[10, 2, 7]) /* ty=Tensor[(10, 2, 7), bool] */;
    %415 = add(%407, %408) /* ty=Tensor[(?, 11, 8), int32] */;
    %416 = %409.0;
    %417 = sqrt(%410) /* ty=Tensor[(1, 11, 8), float64] */;
    %418 = @func_2364() /* ty=Tensor[(1, 10), bool] */;
    %419 = @func_3388(%413, %414) /* ty=Tensor[(10, 2, 7), bool] */;
    (%415, %416, %417, %418, %419, True /* ty=bool */, %var_6275)
  };
  %420(%var_6281) /* ty=(Tensor[(?, 11, 8), int32], Tensor[(1, 10), bool], Tensor[(1, 11, 8), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 7), bool], bool, Tensor[(140), bool]) */
}

def @func_2294(%var_2291: Tensor[(77), float32], %var_2292: Tensor[(264, 2), int32], %var_2293: Tensor[(360), int64]) -> (Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(11, 7, 2), bool], Tensor[(810, 1), bool], int32, Tensor[(264, 2), int32], Tensor[(360), int64]) {
  @func_2289(%var_2291, %var_2292, %var_2293) /* ty=(Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(11, 7, 2), bool], Tensor[(810, 1), bool], int32, Tensor[(264, 2), int32], Tensor[(360), int64]) */
}

def @func_6089() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %425 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %421 = @func_4649() /* ty=(Tensor[(1, 10), bool],) */;
    %422 = %421.0;
    %423 = @func_820() /* ty=Tensor[(1, 10), bool] */;
    %424 = @func_820() /* ty=Tensor[(1, 10), bool] */;
    (%422, %423, %424)
  };
  %425() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_2174(%var_2143: Tensor[(5, 4, 4), float32]) -> (Tensor[(5, 4, 4), float32], Tensor[(1, 10), bool]) {
  %426 = cast(%var_2143, dtype="float32") /* ty=Tensor[(5, 4, 4), float32] */;
  %427 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %428 = sinh(%426) /* ty=Tensor[(5, 4, 4), float32] */;
  %429 = %427.1;
  (%428, %429)
}

def @func_2079(%var_2077: Tensor[(11, 7), float32], %var_2078: Tensor[(11, 14), float32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(11, 14), float32]) {
  @func_2075(%var_2077, %var_2078) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(11, 14), float32]) */
}

def @func_3535() -> (Tensor[(1, 10), bool],) {
  %430 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %431 = %430.1;
  (%431,)
}

def @func_9375() -> (Tensor[(1, 10), bool],) {
  %432 = @func_2815() /* ty=Tensor[(1, 10), bool] */;
  (%432,)
}

def @func_10221() -> (Tensor[(1, 10), bool],) {
  %433 = @func_938() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %434 = %433.1;
  (%434,)
}

def @func_4649() -> (Tensor[(1, 10), bool],) {
  %435 = @func_4298() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %436 = %435.1;
  (%436,)
}

def @func_6512() -> (Tensor[(1, 10), bool],) {
  @func_6510() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_7281(%var_7273: Tensor[(5, 14, 15), float32], %var_7274: Tensor[(5, 14, 15), float32]) -> Tensor[(5, 14, 15), float32] {
  %437 = cast(%var_7274, dtype="float32") /* ty=Tensor[(5, 14, 15), float32] */;
  %438 = shape_of(%var_7273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%var_7273, dtype="float32") /* ty=Tensor[(5, 14, 15), float32] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%439, %440) /* ty=Tensor[(5, 14, 15), float32] */
}

def @func_6693() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %441 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %442 = @func_6021() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %443 = %441.0;
  %444 = %442.2;
  (%443, %444)
}

def @func_6814() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_6812() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_9824(%var_9781: Tensor[(77), float32], %var_9782: Tensor[(154), float32]) -> (Tensor[(360), int64], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %445 = @func_8755() /* ty=(Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(810), bool], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8), float32], Tensor[(77, 1), float32], Tensor[(77), float32]) */;
  %446 = cast(%var_9781, dtype="float32") /* ty=Tensor[(77), float32] */;
  %447 = cast(%var_9782, dtype="float32") /* ty=Tensor[(154), float32] */;
  %448 = reshape(%446, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
  %449 = reshape(%447, newshape=[11, 14]) /* ty=Tensor[(11, 14), float32] */;
  %450 = @func_2075(%448, %449) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(11, 14), float32]) */;
  %451 = cast(%var_9781, dtype="float32") /* ty=Tensor[(77), float32] */;
  %452 = cast(%var_9782, dtype="float32") /* ty=Tensor[(154), float32] */;
  %453 = reshape(%451, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
  %454 = reshape(%452, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %455 = @func_7824(%453, %454) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(154), float32]) */;
  %456 = %445.3;
  %457 = %450.0;
  %458 = @func_5765() /* ty=Tensor[(1, 10), bool] */;
  %459 = %455.0;
  (%456, %457, %var_9781, %var_9782, %458, %459)
}

def @func_679() -> (Tensor[(1, 10), bool],) {
  @func_677() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_9945(%var_9933: Tensor[(192), float32], %var_9942: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(4, 6, 8), float32], Tensor[(192), float32], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) {
  %460 = @func_4195() /* ty=(Tensor[(1, 10), bool],) */;
  %461 = @func_7582() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %462 = cast(%var_9933, dtype="float32") /* ty=Tensor[(192), float32] */;
  %463 = reshape(%462, newshape=[4, 6, 8]) /* ty=Tensor[(4, 6, 8), float32] */;
  %464 = cast(meta[relay.Constant][22] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %465 = cast(%var_9942, dtype="float32") /* ty=Tensor[(154), float32] */;
  %466 = reshape(%464, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %467 = reshape(%465, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %468 = @func_4858(%466, %467) /* ty=(Tensor[(1, 10), bool], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) */;
  %469 = %460.0;
  %470 = %461.3;
  %471 = @func_9035(%463) /* ty=Tensor[(4, 6, 8), float32] */;
  %472 = %468.1;
  (%469, %470, %471, %var_9933, %472, meta[relay.Constant][22] /* ty=Tensor[(77), float32] */, %var_9942)
}

def @func_2289(%var_2271: Tensor[(77), float32], %var_2283: Tensor[(264, 2), int32], %var_2284: Tensor[(360), int64]) -> (Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(11, 7, 2), bool], Tensor[(810, 1), bool], int32, Tensor[(264, 2), int32], Tensor[(360), int64]) {
  %473 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %474 = cast(%var_2271, dtype="float32") /* ty=Tensor[(77), float32] */;
  %475 = cast(meta[relay.Constant][23] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %476 = reshape(%474, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float32] */;
  %477 = reshape(%475, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float32] */;
  %478 = @func_562(%476, %477) /* ty=Tensor[(11, 7, 2), float32] */;
  %479 = cast(meta[relay.Constant][23] /* ty=Tensor[(154), float32] */, dtype="bool") /* ty=Tensor[(154), bool] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%478, dtype="bool") /* ty=Tensor[(11, 7, 2), bool] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %483 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %484 = cast(%var_2283, dtype="int32") /* ty=Tensor[(264, 2), int32] */;
  %485 = cast(%var_2284, dtype="int64") /* ty=Tensor[(360), int64] */;
  %486 = reshape(%483, newshape=[]) /* ty=int32 */;
  %487 = reshape(%484, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), int32] */;
  %488 = reshape(%485, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %489 = @func_1867(%486, %487, %488) /* ty=(Tensor[(11, 12, 4), bool], Tensor[(15, 9, 6), float64], Tensor[(810, 1), bool], Tensor[(360), int64]) */;
  %490 = %473.0;
  %491 = logical_or(%481, %482) /* ty=Tensor[(11, 7, 2), bool] */;
  %492 = %489.2;
  (%490, %var_2271, %491, %492, -2 /* ty=int32 */, %var_2283, %var_2284)
}

def @func_5013() -> (Tensor[(1, 10), bool],) {
  @func_5011() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_9612() -> (Tensor[(16, 5, ?), float64], Tensor[(1, 10), bool]) {
  %502 = fn () -> (Tensor[(16, 5, ?), float64], Tensor[(1, 10), bool]) {
    %493 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 1), float64] */;
    %494 = atan(%493) /* ty=Tensor[(16, 5, 1), float64] */;
    %495 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 1), float64] */;
    %496 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
    %497 = cast(%494, dtype="float64") /* ty=Tensor[(16, 5, 1), float64] */;
    %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %499 = @func_6088() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %500 = power(%497, %498) /* ty=Tensor[(16, 5, ?), float64] */;
    %501 = %499.0;
    (%500, %501)
  };
  %502() /* ty=(Tensor[(16, 5, ?), float64], Tensor[(1, 10), bool]) */
}

def @func_8709() -> Tensor[(1, 10), bool] {
  @func_8707() /* ty=Tensor[(1, 10), bool] */
}

def @func_5193() -> (Tensor[(1, 10), bool],) {
  %504 = fn () -> (Tensor[(1, 10), bool],) {
    %503 = @func_3236() /* ty=Tensor[(1, 10), bool] */;
    (%503,)
  };
  %504() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_3238() -> Tensor[(1, 10), bool] {
  @func_3236() /* ty=Tensor[(1, 10), bool] */
}

def @func_6849(%var_6848: Tensor[(4, 8, 15), float32]) -> Tensor[(4, 8, 15), float32] {
  %506 = fn (%var_6822: Tensor[(4, 8, 15), float32]) -> Tensor[(4, 8, 15), float32] {
    %505 = cast(%var_6822, dtype="float32") /* ty=Tensor[(4, 8, 15), float32] */;
    erf(%505) /* ty=Tensor[(4, 8, 15), float32] */
  };
  %506(%var_6848) /* ty=Tensor[(4, 8, 15), float32] */
}

def @func_4805() -> Tensor[(1, 10), bool] {
  @func_4803() /* ty=Tensor[(1, 10), bool] */
}

def @func_2454() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %507 = @func_820() /* ty=Tensor[(1, 10), bool] */;
  %508 = @func_741() /* ty=Tensor[(1, 10), bool] */;
  (%507, %508)
}

def @func_3388(%var_3380: bool, %var_3381: Tensor[(10, 2, 7), bool]) -> Tensor[(10, 2, 7), bool] {
  %509 = cast(%var_3380, dtype="bool") /* ty=bool */;
  %510 = cast(%var_3381, dtype="bool") /* ty=Tensor[(10, 2, 7), bool] */;
  logical_or(%509, %510) /* ty=Tensor[(10, 2, 7), bool] */
}

def @func_8598(%var_8581: Tensor[(936), float32], %var_8591: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(13, 8, 9), bool], Tensor[(936), float32], Tensor[(234), float32]) {
  %511 = cast(%var_8581, dtype="float32") /* ty=Tensor[(936), float32] */;
  %512 = cast(%var_8581, dtype="float32") /* ty=Tensor[(936), float32] */;
  %513 = reshape(%511, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %514 = reshape(%512, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %515 = @func_5479(%513, %514) /* ty=(Tensor[(13, 8, 9), bool],) */;
  %516 = cast(%var_8591, dtype="float64") /* ty=Tensor[(234), float64] */;
  %517 = reshape(%516, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %518 = @func_5724(%517) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */;
  %519 = %518.2;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(234), float32] */;
  %521 = shape_of(%var_8591, dtype="int32") /* ty=Tensor[(1), int32] */;
  %522 = cast(%var_8591, dtype="float32") /* ty=Tensor[(234), float32] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?), float32] */;
  %524 = @func_3779() /* ty=Tensor[(1, 10), bool] */;
  %525 = %515.0;
  %526 = floor_mod(%522, %523) /* ty=Tensor[(234), float32] */;
  (%524, %525, %var_8581, %526)
}

def @func_2848() -> (Tensor[(1, 10), bool],) {
  @func_2846() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_6972(%var_6970: Tensor[(154), float32], %var_6971: Tensor[(77), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(77), bool]) {
  %540 = fn (%var_6937: Tensor[(154), float32], %var_6945: Tensor[(77), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(77), bool]) {
    %527 = @func_2940() /* ty=(Tensor[(1, 10), bool],) */;
    %528 = cast(meta[relay.Constant][25] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
    %529 = cast(%var_6937, dtype="float32") /* ty=Tensor[(154), float32] */;
    %530 = reshape(%528, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
    %531 = reshape(%529, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %532 = @func_2557(%530, %531) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(10, 2, 2), float64], float64, Tensor[(40), float64]) */;
    %533 = cast(%var_6945, dtype="bool") /* ty=Tensor[(77), bool] */;
    %534 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(77), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %535 = cast(meta[relay.Constant][25] /* ty=Tensor[(77), float32] */, dtype="bool") /* ty=Tensor[(77), bool] */;
    %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?), bool] */;
    %537 = %527.0;
    %538 = %532.1;
    %539 = logical_or(%535, %536) /* ty=Tensor[(77), bool] */;
    (%537, %538, %var_6937, %539)
  };
  %540(%var_6970, %var_6971) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(77), bool]) */
}

def @func_1552(%var_1546: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) {
  %541 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
  %542 = cast(%var_1546, dtype="float64") /* ty=Tensor[(234), float64] */;
  %543 = reshape(%542, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %544 = @func_1417(%543) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */;
  %545 = %541.0;
  %546 = %544.0;
  (%545, %546, %var_1546)
}

def @func_5919() -> Tensor[(1, 10), bool] {
  %547 = fn () -> Tensor[(1, 10), bool] {
    @func_5904() /* ty=Tensor[(1, 10), bool] */
  };
  %547() /* ty=Tensor[(1, 10), bool] */
}

def @func_1826(%var_1824: uint64, %var_1825: Tensor[(15, 9, 1), uint64]) -> Tensor[(15, 9, 1), uint64] {
  @func_1822(%var_1824, %var_1825) /* ty=Tensor[(15, 9, 1), uint64] */
}

def @func_8684() -> Tensor[(1, 10), bool] {
  @func_8682() /* ty=Tensor[(1, 10), bool] */
}

def @func_1555(%var_1553: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) {
  @func_1552(%var_1553) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */
}

def @func_5875() -> Tensor[(1, 10), bool] {
  @func_5873() /* ty=Tensor[(1, 10), bool] */
}

def @func_8101(%var_8099: Tensor[(5, 10), bool], %var_8100: Tensor[(8), float32]) -> (Tensor[(5, 10), bool], Tensor[(4, 8, 15), float32], Tensor[(1, 480), float32], Tensor[(8, 1, 1), float32], Tensor[(8), float32]) {
  @func_8097(%var_8099, %var_8100) /* ty=(Tensor[(5, 10), bool], Tensor[(4, 8, 15), float32], Tensor[(1, 480), float32], Tensor[(8, 1, 1), float32], Tensor[(8), float32]) */
}

def @func_1489() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %552 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %548 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
    %549 = @func_979() /* ty=(Tensor[(1, 10), bool],) */;
    %550 = %548.0;
    %551 = %549.0;
    (%550, %551)
  };
  %552() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_9999() -> (Tensor[(1, 10), bool],) {
  %553 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %554 = %553.1;
  (%554,)
}

def @func_5687() -> Tensor[(1, 10), bool] {
  %556 = fn () -> Tensor[(1, 10), bool] {
    %555 = @func_4920() /* ty=(Tensor[(1, 10), bool],) */;
    %555.0
  };
  %556() /* ty=Tensor[(1, 10), bool] */
}

def @func_5011() -> (Tensor[(1, 10), bool],) {
  %557 = @func_4552() /* ty=(Tensor[(1, 10), bool],) */;
  %558 = %557.0;
  (%558,)
}

def @func_6639() -> Tensor[(1, 10), bool] {
  %560 = fn () -> Tensor[(1, 10), bool] {
    %559 = @func_6615() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %559.0
  };
  %560() /* ty=Tensor[(1, 10), bool] */
}

def @func_8556() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %564 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %561 = @func_7466() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %562 = @func_1013() /* ty=Tensor[(1, 10), bool] */;
    %563 = %561.1;
    (%562, %563)
  };
  %564() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_10169() -> (Tensor[(1, 10), bool],) {
  %565 = @func_7698() /* ty=Tensor[(1, 10), bool] */;
  (%565,)
}

def @func_8279(%var_8278: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64], Tensor[(22, 7), float32], Tensor[(1, 10), bool], Tensor[(77), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(1, 10), bool]) {
  %595 = fn (%var_8214: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64], Tensor[(22, 7), float32], Tensor[(1, 10), bool], Tensor[(77), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(1, 10), bool]) {
    %566 = @func_1713() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) */;
    %567 = cast(%var_8214, dtype="float64") /* ty=Tensor[(234), float64] */;
    %568 = reshape(%567, newshape=[234]) /* ty=Tensor[(234), float64] */;
    %569 = @func_5724(%568) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */;
    %570 = @func_938() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %571 = cast(meta[relay.Constant][26] /* ty=Tensor[(22, 7), float32] */, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
    %572 = cast(meta[relay.Constant][27] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
    %573 = reshape(%571, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %574 = reshape(%572, newshape=[77]) /* ty=Tensor[(77), float32] */;
    %575 = @func_6969(%573, %574) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(77), bool]) */;
    %576 = %575.3;
    %577 = cast(meta[relay.Constant][28] /* ty=Tensor[(77), bool] */, dtype="bool") /* ty=Tensor[(77), bool] */;
    %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(1), int32] */;
    %579 = cast(%576, dtype="bool") /* ty=Tensor[(77), bool] */;
    %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?), bool] */;
    %581 = @func_6693() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %582 = cast(meta[relay.Constant][27] /* ty=Tensor[(77), float32] */, dtype="int64") /* ty=Tensor[(77), int64] */;
    %583 = shape_of(%576, dtype="int32") /* ty=Tensor[(1), int32] */;
    %584 = cast(%576, dtype="int64") /* ty=Tensor[(77), int64] */;
    %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?), int64] */;
    %586 = logical_xor(%584, %585) /* ty=Tensor[(77), int64] */;
    %587 = cast(%586, dtype="float32") /* ty=Tensor[(77), float32] */;
    %588 = %566.4;
    %589 = %569.2;
    %590 = %570.1;
    %591 = equal(%579, %580) /* ty=Tensor[(77), bool] */;
    %592 = %581.0;
    %593 = tan(%587) /* ty=Tensor[(77), float32] */;
    %594 = @func_5765() /* ty=Tensor[(1, 10), bool] */;
    (%588, %589, %var_8214, meta[relay.Constant][26] /* ty=Tensor[(22, 7), float32] */, %590, %591, %592, %593, %594)
  };
  %595(%var_8278) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64], Tensor[(22, 7), float32], Tensor[(1, 10), bool], Tensor[(77), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(1, 10), bool]) */
}

def @func_5491() -> (Tensor[(1, 10), bool],) {
  %597 = fn () -> (Tensor[(1, 10), bool],) {
    %596 = @func_2364() /* ty=Tensor[(1, 10), bool] */;
    (%596,)
  };
  %597() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_7368(%var_7366: Tensor[(77, 1), float32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(77, 1), float32], Tensor[(24, 22), int32]) {
  @func_7365(%var_7366) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(77, 1), float32], Tensor[(24, 22), int32]) */
}

def @func_7207() -> Tensor[(8), float32] {
  %598 = @func_5589() /* ty=(Tensor[(1, 10), bool], Tensor[(8, 1, 1), float32], Tensor[(8), float32], Tensor[(4, 6, 3), float32], Tensor[(72), uint16], Tensor[(1, 10), bool]) */;
  %598.2
}

def @func_9396() -> Tensor[(4, 7, ?), int8] {
  %599 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 7, 1), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 1), float64] */;
  %600 = rsqrt(%599) /* ty=Tensor[(4, 7, 1), float64] */;
  %601 = cast(%600, dtype="float32") /* ty=Tensor[(4, 7, 1), float32] */;
  %602 = asin(%601) /* ty=Tensor[(4, 7, 1), float32] */;
  %603 = cast(%602, dtype="int8") /* ty=Tensor[(4, 7, 1), int8] */;
  %604 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %605 = cast(%600, dtype="int8") /* ty=Tensor[(4, 7, 1), int8] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  maximum(%605, %606) /* ty=Tensor[(4, 7, ?), int8] */
}

def @func_2557(%var_2509: Tensor[(1, 77), float32], %var_2510: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(10, 2, 2), float64], float64, Tensor[(40), float64]) {
  %607 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %608 = cast(%var_2509, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
  %609 = cast(%var_2510, dtype="float32") /* ty=Tensor[(154), float32] */;
  %610 = reshape(%608, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
  %611 = reshape(%609, newshape=[11, 14]) /* ty=Tensor[(11, 14), float32] */;
  %612 = @func_2075(%610, %611) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(11, 14), float32]) */;
  %613 = cast(6.08865f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %614 = cast(meta[relay.Constant][30] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %615 = reshape(%613, newshape=[]) /* ty=float64 */;
  %616 = reshape(%614, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float64] */;
  %617 = @func_1926(%615, %616) /* ty=(Tensor[(10, 2, 2), float64], Tensor[(1, 10), bool], Tensor[(10, 2, 2), uint32]) */;
  %618 = %607.1;
  %619 = %612.4;
  %620 = %617.0;
  (%618, %619, %var_2509, %var_2510, %620, 6.08865f64 /* ty=float64 */, meta[relay.Constant][30] /* ty=Tensor[(40), float64] */)
}

def @func_1417(%var_1399: Tensor[(234), float64]) -> (Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) {
  %621 = cast(%var_1399, dtype="float64") /* ty=Tensor[(234), float64] */;
  %622 = reshape(%621, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %623 = @func_1154(%622) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32], Tensor[(234), float64], Tensor[(1, 10), bool]) */;
  %624 = %623.3;
  %625 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  %626 = cast(%625, dtype="uint8") /* ty=Tensor[(1, 10), uint8] */;
  %627 = shape_of(%624, dtype="int32") /* ty=Tensor[(2), int32] */;
  %628 = cast(%624, dtype="uint8") /* ty=Tensor[(1, 10), uint8] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %630 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %631 = multiply(%628, %629) /* ty=Tensor[(?, 10), uint8] */;
  %632 = %630.0;
  (%var_1399, %631, %632)
}

def @func_8186() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %639 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %633 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
    %634 = @func_8130() /* ty=(Tensor[(1, 10), bool],) */;
    %635 = @func_938() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %636 = %633.0;
    %637 = %634.0;
    %638 = %635.0;
    (%636, %637, %638)
  };
  %639() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_4504() -> (Tensor[(1, 10), bool],) {
  @func_4502() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_5522() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_5520() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_8012(%var_8008: Tensor[(2, 15, 3), int64], %var_8009: Tensor[(2, 15, 3), int64], %var_8010: Tensor[(1050), float32], %var_8011: Tensor[(2, 15, 3), bool]) -> (Tensor[(1, 10), bool], Tensor[(5, 14, 15), float32], Tensor[(1050), float32], Tensor[(1, 10), bool], Tensor[(2, 15, 3), float32], Tensor[(1, 10), bool]) {
  @func_8006(%var_8008, %var_8009, %var_8010, %var_8011) /* ty=(Tensor[(1, 10), bool], Tensor[(5, 14, 15), float32], Tensor[(1050), float32], Tensor[(1, 10), bool], Tensor[(2, 15, 3), float32], Tensor[(1, 10), bool]) */
}

def @main(%var_10451: Tensor[(13, 15, 6), uint8]) -> (Tensor[(13, 15, 6), float64], Tensor[(13, 15, 6), float32]) {
  %640 = cast(%var_10451, dtype="bool") /* ty=Tensor[(13, 15, 6), bool] */;
  %641 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(13, 15, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %642 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 15, 6), uint8] */, dtype="bool") /* ty=Tensor[(13, 15, 6), bool] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %644 = equal(%642, %643) /* ty=Tensor[(13, 15, 6), bool] */;
  %645 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 15, 6), uint8] */, dtype="float64") /* ty=Tensor[(13, 15, 6), float64] */;
  %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%644, dtype="float64") /* ty=Tensor[(13, 15, 6), float64] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %649 = cast(%var_10451, dtype="float32") /* ty=Tensor[(13, 15, 6), float32] */;
  %650 = divide(%647, %648) /* ty=Tensor[(13, 15, 6), float64] */;
  %651 = asinh(%649) /* ty=Tensor[(13, 15, 6), float32] */;
  (%650, %651)
}

def @func_2624(%var_2622: Tensor[(234), float64], %var_2623: Tensor[(11, 7), float32]) -> (Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7), float32], Tensor[(154), float32]) {
  %665 = fn (%var_2599: Tensor[(234), float64], %var_2615: Tensor[(11, 7), float32]) -> (Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7), float32], Tensor[(154), float32]) {
    %652 = cast(%var_2599, dtype="float64") /* ty=Tensor[(234), float64] */;
    %653 = reshape(%652, newshape=[3, 78]) /* ty=Tensor[(3, 78), float64] */;
    %654 = @func_1628(%653) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) */;
    %655 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
    %656 = cast(%var_2615, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
    %657 = cast(meta[relay.Constant][32] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %658 = reshape(%656, newshape=[11, 7]) /* ty=Tensor[(11, 7), float32] */;
    %659 = reshape(%657, newshape=[11, 14]) /* ty=Tensor[(11, 14), float32] */;
    %660 = @func_2075(%658, %659) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(11, 14), float32]) */;
    %661 = @func_1790() /* ty=Tensor[(1, 10), bool] */;
    %662 = %654.2;
    %663 = %655.0;
    %664 = %660.0;
    (%661, %662, %var_2599, %663, %664, %var_2615, meta[relay.Constant][32] /* ty=Tensor[(154), float32] */)
  };
  %665(%var_2622, %var_2623) /* ty=(Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7), float32], Tensor[(154), float32]) */
}

def @func_7092(%var_7091: uint64) -> (Tensor[(1, 10), bool], Tensor[(15, 9, 1), uint64], uint64, Tensor[(135), uint64]) {
  %672 = fn (%var_7081: uint64) -> (Tensor[(1, 10), bool], Tensor[(15, 9, 1), uint64], uint64, Tensor[(135), uint64]) {
    %666 = cast(%var_7081, dtype="uint64") /* ty=uint64 */;
    %667 = cast(meta[relay.Constant][33] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
    %668 = reshape(%666, newshape=[]) /* ty=uint64 */;
    %669 = reshape(%667, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), uint64] */;
    %670 = @func_3779() /* ty=Tensor[(1, 10), bool] */;
    %671 = @func_1822(%668, %669) /* ty=Tensor[(15, 9, 1), uint64] */;
    (%670, %671, %var_7081, meta[relay.Constant][33] /* ty=Tensor[(135), uint64] */)
  };
  %672(%var_7091) /* ty=(Tensor[(1, 10), bool], Tensor[(15, 9, 1), uint64], uint64, Tensor[(135), uint64]) */
}

def @func_7133() -> Tensor[(1, 10), bool] {
  %674 = fn () -> Tensor[(1, 10), bool] {
    %673 = @func_4920() /* ty=(Tensor[(1, 10), bool],) */;
    %673.0
  };
  %674() /* ty=Tensor[(1, 10), bool] */
}

def @func_677() -> (Tensor[(1, 10), bool],) {
  %675 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  (%675,)
}

def @func_7209() -> Tensor[(8), float32] {
  @func_7207() /* ty=Tensor[(8), float32] */
}

def @func_4195() -> (Tensor[(1, 10), bool],) {
  %676 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %677 = %676.1;
  (%677,)
}

def @func_1777(%var_1774: Tensor[(77), float32], %var_1775: Tensor[(154), float32], %var_1776: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) {
  %704 = fn (%var_1742: Tensor[(77), float32], %var_1743: Tensor[(154), float32], %var_1748: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) {
    %678 = cast(%var_1742, dtype="float32") /* ty=Tensor[(77), float32] */;
    %679 = cast(%var_1743, dtype="float32") /* ty=Tensor[(154), float32] */;
    %680 = reshape(%678, newshape=[77]) /* ty=Tensor[(77), float32] */;
    %681 = reshape(%679, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %682 = @func_1064(%680, %681) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(77), float32], Tensor[(154), float32]) */;
    %683 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
    %684 = cast(%var_1748, dtype="float64") /* ty=Tensor[(234), float64] */;
    %685 = cast(%var_1748, dtype="float64") /* ty=Tensor[(234), float64] */;
    %686 = reshape(%684, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
    %687 = reshape(%685, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
    %688 = @func_880(%686, %687) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
    %689 = %688.1;
    %690 = cast(%689, dtype="float64") /* ty=Tensor[(2, 13, 9), float64] */;
    %691 = cast(%var_1748, dtype="float64") /* ty=Tensor[(234), float64] */;
    %692 = reshape(%690, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
    %693 = reshape(%691, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
    %694 = @func_880(%692, %693) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
    %695 = cast(%var_1748, dtype="float32") /* ty=Tensor[(234), float32] */;
    %696 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
    %697 = cast(%689, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
    %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %699 = @func_1013() /* ty=Tensor[(1, 10), bool] */;
    %700 = %682.0;
    %701 = %683.0;
    %702 = %694.0;
    %703 = power(%697, %698) /* ty=Tensor[(2, 13, 9), float32] */;
    (%699, %700, %var_1742, %var_1743, %701, %702, %703)
  };
  %704(%var_1774, %var_1775, %var_1776) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */
}

def @func_7644() -> Tensor[(2, 3, 4), bool] {
  %705 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %706 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 3, 4), bool] */, dtype="bool") /* ty=Tensor[(2, 3, 4), bool] */;
  logical_or(%705, %706) /* ty=Tensor[(2, 3, 4), bool] */
}

def @func_9949(%var_9947: Tensor[(192), float32], %var_9948: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(4, 6, 8), float32], Tensor[(192), float32], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) {
  @func_9945(%var_9947, %var_9948) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(4, 6, 8), float32], Tensor[(192), float32], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) */
}

def @func_5520() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %707 = @func_4502() /* ty=(Tensor[(1, 10), bool],) */;
  %708 = @func_4313() /* ty=(Tensor[(1, 10), bool],) */;
  %709 = %707.0;
  %710 = %708.0;
  (%709, %710)
}

def @func_7727() -> Tensor[(1, 10), bool] {
  %712 = fn () -> Tensor[(1, 10), bool] {
    %711 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %711.1
  };
  %712() /* ty=Tensor[(1, 10), bool] */
}

def @func_3378(%var_3376: Tensor[(11, 7), float32]) -> (Tensor[(?, 10), uint32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(117, 2), float64], Tensor[(1, 10), bool], float64, Tensor[(11, 7), float32], Tensor[(154, 1), float32]) {
  @func_3375(%var_3376) /* ty=(Tensor[(?, 10), uint32], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(117, 2), float64], Tensor[(1, 10), bool], float64, Tensor[(11, 7), float32], Tensor[(154, 1), float32]) */
}

def @func_8341(%var_8339: Tensor[(234), float64]) -> (Tensor[(10, 15, 2), float32], Tensor[(234), float64], Tensor[(234), float64]) {
  @func_8338(%var_8339) /* ty=(Tensor[(10, 15, 2), float32], Tensor[(234), float64], Tensor[(234), float64]) */
}

def @func_9319() -> (Tensor[(1, 10), bool], int32) {
  @func_9317() /* ty=(Tensor[(1, 10), bool], int32) */
}

def @func_10171() -> (Tensor[(1, 10), bool],) {
  @func_10169() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_1193(%var_1191: Tensor[(9, 3, 10), int16], %var_1192: Tensor[(9, 3, 10), int16]) -> (Tensor[(9, 3, 10), int16], Tensor[(9, 3, 10), float64]) {
  @func_1189(%var_1191, %var_1192) /* ty=(Tensor[(9, 3, 10), int16], Tensor[(9, 3, 10), float64]) */
}

def @func_5442() -> (Tensor[(1, 10), bool],) {
  @func_5440() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_7680() -> Tensor[(1, 10), bool] {
  @func_7678() /* ty=Tensor[(1, 10), bool] */
}

def @func_742() -> Tensor[(1, 10), bool] {
  %714 = fn () -> Tensor[(1, 10), bool] {
    %713 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
    %713.0
  };
  %714() /* ty=Tensor[(1, 10), bool] */
}

def @func_2846() -> (Tensor[(1, 10), bool],) {
  %715 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %716 = %715.0;
  (%716,)
}

def @func_9377() -> (Tensor[(1, 10), bool],) {
  @func_9375() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_8338(%var_8325: Tensor[(234), float64]) -> (Tensor[(10, 15, 2), float32], Tensor[(234), float64], Tensor[(234), float64]) {
  %717 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 15, 2), float32] */, dtype="float32") /* ty=Tensor[(10, 15, 2), float32] */;
  %718 = cast(%var_8325, dtype="float64") /* ty=Tensor[(234), float64] */;
  %719 = reshape(%718, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %720 = @func_1417(%719) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */;
  %721 = log(%717) /* ty=Tensor[(10, 15, 2), float32] */;
  %722 = %720.0;
  (%721, %722, %var_8325)
}

def @func_1067(%var_1065: Tensor[(77), float32], %var_1066: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(77), float32], Tensor[(154), float32]) {
  %730 = fn (%var_1059: Tensor[(77), float32], %var_1060: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(77), float32], Tensor[(154), float32]) {
    %723 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %724 = cast(%var_1059, dtype="float32") /* ty=Tensor[(77), float32] */;
    %725 = cast(%var_1060, dtype="float32") /* ty=Tensor[(154), float32] */;
    %726 = reshape(%724, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float32] */;
    %727 = reshape(%725, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float32] */;
    %728 = %723.0;
    %729 = @func_562(%726, %727) /* ty=Tensor[(11, 7, 2), float32] */;
    (%728, %729, %var_1059, %var_1060)
  };
  %730(%var_1065, %var_1066) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(77), float32], Tensor[(154), float32]) */
}

def @func_2916(%var_2884: Tensor[(12, 11, 15), int16]) -> (Tensor[(12, 11, 15), int16], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(12, 11, 15), float32]) {
  %731 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 11, 15), int16] */, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %732 = shape_of(%var_2884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%var_2884, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %735 = cast(meta[relay.Constant][37] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %736 = reshape(%735, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %737 = @func_1154(%736) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32], Tensor[(234), float64], Tensor[(1, 10), bool]) */;
  %738 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 11, 15), int16] */, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %739 = shape_of(%var_2884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%var_2884, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %742 = maximum(%740, %741) /* ty=Tensor[(12, 11, 15), int16] */;
  %743 = cast(%var_2884, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %744 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%742, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %747 = bitwise_or(%745, %746) /* ty=Tensor[(12, 11, 15), int16] */;
  %748 = cast(%747, dtype="float32") /* ty=Tensor[(12, 11, 15), float32] */;
  %749 = bitwise_and(%733, %734) /* ty=Tensor[(12, 11, 15), int16] */;
  %750 = %737.0;
  %751 = acos(%748) /* ty=Tensor[(12, 11, 15), float32] */;
  (%749, %750, meta[relay.Constant][37] /* ty=Tensor[(234), float64] */, %751)
}

def @func_1420(%var_1418: Tensor[(234), float64]) -> (Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) {
  @func_1417(%var_1418) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */
}

def @func_5301() -> (Tensor[(1, 10), bool],) {
  @func_5299() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_9906(%var_9830: Tensor[(10, 6, 11), bool], %var_9831: Tensor[(10, 6, 11), bool], %var_9889: Tensor[(11, 7), float32]) -> (Tensor[(10, 6, 11), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(8), float32], Tensor[(10, 6, 11), int8], Tensor[(24, 22), int32], Tensor[(11, 7), float32], Tensor[(1, 10), bool]) {
  %752 = cast(%var_9831, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
  %753 = shape_of(%var_9830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%var_9830, dtype="bool") /* ty=Tensor[(10, 6, 11), bool] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %756 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
  %757 = @func_8479() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %758 = @func_4195() /* ty=(Tensor[(1, 10), bool],) */;
  %759 = cast(%var_9830, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
  %760 = atanh(%759) /* ty=Tensor[(10, 6, 11), float32] */;
  %761 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 6, 11), float32] */, dtype="int8") /* ty=Tensor[(10, 6, 11), int8] */;
  %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%760, dtype="int8") /* ty=Tensor[(10, 6, 11), int8] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %765 = cast(%var_9889, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %766 = reshape(%765, newshape=[77, 1]) /* ty=Tensor[(77, 1), float32] */;
  %767 = @func_7365(%766) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(77, 1), float32], Tensor[(24, 22), int32]) */;
  %768 = logical_and(%754, %755) /* ty=Tensor[(10, 6, 11), bool] */;
  %769 = %756.0;
  %770 = %757.1;
  %771 = %758.0;
  %772 = @func_5904() /* ty=Tensor[(1, 10), bool] */;
  %773 = @func_7207() /* ty=Tensor[(8), float32] */;
  %774 = add(%763, %764) /* ty=Tensor[(10, 6, 11), int8] */;
  %775 = %767.5;
  %776 = @func_5873() /* ty=Tensor[(1, 10), bool] */;
  (%768, %769, %770, %771, %772, %773, %774, %775, %var_9889, %776)
}

def @func_8707() -> Tensor[(1, 10), bool] {
  %777 = @func_6812() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %777.1
}

def @func_822() -> Tensor[(1, 10), bool] {
  @func_820() /* ty=Tensor[(1, 10), bool] */
}

def @func_3993(%var_3988: Tensor[(8, 1, 1), float32]) -> Tensor[(8, 1, 1), float32] {
  %778 = cast(%var_3988, dtype="float32") /* ty=Tensor[(8, 1, 1), float32] */;
  asinh(%778) /* ty=Tensor[(8, 1, 1), float32] */
}

def @func_979() -> (Tensor[(1, 10), bool],) {
  %779 = @func_741() /* ty=Tensor[(1, 10), bool] */;
  (%779,)
}

def @func_902() -> (Tensor[(1, 10), bool],) {
  %780 = @func_741() /* ty=Tensor[(1, 10), bool] */;
  (%780,)
}

def @func_997() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %781 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  %782 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  (%781, %782)
}

def @func_6428(%var_6425: Tensor[(1, 360), int64], %var_6426: Tensor[(4, 32), float64], %var_6427: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(8, 5, 9), int64], Tensor[(1, 360), int64], Tensor[(234), float64], Tensor[(4, 32), float64], Tensor[(234), float64]) {
  %803 = fn (%var_6384: Tensor[(1, 360), int64], %var_6414: Tensor[(4, 32), float64], %var_6415: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(8, 5, 9), int64], Tensor[(1, 360), int64], Tensor[(234), float64], Tensor[(4, 32), float64], Tensor[(234), float64]) {
    %783 = @func_4313() /* ty=(Tensor[(1, 10), bool],) */;
    %784 = cast(meta[relay.Constant][39] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
    %785 = reshape(%784, newshape=[77]) /* ty=Tensor[(77), float32] */;
    %786 = @func_4391(%785) /* ty=(Tensor[(1, 10), bool], Tensor[(154), float32], Tensor[(234), float64], Tensor[(77), float32]) */;
    %787 = cast(%var_6384, dtype="int64") /* ty=Tensor[(1, 360), int64] */;
    %788 = cast(%var_6384, dtype="int64") /* ty=Tensor[(1, 360), int64] */;
    %789 = reshape(%787, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
    %790 = reshape(%788, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
    %791 = cast(%var_6414, dtype="float64") /* ty=Tensor[(4, 32), float64] */;
    %792 = cast(meta[relay.Constant][39] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
    %793 = cast(%var_6415, dtype="float64") /* ty=Tensor[(234), float64] */;
    %794 = reshape(%791, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), float64] */;
    %795 = reshape(%792, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
    %796 = reshape(%793, newshape=[234]) /* ty=Tensor[(234), float64] */;
    %797 = @func_4619(%794, %795, %796) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(10, 2, 7), bool], bool, Tensor[(140), bool], Tensor[(8, 2, 8), float32], Tensor[(1, 10), bool], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(234), float64]) */;
    %798 = %783.0;
    %799 = @func_5765() /* ty=Tensor[(1, 10), bool] */;
    %800 = %786.0;
    %801 = @func_190(%789, %790) /* ty=Tensor[(8, 5, 9), int64] */;
    %802 = %797.9;
    (%798, %799, %800, meta[relay.Constant][39] /* ty=Tensor[(77), float32] */, %801, %var_6384, %802, %var_6414, %var_6415)
  };
  %803(%var_6425, %var_6426, %var_6427) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(8, 5, 9), int64], Tensor[(1, 360), int64], Tensor[(234), float64], Tensor[(4, 32), float64], Tensor[(234), float64]) */
}

def @func_2942() -> (Tensor[(1, 10), bool],) {
  @func_2940() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_1512() -> Tensor[(1, 10), bool] {
  %804 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
  %804.0
}

def @func_2075(%var_2063: Tensor[(11, 7), float32], %var_2064: Tensor[(11, 14), float32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(11, 14), float32]) {
  %805 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %806 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
  %807 = cast(%var_2063, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %808 = cast(%var_2064, dtype="float32") /* ty=Tensor[(11, 14), float32] */;
  %809 = reshape(%807, newshape=[11, 7, 1]) /* ty=Tensor[(11, 7, 1), float32] */;
  %810 = reshape(%808, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float32] */;
  %811 = %805.0;
  %812 = %806.0;
  %813 = @func_562(%809, %810) /* ty=Tensor[(11, 7, 2), float32] */;
  (%811, %812, %813, %var_2063, %var_2064)
}

def @func_8097(%var_8054: Tensor[(5, 10), bool], %var_8093: Tensor[(8), float32]) -> (Tensor[(5, 10), bool], Tensor[(4, 8, 15), float32], Tensor[(1, 480), float32], Tensor[(8, 1, 1), float32], Tensor[(8), float32]) {
  %814 = @func_3706() /* ty=Tensor[(1, 10), bool] */;
  %815 = cast(%814, dtype="bool") /* ty=Tensor[(1, 10), bool] */;
  %816 = cast(%var_8054, dtype="bool") /* ty=Tensor[(5, 10), bool] */;
  %817 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 480), float32] */, dtype="float32") /* ty=Tensor[(1, 480), float32] */;
  %818 = reshape(%817, newshape=[4, 8, 15]) /* ty=Tensor[(4, 8, 15), float32] */;
  %819 = cast(%var_8093, dtype="float32") /* ty=Tensor[(8), float32] */;
  %820 = reshape(%819, newshape=[8, 1, 1]) /* ty=Tensor[(8, 1, 1), float32] */;
  %821 = less_equal(%815, %816) /* ty=Tensor[(5, 10), bool] */;
  %822 = @func_6847(%818) /* ty=Tensor[(4, 8, 15), float32] */;
  %823 = @func_3993(%820) /* ty=Tensor[(8, 1, 1), float32] */;
  (%821, %822, meta[relay.Constant][40] /* ty=Tensor[(1, 480), float32] */, %823, %var_8093)
}

def @func_904() -> (Tensor[(1, 10), bool],) {
  @func_902() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_1822(%var_1811: uint64, %var_1812: Tensor[(15, 9, 1), uint64]) -> Tensor[(15, 9, 1), uint64] {
  %824 = cast(%var_1811, dtype="uint64") /* ty=uint64 */;
  %825 = cast(%var_1812, dtype="uint64") /* ty=Tensor[(15, 9, 1), uint64] */;
  right_shift(%824, %825) /* ty=Tensor[(15, 9, 1), uint64] */
}

def @func_5906() -> Tensor[(1, 10), bool] {
  @func_5904() /* ty=Tensor[(1, 10), bool] */
}

def @func_8481() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_8479() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_7365(%var_7347: Tensor[(77, 1), float32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(77, 1), float32], Tensor[(24, 22), int32]) {
  %826 = @func_3428() /* ty=(Tensor[(1, 10), bool],) */;
  %827 = @func_4920() /* ty=(Tensor[(1, 10), bool],) */;
  %828 = @func_6615() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %829 = cast(%var_7347, dtype="float32") /* ty=Tensor[(77, 1), float32] */;
  %830 = cast(meta[relay.Constant][41] /* ty=Tensor[(24, 22), int32] */, dtype="int32") /* ty=Tensor[(24, 22), int32] */;
  %831 = reshape(%829, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %832 = reshape(%830, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %833 = @func_3194(%831, %832) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(528), int32], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(810, 77), int8], Tensor[(810, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(1, 10), bool]) */;
  %834 = %826.0;
  %835 = %827.0;
  %836 = %828.1;
  %837 = %833.8;
  (%834, %835, %836, %837, %var_7347, meta[relay.Constant][41] /* ty=Tensor[(24, 22), int32] */)
}

def @func_8755() -> (Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(810), bool], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8), float32], Tensor[(77, 1), float32], Tensor[(77), float32]) {
  %838 = @func_6812() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %839 = cast(meta[relay.Constant][42] /* ty=Tensor[(810), bool] */, dtype="bool") /* ty=Tensor[(810), bool] */;
  %840 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %841 = cast(meta[relay.Constant][42] /* ty=Tensor[(810), bool] */, dtype="bool") /* ty=Tensor[(810), bool] */;
  %842 = reshape(%839, newshape=[81, 10]) /* ty=Tensor[(81, 10), bool] */;
  %843 = reshape(%840, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %844 = reshape(%841, newshape=[81, 10]) /* ty=Tensor[(81, 10), bool] */;
  %845 = @func_8447(%842, %843, %844) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(15, 9, 6), float64], Tensor[(360), int64], Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(81, 10), float64], Tensor[(81, 10), float32]) */;
  %846 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %847 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %848 = reshape(%846, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %849 = reshape(%847, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
  %850 = cast(meta[relay.Constant][44] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %851 = reshape(%850, newshape=[77, 1]) /* ty=Tensor[(77, 1), float32] */;
  %852 = @func_7365(%851) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(77, 1), float32], Tensor[(24, 22), int32]) */;
  %853 = %838.0;
  %854 = %845.6;
  %855 = @func_190(%848, %849) /* ty=Tensor[(8, 5, 9), int64] */;
  %856 = @func_7207() /* ty=Tensor[(8), float32] */;
  %857 = %852.4;
  (%853, %854, meta[relay.Constant][42] /* ty=Tensor[(810), bool] */, meta[relay.Constant][43] /* ty=Tensor[(360), int64] */, %855, %856, %857, meta[relay.Constant][44] /* ty=Tensor[(77), float32] */)
}

def @func_10364(%var_10362: uint64, %var_10363: Tensor[(2, 11, 3), uint64]) -> (Tensor[(2, 11, 3), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %864 = fn (%var_10341: uint64, %var_10342: Tensor[(2, 11, 3), uint64]) -> (Tensor[(2, 11, 3), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %858 = cast(%var_10341, dtype="bool") /* ty=bool */;
    %859 = cast(%var_10342, dtype="bool") /* ty=Tensor[(2, 11, 3), bool] */;
    %860 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %861 = less_equal(%858, %859) /* ty=Tensor[(2, 11, 3), bool] */;
    %862 = %860.1;
    %863 = @func_5873() /* ty=Tensor[(1, 10), bool] */;
    (%861, %862, %863)
  };
  %864(%var_10362, %var_10363) /* ty=(Tensor[(2, 11, 3), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_1738() -> (Tensor[(1, 10), bool],) {
  @func_1736() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_4502() -> (Tensor[(1, 10), bool],) {
  %865 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %866 = %865.0;
  (%866,)
}

def @func_4788() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_4786() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_5440() -> (Tensor[(1, 10), bool],) {
  %867 = @func_4786() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %868 = %867.0;
  (%868,)
}

def @func_8943() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %873 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %869 = @func_5011() /* ty=(Tensor[(1, 10), bool],) */;
    %870 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
    %871 = %869.0;
    %872 = %870.0;
    (%871, %872)
  };
  %873() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_1334() -> (Tensor[(1, 10), bool],) {
  %874 = @func_979() /* ty=(Tensor[(1, 10), bool],) */;
  %875 = %874.0;
  (%875,)
}

def @func_6363() -> (Tensor[(1, 10), bool],) {
  %877 = fn () -> (Tensor[(1, 10), bool],) {
    %876 = @func_5686() /* ty=Tensor[(1, 10), bool] */;
    (%876,)
  };
  %877() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_4858(%var_4843: Tensor[(77), float32], %var_4844: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) {
  %878 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %879 = cast(%var_4843, dtype="float32") /* ty=Tensor[(77), float32] */;
  %880 = cast(%var_4844, dtype="float32") /* ty=Tensor[(154), float32] */;
  %881 = reshape(%879, newshape=[1, 77]) /* ty=Tensor[(1, 77), float32] */;
  %882 = reshape(%880, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %883 = @func_2557(%881, %882) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(10, 2, 2), float64], float64, Tensor[(40), float64]) */;
  %884 = %878.1;
  %885 = %883.4;
  (%884, %885, %var_4843, %var_4844)
}

def @func_9317() -> (Tensor[(1, 10), bool], int32) {
  %886 = @func_4195() /* ty=(Tensor[(1, 10), bool],) */;
  %887 = @func_8643() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], int32, Tensor[(77), float32], Tensor[(528), int32], Tensor[(360), int64]) */;
  %888 = %886.0;
  %889 = %887.2;
  (%888, %889)
}

def @func_7583() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %896 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %890 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
    %891 = @func_3428() /* ty=(Tensor[(1, 10), bool],) */;
    %892 = @func_2815() /* ty=Tensor[(1, 10), bool] */;
    %893 = %890.0;
    %894 = @func_5873() /* ty=Tensor[(1, 10), bool] */;
    %895 = %891.0;
    (%892, %893, %894, %895)
  };
  %896() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_10223() -> (Tensor[(1, 10), bool],) {
  @func_10221() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_6616() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %900 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %897 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %898 = %897.0;
    %899 = @func_5873() /* ty=Tensor[(1, 10), bool] */;
    (%898, %899)
  };
  %900() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_9216(%var_9214: Tensor[(234), float64], %var_9215: Tensor[(360), int64]) -> (Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(11, 7), float32], Tensor[(8, 5, 9), int64], Tensor[(360), int64]) {
  @func_9212(%var_9214, %var_9215) /* ty=(Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(234), float64], Tensor[(11, 7), float32], Tensor[(8, 5, 9), int64], Tensor[(360), int64]) */
}

def @func_820() -> Tensor[(1, 10), bool] {
  %901 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %901.0
}

def @func_5425() -> (Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(1, 77), float32], Tensor[(154), float32]) {
  %902 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %903 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 77), float32] */, dtype="float32") /* ty=Tensor[(1, 77), float32] */;
  %904 = cast(meta[relay.Constant][46] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %905 = reshape(%903, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %906 = reshape(%904, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %907 = @func_4858(%905, %906) /* ty=(Tensor[(1, 10), bool], Tensor[(10, 2, 2), float64], Tensor[(77), float32], Tensor[(154), float32]) */;
  %908 = %902.1;
  %909 = %907.2;
  (%908, %909, meta[relay.Constant][45] /* ty=Tensor[(1, 77), float32] */, meta[relay.Constant][46] /* ty=Tensor[(154), float32] */)
}

def @func_6022() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %915 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %910 = @func_5490() /* ty=(Tensor[(1, 10), bool],) */;
    %911 = @func_4195() /* ty=(Tensor[(1, 10), bool],) */;
    %912 = %910.0;
    %913 = %911.0;
    %914 = @func_5686() /* ty=Tensor[(1, 10), bool] */;
    (%912, %913, %914)
  };
  %915() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_7332(%var_7312: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), uint64]) {
  %916 = @func_5192() /* ty=(Tensor[(1, 10), bool],) */;
  %917 = cast(%var_7312, dtype="float64") /* ty=Tensor[(234), float64] */;
  %918 = reshape(%917, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %919 = @func_7011(%918) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64]) */;
  %920 = %919.2;
  %921 = cast(%var_7312, dtype="uint64") /* ty=Tensor[(234), uint64] */;
  %922 = shape_of(%920, dtype="int32") /* ty=Tensor[(1), int32] */;
  %923 = cast(%920, dtype="uint64") /* ty=Tensor[(234), uint64] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %925 = %916.0;
  %926 = subtract(%923, %924) /* ty=Tensor[(234), uint64] */;
  (%925, %926)
}

def @func_2366() -> Tensor[(1, 10), bool] {
  @func_2364() /* ty=Tensor[(1, 10), bool] */
}

def @func_3236() -> Tensor[(1, 10), bool] {
  %927 = @func_2940() /* ty=(Tensor[(1, 10), bool],) */;
  %927.0
}

def @func_3537() -> (Tensor[(1, 10), bool],) {
  @func_3535() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_1628(%var_1618: Tensor[(3, 78), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) {
  %928 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %929 = cast(%var_1618, dtype="float64") /* ty=Tensor[(3, 78), float64] */;
  %930 = cast(%var_1618, dtype="float64") /* ty=Tensor[(3, 78), float64] */;
  %931 = reshape(%929, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %932 = reshape(%930, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float64] */;
  %933 = @func_880(%931, %932) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */;
  %934 = %933.1;
  %935 = cast(%934, dtype="bool") /* ty=Tensor[(2, 13, 9), bool] */;
  %936 = shape_of(%var_1618, dtype="int32") /* ty=Tensor[(2), int32] */;
  %937 = cast(%var_1618, dtype="bool") /* ty=Tensor[(3, 78), bool] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %939 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  %940 = %928.0;
  %941 = logical_and(%937, %938) /* ty=Tensor[(3, 78), bool] */;
  (%939, %940, %941)
}

def @func_3781() -> Tensor[(1, 10), bool] {
  @func_3779() /* ty=Tensor[(1, 10), bool] */
}

def @func_6741() -> (Tensor[(1, 10), bool],) {
  @func_6739() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_7466() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %942 = @func_5520() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %943 = @func_6021() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %944 = @func_6812() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %945 = @func_6615() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %946 = %942.0;
  %947 = %943.2;
  %948 = %944.0;
  %949 = %945.1;
  (%946, %947, %948, %949)
}

def @func_8006(%var_7945: Tensor[(2, 15, 3), int64], %var_7946: Tensor[(2, 15, 3), int64], %var_7975: Tensor[(1050), float32], %var_7989: Tensor[(2, 15, 3), bool]) -> (Tensor[(1, 10), bool], Tensor[(5, 14, 15), float32], Tensor[(1050), float32], Tensor[(1, 10), bool], Tensor[(2, 15, 3), float32], Tensor[(1, 10), bool]) {
  %950 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %951 = cast(%var_7975, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %952 = cast(%var_7975, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %953 = reshape(%951, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %954 = reshape(%952, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float32] */;
  %955 = cast(%var_7946, dtype="int64") /* ty=Tensor[(2, 15, 3), int64] */;
  %956 = shape_of(%var_7945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(%var_7945, dtype="int64") /* ty=Tensor[(2, 15, 3), int64] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %959 = left_shift(%957, %958) /* ty=Tensor[(2, 15, 3), int64] */;
  %960 = cast(%var_7945, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
  %961 = shape_of(%959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %962 = cast(%959, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %964 = logical_or(%962, %963) /* ty=Tensor[(2, 15, 3), bool] */;
  %965 = cast(%var_7989, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
  %966 = shape_of(%964, dtype="int32") /* ty=Tensor[(3), int32] */;
  %967 = cast(%964, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %969 = @func_5440() /* ty=(Tensor[(1, 10), bool],) */;
  %970 = %950.0;
  %971 = @func_7281(%953, %954) /* ty=Tensor[(5, 14, 15), float32] */;
  %972 = @func_4803() /* ty=Tensor[(1, 10), bool] */;
  %973 = floor_divide(%967, %968) /* ty=Tensor[(2, 15, 3), float32] */;
  %974 = %969.0;
  (%970, %971, %var_7975, %972, %973, %974)
}

def @func_1573() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_1571() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_2757(%var_2756: Tensor[(4, 6, 3), uint16]) -> (Tensor[(4, 6, 3), bool], Tensor[(4, 6, 3), float32]) {
  %982 = fn (%var_2705: Tensor[(4, 6, 3), uint16]) -> (Tensor[(4, 6, 3), bool], Tensor[(4, 6, 3), float32]) {
    %975 = cast(%var_2705, dtype="bool") /* ty=Tensor[(4, 6, 3), bool] */;
    %976 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(4, 6, 3), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %977 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 6, 3), uint16] */, dtype="bool") /* ty=Tensor[(4, 6, 3), bool] */;
    %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %979 = cast(%var_2705, dtype="float32") /* ty=Tensor[(4, 6, 3), float32] */;
    %980 = less_equal(%977, %978) /* ty=Tensor[(4, 6, 3), bool] */;
    %981 = exp(%979) /* ty=Tensor[(4, 6, 3), float32] */;
    (%980, %981)
  };
  %982(%var_2756) /* ty=(Tensor[(4, 6, 3), bool], Tensor[(4, 6, 3), float32]) */
}

def @func_4553() -> (Tensor[(1, 10), bool],) {
  %985 = fn () -> (Tensor[(1, 10), bool],) {
    %983 = @func_3428() /* ty=(Tensor[(1, 10), bool],) */;
    %984 = %983.0;
    (%984,)
  };
  %985() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_8479() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %986 = @func_5011() /* ty=(Tensor[(1, 10), bool],) */;
  %987 = %986.0;
  %988 = @func_1790() /* ty=Tensor[(1, 10), bool] */;
  (%987, %988)
}

def @func_1791() -> Tensor[(1, 10), bool] {
  %990 = fn () -> Tensor[(1, 10), bool] {
    %989 = @func_938() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %989.1
  };
  %990() /* ty=Tensor[(1, 10), bool] */
}

def @func_565(%var_563: Tensor[(11, 7, 1), float32], %var_564: Tensor[(11, 7, 2), float32]) -> Tensor[(11, 7, 2), float32] {
  %993 = fn (%var_557: Tensor[(11, 7, 1), float32], %var_558: Tensor[(11, 7, 2), float32]) -> Tensor[(11, 7, 2), float32] {
    %991 = cast(%var_557, dtype="float32") /* ty=Tensor[(11, 7, 1), float32] */;
    %992 = cast(%var_558, dtype="float32") /* ty=Tensor[(11, 7, 2), float32] */;
    mod(%991, %992) /* ty=Tensor[(11, 7, 2), float32] */
  };
  %993(%var_563, %var_564) /* ty=Tensor[(11, 7, 2), float32] */
}

def @func_4299() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %996 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %994 = @func_1013() /* ty=Tensor[(1, 10), bool] */;
    %995 = @func_741() /* ty=Tensor[(1, 10), bool] */;
    (%994, %995)
  };
  %996() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_883(%var_881: Tensor[(2, 13, 9), float64], %var_882: Tensor[(2, 13, 9), float64]) -> (Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) {
  %1006 = fn (%var_865: Tensor[(2, 13, 9), float64], %var_872: Tensor[(2, 13, 9), float64]) -> (Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) {
    %997 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
    %998 = cast(%var_865, dtype="float64") /* ty=Tensor[(2, 13, 9), float64] */;
    %999 = acos(%998) /* ty=Tensor[(2, 13, 9), float64] */;
    %1000 = cast(%var_872, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
    %1001 = shape_of(%999, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1002 = cast(%999, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
    %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1004 = %997.0;
    %1005 = floor_mod(%1002, %1003) /* ty=Tensor[(2, 13, 9), float32] */;
    (%1004, %1005)
  };
  %1006(%var_881, %var_882) /* ty=(Tensor[(1, 10), bool], Tensor[(2, 13, 9), float32]) */
}

def @func_5427() -> (Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(1, 77), float32], Tensor[(154), float32]) {
  @func_5425() /* ty=(Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(1, 77), float32], Tensor[(154), float32]) */
}

def @func_6812() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %1007 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
  %1008 = cast(meta[relay.Constant][48] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %1009 = reshape(%1008, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %1010 = @func_5724(%1009) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */;
  %1011 = @func_5520() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1012 = %1007.0;
  %1013 = %1010.0;
  %1014 = %1011.1;
  %1015 = @func_5904() /* ty=Tensor[(1, 10), bool] */;
  %1016 = @func_650() /* ty=Tensor[(1, 10), bool] */;
  (%1012, %1013, meta[relay.Constant][48] /* ty=Tensor[(234), float64] */, %1014, %1015, %1016)
}

def @func_7678() -> Tensor[(1, 10), bool] {
  %1017 = @func_1736() /* ty=(Tensor[(1, 10), bool],) */;
  %1017.0
}

def @func_2364() -> Tensor[(1, 10), bool] {
  %1018 = @func_677() /* ty=(Tensor[(1, 10), bool],) */;
  %1018.0
}

def @func_9684() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %1023 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %1019 = @func_9375() /* ty=(Tensor[(1, 10), bool],) */;
    %1020 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %1021 = %1019.0;
    %1022 = %1020.1;
    (%1021, %1022)
  };
  %1023() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_9023(%var_9021: Tensor[(8, 14, 9), uint16], %var_9022: Tensor[(8, 14, 9), uint16]) -> (Tensor[(8, 14, 9), uint16],) {
  @func_9019(%var_9021, %var_9022) /* ty=(Tensor[(8, 14, 9), uint16],) */
}

def @func_1713() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) {
  %1024 = @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1025 = cast(meta[relay.Constant][49] /* ty=Tensor[(234, 1), float64] */, dtype="float64") /* ty=Tensor[(234, 1), float64] */;
  %1026 = reshape(%1025, newshape=[234]) /* ty=Tensor[(234), float64] */;
  %1027 = @func_1417(%1026) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */;
  %1028 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1029 = @func_979() /* ty=(Tensor[(1, 10), bool],) */;
  %1030 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1031 = cast(meta[relay.Constant][49] /* ty=Tensor[(234, 1), float64] */, dtype="float64") /* ty=Tensor[(234, 1), float64] */;
  %1032 = reshape(%1031, newshape=[3, 78]) /* ty=Tensor[(3, 78), float64] */;
  %1033 = @func_1628(%1032) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) */;
  %1034 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
  %1035 = @func_820() /* ty=Tensor[(1, 10), bool] */;
  %1036 = %1024.0;
  %1037 = %1027.2;
  %1038 = %1028.1;
  %1039 = %1029.0;
  %1040 = %1030.1;
  %1041 = %1033.2;
  %1042 = %1034.0;
  (%1035, %1036, %1037, meta[relay.Constant][49] /* ty=Tensor[(234, 1), float64] */, %1038, %1039, %1040, %1041, %1042)
}

def @func_9960() -> (Tensor[(1, 10), bool],) {
  %1044 = fn () -> (Tensor[(1, 10), bool],) {
    %1043 = @func_7132() /* ty=Tensor[(1, 10), bool] */;
    (%1043,)
  };
  %1044() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_1715() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) {
  @func_1713() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(234, 1), float64], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool], Tensor[(1, 10), bool]) */
}

def @func_4651() -> (Tensor[(1, 10), bool],) {
  @func_4649() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_2919(%var_2917: Tensor[(12, 11, 15), int16]) -> (Tensor[(12, 11, 15), int16], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(12, 11, 15), float32]) {
  @func_2916(%var_2917) /* ty=(Tensor[(12, 11, 15), int16], Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(12, 11, 15), float32]) */
}

def @func_3707() -> Tensor[(1, 10), bool] {
  %1046 = fn () -> Tensor[(1, 10), bool] {
    %1045 = @func_1334() /* ty=(Tensor[(1, 10), bool],) */;
    %1045.0
  };
  %1046() /* ty=Tensor[(1, 10), bool] */
}

def @func_4921() -> (Tensor[(1, 10), bool],) {
  %1048 = fn () -> (Tensor[(1, 10), bool],) {
    %1047 = @func_3706() /* ty=Tensor[(1, 10), bool] */;
    (%1047,)
  };
  %1048() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_2816() -> Tensor[(1, 10), bool] {
  %1049 = fn () -> Tensor[(1, 10), bool] {
    @func_820() /* ty=Tensor[(1, 10), bool] */
  };
  %1049() /* ty=Tensor[(1, 10), bool] */
}

def @func_3779() -> Tensor[(1, 10), bool] {
  @func_2364() /* ty=Tensor[(1, 10), bool] */
}

def @func_5972(%var_5971: Tensor[(72), uint16]) -> (Tensor[(1, 10), bool], Tensor[(4, 6, 3), uint32]) {
  %1061 = fn (%var_5939: Tensor[(72), uint16]) -> (Tensor[(1, 10), bool], Tensor[(4, 6, 3), uint32]) {
    %1050 = @func_5011() /* ty=(Tensor[(1, 10), bool],) */;
    %1051 = cast(%var_5939, dtype="uint16") /* ty=Tensor[(72), uint16] */;
    %1052 = reshape(%1051, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), uint16] */;
    %1053 = @func_2755(%1052) /* ty=(Tensor[(4, 6, 3), bool], Tensor[(4, 6, 3), float32]) */;
    %1054 = %1053.1;
    %1055 = cast(%var_5939, dtype="uint32") /* ty=Tensor[(72), uint32] */;
    %1056 = shape_of(%1054, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1057 = cast(%1054, dtype="uint32") /* ty=Tensor[(4, 6, 3), uint32] */;
    %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1059 = %1050.0;
    %1060 = right_shift(%1057, %1058) /* ty=Tensor[(4, 6, 3), uint32] */;
    (%1059, %1060)
  };
  %1061(%var_5971) /* ty=(Tensor[(1, 10), bool], Tensor[(4, 6, 3), uint32]) */
}

def @func_10091(%var_10090: Tensor[(234), float64]) -> (Tensor[(528), int32], Tensor[(1, 10), bool], Tensor[(?, 10), uint8], Tensor[(234), float64]) {
  %1070 = fn (%var_10082: Tensor[(234), float64]) -> (Tensor[(528), int32], Tensor[(1, 10), bool], Tensor[(?, 10), uint8], Tensor[(234), float64]) {
    %1062 = @func_8643() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], int32, Tensor[(77), float32], Tensor[(528), int32], Tensor[(360), int64]) */;
    %1063 = @func_5440() /* ty=(Tensor[(1, 10), bool],) */;
    %1064 = cast(%var_10082, dtype="float64") /* ty=Tensor[(234), float64] */;
    %1065 = reshape(%1064, newshape=[234]) /* ty=Tensor[(234), float64] */;
    %1066 = @func_1417(%1065) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */;
    %1067 = %1062.4;
    %1068 = %1063.0;
    %1069 = %1066.1;
    (%1067, %1068, %1069, %var_10082)
  };
  %1070(%var_10090) /* ty=(Tensor[(528), int32], Tensor[(1, 10), bool], Tensor[(?, 10), uint8], Tensor[(234), float64]) */
}

def @func_4803() -> Tensor[(1, 10), bool] {
  %1071 = @func_3535() /* ty=(Tensor[(1, 10), bool],) */;
  %1071.0
}

def @func_9155(%var_9151: Tensor[(154), float32], %var_9152: Tensor[(77), float32], %var_9153: uint64, %var_9154: Tensor[(135), uint64]) -> (Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(15, 9, 1), uint64], uint64, Tensor[(135), uint64], Tensor[(77), float64], Tensor[(234), float64], Tensor[(234), float64]) {
  %1097 = fn (%var_9083: Tensor[(154), float32], %var_9116: Tensor[(77), float32], %var_9130: uint64, %var_9131: Tensor[(135), uint64]) -> (Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(15, 9, 1), uint64], uint64, Tensor[(135), uint64], Tensor[(77), float64], Tensor[(234), float64], Tensor[(234), float64]) {
    %1072 = cast(%var_9083, dtype="float32") /* ty=Tensor[(154), float32] */;
    %1073 = cast(meta[relay.Constant][50] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
    %1074 = reshape(%1072, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %1075 = reshape(%1073, newshape=[77]) /* ty=Tensor[(77), float32] */;
    %1076 = @func_6969(%1074, %1075) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(77), bool]) */;
    %1077 = @func_7466() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %1078 = cast(%var_9116, dtype="float32") /* ty=Tensor[(77), float32] */;
    %1079 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(77), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1080 = cast(meta[relay.Constant][50] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
    %1081 = dyn.reshape(%1078, %1079, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1082 = cast(%var_9130, dtype="uint64") /* ty=uint64 */;
    %1083 = cast(%var_9131, dtype="uint64") /* ty=Tensor[(135), uint64] */;
    %1084 = reshape(%1082, newshape=[]) /* ty=uint64 */;
    %1085 = reshape(%1083, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), uint64] */;
    %1086 = cast(meta[relay.Constant][50] /* ty=Tensor[(77), float32] */, dtype="float64") /* ty=Tensor[(77), float64] */;
    %1087 = cast(meta[relay.Constant][51] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
    %1088 = reshape(%1087, newshape=[234]) /* ty=Tensor[(234), float64] */;
    %1089 = @func_1552(%1088) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */;
    %1090 = @func_7726() /* ty=Tensor[(1, 10), bool] */;
    %1091 = %1076.1;
    %1092 = %1077.3;
    %1093 = maximum(%1080, %1081) /* ty=Tensor[(77), float32] */;
    %1094 = @func_1822(%1084, %1085) /* ty=Tensor[(15, 9, 1), uint64] */;
    %1095 = cosh(%1086) /* ty=Tensor[(77), float64] */;
    %1096 = %1089.1;
    (%1090, %1091, %var_9083, %1092, %1093, %1094, %var_9130, %var_9131, %1095, %1096, meta[relay.Constant][51] /* ty=Tensor[(234), float64] */)
  };
  %1097(%var_9151, %var_9152, %var_9153, %var_9154) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(154), float32], Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(15, 9, 1), uint64], uint64, Tensor[(135), uint64], Tensor[(77), float64], Tensor[(234), float64], Tensor[(234), float64]) */
}

def @func_8757() -> (Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(810), bool], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8), float32], Tensor[(77, 1), float32], Tensor[(77), float32]) {
  @func_8755() /* ty=(Tensor[(1, 10), bool], Tensor[(81, 10), float32], Tensor[(810), bool], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(8), float32], Tensor[(77, 1), float32], Tensor[(77), float32]) */
}

def @func_4314() -> (Tensor[(1, 10), bool],) {
  %1099 = fn () -> (Tensor[(1, 10), bool],) {
    %1098 = @func_2364() /* ty=Tensor[(1, 10), bool] */;
    (%1098,)
  };
  %1099() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_6664() -> Tensor[(1, 10), bool] {
  %1100 = @func_6510() /* ty=(Tensor[(1, 10), bool],) */;
  %1100.0
}

def @func_981() -> (Tensor[(1, 10), bool],) {
  @func_979() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_999() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_997() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_7699() -> Tensor[(1, 10), bool] {
  %1102 = fn () -> Tensor[(1, 10), bool] {
    %1101 = @func_6088() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %1101.2
  };
  %1102() /* ty=Tensor[(1, 10), bool] */
}

def @func_939() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %1107 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %1103 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
    %1104 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
    %1105 = %1103.0;
    %1106 = %1104.0;
    (%1105, %1106)
  };
  %1107() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_5605() -> Tensor[(1, 10), bool] {
  @func_5603() /* ty=Tensor[(1, 10), bool] */
}

def @func_2678() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %1108 = @func_1736() /* ty=(Tensor[(1, 10), bool],) */;
  %1109 = @func_1571() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
  %1110 = %1108.0;
  %1111 = %1109.0;
  (%1110, %1111)
}

def @func_651() -> Tensor[(1, 10), bool] {
  %1113 = fn () -> Tensor[(1, 10), bool] {
    %1112 = @func_589() /* ty=(Tensor[(1, 10), bool],) */;
    %1112.0
  };
  %1113() /* ty=Tensor[(1, 10), bool] */
}

def @func_9338(%var_9336: uint8, %var_9337: Tensor[(2, 14, 8), uint8]) -> Tensor[(2, 14, 8), uint8] {
  @func_9334(%var_9336, %var_9337) /* ty=Tensor[(2, 14, 8), uint8] */
}

def @func_1013() -> Tensor[(1, 10), bool] {
  @func_820() /* ty=Tensor[(1, 10), bool] */
}

def @func_2561(%var_2559: Tensor[(1, 77), float32], %var_2560: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(10, 2, 2), float64], float64, Tensor[(40), float64]) {
  @func_2557(%var_2559, %var_2560) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 14), float32], Tensor[(1, 77), float32], Tensor[(154), float32], Tensor[(10, 2, 2), float64], float64, Tensor[(40), float64]) */
}

def @func_5726(%var_5725: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) {
  %1122 = fn (%var_5716: Tensor[(234), float64]) -> (Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) {
    %1114 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %1115 = cast(%var_5716, dtype="float64") /* ty=Tensor[(234), float64] */;
    %1116 = reshape(%1115, newshape=[234]) /* ty=Tensor[(234), float64] */;
    %1117 = @func_1417(%1116) /* ty=(Tensor[(234), float64], Tensor[(?, 10), uint8], Tensor[(1, 10), bool]) */;
    %1118 = %1117.0;
    %1119 = cast(%1118, dtype="float64") /* ty=Tensor[(234), float64] */;
    %1120 = %1114.0;
    %1121 = tan(%1119) /* ty=Tensor[(234), float64] */;
    (%1120, %var_5716, %1121)
  };
  %1122(%var_5725) /* ty=(Tensor[(1, 10), bool], Tensor[(234), float64], Tensor[(234), float64]) */
}

def @func_7882(%var_7880: Tensor[(1, 234), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 234), float64]) {
  @func_7879(%var_7880) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 234), float64]) */
}

def @func_8520() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  %1127 = fn () -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
    %1123 = @func_5192() /* ty=(Tensor[(1, 10), bool],) */;
    %1124 = @func_1736() /* ty=(Tensor[(1, 10), bool],) */;
    %1125 = %1123.0;
    %1126 = %1124.0;
    (%1125, %1126)
  };
  %1127() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_3428() -> (Tensor[(1, 10), bool],) {
  %1128 = @func_3236() /* ty=Tensor[(1, 10), bool] */;
  (%1128,)
}

def @func_3197(%var_3195: Tensor[(77), float32], %var_3196: Tensor[(528), int32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(528), int32], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(810, 77), int8], Tensor[(810, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(1, 10), bool]) {
  %1187 = fn (%var_3054: Tensor[(77), float32], %var_3055: Tensor[(528), int32]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(528), int32], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(810, 77), int8], Tensor[(810, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(1, 10), bool]) {
    %1129 = @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %1130 = cast(meta[relay.Constant][52] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %1131 = cast(meta[relay.Constant][52] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %1132 = reshape(%1130, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
    %1133 = reshape(%1131, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int64] */;
    %1134 = cast(%var_3054, dtype="float32") /* ty=Tensor[(77), float32] */;
    %1135 = cast(%var_3055, dtype="int32") /* ty=Tensor[(528), int32] */;
    %1136 = cast(meta[relay.Constant][52] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %1137 = reshape(%1134, newshape=[77]) /* ty=Tensor[(77), float32] */;
    %1138 = reshape(%1135, newshape=[264, 2]) /* ty=Tensor[(264, 2), int32] */;
    %1139 = reshape(%1136, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %1140 = @func_2289(%1137, %1138, %1139) /* ty=(Tensor[(1, 10), bool], Tensor[(77), float32], Tensor[(11, 7, 2), bool], Tensor[(810, 1), bool], int32, Tensor[(264, 2), int32], Tensor[(360), int64]) */;
    %1141 = %1140.3;
    %1142 = cast(%var_3054, dtype="bool") /* ty=Tensor[(77), bool] */;
    %1143 = cast(%1141, dtype="bool") /* ty=Tensor[(810, 1), bool] */;
    %1144 = equal(%1142, %1143) /* ty=Tensor[(810, 77), bool] */;
    %1145 = cast(%1144, dtype="int8") /* ty=Tensor[(810, 77), int8] */;
    %1146 = cast(%1141, dtype="int8") /* ty=Tensor[(810, 1), int8] */;
    %1147 = bitwise_xor(%1145, %1146) /* ty=Tensor[(810, 77), int8] */;
    %1148 = cast(%1147, dtype="int8") /* ty=Tensor[(810, 77), int8] */;
    %1149 = shape_of(%1144, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1150 = cast(%1144, dtype="int8") /* ty=Tensor[(810, 77), int8] */;
    %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %1152 = @func_2454() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %1153 = %1152.0;
    %1154 = cast(%1141, dtype="bool") /* ty=Tensor[(810, 1), bool] */;
    %1155 = cast(%1153, dtype="bool") /* ty=Tensor[(1, 10), bool] */;
    %1156 = not_equal(%1154, %1155) /* ty=Tensor[(810, 10), bool] */;
    %1157 = cast(%1156, dtype="uint64") /* ty=Tensor[(810, 10), uint64] */;
    %1158 = cast(%1153, dtype="uint64") /* ty=Tensor[(1, 10), uint64] */;
    %1159 = left_shift(%1157, %1158) /* ty=Tensor[(810, 10), uint64] */;
    %1160 = cast(%1153, dtype="float64") /* ty=Tensor[(1, 10), float64] */;
    %1161 = cast(%1141, dtype="float64") /* ty=Tensor[(810, 1), float64] */;
    %1162 = minimum(%1160, %1161) /* ty=Tensor[(810, 10), float64] */;
    %1163 = cast(%1156, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
    %1164 = shape_of(%1162, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1165 = cast(%1162, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
    %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1167 = greater(%1165, %1166) /* ty=Tensor[(810, 10), bool] */;
    %1168 = cast(%1167, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
    %1169 = shape_of(%1159, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1170 = cast(%1159, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
    %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1172 = logical_or(%1170, %1171) /* ty=Tensor[(810, 10), bool] */;
    %1173 = cast(%1167, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
    %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1175 = cast(%1172, dtype="bool") /* ty=Tensor[(810, 10), bool] */;
    %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1177 = @func_1488() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */;
    %1178 = cast(%1147, dtype="float64") /* ty=Tensor[(810, 77), float64] */;
    %1179 = @func_2815() /* ty=Tensor[(1, 10), bool] */;
    %1180 = %1129.0;
    %1181 = @func_190(%1132, %1133) /* ty=Tensor[(8, 5, 9), int64] */;
    %1182 = minimum(%1150, %1151) /* ty=Tensor[(810, 77), int8] */;
    %1183 = less(%1175, %1176) /* ty=Tensor[(810, 10), bool] */;
    %1184 = %1177.1;
    %1185 = sinh(%1178) /* ty=Tensor[(810, 77), float64] */;
    %1186 = @func_2364() /* ty=Tensor[(1, 10), bool] */;
    (%1179, %1180, %var_3055, meta[relay.Constant][52] /* ty=Tensor[(360), int64] */, %1181, %1182, %1183, %1184, %1185, %1186)
  };
  %1187(%var_3195, %var_3196) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(528), int32], Tensor[(360), int64], Tensor[(8, 5, 9), int64], Tensor[(810, 77), int8], Tensor[(810, 10), bool], Tensor[(1, 10), bool], Tensor[(810, 77), float64], Tensor[(1, 10), bool]) */
}

def @func_7285(%var_7283: Tensor[(5, 14, 15), float32], %var_7284: Tensor[(5, 14, 15), float32]) -> Tensor[(5, 14, 15), float32] {
  @func_7281(%var_7283, %var_7284) /* ty=Tensor[(5, 14, 15), float32] */
}

def @func_7824(%var_7818: Tensor[(11, 7), float32], %var_7819: Tensor[(154), float32]) -> (Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(11, 7), float32], Tensor[(154), float32]) {
  %1188 = @func_6739() /* ty=(Tensor[(1, 10), bool],) */;
  %1189 = cast(%var_7818, dtype="float32") /* ty=Tensor[(11, 7), float32] */;
  %1190 = cast(%var_7819, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1191 = reshape(%1189, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %1192 = reshape(%1190, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1193 = @func_1064(%1191, %1192) /* ty=(Tensor[(1, 10), bool], Tensor[(11, 7, 2), float32], Tensor[(77), float32], Tensor[(154), float32]) */;
  %1194 = %1188.0;
  %1195 = %1193.1;
  (%1194, %1195, %var_7818, %var_7819)
}

def @func_10001() -> (Tensor[(1, 10), bool],) {
  @func_9999() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_5482(%var_5480: Tensor[(13, 8, 9), float32], %var_5481: Tensor[(13, 8, 9), float32]) -> (Tensor[(13, 8, 9), bool],) {
  %1203 = fn (%var_5453: Tensor[(13, 8, 9), float32], %var_5475: Tensor[(13, 8, 9), float32]) -> (Tensor[(13, 8, 9), bool],) {
    %1196 = cast(%var_5453, dtype="float32") /* ty=Tensor[(13, 8, 9), float32] */;
    %1197 = log10(%1196) /* ty=Tensor[(13, 8, 9), float32] */;
    %1198 = cast(%var_5475, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
    %1199 = shape_of(%1197, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1200 = cast(%1197, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
    %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1202 = greater_equal(%1200, %1201) /* ty=Tensor[(13, 8, 9), bool] */;
    (%1202,)
  };
  %1203(%var_5480, %var_5481) /* ty=(Tensor[(13, 8, 9), bool],) */
}

def @func_9398() -> Tensor[(4, 7, ?), int8] {
  @func_9396() /* ty=Tensor[(4, 7, ?), int8] */
}

def @func_7468() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_7466() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

def @func_590() -> (Tensor[(1, 10), bool],) {
  %1207 = fn () -> (Tensor[(1, 10), bool],) {
    %1204 = cast(5 /* ty=int64 */, dtype="bool") /* ty=bool */;
    %1205 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 10), int64] */, dtype="bool") /* ty=Tensor[(1, 10), bool] */;
    %1206 = less(%1204, %1205) /* ty=Tensor[(1, 10), bool] */;
    (%1206,)
  };
  %1207() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_9911(%var_9908: Tensor[(10, 6, 11), bool], %var_9909: Tensor[(10, 6, 11), bool], %var_9910: Tensor[(11, 7), float32]) -> (Tensor[(10, 6, 11), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(8), float32], Tensor[(10, 6, 11), int8], Tensor[(24, 22), int32], Tensor[(11, 7), float32], Tensor[(1, 10), bool]) {
  @func_9906(%var_9908, %var_9909, %var_9910) /* ty=(Tensor[(10, 6, 11), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(8), float32], Tensor[(10, 6, 11), int8], Tensor[(24, 22), int32], Tensor[(11, 7), float32], Tensor[(1, 10), bool]) */
}

def @func_1015() -> Tensor[(1, 10), bool] {
  @func_1013() /* ty=Tensor[(1, 10), bool] */
}

def @func_1631(%var_1629: Tensor[(3, 78), float64]) -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) {
  @func_1628(%var_1629) /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool], Tensor[(3, 78), bool]) */
}

def @func_1736() -> (Tensor[(1, 10), bool],) {
  %1208 = @func_902() /* ty=(Tensor[(1, 10), bool],) */;
  %1209 = %1208.0;
  (%1209,)
}

def @func_2680() -> (Tensor[(1, 10), bool], Tensor[(1, 10), bool]) {
  @func_2678() /* ty=(Tensor[(1, 10), bool], Tensor[(1, 10), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen306/build/output.py:3500: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen306/build/output.py", line 3505, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cast_reshape_equal_cast_divide_kernel0(double* __restrict__ T_divide, signed char* __restrict__ placeholder, uchar* __restrict__ placeholder1, double* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1170) {
    T_divide[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (((double)(((bool)placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]) == ((bool)placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]))) / placeholder2[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}

extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cast_asinh_kernel0(float* __restrict__ T_asinh, uchar* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1170) {
    T_asinh[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = asinhf(((float)placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]));
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


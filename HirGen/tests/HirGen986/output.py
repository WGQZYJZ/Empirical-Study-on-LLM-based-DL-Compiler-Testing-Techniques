import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_246 = relay.var("var_246", dtype = "float32", shape = (11, 10, 11))#candidate|246|(11, 10, 11)|var|float32
uop_247 = relay.atan(var_246.astype('float32')) # shape=(11, 10, 11)
output = relay.Tuple([uop_247,])
output2 = relay.Tuple([uop_247,])
func_296 = relay.Function([var_246,], output)
mod['func_296'] = func_296
mod = relay.transform.InferType()(mod)
var_297 = relay.var("var_297", dtype = "float32", shape = (11, 10, 11))#candidate|297|(11, 10, 11)|var|float32
output = func_296(var_297)
func_298 = relay.Function([var_297], output)
mutated_mod['func_298'] = func_298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1015 = relay.var("var_1015", dtype = "float64", shape = ())#candidate|1015|()|var|float64
var_1016 = relay.var("var_1016", dtype = "float64", shape = (15, 14, 9))#candidate|1016|(15, 14, 9)|var|float64
bop_1017 = relay.mod(var_1015.astype('float64'), var_1016.astype('float64')) # shape=(15, 14, 9)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
const_1031 = relay.const([-7.265954,-5.278868,-6.530602,-0.663871,4.905966,6.339093,4.339337,7.971910,-8.964364,-4.550488,8.902956,1.185068,4.543911,9.402051,-4.514984,2.243825,-1.675746,6.779668,-0.643352,4.213717,-3.239268,-8.708528,-6.876616,-7.182208,-3.279330,-1.509268,9.181456,-3.828722,1.619991,-3.231310,5.172323,-4.270124,5.485704,-9.504988,0.559082,6.629778,-3.196705,-0.942694,8.870036,7.172657,6.233790,1.997922,3.328994,8.072487,3.970865,0.889854,3.029741,-5.019443,1.507790,5.992050,-9.466590,-2.025386,-5.962873,-3.286883,4.289061,1.951480,9.305004,-7.483160,-6.085698,-7.408923,3.085621,-0.676752,9.438494,4.553203,3.667659,-1.629439,6.987865,-3.864835,5.322611,-4.901362,-2.770648,1.421005,-8.527627,2.710165,7.965739,3.176195,1.770629,5.780721,-6.709111,4.451323,0.504760,-0.686906,8.058386,0.585744,0.394227,3.347807,2.536830,4.883739,-5.783978,8.719157,-7.156898,-8.266155,-6.932838,8.350181,-9.478503,5.503828,-4.699668,7.293162,-1.078725,-5.041174,-9.525709,-2.490621,-6.066074,1.935312,-4.463709,-3.426630,9.777043,-9.989304,-8.277867,7.010759,-0.682863,8.746962,-9.333040,-6.616939,2.536036,-0.184017,8.862695,7.472281,-2.509993,-7.875111,4.484803,-9.422087,-3.379547,6.882474,-4.674577,9.000713,5.205133,7.991875,2.474870,-2.334564,-5.523174,-8.017935,4.796605,1.251679,5.802190,-9.953981,-0.901113,2.277174,2.356193,5.432407,9.538425,7.863528,6.858069,-4.183050,-2.619852,8.455747,1.583999,-5.306067,-2.228226,1.650716,-4.833785,-9.088920,-2.182718,4.657111,-1.445294,3.517402,9.931953,-2.202896,6.921186,-9.767788,-2.519554,-9.668324,8.241730,-4.995963,-3.115850,4.527450,-0.700112,2.166672,-1.131916,-9.853152,5.344223,-0.194825,-9.770561,-3.043357,-1.997135,-1.527765,-7.663843,-7.449745,9.446269,2.437347,-2.704464,-5.602288,6.213412,0.238463,-4.870538,-3.656370,5.882450,0.101623,-9.475880,9.250150,-6.437497,7.616516,-9.530664,-5.168183,-1.839468,6.008358,9.103979,6.823020,4.232625,-7.270403,4.385631,-1.373332,7.456234,-2.908653,8.126301,-5.376485,2.182132,-8.218716,-6.513527,-7.599176,1.296766,9.633910,6.398468,8.567474,-3.685102,2.856677,-8.091924,-8.843267,1.528517,0.939809,1.875388,-0.375045,6.112365,-8.211218,9.922601,0.954680,2.773801,3.506415,0.164156,0.868413,-3.532970,3.531244,-3.388018,3.155980,5.161363,-5.542384,-6.488881,8.487446,-8.578571,9.129163,-1.355829,-7.484036,-8.343851,1.732242,-8.614042,6.399321,9.433021,1.023192,-0.700751,6.519697,-3.461330,-3.613924,-9.550084,-5.292467,-1.095567,-7.265982,-9.617522,-4.641869,0.128043,0.810717,-8.653670,-1.504688,3.078401,-4.288964,-9.953280,5.820139,4.222707,-6.890686,-3.990585,-3.253547,-2.103450,3.211242,2.238893,8.709630,3.223712,-3.622021,4.240558,5.810370,0.510132,2.538454,7.977579,-5.774435,-8.341854,-9.861501,1.878753,9.339335,-3.073389,7.709696,-6.330323,-5.340722,2.583246,-6.579507,3.314684,8.681214,6.223044,3.429610,-5.547306,0.164531,-5.168479,0.896452,8.610459,8.586473,1.297961,8.624448,-1.112558,-9.760484,0.399868,-6.276682,-6.171013,3.354441,-8.263746,6.318748,-3.268313,-7.781453,-8.776546,-7.580950,-0.285478,3.649272,-4.746764,-5.776321,-6.478774,-7.909415,8.108757,8.096380,5.578811,5.658557,4.524609,-5.461651,8.783700,-0.815792,-2.824670,0.586394,-9.378989,-9.806566,-7.188436,4.753617,7.458440,-2.839927,6.122418,9.532387,-1.810497,-1.681005,9.838131,7.002149,6.053836,-5.191524,-2.973274,6.999928,3.611944,-6.420211,-1.786396,-4.944619,2.510623,-2.945790,-1.562711,8.359102,-2.179675,-6.418563,-6.983876,-6.380724,3.675953,1.002232,2.310076,2.470653,5.777819,-0.518749,3.310151,9.220130,3.170131,9.514713,9.799688,-1.058737,5.372501,3.565257,-3.081902,6.578478,0.299573,9.127763,7.406821,8.126245,-9.989778,-0.804968,-4.444400,4.095663,0.442786,-8.300072,0.212310,-4.160898,1.902973,2.647043,-1.768272,-5.588493,5.618354,-7.638777,-3.416652,2.189692,6.116433,-8.249649,-2.805038,9.948535,4.367064,-8.250530,-1.452666,3.268015,0.773863,4.100624,7.776344,4.057308,6.253728,-1.475182,4.909288,9.120664,1.096029,-3.866849,2.821648,-7.967466,1.684599,1.065086,2.266286,-9.066974,7.388697,-3.891440,0.917451,-9.282955,1.687663,-0.602982,-7.139403,5.031899,9.935175,7.993953,8.212406,0.594921,0.525071,-6.637573,9.281497,2.818917,-9.050289,-7.968310,6.986236,8.607813,7.074060,4.749429,4.332143,5.741520,-9.400380,7.201618,-6.520407,6.096064,6.264103,6.473885,-2.179543,-2.413252,-7.272551,-2.664060,9.321372,7.051591,4.141459,-7.131876,3.640030,4.729557,1.493637,-1.281422,-5.627277,2.715722,2.707727,-5.563176,1.785438,1.416432,1.174438,9.830287,7.029367,1.196996,3.958087,6.594228,-6.932574,-0.231607,5.797175,6.710066,-5.622283,2.236548,3.477902,9.708014,-0.318634,2.810259,-9.603160,-5.888181,2.609625,-9.265371,-8.732614,8.669881,3.857328,-0.451130,-8.673495,-1.294502,-1.877190,1.765991,0.853777,-5.433732,5.610349,-5.031600,-5.893780,2.020748,-9.785266,-2.931099,1.205244,6.630077,0.102476,4.439514,-7.953549,9.374618,2.246607,-7.470716,9.911478,9.992241,-8.816980,3.233005,-5.444876,-6.081294,-9.011842,4.373247,6.669514,-7.962866,-4.545459,-0.040463,1.731291,2.081663,-1.902741,-4.277633,-2.708130,-2.565409,2.784596,7.227482,-6.449878,-2.844825,-7.297970,-0.781334,9.967236,7.169557,-7.535830,-1.675821,1.750746,9.731728,6.754141,8.957656,1.465928,5.594047,3.813489,-2.920739,-8.149370,1.798070,3.215638,-6.758463,-2.871126,-1.633028,-4.773845,3.807331,8.424957,6.858155,-2.109363,-4.394523,3.141615,-5.327980,7.902724,-6.144039,3.167053,-6.114151,-2.276628,0.404295,-0.279592,0.405641,-5.227714,-0.620525,2.987327,3.667077,5.972838,0.366328,7.651554,2.867119,3.369059,-5.461716,7.998098,8.844261,-3.701762,3.335855,-4.329483,5.345453,0.473448,-4.680785,2.663304,-8.182790,-2.139643,8.025134,0.286776,-1.472220,3.292430,0.962183,4.138183,-6.062875,-6.582454,7.004692,-6.004346,2.436906,-2.845039,1.346974,8.450566,-3.028394,0.466937,5.922315,8.888483,0.707676,2.178511,5.825503,7.569839,-4.344973,7.768462,8.072338,-0.605725,8.190691,-1.695999,-5.486115,-0.328231,1.829813,5.478360,-4.608996,-2.611121,3.703106,9.823490,4.313516,-8.090407,-2.336238,2.675094,7.082176,-0.025787,-5.447854,2.635109,2.774396,-8.421596,-4.772158,8.938408,-6.580831,-9.618275,0.581736,-2.393233,1.000169,-3.813774,3.158393,5.178625,5.278024,5.427308,-4.500930,8.554254,3.715246,0.708823,4.622232,-6.635755,-1.826862,0.240169,-0.548677,-2.309199,-0.229793,4.222535,-7.976078,-5.124573,6.549320,-8.793529,1.689786,0.401114,6.719906,-7.760393,1.571549,-3.364303,4.992783,-9.847285,8.400609,9.722889,8.800114,7.103484,6.909589,-5.332166,-6.487255,5.924318,-5.865248,-5.337176,5.831079,-5.904339,6.163423,-8.254831,-3.448379,0.145415,-5.859864,0.392548,0.243152,8.053193,-8.122701,9.259140,-6.203345,-9.140574,4.253108,-5.005771,2.971260,-3.546769,2.928533,-0.004951,5.501549,-4.888469,-0.440172,5.431005,-3.713867,2.223830,-5.850467,3.523386,8.512691,4.220083,-0.671419,2.516442,-9.669980,9.276443,-3.963541,6.545307,3.003826,8.407411,2.688609,2.414195,-8.595717,1.687588,-9.237545,3.472390,-5.146244,-1.626538,2.094781,9.077833,6.909827,7.039959,-4.276438,7.729689,-4.100807,1.809695,-1.177885,-8.421400,1.984973,6.283375,-1.198035,3.723357,-3.889756,-1.682038,0.099659,3.529753,-8.053947,5.170308,-9.816865,-2.430043,8.510786,-5.849148,-2.035970,-6.395935,-0.501311,9.742344,8.797038,-9.039759,4.215160,1.186415,-2.761704,4.110902,8.479167,2.527706,-8.754368,6.683984,7.212502,3.109804,-5.156751,-7.001723,6.311349,8.788260,-7.058084,-1.287720,-5.305111,5.815362,5.123290,9.417883,3.828291,-4.912155,-3.940832,0.626713,5.797110,-8.021840,9.416039,8.973429,-2.907935,5.851049,-8.912347,-6.439661,4.674923,7.567825,4.710107,6.173254,4.035986,-1.783416,9.121790,6.634396,-3.947723,-8.627706,-9.073133,-2.443603,6.984599,-3.101430,-7.583246,-4.986970,-9.755927,-1.330061,3.934726,-8.376135,0.923054,-4.183958,-5.596617,2.667879,7.042352,-1.243381,5.539197,1.869085,-1.933192,-6.458862,-6.564607,-3.197378,-8.733833,-5.736643,6.960705,-0.439265,7.232917,3.131517,3.131808,-1.823750,0.240406,-2.340502,-8.474446,7.551156,1.246786,7.270567,-8.507693,-3.822818,-3.740126,-3.366591,8.782057,-2.707534,-8.973304,6.849069,-9.064400,-2.386676,-3.603156,5.382718,-6.842103,-0.959704,-3.199272,-1.154931,5.763475,-7.954070,9.960987,4.355085,0.673180,-3.147836,-6.479267,7.711335,3.250962,-6.636424,9.930132,-2.048782,-1.084282,7.723806,-2.868580,2.102276,3.447111,1.064042,6.175910,8.068868,-8.281481,-1.956618,5.357010,-5.685326,0.304888,4.678721,-3.251891,7.215373,-7.711313,3.101410,-0.438079,-5.079222,-1.269035,-8.769183,8.462676,5.106927,0.333099,-5.014075,7.594056,-7.589595,0.338941,0.074642,7.603360,-8.940608,-4.527940,4.576008,-9.580253,-4.278755,6.345410,-1.647395,-0.075352,5.825783,3.263228,6.784693,-9.288253,-9.140775,1.384534,4.549305,-6.442798,-0.441455,9.688513,6.008962,7.842205,1.520795,-4.543782,5.432671,3.870232,0.661778,-7.405783,1.374787,-8.044314,-3.598802,-9.313759,-5.232859,4.939866,1.370525,-0.772141,6.069928,-5.719913,6.737021,-0.245555,8.216544,8.105651,6.810585,5.943582,-3.322984,-0.087074,8.837684,-8.058501,1.585912,-9.674710,-7.426540,7.751283,6.670054,-0.313898,-5.809169,0.045283,-7.413912,-5.760233,0.972461,5.704734,5.489335,-7.554274,-4.190041,0.317816,1.971815,-4.089030,-6.308662,5.062658,6.267919,-3.152292,-0.111081,4.698608,-7.487028,-8.554150,-0.270932,5.877637,3.655841,-5.346345,-1.591185,2.149765,-4.915949,-8.030731,6.596196,-5.066503,4.302842,6.396334,-5.227109,7.336883,-1.466172,-2.291285,1.227173,8.827800,-9.280780,-9.088686,3.482661,-0.976962,1.261163,-1.357929,-4.438011,3.163354,-1.173898,3.071240,3.962518,8.916011,2.944273,-8.915837,-0.943985,3.613575,-2.729348,3.629144,-9.633197,6.970281,-2.706431,-3.333609,-8.091423,9.086284,-5.218482,7.135160,1.076909,-9.924235,5.107907,1.338500,-6.974278,-2.754658,-8.910744,-5.909611,3.535129,-4.937936,2.450644,-4.396853,-5.760993,-7.527895,-8.661647,-9.306261,3.220350,-4.196724,-0.484234,-4.738484,2.738156,5.771351,-0.804343,-8.225974,9.028970,-8.202207,6.508532,-0.100818,-4.466054,3.160862,-4.294389,-6.364094,-2.049663,-2.602316,-5.632273,4.167470,7.354695,3.521416,-0.767731,0.019174,-3.282262,-3.879745,-4.006488,8.077360,-6.447096,-2.794089,-4.524099,-5.777235,7.042716,5.674748,6.244110,6.217424,6.882195,-6.237395,-8.340667,7.059432,1.656715,4.567211,-6.980643,-0.711446,7.397612,-4.346199,8.567731,-8.491291,8.772824,-8.751056,-4.012528,-8.655580,-6.057867,0.837238,-7.587379,9.191097,-4.002181,-0.594066,4.037738,0.153480,2.351261,8.637589,-0.199813,8.235258,9.251103,-7.945618,-4.487705,-8.237876,-6.256712,2.505735,-5.575388,-8.214659,4.659263,-4.412478,-2.173444,8.828213,3.570554,-1.150159,-3.823124,8.686182,-9.671543,6.525189,-4.574277,1.378672,4.553445,-0.367556,-0.445111,9.436192,0.835990,-3.717661,8.148261,6.687643,-8.962152,1.795256,5.748983,8.889504,-7.582069,-4.877736,-7.406929,1.804907,1.836586,5.319261,0.634274,3.017540,-4.077517,-7.650381,-9.329585,-8.574268,8.637467,8.518850,1.933941,-9.457584,-3.466968,-2.842896,0.178437,-7.458275,7.209915,-6.331290,-6.292478,5.110951,9.405159,2.501563,6.425794,9.658891,6.322301,-7.612280,7.037733,-6.893491,1.868532,-4.165544,6.643049,5.522230,-0.365419,3.009559,-5.602871,-1.369344,-2.731247,9.477915,4.776310,-7.437946,2.564834,8.901360,-2.134915,-2.118613,4.259141,-1.845822,-6.274207,9.496522,9.238287,7.330228,-1.755018,0.955711,5.599271,-5.511208,4.762504,9.726948,5.940231,5.645142,9.415567,-0.275968,-6.216585,6.896933,-2.445759,-9.887362,1.081718,1.098652,9.841576,-4.316930,6.441176,3.597664,5.093078,-4.548226,-3.372760,-5.587896,8.672045,-4.785199,8.235120,-0.597465,-3.969949,8.237709,1.652299,2.943764], dtype = "float32")#candidate|1031|(1210,)|const|float32
call_1030 = relay.TupleGetItem(func_296_call(relay.reshape(const_1031.astype('float32'), [11, 10, 11])), 0)
call_1032 = relay.TupleGetItem(func_298_call(relay.reshape(const_1031.astype('float32'), [11, 10, 11])), 0)
output = relay.Tuple([bop_1017,call_1030,const_1031,])
output2 = relay.Tuple([bop_1017,call_1032,const_1031,])
func_1041 = relay.Function([var_1015,var_1016,], output)
mod['func_1041'] = func_1041
mod = relay.transform.InferType()(mod)
mutated_mod['func_1041'] = func_1041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mutated_mod.get_global_var('func_1041')
var_1043 = relay.var("var_1043", dtype = "float64", shape = ())#candidate|1043|()|var|float64
var_1044 = relay.var("var_1044", dtype = "float64", shape = (15, 14, 9))#candidate|1044|(15, 14, 9)|var|float64
call_1042 = func_1041_call(var_1043,var_1044,)
output = call_1042
func_1045 = relay.Function([var_1043,var_1044,], output)
mutated_mod['func_1045'] = func_1045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1088 = relay.var("var_1088", dtype = "float64", shape = (15, 13, 15))#candidate|1088|(15, 13, 15)|var|float64
uop_1089 = relay.rsqrt(var_1088.astype('float64')) # shape=(15, 13, 15)
output = uop_1089
output2 = uop_1089
func_1091 = relay.Function([var_1088,], output)
mod['func_1091'] = func_1091
mod = relay.transform.InferType()(mod)
mutated_mod['func_1091'] = func_1091
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1092 = relay.var("var_1092", dtype = "float64", shape = (15, 13, 15))#candidate|1092|(15, 13, 15)|var|float64
func_1091_call = mutated_mod.get_global_var('func_1091')
call_1093 = func_1091_call(var_1092)
output = call_1093
func_1094 = relay.Function([var_1092], output)
mutated_mod['func_1094'] = func_1094
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1235 = relay.var("var_1235", dtype = "float32", shape = (14, 11, 15))#candidate|1235|(14, 11, 15)|var|float32
uop_1236 = relay.tan(var_1235.astype('float32')) # shape=(14, 11, 15)
func_1091_call = mod.get_global_var('func_1091')
func_1094_call = mutated_mod.get_global_var('func_1094')
const_1244 = relay.const([4.898122,-0.164176,0.618056,9.961186,-7.925538,2.458800,-5.007799,7.115520,0.919664,-0.068595,-3.827792,9.263935,2.634430,2.915686,-3.983972,-1.205831,3.686592,-6.056906,5.245524,-2.284546,8.712040,-8.328872,-5.130812,-4.264091,3.412199,4.064249,9.114907,6.113523,-0.066265,0.327959,6.777666,-2.942782,-4.940963,-3.100908,-3.642149,-7.815306,-8.792728,1.109442,-8.030220,-9.105969,4.970134,3.258628,-8.956315,7.585567,-3.658429,2.946962,0.056619,-3.419454,9.003709,1.747645,-9.286792,5.167965,-1.455998,3.722695,-5.696123,-6.299026,-9.414888,0.151362,-0.217850,9.752410,6.024813,7.355652,-1.772623,3.144503,-5.661148,-6.194467,-7.821391,6.376555,-7.082618,6.795349,-1.623490,-9.580342,-2.006301,1.861705,5.470218,0.377090,-7.820706,5.128184,-9.962121,-4.164376,5.119625,5.041957,-4.857306,9.453719,-9.979085,2.610948,-2.980555,5.047245,6.080551,-5.156847,6.851114,-4.585599,-4.862944,-8.945028,-1.660306,7.541298,3.012031,5.205147,8.956077,8.479506,2.946083,-5.829473,-9.676752,-1.161042,-0.093449,-3.030476,-1.941137,6.048862,-2.446807,-4.343979,-8.620921,4.254450,-3.433011,7.578487,9.507154,6.880003,-9.757805,-6.962597,0.302496,-4.218084,4.367273,9.731876,0.090323,-6.620147,2.527342,-4.138032,-3.305246,3.627038,-3.839759,-1.945920,6.649529,8.249706,2.228087,8.038835,-1.527660,4.175447,-7.308841,-4.050105,0.212335,-5.736044,8.151487,6.960988,-6.482377,-6.800879,3.587407,-4.554607,8.967233,-0.609080,4.666175,3.831229,-9.020680,-6.541707,-4.469635,-6.613378,4.026249,-6.006071,-5.623446,3.088304,-9.390870,3.412394,-9.105450,1.418307,9.637015,1.212225,5.324125,0.904670,4.603345,-1.606756,-7.798240,3.912954,6.780274,-0.359209,1.133202,-8.438488,4.863371,-4.465186,1.185887,0.141984,4.783109,-6.048118,-9.395265,-7.462539,1.047592,5.511180,-3.314369,6.058642,-4.371099,0.470985,8.959313,3.332603,9.790493,3.893506,4.667592,-4.828531,1.193474,1.592810,-3.648336,7.632398,9.786677,7.707975,6.479942,1.608968,-1.303934,-3.660807,3.373814,-6.131145,9.591257,2.718637,0.092227,6.309957,-8.151709,-6.537838,5.512607,-2.212397,-1.594284,-5.597817,3.879312,1.569960,-6.924267,6.462585,9.766012,-3.455395,3.983803,-5.921222,7.017380,9.546461,-1.661753,-9.763673,1.721623,-0.124895,-1.341772,-5.370738,1.124080,4.335710,7.615200,9.489443,9.356398,3.401662,5.984084,0.031336,6.523485,7.735048,-9.898119,3.724169,-2.599832,3.367598,-0.718405,-8.743718,9.650285,7.584749,0.324123,0.790293,7.506509,2.899093,-7.307824,8.982740,-8.101054,-9.750451,0.732118,-6.934002,6.813536,-5.667244,6.492023,9.665230,7.308213,8.522832,1.758839,7.862139,3.589975,-9.451319,0.847664,-8.122341,-3.662409,-6.340398,-2.565145,4.715010,-0.201881,-1.790284,2.686142,-8.310089,-2.604016,6.842808,-9.512810,-1.246844,0.307025,-2.632613,1.741171,-9.824701,8.687106,3.705585,-9.663702,6.162781,-2.943568,-5.953583,-1.637173,-3.058344,8.687788,-4.537402,-7.161011,1.115418,8.537330,-2.417480,-3.340888,-1.956517,9.562466,-8.662154,9.220684,-8.135769,5.309738,8.293795,7.954963,-0.139873,8.378023,5.024049,-8.426591,6.664669,-8.693122,-6.305070,6.305470,-4.421407,-6.472834,-5.346762,-2.997933,6.940336,9.104992,3.920153,2.688773,5.310561,0.505743,-0.317547,-5.210202,4.856600,-9.450594,9.963373,6.474897,-0.125469,-3.297808,3.177219,-0.998457,-7.420384,8.454158,-3.941278,-2.659691,0.946862,-9.733993,4.006386,5.849443,8.892285,-4.077644,3.351880,-3.560843,4.121820,-3.898328,-8.283598,6.678842,2.115850,-9.019897,0.533073,8.303309,-9.723260,4.791216,-3.616037,6.554012,-9.882225,6.564340,5.601025,5.920412,-1.725307,3.638471,-1.280522,-5.874370,0.343705,-4.055419,8.781151,5.061749,5.607164,3.127675,2.542511,-1.135326,-7.822300,-2.368171,9.106830,-0.822613,3.081683,-1.151982,-1.489669,5.675833,-6.667785,2.885411,-4.930678,6.179983,6.031425,2.014584,4.856827,-2.137435,9.814146,2.319807,-9.821534,1.953001,4.846526,-6.138054,-4.860711,2.067140,9.695013,-3.849128,5.543068,0.298702,-9.212526,-9.327939,-3.789154,4.871317,3.357185,3.561592,-3.327404,5.818108,-0.337729,2.137610,-3.666238,9.503357,5.319034,1.205433,-1.670742,1.201101,6.044629,-4.485726,-9.565475,-4.522038,7.755916,-2.655725,-3.880783,0.236750,4.188855,5.806296,-3.632858,8.129197,-3.682697,-9.757552,8.095187,3.479419,3.526714,1.694026,7.861374,8.256986,0.145576,-9.689971,-9.946090,-6.237326,-9.285393,8.834837,2.733716,7.907544,8.887398,-7.866039,6.162779,9.544628,9.036196,0.336940,-9.886884,5.891165,-5.947549,3.229379,-7.424400,-1.340755,2.491378,2.486180,-8.227616,-1.685102,-5.855235,-4.195133,-0.894834,0.151029,-3.641656,-3.099775,3.162594,-4.960972,1.195003,-2.399810,-6.567183,0.607708,-1.479302,-6.462744,1.838483,-4.570400,3.978118,7.689379,4.030152,2.153513,6.633896,-8.972047,-9.048114,-1.383215,6.625580,1.815552,1.798018,5.339275,2.745739,-7.529429,4.140451,-8.549768,-3.760039,-1.445862,-4.033566,8.427079,-2.413043,6.511125,1.807131,-0.188209,-5.540891,-7.291817,-7.123554,-4.576869,8.267068,-7.923741,1.963491,9.412785,7.834059,1.447951,9.298838,8.830893,5.783686,-8.608398,3.902141,0.763337,-6.101868,5.100895,1.102256,-7.400350,1.931725,2.205612,-9.935554,-2.275112,0.758356,0.840874,-5.319821,-0.020650,8.188971,-3.085017,1.180053,4.101550,2.092469,6.554511,-9.516119,0.416938,-9.960983,-8.686430,2.630883,-0.748534,0.667325,-8.239577,4.957296,1.913131,5.796039,2.853062,7.793680,1.762075,0.110865,9.889431,-4.149011,2.318643,-3.851934,7.038461,-0.175311,-8.450570,-8.553928,-5.790482,7.132073,-2.895883,5.165869,0.830142,-9.552103,-3.721006,0.144474,6.806558,-5.579112,7.092790,8.199776,7.206975,-4.383352,3.070322,-8.620813,-6.190326,0.064037,-5.139851,-7.957141,0.149540,-6.621176,8.664160,1.509926,-1.631706,7.915255,-9.638666,-6.437560,1.885356,7.354265,4.508078,-9.540180,3.031600,6.194989,-5.140088,-1.393551,-7.522097,5.556353,-8.498889,6.005142,7.367610,-6.821733,7.259395,1.789542,-6.864498,5.873810,-8.757938,1.498652,1.957649,1.094588,0.741522,4.493922,7.831038,8.021101,0.856205,-2.294106,6.345163,6.032983,6.649556,1.883452,8.960017,-4.007291,-1.019472,-0.698805,-5.365003,-7.159519,4.705645,7.250267,-1.847306,-6.416345,4.276043,-0.152985,-5.115250,2.383150,-7.280298,8.271228,9.889630,8.848398,4.318743,4.059184,-3.302068,6.962371,9.327272,-8.980196,9.573073,-6.950754,3.732456,-2.479865,-5.565793,7.081335,-0.857765,-2.416164,-1.562852,-1.511763,2.489897,2.537729,1.129933,5.588682,-2.392416,-7.603572,0.615692,-7.392489,-2.542122,-1.235972,8.230551,5.165505,-4.821574,2.370401,-5.363753,-7.274158,-0.358669,5.781987,9.851042,-5.191593,-4.153689,2.730395,5.221506,-8.699678,-8.309888,-2.565717,-4.150491,-0.689077,-8.296421,-0.122903,5.096118,-9.902567,-3.358965,5.432557,6.280269,2.094673,-8.238046,4.648843,5.889411,0.257015,-2.224318,2.844572,-3.000269,5.580217,4.618277,1.932318,-6.755975,-8.829356,0.645063,-6.999529,-5.654769,-6.956195,3.858853,-0.573716,6.275241,-6.245713,-5.748957,-2.566124,2.971645,5.790475,8.743716,0.443271,-3.307816,2.247783,5.440648,-8.428682,7.013166,5.045010,-4.460697,2.797252,9.420209,7.665108,8.662135,-8.644881,0.847294,-1.294658,-2.625797,6.618472,3.861681,-2.662983,-2.672404,-4.020935,5.685622,-3.849774,-5.908815,3.115126,-9.830709,7.788402,7.722087,-2.228212,9.192227,0.435300,8.956165,-7.474994,2.161645,7.589023,-8.598109,-3.265712,1.639790,3.721281,-3.172900,-7.618314,-7.342116,9.097109,5.914296,-5.188762,-5.409905,8.991745,-6.872804,-2.926522,-1.274648,-6.553677,-5.356966,2.996619,5.695097,9.484693,0.156125,-3.416307,4.920886,9.465717,-0.041905,5.142909,-4.244697,-2.384916,-6.887535,-0.844549,-8.778445,4.316945,3.023972,4.719361,-2.034071,1.913703,-6.106035,8.224925,2.637746,-1.085074,-6.053993,-4.522464,-0.393120,-9.911525,8.313295,-2.682850,6.313364,-1.004457,-6.641340,8.772093,-3.466477,-2.094039,5.822881,-5.477572,9.881201,-9.041507,-8.394505,-2.532802,7.067923,-1.210402,3.150933,-0.720253,-1.607747,-5.649854,-5.474589,3.045775,-0.914047,2.431704,9.198046,-4.678198,8.827643,5.574956,3.902537,-8.491841,-6.758940,4.399065,3.640882,-8.289893,8.204264,-1.296000,-3.162852,-4.679763,-6.758531,-0.897937,-2.312388,-3.412864,2.017555,5.696192,9.545268,2.691389,-6.361670,3.839764,0.116548,-7.959964,-8.412255,-1.026843,-9.878395,1.786840,4.453519,9.105022,-3.855238,8.923189,4.235026,-8.197945,-3.670488,-3.406292,0.251637,7.330238,7.636668,2.360548,-2.592282,-3.582917,-7.951815,9.334433,-9.159689,9.722428,-6.291625,-6.697088,-1.367390,-7.200020,6.865243,9.163981,8.691662,2.063077,-1.377134,-4.543687,-9.417019,-0.654894,3.222662,-9.834828,-7.351298,-2.710058,-3.927384,-8.451074,-4.733119,-0.022488,1.520883,-2.621760,-7.307833,9.923947,-6.864696,6.674097,-8.153654,4.455810,-3.249771,6.442047,-7.430523,3.945035,6.553015,4.023757,4.234367,0.659172,8.577696,3.561447,8.873906,5.501325,-9.224158,-4.707565,-6.616486,-1.227785,-9.734502,2.423213,-9.934550,8.116946,-0.411406,8.387375,-8.538822,-1.181736,-7.749086,1.145372,-6.712902,0.289998,-1.313819,6.924131,2.741925,7.541212,-4.372200,-6.382342,1.004492,-9.814668,-3.144712,9.491292,-0.699390,3.953297,1.198823,-6.487768,8.559359,7.790360,8.145390,-0.436856,-1.397557,-5.253961,-3.506524,6.287571,5.570151,8.547051,7.979414,-9.905220,-4.050243,-9.314283,7.027553,3.840960,-5.706033,-5.777805,2.235247,4.696557,-5.445777,-5.859452,-7.241502,-7.216759,7.363825,-6.478970,2.805682,-6.831323,-5.982769,2.996713,3.802135,-4.828516,8.893688,-1.092171,1.918543,4.271463,7.247032,-1.259631,8.103089,9.700251,-6.559137,-1.445122,4.356075,0.400066,8.220161,5.507952,8.159196,7.841439,-1.143798,5.245367,0.727484,8.980391,8.209327,-8.665800,-9.753740,2.193467,5.591645,-9.408079,1.679251,-2.139435,7.979142,1.107077,1.623562,0.932056,-8.307376,6.838369,5.101284,9.213478,-1.637705,-7.514032,2.017670,9.908390,6.855793,7.092798,0.034753,1.724100,3.237737,1.201128,8.830636,-9.970736,-0.083409,8.239245,-0.270315,-9.666142,3.567711,-1.104556,-9.142623,0.152161,7.677198,-1.648184,4.738699,5.462277,5.474894,8.260795,-4.443924,-7.250191,-3.128284,-1.393198,-0.678012,6.866249,7.769962,3.075200,-1.819808,4.027621,2.537014,-1.606834,-4.121943,-1.944857,1.733143,-2.628445,5.956648,-3.287235,9.079304,2.470463,4.971579,0.249794,-6.259776,-7.683563,5.532150,-8.189862,-9.396424,1.645209,1.897608,-3.855354,-0.323799,-0.401708,9.655445,4.153972,7.275589,7.136267,2.608757,-3.108705,1.594434,-2.438755,-8.815415,0.187489,-4.500540,6.295735,-9.458431,-1.285260,7.337220,5.243627,8.648391,6.024676,8.405020,5.444465,0.658109,-6.104999,-1.882054,1.198318,3.566555,7.322170,-7.746242,6.674842,-2.421686,2.181353,-7.496282,4.508551,7.032621,7.033600,1.087491,2.370320,-3.682928,0.824299,0.288679,0.029606,6.474924,-2.378880,-1.810884,0.447294,2.760369,-4.845582,7.560659,7.625563,-7.437201,4.443713,8.005554,-9.418241,-7.480725,-5.004130,-7.341941,-2.427516,0.058849,7.447362,5.349564,-8.086970,1.963538,-3.990816,-5.207642,5.786259,-6.033958,-3.115608,-8.641022,5.810453,-9.287202,-7.525922,-6.811888,4.149834,6.448661,5.801001,8.021223,8.743661,-0.113845,7.475534,1.676061,7.606343,2.630014,8.416597,-7.470005,-1.976120,-7.845684,7.383928,8.471062,-0.373107,-9.498206,4.249951,-3.993622,-8.112300,9.833502,8.920843,1.868581,-2.847426,6.127467,-7.442263,7.094851,-7.467434,9.500372,-3.438670,-4.827748,4.230633,-8.771696,-7.491779,2.292658,7.483540,-1.008074,8.179660,5.905093,-4.713486,8.403505,-5.946334,1.786032,-9.646718,-2.627541,-9.301829,-0.463288,3.034709,-5.265914,3.749701,4.080276,-5.760193,1.028095,3.600320,-1.559275,5.550438,-8.788140,-3.062702,1.761410,-3.603674,6.383976,-9.730598,-8.885889,-0.592017,-9.222819,-5.793467,-0.378267,3.496998,-9.914723,-3.908665,6.965386,-9.970620,5.724921,3.648751,2.596643,-6.747131,-4.601575,-2.032101,8.197321,-5.821545,-7.955103,4.473289,2.191603,9.774397,2.198630,-1.640395,7.693921,-4.994903,8.722053,6.839093,5.335823,1.935365,6.934053,-6.051836,-8.378960,-5.932130,4.343217,2.879339,-5.513942,-2.813520,-5.744344,-7.858387,3.796539,-4.580321,8.153739,9.421793,-9.868174,-6.779465,9.803687,-8.286341,4.267377,-1.412038,-0.086094,-9.379702,-9.673197,-4.875362,6.742343,1.165095,4.496019,-9.111646,5.325365,2.057256,-4.518780,9.053338,-0.479103,-5.065255,-5.654270,-1.022518,-4.260017,-7.739848,0.781885,-9.258753,0.151092,4.828494,1.196320,8.943473,0.277044,-8.609253,8.353442,3.842441,5.724823,0.358295,1.139959,-6.567547,-9.520425,-8.639383,9.279733,2.930031,-3.107691,1.419691,-6.368194,4.061236,4.626254,9.397131,4.286296,-0.025939,-0.667612,4.542012,3.726245,-0.858501,-2.585545,0.362998,0.599981,-7.396317,0.906470,7.385885,0.391684,-6.119938,0.922711,0.264331,-1.142862,6.317956,2.897956,-0.098079,7.245602,6.324990,-9.960070,7.688940,8.227174,5.190374,-0.538811,-5.944677,7.555601,-2.356170,-5.056883,-8.232154,-9.465573,-1.118296,-1.267005,-7.025338,4.484443,8.981029,4.806107,6.766771,-3.779196,4.284044,3.645696,-0.111257,-0.830839,8.329963,-0.828310,-4.640486,-1.030291,4.444103,2.356316,-5.281070,0.206405,-0.646556,-7.578682,1.943367,7.496618,2.567989,-4.214572,1.016692,5.009070,1.842315,-4.415855,-6.764505,-1.713356,3.448653,7.311893,-6.518009,9.320080,6.478501,-1.369048,5.569147,-0.581975,1.625635,-7.189818,7.574486,1.322543,-0.887011,-8.503519,-5.457990,-1.815435,6.532646,3.710855,-7.363499,-3.814146,0.951131,-9.684945,-5.504222,3.715352,4.762842,5.220930,5.022668,4.491344,-4.889998,-9.017782,6.918304,4.680209,2.192710,-2.824469,8.508152,4.937780,-8.766186,3.522501,-7.511817,-9.296997,3.247981,7.373676,-8.092147,-6.755380,-4.368207,-1.057127,3.453718,-8.304422,-6.423753,-3.191247,-2.676714,-2.796736,3.771898,0.122278,7.852579,9.383644,4.668442,7.869323,3.635075,9.925401,7.201456,4.245340,5.723995,0.128437,8.720633,8.856915,3.610847,-1.901703,-7.048364,4.469481,7.415694,-7.988024,2.883065,-3.375217,5.315529,-6.014141,1.861679,7.442238,-3.777630,3.302800,-2.378651,9.843646,-1.976971,-3.239752,0.791287,-6.867026,-6.119269,-9.226577,9.207701,-4.105210,-8.950073,3.434454,6.973341,-2.501333,1.808668,8.898874,-7.181038,4.751081,-4.258155,6.965285,2.483345,-5.246811,-0.795605,8.384494,7.685702,-5.220267,6.657322,-2.798371,-6.425170,-7.593707,-9.888533,1.746836,-7.215859,1.758502,-2.208199,-6.580464,8.273100,8.979589,6.824066,4.446420,2.778501,-8.384592,9.359682,4.537887,3.516286,5.848063,2.091377,0.658100,5.288984,-5.997609,3.414947,-9.843828,5.340880,2.893485,-9.157907,6.464834,-3.740486,-0.142073,-6.360442,-0.286733,6.810448,7.053898,-9.969165,-7.926511,-8.088962,-8.895601,-3.151633,-0.712312,-5.642586,-9.914656,-2.193649,-8.553102,-0.353411,-1.443634,-1.659827,-0.865981,-0.857963,-9.505934,-8.678307,-5.402854,5.757002,9.211350,0.044656,6.735333,2.242508,3.321948,-4.250968,-7.328530,-2.688960,2.417553,5.667653,8.132629,-9.599979,4.471493,-9.603445,0.865208,-4.383879,2.352798,-5.077775,6.462645,6.903017,5.656134,8.239119,-9.778753,-2.373251,-2.961393,0.127852,5.935465,-6.973716,0.916917,-8.427070,-8.194787,6.862438,4.707131,6.880745,8.572676,5.352288,-1.284203,-6.408999,-4.148288,-2.213339,4.066443,-3.217820,6.272770,3.595119,-6.557005,6.861028,-0.831398,-5.780878,-2.288214,-1.947634,-1.369828,-0.387634,-7.717588,5.339628,0.395059,-8.966776,-0.375310,4.087727,7.189676,-1.385638,2.278671,-3.055882,-1.641621,9.544286,-8.587381,-7.246897,6.449638,1.496167,1.226077,-0.625015,6.304947,9.593911,-8.090885,2.232047,4.119424,4.900210,-6.904673,-8.641768,-9.621334,6.383040,-8.960708,-0.874682,5.831336,3.703416,-5.629847,3.123435,-1.566340,4.215923,-3.725870,-3.084888,-7.697806,-2.990538,-5.051642,4.675503,-9.200614,5.225612,-4.483942,-6.105279,-6.053086,0.599295,4.702842,-5.430331,0.748266,-4.128733,-4.971041,-7.619783,-7.324203,5.260714,1.175642,-1.125627,-6.494849,-5.641175,7.726632,-2.105640,6.028281,-5.062789,-6.911219,-0.999179,1.337795,5.160380,-8.780571,-1.864171,-7.398824,4.132146,7.464619,6.643659,0.026589,-8.355962,-3.903002,-3.988193,-2.300016,0.025596,6.245389,5.729163,-2.259116,1.906514,-9.751009,-5.349667,7.464089,-0.154585,9.616589,-0.246217,-2.479373,9.837197,6.513960,-8.424670,-6.844588,4.439074,7.715870,-0.906737,8.733986,-0.780833,-9.313101,8.548518,-4.467680,-7.237326,9.755689,8.239040,8.672233,3.712678,-2.034448,6.493235,9.683052,4.149087,0.737542,-4.806216,2.810666,-9.819972,7.384303,4.744609,5.659131,1.780268,9.161211,-4.105346,3.914881,6.953055,4.617870,1.452277,4.009051,-8.547464,-1.464851,-6.456106,1.222777,2.220720,-3.196711,4.760535,-9.950799,-2.765581,9.959016,7.391258,-4.012855,-8.100190,2.134319,-6.800062,-0.528402,7.566024,-0.681862,-2.084646,-6.179623,-9.980935,2.751683,-1.806975,7.244719,6.269826,-7.282937,0.732166,4.791552,-8.630430,0.630389,-5.986819,6.486816,5.151682,3.521618,-1.338193,5.213723,-5.344506,-3.782474,4.265824,9.169893,-8.091812,5.012119,0.824896,4.748422,0.879170,-5.164345,0.918780,6.457870,8.199326,-6.604436,-4.493092,0.409047,-1.427674,1.083069,4.362205,-0.942030,-5.668566,6.172392,1.688029,-1.107840,-8.702602,-0.565638,-3.070711,-4.734022,-8.867246,8.792350,-6.045723,6.826188,-8.413552,-1.207719,3.174802,0.200133,-8.303964,0.306633,-9.932882,-3.663465,0.013298,-1.005638,-3.806027,7.890892,2.654269,8.059424,1.897208,7.063110,-5.497352,1.192873,-0.517615,0.946018,-1.594702,-0.858088,-0.230020,2.944499,9.081157,-0.343594,-0.434488,-3.734254,-9.906796,3.554531,-2.017333,-3.523671,5.149228,8.820250,-2.687068,-4.784150,7.070543,0.015615,-5.616205,2.441971,-2.057168,0.110746,-3.881350,4.912789,-7.827155,-1.130273,2.389513,2.017467,7.691938,-7.842872,4.065272,-8.305020,-4.630434,4.695665,-6.188475,-6.154188,-9.539943,0.988799,-7.383064,7.110280,5.879949,2.764221,-6.643785,7.421488,9.635493,-8.470852,2.585903,-0.411512,-2.414270,-5.353836,-4.291805,-0.933254,-1.713620,6.037429,-3.253075,7.633227,3.199168,-5.447205,8.588151,7.232474,2.642506,-4.273252,-1.848583,-5.657616,-4.694580,7.678086,-5.468031,2.442988,5.818084,6.616251,4.331137,8.174905,0.636014,9.151678,-6.913920,-6.496603,-5.121675,-2.838264,1.526129,4.835063,7.285795,-5.313025,-8.121021,-4.753587,7.372361,8.324281,0.283799,7.883512,-3.394518,9.291258,6.540020,3.487272,-0.011926,-9.378081,-1.547397,7.099390,-3.292051,1.884568,2.975536,-1.588900,0.260743,-0.618822,-2.552513,-6.309345,-5.486674,6.835402,9.540797,6.324878,-6.623680,4.440797,3.304137,-7.082230,-6.328040,9.351433,-0.589906,-1.895683,3.084876,-8.103673,-1.718458,0.122218,-9.685021,-5.397775,4.729803,-2.298938,1.570187,-0.513399,-1.187184,-1.266385,5.682960,7.478485,5.950720,6.198816,-8.416509,2.972985,-2.204142,1.020618,2.356533,-5.360529,2.857172,4.453039,-7.810800,4.734577,-4.977920,-9.188654,4.849899,1.141507,4.215624,-7.719609,-8.252416,9.145972,-6.431917,-6.420220,-5.481152,-0.545197,5.543208,7.658278,4.475009,-4.513290,-8.935872,7.255714,-0.874549,1.106381,-4.109783,0.892685,0.381110,6.051870,4.410331,3.628246,8.606926,9.667335,9.299546,-1.212684,-4.481099,0.782522,9.420912,-6.119143,1.844875,-2.571813,2.969824,2.813511,-4.431010,-3.855764,-2.517732,4.671855,3.405975,-4.199614,4.746222,-5.716070,3.295870,2.916459,-1.042405,8.490330,7.244875,3.566576,6.739941,1.061508,-2.799481,-1.671986,9.853320,-6.513644,-4.810288,-9.528122,8.555743,7.181832,-2.312562,-8.006152,8.176466,-6.660405,9.898216,8.129867,-7.618060,-6.089639,6.546661,1.257310,-6.412974,3.807782,-9.987889,4.891423,-2.383459,2.110876,0.035380,-4.294563,2.148449,2.807623,-0.064790,0.575040,3.757637,1.348519,-0.967844,0.834732,-8.246835,-5.491532,-0.532180,1.606246,-8.220969,7.459229,-1.204932,-0.227249,7.036578,-4.924977,4.266015,-1.461597,1.270292,1.063530,3.038929,-9.110648,8.419406,-0.454067,-5.149939,9.310876,-0.860412,-2.958798,-8.780798,-2.577258,-9.582730,7.818259,4.474266,-8.158976,-8.500659,-1.235860,9.978869,7.248575,1.597262,-1.683264,6.224744,1.282055,3.416848,-0.137546,-2.574250,0.594014,7.047511,-1.220699,-5.136987,2.476239,-5.246776,-7.924951,8.363516,5.141204,-5.000865,-7.526477,4.924170,5.570453,-6.252203,-3.627813,5.451903,6.681445,-8.612598,3.329068,2.002262,2.269618,-8.642487,2.530120,-2.109031,8.696636,-5.427978,-5.511996,3.748569,-4.891075,-3.907731,-4.420264,-7.656116,-9.152591,-6.027444,-2.854631,4.859269,5.564020,8.201657,5.717556,0.666276,-4.611174,-0.896586,2.071951,1.748319,2.961062,-6.623385,5.531428,-4.951299,-6.288419,1.624052,-9.064313,-2.768725,-2.312178,-9.113206,7.572747,-4.986853,6.559260,1.108717,-9.224716,5.334535,-8.474026,-7.037198,-9.618897,2.925119,0.743866,4.725477,6.222862,5.120847,-2.125156,0.644802,-7.625313,4.296202,3.110833,-6.739674,1.730064,2.894511,-9.172034,2.292505,-4.600866,8.807645,3.261679,5.107029,-0.352405,0.003276,-7.542766,9.899123,-4.843431,1.142200,1.790921,-6.444921,0.701655,-6.011303,9.692927,-4.386461,-4.594957,2.038531,5.620250,1.530220,3.407308,-7.223380,6.180599,-6.385995,-7.321856,3.041613,-3.951222,7.897634,-1.544422,3.643494,4.870056,4.395527,2.778560,-4.664795,-2.065790,-9.637880,-5.288725,8.341278,-5.437047,6.364607,5.626808,-2.674787,-9.675716,3.639095,3.047810,-3.588599,4.780549,9.756801,-8.108160,0.526455,6.454516,3.049374,-5.034755,4.680063,-2.614078,3.123952,-1.659972,7.547167,0.639158,7.104909,3.951410,-5.600708,6.147010,8.831085,7.417423,-5.055224,5.492145,-0.925995,9.771821,-8.690680,-6.058783,9.033113,-4.875948,-2.878820,-6.044650,-4.957963,6.528045,-3.906943,-2.489808,5.373703,-5.468139,-3.235443,1.611949,6.531500,5.727234,-0.124594,5.679578,-3.099453,0.173361,-2.673978,-5.475722,5.722752,2.352253,-5.674709,-6.821914,9.952952,-4.183900,-4.406885,-7.437571,-5.163865,6.676876,8.434661,-1.903135,-8.973884,-3.887363,0.983604,-8.823613,7.121186,-8.386648,9.987005,1.916082,1.943405,5.854415,3.505712,2.742557,5.800021,-3.708686,-6.498804,-9.199549,-4.350489,1.214902,4.568524,6.200685,8.518364,-3.357712,-1.537858,4.803606,9.688458,5.585103,-8.101934,-7.023314,5.592111,-2.832124,-3.937935,7.461068,-7.959597,-3.879704,-0.877922,-1.900613,-9.717015,-0.317616,-7.871987,-4.417775,-7.994675,-4.195939,7.605439,-4.063498,4.221272,-4.981786,8.686541,9.666199,-7.989151,6.925410,5.352532,-1.427911,4.558891,-5.366490,-9.452518,3.860320,-5.978072,1.164070,0.472513,-5.770227,-1.537405,-2.087228,-1.795210,4.725441,1.763981,9.596166,-4.075521,-5.817943,2.835534,6.438843,-5.710407,-8.493310,-5.460837,-6.000138,-2.603908,9.929058,7.257911,-9.685151,5.681575,-0.670371,9.768903,7.049026,3.893312,3.517425,-5.573808,-9.549524,4.371079,1.722440,-1.646382,7.863559,-6.650297,3.368447,-8.506642,-2.017788,-4.675612,4.440646,-3.787507,9.200030,-0.878019,-7.074637,-5.929788,2.955381,-6.172149,7.608879,-1.806688,7.258619,8.774094,-0.528893,-9.473468,4.698564,7.605970,-9.417939,8.246584,4.823197,-0.021783,-5.389151,-4.979681,7.421781,-6.924404,9.269521,4.330085,-0.212475,-7.991716,9.520312,2.796530,1.121887,9.345171,-5.839491,9.616394,-3.986518,-3.783043,-2.480175,0.339168,0.563381,4.218398,-4.924772,3.642957,5.930092,-5.475152,-4.848223,-3.868642,-8.097910,-5.542669,-8.259104,1.444977,0.922606,-6.106385,-2.958476,4.507034,5.540727,1.665070,-5.622984,-3.500997,-4.185987,-0.523201,-8.487341,-8.438504,-5.434019,-3.989315,-5.747911,6.468476,5.963647,-9.317035,9.258965,1.876970,-7.122950,8.152461,9.796640,-3.527678,-2.609203,-2.771969,6.874035,6.398701,7.505054,2.821344,7.154848,-8.317233,-5.878868,9.259181,-0.852462,-5.110700,0.067246,6.727762,-2.259786,-8.009512,-9.177673,6.237361,0.559970,8.740627,-8.476931,-7.373146,-7.704040,-7.722127,7.434608,-1.544680,-3.728949,-6.040975,-4.050685,-0.612435,-9.166124,2.172375,-9.595028,-4.336861,-2.618702,-7.454678,-5.564269,-8.325875,3.468676,9.393501,-6.340924,2.534490,4.911218,-1.815379,4.840268,-8.717015,9.690708,9.246532,-3.594082,3.023723,9.283781,-5.584203,1.833385,-0.456962,4.378040,6.529274,-6.206266,4.273014,3.885182,8.987224,-6.065035,-9.157573,-8.083728,2.527092,6.110759,4.427963,8.764984,6.876996,-9.276385,7.317697,5.825234,-4.784418,5.117895,3.386650,8.288677,-9.542529,-8.539859,-7.257211,-7.141264,-3.841475,-0.734206,-8.503953,1.031420,-8.537822,-7.982871,7.445275,7.077037,4.538794,5.805867,6.644348,3.522343,7.495551,-7.355293,-6.037173,4.165025,-6.979706,-2.021061,7.008765,-2.296338,-7.870972,-0.136101,5.628205,0.355824,-2.490298,1.340901,6.627324,6.909990,2.718368,-1.206708,-0.347228,-8.620079,-5.727215,-5.670638,-4.823753,4.412533,5.739182,-3.806603,9.076207,5.416734,8.812518,0.992073,5.717935,6.696372,-2.942980,0.745006,7.798792,-7.886912,-7.783119,-9.536884,5.870847,1.608142,4.617435,7.882697,5.376244,-2.286891,-5.635474,-9.697676,2.570554,-5.014917,2.620581,-7.141125,0.508470,-4.315907,3.588943,-1.892183,5.413433,7.873292,4.570197,2.264573,2.858341,7.688418,-3.021584,-6.225343,1.610889,8.496192,-4.375543,-5.326837,-1.718391,4.412659,6.198215,3.074235,-3.919286,3.350144,4.100046,-3.995240,-3.153991,-1.249491,9.926345,-7.175580,3.711982,-4.762489,-7.304209,9.889781,8.212781,-1.077477,-2.842923,0.693417,5.388542,4.344275,-6.019722,4.160487,8.216437,1.038458,-4.269366,-3.298051,4.278291,7.202583,1.548475,8.777732,-9.440721,2.833271,6.651650,5.747285,0.364003,4.538177,-2.081220,-5.401381,0.421459,1.683546,-4.000011,6.069352,-0.016271,8.944010,-5.215956,-2.103429,-9.727432,0.370396,3.573396,-9.347055,5.198290,-0.107403,8.501758,-0.822269,-0.707605,-0.527990,8.368918,-4.306095,9.187165,6.287272,-7.923292,-2.490765,0.742459,-5.112964,-8.114596,4.632325,7.746371,0.596780,-9.006559,9.456859,4.632301,8.968923,9.699600,-2.398001,8.658296,-6.087410,-6.321151,3.674898,8.444782,-2.041470,-6.251253,4.141262,0.713920,-9.298310,-6.005099,-5.918918,-3.179768,-8.090476,0.354003,-9.119838,-4.071726,4.387422,0.323399,-7.799527,-0.994691,-3.981795,-0.553677,-3.933693,-0.739530,-0.237981,-4.048123,9.729602,-5.982610,7.337985,-3.279247,2.843802,-5.738928,5.800428,3.138846,-0.585025,-9.765218,-1.227573,8.745753,-9.096902,-6.990038,-5.082775,5.379358,3.030570,-0.143100,-1.833806,-0.484691,1.944126,-6.770560,-7.680246,7.819147,0.901784,5.649737,-2.585605,1.887607,-2.289373,5.838529,-1.073551,-3.879343,0.535226,-3.146542,-1.506488,6.050904,-4.946222,-9.280655,5.571505,9.488763,-9.338363,-8.686570,8.671085,2.438637,1.393304,6.269716,-7.125392,8.903543,-5.473198,8.307290,-9.353207,-5.114828,-7.406480,5.659198,-4.270310,-2.799731,0.921681,-1.827772,-7.800451,5.473405,-0.615976,-8.292384,-8.831735,-7.140696,8.021836,0.297284,-0.880012,-6.392415,0.117257,-1.599066,4.316742,-3.559199,-3.091328,8.378460,-0.985119,-2.517554,8.764437,7.042333,3.304221,-2.563747,4.403546,-0.652907,-1.088050,-6.412317,2.896663,2.540034,-5.610427,6.424262,-1.558079,4.602644,3.136708,-1.585977,-5.753925,3.254939,1.776861,6.610085,1.204510,9.425176,-2.078719,9.709059,-5.251001,-4.568935,-0.182995,2.136783,1.272006,-2.974203,8.618175,0.445244,-9.627760,7.577111,1.429613,9.443329,-1.807625,-4.771293,-0.015079,-7.636391,-8.689563,5.616313,6.675233,-9.673590,-1.776599,5.482329,4.349167,9.704993,5.719610,5.212687,0.552448,-1.259535,1.861143,3.279131,-3.173493,6.586958,-0.833939,-3.407453,4.745765,-6.591877,9.845618,5.977446,7.180153,-8.069030,2.613195,7.208272,-7.512387,6.675459,-1.991660,-9.329344,-7.871408,9.210778,-8.006511,-3.107258,-3.595938,6.149507,7.216442,-5.752063,-5.129268,0.751905,2.334944,-2.786650,-1.225033,0.283707,-6.968031,-4.023552,1.733083,-6.911229,1.424958,-0.379003,3.917526,2.496372,-8.308486,0.122836,-0.499132,1.689967,1.410870,-9.960927,1.203265,-3.910925,0.021464,-7.248095,2.152112,-1.698517,-3.699527,-5.358215,7.124753,-1.096761,-2.929493,-8.442828,-9.547930,-6.824815,1.057287,-4.422145,-2.976404,9.795590,6.926743,6.739586,-7.694923,7.317794,-5.843677,-4.164943,4.901283,5.513499,6.061913,-9.655195,7.815095,7.844832,4.571279,7.089677,2.525388,7.417555,6.257781,9.496313,4.193408,-5.355904,-9.721775,2.807590,8.023294,3.254252,-3.759049,-0.834557,-0.528921,-1.555846,9.755998,-3.989345,-4.192500,6.858970,-7.993120,1.689592,6.586735,4.262075,6.584689,4.696081,4.833938,2.156077,1.922520,-6.878939,4.909090,5.054199,-3.155414,9.495532,-3.759938,-0.763297,6.555875,-5.548604,0.144333,6.498292,-1.568046,3.902628,2.120801,2.810810,1.398621,1.510360,-9.643584,1.188010,-6.980113,-2.740178,-0.529098,0.652984,-0.704409,-7.852345,2.311692,-6.923231,4.293000], dtype = "float64")#candidate|1244|(2925,)|const|float64
call_1243 = func_1091_call(relay.reshape(const_1244.astype('float64'), [15, 13, 15]))
call_1245 = func_1091_call(relay.reshape(const_1244.astype('float64'), [15, 13, 15]))
output = relay.Tuple([uop_1236,call_1243,const_1244,])
output2 = relay.Tuple([uop_1236,call_1245,const_1244,])
func_1246 = relay.Function([var_1235,], output)
mod['func_1246'] = func_1246
mod = relay.transform.InferType()(mod)
var_1247 = relay.var("var_1247", dtype = "float32", shape = (14, 11, 15))#candidate|1247|(14, 11, 15)|var|float32
output = func_1246(var_1247)
func_1248 = relay.Function([var_1247], output)
mutated_mod['func_1248'] = func_1248
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1338 = relay.const([[[-1.228924,5.689087,-6.014316],[-0.391807,-0.729041,-5.597088]],[[-3.650568,-3.633535,6.440474],[-0.946414,5.305774,8.187904]],[[-9.058482,1.631014,4.100710],[9.962974,5.265936,0.731415]],[[8.459736,3.184861,2.811013],[-9.866676,7.530407,-0.243957]]], dtype = "float64")#candidate|1338|(4, 2, 3)|const|float64
uop_1339 = relay.log10(const_1338.astype('float64')) # shape=(4, 2, 3)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
var_1346 = relay.var("var_1346", dtype = "float32", shape = (1210,))#candidate|1346|(1210,)|var|float32
call_1345 = relay.TupleGetItem(func_296_call(relay.reshape(var_1346.astype('float32'), [11, 10, 11])), 0)
call_1347 = relay.TupleGetItem(func_298_call(relay.reshape(var_1346.astype('float32'), [11, 10, 11])), 0)
output = relay.Tuple([uop_1339,call_1345,var_1346,])
output2 = relay.Tuple([uop_1339,call_1347,var_1346,])
func_1350 = relay.Function([var_1346,], output)
mod['func_1350'] = func_1350
mod = relay.transform.InferType()(mod)
var_1351 = relay.var("var_1351", dtype = "float32", shape = (1210,))#candidate|1351|(1210,)|var|float32
output = func_1350(var_1351)
func_1352 = relay.Function([var_1351], output)
mutated_mod['func_1352'] = func_1352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1446 = relay.var("var_1446", dtype = "bool", shape = ())#candidate|1446|()|var|bool
const_1447 = relay.const([[[True,True,True],[False,True,True],[False,True,False],[False,True,True],[False,False,False],[False,True,True]],[[True,True,False],[True,False,True],[False,True,True],[True,False,True],[False,False,False],[True,False,True]]], dtype = "bool")#candidate|1447|(2, 6, 3)|const|bool
bop_1448 = relay.logical_or(var_1446.astype('bool'), const_1447.astype('bool')) # shape=(2, 6, 3)
uop_1451 = relay.sinh(bop_1448.astype('float64')) # shape=(2, 6, 3)
func_1041_call = mod.get_global_var('func_1041')
func_1045_call = mutated_mod.get_global_var('func_1045')
const_1462 = relay.const([-8.490022,9.850010,3.068644,8.011749,9.769436,-7.704405,0.038659,6.854675,1.860660,-3.150806,0.768756,-4.889124,2.513160,-8.800673,-5.919196,-0.387805,5.798097,-9.949434,2.395203,5.573160,-4.861646,7.093166,3.420910,-5.260098,1.105689,-6.154167,-9.970748,5.696191,-3.473670,0.261763,0.678878,9.958349,1.273935,9.430945,-1.916965,9.770679,-4.400203,-9.871309,-5.775757,-0.131756,4.534821,-3.079825,0.004982,4.233024,8.576788,-4.225941,1.264242,5.239062,6.475462,9.100510,0.243344,3.370885,3.076445,7.224066,-7.178065,5.254923,-0.878851,2.135157,-9.769951,-2.402487,3.416546,-2.518744,-0.567898,3.113314,-3.703623,0.799268,-3.996932,9.102186,-7.826426,0.810563,-6.926525,3.717029,-0.707727,-2.532325,4.975470,-1.402312,-8.283902,3.927843,-5.673216,-6.228960,0.392927,-4.786776,-6.190119,-8.887595,-5.745208,3.587914,-9.625714,9.544508,-3.777229,2.538817,-9.694838,-2.744474,-3.583589,-2.197877,3.853007,4.168967,-9.152912,-3.661762,6.858616,-7.977150,-1.589870,-9.174893,-0.767598,2.007233,-1.129391,-6.954149,-2.654018,8.781249,7.015581,2.749376,-2.080143,2.095232,-9.519225,-2.618285,-7.207407,3.377982,-3.116513,-2.112751,5.979296,5.050966,-0.486328,9.322259,0.432907,-5.050026,-8.236875,4.529290,-8.598875,5.930473,-3.196371,8.475540,-4.227217,9.132756,-5.300632,6.966979,6.605484,7.430868,9.360692,-8.396042,6.651677,3.091780,-8.508901,4.870317,3.047300,3.033721,-6.225332,9.777898,5.269199,8.272464,-7.695316,2.199419,-0.532142,0.431592,0.213302,-2.913800,-8.617954,-1.432444,-5.139647,-3.033087,9.054500,8.231966,-2.047743,-8.704135,0.740190,4.103124,5.215215,1.300530,-3.187894,0.674510,-4.221743,-3.815061,9.718248,9.610403,-0.373030,9.670334,4.416533,2.484409,2.317492,2.062497,-3.455985,-8.309218,9.898557,6.068868,6.914625,-2.685696,-8.915634,-8.052235,0.502585,0.954682,4.600660,3.732398,1.013733,-6.926410,0.017930,4.728164,0.115681,1.396833,3.957989,-9.378066,3.714156,-0.784251,1.220710,1.914616,-4.504873,8.805246,9.105164,-2.585623,6.550233,-5.783962,-1.450763,-4.219542,3.266406,-6.508818,-3.205682,0.563368,3.918237,5.425757,9.597211,-4.050075,7.785736,9.937047,-3.904856,1.044896,1.202971,-6.575625,0.775873,6.445058,-4.242917,1.595867,-7.475814,-6.143484,-6.734551,-3.736908,-7.716763,3.790575,-7.998820,8.400594,-1.044506,6.305798,-4.092584,9.516421,-9.256411,-4.139727,5.675384,-7.552322,1.061353,9.701520,-1.902155,2.587486,-3.002422,2.017412,0.316954,-2.045907,4.267979,6.381054,8.817580,-4.789310,7.720020,9.766878,-8.363006,-8.719919,-7.226585,-3.498759,-9.435341,-6.178924,-8.335031,5.433728,-5.023792,-2.276375,0.043921,4.194857,-4.958778,0.370566,-8.237553,-6.985641,-5.799816,-0.152642,6.169644,9.263781,-8.820766,-5.340030,0.718590,9.460422,7.976364,-6.729408,4.712814,-8.155834,7.023288,-1.111165,-7.549646,-0.430494,1.287514,0.635936,4.195247,-5.225124,-4.297739,3.722671,5.400955,3.230734,-4.348944,7.109848,3.567459,8.494280,2.545507,0.226228,7.611673,-2.350300,-4.036153,8.629145,1.030453,-5.257390,-0.667138,0.030372,-3.881651,1.850465,-2.303529,-5.517703,-4.938171,-7.603609,5.659260,7.791655,-7.884148,-3.511686,0.346775,-1.945026,7.007445,2.135667,-2.770005,2.416479,7.079284,6.365764,-4.307777,-5.053964,-9.856860,-7.342684,-0.695589,-8.839518,-7.164971,3.828027,-3.352294,-0.977673,-5.028389,0.670948,-7.930640,5.420938,9.662320,-0.462061,5.426854,-8.176065,8.941563,2.885619,-1.278625,-9.989008,-8.362404,9.255653,-7.149365,9.604776,4.773351,3.815331,2.813766,3.106796,-7.198890,-2.022450,-3.041372,8.439997,-6.640730,5.792044,-5.129280,1.053936,-3.474753,4.975016,-7.914454,1.586583,8.980458,4.973239,-4.045568,-9.379011,-0.668306,-6.088273,6.048933,4.363096,-6.994618,2.669903,-5.451946,-7.463326,5.141541,5.201101,-9.279741,3.303211,-4.467574,-4.428386,7.096217,2.359029,-5.428581,1.657445,2.296847,4.656874,6.499021,-3.185097,8.971386,-8.607268,-1.423762,-9.956436,5.506517,-5.211092,-1.991047,-7.189540,8.451293,-6.000448,8.691908,-1.530487,-5.146646,-3.639573,-8.426306,8.357966,8.306194,-8.904325,-6.459607,-2.223035,-4.410789,7.787633,-3.310446,-8.826198,5.316069,0.188088,-1.087913,2.339873,4.762712,6.357287,-4.089103,2.574234,-2.761408,8.118755,-5.392208,-4.174859,-6.419964,3.125485,7.182255,8.514069,-3.856670,4.653468,-5.779858,8.487558,6.633450,1.445500,-8.986241,7.983012,-1.629638,7.600847,8.896475,3.937744,6.988766,-5.314687,-7.084681,8.755533,-5.503555,-6.213067,2.334957,-9.560300,-6.661614,-4.654319,-8.787630,7.272107,-3.113666,4.264319,2.969871,4.607001,9.561700,9.842777,4.665907,8.961733,-7.321781,-5.246388,7.647811,-3.651530,-8.446613,-2.345629,-2.641629,8.048460,-3.945460,-0.443767,7.076463,-0.615024,9.697619,4.348001,-0.222985,-4.512792,-0.137126,-9.979938,0.977151,5.439506,9.072628,-0.919066,3.049328,-7.784913,-5.983622,2.211493,0.194719,5.961586,-7.846081,0.807216,0.310514,5.573140,0.398687,5.391710,-7.960616,-9.787436,8.554652,7.923457,2.570288,-2.682619,5.459813,7.533625,-4.784757,9.453241,6.262063,8.275687,6.601984,-5.368536,8.776614,7.325726,-6.923117,5.503346,0.102444,4.590586,4.081424,-2.596614,9.402172,3.581346,-4.655747,-0.871987,2.294161,-3.072626,-4.796063,7.665188,5.247950,8.628429,2.964519,7.585668,-7.932786,7.149049,-9.759445,-7.131304,3.929636,7.898000,-0.250575,-0.421769,-0.714637,-1.953527,0.176740,-2.088887,6.401132,0.294143,-7.622397,9.481316,6.609993,-3.094549,-3.764384,5.443414,-2.867631,-8.564387,1.809672,2.090488,8.495442,-2.188036,9.132806,5.187634,1.075210,5.830878,9.707906,-2.632745,4.352262,0.093856,5.416881,-5.590456,7.552575,-6.100814,8.900336,-6.985513,-7.831749,8.333204,7.549518,-6.732306,8.454775,2.200341,-4.616139,8.103245,-6.693461,4.930218,-0.757018,-6.069773,-0.805784,-3.365365,-4.216337,4.250465,5.086256,-1.836144,2.445457,4.434085,4.909318,-2.376532,-1.236909,5.393529,-2.094890,-5.420043,-4.984530,-5.416896,-2.781205,-0.248401,-4.678629,5.879993,0.013301,-7.909563,-7.788992,4.679073,-9.185842,3.103133,-9.545605,-6.746084,4.755182,7.934102,9.557112,2.555683,-1.967320,-3.675812,6.428120,-6.981054,2.021983,5.876801,4.012381,9.236467,-3.351911,-2.767481,-1.963337,6.381095,-5.057525,6.042879,1.272464,6.935739,9.516934,-8.357721,2.276695,2.837432,4.195325,-7.249770,9.968804,1.166640,-8.936531,-8.659305,-7.717379,-8.992345,-6.492535,-3.920359,-3.486873,9.719885,8.658165,-6.670645,4.982045,2.046505,1.007285,1.784345,-0.180077,-1.817461,-5.709088,6.573819,3.808448,4.743796,5.048301,8.507273,9.585113,3.264473,-6.464643,9.747352,1.356818,-7.246637,-5.201802,-8.805934,-5.329124,0.149357,4.828543,9.330150,4.634814,0.563503,-8.205930,-1.466766,4.658952,-5.671398,-5.953248,2.160966,0.204262,-1.443376,0.568930,-4.027125,6.275796,1.443727,-1.613866,6.336580,9.454587,-7.503620,3.976190,-8.142210,2.990451,-2.277446,-5.631501,3.060499,-5.058277,-3.723849,-4.193251,5.120919,-7.569965,7.414264,-6.528230,-4.427800,4.289686,1.521786,-8.829231,5.591140,8.072631,7.878592,-6.125111,7.683002,-9.015063,-0.208770,-9.384952,-5.508889,-2.350766,5.941326,6.088581,2.334810,-2.390821,5.012772,-6.519888,-6.189471,3.308343,1.589137,5.995097,-8.155049,-7.765038,-4.534841,-9.747214,-0.561688,-0.302728,8.241916,8.312372,-3.863510,-3.183475,-1.822529,2.976050,-5.743896,-8.423907,-2.822761,-2.302105,3.697265,2.686267,6.990812,2.849095,8.744408,2.497794,8.256209,6.354915,-8.257459,3.423088,-8.160420,-6.442553,7.868997,-0.613842,-7.703154,-3.443401,-2.161918,9.280006,-1.082683,3.830267,5.058638,-6.867617,0.685039,-7.662691,4.015821,1.652066,-7.468555,-0.817168,-4.216587,1.757258,2.714214,0.542773,-3.545362,2.673743,0.648926,-4.604656,4.256474,1.405962,-0.098102,8.192043,9.055300,7.883764,-4.811740,-2.235352,-7.185676,1.546208,0.768056,6.309939,9.367562,-3.463140,3.108893,9.075753,-5.395901,-9.947328,5.936809,-1.564554,-8.268130,-6.769435,-0.001631,8.525186,8.734610,-3.549159,7.118789,-9.185689,9.324109,0.459212,1.607136,3.486146,8.763603,-4.979301,1.376167,-6.306824,-9.595666,-6.359539,3.286795,1.787971,-4.953518,3.918058,-7.132624,2.659769,0.959188,-8.512779,6.676172,-6.213843,8.599958,8.852759,2.810333,-0.479456,9.169191,-0.612891,0.524213,6.306349,-0.278711,5.304696,-6.003292,-8.022132,-9.423361,-2.494766,-3.419908,-1.910525,7.726652,4.327039,8.514294,-5.316601,-0.744463,1.228440,-8.072022,-5.586062,-5.082798,0.758705,-9.669706,-8.161939,5.889642,-3.046028,2.192288,7.568833,4.684299,7.983777,6.449021,2.763517,6.409736,0.979571,7.773993,-7.532459,6.994606,-2.213313,9.216962,-7.243932,5.508665,-8.667715,-3.463562,4.082558,-7.416860,-1.552381,-1.717517,-5.713965,6.304533,8.160061,8.812737,-9.782359,-3.122273,-5.694642,3.887987,-1.550409,9.749668,6.989391,-1.797723,4.016429,1.264369,-2.199202,6.581956,3.778382,-7.017555,4.788311,-4.943090,5.944858,-7.112607,-1.194623,-8.088570,-1.248703,-1.382579,5.084953,-5.928912,6.687772,7.970553,6.137872,-6.666909,8.591975,-0.196816,-3.755174,-2.518547,9.914160,0.445940,-9.441629,-3.981066,-0.537900,-3.585863,5.399061,-8.797271,-1.667377,1.495683,3.225806,2.075928,-6.476823,9.642293,-8.987916,-0.285138,3.138442,-1.463041,-7.904080,-8.543634,4.555559,-4.376269,-3.095168,5.758976,-2.003114,-3.240454,4.224406,-5.561307,8.092132,-8.633678,2.111057,1.775936,5.070232,-2.772451,-2.989194,-8.476634,6.615659,6.432035,6.977737,4.076991,2.513911,5.164315,4.861087,-0.076563,-0.594723,-8.367311,-8.218280,-5.100923,9.806993,4.206635,8.693935,6.204658,-2.760340,-6.631985,-7.433926,-4.514518,-6.647329,-6.499936,5.268862,-7.968795,4.320501,-2.150835,6.932135,4.773822,4.679597,-2.576543,-7.794799,-0.602857,-7.446454,5.361180,-1.093765,-9.461175,2.571181,-7.032254,-7.733843,-2.619298,2.592769,4.183503,8.641052,-7.130125,2.877573,-7.731777,-8.735059,-6.513025,0.975471,4.000563,3.742549,-7.889811,-6.302385,-2.960756,-1.762313,5.749090,6.193900,-7.945328,8.914223,5.424097,5.424280,7.558808,-3.954118,5.752985,9.706749,4.230471,-3.215605,1.397621,-9.001257,5.680194,2.103514,5.002464,2.477755,9.994445,-5.776822,1.606528,-7.429651,7.520553,0.531665,4.569908,-4.627969,7.754700,-0.823098,1.280278,-6.701787,1.316724,2.137758,-8.558237,-5.680111,-0.187512,4.835228,0.008343,-4.136583,-2.539061,8.183066,-6.884858,3.788978,-4.141511,-6.055590,-9.937965,4.735942,-8.056699,-3.303668,1.117532,9.310842,6.742876,-5.573902,-7.595004,-0.411616,-7.628347,-9.361522,3.327972,-4.240801,-6.154904,8.203912,-6.068702,-5.960924,-9.112658,8.690760,-1.223361,3.540922,5.952888,-8.971758,-0.257477,5.564301,-4.147533,6.967158,2.281772,2.236689,-8.733039,-7.065789,3.728064,-7.784357,-1.336855,-1.356143,-0.105781,-0.374896,6.254565,1.639254,4.209220,-8.385651,2.353048,6.849582,7.090219,-8.794685,-6.058897,-8.188407,2.663305,4.130616,2.617457,-2.625615,9.377446,3.312292,8.817463,-2.755644,3.263261,-2.655970,-7.435265,9.748874,7.851858,7.391821,5.143155,9.988291,-4.728110,-1.042742,-4.431287,2.050605,2.470886,-7.196410,-6.466808,-3.663430,3.509077,-8.393041,-1.074684,-1.189838,5.124781,0.428914,2.794313,7.231158,0.897680,1.904419,2.031406,7.819174,-0.614946,7.081283,-7.022446,-2.529293,2.537318,6.886195,2.606453,3.467178,-8.760990,7.115979,0.553725,9.170575,-3.901202,3.686300,-2.411837,-6.314541,-5.181611,7.711204,9.352467,7.322737,-2.532224,6.932987,-0.088020,-8.587320,5.118221,-7.815608,-5.933783,-3.816227,9.498081,-4.149000,-1.031229,-5.859211,9.272864,-6.813262,1.471985,6.113933,-4.107163,1.347004,4.985283,9.618012,4.771714,8.054990,-8.697122,-2.987871,1.460813,7.388020,-2.663510,0.763834,3.195161,-2.572282,2.024700,-3.242051,-0.799361,-2.456179,0.521860,5.611371,0.219397,-5.302522,-6.230361,6.085421,-9.493285,4.811607,-2.304769,-4.595191,-9.410505,0.051833,-2.747023,-3.621584,3.088942,-2.366244,-6.286654,-7.531849,-4.618239,0.695527,8.736448,7.220240,8.874895,-1.235618,3.076381,7.932571,-0.327954,9.403883,-5.590550,5.887991,-3.331084,-4.271401,9.358073,-6.188488,-3.634754,-7.085951,9.265772,6.609277,4.300284,-0.355289,-3.191053,-8.910217,-1.702349,9.302363,2.261469,0.936199,-8.461407,6.669485,-8.982082,8.835774,2.022925,-8.132737,5.335392,-9.940191,-3.189794,7.666407,-6.082222,5.579094,6.827472,-5.003096,7.949763,-0.986143,6.091425,-6.246410,-5.462408,-8.269904,2.046519,-5.458426,-8.387810,8.512688,9.646115,2.383928,7.166703,5.996094,9.840471,6.494460,1.039983,-8.976478,6.396026,-6.417993,1.529421,-1.931299,6.610027,3.286259,2.485597,-7.114775,-7.029665,-0.592721,-9.081751,-2.694645,7.826656,5.830705,-6.831945,-7.394796,-2.657923,2.211768,9.384857,-7.452281,-1.720433,6.774038,5.791353,-1.714803,4.342263,5.368623,-6.167347,-3.041333,6.289204,-3.346747,6.635695,-7.425946,8.253593,9.767311,0.590823,-7.026808,-9.729278,6.243134,7.006703,7.909389,-2.757947,5.927493,-0.339051,2.962153,1.159658,5.596272,-7.634866,-4.417873,2.536109,-5.681041,1.878610,-7.989985,-0.609798,3.879980,-1.444351,9.730207,0.459993,4.118745,-2.219163,-3.474423,1.898471,-9.363059,8.441136,7.142971,9.177284,8.274950,-8.003070,-5.756286,6.349433,7.720051,-0.420254,-7.905314,7.975476,9.948577,-5.643385,0.080698,-1.510420,0.070890,-3.367705,-5.906343,5.266531,-9.662516,-7.408350,-0.904556,2.408418,3.363519,-2.906768,4.925831,8.051794,9.576166,-8.128333,1.994097,6.109076,-3.135819,-7.723044,6.347989,-0.006169,4.837004,-3.057377,-8.253187,5.992952,8.084232,-9.141742,8.528077,5.131072,7.650401,4.514080,-7.556370,-7.824970,-3.144923,-8.871382,-4.625773,-9.037671,8.128408,9.721163,-7.255744,6.224315,6.683070,-0.021245,3.345817,9.888136,-1.428597,-6.488545,3.070788,9.264150,3.740257,1.917018,1.024768,8.168739,-2.607113,-1.685545,-1.273531,-9.691277,5.582477,-3.440810,9.632089,-6.640899,9.157444,-2.446926,1.610327,-0.501385,5.272070,-1.762296,1.479205,0.353385,-2.713975,-6.780153,6.187963,-7.844561,-2.084442,-8.283181,9.014154,4.851522,5.897550,2.269968,5.096923,8.812484,-8.272898,7.066913,7.599294,9.209105,3.987553,-9.440738,8.352952,6.310301,-7.653013,4.595541,-2.828688,-7.400972,-3.125833,-5.527756,2.386173,1.935820,3.062690,-3.321230,5.427259,2.719289,4.866161,-6.789315,-5.886360,-0.490241,2.205485,-8.427015,-8.692900,4.350974,0.013375,2.656434,4.285513,-5.730337,4.967259,7.020862,-7.318782,3.475484,7.834983,-8.826155,-4.096511,-4.618999,-6.728673,3.981714,1.293417,-2.241252,6.639528,7.983360,-5.888675,9.182105,-7.157304,-7.353155,6.284164,9.254283,7.641954,1.597419,-8.216828,5.700295,-6.314301,-1.087235,0.731376,-8.013850,-8.423461,0.365480,2.395468,-2.400532,-4.805832,6.432225,8.710215,-2.204506,-5.682508,-7.915464,8.546233,-0.008794,-2.581183,2.374167,3.493588,-4.406908,7.911302,-8.695660,0.796878,7.169702,4.798524,9.696046,2.821962,-5.334322,4.909348,-3.650516,-0.657624,1.286268,5.213764,4.603313,-7.506845,-1.177639,6.203109,3.914866,-2.840879,-9.052230,8.314125,-5.651171,3.039791,-3.057952,7.238803,9.594276,0.337001,-5.163355,2.591275,0.275798,-3.221294,-0.131400,-6.737824,-1.489387,-3.937791,9.608829,-7.151361,-2.156236,-3.631467,3.715959,7.664498,7.771887,5.643143,-9.376468,6.888263,-2.205473,1.036514,-7.075207,-4.921768,-8.195969,3.716214,-0.668308,5.164435,-0.684665,-0.640363,2.344210,-5.837118,-6.348221,6.009602,9.594445,3.023600,-8.827802,-6.038151,-3.042168,0.886216,7.654496,-2.786809,-0.107702,-5.693310,6.314358,-0.048910,-0.898793,-5.623441,-0.465621,3.828043,-2.424537,-5.671646,-7.224746,7.910756,5.210600,5.944462,-6.668910,0.536831,-0.583572,4.793476,-3.308638,-0.988634,-9.945741,9.802090,-0.739435,-0.092627,5.074037,5.695291,3.162201,1.695115,0.123715,7.483009,-8.146648,3.597325,-2.905626,9.438853,-0.110119,-8.828655,-9.950889,-0.237696,-5.644823,8.793378,1.759588,9.548139,-0.163850,5.035455,-9.888224,2.845211,3.294332,1.316564,6.023762,-6.817786,-7.619046,-1.875051,5.057587,-9.222033,-7.325628,9.290276,-9.423783,-0.536080,9.674183,0.285979,7.797478,5.766458,9.335678,-7.770905,0.782759,-7.851578,1.205172,-3.158470,2.641376,5.988559,-1.863403,1.427111,0.421056,4.672836,-4.953235,-0.803631,5.738814,-8.700891,-3.873693,4.239807,-4.775355,-5.797992,6.920014,-4.004639,6.947255,-1.907018,-5.398111,-9.867161,7.893233,0.129626,-6.384273,4.509650,3.257863,-6.279716,3.273772,4.078768,-0.326449,5.178962,-5.868559,-5.795640,2.248675,0.224716,1.717061,-7.734264,-9.988211,-4.930586,1.692607,-9.532835,3.715407,7.113398,5.978186,-3.355745,-7.773880,2.130005,1.264628,-2.934097,-8.540692,4.033472,8.336977,-2.769135,0.132590,5.561777,9.615117,2.223100,-3.487307,3.323393,6.013112,3.892280,7.184306,-8.770769,5.700504,-5.711072,-1.833034,8.493294,1.320489,0.783856,-2.927269,4.570724,8.591007,-0.063536,2.524512,3.437655,-4.214450,-0.922151,0.888169,-7.995259,4.756790,-9.278321,-0.418322,-6.230004,7.663497,-0.958393,-8.283302,5.749971,-3.569399,1.263210,2.921988,-4.634555,-3.361425,-5.813141,1.128509,-9.457708,4.172993,4.265386,-2.785749,5.064096,4.860661,1.320032,0.382978,9.213905,-0.702773,-3.784796,1.345212,4.784371,5.922140,5.843607,4.272696,-6.365099,-9.108451,-5.498147,1.555075,9.050801,-0.750823,-7.994470,8.721133,1.243565,-0.226004,-2.219907,1.097730,0.166110,3.502873,8.718424,-2.165899,2.452280,3.568427,0.470308,5.658301,-6.211494,3.164509,1.201050,-8.350511,0.074414,-4.323584,1.325390,1.516760,3.623509,0.265250,3.610475,-5.799259,3.026940,0.392227,-0.443257,3.661659,-9.992753,4.341818,6.367456,-4.653029,-1.033576,-9.145444,-2.075437,1.910656,-0.891883,3.410450,-3.938757,-2.294375,1.614422,5.348838,-0.843950,-7.592223,1.177911,5.346467,-7.395733,7.959112,-3.297964,-8.827551,-4.815745,-1.394063,-9.023338,-9.737915,9.749450,-3.920530,-5.632129,-0.858263,-5.344872,7.546024,-1.794010,9.789735,0.493774,-2.791611,-0.767529,-9.905219,-0.843440,-5.621979,-0.869686,4.819620,6.009364,4.287398,3.084406,2.584175,-2.454058,-2.870967,8.442378,2.462815,-9.678061,-9.300685,-8.196404,5.302363,-3.637595,-2.873747,5.940197,-9.546270,5.078245,-3.018829,-3.313739,3.853502,5.683613,7.806490,9.946939,2.038413,-9.995198,-0.029131,-6.495749,0.100787,3.044318,-1.637309,-6.449150,-8.923924,-6.687239,-1.689740,-5.071596,0.742350,0.196958,-0.108325,-8.249305,8.603019,3.936875,7.325126,4.566920,-9.554385,-1.263847,8.160001,-0.074788,1.601694,9.936638,7.475853,8.485499,5.801073,2.414612,2.877906,2.217123,9.381680,-6.405648,-6.659446,5.782197,5.634230,2.841063,-5.848513], dtype = "float64")#candidate|1462|(1890,)|const|float64
call_1461 = relay.TupleGetItem(func_1041_call(relay.reshape(var_1446.astype('float64'), []), relay.reshape(const_1462.astype('float64'), [15, 14, 9]), ), 1)
call_1463 = relay.TupleGetItem(func_1045_call(relay.reshape(var_1446.astype('float64'), []), relay.reshape(const_1462.astype('float64'), [15, 14, 9]), ), 1)
output = relay.Tuple([uop_1451,call_1461,const_1462,])
output2 = relay.Tuple([uop_1451,call_1463,const_1462,])
func_1479 = relay.Function([var_1446,], output)
mod['func_1479'] = func_1479
mod = relay.transform.InferType()(mod)
mutated_mod['func_1479'] = func_1479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1480 = relay.var("var_1480", dtype = "bool", shape = ())#candidate|1480|()|var|bool
func_1479_call = mutated_mod.get_global_var('func_1479')
call_1481 = func_1479_call(var_1480)
output = call_1481
func_1482 = relay.Function([var_1480], output)
mutated_mod['func_1482'] = func_1482
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1512 = relay.var("var_1512", dtype = "int8", shape = ())#candidate|1512|()|var|int8
var_1513 = relay.var("var_1513", dtype = "int8", shape = (11, 3, 10))#candidate|1513|(11, 3, 10)|var|int8
bop_1514 = relay.less(var_1512.astype('bool'), var_1513.astype('bool')) # shape=(11, 3, 10)
output = relay.Tuple([bop_1514,])
output2 = relay.Tuple([bop_1514,])
func_1523 = relay.Function([var_1512,var_1513,], output)
mod['func_1523'] = func_1523
mod = relay.transform.InferType()(mod)
var_1524 = relay.var("var_1524", dtype = "int8", shape = ())#candidate|1524|()|var|int8
var_1525 = relay.var("var_1525", dtype = "int8", shape = (11, 3, 10))#candidate|1525|(11, 3, 10)|var|int8
output = func_1523(var_1524,var_1525,)
func_1526 = relay.Function([var_1524,var_1525,], output)
mutated_mod['func_1526'] = func_1526
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2147 = relay.const(-9, dtype = "int8")#candidate|2147|()|const|int8
var_2148 = relay.var("var_2148", dtype = "int8", shape = (1, 14, 6))#candidate|2148|(1, 14, 6)|var|int8
bop_2149 = relay.maximum(const_2147.astype('int8'), var_2148.astype('int8')) # shape=(1, 14, 6)
output = relay.Tuple([bop_2149,])
output2 = relay.Tuple([bop_2149,])
func_2152 = relay.Function([var_2148,], output)
mod['func_2152'] = func_2152
mod = relay.transform.InferType()(mod)
mutated_mod['func_2152'] = func_2152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2153 = relay.var("var_2153", dtype = "int8", shape = (1, 14, 6))#candidate|2153|(1, 14, 6)|var|int8
func_2152_call = mutated_mod.get_global_var('func_2152')
call_2154 = func_2152_call(var_2153)
output = call_2154
func_2155 = relay.Function([var_2153], output)
mutated_mod['func_2155'] = func_2155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2235 = relay.var("var_2235", dtype = "uint8", shape = (15, 3, 4))#candidate|2235|(15, 3, 4)|var|uint8
const_2236 = relay.const([[[8,-4,-7,-5],[4,-3,-10,5],[-4,8,-2,10]],[[3,9,-8,-4],[4,-5,9,-6],[-9,-5,4,2]],[[1,-7,-4,-2],[-2,-3,-1,-9],[4,-6,1,-7]],[[-2,3,4,-5],[7,7,-10,-2],[-1,5,3,7]],[[-7,2,4,2],[2,4,-3,9],[3,-3,5,7]],[[4,8,-7,5],[-7,-4,6,8],[1,4,-3,4]],[[-10,-10,4,-1],[-1,-6,-5,2],[9,6,10,-5]],[[-8,-5,-3,6],[7,8,-7,-10],[9,7,-6,-7]],[[-5,-2,7,-7],[6,5,-2,3],[-8,1,-10,-4]],[[-6,5,9,8],[-5,10,8,8],[-1,7,3,-3]],[[1,-6,2,1],[10,1,-10,-5],[9,-10,5,5]],[[8,-1,2,-9],[5,-3,5,6],[-2,9,8,-8]],[[1,8,-5,-6],[-4,1,1,8],[-7,-7,-7,-10]],[[-2,2,4,8],[9,5,-8,-6],[-8,-8,-8,6]],[[-1,8,6,8],[10,7,-3,9],[-1,-5,-5,-9]]], dtype = "uint8")#candidate|2236|(15, 3, 4)|const|uint8
bop_2237 = relay.right_shift(var_2235.astype('uint8'), relay.reshape(const_2236.astype('uint8'), relay.shape_of(var_2235))) # shape=(15, 3, 4)
output = relay.Tuple([bop_2237,])
output2 = relay.Tuple([bop_2237,])
func_2244 = relay.Function([var_2235,], output)
mod['func_2244'] = func_2244
mod = relay.transform.InferType()(mod)
mutated_mod['func_2244'] = func_2244
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2245 = relay.var("var_2245", dtype = "uint8", shape = (15, 3, 4))#candidate|2245|(15, 3, 4)|var|uint8
func_2244_call = mutated_mod.get_global_var('func_2244')
call_2246 = func_2244_call(var_2245)
output = call_2246
func_2247 = relay.Function([var_2245], output)
mutated_mod['func_2247'] = func_2247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2790 = relay.var("var_2790", dtype = "float32", shape = (14, 12, 9))#candidate|2790|(14, 12, 9)|var|float32
uop_2791 = relay.sqrt(var_2790.astype('float32')) # shape=(14, 12, 9)
output = relay.Tuple([uop_2791,])
output2 = relay.Tuple([uop_2791,])
func_2804 = relay.Function([var_2790,], output)
mod['func_2804'] = func_2804
mod = relay.transform.InferType()(mod)
mutated_mod['func_2804'] = func_2804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2805 = relay.var("var_2805", dtype = "float32", shape = (14, 12, 9))#candidate|2805|(14, 12, 9)|var|float32
func_2804_call = mutated_mod.get_global_var('func_2804')
call_2806 = func_2804_call(var_2805)
output = call_2806
func_2807 = relay.Function([var_2805], output)
mutated_mod['func_2807'] = func_2807
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3161 = relay.var("var_3161", dtype = "float32", shape = (7, 15, 10))#candidate|3161|(7, 15, 10)|var|float32
uop_3162 = relay.acosh(var_3161.astype('float32')) # shape=(7, 15, 10)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
var_3168 = relay.var("var_3168", dtype = "float32", shape = (1210,))#candidate|3168|(1210,)|var|float32
call_3167 = relay.TupleGetItem(func_296_call(relay.reshape(var_3168.astype('float32'), [11, 10, 11])), 0)
call_3169 = relay.TupleGetItem(func_298_call(relay.reshape(var_3168.astype('float32'), [11, 10, 11])), 0)
output = relay.Tuple([uop_3162,call_3167,var_3168,])
output2 = relay.Tuple([uop_3162,call_3169,var_3168,])
func_3170 = relay.Function([var_3161,var_3168,], output)
mod['func_3170'] = func_3170
mod = relay.transform.InferType()(mod)
mutated_mod['func_3170'] = func_3170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mutated_mod.get_global_var('func_3170')
var_3172 = relay.var("var_3172", dtype = "float32", shape = (7, 15, 10))#candidate|3172|(7, 15, 10)|var|float32
var_3173 = relay.var("var_3173", dtype = "float32", shape = (1210,))#candidate|3173|(1210,)|var|float32
call_3171 = func_3170_call(var_3172,var_3173,)
output = call_3171
func_3174 = relay.Function([var_3172,var_3173,], output)
mutated_mod['func_3174'] = func_3174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3313 = relay.var("var_3313", dtype = "float64", shape = (14, 4, 12))#candidate|3313|(14, 4, 12)|var|float64
uop_3314 = relay.exp(var_3313.astype('float64')) # shape=(14, 4, 12)
bop_3337 = relay.bitwise_xor(uop_3314.astype('int16'), relay.reshape(var_3313.astype('int16'), relay.shape_of(uop_3314))) # shape=(14, 4, 12)
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
const_3342 = relay.const([-6.123296,0.812668,4.329100,0.304805,9.300826,5.655762,-1.234903,1.080301,-3.038826,3.061332,-8.525097,0.034933,8.550565,3.725300,4.784138,8.225151,0.598144,4.228079,-3.256298,-2.546417,2.758462,-1.026167,-1.414666,-0.166089,5.146717,0.863235,-9.282299,9.563864,0.591900,4.829924,1.307035,-6.315668,4.466665,5.936443,-2.951925,7.081646,6.770234,8.244638,9.118118,-5.307684,9.092479,-2.582460,-7.962138,7.400877,-8.807696,-7.757748,-5.635365,8.719430,-4.687261,0.964286,-6.901411,2.935786,8.080396,2.453953,-6.612167,4.017858,9.406841,-8.081078,4.433111,2.047031,-4.495989,9.336753,4.623359,-7.571590,3.666434,-9.639169,-9.303213,6.345494,0.409136,-5.226824,-1.819668,7.583082,8.524139,2.579044,-4.132575,1.205579,9.377665,3.183773,9.391410,-1.383553,9.757257,-9.219948,-2.697452,0.825868,-0.520223,-9.406077,9.716766,-8.178443,3.708683,3.441143,-2.051576,-6.868202,0.046931,-3.636659,8.475846,7.327656,-5.435448,-5.103429,1.181797,-5.702225,9.134365,-0.847349,-3.446120,2.884531,4.802207,7.948515,2.981731,6.043559,3.154541,6.171084,-0.422378,-2.355055,-9.795758,-9.575640,-1.810572,1.796613,6.786078,8.636715,-5.716219,1.185303,1.266554,-8.148105,-3.208311,-5.278200,9.222040,-8.326780,-5.724498,-9.659362,4.694829,8.015031,2.495099,3.412370,-9.775730,5.949585,5.865877,-8.135743,8.518109,-8.143919,-6.986237,-5.068494,-4.983728,-5.171644,8.342932,-0.238008,6.753351,-4.412678,-3.732871,0.552804,-2.326327,-5.708884,1.009178,7.981963,8.640170,-2.946497,-5.630485,0.380839,4.778999,6.048421,8.788647,0.161813,6.584554,4.120686,6.251178,6.675514,5.463790,2.999289,-9.379246,-2.292629,-5.672512,-7.560420,8.790004,-1.910936,0.757407,5.280608,0.758914,9.544636,-2.559281,-4.548176,6.693273,-0.440230,1.769853,7.604770,-2.871817,3.982837,-6.195848,5.783975,-2.613239,-5.162653,3.227608,-9.022150,-0.015878,-7.493955,-8.814420,-3.961126,-3.799544,8.049110,-7.675732,7.455143,-5.069157,-7.802488,-8.950266,-2.332149,6.259791,-3.649631,-9.721877,6.783619,-1.580486,2.473696,-7.063707,-2.526825,-7.241330,7.598224,-8.314028,7.568866,4.911778,7.971056,0.016145,-4.058337,-7.573716,-1.422406,9.145913,9.087900,3.813406,6.085076,-2.347189,-7.429934,2.913219,-0.251321,-9.442446,-2.930549,5.809260,-4.470096,3.240497,5.344466,3.436793,-4.844421,8.704189,1.761103,-0.914612,-0.237821,-3.377578,-1.493089,-7.079747,-3.819024,-2.063855,3.535479,-5.070365,9.013977,-7.715858,-2.951136,-3.115705,8.886504,-8.654000,-6.972577,3.111756,-2.725462,1.703383,4.958468,2.850186,-8.400862,-8.118640,4.378002,6.179153,-5.249553,7.483619,-3.512038,4.154260,9.118421,-7.138370,-3.009383,-8.443688,5.521963,9.310521,-8.039329,-1.518264,9.582551,-8.787691,-4.752568,4.215319,0.871118,3.232604,-6.051216,9.683589,-2.483300,5.987675,4.555020,3.986983,6.967969,5.945891,1.057223,-4.339102,-6.331077,3.841830,6.615175,1.856058,9.445640,-7.569772,2.140311,9.519694,7.648256,4.328054,8.389853,0.769141,7.410782,-3.883633,6.333135,5.582533,4.147488,-9.374155,1.878282,8.119990,-1.499940,-7.625418,-0.917122,6.606383,-8.947478,-9.729204,-2.326904,-0.420576,5.346837,-6.880794,-3.224644,-7.525253,5.100575,-3.922256,8.046623,3.478535,2.036896,2.701899,-4.090566,7.487656,4.625274,-3.520659,5.008010,-6.364995,2.437499,0.135016,-9.865798,3.787646,-5.456323,2.235932,9.984657,1.781911,-0.792304,-0.424555,-6.128777,-8.872945,-3.572786,3.557726,0.002564,-8.797017,-4.916233,-5.582046,9.079128,-6.774682,3.899559,3.628524,5.235389,9.054861,-1.182475,-8.197351,6.225708,-4.676688,5.917263,-8.982668,3.960487,6.462703,-0.017335,2.986874,4.484225,-4.106421,2.703242,6.463241,-0.141719,-0.431271,4.340029,4.993283,3.295336,-5.163624,5.341032,-3.749987,1.891874,4.923234,7.137668,9.661586,-3.180421,-4.746098,-4.881661,-9.348894,-5.829417,3.519044,1.672355,6.593784,-5.651578,8.880133,-2.982099,5.323207,8.299966,8.123076,5.923682,0.098622,-1.478705,6.687794,-3.959478,-2.642140,-0.798278,-5.708658,-0.010852,0.942167,4.517304,3.332416,-1.108808,7.571581,1.097430,-3.000533,6.786333,-7.509261,8.303232,-4.476793,-0.911034,8.013780,-2.495196,-7.221762,9.891661,-4.865093,3.601542,-4.105191,-7.388345,8.286479,-5.520495,-0.267312,-9.324728,-3.545288,-9.464750,1.523159,0.589187,0.076460,-8.462353,-8.895456,9.831627,-6.535746,-9.586717,-6.278319,-0.286766,-5.876285,-0.514637,-2.719479,-3.158787,-9.004727,-4.963926,0.197047,-2.534168,2.440110,-2.068863,-5.170668,-4.280511,-8.710095,4.144742,5.534664,9.167023,1.598633,-5.335326,-5.265833,-7.640948,8.475672,-1.677040,-6.276803,-4.573321,9.448416,2.100965,-5.101076,-1.471072,0.760367,-5.001565,8.466825,-7.590868,0.282763,-1.761968,7.047012,-2.842100,9.062887,0.897958,-4.903874,-3.293868,7.332423,9.731278,5.860978,-2.183714,-7.747328,-3.033369,-8.028000,-2.351373,2.730311,2.520200,9.538912,-6.727579,-6.390750,-5.652245,7.491802,-8.428597,-5.900672,-4.322725,3.875138,-8.621447,0.441998,1.121621,-8.053744,4.454007,9.061178,-1.713093,9.286934,6.498993,2.624887,-0.738381,-6.176759,4.005735,-1.412442,9.612131,-2.048923,1.482895,-8.376783,-2.750570,-5.089428,-2.024108,-8.545791,-3.883274,0.310622,-5.224227,7.004175,4.549972,9.703716,5.434587,4.016296,-5.689259,-4.032226,5.056590,-4.860878,6.114897,-4.105953,-2.686160,8.805180,-7.152450,5.336750,0.372204,6.845095,-5.582844,7.308505,-8.563221,-5.937380,-7.658277,2.702700,8.480693,3.492732,-3.450152,6.689127,6.863813,-5.073781,1.673412,-1.803320,-1.291214,-7.517691,-0.476522,-5.368032,-8.381332,7.724814,-9.494928,-2.697806,3.905978,-7.108655,3.262900,-9.995525,-7.407322,-1.998299,-9.523172,-0.762607,-3.048667,-0.697174,-6.208648,-9.258368,9.490652,-9.564263,-8.507897,-8.879812,-9.897742,6.793398,-9.056029,-2.187809,-0.078864,-7.789289,0.426333,-7.125224,7.724806,1.038563,6.159099,-4.822411,3.901227,-5.427654,-2.434702,2.677155,-6.209696,-3.636745,5.601001,1.079491,-2.523906,-4.539881,8.854675,4.212639,1.496552,-7.927875,-3.109109,-1.019629,4.212770,6.891797,3.472069,5.440267,-8.985225,-2.049802,-0.610914,3.487371,6.116826,2.874351,-4.408662,-7.723605,8.842151,1.668744,0.635675,0.849170,-7.953638,-2.581046,-3.960088,1.225925,-9.158000,-5.126352,-2.600799,0.262838,0.691711,-3.130361,0.106273,-5.655552,3.390668,7.168389,4.751601,-6.803175,4.851797,0.080812,-4.613055,-0.847638,-3.522995,5.915491,8.081617,-2.382251,0.169332,-1.750714,4.871695,5.488206,-7.982763,-0.065011,-6.988525,-1.062396,8.431129,5.455989,-5.937742,-3.934590,-9.129744,1.413705,-1.125033,-2.920170,-2.599298,5.252675,1.316603,1.775644,5.989391,8.308054,-8.612931,4.977782,4.497888,4.340551,5.036644,-0.691020,9.689331,6.267478,-0.574090,-0.833300,-9.852092,-1.216656,-0.013983,-2.038184,5.523518,7.688903,5.698793,-1.599772,7.040012,-1.525583,0.419128,-9.516329,8.522487,8.432951,-0.073931,-5.452872,3.284759,-2.988045,-3.697128,1.761205,6.164313,5.314057,1.374395,2.819464,8.228271,2.018204,4.478525,-5.910645,6.086589,-4.050267,9.682302,6.912206,5.981611,-7.950323,-3.120930,-4.124355,5.996498,-6.142862,1.139984,6.374099,1.687494,0.938825,5.661204,0.788450,0.105912,-2.915061,9.700997,2.012467,7.536054,-4.741585,5.812613,9.541138,2.279614,-0.893272,-2.194793,4.649537,-6.823764,-1.917465,-7.094471,0.879426,0.191752,-2.922034,5.164838,8.060599,-7.435851,-4.398352,-7.065378,-3.231985,3.704200,-9.704239,-5.602622,1.780175,2.961348,-6.092645,-0.596766,0.028169,8.394340,-0.818006,-4.808730,-7.422171,1.300981,-2.505296,-6.568453,6.804687,3.059820,6.606145,-3.968726,1.451709,-6.316085,4.538136,7.539672,-3.132533,5.480667,4.080605,3.805223,-1.691326,-1.752989,-5.807070,6.039187,-7.612395,-4.498236,-2.569810,-5.550407,-2.147731,-5.855795,0.650919,-9.907866,-9.526008,-6.641310,2.222744,8.320129,2.780874,1.927724,2.693749,3.346100,6.218293,6.978361,-0.361625,2.840716,9.659084,0.666932,3.133358,-9.144725,7.217734,8.608772,-8.811965,-7.530773,-2.123917,-8.689060,-7.351492,7.727054,5.981234,8.029400,8.518557,-6.012242,-9.984313,0.878293,8.318255,-4.462560,9.951936,-5.781252,-2.870429,0.980947,-9.445828,-6.636080,3.786666,-8.198052,7.972775,4.432580,5.968158,0.505639,7.091154,8.700666,-4.668483,6.925099,-0.822557,-0.091142,-4.770187,1.188363,2.826763,5.954653,-9.456182,0.721249,7.992580,-8.915532,-3.114505,4.122843,-0.590880,-1.777061,-6.073044,-9.223401,6.624829,4.175073,-6.095078,-1.917969,5.885242,2.750029,-3.868321,0.386156,3.277172,-9.655465,4.091086,9.483199,-0.226363,-7.236284,8.948612,7.473855,0.152163,-1.301047,-0.576411,0.703443,-7.054864,1.603467,4.130950,-2.634168,-2.036515,-0.215138,-3.925595,8.585310,-0.990309,6.934327,7.293383,-1.953858,-3.962646,-3.795527,-6.078925,-1.228464,-2.670747,0.518784,-8.846464,-2.581704,-1.408708,-3.468395,-0.667321,6.855626,9.754133,-5.999547,-6.524303,-3.296488,2.494266,5.411907,-1.785369,-4.614877,4.631593,4.003090,-2.807185,-9.272707,-5.921680,8.578673,-4.328236,5.352858,-5.670622,-9.943627,4.213856,2.338504,-8.266312,-1.511297,-5.708441,9.149407,-1.126118,1.504458,4.003843,4.386163,-7.826434,-3.209562,4.922182,-3.666290,-4.065569,-9.067828,5.185337,-1.735351,-5.279809,8.519973,-2.401264,-2.065463,2.792900,6.965109,1.056764,-5.023423,8.595313,3.672170,6.780845,-0.039971,-8.792777,2.965525,-5.575848,8.980588,-2.714389,2.050702,-5.684351,8.364878,8.545297,-2.789250,3.516604,-9.918213,1.463577,4.161613,-3.483272,-8.246855,7.436667,-9.944178,-1.656412,-1.440282,-0.295659,1.201008,-8.600558,-8.584676,8.212145,-5.916547,-1.849493,2.326440,-2.227298,-9.779730,5.562411,-1.601575,-5.703844,-2.250189,-8.075510,1.627569,1.077778,4.469307,8.631402,4.790709,-9.233320,3.280056,3.888720,0.437055,9.646312,-9.692613,-2.064068,1.062913,2.884505,7.697313,6.962677,5.345700,9.213242,-7.884781,-7.941742,8.912783,0.382780,4.230677,-7.942531,8.776235,-5.056135,-9.961337,-0.120753,7.566915,4.699390,0.265315,8.649474,3.573186,-7.789242,6.301389,-9.166634,6.397288,7.387215,-6.623283,5.340614,-9.131513,9.131674,8.404333,-6.928404,5.848233,6.387528,-9.022302,9.977159,-1.091697,0.126631,9.518698,-3.740190,-0.438469,3.725564,3.416416,-0.814042,9.394340,-1.451736,3.982423,5.302844,6.630729,5.134955,-7.135683,4.750712,-0.406697,-6.576377,-7.822677,4.598106,2.618210,8.673373,8.154910,-3.842457,7.222574,9.331697,1.084075,-2.238750,-1.699874,7.815050,-3.669918,5.393294,6.480281,-2.826563,-6.854296,-9.914480,2.949946,7.614197,4.927145,6.643262,-9.632457,9.687896,2.207534,-4.565645,-7.760796,-9.031768,2.927851,9.121921,-0.842035,-3.152532,3.868284,-6.775765,5.836331,-7.371176,2.654541,2.735146,-8.148914,1.348986,-5.976675,1.323907,6.601249,-3.233557,9.777491,-5.868253,1.901368,8.341407,0.228827,5.620650,8.075980,-5.355154,8.435203,-8.404563,-6.152234,-4.661623,-3.267835,6.250190,9.089417,-3.838401,-7.359911,-0.355679,9.687264,-0.747576,4.768602,3.482474,5.169765,4.266142,-7.390811,6.908993,-4.992463,1.198749,9.701722,-0.403701,-1.075530,-8.287439,8.289498,2.599212,-0.336957,-2.628096,5.203608,-3.821312,0.236105,-7.012377,3.533130,-1.823608,8.639744,-5.282696,4.931603,5.358483,5.863453,-5.852598,1.132188,-6.806872,5.428079,8.024790,-4.846918,-9.118395,-0.346431,4.749638,-9.230962,7.738199,-2.444153,-7.401275,-9.356692,1.955006,6.551908,4.435962,0.677147,-3.093725,-3.792255,-4.129565,8.683257,-8.765961,1.889723,-2.126854,2.998618,2.977520,1.013139,9.448946,5.407706,-3.219127,-8.876601,8.845556,1.486542,7.363333,-5.907392,-6.806770,-6.238462,4.034594,2.842270,4.846239,8.024161,-1.600852,-2.923377,-0.377481,-4.432752,6.090884,-6.882483,5.821618,-9.248769,8.621892,-6.493303,0.884267,-1.531831,-0.343537,-9.070621,0.016067,-0.577334,-5.518324,6.329996,-5.859101,0.949715,0.405569,2.409939,5.260616,1.637521,-3.895758,9.965961,-8.330068,-8.278694,8.905639,-1.177548,-1.206655,-6.005225,0.592229,0.775370,0.985852,0.741147,6.354501,3.032751,8.472475,6.783618,-7.699981,0.821896,8.450127,2.407441,-1.298348,5.118241,-0.866920,7.031786,2.065081,-5.573628,-8.313104,5.203836,-5.637131,-1.822652,4.898020,9.160539,-3.279938,-5.677556,-0.921618,-6.203723,7.706719,9.402381,1.650292,-0.007688,2.032141,-8.027460,-1.029119,1.295514,-7.292002,-8.063771,-2.896933,-8.043112,-9.481485,-1.466041,-1.649127,4.622169,-1.664128,-9.375809,-3.608323,-2.689595,8.494410,4.923377,1.068490,-7.140120,-1.217819,2.366291,-9.361483,-3.011829,3.783682,3.292540,4.364580,1.269545,8.335520,-1.180891,-9.726267,4.904953,9.209837,-3.257992,-0.980969,-4.206576,9.934486,5.620771,6.129989,5.163039,-7.944951,4.685209,4.772858,8.833740,-2.921813,-1.492931,-0.273291,-4.698874,-2.964730,-7.164689,8.317023,-4.123209,9.715500,-1.291648,6.856847,0.326370,-3.035395,8.790849,9.154681,-9.888117,-5.963056,5.379227,-3.371877,-3.835581,-7.383898,7.047548,-6.779093,-5.884713,6.508645,-8.403710,-7.365108,-4.766654,-8.508652,8.779269,-5.229816,5.293701,-6.430356,-2.475965,-0.807243,-6.633961,7.326443,-8.503882,5.084385,7.681192,0.825859,3.326486,2.141321,-2.251683,9.429421,-9.572318,6.674089,6.264096,-0.987156,2.710973,-7.585195,4.535956,4.670540,7.147446,-9.508409,-6.660480,9.903365,-2.445314,0.099804,-7.957352,-1.413495,1.911805,2.483950,6.005687,-7.295641,-7.392543,-5.289971,-4.464447,-0.204571,-9.058941,9.100100,-3.379707,-4.603229,0.233073,-8.969487,3.133510,-2.625503,-8.783836,1.864854,2.602700,-9.446756,-4.606296,3.721271,3.893764,9.023604,3.833716,-7.947509,4.206839,-7.307329,-1.880585,-2.793870,6.828670,-2.395791,-5.189615,6.406427,8.682170,-3.847048,8.739687,4.974356,4.611022,-3.733744,2.376683,-0.159765,-6.439011,7.781986,3.531478,-0.177739,1.261511,0.979025,-2.973598,0.492781,-3.837487,5.154088,-3.568723,-0.885619,9.746731,-3.052077,1.172112,4.306725,9.072894,9.312112,3.677044,9.530033,-5.886933,-5.030266,1.075818,6.882874,5.479357,7.573576,5.962632,7.319867,2.473065,6.043130,0.531290,-8.010607,4.473052,9.945321,6.332076,1.675346,0.998222,-0.052377,-8.668677,1.656522,-8.882603,7.086956,-3.758475,8.217629,-0.237563,6.877234,6.090818,-2.348122,9.153800,3.791608,-9.531500,-0.571806,1.732470,-7.673992,-1.842104,1.153243,7.717474,-7.518305,-8.688829,6.062413,-7.645843,-1.628589,-0.078719,1.433362,-9.186624,-6.890579,3.677397,7.233065,4.728778,-7.964482,4.862876,-6.412673,-4.715148,-3.175029,-2.369404,0.133184,-2.688562,5.947641,-4.608115,-9.209760,7.434338,8.194617,-0.645180,0.993568,9.062901,0.971892,-2.646531,4.775889,4.096664,2.922569,9.667210,-7.599560,-6.339650,-6.638275,-2.073174,4.712707,3.420593,3.751447,5.072320,9.325756,-6.932263,4.221412,-1.214434,-4.333423,4.773401,-6.226680,-7.192966,-6.799301,-0.996170,-1.503704,-8.020252,-0.834123,-0.173943,8.600429,9.727272,-9.238400,7.816707,-6.515176,-3.670085,2.948516,-7.680901], dtype = "float32")#candidate|3342|(1512,)|const|float32
call_3341 = relay.TupleGetItem(func_2804_call(relay.reshape(const_3342.astype('float32'), [14, 12, 9])), 0)
call_3343 = relay.TupleGetItem(func_2807_call(relay.reshape(const_3342.astype('float32'), [14, 12, 9])), 0)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
var_3347 = relay.var("var_3347", dtype = "float32", shape = (1210,))#candidate|3347|(1210,)|var|float32
call_3346 = relay.TupleGetItem(func_296_call(relay.reshape(var_3347.astype('float32'), [11, 10, 11])), 0)
call_3348 = relay.TupleGetItem(func_298_call(relay.reshape(var_3347.astype('float32'), [11, 10, 11])), 0)
bop_3358 = relay.subtract(uop_3314.astype('uint64'), relay.reshape(bop_3337.astype('uint64'), relay.shape_of(uop_3314))) # shape=(14, 4, 12)
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_3373 = relay.TupleGetItem(func_1350_call(relay.reshape(call_3346.astype('float32'), [1210,])), 0)
call_3374 = relay.TupleGetItem(func_1352_call(relay.reshape(call_3346.astype('float32'), [1210,])), 0)
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_3380 = relay.TupleGetItem(func_1350_call(relay.reshape(call_3346.astype('float32'), [1210,])), 2)
call_3381 = relay.TupleGetItem(func_1352_call(relay.reshape(call_3346.astype('float32'), [1210,])), 2)
func_2244_call = mod.get_global_var('func_2244')
func_2247_call = mutated_mod.get_global_var('func_2247')
var_3403 = relay.var("var_3403", dtype = "uint8", shape = (90, 2))#candidate|3403|(90, 2)|var|uint8
call_3402 = relay.TupleGetItem(func_2244_call(relay.reshape(var_3403.astype('uint8'), [15, 3, 4])), 0)
call_3404 = relay.TupleGetItem(func_2247_call(relay.reshape(var_3403.astype('uint8'), [15, 3, 4])), 0)
output = relay.Tuple([call_3341,const_3342,call_3346,var_3347,bop_3358,call_3373,call_3380,call_3402,var_3403,])
output2 = relay.Tuple([call_3343,const_3342,call_3348,var_3347,bop_3358,call_3374,call_3381,call_3404,var_3403,])
func_3407 = relay.Function([var_3313,var_3347,var_3403,], output)
mod['func_3407'] = func_3407
mod = relay.transform.InferType()(mod)
mutated_mod['func_3407'] = func_3407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3407_call = mutated_mod.get_global_var('func_3407')
var_3409 = relay.var("var_3409", dtype = "float64", shape = (14, 4, 12))#candidate|3409|(14, 4, 12)|var|float64
var_3410 = relay.var("var_3410", dtype = "float32", shape = (1210,))#candidate|3410|(1210,)|var|float32
var_3411 = relay.var("var_3411", dtype = "uint8", shape = (90, 2))#candidate|3411|(90, 2)|var|uint8
call_3408 = func_3407_call(var_3409,var_3410,var_3411,)
output = call_3408
func_3412 = relay.Function([var_3409,var_3410,var_3411,], output)
mutated_mod['func_3412'] = func_3412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4088 = relay.var("var_4088", dtype = "bool", shape = (11, 16, 12))#candidate|4088|(11, 16, 12)|var|bool
var_4089 = relay.var("var_4089", dtype = "bool", shape = (11, 16, 12))#candidate|4089|(11, 16, 12)|var|bool
bop_4090 = relay.logical_and(var_4088.astype('bool'), relay.reshape(var_4089.astype('bool'), relay.shape_of(var_4088))) # shape=(11, 16, 12)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
var_4096 = relay.var("var_4096", dtype = "float32", shape = (1210,))#candidate|4096|(1210,)|var|float32
call_4095 = relay.TupleGetItem(func_296_call(relay.reshape(var_4096.astype('float32'), [11, 10, 11])), 0)
call_4097 = relay.TupleGetItem(func_298_call(relay.reshape(var_4096.astype('float32'), [11, 10, 11])), 0)
uop_4103 = relay.rsqrt(call_4095.astype('float64')) # shape=(11, 10, 11)
uop_4105 = relay.rsqrt(call_4097.astype('float64')) # shape=(11, 10, 11)
func_1246_call = mod.get_global_var('func_1246')
func_1248_call = mutated_mod.get_global_var('func_1248')
const_4111 = relay.const([-8.183350,-7.456821,-5.406991,8.909225,-3.403746,2.552534,3.951219,-2.190272,-2.034888,6.413049,-2.370020,8.897088,-4.943153,-5.183260,0.530374,0.757326,6.734114,-4.131850,-2.616551,9.743496,9.974641,1.556890,-4.475626,0.155108,3.617585,-6.479154,-4.781138,-0.176884,5.227230,-1.579877,-4.823180,-8.196381,1.906749,4.378446,-2.778642,-1.332353,5.188614,-5.065009,-4.602959,9.580660,1.639800,2.035757,0.511967,-6.708393,-4.352748,2.563627,0.280395,-0.186112,-7.952475,-9.931619,-7.438240,-7.202184,2.827736,2.047620,-6.579089,1.974086,-5.208589,-6.367691,8.447222,-6.393558,7.640732,-3.641857,7.070343,-5.375366,-5.528923,1.888422,9.417071,5.038976,-8.359820,-5.692507,5.409909,-4.619765,-1.874449,4.175172,-4.543450,-5.064921,-4.534239,-7.170492,3.311489,1.637528,0.107176,5.936100,1.141344,3.090855,7.948143,-0.990115,-3.834083,0.054298,3.935456,-6.278810,-3.101170,-9.588992,7.371778,3.089310,1.169071,-1.478963,1.024088,1.447237,-4.413649,-5.060389,0.881443,-4.001159,-0.179506,-8.449902,8.375791,9.880820,5.707375,-1.100568,-4.770639,-6.714039,-4.758958,-7.857531,-8.271746,-9.100957,2.751527,-3.170411,-5.515081,-1.478796,-7.959828,-8.824876,9.742583,-1.766589,1.152877,8.591487,-6.112743,5.182004,-1.100645,-0.885891,-6.532871,-3.453086,2.996701,-9.876249,7.317636,-0.165603,4.801530,8.453623,-0.329333,-7.927156,-5.091181,7.179574,1.124274,-8.715435,8.675560,-4.489094,8.799286,5.699267,7.310889,-7.408554,-6.757181,4.316664,-7.697980,-3.066739,-8.770131,-0.202676,-7.215022,1.557909,9.961043,9.726394,-1.437576,-6.787839,-1.243211,-5.511961,0.037007,5.772255,-9.971872,0.466662,4.312581,8.763104,-5.021604,4.427125,-1.215682,-3.309752,-5.941631,-3.682418,9.430513,-8.395194,-4.239102,-9.626215,-1.005060,0.524089,-2.249708,4.281995,-1.238252,3.273886,-0.090376,7.182763,0.830062,-0.664705,0.475724,-0.720193,0.773567,4.177364,8.773942,3.345725,1.761051,-9.599334,-5.399588,4.397958,1.703456,3.901749,8.229057,-3.012997,1.039380,-8.359820,4.656101,0.040112,-6.339319,-6.235722,-8.534320,1.632751,-2.811822,7.897641,0.553033,3.776538,5.866062,-5.572985,3.317686,1.374617,-0.749369,1.240754,-4.257852,-5.545213,5.837006,7.233153,3.812277,4.868588,-0.730888,-9.918756,-8.277031,-9.384769,-1.451653,-6.155263,6.610562,-9.914238,-7.285535,4.041145,3.316579,6.403838,-1.616232,-7.417864,4.704438,7.470331,6.023917,1.782524,3.215664,0.915054,-9.494081,7.379780,-7.903784,3.224655,-6.276295,5.207137,0.419976,-3.365001,3.752128,8.718128,9.266133,3.116827,-4.223906,-9.709796,-8.389045,1.138104,4.451522,7.278960,5.951364,-9.711589,1.196475,5.070055,-0.995512,2.646054,-2.453537,-0.766671,8.334106,-8.743062,-8.423536,-6.627895,2.798610,-0.137288,-6.817081,-1.494325,-6.203731,2.189109,-3.532828,-3.659174,5.854975,9.120171,-0.240428,3.539501,7.790618,4.443845,-2.459599,-6.035169,-9.797009,-0.141879,-3.679894,-3.112809,-9.133193,6.234383,-6.417781,8.147416,5.758302,8.891935,3.142593,3.555221,1.628738,-6.336060,-8.662049,8.776553,2.964136,-6.190658,-6.246506,7.179125,-9.415165,6.707021,-4.503510,-8.666115,8.449085,-5.190128,-4.464889,5.140056,-7.775880,7.810519,7.951220,2.120334,2.610024,-3.435218,-3.141728,-4.094532,-1.860207,1.987683,-0.361146,-0.202891,-9.393794,-7.798927,8.405350,-5.295567,-2.307323,-5.140817,-5.285275,-0.445180,5.035743,7.488935,-9.722212,4.838036,4.054617,-4.944131,-8.004517,-0.275752,3.051761,-6.252445,-7.879594,-6.289098,-9.164932,-9.308343,6.298712,-8.992467,-9.729606,-0.561399,6.159251,3.794481,0.514408,4.533664,0.408407,-6.232291,-2.670453,9.788516,3.808425,4.738134,-6.347764,-5.817463,8.533625,9.775533,-5.362551,-8.397430,1.816322,-5.826357,0.627310,-9.680883,8.263736,7.078590,4.636131,2.443876,5.710386,0.898996,-8.812981,5.498230,-1.021569,9.279961,-9.319468,5.979284,-6.432471,-8.826544,7.432727,-0.097125,3.231304,-3.967186,-9.443663,8.774082,5.508312,9.164822,-5.912442,9.209775,9.142724,3.024804,-5.384105,2.167413,4.018868,2.558695,4.459655,8.453914,4.648908,0.854426,8.134342,8.311113,1.763158,6.550491,3.879640,0.416162,7.891810,0.209912,3.478199,-9.133797,-1.707943,3.184110,9.087084,2.368271,-5.129350,-8.680325,6.383404,-5.891022,7.862561,9.461003,-2.518961,0.797202,8.260262,-3.868485,-9.651449,8.859939,-8.513908,-1.682526,-0.987443,-6.195835,-1.208453,-1.772321,7.242583,6.755109,-5.040888,7.183357,7.458779,3.656369,4.724104,3.941798,-8.303426,8.657644,4.748561,8.499689,2.631497,-7.547293,-8.860247,9.342596,-2.991481,-4.445922,8.439687,7.015786,6.037157,-2.903917,-1.251739,-4.214256,-7.599221,6.293439,8.904021,7.542677,9.791924,-1.354038,0.194813,9.387455,-1.876030,-0.110784,8.619255,-0.676387,-9.961248,-5.197989,-8.214312,-2.168721,-5.382329,-8.229047,-4.443575,-5.848813,-8.334793,8.754262,-9.582414,3.189299,8.108331,6.462952,6.090570,6.344574,-0.276358,5.282154,-9.102975,8.438745,6.670335,-9.120992,-3.746739,5.403051,9.550560,-7.135528,1.518017,9.188379,9.883184,-1.737980,-2.841473,6.159277,4.383911,-2.178456,-1.875231,-1.714617,7.564407,7.707489,0.725652,-5.307095,5.386369,-6.330224,-9.479600,4.993118,-7.968441,2.519904,0.054872,8.069934,3.527755,-4.393212,-4.531693,8.028104,4.065715,7.774454,-9.509915,-1.296779,-1.530280,-6.972628,-6.164522,-6.965117,4.068434,0.219980,-4.909259,5.391514,-8.257511,8.359096,-5.710918,5.898500,5.180895,-2.839354,-1.800725,-3.735364,-8.284652,-8.464030,-2.576825,8.784113,-8.219600,4.852559,-5.029577,-0.533649,-3.394263,5.856672,-1.898907,3.506809,0.472006,2.388168,-2.508073,-9.592104,8.168753,2.356834,7.759167,5.244478,5.960520,8.154663,-2.967219,8.458935,8.665390,4.850553,0.582416,-3.435612,1.013386,-9.543486,5.660786,-0.153085,4.850904,-8.526374,-9.838624,-7.454619,-8.891032,1.685060,5.060366,-6.173524,7.050974,5.628485,-1.855117,4.283512,3.711208,8.148735,-5.114310,7.742716,9.789048,2.047935,-8.132953,0.398736,2.640894,0.006543,5.065963,6.490417,5.948443,6.171191,-4.298626,6.185537,5.657250,-9.933052,-6.995497,7.685845,-4.508053,-1.612128,8.833238,4.056597,-7.117190,2.530278,-2.230136,8.120942,8.879229,3.128252,1.398758,-3.793836,3.727703,5.563174,-6.519254,4.795203,5.863110,5.610615,-1.615571,7.513166,4.653311,-2.008552,0.103271,-9.233589,5.193505,0.815594,-7.166058,4.115154,-8.776019,-2.797384,7.271915,4.042203,2.291358,0.875735,-5.256689,-6.626539,-3.545974,4.949417,-4.928362,-2.124732,-2.670336,2.181900,5.002867,-9.801593,8.636056,0.902678,7.900032,3.363178,7.334631,-3.282856,2.802137,-7.244801,6.284075,3.740438,9.649146,3.076358,9.049344,-2.541467,2.824644,2.756677,2.702143,-5.523187,3.680912,0.872405,-7.095414,-4.692109,7.436331,2.787603,8.193066,-7.525248,1.553887,-0.737861,-9.691570,5.686118,8.766226,-2.935077,5.613128,2.209370,-4.843915,-2.562485,-2.010107,-4.876434,0.743948,5.949772,7.107254,1.918921,3.625617,8.902723,-1.751411,-2.015391,0.898120,3.597947,1.404718,-4.059981,9.192520,-5.571847,7.018463,3.132473,1.681292,9.304709,8.271178,3.087491,-6.818435,-9.596999,5.366175,2.882582,-9.233868,-5.264006,6.677109,1.843486,7.383872,7.572968,3.114096,0.476954,1.188266,7.635037,4.093100,7.596532,5.492266,-9.748085,-4.006007,-3.687845,-4.642143,-2.632817,9.120636,3.638387,-9.577248,7.598897,2.642363,-1.041023,-7.874819,8.606183,-4.328158,7.917448,9.711483,-9.695185,1.516962,-6.626367,3.638850,-1.463766,-7.330821,7.043929,-2.288608,-0.481392,5.084336,-6.853198,-9.910663,2.595876,-9.717292,3.384247,1.127686,-2.779569,-6.408554,-0.210051,2.052327,-5.749114,-9.279583,-1.116398,-1.033195,0.270679,5.205058,3.071809,5.780376,-1.456217,-6.064709,1.086159,-7.729595,-5.745476,-9.698815,-2.969877,2.559700,-2.466193,6.890589,-4.868925,9.239302,1.043211,9.688529,7.264727,-1.142454,1.464957,2.353404,-6.259925,-6.345815,-5.008313,6.192829,-4.903473,9.075496,5.370975,-1.770359,-0.553864,5.889613,-0.137749,2.242909,1.837286,-2.937438,-6.781733,-1.640316,6.471248,4.051026,0.154807,-4.180823,-8.950967,-4.152100,-9.337083,3.108291,5.648692,0.473311,-4.128835,9.308982,-9.037104,-9.714825,3.412380,4.330146,8.240394,-4.227105,6.172435,-2.582167,-9.659048,1.160640,7.725832,1.900471,0.615027,6.426129,2.163228,-0.236789,-5.704890,-9.308067,0.098398,-0.214044,6.288389,5.639603,2.158222,-6.407573,6.615125,2.482082,-2.531708,0.702291,1.052233,2.756918,0.749518,-2.733436,-3.634707,0.156238,-1.580818,-9.229207,-6.660848,-9.741885,-4.271961,1.115720,4.392088,-4.898697,8.596518,8.153293,-9.917765,-0.520203,-2.688440,6.780655,0.412062,-9.105494,-5.176099,8.525969,2.886778,2.528821,-4.036219,7.098463,7.568689,-1.905916,0.427107,7.237922,-1.045100,6.608556,-0.691894,-9.668809,3.549210,4.384730,5.615863,-2.847370,-7.183728,-1.675989,-5.726590,-7.263294,-4.742189,-4.925126,3.057860,1.865339,3.721733,-1.953907,-4.353779,-7.973114,-4.095098,4.004612,-9.412853,-4.514609,4.735466,-7.719481,-9.194793,0.595629,5.938712,-5.848206,4.419233,-8.400599,-3.796122,-4.080104,5.599484,-9.861735,-3.149091,-4.642168,2.215421,-3.938184,3.679941,-2.624246,7.007747,-3.685380,4.117060,5.023929,0.811796,-1.059534,3.081003,-5.236284,4.842112,-4.641240,-3.801646,-7.047967,1.192938,1.241337,1.525862,-7.144786,1.645188,3.467882,7.094709,-2.029350,6.693712,-4.328525,1.892148,9.085115,1.142517,3.860944,-8.002662,9.312120,-8.932202,7.167583,-5.361871,-0.143453,-6.867535,-7.820224,4.733261,-1.847861,8.201843,9.538567,0.738711,7.777645,-7.463545,4.719109,4.399604,-2.098321,5.232375,1.017749,1.415213,5.493655,-0.186903,8.180733,-1.519421,-3.902075,-0.575927,3.500725,-1.280336,-6.202041,4.169176,-4.604578,-8.630636,-5.763401,-5.874695,5.551445,5.122168,7.404643,-6.716476,1.979623,2.962537,0.205972,3.591431,1.406165,4.240552,-5.984958,5.675770,8.804285,8.716931,7.227011,-2.692137,4.152973,-6.656661,7.472822,0.467235,3.910053,-2.880189,-6.035733,9.128921,9.472944,6.513471,7.536720,-9.568904,-1.667528,-4.401084,7.386614,-3.146014,0.227492,-5.806229,-8.860869,9.910537,-4.022213,-6.044563,-4.742617,-7.721632,-6.940216,3.160491,5.980098,1.395552,-2.960390,3.000306,-6.888012,-8.784873,-6.582255,-0.841444,6.708251,0.452168,0.323561,-6.774886,3.348944,8.648975,0.054684,-8.204894,5.893868,-2.502878,8.103491,3.937765,-8.984504,5.446474,-3.665280,2.228988,-8.726616,1.058182,-6.036159,3.375406,5.664135,6.965589,4.537687,2.609944,2.324103,-1.736707,0.416690,-2.510405,-5.951471,6.924707,8.201965,-6.874219,0.109601,4.029214,8.719111,1.435782,-9.890389,4.200927,-3.053786,-4.478001,9.906614,9.284046,-3.583167,-9.568280,1.580819,-9.714218,-6.105239,-8.541864,-5.184692,8.533819,-7.500561,-3.395298,6.259624,0.305753,-6.979533,-8.818261,-4.900103,1.527261,7.179812,9.798867,9.780701,-5.252937,-1.141416,6.816775,-9.437286,2.849143,8.058710,9.615899,3.483607,5.512319,-9.847203,6.164120,1.994067,-7.418881,-3.515508,9.408788,0.810051,2.605377,5.100418,-5.619538,0.074542,-7.468317,-9.131465,-5.359547,-4.108752,2.937293,3.448040,-7.972518,7.729377,1.449589,-8.475851,0.095904,-4.810623,-7.009159,4.053397,-8.432092,-1.189799,-5.867835,-3.378769,-9.341106,-7.880217,-8.305005,4.905864,-5.441994,2.837133,-2.876463,-5.745845,0.851021,0.100719,-8.535391,-5.833679,6.400752,-1.747897,1.357578,-0.749566,8.576946,-3.885424,-2.775179,-4.176928,-7.247542,0.866053,-8.294123,1.057493,-6.119280,5.759139,0.915869,7.533166,-8.458461,-8.677886,4.919733,7.547080,8.226805,-8.348404,4.676338,-5.018590,-9.206220,2.810627,-6.684930,-9.585697,5.912957,9.943761,1.810229,4.164127,-5.519213,-2.525961,3.290528,3.909455,7.873455,-7.555156,-8.209744,-5.376295,-7.170238,9.897424,-9.416970,-8.820674,2.616726,0.526025,-2.967123,-6.199217,-5.596974,-2.585154,7.126750,4.074221,4.624701,4.746128,-2.316027,-5.115794,3.109362,7.468988,8.595140,4.413012,-9.262172,-2.218808,-8.561916,2.481731,2.137190,-2.565549,0.003639,4.594006,2.545368,1.352278,-9.011639,0.760778,6.046210,-3.237234,-4.007032,-1.469826,-4.019556,6.715743,9.508522,4.084454,6.382671,6.915111,4.575106,7.342262,-8.970380,6.945219,2.425344,-8.941594,7.527787,1.259726,9.250592,-7.542600,-5.108683,-4.649692,3.908655,-0.991741,5.100631,0.729356,-3.933283,7.144005,9.843104,-7.145808,9.405665,-9.502111,0.865827,-9.803467,1.034337,-9.077973,0.707588,9.854179,-7.483205,6.345273,-9.720077,8.647262,5.588254,8.126941,8.585316,3.200503,-2.113395,4.441126,-2.164569,-9.738898,1.937936,7.340907,4.579690,2.032883,7.148604,0.742831,5.411042,-1.641767,-9.208500,-7.833562,7.242471,-7.858665,1.542386,3.700171,-9.119027,1.785375,-2.762332,-8.030227,8.901781,-8.326316,-4.037269,-6.959867,-9.484942,-9.685849,-2.876208,-5.089888,6.195645,-3.252607,-2.372482,-4.154208,6.179888,-3.496469,-7.130089,-4.074869,-6.979138,-4.098145,-8.336050,3.580148,-4.657474,2.323673,-1.238644,-3.697499,2.399320,-6.516152,7.560191,-6.637075,-0.349947,-0.214713,5.724721,-4.869950,1.805559,-7.344136,-4.712352,-4.354949,7.707488,1.534491,0.634230,1.506425,-6.727618,6.655492,-6.769167,4.502129,-7.558603,-4.789341,-7.939869,-8.474172,9.031810,0.247105,-8.519003,-5.770311,-0.370524,6.286660,-7.216810,-1.238688,-9.257096,-7.827582,4.945658,5.680040,6.466936,7.598387,-7.775269,-9.019917,-0.960768,7.558025,0.710510,-9.227112,-7.414339,-2.040449,1.119440,4.394994,-5.721940,-4.139220,3.948608,9.378390,1.270944,-4.548273,-6.610197,-0.107841,9.219721,8.937862,6.089659,-2.089649,9.559401,-3.534624,0.870696,-9.424448,3.983560,5.529902,-5.739000,-9.812502,1.528278,-8.784945,1.413964,-8.702810,-9.067440,9.866574,3.808754,6.567762,-3.814590,8.799853,-6.844527,3.043259,4.695868,-4.277856,-9.365581,8.511539,-3.624776,6.829801,-5.966336,-1.862200,-8.124291,9.279260,0.086503,-4.149940,-6.459916,8.249313,-4.036043,5.799939,0.025804,0.701657,-9.041352,5.044014,-1.549008,-1.679354,-3.675547,-5.909208,-2.745453,-1.836499,-4.145135,-3.037992,0.689716,7.474807,-5.700261,3.338280,7.260487,0.174535,5.125144,-2.750952,-2.989064,6.209969,7.621661,6.065067,0.411776,5.468357,-8.702136,-3.298835,3.863231,4.299595,-7.703542,6.783232,-7.686400,9.647004,6.637845,6.929487,-6.289998,-1.182905,-4.601847,-1.240998,9.695215,-1.185401,3.843413,7.025175,-3.223414,-1.223627,9.734589,-2.887374,3.505027,-4.295683,7.887735,-4.344398,-0.846724,9.629379,-8.562933,-1.010883,2.690819,5.430698,3.887786,7.588457,-2.098318,4.280819,7.346876,0.817864,0.681261,6.860445,5.598884,8.234043,-3.962984,1.575895,-1.740138,6.392748,-1.801735,-6.548794,1.930233,8.879123,3.027713,-2.690661,7.267679,3.429361,2.348353,0.383558,-5.133773,-5.754551,-0.929245,9.425562,3.989044,-5.698616,-7.922668,4.088764,2.769091,3.078633,4.067383,4.380698,4.968563,-6.131912,-6.620152,3.733732,-0.316748,4.250321,4.999499,2.031106,4.340652,-6.944889,-8.493141,-4.296106,1.731232,-8.980069,3.502703,5.208203,3.358062,4.490397,4.678961,-8.844591,-4.737990,-9.575707,5.409935,-9.618466,-5.519493,-0.394846,-2.552782,-1.200229,-4.019021,3.229864,-9.073643,-8.768092,-7.172782,3.179007,-2.931260,2.891594,-9.408200,2.488393,7.960754,-9.311750,-4.643428,-4.969553,2.466334,-7.972084,8.726823,7.601301,-1.155883,5.939794,0.881777,8.588510,8.729156,-9.847580,-7.312786,0.028032,9.097384,9.064016,-2.866692,7.808028,-5.304165,0.640394,3.061485,-4.519303,-3.274488,-3.227507,-1.693567,0.682383,-5.830613,6.163323,4.955594,-0.330581,3.898039,5.566219,2.848497,5.142705,-4.739484,9.307834,-9.617248,-8.824957,-7.082670,-1.617341,-1.796330,-1.921126,-5.144749,0.682483,-5.592964,-6.403826,-8.984521,2.673938,-0.774867,7.825030,6.218691,-5.464665,-6.123041,-5.972819,2.598960,-1.780942,-0.472320,-3.085447,-2.195702,5.701860,2.480909,-1.723257,5.547470,0.008840,3.770560,-9.815495,-2.482565,-7.959089,7.079925,9.703451,1.022273,-7.079698,-7.325241,-4.344931,3.284900,5.305536,-9.311383,-2.856348,7.385512,1.832072,-9.189250,7.106975,3.016374,-0.761194,-5.861803,6.459176,7.594485,4.751156,8.346644,-4.787958,4.730875,1.190927,-1.054855,0.862126,-7.736427,-8.176460,1.068248,8.320615,2.855635,6.845570,0.256446,9.737229,2.348944,-5.279756,3.930476,9.889529,-1.646943,-2.390525,-3.829659,-9.348149,-4.123012,2.025863,-3.385948,-7.862353,-2.643479,1.824747,6.969799,-1.047404,0.854261,0.534260,-1.056963,-1.526708,8.233440,3.502653,-7.966818,-1.462575,-3.790888,-5.999450,-4.801471,-0.997416,1.831533,-6.676636,-6.905577,1.461804,1.982249,-6.307791,3.350252,-8.868161,1.174536,-5.934528,6.244963,3.075514,-3.833125,-8.370511,-0.897143,-5.096792,-3.247508,-2.199230,1.282035,6.653337,-7.038289,-6.663188,-0.305310,9.073937,-4.260933,0.030074,-6.040652,2.302376,3.450102,-8.305122,-6.110879,8.349229,9.264213,-4.079337,6.387722,-8.863719,6.090417,7.416234,5.962896,-2.343995,-4.588314,-6.131135,-1.637359,4.640999,7.777453,6.394588,-5.651818,3.765837,3.104729,5.132511,2.767895,-3.444781,-6.078826,-1.167436,-4.768491,-3.581655,-2.669943,-1.284628,-4.251244,-0.131034,7.905266,-0.219565,-5.827692,4.253719,0.988570,-4.703069,-5.764208,2.740854,-5.712494,4.572580,-4.162430,2.510727,-6.842072,2.132201,-9.459845,-2.915008,-4.004241,7.851223,-5.766767,-0.257865,9.540104,-7.882654,5.481395,0.298228,4.837219,1.522941,-6.418168,7.760358,-3.533809,2.273990,-2.468403,-4.419480,-9.683937,-4.435927,-2.872361,-1.424608,9.185682,-4.803597,5.430491,1.010717,-2.537430,-8.359636,0.547826,8.362800,8.890319,-7.967743,-4.844633,-0.111065,1.745089,-8.446408,4.367412,2.999548,9.815991,6.882522,1.046801,-3.507224,8.929997,-6.784712,-7.907161,-8.135787,8.873883,5.236686,3.538953,-6.665391,-6.292340,3.568790,-7.150105,7.829927,-3.235488,-1.761656,1.627309,5.248224,6.103434,7.549256,4.648823,0.575854,6.640916,-9.213900,-5.769377,0.005031,8.788940,-4.975349,1.116997,-3.255436,9.248045,-7.697660,5.687146,0.478198,2.383222,-0.656167,8.375037,1.704729,-9.788654,1.775861,7.250375,-6.224614,3.696837,-3.327240,-3.061243,-7.002826,0.341871,-8.142914,-7.878281,9.772562,-4.866858,-5.084250,-2.462196,-9.455831,-2.179671,4.505053,-2.468533,-3.760555,4.681006,9.269959,1.302248,0.280046,-2.605075,9.850897,9.174465,-2.948932,-9.215533,5.152782,4.341401,-6.957014,-1.090206,2.273714,5.506245,-7.199712,-9.138564,-2.056241,-6.569883,-5.752896,2.994893,4.689428,-4.782606,-2.558099,6.027058,0.710782,-4.874349,-6.250246,-4.781502,7.368597,3.655314,-3.120547,5.123218,-6.967043,-5.378524,-7.875994,-5.179540,-7.861751,-0.209095,-1.374846,1.653133,-0.193672,6.442268,-9.571121,-8.220697,4.817386,7.755528,3.748482,-1.596201,-6.241462,-5.581324,-2.091487,2.968171,0.985439,3.049740,1.479685,-2.742570,-3.274467,-0.615468,6.308418,4.278194,-2.368399,-5.457886,6.851850,6.572193,3.449531,9.158450,2.250096,-1.355110,-0.839891,-8.153715,-2.694370,2.503235,-1.656830,3.801731,-7.377907,-0.419191,-6.442870,-6.139309,6.509132,0.458786,0.608174,-2.530445,4.620389,5.725885,-0.987446,1.078887,-9.740024,-1.319764,-0.441829,-5.517546,-2.968836,-7.275381,9.629909,-4.806348,-1.215969,1.868886,-6.684379,-3.966905,6.233893,8.734630,3.395299,-9.702099,1.157011,-1.171449,0.059576,-6.551980,1.272201,-3.959392,3.471808,4.667860,-5.237930,6.274424,-0.118987,2.128507,-6.769488,-3.740889,2.910484,8.379563,3.032755,8.226633,4.634703,-8.920378,-5.351384,9.496307,6.548059,8.827018,-8.269518,7.085212,0.768701,-9.093112,1.522995,0.702152,2.074809,-8.475124,2.727455,3.125452,2.666091,5.135976,-2.453147,-1.180235,-2.270070,-0.775019,-3.143309,4.537398,-0.532497,5.585869,-5.073221,-5.257076,-4.304667,-0.163697,-0.062027,-6.017858,2.134967,0.592902,-2.993493,-3.863285,-9.585290,0.861729,-8.439026,-1.581006,-3.430287,-3.830036,-2.395240,0.263022,5.321045,-0.179353,8.962814,-3.489912,0.390098,8.179568,6.830580,-9.413760,-2.826504,-4.896923,-2.674336,6.066684,1.997637,-3.384648,-5.282409,-5.736305,2.688851,-3.840753,1.558347,-6.633244,-8.581424,-6.649303,6.919676,8.600189,5.886710,-0.679664,-6.445869,-7.514040,0.894014,-0.224966,-7.009498,-9.886168,9.563540,4.492649,8.657849,3.730055,4.567656,3.500536,-3.439042,-5.102087,-2.873817,-8.095334,-6.088627,-8.429040,5.128379,8.600724,0.935690,4.061716,-7.388211,2.872082,-7.803533,-0.163836,5.543298,-4.811729,-2.965814,5.640167,5.505635,-3.659663,-0.696033,-0.292868,0.278328,-5.057546,6.388669,3.038427,-6.053315,7.686134,-7.731422,-4.209401,7.739607,9.074107,9.360707,-9.366504,-0.952643,-5.254247,-8.218493,-2.528707,-2.491192,-3.309854,7.812555,-2.420336,8.535339,-5.225472,5.722052,4.399198,-0.137266,-7.839513,9.591120,-4.665290,5.178882,-3.327842,4.920795,5.636939,9.401327,7.895802,-9.009916,-7.912711,8.706819,8.371150,7.826137,4.523827,9.875562,9.563510,9.043102,9.098540,-5.642128,-9.679042,-4.218510,-4.421050,1.721168,-7.234073,2.111606,9.956098,-8.879751,1.593723,9.468129,4.413594,-5.668262,9.205898,-3.600429,5.561120,8.508363,9.336392,7.044653,5.612835,5.007000,-5.202575,2.109299,-7.054824,-9.263559,2.007766,-5.404929,5.170933,-1.417125,-9.512396,7.777753,3.558911,8.878991,-0.625515,-3.133339,-9.777967,-8.756755,-9.590502,-7.644913,8.254618,-9.475534,8.499588,8.945095,-5.597115,7.873707,-4.080749,-0.604737,6.163976,-5.954509,-8.903933,-8.146175,7.527838,-0.248442,-0.559966,-0.079149,5.375838,-3.736063,4.314270,4.139946,8.443410,2.127953,1.151468,-1.983878,7.061261,7.408155,2.454404,-9.068072,-6.595214,0.045234,-2.259247,-9.982692,-8.117979,-0.563109,-8.525933,8.347988,-2.536792,4.013111,-7.827670,1.933408,2.028181,-2.456465,-9.979188,5.264413,3.374437,9.701702,-4.980074,9.680220,-2.947952,-1.510244,-7.436742,2.484641,-2.858205,-4.321120,-5.886459,0.934405,-4.882662,-9.468350,-2.462748,5.925414,-0.131397,4.391319,-4.145950,-6.002185,-5.532602,5.405277,-6.449251,-6.377154,-3.702062,-6.129527,-1.289290,-8.738365,8.933894,4.291790,-4.326910,4.800564,0.279117,5.996185,8.903280,-1.331644,-1.495047,-2.204041,-1.330111,-0.689430,-2.192412,2.210472,-7.214457,4.787934,9.421488,5.810336,-0.513257,-3.715022,-9.295015,3.280529,1.193358,7.404150,-5.102136,3.416636,-1.193807,7.916537,-4.134495,0.467394,-7.973206,-0.582744,5.119788,9.062971,-1.279811,0.032000,8.938602,-3.360332,6.907638,-9.069557,-1.258740,-7.769982,9.847349,7.432212,9.755288,-6.051615,9.066973,4.170764,4.825643,-4.175009,-6.659891,-5.142647,3.229786,0.656154,-1.227756,-8.657028,1.466763,-0.406293,-3.327368,-2.283440,-9.706622,1.652925,8.617099,8.737074,9.852650,-7.340922,0.182135,3.552554,8.953628,1.800908,-4.971799,-7.736278,2.050503,4.273846,-2.303678,4.159955,-8.939670,5.517810,7.917116,-2.891716,-1.089731,-6.332849,1.311823,-3.498051,-9.582547], dtype = "float32")#candidate|4111|(2310,)|const|float32
call_4110 = relay.TupleGetItem(func_1246_call(relay.reshape(const_4111.astype('float32'), [14, 11, 15])), 1)
call_4112 = relay.TupleGetItem(func_1248_call(relay.reshape(const_4111.astype('float32'), [14, 11, 15])), 1)
output = relay.Tuple([bop_4090,var_4096,uop_4103,call_4110,const_4111,])
output2 = relay.Tuple([bop_4090,var_4096,uop_4105,call_4112,const_4111,])
func_4115 = relay.Function([var_4088,var_4089,var_4096,], output)
mod['func_4115'] = func_4115
mod = relay.transform.InferType()(mod)
mutated_mod['func_4115'] = func_4115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4115_call = mutated_mod.get_global_var('func_4115')
var_4117 = relay.var("var_4117", dtype = "bool", shape = (11, 16, 12))#candidate|4117|(11, 16, 12)|var|bool
var_4118 = relay.var("var_4118", dtype = "bool", shape = (11, 16, 12))#candidate|4118|(11, 16, 12)|var|bool
var_4119 = relay.var("var_4119", dtype = "float32", shape = (1210,))#candidate|4119|(1210,)|var|float32
call_4116 = func_4115_call(var_4117,var_4118,var_4119,)
output = call_4116
func_4120 = relay.Function([var_4117,var_4118,var_4119,], output)
mutated_mod['func_4120'] = func_4120
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4357 = relay.var("var_4357", dtype = "int16", shape = (14, 6, 13))#candidate|4357|(14, 6, 13)|var|int16
var_4358 = relay.var("var_4358", dtype = "int16", shape = (14, 6, 13))#candidate|4358|(14, 6, 13)|var|int16
bop_4359 = relay.maximum(var_4357.astype('int16'), relay.reshape(var_4358.astype('int16'), relay.shape_of(var_4357))) # shape=(14, 6, 13)
output = bop_4359
output2 = bop_4359
func_4362 = relay.Function([var_4357,var_4358,], output)
mod['func_4362'] = func_4362
mod = relay.transform.InferType()(mod)
var_4363 = relay.var("var_4363", dtype = "int16", shape = (14, 6, 13))#candidate|4363|(14, 6, 13)|var|int16
var_4364 = relay.var("var_4364", dtype = "int16", shape = (14, 6, 13))#candidate|4364|(14, 6, 13)|var|int16
output = func_4362(var_4363,var_4364,)
func_4365 = relay.Function([var_4363,var_4364,], output)
mutated_mod['func_4365'] = func_4365
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4477 = relay.const([[[-4.943437,-9.786537,-7.783870,-0.485587,-0.550604,7.979449,-2.771155,2.589897,1.931810,2.966349,4.007181,5.603431,8.205420],[1.714372,-5.253424,9.752520,-5.122143,8.161294,1.662131,5.840435,-4.887319,-4.396867,9.338464,-8.065010,3.207261,3.891747],[-0.355231,8.930404,4.800117,-5.112296,9.763092,-6.746120,9.623961,7.385520,3.485799,-5.343284,7.070524,-4.460488,1.893559],[9.834358,-5.110481,7.198761,2.600739,-8.346239,8.096265,-9.400123,-3.434731,-8.543376,2.079000,-0.261675,9.795880,-4.575558],[2.944823,6.058280,9.168480,-4.470563,1.656502,-1.421518,-5.289334,7.894397,8.065357,7.808089,-4.355034,6.135064,6.372431],[-3.039404,2.959005,0.959396,8.687577,6.480737,9.569041,-2.599521,4.732574,2.489823,8.992977,0.296253,-8.746172,2.105175],[4.067837,-7.942102,-1.981123,7.800723,5.029371,0.286821,4.087161,-2.229022,-4.593239,3.039574,6.596765,6.751076,6.481733],[-1.741126,2.781985,-5.611898,-3.866338,5.574338,9.759723,-8.741118,3.430031,6.739122,-8.289511,7.106055,-6.003047,-3.644520],[5.283049,-2.294065,6.148745,3.156339,-7.318530,7.924151,-6.807710,-4.156880,9.520866,4.917120,-7.688014,4.212249,-5.142314],[8.998460,6.867769,-8.460573,4.213319,5.083538,6.993305,-5.226531,-7.442909,7.696949,-5.923620,-2.279461,-0.926079,3.321951],[-4.722478,-7.409268,5.317371,4.216473,0.787078,-3.960701,-4.539392,8.486329,-2.434556,-9.465484,8.380503,6.348206,7.789860]],[[0.398515,5.479727,-8.389959,5.292930,-5.679294,-0.144872,1.505547,-5.618403,-5.686179,0.726189,-3.334896,8.459008,-0.369541],[-1.439456,2.626838,4.115551,-6.059557,2.771899,-5.271841,8.872953,1.660622,-9.866078,6.693881,-0.661166,-3.808595,-6.787868],[3.209104,4.622356,-6.552064,-9.282528,3.523528,1.900237,-6.169110,-3.494195,5.175642,-8.803459,2.455602,-0.133501,6.108313],[-1.649666,-9.436826,-4.095868,0.730337,-7.952580,-3.960468,8.898201,-5.043472,2.331147,4.994071,-9.448020,9.370939,6.042173],[5.430505,6.803147,3.684568,-9.515202,-4.007903,1.506009,-0.440810,-9.467640,-0.656077,-5.773796,-8.733811,-4.306680,0.344725],[-2.388750,0.018926,3.032875,6.539861,6.531850,4.862066,5.028717,-9.173238,6.378717,-9.748593,5.666761,0.435446,0.088837],[7.763405,1.712192,-0.657663,2.287616,7.054522,4.357956,-0.635844,0.950388,-5.503083,7.618354,-8.160892,-3.126836,-5.011782],[6.810617,6.937816,5.717273,-9.813681,-0.319787,6.284322,-6.107344,-8.476379,1.357236,-6.461988,-5.048651,2.226037,-2.668108],[-1.163655,-8.259712,-3.642416,-7.764956,7.248666,5.705513,-7.454815,-1.439011,6.701483,3.898828,-3.872262,-2.762148,8.119505],[-3.617419,4.107044,-6.508259,5.189098,-0.706335,6.669299,5.825372,2.282110,-5.963677,-5.996143,7.466094,-8.835345,-7.214570],[7.854507,8.147714,2.267930,-2.161943,-0.888224,3.343734,5.845472,-7.652637,-7.900837,8.094467,-2.780068,-3.839817,0.019511]],[[-9.207140,-7.595256,-8.110830,-7.355315,-0.935673,9.289093,-8.979116,-3.047150,9.765655,4.742957,-1.402441,-9.829423,8.403993],[6.160986,8.791906,6.059816,-8.200020,-7.851373,-4.506922,5.442243,3.444008,0.339100,-1.174838,2.205657,8.085949,4.225183],[-1.214441,-0.576645,-0.723390,3.474349,-3.381912,-8.661036,-1.219206,6.983592,8.872453,-2.078067,-0.869392,-8.712029,3.838860],[-6.469983,-9.881565,-6.450946,3.202438,3.785884,-8.525082,-8.810033,2.086112,-3.738502,0.875323,-7.268629,-2.452675,9.678779],[-6.981315,7.546500,3.282396,5.895298,-2.777926,6.600788,-4.488662,4.489628,1.789666,7.997779,-8.217188,4.760248,5.040953],[-8.501372,-8.339110,-8.396983,7.586526,-0.881107,-3.163697,8.584556,0.336583,-0.975909,2.008198,-0.655955,9.689143,1.961881],[0.267876,-5.895103,8.441221,-2.654347,-5.820241,-7.557120,3.838441,4.239648,-7.114711,-8.288809,0.490954,8.172703,-7.602125],[0.642063,6.846218,-0.377113,3.822824,-3.837810,0.754622,-2.377688,3.444511,-5.729409,2.504690,-1.223742,-0.568113,8.686667],[-0.709926,-4.539081,5.568223,-9.061319,-2.454428,7.392710,4.124069,-7.311959,6.086495,1.211824,-7.052392,9.060535,8.473930],[2.123242,-0.689462,9.913951,-6.948292,0.319600,7.028556,-5.349705,-3.184781,-0.787780,5.127353,8.846972,6.150104,-6.985828],[-8.693180,-1.029775,5.535393,1.398113,-5.959765,-4.018524,-2.247813,-1.545819,-1.063100,5.598548,2.439763,-6.282079,9.828456]],[[6.596736,-1.568208,-8.431877,3.084530,-6.724633,-9.731274,-2.930436,-3.363570,0.639019,-3.621304,4.284696,7.422568,-2.168788],[-9.402993,8.022669,-4.661131,-8.007584,-6.711373,4.941846,2.101028,3.322246,5.329149,2.023679,-6.490221,-1.859175,-9.142435],[1.728954,-5.069103,-8.946838,3.090603,-3.820124,-5.202944,-3.179581,8.452308,-2.893944,-5.880770,9.857442,5.192507,4.975748],[5.748343,5.598801,3.237659,3.625953,-7.155829,-3.397324,-3.302141,1.764657,-2.730988,5.717459,1.747576,-9.077718,8.547246],[2.293158,-9.663935,8.491991,-7.102493,-0.445941,7.503040,1.345271,0.234200,9.464555,1.239469,4.125654,4.236042,1.753320],[-0.824875,-9.357889,3.841136,1.891102,-4.320491,-3.751860,3.819189,1.826637,-8.504973,-5.633353,-9.637548,5.789387,-7.683562],[9.775795,-1.271174,-9.088400,5.006760,-6.380350,-4.137502,-8.531251,-0.753241,9.232795,8.481764,1.070999,6.697391,-9.157645],[8.102031,4.909277,-6.911274,2.066708,-8.509055,2.719242,-2.116312,-2.348991,0.285145,-6.472638,0.368063,8.721105,-4.952057],[9.890106,-7.551634,1.256367,7.093292,7.110109,-7.576526,-1.248225,-7.273457,-7.405798,-8.950065,6.497997,2.007188,7.118119],[9.990520,-8.631758,4.328961,-3.214448,3.808601,-4.029728,-5.428297,-2.567077,-7.920816,7.801112,-8.031311,-1.506889,3.888924],[1.455898,5.045046,7.200102,1.307593,-7.107587,3.231002,2.510455,-6.705622,-2.850686,5.767067,3.859817,0.019959,7.594816]],[[-2.842085,-8.978489,0.407380,0.490539,5.381063,-7.203948,-1.124676,9.738196,5.952241,-5.382510,-7.064444,-6.419287,7.519548],[-8.118580,1.934443,-3.339321,9.671596,2.040865,-6.566453,2.293555,7.339359,7.161542,-3.194933,-5.889268,6.623076,4.996286],[9.326957,8.090619,-9.454980,0.277288,5.801093,1.383729,0.846095,-1.389415,3.496949,8.540192,0.993137,-3.514592,2.239924],[8.915897,9.578474,1.483019,-6.875815,9.736576,-6.867029,-4.396287,9.391027,-0.305705,-8.317952,-5.159060,-1.599951,7.409102],[-6.738394,6.946866,-0.555533,-8.909674,5.812449,-3.998069,7.132392,-7.985728,-3.026799,1.833586,7.488936,-6.396148,-6.261253],[6.513009,-5.872730,-6.642800,6.308057,9.859679,-9.144321,6.132134,2.434113,-7.943416,-1.241748,-7.355154,2.187938,-5.958462],[1.362990,5.206654,6.266071,-1.387249,6.255848,9.399674,-8.553029,-4.787797,-8.119548,-6.251262,5.299900,-6.709869,-5.857890],[-8.660184,4.058667,-6.291193,-4.560024,-7.950135,-6.976399,9.394625,-8.627411,-7.500152,3.147623,7.219668,7.684071,2.534980],[-6.450663,-9.613420,-5.068275,7.864205,8.016922,-2.468465,8.564063,4.137161,6.698493,2.057916,1.270963,-1.296767,-4.319633],[2.068436,-3.018343,-5.293281,-7.186191,5.652816,1.480189,-5.433939,-1.958160,-6.481790,-0.358095,7.565940,2.860896,2.825212],[9.310781,2.686622,7.865567,7.313499,-9.864046,7.322682,-5.040921,7.964420,2.656362,-5.332558,5.540289,2.430213,-9.834642]]], dtype = "float64")#candidate|4477|(5, 11, 13)|const|float64
uop_4478 = relay.exp(const_4477.astype('float64')) # shape=(5, 11, 13)
output = uop_4478
output2 = uop_4478
func_4488 = relay.Function([], output)
mod['func_4488'] = func_4488
mod = relay.transform.InferType()(mod)
mutated_mod['func_4488'] = func_4488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mutated_mod.get_global_var('func_4488')
call_4489 = func_4488_call()
output = call_4489
func_4490 = relay.Function([], output)
mutated_mod['func_4490'] = func_4490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4501 = relay.var("var_4501", dtype = "bool", shape = (15, 9, 5))#candidate|4501|(15, 9, 5)|var|bool
var_4502 = relay.var("var_4502", dtype = "bool", shape = (15, 9, 5))#candidate|4502|(15, 9, 5)|var|bool
bop_4503 = relay.logical_or(var_4501.astype('bool'), relay.reshape(var_4502.astype('bool'), relay.shape_of(var_4501))) # shape=(15, 9, 5)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_4507 = func_4488_call()
call_4508 = func_4488_call()
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
const_4515 = relay.const([[8.155781,-6.306309],[4.999875,1.163683],[-3.759311,-3.184282],[-6.591605,2.263837],[-0.644284,-6.193356],[3.928223,3.697021],[7.035149,-6.649045],[3.569537,5.190726],[-0.977156,-4.756204],[-7.602067,9.680288],[3.392744,-1.678800],[-1.110012,-0.195452],[1.035463,0.697960],[-9.418870,1.644440],[-6.173544,5.304396],[1.614355,-4.689096],[7.480160,9.357681],[-3.736677,-7.066563],[-5.235707,-1.866153],[-3.667619,-3.097889],[0.707299,-2.949370],[-3.923521,-9.555192],[-2.374490,5.231158],[-8.384783,4.994872],[-7.954115,8.524889],[7.408247,-2.390076],[-6.359383,-4.055659],[-2.318325,1.235422],[-2.615108,5.915297],[4.939892,5.923835],[9.496806,5.353815],[7.381717,2.610031],[0.865088,-7.733228],[-9.101647,8.928423],[2.151409,-7.526795],[-7.314757,-3.117417],[0.875485,4.555000],[8.088055,-9.973351],[6.226615,-7.549596],[-3.275533,-2.338298],[-5.007221,-1.435053],[-0.700256,-5.879819],[6.459761,9.246192],[-0.302118,6.052629],[4.220238,-9.007163],[2.331704,7.582224],[-5.071581,2.950001],[-7.154591,-9.606719],[8.294314,3.095231],[-0.194309,9.890822],[-2.051580,3.556142],[-0.175059,3.670535],[-7.421506,-3.555344],[-8.997081,-3.767391],[3.454115,-4.554337],[-6.839784,8.521002],[5.338772,8.667675],[-2.857281,-4.147254],[6.177032,2.164353],[-2.362288,5.907081],[-0.190003,-4.445119],[3.175881,9.910597],[2.431614,-6.289215],[-8.200300,8.290216],[6.717662,-3.421417],[0.727943,-1.577908],[-9.969612,6.111670],[-3.063549,6.264619],[-0.745984,-9.435359],[7.702083,3.160104],[1.133509,-8.237976],[6.870718,7.656252],[-0.649286,-1.195325],[-3.383640,-5.335288],[-3.832876,0.360815],[-2.532061,1.439936],[2.749077,-3.798304],[9.967529,5.850499],[-6.151651,-6.429536],[3.879124,-9.677720],[7.851661,8.264259],[6.105094,8.455442],[5.409818,2.363523],[3.433867,0.265122],[-7.190999,5.623763],[9.849381,-8.708900],[-9.594382,3.578747],[-9.686324,4.258730],[-1.379044,-6.507040],[-8.465014,8.262009],[-1.400382,0.703053],[4.098440,-6.670765],[5.236359,4.026302],[-1.393186,-4.850148],[-4.124085,-5.826088],[3.431369,6.667832],[4.006411,7.975490],[4.740385,4.931376],[5.774410,5.839389],[8.099208,-7.705830],[-7.714775,8.361171],[6.241050,1.123915],[4.951383,2.198262],[-6.555485,-6.661575],[-9.061851,0.669303],[-5.199829,0.403078],[-5.319072,-7.762941],[0.875169,-4.428327],[-1.604880,-9.215442],[4.460903,-6.175049],[-4.908322,9.799643],[-4.233368,-6.428182],[8.532146,-5.632460],[-2.181340,-6.050844],[-4.824197,0.196378],[2.790848,5.945596],[4.615598,-8.369460],[-2.959771,-3.345758],[-2.726329,7.554214],[3.565189,1.659937],[0.977736,2.127333],[4.172618,-8.866013],[-6.084026,5.158400],[8.969905,-7.172779],[4.383729,9.767681],[0.213672,-9.366244],[2.412013,-5.388026],[8.837427,-1.401907],[2.399281,-4.072736],[9.834732,-1.932478],[-4.118036,0.706087],[8.926949,7.708294],[-5.260369,-8.950119],[-8.058323,8.575811],[-5.724493,-7.624266],[4.981223,-7.511594],[-2.459714,-9.432723],[-3.165038,-9.089392],[-3.819454,-2.890229],[8.965174,-6.317282],[6.503565,9.594745],[7.808222,8.616606],[-5.529846,7.068635],[-6.542046,-2.971439],[1.647958,-5.152358],[2.127954,-3.510028],[2.959553,4.190414],[-5.620672,-1.966045],[-8.123830,7.071292],[5.443063,5.112153],[0.594965,0.965750],[9.903203,-7.627732],[-7.207007,-4.739191],[4.410631,-9.013267],[8.125588,8.746504],[4.494595,8.284587],[8.621712,-3.904101],[-6.348733,-3.596949],[-6.523121,4.597612],[6.073780,-5.647222],[3.968343,-7.061126],[-7.161532,6.038822],[-8.620277,1.604359],[-1.707220,-2.253409],[-1.583397,-7.467236],[-0.922479,-7.452218],[0.497781,-3.206932],[3.223367,-4.660442],[4.395503,-6.416649],[5.807067,-0.928864],[-2.953365,-5.118619],[-1.474600,3.216533],[5.558321,2.996051],[-7.657597,-6.022151],[-0.931474,6.432810],[-0.228698,-3.988043],[-2.560013,0.852148],[-7.486666,5.043581],[4.518914,3.326543],[-1.971849,-2.171161],[3.539844,-7.428426],[8.790326,4.883374],[7.478973,-0.457284],[-4.028990,-1.685964],[5.784182,5.731401],[2.930233,-3.401748],[-5.063586,-1.329757],[-1.994357,-7.734338],[7.106648,-3.270014],[0.881733,-6.580343],[-9.059420,-2.763057],[5.884321,5.433301],[-5.241752,-2.422864],[9.345538,2.084924],[-5.949360,3.535655],[-5.415775,-0.693817],[-7.273350,9.657003],[-5.379789,-0.139249],[-7.690293,-3.046286],[2.619370,-4.354721],[-4.638322,9.704595],[9.203728,9.011816],[3.733391,9.435845],[-8.281671,9.142981],[-6.722530,-6.988823],[-9.582704,4.806682],[-7.864906,-3.155931],[5.181679,3.822328],[5.537641,1.750008],[9.889746,-4.348359],[2.670398,3.307852],[-8.958890,-4.058762],[6.457368,5.546108],[-4.248751,-3.675999],[-8.753101,-5.475338],[6.496094,3.326039],[8.508503,9.564225],[7.267709,3.582163],[9.327519,-6.781996],[4.235077,-5.421879],[-5.013572,-8.554255],[-7.336191,8.746731],[6.907902,-8.669439],[0.692974,0.834514],[1.023594,-7.631081],[-7.071550,2.659171],[-6.312800,7.247147],[7.469707,-8.771120],[-1.682981,-2.078980],[3.702200,0.715353],[0.336544,8.401480],[-0.992032,6.965052],[5.826129,-3.603508],[5.393752,-7.487876],[-9.677173,1.823070],[9.063340,4.073957],[-6.137081,4.535038],[1.691381,-2.715283],[-7.754585,7.553498],[-8.568489,-8.072709],[-0.770106,-0.177136],[3.136877,0.717117],[-7.651696,6.357395],[-2.391838,7.600324],[-9.770378,-0.188587],[-9.970465,-8.247408],[-3.229878,9.796571],[6.076772,4.286295],[-1.088012,5.214477],[-9.399472,5.294725],[-2.128639,-8.283704],[2.844859,1.294072],[-7.379596,8.747476],[4.278489,-8.994506],[-8.654906,-2.605953],[1.155187,3.997371],[1.965564,1.063888],[-7.028783,1.063084],[7.609984,5.771584],[4.829555,-5.495155],[9.817031,-0.577609],[-4.638647,-4.034610],[-6.636768,-2.904154],[-6.208977,-9.829426],[-4.300569,0.005143],[-3.036098,9.986476],[1.665280,9.011453],[-6.192385,-3.653496],[9.619617,-3.582982],[5.337777,-6.188100],[1.510882,-6.401781],[6.078797,-9.184619],[-3.544631,-6.559233],[-7.996681,3.320665],[-7.067816,-6.681027],[-5.497658,-9.871971],[-7.204840,6.311172],[-2.912315,5.363994],[-4.292463,6.738188],[-0.237794,-6.246391],[-5.576998,-1.018031],[-7.595438,-7.046633],[-3.050362,1.334778],[8.788967,-3.580187],[-5.891782,-7.877712],[-8.480654,9.637643],[1.938486,-5.782175],[-9.955952,-3.580238],[5.802843,3.007235],[-5.000661,-1.788775],[-7.145733,-0.362726],[-2.313044,3.767516],[-0.173098,6.524343],[-8.117537,-3.482704],[0.039432,5.289341],[1.794543,-9.065672],[-2.666619,-2.874475],[5.590983,1.959510],[1.824209,-1.875549],[7.716187,-8.357780],[2.928247,-7.337215],[-9.187208,2.013678],[0.612188,5.280269],[-9.161856,6.361654],[2.882780,-3.771521],[-4.460429,5.376509],[6.980071,1.721353],[9.393475,-3.336026],[3.018511,-1.782290],[1.885979,-4.253678],[5.047949,1.796717],[3.797107,-7.641204],[9.555134,-3.549211],[0.433877,4.664963],[5.840113,0.177549],[-4.515185,7.601349],[-9.151863,-9.219274],[5.407105,-0.968176],[-4.826203,-9.165812],[-5.784409,4.192529],[7.387081,7.890157],[3.770011,2.541107],[-2.915194,5.770100],[5.888763,-7.815223],[7.412379,3.152652],[9.394520,8.460616],[-3.951259,-6.325023],[-6.379236,-6.039955],[3.328670,-2.521188],[-5.495377,8.379917],[-3.245813,9.676233],[7.365357,1.323013],[-6.403348,5.977829],[-2.092780,-4.561698],[-5.491205,9.558135],[-4.623323,0.887633],[-8.152640,-0.133435],[5.803220,1.204184],[-3.332910,5.616370],[-7.815620,-3.835157],[-0.800707,2.611947],[-7.622742,1.761057],[-9.879077,-8.687168],[-8.978540,-8.881791],[1.862639,5.232750],[-7.669369,3.662164],[7.351618,-9.466829],[5.972011,9.692805],[-7.745161,4.421877],[-6.335319,9.055908],[0.341680,9.964612],[6.752970,-2.874645],[-5.785230,-5.407676],[-7.913949,5.747751],[-8.280848,-9.326424],[0.301972,9.460176],[-7.620697,-5.734553],[7.831795,7.941836],[4.212827,-2.973727],[-6.476716,-2.264908],[-1.622544,2.837150],[-1.479184,1.815716],[-1.122560,-9.340037],[7.728314,7.628158],[-3.197083,-8.479907],[1.238603,1.588014],[-8.211337,-2.326146],[-3.711867,7.594258],[3.733053,-7.407417],[7.230958,-9.235236],[2.090261,5.944369],[4.842404,-6.130290],[2.454630,6.858204],[-6.585806,4.362657],[8.159487,5.367486],[-7.829462,-8.619539],[9.648329,1.563033],[-5.635515,-1.501431],[1.547139,-5.453284],[-1.180547,-1.082596],[9.785633,-8.115889],[-3.401128,-4.186694],[1.359186,-4.132691],[-7.301629,0.274087],[0.410950,2.811563],[7.707785,4.131014],[0.903779,9.006477],[-8.322849,6.416642],[6.017519,6.228114],[-4.649536,7.579194],[1.679063,6.995030],[6.735455,7.236363],[-5.887043,-1.140675],[-9.084858,-8.521058],[-0.114088,4.508145],[1.278758,-4.632791],[-6.041812,7.346220],[-1.410395,4.189913],[-1.919455,9.009460],[4.699459,-0.866462],[0.453421,9.469457],[-7.327590,-1.187140],[5.716965,8.391944],[-3.873016,-0.629739],[7.726082,1.208883],[-3.938304,8.600061],[-6.883819,-9.029239],[0.964331,2.769349],[-7.823261,-3.012421],[-9.980914,8.892479],[-0.152814,-8.491051],[-4.199481,5.329768],[-3.458418,9.822909],[8.609427,6.000199],[-3.039129,-4.333110],[-0.933760,-9.300784],[-1.508583,0.379650],[4.464714,4.914055],[8.014184,0.591921],[-3.549968,5.139599],[4.944682,9.041563],[2.196659,-0.992631],[5.013302,8.568671],[-0.828167,-8.214421],[-4.687210,4.408489],[-4.418369,2.639966],[2.334426,0.385994],[-7.994603,-8.081747],[-9.749837,-0.097799],[9.226254,7.048472],[6.687447,-4.700039],[-8.099556,3.893334],[2.970295,2.068573],[3.900420,6.554744],[2.762643,-4.667887],[-4.533819,2.618452],[-3.727920,-8.579035],[3.195608,-4.570164],[9.211961,-6.339988],[4.264993,-1.784528],[5.084006,-2.794927],[9.936366,4.872112],[3.953643,-7.487592],[-2.014253,-9.613175],[5.522920,-8.637601],[-0.985397,-9.305337],[-6.243696,2.462614],[-7.506568,-8.338515],[5.531224,-7.280910],[-8.631953,7.964873],[8.452490,3.692226],[-7.933883,-2.712703],[5.257303,-6.259783],[-2.360517,5.795420],[3.548783,-7.402813],[-1.619682,3.099387],[-6.794476,-9.767681],[9.250393,-1.875217],[2.706139,8.635433],[3.469890,-9.371841],[-0.058545,-6.886140],[7.694451,5.786516],[-8.056644,-9.216729],[-5.969066,7.578149],[6.018198,-4.266752],[8.529808,1.722768],[-0.126439,-9.082347],[-5.971476,-9.349634],[1.500075,8.095641],[-4.148863,-8.062558],[5.672425,-0.835503],[-4.356840,-9.629293],[3.720968,1.549402],[3.893825,-3.535312],[7.533144,2.437624],[7.531329,-3.645783],[-8.274629,0.621255],[2.212384,8.971005],[-1.376334,-2.479067],[1.038575,-8.853198],[5.326739,-3.426778],[-0.923642,8.285487],[6.184086,4.248275],[-7.196725,-5.318837],[-3.873637,-1.335148],[9.053342,-7.877855],[5.470859,-6.615762],[5.050849,5.987208],[-5.427656,3.981856],[-2.426404,-0.382280],[4.285956,-6.202446],[-4.110170,-6.355609],[-3.677995,-7.019424],[-4.220290,1.337380],[9.299003,9.503697],[-0.267233,-1.500610],[-7.390593,0.011111],[-4.608072,-8.126618],[-1.496447,8.435247],[2.903126,4.243793],[-8.451807,7.604014],[-5.221019,-8.403387],[7.395182,-6.705198],[1.438746,-7.816147],[-1.868302,-6.476259],[-0.120641,-1.734497],[-1.428990,6.250794],[5.407322,4.118152],[-7.551379,-6.195851],[-9.765197,-3.333271],[-1.298812,2.335250],[4.229171,2.700265],[-3.688902,-7.258234],[8.263752,8.672388],[1.772751,3.820842],[5.710225,-5.749716],[-4.720288,-2.019690],[-7.054652,-0.860827],[0.362295,-1.217720],[2.951209,-4.485421],[5.131731,-0.032341],[8.692259,-5.378972],[-5.366187,4.281006],[4.672659,9.955190],[-8.606397,-7.159952],[9.218429,-3.124137],[-4.135123,4.441080],[-0.981894,3.268917],[9.996767,-8.229347],[7.646045,1.728441],[2.891494,6.520431],[-5.508152,-5.228895],[-1.296845,2.696002],[2.017199,-3.591669],[-0.683550,2.041294],[9.038689,7.637849],[3.188120,0.086933],[-7.882222,-6.169159],[9.739402,-5.123268],[2.788295,9.160476],[4.375232,3.402436],[-9.561761,1.925973],[6.328881,4.911677],[4.912706,6.459551],[5.473202,-7.323088],[4.759607,9.829456],[-3.428943,9.101958],[-0.040204,-6.671219],[0.782846,-7.384081],[8.838339,1.754780],[-3.978619,-7.170328],[3.294888,-9.798481],[-1.600450,-8.948507],[-2.630028,3.416636],[-1.543652,-7.313694],[9.468307,-5.522083],[-5.288316,-7.114853],[-6.242432,-4.148853],[-2.635709,9.880097],[5.329730,-2.638553],[-6.076254,9.175687],[-0.790537,5.168260],[4.508647,7.348079],[-6.622669,-6.896669],[-7.513412,0.682403],[-5.732233,-0.286985],[-9.356860,-2.992410],[4.864436,1.255259],[6.066282,-9.511489],[7.915429,-6.404284],[3.145184,8.833120],[-2.502656,-2.891537],[-8.093338,8.421798],[-0.575872,-7.109413],[1.690251,-6.099464],[8.442656,-5.016248],[-1.079686,2.399484],[3.181200,6.129634],[1.404543,-9.287502],[-6.684008,1.533495],[-4.482287,2.205969],[-6.052595,4.808322],[-3.716604,-9.877401],[-8.790692,-1.131430],[-3.195686,-2.246514],[-0.105253,-3.758949],[9.843768,4.144154],[-4.452700,-1.873602],[9.900629,3.446459],[4.402744,-7.895816],[-3.550093,-2.149186],[2.859558,3.378500],[-3.086528,6.431969],[9.156732,-5.508281],[6.753556,-5.782515],[-5.153911,-6.500408],[-7.602270,7.164784],[6.058193,8.682737],[8.092716,-4.223882],[9.910748,-5.594775],[5.939778,-5.904020],[9.922997,2.549203],[-7.517099,-5.235522],[5.977360,-0.807886],[-0.350852,3.012353]], dtype = "float32")#candidate|4515|(605, 2)|const|float32
call_4514 = relay.TupleGetItem(func_1350_call(relay.reshape(const_4515.astype('float32'), [1210,])), 1)
call_4516 = relay.TupleGetItem(func_1352_call(relay.reshape(const_4515.astype('float32'), [1210,])), 1)
output = relay.Tuple([bop_4503,call_4507,call_4514,const_4515,])
output2 = relay.Tuple([bop_4503,call_4508,call_4516,const_4515,])
func_4525 = relay.Function([var_4501,var_4502,], output)
mod['func_4525'] = func_4525
mod = relay.transform.InferType()(mod)
var_4526 = relay.var("var_4526", dtype = "bool", shape = (15, 9, 5))#candidate|4526|(15, 9, 5)|var|bool
var_4527 = relay.var("var_4527", dtype = "bool", shape = (15, 9, 5))#candidate|4527|(15, 9, 5)|var|bool
output = func_4525(var_4526,var_4527,)
func_4528 = relay.Function([var_4526,var_4527,], output)
mutated_mod['func_4528'] = func_4528
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4545 = relay.const([[[-1,-8,9,3,-6,4,-2,6,-7,9,10,-7,-10,-8,-10],[-6,9,7,-5,1,-7,-9,-9,4,9,5,7,-8,1,-3],[-8,4,-5,5,-3,1,3,-9,-4,8,10,-1,-7,6,-7],[-1,-8,-2,9,-4,6,-2,-5,1,8,1,3,7,-2,-10],[-9,-6,9,1,5,-8,-3,10,-5,-7,10,-3,3,5,-2],[-4,7,10,-8,-1,8,-6,4,-1,6,-4,-8,-1,8,6],[-2,-2,2,6,5,-5,-1,-8,-8,5,-6,2,7,-7,-3],[6,-5,6,-10,-9,10,-10,6,5,6,10,1,8,-7,-5],[-9,-8,9,2,-6,6,7,-8,-3,-9,-5,1,-2,5,5]],[[2,3,8,3,3,5,7,7,-6,-10,-9,5,2,2,-7],[-9,1,-8,-8,-1,2,10,7,-7,-8,-10,-2,9,-2,-3],[-8,-9,-6,9,10,5,-3,3,2,3,-9,-9,7,4,10],[8,2,8,6,2,-7,-2,-3,2,-7,7,9,-6,5,6],[9,-5,3,9,-3,7,-7,2,-4,-5,-1,-6,10,7,-3],[-3,6,5,3,9,4,-10,7,-1,8,3,-10,-10,-2,-6],[-7,-1,-6,4,-10,-9,-1,5,1,-8,-4,8,1,-6,2],[-9,-10,-4,7,-10,-1,1,-8,-9,-2,7,9,4,3,2],[-2,6,1,10,8,-5,9,-2,-2,-5,9,4,7,-5,-8]],[[8,7,-3,4,8,-5,4,9,-10,-8,-7,7,4,-7,-6],[5,6,6,10,-7,5,-1,8,4,1,3,8,7,-3,8],[-3,1,-4,-1,10,-3,1,-3,-4,-7,8,2,9,7,-6],[-1,-9,8,-1,8,-10,8,6,2,-8,-4,-10,-4,6,3],[6,10,-8,9,-1,3,-1,-5,-2,-7,-8,9,-7,-9,4],[-4,-5,6,-7,3,5,9,8,-10,-1,-1,8,-6,-2,-8],[6,7,-10,-5,9,7,5,-9,-2,-1,6,3,-3,10,4],[2,-2,1,3,1,3,5,3,-9,2,7,2,-5,9,-10],[3,-4,2,-9,9,-8,-7,8,-8,-5,7,-10,4,-5,1]],[[7,-9,3,4,8,-3,6,9,9,3,8,8,2,-5,4],[-6,4,-9,9,-8,-9,-3,-10,-2,-10,3,-6,7,-10,9],[-10,4,-10,-10,8,-4,-10,3,9,-9,2,-8,10,10,-8],[3,-2,2,1,9,-2,8,1,-2,-9,-9,10,9,3,-9],[8,8,8,-2,-4,8,-7,7,-10,-8,1,-9,-5,2,-8],[8,2,6,8,1,-2,-7,7,-4,-7,5,-10,-9,-3,-2],[2,8,5,-8,-3,-4,-9,-1,9,5,-10,3,5,6,3],[-8,9,8,10,-9,-6,8,-6,-4,-6,2,-1,7,-7,5],[-2,-4,1,-5,10,5,-6,1,-4,10,6,-8,-7,5,8]],[[3,-3,9,8,4,-7,-2,-2,7,-8,5,-7,2,-8,7],[5,7,6,1,-1,2,3,-3,8,10,4,-1,10,8,-10],[-5,-4,4,-2,6,1,-3,3,-1,3,7,9,-2,-3,9],[5,8,-10,-1,-9,-6,-4,-7,5,8,-1,9,4,1,2],[-1,-5,8,1,-8,6,-3,2,-9,-7,-7,3,8,-7,-5],[10,8,4,1,-5,10,-2,2,-10,-3,8,-5,5,-8,-6],[-1,-2,-2,-5,4,1,-9,-6,8,-4,4,8,2,-5,-6],[-7,7,-6,-6,3,8,3,-8,-10,4,7,5,9,1,-10],[-7,3,-6,5,7,1,4,5,-4,10,1,8,-3,5,-1]],[[8,-4,1,10,-2,-8,4,-1,-5,6,-5,-1,6,9,7],[-8,9,-5,-4,10,4,2,-9,-9,-8,-10,-3,-7,4,-2],[-8,-5,4,9,7,-7,7,-10,-2,1,-3,4,-1,-7,-7],[-5,9,3,-1,3,-4,-10,-10,7,7,-4,8,-6,-9,3],[10,-2,-9,-4,9,-8,-8,4,-9,9,-9,-6,-1,4,-5],[-5,-7,6,3,-6,-7,-7,-5,2,4,-9,4,-7,-8,-4],[-10,-2,9,-2,-9,-7,3,3,7,-9,7,-1,3,-8,3],[-8,3,9,-7,4,-9,4,7,9,3,4,-8,-2,4,-4],[4,-9,1,8,-1,5,7,2,-7,7,-1,-1,-5,1,-3]],[[-6,8,-5,-5,6,7,-8,1,8,2,-9,4,3,-2,-9],[-3,3,4,10,-3,7,-10,-6,-4,-10,-8,9,-8,3,1],[9,9,-5,2,-4,2,4,-4,-2,3,-5,10,6,10,-9],[1,5,2,5,-5,-6,10,-10,10,-5,5,-5,5,4,1],[4,-3,-2,-9,6,7,3,-2,4,-7,5,8,-7,-3,8],[-6,6,3,2,-8,-8,-10,2,3,4,-4,2,-2,7,-9],[1,-1,-3,-6,8,5,1,-6,9,-9,-1,-5,9,1,-3],[2,6,-3,-8,5,-5,2,8,-8,-1,-2,-2,-5,-4,-8],[7,-3,3,-1,6,-9,-6,8,-10,3,-3,-4,-1,7,-7]],[[4,-7,8,-4,-1,5,-3,2,7,6,-3,-6,-8,-6,-4],[-2,-9,-7,8,-6,-2,-10,5,6,2,-3,-3,-2,8,7],[-2,-2,7,8,3,-6,-8,-1,6,5,1,5,-7,-6,6],[8,-2,9,-2,-7,-4,1,7,2,-9,-5,3,4,-6,6],[4,8,-4,9,5,-10,-9,10,3,1,-7,2,-4,-1,-9],[-2,8,-2,8,-8,-7,3,-9,2,-5,6,9,1,8,-6],[10,1,10,10,-5,3,9,8,1,2,10,7,5,5,-1],[-10,8,8,-7,4,-9,5,-4,-5,-10,-10,-4,2,-4,-5],[-5,-5,8,-9,-2,-10,3,-10,-8,-4,4,1,-1,-9,9]],[[2,-9,-8,-10,6,3,4,9,5,-9,-6,-4,-10,1,2],[3,7,-10,-3,-4,-4,-4,3,10,-3,-6,1,7,5,-3],[9,10,10,-8,2,-3,-9,5,-10,-1,-6,-1,6,-10,-5],[9,-1,-9,1,-5,1,9,2,-3,1,-5,-2,-3,6,1],[-8,-7,-9,1,6,-5,3,9,10,-10,-8,7,3,8,7],[1,8,-6,4,9,3,-5,9,-4,7,-1,10,3,-8,-3],[8,2,-3,5,6,-5,9,7,-5,-9,6,-7,8,10,-1],[-2,-10,-7,3,-10,7,9,-9,-7,9,9,8,2,6,-1],[-6,5,9,8,-3,2,6,-9,-2,-9,2,6,4,5,1]],[[-4,-3,4,-1,4,3,-6,-1,-5,-1,6,2,3,-2,-5],[-8,-10,8,-1,-10,-2,4,3,-3,8,3,-9,-6,3,3],[-10,9,-2,-6,5,-9,-1,7,8,-2,-5,-2,2,-9,7],[4,-4,9,-9,6,-3,3,10,7,3,6,-6,2,-10,4],[-4,-7,3,-2,-5,8,-5,-3,2,-3,-9,3,-9,3,8],[9,8,-10,-3,3,3,7,2,-3,8,-7,6,2,5,-7],[3,-6,-1,1,-9,4,-6,9,9,-2,9,5,1,5,5],[10,-7,2,-1,3,-7,-3,8,-3,-6,-5,6,4,-1,3],[8,-7,-8,-4,2,-10,-6,4,-4,2,-1,7,-1,3,10]],[[10,-9,-5,-6,7,-8,-6,9,10,-6,5,9,3,5,-2],[5,-2,-10,1,-8,3,7,-2,-9,2,-5,3,9,6,5],[8,3,-4,9,-9,6,-6,-1,-1,-3,8,-10,-5,-8,-2],[2,-2,-1,6,-2,8,-6,10,5,2,4,7,10,2,5],[-10,5,-10,8,6,-10,5,1,7,-9,-3,8,7,-3,7],[-3,3,-9,-4,-10,5,7,7,-7,5,3,1,9,9,-6],[-10,-3,9,-7,-9,5,8,-7,-3,9,-2,-5,4,-10,-8],[7,-7,10,-4,-1,5,-10,10,-5,-4,1,9,-9,-2,5],[-5,-7,-5,-10,-5,4,7,-10,-9,-9,3,9,6,6,8]],[[7,6,-8,2,-1,-9,6,7,2,-10,1,3,-7,9,-8],[-5,-10,10,5,8,-8,1,2,9,-7,6,-4,9,7,-3],[5,-9,-10,-5,-10,10,-9,-3,10,6,1,-7,-1,6,-2],[-3,8,2,-1,-2,-1,1,5,4,6,-5,3,3,6,-2],[-8,-7,-6,-4,-7,10,-1,9,-6,3,2,10,10,9,-3],[-6,5,9,2,10,10,-7,-4,-6,1,4,-7,-1,8,-5],[-1,3,-4,-7,6,8,-9,8,3,-4,3,-10,-2,9,8],[-4,5,-5,10,7,-1,-1,-10,-6,2,7,-7,8,-7,1],[9,6,-3,-4,5,8,-6,8,9,-9,3,-8,5,4,-3]]], dtype = "uint64")#candidate|4545|(12, 9, 15)|const|uint64
const_4546 = relay.const([[[-3,5,-4,10,-10,6,8,-6,5,2,5,-4,5,9,1],[6,-6,-1,-3,10,-4,1,-2,6,-6,3,-8,-8,4,-8],[3,-10,-2,3,2,1,8,9,-6,-5,3,-4,3,-1,1],[6,1,7,7,-1,1,-6,-1,-9,9,-1,-2,-3,-9,5],[-2,-6,-7,8,-10,4,8,-10,-4,-10,-3,-7,-8,-1,3],[-8,7,9,6,-9,-6,-8,2,5,-9,10,6,8,-6,-2],[6,-7,4,10,-3,8,1,-4,-6,-8,-2,6,4,1,-4],[10,-4,5,-2,10,4,-7,-4,8,9,-2,4,10,-1,-7],[-7,6,-5,9,-8,5,7,-10,4,-10,4,6,1,6,-1]],[[8,2,-7,-7,-4,-7,10,2,8,8,9,-1,9,-4,-5],[-10,1,9,2,-8,4,7,1,3,-5,9,-2,2,-2,8],[1,2,-3,2,8,2,-5,-5,-10,8,-9,1,7,5,-10],[-7,-5,3,-2,5,-6,2,-8,10,5,-1,-6,8,-6,3],[7,6,-10,2,-5,2,4,3,-10,9,-4,2,5,-1,4],[-6,5,5,-3,7,-5,-9,10,-2,6,8,4,-8,-3,-9],[-5,9,8,-5,-4,9,9,8,-10,2,2,6,1,2,-4],[-10,-9,-7,7,-10,-4,8,-6,5,-7,-2,6,-4,1,-10],[8,-2,-8,-5,-2,-6,3,2,-2,-5,-1,-9,-4,-3,-10]],[[10,2,4,4,7,-4,4,8,-7,10,-3,-9,-9,7,10],[6,5,1,-8,-1,-2,-9,-2,-10,-7,-9,5,-5,2,8],[-9,-1,2,6,-8,-4,-1,5,-10,-2,-9,-9,10,-1,-6],[-4,5,9,-7,9,1,-4,-6,6,7,-5,9,-1,10,3],[4,10,1,9,4,3,-1,10,7,-5,3,1,6,3,7],[-1,-1,10,-10,-2,-5,10,2,-3,-5,3,8,2,-7,9],[10,3,-1,-5,-2,-5,-2,2,6,-2,4,1,-9,-8,-7],[-8,-9,2,6,2,6,4,4,-1,1,-1,9,1,-6,-4],[-7,2,5,-9,3,8,9,-7,-8,-3,-2,-6,-8,-10,-5]],[[7,-1,2,-7,9,-10,-9,-9,-2,-7,-7,-9,1,-9,2],[-7,8,2,-6,-10,-8,1,9,-4,-8,6,-1,8,2,2],[1,-5,-9,-8,-5,-1,-9,10,4,-1,-6,-8,1,8,-3],[-9,2,-3,2,-8,-10,-10,1,8,-4,8,5,-7,-1,-10],[-5,-9,5,-10,5,-4,6,7,3,-3,-4,9,6,-6,2],[1,4,-6,4,-6,3,8,-3,9,10,-5,4,2,1,-8],[3,-10,-1,-8,10,6,3,7,8,-1,1,-1,-9,6,2],[-1,-5,-3,-7,3,-4,-3,2,-4,7,9,3,-2,4,2],[-3,-2,-6,-7,6,10,-1,-9,-4,-5,10,8,3,-6,9]],[[-2,1,-3,9,-9,1,6,-4,-7,10,9,8,-5,-9,-8],[9,1,6,-8,-3,1,-6,-8,-4,9,6,5,-7,-5,-1],[5,6,9,-1,8,-4,9,-8,8,-1,7,5,1,4,8],[-10,-5,-2,-10,-1,-6,9,-3,-2,8,-10,-1,9,-8,-10],[8,1,8,-10,-6,-9,6,-10,5,-3,-7,8,-9,2,1],[4,-3,5,-10,-4,-5,-1,-8,-1,-4,6,7,-9,-2,-2],[4,4,-2,-3,-5,-1,7,-1,-4,10,7,1,-1,-8,3],[7,7,7,10,2,-6,-6,-4,9,-1,7,-6,-4,9,9],[-4,-9,8,10,5,-5,-4,3,-2,-7,-3,3,-1,4,8]],[[1,-10,3,-4,7,-5,-10,3,-9,8,-8,-10,-10,-7,-10],[10,9,2,9,2,-5,6,8,-9,-4,4,-7,4,-7,4],[8,-1,-5,8,8,9,9,-9,5,-7,-6,-5,-7,-2,2],[6,-1,8,1,-1,-5,2,-4,-4,-10,1,4,-9,-7,-7],[-9,10,1,8,-3,1,-7,-6,4,3,-1,-8,-10,-5,-7],[5,-9,-6,4,-2,-2,7,-6,4,2,-3,-4,7,-9,-3],[7,4,5,-6,-3,6,-3,-7,-7,-10,8,10,-6,6,-9],[6,6,-2,10,-10,8,8,-10,-2,-6,5,-8,4,2,-1],[-8,9,-7,-5,-2,-9,4,4,2,2,-8,2,2,10,-9]],[[-4,-8,-2,-5,1,3,-8,7,10,7,9,-9,-9,-10,-2],[10,7,3,2,-6,5,-4,6,-6,3,10,-7,7,-9,-5],[-8,-9,2,4,-9,-8,10,9,5,6,-9,2,-7,-1,7],[-7,8,2,9,-5,-4,5,5,2,1,8,6,5,-10,-10],[-2,-4,7,10,1,6,-8,-1,-9,5,-3,-10,-4,2,3],[10,1,6,9,-3,1,6,-2,-6,-10,-1,-3,-3,7,-10],[-9,6,2,7,-7,-10,2,2,2,7,7,6,10,-9,-5],[9,-7,4,-4,3,-1,-2,10,9,1,6,3,-10,-1,1],[-5,-10,5,4,-4,3,-1,-10,-10,-2,6,-1,-10,-5,-9]],[[7,-7,10,2,1,10,-3,10,1,4,-1,1,-3,-2,-2],[-5,8,-7,-1,-10,-4,8,-5,-1,-8,-2,-9,-2,4,9],[6,-4,-3,1,-9,-10,-5,-8,-7,-7,-8,-6,9,-7,2],[10,9,2,-4,-10,6,-6,8,-1,5,-10,4,9,-1,-10],[-2,3,-4,-5,-8,1,-5,-6,1,8,5,10,-3,7,-5],[9,7,9,6,10,-9,9,8,-6,5,8,1,1,6,8],[-5,9,8,3,-3,10,-4,5,8,-4,5,-3,9,-8,2],[-6,-4,8,6,8,6,1,-10,-3,-10,-9,8,-9,8,2],[5,6,7,-1,-7,2,8,-5,-2,7,5,4,10,8,3]],[[7,-10,-7,-8,7,1,9,5,-10,-2,8,2,1,-5,9],[1,-8,-8,-7,5,-2,-5,8,6,-6,4,6,-6,-10,-5],[1,-7,-6,-3,-1,-7,7,-5,4,2,8,2,1,-10,-8],[-10,-3,-7,-3,-2,-1,7,-4,2,4,6,9,7,-7,-9],[-3,6,-7,7,-3,4,1,-3,-6,1,-10,-3,6,-7,6],[-7,-8,-7,6,-6,-4,-5,4,7,5,-9,6,2,-1,-6],[6,7,6,8,9,-3,4,7,-7,7,4,-7,-7,2,-9],[-4,2,8,5,-2,-9,7,-4,-1,-9,-3,2,3,10,-7],[4,1,-3,7,-4,-4,5,-8,6,-10,-8,7,-4,1,-6]],[[2,-8,-7,3,-10,-3,1,6,7,-9,-6,-1,-6,5,-2],[6,10,-6,-6,3,7,10,5,7,9,-10,-2,-10,-7,-8],[4,2,7,-5,8,-10,-7,3,6,6,6,10,7,6,5],[-5,-7,6,-7,-8,-10,-10,-7,-1,-2,10,-2,-8,2,-3],[10,-7,6,-1,-4,-8,5,5,2,9,-2,-4,9,3,5],[-8,5,10,-7,-2,9,-9,-9,-10,-10,-5,-6,-7,10,-6],[-8,-10,10,-2,-2,-1,-6,7,5,-6,-4,9,9,-7,-8],[4,9,-6,-3,-7,-7,-5,-9,8,-10,10,3,-4,-5,-1],[-5,-8,-8,-3,-5,7,-9,2,-5,-3,-5,8,2,2,6]],[[2,-10,-6,-5,3,-1,9,-3,7,3,4,3,-8,8,4],[-7,5,-7,10,-2,-1,1,1,10,3,-8,-3,-1,-5,5],[2,6,-9,-10,4,-2,-5,4,9,3,-9,-1,3,-5,2],[8,2,-3,8,2,5,6,10,-5,-3,-3,3,-7,7,-5],[-4,4,8,8,3,7,-7,8,-10,-6,-5,-5,2,-5,4],[7,4,5,-9,9,5,9,-8,7,4,-2,2,-7,1,-5],[-3,-4,-4,-10,-2,-6,-6,8,4,1,9,-6,3,7,-7],[-1,-5,-9,6,3,-10,-4,5,-8,5,8,-7,7,2,-5],[6,-9,-5,-1,10,8,4,6,-1,-10,-6,-4,-5,-4,-5]],[[-5,-9,4,-5,-6,9,-4,-3,4,-5,-4,-3,7,-9,6],[-1,7,-7,5,-5,6,-4,-7,-1,5,-5,8,-7,-7,-5],[2,-4,-8,-1,-3,-6,10,-9,9,8,-5,-10,1,7,4],[3,-10,7,9,2,4,-1,8,-1,-2,-8,2,-10,-7,-4],[-1,-9,5,-8,5,8,-8,2,-1,-10,2,9,-9,-8,8],[-9,9,9,-3,-8,-6,8,7,7,-4,10,8,9,-8,4],[-9,6,-9,1,1,2,6,-9,-9,1,-7,9,-10,-1,-7],[8,-7,3,-9,-2,4,8,-4,-4,-7,-8,8,8,-10,-8],[-7,5,1,2,2,2,7,-7,9,6,10,10,5,-8,8]]], dtype = "uint64")#candidate|4546|(12, 9, 15)|const|uint64
bop_4547 = relay.less(const_4545.astype('bool'), relay.reshape(const_4546.astype('bool'), relay.shape_of(const_4545))) # shape=(12, 9, 15)
output = relay.Tuple([bop_4547,])
output2 = relay.Tuple([bop_4547,])
func_4557 = relay.Function([], output)
mod['func_4557'] = func_4557
mod = relay.transform.InferType()(mod)
mutated_mod['func_4557'] = func_4557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mutated_mod.get_global_var('func_4557')
call_4558 = func_4557_call()
output = call_4558
func_4559 = relay.Function([], output)
mutated_mod['func_4559'] = func_4559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4559_call = mutated_mod.get_global_var('func_4559')
call_4605 = relay.TupleGetItem(func_4557_call(), 0)
call_4606 = relay.TupleGetItem(func_4559_call(), 0)
func_4362_call = mod.get_global_var('func_4362')
func_4365_call = mutated_mod.get_global_var('func_4365')
const_4611 = relay.const([-5,7,4,-7,5,5,-1,-10,-1,-9,-8,1,7,-4,2,-8,-6,4,9,5,9,3,2,-10,8,5,-6,-9,6,1,-7,-2,-4,-3,8,-8,9,-9,-7,-3,-6,5,5,-6,-9,8,8,9,8,4,1,7,3,8,-4,-7,1,6,-5,-6,1,-2,-8,10,2,-6,-4,-4,6,7,5,2,-7,10,1,8,-4,1,-9,7,-3,-8,-5,-3,4,-3,-7,3,-5,6,10,8,-2,5,-7,7,-7,-8,5,3,5,-6,-3,4,1,4,4,7,-10,-7,7,1,-9,6,10,3,7,8,10,10,4,5,7,-3,-4,-7,6,-5,-7,-1,10,4,3,9,-8,7,4,-1,5,1,-6,-2,-6,-9,6,10,4,-3,-8,2,-3,7,2,10,1,9,-10,2,-8,1,-1,-9,-6,3,7,9,4,-7,3,-6,-7,-4,7,-4,-8,-6,7,5,-10,-7,-4,6,2,8,1,2,10,6,3,-10,-7,10,-4,7,-3,-2,1,-7,-3,10,9,-1,-9,6,-1,3,-5,-1,-9,-6,3,1,7,-8,-3,4,2,10,-4,-3,3,2,10,8,4,-2,-3,2,1,2,-10,-3,-4,6,-1,3,-7,-1,-10,6,4,-2,1,7,-6,3,5,-2,10,9,1,5,-8,-6,-7,6,-10,-8,-4,2,-4,-10,2,-10,-10,-4,-2,10,5,-10,-8,-6,5,-9,1,-1,-6,-7,-10,1,-7,-2,1,-9,-8,3,-5,4,4,-1,7,-3,-10,3,7,-4,8,1,8,8,-9,9,9,-6,-9,10,-6,8,3,-9,-3,7,9,-3,-10,-4,-1,4,8,-4,4,10,-7,9,-10,-2,-1,6,-9,-8,9,9,-5,-9,1,-8,7,9,10,6,4,5,-9,5,2,-6,-5,1,5,1,-5,-5,10,-8,1,10,-4,-1,8,8,1,-10,-8,-4,-3,3,7,2,-1,8,6,7,5,-2,6,-2,5,-1,3,8,-2,5,8,-9,-10,8,6,-8,3,-3,-2,-6,-7,2,2,-5,10,6,-7,-6,3,-5,-9,-2,-4,1,-10,-3,-4,6,-4,2,8,3,-4,-4,-2,6,3,4,-4,5,2,10,2,9,6,-9,1,2,10,-10,9,4,5,1,-2,3,4,-7,-1,10,10,-4,5,4,-3,8,2,4,-9,-7,1,5,5,-10,10,4,3,-1,-5,4,3,10,5,5,10,4,-3,-9,-1,-7,-2,3,10,-4,10,2,1,9,7,9,-7,3,4,-10,-10,7,7,-7,-5,9,10,-9,5,-6,-5,2,-8,1,6,8,-6,7,-5,10,7,5,3,8,-5,2,7,-1,-10,8,4,3,-3,5,7,7,-5,9,8,7,2,-3,-5,8,9,-3,-4,-4,7,4,-5,5,-3,1,4,7,9,-6,6,-10,-10,9,9,10,3,9,-2,1,1,-9,9,-2,9,3,-2,2,7,-7,-3,2,8,5,6,-7,9,5,-5,-6,-6,10,3,-1,1,7,-4,1,10,2,-5,4,-9,10,5,8,7,1,-10,-10,-10,-9,8,6,10,-6,1,7,-9,3,4,-7,-1,-3,-1,-6,-2,7,6,9,-3,1,7,3,-6,1,-8,-3,7,2,8,10,2,1,-3,4,-5,10,-4,9,-9,-1,7,6,1,1,-5,-1,-10,-4,1,9,-4,10,-9,-7,-7,5,-2,9,2,-3,3,-5,4,-8,-9,3,-3,3,-1,-2,7,-6,2,-2,-7,1,-9,-5,-6,-10,-9,10,9,5,4,-10,-7,-1,2,-1,-10,-3,9,-4,10,-1,10,-2,-7,-8,-4,-3,7,-10,-9,9,3,8,9,-8,7,-1,-5,5,8,4,-6,-5,-2,3,5,-9,-6,-4,-1,8,-4,-7,10,2,9,-3,4,7,2,5,4,8,5,6,4,5,3,-8,6,-2,-9,-10,-3,-9,9,-2,2,-4,4,10,-6,-8,7,-1,-10,-7,-7,2,-6,-5,-6,9,-9,-2,4,2,9,6,-8,8,-1,-6,4,8,-8,-4,-2,-10,-7,-5,-6,-9,-7,-8,4,-4,3,-3,8,4,6,10,-4,-2,-5,-1,4,-4,7,-7,-2,-3,-2,9,-8,8,4,6,10,-8,-5,-6,9,1,5,-6,-2,1,7,-4,4,1,-1,3,-4,-8,10,-7,5,-4,9,-7,-8,3,-8,-10,-10,-10,7,2,-6,10,4,4,7,-2,-7,5,9,1,-6,10,2,-7,-5,10,-1,9,8,-5,-1,-9,-7,-2,-2,-4,3,-4,-7,-6,2,-6,-8,8,-8,1,1,-6,4,-7,-2,-7,-8,-2,6,7,-5,2,-10,9,5,-5,-10,7,10,4,-4,9,-4,6,10,-9,-10,10,9,-6,-1,-3,2,7,-3,-4,-4,10,3,-9,1,9,8,1,-1,4,-8,3,6,-3,-2,5,-1,5,10,8,3,5,9,9,-3,-1,9,-2,-5,1,4,-7,-10,9,-8,5,4,-1,8,-10,2,-3,-7,-3,1,-2,-9,-8,-1,8,1,9,5,-8,-9,-3,2,-1,2,1,-5,6,4,-2,8,4,-5,-7,-4,-3,-3,-5,4,-4,-7,10,10,7,-10,8,-3,9,7,10,9,4,2,9,-5,-4,9,-8,10,4,-6,-7,-7,9,-2,-5,2,5,1,2,4,-10,-8,4,4,7,10,-9,10,-9,6,-3,3,2,9,-10,8,8,8,5,7,2,-5,4,-10,6,-7,2,-7,4,8,3,-5,5,2,-3,-1,-8,-7,-10,3,3,-8,-2,1,3,1,7,-6,7,-2,8,-9,-10,9,3,7,-4,1,10,-1,3,-10,7,-5,-3,-7,2,9,2,1,2,1,5], dtype = "int16")#candidate|4611|(1092,)|const|int16
call_4610 = func_4362_call(relay.reshape(const_4611.astype('int16'), [14, 6, 13]), relay.reshape(const_4611.astype('int16'), [14, 6, 13]), )
call_4612 = func_4362_call(relay.reshape(const_4611.astype('int16'), [14, 6, 13]), relay.reshape(const_4611.astype('int16'), [14, 6, 13]), )
func_4362_call = mod.get_global_var('func_4362')
func_4365_call = mutated_mod.get_global_var('func_4365')
call_4614 = func_4362_call(relay.reshape(const_4611.astype('int16'), [14, 6, 13]), relay.reshape(call_4610.astype('int16'), [14, 6, 13]), )
call_4615 = func_4362_call(relay.reshape(const_4611.astype('int16'), [14, 6, 13]), relay.reshape(call_4610.astype('int16'), [14, 6, 13]), )
output = relay.Tuple([call_4605,call_4610,const_4611,call_4614,])
output2 = relay.Tuple([call_4606,call_4612,const_4611,call_4615,])
func_4625 = relay.Function([], output)
mod['func_4625'] = func_4625
mod = relay.transform.InferType()(mod)
output = func_4625()
func_4626 = relay.Function([], output)
mutated_mod['func_4626'] = func_4626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4559_call = mutated_mod.get_global_var('func_4559')
call_4650 = relay.TupleGetItem(func_4557_call(), 0)
call_4651 = relay.TupleGetItem(func_4559_call(), 0)
func_2152_call = mod.get_global_var('func_2152')
func_2155_call = mutated_mod.get_global_var('func_2155')
var_4653 = relay.var("var_4653", dtype = "int8", shape = (84,))#candidate|4653|(84,)|var|int8
call_4652 = relay.TupleGetItem(func_2152_call(relay.reshape(var_4653.astype('int8'), [1, 14, 6])), 0)
call_4654 = relay.TupleGetItem(func_2155_call(relay.reshape(var_4653.astype('int8'), [1, 14, 6])), 0)
func_4115_call = mod.get_global_var('func_4115')
func_4120_call = mutated_mod.get_global_var('func_4120')
const_4667 = relay.const([False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False], dtype = "bool")#candidate|4667|(2112,)|const|bool
const_4668 = relay.const([-8.358087,-6.810075,9.630877,4.944902,-3.431301,-3.341132,-2.624812,-5.373026,-4.288174,3.401984,-4.446873,1.412682,-9.532692,7.319533,7.305248,1.448802,3.836831,7.100473,7.733465,0.131834,7.537499,7.036044,4.942638,5.388250,4.655892,5.063436,-6.748433,6.159887,-5.019688,-5.080906,-1.011388,6.253367,-0.030262,-9.083039,5.576486,0.518433,8.615317,-7.279947,1.401456,6.270177,-9.587162,-8.958613,8.688768,3.524259,1.323842,7.750778,2.667180,5.695852,5.986241,9.663409,2.041965,1.163120,0.403413,6.945371,-3.760162,5.282578,-3.064594,4.491249,-8.259540,2.079179,3.635226,1.763449,5.047977,-8.963798,6.481873,8.076792,-0.071677,9.084261,-6.981660,-6.158455,9.505872,5.558868,-0.144704,6.559525,7.356494,-0.799693,0.271600,7.731606,-9.246198,-3.427072,-5.441930,-3.354883,-7.938683,-8.283037,-3.689176,6.335284,7.290661,6.434260,-1.405588,-7.557382,7.406382,-7.357877,-7.345032,0.136138,9.860319,-1.796700,0.751896,-2.848557,6.809276,-4.730484,-3.882031,5.061459,-7.277070,5.959307,-7.629995,-6.228922,-0.178028,-6.593287,5.658653,1.924607,6.810012,-2.080948,-4.455555,4.124952,0.940319,7.597766,4.065766,5.733327,-5.110478,-3.594738,-9.931784,-2.443314,5.323169,-9.033317,0.888814,2.230189,0.734885,2.414940,7.956574,0.034038,6.188588,-2.407465,-0.634270,-7.394237,-7.156924,6.430563,-2.944475,6.431137,-6.985178,-9.425371,4.486751,8.739480,9.015895,-4.278332,8.811852,8.240605,-4.223675,8.445003,-7.794065,4.266169,6.818295,8.039121,2.927169,5.437906,-5.049892,8.065941,-7.055238,4.110301,2.475829,-5.707188,2.378098,5.421037,4.936113,-2.891530,8.420350,-9.937486,-7.258490,-0.675745,-4.146044,-3.213743,5.912677,-2.628642,-1.985898,9.605239,7.228115,-5.346845,6.707961,-5.686898,-2.949753,-0.594854,9.397784,-6.096508,2.388128,8.650406,3.282131,-0.596280,5.421026,-1.669709,-2.850310,5.826914,3.286446,1.818409,-7.415213,1.523294,-5.661909,-8.026976,-1.547000,-7.694723,0.707299,1.308876,0.844219,4.271361,-2.536563,-3.543498,0.223285,-7.933517,5.818325,2.624315,9.758555,-7.149300,4.567676,6.408171,-4.220020,9.922014,7.928496,-2.609871,-7.628386,2.188561,2.726579,-0.077687,-9.157484,1.113028,-8.925472,8.506833,9.658885,1.750149,-4.327172,-0.511484,-5.718830,-2.362019,-4.111829,-5.004364,-5.543312,5.970368,6.724956,-9.024679,-2.611853,6.094716,-1.888116,-1.297475,2.954564,-1.295041,0.660219,-8.427975,-7.603102,7.515603,3.798887,-5.811640,-0.548412,5.910551,2.471034,1.660607,2.897038,-2.476715,2.458714,3.863762,-3.641368,-0.265772,-8.557279,-4.646256,4.115013,7.521840,8.735197,-6.217346,8.082202,-6.890075,1.190498,-5.083384,-7.938412,-1.236887,1.462723,-2.807894,-9.769320,5.144444,9.058473,7.005354,-4.717110,9.148674,-9.929538,3.881605,4.314468,-4.760883,8.699811,4.993095,3.634960,3.909449,0.071490,0.537299,-8.411838,-5.948464,-3.987401,-9.148740,-0.443939,-3.169794,8.172000,-3.692184,4.386107,1.326753,4.768280,4.322629,-1.314719,-0.934283,-8.439877,1.502545,-3.382227,5.844158,-6.987346,2.945961,9.298455,1.625302,0.238746,-9.030290,0.238542,6.047570,-8.525262,7.000195,4.923694,2.366390,7.734356,-8.169577,-6.742230,-0.603163,1.967328,-4.908074,-0.755656,0.351669,8.758814,-4.977565,9.682503,-6.923921,-4.176318,8.540171,1.114777,-6.687985,5.353781,-5.854602,-7.189228,-0.234926,0.978025,-9.917976,9.001831,8.189734,3.988119,4.395384,-1.593161,5.655928,3.189026,-4.785854,4.731306,-7.956727,-1.392153,-6.645974,2.681439,-9.206919,1.744791,-8.746056,1.426872,-7.219805,-9.578384,7.352713,9.955533,0.064923,4.763992,2.661480,-4.931402,-9.973580,-9.273753,3.682825,6.816325,-1.950735,7.746981,2.995685,7.860239,3.967310,7.402232,-4.897216,7.978466,-6.193442,9.760308,2.839669,5.279857,-8.196569,0.980716,9.370018,-2.588658,2.310277,1.886577,-9.475527,-0.630124,-3.826664,-2.250667,-4.047912,-4.076720,0.506098,-3.992054,-8.956221,-9.377072,-6.144111,-8.349836,-1.168777,1.747624,-0.534343,6.895934,2.575446,6.738448,6.714321,-1.361607,1.111382,-9.460241,8.388501,-5.312258,-9.941691,-9.409741,-5.955767,7.912332,3.940277,-0.124676,2.416707,-7.731951,-6.233178,-8.593604,-0.578142,4.966458,4.380382,-7.570325,6.758912,-7.928575,6.534304,-2.439392,-0.501210,-0.180761,-9.061216,6.375742,-5.101187,9.924749,9.148534,5.597154,-8.013202,-6.007650,-8.226731,-4.100240,4.889744,-4.863993,-0.192881,-5.978417,-9.512354,-0.494529,2.466146,-2.856889,-1.994548,-2.380308,3.161893,7.000120,1.694066,8.871888,-9.838075,5.614341,0.466915,-3.522013,-3.317799,-2.389626,8.606856,5.125082,-5.546787,4.826346,5.681900,1.033999,1.316952,5.558386,-3.998086,-4.784118,-6.900321,-3.189323,3.079125,0.447747,4.553999,-2.625057,4.233052,6.870943,5.387192,-6.953052,3.188457,3.043286,-0.992300,8.500052,-0.976401,4.338037,4.353434,-2.479460,-7.598563,-0.138995,5.633731,-7.919625,-1.267672,-4.264671,-7.603656,7.416864,-3.632180,-3.350344,6.847489,1.431382,-2.814767,-7.018477,-0.572048,-3.793058,0.297027,-6.726029,-5.752906,4.298626,0.412724,-7.727256,-6.478092,7.349286,2.259854,8.636450,4.020590,-7.544102,1.938857,7.900256,6.068558,-4.725831,-2.936131,0.227147,8.043258,6.580188,-1.685695,4.794916,5.595882,-9.323233,-9.324552,7.795279,-0.085629,6.290549,9.189462,-5.465627,3.845764,2.945705,3.486734,-5.581903,4.955256,9.703231,0.738221,-7.735392,2.046035,1.314557,-1.143863,2.381689,-4.712285,-8.692299,2.785627,-2.380638,3.802412,-5.978595,-9.688789,2.171012,4.230627,-9.504316,7.056148,8.132347,0.757727,5.762487,-8.969045,-3.061131,2.742494,-5.408497,3.127303,4.023305,-2.639227,-8.965360,-8.130429,-9.183806,-9.441470,3.973882,8.963932,9.706915,6.974108,-7.751462,5.730946,2.404091,0.306398,-4.666443,-3.882532,9.142174,7.194479,-3.566408,3.923834,8.697503,7.406513,-3.963469,-2.859393,9.150840,-9.635706,7.453523,-1.483542,-7.001342,-3.524148,9.672260,9.683900,5.425182,-5.749145,-1.606436,-0.492458,4.591580,-1.680489,-5.257422,2.476397,1.595208,0.183752,-9.250686,7.304922,0.616709,2.402408,-2.245347,9.213314,3.244356,5.097422,8.763439,-6.562403,5.696090,-2.281313,8.547895,7.478789,0.073075,2.784702,8.790682,8.650677,-7.648015,0.390735,6.482441,-2.679061,-2.303020,-7.888677,7.896179,-9.670293,-1.849839,-4.374073,3.714510,-7.529005,-0.830312,-2.586622,-5.569269,-0.618184,-7.464084,4.659104,-5.752515,-9.651947,-3.331269,-0.460219,5.046448,-9.753664,-1.158877,8.674268,9.772838,-6.511776,4.057852,4.925085,-4.327154,-5.239097,4.442563,-7.739659,3.282150,-4.687788,-1.346838,0.217322,2.550269,1.628356,-4.898861,1.952418,-7.136024,9.236100,-1.943166,4.502476,-7.902587,3.744936,4.177929,0.433072,7.901435,-8.836523,6.936051,8.814452,-8.395628,-8.293533,-8.099326,-3.281109,1.357044,-0.070290,-3.534303,2.897883,-7.084935,-8.705594,-9.390820,-4.635433,6.597721,2.018798,6.437434,2.041017,3.565942,-6.083988,-1.260805,-6.213464,3.327870,5.871994,-7.185221,-5.855395,-4.433434,6.110189,8.674561,-0.865951,-3.910277,0.668372,-5.772730,3.837850,-8.333551,7.537785,-1.614073,-9.256948,1.163306,1.551672,-2.391973,-4.200377,-1.995693,-0.812465,7.799442,-4.848750,-4.715806,4.297822,4.249222,2.329999,7.622906,-4.254250,-8.195004,8.116266,-0.660348,-6.723731,-2.818463,9.771266,-8.285902,-8.078335,-1.649624,2.715485,-1.643777,-7.883170,-0.017773,9.487690,-3.796626,9.719772,9.065809,-6.743842,-9.831489,-3.599240,4.265410,8.173029,7.862399,-2.042580,6.438116,9.493799,-1.714085,0.602663,0.279118,-2.772123,-5.085315,-9.091399,-5.755771,1.780910,8.391793,-6.762942,-8.112000,-7.594867,8.737541,8.567606,0.087688,9.345693,-3.830394,-3.630453,1.920415,-4.430597,-2.206752,2.338808,9.035392,2.411285,9.173184,-8.286738,-8.076117,9.249290,4.678875,-5.552335,8.613828,-8.474190,-0.247064,9.812635,-7.397913,5.163758,3.603994,1.050653,3.302855,2.502954,-9.251360,-7.011977,5.015500,7.854879,9.784566,1.490187,3.526177,-9.135093,-8.065257,0.177273,5.359943,6.648737,-3.383752,-0.787264,-6.510019,-4.354939,0.943687,3.179365,-5.125542,1.689607,-3.480660,6.678773,-2.419869,8.690687,4.196810,0.244745,0.894718,4.573821,-8.837970,7.056657,-4.851744,5.325954,6.033257,-4.561344,7.172358,3.985112,-3.365685,0.776410,-8.396503,6.990236,-9.492383,0.356969,1.839342,9.899043,-1.625439,-4.599495,-0.481132,-6.813748,-2.257537,5.745320,-0.587662,1.581240,4.767271,3.612007,3.342188,-9.113015,-5.751705,1.271514,-7.597049,8.711219,-3.227716,1.951934,3.320240,-2.228723,-4.682935,-9.350495,-6.807904,8.702726,-0.418757,8.932684,2.294364,2.572694,5.505073,-5.719651,3.134121,-5.370151,5.675492,-9.805700,1.409298,4.006214,4.118347,-6.484335,8.336806,8.801166,5.381043,-3.277559,-1.789446,-3.010796,-7.256766,-7.723546,-9.528806,4.542607,-7.622049,-4.153493,-9.397171,-9.642106,4.263124,5.393365,-5.753710,8.783914,-5.527640,7.783234,3.430437,-2.492270,-4.244086,-7.031085,-7.153742,-9.077001,3.224004,-1.710211,-3.527705,0.405450,-8.381717,8.448368,-4.634485,-7.127672,-6.303096,5.704134,6.857775,1.490849,-2.538596,-2.908434,-4.567000,-4.815422,1.606641,6.305150,4.059124,-2.013830,-7.185849,-7.927428,-3.244537,1.586454,-8.447472,-2.113316,-8.326707,8.436431,0.810565,9.119771,4.514713,-2.799266,1.160942,-9.443932,-5.645548,-6.877911,-9.496911,9.158770,0.964119,3.877208,-8.032472,7.050264,-0.489222,2.440653,-1.517508,7.271901,-7.440721,-4.748560,5.343329,-9.944082,7.579237,-8.345850,-4.413324,-6.454249,-7.804206,0.273813,-5.177292,-6.225983,-7.123525,-6.241206,-5.831914,-0.869620,2.240591,-5.307017,0.503432,3.015403,3.397091,0.754917,5.614949,9.544049,0.855728,-3.504377,3.078569,-3.294139,1.050013,-6.836217,-5.148428,-9.828895,-1.910049,8.308468,-7.411436,-0.198762,-5.279613,9.384990,-7.302058,-2.226058,6.972854,6.761778,6.921660,-2.797927,-0.509061,-8.819993,5.718255,2.975523,-4.987771,-3.108990,0.846911,-1.108600,-3.347545,1.790080,0.416142,-4.513068,9.856353,5.684526,-0.532075,8.405988,7.125740,4.419390,-7.176541,-6.022081,4.687412,4.674190,6.688044,1.004058,9.307928,-1.905075,-7.310689,-9.534298,-2.819760,-1.193907,9.689817,-5.171391,8.844585,-3.164819,-9.100135,-3.895831,5.661677,-7.585398,-3.183513,-2.794617,-0.040184,-8.728171,2.658307,-6.571490,-4.240297,-1.958294,-7.910654,-0.218957,3.844843,-5.290291,5.464228,7.272188,-4.743263,-8.115144,3.632554,1.429187,1.782470,-0.151101,-2.334595,6.036096,9.728633,-8.103547,-9.800830,-3.281410,4.070650,8.785324,8.380840,9.144678,-3.770908,-2.065933,-3.082538,2.469645,9.060420,4.441055,8.214253,6.057350,-3.731949,-6.225563,-9.786756,-2.468218,6.623663,0.355484,2.262835,9.341912,-8.888935,9.061084,8.865890,-8.456046,4.790416,-5.614627,-5.591908,9.736338,0.193949,3.156830,-4.890931,-4.846804,9.957005,9.423411,-2.394238,-8.097413,-0.390673,-1.244816,6.004594,7.248019,-1.017927,8.819552,3.193155,1.256753,-9.056827,-3.292756,4.802747,9.042963,-3.122030,1.017806,1.855233,0.394817,6.167734,5.893485,8.048000,3.149938,-7.197957,-6.850570,-1.362374,-1.377708,9.871416,4.563611,7.004552,1.958650,0.177338,4.981394,3.009845,0.855277,-1.825531,8.873645,3.012542,8.631666,7.932759,3.052239,0.355924,-7.476527,-7.808057,2.471263,-8.929244,-6.557868,7.952807,-8.305985,-3.973018,-9.708215,-0.593712,-4.177904,-1.961878,5.803828,-3.932203,0.722417,4.656391,-1.074053,-8.220574,5.343631,-5.376180,-7.268850,8.011473,-8.137889,-0.238762,-3.372924,-4.716809,-3.780968,-0.924089,-0.882183,-8.505651,7.187491,-4.771425,-1.158303,0.157801,9.877249,1.479179,-2.230235,7.903465,-9.203405,4.517217,-4.447909,-2.126366,-9.098103,9.482062,8.572757,0.347158,0.776682,-2.795813,-4.706675,5.444512,8.055539,8.822432,-9.107648,4.491538,1.455285,1.036706,-0.533737,-7.443680,7.506906,-1.318586,-9.652208,4.292824,2.963246,6.552117,6.716511,2.871807,1.370125,-5.291050,5.335552,-1.973219,-2.179475,7.862023,4.982425,-4.659689,6.207857,4.926321,-1.218515], dtype = "float32")#candidate|4668|(1210,)|const|float32
call_4666 = relay.TupleGetItem(func_4115_call(relay.reshape(const_4667.astype('bool'), [11, 16, 12]), relay.reshape(const_4667.astype('bool'), [11, 16, 12]), relay.reshape(const_4668.astype('float32'), [1210,]), ), 2)
call_4669 = relay.TupleGetItem(func_4120_call(relay.reshape(const_4667.astype('bool'), [11, 16, 12]), relay.reshape(const_4667.astype('bool'), [11, 16, 12]), relay.reshape(const_4668.astype('float32'), [1210,]), ), 2)
output = relay.Tuple([call_4650,call_4652,var_4653,call_4666,const_4667,const_4668,])
output2 = relay.Tuple([call_4651,call_4654,var_4653,call_4669,const_4667,const_4668,])
func_4672 = relay.Function([var_4653,], output)
mod['func_4672'] = func_4672
mod = relay.transform.InferType()(mod)
var_4673 = relay.var("var_4673", dtype = "int8", shape = (84,))#candidate|4673|(84,)|var|int8
output = func_4672(var_4673)
func_4674 = relay.Function([var_4673], output)
mutated_mod['func_4674'] = func_4674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4559_call = mutated_mod.get_global_var('func_4559')
call_4735 = relay.TupleGetItem(func_4557_call(), 0)
call_4736 = relay.TupleGetItem(func_4559_call(), 0)
var_4750 = relay.var("var_4750", dtype = "bool", shape = (12, 9, 15))#candidate|4750|(12, 9, 15)|var|bool
bop_4751 = relay.floor_mod(call_4735.astype('float64'), relay.reshape(var_4750.astype('float64'), relay.shape_of(call_4735))) # shape=(12, 9, 15)
bop_4754 = relay.floor_mod(call_4736.astype('float64'), relay.reshape(var_4750.astype('float64'), relay.shape_of(call_4736))) # shape=(12, 9, 15)
func_1479_call = mod.get_global_var('func_1479')
func_1482_call = mutated_mod.get_global_var('func_1482')
const_4756 = relay.const(False, dtype = "bool")#candidate|4756|()|const|bool
call_4755 = relay.TupleGetItem(func_1479_call(relay.reshape(const_4756.astype('bool'), [])), 0)
call_4757 = relay.TupleGetItem(func_1482_call(relay.reshape(const_4756.astype('bool'), [])), 0)
bop_4758 = relay.multiply(bop_4751.astype('int8'), relay.reshape(var_4750.astype('int8'), relay.shape_of(bop_4751))) # shape=(12, 9, 15)
bop_4761 = relay.multiply(bop_4754.astype('int8'), relay.reshape(var_4750.astype('int8'), relay.shape_of(bop_4754))) # shape=(12, 9, 15)
output = relay.Tuple([call_4755,const_4756,bop_4758,])
output2 = relay.Tuple([call_4757,const_4756,bop_4761,])
func_4766 = relay.Function([var_4750,], output)
mod['func_4766'] = func_4766
mod = relay.transform.InferType()(mod)
var_4767 = relay.var("var_4767", dtype = "bool", shape = (12, 9, 15))#candidate|4767|(12, 9, 15)|var|bool
output = func_4766(var_4767)
func_4768 = relay.Function([var_4767], output)
mutated_mod['func_4768'] = func_4768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_4792 = func_4488_call()
call_4793 = func_4488_call()
output = call_4792
output2 = call_4793
func_4808 = relay.Function([], output)
mod['func_4808'] = func_4808
mod = relay.transform.InferType()(mod)
mutated_mod['func_4808'] = func_4808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mutated_mod.get_global_var('func_4808')
call_4809 = func_4808_call()
output = call_4809
func_4810 = relay.Function([], output)
mutated_mod['func_4810'] = func_4810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mod.get_global_var('func_4808')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_4832 = func_4808_call()
call_4833 = func_4808_call()
output = relay.Tuple([call_4832,])
output2 = relay.Tuple([call_4833,])
func_4836 = relay.Function([], output)
mod['func_4836'] = func_4836
mod = relay.transform.InferType()(mod)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mutated_mod.get_global_var('func_4836')
call_4837 = func_4836_call()
output = call_4837
func_4838 = relay.Function([], output)
mutated_mod['func_4838'] = func_4838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4559_call = mutated_mod.get_global_var('func_4559')
call_4845 = relay.TupleGetItem(func_4557_call(), 0)
call_4846 = relay.TupleGetItem(func_4559_call(), 0)
const_4848 = relay.const([[[True,False,True,False,False,True,False,True,True,True,True,True,False,True,False],[True,True,True,True,False,True,True,True,True,True,False,False,True,False,True],[True,True,True,False,True,True,True,True,False,True,True,True,False,True,False],[False,True,False,True,False,False,True,True,True,False,True,True,True,False,True],[False,True,False,True,True,True,False,True,True,True,False,False,False,False,True],[True,True,False,True,False,True,True,True,False,False,False,True,False,True,True],[True,True,False,False,False,False,True,False,True,False,True,True,False,False,True],[False,True,False,False,False,True,True,True,False,False,True,False,True,True,True],[True,True,False,True,True,False,True,False,True,False,True,False,True,True,False]],[[True,True,True,True,False,True,False,True,False,True,True,False,True,True,True],[True,False,False,True,True,True,False,True,False,True,True,True,True,True,False],[False,False,False,True,True,False,True,False,True,True,True,True,True,False,False],[True,True,False,True,True,True,True,True,False,True,False,False,False,True,True],[False,True,True,False,True,False,False,False,False,False,True,True,True,True,False],[True,False,True,True,True,False,False,False,True,True,True,True,True,True,True],[False,False,False,True,False,True,True,True,True,False,True,True,True,False,False],[True,True,False,True,False,True,True,False,False,True,True,True,False,False,True],[True,False,True,False,True,True,True,True,False,True,True,True,False,False,True]],[[False,False,False,False,True,False,True,False,True,True,True,False,True,False,True],[False,True,True,True,True,True,False,True,False,True,False,True,False,False,True],[False,False,True,False,False,False,True,True,True,False,True,False,False,False,False],[True,False,False,True,True,True,False,True,False,False,False,False,True,True,False],[False,True,False,False,True,False,False,False,False,True,False,True,False,True,True],[False,False,True,False,True,False,False,True,True,False,True,False,True,False,True],[True,True,False,False,True,True,False,True,False,False,True,False,True,True,True],[False,True,False,True,False,True,True,False,True,True,False,False,True,True,True],[False,True,False,False,True,True,True,True,False,True,False,True,False,True,False]],[[True,False,False,True,True,False,True,True,False,False,False,False,False,True,False],[True,True,True,True,True,False,False,False,True,True,False,True,False,False,True],[True,True,True,True,True,False,True,False,True,True,False,True,True,False,False],[True,False,True,False,True,False,False,False,True,False,True,True,True,True,True],[False,False,False,True,True,True,False,False,True,True,True,True,True,True,False],[True,False,False,True,True,True,True,True,True,False,True,False,True,True,False],[False,True,False,True,True,False,False,True,False,False,False,False,True,True,True],[True,True,True,True,False,False,True,True,False,False,False,True,True,True,False],[True,False,False,True,True,True,True,True,False,False,True,False,False,True,False]],[[True,False,True,False,False,True,True,True,False,True,True,False,False,False,False],[True,True,False,True,True,True,False,False,False,False,False,False,False,False,True],[False,True,True,True,False,True,False,True,False,True,False,False,True,False,False],[True,True,False,True,False,True,False,False,True,True,False,False,True,True,False],[False,True,False,True,True,False,True,True,True,True,False,True,True,False,True],[False,True,True,False,True,True,True,True,False,False,False,False,False,True,True],[True,True,True,True,True,False,True,False,True,False,True,False,True,True,False],[False,True,True,True,True,False,True,False,False,True,False,False,True,True,False],[True,False,True,False,True,False,False,False,False,True,False,False,True,True,True]],[[True,True,False,True,True,True,True,False,True,True,True,True,False,False,False],[False,True,False,True,True,True,False,True,True,False,True,True,False,False,False],[True,False,False,True,True,True,False,False,True,True,False,False,True,False,False],[True,False,False,False,True,True,True,True,True,True,False,False,False,False,False],[True,False,False,True,True,True,False,False,False,True,True,False,True,False,False],[True,False,False,True,False,True,True,True,True,False,False,True,False,True,True],[False,False,True,True,True,True,False,True,True,False,False,False,False,True,True],[False,False,True,False,False,True,False,True,False,True,True,True,False,True,False],[True,True,False,True,False,True,False,True,False,True,True,False,True,False,True]],[[False,False,True,True,True,True,False,True,False,True,False,True,False,False,False],[False,True,False,False,False,False,True,False,True,True,True,True,True,True,True],[False,True,True,True,True,False,True,True,True,True,False,True,True,False,True],[True,False,True,True,False,True,False,True,False,True,False,True,False,True,False],[True,True,False,True,True,True,True,False,False,True,True,True,False,False,True],[False,False,False,True,True,False,False,True,False,False,True,False,False,True,False],[False,True,True,False,False,False,True,True,False,False,False,False,True,True,False],[False,True,False,False,False,False,True,False,True,True,True,False,True,True,False],[True,True,True,True,False,True,True,True,False,False,True,True,False,False,False]],[[False,True,True,True,True,True,True,False,True,False,True,False,True,True,True],[True,False,True,False,True,True,True,True,False,True,True,False,False,True,False],[False,True,True,True,False,True,False,True,True,False,False,True,False,True,False],[False,False,False,True,False,False,False,True,True,False,False,False,False,True,True],[True,True,False,False,True,True,True,True,False,True,True,False,False,False,True],[False,False,True,False,True,True,False,True,False,True,True,True,True,False,False],[False,True,True,True,True,False,False,True,False,False,False,True,True,False,True],[False,False,True,False,False,False,True,True,True,False,False,True,True,False,True],[True,False,False,False,True,True,True,True,False,True,False,False,False,True,False]],[[False,True,False,True,True,True,False,True,False,True,True,False,False,False,False],[True,True,True,True,True,False,True,False,False,True,True,False,False,False,True],[False,False,False,True,True,False,False,True,True,False,True,False,False,True,False],[True,True,True,False,False,False,False,True,True,False,True,False,False,True,False],[True,True,False,False,False,False,False,False,True,True,False,False,True,True,False],[True,False,True,False,False,True,False,False,True,True,True,False,False,True,True],[False,True,False,True,True,True,True,True,True,False,False,False,True,True,True],[True,False,True,False,False,True,True,False,True,False,False,False,False,False,False],[True,False,True,False,True,False,True,False,True,False,True,True,False,False,False]],[[True,True,False,False,True,False,True,False,False,True,True,False,True,True,False],[True,True,True,False,True,False,False,False,True,True,False,False,False,True,False],[False,False,True,False,True,False,False,False,False,True,True,True,True,True,True],[False,False,False,True,True,True,True,True,True,False,True,True,False,True,False],[False,False,True,True,False,False,True,True,False,False,False,False,True,True,True],[False,True,True,False,False,False,True,False,False,False,False,True,False,True,False],[False,True,False,True,True,True,True,False,False,False,False,False,False,False,True],[True,False,True,False,True,True,True,False,True,True,True,False,False,True,True],[False,True,False,True,True,True,False,False,False,False,False,False,False,False,False]],[[True,True,True,False,False,False,False,True,False,True,False,True,True,False,False],[False,False,False,True,True,True,False,True,True,False,True,False,True,True,False],[True,True,False,False,True,False,False,True,True,True,True,True,False,False,True],[True,True,True,True,False,True,False,False,False,True,True,False,True,False,True],[False,True,False,False,False,False,False,False,True,True,True,False,False,False,True],[True,True,False,False,False,False,True,False,False,False,True,True,False,True,True],[True,True,True,False,True,True,False,True,True,True,False,True,False,False,True],[True,True,False,True,True,False,True,True,False,True,True,True,True,True,False],[False,False,True,True,False,False,False,False,True,False,False,True,True,False,True]],[[False,True,False,False,False,False,False,True,True,False,False,False,True,True,True],[False,False,True,True,True,False,False,False,False,True,False,False,True,True,False],[False,True,True,True,True,True,True,True,False,False,True,True,False,False,False],[True,False,False,False,False,False,False,False,False,True,True,False,True,False,True],[False,True,False,True,False,True,True,True,False,True,True,True,False,True,True],[True,False,False,True,False,False,True,True,False,True,False,True,True,True,False],[False,True,True,False,True,True,True,False,False,True,True,True,False,False,False],[False,True,False,False,False,False,False,False,True,False,True,True,True,True,True],[True,True,False,False,False,True,True,True,True,True,True,True,False,True,True]]], dtype = "bool")#candidate|4848|(12, 9, 15)|const|bool
bop_4849 = relay.bitwise_xor(call_4845.astype('uint8'), relay.reshape(const_4848.astype('uint8'), relay.shape_of(call_4845))) # shape=(12, 9, 15)
bop_4852 = relay.bitwise_xor(call_4846.astype('uint8'), relay.reshape(const_4848.astype('uint8'), relay.shape_of(call_4846))) # shape=(12, 9, 15)
output = bop_4849
output2 = bop_4852
func_4854 = relay.Function([], output)
mod['func_4854'] = func_4854
mod = relay.transform.InferType()(mod)
output = func_4854()
func_4855 = relay.Function([], output)
mutated_mod['func_4855'] = func_4855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mod.get_global_var('func_4808')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_4862 = func_4808_call()
call_4863 = func_4808_call()
output = relay.Tuple([call_4862,])
output2 = relay.Tuple([call_4863,])
func_4872 = relay.Function([], output)
mod['func_4872'] = func_4872
mod = relay.transform.InferType()(mod)
output = func_4872()
func_4873 = relay.Function([], output)
mutated_mod['func_4873'] = func_4873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_4904 = relay.TupleGetItem(func_4836_call(), 0)
call_4905 = relay.TupleGetItem(func_4838_call(), 0)
output = call_4904
output2 = call_4905
func_4907 = relay.Function([], output)
mod['func_4907'] = func_4907
mod = relay.transform.InferType()(mod)
output = func_4907()
func_4908 = relay.Function([], output)
mutated_mod['func_4908'] = func_4908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mod.get_global_var('func_4808')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_4983 = func_4808_call()
call_4984 = func_4808_call()
uop_4985 = relay.sigmoid(call_4983.astype('float32')) # shape=(5, 11, 13)
uop_4987 = relay.sigmoid(call_4984.astype('float32')) # shape=(5, 11, 13)
uop_4988 = relay.erf(uop_4985.astype('float64')) # shape=(5, 11, 13)
uop_4990 = relay.erf(uop_4987.astype('float64')) # shape=(5, 11, 13)
func_4907_call = mod.get_global_var('func_4907')
func_4908_call = mutated_mod.get_global_var('func_4908')
call_4995 = func_4907_call()
call_4996 = func_4907_call()
func_4525_call = mod.get_global_var('func_4525')
func_4528_call = mutated_mod.get_global_var('func_4528')
var_5010 = relay.var("var_5010", dtype = "bool", shape = (675,))#candidate|5010|(675,)|var|bool
call_5009 = relay.TupleGetItem(func_4525_call(relay.reshape(var_5010.astype('bool'), [15, 9, 5]), relay.reshape(var_5010.astype('bool'), [15, 9, 5]), ), 0)
call_5011 = relay.TupleGetItem(func_4528_call(relay.reshape(var_5010.astype('bool'), [15, 9, 5]), relay.reshape(var_5010.astype('bool'), [15, 9, 5]), ), 0)
func_4525_call = mod.get_global_var('func_4525')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_5012 = relay.TupleGetItem(func_4525_call(relay.reshape(var_5010.astype('bool'), [15, 9, 5]), relay.reshape(var_5010.astype('bool'), [15, 9, 5]), ), 1)
call_5013 = relay.TupleGetItem(func_4528_call(relay.reshape(var_5010.astype('bool'), [15, 9, 5]), relay.reshape(var_5010.astype('bool'), [15, 9, 5]), ), 1)
output = relay.Tuple([uop_4988,call_4995,call_5009,var_5010,call_5012,])
output2 = relay.Tuple([uop_4990,call_4996,call_5011,var_5010,call_5013,])
func_5016 = relay.Function([var_5010,], output)
mod['func_5016'] = func_5016
mod = relay.transform.InferType()(mod)
var_5017 = relay.var("var_5017", dtype = "bool", shape = (675,))#candidate|5017|(675,)|var|bool
output = func_5016(var_5017)
func_5018 = relay.Function([var_5017], output)
mutated_mod['func_5018'] = func_5018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_5036 = relay.TupleGetItem(func_4836_call(), 0)
call_5037 = relay.TupleGetItem(func_4838_call(), 0)
output = call_5036
output2 = call_5037
func_5051 = relay.Function([], output)
mod['func_5051'] = func_5051
mod = relay.transform.InferType()(mod)
mutated_mod['func_5051'] = func_5051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5051_call = mutated_mod.get_global_var('func_5051')
call_5052 = func_5051_call()
output = call_5052
func_5053 = relay.Function([], output)
mutated_mod['func_5053'] = func_5053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5051_call = mod.get_global_var('func_5051')
func_5053_call = mutated_mod.get_global_var('func_5053')
call_5074 = func_5051_call()
call_5075 = func_5051_call()
var_5080 = relay.var("var_5080", dtype = "float64", shape = (5, 11, 13))#candidate|5080|(5, 11, 13)|var|float64
bop_5081 = relay.logical_or(call_5074.astype('bool'), relay.reshape(var_5080.astype('bool'), relay.shape_of(call_5074))) # shape=(5, 11, 13)
bop_5084 = relay.logical_or(call_5075.astype('bool'), relay.reshape(var_5080.astype('bool'), relay.shape_of(call_5075))) # shape=(5, 11, 13)
output = relay.Tuple([bop_5081,])
output2 = relay.Tuple([bop_5084,])
func_5085 = relay.Function([var_5080,], output)
mod['func_5085'] = func_5085
mod = relay.transform.InferType()(mod)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5086 = relay.var("var_5086", dtype = "float64", shape = (5, 11, 13))#candidate|5086|(5, 11, 13)|var|float64
func_5085_call = mutated_mod.get_global_var('func_5085')
call_5087 = func_5085_call(var_5086)
output = call_5087
func_5088 = relay.Function([var_5086], output)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5093 = relay.var("var_5093", dtype = "float32", shape = (8, 8, 10))#candidate|5093|(8, 8, 10)|var|float32
uop_5094 = relay.log2(var_5093.astype('float32')) # shape=(8, 8, 10)
func_2152_call = mod.get_global_var('func_2152')
func_2155_call = mutated_mod.get_global_var('func_2155')
const_5105 = relay.const([-8,1,-7,3,1,-10,9,10,1,-7,5,8,-3,3,8,1,7,8,-7,6,10,-2,-7,6,4,10,5,-5,-2,2,-8,-8,5,3,-6,9,-6,-4,-3,2,6,-9,1,-1,-2,-5,-8,-7,8,4,-10,1,-1,-8,7,-4,-3,8,-6,-7,4,9,4,4,8,7,10,-4,2,7,-4,-4,3,9,3,-8,-7,-8,4,2,-1,-8,4,3], dtype = "int8")#candidate|5105|(84,)|const|int8
call_5104 = relay.TupleGetItem(func_2152_call(relay.reshape(const_5105.astype('int8'), [1, 14, 6])), 0)
call_5106 = relay.TupleGetItem(func_2155_call(relay.reshape(const_5105.astype('int8'), [1, 14, 6])), 0)
func_4362_call = mod.get_global_var('func_4362')
func_4365_call = mutated_mod.get_global_var('func_4365')
var_5110 = relay.var("var_5110", dtype = "int16", shape = (1092,))#candidate|5110|(1092,)|var|int16
call_5109 = func_4362_call(relay.reshape(var_5110.astype('int16'), [14, 6, 13]), relay.reshape(var_5110.astype('int16'), [14, 6, 13]), )
call_5111 = func_4362_call(relay.reshape(var_5110.astype('int16'), [14, 6, 13]), relay.reshape(var_5110.astype('int16'), [14, 6, 13]), )
output = relay.Tuple([uop_5094,call_5104,const_5105,call_5109,var_5110,])
output2 = relay.Tuple([uop_5094,call_5106,const_5105,call_5111,var_5110,])
func_5114 = relay.Function([var_5093,var_5110,], output)
mod['func_5114'] = func_5114
mod = relay.transform.InferType()(mod)
mutated_mod['func_5114'] = func_5114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5114_call = mutated_mod.get_global_var('func_5114')
var_5116 = relay.var("var_5116", dtype = "float32", shape = (8, 8, 10))#candidate|5116|(8, 8, 10)|var|float32
var_5117 = relay.var("var_5117", dtype = "int16", shape = (1092,))#candidate|5117|(1092,)|var|int16
call_5115 = func_5114_call(var_5116,var_5117,)
output = call_5115
func_5118 = relay.Function([var_5116,var_5117,], output)
mutated_mod['func_5118'] = func_5118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4559_call = mutated_mod.get_global_var('func_4559')
call_5147 = relay.TupleGetItem(func_4557_call(), 0)
call_5148 = relay.TupleGetItem(func_4559_call(), 0)
func_5085_call = mod.get_global_var('func_5085')
func_5088_call = mutated_mod.get_global_var('func_5088')
const_5161 = relay.const([-5.598918,-2.160854,3.882833,-7.283336,5.056330,4.315251,-6.660972,-5.222606,2.107938,-0.851689,-9.188862,4.297696,7.013481,-5.248001,-8.603695,-2.109885,-3.597552,-0.168569,2.258689,0.023439,9.076205,-7.742497,-7.134923,-1.927705,4.178855,-5.531494,-6.994534,5.201312,-5.512323,-0.449914,6.713431,3.746424,4.280948,4.594080,0.430731,-2.336331,2.562386,-8.410089,4.962917,-9.711790,3.610448,-9.140786,-7.751129,0.015135,7.718403,4.077981,-4.931817,-5.754647,-3.591692,2.642486,8.870778,-6.985426,-5.527479,-4.351956,8.413257,-1.240800,5.449707,9.910072,-6.943604,5.858155,-2.213846,-8.188732,0.328255,5.477556,-6.129628,4.279774,-8.165453,6.013673,-6.520783,-9.474992,-3.528699,-8.933293,-6.242996,4.166142,0.284681,-8.285495,5.472924,-7.875416,-7.728866,-4.010661,-8.885252,-2.562897,6.346093,4.615091,5.350711,1.183922,2.175126,1.757169,0.988046,-8.320638,7.173261,1.492273,-0.162554,-4.575287,0.881389,7.023003,-6.330663,-9.320451,5.292156,-9.043397,4.655329,-3.595675,2.846346,-9.120629,-6.704964,6.248656,-7.796760,-3.900474,1.899554,9.869981,3.594633,-9.729576,-2.557024,4.072590,3.773556,-2.041684,-7.947420,8.750242,-4.898081,-6.441054,-7.046911,6.042008,-0.616450,4.464431,-5.367244,-3.938793,-9.251224,3.135498,6.285419,-9.358443,-2.040194,-9.815139,-3.286610,8.768466,8.170946,8.850530,1.540407,-7.534938,6.293206,0.068510,-3.670649,3.413733,9.817672,3.736264,-7.924348,2.825324,-3.541300,0.318581,6.507748,-1.444905,-6.355340,-7.147355,-8.177214,-7.855695,6.632307,5.066741,6.469755,-6.019568,1.765775,-4.600624,7.671533,8.883141,5.031472,-7.571492,6.323835,5.388520,0.391316,3.951985,3.059397,8.597426,-5.423609,-9.369810,2.685150,-1.741251,3.791818,-5.320764,-1.765120,-4.548726,-7.114322,-6.083412,1.345760,-2.249157,7.648054,-6.717230,4.808398,1.142608,-9.292508,8.103902,-6.949313,5.689752,-1.194728,3.295936,2.285263,-7.888885,-2.930266,0.731391,7.304686,-8.841404,9.193889,4.143056,-3.649993,-3.228362,-1.082608,8.728554,4.598304,-5.745246,-1.564832,-5.848581,-1.227666,-8.070587,6.888167,-4.756039,5.514477,-7.661162,-8.286084,5.505479,-4.961906,3.911017,5.331079,-3.025120,6.150012,0.897848,-0.587233,2.661441,-9.043145,6.702655,3.565070,-9.710615,5.539583,-5.913295,-6.974803,-4.950516,3.377310,-5.667461,-0.100480,-0.779745,4.775003,-5.916181,9.915729,-1.605044,4.037134,-8.028858,-3.739275,9.515806,5.496094,7.343509,8.291269,-0.265053,8.363261,3.851180,0.403686,-0.626928,9.059730,-0.963631,-7.210697,3.647305,5.163987,9.079487,-1.350466,6.452308,-4.458924,-1.979112,-1.146128,-8.470245,3.568755,-9.998400,3.872872,5.346058,2.775105,-3.706154,1.693694,0.656247,6.664457,-5.418787,9.021934,3.719070,-4.090388,4.311112,-0.630208,-1.712207,5.463968,2.302050,9.003742,-5.955145,-8.073176,7.603527,-1.621679,-3.274138,9.717804,4.310229,-0.759769,-9.608966,-9.254226,-7.764496,1.833760,-0.563307,2.044260,-1.052690,3.689122,1.113074,7.499278,3.940030,9.364349,3.250356,-3.916375,7.892832,6.192498,9.643400,3.418172,-7.061938,-4.709700,2.236060,-3.516923,4.944374,-1.400863,-1.724785,1.155781,3.894330,4.228101,1.133171,-4.986321,1.598736,-6.314585,0.467779,-0.220552,-0.145563,9.472615,-4.578449,6.365729,5.989764,-0.679383,0.517078,3.678781,-9.949786,6.798320,-9.090095,-4.729383,6.211352,-0.747007,-8.440761,7.487211,3.402343,-9.645643,-0.744885,8.940628,-7.734675,6.260355,3.530599,-5.453179,-0.963951,2.426074,4.311356,-7.554412,-6.243153,-7.092012,8.319234,-6.747968,-6.060039,-7.284931,-6.315893,-1.218330,6.492158,9.675361,-2.176631,-5.224691,6.687950,5.025566,7.376368,-1.288253,-1.538987,-2.282096,-3.979205,-6.490426,9.530658,5.227555,4.385411,-4.272115,-9.438043,3.539888,-2.906493,3.349284,-2.340355,-6.282461,-9.568512,1.924417,0.114437,-6.918511,-9.679125,-8.413107,1.093420,-3.820714,7.158615,4.233772,-9.642918,-2.724982,-8.071267,-3.132052,-6.164827,-4.464678,7.560613,1.474066,9.067210,-7.746940,2.930672,8.028394,4.183270,6.566762,3.400857,-3.583190,1.665345,-4.958382,-3.860135,-5.889053,0.195026,7.521380,5.758755,-6.085891,-0.655563,-6.114130,3.243191,-7.457615,6.708376,-8.808259,-4.176260,-7.550654,0.853267,2.755728,-1.252352,9.255173,-6.767667,-1.905770,6.574223,-3.630089,-9.785391,4.540055,-2.715119,-1.223284,5.096849,-9.340396,1.536182,-9.419341,1.711740,-1.753842,9.240807,-3.928002,-8.806766,8.945764,5.897346,0.298355,0.581179,4.939391,-9.952567,6.208498,-8.734491,9.569357,2.182290,4.155062,9.943548,-4.197143,3.914931,-4.164729,3.382049,2.797702,8.357570,-6.539303,-2.957125,-1.963283,7.925264,-1.978955,-0.155605,4.199636,7.199805,-1.916799,-4.476290,-6.545426,4.297914,3.466709,-3.025682,2.560145,4.777040,-6.422893,-7.411380,-9.056801,7.668888,4.994674,-1.999494,2.541053,3.535385,-6.823554,-0.301603,0.492549,7.841297,-2.505321,-9.291455,1.582251,-0.691266,0.266999,1.469880,-3.991680,-8.103482,-0.296271,3.265207,0.661007,8.243188,-5.164274,-2.638187,-0.622481,4.126747,3.679760,-0.930737,6.037365,9.088402,8.842162,2.283331,0.352235,-2.267939,-0.306368,0.590768,-1.500921,-0.638986,-1.877877,9.963579,-8.718423,3.525621,-1.084273,1.586073,-3.503211,-0.044950,0.084498,-8.018994,7.656293,-6.179825,-9.937791,3.615114,-6.551742,4.898144,-5.453653,9.293030,8.212814,5.699951,6.283173,-7.171441,4.015976,0.210194,-7.011816,0.276677,-5.601888,8.825529,3.955471,-0.506043,-2.837042,-9.583353,-8.764431,-4.160142,-5.063268,0.087562,-2.896329,-2.190407,-0.200954,-0.006202,8.753031,-9.707288,8.905314,-2.210187,7.262548,-4.762208,-7.817733,-2.423091,4.514913,8.854185,-9.163489,5.327381,-1.256385,-7.261064,7.002264,3.607509,-9.711102,4.301311,6.913629,-2.324284,-0.825136,2.532509,7.492931,1.110197,-7.252501,9.905966,6.709211,5.901040,-0.448204,-3.864520,-0.193113,-0.430556,7.852611,-3.724508,3.347452,9.594445,0.483535,-1.862947,3.439088,9.596905,-9.485294,-4.840545,8.545815,0.311678,-2.826642,-5.443950,1.682633,2.035761,-5.887019,-8.935234,6.819428,5.546496,-9.738620,5.971380,2.081212,6.809787,6.133667,3.701941,2.768867,-4.578051,-7.695849,-8.389047,7.947330,-2.598026,1.965141,4.803601,8.033217,2.676361,1.600081,6.217035,-4.254476,-9.601104,-0.589721,-0.252586,2.155240,7.989052,6.803089,3.400963,-4.520558,-8.342733,-7.928962,-1.428655,-7.658757,9.727772,-6.047820,-6.948212,9.862859,6.138778,-9.435190,7.378963,-0.096910,0.284324,-3.279819,1.164900,7.586199,-2.801140,0.037218,3.103979,6.350696,2.496802,3.967030,-3.322705,9.398761,-2.944088,7.105201,0.857370,0.494955,-9.538638,7.289697,-2.676850,9.399019,3.006181,9.526532,6.103644,8.556008,-8.108387,-0.233044,-7.131573,-4.753467,-5.997206,-5.014391,-3.467243,-1.528149,-5.176879,-3.377024,-0.863510,4.476026,-5.309025,-4.441915,1.010563,8.726532,-7.703707,-0.851199,5.033226,-5.908744,9.169221,4.594457,-6.269713,-0.562109,2.920029,1.704621,-8.764493,0.553324,1.314847,-5.152832,-9.553121,-2.015088,-2.930811,6.952150,-0.235703,8.290381,-9.733232,0.008059,-3.910923,5.159751], dtype = "float64")#candidate|5161|(715,)|const|float64
call_5160 = relay.TupleGetItem(func_5085_call(relay.reshape(const_5161.astype('float64'), [5, 11, 13])), 0)
call_5162 = relay.TupleGetItem(func_5088_call(relay.reshape(const_5161.astype('float64'), [5, 11, 13])), 0)
output = relay.Tuple([call_5147,call_5160,const_5161,])
output2 = relay.Tuple([call_5148,call_5162,const_5161,])
func_5163 = relay.Function([], output)
mod['func_5163'] = func_5163
mod = relay.transform.InferType()(mod)
output = func_5163()
func_5164 = relay.Function([], output)
mutated_mod['func_5164'] = func_5164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4872_call = mod.get_global_var('func_4872')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_5199 = relay.TupleGetItem(func_4872_call(), 0)
call_5200 = relay.TupleGetItem(func_4873_call(), 0)
uop_5244 = relay.rsqrt(call_5199.astype('float32')) # shape=(5, 11, 13)
uop_5246 = relay.rsqrt(call_5200.astype('float32')) # shape=(5, 11, 13)
func_4557_call = mod.get_global_var('func_4557')
func_4559_call = mutated_mod.get_global_var('func_4559')
call_5256 = relay.TupleGetItem(func_4557_call(), 0)
call_5257 = relay.TupleGetItem(func_4559_call(), 0)
func_1041_call = mod.get_global_var('func_1041')
func_1045_call = mutated_mod.get_global_var('func_1045')
const_5266 = relay.const(5.255964, dtype = "float64")#candidate|5266|()|const|float64
const_5267 = relay.const([[5.047774,9.467121,-6.077899,-8.968930,-1.766733,0.477531,1.473242,-3.454060,1.073181,2.407405,-9.390189,-5.327073,-9.308435,-2.284097,3.230437,0.830521,-6.378744,6.907598,9.884869,5.687642,-4.666933,4.704272,-2.092764,-0.903784,-0.609385,3.750894,-4.033515,-2.238978,4.687371,-1.946070,-3.518448,5.341015,-4.873409,3.295590,-5.357814,-6.612126,3.241384,-5.841310,9.105454,3.440271,-1.341719,-9.625049,-8.432133,2.067699,4.841864,-1.237461,1.980216,2.012492,5.259023,7.291377,9.310976,-9.909288,5.351721,-5.600861,-5.846309,-0.371999,-9.655480,8.984324,2.207659,4.986320,-0.459549,1.174195,8.781816,-6.839412,5.287756,0.791813,2.017472,-5.288921,-2.026157,7.218483],[-2.863151,-9.538836,-3.918463,-1.991815,-1.053538,-8.895370,3.495266,6.132836,-8.053470,4.624698,1.293057,-7.801203,7.137882,-5.922225,-9.618826,-9.463293,5.351670,4.799161,-5.026613,-6.513346,2.570133,-9.711711,-2.202092,-7.662212,9.647580,-7.222636,-8.818682,0.721023,7.043058,7.510068,8.132112,3.046545,-9.131061,-1.123925,-2.164839,-3.431639,1.814120,-3.787995,-6.439388,8.595970,4.873834,-7.059079,-7.249705,9.432562,2.137345,0.245478,-1.652279,-1.754776,-9.807089,4.239050,2.976619,-7.534548,-9.860189,-1.286371,4.729566,-8.815154,2.761643,-7.475236,-0.004998,-2.461581,5.839359,-1.733810,-2.329549,-6.369716,3.768204,9.763474,7.571800,-2.833063,-4.940784,-2.718114],[-4.120681,-7.152936,-0.076758,0.392960,-2.835715,-6.133594,-9.280335,6.324981,1.007419,7.498914,-7.690905,9.410361,-7.371889,8.970241,-6.765801,5.907083,3.753214,4.229189,-7.492647,-2.933223,-9.096361,-6.941857,-2.417244,0.858452,-0.651384,-4.403461,3.072646,-5.535045,1.533920,-2.430580,-6.501743,-9.717117,-5.433861,4.583220,1.101703,9.186575,-0.307932,-9.556225,-1.910800,7.868084,-9.587162,3.409729,0.695729,4.682064,6.323317,3.526480,6.303932,0.188683,8.724256,5.721381,9.355664,-4.595634,-4.969222,-9.655151,-6.994765,8.866941,4.268447,-5.769625,5.477835,-1.982251,0.931114,-3.368415,3.687811,-5.672145,-7.704322,5.142750,1.633801,0.319384,-4.209958,-9.973348],[6.824557,3.248626,-4.611106,-7.920577,-6.216686,-8.007164,-9.206624,-4.154314,1.947575,-7.345748,-0.401870,6.583982,9.703687,-7.548451,-7.311503,-7.264516,-6.765139,-0.228002,2.348351,-8.053602,5.141744,4.531732,2.487314,-9.426607,6.124326,-9.692923,-2.123934,2.642537,6.971272,-9.054656,-1.516910,0.325796,-7.514980,5.239831,-1.944437,4.257222,-0.422831,8.382110,0.318535,-0.872339,-6.786111,-2.637987,-3.038769,-2.232004,6.432098,7.925697,6.532596,7.932949,0.404976,9.565888,-4.753171,8.257812,-0.789179,2.595778,-6.071261,-5.855261,-0.838468,-9.775782,-4.952583,-7.788262,3.393036,6.833529,3.985493,-8.047244,8.199824,-1.791661,5.311816,-2.558515,1.717732,8.769168],[-2.038173,-7.120201,-9.228169,6.661835,-1.440085,8.401968,-3.600866,-6.462425,5.060530,-1.703754,7.631603,-1.059256,-7.759421,-1.295270,-6.375026,-6.902683,0.634955,-9.537607,2.942971,-7.818207,3.252052,3.539758,-2.761439,0.568395,-4.527878,-3.950854,4.100636,-7.510556,0.427295,1.831859,-1.749633,-3.063996,-6.470431,-9.261430,7.973355,3.331621,-5.268625,-5.801714,9.153595,-3.540158,4.062433,8.517196,7.479814,-7.035198,-2.295202,7.311904,9.828004,-2.859594,-3.921265,4.272164,9.576686,-1.233155,5.901947,-2.663496,6.535383,9.205465,1.437959,2.199812,-9.324735,1.316038,0.954577,-8.548719,8.661180,-4.501119,9.439939,0.848596,4.906048,-4.991266,-7.372476,2.636549],[0.514577,-8.264658,8.942187,4.874023,5.603765,-9.924660,7.244209,-3.156281,8.861505,-0.473039,-9.370551,3.791085,-3.699386,8.273531,-5.469327,-8.534360,3.512201,-0.152380,-2.686528,-5.652927,-2.975457,-8.700827,7.478357,-6.074035,9.008956,9.263836,-5.322319,6.754605,-9.621727,0.483243,1.470069,-7.762646,-5.931860,9.844011,5.576263,4.864990,-1.123705,6.022143,-8.737199,-3.298809,6.710344,5.972064,-4.587287,-4.484295,8.878146,2.503851,1.211413,7.543181,-0.327159,-4.320059,5.281625,-1.129723,8.748814,1.579716,7.130520,0.527337,-1.771514,4.620669,-7.928895,9.615520,0.910611,-6.448260,4.550120,5.746573,2.490739,7.739579,7.150953,-6.430717,8.875653,-0.579196],[-6.712454,7.244802,-6.388700,5.631769,-4.473980,0.593753,-9.876687,-9.957114,5.170680,6.027710,9.285190,0.397485,-3.878637,8.302735,-2.878772,4.229078,-5.036361,4.838397,7.765292,4.106559,5.318286,5.851736,-8.322893,0.398100,6.489778,-1.337970,2.809626,0.963328,-5.383233,-6.605617,-6.123218,9.756450,-3.973492,-4.242753,4.374454,-5.281219,-0.595955,-2.901596,0.329875,-0.475127,8.061233,-2.200875,9.897514,-4.952926,-5.227614,-8.370602,-1.369446,0.787776,-1.623572,-8.257430,3.710092,-2.919616,7.736187,7.216888,9.115787,5.430031,-9.334993,0.619152,-7.662905,2.306419,-5.013259,0.263015,5.756874,-8.708380,-0.774834,-1.951751,1.478052,9.928105,5.918298,6.708413],[8.973101,2.343525,-8.293905,5.216163,7.702618,-4.882846,-2.996055,-3.578664,-9.050075,3.217700,-7.316777,1.586216,-5.653574,-0.892157,0.755940,-1.420348,-7.201843,-1.548468,8.710198,7.455517,9.751821,-1.595067,-5.097123,6.057706,9.105807,1.983470,-6.578653,5.460221,-9.776397,3.941637,-1.454645,-3.090657,4.251083,6.789339,-8.214633,6.498996,-0.377938,0.791700,0.350023,-6.549109,4.964844,-5.253583,-5.717005,-8.243027,6.149511,-6.358310,-5.397427,-0.226069,4.872869,-1.752729,5.876990,8.014867,2.690147,-1.641864,-2.379612,-4.695997,-5.266271,8.923007,-0.303274,1.878737,1.538527,8.430425,-0.341039,-6.352757,-2.562913,4.389884,-9.545690,2.646988,2.290972,-3.487689],[-6.860381,4.895873,1.759933,4.200504,5.980558,5.413416,-1.646596,-4.327356,9.520986,4.941973,0.918530,9.429684,1.702257,4.928003,-6.247513,-1.262767,-9.162764,2.058040,9.125796,-0.552581,-3.340273,5.879387,-7.329380,1.333661,-0.454465,7.224292,-7.680765,-4.193165,-3.426188,-6.134624,7.962332,0.383167,0.916621,-5.116487,-2.767194,1.689477,-8.816874,7.302668,-2.148288,-9.031839,2.974286,-2.313517,-3.971370,-0.288031,-9.001615,5.543624,2.552813,-2.908805,-3.574125,4.723819,5.633794,9.606107,-2.789555,-1.060494,5.743349,1.437072,4.765211,-7.738822,-5.056711,-9.261159,-0.693859,5.589538,-1.653608,-6.346222,-1.266645,1.521025,-3.559669,0.592337,-1.887170,8.765848],[0.809995,-4.512816,-2.063535,-9.192823,5.351011,0.316036,9.873363,-1.777086,-7.796066,-4.503400,-6.542221,-4.987178,-0.009603,4.110997,-8.981578,-4.372081,-4.298077,-5.947910,-2.567739,0.519200,9.825343,9.686700,6.317194,-6.459743,-9.319000,-6.217368,2.276560,2.673336,2.130464,-6.252015,8.808702,1.342015,9.645623,-6.904775,-2.857463,-5.371811,-7.432027,-8.512747,6.271939,-9.379020,1.934321,-7.193355,4.327992,-5.648667,6.860830,-9.181760,-0.999235,-1.213265,4.425357,6.560252,-0.041133,1.695659,1.176830,6.701261,9.190173,-5.363752,-2.913727,3.454681,-3.430650,-1.284786,-8.115513,-1.790823,-8.188285,-1.211272,9.118950,-6.194390,4.033970,-0.639399,5.887747,9.753731],[2.818394,-2.200655,4.841029,-7.216910,5.977163,8.817512,7.898645,-1.286239,-3.076788,-9.665510,-7.824439,4.049468,-7.916934,-2.378738,7.340780,-3.858745,7.284665,1.442679,-6.528172,-9.085670,-2.627491,4.959010,7.066440,-0.543106,3.113412,1.361529,5.650071,8.053057,6.419151,6.977092,-5.854728,1.959706,-5.246216,-9.531603,-8.796413,3.339215,-4.209296,0.251415,-2.740661,8.147952,-7.030450,-7.673857,0.004853,1.363645,6.447768,-7.056956,0.947224,-0.234311,-9.281545,-7.036551,6.198005,1.205994,0.912234,-4.713365,-9.672323,5.754948,-8.091025,-1.404579,4.379150,-6.817815,3.863227,-2.663525,4.704749,-1.074650,7.247729,-9.432066,-6.043096,-0.919887,-8.132250,-4.313725],[-5.248304,3.161281,0.400856,7.929023,-3.074347,7.804400,-4.801864,-2.117924,-3.498856,7.333591,8.498268,8.160647,1.721774,5.851137,-5.805811,7.737739,0.431573,0.414596,-0.280028,-7.908646,2.827557,-6.341527,1.019150,9.717281,-4.011424,-3.494082,-5.953093,7.323282,1.589362,-7.186164,-6.549706,6.679989,-6.577272,-7.072718,2.471769,2.278354,4.314382,-5.585724,-2.056827,-1.702187,-3.622540,6.838404,-3.380411,-5.322754,4.856979,0.242243,-3.723566,-0.219599,-6.071349,-4.803924,6.662685,-5.912443,9.193233,8.149761,-9.141559,-0.271380,-8.085367,3.482080,3.069791,7.069755,-8.473500,-5.504933,2.582487,-3.705686,-7.511288,8.193920,-5.679459,-0.475176,-1.943059,-7.871179],[0.179882,3.212983,-0.844582,7.309376,-3.614949,-1.413165,0.107738,-7.946980,2.087525,-3.961948,1.265149,9.188685,6.355348,2.772750,-5.902948,-2.350779,5.439468,7.030744,0.773628,5.494922,7.590951,-5.550593,-8.053786,9.230797,6.307948,9.229912,7.894799,9.299951,-3.432191,-7.608974,-6.104392,4.757075,-9.286116,1.909067,0.434949,-7.000744,-1.491552,1.433661,0.309631,3.142410,6.785504,6.073310,9.503343,5.684209,9.123233,-9.827599,4.719043,8.504507,9.057292,3.085956,3.666590,2.602543,-7.332335,0.735833,-3.086850,5.829230,0.008007,-1.578172,8.139203,1.867661,-3.570819,-3.740401,2.223427,5.757542,-4.966162,2.272298,-9.292248,1.288793,0.867757,-6.214182],[7.327277,0.143029,-5.191699,-4.704661,-9.519894,2.982441,4.776164,-8.038582,5.659178,8.415745,-8.279005,-5.675582,-0.647248,4.197877,-1.018275,2.115724,7.716654,-2.769137,-3.305512,9.659183,-7.940807,5.805698,-1.147800,-8.745848,-6.905409,6.780916,-0.078911,6.242798,-4.955278,7.306273,1.550814,-4.584069,6.285502,-8.716690,0.128179,-8.692561,-3.568084,-8.013486,9.070451,8.983187,-7.498431,-7.848670,-0.711440,0.251653,0.517778,3.572233,7.134756,3.418268,-9.592680,6.373244,-1.143805,-1.905246,9.922533,8.220776,8.953444,-4.980827,-1.811456,4.609254,8.954099,1.155721,9.793738,6.006026,-1.942078,1.703401,-6.649578,6.673616,6.473853,-9.379242,-0.146882,2.207390],[-8.169817,6.482669,7.087677,4.689301,-3.669708,9.818426,6.011907,-6.819926,3.214510,-0.383566,-9.829673,-6.469555,1.816797,4.203953,2.969643,-1.399413,-0.131914,-6.236531,-1.039413,-1.538360,-8.471358,-5.137943,-0.281207,0.903952,-1.511850,-1.525954,2.497238,-8.833950,7.672103,-0.023634,1.623337,-6.270667,0.824550,3.153404,-5.457430,-1.339800,1.973947,-3.672825,4.291359,5.649104,4.427579,7.909498,3.844023,-2.977508,5.116742,5.147103,1.118876,-8.967453,-3.241905,-2.699370,-7.787303,3.839997,5.142387,8.882928,8.002308,-3.285260,-2.125622,-0.781199,-7.433179,-2.364443,4.970478,-1.057448,3.245441,1.807977,-7.194548,-5.010127,-4.781288,-0.376411,2.987352,0.765297],[-7.206227,-6.205052,6.597757,-1.807556,2.909167,9.781125,-3.161420,6.714779,-8.012894,3.714295,-3.529946,3.890877,9.910913,-6.794607,-1.591478,-6.041117,0.580655,4.341281,9.114775,-6.646327,6.510786,0.609663,5.192840,2.876142,-7.860808,-4.302412,5.036101,3.537342,7.672231,8.084017,1.108159,1.350522,-1.656841,3.070889,-5.566686,-9.982842,8.069352,-2.025436,-1.004955,7.077751,-3.335690,6.463510,5.675462,8.680138,-2.547121,-0.508124,-7.687393,8.828198,9.243139,-6.919411,-1.273045,0.418280,-3.456200,7.059527,9.416841,8.593197,-9.184726,3.488561,-5.157711,3.545302,-1.699333,-1.612531,0.566546,6.609320,9.695810,-5.371887,5.048779,4.392445,9.217680,-4.004766],[2.088894,8.031259,2.439626,-5.501095,7.072472,-4.377466,3.342790,-9.180253,-7.093491,1.587951,2.147135,-6.688263,2.484604,-7.393960,-7.320936,-7.027480,2.320335,6.668631,-5.139606,-4.704961,9.397986,8.668950,8.437016,9.723255,-7.232627,1.887882,8.308311,-0.990903,-5.232160,7.750310,3.842049,-3.982743,4.296088,3.588929,0.543167,6.819267,5.575696,-0.639046,-9.193329,-7.868237,-0.889251,-2.689840,6.872276,8.922119,-9.236447,-2.084804,-1.154047,-0.013314,1.004677,5.115945,6.820873,1.341614,-7.542661,2.115316,-1.112046,6.147626,-7.573955,-7.228342,-1.809431,9.161240,-5.144873,-2.234587,-4.308288,6.842070,2.704869,4.751121,8.134373,5.618962,-5.263636,3.873755],[-6.684253,5.915964,-0.343539,4.356891,1.915817,9.344251,-9.845633,-0.979384,-7.933119,-0.675814,8.898649,-0.925668,3.349668,-8.644681,5.397588,-3.561032,-1.104674,-7.493669,4.663312,9.078916,-7.852322,-4.329587,-8.951224,3.751824,-8.087606,-9.665459,9.418176,5.238679,-1.460582,-4.829451,6.267770,-4.202227,3.302858,-7.635041,-4.777490,4.679952,2.649593,2.123429,2.848846,-1.752932,2.660681,4.319966,-7.763672,6.111148,-6.570696,-1.899459,-9.813718,8.381916,2.605364,-3.533619,0.428053,-9.025390,6.066309,-9.383680,-1.843684,1.749829,-5.772132,8.611571,0.781700,7.700012,-7.103521,1.867003,-6.852078,-7.439438,-1.017982,6.842867,4.668692,-9.320326,-7.079224,4.987460],[-2.949727,-3.605297,5.213786,7.456133,-2.453705,-5.348981,-1.859970,5.424599,-5.973538,-0.541930,-8.087103,-4.735285,6.024508,-9.460150,2.286356,-7.512603,-1.825141,-2.427496,-7.301206,-9.479907,6.215983,-3.115100,-8.634062,-4.737848,4.381476,-8.359237,1.362308,9.659772,4.556521,-0.179680,4.782215,-0.311532,7.128633,7.709419,-5.468627,-1.009778,-9.044305,3.746741,-9.841059,4.573109,-3.927168,0.656257,-0.499312,-5.148405,-9.190330,6.673708,-3.251106,-0.006349,-8.026272,1.792139,5.757830,-4.119402,-4.084726,9.359292,-2.988324,0.997739,-9.244958,-7.025136,8.547543,-1.146146,4.842094,-4.507857,-8.323815,6.787532,-6.864788,9.466282,-6.787529,-9.670367,-7.042195,8.104369],[-7.517759,3.860233,5.805970,-5.658148,2.942877,-7.646337,-5.377248,-1.829691,6.796738,4.872362,-5.866872,-2.490766,6.623415,-4.746460,-3.142738,-3.372093,-4.139472,0.442110,5.384278,-2.916250,-2.394665,2.354553,5.671562,1.158482,0.297697,0.806119,-6.551139,-7.935472,-2.793055,7.585367,-8.522672,6.460870,4.161762,-9.317907,-2.645421,5.945247,4.154014,3.070130,-7.821611,-6.496380,-1.772510,-1.115625,6.954372,-3.028550,7.679353,-5.238821,7.723062,-7.116721,-9.165085,6.040847,8.241267,3.144145,1.065578,-5.343244,-5.185424,2.271962,-0.827885,7.181598,-3.671662,3.558617,1.589804,0.469373,4.616583,6.897647,-0.330786,2.356684,-2.814472,-6.759368,2.403566,6.955285],[8.472996,-8.740160,-2.335819,4.066713,4.806071,-5.497373,-5.622869,1.948466,5.164657,3.314837,0.471494,-7.908304,-8.645963,2.079877,5.400387,2.495701,5.665713,-3.170713,3.257821,-7.959606,-2.690930,5.658947,-2.152893,-6.984038,6.693434,4.891892,-4.965551,-4.151966,3.334957,6.512115,8.369628,0.326903,-8.802833,-0.201985,-0.906579,6.658661,-0.100636,5.072272,1.694268,-4.850637,-2.764051,-7.850104,1.804137,0.548919,-4.775407,2.161474,0.392460,0.499407,-2.050006,0.524083,-7.845678,2.073930,8.965409,-1.918171,1.264703,5.755157,-6.280554,-6.869357,4.657124,-3.863463,-5.575142,6.371529,2.625183,-6.832620,-8.892504,-1.867088,-2.263191,4.298545,-5.465360,-2.110047],[3.380971,1.992015,1.026278,9.966275,5.390113,4.617085,-7.017320,1.206388,6.930853,4.836780,8.507484,-1.740184,-7.457512,3.862087,5.838544,-1.684252,-0.095939,4.834853,7.102931,-1.100663,-5.952744,5.537368,-7.604955,-6.332978,-1.335824,3.913426,2.535276,7.908580,-3.547105,3.335315,-4.678920,-5.270909,7.700587,5.315291,-5.488437,-3.179465,9.432355,6.219668,-4.172119,1.108194,-0.455472,2.996397,-0.299367,4.957015,2.207930,6.897144,-5.963033,-0.310725,8.664135,-9.700948,1.372371,-6.395588,-2.185885,-4.561051,-9.215289,2.142375,6.713181,-1.710884,6.098417,-3.101178,-7.600436,6.483145,7.233252,3.989444,0.578768,-4.457635,-9.019933,9.197485,1.142960,1.380656],[0.046152,-5.481629,6.653469,-6.241704,-3.109993,-5.594086,-9.862676,1.463264,6.106440,-6.259041,-3.799211,-6.504618,-5.240002,-6.180609,8.376912,4.389083,-9.286724,4.154436,-3.361574,0.372601,-4.469992,-5.312655,2.762157,-6.694954,-6.363465,1.098449,-4.673658,7.269463,8.278323,-8.287945,2.850377,9.476536,4.051234,-3.070762,-0.761322,-5.599446,8.496778,-2.052632,-5.511252,3.198081,6.987784,1.894264,-6.999916,-9.757971,-4.337832,4.457568,-1.276618,-2.039786,1.284941,-6.437963,-9.449484,2.639150,4.498737,-0.129503,-2.446162,-8.510233,-4.943586,9.305319,-5.977828,-9.269418,-0.838555,-9.624110,-5.595041,-4.345117,2.363688,8.732770,3.156515,7.942641,-4.934267,-4.088551],[-1.044971,8.687295,6.484871,3.647598,-9.371995,-2.930726,4.464048,-2.840750,3.195914,-3.796201,3.588211,-6.350007,-3.769378,9.369236,3.699229,0.624688,-7.504469,-2.832077,-9.961084,8.763168,6.743958,3.895274,-9.547589,-2.544471,0.015004,7.451619,0.172848,8.903756,2.069783,-1.897645,1.644274,-8.132583,-1.369621,8.308331,0.578769,-6.145535,-0.466702,5.722234,4.270418,5.156098,-5.241131,4.416043,-1.845554,5.814099,4.668749,0.192299,-2.914656,-8.573570,-3.254546,8.400065,-5.824638,0.610017,1.644532,3.461014,-4.898399,8.457733,5.936921,-3.435862,-5.318524,-3.209468,-8.477678,-2.777885,1.951176,0.317386,-8.230507,9.843940,-2.001238,4.093729,-7.087271,-0.291733],[7.436510,2.974806,-2.042882,1.774953,-5.449071,-6.836846,0.840416,6.996281,9.512520,-4.151468,3.115983,-3.844326,-5.400417,5.990143,9.193879,-3.471559,-2.583193,3.719171,8.253155,4.745843,-2.404668,-4.969665,-5.764022,6.015458,4.786689,5.098056,3.926391,-7.173168,0.941471,-4.758155,-8.165832,-3.275231,8.489369,4.946346,-5.441861,-6.219435,5.384646,-4.624179,-2.963288,1.303986,1.520088,-4.838216,5.970683,6.668781,-4.591629,6.766665,-3.659726,3.797646,5.489976,-1.894716,2.867767,6.760157,-6.411028,-8.023668,8.990117,-2.820328,-8.226825,8.005036,5.735554,0.016248,8.868873,-4.470266,-9.961966,1.488350,9.078821,2.078378,-0.243777,2.128942,-5.559965,6.807024],[2.761156,-9.266553,-8.350534,8.549616,-8.678086,4.798441,8.874681,5.677817,-5.413798,-1.738664,6.192183,-0.654507,-9.337851,-5.671278,-1.777260,-8.905609,0.938786,1.602376,-5.085097,9.819264,5.688762,-7.028716,2.935631,-4.444588,-1.738181,2.368948,-8.235372,5.388372,2.709451,7.164831,7.384158,3.895174,8.466212,-8.988743,-0.619126,-0.735096,0.770343,-6.152485,5.272308,-7.870738,0.778267,8.048819,0.198632,-2.097569,-1.840992,-3.406398,6.106969,-7.561822,1.656000,8.635239,-0.857455,8.730970,-2.882798,-8.594801,8.653400,-7.727927,-2.102751,-7.813646,-0.365093,-8.666911,2.087414,5.465008,3.640106,3.796854,-2.330647,-7.976465,-6.841732,-5.272341,7.406093,-5.383353],[8.210606,-1.266334,-5.296571,-6.118123,2.365443,2.689152,4.685288,-5.510229,-9.394620,2.315891,-7.859986,-6.692259,-7.822453,1.750713,4.316970,-3.118480,-1.417383,1.062666,9.005167,-3.107621,-9.704964,6.523849,-8.519148,-0.970678,1.065373,6.655618,7.133750,1.366895,3.900032,-5.821242,-4.734797,5.548388,8.421973,-4.486731,-7.342718,6.169067,-3.185412,3.326272,-5.343710,-0.587476,2.176899,7.998870,2.296013,-8.674807,-7.723045,9.829001,0.064590,7.210655,9.648330,-4.846509,-6.549365,5.513627,-1.578947,7.535656,-0.901035,7.877884,-8.270413,2.368814,2.668319,-9.299622,-0.530977,-3.586085,-9.549239,-6.275971,8.876556,-9.556614,-8.913285,5.636321,-2.614830,-7.332595]], dtype = "float64")#candidate|5267|(27, 70)|const|float64
call_5265 = relay.TupleGetItem(func_1041_call(relay.reshape(const_5266.astype('float64'), []), relay.reshape(const_5267.astype('float64'), [15, 14, 9]), ), 0)
call_5268 = relay.TupleGetItem(func_1045_call(relay.reshape(const_5266.astype('float64'), []), relay.reshape(const_5267.astype('float64'), [15, 14, 9]), ), 0)
func_3407_call = mod.get_global_var('func_3407')
func_3412_call = mutated_mod.get_global_var('func_3412')
const_5275 = relay.const([6.576456,8.014027,4.524281,5.721635,0.329456,0.451012,-6.225518,-9.110471,8.494324,-6.109645,0.039040,-8.159846,7.551924,-1.224392,-2.383855,-2.937511,-2.434988,-5.947848,5.645968,0.190943,-1.325465,1.756538,4.626937,-0.632596,0.743133,3.391149,3.448193,-5.091149,-3.249008,6.187420,-7.994163,-9.078941,8.086984,-9.151289,0.272217,2.440176,-3.940643,-1.641602,6.051575,6.306670,0.631746,1.858655,-7.589957,1.273732,-7.271120,6.755577,-3.089508,9.054152,-5.008789,8.705482,7.495646,2.104700,1.210390,3.361425,-0.525252,6.989912,0.042211,-3.372244,-8.383236,-3.181805,7.410338,7.466403,-5.593722,7.548686,9.045931,-3.671827,-2.817447,-8.300579,7.585983,-8.438680,-1.663558,-3.591814,-7.339708,4.860108,-2.364118,7.342786,9.715883,-1.082323,-0.498589,-3.204059,-0.374497,-3.488130,9.754212,-2.561567,7.136700,-7.574057,-4.868870,4.220394,-0.326094,3.727081,6.811161,-1.770604,-5.343696,-1.696967,-9.392725,-9.006302,4.418607,7.240297,9.027138,6.642308,-8.734291,3.625221,-7.555869,8.178340,7.915844,-9.097679,-5.397767,-4.633216,5.757484,7.503262,3.442185,-8.221812,-7.573843,9.645777,2.621956,-5.916151,6.189841,-1.454227,8.798000,-8.714038,-5.822107,7.531347,3.096959,6.737888,-3.453837,-4.156481,-7.148864,-1.142704,3.740350,2.391688,-6.813424,-0.965185,3.160280,-9.739632,7.213511,5.263783,8.489025,-8.804298,-5.429737,9.526216,-2.941295,9.615156,-9.970431,4.630579,6.056574,-3.670823,7.380885,4.256802,0.942920,2.296566,-1.722712,-0.386468,7.155931,-3.666652,6.160340,-2.312272,-6.609800,-5.316485,4.362596,-1.086979,-1.205297,-5.140568,0.870045,-4.778287,0.088032,0.270260,0.218679,9.587805,-2.316537,-5.214756,5.093948,1.855741,-4.845770,-3.525366,-4.779360,2.417069,2.676825,-4.223298,3.227543,0.277002,-3.170723,3.642761,4.954632,-8.246035,-3.894201,8.538656,8.738636,6.524641,-2.528765,9.381999,-2.139655,-9.546129,-5.739817,8.915120,7.233493,7.546371,2.416593,4.421990,5.325388,2.603118,0.554975,-7.384125,5.863391,-6.768322,1.195739,-6.154953,-9.328628,-5.705830,2.517476,9.641870,-7.473611,-2.106340,1.531639,-3.834044,1.502406,-2.203114,-1.528030,6.256901,1.562701,-1.025106,2.952133,-4.213401,3.188851,8.710979,-8.769810,9.832334,9.472037,3.592443,-7.122157,2.010966,7.846880,-4.609870,-4.443440,7.871266,4.574533,6.574199,8.732502,2.305453,-9.471910,4.359767,4.640571,4.313481,1.333008,2.346514,2.061474,8.401383,-8.705080,-4.727175,-0.163782,-2.443191,9.054327,-1.880863,-0.254917,0.677679,-7.261698,5.214326,-1.593838,-6.776959,0.358057,4.536290,1.331453,4.569030,-9.092225,-3.118037,-7.329925,-7.264036,-7.269253,-0.589684,-9.250430,2.872175,-7.449879,-7.099412,-4.427787,-4.077889,-8.487360,-0.395169,5.978395,-4.859939,6.224050,-6.965637,8.552944,-2.851308,1.455610,-9.839160,-9.717584,7.442383,9.202132,6.003425,-3.074158,1.633750,3.959311,-6.953437,-0.494568,-8.971658,-7.573665,4.816524,-8.022968,6.718664,-0.928666,1.414197,-1.090516,6.212128,6.860571,9.151039,5.437419,-1.868560,-0.670497,5.999425,3.320101,-5.122347,-7.794321,-3.248924,5.816471,-8.331649,5.568325,7.991552,-2.001163,4.454021,7.615448,-1.168666,-6.178389,-6.868053,4.243570,8.308517,2.763344,-8.995698,2.943201,-4.496509,0.457398,-7.072201,1.812061,-1.771569,-2.095105,8.060657,-5.641430,-6.117060,-5.863708,0.680533,-3.122843,3.050803,-3.645218,7.199094,-6.141650,5.244402,5.682278,-3.618909,0.115788,-3.876048,5.149769,4.437982,4.869013,-1.742933,-5.115584,-3.160566,-1.009479,0.490120,4.381636,-9.350252,-3.328517,7.177301,9.744015,-5.370964,-3.175511,-2.333833,-2.587760,9.565682,-2.291198,-2.890478,1.625613,0.169848,-4.914119,9.326895,-1.168491,1.855816,7.932010,-3.796967,-4.424806,5.789398,3.714756,-8.098881,7.046408,-6.785942,5.788674,0.966709,1.740685,-7.568564,6.390848,2.871005,2.440320,-5.532149,-9.853577,8.369251,-7.001937,0.052807,4.566226,9.845440,-6.717284,-7.662042,-4.783952,-2.998957,-0.102908,1.710808,-0.465715,5.603374,6.022258,-1.034438,-7.905722,6.025599,-1.748093,9.690104,-4.795552,7.454123,-4.917381,2.539110,3.177002,-6.439686,-0.471917,5.397470,-5.883064,9.155880,-1.711281,4.979019,0.840568,3.031845,-5.539700,5.037396,-2.574018,9.707505,-6.242022,6.168243,-0.977915,-6.547844,-5.715048,-5.592792,-4.268318,-8.014830,2.780878,-1.114892,-2.617416,9.287541,-1.399964,-7.169094,6.501369,8.486084,-5.871749,3.274615,-9.181079,8.718359,2.733806,0.381396,2.850080,-3.441269,-9.120397,-4.056578,4.087469,1.419433,-4.797553,-7.866165,7.253128,-8.725746,-9.236087,-8.678551,2.486677,6.896694,9.547644,-5.528791,3.969985,-4.003638,9.546293,-4.771397,-9.496923,-9.715755,0.309384,-2.321966,-3.801923,-7.658617,-2.301370,9.607187,9.405219,-5.957246,-8.165045,5.655779,8.489317,1.731796,-8.935180,4.046126,0.891504,-3.957200,-7.815943,9.546241,2.300441,-4.648974,-5.098140,7.049136,-1.566198,6.295384,-6.239997,-7.890343,-2.804872,7.606267,-1.998928,9.837642,-4.365726,-4.228575,-7.144629,-5.167149,-9.161527,3.106288,-4.437174,-1.597587,-5.866356,9.664523,-0.740025,-6.304171,1.045962,-4.241246,5.047943,5.245895,6.073576,-3.867683,7.517968,6.545033,4.987516,3.981918,9.628051,1.982269,0.707350,-7.795382,-4.669853,-9.357630,-9.636317,9.829577,-5.081305,-2.927512,6.814581,9.273314,0.752208,-2.768669,6.685628,-7.767004,9.110148,-1.033046,5.125602,-8.951828,4.178187,7.210425,7.063963,5.283691,-1.459435,5.524663,7.224659,-6.584799,4.824548,2.368890,-7.970616,7.356689,4.234232,-2.176446,2.997075,1.361165,8.738202,-1.988932,2.537726,-7.652923,6.379633,1.678228,-8.174066,6.085661,-6.820909,-8.461713,2.895837,-6.258350,4.876498,7.538251,-7.610990,-6.497731,4.799214,-1.248708,-0.339908,-3.088616,8.208798,-5.560282,-8.523453,9.724544,1.026427,7.702516,-9.900103,5.711123,2.681331,-0.021467,0.498383,6.649272,3.358105,-8.334085,2.191126,-9.302376,-6.527562,-1.447603,-3.414974,-0.382162,-6.758933,-7.893585,0.525723,-6.677574,-0.888844,-3.173802,5.913005,6.845898,-8.913441,3.301628,-7.468670,-4.499171,-4.764181,3.090594,-8.655350,-7.682289,-7.061510,1.361191,1.781347,-3.774617,-1.232407,2.501557,-8.113288,6.863111,-0.694885,-7.222928,-1.696636,-6.478102,-7.893812,6.735728,0.111143,0.049685,8.759197,5.334845,-7.583141,-6.048935,2.575673,0.410824,-3.039156,-6.838724,9.003371,-6.129973,0.747866,-6.913000,-7.948712,-1.431691,-0.808234,3.921445,8.307828,-3.981177,-2.360622,-9.154756,-8.852634,-3.777029,-5.440343,-4.933707,0.066276,9.348973,9.197266,-6.681816,-0.234382,8.279574,-7.007108,-7.152069,6.648090,-8.637312,4.485986,3.038698,-3.044923,0.159079,-0.504414,-1.866065], dtype = "float64")#candidate|5275|(672,)|const|float64
var_5276 = relay.var("var_5276", dtype = "float32", shape = (1, 1210))#candidate|5276|(1, 1210)|var|float32
const_5277 = relay.const([-10,10,7,-3,-9,3,-8,-6,8,4,8,-4,6,-7,3,3,-4,3,2,-2,-6,1,-8,6,-1,-5,-8,3,2,-4,-9,8,3,3,-9,6,-2,9,4,-5,6,5,2,9,7,10,-2,9,2,-1,-7,-6,4,10,-1,-4,-6,2,-8,-1,-4,-2,1,-4,-1,4,1,-8,5,2,2,2,8,7,5,-2,-1,9,-8,-5,-7,-9,-8,3,5,-7,3,5,3,9,10,-1,8,2,-3,4,-5,8,10,-5,5,1,1,-1,-10,6,-4,2,7,7,-1,9,6,9,7,2,-6,-1,-1,-3,5,-2,6,-10,-7,2,9,-4,-9,4,7,-7,3,1,-4,-6,4,7,-1,5,-3,-6,8,-1,4,-2,-3,3,-9,-9,-1,-2,-2,-6,-4,-1,-10,3,-10,7,-2,-7,8,-1,6,-9,-7,-1,10,4,-8,2,3,-8,-2,6,-1,-10,-3,-7], dtype = "uint8")#candidate|5277|(180,)|const|uint8
call_5274 = relay.TupleGetItem(func_3407_call(relay.reshape(const_5275.astype('float64'), [14, 4, 12]), relay.reshape(var_5276.astype('float32'), [1210,]), relay.reshape(const_5277.astype('uint8'), [90, 2]), ), 0)
call_5278 = relay.TupleGetItem(func_3412_call(relay.reshape(const_5275.astype('float64'), [14, 4, 12]), relay.reshape(var_5276.astype('float32'), [1210,]), relay.reshape(const_5277.astype('uint8'), [90, 2]), ), 0)
output = relay.Tuple([uop_5244,call_5256,call_5265,const_5266,const_5267,call_5274,const_5275,var_5276,const_5277,])
output2 = relay.Tuple([uop_5246,call_5257,call_5268,const_5266,const_5267,call_5278,const_5275,var_5276,const_5277,])
func_5285 = relay.Function([var_5276,], output)
mod['func_5285'] = func_5285
mod = relay.transform.InferType()(mod)
var_5286 = relay.var("var_5286", dtype = "float32", shape = (1, 1210))#candidate|5286|(1, 1210)|var|float32
output = func_5285(var_5286)
func_5287 = relay.Function([var_5286], output)
mutated_mod['func_5287'] = func_5287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_5330 = relay.TupleGetItem(func_4836_call(), 0)
call_5331 = relay.TupleGetItem(func_4838_call(), 0)
func_1091_call = mod.get_global_var('func_1091')
func_1094_call = mutated_mod.get_global_var('func_1094')
const_5340 = relay.const([-4.148091,0.448960,0.823463,-4.521655,4.658087,4.298162,-2.078262,1.980861,-9.868884,-7.137433,-4.475830,5.903443,4.017236,-8.251199,-3.062928,-9.912933,-2.422196,2.840079,9.036228,0.602759,-6.213210,5.820179,5.218013,-7.524902,0.634876,7.243142,1.082030,-9.632794,-5.714763,-2.722925,5.150443,9.563391,-4.623927,1.879916,4.238530,9.485303,1.589802,-0.982233,9.996909,-2.866343,1.611506,-0.477873,-1.247036,-1.054881,8.623167,4.549972,6.488799,0.058635,3.813347,0.387013,2.585840,6.349932,-1.579793,4.531290,-4.700985,-1.798075,-5.160297,0.844656,0.150793,9.497777,-9.922998,3.120982,0.409832,9.043507,-1.524834,4.811999,8.375558,-7.434209,-4.964525,-9.021577,-8.363249,3.158714,8.733810,5.176237,-9.371558,-9.905166,-2.341004,-8.635645,-8.608400,-7.393608,-9.729552,-1.390717,-2.889173,4.228746,0.947243,-6.430263,3.144306,-7.311332,-6.080304,7.022691,-9.889722,6.401654,-2.386521,-3.081588,5.321175,8.227175,3.972818,-4.436880,-3.882249,-2.678852,7.308735,7.775111,-4.445834,0.778352,-0.903237,5.501227,-8.015763,4.054033,-4.532847,4.877579,-1.174945,-5.913573,3.882419,-2.560051,-6.239407,0.365075,1.822777,-2.272948,-0.995687,-4.325946,6.081283,0.324312,-4.261796,-2.502098,-6.945644,-8.981624,-9.625312,-4.460014,2.366351,0.623316,-5.623300,0.393082,-8.073912,8.310580,-8.059458,5.346469,-0.164229,4.555770,7.215112,1.108810,-3.058553,-5.555725,-2.074876,-5.427598,2.399462,-7.470408,-4.026430,9.070094,6.456010,9.444608,-4.916539,6.737802,3.798924,8.183945,-3.010520,-4.613025,9.807258,3.554211,-4.136725,4.716576,-6.407552,7.493770,-7.072379,4.648936,6.025333,7.260915,8.812174,-5.214375,3.361101,8.881135,6.939605,-1.239658,-0.635741,-4.842164,9.090974,2.448667,5.971279,-2.422794,3.717822,-8.134774,-2.372651,2.418089,-5.869432,-8.227776,1.814794,-0.817614,-5.734011,2.457676,-4.448157,9.759525,-9.984587,0.886356,0.794530,2.389218,6.040197,6.673593,8.046937,0.452372,8.873166,8.073038,9.855605,8.976723,7.424891,1.903391,-3.850165,2.549354,5.266141,8.705075,0.707360,1.458357,-1.998540,-6.785122,1.453177,4.567767,-3.864393,-3.615748,-9.557407,4.637245,-2.931472,-8.157937,2.821218,7.252368,-0.393530,5.767927,2.398562,0.826105,0.920584,9.676253,2.334315,4.459313,-4.447926,-3.881440,2.206035,-8.063310,-6.225837,2.823608,-5.299292,-5.354276,0.495215,-6.458622,-9.687180,-6.074971,-3.543770,1.398828,-8.882003,1.761172,-2.796726,-8.409710,9.532271,2.293256,4.856991,6.805471,-5.951863,-4.193255,3.650446,-2.258979,-3.816877,2.510980,0.759080,0.189622,-8.777994,-7.180167,-0.606572,-4.297895,5.925260,7.902580,-3.710813,-7.787309,-0.878707,-2.184714,-8.453096,5.931209,4.814840,1.544448,9.666208,4.444609,7.094940,-3.806947,-5.349048,9.789152,1.388596,-1.666409,0.712066,-7.298935,6.332338,5.776209,7.002827,4.495320,2.288898,5.984187,7.793173,-1.750551,-3.434971,-1.236088,-3.783769,-2.469572,-3.663581,0.661848,-5.077921,0.562524,7.059953,0.754963,0.031025,6.653353,3.739168,-8.931556,9.240304,5.911586,1.977002,-2.948641,9.047802,5.779546,5.201443,7.624331,-1.219468,-9.940131,9.902126,1.963592,-3.242273,1.670372,7.160161,-0.183362,1.128563,8.650295,5.272498,-5.524385,-3.550351,-9.876088,-6.049349,8.957750,-8.478266,-9.736147,2.254472,-1.116451,1.719205,1.438025,7.969725,5.734020,3.404400,-9.060373,2.199931,6.282132,-3.004659,1.731912,3.759654,-9.232449,-2.679781,0.730218,-0.578376,9.433122,-1.310405,-6.474254,-4.588581,-8.824763,-1.270782,-4.129208,6.450347,-6.015218,0.329378,-0.325818,-9.652943,-7.967976,-9.789468,1.094858,-0.803775,-2.281807,6.606857,-9.215638,-7.516637,-2.196592,5.322193,-8.629292,-2.622494,8.769074,8.536167,5.401616,-4.908981,-9.479868,1.009766,0.523375,1.387803,-0.269113,-3.118220,-2.651688,8.636732,-9.375688,-2.662937,1.410007,7.983228,-0.631585,9.064275,-0.685500,-3.359285,-7.743606,-4.608236,4.698506,5.443920,6.150292,-9.755532,-1.456811,-4.376623,0.290990,-8.076896,0.593317,3.462524,-8.814500,2.670016,-0.102857,9.066628,-7.477131,-1.167444,2.696520,5.764882,6.998535,4.250734,-1.161149,-1.035236,-8.115948,-6.021752,-2.148394,6.806716,-5.575942,-0.965340,-6.282293,8.312870,5.984968,-7.698050,2.730050,3.619725,-1.099041,0.606286,-6.352867,-2.941088,-2.201719,5.327632,-9.899854,0.109402,9.566276,5.535648,4.181508,-8.465013,-1.264538,-7.083451,8.774113,-3.435269,-6.305025,-1.837386,-5.588476,2.398757,6.128105,9.966914,8.093860,2.217704,-9.167336,6.540668,1.258161,4.977338,-7.643466,-8.749197,6.340649,9.971519,-8.454202,0.224683,-4.920505,1.832268,0.360249,9.537491,7.999339,3.155070,0.651563,9.411672,4.983948,-6.507175,-5.036694,7.693278,-6.432542,7.536405,-6.877333,6.040149,8.431680,-1.068859,0.766845,-0.140742,-3.088541,1.581341,-5.425839,5.666023,1.227566,0.684876,-8.439172,2.088570,-3.041945,5.008071,1.969286,4.155589,9.215393,9.925737,-6.744853,6.535371,-3.423639,-3.462532,4.239344,-7.983009,-8.421431,3.583405,-9.858060,0.020655,0.897781,8.466243,1.294538,-0.898927,-4.167315,8.414769,4.989307,-4.729622,6.923824,-9.050020,-3.509961,2.379018,-7.147010,1.328533,-7.873143,3.221909,1.669733,-8.031392,-2.016871,1.894020,7.390020,9.263660,0.960063,-4.364576,-8.691915,2.300259,7.724541,2.526239,3.230015,-9.431586,3.186329,-7.416924,-0.396461,0.723477,8.166427,2.802350,-7.314147,0.893048,-5.322115,-5.699400,-1.435122,6.546418,8.057997,7.203708,1.675955,-4.673162,-2.724243,4.417700,9.844707,4.805533,4.061900,5.958197,1.834819,1.742960,-4.723136,-2.125975,-3.911642,-8.651698,5.414944,-9.113047,0.446101,2.197047,6.501252,-3.378280,-1.542777,2.733251,1.779118,6.911745,0.088386,-4.158866,-6.547876,-9.515752,6.198360,-2.603398,6.538227,6.463129,3.567119,-6.494609,-3.773352,-1.915955,-7.843538,-7.958180,-2.314761,-8.151352,1.111567,-9.624356,8.818762,-2.849203,2.067507,4.251793,7.000866,-1.379226,-6.775304,-0.775738,2.263592,7.214701,-6.071319,4.039332,1.798755,5.070242,8.384553,-3.211851,-6.509237,5.038092,-7.794707,-8.151502,1.052050,-1.817499,3.356023,-5.339700,0.967325,-9.830123,-4.553133,4.846039,0.271253,-2.327405,-4.579048,-7.687411,3.776507,-7.462210,-2.624590,9.270886,6.614250,6.049321,-6.795973,-6.246256,6.424684,-0.435259,-7.005921,9.109842,-6.034519,-7.993194,3.176869,3.877904,-5.085833,-6.381192,1.461377,6.646985,5.235183,6.207393,-3.474147,-8.361016,7.093079,9.796452,-8.317632,1.146125,-1.074086,7.971846,-0.025199,-5.880005,-0.200985,-1.564235,4.081603,7.633086,-8.463392,-2.155391,-5.606175,3.070901,6.624092,9.123770,7.077244,-3.860647,7.856667,5.220356,0.736614,-5.400390,-3.701776,0.346176,-8.036562,6.879990,6.345555,-9.003875,-7.941426,3.147911,-7.589444,5.000676,-6.387521,-2.051732,4.446083,8.034168,1.827521,-3.581056,-0.973703,5.435152,-2.126492,-8.239646,9.154418,5.622160,-9.019717,6.117408,-3.762580,-3.555192,0.590969,-5.003323,9.413469,2.169801,4.267874,-5.201597,0.892898,6.571993,-6.290926,1.293628,-5.559244,1.522406,-4.739038,4.479520,3.928591,8.618269,-0.488366,1.813272,2.868868,4.913138,1.822662,3.320354,5.224253,-7.666015,-3.927814,9.129723,4.288047,5.648024,-8.858470,-8.911696,-3.166139,-9.547640,0.681335,-6.134069,-9.055367,8.144746,-4.247068,-9.631213,8.343799,9.433281,-4.223279,-8.195858,-6.469699,8.069409,7.280634,-6.899657,7.230031,-7.309927,5.676664,-4.931277,-0.678749,5.652954,-4.811775,6.631830,-7.946498,8.462024,7.589300,-4.924886,3.199379,-1.104287,0.231855,-2.088002,9.846127,2.814698,-8.697033,-3.910501,-3.502847,9.102847,3.968561,-5.742311,1.908194,2.339082,-6.856852,-4.521977,8.223674,-1.193767,-2.277840,-6.051241,5.996774,-3.593606,6.884274,3.045315,-2.541392,-3.907148,8.406128,0.932731,-3.231388,5.397246,6.835631,-8.556271,8.939685,9.460105,2.166710,4.657609,-7.756867,-9.809730,3.238299,6.977267,-2.711829,6.292816,-8.626891,5.923616,6.495815,6.295291,-7.303558,-6.244108,-7.748651,5.750811,4.836198,7.199134,-2.432428,3.698389,9.788006,8.026256,-9.593032,2.341973,-8.896674,3.878341,9.033229,-9.549537,-2.354960,0.446513,-1.530315,-0.247930,-4.441276,9.122541,-5.280721,-4.536846,3.774827,3.193180,-0.638291,9.443819,5.581645,4.305624,6.332467,8.970652,-5.603749,1.784030,8.627170,-4.799357,6.607843,4.360077,-7.806657,5.514172,9.842738,2.678925,5.854395,-1.038999,3.653024,7.772897,8.894526,-7.825029,-3.074511,1.856928,1.801037,9.165103,5.057728,-8.508112,-9.413612,-3.297883,7.612498,5.239185,-1.753212,4.170789,3.490004,-9.057240,5.129970,-3.998248,-6.827051,-7.048889,9.446711,-5.648973,-1.656548,-2.659136,-9.706757,-7.597595,-6.783745,-6.934381,-4.154767,-7.414391,2.200190,-4.262042,0.796568,-6.289169,-2.153872,-5.559950,-5.646930,7.471294,5.616760,9.253602,-3.719948,7.129695,5.131429,9.250219,-7.389077,-7.940374,-0.798451,-8.748122,4.592930,-9.929637,4.645980,-5.092424,0.386949,-6.063954,7.188107,2.265070,-0.765400,6.872406,-5.068645,3.045202,-1.205192,-6.485731,-5.717878,5.648986,5.200319,-3.528265,-5.356311,-2.829275,-0.643006,-3.066186,-4.753611,9.364223,6.774129,0.090448,6.362472,-6.538086,-0.733549,-6.429966,4.544412,-9.361153,9.672238,-8.277534,9.987984,-1.944252,5.745767,-9.192651,-3.955115,-7.911166,-3.430543,5.687971,-7.557290,3.384144,5.602834,-2.350091,1.493265,2.137401,2.010056,-4.775079,5.866051,-6.195239,-0.477138,-8.644932,-9.101254,-2.326551,-6.260730,-9.610723,9.242789,5.635227,6.366403,0.608951,6.113903,-0.030052,-5.572096,2.996602,2.713056,4.671937,-6.986812,-1.936373,-9.000893,3.448996,-0.714425,-6.258099,-0.783759,-0.309253,9.701050,-1.751632,4.584158,7.777503,-9.522969,3.088572,-0.182703,1.508268,-0.424653,6.199622,-4.003449,-6.627744,-4.439354,-3.006747,-5.487647,-3.342449,-7.776629,-0.324231,8.288790,-4.679975,6.237233,0.083567,-0.666576,-6.083193,-3.152858,3.774244,8.452160,-0.220006,-3.114517,-3.762491,4.567001,-1.605983,4.046719,5.209814,-5.241569,-9.510003,2.512986,8.049729,-8.774564,7.056537,9.890891,5.056268,-4.781178,-6.590092,-3.319897,2.043416,-6.146124,-6.389358,4.427471,-6.725445,6.065359,6.206946,5.254766,-1.109496,-6.464460,-7.518791,-6.223303,-5.745315,3.353700,-2.991008,1.597081,-5.729416,0.556907,-7.838785,-3.018984,8.743086,4.571719,2.136709,0.462209,1.551117,5.654379,-9.508801,2.034317,-3.293506,0.991137,8.115222,-7.598168,-0.170310,-3.994363,-8.773591,-3.942067,-3.088365,-1.668987,-2.297064,2.274064,-9.994694,4.978786,-6.078589,8.372280,-2.277285,5.362538,-2.943141,3.542622,-2.273610,9.399108,-9.948893,-2.343639,0.659057,-4.806057,-9.879441,8.472176,-2.266136,9.164095,-4.298119,3.907156,-6.262270,-8.589367,1.346917,3.947543,7.302485,-6.665746,-5.865469,-2.069673,-6.985326,2.723036,-4.475963,0.354448,-0.594122,7.551460,5.326658,6.182985,-6.986443,-3.686767,0.080403,2.807178,-6.903038,-9.573750,-0.637515,7.199616,-3.282795,9.555146,6.839098,0.356847,-7.213374,-6.083082,-4.014869,1.129153,3.229611,-9.103129,8.340922,8.509696,6.153568,0.435732,-3.629281,-4.758382,3.851363,7.347090,-3.789330,-9.863567,-0.827243,6.478253,-5.855884,5.684098,-6.727912,-5.099435,2.331655,-5.085100,-9.072465,-0.323494,-0.231017,3.104106,-0.617059,-5.719745,9.958324,2.973551,-4.997051,-0.384129,5.133130,-2.385400,1.641663,-3.781993,5.835558,-3.491030,-1.975102,-0.080430,0.510029,-5.693781,0.187177,0.707657,-8.459028,-6.091752,8.058168,1.270852,-7.924180,-4.311097,2.652574,-2.888842,9.751499,-7.025356,6.102138,-4.223556,-2.784373,-7.244230,-7.201879,-6.818114,1.925397,9.359316,-7.352766,2.105166,-0.993073,-5.373415,-3.677435,-8.061553,1.273617,1.176430,-4.472873,-7.302122,1.214124,-2.399677,-3.377057,-0.060302,1.860308,-1.831786,-1.559208,-2.816856,9.979339,-8.200766,6.733610,-1.908956,4.212390,5.835106,5.014618,-6.712746,-9.032670,-7.386604,-5.453444,-6.819337,-4.946786,0.039104,0.216580,-3.459189,-4.792317,-5.350055,7.817080,7.602347,0.502796,-4.552232,-9.923164,6.197459,9.216633,7.213524,-0.548357,9.491680,-7.987450,2.492582,-6.793892,-1.405740,0.894695,-3.625299,9.710873,3.046212,-0.128670,-8.690479,6.839378,-2.529265,8.674691,-1.415186,9.779018,3.618980,-4.265177,8.244132,-1.044935,8.540429,2.180839,-9.542602,4.508085,4.721049,-7.752047,-2.317098,4.985294,-8.205619,-5.036271,-5.095508,4.849886,0.268999,-6.785672,-4.131896,4.115038,-8.215799,-8.572115,3.529555,5.716414,5.353095,-4.912954,4.170955,-9.722391,4.175643,-8.371819,5.574473,3.248781,4.366254,3.819721,-2.204730,0.319297,3.377622,5.512131,-5.972594,2.953848,-8.826006,5.257923,5.678318,-7.736172,7.504037,-0.074785,-8.248465,6.058959,-8.158006,0.579738,4.891448,4.675285,-7.058833,-1.737893,0.996043,1.797694,5.731776,9.317510,-7.514636,5.014945,-1.951595,-0.691045,9.063120,-7.176056,9.576266,-1.360508,6.505281,1.956200,2.344869,-8.739920,-6.531315,-7.945413,-0.271716,-6.192767,3.902521,-5.819673,-5.560720,-9.781281,9.357024,8.757470,7.190000,3.584605,6.214921,-7.255719,-6.115884,-1.327298,-1.890761,6.702644,-8.848474,-8.275119,5.579298,-1.680146,7.312899,-9.584399,2.707121,6.456575,0.927790,8.116866,-7.580782,7.259883,-8.336773,4.110407,6.862264,-4.617856,-9.198969,4.684169,8.504522,2.477964,0.438530,6.199248,9.804082,3.757716,-7.660029,-3.689432,-9.266910,8.744752,7.012098,-1.956658,0.307356,-3.543796,2.337458,-0.389276,7.828250,3.819275,5.886644,-7.017958,-3.816192,6.253518,-1.168164,4.444941,-6.784199,-3.921777,6.536312,-5.232143,3.170234,-9.995683,-9.088927,1.496659,6.573225,-4.517089,-6.423697,5.007604,-6.002540,0.185651,-1.820015,-6.763481,1.776904,-3.114598,8.394805,-2.021437,-7.812863,4.488420,7.065810,-4.910523,8.588428,8.638046,5.468830,-6.837163,7.784630,8.408117,-4.063768,-1.145021,-6.904418,-9.273908,9.257547,-2.647927,-5.815468,6.409063,-3.677995,-8.936399,-4.359165,4.617706,-9.187690,-0.834048,5.580111,-9.796303,2.304457,-6.459690,5.613945,7.177897,4.806944,-1.983710,9.672082,1.716509,-9.110346,3.105629,9.328027,-8.236081,2.355163,6.303579,-3.498914,-0.228346,5.145713,1.113266,-0.732438,9.078185,-7.554065,5.289374,4.315287,-6.420318,-0.626249,5.409774,-8.652909,6.560924,-2.237356,7.673882,-0.802791,-3.158423,-8.911106,8.236584,-1.835881,-3.472771,-6.173424,-6.159318,-0.246086,8.498994,-9.017240,-0.158762,0.988430,-3.323240,-5.473117,-9.138402,-2.320113,-7.199051,5.515141,5.941445,2.078683,-5.699234,4.527573,2.331968,8.943566,-4.609204,5.362489,2.553705,-0.280040,-3.728067,5.690582,-0.609680,8.249338,-2.174475,-5.067105,-2.137856,7.840004,8.554302,0.592713,-2.952665,-9.513272,8.490225,9.400271,-9.798150,-0.339529,-8.237138,0.234601,5.543715,-1.483402,7.672555,3.402139,-3.094026,3.473304,8.951778,-0.044898,8.672329,-4.382646,0.911282,1.497993,-6.175914,-6.844215,8.671760,8.608786,5.401440,-8.018961,-3.561689,-1.149300,-0.928775,-0.169846,2.015800,8.483695,8.092333,4.803780,3.619757,-6.199466,-7.611562,0.074612,0.033813,0.058076,-2.964739,7.810241,5.185627,4.906552,1.090732,-4.194637,-9.095506,-3.155389,8.430952,-5.142965,-8.657899,-5.059635,-2.510274,2.848564,-0.521468,-6.319333,-4.793934,2.760942,2.265405,-2.576536,9.219864,2.668908,-7.784724,6.459483,0.225962,1.789000,0.861627,1.537066,0.227376,5.180833,6.837256,-1.834744,6.597886,0.277592,-0.891084,-0.300047,-9.067527,2.261438,2.276138,3.388615,8.461797,-3.737854,-5.540098,-7.345256,-9.502819,-6.774173,6.514968,-0.463650,-3.270116,1.420264,7.390451,-0.387106,-2.128646,-9.672409,3.408435,-6.701737,-2.299088,0.755720,-6.309926,-3.992802,9.733593,-0.252191,6.170151,0.742060,8.367136,-3.705221,-8.211947,-3.138390,4.323452,-2.739789,-2.836193,2.941831,-4.212221,-1.022464,-3.658934,1.416631,9.873974,-6.219932,-2.465178,-7.414311,-0.863104,-9.080214,-6.122025,2.355149,-5.437588,-6.755503,4.566843,5.949060,-3.541604,-8.179706,1.668829,-3.378131,-3.826718,9.798026,-9.628386,-0.481488,8.468641,-5.323041,6.693091,2.550539,0.870366,4.130865,5.489914,-3.718877,-6.303344,-2.700772,3.450286,-5.291867,8.521917,-1.652591,4.013399,-0.320121,-8.055725,-1.768805,6.118790,9.416312,6.386794,6.976087,7.367861,-6.372453,-4.873845,9.475524,1.105333,0.454038,-9.687265,6.427647,-7.535183,-2.743632,-8.030475,6.539793,-8.082269,-3.928263,5.135790,-7.769658,-1.098675,-7.664509,0.311682,-1.782562,2.099249,2.440827,4.615340,8.668878,-2.398313,-2.611972,9.147962,-5.533285,-6.799320,0.622031,-5.512409,0.681161,3.847636,-4.009483,7.407813,8.506352,-2.776335,-5.921867,6.054612,-7.662144,9.044249,-0.998307,-5.805910,-8.012738,-4.424202,-1.456172,2.970916,7.243525,2.937389,4.747208,-7.024336,0.201252,1.066721,-2.917198,3.089211,3.380960,-0.140364,8.297160,-1.854852,3.314489,-9.197687,-7.832631,8.711658,-6.980652,5.167588,-8.557309,-7.160479,-6.745887,7.643637,1.861006,6.690807,-7.724341,-0.667360,-8.202335,2.772642,1.025351,1.264441,-5.657492,5.344264,4.870415,-6.764198,-3.295542,5.713442,9.308350,-3.434972,-6.135781,9.062960,4.052218,-1.407434,-0.788927,9.247402,1.716031,2.041204,-0.868474,-1.063481,3.983433,5.394767,-1.488978,1.997480,0.740539,-0.184919,4.954852,-6.986179,7.033122,1.783809,9.800619,-0.644499,6.376103,-5.442285,-3.691471,-3.209732,8.190720,-8.441731,-3.695356,1.332400,8.132624,1.513285,9.529253,2.981804,0.602789,0.699426,2.556094,9.254569,4.932369,-0.787025,8.797089,-1.472332,-2.748301,-6.786955,-9.749088,9.000542,0.869277,-6.681263,-6.988015,2.753653,-2.785398,-6.401783,-3.995985,4.143407,4.296271,-1.640331,-7.027325,-1.326872,1.163493,6.890698,-3.424862,8.131524,-8.205251,1.588876,1.173001,-3.790303,5.680661,5.987143,-3.163921,4.126194,3.102804,-9.441432,-8.293738,-5.736600,8.313314,9.230396,-8.394767,6.636038,5.685399,-2.727240,-4.543752,-9.568750,8.639932,2.568020,-7.135463,-4.039733,-6.487156,6.008059,0.137678,-8.892038,-2.988430,-8.100420,-2.559849,7.267755,-0.555556,-4.315835,-9.359842,-8.753534,8.359891,3.506883,6.407438,9.857584,2.241659,-2.892739,-6.747343,5.114237,9.716335,-2.508262,-9.351607,0.810229,4.447014,9.242236,-2.677054,1.673909,7.243388,-8.396712,-2.902406,1.661668,-3.951022,-5.377439,-0.147622,0.805138,-2.615809,-3.518087,2.874652,7.531792,9.594674,-2.178830,4.625875,1.209331,8.591477,6.077537,9.748860,2.020122,-9.248698,4.859753,6.175446,-2.255882,-0.305466,-8.346313,-8.912903,-9.927540,-5.899026,-6.626918,-4.265517,4.969311,3.286681,-2.046555,7.416501,-5.835353,2.273352,-9.976654,9.896958,-4.623388,8.390229,9.351102,8.111509,-4.192393,6.737735,2.564809,-9.925890,1.910782,3.883931,4.399085,5.495712,-2.384584,7.703664,5.102311,-0.637484,-7.109191,3.289909,6.131458,6.790071,-9.405510,-4.826377,-6.396626,-3.985968,-4.353220,6.127731,-7.782928,-5.385042,-5.588445,-6.162273,-8.938172,1.241637,-5.375593,-9.712628,1.721742,6.775385,-7.071951,5.872376,3.272524,-5.158551,7.686680,4.114209,-2.428801,8.198430,1.062022,2.719086,-1.602004,-3.527184,4.472340,-9.582368,-3.508179,-7.221253,-3.577237,9.492259,-3.546777,5.051774,-2.204583,1.072966,-5.367831,5.638460,-0.868105,1.593663,4.660450,-2.588064,5.361042,-1.069767,-0.234739,-3.114122,-6.209857,-9.634171,-0.428441,9.441658,-1.621235,4.219882,5.652918,-8.764353,7.153987,-5.613522,7.890926,0.179794,0.658424,-9.734660,1.827398,-7.864829,9.764412,-0.659160,9.376495,-6.305133,-6.293468,-3.146773,-8.450172,-9.135986,0.955285,-5.037518,1.179930,3.100700,2.351889,-8.622402,-1.182376,5.694737,-0.258127,3.456757,6.101995,1.821180,-5.572352,6.828530,2.344025,-1.951544,-8.674344,5.909259,4.153474,-8.783844,9.722736,2.419697,-1.125595,2.881408,-0.444111,-6.603501,-3.403860,8.426667,9.968954,0.733250,-0.804900,9.863846,-2.426566,-7.443376,3.722139,7.361686,-4.045874,1.457512,9.117357,6.631907,6.465965,9.961797,9.100606,-7.781931,3.631960,4.757920,-3.224099,-3.343273,-0.626155,-5.843928,3.981247,-1.721566,-4.914352,-3.855686,-2.641319,5.401142,9.465280,7.349976,1.880163,-9.747552,6.937869,7.342927,-7.063713,-4.713508,-8.575959,4.487964,-5.596882,7.633035,5.073217,-5.855036,1.189173,3.847707,-1.612644,-1.648111,2.380386,-4.416943,-9.800197,-1.771672,8.964834,1.665822,0.022342,-6.108332,-6.735019,-6.291300,1.420377,1.032514,-7.733221,-7.022798,4.412931,-5.257264,5.296723,8.939978,-7.196073,-2.334458,0.134528,-3.508676,-7.630501,-8.481473,-8.819325,-0.533465,-9.768046,9.019114,2.826355,3.603388,-7.131920,7.014252,8.836244,0.811263,-9.538738,3.157597,-5.970946,-7.492405,-9.887020,1.506346,9.164397,8.900063,-3.306853,-8.803253,-8.025658,-3.021074,6.933376,-5.818902,0.839485,3.049458,5.811812,0.684236,-5.579764,1.526161,-0.436070,6.245449,-7.241606,6.025285,0.931175,-3.512810,-8.039210,-6.931752,-8.436554,-7.316931,9.412155,3.003683,-5.765714,-2.950665,-6.471513,-2.177598,-5.088305,-5.783223,-2.267608,1.441336,8.006179,9.416420,7.686188,-1.877383,-6.794865,2.178395,-9.849089,-1.357831,2.722102,2.357001,-1.615989,-1.151184,9.922965,-7.225399,6.590012,-2.858521,8.073268,-4.045424,7.735926,7.635364,9.527857,7.540296,7.685932,-6.735962,-0.880924,5.775084,8.521341,-1.082702,-4.414566,-2.973236,-6.110460,3.526051,-7.650741,-5.352784,-8.931690,2.358537,-6.618783,1.549871,8.268841,-1.465098,1.279873,-6.696396,-8.524238,2.901489,3.391946,-4.802050,-0.162861,-8.249702,0.749733,1.522543,-1.227837,0.131530,0.023597,-4.451211,-7.892132,9.954370,-0.740242,1.003330,-2.022493,-9.317118,-5.276271,7.548457,-2.350707,-9.328432,8.755722,2.132503,-4.203903,-1.547109,4.946688,-8.069871,-9.399424,0.998913,-7.138360,6.377314,6.174285,-5.098236,-1.067747,8.576565,6.580956,-4.958853,5.481024,-4.842693,-4.924099,4.965243,-8.896574,3.356605,2.224124,3.351447,6.452117,-8.593615,-8.963494,7.201810,3.163473,4.134833,-3.871742,6.687377,9.562878,6.550137,-4.870030,6.621010,7.083760,3.079562,8.908274,-2.705459,9.917431,-2.150622,2.094345,-8.210346,-0.556305,-2.234028,8.778655,-1.765151,7.349864,-0.244981,-2.023449,-2.674493,4.780199,3.406937,6.102777,6.597612,-6.911972,-4.942900,7.680333,-2.153456,7.120851,-1.944657,-9.591638,6.053797,8.775249,-5.383778,-7.201553,7.146154,-6.985118,-2.785586,-0.292753,1.904348,1.237252,-1.415004,-8.461860,-5.340147,7.558471,3.132613,3.010508,-8.088869,-7.798698,0.520828,0.798189,-2.511480,3.338039,9.461774,0.622331,-2.627931,3.124086,5.879802,-0.246740,2.934545,9.567432,4.367202,2.750288,1.324450,-1.853738,-6.461134,3.231813,-2.700432,-3.824714,-0.626823,-5.483713,-4.344174,0.016359,7.432857,-4.769228,-6.234506,8.611413,-0.669126,8.541701,1.247424,-5.294797,6.362731,-4.707361,-6.359286,-9.430889,-7.058927,-2.926042,-0.203317,1.461508,0.832838,-9.807991,8.248550,5.298999,-7.752640,3.782788,4.583394,-6.277646,7.194677,-8.787122,2.198207,-3.204228,1.416778,-9.401784,-2.870451,5.111365,5.953599,6.739503,-6.709759,8.351933,5.310989,-7.619643,-4.508463,-9.836956,5.969335,-7.410652,1.513846,6.435407,8.308785,-3.071963,9.516985,0.133689,7.988518,4.253885,2.408782,-3.231953,4.867949,9.657724,5.927262,2.002553,-0.823172,2.645232,-0.037910,-6.184681,8.472398,2.195282,0.064355,5.303212,-4.691358,-2.249456,7.291596,-6.206748,1.842310,2.817848,3.763198,7.195757,-0.542042,0.056804,6.928555,-8.637827,-8.778010,0.615230,-7.191940,-3.521339,1.199461,-5.007716,-1.136249,8.101415,0.879178,-3.123611,9.452858,-6.493282,1.646514,-7.142469,-9.756146,9.220795,0.392883,-3.963955,9.785492,-0.699457,5.708402,-3.885996,3.612058,2.302128,-7.136110,-6.190599,4.319612,3.056469,-8.240589,-6.342411,-8.886095,-5.049600,-3.049490,2.566973,2.664049,4.997258,-2.520789,-1.502889,4.215506,-2.950421,-1.680626,-8.473406,-4.165223,-7.030639,8.442640,4.030187,-8.106607,3.819342,-7.452913,-5.880884,-8.269689,-8.143961,8.789064,4.592066,-2.132743,-4.572542,-9.032865,-1.153847,-0.372651,0.053656,5.573337,0.206325,-1.337923,0.256266,3.548386,9.730681,8.423344,5.279640,-9.848951,3.221173,-4.222968,1.998217,-0.118173,5.100076,-8.483427,0.752420,9.728536,7.560671,6.878668,-6.253196,4.919691,3.493271,3.997188,7.178932,3.131375,-5.227444,3.951069,-2.410463,-7.916461,-4.122358,-9.523169,-7.370487,7.199671,-9.791077,-3.030985,0.945628,-2.193956,-0.703952,3.447555,3.899845,8.047838,2.758769,-2.350087,-1.996099,7.926503,5.601578,-3.386615,-2.436319,-1.327681,0.257892,1.438483,-8.676085,6.876344,-1.282031,-1.453462,6.561501,6.773497,-3.589482,-2.514994,-9.894701,-1.214187,6.196742,-6.094936,-8.362188,-1.053440,7.667457,-4.828305,2.802043,5.515616,3.526994,-0.152326,6.651399,2.644404,2.695303,-6.132972,8.723086,2.683686,-0.828109,-8.677504,-4.400401,-0.190030,1.845757,7.718152,-2.199089,-1.512626,9.237326,-3.037222,-6.432075,-8.294807,7.511746,-9.806228,3.544171,5.630776,5.968386,-3.935441,9.737421,6.128185,-0.212488,4.116262,9.293403,-5.178705,-5.939963,7.986194,-9.200995,-4.294181,7.422734,-2.741724,0.063257,-8.413342,-8.103463,-6.299797,6.383220,-4.534846,2.173331,-5.961932,4.848873,1.702030,9.528209,-0.368577,-3.697205,9.443664,2.013090,6.381756,7.780636,7.712303,-2.050943,2.656179,-0.078780,7.585253,-7.832988,-9.608242,-9.176894,4.208428,4.431126,7.544345,8.924419,5.351510,4.726068,5.518382,-9.020413,-5.530870,-6.500289,-8.928489,4.391773,-4.550241,3.769404,3.959701,-2.793359,9.209108,-1.014568,-7.479217,0.973467,4.456329,-4.633735,4.574543,2.245280,9.128030,-9.182245,-9.826300,-8.713024,1.439786,-7.007378,9.221138,7.466489,-9.497924,-0.166612,1.769205,-6.027889,-9.248715,7.964222,5.431631,1.253636,6.320388,-4.570358,6.406036,-8.201290,-3.530060,9.006032,-3.478078,-2.680940,-6.136724,9.022256,-0.102999,-1.887929,-1.145021,-2.656468,6.808629,-3.678170,6.157668,-8.023862,4.756130,9.903805,2.359264,-4.943283,-9.256153,-8.240104,4.040563,-7.236592,9.413126,-9.421907,7.216369,0.193313,-1.484463,0.747809,-9.235163,-4.778135,-7.051638,9.426056,-8.515999,5.015627,-5.162486,0.538155,8.640732,5.641790,5.150104,-8.714850,5.424400,2.798350,-1.414483,7.841395,-9.596429,-8.061540,-9.735564,9.969738,2.171755,3.951273,-3.699401,2.284096,-2.726765,5.435386,-9.726673,-6.636021,7.220771,1.825171,-6.855343,5.507999,-4.813571,-6.686173,4.564152,9.124652,-5.756021,3.029138,-2.429561,6.509616,5.672806,-7.748715,-2.973885,7.481980,-2.124831,1.838918,-8.815173,2.453528,2.601006,6.206922,0.582440,6.710979,3.264625,6.334034,-8.337076,-3.212803,8.084582,9.391981,-4.775737,5.973502,-6.185933,8.810488,6.929039,7.663243,-5.470444,-4.078062,-4.465902,-3.930293,-2.247739,7.328471,-9.590707,-6.903422,-4.994087,4.278744,2.873627,8.611038,-7.204103,-6.481944,8.308167,-6.579956,-6.525709,-4.171621,-6.622685,-8.902798,-9.275070,1.713562,4.721873,-1.370225,-8.187607,-2.430611,-6.705383,7.166200,9.876935,0.875279,6.748903,-7.744526,-6.243322,-8.978181,3.286278,4.181160,-9.523149,-0.520130,-3.973540,5.600123,1.331447,-0.452568,7.357641,-2.788162,3.576068,-5.113542,2.985314,-3.404822,5.843781,-9.304942,6.148440,-2.749834,0.972816,-6.036965,2.467444,-4.358124,6.897015,-4.320320,-9.408725,2.250610,-3.530947,-3.157495,0.940828,0.726973,-1.558901,9.608443,5.482244,1.781198,3.963265,7.911405,-1.003966,7.644732,-2.221612,-3.537481,-5.907783,1.788462,9.503038,-2.792474,-6.752003,1.032799,8.955961,1.146747,-9.741972,8.099099,-0.650218,-7.850252,-2.825536,-5.511279,-0.880935,2.176007,6.180170,4.083220,9.531138,3.137600,-6.705900,-2.902324,3.813145,-9.698350,-1.341116,4.405021,-4.631509,2.032576,6.714053,-0.600851,8.363501,-6.220849,-4.652038,8.184195,1.146994,7.981446,-2.782277,-7.368381,0.370134,1.677624,-1.163208,-2.466893,0.177429,-9.053195,-4.029539,-4.528216,-7.034513,-5.778919,-1.046344,-7.191841,-4.716481,5.508877,5.674928,-3.268286,8.936302,4.765353,6.014251,-4.994199,5.871567,0.306316,1.580676,9.990976,1.666880,-8.093395,-7.926997,7.877651,3.564506,7.788194,-8.189737,9.577388,2.323410,-5.394725,1.020733,0.676844,6.328223,-9.579148,-6.574913,-6.084219,2.199392,-2.224660,-5.172313,-9.546313,-1.071955,-6.705496,8.872220,-0.089116,-6.811904,9.256227,-1.793155,4.663237,-0.198738,-6.259197,6.245849,-3.762076,-3.322133,-2.502038,-0.078227,-8.839631,-4.698687,-6.945037,-3.115461,7.061377,5.781738,-7.249587,9.925385,4.989693,1.476515,4.201413,-5.688426,2.029482,-6.106025,4.007991,-0.511497,9.731436,7.499245,4.099127,3.599883,-2.039396,2.035153,-3.249585,-8.913271,-6.205636,6.738686,4.378839,8.862754,-3.280579,-9.081013,2.632116,9.664384,-8.432461,-0.790865,8.760604,-8.959332,-4.808651,-4.783110,-5.742937,-3.063592,7.775765,-2.939614,5.298534,1.373989,0.240469,-4.270852,8.110316,-6.982220,-9.556636,7.627839,-3.834619,9.172250,2.099066,7.113908,5.587893,9.188385,9.997293,0.351614,1.227717,0.831119,-9.025024,9.813273,5.435682,6.517505,-8.340040,0.446340,-9.562483,9.946378,8.228090], dtype = "float64")#candidate|5340|(2925,)|const|float64
call_5339 = func_1091_call(relay.reshape(const_5340.astype('float64'), [15, 13, 15]))
call_5341 = func_1091_call(relay.reshape(const_5340.astype('float64'), [15, 13, 15]))
output = relay.Tuple([call_5330,call_5339,const_5340,])
output2 = relay.Tuple([call_5331,call_5341,const_5340,])
func_5342 = relay.Function([], output)
mod['func_5342'] = func_5342
mod = relay.transform.InferType()(mod)
output = func_5342()
func_5343 = relay.Function([], output)
mutated_mod['func_5343'] = func_5343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_5406 = func_4854_call()
call_5407 = func_4854_call()
uop_5408 = relay.log2(call_5406.astype('float32')) # shape=(12, 9, 15)
uop_5410 = relay.log2(call_5407.astype('float32')) # shape=(12, 9, 15)
output = uop_5408
output2 = uop_5410
func_5416 = relay.Function([], output)
mod['func_5416'] = func_5416
mod = relay.transform.InferType()(mod)
mutated_mod['func_5416'] = func_5416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5416_call = mutated_mod.get_global_var('func_5416')
call_5417 = func_5416_call()
output = call_5417
func_5418 = relay.Function([], output)
mutated_mod['func_5418'] = func_5418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mod.get_global_var('func_4808')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_5431 = func_4808_call()
call_5432 = func_4808_call()
output = call_5431
output2 = call_5432
func_5443 = relay.Function([], output)
mod['func_5443'] = func_5443
mod = relay.transform.InferType()(mod)
output = func_5443()
func_5444 = relay.Function([], output)
mutated_mod['func_5444'] = func_5444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_5478 = relay.TupleGetItem(func_4625_call(), 3)
call_5479 = relay.TupleGetItem(func_4626_call(), 3)
func_5443_call = mod.get_global_var('func_5443')
func_5444_call = mutated_mod.get_global_var('func_5444')
call_5482 = func_5443_call()
call_5483 = func_5443_call()
func_4525_call = mod.get_global_var('func_4525')
func_4528_call = mutated_mod.get_global_var('func_4528')
const_5489 = relay.const([False,False,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True], dtype = "bool")#candidate|5489|(675,)|const|bool
call_5488 = relay.TupleGetItem(func_4525_call(relay.reshape(const_5489.astype('bool'), [15, 9, 5]), relay.reshape(const_5489.astype('bool'), [15, 9, 5]), ), 2)
call_5490 = relay.TupleGetItem(func_4528_call(relay.reshape(const_5489.astype('bool'), [15, 9, 5]), relay.reshape(const_5489.astype('bool'), [15, 9, 5]), ), 2)
func_4907_call = mod.get_global_var('func_4907')
func_4908_call = mutated_mod.get_global_var('func_4908')
call_5502 = func_4907_call()
call_5503 = func_4907_call()
output = relay.Tuple([call_5478,call_5482,call_5488,const_5489,call_5502,])
output2 = relay.Tuple([call_5479,call_5483,call_5490,const_5489,call_5503,])
func_5506 = relay.Function([], output)
mod['func_5506'] = func_5506
mod = relay.transform.InferType()(mod)
mutated_mod['func_5506'] = func_5506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5506_call = mutated_mod.get_global_var('func_5506')
call_5507 = func_5506_call()
output = call_5507
func_5508 = relay.Function([], output)
mutated_mod['func_5508'] = func_5508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_5509 = func_4488_call()
call_5510 = func_4488_call()
func_1091_call = mod.get_global_var('func_1091')
func_1094_call = mutated_mod.get_global_var('func_1094')
const_5530 = relay.const([[2.632051,-5.101082,7.825144,4.794796,-1.692519,1.314129,1.943278,-4.948087,-6.870568,-7.919756,-5.365592,1.006838,8.556310,1.504703,-5.282147,-7.488222,-3.597223,-8.043037,-3.597722,-9.451487,-7.719893,0.921706,2.375307,4.990461,3.328909,0.526693,-9.971863,4.334001,5.577277,0.071070,9.417446,-1.105410,-2.865395,-6.927320,-1.911017,5.635681,-9.367024,-4.742916,6.101815,-9.242258,9.889244,-8.749676,-3.230605,0.055481,6.200718,-1.227465,0.020775,-6.218101,6.079438,-1.436329,-0.982783,-9.771646,-2.877099,-8.146820,-0.012729,-2.022551,-7.677949,4.352434,2.855215,-3.179884,3.142102,4.787277,1.297410,4.538122,-0.824283,-3.209811,9.047566,-0.720708,0.061975,2.903476,1.958904,3.661597,4.661514,-4.403554,-6.548910,0.421644,2.569965,-6.365621,-1.559589,1.074855,9.177193,2.770988,-2.637906,-3.427134,-5.246932,1.250443,-8.426140,3.288547,5.624133,-6.943372,3.058003,-1.156199,-3.134935,5.101106,-4.407668,-7.372540,5.387079,-2.293260,0.368193,7.808879,0.558966,3.461197,-7.720906,6.914492,-3.754274,6.498143,6.825843,5.510870,-8.228632,-1.697519,5.923185,-8.731550,4.364132,4.183332,0.945119,-4.578330,9.183743,-7.365011,4.759750,-7.323808,5.844613,3.008151,5.582632,1.782653,2.471610,-2.265256,-1.726645,5.749107,2.554247,-0.551758,-6.547988,3.628687,-3.833207,0.801746,1.351100,5.335549,5.089037,2.017555,1.495238,-3.268716,4.216549,-2.462845,8.427999,2.928029,-5.943510,7.266026,-0.910130,-8.181158,5.882824,-8.341331,0.313654,2.465490,-0.045070,0.843657,4.352129,1.547616,-5.880517,-4.265772,0.361045,4.432161,1.461327,-6.483932,7.321483,-7.225255,-8.151600,-6.894978,3.020430,-4.279331,-7.745754,4.817743,7.567743,-9.014692,-4.914132,7.952950,-5.637737,8.467781,-3.386943,-3.784289,7.394435,-3.264799,3.238707,9.723639,-0.956255,7.081201,-1.811455,3.218250,7.055746,0.753472,-0.616653,6.987957,4.356819,9.356637,1.293804,-3.287678,-3.939326],[-2.150587,0.810014,-7.777690,-1.651539,-9.109259,0.575127,-5.735057,-4.888806,-7.627782,5.568848,5.950070,1.048529,-8.518009,-2.375468,3.962235,8.211169,0.859089,4.658666,-0.613642,6.971810,-5.919542,-6.178873,2.908539,5.359254,-1.362548,2.395976,7.094784,-5.196058,5.235276,-9.772734,6.325932,5.045221,-8.113546,2.390775,-3.614771,-4.959825,6.377016,6.074751,7.832021,-0.847307,5.147746,5.818563,-9.126298,-0.339000,7.759703,-7.483626,-2.001623,3.906543,9.501904,-7.333719,6.736446,-9.145670,8.417367,6.163203,-4.568773,-8.746703,6.239615,4.954817,7.208482,-9.483934,-9.717675,-3.916112,-5.178918,-1.507337,-8.669099,9.475544,1.600134,-8.862255,1.564002,6.093272,4.337626,-7.482566,2.519401,8.272706,3.458373,0.174327,-0.570012,7.889219,3.075057,-5.920378,-8.987674,4.591289,-8.793506,-0.785995,1.096193,2.083928,-4.559566,-2.844867,2.725272,-1.175105,6.513165,1.505392,8.225779,-8.475041,-8.229640,-5.433325,-1.228308,-6.974782,5.104195,-9.593373,-5.180128,-5.027638,9.630141,-0.846226,-3.067109,-6.457022,8.512903,1.363518,-6.763769,5.811281,6.415810,9.286077,-4.473072,-1.326226,-3.290825,-5.265082,-6.554677,9.148773,4.231281,3.590930,7.006218,3.037467,1.289624,7.816945,-1.178837,-2.460378,6.216939,2.327808,3.414603,3.128068,3.883825,-0.198632,-3.769335,4.531902,8.183496,3.849064,-7.522001,4.422605,-4.617855,0.955532,-4.997130,-7.846666,0.717520,4.079791,4.255493,4.694877,-6.806107,-2.551328,0.586286,7.999391,-4.841649,1.311455,9.587572,-1.256684,-7.027166,1.445657,6.085244,-3.904529,3.914815,3.167989,-0.448223,8.296772,-6.382288,-2.297175,-9.197378,6.419139,-1.734453,7.054424,7.317599,5.913510,-2.420336,-2.475920,-0.423132,-8.487134,-2.317929,-9.650019,-0.448426,-6.496824,-3.110612,8.710222,-1.328644,6.842627,6.779019,-3.497702,7.838857,-1.739805,-3.293513,4.304219,4.260371,3.773074,-6.122084,4.401032,5.693812,1.783391,-9.522164],[-0.626156,2.034603,9.316469,6.244636,-6.221503,-4.703456,-1.279399,5.561978,7.041744,1.121499,9.083849,6.008939,8.514748,-4.247590,-9.604043,7.821324,4.792519,-0.170828,3.105650,-3.528532,-2.356799,2.674544,-5.903551,5.664140,1.136962,-3.319031,-5.234353,5.479713,-2.166647,-3.661267,-6.305518,-7.018205,4.862207,4.837102,-7.163446,-0.864001,-3.980020,7.924285,-5.969989,-4.123705,1.335250,-2.209856,-9.614915,3.873536,1.677418,7.186519,5.129537,2.907579,9.046665,-1.338597,4.093265,-8.767520,-4.272663,-7.807244,-1.512793,-7.413814,5.216658,0.084887,6.319446,-7.830832,2.301159,-4.431446,1.893389,5.719194,-4.593766,-6.951259,-3.955733,4.360005,-5.795553,3.389267,5.228274,9.263088,1.491049,-4.597600,8.125783,0.707772,5.867029,-9.065735,-3.909986,8.794362,9.566307,-1.419102,-5.545760,-9.936863,6.979832,-8.281082,3.675972,1.517524,-8.373266,2.560664,-0.424680,-3.344147,4.456077,7.140483,-0.754421,-9.592274,-7.989865,9.908819,7.469553,-8.760026,-7.009333,9.948537,-0.582451,-4.948856,-9.505399,-4.294060,-2.307570,-4.486841,2.386143,8.165343,-7.567213,5.695094,-3.519119,-9.988669,-2.369237,-3.550116,2.410493,0.247046,-2.910621,-1.687288,5.270017,-9.425849,-1.491329,5.302320,-3.789905,1.667553,0.543231,7.828861,-6.811749,0.028888,-3.530598,7.923546,8.886175,0.332001,-8.999388,-4.964582,5.228557,8.250720,-4.502942,3.349023,-3.386960,9.992566,-1.157258,4.355054,-1.310854,2.122866,4.777840,-3.763151,1.372865,-5.137726,-2.178401,-5.072171,4.335432,2.508547,-4.691864,-2.690167,3.390900,-9.657908,6.007092,-3.305197,-3.692044,-6.102551,-3.511117,-4.838212,1.300617,7.005305,-6.148600,7.293833,-9.433493,4.475131,9.832506,8.582194,9.650730,-8.952985,8.581251,5.425506,6.783913,8.539775,-6.236528,0.465213,6.861289,1.613478,-5.278582,7.919228,3.281161,-8.841954,1.086346,-5.363654,8.640929,2.720634,3.870732,6.015077,-9.319405,3.629311,-4.397488],[-8.836268,5.374991,1.965198,-7.433705,-9.387817,0.468454,7.587793,-1.040275,-7.642106,-8.626856,6.958440,-0.867524,-1.394934,8.250411,5.614284,2.858525,6.623564,-1.709520,-5.452271,-5.792996,-5.418330,6.875902,-2.987313,6.437364,-4.024592,-7.239763,-5.576008,-0.864659,7.415347,-7.747698,9.421295,8.242941,-0.962377,-8.754587,-9.168179,-2.252060,-0.059631,-5.721301,7.466633,3.528816,-9.473983,6.682389,-4.423514,3.532494,-5.821118,2.266302,3.479742,-9.403951,-2.743550,3.833728,5.962418,4.697351,5.176020,-1.487408,-6.613026,-4.639402,4.589736,0.014937,7.475371,-7.321016,-1.705830,-3.987674,-5.994140,9.662193,3.019272,7.439958,-7.777823,-4.884152,4.651819,0.795073,1.971289,-4.180338,9.418718,-2.562169,-3.995626,-0.678946,-7.194690,6.157337,-9.739715,8.783532,0.061870,-6.196584,-2.351329,4.038354,-6.268077,1.023646,6.481799,-7.844707,2.160145,1.984615,8.607241,-5.821440,-1.515614,-8.439634,-7.263442,-7.858958,2.116984,-9.464539,-7.870797,2.517865,-0.882728,-4.285953,-5.448865,-8.431013,3.107115,8.783002,-0.369246,2.899539,9.513208,5.169208,6.165872,4.599430,-9.223809,-1.662405,-9.488887,0.765765,-2.740314,-7.914728,4.510205,-7.350221,-2.177814,3.461607,0.159485,-2.568539,1.239683,2.293602,9.870381,6.843727,-8.053169,-5.400416,7.933618,9.719802,4.268645,-1.784185,-9.778975,-5.589569,-0.377476,7.378910,-9.538139,1.285219,0.702209,-2.577922,3.492992,0.187042,-5.263725,-1.308296,3.222051,6.508886,2.064715,8.885113,6.959654,6.912328,-6.176107,8.001559,-3.566081,-7.681734,1.953652,-1.470994,-1.470433,-3.885086,-5.468205,-5.422318,-0.453316,-0.247386,6.336595,-1.244867,2.082108,-6.144179,-1.015133,-9.038813,-1.514467,5.809291,-6.855628,4.614214,2.866304,2.027567,-4.992933,1.595845,3.393960,8.398788,-4.264429,9.755449,7.540787,5.702163,-0.386080,-2.594561,-1.879217,-9.636752,2.695876,4.241005,-0.821213,-4.969004,-5.304513,9.527491,-7.231314],[-0.085639,-2.767812,-1.694214,3.932776,-8.946614,-2.469730,4.860221,-3.092394,4.655281,0.102029,-1.058251,9.728978,-6.141570,-2.672000,3.370413,-3.853651,3.236437,-2.053409,-4.830211,3.053997,2.343252,3.939889,-1.109385,-6.068084,-2.829005,-7.484366,7.169469,0.115264,1.574646,-1.427870,-8.336538,-3.043343,7.396864,-1.519849,1.522858,-5.546464,7.940820,1.240455,8.861095,6.402135,2.392335,-5.252188,0.201442,-9.023268,-6.959605,9.081610,-1.662193,-8.331208,-6.535811,6.828370,7.968472,-7.311563,-4.522365,-2.701618,-9.383311,8.254779,-9.649875,-3.208607,5.184354,-0.151648,8.388732,2.710065,-8.161724,-0.292488,-2.687770,-2.298189,2.085244,-4.714420,-8.289929,-9.527005,-1.697504,-8.909215,4.368145,-0.796474,1.003450,-4.653682,-0.129414,-8.100258,-1.745519,-4.715707,9.961645,-7.361958,4.886908,-7.282164,8.683870,-8.702317,-6.919891,-1.110186,-0.913037,-3.552801,-8.735330,-9.520687,-5.975654,9.720011,3.177203,4.253680,-6.575840,-6.273261,-0.448703,5.986939,7.983585,1.404454,-7.379903,1.296843,-2.241058,-2.507180,6.002895,-4.307812,-9.839215,-8.255822,9.811291,-0.472015,7.627698,9.337280,8.932091,3.061926,7.016377,-2.654960,9.008297,-7.115281,0.126026,-3.687368,2.036299,7.431125,-0.737996,-2.413502,0.647226,2.903862,6.627227,1.150543,6.014337,9.480328,8.459478,-2.930104,9.949882,3.423442,3.725708,4.767090,-7.380626,-8.489028,-2.761358,-2.267371,6.781289,-1.430579,-8.971044,8.057652,7.338403,-4.944532,-5.976596,1.041603,0.077419,3.870068,-5.713887,-5.211907,6.203468,8.914030,0.893299,1.481501,2.716006,5.452841,2.617871,2.130318,0.907868,-7.797247,-4.510493,9.939125,-7.595837,-9.154294,-8.060314,5.391785,-3.223572,3.136356,-0.084095,-1.004142,0.925998,5.738064,9.587109,2.067921,1.300779,-1.336428,6.974881,6.564431,-8.247528,-2.897632,-6.056628,-1.364212,-4.083418,-6.978623,5.331148,-4.615421,-6.279997,9.179556,-9.037155,-8.349848,-8.673716],[0.117051,2.666834,3.044343,-4.489207,-8.014489,3.980746,0.787040,-2.546282,-0.698377,8.435335,-7.136959,9.710618,7.802905,-3.441668,9.341896,-7.815422,-2.401450,9.768292,-4.324480,0.451317,6.704063,4.486121,-8.876283,-0.848355,8.929278,0.920242,-3.905572,-8.850640,-9.102145,5.256908,8.318497,-8.567947,8.388112,-6.204665,-4.071162,-3.363757,-4.915854,-1.364229,-1.714210,-4.902192,-3.572437,9.888574,-9.053807,-7.626419,5.669194,-8.312917,-7.821371,-5.019279,-1.416152,0.217666,2.721878,-6.302531,5.644721,-5.461547,-7.197781,-9.096351,7.378621,5.842489,5.736804,-7.245479,7.381219,5.104909,-0.728186,-1.615922,-4.933233,5.433139,2.934535,-4.274445,-3.237762,-2.594168,2.699199,-8.255050,5.917382,-5.522366,7.021208,2.172402,2.084844,-6.514145,-6.835850,-0.713906,-3.995970,-9.334268,-7.377172,0.400278,-1.252493,0.050932,-9.062268,-6.925733,0.485714,-3.811137,9.832909,9.133868,-2.954302,-2.653580,-8.792047,-5.460132,-8.526879,5.203529,0.605006,-9.983740,-5.066784,6.604414,8.488157,-7.105308,-1.545639,7.733641,-3.448531,-8.963284,4.049818,-2.796446,4.726394,-7.840804,1.263667,-4.671537,-4.501804,-4.894492,-6.800056,7.321138,3.794155,-6.887428,-9.759899,-2.521255,7.750935,-8.069321,8.946255,-1.232273,3.718601,7.568660,-9.157832,9.904216,-3.631238,-5.512674,3.013258,-3.791335,0.840438,-1.261375,-1.689494,4.258975,5.328229,-4.689039,-0.202318,5.652107,-9.116242,-1.620779,2.121536,3.979990,-9.997534,-6.676900,-0.856123,-4.265073,-9.991682,7.096534,3.903254,-3.396833,-5.901581,-2.173158,6.308334,-8.319897,-2.261229,9.262660,-0.257427,3.348116,-7.827267,-3.723663,-6.542479,-2.254267,9.652586,5.297452,-1.607382,4.120455,4.990702,6.908447,-0.717927,-8.778793,9.162054,-3.586556,-8.600739,-8.790149,0.486962,3.580501,4.325540,-0.809864,-8.789743,-8.853097,6.764158,2.082821,6.810407,-5.200703,0.475099,-5.379650,-7.862273,-9.831415,-1.074236,6.090242,-5.101929],[2.768446,-0.087294,-9.349379,3.113123,-0.140094,0.138480,8.221866,-5.927043,-8.159187,-6.725317,-7.133888,5.238796,-8.088521,7.263361,2.430379,-0.195671,-0.295218,0.310242,2.426890,4.278398,7.575031,-5.312509,5.890268,-5.271172,-0.528178,-6.421474,3.975026,9.329048,8.589434,6.764912,-8.366078,4.590695,8.107236,-1.346125,6.580454,-3.076969,-1.821012,-1.986486,3.349114,1.493269,0.336154,2.329352,4.784832,-0.260526,9.235930,5.640142,-6.916945,-7.077900,4.532556,-4.486560,-2.241621,-1.193191,3.640571,-7.531079,1.878569,-1.256236,2.521474,-5.816356,4.829667,1.584716,-8.930474,-4.684722,6.882724,-5.068640,5.817071,-8.603487,6.022296,-8.186065,7.312903,-1.288465,-8.738238,4.065684,-5.324578,-0.263856,3.191201,-5.102980,0.346296,-8.198633,-3.713190,3.048934,0.341805,8.851417,-1.075210,-5.232237,0.670990,4.910505,0.680473,8.302574,-3.141227,0.611575,-8.891392,4.027218,5.292875,-8.141669,7.585591,7.229913,9.843748,1.300801,2.232313,1.175013,-1.147876,-2.985866,-4.142438,2.161002,-4.999249,-6.077291,6.055901,-0.676526,3.923382,-6.946736,-2.710254,3.778974,-9.604126,-9.371337,-0.758804,-2.737250,-1.548507,2.804189,4.871803,4.139828,1.543274,-7.460007,6.146438,4.594003,3.547238,1.393512,-4.560040,-8.632898,-4.973036,-0.425459,-8.105755,3.833986,7.844951,0.213239,-7.729254,-6.965142,-7.789048,-4.158261,5.105898,-4.297512,3.015485,4.140440,8.933589,-4.103407,-7.430224,-2.101788,-4.548321,3.905424,-2.603857,-9.458147,0.680215,8.510100,7.763522,7.224519,6.520479,4.446501,-6.172602,-2.024277,-5.484323,8.401524,3.197546,-9.182154,9.789105,-2.579955,-5.817454,-3.759322,8.470608,-0.524164,9.502429,-6.937409,8.764220,6.917323,-5.437997,0.848340,6.489564,1.520238,3.891303,-9.934175,1.767930,-6.149397,1.739748,4.429373,-7.058872,9.553631,7.410559,9.678674,1.639643,-7.272262,-2.787781,8.507478,-5.472785,2.948560,-6.800488,9.397977,-3.444279],[9.261671,-7.753890,-5.933608,-2.511740,6.742256,6.838910,6.325410,0.038364,-8.290914,8.840375,1.576703,-4.372043,6.238023,-8.776586,-8.353344,5.965181,-7.841473,-0.345164,-0.166656,-5.099175,4.740168,-4.832611,7.054150,-0.049837,-4.575168,7.950657,-8.594180,-0.239926,-3.279207,-9.314137,4.738680,-9.074128,6.676030,-8.681297,-8.156724,8.819048,9.295648,-3.788905,-2.861403,-5.131102,-4.713928,-9.145828,-7.413526,3.655412,-8.048463,3.619492,0.186923,2.997781,2.400717,-8.681763,6.679239,5.144741,-7.501647,6.451062,-9.105910,2.312296,3.055089,5.021441,-7.615756,-4.664953,-1.759531,-0.588946,4.217922,0.290039,7.125971,-9.815559,8.057665,4.159902,9.512570,-4.325938,0.900469,8.199874,-0.291291,-5.454732,9.869422,3.713458,-0.666147,1.037536,3.738692,-3.462974,-3.187743,9.396251,-2.872147,0.343158,5.431541,-0.502858,5.939905,6.118482,-9.805326,-5.426276,-7.774751,-1.638769,7.421821,0.174639,-1.330975,-4.593585,-9.398367,-0.923110,-6.403793,0.771029,-1.702482,-0.952091,6.512143,3.235943,0.640787,2.999999,0.639089,3.238035,3.570051,7.622266,-3.030358,-0.173228,-2.257837,-4.877882,4.190298,-6.573027,6.862778,1.273955,4.888052,-5.859274,7.853610,-8.323584,1.215726,1.860803,-0.674406,-6.661315,-8.535348,-0.509061,-5.695837,-0.909513,-4.814702,2.569650,3.556765,-9.350098,3.717206,-2.925201,-1.321878,5.111713,-8.260932,-2.982760,4.529595,1.868857,0.828966,-9.383744,-4.365979,7.007466,-1.325071,-8.173797,-6.530088,-1.932051,-2.572755,-1.052513,7.474243,-5.530349,-4.300289,4.988948,-0.427233,-4.571695,-1.389352,5.078837,5.210168,7.113961,1.138344,9.920893,-0.098111,2.690619,-6.768670,4.868295,7.354706,6.092330,-1.333462,2.657842,-2.032896,-7.150856,9.922909,6.315917,4.240740,-7.023263,6.815535,-0.387788,8.028687,-0.229552,8.724240,2.617772,7.667910,-6.918779,0.381358,-6.695037,4.590477,-8.859095,-1.639188,3.918213,-3.957010,-4.584121,-2.252949],[9.926927,-9.767805,9.210836,1.191222,-0.319511,-4.052801,-9.371338,0.642211,0.077277,-7.435001,3.391349,0.428308,-7.724627,-7.828203,9.458729,7.426239,-3.564638,-4.212154,0.119861,-3.653069,9.377228,-1.755119,4.372266,-8.888287,5.397363,-2.084613,-4.559678,9.533119,-5.561215,4.012108,-1.540179,-8.227420,9.332095,3.131345,6.056189,-9.535723,-7.672192,-2.327752,-0.612731,-9.059420,7.440662,-5.968316,-4.916614,-6.512626,1.932033,5.257873,-7.438406,-0.109382,-8.226418,-2.065323,-8.977889,-1.553384,-1.342232,-2.968867,-4.308370,-4.078296,4.923441,6.386750,-4.179311,-8.522083,7.535214,-1.809463,-5.145920,1.302276,-6.815884,-3.267967,5.403863,0.976023,5.647877,-0.662943,-8.137027,-5.184181,-4.433679,9.718945,2.696664,-5.242728,8.731879,8.424355,-9.427361,5.932505,-7.851754,8.311514,-8.388063,1.167359,-4.219029,4.066053,-5.357037,-3.330746,5.616158,-2.631834,-3.300073,-1.300811,4.824553,1.947578,-9.617066,-5.844892,-8.567470,-1.814187,-8.363322,-0.209849,-3.251171,7.349607,7.234073,3.213128,7.877454,-6.057994,-4.188294,-1.511840,-4.741379,1.685581,-1.262595,9.907231,2.180900,5.697599,-0.039358,-7.396877,-0.007953,1.870313,-2.917037,-7.264904,-2.985000,8.006629,6.892168,-2.721522,7.805679,0.309544,7.281640,-2.116051,-1.945265,-4.162180,0.492744,9.034549,-5.222400,-3.507564,5.643624,4.242166,5.420101,8.583710,-9.903633,-2.563669,3.826190,9.656523,-6.164661,-6.710530,7.915027,7.402039,8.743428,-1.475542,-3.429387,-2.059667,-5.153964,7.421729,-8.923640,-5.885315,8.026590,-8.446863,-5.448584,9.427631,5.987710,-9.289656,6.815448,-4.069846,-6.299734,-2.394914,5.539620,6.545361,-2.521068,1.828402,9.958215,3.195880,-1.664264,4.661204,6.221970,5.051662,-9.247691,-4.955537,-5.192309,4.760060,4.429837,1.280608,-4.271245,-1.607150,1.103455,-5.333681,-1.161233,7.977453,0.297779,3.071271,-7.807049,-5.812785,-0.147204,-9.613726,7.015047,-0.142281,7.979139],[2.517514,-7.367814,6.708195,8.195541,-2.235058,8.652498,-9.858829,-0.445516,-0.574259,-1.298111,-0.848733,3.401900,0.765637,-8.371331,4.222560,6.824006,8.864132,8.792997,-3.154171,-0.661585,-7.444614,-7.856236,4.619900,-8.910549,7.318422,-6.754975,-0.876463,-6.350992,-7.655755,6.195214,9.225556,-9.177114,-8.156881,1.982023,-6.152733,0.029430,7.092191,9.260774,-8.222839,-6.037086,-2.376201,0.531649,-4.229687,3.204803,-8.729473,0.042071,8.685079,1.136591,7.183008,-9.420125,-0.820652,-1.642741,-8.737202,-7.110752,3.490693,-5.706099,1.443592,-5.514291,-4.217582,-7.444658,-2.957479,-4.993286,1.067395,8.158161,-8.669018,-3.336156,0.926443,-1.989637,-6.846388,8.687367,-3.709277,-8.108076,8.641973,7.001128,-4.308619,9.031524,1.220708,-3.743810,3.146854,8.980805,-5.176527,-8.029061,-5.838461,1.001689,-8.756422,4.210791,-4.371567,-8.531362,-7.830521,9.185855,-5.915201,-1.615039,-5.534541,-5.967631,-7.490274,3.308878,-1.663650,3.532435,4.532282,9.502192,8.993699,-8.084218,-6.164720,9.572563,-3.112359,2.787714,7.328756,3.861927,1.846137,8.817983,1.159148,-7.638157,1.087071,3.042577,-1.024205,-4.322322,7.780487,5.389241,8.523677,-3.259300,-4.828684,-7.410530,7.902584,3.511102,-8.479164,4.316492,-6.128685,6.876987,1.984371,-5.280895,5.809380,9.239893,6.096724,2.029624,0.701842,-4.652017,7.886076,-0.743885,-2.882083,3.949186,-1.949222,1.063015,-9.381271,-3.988348,2.943867,9.276388,9.787915,6.910561,-8.922255,-0.480457,-9.606867,5.562718,6.623798,4.549778,4.609130,-4.590012,5.327839,-5.385329,-1.898394,6.662318,8.373377,0.697311,6.591034,5.617238,5.953160,8.057868,0.820277,0.451689,-4.426336,-1.290217,-7.033176,-7.069223,-5.463191,2.305335,0.340413,-8.157467,-7.931734,-0.811079,-9.921273,1.226569,3.760985,-6.021933,4.659466,2.458059,-2.938013,0.123763,8.362644,-5.148764,3.357169,-7.112403,-9.898190,9.797340,-9.448145,-6.286860,-8.818877],[-2.455339,-5.811123,-3.861621,8.042059,-3.972084,5.284976,-3.845345,7.280362,6.873639,-8.046012,4.752363,-6.783843,4.340609,-4.049009,-6.774458,6.700748,-4.201632,4.648201,8.298467,7.823569,-7.316233,-7.286944,6.942220,4.110778,-1.985590,-0.260042,-4.313978,-8.995786,-6.988437,8.862967,7.057058,7.775744,-3.133666,-7.318756,6.696867,6.771596,0.437875,-8.585152,0.526203,8.443580,-3.109494,-7.071185,-5.904194,-8.369400,9.546413,2.513412,8.613156,8.646553,7.179962,0.295631,1.512379,-5.764984,-6.036428,5.235241,-6.887040,9.324130,-8.244482,6.416978,3.682706,5.957245,0.371881,0.765448,-7.364281,0.158278,9.092858,-6.164869,9.614884,1.951436,-6.798624,-3.647580,9.290841,8.443433,1.443612,-9.313786,-6.805490,3.804006,4.270997,-6.497131,2.882581,5.947514,7.270842,3.660241,1.964523,-0.634521,5.132183,-4.294397,9.670431,4.744754,7.888241,1.265455,5.800330,3.270072,2.194271,-4.773997,1.545958,3.748364,-0.347661,-9.322798,6.919570,4.665317,5.145367,1.784350,7.390290,7.995885,3.841655,-2.767922,7.693690,2.285809,-8.360898,-8.237116,9.394199,-9.930336,-5.293991,5.644678,1.729827,8.347060,7.565915,7.778817,6.751355,4.693021,6.407234,0.631787,0.522345,-4.510083,0.397208,-1.951215,-3.703696,-6.610977,9.258016,6.191808,-1.890570,0.670246,6.237026,-8.270266,6.211315,3.944129,7.735421,3.807499,8.846289,-7.596568,-0.103609,-7.011800,6.427295,-7.979332,-7.258808,-5.677810,-0.771029,-5.932766,-7.421052,-5.320103,-1.289500,4.355001,-6.142186,2.743557,-3.531054,-5.526477,-2.006508,0.681444,6.767039,-5.155738,5.726528,-5.065194,-9.215673,-5.504449,0.393905,-2.627121,-6.995564,-7.638039,-9.483169,7.180858,0.538929,-8.170726,-2.552685,-5.775574,5.605131,8.498818,0.833793,-4.759239,6.192349,-1.424234,6.133867,-1.655535,-0.940524,-0.238512,-9.621891,3.681765,-4.069045,0.317419,-2.997328,-9.144528,-9.614706,-1.172345,-5.535558,6.429209,8.072133],[-3.973197,-3.553975,8.288621,1.633272,-7.800729,9.413843,-2.910297,8.241511,-7.496132,2.375763,3.023517,-1.397876,3.700613,-3.801004,-8.462094,-3.778992,-5.507543,-3.826471,-5.302484,3.819377,4.008233,-2.324643,-4.710118,-7.280567,0.917638,-6.083460,6.072944,1.234167,1.212078,-2.681561,1.508665,-4.563192,5.424800,7.368751,4.961249,-4.732676,9.542305,-3.822790,-0.265476,-5.970159,-2.393026,-9.505331,-2.639257,-9.406839,4.621325,1.777864,5.541508,-5.110226,-5.329701,-9.940218,8.875489,1.698448,-3.158449,-3.624441,-1.597121,-1.209532,6.944369,-1.858285,-9.572846,6.084958,2.608361,2.698366,2.432327,-1.300140,2.151166,2.898038,4.050754,-8.819497,-5.716345,5.699627,2.009497,9.909179,-7.177556,-9.475238,-3.081601,9.857636,7.063582,-9.606647,-4.439784,-9.713908,-6.744292,-1.969466,-8.759196,7.538391,-1.306494,6.933250,-8.453035,-7.497865,4.243768,-1.468914,5.191789,9.945507,-4.244060,3.746449,-1.341407,-7.351932,2.458624,9.698964,8.745855,-3.923291,6.617376,-5.861824,-9.662872,-2.628807,7.369095,8.222261,-4.282824,8.306582,-5.140648,-8.121282,0.878074,2.886631,3.800273,-9.410429,5.006282,-6.325708,2.982240,0.495541,-9.836646,5.426988,-1.587651,-8.307818,0.498876,6.048007,-0.406223,1.351705,-8.727678,-1.067221,1.176391,9.779431,9.954302,7.407728,-3.749487,-1.597012,-1.518865,-7.039737,-7.701176,-1.672390,8.880545,7.575025,0.410401,7.241157,-2.741374,9.932144,-5.509845,-6.315413,6.201391,-2.818072,-1.172697,-4.940486,-9.883456,7.895283,0.046187,8.374016,2.990062,-2.034107,6.426137,4.469806,8.596720,7.376105,5.006161,5.913168,4.208452,-3.026332,-8.110209,-9.804651,0.444027,9.659214,5.114077,8.690220,9.408831,5.386537,8.244296,-5.901528,-7.343682,2.268065,-6.822984,-0.357306,-8.136900,1.855043,5.885894,-5.322895,-8.103743,6.952351,-7.824023,-9.996979,-3.016696,-3.990682,-8.767779,-0.996897,-2.918350,-5.768278,-3.715513,-3.021359,8.515875],[5.105935,2.118836,-5.356084,7.858073,-7.887833,-9.899936,4.650649,-8.680641,8.816407,6.003128,2.033706,8.237951,-2.314416,-6.167377,-2.631724,-2.169219,-3.848434,2.129426,9.010710,-5.788642,-6.356737,0.451464,5.463136,6.619973,-5.693362,-8.321619,-3.933549,-2.436212,0.741332,7.932225,-8.691495,1.453145,-4.036602,3.449049,8.499864,6.055561,4.584798,-4.104752,-2.868793,0.285398,-0.259211,8.799159,4.095576,5.464769,-3.795994,-6.331166,-2.171955,-6.361270,9.464290,4.829879,7.965475,-4.828466,2.916905,-6.334799,0.068507,-6.356957,6.633155,-6.562648,1.437672,-0.521362,7.079038,0.799646,-3.126891,-0.136889,1.192690,5.728658,-9.792696,8.213481,-6.220810,3.587899,3.461727,0.938792,7.805662,9.012899,1.168252,7.574201,1.933396,-9.434194,-9.466617,0.768666,-7.040694,-2.658359,-8.549504,-5.105086,3.812281,-0.011569,-3.891829,-4.997766,-7.158638,-9.364768,6.303665,-7.890842,-2.898518,-0.464078,8.446982,5.890846,-0.635950,-2.779849,1.061784,3.428627,-0.704466,-7.322214,6.872501,4.466354,-1.709442,5.219633,8.510587,-6.405622,5.177722,-4.425745,-6.964315,-8.254224,2.418424,-3.806070,-9.819410,-5.724102,1.869833,1.939470,8.498343,-0.993606,-1.293647,3.517996,1.467758,-2.951344,-7.402611,3.423386,-3.741116,-6.125257,-7.761676,-7.713369,-8.044075,-1.034281,6.558331,1.993388,-8.832145,3.574749,0.156356,-7.640750,-6.599440,5.028517,4.239442,-1.423650,4.192969,6.411934,9.946844,-0.664014,-6.756863,3.217789,-4.338055,-2.184964,8.144067,0.779621,-0.270789,6.155371,-1.052369,-4.021718,-1.794452,0.445824,4.626904,1.204584,6.315927,-9.533842,-1.442576,7.885762,-0.864835,6.939610,4.129983,2.475941,-7.165805,7.084237,8.023170,-3.103103,-9.705306,0.548186,7.458225,-0.363407,-8.259223,-5.481365,-6.908634,9.923472,-2.677394,-6.986646,-0.025940,4.002991,2.662647,7.759514,-2.991227,-4.086998,-5.065699,-0.392335,-9.715380,-3.893021,-4.362119,-3.727720,-6.474046],[8.240285,-6.132178,9.521451,1.055456,-7.668472,8.406427,-6.678094,7.334029,-9.388848,-8.562810,2.706423,3.836952,-9.536874,1.245055,-8.527753,-4.854509,-6.100337,-9.882609,7.287194,-0.596072,-5.054096,-4.043365,-4.493645,8.658291,7.482881,0.140659,-4.254395,-2.588608,-9.907205,1.496292,5.843906,4.653425,0.102628,7.775461,7.684815,-6.699795,2.467352,-2.155730,-4.610557,-2.870343,-0.386717,7.452936,-4.711226,1.234027,4.030202,-2.585087,-4.304581,-2.903883,5.924105,7.797975,8.949803,-2.897381,-9.965629,-2.952806,-7.052086,-3.633120,5.603324,4.649389,2.251239,-4.339921,-3.346124,2.874947,-4.878786,-8.256455,-1.241501,7.032058,7.834226,-6.342950,-0.359704,-5.293992,-8.010479,0.386452,-0.427203,7.927816,2.218584,-6.308041,-0.480484,4.783597,5.410300,-4.014408,1.267403,-2.506099,1.557321,-5.367913,5.484657,-4.540667,3.194270,4.004211,1.971806,1.178079,2.166584,-4.868554,6.990464,-2.729257,4.303755,-0.382074,-2.926175,4.830888,-2.446916,-9.991913,-4.671053,5.855299,-6.248447,-6.981445,3.685774,6.376570,4.438477,9.216337,0.528687,-2.469091,-3.637162,1.305237,8.039598,3.556865,-2.750451,7.142678,-2.304764,-8.884538,-4.186319,-6.503826,-1.054897,-0.768597,3.983627,-2.828445,0.152469,9.867948,-7.645899,9.468924,8.347837,7.132899,-0.432859,9.090736,8.823555,8.877521,-5.011800,8.985508,1.808136,-0.080162,0.925707,8.040377,7.258390,5.549617,3.295158,7.378975,2.598213,-9.508006,-7.636166,-1.875892,2.941931,4.147791,-2.656390,-8.056692,-9.344774,-1.130811,-8.365502,-8.580256,5.309542,2.701635,-9.448083,3.687088,0.277335,0.498689,8.922603,2.945969,-5.864752,-1.700848,0.460308,-6.148306,-5.339423,-5.983555,4.389261,-4.039126,-8.407899,6.307741,7.530231,-5.900170,8.896052,-4.230094,5.548203,2.555509,-1.658860,-8.435792,5.815282,6.216315,-1.337151,-3.313491,-0.110754,-8.050514,-2.184842,-2.334219,-6.243093,-4.847588,-7.696996,6.955978,-9.286054],[7.798105,-2.366669,-2.337212,3.708493,3.438628,1.866242,8.553978,5.406817,-7.764084,0.019441,9.714362,2.253281,9.028646,-1.438079,-3.523470,-9.735652,2.865195,3.500483,-9.101951,3.484317,-3.734790,6.041062,-5.646158,0.617145,-2.209766,6.918514,8.348170,1.717192,1.515859,6.613130,-3.473167,7.241547,-6.693071,3.771977,6.388168,6.564727,-1.454959,7.590378,0.349066,5.298004,-6.440428,7.248134,-3.670417,-6.713796,-7.379221,5.417708,2.456481,-0.416644,8.388328,-2.347308,-7.355068,2.905871,-0.498689,9.239574,3.355401,7.751456,-9.701201,9.532488,0.236803,-5.752594,0.863845,-0.806007,-6.128711,9.889565,0.990051,2.117489,7.386485,-7.310137,6.699439,2.288373,-0.084383,-1.561018,3.985830,9.466701,-4.915933,-1.893589,2.801703,-0.443389,6.708524,-3.527952,-2.656568,-6.600248,-0.551103,3.990560,-9.433545,-9.330948,-6.858157,1.405611,4.448721,-7.691818,-1.762420,8.173291,-5.518825,-0.668117,2.191769,-8.468617,-8.754108,3.553530,9.717981,-6.213526,9.083574,-8.066932,-3.088270,4.679164,8.814136,5.561132,-0.232583,5.889918,-8.666667,-9.098468,-4.922953,2.085235,0.622506,2.505198,-6.653908,4.944585,8.284470,5.849686,3.898231,3.716612,-0.997605,8.138132,0.148168,2.176638,-2.123227,-7.627912,-6.353111,2.344053,-8.747114,-1.077331,-3.364086,4.506152,-9.393056,3.917986,8.825034,-3.665942,4.072019,5.665665,-4.628008,6.168654,-8.343644,-4.728197,3.498653,9.215488,-3.165413,-0.867331,5.372623,-6.230905,-4.402511,5.381351,-0.737219,-3.513735,4.929762,2.524471,-1.949184,-2.787776,-9.199847,-2.884923,-5.933638,3.375057,9.092439,-8.033681,0.788773,-1.314195,-4.245601,-2.498070,4.460285,6.711986,-3.683746,6.680421,3.936742,3.971119,-8.363758,9.129077,7.247490,9.920056,9.452029,9.777108,9.433139,-9.741171,-2.403511,-2.384888,4.055845,-9.436239,-4.246285,8.575465,-4.284423,2.839249,-3.091894,6.201869,-3.629562,-3.661987,-8.745154,-7.615537,-8.598610]], dtype = "float64")#candidate|5530|(15, 195)|const|float64
call_5529 = func_1091_call(relay.reshape(const_5530.astype('float64'), [15, 13, 15]))
call_5531 = func_1091_call(relay.reshape(const_5530.astype('float64'), [15, 13, 15]))
output = relay.Tuple([call_5509,call_5529,const_5530,])
output2 = relay.Tuple([call_5510,call_5531,const_5530,])
func_5544 = relay.Function([], output)
mod['func_5544'] = func_5544
mod = relay.transform.InferType()(mod)
output = func_5544()
func_5545 = relay.Function([], output)
mutated_mod['func_5545'] = func_5545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_5554 = relay.TupleGetItem(func_4625_call(), 0)
call_5555 = relay.TupleGetItem(func_4626_call(), 0)
output = relay.Tuple([call_5554,])
output2 = relay.Tuple([call_5555,])
func_5566 = relay.Function([], output)
mod['func_5566'] = func_5566
mod = relay.transform.InferType()(mod)
output = func_5566()
func_5567 = relay.Function([], output)
mutated_mod['func_5567'] = func_5567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_5625 = relay.TupleGetItem(func_5163_call(), 2)
call_5626 = relay.TupleGetItem(func_5164_call(), 2)
func_4115_call = mod.get_global_var('func_4115')
func_4120_call = mutated_mod.get_global_var('func_4120')
var_5632 = relay.var("var_5632", dtype = "bool", shape = (22, 96))#candidate|5632|(22, 96)|var|bool
var_5633 = relay.var("var_5633", dtype = "float32", shape = (1210,))#candidate|5633|(1210,)|var|float32
call_5631 = relay.TupleGetItem(func_4115_call(relay.reshape(var_5632.astype('bool'), [11, 16, 12]), relay.reshape(var_5632.astype('bool'), [11, 16, 12]), relay.reshape(var_5633.astype('float32'), [1210,]), ), 4)
call_5634 = relay.TupleGetItem(func_4120_call(relay.reshape(var_5632.astype('bool'), [11, 16, 12]), relay.reshape(var_5632.astype('bool'), [11, 16, 12]), relay.reshape(var_5633.astype('float32'), [1210,]), ), 4)
output = relay.Tuple([call_5625,call_5631,var_5632,var_5633,])
output2 = relay.Tuple([call_5626,call_5634,var_5632,var_5633,])
func_5643 = relay.Function([var_5632,var_5633,], output)
mod['func_5643'] = func_5643
mod = relay.transform.InferType()(mod)
var_5644 = relay.var("var_5644", dtype = "bool", shape = (22, 96))#candidate|5644|(22, 96)|var|bool
var_5645 = relay.var("var_5645", dtype = "float32", shape = (1210,))#candidate|5645|(1210,)|var|float32
output = func_5643(var_5644,var_5645,)
func_5646 = relay.Function([var_5644,var_5645,], output)
mutated_mod['func_5646'] = func_5646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5567_call = mutated_mod.get_global_var('func_5567')
call_5732 = relay.TupleGetItem(func_5566_call(), 0)
call_5733 = relay.TupleGetItem(func_5567_call(), 0)
func_5051_call = mod.get_global_var('func_5051')
func_5053_call = mutated_mod.get_global_var('func_5053')
call_5734 = func_5051_call()
call_5735 = func_5051_call()
func_5285_call = mod.get_global_var('func_5285')
func_5287_call = mutated_mod.get_global_var('func_5287')
var_5745 = relay.var("var_5745", dtype = "float32", shape = (1210,))#candidate|5745|(1210,)|var|float32
call_5744 = relay.TupleGetItem(func_5285_call(relay.reshape(var_5745.astype('float32'), [1, 1210])), 4)
call_5746 = relay.TupleGetItem(func_5287_call(relay.reshape(var_5745.astype('float32'), [1, 1210])), 4)
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_5756 = relay.TupleGetItem(func_1350_call(relay.reshape(var_5745.astype('float32'), [1210,])), 0)
call_5757 = relay.TupleGetItem(func_1352_call(relay.reshape(var_5745.astype('float32'), [1210,])), 0)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_5764 = func_4854_call()
call_5765 = func_4854_call()
output = relay.Tuple([call_5732,call_5734,call_5744,var_5745,call_5756,call_5764,])
output2 = relay.Tuple([call_5733,call_5735,call_5746,var_5745,call_5757,call_5765,])
func_5770 = relay.Function([var_5745,], output)
mod['func_5770'] = func_5770
mod = relay.transform.InferType()(mod)
var_5771 = relay.var("var_5771", dtype = "float32", shape = (1210,))#candidate|5771|(1210,)|var|float32
output = func_5770(var_5771)
func_5772 = relay.Function([var_5771], output)
mutated_mod['func_5772'] = func_5772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4872_call = mod.get_global_var('func_4872')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_5790 = relay.TupleGetItem(func_4872_call(), 0)
call_5791 = relay.TupleGetItem(func_4873_call(), 0)
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
var_5801 = relay.var("var_5801", dtype = "float32", shape = (3, 504))#candidate|5801|(3, 504)|var|float32
call_5800 = relay.TupleGetItem(func_2804_call(relay.reshape(var_5801.astype('float32'), [14, 12, 9])), 0)
call_5802 = relay.TupleGetItem(func_2807_call(relay.reshape(var_5801.astype('float32'), [14, 12, 9])), 0)
output = relay.Tuple([call_5790,call_5800,var_5801,])
output2 = relay.Tuple([call_5791,call_5802,var_5801,])
func_5811 = relay.Function([var_5801,], output)
mod['func_5811'] = func_5811
mod = relay.transform.InferType()(mod)
var_5812 = relay.var("var_5812", dtype = "float32", shape = (3, 504))#candidate|5812|(3, 504)|var|float32
output = func_5811(var_5812)
func_5813 = relay.Function([var_5812], output)
mutated_mod['func_5813'] = func_5813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_5934 = relay.TupleGetItem(func_5163_call(), 1)
call_5935 = relay.TupleGetItem(func_5164_call(), 1)
output = relay.Tuple([call_5934,])
output2 = relay.Tuple([call_5935,])
func_5936 = relay.Function([], output)
mod['func_5936'] = func_5936
mod = relay.transform.InferType()(mod)
mutated_mod['func_5936'] = func_5936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5936_call = mutated_mod.get_global_var('func_5936')
call_5937 = func_5936_call()
output = call_5937
func_5938 = relay.Function([], output)
mutated_mod['func_5938'] = func_5938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mod.get_global_var('func_5443')
func_5444_call = mutated_mod.get_global_var('func_5444')
call_5985 = func_5443_call()
call_5986 = func_5443_call()
func_5643_call = mod.get_global_var('func_5643')
func_5646_call = mutated_mod.get_global_var('func_5646')
var_6000 = relay.var("var_6000", dtype = "bool", shape = (2112,))#candidate|6000|(2112,)|var|bool
const_6001 = relay.const([6.268985,-3.925986,-0.609859,-0.062209,1.964082,-5.916666,8.699658,6.460403,6.585465,3.605469,-9.614273,8.281098,3.934573,-8.817037,2.468701,-6.412393,-8.338493,-6.034393,7.720870,4.197506,6.112860,-3.433837,1.209267,4.761775,6.054980,6.357886,-9.522221,-0.356485,2.113362,-9.947478,-4.359314,-1.027232,1.827611,2.094773,2.963412,6.860143,4.264306,8.287216,9.227926,2.999755,1.219161,2.313051,5.745709,-2.078934,-2.743553,5.213471,1.661998,7.956489,4.137952,7.170150,-7.879339,3.188144,-0.727396,-0.048968,-3.547053,-1.949652,1.378028,8.282204,-7.173338,9.175577,-9.876762,5.344405,-9.450427,2.356121,-0.812563,-1.086769,0.459006,-5.193599,7.161305,-9.025392,-7.940085,5.704744,-4.547955,-9.453477,-5.034996,8.036111,-2.912621,3.216291,7.070667,-1.887409,4.426539,-2.054893,9.716640,8.719270,-5.234621,-5.966121,-6.086491,-6.775860,-1.784746,0.450800,-9.945716,2.451377,-3.565194,-0.518959,1.110745,1.919924,1.860631,-6.584715,-1.157539,8.619795,6.806326,4.395717,-3.496619,-7.564555,-3.180440,8.416700,-9.950989,4.262431,0.161167,-7.431921,6.578062,-7.262386,-7.316115,4.081338,-7.842044,6.315323,-2.576975,8.938273,-0.921059,9.117751,-4.114272,5.680048,8.405601,5.704454,-7.340788,-6.316144,8.376417,4.557287,6.177989,-1.943475,7.911282,4.748806,-5.732601,-7.336894,-2.735198,7.960629,3.112172,6.929046,8.168451,0.593707,-5.518271,9.923084,-5.948472,7.786448,4.533684,1.748936,3.031635,-0.812783,-4.824400,-0.355586,-4.920977,3.624366,6.699187,6.211746,0.522806,-5.665725,-5.691047,3.870729,-5.565920,-5.855176,-1.086952,9.032045,-7.201073,7.629731,-2.549181,5.900350,3.585827,-1.061085,4.703310,4.718090,6.878447,-3.382056,-0.657776,-8.115201,1.561595,-0.250554,8.283927,3.059754,-4.431594,-6.527157,4.424802,2.232592,-0.671617,4.098669,6.010023,-6.344615,-7.689218,-8.431342,-9.037204,-9.386009,3.012994,8.175009,-9.543995,-3.838059,2.204354,7.893529,-2.232802,1.790544,1.895876,-7.945018,4.720072,2.357793,-1.272793,-2.578790,-8.207679,-8.667070,-6.855467,-3.100939,-5.807395,6.857863,6.465454,-8.135068,6.727957,-0.269113,-7.737780,-8.361305,7.675469,-8.907875,5.995555,-4.473040,4.082091,-9.315915,-2.933858,-8.479589,6.678571,-5.946140,-6.208564,8.047753,-8.139330,-6.640151,-1.324976,5.909241,-0.664770,4.080422,-4.331386,-6.855043,-4.001546,3.421441,9.739859,-6.790351,8.157096,-7.089152,4.580563,-6.486048,1.019288,7.139752,6.033161,-5.333709,-5.462272,5.462591,8.074583,-4.135263,-7.927681,2.357777,3.553941,5.909147,-4.449952,-0.685771,6.962539,-1.376467,-6.542322,-3.974735,-0.173348,8.090316,1.472475,8.776642,-1.905225,-8.785737,-7.036803,9.074203,5.557759,-1.942584,-1.874601,-8.155507,0.360669,-1.539284,-8.669927,2.473455,7.709703,8.722627,-4.961474,-3.151944,-6.448051,7.346888,-9.048075,-4.533548,6.852423,6.652223,4.858749,9.447560,-4.008420,-2.993280,2.856701,9.925668,5.881543,7.680618,-9.260027,-5.397710,-4.733610,6.090244,-6.199248,3.968554,-2.175403,2.189025,-0.400726,0.233782,4.853465,3.192878,3.227433,6.014540,1.045971,-3.141384,-1.287194,-4.381317,6.000924,0.020823,3.920219,9.830056,-6.084127,5.713645,-7.224645,6.183432,3.208563,-6.301754,-0.911104,0.527741,-6.846502,2.243498,-2.646847,1.712225,9.631187,-6.440107,7.327891,-7.440543,-7.269897,-8.869666,-3.474169,-9.826073,-3.508588,3.476825,1.738519,-3.307015,-3.167601,-5.415235,5.496822,-7.805154,7.694186,6.946908,6.162344,-0.466163,-6.709354,-7.391212,-6.261376,-5.929957,6.646432,8.643769,-6.853217,-8.826598,8.476838,7.571830,-8.823853,7.959581,-1.724521,7.991416,0.307624,-1.775269,-7.209985,-6.985958,5.704814,-3.991942,-9.419630,6.227599,6.100980,-9.499554,2.500526,-2.423308,2.065378,7.378343,-4.736288,4.122658,-7.318227,1.495444,-3.933090,2.532372,-2.155391,-7.194411,-0.654803,0.664638,2.102513,-5.927750,-7.502991,3.840991,2.679292,5.329287,0.035547,6.717703,-4.900403,-1.650985,-6.055443,9.141665,9.693485,-7.922355,2.469214,-7.155931,4.086163,5.014521,6.125913,6.132007,1.861419,-4.180033,-5.476888,-3.761544,6.650307,4.766933,7.319677,-1.469761,0.514250,-1.621103,0.856149,3.495153,2.746902,-1.084284,6.275500,8.764762,-9.985703,4.709078,7.727407,-2.512088,1.458483,5.655022,-0.695540,3.035532,-9.996459,-4.412359,-6.145282,-6.472081,7.558453,-1.526335,-1.235595,2.811936,-4.587346,0.695421,3.399411,-3.369334,-1.513822,4.230896,6.415245,-0.374770,-2.985351,9.943693,-2.250905,-6.187074,-5.120520,1.644439,0.350203,-9.279105,2.717961,8.739411,8.129446,4.264075,6.949092,-2.073809,-8.443547,-0.693977,4.493066,3.155455,6.750231,5.203071,4.513104,7.430604,-6.988744,-3.546556,4.499454,-4.198848,8.539051,-8.141418,-1.310064,3.401469,0.760262,5.504534,-0.488642,6.019415,-1.928413,0.077538,4.528290,-0.698805,-3.163294,5.008220,2.325754,-5.451702,-0.549014,3.811875,6.990876,1.861643,8.072218,-5.556834,7.597289,1.705291,-8.473881,3.231438,9.326784,0.403705,-1.721517,-0.582037,-8.577464,-8.719508,5.713967,7.727727,6.986842,-7.705248,1.120466,-9.912949,-7.756925,4.241060,-5.100797,-0.731737,-1.186640,-1.390295,-2.172858,-9.546201,9.389783,4.503578,4.701194,-3.657288,1.351905,4.464680,6.652614,-2.466223,6.525695,-8.059972,-3.421236,-3.756035,6.719118,-7.942999,6.591361,-1.059514,3.486729,6.750517,0.251811,7.243403,-0.473927,4.570955,-5.051553,6.932110,8.489673,-8.679388,-6.065249,9.454229,7.308440,-8.223570,-1.958836,6.204380,-8.923060,-3.035095,-0.096136,4.598012,-7.012785,-7.303964,-8.057233,9.644983,-2.696512,4.431359,-6.193321,-5.585246,-9.068096,-7.339921,5.638406,0.754217,-3.666951,6.982862,1.141235,-0.138571,-3.308721,8.943876,-1.617137,-2.441836,-6.806275,-3.210722,-4.759058,-8.750500,0.972986,-8.935671,-1.446818,-9.864879,6.048097,-1.915883,-2.322215,1.258650,6.520415,2.947311,9.589810,-8.563530,-2.761506,-0.001687,6.522893,4.927929,8.379236,-4.877451,5.694502,-7.838292,-0.603916,-3.281563,9.793309,4.258284,-1.176734,7.529051,7.262447,7.742828,-0.460596,-6.155469,-8.785163,-8.154050,8.006693,8.166130,0.894845,-5.283544,-1.740803,3.381289,-5.146942,4.641364,6.406555,-6.256807,-8.771017,-5.043665,9.778427,2.486138,1.397933,8.527689,-0.335657,8.333164,-6.992004,8.270640,-4.245414,1.134708,-1.116778,0.004661,4.228462,-0.495770,5.593556,-0.496878,3.872205,-4.503889,1.751971,-3.687661,9.883663,3.342782,2.809348,-5.391898,6.071571,-6.128882,-4.786721,-9.149424,3.346975,-4.965581,0.852144,3.558446,-3.378868,1.928991,0.990728,8.957176,-0.881526,-8.794303,1.731894,1.166314,-9.477709,-3.348230,-3.420486,-3.954440,8.641671,-0.855700,5.495065,-1.836960,-5.627353,5.288313,3.116889,-5.904089,-1.026106,3.926702,2.788228,-1.611431,-0.026907,1.560328,4.482211,-1.592017,-5.110357,-4.214062,-5.417475,6.772147,-6.903619,-6.711784,6.965371,2.706967,2.777529,4.623668,-4.236196,8.300416,6.192825,5.051260,-6.419399,3.968851,-7.438823,1.167077,-9.170075,0.743818,3.533147,-8.583020,-0.251208,-1.086232,-8.002328,0.342072,-8.460213,8.408918,5.245363,-9.451076,-7.223488,-2.484028,7.281218,3.214910,-6.327692,8.920156,-4.025417,-6.384964,3.491206,3.381657,-6.896918,-8.489138,9.648924,-3.674703,-1.484524,-8.703261,5.693328,-8.930934,-4.028028,-1.019891,-4.389742,4.415113,-5.319588,-0.748967,-5.006060,8.833818,-3.973804,0.521787,-7.524445,-0.890320,0.208714,2.877787,6.827136,7.715686,-4.480018,-5.868807,8.211628,6.321090,0.569406,-9.492687,5.514668,-9.035404,0.393358,7.255698,-0.677527,6.956733,9.078020,-5.916684,-0.668666,-4.681446,2.105442,9.816526,-2.638250,-3.275265,-2.135734,-4.126585,7.305621,0.575311,-2.947081,-1.414937,-3.037110,-5.984908,-7.547425,-4.061159,7.529461,1.222021,0.421595,3.010391,-7.200469,8.359246,-8.331448,-4.937225,7.948876,8.220585,3.617988,-7.255216,7.478843,9.616992,4.887666,-5.204434,-7.557084,9.487690,-4.936406,-9.713001,5.310709,-9.026587,0.774028,0.247008,-6.777482,-7.197467,-7.984691,-7.888695,-2.403770,6.476375,6.929305,-4.755618,-1.335723,-2.689220,-0.180750,8.325015,-6.194497,-3.361320,-7.358812,-8.573947,-6.004768,-5.837999,6.485196,-7.364503,-3.899280,9.417834,9.918694,-9.327001,-3.044354,-3.491872,3.704903,-9.431094,4.179612,3.727191,-4.426723,1.251369,-8.502353,9.345712,-6.953420,5.116303,1.194453,-4.307745,-7.536481,-2.173245,6.882993,-0.015178,-1.789577,4.228558,2.201257,-4.557262,-7.668390,-8.950254,4.808503,4.935641,0.202154,2.977753,5.639124,2.300817,-4.363992,-6.919201,-3.449946,-3.846918,8.651783,8.113609,-0.179424,-2.820428,6.427380,5.039466,-5.205629,-5.638774,-1.620932,5.349833,7.774076,9.575396,-9.534864,-0.548166,-8.914774,-5.603082,-1.305755,-0.384265,9.166820,5.912731,4.887452,3.697889,3.496408,1.682008,2.370135,-2.172155,5.503792,-0.558771,7.484523,2.031701,2.662231,-0.982435,2.477498,-4.623842,1.563351,0.040474,7.545808,5.630740,-3.832473,-4.282986,3.449002,-5.041784,-0.344599,-1.131866,7.504174,-6.154428,3.756723,-5.315111,2.122706,4.480705,3.285977,-5.438198,-3.424952,7.424537,-7.922650,-0.185408,-8.160180,8.990865,-5.221208,8.850753,7.858585,-6.515990,-8.376145,2.567510,-0.365400,-0.566646,2.372634,-6.797167,-8.681459,-8.849827,8.169550,-2.046843,0.091419,-6.104002,-5.227417,-0.681608,0.621015,-7.508314,3.418630,-3.439413,8.715014,2.056626,3.232222,-8.029925,-0.570025,-4.894145,3.587552,7.334194,-5.334163,-3.579856,7.886139,-2.230679,-0.007655,-5.146842,-4.600091,0.043587,-7.114434,-3.357796,-3.294358,6.923525,9.583840,-9.119979,2.809648,-7.982814,2.001254,-7.342348,2.922709,-3.635719,4.602812,6.106655,3.927072,3.280858,-0.066556,6.634608,-7.522540,7.367924,-5.631293,8.867398,9.588011,-7.516030,-6.179408,-8.378656,8.431494,6.096492,6.658440,2.348863,0.060840,-3.429576,-5.307439,-5.863223,5.818404,3.023903,4.771853,7.519606,-6.815579,-0.678945,-7.507612,-1.132512,5.012697,-3.908252,-4.049493,5.227744,8.039364,5.022997,3.551811,-7.670378,5.712622,-1.030110,-7.427836,-7.438446,1.728567,-9.076667,8.433797,-0.165380,-4.919875,5.095092,-9.605371,8.626068,9.321996,0.491902,-5.162310,0.680256,7.657613,2.189848,0.547298,-6.979263,-5.682078,-0.753417,8.016786,-7.236724,9.608832,5.339125,-3.575103,0.400544,8.739350,-1.583433,6.626125,-5.095196,0.007672,-2.728193,2.283871,-6.526927,8.511178,2.940381,0.406220,6.765180,2.240005,-4.951809,4.362873,1.244273,-0.589827,-2.428477,8.745606,7.931360,-2.039379,7.701948,-0.231989,6.222294,-3.314029,7.039966,-4.867617,6.703933,0.411737,5.853546,2.530288,9.962852,-7.244021,5.585434,-7.494144,2.874353,6.395610,-6.043387,-8.944508,1.327481,-6.618583,-6.801304,3.551929,0.528444,3.668648,3.867571,1.830344,-0.124638,2.743388,-6.886013,-9.283025,-3.340436,-5.354056,-7.770260,5.092338,-7.744815,-0.366324,-9.652129,-9.003393,-3.515045,9.903151,-6.259580,-3.696263,-1.078330,8.595932,-6.655580,-0.435993,6.379606,8.568681,0.499767,7.156887,9.243157,-5.140806,-6.991802,1.246260,-7.904199,-3.460417,4.575468,-3.826439,-3.209185,-7.734332,4.881613,-3.393983,-0.115893,-3.544292,-9.361743,2.382476,9.583601,5.935519,-0.859526,-7.605428,1.295263,5.044939,-2.627949,9.130713,4.848970,0.747260,-9.744876,1.701075,8.507424,6.061603,-2.570406,2.514898,-2.115960,6.866119,9.716354,-1.163628,-5.482452,-2.615231,6.155847,-0.865904,1.628924,9.251146,8.066494,-7.592743,5.292648,-9.896506,-3.282488,5.090879,-6.360213,1.431005,8.648985,2.219252,-8.255941,-8.443279,2.842247,-4.660423,-1.449595,-6.010761,5.754090,-3.453024,-9.938227,-2.749082,2.270646,-5.711911,-8.539468,1.513283,9.454821,7.135279,-1.570381,8.684070,-7.310627,7.885477,6.606817,-0.965020,-5.249407,5.058504,4.573257,-2.628115,-8.271294,8.247996,-6.763845,-5.143125,3.885749,8.226567,9.774960,9.776923,6.714433,-4.912397,-6.932594,9.040967,3.932417,-4.236024,-9.366201,8.198409,9.765666,2.742166,-6.920947,8.832719,0.969275,4.305025,4.128368,0.955760,3.929574,5.986448,-2.717835], dtype = "float32")#candidate|6001|(1210,)|const|float32
call_5999 = relay.TupleGetItem(func_5643_call(relay.reshape(var_6000.astype('bool'), [22, 96]), relay.reshape(const_6001.astype('float32'), [1210,]), ), 2)
call_6002 = relay.TupleGetItem(func_5646_call(relay.reshape(var_6000.astype('bool'), [22, 96]), relay.reshape(const_6001.astype('float32'), [1210,]), ), 2)
output = relay.Tuple([call_5985,call_5999,var_6000,const_6001,])
output2 = relay.Tuple([call_5986,call_6002,var_6000,const_6001,])
func_6003 = relay.Function([var_6000,], output)
mod['func_6003'] = func_6003
mod = relay.transform.InferType()(mod)
var_6004 = relay.var("var_6004", dtype = "bool", shape = (2112,))#candidate|6004|(2112,)|var|bool
output = func_6003(var_6004)
func_6005 = relay.Function([var_6004], output)
mutated_mod['func_6005'] = func_6005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5567_call = mutated_mod.get_global_var('func_5567')
call_6057 = relay.TupleGetItem(func_5566_call(), 0)
call_6058 = relay.TupleGetItem(func_5567_call(), 0)
output = relay.Tuple([call_6057,])
output2 = relay.Tuple([call_6058,])
func_6073 = relay.Function([], output)
mod['func_6073'] = func_6073
mod = relay.transform.InferType()(mod)
mutated_mod['func_6073'] = func_6073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mutated_mod.get_global_var('func_6073')
call_6074 = func_6073_call()
output = call_6074
func_6075 = relay.Function([], output)
mutated_mod['func_6075'] = func_6075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_6079 = relay.TupleGetItem(func_5163_call(), 0)
call_6080 = relay.TupleGetItem(func_5164_call(), 0)
output = relay.Tuple([call_6079,])
output2 = relay.Tuple([call_6080,])
func_6083 = relay.Function([], output)
mod['func_6083'] = func_6083
mod = relay.transform.InferType()(mod)
mutated_mod['func_6083'] = func_6083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6083_call = mutated_mod.get_global_var('func_6083')
call_6084 = func_6083_call()
output = call_6084
func_6085 = relay.Function([], output)
mutated_mod['func_6085'] = func_6085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_6142 = func_5416_call()
call_6143 = func_5416_call()
func_5342_call = mod.get_global_var('func_5342')
func_5343_call = mutated_mod.get_global_var('func_5343')
call_6145 = relay.TupleGetItem(func_5342_call(), 0)
call_6146 = relay.TupleGetItem(func_5343_call(), 0)
output = relay.Tuple([call_6142,call_6145,])
output2 = relay.Tuple([call_6143,call_6146,])
func_6149 = relay.Function([], output)
mod['func_6149'] = func_6149
mod = relay.transform.InferType()(mod)
mutated_mod['func_6149'] = func_6149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6149_call = mutated_mod.get_global_var('func_6149')
call_6150 = func_6149_call()
output = call_6150
func_6151 = relay.Function([], output)
mutated_mod['func_6151'] = func_6151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5544_call = mod.get_global_var('func_5544')
func_5545_call = mutated_mod.get_global_var('func_5545')
call_6209 = relay.TupleGetItem(func_5544_call(), 2)
call_6210 = relay.TupleGetItem(func_5545_call(), 2)
func_1041_call = mod.get_global_var('func_1041')
func_1045_call = mutated_mod.get_global_var('func_1045')
var_6213 = relay.var("var_6213", dtype = "float64", shape = ())#candidate|6213|()|var|float64
const_6214 = relay.const([-0.906196,-4.328974,1.679191,1.939990,-6.546041,-6.973323,-0.912754,7.554960,-6.764941,-0.800609,-4.070135,7.974270,2.204428,-2.626025,-0.417358,7.529743,1.080597,-6.095558,9.381569,6.108053,-0.701713,-9.865878,2.290825,9.583716,0.803830,-1.336988,-3.560132,-5.733361,8.580238,-4.735269,-9.601781,7.230945,-7.982691,-9.619297,0.460147,4.530902,2.953083,3.319708,6.035911,-0.196334,-2.813385,2.521269,-6.965849,-5.621793,-8.757838,0.571615,-2.313931,-1.558981,8.681988,1.181461,6.431523,-0.614652,-2.839558,9.775197,-1.201297,4.534947,-0.921272,4.211460,-9.099705,9.389810,8.904145,6.193057,4.718542,-7.008246,-1.875931,4.226939,-8.272203,8.825195,8.343894,-5.450982,-4.057105,9.518461,-6.801037,-0.603887,-4.856850,9.014061,-7.838574,-5.631417,7.214788,-4.414923,-5.401108,2.374497,5.668477,6.612822,2.017612,6.594431,7.671842,-0.916855,4.974750,7.069770,-4.667424,7.058235,5.864960,-3.733571,-6.841781,3.511681,3.695555,1.864850,6.708380,9.337544,5.133001,-8.572003,9.288070,-4.114375,6.394222,5.237307,7.638555,0.509090,-4.305941,9.723549,-3.558600,3.435872,1.577446,8.269625,6.182811,9.612895,1.066986,-6.813436,-7.075762,9.885235,-5.823220,-7.868367,-3.292112,-6.485518,9.103576,8.645576,-2.923133,2.540954,-5.693435,-6.716477,-4.628878,-8.228017,-6.392258,-1.817379,4.321994,-0.242295,-9.824254,9.158825,-9.331479,6.337320,6.640478,-5.527311,0.528388,9.060326,-6.056112,-3.429640,6.478892,-9.158446,3.735354,3.432675,-5.621016,-4.371406,-5.747995,0.297838,5.929072,-9.684330,-1.671854,0.783959,2.823373,8.678435,-9.450432,-5.004041,-0.999576,8.367052,6.723727,-6.397983,9.504638,8.495927,5.636766,-2.260397,7.269281,5.569333,0.385687,-9.915940,-4.523274,-0.068701,0.825586,-6.329255,7.250153,3.662522,-4.004427,3.212337,-6.685966,1.867754,6.366314,-9.387925,1.966152,-4.529296,-7.921892,1.483773,-9.968379,-0.610445,-1.224812,5.661922,-7.292918,-7.616467,9.911129,-2.249242,-3.039092,3.236688,-1.880969,9.394140,9.582708,-5.105789,-0.297664,-4.672603,-2.336379,-4.400411,-8.137358,-9.573596,-1.709313,6.059922,-6.397270,8.423032,-9.513706,3.179872,-7.273401,-2.346816,-5.516421,-2.312241,-9.985178,-1.472270,9.932801,8.592821,-4.832465,-3.383203,-6.760966,-6.616462,-6.468724,-0.944708,-2.513683,2.445770,-0.501264,0.975882,-5.994746,0.152112,-0.512129,9.316570,-2.124785,1.289757,6.962662,1.410808,-9.688729,-2.738187,0.777086,3.453418,-8.852434,-1.600273,-1.615128,-2.624278,9.149996,2.355785,9.554489,1.870062,4.777384,-2.438540,5.510270,-0.457285,-1.529625,-1.794367,3.784571,8.158827,-5.526681,-6.651347,6.666804,7.589748,-5.279837,3.202736,-1.732112,3.393599,5.505632,-4.186022,6.540540,-7.379678,9.979378,5.497707,-3.506818,1.088794,9.070274,4.441494,-8.366702,1.568470,0.393255,-7.916438,-9.769559,4.434603,0.826936,-8.183724,4.410624,-6.290296,2.822741,9.055901,0.561982,-9.084448,3.606484,0.961767,-1.790112,-8.239938,7.425194,8.509417,9.217338,-9.796375,-9.241408,5.390121,0.463142,2.352979,-8.616753,1.141804,7.284097,-4.616570,2.959842,-1.732114,-1.216788,-1.810773,7.277612,4.844425,-1.550514,9.263078,-3.213322,-3.219964,9.720457,-0.528635,1.048068,2.833446,8.206862,4.647602,1.930081,6.266701,-7.195358,-0.153792,7.882931,-2.305149,0.114883,9.840419,9.507516,4.725742,1.427346,-2.061795,6.695833,1.954176,7.624420,-4.246563,-5.996205,-0.450766,6.810364,-2.387617,0.589772,-8.126971,-8.976149,-5.990666,-2.674736,-0.109886,-3.944717,-8.119706,-2.646592,-6.598505,-7.645960,4.723706,-3.583727,4.894983,-9.503672,6.361391,8.824563,-8.155682,3.005595,0.809565,-9.377276,4.163150,-0.786562,4.741720,3.174193,-5.837389,-9.712445,-8.945023,6.301574,-1.394374,1.261540,7.008368,6.789398,-1.142104,0.199935,-5.130884,-2.894763,-1.168823,8.894319,4.297956,0.123952,-4.054319,9.557945,8.110153,8.983305,-2.748169,1.979076,7.788515,7.259177,9.511352,7.654351,4.709650,0.342955,-1.934666,2.335844,4.375436,7.256516,-6.570489,-8.940167,0.584148,7.347271,-1.611441,-8.886023,6.370127,6.507096,-9.972646,6.981111,-4.646511,1.074105,9.309650,2.798451,2.500006,0.525062,6.376404,6.791078,5.674275,3.185484,1.086848,3.431659,7.545359,3.477192,1.077948,7.535367,6.679880,-1.683608,8.871462,9.743643,-2.637488,-3.125053,-2.346279,-0.084936,-9.475731,7.050960,3.995179,9.324294,-9.816203,-4.832974,6.962549,5.122207,-0.347844,2.792024,2.657722,0.734513,1.369960,-0.356865,5.809506,9.699245,-2.648627,-0.105026,8.005231,-6.300771,-9.704963,3.909861,2.522551,1.870332,-5.061667,2.354130,2.094317,8.647271,1.715542,6.192977,3.075770,-1.207690,2.512481,9.660370,-2.177294,-4.271140,6.018554,-1.805421,8.691931,-2.251657,0.242193,2.140213,-7.936685,3.341347,-8.103560,4.376052,-7.125178,2.785558,-2.966036,-8.347470,3.736856,0.407259,0.897271,7.488272,9.458494,-9.041170,9.628908,-8.050444,4.541559,0.111108,-1.242982,5.468843,6.332966,-8.091416,6.737023,-0.632034,-9.394230,8.691130,-9.711020,-3.666934,9.130662,-1.877623,-4.086181,-8.225700,-3.406293,-2.646174,-5.688536,5.123692,-9.197205,0.676091,8.166121,-2.660771,-1.972315,2.306612,-2.044365,-6.922798,-6.916736,9.507960,8.195379,-5.039807,5.612106,-0.205823,-8.783311,5.478062,-0.990763,7.135493,1.036011,5.059628,0.774156,-7.387484,-1.406649,1.823353,9.787721,7.219821,9.682164,-9.706681,-2.195122,-8.697824,4.007826,-5.945937,9.598567,8.226423,8.358437,-4.382972,8.694720,2.985526,7.920831,-6.455199,9.213052,-0.540422,-8.098800,6.951490,3.035498,3.798486,-4.044557,-8.444019,3.409974,-2.098419,-6.934207,-3.575585,1.108337,5.714697,-1.944676,3.533452,-7.603923,-7.167392,-0.223160,0.809858,-4.959354,-7.593369,-0.798466,-7.169135,-1.361995,9.580336,8.037526,-9.885871,4.123040,8.806845,-4.508468,3.136002,-9.519148,0.980945,4.222271,3.447043,0.938454,-5.726634,-9.861119,-8.277784,5.530860,-3.165002,8.698797,2.503374,-7.481754,-4.337986,2.451066,7.488971,-3.220803,0.038137,-0.399542,9.716325,-9.650299,9.128268,-2.871282,-8.780492,7.164717,-4.428743,5.090695,1.631157,-1.108093,-9.739947,2.962846,-4.087729,-0.162921,-5.402196,-5.931529,5.846783,6.384479,1.216531,-3.720638,-8.333971,-4.429322,-7.194518,-0.814289,-5.160975,5.936257,8.784182,-5.223589,-3.137550,1.554962,7.356878,-3.915824,-5.993621,-6.782969,4.214625,0.785721,-7.289411,-2.233557,-0.820455,2.595465,-2.561341,4.535386,0.461387,2.484370,1.331430,-5.996447,-4.777171,0.358659,9.799208,-5.205738,-1.928472,-3.953272,-5.641098,0.818213,7.291596,0.600153,9.006298,4.904832,-3.692592,6.772803,7.665283,9.360476,-0.294469,6.355049,-2.602958,0.660181,4.560934,1.427459,-1.595069,-0.829787,7.906688,8.554470,7.407014,-7.154585,4.979389,4.349606,3.446623,-0.146029,5.103133,1.621182,-5.944053,-8.290294,-8.947327,7.524054,-8.355037,9.232096,1.140860,-3.068617,6.689046,-6.341587,-4.267580,-0.293753,-2.073170,-7.032436,-0.978796,9.001456,-5.393526,-5.028968,-7.993628,8.860808,-6.842244,-1.100224,-0.146604,-9.926342,1.175411,-7.819392,-8.366466,-4.227627,-4.656867,-4.421751,-2.283004,3.031741,7.028580,-7.741595,2.594185,-2.860863,-8.379027,9.729166,9.833524,-9.500377,-8.397187,4.496454,6.867805,-1.556549,-9.676522,-4.741909,-5.458534,8.824920,-4.989274,2.984510,2.691090,5.970566,3.594451,-6.922671,-8.013558,2.514316,-7.082627,3.707959,-0.815817,4.806747,-1.615864,-1.866155,2.771422,-7.945266,1.630346,5.079759,3.560966,-3.254033,0.493589,6.512919,2.148329,-8.688152,7.812754,-8.326996,2.256027,-1.205479,0.393560,4.743643,-7.043205,-9.891603,1.757079,9.251353,-9.059284,3.703333,-4.531553,8.046409,-0.088586,7.754978,7.408236,7.174378,9.436569,-1.314845,-2.890253,2.985018,6.377970,-6.601716,6.707037,8.555557,7.461035,1.510312,-3.384101,-0.623242,5.425545,-8.949539,3.850404,7.209904,-0.602397,9.913731,6.071677,4.955007,0.779462,-8.254147,3.039817,-1.781769,-3.726457,0.121955,7.362853,7.426156,1.600594,3.983738,-5.750212,-1.531957,1.597619,2.005362,-9.240643,4.108228,8.462143,4.001810,-2.050366,8.357498,2.852591,4.610770,-4.400341,7.809039,-1.563311,-1.521477,-9.825700,0.557933,6.815285,-1.087470,-9.289071,9.658991,8.677934,-9.649798,-5.022258,5.694187,-0.574854,-1.100556,1.173754,0.741789,0.667568,-4.340413,-7.724815,3.724825,4.551038,7.660094,7.265311,2.139194,5.254314,-3.931372,4.459029,-4.032631,-1.255979,2.686752,-0.281442,-7.390542,-3.903448,2.917418,-4.689064,-2.045326,8.303835,4.711661,-3.101467,4.956362,6.647334,-2.136782,1.007729,-7.012892,6.023338,-6.468840,-4.656155,3.438547,2.570606,6.961449,2.197264,0.509008,-9.097208,-8.697074,5.241542,-8.754856,3.157290,-5.714003,2.561842,7.462680,-9.670922,5.437153,-1.761808,6.578404,3.558000,9.733098,2.398678,7.983523,-8.616264,-3.678224,-7.557245,-3.181794,4.437614,-6.185471,2.423724,-7.779327,6.948275,1.646209,-0.018004,-0.120043,5.744773,4.229241,-4.769475,-4.234635,-3.407112,5.984973,-5.170048,-0.690970,-0.370976,-1.135136,-8.736224,5.075903,-7.945494,8.799003,3.103327,7.855753,-7.256403,0.202477,6.588450,8.828874,4.165588,-5.291164,-1.157312,5.892194,-2.236466,-5.995053,-4.219595,-3.542450,-6.736321,-1.367927,7.354632,2.168271,-8.817152,3.003084,-5.206054,1.977575,5.559702,4.109651,-2.922142,-9.305719,3.542564,-4.034864,-6.622976,-3.611617,-7.725495,-4.978516,-6.727899,0.501516,8.571999,1.024649,1.620885,9.230761,-8.843346,-3.185525,4.272739,2.078920,-5.014653,3.135707,2.209115,4.779554,-2.286088,7.521015,4.859033,3.209112,8.539902,3.518728,7.505663,8.412533,2.992003,-8.308790,-0.495995,8.341160,8.742259,1.935777,9.177356,2.537153,2.180444,-8.671879,7.604971,9.553898,-4.293489,-6.318238,3.010987,-2.961683,5.467160,0.564008,-7.687483,-5.387478,9.119065,-7.930728,1.258299,-6.238703,8.598440,9.800916,-8.119026,9.477473,3.719490,-8.509125,-7.035350,-3.773251,-1.281761,1.358188,-7.832260,-6.530275,-6.520946,-7.926453,-2.871804,-7.600116,-1.197743,4.984207,-9.705503,5.366910,-4.341006,-4.795915,-7.434842,-5.832663,-5.749892,-9.128582,-6.996409,3.328666,2.533310,-4.530872,-6.798101,9.532152,-7.922725,-0.126328,-9.339993,0.846029,0.667570,3.722722,-2.982444,-3.793999,6.260610,1.696281,-9.835100,-8.887015,7.720289,5.640712,3.151703,-3.112243,7.284154,-3.506023,-1.882017,-3.387625,4.504229,-3.761963,-2.416175,1.427888,0.874134,3.435896,4.937821,7.423700,-3.463323,-0.864899,-3.972517,0.161869,8.947472,9.093795,2.288952,-1.294933,9.882590,-3.951656,2.997332,9.852571,2.928065,-2.585042,2.764124,9.393111,8.351650,6.442416,-7.635810,5.391232,0.274158,8.302853,8.168740,3.328322,-4.672256,-5.376959,2.054757,-0.533193,-8.538494,6.698377,4.875204,9.661033,8.192885,-9.049681,9.503820,6.887256,-5.846171,-0.780518,-1.575287,-5.718283,7.160719,1.931467,-4.375786,9.619962,-3.218240,-4.778886,7.876909,-3.934619,4.426601,-8.306386,7.301732,5.825389,7.493334,3.956224,0.450510,-8.020128,-2.865282,-0.138260,-0.386146,5.117555,-3.274627,-5.170234,3.972195,-2.395194,5.288953,3.016252,3.144566,-3.363641,-5.050585,-8.128419,8.574417,1.636466,-4.871216,-3.229824,6.921773,-7.401332,-3.864624,-3.350411,1.611471,-8.776444,8.736961,7.526313,-9.734674,1.527055,2.891265,-9.632243,4.944351,-3.034169,3.331763,-7.501487,-3.578461,3.276749,1.783684,-3.722206,-5.064840,1.023024,3.794182,-6.275931,-5.565437,-5.040852,-5.011815,-6.575761,-4.019733,0.085063,6.928072,2.093237,-9.813583,-7.967794,-5.503333,1.383004,4.855799,-8.427136,4.685990,-4.010649,7.240498,-5.464779,-3.519643,9.038898,9.576008,-1.579050,-2.055342,6.791111,-4.022341,-4.727177,-9.037350,-3.690040,-5.548225,-4.301250,1.761945,5.079956,-6.338130,-7.616979,-6.911609,3.345587,9.209998,-0.844868,6.364190,-7.485481,-9.663867,-7.244254,-7.508420,-7.653415,-0.372253,4.346057,-8.471430,-2.328975,-7.222495,9.027345,-9.055090,-2.354549,-5.671174,7.361058,-0.781463,-3.163810,-6.872597,-3.833608,8.574817,1.092811,0.297355,7.169079,3.701547,-7.446473,7.775394,-1.271619,4.698104,3.162732,3.967725,8.902474,-7.262316,-0.009810,2.490987,-9.119946,-7.865077,-2.204457,-8.014170,4.201444,9.342344,3.849449,9.341834,-4.755900,-0.377231,-9.766766,-6.209124,-5.653879,4.267866,7.302481,1.349178,8.565029,8.488676,8.585381,-5.693512,0.067594,0.634719,-6.261327,-4.928071,4.932883,-6.216923,-2.211660,0.217796,9.677333,-7.796375,5.752775,-7.536223,7.999950,-3.276312,6.954286,6.446988,-4.585169,6.206627,0.603435,5.804706,1.172836,-4.792298,-2.712021,-1.748591,2.282131,-1.200215,-6.789281,7.594957,-2.521218,-3.412359,-8.987760,-4.175677,-4.724128,0.432008,5.555957,-1.415973,-0.785141,1.780623,2.430188,7.589050,-6.674293,8.944256,-5.628431,-6.936472,6.092957,4.604238,-2.381792,-6.830666,4.790657,-4.239889,3.737758,3.036391,4.829767,-5.066148,-1.088473,6.147712,-5.091759,0.628453,-6.616301,3.889132,1.909654,2.574280,1.012497,-4.003835,-2.651895,7.153021,-8.575013,6.328393,4.340243,-0.107022,7.738497,-7.559838,-3.711227,8.280857,9.570294,-4.343803,4.725109,-3.032931,-5.165260,8.411308,6.406956,-3.687785,-1.425836,-1.896772,0.790346,1.907340,-0.064471,-0.496635,-3.243051,3.266796,4.794994,-1.230089,-3.535206,8.015250,4.504643,9.697747,7.861617,-1.064054,7.989287,-5.571550,3.754698,-7.744393,8.161257,8.619693,-2.060842,-4.034342,-5.686831,-3.880671,2.052371,2.281122,-5.737367,-9.460060,-2.467462,6.314087,7.878470,7.966652,-3.526094,-7.495701,-1.817429,3.460776,2.433223,-6.520957,-3.689975,-1.448832,-2.884417,-0.610398,-8.128105,8.851486,-0.831089,-6.368028,-4.510722,-0.215546,3.794759,-3.565972,-4.289561,-8.148152,9.933132,-4.294808,0.572337,-3.489409,-0.397475,7.370136,6.581410,-4.480288,3.970227,0.903494,-9.727606,-4.485742,-5.332084,2.620468,-3.702707,-8.329115,7.093223,6.555910,6.498173,-9.045483,4.003546,-3.617530,-7.408928,-7.998736,-1.782156,1.401536,2.838874,-3.522266,3.943376,4.917924,-6.247498,5.853541,-5.287337,-3.094418,-2.822877,3.334354,-6.921713,-3.258899,-3.342972,3.423310,-5.841632,9.695652,-9.358284,-4.973922,-6.161249,-1.776885,0.498533,-7.198024,-9.794936,-2.090373,7.004718,-3.387263,5.517596,9.858578,2.107317,-9.420188,8.889177,-1.964108,-1.406825,1.818058,-2.915366,1.618455,-8.604178,2.626983,-6.954033,9.434257,1.659937,-5.114957,3.239305,8.811110,-7.421193,-5.526682,0.797360,3.719133,2.899897,-7.743310,-4.680648,-1.409857,3.164573,-9.150323,5.294799,-2.726824,1.912512,7.575728,-1.496341,-0.306638,3.510452,-9.305471,2.545098,-1.679588,1.371219,-7.336116,-2.602297,-7.102109,-2.762679,8.672527,-1.108670,-6.592123,-4.013682,-1.310726,-7.640184,3.521924,-4.525371,5.032175,-0.908191,-7.805596,-7.952310,9.401878,4.163470,3.044387,-7.557595,2.531635,-9.564589,9.761067,-2.547113,3.463531,-6.788422,-3.374441,-9.615980,-7.309830,5.847094,-3.186079,9.263847,-6.791142,0.310794,-7.087322,-4.906645,2.526336,5.672926,-3.799754,-7.523479,3.531374,-1.527488,1.336594,4.797097,1.201118,4.376664,-7.103611,-3.022949,7.367150,-1.036706,4.100702,-4.724614,4.176680,1.279449,1.054206,7.611558,-5.071623,-2.048189,0.099279,4.560405,-5.386019,-4.016524,3.031879,9.363629,3.849491,-2.479160,-7.591774,9.165927,5.459870,5.970827,-4.061420,7.494771,0.749750,6.750965,2.027834,3.448693,5.235368,-9.520442,-3.167056,2.409498,-7.842782,6.544413,-4.225486,-8.374920,1.786089,-7.512224,7.798301,6.171929,4.076471,6.304309,4.197995,-4.515219,-1.049825,-6.305340,-0.040198,-9.659153,4.043989,-0.026132,-9.829641,9.465467,-0.912256,-6.978296,4.107123,-6.033469,-5.176448,3.703328,9.805169,-9.679705,3.331539,-1.029444,-1.722651,-4.041260,-9.554299,-1.852464,3.778349,9.733095,2.344810,8.068093,7.532907,-1.705442,2.912236,7.420237,2.665081,7.232186,-7.485298,3.925609,-7.198286,5.870629,-5.761306,-4.979125,8.578454,8.529013,0.002549,-0.356527,4.605839,-5.326987,-5.532276,6.444988,2.833610,-0.417744,-4.501825,-0.572687,7.835736,-3.035625,1.362646,-3.544239,-5.323592,-9.044158,-2.841425,-4.444637,4.976273,0.811105,-7.707923,3.579083,9.612822,-2.336688,8.225606,-9.045656,-3.530974,-5.873017,7.669285,-8.397649,9.314809,4.517662,8.633589,3.214903,-8.723353,0.500050,2.132999,-6.647973,-0.838858,-0.618048,-5.293834,4.450325,9.004539,-3.148008,-1.108128,-3.121748,8.064130,7.864860,2.260322,5.011261,1.218401,7.287876,-6.592724,5.283956,-2.220332,-4.355607,8.607515,2.585010,-3.538167,5.451021,-0.368830,-4.162097,-1.319884,4.238049,-3.662457,7.905698,6.011606,-1.199383,6.986299,-3.735703,6.175497,-5.571190,-0.446003,-2.962055,1.421742,3.046899,3.130328,-5.952460,-0.544145,-5.437687,-1.255942,-0.964984,-5.142694,7.567575,5.079471,6.836503,9.893431,9.586157,3.458601,-8.283040,4.979841,-3.433321,1.524558,-8.073885,-3.214694,-2.634386,1.949642,-0.331722,1.635798,6.799710,-8.909834,1.050236,-3.659895,7.048552,-6.081560,-3.622384,-2.498659,6.312152,0.790569,1.931547,-3.197239,8.794743,-4.628001,8.455780,4.786292,-5.764664,0.408949,1.731190,-8.733387,2.971232,-0.365520,3.639349,-3.723523,-2.665591,-5.121375,-4.059457,7.094759,-2.209804,9.597543,6.094999,-1.428696,-9.144155,-5.173207,1.341580,7.987062,4.158520,6.644999,-4.058589,6.304996,6.048531,-2.474721,-1.473220,4.387410,9.253815,-7.663042,-5.750551,5.580569,-4.627707,-1.651321,-2.348910,-5.691682,-0.830903,-3.963744,-8.529519,7.191454,-1.330761,4.209493,-1.540621,0.159365,7.606752,-4.155488,5.560965,1.564695,7.969776,8.587242,0.895052,-1.572988,9.658828,-8.561103,-8.545670,-0.998878,7.629549,-2.347123,-5.033800,0.658026,3.735022,2.645040,5.058482,2.331671,0.096492,4.106929,-4.271553,-4.434185,-4.928292,8.339936,-5.412443,3.152519,3.691451,7.939061,-7.888455,-7.349766,0.012799,-1.138103,-1.272322,7.654634,-0.335696,-8.008590,-4.936686,3.776142,8.279099,-3.789916,-9.555977,9.727965,3.054109,9.273303,7.477422,5.001099,-4.906514,-9.731307,4.178558,-0.281281,-9.655924,2.238537,2.852674,0.757393,9.712888,-4.453965,-1.082220,-6.299910,5.163163,5.093711,2.352929,6.119898,-3.588567,-6.790152,8.737954,7.143835,1.379605,8.282726,1.773858,0.090528,-6.765801,-7.467668,6.483722,-2.808109,7.921985,0.401339,-1.739268,-3.575710,-9.592115,0.538270,3.923424,6.346063,7.132532,7.876416,-7.416751,9.606581,-7.752059,7.776435,-7.977408,-8.141023,7.572140,-7.310491,-6.672589,-9.552564,0.542396,4.922796,-4.017464,9.439481,0.776080,5.685743,6.857293,-9.909521,-5.330182,6.301395,3.135758,-5.662608,-2.589374,-0.875311,3.858393,3.035360,-3.960986,0.246688,-4.994365,-0.810607,4.189888,9.971643,9.555459,1.043065,5.673097,-9.626031,-8.206507,4.154618,-0.287579,-2.290759,-1.308200,-4.947637,-0.790259], dtype = "float64")#candidate|6214|(1890,)|const|float64
call_6212 = relay.TupleGetItem(func_1041_call(relay.reshape(var_6213.astype('float64'), []), relay.reshape(const_6214.astype('float64'), [15, 14, 9]), ), 2)
call_6215 = relay.TupleGetItem(func_1045_call(relay.reshape(var_6213.astype('float64'), []), relay.reshape(const_6214.astype('float64'), [15, 14, 9]), ), 2)
uop_6216 = relay.sigmoid(call_6209.astype('float64')) # shape=(15, 195)
uop_6218 = relay.sigmoid(call_6210.astype('float64')) # shape=(15, 195)
uop_6222 = relay.atan(uop_6216.astype('float32')) # shape=(15, 195)
uop_6224 = relay.atan(uop_6218.astype('float32')) # shape=(15, 195)
uop_6235 = relay.asinh(uop_6216.astype('float64')) # shape=(15, 195)
uop_6237 = relay.asinh(uop_6218.astype('float64')) # shape=(15, 195)
var_6248 = relay.var("var_6248", dtype = "float32", shape = (15, 195))#candidate|6248|(15, 195)|var|float32
bop_6249 = relay.floor_divide(uop_6222.astype('float32'), relay.reshape(var_6248.astype('float32'), relay.shape_of(uop_6222))) # shape=(15, 195)
bop_6252 = relay.floor_divide(uop_6224.astype('float32'), relay.reshape(var_6248.astype('float32'), relay.shape_of(uop_6224))) # shape=(15, 195)
bop_6256 = relay.greater_equal(bop_6249.astype('bool'), relay.reshape(uop_6235.astype('bool'), relay.shape_of(bop_6249))) # shape=(15, 195)
bop_6259 = relay.greater_equal(bop_6252.astype('bool'), relay.reshape(uop_6237.astype('bool'), relay.shape_of(bop_6252))) # shape=(15, 195)
bop_6260 = relay.equal(bop_6249.astype('bool'), relay.reshape(uop_6222.astype('bool'), relay.shape_of(bop_6249))) # shape=(15, 195)
bop_6263 = relay.equal(bop_6252.astype('bool'), relay.reshape(uop_6224.astype('bool'), relay.shape_of(bop_6252))) # shape=(15, 195)
func_5085_call = mod.get_global_var('func_5085')
func_5088_call = mutated_mod.get_global_var('func_5088')
const_6269 = relay.const([8.654592,-3.824210,-2.044794,2.664054,1.984987,2.956734,1.902323,-0.094364,-5.450676,-9.439676,0.933159,-0.605913,2.481223,-6.944982,-3.775976,9.192536,7.675901,3.364122,5.254067,7.381797,1.484783,-4.867316,4.060156,7.850308,8.848806,1.567078,9.711103,-0.608799,8.670305,-1.455075,-5.838795,6.924729,4.485326,7.640253,8.375845,7.508286,0.756830,2.229443,2.068370,-5.703294,6.356767,3.249938,6.359817,9.324204,-5.036798,-7.042664,-0.390520,3.264640,0.517563,-2.910232,4.362761,9.186790,9.884097,2.586120,4.804294,4.895949,4.623513,-1.500538,-4.322961,5.973433,0.479887,-1.062603,0.265958,2.376499,-6.046105,-9.717871,-9.977694,6.163003,-6.137866,-1.235619,-2.939282,-4.504423,-7.645643,2.579255,7.413552,2.470137,-6.658300,-6.468854,8.593400,-2.446816,4.250202,-4.731506,1.683466,2.012842,-7.704848,5.157088,1.645288,9.936358,-0.132420,-1.331854,6.218308,-8.711762,3.882729,-5.066612,1.492748,0.466937,9.779622,-8.734897,6.317740,-0.973491,7.115966,-5.479550,-9.793166,-1.838335,-1.209122,-5.561412,-8.570738,-9.339451,2.402403,2.430829,2.462596,1.725371,-8.762838,8.113809,5.416262,3.210938,-4.623733,4.021825,9.648756,2.085082,-3.755059,-0.891462,9.694832,8.063328,2.593295,8.598946,0.620015,3.208221,-2.992881,5.820055,-9.620299,-8.391214,-6.402772,6.806106,4.700190,-0.009908,-7.877561,-4.857717,7.547489,-4.807743,-4.022402,4.129428,-5.113869,6.446815,-2.982016,-4.746731,-3.255668,2.532000,-5.889539,-1.370881,7.969156,-5.547205,5.735888,8.494614,-4.509610,1.083766,1.752095,-4.897787,8.684879,-1.077379,-9.948589,9.213276,6.085928,5.020698,1.686848,3.511760,-3.169411,9.086310,7.869170,-2.206053,-4.828207,-4.766695,6.944616,-5.207077,9.725654,-5.369785,7.395820,-8.322450,-3.859041,7.725494,9.522881,-3.957655,-8.650568,-2.198305,8.353708,4.549802,-8.530167,7.606651,-7.895954,0.662861,3.287055,7.039367,4.652224,1.795115,3.758758,0.021737,-5.677179,9.443754,2.692458,-9.978332,-9.240394,1.520203,2.422675,-1.747668,-9.414312,0.074702,2.021725,-1.823391,-5.786998,-2.998621,-8.994176,0.247792,-4.915468,0.572935,-9.536014,-4.179134,7.037785,7.373846,-8.105579,-3.562163,0.497765,-9.708593,-7.007830,1.062115,1.274798,5.922308,-9.770846,-3.302870,2.285111,-6.101112,7.911486,-2.004145,-8.075436,9.042169,-7.469349,0.600699,-3.729395,-1.832764,0.720723,0.142536,-1.070300,-3.617684,7.039921,9.649262,4.802413,-3.327398,-1.729079,4.071938,3.431827,4.859766,8.611238,1.520347,0.899809,-0.959324,-6.773393,8.820596,-5.602359,9.147990,-4.034880,-2.846867,-9.661051,-7.915873,-4.482488,-3.026493,-0.227974,5.680104,-0.551392,0.650887,-0.181339,-0.079304,-0.925626,2.692857,-3.991215,-3.792492,4.372771,-7.813206,-7.258004,-0.046676,-5.849988,-9.756042,5.291080,-1.339078,-0.847767,9.073070,-0.336851,9.910789,3.493352,8.537362,9.001602,-4.378222,5.285429,8.000146,4.292318,-0.932356,-1.420432,-0.951604,-6.088842,5.102730,1.942857,4.309179,1.936680,-5.384656,-1.391815,-8.740781,3.250715,-2.415952,8.200049,-6.254692,-9.162787,-8.660993,6.942656,-9.855699,-2.545330,9.301308,-8.698464,7.942780,9.367371,-8.687843,6.005518,-7.668532,5.194706,2.846257,-9.425355,8.959354,-8.844488,2.735356,-4.957583,1.440466,3.885318,-0.127247,-8.743926,4.627860,1.624005,2.073631,-8.541974,-5.201768,-0.900632,-5.909467,6.081085,5.182971,-6.798362,-4.883044,-2.773248,0.892500,-0.390812,0.848625,5.455410,-8.891908,-3.839385,6.266282,5.060034,-3.230964,-0.114551,-0.109578,-1.395586,3.788467,-7.093212,-0.374050,-7.502290,3.701268,0.501747,9.125359,8.754059,-8.221663,0.203300,2.305414,8.019921,-3.289962,-5.024284,6.426919,6.959354,1.492982,-0.320684,-3.406844,2.383798,6.374094,8.464286,0.235765,2.694224,-7.240946,-1.893618,4.861031,-5.582660,2.180657,0.550256,6.508859,7.378390,-2.480396,-2.191985,-5.050892,-2.343365,1.118058,-2.664851,2.248825,-5.708954,-5.915732,4.578463,-0.470924,-1.411957,-5.391765,-8.593169,-2.524307,1.022592,-6.624825,4.225362,8.116059,-4.668657,1.149361,-9.235202,-4.761276,2.029696,0.738800,6.651364,-1.138291,5.843372,8.922229,-6.852305,4.107405,-6.811344,-9.719391,7.046084,-2.455207,-8.374769,-3.652152,-1.996236,2.909030,-4.803401,-7.807523,-0.925541,8.051005,3.902932,5.115762,-1.802006,6.720816,-3.413848,-2.775588,-0.423650,-7.741906,0.594683,3.097188,9.920541,7.464195,6.651436,5.219193,-8.737083,3.191202,0.950835,0.710660,5.015289,6.631418,-8.776225,0.770385,-0.840737,9.575559,1.567907,3.222036,8.132439,-1.051693,-9.174452,-7.473217,-3.628125,-6.460804,6.049932,6.289336,7.514763,-2.899234,-8.742265,-1.203914,7.285165,-5.369324,-2.304098,-0.699438,-9.570780,-0.391800,-8.923957,5.324811,-9.111226,8.285189,-3.061026,-3.472157,3.694097,1.537378,3.558384,-8.574512,-5.411648,9.244212,-2.824307,-0.875881,-2.651874,3.414383,-4.141208,9.027252,-1.197277,-1.522743,2.852906,-2.984278,0.511595,-2.825816,2.106512,-3.942873,-6.873592,-0.568452,1.288329,6.132673,4.172799,-5.107240,-9.171430,-4.219123,-6.808381,9.101510,-7.222462,-8.396089,3.019687,-0.082244,7.264598,-3.850826,-6.465452,-1.377742,-6.991009,8.964969,-6.770324,5.119965,9.461264,-3.907996,-8.991023,2.085103,8.494552,-8.228868,-6.660673,-4.821917,5.878056,0.734583,9.571797,3.362481,-2.405533,-2.040491,4.268541,1.073164,9.817460,-9.030812,5.907986,-9.194988,-1.732737,9.239251,8.109186,-6.500352,4.538399,-9.640765,-7.036760,-5.446087,-7.055751,9.932104,-3.824335,-3.758205,-7.386058,6.823015,-7.392947,7.555195,-1.269956,-0.916372,-8.404906,8.107186,-4.125523,-7.339963,3.899157,6.820485,9.605512,2.226717,8.830950,-6.698068,9.882371,1.514334,1.788631,-5.796355,-8.809696,-0.507195,3.690536,-2.118417,9.715105,-8.704787,1.679501,7.322557,9.524850,-0.006011,-4.995414,-1.238446,-1.753184,-0.192686,-0.888680,9.485709,1.635850,9.710840,3.236418,-7.916058,6.425641,-5.271124,6.462465,3.816638,-2.957409,3.353032,-8.530407,-3.382887,-1.931984,8.498629,4.123441,4.478283,-9.277940,-2.071714,-4.172973,-9.602539,2.545789,-6.456919,-5.816536,8.452669,5.592254,-0.519734,8.282660,-2.841534,3.094843,-9.995412,-3.348495,8.589714,9.838826,4.759746,-9.769769,9.520361,-7.346288,-8.379157,7.466180,7.849000,7.181852,3.172109,0.153354,-2.391598,8.886536,6.872131,-8.533008,-0.743008,-2.669854,2.805572,6.184532,7.593993,-2.473835,6.221591,8.932319,-9.287509,-9.996532,1.846321,1.985083,-9.266101,5.994009,-6.158902,-2.974490,8.934402,-5.653876,1.365028,4.504566,9.165054,1.587142,7.694699,-3.477256,6.174879,1.736173,-8.185621,-0.534516,0.648424,-2.487968,6.501701,-6.379285,-6.859676,7.503414,5.418924,-3.501042,-9.485248,1.111478,-7.883098,3.519881,-9.991429,3.684910,3.413282,3.657248,2.359831,-5.063998,-8.831110,0.758172,-9.259743,-5.713383,3.596917,-2.207049,-6.010581,4.835106,8.842152,-1.177862,-4.420527,-2.461033,3.091534,-4.004216,-2.842283,5.520079,-9.470767,2.766820,0.733682,-5.633337,-1.746375,-0.960818,-1.870703,2.394483,-7.200791,6.743654,4.308086,-1.651592,1.110707,0.425983,-6.672410,-1.989130], dtype = "float64")#candidate|6269|(715,)|const|float64
call_6268 = relay.TupleGetItem(func_5085_call(relay.reshape(const_6269.astype('float64'), [5, 11, 13])), 0)
call_6270 = relay.TupleGetItem(func_5088_call(relay.reshape(const_6269.astype('float64'), [5, 11, 13])), 0)
const_6276 = relay.const([[-5.234978,5.864309,-0.866989,-7.933786,9.306858,6.586787,9.344172,3.239000,4.862349,-2.175648,8.722103,-3.876838,-8.434501,-7.847785,-7.985424,5.683962,0.846675,0.713765,-0.392381,3.979395,-5.440359,3.829640,3.741195,-7.693634,-2.980655,4.102715,-3.580724,-2.101053,3.717574,-9.040110,0.875550,-8.493584,-3.932554,-1.832548,-4.887357,6.430532,-2.886411,-9.480815,0.858377,-8.767215,4.747199,6.024346,-2.059950,-6.767794,-9.490320,2.719925,-5.471483,-6.884089,0.824768,4.174225,2.987838,-7.676993,-0.639156,7.623719,-3.975581,4.221019,6.839963,6.555834,-9.425361,1.199170,-8.494552,-0.219266,9.782844,-9.628663,-3.692860,-1.779737,-4.231429,5.259808,4.375602,-9.056717,1.133410,5.650953,-2.660395,-6.995771,-4.147229,7.816364,-0.557310,9.750419,3.749083,5.478141,-6.183888,7.448990,-5.575469,0.271777,6.673123,8.871893,0.530447,6.020116,-6.970987,-0.580997,9.499415,9.210984,-5.144509,3.316146,-8.298800,2.280734,-2.684320,7.772988,2.537720,-9.180246,-7.529017,4.735767,-9.519300,3.132718,-4.191572,3.116223,-7.159593,-9.701117,-1.925455,-7.984606,-1.435131,3.894601,-2.661313,6.378592,9.426308,-9.398036,-0.992477,9.464814,-1.240710,2.323356,-5.206104,-5.224689,9.932812,5.672977,1.609323,1.531612,7.954998,-3.497068,5.834922,-3.465838,-8.140869,6.235210,-5.798941,9.923106,3.951531,-3.438158,-8.094737,-6.891658,8.811640,1.753781,7.995645,-4.492623,1.472507,-3.130835,-1.105048,0.863040,8.408327,3.362611,0.792153,-9.096362,5.724404,-0.861867,-4.505370,-8.896659,1.824941,-4.089805,-1.681819,1.346802,4.137380,-9.073319,-5.882131,-1.807019,-2.970161,-1.167080,5.739068,9.007796,6.397232,-1.417711,-7.227254,0.422526,-6.038674,5.177053,-8.397600,-5.809809,-5.487185,0.808113,-6.787831,0.609778,-4.539246,-5.675203,-9.698053,-1.688804,2.956544,0.899953,2.851861,5.117739,-6.143245,-3.477839,-9.945016,2.432447,-1.379660,7.207219,-9.290183,2.935604,-4.034028],[-7.707036,6.247517,-3.938948,1.850459,7.825081,-5.939447,-8.719981,2.187697,5.722177,8.717971,-0.576776,-1.318926,-9.766802,-6.719545,2.086462,9.651615,-5.416219,-5.487690,-9.460662,-9.204309,7.297227,-3.504791,-0.086066,-1.101830,1.485684,-9.651161,4.583505,-7.729531,6.430451,-3.178343,5.971951,3.016741,-8.178368,1.981135,7.080662,-6.427731,-7.400610,8.771045,-7.297444,7.518406,0.914951,-7.442753,-3.097215,4.788037,8.172423,-6.887551,6.998140,-7.872731,8.256846,-9.965970,-6.162304,1.022418,-7.837730,0.993512,1.315498,-1.106900,-1.852967,6.148401,0.153870,-2.030702,-1.540569,-4.088057,-9.262653,-6.474583,-3.054139,3.010564,4.371108,2.032179,3.392911,2.677534,1.177601,8.507709,-3.897436,-6.079786,9.068528,-3.635872,3.002947,-6.110297,-2.101943,-8.443637,7.698082,1.514963,-6.587862,-3.640062,4.158131,-8.900907,-7.624307,-4.525495,7.735104,-6.774077,8.224309,-1.501082,4.522702,6.290300,3.118027,-5.041332,9.993661,-2.626198,4.997840,2.673785,-8.482987,7.121405,9.944519,9.472997,4.231618,-6.251026,-8.541717,0.371857,7.514607,5.803696,-8.234421,4.893230,8.456378,-3.809300,3.208000,2.568413,2.614351,-8.102000,-9.355520,5.513581,9.715021,4.788172,0.378551,-6.354449,3.250418,3.052376,7.360850,6.770077,-8.169557,3.824179,6.636040,5.134450,-5.170548,0.480004,0.891725,-1.983081,-3.797876,5.961359,-7.523912,-4.129584,1.672626,-5.456433,1.996999,-0.162281,8.091660,8.853355,-9.739578,4.686716,-2.460294,-6.020021,-7.938940,-7.318165,-8.187273,-3.084061,1.704933,-0.376966,-6.735236,-4.275812,-4.099301,-4.184382,-3.422759,-8.494006,-9.379965,8.753360,-5.645994,3.493193,-7.382751,-0.316386,5.668051,-9.013615,0.505849,1.434199,2.350885,1.041202,-9.244855,9.118117,3.070565,-9.481788,7.338290,-7.953478,4.951672,-1.410755,-2.298370,-3.316125,6.525808,-1.995387,2.286116,4.360590,6.533193,-9.994124,-3.591890,6.589717,8.968271,5.187765,4.240318],[-1.546920,2.158214,7.974519,5.328933,9.362959,-9.622076,-2.518429,-6.341488,-1.074838,-8.975783,5.568899,-4.127445,2.543000,-3.126891,-6.489409,-1.603495,-5.662108,-0.121365,7.014938,0.043050,-0.141212,8.377201,8.503413,-3.820945,8.346212,-1.851793,6.192447,5.447465,-9.798210,-8.570620,-6.706888,-1.813854,-5.791276,-3.869919,-3.707078,1.734662,7.566896,0.889621,-4.243273,-8.932251,8.042791,-5.756737,2.107832,5.169768,-3.588319,-8.587313,-0.006390,3.688402,2.336206,2.012358,-2.143134,8.078465,0.611982,-5.559094,-6.724469,3.552896,-2.369364,9.051168,-2.936036,7.440237,-8.122271,8.356280,-3.590668,1.280173,-9.035396,-3.346503,0.616472,-3.856732,-5.874398,-2.183337,5.404497,-8.894870,-7.940639,9.624258,-6.481917,1.415004,-2.884866,-0.265684,1.475269,9.592125,-7.545412,-7.597574,3.777191,-8.968471,-2.288912,-5.859351,-1.120991,0.178269,-3.799841,1.998791,9.581675,1.636673,9.236484,4.648705,-8.212132,-3.244646,-0.108431,-4.021478,6.462553,3.846734,-8.980347,5.907993,9.813647,1.411375,8.256516,-3.277659,3.939951,5.277574,7.915381,9.998156,2.139767,-2.508648,9.088986,2.110021,4.934480,-3.524305,-7.007162,9.239194,-7.295629,-0.077141,5.810764,-5.992500,-5.226003,-2.383550,-3.086874,2.407903,8.366846,3.642153,4.464151,-5.633143,-0.986338,-4.887191,-7.734890,-6.098110,-8.674544,0.379491,8.705813,-0.122545,8.407021,-9.968356,-8.458881,0.029650,5.181640,-5.606849,4.650662,-9.913432,8.027815,-5.639604,-7.271069,-5.503733,3.075804,-3.945534,-9.883576,7.862109,2.974378,3.577192,6.395951,-8.146519,-1.197550,1.908026,3.201113,2.615848,-6.593211,-3.099712,-0.209423,6.607180,-8.400676,-1.365941,-4.571335,-0.037946,1.744382,-4.659105,-1.847808,-1.901109,8.863047,-6.157618,0.245078,-9.369745,-5.929135,-6.604930,1.132107,-0.545931,2.944087,-6.372142,-3.042250,-6.045941,7.469155,8.374909,4.424318,-4.723924,9.419099,7.271144,-1.312691,3.575709,-9.172444],[3.980441,4.145671,-7.077064,-8.926852,6.241022,3.869360,7.653758,-5.842366,4.863084,-5.916852,-4.590307,-2.054599,-0.559707,8.031333,7.673971,5.853442,-7.346114,9.291356,9.309715,8.013386,-9.217941,-9.611618,7.578925,-0.860091,-0.158380,-2.724751,1.030569,-7.827372,2.279577,2.583076,-4.793583,7.946803,7.042755,4.316468,0.536893,0.948626,4.401147,5.007992,-1.779965,9.303378,-1.225760,-5.496989,4.211734,7.288868,-5.280993,2.173440,9.122722,6.077801,3.430457,4.427077,-5.087835,6.504295,7.584885,-0.903702,-0.249505,-2.853546,-1.801921,-8.517138,-0.544736,-7.739140,-3.850171,3.990767,0.948875,2.716236,2.976870,1.683862,2.426130,0.295031,1.521632,6.256816,-5.091019,-1.729853,-6.791805,-1.208466,-4.184824,3.757192,-8.159167,-6.271321,-0.576729,8.713064,-1.920202,6.653885,9.581892,-5.348195,-3.973000,-8.461500,-5.989912,6.493780,-7.084208,6.865313,8.992498,8.756967,3.860508,9.481254,1.731118,2.027265,3.368977,-8.763482,3.745093,1.449625,-5.378377,-7.382712,-2.109720,4.174645,9.373703,7.233988,2.857060,0.148645,-6.295508,-5.952621,7.098689,3.097368,-7.673007,7.150891,3.421748,-6.470102,-5.813406,-6.394106,-3.450745,5.554360,-0.683621,-9.829365,-5.368853,-3.586674,-4.814593,-5.267324,-8.796808,-4.460815,9.188334,-5.408871,-1.682661,-9.921808,-5.380393,1.942237,-6.752715,-7.900731,1.643958,2.011405,-0.063368,-5.608904,-6.073905,-5.344359,5.606902,-5.079654,-8.332616,8.908055,5.020404,-1.855590,-6.710130,-4.184453,-1.611857,5.225173,-9.624924,0.116536,-2.238903,0.349041,4.073175,7.080123,6.183856,5.173660,-4.475969,-1.779645,0.720098,0.762811,5.709146,-3.949496,7.117049,5.451735,-3.374812,-5.888123,2.016809,-1.128122,-7.391632,8.325667,8.259316,5.046448,4.402578,0.897063,-4.297486,-9.223959,-3.032653,-0.390651,-9.414955,4.901826,-9.042570,2.628590,-1.362066,-2.352292,0.904838,-7.915840,3.204663,-8.325776,3.394293,6.893918,8.971299],[6.302210,-1.311165,3.581255,-4.523362,-9.850610,-3.978613,-1.234166,5.296357,5.621846,-9.536161,1.751528,-0.453614,-6.642168,1.123740,4.772466,1.039660,-1.962885,-8.090915,-3.795820,6.230112,-6.802612,-2.141831,-7.493030,9.648894,-2.869086,1.459174,1.762147,1.125784,7.262968,9.048014,6.265934,-3.623431,4.227658,2.933013,6.895968,-3.560158,9.865195,-4.671659,-7.270337,9.365314,3.818554,-0.783898,-2.824312,-6.341475,-8.986211,2.119833,-0.066480,5.229659,-0.420692,2.665506,9.817154,0.633171,-8.399166,-1.739908,-5.684938,2.071713,-3.256010,-4.398719,3.304547,1.358788,6.745242,-4.669905,-0.018929,7.875932,-2.659238,-8.687352,-6.803181,-4.183045,6.919693,2.814936,0.302842,1.634645,-0.746786,-9.990429,-9.373859,4.919095,-8.684407,8.480799,7.694976,-5.411262,2.257711,-9.084943,-1.148373,-1.928142,3.334525,1.272778,-1.000300,2.919761,7.536517,-3.129273,8.647640,9.430105,4.703072,-8.089813,5.294414,0.017137,8.579394,-0.157127,-9.715812,2.229739,-1.593627,-8.107306,3.498386,7.668378,-9.903847,-9.587691,0.977408,7.414209,-1.455277,4.137244,-8.209344,-3.240102,-3.070849,-0.196162,8.646559,0.578669,-4.772878,-9.901254,6.142709,-4.218237,1.157655,3.181814,-4.767977,-6.887031,-7.581572,-0.527010,-3.502211,-7.927412,9.230843,4.601970,-9.758000,-7.459151,0.780131,-1.369717,-3.910803,-2.981983,3.181744,-6.824683,-4.535521,-9.079244,2.487971,-4.705006,6.569976,-2.174641,3.329506,0.906656,-4.099400,-0.425481,-8.695208,-6.553105,-1.602690,-9.714503,-6.254717,0.024098,9.791026,8.829955,5.924716,-9.303864,-2.745124,0.057986,7.854538,9.451320,2.477880,0.483575,-9.451250,-3.356519,-5.758056,-5.740313,-9.096185,8.829766,8.376200,-5.748829,-4.533527,1.363737,0.756571,-0.588554,3.051273,8.568720,-7.080708,-9.352387,-7.780555,2.444375,-8.563529,-7.113223,7.085055,-2.168886,-4.248414,6.459525,-9.090413,-5.859220,-7.742463,-8.714885,-8.709515,-4.439747,-8.740629],[-2.883820,5.506629,0.097029,8.930223,-9.521186,4.159021,-1.052240,1.309596,6.400179,-6.028623,-3.134997,-2.753353,6.176358,-1.323162,6.299377,-0.155972,3.329599,0.112406,2.221149,-9.588050,-4.371747,9.745580,-7.253753,-9.612413,-6.752849,7.450109,7.341934,2.085743,-7.539540,-4.159853,-9.660656,6.118405,9.651267,-2.815023,-6.407831,-3.146616,-2.456389,8.768628,9.961240,-3.552324,-5.589579,-2.336621,-4.449617,-2.014609,8.817567,-1.269606,-7.071019,2.326858,8.426422,-6.713294,7.929252,-5.863548,-0.462435,-0.391987,8.107533,2.516558,-8.740210,-5.763577,5.561405,2.092280,5.373872,-1.654690,-5.614236,4.366385,1.238255,7.683694,9.571606,9.607693,6.521711,1.648992,-7.401635,-8.744137,-8.892031,4.322972,-7.734832,-5.635064,9.165737,3.755670,-7.866291,5.909067,-4.789576,-4.448509,-3.283367,-6.243532,4.642243,-3.417319,-1.335104,-4.888379,7.349553,1.017756,9.951654,-2.209928,-1.221802,-5.629114,-9.352314,5.332585,-1.221045,-3.846999,4.537760,-1.054749,-6.508044,-5.034728,4.923120,5.418221,4.682084,-7.859991,-8.388551,6.431843,-0.607408,-3.378865,2.173256,-6.667981,6.648284,-9.200000,4.506450,-3.091281,7.876763,-0.177848,1.243854,-2.747005,-3.701437,3.324423,3.728239,-2.413922,-8.836283,-9.001361,-8.547798,9.412656,-1.401547,-4.468363,-3.227086,6.926789,9.048600,4.355690,-1.294760,3.765592,-8.547975,9.433051,7.300940,-1.830742,-5.821784,6.835633,7.346800,4.974880,-5.349258,8.168154,-1.250485,8.273530,-0.042767,-8.490135,-4.145820,-6.440573,3.139646,-1.643664,8.001975,-9.169728,4.333460,-0.455592,8.330703,-7.945075,0.009792,-8.341977,2.809560,4.105311,-1.696626,-8.861461,-1.914287,-0.886328,-9.359017,-0.620471,3.022248,-2.050557,3.225953,3.218058,-1.161737,-0.860372,8.183535,6.040684,-6.606775,-5.236964,-6.943528,6.453378,0.797682,-1.021376,-4.488261,9.471725,-1.922052,0.775937,-7.938375,-4.068751,-7.848848,-5.008549,8.804715,-0.071496,4.323258],[2.640725,6.961479,-6.082867,-2.471844,1.048397,0.324543,-7.875478,-4.604229,1.438389,-3.240876,5.136082,0.581521,-3.381873,6.691744,-8.508070,0.010019,-8.174177,2.163652,-3.700874,-9.252841,-4.389273,-8.365827,6.305470,-8.518453,-0.561379,-1.050625,-9.112369,2.474537,-4.915450,8.034095,9.792199,-7.000215,-6.812455,-8.921083,1.942017,-9.828783,4.586160,-0.742393,6.505352,4.949238,8.143298,4.074556,7.523100,-7.199507,4.416173,2.798074,2.431038,-0.337577,1.910167,-2.541041,9.449507,-6.929445,0.400294,4.193448,-9.179142,-4.990275,-1.790397,8.630675,0.363040,-8.698332,7.847691,7.933452,8.292139,-6.033912,4.619696,-8.739600,4.420480,0.476595,9.275745,9.589935,5.103072,-0.083148,9.295637,-1.822770,3.467392,6.843807,-5.128989,5.579716,5.851363,-9.835723,-9.477910,7.512785,0.210503,5.131512,-5.748643,-7.485810,-5.176680,4.152571,-9.138844,-9.035793,-7.385617,9.247633,3.209538,8.981289,-4.020200,9.401404,-2.649360,9.857367,7.825508,-6.351922,8.605639,2.414907,0.061978,-4.891781,-4.376887,-9.175302,-1.743199,1.425654,-9.804246,-1.826822,-1.856586,-3.088754,3.583731,7.289021,-5.984889,-4.986702,-0.639743,6.624202,-5.422061,-0.361205,7.191429,-5.308183,-4.873137,5.873534,-5.307446,3.792764,7.532436,5.670444,9.408914,2.971607,-4.432017,-0.866707,9.262724,2.763303,9.714758,6.660775,-4.869283,-5.119814,0.707988,2.145557,-9.677072,1.978814,-0.495735,-7.266860,7.968489,8.019792,7.463846,-2.335453,-8.614573,-1.718150,6.443820,-7.823640,6.809064,-4.373954,-3.960090,-4.108660,5.191723,-9.392169,-2.937205,6.259379,-6.177841,-7.822603,-4.421791,-0.270211,-5.617994,-3.315631,-7.249590,4.122258,-9.851561,8.372345,7.551314,9.317652,8.962134,3.670503,-9.644253,0.594285,6.132678,-6.554262,-1.202661,-9.492925,2.035590,1.637018,4.839459,-2.047460,-8.418180,-0.402433,4.702594,-1.110066,9.787380,9.059841,7.023378,-4.593552,-3.535037,-4.216808,-5.726703],[7.354449,-9.405518,6.181785,1.055577,7.126080,1.286155,2.634246,9.108444,2.242602,5.210848,-1.862953,7.483569,-2.962685,3.475442,0.503326,7.253490,6.857847,0.990895,-8.790004,-8.296974,-4.518065,6.760480,8.334137,-8.387287,-8.882589,0.226440,-0.998437,6.787608,-0.765613,5.899474,-1.434918,-9.325067,-0.391784,8.370004,-6.160322,-6.409177,0.139609,-3.774892,-4.872826,-6.828096,8.880808,4.213550,-3.779502,-8.919820,7.437316,-2.440427,-4.576122,-3.305679,-9.826963,2.979760,0.662668,-9.266628,-2.169517,4.675557,4.393027,9.991677,8.992755,-6.556477,5.618460,-0.127289,-7.084962,3.987191,5.314175,-1.303115,1.766913,-8.464579,9.478375,5.935852,-6.412265,4.002233,-2.449766,-7.498214,4.276066,-6.547067,5.209500,-5.248462,3.795048,-8.237214,2.781417,1.979618,3.072191,8.455919,-7.125528,-9.766777,-6.358035,-3.762796,-0.599606,-5.547558,4.651263,-5.384497,-8.843988,-5.747864,-4.239889,-2.861807,6.446623,-5.134000,-6.292605,-6.667219,1.296452,3.964003,-6.686322,-5.056140,-5.831945,-6.418317,1.055188,-0.233762,4.738094,-4.723143,8.498878,0.418213,-5.395933,3.608878,-0.060804,0.422976,-2.886702,8.769369,-9.901803,3.056488,-1.395368,-4.084075,5.242935,7.924345,6.177199,-2.497215,1.680839,-0.058401,-1.659138,-5.974673,7.882333,-7.180020,-9.832160,-5.486265,4.667066,0.624756,5.688100,-6.680179,-7.674660,-5.447561,2.885099,-8.749165,-3.254746,-0.895598,9.942150,7.788727,-8.571323,-3.841283,3.069713,6.922271,8.277376,1.269181,-6.067028,4.010074,8.302964,-1.046202,-7.722275,9.293523,5.527808,8.866068,-6.414857,3.352321,-1.035044,0.076121,-6.614968,6.688021,4.181273,0.428602,-4.536798,-1.884540,-3.710289,-0.717956,-6.373643,4.195021,2.655550,-2.665180,-5.987948,-4.791909,4.397005,-4.515465,-3.529599,6.724859,-6.604423,3.316119,1.951062,2.392799,-7.474858,5.978364,3.001917,3.633893,2.392599,3.386214,4.189484,4.870390,1.823193,3.621284,7.286647],[-7.368302,6.829382,-5.628742,2.964462,-3.778982,1.948140,-5.137111,-5.922927,2.519761,4.215056,0.991165,-6.891572,-5.317894,5.458739,4.081462,-7.313073,-3.583389,0.918354,0.553074,-6.468966,-8.693252,0.948531,7.122290,-8.585325,9.293035,7.425008,3.834657,6.860188,7.542820,7.356973,6.621164,-5.095784,1.897000,-3.047104,9.554563,-5.807727,-9.824861,-5.255092,6.203661,-6.108820,6.367106,-8.513903,2.775899,-3.086180,-1.773553,8.256728,6.393111,1.858712,2.717283,6.749350,3.934624,1.555831,5.878394,9.775940,-4.921422,-6.959158,7.012795,-0.184618,-6.474729,7.396049,-4.411697,2.392860,2.558937,-2.715808,-5.860931,5.203753,8.959373,-6.637674,-7.576968,-3.435923,0.339415,-8.846355,0.862741,-1.729795,5.655531,-1.591436,-5.902056,-3.446544,-6.107511,7.978907,-5.004082,-1.933925,8.464360,8.449643,-8.112869,-7.978874,-4.920341,-2.999412,-5.065056,9.680360,2.784903,2.338029,7.939622,8.734118,3.546485,8.610340,4.534367,0.867264,-2.983634,-1.424276,-2.701438,-8.114424,-6.643151,-1.905658,0.187929,-7.754192,3.032625,9.325630,9.409159,5.176288,0.134954,1.557535,-2.081764,9.131151,2.287135,-6.742795,-7.833462,-4.812813,5.401859,1.248492,-8.084075,6.518263,-6.965542,6.553613,1.348294,-1.938603,8.813101,8.516239,-6.446617,-2.213228,3.978364,-2.495252,0.535632,-5.414260,1.089330,-1.370255,1.111734,-8.726331,-7.932520,-7.576545,-0.079236,-5.133779,-1.522735,5.690187,-1.699887,-3.384703,-6.794534,4.494197,4.538088,8.309588,-8.331762,-9.607083,5.717368,8.064061,-1.278074,-3.122709,-8.023537,-5.393200,-6.670781,2.914986,7.084658,-5.028268,-7.820980,-2.533005,4.552673,9.994724,3.034825,-8.642753,-4.804610,-6.698872,3.686525,1.262285,3.273646,-4.578561,1.869258,-4.053024,2.370154,9.085775,-0.659913,1.453058,0.086448,4.240609,-9.860196,3.946472,2.521148,-6.508279,-7.109067,-2.603638,8.688467,-4.471434,6.744108,-0.717271,0.254435,-8.618111,9.282979],[-8.325561,-9.590902,4.822089,3.323595,0.378522,-5.997773,4.956652,9.261756,-9.525645,-6.757739,-3.462320,2.936466,-0.320103,-7.038924,-2.098159,-0.517065,-1.315389,5.738607,3.077277,-0.424438,7.499268,-3.351475,-1.040439,2.806059,2.356606,5.833764,6.411471,-9.827123,6.297739,-6.416744,-7.393303,-1.030345,-3.113553,-6.898681,-4.037840,-0.910916,0.200975,-8.637298,2.973261,-0.706041,9.928880,-1.654087,-8.790147,-2.753232,7.316596,4.784869,4.085871,-8.010173,5.975773,-1.284050,5.254223,-5.949839,6.085596,-3.342724,-5.974399,2.113173,-6.533964,-4.799422,-3.647784,0.823322,3.483127,7.486960,-2.862108,-0.587821,-8.137732,-4.161751,-4.305001,-6.860106,3.071452,-2.297905,6.755389,-9.534007,8.316938,-3.329765,7.534834,5.517500,6.058243,-1.419391,-6.046146,8.606979,1.543903,-4.866125,-5.923751,5.817110,-1.318418,8.121057,-5.044345,9.662774,-7.385841,0.894017,6.063629,6.180834,-5.589579,8.996636,-8.638835,2.080387,-0.490933,1.038042,0.047534,-0.343048,-4.886157,7.048921,2.582655,-0.286512,1.635759,-1.174996,-9.498900,2.150633,7.907991,2.244791,4.933579,9.766353,4.992030,9.755351,4.006847,-5.134687,4.227482,-1.746793,-5.933196,5.715709,0.967943,5.370929,9.520094,-4.912574,8.151425,-8.031132,-1.326356,-9.288818,8.364359,-8.905978,9.869510,-8.887787,8.680461,-1.784433,-5.951927,4.017070,5.885442,6.957461,0.627495,1.803537,-9.389362,9.961157,8.222023,-9.537243,0.731780,0.808421,4.222807,-4.397509,3.752340,-1.171448,-1.273427,9.567896,-6.190548,-3.921811,-3.711131,-4.788717,8.226936,6.560579,3.766485,1.170390,5.108969,-0.498403,8.501714,5.901541,3.720044,-2.851589,2.702586,1.405808,-6.518117,1.402412,5.931819,9.555145,0.958046,5.889815,-2.803686,-9.182363,5.769051,-3.572939,7.396118,3.003244,-5.904345,-2.549502,8.482924,8.330929,9.891820,-7.017080,9.800293,4.801290,0.892563,0.535725,-6.515490,5.989896,-8.242262,-7.136946,5.136250],[-3.722961,0.753925,4.958399,-1.935903,-9.392166,5.437156,-1.130460,3.675000,3.958440,-7.110257,-1.039004,-1.663615,0.213980,-8.343698,-7.119154,8.794807,6.333610,4.392482,-6.567821,5.267914,6.858381,8.399719,7.042948,-8.767046,3.175201,-7.080257,5.468086,8.466161,5.032559,-6.491472,1.084492,7.296025,-5.443256,3.735039,-0.878952,3.369819,1.511939,-5.857585,0.386316,-8.906529,6.912151,5.435434,9.650315,0.698561,-2.243012,6.343637,-9.261950,-2.730825,3.725214,3.407478,-3.751172,-0.883837,9.343967,1.645010,7.049191,-1.174741,-8.222367,0.983433,-8.224489,-3.072083,-9.376072,0.245877,-6.691383,6.046951,0.767802,-2.034386,7.082188,-1.663894,8.348799,-0.786675,2.619688,0.622968,-9.073250,5.000695,-8.596161,6.415025,0.349635,6.277040,-3.324325,-6.001290,8.562400,6.300135,8.872623,3.710753,2.012071,1.501411,-0.643217,-4.655548,6.875441,-6.895990,-8.604940,-0.748508,-4.912262,9.186717,-1.462187,-4.170944,-7.884644,-1.417018,0.322460,-1.690863,8.202744,2.769018,2.863186,-1.709607,-8.750451,-0.061401,-8.618632,-0.105283,-1.769500,9.187584,3.540848,-9.416377,-6.392146,1.628388,-3.468314,-2.227292,3.821316,-5.566796,-6.572005,6.780554,2.189391,7.154766,-3.992602,-2.643830,9.621112,9.887831,8.818593,3.089755,1.854089,-8.488065,-5.480477,7.989972,-7.006518,-2.355762,5.916944,2.540213,0.395354,-7.672042,1.857470,-9.361966,4.011666,0.429996,6.942322,-7.931404,-2.220905,1.963536,6.374216,-6.084059,-4.314576,-2.029390,7.056497,-8.853530,-2.288444,-6.211682,8.700965,8.914199,1.397630,7.245535,5.256897,4.780671,-6.304402,-5.568062,8.850134,-3.054322,-0.800935,8.130656,-0.379586,-0.869750,6.338849,-0.871638,-7.264292,7.898970,6.754540,-1.284464,-5.724966,-6.110262,-5.010157,-2.272056,7.696941,6.881305,-2.995449,3.149584,-9.390875,1.289953,8.020859,-9.936834,1.669802,3.472071,9.517804,5.277143,7.016658,-2.518061,6.133273,2.933947,0.878713],[-9.720831,-3.676096,6.171481,6.713004,-7.236890,-8.444860,-2.828551,-4.972892,-2.708655,-8.923371,7.815464,9.278415,8.692446,-7.550895,-8.501815,-6.018513,3.746972,-3.857095,9.218054,-6.790515,-0.492326,4.509522,-4.954661,-9.509582,2.155941,1.809020,-2.914431,-8.308245,6.513168,4.775790,1.991598,-1.094695,-7.640480,8.878959,-8.247314,5.315569,-9.248744,-4.923968,-3.957063,-5.071383,7.777134,-3.884211,-4.547347,3.249720,5.602249,3.723506,-6.632504,-1.340719,8.486227,9.571299,0.205389,-1.985288,6.786440,-8.702170,-4.054670,7.715240,-7.143478,7.656367,-2.256165,-8.527694,3.816311,-9.108856,9.429541,-6.263126,-5.381398,6.892763,-6.607198,-1.385307,-5.291105,0.535298,7.696866,-6.901549,-2.178021,-4.710926,-2.329008,9.247639,3.271713,-3.388027,-6.197965,0.932766,-3.408456,-5.883247,-3.384192,-7.944123,7.881216,2.716414,-1.240368,0.133750,-8.957076,4.986800,-3.257187,-0.757360,0.655993,1.946416,-8.054461,-3.355884,9.571167,6.121633,9.803975,-4.627548,-5.476176,7.870407,7.933759,1.634557,9.372820,-5.800382,7.105826,2.943375,4.226410,-9.409316,6.300610,-4.852798,0.217961,-8.418603,6.181912,-4.698185,4.484875,-4.847330,-7.600381,-4.039919,8.541557,5.377798,3.820973,0.043179,7.451433,-1.801584,-2.405742,8.545189,6.465710,6.808527,-6.103011,-6.172589,6.534675,-8.499581,-9.116734,4.179472,-8.778918,3.477118,4.775075,-9.525260,-3.954390,9.467778,-5.881719,0.685375,8.589585,-8.166557,-0.288972,3.704872,-5.536310,3.802934,-7.314829,-8.673100,0.580215,-8.031167,-1.281383,-2.566189,-3.761820,8.018697,-1.279969,-2.368522,5.544284,-3.350316,4.719846,-6.537917,0.621066,-7.912145,-5.567507,-7.877263,-4.324712,0.678655,-9.345166,-8.510462,2.360775,3.159971,-8.189688,8.585619,-3.716530,9.164093,2.328007,4.004397,0.036094,-7.550474,-0.567231,4.685000,-5.133574,0.349283,-0.680549,3.139785,-6.911894,-4.244842,-6.383038,-2.848856,2.657469,-5.732033,1.842420],[1.190798,9.097885,6.745233,3.868210,5.212817,0.397558,-6.451906,-6.860209,0.471208,-8.296439,3.085360,-2.492816,9.183872,6.871898,-8.414669,-8.034616,6.206833,-2.488190,1.902032,4.108859,7.559668,-5.727769,1.280859,1.549353,6.883162,-5.545515,-9.997740,-9.894503,-5.895346,1.365055,4.142890,-7.989097,5.233174,7.584066,-9.613781,5.183606,4.520155,8.653039,-1.963016,3.020133,-5.142074,-3.498460,-2.162275,6.713577,-6.644575,-4.922050,-9.802355,-8.415823,2.951347,-5.380886,1.228763,4.677413,1.995046,5.119105,1.860032,5.496529,-0.197393,-7.894707,0.055255,1.816363,-5.244693,7.323489,-4.695471,-4.085319,5.463933,-6.093053,9.667601,1.103700,-1.389228,-6.146079,6.825197,-1.679995,-9.254362,2.065887,-2.574887,4.325260,-1.013833,1.499660,1.401035,-4.711402,-0.758424,3.285135,-2.171304,3.368889,4.268788,-5.929148,0.455866,-0.331098,8.398748,8.999181,-8.127169,-3.127223,1.578184,4.313385,4.016513,9.680129,-8.402605,6.072293,4.386766,-7.633849,7.459000,-8.970051,0.687179,-8.442299,-3.441726,-4.446635,-6.016731,6.309089,-9.145435,-1.684419,-9.348641,3.708784,-0.823789,9.211714,7.878939,-3.506745,-2.176012,-7.311915,8.259477,-2.518462,-9.152631,-6.503458,2.604051,1.708656,9.168640,5.130903,7.445682,-3.981614,-1.682646,-9.852497,6.513320,-4.132412,5.168749,3.188759,6.830123,-5.895742,-9.672392,-2.715849,-9.858704,1.262972,-3.522145,5.881240,-4.443153,6.754522,8.988632,-6.374116,8.847841,-9.508363,3.154381,5.861354,7.172764,8.127522,6.946396,8.973686,2.031834,4.629000,6.050347,0.431932,-5.792713,-2.468693,-6.072104,3.435926,1.920692,-5.038866,3.881237,7.547067,7.362994,3.818079,5.833331,-6.779853,5.594527,-0.210595,-5.330216,-6.878920,-5.606911,-9.556877,-5.940408,-2.983595,4.856822,-7.843188,3.722602,9.765950,-8.271095,4.093728,0.584508,-0.299737,2.626074,-9.942887,9.267930,-9.980368,2.128940,-8.494002,-1.383909,-8.215026,-2.955658],[1.954344,-0.136369,-2.984620,4.113404,-6.474173,-4.859107,2.411694,3.351247,4.732972,7.551736,6.937686,3.119432,-8.979167,-8.949458,5.376449,6.905496,-1.796171,-7.425286,0.056630,-1.999710,-6.322299,-1.522752,-7.087865,1.395483,-9.364984,-3.421027,-6.474338,-5.198985,1.658043,2.371506,4.148414,5.957893,-7.951724,-1.518571,9.456506,-3.875583,5.966801,-8.137702,-6.698684,-9.365225,-0.858728,-3.156476,-7.845596,3.635168,-3.515954,-7.904531,3.974691,8.680457,9.530748,1.639936,6.510881,4.400064,5.149228,-5.658304,7.732868,-7.297947,6.092285,-7.543461,5.621455,-8.345355,-6.065267,0.540322,-1.523667,-5.102258,4.003851,0.098367,1.709018,7.300893,-8.770982,-5.792716,-5.063651,6.485898,-5.907059,2.493059,1.794689,8.972258,3.264130,4.966275,4.260506,4.096982,-9.891474,4.848225,2.847072,-6.161373,6.953990,-6.534998,4.546143,7.375005,0.947792,-6.471675,-0.123524,9.448812,-5.387295,-2.366558,-3.527806,-6.461517,-7.013221,-7.056875,3.695742,6.264233,1.147599,-9.565325,5.648495,-9.287864,6.793127,6.094157,-1.150187,9.791792,9.783836,2.387815,3.615053,-9.826554,2.549445,-9.002747,2.375083,3.573956,1.278860,-1.455533,-2.081270,7.851629,5.802092,2.094010,2.132357,-9.324766,-1.123219,-1.507983,-4.385737,9.806663,4.377315,-8.072496,8.913151,-0.505605,9.408424,7.570774,6.491064,0.444727,8.116558,3.296832,8.287665,-4.126119,4.357640,-0.939576,0.062906,3.267900,6.038183,-1.754950,-8.135738,1.260125,2.178647,2.199718,2.314489,0.434992,3.900904,-2.131388,-5.419552,0.710814,7.136846,1.769244,9.462545,-8.940671,-7.123228,-7.630582,7.262482,3.233261,-1.086081,8.170770,2.969507,9.549361,2.430372,-3.527837,-2.391152,2.558648,5.189736,-1.270374,-2.475581,7.742646,9.905507,9.461222,7.218271,1.028938,2.460486,3.807987,0.236506,6.394279,-7.121917,7.553619,2.738337,8.433624,0.198963,-2.787596,-3.143962,9.419647,6.391952,-3.041368,3.129207],[-6.807640,-6.907100,9.195956,-9.337501,8.713312,-6.623706,0.599086,3.674415,-3.063287,0.776142,-2.118298,-1.980866,3.763327,-6.958510,-5.453211,-5.352591,-4.586123,0.979237,-9.151491,4.410189,-6.978312,-5.680528,3.369948,-9.884000,0.081343,-5.640647,5.537713,6.753439,-3.941924,-7.129635,6.993478,-8.041265,-2.076817,2.620881,0.989240,-5.205457,4.315038,-7.603319,-9.117969,-4.249878,-3.106688,-3.540246,-8.041197,-2.546200,5.212629,6.797432,6.540052,1.888554,0.646229,3.839574,0.881913,2.399520,-9.714613,0.713925,-5.882872,-1.929811,3.932297,5.659927,-8.904494,-5.022970,-2.410626,-2.723192,5.370464,7.232251,6.321517,-2.259238,-9.030565,1.156736,8.409411,-5.290142,-0.753728,-0.219763,6.539819,1.806379,6.264509,2.619866,-1.762408,-2.035618,5.886072,-6.826156,-9.446382,8.260489,-7.837532,1.539169,-9.445624,-9.638740,1.405531,-1.857349,-1.989618,-3.742386,9.876821,0.102974,-5.297376,-5.370232,-0.032873,-3.865391,3.460108,7.849173,-7.275682,6.205101,-3.537680,8.657518,-6.889367,-2.014533,-9.754680,-7.217654,3.315545,0.478981,6.466540,9.818857,-1.177092,-7.887130,-5.048928,-1.496452,0.987008,7.854792,8.275269,5.556106,-2.571268,-6.038200,-3.072490,-3.512624,-1.436873,2.912932,4.997078,4.895931,-1.424635,1.535574,-7.994309,8.442486,7.244047,3.027722,-8.050173,-4.133727,5.282473,1.557308,-6.814523,7.737975,4.983885,-5.244329,8.033204,-1.987538,-8.284224,-8.041818,0.369221,-4.410279,-1.464229,8.736008,-5.488390,6.426204,-2.170863,6.345533,4.518548,-8.129232,-5.008808,3.717344,-2.645771,6.010823,-8.448832,3.902893,-2.443220,-4.793614,-8.044998,9.035470,-7.959550,-0.436105,9.548763,2.568526,-3.802868,9.454324,-8.756593,-3.899274,-2.228461,0.585619,-7.748470,9.673140,-4.867497,2.602162,2.674466,3.130115,-8.262913,7.800881,-4.681247,-5.983678,-5.769813,1.737814,-4.034300,0.751898,8.620097,6.322117,-6.353986,-6.955296,3.880251,6.405274,-8.357262]], dtype = "float64")#candidate|6276|(15, 195)|const|float64
bop_6277 = relay.bitwise_xor(uop_6235.astype('int8'), relay.reshape(const_6276.astype('int8'), relay.shape_of(uop_6235))) # shape=(15, 195)
bop_6280 = relay.bitwise_xor(uop_6237.astype('int8'), relay.reshape(const_6276.astype('int8'), relay.shape_of(uop_6237))) # shape=(15, 195)
output = relay.Tuple([call_6212,var_6213,const_6214,bop_6256,bop_6260,call_6268,const_6269,bop_6277,])
output2 = relay.Tuple([call_6215,var_6213,const_6214,bop_6259,bop_6263,call_6270,const_6269,bop_6280,])
func_6284 = relay.Function([var_6213,var_6248,], output)
mod['func_6284'] = func_6284
mod = relay.transform.InferType()(mod)
var_6285 = relay.var("var_6285", dtype = "float64", shape = ())#candidate|6285|()|var|float64
var_6286 = relay.var("var_6286", dtype = "float32", shape = (15, 195))#candidate|6286|(15, 195)|var|float32
output = func_6284(var_6285,var_6286,)
func_6287 = relay.Function([var_6285,var_6286,], output)
mutated_mod['func_6287'] = func_6287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_6371 = func_4488_call()
call_6372 = func_4488_call()
output = relay.Tuple([call_6371,])
output2 = relay.Tuple([call_6372,])
func_6376 = relay.Function([], output)
mod['func_6376'] = func_6376
mod = relay.transform.InferType()(mod)
mutated_mod['func_6376'] = func_6376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6376_call = mutated_mod.get_global_var('func_6376')
call_6377 = func_6376_call()
output = call_6377
func_6378 = relay.Function([], output)
mutated_mod['func_6378'] = func_6378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6149_call = mod.get_global_var('func_6149')
func_6151_call = mutated_mod.get_global_var('func_6151')
call_6467 = relay.TupleGetItem(func_6149_call(), 0)
call_6468 = relay.TupleGetItem(func_6151_call(), 0)
output = relay.Tuple([call_6467,])
output2 = relay.Tuple([call_6468,])
func_6485 = relay.Function([], output)
mod['func_6485'] = func_6485
mod = relay.transform.InferType()(mod)
mutated_mod['func_6485'] = func_6485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6485_call = mutated_mod.get_global_var('func_6485')
call_6486 = func_6485_call()
output = call_6486
func_6487 = relay.Function([], output)
mutated_mod['func_6487'] = func_6487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_6490 = func_4854_call()
call_6491 = func_4854_call()
func_6284_call = mod.get_global_var('func_6284')
func_6287_call = mutated_mod.get_global_var('func_6287')
var_6495 = relay.var("var_6495", dtype = "float64", shape = ())#candidate|6495|()|var|float64
const_6496 = relay.const([-5.687478,-3.871155,8.377447,3.418307,0.320499,7.555508,1.605263,0.052536,9.143197,-1.570264,0.793075,8.295785,1.913028,-5.953651,7.481644,-9.625310,7.585933,1.971136,-8.791876,-9.396592,4.890131,9.457124,-2.123019,-6.179185,5.565709,-5.945698,0.280009,1.477244,3.611670,8.808403,2.877980,-3.573402,4.225380,-5.199549,-3.786140,1.488018,-0.985099,-0.984206,9.946944,-1.753244,-2.543126,8.905064,-8.479220,-1.654194,-9.201702,-2.953883,-8.892182,-3.399120,-6.512321,0.929299,8.085669,-6.545716,8.514689,2.437344,1.009394,3.076556,-0.029019,-7.839666,-1.443900,-2.364445,-3.517528,-4.003128,8.990629,-4.031436,1.721590,-8.534708,2.727684,-3.419527,7.714599,8.587617,5.696578,-8.788823,-2.156020,7.844192,-8.557057,0.842977,-4.750259,9.948622,9.213617,-5.706280,0.315675,0.610944,4.482077,7.611450,4.012937,-1.123737,-3.745741,-8.573592,8.066123,7.767466,0.579463,-2.944105,-1.476225,1.016583,-5.294056,2.365247,-5.417653,-5.067220,-9.615456,4.317785,-9.992579,0.777876,-8.635532,5.370322,0.631030,1.262935,-6.073604,-8.681425,8.665092,-4.798717,4.934922,7.557678,-4.421946,-4.080871,-7.041407,8.219807,7.327386,6.198768,-9.705513,3.635346,9.601721,0.917587,-5.832115,-6.507544,5.812083,4.954502,-9.386642,1.870811,-9.263962,-1.760950,2.072643,-6.536789,-1.446782,-0.182141,-7.695659,-1.442352,4.035893,5.574062,2.546758,4.287083,-2.670135,-7.763726,-2.363015,-6.362604,8.523893,7.038972,-7.228491,7.687394,1.796440,7.893185,8.351686,5.453024,8.528362,-7.202287,-1.238100,-5.956953,7.936856,-9.127959,-8.342047,-0.297813,2.890949,-3.858624,8.168555,-5.801890,9.948842,6.765078,8.767866,8.504771,4.710665,2.285438,-4.423350,1.030583,-8.883259,9.258888,-5.243607,-5.134099,8.703256,7.253774,-1.556827,2.136478,0.645182,-1.209324,8.080853,-4.990642,-3.271443,-9.119578,7.562657,-3.855477,9.788520,-3.110908,0.055299,9.671572,6.628069,-1.655467,-3.494588,7.921017,-6.304329,-3.537909,-9.135923,-4.256390,3.565371,7.125309,-8.588528,-8.632811,3.281012,7.552307,-8.716740,4.538541,6.774571,6.530475,5.203838,-0.596209,7.331697,0.836118,3.572923,-5.972561,-8.748869,0.117299,3.569993,6.965389,-5.007588,1.897918,1.924081,-2.562109,-3.212618,5.315822,-3.848436,5.252323,-4.384685,8.658191,8.395096,-9.730143,6.093112,-1.224208,-6.334282,2.928201,8.898892,7.137603,6.972594,3.143925,7.001347,1.719153,-9.847407,1.478467,3.561468,-2.481959,-6.001680,7.157859,-0.518027,-7.573532,2.278871,5.371628,3.197595,6.224702,-9.366772,-6.136034,9.254387,-8.675576,8.480892,5.447563,-0.110681,8.245573,-0.264042,2.111020,-4.298290,7.033304,5.779354,-7.353679,5.003496,-2.798342,0.424458,-9.798458,-0.990728,-1.239486,-5.610885,1.793209,-1.906248,-8.813664,4.174636,1.917733,0.839751,3.506261,-2.528763,1.879148,3.200075,9.490508,6.703523,-6.739260,-9.892645,0.859831,-7.741794,-7.420463,2.490988,9.859062,-7.714847,-1.930603,-1.594458,-4.967131,-5.553498,-4.981043,9.530144,-3.386599,9.763889,8.369643,9.097032,3.059020,5.375420,-4.952926,-1.902260,9.516142,6.703605,-0.343864,4.689404,-7.468500,8.566473,9.647219,-6.358211,1.307189,-6.315694,-4.809970,6.814835,6.596345,3.844649,0.398353,-7.635314,-3.238268,-8.155439,4.550798,3.925950,1.887459,-7.528893,-0.855505,-6.535223,9.719706,-2.443785,8.791917,6.699922,-4.541522,-7.249363,-9.254813,-3.936616,-6.913307,8.174909,-9.045437,3.700899,3.612111,-9.094642,6.327983,5.535011,-0.640527,-8.452792,6.277743,-4.889873,-0.387064,5.696428,9.080552,6.464642,2.127024,6.629651,8.201570,8.260373,2.556171,-5.300484,5.490080,8.562764,2.928952,1.691227,2.154690,-9.815547,-3.988155,-6.750766,9.430433,-1.250959,-9.833357,-4.299037,-5.200120,3.286134,-4.520114,-2.324171,9.988386,0.741585,0.122941,-2.279088,-6.833983,-8.858287,-1.611564,5.397648,-9.163398,-2.001521,1.048490,7.878871,7.864318,8.666921,-7.564327,2.956928,3.890087,9.672994,5.491010,6.761189,-3.490036,-0.006231,-9.767781,9.172709,9.357069,-2.409914,-0.858459,1.520205,-9.783641,0.626111,-1.551999,-0.666336,2.646380,6.172779,9.887871,4.615792,-6.061639,7.486495,1.732454,-3.376713,-2.984634,4.960876,-0.755277,-7.839177,-7.001439,1.519626,-1.773933,-5.427160,0.076612,-1.945391,3.376817,3.156730,-1.055726,-5.944457,1.900820,-2.172304,1.982021,-4.682474,-3.038555,-7.465110,7.777730,-8.054637,-6.811653,4.936507,-0.250814,-7.466221,0.891908,8.148733,-3.414990,5.717174,-8.024932,-0.590966,-3.106251,8.542216,8.717527,3.741210,-5.279337,8.322529,-4.562911,-9.312147,-0.462871,-9.726251,-0.943211,1.032887,-9.193294,-1.934315,5.870475,-8.980916,-0.437495,-6.486054,-9.540702,-9.412729,0.707112,2.864344,-1.230346,-4.106319,-0.069567,2.572955,3.747743,-3.246048,4.676937,-5.514077,5.080629,-0.958181,1.383490,4.689750,-3.715852,-2.203978,9.629358,-8.270807,2.834753,2.843694,0.069929,1.983578,3.001282,-9.624619,-9.769772,3.499117,-9.747770,8.228261,9.317564,7.233525,-5.121782,5.504590,2.038865,-4.720708,4.897302,-8.751462,-3.826537,0.373711,0.450828,-0.546424,-9.596886,3.290574,-8.655628,-1.869041,-3.097053,5.708003,0.785985,-6.560837,-8.461529,-4.445015,-4.230784,3.617581,-9.259622,3.066910,-6.276082,4.987002,9.286138,2.250820,-9.028648,6.906925,1.043116,4.876242,-7.699007,2.747723,-4.094063,-1.403036,9.417264,9.255618,-2.469417,3.138495,0.996409,8.776289,-4.408664,-4.844469,9.788388,3.577338,-5.649019,0.848262,-1.738231,-0.385624,-2.108868,-1.627272,-4.458410,5.027014,-4.409760,3.303490,-4.530934,-9.329632,-6.276002,7.872670,0.643174,-9.658253,6.709606,-6.617972,2.183296,6.873546,8.994899,0.934106,2.655198,-4.586285,1.713831,0.092421,-3.975580,-1.951750,-7.812959,-7.130187,-8.301547,-7.242796,8.365078,-1.706565,8.749345,-0.929587,8.515275,-8.927588,1.388783,-5.125009,-9.487973,-1.939227,0.709532,6.383788,-8.171479,6.558113,3.652460,-1.589468,-8.751348,6.454577,-4.869732,-9.967089,6.692210,6.022260,6.170436,1.577339,9.576636,8.116725,0.620209,5.426592,-9.560000,-0.386798,-6.018498,-0.050170,4.756324,-8.192316,-3.886527,1.402645,0.131690,-0.765338,-9.931695,-2.359936,8.375235,5.539322,6.635264,-8.863243,7.016082,0.774861,5.856481,3.032940,0.162905,6.178085,-3.548189,7.889293,6.198369,8.671911,2.761996,0.816128,6.076669,0.277906,3.278885,-5.326829,4.163775,-0.352471,-5.519992,3.893802,1.527972,3.278836,-4.751922,5.319680,-9.148767,3.911336,3.127343,-8.010568,8.452386,8.603008,2.484513,-1.400095,9.244809,7.101378,-1.340351,6.238505,4.697863,4.377250,3.250878,4.809031,4.301771,6.710649,-6.881033,6.115481,-6.686696,-2.867241,6.339185,-7.739958,-1.384646,-7.502173,-0.673722,-9.547550,-2.882225,0.985957,5.178238,8.712455,-2.326432,4.133120,-2.673976,-4.455523,9.875245,-7.178922,6.260150,9.018636,-1.521768,-7.991005,2.965987,7.297990,6.224038,9.766063,7.992617,4.537093,8.253671,-3.096801,-9.484603,-4.507901,-0.702270,-1.953925,3.779170,1.437586,0.533643,2.757449,-9.953876,-1.952974,7.623589,-3.930076,-8.244533,-2.374159,-0.393663,7.679619,-9.217224,-7.159286,-9.985178,-5.069980,-5.161260,3.762580,-7.320643,-5.838685,4.245133,-4.277401,-8.535431,-5.036955,-1.089572,4.598515,2.587156,4.696054,-7.809698,-3.204755,-8.241581,5.427668,-6.823508,-9.034915,7.625257,-5.877999,3.892428,4.593295,1.524891,-3.838351,8.495845,3.613909,-5.195942,-5.451703,-8.574493,0.050472,9.126161,-3.696965,-1.384823,-3.018210,4.608918,-5.689381,5.017031,7.490322,5.895305,0.481182,1.657340,-2.368305,6.519669,-0.554503,7.220181,6.502011,-9.752009,3.872765,-0.760525,-7.421142,-1.266831,9.249806,1.248201,-1.229499,-3.461602,6.478654,-6.916578,-0.545601,-7.695255,-4.935871,-4.984817,-9.697476,4.162955,5.353869,-2.585743,7.744353,7.724121,-5.549073,0.703651,1.246064,-4.977331,2.848663,-5.761265,5.484912,7.589526,5.140681,2.375270,-2.693894,2.265068,-7.545727,-6.135243,-4.725070,-0.465895,-2.140154,2.281186,-3.208190,-8.201331,0.965114,3.436066,5.486485,-4.091876,-7.110458,-8.163221,-5.827482,5.880911,2.183285,-9.972799,5.675224,8.692837,1.007500,7.099627,-7.997513,0.357651,2.698170,-9.757404,8.970854,9.206401,-8.458802,2.214407,2.782683,-8.862072,-0.788526,-3.526637,2.480061,1.614146,-0.995875,-8.978841,-4.324510,-5.317837,-7.236661,-2.159513,4.610776,-9.033735,6.479349,-0.060538,-7.629452,-6.907540,-0.814149,-7.830483,-3.008126,-8.211915,-9.770212,8.761433,-6.121303,-3.545192,6.424645,6.151211,-3.268996,-7.790680,5.332844,-8.152085,1.715889,-0.610417,3.897988,-1.824232,-5.602274,7.473508,3.537923,1.507093,-3.186280,3.025021,-5.945001,6.255700,-3.871822,-9.965245,-9.710457,1.716951,3.774983,6.361762,-3.683460,-5.940193,-8.529729,6.302445,4.312292,-7.371595,3.182453,5.979514,-0.577541,-2.895482,-0.542411,-9.149424,-1.627799,4.829419,9.231075,-4.057039,-3.822235,-5.136597,-9.318503,-2.745983,-5.405988,-8.589420,-4.972783,6.516612,-1.948422,8.621709,-6.030913,4.742312,1.115769,5.737566,-3.373902,-7.831965,-5.777198,8.313272,4.076161,-6.443021,-8.444477,7.919386,-2.739153,7.411399,-0.223454,-9.001294,-5.977462,1.888315,-5.194160,-0.606539,9.221205,7.416652,4.289995,-6.410542,-7.627278,-7.777706,3.715441,-0.101773,-6.861907,-1.466225,-6.631303,-6.062410,7.156837,7.767759,-8.998399,-0.642001,-8.903779,4.179695,-9.410084,-9.383128,3.752568,-7.999306,-4.696017,-7.077211,-8.473994,-2.709525,6.993125,-8.968557,-1.971824,-1.995319,2.599399,-0.883609,-0.107902,-4.856548,-4.490527,-1.625143,2.966802,-9.180086,6.206132,0.328775,-6.628987,-0.180869,-4.016409,-7.357937,-7.407389,9.239133,9.045155,-5.989466,9.385590,-8.545953,7.042346,9.867124,4.835982,1.584965,5.716469,2.700272,-7.166651,6.904144,-2.366617,2.676910,8.100094,-2.878311,1.179318,-1.639110,6.420611,-0.722976,7.300645,-3.428828,2.236264,0.374747,-7.589081,-0.459870,0.434141,9.794402,6.297095,-0.505333,8.450595,4.800321,1.644299,3.155596,6.305757,-2.702087,-5.293393,5.929957,-1.626968,-1.211436,3.816736,6.025113,-1.971801,-3.577224,2.051138,-1.285813,-2.623443,6.179196,-5.541052,-1.026774,-9.913542,-9.699797,5.762110,9.199964,2.284400,-4.384527,-2.914229,2.285139,-5.582016,7.041383,-1.439875,-4.878189,4.089479,1.281241,9.170723,5.389448,-4.644177,-4.950191,-3.565664,5.402320,8.874699,-5.840411,4.411142,-0.519252,-4.569725,9.859320,-9.616684,2.542103,-2.093471,1.682187,-3.115982,5.102452,-0.001565,8.384763,7.667021,-1.711470,-7.938984,6.962977,-4.075936,-6.174432,9.846626,-8.341669,8.610617,7.160680,-7.917081,2.228284,-3.799671,1.166766,-2.063888,2.535547,2.974226,-0.773391,-0.107262,8.182521,-4.382698,9.143367,2.369973,5.988408,0.260535,-9.151207,6.877269,0.775285,4.033326,-0.200424,3.942303,4.655544,-0.686970,-5.112507,4.019906,4.202791,3.705533,0.051423,-5.537513,-1.429114,-3.279355,7.080214,-9.173210,6.528126,1.810799,-3.863438,2.893268,5.016108,4.803334,-8.917730,5.276602,-8.657349,1.911400,-2.903479,-5.451897,5.863196,8.919182,-5.501723,9.425237,2.233066,-5.633885,9.341004,-4.076467,2.488886,0.773995,-6.349045,4.240845,9.090989,6.436761,1.166995,-1.402217,-2.376977,0.022704,-5.355083,-5.698066,-4.945849,0.201445,-6.790025,-4.320690,0.338742,3.977466,5.105524,9.113659,4.782260,-2.247467,-6.180585,-5.564947,-1.477056,-7.957081,-2.957808,3.682075,4.084999,8.071264,-3.050248,5.679848,2.866750,0.977193,6.719712,4.453918,8.207233,8.356341,4.784607,-1.168393,-3.449145,-9.160208,7.863824,0.606167,-8.894732,-3.909463,-8.927264,-1.227418,6.927353,-4.512337,-6.832604,7.244013,3.149054,-0.169439,-9.279455,3.562118,9.928007,-2.278420,0.465746,6.882946,-3.098889,-5.899327,8.336126,-0.942508,-0.708803,0.994484,-5.932497,9.474132,-5.899965,-3.725674,-8.329411,0.994871,9.155462,6.739093,1.496732,-6.908756,-5.842132,-2.930509,-8.964840,-4.682189,-2.801624,8.262124,5.361025,-6.545433,-8.511411,-9.771375,-6.608942,-9.191533,2.440556,-3.631292,-6.363129,-2.643292,5.592837,-1.806635,4.065223,7.949608,0.971759,9.360384,3.773957,-5.857921,-6.504923,-4.694143,-7.705196,9.376598,-4.679179,-9.764260,-1.957490,-2.125608,0.534563,1.134322,6.242441,-8.463149,-1.843364,9.422188,-1.698330,6.004072,7.366858,6.360948,3.027705,3.907237,2.744436,-5.457002,4.051719,5.205168,-9.685880,2.658424,2.085945,-9.055369,3.863657,6.120756,8.887103,4.265553,4.971990,-9.361969,0.016073,-7.519813,8.012174,-2.728590,7.144849,6.410009,4.043530,-6.659202,2.372190,-8.953616,-0.707071,-8.103103,-2.479028,-1.652338,-8.979943,-5.095862,0.207944,-7.914440,-8.401584,2.407964,8.768574,6.068493,8.030270,8.978752,-6.595495,-7.106059,-6.115865,-7.294783,-5.931115,-0.293756,2.749001,-5.849450,3.506773,1.225037,5.996083,-7.188347,7.700921,9.257440,4.212547,1.489225,-4.435141,-9.462581,-2.278450,-4.374717,-7.686698,-6.886873,4.941605,-4.073557,9.224396,-9.843029,-1.848634,5.784994,-7.210876,-3.716280,-5.734406,5.872210,4.208914,3.180894,-5.291877,-0.172857,-5.261762,-0.746963,5.175439,-0.174668,-7.526543,-5.177575,5.326192,9.468636,-1.320915,2.866145,8.567976,-8.966755,2.080588,1.402631,6.163403,-3.597261,-8.842677,5.951738,1.024944,-0.584250,3.266662,-9.650719,3.952105,-0.347325,5.157046,-9.578420,0.167896,-6.922779,-7.508080,-8.968474,8.551682,9.975243,-2.701633,-2.603771,-2.825665,2.797151,7.622686,7.148771,8.160460,-0.713191,8.691471,-9.263818,9.143758,5.911995,-3.161682,7.741723,-6.854954,2.967048,-7.108356,-0.064808,-5.253740,-3.851432,3.586967,-9.444400,9.513854,-9.385051,3.887442,2.798390,3.746553,-1.335136,8.169329,7.302584,-1.099893,-0.172900,-3.813472,-7.584249,-9.824355,-1.227860,-7.234330,3.543597,-2.293664,-7.803348,-2.314958,-5.438751,8.878073,2.555045,8.615322,-9.410374,7.700573,-4.958452,-5.027664,-7.307161,5.264601,-6.994446,-1.113329,3.825957,6.999060,-8.916112,-2.895130,2.092535,-5.034152,-7.274573,-8.312470,7.754257,0.336937,4.269314,-6.908750,-1.113880,4.123096,0.552362,-8.381000,-4.122707,5.016927,9.928743,7.982718,8.393936,7.262027,0.659726,-4.650057,1.341619,-9.250162,1.458201,1.332031,-4.885908,6.940308,-2.372244,9.196565,6.642234,4.611954,-4.712238,-7.141795,-0.609658,9.049368,9.414511,7.906151,0.621861,6.300837,-8.288131,-1.689866,7.356077,3.994036,-3.873623,-6.667711,3.270476,-8.637757,7.502672,3.893955,0.318602,0.468565,-2.683928,1.212395,4.599966,9.809504,3.402338,-2.619059,5.276297,-2.777031,-7.178563,8.672251,6.222470,8.672774,-4.139710,-3.464708,3.388471,-2.510535,-4.308473,0.720722,8.990429,-7.073689,7.255738,2.076984,-2.341442,-0.239703,9.921898,-3.316365,9.507924,7.690394,-9.383988,4.952388,2.731226,0.187244,-1.227415,7.908524,1.258837,-4.115160,2.953162,6.947292,-0.972573,-0.691725,-2.097712,-6.913564,2.586408,7.887533,9.795374,3.974258,6.331425,1.679424,-0.096336,2.219658,-4.062865,-7.703337,9.825488,1.550493,9.276092,8.564255,-2.711565,9.014815,9.928500,5.328405,-2.453322,-0.821861,0.392472,5.735750,-5.317392,-0.797941,-5.150691,-9.437238,-6.373479,6.515741,-0.562698,5.314855,-7.966314,-2.525467,-0.351564,4.901888,-7.255775,-1.949113,5.126863,0.624416,-2.238490,-4.103935,-5.211798,-3.348491,-7.783206,-8.050586,3.343116,3.208608,9.750357,8.074804,8.653954,-3.872520,-2.855039,8.350294,-9.452348,-8.422906,-7.877897,6.247596,8.513218,-0.605925,-1.042810,-7.710091,-3.399037,3.213003,0.405639,6.303562,8.929973,6.305746,-3.293458,0.913789,3.283806,4.635819,-8.461753,4.834946,6.488849,5.731550,-1.359630,0.973031,7.929142,-6.812986,2.603272,3.176149,2.529207,4.548737,-1.879858,-9.415817,-7.007874,7.420670,2.478181,-4.592476,-0.207655,-3.405139,-4.351574,-3.675880,-2.262551,-9.550403,-9.021065,9.412155,-2.865819,-2.299045,7.242164,6.689426,-3.107477,0.805449,4.247295,-9.108570,3.781084,-8.888226,-4.240376,-4.292444,-0.537653,9.437871,-7.661625,-6.420964,4.971605,3.786774,-3.121593,-4.185199,-2.241990,-4.654302,8.939959,3.084982,6.184446,-8.008435,-9.380856,-5.986770,-5.583241,-0.886072,-2.423303,0.307702,0.294933,6.629858,5.526183,-2.886324,5.438151,2.313925,-3.145639,4.077566,5.704527,1.846938,-0.517202,-9.952290,1.396966,-9.301488,9.021330,3.992583,-7.305147,-0.348799,-9.589120,9.601923,0.188750,2.143041,-9.956796,8.836316,-0.056259,3.665757,4.919888,6.801978,-7.284438,-5.576461,-2.068393,-8.291677,-6.980444,-8.872882,-8.398346,-8.183607,1.024584,5.152076,3.025844,8.570360,8.961774,-3.181150,-1.100922,-6.794742,7.175655,-8.283165,-2.466522,6.403499,-8.210380,-4.823741,1.169629,-2.789673,-9.673171,-3.879756,6.395630,2.894080,7.310976,5.738351,-0.850824,-1.183044,-2.192754,2.877287,-6.746414,-0.717530,-9.077832,5.787955,3.500677,-3.295808,5.913456,5.885736,-4.925534,6.396214,7.730170,7.838757,-6.197631,5.347399,4.641143,-1.667793,5.434500,-5.636811,7.648532,-5.117757,5.167618,-4.968423,3.659524,5.875575,-7.661650,4.711862,1.372693,4.076373,2.235445,9.715638,6.934535,-5.445769,-5.552925,6.911129,-5.241825,-3.275673,-9.811767,-1.115905,9.551865,-7.385223,-4.606035,5.338663,-7.395515,-3.995758,6.528059,-9.472591,4.453440,-8.690566,2.107263,4.414768,0.499381,-5.481914,-0.519392,6.621446,-1.197835,7.592383,-7.473718,4.924552,-1.732179,-9.901472,2.276696,-4.634724,3.411343,-7.658495,-9.831366,-0.995075,8.187855,-0.808510,5.313918,6.791373,1.665651,-2.819149,6.579322,-9.779161,6.734480,-5.276560,-0.225441,9.859348,3.409183,-2.156218,9.434981,5.969071,7.162655,-1.735855,8.953962,0.295295,1.113319,-6.275649,6.688493,-2.917022,6.584599,8.414142,1.890499,4.136569,-9.108174,1.041254,-6.906708,-4.494174,-7.051986,-0.715213,5.589044,-1.539468,-2.861961,6.593601,7.639179,-1.797351,-7.031689,-4.273119,7.357553,-0.057621,-9.810344,6.310214,-5.007088,-9.042341,3.394167,5.375717,-1.376576,2.831815,-7.178596,-5.403535,-4.490226,8.428068,-9.547873,-9.460366,9.615143,3.738617,-0.485716,3.607231,0.980895,1.086078,-9.914088,9.360876,-5.397470,6.817115,1.315501,6.868643,2.924310,3.262029,-1.352942,4.378416,-8.733029,9.170977,6.559719,-2.791816,9.367318,8.158599,-5.578898,-7.057385,7.240771,7.496638,-0.244309,-4.575083,2.389273,0.308164,-8.711800,-0.236190,-8.436862,6.386361,-6.218993,-2.966062,-8.571888,4.820022,-1.933386,1.326859,-6.988881,-2.506755,0.967723,-4.677375,-7.584623,2.317202,-1.558177,-5.946563,4.250196,-4.889067,3.347453,6.192474,1.990516,-0.037425,3.898735,9.981588,-4.578555,-6.637122,2.288236,5.170170,-6.453141,-8.660994,-0.318353,9.861421,-8.255609,4.421496,-1.787395,4.696915,7.545708,6.808973,-5.959400,-7.626707,4.775805,-5.484958,3.072217,-3.082362,-2.184493,-2.568343,4.288523,3.197179,-6.907800,9.018868,8.653799,-5.904087,-4.392854,8.867166,-4.319408,-1.649277,-9.069558,-0.337110,-9.980854,-6.830259,7.710169,0.878795,-7.178123,2.354387,6.194581,-0.154050,5.898504,1.121123,-1.505491,-2.284845,4.312702,-0.472778,-0.597174,5.254340,-4.090306,9.628270,9.314876,-9.470739,2.839588,-8.081144,9.981062,-7.562152,2.179026,-2.167949,-4.505532,-7.435832,8.231055,-0.497175,-0.865002,-6.618265,4.815307,-9.902625,-3.307172,-3.926094,-7.493504,-8.568922,7.323753,0.992201,6.614547,0.499721,-1.032087,8.217227,-0.009775,8.140455,5.790164,9.761351,-5.883468,2.171675,2.898536,-9.289978,-6.402301,5.099367,5.619669,-2.016409,-7.087168,3.642481,-8.311523,3.576797,-0.533317,1.468349,-4.829000,-4.762382,-7.880652,-4.404066,8.571111,-0.434377,5.900420,-3.508313,-0.751579,9.900072,-1.863622,7.441982,9.332400,5.109955,-1.717409,-8.595900,-5.431846,7.216327,-5.490666,-4.569376,-7.834379,-0.145438,-2.086682,2.554503,6.899725,0.126118,3.931766,-3.334319,1.518614,-2.202657,-6.736147,0.479939,7.228956,-8.233297,-0.322899,6.470825,9.396270,-3.352488,-6.850814,-6.454110,0.196324,0.142446,-7.902155,0.725778,-5.757757,4.486389,-7.428047,0.703684,1.550312,-5.066396,-7.709787,4.589754,7.782970,0.762937,8.153020,3.066835,4.815747,9.429048,5.051334,-1.775153,-0.075830,-4.065356,-8.727043,-2.558961,2.119159,7.010228,-0.807956,6.772509,-8.872427,-0.224399,-3.578535,-1.072624,-1.177572,-2.410739,4.551275,1.149824,-4.938764,-6.999494,9.691117,9.624227,4.576289,-2.055567,9.806254,9.438979,-8.325703,7.476692,-3.276691,3.796328,9.443262,-8.860841,-8.652862,-3.619921,6.599219,3.118297,8.438660,-6.647194,9.370329,-4.209731,-8.949254,-2.869595,0.898730,-1.098976,-7.522244,1.240896,8.822225,-0.167689,7.338442,-8.973552,8.176614,-1.126017,-3.214950,-7.547859,1.838981,-4.813306,-8.510136,6.712289,-1.158887,9.480228,8.628542,-8.838331,-3.156110,-4.892157,5.358087,1.529315,-6.300853,8.398224,-4.493546,-1.324473,9.695222,8.445446,9.876963,7.007610,-6.226867,-3.780018,6.972522,-7.277157,5.939412,-1.669113,-4.020155,-4.362777,9.033261,0.505190,4.998566,1.696712,5.783053,-4.841922,4.451902,-9.935968,3.110037,1.506115,-4.864356,-4.742534,-0.028544,-5.911201,-8.588676,5.659008,5.602846,1.804075,-1.054804,5.215235,-7.418786,8.571303,0.059999,9.040908,-9.944349,-7.114326,9.336508,8.135991,2.189625,-3.879105,-4.375859,9.316512,-2.964042,-3.726933,3.660967,-8.061154,5.640823,-7.630544,-8.252172,6.594603,-1.859692,8.220315,2.675928,-6.840468,-9.544757,-0.078374,-6.055623,-2.995728,6.598663,-7.787190,-1.534395,-1.962133,-1.023651,6.298963,-4.902918,2.520274,-9.078317,-2.606375,6.711300,-8.708441,7.314031,-0.455682,-4.541989,9.556934,7.017108,-2.595158,-6.135811,-6.248043,9.215570,5.811073,-5.277727,6.439134,0.614534,-7.088258,-1.035215,6.354324,-6.286236,5.830244,-8.849953,-2.665177,-9.981693,-0.848920,6.789257,8.406317,-1.379513,-1.489179,-6.569957,4.586907,-4.191967,-1.369347,-2.654733,-1.911687,-1.098032,0.855037,-7.190028,-5.587519,-8.719319,-2.709729,4.425401,0.824261,-4.742013,7.985797,5.153893,7.413057,-8.280788,-2.623027,1.078130,7.667036,-2.179950,-8.906744,-2.829144,-7.644086,8.388050,-6.409826,-3.879245,-1.007888,-0.463639,8.436304,-5.299808,1.528864,5.149883,7.949334,-7.955424,-9.479125,8.360061,-2.591470,6.601683,1.028018,3.791008,-2.750623,5.585449,-8.922636,-2.420522,7.482731,-6.317962,5.847809,-3.582911,-8.802764,-2.260439,9.207074,-1.771852,1.505776,-4.030811,-6.398216,2.155714,-8.941173,-2.043732,-7.431748,-9.530523,3.030542,-3.541354,-0.413799,-5.841235,1.850058,2.191841,-9.919090,-4.271882,-6.504125,-4.679982,-5.994440,3.863569,-7.957760,-5.871767,-1.490950,-5.118700,2.976673,-5.304097,6.727167,7.865573,3.403262,-5.366647,-5.941813,-6.059600,9.898124,8.178972,-9.576741,-0.393635,-6.861123,7.301216,-1.409492,0.611814,-4.243164,8.123756,-3.220603,-5.567918,-4.433571,6.993428,-7.046204,9.056571,0.396973,5.046601,7.973654,-9.223655,-7.238638,-8.322001,-9.476024,5.225268,0.557677,-5.843455,3.837295,-8.307647,5.730497,-9.736894,1.652096,-8.234906,-6.814908,-3.481037,9.465769,-0.172312,-0.791446,-2.119374,-4.938730,6.097875,0.534078,1.084311,-7.031885,-9.690261,2.931489,1.554662,-5.314747,8.674561,-4.563543,-1.278518,1.563410,9.589091,7.961399,-0.783023,7.306481,7.457852,0.832721,3.878687,-6.092787,-7.664864,-4.049337,-2.629192,2.183689,-8.449886,8.531473,4.170867,9.762267,-5.428244,8.599728,-9.188119,-6.716006,1.449868,-2.661908,-7.242723,-0.856615,-3.863784,-2.809048,8.794726,0.353201,5.411812,-4.088133,6.085014,-4.690754,-9.078152,-0.974711,-6.316758,-2.666451,-3.740460,8.027739,-5.358847,0.336555,-7.523057,4.836849,9.252382,1.851698,-5.028763,-6.445386,6.588117,3.773328,-7.246002,-5.732555,7.321926,-8.600640,8.495999,-8.366352,1.068573,3.509379,1.581369,5.311826,7.649186,-6.921767,-6.480741,7.601148,5.667349,3.701079,-0.808878,-3.622567,-0.247797,7.852262,-0.079223,5.272293,-1.032535,-4.781153,-0.387199,-2.831353,-3.290075,8.783540,2.290753,1.222415,6.231123,-8.200547,-6.540026,6.608454,7.406234,4.886767,-6.134048,9.341408,1.098587,0.779594,3.796619,3.902444,-3.163435,-4.331220,7.416903,-9.482280,-8.721177,-8.542813,6.602404,-5.526238,-6.618239,4.665033,-7.802158,2.544388,-1.628302,7.204518,3.616134,0.047122,8.499895,7.588593,6.534873,-2.315788,7.548263,0.298018,-3.369077,1.766968,3.795775,-7.800034,-0.710570,5.411483,-6.131612,-7.142504,2.410850,0.773795,-9.787079,4.511676,-6.539441,7.174659,-5.847138,-5.613405,-5.508308,0.372836,-1.622178,-2.448142,-0.455805,3.215816,-3.089943,-6.627202,-2.025042,2.492517,-6.957186,-5.548185,-4.267276,-7.804248,-6.542393,8.954004,0.956467,-6.023873,-5.486255,-4.195850,-1.347828,0.306130,1.753539,-0.046987,7.772914,-5.013661,-0.810484,-5.484250,1.188123,1.794250,-9.366639,-0.869480,-8.287318,2.058494,3.356352,1.721106,-6.432121,3.837326,-1.998692,5.489705,2.982276,3.372668,-9.381775,-6.562289,5.262933,-4.601822,-9.086264,8.788534,1.509186,-0.049076,-4.683413,0.649241,-5.860346,-6.119609,-9.077455,8.532768,-2.145193,-2.664912,-8.125406,-4.372592,-1.197645,2.822732,9.142491,3.098691,-3.023981,-7.310924,8.564352,9.177279,-9.534948,-8.320683,9.802163,-3.195332,1.561316,-3.295442,5.681503,9.069467,9.056451,-8.611494,5.917684,-2.741597,3.687579,-8.396003,-0.701305,8.636564,1.662820,5.438755,0.053444,-8.846676,-8.044887,-1.560468,2.738343,-4.298956,6.104053,-5.018137,-0.173886,-1.888870,5.337381,1.960590,-7.975962,-1.028535,-1.861788,-8.770064,0.730774,-0.067490,3.780922,7.216993,-0.371431,-5.400654,-5.071274,-2.071633,4.454173,2.270601,0.753678,-6.245620,3.430610,-6.843889,-6.266611,0.452671,6.174227,-0.471208,-5.243855,-8.002351,1.544317,-0.329309,5.924626,-9.914071,3.677072,4.677986,-4.326005,-0.292859,-5.729424,-0.930603,6.032271,-5.995070,1.194762,-6.236165,-9.267878,3.060664,3.898528,6.118844,-3.471600,6.435919,0.210158,5.754408,-6.867093,1.940854,-1.145512,2.585963,0.364980,-1.816599,-3.377252,1.887630,4.831274,-6.384116,-4.347686,3.220588,-7.356513,9.009102,2.476694,8.031522,-2.177175,-5.912672,-9.697770,0.673647,1.421848,0.628851,-4.175746,-5.187096,4.744275,-1.423514,4.207842,-2.695723,-1.093899,9.244079,-2.608106,2.557867,-7.450940,6.684196,7.390215,-4.765644,0.773233,8.994152,-8.357719,9.608742,-0.294790,-4.380007,-6.246252,3.933824,-8.035626,-2.356015,-3.927154,8.318413,-2.119245,1.994818,7.416711,-8.734789,2.927110,-9.381095,-8.594169,1.203007,5.721732,-7.446999,8.734904,-0.511159,-3.298460,-7.313977,-0.530673,0.113263,9.948929,2.022315,3.969707,0.796294,2.790877,-2.757062,4.372909,-8.408385,0.269146,-7.617035,6.590731,-2.307187,-4.123326,-5.218321,5.972259,2.698216,-5.215554,8.885749,-0.881949,2.850701,8.334757,1.789940,4.609800,4.245552,-3.702660,3.143273,6.362964,-1.379173,7.235468,-8.926410,-0.742571,3.969531,-9.681747,-8.449590,2.562609,-5.305679,-8.166008,0.244646,-3.791547,-2.194867,6.910156,-5.752173,-3.203923,-1.531149,6.326301,-6.895590,-9.839478,-7.701639,-3.957899,9.072139,-6.033680,-8.982919,-7.394504,3.109878,6.672056,3.629886,3.216276,6.791951,-7.496959,7.122788,-9.083632,-8.931650,6.389667,-2.228610,5.308063,7.207298,1.239509,-5.505626,-8.946480,-3.402236,-5.173766,-0.769131,5.771996,4.196561,7.436177,8.770274,-3.141646,-0.248262,3.467504,0.049652,-6.939831,-2.974012,9.976463,1.284334,-4.796042,4.120995,-2.411762,9.896939,3.480228,8.174246,6.569823,-5.528560,-2.186361,-8.782600,5.549665,2.783572,-7.390410,-3.631318,-7.062823,7.687049,0.749735,4.156020,-8.915060,-8.321473,8.625763,-1.407559,-6.655352,-2.832179,8.639504,-3.226016,5.340532,0.773864,-3.468103,0.515732,2.308612,1.483611,3.640982,-7.126201,2.168148,8.265665,2.945960,-6.545642,-5.782385,-4.545004,0.687626,8.879452,-6.252614,-0.083664,-2.265326,-8.789856,9.977555,-4.459595,-2.202910,-1.209795,9.661375,2.690227,-5.418106,6.291601,-6.763625,-0.063678,-4.267011,-0.896853,-2.547696,5.727385,-3.858574,6.022403,-1.741155,-0.908462,-8.035605,-7.966351,-0.496299,-2.479947,6.165223,-2.010718,-8.032270,4.042841,-9.187671,6.810157,9.102768,3.244639,-1.266793,4.126372,-0.377464,-6.343106,-3.848668,0.437146,-0.975701,5.782595,6.301558,1.010033,4.614789,-3.177326,0.241299,-0.796452,0.030224,-1.408619,-2.651559,-7.631553,-3.282580,-0.036807,3.499450,2.056118,1.391954,-9.664206,-8.394966,-6.247728,-7.522544,3.299217,0.045698,-1.431566,2.807398,-2.471695,-3.765598,4.601338,1.339936,-0.896977,2.588109,-8.099903,-8.559563,4.816717,7.575557,-6.321120,-6.630976,8.874043,-7.769962,-7.466242,-6.488722,5.404133,1.993511,2.686134,-4.624967,-5.362690,-4.461224,9.612454,6.930003,4.770816,-9.309133,-8.352045,-3.336517,-8.046121,-9.800622,-1.000361,-4.064146,4.019256,-8.112726,-5.514543,-1.083172,-8.598485,-4.420829,-8.957936,-2.041390,-5.963992,9.069199,-0.954713,-4.683298,-4.311057,9.348480,2.835153,6.507430,-6.861239,-8.541388,-7.306167,2.974441,6.070369,-9.982983,2.790173,0.871892,-8.742699,-4.704968,-1.685015,5.387683,6.679876,-9.683572,-5.806904,-5.096045,5.102451,-8.560473,0.117385,5.865360,3.552766,-4.444081,-6.820364,-8.898152,3.307949,7.085542,0.362254,-5.988981,-8.440180,3.838558], dtype = "float32")#candidate|6496|(2925,)|const|float32
call_6494 = relay.TupleGetItem(func_6284_call(relay.reshape(var_6495.astype('float64'), []), relay.reshape(const_6496.astype('float32'), [15, 195]), ), 0)
call_6497 = relay.TupleGetItem(func_6287_call(relay.reshape(var_6495.astype('float64'), []), relay.reshape(const_6496.astype('float32'), [15, 195]), ), 0)
output = relay.Tuple([call_6490,call_6494,var_6495,const_6496,])
output2 = relay.Tuple([call_6491,call_6497,var_6495,const_6496,])
func_6503 = relay.Function([var_6495,], output)
mod['func_6503'] = func_6503
mod = relay.transform.InferType()(mod)
var_6504 = relay.var("var_6504", dtype = "float64", shape = ())#candidate|6504|()|var|float64
output = func_6503(var_6504)
func_6505 = relay.Function([var_6504], output)
mutated_mod['func_6505'] = func_6505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4872_call = mod.get_global_var('func_4872')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_6521 = relay.TupleGetItem(func_4872_call(), 0)
call_6522 = relay.TupleGetItem(func_4873_call(), 0)
output = call_6521
output2 = call_6522
func_6539 = relay.Function([], output)
mod['func_6539'] = func_6539
mod = relay.transform.InferType()(mod)
mutated_mod['func_6539'] = func_6539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6539_call = mutated_mod.get_global_var('func_6539')
call_6540 = func_6539_call()
output = call_6540
func_6541 = relay.Function([], output)
mutated_mod['func_6541'] = func_6541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_6550 = func_4488_call()
call_6551 = func_4488_call()
output = call_6550
output2 = call_6551
func_6556 = relay.Function([], output)
mod['func_6556'] = func_6556
mod = relay.transform.InferType()(mod)
output = func_6556()
func_6557 = relay.Function([], output)
mutated_mod['func_6557'] = func_6557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5567_call = mutated_mod.get_global_var('func_5567')
call_6599 = relay.TupleGetItem(func_5566_call(), 0)
call_6600 = relay.TupleGetItem(func_5567_call(), 0)
func_4362_call = mod.get_global_var('func_4362')
func_4365_call = mutated_mod.get_global_var('func_4365')
const_6602 = relay.const([4,3,-6,9,-7,10,-3,8,-7,-8,-8,1,-3,5,6,10,-8,6,-5,7,-7,-2,7,-2,4,-9,9,8,-6,-7,-2,10,10,-3,2,7,-6,10,2,8,-2,-8,6,4,-10,-6,-9,-4,6,-6,-7,8,3,-7,-7,-10,-3,-1,-4,-4,-7,-9,-9,-5,-10,1,-3,3,6,10,-6,-4,9,-9,-10,1,3,2,-5,-5,8,-4,-7,-9,-8,8,-1,2,-6,7,4,-1,-8,-9,2,9,3,2,-10,-3,-2,-2,-3,-5,7,-5,9,-10,-1,-1,-4,-2,4,7,7,-4,-10,3,5,2,-1,-3,-5,1,-1,-6,5,-1,1,6,-9,6,9,5,-9,-5,6,-3,10,-6,8,-7,-9,3,8,10,2,-1,7,-4,-4,9,7,-2,7,10,-9,2,9,10,7,-7,7,-9,-3,-1,1,7,-3,7,-7,9,5,-4,7,4,-3,2,-8,-4,-1,7,6,-2,-5,3,7,5,-3,8,2,-5,-10,5,-5,8,6,10,1,1,10,-5,-5,-8,-9,10,8,-8,-2,6,-4,5,-2,-9,6,7,5,-4,-2,1,-1,-5,-8,-7,8,8,-10,9,10,2,-2,-4,1,-9,10,-8,-3,-10,-8,9,-10,7,2,9,5,-7,-10,-6,-7,-8,5,10,9,-8,4,-2,-6,2,4,-7,-5,-8,5,8,8,-1,-1,2,-10,6,8,8,-6,2,-6,-1,-5,-5,-2,2,-10,3,-5,-1,5,-1,-5,9,-1,-1,1,-7,-2,5,-9,4,-2,-3,3,-2,-1,-1,1,-8,-10,1,-5,-6,-5,1,-9,-5,3,8,4,-4,2,-3,-5,7,-2,-7,-1,1,5,1,-8,-5,-6,9,-2,7,8,4,3,-7,4,-1,8,-10,-6,6,-9,7,3,-7,8,-6,-6,-8,-6,1,10,4,3,-10,4,5,9,9,9,-7,-10,3,-5,-2,-7,-10,6,-6,7,10,-4,-5,8,-4,-1,-3,-6,-6,9,-4,4,5,8,-9,-7,-8,-5,-3,8,1,10,10,-2,9,-8,-8,-6,2,-4,1,-1,4,2,10,-7,-9,5,-5,8,8,4,6,-7,-6,-1,-4,-5,-8,-8,-7,9,3,7,-3,-9,-1,-7,5,-7,-6,-7,1,-9,-9,9,-1,1,-2,-10,-5,8,-4,-5,10,7,2,-8,-5,4,-5,9,-9,10,1,8,8,4,-10,10,-2,-10,2,9,-5,9,-6,-6,1,10,-5,-7,-6,-7,-1,8,6,10,-6,-3,-4,2,3,8,-3,5,7,-5,3,1,10,7,-7,-2,-8,5,1,3,-5,-7,1,10,-4,-3,6,-2,1,-2,8,3,-1,9,4,-6,-5,1,7,-4,-6,-9,-10,1,-2,-2,-9,6,1,-3,-7,8,-4,-8,10,-3,10,9,4,-1,-4,-7,-8,-4,8,6,8,7,-2,-2,-10,9,6,-10,-9,-7,8,10,6,-4,1,8,-5,1,4,2,-8,-6,8,-3,10,3,-3,-1,7,1,-9,-9,-8,6,4,7,-8,4,-8,-4,-8,-4,10,-10,-5,4,2,10,2,3,3,-7,1,-8,10,-7,1,-9,-9,5,-10,9,10,3,7,-9,-5,3,8,5,5,6,5,4,-4,9,-8,9,8,-2,-7,-5,-7,-8,-10,-3,-7,1,-4,-6,-6,6,3,-1,-7,-6,-6,-9,-1,-6,-10,-8,-7,6,3,-10,9,2,1,-3,-8,5,1,-7,-10,5,-1,4,-1,-7,-4,-5,5,5,5,-6,-6,-9,4,-9,-8,-4,-7,-4,1,-7,2,-8,-3,7,-10,1,4,10,3,-4,-4,-7,-7,3,6,-2,4,-7,2,3,7,-7,1,10,-7,-4,-1,5,-3,5,-8,10,-7,-1,1,5,7,10,9,3,-4,-10,9,4,-4,3,-6,-6,-10,-5,10,-2,2,-6,-1,9,-5,4,-2,5,-9,-10,1,-1,-4,5,-8,2,10,1,6,-9,-8,-4,-3,-8,9,-7,-5,-5,-7,-2,9,5,9,-1,5,-7,-4,3,2,-8,-1,-5,-5,5,1,7,1,-9,7,7,-9,4,5,-1,-9,2,-5,-6,5,4,-9,8,-4,-10,7,2,-2,-9,4,-6,10,4,-4,8,4,-7,-7,-4,-2,-4,2,6,2,2,7,2,-7,3,-9,-3,6,-7,-7,-6,5,-9,-5,4,-10,5,6,5,4,-5,2,7,9,3,-4,4,-10,-10,-6,2,9,-5,7,-10,-1,-3,4,3,5,-7,6,2,-4,10,-5,8,-2,-10,-5,7,5,9,3,3,9,-8,-3,10,1,7,-2,1,-10,-10,-1,-2,-10,-8,-6,-10,-10,9,-9,1,9,-9,5,-5,-10,3,-4,10,10,7,-8,9,5,3,7,5,4,-6,-3,5,6,9,-4,5,6,10,-7,3,-8,-8,-10,2,-9,2,-1,-7,8,-8,4,8,3,7,-6,-6,7,-1,8,-3,-2,-1,6,2,6,6,-5,-2,-10,-10,9,3,9,7,7,-4,-6,4,3,-4,7,-8,4,-1,-1,3,9,10,-1,-5,6,9,-6,-2,10,7,7,2,-9,6,-5,2,6,-2,-10,3,-8,-7,-7,3,-6,7,-8,-5,-1,7,-9,-10,4,9,-2,-9,7,7,9,-1,2,8,-6,-9,3,3,-6,8,8,3,2,-10,-9,2,7,-3,-1,9,8,-2,-3,-5,-9,-10,-10,7,-8,-10,-4,-7,6,-1,2,4,-7,1,3,-2,10,-1,8,4,-5,-3,9,-1,9,-3,2,-3,4,-3,-1,-1,-9,-3,2,-3,2,-7,5,5,10,6,-5,-10,-4,-8,-10,-6,-3,7,6,4,3,8,-9,-3,3,8,-8,-7,-3,-7,-7,-3,-2], dtype = "int16")#candidate|6602|(1092,)|const|int16
call_6601 = func_4362_call(relay.reshape(const_6602.astype('int16'), [14, 6, 13]), relay.reshape(const_6602.astype('int16'), [14, 6, 13]), )
call_6603 = func_4362_call(relay.reshape(const_6602.astype('int16'), [14, 6, 13]), relay.reshape(const_6602.astype('int16'), [14, 6, 13]), )
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_6613 = func_5416_call()
call_6614 = func_5416_call()
bop_6618 = relay.equal(call_6613.astype('bool'), relay.reshape(call_6599.astype('bool'), relay.shape_of(call_6613))) # shape=(12, 9, 15)
bop_6621 = relay.equal(call_6614.astype('bool'), relay.reshape(call_6600.astype('bool'), relay.shape_of(call_6614))) # shape=(12, 9, 15)
func_1041_call = mod.get_global_var('func_1041')
func_1045_call = mutated_mod.get_global_var('func_1045')
const_6626 = relay.const(-6.873310, dtype = "float64")#candidate|6626|()|const|float64
const_6627 = relay.const([[6.209163,1.871179,8.251624,-2.013561,-5.163270,2.819047,4.635257,-5.142463,-4.553135,-0.218726,9.444474,5.517473,-9.877993,7.905159],[7.046072,-8.190892,6.138111,4.278005,2.616709,-6.985841,0.477092,5.499208,8.172460,-5.604318,-3.634418,7.081320,-5.043770,-6.310177],[4.532721,-1.182163,2.504457,4.352442,-7.863918,-3.572167,0.063744,5.311171,-8.413719,3.017905,2.663399,5.291613,4.722339,3.838969],[2.844222,-5.711791,5.454582,6.999588,4.911342,9.777836,5.483074,-6.091103,-6.053468,-0.810974,-5.434393,1.437983,0.777462,-0.455631],[1.484802,0.871443,9.121683,8.937552,-2.632077,0.384274,1.656924,7.543074,-4.713306,5.442048,-9.571606,2.007700,-1.428004,-2.036042],[1.686753,-3.494594,-2.492436,-9.835465,1.244655,7.594164,-6.573917,2.151589,0.067771,1.965083,-1.073633,1.990641,-5.496876,-5.829400],[1.077407,-7.594350,8.423792,4.000875,-2.680009,1.821650,6.439187,7.971876,8.860025,3.616485,-7.951273,7.592758,-0.069431,7.229388],[5.546619,5.655059,-9.059840,-5.433427,-7.022257,0.326388,3.257627,-1.748147,8.326600,-0.396176,-5.462125,-1.574092,-1.960181,-0.873420],[-0.209546,3.914488,6.640939,-8.625165,3.613192,9.967757,-3.452257,-1.632179,3.051487,-5.503295,8.723692,1.362901,-0.866060,-2.810015],[2.509945,2.535170,-7.734109,-2.634416,6.078482,2.155608,3.204061,-0.385652,4.173806,4.464005,4.831626,-3.107839,-5.290318,0.447186],[1.160596,-4.488574,-5.731329,-0.583951,-5.335060,-9.154738,9.855254,-4.826355,-9.420100,-0.591297,-8.075112,-0.135008,8.268715,-4.924921],[-6.334855,-9.633352,8.361260,5.838605,0.250879,-4.836690,-4.839989,7.759093,-0.527942,-0.464003,7.458075,-4.416556,-7.561347,8.348857],[7.888953,1.782520,8.629401,3.132014,-3.086882,-2.212230,-0.675942,-3.045997,6.642194,-2.121941,7.268425,-6.806814,9.539190,-9.498103],[9.053061,8.439088,7.400722,1.811348,9.084959,1.531445,8.709380,7.131182,-4.420697,-5.414681,9.044367,7.776876,4.162729,1.137944],[9.544206,-7.238337,-1.401764,0.544408,-8.947316,-7.783815,-5.235999,-5.574254,-5.840257,0.856025,6.434947,-1.602407,3.457049,6.346913],[-6.352112,9.425137,4.944834,-0.079158,-0.109594,6.098344,-3.030530,-1.104518,-0.923159,-6.395764,-6.914834,0.431475,9.630296,-3.277952],[-1.048667,0.304736,8.362782,-2.551463,-2.458088,-1.174896,-2.128489,-7.307560,5.689316,3.809831,7.236801,-5.549339,-8.115219,1.207587],[-6.570500,-8.712048,5.424617,6.829535,-9.696065,6.198740,-6.056235,5.513632,-7.405260,-8.025508,-1.522310,2.656315,9.701780,2.808991],[4.162066,-9.124890,8.264223,-8.153278,-9.243489,6.790429,3.613313,-6.299197,-6.326276,8.375349,8.025061,-3.326516,5.858196,4.382789],[-4.721312,-6.037959,3.816027,5.835803,6.311084,3.263732,2.697992,5.696784,-7.459765,-1.888313,1.937039,7.699031,0.501584,0.198812],[3.214025,-6.813005,3.430634,5.383958,3.837089,9.520020,8.862663,-0.642150,0.064520,7.045068,6.601625,-3.773296,1.592215,5.805343],[-7.148444,-5.068035,2.233026,2.836613,9.974254,7.448059,9.546448,-9.089626,-1.601780,9.679916,-5.084916,4.896802,-6.707223,-2.494249],[4.430029,5.998247,-8.554048,6.550398,-5.990494,3.435903,9.040411,-4.908080,2.207649,3.891001,0.956190,-2.114979,-8.610847,-5.507900],[3.761376,-5.517679,-4.645850,-6.741678,6.730271,4.928961,-1.743674,-7.684699,3.431395,-3.257533,7.621081,-6.440226,-2.847098,-3.409272],[-4.330482,-1.158602,5.332824,-9.776919,-3.862560,2.375126,-1.340821,8.142588,3.165409,7.941220,-1.457304,9.456095,5.843280,-0.452498],[-7.435053,-7.719953,8.299718,8.364959,-0.072160,7.319835,-0.102279,-4.895513,3.896979,-0.495399,3.316507,8.458746,2.615785,6.951154],[1.867057,7.969230,-4.640901,-3.994886,-4.992260,7.534211,-0.640071,7.441738,6.918865,3.046404,7.588778,7.515727,3.362149,-1.696098],[0.392958,-6.866660,7.556058,5.601651,5.876360,-6.532010,3.483612,-0.527916,-0.623263,-8.915094,-4.478465,-0.739301,9.762296,-9.181134],[-5.161422,-5.205792,6.924024,-4.376116,-7.725533,-6.764254,-0.296362,0.949264,-4.177299,4.205417,1.818374,-4.934770,6.733798,4.798613],[-7.667919,-4.288766,-2.322912,4.023060,6.205595,-4.761115,2.221014,2.501553,6.574932,3.396549,4.920205,-0.413520,-1.044635,-3.089571],[5.449986,6.501716,9.109323,7.447031,-1.467839,8.506915,-1.200828,9.089873,3.384363,0.971553,6.508089,-0.507723,0.664788,1.452354],[-7.637029,-6.942401,3.115734,0.771743,9.544262,-5.920328,7.146809,1.654929,1.572129,0.785573,2.988438,-6.747353,6.350335,7.953067],[9.500398,7.276613,-4.862255,-6.299211,3.807115,7.457192,-2.419666,-8.510778,9.469966,9.219385,-6.738783,7.090451,-9.190007,-9.793803],[0.296616,-3.201269,-9.325241,-4.199213,4.292144,-0.385429,-7.406783,4.191712,6.852288,1.469468,7.245268,0.539288,3.022979,-3.302657],[-4.170674,-3.436750,-4.029550,7.873706,-3.814854,-6.783974,-0.383772,-3.800347,-7.159934,3.380823,6.740578,-1.365656,9.447034,-7.528632],[9.699652,-7.005923,7.876017,2.522699,-0.635424,-5.749576,-1.922413,-8.181100,1.880093,0.330817,0.665106,4.990039,9.197399,1.513643],[7.181818,-1.934519,-9.090129,0.922703,9.182797,-8.443228,2.236324,-8.423348,0.879777,-9.131575,9.503841,-0.671442,-3.004165,7.835625],[3.780641,-0.069263,-9.831133,0.019541,-7.687481,-2.307959,7.469821,8.492504,6.447934,-0.370638,-3.460280,9.472838,4.244581,-4.428402],[1.297520,3.697798,6.582610,9.474010,-7.435325,-6.757458,9.329309,-4.931065,8.537116,1.306151,9.548564,3.406550,-6.834887,8.712984],[-4.793095,6.275297,9.507929,1.206644,3.203893,-9.555515,0.347920,-4.189109,5.030469,-9.569786,-6.136094,3.036674,9.021936,6.332012],[0.158048,8.282261,8.657908,3.248993,-4.307824,0.522860,-5.137012,1.045549,-9.141960,-6.354860,2.720171,1.521876,3.579105,7.655269],[0.552843,-8.325315,-7.978656,0.693985,8.742380,-0.719846,2.548746,0.995214,-6.469813,7.427285,-7.615817,-3.130804,-4.195305,4.934071],[6.286848,2.933802,1.497760,4.734024,9.928850,5.578455,-8.901602,-5.833899,7.403594,3.412074,8.888217,8.892712,-1.798183,2.566866],[3.541014,-4.997781,0.371323,4.413692,-1.285572,-5.976138,3.390309,-9.247878,-0.806602,5.427369,-2.958582,0.740198,-7.404023,0.732255],[-7.294489,5.146470,7.832003,-1.249654,5.549780,2.249417,7.493876,-5.367651,-1.795419,-1.575891,7.613091,-1.871444,-2.109609,1.727568],[-8.879233,1.568154,6.251571,-6.852234,0.955079,-1.236659,8.189090,-9.173736,6.995709,0.918115,0.534108,-6.947185,-7.124189,-3.780739],[-6.285764,5.295165,-1.269350,-0.522121,7.384581,-0.477109,7.398414,-9.901671,-3.989084,4.113440,6.524628,0.287868,-7.295034,7.131214],[6.998948,4.633498,-2.612571,-4.118504,-1.654990,-7.673231,-9.651459,-2.953351,5.117682,-3.975657,5.844246,-9.341260,-8.621862,9.105276],[1.831750,3.995160,-1.738350,6.902728,3.661852,8.245618,-4.505183,-6.741800,-9.802510,-4.121789,6.462581,9.583297,9.371458,5.452620],[-0.277106,-1.822258,1.949801,-6.035318,8.023915,-7.473444,2.174153,-2.482680,-9.581555,-0.545166,4.250230,-6.753897,9.581452,8.338625],[3.334802,0.838936,6.104058,-7.255314,3.503451,-6.128056,-5.770418,-4.318068,-4.676522,4.955204,1.125726,4.722414,-5.409442,7.827278],[6.507342,-7.145807,6.823950,-1.583419,-6.676490,3.023243,5.704542,-6.753312,0.937893,-5.281362,4.343552,-3.303907,2.475458,6.336125],[7.512303,-5.871272,0.565272,-0.129227,-8.476296,1.650488,7.313000,-2.276245,-2.304933,-9.182513,2.441775,8.528568,-9.933278,7.434630],[1.330172,1.825181,9.828117,5.929653,6.505053,8.262726,9.028784,-2.122261,-6.212862,6.488574,3.571690,-0.505846,-9.566136,3.526632],[9.230316,8.309424,4.696460,2.343692,-4.008993,6.627284,-3.188290,5.623976,8.097105,-7.116914,-4.023082,-4.391545,3.153333,6.893195],[-4.002870,-1.656549,9.457053,-3.275288,3.104663,-0.620197,-1.948013,6.675780,-2.529797,-2.970117,-9.402261,0.806223,0.184844,-0.621507],[-0.080742,-1.926975,-9.186791,-8.060500,-4.737767,-0.401824,9.310984,2.322711,-3.326524,-5.601561,1.414544,-5.291944,-2.276372,9.846120],[9.817525,-5.622920,2.420011,-6.645835,-2.123443,1.355281,6.659940,-0.862402,-1.933516,-7.091774,-0.785920,-6.806413,-5.499552,7.717456],[-4.939685,-0.431460,-4.799879,-1.781866,5.771570,9.884435,2.399166,8.049954,-6.653787,9.667884,3.121745,7.631900,1.220106,-5.875801],[-0.054829,-2.161085,-2.466430,-4.860131,0.551685,-8.770916,4.827438,-2.722057,-3.533369,8.814179,7.611158,-1.900945,-0.286242,-8.690165],[9.788292,6.934613,-3.125771,-3.999283,-3.808534,4.284375,1.822825,5.745894,9.080689,-4.682386,9.766112,-1.609830,-6.379436,7.027467],[-1.721823,-4.285776,-6.412606,9.472475,5.126167,9.544524,-9.416439,-7.912479,-9.419139,-5.897467,4.706136,-1.934794,-2.549313,-6.995441],[6.692792,-5.104105,5.916398,3.642928,-7.247419,6.557542,-6.907936,-8.456460,7.519275,4.412193,-0.707128,-2.596893,-5.384099,-2.336450],[5.593051,4.820112,-3.582766,7.098703,6.967118,-1.470463,9.504329,0.157688,-0.959504,3.422873,-1.133236,-1.354991,-1.674660,5.154406],[1.967043,-3.962846,-7.170860,2.576293,0.988969,-6.410588,0.861112,-9.030867,-3.778851,-2.464852,4.566435,1.762136,-9.214477,-6.993815],[-2.334750,2.154403,6.867202,-2.967854,-6.571440,9.481076,-3.269121,-8.558169,-8.191866,5.645189,-1.874016,2.921866,0.378708,-3.023333],[-9.210243,-8.795969,-3.220117,-5.660818,6.978840,1.378541,-0.283080,6.553323,-5.627835,-6.582473,4.761090,-4.190146,-1.498640,3.636667],[-2.448465,0.393791,7.147414,1.665082,-5.510138,9.037528,-4.239448,3.781700,2.490789,-7.410102,-9.117738,-7.701495,-2.179356,6.418119],[2.821988,-9.666889,-1.318877,-0.859419,3.143986,2.682334,-9.475678,-4.077433,0.252440,2.367206,-5.490336,8.904403,5.299502,-1.437325],[-4.566780,-8.978066,3.566669,7.224345,-7.460129,6.804629,8.515055,4.136403,4.990083,-4.416858,5.004048,-4.305964,7.220383,-5.508436],[0.977550,-5.999349,5.670407,8.526191,4.658266,-3.078605,6.258449,-1.771723,9.033158,-6.124045,7.370247,2.288150,-5.863509,-3.845341],[6.590854,-7.536535,-6.252044,-1.286896,8.111941,-8.003826,-4.785158,5.968134,-3.685756,-1.202103,8.601105,-6.201655,-3.108977,-3.246363],[2.964784,-0.855058,8.881403,-2.558213,-6.367320,7.863243,-6.219339,-8.611911,2.939333,-2.973661,6.896522,4.976973,3.764285,6.268297],[3.032124,3.178443,5.768160,-7.164365,-2.312716,-3.766631,7.615500,3.299211,6.659476,2.118218,7.501930,-7.509705,-0.211382,9.379023],[9.463136,8.762729,-7.919402,-7.603858,5.316337,3.366872,8.499457,-8.614113,9.202034,-0.061758,1.831422,7.093934,-4.595902,-9.873021],[8.521174,-8.569848,-5.896683,-5.793927,-0.208323,-9.377265,1.362719,-5.416876,9.434219,3.602875,-4.884759,0.147077,4.533129,-0.632979],[-0.055646,7.585119,-3.829552,2.952569,8.463103,-7.468176,-9.481083,3.920530,-7.542107,-1.264781,-2.503191,-6.480301,0.978758,8.551855],[5.198089,-5.628131,-9.453228,7.079021,-4.219041,2.700449,-1.499085,8.586292,1.113400,-6.868674,-2.757506,7.028981,8.548390,8.791068],[-1.472823,6.791183,-0.856978,3.029459,3.211922,-6.417547,9.597631,-0.787289,7.154452,-4.149273,-2.759378,-2.697461,8.671647,-1.421750],[7.596772,-4.524735,-6.572662,7.196598,2.865073,8.822483,-5.158351,-6.473557,9.804692,0.627085,2.004340,6.202814,3.041511,-0.071440],[-7.885434,0.620319,0.273410,8.868924,0.816620,-6.819895,5.131007,-4.816059,2.030390,-4.179123,3.257424,6.916711,5.507202,-7.844770],[-4.422440,-1.743512,2.141471,7.895221,7.507705,-1.020175,7.064762,2.531050,-8.389956,-3.777999,5.854972,3.826613,4.720117,9.064763],[0.747759,8.293582,-2.036543,-8.530537,5.486903,-7.937101,-4.514155,9.625495,-2.013187,5.428261,-9.206986,-0.476480,-9.531782,-7.464966],[9.832716,-2.762600,-8.330185,-5.515386,8.879809,-7.792957,-8.536861,2.362448,-2.814034,1.134275,-9.955942,7.815655,-6.556461,-4.564322],[9.950892,-4.058432,-2.744739,-1.437239,-8.454781,0.485116,2.202134,-9.357960,8.778916,4.000800,5.019657,-8.409162,1.577315,-4.502066],[5.334267,-7.143648,-7.051093,3.303699,0.314444,9.148923,6.561006,-3.876564,-6.801317,-1.351906,-0.538694,4.888811,-7.956700,5.578107],[-9.618399,-7.761020,-8.613833,-7.818674,4.003845,9.313391,3.164248,7.154885,-4.759672,-8.669508,-1.548197,-9.863902,-3.623577,-3.300053],[9.037090,-2.833023,-2.306633,6.917888,7.827513,5.527086,-7.630389,5.033053,0.208339,-9.667005,-2.515607,-5.269536,0.508351,-3.422792],[4.413186,6.893797,-4.916675,-8.687495,-9.508877,-2.433059,7.196807,-1.473518,-4.764459,-1.971839,-0.942788,9.796269,5.198577,-9.681264],[-5.941233,-4.162354,6.601583,-8.387821,6.855544,-3.423746,5.938631,4.698700,-8.819932,-7.854043,5.742608,-3.978820,6.915979,5.974574],[-9.202430,0.522931,-1.653656,-7.959739,9.495524,5.188560,6.109436,-2.538350,-8.687563,9.980230,-4.681229,-4.142840,-2.842658,9.196333],[-3.017067,-9.168937,-7.433178,-4.564906,1.582981,3.429420,3.435591,1.416786,-5.927749,1.313046,2.850935,-5.175121,-7.412921,-4.418877],[7.014743,-3.384267,-6.552993,-6.431442,7.708950,5.365264,5.291917,6.267583,4.364237,2.635887,8.096073,4.143592,-5.594170,-8.526086],[-3.671561,7.649150,-9.303892,5.882215,8.635630,-3.788543,-1.918906,9.766657,-2.707653,3.227895,-1.217699,1.893063,8.845513,-5.509206],[-9.293811,8.108289,1.037609,8.216690,-9.741092,-1.198706,-5.668392,-6.967708,-9.256461,7.752566,0.477918,9.113558,5.553575,6.841947],[4.777845,-0.534057,-5.100451,-3.872829,9.092036,3.614983,-4.041436,5.781972,-8.114051,-1.030154,8.879308,6.389164,-0.030863,-0.270075],[-1.075522,-3.485349,-2.535658,1.588811,-7.291183,-8.213250,7.660672,-8.020363,-8.582532,9.071729,9.792236,9.670056,1.626569,1.336865],[4.308014,5.988799,0.859364,3.934364,3.816915,-3.301378,-0.067616,2.720705,3.397994,-9.298699,3.721219,-5.472988,9.239390,5.532356],[2.715889,-8.283121,1.504173,-6.614260,8.616875,-9.280993,-8.804321,0.563288,6.225697,7.811427,-2.815835,-4.901977,2.429194,-0.115881],[3.568166,5.880370,3.838930,9.864832,9.726292,0.553394,-4.855928,7.129196,9.614000,7.619081,3.240125,5.121717,-7.083129,9.120267],[-9.834652,-1.024838,-3.953275,-9.819870,3.560728,-6.675577,4.093431,-6.716709,4.447820,1.144979,-5.806426,8.934916,0.858500,2.571472],[2.792622,1.933687,-2.205925,8.742479,6.603918,-0.449027,7.013893,9.227733,7.744460,-1.585710,-8.501570,9.742897,0.947279,-1.497911],[0.097457,-1.849330,9.738125,-1.451472,-4.239964,-4.355071,-4.993110,-5.054032,2.435560,-7.817959,1.009500,9.920424,-2.834220,-8.093074],[1.890428,-8.500118,-4.682979,0.066669,-2.529427,-2.637431,5.782128,-8.236619,3.753441,-7.079080,9.113714,7.698017,6.606241,-5.550809],[6.066271,4.631591,9.186817,1.410749,3.344761,0.087392,1.502404,-1.228099,-2.307254,-0.845477,2.367193,-3.421588,1.091978,-2.221278],[-6.047037,7.405367,1.698920,8.912914,-3.307704,9.802818,1.862206,-4.272325,-0.232003,-3.487147,8.763242,-3.368035,6.917681,1.370711],[0.789748,1.344833,-8.935179,9.394391,-9.285058,3.161136,-5.362968,-4.423702,7.707076,-5.608997,7.789921,4.297326,0.034813,7.452327],[-2.725776,9.123988,-9.912397,-0.693716,5.167805,6.336631,-7.577655,5.492125,8.492223,-8.071318,-6.195582,-9.586557,8.577268,-7.362740],[4.624643,6.708430,6.170930,9.471594,-9.014638,-4.755382,-8.212469,3.637355,-3.576212,3.370392,-9.986807,2.525768,-0.601347,-9.258704],[7.447159,-5.308836,-1.600442,-6.104865,-5.068751,-0.775588,5.740773,5.989617,-7.295048,-4.597272,2.295007,-9.086010,-8.063957,-4.135345],[0.295927,-4.166971,3.198794,5.493007,0.176185,9.784794,-1.541882,-6.210105,0.922158,5.596774,-4.399422,-9.317575,1.649027,9.578801],[-0.709049,-3.582508,-5.951094,-9.990141,1.788286,4.011777,-5.310333,-0.424747,-5.900919,-0.065188,-6.079716,4.383813,-4.114534,-6.529538],[-0.948545,0.310874,9.428588,-2.462115,-8.956818,-2.093519,3.364144,-3.007078,-9.474420,-7.764138,9.222408,-0.183932,-1.491563,-5.873620],[-9.158088,-4.771057,-8.957753,0.819329,0.783252,2.455991,4.970879,1.986361,-7.767788,-1.900542,-1.797726,4.906968,0.632828,-2.773736],[-6.091073,-4.165905,8.326157,9.574131,-6.469497,-3.709225,5.226808,-8.123078,6.332544,6.582511,1.652473,-2.153230,-4.474831,-8.668499],[-3.437342,8.366448,6.964376,8.127425,-0.719621,8.513506,3.876989,-1.096339,0.429166,2.283441,-0.903278,-7.039229,-1.616296,2.045902],[9.380447,4.884981,-9.967157,-6.488415,-4.414755,5.341448,-1.758858,-5.548371,-4.135898,-5.993371,1.590618,-0.605158,-5.423624,9.565749],[6.099895,4.744959,-6.300125,-3.413698,7.274042,9.796960,-0.448886,-1.441704,2.655471,2.029625,3.302068,7.534841,6.469419,-5.177189],[8.107750,3.583861,3.694258,4.450794,0.829674,-0.092352,-5.438394,-2.240698,-8.630796,4.519394,7.294906,9.469468,9.478605,2.840680],[-1.290388,-5.439439,-6.996334,7.983314,3.797338,1.191577,-2.220131,5.600260,5.788040,-6.340198,6.268617,2.861759,-6.637157,5.030730],[-6.387599,-9.439392,7.603470,-7.557346,-4.094001,7.973554,-1.386984,-6.354787,-4.891082,8.562703,-0.717249,-4.625266,4.109819,-4.006275],[-1.294349,5.900580,0.183516,-0.280069,1.222023,-7.866877,-5.582650,5.827942,-6.857689,8.078935,8.241779,8.648535,-2.436994,9.435318],[2.718301,5.925206,-3.591470,-0.316337,0.712355,-6.257330,2.267123,-3.282958,-6.202491,-0.081115,-4.143186,9.612301,-3.498683,8.381213],[-7.949321,4.182569,-2.371329,-1.190185,1.762076,-4.423023,1.177604,3.983907,9.518388,-5.988158,8.491518,4.255051,-9.526172,-3.455693],[7.662354,-5.280011,-0.470406,8.792195,-8.712913,2.279701,6.478171,-6.154685,-1.522832,8.477733,-9.105870,4.839610,5.315311,3.660961],[-5.063763,-2.929205,7.728892,0.917318,-1.174967,-5.879821,-4.115868,7.352551,-7.391449,-9.394076,5.348472,-8.895444,7.064878,-2.677984],[-5.059249,0.904718,2.409017,-8.256158,-1.865015,-8.744192,6.319278,3.207402,0.699635,4.110843,6.574133,-7.591658,1.539030,-6.259400],[3.620375,1.582300,-7.091616,-4.735961,1.828658,-0.635463,-4.369453,-1.040137,9.314551,-3.587738,-4.790008,-0.130598,9.256256,5.138981],[-2.039527,-0.308271,-8.973156,2.597688,-7.741863,-7.349934,6.176974,7.818906,3.156625,7.695229,1.601605,8.029769,6.844388,1.627344],[2.697197,2.721671,-5.624610,8.649254,-4.198856,3.324963,-9.194853,-2.081505,-5.049407,6.776587,2.187393,6.986045,-8.744202,8.142300],[-3.677185,3.805059,9.458210,9.713312,-8.669457,-2.422870,-0.114560,3.344264,6.745646,-0.806237,7.302914,2.832764,-0.591295,8.147228],[-1.350032,-7.769509,-2.103550,-8.383840,-9.604579,1.969788,-1.389704,9.923521,-0.010112,8.832085,-6.945496,7.616875,0.907283,6.407835],[5.710230,0.028259,9.760280,1.443022,8.502167,5.941507,4.364207,-0.966052,-9.209759,-6.533993,-2.984231,-1.603359,8.337898,-8.155257],[-6.411445,-6.083990,-8.860342,5.993259,6.413624,2.875208,-3.491814,1.827589,-5.966883,2.443150,8.572490,4.770984,7.226755,6.429518],[5.253823,-5.243556,3.604447,-7.418670,-8.607052,8.200805,-5.813518,-9.048538,0.351351,-3.572321,9.911564,-5.646717,-9.166812,-6.940524]], dtype = "float64")#candidate|6627|(135, 14)|const|float64
call_6625 = relay.TupleGetItem(func_1041_call(relay.reshape(const_6626.astype('float64'), []), relay.reshape(const_6627.astype('float64'), [15, 14, 9]), ), 1)
call_6628 = relay.TupleGetItem(func_1045_call(relay.reshape(const_6626.astype('float64'), []), relay.reshape(const_6627.astype('float64'), [15, 14, 9]), ), 1)
output = relay.Tuple([call_6601,const_6602,bop_6618,call_6625,const_6626,const_6627,])
output2 = relay.Tuple([call_6603,const_6602,bop_6621,call_6628,const_6626,const_6627,])
func_6630 = relay.Function([], output)
mod['func_6630'] = func_6630
mod = relay.transform.InferType()(mod)
output = func_6630()
func_6631 = relay.Function([], output)
mutated_mod['func_6631'] = func_6631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_6664 = relay.TupleGetItem(func_4625_call(), 1)
call_6665 = relay.TupleGetItem(func_4626_call(), 1)
func_2244_call = mod.get_global_var('func_2244')
func_2247_call = mutated_mod.get_global_var('func_2247')
const_6672 = relay.const([-8,-8,-10,10,9,1,1,7,-4,-7,8,10,-3,7,10,6,10,3,-6,-8,-6,-1,2,4,-7,-7,-2,-1,4,7,-7,2,-6,9,-7,-8,-7,3,-9,9,8,10,-3,-9,2,10,8,1,6,-5,-9,9,4,-9,-1,-8,4,-2,-1,-5,6,4,-7,7,7,8,7,-3,-1,3,-1,-10,-2,-4,-3,8,4,5,-9,7,-6,-1,4,3,4,-7,10,-10,2,-5,-4,-8,5,2,-6,9,5,5,3,7,6,4,3,-6,9,4,2,-4,3,-2,-6,-1,2,4,-3,-3,-5,5,-3,7,-2,-7,-10,5,8,4,-8,-7,-10,6,-2,-6,-7,6,-2,4,-3,10,4,7,-3,-6,-6,3,-1,-1,7,-1,8,6,10,8,3,-7,3,8,2,9,4,6,-1,10,4,-6,-9,-6,2,-4,-2,-3,2,-3,3,4,5,7,-7,-6,8,-7], dtype = "uint8")#candidate|6672|(180,)|const|uint8
call_6671 = relay.TupleGetItem(func_2244_call(relay.reshape(const_6672.astype('uint8'), [15, 3, 4])), 0)
call_6673 = relay.TupleGetItem(func_2247_call(relay.reshape(const_6672.astype('uint8'), [15, 3, 4])), 0)
output = relay.Tuple([call_6664,call_6671,const_6672,])
output2 = relay.Tuple([call_6665,call_6673,const_6672,])
func_6699 = relay.Function([], output)
mod['func_6699'] = func_6699
mod = relay.transform.InferType()(mod)
mutated_mod['func_6699'] = func_6699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6699_call = mutated_mod.get_global_var('func_6699')
call_6700 = func_6699_call()
output = call_6700
func_6701 = relay.Function([], output)
mutated_mod['func_6701'] = func_6701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_6702 = relay.TupleGetItem(func_4625_call(), 0)
call_6703 = relay.TupleGetItem(func_4626_call(), 0)
func_6485_call = mod.get_global_var('func_6485')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_6715 = relay.TupleGetItem(func_6485_call(), 0)
call_6716 = relay.TupleGetItem(func_6487_call(), 0)
output = relay.Tuple([call_6702,call_6715,])
output2 = relay.Tuple([call_6703,call_6716,])
func_6725 = relay.Function([], output)
mod['func_6725'] = func_6725
mod = relay.transform.InferType()(mod)
mutated_mod['func_6725'] = func_6725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mutated_mod.get_global_var('func_6725')
call_6726 = func_6725_call()
output = call_6726
func_6727 = relay.Function([], output)
mutated_mod['func_6727'] = func_6727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5567_call = mutated_mod.get_global_var('func_5567')
call_6728 = relay.TupleGetItem(func_5566_call(), 0)
call_6729 = relay.TupleGetItem(func_5567_call(), 0)
func_4766_call = mod.get_global_var('func_4766')
func_4768_call = mutated_mod.get_global_var('func_4768')
call_6747 = relay.TupleGetItem(func_4766_call(relay.reshape(call_6728.astype('bool'), [12, 9, 15])), 1)
call_6748 = relay.TupleGetItem(func_4768_call(relay.reshape(call_6728.astype('bool'), [12, 9, 15])), 1)
output = relay.Tuple([call_6728,call_6747,])
output2 = relay.Tuple([call_6729,call_6748,])
func_6751 = relay.Function([], output)
mod['func_6751'] = func_6751
mod = relay.transform.InferType()(mod)
output = func_6751()
func_6752 = relay.Function([], output)
mutated_mod['func_6752'] = func_6752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5567_call = mutated_mod.get_global_var('func_5567')
call_6786 = relay.TupleGetItem(func_5566_call(), 0)
call_6787 = relay.TupleGetItem(func_5567_call(), 0)
output = relay.Tuple([call_6786,])
output2 = relay.Tuple([call_6787,])
func_6791 = relay.Function([], output)
mod['func_6791'] = func_6791
mod = relay.transform.InferType()(mod)
output = func_6791()
func_6792 = relay.Function([], output)
mutated_mod['func_6792'] = func_6792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5936_call = mod.get_global_var('func_5936')
func_5938_call = mutated_mod.get_global_var('func_5938')
call_6837 = relay.TupleGetItem(func_5936_call(), 0)
call_6838 = relay.TupleGetItem(func_5938_call(), 0)
func_5544_call = mod.get_global_var('func_5544')
func_5545_call = mutated_mod.get_global_var('func_5545')
call_6859 = relay.TupleGetItem(func_5544_call(), 0)
call_6860 = relay.TupleGetItem(func_5545_call(), 0)
bop_6876 = relay.logical_and(call_6859.astype('bool'), relay.reshape(call_6837.astype('bool'), relay.shape_of(call_6859))) # shape=(5, 11, 13)
bop_6879 = relay.logical_and(call_6860.astype('bool'), relay.reshape(call_6838.astype('bool'), relay.shape_of(call_6860))) # shape=(5, 11, 13)
output = relay.Tuple([bop_6876,])
output2 = relay.Tuple([bop_6879,])
func_6891 = relay.Function([], output)
mod['func_6891'] = func_6891
mod = relay.transform.InferType()(mod)
mutated_mod['func_6891'] = func_6891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6891_call = mutated_mod.get_global_var('func_6891')
call_6892 = func_6891_call()
output = call_6892
func_6893 = relay.Function([], output)
mutated_mod['func_6893'] = func_6893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6083_call = mod.get_global_var('func_6083')
func_6085_call = mutated_mod.get_global_var('func_6085')
call_6899 = relay.TupleGetItem(func_6083_call(), 0)
call_6900 = relay.TupleGetItem(func_6085_call(), 0)
output = relay.Tuple([call_6899,])
output2 = relay.Tuple([call_6900,])
func_6901 = relay.Function([], output)
mod['func_6901'] = func_6901
mod = relay.transform.InferType()(mod)
output = func_6901()
func_6902 = relay.Function([], output)
mutated_mod['func_6902'] = func_6902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_6993 = relay.TupleGetItem(func_4625_call(), 2)
call_6994 = relay.TupleGetItem(func_4626_call(), 2)
func_6891_call = mod.get_global_var('func_6891')
func_6893_call = mutated_mod.get_global_var('func_6893')
call_7019 = relay.TupleGetItem(func_6891_call(), 0)
call_7020 = relay.TupleGetItem(func_6893_call(), 0)
uop_7032 = relay.cos(call_7019.astype('float64')) # shape=(5, 11, 13)
uop_7034 = relay.cos(call_7020.astype('float64')) # shape=(5, 11, 13)
output = relay.Tuple([call_6993,uop_7032,])
output2 = relay.Tuple([call_6994,uop_7034,])
func_7040 = relay.Function([], output)
mod['func_7040'] = func_7040
mod = relay.transform.InferType()(mod)
output = func_7040()
func_7041 = relay.Function([], output)
mutated_mod['func_7041'] = func_7041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mod.get_global_var('func_6073')
func_6075_call = mutated_mod.get_global_var('func_6075')
call_7058 = relay.TupleGetItem(func_6073_call(), 0)
call_7059 = relay.TupleGetItem(func_6075_call(), 0)
output = call_7058
output2 = call_7059
func_7060 = relay.Function([], output)
mod['func_7060'] = func_7060
mod = relay.transform.InferType()(mod)
output = func_7060()
func_7061 = relay.Function([], output)
mutated_mod['func_7061'] = func_7061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4907_call = mod.get_global_var('func_4907')
func_4908_call = mutated_mod.get_global_var('func_4908')
call_7160 = func_4907_call()
call_7161 = func_4907_call()
var_7177 = relay.var("var_7177", dtype = "float64", shape = (5, 11, 13))#candidate|7177|(5, 11, 13)|var|float64
bop_7178 = relay.mod(call_7160.astype('float32'), relay.reshape(var_7177.astype('float32'), relay.shape_of(call_7160))) # shape=(5, 11, 13)
bop_7181 = relay.mod(call_7161.astype('float32'), relay.reshape(var_7177.astype('float32'), relay.shape_of(call_7161))) # shape=(5, 11, 13)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
var_7183 = relay.var("var_7183", dtype = "float32", shape = (1210,))#candidate|7183|(1210,)|var|float32
call_7182 = relay.TupleGetItem(func_296_call(relay.reshape(var_7183.astype('float32'), [11, 10, 11])), 0)
call_7184 = relay.TupleGetItem(func_298_call(relay.reshape(var_7183.astype('float32'), [11, 10, 11])), 0)
output = relay.Tuple([bop_7178,call_7182,var_7183,])
output2 = relay.Tuple([bop_7181,call_7184,var_7183,])
func_7188 = relay.Function([var_7177,var_7183,], output)
mod['func_7188'] = func_7188
mod = relay.transform.InferType()(mod)
mutated_mod['func_7188'] = func_7188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7188_call = mutated_mod.get_global_var('func_7188')
var_7190 = relay.var("var_7190", dtype = "float64", shape = (5, 11, 13))#candidate|7190|(5, 11, 13)|var|float64
var_7191 = relay.var("var_7191", dtype = "float32", shape = (1210,))#candidate|7191|(1210,)|var|float32
call_7189 = func_7188_call(var_7190,var_7191,)
output = call_7189
func_7192 = relay.Function([var_7190,var_7191,], output)
mutated_mod['func_7192'] = func_7192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_7221 = relay.TupleGetItem(func_6725_call(), 1)
call_7222 = relay.TupleGetItem(func_6727_call(), 1)
output = call_7221
output2 = call_7222
func_7233 = relay.Function([], output)
mod['func_7233'] = func_7233
mod = relay.transform.InferType()(mod)
mutated_mod['func_7233'] = func_7233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7233_call = mutated_mod.get_global_var('func_7233')
call_7234 = func_7233_call()
output = call_7234
func_7235 = relay.Function([], output)
mutated_mod['func_7235'] = func_7235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5567_call = mutated_mod.get_global_var('func_5567')
call_7244 = relay.TupleGetItem(func_5566_call(), 0)
call_7245 = relay.TupleGetItem(func_5567_call(), 0)
output = call_7244
output2 = call_7245
func_7246 = relay.Function([], output)
mod['func_7246'] = func_7246
mod = relay.transform.InferType()(mod)
mutated_mod['func_7246'] = func_7246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7246_call = mutated_mod.get_global_var('func_7246')
call_7247 = func_7246_call()
output = call_7247
func_7248 = relay.Function([], output)
mutated_mod['func_7248'] = func_7248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_7253 = relay.TupleGetItem(func_6376_call(), 0)
call_7254 = relay.TupleGetItem(func_6378_call(), 0)
output = call_7253
output2 = call_7254
func_7257 = relay.Function([], output)
mod['func_7257'] = func_7257
mod = relay.transform.InferType()(mod)
mutated_mod['func_7257'] = func_7257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7257_call = mutated_mod.get_global_var('func_7257')
call_7258 = func_7257_call()
output = call_7258
func_7259 = relay.Function([], output)
mutated_mod['func_7259'] = func_7259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6791_call = mod.get_global_var('func_6791')
func_6792_call = mutated_mod.get_global_var('func_6792')
call_7289 = relay.TupleGetItem(func_6791_call(), 0)
call_7290 = relay.TupleGetItem(func_6792_call(), 0)
func_4907_call = mod.get_global_var('func_4907')
func_4908_call = mutated_mod.get_global_var('func_4908')
call_7292 = func_4907_call()
call_7293 = func_4907_call()
func_4115_call = mod.get_global_var('func_4115')
func_4120_call = mutated_mod.get_global_var('func_4120')
var_7298 = relay.var("var_7298", dtype = "bool", shape = (2112,))#candidate|7298|(2112,)|var|bool
const_7299 = relay.const([6.995991,2.929595,9.502936,-5.420694,-4.870038,9.654033,-0.937047,-5.774267,2.839479,-3.650718,7.991565,3.951706,3.372905,-0.150587,4.798859,1.033328,5.956024,0.930561,-8.568242,6.595388,5.152451,6.868631,-7.827036,2.489694,9.433857,8.802622,3.253721,3.792691,-8.039615,5.255949,3.241941,1.845809,-7.966074,7.165665,-2.330153,9.703495,8.662532,-5.260904,-1.806484,9.122536,3.686284,-8.651239,3.359240,2.512928,9.140881,-3.642928,1.724257,6.057420,-6.872007,-8.433355,2.489048,9.267684,-8.645282,-2.455540,3.789652,-9.325102,4.750986,6.713504,-6.578431,-8.683261,-7.777328,7.058783,-6.204501,1.974951,4.355587,-3.188672,9.798617,-4.795810,3.238784,-8.269773,-8.538145,0.347520,1.263714,4.226383,-6.927299,5.446543,-3.379376,-7.904956,0.917763,4.359467,-7.170887,2.181937,8.900858,6.129532,9.164489,-4.648007,0.029214,4.201338,-3.034196,-9.203514,-0.114230,4.155252,-6.458049,-8.463859,9.738992,2.881467,7.684631,8.968961,-0.093600,6.382961,-0.798063,7.305850,8.139496,-8.852680,8.509422,-4.700604,-6.152534,-0.545368,-4.815307,-9.776125,0.437126,3.585954,7.663132,9.238420,7.158440,9.198935,-2.741289,3.781634,5.602860,-4.150170,9.452344,-8.652040,-8.666919,-8.634451,5.069011,1.257464,-7.407650,1.085058,1.899075,8.132381,5.236727,7.158135,-7.601152,-9.841376,-4.266918,-5.759679,0.573498,-1.748342,-0.053196,-1.476119,5.522377,-6.291419,-2.245297,6.309566,-4.342935,3.075025,2.180640,-0.400372,6.877786,4.398862,3.981078,2.735898,7.958097,-1.055689,8.666096,6.340902,-2.312961,-3.474593,-7.294405,7.541572,6.479772,-1.781940,0.678359,-2.224995,6.176218,-8.727422,1.149299,-0.583608,5.749278,-6.184275,3.935132,-5.587571,0.449573,4.331492,-7.028558,8.378433,7.145147,9.701793,-1.597037,2.459839,8.157724,-8.693399,-0.819839,6.315776,7.434809,-4.155853,-8.729292,9.145156,6.566827,4.123982,8.766385,0.578902,-0.084901,9.656681,-7.010490,3.354644,-0.783891,5.405814,-1.996821,9.711225,-3.564311,-1.960355,-7.414764,4.414040,-9.442072,9.091407,4.774054,-2.321171,2.912021,-1.541994,3.462641,-4.769466,5.947714,-6.214943,-2.721142,5.470990,2.925755,6.684302,5.986114,5.404123,1.504449,6.194498,-0.622298,2.645846,8.633111,2.259890,6.444201,8.651845,9.795640,-4.787410,6.803083,0.622188,8.110784,-8.712943,8.888297,5.296655,-2.233763,2.755532,-1.722502,6.155477,-6.558102,-0.920412,-6.066278,-8.042904,0.779887,7.994761,-4.432075,5.181275,-7.446724,0.906906,-5.471802,-5.555645,2.180594,6.273132,-5.542064,-3.525497,4.060526,-5.120394,-5.230293,-8.275301,2.584367,-3.833382,-2.990141,-6.748726,2.233571,-6.533674,-6.795610,-1.391101,-1.038308,8.181157,-0.725599,4.817672,5.978656,4.615493,-0.542873,3.319165,-5.761674,1.552299,-1.091460,4.197606,8.699660,9.813851,-1.692786,-6.795986,0.671453,-0.900105,5.326284,4.473297,4.832324,-0.537198,-6.836668,-8.575306,1.260461,0.601160,7.761383,2.498636,-9.415201,-2.088461,-9.166703,1.938534,-5.012550,-7.574090,4.585002,-0.395748,-5.255618,-2.258625,8.298542,9.977828,4.728633,-3.837113,2.307510,8.392509,-9.684142,3.484208,-7.789976,-8.816278,-1.415008,-3.219342,-3.415715,-6.439467,6.659166,-8.278192,2.439006,1.739601,-4.501038,8.199257,4.709948,-7.835961,-2.896000,5.785676,-0.476723,-8.870637,-5.194244,7.713324,1.539982,5.705344,-9.593090,2.889593,-3.365789,-6.963580,-9.963284,-3.485376,5.855114,9.832035,-4.766460,-2.227414,-4.052402,0.078866,-5.121600,-1.258505,7.581531,-0.697840,0.827645,4.370428,5.715456,-3.295557,-2.298528,8.835242,1.160202,2.682183,3.781333,8.951609,-0.809065,-6.298414,0.640541,3.746398,8.948548,-8.145370,0.720231,-4.938636,-0.614440,3.521928,6.871129,-1.849290,5.678537,4.982117,8.585501,3.271223,6.305228,-1.079536,-9.867454,2.347345,-6.166764,-4.953794,-9.294714,-7.827218,9.743572,3.019688,-4.389543,-7.766303,4.481851,1.126623,-4.221738,7.899052,-9.678612,-3.987060,8.232002,-8.826151,2.716857,3.327100,3.634326,-5.509483,3.764988,-3.602779,2.865487,-1.224987,-7.597865,-7.151976,-2.903527,-5.518179,2.307908,9.114646,2.221082,-8.601875,-5.219850,-6.446364,9.673588,-1.411256,-9.593363,1.000411,4.255053,-8.907067,1.192009,-2.337059,-9.841440,-4.511233,5.001294,-4.705190,-3.233447,-6.795435,9.598499,-0.369676,8.564590,3.052739,7.528889,-6.348702,-9.605987,-5.950958,9.983638,5.335271,-2.653936,7.260591,6.351162,-5.744618,4.514049,-7.087304,3.064746,1.979422,-0.786502,-2.645933,7.358124,-8.506819,4.498936,2.104833,-6.204564,7.347512,4.200501,-7.315199,-1.294002,-6.470074,3.239907,-5.627879,8.141294,-9.405245,6.249278,-9.771399,5.292471,-6.381353,4.233243,4.469218,2.576717,-7.009101,8.900316,4.704572,9.144879,8.526590,6.782926,1.386109,-7.341011,-6.187869,-6.181050,-9.794984,4.848799,0.415814,9.751605,-2.476671,8.594608,5.077851,-3.097776,-3.052268,-4.622398,-1.513496,-3.511615,-5.616274,9.572090,-9.884192,9.762258,7.256870,4.453582,-1.344345,2.939765,0.212600,9.733737,-7.482081,-9.703417,-6.675475,-1.289037,-5.600199,-7.466319,8.118444,4.000426,-7.278478,4.657947,0.194611,-5.519106,7.812656,1.797468,-6.061904,3.599208,-5.313372,5.260660,-0.392709,2.923162,-0.020547,9.586294,-1.147325,5.613827,-7.327395,-5.895528,-2.066902,7.727338,4.916844,-9.302777,4.263037,-9.982953,3.193386,-9.586812,5.232267,-0.110888,-0.203563,-7.806829,-1.890609,0.477390,-2.810173,4.926824,-5.891470,-6.894639,0.005202,5.799096,-6.778690,-8.714728,0.897327,5.832673,-5.940196,1.514193,1.058920,1.396684,8.769141,-9.013250,9.971068,-8.001280,-7.867360,9.724059,-7.160110,3.700639,-5.857852,-7.547761,-8.351849,-0.631351,-6.745943,9.295448,3.910951,9.875976,6.742304,-7.566170,2.686839,-2.142170,3.767531,0.631656,-6.276572,-4.549643,-4.643271,6.113719,-3.821108,-9.360497,0.011204,9.359312,-0.106312,1.064347,-9.572145,-3.587366,5.793867,-0.988738,-0.673322,-3.004763,-8.142368,4.622800,5.169200,0.622003,2.583154,-6.003226,-6.605999,7.622332,1.407198,-2.774305,1.681733,5.848648,-3.113278,3.039454,-4.269089,4.768569,4.665880,8.797296,0.484596,-3.760957,-1.937465,9.699271,-5.604413,-0.144128,-9.257109,-0.580425,8.325697,-1.679849,0.908784,5.892791,6.026386,-8.180710,3.817719,8.729286,-0.082188,3.587581,0.457199,1.258411,-5.027903,8.842571,1.202136,-9.907953,4.531556,-6.780775,-9.595943,-8.740719,-6.950003,-0.260001,6.492093,2.426105,-0.100411,-5.719244,0.755119,8.754367,6.619490,-1.258724,-2.499865,-8.072263,6.996055,-2.203795,-9.298613,1.752284,2.585130,-5.207125,-4.307374,0.945973,5.086692,-7.399296,2.243484,-7.696276,-9.838733,1.999150,3.272975,-0.791387,-2.751819,-9.227568,-8.011288,-7.284108,-1.424565,-5.200930,-8.274824,9.609945,7.188946,-9.390930,2.402727,-6.510419,-9.625082,0.202377,7.650331,-4.337358,-4.268802,-8.168081,2.530067,8.661947,4.125948,-6.336805,0.196162,7.917273,1.056388,5.881140,-0.937004,-3.561725,-0.684741,-3.353167,5.994124,3.630618,-4.553682,-2.166456,-6.635409,0.161105,5.564862,3.861724,2.939253,-1.473614,9.054114,4.093638,0.968049,-0.361405,2.385050,8.976718,6.884714,1.214238,-8.854322,4.982587,1.512650,-4.394358,-7.173113,5.140098,7.667166,-8.422092,0.016266,-2.905119,7.990396,-0.977242,-3.404541,-9.418167,9.735434,4.424597,2.580628,-0.070995,0.910484,-9.790174,6.864336,2.616335,8.514679,7.546853,1.736189,2.226042,-2.656259,-1.322998,4.382503,-2.007363,-5.125234,-1.897824,0.546925,-1.523392,1.614540,-8.063279,-3.311601,4.099949,-3.893145,-2.463172,7.549355,-6.940566,-8.449656,-3.029583,3.164853,-0.337586,-1.892502,-2.740219,1.967519,-8.226352,6.099191,8.212676,-6.034560,1.680702,9.754582,-7.364466,8.501559,-0.090756,0.416128,8.888525,-7.834600,-5.979031,-8.137300,-3.443474,8.544803,-7.687726,6.595506,-6.573912,5.891737,-8.512173,-3.917169,8.369307,-5.160062,9.900028,-4.440962,-2.775038,-4.880344,1.827827,6.638665,-7.945333,-6.903108,7.821617,0.538578,8.051624,9.513760,3.687044,-5.643939,3.918183,4.075108,0.735841,1.529053,-2.419776,-5.144979,-1.576881,5.699236,4.402955,-2.095777,1.778189,-2.508405,-2.389927,4.864517,3.704344,-0.817853,-5.323999,0.045127,2.998191,9.772827,-8.900299,8.957095,-6.269055,-3.740464,-8.315061,-3.297896,-4.469450,-7.160415,8.064657,-9.615889,1.208836,3.252854,-6.914765,7.832774,-8.465737,0.181219,2.167296,2.621922,3.819327,5.801439,-5.208557,-2.577672,-4.552170,1.463982,-4.032466,4.326335,-9.698455,9.184548,3.710242,-1.972769,7.524924,1.547491,-0.675959,-3.494168,-6.767765,3.316243,-9.122458,7.971650,-9.128603,-1.791610,-1.558638,6.779033,-7.692413,-3.316834,6.706980,3.414102,-8.867048,9.978566,-5.230171,3.742591,7.199792,8.589647,-6.733151,4.821770,-6.120292,2.500831,0.045848,2.175099,0.806376,1.327992,2.892147,7.353639,9.396368,-9.456759,9.334826,-5.874524,7.364531,-0.208020,-4.778093,-9.673152,7.204494,-2.963767,-6.462904,-6.037511,3.837347,2.411882,6.598192,-2.717973,0.750513,-2.134970,-6.558965,-7.182856,-8.216741,9.103789,-3.761643,9.469128,3.020060,-8.872598,-5.822867,3.132384,-1.457420,-5.883072,-4.453657,5.862479,9.550949,-8.650681,-8.558942,4.986710,7.893845,-3.616367,9.930832,1.480796,3.815510,-3.641332,-1.802040,8.447390,-8.159998,-6.977960,-2.447060,6.111359,5.398519,-7.753098,-8.014412,6.650632,-8.754075,6.695762,1.710294,7.525143,-0.934284,-2.961845,0.735502,7.451234,6.840430,-8.857640,3.719569,-7.726508,3.436661,4.544388,-6.336036,0.897244,-6.073878,-8.545803,7.708360,-6.020273,-2.923651,3.962709,-1.595580,3.624442,-6.246101,1.383066,1.716902,0.790854,-0.515275,-8.293623,1.702891,-5.965103,-1.084598,5.190098,-2.618477,1.382379,6.158502,-7.360079,-4.829823,4.209683,-8.793465,-0.122703,-4.875043,-8.252369,-4.088746,-7.714173,3.446617,9.657801,7.729929,8.317358,-4.927568,-6.405133,0.047065,9.800792,6.798931,5.119607,-8.498442,2.629305,3.886607,1.829418,1.578700,0.444103,-7.866018,-9.526031,9.840419,6.870503,4.511922,7.480111,5.274843,-7.882011,-0.386238,-5.662708,4.399543,7.011260,8.632546,9.171318,-3.077432,9.412537,0.115860,6.769063,-5.907104,4.467926,-6.374848,-4.260648,0.184316,-2.644877,-2.714870,-3.819908,4.847522,-4.595118,1.842525,0.451834,-5.309259,-6.859513,-1.957465,7.890656,5.275863,-2.831124,8.599948,1.527605,3.386381,-1.393704,-6.306183,-5.457512,5.189048,-5.306238,-9.364705,-6.897820,6.395856,-2.367610,-9.092120,-7.973452,-5.236134,-6.958289,4.769611,0.879541,2.714085,7.000954,-2.051253,7.611585,-8.376518,-1.959653,1.673239,-1.560301,-0.735633,4.071598,-9.655131,-6.198604,-5.037130,-3.301897,-9.644713,1.433346,-7.267118,9.537931,-5.546982,-2.646243,-6.149158,9.739998,5.415218,-2.369186,-2.328282,6.220945,4.521768,-0.601977,-5.343909,-7.729199,-6.482036,-5.437076,-4.494190,3.932951,5.699293,2.892506,5.215838,8.604524,-2.701666,-9.411183,2.584453,7.310186,4.420208,0.570591,7.902264,-8.467699,1.802592,-7.188425,-4.744779,-6.389105,7.150100,1.322070,-3.973236,6.529924,8.542892,0.445022,2.252693,7.192321,-1.777037,-9.487061,-2.690499,3.254052,-9.053776,9.630087,-0.847216,-7.254968,-4.232564,-6.248012,-8.775236,9.899446,3.141276,3.579137,-8.515938,2.414006,8.428820,-2.086944,-8.362278,0.298538,8.854783,0.016072,-8.484041,8.256097,8.488403,9.731478,4.304669,6.087550,3.027429,-6.943402,-7.879318,4.501796,4.515811,8.134147,3.474583,-1.706360,-3.533577,-4.945488,6.175969,4.119200,8.960135,2.485211,4.359558,1.782765,5.473674,-3.501661,7.589075,0.645298,7.528255,-1.520409,1.055651,3.119460,-6.831915,-0.955413,1.536201,1.172405,-0.996034,-2.128898,5.122577,-6.654364,3.938921,-9.550478,-5.674413,1.800749,3.381288,3.085678,7.330426,-6.083137,-5.094795,5.743529,-5.238143,1.871557,1.460019,-8.907176,3.201616,1.291167,-8.581840,-6.748359,6.213304,-0.688244,5.434865,4.677650,6.077811,6.385147,-7.729920,9.785739,8.841665,1.808333,-6.602932,8.615075,2.381687,-5.968953,3.436898,-2.543870,5.878219,3.882942,-8.535864,5.078935], dtype = "float32")#candidate|7299|(1210,)|const|float32
call_7297 = relay.TupleGetItem(func_4115_call(relay.reshape(var_7298.astype('bool'), [11, 16, 12]), relay.reshape(var_7298.astype('bool'), [11, 16, 12]), relay.reshape(const_7299.astype('float32'), [1210,]), ), 1)
call_7300 = relay.TupleGetItem(func_4120_call(relay.reshape(var_7298.astype('bool'), [11, 16, 12]), relay.reshape(var_7298.astype('bool'), [11, 16, 12]), relay.reshape(const_7299.astype('float32'), [1210,]), ), 1)
func_6791_call = mod.get_global_var('func_6791')
func_6792_call = mutated_mod.get_global_var('func_6792')
call_7336 = relay.TupleGetItem(func_6791_call(), 0)
call_7337 = relay.TupleGetItem(func_6792_call(), 0)
output = relay.Tuple([call_7289,call_7292,call_7297,var_7298,const_7299,call_7336,])
output2 = relay.Tuple([call_7290,call_7293,call_7300,var_7298,const_7299,call_7337,])
func_7341 = relay.Function([var_7298,], output)
mod['func_7341'] = func_7341
mod = relay.transform.InferType()(mod)
mutated_mod['func_7341'] = func_7341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7342 = relay.var("var_7342", dtype = "bool", shape = (2112,))#candidate|7342|(2112,)|var|bool
func_7341_call = mutated_mod.get_global_var('func_7341')
call_7343 = func_7341_call(var_7342)
output = call_7343
func_7344 = relay.Function([var_7342], output)
mutated_mod['func_7344'] = func_7344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5936_call = mod.get_global_var('func_5936')
func_5938_call = mutated_mod.get_global_var('func_5938')
call_7362 = relay.TupleGetItem(func_5936_call(), 0)
call_7363 = relay.TupleGetItem(func_5938_call(), 0)
output = relay.Tuple([call_7362,])
output2 = relay.Tuple([call_7363,])
func_7369 = relay.Function([], output)
mod['func_7369'] = func_7369
mod = relay.transform.InferType()(mod)
mutated_mod['func_7369'] = func_7369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7369_call = mutated_mod.get_global_var('func_7369')
call_7370 = func_7369_call()
output = call_7370
func_7371 = relay.Function([], output)
mutated_mod['func_7371'] = func_7371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_7391 = relay.TupleGetItem(func_6376_call(), 0)
call_7392 = relay.TupleGetItem(func_6378_call(), 0)
func_6539_call = mod.get_global_var('func_6539')
func_6541_call = mutated_mod.get_global_var('func_6541')
call_7400 = func_6539_call()
call_7401 = func_6539_call()
func_5342_call = mod.get_global_var('func_5342')
func_5343_call = mutated_mod.get_global_var('func_5343')
call_7407 = relay.TupleGetItem(func_5342_call(), 1)
call_7408 = relay.TupleGetItem(func_5343_call(), 1)
output = relay.Tuple([call_7391,call_7400,call_7407,])
output2 = relay.Tuple([call_7392,call_7401,call_7408,])
func_7409 = relay.Function([], output)
mod['func_7409'] = func_7409
mod = relay.transform.InferType()(mod)
mutated_mod['func_7409'] = func_7409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7409_call = mutated_mod.get_global_var('func_7409')
call_7410 = func_7409_call()
output = call_7410
func_7411 = relay.Function([], output)
mutated_mod['func_7411'] = func_7411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6485_call = mod.get_global_var('func_6485')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_7445 = relay.TupleGetItem(func_6485_call(), 0)
call_7446 = relay.TupleGetItem(func_6487_call(), 0)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_7452 = func_4854_call()
call_7453 = func_4854_call()
func_2244_call = mod.get_global_var('func_2244')
func_2247_call = mutated_mod.get_global_var('func_2247')
var_7455 = relay.var("var_7455", dtype = "uint8", shape = (30, 6))#candidate|7455|(30, 6)|var|uint8
call_7454 = relay.TupleGetItem(func_2244_call(relay.reshape(var_7455.astype('uint8'), [15, 3, 4])), 0)
call_7456 = relay.TupleGetItem(func_2247_call(relay.reshape(var_7455.astype('uint8'), [15, 3, 4])), 0)
func_1523_call = mod.get_global_var('func_1523')
func_1526_call = mutated_mod.get_global_var('func_1526')
const_7465 = relay.const(-2, dtype = "int8")#candidate|7465|()|const|int8
var_7466 = relay.var("var_7466", dtype = "int8", shape = (330,))#candidate|7466|(330,)|var|int8
call_7464 = relay.TupleGetItem(func_1523_call(relay.reshape(const_7465.astype('int8'), []), relay.reshape(var_7466.astype('int8'), [11, 3, 10]), ), 0)
call_7467 = relay.TupleGetItem(func_1526_call(relay.reshape(const_7465.astype('int8'), []), relay.reshape(var_7466.astype('int8'), [11, 3, 10]), ), 0)
output = relay.Tuple([call_7445,call_7452,call_7454,var_7455,call_7464,const_7465,var_7466,])
output2 = relay.Tuple([call_7446,call_7453,call_7456,var_7455,call_7467,const_7465,var_7466,])
func_7470 = relay.Function([var_7455,var_7466,], output)
mod['func_7470'] = func_7470
mod = relay.transform.InferType()(mod)
var_7471 = relay.var("var_7471", dtype = "uint8", shape = (30, 6))#candidate|7471|(30, 6)|var|uint8
var_7472 = relay.var("var_7472", dtype = "int8", shape = (330,))#candidate|7472|(330,)|var|int8
output = func_7470(var_7471,var_7472,)
func_7473 = relay.Function([var_7471,var_7472,], output)
mutated_mod['func_7473'] = func_7473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_7511 = func_4488_call()
call_7512 = func_4488_call()
func_7040_call = mod.get_global_var('func_7040')
func_7041_call = mutated_mod.get_global_var('func_7041')
call_7520 = relay.TupleGetItem(func_7040_call(), 1)
call_7521 = relay.TupleGetItem(func_7041_call(), 1)
func_4907_call = mod.get_global_var('func_4907')
func_4908_call = mutated_mod.get_global_var('func_4908')
call_7540 = func_4907_call()
call_7541 = func_4907_call()
output = relay.Tuple([call_7511,call_7520,call_7540,])
output2 = relay.Tuple([call_7512,call_7521,call_7541,])
func_7549 = relay.Function([], output)
mod['func_7549'] = func_7549
mod = relay.transform.InferType()(mod)
mutated_mod['func_7549'] = func_7549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mutated_mod.get_global_var('func_7549')
call_7550 = func_7549_call()
output = call_7550
func_7551 = relay.Function([], output)
mutated_mod['func_7551'] = func_7551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mod.get_global_var('func_5443')
func_5444_call = mutated_mod.get_global_var('func_5444')
call_7580 = func_5443_call()
call_7581 = func_5443_call()
output = call_7580
output2 = call_7581
func_7610 = relay.Function([], output)
mod['func_7610'] = func_7610
mod = relay.transform.InferType()(mod)
mutated_mod['func_7610'] = func_7610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7610_call = mutated_mod.get_global_var('func_7610')
call_7611 = func_7610_call()
output = call_7611
func_7612 = relay.Function([], output)
mutated_mod['func_7612'] = func_7612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4559_call = mutated_mod.get_global_var('func_4559')
call_7656 = relay.TupleGetItem(func_4557_call(), 0)
call_7657 = relay.TupleGetItem(func_4559_call(), 0)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_7670 = func_4854_call()
call_7671 = func_4854_call()
func_7610_call = mod.get_global_var('func_7610')
func_7612_call = mutated_mod.get_global_var('func_7612')
call_7681 = func_7610_call()
call_7682 = func_7610_call()
func_7470_call = mod.get_global_var('func_7470')
func_7473_call = mutated_mod.get_global_var('func_7473')
var_7688 = relay.var("var_7688", dtype = "uint8", shape = (180,))#candidate|7688|(180,)|var|uint8
const_7689 = relay.const([[9,-4,-3,-10,-8,4,7,-2,6,-4,3,-9,-4,-9,-6,-6,-8,5,-5,-8,7,6,-7,-3,-6,-4,-5,-1,1,-10,9,-3,10,-2,4,-9,4,-2,-6,4,2,-10,-10,-7,-10,-7,5,-10,9,-10,-4,1,-4,10,10,1,-1,-6,-1,1,2,-4,7,1,-8,8],[-10,9,-4,4,-3,3,-6,-5,5,-2,-4,-1,-2,9,-3,-9,6,7,-9,5,7,-7,8,-4,8,8,-4,-4,-1,-4,10,7,3,7,8,3,-9,-2,2,1,-4,3,10,-2,-10,5,-2,-5,10,-5,5,6,8,-2,4,10,2,3,1,-5,4,1,4,-10,-10,-3],[-3,-1,-6,1,8,-7,-5,4,-8,6,-9,-7,-3,-9,4,-9,2,-9,-7,-8,2,-7,6,2,10,-5,5,6,-10,10,-9,-10,3,9,10,4,1,-10,3,-10,-1,6,8,3,-6,-4,4,-6,-5,-6,10,-8,1,9,-1,-9,-5,-8,6,3,-4,7,-2,4,5,4],[-10,-10,10,5,8,6,10,8,-5,5,9,9,4,3,-3,-9,-7,2,-6,-1,-2,2,10,7,1,7,6,5,9,-1,3,3,-7,-9,5,-1,-6,-8,-1,4,-7,-5,-6,2,8,-6,-3,5,8,-5,4,10,7,10,3,3,4,-4,8,-6,1,-1,4,4,-10,5],[-5,7,4,-1,1,8,1,8,8,-10,-7,-3,7,-3,6,-4,-4,10,-8,5,-6,5,-5,-9,-6,-3,-7,5,4,2,7,-9,-7,-9,4,2,-8,-7,9,-7,-2,9,-9,-5,4,4,-5,4,-4,7,-8,-7,-8,-9,-8,-2,-1,2,-5,4,6,1,-1,-3,10,2]], dtype = "int8")#candidate|7689|(5, 66)|const|int8
call_7687 = relay.TupleGetItem(func_7470_call(relay.reshape(var_7688.astype('uint8'), [30, 6]), relay.reshape(const_7689.astype('int8'), [330,]), ), 0)
call_7690 = relay.TupleGetItem(func_7473_call(relay.reshape(var_7688.astype('uint8'), [30, 6]), relay.reshape(const_7689.astype('int8'), [330,]), ), 0)
output = relay.Tuple([call_7656,call_7670,call_7681,call_7687,var_7688,const_7689,])
output2 = relay.Tuple([call_7657,call_7671,call_7682,call_7690,var_7688,const_7689,])
func_7710 = relay.Function([var_7688,], output)
mod['func_7710'] = func_7710
mod = relay.transform.InferType()(mod)
mutated_mod['func_7710'] = func_7710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7711 = relay.var("var_7711", dtype = "uint8", shape = (180,))#candidate|7711|(180,)|var|uint8
func_7710_call = mutated_mod.get_global_var('func_7710')
call_7712 = func_7710_call(var_7711)
output = call_7712
func_7713 = relay.Function([var_7711], output)
mutated_mod['func_7713'] = func_7713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5051_call = mod.get_global_var('func_5051')
func_5053_call = mutated_mod.get_global_var('func_5053')
call_7851 = func_5051_call()
call_7852 = func_5051_call()
output = call_7851
output2 = call_7852
func_7868 = relay.Function([], output)
mod['func_7868'] = func_7868
mod = relay.transform.InferType()(mod)
output = func_7868()
func_7869 = relay.Function([], output)
mutated_mod['func_7869'] = func_7869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6699_call = mod.get_global_var('func_6699')
func_6701_call = mutated_mod.get_global_var('func_6701')
call_7876 = relay.TupleGetItem(func_6699_call(), 2)
call_7877 = relay.TupleGetItem(func_6701_call(), 2)
func_5544_call = mod.get_global_var('func_5544')
func_5545_call = mutated_mod.get_global_var('func_5545')
call_7893 = relay.TupleGetItem(func_5544_call(), 1)
call_7894 = relay.TupleGetItem(func_5545_call(), 1)
func_6699_call = mod.get_global_var('func_6699')
func_6701_call = mutated_mod.get_global_var('func_6701')
call_7895 = relay.TupleGetItem(func_6699_call(), 2)
call_7896 = relay.TupleGetItem(func_6701_call(), 2)
output = relay.Tuple([call_7876,call_7893,call_7895,])
output2 = relay.Tuple([call_7877,call_7894,call_7896,])
func_7897 = relay.Function([], output)
mod['func_7897'] = func_7897
mod = relay.transform.InferType()(mod)
output = func_7897()
func_7898 = relay.Function([], output)
mutated_mod['func_7898'] = func_7898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_7951 = func_4488_call()
call_7952 = func_4488_call()
func_6891_call = mod.get_global_var('func_6891')
func_6893_call = mutated_mod.get_global_var('func_6893')
call_7954 = relay.TupleGetItem(func_6891_call(), 0)
call_7955 = relay.TupleGetItem(func_6893_call(), 0)
output = relay.Tuple([call_7951,call_7954,])
output2 = relay.Tuple([call_7952,call_7955,])
func_7960 = relay.Function([], output)
mod['func_7960'] = func_7960
mod = relay.transform.InferType()(mod)
output = func_7960()
func_7961 = relay.Function([], output)
mutated_mod['func_7961'] = func_7961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6751_call = mod.get_global_var('func_6751')
func_6752_call = mutated_mod.get_global_var('func_6752')
call_7962 = relay.TupleGetItem(func_6751_call(), 1)
call_7963 = relay.TupleGetItem(func_6752_call(), 1)
output = relay.Tuple([call_7962,])
output2 = relay.Tuple([call_7963,])
func_7964 = relay.Function([], output)
mod['func_7964'] = func_7964
mod = relay.transform.InferType()(mod)
mutated_mod['func_7964'] = func_7964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7964_call = mutated_mod.get_global_var('func_7964')
call_7965 = func_7964_call()
output = call_7965
func_7966 = relay.Function([], output)
mutated_mod['func_7966'] = func_7966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7040_call = mod.get_global_var('func_7040')
func_7041_call = mutated_mod.get_global_var('func_7041')
call_7985 = relay.TupleGetItem(func_7040_call(), 1)
call_7986 = relay.TupleGetItem(func_7041_call(), 1)
output = relay.Tuple([call_7985,])
output2 = relay.Tuple([call_7986,])
func_7988 = relay.Function([], output)
mod['func_7988'] = func_7988
mod = relay.transform.InferType()(mod)
mutated_mod['func_7988'] = func_7988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7988_call = mutated_mod.get_global_var('func_7988')
call_7989 = func_7988_call()
output = call_7989
func_7990 = relay.Function([], output)
mutated_mod['func_7990'] = func_7990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7610_call = mod.get_global_var('func_7610')
func_7612_call = mutated_mod.get_global_var('func_7612')
call_7991 = func_7610_call()
call_7992 = func_7610_call()
func_5811_call = mod.get_global_var('func_5811')
func_5813_call = mutated_mod.get_global_var('func_5813')
const_8005 = relay.const([[-1.080971,-5.826703],[8.955367,8.629637],[-1.752693,4.634428],[-6.633183,-2.309769],[-3.253791,0.503487],[5.668679,-7.105789],[-6.129035,-2.977303],[-3.072137,-3.981007],[-7.446427,-9.256322],[-8.075594,-4.326997],[5.897239,-3.374073],[-4.684235,-4.612159],[9.967239,-4.891551],[9.434569,-5.653019],[-0.592479,-1.372141],[-1.367819,3.857008],[2.755051,9.279838],[3.658643,-9.739244],[7.467715,-2.202898],[2.140031,-1.979615],[-4.382944,-7.424425],[7.079796,-3.000597],[5.213183,7.559526],[3.933676,-6.543135],[-2.212716,-4.697425],[4.746228,-1.178085],[5.717005,-3.373466],[6.902576,-6.064387],[0.275426,6.211038],[3.434148,9.040754],[-2.757461,3.764514],[2.983722,5.191526],[8.424792,-9.404248],[-6.688830,6.283611],[6.597932,2.067029],[-9.469082,8.462064],[-5.643192,-5.326090],[-1.538689,-3.988742],[-2.178303,-9.703360],[-0.198173,7.764327],[-7.284836,-7.180369],[0.282229,-9.821764],[-4.440847,4.243930],[0.832301,-6.351076],[-1.167447,-3.677958],[-7.328390,2.151225],[-7.132362,6.304021],[2.666484,-1.658804],[-2.738570,3.420540],[-6.090820,-3.421957],[9.332704,2.833212],[-5.508794,-2.155056],[-0.996178,2.979140],[6.596045,-1.086997],[8.888656,-3.727227],[-8.197687,-8.844333],[-8.002594,-8.159270],[2.041235,0.643795],[8.964488,-7.218062],[-5.134123,-0.344259],[3.272957,-7.943234],[-7.722600,-0.433621],[-8.687051,3.639319],[7.770502,4.531481],[6.234146,-3.027684],[-9.700845,0.252998],[-8.388405,-3.834214],[-9.385972,4.813314],[-2.439710,-8.648247],[-5.050844,-1.385569],[-9.290008,-9.057589],[3.285857,6.654310],[4.885996,-7.294364],[1.978223,6.842781],[3.619924,-6.334423],[-4.151664,3.558689],[6.056188,-4.854179],[-8.323338,-6.208052],[-6.618356,-9.198255],[-4.744015,-1.104717],[6.076275,-4.651683],[-6.804614,-7.277628],[0.133848,7.598042],[-1.719713,-8.862225],[-1.195099,-5.788389],[-8.092876,4.072083],[1.750836,-4.276014],[7.570224,4.566776],[2.336142,0.308795],[-4.955586,0.570905],[0.095658,6.165473],[5.046580,2.282674],[-9.368812,-7.210672],[6.689818,4.276056],[4.415107,-1.869837],[-8.389409,9.187746],[1.362841,5.477658],[-1.924044,3.214006],[1.155165,-2.346216],[5.757058,4.124826],[7.636730,-3.746396],[1.862048,8.903959],[2.380709,-2.340801],[8.985178,-8.401013],[-7.435262,-5.623389],[-2.245208,-7.039738],[5.819021,9.748067],[9.093282,-2.157186],[-3.250185,5.953182],[5.600696,5.949392],[-2.496119,-4.668623],[5.361791,4.057013],[6.386710,9.769824],[6.033239,8.378954],[-3.112612,9.424890],[4.207641,-9.087616],[-2.970630,-7.153138],[-5.516861,0.430354],[5.435997,-3.591297],[-8.375063,-1.994302],[-8.664798,3.795503],[-1.822419,-3.683145],[4.775138,-0.409857],[9.673111,4.044069],[-8.190521,2.598555],[2.181890,8.158901],[6.980490,6.486826],[6.033904,6.692532],[8.258954,-2.668964],[9.157901,-2.943418],[-0.345733,-2.966959],[8.477128,-0.948669],[8.613335,-8.806260],[-9.538869,7.016064],[-1.218918,0.811497],[-2.023625,4.472668],[6.952040,3.155309],[-2.101634,-3.419874],[-0.232676,-5.117962],[-2.804451,2.760058],[8.306099,-4.739301],[-2.967739,8.377910],[-2.475298,-9.269695],[2.393736,0.336436],[3.962908,2.977762],[-6.835725,2.664819],[-8.607649,2.116530],[-8.615112,-2.742743],[-2.889305,4.121889],[-6.834732,7.238921],[0.566824,-2.985903],[2.544986,2.169883],[-6.631625,-1.065791],[-3.790073,-6.273556],[-2.226178,6.675957],[-0.846947,-6.642396],[-2.463304,6.105415],[-6.663194,-3.932761],[4.772106,-6.125529],[-4.573608,6.025432],[-0.320673,5.434358],[9.413534,-6.748713],[6.187227,-2.579015],[9.277816,2.884388],[-1.268230,1.447058],[8.553234,-0.104236],[-5.331058,-6.963597],[0.906775,7.382983],[0.766691,-8.436535],[-4.375066,-3.487941],[1.775862,-2.444105],[5.235470,-8.907545],[-1.483612,-2.546574],[0.861740,-3.375143],[3.617852,-6.561936],[8.938298,8.773362],[2.002557,7.974549],[-8.288707,9.175551],[5.353969,-0.906819],[6.187903,-8.880247],[-1.564521,-1.402178],[-0.995687,2.198582],[8.282400,-6.601389],[-5.047247,6.932414],[7.738458,5.539846],[6.460009,2.493114],[-2.844940,0.351807],[2.514872,-3.920296],[2.979606,6.168178],[0.371495,3.322170],[5.590116,3.120102],[7.809053,8.959111],[-2.770826,-2.951694],[5.205063,-5.333179],[-4.288827,-8.912013],[8.174093,0.772770],[6.888646,-2.546064],[-5.160866,8.845824],[5.074179,6.921742],[1.745333,-2.297519],[5.575879,9.836725],[-2.157770,9.437098],[-1.477451,-6.700113],[-9.757743,-8.359521],[1.881171,-7.023134],[-9.336469,3.218927],[9.443376,7.656688],[9.274814,-8.388062],[-6.911108,2.786960],[5.016813,1.561927],[-9.421934,7.474100],[-8.452719,-4.858050],[8.190122,9.714807],[-5.581892,6.949488],[4.760503,7.975712],[-1.641525,2.433660],[9.351961,-8.747760],[4.546530,-7.029483],[7.743206,-8.928788],[5.104475,1.598795],[-7.715678,4.138064],[7.059174,-3.136612],[9.566947,7.514168],[0.183459,-7.112491],[-4.617560,4.359056],[2.393136,4.868927],[1.324583,-7.878932],[2.786023,5.872772],[-3.722063,-2.642958],[-7.363802,-7.392317],[-7.070966,5.825190],[-5.147227,2.698032],[-9.292978,7.361085],[-3.306536,7.050875],[-3.845444,7.079560],[3.274713,1.649651],[6.145809,-1.027176],[-8.664126,5.500964],[-0.956707,-4.827747],[-1.248792,3.902620],[-9.153845,-6.781691],[-8.774673,2.459604],[6.635483,-3.414660],[3.722402,-4.108457],[3.175621,-2.052516],[6.118782,7.156090],[6.515610,1.858817],[0.776243,-3.991753],[2.218004,-3.313095],[-7.947503,-1.583096],[-3.354388,4.970874],[9.536249,-8.918223],[-4.620264,-7.538825],[-3.534813,0.761458],[-3.123114,-3.518873],[-7.554429,6.066875],[2.365472,2.044466],[6.624597,-7.224869],[-2.175604,-8.517675],[4.573147,-2.984062],[3.337921,-5.070038],[-2.390903,2.862469],[-3.652954,-8.038034],[3.208296,-0.556589],[-4.703368,-6.543015],[5.288728,7.645298],[-3.552259,8.832490],[3.420594,9.946908],[4.862368,-4.174943],[-6.593066,-1.257969],[1.695125,7.353690],[-4.234217,-3.370047],[0.291531,8.755330],[5.193706,-0.353579],[-0.219647,3.647662],[1.116008,-2.366292],[-4.030594,9.811219],[4.815839,7.562080],[-5.173889,7.198843],[-9.480683,1.690076],[-8.599344,4.837598],[-3.158597,-3.767677],[5.736821,-9.283438],[-5.438174,2.758313],[8.669139,9.666535],[-2.475839,-4.898071],[3.071156,-3.340094],[3.205469,2.909142],[-7.950209,0.508559],[-0.035529,3.068898],[7.992822,0.789775],[-7.318993,1.787002],[4.868747,-8.816147],[4.735315,-1.075353],[-3.157307,3.420432],[3.937112,-9.068254],[3.312399,-6.234069],[0.037750,8.787143],[8.169537,-3.637810],[-5.731187,4.704831],[5.519750,1.187008],[-9.150652,6.634781],[-1.568386,-1.244452],[-4.270982,5.327516],[-6.410828,4.241400],[0.735457,8.795979],[5.493916,2.101569],[3.282010,3.952308],[-8.277489,2.472598],[6.744333,-6.325952],[6.364638,5.293263],[1.295730,2.742859],[-2.822791,6.372680],[-8.606287,-0.429821],[-2.342465,3.744426],[-2.510648,-8.913104],[4.520909,-8.764060],[0.064346,7.566592],[2.238433,-1.691763],[7.028834,7.538446],[-0.856594,-5.804925],[9.128120,0.701874],[-9.164657,3.458408],[9.269697,3.194511],[5.069009,9.194424],[-5.181983,-8.314595],[6.497211,-7.585031],[-7.857802,-4.549643],[-5.471421,2.687739],[2.927242,-9.257214],[0.193050,4.994563],[0.882882,-9.235304],[-1.173059,5.032218],[-9.754943,-3.423423],[-0.103859,-5.313666],[-6.673422,-7.543709],[9.240960,-3.385920],[-9.632076,-1.229859],[-9.537132,-5.496991],[8.505964,4.549173],[5.795719,-4.441050],[-4.950677,4.443487],[-9.233190,9.304865],[1.779823,7.847236],[-5.401932,2.641807],[-6.803800,-9.868115],[8.128271,4.973344],[2.332177,-8.888802],[7.843651,-4.990301],[-5.453719,3.628819],[-2.383662,1.901814],[-2.163026,-5.928667],[2.272131,8.481380],[-6.530639,-4.702221],[-9.075200,-0.661314],[-1.774876,-9.891665],[4.116084,0.692888],[3.566392,-0.006769],[-8.107557,2.927105],[4.741703,7.289233],[2.839850,-3.058213],[-3.657857,-3.653890],[-1.067197,8.755031],[7.941277,4.658800],[-1.483920,-9.472236],[7.153786,3.534598],[8.970045,-9.360013],[3.566537,1.736951],[-3.886440,-7.083434],[-4.137271,8.862275],[4.608634,-0.971057],[0.166801,9.058113],[-2.151512,0.925491],[3.717602,3.179629],[1.215069,5.365505],[8.351043,9.957616],[-5.662217,7.095104],[-1.216261,-8.315117],[8.212690,4.593989],[-4.847157,-9.924079],[-9.127677,-9.676884],[4.858890,-7.821843],[2.802049,5.031791],[-1.213479,-4.550854],[-2.061696,-1.363172],[-9.491834,-5.220689],[5.132899,-3.264269],[-0.637595,-6.303624],[-9.657331,-1.845406],[3.418450,-8.327974],[-0.781594,3.802915],[0.648269,-3.559920],[2.818680,-1.771047],[9.456804,2.253893],[-6.716280,-0.622832],[8.854987,-8.632521],[7.801532,6.956567],[3.565075,6.635079],[3.609011,6.877123],[-3.451851,-6.937104],[-3.987627,0.906558],[6.700382,-2.971149],[6.463552,-6.331809],[9.414648,-0.710116],[-4.739218,4.309216],[-8.238486,1.810826],[-9.837670,-8.162056],[-2.667124,-5.486672],[1.785089,-1.787725],[4.977189,6.566205],[4.064228,4.442371],[-7.810025,9.598674],[8.165352,-1.600677],[2.974574,1.438359],[-6.259018,-2.204516],[-7.649656,5.782528],[0.362382,-7.741676],[-2.226805,1.735078],[1.410933,3.511148],[-9.943939,-7.316779],[7.221711,8.122555],[1.249456,-6.787561],[-2.578286,-2.731068],[-8.669270,2.588500],[-4.056471,-7.020476],[7.123814,-9.765219],[-5.286893,-9.126255],[2.442301,-2.436669],[2.854585,8.491309],[-8.868773,5.549354],[5.029951,4.949381],[0.224484,6.906916],[-7.063910,1.462802],[8.028252,-3.706633],[6.587244,-8.520297],[-8.720501,2.968625],[8.895055,-1.758273],[3.007060,-9.604584],[2.888229,-0.524065],[-4.091693,-4.813940],[6.895409,-6.698435],[-0.974500,-8.376090],[3.910582,-6.013037],[7.442659,-1.724250],[-8.911401,-2.520891],[-7.516827,-6.038426],[-2.943928,-4.534143],[-7.970671,0.035261],[-3.456998,-9.871580],[-2.347946,-4.249929],[-8.814242,4.556628],[3.405429,-4.272083],[-1.510054,1.517828],[8.317395,9.148986],[-9.087809,3.243021],[-1.424242,-2.208641],[-2.696819,6.872882],[2.711326,9.094650],[-9.717700,9.924437],[-7.072968,-0.772487],[-2.478489,2.092339],[9.047506,6.547767],[-0.450921,6.059322],[8.379790,-6.782184],[-4.934526,-4.438610],[2.826365,8.456382],[0.565879,8.833077],[-2.719825,-7.088527],[8.322262,9.134857],[-1.437660,-9.519150],[6.817317,-3.739120],[6.929010,-6.791930],[-4.497329,3.166939],[-0.779942,-7.129029],[1.269400,6.648735],[1.946055,-6.645960],[7.365240,9.245644],[-5.537268,5.299371],[1.109033,-8.154952],[-2.635605,1.336621],[-9.343898,-0.970215],[7.772948,-2.392389],[9.955544,2.862118],[6.778430,5.768950],[4.653226,2.884675],[1.929427,7.819292],[-3.851760,3.697389],[-7.454920,5.694654],[-8.487095,-0.051030],[-5.708810,-1.279925],[-3.142590,-9.990871],[-4.628142,7.187915],[4.031350,2.958181],[3.051882,4.695670],[1.819915,-3.212625],[4.922731,-3.279422],[4.482179,-6.064144],[0.509939,9.304011],[-0.280501,6.294058],[-9.158915,-5.135926],[8.801103,-2.987664],[-5.048548,-8.790106],[-2.332488,4.657658],[4.261113,8.305440],[-2.871598,-8.749139],[0.445359,-9.887121],[-6.336986,-9.524071],[-4.946231,-9.297726],[-1.903243,-4.308053],[-4.976736,-9.981060],[8.364459,4.089083],[5.328090,1.743631],[-8.929120,2.400241],[-2.812225,9.142140],[-6.718860,7.294035],[-2.872957,-6.922727],[-2.837173,5.574858],[-6.455864,5.272031],[6.608289,-0.471455],[-4.245633,7.826149],[9.916660,-6.193124],[-6.019818,-2.790723],[4.474322,5.480917],[8.643531,-6.101819],[-4.125014,4.164459],[-8.902929,-3.650432],[1.870535,-9.499803],[-4.467328,-6.410177],[9.578298,2.791051],[-0.383944,-9.507608],[0.550763,3.396207],[2.348466,-0.962030],[9.400551,-9.445461],[6.123011,2.279851],[9.516686,-3.326806],[2.029814,-3.191862],[2.303064,-5.838487],[1.202964,3.616620],[-9.670343,-3.363098],[-2.805421,6.380771],[-3.932440,9.578207],[-6.714989,-1.842850],[8.976731,-0.789585],[9.309834,6.737244],[-9.338403,-5.229468],[-7.399400,5.272744],[-2.104016,-5.053698],[-6.093295,-2.990961],[-7.732161,-4.675433],[-1.340369,-6.047590],[1.820924,7.783960],[2.404395,6.910738],[-3.277320,-7.107859],[1.764816,-0.515612],[0.282034,5.094756],[-2.132136,-6.510477],[4.902364,-5.757583],[2.940615,5.014923],[0.333462,7.268810],[0.310305,-6.825865],[-5.110811,-2.168462],[-4.533114,5.338601],[-5.198256,-1.886995],[-5.071447,4.501405],[6.222618,8.309850],[-3.372914,-4.497425],[7.989954,8.498526],[-0.348217,8.202038],[-7.833527,6.293110],[-5.692193,-6.398369],[2.074060,8.524997],[3.454692,4.487234],[-0.021240,9.776223],[-4.753947,-9.248755],[5.466634,-1.134895],[-8.671285,-3.480191],[-7.209805,1.196699],[-4.107065,4.344185],[-0.626867,8.259111],[6.863618,3.105577],[1.267461,-8.490696],[-2.872993,-7.753832],[-5.914912,6.305709],[-0.199417,8.372885],[5.178611,0.351673],[-3.015908,0.584223],[4.751873,-3.542862],[-2.042751,8.318255],[-9.466807,4.641924],[-0.945657,-5.844500],[-5.821081,7.926015],[1.600859,6.101339],[-6.104074,-8.462662],[2.375331,8.140317],[-8.550090,8.036181],[9.058692,0.825813],[6.924908,-6.086974],[-2.091838,-3.835245],[3.914789,7.658771],[7.019260,1.192041],[3.668223,-8.908097],[-9.331644,3.964204],[-4.081869,9.809087],[7.048640,3.203231],[9.401537,2.561670],[9.014413,-7.047188],[3.020838,8.369432],[1.595539,-7.494031],[7.783911,0.405523],[0.142257,-5.792909],[-6.095835,5.659293],[-9.876334,-4.067142],[1.413643,8.563387],[3.721312,1.086451],[8.988500,3.339741],[1.997701,4.689241],[7.498251,-3.306657],[-5.022255,-9.024321],[-3.207801,-9.406233],[-9.455640,-8.468942],[-9.947088,-3.388069],[-7.647770,9.257110],[7.921495,-5.469434],[-9.092503,2.620515],[-6.462960,-5.210094],[-2.731448,6.901148],[1.142518,-9.388946],[-1.674936,9.732475],[-7.067761,6.904433],[1.575704,9.152000],[7.021828,0.759117],[1.285394,1.168000],[3.080954,-9.125185],[-3.813983,-1.446865],[-4.103688,-7.793986],[-3.471178,2.571094],[6.402996,7.882465],[8.711784,4.405982],[-1.495630,2.922877],[9.396653,0.657696],[-0.008862,6.762804],[-7.151284,-5.622681],[-8.127406,2.130737],[-6.253580,2.243878],[5.374425,-3.612804],[9.155857,-7.838771],[1.174965,-8.624297],[-0.803095,1.911523],[2.091757,-0.733370],[-1.409638,-0.114302],[1.854721,7.151576],[5.932071,1.615103],[6.823332,1.957963],[-0.037863,-5.294779],[4.997516,-4.189993],[6.250512,0.091673],[-1.642164,-4.750381],[-4.177384,9.138286],[-3.320551,-1.383438],[-3.369511,7.181356],[3.255752,-2.102258],[-4.471012,9.174381],[2.799777,6.501957],[2.891886,-2.756203],[-1.155992,7.719355],[3.680791,-5.495595],[7.641281,8.369703],[7.732287,-9.057072],[-6.120012,-4.216525],[4.164477,-0.812247],[9.770733,3.940179],[-2.650909,1.101232],[-2.963847,-9.121218],[3.116565,-1.096078],[1.458116,-7.431884],[-3.063546,8.957620],[-5.636315,2.645333],[-5.074979,-0.375060],[0.675696,-9.710753],[7.258747,6.304601],[-3.783629,-0.620415],[-8.292179,8.921909],[-0.897453,-0.190387],[-4.098418,4.774279],[1.387309,-2.164690],[9.758423,-2.683742],[1.322990,-3.318399],[-1.314438,-2.929890],[1.198401,-0.144782],[9.587005,1.346023],[-3.859722,-2.326903],[-9.760620,8.435195],[-9.756061,7.586160],[-8.137526,5.063285],[-8.831851,9.209674],[1.477841,-2.670255],[-6.577975,-5.500842],[-8.631327,7.789400],[-6.521030,1.350240],[-3.214641,-8.064156],[-8.488124,-5.620781],[7.996888,-6.752024],[6.004846,-1.215455],[-9.999905,-0.511868],[-4.213500,-3.973380],[-5.968802,0.520135],[-3.372232,1.064773],[5.781442,7.790605],[0.546928,-3.283935],[1.278189,7.280141],[-6.573092,7.174434],[-9.193579,4.461930],[7.151094,2.756850],[-2.863564,-1.950684],[5.765265,7.165267],[0.784647,-5.536478],[-0.931737,-9.332285],[-2.452126,-6.793039],[1.319835,5.912497],[9.182145,-4.383994],[-6.450484,1.846272],[-9.869680,1.136376],[5.543410,-2.065378],[-3.467796,-1.830989],[-9.723919,-9.836770],[-4.354080,0.962585],[0.998025,7.255475],[-3.252409,9.148065],[5.811816,5.332030],[-3.348792,0.492376],[5.601499,-6.114543],[-2.456323,-8.496004],[6.171422,1.896204],[2.484990,-0.343180],[7.251648,-6.368734],[4.215133,8.554813],[-2.939959,1.085178],[1.935771,-3.952142],[-7.268130,-7.256972],[6.859191,4.855112],[-8.072077,-5.216456],[-8.936951,-8.075568],[-8.776067,6.920639],[-5.921670,-6.484563],[4.503232,7.982834],[-0.336206,8.108138],[-9.959298,-0.232363],[-4.584458,7.940339],[-5.157601,-0.468432],[-2.687868,4.815876],[5.525008,-1.896390],[5.015469,-5.806356],[-7.223181,0.270468],[-2.640142,-1.509633],[5.739971,-7.224968],[-6.824385,-0.066439]], dtype = "float32")#candidate|8005|(756, 2)|const|float32
call_8004 = relay.TupleGetItem(func_5811_call(relay.reshape(const_8005.astype('float32'), [3, 504])), 1)
call_8006 = relay.TupleGetItem(func_5813_call(relay.reshape(const_8005.astype('float32'), [3, 504])), 1)
bop_8020 = relay.add(call_8004.astype('uint16'), relay.reshape(const_8005.astype('uint16'), relay.shape_of(call_8004))) # shape=(14, 12, 9)
bop_8023 = relay.add(call_8006.astype('uint16'), relay.reshape(const_8005.astype('uint16'), relay.shape_of(call_8006))) # shape=(14, 12, 9)
output = relay.Tuple([call_7991,bop_8020,])
output2 = relay.Tuple([call_7992,bop_8023,])
func_8025 = relay.Function([], output)
mod['func_8025'] = func_8025
mod = relay.transform.InferType()(mod)
output = func_8025()
func_8026 = relay.Function([], output)
mutated_mod['func_8026'] = func_8026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6901_call = mod.get_global_var('func_6901')
func_6902_call = mutated_mod.get_global_var('func_6902')
call_8105 = relay.TupleGetItem(func_6901_call(), 0)
call_8106 = relay.TupleGetItem(func_6902_call(), 0)
var_8112 = relay.var("var_8112", dtype = "bool", shape = (12, 9, 15))#candidate|8112|(12, 9, 15)|var|bool
bop_8113 = relay.bitwise_or(call_8105.astype('int64'), relay.reshape(var_8112.astype('int64'), relay.shape_of(call_8105))) # shape=(12, 9, 15)
bop_8116 = relay.bitwise_or(call_8106.astype('int64'), relay.reshape(var_8112.astype('int64'), relay.shape_of(call_8106))) # shape=(12, 9, 15)
output = relay.Tuple([bop_8113,])
output2 = relay.Tuple([bop_8116,])
func_8125 = relay.Function([var_8112,], output)
mod['func_8125'] = func_8125
mod = relay.transform.InferType()(mod)
var_8126 = relay.var("var_8126", dtype = "bool", shape = (12, 9, 15))#candidate|8126|(12, 9, 15)|var|bool
output = func_8125(var_8126)
func_8127 = relay.Function([var_8126], output)
mutated_mod['func_8127'] = func_8127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7257_call = mod.get_global_var('func_7257')
func_7259_call = mutated_mod.get_global_var('func_7259')
call_8144 = func_7257_call()
call_8145 = func_7257_call()
output = call_8144
output2 = call_8145
func_8178 = relay.Function([], output)
mod['func_8178'] = func_8178
mod = relay.transform.InferType()(mod)
output = func_8178()
func_8179 = relay.Function([], output)
mutated_mod['func_8179'] = func_8179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7246_call = mod.get_global_var('func_7246')
func_7248_call = mutated_mod.get_global_var('func_7248')
call_8207 = func_7246_call()
call_8208 = func_7246_call()
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
var_8218 = relay.var("var_8218", dtype = "float32", shape = (11, 110))#candidate|8218|(11, 110)|var|float32
call_8217 = relay.TupleGetItem(func_296_call(relay.reshape(var_8218.astype('float32'), [11, 10, 11])), 0)
call_8219 = relay.TupleGetItem(func_298_call(relay.reshape(var_8218.astype('float32'), [11, 10, 11])), 0)
func_4872_call = mod.get_global_var('func_4872')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_8221 = relay.TupleGetItem(func_4872_call(), 0)
call_8222 = relay.TupleGetItem(func_4873_call(), 0)
output = relay.Tuple([call_8207,call_8217,var_8218,call_8221,])
output2 = relay.Tuple([call_8208,call_8219,var_8218,call_8222,])
func_8234 = relay.Function([var_8218,], output)
mod['func_8234'] = func_8234
mod = relay.transform.InferType()(mod)
var_8235 = relay.var("var_8235", dtype = "float32", shape = (11, 110))#candidate|8235|(11, 110)|var|float32
output = func_8234(var_8235)
func_8236 = relay.Function([var_8235], output)
mutated_mod['func_8236'] = func_8236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7897_call = mod.get_global_var('func_7897')
func_7898_call = mutated_mod.get_global_var('func_7898')
call_8243 = relay.TupleGetItem(func_7897_call(), 1)
call_8244 = relay.TupleGetItem(func_7898_call(), 1)
output = relay.Tuple([call_8243,])
output2 = relay.Tuple([call_8244,])
func_8252 = relay.Function([], output)
mod['func_8252'] = func_8252
mod = relay.transform.InferType()(mod)
output = func_8252()
func_8253 = relay.Function([], output)
mutated_mod['func_8253'] = func_8253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8252_call = mod.get_global_var('func_8252')
func_8253_call = mutated_mod.get_global_var('func_8253')
call_8308 = relay.TupleGetItem(func_8252_call(), 0)
call_8309 = relay.TupleGetItem(func_8253_call(), 0)
func_7988_call = mod.get_global_var('func_7988')
func_7990_call = mutated_mod.get_global_var('func_7990')
call_8316 = relay.TupleGetItem(func_7988_call(), 0)
call_8317 = relay.TupleGetItem(func_7990_call(), 0)
output = relay.Tuple([call_8308,call_8316,])
output2 = relay.Tuple([call_8309,call_8317,])
func_8320 = relay.Function([], output)
mod['func_8320'] = func_8320
mod = relay.transform.InferType()(mod)
output = func_8320()
func_8321 = relay.Function([], output)
mutated_mod['func_8321'] = func_8321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_8344 = relay.TupleGetItem(func_6376_call(), 0)
call_8345 = relay.TupleGetItem(func_6378_call(), 0)
output = relay.Tuple([call_8344,])
output2 = relay.Tuple([call_8345,])
func_8352 = relay.Function([], output)
mod['func_8352'] = func_8352
mod = relay.transform.InferType()(mod)
output = func_8352()
func_8353 = relay.Function([], output)
mutated_mod['func_8353'] = func_8353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_8450 = relay.TupleGetItem(func_5163_call(), 0)
call_8451 = relay.TupleGetItem(func_5164_call(), 0)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_8454 = func_4488_call()
call_8455 = func_4488_call()
output = relay.Tuple([call_8450,call_8454,])
output2 = relay.Tuple([call_8451,call_8455,])
func_8458 = relay.Function([], output)
mod['func_8458'] = func_8458
mod = relay.transform.InferType()(mod)
mutated_mod['func_8458'] = func_8458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8458_call = mutated_mod.get_global_var('func_8458')
call_8459 = func_8458_call()
output = call_8459
func_8460 = relay.Function([], output)
mutated_mod['func_8460'] = func_8460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mod.get_global_var('func_5443')
func_5444_call = mutated_mod.get_global_var('func_5444')
call_8467 = func_5443_call()
call_8468 = func_5443_call()
output = call_8467
output2 = call_8468
func_8471 = relay.Function([], output)
mod['func_8471'] = func_8471
mod = relay.transform.InferType()(mod)
mutated_mod['func_8471'] = func_8471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8471_call = mutated_mod.get_global_var('func_8471')
call_8472 = func_8471_call()
output = call_8472
func_8473 = relay.Function([], output)
mutated_mod['func_8473'] = func_8473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5051_call = mod.get_global_var('func_5051')
func_5053_call = mutated_mod.get_global_var('func_5053')
call_8490 = func_5051_call()
call_8491 = func_5051_call()
output = call_8490
output2 = call_8491
func_8495 = relay.Function([], output)
mod['func_8495'] = func_8495
mod = relay.transform.InferType()(mod)
output = func_8495()
func_8496 = relay.Function([], output)
mutated_mod['func_8496'] = func_8496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4872_call = mod.get_global_var('func_4872')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_8562 = relay.TupleGetItem(func_4872_call(), 0)
call_8563 = relay.TupleGetItem(func_4873_call(), 0)
output = relay.Tuple([call_8562,])
output2 = relay.Tuple([call_8563,])
func_8568 = relay.Function([], output)
mod['func_8568'] = func_8568
mod = relay.transform.InferType()(mod)
output = func_8568()
func_8569 = relay.Function([], output)
mutated_mod['func_8569'] = func_8569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7246_call = mod.get_global_var('func_7246')
func_7248_call = mutated_mod.get_global_var('func_7248')
call_8661 = func_7246_call()
call_8662 = func_7246_call()
func_7233_call = mod.get_global_var('func_7233')
func_7235_call = mutated_mod.get_global_var('func_7235')
call_8668 = func_7233_call()
call_8669 = func_7233_call()
bop_8695 = relay.mod(call_8668.astype('float64'), relay.reshape(call_8661.astype('float64'), relay.shape_of(call_8668))) # shape=(12, 9, 15)
bop_8698 = relay.mod(call_8669.astype('float64'), relay.reshape(call_8662.astype('float64'), relay.shape_of(call_8669))) # shape=(12, 9, 15)
output = relay.Tuple([bop_8695,])
output2 = relay.Tuple([bop_8698,])
func_8702 = relay.Function([], output)
mod['func_8702'] = func_8702
mod = relay.transform.InferType()(mod)
output = func_8702()
func_8703 = relay.Function([], output)
mutated_mod['func_8703'] = func_8703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4872_call = mod.get_global_var('func_4872')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_8750 = relay.TupleGetItem(func_4872_call(), 0)
call_8751 = relay.TupleGetItem(func_4873_call(), 0)
func_7257_call = mod.get_global_var('func_7257')
func_7259_call = mutated_mod.get_global_var('func_7259')
call_8758 = func_7257_call()
call_8759 = func_7257_call()
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_8789 = relay.TupleGetItem(func_6376_call(), 0)
call_8790 = relay.TupleGetItem(func_6378_call(), 0)
output = relay.Tuple([call_8750,call_8758,call_8789,])
output2 = relay.Tuple([call_8751,call_8759,call_8790,])
func_8799 = relay.Function([], output)
mod['func_8799'] = func_8799
mod = relay.transform.InferType()(mod)
mutated_mod['func_8799'] = func_8799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8799_call = mutated_mod.get_global_var('func_8799')
call_8800 = func_8799_call()
output = call_8800
func_8801 = relay.Function([], output)
mutated_mod['func_8801'] = func_8801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_8820 = relay.TupleGetItem(func_6376_call(), 0)
call_8821 = relay.TupleGetItem(func_6378_call(), 0)
output = call_8820
output2 = call_8821
func_8830 = relay.Function([], output)
mod['func_8830'] = func_8830
mod = relay.transform.InferType()(mod)
mutated_mod['func_8830'] = func_8830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8830_call = mutated_mod.get_global_var('func_8830')
call_8831 = func_8830_call()
output = call_8831
func_8832 = relay.Function([], output)
mutated_mod['func_8832'] = func_8832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8458_call = mod.get_global_var('func_8458')
func_8460_call = mutated_mod.get_global_var('func_8460')
call_8868 = relay.TupleGetItem(func_8458_call(), 0)
call_8869 = relay.TupleGetItem(func_8460_call(), 0)
func_6073_call = mod.get_global_var('func_6073')
func_6075_call = mutated_mod.get_global_var('func_6075')
call_8880 = relay.TupleGetItem(func_6073_call(), 0)
call_8881 = relay.TupleGetItem(func_6075_call(), 0)
output = relay.Tuple([call_8868,call_8880,])
output2 = relay.Tuple([call_8869,call_8881,])
func_8895 = relay.Function([], output)
mod['func_8895'] = func_8895
mod = relay.transform.InferType()(mod)
output = func_8895()
func_8896 = relay.Function([], output)
mutated_mod['func_8896'] = func_8896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8978 = relay.var("var_8978", dtype = "bool", shape = ())#candidate|8978|()|var|bool
const_8979 = relay.const([[[False],[True]],[[False],[False]],[[True],[False]],[[True],[True]],[[True],[True]],[[False],[False]],[[True],[True]],[[True],[True]],[[False],[False]],[[True],[False]],[[True],[True]],[[True],[True]],[[True],[True]],[[False],[True]],[[False],[True]],[[True],[False]]], dtype = "bool")#candidate|8979|(16, 2, 1)|const|bool
bop_8980 = relay.logical_or(var_8978.astype('bool'), const_8979.astype('bool')) # shape=(16, 2, 1)
func_7409_call = mod.get_global_var('func_7409')
func_7411_call = mutated_mod.get_global_var('func_7411')
call_8993 = relay.TupleGetItem(func_7409_call(), 2)
call_8994 = relay.TupleGetItem(func_7411_call(), 2)
output = relay.Tuple([bop_8980,call_8993,])
output2 = relay.Tuple([bop_8980,call_8994,])
func_8998 = relay.Function([var_8978,], output)
mod['func_8998'] = func_8998
mod = relay.transform.InferType()(mod)
var_8999 = relay.var("var_8999", dtype = "bool", shape = ())#candidate|8999|()|var|bool
output = func_8998(var_8999)
func_9000 = relay.Function([var_8999], output)
mutated_mod['func_9000'] = func_9000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_9089 = relay.TupleGetItem(func_4625_call(), 2)
call_9090 = relay.TupleGetItem(func_4626_call(), 2)
func_6485_call = mod.get_global_var('func_6485')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_9100 = relay.TupleGetItem(func_6485_call(), 0)
call_9101 = relay.TupleGetItem(func_6487_call(), 0)
output = relay.Tuple([call_9089,call_9100,])
output2 = relay.Tuple([call_9090,call_9101,])
func_9121 = relay.Function([], output)
mod['func_9121'] = func_9121
mod = relay.transform.InferType()(mod)
output = func_9121()
func_9122 = relay.Function([], output)
mutated_mod['func_9122'] = func_9122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7960_call = mod.get_global_var('func_7960')
func_7961_call = mutated_mod.get_global_var('func_7961')
call_9167 = relay.TupleGetItem(func_7960_call(), 1)
call_9168 = relay.TupleGetItem(func_7961_call(), 1)
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_9174 = relay.TupleGetItem(func_6376_call(), 0)
call_9175 = relay.TupleGetItem(func_6378_call(), 0)
output = relay.Tuple([call_9167,call_9174,])
output2 = relay.Tuple([call_9168,call_9175,])
func_9176 = relay.Function([], output)
mod['func_9176'] = func_9176
mod = relay.transform.InferType()(mod)
output = func_9176()
func_9177 = relay.Function([], output)
mutated_mod['func_9177'] = func_9177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_9184 = relay.TupleGetItem(func_4625_call(), 3)
call_9185 = relay.TupleGetItem(func_4626_call(), 3)
func_8830_call = mod.get_global_var('func_8830')
func_8832_call = mutated_mod.get_global_var('func_8832')
call_9210 = func_8830_call()
call_9211 = func_8830_call()
output = relay.Tuple([call_9184,call_9210,])
output2 = relay.Tuple([call_9185,call_9211,])
func_9220 = relay.Function([], output)
mod['func_9220'] = func_9220
mod = relay.transform.InferType()(mod)
mutated_mod['func_9220'] = func_9220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9220_call = mutated_mod.get_global_var('func_9220')
call_9221 = func_9220_call()
output = call_9221
func_9222 = relay.Function([], output)
mutated_mod['func_9222'] = func_9222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6556_call = mod.get_global_var('func_6556')
func_6557_call = mutated_mod.get_global_var('func_6557')
call_9334 = func_6556_call()
call_9335 = func_6556_call()
func_6891_call = mod.get_global_var('func_6891')
func_6893_call = mutated_mod.get_global_var('func_6893')
call_9337 = relay.TupleGetItem(func_6891_call(), 0)
call_9338 = relay.TupleGetItem(func_6893_call(), 0)
output = relay.Tuple([call_9334,call_9337,])
output2 = relay.Tuple([call_9335,call_9338,])
func_9370 = relay.Function([], output)
mod['func_9370'] = func_9370
mod = relay.transform.InferType()(mod)
output = func_9370()
func_9371 = relay.Function([], output)
mutated_mod['func_9371'] = func_9371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7257_call = mod.get_global_var('func_7257')
func_7259_call = mutated_mod.get_global_var('func_7259')
call_9474 = func_7257_call()
call_9475 = func_7257_call()
func_7233_call = mod.get_global_var('func_7233')
func_7235_call = mutated_mod.get_global_var('func_7235')
call_9491 = func_7233_call()
call_9492 = func_7233_call()
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_9508 = func_7060_call()
call_9509 = func_7060_call()
output = relay.Tuple([call_9474,call_9491,call_9508,])
output2 = relay.Tuple([call_9475,call_9492,call_9509,])
func_9510 = relay.Function([], output)
mod['func_9510'] = func_9510
mod = relay.transform.InferType()(mod)
output = func_9510()
func_9511 = relay.Function([], output)
mutated_mod['func_9511'] = func_9511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6751_call = mod.get_global_var('func_6751')
func_6752_call = mutated_mod.get_global_var('func_6752')
call_9514 = relay.TupleGetItem(func_6751_call(), 1)
call_9515 = relay.TupleGetItem(func_6752_call(), 1)
func_9510_call = mod.get_global_var('func_9510')
func_9511_call = mutated_mod.get_global_var('func_9511')
call_9516 = relay.TupleGetItem(func_9510_call(), 0)
call_9517 = relay.TupleGetItem(func_9511_call(), 0)
func_9176_call = mod.get_global_var('func_9176')
func_9177_call = mutated_mod.get_global_var('func_9177')
call_9530 = relay.TupleGetItem(func_9176_call(), 1)
call_9531 = relay.TupleGetItem(func_9177_call(), 1)
output = relay.Tuple([call_9514,call_9516,call_9530,])
output2 = relay.Tuple([call_9515,call_9517,call_9531,])
func_9558 = relay.Function([], output)
mod['func_9558'] = func_9558
mod = relay.transform.InferType()(mod)
mutated_mod['func_9558'] = func_9558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9558_call = mutated_mod.get_global_var('func_9558')
call_9559 = func_9558_call()
output = call_9559
func_9560 = relay.Function([], output)
mutated_mod['func_9560'] = func_9560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_9579 = func_4488_call()
call_9580 = func_4488_call()
func_8998_call = mod.get_global_var('func_8998')
func_9000_call = mutated_mod.get_global_var('func_9000')
const_9597 = relay.const(True, dtype = "bool")#candidate|9597|()|const|bool
call_9596 = relay.TupleGetItem(func_8998_call(relay.reshape(const_9597.astype('bool'), [])), 1)
call_9598 = relay.TupleGetItem(func_9000_call(relay.reshape(const_9597.astype('bool'), [])), 1)
output = relay.Tuple([call_9579,call_9596,const_9597,])
output2 = relay.Tuple([call_9580,call_9598,const_9597,])
func_9601 = relay.Function([], output)
mod['func_9601'] = func_9601
mod = relay.transform.InferType()(mod)
mutated_mod['func_9601'] = func_9601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9601_call = mutated_mod.get_global_var('func_9601')
call_9602 = func_9601_call()
output = call_9602
func_9603 = relay.Function([], output)
mutated_mod['func_9603'] = func_9603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8471_call = mod.get_global_var('func_8471')
func_8473_call = mutated_mod.get_global_var('func_8473')
call_9637 = func_8471_call()
call_9638 = func_8471_call()
func_9370_call = mod.get_global_var('func_9370')
func_9371_call = mutated_mod.get_global_var('func_9371')
call_9648 = relay.TupleGetItem(func_9370_call(), 1)
call_9649 = relay.TupleGetItem(func_9371_call(), 1)
func_7257_call = mod.get_global_var('func_7257')
func_7259_call = mutated_mod.get_global_var('func_7259')
call_9650 = func_7257_call()
call_9651 = func_7257_call()
func_1091_call = mod.get_global_var('func_1091')
func_1094_call = mutated_mod.get_global_var('func_1094')
const_9668 = relay.const([-5.254822,3.983030,-9.117745,4.419774,0.947036,-8.875731,-1.240666,-4.955677,-3.318435,-1.413353,-4.028034,2.825874,-1.536425,1.724294,2.585033,2.599443,3.916824,9.070796,7.730007,-8.120402,-1.539204,-8.457020,5.112630,-9.641846,-9.917992,-0.497555,1.343966,-0.211579,-4.044864,1.670340,-1.848056,9.463924,-7.615302,-2.806935,0.100604,-0.670342,0.092897,2.153834,6.550234,-9.759691,-3.102923,2.424712,-9.062162,-9.185429,8.841875,-8.615166,-7.464920,8.171054,-3.614959,4.804010,-7.702996,6.757653,-4.368283,-6.499795,-7.917237,-6.416594,-4.018802,-0.142594,3.297258,1.322962,5.773503,-7.285161,-6.601521,-8.079351,3.032514,-6.848578,5.259519,5.436417,-2.405318,6.838876,-4.795479,-4.667931,7.888144,8.595908,1.909483,7.782230,-6.832330,-0.727462,2.214844,-2.381632,-1.783992,4.718138,-1.903707,-2.604497,-2.640497,-8.071515,9.370938,8.267824,1.036500,9.102111,-2.246490,6.340054,-9.664819,6.860028,-0.797379,5.340122,-1.877588,-1.012868,6.461889,-4.829538,8.502008,1.905398,6.221059,4.015038,2.073629,0.474807,-6.476901,2.884395,-5.686236,-9.510429,-5.943260,-9.518238,-8.225171,7.564547,6.472617,-1.780561,-8.053161,9.855276,-7.220057,7.242807,1.665394,1.819657,2.575987,-3.761093,1.004449,3.192333,-7.421290,3.015315,-5.892700,9.256888,-5.277072,-6.190926,6.576378,-7.455058,0.340879,2.530113,-3.053159,-8.219004,3.506596,2.000393,9.061397,-6.976788,-7.329832,5.560236,0.004912,-6.632964,-1.122767,-4.035167,-0.716380,3.149693,-1.471877,-2.173243,-3.132201,2.038081,-9.591918,-7.552829,4.201133,0.212733,-4.798447,-3.669533,8.861379,7.153039,-1.491780,7.458084,-9.883415,-1.608167,-3.442088,7.643701,7.621708,-7.386623,-0.851948,9.969089,-0.169903,5.040761,8.151019,-4.035729,8.498458,-8.700555,5.690535,-3.951264,1.705260,0.814032,-3.491190,-0.180210,2.340193,7.470132,4.174054,1.461928,8.501656,7.822231,-0.235447,-9.755792,4.279297,3.787401,-5.576371,9.903538,-5.827910,5.649766,8.275895,-2.710095,6.402692,-0.059236,4.733520,-4.112296,8.316326,2.971652,6.737505,6.288933,2.483615,8.152000,-1.017006,3.536726,4.569524,0.034345,-8.371178,5.089503,3.602525,-3.831716,0.645630,-7.530744,-4.202554,9.881941,4.699682,5.910976,6.905698,-2.371917,9.487746,0.304318,2.398149,7.059394,-3.226358,9.091094,7.159538,-5.947979,-7.697681,9.027027,3.385072,-6.786872,5.584032,7.411669,-8.797775,-1.800531,3.597043,2.453155,1.504224,-9.246461,5.284450,5.383291,5.539882,-6.968472,-5.194921,0.201544,-0.390757,-9.382840,1.771253,-9.145098,-6.688094,7.535584,-4.211108,-1.003212,7.725925,-7.297339,-4.912050,7.202132,8.585881,7.570958,4.211196,5.627457,-7.148679,5.294021,3.323619,7.221246,4.375894,5.654297,7.900035,9.962063,-2.491736,-8.441193,9.261482,0.943267,1.250972,6.912700,9.055221,-2.258489,-8.123375,8.417834,0.154275,2.725771,5.260873,2.716447,-4.945888,2.710608,-0.198750,5.392042,-9.555544,-0.953732,8.170545,-7.011421,4.692904,-3.991244,2.376744,0.305352,0.840576,8.096620,-3.990829,8.248851,8.407769,4.953120,-1.606044,5.788686,1.922082,-7.559866,4.361516,5.451129,2.109048,2.318892,8.100983,-6.633720,1.491841,6.175899,-2.488453,3.411588,-8.307810,0.446715,8.411784,2.048485,-4.831838,-3.977055,-5.317224,-8.476954,2.055978,-7.285141,2.988880,8.964031,-4.894881,-8.265281,-9.129539,-0.052257,-8.611219,5.345492,3.297839,6.676975,6.052832,1.496773,2.227390,2.918868,6.217772,-9.518176,-9.400151,-0.485925,-1.924513,1.631519,-7.188759,4.624820,2.565806,-4.052658,4.494996,2.386749,9.963073,8.131236,-6.851834,-8.169752,-0.465366,-6.263915,-4.624612,-7.954074,5.744631,4.419658,7.267267,8.304000,-9.887956,4.185090,6.170213,-5.504777,-4.883423,2.092991,-0.999561,-4.548918,-1.740933,-0.094451,1.911735,-2.714721,-3.971493,-5.331704,-8.166537,4.671342,-8.259303,1.276180,4.964573,-0.852144,9.732858,-8.645146,5.580001,-7.200778,-2.626695,4.136387,6.967083,-0.923674,0.373498,-1.239435,-1.943451,-5.998060,-7.358848,-0.237159,7.909621,1.241768,4.237322,5.323889,7.130032,-9.202977,-0.850787,6.167171,3.861901,7.478213,2.881941,2.651937,2.794903,-8.060063,1.230503,9.559749,9.496551,5.566052,0.989376,-8.995640,-7.880156,-3.452512,-4.797517,4.281932,0.254886,-9.778673,-2.009790,0.923109,-3.688693,3.558209,-8.182437,-7.836306,-3.191155,-3.840127,-9.152923,-4.914180,-6.025927,7.656795,-0.123743,-6.737106,-8.062075,-7.531269,-0.850929,-5.135666,8.513073,-1.278018,5.483006,-1.107808,-0.946308,1.546567,7.827278,-4.734651,-7.263980,-6.298307,-8.255386,-3.516751,9.990047,6.400102,-1.830364,-1.133397,6.123712,-6.388398,-8.581879,-6.458213,6.401413,1.682469,0.049999,-3.732689,-0.816736,4.815594,-9.403536,6.018009,-4.391630,7.381168,-9.935338,3.355890,9.119361,-3.132011,-5.556996,-3.417569,-8.041270,-6.327539,9.998875,0.827370,5.549856,-7.226100,9.295229,0.512886,-8.144502,-1.250798,7.178832,6.114026,1.077329,-6.825304,-8.315298,-0.239847,-6.317700,5.239776,0.413518,8.948126,9.584762,-5.474179,1.914755,-5.764508,3.159813,0.673357,-6.832018,1.287411,-3.624686,1.978802,-1.595498,-9.208148,-6.523085,8.031393,-1.329378,-0.296154,-8.754600,-3.742910,5.362063,-4.541879,-8.967574,7.682387,-2.164897,-2.361686,-4.604098,9.680652,8.371580,5.084731,0.098820,-9.120123,-4.695718,0.653188,7.961137,-4.717225,7.301573,7.043719,-8.641068,-0.536774,3.230306,-3.331869,9.331155,3.938199,7.110474,-8.132561,3.235432,-2.547490,-2.248268,-9.546844,-7.141533,-2.529132,4.069104,3.710274,-1.544082,-3.881246,-2.340907,3.501817,6.748495,0.356521,2.601449,6.286017,-4.882395,-6.186021,-0.458775,-7.123755,-7.368198,-7.781903,1.123813,1.024209,5.586327,1.579887,-6.019294,9.268486,2.449673,-4.195167,5.951282,9.941543,-4.234984,-7.993407,6.006753,8.559404,9.069330,6.143860,8.462628,-2.125888,0.621502,-7.987648,-1.845930,6.227890,-6.861084,-5.531026,9.043355,0.224351,-9.005555,-4.143649,5.187289,4.518401,2.934999,5.023306,2.096201,-2.519030,0.283838,8.801183,-8.697926,-8.048955,-8.518783,-3.971400,-0.004144,0.201577,3.471379,-9.911056,1.228932,6.903753,5.214496,8.425189,-8.332374,0.473784,3.448736,4.726554,1.556847,-0.422888,3.845083,0.749180,0.941860,-4.086878,5.723063,2.177671,-6.709878,5.812953,2.093405,-3.694815,-2.530843,6.673049,-7.497467,-1.273650,-7.599772,-0.619203,6.650799,-1.348332,-9.728230,-7.078033,3.193394,7.621732,-6.003646,6.265474,2.006260,-6.832475,5.788179,1.347646,-0.540446,8.431587,0.500409,-2.921340,-8.887092,1.044718,9.147184,-5.515925,4.438021,-3.517283,-1.089269,1.771132,-2.834734,-0.249560,2.805958,5.266132,3.178581,2.399394,-0.943043,2.038187,-2.916603,-6.892469,-9.851883,-8.976541,-8.532709,-3.237344,6.968652,-6.482815,7.207524,4.510049,5.911813,-7.017191,-0.267386,4.218954,-3.925371,0.837420,7.559187,-8.194723,-7.967413,1.391236,-8.227443,5.022511,1.847099,0.058175,-0.004760,0.821023,9.331338,-2.415173,0.240216,3.005433,1.020408,-5.275598,-1.230380,-5.307959,-7.365160,3.251538,7.155884,-2.813831,-3.438258,6.665966,-1.292124,-2.717762,9.501391,8.938495,-3.487828,-9.165396,3.095554,-8.958493,2.663904,-3.134139,-8.040504,-3.026128,9.876107,-7.051656,-6.245763,-5.617439,2.601003,0.071422,-7.976901,6.484876,4.326373,-5.944214,2.655277,-5.046897,4.515666,-4.156357,-8.095470,-1.976862,1.108275,8.150279,-3.722647,-4.335289,5.321103,-4.483427,7.890217,-1.014134,2.094373,8.721221,-4.401887,-3.547361,6.136247,1.498912,4.453051,5.321709,6.925118,8.582051,-7.460868,9.540732,1.453166,5.406876,6.538304,9.834378,-0.323072,9.219491,-7.209104,7.460357,-4.633828,8.022957,-1.028875,-7.677843,6.194770,4.605833,-1.070846,8.918365,4.685441,-5.245337,9.364215,5.317493,-5.092613,-8.548314,-6.123935,-0.647113,-0.362208,6.380263,-9.407689,-2.100410,3.657333,-6.396822,-7.170262,1.762910,-2.653452,7.096853,2.069901,-7.526262,0.813608,-5.636674,-8.466412,9.791859,-8.662577,8.368878,-0.102181,-0.085957,2.033777,6.187489,8.649054,4.178623,-2.424174,8.268884,-6.467602,-8.796379,-0.924874,6.596107,3.966818,2.107478,2.799686,5.419527,4.202400,4.744256,-9.630771,-9.857633,6.697951,5.393675,-2.328153,1.787456,-3.603769,4.185488,-5.950643,4.223552,5.196740,0.191237,7.864111,-3.700929,9.862350,-8.710556,4.719865,5.500102,-1.881408,-9.015425,1.857884,7.831084,4.998625,-1.218474,-1.182388,-8.260612,-9.261820,-5.920566,-5.762576,-9.424152,9.151018,0.899643,-5.702961,2.753034,5.100185,8.473566,-3.256346,1.708450,2.332333,8.128306,1.467033,0.993530,-3.678894,-3.048926,9.848911,-8.437795,0.735964,8.727289,-7.090061,-3.920513,-9.082322,-2.421515,4.805101,3.617735,8.459475,-8.098578,-2.022389,-4.207587,1.347296,8.009047,-9.622667,3.029518,0.830479,3.297855,-0.943621,9.190200,7.823162,7.508200,2.324359,-0.236285,4.229701,-7.017216,-8.218555,-0.044950,0.876901,-5.574962,8.617902,3.018324,-5.006605,-8.090759,-7.974118,-1.532577,1.886999,-1.935445,-6.404226,4.900188,0.744452,8.952921,1.134825,-4.106081,1.302886,-2.714439,-7.751085,4.585808,-4.703230,4.859118,4.218108,-1.702902,9.521296,-8.066772,2.255854,-1.300318,9.503768,3.870543,8.187944,2.789585,-9.243922,-3.786924,8.368113,-2.302561,2.144434,-1.624907,6.839959,-8.914876,-5.188759,-3.457798,-8.575397,-6.654696,-4.364620,-6.343176,0.301639,-1.847638,3.340006,7.136769,-1.012812,-9.837761,7.562042,-6.620815,-4.938200,-8.964271,9.392726,-8.759793,9.611005,4.149269,-5.949426,7.483108,1.294684,-7.888881,-9.297881,2.837265,5.055924,6.452607,5.997281,2.816240,-9.315785,-6.702530,-4.171490,6.159110,7.686390,5.122680,8.130142,-6.245565,-8.233855,1.760084,-3.014060,2.512373,7.359613,-7.239277,-7.331445,-2.059927,9.962393,0.525003,9.991672,1.919655,5.379776,4.235898,-3.740673,-1.571985,-7.753579,6.095660,-4.975715,-0.718832,1.746127,-5.633313,-6.311580,-0.917847,7.846834,2.310005,4.512284,-9.298719,6.641105,6.203362,3.295176,-8.666407,1.696049,-5.360198,-9.725778,7.088117,8.803579,1.981253,-3.699449,-2.108694,7.903085,4.572456,-7.237951,-1.150532,9.639931,0.482179,1.950020,-1.864131,-5.228457,-6.871363,2.953186,-7.145238,-9.671950,-0.593879,-7.037520,-6.752847,-4.277158,-4.778778,1.302940,-8.278121,-7.374835,0.841223,1.070469,-1.076967,-9.482909,-3.725960,6.380138,8.764442,-5.679889,-1.286372,-0.508894,6.686137,-2.699799,1.696532,-8.523808,-2.088684,-9.771996,-4.935247,3.528670,1.909915,3.575459,1.957046,-4.897829,-7.232485,-4.891335,4.264801,-7.156423,8.111064,-1.113360,-9.386166,-8.301832,1.485519,9.802020,-1.029598,6.454977,-6.749265,7.270121,1.536198,-1.647043,4.215655,-0.555542,9.417010,5.625598,-7.924733,-3.535948,-5.501874,2.368214,1.377241,5.172656,-2.587941,4.116961,2.549852,-3.756171,-9.716950,1.194772,-6.221753,4.277797,-8.411561,-7.096552,-4.890336,3.225552,-9.684290,7.294931,9.190669,0.160009,5.671556,1.932687,-1.476625,2.156655,-5.389105,-9.599941,-5.747912,4.759348,-9.110442,2.113650,-8.922208,4.978306,-0.302432,-0.866909,9.211976,2.411752,-1.511899,6.588372,-7.972409,1.545846,2.388250,6.485037,8.386638,-6.549532,8.216148,1.884872,0.512355,-5.623526,8.980378,8.622019,-6.515192,0.364473,4.322891,0.364013,4.290949,1.953108,-3.654783,-5.066625,4.075697,0.267955,8.669380,-1.849542,0.413972,-3.323551,8.413111,1.828708,-4.389355,-1.059718,-4.747202,2.972666,-2.856726,-2.197438,-4.179339,2.746799,-9.801815,-3.525265,9.472975,-8.148110,7.564339,8.628364,-8.739061,-9.223308,5.681029,0.600555,4.469334,9.965215,8.349285,-4.582586,-7.522075,9.878196,6.026144,-2.272026,-2.303165,3.839159,5.633698,-0.032443,-3.884922,-8.689177,1.406795,0.581444,6.749675,-9.463957,-9.902266,-6.396584,-5.961820,3.958195,6.437692,-3.434673,-8.784467,3.326680,-9.108610,-2.620176,-6.419734,-2.660505,-7.157045,-5.066180,-7.479535,-4.299583,-0.378910,-8.021604,-2.036103,-2.062248,2.603775,4.289833,-2.230156,-0.878541,-5.706705,2.887702,6.456171,-4.018475,5.378331,8.867186,7.303479,6.039922,-3.141323,0.814236,9.908019,-6.435089,-2.782128,8.189943,-5.069753,-1.353673,-3.377251,-0.916414,7.025896,5.277892,4.786893,1.237596,-6.415750,-9.678643,-2.340039,0.953267,9.700315,-1.105946,3.249071,2.516727,8.496007,-8.367034,9.706672,-8.143014,4.370272,-8.309500,-0.898776,7.179186,-3.418322,-5.635540,6.757043,-3.518109,5.628327,6.434042,-6.163458,6.216839,-9.657624,7.120482,-7.046969,-2.032525,6.587801,-5.484226,-8.965937,-5.793330,-6.071921,7.713268,-3.947788,-3.366641,3.100140,-8.398643,-9.425588,8.894145,5.746328,3.375819,-3.888619,8.479270,-0.126866,-3.221307,-0.161817,5.089533,2.325471,-5.172316,-7.250349,2.923351,-6.052319,-6.160407,0.165812,2.020706,-4.425362,-5.410999,2.764944,5.834610,-7.058256,-4.140436,-0.637646,3.434965,5.726076,-1.160143,-7.958197,4.866966,5.027689,-2.567221,2.350716,-5.523542,-1.432143,1.884878,-1.277570,9.230644,-1.249972,3.003227,1.147689,-0.842172,2.695887,-6.341283,-8.954802,-8.510201,0.076481,0.081259,9.192579,5.768995,-3.800441,1.228603,3.853280,1.697014,-3.966054,-4.631723,0.592711,-1.034259,6.926470,5.790738,-7.357706,-8.233992,-3.579308,9.601613,9.797987,2.227816,5.400701,-9.317713,8.145958,-4.293300,9.712032,4.944347,5.094519,1.423345,-5.697208,-1.235571,-0.940931,9.407504,-8.374814,-6.930737,0.642536,-9.998593,-8.320917,1.822996,-9.477241,-7.119444,-1.912077,7.249486,0.071948,6.413641,8.696685,7.502748,-4.717751,-7.023899,2.583935,-3.223136,-9.841068,4.883611,2.139765,-3.890389,-3.348953,3.971475,-7.232884,-5.682925,9.319170,0.912755,2.576129,1.102143,4.263790,3.280832,-2.960788,1.828637,-8.697884,-5.935654,6.283031,1.750736,5.740553,6.303693,9.738263,6.201373,3.496979,4.638765,4.779138,-3.579358,-6.067343,4.494567,5.856224,1.893835,3.216493,2.592132,-9.482252,-8.165646,-8.619041,0.963930,2.999465,-9.380708,-3.056490,-4.394219,-6.970378,-4.427558,-2.333995,-0.903373,9.895637,9.759217,4.120636,3.886227,3.115350,5.783745,1.312353,-6.811280,8.462463,2.856174,-4.253967,-4.249191,-2.068543,-6.202942,-2.502939,-8.849368,-5.602440,0.738521,1.532425,-1.872672,-7.078454,-5.375861,-7.009534,8.021344,0.899473,0.362113,-8.369192,1.758632,5.342143,6.946250,-3.354517,7.079168,0.849340,-7.108283,7.178367,1.649491,-7.050991,-9.633014,-3.860567,-0.696593,-1.975999,-0.793761,4.528485,-9.170641,3.877008,6.884188,9.518618,-7.283789,6.113230,2.699441,8.111741,-6.748883,-4.313471,6.231673,-7.081032,6.899808,6.388646,5.038007,2.463806,6.699725,3.915483,-7.049925,2.334184,4.303428,6.732276,-0.208884,-2.298728,-2.511812,0.920392,7.859611,1.117345,-6.832963,-0.320065,-7.045280,6.403304,-2.067149,-1.775316,-9.355263,-4.047140,-2.947426,-0.483168,-5.219718,6.604191,-3.684908,-3.520975,3.319180,-7.836717,3.157362,2.114305,-4.098309,6.804713,-8.922809,7.073020,-2.595778,-9.713324,5.133190,6.853817,7.469359,-6.944246,6.071326,-3.804336,-6.885674,-0.026984,4.185998,3.443196,0.888597,1.584694,-2.940378,-1.373911,-2.383177,1.677042,7.860439,8.186893,-5.465456,-2.388322,2.126539,-3.410376,4.347871,4.749750,-6.092954,-1.150847,3.139758,0.858276,-5.035499,-5.352773,1.872114,-8.848604,-4.818420,6.162638,8.677904,-0.756495,-7.978968,8.499038,-2.730454,8.432348,6.380733,-1.048917,6.211458,7.426564,3.460762,-8.207294,3.560859,8.574010,-3.680362,-9.206378,3.322853,-6.786549,1.209916,8.270078,-7.791768,2.058690,3.868967,5.361581,6.936996,-2.928809,-9.561884,8.439088,-4.542789,-5.487403,-9.666341,-2.147335,3.692806,5.274965,-9.238597,-7.594820,0.100801,7.958196,5.932988,9.195019,3.907406,0.315880,-3.105728,7.523717,-7.082726,-0.938998,6.971383,-6.621818,6.356614,5.594416,-6.675184,0.513654,9.826527,-2.730190,1.273540,-6.395989,-6.012528,-3.597712,-6.198980,9.965611,4.975976,7.225416,-8.496532,-2.213158,-7.718016,-7.854278,7.537600,-6.577536,-9.868584,-5.295541,9.585823,-2.313797,-8.453141,-8.652809,-7.132550,9.952552,2.093918,-0.478681,-4.551273,-5.867920,8.207233,-0.409353,-4.727201,1.410973,2.836068,-1.486326,-0.421803,-2.485586,6.957776,-1.708032,-9.288856,-3.608391,-2.803219,-4.661578,9.766378,0.437496,7.775667,0.304945,2.840645,-3.152650,-3.691775,2.584129,3.243659,-5.897558,-8.477368,-0.074672,-6.304143,9.389164,-6.227828,-1.448666,-0.358741,-2.255121,6.895424,8.228334,-1.566536,7.031334,-3.797745,-4.922691,5.257468,-6.163214,1.204408,-4.565253,7.523838,-0.907286,6.689844,8.958098,9.686351,9.483594,-7.096457,7.850357,-9.579135,9.163790,2.275995,-5.288697,-6.779660,-4.322796,-8.714815,-3.750535,-9.001177,5.607124,5.380655,1.424440,-6.642143,0.500027,2.904521,1.283815,5.679820,-2.456004,-6.386691,2.723674,-3.191648,-0.529353,4.558614,-9.687495,-8.727631,3.289906,7.541271,-3.886528,-6.328474,-6.581129,-3.245172,8.669051,-6.622513,-6.509080,9.400126,-6.827286,6.004411,-8.038645,3.816641,5.461085,-4.234977,8.882259,3.018930,5.042190,5.349579,-8.548805,8.010458,3.083963,2.620380,4.822354,-2.093540,-6.366776,-0.548987,-5.927142,-4.906284,2.623482,-4.118695,-3.393849,-2.160646,4.299886,6.458550,6.185551,-3.607719,-8.430728,-4.808903,-8.390091,0.732924,5.889510,4.424942,8.230189,2.308755,-5.558843,9.752428,4.951552,-8.180992,0.355310,-3.006736,-3.318286,-1.794010,1.268207,-2.666192,4.913962,-4.836459,-6.975851,-4.597844,0.285397,-7.378867,7.210214,-0.181811,-5.352931,-0.677404,-9.108382,-3.794024,4.569493,-4.878281,-5.335081,-1.967614,-8.883015,-4.741408,-5.457786,9.117581,-8.281815,9.586500,4.273458,-0.840707,-4.627641,-2.327279,-3.881957,2.564803,4.084349,-5.318152,5.064482,7.661118,5.989886,-5.772305,-4.413455,-8.808730,6.848236,-1.172539,2.167085,-5.985582,7.906187,2.313597,-7.035597,4.437179,-8.313807,7.096974,-1.441119,9.848119,-9.704767,2.875028,2.310412,9.546111,5.653224,-6.657531,-3.066869,-6.162113,6.526190,7.871025,8.179227,9.031735,-9.132720,0.369092,3.104925,0.597246,-3.142067,-1.710865,-3.121382,-3.125798,5.386722,-8.487767,-3.995159,-4.150753,-0.208718,5.115563,-0.982586,1.411810,5.273275,-4.431680,-0.614899,-5.088853,-8.100174,-7.149098,-9.479767,7.564506,2.164641,8.558861,-4.688689,8.165992,-3.041342,-9.737189,1.446123,1.068524,-1.556708,3.257245,3.161224,3.153996,-4.143188,-9.830402,4.461726,1.189441,-8.757263,-4.594719,-6.244805,6.055677,-6.903485,8.128712,-6.674066,-0.279555,-7.545821,0.514469,1.783120,-2.396559,-7.087641,-8.169534,-1.659291,7.939230,-7.814873,6.377481,5.242269,6.334697,2.373528,-7.914931,-6.999258,-7.029818,-2.930560,-1.235413,6.534417,-6.908356,-8.282549,3.410665,-0.520688,5.014064,-1.765626,1.578460,3.467814,2.691871,2.802460,-0.983183,-6.371900,2.024145,-8.087311,-7.157679,-3.424920,-5.880540,9.362416,9.856705,-7.769376,-5.933446,4.228122,-7.536875,3.271129,8.330850,5.660144,-4.904405,5.328060,9.870712,5.842915,7.483741,-3.807942,-1.281937,5.672021,7.767853,-2.192074,-4.131058,0.459617,0.584320,-8.352030,4.784867,-0.398896,8.862971,6.729560,-2.116025,-2.866214,-3.360705,6.417927,-4.598048,-0.533151,-0.297435,2.959617,6.349478,6.848702,1.527391,9.745345,-0.741807,-5.042441,3.761517,-9.218697,3.815343,5.835711,3.641050,-5.169573,4.193826,2.725756,-7.453086,-0.282136,8.258265,-0.340759,0.827432,2.747888,1.293225,1.982226,-6.649258,-1.848026,-8.983138,0.346235,-2.741496,3.492261,9.329332,4.216480,-8.837762,3.821151,-2.123993,-3.670979,3.857262,7.221808,-6.939111,-9.548649,-4.674710,-0.127129,-5.024362,-3.101750,1.292732,1.810602,-0.013676,-7.338541,-3.709634,-1.172339,9.496519,9.272100,-4.297685,-4.415065,0.780175,5.898708,1.927939,2.497204,-0.842323,0.251342,5.104974,-5.821263,6.937687,-1.127005,-9.011910,-5.129176,-2.340625,-7.925371,-9.379157,3.080367,6.708488,9.620302,-8.440484,3.592755,-6.312493,-0.970981,4.065443,7.565777,-6.722909,-9.425894,-5.019822,-1.903322,-4.065762,-6.969483,0.622106,3.303766,-7.987961,-1.749527,8.619816,5.366821,-2.849330,7.363017,-2.414565,-3.077812,7.043025,3.716079,-3.649892,-3.389269,1.167635,8.896336,-9.512969,3.699527,-0.246423,7.204625,5.072291,2.000009,-2.807205,6.849786,-5.852346,4.649247,8.844720,5.572164,8.545699,-9.207592,-9.625699,3.536858,-8.205068,-6.905284,-4.430512,-0.933308,-2.617908,0.475905,7.287713,-4.612777,8.502866,2.951266,-2.633822,-1.348559,-9.129075,-0.272871,-8.508641,3.876573,6.849250,4.788215,2.600035,9.143927,-0.595838,-1.964071,-8.219549,5.693074,1.688329,-8.159348,0.788201,9.705504,4.166574,4.726638,9.017341,5.517066,-9.721013,5.921500,-6.597399,2.013815,4.067406,-1.918751,-2.860135,7.027274,-7.081610,-8.802788,-4.440280,0.221718,2.356116,-4.783459,6.620184,6.037634,-6.320980,5.609282,-8.794919,8.958981,4.852070,8.685727,3.022592,0.659485,-3.988467,-7.687215,0.036149,-8.791976,-7.929439,5.734095,-2.546235,6.892093,0.257270,-0.275534,6.446748,-4.019381,9.848749,3.401911,-6.701040,7.871162,-5.170910,-1.768682,6.424939,-8.124289,0.253748,-1.627096,3.160040,-1.139414,-8.295962,-8.191704,0.915150,-1.091675,-9.934730,6.627245,-4.386190,4.075503,-7.753515,-8.804589,-6.678311,1.688484,7.419928,-3.115501,5.454048,4.804363,4.801205,-6.150327,-9.906271,1.084200,-6.013651,-9.570997,3.968055,4.760292,9.819072,-2.984741,-0.763312,3.531153,4.811138,-3.592187,-5.395835,-8.810626,3.424330,-2.562996,-9.920682,-7.108538,2.822637,0.250926,-7.905742,-3.300348,5.806961,-6.758266,5.223399,7.559217,0.527149,1.047711,5.678748,7.603639,-8.923379,2.865118,8.664861,0.950534,-3.032614,-8.480935,9.228206,-3.951037,5.977471,6.487612,-2.840722,2.554839,-7.058719,3.375286,-7.868580,9.452220,2.984476,0.371122,-0.445030,1.958052,-5.512998,-3.373771,-4.734118,-7.720370,6.946730,-8.971599,-7.684630,7.368726,5.717528,-3.637086,0.643429,-0.044944,-1.337356,1.473290,5.703712,0.545071,-3.998094,5.315243,-3.231678,-9.426792,2.767343,9.113333,-0.643587,1.359176,-1.577896,-7.075170,1.857398,-9.279950,-0.966219,-0.150011,-8.183625,7.701542,5.653778,6.993075,-4.274672,6.232243,5.041540,3.389496,5.744097,5.282498,1.540290,9.843650,-3.645459,-1.011575,-9.355661,-3.929814,7.565050,1.645248,2.836388,-8.436528,9.839004,9.702326,7.316051,-3.111211,9.723681,-3.585987,4.030134,5.551302,4.480980,5.567309,0.612036,-5.825298,5.575645,1.899772,-8.044361,5.915358,-1.498584,-2.987301,2.596974,-2.792240,-2.511654,9.345032,1.857887,-2.909462,0.792970,-1.114845,9.854381,1.990121,-3.008844,9.245200,-5.651467,-4.023334,-6.525520,-4.861914,-7.192769,-1.417040,3.048065,-1.157099,4.404346,4.017708,-3.395236,8.452158,-8.940283,0.425375,2.568097,-3.769699,1.587493,-0.156285,2.640884,2.425718,-0.530489,7.976238,-2.895270,-1.487437,-5.052613,-5.016641,8.285405,-4.818850,-7.622490,-2.876242,3.417157,2.194647,-6.611113,-9.980680,6.021417,6.497924,3.770252,7.270836,-7.377695,7.293986,-6.220432,-1.225907,0.100945,8.520269,-5.909799,-2.345090,-0.263711,-7.911536,2.074892,8.471434,-8.492976,-8.116174,6.438262,3.026878,8.250622,-3.378554,-7.675296,0.089758,0.124112,7.528150,6.041993,5.371018,-1.695854,-0.408330,-3.551876,-5.817878,-4.035434,1.661776,-7.463041,6.786503,0.876846,8.397608,-1.990168,-3.534145,-7.251202,9.377996,3.557844,5.611813,-3.089310,8.806962,4.060055,-3.152954,7.154947,3.538059,-1.970098,4.968309,-3.048210,-5.814125,-8.384101,4.996339,-4.192061,-0.867264,4.282246,4.886577,4.371735,3.433706,-8.251206,-5.390124,6.148993,-0.065282,-6.847821,1.749269,-3.316173,-5.527223,-4.107164,1.743688,-8.290749,-6.591259,-6.033360,-4.959205,8.063778,-5.536056,4.143121,7.051679,5.317080,-7.363488,4.367625,-8.687756,7.112804,-6.396839,-9.228343,7.342022,1.416761,0.144305,0.803522,8.302034,1.323446,6.740958,-1.640686,8.427571,-4.919680,-4.440125,5.101154,4.420127,4.163678,0.033246,-6.153501,-9.646361,-5.900763,1.668244,8.089491,-9.437412,-2.322119,8.840415,-9.198425,-6.457052,3.968152,3.943397,-7.451192,9.230357,-1.744514,2.230993,1.461501,9.439037,2.245201,-7.809381,2.811587,0.699190,-9.708791,8.849097,4.365601,4.434771,-3.885619,-7.457807,1.181962,-4.247964,-4.664058,-0.186854,7.963552,9.557722,-2.135402,-6.133541,3.120122,-5.355133,-2.579194,-4.344240,9.542175,-4.251901,-1.198182,-3.700719,3.376691,-9.283092,7.625012,2.057344,-3.132785,2.709601,-7.439597,-0.144321,-3.617622,7.340413,-4.788189,-1.888800,5.656411,4.515794,3.259893,-3.780356,-3.701553,-7.496641,3.641407,1.438813,2.225684,8.866095,-2.967066,8.770418,-9.590652,9.702147,-6.806948,-6.751458,8.160289,-7.575689,-6.427686,6.500961,9.877690,-5.400463,4.341811,-8.778550,-7.575311,8.407568,8.427085,9.415327,8.622686,0.972034,0.041566,-4.871440,8.503726,4.703156,4.171986,9.245308,6.144736,5.747160,4.077253,0.998983,7.206578,-8.501537,8.621420,-2.589361,-6.716555,-1.522756,-0.850048,-8.891499,3.469412,9.055790,-9.303006,4.360205,-6.266767,2.238157,-2.931506,7.991629,1.063144,2.783129,-2.271990,2.457555,1.665896,-5.361622,-3.435942,7.043105,-2.590506,-3.117339,0.201362,-8.402187,8.697520,0.830094,-4.275345,1.050247,-9.132166,-5.829149,2.683068,-8.355154,-1.215702,-7.499425,7.705033,-5.187256,-5.054830,4.190523,8.805517,6.377663,2.311572,-5.729906,0.441072,6.452030,-2.385258,-3.874078,7.897710,-6.297291,7.276229,7.206256,4.866818,3.920465,-7.961076,2.336831,-4.592044,-3.326551,-7.439187,-8.552948,1.639053,0.351781,4.944205,7.762680,-5.800305,-1.025630,-6.284201,7.557735,-4.908307,4.674285,7.948006,-0.693191,8.385961,5.488193,7.323600,1.895971,5.388260,7.861232,4.352941,6.884646,-8.049394,7.608659,4.277755,-6.855568,1.230926,7.497635,2.890983,1.815437,-4.144329,-5.977723,-8.867076,-4.921411,-1.249976,-4.845482,-1.606865,-1.252757,-1.870174,4.340570,-0.710998,3.263128,3.660272,-1.500747,-4.606568,1.896877,-8.827739,-4.624374,-6.597816,-7.400427,-4.073026,-5.580956,-5.275820,-4.005847,-3.079218,1.996735,0.422237,2.768237,8.072672,6.983625,2.605656,-4.923498,-1.622795,-5.125781,-2.547480,-5.134688,4.570462,5.400520,2.907409,-8.725384,-2.027929,-5.374001,-9.511701,-3.021179,9.173114,4.931684,3.889322,-0.854474,4.622023,-0.123854,2.953041,-5.499215,6.610596,-7.670714,8.118488,-9.167867,-3.494330,-1.075651,-9.549969,-3.124945,-6.365854,-4.540074,-1.031280,-1.109723,5.304530,0.090402,1.354525,-8.764966,0.667196,6.443713,8.896311,-8.332691,-6.552430,6.763168,-8.556172,-0.968721,7.214424,-7.286954,1.787004,6.986500,9.309684,9.456910,1.116443,8.865993,-0.677283,7.477739,-6.326942,-3.401437,-1.399107,-9.624389,3.399801,-5.715255,3.676273,-4.776424,6.842675,-3.938401,-8.850270,5.624835,0.154416,6.048347,3.426509,0.726516,-6.931746,-9.862660,9.223517,9.198550,4.266569,-3.628128,-1.901890,0.361875,-9.757300,-7.353386,7.637117,-2.608055,-7.249443,-2.671873,5.155481,-7.122527,2.514898,-3.654159,3.508968,-2.287479,4.371127,7.332769,7.909003,8.965462,-3.951532,1.364137,6.480188,-1.792035,6.271062,0.619947,4.494293,-5.438074,-9.668228,7.179586,4.917169,-9.097780,-7.157538,-0.140494,-6.927550,-2.933338,-7.494991,-2.336003,4.811002,4.142259,-5.260847,3.267682,-6.461376,-1.523548,1.745957,-5.045705,3.316431,7.452606,8.473483,-5.226635,-6.531218,-1.682767,-9.863889,-3.056873,-2.559337,-2.516081,8.905257,-1.983631,3.421844,-3.829828,-3.534748,1.134752,-7.175732,-9.769407,1.953602,3.318577,9.805685,-9.203667,6.512443,2.095702,-6.256033,-6.242849,-7.362781,-0.664909,3.582231,-9.704829,9.627607,-9.914799,-7.873883,3.072888,8.779703,8.005730,0.211410,-4.235983,2.877052,-7.347917,6.408331,2.542511,0.355946,9.458297,-5.744584,-3.930103,-9.514960,6.546209,5.710725,-8.731576,-9.116945,1.980178,4.222750,-0.284117,-8.864764,-9.976291,6.705001,5.025685,2.124929,8.388823,-8.247989,-4.080125,-4.692836,0.420647,-9.270508,-2.618372,-9.204343,-5.991290,0.488062,-0.176802,7.623744,1.893377,-6.469473,5.404495,-9.855130,1.802090,6.256912,9.559587,-8.780966,8.517581,-7.945350,5.394024,-4.465475,-6.971795,-4.209662,9.153883,9.609769,-9.078634,1.469827,-8.990695,-2.402462,-8.390552,0.694790,-8.543904,-3.362422,-9.152579,0.215150,8.966675,-1.444064,-1.117246,-6.173021,-0.995898,-5.680932,2.315076,9.563276,2.571734,-5.069642,4.488341,5.375002,0.047042,4.768459,-2.064169,7.377522,-5.737865,8.977618,-1.466365,-6.406145,-7.966416,9.583371,-9.152446,9.326378,-0.176837,2.276886,8.214758,4.941631,1.216887,-0.455395,-0.445245,2.289409,5.525918,6.096723,7.571238,6.398681,-0.730399,5.261072,9.141978,8.755840,-1.886067,1.386211,8.747456,-4.588138,3.110095,3.521626,-7.705268,7.605366,1.290714,5.023299,-2.761805,-6.205867,5.916012,-6.100455,-1.900629,4.104508,-6.562966,-2.841721,4.689950,-2.722208,-5.762145,-7.179794,6.194497,-5.276731,-5.644784,7.955588,-9.678246,-7.667745,4.343029,-4.936149,-6.918514,5.646602,-7.061580,-6.321845,-0.687169,0.407377,-0.291667,-9.055210,3.343022,0.219645,-0.863952,-1.001710,-3.808199,6.153981,7.772241,-9.909111,7.558817,6.954426], dtype = "float64")#candidate|9668|(2925,)|const|float64
call_9667 = func_1091_call(relay.reshape(const_9668.astype('float64'), [15, 13, 15]))
call_9669 = func_1091_call(relay.reshape(const_9668.astype('float64'), [15, 13, 15]))
output = relay.Tuple([call_9637,call_9648,call_9650,call_9667,const_9668,])
output2 = relay.Tuple([call_9638,call_9649,call_9651,call_9669,const_9668,])
func_9673 = relay.Function([], output)
mod['func_9673'] = func_9673
mod = relay.transform.InferType()(mod)
mutated_mod['func_9673'] = func_9673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9673_call = mutated_mod.get_global_var('func_9673')
call_9674 = func_9673_call()
output = call_9674
func_9675 = relay.Function([], output)
mutated_mod['func_9675'] = func_9675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9176_call = mod.get_global_var('func_9176')
func_9177_call = mutated_mod.get_global_var('func_9177')
call_9809 = relay.TupleGetItem(func_9176_call(), 1)
call_9810 = relay.TupleGetItem(func_9177_call(), 1)
func_6901_call = mod.get_global_var('func_6901')
func_6902_call = mutated_mod.get_global_var('func_6902')
call_9855 = relay.TupleGetItem(func_6901_call(), 0)
call_9856 = relay.TupleGetItem(func_6902_call(), 0)
func_7257_call = mod.get_global_var('func_7257')
func_7259_call = mutated_mod.get_global_var('func_7259')
call_9865 = func_7257_call()
call_9866 = func_7257_call()
output = relay.Tuple([call_9809,call_9855,call_9865,])
output2 = relay.Tuple([call_9810,call_9856,call_9866,])
func_9879 = relay.Function([], output)
mod['func_9879'] = func_9879
mod = relay.transform.InferType()(mod)
mutated_mod['func_9879'] = func_9879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9879_call = mutated_mod.get_global_var('func_9879')
call_9880 = func_9879_call()
output = call_9880
func_9881 = relay.Function([], output)
mutated_mod['func_9881'] = func_9881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8799_call = mod.get_global_var('func_8799')
func_8801_call = mutated_mod.get_global_var('func_8801')
call_9893 = relay.TupleGetItem(func_8799_call(), 2)
call_9894 = relay.TupleGetItem(func_8801_call(), 2)
output = call_9893
output2 = call_9894
func_9897 = relay.Function([], output)
mod['func_9897'] = func_9897
mod = relay.transform.InferType()(mod)
mutated_mod['func_9897'] = func_9897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9897_call = mutated_mod.get_global_var('func_9897')
call_9898 = func_9897_call()
output = call_9898
func_9899 = relay.Function([], output)
mutated_mod['func_9899'] = func_9899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9673_call = mod.get_global_var('func_9673')
func_9675_call = mutated_mod.get_global_var('func_9675')
call_9921 = relay.TupleGetItem(func_9673_call(), 2)
call_9922 = relay.TupleGetItem(func_9675_call(), 2)
func_9176_call = mod.get_global_var('func_9176')
func_9177_call = mutated_mod.get_global_var('func_9177')
call_9981 = relay.TupleGetItem(func_9176_call(), 1)
call_9982 = relay.TupleGetItem(func_9177_call(), 1)
func_8025_call = mod.get_global_var('func_8025')
func_8026_call = mutated_mod.get_global_var('func_8026')
call_9987 = relay.TupleGetItem(func_8025_call(), 1)
call_9988 = relay.TupleGetItem(func_8026_call(), 1)
output = relay.Tuple([call_9921,call_9981,call_9987,])
output2 = relay.Tuple([call_9922,call_9982,call_9988,])
func_9993 = relay.Function([], output)
mod['func_9993'] = func_9993
mod = relay.transform.InferType()(mod)
output = func_9993()
func_9994 = relay.Function([], output)
mutated_mod['func_9994'] = func_9994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mod.get_global_var('func_7549')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_10018 = relay.TupleGetItem(func_7549_call(), 0)
call_10019 = relay.TupleGetItem(func_7551_call(), 0)
output = relay.Tuple([call_10018,])
output2 = relay.Tuple([call_10019,])
func_10023 = relay.Function([], output)
mod['func_10023'] = func_10023
mod = relay.transform.InferType()(mod)
mutated_mod['func_10023'] = func_10023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10023_call = mutated_mod.get_global_var('func_10023')
call_10024 = func_10023_call()
output = call_10024
func_10025 = relay.Function([], output)
mutated_mod['func_10025'] = func_10025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4559_call = mutated_mod.get_global_var('func_4559')
call_10061 = relay.TupleGetItem(func_4557_call(), 0)
call_10062 = relay.TupleGetItem(func_4559_call(), 0)
output = relay.Tuple([call_10061,])
output2 = relay.Tuple([call_10062,])
func_10065 = relay.Function([], output)
mod['func_10065'] = func_10065
mod = relay.transform.InferType()(mod)
mutated_mod['func_10065'] = func_10065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10065_call = mutated_mod.get_global_var('func_10065')
call_10066 = func_10065_call()
output = call_10066
func_10067 = relay.Function([], output)
mutated_mod['func_10067'] = func_10067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mod.get_global_var('func_7549')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_10122 = relay.TupleGetItem(func_7549_call(), 2)
call_10123 = relay.TupleGetItem(func_7551_call(), 2)
func_3170_call = mod.get_global_var('func_3170')
func_3174_call = mutated_mod.get_global_var('func_3174')
var_10135 = relay.var("var_10135", dtype = "float32", shape = (1050,))#candidate|10135|(1050,)|var|float32
const_10136 = relay.const([-9.864396,2.108512,7.187520,6.172204,-9.980280,-7.741926,1.187509,-5.516629,-1.645584,-5.853927,-2.043037,-9.244342,2.408361,9.930128,-8.573040,-3.331609,5.270054,-0.163685,2.052578,-1.807006,-6.930791,-6.970149,-3.013228,-3.372033,2.228421,-7.207429,2.205075,-6.966094,3.176378,4.258623,8.888993,-7.504083,0.822482,2.093195,-8.444776,-6.066123,-5.978133,4.385388,4.207226,4.188966,-1.925742,8.526333,-8.612477,-4.783254,3.965177,3.433823,-4.375170,-0.813669,-6.814440,-2.422596,6.648133,-3.862258,9.007685,-3.216060,1.283669,-8.820278,6.554285,7.784844,5.205319,-5.271241,7.574777,9.850715,0.641897,1.596032,3.311294,7.638257,-5.454367,-6.972854,6.088700,3.804157,-9.453249,-9.030000,1.345429,-7.435718,-2.774736,3.449467,-6.570048,4.277584,-9.363355,-5.067945,-7.068468,-1.468932,3.243322,-4.717306,-6.465320,3.861802,1.019863,-8.287209,-6.189972,-0.034684,5.610784,-9.145095,-8.456469,-2.682319,3.065869,6.900597,-3.964943,-3.722793,-6.362744,-8.066352,-3.219349,-1.011043,8.501911,-6.198391,6.456835,-0.820438,8.871246,-2.555205,-0.948066,-2.976760,4.115889,1.616951,-3.697723,4.130417,8.883694,5.474247,-0.828582,8.673576,-0.843361,7.944075,-9.875221,3.720450,-3.501114,-5.419069,-1.429306,-4.013129,-1.097146,9.899421,-4.122858,7.619263,-0.063212,4.173154,-7.031081,-3.406098,8.485121,-5.341473,-7.575321,4.018942,-2.539901,6.339141,-0.736925,-1.683006,-3.073590,9.539367,1.397461,-3.155169,6.583536,-8.243140,-1.396112,5.742417,-1.470834,-5.732936,3.996953,7.907249,4.694646,-1.414670,4.658079,-4.782747,-8.964756,-0.793345,-3.524338,9.165712,-1.525642,-2.751458,-4.992301,-9.709409,1.010966,3.326649,-8.821214,-5.832673,-0.205120,-9.671246,-5.827305,5.242205,-0.491233,-5.791004,-2.771126,4.326815,9.772377,9.874500,6.935758,-0.997213,-7.211339,3.631812,-5.665932,-3.374671,-1.951275,-4.845337,1.201614,8.127103,2.427457,7.885156,4.643120,4.352667,-5.419090,-5.063529,-2.886908,-8.100119,6.779550,-4.263385,-8.476613,-0.531573,0.252224,8.001331,-3.410928,-3.504339,-7.356664,9.046205,-8.934536,-9.277832,8.245607,-6.636838,3.389543,7.022613,-1.519266,-6.416318,-4.417474,4.096491,-2.489869,0.389600,7.247248,-7.434742,3.313736,1.747737,-1.719775,-4.365973,6.147540,-8.296956,0.477535,9.021520,6.372327,-4.170192,-3.409906,1.621479,-7.464193,1.858990,-5.661496,0.686280,8.512235,-2.395026,-9.179689,8.807071,8.524255,-1.141120,4.360217,6.117144,-7.377626,8.977078,3.986080,9.419029,0.877452,-7.568221,-6.673375,8.382243,-5.164506,-1.408211,-7.153626,-6.826637,7.486558,-0.785527,-9.151672,7.867227,-6.863035,9.217099,0.469860,3.630988,3.403128,-7.024483,-7.723039,9.654091,1.006527,6.988530,-5.550310,-1.722259,8.887053,-6.844075,-0.008752,-3.604803,-8.582687,-9.457407,-6.652949,-9.651948,7.341036,5.789802,-3.503415,6.743038,-0.966645,3.109400,-0.576401,-7.951642,5.772060,-8.995704,-4.412004,-3.086833,-7.391741,-4.880733,-8.480143,6.703846,-6.756871,0.504784,3.660524,-8.789106,-9.478547,-8.276186,9.001640,-3.434910,-7.901090,-6.040156,8.277494,4.380764,-7.346300,-4.394927,0.490088,-6.385898,-8.161146,-7.476457,-7.888210,-0.523757,8.882064,-2.658830,2.596785,1.421409,6.017655,8.068296,-3.589023,-3.427199,-0.267358,5.079802,-0.542874,5.437736,-8.852483,9.757960,9.761498,6.948417,-5.651489,1.732296,-1.257311,5.323809,9.140548,-3.306486,-6.694729,-7.300960,2.286351,-2.870138,5.355052,-8.595462,7.231978,4.461542,5.284367,6.982398,-4.152221,-9.939506,0.323108,-1.884176,-8.074008,-1.173433,1.991777,7.737336,4.986945,9.518356,-6.086267,-3.062911,1.964402,-3.885249,-5.498269,-1.598604,-5.975923,7.858319,0.195452,-6.266594,-9.917086,-1.151398,0.353775,-3.666216,3.079650,-5.392448,6.753572,6.272750,-0.539584,-7.523042,-7.834500,7.009678,7.230974,-3.346112,-1.069378,-4.582002,-4.070079,-0.868128,-7.142700,-4.233194,-3.517132,6.961585,0.675936,-7.932341,-7.003232,-5.634662,-5.019859,-7.134691,-4.939397,-8.179266,4.082521,5.754003,7.454120,-8.013241,-9.724897,5.131682,1.895293,-3.428089,2.367118,-6.926660,7.776301,-2.137986,-0.972841,7.831421,-0.938614,9.801050,-3.598521,0.303044,-3.859801,-5.158464,-9.277768,-3.257436,-5.968621,-7.783603,5.166109,-8.459018,3.361901,-4.427594,2.310828,-4.738976,8.291972,8.311586,-2.630889,6.224439,-9.294731,0.973203,0.566113,-3.873382,-9.511154,-5.361477,0.220113,4.058456,8.411497,-8.442703,9.057849,-3.967220,-2.905640,3.223138,-6.293937,-7.875364,-8.627336,9.931634,1.028520,5.757983,-8.497640,7.120123,-4.481550,-5.781437,5.436830,-6.479791,0.252919,7.148098,3.663908,-2.021773,-0.504985,-2.078216,-1.172446,-5.816997,-5.983504,-5.698997,1.585781,-9.407467,-5.762507,-0.407659,-1.426533,-1.285681,8.919894,6.001009,-8.294478,6.498084,-3.999091,1.093502,0.419288,-4.399124,-2.339875,0.635424,0.410530,1.972578,-5.391787,1.133542,6.719608,0.232611,0.079220,4.590779,-2.014707,-5.974197,-0.796492,-4.210158,-5.787125,3.412126,6.848049,-0.507504,3.698085,-9.122585,7.847825,-6.239893,1.726732,-3.992681,-4.534845,0.043850,-1.112423,-1.220576,6.457640,-1.033526,8.080210,-0.273745,-8.649440,6.122657,3.916608,-4.846145,5.969120,9.288642,-7.723308,-1.642778,4.643089,4.125274,3.488517,-6.864394,-9.366787,-3.578530,7.625357,-3.506617,-7.009863,8.281801,7.506207,-5.271534,-6.714943,-7.675712,1.142169,7.704945,-7.390895,-5.896398,-8.917508,-6.356260,-5.886517,9.995560,-0.637289,0.735708,1.219097,-2.453140,-0.930812,-2.468245,-7.408882,9.800688,2.646414,-1.802203,-0.241332,0.382370,4.341568,7.131126,4.471615,9.502846,4.456854,-6.451666,1.908304,3.865655,4.262744,-5.117994,-2.826162,-1.203890,6.342069,4.634529,2.100024,-7.480699,6.813999,-1.808616,-4.283176,-9.600185,1.481195,5.011508,9.101906,-6.702970,-5.690833,-5.613468,2.332983,-5.988639,4.600144,-2.198648,-0.986299,3.238229,-1.783631,-3.947016,-0.900946,-2.806765,3.163648,-6.355941,5.483047,-7.543386,-2.677434,-7.236827,0.201540,-4.160704,4.753493,7.212221,9.403372,0.023480,3.720509,1.382335,-9.105593,3.470945,4.260457,-7.667182,-2.283249,-0.672348,5.422780,-1.244866,6.854877,4.176655,0.292154,-8.755125,6.809197,1.164476,-5.439618,-6.025225,-1.049965,-9.002902,-4.898515,-8.629775,5.390089,3.325760,-2.220408,3.150525,-4.168902,-4.135581,-5.365258,-0.690028,-4.527917,-6.771983,-5.886410,2.648327,-4.726664,-9.063978,-7.498939,0.348004,8.795935,-3.998167,6.610640,1.651283,-5.159375,3.981310,1.331992,-4.854564,7.119444,-2.061055,-5.995036,7.227031,3.177646,3.106456,-4.692879,-4.291690,6.212285,3.621978,-9.456973,-1.192185,-8.728757,5.958781,2.551171,3.520898,-2.319181,1.667080,9.882614,7.994882,-7.731988,-4.116787,-6.221633,2.567226,0.731916,-4.083473,4.782826,-8.013044,-5.168100,7.430378,-2.473715,8.697487,-2.053459,9.543883,0.685927,2.842356,1.126330,-5.481837,-3.667614,0.679594,1.070497,4.943510,-8.931127,-9.085358,-6.195384,-5.971650,5.339237,9.040221,-6.824504,6.517307,-8.478034,-0.104454,7.427614,7.869277,-4.677018,8.090531,-9.773725,-8.209713,4.719488,1.656208,6.254149,-4.113282,3.481271,-7.431794,-3.404926,1.968495,-4.165651,-7.431907,2.501595,3.425111,-1.783604,5.254649,-1.128182,7.392007,-1.649636,0.572879,-7.609973,-8.840588,8.113662,-6.968755,5.609208,-6.453321,5.112282,9.898884,-3.849677,-5.181781,6.073488,8.622110,8.545568,3.576681,-4.689894,7.390245,-7.094133,-5.405721,7.413337,7.531485,5.234918,-4.171119,-9.165789,8.832226,3.881111,3.836353,2.426003,-4.785765,2.654573,-6.259033,-9.473999,6.287007,-1.890408,-2.849772,-0.441329,-8.196906,-8.425763,-6.159348,-9.738394,5.197307,7.092159,-7.894546,-7.878162,1.588537,0.453151,8.226832,-7.561501,-9.846348,-4.370780,-3.789620,1.146683,-8.317490,1.337198,-4.072321,-1.551089,2.538325,1.229801,-6.779421,-3.719987,5.323617,-9.410117,9.762033,9.030838,7.353433,9.475381,-8.277915,-9.053285,-8.361558,7.743364,6.416202,-3.266668,2.841663,-3.772441,6.658111,-8.618717,-0.389984,2.265578,9.591530,-9.975548,3.625203,-5.046121,-3.020917,-4.895340,-2.364835,0.005724,-6.985951,1.483303,2.938829,4.258128,-0.243686,-6.940055,-3.401331,0.238855,-3.027113,-4.113243,4.921278,-7.647383,4.730182,-8.544228,-0.709606,9.368426,3.078204,9.141755,8.591903,-8.256627,-8.408691,-3.286625,-4.694080,-8.820577,8.204033,-1.421579,9.771771,-0.199202,-8.523210,-8.705172,0.057682,9.449643,-4.029186,0.216102,7.035400,-7.652532,-0.665389,6.881759,-0.857741,-1.165697,-2.573182,-8.383843,8.598959,2.072024,7.178241,-2.930593,4.672184,7.000833,-1.104171,1.646839,-2.076224,4.146923,5.068855,-8.376568,-8.818289,7.327677,9.993080,-0.445117,8.508684,-6.434276,-5.851566,7.464730,-6.471201,5.291379,3.830660,8.834507,-2.630182,0.770705,8.182517,2.728130,-5.688324,-3.344412,-1.615243,-4.724164,-1.285496,-8.147812,5.280752,8.177460,1.726819,8.481069,4.289884,-7.704529,5.809262,8.726947,5.586609,2.320155,-9.140511,-8.925785,-2.664591,-8.650710,7.119951,9.906626,-2.777880,6.588974,-6.963543,-9.123832,5.405733,9.696147,-7.177053,0.868719,-9.556619,0.624183,-0.533439,8.984666,-8.491372,-8.864236,2.884174,7.784318,-8.293218,1.553853,5.477561,-3.142325,-0.183920,0.675326,2.244619,5.654795,0.756497,-7.756738,-5.042116,6.403564,8.278335,-5.128251,5.118373,-7.391962,-6.124630,-1.362802,5.175727,-5.706381,4.925784,3.947236,-4.755396,-1.869799,6.405029,-2.128147,-4.676035,9.636483,1.181647,-4.198348,3.127233,-4.559798,-2.864292,5.421094,7.186506,-2.969326,8.725217,1.278851,-0.600132,-3.992039,-5.825364,9.205299,-9.148876,-9.147123,-0.436773,-4.546149,3.971030,-8.833996,-9.367676,-4.118913,3.590824,-6.915948,-5.443647,3.840468,6.119231,-1.543530,-3.658973,-0.508839,-4.414050,-6.271717,-6.168528,-8.285053,4.271667,0.811908,-6.838940,4.117129,-6.371071,7.788898,-8.430886,2.123146,-8.275695,6.378769,6.960848,5.190488,1.898841,8.221042,-4.602704,7.192031,-1.407974,1.054876,-0.089620,-6.966116,-1.387906,9.627910,-2.437978,-2.978915,9.500941,0.842726,-5.436986,-3.801429,-9.505298,7.767712,-2.815286,-1.761832,2.963917,4.717309,4.657672,1.186798,2.268017,-6.996467,1.559016,-9.405292,-0.044881,-7.462051,-3.827752,-4.236190,-6.135554,-5.741306,9.137142,4.067465,-7.298753,-9.316682,-3.245781,-7.225264,4.970353,-5.358847,5.687911,5.362019,-8.217628,-3.183232,-4.850145,-0.995455,-9.905299,9.901284,0.059478,2.618766,-1.474660,6.667419,6.966649,-4.157135,-2.404952,8.310740,-6.010783,-6.374454,-9.552943,0.081774,0.586311,2.582933,-3.776553,2.085068,5.101577,-4.761239,3.468469,0.514603,0.966427,6.787460,-5.086019,0.911601,6.934935,6.766029,7.026079,-7.754990,-6.486460,-8.033834,7.060342,8.549221,-4.589790,-0.055793,7.842631,-5.342271,8.429878,0.593913,3.614009,-7.468099,-0.222406,-2.035769,3.721408,-1.520417,0.779811,-5.478361,5.325064,4.291800,0.882745,3.139603,8.563243,8.586054,6.508337,-4.609041,-1.138707,1.802877,7.355277,-5.981083,-2.443964,-6.710331,1.551032,-3.034197,-5.699232,5.635392,0.269311,4.380461,-5.816670,-9.867635,7.722237,-1.789131,2.755968,-9.590886,-7.048139,3.644104,8.230370,-5.447257,6.638310,0.008505,-6.254860,9.212846,8.314476,4.739183,-9.281892,7.118916,-4.062797,9.912672,1.346795,-6.981823,-4.977636,7.337418,-4.922147,-6.569758,-0.035640,2.679192,-7.062516,3.551101,6.096014,-5.207674,-5.744238,5.328863,0.865336,-9.116981,-2.013217,-4.440229,7.065451,0.582957,7.067315,9.915810,7.801546,7.932009,4.641939,-0.838677,4.245440,-4.145625,-3.130694,-2.511569,-8.600345,7.910003,-5.085854,5.243094,5.634921,4.453478,1.059523,-1.552533,9.794007,-2.022980,-7.927417,-2.108580,9.266189,4.335985,-1.395039,-2.406859,4.245742,-7.768041,8.863215,1.232567,-9.998827,-5.941807,6.380354,-6.135328,-0.705928,1.890715,6.588574,-3.643114,4.644442,4.632016,5.359617,-8.086699,8.669507,-1.912162,0.041435,3.183128,-8.747988,7.417964,-2.031585,5.545525,-3.998318,-5.761254,-1.331410,8.778730,-1.202682,0.629555,-8.757238,-8.485925,-2.382290], dtype = "float32")#candidate|10136|(1210,)|const|float32
call_10134 = relay.TupleGetItem(func_3170_call(relay.reshape(var_10135.astype('float32'), [7, 15, 10]), relay.reshape(const_10136.astype('float32'), [1210,]), ), 2)
call_10137 = relay.TupleGetItem(func_3174_call(relay.reshape(var_10135.astype('float32'), [7, 15, 10]), relay.reshape(const_10136.astype('float32'), [1210,]), ), 2)
output = relay.Tuple([call_10122,call_10134,var_10135,const_10136,])
output2 = relay.Tuple([call_10123,call_10137,var_10135,const_10136,])
func_10140 = relay.Function([var_10135,], output)
mod['func_10140'] = func_10140
mod = relay.transform.InferType()(mod)
mutated_mod['func_10140'] = func_10140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10141 = relay.var("var_10141", dtype = "float32", shape = (1050,))#candidate|10141|(1050,)|var|float32
func_10140_call = mutated_mod.get_global_var('func_10140')
call_10142 = func_10140_call(var_10141)
output = call_10142
func_10143 = relay.Function([var_10141], output)
mutated_mod['func_10143'] = func_10143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6083_call = mod.get_global_var('func_6083')
func_6085_call = mutated_mod.get_global_var('func_6085')
call_10284 = relay.TupleGetItem(func_6083_call(), 0)
call_10285 = relay.TupleGetItem(func_6085_call(), 0)
func_7960_call = mod.get_global_var('func_7960')
func_7961_call = mutated_mod.get_global_var('func_7961')
call_10317 = relay.TupleGetItem(func_7960_call(), 0)
call_10318 = relay.TupleGetItem(func_7961_call(), 0)
output = relay.Tuple([call_10284,call_10317,])
output2 = relay.Tuple([call_10285,call_10318,])
func_10322 = relay.Function([], output)
mod['func_10322'] = func_10322
mod = relay.transform.InferType()(mod)
output = func_10322()
func_10323 = relay.Function([], output)
mutated_mod['func_10323'] = func_10323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mod.get_global_var('func_7549')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_10339 = relay.TupleGetItem(func_7549_call(), 1)
call_10340 = relay.TupleGetItem(func_7551_call(), 1)
func_7964_call = mod.get_global_var('func_7964')
func_7966_call = mutated_mod.get_global_var('func_7966')
call_10341 = relay.TupleGetItem(func_7964_call(), 0)
call_10342 = relay.TupleGetItem(func_7966_call(), 0)
func_8568_call = mod.get_global_var('func_8568')
func_8569_call = mutated_mod.get_global_var('func_8569')
call_10350 = relay.TupleGetItem(func_8568_call(), 0)
call_10351 = relay.TupleGetItem(func_8569_call(), 0)
func_5051_call = mod.get_global_var('func_5051')
func_5053_call = mutated_mod.get_global_var('func_5053')
call_10356 = func_5051_call()
call_10357 = func_5051_call()
output = relay.Tuple([call_10339,call_10341,call_10350,call_10356,])
output2 = relay.Tuple([call_10340,call_10342,call_10351,call_10357,])
func_10376 = relay.Function([], output)
mod['func_10376'] = func_10376
mod = relay.transform.InferType()(mod)
mutated_mod['func_10376'] = func_10376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10376_call = mutated_mod.get_global_var('func_10376')
call_10377 = func_10376_call()
output = call_10377
func_10378 = relay.Function([], output)
mutated_mod['func_10378'] = func_10378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_10382 = func_4854_call()
call_10383 = func_4854_call()
func_4808_call = mod.get_global_var('func_4808')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_10405 = func_4808_call()
call_10406 = func_4808_call()
output = relay.Tuple([call_10382,call_10405,])
output2 = relay.Tuple([call_10383,call_10406,])
func_10424 = relay.Function([], output)
mod['func_10424'] = func_10424
mod = relay.transform.InferType()(mod)
output = func_10424()
func_10425 = relay.Function([], output)
mutated_mod['func_10425'] = func_10425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6485_call = mod.get_global_var('func_6485')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_10447 = relay.TupleGetItem(func_6485_call(), 0)
call_10448 = relay.TupleGetItem(func_6487_call(), 0)
func_6891_call = mod.get_global_var('func_6891')
func_6893_call = mutated_mod.get_global_var('func_6893')
call_10456 = relay.TupleGetItem(func_6891_call(), 0)
call_10457 = relay.TupleGetItem(func_6893_call(), 0)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_10464 = func_4854_call()
call_10465 = func_4854_call()
func_5643_call = mod.get_global_var('func_5643')
func_5646_call = mutated_mod.get_global_var('func_5646')
var_10471 = relay.var("var_10471", dtype = "bool", shape = (2112,))#candidate|10471|(2112,)|var|bool
var_10472 = relay.var("var_10472", dtype = "float32", shape = (121, 10))#candidate|10472|(121, 10)|var|float32
call_10470 = relay.TupleGetItem(func_5643_call(relay.reshape(var_10471.astype('bool'), [22, 96]), relay.reshape(var_10472.astype('float32'), [1210,]), ), 3)
call_10473 = relay.TupleGetItem(func_5646_call(relay.reshape(var_10471.astype('bool'), [22, 96]), relay.reshape(var_10472.astype('float32'), [1210,]), ), 3)
output = relay.Tuple([call_10447,call_10456,call_10464,call_10470,var_10471,var_10472,])
output2 = relay.Tuple([call_10448,call_10457,call_10465,call_10473,var_10471,var_10472,])
func_10476 = relay.Function([var_10471,var_10472,], output)
mod['func_10476'] = func_10476
mod = relay.transform.InferType()(mod)
var_10477 = relay.var("var_10477", dtype = "bool", shape = (2112,))#candidate|10477|(2112,)|var|bool
var_10478 = relay.var("var_10478", dtype = "float32", shape = (121, 10))#candidate|10478|(121, 10)|var|float32
output = func_10476(var_10477,var_10478,)
func_10479 = relay.Function([var_10477,var_10478,], output)
mutated_mod['func_10479'] = func_10479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10520 = relay.var("var_10520", dtype = "int32", shape = (10, 11, 5))#candidate|10520|(10, 11, 5)|var|int32
var_10521 = relay.var("var_10521", dtype = "int32", shape = (10, 11, 5))#candidate|10521|(10, 11, 5)|var|int32
bop_10522 = relay.bitwise_xor(var_10520.astype('int32'), relay.reshape(var_10521.astype('int32'), relay.shape_of(var_10520))) # shape=(10, 11, 5)
output = relay.Tuple([bop_10522,])
output2 = relay.Tuple([bop_10522,])
func_10525 = relay.Function([var_10520,var_10521,], output)
mod['func_10525'] = func_10525
mod = relay.transform.InferType()(mod)
var_10526 = relay.var("var_10526", dtype = "int32", shape = (10, 11, 5))#candidate|10526|(10, 11, 5)|var|int32
var_10527 = relay.var("var_10527", dtype = "int32", shape = (10, 11, 5))#candidate|10527|(10, 11, 5)|var|int32
output = func_10525(var_10526,var_10527,)
func_10528 = relay.Function([var_10526,var_10527,], output)
mutated_mod['func_10528'] = func_10528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10424_call = mod.get_global_var('func_10424')
func_10425_call = mutated_mod.get_global_var('func_10425')
call_10530 = relay.TupleGetItem(func_10424_call(), 0)
call_10531 = relay.TupleGetItem(func_10425_call(), 0)
output = call_10530
output2 = call_10531
func_10532 = relay.Function([], output)
mod['func_10532'] = func_10532
mod = relay.transform.InferType()(mod)
output = func_10532()
func_10533 = relay.Function([], output)
mutated_mod['func_10533'] = func_10533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mod.get_global_var('func_7549')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_10567 = relay.TupleGetItem(func_7549_call(), 0)
call_10568 = relay.TupleGetItem(func_7551_call(), 0)
output = relay.Tuple([call_10567,])
output2 = relay.Tuple([call_10568,])
func_10569 = relay.Function([], output)
mod['func_10569'] = func_10569
mod = relay.transform.InferType()(mod)
mutated_mod['func_10569'] = func_10569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10569_call = mutated_mod.get_global_var('func_10569')
call_10570 = func_10569_call()
output = call_10570
func_10571 = relay.Function([], output)
mutated_mod['func_10571'] = func_10571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6485_call = mod.get_global_var('func_6485')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_10684 = relay.TupleGetItem(func_6485_call(), 0)
call_10685 = relay.TupleGetItem(func_6487_call(), 0)
uop_10686 = relay.acos(call_10684.astype('float64')) # shape=(12, 9, 15)
uop_10688 = relay.acos(call_10685.astype('float64')) # shape=(12, 9, 15)
uop_10690 = relay.cos(call_10684.astype('float32')) # shape=(12, 9, 15)
uop_10692 = relay.cos(call_10685.astype('float32')) # shape=(12, 9, 15)
func_8125_call = mod.get_global_var('func_8125')
func_8127_call = mutated_mod.get_global_var('func_8127')
call_10698 = relay.TupleGetItem(func_8125_call(relay.reshape(uop_10690.astype('bool'), [12, 9, 15])), 0)
call_10699 = relay.TupleGetItem(func_8127_call(relay.reshape(uop_10690.astype('bool'), [12, 9, 15])), 0)
func_7710_call = mod.get_global_var('func_7710')
func_7713_call = mutated_mod.get_global_var('func_7713')
var_10723 = relay.var("var_10723", dtype = "uint8", shape = (180,))#candidate|10723|(180,)|var|uint8
call_10722 = relay.TupleGetItem(func_7710_call(relay.reshape(var_10723.astype('uint8'), [180,])), 1)
call_10724 = relay.TupleGetItem(func_7713_call(relay.reshape(var_10723.astype('uint8'), [180,])), 1)
output = relay.Tuple([uop_10686,uop_10690,call_10698,call_10722,var_10723,])
output2 = relay.Tuple([uop_10688,uop_10692,call_10699,call_10724,var_10723,])
func_10725 = relay.Function([var_10723,], output)
mod['func_10725'] = func_10725
mod = relay.transform.InferType()(mod)
var_10726 = relay.var("var_10726", dtype = "uint8", shape = (180,))#candidate|10726|(180,)|var|uint8
output = func_10725(var_10726)
func_10727 = relay.Function([var_10726], output)
mutated_mod['func_10727'] = func_10727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6556_call = mod.get_global_var('func_6556')
func_6557_call = mutated_mod.get_global_var('func_6557')
call_10739 = func_6556_call()
call_10740 = func_6556_call()
func_4907_call = mod.get_global_var('func_4907')
func_4908_call = mutated_mod.get_global_var('func_4908')
call_10754 = func_4907_call()
call_10755 = func_4907_call()
var_10759 = relay.var("var_10759", dtype = "float64", shape = (5, 11, 13))#candidate|10759|(5, 11, 13)|var|float64
bop_10760 = relay.maximum(call_10754.astype('int32'), relay.reshape(var_10759.astype('int32'), relay.shape_of(call_10754))) # shape=(5, 11, 13)
bop_10763 = relay.maximum(call_10755.astype('int32'), relay.reshape(var_10759.astype('int32'), relay.shape_of(call_10755))) # shape=(5, 11, 13)
output = relay.Tuple([call_10739,bop_10760,])
output2 = relay.Tuple([call_10740,bop_10763,])
func_10769 = relay.Function([var_10759,], output)
mod['func_10769'] = func_10769
mod = relay.transform.InferType()(mod)
var_10770 = relay.var("var_10770", dtype = "float64", shape = (5, 11, 13))#candidate|10770|(5, 11, 13)|var|float64
output = func_10769(var_10770)
func_10771 = relay.Function([var_10770], output)
mutated_mod['func_10771'] = func_10771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9879_call = mod.get_global_var('func_9879')
func_9881_call = mutated_mod.get_global_var('func_9881')
call_10860 = relay.TupleGetItem(func_9879_call(), 2)
call_10861 = relay.TupleGetItem(func_9881_call(), 2)
func_5643_call = mod.get_global_var('func_5643')
func_5646_call = mutated_mod.get_global_var('func_5646')
var_10864 = relay.var("var_10864", dtype = "bool", shape = (2112,))#candidate|10864|(2112,)|var|bool
const_10865 = relay.const([-6.653817,0.084531,6.843557,-7.998757,8.250531,-6.115561,2.696993,-0.461978,-5.466179,2.282070,8.657331,-3.801752,6.481839,-2.821226,7.649712,7.271695,-4.564951,0.596761,-7.554435,-5.371217,-7.776147,-7.434923,6.684035,-2.368810,-5.226491,1.912539,6.607094,8.241235,0.300993,0.054267,-4.815112,-9.654883,9.907669,-9.026780,0.933517,7.672855,3.118423,-4.112384,0.824187,5.502683,-3.108098,8.659546,-8.045467,-7.766880,-7.718227,-4.856523,-2.480224,3.670380,8.824122,4.426684,2.764488,-1.587600,-2.688178,0.181917,6.424835,5.355311,8.182049,9.261416,-9.272879,-6.816182,1.512989,3.513604,0.138560,-0.025816,-8.307356,-5.316129,-6.656350,-2.372502,3.083218,-3.775746,-8.794010,-8.786812,-1.934420,9.539993,6.476820,3.994572,3.102195,-1.987583,-8.589454,6.953980,6.078018,-2.206804,-0.167464,-7.574921,-4.940892,-5.796816,4.873144,9.605821,-1.556631,-0.864163,-7.648712,-6.351025,-8.309261,-0.799887,8.700940,8.239220,1.173704,8.743781,-7.490856,0.969264,-3.422570,-7.926863,-3.494602,-7.201197,-6.770762,-0.801882,-1.640483,-6.555898,-9.096196,4.080096,-7.682530,-6.806754,-3.841427,5.583745,4.453230,-2.287007,-2.021356,5.658577,-6.121301,9.816127,-2.060988,0.161508,5.798952,8.091765,-9.311574,0.323525,2.547985,4.686416,2.322588,3.336621,7.421702,8.391257,-1.482620,6.265748,-9.360587,2.547701,-2.118661,9.277965,5.837596,5.059596,-9.987012,-8.059638,-9.890784,8.628760,6.017234,5.393647,-2.751496,-2.891407,6.827370,0.607910,5.643116,6.869374,7.295848,0.017602,3.758868,0.954083,2.464239,-2.862899,0.541144,-8.279388,-1.447099,0.643942,-0.600017,3.533405,6.755521,3.405648,1.983069,2.091869,2.610750,9.380117,8.928070,-6.066255,4.867589,6.472995,3.980276,8.679940,8.126758,-0.058068,-0.329104,5.396413,7.279063,-5.206033,3.588850,6.380393,-7.691141,-6.105732,2.339368,4.784647,6.131085,6.015487,-3.855700,-2.105368,-5.401799,3.522398,-2.425340,-2.396520,1.426661,-9.354320,-3.834057,9.811266,1.577576,0.573724,7.483261,1.455744,1.565258,3.777334,5.564657,3.525918,-3.659349,-9.374231,3.632329,-7.478756,-5.794009,-2.157110,0.995628,1.386948,4.053101,6.558359,8.667366,5.674742,-2.125116,-9.379675,-3.852667,2.001091,-4.080343,3.941399,-0.723563,-5.019205,-0.095916,-9.634240,6.586819,-0.952669,-3.600016,7.315290,-6.749750,-2.664441,1.443033,-5.471872,-3.148909,-2.086252,-3.556299,-8.784749,-2.264109,5.935817,9.888381,-8.058404,0.227597,6.383995,-2.205721,-4.036721,4.174579,7.799703,7.210229,-1.948441,9.715590,2.603858,-0.446512,7.933587,-2.867666,-6.970169,-9.046939,-9.086284,6.171820,8.384583,-6.309560,1.320760,-3.071557,-0.082927,-8.659740,2.902165,-0.733894,3.181041,-8.929481,3.213705,6.450210,6.963585,-9.097384,-2.522873,0.953839,4.444620,5.218533,-5.676110,-7.324710,0.346272,9.570096,-7.177722,8.001618,3.054901,-7.015363,9.155786,-1.449604,2.271183,-2.430764,-5.606297,5.450985,-3.183661,-7.536567,-7.829550,0.964703,-9.922017,-2.078127,-6.257917,-3.435503,-8.493268,-7.897729,8.873482,-2.076540,8.686108,-7.904763,-3.750354,-1.122747,-7.870862,8.484313,6.092297,-4.241997,-0.820713,-0.470276,0.881132,-0.490823,-9.305302,8.585117,0.443405,-8.538482,-7.090612,-4.666370,2.908248,5.611611,-0.510011,-1.230307,-3.331087,3.291205,-0.008722,6.523053,-8.718645,6.693943,4.811783,-2.312445,-0.210911,6.500832,9.330391,4.483580,-4.559798,-2.998095,-2.301913,-0.211130,-1.848215,1.080978,-2.099384,-2.602164,-9.172657,6.914759,-8.035826,-0.475339,-6.272862,8.392162,4.604422,-1.906841,-1.097887,-1.120811,-7.909788,4.990746,-3.291285,5.004913,2.663512,-8.483991,4.925672,8.921369,1.985468,-3.792706,-6.260614,-8.442384,-2.207166,7.741490,2.784694,2.352787,0.148988,-7.125569,3.667370,-1.670610,2.645826,-7.539241,-9.351755,-1.655906,8.852631,5.931993,6.076051,-9.793640,1.895768,-2.237411,2.376797,-9.712665,-8.442548,6.445215,-9.582467,-9.023608,-5.914257,-8.170753,4.425449,-3.090991,3.647552,-8.687478,0.306452,-0.897123,-7.676710,-6.372012,2.599644,-6.863231,6.507176,9.849861,3.375451,-3.436537,0.354256,-2.555097,2.953394,0.445309,8.146807,3.352496,-7.441876,9.123348,-8.526538,8.918899,-6.645577,6.218328,0.296053,1.537986,7.532831,-7.250721,-8.058480,4.603902,8.159993,-8.961027,-8.977930,-8.668165,3.853903,9.463152,8.960988,5.569879,8.289957,4.488127,-6.193960,8.649895,-8.015610,-5.924668,0.499181,8.723023,-1.402404,4.287419,1.844863,-2.386997,6.454237,4.944492,-4.946942,-6.588685,0.582320,-0.645532,-8.039275,7.586491,8.260311,3.399523,7.231556,5.398529,-1.250139,-4.595208,-9.010404,-2.667664,9.660618,-4.536569,5.505673,0.287868,8.583922,-3.015887,4.787512,-0.183341,2.360252,4.802749,-4.944321,-7.519641,4.225413,8.553850,1.773020,5.345008,3.674198,-0.202039,-9.533557,7.529434,6.327531,4.052656,-2.292298,7.043221,0.883378,-0.784165,-9.154065,-0.780677,-5.062427,4.277862,-9.013112,-5.672888,5.098529,-4.946805,-8.537187,8.873566,1.162980,-9.654755,-3.966742,4.247298,9.160978,-3.617025,-4.378677,7.138456,-6.591938,1.382721,-4.600213,-5.983570,-7.750510,3.127871,-9.661214,1.472759,-3.978847,2.367823,5.383306,-5.733668,5.179551,-0.373987,-2.731423,-4.849892,6.735941,3.540889,6.427291,4.115984,-7.147609,-0.868194,0.371015,-2.910107,8.245736,-2.383868,-1.870549,2.162437,6.010241,8.710231,-7.527477,-9.005237,2.986520,7.650522,7.208096,3.187024,3.628218,7.007834,8.341069,-1.728260,5.025216,6.266746,-7.780365,7.107539,6.394226,0.797953,-6.606502,3.701003,6.716598,-0.817957,8.120576,-2.567715,7.991091,8.651068,3.512119,-6.968314,-1.078393,-5.526065,-6.877531,0.850530,-9.624766,0.963354,-4.860814,6.228161,3.796079,4.793953,7.848561,-4.537531,6.834487,9.582545,1.402897,8.984742,0.412017,-5.186877,-6.348516,9.175922,-3.417346,8.318908,6.969795,-4.344785,4.829418,2.455105,9.763447,4.754816,2.291487,6.829435,-5.102548,5.431772,-0.909004,-9.778801,4.294354,-3.141410,-1.097090,-4.377780,-3.560791,5.984020,-3.231997,-0.348164,-2.870949,-2.108260,-9.626958,-2.137296,8.502541,-4.590359,-4.809997,-5.643853,3.998300,5.411750,-2.275694,2.189625,1.531666,-3.492234,-8.870406,8.928646,9.940368,-1.188850,-8.525651,-3.405111,-4.121950,9.334221,7.662808,-1.028212,-9.846431,0.109563,-3.755346,0.340079,4.177364,8.321480,-7.077610,-7.220521,0.565088,7.690117,1.522353,3.815701,6.983986,-2.903599,-1.958459,6.936524,2.104196,3.085187,7.457193,6.136094,6.596128,-2.554579,7.486877,4.174739,-5.154263,-4.297651,-8.286956,0.201147,0.974159,0.820446,2.929156,-8.474311,3.485417,-6.596141,3.136203,5.528009,-8.275047,-7.421637,-4.240260,-2.554188,0.896674,-4.255512,-0.950261,7.495844,-5.252788,8.847320,9.135929,-9.283227,-2.216793,6.406602,-8.905089,-8.696646,4.202021,-5.820095,-6.737070,-1.945092,-8.740315,6.917067,-6.508600,-8.537094,8.401195,-3.367387,5.523479,5.017841,8.313193,1.307098,8.384485,0.478235,6.172980,-2.421841,-1.912102,4.133867,-6.076321,-0.059371,3.118998,7.038545,-0.909537,8.796657,-8.645424,0.888706,9.501631,8.680724,-9.185345,2.027310,-1.718981,1.366672,-9.457892,8.903024,-1.567494,-7.282472,-5.193556,-4.669535,8.176879,6.590136,7.366980,-8.342019,0.112074,4.735525,-0.803199,7.079379,1.971356,3.578614,4.395142,-7.502631,-5.156221,0.802418,-5.620587,-3.251899,5.421811,4.942871,-6.557577,-8.549695,9.485684,-7.909815,-8.568998,-2.043506,-1.430791,-3.030698,2.620703,5.755460,4.892260,-3.935773,7.929710,9.409798,-4.883225,3.995827,-1.958513,1.937732,3.651778,1.247726,2.745802,0.472438,-0.046062,-0.902405,-0.078751,9.816875,-2.406862,1.936533,-1.869624,2.173844,7.798923,-6.676028,-9.496666,9.195773,7.212033,5.533917,1.494577,-5.375855,-6.740864,8.617681,9.089732,-9.527222,-5.736434,3.663517,2.552570,-5.199522,8.463260,-1.527956,-7.725863,1.532689,5.775132,-3.487063,-4.749408,-6.008230,4.967851,8.496293,-9.857230,6.869561,-6.023771,-8.890100,5.233688,-7.333865,6.658414,-7.120364,9.912300,6.998102,-4.609643,7.007528,-2.773074,-5.094419,0.432700,-4.105172,3.986510,-0.559063,-6.898236,6.552893,2.542805,-4.431878,3.898562,-4.398123,3.583542,2.621750,-6.041732,-0.023040,-2.413838,-7.868920,-1.233068,6.600787,-4.256620,7.166812,-6.899448,-9.642825,1.194882,-4.940035,9.166700,6.720384,-7.662981,9.890927,5.042251,-4.740084,-2.109575,0.676426,1.918189,-3.202017,-9.632424,1.170744,4.274290,2.649292,-9.968255,8.422342,-8.119445,-9.586444,6.284969,5.895660,1.038916,-4.981700,9.563066,4.565076,-7.707902,-3.541151,3.814245,-7.637393,-9.884248,0.462197,6.194684,-7.791739,0.687122,4.692296,-1.480933,4.732001,-3.497452,2.169490,6.253000,-5.572443,0.146862,0.658624,-5.481067,1.758557,4.808900,-8.360975,1.178331,-3.025386,9.459802,9.526422,7.644283,-1.073050,-5.913369,6.326639,-4.323000,0.815547,-4.089266,-8.535509,-4.460664,8.648901,0.156270,0.674913,4.738946,5.067566,6.292738,-7.924317,-9.587264,-0.307041,1.921100,-9.029746,1.314639,1.673169,-4.880744,0.997878,8.380668,-1.481958,-8.237093,2.253767,-8.521300,-9.265706,8.246555,-0.846717,9.239042,-2.327618,-0.828222,-7.676730,-8.092843,2.945307,-0.742576,-7.993202,-6.943076,-7.174155,-0.619649,-3.628113,-3.433533,-9.672533,6.814807,3.009585,5.887351,2.389603,3.281401,9.389132,0.073314,-5.426921,6.174909,6.315495,-9.058350,-3.388006,7.438013,1.606371,-5.047209,3.219366,-6.542380,-0.033086,-1.273357,9.864766,-2.968760,-5.515390,7.148926,6.585627,1.243925,-0.956058,-0.641310,-4.331124,9.982977,1.353657,7.081573,-2.898020,-2.851533,7.409410,-4.153768,-3.802630,0.585197,5.890668,6.309006,-0.750697,6.729262,-6.651926,0.023092,-1.020243,-8.853511,-7.999259,-1.285029,9.755118,-5.139965,-0.011734,4.565134,1.676509,3.526381,-6.806822,0.514410,6.352799,6.503491,-5.111593,-2.015598,-2.336171,-4.996234,-3.023135,4.395061,0.731749,-4.528903,-5.422235,-9.443151,-8.850198,-3.959629,3.812984,6.625717,0.002894,-9.638728,-9.929526,-6.899861,-9.281686,8.138186,1.795648,-5.579029,-2.643778,-9.709132,5.866993,-9.907665,-0.493988,-3.427197,-8.250741,-9.389212,-8.904867,4.969185,1.698114,3.571172,0.251387,-3.904853,8.652287,6.248967,0.031541,3.794548,4.112813,0.463496,-5.394637,3.678732,8.726111,-7.923885,-4.168071,-3.796730,8.715910,8.624129,3.292925,-0.657764,3.594054,-7.494828,8.815584,3.452463,-1.008639,2.531555,-4.044559,4.685774,-9.538609,7.019801,-2.072917,9.558817,-1.206670,-5.395335,-6.798684,-1.132962,-9.483578,0.606648,-6.137610,-5.989715,6.551686,-2.187115,-2.002231,6.793803,5.417818,-9.896291,7.864473,-6.713823,-6.664813,0.385530,7.576112,-5.081024,-2.471909,2.335990,-0.651493,3.908299,4.891827,3.227190,-6.705325,6.780089,-3.361733,3.768187,1.200486,7.946918,-3.157467,-8.202860,-9.546701,5.830909,-0.343241,-1.457771,0.870765,-5.467222,3.874862,-9.496078,6.221023,1.609205,0.478673,0.986494,-7.694209,2.988114,6.348576,-5.171222,-3.112762,-8.949780,8.592558,-5.844923,2.212298,8.200020,-6.501947,-3.593612,5.388608,1.714478,-1.342678,5.914793,1.652032,7.675587,9.982101,1.899789,8.671886,-8.167390,-3.796787,9.701198,-2.992263,-9.586812,8.436624,-8.804073,-3.087497,9.307027,-8.834789,-8.070615,2.414261,-1.965769,6.914918,9.832919,5.178492,7.693512,-6.552925,6.400146,-1.548333,7.577571,-7.790082,-4.571539,-0.889627,4.937155,3.805166,-7.587917,9.992878,3.164715,-5.898854,-7.358274,-0.844060,6.737897,-0.171471,6.483020,-6.029282,-9.337530,-2.904625,-7.011853,3.652050,5.973436,6.425898,5.832709,-9.039273,9.351356,4.959425,7.481345,-2.053662,-6.011126,3.637275,0.084661,9.995940,4.802365,-0.364087,-7.370228,0.345157,-1.083760,4.380107,-2.006124,-6.853159,0.176943,0.156720,-9.053226,9.677843,-5.399001,-2.865079,5.156994,-6.462977,-4.987745,-2.957771,-0.947016,-0.131403,-3.733598,-6.797408,-1.152120,-3.919481,6.170645,-8.881478,3.290756,-4.089502,-3.942396,7.080423,-7.415302,-4.983976,3.646270,5.224662,9.362195,-5.501511,-8.206680,-5.563278,-5.942798], dtype = "float32")#candidate|10865|(1210,)|const|float32
call_10863 = relay.TupleGetItem(func_5643_call(relay.reshape(var_10864.astype('bool'), [22, 96]), relay.reshape(const_10865.astype('float32'), [1210,]), ), 1)
call_10866 = relay.TupleGetItem(func_5646_call(relay.reshape(var_10864.astype('bool'), [22, 96]), relay.reshape(const_10865.astype('float32'), [1210,]), ), 1)
output = relay.Tuple([call_10860,call_10863,var_10864,const_10865,])
output2 = relay.Tuple([call_10861,call_10866,var_10864,const_10865,])
func_10895 = relay.Function([var_10864,], output)
mod['func_10895'] = func_10895
mod = relay.transform.InferType()(mod)
var_10896 = relay.var("var_10896", dtype = "bool", shape = (2112,))#candidate|10896|(2112,)|var|bool
output = func_10895(var_10896)
func_10897 = relay.Function([var_10896], output)
mutated_mod['func_10897'] = func_10897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9673_call = mod.get_global_var('func_9673')
func_9675_call = mutated_mod.get_global_var('func_9675')
call_10916 = relay.TupleGetItem(func_9673_call(), 4)
call_10917 = relay.TupleGetItem(func_9675_call(), 4)
const_10925 = relay.const([6.977696,6.471455,-7.842120,0.031918,0.045533,3.352807,5.060101,3.430123,-3.845312,-0.540404,-9.978665,9.165538,-8.147068,-7.985810,-3.536755,2.470157,-4.528949,0.179511,-3.647817,5.713959,-9.342879,-2.275844,-4.889922,-1.534862,5.773147,9.293839,-1.489642,-8.526193,-0.458490,3.281676,-7.492675,8.839937,-0.626125,-5.223569,6.695619,-5.780188,-7.904798,7.456409,-6.393110,2.633858,-1.094216,-5.798695,-7.333450,6.343930,0.368060,8.972898,-9.473243,-3.186441,-8.940744,8.561698,9.160214,3.309922,-1.250108,-2.639918,4.023454,-4.414432,-8.447201,-3.671009,8.193791,9.321830,6.166173,6.495210,0.262627,-9.047927,-2.154782,2.795424,8.871562,3.767292,-2.036798,-0.626850,0.718120,7.943308,4.948950,-4.945014,-7.231758,1.347683,5.528722,9.958014,3.199381,-5.271201,6.374934,3.720039,-8.791187,9.960607,-6.191779,-3.029102,-8.213881,4.417378,-9.594143,9.658718,8.164461,-6.607632,4.713024,-6.246121,6.869756,-3.264270,-5.594812,4.596802,-6.489519,4.043494,-7.239877,-2.222304,-1.501519,3.095955,-3.327113,8.341693,4.390538,-3.529821,4.772125,8.431096,8.612919,2.344062,9.933457,-4.121576,8.831279,-8.408444,-9.278514,8.935467,-1.377704,2.906403,2.664048,5.850697,-7.762425,7.705778,-6.412688,-3.157185,-4.011400,5.965084,-5.509094,0.826964,-2.548895,2.779714,-2.964827,2.415757,8.537029,6.383474,9.732815,-2.456859,-5.971274,8.023459,-1.634851,-1.211802,0.100090,8.084081,-4.526279,-9.889771,-0.932542,4.232483,-1.227419,-6.918073,1.662297,-3.103870,-9.988985,-1.301517,-8.469753,1.409743,3.230616,6.396812,5.447931,-0.026425,4.080839,-6.599981,-1.384290,-2.675726,-5.492939,8.996211,8.569352,-2.895662,-6.645874,-2.600788,-0.578184,7.512302,-3.059005,3.782019,4.318264,4.895828,-4.414354,3.456337,7.270467,1.181376,-7.019873,9.280514,-7.123371,8.626479,-7.870147,7.866070,3.596539,-9.530807,7.560553,9.586482,8.535411,3.449524,0.491167,-0.354833,-4.492656,-6.849889,-6.269390,-5.242777,-1.170927,0.337115,-5.946265,4.121500,-3.060066,5.911191,2.173889,-7.273889,2.768006,-0.961842,-6.023738,5.468796,-2.163519,4.565068,7.598846,4.509237,3.732124,-9.808864,0.059791,7.632207,3.245632,5.811514,-2.155112,3.683287,3.799354,-6.652209,-8.646390,6.974726,5.250637,-2.224141,-9.645680,-4.698078,-6.299522,4.998763,2.532853,3.616266,0.968780,8.010982,2.754854,5.226934,6.790262,-6.991981,3.005264,-0.490298,0.485872,5.458981,4.071405,8.825052,-6.334333,5.202271,-0.630664,-6.067863,-4.915289,0.582142,-1.731162,-3.940028,-7.074894,-0.671529,-5.241094,-2.607422,9.420661,-3.709238,-9.227015,-3.192674,-1.736969,-2.939346,4.330212,0.038597,-7.318783,4.937122,1.634487,-3.046089,-4.134359,-6.024029,-2.776359,-2.131460,-7.588105,-5.202361,0.601718,-5.575297,-0.090252,-5.080546,6.900682,5.639538,-8.574440,5.015670,4.533654,1.247327,-1.916977,-3.089700,-5.276770,-0.365107,8.991744,0.516117,5.089601,6.892673,-5.762589,5.455782,9.683799,-5.694044,2.347795,6.118479,0.817240,0.257955,-4.061444,-8.472151,-8.049767,-7.396867,3.526597,-3.682540,6.074402,6.113448,4.593035,4.114881,1.677060,-4.832018,9.325362,6.128436,-5.096787,-0.644201,2.402692,-4.674726,8.535733,0.181762,-7.030127,-9.968454,7.532993,-3.985923,-4.963555,8.360142,9.908642,3.613748,-9.921177,5.366580,9.998326,2.940582,0.987303,-4.880509,-5.851576,5.088568,-8.955230,-8.024260,1.511655,-1.192795,2.287220,-6.622708,-9.128113,4.467902,-8.909041,5.178756,2.415058,-2.191249,-7.272315,4.578426,4.122553,-9.110368,-6.165154,0.976612,6.191221,-3.522571,-0.031098,0.372992,-7.581701,9.307937,3.320850,-9.764518,3.884341,6.794511,5.522796,4.050691,-6.829613,-5.110300,-0.694686,-0.342982,-8.779743,-7.224083,1.119660,0.770262,8.268843,8.658321,9.432693,8.601263,-9.247833,5.139018,3.988229,-1.400633,-7.155232,7.374901,7.947254,-3.044510,-0.619560,-8.194009,-1.169625,0.596434,-8.269653,-9.879464,-5.018325,-0.229804,4.785289,-0.668081,-0.159318,-7.707389,-4.812266,-5.662403,2.020555,6.254938,8.498646,-5.283123,3.260837,5.281909,-2.796938,3.554221,7.013342,6.833388,3.710078,-5.853961,2.772980,-5.419093,-2.917361,0.427003,3.216664,1.618101,-5.414077,-3.598735,3.746416,3.729505,-3.934114,-3.334842,-9.182213,-5.807746,7.837284,-2.713753,5.737771,-9.270376,9.043703,8.191213,-6.767267,2.063220,-7.795072,-5.392695,-8.024200,8.728692,6.836455,-6.601316,-5.754992,4.731310,3.482676,-1.300999,8.772427,-9.497150,-8.404733,3.653259,-8.549942,7.425593,2.477124,-4.251944,4.744658,-5.692012,2.739391,-8.917274,1.369501,-0.895201,9.718172,8.527711,3.682103,9.966374,2.727466,3.867847,-4.224276,2.658388,-7.003634,0.024051,8.812295,-8.468019,-8.308836,-4.027265,9.531900,9.601564,7.570327,8.961416,-1.412130,-7.808132,5.218613,-8.918415,-0.263726,1.453043,8.790222,-5.147598,-2.287847,-4.693720,-7.777684,-3.588806,5.279957,-3.736034,-6.811057,8.246007,7.264294,5.639532,4.640231,-6.185370,6.501413,4.070170,-1.092369,8.136234,-2.367943,9.038046,7.141786,-7.872509,8.903365,1.522834,-9.201688,6.566951,7.253068,9.407567,-1.577399,-4.351683,9.394495,-7.114851,-4.567977,1.388167,1.230409,1.596603,-3.301637,0.041051,-5.058516,-2.830344,-7.489349,-5.587642,-9.897010,-0.247031,0.299578,-5.840053,-7.065714,-6.318629,-3.244197,-2.949941,2.909948,-7.908302,7.286939,2.783982,8.993474,2.829521,8.083881,4.386489,5.425941,-5.805261,-2.920572,1.396743,-1.128081,1.754238,8.483244,-1.231523,1.300588,4.833285,1.445528,0.710179,-8.665560,-1.468982,-5.482876,6.734323,2.872821,9.274966,-7.299612,7.241705,-1.941639,9.779257,-0.676509,-9.370385,0.403645,-1.436202,6.591682,4.331975,-5.006792,1.494395,7.757797,-8.528659,0.749151,-7.880241,7.439079,-2.092428,0.137208,0.513455,7.961454,5.167790,9.817491,0.379651,5.860689,-5.215365,-9.599496,6.085730,-6.236343,5.396336,6.934695,4.161669,1.111822,-2.884475,-2.024379,-7.811138,-2.492451,-6.736582,7.270648,-7.357696,-9.351096,9.383650,-9.020390,-9.452210,-7.662205,-5.568424,8.891714,-9.414928,3.119781,2.988549,9.579304,-5.313233,-6.918333,4.609092,-2.247187,-6.190037,2.252981,-5.524708,-7.073101,-2.195533,-8.965834,-5.952166,5.920525,-2.788936,-6.148011,-3.062149,9.348292,4.567577,9.022583,4.087271,-1.426322,-1.861763,1.095696,9.463783,4.787643,5.350872,7.722307,3.661978,-0.447815,1.262861,-9.012592,-2.022271,-4.436228,4.579235,1.662338,-9.185081,-9.510497,7.810987,0.292830,-6.281467,-9.699479,-0.257149,7.922285,-6.095290,3.807352,-7.868837,4.699103,1.690329,-8.632596,8.989873,6.976997,4.026807,-2.041636,-7.573945,-2.422779,-2.821736,-3.175409,-9.865258,4.828578,7.191888,-3.013034,-8.006284,4.913890,-9.892609,-7.191511,6.179788,6.703589,0.592786,4.953908,7.068715,-4.621995,-3.926088,-1.271106,7.197975,-2.998594,-0.716879,-4.365559,-4.864676,-1.292619,-2.204781,9.486597,-6.510963,-2.220691,-1.941001,8.387057,4.477056,-7.183454,-0.525742,-5.247931,-6.998203,7.355046,-2.831811,1.226834,9.241885,8.063591,-9.351398,9.470074,6.997108,-8.234209,8.368241,3.551363,-6.723956,-2.840221,-3.022771,-6.920940,7.496191,0.577463,0.579396,2.912614,-8.738073,-5.555671,8.002701,1.181196,-1.735731,-2.611417,-2.621062,-3.532827,8.450985,1.690898,-8.124454,-3.630073,3.926509,6.001368,-1.082280,1.774165,5.282774,9.896522,4.334633,2.470465,5.651714,1.704186,0.259945,-9.710364,2.809266,-6.110838,6.323845,1.534413,-4.514390,2.164109,9.967547,1.560095,3.017967,4.771433,3.538168,-3.459652,2.035258,-1.106918,5.976630,2.244998,1.169141,-4.858824,9.440612,1.112194,-1.257433,-8.893844,-8.063608,-7.378688,8.601507,-0.421067,-0.155523,2.576257,1.147459,-3.468713,-3.502752,0.999088,4.454151,-7.898418,8.788877,-8.200736,-7.597061,-5.829944,-4.282758,-0.084116,-8.402288,8.909678,7.472290,-0.582751,-6.186532,-9.818647,0.212398,-5.726850,7.816366,8.468368,5.042640,1.480606,-6.043495,-8.227946,-1.382880,-6.763994,3.487464,-3.541239,-5.920225,0.322508,9.277339,9.904397,6.987571,-4.867430,-7.612697,-7.478995,6.805956,-6.365350,0.294721,5.656074,6.183470,-1.691509,7.592720,-2.215799,-6.175507,-1.364143,0.227290,-6.156804,-8.290924,9.578830,-1.969482,-4.909728,5.318093,0.307216,8.949848,5.448931,1.919039,2.219546,-4.868088,-6.257578,-0.312996,-1.877511,3.424558,-7.193500,7.621951,-0.584349,9.223451,-0.555181,7.538054,5.010941,-2.709075,-3.509186,6.626117,-2.813199,2.867575,-6.540710,7.474431,0.612393,1.670898,-7.006733,6.150602,-5.097038,7.884207,-8.965759,-1.221403,9.290349,-1.389802,-0.636466,-2.864116,8.305581,-4.709105,4.132912,-9.591472,-6.636789,-3.183512,7.633434,3.184175,1.095941,-3.034856,-4.128494,0.240654,0.890291,3.627397,2.590800,-9.011223,0.211901,-8.107360,-0.482697,6.023374,-2.280322,-6.275250,7.734529,6.087241,-8.092671,-6.156715,3.461954,8.746091,7.636087,-2.559491,-9.054967,8.961385,9.655191,-0.723528,4.349590,-4.020438,1.821171,3.592068,8.363395,5.248345,-9.239104,-4.559149,-0.992165,-1.423639,-6.880124,-5.560042,8.831846,-7.220329,-5.169854,-7.674278,-3.884156,1.920982,1.380684,-4.875475,-5.949011,3.426002,-7.237138,-9.204693,2.617373,-5.180277,5.375822,-9.703455,1.987113,-7.716898,1.883431,0.234510,3.568771,4.403254,2.997695,3.673552,-4.174391,-3.088628,-6.216249,3.290787,5.445684,6.935467,-2.802276,0.796316,-4.437448,9.089430,-8.397387,7.779261,-1.756396,1.812847,7.825626,8.236189,7.492489,-8.556752,-1.006850,0.554834,2.484901,-8.618087,-9.047290,3.825072,3.434022,-0.343526,1.435212,-3.891008,-0.356072,4.051811,-2.537919,0.456603,-4.418128,-5.098119,4.712647,-6.959023,-9.253770,2.575269,-9.920888,-3.230818,6.653507,-7.738883,-5.556708,-4.948585,-6.636368,-1.902855,-1.687558,-1.160264,6.599592,1.963078,-8.506241,-5.305764,4.520946,3.460461,-0.458958,5.764246,-9.587425,2.072862,-6.451296,7.799017,8.544766,-4.686438,-5.881795,3.148971,6.507889,-7.737323,-1.313583,-2.245942,-3.054317,-9.842753,5.248489,2.579468,6.794030,1.122383,-3.563860,-8.541924,-5.567177,-6.128185,1.719080,9.737725,-8.197996,-5.672409,-9.555941,-4.295901,-8.719140,9.421614,0.316205,0.453606,2.028712,-2.221045,5.924383,-3.773977,3.162619,-0.936236,-1.434780,8.014899,-0.074825,2.302135,8.564206,5.415615,-7.259854,2.867039,2.630917,-0.322464,7.424910,3.232540,1.987506,7.106809,-7.891052,9.669952,0.919443,8.977419,-3.810534,-9.877409,2.483589,4.833887,-3.593186,6.327627,7.056921,1.196575,-9.993585,-8.253915,-4.308321,7.874372,6.168842,8.490517,3.181945,-7.292642,3.949925,2.401513,4.066519,3.015281,-6.365361,3.326555,-4.300529,-3.084379,1.909605,2.518130,-2.246783,-0.765206,9.529749,-1.113201,4.015046,6.335779,8.102920,0.250886,4.981580,6.289200,1.105188,-2.522018,9.967224,-7.991886,5.566142,-7.777962,-3.913630,9.542528,-5.265318,5.365566,0.283297,-0.456901,1.817993,4.852322,-7.562917,-9.185253,9.843680,-7.243862,-4.794439,-4.824242,-9.563539,4.739882,1.500150,-2.507266,3.182243,4.658114,-3.876227,2.791050,1.553056,9.291152,8.490182,9.506066,-8.471934,4.934660,8.070831,-3.611186,-1.678865,-8.501786,-3.542205,1.887011,-9.864792,-6.836707,4.679110,4.416572,-1.762428,-6.543883,-7.665142,4.811123,9.182374,0.236340,-8.607582,-9.347437,-7.063877,-4.247208,-0.028023,-7.919705,0.873701,5.622422,-1.669224,2.460343,6.383400,8.445065,-7.753607,-8.162742,6.318033,-0.490035,7.107306,0.871513,9.790308,5.266317,0.871007,8.676196,-5.448229,5.961789,6.424862,-3.244914,1.663945,-7.270202,-8.869410,5.338300,5.375750,2.331560,1.161710,-4.123963,-6.081839,-8.932527,9.808324,-5.557179,-9.622525,-0.636431,1.063955,2.608953,-9.230102,-0.870527,-7.593995,0.101064,6.567983,0.354973,3.843046,2.303274,2.212572,6.152658,6.953590,-3.466108,-2.269643,3.583235,8.521214,-9.089956,5.600182,-0.293792,-5.215793,3.758034,-1.030529,-8.228919,-3.512140,-9.972339,4.869328,-3.116644,9.866897,1.507622,7.995234,5.560217,3.457587,7.114313,-9.430269,-5.186353,2.647069,-8.655590,-5.982049,5.867950,7.192627,-3.568162,4.045227,0.156403,-0.559155,-5.887875,-1.880374,-2.062302,4.734225,-7.438641,-3.234056,8.297593,-5.720932,0.848496,-3.375761,6.168432,-9.916216,6.058758,-0.003236,3.577979,8.914022,-4.240840,8.847040,0.975617,-4.047581,7.010566,-5.157603,-5.116509,-6.142822,-5.583839,-7.028823,-3.947906,8.762001,3.775804,6.071449,-3.630411,-8.166486,-0.400598,-7.192386,1.660487,1.335818,9.889217,3.907838,-2.085827,6.624857,-5.177488,-1.394293,7.654045,-0.691098,0.162769,9.806521,-3.398936,-7.540648,2.705904,-4.428746,-1.260319,9.096777,-2.176662,0.897689,0.327354,9.164282,1.042155,-3.649349,4.974365,3.798795,-5.421237,5.061130,-8.234882,6.422487,-7.395048,-9.168035,8.943031,-0.770741,-2.682992,-0.473843,-2.131605,-0.633260,4.121707,-9.002354,0.244725,9.834633,-9.784087,8.737023,5.357540,4.713232,-3.543928,-0.980870,0.984808,3.078614,-9.560472,7.829334,0.862543,-5.196404,7.662473,-6.558229,-9.870862,-5.360180,-3.919165,-8.844106,3.412703,2.775151,1.107533,2.262509,-9.169034,2.028757,1.188461,8.365406,-9.198443,6.150548,3.988061,-4.552663,-0.018883,-9.327049,-1.530201,-5.105431,-4.684883,-3.505889,8.293236,6.623614,-9.566008,-4.750147,9.625632,6.214217,-1.099473,2.892319,-0.285230,6.722312,0.011012,4.765159,-8.328552,9.484005,8.772513,3.598259,6.488942,-5.105135,5.789395,1.542797,-6.750672,-7.525798,-9.047308,-7.112640,3.405629,1.534572,-6.961175,9.808793,-9.430139,9.668324,-9.054452,-3.589651,9.951278,8.866225,1.854489,-8.882571,3.834307,-5.461666,-3.085831,-1.600109,6.791849,-1.140160,-2.972781,-4.034184,-7.544717,-2.569112,-1.696044,4.140736,6.745622,-6.822168,7.842109,5.982412,9.395987,-1.724937,-1.902268,-4.269502,-0.823021,1.601864,-5.840986,0.481084,-3.798960,2.516705,-6.724179,-2.674908,6.205165,5.004150,5.893367,-4.501932,-1.990639,4.532837,1.324503,-3.597439,-8.182040,5.017280,-3.324212,-4.335525,-2.125516,3.404098,-4.354767,8.996956,1.106097,-7.745359,9.038879,4.150025,-4.360365,-2.425250,-0.269912,2.877227,8.773897,2.159994,-4.474958,-8.087708,6.774247,1.144938,4.102129,-9.865824,6.830911,-0.820002,1.060964,4.518847,-1.020357,3.525460,-5.576956,1.572156,1.879812,0.303193,-1.600572,9.435991,-6.427103,5.491774,0.569232,-2.270367,0.429114,8.179087,-4.925289,-9.218895,-0.293037,-0.371569,-8.657968,-3.439588,-1.351139,7.120712,6.330202,6.686734,-6.220354,-9.314636,-9.927525,-8.102262,4.467926,-1.264319,-0.329988,-5.150244,-9.131206,-8.475000,-6.684689,2.186604,-8.065996,-7.189600,8.399704,7.415956,-9.264421,2.097639,-3.540964,-1.340304,3.592317,-5.331333,5.170091,-5.700761,1.371718,4.267972,-7.087143,-2.325295,8.032192,-6.816348,-3.832811,-8.269627,6.696625,4.723919,-5.983678,1.848576,-1.296208,4.703647,-2.922440,-5.816243,-1.420695,-1.119045,-3.239215,-9.639309,6.241240,-6.518471,-5.489918,-7.104881,-4.865066,-6.560393,-4.228307,-5.521237,9.294306,-0.657355,5.454449,4.956913,-7.814725,-1.986778,-1.434962,8.248828,-2.215946,-5.788864,-9.277075,-5.249604,-3.912086,0.120838,2.892258,-4.059483,-6.316395,-0.573172,7.725495,5.772869,8.454802,-3.066718,-7.187082,0.810755,3.422728,-2.375405,8.726329,-5.403527,1.327816,-2.780296,0.633504,4.796929,8.082712,8.244190,1.591548,8.573022,5.876615,-8.534820,3.117983,-5.186835,9.171554,-8.770534,9.935170,2.576009,9.895241,4.076663,-4.593798,-3.599890,5.784440,-6.999805,-3.123027,2.724562,3.811158,-2.864057,-2.064354,4.550526,3.682758,-0.911964,-0.300797,8.185778,7.999561,-0.901673,8.461690,4.222432,-9.887830,9.401875,1.038772,-0.949098,-3.866759,6.884880,0.148725,5.305455,4.531330,-7.112876,0.113871,4.524572,-7.743948,-7.038500,-6.488079,-2.527365,3.799480,6.206980,1.151509,9.479307,-1.729327,-1.508128,2.126512,-8.009496,7.316963,-7.314217,-2.279199,4.150665,3.575167,-6.217570,2.792631,-6.810732,-5.528456,-4.022905,-4.558807,-8.237727,-5.960471,-1.924653,-9.808697,-7.302114,6.822077,-3.217857,-7.485374,4.665158,2.805908,7.532770,-1.508694,0.990954,-1.413446,-7.099331,0.636111,1.881905,7.279694,1.496503,7.461581,7.481875,-7.263003,-6.432398,0.887220,-7.113292,-1.921434,-4.609871,3.852344,4.931482,9.206326,-1.737829,-5.286383,-5.003657,-7.930251,6.218067,-1.991882,-5.513639,-1.740511,2.100711,-9.587435,-4.225073,-5.636844,-4.814075,-5.340828,6.034492,7.816831,-8.495990,2.772078,-5.903308,-9.304430,3.867106,-4.674015,9.044308,5.689767,1.046385,-9.737633,-0.324820,-6.813384,5.717763,-8.948224,-5.541531,-4.014300,-4.930808,0.718107,5.496928,-4.812916,-5.074498,1.998655,-7.618175,5.307037,-9.770355,0.443678,-2.623930,2.320768,2.874786,-3.808853,-0.928252,-2.980766,-9.650128,9.525702,-2.853306,8.978368,-8.827062,-8.124043,7.616107,-5.038103,-1.524580,-7.888903,5.473163,-1.868084,1.404803,-2.457168,0.973538,-1.529851,1.762453,-0.943520,-4.793823,-2.071854,-2.421164,5.365604,-9.746762,4.579811,3.380120,2.170284,-5.246703,0.598573,-8.014895,4.347328,0.326768,-9.625328,3.223264,-4.232236,-2.168868,-7.836622,9.138405,-2.667703,-4.500503,-8.588586,5.673282,-2.794089,2.793188,0.970359,-3.254280,-1.024712,7.436156,-6.212227,5.584582,-0.220200,5.518704,-1.722407,-3.576535,7.259886,-3.466830,-4.320693,8.231991,2.509921,5.269300,9.865828,9.490954,2.040683,-4.282938,2.028352,-6.579089,3.575792,7.366822,-9.736853,-3.738597,-3.913151,-1.521624,-8.856915,2.302186,-1.528008,-7.206468,-2.478349,0.405608,-7.732758,2.519566,7.572640,2.811066,-2.053842,-3.512221,-4.076418,-9.390592,-6.630539,-6.915723,-5.263636,-5.209365,-6.771145,-5.902676,2.686665,-0.880008,5.299496,4.943222,8.549773,3.451137,7.212956,-6.570355,-9.895502,-4.962892,6.318227,0.675884,4.164368,9.354449,4.929136,-8.411752,8.873559,-4.771619,1.650231,-3.215490,2.447006,-9.074639,0.762444,-6.319837,8.233520,-2.798789,7.505823,-4.025001,-8.719041,-3.522346,-9.048805,-2.158505,0.266297,-7.340125,-1.764945,7.268433,0.213571,4.288599,9.385396,-2.879042,-3.903901,8.630772,3.806272,-7.108031,0.245526,7.275448,-2.601138,-8.060832,-0.802205,-1.530041,7.604309,-1.708170,3.550177,8.625120,-8.230206,8.990404,8.296526,-3.562315,-7.244845,-6.423491,-1.023812,9.688563,3.454617,-6.875011,1.791393,-5.543724,3.164023,0.950289,-6.738837,3.355247,-8.859592,-1.384653,3.155287,-3.930145,2.829482,-9.017848,-0.699303,-8.008781,4.271937,-9.289749,0.072293,9.580368,6.458405,1.626674,5.560034,-4.950601,9.367241,5.598664,-8.198199,5.906558,-1.031681,7.235803,8.104339,-9.030233,-1.883331,1.761361,-8.587958,-8.589411,6.363591,4.461572,-8.828161,9.129795,-0.067360,0.157015,-3.778022,2.860593,-1.077517,-5.803813,-8.342330,-7.677913,2.460840,7.714253,-5.318207,3.375156,5.909520,-2.972239,0.592080,-3.512198,0.263687,-2.826180,-2.581772,-7.203803,-4.143301,-4.739085,-0.315180,0.913523,2.428347,0.675363,2.333535,7.530081,9.344540,-8.988447,7.547830,2.100635,-5.685685,1.357914,9.663186,8.166637,-8.771708,-8.391137,-0.677817,-5.975254,-2.240921,7.449304,-9.005283,0.202702,3.249546,-6.348661,-3.555006,8.101343,7.078908,9.357835,-8.034687,-6.630248,-1.855390,5.901177,9.254773,-1.433979,2.225408,4.721801,7.536301,-0.186294,-5.417762,5.119205,-0.914663,-9.364196,3.669814,-8.278832,-9.156526,-8.843323,7.122039,-2.231300,5.046771,7.668004,-5.882414,7.916955,3.765889,-5.778763,-5.534153,-1.677003,-7.615778,5.844350,-8.039807,-4.946976,-9.372540,2.607730,-7.571143,-3.576605,5.279829,7.740540,-2.309950,2.490268,-4.846843,-6.547903,0.239581,8.145572,7.307926,-4.305352,-6.529862,-4.397450,8.079279,-3.664891,0.546090,-6.771690,-7.693976,6.510979,-7.457126,-0.612660,-8.383192,9.031407,4.521039,-9.150669,1.445086,-1.879644,6.367998,5.175022,9.930993,-0.547111,-4.723312,4.698768,-5.829447,-6.745398,5.228629,9.091066,3.163570,4.179615,9.822304,4.539348,-5.996591,-7.245308,-4.141841,7.008582,-9.366768,1.650435,-6.744305,2.314589,5.451781,9.610680,2.167846,-2.339754,1.927622,8.488880,0.881564,-0.475906,8.370439,6.004226,-5.363493,8.035400,7.827493,7.810883,2.568732,-7.749779,-9.785498,5.494899,5.592042,-2.564223,4.204254,7.757771,-7.475395,8.658875,9.955971,-2.055484,6.096470,-6.987717,-6.532130,-1.485584,-7.693457,-1.733725,-4.811401,-7.571056,1.249104,-5.429774,3.728952,-2.127480,6.738446,9.809607,-3.125207,-2.921277,9.409067,-5.251161,0.982158,6.165675,-2.840818,-1.484768,4.272280,-5.941939,-4.292223,7.770247,-3.047319,0.033648,9.137967,-7.881231,-6.946354,0.647287,7.179262,2.730614,-2.414882,5.438304,-6.706717,8.322895,-2.823639,9.360966,0.445832,-1.568891,-2.185099,2.777485,-0.185743,0.745237,2.567781,-4.903372,1.564637,9.845495,-1.812872,-9.595095,-2.606343,-6.310774,8.184557,3.959413,3.936066,-5.975372,-0.475621,8.540576,-6.133716,6.739592,-7.743844,-3.272549,-8.470470,6.333771,-1.533823,6.934010,-3.982852,-0.644909,6.305370,-9.612012,7.760592,-6.725395,-8.964983,4.309548,9.871495,-7.038306,-6.639340,8.250344,-6.198172,-2.956391,-2.172771,-3.927175,2.677642,-4.575858,-8.787138,5.399697,5.915002,5.154497,-1.881702,-3.104293,-4.163458,2.613484,-0.094558,6.605478,3.831274,5.412852,2.767861,-9.271205,-1.004051,-6.161293,8.028966,7.498886,2.409369,9.694076,1.599661,2.588265,-5.193916,-6.147001,9.842215,-1.318421,6.702118,-1.924684,6.635255,-8.413760,8.921708,-1.541405,-2.339965,-2.865712,7.573355,4.124318,6.000915,-7.704704,6.528453,-6.230729,-2.641980,-1.476335,0.846480,-3.612681,3.128565,-8.202773,5.782640,-6.195663,-8.935978,-3.854404,-2.774212,-7.089167,-2.179099,5.454104,-2.243013,0.790855,-3.873385,-2.200431,-5.041495,-4.980712,1.938173,5.361771,-2.306800,9.717228,-3.990355,-6.281100,2.371812,-4.142402,6.013488,-8.434407,-2.554136,-5.224496,6.882887,-0.941420,5.804790,9.512636,5.284564,-8.436035,-5.906014,2.762319,5.368984,0.185865,-8.695627,-2.418585,-4.333445,8.087716,-7.589592,5.302996,7.807238,-7.163993,8.179649,2.705519,-7.692091,-1.809225,5.093085,9.860450,9.612921,-7.957480,-3.447110,4.349206,2.224055,7.097595,-0.147191,7.471419,-0.661522,-4.311577,0.438348,6.262696,6.285970,3.549491,3.035083,0.476179,3.318976,-1.850359,5.581215,-5.321372,1.402155,-5.089886,5.996761,9.659573,8.553492,8.607429,0.415080,-5.886885,-5.176216,-5.115541,-5.675857,-1.394304,8.371389,-9.383763,-2.858462,0.396566,-9.177452,2.495069,5.970296,-5.730692,-9.904920,1.666386,-9.170017,2.299555,4.845050,-7.887866,9.047342,-4.909056,6.736811,2.625423,7.016452,3.262763,5.899990,0.095199,5.467202,6.478353,6.022572,-8.552128,8.813396,-6.713552,0.016756,-7.191197,5.786129,5.873098,7.919473,-3.795285,0.257376,6.500437,-6.132937,1.761171,-3.082759,-0.182724,2.376482,8.422678,-4.451402,-8.700893,-4.827801,-4.926043,2.621676,-4.434983,6.966244,6.381216,5.386093,9.646976,-3.431405,9.682205,3.438249,-5.924286,-6.938387,5.003041,-7.263952,-0.252652,2.603062,-6.036306,-3.801571,7.220601,-5.802934,-0.210177,3.329099,8.739293,-7.883459,-4.331690,-6.042197,8.148765,-9.864033,7.568408,-6.541112,5.300112,1.938249,-1.071064,0.079673,5.828390,-9.023088,3.492437,0.761109,3.814981,5.022203,9.331668,3.949174,1.685336,-4.186084,-7.358916,-9.548365,-7.230081,8.886709,-2.426632,-9.962747,-9.770375,6.010925,5.157165,8.794981,0.083281,-5.362345,-5.629260,3.202552,-5.629369,0.027257,-0.414588,-3.426791,6.506927,1.630462,-3.741793,9.243477,-3.191430,-5.299169,8.216954,8.032136,2.289545,1.242382,7.700280,4.263120,-8.320515,-4.177242,-7.151508,1.839291,-9.323946,1.937304,9.514490,-5.662352,-8.792618,0.160425,-1.569349,-4.548666,-7.711473,3.942670,-6.660210,0.350406,0.903389,2.508692,6.924256,7.174803,7.744764,-5.833124,0.017647,-8.455584,-3.119010,9.127846,-7.561913,-7.937561,-0.062528,-8.353257,-0.007782,6.380734,0.667341,8.157011,-6.906908,7.281992,-2.912119,-6.002145,-0.107516,1.880414,-7.212340,5.770058,-4.985427,6.041798,8.023030,2.753510,-3.924815,-4.152086,4.813773,-2.553838,-7.812718,8.773797,1.362268,7.566638,-1.928576,-6.916771,5.876560,-6.270599,2.223849,-0.550987,7.895099,-4.531518,1.229597,-9.720923,2.878022,-0.202219,-1.656340,-7.251718,8.364163,9.983971,-0.795908,-2.233458,9.469572,1.166445,-5.566958,8.889273,3.579718,0.644449,-6.889832,2.206727,-6.119089,-2.399008,8.045145,3.314436,-1.402250,-4.131196,-3.875085,-0.277874,3.931411,0.870629,-5.073925,-3.156515,-9.429628,-0.580152,8.565192,-7.554133,7.375059,-9.311965,6.007306,2.238003,-1.821457,-5.864453,-6.193601,-0.958867,-8.869996,1.015021,-5.460876,-9.601455,-8.555970,-2.678479,-2.342652,5.140900,4.265680,-3.289602,1.354826,-6.087439,-9.841725,8.327752,1.433911,-8.417941,6.981532,-5.300920,9.156850,-2.791333,8.659072,0.285392,-2.797954,5.532638,-1.449401,-1.660827,3.561288,4.245125,-0.415915,-5.512225,-9.488540,0.139496,3.129589,-0.586119,8.824597,-5.526089,8.383796,-9.939859,-8.631650,5.305049,-3.023924,9.464779,-4.593605,3.309884,6.702344,-7.948338,-8.447116,7.557334,-0.856523,6.626316,-6.734855,-5.037688,4.737432,3.682884,0.081962,2.952098,2.258488,1.492730,1.327183,-7.281407,6.117863,0.382799,-0.180482,3.111585,-3.114637,-3.158679,-1.341445,-2.125374,-9.698367,2.300154,-8.310775,7.655044,6.427579,6.994948,0.022133,0.533363,-3.000152,-9.213224,1.616581,1.813928,-1.936394,6.756002,3.564596,8.768229,8.287812,5.158728,4.722548,7.186558,6.536680,3.571959,-3.271113,6.992644,1.241626,-3.752817,6.706525,-7.287315,6.339178,-8.041742,1.603962,-3.222698,0.881806,-7.105801,-6.598903,1.799280,-7.907739,-7.799947,-8.332257,-9.661154,-2.570607,-7.489392,-1.079980,8.966765,-4.437677,-8.641850,2.641081,6.588271,-8.320002,1.359969,1.170071,0.685213,-1.202019,2.778410,0.189926,-6.577235,-2.435346,-6.958576,-4.313469,-3.129271,5.692665,-8.266514,-0.801645,4.388598,-2.104941,4.592655,-2.992017,5.086169,4.608684,2.422970,-7.018108,-6.076134,-9.310425,-9.496915,-4.683238,-3.533959,7.339573,3.288260,-6.255952,9.242686,3.700335,-5.235752,8.717387,-2.624732,-4.229628,4.999830,-0.582187,7.029366,-8.511615,5.491021,5.246957,1.879510,-4.954932,-7.107700,0.264296,0.685385,-9.532411,-1.080178,-0.847376,-3.713470,-2.860903,1.200357,1.142023,-1.257053,-2.141568,0.995515,4.691764,6.822815,1.647610,-3.711827,4.117335,3.664076,9.860839,9.172784,8.241254,2.103184,4.487515,-8.885032,7.235477,0.114961,-9.914910,4.154529,9.071753,3.405933,-0.399783,1.556101,-1.488567,-0.904652,8.228438,6.459325,5.443620,-1.372241,1.484868,-8.853276,6.496316,5.497446,-9.735846,6.965101,2.831223,-7.722412,-7.409062,6.080897,-5.074580,3.747817,5.627620,-9.588191,0.579118,6.815045,9.877585,0.589246,4.908207,-2.299373,-5.428074,3.729704,6.563216,2.869503,-8.489008,-1.639627,-3.086234,-5.356495,-3.173102,3.440011,2.068519,-9.944520,-0.731869,-2.577524,-4.825712,8.911541,-0.312996,-1.625513,-7.671522,-0.849369,-3.082351,2.786563,-4.672607,-1.576447,1.931927,-9.110717,4.329389,5.171834,-7.417363,0.327751,1.569348,1.823588,-4.915331,8.721164,-7.325500,9.084706,-9.667346,4.142178,-4.647557,9.593184,5.816635,-2.870193,-5.831148,-5.680595,2.711778,-1.008900,-0.005490,4.049149,0.827711,4.036794,-4.417310,3.049796,-2.362547,9.973130,-3.415130,-9.271329,-3.279967,-4.110912,-0.506206,2.424267,0.473329,-5.894265,-0.012107,-7.458159,-1.638574,2.721606,-6.677888,7.590966,6.675352,5.411760,8.785905,-2.753124,-0.046977,9.296109,6.372267,3.491705,-3.952911,9.515365,7.080969,-5.798299,5.708253,-0.164655,-0.777619,-2.973520,-1.480052,-1.481112,7.150936,0.565165,9.544250,7.046798,9.220682,5.974415,-3.554023,-1.688670,-1.687983,-3.392463,-7.516639,8.417128,-2.129571,6.516482,4.297326,0.813267,-4.190749,4.743151,2.352704,-7.998748,5.651519,-5.124944,-7.817539,6.506010,1.465306,3.458205,-1.527897,8.341397,-2.796936,6.949678,-4.361030,3.461693,5.077461,-5.502579,6.001865,9.758285,4.015229,-0.465013,1.657771,-2.382685,5.073013,-5.033833,5.879918,6.866917,-3.607793,7.169803,2.041154,7.751868,4.618185,3.455277,6.438087,4.637142,-0.585593,-7.922783,4.772503,-1.126835,-8.241656,-8.659850,-0.174684,-8.486638,-7.536062,3.993060,-7.470844,-7.981967,8.200501,-4.763013,4.292288,3.560522,6.058299,2.526701,-7.290614,-2.352302,-9.252518,-4.294772,-8.047305,-2.353979,3.821357,-0.670268,-5.746693,5.186843,-3.169582,-5.705393,-3.089197,0.348882,-9.623441,-0.182048,-8.399149,9.516162,-8.777023,-5.591616,-3.983489,2.692231,-8.117722,9.992056,2.983418,-5.145699,-8.348304,4.291066,-4.324097,6.939732,3.784315,-9.149179,-0.315606,-1.912430,9.983123,7.772962,8.088841,7.560662,-7.079786,7.005168,-8.557249,5.614127,-3.804999,3.870137,8.871868,2.269878,-3.635522,-3.737714,-0.146612,7.947926,3.223269,9.983908,-2.369941,6.134759,-0.374912,-0.386972,-8.368888,6.701206,-7.059781,-1.567535,7.529815,-4.971895,5.890453,-2.831882,0.503952,8.172495,-7.449974,-0.888605,-1.305047,9.250343,-8.083327,3.851484,6.539333,5.667568,2.477893,0.687655,-2.917449,-2.516407,8.966323], dtype = "float64")#candidate|10925|(2925,)|const|float64
bop_10926 = relay.greater(call_10916.astype('bool'), relay.reshape(const_10925.astype('bool'), relay.shape_of(call_10916))) # shape=(2925,)
bop_10929 = relay.greater(call_10917.astype('bool'), relay.reshape(const_10925.astype('bool'), relay.shape_of(call_10917))) # shape=(2925,)
func_8568_call = mod.get_global_var('func_8568')
func_8569_call = mutated_mod.get_global_var('func_8569')
call_10931 = relay.TupleGetItem(func_8568_call(), 0)
call_10932 = relay.TupleGetItem(func_8569_call(), 0)
func_8234_call = mod.get_global_var('func_8234')
func_8236_call = mutated_mod.get_global_var('func_8236')
const_10935 = relay.const([[-0.221131,1.886790,6.347204,8.116532,8.444180,9.461237,-2.536933,4.554536,-1.810498,8.056359,6.035047,-4.124320,3.765604,7.688528,-6.368774,7.739028,-8.524444,0.029896,7.471108,-9.108454,1.579899,7.069522,2.514497,-7.700277,0.357806,3.571412,2.947521,0.856826,7.045781,-7.320483,4.360058,3.013266,0.956327,7.184580,9.564420,6.304077,5.340333,-0.582714,-0.786722,-2.160311,-3.235582,-3.225366,9.964429,-5.774694,-8.198748,5.380166,8.255279,6.367602,4.175268,7.685721,-2.241586,1.021542,6.372682,-9.631943,-0.430446,6.427457,-1.391280,-5.971908,-1.867898,-8.177212,5.662154,-4.391221,-5.707365,3.574065,-7.762437,0.192393,-4.723576,-7.696195,-4.344280,8.089924,-2.286309,-4.561759,-0.423499,-7.648254,9.902248,6.393501,-4.023950,1.930392,2.125753,-1.488728,2.749434,-9.191562,-7.236863,3.242995,5.428800,0.743409,-8.639094,-9.949959,-8.919992,2.637620,3.971274,0.873481,-9.129241,5.879431,6.191439,7.164012,6.665529,-3.681399,-9.341191,-7.156751,-1.166084,9.958505,9.157934,0.502681,7.333213,-1.091550,9.960767,-8.366748,-5.223388,8.108154],[-4.748648,1.666754,-8.629097,3.082040,1.745345,-0.171481,-4.540283,-6.001993,2.371710,7.281515,-5.083690,-4.632098,6.502720,3.096362,-6.107566,-4.418886,6.500183,-9.120283,1.958944,0.785656,6.991389,5.718066,2.287182,-8.400319,0.403022,2.014771,9.768372,-1.807544,0.022628,-9.916977,-4.254578,-7.388133,-4.119667,-3.002996,-5.013030,3.383747,8.007999,4.577970,-0.473963,-0.610258,-7.372991,-3.934678,2.476959,-6.571612,-5.366636,-1.644964,5.663296,2.218926,4.221836,-2.241864,9.991111,3.311311,-8.946984,3.176990,-1.316998,-4.106071,-1.387195,-9.805475,4.599040,-4.862203,-0.949219,2.008572,6.587839,8.375527,-9.940803,-2.935670,6.120600,-5.934221,9.638706,5.838573,3.043318,-9.572564,-9.056266,1.005922,6.602741,2.510540,-2.422065,-2.885182,8.475875,-5.490291,0.054308,6.945183,9.286123,-3.907109,-3.175517,-2.171022,3.829406,6.023947,-2.616393,-0.853841,-6.606815,4.919164,-2.551939,-9.716209,3.545233,2.152247,9.948349,-5.850587,-5.093886,7.831904,-0.555542,6.026153,-4.511587,5.103101,1.838570,5.038397,4.284816,6.524831,-3.809088,-2.904483],[-2.135975,-2.490675,-3.451819,-7.653135,1.637199,4.036834,-5.750395,5.020154,8.099071,3.319017,-4.166343,-4.604891,8.630717,1.229698,7.924931,7.506105,0.211674,-6.698268,-4.948347,0.024397,-0.544118,5.818797,2.068600,-1.264273,0.750450,2.145700,-9.297283,-8.594065,7.736303,9.174703,5.821427,5.909801,-0.370558,-9.973811,-6.333021,-6.925887,2.645900,1.222573,-0.451623,0.089239,8.429789,-8.440879,8.604739,9.642184,-1.349071,3.624207,-8.440716,2.080633,-3.722455,2.084697,7.069931,-2.994313,-4.480643,3.064344,6.742079,-2.762084,8.254770,-2.125194,6.369335,-3.362188,-1.760376,5.484703,-1.076370,4.230527,2.784473,0.477311,-0.184817,8.748298,-9.012371,0.107389,3.428836,-5.863439,-5.022225,0.246240,5.154977,-2.990575,-4.920438,-6.770093,-9.145883,6.722812,-0.316433,-0.438738,-0.011284,2.725350,-0.650495,-6.472650,8.906033,-8.367999,3.491701,1.676532,3.653480,-6.875948,-0.680714,-5.605058,-6.991919,-5.769398,0.813973,0.656180,-0.125666,-2.727071,-6.094679,-7.212503,5.275620,9.580089,7.964935,8.860201,-7.952425,-5.231583,-6.715214,2.686411],[-0.752557,-5.736220,-7.966179,-9.151632,-7.088657,3.581048,0.510813,-9.278213,1.237954,-9.734502,8.058482,1.481652,1.106893,-3.891064,9.562491,6.289252,8.597873,1.958664,6.613206,-7.228257,-7.660370,-7.479599,4.024971,-5.893742,3.493385,7.252688,1.376958,-6.907409,-8.856470,-6.194294,8.221745,-8.035825,5.168316,-7.464590,7.924639,4.944742,9.288558,9.536635,-3.300155,3.223435,-0.859168,-1.879707,9.028817,1.497455,0.820380,0.984624,9.195399,1.939033,6.265667,9.304667,-3.812049,-8.233674,4.968061,1.085039,-6.961765,6.663883,5.548319,-9.210231,-5.397399,7.879043,3.433770,-9.590158,-7.973543,-4.778075,-2.599176,-9.646732,-4.495726,-9.034675,-3.654115,7.692718,-3.686401,-4.583124,3.845076,-6.243458,-1.075279,2.712896,1.134426,-6.092702,-0.505505,7.010672,-2.522389,9.136917,6.188363,-0.117615,7.949254,-8.505043,-7.294332,-8.906907,2.525433,-8.928667,-0.832792,6.076383,6.234813,0.173389,-1.341127,-2.913225,-7.376517,5.759971,1.974371,8.508714,-7.440754,-2.276326,-8.093424,-3.467734,-7.523950,7.346027,-4.020699,-9.518012,-1.232690,1.215614],[-4.113840,-7.583472,-5.369040,-3.710373,0.587103,-7.012292,1.625645,6.693471,9.557655,5.942305,-0.701255,-4.077521,-2.600438,-5.515764,-5.850199,2.920533,-1.440076,3.961187,-9.357741,-1.934167,-4.600571,1.939365,-0.612400,6.685171,-9.701443,8.283493,-0.300932,4.169732,-7.537166,7.024165,-3.983556,8.408092,-1.469351,6.308423,0.259409,8.743754,-0.984025,8.531946,3.549904,8.886898,-5.261938,-9.700421,-1.912465,0.825198,7.611731,-3.469797,1.376244,-8.608569,-3.568675,-0.684462,-0.380616,1.270211,-2.887640,7.136158,-5.387862,7.119703,6.512626,5.262708,-6.907433,-8.870289,7.191320,5.099189,-8.200587,5.712486,6.496793,-2.328559,9.908488,-0.866345,1.287067,8.344021,-1.096169,-4.184040,-9.087213,-8.788363,-8.384778,-7.324033,5.667469,-2.839277,-0.874465,-5.955618,-7.457115,7.988205,1.950011,7.303531,7.689501,-3.950799,-9.321028,6.560688,-8.861086,9.447730,-8.195067,-6.895487,0.557763,4.973720,-4.498428,3.775481,8.506688,-3.101039,-0.304371,3.744230,-0.163467,-9.270093,-9.501731,6.095350,8.480168,1.285905,6.410127,9.861600,-2.521959,-7.262854],[-8.349015,7.173648,-7.941981,-7.015506,-8.445691,-1.662329,3.466803,1.174689,-7.689548,-9.692500,5.836613,0.160263,-9.233662,8.520711,4.592921,6.573719,5.288575,2.622057,7.415849,-1.490969,4.144133,-8.961603,4.907578,-0.075793,6.791278,8.479090,-4.420379,7.697326,3.330324,-9.290058,-2.210168,2.321972,-7.814745,2.591701,-9.941407,5.326111,-4.197980,2.306542,4.640064,7.929583,-7.581211,0.642619,8.704269,1.582393,1.670150,7.179442,-8.778827,2.699789,-9.349455,-7.440186,3.058736,-5.826958,0.126982,9.507986,-4.752353,4.882564,-6.398899,7.818463,8.457681,-8.611939,-8.403257,-9.030589,-8.640085,-2.857542,-0.756511,-5.280993,-7.363858,2.106473,-7.422486,6.029423,8.929298,0.924351,7.150443,0.264489,-9.337907,-9.233856,-0.446450,2.809658,-8.279755,1.173773,-1.956092,-6.809621,-3.876443,-9.967505,9.668915,2.854838,2.918134,-0.782349,-6.867483,0.139359,2.359220,5.913359,3.753068,4.321197,-7.390128,-6.321017,-1.225483,-6.882225,8.503728,8.157935,-8.381163,0.053277,4.661242,-8.511733,-4.968770,-1.649935,8.206879,5.951503,-9.659278,6.129988],[9.081542,5.457432,-8.265845,-8.407276,7.503397,-8.032909,4.954411,6.454136,8.104638,-3.923229,7.274046,-5.574811,-1.911678,9.174726,-6.970002,-8.159025,4.601919,5.677183,7.681519,5.548668,8.023652,-2.493262,6.605359,8.245195,5.425799,-2.866754,3.593700,-3.272910,-0.209297,-6.880013,-3.070198,-7.573238,9.905005,7.650850,-2.526231,1.953322,7.411198,-0.817790,5.155007,9.697821,9.982955,5.362771,-3.035633,-0.791610,-0.597008,0.051679,2.087493,-6.810753,8.458891,2.212121,-3.876891,1.598820,-6.978899,-6.632173,-5.958142,1.550017,-7.749888,-0.531731,-4.762839,8.074355,6.571271,1.372835,9.634161,0.724391,3.205762,-7.422333,8.380663,3.507197,3.450375,3.135951,-8.957210,0.158645,-8.972976,7.958758,-8.966035,7.098980,-6.693972,2.614204,-4.873884,-5.804220,8.212323,7.320567,6.208621,4.557970,-7.014194,-8.896448,7.340650,9.094801,7.573416,-1.354058,-1.720726,4.578532,-2.419151,-1.906711,-7.796248,-5.882693,2.168593,-3.786423,4.432222,8.820981,7.781136,-3.132403,2.515000,-2.339081,-4.107858,-3.351110,-3.042254,2.599312,-8.574129,0.552160],[3.279349,4.798492,1.625731,9.328991,4.804379,-5.083737,-2.982842,6.521315,4.345013,-4.801526,-1.209512,-8.220769,-8.697145,2.465893,4.125441,0.723225,-4.210975,8.156734,8.433024,-3.753899,0.031500,0.339068,7.434434,4.505831,-5.327493,3.243238,-4.605150,8.534542,7.798627,-7.892007,6.413783,7.562344,-4.162210,6.923173,0.435159,-4.444946,-0.320341,-9.770040,-8.006398,-2.962112,8.452909,2.427701,1.743034,7.696103,5.978535,1.120651,0.295087,-4.399787,9.383264,9.685391,-0.769402,9.474293,1.926372,-5.610267,6.555090,-5.913628,-9.054638,6.846758,-8.124059,3.203511,-7.110212,-9.724111,0.117557,8.624205,-2.805843,-6.687683,-0.845256,-2.848825,3.033565,1.169198,1.731928,-4.720393,0.384967,-3.499864,-1.424540,3.044477,-9.918207,-8.367309,-2.574804,7.316661,4.346174,7.963288,1.950341,1.613715,8.934136,-0.422135,6.235467,-8.278887,-5.068784,-6.133747,-4.124886,2.610529,-2.556635,7.319954,2.827388,4.911251,-6.682029,-9.435846,-1.951971,-6.260063,-4.759741,5.968471,8.213263,-7.019180,-5.650275,-9.962328,-3.528251,7.718689,-5.371780,3.467498],[7.275012,-2.957701,-4.179163,-8.004170,-8.629376,-4.257381,1.936846,-7.256114,1.103063,-9.350420,-5.879942,2.851270,-4.721083,3.734645,6.344389,-3.792098,8.032095,-3.676990,6.317322,5.911276,3.818823,-6.353943,2.468912,-0.917920,0.014249,-8.695415,7.031421,-8.531231,-1.300403,-2.140357,-4.082662,4.297112,8.647649,8.788859,-0.215668,9.157983,-3.648796,-3.753828,-3.765387,0.331058,0.192949,9.706617,5.954056,-8.223240,8.817947,2.549185,3.659899,-3.800070,-1.766202,1.619996,-8.361399,-0.096601,-8.617261,-2.583327,0.450908,-9.834012,6.355689,-3.390092,4.909504,-7.920023,2.073438,-1.134963,-7.734130,-1.814691,3.402655,9.949060,-5.005973,-3.459712,-6.786584,7.888686,-8.478114,-2.771318,-8.195027,-2.687603,8.481801,-9.734800,-9.038794,4.036055,6.105118,8.326463,4.870572,-6.487043,1.308777,-9.704750,9.974838,2.672071,5.676894,0.427192,-4.937771,4.892694,5.895364,2.070200,3.911144,-3.750394,-1.069836,9.915091,7.805959,9.198156,-9.135392,-8.217129,7.603721,-2.140951,-8.985107,-5.598831,9.795755,-3.577370,-3.479804,9.788566,6.049041,-0.817817],[9.043816,7.742878,-6.545755,4.076871,1.483621,-7.746387,-8.526867,8.770878,5.124973,5.526267,-7.269341,0.079559,0.873641,-9.228303,-3.926370,-8.399454,-0.784846,-7.067749,-7.640904,2.167827,-0.470942,6.490257,-9.086200,4.977098,-7.478213,3.574645,-8.867876,9.835153,8.115172,-0.103698,4.610217,2.009203,4.809771,-6.111719,-3.139096,5.787343,1.306728,6.776355,7.059929,8.823806,7.823373,-2.911637,3.473465,-1.074654,4.227199,8.668630,8.109065,-2.585721,-5.743278,2.111957,9.718374,3.932805,4.679073,-0.788294,9.657018,-1.896423,-9.992748,2.742607,4.679992,-4.031888,-6.056128,9.453751,5.572001,-7.145264,-1.958279,-2.067334,-4.473504,-9.506952,-1.844967,9.597381,0.271524,-0.483724,-5.265779,0.096690,2.761037,4.712219,7.965742,-4.662729,-4.953829,6.494147,-2.932033,-8.189686,8.629380,-7.669550,-7.280737,-4.204921,9.894836,2.431202,-8.201439,8.689226,8.403995,8.555257,9.163647,4.000031,2.767569,-0.163156,-7.576813,-0.467844,-9.432033,9.110808,-2.640367,-0.272135,-4.865386,-7.055343,-3.852753,7.433042,-1.009720,1.049339,-2.349318,7.558033],[0.697318,6.596323,2.834861,5.465551,-4.613623,-9.452859,-2.469719,-3.108506,-6.844705,8.063591,8.710259,-7.763116,-6.323355,7.144181,-8.460247,-0.471010,6.441118,8.422219,8.199936,-2.337808,4.264482,5.670271,4.477969,3.140201,-7.847755,-8.183192,0.629481,8.442122,-5.948292,-4.155822,6.077853,-8.990266,-1.280857,9.413012,6.339063,6.507365,-4.666805,-2.291133,-7.497633,-0.354499,2.364255,-1.463933,0.944026,-3.141447,7.964065,1.544849,0.178892,1.487272,7.392276,9.303696,-7.572981,-4.963582,7.786316,-4.947792,-7.632573,-1.775087,1.552870,-2.860952,-6.571448,9.548188,6.626751,9.486071,-6.757290,-5.135816,6.875272,-5.122957,-4.435301,9.024116,-5.590916,7.931406,-7.930738,-4.379963,0.225568,-3.126799,1.013716,4.135212,-3.850914,8.912366,8.842423,1.859764,5.672873,-0.049872,-6.598464,-5.372002,8.907844,9.564853,9.990173,9.891274,-9.977144,0.320266,7.045700,-7.792272,8.111286,9.171387,8.721786,1.608641,-7.230520,-5.121460,2.168031,8.311435,-2.469448,-0.870218,-4.594846,-1.873421,-8.084585,-9.624795,-9.658795,9.639442,-3.742931,-4.005769]], dtype = "float32")#candidate|10935|(11, 110)|const|float32
call_10934 = relay.TupleGetItem(func_8234_call(relay.reshape(const_10935.astype('float32'), [11, 110])), 2)
call_10936 = relay.TupleGetItem(func_8236_call(relay.reshape(const_10935.astype('float32'), [11, 110])), 2)
output = relay.Tuple([bop_10926,call_10931,call_10934,const_10935,])
output2 = relay.Tuple([bop_10929,call_10932,call_10936,const_10935,])
func_10949 = relay.Function([], output)
mod['func_10949'] = func_10949
mod = relay.transform.InferType()(mod)
mutated_mod['func_10949'] = func_10949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10949_call = mutated_mod.get_global_var('func_10949')
call_10950 = func_10949_call()
output = call_10950
func_10951 = relay.Function([], output)
mutated_mod['func_10951'] = func_10951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_10968 = relay.TupleGetItem(func_4625_call(), 1)
call_10969 = relay.TupleGetItem(func_4626_call(), 1)
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_10972 = relay.TupleGetItem(func_6376_call(), 0)
call_10973 = relay.TupleGetItem(func_6378_call(), 0)
output = relay.Tuple([call_10968,call_10972,])
output2 = relay.Tuple([call_10969,call_10973,])
func_10991 = relay.Function([], output)
mod['func_10991'] = func_10991
mod = relay.transform.InferType()(mod)
output = func_10991()
func_10992 = relay.Function([], output)
mutated_mod['func_10992'] = func_10992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mod.get_global_var('func_6073')
func_6075_call = mutated_mod.get_global_var('func_6075')
call_11044 = relay.TupleGetItem(func_6073_call(), 0)
call_11045 = relay.TupleGetItem(func_6075_call(), 0)
func_4766_call = mod.get_global_var('func_4766')
func_4768_call = mutated_mod.get_global_var('func_4768')
call_11074 = relay.TupleGetItem(func_4766_call(relay.reshape(call_11044.astype('bool'), [12, 9, 15])), 0)
call_11075 = relay.TupleGetItem(func_4768_call(relay.reshape(call_11044.astype('bool'), [12, 9, 15])), 0)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
const_11088 = relay.const([-5.457058,-4.353096,-9.514258,-3.208815,9.987572,-2.190993,6.262118,-4.223914,0.976170,-6.190835,-9.512612,-3.380651,-5.042835,2.092691,5.970233,-1.254764,-2.616803,3.654159,-6.691666,-5.176402,2.542462,6.354183,9.774893,2.493098,8.515349,-1.577402,1.345993,8.056404,8.107717,-0.404769,-7.284246,2.251875,0.424908,8.101764,-5.208623,-6.089477,4.069479,-9.421173,4.007346,2.221711,4.034250,-7.353947,-3.315698,-2.224641,-3.974364,-8.896129,6.280200,6.304727,-1.279311,-4.757438,-4.929844,9.766986,-0.740999,-5.307869,5.738027,8.467980,-0.032360,-2.423433,5.276196,-6.077112,9.626635,-4.067938,-0.236376,0.298864,0.283216,9.604517,-8.648663,4.608205,-4.814023,-1.632206,1.239336,-1.938776,2.511725,-8.243969,7.980919,-6.554249,8.455575,-3.513916,-0.602090,8.276799,5.525792,4.512444,0.743052,3.306883,4.812451,1.814663,3.940884,-2.121962,-3.802426,6.730169,6.439025,-0.904059,5.979533,1.275757,7.214415,7.402390,6.943748,-4.724371,4.569426,1.760018,-5.604681,2.971349,-2.962212,-0.904363,-2.863049,8.991827,-4.758112,-0.289019,-7.604383,7.527809,-7.304361,-4.263821,-7.282067,-1.844306,-3.020448,-0.964172,4.324076,-9.160059,6.777540,-8.177090,9.427099,7.230765,-7.171782,0.298316,8.704117,-9.163387,6.340182,-5.276622,3.918626,8.485530,-7.469999,-7.962482,8.306836,7.342897,-4.956833,-3.733033,0.108393,9.809551,0.673237,-1.345393,5.505579,2.937677,-5.840577,-5.857231,-9.717430,3.400576,6.934488,-9.680984,4.512533,1.228881,-5.815015,6.955915,-8.522774,0.659466,7.750574,-5.110207,-0.139934,0.230865,3.619425,-4.640708,1.359606,-2.668425,-5.776876,9.154791,8.599064,5.860877,-6.666106,6.354863,2.174027,-2.683050,3.116101,6.038888,-4.665113,-6.012913,1.986475,-9.213038,-3.905304,0.937545,8.313305,-8.885247,-6.695443,-7.814732,-9.702837,4.545140,-1.408180,-2.385068,-0.057436,8.754194,-9.988974,4.110395,3.694869,-4.118417,-4.939119,-0.210324,-4.626544,-8.213050,-1.111351,9.988913,9.239220,-2.341574,4.434141,5.489338,-6.838601,-7.680660,-0.672341,-2.597996,9.743236,1.101762,2.240106,-8.587553,8.131540,-8.502343,8.211566,-1.910361,-8.416824,3.517854,-9.047704,3.569261,9.844072,5.561727,1.265202,4.937951,4.691698,0.964252,-5.572094,-9.897799,-2.136012,6.888232,4.004351,-6.733285,-4.631567,3.702544,-1.618473,-3.916220,-2.561763,2.385172,6.147272,4.083638,-9.389583,3.697054,-1.585202,-9.580194,-6.349936,-3.628843,3.103484,3.457051,-3.861309,-9.912267,-0.770484,1.034393,8.217130,-8.557007,9.891413,7.490685,-9.603417,5.006069,-3.786388,-9.388752,9.767122,-4.692614,5.156479,6.921485,-8.320784,4.804514,-2.720414,-3.690912,9.776717,-2.760503,-0.404884,-8.386048,0.845673,6.225932,7.572199,-9.062749,-8.234569,-7.891445,8.513113,-3.517704,2.549943,-2.623629,-8.772216,9.179170,9.701891,-4.394041,6.643081,8.622896,-0.752669,4.422546,-0.037763,8.956527,-0.904290,-8.167917,0.150519,-6.125160,-1.297356,-2.890837,3.264339,1.408456,0.782849,-5.830580,-2.015889,4.211962,-0.944748,8.936941,9.673007,6.019297,-8.029574,7.923926,-9.701590,-7.078509,-8.177372,2.536058,7.948117,-6.759546,0.789465,8.580335,-3.735556,-1.282714,6.653518,0.819068,-9.799997,5.233782,9.443070,-1.942253,-8.500955,-6.085817,4.638461,-7.390905,-2.909510,-7.119430,7.405070,-7.452636,-3.678919,-1.214154,-7.022617,-3.865021,-9.431745,4.621443,-4.812196,-2.897591,-9.690216,0.064643,-6.155473,-0.285637,8.987768,-9.132289,3.351577,-1.555506,-8.701372,2.851111,0.909093,5.553885,1.871350,0.746780,0.300034,-4.484735,-4.516514,0.377587,7.316227,-2.139968,-7.133067,5.907624,4.879846,-7.927560,-8.080713,-7.104604,5.050633,-4.667913,-4.819476,9.721969,1.301565,1.883569,6.267153,-0.296255,5.940392,7.964521,-2.518291,7.962523,9.847608,0.955666,7.642517,4.029121,7.633859,-5.272122,6.098073,2.881888,9.511370,-3.512713,-6.614301,-3.427934,6.536925,3.038287,-7.120450,3.760056,-5.029718,-1.003535,-8.488680,5.632694,3.282362,5.957925,2.218817,7.505575,-6.257319,0.858264,-4.272934,-2.989087,-7.269870,9.500100,-5.688268,-1.670708,9.024375,-3.164426,-6.032332,-0.265459,5.082716,-1.252344,-7.270829,-0.355950,7.885652,3.465760,6.869283,-4.190562,-0.850878,-1.661006,-4.097296,2.655994,8.624039,-2.679800,9.359196,1.907550,-6.523508,0.373941,3.622721,4.801263,-7.607122,6.746354,-2.693816,8.526223,0.675871,9.936408,-4.739116,-7.161766,1.638773,9.255855,2.986368,0.183641,-6.345141,-0.022302,-1.561638,-2.331875,4.573631,-8.653995,0.374312,-0.921327,-0.785457,7.159184,-7.063761,-2.074017,-6.459611,2.902547,0.077941,4.239659,3.539009,6.033321,-2.188615,-2.362351,2.777144,3.379732,-4.165888,-6.945903,-1.582381,1.060001,3.942677,-9.023566,7.411438,8.432298,-5.706630,-0.216711,-0.577235,-7.988924,-2.166317,-5.865498,1.061996,-1.638063,7.968198,-0.348902,-6.379704,6.223859,-4.046835,4.711844,0.370397,-3.261264,-2.748979,6.569987,-5.141473,2.383396,0.903312,1.666227,3.920253,-8.002084,-9.480600,-6.490792,0.798924,-8.397183,9.612357,7.841316,-3.548513,7.919588,6.521851,5.849252,-2.137125,-1.762067,4.143399,-9.229392,7.220132,1.677303,-9.543906,9.306505,4.902706,7.709772,9.038260,0.647863,-5.233316,-3.313910,-1.056905,7.274241,-8.407411,-3.567243,6.796639,3.690502,4.083724,-0.044046,-9.217446,5.412705,0.529412,1.230555,-0.054804,-7.716493,3.784843,-7.138686,9.619121,-7.199886,4.099051,2.604199,5.972242,0.725699,5.509259,-6.951841,1.551451,-6.593874,-6.101780,-9.363835,-3.717989,3.315484,3.991778,7.573939,-6.031573,5.996038,-7.408404,-4.496056,3.028022,3.844215,-5.413615,-0.644775,3.490177,-4.201853,-4.829101,-8.833429,-3.609857,-9.109819,7.416928,-7.701225,1.852426,8.321326,-4.147718,-5.442879,-4.117943,-9.196221,8.938467,-7.767757,0.701316,5.137585,3.747379,5.090514,6.106861,-8.488723,1.341215,-6.136805,-6.848830,8.891588,-2.217381,-2.633276,2.723189,9.770236,3.133618,5.002732,-3.017722,9.682553,3.497421,8.824083,-1.473973,2.931984,-7.381768,3.483680,-4.217968,1.431070,-8.004224,5.752111,9.757248,-6.739649,-3.457762,0.800229,-6.221418,3.562034,9.102180,1.298605,-2.809756,-6.940772,-8.545908,2.089278,-6.078984,3.547240,-1.714803,-9.415757,5.763212,-4.478319,-7.314971,6.662586,-6.603177,-2.976068,4.795161,-6.397579,9.267051,4.121047,-5.923152,-3.081944,9.565356,3.210021,-4.824594,1.769719,-9.138099,2.106174,-5.673756,-4.521470,9.142523,-0.242038,-7.995742,-9.120174,4.405143,2.242199,-4.610551,-1.226541,-2.835221,4.023034,6.652428,-1.310367,7.999806,5.914113,-4.572943,-2.955957,-2.997529,5.283674,3.008687,-4.225347,1.456323,-7.233656,7.296169,1.999526,-2.935091,-5.675118,-6.801324,-5.280040,7.102098,8.843924,1.351178,1.613093,-4.410487,-5.232283,8.526413,2.464881,-1.342010,-8.251339,-3.311858,4.536267,1.533307,7.836047,1.495786,9.917353,1.698434,-4.851185,-9.931026,-7.732798,-5.970842,5.325903,-9.664061,-7.553591,-9.801916,-5.139591,0.730613,-5.980794,-4.768076,-1.378062,3.503075,-1.652240,-6.229991,2.927012,-3.650564,7.091125,-6.164517,-5.981365,0.696261,9.835766,-1.946991,2.704531,-6.024619,-2.808104,5.811679,-5.508938,-3.208514,6.013460,6.196798,0.355522,-9.689458,3.575430,7.269154,7.254460,-8.501283,5.454031,6.434364,-6.738853,-7.008675,-6.072070,6.071578,-8.883593,3.796625,-1.820277,-1.794373,-6.453044,8.087504,3.400474,-3.187506,6.159393,6.898850,4.663540,4.944794,-0.879126,-8.684540,5.030466,2.975066,1.478401,1.446701,-8.853104,6.049266,6.144031,-7.320466,-9.629174,7.543652,8.680080,-1.579961,1.059085,4.629699,0.906574,-7.435723,8.366577,-8.389106,-1.711809,0.568262,4.782225,-0.215922,0.001553,1.591953,2.306139,8.942903,5.237542,2.989785,-3.068101,6.249951,-9.958614,-5.002181,9.690135,-1.411356,7.762687,-9.745148,-9.536972,2.298537,3.414393,2.211763,5.900836,-1.942680,-2.469857,-5.355856,-6.836106,-7.398533,2.304277,-6.773364,9.276970,5.458890,-9.260309,6.728309,-1.287442,-3.464008,6.461545,-0.522037,9.954903,-5.518962,-1.517857,-2.692848,-7.565290,3.238737,0.172340,-3.942182,-2.105356,7.597393,-2.360653,0.036079,4.296210,-9.158299,-9.136829,-5.682629,0.133362,7.638617,9.643349,-4.307222,9.744281,8.388474,-0.569023,8.770211,1.916304,7.290984,-1.805438,-6.228615,6.838006,-2.719987,9.529188,8.833041,8.604963,-2.893813,-1.879258,-2.796141,-4.706302,-3.207148,-9.903956,7.730688,6.611406,2.042875,-3.329503,2.895251,-1.459209,9.621721,-2.352072,1.170371,5.733180,-1.056214,-0.846878,4.100325,7.932675,3.619251,-4.444306,3.181801,-6.675569,7.602551,9.218100,-3.073381,-9.628343,2.022307,-8.711645,4.715523,3.797355,8.226434,-5.076498,-3.680595,-8.292112,8.337945,3.918849,-4.399982,4.090661,-5.249581,5.271532,3.293992,-6.115087,-8.481226,6.522835,-6.924033,-7.271358,-3.482615,4.621067,-0.313163,8.500835,-1.619162,-9.869355,-0.087520,-6.863976,-3.308677,2.026155,2.563252,2.017028,-1.721406,2.017772,6.305624,-7.006918,8.313818,-0.931092,2.049736,5.725956,-5.384088,5.648296,-5.642660,6.373511,5.314575,-6.799210,-7.661511,-8.192902,-2.901119,-6.096339,3.623890,8.695177,-2.973402,-8.491723,5.722694,0.763310,-5.075561,-3.671982,-6.342268,4.308671,-9.165913,-8.177310,2.061940,1.351268,0.928495,2.971917,-7.366320,9.482917,3.136414,1.177920,5.411514,-4.976820,5.083646,-0.194603,3.189759,8.390005,3.770799,-5.754652,-6.125341,-4.710370,3.898771,8.374999,4.320893,-7.420646,-2.725079,0.824873,-2.061833,4.525129,2.356566,6.370441,-0.424224,-0.953319,6.327711,-4.385681,9.241764,8.310501,6.383691,-9.757740,6.710733,8.338304,-9.200508,8.755864,-7.810402,-0.367825,4.020031,-5.507029,-2.461544,7.330134,-1.330481,-1.268349,9.947265,-9.366897,-3.970385,8.023556,-7.562696,8.651783,8.065291,3.790362,-1.698736,2.166150,-2.320868,8.923387,2.939622,-7.000467,-4.458458,4.946852,-3.998275,-1.931254,-5.381961,-3.997256,-2.345715,-0.241648,-4.932615,-1.380885,2.457810,-0.697231,7.957767,9.356249,2.957159,-6.217159,-7.874330,4.964331,-1.666148,8.635242,3.793450,9.273029,6.009949,4.737554,0.711093,-6.599830,-0.831691,-9.542914,-7.913697,-2.020144,8.501464,-9.192238,-5.627949,-3.281169,3.292281,6.359268,8.865396,4.110612,-4.741351,9.910580,-1.530635,0.189168,-6.704993,-4.494234,4.864635,-7.453609,-4.019677,-6.961614,-2.733660,3.008879,-7.593658,-6.708765,3.907084,-5.407785,5.118127,1.979561,-8.345924,-7.186345,7.267297,9.196414,6.996553,1.553772,-9.180203,-9.085856,4.941378,2.920668,-7.163524,8.899294,9.998397,-0.325743,4.382357,-9.906471,-9.026387,8.530905,2.144515,-4.864599,-0.956883,-6.755468,6.429613,-4.529272,-8.358377,-9.710195,5.308311,-9.111764,2.922569,9.040544,6.560778,-8.727020,-7.308565,3.976065,0.434834,-2.487559,4.781001,-0.133371,8.648255,7.379716,-0.156143,0.863406,-7.755019,-3.166520,-9.181481,-3.557276,5.088305,6.314393,-3.638401,-7.245236,-8.533452,-4.518892,2.054078,-7.500896,1.392872,7.230516,5.364839,1.368296,-9.342821,7.501418,-7.206191,-4.050161,7.238947,2.744592,-6.436960,7.253197,0.732627,5.800625,-9.161109,0.398517,2.916055,-1.396024,6.894578,-4.531283,9.679463,-9.726533,-1.343066,-8.959177,-7.614289,0.173323,6.830991,0.891610,-1.294375,0.092362,-8.574699,-1.475706,2.423564,-6.115576,6.537222,5.592744,6.425386,-7.073143,-5.091645,8.159021,-4.506685,-5.066277,2.763160,-4.069643,-5.553874,-0.003565,3.750644,-8.712071,9.757993,9.219817,-8.928676,-5.141597,9.774461,8.348337,7.012359,-6.337846,6.251154,2.456466,0.555512,1.841057,4.281147,-3.085874,-0.840662,-7.169498,-9.926417,-1.967143,-9.659474,-9.827523,5.337663,4.844698,-3.243318,2.733732,-1.538187,-2.881091,-3.222497,3.594898,2.783073,-6.406277,0.445895,-6.590551,8.782958,-9.032619,0.555794,1.772237,-7.751699,9.728274,-2.628722,-4.162635,2.160307,-1.406777,-2.839349,7.566596,-4.602647,-6.908102,-5.990506,7.913495,0.579800,3.915042,-5.270566,-1.563960,-5.952048,7.446511,-7.834804,1.712352,-7.465481,4.710350,-1.023493,-4.334132,5.175970,-5.558324,3.920252,4.889574], dtype = "float32")#candidate|11088|(1210,)|const|float32
call_11087 = relay.TupleGetItem(func_296_call(relay.reshape(const_11088.astype('float32'), [11, 10, 11])), 0)
call_11089 = relay.TupleGetItem(func_298_call(relay.reshape(const_11088.astype('float32'), [11, 10, 11])), 0)
func_6630_call = mod.get_global_var('func_6630')
func_6631_call = mutated_mod.get_global_var('func_6631')
call_11091 = relay.TupleGetItem(func_6630_call(), 0)
call_11092 = relay.TupleGetItem(func_6631_call(), 0)
uop_11098 = relay.sqrt(call_11087.astype('float64')) # shape=(11, 10, 11)
uop_11100 = relay.sqrt(call_11089.astype('float64')) # shape=(11, 10, 11)
output = relay.Tuple([call_11044,call_11074,const_11088,call_11091,uop_11098,])
output2 = relay.Tuple([call_11045,call_11075,const_11088,call_11092,uop_11100,])
func_11112 = relay.Function([], output)
mod['func_11112'] = func_11112
mod = relay.transform.InferType()(mod)
mutated_mod['func_11112'] = func_11112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11112_call = mutated_mod.get_global_var('func_11112')
call_11113 = func_11112_call()
output = call_11113
func_11114 = relay.Function([], output)
mutated_mod['func_11114'] = func_11114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9897_call = mod.get_global_var('func_9897')
func_9899_call = mutated_mod.get_global_var('func_9899')
call_11154 = func_9897_call()
call_11155 = func_9897_call()
func_6751_call = mod.get_global_var('func_6751')
func_6752_call = mutated_mod.get_global_var('func_6752')
call_11161 = relay.TupleGetItem(func_6751_call(), 0)
call_11162 = relay.TupleGetItem(func_6752_call(), 0)
output = relay.Tuple([call_11154,call_11161,])
output2 = relay.Tuple([call_11155,call_11162,])
func_11163 = relay.Function([], output)
mod['func_11163'] = func_11163
mod = relay.transform.InferType()(mod)
output = func_11163()
func_11164 = relay.Function([], output)
mutated_mod['func_11164'] = func_11164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9601_call = mod.get_global_var('func_9601')
func_9603_call = mutated_mod.get_global_var('func_9603')
call_11171 = relay.TupleGetItem(func_9601_call(), 2)
call_11172 = relay.TupleGetItem(func_9603_call(), 2)
output = call_11171
output2 = call_11172
func_11180 = relay.Function([], output)
mod['func_11180'] = func_11180
mod = relay.transform.InferType()(mod)
output = func_11180()
func_11181 = relay.Function([], output)
mutated_mod['func_11181'] = func_11181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_11182 = relay.TupleGetItem(func_4836_call(), 0)
call_11183 = relay.TupleGetItem(func_4838_call(), 0)
output = call_11182
output2 = call_11183
func_11194 = relay.Function([], output)
mod['func_11194'] = func_11194
mod = relay.transform.InferType()(mod)
output = func_11194()
func_11195 = relay.Function([], output)
mutated_mod['func_11195'] = func_11195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4907_call = mod.get_global_var('func_4907')
func_4908_call = mutated_mod.get_global_var('func_4908')
call_11252 = func_4907_call()
call_11253 = func_4907_call()
func_9673_call = mod.get_global_var('func_9673')
func_9675_call = mutated_mod.get_global_var('func_9675')
call_11256 = relay.TupleGetItem(func_9673_call(), 1)
call_11257 = relay.TupleGetItem(func_9675_call(), 1)
func_9558_call = mod.get_global_var('func_9558')
func_9560_call = mutated_mod.get_global_var('func_9560')
call_11268 = relay.TupleGetItem(func_9558_call(), 2)
call_11269 = relay.TupleGetItem(func_9560_call(), 2)
func_5643_call = mod.get_global_var('func_5643')
func_5646_call = mutated_mod.get_global_var('func_5646')
var_11272 = relay.var("var_11272", dtype = "bool", shape = (2112,))#candidate|11272|(2112,)|var|bool
const_11273 = relay.const([[5.193261,5.623026],[2.319946,-2.187452],[-5.614876,-2.015923],[-4.876046,-5.405607],[-3.471325,-1.700995],[-8.172997,-7.973752],[-5.906347,-9.081315],[3.418118,-6.266564],[-1.811317,-1.766206],[2.408951,-0.234543],[3.994333,-8.250223],[3.429852,3.093272],[6.212186,-3.486603],[8.469177,-9.914687],[-2.610315,-5.674337],[-4.426768,-2.353307],[-7.696231,3.707624],[7.942834,-7.673837],[-8.176150,1.090260],[5.960089,8.734592],[-2.655776,-4.101586],[2.533344,3.287478],[-7.811259,6.550060],[-6.626301,9.330258],[-9.506868,-9.097952],[-1.539898,-0.930697],[-6.069028,2.168062],[9.007869,-5.758130],[-8.895852,7.066369],[8.490001,-0.898949],[-7.343654,6.429544],[2.980612,8.295850],[4.279923,-0.126504],[-9.801779,-4.691569],[-4.209762,-5.043400],[4.922772,2.416868],[-0.686581,4.740182],[1.764627,2.179389],[0.037196,-3.715064],[3.396033,-4.439000],[-4.102599,2.535722],[2.568471,2.297918],[5.921227,1.709141],[-0.484718,-4.417242],[3.178940,8.006374],[4.913446,-0.605397],[1.930295,-3.942237],[6.106653,4.269588],[8.125306,-7.633840],[-4.002310,-7.606562],[-2.879025,-4.902754],[-0.029407,2.219207],[-7.981427,-2.444531],[0.103130,-5.474227],[7.657721,2.760988],[2.575898,-6.462320],[2.752794,-2.843688],[-1.471311,8.567978],[-2.736260,-0.811802],[1.822271,9.695661],[-7.745715,9.937008],[-0.167771,-6.833142],[-5.199803,-3.066055],[-8.797630,-2.575397],[-1.439864,4.434272],[4.075611,8.116448],[5.058875,-2.152818],[8.769016,-1.072081],[1.438587,8.323101],[-6.103907,-5.346173],[7.131743,-8.457961],[8.815129,-8.809977],[1.984081,3.305788],[-9.735221,8.750273],[-5.192384,-8.465435],[5.707862,1.753906],[5.948869,-0.496177],[-7.447753,-6.312129],[-0.790362,2.757010],[-4.637134,0.206541],[0.884212,-2.056422],[9.375491,5.489726],[-0.624515,3.081510],[7.404473,-7.273541],[5.023845,-9.933577],[4.857575,4.039503],[7.034146,-5.594791],[-8.380676,-0.790952],[-1.194939,-2.997705],[-9.089753,3.020231],[7.344021,-5.126681],[4.522598,9.726227],[1.638711,-7.074917],[2.535483,-6.047045],[-8.131567,-1.405472],[-8.091832,-1.105457],[3.305593,-3.300228],[5.565576,-5.119852],[-5.339559,8.813250],[-0.651097,-0.997909],[-6.590431,-1.227193],[7.703342,-4.523354],[7.471051,-1.441058],[8.941206,-8.967526],[3.012816,-8.864859],[-6.877674,-1.815540],[8.264837,-4.196903],[-3.405670,-2.581298],[3.091906,-8.532357],[3.687131,-6.285479],[5.959682,3.459353],[-4.426378,-7.952442],[-0.165742,-4.541500],[8.255518,-8.351205],[-8.749331,-9.441726],[5.426402,3.033985],[-0.002384,8.706067],[-9.318998,-8.253775],[5.280207,5.320462],[-6.045867,2.976834],[-9.079746,0.049577],[-0.214476,6.254005],[3.944242,-7.340084],[-3.899448,6.891623],[3.437444,-8.236757],[5.459153,-1.899359],[-6.814428,-4.850370],[8.271479,-7.640853],[7.761128,8.343705],[9.832369,-0.284480],[7.278237,0.043191],[-3.816937,-4.469712],[-9.147919,5.092647],[5.330053,-3.382989],[9.797312,-6.361681],[-0.789576,1.897847],[4.849608,-4.968576],[7.527940,9.124366],[7.459527,-2.145544],[4.345783,5.415895],[9.133555,6.118680],[-2.123915,4.507845],[-1.388095,-9.697652],[-0.561775,-0.908108],[0.353558,-6.839828],[4.588954,5.593844],[-0.823819,-7.920522],[-7.818802,6.661716],[7.045542,-2.174047],[-3.869194,8.989346],[-7.240486,-4.878040],[8.828040,-8.101141],[5.617245,8.280539],[-1.042834,5.830396],[-7.207706,-4.344787],[9.489502,2.761170],[3.659669,2.596717],[8.530594,-0.876784],[-1.582365,-9.690386],[-1.304494,-7.832350],[2.625042,-8.343083],[-4.889010,-9.415913],[-5.873821,7.934593],[1.586907,-7.617806],[7.752557,-0.043882],[-8.506985,-4.396169],[5.744162,4.919504],[0.136040,5.040343],[0.774171,-1.470051],[6.137104,2.671375],[1.478642,-7.645736],[5.792131,2.767529],[-5.879185,6.271604],[6.585289,1.096400],[-9.575062,-9.448781],[1.548816,-3.903011],[8.486388,-6.130910],[8.904836,-3.755519],[6.649420,3.835624],[5.088827,3.300698],[4.179524,6.587667],[-0.729563,3.210753],[6.290009,-1.144378],[-9.256719,6.879636],[5.403459,-1.302433],[0.932514,1.780459],[0.901166,3.428710],[-2.062845,-0.423208],[1.302720,-9.936638],[9.111292,-7.632425],[3.660264,6.584141],[3.181361,4.940094],[-6.699997,-4.442329],[3.396517,-8.277125],[-7.216944,4.920625],[-1.181273,-9.079727],[4.160673,7.920464],[4.415668,5.919279],[-8.435922,-3.703810],[-7.732229,-3.135325],[2.598131,-1.407504],[5.629116,-1.490926],[6.603217,-3.131767],[6.820405,7.896095],[4.727811,1.515408],[7.018643,2.799556],[0.520940,3.816890],[8.733495,9.721083],[-3.630134,0.989455],[-2.950461,-5.541192],[-1.135780,-6.700030],[4.315975,-6.921364],[-9.899029,3.909670],[7.646608,-8.861416],[-4.588508,-4.401475],[6.973388,6.940348],[1.563635,5.079141],[-3.425376,6.150396],[-6.048306,-1.617987],[-1.514601,-3.735744],[9.668825,-0.235469],[-3.640996,7.388190],[-2.041692,7.953702],[8.016537,-6.185537],[5.235110,6.788025],[8.262216,-3.321522],[-4.296691,1.680083],[-7.863297,3.922622],[-7.130727,-7.406733],[-1.388398,6.901689],[0.992773,3.522954],[7.997649,9.290472],[5.560372,-1.630378],[-3.503045,2.670425],[-5.259999,6.098328],[-3.965326,-1.147948],[-5.408386,-1.746723],[-6.030008,2.588451],[-7.173803,6.950139],[-7.788416,-0.990008],[0.722738,-6.785333],[-2.701074,-1.915536],[6.231643,3.699875],[-7.265631,-7.225251],[-2.936441,-9.325832],[-0.702280,-9.260046],[-9.589862,3.449526],[-8.875377,-6.828184],[-7.373189,2.982190],[-2.705402,2.393621],[8.800212,-2.247079],[-6.244505,-5.296969],[5.818226,-8.252853],[7.895516,-5.883860],[-4.905597,-9.292237],[6.169771,-9.224522],[-7.820704,-9.665334],[7.450229,-2.986839],[-4.726086,-2.375187],[1.975691,8.412214],[7.804094,-1.148839],[-9.610658,-3.632634],[-3.686422,-9.051801],[-7.055065,-9.360034],[-1.380114,0.472282],[-3.960711,8.983898],[-6.714727,-1.388043],[-1.391158,-4.900952],[2.010154,-1.380159],[5.531275,-9.807372],[-5.396863,-9.171285],[8.151846,6.922762],[6.895695,4.698720],[-2.939919,4.221169],[-0.115947,-4.487288],[2.486025,8.779373],[8.512145,4.528756],[-6.212598,2.184685],[-4.198532,9.908609],[-0.924798,0.117334],[-3.101529,3.958836],[8.227856,3.875366],[-6.263182,9.872637],[7.417445,-9.471390],[-5.793549,8.463940],[6.344691,3.804903],[-2.123340,0.609413],[0.970806,4.183887],[4.120804,-2.978155],[1.303819,1.790725],[8.088289,3.058307],[8.718561,-8.945191],[6.170258,-2.789446],[-5.590580,-3.392392],[1.937190,3.730344],[9.601563,-5.218629],[8.754296,4.367842],[-7.447077,8.398863],[6.980533,-5.636796],[-0.383917,0.368769],[9.474277,7.389915],[4.497938,-5.896918],[3.067487,-1.318563],[-8.696518,-1.153251],[0.258228,-9.269525],[-7.890870,-5.124700],[2.577144,-9.031702],[4.716419,4.661818],[2.043978,-5.517176],[9.796584,3.417795],[-6.153209,5.342681],[-2.598496,-7.851915],[0.422170,-2.383096],[-3.709196,-3.673819],[1.318535,-2.559432],[-3.335895,1.215646],[-9.044270,-1.382729],[6.918054,-8.940866],[0.350052,-3.170319],[1.483500,-2.422126],[-1.267221,-5.500695],[3.974237,-8.069978],[0.495860,7.910113],[-2.320945,-7.402563],[-9.524199,-1.057743],[-5.149092,2.884345],[-0.908465,-3.980596],[-9.310729,4.840521],[7.679056,-0.109044],[-2.735796,4.733809],[8.232198,7.456160],[-2.828300,-7.698731],[-0.689662,-8.659023],[7.579625,6.829732],[1.739010,-9.938743],[-3.117088,-9.903012],[0.806353,-8.446368],[7.395439,-2.873957],[-7.584547,9.661270],[1.639038,5.935228],[-9.050346,-9.174647],[7.114950,-0.773384],[3.098573,-8.697112],[-4.058909,6.835411],[0.461078,4.734274],[-4.844695,9.093540],[2.257231,1.811698],[-1.695391,-8.892274],[-3.996476,0.274674],[-3.249048,-4.919751],[-7.983795,9.370827],[-2.654242,-6.685687],[-3.175806,-6.440958],[8.466645,7.379378],[-6.849314,3.089028],[6.287152,-3.985248],[8.920692,1.072443],[3.698431,2.541550],[1.462341,-8.974022],[-4.456921,8.485969],[-1.763715,2.394877],[-7.939776,-9.926042],[4.758388,4.032914],[2.525364,-7.731551],[7.447936,6.459089],[0.062083,-6.322772],[4.576561,-1.776119],[-4.064546,0.759125],[-7.019945,-6.594944],[7.361381,3.536534],[3.744814,-3.105386],[-7.851907,4.793812],[-5.729772,-4.168295],[1.871136,-0.924470],[8.283939,-4.372175],[4.218431,-1.636531],[-0.379912,-1.545710],[4.638638,-6.061458],[-3.891026,-4.392935],[8.153684,2.419795],[-8.340620,-6.246531],[-1.563580,-8.385244],[4.548228,2.209675],[-2.394079,-5.892257],[0.934808,0.203339],[9.918947,0.772206],[-6.694050,-9.147499],[5.375887,7.613817],[-5.431638,7.970778],[8.774914,-3.958496],[7.360268,2.220903],[-3.313937,-9.693906],[-5.852925,-2.977217],[-0.210310,2.588164],[9.781593,-4.790170],[6.388019,-8.396787],[3.339668,0.114457],[-2.186776,-2.690326],[5.514162,7.144505],[0.981031,7.785774],[8.344604,7.350318],[6.309183,-9.190688],[1.626045,9.663886],[1.940320,-2.860945],[-1.939400,4.409749],[3.119080,-8.701435],[1.814561,-5.903593],[9.036800,-8.604205],[-5.412625,-4.053123],[-3.430126,-9.664279],[-5.397355,8.964218],[-8.850245,-9.780259],[9.102293,4.017755],[2.863841,5.388350],[4.769077,-4.865075],[-3.137109,-5.044756],[-5.125751,-4.162177],[5.030113,-8.166289],[3.858176,5.497325],[7.792366,-9.804209],[5.063778,-7.984773],[1.212723,5.013845],[5.717501,0.632585],[-9.210962,-7.208341],[4.019328,-1.656271],[-2.560928,-1.786839],[-0.870644,9.276614],[8.631151,-5.500483],[8.425200,-8.116644],[-1.990017,1.546257],[1.033414,8.545340],[-8.632184,-4.750325],[6.194468,9.001096],[-4.698081,6.324078],[4.208751,-2.401306],[-7.553029,-3.492055],[4.037481,-2.122228],[-4.127296,-9.624970],[-6.290199,-1.085064],[8.007006,-7.723741],[4.696152,-1.361548],[5.734764,-4.119720],[-5.787511,-7.388215],[2.178744,-9.265515],[1.151315,-0.235254],[0.363783,7.513922],[6.266927,-3.692192],[-6.009684,3.489732],[-6.421244,9.255877],[7.804738,3.169784],[5.692340,-4.689699],[-4.083913,8.603228],[9.763800,9.643142],[-2.422476,-9.682922],[-7.060536,8.762265],[-3.671110,-4.185688],[-9.875908,-6.345382],[6.127809,-7.228249],[0.378499,7.978906],[5.729648,2.770134],[6.768960,9.569213],[8.303732,0.939594],[9.915853,2.678916],[9.954741,-1.343125],[4.241973,9.713013],[-2.351079,7.026674],[-2.314826,6.334021],[-6.343395,-2.293578],[-5.398369,2.236689],[1.900900,4.476589],[9.983343,-2.553464],[6.707155,5.652674],[-0.479970,8.485155],[-5.971465,-4.780072],[-9.848413,-4.613442],[3.984714,-6.464495],[0.029412,7.195356],[-5.579039,6.303660],[8.201987,-8.435466],[-5.068135,-6.109353],[-0.313069,-7.433146],[-1.386561,5.837515],[-9.467225,2.078136],[-8.754182,4.772508],[-0.927732,-2.933199],[-6.252312,-0.512645],[-7.240627,-3.960959],[-1.355728,5.032574],[-4.921677,7.249637],[-3.979047,1.037529],[4.472715,-9.054083],[-4.818404,5.255059],[7.445889,5.399738],[3.280789,6.385013],[-5.742078,-2.110073],[-3.513947,6.341646],[8.649833,-7.146971],[8.682448,2.523913],[-5.270918,-7.776409],[5.525597,8.876964],[-7.227998,-1.481516],[1.611602,5.809847],[6.867728,-6.527454],[1.738655,2.395323],[6.355623,-8.442784],[4.756964,1.199464],[-5.665948,1.342260],[0.346566,-8.722776],[1.740410,4.434008],[-5.528420,6.913078],[-6.482617,-4.112521],[3.096348,8.018804],[3.425340,-3.705713],[2.687266,-1.732818],[9.110886,7.543099],[1.900780,-7.283705],[8.815399,2.716382],[-8.216885,9.112401],[-3.076037,-8.484412],[9.403349,-2.609786],[-7.377030,-2.867357],[-0.049668,5.150414],[-5.561265,-8.073147],[-3.512820,-7.474559],[-4.408056,5.393148],[-3.830013,-8.933073],[-8.194287,0.772559],[-2.671840,-5.571744],[-0.797493,-7.287374],[-3.882358,-4.828131],[-5.176283,-2.191998],[-0.012963,-3.984520],[-2.384290,6.127855],[6.913927,2.506599],[6.342717,6.209707],[7.983837,-4.385622],[-3.894251,-1.392940],[-1.067265,4.840407],[-5.315511,2.681765],[7.554673,6.383286],[5.092540,-9.251636],[-6.172107,4.579733],[-2.514613,2.935806],[-1.643502,6.313217],[-8.132451,3.487949],[3.541117,-8.713226],[-5.643037,-4.392048],[5.019606,6.014246],[-3.506710,0.605863],[-8.952341,-8.260778],[-5.482640,-1.046191],[9.499648,1.129180],[0.978415,-4.655142],[-4.864441,-7.862244],[-5.679917,-7.906733],[9.559382,7.302072],[2.020467,-3.361870],[8.793481,4.548979],[9.214080,-8.543162],[7.327058,-9.731547],[1.781483,1.001989],[0.593225,-9.379909],[-0.733053,-8.118814],[9.068432,-9.738251],[-9.157715,-3.070871],[2.329035,8.303409],[8.981990,-9.494808],[-4.436533,0.060654],[0.612868,8.445927],[4.287545,6.306934],[-5.543676,5.540601],[1.209308,-0.086254],[-9.778723,3.218328],[-2.458415,-9.843422],[-7.457418,8.676546],[-3.981025,-6.843114],[5.747069,-2.910649],[-7.815016,4.251251],[8.695054,-3.546986],[-1.733538,4.645976],[4.223929,-2.265608],[8.893738,7.471498],[0.581964,-9.079646],[5.777377,-0.280033],[-1.284755,2.556514],[-8.273967,5.881379],[0.588391,-4.819780],[4.686121,0.929580],[-7.203429,-5.488284],[-6.255278,7.066404],[-4.907193,0.636787],[6.783269,3.120337],[2.603639,-1.762922],[2.155342,0.418103],[2.688836,-7.979007],[5.939809,7.482603],[8.948588,-3.293923],[8.776745,-3.607148],[2.748365,1.972942],[1.660964,2.632256],[-9.236536,-6.244360],[7.317430,-9.357584],[5.528686,1.379718],[-5.619663,-1.246745],[9.065178,-1.683596]], dtype = "float32")#candidate|11273|(605, 2)|const|float32
call_11271 = relay.TupleGetItem(func_5643_call(relay.reshape(var_11272.astype('bool'), [22, 96]), relay.reshape(const_11273.astype('float32'), [1210,]), ), 3)
call_11274 = relay.TupleGetItem(func_5646_call(relay.reshape(var_11272.astype('bool'), [22, 96]), relay.reshape(const_11273.astype('float32'), [1210,]), ), 3)
output = relay.Tuple([call_11252,call_11256,call_11268,call_11271,var_11272,const_11273,])
output2 = relay.Tuple([call_11253,call_11257,call_11269,call_11274,var_11272,const_11273,])
func_11295 = relay.Function([var_11272,], output)
mod['func_11295'] = func_11295
mod = relay.transform.InferType()(mod)
mutated_mod['func_11295'] = func_11295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11296 = relay.var("var_11296", dtype = "bool", shape = (2112,))#candidate|11296|(2112,)|var|bool
func_11295_call = mutated_mod.get_global_var('func_11295')
call_11297 = func_11295_call(var_11296)
output = call_11297
func_11298 = relay.Function([var_11296], output)
mutated_mod['func_11298'] = func_11298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9601_call = mod.get_global_var('func_9601')
func_9603_call = mutated_mod.get_global_var('func_9603')
call_11317 = relay.TupleGetItem(func_9601_call(), 1)
call_11318 = relay.TupleGetItem(func_9603_call(), 1)
output = relay.Tuple([call_11317,])
output2 = relay.Tuple([call_11318,])
func_11321 = relay.Function([], output)
mod['func_11321'] = func_11321
mod = relay.transform.InferType()(mod)
mutated_mod['func_11321'] = func_11321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11321_call = mutated_mod.get_global_var('func_11321')
call_11322 = func_11321_call()
output = call_11322
func_11323 = relay.Function([], output)
mutated_mod['func_11323'] = func_11323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5567_call = mutated_mod.get_global_var('func_5567')
call_11411 = relay.TupleGetItem(func_5566_call(), 0)
call_11412 = relay.TupleGetItem(func_5567_call(), 0)
output = call_11411
output2 = call_11412
func_11416 = relay.Function([], output)
mod['func_11416'] = func_11416
mod = relay.transform.InferType()(mod)
mutated_mod['func_11416'] = func_11416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11416_call = mutated_mod.get_global_var('func_11416')
call_11417 = func_11416_call()
output = call_11417
func_11418 = relay.Function([], output)
mutated_mod['func_11418'] = func_11418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11456 = relay.var("var_11456", dtype = "float64", shape = (1, 8, 5))#candidate|11456|(1, 8, 5)|var|float64
uop_11457 = relay.acos(var_11456.astype('float64')) # shape=(1, 8, 5)
var_11461 = relay.var("var_11461", dtype = "float64", shape = (3, 8, 5))#candidate|11461|(3, 8, 5)|var|float64
bop_11462 = relay.floor_mod(uop_11457.astype('float64'), var_11461.astype('float64')) # shape=(3, 8, 5)
output = bop_11462
output2 = bop_11462
func_11466 = relay.Function([var_11456,var_11461,], output)
mod['func_11466'] = func_11466
mod = relay.transform.InferType()(mod)
var_11467 = relay.var("var_11467", dtype = "float64", shape = (1, 8, 5))#candidate|11467|(1, 8, 5)|var|float64
var_11468 = relay.var("var_11468", dtype = "float64", shape = (3, 8, 5))#candidate|11468|(3, 8, 5)|var|float64
output = func_11466(var_11467,var_11468,)
func_11469 = relay.Function([var_11467,var_11468,], output)
mutated_mod['func_11469'] = func_11469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5936_call = mod.get_global_var('func_5936')
func_5938_call = mutated_mod.get_global_var('func_5938')
call_11493 = relay.TupleGetItem(func_5936_call(), 0)
call_11494 = relay.TupleGetItem(func_5938_call(), 0)
func_1091_call = mod.get_global_var('func_1091')
func_1094_call = mutated_mod.get_global_var('func_1094')
const_11496 = relay.const([[-7.690193,4.698823,-5.856334,-4.455146,4.688923,4.969158,0.479483,2.617957,1.716923,4.067503,-6.801888,-6.105093,1.906738,-9.197740,0.450635,-3.913504,7.082880,-7.852144,-7.205545,-0.133055,3.229668,2.349832,-0.080344,-6.120584,1.676677,1.059043,7.476104,0.127133,4.789929,8.460848,0.738069,-1.120962,0.240448,-6.090771,3.076007,7.165107,8.770844,-6.431757,-2.390506,8.718953,-7.971452,3.717694,1.376071,-6.945980,-7.953193,3.167039,1.149836,-4.415972,9.655809,-3.034586,6.986565,3.612769,4.790661,-3.669690,-9.736629,9.328684,8.454767,-7.255747,-7.994166,1.837062,-7.867297,-3.245744,8.358850,0.500440,-5.872145,6.343056,5.133081,-1.461046,-6.549259,-7.475975,-2.941861,0.938948,-9.985173,-8.274830,1.888007,9.162915,6.490649,1.874934,-8.046184,3.322535,6.441765,1.987515,6.526069,3.102169,-5.005922,-9.467613,1.968993,-7.590716,4.434245,-6.040933,4.455196,2.924309,-1.470375,9.266112,6.997486,8.389475,2.899840,4.246044,-4.183943,9.370586,0.324827,1.016188,3.965539,-6.631036,8.593231,1.007540,1.913472,9.584934,-4.371774,-6.870444,6.122642,-5.828908,-8.457734,5.825950,-1.672586,-3.865183,-9.269233,-7.544553,7.980213,-2.986756,-2.214884,8.779779,-0.222409,0.995679,9.900762,-3.754964,0.053578,-6.793231,6.145537,-8.732452,-3.443229,7.241622,-6.259586,-9.652357,-2.386996,-0.453354,3.629818,-4.884354,-6.212156,-4.085283,-5.394996,-9.377053,2.429616,2.011257,-4.739981,-9.411960,-2.705695,6.242976,6.880374,3.799110,5.758206,-9.104235,6.976894,-5.196289,-6.877254,-6.284836,-9.608131,-8.248039,2.515410,-5.141362,0.286603,-6.943466,-2.334482,7.173736,6.067776,8.740627,-1.832458,7.926947,1.895433,-9.723953,-5.483809,-2.349909,0.368242,-9.177688,-8.897679,2.766933,4.364051,-6.511966,1.181189,-2.645091,-0.140534,2.545814,9.327815,-2.393234,9.957714,3.968996,7.798561,-2.248673,-9.731244,8.913916,5.466336,7.672281,-4.156074,-4.815961,8.128033,6.252386,-9.197883,-7.999384,6.871215,-4.130493,2.512430,4.019796,4.691571,-8.016587,-8.755511,1.125264,-2.542573,1.371619,-3.031572,-6.853391,-4.709096,5.503105,8.167105,-7.766043,-8.926136,9.145783,-5.461851,5.083825,-2.632816,-1.744435,0.794964,-2.918411,-5.500910,5.540827,5.702637,-9.605385,4.068143,-6.326001,8.065715,1.559213,-4.329443,-7.715814,9.643804,-2.575043,7.463863,6.095294,-4.810772,-1.199111,3.550463,2.634515,3.534141,-5.107316,6.961929,2.211302,7.266870,8.227380,3.615818,2.632101,4.479712,-8.533703,-7.182936,2.538789,9.811580,1.775795,4.988952,7.133302,-5.539060,2.032522,8.720760,-1.642490,-3.927405,-9.091640,1.211376,-0.579465,0.461530,5.696126,-5.020515,2.355209,-3.821199,-3.275464,2.837277,4.210017,0.372085,-6.584928,1.206847,-7.034443,-1.935922,-7.259377,-0.063952,-7.607195,6.413370,5.616133,-1.772769,-4.194942,4.051555,1.922154,-7.743118,-8.094784,9.881835,-7.691788,9.178187,-2.860383,5.161702,-7.054084,-1.825099,-4.659935,-4.339397,1.244120,-5.387424,-3.325868,3.437624,-2.871761,-9.066368,9.847134,2.902912,-3.968028,-5.515546,-7.133594,1.150832,9.215966,3.809857,-8.796982,4.460749,4.274554,7.304218,5.917053,8.793915,-9.585356,-9.954395,1.003429,-7.255135,4.895851,6.182079,-5.481844,-4.714588,-1.571269,8.073423,7.970777,-4.578295,-1.118307,-8.980686,-2.347881,-4.495331,6.769107,7.987445,-5.635472,5.292580,-6.100225,-9.452279,8.935285,3.773007,-1.695655,-7.078089,4.023401,-8.745954,-5.158689,-5.001127,-2.107911,-2.815094,0.037679,9.024080,0.864598,9.551079,3.031055,-4.237199,-9.209687,-5.734571,4.140451,6.283732,3.953015,-6.842865,-1.098762,4.927071,2.327605,4.429272,9.935021,3.105002,1.422648,-6.197542,-2.226149,1.563462,-1.362779,4.389833,6.908180,2.212065,3.971672,-6.317451,-6.158847,-3.824232,7.771209,-3.847884,-1.418565,0.158835,0.715512,-4.579375,8.519095,-5.219576,6.669084,5.386990,-8.947603,-3.182078,-7.206921,-5.256668,-5.231239,3.165680,-6.585899,-3.683995,3.951222,-0.075624,6.472226,-8.718842,-7.645648,8.818130,-5.300457,-0.576418,3.467921,-6.980120,-2.032250,-0.407463,-9.900947,-0.893363,0.551002,2.562145,1.000155,7.633826,0.263057,4.198655,0.049486,5.165372,8.885999,-4.900841,-9.811630,-1.046093,2.577777,5.882030,-8.389880,-8.291874,-3.270232,-5.170885,0.863038,8.648578,1.277930,9.069537,4.300395,8.200765,-9.860897,6.454385,-2.035253,6.718167,-9.920429,9.380846,7.970301,-6.239160,-8.081204,7.141971,5.752197,-9.069487,4.412122,7.666511,-0.485002,1.191387,-5.051253,-7.360677,-6.663835,9.270276,-6.969115,-2.417522,-2.679829,-4.451375,1.388412,8.565041,-7.376235,-8.782124,9.122511,-8.947736,-9.737506,-6.845495,-9.480464,4.975923,6.752801,7.205372,-9.375301,7.844396,-0.688781,3.967781,1.854945,-7.510488,-4.339158,0.381148,-7.852625,4.985702,7.421527,-4.154239,-8.308796,-4.114749,-6.500164,-4.642428,7.568425,3.014582,9.565644,-6.446676,7.143594,-2.955612,9.374352,1.559219,4.614274,-4.296909,2.933128,-3.446708,-6.573336,5.877001,-4.871709,3.176553,9.665462,9.525771,4.036848,4.591815,4.890982,-9.155722,6.559590,-3.787636,8.470557,1.874475,2.917205,-5.202579,-3.750551,-1.357910,3.303837,5.324168,9.716275,1.940399,-4.553330,5.010092,-3.604597,-0.930971,-9.661840,-8.563299,2.744942,-0.250182,3.861820,-9.905850,-2.557187,-2.398101,3.804126,-7.261981,5.624995,7.800185,-3.949901,6.476782,3.388517,-4.074179,-6.828923,7.090034,-0.732105,6.142223,-8.820251,8.017458,-9.745191,9.990185,9.998977,-0.925891,7.230889,-1.788195,3.381921,6.067769,0.706577,-3.852577,-0.896714,7.558036,4.198096,6.289345,1.574118,-4.423785,-9.882861,6.277488,3.166163,-3.317991,7.791502,-2.328045,-1.140020,5.274637,2.818956,-1.674255,0.748650,-6.304754,-8.701007,7.586077,-9.468519,4.807021,6.123761,1.841307,6.157068,3.179707,-5.092018,2.141604,5.486700,3.937770,-2.307219,0.357755,7.857233,-5.415934,2.436976,9.705139,0.457539,-4.106066,2.790317,8.697263,-3.081740,-5.218465,-7.013934,4.943384,-8.202548,-6.461529,-4.361814,9.351444,1.121711,0.200487,9.061150,-1.992994,-6.492965,9.599218,-3.479242,-8.199986,5.479042,-5.186182,-8.090842,-3.972586,-2.830186,2.022693,-7.142916,-1.406098,-7.437675,-8.365810,3.828685,-5.478109,1.721312,7.113230,-5.889079,-1.034272,-2.302740,1.424441,0.928526,-4.872496,-8.720615,-4.184246,-9.584384,-8.305833,1.265644,-5.388169,7.568254,-8.066706,-6.525883,1.620976,9.025444,-9.305582,-0.523749,-4.371875,4.215706,8.947391,-8.555527,-0.687628,-1.555204,2.167464,7.168219,-7.928107,-4.201131,-0.324286,9.539591,6.818253,4.338971,-0.851376,8.982205,9.824210,3.912743,-7.119454,5.926690,-4.279442,8.611212,1.257588,8.338966,1.745700,-9.620234,-2.855765,3.032282,-5.519246,-3.704362,-6.458684,9.959717,-0.689976,-4.112306,-6.498984,-9.082256,-6.790762,-8.938180,-7.322152,3.852449,1.992670,3.801258,5.642556,7.623051,-3.208284,5.199253,6.729641,-3.171477,7.414574,-9.622453,-3.141572,5.466177,-4.990566,-5.547162,8.842291,-2.005593,9.170890,4.312615,5.538050,-4.170267,-4.643820,-2.299916,-4.605069,5.452884,-5.285162,7.717034,-1.439037,9.915499,-7.628291,-1.272611,8.469032,-4.637664,-9.940431,-1.486534,-0.386167,2.985129,-9.131576,-5.174000,7.263526,-0.164637,0.802886,-9.344924,-3.968986,-6.236096,-8.452887,4.446495,-0.083702,-2.833001,0.668227,-4.064693,-8.518333,-9.558453,3.994992,0.925800,-1.026873,-9.102607,-1.159812,-9.836489,-0.772240,2.459426,8.085923,2.339738,2.408410,-0.549845,-5.628954,-6.870261,0.638715,3.648280,-4.321245,1.950030,-8.647349,-0.392584,-0.372183,-7.535109,-1.808865,9.408385,-3.956269,3.675040,9.330540,-7.728928,-3.608310,-9.477028,5.960558,-0.436523,-5.321236,-0.159432,-1.519303,0.418694,8.606275,7.720656,-9.842225,2.712285,2.966961,-9.661068,9.333598,-3.621015,6.999310,2.384986,-9.497799,-8.851003,0.024557,-1.757244,-7.464708,-8.717090,6.307288,9.848874,0.279145,-0.171646,6.106233,0.236189,1.174030,-3.592417,-6.955130,5.669578,0.404129,3.114961,-6.371672,-5.781125,-8.693824,7.400456,1.834840,9.968272,3.774222,3.285630,-2.665843,8.574053,9.402417,-0.672695,4.620417,-3.558165,-0.178273,2.232981,4.593842,2.835843,6.392981,8.619659,3.729870,2.635862,-0.803931,6.726238,1.224795,-6.396002,-4.648182,-2.265294,-2.413754,-2.431807,-6.817027,-9.998541,-2.461870,1.832206,-9.481986,-3.847496,7.775365,-8.897123,-3.490465,-1.401836,7.359310,-0.676609,-2.838758,6.608849,-3.451354,5.358295,-7.069619,-2.673668,3.251872,-1.880951,2.053057,1.976584,-8.778704,-5.989193,0.073206,-1.958651,-3.408727,-1.019939,9.190113,6.753078,2.313759,-7.124407,-2.524887,-1.809353,8.735864,4.614731,4.709935,0.399868,0.078206,1.601195,0.441825,4.025817,-3.546086,-1.368985,3.122925,9.059206,-8.853400,-5.555947,9.729927,-5.968804,0.225249,1.035181,-7.336308,-9.796646,-7.916219,-3.644547,8.344103,5.611328,6.799247,6.121050,-7.395199,7.528438,9.166469,4.134573,0.495072,2.859379,-1.679725,1.394648,0.219461,-5.481749,1.103035,6.583148,-7.300765,1.563772,-5.390308,-5.035069,4.097660,6.803280,-5.968544,5.075012,-3.484517,-1.027043,3.247411,2.203959,-5.389997,0.904231,-7.939337,-4.855651,2.853985,-4.508544,3.890958,-9.944113,6.827244,8.042200,8.049440,6.046525,5.211832,-4.767793,8.081930,4.492916,4.042583,-1.042030,-6.706694,-9.389922,-0.976504,5.253518,7.744901,-6.458731,-5.745687,-4.147478,3.318855,6.072764,-9.510359,3.802481,-7.292675,7.674507,5.756430,6.181718,-6.910187,-8.309503,5.017290,-0.407389,3.339229,6.598441,-4.759274,6.800090,6.992206,-9.994876,-5.813306,5.681630,2.610329,-7.974941,-7.067457,-0.987521,2.005935,0.906632,-3.181389,-6.512930,0.683096,9.006070,2.850168,7.805746,-5.710516,-2.878761,8.357028,2.347861,-5.784312,-8.865821,9.687300,-2.643224,0.922126,0.253365,1.415725,7.962852,7.447811,4.620405,-8.525196,1.467207,-8.306618,7.886303,-1.876377,-7.751871,1.461041,9.138385,8.181374,5.779039,-1.251138,3.086592,-1.027566,-5.194592,4.128695,4.540022,-9.263906,-9.076181,-7.413992,-2.100447,-1.211603,-8.326147,4.291035,4.078378,1.918471,4.924321,5.962850,8.754367,-0.997247,-8.612409,5.789930,5.986848,-0.976810,1.493079,3.478032,2.406034,-5.839069,4.887659,-0.666375,1.816502,-9.575736,9.215409,3.328093,1.601955,-2.140954,3.959670,6.972083,1.427976,6.386146,4.765891,-0.193332,-0.500205,-6.410174,2.785309,-8.533104,-9.986754,4.301066,1.767283,-0.098221,-6.962057,-3.257872,3.329764,-5.782569,7.821463,9.647934,3.410835,-5.673132,-2.108214,4.390903,4.569960,-2.019500,-4.928718,8.318968,-5.541804,1.642855,-5.276635,1.475301,8.578584,-9.287057,6.882706,3.661088,9.490649,-0.446836,-5.444481,9.524133,-6.705929,9.822587,-8.561031,-0.397666,5.627609,3.464475,2.759309,6.207493,5.356505,6.976775,7.274867,4.915285,-3.208154,-8.420108,8.580029,-1.512978,-8.404324,3.084086,-2.519330,4.261940,1.887115,6.461436,2.340561,9.874569,-6.876863,5.455619,-4.424198,0.846610,7.921150,2.697807,7.219845,-4.878220,-2.130065,-6.432683,6.802252,-1.546775,9.893702,0.609062,-6.153743,3.332138,1.545385,-3.754434,5.699588,9.810130,2.278845,6.377535,-0.159609,-8.269317,2.726032,-6.964020,9.158615,4.995596,-6.120463,7.006448,-3.477653,-2.788901,-3.973966,1.994515,-0.446673,-0.044470,2.202754,-0.537961,1.442601,-6.622671,-8.090787,5.448718,4.679019,-4.363340,7.635406,-2.972361,-8.281076,0.871084,7.031178,-8.522445,2.105823,-9.654910,-6.088925,6.759950,8.418984,8.690058,-6.546111,8.683686,9.409213,4.813074,-6.236336,-6.427131,-0.473941,1.588213,-2.414162,1.684444,-6.942490,5.619515,7.498109,-9.129325,-9.972179,-5.241108,-7.985222,2.271820,0.110766,-1.587498,-8.169986,-5.940801,-2.289149,5.316591,1.652978,6.482742,-5.103384,-8.471897,7.427714,-2.452067,-4.901959,-5.657490,3.166196,6.846852,-1.170069,-5.937424,-7.753976,-7.481915,-0.447892,-3.356010,-6.879857,3.315535,-6.998919,-5.795260,-6.188655,4.287890,6.908359,2.438037,9.379435,8.650496,-4.980621,4.132681,-5.667467,1.667630,6.816108,-6.599895,6.538679,-5.435899,-2.627382,5.339373,6.153142,5.035411,-4.540846,0.930043,4.777075,-1.949436,-6.926473,3.690851,7.459735,7.186937,-7.487653,-2.864566,7.634995,7.458181,-7.474536,-1.254312,9.761168,-0.144284,-3.770386,-7.620162,4.891114,0.915851,-9.028274,-1.968247,-7.528116,-1.340476,-8.428591,-1.184673,5.350009,1.863449,1.648821,1.003150,8.426226,-8.079568,-9.298491,-3.142217,4.916850,2.644099,-0.656950,7.415764,-3.483108,9.841914,3.583412,-7.191169,9.798178,-9.625825,-1.977259,9.306349,5.655033,6.661414,-6.423707,7.945566,-0.799042,2.397702,2.683398,6.180159,-9.953756,-7.769455,-0.334807,-0.578638,-4.494183,-6.147623,8.758632,-9.464147,-2.593134,-3.798858,5.665169,-5.669797,-3.404748,-2.162177,5.906511,1.846989,-9.980137,4.914007,6.343494,-9.671620,-0.978485,-6.697699,2.891722,-5.173793,-7.700527,-4.678103,1.127269,4.607786,5.347231,5.363105,2.525777,-8.715156,-4.987588,9.640249,-4.406110,0.089368,-0.895146,-7.370136,-6.725869,1.489341,5.530441,2.107114,8.971090,-3.399354,-2.543259,9.967754,4.021914,-3.290077,2.204719,6.600024,5.132306,-4.195544,-0.822784,1.477687,4.155953,4.292941,9.783958,1.580911,-6.060330,1.677012,0.413234,-7.672732,-5.922254,-9.787324,-7.887348,7.098441,-8.844174,-6.785769,-8.226499,-1.620785,-6.182269,-9.558162,-6.156710,-7.856871,-2.905544,1.198319,-7.658657,-2.187543,-4.843369,-5.165623,-9.803428,1.137213,3.708459,2.618196,1.233799,-6.267613,1.433073,1.205115,-2.054997,-0.741982,6.404742,0.412867,-2.216653,2.820228,-5.322888,7.046623,4.208401,-3.345145,-8.412486,3.702760,7.579740,-5.884096,-5.754434,-6.719770,8.971554,8.971279,-4.274586,7.640076,-3.626272,-5.555224,-6.820937,4.012069,-9.798264,5.634120,2.857999,-2.782802,-4.041333,-6.289125,3.274710,1.675512,1.052271,5.557061,8.107288,-2.024675,3.684239,5.639683,4.556141,-6.810396,-1.081949,-3.954001,-1.336215,-6.707690,7.578591,4.064538,2.264228,-8.948937,-4.316465,-1.591631,-5.854415,9.989761,8.355216,7.672341,-2.506693,-7.982592,3.995078,-1.316763,-9.968192,-6.803096,9.127771,-7.870096,9.710321,-4.120041,-3.789239,0.747104,3.079428,1.287365,1.435219,3.997053,-6.630607,-9.077282,4.795788,4.197633,9.844850,0.270563,6.411585,7.602431,-5.825330,-0.154581,9.082803,6.933601,0.698860,5.954462,-5.970608,-5.789094,7.281916,-5.392343,5.794926,-7.053818,-3.367090,-5.586654,2.058582,-2.927301,5.016886,-8.591308,-7.112783,1.213579,-4.380007,1.164456,-3.043822,4.483692,-7.813343,-7.644611,9.735324,6.877229,-1.860993,-2.488430,6.209732,-3.335429,8.522037,8.407625,-8.616434,8.477207,-4.390164,6.636882,-8.528341,-8.633067,7.828210,5.524131,7.397931,-2.102819,-9.818312,6.587634,2.671905,-9.976501,-9.814181,-2.375413,-0.551241,-9.221210,-0.607792,5.907466,-8.598982,-5.931256,-6.178220,5.712037,-1.291192,-0.832726,-5.174008,-3.823463,6.887781,-0.597669,7.751534,-5.898914,3.111321,-8.796219,5.418266,-9.228176,8.406096,9.112698,-3.592562,8.471836,-0.962956,0.266647,1.862174,-6.334553,-3.297502,-7.323735,3.376419,-9.990369,1.125360,4.956269,-1.309236,2.288525,-3.331714,-3.633215,2.224187,1.813996,2.046422,-7.693430,-1.310693,2.308834,7.120499,-4.659951,-4.281538,1.117637,5.691809,-4.589773,0.301325,6.996231,-3.954969,-4.620239,9.773712,0.502421,6.390000,2.098950,-0.861929,-8.828674,4.926050,9.983594,7.470653,9.109923,3.927263,5.785703,9.500458,-4.135846,-5.740776,1.633272,-1.044012,-5.318539,-0.512274,7.888189,-5.282747,7.397161,2.134425,9.857615,4.918779,7.623589,9.866011,1.462620,-4.846640,-5.838845,7.451168,-6.070335,3.478802,9.862029,1.793812,-3.071099,-7.163547,4.433452,-8.810370,2.242535,3.500090,-7.653670,3.824734,-2.819880,6.456678,-4.750405,-0.199188,-2.089742,9.218721,-8.178580,1.993964,-6.671595,-4.998645,6.431046,-8.212374,-5.757343,6.778701,-8.470894,0.713869,-6.760314,-3.986918,0.051606,-2.732481,-8.431476,0.625087,-0.640561,6.690502,-0.252844,-6.009784,8.176300,-2.629860,-3.061760,-6.211465,-0.775109,7.092113,8.615631,7.966186,2.335233,-7.205761,9.008978,-4.067367,-0.754068,-0.087655,1.053256,-6.015870,-5.646434,-4.745481,7.094041,3.405758,-3.839940,-9.600012,-7.000955,-7.003904,2.001798,4.860388,-4.368822,-5.307968,-5.484468,-6.983149,8.736312,-5.448519,4.666530,2.103604,5.428661,6.195159,2.302634,1.752592,8.573289,2.343351,5.616036,-8.087790,-1.904505,-7.114426,6.553092,-8.458647,-2.311180,-1.352760,-8.010731,-1.164707,6.193497,2.200689,0.594517,-1.224468,5.632973,-7.131035,3.904584,-1.252442,6.957184,-6.419284,0.041648,-4.780707,5.473323,-3.636543,-4.099478,6.048029,-5.578551,-4.532210,-6.570382,-1.986735,4.879086,-1.144889,9.062209,-8.787155,0.526935,-3.262155,-1.531310,-3.424176,8.855840,0.183227,8.348709,8.331138,0.999058,-6.311629,6.914889,8.685276,5.786468,1.227447,2.048015,9.491351,-9.157454,8.506421,-0.840968,-6.683996,-1.902198,5.645878,-3.068594,7.861597,6.774878,1.549431,0.956555,8.837856,-1.013824,8.417296,-2.074022,2.497127,-8.852146,1.171600,-2.759758,8.600942,3.859354,6.192285,9.963410,-8.339998,-0.023229,6.157654,-5.194991,-4.068132,2.897907,-6.177934,-4.668188,-0.340566,3.649517,-6.401409,2.140902,-3.220776,-8.967306,1.374038,4.426080,-7.935466,9.903140,9.802656,-6.916595,4.585535,4.783878,-4.994831,9.665674,7.330598,-4.571854,-6.755923,2.375708,5.446664,-0.297590,1.823896,-0.581714,2.964947,-5.540524,9.362001,-4.209127,-6.107571,7.056448,-5.989153,-2.874228,9.820748,5.867749,-8.921323,-8.965183,-1.127851,-7.652065,-4.993475,-7.757690,4.442372,-3.456894,9.538108,6.259986,7.697999,-3.111231,9.920875,6.722302,-7.506396,-6.800330,7.201546,-2.433017,-0.774148,6.497535,2.993398,-0.774461,-6.521205,5.309541,-8.563884,-3.507890,2.761918,0.147845,6.563103,3.426740,4.859129,-3.143414,4.950108,-9.841212,-3.031818,-4.389737,9.070191,-8.935893,-5.234065,-9.384607,-9.555127,-6.033996,4.287490,-5.826388,-7.853119,-3.814394,8.745828,-6.619924,6.580526,-8.165334,-7.643569,1.439524,-4.530575,-9.754075,-7.414254,3.708319,0.225919,-0.169944,1.187372,0.205307,1.646112,5.818996,-5.123329,8.496922,-4.465523,1.013767,-8.217734,4.749361,-4.234188,5.280765,-5.791818,1.341915,-5.877598,-7.945025,-7.193103,2.333082,-5.943138,2.312914,-8.235681,-3.536207,-4.905499,-6.367029,5.907900,6.825625,4.233918,-3.907729,4.027284,9.085935,3.733767,2.367887,5.146712,8.926788,2.923106,-9.485094,0.045382,6.859432,8.062918,8.589296,5.912737,-2.689649,0.540134,-9.177701,6.105651,0.938830,3.863626,-6.616043,5.103452,-8.320980,-2.792752,5.697497,-7.132212,-3.404499,-2.834926,-7.870792,-0.935253,-3.272607,1.440058,4.944758,-7.576640,0.666264,2.072523,-1.790244,-7.087511,-1.232461,3.672677,-6.092688,-9.926975,3.888171,-5.776985,-9.033080,4.668123,1.021674,5.158263,7.634258,5.191861,7.028908,-5.004730,8.067224,8.521238,-4.842672,2.686571,-2.353295,8.080365,-9.741564,9.508190,-5.047795,7.661736,8.465175,-5.617255,-4.292080,2.517328,5.361326,7.127040,-5.720587,-0.291676,-5.287873,-9.492244,3.528371,-1.274261,5.457377,-7.587789,-9.495563,2.243749,-1.884696,-7.606940,9.614374,-1.857141,-5.261267,-1.749817,-2.003823,5.051980,-8.837842,4.142933,0.061009,-4.495566,1.016504,-7.618709,-3.192010,9.862348,-6.028818,-8.393462,-2.607064,-8.535152,-1.771975,9.491974,9.300567,2.262888,-3.268331,9.919973,8.475711,2.773313,-5.290770,-8.649812,9.433889,8.763356,-2.672381,-5.899265,-5.327223,5.884438,8.346712,-0.311104,0.704745,-6.306086,-9.991001,3.221906,4.929659,3.684632,-0.412295,1.553484,5.696773,4.621460,-6.054410,-5.005511,-8.111336,6.563296,4.386909,-0.749363,-9.428008,-6.225016,-8.213069,-9.754151,-6.374216,6.560933,7.488545,1.183714,8.215912,-8.121010,-3.705096,3.016105,-7.154940,-4.837817,-3.602859,-6.503382,3.275795,8.305077,-6.196903,-0.884418,1.593629,-0.036291,-3.266260,-9.208614,-0.873807,7.968463,3.644055,-3.691591,8.695702,8.673210,2.532286,-3.901533,3.736925,3.362216,8.942629,-4.141934,0.496822,-3.637642,-2.275971,-6.001258,6.913041,5.277832,-5.922552,1.808413,-8.046336,6.962292,-5.325950,7.730434,7.058732,-9.581747,-3.242819,-4.121255,2.252921,6.355151,6.243323,-0.729036,8.050220,0.852142,0.177234,8.574615,-4.840019,-7.044052,8.365827,-5.652159,-7.384352,5.924996,7.511209,-7.980650,-2.930841,4.797417,5.484183,6.331667,5.548235,-9.800066,1.094551,0.506120,-3.044593,-6.031950,9.152470,8.426080,0.828270,-3.360683,-0.307187,2.687447,-0.754781,-8.017734,4.495207,-8.010364,-4.894785,2.608629,-1.735813,8.879851,-1.003472,-5.405097,-0.404083,7.114707,2.956206,0.521017,0.538295,-6.914637,3.727184,5.155682,-0.393337,7.356874,9.366272,-4.703634,8.163317,-2.149893,-6.334971,9.388042,-7.288545,-9.953400,-1.580921,0.543966,8.689513,1.115507,-0.345916,2.551523,-6.690345,-4.145127,1.347008,-4.598576,-8.100668,5.747939,9.417240,-2.792013,5.204098,2.971920,-3.289100,0.726226,3.821719,-3.027401,-1.400435,-2.396345,-7.276774,-6.471067,-0.600661,3.894033,8.329808,0.559087,0.767763,8.024298,-1.091880,6.492440,9.077311,-4.418859,6.883382,8.618196,-5.757494,8.694148,-6.711070,0.656870,-8.820186,7.298078,9.848222,-0.903920,-4.638291,2.884763,9.855071,9.026684,-9.542142,1.617649,-1.263383,5.957122,-7.237780,-1.069959,-4.517478,2.394825,-5.791427,-4.402921,7.406792,-5.627622,-4.777664,4.511435,-4.099891,4.889206,-8.108852,3.759223,9.666499,-6.101723,1.827881,-6.801474,-0.173875,-0.106808,-2.969669,-6.659458,9.456262,-9.191427,-2.775226,2.057039,-0.436980,3.675253,9.419810,-3.372839,2.835501,6.370021,1.833399,-0.476286,0.407233,-0.246162,-7.713272,-7.097637,3.060088,2.640169,-4.414072,1.720136,8.758420,6.660344,5.985102,6.615233,-8.359834,0.652387,-4.801809,6.235033,-4.105954,-9.229980,-3.441048,-0.446109,3.822590,-8.951740,3.039435,-7.094658,-2.554265,0.679621,0.205362,0.645460,2.113718,5.225387,-1.848423,-7.755259,-0.589422,9.108328,0.456839,4.471277,-9.356538,-3.755845,0.558616,-2.682580,-1.196647,8.704682,3.749351,-2.993607,2.667249,-3.089015,-0.813005,-1.841106,1.347609,-0.458514,5.755771,9.146998,5.007705,6.565828,7.067189,-3.456973,-3.298591,8.630518,-3.155426,-2.791240,-4.999766,-3.355208,4.279386,6.724597,-3.522602,1.668634,9.198862,8.353577,-0.807711,6.236773,0.772522,-8.294907,2.048380,9.076180,3.215972,8.351451,-1.995991,-5.560234,-5.633263,8.642285,4.679225,2.471002,3.631359,9.130859,0.487937,9.903109,6.707501,-2.495210,-5.226490,-2.358678,-2.119169,7.799779,9.211121,-9.970687,9.264305,0.434602,8.881228,-4.898332,1.612641,-3.892866,-3.959232,2.707987,3.529497,5.890624,8.076557,8.800854,6.506160,1.240943,0.981565,6.760259,3.282073,6.289093,2.105248,8.473258,-1.131578,2.049134,-2.581200,-8.896492,0.928231,7.259369,4.565049,-1.417982,9.019907,-7.049588,2.422835,0.754837,-8.467596,8.241017,-3.712683,-9.341127,4.440044,-6.966770,9.002519,2.599585,-3.865478,3.659972,-1.192895,-6.279649,3.261740,-2.036798,-9.503303,2.772035,-5.942431,-3.242592,-7.337472,6.734500,2.882886,9.559260,-8.859282,6.576610,1.558716,4.796102,-0.764552,3.168894,-7.044898,-7.312911,7.888863,6.487930,5.927644,7.499829,-3.849187,5.302793,-0.704555,-4.430034,0.242466,8.701525,0.724071,-2.860565,-8.736616,8.751393,6.770074,-3.817577,-5.955180,8.066683,4.672205,7.967861,5.207194,1.439338,2.093068,8.912611,9.697947,3.167276,0.693329,-7.079195,2.457911,-1.809106,-5.270579,7.414543,-9.192041,-5.748052,5.318843,2.612860,-6.066693,-8.027638,1.931450,-7.207464,-3.953827,5.917273,-0.056210,-6.731901,4.541495,-1.451075,7.207312,-6.784643,-9.682478,3.083889,-5.033100,9.495857,-6.565616,-9.760835,9.923478,-9.837642,-7.657878,9.057649,-5.304850,-5.510961,-9.025406,8.038733,9.875348,6.989690,-1.610931,5.987546,9.857610,7.649367,1.698049,0.907781,-3.954467,-2.412193,7.949303,9.725131,8.026996,-3.038508,5.588823,9.894707,1.573477,-0.467616,-4.207055,2.265879,-4.893638,5.288407,-4.290630,-0.234723,-6.508581,-5.053031,-6.475123,8.738867,0.685317,6.735981,5.292463,6.703174,9.417679,-8.672636,-0.870311,-0.870682,-0.153421,-6.953492,-3.153209,-8.346158,6.362901,1.680367,-5.167011,-1.124592,-7.144493,-5.551932,-3.112057,-6.175749,-3.957002,3.824030,-1.423859,7.036198,9.292740,-4.100505,1.749993,5.737458,9.336165,-3.462350,2.969063,0.719744,3.956682,-4.372778,-0.900824,8.397135,3.381346,5.331704,-4.823234,5.505805,-0.254029,-3.879909,-6.376404,-7.529818,-2.672885,0.445255,5.525439,7.869083,6.081754,8.419770,-0.983909,-5.406923,8.080051,-3.231968,-3.202544,-4.179688,1.976864,-4.738075,-7.568475,7.041846,-4.520008,-0.879321,7.437229,-5.508852,0.865558,-0.025463,-2.821729,-3.108593,-5.186086,-2.963755,-9.607515,3.894664,0.520476,2.244464,3.381085,-6.797221,9.371215,5.685431,-8.099985,8.174650,8.661745,1.552695,-2.545369,-1.310141,-0.380623,-7.121725,8.021433,-0.186717,3.743750,-4.991318,-1.541474,-7.849363,9.469285,4.984817,0.439326,-8.831380,-6.549429,3.315488,1.094367,-4.372650,-1.068038,-0.988712,-3.560196,-0.316001,-1.844491,-8.025488,5.750892,-7.237557,8.612640,-4.615898,7.489527,1.063184,-2.556370,-9.214487,-5.726306,-9.770761,0.438189,-0.658783,8.103574,-3.973738,4.072616,2.674585,0.491285,-9.847323,8.986061,-2.853117,6.778235,-2.015482,-2.298052,9.471098,1.783135,9.638781,-0.593796,3.622719,-3.376091,0.373456,-6.294813,-4.395932,-5.062791,-8.802414,5.907118,-4.940063,0.791769,-6.322219,-2.065963,-8.492921,7.514121,-4.969440,-2.564010,-3.577632,3.765282,-4.128921,-2.147439,-5.328681,0.697047,-7.827500,1.934373,0.206320,4.933918,-9.336857,9.247298,-2.857991,-5.192384,-5.595157,-0.605801,2.499541,-5.474695,5.429387,-7.882144,-3.987749,7.063216,-6.210826,0.244350,3.025784,9.090131,-1.435245,-7.385399,-2.862327,-4.315626,1.202770,9.970542,-2.725000,6.837328,-6.133009,3.306289,6.705219,1.222350,5.267229,-5.334249,1.546999,-9.198763,-9.986710,-0.561835,6.345710,-0.210925,6.133859,8.222389,8.256404,-2.045990,-3.786678,-3.740525,-2.984112,9.834399,3.256166,-1.438305,-7.645928,-5.256957,5.845909,2.087652,8.361804,-1.292006,5.246163,7.727245,-2.349811,-5.075968,8.477302,-4.645317,-7.293182,-1.838978,8.287410,-5.362288,3.731166,2.641952,-0.920530,-7.476775,-1.413292,-0.016521,-3.713146,-0.797138,8.161284,-0.560255,-4.948179,-4.506182,-7.720746,-2.386868,9.858404,6.619909,4.447142,-8.581113,0.911213,-1.276632,8.396256,9.660540,-2.910248,-3.428747,-1.913798,-9.778519,2.028622,4.907935,1.609195,-8.163703,0.125242,-4.616244,-9.726538,-8.298229,3.486910,8.419093,9.333579,-5.420620,-7.776549,-1.174345,8.028700,0.910624,5.247419,8.239493,-9.615031,-7.557375,5.867548,7.589214,8.629717,-6.568174,-1.047258,1.497195,-1.411244,3.618615,-9.095982,-0.368940,-5.973604,-8.940337,-2.238707,0.625669,4.131074,-6.766599,-4.444546,-1.140303,8.445696,-0.917564,-8.430394,-7.221684,0.532822,-9.286490,8.770290,-7.026580,-2.768240,3.037241,-2.674199,-3.131197,-6.641785,-0.721515,-2.681158,-9.759240,8.660287,6.032147,-6.080786,3.258292,5.704820,9.668433,-2.568096,-4.060930,0.446888,7.814876,-1.105912,6.499702,6.617296,7.392028,8.578881,4.506275,-1.097521,-8.609679,-5.065698,4.935099,5.625265,-7.670733,-2.197379,8.710647,3.328986,0.632254,-8.919391,-6.625283,-7.162507,0.432116,-8.235712,7.868890,4.293793,0.019203,8.876268,3.171545,-3.171571,-8.740003,-5.979329,-2.815650,-4.378328,-4.201406,-9.930205,-8.349629,-9.939604,-9.659047,0.793850,-0.238350,-3.129280,-8.219647,-2.232529,-1.900327,-6.833694,1.930536,-2.312286,-0.951649,1.145300,6.453113,0.988393,-6.931842,7.195487,-9.944323,-8.695847,6.920367,4.512480,-2.734869,4.773825,-8.337420,9.385427,1.600630,6.593009,6.275327,-1.755998,-3.824737,-7.527750,5.543307,-8.024890,-0.816277,-1.826081,5.030480,-8.705308,5.844562,-0.252597,1.075110,8.914852,-9.073723,-7.902243,6.669133,-7.003225,-0.404369,6.893981,3.570814,-8.843713,-0.091909,5.808692,-7.610270,-0.031479,-3.814903,3.369088,-0.212548,-5.257300,8.883094,-5.008938,3.300956,-1.331230,-7.140278,8.832124,5.601129,0.823980,5.618115,1.756386,-3.959769,4.536137,7.692311,-7.556833,-5.979388,-6.172289,1.983665,-6.069933,8.345578,7.809332,-7.419805,2.248947,-2.201152,-1.790318,-2.629648,7.631789,3.487551,5.965631,4.298928,-4.880242,-1.528128,3.912004,-5.179395,-4.967644,-5.708070,8.158448,-0.865621,4.082047,4.863069,-2.371469,1.071562,5.133294,6.338586,6.196291,-8.348281,-4.499853,-4.951139,8.238065,0.759286,4.619067,2.852290,8.697384,6.357323,-3.350008,-1.007040,-7.148788,-5.395216,-8.056149,-3.036414,-1.601251,0.166091,0.993814,-9.588818,-0.404275,-5.222194,4.465365,-4.267144,-6.616961,8.039501,8.550311,3.487975,-6.457278,0.698634,1.970101,-5.177501,-5.318255,-4.587776,-7.594989,-1.016711,1.949121,-8.465400,-2.389377,6.410817,-0.020978,5.163282,-4.044429,-3.088750,-1.069389,6.345443,6.311741,4.138601,9.536087,-8.457476,-1.145160,7.810832,7.029248,8.745922,-2.543584,-1.149364]], dtype = "float64")#candidate|11496|(1, 2925)|const|float64
call_11495 = func_1091_call(relay.reshape(const_11496.astype('float64'), [15, 13, 15]))
call_11497 = func_1091_call(relay.reshape(const_11496.astype('float64'), [15, 13, 15]))
output = relay.Tuple([call_11493,call_11495,const_11496,])
output2 = relay.Tuple([call_11494,call_11497,const_11496,])
func_11498 = relay.Function([], output)
mod['func_11498'] = func_11498
mod = relay.transform.InferType()(mod)
output = func_11498()
func_11499 = relay.Function([], output)
mutated_mod['func_11499'] = func_11499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6539_call = mod.get_global_var('func_6539')
func_6541_call = mutated_mod.get_global_var('func_6541')
call_11530 = func_6539_call()
call_11531 = func_6539_call()
func_8830_call = mod.get_global_var('func_8830')
func_8832_call = mutated_mod.get_global_var('func_8832')
call_11538 = func_8830_call()
call_11539 = func_8830_call()
output = relay.Tuple([call_11530,call_11538,])
output2 = relay.Tuple([call_11531,call_11539,])
func_11560 = relay.Function([], output)
mod['func_11560'] = func_11560
mod = relay.transform.InferType()(mod)
mutated_mod['func_11560'] = func_11560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11560_call = mutated_mod.get_global_var('func_11560')
call_11561 = func_11560_call()
output = call_11561
func_11562 = relay.Function([], output)
mutated_mod['func_11562'] = func_11562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11180_call = mod.get_global_var('func_11180')
func_11181_call = mutated_mod.get_global_var('func_11181')
call_11593 = func_11180_call()
call_11594 = func_11180_call()
func_8234_call = mod.get_global_var('func_8234')
func_8236_call = mutated_mod.get_global_var('func_8236')
const_11605 = relay.const([-0.566439,4.882415,-5.348489,1.254384,-2.425441,7.638520,3.097682,-4.952511,-2.276260,-2.976617,-3.248077,-8.418332,0.562117,6.438688,-0.418900,-1.735899,4.668874,7.796735,-5.565859,3.246774,3.461175,6.936922,4.040130,0.806609,8.250502,-1.697832,-0.933995,-8.755503,3.778937,-9.863490,-0.763982,2.557235,-9.297332,7.158320,5.908427,-6.375861,9.241666,4.491896,4.307555,-3.200098,-5.954848,-2.975252,2.771176,-2.647197,-0.045587,-1.079138,4.179417,-6.392161,4.470504,1.414416,-1.399077,7.109170,1.443784,-5.680601,-8.401111,5.554878,-8.587856,0.171956,8.960748,-4.099567,-5.369483,-1.051750,-9.839897,-0.639154,-2.499175,-6.442503,6.271812,-4.224944,-3.968736,7.368718,0.720346,0.110253,-2.870225,-9.587282,-2.318215,-5.676570,2.556857,5.521244,0.424308,1.373561,9.559731,6.444052,-2.362162,3.898279,-1.633692,5.181354,4.922871,2.520823,3.254370,8.514660,1.302609,-1.769811,-8.050611,-7.124424,2.921592,1.560495,-5.071292,7.933783,-4.800441,9.432628,7.086260,1.194939,-5.064280,7.829470,-0.988859,1.121783,-7.763642,-0.243246,7.405468,-2.942574,3.895880,2.033636,-6.180311,-5.613021,8.454848,-4.052697,-1.423749,-7.683562,-8.991999,-8.301727,-8.661059,-1.969104,5.613241,-9.120348,-4.787490,-4.454680,-0.524493,7.056665,-9.969644,-9.857717,1.689478,2.706920,-9.123263,-1.772383,0.584263,2.659925,9.925315,-9.481461,-1.195772,9.736221,6.319706,-3.370773,-6.450651,4.552524,6.852224,-1.657225,-3.599177,-5.494642,9.157312,5.419144,8.563421,0.150110,9.047995,-8.682112,-6.322850,-7.619464,8.122612,9.181998,-3.793441,-2.860563,-3.569324,-5.869209,-6.969253,8.983274,-4.001834,-7.071348,0.201208,-6.263004,5.610456,0.986507,-1.286633,-3.724618,-0.109743,0.626694,-3.398418,4.953137,1.139094,0.417415,-6.303617,6.116123,7.738516,5.281935,4.949310,5.776494,-5.394020,-6.490378,-2.567165,-0.882155,7.122269,4.649165,0.429176,-1.282212,4.625237,1.935362,2.632907,-7.992166,-2.406780,7.919198,3.327240,5.738334,0.631610,-9.185015,-3.207238,4.542369,0.720016,3.280808,3.216312,0.936748,9.074791,-3.372360,7.116339,6.835370,-3.004164,-4.345644,-7.598851,2.051152,8.346223,3.930503,-3.819071,2.924410,-6.606171,8.619074,9.028365,-7.985413,4.169022,8.422552,2.025513,-1.608039,9.451817,1.454240,-3.454973,-8.456190,-8.112252,9.339686,-5.006894,-4.254295,4.619512,-4.060807,-8.689189,0.806517,8.015214,8.072867,-1.465753,8.153029,-1.428688,1.236724,3.866652,-3.675280,1.704261,0.692641,5.967407,-8.752277,1.833183,1.884998,7.677476,3.624753,0.137148,9.917798,-5.348138,7.228510,2.987708,-8.145269,-6.813628,4.404891,-5.324870,9.331653,-8.350197,4.934470,-5.062183,-1.316105,2.233539,3.941941,-3.339315,-4.996348,2.365486,3.954318,-0.199488,8.392748,-2.090470,5.115148,5.708043,-9.142467,-8.137653,7.421092,-7.521027,0.068870,0.719531,-1.019791,2.401489,5.934815,4.863060,-3.259357,-7.338464,-8.393770,-2.313468,9.848968,5.206243,1.983988,2.469524,-8.963425,-0.564280,-2.952772,-8.728387,2.191469,7.454128,-6.196147,5.505865,7.033230,9.951555,5.681547,6.820359,1.050897,-0.090277,-5.697827,-4.183258,-4.636034,-2.158977,-4.744782,0.040435,4.159023,-2.745512,1.869961,-9.096333,5.401952,1.305480,0.946643,-5.894637,5.312531,5.754445,-8.274716,-7.698344,7.194072,6.669282,-9.065243,6.901199,-1.411395,3.817356,-8.318975,-2.090155,0.703645,-4.306240,-0.195289,-7.994212,7.180421,2.975678,5.768470,-8.749019,5.026580,-3.822879,5.002673,1.751428,-2.637095,2.611586,-1.074349,-8.073727,2.522386,-8.236766,6.033103,0.035612,-8.596616,7.076116,1.233332,-0.453126,4.606878,-3.380832,5.773838,-3.424807,-7.523503,-3.259492,5.146410,5.487987,1.735903,-0.217667,-0.547538,3.968387,1.627106,-1.110272,0.933236,1.386742,2.465286,5.771900,2.583625,-6.159975,3.750906,-1.919317,-9.916213,-3.486674,9.678346,-4.001009,-5.831726,-8.181204,-4.112370,-9.925115,-1.092724,6.284465,2.380377,-4.901866,-5.664442,9.499824,1.808289,3.398872,6.775935,4.577909,-9.666598,-0.850150,1.895586,-9.982237,0.074017,3.228314,-6.096607,9.518587,6.786157,-8.920694,2.894549,-9.778489,4.138971,-0.964508,2.875989,8.213525,0.965156,-8.397039,9.517395,9.108209,-0.286217,-0.201630,5.749391,-9.002653,1.382111,-5.017537,-8.960882,4.663306,-5.784246,-4.049185,0.584213,-4.630705,0.801637,1.539073,4.824585,9.402517,-4.184310,1.845892,-1.089127,-8.982388,-9.392506,-9.378030,6.374790,2.707275,3.056894,2.490310,3.096256,4.471306,2.014546,0.785683,0.367133,-9.543254,-0.865571,8.327484,3.828312,-9.523871,0.081572,4.009205,-5.739996,-3.281254,-7.674936,-1.405216,6.374090,6.150694,3.026440,-6.348112,6.584011,-6.748641,-1.628730,-2.811708,5.738028,2.895713,7.743103,-8.538145,9.989267,3.882415,-7.565777,-6.615509,-2.268102,-6.831599,-1.339139,-7.644351,1.829339,-1.856100,4.603121,-2.533482,1.739413,8.590038,-6.918511,6.806361,-9.179997,2.673395,-2.855382,0.701615,8.978898,-3.629886,-3.988386,-6.695677,5.154635,5.161750,4.034841,-0.469829,8.456258,-8.188510,1.672651,-6.739721,-6.797641,-0.062246,0.308851,6.613491,-2.542750,-5.174159,4.351537,-4.381727,2.513393,3.376516,0.846799,-8.303991,7.732590,-7.064659,-8.756154,-7.580157,8.345658,7.496064,-5.600681,4.694522,1.903591,8.297973,-3.935338,0.673262,7.666070,7.289506,-2.157839,-0.216317,-1.540853,-2.613664,4.084484,4.410466,-2.042833,4.860991,-4.018008,0.640310,-3.581393,-5.808651,-4.353170,6.026136,-1.432743,7.697667,-8.710435,-5.456210,-1.417906,7.247751,6.946065,-6.787684,8.495353,2.123453,9.907584,0.123908,0.406534,-8.518450,-7.451032,-9.639675,-1.025466,3.317585,5.046307,8.176332,2.922030,1.501274,-1.188497,-7.579808,5.306178,1.394162,-0.954595,-8.534814,-0.657086,6.553714,-0.694877,8.573885,3.732213,5.442834,-3.171204,0.675209,2.336462,-5.790327,-2.619337,-6.546332,-1.068922,-3.146438,-4.139265,7.746607,-2.639809,3.732636,-6.682873,4.718761,-8.896697,-0.784053,-7.717591,-7.711524,-6.964813,3.899621,2.223472,-9.640328,5.448375,-2.108368,7.960003,-5.162644,-0.508372,4.114547,-5.005312,1.436663,9.947306,4.973588,6.462741,-7.635737,-8.346509,-7.000355,9.624437,-2.828434,-9.922076,-5.476228,-2.531012,7.742533,1.042169,4.561606,5.981488,-8.632183,-9.954363,-4.082650,3.575979,7.653687,-5.047620,5.692234,-8.520615,-6.277197,-7.402789,-9.724265,0.981540,6.178476,-3.356270,-7.427905,5.208801,3.858433,-7.607336,9.904039,-3.047461,-2.385537,0.352291,-7.517322,3.730191,-4.825914,4.419861,-9.676762,-4.693912,3.993041,-0.880792,-7.354998,-4.785960,8.588990,-5.502901,-6.718958,6.614982,4.253221,-2.309593,-4.284594,6.559229,7.155215,0.747645,3.093009,-5.154592,3.620345,1.782242,-7.911193,5.184194,-0.511638,0.044724,-3.024357,0.122032,4.527237,8.332575,7.239948,-9.308479,6.889473,-2.556549,6.128115,-6.221150,7.300009,-4.290704,2.915659,1.700286,5.081550,1.076720,6.558480,-4.952742,-1.796252,-5.661068,-6.012938,3.873825,8.391425,-8.039953,-6.184599,7.516449,-5.037291,2.240809,2.082278,-1.611940,2.099813,-5.920125,-9.486259,6.867419,-4.585728,3.217169,-1.331033,-0.575353,-3.471280,-9.125419,3.814509,2.789621,-8.900337,-3.185985,7.061024,-8.582124,-5.329465,-0.868214,7.723351,7.833263,2.352321,-8.701715,7.108159,4.269732,-0.217978,-1.308302,8.231951,9.389159,8.366321,1.444463,-8.745835,0.583872,-7.499345,-5.102041,-5.788370,3.166213,-5.564879,2.544989,7.473596,1.666053,7.078196,8.378859,5.712838,-7.236954,-1.641176,-8.256122,6.611714,8.013993,9.893568,-5.193436,-2.428229,2.355003,7.547732,-1.179019,-1.670017,-1.797070,-0.479171,-8.122424,2.223593,-9.688743,3.554371,-7.935178,-8.702303,-9.661579,9.673824,0.971351,4.839569,-3.871745,-9.553782,8.063605,7.717638,-6.850148,2.500045,6.257139,1.197428,4.554044,-4.306037,8.165923,6.642767,-9.642995,-8.031921,-5.275685,5.757724,7.310972,-5.016669,-9.787994,-9.495297,1.745721,3.701139,-9.943663,-0.739670,6.800125,-9.203255,8.671912,8.996959,-5.077213,-2.093968,8.441389,-6.437647,1.279815,9.943642,-6.980293,-9.028390,8.963645,-6.019254,-9.646994,8.804247,-1.441975,-8.479076,-2.398418,2.387267,-9.159289,9.703064,3.695434,-9.938770,-2.305405,-6.096816,7.916589,-0.696548,1.973083,0.928069,0.593596,4.196139,-0.176793,-4.234666,2.421321,4.742450,5.073117,2.833595,-6.609344,1.480282,5.312423,0.203366,-3.906848,-7.731720,6.550522,4.530159,-9.412624,-4.023515,-2.666651,7.424296,-4.675407,2.481474,-3.005001,1.572598,-4.061413,9.549393,-5.024605,4.542580,5.733007,-5.946826,5.346061,9.680124,8.796854,-4.239347,-8.114042,6.374889,-2.993147,-1.668047,-5.665860,-1.871083,-6.003041,-5.983487,-1.551874,1.858250,7.192590,-6.293511,3.824666,1.342219,1.738694,9.394849,8.480291,7.209703,4.274548,-2.882054,9.787061,6.808885,0.327908,-5.559765,6.378940,5.757014,-9.166178,9.186676,0.180230,-4.096593,-0.986431,7.507881,-2.394298,7.973604,-8.056508,5.916085,-7.361851,-1.176088,1.172683,-2.764390,-3.787631,8.880798,3.407517,6.179320,7.585976,-1.212647,7.222982,-3.590546,-8.894456,6.825411,1.440957,-8.251481,6.960856,8.781655,6.022129,9.743413,3.805992,-9.941582,5.695651,-6.392925,7.138961,-4.544413,-5.294601,0.235134,3.895785,7.467080,4.045453,-1.818286,-4.620530,3.996955,7.064581,-4.609267,-3.055740,-3.248975,-2.811640,-3.638612,1.805102,-0.580358,4.694172,-7.435686,-4.252710,-8.962805,6.702733,6.323064,-7.576907,4.863291,4.136716,7.336522,1.512735,-5.372240,-4.545505,9.476603,4.939082,3.115289,6.901647,6.127547,4.702757,-4.920338,5.531602,1.303278,-2.887012,9.662486,-3.856299,5.437433,-0.273647,0.835326,4.987281,-9.854988,-3.770703,8.714931,7.614391,2.448648,-9.274106,3.127260,2.465011,-4.330477,-1.814626,-7.881997,-1.029743,-9.076217,8.224139,5.593359,-0.162193,2.847192,0.502886,0.410573,-6.116662,1.172142,-5.057650,-5.476120,0.781904,5.631209,-2.825624,-6.003285,-4.919359,-0.128498,-0.900692,-6.998766,0.300896,1.132726,-5.187205,-9.902571,-7.424769,-9.441649,-5.943312,-8.812954,4.781208,9.171723,7.372081,-7.888080,-1.972106,1.605523,-0.854268,-0.661704,-2.866840,-6.455545,-1.791822,2.884761,-0.268922,1.366082,-8.753567,6.271676,9.317226,2.834017,-1.044974,-3.469410,-1.507031,-3.470317,6.021356,1.510460,-9.700389,4.157468,-8.368723,1.930025,-8.004793,2.483995,0.916859,-8.999786,-8.757298,6.411598,0.256872,7.232461,-7.139590,-5.460968,-1.591945,8.756317,2.799910,4.373751,2.268250,-0.605365,0.166801,-1.557061,-7.376285,-4.782594,-2.321104,-9.170067,7.199895,-8.567625,6.566926,-8.466981,-8.485196,-1.755279,-6.351834,9.232719,7.510517,1.570341,0.693639,0.845028,-8.110000,-4.880334,5.953626,-2.303507,6.748515,-2.180931,6.480403,-1.378843,-2.805447,4.816666,4.816854,-7.114548,-9.952334,0.444437,0.958017,-6.780992,-0.259875,4.487021,5.520425,8.641170,-9.028401,4.666979,-8.133114,0.711303,-3.023043,1.383827,4.514569,-0.013277,0.427219,9.694584,-6.889191,-2.298492,1.087257,8.924034,4.924544,4.358426,-6.944736,6.856797,-5.465941,-5.195043,4.275215,-8.820353,1.735299,-6.516843,5.307889,-4.360193,3.473198,-6.887938,-0.473033,9.406401,-9.604294,6.287366,6.535613,6.283389,8.037998,7.432705,3.455226,0.606048,-5.454679,5.604001,3.106433,-0.712093,-7.364533,5.896564,-4.548855,-2.081942,6.408779,7.678725,-8.884555,4.733639,-5.280374,-8.193117,-3.228591,6.322364,-0.034655,-8.357955,-8.918746,-7.885550,-5.395165,4.743721,5.158220,5.579291,0.905322,3.016999,-8.548876,0.898924,7.133900,-1.865798,2.200961,8.272006,8.141611,8.054739,-3.852641,-3.329400,-8.959448,9.314785,-9.326388,-1.043093,6.594241,0.782924,-5.018161,3.324591,6.852363,-0.093749,6.617155,-2.062805,4.293711,-5.721694,1.966963,-2.796020,-4.689173,5.556376,5.302011,-0.238922,-3.154046,-0.874295,-3.557324,-4.679301,5.331157,-3.791997,-7.971771,6.523488,-2.235098,8.715829,1.035739,2.095233,9.149289,-6.096844,3.595605,-1.905731,-3.192306,-1.260778,-3.148048,-8.844544,5.830337,-5.469338,8.373095,-3.577945,6.435270], dtype = "float32")#candidate|11605|(1210,)|const|float32
call_11604 = relay.TupleGetItem(func_8234_call(relay.reshape(const_11605.astype('float32'), [11, 110])), 3)
call_11606 = relay.TupleGetItem(func_8236_call(relay.reshape(const_11605.astype('float32'), [11, 110])), 3)
output = relay.Tuple([call_11593,call_11604,const_11605,])
output2 = relay.Tuple([call_11594,call_11606,const_11605,])
func_11618 = relay.Function([], output)
mod['func_11618'] = func_11618
mod = relay.transform.InferType()(mod)
output = func_11618()
func_11619 = relay.Function([], output)
mutated_mod['func_11619'] = func_11619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_11677 = relay.TupleGetItem(func_4836_call(), 0)
call_11678 = relay.TupleGetItem(func_4838_call(), 0)
output = call_11677
output2 = call_11678
func_11697 = relay.Function([], output)
mod['func_11697'] = func_11697
mod = relay.transform.InferType()(mod)
output = func_11697()
func_11698 = relay.Function([], output)
mutated_mod['func_11698'] = func_11698
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11816 = relay.var("var_11816", dtype = "float32", shape = (13, 16, 7))#candidate|11816|(13, 16, 7)|var|float32
var_11817 = relay.var("var_11817", dtype = "float32", shape = (13, 16, 7))#candidate|11817|(13, 16, 7)|var|float32
bop_11818 = relay.divide(var_11816.astype('float32'), relay.reshape(var_11817.astype('float32'), relay.shape_of(var_11816))) # shape=(13, 16, 7)
func_7897_call = mod.get_global_var('func_7897')
func_7898_call = mutated_mod.get_global_var('func_7898')
call_11824 = relay.TupleGetItem(func_7897_call(), 2)
call_11825 = relay.TupleGetItem(func_7898_call(), 2)
func_6073_call = mod.get_global_var('func_6073')
func_6075_call = mutated_mod.get_global_var('func_6075')
call_11828 = relay.TupleGetItem(func_6073_call(), 0)
call_11829 = relay.TupleGetItem(func_6075_call(), 0)
uop_11841 = relay.atanh(bop_11818.astype('float32')) # shape=(13, 16, 7)
output = relay.Tuple([call_11824,call_11828,uop_11841,])
output2 = relay.Tuple([call_11825,call_11829,uop_11841,])
func_11864 = relay.Function([var_11816,var_11817,], output)
mod['func_11864'] = func_11864
mod = relay.transform.InferType()(mod)
mutated_mod['func_11864'] = func_11864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11864_call = mutated_mod.get_global_var('func_11864')
var_11866 = relay.var("var_11866", dtype = "float32", shape = (13, 16, 7))#candidate|11866|(13, 16, 7)|var|float32
var_11867 = relay.var("var_11867", dtype = "float32", shape = (13, 16, 7))#candidate|11867|(13, 16, 7)|var|float32
call_11865 = func_11864_call(var_11866,var_11867,)
output = call_11865
func_11868 = relay.Function([var_11866,var_11867,], output)
mutated_mod['func_11868'] = func_11868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11321_call = mod.get_global_var('func_11321')
func_11323_call = mutated_mod.get_global_var('func_11323')
call_11894 = relay.TupleGetItem(func_11321_call(), 0)
call_11895 = relay.TupleGetItem(func_11323_call(), 0)
func_9220_call = mod.get_global_var('func_9220')
func_9222_call = mutated_mod.get_global_var('func_9222')
call_11898 = relay.TupleGetItem(func_9220_call(), 1)
call_11899 = relay.TupleGetItem(func_9222_call(), 1)
var_11903 = relay.var("var_11903", dtype = "float64", shape = (15, 13, 15))#candidate|11903|(15, 13, 15)|var|float64
bop_11904 = relay.bitwise_xor(call_11894.astype('int64'), relay.reshape(var_11903.astype('int64'), relay.shape_of(call_11894))) # shape=(15, 13, 15)
bop_11907 = relay.bitwise_xor(call_11895.astype('int64'), relay.reshape(var_11903.astype('int64'), relay.shape_of(call_11895))) # shape=(15, 13, 15)
func_11864_call = mod.get_global_var('func_11864')
func_11868_call = mutated_mod.get_global_var('func_11868')
var_11910 = relay.var("var_11910", dtype = "float32", shape = (1, 1456))#candidate|11910|(1, 1456)|var|float32
call_11909 = relay.TupleGetItem(func_11864_call(relay.reshape(var_11910.astype('float32'), [13, 16, 7]), relay.reshape(var_11910.astype('float32'), [13, 16, 7]), ), 1)
call_11911 = relay.TupleGetItem(func_11868_call(relay.reshape(var_11910.astype('float32'), [13, 16, 7]), relay.reshape(var_11910.astype('float32'), [13, 16, 7]), ), 1)
func_8895_call = mod.get_global_var('func_8895')
func_8896_call = mutated_mod.get_global_var('func_8896')
call_11926 = relay.TupleGetItem(func_8895_call(), 0)
call_11927 = relay.TupleGetItem(func_8896_call(), 0)
func_8998_call = mod.get_global_var('func_8998')
func_9000_call = mutated_mod.get_global_var('func_9000')
const_11933 = relay.const(False, dtype = "bool")#candidate|11933|()|const|bool
call_11932 = relay.TupleGetItem(func_8998_call(relay.reshape(const_11933.astype('bool'), [])), 0)
call_11934 = relay.TupleGetItem(func_9000_call(relay.reshape(const_11933.astype('bool'), [])), 0)
var_11944 = relay.var("var_11944", dtype = "float32", shape = (1, 1456))#candidate|11944|(1, 1456)|var|float32
bop_11945 = relay.right_shift(var_11910.astype('uint8'), relay.reshape(var_11944.astype('uint8'), relay.shape_of(var_11910))) # shape=(1, 1456)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_11950 = relay.TupleGetItem(func_6725_call(), 0)
call_11951 = relay.TupleGetItem(func_6727_call(), 0)
output = relay.Tuple([call_11898,bop_11904,call_11909,call_11926,call_11932,const_11933,bop_11945,call_11950,])
output2 = relay.Tuple([call_11899,bop_11907,call_11911,call_11927,call_11934,const_11933,bop_11945,call_11951,])
func_11970 = relay.Function([var_11903,var_11910,var_11944,], output)
mod['func_11970'] = func_11970
mod = relay.transform.InferType()(mod)
var_11971 = relay.var("var_11971", dtype = "float64", shape = (15, 13, 15))#candidate|11971|(15, 13, 15)|var|float64
var_11972 = relay.var("var_11972", dtype = "float32", shape = (1, 1456))#candidate|11972|(1, 1456)|var|float32
var_11973 = relay.var("var_11973", dtype = "float32", shape = (1, 1456))#candidate|11973|(1, 1456)|var|float32
output = func_11970(var_11971,var_11972,var_11973,)
func_11974 = relay.Function([var_11971,var_11972,var_11973,], output)
mutated_mod['func_11974'] = func_11974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5567_call = mutated_mod.get_global_var('func_5567')
call_12022 = relay.TupleGetItem(func_5566_call(), 0)
call_12023 = relay.TupleGetItem(func_5567_call(), 0)
output = call_12022
output2 = call_12023
func_12043 = relay.Function([], output)
mod['func_12043'] = func_12043
mod = relay.transform.InferType()(mod)
output = func_12043()
func_12044 = relay.Function([], output)
mutated_mod['func_12044'] = func_12044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_12047 = relay.TupleGetItem(func_5163_call(), 0)
call_12048 = relay.TupleGetItem(func_5164_call(), 0)
func_7233_call = mod.get_global_var('func_7233')
func_7235_call = mutated_mod.get_global_var('func_7235')
call_12049 = func_7233_call()
call_12050 = func_7233_call()
output = relay.Tuple([call_12047,call_12049,])
output2 = relay.Tuple([call_12048,call_12050,])
func_12070 = relay.Function([], output)
mod['func_12070'] = func_12070
mod = relay.transform.InferType()(mod)
mutated_mod['func_12070'] = func_12070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12070_call = mutated_mod.get_global_var('func_12070')
call_12071 = func_12070_call()
output = call_12071
func_12072 = relay.Function([], output)
mutated_mod['func_12072'] = func_12072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11194_call = mod.get_global_var('func_11194')
func_11195_call = mutated_mod.get_global_var('func_11195')
call_12088 = func_11194_call()
call_12089 = func_11194_call()
output = relay.Tuple([call_12088,])
output2 = relay.Tuple([call_12089,])
func_12102 = relay.Function([], output)
mod['func_12102'] = func_12102
mod = relay.transform.InferType()(mod)
mutated_mod['func_12102'] = func_12102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12102_call = mutated_mod.get_global_var('func_12102')
call_12103 = func_12102_call()
output = call_12103
func_12104 = relay.Function([], output)
mutated_mod['func_12104'] = func_12104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6630_call = mod.get_global_var('func_6630')
func_6631_call = mutated_mod.get_global_var('func_6631')
call_12113 = relay.TupleGetItem(func_6630_call(), 0)
call_12114 = relay.TupleGetItem(func_6631_call(), 0)
output = call_12113
output2 = call_12114
func_12123 = relay.Function([], output)
mod['func_12123'] = func_12123
mod = relay.transform.InferType()(mod)
mutated_mod['func_12123'] = func_12123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12123_call = mutated_mod.get_global_var('func_12123')
call_12124 = func_12123_call()
output = call_12124
func_12125 = relay.Function([], output)
mutated_mod['func_12125'] = func_12125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_12151 = relay.TupleGetItem(func_4836_call(), 0)
call_12152 = relay.TupleGetItem(func_4838_call(), 0)
func_9121_call = mod.get_global_var('func_9121')
func_9122_call = mutated_mod.get_global_var('func_9122')
call_12160 = relay.TupleGetItem(func_9121_call(), 1)
call_12161 = relay.TupleGetItem(func_9122_call(), 1)
output = relay.Tuple([call_12151,call_12160,])
output2 = relay.Tuple([call_12152,call_12161,])
func_12175 = relay.Function([], output)
mod['func_12175'] = func_12175
mod = relay.transform.InferType()(mod)
mutated_mod['func_12175'] = func_12175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12175_call = mutated_mod.get_global_var('func_12175')
call_12176 = func_12175_call()
output = call_12176
func_12177 = relay.Function([], output)
mutated_mod['func_12177'] = func_12177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12123_call = mod.get_global_var('func_12123')
func_12125_call = mutated_mod.get_global_var('func_12125')
call_12267 = func_12123_call()
call_12268 = func_12123_call()
func_5051_call = mod.get_global_var('func_5051')
func_5053_call = mutated_mod.get_global_var('func_5053')
call_12279 = func_5051_call()
call_12280 = func_5051_call()
output = relay.Tuple([call_12267,call_12279,])
output2 = relay.Tuple([call_12268,call_12280,])
func_12284 = relay.Function([], output)
mod['func_12284'] = func_12284
mod = relay.transform.InferType()(mod)
mutated_mod['func_12284'] = func_12284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12284_call = mutated_mod.get_global_var('func_12284')
call_12285 = func_12284_call()
output = call_12285
func_12286 = relay.Function([], output)
mutated_mod['func_12286'] = func_12286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8702_call = mod.get_global_var('func_8702')
func_8703_call = mutated_mod.get_global_var('func_8703')
call_12339 = relay.TupleGetItem(func_8702_call(), 0)
call_12340 = relay.TupleGetItem(func_8703_call(), 0)
output = call_12339
output2 = call_12340
func_12363 = relay.Function([], output)
mod['func_12363'] = func_12363
mod = relay.transform.InferType()(mod)
mutated_mod['func_12363'] = func_12363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12363_call = mutated_mod.get_global_var('func_12363')
call_12364 = func_12363_call()
output = call_12364
func_12365 = relay.Function([], output)
mutated_mod['func_12365'] = func_12365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mod.get_global_var('func_6073')
func_6075_call = mutated_mod.get_global_var('func_6075')
call_12391 = relay.TupleGetItem(func_6073_call(), 0)
call_12392 = relay.TupleGetItem(func_6075_call(), 0)
output = call_12391
output2 = call_12392
func_12406 = relay.Function([], output)
mod['func_12406'] = func_12406
mod = relay.transform.InferType()(mod)
mutated_mod['func_12406'] = func_12406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12406_call = mutated_mod.get_global_var('func_12406')
call_12407 = func_12406_call()
output = call_12407
func_12408 = relay.Function([], output)
mutated_mod['func_12408'] = func_12408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12363_call = mod.get_global_var('func_12363')
func_12365_call = mutated_mod.get_global_var('func_12365')
call_12428 = func_12363_call()
call_12429 = func_12363_call()
output = call_12428
output2 = call_12429
func_12447 = relay.Function([], output)
mod['func_12447'] = func_12447
mod = relay.transform.InferType()(mod)
output = func_12447()
func_12448 = relay.Function([], output)
mutated_mod['func_12448'] = func_12448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_12466 = relay.TupleGetItem(func_4625_call(), 0)
call_12467 = relay.TupleGetItem(func_4626_call(), 0)
func_9510_call = mod.get_global_var('func_9510')
func_9511_call = mutated_mod.get_global_var('func_9511')
call_12474 = relay.TupleGetItem(func_9510_call(), 1)
call_12475 = relay.TupleGetItem(func_9511_call(), 1)
output = relay.Tuple([call_12466,call_12474,])
output2 = relay.Tuple([call_12467,call_12475,])
func_12485 = relay.Function([], output)
mod['func_12485'] = func_12485
mod = relay.transform.InferType()(mod)
mutated_mod['func_12485'] = func_12485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12485_call = mutated_mod.get_global_var('func_12485')
call_12486 = func_12485_call()
output = call_12486
func_12487 = relay.Function([], output)
mutated_mod['func_12487'] = func_12487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12406_call = mod.get_global_var('func_12406')
func_12408_call = mutated_mod.get_global_var('func_12408')
call_12511 = func_12406_call()
call_12512 = func_12406_call()
func_6791_call = mod.get_global_var('func_6791')
func_6792_call = mutated_mod.get_global_var('func_6792')
call_12527 = relay.TupleGetItem(func_6791_call(), 0)
call_12528 = relay.TupleGetItem(func_6792_call(), 0)
func_7233_call = mod.get_global_var('func_7233')
func_7235_call = mutated_mod.get_global_var('func_7235')
call_12533 = func_7233_call()
call_12534 = func_7233_call()
func_7960_call = mod.get_global_var('func_7960')
func_7961_call = mutated_mod.get_global_var('func_7961')
call_12542 = relay.TupleGetItem(func_7960_call(), 1)
call_12543 = relay.TupleGetItem(func_7961_call(), 1)
output = relay.Tuple([call_12511,call_12527,call_12533,call_12542,])
output2 = relay.Tuple([call_12512,call_12528,call_12534,call_12543,])
func_12554 = relay.Function([], output)
mod['func_12554'] = func_12554
mod = relay.transform.InferType()(mod)
output = func_12554()
func_12555 = relay.Function([], output)
mutated_mod['func_12555'] = func_12555
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12582 = relay.var("var_12582", dtype = "float32", shape = (16, 12, 4))#candidate|12582|(16, 12, 4)|var|float32
uop_12583 = relay.log10(var_12582.astype('float32')) # shape=(16, 12, 4)
output = relay.Tuple([uop_12583,])
output2 = relay.Tuple([uop_12583,])
func_12590 = relay.Function([var_12582,], output)
mod['func_12590'] = func_12590
mod = relay.transform.InferType()(mod)
mutated_mod['func_12590'] = func_12590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12591 = relay.var("var_12591", dtype = "float32", shape = (16, 12, 4))#candidate|12591|(16, 12, 4)|var|float32
func_12590_call = mutated_mod.get_global_var('func_12590')
call_12592 = func_12590_call(var_12591)
output = call_12592
func_12593 = relay.Function([var_12591], output)
mutated_mod['func_12593'] = func_12593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9879_call = mod.get_global_var('func_9879')
func_9881_call = mutated_mod.get_global_var('func_9881')
call_12628 = relay.TupleGetItem(func_9879_call(), 2)
call_12629 = relay.TupleGetItem(func_9881_call(), 2)
output = call_12628
output2 = call_12629
func_12647 = relay.Function([], output)
mod['func_12647'] = func_12647
mod = relay.transform.InferType()(mod)
mutated_mod['func_12647'] = func_12647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12647_call = mutated_mod.get_global_var('func_12647')
call_12648 = func_12647_call()
output = call_12648
func_12649 = relay.Function([], output)
mutated_mod['func_12649'] = func_12649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9176_call = mod.get_global_var('func_9176')
func_9177_call = mutated_mod.get_global_var('func_9177')
call_12698 = relay.TupleGetItem(func_9176_call(), 1)
call_12699 = relay.TupleGetItem(func_9177_call(), 1)
output = relay.Tuple([call_12698,])
output2 = relay.Tuple([call_12699,])
func_12722 = relay.Function([], output)
mod['func_12722'] = func_12722
mod = relay.transform.InferType()(mod)
mutated_mod['func_12722'] = func_12722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12722_call = mutated_mod.get_global_var('func_12722')
call_12723 = func_12722_call()
output = call_12723
func_12724 = relay.Function([], output)
mutated_mod['func_12724'] = func_12724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5342_call = mod.get_global_var('func_5342')
func_5343_call = mutated_mod.get_global_var('func_5343')
call_12750 = relay.TupleGetItem(func_5342_call(), 0)
call_12751 = relay.TupleGetItem(func_5343_call(), 0)
func_10895_call = mod.get_global_var('func_10895')
func_10897_call = mutated_mod.get_global_var('func_10897')
const_12755 = relay.const([False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True], dtype = "bool")#candidate|12755|(2112,)|const|bool
call_12754 = relay.TupleGetItem(func_10895_call(relay.reshape(const_12755.astype('bool'), [2112,])), 0)
call_12756 = relay.TupleGetItem(func_10897_call(relay.reshape(const_12755.astype('bool'), [2112,])), 0)
func_5285_call = mod.get_global_var('func_5285')
func_5287_call = mutated_mod.get_global_var('func_5287')
var_12770 = relay.var("var_12770", dtype = "float32", shape = (1, 1210))#candidate|12770|(1, 1210)|var|float32
call_12769 = relay.TupleGetItem(func_5285_call(relay.reshape(var_12770.astype('float32'), [1, 1210])), 5)
call_12771 = relay.TupleGetItem(func_5287_call(relay.reshape(var_12770.astype('float32'), [1, 1210])), 5)
output = relay.Tuple([call_12750,call_12754,const_12755,call_12769,var_12770,])
output2 = relay.Tuple([call_12751,call_12756,const_12755,call_12771,var_12770,])
func_12774 = relay.Function([var_12770,], output)
mod['func_12774'] = func_12774
mod = relay.transform.InferType()(mod)
var_12775 = relay.var("var_12775", dtype = "float32", shape = (1, 1210))#candidate|12775|(1, 1210)|var|float32
output = func_12774(var_12775)
func_12776 = relay.Function([var_12775], output)
mutated_mod['func_12776'] = func_12776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12554_call = mod.get_global_var('func_12554')
func_12555_call = mutated_mod.get_global_var('func_12555')
call_12792 = relay.TupleGetItem(func_12554_call(), 0)
call_12793 = relay.TupleGetItem(func_12555_call(), 0)
output = relay.Tuple([call_12792,])
output2 = relay.Tuple([call_12793,])
func_12805 = relay.Function([], output)
mod['func_12805'] = func_12805
mod = relay.transform.InferType()(mod)
output = func_12805()
func_12806 = relay.Function([], output)
mutated_mod['func_12806'] = func_12806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11112_call = mod.get_global_var('func_11112')
func_11114_call = mutated_mod.get_global_var('func_11114')
call_12845 = relay.TupleGetItem(func_11112_call(), 1)
call_12846 = relay.TupleGetItem(func_11114_call(), 1)
output = relay.Tuple([call_12845,])
output2 = relay.Tuple([call_12846,])
func_12849 = relay.Function([], output)
mod['func_12849'] = func_12849
mod = relay.transform.InferType()(mod)
output = func_12849()
func_12850 = relay.Function([], output)
mutated_mod['func_12850'] = func_12850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11112_call = mod.get_global_var('func_11112')
func_11114_call = mutated_mod.get_global_var('func_11114')
call_12988 = relay.TupleGetItem(func_11112_call(), 0)
call_12989 = relay.TupleGetItem(func_11114_call(), 0)
func_7369_call = mod.get_global_var('func_7369')
func_7371_call = mutated_mod.get_global_var('func_7371')
call_13029 = relay.TupleGetItem(func_7369_call(), 0)
call_13030 = relay.TupleGetItem(func_7371_call(), 0)
func_6284_call = mod.get_global_var('func_6284')
func_6287_call = mutated_mod.get_global_var('func_6287')
var_13041 = relay.var("var_13041", dtype = "float64", shape = ())#candidate|13041|()|var|float64
const_13042 = relay.const([6.176827,-8.455481,-8.065328,8.009086,-4.123489,5.219116,3.200513,7.204290,-9.691470,7.789797,-4.398199,-8.753072,-7.409101,-0.899982,-5.421703,-7.863985,3.112582,-6.371907,-0.113753,-3.293261,8.399448,-6.884961,-1.148773,1.875790,4.792911,0.051496,7.804147,-7.888567,-4.997767,2.476722,-5.074780,-1.428188,-7.807100,7.196273,-8.339506,-4.167341,-6.784324,-1.716795,-5.690253,9.248476,-1.301697,9.427816,-8.310875,1.998035,-9.245075,7.267538,-6.934704,9.051892,-5.914173,1.022555,-0.982552,7.992464,-0.548213,-3.663923,7.277892,-9.140089,-8.332456,8.290440,3.252933,8.677985,6.059868,-5.424070,-4.616311,1.050339,8.164930,4.059907,-6.103913,-4.263671,-1.524921,2.428491,-6.996107,1.050201,-6.660473,9.881105,5.148606,7.830144,9.224011,-3.503166,6.644824,-1.281414,2.946028,7.291612,-2.664577,-3.588896,-2.950892,4.622032,-3.310987,4.471994,4.496562,-2.625649,6.520876,-7.353016,-7.992499,-6.265809,-9.994675,-3.180159,-3.749503,0.660405,0.721883,5.206072,2.032599,-6.649449,1.809128,-3.138923,-5.506808,1.065883,1.516153,-9.163605,-4.040051,1.744119,8.400876,-6.308967,0.667109,9.722930,-8.411662,-4.280980,4.653922,2.974549,-6.158885,1.978614,-9.257800,-8.993798,-2.620545,3.626100,4.436723,3.875057,-4.163455,-8.562612,6.652138,-3.351136,-0.145162,-2.318790,3.435415,-6.265810,1.871651,-1.945938,-8.305854,1.359314,4.157650,-1.027640,-3.310658,-6.073999,1.534956,-2.592978,-7.612293,-0.880860,-6.559913,-4.393394,-2.089391,9.501535,-1.425135,-7.827169,8.982561,-9.127960,-5.950256,1.254969,-4.159552,-8.276285,5.559507,1.229563,2.225825,-1.035696,-0.708329,-0.444213,-7.448286,-6.908046,5.162208,7.423427,7.887447,-7.263975,-8.667090,-4.956491,5.714113,5.385591,5.753000,-2.574160,-8.188063,-0.859374,0.740260,-8.669572,2.656501,-3.586539,1.321294,3.139577,3.086401,-4.579536,3.533637,7.836359,4.506771,9.215032,6.283612,-4.429544,1.664402,-3.114130,4.462423,-1.407556,5.788215,8.454574,-2.857801,0.608095,-9.825798,-3.810940,-0.332286,-9.973637,-8.573343,0.115749,9.498744,2.532631,-0.662094,2.040736,-9.737503,-0.600292,6.538655,-0.262329,-8.511875,6.479055,-1.987336,8.614927,3.277346,-6.303411,8.339274,2.299833,2.786652,8.882028,-4.396459,7.508980,-0.631052,7.921775,-0.566094,-1.558768,3.919987,7.503421,8.155035,2.113317,3.043880,-9.647956,1.409403,2.305001,-9.142970,-7.592359,-2.019162,-3.202028,-3.305713,-5.444702,2.981324,0.637345,-5.423479,-5.153560,8.481320,1.332961,-4.565139,-2.177759,2.933069,-5.510058,-3.108750,8.140157,3.061101,-0.921948,8.712886,-7.771616,0.574724,8.201816,-8.039194,9.232947,7.611869,-0.262395,-2.082786,0.920711,2.598914,6.940192,4.418390,-9.278272,-5.918430,-7.618744,7.732129,8.376883,-1.333032,-8.871985,-7.235330,5.132995,-2.324581,6.887472,-5.190696,1.075433,9.440529,3.170489,0.712862,8.092095,-3.700537,4.999925,-7.396819,-8.123540,5.233648,6.937900,-9.243071,-8.516825,9.996877,6.578027,-8.370844,4.964468,-0.021365,-3.805642,-8.391871,0.135241,8.440781,-6.529405,8.102371,6.821232,1.665788,3.895757,1.071963,8.238698,2.323660,-5.921986,9.947081,0.011518,-2.404650,3.636080,1.223630,-7.865557,4.678080,-9.350667,5.315278,0.212633,1.104692,3.550113,-3.703047,6.009988,7.182681,-1.899307,5.891730,-2.302276,0.029435,-8.319888,0.852344,-5.407849,9.636957,7.232191,-4.433074,3.757933,8.431446,-7.608405,6.746880,-8.657461,5.796057,8.279282,-1.190589,-9.902342,0.957324,0.715569,1.615742,4.275539,-2.419975,-4.649423,-1.642723,-1.737947,-6.337891,8.966967,-6.611330,-1.852985,-0.830359,-1.025609,-9.461014,8.450069,4.594946,-8.147956,-0.493676,5.263408,-9.252580,1.329160,-8.267079,5.573153,-3.689861,-8.291144,-8.248792,-8.145959,3.864172,7.104088,8.183550,9.871952,4.022838,-5.826080,-2.556418,0.369274,1.000685,4.620895,-4.620613,-0.251622,5.802424,-4.670875,3.516859,6.938484,9.009451,-4.973955,3.060060,-1.043873,2.151198,-7.574985,-9.893744,7.731274,-2.469213,8.125216,1.158033,7.886639,8.680629,-3.218245,-3.352356,1.721801,-6.579593,-8.587129,2.391420,4.004578,6.139679,-9.871879,9.573666,9.122172,-0.514831,-8.030648,-2.141620,5.735784,5.514530,9.920380,2.610119,-0.276887,-6.321049,7.479241,4.234264,0.864554,-4.108716,-5.891073,2.285240,5.642479,6.338777,1.543036,0.285140,4.889991,-6.498433,-8.005017,4.842032,0.170270,8.484601,5.250244,6.621577,-3.420494,3.792044,8.584565,-7.804432,-4.797103,6.228462,-8.764480,-0.790151,0.342056,-6.335910,-7.191877,-7.842057,1.034060,-3.932562,-0.419769,9.194878,7.794501,-6.247726,5.461147,4.464520,-5.218600,1.033599,3.211943,-0.435374,-4.600070,-8.804103,-4.251384,8.535845,1.206277,-3.594516,7.611102,-5.901122,-5.299267,-6.103834,8.366084,-6.101860,-6.740447,-4.272929,4.392713,-1.084155,9.931893,9.449320,-8.793966,-5.489417,-5.147493,9.862052,-3.045160,3.076480,-3.038983,4.378871,1.276445,2.143488,8.708613,-6.734166,-1.565254,2.573971,2.561747,3.461609,8.944364,7.463315,2.664646,4.218117,-7.771843,-3.840130,-1.056880,4.628150,3.098121,1.005475,-3.461150,-7.088564,8.195891,5.880543,-7.216221,-2.608464,-4.436360,8.115388,-3.136828,3.690145,5.338588,-5.436915,3.819778,-6.594434,-0.921469,-1.533991,7.234442,-6.195859,-4.905486,4.439588,-2.453911,-6.021122,-3.637867,-9.971144,-1.653133,1.996128,-9.726245,-4.119196,5.072927,-3.254637,-1.901443,0.683603,5.233924,-1.525002,0.722445,-7.779686,1.873319,-7.837924,0.097040,3.214606,-3.461991,0.634275,-6.025259,0.997660,-5.984530,4.529204,-8.123349,-9.731933,-2.318480,9.358508,7.455149,-3.037504,-6.433732,-2.770256,3.915356,2.247696,-9.591775,-8.058946,-2.136287,3.304644,-9.413749,-4.175958,0.803272,-8.144252,6.795458,5.331460,-9.662101,-2.172469,-6.098394,-0.755522,-5.241792,7.386749,-7.783572,7.629393,6.583633,-9.286616,0.204733,-4.722276,0.652588,8.443052,-3.375701,2.283382,-3.464689,6.704911,-2.198303,-8.399983,-4.189418,-2.936889,-6.601203,2.451260,-7.228972,3.655490,-9.400966,-8.164849,-3.486753,5.152510,-3.149159,0.282195,-3.203116,5.888743,-1.728333,0.869933,8.429768,-7.470189,3.885369,-8.654546,1.712775,7.855706,1.723692,3.852913,0.804121,1.127046,-7.065618,-7.531484,9.533561,4.724830,-7.015484,-4.366703,-9.278134,6.261339,8.977452,2.008550,6.217168,-9.945653,-3.019517,-4.182035,-3.289087,2.149163,5.211224,3.883436,8.787500,-2.720152,8.918021,-4.695920,8.370936,3.601459,7.531697,0.856072,-8.027947,7.588204,-3.385475,-4.479625,9.524361,6.734910,-7.171809,-7.093048,2.576917,7.059482,5.138183,2.005001,7.118051,5.412685,5.719151,5.793406,3.978355,9.499616,-1.384043,-9.443355,6.220342,-9.768358,3.981290,-7.020658,-1.198252,3.487221,3.163648,-4.845548,-1.027488,9.484068,1.826418,7.249681,5.235734,-3.782072,-0.726219,-0.320089,-8.754531,6.407934,2.640088,-1.399703,6.341807,0.965649,-5.812536,9.298082,-9.202957,4.039408,8.778137,-8.900114,2.082467,5.974527,8.480398,6.517175,-1.055630,9.294589,-2.193627,7.214498,-2.668423,-8.108241,2.133607,7.406588,-8.440171,7.552433,1.830164,1.347541,-4.036070,-6.016584,-4.050554,5.415490,4.265753,-9.908595,-6.033419,8.538102,-6.113116,-2.672372,-5.500836,8.054649,-2.713329,-5.010516,-4.858901,-0.176438,-2.485909,5.228081,-0.699778,-1.927239,6.278829,-1.685399,-8.291474,-7.289030,3.194620,-3.934071,-6.316874,9.121385,-6.647950,-6.883256,4.712076,5.749540,-2.097318,-1.821046,3.358246,-7.552662,3.268091,5.957789,-2.601482,-2.479552,-6.594470,5.521796,1.752462,0.205596,8.320259,-0.156128,-9.601796,-5.677757,-9.829711,4.343141,5.154504,7.882295,-4.696038,0.821501,-4.716586,1.495280,-8.296535,-4.022697,3.796442,-7.545231,7.427601,9.649885,-9.610374,-3.984771,-0.381282,9.273344,9.327165,-7.718315,8.901843,3.618033,3.845177,-1.871364,8.025152,4.912185,-5.299767,7.135021,1.099402,9.373200,9.272510,-8.030905,9.351065,5.041209,-4.226279,5.502191,2.690112,-4.928804,5.444915,4.600927,6.526081,3.534474,-8.075107,4.745839,3.996249,1.063485,5.505914,-5.358432,0.513263,6.056813,4.624548,8.665471,9.604414,5.156679,-8.637638,-4.505453,-1.239129,6.309272,-7.619269,-1.742558,5.809113,-8.872644,8.411292,-5.990012,5.626664,2.128854,-2.134165,7.397727,-7.039566,-0.903756,3.494472,-6.593392,-7.343945,-8.194567,-0.548173,-7.687552,0.158989,-1.005326,0.693854,1.788186,6.431851,1.528489,-9.282592,4.209509,9.642562,3.516973,-1.756558,-7.044156,-9.502216,-0.577980,4.707903,-0.818088,9.980498,-2.517892,1.239904,8.269115,-9.996445,-9.556174,-2.997941,7.215407,3.716609,-6.902235,-4.141680,-3.435081,-1.323643,4.846348,2.374059,-0.807673,1.774874,7.072665,-9.666400,5.417330,1.701595,8.664811,3.515437,-7.216869,-8.225956,8.418148,9.390490,0.804116,-8.188540,-3.109185,-5.667734,-2.779417,5.406212,5.127971,3.810283,-8.956984,-5.291555,-7.659005,-8.585090,4.138683,2.022024,0.331867,-4.850996,-4.198651,3.281663,5.953400,1.758963,4.861554,1.800111,0.142355,7.050957,-9.696711,0.886843,-5.692452,2.261852,-2.150469,-6.686355,4.922841,-6.943310,9.130691,-6.652290,-4.628437,-6.361514,-7.827464,-8.183503,-6.021774,3.660312,1.442253,6.808190,-5.655485,6.018613,-5.674194,-5.465385,9.300995,0.850407,9.642521,3.038045,-4.573757,8.723291,3.177110,-0.719568,-9.277165,-6.488705,-4.016799,8.780083,-6.117868,-1.636642,-4.208184,4.290994,0.261180,-4.755218,-0.089140,-8.636166,2.339406,-5.055433,2.679595,0.990619,-6.412930,-4.169850,9.189318,-3.489690,-7.849056,-8.955017,3.788726,-5.806229,5.423037,9.041964,-7.821117,-1.927489,-0.037782,8.582763,4.773037,0.763034,-3.126259,-5.589080,3.400452,-3.117172,9.144183,-0.658385,-7.347873,-3.850305,7.295337,9.123483,2.745283,9.116524,-0.385904,-5.585813,5.511886,-1.610980,0.709275,-2.260036,9.987506,-3.463475,6.534448,5.514630,-3.417430,9.105589,-5.700775,7.451305,-8.339384,2.127121,7.432471,-9.459383,7.375945,2.041220,-1.768522,5.061693,-6.899402,-7.027149,-8.104262,9.625177,8.882505,-8.596960,0.708084,-7.567902,-1.623874,4.533740,3.105794,4.121453,-5.245642,0.172465,-8.713211,-3.416204,-3.246507,-7.357449,-4.041451,6.603200,9.965349,9.803742,-4.058420,-1.814546,2.342896,-5.290857,-3.625396,9.874927,-4.360984,7.924670,0.259441,4.438773,-1.059735,-5.851412,8.967164,0.510567,3.366324,-5.290193,-3.453498,5.711028,-1.072658,-3.025886,2.176745,1.255587,-0.689035,-2.161266,-4.644610,2.343271,0.094090,2.093688,-2.028962,3.607560,-8.691282,5.159325,5.913508,-9.134019,-0.937027,-5.238603,4.794623,-5.019363,-2.824096,2.633939,-7.810540,0.139019,0.279696,4.836643,7.965515,9.174479,-5.129818,-4.513487,6.164648,9.181144,5.570865,6.064323,1.754954,-3.732425,-3.351440,-4.091657,6.418505,8.195431,-8.584347,-1.154321,0.622082,6.068005,-9.751921,7.104669,4.152546,9.518704,-5.808022,7.237856,-9.055738,5.374837,2.382594,-5.703408,-7.465804,7.233865,-3.732111,-5.428579,-1.062444,9.291112,-3.176970,-7.026207,7.673074,-1.034388,4.645342,6.484044,-0.298483,-3.000693,-6.132311,-9.291805,-8.970969,2.513551,8.581153,5.257118,-8.996603,-8.651484,2.161372,-3.427361,-4.808609,7.284080,-8.833816,-7.310772,2.080335,-5.810931,0.363234,-9.206314,2.567167,-2.204793,-7.600975,-1.050142,-2.177704,9.089903,7.043617,-2.137419,-2.333672,4.175479,-9.220949,0.986166,2.938224,5.559854,-5.444816,-2.762548,1.718703,-4.503314,-6.873898,-7.596550,3.183039,5.876979,0.760957,5.078216,4.591314,-9.113911,-4.189825,0.113556,-5.648689,-3.330124,5.414684,-1.832058,4.292739,-5.056104,0.471837,-4.093651,-6.956623,4.462954,0.128541,9.520249,-2.323506,-3.771142,-0.345285,-6.597011,-3.538169,5.925278,4.336733,-6.429033,9.434230,3.996178,-0.270810,6.092735,2.003740,-3.179423,3.002007,7.460594,-5.655484,-9.980908,3.410246,4.519803,2.394751,8.015821,-2.765042,3.576772,-0.288382,-0.127074,-0.594105,1.177354,-9.114628,-1.178934,-4.544048,9.998217,6.466749,7.889854,-0.402665,-9.079575,8.715281,8.475879,-4.061920,6.180167,8.633219,7.136972,-3.498066,0.134342,-3.449411,-6.565937,9.317531,0.052240,-1.527477,5.845755,5.647706,-3.402707,-1.830796,-6.655775,7.318369,8.186019,3.986990,-0.010999,-2.319085,9.060734,-8.966141,3.296499,7.696746,-9.734926,4.052036,4.839039,-9.465542,7.334103,7.423045,4.201339,-3.752104,5.905576,7.136027,7.877797,5.893606,-8.047849,-4.372840,1.538875,3.769417,4.414414,3.930689,5.276440,9.642092,-0.134047,7.001246,6.844636,5.346082,5.410040,-8.372655,-5.083464,8.341023,1.821174,-0.385505,-2.704956,7.621124,-2.292435,-2.934877,-7.779916,-2.352839,-5.155137,-8.432738,1.034337,-4.636392,-7.487330,6.798414,-0.048490,9.081263,3.125681,-4.338555,0.486940,1.409562,-7.618414,-8.472943,2.322749,-1.348154,-4.130181,5.610821,-1.360304,-0.279214,0.516474,9.419822,4.054179,2.538385,-1.112903,-5.303592,4.653449,0.469442,6.402236,-6.154941,-4.476091,-0.239430,2.902200,7.602378,7.226534,-4.878291,7.147351,-2.752415,3.595672,3.957947,5.545884,8.130542,-0.302666,-8.715637,-0.278313,-5.081293,6.125629,9.443793,9.999640,-5.419081,3.433201,2.809499,-1.069938,6.722804,0.182896,0.838012,-6.586646,-8.867858,6.725425,-8.850680,5.737042,7.663524,2.993459,-1.184803,3.304279,2.133264,3.056694,7.607571,-5.321776,5.472302,-4.034418,-9.558245,-0.103254,4.292780,5.977259,5.384094,-5.653096,-8.995103,-9.183604,-9.252385,6.417472,-2.372847,-2.596282,2.943505,-1.281107,5.906350,0.373756,1.476417,-3.160391,-2.864633,-4.012926,-0.899830,-9.717138,-7.332040,2.421085,-5.238953,-3.980340,-5.151049,-2.397089,7.338454,-2.073309,4.088884,-5.442222,5.355098,6.001004,-1.377601,-3.210137,8.491204,3.763969,8.264966,-6.741937,-2.375556,-1.251451,-3.620020,-7.506242,7.220113,-5.960183,-7.258908,0.435944,3.067127,2.289203,-0.157971,-2.011393,-3.160395,0.438015,3.395346,7.061014,-0.760465,-0.789136,4.189788,-7.838863,9.220219,8.708924,0.579176,-0.426643,-1.324401,-5.475119,3.732242,-5.750067,7.116548,2.245873,7.265302,-2.049683,-3.807614,-6.641818,8.707471,-1.125607,6.000240,-4.895982,-7.655018,8.480733,5.179694,8.326924,3.574510,-7.422231,8.572539,8.510374,8.278162,-9.105721,-9.547591,4.466455,0.300517,-6.283895,6.520602,1.314904,7.656168,-3.581938,-8.906298,1.298168,1.048225,-8.479127,1.443349,-1.481518,5.359070,-2.385945,0.721801,8.369410,9.730493,-9.718681,0.205019,-7.822271,-4.344468,3.770543,-9.913643,-4.091224,-7.321895,-1.304123,-7.885053,-6.386215,5.106537,3.442941,-1.108016,7.029339,4.428012,0.255369,2.928205,5.865137,-9.561433,1.190313,-4.017292,4.239842,-2.318379,-4.713594,-3.674993,5.503606,-0.080388,-1.511822,8.667683,-2.824648,2.578543,5.233894,-8.344159,6.861638,7.861809,3.689935,-6.515579,2.617101,7.954771,-2.346783,-6.873524,6.913809,-5.400463,-0.682116,-7.506016,-2.552699,-7.531939,-8.086130,8.890951,0.948550,-4.789226,-0.818064,7.760413,-3.471902,3.020522,-5.682269,-4.377163,-1.991305,-3.097030,-3.275554,-3.627712,-7.496972,6.365503,2.451359,-5.450781,0.826951,1.865152,-5.713498,0.729420,2.825959,2.958147,8.263553,-5.971303,-6.057723,-9.391456,7.514702,-8.419616,3.385481,-4.911380,-5.914027,8.828687,-0.266567,4.343170,-1.177423,0.544326,3.478811,7.170332,-1.716325,0.215291,-4.386346,6.682952,-0.834548,-8.665648,5.244520,-9.363313,4.600108,-5.548456,-6.178672,-4.312677,-3.132156,3.446379,-5.597302,-4.400492,-1.870066,-4.534566,8.434289,-4.360853,0.292582,3.999356,3.352963,-1.600521,-1.918306,-6.052259,-0.801572,6.893516,-8.202876,-5.766192,6.456765,8.315741,-3.537873,6.135682,-0.520102,9.082878,-5.420082,-7.231901,-5.617445,-8.747954,8.840018,-8.264102,-1.670035,5.332071,-4.512581,2.376402,-2.004745,2.074899,-6.129166,7.609367,-7.460085,-8.865756,0.343908,-3.815320,8.573048,-8.123416,-6.418672,-5.510141,-4.620766,5.335570,-3.023717,3.680366,-3.257824,8.656980,4.759084,7.124464,-2.552201,-4.043737,-5.467660,7.425132,5.837875,5.892413,-4.603591,-9.600516,7.333732,0.291801,0.190878,-4.374951,7.903031,-1.046106,-5.891925,-3.814104,-4.541763,5.364020,-9.867609,-9.629388,-5.877461,4.497750,-1.922917,-8.852037,6.449456,1.510596,-1.983259,-2.165144,9.217585,-3.702523,-4.820590,-6.563153,9.861348,-0.288839,9.965795,6.825732,-7.974747,-0.242705,6.293990,-2.122787,5.607844,5.687145,7.787245,3.815253,-7.045845,5.614199,1.288722,2.087200,3.780310,-6.582220,0.160569,-4.884479,-7.551447,-2.802110,1.790143,-9.106362,-2.380321,-8.869132,-3.098014,-7.025409,7.293483,4.783497,-6.618349,7.300146,-0.916959,-3.568054,-5.926811,3.924578,2.330373,-5.213809,-6.731270,3.150347,-3.189385,9.674956,-7.798236,3.131574,4.701987,-2.122515,-9.073355,8.699778,5.691235,-4.449013,-8.734736,-3.130539,8.702026,5.080225,7.434514,-1.274346,-9.287369,-7.041918,4.241829,7.389211,7.952655,-7.520347,5.277481,-5.901406,9.943781,-4.767086,3.295475,-7.980708,9.888376,-7.322668,-9.104164,-1.835047,-4.229789,2.531677,3.623022,-1.471193,-0.178707,-0.528753,-0.785390,-6.129424,8.185593,-0.332505,8.246064,1.930081,-8.971473,-9.200214,-2.403725,4.776062,3.403484,-2.474123,7.667215,1.914180,-6.931023,-5.674557,1.632261,-4.048918,1.012423,3.105698,0.364222,-1.635763,-0.701629,5.036629,1.268565,-5.971677,6.822847,1.630645,0.046597,1.854360,-7.864372,9.838537,-5.544872,-4.389233,-1.968651,3.537744,-2.931750,0.273266,-7.132205,7.148086,0.208610,-4.313429,3.592951,-4.929408,2.507042,-4.424420,5.631238,9.870496,0.655872,9.059739,6.499187,-6.647371,-7.515321,-7.809989,-2.769669,5.398942,8.729824,-2.484647,7.335117,-4.867331,-9.486169,0.212551,-8.936359,-7.185589,-8.552943,7.943799,-3.321045,-3.971040,4.358687,3.206805,-6.953849,2.671946,-8.298398,-7.560460,-1.270776,-4.758659,6.382707,-8.901695,-2.543639,-6.494820,7.322313,-7.528045,6.777482,-7.523012,-3.764029,-6.151755,-9.190391,-1.058956,1.082922,1.737875,4.108619,2.971775,6.190161,-9.073804,-0.013909,-7.275985,-8.286489,9.033992,7.991395,-5.413870,7.543885,2.454818,0.305730,-3.102204,-6.756997,-1.510349,-2.801980,4.165255,-5.824808,1.572054,-2.714638,-1.184140,0.734626,-7.995935,8.303790,-4.602884,7.363760,8.934869,0.228975,1.476797,9.509712,-5.981617,2.010887,3.835949,2.778606,-9.080183,-0.773690,9.302146,-1.601760,0.774594,-6.352102,-5.149011,4.753754,-7.663402,-5.203890,-7.424575,-7.700604,3.740811,-7.047822,3.910767,1.860125,8.820299,-2.497704,8.706804,-3.686846,-9.708922,-8.174471,-7.229608,-0.022097,2.880471,9.706016,-5.284261,-6.010154,3.456000,-5.908092,-2.686555,9.094945,-7.406546,-5.426851,-2.693322,-4.052989,-6.329318,-0.147268,-1.967524,9.497959,9.310287,4.502923,-7.580614,7.195081,7.109596,-8.847197,0.176536,7.509655,2.974992,-2.359504,6.457677,3.085872,6.579992,-3.165594,-0.947628,0.023991,-0.937676,-2.680982,-9.986559,5.047106,3.688828,-0.284134,9.857536,-4.510657,9.242813,-6.469028,0.848611,-7.744577,8.502753,-1.823507,4.442557,8.167021,6.467858,-0.276766,1.762841,0.851177,-9.855053,-4.750738,1.839177,-5.602490,9.898331,0.171159,-7.327258,6.493083,8.705423,-7.029070,-3.823332,-9.376238,5.891486,9.915719,-2.046427,6.853431,-6.203693,-4.200961,7.971895,7.381504,-4.218788,6.731029,-1.748145,-5.093616,0.918740,-8.181930,4.474350,1.722136,-8.006794,9.721102,9.137426,5.938482,-5.538918,3.510304,-1.013304,-5.263790,-4.524965,-6.549967,9.986085,-1.690542,6.210607,-0.386593,7.731940,3.604320,-2.453140,9.736819,9.356988,-1.484221,-4.611607,9.716330,-3.793877,8.771573,-1.263738,8.517370,3.951022,-6.120049,1.804164,1.417064,-5.987296,-4.135801,4.760255,-7.279564,-1.268966,5.760348,-7.239122,1.143877,-8.613989,5.171110,-2.018353,-8.530665,-3.139105,-0.583950,7.509858,8.412336,-1.561781,2.685026,3.139395,9.761091,-0.969738,-6.576611,1.040912,6.915230,8.166319,-1.023400,3.952115,7.215993,2.784804,2.342463,6.445927,-9.639953,-6.251326,2.378757,0.737687,3.254518,6.313661,2.915604,-2.200878,8.272923,1.136175,8.597302,-7.534063,9.648653,4.059532,7.505383,9.586491,-3.937517,8.690690,3.399646,-8.907692,-8.493313,-8.126493,6.295422,-2.108667,-4.612208,-9.346448,-7.901440,-5.096939,7.755472,2.369406,-0.588025,-0.870824,-4.658969,3.014301,7.548920,1.104816,5.277247,2.896892,-6.868374,5.300131,7.254946,-8.720101,1.327182,8.897692,-0.486744,5.953614,2.594748,-0.957636,0.427647,1.074950,7.529491,-2.243033,5.400819,0.484648,4.606488,-8.011268,6.885546,-0.393161,-2.418443,7.863841,-1.451962,4.735017,-1.686964,-1.939692,8.388962,-9.963677,-1.615963,-4.271315,-8.838764,8.220619,-2.454228,7.022644,-6.160925,-1.526958,8.609159,-8.144859,-4.922796,-7.635045,4.907732,-9.296281,-5.276366,7.664116,5.905469,-2.803441,-5.512804,5.109991,-8.516581,-7.192295,7.228369,3.374104,-4.377636,-9.159471,3.944401,9.200318,7.678340,-4.717496,6.882265,-0.587828,1.706813,-6.080009,-0.725534,-4.251610,-6.978267,-3.170424,-2.427251,3.932538,8.894841,6.676378,-5.543594,2.396483,1.511550,9.325366,7.685281,6.657861,8.672240,-9.637908,-8.609334,-2.982314,3.210688,-4.557033,-9.712459,-1.765169,1.947471,-7.259926,5.630333,-5.454211,5.481078,6.683236,5.765455,4.865965,-5.261873,6.674287,3.585388,-1.636920,-4.829565,-7.824452,-8.080510,-0.257998,-6.304315,7.975384,-5.223837,-0.541607,1.441193,-2.134776,0.311868,1.478671,-2.905373,-8.707947,-5.819845,-6.256213,8.845377,5.527245,-2.478889,0.615192,4.561731,-0.742565,-9.187606,0.191825,-1.736012,4.503030,-5.697648,1.180748,0.858918,-7.661808,-6.034095,-3.001982,8.147652,2.773851,8.705261,-2.263495,0.896259,-7.737226,-7.542892,-7.627052,3.231724,-6.227312,-2.200652,-3.343508,7.623709,-0.445698,-5.839791,5.429807,-4.086022,4.816726,4.850820,-3.163972,-0.339205,1.184390,8.326669,4.215249,7.729915,-7.460942,6.503432,1.050332,7.753549,6.841060,-2.636261,8.948940,1.392973,-3.894358,-1.122893,-3.644076,0.189608,3.285963,9.927165,8.878828,-5.185854,-4.243719,9.797348,-3.461086,4.040661,-3.521512,-5.419982,2.019412,-3.439445,7.373713,-5.253987,9.980583,9.882843,-6.348338,2.099715,4.783659,3.287799,5.092889,8.493609,6.200845,5.201288,-7.191242,9.932509,-3.663970,7.309662,8.390991,8.861191,9.944700,6.180452,3.313489,1.851047,6.208069,-1.289110,4.206063,-1.250643,7.085919,-2.186953,-2.972694,9.202773,4.470174,-0.919452,-8.980033,7.668102,-4.940528,-7.569617,9.882986,-2.494271,-8.058056,-3.394672,-8.796692,3.068315,-2.996005,8.734176,6.126891,0.688755,3.655399,6.934665,1.671192,9.859501,-4.060928,8.222750,1.002656,-0.662137,4.353917,-2.911187,1.404071,3.589611,5.089724,-9.996003,8.525947,-8.943470,3.234719,-7.600878,-7.297924,-0.547169,9.968897,5.858813,2.856308,3.894496,-3.106199,-1.746679,6.525066,2.222079,-1.640104,6.424421,-3.388224,-0.007836,-1.325209,-9.508466,-1.286232,4.577395,9.871551,4.702592,-3.326091,2.830976,-5.148408,-3.522740,0.156735,-9.585585,-5.247212,0.742883,5.395967,-3.529444,-4.375464,0.166374,-5.979843,6.617181,6.847530,-1.276926,2.220017,-7.376998,-8.756505,9.414746,-8.323924,1.245995,6.761737,5.389724,8.527175,-2.513794,1.058214,-3.330508,-8.603457,5.075618,-4.343457,2.639399,2.843736,0.796798,2.884349,0.407136,5.239853,-6.840634,9.812003,9.758220,1.391351,-9.844338,4.398948,-9.931128,-0.372657,1.336319,-7.181393,-7.448857,-5.599547,1.715131,-2.057762,-4.434355,7.082638,5.571559,-8.392278,1.904952,-8.723258,-1.526835,0.578258,-8.018133,-9.848668,-1.505241,-4.982756,-2.649008,8.850971,-0.018458,-8.667746,7.558275,8.321996,-4.288310,4.203259,-5.028482,-5.240841,-4.662495,8.139049,4.278624,-7.713017,-9.045071,0.496990,-2.525729,-1.340471,-4.546761,3.815940,2.144154,-8.240484,-5.126974,3.792404,-3.421688,-5.769040,1.383676,5.681855,9.293339,7.491223,-3.364982,2.759668,1.708285,-5.658055,-1.898473,2.276627,-1.247521,-2.817700,8.994172,8.945045,4.613992,-9.626262,-5.945797,7.621586,-7.960254,1.961038,6.298906,9.656206,1.288144,5.397557,4.728714,5.448813,-4.352750,-6.328514,6.324913,7.092777,5.854824,-7.262710,0.872570,-5.450302,-8.293815,3.491204,-5.745096,-5.605861,-9.944542,4.989911,-9.854727,6.201581,-7.554805,-1.539926,-4.872127,-1.905867,-0.133059,6.077652,1.629358,0.066438,3.137083,3.164836,3.140940,1.481882,2.706159,3.674933,7.297858,9.310368,-2.701723,-6.893979,5.046405,4.594066,0.021411,-9.690785,-2.868939,-8.924828,-6.169312,2.747295,8.906577,6.594453,5.018025,-8.980980,4.783755,7.555220,3.819091,-3.347331,-8.816007,-1.674600,-9.516401,-4.311506,-2.984052,1.133190,5.509967,-7.891500,9.625240,9.856357,-9.150472,-8.983550,4.031007,-1.117247,8.843793,-9.059953,-6.951239,5.445539,2.024912,6.018981,-1.136009,-9.395401,4.775492,-5.104093,-0.014469,3.638281,6.333559,-2.606543,0.844971,8.273226,-7.055554,8.214386,9.358710,2.457489,-9.929373,-8.737431,3.198651,-9.694894,-4.933838,-8.450675,1.978481,4.302560,2.875272,5.077469,-5.968558,6.821111,-6.193094,7.013956,2.796560,-9.478463,4.211594,-0.416073,8.712592,7.628964,0.679659,-9.236410,-4.153267,6.073689,-4.498241,-7.498247,6.902658,0.986300,-5.011603,6.833826,2.512347,-9.834174,7.882269,-8.317373,3.302204,-1.570634,8.716087,0.984424,-7.424199,6.690836,-5.360374,-0.814463,7.875539,0.555299,-5.450059,4.744108,1.679857,4.408432,-0.840745,5.678346,6.458690,-5.942237,9.120160,-1.355286,-1.693269,-9.954861,-3.281123,-5.839886,-5.296875,8.501776,6.836216,-2.930573,-4.541234,6.893196,1.194888,8.183653,-6.383950,1.923129,4.894500,0.234224,1.610844,-7.791881,-6.301719,2.622765,2.718704,-5.137514,2.021263,1.573351,-3.261733,-3.590946,8.706676,-0.997349,9.408309,4.506314,-6.085590,-8.556144,-5.341676,1.968447,-1.717418,2.849223,7.540188,-1.672836,4.471835,1.234324,-1.390322,5.695341,0.784269,7.352772,-8.840932,9.558199,8.242124,-5.794617,7.005764,9.036347,7.305204,2.872131,-7.042766,3.835797,7.137628,2.966563,5.356874,9.304043,-6.444546,4.500159,-1.696966,8.924685,8.622374,7.812737,0.777936,-1.086126,-1.164219,-8.789167,2.888343,-8.829732,-0.838797,-8.743847,-1.175576,-6.322838,-1.467734,5.591321,-5.135153,-4.293551,9.707602,-4.156208,-3.748484,6.696370,-4.227823,3.890364,2.164284,-3.084384,0.833510,6.375066,5.145291,9.421098,-0.553614,-5.113679,5.102162,-1.938802,-0.241909,-3.039657,2.077643,1.719143,6.109226,5.584947,-5.114272,-4.843627,-3.593310,-1.506752,5.678094,7.992169,-6.595774,-1.260726,-6.340499,-8.497510,-3.004797,-2.658180,-9.908206,9.956986,-5.197946,6.819913,1.505398,1.645333,2.501997,1.640530,2.783718,-6.555988,-6.719020,3.158001,9.319160,2.524415,-4.818614,2.952161,-6.210596,-1.733748,4.392766,0.763087,4.728269,-9.063302,-2.680514,6.799149,-7.037441,-7.970967,0.534150,-3.895770,8.188698,-5.885524,9.296169,2.454753,-4.914357,-0.906786,0.648077,-3.786852,-4.115507,9.140443,-0.546022,-9.584343,8.397388,3.429437,1.315036,0.958268,-9.440236,-2.973376,-1.629584,4.303824,-0.923005,-4.504173,9.640220,-9.529351,-8.139343,7.801454,3.847976,8.637657,-3.562828,9.263011,-8.660962,-5.722964,-6.882752,-9.494050,-9.793521,6.937319,-0.140011,-1.869293,3.807338,7.030798,4.238223,-2.691727,5.960743,1.489486,7.675465,4.264663,7.949485,-9.079416,-2.567251,-2.571763,-6.707288,7.787928,-3.810488,-4.100053,9.810638,6.253798,-8.427887,5.898400,9.320613,9.346305,9.861046,4.999566,3.107818,-5.326934,-2.687839,-2.597563,-1.657866,3.014743,-3.833015,-0.524763,-5.920720,-9.448495,-8.681984,-8.904219,-7.003990,-9.394947,-4.002543,-0.656582,6.622153,6.393399,-2.288990,-1.683113,-1.891153,0.484044,3.831342,-5.544414,8.271879,9.237131,-5.744004,1.181724,3.699238,-5.443195,4.493467,6.871705,0.417752,9.729638,0.337952,-0.920113,7.660819,-7.494618,-8.193533,-4.496557,0.936676,9.616328,9.972989,-4.866132,-6.972777,-4.121484,7.847773,-9.639212,9.083079,-4.577313,5.807547,-0.569139,-4.674054,2.128814,6.799574,-1.414741,9.234691,-3.114107,8.237713,-6.506894,1.496209,2.456440,-3.959207,3.268599,7.842314,-7.079027,-9.459570,-7.547799,7.007677,2.587279,9.233011,0.728289,7.902796,-2.665073,-4.261239,-1.174489,5.260842,6.117008,2.991597,4.543251,-7.927462,7.085310,-2.831895,-7.388244,-9.732509,-6.032761,2.411486,-8.419615,0.022913,5.126094,9.408691,5.306521,-3.267152,2.031762,2.774507,-7.618689,-7.010115,0.218301,3.650251,5.073034,5.161261,-6.614644,5.435851,-2.949227,6.817725,7.557969,3.013023,3.771777,6.318425,-1.904001,-0.894023,-7.629184,-0.581623,8.288613,6.728833,0.704355,5.418529,-8.715637,0.177610,5.641023,-4.501712,7.900354,-3.665170,1.890903,2.313592,-8.305325,5.381059,5.356935,-8.620407,6.259097,2.301094,9.697192,-7.870420,8.880297,-6.075736,-7.797432,0.667854,-8.272074,5.088799,7.313081,8.962483,-2.606965,7.690013,3.449783,-4.195290,0.070154,5.919870,-3.108815,-2.695472,7.598804,2.522094,-2.476557,-0.924150,-9.760300,-1.838589,-0.689806,0.021517,-5.333740,-9.148708,5.123013,9.266124,-0.766539,2.729833,-3.938312,9.901270,-5.522629,-8.969893,5.278389,4.218070,-5.953220,-0.165209,-9.799377,4.199276,-7.086869], dtype = "float32")#candidate|13042|(2925,)|const|float32
call_13040 = relay.TupleGetItem(func_6284_call(relay.reshape(var_13041.astype('float64'), []), relay.reshape(const_13042.astype('float32'), [15, 195]), ), 1)
call_13043 = relay.TupleGetItem(func_6287_call(relay.reshape(var_13041.astype('float64'), []), relay.reshape(const_13042.astype('float32'), [15, 195]), ), 1)
output = relay.Tuple([call_12988,call_13029,call_13040,var_13041,const_13042,])
output2 = relay.Tuple([call_12989,call_13030,call_13043,var_13041,const_13042,])
func_13048 = relay.Function([var_13041,], output)
mod['func_13048'] = func_13048
mod = relay.transform.InferType()(mod)
var_13049 = relay.var("var_13049", dtype = "float64", shape = ())#candidate|13049|()|var|float64
output = func_13048(var_13049)
func_13050 = relay.Function([var_13049], output)
mutated_mod['func_13050'] = func_13050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7409_call = mod.get_global_var('func_7409')
func_7411_call = mutated_mod.get_global_var('func_7411')
call_13107 = relay.TupleGetItem(func_7409_call(), 0)
call_13108 = relay.TupleGetItem(func_7411_call(), 0)
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
var_13118 = relay.var("var_13118", dtype = "float32", shape = (1512,))#candidate|13118|(1512,)|var|float32
call_13117 = relay.TupleGetItem(func_2804_call(relay.reshape(var_13118.astype('float32'), [14, 12, 9])), 0)
call_13119 = relay.TupleGetItem(func_2807_call(relay.reshape(var_13118.astype('float32'), [14, 12, 9])), 0)
uop_13124 = relay.tan(var_13118.astype('float32')) # shape=(1512,)
output = relay.Tuple([call_13107,call_13117,uop_13124,])
output2 = relay.Tuple([call_13108,call_13119,uop_13124,])
func_13129 = relay.Function([var_13118,], output)
mod['func_13129'] = func_13129
mod = relay.transform.InferType()(mod)
mutated_mod['func_13129'] = func_13129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13130 = relay.var("var_13130", dtype = "float32", shape = (1512,))#candidate|13130|(1512,)|var|float32
func_13129_call = mutated_mod.get_global_var('func_13129')
call_13131 = func_13129_call(var_13130)
output = call_13131
func_13132 = relay.Function([var_13130], output)
mutated_mod['func_13132'] = func_13132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7897_call = mod.get_global_var('func_7897')
func_7898_call = mutated_mod.get_global_var('func_7898')
call_13134 = relay.TupleGetItem(func_7897_call(), 0)
call_13135 = relay.TupleGetItem(func_7898_call(), 0)
func_8352_call = mod.get_global_var('func_8352')
func_8353_call = mutated_mod.get_global_var('func_8353')
call_13180 = relay.TupleGetItem(func_8352_call(), 0)
call_13181 = relay.TupleGetItem(func_8353_call(), 0)
output = relay.Tuple([call_13134,call_13180,])
output2 = relay.Tuple([call_13135,call_13181,])
func_13191 = relay.Function([], output)
mod['func_13191'] = func_13191
mod = relay.transform.InferType()(mod)
output = func_13191()
func_13192 = relay.Function([], output)
mutated_mod['func_13192'] = func_13192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13237 = relay.var("var_13237", dtype = "uint16", shape = (16, 1, 2))#candidate|13237|(16, 1, 2)|var|uint16
var_13238 = relay.var("var_13238", dtype = "uint16", shape = (16, 7, 2))#candidate|13238|(16, 7, 2)|var|uint16
bop_13239 = relay.bitwise_xor(var_13237.astype('uint16'), var_13238.astype('uint16')) # shape=(16, 7, 2)
func_2244_call = mod.get_global_var('func_2244')
func_2247_call = mutated_mod.get_global_var('func_2247')
const_13252 = relay.const([[6,3],[5,-7],[-8,7],[-2,-9],[-5,2],[-2,-6],[-9,-4],[6,-8],[-3,-2],[-10,1],[1,-2],[-5,5],[5,-5],[-8,-1],[-6,9],[-9,6],[9,-8],[8,-9],[-7,2],[-3,2],[-4,7],[8,9],[5,5],[7,7],[3,9],[5,8],[10,-6],[7,-10],[-4,3],[7,5],[-1,7],[6,-6],[-9,10],[-2,8],[8,-6],[3,-8],[-5,1],[2,-3],[10,1],[-3,-5],[-3,-8],[3,8],[1,8],[9,3],[8,5],[1,5],[9,-7],[4,-7],[-5,1],[-1,9],[2,-8],[-5,7],[6,-3],[10,-8],[3,-3],[7,3],[5,10],[-2,9],[-10,7],[9,-9],[5,-2],[10,-6],[-7,-2],[-9,6],[9,-9],[9,-7],[7,2],[-7,1],[-5,-9],[-4,9],[-5,6],[6,-7],[2,-5],[6,-9],[5,10],[-4,-6],[-5,3],[-1,3],[-3,-2],[-2,3],[-7,-6],[10,7],[-7,-9],[-8,-8],[-9,2],[-3,-8],[3,5],[-8,-1],[7,-9],[1,4]], dtype = "uint8")#candidate|13252|(90, 2)|const|uint8
call_13251 = relay.TupleGetItem(func_2244_call(relay.reshape(const_13252.astype('uint8'), [15, 3, 4])), 0)
call_13253 = relay.TupleGetItem(func_2247_call(relay.reshape(const_13252.astype('uint8'), [15, 3, 4])), 0)
func_6149_call = mod.get_global_var('func_6149')
func_6151_call = mutated_mod.get_global_var('func_6151')
call_13256 = relay.TupleGetItem(func_6149_call(), 1)
call_13257 = relay.TupleGetItem(func_6151_call(), 1)
func_12043_call = mod.get_global_var('func_12043')
func_12044_call = mutated_mod.get_global_var('func_12044')
call_13287 = func_12043_call()
call_13288 = func_12043_call()
output = relay.Tuple([bop_13239,call_13251,const_13252,call_13256,call_13287,])
output2 = relay.Tuple([bop_13239,call_13253,const_13252,call_13257,call_13288,])
func_13289 = relay.Function([var_13237,var_13238,], output)
mod['func_13289'] = func_13289
mod = relay.transform.InferType()(mod)
var_13290 = relay.var("var_13290", dtype = "uint16", shape = (16, 1, 2))#candidate|13290|(16, 1, 2)|var|uint16
var_13291 = relay.var("var_13291", dtype = "uint16", shape = (16, 7, 2))#candidate|13291|(16, 7, 2)|var|uint16
output = func_13289(var_13290,var_13291,)
func_13292 = relay.Function([var_13290,var_13291,], output)
mutated_mod['func_13292'] = func_13292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_13322 = relay.TupleGetItem(func_4836_call(), 0)
call_13323 = relay.TupleGetItem(func_4838_call(), 0)
func_8125_call = mod.get_global_var('func_8125')
func_8127_call = mutated_mod.get_global_var('func_8127')
const_13338 = relay.const([[True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False],[False,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False],[True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True]], dtype = "bool")#candidate|13338|(3, 540)|const|bool
call_13337 = relay.TupleGetItem(func_8125_call(relay.reshape(const_13338.astype('bool'), [12, 9, 15])), 0)
call_13339 = relay.TupleGetItem(func_8127_call(relay.reshape(const_13338.astype('bool'), [12, 9, 15])), 0)
func_5811_call = mod.get_global_var('func_5811')
func_5813_call = mutated_mod.get_global_var('func_5813')
var_13362 = relay.var("var_13362", dtype = "float32", shape = (126, 12))#candidate|13362|(126, 12)|var|float32
call_13361 = relay.TupleGetItem(func_5811_call(relay.reshape(var_13362.astype('float32'), [3, 504])), 0)
call_13363 = relay.TupleGetItem(func_5813_call(relay.reshape(var_13362.astype('float32'), [3, 504])), 0)
output = relay.Tuple([call_13322,call_13337,const_13338,call_13361,var_13362,])
output2 = relay.Tuple([call_13323,call_13339,const_13338,call_13363,var_13362,])
func_13368 = relay.Function([var_13362,], output)
mod['func_13368'] = func_13368
mod = relay.transform.InferType()(mod)
mutated_mod['func_13368'] = func_13368
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13369 = relay.var("var_13369", dtype = "float32", shape = (126, 12))#candidate|13369|(126, 12)|var|float32
func_13368_call = mutated_mod.get_global_var('func_13368')
call_13370 = func_13368_call(var_13369)
output = call_13370
func_13371 = relay.Function([var_13369], output)
mutated_mod['func_13371'] = func_13371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11416_call = mod.get_global_var('func_11416')
func_11418_call = mutated_mod.get_global_var('func_11418')
call_13373 = func_11416_call()
call_13374 = func_11416_call()
output = relay.Tuple([call_13373,])
output2 = relay.Tuple([call_13374,])
func_13385 = relay.Function([], output)
mod['func_13385'] = func_13385
mod = relay.transform.InferType()(mod)
mutated_mod['func_13385'] = func_13385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13385_call = mutated_mod.get_global_var('func_13385')
call_13386 = func_13385_call()
output = call_13386
func_13387 = relay.Function([], output)
mutated_mod['func_13387'] = func_13387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_13417 = func_5416_call()
call_13418 = func_5416_call()
output = call_13417
output2 = call_13418
func_13433 = relay.Function([], output)
mod['func_13433'] = func_13433
mod = relay.transform.InferType()(mod)
output = func_13433()
func_13434 = relay.Function([], output)
mutated_mod['func_13434'] = func_13434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12284_call = mod.get_global_var('func_12284')
func_12286_call = mutated_mod.get_global_var('func_12286')
call_13453 = relay.TupleGetItem(func_12284_call(), 1)
call_13454 = relay.TupleGetItem(func_12286_call(), 1)
output = relay.Tuple([call_13453,])
output2 = relay.Tuple([call_13454,])
func_13472 = relay.Function([], output)
mod['func_13472'] = func_13472
mod = relay.transform.InferType()(mod)
output = func_13472()
func_13473 = relay.Function([], output)
mutated_mod['func_13473'] = func_13473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9673_call = mod.get_global_var('func_9673')
func_9675_call = mutated_mod.get_global_var('func_9675')
call_13522 = relay.TupleGetItem(func_9673_call(), 4)
call_13523 = relay.TupleGetItem(func_9675_call(), 4)
func_11864_call = mod.get_global_var('func_11864')
func_11868_call = mutated_mod.get_global_var('func_11868')
var_13530 = relay.var("var_13530", dtype = "float32", shape = (1456,))#candidate|13530|(1456,)|var|float32
call_13529 = relay.TupleGetItem(func_11864_call(relay.reshape(var_13530.astype('float32'), [13, 16, 7]), relay.reshape(var_13530.astype('float32'), [13, 16, 7]), ), 0)
call_13531 = relay.TupleGetItem(func_11868_call(relay.reshape(var_13530.astype('float32'), [13, 16, 7]), relay.reshape(var_13530.astype('float32'), [13, 16, 7]), ), 0)
output = relay.Tuple([call_13522,call_13529,var_13530,])
output2 = relay.Tuple([call_13523,call_13531,var_13530,])
func_13532 = relay.Function([var_13530,], output)
mod['func_13532'] = func_13532
mod = relay.transform.InferType()(mod)
mutated_mod['func_13532'] = func_13532
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13533 = relay.var("var_13533", dtype = "float32", shape = (1456,))#candidate|13533|(1456,)|var|float32
func_13532_call = mutated_mod.get_global_var('func_13532')
call_13534 = func_13532_call(var_13533)
output = call_13534
func_13535 = relay.Function([var_13533], output)
mutated_mod['func_13535'] = func_13535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8252_call = mod.get_global_var('func_8252')
func_8253_call = mutated_mod.get_global_var('func_8253')
call_13601 = relay.TupleGetItem(func_8252_call(), 0)
call_13602 = relay.TupleGetItem(func_8253_call(), 0)
func_7897_call = mod.get_global_var('func_7897')
func_7898_call = mutated_mod.get_global_var('func_7898')
call_13630 = relay.TupleGetItem(func_7897_call(), 1)
call_13631 = relay.TupleGetItem(func_7898_call(), 1)
var_13641 = relay.var("var_13641", dtype = "float64", shape = (15, 13, 15))#candidate|13641|(15, 13, 15)|var|float64
bop_13642 = relay.greater_equal(call_13630.astype('bool'), relay.reshape(var_13641.astype('bool'), relay.shape_of(call_13630))) # shape=(15, 13, 15)
bop_13645 = relay.greater_equal(call_13631.astype('bool'), relay.reshape(var_13641.astype('bool'), relay.shape_of(call_13631))) # shape=(15, 13, 15)
output = relay.Tuple([call_13601,bop_13642,])
output2 = relay.Tuple([call_13602,bop_13645,])
func_13657 = relay.Function([var_13641,], output)
mod['func_13657'] = func_13657
mod = relay.transform.InferType()(mod)
var_13658 = relay.var("var_13658", dtype = "float64", shape = (15, 13, 15))#candidate|13658|(15, 13, 15)|var|float64
output = func_13657(var_13658)
func_13659 = relay.Function([var_13658], output)
mutated_mod['func_13659'] = func_13659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11194_call = mod.get_global_var('func_11194')
func_11195_call = mutated_mod.get_global_var('func_11195')
call_13666 = func_11194_call()
call_13667 = func_11194_call()
func_13433_call = mod.get_global_var('func_13433')
func_13434_call = mutated_mod.get_global_var('func_13434')
call_13675 = func_13433_call()
call_13676 = func_13433_call()
output = relay.Tuple([call_13666,call_13675,])
output2 = relay.Tuple([call_13667,call_13676,])
func_13677 = relay.Function([], output)
mod['func_13677'] = func_13677
mod = relay.transform.InferType()(mod)
mutated_mod['func_13677'] = func_13677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13677_call = mutated_mod.get_global_var('func_13677')
call_13678 = func_13677_call()
output = call_13678
func_13679 = relay.Function([], output)
mutated_mod['func_13679'] = func_13679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6149_call = mod.get_global_var('func_6149')
func_6151_call = mutated_mod.get_global_var('func_6151')
call_13728 = relay.TupleGetItem(func_6149_call(), 0)
call_13729 = relay.TupleGetItem(func_6151_call(), 0)
output = relay.Tuple([call_13728,])
output2 = relay.Tuple([call_13729,])
func_13730 = relay.Function([], output)
mod['func_13730'] = func_13730
mod = relay.transform.InferType()(mod)
mutated_mod['func_13730'] = func_13730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13730_call = mutated_mod.get_global_var('func_13730')
call_13731 = func_13730_call()
output = call_13731
func_13732 = relay.Function([], output)
mutated_mod['func_13732'] = func_13732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7257_call = mod.get_global_var('func_7257')
func_7259_call = mutated_mod.get_global_var('func_7259')
call_13740 = func_7257_call()
call_13741 = func_7257_call()
func_1479_call = mod.get_global_var('func_1479')
func_1482_call = mutated_mod.get_global_var('func_1482')
var_13748 = relay.var("var_13748", dtype = "bool", shape = ())#candidate|13748|()|var|bool
call_13747 = relay.TupleGetItem(func_1479_call(relay.reshape(var_13748.astype('bool'), [])), 2)
call_13749 = relay.TupleGetItem(func_1482_call(relay.reshape(var_13748.astype('bool'), [])), 2)
func_9510_call = mod.get_global_var('func_9510')
func_9511_call = mutated_mod.get_global_var('func_9511')
call_13752 = relay.TupleGetItem(func_9510_call(), 2)
call_13753 = relay.TupleGetItem(func_9511_call(), 2)
output = relay.Tuple([call_13740,call_13747,var_13748,call_13752,])
output2 = relay.Tuple([call_13741,call_13749,var_13748,call_13753,])
func_13754 = relay.Function([var_13748,], output)
mod['func_13754'] = func_13754
mod = relay.transform.InferType()(mod)
mutated_mod['func_13754'] = func_13754
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13755 = relay.var("var_13755", dtype = "bool", shape = ())#candidate|13755|()|var|bool
func_13754_call = mutated_mod.get_global_var('func_13754')
call_13756 = func_13754_call(var_13755)
output = call_13756
func_13757 = relay.Function([var_13755], output)
mutated_mod['func_13757'] = func_13757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_13780 = func_5416_call()
call_13781 = func_5416_call()
output = call_13780
output2 = call_13781
func_13784 = relay.Function([], output)
mod['func_13784'] = func_13784
mod = relay.transform.InferType()(mod)
output = func_13784()
func_13785 = relay.Function([], output)
mutated_mod['func_13785'] = func_13785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8320_call = mod.get_global_var('func_8320')
func_8321_call = mutated_mod.get_global_var('func_8321')
call_13788 = relay.TupleGetItem(func_8320_call(), 0)
call_13789 = relay.TupleGetItem(func_8321_call(), 0)
func_7960_call = mod.get_global_var('func_7960')
func_7961_call = mutated_mod.get_global_var('func_7961')
call_13807 = relay.TupleGetItem(func_7960_call(), 0)
call_13808 = relay.TupleGetItem(func_7961_call(), 0)
func_11864_call = mod.get_global_var('func_11864')
func_11868_call = mutated_mod.get_global_var('func_11868')
const_13810 = relay.const([2.002938,-3.049720,1.996096,8.960284,8.671052,0.225683,-2.545153,3.866277,-6.486923,-3.169315,-3.389707,3.972439,6.794615,-9.579521,9.674321,0.269105,-6.805066,9.288169,8.571688,4.648784,6.662013,-2.471310,-8.149331,-1.270597,-9.115841,-0.211709,-6.445931,-3.671489,2.772216,-8.869555,-3.783761,8.849162,-6.326560,-3.265199,-7.033681,-9.059386,2.916944,7.384704,9.107608,-8.793813,-7.274187,-4.497426,1.475221,9.425222,0.375419,6.666910,7.702265,-9.117453,4.235771,7.270596,5.155254,2.548269,-1.723002,-1.925216,-8.821210,0.690088,-1.718042,0.624658,5.525934,-3.072705,1.091011,-1.010852,-7.985538,-8.740284,-3.987920,1.668606,5.123139,-0.122581,-3.945212,5.093146,8.535293,5.421668,-8.708814,1.863811,0.789212,2.126035,3.301704,5.876039,-8.450658,8.778707,2.963680,-0.388857,9.782691,-4.363790,-1.281510,-3.791575,0.471492,7.874910,3.791320,5.277666,-2.673752,7.439014,-4.899966,3.959257,-8.141323,6.023890,-7.445625,-9.075296,-6.377638,1.975407,3.129934,8.778315,9.548176,-8.471604,7.528952,-6.458259,-0.746922,-0.532492,-6.257874,-1.855134,-0.649515,5.308096,0.394679,9.384745,-4.480000,-4.472059,-4.877317,-9.594705,-6.069425,-5.815619,-4.429672,0.377573,-1.384292,-0.252228,-5.664438,9.962729,-3.433065,9.748118,0.562049,-1.507638,1.479821,2.630786,-7.864265,2.263810,-8.005874,-2.835418,-6.490773,-4.019564,7.267408,-0.625568,7.636502,1.102506,-1.526234,4.734502,1.091667,4.290522,6.403543,-1.885412,7.499176,-8.937198,-6.927954,-9.996460,2.907621,6.128589,4.737435,-1.680869,-2.767368,5.214688,-6.908519,-7.507975,-6.236539,-2.885926,-6.078879,3.484337,-9.832063,0.346434,-1.698849,-0.129154,-8.627088,1.563794,9.970961,-3.198373,8.353132,-8.703653,9.439934,9.083227,-9.233270,4.619150,-4.758509,-3.376097,-7.424821,9.825324,-6.020832,-9.241203,-6.705391,-9.443760,9.346984,6.406471,-3.673011,-5.549566,-6.407436,7.236918,2.911365,9.587853,2.997912,5.336450,7.373694,2.483806,-7.106832,8.962576,1.474641,-0.114121,-5.786383,6.967884,9.095191,-7.072404,5.595275,-8.110166,-2.021851,-2.915421,-7.685955,-7.969930,8.776548,8.968836,6.192731,-1.900116,-2.263748,-2.040693,-7.516313,-2.278309,0.557418,6.564344,-2.483783,-3.305227,0.319260,5.693203,-6.843701,2.231621,2.634092,2.436007,9.016306,4.406382,-9.925361,7.594924,5.953876,-5.825571,-4.010679,9.522199,8.037639,-3.189246,-7.894795,-6.401421,9.661721,-9.436762,-8.625286,3.411034,8.209349,-9.700535,-5.094732,-5.791602,0.283047,6.277114,-6.151105,-1.397960,-3.947686,-8.945840,-5.798367,7.234661,8.419328,-6.804775,2.931376,3.465653,-2.632318,-0.687084,6.300170,-0.292047,7.679885,5.130631,-5.746448,6.623433,-3.153924,-1.479474,2.798967,-0.456486,0.833798,-9.650360,-3.352416,-8.426713,7.426250,-0.452427,7.940049,6.468281,-8.953017,0.890242,9.046592,7.884593,-3.679008,-2.784378,0.442995,-9.045635,-2.774219,6.108058,8.316892,8.939199,-5.340869,7.273630,8.907241,-8.832359,7.851971,-6.881530,-9.263063,-7.374134,2.361917,-3.092857,0.330262,-3.378889,-0.943979,5.020228,5.588986,-1.821153,-7.291538,2.827497,7.480683,2.331855,0.404122,6.803589,2.037326,1.172022,-6.103699,6.143895,-0.081932,4.753195,0.517219,-1.631619,-0.290575,-8.001179,7.360829,-1.176133,4.546556,2.095018,4.771903,-7.554196,1.156090,-4.403704,-5.957499,8.614462,2.321794,6.593330,9.126536,2.424377,-6.028585,-1.415315,2.130086,-7.954139,-2.205375,-2.913744,-2.878765,-5.616221,-9.108639,-2.212178,-8.697461,7.104376,-0.629528,-6.790918,3.683333,6.408796,8.055667,4.997304,-7.234669,5.490886,7.441782,0.854411,5.208941,0.482847,-7.914998,-3.189646,-0.736857,-1.386227,-0.366869,-7.549165,-3.479652,9.441691,-1.982124,-0.871882,5.025037,5.296346,5.405849,-2.830916,1.367214,-4.344974,7.972895,-7.082907,6.021876,5.702691,-0.549689,3.843153,2.169156,-3.195993,0.734228,2.574166,5.879333,6.698418,0.643671,8.127071,-1.382607,-5.553630,-7.403796,6.276464,7.426710,3.884921,-7.788110,-7.565684,6.863972,1.254194,1.300883,9.191098,-4.258992,-7.679805,7.955593,-8.794500,0.147709,1.796201,4.394557,8.445217,8.624491,-4.531763,8.761422,-3.135929,-2.588501,5.191826,-2.941478,-0.614806,-0.423576,-0.905306,-3.995479,1.827680,2.998182,8.881803,8.825122,3.234638,2.734457,-4.549161,-2.435201,1.970953,7.707151,-4.154339,-6.159689,-8.787433,1.339562,-5.856632,6.823138,-0.895492,-3.205794,5.314505,-6.990183,2.561820,7.514791,6.675484,-0.161607,-3.786186,1.281945,7.225426,7.251324,-7.432796,-9.664590,-3.237305,-4.742423,-9.246404,-6.528130,-5.485735,-0.819852,-1.586234,-5.096469,7.938666,-6.058722,-9.939696,-7.005574,2.485739,4.493469,6.873791,-6.464087,7.335185,-5.109895,-1.271429,7.558213,9.811117,-7.756223,5.362374,9.268329,2.617991,-8.137952,-8.108102,6.341078,-6.833237,1.561366,-8.718372,9.889940,4.642099,7.935657,-6.818920,-2.732271,-4.610848,7.287923,3.139786,-3.034457,1.384460,-0.098424,6.515327,7.342868,-5.013407,0.136794,8.042841,-3.176276,-6.735259,-7.770186,9.128623,8.433327,7.388879,8.342454,9.670352,6.547750,0.938182,-0.876439,9.625184,-0.081488,8.090708,-1.278133,1.399670,8.434034,-8.249405,-4.276412,-6.321595,4.548182,9.713385,2.351953,-1.035952,1.785082,-9.008018,-6.879692,2.623302,-3.096320,0.849681,2.643629,0.868404,-1.152913,-9.569428,6.926421,-3.119638,-2.063482,-6.813985,6.384967,-7.892208,-4.847618,-0.008350,-6.712776,8.988075,-4.677214,2.809678,7.334219,-8.368579,-5.799793,0.326143,-1.720345,-1.917106,4.748410,-4.755463,3.722053,5.498566,6.985813,5.376752,9.368608,-6.368770,0.229703,-4.440290,3.586390,-4.083365,4.719904,0.337471,-9.690225,5.115558,-9.628436,-7.511042,-6.644466,4.145075,0.370073,-1.167682,-3.273950,4.514264,-8.010415,-6.985315,-3.799518,-1.565711,-1.747579,4.104774,3.173537,-1.431535,-7.146626,-9.209026,-7.446041,3.576312,-8.771978,6.291381,-8.175783,-5.289020,-7.930760,-9.283230,4.828136,-4.348826,6.120440,-2.158188,-5.488891,-7.468575,6.551917,-7.712013,1.398471,-9.060902,0.346174,-2.327034,-5.872622,-9.114488,9.359564,4.335043,8.454099,3.442609,-8.650281,-6.532693,-5.584042,5.907676,3.663184,-6.774518,7.960731,-0.784475,-3.449951,0.291751,2.680756,3.100968,-3.628801,2.224767,-1.784241,-1.010351,1.507354,-1.650879,-2.179256,8.549899,7.812570,-6.774643,-1.643472,6.299695,6.866701,9.254413,-4.252216,8.055024,-6.541938,7.791789,8.064360,1.718442,-2.534624,3.236143,3.443816,-3.585829,-0.505692,-0.067078,3.184649,5.023149,-7.706244,5.081531,6.697072,8.079517,2.737846,-5.594367,1.573620,7.092834,7.721075,-3.665633,-4.013568,7.198564,1.890242,7.489653,9.549597,9.282519,-7.255945,0.529050,0.211746,8.635889,3.731866,-8.629081,1.537534,-9.803055,-0.826455,1.614474,9.617056,3.069213,-7.275838,1.101121,2.396571,6.739909,9.265599,0.467615,-1.842776,8.615025,-7.931298,-0.940724,-1.431032,9.274310,0.571322,7.042293,6.778189,7.480967,4.972521,-8.611152,3.371110,-2.396793,-8.123801,5.635508,-9.842981,-6.307995,-2.123309,-3.670309,4.515392,0.820620,3.000603,5.938916,4.821994,-7.486111,8.762212,2.155784,6.822231,4.487156,9.989214,-7.733957,2.477027,6.863951,9.042240,-7.639098,4.504905,6.741449,-9.682064,9.392514,9.146438,1.715958,-8.281086,6.128980,-2.061596,8.606624,6.878993,-9.027568,-8.284517,7.553476,3.673941,-0.932613,2.206753,4.967674,-1.597666,-5.980956,3.348709,-9.138020,-7.757336,5.803793,-6.198462,1.144319,-6.392163,7.197506,2.254105,-8.409073,-5.572305,0.967816,-4.170161,-5.073897,7.038902,-3.297801,-9.117544,2.814164,-8.434281,6.841935,1.244118,-6.730824,-3.217624,3.093943,-1.877147,3.521776,-8.850251,6.906017,5.862625,-4.423337,-6.545802,3.544261,9.254085,6.309034,0.232589,2.246905,7.422934,-0.691648,4.746799,2.416237,4.189862,-8.540244,9.544943,-4.954873,7.012534,-5.403569,9.751770,-0.981120,-5.717996,-3.086471,4.777500,-7.091232,-5.209775,-7.313405,-5.548416,3.404558,-9.114704,-9.241452,6.710208,5.702281,5.187959,-8.773358,9.071959,2.051925,5.397887,-5.626152,1.452618,2.809402,8.538380,1.527132,-9.472391,-0.468764,9.510350,-3.558800,3.187425,9.218425,3.703090,-0.168713,6.793148,-6.184168,7.582733,4.681011,-8.864941,-3.681264,-7.449281,5.577518,1.205394,-3.182941,-2.677702,2.981345,-9.546639,-4.612892,3.712006,-6.717285,7.512859,6.053431,0.324918,8.161150,2.548615,-1.088223,-2.420555,-9.955430,3.916951,-3.371147,-8.819647,9.358649,-8.403050,-8.744497,-4.633258,-6.578795,-1.870665,0.461191,-5.781390,3.285042,-8.803390,-4.086538,5.030077,-4.773939,9.478547,8.318782,4.141970,-1.655710,-0.122431,4.803584,3.852979,-9.619273,4.477465,-9.407999,0.037878,7.072105,4.718454,-6.059978,6.920503,1.261011,0.580249,-3.283902,0.245037,-0.188222,4.984367,6.649244,-8.265527,-0.825123,3.922001,9.164775,-9.160593,-0.347499,-1.113264,9.389851,-0.867395,-3.596381,4.106144,-0.045883,4.803517,-2.742449,-6.582056,-6.100542,-8.042624,-3.545687,9.741298,-4.912635,-4.898637,8.156973,2.369138,-6.014489,7.495417,7.160360,1.250735,2.914063,-3.595265,-1.972417,8.454401,2.745522,4.301537,9.877839,-7.627527,9.234105,0.875920,6.574207,3.093167,-4.202120,2.677057,8.960631,9.109528,0.104764,-3.893635,-3.200316,-1.467821,9.128970,1.758037,-5.587727,-2.438887,-1.370004,-6.142105,-3.820307,-5.509701,-3.808837,-0.202556,-7.547903,0.509440,-9.053118,9.691453,6.802783,-6.273671,-5.500154,-4.246603,2.484993,-2.388385,-1.741879,-5.267418,-4.548520,8.630939,-1.212960,-6.425603,4.281363,-0.355334,6.692641,-3.012089,-7.634187,-0.441911,-6.629841,7.757210,7.814631,3.542507,0.165808,0.357379,-4.724608,-3.294420,-4.943823,-6.085532,-2.938923,1.707301,-3.020920,6.563983,7.318212,5.376148,-6.519766,9.447855,-9.467542,2.439901,-9.596907,4.677322,8.699759,6.658647,-0.487248,8.830266,7.492790,3.872297,-5.921402,-9.038014,-0.171771,0.202498,-9.721381,-0.909560,9.479918,-6.973029,-6.813792,9.309789,-4.457744,-7.239250,-6.512702,4.527609,-3.298893,5.674741,6.609217,-1.366957,-6.233486,-6.763868,2.148242,9.257985,-2.502180,-0.471930,-3.571956,-1.222802,5.680062,9.589080,-0.434396,6.666579,6.429799,8.366811,-1.481442,-9.649627,0.014568,8.525393,-4.577664,-7.043403,1.391681,2.231059,-7.196819,-5.046324,-8.158365,4.260782,-2.707056,-5.267525,5.821534,9.573950,4.957031,-2.888011,-8.256420,5.729332,6.173513,-6.498042,8.745048,-4.970316,0.251410,5.369638,-8.549133,4.764504,6.742138,5.999872,3.900341,-2.793528,-4.309377,-3.219948,-6.989622,2.069690,2.981869,-1.665660,-2.350473,-0.073884,2.764990,6.397179,-0.997867,6.563715,-2.421396,-2.346799,4.617201,9.497791,-3.590861,-0.887756,6.531752,-5.120663,5.496160,0.618159,0.468018,-4.520466,1.640541,-3.919875,-6.374312,6.135461,-4.867133,-5.680720,-1.293900,-7.256199,2.307894,-6.712241,-2.439908,3.208429,9.038107,6.637981,-1.074872,-5.907147,-4.365504,8.468961,-8.898241,6.599619,1.975426,-3.037886,8.768159,-9.381331,3.605396,-9.795017,8.065333,-4.807744,-3.438995,6.910229,8.559671,1.904913,-6.658264,-4.560258,8.315984,-9.100717,8.687012,9.039821,2.826098,-6.661500,-8.859171,-2.402986,-1.451943,-9.828943,0.028601,-4.549418,4.658494,-1.443731,-4.634330,-9.984488,-2.659899,-8.637231,3.880216,3.526495,1.776585,-1.139699,-1.647645,3.402244,2.207007,6.067391,1.585714,4.151709,6.376585,0.147195,-7.882153,-8.064822,-4.993891,-0.362442,-6.372457,-7.067774,6.191874,0.118621,2.248883,9.829765,-2.379301,7.347284,-5.000827,2.327277,-5.229158,9.300290,-1.544514,-7.168873,4.441480,5.929846,-0.770430,4.158824,-1.962998,0.665582,-8.349814,-4.902842,9.563093,-5.438460,-2.582409,-0.348285,-9.696032,9.386854,7.810450,0.615519,-6.001104,-5.678819,-3.277045,2.237521,-3.864304,5.384858,5.861916,6.060796,9.798036,-4.772711,0.603256,7.623563,-8.159626,2.766869,-5.407465,-2.656631,1.598771,8.735909,0.954267,-4.952480,3.411784,-9.074906,8.875582,7.691456,7.536943,-2.822573,-2.364395,2.090155,-8.591461,-8.472663,3.576503,4.421088,9.218870,4.647710,1.880654,-9.731261,2.565461,0.089215,5.936576,9.326276,-2.215849,9.632818,0.314444,-6.217506,6.644803,-7.237151,4.785428,1.733759,-4.383170,5.898220,-8.035939,-7.667736,-4.501092,-2.470383,4.659827,3.448185,9.893921,-9.745980,6.253940,-2.448163,-9.200291,0.988221,2.148427,-5.252541,1.792342,0.984314,-2.431784,4.238738,-6.810974,-7.474049,-6.345863,7.562060,-6.697024,-5.942074,-9.030012,4.124365,-5.270413,2.137343,5.562219,6.406852,2.331607,1.740263,9.493539,8.822816,-0.095605,3.839006,9.182870,2.966392,-0.871222,4.268787,-3.375253,1.237767,0.458923,-4.841759,1.747653,-8.231555,2.866325,-0.271927,-3.571277,-4.686873,7.987089,6.217101,-2.711059,-8.670996,1.948339,-2.090971,-6.877054,-5.164631,-5.840044,5.528566,-1.032161,-1.971884,7.844190,-3.567208,-0.900704,-4.947881,-0.067055,-8.755739,-8.493214,-8.054974,-8.103287,-8.338217,-5.100087,6.170234,8.784782,-7.457571,-2.199923,7.262020,2.360104,2.673517,-3.477139,7.817582,-9.190515,-6.771254,2.494137,-4.282235,8.731151,-3.857796,7.030590,-9.949844,-3.425818,-5.787614,2.655608,-2.762347,-1.989619,5.290965,-4.232591,7.919971,-6.262545,3.303215,-5.994591,-1.791285,-4.028279,-0.290056,-3.667001,4.139473,7.304148,0.752924,1.920115,-2.597008,2.882996,3.164938,-0.439843,-6.528144,-7.655627,-7.744469,2.817363,-4.341203,-9.405908,4.837915,7.120483,0.386201,5.203330,5.472363,3.039496,-6.354697,5.088454,-1.161611,-6.984107,5.691685,-4.626188,-2.734208,-7.366607,-1.872425,2.994285,5.522461,-8.846666,2.330415,6.463997,-0.494194,-6.143349,2.194583,-6.971226,-4.445613,2.893340,7.410335,9.780937,9.523755,-8.798436,-7.178075,-5.584174,-2.051040,4.346309,-4.391207,8.857151,5.653715,7.750131,8.361348,-8.760322,-0.536246,7.112538,7.256535,7.968510,-6.338680,-9.950709,5.119848,-7.721812,9.538480,-6.214168,-1.475343,3.220715,3.488828,0.815719,-4.219711,-8.179801,9.933083,8.690861,2.952414,4.297132,-4.340354,-9.743942,-6.497281,-5.229976,-8.660012,3.389060,-4.051218,-2.111085,3.839073,-7.974384,5.499497,3.050840,8.323497,-5.775774,7.066687,-8.202871,8.373679,-1.511871,-5.371902,-1.868625,4.950740,1.876495,-1.959641,9.334842,0.024646,1.222293,8.219328,6.829602,6.873868,8.645724,-1.277092,8.710980,-8.020878,3.448532,-3.179378,-6.934522,-5.961364,0.244986,1.242418,-0.417685,-8.500688,-8.983198,-8.370251,-1.657483,4.801556,8.859822,-8.447588,8.954018,-4.966125,7.411307], dtype = "float32")#candidate|13810|(1456,)|const|float32
call_13809 = relay.TupleGetItem(func_11864_call(relay.reshape(const_13810.astype('float32'), [13, 16, 7]), relay.reshape(const_13810.astype('float32'), [13, 16, 7]), ), 0)
call_13811 = relay.TupleGetItem(func_11868_call(relay.reshape(const_13810.astype('float32'), [13, 16, 7]), relay.reshape(const_13810.astype('float32'), [13, 16, 7]), ), 0)
func_7897_call = mod.get_global_var('func_7897')
func_7898_call = mutated_mod.get_global_var('func_7898')
call_13832 = relay.TupleGetItem(func_7897_call(), 1)
call_13833 = relay.TupleGetItem(func_7898_call(), 1)
func_12363_call = mod.get_global_var('func_12363')
func_12365_call = mutated_mod.get_global_var('func_12365')
call_13843 = func_12363_call()
call_13844 = func_12363_call()
output = relay.Tuple([call_13788,call_13807,call_13809,const_13810,call_13832,call_13843,])
output2 = relay.Tuple([call_13789,call_13808,call_13811,const_13810,call_13833,call_13844,])
func_13845 = relay.Function([], output)
mod['func_13845'] = func_13845
mod = relay.transform.InferType()(mod)
mutated_mod['func_13845'] = func_13845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13845_call = mutated_mod.get_global_var('func_13845')
call_13846 = func_13845_call()
output = call_13846
func_13847 = relay.Function([], output)
mutated_mod['func_13847'] = func_13847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13784_call = mod.get_global_var('func_13784')
func_13785_call = mutated_mod.get_global_var('func_13785')
call_13865 = func_13784_call()
call_13866 = func_13784_call()
output = call_13865
output2 = call_13866
func_13896 = relay.Function([], output)
mod['func_13896'] = func_13896
mod = relay.transform.InferType()(mod)
mutated_mod['func_13896'] = func_13896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13896_call = mutated_mod.get_global_var('func_13896')
call_13897 = func_13896_call()
output = call_13897
func_13898 = relay.Function([], output)
mutated_mod['func_13898'] = func_13898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8178_call = mod.get_global_var('func_8178')
func_8179_call = mutated_mod.get_global_var('func_8179')
call_13935 = func_8178_call()
call_13936 = func_8178_call()
output = relay.Tuple([call_13935,])
output2 = relay.Tuple([call_13936,])
func_13940 = relay.Function([], output)
mod['func_13940'] = func_13940
mod = relay.transform.InferType()(mod)
mutated_mod['func_13940'] = func_13940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13940_call = mutated_mod.get_global_var('func_13940')
call_13941 = func_13940_call()
output = call_13941
func_13942 = relay.Function([], output)
mutated_mod['func_13942'] = func_13942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10023_call = mod.get_global_var('func_10023')
func_10025_call = mutated_mod.get_global_var('func_10025')
call_13954 = relay.TupleGetItem(func_10023_call(), 0)
call_13955 = relay.TupleGetItem(func_10025_call(), 0)
func_8352_call = mod.get_global_var('func_8352')
func_8353_call = mutated_mod.get_global_var('func_8353')
call_13959 = relay.TupleGetItem(func_8352_call(), 0)
call_13960 = relay.TupleGetItem(func_8353_call(), 0)
output = relay.Tuple([call_13954,call_13959,])
output2 = relay.Tuple([call_13955,call_13960,])
func_13963 = relay.Function([], output)
mod['func_13963'] = func_13963
mod = relay.transform.InferType()(mod)
output = func_13963()
func_13964 = relay.Function([], output)
mutated_mod['func_13964'] = func_13964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_13977 = func_5416_call()
call_13978 = func_5416_call()
output = call_13977
output2 = call_13978
func_14016 = relay.Function([], output)
mod['func_14016'] = func_14016
mod = relay.transform.InferType()(mod)
mutated_mod['func_14016'] = func_14016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14016_call = mutated_mod.get_global_var('func_14016')
call_14017 = func_14016_call()
output = call_14017
func_14018 = relay.Function([], output)
mutated_mod['func_14018'] = func_14018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12363_call = mod.get_global_var('func_12363')
func_12365_call = mutated_mod.get_global_var('func_12365')
call_14050 = func_12363_call()
call_14051 = func_12363_call()
func_8320_call = mod.get_global_var('func_8320')
func_8321_call = mutated_mod.get_global_var('func_8321')
call_14052 = relay.TupleGetItem(func_8320_call(), 0)
call_14053 = relay.TupleGetItem(func_8321_call(), 0)
output = relay.Tuple([call_14050,call_14052,])
output2 = relay.Tuple([call_14051,call_14053,])
func_14057 = relay.Function([], output)
mod['func_14057'] = func_14057
mod = relay.transform.InferType()(mod)
output = func_14057()
func_14058 = relay.Function([], output)
mutated_mod['func_14058'] = func_14058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_14116 = func_4488_call()
call_14117 = func_4488_call()
output = call_14116
output2 = call_14117
func_14129 = relay.Function([], output)
mod['func_14129'] = func_14129
mod = relay.transform.InferType()(mod)
mutated_mod['func_14129'] = func_14129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14129_call = mutated_mod.get_global_var('func_14129')
call_14130 = func_14129_call()
output = call_14130
func_14131 = relay.Function([], output)
mutated_mod['func_14131'] = func_14131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14129_call = mod.get_global_var('func_14129')
func_14131_call = mutated_mod.get_global_var('func_14131')
call_14175 = func_14129_call()
call_14176 = func_14129_call()
func_12102_call = mod.get_global_var('func_12102')
func_12104_call = mutated_mod.get_global_var('func_12104')
call_14177 = relay.TupleGetItem(func_12102_call(), 0)
call_14178 = relay.TupleGetItem(func_12104_call(), 0)
output = relay.Tuple([call_14175,call_14177,])
output2 = relay.Tuple([call_14176,call_14178,])
func_14195 = relay.Function([], output)
mod['func_14195'] = func_14195
mod = relay.transform.InferType()(mod)
output = func_14195()
func_14196 = relay.Function([], output)
mutated_mod['func_14196'] = func_14196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_14222 = func_4854_call()
call_14223 = func_4854_call()
func_10322_call = mod.get_global_var('func_10322')
func_10323_call = mutated_mod.get_global_var('func_10323')
call_14266 = relay.TupleGetItem(func_10322_call(), 1)
call_14267 = relay.TupleGetItem(func_10323_call(), 1)
output = relay.Tuple([call_14222,call_14266,])
output2 = relay.Tuple([call_14223,call_14267,])
func_14268 = relay.Function([], output)
mod['func_14268'] = func_14268
mod = relay.transform.InferType()(mod)
mutated_mod['func_14268'] = func_14268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14268_call = mutated_mod.get_global_var('func_14268')
call_14269 = func_14268_call()
output = call_14269
func_14270 = relay.Function([], output)
mutated_mod['func_14270'] = func_14270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6891_call = mod.get_global_var('func_6891')
func_6893_call = mutated_mod.get_global_var('func_6893')
call_14273 = relay.TupleGetItem(func_6891_call(), 0)
call_14274 = relay.TupleGetItem(func_6893_call(), 0)
output = relay.Tuple([call_14273,])
output2 = relay.Tuple([call_14274,])
func_14331 = relay.Function([], output)
mod['func_14331'] = func_14331
mod = relay.transform.InferType()(mod)
mutated_mod['func_14331'] = func_14331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14331_call = mutated_mod.get_global_var('func_14331')
call_14332 = func_14331_call()
output = call_14332
func_14333 = relay.Function([], output)
mutated_mod['func_14333'] = func_14333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_14343 = func_5416_call()
call_14344 = func_5416_call()
func_13472_call = mod.get_global_var('func_13472')
func_13473_call = mutated_mod.get_global_var('func_13473')
call_14352 = relay.TupleGetItem(func_13472_call(), 0)
call_14353 = relay.TupleGetItem(func_13473_call(), 0)
output = relay.Tuple([call_14343,call_14352,])
output2 = relay.Tuple([call_14344,call_14353,])
func_14354 = relay.Function([], output)
mod['func_14354'] = func_14354
mod = relay.transform.InferType()(mod)
mutated_mod['func_14354'] = func_14354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14354_call = mutated_mod.get_global_var('func_14354')
call_14355 = func_14354_call()
output = call_14355
func_14356 = relay.Function([], output)
mutated_mod['func_14356'] = func_14356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11560_call = mod.get_global_var('func_11560')
func_11562_call = mutated_mod.get_global_var('func_11562')
call_14380 = relay.TupleGetItem(func_11560_call(), 1)
call_14381 = relay.TupleGetItem(func_11562_call(), 1)
func_4836_call = mod.get_global_var('func_4836')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_14382 = relay.TupleGetItem(func_4836_call(), 0)
call_14383 = relay.TupleGetItem(func_4838_call(), 0)
output = relay.Tuple([call_14380,call_14382,])
output2 = relay.Tuple([call_14381,call_14383,])
func_14389 = relay.Function([], output)
mod['func_14389'] = func_14389
mod = relay.transform.InferType()(mod)
mutated_mod['func_14389'] = func_14389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14389_call = mutated_mod.get_global_var('func_14389')
call_14390 = func_14389_call()
output = call_14390
func_14391 = relay.Function([], output)
mutated_mod['func_14391'] = func_14391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8352_call = mod.get_global_var('func_8352')
func_8353_call = mutated_mod.get_global_var('func_8353')
call_14452 = relay.TupleGetItem(func_8352_call(), 0)
call_14453 = relay.TupleGetItem(func_8353_call(), 0)
func_11194_call = mod.get_global_var('func_11194')
func_11195_call = mutated_mod.get_global_var('func_11195')
call_14460 = func_11194_call()
call_14461 = func_11194_call()
output = relay.Tuple([call_14452,call_14460,])
output2 = relay.Tuple([call_14453,call_14461,])
func_14466 = relay.Function([], output)
mod['func_14466'] = func_14466
mod = relay.transform.InferType()(mod)
mutated_mod['func_14466'] = func_14466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14466_call = mutated_mod.get_global_var('func_14466')
call_14467 = func_14466_call()
output = call_14467
func_14468 = relay.Function([], output)
mutated_mod['func_14468'] = func_14468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12363_call = mod.get_global_var('func_12363')
func_12365_call = mutated_mod.get_global_var('func_12365')
call_14491 = func_12363_call()
call_14492 = func_12363_call()
output = call_14491
output2 = call_14492
func_14493 = relay.Function([], output)
mod['func_14493'] = func_14493
mod = relay.transform.InferType()(mod)
mutated_mod['func_14493'] = func_14493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14493_call = mutated_mod.get_global_var('func_14493')
call_14494 = func_14493_call()
output = call_14494
func_14495 = relay.Function([], output)
mutated_mod['func_14495'] = func_14495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11180_call = mod.get_global_var('func_11180')
func_11181_call = mutated_mod.get_global_var('func_11181')
call_14538 = func_11180_call()
call_14539 = func_11180_call()
func_8025_call = mod.get_global_var('func_8025')
func_8026_call = mutated_mod.get_global_var('func_8026')
call_14550 = relay.TupleGetItem(func_8025_call(), 1)
call_14551 = relay.TupleGetItem(func_8026_call(), 1)
func_7409_call = mod.get_global_var('func_7409')
func_7411_call = mutated_mod.get_global_var('func_7411')
call_14554 = relay.TupleGetItem(func_7409_call(), 1)
call_14555 = relay.TupleGetItem(func_7411_call(), 1)
output = relay.Tuple([call_14538,call_14550,call_14554,])
output2 = relay.Tuple([call_14539,call_14551,call_14555,])
func_14556 = relay.Function([], output)
mod['func_14556'] = func_14556
mod = relay.transform.InferType()(mod)
output = func_14556()
func_14557 = relay.Function([], output)
mutated_mod['func_14557'] = func_14557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11163_call = mod.get_global_var('func_11163')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_14648 = relay.TupleGetItem(func_11163_call(), 1)
call_14649 = relay.TupleGetItem(func_11164_call(), 1)
func_13845_call = mod.get_global_var('func_13845')
func_13847_call = mutated_mod.get_global_var('func_13847')
call_14657 = relay.TupleGetItem(func_13845_call(), 0)
call_14658 = relay.TupleGetItem(func_13847_call(), 0)
func_14129_call = mod.get_global_var('func_14129')
func_14131_call = mutated_mod.get_global_var('func_14131')
call_14663 = func_14129_call()
call_14664 = func_14129_call()
output = relay.Tuple([call_14648,call_14657,call_14663,])
output2 = relay.Tuple([call_14649,call_14658,call_14664,])
func_14667 = relay.Function([], output)
mod['func_14667'] = func_14667
mod = relay.transform.InferType()(mod)
output = func_14667()
func_14668 = relay.Function([], output)
mutated_mod['func_14668'] = func_14668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8025_call = mod.get_global_var('func_8025')
func_8026_call = mutated_mod.get_global_var('func_8026')
call_14805 = relay.TupleGetItem(func_8025_call(), 1)
call_14806 = relay.TupleGetItem(func_8026_call(), 1)
output = call_14805
output2 = call_14806
func_14809 = relay.Function([], output)
mod['func_14809'] = func_14809
mod = relay.transform.InferType()(mod)
mutated_mod['func_14809'] = func_14809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14809_call = mutated_mod.get_global_var('func_14809')
call_14810 = func_14809_call()
output = call_14810
func_14811 = relay.Function([], output)
mutated_mod['func_14811'] = func_14811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6791_call = mod.get_global_var('func_6791')
func_6792_call = mutated_mod.get_global_var('func_6792')
call_14902 = relay.TupleGetItem(func_6791_call(), 0)
call_14903 = relay.TupleGetItem(func_6792_call(), 0)
output = relay.Tuple([call_14902,])
output2 = relay.Tuple([call_14903,])
func_14922 = relay.Function([], output)
mod['func_14922'] = func_14922
mod = relay.transform.InferType()(mod)
output = func_14922()
func_14923 = relay.Function([], output)
mutated_mod['func_14923'] = func_14923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_14949 = relay.TupleGetItem(func_4625_call(), 3)
call_14950 = relay.TupleGetItem(func_4626_call(), 3)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_14960 = func_4854_call()
call_14961 = func_4854_call()
output = relay.Tuple([call_14949,call_14960,])
output2 = relay.Tuple([call_14950,call_14961,])
func_14971 = relay.Function([], output)
mod['func_14971'] = func_14971
mod = relay.transform.InferType()(mod)
mutated_mod['func_14971'] = func_14971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14971_call = mutated_mod.get_global_var('func_14971')
call_14972 = func_14971_call()
output = call_14972
func_14973 = relay.Function([], output)
mutated_mod['func_14973'] = func_14973
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15021 = relay.var("var_15021", dtype = "float64", shape = (7, 15, 3))#candidate|15021|(7, 15, 3)|var|float64
uop_15022 = relay.erf(var_15021.astype('float64')) # shape=(7, 15, 3)
func_7710_call = mod.get_global_var('func_7710')
func_7713_call = mutated_mod.get_global_var('func_7713')
var_15034 = relay.var("var_15034", dtype = "uint8", shape = (180,))#candidate|15034|(180,)|var|uint8
call_15033 = relay.TupleGetItem(func_7710_call(relay.reshape(var_15034.astype('uint8'), [180,])), 1)
call_15035 = relay.TupleGetItem(func_7713_call(relay.reshape(var_15034.astype('uint8'), [180,])), 1)
uop_15038 = relay.sinh(uop_15022.astype('float32')) # shape=(7, 15, 3)
func_12722_call = mod.get_global_var('func_12722')
func_12724_call = mutated_mod.get_global_var('func_12724')
call_15054 = relay.TupleGetItem(func_12722_call(), 0)
call_15055 = relay.TupleGetItem(func_12724_call(), 0)
func_6699_call = mod.get_global_var('func_6699')
func_6701_call = mutated_mod.get_global_var('func_6701')
call_15068 = relay.TupleGetItem(func_6699_call(), 0)
call_15069 = relay.TupleGetItem(func_6701_call(), 0)
output = relay.Tuple([call_15033,var_15034,uop_15038,call_15054,call_15068,])
output2 = relay.Tuple([call_15035,var_15034,uop_15038,call_15055,call_15069,])
func_15075 = relay.Function([var_15021,var_15034,], output)
mod['func_15075'] = func_15075
mod = relay.transform.InferType()(mod)
var_15076 = relay.var("var_15076", dtype = "float64", shape = (7, 15, 3))#candidate|15076|(7, 15, 3)|var|float64
var_15077 = relay.var("var_15077", dtype = "uint8", shape = (180,))#candidate|15077|(180,)|var|uint8
output = func_15075(var_15076,var_15077,)
func_15078 = relay.Function([var_15076,var_15077,], output)
mutated_mod['func_15078'] = func_15078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10532_call = mod.get_global_var('func_10532')
func_10533_call = mutated_mod.get_global_var('func_10533')
call_15080 = func_10532_call()
call_15081 = func_10532_call()
func_12363_call = mod.get_global_var('func_12363')
func_12365_call = mutated_mod.get_global_var('func_12365')
call_15084 = func_12363_call()
call_15085 = func_12363_call()
func_9220_call = mod.get_global_var('func_9220')
func_9222_call = mutated_mod.get_global_var('func_9222')
call_15100 = relay.TupleGetItem(func_9220_call(), 0)
call_15101 = relay.TupleGetItem(func_9222_call(), 0)
func_1091_call = mod.get_global_var('func_1091')
func_1094_call = mutated_mod.get_global_var('func_1094')
var_15121 = relay.var("var_15121", dtype = "float64", shape = (2925,))#candidate|15121|(2925,)|var|float64
call_15120 = func_1091_call(relay.reshape(var_15121.astype('float64'), [15, 13, 15]))
call_15122 = func_1091_call(relay.reshape(var_15121.astype('float64'), [15, 13, 15]))
uop_15123 = relay.cosh(call_15100.astype('float32')) # shape=(14, 6, 13)
uop_15125 = relay.cosh(call_15101.astype('float32')) # shape=(14, 6, 13)
func_4525_call = mod.get_global_var('func_4525')
func_4528_call = mutated_mod.get_global_var('func_4528')
var_15135 = relay.var("var_15135", dtype = "bool", shape = (675,))#candidate|15135|(675,)|var|bool
call_15134 = relay.TupleGetItem(func_4525_call(relay.reshape(var_15135.astype('bool'), [15, 9, 5]), relay.reshape(var_15135.astype('bool'), [15, 9, 5]), ), 0)
call_15136 = relay.TupleGetItem(func_4528_call(relay.reshape(var_15135.astype('bool'), [15, 9, 5]), relay.reshape(var_15135.astype('bool'), [15, 9, 5]), ), 0)
func_14057_call = mod.get_global_var('func_14057')
func_14058_call = mutated_mod.get_global_var('func_14058')
call_15164 = relay.TupleGetItem(func_14057_call(), 1)
call_15165 = relay.TupleGetItem(func_14058_call(), 1)
func_14809_call = mod.get_global_var('func_14809')
func_14811_call = mutated_mod.get_global_var('func_14811')
call_15170 = func_14809_call()
call_15171 = func_14809_call()
func_14809_call = mod.get_global_var('func_14809')
func_14811_call = mutated_mod.get_global_var('func_14811')
call_15190 = func_14809_call()
call_15191 = func_14809_call()
output = relay.Tuple([call_15080,call_15084,call_15120,var_15121,uop_15123,call_15134,var_15135,call_15164,call_15170,call_15190,])
output2 = relay.Tuple([call_15081,call_15085,call_15122,var_15121,uop_15125,call_15136,var_15135,call_15165,call_15171,call_15191,])
func_15200 = relay.Function([var_15121,var_15135,], output)
mod['func_15200'] = func_15200
mod = relay.transform.InferType()(mod)
var_15201 = relay.var("var_15201", dtype = "float64", shape = (2925,))#candidate|15201|(2925,)|var|float64
var_15202 = relay.var("var_15202", dtype = "bool", shape = (675,))#candidate|15202|(675,)|var|bool
output = func_15200(var_15201,var_15202,)
func_15203 = relay.Function([var_15201,var_15202,], output)
mutated_mod['func_15203'] = func_15203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9121_call = mod.get_global_var('func_9121')
func_9122_call = mutated_mod.get_global_var('func_9122')
call_15278 = relay.TupleGetItem(func_9121_call(), 0)
call_15279 = relay.TupleGetItem(func_9122_call(), 0)
func_5285_call = mod.get_global_var('func_5285')
func_5287_call = mutated_mod.get_global_var('func_5287')
var_15283 = relay.var("var_15283", dtype = "float32", shape = (1210,))#candidate|15283|(1210,)|var|float32
call_15282 = relay.TupleGetItem(func_5285_call(relay.reshape(var_15283.astype('float32'), [1, 1210])), 7)
call_15284 = relay.TupleGetItem(func_5287_call(relay.reshape(var_15283.astype('float32'), [1, 1210])), 7)
func_13385_call = mod.get_global_var('func_13385')
func_13387_call = mutated_mod.get_global_var('func_13387')
call_15285 = relay.TupleGetItem(func_13385_call(), 0)
call_15286 = relay.TupleGetItem(func_13387_call(), 0)
func_1479_call = mod.get_global_var('func_1479')
func_1482_call = mutated_mod.get_global_var('func_1482')
var_15289 = relay.var("var_15289", dtype = "bool", shape = ())#candidate|15289|()|var|bool
call_15288 = relay.TupleGetItem(func_1479_call(relay.reshape(var_15289.astype('bool'), [])), 0)
call_15290 = relay.TupleGetItem(func_1482_call(relay.reshape(var_15289.astype('bool'), [])), 0)
bop_15295 = relay.bitwise_and(call_15282.astype('uint32'), relay.reshape(var_15283.astype('uint32'), relay.shape_of(call_15282))) # shape=(1, 1210)
bop_15298 = relay.bitwise_and(call_15284.astype('uint32'), relay.reshape(var_15283.astype('uint32'), relay.shape_of(call_15284))) # shape=(1, 1210)
func_10895_call = mod.get_global_var('func_10895')
func_10897_call = mutated_mod.get_global_var('func_10897')
var_15300 = relay.var("var_15300", dtype = "bool", shape = (22, 96))#candidate|15300|(22, 96)|var|bool
call_15299 = relay.TupleGetItem(func_10895_call(relay.reshape(var_15300.astype('bool'), [2112,])), 2)
call_15301 = relay.TupleGetItem(func_10897_call(relay.reshape(var_15300.astype('bool'), [2112,])), 2)
func_7369_call = mod.get_global_var('func_7369')
func_7371_call = mutated_mod.get_global_var('func_7371')
call_15302 = relay.TupleGetItem(func_7369_call(), 0)
call_15303 = relay.TupleGetItem(func_7371_call(), 0)
output = relay.Tuple([call_15278,call_15285,call_15288,var_15289,bop_15295,call_15299,var_15300,call_15302,])
output2 = relay.Tuple([call_15279,call_15286,call_15290,var_15289,bop_15298,call_15301,var_15300,call_15303,])
func_15306 = relay.Function([var_15283,var_15289,var_15300,], output)
mod['func_15306'] = func_15306
mod = relay.transform.InferType()(mod)
var_15307 = relay.var("var_15307", dtype = "float32", shape = (1210,))#candidate|15307|(1210,)|var|float32
var_15308 = relay.var("var_15308", dtype = "bool", shape = ())#candidate|15308|()|var|bool
var_15309 = relay.var("var_15309", dtype = "bool", shape = (22, 96))#candidate|15309|(22, 96)|var|bool
output = func_15306(var_15307,var_15308,var_15309,)
func_15310 = relay.Function([var_15307,var_15308,var_15309,], output)
mutated_mod['func_15310'] = func_15310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9673_call = mod.get_global_var('func_9673')
func_9675_call = mutated_mod.get_global_var('func_9675')
call_15352 = relay.TupleGetItem(func_9673_call(), 0)
call_15353 = relay.TupleGetItem(func_9675_call(), 0)
func_5506_call = mod.get_global_var('func_5506')
func_5508_call = mutated_mod.get_global_var('func_5508')
call_15380 = relay.TupleGetItem(func_5506_call(), 4)
call_15381 = relay.TupleGetItem(func_5508_call(), 4)
func_10023_call = mod.get_global_var('func_10023')
func_10025_call = mutated_mod.get_global_var('func_10025')
call_15382 = relay.TupleGetItem(func_10023_call(), 0)
call_15383 = relay.TupleGetItem(func_10025_call(), 0)
func_10322_call = mod.get_global_var('func_10322')
func_10323_call = mutated_mod.get_global_var('func_10323')
call_15386 = relay.TupleGetItem(func_10322_call(), 0)
call_15387 = relay.TupleGetItem(func_10323_call(), 0)
output = relay.Tuple([call_15352,call_15380,call_15382,call_15386,])
output2 = relay.Tuple([call_15353,call_15381,call_15383,call_15387,])
func_15393 = relay.Function([], output)
mod['func_15393'] = func_15393
mod = relay.transform.InferType()(mod)
mutated_mod['func_15393'] = func_15393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15393_call = mutated_mod.get_global_var('func_15393')
call_15394 = func_15393_call()
output = call_15394
func_15395 = relay.Function([], output)
mutated_mod['func_15395'] = func_15395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14971_call = mod.get_global_var('func_14971')
func_14973_call = mutated_mod.get_global_var('func_14973')
call_15423 = relay.TupleGetItem(func_14971_call(), 0)
call_15424 = relay.TupleGetItem(func_14973_call(), 0)
output = relay.Tuple([call_15423,])
output2 = relay.Tuple([call_15424,])
func_15428 = relay.Function([], output)
mod['func_15428'] = func_15428
mod = relay.transform.InferType()(mod)
output = func_15428()
func_15429 = relay.Function([], output)
mutated_mod['func_15429'] = func_15429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14129_call = mod.get_global_var('func_14129')
func_14131_call = mutated_mod.get_global_var('func_14131')
call_15435 = func_14129_call()
call_15436 = func_14129_call()
output = relay.Tuple([call_15435,])
output2 = relay.Tuple([call_15436,])
func_15437 = relay.Function([], output)
mod['func_15437'] = func_15437
mod = relay.transform.InferType()(mod)
output = func_15437()
func_15438 = relay.Function([], output)
mutated_mod['func_15438'] = func_15438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12102_call = mod.get_global_var('func_12102')
func_12104_call = mutated_mod.get_global_var('func_12104')
call_15441 = relay.TupleGetItem(func_12102_call(), 0)
call_15442 = relay.TupleGetItem(func_12104_call(), 0)
output = call_15441
output2 = call_15442
func_15460 = relay.Function([], output)
mod['func_15460'] = func_15460
mod = relay.transform.InferType()(mod)
output = func_15460()
func_15461 = relay.Function([], output)
mutated_mod['func_15461'] = func_15461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11163_call = mod.get_global_var('func_11163')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_15471 = relay.TupleGetItem(func_11163_call(), 1)
call_15472 = relay.TupleGetItem(func_11164_call(), 1)
output = call_15471
output2 = call_15472
func_15477 = relay.Function([], output)
mod['func_15477'] = func_15477
mod = relay.transform.InferType()(mod)
output = func_15477()
func_15478 = relay.Function([], output)
mutated_mod['func_15478'] = func_15478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11618_call = mod.get_global_var('func_11618')
func_11619_call = mutated_mod.get_global_var('func_11619')
call_15714 = relay.TupleGetItem(func_11618_call(), 1)
call_15715 = relay.TupleGetItem(func_11619_call(), 1)
func_12485_call = mod.get_global_var('func_12485')
func_12487_call = mutated_mod.get_global_var('func_12487')
call_15739 = relay.TupleGetItem(func_12485_call(), 0)
call_15740 = relay.TupleGetItem(func_12487_call(), 0)
output = relay.Tuple([call_15714,call_15739,])
output2 = relay.Tuple([call_15715,call_15740,])
func_15753 = relay.Function([], output)
mod['func_15753'] = func_15753
mod = relay.transform.InferType()(mod)
output = func_15753()
func_15754 = relay.Function([], output)
mutated_mod['func_15754'] = func_15754
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15765 = relay.var("var_15765", dtype = "float32", shape = (9, 3, 6))#candidate|15765|(9, 3, 6)|var|float32
uop_15766 = relay.log10(var_15765.astype('float32')) # shape=(9, 3, 6)
func_12447_call = mod.get_global_var('func_12447')
func_12448_call = mutated_mod.get_global_var('func_12448')
call_15773 = func_12447_call()
call_15774 = func_12447_call()
func_13385_call = mod.get_global_var('func_13385')
func_13387_call = mutated_mod.get_global_var('func_13387')
call_15775 = relay.TupleGetItem(func_13385_call(), 0)
call_15776 = relay.TupleGetItem(func_13387_call(), 0)
func_11970_call = mod.get_global_var('func_11970')
func_11974_call = mutated_mod.get_global_var('func_11974')
const_15782 = relay.const([-0.844159,-6.996372,-6.429143,8.196506,-1.777459,-3.392037,1.937998,-1.438339,-7.916674,-6.446779,7.949614,9.879541,-8.581094,3.714960,4.854317,-9.496553,-3.329280,-2.826766,-1.532753,9.186113,-7.723405,-9.032888,-6.898728,-0.690318,-0.804775,3.449935,7.268850,-4.841586,-9.538045,9.919841,3.846204,7.253039,-6.945216,-3.028326,2.379300,-6.521310,-2.433788,3.608138,8.229468,9.315212,-0.541803,2.663535,-1.320409,2.189398,4.116089,-5.382125,-0.371485,5.185957,-3.987853,-3.336282,0.523874,6.407383,9.147761,-4.409022,-9.525768,-6.903742,-6.906027,7.662642,0.669667,-0.804645,1.557687,-8.673787,-2.323823,7.219922,8.743904,3.392895,-8.457047,-4.078743,7.995388,-1.149429,8.811477,5.126588,-0.682007,-6.697824,3.570609,-1.700614,5.227153,0.299423,-6.496061,-5.971103,-1.705121,9.006265,-4.609131,-7.702184,-0.456676,-8.517548,-8.354558,-5.629630,-1.055851,-7.678611,4.634046,-9.034580,7.793281,-5.606743,-8.780390,-1.396109,-0.726520,0.816425,5.349828,4.939599,-8.282140,4.091945,9.346558,1.641710,-9.018805,9.580814,4.393097,2.344427,6.478718,-1.305096,-8.585956,-4.869039,-0.775339,-3.799226,-3.186660,-8.526999,3.296368,2.437013,8.948397,-4.931316,-9.813915,0.235007,2.920862,7.524170,-7.820719,0.920501,-4.893154,-3.981802,9.948355,-8.224446,-2.968163,1.663709,3.840460,-6.413586,8.234684,-6.047122,-4.675234,9.664455,-7.873767,2.664372,3.934211,-3.228690,-6.187011,-4.664804,3.307090,3.753386,4.298674,3.052710,7.278664,3.869387,-8.186594,2.953376,8.950068,-0.216789,6.884035,9.826236,-7.440652,-0.856384,-7.663244,3.220167,9.129007,7.490582,7.152793,9.411848,-9.057845,1.174816,9.401606,7.089064,-2.336185,-6.396432,3.790610,-8.021913,2.065346,2.911165,6.911797,7.465200,1.356791,-5.729544,3.590942,-4.835901,-1.285614,-2.941126,-3.522645,3.794958,-7.913110,-2.573349,4.872475,5.692346,4.103106,-6.303396,2.089917,8.992068,-0.308976,6.291839,-0.673304,1.336822,-5.746791,-2.478692,5.552165,6.415135,2.814739,-9.861494,-9.042827,-2.663225,-4.919889,-3.174107,-5.518040,-8.102282,9.319386,6.820977,2.301856,2.332468,-7.471277,-3.498674,1.807004,0.553021,4.515730,6.889560,-1.376702,4.142350,-6.532426,-9.353782,-0.793736,0.139651,1.663570,4.306083,3.019159,-3.550251,-8.226972,7.209343,-0.141449,-8.853197,-8.919402,9.045378,8.380361,3.179933,-2.305811,1.652636,1.885520,0.668989,5.712801,7.666064,2.215775,-2.195632,6.779383,4.538162,5.346992,2.937927,0.432173,-4.616107,-3.522221,-3.194831,0.570851,0.242865,-8.511510,8.928944,9.497978,-6.973788,-2.854360,-3.144621,-7.497105,2.801550,8.746377,-5.797142,7.494138,-2.581471,-3.366078,2.179741,-6.641642,-2.333528,7.375427,-4.225065,9.048943,5.259641,9.916585,9.329184,1.950705,3.691908,5.033893,3.043991,-6.944864,-4.848010,-9.643485,3.002414,-4.423571,2.111545,8.113959,-5.159181,-4.988513,5.323705,2.279326,1.371353,1.192234,-8.209738,-7.747758,-9.785120,1.471722,-0.136067,-7.588776,-9.898221,5.872691,-1.846916,1.044196,0.843020,-0.669439,3.091411,6.872466,-8.676813,-2.130413,-3.696244,-4.332320,9.265283,0.795041,2.576856,5.947794,2.619456,0.723768,-4.992417,-9.736287,-5.002335,-6.857663,9.715216,-4.533633,-0.207580,-7.532131,-6.846276,8.380714,-9.614850,0.192451,-8.870621,4.526824,4.787925,4.409028,1.280796,-2.137934,-7.570225,2.731591,-6.834210,2.480091,-4.149580,5.280213,-2.219152,8.107854,-0.220227,-2.530507,4.173411,-2.307294,-4.876308,-9.064036,7.693353,8.883413,4.886407,8.819629,2.633336,3.170015,-9.630119,-0.672688,2.587438,3.837559,-8.579002,9.327411,2.896165,-5.767888,9.425716,7.499535,1.700916,6.374153,-6.081845,4.058474,4.563095,4.366057,7.819784,1.991096,0.780502,-2.041527,-7.710248,-0.702172,6.068898,-4.837908,6.117587,-5.976794,-2.221029,-3.160158,-3.665443,-8.970387,-4.054429,-5.084318,2.955488,-5.611490,-2.975656,-4.674083,-9.866544,3.712447,-3.787744,4.294916,2.039474,-3.070162,0.324214,-5.924124,-6.169277,4.469271,8.677765,9.992044,1.590613,1.263821,-8.212701,0.121452,-0.217385,1.615215,-1.203894,7.803595,-9.751436,4.956100,-1.046679,5.387992,1.806972,4.061957,-9.213819,0.273183,-3.037358,-5.083732,9.720474,-0.144478,-9.171034,-9.595943,-1.810823,-2.296423,6.355607,-8.841589,-5.069083,7.754879,-0.020402,-5.284530,8.515324,9.722244,-1.616055,-7.970097,2.212491,-0.445704,-0.505286,-8.495209,-8.902247,4.780666,-8.779673,9.782570,-7.304993,-9.721396,7.898024,3.381256,0.631940,-0.459629,-1.635578,1.614255,7.391279,3.755161,-7.836333,-7.335389,7.134684,-8.244768,2.948694,-6.587509,-5.718675,2.139026,7.708172,-1.216718,6.014789,-6.085387,-6.209373,9.062041,4.642296,5.736868,-7.993455,-4.739272,-4.243182,7.776891,-2.500847,5.278365,9.001011,-4.710110,3.884073,1.325248,-1.261259,6.698618,5.111810,-9.727655,7.442625,-9.105230,-9.871697,9.059191,6.383562,-2.643389,-9.959718,8.924030,-2.411609,-6.336996,-5.866011,-8.725269,-0.355872,3.528149,-2.969298,-3.106189,-0.469390,1.026345,-6.599096,2.448966,-8.130538,6.817148,4.863485,-6.045102,8.288930,2.679416,-1.217068,-5.008510,5.195999,-3.838230,5.177331,-2.606040,6.217129,-3.479198,-2.813704,6.187574,-0.404648,-2.736608,4.595959,0.601353,4.488056,7.256219,6.869303,-6.668775,0.386147,-8.036243,-3.611587,-7.703850,8.451189,2.777155,-0.777033,-2.020416,0.657312,-3.692206,1.377636,6.151974,6.799786,-2.321538,-2.113528,0.372306,6.850796,3.562353,-5.725592,3.190961,-7.565410,-4.729851,4.048036,7.833573,7.584355,-9.895317,-6.470792,6.690534,-2.361501,-7.350004,6.265739,-4.938793,0.396792,-8.818231,-9.444719,3.884088,-0.872935,9.234794,-7.685216,-9.245645,8.640078,-5.567905,0.580924,6.054795,5.638390,-6.078989,4.718058,2.211724,-3.909874,1.973718,4.936887,-0.913158,-4.788168,-3.901950,-5.544710,-7.097034,4.242075,4.432352,-6.809452,-5.821286,-1.758013,-1.182583,6.894607,5.273929,6.404104,-4.960539,7.016485,-7.446630,8.860782,1.783240,-6.072309,6.093176,-5.541318,-9.864099,8.323187,7.493455,1.607522,6.385607,5.348751,9.406929,9.376114,-4.976816,-8.235370,-0.155062,8.183317,0.554679,4.166922,9.065601,-9.902548,3.220689,-2.278716,9.207141,-5.390491,-8.368396,4.220415,3.028301,-9.200422,-4.358404,-3.953770,-6.310485,-2.028179,0.553935,-6.927029,1.217462,-8.390680,-1.452134,5.255424,9.464993,-9.023774,-8.394290,4.387496,2.053998,3.187344,-0.771002,-3.062157,5.656264,-5.743066,3.648550,3.509185,9.583598,2.714846,-5.933538,-1.833471,-2.021225,8.573438,-2.569128,-7.250235,-0.252436,2.964547,-9.823570,0.904301,-7.725765,-6.096417,-8.915143,6.879234,-9.252576,1.987783,0.913651,-8.986578,0.387026,-4.531493,-5.139274,0.377694,-2.670026,8.249375,-5.240727,-1.548615,-0.195971,-9.621616,-3.497245,3.893543,-8.075510,5.896723,-3.966797,-3.391330,-5.156319,1.440100,2.530374,5.568166,-7.926338,-2.467042,-8.238314,1.211522,-4.487240,2.076150,6.723651,3.938128,-7.762070,-8.860473,-6.471734,-8.250587,0.347367,9.153474,-2.023496,3.854762,9.834622,3.127841,-9.511916,-8.882470,7.897041,-9.109572,-5.101023,-6.380360,-9.398701,4.885480,9.026519,9.653894,-5.367877,-2.080011,-0.305816,6.619982,9.221182,1.984875,2.193230,-2.634499,3.977931,-0.042105,-1.104398,-4.210879,1.781971,0.292055,4.533963,7.728877,5.698727,-6.477709,2.230369,5.186716,7.589745,0.862230,9.942249,0.308841,-0.209823,-4.341690,-3.669703,1.656451,6.168779,0.514483,-5.830975,-7.444822,-4.054529,3.045004,-9.681555,-6.200599,1.050806,-3.982340,-9.835245,8.011062,2.536774,9.998251,5.823016,4.502364,-2.819380,1.332610,-0.576001,-6.369300,6.698898,-4.260015,3.138307,2.531893,-9.154069,7.422987,7.088603,7.481467,-1.439666,-8.372686,-7.520540,-2.072394,-0.495527,3.549062,7.322128,1.396065,4.587246,-6.030488,4.638276,5.679467,-2.512218,-1.015924,3.958192,-2.561207,-3.280660,4.703703,6.403788,3.684113,-7.572168,-9.848639,5.681318,-1.162979,4.792894,8.255767,-7.410355,1.597586,2.593236,-7.488454,1.413285,-0.295506,1.142401,-8.761474,-2.606103,2.968132,-6.551590,-0.690224,3.239062,-0.919100,-5.646464,3.158773,-1.188485,8.436891,-3.448997,0.086491,-7.724349,-7.881658,8.173281,-6.461398,-5.838987,-1.741331,9.227282,-5.956346,8.531485,-6.809329,-0.402335,-3.421345,-7.265984,-3.326364,0.943893,-1.013695,-7.363249,-2.523314,-3.909746,4.827183,-9.973271,3.536866,-7.249268,-2.649260,5.116219,6.609667,2.042105,-6.569158,5.093940,-0.511964,-9.966823,6.327623,4.808859,4.667606,-3.604191,3.034014,-3.851274,5.105261,-9.641391,6.696522,-0.086364,-6.310507,-5.192600,9.564669,7.932442,9.093372,-6.732490,-8.615851,-9.568859,1.267503,-0.165409,4.017470,-5.679446,-0.382625,-1.119785,-5.484904,-3.353615,-5.394547,2.494728,5.943576,-2.740609,4.935630,5.392175,-0.777469,5.815910,-6.113340,-7.759027,-5.147125,-4.045169,-3.528553,-0.706158,9.678009,2.695106,-2.296255,9.270309,0.718199,-7.619960,0.584354,9.164259,8.995704,8.787091,-6.482253,0.916811,-0.949898,5.827932,-1.788882,6.170247,0.166759,-9.884023,-6.835131,9.505247,2.381021,-9.462023,0.523754,-8.761921,-9.763971,-2.897079,-0.578475,3.804726,-7.438432,1.379344,7.147534,-2.178266,8.518534,-1.358025,8.349386,4.871836,3.472728,6.480857,2.454717,8.324445,7.212339,0.899901,3.554951,3.511181,1.083436,-7.315820,2.846625,6.851894,0.740053,-0.929530,3.410788,0.997844,8.671979,2.299383,0.595915,-7.856965,4.405370,-4.265119,2.117057,-0.558310,-2.001818,2.756956,2.408121,-9.999903,-7.514707,5.928894,-0.326824,-6.147117,0.964497,3.442145,-9.987059,-4.871044,5.670848,-2.939269,-9.221088,2.514626,6.938932,-0.976833,-3.288087,-4.078182,-3.927758,-2.648766,-5.984025,-2.092308,9.795400,-4.067294,-4.205776,7.537804,2.370357,-6.932660,-0.596861,-0.590711,-2.566483,-6.341751,0.031857,4.842921,0.335240,2.784142,-0.911030,6.553093,0.792168,1.961016,-4.217757,4.576629,-4.722041,4.866649,6.820105,-9.884128,8.977948,-6.621514,9.273753,-0.380168,-9.467073,7.504115,3.718896,-1.596922,-7.842691,-6.491760,-4.383279,4.902121,6.807700,9.618282,-6.879604,-6.564902,-9.012369,9.386852,-3.944370,-5.408094,0.245938,1.896412,5.378192,4.351122,9.282409,-4.584545,4.203125,-2.485238,8.301695,6.115240,-8.940311,0.950201,6.217543,-7.088264,-0.586811,-2.531466,-0.717638,-3.885803,0.570991,-1.825311,-6.920991,-3.425137,-0.142889,-4.327816,-3.609833,9.147306,-2.711262,9.901332,4.939724,6.335715,6.016384,8.553674,-7.041578,5.650230,4.124569,-5.791066,-9.149120,9.101591,-3.296820,-8.700792,-4.017344,7.346705,-6.213020,-0.856877,-7.255142,0.010843,9.980641,-6.678391,7.032245,4.976144,8.969674,-3.356372,-0.955427,-8.887820,3.101296,2.257522,-7.670537,-3.009044,4.034546,4.471517,5.696278,2.833842,9.590551,-7.577075,3.613384,-2.192328,7.709504,0.485534,-6.264078,-7.377081,-7.859885,8.623557,-3.977538,-6.667171,-4.662700,-2.855595,-7.010381,-9.489519,8.816195,-1.587820,-9.614259,9.669618,4.263386,8.687941,-8.029277,-9.080875,6.147172,7.597865,2.855763,-9.205864,4.259228,3.734825,-3.685237,-2.507553,-2.289593,9.271239,1.510696,7.604555,3.695698,-9.574733,-0.935956,-2.506863,6.721822,-8.425254,4.057545,-1.396449,2.173850,8.782215,-0.772969,4.694801,-1.473942,6.370625,2.654262,8.572101,-0.773138,-6.346441,-4.069368,-4.811991,-4.553626,-2.539910,9.932388,8.862294,5.533703,2.976067,-4.035658,-8.347925,7.282305,-9.252045,-1.633679,7.522222,7.863251,-9.907945,-9.778831,7.059746,8.900184,9.689008,8.139924,8.787116,4.915297,-1.241317,1.721357,-1.233528,-4.347811,9.473354,-1.261951,2.121972,-1.330150,1.397212,3.845570,8.501103,9.665930,5.748201,7.473934,0.211784,8.733526,-0.475971,-3.309634,2.464110,3.427422,-7.992316,1.544519,-1.906014,0.680389,6.148823,-7.898067,2.025644,3.101173,-6.141165,7.608601,9.396220,7.384754,8.259302,-8.683607,7.917950,9.802711,-8.078080,1.632994,-4.552689,-7.614468,1.958503,-2.273425,-1.601244,-9.524829,7.366375,-9.203812,-9.126751,-7.857627,-4.612749,7.470344,4.825307,9.471701,6.223578,-7.010385,1.846173,1.877709,9.466387,3.876299,9.496937,7.896801,3.461667,2.146978,3.731690,6.719118,0.642996,5.356564,3.836367,-3.082770,-7.405672,-5.860822,2.145233,-6.402855,8.551765,3.319145,7.145840,5.690731,-5.546685,8.043567,9.372526,9.336585,5.649169,8.960557,2.884980,5.616457,-5.356974,1.563087,-4.049242,-5.433678,2.664297,-8.187448,-0.575674,5.459569,7.313257,2.736754,5.836357,6.082513,6.345089,6.743612,-4.480688,-5.036090,-7.019116,-3.127482,-4.372144,6.298336,-0.856612,-9.265811,7.342406,-3.156601,-6.527909,5.648711,-4.587371,-7.143332,2.194592,2.348183,8.456849,-3.588090,9.973412,-1.149244,-7.009837,-7.610744,4.798805,5.161846,-1.378214,2.592402,7.888754,9.549199,1.075730,-7.648773,0.016019,-7.427950,3.961189,9.884766,-7.668643,-7.147427,1.263575,8.080856,-3.680924,1.720254,-9.172489,8.192714,-2.563102,-7.963429,6.678053,-6.399910,-9.265996,6.589915,-6.154909,-3.413539,-5.297781,1.760207,9.497561,-7.686254,2.069967,2.929250,6.932422,-8.672351,4.783739,9.187519,6.882014,3.324127,8.793893,3.020305,4.207357,-8.245314,1.565025,5.433539,-8.244285,-3.074651,-5.722424,-9.250878,-3.076708,4.315317,1.173971,-1.704832,-1.069788,-1.224384,-1.673637,1.448585,2.585911,8.139883,2.650643,-7.971098,9.001525,-5.582656,-9.712728,6.974345,0.230348,-5.889176,7.122907,7.824617,-5.324333,9.301795,4.314457,0.728704,-5.581053,2.958037,3.821877,-6.933594,-2.378791,-5.603898,6.058419,-0.803616,-4.902017,5.085666,5.653899,-5.947026,-9.774577,4.427849,-8.755927,-2.608523,0.683827,4.138958,5.269323,0.466396,-3.160997,-1.992506,9.538611,-5.307057,4.010098,-4.873084,-7.772490,4.691218,-6.301037,-7.520829,1.047013,-6.586602,5.627046,2.747160,6.828179,-2.096413,8.266228,0.884668,5.515323,-3.134455,2.494098,-3.858576,8.208940,-1.790838,-2.644468,7.397413,6.102951,-9.056515,6.405074,-9.997134,5.482826,-4.724479,0.336098,5.553360,8.496250,-4.781158,-7.547797,-5.928715,-4.223403,-7.829505,7.567840,-7.768919,6.252036,4.121499,-4.242360,8.131322,2.923974,-2.720031,5.687877,0.419847,-5.864877,6.400675,-9.329707,-5.131569,-9.496458,2.625536,-2.283016,-4.116125,8.651150,-0.009821,3.748841,8.257913,9.447885,-1.275303,6.416530,1.290377,2.464591,1.728581,-8.951360,-5.735304,-7.009063,0.249104,4.635660,-5.787244,9.604613,-1.647550,-8.524021,7.888176,-2.910413,-3.802261,-3.334146,0.317480,-5.705071,2.494197,-6.544152,1.974776,-1.866372,-5.564671,-8.556129,-7.657072,1.260332,5.094486,-5.195429,-9.625088,-2.156912,-4.234555,-6.915057,-7.300341,-8.263153,-2.739852,1.830858,1.656063,-0.762726,2.028949,-9.613777,-0.118939,-0.319222,6.708764,3.048446,9.239746,-7.190802,-3.083730,1.058413,1.870855,-5.563532,1.731206,5.245777,7.909270,-1.237633,0.003563,-2.646735,-4.366228,8.889124,8.066894,4.313286,-9.105864,5.412318,4.801232,1.684841,-3.771647,-9.909687,5.298378,4.700723,2.665152,3.261348,-9.473971,-9.945738,-1.964356,2.104615,-7.089901,5.952438,-9.739693,3.643535,9.059667,9.215142,4.312602,7.533166,0.271531,0.920980,-9.626119,9.999162,1.420003,-6.256271,4.706078,2.124109,-3.194533,-0.348404,3.851014,-9.544058,-3.664130,9.678528,8.843932,-2.487722,2.680881,3.117917,-8.117475,-7.080187,1.350384,-3.956426,-6.000876,-2.699977,-1.669896,-9.502017,2.052201,-8.768451,-1.000962,2.976962,1.728297,-9.381403,1.398308,-0.842681,1.276757,2.342770,7.405992,7.760022,-6.338169,2.283080,9.344441,-6.862106,-5.083391,-7.003667,-8.385315,6.605817,-9.752284,-6.448560,3.715334,8.641053,-2.565561,1.875382,-6.629900,3.803379,5.035051,2.675327,-4.977979,2.613408,0.975514,5.686304,4.296688,7.870292,6.014083,2.488417,-1.917177,8.521619,-2.004354,3.734448,6.115321,0.555584,4.182915,1.246675,-2.605134,-3.334498,7.151440,-6.750135,-2.698403,-3.558416,1.928182,8.382031,-4.077446,-1.585372,1.193379,-5.556428,3.709886,5.912651,-7.022948,-5.198200,6.791117,-5.289349,4.062580,0.770341,-5.625666,1.851055,-2.282654,-8.497888,6.706216,8.737739,-0.480413,6.573671,3.697123,-5.903698,-3.078025,-8.590773,7.156415,-5.975453,2.281698,8.167471,4.976073,-6.992087,4.204624,-4.507370,8.714983,3.560617,8.539984,5.588610,-4.990541,4.258404,4.793081,-4.943246,-6.399584,5.249191,5.485053,-7.569201,0.667746,-1.210811,7.436848,3.093743,-9.641146,-9.528846,5.881056,-1.760334,4.113680,-2.266723,6.555792,7.112702,4.910240,-4.743462,6.176792,7.171622,7.531146,4.594846,3.973566,4.760590,-3.376611,5.755415,-6.176968,5.892981,6.765438,-9.406180,-3.308156,4.801223,-7.176585,-3.710478,-8.148615,-4.466206,9.574834,-4.579497,-8.432426,-1.718369,2.842483,-9.691048,0.771066,5.258758,-8.827594,-3.984301,2.870383,-2.627944,6.793034,-4.322371,6.133875,0.235215,-1.012785,5.940524,3.234356,4.988427,9.151868,-1.913974,8.389666,-4.594228,8.742710,3.784597,-6.617362,-8.644041,-0.060249,7.734786,4.280548,4.065317,-5.371791,-5.981584,-8.560226,-8.483125,-6.004459,5.844682,-4.605703,7.294176,-5.348033,-8.732636,-9.355590,-0.429365,3.125051,-9.795069,-4.794072,7.316975,-1.877056,-7.886966,2.790252,6.741468,-2.026515,-1.822292,-1.806443,-1.572329,-3.104542,6.627848,-0.124741,4.141525,2.996581,-6.062317,0.705577,-2.573000,-5.775383,8.463351,8.896020,8.373308,3.203797,-0.836578,4.117001,-5.144309,4.973663,-3.921811,8.220358,-7.815457,-1.991158,-0.446680,-7.313484,0.661120,5.700450,-3.132114,2.361987,-7.025469,8.226843,-2.552261,-6.623427,-4.827359,-0.638521,5.085266,9.994595,-5.568636,-0.577596,5.969029,3.231595,0.325886,1.381538,8.089529,3.887207,2.904759,-3.619599,9.303677,-1.956398,0.985669,7.321865,-9.402339,-7.730757,-7.369637,7.259501,2.064084,-3.887719,-6.402558,-8.221817,7.517504,7.726645,2.816932,-8.240121,-1.997236,-9.752490,-5.079357,-6.159894,-6.898383,8.817395,-9.535666,8.021295,-3.576202,-9.603760,8.670476,-8.587845,7.052647,-7.430893,-7.219071,1.034596,7.999671,-4.669045,8.522513,0.308572,7.145186,-5.278304,5.934486,3.609673,-6.462920,-0.850002,-7.522670,-7.920154,8.936561,-9.531197,1.989995,-0.930529,-7.834165,-7.968876,-2.034151,5.532331,9.465701,9.907461,0.627946,-5.430656,-0.226360,-9.200203,1.567260,-7.666536,0.863757,-2.154264,0.514289,0.703318,2.594880,4.716927,2.272151,1.453138,9.731089,-9.652763,8.319030,-7.595682,4.169215,7.680737,6.176313,4.253841,-9.108779,8.638200,1.323097,2.878357,7.731988,-0.240649,-6.857416,4.998880,-4.305638,-3.643088,-8.431184,7.563961,1.037462,-1.726664,1.742048,4.702255,-0.800893,4.563833,-3.386360,-5.975213,6.381139,-0.240894,0.335213,2.195012,3.969016,3.666140,-5.878531,-7.446195,9.342128,-5.637565,-0.865618,9.529917,6.128449,-6.422497,6.663548,9.729526,8.447289,-7.018319,4.934492,-6.870571,-4.381679,-1.459184,6.561764,-8.100437,0.887046,0.227663,7.895515,-4.601427,9.131829,-0.506240,-4.081604,4.133435,7.035958,-6.364177,-7.028585,-5.283397,-3.337793,0.530360,1.283726,3.035965,0.353589,-5.408334,4.250202,7.287732,-1.783721,5.302611,0.529781,-7.022907,3.090222,6.358698,-9.027602,-5.904767,-0.971952,-6.783346,1.239050,-8.100091,-6.895696,9.989009,-7.644059,-2.800742,-1.447875,8.141360,-6.100302,2.387721,-0.054192,5.758714,-2.624150,8.707375,-9.447057,-0.990295,7.073580,-1.254269,6.447520,9.460994,-4.553647,-0.865500,-9.342968,-4.553861,-6.300665,-2.691407,-5.399760,7.445779,3.611351,5.310870,-9.105211,4.246775,-1.082315,5.941167,-6.254663,0.945947,-5.619060,7.882037,1.163571,9.094491,8.396371,-6.175984,-2.219564,-7.904483,7.249765,3.928032,3.532908,4.665318,-8.557143,-4.124769,-4.239431,1.708233,3.625709,0.851039,-3.715223,-6.719183,-7.190455,3.785151,-1.917386,-2.934647,6.375754,8.602717,-7.886087,-4.908406,1.375405,2.505506,8.041660,-7.592982,-3.552920,5.676974,1.726383,-6.682202,0.907877,-8.150827,-1.727740,2.322199,-3.581636,-5.372383,6.604696,3.346560,8.708532,-5.301461,8.540141,-9.898387,-9.617330,-3.940959,4.904220,4.524127,-7.423529,0.510943,-1.105662,-8.074364,9.757183,-3.905614,6.513441,-3.887400,-0.182900,5.064198,9.900601,1.462929,-8.515118,5.830436,4.338243,-5.752519,-5.045627,-5.465417,-4.772140,6.853604,5.453514,-5.754327,5.235098,-7.369531,-7.156439,0.685540,1.801860,1.624844,-2.555568,5.239862,-3.349674,2.044347,9.706306,3.272219,-6.341496,-9.304113,-2.847571,7.708738,9.022421,-4.594865,9.057730,1.207714,-8.590504,-0.761122,-1.618935,-9.395061,9.753454,3.978975,9.923055,-4.067218,-2.065466,-3.672394,-4.836914,-5.785035,6.745150,0.391397,6.787417,8.500252,9.364399,-0.805652,1.742812,-1.746344,5.370371,-2.167551,4.168347,-9.535679,5.734484,-7.673799,-0.427922,5.758586,7.469045,2.603449,4.744334,4.752172,-4.141418,-8.619371,-2.858226,7.537530,6.258493,6.685364,-4.356423,-4.523754,-7.836241,2.417252,7.501987,-0.762410,6.506492,0.224903,-7.630379,-0.859399,0.191419,-7.632601,7.472133,2.747318,9.082008,3.992170,-3.601496,3.559792,6.026074,-9.667301,3.009466,4.933451,-9.410296,-9.648099,1.919409,4.957844,1.910194,1.894465,4.140672,2.696061,6.531314,2.762692,-7.397338,-6.389032,2.631344,7.933766,0.635549,-3.498556,7.639574,-2.653228,4.374410,1.284382,5.630917,0.408677,1.175294,-1.957086,-3.714851,1.699420,-4.177100,-6.662910,-8.734022,5.112203,-8.357489,5.995744,-8.844139,6.104487,2.723341,-9.548984,1.114859,-4.343527,3.701786,7.379591,-7.973888,-6.154047,-5.985034,-7.027524,-9.358167,-7.715980,0.012701,7.670698,3.801394,9.783208,6.798823,6.442793,-3.583795,-0.065032,-4.918361,7.002043,-0.920142,-6.886062,-1.372588,9.406136,-2.432180,0.490219,8.360175,0.005010,6.473302,0.867327,-9.019533,8.585136,-4.677337,-4.006268,2.328391,6.062606,-7.112448,-4.113041,1.859969,9.250090,3.106745,6.797840,6.643050,7.645198,-3.641847,-1.791929,-3.243004,4.306125,0.164067,0.569059,7.216468,-6.504484,-5.545523,-4.659544,-5.330463,0.209980,-9.187812,-8.624784,7.376471,4.013761,-4.887525,1.879895,2.925132,-2.592918,-7.560856,-1.599210,-0.854310,6.210027,6.564104,-9.669095,-5.381108,-3.814992,3.746019,-4.653924,-5.327032,-2.221945,0.710317,5.286604,-3.476415,7.245403,-8.006557,-4.976135,-5.613648,6.388559,2.687720,3.700242,-8.585524,-5.354826,-5.516097,-0.648594,-9.425656,-7.498209,-1.251161,8.168019,2.841956,-8.768530,-6.157575,-1.475194,-3.813166,-6.575119,-1.311950,6.125765,0.821954,-9.155786,1.190180,0.857332,1.546791,3.224984,7.265911,-0.281026,-7.250774,-5.415216,4.021644,8.414996,9.439965,8.398651,-3.295939,-6.176221,-6.558684,0.514676,5.277495,-7.785168,-8.306351,2.179284,-1.888560,-6.929890,-3.448206,3.775302,-7.034424,7.102307,-7.569650,8.097639,-6.402449,7.163459,-0.957727,-0.797674,5.603397,-2.238958,-0.704056,4.205826,0.172654,0.543903,9.964639,3.804699,-1.764128,7.785482,9.051384,6.641100,-3.535262,-2.063237,0.153232,-1.494479,6.286204,1.636688,-1.702516,-9.356034,-1.112529,0.704499,-1.873973,1.864903,-8.827104,-3.912091,5.994674,1.324699,-7.335418,-4.998512,-4.446326,-8.550196,2.048573,2.100076,-2.520324,9.536592,-5.470422,-9.348343,3.686213,1.760806,-9.639201,5.025890,7.107681,2.033859,5.871929,8.327367,2.150238,5.200376,3.164916,-4.297497,3.371753,2.704950,4.140191,-1.882415,3.269528,-8.616532,0.178042,-0.910139,-7.340695,-7.753900,0.856558,8.468173,6.145925,-0.330784,6.800270,7.477085,-3.264599,-0.440401,-3.899324,9.862932,-8.641815,-1.558849,2.456731,-2.757884,-8.514210,2.023798,3.355704,-7.175745,-4.089464,2.587077,-3.287426,-4.076763,9.819093,-3.371913,3.077044,-4.864625,5.153989,-9.788403,2.334863,-3.288272,0.317929,0.640891,-8.621099,-0.172375,-8.742939,-0.992179,-6.729577,-9.226106,-5.294544,7.284534,-6.563217,4.796996,-6.325912,-8.414922,4.249315,-6.867463,7.795250,3.622928,7.588155,-3.926369,4.838290,-0.383864,0.160179,-2.165844,7.074595,9.899737,3.539241,2.473904,-9.468304,4.310449,-9.840275,0.973388,3.143273,9.860676,-5.722150,0.753432,1.967342,2.492689,-7.775474,-4.570491,8.037022,0.385821,-9.994631,7.958821,-3.162502,-6.730399,-2.286008,-1.895292,-1.430083,-4.459786,9.468196,5.723925,-9.708460,2.795393,-1.502711,-0.395252,-1.727986,-9.461028,6.017727,9.391446,-4.546494,-8.460491,5.085001,-7.898544,7.744968,-2.477347,-6.066279,0.870243,-3.205488,4.085870,-9.744030,4.259845,5.947810,7.893211,5.112280,4.844914,8.247989,-9.610146,-2.166918,-5.453253,0.788671,3.988112,-1.172404,-2.701085,1.748744,8.856026,-5.296661,-7.061507,-4.447514,-9.066713,0.674664,9.799602,1.541371,5.849998,0.886514,5.477400,1.325888,-5.143032,9.449901,-2.411940,2.686794,-5.480062,-3.738918,6.783715,0.769046,-7.605329,5.289730,1.986291,3.125166,5.583800,-9.818032,-2.826478,3.388978,-5.068459,8.264194,1.523408,-9.817752,-8.571523,1.639798,-2.912240,4.118308,9.535335,-5.696029,-8.762024,2.610423,-7.620541,-7.727165,1.279516,-3.862872,8.049149,3.285851,-7.000790,-9.925705,-5.838525,-9.066603,-4.625387,-4.693122,3.361685,-5.142078,-7.134910,0.702646,-1.770005,6.646771,7.323325,4.796336,-6.699833,0.437467,-1.484383,4.210017,3.896725,0.730885,-6.192423,4.733658,7.582687,8.906144,-1.989266,-8.811600,-9.196560,-2.439358,4.677196,-6.795730,-3.489267,-4.898778,-7.309080,-9.576301,-4.294034,3.264795,4.651832,-8.696253,5.182153,-2.172567,-4.501697,-7.678345,0.743939,-7.816684,-0.181321,-3.144511,-1.533930,6.909555,-9.010048,9.922688,-8.525847,9.357782,0.534924,-3.332387,0.403336,-9.977965,3.440873,5.673556,-5.083453,-3.522196,-1.082964,7.936700,4.493073,7.336350,-8.431945,-5.167017,-2.387836,-5.601903,4.905916,-5.755708,-2.715275,-6.212646,5.980988,-6.212545,5.309006,-8.014206,1.689434,7.053804,-9.638266,-5.048708,2.725558,3.685969,0.983396,8.393889,-5.406459,8.989437,9.399256,2.016830,6.123236,-8.262616,-1.584780,9.031620,-8.830509,-0.214088,2.158174,-4.121157,-2.024863,-3.811908,1.343593,-7.295666,9.086174,-6.911967,-9.613728,7.204312,0.825986,-4.963809,-0.385497,3.029127,-9.625814,-4.207070,9.003430,-5.508089,-7.319091,7.665312,8.403654,-6.751955,7.154003,6.950687,-4.186045,-9.063436,-1.403813,5.997421,-9.280113,1.361462,-9.923171,-9.000775,-4.334512,3.276473,-4.935629,5.166147,7.002640,-2.429021,-4.127980,-9.511710,4.833147,0.857615,6.210527,-4.151139,0.853472,5.812782,6.467971,1.918799,-1.329725,8.011500,9.371491,-9.811773,-8.361740,-7.638566,-9.098098,7.967175,4.919345,7.991952,3.698422,-0.894682,-2.122911,-9.255852,4.988182,2.942576,1.039976,-9.903085,7.080011,5.766668,-8.105018,6.367227,-2.616387,-3.253104,5.352981,-6.090941,8.544489,8.565350,-2.275586,-3.543299,-6.839583,-8.698397,-0.838355,-2.433810,3.639354,9.016012,2.063527,1.201293,4.565489,0.746468,4.321714,1.169835,-5.042969,-5.716152,-6.321298,0.563705,3.670689,-9.798647,-2.563941,4.449125,-7.560555,2.083243,3.056363,1.154756,-6.091603,6.110644,1.879638,7.012606,-0.578202,-9.690181,-3.097899,5.115155,8.024775,7.738678,-6.177922,-5.100644,6.397439,1.977154,-0.901608,3.373128,6.781805,-1.856832,4.360276,5.798751,-0.293765,-1.556395,5.358600,-7.245331,-7.030116,-2.713023,-0.900595,9.610487,7.532582,9.389936,-3.498775,-0.035895,2.470402,-8.893649,-2.102424,-2.820063,2.426628,7.346297,-1.949456,-4.840255,5.323680,-9.911251,9.504386,3.471864,-4.459899,-5.182199,0.923521,-8.828511,8.452526,7.021195,-4.291452,-6.668120,9.741422,-0.369131,2.542769,-5.039483,-5.898087,2.440360,-8.656389,-0.975145,1.138449,1.224100,7.028561,7.998101,-7.252389,3.924907,1.385790,8.968220,7.339785,-9.583399,-2.820183,-0.284922,8.529268,-0.397848,-6.088347,-9.561526,1.648864,0.951288,-5.450796,5.845825,2.845904,5.380313,0.309807,3.234135,1.482709,3.209711,-5.473998,-8.234206,8.660622,-2.545955,3.288676,8.649127,-0.662482,1.042025,-3.097963,-9.993274,2.261408,-3.457234,-0.584659,-6.796077,0.223958,6.559847,9.390299,-7.325763,-4.378657,-4.920610,5.194270,-0.075561,-3.917724,-9.138088,-8.317451,5.600223,8.960637,-3.230624,8.237249,8.212098,6.521185,9.588691,-0.847796,2.728305,-2.571994,-1.255615,-1.287133,7.860036,-5.272007,6.715417,-7.690546,0.977634,-1.454735,2.335009,-8.979226,-9.761392,9.404941,-2.164990,1.968715,-9.950460,9.252015,-9.280227,1.970471,8.684076,6.554292,4.037380,8.946767,6.981251,-3.918601,1.870058,2.872446,-0.376386,1.899615,-4.838953,5.609647,-7.214533,0.906081,-6.241471,1.563947,5.984526,-7.997174,-7.446678,6.150518,7.205974,4.837445,-9.070471,-8.288390,5.348008,1.454238,9.139348,9.500816,9.848044,-6.108803,6.801125,4.759544,-8.412728,3.608851,1.799675,1.280605,4.625502,-1.673375,9.127975,-0.628007,-5.558755,0.291101,-6.234757,-2.108930,6.920410,0.712099,-2.493132,6.811548,-5.650560,9.567425,2.572372,-3.855406,9.575815,-8.134439,-2.679040,-0.251052,-9.343273,-4.933267,-2.513808,9.098943,2.448371,-0.437000,6.580771,-8.437053,5.343256,-2.186982,-9.910610,0.874727,7.164664,9.860484,-5.666023,-7.030600,7.358612,-4.210178,4.477332,9.590109,-4.373209,-0.588181,-0.390487,-9.777931,5.364989,-6.405016,6.459737], dtype = "float64")#candidate|15782|(2925,)|const|float64
const_15783 = relay.const([-1.946637,-0.622883,3.355025,2.173899,1.117073,4.649557,7.828313,1.636937,-3.803766,9.654636,5.674542,9.709447,-0.628054,5.893551,8.292155,-9.520753,-2.606545,-1.727075,-1.956230,7.982107,6.923277,1.928249,9.718606,-7.860403,-6.870064,-5.278042,-8.018277,3.243843,-7.256106,8.258257,-3.871173,-7.002511,-1.984828,0.616739,-6.716193,2.565729,0.250824,9.334541,7.492723,-4.938459,4.222869,9.158878,-6.824019,-7.415511,0.471852,-1.419675,-2.837179,-3.967727,-4.696751,3.628271,2.689228,-2.603255,2.466693,2.198844,9.077688,-5.940770,-1.265311,8.088109,8.640160,3.764836,3.807623,-3.725667,-3.084083,-5.639458,-6.653727,-1.021013,-8.636845,4.907842,-8.999652,-6.377576,-5.133210,-9.118410,-0.375902,-6.847564,9.460391,-4.354960,6.056678,-6.487748,-2.020709,-7.845003,3.369808,-4.324244,0.810968,9.123712,-3.134531,-0.876446,5.817949,1.998420,-4.891562,4.777090,4.208462,-2.039117,-9.193170,9.499863,8.228580,-5.932337,-2.421528,8.963932,-8.485295,5.159830,-3.574083,7.858559,-9.191448,-2.175740,-0.629591,-7.498960,3.154412,0.831408,-0.069151,-4.742117,-1.472852,-7.147501,2.838901,7.385286,-8.659031,-6.806365,-1.537512,-7.211991,-9.134031,8.246864,-1.290779,8.040326,-3.447593,-3.795384,2.600955,-5.067952,8.127874,-4.913295,-4.119949,-6.873653,-2.215684,-4.896960,-8.472715,2.794807,0.525786,-3.941712,-7.523881,0.593652,-1.782053,5.448245,6.096349,2.307757,-1.982299,5.161753,6.710999,-6.142388,9.433854,-3.005137,3.864697,-4.335693,-9.648044,6.239809,-2.313571,7.838440,-8.666336,-3.320114,5.138826,-5.734098,1.861102,-1.281784,2.381099,-9.902483,9.757959,-1.001952,-9.534916,1.148604,9.686919,-0.875991,-3.535905,-7.306766,-5.976055,-4.226751,5.616079,-2.559993,-7.625071,7.212190,0.550174,-8.938243,1.017985,5.568630,-7.814972,-5.440359,7.591951,1.411375,8.038049,-4.397731,4.268086,7.696001,0.341260,8.923352,-7.009200,2.574588,5.427300,3.015269,8.055007,-4.625345,4.089741,6.692780,5.738295,-4.311742,9.650480,6.035805,1.533723,2.377015,-7.380388,7.110495,8.933873,-1.977244,-9.624359,6.016134,-1.291197,9.853557,3.606103,4.973078,-1.525017,2.057310,-4.170698,-4.284824,4.734699,1.522788,-7.176144,-9.020774,4.191856,-7.187067,-7.241853,4.672994,-1.438375,7.643681,-4.080815,-8.075237,-5.437161,-2.252124,-0.918063,9.821737,-6.374017,0.579360,1.004373,-5.309931,-4.638583,-5.690669,3.181112,-9.273661,0.769969,4.341772,-2.933013,-8.547464,0.188302,6.438652,5.864508,3.450165,8.023819,-6.283441,-2.659851,-6.208668,-7.607980,-7.044870,-6.777137,8.145816,-2.664092,1.562098,-2.502406,3.600607,-6.957135,-5.019947,2.355860,5.388138,-1.968150,2.333764,1.367928,-7.380822,1.002691,2.469926,2.211999,0.315223,9.240993,-1.698736,-6.700130,3.082693,-8.386586,-3.000734,4.632632,9.994257,1.459976,-0.895509,-2.396477,-2.660467,7.480450,7.425436,-4.831028,-7.337784,-9.348339,-7.050987,5.818594,4.785813,2.747430,7.695627,-0.855427,-1.942302,-0.373500,-5.515765,2.331059,-6.177006,-2.040633,7.573312,-1.447156,-3.700754,-7.727126,5.374549,-0.214372,-9.410247,-1.443166,-3.996397,-5.123998,-0.660674,3.051909,6.437494,-6.894543,-9.992775,4.207052,2.139683,0.268011,-5.976788,-8.859333,1.558106,3.581757,-2.500554,-6.631772,-7.734147,-4.505124,5.678468,2.730135,-2.100504,-8.140149,-4.135760,3.534216,6.147454,5.380629,-6.073276,8.181631,-3.436258,3.650767,-9.206691,4.775871,-1.270906,5.891061,6.541668,-6.231050,-0.799883,-1.986052,3.828804,4.673033,8.906898,-2.427802,-3.832308,3.738533,-7.349553,-9.512712,-7.947656,7.344527,4.871634,-0.554810,5.489373,-7.997080,2.663416,-8.472397,-2.810549,7.298677,-9.986032,-1.115333,3.001042,0.706719,-2.718866,-2.907521,3.599277,-9.510746,3.684902,-4.092395,1.224299,-2.210417,9.335923,8.208291,-5.513445,4.723071,7.159131,-3.276070,-6.540742,-6.716998,7.704823,5.560158,6.169397,4.440333,7.972136,8.746527,-3.879372,5.531061,8.713246,-0.119706,-5.053697,-6.261517,3.101306,-6.971708,4.772875,-4.341794,-7.201996,9.869100,1.485809,-1.001763,-6.177513,-6.926398,0.080580,4.696111,-8.285820,5.492207,1.199889,-8.328929,-2.232825,-7.699244,-5.988252,-7.746220,3.471394,-4.996541,-0.861993,7.043629,-3.680918,8.198866,3.822144,-6.074528,-6.469300,-2.359127,-7.463500,-6.464310,-5.909489,-7.971243,-0.380132,3.948700,-8.540627,-3.664370,-1.526529,-8.183564,8.963949,-0.638614,-3.930949,1.772827,-6.278054,-1.676719,-2.691254,2.472380,-2.942462,1.853153,-0.154875,-2.227247,-1.118259,7.379524,-2.120964,-4.069104,-5.730369,-9.939430,8.201168,5.148959,-4.291257,-2.402024,0.608193,9.779623,0.444117,-3.463576,7.956700,2.164130,0.702537,-0.795221,-8.287796,-9.980365,4.467552,3.142446,-4.698591,9.123808,-7.630331,8.036282,3.673725,8.635460,-3.653081,9.326363,-4.762537,4.996566,9.544721,2.334840,-1.640358,-7.236932,2.632998,4.745684,5.698760,-3.100597,-0.158054,7.731729,-5.011475,4.219801,-1.002315,-3.218986,8.976060,-9.381169,2.679517,-1.087884,2.352280,4.710483,-6.268711,-2.408291,4.741777,7.190151,3.044062,-0.260551,-2.394601,-0.428802,-9.734930,7.671090,-0.240397,-3.757909,-4.586621,-5.573594,-8.037121,-2.674624,-0.758341,-5.577995,2.954958,1.368870,-5.803668,-3.590297,2.901685,7.639016,0.541597,9.623210,-7.706008,3.604339,-5.530051,6.959105,3.302521,4.022664,-8.984666,-0.062891,-2.547215,-7.380265,9.347113,2.995320,8.463470,-7.294594,8.373627,8.506381,2.613573,-0.455890,-7.243326,-1.167496,2.314986,6.675025,4.267036,9.562036,8.498159,-7.418698,-2.774409,-6.706032,-5.084725,-4.047007,-7.274904,-6.675770,-3.020188,-2.582186,-1.900844,0.672027,-6.594326,9.817561,-5.150812,0.153912,0.591571,-5.307680,4.242203,2.389647,8.247458,-3.540991,1.441960,7.184170,1.841649,-3.580965,5.989437,-8.416038,-7.301736,5.091513,-7.997095,2.751255,6.010912,-4.376279,-1.512039,-3.894157,8.377267,0.416025,4.820195,4.945639,-4.984013,-6.572267,7.872566,-1.836500,0.924472,-6.379584,-8.676079,4.023900,4.097203,4.201188,4.858234,3.597301,-9.579146,-8.288849,2.212937,-6.802053,2.631830,5.732926,3.523190,9.389510,-5.647435,9.816218,5.790963,-1.490133,-6.676464,-8.694331,0.301417,-1.156498,-3.026618,-9.111302,-8.799635,-4.894609,8.642209,-1.805314,8.688576,8.663184,5.267008,-4.662127,6.744045,2.162811,-6.268015,-3.699917,7.670946,1.437017,7.559932,-8.812485,7.491316,3.297736,-8.499489,2.204710,6.188120,3.620970,6.734647,3.209310,-1.665427,-0.610738,-5.248368,5.669520,-2.663934,-7.883051,-1.114028,7.285764,7.990801,-8.502860,0.884521,5.427141,7.489446,6.908466,-9.323609,2.348561,-6.764833,-2.078239,-9.639770,-2.858758,-4.834685,-6.157684,9.868469,-9.969158,2.473103,5.126855,1.731572,1.750061,0.604222,1.874068,-8.402908,5.283285,6.619263,0.862456,8.810572,-7.674143,-8.734237,-9.977505,-1.760752,-3.498499,2.264188,-9.351562,-4.024555,3.020697,5.521452,-5.149288,-9.117358,-3.573911,5.925344,1.123521,1.688227,-7.340778,9.401256,-9.847891,-5.438524,4.229658,-0.189047,-0.705466,0.268244,-7.401061,-1.249151,-3.882932,-3.603128,-7.380198,9.962359,-1.981835,7.915670,-9.060176,7.821097,9.109938,-2.297180,-1.359298,-0.101512,8.834296,-8.965924,-2.955232,-9.035827,6.000157,4.938136,-9.801693,-8.030314,-3.100632,-4.881654,-4.324141,2.311199,1.245756,-8.404422,-8.097889,-9.732750,-7.360605,0.417785,9.959722,-6.521219,8.544126,9.285056,-0.594942,-7.770280,9.263863,9.677014,4.128817,5.776071,-0.447211,-4.577129,6.778636,1.314954,5.131946,-5.342017,-6.076914,-9.021109,1.085112,-2.858005,0.996138,-6.212738,4.480432,-4.679052,-9.535739,8.109872,6.904145,5.911476,-4.497034,-7.892501,1.529640,-6.395333,5.120385,6.632228,-2.048978,-3.615031,0.639547,6.840809,0.505449,6.945840,6.943950,-3.955650,-7.632629,1.456023,-9.957837,-1.287400,5.210106,-3.924126,6.778167,9.742870,6.965406,5.851780,-6.692209,3.938106,-3.953622,1.308565,8.656402,-9.211992,4.890652,-8.135411,-6.918761,9.421587,1.951329,-4.457228,-9.994872,6.979319,-0.508331,-6.065195,5.547031,-9.591248,-2.512816,8.632889,9.701574,8.661471,-4.277306,1.972948,-7.039846,-2.419281,-7.178505,5.418215,-4.254864,-1.535326,4.377531,8.816192,-7.506901,7.971840,0.724038,-9.587412,-1.894493,1.292954,3.353639,0.825591,1.644313,0.934822,3.116851,-1.691489,6.425036,-8.487458,9.933182,3.580036,2.680558,-7.401603,-5.757656,0.846156,-3.061482,5.385879,8.827685,-0.382243,-5.967032,-0.271267,-1.925813,4.507379,5.546260,-8.827429,3.409136,-1.126420,-5.076613,8.870372,3.247014,-4.593354,9.732522,3.699070,-2.282896,9.869630,-2.846424,-1.389646,3.409777,-1.546755,1.188050,0.150809,1.590868,4.495110,9.820974,-2.741497,-6.250108,-9.087975,-0.320226,-5.670881,2.629411,4.111257,-5.398732,-4.045533,5.812726,-9.797192,-7.029489,5.653702,-4.748984,7.442096,0.977445,-0.568277,-4.437875,1.724156,9.478811,-3.328994,8.143589,-5.203217,3.908251,7.574023,0.785167,-7.322812,-9.150340,6.706932,-4.641138,-7.980605,-7.223455,2.332874,1.220716,1.940649,4.990548,-7.218896,8.516188,-2.920857,6.009414,5.270601,2.880156,-9.926713,5.460752,-5.061339,9.405139,8.130991,-1.253897,-1.723074,0.361757,-7.543748,0.719258,-8.327600,4.348445,-0.825279,-2.482334,0.877188,2.138464,3.810546,-8.666386,-3.970615,-1.425576,0.033234,0.995679,0.304973,-8.025287,8.789013,-3.076890,-3.347219,-8.291240,-7.335225,2.243719,-9.225155,-1.887426,3.949531,-7.977181,-2.449510,-4.751578,9.031072,3.714753,-2.652025,-7.265615,-9.938402,2.136576,-8.057731,6.063478,0.309314,-6.374889,1.622632,6.702066,1.519330,-1.830181,9.288288,-8.616841,-8.379621,7.641686,3.563399,-6.453691,-4.714643,-8.556506,6.264081,0.620487,-4.011049,5.465321,-2.969689,7.685485,-4.432581,4.664276,-9.577068,-8.454707,-0.942525,2.632257,3.801112,7.958949,-6.862675,-1.557336,4.630038,-1.928431,4.242349,1.523540,-4.753584,-0.969978,-2.418792,-2.591083,1.498856,-3.957100,-4.809234,8.495627,1.053634,5.919903,-0.566567,-9.167572,-2.369233,-4.111046,-0.115392,7.011636,-2.848892,3.593580,-5.545446,3.080325,-9.827989,4.230584,4.579371,-5.909666,6.680996,-8.702771,6.128546,9.596822,6.550843,6.295437,7.847510,9.058058,-1.241274,-5.848220,-6.493599,-2.274508,6.459945,-1.786394,-4.624111,-3.411658,-3.973383,-8.430720,8.175811,4.752415,5.418629,-5.764648,-1.425026,-2.698006,-4.257428,9.318004,-8.811734,9.429098,2.388276,-0.540132,-2.117789,4.205860,-0.173317,-1.686074,5.332165,-9.898173,-2.516214,1.749532,-6.767466,-5.127948,-4.737677,-2.862203,1.180547,9.038608,3.036344,8.470835,-6.679586,-2.863608,-6.004831,-1.165086,1.008228,-4.410984,5.221313,-1.280596,4.776765,-6.628372,-3.054979,-1.542000,-3.549687,-1.010919,0.838198,0.170226,-7.848328,-7.675088,-1.541432,-6.274968,-0.540051,5.221086,-5.163783,2.640172,-8.660429,9.466007,-6.318414,4.338893,2.221451,-4.770559,1.674857,-1.288261,-4.181818,-7.112580,3.100561,-1.722578,0.141797,1.148022,1.504251,6.009209,-5.764131,-6.915997,-4.825056,3.098375,6.104210,-9.037354,2.447139,-8.248807,-0.515369,-9.514280,4.689117,2.891137,6.562839,-3.548915,7.777776,-3.837583,-2.351945,2.943858,-8.696678,4.961307,-5.093150,-9.182553,-9.424155,9.761190,2.480021,2.294467,-9.571738,2.467060,7.669822,-7.740891,9.927619,1.567583,8.982518,-9.944230,3.197518,7.672394,-1.145364,-5.684876,-6.808130,9.363439,1.793617,-5.426300,7.310766,2.471541,1.099503,2.480885,0.469022,1.556976,2.206708,-7.030744,7.205119,7.992212,-8.458765,-6.461351,4.855648,-8.243381,-9.022025,3.197457,9.492574,9.826809,-4.879545,7.461809,0.810721,2.057278,6.473139,0.930720,5.338290,-8.674093,-0.906417,8.779306,-8.213365,3.711593,-5.636250,-6.563792,9.127720,0.066370,-4.179616,2.149216,1.759529,9.016751,7.583852,6.163892,7.303888,-2.907700,-4.002260,9.257156,4.124929,-2.397493,3.618173,9.346124,-8.640488,2.723354,-0.029798,-2.267658,6.944401,-1.164976,-9.000211,1.173379,5.004848,-8.802459,1.330771,-5.056347,-8.390585,4.134533,8.518832,-6.504200,3.283521,-4.078907,9.587121,8.665746,-4.875766,5.452070,4.356563,-4.584722,-3.057102,-6.706673,7.425312,-4.916495,6.345406,2.225845,3.813844,-4.226408,7.935608,-2.482510,7.548233,9.690020,6.475273,9.766945,-5.497154,8.619039,-6.482205,-8.516925,-3.285456,5.501645,-0.466692,-6.077178,-3.444180,-4.082095,1.047103,-8.112541,-8.433845,9.387086,-2.325720,-0.291392,-5.711686,5.391787,-5.460155,-5.907265,4.471519,-8.014374,3.692474,9.488765,-2.062428,5.646120,-8.339309,-9.740278,-3.425923,-9.990170,-9.176417,3.958990,-2.084528,2.873420,-0.500813,6.945029,0.781752,-0.376202,-2.175436,0.466276,6.552474,-0.176592,-4.869445,3.992782,-5.600042,-5.038873,-1.655236,-7.221562,-1.766854,9.940916,6.327319,-9.618286,4.891214,5.433303,-7.638725,-0.862313,-1.985823,1.074153,3.084955,3.878315,-5.720074,1.601378,9.495360,1.537293,3.206931,-7.482733,2.726495,-5.423153,9.398955,-8.604913,-4.332127,-4.273522,-2.946607,1.737837,-4.250799,8.935618,-3.308788,8.780373,-3.285951,-7.301444,-8.122054,9.635950,8.984049,-3.807838,7.431140,8.540148,3.175776,-5.812977,7.036018,9.814732,-6.363166,0.286718,3.318481,-1.958468,7.912493,-8.140697,-1.737397,-0.570611,3.294081,-9.449163,7.047677,-9.084665,5.900980,-2.011583,-6.707930,-5.211848,6.821643,-6.564058,4.925243,-6.437957,6.134024,-7.615848,-8.252042,6.714736,9.642779,8.835547,6.990094,9.542265,-3.028381,-7.450691,5.479508,-5.090879,-3.498068,-0.004721,6.860316,-6.789905,8.529121,-2.715265,6.108321,3.220363,-8.890173,-6.958564,-0.477029,-9.164200,5.169938,0.422692,-4.427434,6.945470,-9.222911,-5.540705,5.704769,-0.013026,2.302475,-1.048869,2.950077,5.941459,-2.165508,3.522240,6.799169,-5.325391,-6.871033,8.628374,7.588148,0.631466,-0.094268,4.798402,7.140131,-8.969449,1.729488,5.068862,-1.998345,-7.486408,-3.637643,9.811037,3.768342,4.201074,-6.829341,-0.808459,8.725179,2.721702,9.424132,7.197677,5.985332,5.273557,4.875660,3.319906,5.964424,-8.186416,1.215783,5.887495,7.637688,7.504228,-4.957266,8.392572,3.040733,0.531882,-8.459497,7.585599,0.272333,-1.214262,-0.627659,-7.125289,7.283316,1.205729,6.098111,2.066314,4.840075,-8.121057,0.757894,-8.263660,-9.969343,8.567355,-9.753259,-4.174557,-4.652225,-4.333323,-8.212103,-8.284530,-5.863975,7.468962,8.430755,-5.493815,4.914049,-9.633915,5.925348,3.317688,-2.242266,-5.805115,-4.775694,-1.903587,5.517743,2.620442,-7.444999,8.104608,5.964215,-2.109284,4.184966], dtype = "float32")#candidate|15783|(1456,)|const|float32
call_15781 = relay.TupleGetItem(func_11970_call(relay.reshape(const_15782.astype('float64'), [15, 13, 15]), relay.reshape(const_15783.astype('float32'), [1, 1456]), relay.reshape(const_15783.astype('float32'), [1, 1456]), ), 3)
call_15784 = relay.TupleGetItem(func_11974_call(relay.reshape(const_15782.astype('float64'), [15, 13, 15]), relay.reshape(const_15783.astype('float32'), [1, 1456]), relay.reshape(const_15783.astype('float32'), [1, 1456]), ), 3)
output = relay.Tuple([uop_15766,call_15773,call_15775,call_15781,const_15782,const_15783,])
output2 = relay.Tuple([uop_15766,call_15774,call_15776,call_15784,const_15782,const_15783,])
func_15785 = relay.Function([var_15765,], output)
mod['func_15785'] = func_15785
mod = relay.transform.InferType()(mod)
mutated_mod['func_15785'] = func_15785
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15786 = relay.var("var_15786", dtype = "float32", shape = (9, 3, 6))#candidate|15786|(9, 3, 6)|var|float32
func_15785_call = mutated_mod.get_global_var('func_15785')
call_15787 = func_15785_call(var_15786)
output = call_15787
func_15788 = relay.Function([var_15786], output)
mutated_mod['func_15788'] = func_15788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6556_call = mod.get_global_var('func_6556')
func_6557_call = mutated_mod.get_global_var('func_6557')
call_15796 = func_6556_call()
call_15797 = func_6556_call()
func_5643_call = mod.get_global_var('func_5643')
func_5646_call = mutated_mod.get_global_var('func_5646')
const_15813 = relay.const([True,False,False,True,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False], dtype = "bool")#candidate|15813|(2112,)|const|bool
var_15814 = relay.var("var_15814", dtype = "float32", shape = (1210,))#candidate|15814|(1210,)|var|float32
call_15812 = relay.TupleGetItem(func_5643_call(relay.reshape(const_15813.astype('bool'), [22, 96]), relay.reshape(var_15814.astype('float32'), [1210,]), ), 1)
call_15815 = relay.TupleGetItem(func_5646_call(relay.reshape(const_15813.astype('bool'), [22, 96]), relay.reshape(var_15814.astype('float32'), [1210,]), ), 1)
func_10532_call = mod.get_global_var('func_10532')
func_10533_call = mutated_mod.get_global_var('func_10533')
call_15864 = func_10532_call()
call_15865 = func_10532_call()
func_7409_call = mod.get_global_var('func_7409')
func_7411_call = mutated_mod.get_global_var('func_7411')
call_15868 = relay.TupleGetItem(func_7409_call(), 1)
call_15869 = relay.TupleGetItem(func_7411_call(), 1)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_15870 = relay.TupleGetItem(func_6725_call(), 1)
call_15871 = relay.TupleGetItem(func_6727_call(), 1)
func_15753_call = mod.get_global_var('func_15753')
func_15754_call = mutated_mod.get_global_var('func_15754')
call_15876 = relay.TupleGetItem(func_15753_call(), 1)
call_15877 = relay.TupleGetItem(func_15754_call(), 1)
const_15891 = relay.const([False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False], dtype = "bool")#candidate|15891|(2112,)|const|bool
bop_15892 = relay.maximum(const_15813.astype('int8'), relay.reshape(const_15891.astype('int8'), relay.shape_of(const_15813))) # shape=(2112,)
func_9510_call = mod.get_global_var('func_9510')
func_9511_call = mutated_mod.get_global_var('func_9511')
call_15904 = relay.TupleGetItem(func_9510_call(), 0)
call_15905 = relay.TupleGetItem(func_9511_call(), 0)
output = relay.Tuple([call_15796,call_15812,var_15814,call_15864,call_15868,call_15870,call_15876,bop_15892,call_15904,])
output2 = relay.Tuple([call_15797,call_15815,var_15814,call_15865,call_15869,call_15871,call_15877,bop_15892,call_15905,])
func_15906 = relay.Function([var_15814,], output)
mod['func_15906'] = func_15906
mod = relay.transform.InferType()(mod)
mutated_mod['func_15906'] = func_15906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15907 = relay.var("var_15907", dtype = "float32", shape = (1210,))#candidate|15907|(1210,)|var|float32
func_15906_call = mutated_mod.get_global_var('func_15906')
call_15908 = func_15906_call(var_15907)
output = call_15908
func_15909 = relay.Function([var_15907], output)
mutated_mod['func_15909'] = func_15909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6751_call = mod.get_global_var('func_6751')
func_6752_call = mutated_mod.get_global_var('func_6752')
call_15986 = relay.TupleGetItem(func_6751_call(), 0)
call_15987 = relay.TupleGetItem(func_6752_call(), 0)
output = call_15986
output2 = call_15987
func_15990 = relay.Function([], output)
mod['func_15990'] = func_15990
mod = relay.transform.InferType()(mod)
mutated_mod['func_15990'] = func_15990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15990_call = mutated_mod.get_global_var('func_15990')
call_15991 = func_15990_call()
output = call_15991
func_15992 = relay.Function([], output)
mutated_mod['func_15992'] = func_15992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6901_call = mod.get_global_var('func_6901')
func_6902_call = mutated_mod.get_global_var('func_6902')
call_16010 = relay.TupleGetItem(func_6901_call(), 0)
call_16011 = relay.TupleGetItem(func_6902_call(), 0)
func_9558_call = mod.get_global_var('func_9558')
func_9560_call = mutated_mod.get_global_var('func_9560')
call_16015 = relay.TupleGetItem(func_9558_call(), 1)
call_16016 = relay.TupleGetItem(func_9560_call(), 1)
output = relay.Tuple([call_16010,call_16015,])
output2 = relay.Tuple([call_16011,call_16016,])
func_16021 = relay.Function([], output)
mod['func_16021'] = func_16021
mod = relay.transform.InferType()(mod)
output = func_16021()
func_16022 = relay.Function([], output)
mutated_mod['func_16022'] = func_16022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10023_call = mod.get_global_var('func_10023')
func_10025_call = mutated_mod.get_global_var('func_10025')
call_16086 = relay.TupleGetItem(func_10023_call(), 0)
call_16087 = relay.TupleGetItem(func_10025_call(), 0)
output = relay.Tuple([call_16086,])
output2 = relay.Tuple([call_16087,])
func_16090 = relay.Function([], output)
mod['func_16090'] = func_16090
mod = relay.transform.InferType()(mod)
mutated_mod['func_16090'] = func_16090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16090_call = mutated_mod.get_global_var('func_16090')
call_16091 = func_16090_call()
output = call_16091
func_16092 = relay.Function([], output)
mutated_mod['func_16092'] = func_16092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9558_call = mod.get_global_var('func_9558')
func_9560_call = mutated_mod.get_global_var('func_9560')
call_16106 = relay.TupleGetItem(func_9558_call(), 0)
call_16107 = relay.TupleGetItem(func_9560_call(), 0)
output = call_16106
output2 = call_16107
func_16121 = relay.Function([], output)
mod['func_16121'] = func_16121
mod = relay.transform.InferType()(mod)
output = func_16121()
func_16122 = relay.Function([], output)
mutated_mod['func_16122'] = func_16122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16137 = relay.var("var_16137", dtype = "float64", shape = (15, 5, 1))#candidate|16137|(15, 5, 1)|var|float64
uop_16138 = relay.tan(var_16137.astype('float64')) # shape=(15, 5, 1)
func_6901_call = mod.get_global_var('func_6901')
func_6902_call = mutated_mod.get_global_var('func_6902')
call_16170 = relay.TupleGetItem(func_6901_call(), 0)
call_16171 = relay.TupleGetItem(func_6902_call(), 0)
func_7549_call = mod.get_global_var('func_7549')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_16172 = relay.TupleGetItem(func_7549_call(), 2)
call_16173 = relay.TupleGetItem(func_7551_call(), 2)
uop_16174 = relay.log2(uop_16138.astype('float32')) # shape=(15, 5, 1)
func_7988_call = mod.get_global_var('func_7988')
func_7990_call = mutated_mod.get_global_var('func_7990')
call_16180 = relay.TupleGetItem(func_7988_call(), 0)
call_16181 = relay.TupleGetItem(func_7990_call(), 0)
func_9510_call = mod.get_global_var('func_9510')
func_9511_call = mutated_mod.get_global_var('func_9511')
call_16193 = relay.TupleGetItem(func_9510_call(), 0)
call_16194 = relay.TupleGetItem(func_9511_call(), 0)
bop_16195 = relay.less(uop_16174.astype('bool'), relay.reshape(uop_16138.astype('bool'), relay.shape_of(uop_16174))) # shape=(15, 5, 1)
output = relay.Tuple([call_16170,call_16172,call_16180,call_16193,bop_16195,])
output2 = relay.Tuple([call_16171,call_16173,call_16181,call_16194,bop_16195,])
func_16209 = relay.Function([var_16137,], output)
mod['func_16209'] = func_16209
mod = relay.transform.InferType()(mod)
var_16210 = relay.var("var_16210", dtype = "float64", shape = (15, 5, 1))#candidate|16210|(15, 5, 1)|var|float64
output = func_16209(var_16210)
func_16211 = relay.Function([var_16210], output)
mutated_mod['func_16211'] = func_16211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13896_call = mod.get_global_var('func_13896')
func_13898_call = mutated_mod.get_global_var('func_13898')
call_16270 = func_13896_call()
call_16271 = func_13896_call()
output = relay.Tuple([call_16270,])
output2 = relay.Tuple([call_16271,])
func_16274 = relay.Function([], output)
mod['func_16274'] = func_16274
mod = relay.transform.InferType()(mod)
output = func_16274()
func_16275 = relay.Function([], output)
mutated_mod['func_16275'] = func_16275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8458_call = mod.get_global_var('func_8458')
func_8460_call = mutated_mod.get_global_var('func_8460')
call_16293 = relay.TupleGetItem(func_8458_call(), 1)
call_16294 = relay.TupleGetItem(func_8460_call(), 1)
func_4766_call = mod.get_global_var('func_4766')
func_4768_call = mutated_mod.get_global_var('func_4768')
const_16299 = relay.const([False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False,True,True], dtype = "bool")#candidate|16299|(1620,)|const|bool
call_16298 = relay.TupleGetItem(func_4766_call(relay.reshape(const_16299.astype('bool'), [12, 9, 15])), 0)
call_16300 = relay.TupleGetItem(func_4768_call(relay.reshape(const_16299.astype('bool'), [12, 9, 15])), 0)
func_14493_call = mod.get_global_var('func_14493')
func_14495_call = mutated_mod.get_global_var('func_14495')
call_16302 = func_14493_call()
call_16303 = func_14493_call()
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_16315 = func_4854_call()
call_16316 = func_4854_call()
func_8998_call = mod.get_global_var('func_8998')
func_9000_call = mutated_mod.get_global_var('func_9000')
var_16323 = relay.var("var_16323", dtype = "bool", shape = ())#candidate|16323|()|var|bool
call_16322 = relay.TupleGetItem(func_8998_call(relay.reshape(var_16323.astype('bool'), [])), 0)
call_16324 = relay.TupleGetItem(func_9000_call(relay.reshape(var_16323.astype('bool'), [])), 0)
func_14016_call = mod.get_global_var('func_14016')
func_14018_call = mutated_mod.get_global_var('func_14018')
call_16332 = func_14016_call()
call_16333 = func_14016_call()
func_11416_call = mod.get_global_var('func_11416')
func_11418_call = mutated_mod.get_global_var('func_11418')
call_16335 = func_11416_call()
call_16336 = func_11416_call()
func_16090_call = mod.get_global_var('func_16090')
func_16092_call = mutated_mod.get_global_var('func_16092')
call_16339 = relay.TupleGetItem(func_16090_call(), 0)
call_16340 = relay.TupleGetItem(func_16092_call(), 0)
func_13532_call = mod.get_global_var('func_13532')
func_13535_call = mutated_mod.get_global_var('func_13535')
var_16356 = relay.var("var_16356", dtype = "float32", shape = (1456,))#candidate|16356|(1456,)|var|float32
call_16355 = relay.TupleGetItem(func_13532_call(relay.reshape(var_16356.astype('float32'), [1456,])), 0)
call_16357 = relay.TupleGetItem(func_13535_call(relay.reshape(var_16356.astype('float32'), [1456,])), 0)
func_11321_call = mod.get_global_var('func_11321')
func_11323_call = mutated_mod.get_global_var('func_11323')
call_16364 = relay.TupleGetItem(func_11321_call(), 0)
call_16365 = relay.TupleGetItem(func_11323_call(), 0)
func_16021_call = mod.get_global_var('func_16021')
func_16022_call = mutated_mod.get_global_var('func_16022')
call_16367 = relay.TupleGetItem(func_16021_call(), 0)
call_16368 = relay.TupleGetItem(func_16022_call(), 0)
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_16371 = func_5416_call()
call_16372 = func_5416_call()
output = relay.Tuple([call_16293,call_16298,const_16299,call_16302,call_16315,call_16322,var_16323,call_16332,call_16335,call_16339,call_16355,var_16356,call_16364,call_16367,call_16371,])
output2 = relay.Tuple([call_16294,call_16300,const_16299,call_16303,call_16316,call_16324,var_16323,call_16333,call_16336,call_16340,call_16357,var_16356,call_16365,call_16368,call_16372,])
func_16378 = relay.Function([var_16323,var_16356,], output)
mod['func_16378'] = func_16378
mod = relay.transform.InferType()(mod)
mutated_mod['func_16378'] = func_16378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16378_call = mutated_mod.get_global_var('func_16378')
var_16380 = relay.var("var_16380", dtype = "bool", shape = ())#candidate|16380|()|var|bool
var_16381 = relay.var("var_16381", dtype = "float32", shape = (1456,))#candidate|16381|(1456,)|var|float32
call_16379 = func_16378_call(var_16380,var_16381,)
output = call_16379
func_16382 = relay.Function([var_16380,var_16381,], output)
mutated_mod['func_16382'] = func_16382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11498_call = mod.get_global_var('func_11498')
func_11499_call = mutated_mod.get_global_var('func_11499')
call_16451 = relay.TupleGetItem(func_11498_call(), 1)
call_16452 = relay.TupleGetItem(func_11499_call(), 1)
var_16480 = relay.var("var_16480", dtype = "float64", shape = (15, 13, 15))#candidate|16480|(15, 13, 15)|var|float64
bop_16481 = relay.divide(call_16451.astype('float32'), relay.reshape(var_16480.astype('float32'), relay.shape_of(call_16451))) # shape=(15, 13, 15)
bop_16484 = relay.divide(call_16452.astype('float32'), relay.reshape(var_16480.astype('float32'), relay.shape_of(call_16452))) # shape=(15, 13, 15)
func_7868_call = mod.get_global_var('func_7868')
func_7869_call = mutated_mod.get_global_var('func_7869')
call_16487 = func_7868_call()
call_16488 = func_7868_call()
func_7964_call = mod.get_global_var('func_7964')
func_7966_call = mutated_mod.get_global_var('func_7966')
call_16491 = relay.TupleGetItem(func_7964_call(), 0)
call_16492 = relay.TupleGetItem(func_7966_call(), 0)
func_14195_call = mod.get_global_var('func_14195')
func_14196_call = mutated_mod.get_global_var('func_14196')
call_16499 = relay.TupleGetItem(func_14195_call(), 0)
call_16500 = relay.TupleGetItem(func_14196_call(), 0)
bop_16514 = relay.bitwise_and(bop_16481.astype('int8'), relay.reshape(call_16451.astype('int8'), relay.shape_of(bop_16481))) # shape=(15, 13, 15)
bop_16517 = relay.bitwise_and(bop_16484.astype('int8'), relay.reshape(call_16452.astype('int8'), relay.shape_of(bop_16484))) # shape=(15, 13, 15)
func_5443_call = mod.get_global_var('func_5443')
func_5444_call = mutated_mod.get_global_var('func_5444')
call_16519 = func_5443_call()
call_16520 = func_5443_call()
output = relay.Tuple([call_16487,call_16491,call_16499,bop_16514,call_16519,])
output2 = relay.Tuple([call_16488,call_16492,call_16500,bop_16517,call_16520,])
func_16530 = relay.Function([var_16480,], output)
mod['func_16530'] = func_16530
mod = relay.transform.InferType()(mod)
var_16531 = relay.var("var_16531", dtype = "float64", shape = (15, 13, 15))#candidate|16531|(15, 13, 15)|var|float64
output = func_16530(var_16531)
func_16532 = relay.Function([var_16531], output)
mutated_mod['func_16532'] = func_16532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_16567 = relay.TupleGetItem(func_4625_call(), 2)
call_16568 = relay.TupleGetItem(func_4626_call(), 2)
func_4907_call = mod.get_global_var('func_4907')
func_4908_call = mutated_mod.get_global_var('func_4908')
call_16603 = func_4907_call()
call_16604 = func_4907_call()
var_16643 = relay.var("var_16643", dtype = "int16", shape = (1092,))#candidate|16643|(1092,)|var|int16
bop_16644 = relay.minimum(call_16567.astype('uint32'), relay.reshape(var_16643.astype('uint32'), relay.shape_of(call_16567))) # shape=(1092,)
bop_16647 = relay.minimum(call_16568.astype('uint32'), relay.reshape(var_16643.astype('uint32'), relay.shape_of(call_16568))) # shape=(1092,)
output = relay.Tuple([call_16603,bop_16644,])
output2 = relay.Tuple([call_16604,bop_16647,])
func_16652 = relay.Function([var_16643,], output)
mod['func_16652'] = func_16652
mod = relay.transform.InferType()(mod)
var_16653 = relay.var("var_16653", dtype = "int16", shape = (1092,))#candidate|16653|(1092,)|var|int16
output = func_16652(var_16653)
func_16654 = relay.Function([var_16653], output)
mutated_mod['func_16654'] = func_16654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15753_call = mod.get_global_var('func_15753')
func_15754_call = mutated_mod.get_global_var('func_15754')
call_16689 = relay.TupleGetItem(func_15753_call(), 1)
call_16690 = relay.TupleGetItem(func_15754_call(), 1)
output = call_16689
output2 = call_16690
func_16704 = relay.Function([], output)
mod['func_16704'] = func_16704
mod = relay.transform.InferType()(mod)
output = func_16704()
func_16705 = relay.Function([], output)
mutated_mod['func_16705'] = func_16705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8568_call = mod.get_global_var('func_8568')
func_8569_call = mutated_mod.get_global_var('func_8569')
call_16853 = relay.TupleGetItem(func_8568_call(), 0)
call_16854 = relay.TupleGetItem(func_8569_call(), 0)
output = relay.Tuple([call_16853,])
output2 = relay.Tuple([call_16854,])
func_16855 = relay.Function([], output)
mod['func_16855'] = func_16855
mod = relay.transform.InferType()(mod)
output = func_16855()
func_16856 = relay.Function([], output)
mutated_mod['func_16856'] = func_16856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11416_call = mod.get_global_var('func_11416')
func_11418_call = mutated_mod.get_global_var('func_11418')
call_17010 = func_11416_call()
call_17011 = func_11416_call()
output = relay.Tuple([call_17010,])
output2 = relay.Tuple([call_17011,])
func_17022 = relay.Function([], output)
mod['func_17022'] = func_17022
mod = relay.transform.InferType()(mod)
output = func_17022()
func_17023 = relay.Function([], output)
mutated_mod['func_17023'] = func_17023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14556_call = mod.get_global_var('func_14556')
func_14557_call = mutated_mod.get_global_var('func_14557')
call_17030 = relay.TupleGetItem(func_14556_call(), 2)
call_17031 = relay.TupleGetItem(func_14557_call(), 2)
output = call_17030
output2 = call_17031
func_17034 = relay.Function([], output)
mod['func_17034'] = func_17034
mod = relay.transform.InferType()(mod)
output = func_17034()
func_17035 = relay.Function([], output)
mutated_mod['func_17035'] = func_17035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17034_call = mod.get_global_var('func_17034')
func_17035_call = mutated_mod.get_global_var('func_17035')
call_17057 = func_17034_call()
call_17058 = func_17034_call()
output = relay.Tuple([call_17057,])
output2 = relay.Tuple([call_17058,])
func_17062 = relay.Function([], output)
mod['func_17062'] = func_17062
mod = relay.transform.InferType()(mod)
mutated_mod['func_17062'] = func_17062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17062_call = mutated_mod.get_global_var('func_17062')
call_17063 = func_17062_call()
output = call_17063
func_17064 = relay.Function([], output)
mutated_mod['func_17064'] = func_17064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14493_call = mod.get_global_var('func_14493')
func_14495_call = mutated_mod.get_global_var('func_14495')
call_17102 = func_14493_call()
call_17103 = func_14493_call()
output = relay.Tuple([call_17102,])
output2 = relay.Tuple([call_17103,])
func_17139 = relay.Function([], output)
mod['func_17139'] = func_17139
mod = relay.transform.InferType()(mod)
mutated_mod['func_17139'] = func_17139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17139_call = mutated_mod.get_global_var('func_17139')
call_17140 = func_17139_call()
output = call_17140
func_17141 = relay.Function([], output)
mutated_mod['func_17141'] = func_17141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4557_call = mod.get_global_var('func_4557')
func_4559_call = mutated_mod.get_global_var('func_4559')
call_17162 = relay.TupleGetItem(func_4557_call(), 0)
call_17163 = relay.TupleGetItem(func_4559_call(), 0)
output = relay.Tuple([call_17162,])
output2 = relay.Tuple([call_17163,])
func_17166 = relay.Function([], output)
mod['func_17166'] = func_17166
mod = relay.transform.InferType()(mod)
output = func_17166()
func_17167 = relay.Function([], output)
mutated_mod['func_17167'] = func_17167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7040_call = mod.get_global_var('func_7040')
func_7041_call = mutated_mod.get_global_var('func_7041')
call_17225 = relay.TupleGetItem(func_7040_call(), 1)
call_17226 = relay.TupleGetItem(func_7041_call(), 1)
output = relay.Tuple([call_17225,])
output2 = relay.Tuple([call_17226,])
func_17241 = relay.Function([], output)
mod['func_17241'] = func_17241
mod = relay.transform.InferType()(mod)
mutated_mod['func_17241'] = func_17241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17241_call = mutated_mod.get_global_var('func_17241')
call_17242 = func_17241_call()
output = call_17242
func_17243 = relay.Function([], output)
mutated_mod['func_17243'] = func_17243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13845_call = mod.get_global_var('func_13845')
func_13847_call = mutated_mod.get_global_var('func_13847')
call_17275 = relay.TupleGetItem(func_13845_call(), 1)
call_17276 = relay.TupleGetItem(func_13847_call(), 1)
output = call_17275
output2 = call_17276
func_17280 = relay.Function([], output)
mod['func_17280'] = func_17280
mod = relay.transform.InferType()(mod)
output = func_17280()
func_17281 = relay.Function([], output)
mutated_mod['func_17281'] = func_17281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15753_call = mod.get_global_var('func_15753')
func_15754_call = mutated_mod.get_global_var('func_15754')
call_17318 = relay.TupleGetItem(func_15753_call(), 0)
call_17319 = relay.TupleGetItem(func_15754_call(), 0)
output = relay.Tuple([call_17318,])
output2 = relay.Tuple([call_17319,])
func_17324 = relay.Function([], output)
mod['func_17324'] = func_17324
mod = relay.transform.InferType()(mod)
mutated_mod['func_17324'] = func_17324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17324_call = mutated_mod.get_global_var('func_17324')
call_17325 = func_17324_call()
output = call_17325
func_17326 = relay.Function([], output)
mutated_mod['func_17326'] = func_17326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7610_call = mod.get_global_var('func_7610')
func_7612_call = mutated_mod.get_global_var('func_7612')
call_17341 = func_7610_call()
call_17342 = func_7610_call()
func_8352_call = mod.get_global_var('func_8352')
func_8353_call = mutated_mod.get_global_var('func_8353')
call_17343 = relay.TupleGetItem(func_8352_call(), 0)
call_17344 = relay.TupleGetItem(func_8353_call(), 0)
output = relay.Tuple([call_17341,call_17343,])
output2 = relay.Tuple([call_17342,call_17344,])
func_17351 = relay.Function([], output)
mod['func_17351'] = func_17351
mod = relay.transform.InferType()(mod)
mutated_mod['func_17351'] = func_17351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17351_call = mutated_mod.get_global_var('func_17351')
call_17352 = func_17351_call()
output = call_17352
func_17353 = relay.Function([], output)
mutated_mod['func_17353'] = func_17353
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17354 = relay.var("var_17354", dtype = "float64", shape = (9, 5, 9))#candidate|17354|(9, 5, 9)|var|float64
uop_17355 = relay.asin(var_17354.astype('float64')) # shape=(9, 5, 9)
output = relay.Tuple([uop_17355,])
output2 = relay.Tuple([uop_17355,])
func_17357 = relay.Function([var_17354,], output)
mod['func_17357'] = func_17357
mod = relay.transform.InferType()(mod)
mutated_mod['func_17357'] = func_17357
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17358 = relay.var("var_17358", dtype = "float64", shape = (9, 5, 9))#candidate|17358|(9, 5, 9)|var|float64
func_17357_call = mutated_mod.get_global_var('func_17357')
call_17359 = func_17357_call(var_17358)
output = call_17359
func_17360 = relay.Function([var_17358], output)
mutated_mod['func_17360'] = func_17360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mod.get_global_var('func_5443')
func_5444_call = mutated_mod.get_global_var('func_5444')
call_17392 = func_5443_call()
call_17393 = func_5443_call()
output = call_17392
output2 = call_17393
func_17407 = relay.Function([], output)
mod['func_17407'] = func_17407
mod = relay.transform.InferType()(mod)
mutated_mod['func_17407'] = func_17407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17407_call = mutated_mod.get_global_var('func_17407')
call_17408 = func_17407_call()
output = call_17408
func_17409 = relay.Function([], output)
mutated_mod['func_17409'] = func_17409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14493_call = mod.get_global_var('func_14493')
func_14495_call = mutated_mod.get_global_var('func_14495')
call_17441 = func_14493_call()
call_17442 = func_14493_call()
output = relay.Tuple([call_17441,])
output2 = relay.Tuple([call_17442,])
func_17450 = relay.Function([], output)
mod['func_17450'] = func_17450
mod = relay.transform.InferType()(mod)
mutated_mod['func_17450'] = func_17450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17450_call = mutated_mod.get_global_var('func_17450')
call_17451 = func_17450_call()
output = call_17451
func_17452 = relay.Function([], output)
mutated_mod['func_17452'] = func_17452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13191_call = mod.get_global_var('func_13191')
func_13192_call = mutated_mod.get_global_var('func_13192')
call_17501 = relay.TupleGetItem(func_13191_call(), 0)
call_17502 = relay.TupleGetItem(func_13192_call(), 0)
func_5936_call = mod.get_global_var('func_5936')
func_5938_call = mutated_mod.get_global_var('func_5938')
call_17503 = relay.TupleGetItem(func_5936_call(), 0)
call_17504 = relay.TupleGetItem(func_5938_call(), 0)
func_10991_call = mod.get_global_var('func_10991')
func_10992_call = mutated_mod.get_global_var('func_10992')
call_17505 = relay.TupleGetItem(func_10991_call(), 0)
call_17506 = relay.TupleGetItem(func_10992_call(), 0)
func_13368_call = mod.get_global_var('func_13368')
func_13371_call = mutated_mod.get_global_var('func_13371')
const_17538 = relay.const([6.995671,6.521632,7.935971,9.511333,-6.161737,9.938047,0.167463,-4.797737,5.414167,-6.326217,5.707120,9.448255,-1.165196,-7.206385,-0.460161,-5.686407,-1.730923,-7.104334,8.762187,-3.650873,8.839128,8.654382,0.614656,4.675403,7.222130,9.766451,9.619226,-5.802948,5.121267,9.362125,7.119333,7.002319,8.302429,-4.415673,-5.026234,7.885631,-6.611200,-5.351698,-9.202718,9.459847,4.333518,-3.037410,1.388230,-6.129719,2.699449,-1.679779,-1.296065,-8.401154,3.209900,-6.340039,-6.092149,8.336736,-4.582522,-6.726541,1.452363,-9.390960,4.269751,5.932647,0.746953,5.145240,3.906305,-1.305574,-2.262155,-6.191081,7.914603,1.540891,-6.552387,-9.173590,-1.641176,9.095994,-2.750528,-4.058044,-5.846077,-0.713281,7.471323,7.790310,5.721222,-5.832186,-2.835788,2.216438,9.977428,3.513972,2.707078,-5.041764,3.936661,5.620360,3.159907,9.472584,4.350790,-4.621966,4.773823,-3.662054,2.314737,-7.922290,5.124835,1.944618,-5.761165,-7.172677,-5.314304,7.221968,-3.422054,-5.072465,-1.149186,7.119522,5.743190,1.497230,4.031253,-0.022925,-6.010708,3.716169,-9.062159,7.683257,8.111764,8.403909,-1.148552,0.482569,1.375822,0.820754,5.698992,-7.140790,-7.179404,-4.958122,4.742704,-1.479202,3.688815,8.098575,-4.837859,3.323473,-3.791453,2.359384,9.565763,8.063349,-3.101426,7.615081,0.914913,4.316627,8.065336,-4.864010,-7.901431,-3.582761,-2.786062,8.464462,-5.251014,-2.767056,5.427390,-7.125685,9.901079,-7.493653,-9.967441,0.579898,1.058312,5.090896,-5.301708,6.604477,-9.421172,3.116414,3.974437,6.290944,6.095014,-5.550709,9.045056,6.304791,-5.162218,3.557078,9.019551,-9.740954,1.379254,5.155978,3.726234,-1.750038,5.060591,-8.734886,-4.425192,-4.731138,-2.065674,6.908011,8.136080,-0.176690,-6.442016,-6.981528,-1.379690,-5.794025,-2.486760,-9.981954,-7.274101,2.708159,-0.967148,-2.798394,4.514558,-4.465597,3.612111,-5.098215,-2.753523,-2.357896,-4.081660,3.587735,7.039880,-2.022735,0.998703,-3.911842,4.475179,8.300578,8.505906,-7.753758,0.308505,-2.035410,-4.697358,2.166945,2.510751,7.937899,3.234669,9.241434,-9.373507,-6.831911,-5.982448,1.198744,4.147209,6.512839,-6.267641,3.580150,-9.245914,-5.536194,-6.014539,4.493632,0.883982,8.572924,0.544119,-1.120663,-3.398641,-9.148185,2.085917,-6.092302,-8.947646,7.653272,-2.650840,-8.074294,1.092982,2.444230,0.300904,9.185249,-7.839848,1.249271,4.114855,3.285157,-5.687916,-5.897753,-1.755400,-4.402053,-4.249779,6.387527,4.293976,7.350036,5.275552,-4.952675,-5.305109,3.125510,1.271429,-4.907666,-7.255294,-3.744087,3.203564,-4.358025,-6.828707,9.895126,9.828845,9.104758,-2.210139,4.897862,6.701313,-5.248377,2.155190,-6.158824,-5.566641,-0.101145,4.001282,-7.898479,2.021962,-6.446187,4.843561,7.943854,-0.621674,4.414143,5.585699,-6.539197,3.722090,-9.668796,1.201017,5.538002,-2.532740,-8.524302,-0.470595,-0.336384,-3.602903,4.099694,-1.848979,-0.185653,8.253803,-3.574714,-2.746389,-4.285207,4.068538,-2.294505,3.941825,9.920776,9.207878,6.318746,-2.885269,-7.537327,-2.518273,-0.416729,-7.745442,-5.804236,5.220975,-1.925776,6.475690,2.423303,-9.385762,8.410853,7.507667,0.996836,6.092663,-0.642346,-6.301887,-9.680889,8.013331,-9.641971,3.676669,1.596087,6.934042,-3.222525,-0.504641,7.922793,2.980943,1.411328,3.315982,-0.588128,0.239843,-3.304672,5.065312,2.380984,-6.530407,-7.456410,-2.943045,-2.819811,6.436121,-0.467855,-4.631519,-2.567094,1.080292,-0.614853,-7.269456,6.679862,1.655219,-6.228414,-8.063631,7.675999,7.110968,-9.405443,-6.478824,9.554482,6.686728,4.989422,3.662838,6.879814,2.933761,-5.338086,-2.254837,-8.102697,3.007859,-9.270100,-6.686119,-9.765230,4.786568,6.108569,6.507512,-4.124818,-5.069821,-6.422541,2.649018,-0.547302,4.526247,1.396155,-6.568651,-9.577778,-6.640274,5.002360,-8.609499,-5.013989,-9.472023,1.516931,-5.156975,-0.384794,-4.308073,-6.939440,2.178010,-8.380409,0.053319,-4.215541,9.130306,-6.857941,-7.880620,-8.450784,3.919763,-0.824750,-4.336368,-6.347997,5.137350,-9.835692,8.297068,-6.207784,0.778279,-3.585481,-3.699794,8.212622,1.196167,2.460986,7.194412,-2.153999,-1.171561,3.560080,7.264962,2.346134,-7.912886,-1.838882,-7.236116,-4.215327,0.776713,5.167972,-7.707365,-6.801654,-7.526674,8.414195,1.362366,-9.993312,-1.918688,4.275404,6.812153,0.039082,-3.053649,-0.963144,-5.357090,-1.501328,3.088021,1.589421,-4.136969,5.916347,1.622121,6.615901,-4.499784,-4.717193,1.464034,-8.737941,-0.833803,-8.046135,9.638313,0.148591,-3.744588,-0.051390,0.966873,1.530274,1.968598,-7.451091,9.881213,0.570669,-3.809801,-2.167307,2.027493,-8.313491,-9.791009,-0.267661,8.204575,0.635798,-3.446090,9.500783,4.011212,5.020911,1.503115,0.345625,7.225119,2.736270,-0.898770,0.420811,-9.729147,2.053586,4.716714,9.534288,-3.960461,-2.038577,-7.890140,-5.750677,-0.782394,-2.296974,-7.549526,-0.353182,-1.627762,3.310942,5.773709,4.985304,-2.707557,7.353402,-2.843999,1.979851,8.852965,2.575000,9.831697,-7.934939,-9.626279,-1.685057,-7.516196,-0.882429,-5.702141,-3.072426,0.178397,9.728658,-1.796795,6.498028,3.109280,9.794305,-3.939239,-5.209221,1.634946,0.032983,9.287120,-5.273465,-4.445507,6.450381,-4.221444,-6.139066,2.194670,1.275916,-7.221568,-2.465679,8.786270,7.993870,2.750588,-6.073173,-5.615788,-3.701921,8.827266,3.321132,5.441912,-2.215697,-3.486641,8.351058,-4.974528,-1.109475,5.432474,4.640266,-1.577663,-6.821119,-9.085870,-0.470941,-5.344936,8.454232,8.602678,0.872968,6.490503,-9.909611,0.829060,6.083265,5.364662,-0.927724,-4.053628,2.501343,-6.646327,-7.630430,-9.798153,1.347545,4.127988,-9.081189,-0.952868,-7.445834,2.732328,9.466352,-9.299957,5.086212,-5.279023,1.671373,1.736423,-6.419654,-6.614473,-6.221867,8.774755,-6.193955,-7.255565,-0.427301,-7.701995,-5.397709,2.100355,-4.312710,-4.799964,8.876223,-7.404484,-4.550395,-0.756956,0.421747,1.400496,1.322272,-9.583466,-7.454026,0.237708,8.951956,4.718551,2.465117,7.593450,-2.174759,8.894877,8.780376,-8.588643,4.017629,-1.760866,-9.509981,3.761667,-1.440998,1.410860,-6.883171,3.530707,-5.252782,-0.700154,-5.803625,-7.090209,9.904147,-9.620583,3.304660,-2.179464,9.066052,9.131810,0.414293,-5.624306,-1.192150,-4.670046,-6.454740,-0.078624,-3.396474,-9.568618,1.657123,6.921682,2.419083,1.716466,9.229895,0.088243,-3.120144,-4.911645,0.641031,6.740628,-8.749107,5.559781,-4.439299,7.173639,-8.140056,4.905780,-5.205548,-6.079918,-6.182266,-4.748835,-7.839748,2.233664,7.161914,-1.295707,-3.144079,-3.473224,7.916820,6.208529,-0.021742,-8.081670,-1.391094,-5.620813,-0.580685,-4.566701,-7.641612,-0.300868,3.520367,9.978685,2.179137,0.186877,4.176532,-0.403525,6.078011,-1.970859,4.071321,-2.346143,-9.429463,-7.884539,-4.737104,-6.950173,-1.312521,1.627525,-9.115402,-2.965185,-7.990569,0.584960,8.411065,-7.514677,7.397150,-8.765438,8.000181,-2.350880,0.307328,-7.049033,-4.565017,-5.107010,-6.385507,-3.799305,-0.885851,-2.898982,-9.612723,4.673573,-2.726114,8.134436,-1.898386,-7.072585,-0.623391,-9.451328,5.752344,3.919170,0.310337,-8.667780,2.843118,-7.317813,9.850003,-1.418080,-4.667024,-9.516329,8.628440,-8.871527,2.790876,4.812473,9.644924,-0.343815,7.321626,-7.004201,9.405388,-6.173219,0.697667,2.512174,7.810088,5.166972,7.645938,-2.694673,7.925589,-7.668209,3.896411,-7.895548,3.629681,-6.978230,3.487130,3.881829,7.952505,5.299591,-6.286611,-2.147344,7.083761,4.872197,9.814701,6.395115,-2.536569,1.461034,-1.416644,5.311546,-6.430379,-9.688926,-4.526900,7.216368,9.356444,6.737384,5.316323,5.172381,6.761158,6.183917,7.927913,9.024396,-8.023233,5.774635,-6.741885,5.586334,-2.319902,-5.277203,6.182993,9.568533,1.127538,4.976379,-0.692092,1.539288,1.727397,-8.134166,3.277717,5.952529,-9.692801,-0.258379,0.964560,-4.917642,3.791901,-7.713415,-0.777634,3.456004,-5.456930,-0.890183,-9.378106,-7.109957,-7.490612,-6.934094,-6.550691,1.194015,-7.539844,-7.991007,3.824219,-4.869440,3.067312,-8.162306,-0.439127,3.539948,-3.256981,0.859954,1.505597,-4.542402,-7.854242,-8.139532,-2.656976,9.815118,7.717482,-5.473613,-4.104232,-9.492999,-0.830588,1.616928,-8.099893,8.810494,-2.634783,1.796864,8.113367,7.965049,-2.878740,-5.437463,-9.947549,-7.041332,8.375650,-9.573703,4.720268,-3.955091,0.349590,-9.149506,-6.411284,-6.691599,-2.513082,1.201835,-6.886279,0.752407,-8.173055,1.013505,1.505716,-0.527238,4.667138,6.366630,5.594665,-0.915200,0.839336,3.218088,-0.826239,9.772670,8.472090,-0.436497,6.183314,3.404544,-0.655435,-7.157152,-7.658873,-1.252572,-2.986902,-7.492002,6.306885,-3.143477,4.646718,2.650601,-2.567612,-4.733852,0.887725,6.609894,-3.466346,-7.443351,2.286388,-0.483881,0.964345,3.580696,-2.036913,-8.373340,-0.750943,7.016893,-6.032673,-2.045547,6.190340,-7.216728,2.969499,7.736403,-0.893748,-7.200494,7.695442,0.058418,-9.699253,-8.069903,-5.439646,-3.103609,6.669351,-0.794639,-2.674605,-4.410600,9.431454,-8.828767,-6.952740,-8.004707,2.571607,9.375079,-7.981700,-8.109986,5.370694,5.931178,6.617584,6.357256,5.563387,-1.021238,-4.822938,7.053357,8.819194,-5.671881,-7.106895,9.168752,-4.806111,-1.461533,3.774074,2.587987,8.514197,3.658505,-7.626484,0.140663,-6.901780,-4.549073,9.573766,1.232846,0.163532,-1.118288,-0.705859,-4.006945,-8.325704,0.676915,2.047497,0.498843,-9.505068,5.472392,4.611442,-4.839755,-9.088021,-1.636516,3.734290,-2.014899,8.755754,-2.130165,-2.087124,-8.708767,4.724296,5.804430,-9.145347,9.630391,1.509558,-4.627719,1.312045,-8.756248,8.938459,0.035859,-6.717805,7.141394,2.761512,-4.237701,-8.750349,-0.480800,-1.796747,-6.685480,-2.048985,8.117202,-3.189681,-0.512637,3.813285,4.575788,5.236058,1.662887,4.547714,-7.675576,-6.458160,-3.220972,0.733758,-0.270477,-1.053655,4.758073,-1.862035,-4.298815,-9.224784,-3.037025,-5.020711,-9.007449,2.689763,2.777000,-0.895751,9.063235,-7.170115,-6.587389,-5.723788,-2.994887,3.577295,-0.193633,-7.727940,5.531830,5.575768,-9.692241,7.767895,-0.369359,-2.119165,0.215833,5.047024,4.255582,1.605692,6.032568,-9.007998,-8.257010,8.161802,0.109372,-8.503577,-2.306049,7.143847,3.918751,3.411924,4.689469,6.449391,9.814677,3.108958,5.643907,-3.945632,-3.734114,-7.214402,-6.515697,2.281837,5.849686,-6.682759,-4.481954,9.099569,7.962863,1.653539,-2.126326,8.790839,8.314448,1.252689,3.341364,7.129638,-4.380971,8.655596,-8.258390,6.934863,-6.009228,8.284318,8.090517,-1.563323,-6.115273,3.104281,-7.648027,-0.348327,9.405226,-0.849544,0.229383,-2.395358,5.936596,-9.721570,9.976396,-5.224599,-3.783659,-3.283420,-2.995291,-7.991687,-5.279976,3.618827,-9.423905,-4.796634,4.992415,1.695287,-3.253268,3.093096,8.538354,0.831067,9.735660,-4.053209,-1.888984,4.485603,5.858041,7.100922,7.594110,-8.793433,-6.459408,6.028316,-6.313046,-3.598112,-3.670596,-3.833911,8.700036,-5.455095,9.803167,-7.154682,4.775185,-0.321036,2.760485,-7.731354,1.627543,2.852212,6.447670,7.436205,8.043400,0.200785,0.044682,6.702448,5.081743,1.523756,-0.788970,-0.601881,0.832551,-4.944505,-9.656884,7.668392,1.663135,3.618575,7.506482,-9.824408,-5.613765,4.542629,-3.825497,6.643939,-7.050804,-5.436985,-0.213529,0.242744,-1.935653,0.189552,-8.549418,-5.520484,9.535601,2.068209,-5.652225,5.528881,1.943448,1.732519,7.496750,7.224657,1.934002,-7.843533,0.785591,-6.830223,0.326706,-5.636159,-3.495967,8.255903,4.920776,8.663484,1.905749,-3.931376,5.243825,-6.093986,-0.423739,-8.560451,5.870964,-9.913472,-2.760944,-9.785201,-3.540024,-5.684331,1.478493,-2.711361,-1.621072,9.503303,-5.755111,-4.387546,0.143979,-4.589322,-6.915789,8.869034,7.010310,-8.738610,-3.372732,3.510051,-4.016218,-6.461970,5.176567,-9.966528,-8.506101,7.717692,3.541112,-1.295983,-8.847351,0.234559,4.304355,9.709971,-2.835180,6.561096,-0.202629,0.377985,-9.017311,7.947173,-9.921078,9.742249,5.069679,0.980314,-5.818343,2.091714,-2.757611,6.841273,9.854758,-9.825840,5.266916,1.681562,-5.120288,-9.751388,-4.005465,-2.210926,3.387768,2.494890,0.083480,1.628630,-2.592922,-0.826890,2.550293,-8.037030,-6.496046,-3.550505,-6.879602,-2.080301,-5.990468,0.423672,-9.171969,3.729337,1.671049,-5.175945,6.827293,-0.901792,-9.993406,-9.394766,4.027914,-2.534306,7.491418,4.766047,-7.392738,-8.402647,-4.814850,9.543305,-2.774440,-7.701751,7.041334,-6.869650,-7.258969,-8.867411,3.218782,0.094611,-1.250674,4.414605,-9.696374,2.699489,-9.325373,-3.031371,-5.701423,4.939164,-3.397352,-4.596612,-5.121881,1.094835,-4.276618,1.895815,-7.251039,-4.915646,-1.461675,3.677498,-4.755718,-2.456367,-6.644748,2.062114,-8.318122,8.316320,-1.614071,6.182680,-0.286133,5.156195,-8.866027,4.190939,2.461312,8.704951,4.856056,8.887214,-6.623220,-8.225379,-7.633739,2.963915,-1.392649,5.174124,-3.020667,9.240348,4.669786,0.314190,7.792546,7.758493,-4.363195,-0.601609,8.130947,5.138028,8.973216,-4.199655,8.857077,4.320593,2.649884,-3.736091,2.034654,-5.546372,2.009565,-4.261097,-3.642757,5.318363,3.232984,-6.692518,6.258118,-8.490995,6.593802,-9.464629,-9.094786,-1.391035,3.602158,2.921373,-8.585846,3.087016,-8.361011,-9.454949,4.380072,2.082927,-9.010830,9.886923,-0.412001,-7.565794,3.033311,-6.192680,-0.352843,4.719465,-9.894417,-1.559025,-7.932958,-2.940697,-5.401004,-9.274592,-9.693744,-2.005804,9.582625,1.605464,5.737250,-9.877485,-6.567401,-6.688350,8.123914,-9.540141,-9.041982,5.166296,7.542869,8.811176,-8.165205,7.833622,-3.926870,7.251252,-8.292080,5.641769,4.610902,-0.670666,-9.445585,-3.438764,-6.059316,5.793831,-7.077915,2.700499,-0.943051,1.702973,-8.720905,-5.740755,-1.588431,1.653187,-8.428711,-4.143867,-1.166179,6.766169,0.845333,-7.132433,8.172531,-8.714624,-8.805989,0.487362,1.940209,-0.445682,6.745535,-2.760271,-4.417000,-0.263453,-0.307853,-1.263066,8.605866,4.149982,-4.365611,-6.098156,-6.029508,5.080279,2.048755,8.233878,2.925147,-8.049077,-7.041354,-8.688384,-0.635467,3.860269,0.731936,9.457102,-6.555116,6.864369,7.340544,-8.445728,-8.915962,-2.453227,-8.466027,-1.830950,3.229894,-9.599120,5.626482,8.050814,-0.360629,-9.497655,-8.468327,-1.040547,8.955245,4.709099,-9.733364,-0.224405,2.287383,-6.665557,-8.582128,5.692585,7.594719,-1.436868,-8.981081,6.971836,-4.108366,-4.220118,9.971335,8.190841,-0.999052,9.838315,-4.620759,-9.894830,2.005497,0.588867,1.986225,0.194333,0.719264,-0.425839,2.162891,-8.257076,8.085389,2.069150,2.760855,5.713562,6.473600,-2.992273,-6.433021,-4.577615,9.363099,-7.535086,-8.372732,-4.134194,0.967591,-8.054906,-2.454609,-3.707125,2.513522,-6.004619,7.359475,4.206549,1.565851,-4.439736,-1.697410,6.958263,6.648970,-4.412633,3.881764,6.174901,9.213958,-1.210138,-6.392297,-1.703693,-1.158227,-2.786004,-8.150474,-2.928853,-5.383538,-4.321387,3.098722,-9.368701,6.587544,0.158389,3.297647,6.932727,-1.309874,-1.545402,-7.117723,-2.600892,-2.100301,-3.213156,-7.468734,-8.843876,-9.792355,7.640755], dtype = "float32")#candidate|17538|(1512,)|const|float32
call_17537 = relay.TupleGetItem(func_13368_call(relay.reshape(const_17538.astype('float32'), [126, 12])), 1)
call_17539 = relay.TupleGetItem(func_13371_call(relay.reshape(const_17538.astype('float32'), [126, 12])), 1)
output = relay.Tuple([call_17501,call_17503,call_17505,call_17537,const_17538,])
output2 = relay.Tuple([call_17502,call_17504,call_17506,call_17539,const_17538,])
func_17544 = relay.Function([], output)
mod['func_17544'] = func_17544
mod = relay.transform.InferType()(mod)
mutated_mod['func_17544'] = func_17544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17544_call = mutated_mod.get_global_var('func_17544')
call_17545 = func_17544_call()
output = call_17545
func_17546 = relay.Function([], output)
mutated_mod['func_17546'] = func_17546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17712 = relay.var("var_17712", dtype = "float64", shape = (12, 7, 6))#candidate|17712|(12, 7, 6)|var|float64
uop_17713 = relay.log2(var_17712.astype('float64')) # shape=(12, 7, 6)
output = uop_17713
output2 = uop_17713
func_17718 = relay.Function([var_17712,], output)
mod['func_17718'] = func_17718
mod = relay.transform.InferType()(mod)
mutated_mod['func_17718'] = func_17718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17719 = relay.var("var_17719", dtype = "float64", shape = (12, 7, 6))#candidate|17719|(12, 7, 6)|var|float64
func_17718_call = mutated_mod.get_global_var('func_17718')
call_17720 = func_17718_call(var_17719)
output = call_17720
func_17721 = relay.Function([var_17719], output)
mutated_mod['func_17721'] = func_17721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9993_call = mod.get_global_var('func_9993')
func_9994_call = mutated_mod.get_global_var('func_9994')
call_17750 = relay.TupleGetItem(func_9993_call(), 0)
call_17751 = relay.TupleGetItem(func_9994_call(), 0)
func_14016_call = mod.get_global_var('func_14016')
func_14018_call = mutated_mod.get_global_var('func_14018')
call_17780 = func_14016_call()
call_17781 = func_14016_call()
func_12805_call = mod.get_global_var('func_12805')
func_12806_call = mutated_mod.get_global_var('func_12806')
call_17808 = relay.TupleGetItem(func_12805_call(), 0)
call_17809 = relay.TupleGetItem(func_12806_call(), 0)
output = relay.Tuple([call_17750,call_17780,call_17808,])
output2 = relay.Tuple([call_17751,call_17781,call_17809,])
func_17822 = relay.Function([], output)
mod['func_17822'] = func_17822
mod = relay.transform.InferType()(mod)
output = func_17822()
func_17823 = relay.Function([], output)
mutated_mod['func_17823'] = func_17823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12070_call = mod.get_global_var('func_12070')
func_12072_call = mutated_mod.get_global_var('func_12072')
call_17839 = relay.TupleGetItem(func_12070_call(), 0)
call_17840 = relay.TupleGetItem(func_12072_call(), 0)
output = relay.Tuple([call_17839,])
output2 = relay.Tuple([call_17840,])
func_17859 = relay.Function([], output)
mod['func_17859'] = func_17859
mod = relay.transform.InferType()(mod)
mutated_mod['func_17859'] = func_17859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17859_call = mutated_mod.get_global_var('func_17859')
call_17860 = func_17859_call()
output = call_17860
func_17861 = relay.Function([], output)
mutated_mod['func_17861'] = func_17861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16855_call = mod.get_global_var('func_16855')
func_16856_call = mutated_mod.get_global_var('func_16856')
call_17864 = relay.TupleGetItem(func_16855_call(), 0)
call_17865 = relay.TupleGetItem(func_16856_call(), 0)
func_13368_call = mod.get_global_var('func_13368')
func_13371_call = mutated_mod.get_global_var('func_13371')
const_17868 = relay.const([[-6.587498,-2.306439,5.223012,4.798781,3.668106,3.865776,9.465621,6.487092,4.566914,7.908027,-1.382820,-0.671627,-4.804889,9.547114,2.538985,-0.299580,-2.358517,5.633154,-7.776442,5.499013,2.033721,5.146987,-6.487212,5.750413,-7.822869,9.638779,4.815040,9.264825,9.814181,-2.348226,3.306486,-6.431421,6.514669,4.993023,5.212287,5.411412,1.229202,5.110686,-0.887425,-5.842281,7.861091,4.840735,5.200778,8.387349,6.756042,-7.218768,-7.819842,-4.431658,-8.633991,5.168382,-2.698153,4.300561,7.440055,4.950402,4.863095,-7.523764,4.269197,8.952021,3.859559,2.553234,9.292280,1.837440,-8.992054,7.149703,-7.084936,-8.151765,-1.320542,-5.222132,7.353684,3.454155,1.351366,9.229789,6.080315,-2.633019,3.765992,1.060762,7.288106,-0.029914,-4.660679,-8.939112,-3.687579,2.113944,-7.377147,8.709256,1.068125,7.117953,-1.443141,7.594703,8.903076,-3.298592,3.968416,5.739913,2.400913,-5.920114,-4.460714,-1.249287,-9.334202,9.992556,0.446446,-5.597219,8.998700,-1.304147,-2.514082,6.440457,0.767260,9.099882,2.930548,2.308207,-8.757980,-8.742332,-9.688420,-4.363289,-7.488442,-5.486506,-7.716807,-2.767112,-9.753957,7.442744,-3.705751,-5.954802,8.050655,-6.013818,7.365733,7.525263,9.665523,-2.954224,-6.592871,-6.199048,-5.564417,-3.927623,2.524313,-4.028211,4.970675,1.518691,-8.612394,7.074258,7.823454,-5.032000,7.227036,-9.667339,6.671996,7.318217,3.090747,-4.000625,-1.879829,-3.809307,9.915920,7.041950,9.331577,-4.473146,-3.888713,0.036398,7.643629,-8.458988,0.350675,0.307825,4.181423,-8.322331,6.869960,-5.182643,4.904126,8.880079,0.999515,-5.692281,5.150718,-2.185935,-6.653215,2.919241,2.043295,1.516235,2.825350,1.767903,7.324789,3.791739,-9.221102,-2.445321,1.819680,-0.772346,-0.592958,6.727820,6.604554,4.822679,6.407486,6.541854,3.275260,6.441023,-1.347347,2.876147,-2.691341,-4.358435,6.928738,-6.743054,-9.870228,4.810276,4.331107,3.823045,7.596610,6.909504,6.430311,6.748224,2.422482,7.551801,-6.822411,3.538428,-2.395884,0.532436,-6.147933,-2.046163,2.106610,2.067144,-5.771196,9.776205,5.336055,-5.131663,-7.596874,1.334246,-2.558428,9.015935,-8.815485,9.021121,-5.798631,-9.796372,-8.151535,3.107638,-4.822137,0.020927,4.579893,-9.943951,2.846588,-4.760700,5.793122,5.948313,-3.754288,-6.142165,2.814245,5.564547,-9.238699,-3.178205,-1.194180,-7.882201,-0.086481,0.697280,8.694287,-0.390409,-3.386614,-9.074533,5.062606,4.539547,-0.101018,-4.172739,9.221117,4.568140,7.072815,0.078240,3.000913,-4.874598,6.360680,-6.325045,-2.411833,6.648212,1.944615,-4.800032,1.388256,-5.481529,2.053880,4.513557,8.971039,-7.450087,-8.885399,-3.511374,-4.311506,3.540250,8.868571,-6.378962,-1.174124,-9.675459,2.713800,-0.993071,6.907363,-2.880107,4.700354,3.873785,-7.184388,9.817002,2.245712,-4.944547,6.996531,8.842172,3.347320,-2.514895,5.803085,0.973011,9.203043,5.068265,3.230340,2.157357,7.482625,5.947637,-7.662396,-8.637636,-3.918748,2.439603,-9.723017,-8.729549,-9.566169,-9.476953,-2.253309,-5.712960,1.732853,-5.843511,4.734751,-5.423141,-0.777424,-9.182714,-7.347418,5.984167,-2.703600,-4.830665,1.567181,-0.433981,7.606614,-2.261763,2.400623,8.224446,-5.967385,0.178140,5.134063,7.389768,0.404673,0.352130,-1.423389,-7.592700,4.544879,-6.914324,-9.096212,3.163365,5.263972,2.162365,-4.961708,3.124656,-8.568433,1.289707,-0.440313,2.230021,-7.714661,-8.397835,1.539912,8.762717,6.386737,-7.811426,7.746536,-8.196962,2.078472,6.950677,-4.920284,-9.813457,8.729699,2.828325,-8.888264,9.729965,6.039755,-9.779993,-6.454371,8.606036,2.502462,0.406825,2.600711,6.469366,3.277540,6.305331,0.645320,-4.834864,3.175163,9.953040,3.202291,-9.536518,-2.691049,0.686148,0.155029,-7.541492,-4.832484,0.545048,2.076612,-6.538513,1.637603,4.090397,-5.678386,4.220047,0.008926,5.611141,3.598531,8.394534,-4.778105,-0.107188,6.085105,-5.443430,0.817476,-6.464923,-6.895635,9.092304,-4.650828,9.446951,6.341372,-2.473599,9.593153,9.204738,1.776119,-5.580814,0.710040,3.223477,5.006591,6.846075,1.174256,-4.836610,-3.809063,1.467271,-9.180664,5.410234,9.730957,-3.360096,-2.848572,8.681789,-8.668901,5.271587,3.193618,-4.472060,2.389358,7.678611,0.688708,-7.899085,0.811505,-5.770920,-3.768226,3.166200,9.416382,-2.534395,5.827182,-7.981687,8.675018,-2.011604,-3.620414,-3.541174,-6.468366,0.424305,9.478525,2.422443,9.412512,-5.363409,-1.934997,-9.667113,3.446109,8.080632,-6.521151,-4.007435,4.254318,-0.346018,9.703868,5.045904,-8.061780,-1.876985,3.615298,7.671011,6.479473,-6.267120,8.106017,-2.611518,-3.032049,-8.841863,8.294437,-3.434457,1.305757,-2.425265,9.893959,-8.724624,-5.149666,1.028102,-7.956108,8.887796,-2.630680,2.645704,-8.250288,-8.233638,7.225858,3.450321,0.301967,-1.376023,9.463276,-8.594337,-9.551825,-9.395091,9.764308,-8.661515,-6.318966,7.888767,-0.066803,4.889868,-3.389734,2.862679,-9.648888,-4.066224,-2.505392,-3.064836,-4.161869,2.405221,5.049454,6.287615,5.347693,-9.997196,3.857458,9.523045,2.823229,-7.591230,-8.307560,9.776995,4.811591,3.092182,-1.965996,1.470985,-7.107031,-4.763610,-6.131149,-3.009268,4.928662,-0.912040,-4.257015,-0.064334,-9.999263,-8.792982,-3.475513,9.117387,5.529792,-7.390135,-4.036731,-2.845551,-5.924497,-3.911106,9.842596,-8.079173,0.084139,3.149742,-1.542656,3.632527,9.301406,-1.398377,-3.431702,0.149580,-3.836579,5.511130,7.114415,3.100803,-7.600706,-3.006431,-4.055807,9.243216,9.230672,9.502224,-4.506462,-5.721447,-5.541914,-5.626878,-9.142801,7.160454,1.541350,8.933242,-9.095862,-4.131991,-2.552892,-2.438482,4.422770,1.700382,8.105955,5.916087,1.469128,9.190172,-5.701356,-4.536217,2.641935,8.747336,7.681707,7.906164,3.537136,-1.931465,-0.657868,-0.471056,-5.399871,0.985840,-5.674523,-2.087645,-9.764061,-5.484537,0.976750,-2.646617,-5.469186,9.206917,-2.594686,1.967832,-7.551924,-0.307294,2.152242,-2.750365,-6.682456,8.528702,-7.532662,-6.843842,4.080559,7.097946,-4.374399,4.806944,1.104384,-5.792811,0.040108,4.952314,0.815416,-3.031306,-0.203569,9.731971,-1.556155,-4.383489,-2.741630,-3.355771,3.122902,-1.297923,6.010180,-5.153678,-3.706549,-0.811352,-1.818892,6.555508,7.521341,-3.644584,-2.627967,-0.310627,-2.660725,-6.171220,-4.586537,-1.637231,-2.531260,5.502819,-3.304247,0.940475,-4.907557,-2.890568,5.392727,-8.694216,-8.605789,0.304079,-4.818065,2.228434,-9.293442,4.656065,-5.304869,-5.748045,-1.517443,-2.028473,9.843097,4.016491,-1.520241,-4.236598,8.959588,-6.204111,-9.413276,0.537331,-0.890351,1.253215,-7.962079,5.847402,3.200024,0.585068,2.706490,-5.359235,2.843124,-9.893972,-2.094233,-7.475593,8.132956,6.732344,-3.838061,1.383328,5.089615,5.245679,7.263965,7.286999,-7.582949,5.858930,-6.110857,-2.875167,7.780852,0.287909,4.858641,-6.305393,6.435426,-6.090327,-3.466306,-2.307128,1.401700,9.104713,-8.081980,0.058426,0.366824,-1.697350,-1.163265,-1.845192,3.457927,0.834433,7.822965,0.045660,8.236247,-2.582626,5.725932,-1.611724,-6.786335,-3.027377,-3.593975,7.900323,-0.793481,8.997471,-8.106296,-0.342318,-1.937014,-4.554365,8.820724,-5.541643,-1.655334,-8.742304,1.987522,-2.856575,-4.028416,-0.388405,-6.346310,7.028781,2.528781,2.398130,-0.774662,7.611009,-6.003177,-6.726304,2.112968,-8.404067,1.613123,-1.868550,9.446443,-3.620223,4.936914,-7.421912,-4.199482,-0.863381,7.126228,8.317843,0.330762,-0.216726,-1.979550,-3.810724,1.644135,1.793642,2.480744,2.168730,-5.899367,4.950857,-8.225648,4.668812,5.415728,-6.543484,-6.136710,-8.694737,-4.449301,6.473866,2.921115,-3.243114,-0.613685,7.156780,6.901751,0.577072,-8.988616,8.582036,-2.985120,4.135127,-7.597695,-0.664365,2.557085,5.588349,2.468651,-9.188295,-5.319269,3.212870,5.652741,-5.014014,7.951566,-7.442553,-6.013145,-3.812942,2.428822,-5.680591,2.064505,-2.848455,7.479236,-3.149184,-4.406461,3.583464,-6.845056,0.200772,4.555063,-3.656090,5.839021,-3.984954,7.989491,9.015584,-0.592507,-1.807698,-0.493913,-6.202548,-0.681892,2.116187,-2.289693,7.323835,6.758841,-5.517263,2.658238,-7.403405,2.303564,-6.369783,7.517881,7.521523,-6.667578,-2.286314,-6.699600,-2.200508,6.767052,5.603786,3.872948,-7.811219,-9.338105,8.224104,-9.162743,-7.269022,4.366720,-1.075262,-0.890075,-8.560533,1.484551,-2.994677,-6.678764,2.801962,-0.474264,7.473405,1.495348,-0.988429,-5.083968,0.915962,4.834864,-7.116650,8.032331,-2.836256,9.157062,-7.638152,9.507418,-4.672999,0.259061,3.331632,0.679881,2.115894,6.817166,-5.794016,-8.710148,-0.053298,1.569625,-8.838211,7.765694,8.287425,7.910652,9.015484,-8.793103,-0.416424,5.419851,7.782073,-0.960222,-7.140772,-7.911822,6.190329,-6.320899,0.100022,3.940272,-0.294261,-5.291882,2.522231,5.904714,-7.576189,-9.975845,-8.000915,-2.763014,-6.735287,-8.306532,-2.880358,0.676405,4.005333,7.302272,-0.734410,-5.239314,3.282620,-0.942141,7.090047,-3.122364,5.465694,-4.209175,-0.470700,5.276125,-2.028122,9.456623,-0.255703,-5.010629,8.077355,-6.095866,-3.964264,-6.235218,9.157606,-9.806486,2.953279,-7.772492,-1.421333,-1.999572,-7.310406,2.890588,1.946784,7.371158,-3.635680,-8.689663,-4.530431,3.451057,8.728010,-8.570018,-2.828856,0.683187,7.716471,-5.391348,7.684101,1.723663,-4.432821,-9.513552,3.660572,0.731086,5.143495,4.502731,5.576355,6.449351,4.460620,7.634390,-5.035506,2.624160,5.141516,5.116984,-7.523310,-2.770812,-5.927544,-8.775274,-5.472381,6.574040,7.085280,4.130078,2.256418,-4.899682,1.161563,-0.103188,-5.034366,6.050467,9.974293,-3.231109,2.998664,-5.343949,3.095504,-3.017306,-2.256544,-8.370770,-2.987856,-7.786490,-0.923595,-2.498129,3.119927,6.430832,-7.660366,5.728240,-8.649539,9.834639,-6.531128,5.664481,4.409177,4.523280,7.029755,0.557253,-8.173865,9.041063,-6.762880,-9.588485,-4.741963,-2.446958,-6.790186,-8.499504,4.578936,1.006408,4.127674,-0.969345,-3.805676,-9.148348,3.455938,4.029512,-3.047834,-8.619725,7.174744,-7.310106,-9.539645,-7.863917,-2.003961,3.307864,9.906454,1.464697,3.628782,5.836268,9.587762,6.420715,3.939117,-4.360478,4.854895,7.540647,3.766289,-6.526782,-7.216084,7.763211,1.734676,-8.415118,2.689375,1.637907,9.448495,-3.306767,9.793117,7.928184,-5.590608,-7.271525,-1.099887,-6.865344,9.058319,-1.700348,-6.509080,-6.807288,-5.678030,-7.290063,-9.323022,1.857296,-4.819306,-1.807086,0.684112,-2.303128,-8.589216,-9.280078,-8.357270,-8.984706,2.874879,3.818512,-9.240365,-7.595340,6.898975,-5.163279,-7.478492,4.780112,6.170290,-8.160289,-8.208339,7.201358,3.614996,9.116597,-0.750439,3.974989,-0.117976,2.299899,-4.333665,-7.112189,-9.164653,2.365605,-3.667767,5.277322,7.173998,-5.224480,9.349590,-9.812939,6.378409,-1.708571,9.693056,-8.954788,1.056654,7.183253,9.511766,4.637186,-8.091805,-3.122636,4.494881,7.125094,-7.070186,-4.516378,3.407634,-2.399258,0.966236,-9.099012,1.184146,-5.495924,1.352155,-0.265163,5.372235,-4.250160,7.581458,-9.529889,2.483011,3.567103,-8.804767,5.239736,-0.461855,-4.074073,-6.513806,-3.962159,4.573555,-2.882189,-7.215682,9.693361,-1.096900,-0.467325,0.592391,1.537459,-4.983301,-9.890415,-3.858261,-3.809071,2.634293,-9.061621,0.898902,5.169066,-4.259104,5.427827,8.603673,-1.449507,6.455245,9.408747,-6.088763,6.349037,8.339446,0.893739,7.897448,-5.080517,-6.239137,-4.256079,5.507019,7.898018,-5.144631,1.519949,5.725397,7.614017,-8.991601,3.943502,5.661522,1.816616,-3.200842,5.758560,-3.625792,4.415697,-5.112179,-0.439000,3.019571,0.962853,0.248433,0.117945,0.005105,8.923632,0.379904,-4.803255,2.109919,9.787600,-8.299624,0.740790,-9.056907,0.143043,-0.715742,5.274877,3.002309,5.476690,0.261710,-9.302558,-5.399817,-1.504498,-7.031663,-0.134095,-7.816543,-3.173554,-1.766692,6.748249,-7.087952,-6.315472,-7.358136,-9.718838,-3.723209,-3.234694,8.553738,-8.171786,-4.696711,3.169082,0.189433,-4.441889,-6.814999,-9.286657,-6.648258,2.203605,8.503100,-3.398973,4.304689,8.323916,-5.475333,9.288586,-4.819673,8.215478,-7.428788,-7.495119,7.373764,4.828780,8.967670,-5.012864,0.893037,-9.531803,8.516273,4.373444,4.366704,7.962160,-9.611328,1.012976,-1.015944,-4.693021,-6.520131,4.364428,1.172519,2.927934,-0.897599,2.977596,3.107207,-1.383100,-8.982558,-2.406710,7.048248,5.391403,-3.191004,-8.894847,-3.634435,-3.151631,5.897122,-8.106188,-5.470432,0.567023,3.033036,4.042527,-3.783842,-6.421128,8.647026,3.323890,-0.679897,-3.483295,8.623743,1.351965,1.898298,-4.283714,2.312232,-2.833644,-1.798733,3.050899,-5.552516,6.128162,-8.357279,0.224409,-4.541527,-1.725873,8.894966,9.084777,-0.952589,-5.498330,-2.066860,-0.012909,2.591624,-9.612729,2.061403,-2.549331,-4.855520,-7.190624,5.630891,-9.821883,-1.032581,-9.956669,9.412023,2.254791,-3.462843,-5.116562,-1.912741,4.736650,9.201937,-2.157184,0.139007,-1.899137,-4.093360,-4.201444,-9.521933,3.176758,-2.439746,-2.352009,1.529324,5.825245,-6.823677,7.423580,-8.565508,-7.047347,-7.997257,-7.166519,3.939179,6.355202,-4.620783,2.988412,-6.210848,1.822612,-7.010119,-1.934634,7.726115,-3.986306,2.385159,9.853040,-2.242211,6.425599,-5.598405,-0.378056,-3.638541,5.786472,2.007443,1.479184,5.254902,-9.709637,2.526644,6.802525,-1.893504,-4.162100,8.876491,-9.334735,4.267315,-4.585240,9.087653,-3.759589,-7.081340,-3.162762,-1.089943,8.671615,4.327417,-6.579947,9.308450,3.564416,3.211475,3.311598,5.088598,-7.251317,-7.561341,-4.868374,8.880275,1.952681,-8.425398,4.468415,-9.146767,-8.208715,4.401335,-0.579250,4.101043,-4.441469,8.130871,1.794985,6.321092,4.669035,9.694937,-8.693285,-1.046132,-3.363839,5.439266,-9.242688,7.084900,3.934901,8.930987,6.898483,-5.831143,9.100353,0.353957,-9.864513,-8.893890,-5.904943,-6.878625,-5.058116,3.339471,6.770941,-6.355274,-7.026514,2.624324,-5.305526,0.434580,1.751462,-5.706011,4.367242,6.105375,-3.920413,2.644676,1.395775,4.874487,4.870558,2.900933,-4.426939,-5.683488,4.623792,-3.541459,-2.255181,7.769357,9.935767,-0.495016,8.264597,0.668804,0.878350,4.775681,-1.041359,-9.651863,4.519539,-8.383328,4.125584,-8.244094,-6.447267,4.765958,-0.964346,-4.055408,-8.238256,-5.643730,0.971981,7.939087,-1.202742,2.088131,-1.430012,-2.248748,8.967223,2.410663,1.657402,3.619612,-5.437351,-7.763146,1.502814,4.246321,3.069149,-4.199334,8.526020,2.469881,-7.470576,-4.750073,-5.670086,-0.789158,5.356681,2.554661,5.714350,4.271014,3.621387,-5.293199,-6.822082,-7.078185,5.928884,-7.856474,-2.819483,-0.753172,9.005732,9.855216,-2.423181,8.856562,6.590032,-9.002762,-2.051248,7.463817,-6.689516,-0.822913,0.266844,-4.819375,0.013121,7.879609,2.141160,-5.183367,-2.401852,-0.100413,4.178185,-0.468422,-0.454425,9.331285,-3.376156,-4.181210,-5.649562,-0.033160,2.510128,-0.595955,5.835754,2.922036,-9.997121,2.871190,0.899124,6.239745,-5.855453,-0.904468,-7.540395,6.561226,-8.517840,7.789618,-2.373367,-6.078227,1.618897,5.034559,-5.114884,2.290697,-1.030686,4.343368]], dtype = "float32")#candidate|17868|(1, 1512)|const|float32
call_17867 = relay.TupleGetItem(func_13368_call(relay.reshape(const_17868.astype('float32'), [126, 12])), 4)
call_17869 = relay.TupleGetItem(func_13371_call(relay.reshape(const_17868.astype('float32'), [126, 12])), 4)
func_16090_call = mod.get_global_var('func_16090')
func_16092_call = mutated_mod.get_global_var('func_16092')
call_17888 = relay.TupleGetItem(func_16090_call(), 0)
call_17889 = relay.TupleGetItem(func_16092_call(), 0)
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
const_17897 = relay.const([-9.651266,-8.811156,1.921734,-4.899988,-0.604588,-9.744325,-9.341213,6.730645,-7.221006,-5.211270,1.421911,0.492762,-4.829952,-7.398239,-9.071791,0.248379,4.315451,-0.675609,6.139761,-2.691701,2.112155,2.519679,4.767651,-5.304906,2.582795,-2.307183,5.979630,3.740902,-2.837559,6.647756,-2.725550,-1.619786,7.011241,-5.354276,5.607791,-8.865984,8.613165,-6.558024,-7.613792,-0.584630,0.235029,-2.127072,2.722708,-8.610281,-2.118830,-3.230097,1.641272,-1.083704,0.047940,6.762923,-5.289369,-4.182217,-2.450214,-4.163869,9.156618,-9.357986,7.411826,7.917179,3.645320,9.678130,2.190745,-0.362743,-4.035036,8.087551,6.735773,-3.798411,8.839741,7.968379,-5.399224,-7.712443,-4.271641,-8.186820,-3.482170,-2.965960,-5.070445,2.934301,-5.756768,-1.209403,-9.628727,-6.157315,-2.183386,7.120346,0.188874,0.948945,-0.060509,9.787544,9.374263,8.180732,9.433738,7.011027,4.741237,-5.915344,-2.570289,-5.284887,-4.349740,-6.441512,5.428320,-5.734266,-2.832486,-0.516798,-1.854388,1.827239,-6.926784,8.451837,9.411131,3.114145,3.239113,-8.810753,-4.736118,-8.807328,7.526561,7.686376,4.403285,-6.493456,-0.931369,-2.058982,-7.562916,-0.213097,-4.696833,8.577036,-7.674016,-2.710860,-1.533942,3.994560,1.699886,4.235307,-4.784026,-6.471550,1.410051,6.055748,9.843184,-1.623398,6.980507,-0.259873,-8.369613,1.260188,-5.989976,-9.336059,-0.043619,1.417301,4.841610,8.341875,-9.102453,3.533430,-5.594986,2.690827,7.687264,3.484321,-3.324162,-3.089968,1.339914,0.325387,-6.210398,-9.417266,6.583055,-2.138508,0.342893,-5.383335,5.530980,2.950823,-8.989612,-0.349798,-0.058413,-7.177847,1.761866,3.901935,0.835348,5.927266,-9.706957,-3.657492,1.287862,-5.399176,-7.293464,-1.717251,4.145747,7.463660,-6.028458,6.717499,-6.178245,5.651023,-8.029758,-4.643191,3.147496,1.730624,-8.355195,8.947420,1.414503,-9.403939,-9.824371,9.205852,-1.930539,8.990069,-2.228147,7.264265,4.200694,0.011309,1.532358,7.854373,0.727108,-1.402327,-4.306579,8.897062,0.941845,-0.173858,1.035662,3.110813,-1.905206,-8.389490,3.880336,1.822349,8.605777,5.416337,7.992213,3.121239,4.365518,-7.067363,-0.768428,9.855646,7.190176,6.854366,-6.766259,-7.466320,-7.796453,9.730721,-7.021149,-4.405219,4.540426,-8.296521,-0.394413,2.300001,6.503008,2.400852,-3.201231,5.756525,-5.049549,-0.901550,-1.657057,-5.968076,8.479342,-3.375222,-5.413187,8.483242,-0.171398,-1.270845,-4.686938,9.887990,7.370060,9.715971,6.523757,6.036154,6.252014,-7.749021,-8.092004,-6.249123,9.871189,1.539301,1.132873,7.904136,-2.373956,-0.192282,-3.055751,-4.693375,8.649187,3.140435,8.217574,-6.631428,-1.676376,-1.089236,3.336864,-4.227253,1.421324,8.329194,7.754480,9.049950,-2.123551,-1.993262,2.382608,2.430414,-6.466969,1.740285,9.047435,-6.596924,6.562582,5.232352,-9.935644,4.311618,6.955275,-9.867113,7.653991,5.930289,-3.530983,-0.070606,-9.145119,-8.390103,-4.138082,-5.698576,8.155053,9.846350,6.805564,-0.610386,5.090636,-1.461470,-4.510924,0.943934,-8.711454,6.696001,-6.540621,-3.214292,2.376725,2.118415,-8.485235,-0.461333,-9.619732,-1.614508,-0.589189,3.494061,-8.388459,-6.050452,2.006594,4.509817,-8.939562,-4.417347,-1.381837,-6.064506,8.901494,-9.766659,9.286088,2.704413,-1.187272,-3.457727,-5.237757,-2.299739,6.393937,6.060400,-7.739559,-3.194761,-0.336885,7.190099,5.193583,-4.982542,1.023222,-5.087652,4.223416,0.057593,-7.405081,-1.822114,0.174307,9.154004,-4.765751,3.981245,2.323586,5.012760,-4.704126,8.338360,-0.475531,-8.132321,-6.582715,4.621385,4.814046,0.173183,-2.676654,-1.775989,1.395317,-1.466366,0.193862,-8.233695,5.866085,-2.538756,5.051900,6.506248,8.418991,2.760397,-0.385570,-5.747590,5.483427,5.627116,3.681415,-0.716081,-6.320456,-7.503013,-4.020559,-9.263172,6.932716,-6.189272,-1.604779,-4.414914,4.676899,2.114863,-4.685306,9.632008,-5.658887,8.545623,4.152174,-3.611090,-4.378223,8.525068,8.365710,-1.754566,-6.446649,6.775234,-4.873244,-7.762682,-4.070715,-4.044528,0.013161,-1.524751,-9.526671,-2.909604,1.246143,2.377557,3.054016,4.316681,3.929417,7.218947,-9.995206,-1.473779,6.390875,-4.031597,1.088929,-0.958677,0.304813,-9.744289,7.692182,9.384288,9.563215,-7.617158,7.469138,1.731165,-5.160907,-5.841976,-4.835445,6.217817,3.136432,9.234461,-8.106424,-7.352590,-7.385415,-4.304987,5.993633,3.539842,-2.247311,1.294953,1.599285,-4.206389,-7.196084,-2.466779,-0.431983,-7.596115,9.836570,-4.519983,8.366073,5.918798,7.188192,5.116737,6.969217,1.352139,0.098826,3.428616,8.661258,-7.276831,-6.253251,-3.756127,-8.339697,5.566924,-0.152138,-0.872439,-7.318975,-9.627315,6.573934,-9.057419,-8.170791,-4.972564,-2.082941,-9.237930,-6.412941,5.114181,8.540666,3.790351,-3.343756,4.740458,-8.534377,5.730038,-1.281382,-4.411899,2.046716,-4.915673,-5.996176,7.932922,8.428777,-5.721920,-7.804230,-5.071994,-6.315735,-5.268249,-0.501205,1.042383,8.014487,8.913412,-7.874389,2.194944,-2.568741,6.577991,-1.485497,-2.645814,-5.967271,6.064700,-5.553852,-2.156858,7.499825,-5.538978,7.190724,-6.467548,-8.739671,-1.407442,3.792353,-0.660715,7.679221,-6.996499,0.322831,8.408069,-5.700668,-1.648171,5.156542,3.388819,1.646368,-8.314758,3.638535,4.017004,7.845159,4.827513,2.253140,-5.653072,2.200194,7.876045,7.544527,7.499248,2.711131,1.805375,-5.269385,-1.198570,-9.699538,-9.317191,4.680361,8.783715,4.666761,-5.161028,-7.952940,-2.760689,8.793827,-7.706601,-6.798579,-4.612095,-1.264730,-6.937185,-9.552845,-2.397073,-2.833226,6.099740,5.830683,-3.581531,8.552482,4.194312,7.860360,1.625192,4.243658,-0.783477,0.296370,-6.502620,-1.591772,0.711670,4.093463,7.094171,-3.312268,3.909720,4.306751,1.382277,-4.275691,-1.367041,-5.098227,1.774274,-2.846028,2.700016,-3.224991,7.974180,5.876584,-6.394041,-6.968197,-2.703989,-2.267270,-0.594949,1.794627,-8.137134,8.456870,2.266360,-4.961332,9.091178,-5.138868,0.095790,-3.608225,6.933330,2.640194,-7.447611,7.041989,-4.714126,3.406638,0.684576,-7.133529,-2.968562,5.331113,1.097313,-6.346901,-0.268827,-4.152149,-4.394370,-7.341876,-8.916176,1.359163,4.492826,4.279037,-7.629623,6.760461,2.439600,8.099303,2.524547,5.188748,-0.549427,4.767409,7.914425,-6.505301,5.394771,2.980371,-6.790889,-4.055575,-1.463681,-6.699242,-8.844577,-0.647315,5.159553,-3.588370,-5.427029,-6.505072,3.038515,7.719806,1.233263,-0.919120,-3.838009,-5.430787,-8.341510,5.874429,-6.616600,1.884001,7.073359,-7.499920,8.172804,0.260006,-1.898621,7.813530,9.000685,-2.357352,-8.762112,3.345286,5.504262,-3.144152,3.199048,-7.928852,3.903217,-9.421463,8.690998,8.851220,7.018698,0.159178,-2.962104,-5.547990,8.518500,-2.998690,4.855549,9.170672,6.893491,3.092740,0.582643,-4.947801,2.135360,9.278831,0.748063,-4.201883,1.307358,5.984860,-7.644570,7.185255,-5.669802,0.947578,-1.490226,-5.648427,-5.756289,-2.793866,1.055259,-4.363456,5.253364,-2.411722,5.151249,-0.347890,-1.783317,-6.806086,7.618592,-7.703978,-7.858021,2.692238,-1.480575,-4.615551,1.262702,-0.593329,-6.107608,-3.088164,-8.700949,-4.275280,4.593528,-0.249318,-0.784045,-5.652660,8.857546,-3.910024,-9.325542,-6.971535,1.171240,-0.350515,3.728867,-0.399402,9.402432,8.613873,0.030038,5.900268,-6.726777,-0.177054,6.423551,-8.296454,4.447127,-7.999931,3.452349,7.188438,2.888294,8.793920,-8.445355,-8.299383,-7.867991,-8.661991,-0.442757,-8.374114,1.606665,4.430353,9.776835,0.396720,-9.326338,0.244656,-3.957082,0.413171,-2.972368,-7.180895,-6.443909,-1.103106,8.027672,-6.101477,2.879420,-7.680020,6.301714,0.263337,-2.203681,4.953740,-5.726294,-8.057225,3.143060,-0.046917,-1.007036,4.429079,-4.273281,-1.206682,-3.017711,2.786556,7.663703,-8.188373,6.299811,-6.825214,7.541257,3.816539,-3.544662,-6.841821,1.862005,5.760500,-0.091328,-0.969444,-4.520786,-9.671940,0.913535,-9.009136,7.502178,7.150758,-2.131174,-9.843513,9.838675,7.175418,1.230491,-1.266039,9.683116,0.108756,-0.708378,-8.051355,-3.435109,5.019247,-0.641167,-3.344450,-2.658451,-4.149511,4.034873,-9.551969,-0.431027,-4.275956,-4.597451,-6.553388,-0.883717,5.650578,2.179712,-8.308713,-4.471631,3.609947,3.728530,-7.938621,8.414849,9.736310,-1.120857,-9.872224,6.321033,-8.389635,5.317948,2.488468,-3.681762,-4.926955,-0.721880,6.894991,-7.747998,9.416601,4.458883,3.887986,8.526283,4.690897,7.722787,-5.960095,3.340152,-4.737172,-2.801990,-8.996089,-6.024770,-3.611960,8.915140,2.757550,7.854720,-5.604834,-5.400802,7.831719,-2.947564,1.036974,-4.020428,-2.826020,0.913719,-2.371198,2.597353,-0.220401,9.946300,-3.194862,1.127950,-7.558665,0.530451,8.670416,8.940073,4.590045,2.356300,8.418492,-9.331703,8.949318,-3.391649,8.158847,1.620745,5.900194,8.968013,9.326748,4.397308,5.153438,-5.209112,-2.046663,2.565879,6.927588,9.102963,3.934153,4.979514,3.091305,-9.778690,6.378174,-7.249674,0.037850,-4.670879,-8.450973,-6.207426,-9.244154,-5.679632,-5.183374,-8.315348,4.115623,-3.673377,-6.880327,9.124117,7.969413,-9.807830,5.654709,6.833091,-9.470210,-0.998999,3.389242,-0.582453,1.960502,0.301864,1.755466,-9.589188,2.130318,7.079106,-6.818159,8.521575,-1.723549,-7.802466,-9.196554,-2.797936,3.981489,-5.098599,-2.058557,4.919647,1.374339,4.718004,-0.813025,3.611337,1.078970,8.461253,-1.627032,6.907380,0.077854,-0.374250,-2.847476,-1.008574,7.958475,-4.996955,-0.553908,-5.380052,-1.818669,-4.771440,9.603254,-7.981455,-6.268571,-6.400432,-0.879870,3.812595,1.403747,-5.215642,9.950668,2.545287,5.259741,-1.923619,0.204578,8.152687,-6.900443,6.227731,-0.093583,-5.059201,6.820269,1.296533,5.601669,5.466513,-0.513377,-6.197979,0.963295,3.654727,3.608742,-2.189618,-7.656190,2.655111,1.326418,-9.633232,-5.730563,-2.206629,2.272574,-1.077830,-2.574527,3.072009,5.426134,-7.348372,9.131886,8.593403,9.785710,-4.734793,3.118166,3.681583,-9.153373,-6.881757,-8.674052,-2.928638,-2.032973,-4.058617,9.563309,-4.648942,7.117134,3.967424,-1.295143,-1.027810,-8.058609,5.833522,-7.679930,-3.887950,-3.891947,9.970929,3.257511,-9.329033,-1.830197,-7.726085,-5.518950,-3.571163,-9.845779,-8.035885,-0.931818,-8.726090,3.124308,1.696084,-0.582949,-1.300000,-8.261357,-8.689163,-8.751766,-9.237190,8.060848,-8.165049,7.460372,-2.190041,-7.150106,-1.729685,6.037386,4.498418,-5.920573,-5.244950,-9.739288,8.846326,-5.497732,-0.229314,-8.757424,-8.698862,3.052093,7.761648,7.341405,-8.460903,-6.046141,1.014189,-6.082283,2.252507,4.275420,5.328405,-7.928593,-2.199827,-2.392706,4.468976,5.215711,9.315607,-5.409898,4.379377,-2.809355,6.747278,-1.054083,-0.643934,5.184140,2.606829,4.192624,-0.672920,9.685776,-4.177586,3.809527,-1.330790,4.207417,-1.860211,-8.940258,-1.788044,5.320286,-1.038210,-0.989091,-2.055863,-9.879221,-9.785830,0.138446,1.474490,9.846722,-0.446924,-3.979156,-7.021757,-0.080794,5.014065,-4.565521,3.319677,-7.235588,-4.904849,-2.612175,-2.385633,-7.344596,-7.433056,-8.710986,0.779861,-7.088616,-6.811360,-0.347518,-0.987138,0.933902,-1.831117,0.804057,-1.907914,2.216366,-9.365409,5.245522,-4.676596,6.963635,5.199269,-0.385257,-5.738303,5.540297,9.824547,6.357513,-5.109878,-4.978206,-5.665652,2.763891,2.171915,1.715931,-5.690279,-9.012022,9.900126,-0.687708,9.390869,1.612637,9.850210,8.935256,-4.058620,-5.583227,5.332276,1.328358,4.940365,-6.196533,3.538754,-7.867060,4.712323,-3.537884,0.609219,9.861341,-0.381689,-0.168371,7.865987,-6.613882,-8.913760,9.824283,2.020315,8.202733,5.716495,7.070867,-0.055588,-4.531371,1.506498,-8.695734,0.477859,6.217279,-9.200267,6.582734,0.895960,6.787731,6.771550,-3.522447,-1.184402,6.888443,1.392469,-5.058859,-1.878570,6.954009,-3.095409,-8.901567,-4.558733,7.983784,7.933225,-9.461280,-3.595300,-0.905592,-3.318497,1.940508,1.557985,-3.150269,6.889636,-7.329560,-5.956839,4.680795,6.703211,-5.043871,-8.394697,-7.115989,9.420854,-9.311996,-2.043010,1.497438,8.160423,6.234899,7.567847,-1.742655,8.737524,-8.320047,-0.114548], dtype = "float32")#candidate|17897|(1210,)|const|float32
call_17896 = relay.TupleGetItem(func_1350_call(relay.reshape(const_17897.astype('float32'), [1210,])), 2)
call_17898 = relay.TupleGetItem(func_1352_call(relay.reshape(const_17897.astype('float32'), [1210,])), 2)
output = relay.Tuple([call_17864,call_17867,const_17868,call_17888,call_17896,const_17897,])
output2 = relay.Tuple([call_17865,call_17869,const_17868,call_17889,call_17898,const_17897,])
func_17907 = relay.Function([], output)
mod['func_17907'] = func_17907
mod = relay.transform.InferType()(mod)
output = func_17907()
func_17908 = relay.Function([], output)
mutated_mod['func_17908'] = func_17908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10023_call = mod.get_global_var('func_10023')
func_10025_call = mutated_mod.get_global_var('func_10025')
call_17926 = relay.TupleGetItem(func_10023_call(), 0)
call_17927 = relay.TupleGetItem(func_10025_call(), 0)
output = relay.Tuple([call_17926,])
output2 = relay.Tuple([call_17927,])
func_17956 = relay.Function([], output)
mod['func_17956'] = func_17956
mod = relay.transform.InferType()(mod)
output = func_17956()
func_17957 = relay.Function([], output)
mutated_mod['func_17957'] = func_17957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13940_call = mod.get_global_var('func_13940')
func_13942_call = mutated_mod.get_global_var('func_13942')
call_17961 = relay.TupleGetItem(func_13940_call(), 0)
call_17962 = relay.TupleGetItem(func_13942_call(), 0)
output = relay.Tuple([call_17961,])
output2 = relay.Tuple([call_17962,])
func_17964 = relay.Function([], output)
mod['func_17964'] = func_17964
mod = relay.transform.InferType()(mod)
output = func_17964()
func_17965 = relay.Function([], output)
mutated_mod['func_17965'] = func_17965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14016_call = mod.get_global_var('func_14016')
func_14018_call = mutated_mod.get_global_var('func_14018')
call_17989 = func_14016_call()
call_17990 = func_14016_call()
output = relay.Tuple([call_17989,])
output2 = relay.Tuple([call_17990,])
func_18005 = relay.Function([], output)
mod['func_18005'] = func_18005
mod = relay.transform.InferType()(mod)
mutated_mod['func_18005'] = func_18005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18005_call = mutated_mod.get_global_var('func_18005')
call_18006 = func_18005_call()
output = call_18006
func_18007 = relay.Function([], output)
mutated_mod['func_18007'] = func_18007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11560_call = mod.get_global_var('func_11560')
func_11562_call = mutated_mod.get_global_var('func_11562')
call_18044 = relay.TupleGetItem(func_11560_call(), 0)
call_18045 = relay.TupleGetItem(func_11562_call(), 0)
func_5016_call = mod.get_global_var('func_5016')
func_5018_call = mutated_mod.get_global_var('func_5018')
var_18049 = relay.var("var_18049", dtype = "bool", shape = (675,))#candidate|18049|(675,)|var|bool
call_18048 = relay.TupleGetItem(func_5016_call(relay.reshape(var_18049.astype('bool'), [675,])), 2)
call_18050 = relay.TupleGetItem(func_5018_call(relay.reshape(var_18049.astype('bool'), [675,])), 2)
func_13677_call = mod.get_global_var('func_13677')
func_13679_call = mutated_mod.get_global_var('func_13679')
call_18053 = relay.TupleGetItem(func_13677_call(), 1)
call_18054 = relay.TupleGetItem(func_13679_call(), 1)
func_7610_call = mod.get_global_var('func_7610')
func_7612_call = mutated_mod.get_global_var('func_7612')
call_18058 = func_7610_call()
call_18059 = func_7610_call()
func_11295_call = mod.get_global_var('func_11295')
func_11298_call = mutated_mod.get_global_var('func_11298')
const_18063 = relay.const([[True,False,False,False,True,True,True,True],[False,True,True,False,True,False,True,False],[False,True,False,True,False,False,False,False],[False,True,False,True,False,False,False,True],[False,True,True,False,False,False,True,False],[True,False,True,False,True,False,False,True],[True,True,True,False,True,True,False,True],[False,True,True,False,True,True,True,True],[False,False,True,False,False,True,True,False],[True,False,False,False,False,True,False,True],[False,True,True,True,False,False,True,False],[True,False,True,False,True,False,True,False],[True,True,False,True,False,True,True,True],[True,False,False,True,True,False,True,True],[True,False,False,True,False,True,True,True],[True,False,True,True,True,True,True,False],[False,True,True,False,True,True,True,False],[True,True,False,False,True,True,True,False],[True,True,True,False,True,True,True,False],[True,True,True,False,False,False,False,False],[False,False,False,True,True,True,True,False],[True,True,False,False,False,True,True,False],[False,False,False,True,True,True,False,True],[False,True,True,False,False,False,False,False],[False,False,True,True,False,False,True,True],[False,True,True,False,False,False,False,False],[True,False,False,False,False,False,True,False],[True,True,True,True,True,True,True,True],[False,False,False,False,True,True,True,True],[False,False,True,False,True,False,False,False],[False,False,False,False,False,False,True,False],[True,False,True,False,True,True,True,True],[True,True,True,False,False,False,True,False],[True,True,False,False,True,False,False,True],[True,False,False,True,False,True,True,True],[True,True,True,False,False,False,False,True],[True,True,False,True,False,True,True,True],[False,True,True,True,False,True,True,True],[True,True,False,False,False,False,True,True],[True,True,True,True,True,True,False,True],[True,False,False,True,False,False,False,False],[True,True,False,True,False,True,False,True],[False,True,True,False,True,True,True,False],[False,False,True,True,False,True,False,True],[False,True,False,False,True,False,False,False],[True,False,False,True,True,False,False,True],[True,False,True,False,True,False,False,True],[True,True,False,True,True,True,False,True],[False,False,True,True,False,True,True,True],[False,True,False,True,False,False,True,True],[False,False,False,True,True,False,False,False],[False,True,True,True,False,True,False,False],[True,True,True,True,False,False,False,False],[False,False,False,False,False,True,True,True],[True,True,False,False,False,True,False,False],[False,True,True,False,False,True,False,True],[False,True,False,False,True,False,True,True],[False,True,True,True,False,True,False,True],[False,False,False,False,True,False,False,True],[False,True,True,False,False,True,False,False],[False,False,True,False,True,False,True,True],[True,True,False,True,False,False,False,False],[True,False,True,False,True,True,False,True],[True,True,True,True,True,True,False,True],[False,True,True,True,True,True,False,False],[False,True,True,False,True,True,False,False],[False,True,True,True,True,True,False,False],[False,True,True,True,True,True,True,True],[False,False,False,True,True,False,True,True],[True,False,True,True,False,False,True,False],[True,False,True,False,True,True,False,False],[False,False,True,True,True,False,False,False],[True,False,True,False,True,True,False,False],[True,True,True,True,True,True,True,True],[True,False,True,True,True,False,True,False],[False,False,True,True,True,False,True,False],[False,True,False,True,False,False,False,True],[False,True,True,True,False,False,False,False],[True,False,True,False,False,False,False,False],[False,False,True,True,False,True,True,False],[False,False,False,False,False,False,True,False],[True,False,False,False,True,False,False,False],[False,True,False,False,True,True,False,True],[True,False,True,True,True,False,True,True],[False,True,True,True,True,False,True,True],[True,True,True,False,False,True,False,False],[False,False,True,True,True,True,False,False],[True,True,True,False,False,True,True,False],[False,False,True,False,True,True,True,False],[False,False,False,False,True,False,True,True],[False,False,False,False,True,False,False,True],[False,False,True,False,True,True,False,True],[True,False,True,False,True,False,False,True],[False,False,False,True,False,True,False,True],[True,False,True,False,True,True,True,True],[True,True,True,False,False,True,False,True],[True,True,False,False,False,False,False,False],[True,False,False,True,True,False,False,False],[True,True,False,False,True,False,True,False],[True,False,True,True,True,True,False,True],[False,False,True,False,True,True,True,False],[True,True,True,False,True,False,False,False],[True,True,False,False,True,True,True,False],[True,False,True,True,True,True,False,True],[False,True,False,True,True,True,True,False],[False,False,True,True,False,True,False,False],[False,False,False,True,False,True,True,True],[True,False,False,False,False,False,False,False],[False,False,True,True,True,False,True,True],[False,False,False,True,False,False,True,False],[True,True,False,True,True,True,False,False],[False,True,True,False,True,True,False,True],[True,True,False,False,True,False,True,True],[False,True,False,False,False,True,True,True],[True,True,False,False,False,False,False,False],[True,True,False,True,False,False,False,True],[True,True,True,False,True,False,False,True],[False,False,False,False,False,True,True,True],[False,True,True,False,True,True,True,True],[True,True,False,True,False,False,True,True],[True,False,False,False,True,False,False,True],[False,False,True,False,True,False,True,True],[True,False,True,False,False,False,True,True],[False,True,False,False,False,True,True,True],[False,True,False,True,True,False,False,False],[False,True,False,True,True,False,False,False],[False,True,False,False,False,False,True,False],[True,False,False,True,True,True,True,True],[True,True,False,False,True,False,False,True],[True,True,False,False,True,False,False,True],[True,True,False,True,True,True,True,False],[True,True,False,True,True,True,False,False],[False,True,False,True,True,True,False,True],[False,False,True,True,False,False,False,True],[True,False,True,False,False,False,False,True],[False,False,False,True,True,True,True,True],[False,True,False,True,False,False,False,False],[False,False,True,False,False,False,False,True],[False,True,True,False,True,True,False,True],[False,False,False,True,True,True,True,True],[True,True,True,True,False,True,False,False],[True,True,True,True,True,True,False,False],[False,True,False,True,True,False,True,True],[True,True,False,False,True,True,False,False],[True,True,True,True,False,True,True,False],[True,False,True,False,True,False,False,True],[True,True,True,False,True,False,True,False],[True,False,True,False,True,True,False,False],[False,False,True,False,True,True,False,False],[True,False,True,True,False,True,False,True],[False,True,False,False,True,True,False,True],[True,True,True,True,False,False,True,False],[False,True,True,True,False,True,False,True],[True,True,False,True,False,True,True,True],[False,True,True,False,False,True,True,False],[True,False,True,True,False,False,False,False],[True,True,False,True,False,False,True,False],[True,True,True,True,False,False,False,True],[True,True,True,False,True,False,False,False],[False,True,True,True,True,True,True,True],[False,True,False,True,True,True,True,False],[True,False,False,True,True,False,False,False],[False,True,False,True,True,False,True,False],[True,False,True,True,False,False,False,False],[False,False,True,True,False,False,False,True],[True,False,False,False,False,True,False,False],[False,True,True,False,True,False,False,True],[True,True,False,True,True,False,True,True],[False,True,True,False,True,True,True,False],[True,False,False,True,True,True,False,True],[False,True,True,True,False,True,False,True],[False,False,False,False,False,True,True,True],[False,False,True,False,True,True,False,False],[True,True,False,False,False,False,True,False],[True,True,True,True,False,False,False,True],[False,False,True,True,False,False,False,False],[True,True,False,False,False,True,True,True],[False,True,True,False,True,True,False,False],[False,True,False,False,True,False,True,False],[True,False,True,True,True,True,True,False],[False,False,False,True,True,True,False,True],[False,False,True,True,True,True,False,True],[False,False,True,False,False,True,False,True],[True,True,False,False,False,False,False,False],[False,True,True,True,False,False,False,True],[False,True,False,True,False,False,False,False],[False,True,False,True,False,False,False,False],[True,True,False,True,True,True,False,True],[False,True,False,False,True,False,True,True],[True,False,False,True,False,False,True,True],[False,False,False,False,False,False,False,False],[True,True,True,False,False,True,True,False],[True,True,False,False,True,False,False,False],[False,False,True,False,True,True,True,True],[True,True,True,True,False,False,True,True],[True,True,False,True,False,True,True,True],[True,True,False,False,True,False,True,True],[False,False,False,True,True,True,False,False],[True,False,False,True,False,True,False,True],[False,False,False,True,False,True,False,True],[False,False,True,False,False,False,True,True],[True,True,False,False,True,True,True,False],[True,True,True,True,False,True,False,True],[False,False,False,False,True,False,True,True],[True,False,True,True,True,True,False,False],[False,True,False,True,False,True,True,True],[False,False,False,True,False,False,False,False],[False,False,False,True,False,True,False,True],[True,False,True,False,True,True,False,True],[False,True,True,False,False,False,True,True],[True,True,False,True,True,False,True,True],[False,True,False,False,False,True,False,True],[True,True,False,False,False,False,True,True],[True,False,True,False,True,True,True,False],[False,True,True,False,True,False,True,True],[True,False,True,True,True,True,False,False],[False,False,False,True,True,True,False,False],[False,True,False,True,False,True,True,True],[False,False,True,True,False,False,False,True],[False,False,False,True,True,False,True,False],[True,True,True,False,True,True,False,True],[False,True,False,True,False,True,False,True],[True,True,False,True,True,True,False,False],[True,False,True,False,False,True,False,True],[False,True,True,True,False,False,False,True],[True,False,False,True,True,False,False,False],[True,True,True,False,False,True,False,True],[True,False,True,False,True,False,True,True],[True,True,True,False,True,True,True,False],[False,True,True,True,True,False,False,False],[True,True,False,True,True,True,False,False],[True,True,False,False,True,False,True,True],[True,False,True,False,False,False,False,False],[True,True,True,False,True,True,False,False],[True,False,True,False,True,True,False,False],[True,True,False,False,True,False,True,False],[False,False,False,False,False,False,False,True],[True,False,True,True,True,True,True,False],[False,True,False,True,False,True,False,True],[False,False,False,True,False,True,True,True],[False,True,True,False,True,False,False,False],[False,True,True,True,True,True,False,True],[False,False,False,False,True,False,False,True],[True,False,False,True,True,True,False,True],[False,False,False,True,False,False,False,False],[True,True,True,False,False,True,True,False],[False,False,True,True,False,True,True,True],[True,True,True,False,True,True,False,True],[True,False,True,True,False,True,True,True],[False,True,False,True,False,True,True,False],[True,False,False,False,True,True,True,False],[False,False,True,True,False,True,True,True],[True,False,True,True,True,False,False,True],[True,False,False,False,False,False,False,True],[False,False,True,False,True,True,False,False],[True,True,True,True,False,False,True,True],[False,False,False,True,False,True,True,False],[True,True,False,True,True,False,True,False],[True,False,False,False,True,False,False,True],[False,False,False,False,False,True,False,True],[True,False,False,False,True,True,False,True],[True,False,False,False,False,True,False,True],[False,False,False,True,True,False,False,True],[False,True,True,True,False,True,False,False]], dtype = "bool")#candidate|18063|(264, 8)|const|bool
call_18062 = relay.TupleGetItem(func_11295_call(relay.reshape(const_18063.astype('bool'), [2112,])), 5)
call_18064 = relay.TupleGetItem(func_11298_call(relay.reshape(const_18063.astype('bool'), [2112,])), 5)
output = relay.Tuple([call_18044,call_18048,var_18049,call_18053,call_18058,call_18062,const_18063,])
output2 = relay.Tuple([call_18045,call_18050,var_18049,call_18054,call_18059,call_18064,const_18063,])
func_18074 = relay.Function([var_18049,], output)
mod['func_18074'] = func_18074
mod = relay.transform.InferType()(mod)
mutated_mod['func_18074'] = func_18074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_18075 = relay.var("var_18075", dtype = "bool", shape = (675,))#candidate|18075|(675,)|var|bool
func_18074_call = mutated_mod.get_global_var('func_18074')
call_18076 = func_18074_call(var_18075)
output = call_18076
func_18077 = relay.Function([var_18075], output)
mutated_mod['func_18077'] = func_18077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5544_call = mod.get_global_var('func_5544')
func_5545_call = mutated_mod.get_global_var('func_5545')
call_18186 = relay.TupleGetItem(func_5544_call(), 1)
call_18187 = relay.TupleGetItem(func_5545_call(), 1)
output = call_18186
output2 = call_18187
func_18197 = relay.Function([], output)
mod['func_18197'] = func_18197
mod = relay.transform.InferType()(mod)
mutated_mod['func_18197'] = func_18197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18197_call = mutated_mod.get_global_var('func_18197')
call_18198 = func_18197_call()
output = call_18198
func_18199 = relay.Function([], output)
mutated_mod['func_18199'] = func_18199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9121_call = mod.get_global_var('func_9121')
func_9122_call = mutated_mod.get_global_var('func_9122')
call_18252 = relay.TupleGetItem(func_9121_call(), 0)
call_18253 = relay.TupleGetItem(func_9122_call(), 0)
func_6891_call = mod.get_global_var('func_6891')
func_6893_call = mutated_mod.get_global_var('func_6893')
call_18257 = relay.TupleGetItem(func_6891_call(), 0)
call_18258 = relay.TupleGetItem(func_6893_call(), 0)
func_17139_call = mod.get_global_var('func_17139')
func_17141_call = mutated_mod.get_global_var('func_17141')
call_18270 = relay.TupleGetItem(func_17139_call(), 0)
call_18271 = relay.TupleGetItem(func_17141_call(), 0)
func_8895_call = mod.get_global_var('func_8895')
func_8896_call = mutated_mod.get_global_var('func_8896')
call_18273 = relay.TupleGetItem(func_8895_call(), 1)
call_18274 = relay.TupleGetItem(func_8896_call(), 1)
output = relay.Tuple([call_18252,call_18257,call_18270,call_18273,])
output2 = relay.Tuple([call_18253,call_18258,call_18271,call_18274,])
func_18331 = relay.Function([], output)
mod['func_18331'] = func_18331
mod = relay.transform.InferType()(mod)
output = func_18331()
func_18332 = relay.Function([], output)
mutated_mod['func_18332'] = func_18332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17062_call = mod.get_global_var('func_17062')
func_17064_call = mutated_mod.get_global_var('func_17064')
call_18336 = relay.TupleGetItem(func_17062_call(), 0)
call_18337 = relay.TupleGetItem(func_17064_call(), 0)
output = call_18336
output2 = call_18337
func_18387 = relay.Function([], output)
mod['func_18387'] = func_18387
mod = relay.transform.InferType()(mod)
mutated_mod['func_18387'] = func_18387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18387_call = mutated_mod.get_global_var('func_18387')
call_18388 = func_18387_call()
output = call_18388
func_18389 = relay.Function([], output)
mutated_mod['func_18389'] = func_18389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6485_call = mod.get_global_var('func_6485')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_18415 = relay.TupleGetItem(func_6485_call(), 0)
call_18416 = relay.TupleGetItem(func_6487_call(), 0)
func_7964_call = mod.get_global_var('func_7964')
func_7966_call = mutated_mod.get_global_var('func_7966')
call_18417 = relay.TupleGetItem(func_7964_call(), 0)
call_18418 = relay.TupleGetItem(func_7966_call(), 0)
func_7369_call = mod.get_global_var('func_7369')
func_7371_call = mutated_mod.get_global_var('func_7371')
call_18427 = relay.TupleGetItem(func_7369_call(), 0)
call_18428 = relay.TupleGetItem(func_7371_call(), 0)
output = relay.Tuple([call_18415,call_18417,call_18427,])
output2 = relay.Tuple([call_18416,call_18418,call_18428,])
func_18432 = relay.Function([], output)
mod['func_18432'] = func_18432
mod = relay.transform.InferType()(mod)
mutated_mod['func_18432'] = func_18432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18432_call = mutated_mod.get_global_var('func_18432')
call_18433 = func_18432_call()
output = call_18433
func_18434 = relay.Function([], output)
mutated_mod['func_18434'] = func_18434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11321_call = mod.get_global_var('func_11321')
func_11323_call = mutated_mod.get_global_var('func_11323')
call_18601 = relay.TupleGetItem(func_11321_call(), 0)
call_18602 = relay.TupleGetItem(func_11323_call(), 0)
output = call_18601
output2 = call_18602
func_18617 = relay.Function([], output)
mod['func_18617'] = func_18617
mod = relay.transform.InferType()(mod)
output = func_18617()
func_18618 = relay.Function([], output)
mutated_mod['func_18618'] = func_18618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16121_call = mod.get_global_var('func_16121')
func_16122_call = mutated_mod.get_global_var('func_16122')
call_18704 = func_16121_call()
call_18705 = func_16121_call()
func_17859_call = mod.get_global_var('func_17859')
func_17861_call = mutated_mod.get_global_var('func_17861')
call_18706 = relay.TupleGetItem(func_17859_call(), 0)
call_18707 = relay.TupleGetItem(func_17861_call(), 0)
output = relay.Tuple([call_18704,call_18706,])
output2 = relay.Tuple([call_18705,call_18707,])
func_18715 = relay.Function([], output)
mod['func_18715'] = func_18715
mod = relay.transform.InferType()(mod)
output = func_18715()
func_18716 = relay.Function([], output)
mutated_mod['func_18716'] = func_18716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15393_call = mod.get_global_var('func_15393')
func_15395_call = mutated_mod.get_global_var('func_15395')
call_18785 = relay.TupleGetItem(func_15393_call(), 1)
call_18786 = relay.TupleGetItem(func_15395_call(), 1)
output = call_18785
output2 = call_18786
func_18787 = relay.Function([], output)
mod['func_18787'] = func_18787
mod = relay.transform.InferType()(mod)
output = func_18787()
func_18788 = relay.Function([], output)
mutated_mod['func_18788'] = func_18788
mutated_mod = relay.transform.InferType()(mutated_mod)
var_18816 = relay.var("var_18816", dtype = "float32", shape = (16, 13, 2))#candidate|18816|(16, 13, 2)|var|float32
uop_18817 = relay.asin(var_18816.astype('float32')) # shape=(16, 13, 2)
output = uop_18817
output2 = uop_18817
func_18819 = relay.Function([var_18816,], output)
mod['func_18819'] = func_18819
mod = relay.transform.InferType()(mod)
var_18820 = relay.var("var_18820", dtype = "float32", shape = (16, 13, 2))#candidate|18820|(16, 13, 2)|var|float32
output = func_18819(var_18820)
func_18821 = relay.Function([var_18820], output)
mutated_mod['func_18821'] = func_18821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7409_call = mod.get_global_var('func_7409')
func_7411_call = mutated_mod.get_global_var('func_7411')
call_18839 = relay.TupleGetItem(func_7409_call(), 0)
call_18840 = relay.TupleGetItem(func_7411_call(), 0)
output = relay.Tuple([call_18839,])
output2 = relay.Tuple([call_18840,])
func_18856 = relay.Function([], output)
mod['func_18856'] = func_18856
mod = relay.transform.InferType()(mod)
output = func_18856()
func_18857 = relay.Function([], output)
mutated_mod['func_18857'] = func_18857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15437_call = mod.get_global_var('func_15437')
func_15438_call = mutated_mod.get_global_var('func_15438')
call_18889 = relay.TupleGetItem(func_15437_call(), 0)
call_18890 = relay.TupleGetItem(func_15438_call(), 0)
func_17450_call = mod.get_global_var('func_17450')
func_17452_call = mutated_mod.get_global_var('func_17452')
call_18891 = relay.TupleGetItem(func_17450_call(), 0)
call_18892 = relay.TupleGetItem(func_17452_call(), 0)
output = relay.Tuple([call_18889,call_18891,])
output2 = relay.Tuple([call_18890,call_18892,])
func_18929 = relay.Function([], output)
mod['func_18929'] = func_18929
mod = relay.transform.InferType()(mod)
mutated_mod['func_18929'] = func_18929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18929_call = mutated_mod.get_global_var('func_18929')
call_18930 = func_18929_call()
output = call_18930
func_18931 = relay.Function([], output)
mutated_mod['func_18931'] = func_18931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13191_call = mod.get_global_var('func_13191')
func_13192_call = mutated_mod.get_global_var('func_13192')
call_18948 = relay.TupleGetItem(func_13191_call(), 0)
call_18949 = relay.TupleGetItem(func_13192_call(), 0)
output = relay.Tuple([call_18948,])
output2 = relay.Tuple([call_18949,])
func_18975 = relay.Function([], output)
mod['func_18975'] = func_18975
mod = relay.transform.InferType()(mod)
mutated_mod['func_18975'] = func_18975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18975_call = mutated_mod.get_global_var('func_18975')
call_18976 = func_18975_call()
output = call_18976
func_18977 = relay.Function([], output)
mutated_mod['func_18977'] = func_18977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_19033 = relay.TupleGetItem(func_4625_call(), 1)
call_19034 = relay.TupleGetItem(func_4626_call(), 1)
func_6485_call = mod.get_global_var('func_6485')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_19040 = relay.TupleGetItem(func_6485_call(), 0)
call_19041 = relay.TupleGetItem(func_6487_call(), 0)
func_12485_call = mod.get_global_var('func_12485')
func_12487_call = mutated_mod.get_global_var('func_12487')
call_19044 = relay.TupleGetItem(func_12485_call(), 0)
call_19045 = relay.TupleGetItem(func_12487_call(), 0)
output = relay.Tuple([call_19033,call_19040,call_19044,])
output2 = relay.Tuple([call_19034,call_19041,call_19045,])
func_19047 = relay.Function([], output)
mod['func_19047'] = func_19047
mod = relay.transform.InferType()(mod)
mutated_mod['func_19047'] = func_19047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19047_call = mutated_mod.get_global_var('func_19047')
call_19048 = func_19047_call()
output = call_19048
func_19049 = relay.Function([], output)
mutated_mod['func_19049'] = func_19049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8702_call = mod.get_global_var('func_8702')
func_8703_call = mutated_mod.get_global_var('func_8703')
call_19111 = relay.TupleGetItem(func_8702_call(), 0)
call_19112 = relay.TupleGetItem(func_8703_call(), 0)
output = call_19111
output2 = call_19112
func_19117 = relay.Function([], output)
mod['func_19117'] = func_19117
mod = relay.transform.InferType()(mod)
mutated_mod['func_19117'] = func_19117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19117_call = mutated_mod.get_global_var('func_19117')
call_19118 = func_19117_call()
output = call_19118
func_19119 = relay.Function([], output)
mutated_mod['func_19119'] = func_19119
mutated_mod = relay.transform.InferType()(mutated_mod)
const_19229 = relay.const([[[2.694252,8.944563,1.454173,-4.996635,-3.512996,-2.405179],[0.751219,-4.307029,9.250961,3.671339,-4.433026,-0.738224],[7.527414,-4.501398,9.883622,9.197551,8.240748,4.603075],[-2.068760,-3.801711,5.484274,3.762972,3.637666,9.453098],[0.814206,2.409690,-4.991947,5.649416,2.270227,8.584862],[-6.239433,6.236554,0.149266,-2.257272,-0.620812,-9.837636]],[[-0.938341,-8.001650,-4.514878,-8.248657,3.739571,6.890656],[4.877477,8.375743,-6.184913,8.897878,-8.218796,8.636609],[-8.626767,5.946558,-3.819480,-2.011544,8.555321,-9.694276],[2.530431,4.046270,-3.961774,-6.245908,-7.693245,-1.437327],[9.722675,3.302274,-2.143522,7.136427,-8.145444,-3.206853],[3.120934,0.292325,2.045759,-6.827538,-8.570114,2.583091]],[[-7.109541,2.142553,-3.440052,-9.858344,8.058215,1.347493],[-1.415092,-3.173137,2.263831,1.407770,-3.881234,1.461071],[-0.889426,-0.858236,-7.061570,6.113350,5.287083,3.325455],[6.421648,6.442461,2.224429,-3.199534,-9.422073,-1.133383],[6.172648,-0.117785,8.784373,-2.690240,8.568359,-6.741671],[-9.660523,-7.424505,-6.578877,9.972905,6.019249,7.538615]]], dtype = "float64")#candidate|19229|(3, 6, 6)|const|float64
var_19230 = relay.var("var_19230", dtype = "float64", shape = (3, 6, 6))#candidate|19230|(3, 6, 6)|var|float64
bop_19231 = relay.not_equal(const_19229.astype('bool'), relay.reshape(var_19230.astype('bool'), relay.shape_of(const_19229))) # shape=(3, 6, 6)
bop_19236 = relay.minimum(bop_19231.astype('uint8'), relay.reshape(var_19230.astype('uint8'), relay.shape_of(bop_19231))) # shape=(3, 6, 6)
func_11466_call = mod.get_global_var('func_11466')
func_11469_call = mutated_mod.get_global_var('func_11469')
var_19252 = relay.var("var_19252", dtype = "float64", shape = (40, 1))#candidate|19252|(40, 1)|var|float64
var_19253 = relay.var("var_19253", dtype = "float64", shape = (120,))#candidate|19253|(120,)|var|float64
call_19251 = func_11466_call(relay.reshape(var_19252.astype('float64'), [1, 8, 5]), relay.reshape(var_19253.astype('float64'), [3, 8, 5]), )
call_19254 = func_11466_call(relay.reshape(var_19252.astype('float64'), [1, 8, 5]), relay.reshape(var_19253.astype('float64'), [3, 8, 5]), )
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
const_19259 = relay.const([[-8.377131,-9.745841,-3.033691,-2.597101,5.450814,-0.688637,1.777742,8.699294,-0.889967,4.753327,5.619080,3.186830,5.283100,-7.826764,2.401737,4.189455,-6.286425,7.378378,2.670020,-1.391750,-3.141657,4.275630,0.020357,1.983190,-6.864340,-9.629861,-4.627327,-2.432296,-3.823167,-9.563895,-5.547300,0.374312,6.536759,2.799331,-2.391261,4.751784,-3.006795,9.320926,4.471053,-3.565208,4.135134,4.166869,-3.583291,0.191349,-0.579559,-9.680617,8.282366,2.660888,-7.026343,-0.441119,2.036603,0.465906,-5.818323,0.994969,-3.058142,1.798068,-8.316758,4.129402,-8.880929,5.966419,-7.553727,7.563983,-0.408511,-2.964559,5.911566,6.607840,-8.551048,1.896348,1.582648,-7.855903,-6.907191,8.252142,-5.206166,0.955203,5.272670,-4.077746,-0.447773,-3.525270,-7.002179,-1.028293,2.890075,-2.174083,-0.781860,-3.222091,1.105807,1.995828,-7.946899,-1.988157,-6.824483,9.755714,5.350696,7.947018,-3.783239,-8.448970,4.677201,-9.936201,-4.183260,-4.897140,-0.434168,1.338129,-3.684725,5.120501,3.186271,7.542614,3.519328,-8.236858,-1.658690,1.419927,4.648431,-6.358255,-5.327670,6.500917,4.916598,5.146611,-8.725214,2.101463,-1.237805,1.035191,5.117886,5.808623,5.762010,6.416281,2.432733,-6.116932,-3.056431,1.389857,-0.235561,1.490235,6.475786,2.283321,7.972499,-5.732221,-9.620153,-1.458634,-8.599725,-2.053834,5.998006,-5.986608,-0.726243,7.155357,9.489266,3.253609,1.510441,9.856969,-9.755072,-1.006805,-0.653503,3.775566,-7.175048,-9.938134,0.474295,-9.320548,-9.418795,7.115415,-3.228871,6.802774,-3.597335,5.103780,8.652755,-6.974193,9.506931,-8.084537,7.575166,-4.377857,2.491760,-1.582027,-7.056814,1.055746,7.958272,0.281170,1.355311,0.434807,-3.150914,9.508467,-6.781846,5.852293,-8.311488,1.273307,6.355566,7.096681,-7.854022,4.372661,-2.219597,4.287142,2.425141,3.416131,0.370673,-3.580122,7.617831,5.492485,8.431229,-9.045841,-8.389122,6.986452,1.798895,-6.185923,2.177276,-4.068829,-3.025110,8.772920,1.582419,-8.977223,-5.421979,-2.068443,-4.772350,3.326307,-1.866985,8.877618,5.312696,-7.997816,7.020982,-9.460469,-3.996801,5.153783,-5.397902,-7.271924,8.819927,-4.474161,-0.614150,-6.363231,-5.747484,-2.409167,0.565495,-1.932888,4.775605,2.271114,7.222728,9.556650,9.894081,6.059114,2.874493,0.418566,-8.467011,-2.150292,-5.798184,-7.507572,-3.985085,4.928658,-1.832056,-2.565875,-0.022627,3.288109,6.946466,0.125315,3.499904,-1.714309,-7.217465,1.644745,8.239044,1.941318,-3.037900,4.157155,2.607049,-7.360247,-4.312893,5.717782,9.197703,-0.879512,2.667396,4.532050,-6.090203,2.842882,5.419275,-0.143635,1.360668,-9.686255,0.319319,-8.911709,-0.197348,-6.408082,-1.431408,5.599920,-2.021249,-1.978829,0.087685,-8.238137,-8.070555,-3.641101,3.956979,-5.847389,6.638342,-8.438639,-6.476895,6.923008,-7.571323,2.647824,1.810097,-7.360373,9.311822,0.184054,-9.244892,-9.317109,1.011317,-7.952410,8.503773,7.767851,1.522956,1.420927,9.630450,-8.241568,6.389271,-6.289978,-9.065781,-3.136540,8.726817,-6.079428,-1.971051,-1.531619,7.541942,-9.856041,-0.717761,3.096796,4.906879,3.910313,2.666729,-4.955577,-3.943734,0.075475,0.890180,-7.061898,2.441403,-6.080865,2.956314,-4.078575,4.859631,-5.652656,-0.891729,2.838547,-0.426531,-8.076592,-7.377991,-5.439288,9.820294,1.577932,-5.136102,-6.570176,-6.626605,6.235726,0.108714,0.071253,-7.508460,-7.028097,6.394948,-8.880716,2.249442,-7.253965,-0.834966,-9.703732,-7.644758,-0.038562,5.293852,2.566947,-0.382765,9.021217,-6.744094,-1.592548,-9.066384,7.702915,1.268689,-3.574919,6.764389,-1.014849,3.518561,6.864020,7.765079,-3.587806,-5.033724,-4.862994,-1.755218,4.419231,-7.760232,4.590237,-1.360671,3.030569,5.443284,-2.882057,-2.184928,-7.455161,7.088819,4.053958,2.132496,4.644673,9.917171,-5.707077,-1.332193,-8.953263,-9.287363,2.505506,2.606047,-5.482314,-7.287967,1.859423,3.954253,3.769583,2.278318,6.954998,-1.278330,8.204029,1.842261,-3.182521,6.444594,-9.218015,-2.471365,-4.547431,-2.333773,-1.546878,-6.754647,2.987588,5.353958,-3.373273,-9.387594,-8.080995,4.135219,-2.164905,3.515867,-3.284074,-0.077685,-4.166170,-3.922008,-7.188322,7.816003,-5.329199,-8.705560,-6.556798,-3.447205,-6.917959,-2.962137,6.430112,-5.875366,-9.879777,-3.339640,-3.098458,-6.544976,-8.918744,-5.814374,7.444714,5.551304,7.587664,-5.700122,-6.916343,-1.554568,6.788644,6.840061,-8.253578,-5.550497,0.175078,9.870892,1.429540,1.673777,5.695864,-2.876868,3.067475,-1.681521,3.538604,-2.020353,9.628532,2.285325,-0.102359,2.470398,-8.433870,8.723465,7.517670,-2.424736,-1.246333,-7.328940,2.758537,9.180639,-6.929866,0.128415,-8.985463,5.575087,-6.209443,-0.611128,9.366176,-8.595635,7.869681,-4.395067,-4.293605,-5.037401,-6.923772,-2.240602,8.552711,-5.387288,3.251116,-9.434036,-1.173083,5.994145,-6.405059,5.277793,-4.160992,4.767763,2.633633,-4.905124,-2.618216,6.432313,6.540944,-1.393281,6.173278,-3.383842,-6.664606,-9.712132,0.966583,-4.605523,2.420802],[4.019509,0.521894,3.941202,-5.061357,-4.029168,-3.958035,3.650515,-2.716238,1.432589,8.183795,-6.655364,-3.801181,-8.570428,6.585257,7.773831,-8.092186,-8.451390,1.211932,-9.372886,5.518125,5.368140,-8.111076,4.039656,-2.043988,-9.723600,-1.075772,-7.289138,9.913152,-7.564762,9.939086,4.053293,8.062073,3.153077,-9.733815,-9.734015,-9.000852,3.215772,2.908996,0.612305,2.805619,4.547945,2.643480,-0.406423,-4.998367,2.790826,-3.964162,8.026003,-6.635287,3.766696,-6.801304,-1.510246,1.436322,-6.918259,-8.044941,-3.335874,9.413700,5.156741,2.096319,-2.316668,5.127406,2.818263,-0.228527,6.496334,0.077931,8.229126,-4.230015,2.522288,-9.678552,-5.934206,8.766240,-9.891779,-2.569699,2.632446,-7.830431,4.753864,6.457792,8.155117,5.357880,-6.540468,6.205191,2.245147,8.619587,1.718850,-8.406030,-3.578683,0.009644,-7.781429,9.097648,5.662219,2.457688,2.363636,-2.898131,8.101434,0.003616,-8.732178,3.189538,-3.370466,-5.829517,-4.812105,-0.637536,4.476893,-3.145944,4.988254,0.486106,8.745171,-4.677218,-3.516874,5.873853,-6.987289,6.545570,-8.911084,-5.096001,-9.719422,-7.696029,8.979572,0.344453,-4.876529,2.329320,3.733405,8.748746,6.641637,1.014022,-9.700440,4.851943,7.258948,7.608609,-4.724791,1.027289,2.407715,5.174111,-9.027023,1.585727,-0.017271,-2.855336,8.226438,-8.628181,0.709084,-5.970416,9.120265,3.742470,3.373375,-0.307276,-2.209068,-8.821456,6.189981,0.917824,-3.992337,6.478267,4.371028,5.701959,0.732261,5.175492,2.139971,-3.636708,-6.934462,-8.867031,-1.835486,8.348637,-7.430732,-8.809477,0.447514,1.572384,-1.269949,0.062974,-4.861225,0.032899,-8.743672,8.306034,-4.704982,-0.101389,9.124420,-0.372666,7.455718,-0.389221,1.907973,-5.364154,-4.164339,5.920302,-5.115333,-6.014781,5.065185,-9.250204,3.338756,0.627936,3.687253,-0.915321,-3.663268,-4.427885,-2.960875,6.546701,-8.861493,-9.762993,1.800844,3.996434,-3.453074,4.850093,6.511262,-5.068136,8.461973,9.446409,7.550980,6.361384,-3.280456,-4.039037,-5.278765,7.694461,0.667349,-2.259738,7.531754,-9.322340,5.159585,6.216587,3.304280,1.204811,9.947426,4.051069,-3.012427,9.118937,-5.115209,7.477207,0.479588,0.207506,9.444711,-5.669208,-0.167605,-4.796947,-2.292287,-8.727607,5.393203,-4.636324,-9.005916,-5.610054,-3.994475,-0.704136,4.691644,8.396510,-3.364116,2.217093,-4.129933,-3.275416,-8.845642,2.310835,-4.588235,-8.204560,4.686951,-5.571605,-3.712393,4.973239,-4.753841,6.875368,9.458624,0.329994,-7.706364,9.570903,-4.931888,7.093452,9.180194,6.031860,-8.857704,6.302789,-0.736917,-9.638133,-4.067325,3.465072,7.918305,-9.907227,6.573706,-3.904583,-2.091023,1.211792,0.280400,4.024641,3.108801,-5.917719,-2.943520,3.002416,3.237278,2.379010,8.688597,5.427056,-3.429172,-5.878892,9.236035,2.509470,-1.009197,-7.118104,6.931061,-3.707292,-3.405807,-8.482040,9.700541,6.043623,7.231281,-9.710047,5.020978,4.827915,-9.275837,5.976755,-3.697414,1.284394,8.076894,-5.559307,-4.338634,7.416848,7.301446,5.762324,-5.800874,-6.706118,-3.980196,-6.701194,-3.514704,0.747544,2.698393,-8.436602,7.690152,2.637122,5.995257,6.545951,-3.600759,-9.702347,-3.341457,-8.437349,-9.841525,0.023293,-2.232480,-6.150932,9.105769,7.088352,-9.065964,0.924555,9.185481,3.410938,-8.005144,-5.963285,3.708832,1.253929,8.149034,-9.351993,-2.494429,-7.263199,-0.500808,4.717961,-0.272425,-1.582979,-8.609360,-1.941324,-5.671074,-2.027448,-5.682452,-4.824844,0.467890,4.237447,5.256796,-1.905304,8.603934,-0.661343,4.190390,-9.776126,-8.161993,-3.932685,-0.342731,7.963511,-4.155491,1.642454,-3.216419,8.927578,8.775057,-4.933806,-0.475784,-7.374141,6.191866,9.779349,-2.629912,-0.493753,6.424348,0.634421,6.266691,-9.181804,-1.557514,-4.460567,7.913627,-0.146944,7.458876,-9.536350,6.108683,2.794585,3.280008,2.991470,-2.528205,9.622702,1.078673,8.015516,5.848202,-8.287841,-0.922186,-2.222514,-8.803849,-2.027185,-0.336223,-1.554767,-2.201098,-3.781453,-9.534563,0.472781,-1.199514,-1.281013,-6.721441,-8.218763,-5.867872,3.332604,-8.409123,-1.666894,4.814233,-1.624566,3.724133,6.297680,-1.035981,-9.250115,-8.975322,-3.012358,-5.142476,-5.908110,-7.310917,-3.286002,6.109446,1.356307,7.840654,5.803210,3.445736,-4.717020,-1.313845,-2.780678,-7.529810,5.426263,-1.948823,5.975781,9.001564,5.655034,-1.652124,-8.769868,-1.447577,1.128109,7.521865,-2.928722,-7.095983,-7.455189,-8.929278,-6.613384,0.287073,2.219434,6.488930,-2.757540,-3.089980,-0.430969,8.248549,9.668131,1.097930,7.270225,9.623731,7.251011,8.334537,-8.781839,-4.448453,-0.029568,-3.009553,3.777863,-2.199084,-9.072407,-1.467914,2.749817,1.060570,6.367789,-0.483466,-8.270089,-0.194353,4.709605,1.962411,3.795397,-8.169784,2.899427,-5.702006,-0.910895,-4.372913,9.263253,-2.930813,-5.393105,5.957444,-1.793679,-6.469490,3.915424,-2.628378,-8.915860,-9.897041,3.546078,5.575798,-2.629723,6.615997,-5.487526,9.502645,-9.756470,5.495994,-4.998956,-1.850431,-5.856280],[1.779390,7.009465,-2.568481,5.927372,-2.121223,-8.501144,5.290942,1.994510,8.489062,-3.590480,6.405332,-4.212666,5.456744,-8.674624,0.033443,-8.025386,-0.637098,-3.667812,-2.973561,-4.418365,-4.468519,-7.095734,2.742683,9.799323,-4.881658,1.194105,-0.008638,-1.345724,-1.246168,-5.954264,5.163265,-8.291864,-2.304611,-6.583266,-7.400374,6.612115,9.753491,-3.243622,7.056781,-8.698513,2.761489,-7.284589,9.199998,9.991019,6.524165,-2.452236,0.469490,-0.310916,1.271658,-6.248243,8.792182,9.275023,0.087793,1.549013,3.652242,-5.220969,-5.458238,-6.547683,9.686861,2.979239,4.578332,8.077859,5.404243,3.410193,4.152250,-0.307211,6.515894,2.356206,-7.262569,-6.149096,-4.936477,-6.809014,9.522151,7.254824,0.601825,7.554287,-5.424397,7.118364,-5.323038,-7.807519,-5.862594,5.783834,-6.619956,-2.668581,9.432558,-6.901273,-1.244019,-2.759018,-0.937777,-0.559083,8.177634,-3.487376,9.039951,3.823283,-4.379115,1.575952,-1.477033,8.962244,4.387419,6.193515,-4.394128,4.401145,0.779210,-5.455755,7.662569,7.390232,-6.552595,-5.156050,9.394946,5.420470,4.351970,-8.515049,3.987788,3.548749,4.935729,-9.247646,-1.440342,-7.723860,6.162724,2.555817,-0.647625,7.875263,8.497649,-9.015359,2.906304,-6.042486,-5.875619,9.999974,-3.708204,-1.517130,9.333934,7.110187,-7.652183,4.511750,-4.865336,-2.648299,2.271879,4.133614,5.192159,8.103026,-2.054164,-1.853517,-3.213491,-3.977154,-5.747514,3.452970,0.124751,0.468837,-9.182280,-0.343006,-6.642845,0.611058,-0.708276,-5.448442,-8.036006,7.502987,6.742138,6.367703,3.703586,6.750795,9.659991,7.736640,6.779095,-3.313345,-9.818312,3.289357,-7.380679,-0.380747,5.968360,-6.068313,5.912920,-5.120025,2.028746,-1.515534,-4.954723,-8.495109,-9.026518,-6.841828,8.800493,-1.868719,4.080839,-0.099299,-2.921909,2.557511,6.993046,-5.481479,8.951521,0.848181,-4.249048,6.040586,4.371495,-7.015400,5.725932,-1.326318,-8.190888,-1.938858,-0.160825,4.051916,-9.239251,-5.587139,-9.364920,-3.691284,-1.964885,2.122422,2.693823,8.939745,-8.988815,2.867738,-0.091880,-3.957394,-3.632032,0.855565,7.552581,1.447642,2.737682,1.626679,-5.785936,8.715877,-2.679018,-2.313269,0.342224,-1.804152,3.025910,9.134544,0.559274,-7.492303,0.951760,-0.204886,-4.507713,-4.981012,-5.288858,-0.201076,5.403029,7.631454,-7.594729,4.466533,1.652388,6.040137,1.888202,-1.774772,5.183865,-6.442444,-9.858706,7.201721,9.253266,-3.007129,-9.602565,-3.382037,-4.118089,1.247812,9.653413,-4.372153,-0.399606,-5.896246,2.982921,7.458717,8.139755,8.634902,-8.784700,9.828443,-3.848335,7.913815,-1.504164,-5.183897,3.563889,9.848577,-5.012129,1.821380,2.631894,5.006288,7.615810,5.051539,-6.975396,-8.749672,-2.646991,-6.521232,-1.637971,1.895673,-8.667233,2.022625,1.301308,-1.496208,2.930956,-4.503826,6.986051,1.716697,-7.568692,-2.515094,0.163023,-5.357260,-3.119247,-4.995604,-8.767556,8.443051,3.565284,9.286351,5.606948,-1.242114,1.836856,4.266810,-0.563010,1.664185,-0.983984,-0.395157,1.781173,1.149005,3.014923,-6.678662,7.060523,-2.032421,-4.944536,3.223214,-7.442043,-1.315223,-3.652709,-6.330819,-6.999599,-9.096969,0.326128,-7.374350,4.434887,-2.922826,1.162063,-4.144179,-6.267569,8.242617,-6.924638,-2.056051,2.384583,2.607672,4.291990,-6.946662,0.278655,-1.731485,9.694361,4.622090,-6.238159,-7.699652,-9.075777,-9.603601,9.326056,-5.456375,-0.394639,-7.892386,4.526022,1.900160,-3.018818,4.633647,-5.998563,-0.214655,-3.264604,-4.203535,-7.337079,4.415940,-2.357778,3.638160,4.891936,0.463889,7.326420,4.565619,1.050659,7.689077,7.758775,-9.999163,-5.811920,3.096428,-2.810761,5.572424,-4.924745,-4.193474,-7.804242,8.206391,8.784097,3.425085,-1.143872,1.656176,0.304031,2.394679,3.381724,7.400531,0.567044,3.959871,-7.193670,-4.080131,3.203019,8.914024,-7.827679,5.688852,-0.795401,-1.272128,-8.880653,-2.068174,-0.923436,-7.132826,3.768076,8.004230,-1.106072,5.784564,5.186922,-3.448638,-4.335858,-1.215834,-3.434522,-9.581658,-9.485198,1.250192,-7.232609,3.292894,-0.371444,2.312201,8.615341,-8.573898,5.517219,-2.622482,2.395932,1.669386,9.529315,-5.639390,6.535885,-5.251534,-7.124258,-5.885788,2.943752,0.592896,5.629820,-7.174885,-1.212263,6.530044,-8.536762,-0.674656,-6.661989,5.248707,-7.972905,9.196173,-8.854002,4.375544,6.457985,2.501391,0.721877,-4.466831,9.530965,5.002836,3.236467,8.692871,6.254620,5.997285,1.443679,9.134643,3.304795,-8.187028,-9.382523,-3.696328,7.056581,-5.487066,-7.442061,-9.549857,9.998161,4.630993,-7.079360,-7.015652,9.716737,8.921009,-9.609581,-0.575621,6.571774,8.086520,-1.489161,4.264824,-5.787624,3.704850,3.133690,-3.480439,7.602015,1.340331,0.098773,7.658454,-3.414846,8.080867,0.824056,-1.930955,-9.934424,-2.232578,0.208568,5.894105,-4.297727,-0.203458,-2.503692,-2.730708,8.160985,7.993630,-4.212486,1.132061,5.925862,0.773593,-7.386845,0.290078,-1.161720,1.724944,2.575286,2.063822,3.539049,2.076938,-3.260125,-4.466609]], dtype = "float32")#candidate|19259|(3, 504)|const|float32
call_19258 = relay.TupleGetItem(func_2804_call(relay.reshape(const_19259.astype('float32'), [14, 12, 9])), 0)
call_19260 = relay.TupleGetItem(func_2807_call(relay.reshape(const_19259.astype('float32'), [14, 12, 9])), 0)
func_12043_call = mod.get_global_var('func_12043')
func_12044_call = mutated_mod.get_global_var('func_12044')
call_19277 = func_12043_call()
call_19278 = func_12043_call()
output = relay.Tuple([bop_19236,call_19251,var_19252,var_19253,call_19258,const_19259,call_19277,])
output2 = relay.Tuple([bop_19236,call_19254,var_19252,var_19253,call_19260,const_19259,call_19278,])
func_19283 = relay.Function([var_19230,var_19252,var_19253,], output)
mod['func_19283'] = func_19283
mod = relay.transform.InferType()(mod)
mutated_mod['func_19283'] = func_19283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19283_call = mutated_mod.get_global_var('func_19283')
var_19285 = relay.var("var_19285", dtype = "float64", shape = (3, 6, 6))#candidate|19285|(3, 6, 6)|var|float64
var_19286 = relay.var("var_19286", dtype = "float64", shape = (40, 1))#candidate|19286|(40, 1)|var|float64
var_19287 = relay.var("var_19287", dtype = "float64", shape = (120,))#candidate|19287|(120,)|var|float64
call_19284 = func_19283_call(var_19285,var_19286,var_19287,)
output = call_19284
func_19288 = relay.Function([var_19285,var_19286,var_19287,], output)
mutated_mod['func_19288'] = func_19288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8178_call = mod.get_global_var('func_8178')
func_8179_call = mutated_mod.get_global_var('func_8179')
call_19320 = func_8178_call()
call_19321 = func_8178_call()
output = call_19320
output2 = call_19321
func_19349 = relay.Function([], output)
mod['func_19349'] = func_19349
mod = relay.transform.InferType()(mod)
mutated_mod['func_19349'] = func_19349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19349_call = mutated_mod.get_global_var('func_19349')
call_19350 = func_19349_call()
output = call_19350
func_19351 = relay.Function([], output)
mutated_mod['func_19351'] = func_19351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16274_call = mod.get_global_var('func_16274')
func_16275_call = mutated_mod.get_global_var('func_16275')
call_19357 = relay.TupleGetItem(func_16274_call(), 0)
call_19358 = relay.TupleGetItem(func_16275_call(), 0)
func_15753_call = mod.get_global_var('func_15753')
func_15754_call = mutated_mod.get_global_var('func_15754')
call_19360 = relay.TupleGetItem(func_15753_call(), 0)
call_19361 = relay.TupleGetItem(func_15754_call(), 0)
output = relay.Tuple([call_19357,call_19360,])
output2 = relay.Tuple([call_19358,call_19361,])
func_19370 = relay.Function([], output)
mod['func_19370'] = func_19370
mod = relay.transform.InferType()(mod)
output = func_19370()
func_19371 = relay.Function([], output)
mutated_mod['func_19371'] = func_19371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10023_call = mod.get_global_var('func_10023')
func_10025_call = mutated_mod.get_global_var('func_10025')
call_19450 = relay.TupleGetItem(func_10023_call(), 0)
call_19451 = relay.TupleGetItem(func_10025_call(), 0)
func_18432_call = mod.get_global_var('func_18432')
func_18434_call = mutated_mod.get_global_var('func_18434')
call_19499 = relay.TupleGetItem(func_18432_call(), 0)
call_19500 = relay.TupleGetItem(func_18434_call(), 0)
output = relay.Tuple([call_19450,call_19499,])
output2 = relay.Tuple([call_19451,call_19500,])
func_19507 = relay.Function([], output)
mod['func_19507'] = func_19507
mod = relay.transform.InferType()(mod)
mutated_mod['func_19507'] = func_19507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19507_call = mutated_mod.get_global_var('func_19507')
call_19508 = func_19507_call()
output = call_19508
func_19509 = relay.Function([], output)
mutated_mod['func_19509'] = func_19509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_19513 = func_5416_call()
call_19514 = func_5416_call()
func_12123_call = mod.get_global_var('func_12123')
func_12125_call = mutated_mod.get_global_var('func_12125')
call_19532 = func_12123_call()
call_19533 = func_12123_call()
output = relay.Tuple([call_19513,call_19532,])
output2 = relay.Tuple([call_19514,call_19533,])
func_19580 = relay.Function([], output)
mod['func_19580'] = func_19580
mod = relay.transform.InferType()(mod)
mutated_mod['func_19580'] = func_19580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19580_call = mutated_mod.get_global_var('func_19580')
call_19581 = func_19580_call()
output = call_19581
func_19582 = relay.Function([], output)
mutated_mod['func_19582'] = func_19582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6901_call = mod.get_global_var('func_6901')
func_6902_call = mutated_mod.get_global_var('func_6902')
call_19595 = relay.TupleGetItem(func_6901_call(), 0)
call_19596 = relay.TupleGetItem(func_6902_call(), 0)
func_12175_call = mod.get_global_var('func_12175')
func_12177_call = mutated_mod.get_global_var('func_12177')
call_19600 = relay.TupleGetItem(func_12175_call(), 1)
call_19601 = relay.TupleGetItem(func_12177_call(), 1)
output = relay.Tuple([call_19595,call_19600,])
output2 = relay.Tuple([call_19596,call_19601,])
func_19615 = relay.Function([], output)
mod['func_19615'] = func_19615
mod = relay.transform.InferType()(mod)
mutated_mod['func_19615'] = func_19615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19615_call = mutated_mod.get_global_var('func_19615')
call_19616 = func_19615_call()
output = call_19616
func_19617 = relay.Function([], output)
mutated_mod['func_19617'] = func_19617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9558_call = mod.get_global_var('func_9558')
func_9560_call = mutated_mod.get_global_var('func_9560')
call_19625 = relay.TupleGetItem(func_9558_call(), 0)
call_19626 = relay.TupleGetItem(func_9560_call(), 0)
func_12406_call = mod.get_global_var('func_12406')
func_12408_call = mutated_mod.get_global_var('func_12408')
call_19629 = func_12406_call()
call_19630 = func_12406_call()
output = relay.Tuple([call_19625,call_19629,])
output2 = relay.Tuple([call_19626,call_19630,])
func_19657 = relay.Function([], output)
mod['func_19657'] = func_19657
mod = relay.transform.InferType()(mod)
output = func_19657()
func_19658 = relay.Function([], output)
mutated_mod['func_19658'] = func_19658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17859_call = mod.get_global_var('func_17859')
func_17861_call = mutated_mod.get_global_var('func_17861')
call_19696 = relay.TupleGetItem(func_17859_call(), 0)
call_19697 = relay.TupleGetItem(func_17861_call(), 0)
func_8320_call = mod.get_global_var('func_8320')
func_8321_call = mutated_mod.get_global_var('func_8321')
call_19703 = relay.TupleGetItem(func_8320_call(), 1)
call_19704 = relay.TupleGetItem(func_8321_call(), 1)
func_17280_call = mod.get_global_var('func_17280')
func_17281_call = mutated_mod.get_global_var('func_17281')
call_19722 = func_17280_call()
call_19723 = func_17280_call()
func_15785_call = mod.get_global_var('func_15785')
func_15788_call = mutated_mod.get_global_var('func_15788')
const_19738 = relay.const([[-3.630032,-2.037459,-6.667070,-6.127385,0.498293,1.291407,4.725485,0.886703,7.072911],[8.118307,-2.591829,-8.469517,-1.861645,1.930074,-6.870975,-0.839633,-5.302336,4.204235],[-5.367161,-9.328873,5.006767,-9.056006,-9.095085,-0.875564,-0.204626,-8.387181,-1.924777],[1.054398,-2.455279,5.256860,-4.766255,8.980036,4.414647,2.298566,-8.773066,2.408606],[-1.625496,0.285433,2.017712,-7.408807,5.528076,0.598892,8.630582,7.648268,3.215049],[7.166003,-8.530544,-1.026461,0.460193,-5.488152,-0.765213,3.404404,4.755477,3.065188],[4.784930,5.653886,-0.246438,-9.905370,5.623258,-4.240583,2.314455,8.455618,-7.879674],[9.930520,3.222973,-1.473329,9.248206,-0.880952,-0.561145,8.362309,-1.129958,-4.783939],[2.419557,-3.694811,-3.910699,-9.564934,-3.578126,-2.961650,7.837358,-9.306587,7.764035],[-5.593140,6.464438,0.081209,7.069877,6.551193,0.289400,-1.170200,-4.584583,-3.820266],[0.111003,-5.370350,-4.823710,4.199339,-0.864897,-5.884078,-1.415617,-4.777466,-6.887204],[7.123688,1.080533,7.636792,-0.348741,0.510243,-0.110060,-1.115824,-6.693990,-5.950723],[9.159424,6.977428,4.076505,1.618020,-5.328414,2.832771,6.515621,-8.683298,8.475586],[-5.628449,-0.508361,1.546181,1.049532,-9.566264,-8.261779,-9.380056,-4.363469,-4.502873],[6.051981,5.519158,8.669239,-4.271609,8.712583,8.781070,-4.994913,6.096040,-0.171693],[-1.739357,-6.505622,9.594049,5.123378,-1.259280,0.068581,3.341896,-2.049055,0.640936],[-4.789477,-3.559159,-7.092417,-1.408347,2.956577,3.845282,-5.023133,5.867415,7.540076],[-4.821940,-8.893224,-0.471182,2.206200,6.433924,4.972576,7.667683,-4.124229,7.162615]], dtype = "float32")#candidate|19738|(18, 9)|const|float32
call_19737 = relay.TupleGetItem(func_15785_call(relay.reshape(const_19738.astype('float32'), [9, 3, 6])), 5)
call_19739 = relay.TupleGetItem(func_15788_call(relay.reshape(const_19738.astype('float32'), [9, 3, 6])), 5)
output = relay.Tuple([call_19696,call_19703,call_19722,call_19737,const_19738,])
output2 = relay.Tuple([call_19697,call_19704,call_19723,call_19739,const_19738,])
func_19745 = relay.Function([], output)
mod['func_19745'] = func_19745
mod = relay.transform.InferType()(mod)
output = func_19745()
func_19746 = relay.Function([], output)
mutated_mod['func_19746'] = func_19746
mutated_mod = relay.transform.InferType()(mutated_mod)
var_19817 = relay.var("var_19817", dtype = "float32", shape = (8, 3, 11))#candidate|19817|(8, 3, 11)|var|float32
uop_19818 = relay.exp(var_19817.astype('float32')) # shape=(8, 3, 11)
output = uop_19818
output2 = uop_19818
func_19832 = relay.Function([var_19817,], output)
mod['func_19832'] = func_19832
mod = relay.transform.InferType()(mod)
mutated_mod['func_19832'] = func_19832
mutated_mod = relay.transform.InferType()(mutated_mod)
var_19833 = relay.var("var_19833", dtype = "float32", shape = (8, 3, 11))#candidate|19833|(8, 3, 11)|var|float32
func_19832_call = mutated_mod.get_global_var('func_19832')
call_19834 = func_19832_call(var_19833)
output = call_19834
func_19835 = relay.Function([var_19833], output)
mutated_mod['func_19835'] = func_19835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16274_call = mod.get_global_var('func_16274')
func_16275_call = mutated_mod.get_global_var('func_16275')
call_19847 = relay.TupleGetItem(func_16274_call(), 0)
call_19848 = relay.TupleGetItem(func_16275_call(), 0)
func_17280_call = mod.get_global_var('func_17280')
func_17281_call = mutated_mod.get_global_var('func_17281')
call_19863 = func_17280_call()
call_19864 = func_17280_call()
func_2244_call = mod.get_global_var('func_2244')
func_2247_call = mutated_mod.get_global_var('func_2247')
const_19875 = relay.const([5,9,10,2,1,10,-8,8,-7,-9,6,7,7,5,7,1,-3,1,8,-9,-7,-9,-4,-7,8,9,3,1,-10,-7,10,2,8,-7,9,7,7,-1,3,-1,7,4,-6,9,3,4,5,5,1,2,-9,6,-7,8,-6,-2,1,-2,-4,4,8,-1,5,-6,9,6,7,8,8,5,-7,8,4,4,2,5,7,3,-1,10,-7,10,6,-9,5,10,-10,9,-10,-1,-2,-10,-10,3,-2,-3,-9,2,-2,2,2,9,-2,-5,5,3,-10,-8,-8,4,-6,-6,4,10,8,5,-6,1,5,2,-9,7,2,2,8,7,-6,7,-10,6,-9,-7,5,6,-3,10,-5,-3,-2,-4,-4,-4,-5,-8,8,-2,-3,3,-8,-10,7,-5,6,-9,5,-1,-8,9,6,8,-1,10,-3,6,3,-2,-3,-7,5,9,3,10,5,-5,-9,4,5,-8,10,-8], dtype = "uint8")#candidate|19875|(180,)|const|uint8
call_19874 = relay.TupleGetItem(func_2244_call(relay.reshape(const_19875.astype('uint8'), [15, 3, 4])), 0)
call_19876 = relay.TupleGetItem(func_2247_call(relay.reshape(const_19875.astype('uint8'), [15, 3, 4])), 0)
const_19885 = relay.const([[[7,8,7,-2],[-7,-8,10,-9],[9,-3,-5,1]],[[-7,7,1,-3],[-3,10,2,-2],[3,-8,-4,-7]],[[4,4,-3,1],[2,-7,5,3],[2,-1,-5,5]],[[-5,-2,10,9],[-9,5,10,2],[-3,6,1,-7]],[[3,9,-3,10],[7,-6,-1,-1],[10,2,2,-3]],[[-3,3,8,-6],[10,-3,-10,-10],[4,4,-10,6]],[[10,3,2,-9],[5,-10,3,-6],[-1,-3,-1,-10]],[[8,-10,8,2],[6,4,-9,2],[4,-7,-7,-8]],[[-1,3,-6,6],[-6,6,-4,6],[2,-7,-10,7]],[[10,10,8,-10],[-9,-10,6,10],[-4,-8,5,-8]],[[3,-9,4,-6],[3,-4,4,-1],[-6,9,-9,-2]],[[5,1,3,6],[3,-8,5,-1],[-1,-9,-8,-7]],[[1,4,7,1],[7,4,1,7],[-9,-3,10,1]],[[9,-8,10,3],[3,9,5,-2],[6,-6,7,-3]],[[10,-9,1,4],[1,9,7,-1],[9,-8,2,9]]], dtype = "uint8")#candidate|19885|(15, 3, 4)|const|uint8
bop_19886 = relay.left_shift(call_19874.astype('int32'), relay.reshape(const_19885.astype('int32'), relay.shape_of(call_19874))) # shape=(15, 3, 4)
bop_19889 = relay.left_shift(call_19876.astype('int32'), relay.reshape(const_19885.astype('int32'), relay.shape_of(call_19876))) # shape=(15, 3, 4)
output = relay.Tuple([call_19847,call_19863,const_19875,bop_19886,])
output2 = relay.Tuple([call_19848,call_19864,const_19875,bop_19889,])
func_19892 = relay.Function([], output)
mod['func_19892'] = func_19892
mod = relay.transform.InferType()(mod)
output = func_19892()
func_19893 = relay.Function([], output)
mutated_mod['func_19893'] = func_19893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13385_call = mod.get_global_var('func_13385')
func_13387_call = mutated_mod.get_global_var('func_13387')
call_19897 = relay.TupleGetItem(func_13385_call(), 0)
call_19898 = relay.TupleGetItem(func_13387_call(), 0)
output = call_19897
output2 = call_19898
func_19913 = relay.Function([], output)
mod['func_19913'] = func_19913
mod = relay.transform.InferType()(mod)
mutated_mod['func_19913'] = func_19913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19913_call = mutated_mod.get_global_var('func_19913')
call_19914 = func_19913_call()
output = call_19914
func_19915 = relay.Function([], output)
mutated_mod['func_19915'] = func_19915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13677_call = mod.get_global_var('func_13677')
func_13679_call = mutated_mod.get_global_var('func_13679')
call_19924 = relay.TupleGetItem(func_13677_call(), 1)
call_19925 = relay.TupleGetItem(func_13679_call(), 1)
output = call_19924
output2 = call_19925
func_19938 = relay.Function([], output)
mod['func_19938'] = func_19938
mod = relay.transform.InferType()(mod)
mutated_mod['func_19938'] = func_19938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19938_call = mutated_mod.get_global_var('func_19938')
call_19939 = func_19938_call()
output = call_19939
func_19940 = relay.Function([], output)
mutated_mod['func_19940'] = func_19940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19913_call = mod.get_global_var('func_19913')
func_19915_call = mutated_mod.get_global_var('func_19915')
call_19953 = func_19913_call()
call_19954 = func_19913_call()
func_17241_call = mod.get_global_var('func_17241')
func_17243_call = mutated_mod.get_global_var('func_17243')
call_19994 = relay.TupleGetItem(func_17241_call(), 0)
call_19995 = relay.TupleGetItem(func_17243_call(), 0)
output = relay.Tuple([call_19953,call_19994,])
output2 = relay.Tuple([call_19954,call_19995,])
func_20004 = relay.Function([], output)
mod['func_20004'] = func_20004
mod = relay.transform.InferType()(mod)
mutated_mod['func_20004'] = func_20004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_20004_call = mutated_mod.get_global_var('func_20004')
call_20005 = func_20004_call()
output = call_20005
func_20006 = relay.Function([], output)
mutated_mod['func_20006'] = func_20006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10322_call = mod.get_global_var('func_10322')
func_10323_call = mutated_mod.get_global_var('func_10323')
call_20137 = relay.TupleGetItem(func_10322_call(), 1)
call_20138 = relay.TupleGetItem(func_10323_call(), 1)
output = call_20137
output2 = call_20138
func_20147 = relay.Function([], output)
mod['func_20147'] = func_20147
mod = relay.transform.InferType()(mod)
output = func_20147()
func_20148 = relay.Function([], output)
mutated_mod['func_20148'] = func_20148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16704_call = mod.get_global_var('func_16704')
func_16705_call = mutated_mod.get_global_var('func_16705')
call_20189 = func_16704_call()
call_20190 = func_16704_call()
func_18819_call = mod.get_global_var('func_18819')
func_18821_call = mutated_mod.get_global_var('func_18821')
const_20201 = relay.const([[-3.924508,2.181815,-5.324037,-5.949319,3.854278,-5.722648,-6.207597,4.697366,2.500026,9.670435,-0.944174,-2.008025,-7.124628,1.546875,-6.221907,-7.904253,-0.947331,-3.072737,-2.043805,9.690640,8.080019,-8.304214,-4.625559,0.984854,-9.038658,-7.040487,-6.223074,-2.760216,-6.875918,8.356435,-0.743101,5.052188,-5.679057,9.741647,-6.948235,-9.018191,1.570582,5.653203,-6.833389,8.509014,2.388071,-3.950077,-1.941509,1.119395,-5.862406,5.507388,-4.503008,8.546284,-5.958721,7.488385,-5.199308,5.767322,-2.062724,2.802536,7.359703,-4.313332,-0.165422,-2.697594,0.524053,3.261502,1.184074,2.775218,0.028306,-8.297124,4.587829,-1.707762,0.536968,6.311324,4.063695,-2.782242,2.712585,5.826746,8.729132,6.393227,1.674920,-1.954369,7.528377,8.483682,5.640990,7.154880,1.155056,-9.553698,4.982169,0.933959,-5.494720,0.082694,-8.927962,-2.994452,2.500288,-1.121449,-9.628437,7.245602,-7.670322,3.737570,-6.477172,3.002120,-8.699779,-8.777573,6.491094,-5.989847,5.749138,-2.409790,9.944669,-5.114258],[-4.856945,5.436787,7.510415,-9.390507,1.765340,3.360009,-5.946886,-9.179029,-0.167291,-0.414356,-3.861150,-2.129105,3.832572,6.338161,9.610753,4.364034,-0.964363,-0.644298,2.168932,-0.811419,-4.509477,-7.660218,-2.999705,-6.118713,3.622186,-9.791998,5.226264,8.566312,0.296146,9.047792,-7.415822,-5.631131,-4.916302,1.028259,-9.637612,-0.724584,9.864577,5.100916,9.444953,2.284693,6.567215,-5.886573,-0.666497,6.044083,-2.126318,-5.768359,8.894507,-1.074885,0.330663,7.982881,9.937464,0.951473,-4.021913,-1.642824,-0.317917,-4.251625,7.291350,-5.475976,-7.486929,-6.446397,3.547221,-0.620488,9.912462,-0.847708,-7.506918,-0.251965,8.757089,-9.998750,8.880896,-9.934662,-2.842483,0.151483,5.991086,5.884872,7.959224,3.627968,-5.371783,3.375839,-9.787694,5.051291,8.316745,-6.097612,0.804614,-5.185889,4.213536,-0.099432,3.706945,6.270728,2.257649,-6.111558,-7.869995,3.537222,7.756321,7.106718,-3.875097,-8.839239,-1.814774,9.218698,-2.158985,-4.308682,-2.898198,4.345626,-2.026361,-5.959776],[-6.150427,-9.293198,-5.707629,9.678817,-6.543265,1.844227,2.845072,-6.592893,-7.062941,9.269316,3.803429,-1.060029,-1.606023,7.923563,9.986452,0.254683,5.090302,-9.141438,6.498361,8.411826,-3.518976,9.247870,1.278716,-9.651135,6.477419,-2.387501,2.120168,-9.726078,-3.124690,4.361251,6.018321,7.092073,-4.107851,4.958679,-6.945103,-9.796727,1.439259,-6.057836,3.250429,0.008242,3.427615,-5.278435,-1.225599,-7.263364,-9.432889,-6.565070,-5.606871,-6.843299,-3.094724,0.186205,5.866396,8.118457,8.525691,5.410487,-6.204191,5.975428,-7.512275,5.864362,-8.920190,1.562066,1.868560,-7.743530,-0.503654,-5.908944,-1.635787,6.859098,3.111323,2.555033,-4.115489,-6.682541,8.542279,-0.625519,4.288281,-2.920904,-9.579466,-8.176979,-1.178327,6.879687,-0.700201,8.961884,2.143552,-3.172761,2.168605,3.763955,-1.586793,8.574483,1.539530,1.320537,4.559342,-6.600529,7.513675,3.666017,-4.534273,-5.056903,-3.518708,1.076915,-7.474579,4.399433,8.767841,-7.514050,-8.242594,8.471812,5.097800,-9.904004],[1.288407,-8.638531,7.491144,-7.089372,2.735552,-4.681525,-1.416042,5.337615,5.233530,-2.962927,-6.886827,-2.476037,-8.365766,-0.751121,-6.845137,-6.265920,-9.823276,5.958161,-4.307832,8.274940,-7.730866,-1.177556,4.282194,-6.651838,-6.925528,-4.955371,7.409731,8.366496,-7.026748,9.813696,-4.734925,-9.083914,1.484536,-3.527053,1.162726,4.990050,-6.437139,-0.871500,1.144646,-5.657451,-8.625944,-4.062370,-4.800098,2.895268,-4.597726,8.024677,0.977715,6.699235,1.857864,-8.225140,4.206190,2.442875,9.947519,5.353233,-4.072520,-2.916338,-8.452448,-5.906393,-4.113693,-8.821412,-5.007383,8.446708,1.577261,-8.035268,8.095223,-6.300990,-2.659724,-6.352178,1.471472,0.091379,7.066763,-8.186542,-2.792067,-5.646395,0.653439,7.482403,0.837239,8.027375,9.124757,3.722840,-1.608987,8.538778,5.309363,3.580957,-7.053548,-7.319568,-4.773826,9.625885,1.216714,-0.966714,-0.166919,3.418805,-3.655417,7.903646,-1.560665,-5.865167,-9.596580,-8.857204,3.857074,-7.964952,-2.328303,-6.535165,-6.265735,7.922166]], dtype = "float32")#candidate|20201|(4, 104)|const|float32
call_20200 = func_18819_call(relay.reshape(const_20201.astype('float32'), [16, 13, 2]))
call_20202 = func_18819_call(relay.reshape(const_20201.astype('float32'), [16, 13, 2]))
func_7369_call = mod.get_global_var('func_7369')
func_7371_call = mutated_mod.get_global_var('func_7371')
call_20203 = relay.TupleGetItem(func_7369_call(), 0)
call_20204 = relay.TupleGetItem(func_7371_call(), 0)
func_6503_call = mod.get_global_var('func_6503')
func_6505_call = mutated_mod.get_global_var('func_6505')
var_20219 = relay.var("var_20219", dtype = "float64", shape = ())#candidate|20219|()|var|float64
call_20218 = relay.TupleGetItem(func_6503_call(relay.reshape(var_20219.astype('float64'), [])), 2)
call_20220 = relay.TupleGetItem(func_6505_call(relay.reshape(var_20219.astype('float64'), [])), 2)
output = relay.Tuple([call_20189,call_20200,const_20201,call_20203,call_20218,var_20219,])
output2 = relay.Tuple([call_20190,call_20202,const_20201,call_20204,call_20220,var_20219,])
func_20223 = relay.Function([var_20219,], output)
mod['func_20223'] = func_20223
mod = relay.transform.InferType()(mod)
var_20224 = relay.var("var_20224", dtype = "float64", shape = ())#candidate|20224|()|var|float64
output = func_20223(var_20224)
func_20225 = relay.Function([var_20224], output)
mutated_mod['func_20225'] = func_20225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12647_call = mod.get_global_var('func_12647')
func_12649_call = mutated_mod.get_global_var('func_12649')
call_20254 = func_12647_call()
call_20255 = func_12647_call()
output = call_20254
output2 = call_20255
func_20260 = relay.Function([], output)
mod['func_20260'] = func_20260
mod = relay.transform.InferType()(mod)
output = func_20260()
func_20261 = relay.Function([], output)
mutated_mod['func_20261'] = func_20261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9370_call = mod.get_global_var('func_9370')
func_9371_call = mutated_mod.get_global_var('func_9371')
call_20300 = relay.TupleGetItem(func_9370_call(), 1)
call_20301 = relay.TupleGetItem(func_9371_call(), 1)
output = relay.Tuple([call_20300,])
output2 = relay.Tuple([call_20301,])
func_20313 = relay.Function([], output)
mod['func_20313'] = func_20313
mod = relay.transform.InferType()(mod)
mutated_mod['func_20313'] = func_20313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_20313_call = mutated_mod.get_global_var('func_20313')
call_20314 = func_20313_call()
output = call_20314
func_20315 = relay.Function([], output)
mutated_mod['func_20315'] = func_20315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12070_call = mod.get_global_var('func_12070')
func_12072_call = mutated_mod.get_global_var('func_12072')
call_20443 = relay.TupleGetItem(func_12070_call(), 0)
call_20444 = relay.TupleGetItem(func_12072_call(), 0)
var_20455 = relay.var("var_20455", dtype = "bool", shape = (12, 9, 15))#candidate|20455|(12, 9, 15)|var|bool
bop_20456 = relay.not_equal(call_20443.astype('bool'), relay.reshape(var_20455.astype('bool'), relay.shape_of(call_20443))) # shape=(12, 9, 15)
bop_20459 = relay.not_equal(call_20444.astype('bool'), relay.reshape(var_20455.astype('bool'), relay.shape_of(call_20444))) # shape=(12, 9, 15)
output = bop_20456
output2 = bop_20459
func_20469 = relay.Function([var_20455,], output)
mod['func_20469'] = func_20469
mod = relay.transform.InferType()(mod)
mutated_mod['func_20469'] = func_20469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_20470 = relay.var("var_20470", dtype = "bool", shape = (12, 9, 15))#candidate|20470|(12, 9, 15)|var|bool
func_20469_call = mutated_mod.get_global_var('func_20469')
call_20471 = func_20469_call(var_20470)
output = call_20471
func_20472 = relay.Function([var_20470], output)
mutated_mod['func_20472'] = func_20472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5544_call = mod.get_global_var('func_5544')
func_5545_call = mutated_mod.get_global_var('func_5545')
call_20488 = relay.TupleGetItem(func_5544_call(), 2)
call_20489 = relay.TupleGetItem(func_5545_call(), 2)
func_14195_call = mod.get_global_var('func_14195')
func_14196_call = mutated_mod.get_global_var('func_14196')
call_20490 = relay.TupleGetItem(func_14195_call(), 0)
call_20491 = relay.TupleGetItem(func_14196_call(), 0)
uop_20513 = relay.exp(call_20488.astype('float32')) # shape=(15, 195)
uop_20515 = relay.exp(call_20489.astype('float32')) # shape=(15, 195)
func_11163_call = mod.get_global_var('func_11163')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_20519 = relay.TupleGetItem(func_11163_call(), 0)
call_20520 = relay.TupleGetItem(func_11164_call(), 0)
output = relay.Tuple([call_20490,uop_20513,call_20519,])
output2 = relay.Tuple([call_20491,uop_20515,call_20520,])
func_20521 = relay.Function([], output)
mod['func_20521'] = func_20521
mod = relay.transform.InferType()(mod)
mutated_mod['func_20521'] = func_20521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_20521_call = mutated_mod.get_global_var('func_20521')
call_20522 = func_20521_call()
output = call_20522
func_20523 = relay.Function([], output)
mutated_mod['func_20523'] = func_20523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15428_call = mod.get_global_var('func_15428')
func_15429_call = mutated_mod.get_global_var('func_15429')
call_20551 = relay.TupleGetItem(func_15428_call(), 0)
call_20552 = relay.TupleGetItem(func_15429_call(), 0)
func_5506_call = mod.get_global_var('func_5506')
func_5508_call = mutated_mod.get_global_var('func_5508')
call_20564 = relay.TupleGetItem(func_5506_call(), 2)
call_20565 = relay.TupleGetItem(func_5508_call(), 2)
output = relay.Tuple([call_20551,call_20564,])
output2 = relay.Tuple([call_20552,call_20565,])
func_20566 = relay.Function([], output)
mod['func_20566'] = func_20566
mod = relay.transform.InferType()(mod)
output = func_20566()
func_20567 = relay.Function([], output)
mutated_mod['func_20567'] = func_20567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_20566_call = mod.get_global_var('func_20566')
func_20567_call = mutated_mod.get_global_var('func_20567')
call_20608 = relay.TupleGetItem(func_20566_call(), 1)
call_20609 = relay.TupleGetItem(func_20567_call(), 1)
const_20610 = relay.const([[[-7.552994,0.548515,9.333659,-5.498250,4.537895,1.228514,-9.047997,6.741619,6.777784,-5.540953,0.190934],[6.324178,-9.407008,3.668531,-8.336248,-0.179735,-0.466757,5.769959,-3.954453,-6.573460,-1.086446,4.114478],[-9.779477,2.870838,0.692382,2.978767,7.719969,0.509486,6.605209,7.814814,-4.480379,-7.245546,0.789720],[-6.245160,-5.835835,9.756716,6.313811,7.031651,-7.145905,4.031232,-9.602442,-3.982389,5.210617,4.988582],[-0.016231,-0.500259,-3.047074,-2.067818,-2.128936,2.316884,6.617442,7.275270,-7.449539,-0.986577,-1.703664],[-3.901668,-8.566405,-8.186448,-0.078020,5.431699,1.015297,5.868181,-1.232788,6.520797,0.485719,4.538243],[-9.263558,5.178878,-6.347620,2.172598,5.261488,7.212716,-7.375205,1.785209,-0.458019,6.066037,-3.683373],[7.955690,-8.103198,1.537710,-3.539074,7.967420,-5.595794,0.611559,-1.895489,6.224218,-2.653126,-2.589676],[-4.428329,3.710095,-5.428705,-9.284249,-3.608601,9.616819,2.727462,-4.641620,-9.708026,-6.922318,-9.418627],[4.826997,-2.944003,-3.066440,1.552284,8.630697,-5.294604,-3.337100,1.894382,9.139605,4.070225,5.487374]],[[5.750313,-7.298315,9.836957,-7.788089,-6.558479,-4.697954,-9.651962,1.922807,5.105761,-2.090583,9.944715],[-7.871955,7.900862,-8.963892,9.437282,8.196827,2.810565,-6.219308,-4.092802,-8.389188,-0.528204,9.371164],[0.353116,-8.618964,3.695685,-2.493268,-4.941843,-7.290446,-9.842183,-0.527524,-5.591449,6.923817,8.087078],[-8.674914,-6.577736,-4.333754,4.821588,-2.957197,-7.280594,-7.477127,7.415521,-4.153237,7.198649,5.441272],[-9.937603,7.418924,-1.678441,-4.736328,-9.863285,6.071159,-1.269407,3.011267,-4.708208,-3.225290,7.552032],[-9.074556,-4.764636,-9.405380,4.751491,9.338687,1.364301,-0.641875,2.406068,4.211097,9.471709,8.752554],[-4.029688,-5.077875,-9.362073,8.564237,4.724863,-3.684190,-8.150339,6.467078,-3.083008,9.921106,-5.210455],[6.821051,8.755408,4.841221,-2.516583,-0.677293,-5.482750,5.694492,7.084648,-1.415907,-6.054940,-5.603595],[4.493399,4.847946,2.034358,4.118027,-3.730708,2.460712,8.104669,9.162390,3.751368,-0.093707,-8.808512],[-1.340896,-0.807509,-7.250952,8.091887,1.239715,-8.474106,9.827913,-8.979117,5.696878,9.564286,-4.940323]],[[-6.569072,-2.762120,4.427824,0.883111,-4.934780,2.028983,-9.992899,-3.310558,5.813978,-4.252270,-4.775505],[2.811027,-7.778402,7.865876,7.229525,-5.012449,7.304186,-6.275408,6.985298,-6.489252,8.278218,-6.958353],[7.091008,-5.523037,-1.122628,1.806761,-9.963695,3.063116,8.538421,-1.745065,-2.503371,-3.272204,-5.259727],[-9.828434,-5.216716,2.398217,2.027174,0.664193,-9.586712,4.276279,-9.501844,6.387481,4.177470,5.625548],[-0.027303,1.882921,-8.558646,-1.166230,-9.021635,-0.873770,-3.533417,3.883416,3.018092,-6.019616,-8.879925],[0.969066,-4.965640,1.779418,7.414122,0.611917,-5.174728,1.470531,-7.227455,5.672540,-2.067855,-5.991464],[-7.117154,-6.210975,-6.431360,1.097327,-0.157617,-3.306937,-0.719405,-8.655965,-7.283242,2.735097,5.463861],[-5.544848,-4.526863,-8.956001,4.420925,3.163888,-6.766653,-9.989344,3.625956,7.467084,-1.794866,-0.210449],[2.015249,-9.986610,-9.889383,7.923828,-9.623996,-9.653342,3.764083,-5.503259,9.435406,-7.263088,0.441384],[-2.126477,1.603387,1.526126,5.196480,-8.639688,-2.008864,8.470407,-6.855416,-0.871715,-3.672181,2.383877]],[[-1.837433,-3.936727,-8.155155,7.523598,1.005721,-9.724075,-7.552397,-7.555016,6.375109,-4.334182,-1.913937],[7.856662,-0.414937,9.763480,-5.808207,0.312851,-7.777421,-9.473877,-9.204572,2.440026,4.291003,-1.640573],[0.527060,-2.065994,3.861060,-8.595347,-2.234246,-5.858935,-0.169241,9.911878,0.933979,9.026733,-1.293908],[-0.067761,8.970899,8.162970,0.482486,-3.991353,-7.284520,4.050584,-0.011858,9.997789,3.126853,7.459248],[-0.650351,-0.880144,2.033159,1.426412,2.284647,4.744945,7.608874,-0.318906,-5.107477,2.887224,3.966442],[5.853614,1.055465,-6.690763,-5.489043,-7.427042,-0.327740,-7.862563,-0.392737,6.904992,5.571400,-2.142159],[6.264027,1.501335,-2.786183,3.779450,-5.720379,5.135421,1.659411,-1.877186,4.860134,-9.943816,-7.437261],[-5.693587,0.854334,-7.641216,-9.293384,5.967913,1.464848,5.104000,-8.530290,0.322340,2.543837,-0.757747],[-0.838106,8.537602,5.364807,9.162372,-3.283898,-4.920167,-3.239600,2.204482,6.530118,-9.032495,9.492061],[-5.430716,-4.038726,-6.425737,-3.918900,4.792688,-7.718421,8.851030,-6.590761,5.089044,-4.230904,-5.026329]],[[-9.542845,5.881018,1.322345,3.949858,0.867388,-6.316592,8.464264,-8.785120,9.648356,3.903230,-8.597811],[6.644992,2.069205,2.616947,-6.801684,-9.028504,5.617614,-1.413162,-7.450076,-5.931551,-0.149674,8.539018],[1.076302,4.657209,0.677434,-3.014576,6.708199,8.617462,-1.668902,-5.985598,-0.981278,-6.853089,-2.983298],[-8.675394,-5.525695,0.157564,9.508658,-4.685734,-2.349534,1.183614,-1.661575,4.267089,4.163588,0.299856],[8.221096,-5.081314,-1.504962,-5.070789,-1.761824,0.917111,9.913621,6.519480,-9.369877,8.651590,4.772216],[-5.972291,1.521756,-6.334127,-9.765186,-7.889614,8.906382,-8.881199,3.252355,4.859893,4.142783,-0.793115],[2.585806,-8.867822,-5.357837,-2.270782,-8.603609,2.789173,-9.763203,7.381226,8.838955,-9.346415,-5.896222],[2.255294,6.408456,8.692147,1.305325,5.494119,4.568352,-9.870808,-2.771187,-0.631098,-5.663817,-5.932534],[9.761817,5.964137,1.824921,0.179383,-7.077073,-1.987674,0.634196,6.145880,8.339186,5.611149,-6.531278],[-6.721573,-5.356716,5.239188,1.328627,2.585838,8.813117,7.913557,4.341022,9.355532,5.404728,2.042718]],[[2.271690,-4.226332,-1.227813,-1.124192,7.200391,1.477394,3.000322,-3.407481,-7.521568,9.538230,1.198400],[-1.570719,4.845174,-8.836834,8.385323,-4.408127,-2.235869,-9.112857,-8.875885,2.475891,5.773506,-7.967952],[-7.295157,5.100694,-7.704592,-3.971423,-6.083047,-9.209691,-6.469711,-4.590747,9.072498,5.365964,2.482628],[-3.033779,-8.917183,-5.140647,-2.424655,-0.657537,4.593468,5.959693,-2.927675,7.638293,-9.154997,-0.900671],[4.567132,8.362041,0.964068,-4.435838,-9.278660,3.204580,3.333035,-7.173552,-5.696376,-8.513621,9.366895],[1.554750,1.087502,-3.023484,7.512548,8.819478,3.756893,5.392023,4.805874,-0.221036,-1.770947,-8.691129],[8.727991,9.530693,3.048388,7.761857,5.725736,-0.877605,-0.409648,-0.157395,7.640669,-8.892473,-0.937180],[-0.268829,6.478790,0.762420,-1.620858,9.786044,1.954536,8.522286,-5.204116,2.399748,5.151436,9.713927],[-4.672957,7.000841,3.911413,-0.109364,0.308818,0.386712,1.016116,-7.076353,-1.585432,4.500008,-9.969884],[-9.855239,-1.975850,-7.915926,1.154191,0.746731,-2.246831,5.236038,-4.465636,6.738450,-8.407248,-5.456373]],[[-0.907245,0.816470,8.016937,-9.222227,3.922234,-9.831732,-6.663908,-8.702503,-8.378329,0.761885,-5.815251],[-6.269107,-8.341662,1.422513,-1.459961,7.352156,-3.758717,3.648440,7.376774,-3.786233,-9.407940,-3.647800],[5.403863,-5.898342,-7.265400,-0.445331,8.060631,6.623559,1.980448,-4.984618,4.526864,-1.494849,2.675467],[3.249157,6.055585,8.689343,-6.917862,-7.364357,-2.968048,-2.907377,-1.869807,-4.411972,2.094811,8.998645],[-2.623761,5.736450,5.253195,1.486674,3.417367,-6.187091,-4.055766,0.076987,7.861659,2.624748,-0.290844],[1.317843,-2.372296,-0.048016,8.111997,-8.212123,-1.836217,8.648997,4.496019,-4.441123,4.221007,1.078069],[-2.841578,7.855314,-4.941687,-1.274165,-1.913895,5.023986,8.608964,-3.268595,-7.243475,-7.563760,-4.428616],[-4.799268,-6.102542,6.829919,1.918560,-1.426963,0.259614,-5.750080,-0.558955,-5.387669,-1.015134,5.636321],[-2.960661,-2.288432,2.221616,9.620222,5.272453,2.343444,-2.815993,5.146236,-7.668221,1.789791,3.919336],[0.755089,-4.080019,-9.586117,-4.960339,-8.039020,-0.439876,0.730318,4.956246,8.516751,-8.512949,7.263555]],[[0.254781,5.815825,-1.937470,6.125287,-5.170937,2.858288,4.179357,5.936701,4.238278,-1.401643,-1.428595],[6.007474,-7.547023,-6.138113,-5.588909,1.226247,4.505818,7.810046,3.071985,7.671729,7.354063,7.351648],[2.386322,-0.649194,-1.958499,-7.477541,-0.282573,1.274495,-8.176904,-5.834176,8.628606,8.361703,-4.601471],[-1.875809,7.536329,1.053855,-1.164393,8.163566,9.455979,-6.542604,-5.133957,-7.373129,8.012594,8.176760],[-6.241125,-0.819141,7.148301,-0.951536,-1.417525,-3.951331,-0.230423,-5.486704,-4.522203,-1.081510,-1.749206],[1.022535,9.116865,4.189487,9.945172,1.516112,-6.506786,5.623492,9.106661,5.843251,-4.238870,0.768643],[8.579650,5.802905,-0.761704,8.942987,5.066823,6.671907,8.161466,3.140571,-2.795133,-1.419125,-0.486954],[-6.511527,1.405114,3.740993,1.291046,-7.047966,-4.175759,-0.290301,-8.175005,1.860009,8.384223,-2.914600],[-8.204776,4.302969,-3.517898,2.309310,-9.224532,-9.996218,-3.009967,4.773826,4.222318,-8.105509,-5.619267],[-9.766758,0.192689,-9.220818,-8.324240,3.316911,-2.933542,8.063622,-9.862903,3.962178,7.691866,-9.300715]],[[1.964268,5.854045,5.200780,-2.485253,2.323216,-5.876020,0.096352,8.103607,-8.936051,-4.238016,6.812251],[7.292321,-7.027582,-1.919328,8.217501,3.684552,0.438123,9.132777,3.685335,-3.501711,-6.280212,9.882523],[9.452645,7.854637,2.662768,-4.775738,-4.323696,-5.942083,-9.306638,-9.304211,5.590447,-5.790175,-8.853376],[7.654168,0.747400,-2.594610,4.617077,0.206992,-0.255198,-2.730334,-0.435050,0.239728,-5.357193,-8.219950],[-5.417195,-8.836719,-8.690794,-5.991284,-6.369729,-8.053269,2.877333,3.963353,-3.879125,8.718852,-2.770474],[-6.140366,-3.464177,3.817656,8.183842,6.136447,-4.988376,9.843063,-7.697017,3.845977,-2.806799,2.538764],[6.554030,-1.970229,2.999960,-5.798223,5.877316,0.613208,-3.986727,-2.276778,-8.744251,-8.324019,-2.032979],[8.310480,3.595103,1.228069,8.024891,-8.725909,-4.745836,-0.611961,-9.645115,4.291278,-8.341568,-9.956724],[6.495193,-1.893071,-1.716651,-9.994319,6.240696,-1.665525,-6.624843,-3.518224,-3.722831,-1.628557,8.329576],[-9.065294,-1.555828,2.564242,-1.428758,8.674949,-8.556065,7.296581,-7.490896,2.974610,-8.349595,7.842969]],[[-8.873569,-0.848872,-8.643493,3.813463,2.213984,5.085088,9.527397,-6.503976,-7.683887,0.690606,-1.582410],[-0.846179,-3.757584,-4.247138,5.258383,5.154615,6.106289,-9.980106,2.566972,7.873203,5.474845,-6.442442],[6.828885,0.988182,-9.606264,-8.943059,2.076988,-7.344019,7.802731,-2.662740,-8.381590,-4.639297,8.153728],[2.338022,-2.581729,-0.190544,1.645433,-8.314481,0.822201,4.093890,-6.790321,-2.675186,-3.644952,6.140546],[7.064060,-4.520154,5.261410,3.217070,9.738587,6.280961,9.058864,0.037570,-9.080905,9.254304,1.565945],[-5.595570,6.103305,-4.891958,2.615846,3.575942,1.090943,-0.019526,-2.909740,-9.242195,-9.929961,5.647925],[5.330011,-0.863850,-5.643913,4.444827,-5.298596,2.171436,3.187912,0.655995,2.361016,4.084888,-4.407366],[9.396361,-9.151039,-2.386575,-5.398077,-4.674859,7.507502,6.125911,3.556375,1.350330,-4.219757,9.554036],[-0.696825,-3.899855,8.606083,3.195666,6.678263,-3.967350,-5.995688,-1.965525,-9.569141,-9.694515,-5.196202],[2.840685,-9.345536,9.358775,9.483514,-3.466869,-9.804862,0.971912,2.204489,0.689058,0.604979,-7.902412]],[[0.319321,-4.717582,9.869157,0.784473,7.808982,8.483137,5.566198,-2.687424,6.601685,1.656450,-4.947059],[0.293933,9.125459,-3.670743,-8.820089,-1.965786,-7.547883,4.643438,3.898786,8.355524,6.131409,-2.006418],[4.304605,6.606296,-3.474294,-0.562984,3.638654,-8.264670,3.628894,-1.731909,4.098070,4.975430,8.520647],[3.348394,1.613764,2.203292,-7.628198,8.065074,9.313224,-0.850308,5.095682,-9.606507,4.228095,2.638445],[2.095030,-8.395442,-5.868213,-0.299222,5.910804,-1.924088,-1.903554,3.058621,-9.488333,7.859202,-4.679081],[4.264989,-7.472021,-5.210983,-4.401440,-8.245370,6.128323,-2.895407,-3.125335,-5.154960,-7.181866,-4.434911],[-5.649195,9.833615,4.953484,-2.801415,3.956936,1.647444,4.439331,0.868021,-5.560319,-4.497853,-9.516052],[1.261809,5.546231,-9.689349,3.399170,7.239591,8.713555,-2.825894,5.594270,-4.504248,-1.069976,-7.728328],[0.474873,8.427163,-7.664599,-3.494098,-6.724996,0.432725,1.838661,9.016157,4.255892,-7.816822,-3.979323],[9.745162,-7.124887,-2.749253,7.890804,-6.693719,-1.241790,-2.686910,6.955797,8.316436,8.446241,-1.720072]]], dtype = "float32")#candidate|20610|(11, 10, 11)|const|float32
bop_20611 = relay.less(call_20608.astype('bool'), relay.reshape(const_20610.astype('bool'), relay.shape_of(call_20608))) # shape=(11, 10, 11)
bop_20614 = relay.less(call_20609.astype('bool'), relay.reshape(const_20610.astype('bool'), relay.shape_of(call_20609))) # shape=(11, 10, 11)
func_15785_call = mod.get_global_var('func_15785')
func_15788_call = mutated_mod.get_global_var('func_15788')
var_20635 = relay.var("var_20635", dtype = "float32", shape = (162,))#candidate|20635|(162,)|var|float32
call_20634 = relay.TupleGetItem(func_15785_call(relay.reshape(var_20635.astype('float32'), [9, 3, 6])), 4)
call_20636 = relay.TupleGetItem(func_15788_call(relay.reshape(var_20635.astype('float32'), [9, 3, 6])), 4)
output = relay.Tuple([bop_20611,call_20634,var_20635,])
output2 = relay.Tuple([bop_20614,call_20636,var_20635,])
func_20639 = relay.Function([var_20635,], output)
mod['func_20639'] = func_20639
mod = relay.transform.InferType()(mod)
var_20640 = relay.var("var_20640", dtype = "float32", shape = (162,))#candidate|20640|(162,)|var|float32
output = func_20639(var_20640)
func_20641 = relay.Function([var_20640], output)
mutated_mod['func_20641'] = func_20641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18787_call = mod.get_global_var('func_18787')
func_18788_call = mutated_mod.get_global_var('func_18788')
call_20648 = func_18787_call()
call_20649 = func_18787_call()
output = relay.Tuple([call_20648,])
output2 = relay.Tuple([call_20649,])
func_20673 = relay.Function([], output)
mod['func_20673'] = func_20673
mod = relay.transform.InferType()(mod)
output = func_20673()
func_20674 = relay.Function([], output)
mutated_mod['func_20674'] = func_20674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15990_call = mod.get_global_var('func_15990')
func_15992_call = mutated_mod.get_global_var('func_15992')
call_20677 = func_15990_call()
call_20678 = func_15990_call()
func_6539_call = mod.get_global_var('func_6539')
func_6541_call = mutated_mod.get_global_var('func_6541')
call_20712 = func_6539_call()
call_20713 = func_6539_call()
func_14971_call = mod.get_global_var('func_14971')
func_14973_call = mutated_mod.get_global_var('func_14973')
call_20714 = relay.TupleGetItem(func_14971_call(), 1)
call_20715 = relay.TupleGetItem(func_14973_call(), 1)
func_9510_call = mod.get_global_var('func_9510')
func_9511_call = mutated_mod.get_global_var('func_9511')
call_20723 = relay.TupleGetItem(func_9510_call(), 2)
call_20724 = relay.TupleGetItem(func_9511_call(), 2)
func_5566_call = mod.get_global_var('func_5566')
func_5567_call = mutated_mod.get_global_var('func_5567')
call_20725 = relay.TupleGetItem(func_5566_call(), 0)
call_20726 = relay.TupleGetItem(func_5567_call(), 0)
func_7246_call = mod.get_global_var('func_7246')
func_7248_call = mutated_mod.get_global_var('func_7248')
call_20732 = func_7246_call()
call_20733 = func_7246_call()
func_12849_call = mod.get_global_var('func_12849')
func_12850_call = mutated_mod.get_global_var('func_12850')
call_20734 = relay.TupleGetItem(func_12849_call(), 0)
call_20735 = relay.TupleGetItem(func_12850_call(), 0)
func_4808_call = mod.get_global_var('func_4808')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_20758 = func_4808_call()
call_20759 = func_4808_call()
output = relay.Tuple([call_20677,call_20712,call_20714,call_20723,call_20725,call_20732,call_20734,call_20758,])
output2 = relay.Tuple([call_20678,call_20713,call_20715,call_20724,call_20726,call_20733,call_20735,call_20759,])
func_20761 = relay.Function([], output)
mod['func_20761'] = func_20761
mod = relay.transform.InferType()(mod)
output = func_20761()
func_20762 = relay.Function([], output)
mutated_mod['func_20762'] = func_20762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16274_call = mod.get_global_var('func_16274')
func_16275_call = mutated_mod.get_global_var('func_16275')
call_20771 = relay.TupleGetItem(func_16274_call(), 0)
call_20772 = relay.TupleGetItem(func_16275_call(), 0)
func_7610_call = mod.get_global_var('func_7610')
func_7612_call = mutated_mod.get_global_var('func_7612')
call_20775 = func_7610_call()
call_20776 = func_7610_call()
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
const_20778 = relay.const([2.766011,-8.083272,4.535296,-6.538061,5.700695,-7.499455,-5.009731,2.380440,7.730326,7.892329,6.996868,-5.447045,7.698807,-2.096436,6.444476,1.895435,4.444736,-1.202023,2.069770,0.528389,-8.004437,-7.100718,7.433798,5.004525,-6.463922,6.964742,4.038932,5.844896,-8.455969,-9.126743,-1.177804,8.353868,0.190274,-8.914611,-6.483064,6.083748,7.807582,0.326433,0.507830,5.126690,9.650541,0.227927,5.363211,8.419536,-2.527479,6.388332,4.110614,-0.811383,-6.829905,5.045005,-7.054320,8.547785,-1.324689,-5.815511,-7.400606,7.936061,0.795044,-7.452959,-6.281821,-6.878965,3.015002,0.794794,-9.165259,-1.436901,-4.181388,2.324785,-7.651072,2.047565,9.738877,7.413607,3.733182,-4.670108,1.546702,4.588101,-5.080888,5.093753,1.200810,6.184056,-2.527446,-0.114844,3.470688,-8.053539,0.789130,2.847560,1.016927,-3.959396,8.279600,6.981326,3.396202,-9.049461,0.721661,-6.989950,-9.440260,-7.978549,6.260103,-1.481605,0.306004,-7.792544,-4.602761,2.348187,-2.482324,-3.839354,-7.011818,4.396110,4.692017,-0.918939,6.009849,9.248988,-8.846234,-1.941691,7.031647,-5.109460,2.609800,2.713182,-3.320760,-0.660854,-9.054618,9.772162,-9.886352,-4.717077,-9.009586,-2.706807,0.397898,-5.798079,-8.331120,9.144767,9.386255,-2.986121,6.894552,-9.604737,-7.693909,-2.140962,1.535127,-4.906987,-6.017423,2.492824,3.448273,-2.216361,-5.641939,-3.073687,-0.136657,-3.523760,6.338322,-1.125835,-2.043885,7.888256,0.309849,5.469582,5.164495,6.264389,-5.074120,-6.770051,-9.197193,0.157668,7.019549,1.605429,4.347975,6.073426,-8.277144,6.722886,-7.885407,-6.916153,7.314041,5.734327,6.535217,-5.369536,0.572601,1.922787,-0.780861,-6.503756,-6.071412,5.782750,3.491342,-4.942298,-3.713504,-7.636751,-9.868148,6.797771,-1.599017,-8.062812,7.467670,-7.663026,-2.027779,-2.458081,-6.021847,-2.466289,6.452105,-5.229609,5.761389,-9.073948,0.968369,-8.644163,3.770932,9.090063,-5.422999,1.506210,-3.256765,3.564510,9.144460,1.951858,-9.392313,-7.550299,1.142719,1.404416,-9.029976,1.193700,-7.275158,2.487916,7.596251,-4.980945,8.641446,5.004494,5.535518,-5.870488,-4.066620,-2.115455,4.812454,-7.788469,6.349141,5.283528,-1.424651,6.798103,6.438060,-7.432846,8.297488,-0.589376,0.140642,1.657689,-7.513879,2.547467,2.988362,-4.119897,5.461149,-7.539557,-8.303619,-2.092129,-1.770897,9.141808,-2.612073,-7.565452,-5.113530,-8.732619,-9.688370,-9.686697,4.823579,2.525751,6.140485,-7.757540,7.745117,-6.973864,-9.133530,-6.914097,-6.224109,-1.809684,3.042457,2.109747,-5.121963,2.232810,6.172520,2.927726,-4.376082,4.441413,-8.798908,-9.569227,-8.422808,8.361459,0.434800,3.414803,-8.868108,-7.301716,-2.680709,5.649521,-3.382839,8.436609,8.707537,-9.653099,-8.870276,1.806609,9.017616,-9.985174,-9.013299,2.502704,8.396188,-7.301603,-3.969201,8.370487,-3.866597,0.576828,-9.188955,-8.568793,-2.455964,4.381680,-5.642746,4.777106,-6.443658,-1.238457,-1.541119,-7.267932,-5.523047,4.624379,1.712166,-5.683222,7.089062,-2.804017,-0.197971,6.950705,-0.738078,8.397896,-8.301744,-3.745406,-0.786854,8.540662,-2.191369,-8.218773,-7.994955,-1.501036,2.282627,0.207358,-0.719561,-2.223584,-5.870915,9.575360,-6.297162,-8.134295,-9.835276,2.485221,1.920353,6.266367,-2.501058,-8.388261,0.929608,-4.664796,5.772215,4.909747,-8.670390,6.137509,-7.556934,3.366404,2.305563,2.265492,-4.721200,8.050102,7.738462,-1.466322,-0.500460,8.514258,5.475734,-2.270137,1.435977,-4.835805,9.988969,3.069625,9.225726,-7.934072,-0.091482,-8.198880,-3.246390,-1.060982,-7.333261,0.738217,1.447791,-9.033849,8.465606,-5.761521,-3.781245,-6.207189,-1.225393,1.082298,-3.139226,-7.095722,3.829579,8.745609,-5.900276,-1.626899,-8.334789,-9.900485,-0.487463,-2.130164,1.646394,-8.992549,-0.107007,-2.385112,-0.633548,-4.088987,2.280167,7.314317,5.864230,6.012639,-0.779385,-4.511141,4.434705,2.336730,9.794551,5.509362,-0.310777,-4.744090,-4.073591,6.533474,9.115848,0.431431,-8.061548,4.446435,-9.379990,-6.533725,-6.640786,7.319728,2.056544,2.227183,0.313716,3.989944,6.943639,-3.158674,-5.723720,-1.451710,5.265694,9.979077,2.774783,4.437655,4.457552,-5.142682,-0.171283,3.312997,-0.368802,-2.425433,-0.790462,9.546644,3.193143,6.618067,6.300981,6.640929,-0.021728,1.154073,-9.664221,5.779966,-2.080765,9.718228,2.524774,-9.690441,-6.207273,0.648809,-0.513786,-7.965300,-9.504871,-1.291570,6.549801,-6.235468,-7.541018,8.431983,-6.031237,-3.305771,0.644570,9.874418,-5.343939,-9.798494,-1.982351,7.131432,9.280093,7.559813,-4.980636,5.517057,2.224714,2.142274,5.220044,-7.125496,8.727827,-3.874607,1.326266,0.091531,3.793085,-4.983430,-3.423083,4.251930,5.326718,0.734147,-0.603162,7.531347,8.613274,0.304584,-6.749101,-5.237252,-2.260323,-7.069143,1.996006,5.267805,1.759857,-1.069434,-5.612908,1.852968,-1.668935,1.679391,-8.128564,6.909601,3.110683,-7.820369,-1.351355,7.371979,-8.005023,-3.442170,0.019286,-2.050410,3.413474,-1.534968,-1.338589,5.360041,5.287736,8.322516,-1.782776,6.442360,9.717323,2.478170,-5.027574,-5.056350,-8.598772,-3.007034,7.263767,-7.802997,-5.008105,-4.949943,1.155305,3.356538,-5.791000,-7.800027,6.334596,-4.743244,8.545746,9.840069,-8.074760,-6.522410,-2.077080,-2.963590,-6.031551,5.336294,-3.083777,1.590317,0.752738,-1.289782,-1.150010,-1.309574,-5.892902,-4.346611,-4.461118,0.158853,-9.534841,9.871243,7.910576,-3.075216,2.718017,-0.905430,5.439060,0.138320,-2.088684,-9.645024,-1.812612,7.321778,3.080484,-4.270673,5.317804,-1.216737,-2.854771,-0.887022,7.556712,7.821235,-6.121671,-3.440222,0.390435,8.507114,9.784634,-4.211180,-7.679569,-3.855538,-4.111348,-4.613587,3.488367,2.516011,-1.727870,8.933394,-3.655088,-1.674829,-6.360227,-5.726127,-0.740323,5.197001,2.164074,6.475275,7.944672,9.036993,5.827591,9.809207,-7.614195,-0.148621,7.880418,-4.789596,-9.776196,-0.931072,-0.415833,-7.447629,-2.242396,-2.404829,-9.285711,-8.042033,-1.912487,7.668465,6.194511,-8.013018,9.118159,-4.254838,-7.702343,-6.140770,-2.706641,0.280959,9.949696,7.048284,3.963359,9.518975,-2.965217,-8.142124,6.699864,-3.693670,-3.710199,-9.349890,3.837546,-3.012298,7.156404,-3.837428,-1.628625,-0.920715,7.351381,0.331962,-1.788456,-5.169122,-6.559425,0.592376,-5.102887,-7.136501,-3.065335,-4.937019,-3.087546,9.204124,4.424542,2.828102,3.215262,5.494339,7.803336,6.968203,2.242274,-9.792464,-0.207675,4.563455,9.421295,-2.912263,-1.919478,1.036566,2.796354,1.065057,-4.810670,-9.824358,-5.851495,4.435858,3.532812,2.530417,-2.351077,-3.443451,0.253146,-7.918723,-7.979257,-4.630309,5.114345,9.060937,-9.866229,-6.233167,4.065779,-5.715002,-9.442028,2.692105,0.430741,5.636442,7.119625,-4.197051,2.141705,4.097892,2.700601,5.482886,-1.406407,-1.430515,5.002099,0.552729,8.278983,-8.672384,4.925364,5.304794,2.870787,1.909288,0.762236,4.489810,-8.088718,-7.427674,2.213032,-0.914000,-1.467541,-8.790440,2.704370,-8.731623,-8.922162,9.758320,-9.035687,-7.643312,1.826960,-4.864198,4.495868,9.340284,0.595422,-1.283813,8.655876,-4.427351,6.095982,0.704435,-2.727569,9.656370,0.291183,4.071552,-9.369455,4.145302,1.205387,-4.958449,4.779851,-7.612410,7.434700,0.952306,3.449531,-2.360052,2.876377,-5.524088,5.922670,-0.121923,-5.843439,-4.536074,6.328430,-3.791847,-6.675429,8.802025,-6.147365,-8.129421,-0.316353,3.174255,0.919787,-1.762484,5.945433,-8.357046,8.199694,7.201133,-6.460797,-2.258745,7.780880,-1.975139,2.116708,-9.965765,3.597424,0.797830,-4.945817,-4.671215,-5.533166,-9.390179,5.705168,-2.915397,6.288582,-8.940931,6.798295,3.082877,8.308050,-4.683163,-9.956500,-7.253305,5.276523,3.536166,-1.401198,1.076571,6.013719,7.504707,6.695294,3.874819,0.272614,-9.816094,-2.094011,-6.549416,-7.475705,-3.334080,3.385044,-2.945106,-9.540383,-9.875306,6.416476,5.543193,-2.155053,8.568812,-8.786321,-2.406440,-0.654030,-6.328803,5.458534,-5.405388,-3.374313,-7.660479,-2.883902,-8.873833,-1.270768,4.258796,7.671176,-4.602566,1.366482,2.420035,-6.284175,-4.076253,-9.411238,9.536280,9.502849,4.665338,-3.063836,7.090734,9.661408,3.335249,-6.709676,9.693184,9.076521,9.683572,-0.657230,-9.317779,7.974970,3.756124,-9.677541,0.361000,4.796400,0.103821,-2.042572,-1.925889,-3.495970,5.705368,-9.301923,-2.425269,6.547287,6.345959,-4.906731,-8.457961,-7.619387,-2.855948,1.300264,-0.452212,-1.464381,-2.538613,-2.526464,-3.388102,2.714579,6.625211,4.126721,0.735012,-0.156135,-8.433950,4.274178,-9.553283,-3.925017,-4.759434,-0.314596,-3.472171,-0.470606,8.241810,7.001846,6.679487,7.436434,4.561129,5.321532,8.650219,6.088493,-9.072277,4.042186,-1.037932,4.945767,6.785231,8.370034,6.054660,-4.851376,-5.074374,-1.209454,-1.230545,-8.945657,-4.543224,7.729593,9.926700,7.964364,8.289017,-1.492515,8.077372,-5.686343,3.553887,-7.289988,5.435976,3.520101,5.087826,9.679590,-2.648909,7.764620,4.505780,-3.480838,7.985304,4.736210,-0.504397,-6.238137,2.349901,-4.230604,-5.575262,7.923694,-0.776032,5.257790,2.343402,3.107971,-2.025102,-2.493060,3.789543,1.544897,6.619311,8.545883,-5.212348,3.391224,-0.367253,1.834358,-2.637842,-7.654059,2.652749,-6.413097,9.347509,-2.151212,-8.951465,2.611622,-9.736797,-7.770188,9.522582,5.230440,7.392422,-1.865663,2.305157,-9.624976,-5.110483,-8.640948,-0.608716,-3.193412,-6.335331,-0.413284,-8.218148,2.884044,-5.865335,-2.515345,8.207944,9.396133,-7.581088,4.556805,1.887651,1.170009,-7.007534,-2.526977,5.200990,-2.541366,2.661180,-8.128567,0.977768,-4.032154,-4.976079,1.182838,0.416325,-2.883385,-7.990293,4.772334,-3.863073,-6.729455,-8.449014,6.086661,5.245976,4.794249,-2.294154,-2.274279,0.818065,7.066827,1.220324,-7.988596,-0.905457,-9.185618,-7.147998,-3.274030,5.691150,2.493195,0.975158,6.074010,8.837702,-9.738993,-5.594093,2.756942,1.700345,3.778422,4.587041,0.507083,2.104856,2.343992,7.434752,-8.608226,-7.358465,-8.914301,-7.825824,-6.496337,7.611460,-3.107927,-3.411885,3.530302,-0.080227,-5.381682,-7.360593,0.499651,-0.495028,6.934375,7.913954,-0.736622,-7.981342,8.782936,-0.049199,-6.481135,-7.732046,7.724607,-1.912094,1.015095,-8.490186,-3.450205,0.727193,-9.244750,-7.312287,-4.565656,4.595725,7.281396,6.547628,-1.963240,4.601422,4.681442,5.919408,-1.726216,-4.371405,8.690880,8.527294,9.150667,1.213658,-6.995050,-9.085656,8.272166,2.000956,4.700617,-1.394491,-2.728661,-1.148290,3.567628,8.863892,2.767850,9.276491,-0.483454,-4.352465,-8.072120,3.072981,-3.729690,2.849818,3.302361,-5.652230,0.387273,-7.466229,-5.941216,-6.222208,8.400080,9.752813,3.664175,0.487354,-0.181312,4.453735,9.834621,3.845094,-5.734453,-3.200978,-5.791732,-1.154385,1.483886,3.976259,0.100908,9.665512,1.396906,7.314256,-6.425464,-8.039944,4.793185,2.002902,-9.564854,-7.288336,4.445018,-9.639475,5.825912,6.651783,-9.655311,9.949777,-0.143561,-8.622636,7.848496,-7.536228,-5.317097,-2.673596,6.190596,-6.238044,9.832947,-9.704223,3.701600,-4.182845,-1.585251,1.370122,-2.951348,-2.046944,-2.977056,5.302979,1.907124,6.297043,-7.878641,5.729504,5.083945,-4.590190,-0.294442,7.155923,2.458334,-4.696771,7.778878,-7.345135,-6.408776,1.595229,7.734920,4.240336,-1.613587,-3.667177,-8.319621,-8.138056,-8.708172,-1.470926,-6.034925,-6.485422,6.588179,1.858019,6.290417,1.680582,-0.488303,-3.950548,5.053483,-7.118324,-7.304739,-2.013038,-8.059692,-9.603013,4.236521,6.178517,-7.859997,-8.047377,3.985689,-4.502023,6.785990,-8.698152,-3.244789,-6.872808,-8.605234,-2.219891,1.829629,-3.058253,2.358885,-0.854155,0.397624,-2.301927,-0.520474,-4.580915,-5.837522,-5.975991,-6.781145,-8.043827,0.182519,-4.663261,8.506599,-8.436041,2.178854,3.696404,9.870883,-1.505835,1.375027,-7.350088,9.476263,1.909185,9.653932,2.581832,8.860095,8.076442,-6.847373,-5.777598,-7.637262,6.772376,6.319461,-2.528490,-4.902489,-2.783118,-0.319359,2.741041,8.813856,1.423701,-9.570624,-9.682931,-5.739360,-2.811005,6.824331,1.106080,3.521136,2.866951,0.184468,5.253169,-4.869656,8.106175,-4.053815,-2.698733,-8.827376,6.231411,2.337387,-8.738735,8.637910,-3.702697,9.947661,-3.034890,-3.050815,-0.850605,7.766504,-9.021218,0.194547,-6.964489,-8.936745,7.178494,6.535759,-9.857100,-6.503375,-3.826963,3.450001,-9.456928,-9.423400,-4.750763,-0.414732,-7.697268,-9.856115,-1.657122,5.250041,-0.322360,4.922849,-5.462490,-8.932135,0.280744,9.629819,-3.246405,7.272576,7.970349,5.659323,-1.602832,-3.122139,0.158456,4.912911,-9.481439,3.503773,0.617994,-9.848350,1.009535,-4.645664,6.733444,-3.438215,-0.505908,-3.599501,-3.853752,0.075173,-2.159151,6.572964,2.247556,7.475808,3.988562,-6.087987,3.529910,-3.935370,3.059628,-5.747919,-1.805570,-6.076901,-2.558397,9.487715,-7.099063,3.178946,-2.298684,-1.123907,-1.986796,-1.396022,-5.080693,-9.502414,4.125472,-1.587815,0.379397,-5.299600,-9.255733,-4.103654,0.733791,7.564179,1.913355,-8.681319,6.143709,6.842409,-3.769199,-5.594464,-1.300585,3.346472,2.733814,-6.849625,-4.028472,7.580675,4.392866,5.195125,7.606506,-1.138562,0.648715,-6.289186,8.432997,-8.329786,2.936852,6.062272,0.143704,-4.667909,-6.909703,2.914588,3.439478,3.765019,3.597767,0.274796,0.516608,2.809439,8.530631,-5.869184,3.196645,-7.489962,0.282850,-3.016298,-1.000773,0.496512,1.765003,7.510340,3.508079,6.282544,0.794045,7.940273,-9.977464,-5.819689,7.817250,-4.845583,7.560240,7.043049,-2.559072,-5.925055,-1.205181,-2.063394,-5.333958,-8.232404,-4.057279,-1.098956,0.823001,7.124725,-8.522277,6.165985,-2.497145,-8.855274,-6.654804,-3.505054,5.285052,-1.588945,-2.058171,3.298421,-6.026957,5.588847,9.169912,1.684311,2.353007,-1.554789,-8.252751,5.066363,-9.287381,-0.036471,-0.278750,7.851002,3.609829,1.698179,-8.523893,2.575391,5.797794,-4.861391,-2.783716,8.328024,-0.254948,-6.238215,5.111381,1.425374,0.684635,-2.771611,-8.572819,-3.030669,0.998232,6.606403,-1.394588,6.680646,6.867194,5.191371,0.181721,-5.042340,-4.006413,-1.643705,-3.686858,9.132567,0.655596,3.068128,-9.925458,-4.293958,-3.296340,3.504733,-1.297460,-6.881025,-5.957345,4.040557,-0.355832,5.500575,-7.693987,-4.328925,2.172916,5.669829,4.098005,-4.132312,-2.109774,-8.436310,2.004006,4.728247,-6.662899,8.952980,1.152849,-3.733793,-8.745349,4.567370,9.237035,-4.546083,2.419436,5.937350,-0.810480,-0.721777,-5.097572,0.996737,3.865482,1.503154,-1.870979,-5.953193,-7.447684,1.159926,8.719599,0.861850,-2.451401,8.557703,0.008233,4.210424,5.815606,-4.953703,-8.016678,2.694678,8.433583,6.257392,0.629320,9.999223,-3.045547,9.160161,4.405468,-4.424227,-9.764337,-0.135845,-1.043901,4.333386,9.910491,-6.587932,-8.273611,2.878012,-0.934943,3.116937,0.615566,6.939988,-9.296238,4.588322,-3.078418,7.676619,3.818664,-1.242323,7.882404,2.179653,-2.254193,-7.845027,2.334915,-4.105732,-4.663110,-2.868824,-5.037093,1.989790,-7.245874,6.235569,-9.970643,5.703836,-4.816246,-4.497622,3.222638,-5.450284,4.960928], dtype = "float32")#candidate|20778|(1512,)|const|float32
call_20777 = relay.TupleGetItem(func_2804_call(relay.reshape(const_20778.astype('float32'), [14, 12, 9])), 0)
call_20779 = relay.TupleGetItem(func_2807_call(relay.reshape(const_20778.astype('float32'), [14, 12, 9])), 0)
func_16090_call = mod.get_global_var('func_16090')
func_16092_call = mutated_mod.get_global_var('func_16092')
call_20782 = relay.TupleGetItem(func_16090_call(), 0)
call_20783 = relay.TupleGetItem(func_16092_call(), 0)
func_7040_call = mod.get_global_var('func_7040')
func_7041_call = mutated_mod.get_global_var('func_7041')
call_20822 = relay.TupleGetItem(func_7040_call(), 0)
call_20823 = relay.TupleGetItem(func_7041_call(), 0)
func_10065_call = mod.get_global_var('func_10065')
func_10067_call = mutated_mod.get_global_var('func_10067')
call_20828 = relay.TupleGetItem(func_10065_call(), 0)
call_20829 = relay.TupleGetItem(func_10067_call(), 0)
func_8471_call = mod.get_global_var('func_8471')
func_8473_call = mutated_mod.get_global_var('func_8473')
call_20833 = func_8471_call()
call_20834 = func_8471_call()
output = relay.Tuple([call_20771,call_20775,call_20777,const_20778,call_20782,call_20822,call_20828,call_20833,])
output2 = relay.Tuple([call_20772,call_20776,call_20779,const_20778,call_20783,call_20823,call_20829,call_20834,])
func_20851 = relay.Function([], output)
mod['func_20851'] = func_20851
mod = relay.transform.InferType()(mod)
mutated_mod['func_20851'] = func_20851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_20851_call = mutated_mod.get_global_var('func_20851')
call_20852 = func_20851_call()
output = call_20852
func_20853 = relay.Function([], output)
mutated_mod['func_20853'] = func_20853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5506_call = mod.get_global_var('func_5506')
func_5508_call = mutated_mod.get_global_var('func_5508')
call_20864 = relay.TupleGetItem(func_5506_call(), 0)
call_20865 = relay.TupleGetItem(func_5508_call(), 0)
uop_20873 = relay.sigmoid(call_20864.astype('float32')) # shape=(14, 6, 13)
uop_20875 = relay.sigmoid(call_20865.astype('float32')) # shape=(14, 6, 13)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_20879 = func_4854_call()
call_20880 = func_4854_call()
output = relay.Tuple([uop_20873,call_20879,])
output2 = relay.Tuple([uop_20875,call_20880,])
func_20900 = relay.Function([], output)
mod['func_20900'] = func_20900
mod = relay.transform.InferType()(mod)
output = func_20900()
func_20901 = relay.Function([], output)
mutated_mod['func_20901'] = func_20901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5567_call = mutated_mod.get_global_var('func_5567')
call_20947 = relay.TupleGetItem(func_5566_call(), 0)
call_20948 = relay.TupleGetItem(func_5567_call(), 0)
func_7233_call = mod.get_global_var('func_7233')
func_7235_call = mutated_mod.get_global_var('func_7235')
call_20955 = func_7233_call()
call_20956 = func_7233_call()
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_20959 = func_7060_call()
call_20960 = func_7060_call()
output = relay.Tuple([call_20947,call_20955,call_20959,])
output2 = relay.Tuple([call_20948,call_20956,call_20960,])
func_20962 = relay.Function([], output)
mod['func_20962'] = func_20962
mod = relay.transform.InferType()(mod)
mutated_mod['func_20962'] = func_20962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_20962_call = mutated_mod.get_global_var('func_20962')
call_20963 = func_20962_call()
output = call_20963
func_20964 = relay.Function([], output)
mutated_mod['func_20964'] = func_20964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mod.get_global_var('func_7549')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_21000 = relay.TupleGetItem(func_7549_call(), 1)
call_21001 = relay.TupleGetItem(func_7551_call(), 1)
output = call_21000
output2 = call_21001
func_21002 = relay.Function([], output)
mod['func_21002'] = func_21002
mod = relay.transform.InferType()(mod)
output = func_21002()
func_21003 = relay.Function([], output)
mutated_mod['func_21003'] = func_21003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17139_call = mod.get_global_var('func_17139')
func_17141_call = mutated_mod.get_global_var('func_17141')
call_21014 = relay.TupleGetItem(func_17139_call(), 0)
call_21015 = relay.TupleGetItem(func_17141_call(), 0)
output = call_21014
output2 = call_21015
func_21025 = relay.Function([], output)
mod['func_21025'] = func_21025
mod = relay.transform.InferType()(mod)
mutated_mod['func_21025'] = func_21025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21025_call = mutated_mod.get_global_var('func_21025')
call_21026 = func_21025_call()
output = call_21026
func_21027 = relay.Function([], output)
mutated_mod['func_21027'] = func_21027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8495_call = mod.get_global_var('func_8495')
func_8496_call = mutated_mod.get_global_var('func_8496')
call_21041 = func_8495_call()
call_21042 = func_8495_call()
func_18787_call = mod.get_global_var('func_18787')
func_18788_call = mutated_mod.get_global_var('func_18788')
call_21071 = func_18787_call()
call_21072 = func_18787_call()
func_15990_call = mod.get_global_var('func_15990')
func_15992_call = mutated_mod.get_global_var('func_15992')
call_21079 = func_15990_call()
call_21080 = func_15990_call()
output = relay.Tuple([call_21041,call_21071,call_21079,])
output2 = relay.Tuple([call_21042,call_21072,call_21080,])
func_21087 = relay.Function([], output)
mod['func_21087'] = func_21087
mod = relay.transform.InferType()(mod)
mutated_mod['func_21087'] = func_21087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21087_call = mutated_mod.get_global_var('func_21087')
call_21088 = func_21087_call()
output = call_21088
func_21089 = relay.Function([], output)
mutated_mod['func_21089'] = func_21089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13191_call = mod.get_global_var('func_13191')
func_13192_call = mutated_mod.get_global_var('func_13192')
call_21134 = relay.TupleGetItem(func_13191_call(), 0)
call_21135 = relay.TupleGetItem(func_13192_call(), 0)
func_4525_call = mod.get_global_var('func_4525')
func_4528_call = mutated_mod.get_global_var('func_4528')
const_21161 = relay.const([True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,True], dtype = "bool")#candidate|21161|(675,)|const|bool
call_21160 = relay.TupleGetItem(func_4525_call(relay.reshape(const_21161.astype('bool'), [15, 9, 5]), relay.reshape(const_21161.astype('bool'), [15, 9, 5]), ), 1)
call_21162 = relay.TupleGetItem(func_4528_call(relay.reshape(const_21161.astype('bool'), [15, 9, 5]), relay.reshape(const_21161.astype('bool'), [15, 9, 5]), ), 1)
output = relay.Tuple([call_21134,call_21160,const_21161,])
output2 = relay.Tuple([call_21135,call_21162,const_21161,])
func_21166 = relay.Function([], output)
mod['func_21166'] = func_21166
mod = relay.transform.InferType()(mod)
mutated_mod['func_21166'] = func_21166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21166_call = mutated_mod.get_global_var('func_21166')
call_21167 = func_21166_call()
output = call_21167
func_21168 = relay.Function([], output)
mutated_mod['func_21168'] = func_21168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12175_call = mod.get_global_var('func_12175')
func_12177_call = mutated_mod.get_global_var('func_12177')
call_21179 = relay.TupleGetItem(func_12175_call(), 1)
call_21180 = relay.TupleGetItem(func_12177_call(), 1)
output = call_21179
output2 = call_21180
func_21204 = relay.Function([], output)
mod['func_21204'] = func_21204
mod = relay.transform.InferType()(mod)
output = func_21204()
func_21205 = relay.Function([], output)
mutated_mod['func_21205'] = func_21205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17450_call = mod.get_global_var('func_17450')
func_17452_call = mutated_mod.get_global_var('func_17452')
call_21268 = relay.TupleGetItem(func_17450_call(), 0)
call_21269 = relay.TupleGetItem(func_17452_call(), 0)
func_16090_call = mod.get_global_var('func_16090')
func_16092_call = mutated_mod.get_global_var('func_16092')
call_21274 = relay.TupleGetItem(func_16090_call(), 0)
call_21275 = relay.TupleGetItem(func_16092_call(), 0)
func_7610_call = mod.get_global_var('func_7610')
func_7612_call = mutated_mod.get_global_var('func_7612')
call_21284 = func_7610_call()
call_21285 = func_7610_call()
output = relay.Tuple([call_21268,call_21274,call_21284,])
output2 = relay.Tuple([call_21269,call_21275,call_21285,])
func_21308 = relay.Function([], output)
mod['func_21308'] = func_21308
mod = relay.transform.InferType()(mod)
output = func_21308()
func_21309 = relay.Function([], output)
mutated_mod['func_21309'] = func_21309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13677_call = mod.get_global_var('func_13677')
func_13679_call = mutated_mod.get_global_var('func_13679')
call_21381 = relay.TupleGetItem(func_13677_call(), 1)
call_21382 = relay.TupleGetItem(func_13679_call(), 1)
func_20900_call = mod.get_global_var('func_20900')
func_20901_call = mutated_mod.get_global_var('func_20901')
call_21395 = relay.TupleGetItem(func_20900_call(), 0)
call_21396 = relay.TupleGetItem(func_20901_call(), 0)
func_7470_call = mod.get_global_var('func_7470')
func_7473_call = mutated_mod.get_global_var('func_7473')
const_21423 = relay.const([-1,6,-6,9,-10,-8,9,10,5,10,-8,-2,-9,-5,5,3,6,1,-6,10,5,6,-9,9,6,8,10,-6,-10,-5,-10,-10,8,8,6,-9,8,-7,2,9,-5,3,8,6,2,-4,2,9,-5,-3,5,-2,-7,-9,4,8,6,7,-3,-3,-4,7,9,5,5,7,-10,-2,-9,-8,9,-4,-1,9,4,9,7,6,-4,-1,9,-8,8,-9,-10,-10,7,2,-5,-2,-10,-6,8,4,5,2,7,6,-9,2,2,-6,8,-6,8,-1,-10,-7,3,2,-1,1,-4,1,1,-3,-9,-3,9,-1,7,9,-3,8,10,-3,6,-8,2,-6,-5,6,-1,3,8,9,8,-7,-6,6,-4,-8,-2,3,-6,-6,9,6,-3,-2,-3,-8,-10,-1,-9,6,-3,-6,-1,-8,9,9,-8,-9,-4,-1,3,7,2,2,2,-7,-2,-1,-1,3,4,9,7,-2], dtype = "uint8")#candidate|21423|(180,)|const|uint8
const_21424 = relay.const([9,1,-9,-3,-6,-9,-3,5,8,-4,7,3,10,8,-2,-3,2,8,-9,-4,-9,10,-6,5,-3,4,-4,8,8,8,-4,2,7,9,10,-2,6,10,-7,7,1,9,-2,-3,-2,10,-2,-4,-10,-4,6,-1,8,-6,6,4,-9,-5,10,9,9,-8,10,9,-4,-2,8,3,-7,-10,4,-2,-7,-4,-7,8,2,6,-7,4,7,-10,-1,1,-3,1,-5,2,10,-10,9,-2,4,-3,-6,-10,2,7,6,3,9,9,-7,-7,-7,5,-2,4,-6,9,-5,4,-1,-3,1,8,-10,-5,8,-3,8,10,4,8,-3,3,-5,5,1,5,-4,3,10,10,-9,-2,10,7,-7,7,1,8,-8,-2,-3,-1,9,-2,4,-6,4,10,-1,-1,3,8,5,-9,-1,3,7,-2,10,7,7,-6,3,-6,-4,-5,-2,-10,1,3,10,7,-10,4,-4,-3,-4,1,-9,-6,-3,-2,3,5,1,5,1,-9,-10,2,-5,2,-6,-9,-1,7,-5,10,-1,4,-2,3,1,-6,-6,7,-5,-3,4,-5,-8,-9,-3,2,6,6,-5,3,3,-10,-10,-2,-6,8,-6,4,-7,-6,-2,6,4,-5,-3,6,-10,6,-1,-6,1,8,-7,3,5,-6,-10,6,4,-3,-2,2,-5,-1,-5,5,1,7,-8,-3,2,2,10,7,1,-1,-1,4,-1,4,2,-4,-5,-10,-3,-7,-2,8,9,8,-7,3,-1,-4,4,8,7,8,5,6,2,-5,-4,-6,8,5,2,3,-6,6,5,5,-8,-6,2,-2,-7,9,-10,6,-9,-5,-2,-4,7,8,6,4,8,-8,1,-7,7,-2,10,-4,1,-8], dtype = "int8")#candidate|21424|(330,)|const|int8
call_21422 = relay.TupleGetItem(func_7470_call(relay.reshape(const_21423.astype('uint8'), [30, 6]), relay.reshape(const_21424.astype('int8'), [330,]), ), 0)
call_21425 = relay.TupleGetItem(func_7473_call(relay.reshape(const_21423.astype('uint8'), [30, 6]), relay.reshape(const_21424.astype('int8'), [330,]), ), 0)
output = relay.Tuple([call_21381,call_21395,call_21422,const_21423,const_21424,])
output2 = relay.Tuple([call_21382,call_21396,call_21425,const_21423,const_21424,])
func_21430 = relay.Function([], output)
mod['func_21430'] = func_21430
mod = relay.transform.InferType()(mod)
output = func_21430()
func_21431 = relay.Function([], output)
mutated_mod['func_21431'] = func_21431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8702_call = mod.get_global_var('func_8702')
func_8703_call = mutated_mod.get_global_var('func_8703')
call_21608 = relay.TupleGetItem(func_8702_call(), 0)
call_21609 = relay.TupleGetItem(func_8703_call(), 0)
func_7233_call = mod.get_global_var('func_7233')
func_7235_call = mutated_mod.get_global_var('func_7235')
call_21631 = func_7233_call()
call_21632 = func_7233_call()
uop_21634 = relay.rsqrt(call_21608.astype('float64')) # shape=(12, 9, 15)
uop_21636 = relay.rsqrt(call_21609.astype('float64')) # shape=(12, 9, 15)
func_12647_call = mod.get_global_var('func_12647')
func_12649_call = mutated_mod.get_global_var('func_12649')
call_21641 = func_12647_call()
call_21642 = func_12647_call()
func_10991_call = mod.get_global_var('func_10991')
func_10992_call = mutated_mod.get_global_var('func_10992')
call_21645 = relay.TupleGetItem(func_10991_call(), 1)
call_21646 = relay.TupleGetItem(func_10992_call(), 1)
output = relay.Tuple([call_21631,uop_21634,call_21641,call_21645,])
output2 = relay.Tuple([call_21632,uop_21636,call_21642,call_21646,])
func_21649 = relay.Function([], output)
mod['func_21649'] = func_21649
mod = relay.transform.InferType()(mod)
output = func_21649()
func_21650 = relay.Function([], output)
mutated_mod['func_21650'] = func_21650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13963_call = mod.get_global_var('func_13963')
func_13964_call = mutated_mod.get_global_var('func_13964')
call_21671 = relay.TupleGetItem(func_13963_call(), 0)
call_21672 = relay.TupleGetItem(func_13964_call(), 0)
func_16855_call = mod.get_global_var('func_16855')
func_16856_call = mutated_mod.get_global_var('func_16856')
call_21680 = relay.TupleGetItem(func_16855_call(), 0)
call_21681 = relay.TupleGetItem(func_16856_call(), 0)
func_14922_call = mod.get_global_var('func_14922')
func_14923_call = mutated_mod.get_global_var('func_14923')
call_21683 = relay.TupleGetItem(func_14922_call(), 0)
call_21684 = relay.TupleGetItem(func_14923_call(), 0)
output = relay.Tuple([call_21671,call_21680,call_21683,])
output2 = relay.Tuple([call_21672,call_21681,call_21684,])
func_21688 = relay.Function([], output)
mod['func_21688'] = func_21688
mod = relay.transform.InferType()(mod)
mutated_mod['func_21688'] = func_21688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21688_call = mutated_mod.get_global_var('func_21688')
call_21689 = func_21688_call()
output = call_21689
func_21690 = relay.Function([], output)
mutated_mod['func_21690'] = func_21690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18617_call = mod.get_global_var('func_18617')
func_18618_call = mutated_mod.get_global_var('func_18618')
call_21741 = func_18617_call()
call_21742 = func_18617_call()
output = call_21741
output2 = call_21742
func_21743 = relay.Function([], output)
mod['func_21743'] = func_21743
mod = relay.transform.InferType()(mod)
output = func_21743()
func_21744 = relay.Function([], output)
mutated_mod['func_21744'] = func_21744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10569_call = mod.get_global_var('func_10569')
func_10571_call = mutated_mod.get_global_var('func_10571')
call_21762 = relay.TupleGetItem(func_10569_call(), 0)
call_21763 = relay.TupleGetItem(func_10571_call(), 0)
output = call_21762
output2 = call_21763
func_21766 = relay.Function([], output)
mod['func_21766'] = func_21766
mod = relay.transform.InferType()(mod)
output = func_21766()
func_21767 = relay.Function([], output)
mutated_mod['func_21767'] = func_21767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_21785 = relay.TupleGetItem(func_6725_call(), 0)
call_21786 = relay.TupleGetItem(func_6727_call(), 0)
func_4808_call = mod.get_global_var('func_4808')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_21804 = func_4808_call()
call_21805 = func_4808_call()
func_19580_call = mod.get_global_var('func_19580')
func_19582_call = mutated_mod.get_global_var('func_19582')
call_21806 = relay.TupleGetItem(func_19580_call(), 0)
call_21807 = relay.TupleGetItem(func_19582_call(), 0)
func_21166_call = mod.get_global_var('func_21166')
func_21168_call = mutated_mod.get_global_var('func_21168')
call_21808 = relay.TupleGetItem(func_21166_call(), 2)
call_21809 = relay.TupleGetItem(func_21168_call(), 2)
output = relay.Tuple([call_21785,call_21804,call_21806,call_21808,])
output2 = relay.Tuple([call_21786,call_21805,call_21807,call_21809,])
func_21827 = relay.Function([], output)
mod['func_21827'] = func_21827
mod = relay.transform.InferType()(mod)
mutated_mod['func_21827'] = func_21827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21827_call = mutated_mod.get_global_var('func_21827')
call_21828 = func_21827_call()
output = call_21828
func_21829 = relay.Function([], output)
mutated_mod['func_21829'] = func_21829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8458_call = mod.get_global_var('func_8458')
func_8460_call = mutated_mod.get_global_var('func_8460')
call_21842 = relay.TupleGetItem(func_8458_call(), 0)
call_21843 = relay.TupleGetItem(func_8460_call(), 0)
output = relay.Tuple([call_21842,])
output2 = relay.Tuple([call_21843,])
func_21846 = relay.Function([], output)
mod['func_21846'] = func_21846
mod = relay.transform.InferType()(mod)
mutated_mod['func_21846'] = func_21846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21846_call = mutated_mod.get_global_var('func_21846')
call_21847 = func_21846_call()
output = call_21847
func_21848 = relay.Function([], output)
mutated_mod['func_21848'] = func_21848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10991_call = mod.get_global_var('func_10991')
func_10992_call = mutated_mod.get_global_var('func_10992')
call_21902 = relay.TupleGetItem(func_10991_call(), 1)
call_21903 = relay.TupleGetItem(func_10992_call(), 1)
output = call_21902
output2 = call_21903
func_21925 = relay.Function([], output)
mod['func_21925'] = func_21925
mod = relay.transform.InferType()(mod)
mutated_mod['func_21925'] = func_21925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21925_call = mutated_mod.get_global_var('func_21925')
call_21926 = func_21925_call()
output = call_21926
func_21927 = relay.Function([], output)
mutated_mod['func_21927'] = func_21927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12123_call = mod.get_global_var('func_12123')
func_12125_call = mutated_mod.get_global_var('func_12125')
call_21928 = func_12123_call()
call_21929 = func_12123_call()
output = relay.Tuple([call_21928,])
output2 = relay.Tuple([call_21929,])
func_21943 = relay.Function([], output)
mod['func_21943'] = func_21943
mod = relay.transform.InferType()(mod)
mutated_mod['func_21943'] = func_21943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21943_call = mutated_mod.get_global_var('func_21943')
call_21944 = func_21943_call()
output = call_21944
func_21945 = relay.Function([], output)
mutated_mod['func_21945'] = func_21945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8830_call = mod.get_global_var('func_8830')
func_8832_call = mutated_mod.get_global_var('func_8832')
call_21961 = func_8830_call()
call_21962 = func_8830_call()
output = call_21961
output2 = call_21962
func_21973 = relay.Function([], output)
mod['func_21973'] = func_21973
mod = relay.transform.InferType()(mod)
output = func_21973()
func_21974 = relay.Function([], output)
mutated_mod['func_21974'] = func_21974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7897_call = mod.get_global_var('func_7897')
func_7898_call = mutated_mod.get_global_var('func_7898')
call_21994 = relay.TupleGetItem(func_7897_call(), 2)
call_21995 = relay.TupleGetItem(func_7898_call(), 2)
func_17407_call = mod.get_global_var('func_17407')
func_17409_call = mutated_mod.get_global_var('func_17409')
call_22017 = func_17407_call()
call_22018 = func_17407_call()
func_7341_call = mod.get_global_var('func_7341')
func_7344_call = mutated_mod.get_global_var('func_7344')
var_22024 = relay.var("var_22024", dtype = "bool", shape = (2112,))#candidate|22024|(2112,)|var|bool
call_22023 = relay.TupleGetItem(func_7341_call(relay.reshape(var_22024.astype('bool'), [2112,])), 5)
call_22025 = relay.TupleGetItem(func_7344_call(relay.reshape(var_22024.astype('bool'), [2112,])), 5)
func_8025_call = mod.get_global_var('func_8025')
func_8026_call = mutated_mod.get_global_var('func_8026')
call_22029 = relay.TupleGetItem(func_8025_call(), 0)
call_22030 = relay.TupleGetItem(func_8026_call(), 0)
output = relay.Tuple([call_21994,call_22017,call_22023,var_22024,call_22029,])
output2 = relay.Tuple([call_21995,call_22018,call_22025,var_22024,call_22030,])
func_22031 = relay.Function([var_22024,], output)
mod['func_22031'] = func_22031
mod = relay.transform.InferType()(mod)
var_22032 = relay.var("var_22032", dtype = "bool", shape = (2112,))#candidate|22032|(2112,)|var|bool
output = func_22031(var_22032)
func_22033 = relay.Function([var_22032], output)
mutated_mod['func_22033'] = func_22033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15393_call = mod.get_global_var('func_15393')
func_15395_call = mutated_mod.get_global_var('func_15395')
call_22136 = relay.TupleGetItem(func_15393_call(), 0)
call_22137 = relay.TupleGetItem(func_15395_call(), 0)
output = relay.Tuple([call_22136,])
output2 = relay.Tuple([call_22137,])
func_22138 = relay.Function([], output)
mod['func_22138'] = func_22138
mod = relay.transform.InferType()(mod)
mutated_mod['func_22138'] = func_22138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22138_call = mutated_mod.get_global_var('func_22138')
call_22139 = func_22138_call()
output = call_22139
func_22140 = relay.Function([], output)
mutated_mod['func_22140'] = func_22140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_22155 = relay.var("var_22155", dtype = "int16", shape = (12, 12, 12))#candidate|22155|(12, 12, 12)|var|int16
var_22156 = relay.var("var_22156", dtype = "int16", shape = (12, 12, 12))#candidate|22156|(12, 12, 12)|var|int16
bop_22157 = relay.greater(var_22155.astype('bool'), relay.reshape(var_22156.astype('bool'), relay.shape_of(var_22155))) # shape=(12, 12, 12)
uop_22163 = relay.acos(bop_22157.astype('float64')) # shape=(12, 12, 12)
output = relay.Tuple([uop_22163,])
output2 = relay.Tuple([uop_22163,])
func_22168 = relay.Function([var_22155,var_22156,], output)
mod['func_22168'] = func_22168
mod = relay.transform.InferType()(mod)
var_22169 = relay.var("var_22169", dtype = "int16", shape = (12, 12, 12))#candidate|22169|(12, 12, 12)|var|int16
var_22170 = relay.var("var_22170", dtype = "int16", shape = (12, 12, 12))#candidate|22170|(12, 12, 12)|var|int16
output = func_22168(var_22169,var_22170,)
func_22171 = relay.Function([var_22169,var_22170,], output)
mutated_mod['func_22171'] = func_22171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_22175 = relay.TupleGetItem(func_5163_call(), 2)
call_22176 = relay.TupleGetItem(func_5164_call(), 2)
output = call_22175
output2 = call_22176
func_22195 = relay.Function([], output)
mod['func_22195'] = func_22195
mod = relay.transform.InferType()(mod)
output = func_22195()
func_22196 = relay.Function([], output)
mutated_mod['func_22196'] = func_22196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22138_call = mod.get_global_var('func_22138')
func_22140_call = mutated_mod.get_global_var('func_22140')
call_22234 = relay.TupleGetItem(func_22138_call(), 0)
call_22235 = relay.TupleGetItem(func_22140_call(), 0)
output = relay.Tuple([call_22234,])
output2 = relay.Tuple([call_22235,])
func_22248 = relay.Function([], output)
mod['func_22248'] = func_22248
mod = relay.transform.InferType()(mod)
mutated_mod['func_22248'] = func_22248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22248_call = mutated_mod.get_global_var('func_22248')
call_22249 = func_22248_call()
output = call_22249
func_22250 = relay.Function([], output)
mutated_mod['func_22250'] = func_22250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12123_call = mod.get_global_var('func_12123')
func_12125_call = mutated_mod.get_global_var('func_12125')
call_22344 = func_12123_call()
call_22345 = func_12123_call()
output = call_22344
output2 = call_22345
func_22393 = relay.Function([], output)
mod['func_22393'] = func_22393
mod = relay.transform.InferType()(mod)
mutated_mod['func_22393'] = func_22393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22393_call = mutated_mod.get_global_var('func_22393')
call_22394 = func_22393_call()
output = call_22394
func_22395 = relay.Function([], output)
mutated_mod['func_22395'] = func_22395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16274_call = mod.get_global_var('func_16274')
func_16275_call = mutated_mod.get_global_var('func_16275')
call_22396 = relay.TupleGetItem(func_16274_call(), 0)
call_22397 = relay.TupleGetItem(func_16275_call(), 0)
func_20313_call = mod.get_global_var('func_20313')
func_20315_call = mutated_mod.get_global_var('func_20315')
call_22439 = relay.TupleGetItem(func_20313_call(), 0)
call_22440 = relay.TupleGetItem(func_20315_call(), 0)
output = relay.Tuple([call_22396,call_22439,])
output2 = relay.Tuple([call_22397,call_22440,])
func_22442 = relay.Function([], output)
mod['func_22442'] = func_22442
mod = relay.transform.InferType()(mod)
mutated_mod['func_22442'] = func_22442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22442_call = mutated_mod.get_global_var('func_22442')
call_22443 = func_22442_call()
output = call_22443
func_22444 = relay.Function([], output)
mutated_mod['func_22444'] = func_22444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12123_call = mod.get_global_var('func_12123')
func_12125_call = mutated_mod.get_global_var('func_12125')
call_22472 = func_12123_call()
call_22473 = func_12123_call()
func_13963_call = mod.get_global_var('func_13963')
func_13964_call = mutated_mod.get_global_var('func_13964')
call_22476 = relay.TupleGetItem(func_13963_call(), 1)
call_22477 = relay.TupleGetItem(func_13964_call(), 1)
output = relay.Tuple([call_22472,call_22476,])
output2 = relay.Tuple([call_22473,call_22477,])
func_22492 = relay.Function([], output)
mod['func_22492'] = func_22492
mod = relay.transform.InferType()(mod)
mutated_mod['func_22492'] = func_22492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22492_call = mutated_mod.get_global_var('func_22492')
call_22493 = func_22492_call()
output = call_22493
func_22494 = relay.Function([], output)
mutated_mod['func_22494'] = func_22494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9370_call = mod.get_global_var('func_9370')
func_9371_call = mutated_mod.get_global_var('func_9371')
call_22542 = relay.TupleGetItem(func_9370_call(), 0)
call_22543 = relay.TupleGetItem(func_9371_call(), 0)
output = relay.Tuple([call_22542,])
output2 = relay.Tuple([call_22543,])
func_22550 = relay.Function([], output)
mod['func_22550'] = func_22550
mod = relay.transform.InferType()(mod)
output = func_22550()
func_22551 = relay.Function([], output)
mutated_mod['func_22551'] = func_22551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22492_call = mod.get_global_var('func_22492')
func_22494_call = mutated_mod.get_global_var('func_22494')
call_22579 = relay.TupleGetItem(func_22492_call(), 0)
call_22580 = relay.TupleGetItem(func_22494_call(), 0)
func_19047_call = mod.get_global_var('func_19047')
func_19049_call = mutated_mod.get_global_var('func_19049')
call_22589 = relay.TupleGetItem(func_19047_call(), 1)
call_22590 = relay.TupleGetItem(func_19049_call(), 1)
func_2152_call = mod.get_global_var('func_2152')
func_2155_call = mutated_mod.get_global_var('func_2155')
var_22602 = relay.var("var_22602", dtype = "int8", shape = (84,))#candidate|22602|(84,)|var|int8
call_22601 = relay.TupleGetItem(func_2152_call(relay.reshape(var_22602.astype('int8'), [1, 14, 6])), 0)
call_22603 = relay.TupleGetItem(func_2155_call(relay.reshape(var_22602.astype('int8'), [1, 14, 6])), 0)
func_15477_call = mod.get_global_var('func_15477')
func_15478_call = mutated_mod.get_global_var('func_15478')
call_22607 = func_15477_call()
call_22608 = func_15477_call()
output = relay.Tuple([call_22579,call_22589,call_22601,var_22602,call_22607,])
output2 = relay.Tuple([call_22580,call_22590,call_22603,var_22602,call_22608,])
func_22622 = relay.Function([var_22602,], output)
mod['func_22622'] = func_22622
mod = relay.transform.InferType()(mod)
mutated_mod['func_22622'] = func_22622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_22623 = relay.var("var_22623", dtype = "int8", shape = (84,))#candidate|22623|(84,)|var|int8
func_22622_call = mutated_mod.get_global_var('func_22622')
call_22624 = func_22622_call(var_22623)
output = call_22624
func_22625 = relay.Function([var_22623], output)
mutated_mod['func_22625'] = func_22625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_22668 = relay.TupleGetItem(func_6725_call(), 1)
call_22669 = relay.TupleGetItem(func_6727_call(), 1)
output = call_22668
output2 = call_22669
func_22678 = relay.Function([], output)
mod['func_22678'] = func_22678
mod = relay.transform.InferType()(mod)
mutated_mod['func_22678'] = func_22678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22678_call = mutated_mod.get_global_var('func_22678')
call_22679 = func_22678_call()
output = call_22679
func_22680 = relay.Function([], output)
mutated_mod['func_22680'] = func_22680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8702_call = mod.get_global_var('func_8702')
func_8703_call = mutated_mod.get_global_var('func_8703')
call_22736 = relay.TupleGetItem(func_8702_call(), 0)
call_22737 = relay.TupleGetItem(func_8703_call(), 0)
output = call_22736
output2 = call_22737
func_22743 = relay.Function([], output)
mod['func_22743'] = func_22743
mod = relay.transform.InferType()(mod)
mutated_mod['func_22743'] = func_22743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22743_call = mutated_mod.get_global_var('func_22743')
call_22744 = func_22743_call()
output = call_22744
func_22745 = relay.Function([], output)
mutated_mod['func_22745'] = func_22745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18197_call = mod.get_global_var('func_18197')
func_18199_call = mutated_mod.get_global_var('func_18199')
call_22746 = func_18197_call()
call_22747 = func_18197_call()
output = relay.Tuple([call_22746,])
output2 = relay.Tuple([call_22747,])
func_22750 = relay.Function([], output)
mod['func_22750'] = func_22750
mod = relay.transform.InferType()(mod)
mutated_mod['func_22750'] = func_22750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22750_call = mutated_mod.get_global_var('func_22750')
call_22751 = func_22750_call()
output = call_22751
func_22752 = relay.Function([], output)
mutated_mod['func_22752'] = func_22752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_20521_call = mod.get_global_var('func_20521')
func_20523_call = mutated_mod.get_global_var('func_20523')
call_22776 = relay.TupleGetItem(func_20521_call(), 2)
call_22777 = relay.TupleGetItem(func_20523_call(), 2)
output = call_22776
output2 = call_22777
func_22805 = relay.Function([], output)
mod['func_22805'] = func_22805
mod = relay.transform.InferType()(mod)
mutated_mod['func_22805'] = func_22805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22805_call = mutated_mod.get_global_var('func_22805')
call_22806 = func_22805_call()
output = call_22806
func_22807 = relay.Function([], output)
mutated_mod['func_22807'] = func_22807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14057_call = mod.get_global_var('func_14057')
func_14058_call = mutated_mod.get_global_var('func_14058')
call_22827 = relay.TupleGetItem(func_14057_call(), 1)
call_22828 = relay.TupleGetItem(func_14058_call(), 1)
output = call_22827
output2 = call_22828
func_22829 = relay.Function([], output)
mod['func_22829'] = func_22829
mod = relay.transform.InferType()(mod)
output = func_22829()
func_22830 = relay.Function([], output)
mutated_mod['func_22830'] = func_22830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11560_call = mod.get_global_var('func_11560')
func_11562_call = mutated_mod.get_global_var('func_11562')
call_22875 = relay.TupleGetItem(func_11560_call(), 1)
call_22876 = relay.TupleGetItem(func_11562_call(), 1)
func_17964_call = mod.get_global_var('func_17964')
func_17965_call = mutated_mod.get_global_var('func_17965')
call_22888 = relay.TupleGetItem(func_17964_call(), 0)
call_22889 = relay.TupleGetItem(func_17965_call(), 0)
output = relay.Tuple([call_22875,call_22888,])
output2 = relay.Tuple([call_22876,call_22889,])
func_22893 = relay.Function([], output)
mod['func_22893'] = func_22893
mod = relay.transform.InferType()(mod)
output = func_22893()
func_22894 = relay.Function([], output)
mutated_mod['func_22894'] = func_22894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5506_call = mod.get_global_var('func_5506')
func_5508_call = mutated_mod.get_global_var('func_5508')
call_22900 = relay.TupleGetItem(func_5506_call(), 1)
call_22901 = relay.TupleGetItem(func_5508_call(), 1)
output = call_22900
output2 = call_22901
func_22909 = relay.Function([], output)
mod['func_22909'] = func_22909
mod = relay.transform.InferType()(mod)
mutated_mod['func_22909'] = func_22909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22909_call = mutated_mod.get_global_var('func_22909')
call_22910 = func_22909_call()
output = call_22910
func_22911 = relay.Function([], output)
mutated_mod['func_22911'] = func_22911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8252_call = mod.get_global_var('func_8252')
func_8253_call = mutated_mod.get_global_var('func_8253')
call_22932 = relay.TupleGetItem(func_8252_call(), 0)
call_22933 = relay.TupleGetItem(func_8253_call(), 0)
func_3170_call = mod.get_global_var('func_3170')
func_3174_call = mutated_mod.get_global_var('func_3174')
const_22935 = relay.const([-3.408170,-9.520177,-5.058080,-7.886410,4.950777,2.637194,-4.922608,3.796108,3.028581,5.492779,-8.143788,4.974828,-9.958594,4.603966,7.659598,-4.759835,-8.268438,-3.064009,5.996828,8.726230,-4.897953,7.684664,-9.737472,-1.329842,4.024310,-1.315165,-8.874498,-7.626082,-4.360140,-0.469759,-2.152632,5.417470,4.684017,0.847662,-8.404726,2.232865,6.376492,7.608930,-1.450746,3.038675,3.122661,0.759859,3.528519,-2.636315,-7.794355,-1.481619,3.558695,8.499691,1.731410,4.155381,-7.900565,-5.826283,1.375987,3.000179,9.591413,-1.251789,-3.370361,-9.079004,6.588485,3.052811,-5.677668,-7.019746,4.937833,-5.473322,-0.982891,-4.342025,4.271306,-3.507121,-1.993103,-7.675833,-5.785975,-2.312790,-9.442971,0.604586,-0.254820,0.312872,-2.575086,-7.136157,-9.075876,-0.749728,9.993078,3.742809,0.300832,1.622093,7.662615,-5.195547,-6.767290,-0.654713,7.034244,-2.586151,9.114264,-2.084356,5.527845,2.218946,-2.931555,-8.886126,3.896482,-1.586496,9.982548,-3.997515,0.734523,7.973151,-5.364915,-2.704913,6.227748,1.045260,5.525120,-6.232937,-3.535581,-2.049915,6.879388,-8.303894,-7.476503,6.886100,3.125213,-1.936766,-6.022974,-0.146045,8.035548,5.756468,-5.312611,4.618399,-2.674899,-4.185110,-7.087826,0.796295,-1.124285,-5.483087,-8.254773,-2.670397,0.346599,-3.983806,-4.576243,-5.949369,-3.601335,-1.420088,-8.522524,-6.442128,4.231715,-1.913685,3.515358,1.198782,5.045563,-7.501296,-2.562565,0.624895,8.330613,1.369693,4.611521,4.695469,5.333066,-3.812553,-4.151099,0.264378,2.384254,4.611391,7.442951,-1.592306,-0.269802,1.642093,-8.521912,-3.340608,-6.281337,4.473212,-6.019558,2.304522,1.833085,7.293329,-7.372804,2.658613,-7.743991,-9.425913,-7.543019,2.936802,9.731837,1.326595,7.014309,4.563589,7.581123,7.709956,-5.019591,-8.672911,-4.338154,2.918076,-3.890330,1.352436,2.273308,-9.321164,-9.980327,-4.863723,-5.499543,6.642827,9.389975,-1.163794,-0.266810,-6.256312,-8.745962,-4.642557,0.902189,-9.419469,-8.792677,-8.771248,2.122501,5.598420,-3.867817,-3.554221,3.135977,0.125428,-7.829822,-9.104222,9.661578,3.434676,0.835905,8.863621,3.217714,-0.773458,5.870296,3.712056,4.877200,-7.332944,-8.279872,5.645429,5.818409,3.194180,-0.804538,-2.163118,-8.708817,5.336872,3.903324,-6.759101,-5.471969,-2.337609,-3.061476,2.739266,4.485910,5.819131,-6.647589,1.508751,2.084251,3.128515,-3.747852,-1.146561,-9.352108,-6.500908,-7.267633,-4.185959,3.760327,-0.438262,0.448272,-4.599072,5.622608,-5.407418,-2.301332,6.403351,-4.976830,5.594639,-2.078162,-0.064952,9.564383,-1.067673,9.388464,0.587797,-3.454700,-4.630295,4.366586,-6.285881,2.187850,-3.953765,-8.937727,8.428936,-8.469992,-3.567585,-1.071454,3.971598,5.278026,7.547685,9.549806,-1.340473,-6.689971,3.846669,4.334424,7.494877,-9.817460,-8.893546,4.872469,-4.312984,-8.149912,9.961957,2.936657,-4.314916,-3.733270,8.487930,-3.979309,1.438758,7.929004,-4.410160,-1.348806,8.372220,0.285532,-0.486996,3.466022,2.530627,0.543673,9.284130,8.897037,4.407915,6.530882,4.985277,-8.758337,6.344276,3.745003,-1.621290,3.188480,2.533151,0.252626,5.658688,-3.673960,-6.816861,6.735120,-7.168601,-7.011323,1.021035,-1.286511,0.143357,7.720423,-7.310000,4.216185,9.280676,-9.011692,3.423483,-9.357701,0.754676,4.036818,-6.825232,5.066812,-8.219182,-9.662824,8.170131,-4.833998,-0.786668,8.342238,8.343900,5.456030,7.890767,1.908650,-0.447802,-9.815406,-4.145368,5.347061,-4.298158,7.309085,-8.644671,-0.719693,-7.319617,8.286204,0.574741,-0.279664,7.760264,1.825152,5.187228,1.660598,-7.416768,9.478590,-3.721313,0.288349,8.212659,6.641768,-7.327118,-9.132047,-1.621958,6.884013,-3.886762,-5.186746,-6.254227,5.409688,-4.872614,3.196421,-4.016343,6.909705,1.564532,4.380047,3.508580,7.683190,5.538081,1.874053,9.805779,5.507710,-4.310066,8.091778,9.670376,-2.163134,5.556382,-1.589697,8.666527,-9.823318,-4.058878,6.263920,-5.911890,3.716202,-3.335815,-9.166217,-0.908021,-9.793478,6.310138,6.717009,-1.488471,2.981707,4.744962,2.082721,4.413188,5.464044,4.203021,-9.402171,3.558642,2.268577,-2.918428,8.475534,4.067105,0.539175,2.791703,2.616495,-2.925873,-1.742924,-6.073346,-5.463935,6.266842,2.410688,6.412583,1.831201,-6.441218,-0.044713,-9.805331,2.051440,8.474941,-7.173941,8.810750,-9.069861,-8.785940,3.690830,-2.222737,4.879523,7.424246,4.100871,-0.160646,-5.638313,4.429810,0.939995,-2.359711,-0.390426,1.535025,7.181032,-0.301706,-7.408294,-3.879431,-5.969437,-4.889573,-4.520445,-6.871111,-0.060474,-9.017244,1.992812,5.057423,4.731788,3.764495,-2.688935,0.894895,5.724996,8.897573,-7.166095,5.719514,9.175406,-9.267504,-6.035458,8.594279,8.240350,1.548699,2.663704,2.039686,-0.676171,-2.683281,8.793207,-9.275230,-6.209538,3.506126,9.535171,7.573453,-5.062023,6.015903,-4.263241,0.209848,-2.516074,0.521919,0.541081,7.611956,3.068342,-2.945914,9.130105,-2.886947,8.293941,-4.843386,-3.650773,2.698662,-4.699912,2.950280,8.038309,-2.720752,3.752158,0.017597,8.088275,1.061547,6.418201,1.849324,-5.793069,-6.484751,8.243266,4.833593,-1.834283,-1.721382,9.834813,3.706181,-0.232994,-2.972429,3.800295,9.990191,-9.750835,-9.011335,-8.536003,-2.829575,7.121740,-2.753488,-5.359845,-8.407735,-1.021511,7.800163,1.741902,-5.797320,-5.795618,7.042222,8.205617,-4.422888,5.791568,8.688953,6.396740,4.348612,-2.882516,3.807466,5.756351,7.168895,5.456958,7.991773,6.313901,-0.282355,-9.615010,-1.361553,-6.033391,-7.471215,1.202839,-5.480673,3.287205,1.904995,3.526279,-1.124203,-9.848265,0.409727,-8.318455,-6.472369,-0.049038,-5.346179,0.434690,-7.578470,7.689391,8.380219,-4.532221,4.185554,1.331851,4.189981,-9.040426,8.279035,4.292607,-4.843151,6.994676,-7.166254,7.497801,0.496864,8.107324,8.427454,-1.583289,9.745584,-8.929933,-1.886085,3.969549,-9.201861,-9.674931,-4.671009,-2.743446,1.607263,-2.134011,-9.118329,-4.480238,-0.576132,9.844456,9.223197,-0.762194,9.966198,0.516728,3.230409,0.892016,-6.647118,1.942952,-3.119382,8.886656,-6.558727,4.833529,-2.265114,-1.522966,1.704566,-5.197717,6.979462,1.653606,9.554981,-6.581232,2.376874,-6.101262,4.408870,-4.344912,-6.286432,-6.087891,6.294062,1.263423,0.389515,-4.016067,6.511585,1.745855,-7.822769,1.993321,-4.058279,-1.110764,-9.493782,0.013293,-7.766022,0.694614,-1.144008,1.794559,6.245789,5.995342,-1.517675,2.951989,-1.668599,-0.149354,9.093503,-1.584390,-4.364809,6.219049,9.938427,-0.819901,-9.530033,-0.191481,2.863055,0.919153,-6.012430,-0.116011,-3.962172,8.048951,-5.008896,9.205658,6.783834,0.523425,-2.111688,-2.943583,-3.863680,-2.129137,-2.196593,0.298954,-3.851897,-3.791423,9.969502,-1.253331,-1.919753,-6.838889,8.577029,-3.115118,5.822467,-9.971866,-8.433505,7.631925,-6.054307,-0.093131,3.201463,-1.085142,-9.607163,-9.318846,0.514056,2.966769,-1.941407,7.085734,-9.518025,1.288292,4.610940,3.775316,-9.505287,-7.538750,-5.285687,-2.132369,-6.060549,-6.287520,7.677697,-3.741414,0.134380,9.704742,2.301631,5.183129,-9.218342,8.087305,2.040422,-2.451358,-3.824581,-7.141980,8.757276,-1.351359,0.791959,-0.390235,1.615844,-7.001270,-0.944888,8.862007,-0.479064,1.834467,2.178994,-0.082124,-2.765887,-0.225148,-9.201217,1.350057,6.875835,6.682990,-4.565117,-9.754201,6.717015,-5.929771,-4.152568,3.422633,7.145969,0.701598,-1.208981,1.017623,-1.272301,0.388775,-6.210373,-7.492190,-8.786458,-4.473456,2.409939,-1.047234,0.409486,7.997339,-8.005644,-2.522476,0.816213,-2.035204,-4.363054,-1.625267,-3.803452,6.865278,4.140492,-8.902289,7.774601,-9.662066,7.506008,7.415786,-1.543461,-4.086455,-1.586072,-5.468133,4.536970,8.464440,-0.304008,-6.657933,6.518571,3.361106,-2.374370,-6.825629,-9.178862,-2.412185,4.656678,9.978275,-4.151761,2.838890,-2.655859,9.392018,-7.758250,9.074507,-9.594757,5.625578,3.738692,-4.251195,6.817802,-0.942910,-3.122981,0.257203,-9.604139,0.444710,4.067284,8.939764,-7.743309,5.873563,9.823847,1.953950,-9.743505,5.153331,4.376697,9.599794,-7.111957,-4.117486,7.256708,8.395652,-7.488623,-4.913104,9.629932,-6.887944,-7.868116,-3.407192,-0.433444,-8.203793,4.682928,1.952938,7.452039,7.499048,-2.913018,-0.931877,9.580223,3.629919,-4.360978,3.714790,-3.635342,6.053294,3.595800,-8.288295,8.635752,6.945950,8.421293,8.852329,9.490058,-5.374169,2.280844,9.748999,-9.763429,-0.773439,2.052832,-4.974448,1.313734,-4.614357,-6.809383,0.564091,3.356220,-5.346525,6.001090,-2.447429,-6.630972,-8.359744,6.409037,-5.425079,-4.525211,8.767981,2.442221,1.612938,7.237907,5.147113,6.980343,-3.940666,4.217821,5.634970,-5.013859,-3.552678,-8.381042,-9.402048,-9.291139,-4.654578,-6.852244,-6.101036,6.402561,-7.197965,-7.137464,-4.182915,-6.081250,-2.751671,5.158233,-3.123792,4.402631,-8.209408,9.591106,-4.032335,-7.629303,3.580692,-6.411175,-7.417193,4.200215,-1.722638,-9.697913,0.317333,5.937271,6.278405,1.097271,1.275275,-6.554106,0.861397,-9.460418,0.282606,-8.671913,7.854393,7.432013,-7.674943,0.634439,-3.439695,-1.688457,-3.784969,1.507837,-8.196210,-5.032841,-9.493884,-6.115706,-8.851227,9.537177,3.195929,-1.785137,-6.630340,-0.509895,1.500714,0.541808,7.709256,5.563845,-1.123884,5.896261,-8.759454,-3.139435,-4.330336,-5.060038,3.181417,1.290925,8.614292,-4.058028,3.633155,-0.447240,-6.081108,-2.475761,1.453919,5.348934,-6.627252,0.310515,-7.183766,6.528756,-4.994177,-4.831993,9.770181,-1.066701,2.980437,-0.701323,4.344021,7.464744,0.252503,6.400485,-3.171812,-2.996115,-6.850889,2.463435,8.079755,7.226095,-4.981487,0.850675,0.343567,-6.518739,-3.348766,7.724981,5.563731,7.581343,-7.646757,-0.200419,-5.980264,-6.091551,-2.929329,3.671634,-4.403878,0.074732,-7.407638,2.776537,-7.708404,6.387061,-1.512267,-5.730210,4.147569,-4.491239,-3.969460,-1.610077,6.751934,3.545343,-7.952715,8.914018,-5.758387,6.404464,-9.714522,-6.677765,-1.779200,7.287141,7.001523,1.680025,-3.339519,-0.200399,-8.858536,1.292274,0.858966,2.659830,8.058942,2.866698,8.825136,1.385292,4.542434,-6.952156,8.687907,-6.658996,3.532587,5.855520,-7.360150,-8.646214,5.715369,-5.298968,6.177143,-2.633199,0.916050,-6.545720,2.883615,-6.086709,0.290974,-5.832940,-5.589307,4.034531,-0.392670,8.837230,8.227323,7.964619,2.529510,0.859325,9.382431,-0.022245,3.054538,4.604798,-9.534001,3.769445,-6.228828,-5.345027,0.538424,-3.714596], dtype = "float32")#candidate|22935|(1050,)|const|float32
var_22936 = relay.var("var_22936", dtype = "float32", shape = (1210,))#candidate|22936|(1210,)|var|float32
call_22934 = relay.TupleGetItem(func_3170_call(relay.reshape(const_22935.astype('float32'), [7, 15, 10]), relay.reshape(var_22936.astype('float32'), [1210,]), ), 1)
call_22937 = relay.TupleGetItem(func_3174_call(relay.reshape(const_22935.astype('float32'), [7, 15, 10]), relay.reshape(var_22936.astype('float32'), [1210,]), ), 1)
output = relay.Tuple([call_22932,call_22934,const_22935,var_22936,])
output2 = relay.Tuple([call_22933,call_22937,const_22935,var_22936,])
func_22939 = relay.Function([var_22936,], output)
mod['func_22939'] = func_22939
mod = relay.transform.InferType()(mod)
mutated_mod['func_22939'] = func_22939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_22940 = relay.var("var_22940", dtype = "float32", shape = (1210,))#candidate|22940|(1210,)|var|float32
func_22939_call = mutated_mod.get_global_var('func_22939')
call_22941 = func_22939_call(var_22940)
output = call_22941
func_22942 = relay.Function([var_22940], output)
mutated_mod['func_22942'] = func_22942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11498_call = mod.get_global_var('func_11498')
func_11499_call = mutated_mod.get_global_var('func_11499')
call_23007 = relay.TupleGetItem(func_11498_call(), 0)
call_23008 = relay.TupleGetItem(func_11499_call(), 0)
func_7964_call = mod.get_global_var('func_7964')
func_7966_call = mutated_mod.get_global_var('func_7966')
call_23030 = relay.TupleGetItem(func_7964_call(), 0)
call_23031 = relay.TupleGetItem(func_7966_call(), 0)
func_17357_call = mod.get_global_var('func_17357')
func_17360_call = mutated_mod.get_global_var('func_17360')
var_23050 = relay.var("var_23050", dtype = "float64", shape = (1, 405))#candidate|23050|(1, 405)|var|float64
call_23049 = relay.TupleGetItem(func_17357_call(relay.reshape(var_23050.astype('float64'), [9, 5, 9])), 0)
call_23051 = relay.TupleGetItem(func_17360_call(relay.reshape(var_23050.astype('float64'), [9, 5, 9])), 0)
func_16021_call = mod.get_global_var('func_16021')
func_16022_call = mutated_mod.get_global_var('func_16022')
call_23053 = relay.TupleGetItem(func_16021_call(), 0)
call_23054 = relay.TupleGetItem(func_16022_call(), 0)
output = relay.Tuple([call_23007,call_23030,call_23049,var_23050,call_23053,])
output2 = relay.Tuple([call_23008,call_23031,call_23051,var_23050,call_23054,])
func_23074 = relay.Function([var_23050,], output)
mod['func_23074'] = func_23074
mod = relay.transform.InferType()(mod)
var_23075 = relay.var("var_23075", dtype = "float64", shape = (1, 405))#candidate|23075|(1, 405)|var|float64
output = func_23074(var_23075)
func_23076 = relay.Function([var_23075], output)
mutated_mod['func_23076'] = func_23076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14809_call = mod.get_global_var('func_14809')
func_14811_call = mutated_mod.get_global_var('func_14811')
call_23116 = func_14809_call()
call_23117 = func_14809_call()
uop_23137 = relay.asin(call_23116.astype('float64')) # shape=(14, 12, 9)
uop_23139 = relay.asin(call_23117.astype('float64')) # shape=(14, 12, 9)
func_5770_call = mod.get_global_var('func_5770')
func_5772_call = mutated_mod.get_global_var('func_5772')
const_23147 = relay.const([[4.779981,-3.902622],[-6.781585,6.118846],[-5.853911,4.245746],[2.846681,2.638730],[3.843551,8.807937],[4.043444,-8.794037],[-9.246565,3.931038],[-7.648540,5.327614],[-2.826656,-3.748369],[-2.914211,-8.256522],[-9.880034,-3.773857],[-6.845649,-6.117026],[6.477547,2.365256],[-4.937493,1.289360],[4.435989,0.443716],[-1.268097,7.789955],[-7.003651,8.169306],[-4.690220,8.841605],[-6.141260,-1.538031],[-9.974564,-3.504618],[-0.325691,-6.627826],[-6.632825,1.507223],[-2.635897,3.567880],[-7.553643,2.572854],[-1.219568,3.769074],[6.067536,1.752443],[-1.525479,-8.624048],[-4.141869,-3.678495],[-6.381315,-0.419811],[-2.953339,4.959027],[-6.183424,-6.837262],[3.518041,-0.584621],[-7.303436,-2.336086],[-3.957933,6.862741],[5.620167,0.627435],[8.138931,3.422985],[-4.887106,-1.504473],[9.296731,7.601143],[-2.602811,-4.694962],[-0.640355,1.528389],[3.670655,-5.110166],[-7.199633,-2.842110],[7.783187,3.726532],[-9.065951,1.466529],[-3.688414,6.858391],[8.492600,-6.357641],[-8.214370,3.191614],[2.523615,-1.716154],[0.113240,-6.659946],[-1.462727,1.531646],[1.430584,-6.626331],[8.565442,-1.967082],[6.401049,-0.675073],[3.800138,-4.114585],[2.068937,-6.995433],[5.610201,2.671816],[2.989794,-0.843822],[9.570226,3.106938],[-1.848347,-7.643640],[3.039752,-2.437596],[-6.982782,4.451637],[9.696204,-5.788738],[-7.031707,0.796689],[5.161338,-9.148302],[-8.951077,-5.115666],[-8.326606,-3.292454],[-1.271742,2.399237],[-5.038914,-0.858524],[-7.130876,-1.938441],[-0.039714,-4.749374],[1.052269,-8.340199],[4.691585,8.684958],[2.804812,7.194404],[6.312539,-9.519640],[-3.781222,-0.170338],[3.897939,0.230853],[-7.504406,0.141054],[-5.289220,7.208210],[1.622192,-1.648347],[-0.189168,7.266554],[-7.693695,-3.184880],[-2.305895,2.181430],[-5.093505,1.217529],[-4.251913,2.931123],[-1.388181,8.315342],[-6.216748,-6.336461],[-4.334297,-0.970445],[-1.896283,-4.912489],[-6.101590,4.489459],[-9.127754,0.323909],[-8.372575,-1.113955],[-6.012655,6.905231],[2.146704,7.024404],[-6.240674,9.158995],[4.736835,1.488243],[4.534462,-8.866486],[-4.892592,2.469883],[-2.175757,9.418032],[9.530779,7.057549],[7.944013,8.068635],[-6.587903,5.840974],[-6.617117,1.189381],[-9.288854,-7.982647],[6.968826,-2.151300],[-6.664765,-4.631095],[-1.767109,9.865755],[3.538191,8.227348],[5.680882,3.810990],[-9.051124,-2.216242],[-6.466957,-5.274609],[0.687381,-6.164005],[0.207907,-1.311695],[-0.272866,-6.358358],[8.924497,1.413466],[-8.158303,4.717757],[1.295630,1.229642],[4.351661,-2.886179],[-0.684964,1.959392],[5.847411,-4.519179],[-7.988764,-4.379155],[6.713647,0.848421],[-1.567505,5.429124],[-7.505123,0.078932],[-3.351012,7.327234],[-8.914126,7.910278],[-2.522490,-7.669058],[-3.642785,-8.877040],[-8.086366,-3.031247],[5.950316,-5.657593],[-1.876873,-1.752201],[-6.036715,-8.432975],[7.231670,5.837931],[3.784874,-9.526623],[9.226012,-6.298142],[3.224655,-7.886574],[5.698142,6.867393],[-0.886328,6.296096],[9.967222,0.785500],[5.505631,-9.223212],[5.432475,-0.996978],[-0.024741,-6.127014],[-7.944330,-8.499512],[1.063734,1.951864],[2.413475,2.003231],[-2.170057,-2.318473],[6.951462,3.698107],[5.479454,9.818036],[2.895916,1.243319],[-5.142149,9.569338],[-9.166780,-0.548468],[-2.490237,4.736161],[-7.985519,-5.974280],[7.158915,-1.634829],[-0.891546,7.165666],[-7.148564,3.036661],[-6.499667,0.983015],[-8.458651,9.958280],[-3.425886,1.017086],[9.863582,-9.365988],[0.829810,-2.392006],[1.243133,0.785968],[9.761481,2.562693],[5.367146,4.800396],[-7.835001,-9.011832],[-5.677086,5.352998],[4.213361,7.954058],[2.046920,-1.991013],[-3.515928,5.074654],[-0.611550,-5.184235],[6.484128,6.957620],[-2.891024,4.466449],[5.632445,9.873871],[7.038820,1.031604],[6.018510,-1.051526],[-1.530184,-4.176991],[2.286175,5.814842],[-3.571616,5.296068],[7.180216,3.716883],[-0.597401,-6.688612],[-1.331548,6.970424],[5.568085,1.307953],[2.642439,8.904417],[-8.555842,9.530375],[-1.392912,7.002671],[-9.700343,-3.634854],[5.081588,0.205206],[-5.180859,-0.787594],[2.048486,0.355514],[-6.631430,-1.044639],[-5.098266,4.464509],[3.097256,-5.803754],[3.837879,-1.661702],[7.954141,-2.721600],[-1.711532,-2.660163],[3.493452,-9.412062],[-4.697986,6.331350],[-6.846242,-5.935093],[-2.079578,7.446279],[-3.067897,2.132251],[-1.741856,6.460252],[-4.016541,-0.275636],[9.068871,-2.031897],[7.686387,-2.854057],[-1.970672,-2.043099],[2.275283,6.997374],[9.405688,7.178748],[-8.798992,7.689698],[-0.737805,-1.449023],[-2.044865,-0.324536],[7.970277,1.099855],[6.761163,-0.423235],[4.091126,-2.694929],[-8.909995,-1.683253],[-2.060577,4.845122],[-8.748744,4.196607],[-5.143504,-9.002840],[8.116812,-9.823275],[2.955700,5.411642],[3.302349,-8.989776],[5.902284,4.738482],[-9.621900,6.953169],[1.998224,4.295357],[3.430279,2.380137],[3.716338,5.652074],[-6.040152,0.355301],[9.475497,-1.695865],[7.143580,8.219087],[8.510356,-1.924653],[6.340085,-0.273562],[-7.907215,-3.761311],[5.436849,0.247024],[5.480456,6.767036],[6.974417,4.673139],[6.392568,9.017860],[-8.497823,3.604271],[-4.907134,6.420335],[6.955616,-0.110282],[-1.601507,-3.941958],[-5.509593,-2.868144],[-4.427625,6.989059],[-8.067276,-2.741428],[-7.068698,-7.792564],[-8.850183,-0.252739],[4.891500,-9.008007],[-1.775746,5.412746],[-1.072121,-8.928146],[8.154774,-3.994616],[-8.977039,1.077126],[8.598160,-2.097797],[-8.817216,-4.428094],[5.766509,1.463904],[0.292339,2.821123],[-0.683081,-2.442431],[-6.910440,-1.770055],[2.942105,1.724338],[-8.445996,-7.525530],[-6.192380,-6.293508],[-4.863660,-9.506510],[8.480096,-4.619354],[9.268238,-9.307683],[-9.208073,-7.994983],[1.310637,7.584304],[-9.575551,-1.029753],[0.216721,-4.102424],[-0.593680,-9.389850],[1.426889,-2.302578],[-6.141779,2.471010],[-3.789274,-5.943822],[-4.757037,-7.511023],[3.965928,-1.570492],[-7.893202,-7.274000],[-2.786199,-6.211919],[1.835253,7.972441],[4.129223,-7.551918],[-5.859430,8.917245],[7.284218,-4.439550],[6.192335,-2.267253],[-2.269771,-0.660511],[9.921764,-0.394161],[8.179710,-7.600171],[-1.727477,8.135544],[7.564574,8.473379],[-8.075229,5.026485],[-4.909672,6.422866],[-5.208677,-1.680160],[3.805617,5.696481],[-5.516044,-8.486272],[-9.947435,-6.163544],[-4.646072,-1.377001],[9.927587,6.554786],[9.530786,-3.398001],[-1.345920,1.872356],[6.879851,2.008732],[-8.625241,9.425141],[6.151576,-7.908937],[7.097663,-8.426111],[-6.240511,2.281828],[-3.071656,5.187737],[2.868782,-3.889704],[-6.680018,-0.453114],[0.619908,-9.802684],[3.446308,-7.194044],[8.557034,-3.243429],[-4.285357,-0.544576],[-8.412129,-8.903629],[-6.702345,-8.130014],[8.878609,-6.701796],[-0.853133,2.295253],[-4.206404,6.380760],[-1.063352,-2.503399],[-0.936899,-7.855008],[9.860550,3.207715],[-9.965823,6.870982],[-1.104574,1.297490],[-5.895632,9.512541],[-8.166953,-8.034882],[-8.896652,-3.485526],[-5.339259,-9.630074],[-5.173709,4.340863],[9.273053,7.727578],[-3.544071,-8.402154],[-4.667762,8.516902],[5.147038,5.301209],[5.159319,5.607298],[3.809937,-4.369174],[-9.803654,-3.998613],[6.607267,2.937473],[-1.105409,3.111544],[7.848262,8.164699],[7.210832,-9.371314],[6.772386,-2.237871],[7.251012,-2.062116],[-8.584261,-0.990569],[7.288773,4.228210],[-5.753387,7.668980],[7.108536,-4.185170],[8.771591,-7.521877],[-7.405284,0.661656],[-4.116616,-4.243015],[8.096539,-7.584796],[-8.731322,3.449108],[5.691041,-0.315782],[9.914111,-0.053752],[-7.328228,4.289565],[9.431567,-9.159448],[-0.006531,2.414367],[-5.550211,-4.084625],[8.961093,2.499478],[-7.502556,8.844667],[8.513637,9.640043],[-8.915857,9.452453],[-2.228601,-2.703231],[-6.190419,7.192481],[-6.733217,7.666624],[4.822665,3.514014],[-0.314061,-6.411998],[0.684167,-5.276514],[6.981447,2.714315],[6.692105,9.016628],[4.646624,2.823549],[-0.874592,-1.941395],[-0.914954,2.070103],[2.315986,-7.094135],[7.973376,-2.058497],[-2.240597,5.936049],[0.967156,4.152063],[6.160902,-6.943217],[-2.052879,-0.602411],[3.811911,-9.898762],[-3.229239,1.059457],[-3.511579,3.513048],[-5.454371,-1.819262],[-1.727822,-1.303153],[-0.548276,8.698818],[-7.824158,-1.179950],[1.169041,-4.322155],[7.350752,-5.596743],[-3.308489,5.674123],[1.117630,4.261756],[7.941997,4.890612],[4.290553,7.899413],[8.645129,-8.195337],[-6.215084,6.373028],[8.255600,-5.050307],[-5.778453,9.561043],[-7.762168,9.275541],[8.273051,2.098870],[-8.206917,9.449230],[3.911169,1.800455],[9.080815,-9.223885],[-8.758967,0.806659],[0.511404,-9.045674],[5.337413,4.334670],[-7.389805,0.794351],[8.869332,-0.226341],[3.513358,7.235716],[-4.116990,-5.289769],[-1.349219,-1.887472],[-7.110597,8.166478],[4.539519,1.323554],[8.670248,2.522635],[4.211030,2.528777],[1.238734,-0.458086],[1.274917,9.156358],[-1.448096,9.669768],[0.708681,3.489641],[-1.555297,2.253302],[-4.988082,-9.550136],[1.859390,5.358425],[-4.477293,8.139984],[6.606137,3.886831],[-4.775515,-4.757454],[-6.005570,2.228273],[1.887231,6.876301],[5.360659,-5.811772],[8.683703,1.460148],[-2.102770,5.455778],[-5.475793,-8.278746],[-9.243969,-9.927523],[1.259588,2.419753],[8.885840,2.240603],[3.733158,-4.976075],[1.623933,-7.925298],[7.506911,-9.130289],[-0.440288,-8.135804],[-1.399416,-5.635249],[-6.218755,4.787880],[-7.906063,3.309198],[-5.043898,-6.412134],[0.180697,-6.005481],[4.279731,5.785882],[3.269385,-0.070065],[9.532412,-1.530101],[-8.644212,-0.121816],[1.329108,-9.406411],[-4.620319,8.160473],[-7.532265,-0.238538],[-5.255918,-9.394183],[6.509225,-4.257076],[2.966620,6.630329],[-1.151939,4.200574],[-4.500922,2.831329],[1.706519,6.699820],[-6.242741,-6.346191],[2.293767,-0.610093],[-3.414450,1.609668],[2.238312,-8.236784],[0.190885,2.338039],[9.366013,-5.118890],[9.829609,1.504924],[1.398976,-5.110770],[-2.362515,-1.650587],[-7.342393,0.813761],[9.970443,-0.614111],[4.618693,-1.996024],[-7.033155,-7.945665],[-0.087633,-5.188605],[-5.893562,-9.027990],[-5.710295,4.502200],[-3.614904,-5.864582],[1.528752,7.860814],[5.513396,4.495880],[-6.720274,9.144093],[0.506291,-2.217387],[-0.045037,3.933404],[-6.616009,-9.430645],[9.272707,3.097599],[5.419701,-1.556833],[-4.146774,8.887486],[4.461735,-9.154654],[-8.266623,7.135808],[0.012715,6.426990],[-4.118152,-1.015519],[5.965517,1.201051],[2.801439,-5.040320],[1.824761,9.017926],[-8.464693,0.763383],[8.582499,8.368566],[8.352071,0.620533],[-5.751320,-8.504455],[-4.801775,8.043317],[3.830405,-6.140551],[-1.766964,3.124542],[4.600643,7.630846],[6.758591,5.314393],[-8.157251,3.910512],[5.077000,-5.724896],[2.744286,-6.264806],[0.956457,2.579732],[6.438276,2.522609],[-3.267127,3.422998],[1.276150,8.803437],[7.861306,7.584266],[2.285831,7.961923],[-3.012641,-0.049342],[-7.074753,0.450138],[1.249127,-9.552854],[-4.255621,-5.099247],[-8.871840,-7.190984],[-2.758701,-5.916031],[-5.922734,4.799254],[-8.791214,1.603632],[-4.387834,8.416883],[-2.219845,-9.136255],[4.988849,-2.702655],[1.810250,3.483841],[-0.843167,4.123459],[3.159469,-6.120886],[-6.536427,-8.946526],[-2.034888,0.550293],[0.154081,2.961377],[8.333595,8.276588],[-5.167108,-1.695055],[-3.862244,7.094778],[6.043759,9.194365],[7.533068,-5.833667],[2.518402,-7.741165],[-9.764684,-4.776708],[-9.637364,-9.552429],[-8.999027,4.878440],[4.231339,-5.755773],[3.461191,5.833541],[-0.072640,8.520550],[-1.253738,5.711784],[-5.442669,-4.861545],[7.775712,2.687976],[-8.313099,0.716561],[8.723125,-1.125557],[-8.299539,4.234758],[-7.537793,-3.160235],[1.892864,-6.445845],[-1.699670,-4.972321],[-4.538439,2.674792],[1.989127,1.467564],[-9.844493,-8.159796],[0.963596,6.838956],[0.147570,4.761765],[5.950267,4.031240],[-8.816332,-7.872890],[6.231180,3.803064],[2.760487,-2.352341],[0.180421,6.631793],[-6.736731,-0.948887],[-0.184057,-6.936199],[-1.441050,3.444518],[2.747943,-6.668699],[0.793482,-7.365359],[8.139775,-5.798777],[1.654006,-8.831337],[-9.803719,-9.580138],[8.106377,1.722205],[-4.943986,-0.251372],[9.810300,-1.651273],[-1.913924,-3.186332],[-2.815483,-9.114045],[9.843252,-3.947881],[1.820852,2.591050],[-8.173336,0.351125],[-0.246041,2.828516],[-9.775825,4.169251],[-3.456759,-3.447047],[7.703167,-4.943937],[-9.333727,9.552245],[1.119509,-2.290150],[-1.576866,-6.956496],[7.807700,5.438476],[-7.169204,2.010638],[-5.962734,6.463195],[-8.303870,3.882354],[-8.611106,8.962161],[-6.715225,-5.330589],[3.696243,2.012496],[4.874472,-6.775559],[1.076377,-3.241938],[0.256826,-7.556976],[6.561835,-8.885224],[3.127956,6.871282],[8.875374,-6.079152],[7.515935,4.088178],[3.033337,3.462529],[-0.298860,-0.951016],[3.184139,-2.644047],[-2.853709,-7.457671],[-2.873932,2.526832],[-0.927808,3.009653],[-5.307337,6.211892],[8.105021,-7.607169],[1.591615,2.408052],[4.203501,2.675443],[-2.136882,2.030696],[-8.357197,-5.578543],[-3.541529,4.693278],[-9.855559,-1.016142],[-4.450020,3.342455],[-0.660432,5.215087],[5.395861,-5.052718],[-6.349698,8.793355],[9.744793,1.562971],[-1.833239,-6.204849],[7.199399,4.109152],[-6.821850,-3.932437],[7.316316,-0.305819],[2.113422,-3.814802],[-3.997862,-1.913512],[-3.118909,-2.836052]], dtype = "float32")#candidate|23147|(605, 2)|const|float32
call_23146 = relay.TupleGetItem(func_5770_call(relay.reshape(const_23147.astype('float32'), [1210,])), 2)
call_23148 = relay.TupleGetItem(func_5772_call(relay.reshape(const_23147.astype('float32'), [1210,])), 2)
output = relay.Tuple([uop_23137,call_23146,const_23147,])
output2 = relay.Tuple([uop_23139,call_23148,const_23147,])
func_23159 = relay.Function([], output)
mod['func_23159'] = func_23159
mod = relay.transform.InferType()(mod)
mutated_mod['func_23159'] = func_23159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_23159_call = mutated_mod.get_global_var('func_23159')
call_23160 = func_23159_call()
output = call_23160
func_23161 = relay.Function([], output)
mutated_mod['func_23161'] = func_23161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18715_call = mod.get_global_var('func_18715')
func_18716_call = mutated_mod.get_global_var('func_18716')
call_23192 = relay.TupleGetItem(func_18715_call(), 0)
call_23193 = relay.TupleGetItem(func_18716_call(), 0)
output = call_23192
output2 = call_23193
func_23196 = relay.Function([], output)
mod['func_23196'] = func_23196
mod = relay.transform.InferType()(mod)
mutated_mod['func_23196'] = func_23196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_23196_call = mutated_mod.get_global_var('func_23196')
call_23197 = func_23196_call()
output = call_23197
func_23198 = relay.Function([], output)
mutated_mod['func_23198'] = func_23198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21166_call = mod.get_global_var('func_21166')
func_21168_call = mutated_mod.get_global_var('func_21168')
call_23199 = relay.TupleGetItem(func_21166_call(), 2)
call_23200 = relay.TupleGetItem(func_21168_call(), 2)
output = call_23199
output2 = call_23200
func_23201 = relay.Function([], output)
mod['func_23201'] = func_23201
mod = relay.transform.InferType()(mod)
mutated_mod['func_23201'] = func_23201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_23201_call = mutated_mod.get_global_var('func_23201')
call_23202 = func_23201_call()
output = call_23202
func_23203 = relay.Function([], output)
mutated_mod['func_23203'] = func_23203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_23221 = relay.TupleGetItem(func_6725_call(), 1)
call_23222 = relay.TupleGetItem(func_6727_call(), 1)
func_21827_call = mod.get_global_var('func_21827')
func_21829_call = mutated_mod.get_global_var('func_21829')
call_23224 = relay.TupleGetItem(func_21827_call(), 0)
call_23225 = relay.TupleGetItem(func_21829_call(), 0)
output = relay.Tuple([call_23221,call_23224,])
output2 = relay.Tuple([call_23222,call_23225,])
func_23228 = relay.Function([], output)
mod['func_23228'] = func_23228
mod = relay.transform.InferType()(mod)
mutated_mod['func_23228'] = func_23228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_23228_call = mutated_mod.get_global_var('func_23228')
call_23229 = func_23228_call()
output = call_23229
func_23230 = relay.Function([], output)
mutated_mod['func_23230'] = func_23230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13191_call = mod.get_global_var('func_13191')
func_13192_call = mutated_mod.get_global_var('func_13192')
call_23234 = relay.TupleGetItem(func_13191_call(), 0)
call_23235 = relay.TupleGetItem(func_13192_call(), 0)
func_21925_call = mod.get_global_var('func_21925')
func_21927_call = mutated_mod.get_global_var('func_21927')
call_23272 = func_21925_call()
call_23273 = func_21925_call()
func_10991_call = mod.get_global_var('func_10991')
func_10992_call = mutated_mod.get_global_var('func_10992')
call_23298 = relay.TupleGetItem(func_10991_call(), 0)
call_23299 = relay.TupleGetItem(func_10992_call(), 0)
output = relay.Tuple([call_23234,call_23272,call_23298,])
output2 = relay.Tuple([call_23235,call_23273,call_23299,])
func_23313 = relay.Function([], output)
mod['func_23313'] = func_23313
mod = relay.transform.InferType()(mod)
mutated_mod['func_23313'] = func_23313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_23313_call = mutated_mod.get_global_var('func_23313')
call_23314 = func_23313_call()
output = call_23314
func_23315 = relay.Function([], output)
mutated_mod['func_23315'] = func_23315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8895_call = mod.get_global_var('func_8895')
func_8896_call = mutated_mod.get_global_var('func_8896')
call_23344 = relay.TupleGetItem(func_8895_call(), 0)
call_23345 = relay.TupleGetItem(func_8896_call(), 0)
output = relay.Tuple([call_23344,])
output2 = relay.Tuple([call_23345,])
func_23348 = relay.Function([], output)
mod['func_23348'] = func_23348
mod = relay.transform.InferType()(mod)
output = func_23348()
func_23349 = relay.Function([], output)
mutated_mod['func_23349'] = func_23349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12805_call = mod.get_global_var('func_12805')
func_12806_call = mutated_mod.get_global_var('func_12806')
call_23387 = relay.TupleGetItem(func_12805_call(), 0)
call_23388 = relay.TupleGetItem(func_12806_call(), 0)
output = relay.Tuple([call_23387,])
output2 = relay.Tuple([call_23388,])
func_23412 = relay.Function([], output)
mod['func_23412'] = func_23412
mod = relay.transform.InferType()(mod)
output = func_23412()
func_23413 = relay.Function([], output)
mutated_mod['func_23413'] = func_23413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10065_call = mod.get_global_var('func_10065')
func_10067_call = mutated_mod.get_global_var('func_10067')
call_23429 = relay.TupleGetItem(func_10065_call(), 0)
call_23430 = relay.TupleGetItem(func_10067_call(), 0)
func_21743_call = mod.get_global_var('func_21743')
func_21744_call = mutated_mod.get_global_var('func_21744')
call_23469 = func_21743_call()
call_23470 = func_21743_call()
func_19657_call = mod.get_global_var('func_19657')
func_19658_call = mutated_mod.get_global_var('func_19658')
call_23479 = relay.TupleGetItem(func_19657_call(), 0)
call_23480 = relay.TupleGetItem(func_19658_call(), 0)
func_13963_call = mod.get_global_var('func_13963')
func_13964_call = mutated_mod.get_global_var('func_13964')
call_23500 = relay.TupleGetItem(func_13963_call(), 1)
call_23501 = relay.TupleGetItem(func_13964_call(), 1)
uop_23504 = relay.log(call_23469.astype('float64')) # shape=(15, 13, 15)
uop_23506 = relay.log(call_23470.astype('float64')) # shape=(15, 13, 15)
output = relay.Tuple([call_23429,call_23479,call_23500,uop_23504,])
output2 = relay.Tuple([call_23430,call_23480,call_23501,uop_23506,])
func_23511 = relay.Function([], output)
mod['func_23511'] = func_23511
mod = relay.transform.InferType()(mod)
output = func_23511()
func_23512 = relay.Function([], output)
mutated_mod['func_23512'] = func_23512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_23535 = relay.var("var_23535", dtype = "float64", shape = (16, 11, 10))#candidate|23535|(16, 11, 10)|var|float64
var_23536 = relay.var("var_23536", dtype = "float64", shape = (16, 11, 10))#candidate|23536|(16, 11, 10)|var|float64
bop_23537 = relay.divide(var_23535.astype('float64'), relay.reshape(var_23536.astype('float64'), relay.shape_of(var_23535))) # shape=(16, 11, 10)
func_8178_call = mod.get_global_var('func_8178')
func_8179_call = mutated_mod.get_global_var('func_8179')
call_23540 = func_8178_call()
call_23541 = func_8178_call()
output = relay.Tuple([bop_23537,call_23540,])
output2 = relay.Tuple([bop_23537,call_23541,])
func_23543 = relay.Function([var_23535,var_23536,], output)
mod['func_23543'] = func_23543
mod = relay.transform.InferType()(mod)
mutated_mod['func_23543'] = func_23543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_23543_call = mutated_mod.get_global_var('func_23543')
var_23545 = relay.var("var_23545", dtype = "float64", shape = (16, 11, 10))#candidate|23545|(16, 11, 10)|var|float64
var_23546 = relay.var("var_23546", dtype = "float64", shape = (16, 11, 10))#candidate|23546|(16, 11, 10)|var|float64
call_23544 = func_23543_call(var_23545,var_23546,)
output = call_23544
func_23547 = relay.Function([var_23545,var_23546,], output)
mutated_mod['func_23547'] = func_23547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19615_call = mod.get_global_var('func_19615')
func_19617_call = mutated_mod.get_global_var('func_19617')
call_23640 = relay.TupleGetItem(func_19615_call(), 0)
call_23641 = relay.TupleGetItem(func_19617_call(), 0)
output = call_23640
output2 = call_23641
func_23644 = relay.Function([], output)
mod['func_23644'] = func_23644
mod = relay.transform.InferType()(mod)
output = func_23644()
func_23645 = relay.Function([], output)
mutated_mod['func_23645'] = func_23645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14493_call = mod.get_global_var('func_14493')
func_14495_call = mutated_mod.get_global_var('func_14495')
call_23660 = func_14493_call()
call_23661 = func_14493_call()
output = call_23660
output2 = call_23661
func_23678 = relay.Function([], output)
mod['func_23678'] = func_23678
mod = relay.transform.InferType()(mod)
mutated_mod['func_23678'] = func_23678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_23678_call = mutated_mod.get_global_var('func_23678')
call_23679 = func_23678_call()
output = call_23679
func_23680 = relay.Function([], output)
mutated_mod['func_23680'] = func_23680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11194_call = mod.get_global_var('func_11194')
func_11195_call = mutated_mod.get_global_var('func_11195')
call_23705 = func_11194_call()
call_23706 = func_11194_call()
func_9510_call = mod.get_global_var('func_9510')
func_9511_call = mutated_mod.get_global_var('func_9511')
call_23707 = relay.TupleGetItem(func_9510_call(), 1)
call_23708 = relay.TupleGetItem(func_9511_call(), 1)
output = relay.Tuple([call_23705,call_23707,])
output2 = relay.Tuple([call_23706,call_23708,])
func_23711 = relay.Function([], output)
mod['func_23711'] = func_23711
mod = relay.transform.InferType()(mod)
output = func_23711()
func_23712 = relay.Function([], output)
mutated_mod['func_23712'] = func_23712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21430_call = mod.get_global_var('func_21430')
func_21431_call = mutated_mod.get_global_var('func_21431')
call_23717 = relay.TupleGetItem(func_21430_call(), 0)
call_23718 = relay.TupleGetItem(func_21431_call(), 0)
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
const_23767 = relay.const([-3.373937,-9.393453,-1.975317,1.786324,-1.392349,2.855047,-5.259738,-5.187448,3.479096,-1.694451,5.706114,-8.190875,6.076444,1.052321,2.132453,-3.213433,8.599569,-6.809395,9.208501,7.611862,-4.448522,6.264987,-1.637500,4.419079,7.294286,7.255427,7.169987,-9.388491,-8.549493,8.274209,-8.392750,-7.478822,-4.026305,3.805238,-6.703734,7.371684,-8.786283,-2.186242,4.624697,-3.343722,6.045152,1.655155,-6.283723,2.986241,5.411406,-9.329039,0.318176,6.911594,-6.607274,2.708640,-9.033901,1.725294,2.261455,7.407708,-1.430043,-2.390480,2.891610,-2.481378,7.614490,-0.741470,-1.772692,-1.521333,5.216237,-2.166208,8.246786,2.182924,-5.905154,-5.543215,-6.507894,-1.729559,8.033820,-2.930027,-2.227811,-3.894717,9.497590,7.289800,-6.916765,8.167590,8.416969,4.269979,2.659433,-7.921552,9.447059,2.738496,-7.677680,-9.935313,-5.914450,-6.243701,4.333518,4.001881,-5.431285,0.675144,-6.672785,-4.860175,-8.309961,-5.431105,-4.284267,6.785182,3.784673,0.788590,2.266190,-0.217855,8.616909,-6.079174,4.446838,4.846744,-3.149771,-3.635759,2.408930,4.186751,-9.037315,9.899660,-0.792318,1.428385,7.954475,-4.194606,-3.821182,4.537223,6.251679,7.124661,7.676635,-6.327057,6.832281,-5.977218,-5.907993,-9.040485,-2.697914,7.217325,-1.132667,-1.873171,-1.847908,-2.075359,7.155112,-2.328650,-3.542559,-8.640585,-6.395210,5.168751,7.322335,-2.495418,5.849654,6.901295,-5.649173,8.578404,0.740147,-3.590652,-1.557943,-6.690388,-1.499168,-8.953115,-7.240208,-8.405478,-9.155116,-9.698983,-0.646650,1.338875,2.941064,6.210396,7.871269,3.808079,-7.899633,-4.093006,-1.046930,8.212522,4.905445,7.505836,-7.996933,-6.939605,-6.217306,-0.842534,2.676260,-6.199662,-5.650579,-5.823353,-7.139925,-1.160326,-8.755517,8.365112,-8.775924,9.332049,0.423751,9.638700,4.210085,-7.803471,9.266178,-5.688812,-4.715011,2.727764,-6.825360,-5.661645,7.994054,3.373680,-0.989371,6.076736,9.170882,-2.727425,2.173496,-7.403632,-5.024983,-5.055217,-7.431019,-4.831822,-2.183068,1.172006,-9.437511,3.161866,5.374352,0.450177,-0.609089,-7.915622,7.066603,-1.336178,-2.121129,4.483960,3.395525,-8.008805,-0.075267,-6.664626,9.656570,9.698408,3.154323,0.783725,-9.999799,-2.778191,9.535872,-1.800286,-6.018018,-1.582248,-6.080293,1.165914,3.955729,9.611291,-8.188762,-2.898155,3.330020,1.489356,1.820306,5.403816,5.431997,-2.637021,-3.921131,-1.078741,9.027898,-8.687281,-8.217009,0.769944,1.160286,-4.574231,-8.805765,8.571262,-7.967981,-0.259190,-7.333357,0.094048,-2.108949,-8.116289,3.044655,9.378037,5.844708,-1.562054,8.881368,-6.472604,-0.952065,-6.803711,7.264405,-7.560085,8.702159,0.251416,1.463034,5.586489,-3.295041,-9.437202,-6.413583,-4.917948,8.960649,-6.336460,-9.725103,-3.308542,7.246966,6.333084,-2.046294,-1.173987,9.866632,0.142711,2.719493,-4.579615,4.508143,8.724319,-8.226159,0.473313,-0.934168,-5.369162,-7.615675,5.115912,6.521779,1.553671,-9.761031,2.290420,8.767704,-7.084008,-2.287028,4.179123,-7.409478,0.844450,-4.396999,-0.173342,-7.861102,-0.220424,6.231716,-1.000632,-4.699324,4.801334,-7.186056,-0.808675,3.453025,-8.540111,1.084895,2.000659,-2.220056,-5.705281,-0.391152,3.737655,8.543204,1.667941,0.331058,-2.566119,0.770064,-2.576782,-0.981684,-2.970836,-1.288975,7.586709,-6.149481,1.361773,-4.077181,1.881813,-5.882801,2.890452,-9.308207,4.991044,7.083513,-9.065127,8.790537,-6.741607,2.043239,1.874553,3.803205,-3.400905,-9.149169,-2.818574,1.417808,1.838756,-9.097782,-1.707325,0.998512,-6.575642,7.012013,-9.061455,5.188364,-1.926906,5.992733,-2.401106,2.143290,-7.732035,-3.949525,-8.761395,-9.673047,-2.538237,-4.998557,-7.851532,-5.955004,-4.168115,7.387671,-0.360581,0.585547,7.087030,-0.416457,3.549157,-9.364869,0.359597,-8.575458,6.808494,3.579446,1.475205,-8.063865,-4.351500,-0.943877,-1.127032,9.012267,4.249763,1.661580,2.922840,-3.625838,4.741101,-0.831541,-8.000549,-0.308753,7.087799,8.112187,-7.928771,-5.432133,-2.913807,0.985999,-1.354958,2.543327,-5.562388,4.650458,-1.758516,-3.538213,-2.367777,8.739720,-0.494066,-3.160709,3.658040,-5.234576,8.230850,-5.378506,-5.479034,-7.814734,-6.061725,-2.886745,1.221846,-9.213828,3.865375,6.744112,6.978866,-2.696284,4.664096,-9.014298,-4.829698,-1.224628,1.434514,2.086318,-1.811468,3.952932,5.287613,2.613525,4.204340,0.732010,8.040874,-6.379098,4.995343,-2.158915,-0.995526,5.001254,8.715585,-1.732762,9.167892,-3.668114,-8.394106,-4.792424,9.869639,-5.096195,-2.686434,-5.408376,-3.902323,-2.103447,9.949721,-7.499331,2.873282,3.370838,3.342239,-8.984893,2.177666,2.146224,-7.663560,-3.127392,7.412072,-0.768777,-5.260964,9.875060,2.355307,-7.180060,-8.008495,-4.231420,-0.694896,1.987694,-2.890598,-1.061383,-4.276048,0.365338,-3.439948,2.332681,-5.765076,0.067205,-1.688211,3.392016,-5.825169,-9.600070,5.734595,4.047270,-4.279872,9.902658,-0.955499,1.831668,4.710781,2.011683,-8.755188,-0.932962,-1.758522,8.490557,-8.394068,-0.286086,-8.368700,-8.033387,-2.930218,8.372350,-0.598439,0.562007,1.517134,8.235081,2.231826,-6.099925,6.343949,-9.613143,-0.381565,-3.247277,-1.115089,2.452797,-4.399663,-2.220977,6.885298,2.718510,9.616825,-4.906010,9.258712,1.465980,-4.338633,-3.338876,-0.410666,4.886382,-3.343805,-5.040957,1.445880,7.091189,6.290046,-9.351942,-5.925759,-0.488242,-6.835985,-9.184302,-0.896134,-8.844491,1.787739,1.711958,1.259793,-5.876063,-9.420745,-3.368418,-5.710235,7.025350,-0.736906,1.816162,-0.801282,-3.406447,-3.611780,-3.604153,-6.521570,-9.002910,-7.205796,-7.247687,-8.850186,5.386542,9.129725,-5.906813,-5.567701,4.121764,1.694771,0.157600,-2.514290,-2.592018,-2.065167,9.507018,0.470041,-1.846178,3.177755,4.691021,4.127946,3.027102,4.944474,-3.287084,5.222353,-8.998654,-3.537643,-0.986321,8.139126,-0.212981,-9.519478,-0.685656,4.448064,9.682207,1.635852,-7.503793,8.424405,5.105527,-4.999688,-7.560188,3.898719,-2.180996,-6.543501,-6.724974,-0.667999,0.474388,5.049312,-4.770003,-6.656145,3.395299,1.396188,-8.332622,3.115864,2.247368,-6.219853,-2.479727,-4.530996,1.226533,2.643137,-8.671136,-0.609890,-6.014204,5.431076,-5.180459,-8.221850,-0.362005,-9.722022,5.100347,-5.592634,7.847991,-8.945257,6.273736,-3.298084,-4.403551,-0.035187,9.187435,-8.562330,-8.559981,2.639539,-5.268320,7.302624,5.801178,8.058141,7.525159,9.732444,-5.518905,-1.753609,-9.072025,9.339899,8.771871,4.756303,-6.465204,-5.630687,9.894038,-6.813917,-4.213214,-5.350874,8.151365,-9.493287,-6.455550,3.650611,1.796340,-8.556491,-2.576938,-1.682055,1.598159,1.306607,-8.364849,8.880646,2.925594,4.918644,2.586267,1.701173,5.415130,9.137674,7.342779,0.236577,2.471741,-7.039385,7.591752,2.112265,-8.998557,-7.601953,-2.985129,-1.387383,7.755004,9.206071,-6.643513,9.144275,-7.562948,4.460645,1.687554,2.363165,-9.369625,2.580166,-7.959921,-4.934374,5.865707,4.676807,-6.793493,8.918095,6.172441,-3.555894,6.361135,-9.243938,5.836105,1.537734,-7.628526,5.023068,-4.741414,-8.106345,8.352284,4.096202,2.127797,-7.037056,-7.879997,-7.422098,8.070618,1.325841,-1.484945,-4.701233,4.797910,2.739695,-1.606313,-2.936231,2.013946,-0.071708,-3.451952,2.408396,-0.071602,1.208366,9.421335,1.034455,6.329208,5.164234,-3.816674,7.666485,7.744841,5.901510,2.369333,-1.659100,-3.030559,7.766468,-4.965991,-7.506543,-6.317459,0.047986,1.956058,-2.474655,-9.766023,4.612856,-1.068732,-6.050895,0.679359,7.696654,-4.683087,9.840927,-2.386093,1.101982,0.500576,-2.869739,2.152297,3.780933,-2.285821,3.936760,7.375451,8.244268,0.901900,0.150809,7.817375,9.513910,-4.632808,-7.546754,9.655491,1.101312,0.846845,2.475561,8.071524,-9.199065,-8.131533,-4.939725,-3.959826,1.085954,-0.488127,-8.130541,-3.902020,0.967119,-1.350390,8.494841,7.374473,-4.126439,-3.083437,4.911973,-0.890367,9.622919,-7.881158,-6.096934,4.571581,-3.849183,-8.633799,0.480360,8.166248,5.976791,-5.285734,6.575627,5.135815,1.122426,3.629538,4.913527,-5.670218,9.361265,4.640024,9.562930,8.540841,-4.208211,-2.022040,-3.310058,-3.200555,5.563777,6.448867,-9.095555,-7.914109,-5.307572,-0.153255,2.802805,4.425855,7.825809,-6.923771,6.938402,3.786693,1.166289,-7.670646,3.617776,8.742496,4.353231,0.852237,6.584359,0.039362,-1.467290,0.276085,-1.070063,-2.437186,5.800718,-4.515322,-4.329074,-7.889608,0.724983,-8.093023,9.675834,4.784670,-7.392750,-2.862778,-0.130642,6.817011,-7.395110,-4.033950,7.231395,-8.223350,2.684888,-1.603213,-0.617163,7.683202,8.146646,-3.327330,7.042251,4.070183,7.468787,8.280693,-4.581550,-7.693533,-1.356740,6.746621,1.848458,-8.098292,3.964228,-1.028530,-4.065507,9.439773,5.615914,-5.939800,-6.667636,-2.516931,-0.839249,6.966565,6.463539,8.205534,2.269193,7.496536,-8.514647,3.044597,-2.607594,-5.926211,-3.476049,-6.705712,4.698076,-1.537426,0.824028,4.928140,7.112751,-7.431861,-4.314657,-5.819052,-9.466861,-9.884421,9.179024,-0.753476,-8.591762,-6.106959,2.648479,-4.552094,-2.738217,-8.023941,-0.022685,4.767159,-6.234487,-4.324106,7.891008,-8.421454,-4.469459,-8.868682,8.837636,-0.060598,5.217437,-3.492683,8.468314,-9.409750,2.209867,9.387928,-6.080375,5.287568,-7.097549,-7.410744,-0.728687,-1.986296,6.408914,5.533814,1.288589,-6.643321,-4.159257,8.392985,-0.218897,0.825113,-9.202677,9.069653,7.104729,-9.750830,-8.655947,5.586434,9.055049,6.307303,3.332751,0.895769,-2.996132,3.845826,-8.113392,2.586188,-8.947624,8.387614,2.024067,-3.223171,7.630999,8.445157,7.253853,1.812026,-6.335407,3.939801,7.169194,-1.587688,2.658689,-2.326617,5.203186,-3.120263,2.429879,-4.764767,-3.079403,6.057924,9.684548,4.925764,-8.154089,-4.749919,7.484476,-3.489778,-4.459241,3.472900,-0.854833,-1.816693,3.157932,-8.138110,-4.545756,8.585938,6.070049,-6.405312,1.707763,6.307089,-4.214839,-8.698893,6.739468,-7.249486,-7.046901,3.463835,-5.637218,-1.564606,-9.415996,-5.524656,1.784067,7.925933,-3.377484,-9.423000,2.842306,6.591123,6.765463,-2.331984,-9.519983,-7.288949,-1.535905,-2.817645,4.275520,-4.471216,0.020834,-6.133252,-1.175123,0.682336,-8.558007,1.527797,5.980934,9.850914,-6.542884,1.309161,0.491623,1.260113,-0.411911,-0.936774,-1.871989,6.002676,6.661511,5.639474,-6.230087,-2.601214,-2.671687,-6.722385,1.804519,-1.861968,4.756301,-1.002920,4.059087,-5.568179,1.006574,-3.957402,6.597972,7.626764,7.134065,9.593524,2.494880,-5.800780,2.538371,3.048506,5.026892,-1.689095,-1.178648,7.559128,5.592126,3.648248,-2.401396,-6.703770,9.884129,-7.714184,-2.275242,-3.900202,4.184322,5.674483,-6.121542,6.271026,-6.467026,-7.281118,8.725495,4.107277,-6.199824,9.115751,-2.068774,-7.440376,-1.118059,-9.961276,-0.249606,-8.975895,-1.015438,-9.753027,3.659994,-4.597660,-7.986957,-5.703032,-9.365488,-5.163043,-0.255397,4.415738,9.571976,-6.314819,-1.445830,3.352603,-4.787296,-9.143266,0.904344,6.380904,5.385730,0.878529,-4.552755,2.336009,1.983433,1.090982,9.277547,-2.194561,6.343670,-1.261212,3.333821,-2.542834,-4.240920,-8.385454,-4.435037,-5.287937,8.816025,9.877404,5.074676,-6.603572,-1.578672,-0.327436,-5.638390,-0.580924,1.573274,4.181075,-9.941975,-2.861037,5.602078,2.538785,-1.707610,9.265938,2.933477,-2.476902,9.750493,6.622804,-6.390594,3.517729,-5.416909,-9.836900,7.450590,-6.048917,-2.547147,-9.720339,-5.829076,6.884665,0.640393,-7.834439,2.673172,9.502501,-4.605415,-8.611781,-2.490724,9.649752,0.267990,-7.567088,-1.085734,7.763112,-1.232321,-7.410084,9.524937,4.658384,-8.775862,1.824135,-0.847680,-4.921120,0.540262,-4.457576,-1.886134,-2.441605,9.306352,-0.681154,3.863740,-9.577137,8.482710,-6.305778,-1.106998,8.289631,-2.443522,-2.156332,0.758793,3.921692,2.782479,-4.738852,1.623420,-4.907060,-1.106757,-1.208662,-1.335667,2.379106,3.208278,-1.399020,2.100398,-2.984124,-5.440158,5.216958,4.473489,-3.105804,-5.206157,4.114188,6.291724,-9.667450,-6.613507,4.382441,-8.807209,5.947611,7.496464,9.480139,7.078315,-8.195199,2.161558], dtype = "float32")#candidate|23767|(1210,)|const|float32
call_23766 = relay.TupleGetItem(func_1350_call(relay.reshape(const_23767.astype('float32'), [1210,])), 1)
call_23768 = relay.TupleGetItem(func_1352_call(relay.reshape(const_23767.astype('float32'), [1210,])), 1)
uop_23779 = relay.log10(const_23767.astype('float64')) # shape=(1210,)
func_14971_call = mod.get_global_var('func_14971')
func_14973_call = mutated_mod.get_global_var('func_14973')
call_23785 = relay.TupleGetItem(func_14971_call(), 0)
call_23786 = relay.TupleGetItem(func_14973_call(), 0)
func_11697_call = mod.get_global_var('func_11697')
func_11698_call = mutated_mod.get_global_var('func_11698')
call_23804 = func_11697_call()
call_23805 = func_11697_call()
uop_23806 = relay.asinh(uop_23779.astype('float32')) # shape=(1210,)
func_8998_call = mod.get_global_var('func_8998')
func_9000_call = mutated_mod.get_global_var('func_9000')
var_23817 = relay.var("var_23817", dtype = "bool", shape = ())#candidate|23817|()|var|bool
call_23816 = relay.TupleGetItem(func_8998_call(relay.reshape(var_23817.astype('bool'), [])), 0)
call_23818 = relay.TupleGetItem(func_9000_call(relay.reshape(var_23817.astype('bool'), [])), 0)
func_8895_call = mod.get_global_var('func_8895')
func_8896_call = mutated_mod.get_global_var('func_8896')
call_23824 = relay.TupleGetItem(func_8895_call(), 0)
call_23825 = relay.TupleGetItem(func_8896_call(), 0)
output = relay.Tuple([call_23717,call_23766,call_23785,call_23804,uop_23806,call_23816,var_23817,call_23824,])
output2 = relay.Tuple([call_23718,call_23768,call_23786,call_23805,uop_23806,call_23818,var_23817,call_23825,])
func_23842 = relay.Function([var_23817,], output)
mod['func_23842'] = func_23842
mod = relay.transform.InferType()(mod)
mutated_mod['func_23842'] = func_23842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_23843 = relay.var("var_23843", dtype = "bool", shape = ())#candidate|23843|()|var|bool
func_23842_call = mutated_mod.get_global_var('func_23842')
call_23844 = func_23842_call(var_23843)
output = call_23844
func_23845 = relay.Function([var_23843], output)
mutated_mod['func_23845'] = func_23845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5051_call = mod.get_global_var('func_5051')
func_5053_call = mutated_mod.get_global_var('func_5053')
call_23867 = func_5051_call()
call_23868 = func_5051_call()
output = call_23867
output2 = call_23868
func_23876 = relay.Function([], output)
mod['func_23876'] = func_23876
mod = relay.transform.InferType()(mod)
mutated_mod['func_23876'] = func_23876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_23876_call = mutated_mod.get_global_var('func_23876')
call_23877 = func_23876_call()
output = call_23877
func_23878 = relay.Function([], output)
mutated_mod['func_23878'] = func_23878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13845_call = mod.get_global_var('func_13845')
func_13847_call = mutated_mod.get_global_var('func_13847')
call_23901 = relay.TupleGetItem(func_13845_call(), 1)
call_23902 = relay.TupleGetItem(func_13847_call(), 1)
func_8234_call = mod.get_global_var('func_8234')
func_8236_call = mutated_mod.get_global_var('func_8236')
var_23918 = relay.var("var_23918", dtype = "float32", shape = (1210,))#candidate|23918|(1210,)|var|float32
call_23917 = relay.TupleGetItem(func_8234_call(relay.reshape(var_23918.astype('float32'), [11, 110])), 2)
call_23919 = relay.TupleGetItem(func_8236_call(relay.reshape(var_23918.astype('float32'), [11, 110])), 2)
output = relay.Tuple([call_23901,call_23917,var_23918,])
output2 = relay.Tuple([call_23902,call_23919,var_23918,])
func_23928 = relay.Function([var_23918,], output)
mod['func_23928'] = func_23928
mod = relay.transform.InferType()(mod)
var_23929 = relay.var("var_23929", dtype = "float32", shape = (1210,))#candidate|23929|(1210,)|var|float32
output = func_23928(var_23929)
func_23930 = relay.Function([var_23929], output)
mutated_mod['func_23930'] = func_23930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8458_call = mod.get_global_var('func_8458')
func_8460_call = mutated_mod.get_global_var('func_8460')
call_23976 = relay.TupleGetItem(func_8458_call(), 0)
call_23977 = relay.TupleGetItem(func_8460_call(), 0)
func_9176_call = mod.get_global_var('func_9176')
func_9177_call = mutated_mod.get_global_var('func_9177')
call_23993 = relay.TupleGetItem(func_9176_call(), 0)
call_23994 = relay.TupleGetItem(func_9177_call(), 0)
func_13289_call = mod.get_global_var('func_13289')
func_13292_call = mutated_mod.get_global_var('func_13292')
var_24002 = relay.var("var_24002", dtype = "uint16", shape = (32,))#candidate|24002|(32,)|var|uint16
const_24003 = relay.const([-6,1,-7,-9,-10,7,1,-7,9,-1,-8,-3,-2,6,-3,-7,9,-4,4,-3,2,10,-6,-8,-8,7,-10,8,5,5,3,8,-10,10,4,10,1,-1,7,-1,-10,5,-3,1,9,5,-10,1,5,-5,5,7,9,3,1,3,6,-1,-2,-6,-10,2,6,-3,-7,10,-6,-9,4,1,8,9,3,-1,-4,-8,10,6,3,4,8,1,-10,-8,-2,2,-4,-2,-10,-6,1,-9,-3,-4,-4,6,2,-7,8,9,-6,-8,1,-1,-6,-5,10,6,9,-10,10,-7,5,-7,9,1,-8,-8,-2,9,-4,4,8,-9,-2,4,-9,6,-4,5,8,1,-6,4,5,-5,-10,5,9,-9,-7,2,-3,-7,1,2,-7,-7,1,-2,-5,-5,6,-4,-8,-5,-5,10,-7,-7,-9,10,-2,-3,-8,-9,-2,9,8,2,-6,10,7,-9,7,3,-5,-3,9,1,-1,-2,7,-2,7,-1,-4,-4,3,5,1,7,2,4,8,-1,-6,-3,-6,-7,10,6,1,4,5,-5,7,4,-5,-3,6,3,8,-6,-2,7,-5,7,3,1,1,4,-9,9], dtype = "uint16")#candidate|24003|(224,)|const|uint16
call_24001 = relay.TupleGetItem(func_13289_call(relay.reshape(var_24002.astype('uint16'), [16, 1, 2]), relay.reshape(const_24003.astype('uint16'), [16, 7, 2]), ), 2)
call_24004 = relay.TupleGetItem(func_13292_call(relay.reshape(var_24002.astype('uint16'), [16, 1, 2]), relay.reshape(const_24003.astype('uint16'), [16, 7, 2]), ), 2)
output = relay.Tuple([call_23976,call_23993,call_24001,var_24002,const_24003,])
output2 = relay.Tuple([call_23977,call_23994,call_24004,var_24002,const_24003,])
func_24007 = relay.Function([var_24002,], output)
mod['func_24007'] = func_24007
mod = relay.transform.InferType()(mod)
var_24008 = relay.var("var_24008", dtype = "uint16", shape = (32,))#candidate|24008|(32,)|var|uint16
output = func_24007(var_24008)
func_24009 = relay.Function([var_24008], output)
mutated_mod['func_24009'] = func_24009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5416_call = mod.get_global_var('func_5416')
func_5418_call = mutated_mod.get_global_var('func_5418')
call_24040 = func_5416_call()
call_24041 = func_5416_call()
output = call_24040
output2 = call_24041
func_24047 = relay.Function([], output)
mod['func_24047'] = func_24047
mod = relay.transform.InferType()(mod)
output = func_24047()
func_24048 = relay.Function([], output)
mutated_mod['func_24048'] = func_24048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21087_call = mod.get_global_var('func_21087')
func_21089_call = mutated_mod.get_global_var('func_21089')
call_24100 = relay.TupleGetItem(func_21087_call(), 1)
call_24101 = relay.TupleGetItem(func_21089_call(), 1)
func_8352_call = mod.get_global_var('func_8352')
func_8353_call = mutated_mod.get_global_var('func_8353')
call_24115 = relay.TupleGetItem(func_8352_call(), 0)
call_24116 = relay.TupleGetItem(func_8353_call(), 0)
func_22909_call = mod.get_global_var('func_22909')
func_22911_call = mutated_mod.get_global_var('func_22911')
call_24139 = func_22909_call()
call_24140 = func_22909_call()
output = relay.Tuple([call_24100,call_24115,call_24139,])
output2 = relay.Tuple([call_24101,call_24116,call_24140,])
func_24148 = relay.Function([], output)
mod['func_24148'] = func_24148
mod = relay.transform.InferType()(mod)
mutated_mod['func_24148'] = func_24148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24148_call = mutated_mod.get_global_var('func_24148')
call_24149 = func_24148_call()
output = call_24149
func_24150 = relay.Function([], output)
mutated_mod['func_24150'] = func_24150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8352_call = mod.get_global_var('func_8352')
func_8353_call = mutated_mod.get_global_var('func_8353')
call_24157 = relay.TupleGetItem(func_8352_call(), 0)
call_24158 = relay.TupleGetItem(func_8353_call(), 0)
output = call_24157
output2 = call_24158
func_24160 = relay.Function([], output)
mod['func_24160'] = func_24160
mod = relay.transform.InferType()(mod)
mutated_mod['func_24160'] = func_24160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24160_call = mutated_mod.get_global_var('func_24160')
call_24161 = func_24160_call()
output = call_24161
func_24162 = relay.Function([], output)
mutated_mod['func_24162'] = func_24162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5544_call = mod.get_global_var('func_5544')
func_5545_call = mutated_mod.get_global_var('func_5545')
call_24181 = relay.TupleGetItem(func_5544_call(), 1)
call_24182 = relay.TupleGetItem(func_5545_call(), 1)
output = relay.Tuple([call_24181,])
output2 = relay.Tuple([call_24182,])
func_24184 = relay.Function([], output)
mod['func_24184'] = func_24184
mod = relay.transform.InferType()(mod)
mutated_mod['func_24184'] = func_24184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24184_call = mutated_mod.get_global_var('func_24184')
call_24185 = func_24184_call()
output = call_24185
func_24186 = relay.Function([], output)
mutated_mod['func_24186'] = func_24186
mutated_mod = relay.transform.InferType()(mutated_mod)
const_24207 = relay.const([[[-2,-10,-7,7],[1,-6,7,-3],[-8,5,2,8],[-6,-8,-1,-9],[-5,-1,1,8],[-10,-5,2,1],[-4,-7,-2,6],[7,2,-4,2],[-10,-4,9,-3],[10,-5,7,4],[2,10,8,1],[9,5,4,7]],[[-8,-5,6,-5],[7,9,-6,7],[-4,-2,-4,10],[-6,-9,10,-6],[-8,5,-10,-8],[-2,3,10,6],[9,-8,8,-6],[-3,-7,-2,1],[-6,2,9,-5],[7,-9,-9,2],[-2,3,-8,-6],[-6,4,-8,6]],[[5,1,9,7],[5,-2,-10,4],[-5,-3,8,6],[4,1,-8,9],[-8,7,8,1],[9,-8,10,-2],[1,-1,-7,-4],[-8,-5,4,10],[-4,-7,-1,6],[6,1,-7,10],[-8,-8,8,6],[-7,-4,6,-2]],[[3,5,-2,3],[6,-1,-9,-3],[-3,-4,5,9],[-2,2,9,10],[-7,-5,7,-4],[-4,-8,-7,-1],[-3,3,4,9],[-7,8,7,7],[5,3,-1,-5],[-2,-9,-3,1],[-5,4,-6,-9],[-4,-10,-5,6]],[[-10,1,6,6],[8,-8,8,-9],[-4,6,3,-3],[-10,-9,10,6],[2,1,3,7],[7,-4,-5,-7],[5,-6,-9,-5],[-4,6,10,3],[-9,-10,-6,-6],[2,-5,5,3],[7,8,2,7],[-10,9,-6,1]],[[-1,-10,10,7],[7,9,7,-2],[5,2,-5,-3],[-3,2,7,7],[-6,2,-4,-8],[-2,-7,-10,3],[8,3,4,6],[-8,-9,6,10],[6,10,2,4],[-6,1,7,1],[9,9,-10,3],[5,-1,-1,-5]],[[-5,-6,2,1],[9,5,-5,-3],[10,10,-9,6],[-4,-7,9,1],[-4,3,6,-5],[5,3,6,-6],[10,-6,6,2],[-2,6,-2,7],[1,3,1,4],[-8,6,5,-10],[-8,1,-10,-6],[6,4,-7,4]],[[-9,7,5,-6],[10,-6,-3,-7],[5,-5,-3,-5],[-2,-6,10,-9],[7,10,9,6],[7,-2,10,-3],[9,10,-10,-2],[-6,1,8,-4],[6,-10,10,-4],[-10,9,-6,-7],[-2,-7,-3,-5],[7,4,6,2]],[[-4,8,-8,2],[9,-2,-6,1],[7,10,-9,9],[-3,-3,3,-2],[10,2,2,-8],[5,-7,-8,-1],[-6,-4,-8,-1],[8,-9,-1,-9],[-2,-9,-4,5],[-6,10,-1,-10],[2,2,-9,-2],[-8,9,3,-10]],[[-8,7,-5,-1],[9,6,2,6],[2,-5,-4,-9],[7,2,5,-5],[1,4,6,-5],[-7,-4,-7,-5],[2,-1,9,9],[-9,6,-4,-8],[4,-9,7,5],[6,-3,2,3],[9,10,-5,4],[1,7,-2,10]],[[-7,6,6,-8],[-3,-7,-10,-10],[-8,7,-1,-7],[-2,10,1,9],[9,-4,9,9],[-4,8,9,-2],[-8,10,9,-4],[2,-4,3,1],[-1,9,6,1],[-4,-3,-4,-10],[4,-6,7,-4],[5,2,-3,2]],[[-7,-3,8,-4],[-10,-5,-3,-1],[-7,10,8,-5],[-3,-10,9,2],[4,-8,9,5],[8,-8,-7,8],[5,-9,3,5],[-8,-6,-1,-2],[6,-7,1,-8],[4,-2,4,-8],[-9,1,1,-1],[5,8,6,10]],[[2,-8,-1,-4],[2,-7,-9,5],[-2,-1,6,-5],[-9,-4,-3,-8],[-2,-7,-5,-10],[-10,-3,-4,6],[-7,-10,-1,2],[8,-7,-10,5],[3,7,-5,-5],[5,-4,6,-4],[9,4,1,-9],[3,9,3,7]],[[7,4,-2,7],[-6,-4,-10,-3],[-6,-8,6,5],[5,3,9,-6],[6,8,-10,3],[5,8,10,4],[-2,-1,2,-6],[-2,-5,-2,7],[2,6,-10,9],[10,1,-1,-4],[-7,-9,-2,6],[-5,5,3,-5]],[[-7,6,-4,3],[2,-4,8,4],[-4,4,10,-2],[-2,-4,8,7],[-2,1,10,2],[7,-7,-5,-2],[-3,-6,8,-10],[4,-3,-3,6],[-7,-3,-2,-1],[10,-5,8,-3],[4,6,5,2],[9,-2,8,-8]]], dtype = "uint32")#candidate|24207|(15, 12, 4)|const|uint32
var_24208 = relay.var("var_24208", dtype = "uint32", shape = (15, 12, 4))#candidate|24208|(15, 12, 4)|var|uint32
bop_24209 = relay.less_equal(const_24207.astype('bool'), relay.reshape(var_24208.astype('bool'), relay.shape_of(const_24207))) # shape=(15, 12, 4)
func_14331_call = mod.get_global_var('func_14331')
func_14333_call = mutated_mod.get_global_var('func_14333')
call_24214 = relay.TupleGetItem(func_14331_call(), 0)
call_24215 = relay.TupleGetItem(func_14333_call(), 0)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_24218 = relay.TupleGetItem(func_5163_call(), 2)
call_24219 = relay.TupleGetItem(func_5164_call(), 2)
output = relay.Tuple([bop_24209,call_24214,call_24218,])
output2 = relay.Tuple([bop_24209,call_24215,call_24219,])
func_24225 = relay.Function([var_24208,], output)
mod['func_24225'] = func_24225
mod = relay.transform.InferType()(mod)
var_24226 = relay.var("var_24226", dtype = "uint32", shape = (15, 12, 4))#candidate|24226|(15, 12, 4)|var|uint32
output = func_24225(var_24226)
func_24227 = relay.Function([var_24226], output)
mutated_mod['func_24227'] = func_24227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8352_call = mod.get_global_var('func_8352')
func_8353_call = mutated_mod.get_global_var('func_8353')
call_24244 = relay.TupleGetItem(func_8352_call(), 0)
call_24245 = relay.TupleGetItem(func_8353_call(), 0)
output = call_24244
output2 = call_24245
func_24259 = relay.Function([], output)
mod['func_24259'] = func_24259
mod = relay.transform.InferType()(mod)
mutated_mod['func_24259'] = func_24259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24259_call = mutated_mod.get_global_var('func_24259')
call_24260 = func_24259_call()
output = call_24260
func_24261 = relay.Function([], output)
mutated_mod['func_24261'] = func_24261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_20900_call = mod.get_global_var('func_20900')
func_20901_call = mutated_mod.get_global_var('func_20901')
call_24262 = relay.TupleGetItem(func_20900_call(), 1)
call_24263 = relay.TupleGetItem(func_20901_call(), 1)
func_20260_call = mod.get_global_var('func_20260')
func_20261_call = mutated_mod.get_global_var('func_20261')
call_24264 = func_20260_call()
call_24265 = func_20260_call()
func_4525_call = mod.get_global_var('func_4525')
func_4528_call = mutated_mod.get_global_var('func_4528')
const_24277 = relay.const([False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False], dtype = "bool")#candidate|24277|(675,)|const|bool
call_24276 = relay.TupleGetItem(func_4525_call(relay.reshape(const_24277.astype('bool'), [15, 9, 5]), relay.reshape(const_24277.astype('bool'), [15, 9, 5]), ), 3)
call_24278 = relay.TupleGetItem(func_4528_call(relay.reshape(const_24277.astype('bool'), [15, 9, 5]), relay.reshape(const_24277.astype('bool'), [15, 9, 5]), ), 3)
output = relay.Tuple([call_24262,call_24264,call_24276,const_24277,])
output2 = relay.Tuple([call_24263,call_24265,call_24278,const_24277,])
func_24279 = relay.Function([], output)
mod['func_24279'] = func_24279
mod = relay.transform.InferType()(mod)
mutated_mod['func_24279'] = func_24279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24279_call = mutated_mod.get_global_var('func_24279')
call_24280 = func_24279_call()
output = call_24280
func_24281 = relay.Function([], output)
mutated_mod['func_24281'] = func_24281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17139_call = mod.get_global_var('func_17139')
func_17141_call = mutated_mod.get_global_var('func_17141')
call_24315 = relay.TupleGetItem(func_17139_call(), 0)
call_24316 = relay.TupleGetItem(func_17141_call(), 0)
output = relay.Tuple([call_24315,])
output2 = relay.Tuple([call_24316,])
func_24317 = relay.Function([], output)
mod['func_24317'] = func_24317
mod = relay.transform.InferType()(mod)
output = func_24317()
func_24318 = relay.Function([], output)
mutated_mod['func_24318'] = func_24318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13963_call = mod.get_global_var('func_13963')
func_13964_call = mutated_mod.get_global_var('func_13964')
call_24377 = relay.TupleGetItem(func_13963_call(), 0)
call_24378 = relay.TupleGetItem(func_13964_call(), 0)
func_7960_call = mod.get_global_var('func_7960')
func_7961_call = mutated_mod.get_global_var('func_7961')
call_24388 = relay.TupleGetItem(func_7960_call(), 0)
call_24389 = relay.TupleGetItem(func_7961_call(), 0)
func_22805_call = mod.get_global_var('func_22805')
func_22807_call = mutated_mod.get_global_var('func_22807')
call_24392 = func_22805_call()
call_24393 = func_22805_call()
output = relay.Tuple([call_24377,call_24388,call_24392,])
output2 = relay.Tuple([call_24378,call_24389,call_24393,])
func_24412 = relay.Function([], output)
mod['func_24412'] = func_24412
mod = relay.transform.InferType()(mod)
output = func_24412()
func_24413 = relay.Function([], output)
mutated_mod['func_24413'] = func_24413
mutated_mod = relay.transform.InferType()(mutated_mod)
var_24430 = relay.var("var_24430", dtype = "int16", shape = (12, 4, 15))#candidate|24430|(12, 4, 15)|var|int16
var_24431 = relay.var("var_24431", dtype = "int16", shape = (12, 4, 15))#candidate|24431|(12, 4, 15)|var|int16
bop_24432 = relay.less(var_24430.astype('bool'), relay.reshape(var_24431.astype('bool'), relay.shape_of(var_24430))) # shape=(12, 4, 15)
output = relay.Tuple([bop_24432,])
output2 = relay.Tuple([bop_24432,])
func_24438 = relay.Function([var_24430,var_24431,], output)
mod['func_24438'] = func_24438
mod = relay.transform.InferType()(mod)
mutated_mod['func_24438'] = func_24438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24438_call = mutated_mod.get_global_var('func_24438')
var_24440 = relay.var("var_24440", dtype = "int16", shape = (12, 4, 15))#candidate|24440|(12, 4, 15)|var|int16
var_24441 = relay.var("var_24441", dtype = "int16", shape = (12, 4, 15))#candidate|24441|(12, 4, 15)|var|int16
call_24439 = func_24438_call(var_24440,var_24441,)
output = call_24439
func_24442 = relay.Function([var_24440,var_24441,], output)
mutated_mod['func_24442'] = func_24442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19657_call = mod.get_global_var('func_19657')
func_19658_call = mutated_mod.get_global_var('func_19658')
call_24493 = relay.TupleGetItem(func_19657_call(), 1)
call_24494 = relay.TupleGetItem(func_19658_call(), 1)
func_7040_call = mod.get_global_var('func_7040')
func_7041_call = mutated_mod.get_global_var('func_7041')
call_24505 = relay.TupleGetItem(func_7040_call(), 0)
call_24506 = relay.TupleGetItem(func_7041_call(), 0)
func_23711_call = mod.get_global_var('func_23711')
func_23712_call = mutated_mod.get_global_var('func_23712')
call_24509 = relay.TupleGetItem(func_23711_call(), 1)
call_24510 = relay.TupleGetItem(func_23712_call(), 1)
output = relay.Tuple([call_24493,call_24505,call_24509,])
output2 = relay.Tuple([call_24494,call_24506,call_24510,])
func_24513 = relay.Function([], output)
mod['func_24513'] = func_24513
mod = relay.transform.InferType()(mod)
mutated_mod['func_24513'] = func_24513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24513_call = mutated_mod.get_global_var('func_24513')
call_24514 = func_24513_call()
output = call_24514
func_24515 = relay.Function([], output)
mutated_mod['func_24515'] = func_24515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11560_call = mod.get_global_var('func_11560')
func_11562_call = mutated_mod.get_global_var('func_11562')
call_24516 = relay.TupleGetItem(func_11560_call(), 0)
call_24517 = relay.TupleGetItem(func_11562_call(), 0)
func_8125_call = mod.get_global_var('func_8125')
func_8127_call = mutated_mod.get_global_var('func_8127')
var_24519 = relay.var("var_24519", dtype = "bool", shape = (1620,))#candidate|24519|(1620,)|var|bool
call_24518 = relay.TupleGetItem(func_8125_call(relay.reshape(var_24519.astype('bool'), [12, 9, 15])), 0)
call_24520 = relay.TupleGetItem(func_8127_call(relay.reshape(var_24519.astype('bool'), [12, 9, 15])), 0)
func_8025_call = mod.get_global_var('func_8025')
func_8026_call = mutated_mod.get_global_var('func_8026')
call_24522 = relay.TupleGetItem(func_8025_call(), 1)
call_24523 = relay.TupleGetItem(func_8026_call(), 1)
func_5506_call = mod.get_global_var('func_5506')
func_5508_call = mutated_mod.get_global_var('func_5508')
call_24524 = relay.TupleGetItem(func_5506_call(), 3)
call_24525 = relay.TupleGetItem(func_5508_call(), 3)
func_7470_call = mod.get_global_var('func_7470')
func_7473_call = mutated_mod.get_global_var('func_7473')
var_24529 = relay.var("var_24529", dtype = "uint8", shape = (3, 60))#candidate|24529|(3, 60)|var|uint8
var_24530 = relay.var("var_24530", dtype = "int8", shape = (330,))#candidate|24530|(330,)|var|int8
call_24528 = relay.TupleGetItem(func_7470_call(relay.reshape(var_24529.astype('uint8'), [30, 6]), relay.reshape(var_24530.astype('int8'), [330,]), ), 2)
call_24531 = relay.TupleGetItem(func_7473_call(relay.reshape(var_24529.astype('uint8'), [30, 6]), relay.reshape(var_24530.astype('int8'), [330,]), ), 2)
func_10895_call = mod.get_global_var('func_10895')
func_10897_call = mutated_mod.get_global_var('func_10897')
var_24560 = relay.var("var_24560", dtype = "bool", shape = (2112,))#candidate|24560|(2112,)|var|bool
call_24559 = relay.TupleGetItem(func_10895_call(relay.reshape(var_24560.astype('bool'), [2112,])), 3)
call_24561 = relay.TupleGetItem(func_10897_call(relay.reshape(var_24560.astype('bool'), [2112,])), 3)
var_24567 = relay.var("var_24567", dtype = "uint8", shape = (15, 3, 4))#candidate|24567|(15, 3, 4)|var|uint8
bop_24568 = relay.divide(call_24528.astype('float32'), relay.reshape(var_24567.astype('float32'), relay.shape_of(call_24528))) # shape=(15, 3, 4)
bop_24571 = relay.divide(call_24531.astype('float32'), relay.reshape(var_24567.astype('float32'), relay.shape_of(call_24531))) # shape=(15, 3, 4)
output = relay.Tuple([call_24516,call_24518,var_24519,call_24522,call_24524,var_24529,var_24530,call_24559,var_24560,bop_24568,])
output2 = relay.Tuple([call_24517,call_24520,var_24519,call_24523,call_24525,var_24529,var_24530,call_24561,var_24560,bop_24571,])
func_24588 = relay.Function([var_24519,var_24529,var_24530,var_24560,var_24567,], output)
mod['func_24588'] = func_24588
mod = relay.transform.InferType()(mod)
var_24589 = relay.var("var_24589", dtype = "bool", shape = (1620,))#candidate|24589|(1620,)|var|bool
var_24590 = relay.var("var_24590", dtype = "uint8", shape = (3, 60))#candidate|24590|(3, 60)|var|uint8
var_24591 = relay.var("var_24591", dtype = "int8", shape = (330,))#candidate|24591|(330,)|var|int8
var_24592 = relay.var("var_24592", dtype = "bool", shape = (2112,))#candidate|24592|(2112,)|var|bool
var_24593 = relay.var("var_24593", dtype = "uint8", shape = (15, 3, 4))#candidate|24593|(15, 3, 4)|var|uint8
output = func_24588(var_24589,var_24590,var_24591,var_24592,var_24593,)
func_24594 = relay.Function([var_24589,var_24590,var_24591,var_24592,var_24593,], output)
mutated_mod['func_24594'] = func_24594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_20521_call = mod.get_global_var('func_20521')
func_20523_call = mutated_mod.get_global_var('func_20523')
call_24596 = relay.TupleGetItem(func_20521_call(), 2)
call_24597 = relay.TupleGetItem(func_20523_call(), 2)
output = call_24596
output2 = call_24597
func_24613 = relay.Function([], output)
mod['func_24613'] = func_24613
mod = relay.transform.InferType()(mod)
mutated_mod['func_24613'] = func_24613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24613_call = mutated_mod.get_global_var('func_24613')
call_24614 = func_24613_call()
output = call_24614
func_24615 = relay.Function([], output)
mutated_mod['func_24615'] = func_24615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_24616 = func_4854_call()
call_24617 = func_4854_call()
output = call_24616
output2 = call_24617
func_24639 = relay.Function([], output)
mod['func_24639'] = func_24639
mod = relay.transform.InferType()(mod)
mutated_mod['func_24639'] = func_24639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24639_call = mutated_mod.get_global_var('func_24639')
call_24640 = func_24639_call()
output = call_24640
func_24641 = relay.Function([], output)
mutated_mod['func_24641'] = func_24641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11697_call = mod.get_global_var('func_11697')
func_11698_call = mutated_mod.get_global_var('func_11698')
call_24645 = func_11697_call()
call_24646 = func_11697_call()
func_23711_call = mod.get_global_var('func_23711')
func_23712_call = mutated_mod.get_global_var('func_23712')
call_24658 = relay.TupleGetItem(func_23711_call(), 1)
call_24659 = relay.TupleGetItem(func_23712_call(), 1)
output = relay.Tuple([call_24645,call_24658,])
output2 = relay.Tuple([call_24646,call_24659,])
func_24687 = relay.Function([], output)
mod['func_24687'] = func_24687
mod = relay.transform.InferType()(mod)
mutated_mod['func_24687'] = func_24687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24687_call = mutated_mod.get_global_var('func_24687')
call_24688 = func_24687_call()
output = call_24688
func_24689 = relay.Function([], output)
mutated_mod['func_24689'] = func_24689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7610_call = mod.get_global_var('func_7610')
func_7612_call = mutated_mod.get_global_var('func_7612')
call_24713 = func_7610_call()
call_24714 = func_7610_call()
func_14466_call = mod.get_global_var('func_14466')
func_14468_call = mutated_mod.get_global_var('func_14468')
call_24720 = relay.TupleGetItem(func_14466_call(), 1)
call_24721 = relay.TupleGetItem(func_14468_call(), 1)
func_15906_call = mod.get_global_var('func_15906')
func_15909_call = mutated_mod.get_global_var('func_15909')
var_24723 = relay.var("var_24723", dtype = "float32", shape = (1210,))#candidate|24723|(1210,)|var|float32
call_24722 = relay.TupleGetItem(func_15906_call(relay.reshape(var_24723.astype('float32'), [1210,])), 3)
call_24724 = relay.TupleGetItem(func_15909_call(relay.reshape(var_24723.astype('float32'), [1210,])), 3)
output = relay.Tuple([call_24713,call_24720,call_24722,var_24723,])
output2 = relay.Tuple([call_24714,call_24721,call_24724,var_24723,])
func_24727 = relay.Function([var_24723,], output)
mod['func_24727'] = func_24727
mod = relay.transform.InferType()(mod)
var_24728 = relay.var("var_24728", dtype = "float32", shape = (1210,))#candidate|24728|(1210,)|var|float32
output = func_24727(var_24728)
func_24729 = relay.Function([var_24728], output)
mutated_mod['func_24729'] = func_24729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7257_call = mod.get_global_var('func_7257')
func_7259_call = mutated_mod.get_global_var('func_7259')
call_24776 = func_7257_call()
call_24777 = func_7257_call()
func_20851_call = mod.get_global_var('func_20851')
func_20853_call = mutated_mod.get_global_var('func_20853')
call_24779 = relay.TupleGetItem(func_20851_call(), 4)
call_24780 = relay.TupleGetItem(func_20853_call(), 4)
func_12363_call = mod.get_global_var('func_12363')
func_12365_call = mutated_mod.get_global_var('func_12365')
call_24786 = func_12363_call()
call_24787 = func_12363_call()
output = relay.Tuple([call_24776,call_24779,call_24786,])
output2 = relay.Tuple([call_24777,call_24780,call_24787,])
func_24796 = relay.Function([], output)
mod['func_24796'] = func_24796
mod = relay.transform.InferType()(mod)
mutated_mod['func_24796'] = func_24796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24796_call = mutated_mod.get_global_var('func_24796')
call_24797 = func_24796_call()
output = call_24797
func_24798 = relay.Function([], output)
mutated_mod['func_24798'] = func_24798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12647_call = mod.get_global_var('func_12647')
func_12649_call = mutated_mod.get_global_var('func_12649')
call_24811 = func_12647_call()
call_24812 = func_12647_call()
func_10322_call = mod.get_global_var('func_10322')
func_10323_call = mutated_mod.get_global_var('func_10323')
call_24822 = relay.TupleGetItem(func_10322_call(), 0)
call_24823 = relay.TupleGetItem(func_10323_call(), 0)
func_18074_call = mod.get_global_var('func_18074')
func_18077_call = mutated_mod.get_global_var('func_18077')
const_24826 = relay.const([True,False,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,False], dtype = "bool")#candidate|24826|(675,)|const|bool
call_24825 = relay.TupleGetItem(func_18074_call(relay.reshape(const_24826.astype('bool'), [675,])), 1)
call_24827 = relay.TupleGetItem(func_18077_call(relay.reshape(const_24826.astype('bool'), [675,])), 1)
bop_24829 = relay.logical_and(const_24826.astype('bool'), relay.reshape(call_24825.astype('bool'), relay.shape_of(const_24826))) # shape=(675,)
bop_24832 = relay.logical_and(const_24826.astype('bool'), relay.reshape(call_24827.astype('bool'), relay.shape_of(const_24826))) # shape=(675,)
output = relay.Tuple([call_24811,call_24822,bop_24829,])
output2 = relay.Tuple([call_24812,call_24823,bop_24832,])
func_24841 = relay.Function([], output)
mod['func_24841'] = func_24841
mod = relay.transform.InferType()(mod)
mutated_mod['func_24841'] = func_24841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24841_call = mutated_mod.get_global_var('func_24841')
call_24842 = func_24841_call()
output = call_24842
func_24843 = relay.Function([], output)
mutated_mod['func_24843'] = func_24843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21649_call = mod.get_global_var('func_21649')
func_21650_call = mutated_mod.get_global_var('func_21650')
call_24846 = relay.TupleGetItem(func_21649_call(), 0)
call_24847 = relay.TupleGetItem(func_21650_call(), 0)
func_14466_call = mod.get_global_var('func_14466')
func_14468_call = mutated_mod.get_global_var('func_14468')
call_24853 = relay.TupleGetItem(func_14466_call(), 1)
call_24854 = relay.TupleGetItem(func_14468_call(), 1)
func_22550_call = mod.get_global_var('func_22550')
func_22551_call = mutated_mod.get_global_var('func_22551')
call_24855 = relay.TupleGetItem(func_22550_call(), 0)
call_24856 = relay.TupleGetItem(func_22551_call(), 0)
func_20469_call = mod.get_global_var('func_20469')
func_20472_call = mutated_mod.get_global_var('func_20472')
call_24860 = func_20469_call(relay.reshape(call_24846.astype('bool'), [12, 9, 15]))
call_24861 = func_20469_call(relay.reshape(call_24846.astype('bool'), [12, 9, 15]))
func_19938_call = mod.get_global_var('func_19938')
func_19940_call = mutated_mod.get_global_var('func_19940')
call_24877 = func_19938_call()
call_24878 = func_19938_call()
output = relay.Tuple([call_24846,call_24853,call_24855,call_24860,call_24877,])
output2 = relay.Tuple([call_24847,call_24854,call_24856,call_24861,call_24878,])
func_24879 = relay.Function([], output)
mod['func_24879'] = func_24879
mod = relay.transform.InferType()(mod)
mutated_mod['func_24879'] = func_24879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24879_call = mutated_mod.get_global_var('func_24879')
call_24880 = func_24879_call()
output = call_24880
func_24881 = relay.Function([], output)
mutated_mod['func_24881'] = func_24881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_23711_call = mod.get_global_var('func_23711')
func_23712_call = mutated_mod.get_global_var('func_23712')
call_24888 = relay.TupleGetItem(func_23711_call(), 0)
call_24889 = relay.TupleGetItem(func_23712_call(), 0)
output = call_24888
output2 = call_24889
func_24892 = relay.Function([], output)
mod['func_24892'] = func_24892
mod = relay.transform.InferType()(mod)
output = func_24892()
func_24893 = relay.Function([], output)
mutated_mod['func_24893'] = func_24893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16274_call = mod.get_global_var('func_16274')
func_16275_call = mutated_mod.get_global_var('func_16275')
call_24908 = relay.TupleGetItem(func_16274_call(), 0)
call_24909 = relay.TupleGetItem(func_16275_call(), 0)
func_17822_call = mod.get_global_var('func_17822')
func_17823_call = mutated_mod.get_global_var('func_17823')
call_24914 = relay.TupleGetItem(func_17822_call(), 1)
call_24915 = relay.TupleGetItem(func_17823_call(), 1)
func_5342_call = mod.get_global_var('func_5342')
func_5343_call = mutated_mod.get_global_var('func_5343')
call_24928 = relay.TupleGetItem(func_5342_call(), 0)
call_24929 = relay.TupleGetItem(func_5343_call(), 0)
output = relay.Tuple([call_24908,call_24914,call_24928,])
output2 = relay.Tuple([call_24909,call_24915,call_24929,])
func_24935 = relay.Function([], output)
mod['func_24935'] = func_24935
mod = relay.transform.InferType()(mod)
output = func_24935()
func_24936 = relay.Function([], output)
mutated_mod['func_24936'] = func_24936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mod.get_global_var('func_6073')
func_6075_call = mutated_mod.get_global_var('func_6075')
call_24989 = relay.TupleGetItem(func_6073_call(), 0)
call_24990 = relay.TupleGetItem(func_6075_call(), 0)
func_8252_call = mod.get_global_var('func_8252')
func_8253_call = mutated_mod.get_global_var('func_8253')
call_25000 = relay.TupleGetItem(func_8252_call(), 0)
call_25001 = relay.TupleGetItem(func_8253_call(), 0)
func_6083_call = mod.get_global_var('func_6083')
func_6085_call = mutated_mod.get_global_var('func_6085')
call_25016 = relay.TupleGetItem(func_6083_call(), 0)
call_25017 = relay.TupleGetItem(func_6085_call(), 0)
output = relay.Tuple([call_24989,call_25000,call_25016,])
output2 = relay.Tuple([call_24990,call_25001,call_25017,])
func_25032 = relay.Function([], output)
mod['func_25032'] = func_25032
mod = relay.transform.InferType()(mod)
mutated_mod['func_25032'] = func_25032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_25032_call = mutated_mod.get_global_var('func_25032')
call_25033 = func_25032_call()
output = call_25033
func_25034 = relay.Function([], output)
mutated_mod['func_25034'] = func_25034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14129_call = mod.get_global_var('func_14129')
func_14131_call = mutated_mod.get_global_var('func_14131')
call_25042 = func_14129_call()
call_25043 = func_14129_call()
func_22893_call = mod.get_global_var('func_22893')
func_22894_call = mutated_mod.get_global_var('func_22894')
call_25064 = relay.TupleGetItem(func_22893_call(), 1)
call_25065 = relay.TupleGetItem(func_22894_call(), 1)
func_18387_call = mod.get_global_var('func_18387')
func_18389_call = mutated_mod.get_global_var('func_18389')
call_25081 = func_18387_call()
call_25082 = func_18387_call()
output = relay.Tuple([call_25042,call_25064,call_25081,])
output2 = relay.Tuple([call_25043,call_25065,call_25082,])
func_25083 = relay.Function([], output)
mod['func_25083'] = func_25083
mod = relay.transform.InferType()(mod)
mutated_mod['func_25083'] = func_25083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_25083_call = mutated_mod.get_global_var('func_25083')
call_25084 = func_25083_call()
output = call_25084
func_25085 = relay.Function([], output)
mutated_mod['func_25085'] = func_25085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_22138_call = mod.get_global_var('func_22138')
func_22140_call = mutated_mod.get_global_var('func_22140')
call_25299 = relay.TupleGetItem(func_22138_call(), 0)
call_25300 = relay.TupleGetItem(func_22140_call(), 0)
func_11416_call = mod.get_global_var('func_11416')
func_11418_call = mutated_mod.get_global_var('func_11418')
call_25307 = func_11416_call()
call_25308 = func_11416_call()
output = relay.Tuple([call_25299,call_25307,])
output2 = relay.Tuple([call_25300,call_25308,])
func_25354 = relay.Function([], output)
mod['func_25354'] = func_25354
mod = relay.transform.InferType()(mod)
output = func_25354()
func_25355 = relay.Function([], output)
mutated_mod['func_25355'] = func_25355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_21002_call = mod.get_global_var('func_21002')
func_21003_call = mutated_mod.get_global_var('func_21003')
call_25358 = func_21002_call()
call_25359 = func_21002_call()
output = relay.Tuple([call_25358,])
output2 = relay.Tuple([call_25359,])
func_25372 = relay.Function([], output)
mod['func_25372'] = func_25372
mod = relay.transform.InferType()(mod)
mutated_mod['func_25372'] = func_25372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_25372_call = mutated_mod.get_global_var('func_25372')
call_25373 = func_25372_call()
output = call_25373
func_25374 = relay.Function([], output)
mutated_mod['func_25374'] = func_25374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4907_call = mod.get_global_var('func_4907')
func_4908_call = mutated_mod.get_global_var('func_4908')
call_25463 = func_4907_call()
call_25464 = func_4907_call()
func_22893_call = mod.get_global_var('func_22893')
func_22894_call = mutated_mod.get_global_var('func_22894')
call_25469 = relay.TupleGetItem(func_22893_call(), 0)
call_25470 = relay.TupleGetItem(func_22894_call(), 0)
output = relay.Tuple([call_25463,call_25469,])
output2 = relay.Tuple([call_25464,call_25470,])
func_25478 = relay.Function([], output)
mod['func_25478'] = func_25478
mod = relay.transform.InferType()(mod)
mutated_mod['func_25478'] = func_25478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_25478_call = mutated_mod.get_global_var('func_25478')
call_25479 = func_25478_call()
output = call_25479
func_25480 = relay.Function([], output)
mutated_mod['func_25480'] = func_25480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_25500 = relay.var("var_25500", dtype = "float32", shape = ())#candidate|25500|()|var|float32
const_25501 = relay.const([[[7.456008,-6.819764,5.076527,-5.330174,9.352168,-5.596742,0.309731,-2.000908,5.925238,-4.200211,-6.964898,4.885550,-5.194391,8.638149]],[[-3.082827,-8.931058,2.000767,-9.040959,8.627863,9.445327,4.211809,3.071035,-6.558983,-8.224153,6.124678,-6.541220,7.144984,-7.140418]],[[2.338155,-1.136567,5.137462,9.801247,8.539419,2.252620,-3.445052,-8.456276,-0.842427,-3.843040,5.667841,-6.104189,8.190511,-2.366464]],[[-7.854875,4.108254,1.806720,9.992034,-9.252699,2.991655,-2.733177,-8.164817,-1.551953,-7.289671,-8.210092,9.127566,6.008609,-0.268195]]], dtype = "float32")#candidate|25501|(4, 1, 14)|const|float32
bop_25502 = relay.less(var_25500.astype('bool'), const_25501.astype('bool')) # shape=(4, 1, 14)
bop_25512 = relay.bitwise_xor(var_25500.astype('int8'), bop_25502.astype('int8')) # shape=(4, 1, 14)
output = relay.Tuple([bop_25512,])
output2 = relay.Tuple([bop_25512,])
func_25520 = relay.Function([var_25500,], output)
mod['func_25520'] = func_25520
mod = relay.transform.InferType()(mod)
var_25521 = relay.var("var_25521", dtype = "float32", shape = ())#candidate|25521|()|var|float32
output = func_25520(var_25521)
func_25522 = relay.Function([var_25521], output)
mutated_mod['func_25522'] = func_25522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_25562 = relay.var("var_25562", dtype = "float32", shape = (14, 9, 4))#candidate|25562|(14, 9, 4)|var|float32
uop_25563 = relay.atanh(var_25562.astype('float32')) # shape=(14, 9, 4)
uop_25581 = relay.tan(uop_25563.astype('float32')) # shape=(14, 9, 4)
output = relay.Tuple([uop_25581,])
output2 = relay.Tuple([uop_25581,])
F = relay.Function([var_25562,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_25562,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_81 = relay.var("var_81", dtype = "uint32", shape = ())#candidate|81|()|var|uint32
const_82 = relay.const([[5],[7],[-6]], dtype = "uint32")#candidate|82|(3, 1)|const|uint32
bop_83 = relay.equal(var_81.astype('bool'), const_82.astype('bool')) # shape=(3, 1)
output = bop_83
output2 = bop_83
func_106 = relay.Function([var_81,], output)
mod['func_106'] = func_106
mod = relay.transform.InferType()(mod)
mutated_mod['func_106'] = func_106
mutated_mod = relay.transform.InferType()(mutated_mod)
var_107 = relay.var("var_107", dtype = "uint32", shape = ())#candidate|107|()|var|uint32
func_106_call = mutated_mod.get_global_var('func_106')
call_108 = func_106_call(var_107)
output = call_108
func_109 = relay.Function([var_107], output)
mutated_mod['func_109'] = func_109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_111 = relay.var("var_111", dtype = "float32", shape = (7, 9, 10))#candidate|111|(7, 9, 10)|var|float32
uop_112 = relay.cos(var_111.astype('float32')) # shape=(7, 9, 10)
bop_116 = relay.subtract(uop_112.astype('int64'), relay.reshape(var_111.astype('int64'), relay.shape_of(uop_112))) # shape=(7, 9, 10)
output = bop_116
output2 = bop_116
func_119 = relay.Function([var_111,], output)
mod['func_119'] = func_119
mod = relay.transform.InferType()(mod)
var_120 = relay.var("var_120", dtype = "float32", shape = (7, 9, 10))#candidate|120|(7, 9, 10)|var|float32
output = func_119(var_120)
func_121 = relay.Function([var_120], output)
mutated_mod['func_121'] = func_121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_325 = relay.var("var_325", dtype = "uint16", shape = (15, 13, 5))#candidate|325|(15, 13, 5)|var|uint16
var_326 = relay.var("var_326", dtype = "uint16", shape = (15, 13, 5))#candidate|326|(15, 13, 5)|var|uint16
bop_327 = relay.not_equal(var_325.astype('bool'), relay.reshape(var_326.astype('bool'), relay.shape_of(var_325))) # shape=(15, 13, 5)
func_106_call = mod.get_global_var('func_106')
func_109_call = mutated_mod.get_global_var('func_109')
const_347 = relay.const(-8, dtype = "uint32")#candidate|347|()|const|uint32
call_346 = func_106_call(relay.reshape(const_347.astype('uint32'), []))
call_348 = func_106_call(relay.reshape(const_347.astype('uint32'), []))
output = relay.Tuple([bop_327,call_346,const_347,])
output2 = relay.Tuple([bop_327,call_348,const_347,])
func_349 = relay.Function([var_325,var_326,], output)
mod['func_349'] = func_349
mod = relay.transform.InferType()(mod)
mutated_mod['func_349'] = func_349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_349_call = mutated_mod.get_global_var('func_349')
var_351 = relay.var("var_351", dtype = "uint16", shape = (15, 13, 5))#candidate|351|(15, 13, 5)|var|uint16
var_352 = relay.var("var_352", dtype = "uint16", shape = (15, 13, 5))#candidate|352|(15, 13, 5)|var|uint16
call_350 = func_349_call(var_351,var_352,)
output = call_350
func_353 = relay.Function([var_351,var_352,], output)
mutated_mod['func_353'] = func_353
mutated_mod = relay.transform.InferType()(mutated_mod)
const_518 = relay.const([[[4.498608,2.379857,3.063579,0.825286,5.160616,1.232244,8.243871,0.103228,0.125049,-2.763451,-5.346944,-0.833655,3.319103,4.932547],[-5.080400,-3.863679,-3.735861,8.540001,-1.729576,0.371156,-1.923171,-0.816425,-6.306119,0.085146,-1.173144,7.788581,3.405824,3.402294],[-8.859262,-8.426626,3.097625,-9.596736,-5.499586,2.302555,-0.124392,8.340105,-9.004110,7.132925,2.109260,-5.709859,-6.296548,-1.113094],[1.943322,-6.114754,-2.642489,-3.316235,3.420790,-1.687790,3.189558,-2.332378,-6.287834,-0.103807,4.967974,8.659279,-2.823109,-5.307681],[-9.754555,-5.772589,-9.698242,0.498884,-0.045548,-4.708755,-3.338464,9.344203,-3.016891,-8.802210,5.772404,1.349813,-5.962185,9.540992],[-6.910224,3.450488,4.271437,3.051964,-0.520483,-3.313094,-2.645009,-8.321918,1.237053,-2.390487,7.793541,8.156368,6.501776,3.978948],[5.930200,7.623124,-1.594433,-4.782973,-0.308970,1.581773,-4.841193,4.158592,-7.732147,-2.120362,-9.598375,2.341068,1.921683,-5.505328]],[[-9.989047,-0.732910,0.958329,7.192738,-6.642255,9.603968,4.511924,3.571547,-7.578535,7.478421,-4.049657,9.889963,-8.966858,-1.099749],[6.842799,0.017259,-0.499782,5.542694,2.158612,9.338523,4.869834,-2.769869,1.832241,-4.172521,6.006645,-6.715359,3.678462,-3.440186],[-4.266177,8.255368,0.632594,6.296473,-1.609172,6.314707,-9.938846,6.354888,4.971476,-4.332692,2.321619,5.551407,-9.001292,-9.330337],[7.375666,-4.095325,0.189420,3.997263,-4.698303,-5.126871,1.201350,-0.061489,-2.757891,7.640157,4.784293,-0.595336,2.284937,1.676599],[4.153059,1.161553,-2.323536,9.816826,-8.200128,6.335164,1.994718,8.297871,1.790131,-9.919301,-5.922542,-9.122632,-4.650692,-8.323824],[-4.161299,3.746643,-9.980563,-4.514405,-5.407359,-1.560218,-7.538951,4.979988,-2.842126,-8.001906,-4.866287,4.544276,5.684355,7.566014],[5.357783,0.885672,3.472275,7.198110,1.044181,6.463755,3.659397,-4.785552,7.323772,-9.420520,8.529083,9.026982,1.561434,-7.567094]],[[-1.162672,-5.782286,6.090315,1.080277,7.024684,-9.748831,-7.167822,-5.955074,-1.153409,9.383258,9.974847,5.823004,4.450876,-8.421485],[3.803420,5.084373,-4.577851,4.717436,1.358470,8.575738,-1.872577,3.575131,2.801103,-9.320454,8.463025,0.683601,1.159201,9.751252],[5.843123,-5.215068,-5.704831,9.074161,8.387158,-6.737011,9.231285,0.090667,-4.735976,6.631466,5.304710,4.334222,8.066781,2.929516],[3.709917,4.667007,-1.200522,4.988342,1.907138,-6.600428,-1.967298,5.717522,-0.844972,3.351496,-2.199294,-6.828869,-1.149338,-1.435023],[-5.933147,7.724627,-0.032417,-2.898345,-1.738612,1.798338,-6.969596,-8.841440,-4.297811,1.711999,1.631103,6.431170,1.695220,5.384485],[6.048476,4.338753,2.508740,6.612457,-4.286312,-7.893717,-3.687839,-4.213090,1.534854,7.310414,3.038949,-4.456168,2.843316,-8.814448],[2.466988,-9.424535,9.801156,-0.013545,-7.251662,-9.681891,-7.157454,9.579200,-5.332448,1.172993,2.388297,5.131154,9.447969,7.660928]],[[-0.914845,5.714546,2.753092,-7.202479,-9.146288,6.404525,6.194565,7.304755,-5.220539,-1.872715,-5.855126,5.845646,-7.129504,-5.294034],[-6.409185,-5.952585,1.334886,1.744232,4.613150,1.289271,-5.895779,9.505952,-3.842895,3.873007,9.988192,7.890547,-9.378336,8.266685],[-0.350142,-5.538421,5.104542,6.684692,5.462726,5.265144,-1.267283,-1.423677,3.060998,-1.620576,-0.746908,8.157182,9.447201,2.589895],[5.883832,-3.316196,2.828849,-4.648115,1.619261,7.133009,-4.130342,-2.938256,-8.711839,-9.355810,-9.361822,4.438096,-1.941229,-7.681846],[-0.676582,8.589585,8.074825,1.452725,2.997799,5.003790,4.422777,5.308085,-2.704757,-4.604495,-5.417759,-8.877280,-8.773469,1.382552],[-1.343050,-0.041329,3.099821,-4.285745,-8.826399,3.094516,-7.517256,-7.948226,-1.353214,0.682960,0.814279,6.072277,-3.730775,-0.377764],[4.244988,-0.404465,-1.665445,-5.174788,-7.644524,-1.852183,-2.587329,-6.466379,-5.744548,-7.126704,-0.263112,8.189831,-6.610139,4.240787]],[[1.553396,5.689720,0.131103,-5.894478,-1.402836,-1.483260,-4.171726,9.710844,-8.448737,7.972779,7.605386,6.071416,9.679619,8.778810],[9.699711,6.038119,5.568262,-8.232770,-2.519113,-8.972709,7.411068,2.621769,0.957844,7.376018,4.018237,-3.643235,-3.490547,-7.612041],[0.666183,2.566156,4.517696,9.026744,8.672132,5.683197,-2.945186,6.117940,-6.729709,0.004793,8.232128,-9.818659,5.757498,1.155458],[-8.707671,-6.527809,-4.132425,2.407795,-6.750009,-3.390097,-1.297218,2.145210,6.143571,-7.699695,2.466011,3.014768,-4.286033,1.163161],[-3.733087,-9.709810,8.925826,-4.518766,-8.726320,6.622208,-3.000361,6.877494,1.540728,-3.088942,3.573449,0.213635,-8.302995,3.845368],[-5.839839,3.920834,-5.459578,8.467607,-5.470355,1.726791,8.897940,8.891751,-3.546720,-4.820994,3.655410,-3.382762,-1.044725,2.155738],[-9.323032,2.210508,-3.941603,3.056072,-0.349687,-6.346955,9.406096,-6.606595,-7.829551,-3.691950,-9.461891,-2.656719,3.566214,-9.925864]],[[-3.714097,4.639184,-8.030822,5.631736,8.037198,4.737863,-8.081507,-7.939488,4.413565,-6.016254,-7.752938,-2.126159,-4.539413,-6.380590],[5.087560,3.161371,-1.152171,-5.194307,0.974942,6.343400,3.662758,7.349344,-9.668628,3.024385,-8.628195,1.466408,-4.018583,1.102335],[5.440161,5.768040,-6.703011,-1.355031,4.867725,4.866910,8.769449,4.488120,-9.277914,-8.911343,-1.720371,-6.813686,3.841852,4.340728],[-0.019330,-4.455782,-3.604201,-8.027671,-7.646256,4.305705,-8.928511,5.542753,-0.326610,-9.369766,5.862627,6.207307,-6.704767,-7.841600],[-7.943153,2.328739,-1.820681,-0.231323,3.952700,1.725066,5.851665,7.458550,9.514139,3.868957,3.529208,-0.954917,-4.654668,-6.359420],[-0.880077,4.106029,-7.072443,1.870090,-0.529984,7.091016,-3.418479,-4.085813,-1.876454,5.127472,-0.242833,4.834040,-3.641335,-1.608174],[7.971659,4.298216,3.989863,-5.115882,-5.427708,-0.627704,5.620632,-0.511021,-2.533732,-8.981063,2.825745,-9.917144,-3.472092,0.075396]],[[-5.212312,-3.603605,7.074844,4.164257,-7.557355,-4.877413,9.603449,6.395616,0.408667,-5.174534,-3.613488,-4.764757,2.320965,9.479027],[-0.138191,-8.707964,-8.472667,-1.271313,4.354382,-3.990621,-0.867791,-3.193431,1.823360,-0.039837,9.280114,-5.487440,9.756309,2.951454],[-1.651431,1.692458,-7.736495,1.955467,-4.972488,-0.577027,1.306365,2.198912,9.627597,5.458664,5.487073,8.314252,-8.381611,7.051973],[-4.738293,-8.000064,5.105893,5.725251,-4.836107,8.686289,9.311732,-4.780858,-3.711738,-5.459333,1.385479,2.049840,2.879592,5.551407],[-0.925257,-1.660660,-6.217534,8.285050,-7.210407,3.937071,1.696568,4.326010,-0.979603,0.091257,4.581349,-0.201917,1.981537,3.336881],[2.867322,6.071902,5.957098,-3.221450,-0.058436,-8.327834,7.747321,1.457578,-9.819269,5.134730,-4.763976,8.542180,-2.353186,-3.386842],[5.795192,-5.970691,8.774415,8.010592,3.622246,-3.145849,3.990457,-1.124819,-1.977316,-5.313422,-3.978949,1.003035,-5.159401,-3.498336]],[[-0.144890,3.726932,1.754848,-7.565075,7.262060,4.375860,-1.306184,-8.971509,-0.800656,-4.264152,5.471221,5.065040,-5.302660,-0.094616],[-3.516556,3.267833,-9.517824,-3.842285,-5.695848,-5.139717,-4.785206,4.056311,1.115710,5.237877,-1.249249,-2.541469,-4.925783,-3.982515],[-7.866579,0.176490,0.603204,1.961101,0.266465,2.914549,5.219862,2.057413,-6.849466,-4.689146,1.129322,1.346289,6.349918,6.787698],[-2.284304,-9.918329,-1.599491,6.345094,-6.272089,8.035379,-3.719519,3.355226,-9.904368,-0.543042,0.919243,-5.685177,-3.809204,5.508002],[8.418559,8.694405,-6.198535,-5.716504,2.355754,-7.125015,5.861930,-4.785511,6.428246,1.320884,-4.599774,-2.612169,-9.739634,-4.222126],[-0.612074,-5.114961,-0.806230,4.585115,9.537222,-6.619626,1.981528,-0.610159,-5.803808,2.080392,-9.686211,-3.492426,-0.720801,2.154977],[5.902974,3.919260,3.689238,-5.732855,4.975390,-7.814802,0.014697,5.073468,1.402589,4.420676,-0.284597,1.145385,1.143292,-3.148894]],[[-5.692736,-6.118727,1.572962,-4.888759,3.957258,6.749215,-3.244006,1.023609,-6.237333,7.685062,-4.137364,4.578409,7.256584,-6.896063],[-5.339329,-0.757497,-3.376904,1.559298,-2.334689,-5.682664,-7.236273,-5.535541,4.769531,-8.513200,-4.896028,9.486950,3.490417,-9.269967],[-3.527902,4.476717,2.739480,1.748068,0.369439,5.559562,-6.041476,3.532345,5.811915,-1.007496,-3.760740,-5.966423,-9.888107,5.515068],[6.647125,-8.250226,-2.471515,-5.083840,8.998142,1.637392,-1.467992,-1.582665,-1.042390,1.292532,4.312171,-8.332292,5.403615,-2.407488],[8.568373,1.660823,8.863955,-3.918929,1.161178,7.157359,-4.207044,2.142217,-2.131600,-2.725846,-4.010590,-3.733748,1.848843,6.195503],[-9.416658,-9.965705,3.214642,-7.642645,9.641322,2.230094,3.258873,0.086649,0.792122,4.924542,-6.697668,5.275007,1.417139,-1.913204],[-9.579091,0.674335,2.041445,-8.282690,4.965114,-2.044032,9.045239,-5.557022,-3.708372,6.286883,-9.272390,3.449716,-4.682885,3.626795]],[[4.206842,-0.093117,6.028363,-0.040269,5.442812,-9.879035,9.504977,9.393139,-9.537384,8.583485,4.553595,-8.459231,1.308862,-3.783064],[-7.443021,-0.376635,5.743126,-8.939407,-4.263371,4.727267,7.514471,1.835861,-4.080541,-8.596105,-3.408906,-6.179272,-2.828534,6.498935],[-1.035787,5.290102,-7.880052,-3.327245,-7.105321,-1.547085,8.399217,-6.728213,6.414151,7.231638,-6.340998,-0.332700,-5.019851,-6.440164],[-6.741901,-0.256233,1.763216,7.278024,4.296108,8.724383,-5.940748,1.229004,6.595085,6.067360,3.451039,4.753449,-4.391023,-3.513779],[-2.209915,2.890851,-1.402491,8.643923,2.961718,0.799365,0.749364,-3.970631,8.166381,0.957694,3.176072,1.661733,-6.110299,-8.614721],[1.213635,9.385439,0.262562,-7.098671,-2.159389,7.045776,-0.611479,1.223414,3.630256,-6.153261,5.964168,1.082577,-6.014163,0.104600],[5.286557,4.625125,-3.032219,-9.636925,6.798235,2.638785,4.417917,5.735604,-2.914509,3.223664,-6.878365,-6.342266,6.220175,-1.754307]],[[-9.493941,-2.594022,5.973954,-6.642475,-5.104581,3.450165,8.886052,-5.684626,6.448057,1.503894,-1.736272,3.686069,-4.536283,-7.876625],[9.805231,5.351051,-8.503523,-9.500587,0.779473,0.851239,8.722558,2.140661,4.870441,0.176906,3.477487,-1.761669,4.595287,-8.793688],[0.848829,-1.547329,9.809442,3.043246,4.283952,1.190758,-4.616032,7.275230,4.367159,7.332142,-8.933463,9.650504,1.307251,5.256946],[1.767682,-2.553725,-7.544439,0.532380,-7.231830,0.478861,-0.904713,-6.814056,6.071139,0.912933,-5.986031,8.020777,1.207410,-8.674192],[6.631505,-0.684737,9.470011,0.088239,5.933185,9.797723,6.165228,6.942604,1.755885,2.802129,3.581349,6.689232,5.502918,-5.213747],[7.532767,8.418288,-6.412572,6.554439,-4.539831,4.995184,2.823889,0.208236,1.173951,2.821046,-4.579185,4.881856,5.911475,0.603487],[-0.600727,9.237860,-7.549566,-6.759531,-6.901780,-1.351003,-9.976468,-0.547726,-0.421490,4.746107,2.488345,-4.496122,4.566441,9.833400]],[[-4.314853,2.291261,9.080779,-9.403865,4.949014,-5.640886,-1.610414,-7.011026,9.091104,-2.316864,-0.753126,5.145348,-4.344672,5.793001],[-9.242284,-7.862848,6.876379,3.257715,9.841097,-7.116250,-6.065775,-1.842750,9.172997,5.540997,-4.796200,-8.845177,8.799685,-6.548367],[4.845007,1.074856,-0.127107,-5.092628,8.488291,-0.314348,7.646548,2.484381,-9.981667,-6.784582,-4.575116,-0.948911,8.127128,4.365144],[-9.268188,9.123145,4.484054,8.257218,-4.221852,9.754291,0.755841,-7.801752,-4.934104,-6.177053,-7.706959,-7.584317,0.003499,5.688364],[2.606914,7.206982,-5.442468,0.285347,-2.994134,6.597628,-0.358731,-3.746023,6.533690,-8.392396,0.535169,-0.950151,0.221481,-1.093704],[5.407235,-8.669830,0.404196,-3.771874,-5.310807,6.284153,5.258098,7.061706,-9.804047,2.000562,6.701751,2.329683,5.517040,-9.753812],[9.258849,8.004601,-0.326133,7.421067,5.166718,1.519409,-2.666630,-3.779593,1.919718,7.718274,-3.174351,9.655173,1.538596,-1.708330]],[[-8.525592,0.323053,5.142402,-1.812892,-3.647522,9.273674,-4.425505,4.661763,-9.215169,-9.471506,-8.815381,3.745467,-8.353173,-9.164270],[0.143084,-5.165220,6.536843,1.663780,-2.374862,-7.669797,-1.902539,3.822159,-6.594329,1.439842,-5.251377,-6.198755,1.897575,6.965703],[3.456920,3.906320,-8.035995,-2.863634,-1.904226,2.944904,-3.054890,8.418921,6.207335,1.377456,-8.950555,-7.640695,-8.545983,3.958209],[-0.130642,9.445702,-1.486824,1.689089,3.019636,-4.710188,8.637678,-4.503830,8.608530,-5.342730,-3.149657,-8.576983,-7.540080,-8.246563],[5.037649,0.260039,-7.075609,6.664191,9.514534,-6.853032,9.939562,-5.497668,-9.482566,-3.948836,0.073272,-3.447580,-2.418303,-1.843201],[-4.299680,4.616854,-2.990901,4.061629,2.257138,8.597541,7.390362,8.477009,-1.107287,-3.739848,1.783066,-8.634649,6.025786,-7.058482],[4.738510,6.043207,9.590914,6.728094,8.787343,6.955171,-1.078611,8.301937,-0.619846,-6.188162,1.678817,2.128768,3.453833,0.801972]],[[-3.148527,-1.133283,-4.126008,3.342564,-4.163941,4.045448,-1.999874,-6.908434,7.203209,-9.474907,7.243342,-9.428040,9.910961,5.686712],[1.843065,-0.223581,-6.867900,6.144367,-6.565083,2.978418,2.433960,-0.093376,6.409427,-0.361558,-0.012775,-7.110295,0.253778,-7.833666],[-2.385268,4.794717,-9.980564,4.183461,-4.830814,8.406495,-3.819111,3.725151,6.011331,7.197974,4.762480,1.825323,-0.163914,9.785220],[-9.778214,8.425368,5.311855,-6.001876,-6.127065,-6.359057,-4.527649,2.459391,-4.229617,3.749780,-0.921191,-9.281387,-3.188196,5.044174],[6.874183,8.403897,4.045983,-7.263176,7.381307,-1.934686,8.827519,9.828726,9.369381,-7.038565,8.348053,3.910050,-5.055318,2.281986],[-5.986683,3.970875,3.646146,5.550626,9.511095,7.876705,7.865730,-6.835130,6.002317,-7.411554,-1.927867,-2.860944,-8.107143,9.285165],[-7.586946,-3.691465,-1.352130,-5.807034,-8.172189,-2.205721,-3.901220,-6.585181,5.615040,-4.704040,-3.333032,7.406630,8.598610,0.538863]]], dtype = "float32")#candidate|518|(14, 7, 14)|const|float32
uop_519 = relay.asin(const_518.astype('float32')) # shape=(14, 7, 14)
uop_529 = relay.cos(uop_519.astype('float32')) # shape=(14, 7, 14)
uop_533 = relay.log10(uop_519.astype('float64')) # shape=(14, 7, 14)
uop_540 = relay.erf(uop_529.astype('float32')) # shape=(14, 7, 14)
output = relay.Tuple([uop_533,uop_540,])
output2 = relay.Tuple([uop_533,uop_540,])
func_548 = relay.Function([], output)
mod['func_548'] = func_548
mod = relay.transform.InferType()(mod)
mutated_mod['func_548'] = func_548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_548_call = mutated_mod.get_global_var('func_548')
call_549 = func_548_call()
output = call_549
func_550 = relay.Function([], output)
mutated_mod['func_550'] = func_550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_548_call = mod.get_global_var('func_548')
func_550_call = mutated_mod.get_global_var('func_550')
call_617 = relay.TupleGetItem(func_548_call(), 0)
call_618 = relay.TupleGetItem(func_550_call(), 0)
output = relay.Tuple([call_617,])
output2 = relay.Tuple([call_618,])
func_619 = relay.Function([], output)
mod['func_619'] = func_619
mod = relay.transform.InferType()(mod)
output = func_619()
func_620 = relay.Function([], output)
mutated_mod['func_620'] = func_620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_548_call = mod.get_global_var('func_548')
func_550_call = mutated_mod.get_global_var('func_550')
call_688 = relay.TupleGetItem(func_548_call(), 0)
call_689 = relay.TupleGetItem(func_550_call(), 0)
func_106_call = mod.get_global_var('func_106')
func_109_call = mutated_mod.get_global_var('func_109')
var_691 = relay.var("var_691", dtype = "uint32", shape = ())#candidate|691|()|var|uint32
call_690 = func_106_call(relay.reshape(var_691.astype('uint32'), []))
call_692 = func_106_call(relay.reshape(var_691.astype('uint32'), []))
output = relay.Tuple([call_688,call_690,var_691,])
output2 = relay.Tuple([call_689,call_692,var_691,])
func_698 = relay.Function([var_691,], output)
mod['func_698'] = func_698
mod = relay.transform.InferType()(mod)
mutated_mod['func_698'] = func_698
mutated_mod = relay.transform.InferType()(mutated_mod)
var_699 = relay.var("var_699", dtype = "uint32", shape = ())#candidate|699|()|var|uint32
func_698_call = mutated_mod.get_global_var('func_698')
call_700 = func_698_call(var_699)
output = call_700
func_701 = relay.Function([var_699], output)
mutated_mod['func_701'] = func_701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_548_call = mod.get_global_var('func_548')
func_550_call = mutated_mod.get_global_var('func_550')
call_705 = relay.TupleGetItem(func_548_call(), 1)
call_706 = relay.TupleGetItem(func_550_call(), 1)
func_106_call = mod.get_global_var('func_106')
func_109_call = mutated_mod.get_global_var('func_109')
var_710 = relay.var("var_710", dtype = "uint32", shape = ())#candidate|710|()|var|uint32
call_709 = func_106_call(relay.reshape(var_710.astype('uint32'), []))
call_711 = func_106_call(relay.reshape(var_710.astype('uint32'), []))
bop_718 = relay.bitwise_and(call_705.astype('uint8'), var_710.astype('uint8')) # shape=(14, 7, 14)
bop_721 = relay.bitwise_and(call_706.astype('uint8'), var_710.astype('uint8')) # shape=(14, 7, 14)
output = relay.Tuple([call_709,bop_718,])
output2 = relay.Tuple([call_711,bop_721,])
func_722 = relay.Function([var_710,], output)
mod['func_722'] = func_722
mod = relay.transform.InferType()(mod)
var_723 = relay.var("var_723", dtype = "uint32", shape = ())#candidate|723|()|var|uint32
output = func_722(var_723)
func_724 = relay.Function([var_723], output)
mutated_mod['func_724'] = func_724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mod.get_global_var('func_619')
func_620_call = mutated_mod.get_global_var('func_620')
call_784 = relay.TupleGetItem(func_619_call(), 0)
call_785 = relay.TupleGetItem(func_620_call(), 0)
func_106_call = mod.get_global_var('func_106')
func_109_call = mutated_mod.get_global_var('func_109')
var_791 = relay.var("var_791", dtype = "uint32", shape = ())#candidate|791|()|var|uint32
call_790 = func_106_call(relay.reshape(var_791.astype('uint32'), []))
call_792 = func_106_call(relay.reshape(var_791.astype('uint32'), []))
bop_793 = relay.less(var_791.astype('bool'), call_790.astype('bool')) # shape=(3, 1)
bop_796 = relay.less(var_791.astype('bool'), call_792.astype('bool')) # shape=(3, 1)
output = relay.Tuple([call_784,bop_793,])
output2 = relay.Tuple([call_785,bop_796,])
func_799 = relay.Function([var_791,], output)
mod['func_799'] = func_799
mod = relay.transform.InferType()(mod)
mutated_mod['func_799'] = func_799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_800 = relay.var("var_800", dtype = "uint32", shape = ())#candidate|800|()|var|uint32
func_799_call = mutated_mod.get_global_var('func_799')
call_801 = func_799_call(var_800)
output = call_801
func_802 = relay.Function([var_800], output)
mutated_mod['func_802'] = func_802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mod.get_global_var('func_619')
func_620_call = mutated_mod.get_global_var('func_620')
call_833 = relay.TupleGetItem(func_619_call(), 0)
call_834 = relay.TupleGetItem(func_620_call(), 0)
func_548_call = mod.get_global_var('func_548')
func_550_call = mutated_mod.get_global_var('func_550')
call_857 = relay.TupleGetItem(func_548_call(), 0)
call_858 = relay.TupleGetItem(func_550_call(), 0)
uop_866 = relay.sigmoid(call_857.astype('float32')) # shape=(14, 7, 14)
uop_868 = relay.sigmoid(call_858.astype('float32')) # shape=(14, 7, 14)
output = relay.Tuple([call_833,uop_866,])
output2 = relay.Tuple([call_834,uop_868,])
func_871 = relay.Function([], output)
mod['func_871'] = func_871
mod = relay.transform.InferType()(mod)
mutated_mod['func_871'] = func_871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_871_call = mutated_mod.get_global_var('func_871')
call_872 = func_871_call()
output = call_872
func_873 = relay.Function([], output)
mutated_mod['func_873'] = func_873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mod.get_global_var('func_619')
func_620_call = mutated_mod.get_global_var('func_620')
call_883 = relay.TupleGetItem(func_619_call(), 0)
call_884 = relay.TupleGetItem(func_620_call(), 0)
output = call_883
output2 = call_884
func_892 = relay.Function([], output)
mod['func_892'] = func_892
mod = relay.transform.InferType()(mod)
output = func_892()
func_893 = relay.Function([], output)
mutated_mod['func_893'] = func_893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_548_call = mod.get_global_var('func_548')
func_550_call = mutated_mod.get_global_var('func_550')
call_924 = relay.TupleGetItem(func_548_call(), 0)
call_925 = relay.TupleGetItem(func_550_call(), 0)
output = call_924
output2 = call_925
func_941 = relay.Function([], output)
mod['func_941'] = func_941
mod = relay.transform.InferType()(mod)
output = func_941()
func_942 = relay.Function([], output)
mutated_mod['func_942'] = func_942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_948 = func_892_call()
call_949 = func_892_call()
output = call_948
output2 = call_949
func_951 = relay.Function([], output)
mod['func_951'] = func_951
mod = relay.transform.InferType()(mod)
mutated_mod['func_951'] = func_951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_951_call = mutated_mod.get_global_var('func_951')
call_952 = func_951_call()
output = call_952
func_953 = relay.Function([], output)
mutated_mod['func_953'] = func_953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_960 = relay.var("var_960", dtype = "uint8", shape = ())#candidate|960|()|var|uint8
var_961 = relay.var("var_961", dtype = "uint8", shape = (8, 8, 3))#candidate|961|(8, 8, 3)|var|uint8
bop_962 = relay.left_shift(var_960.astype('uint8'), var_961.astype('uint8')) # shape=(8, 8, 3)
func_799_call = mod.get_global_var('func_799')
func_802_call = mutated_mod.get_global_var('func_802')
call_965 = relay.TupleGetItem(func_799_call(relay.reshape(var_960.astype('uint32'), [])), 1)
call_966 = relay.TupleGetItem(func_802_call(relay.reshape(var_960.astype('uint32'), [])), 1)
func_119_call = mod.get_global_var('func_119')
func_121_call = mutated_mod.get_global_var('func_121')
var_968 = relay.var("var_968", dtype = "float32", shape = (630,))#candidate|968|(630,)|var|float32
call_967 = func_119_call(relay.reshape(var_968.astype('float32'), [7, 9, 10]))
call_969 = func_119_call(relay.reshape(var_968.astype('float32'), [7, 9, 10]))
func_619_call = mod.get_global_var('func_619')
func_620_call = mutated_mod.get_global_var('func_620')
call_970 = relay.TupleGetItem(func_619_call(), 0)
call_971 = relay.TupleGetItem(func_620_call(), 0)
output = relay.Tuple([bop_962,call_965,call_967,var_968,call_970,])
output2 = relay.Tuple([bop_962,call_966,call_969,var_968,call_971,])
func_985 = relay.Function([var_960,var_961,var_968,], output)
mod['func_985'] = func_985
mod = relay.transform.InferType()(mod)
mutated_mod['func_985'] = func_985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_985_call = mutated_mod.get_global_var('func_985')
var_987 = relay.var("var_987", dtype = "uint8", shape = ())#candidate|987|()|var|uint8
var_988 = relay.var("var_988", dtype = "uint8", shape = (8, 8, 3))#candidate|988|(8, 8, 3)|var|uint8
var_989 = relay.var("var_989", dtype = "float32", shape = (630,))#candidate|989|(630,)|var|float32
call_986 = func_985_call(var_987,var_988,var_989,)
output = call_986
func_990 = relay.Function([var_987,var_988,var_989,], output)
mutated_mod['func_990'] = func_990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_941_call = mod.get_global_var('func_941')
func_942_call = mutated_mod.get_global_var('func_942')
call_1014 = func_941_call()
call_1015 = func_941_call()
func_106_call = mod.get_global_var('func_106')
func_109_call = mutated_mod.get_global_var('func_109')
const_1018 = relay.const(-5, dtype = "uint32")#candidate|1018|()|const|uint32
call_1017 = func_106_call(relay.reshape(const_1018.astype('uint32'), []))
call_1019 = func_106_call(relay.reshape(const_1018.astype('uint32'), []))
output = relay.Tuple([call_1014,call_1017,const_1018,])
output2 = relay.Tuple([call_1015,call_1019,const_1018,])
func_1022 = relay.Function([], output)
mod['func_1022'] = func_1022
mod = relay.transform.InferType()(mod)
mutated_mod['func_1022'] = func_1022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mutated_mod.get_global_var('func_1022')
call_1023 = func_1022_call()
output = call_1023
func_1024 = relay.Function([], output)
mutated_mod['func_1024'] = func_1024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_548_call = mod.get_global_var('func_548')
func_550_call = mutated_mod.get_global_var('func_550')
call_1109 = relay.TupleGetItem(func_548_call(), 1)
call_1110 = relay.TupleGetItem(func_550_call(), 1)
output = relay.Tuple([call_1109,])
output2 = relay.Tuple([call_1110,])
func_1113 = relay.Function([], output)
mod['func_1113'] = func_1113
mod = relay.transform.InferType()(mod)
mutated_mod['func_1113'] = func_1113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mutated_mod.get_global_var('func_1113')
call_1114 = func_1113_call()
output = call_1114
func_1115 = relay.Function([], output)
mutated_mod['func_1115'] = func_1115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1142 = relay.var("var_1142", dtype = "int8", shape = (14, 11, 13))#candidate|1142|(14, 11, 13)|var|int8
const_1143 = relay.const([[[-9,-9,-9,-9,-3,8,-9,2,7,-10,-8,-7,-4],[7,-2,-1,7,3,-9,8,5,9,-8,6,9,-4],[-6,-3,5,-6,-6,7,-1,1,5,1,-7,5,-9],[3,-10,-6,-9,7,-1,-10,-3,2,9,5,-5,5],[-5,9,3,6,8,-10,-3,2,1,10,-1,2,-8],[-6,-1,4,1,-2,5,10,9,10,-6,-5,4,-4],[10,7,-1,2,3,-10,9,-3,-1,8,2,2,-2],[-8,4,3,8,-3,-2,2,1,4,-5,6,9,-6],[4,10,4,-4,9,-2,9,9,10,-1,-3,-3,-9],[4,3,-8,7,2,-7,2,8,-5,1,10,-5,-4],[-5,9,-6,-3,-5,5,-10,-5,-7,-3,5,2,1]],[[-9,5,7,2,8,-8,-8,-2,5,2,-1,1,2],[3,1,-7,10,-4,6,2,-4,2,3,5,-8,-2],[-5,-2,-8,-2,8,-7,-5,-5,7,-2,-8,-10,-10],[1,-1,-8,5,-5,6,-9,-1,5,7,5,-7,-4],[-1,8,-9,-1,1,1,9,6,-7,10,-1,-4,-4],[4,-7,-8,3,2,-4,-6,-10,10,3,3,-1,8],[7,-4,-10,-4,-7,7,-8,-3,10,9,6,-9,7],[1,-6,-4,10,6,6,-6,2,-4,2,5,9,-4],[-3,-6,-7,-10,5,-8,10,4,3,3,-5,6,-6],[-1,-4,4,8,-10,6,-9,-2,5,-2,1,10,1],[-1,-3,7,-4,9,-8,7,-1,8,5,7,-3,8]],[[4,-8,-3,1,5,-2,-7,-6,-5,5,-7,5,6],[-1,-3,-4,9,2,-8,10,9,4,-2,-4,-5,-4],[-3,-4,1,9,6,-10,3,7,-5,7,-10,3,-3],[-8,6,-3,-10,-10,-4,-6,-10,5,10,-7,10,10],[-4,1,-8,6,-10,-4,7,3,1,-2,-8,6,-9],[-3,-4,-9,6,6,1,-7,-10,-3,-5,8,8,10],[-7,3,7,6,-9,-2,7,8,-1,-10,7,9,2],[1,7,5,6,-1,6,-6,2,-1,-7,8,-5,10],[2,6,-7,5,6,8,-9,-7,-6,-1,5,9,4],[-10,6,3,-9,3,5,10,9,7,6,-5,1,1],[10,7,-9,-3,9,4,-6,-4,6,-4,9,-3,7]],[[7,3,-1,-10,-9,7,6,7,-4,9,-5,1,2],[-3,6,2,-8,-3,-10,-9,-2,10,-4,7,1,7],[5,-7,9,3,-10,9,1,-8,5,-9,-4,6,-7],[8,-3,6,-3,4,-3,-9,1,2,2,-3,7,-5],[-1,1,-5,10,3,3,-10,-10,-3,7,-7,-4,-1],[5,8,-9,2,-1,-8,-3,6,7,-5,1,7,10],[1,2,-2,9,8,9,7,-5,10,6,-5,3,1],[8,4,-4,5,-6,-3,-4,-3,1,4,5,-5,1],[-5,2,10,5,-9,10,5,10,1,10,-9,-3,6],[-9,10,-3,-6,-2,6,-10,-6,-10,6,-8,-5,8],[9,9,9,8,-9,4,-7,-10,4,7,-2,-1,-8]],[[3,9,-9,5,6,5,-5,7,10,6,7,1,9],[5,-2,-1,6,6,-10,3,-7,4,-5,-9,-4,-6],[-4,9,2,5,6,-9,-8,6,-6,-6,9,4,10],[8,10,-7,3,-10,-9,-7,1,-7,-10,8,4,-10],[-3,-5,-10,9,9,4,3,4,-7,6,8,-8,6],[8,-10,-3,5,-6,-2,-2,-2,-2,-8,-8,1,6],[9,10,10,5,8,-2,7,5,4,10,-6,4,1],[1,-8,-9,-1,-2,9,-8,7,-8,-10,4,4,2],[8,-4,-8,9,1,2,-9,10,6,-2,10,7,-7],[-3,-7,-1,-1,-4,-9,6,2,-4,6,8,-4,5],[4,-3,7,2,-3,10,9,4,6,-9,-9,9,7]],[[-7,10,6,-6,-5,-8,-6,1,4,8,7,7,-2],[9,2,-7,-10,1,-10,-8,7,-3,5,-8,5,7],[10,10,-4,3,6,7,8,-5,-4,-5,-6,-5,-6],[2,-9,-3,-6,-2,1,-6,-7,4,-10,6,-1,4],[-1,10,2,-7,2,-1,-3,9,-10,1,-10,3,-6],[-4,9,-4,-9,-10,-8,-3,8,-9,8,-3,4,4],[-10,4,5,3,-7,6,5,8,-2,-4,-4,-9,2],[1,-5,10,1,3,1,9,5,6,1,1,-7,-2],[-9,-5,3,7,-8,-7,-10,-6,4,-10,3,9,2],[-5,-7,1,-10,-9,10,-2,2,9,10,4,1,5],[2,7,-3,4,-9,-6,-1,3,10,10,-7,-5,-6]],[[-10,-4,2,8,1,-2,-9,-10,-2,-9,-10,10,-10],[-1,-3,5,6,10,-5,-7,-8,-9,-10,4,-10,6],[-2,2,-3,-9,1,-2,3,-5,8,5,1,-5,-5],[-4,3,-4,8,9,10,10,1,-6,-1,5,3,7],[7,4,2,6,-7,2,-8,-9,-8,8,8,-8,-7],[2,4,-3,-3,3,-6,-3,-1,10,-8,8,5,-9],[-1,6,9,-9,7,-2,-10,6,-3,-1,-5,-4,10],[-1,9,10,5,10,-3,-5,-3,-9,-3,1,5,10],[4,5,9,1,-3,10,6,-2,-10,-9,7,8,-6],[-5,2,3,1,-2,-1,10,3,-4,9,9,-4,-4],[8,-10,-8,5,10,8,3,4,10,-10,4,-3,9]],[[-4,-10,-5,-8,-1,9,8,4,-3,-5,-5,-10,9],[10,-7,-4,3,9,10,-4,-6,9,-2,-2,-3,1],[4,-2,3,7,-2,-1,2,-4,9,-5,1,-9,-8],[8,-9,-9,8,8,-5,3,5,-4,-6,-1,-6,-10],[-2,-8,1,2,-4,-3,-4,6,-7,9,-3,-8,1],[5,-6,2,3,8,7,4,-5,-6,1,10,-8,-7],[-2,-3,-6,8,-1,-10,2,8,2,-3,-2,-5,10],[8,-4,1,2,9,-2,2,7,8,1,-3,2,1],[-4,7,-4,1,2,6,-8,3,-9,-3,-6,8,-1],[-2,6,6,-10,5,8,1,-2,3,1,-1,-1,-9],[-7,6,-9,-10,-2,8,-9,-5,10,8,-5,3,-9]],[[8,-9,6,-5,6,1,-2,4,4,-4,-2,-6,-8],[1,1,-6,-9,6,-4,8,-9,-6,1,-3,-3,5],[-1,8,-4,-1,-9,3,-5,-5,-2,-7,-3,3,2],[8,-3,5,-4,5,1,4,-6,-10,-6,8,-8,-2],[-9,-5,-3,8,-6,1,-5,-9,-6,-6,7,-1,-9],[-2,5,9,9,7,-7,-7,10,-2,-6,-9,3,3],[9,3,-7,6,1,8,-9,1,9,-10,5,4,-2],[-4,-10,5,4,-9,4,-3,-3,4,-5,10,2,7],[-2,1,-5,9,3,-7,1,-8,-3,10,3,10,7],[-5,9,-6,-2,7,1,3,9,3,-7,-6,5,8],[2,-7,9,-7,4,1,2,3,3,1,7,-5,6]],[[-5,-9,-10,-3,9,-1,-2,4,2,1,-1,-5,-10],[6,-7,9,5,6,-9,4,-9,-8,1,4,8,-1],[4,9,10,-9,10,-10,-6,-8,-5,4,-7,-5,-2],[4,-8,7,2,-4,-3,-1,1,-6,8,-1,-8,7],[7,8,4,-9,8,2,6,-6,1,2,9,-8,-5],[1,5,-3,-3,2,-2,10,9,-3,2,-3,-7,6],[4,6,-4,-5,7,1,-6,7,-4,-1,1,-7,3],[5,-7,-5,-4,10,-8,-8,10,6,10,7,2,-6],[-2,-5,5,5,2,2,-3,-5,7,7,-3,-5,-6],[-7,-10,3,-8,-7,2,-4,3,10,8,8,-1,3],[8,6,-10,-6,6,2,-10,6,4,6,-7,5,6]],[[-1,8,10,9,2,9,-2,9,-10,5,-3,-9,6],[7,-9,5,-9,-3,-3,-5,4,4,10,9,2,-9],[3,-4,-1,-10,-4,-2,2,-2,-8,9,-10,7,6],[-3,8,-5,-7,9,2,2,-6,8,8,2,-6,7],[6,7,9,-4,1,9,-8,8,10,7,4,6,5],[9,1,-7,-1,-10,-6,9,-4,5,-7,-4,-3,-2],[6,1,6,-3,6,-3,-4,-7,-7,-8,-3,3,-6],[-6,7,7,4,5,8,6,-7,10,1,-4,2,-9],[4,6,10,2,9,-3,9,-4,9,10,-8,9,-6],[2,-6,-4,5,-4,-1,4,-8,-3,-8,-4,9,-3],[2,8,9,-7,-1,9,10,-2,-2,1,7,6,2]],[[-4,-4,8,1,6,-8,-6,4,8,1,-5,8,10],[9,-1,-8,2,2,-9,-7,-4,10,5,-7,9,3],[-8,7,6,-6,9,-2,5,10,-8,1,-2,-3,-6],[-10,-6,-7,3,4,2,-6,3,1,-3,-4,-5,-4],[7,-6,8,7,8,-10,-10,10,-4,4,-4,5,-5],[10,-3,9,-4,10,2,7,3,-2,-10,6,9,-1],[-6,-4,-3,-1,1,-4,-6,6,-4,-9,-10,10,3],[6,-8,9,-1,-5,9,1,-7,-4,3,-4,-3,-4],[3,-3,-3,-2,-5,-7,4,-3,9,3,-10,10,7],[10,6,-4,-9,-7,7,-5,2,1,3,1,7,-7],[-10,-10,-2,8,-6,9,1,-8,-7,1,5,7,5]],[[10,-9,10,-6,8,-3,-8,-9,4,4,8,-7,3],[10,-1,-6,-8,-8,4,-9,3,-9,8,-5,9,6],[-3,6,-6,3,-1,6,4,6,-9,-2,-6,1,-10],[10,-8,-5,-9,6,-7,-3,-8,8,5,9,10,6],[2,-3,8,2,-10,-8,7,-6,-2,3,-10,-1,-6],[10,-4,3,8,10,9,-3,-8,8,4,10,-5,-8],[-5,-1,-3,-6,-9,-5,-4,2,-9,-10,5,-2,4],[-9,-8,-3,9,-3,-2,9,7,10,-1,3,-9,-6],[-3,-7,4,-3,4,5,-7,-6,-7,-4,-1,6,-9],[1,-3,2,7,2,-5,4,-10,-3,-7,-10,5,1],[-8,-7,7,5,-5,6,6,1,-3,-3,4,-2,6]],[[-7,5,7,6,-10,-2,-5,-2,8,8,-3,4,4],[5,-1,7,4,-8,7,4,1,4,4,-6,6,-2],[5,-7,6,-4,-5,-6,4,7,-10,-1,-9,-4,1],[-3,-3,7,3,-8,8,-7,-4,-1,7,-2,-10,-7],[-5,2,-2,-4,2,-7,-7,-5,7,-9,4,-1,-9],[9,5,-8,10,8,-9,-1,6,-7,10,-10,-7,-10],[-9,4,-4,-7,1,-3,7,5,6,8,-3,-4,8],[-2,1,6,10,7,-4,-7,10,-10,-3,-5,-2,-10],[-8,7,-6,-3,-8,-8,10,6,-10,3,-3,6,-7],[-5,-4,1,7,9,7,-2,-2,7,4,8,-6,-3],[-3,7,2,6,-6,7,6,-9,-10,2,-9,-4,10]]], dtype = "int8")#candidate|1143|(14, 11, 13)|const|int8
bop_1144 = relay.bitwise_and(var_1142.astype('int8'), relay.reshape(const_1143.astype('int8'), relay.shape_of(var_1142))) # shape=(14, 11, 13)
output = bop_1144
output2 = bop_1144
func_1156 = relay.Function([var_1142,], output)
mod['func_1156'] = func_1156
mod = relay.transform.InferType()(mod)
var_1157 = relay.var("var_1157", dtype = "int8", shape = (14, 11, 13))#candidate|1157|(14, 11, 13)|var|int8
output = func_1156(var_1157)
func_1158 = relay.Function([var_1157], output)
mutated_mod['func_1158'] = func_1158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_548_call = mod.get_global_var('func_548')
func_550_call = mutated_mod.get_global_var('func_550')
call_1163 = relay.TupleGetItem(func_548_call(), 1)
call_1164 = relay.TupleGetItem(func_550_call(), 1)
output = relay.Tuple([call_1163,])
output2 = relay.Tuple([call_1164,])
func_1169 = relay.Function([], output)
mod['func_1169'] = func_1169
mod = relay.transform.InferType()(mod)
mutated_mod['func_1169'] = func_1169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1169_call = mutated_mod.get_global_var('func_1169')
call_1170 = func_1169_call()
output = call_1170
func_1171 = relay.Function([], output)
mutated_mod['func_1171'] = func_1171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1182 = relay.var("var_1182", dtype = "float64", shape = (6, 6, 11))#candidate|1182|(6, 6, 11)|var|float64
uop_1183 = relay.asin(var_1182.astype('float64')) # shape=(6, 6, 11)
bop_1194 = relay.floor_divide(uop_1183.astype('float32'), relay.reshape(var_1182.astype('float32'), relay.shape_of(uop_1183))) # shape=(6, 6, 11)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_1209 = relay.TupleGetItem(func_871_call(), 1)
call_1210 = relay.TupleGetItem(func_873_call(), 1)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_1214 = relay.TupleGetItem(func_1113_call(), 0)
call_1215 = relay.TupleGetItem(func_1115_call(), 0)
output = relay.Tuple([bop_1194,call_1209,call_1214,])
output2 = relay.Tuple([bop_1194,call_1210,call_1215,])
func_1219 = relay.Function([var_1182,], output)
mod['func_1219'] = func_1219
mod = relay.transform.InferType()(mod)
var_1220 = relay.var("var_1220", dtype = "float64", shape = (6, 6, 11))#candidate|1220|(6, 6, 11)|var|float64
output = func_1219(var_1220)
func_1221 = relay.Function([var_1220], output)
mutated_mod['func_1221'] = func_1221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mod.get_global_var('func_619')
func_620_call = mutated_mod.get_global_var('func_620')
call_1231 = relay.TupleGetItem(func_619_call(), 0)
call_1232 = relay.TupleGetItem(func_620_call(), 0)
func_985_call = mod.get_global_var('func_985')
func_990_call = mutated_mod.get_global_var('func_990')
const_1234 = relay.const(-3, dtype = "uint8")#candidate|1234|()|const|uint8
const_1235 = relay.const([[2,-5,8,10,-10,-6,10,1],[-2,9,10,-10,-4,10,-5,-4],[-2,4,4,-7,-8,9,3,-1],[4,5,-5,2,-1,7,-3,-5],[-9,6,6,-10,-8,-6,8,6],[-9,-4,5,4,-8,-4,-2,-7],[1,-4,7,-3,2,8,7,10],[4,-4,1,4,9,-10,8,-3],[9,6,-3,4,8,-7,-5,-5],[-2,5,7,3,-9,8,-10,-6],[2,8,-3,-5,2,6,-1,-4],[9,8,-1,1,-6,7,4,7],[-7,3,5,9,-10,-5,-7,5],[2,-2,-6,3,4,10,-5,-3],[-1,-2,-4,6,-7,8,3,2],[9,-8,-8,9,-5,1,-3,2],[-3,-10,7,-5,-8,10,6,-7],[-9,10,-8,-1,-5,4,-7,3],[3,10,-9,4,-6,9,10,7],[-10,7,7,2,-10,-1,3,8],[-7,-7,3,-6,-8,1,8,7],[8,-8,2,6,-6,-9,-10,8],[7,-4,7,-9,4,4,1,-1],[-7,-1,-9,-3,3,8,10,1]], dtype = "uint8")#candidate|1235|(24, 8)|const|uint8
const_1236 = relay.const([-2.180524,1.294561,-2.533986,-1.116066,-9.999148,7.581751,9.215621,-6.027421,1.461502,7.799145,-7.601713,0.306644,0.710065,-5.041389,1.600298,1.246909,-8.802997,7.366709,2.821524,-1.749094,-4.758306,2.482461,-3.766151,4.443339,9.206697,9.631758,-3.557768,3.078193,0.763336,-9.229829,-1.566911,-2.836335,8.242174,7.800102,-3.207548,-4.430073,5.635369,-4.124757,2.700407,6.146611,-3.411842,-6.357100,-7.346044,-5.167001,-2.747736,-6.306764,4.700196,7.906853,-7.143623,9.120998,-8.588288,8.368578,1.764291,0.587345,-9.848404,-1.259788,0.145891,4.359030,-6.809126,-4.165628,-8.394451,-5.038361,4.198314,-9.141869,-1.546740,-3.292114,-1.973734,9.484985,6.019926,-4.268535,7.803965,3.750116,-4.573743,-4.664142,-6.584708,2.629126,5.747779,-5.798591,3.995220,-0.431513,-1.036844,-6.967071,7.627791,3.491236,-9.804337,-9.195643,-6.385645,-0.011552,-6.800453,5.911764,4.609082,0.223459,-1.280477,-3.664866,4.162343,-1.380908,8.585417,-5.094286,-8.219545,-9.826912,4.254454,-0.928361,-9.661731,-0.017009,-6.377285,8.016705,-2.748578,-3.362487,4.979351,-0.163211,-3.332986,-2.429832,4.086357,-5.563691,-3.717329,-9.098042,3.226027,3.076853,-9.410868,-8.253546,-7.847516,-9.087656,-5.918924,1.053471,9.464474,-4.531654,-5.506407,-1.945385,1.628693,4.583241,8.807352,-1.723836,3.465456,-3.295154,9.944109,-1.986812,-1.587746,5.573945,6.274369,-4.935207,-2.145983,-7.010450,-9.460568,8.910564,7.604297,6.454346,-1.166296,0.888131,-4.276238,3.340735,-5.613981,2.437014,7.513627,-6.738749,8.144524,5.644079,5.096332,9.417135,-0.521159,-4.200761,7.065534,-8.867593,4.155959,2.504729,9.288280,5.358932,-9.256940,8.687393,4.418563,1.746656,-7.989934,8.802731,-4.203287,8.268625,0.948039,6.836058,-3.022008,-7.228024,6.047330,7.192858,9.675378,7.617004,9.844617,2.049410,-6.906612,7.375767,6.160507,-0.014917,0.797330,5.191275,2.364737,-2.692460,-9.299943,9.812147,-8.303039,1.035912,-2.391974,-7.446082,6.898133,-2.507665,-0.343273,-2.215633,-7.126918,2.647777,0.503933,-1.323606,8.838325,-6.447715,-6.172473,-3.398610,-2.707703,-0.421026,-2.346435,-0.568598,-5.503723,2.094184,-2.549027,-6.870912,-2.073861,7.049114,-2.165607,7.863300,-8.693255,-0.769642,4.238335,6.531259,-5.703641,-6.941311,-1.130342,-6.792957,-3.123728,8.705680,4.768948,1.916320,-9.348125,6.585076,3.944087,-6.820323,-8.439998,-3.625371,2.182619,5.228323,3.107752,-2.345692,-6.329211,-8.402035,-1.872263,-8.929965,7.900162,-8.941862,-9.948286,3.193687,-2.374557,9.875383,-9.949244,-7.148063,7.405806,8.922142,-0.382492,1.366538,-2.044777,5.246156,1.781818,-1.598626,1.546559,-3.281785,7.527765,3.358015,-8.268098,-1.211592,-3.903685,-0.658321,4.091100,-1.413194,-7.016450,-6.367833,0.711841,3.366491,9.198978,-8.987881,-3.212720,-2.582750,-1.075866,4.337041,-4.205931,7.659901,7.888049,6.420522,0.284100,-9.952539,6.920574,-3.565307,-3.359277,2.187448,9.183499,-5.745129,1.375288,3.040117,3.405977,-2.804250,0.197481,-0.494276,2.545064,4.185831,-6.686213,-2.057347,-0.598433,-8.721123,3.581067,9.688376,3.259976,-9.150960,-5.244782,-6.683646,9.124118,-2.236108,-7.828820,3.806079,-9.634248,-4.303647,-5.541288,-6.129359,1.171124,6.867313,-2.963169,-2.440603,-6.421646,-8.425495,-7.706937,-8.484377,8.403487,-3.403190,-8.811928,-5.708307,-8.687609,9.145978,2.345124,-9.124745,-8.728376,5.537313,-7.028013,2.415745,7.243451,3.922559,-2.676351,0.082292,-2.951838,-8.539457,3.585934,4.308390,2.571452,-0.509457,-6.111150,-3.866593,-6.852327,-5.286009,4.583765,5.354103,3.307158,-8.866775,2.983637,-1.573808,-7.930417,-1.933404,3.666751,2.525869,-0.281722,1.818289,-5.876457,3.245755,-7.272647,1.572250,6.068616,-4.608354,-1.685868,0.597237,-3.181101,1.153463,-3.348992,-6.612304,-1.333897,-7.755814,9.347207,6.240262,3.390401,-6.264079,-7.129807,2.723783,-2.834600,0.720148,8.104700,-3.387630,-8.771057,-7.229573,8.868252,-1.471725,-1.934366,-6.415374,-5.654429,-2.538370,5.655721,2.739214,-1.033092,0.202755,-0.802422,6.900156,3.824740,4.704581,-7.059449,-9.623454,-2.729317,2.195858,-3.119713,-1.473418,4.795112,-5.043021,2.845682,3.043861,6.614273,0.521321,3.426500,8.078007,-6.537852,-3.523899,-6.672194,5.891053,0.214802,1.907008,-4.860363,-9.937862,-4.417924,-6.125203,4.662681,-5.749531,5.088835,-5.404488,-2.006855,0.100611,2.150343,7.555217,6.923066,-8.540033,1.906473,-5.045189,-5.591032,-5.401646,9.449710,-2.076071,-9.089703,5.289284,-1.661783,-9.353277,4.583387,-4.181217,3.120062,-8.349170,-6.783789,2.194609,1.654180,1.628472,-0.380910,-0.463726,0.467062,-2.911543,9.238843,0.255157,-4.434483,1.049022,0.613691,-1.021631,9.479395,1.309498,0.752586,-9.147937,-3.850939,-3.504859,3.563897,1.052419,-3.286564,-3.322776,0.097659,0.916962,6.863936,-8.181394,-6.976900,0.057835,9.898528,3.390203,5.194392,4.834041,-7.691016,-3.621100,5.820133,-0.567645,-0.153912,6.331573,-3.056887,6.073721,9.356721,-1.393569,-4.794778,-1.015137,3.204961,-9.272715,8.994903,-0.333822,-0.629886,6.870960,-7.107785,9.789223,-7.519446,7.536681,6.971743,-7.522016,-2.173378,3.548460,-2.411280,-1.121885,1.673335,-9.777707,1.710135,-0.014922,6.752939,8.289183,4.078364,-9.366237,9.196303,-7.313039,-7.400920,-8.909083,-4.487052,6.959863,9.497974,-8.431229,6.563414,1.013409,3.135951,-2.053782,7.624091,9.044282,-2.585324,-5.575481,0.211029,-3.220372,7.204975,-0.952042,-9.647987,-5.924541,2.900756,5.695005,1.288671,8.751036,-9.143945,9.441245,6.545153,4.705668,9.635839,-2.225357,-9.331500,-0.722831,4.689571,3.329273,0.770751,9.087155,-9.431746,8.386778,4.068503,3.147159,-8.329618,7.826020,0.193057,8.615024,-1.088972,8.459680,-1.708709,-3.297295,-4.937907,-3.158445,5.012109,-8.716337,-0.636460,5.484944,5.063557,1.494753,7.539794,4.635312,4.891085,1.888553,-7.503464,9.428800,2.845086,-8.827159,9.570239,3.884326,-8.789699,3.436587,5.197460,-3.278020,2.932360,-6.554377,-2.668325,4.389757,-5.180294,2.737419,8.378300,3.665595,-7.293121,-8.593443,-0.284698,-8.495848,9.012138,0.308200,-2.018493,2.010782,-0.590677,9.569062,-9.196186,-2.113657,3.140018,8.308344,-5.624426,6.724100,7.520070,7.690911,9.909913,-3.987399,9.573146,3.910572,-5.047076,1.029573], dtype = "float32")#candidate|1236|(630,)|const|float32
call_1233 = relay.TupleGetItem(func_985_call(relay.reshape(const_1234.astype('uint8'), []), relay.reshape(const_1235.astype('uint8'), [8, 8, 3]), relay.reshape(const_1236.astype('float32'), [630,]), ), 4)
call_1237 = relay.TupleGetItem(func_990_call(relay.reshape(const_1234.astype('uint8'), []), relay.reshape(const_1235.astype('uint8'), [8, 8, 3]), relay.reshape(const_1236.astype('float32'), [630,]), ), 4)
func_1169_call = mod.get_global_var('func_1169')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_1242 = relay.TupleGetItem(func_1169_call(), 0)
call_1243 = relay.TupleGetItem(func_1171_call(), 0)
func_799_call = mod.get_global_var('func_799')
func_802_call = mutated_mod.get_global_var('func_802')
call_1244 = relay.TupleGetItem(func_799_call(relay.reshape(const_1234.astype('uint32'), [])), 0)
call_1245 = relay.TupleGetItem(func_802_call(relay.reshape(const_1234.astype('uint32'), [])), 0)
func_941_call = mod.get_global_var('func_941')
func_942_call = mutated_mod.get_global_var('func_942')
call_1247 = func_941_call()
call_1248 = func_941_call()
var_1249 = relay.var("var_1249", dtype = "float32", shape = (630,))#candidate|1249|(630,)|var|float32
bop_1250 = relay.minimum(const_1236.astype('uint64'), relay.reshape(var_1249.astype('uint64'), relay.shape_of(const_1236))) # shape=(630,)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_1262 = relay.TupleGetItem(func_1113_call(), 0)
call_1263 = relay.TupleGetItem(func_1115_call(), 0)
bop_1289 = relay.not_equal(call_1247.astype('bool'), relay.reshape(call_1242.astype('bool'), relay.shape_of(call_1247))) # shape=(14, 7, 14)
bop_1292 = relay.not_equal(call_1248.astype('bool'), relay.reshape(call_1243.astype('bool'), relay.shape_of(call_1248))) # shape=(14, 7, 14)
output = relay.Tuple([call_1231,call_1233,const_1234,const_1235,call_1244,bop_1250,call_1262,bop_1289,])
output2 = relay.Tuple([call_1232,call_1237,const_1234,const_1235,call_1245,bop_1250,call_1263,bop_1292,])
func_1296 = relay.Function([var_1249,], output)
mod['func_1296'] = func_1296
mod = relay.transform.InferType()(mod)
mutated_mod['func_1296'] = func_1296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1297 = relay.var("var_1297", dtype = "float32", shape = (630,))#candidate|1297|(630,)|var|float32
func_1296_call = mutated_mod.get_global_var('func_1296')
call_1298 = func_1296_call(var_1297)
output = call_1298
func_1299 = relay.Function([var_1297], output)
mutated_mod['func_1299'] = func_1299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1169_call = mod.get_global_var('func_1169')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_1381 = relay.TupleGetItem(func_1169_call(), 0)
call_1382 = relay.TupleGetItem(func_1171_call(), 0)
output = relay.Tuple([call_1381,])
output2 = relay.Tuple([call_1382,])
func_1387 = relay.Function([], output)
mod['func_1387'] = func_1387
mod = relay.transform.InferType()(mod)
output = func_1387()
func_1388 = relay.Function([], output)
mutated_mod['func_1388'] = func_1388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1397 = relay.var("var_1397", dtype = "int32", shape = (12, 11, 9))#candidate|1397|(12, 11, 9)|var|int32
var_1398 = relay.var("var_1398", dtype = "int32", shape = (12, 11, 9))#candidate|1398|(12, 11, 9)|var|int32
bop_1399 = relay.minimum(var_1397.astype('int32'), relay.reshape(var_1398.astype('int32'), relay.shape_of(var_1397))) # shape=(12, 11, 9)
uop_1402 = relay.sqrt(bop_1399.astype('float32')) # shape=(12, 11, 9)
bop_1410 = relay.logical_and(var_1397.astype('bool'), relay.reshape(var_1398.astype('bool'), relay.shape_of(var_1397))) # shape=(12, 11, 9)
func_985_call = mod.get_global_var('func_985')
func_990_call = mutated_mod.get_global_var('func_990')
const_1416 = relay.const(-3, dtype = "uint8")#candidate|1416|()|const|uint8
var_1417 = relay.var("var_1417", dtype = "uint8", shape = (192,))#candidate|1417|(192,)|var|uint8
const_1418 = relay.const([-0.352803,-5.355893,3.117775,-8.702737,-7.922732,0.250717,-1.689778,-4.289358,0.657408,-4.337151,-7.428162,1.307582,-4.548306,9.007603,-4.777833,-9.859714,9.776353,8.688519,-5.282822,2.205746,-1.987107,7.749950,0.593561,-4.119554,-2.068533,9.198997,4.192819,1.708482,1.978080,6.745578,7.291308,-6.280431,-8.466055,-7.261154,-3.627053,1.845285,-2.860214,3.911763,3.795023,2.683553,9.754068,-0.248018,7.760269,-0.525553,-8.997804,2.154688,5.579833,5.626959,3.622851,-4.215447,9.018680,-1.649466,9.050550,8.025467,3.055209,-5.833287,7.311673,6.156485,-3.442864,7.177926,8.659337,-9.258975,0.330997,3.074134,4.406501,-4.575388,1.733696,4.084393,-9.626519,2.167056,2.047179,-5.266176,2.310760,7.343455,4.758929,-1.937284,7.087103,4.531772,-9.165870,4.177951,3.002458,-1.360809,7.720431,3.519615,-0.960030,5.991539,-9.687483,-7.913654,-6.361826,0.063592,1.411833,-8.856125,-6.932280,7.543895,-2.145939,9.944627,-7.497688,2.001240,0.268893,5.939345,0.300453,2.853893,0.808405,9.897347,8.117463,0.824887,8.971911,-9.446391,-8.997981,-8.936598,-9.793983,-6.682574,-1.492701,-9.141419,-1.853977,8.347496,1.060681,7.197920,9.568019,-0.670487,8.986205,0.404156,7.657224,-0.449073,4.782883,8.147330,-8.155713,-6.415042,4.199942,-3.654144,-3.696562,9.719027,-9.612527,-4.910956,-0.059203,6.156135,4.051273,-0.727930,-9.109330,-8.868691,8.828883,0.408799,1.057719,-5.140736,6.706607,-7.618981,1.610502,1.618346,-8.620552,9.463978,-2.954112,-0.599657,9.560351,-0.138790,7.158361,4.135880,-2.676757,7.112012,-8.358157,-3.121397,-0.315119,5.540071,5.424466,-2.649008,4.263031,-6.468485,-5.210643,8.806287,6.347932,3.076513,-8.944639,9.084604,7.021609,-2.695788,6.702966,5.589429,8.298004,0.966812,7.029545,-6.803616,6.235004,-5.046812,4.038642,7.134190,-1.554573,5.122982,1.245841,2.540395,1.022396,-1.463166,4.560773,1.880220,-5.655831,8.843527,-2.965900,-7.512767,-1.568290,2.815359,-8.212354,-2.278593,9.182142,7.815270,-0.191174,7.485766,-7.019872,-1.396282,-4.915696,-9.614239,-3.476834,-0.867864,3.392688,-7.952816,-3.108738,7.898882,-1.914580,7.221828,-2.069978,-1.418194,5.398971,-4.763529,4.693473,1.041097,-3.198510,4.660500,7.671503,0.714994,-0.532497,-5.032231,3.431338,-4.761218,3.754439,2.711978,-3.202784,5.438465,-7.695310,-2.181067,-8.644698,3.265559,4.883888,-6.533113,-8.140763,-3.882418,9.417225,4.946105,-5.644880,9.997069,2.910800,6.614674,-0.178288,-4.642339,2.183470,0.569841,-5.697462,-9.533412,4.856922,6.380068,6.762750,-7.039145,-3.416711,5.671158,5.702149,1.450886,-5.370333,2.194601,9.050500,5.939429,-9.075424,-8.541816,4.079588,-7.784583,3.348586,-5.666080,7.231735,-6.405532,6.498913,4.052657,-2.064727,3.432878,4.373008,1.243815,-8.282947,2.505556,9.260987,-5.661288,2.669331,6.575344,-6.930904,7.218150,5.167204,3.470718,7.123344,2.024473,4.061899,-8.419239,4.062624,8.525124,-8.350629,-2.709151,1.451939,-8.196036,-0.065355,4.074774,-3.568696,-7.899880,-2.518187,-3.479508,-4.775290,8.135835,-4.224411,5.821624,-5.696877,-8.637427,2.077863,-1.809569,4.230562,2.718558,7.484716,-7.539689,0.885460,9.387500,-0.162613,-2.160201,2.097790,5.805262,7.662222,-0.172518,6.616965,1.734692,5.054567,9.480124,-5.793607,-6.287914,-1.906239,3.518807,-5.832814,1.372062,-0.223124,2.129453,-7.368206,-2.305151,3.313101,5.231152,2.723776,-3.779391,-4.000474,4.475338,-3.341804,-3.121301,-6.717830,7.239684,-6.940850,6.679317,-1.442584,2.371076,6.075745,-7.120131,-1.527245,-6.539034,-9.891544,-2.856973,-0.394109,-3.827858,-0.921157,0.770200,-7.771616,2.891575,-4.541469,-3.843957,9.216286,8.377956,3.789373,-4.608257,5.128546,0.945733,1.305786,-0.613068,3.205804,-3.849397,-7.886335,-2.369159,-2.509489,8.096566,-6.007857,6.418831,4.794638,1.466292,8.156803,-2.153515,-0.941541,-0.748520,-5.191813,7.025693,7.503051,7.410959,-8.486102,1.140916,2.964859,5.278422,-9.514367,2.690127,5.552221,-1.102959,-3.232746,5.873705,-2.570530,-1.531969,-0.314803,-8.510536,-0.691130,0.267330,0.734336,6.040262,-7.990208,-8.851073,-2.421096,-5.434755,-6.733901,-6.889504,-8.621309,4.433969,4.804597,9.071617,-3.842612,-4.368899,1.730547,3.824061,-2.359134,4.389341,4.260859,9.293289,7.658018,1.245632,-7.695184,5.886342,0.338944,6.049544,-7.779629,-3.762481,-1.255925,9.916962,0.913129,-5.053291,-3.522725,-2.629719,2.575462,0.333922,6.752798,9.424349,-4.300278,-5.604113,9.517626,-3.295030,-1.262831,-5.709639,7.149344,-7.462952,-4.134165,-2.153736,-9.762188,-8.718934,-3.417762,2.645997,-2.070027,7.237248,9.599532,-7.848245,1.061094,-8.429559,-7.754285,-0.178274,2.323968,-8.930845,4.144325,-9.802297,4.932902,-4.139018,-2.930172,2.058861,-8.210953,3.256643,2.247850,-8.559006,-6.056896,-8.332562,-6.896646,3.477176,-2.343343,8.024478,-2.933840,7.346539,3.337528,-2.194889,5.382787,-4.933974,-4.337993,0.812901,-7.740403,5.530709,6.716424,7.085196,-0.303011,2.819603,-3.724822,9.592158,-7.953904,-8.812343,-9.562219,3.607818,-1.948223,9.191152,0.840960,-3.435993,-7.922715,-8.195857,-1.388496,2.867636,-3.934735,9.212805,-1.215869,-5.667567,0.304421,-7.869554,1.104927,-1.669195,5.200970,-6.133821,-5.511766,-3.043704,-7.094505,-1.187254,-0.729835,-8.098586,-2.687578,2.079837,-8.274892,1.797650,-3.296646,3.812721,4.081313,-4.738387,8.241983,8.689958,7.819723,-1.752634,1.378881,-9.347032,7.220266,-0.880753,-8.424462,-1.603679,7.003765,8.128566,2.268897,3.054817,-6.287265,1.983873,1.344920,9.198046,1.358822,-0.326320,2.898512,-4.395597,8.812846,-1.351646,7.547007,-8.689973,0.206164,-3.526673,-9.047626,2.296482,2.248183,-2.448071,-2.187874,-8.813519,-4.885135,-2.107639,6.489400,-7.248796,8.189188,7.622747,1.390308,-7.166775,9.115783,8.943209,-4.688375,-8.756806,4.790915,-1.750878,-5.943772,2.747854,-0.114980,-8.953215,6.828817,-4.863931,-8.081741,6.637719,-4.312568,-0.052175,-1.851774,4.797381,-5.892656,3.722108,9.864434,4.265415,-0.810493,-9.893910,-9.193310,-0.092297,5.925288,9.954047,-4.424308,9.813129,-7.086734,-1.779139,1.475616,4.580773,3.234518,8.140963,8.074480,9.026744,-8.132939,-6.896524,-4.925798,-9.973010,2.780091,6.206945,-0.589046,-8.821059,-6.429470,3.376306], dtype = "float32")#candidate|1418|(630,)|const|float32
call_1415 = relay.TupleGetItem(func_985_call(relay.reshape(const_1416.astype('uint8'), []), relay.reshape(var_1417.astype('uint8'), [8, 8, 3]), relay.reshape(const_1418.astype('float32'), [630,]), ), 0)
call_1419 = relay.TupleGetItem(func_990_call(relay.reshape(const_1416.astype('uint8'), []), relay.reshape(var_1417.astype('uint8'), [8, 8, 3]), relay.reshape(const_1418.astype('float32'), [630,]), ), 0)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_1423 = relay.TupleGetItem(func_871_call(), 1)
call_1424 = relay.TupleGetItem(func_873_call(), 1)
output = relay.Tuple([uop_1402,bop_1410,call_1415,const_1416,var_1417,const_1418,call_1423,])
output2 = relay.Tuple([uop_1402,bop_1410,call_1419,const_1416,var_1417,const_1418,call_1424,])
func_1436 = relay.Function([var_1397,var_1398,var_1417,], output)
mod['func_1436'] = func_1436
mod = relay.transform.InferType()(mod)
var_1437 = relay.var("var_1437", dtype = "int32", shape = (12, 11, 9))#candidate|1437|(12, 11, 9)|var|int32
var_1438 = relay.var("var_1438", dtype = "int32", shape = (12, 11, 9))#candidate|1438|(12, 11, 9)|var|int32
var_1439 = relay.var("var_1439", dtype = "uint8", shape = (192,))#candidate|1439|(192,)|var|uint8
output = func_1436(var_1437,var_1438,var_1439,)
func_1440 = relay.Function([var_1437,var_1438,var_1439,], output)
mutated_mod['func_1440'] = func_1440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_1451 = relay.TupleGetItem(func_871_call(), 0)
call_1452 = relay.TupleGetItem(func_873_call(), 0)
func_985_call = mod.get_global_var('func_985')
func_990_call = mutated_mod.get_global_var('func_990')
var_1475 = relay.var("var_1475", dtype = "uint8", shape = ())#candidate|1475|()|var|uint8
var_1476 = relay.var("var_1476", dtype = "uint8", shape = (192, 1))#candidate|1476|(192, 1)|var|uint8
const_1477 = relay.const([-5.864804,-0.362071,5.032248,-4.334993,-7.943882,5.660746,9.759757,0.761907,9.139177,-7.704395,2.535618,7.335528,9.097313,5.845629,5.099870,9.100004,8.666882,6.924129,5.723793,1.250589,0.092064,-8.907217,-6.285473,-8.633363,-7.758062,0.220048,0.481910,0.656371,2.096249,-1.059024,3.327010,-5.750205,7.172360,-4.033798,7.724357,0.789586,-6.462915,3.532518,5.343990,8.917677,-7.569300,5.796088,8.591124,7.094374,-7.135035,1.309494,1.505500,-1.681857,2.220031,4.460430,-1.694659,-4.614423,-5.788612,8.609717,6.094695,7.976947,-5.429420,-4.497076,4.595572,-8.640456,3.346893,-6.736505,5.155874,1.161500,8.277557,0.812986,5.087994,-3.736837,1.652002,2.059721,-6.316597,3.049988,-0.084824,-2.494086,3.386506,9.231658,4.395007,3.560208,-5.048984,8.631407,3.243176,-0.301214,-8.448618,6.012312,-0.843316,5.146407,9.059821,3.761652,-2.804886,-5.540518,-3.826417,-0.295512,6.978948,-7.043841,-9.097278,0.011714,-8.292160,3.939968,-8.166220,1.738589,0.899449,-9.404106,8.598079,-6.149118,8.200405,9.518361,-6.906072,3.071063,9.054839,-7.764515,-7.284082,8.952848,9.523093,6.855174,0.629573,-2.972768,0.006353,-0.855072,8.608691,-7.168509,1.599913,-8.150933,5.782276,5.846201,-7.248082,3.213215,3.415633,5.280297,4.377879,-4.455099,2.323570,2.443904,1.250682,0.586674,8.994408,-9.758376,3.459751,-5.806249,-1.435327,8.280986,3.544493,0.575691,-7.610972,0.351131,-5.228768,-7.354661,7.590301,-1.883293,0.305113,8.796310,-7.046356,0.219554,-6.460973,-1.438330,8.493935,4.772768,-5.845072,2.985439,-1.903039,-0.115372,2.868303,-2.027194,7.508926,7.026319,1.208981,0.722334,-8.119045,6.256413,-0.087808,-8.560414,-3.031494,7.888178,-0.253851,8.234571,7.841228,8.579792,-5.330672,3.749302,4.266594,4.940465,6.532610,-4.350359,3.357639,2.271352,0.627597,-0.869703,8.999178,9.147640,-2.602715,-3.787774,-8.011945,-5.038888,-8.939022,-9.637149,7.299977,-3.518163,-6.241048,-9.405588,-2.559926,-1.751489,1.794836,6.564553,-5.334329,7.421655,6.355795,-6.558605,8.502753,8.655947,3.206466,0.699265,0.695772,1.056575,-4.525128,2.915409,5.395572,5.639086,-7.423677,-2.322120,8.226860,-0.207344,1.143930,-6.002513,1.810317,-6.957215,-8.434859,4.689546,4.120973,7.419643,1.542370,6.009728,-8.893952,3.932957,9.488260,3.282123,5.812649,-1.051763,0.493519,-0.778582,-6.887060,6.967087,-7.995319,-1.351117,1.263716,-3.380485,-2.773635,-5.830073,-8.491018,-4.478965,7.766086,-2.521233,2.040426,7.293898,9.836081,0.750147,2.350599,-5.693406,-1.496754,0.164444,4.151052,-0.851783,6.691177,-6.470980,-2.332314,-6.323973,9.355864,0.027851,5.524829,0.237600,-1.000870,-1.680672,5.585843,0.921820,1.561227,2.620962,-3.168875,-6.477045,-2.260671,9.346274,0.350136,-3.661352,-5.916253,2.788016,1.065719,8.487690,-1.415444,9.770084,-3.048192,0.224581,8.733425,-2.353354,-4.013655,-4.942868,-1.446822,0.828245,2.525085,-9.567831,9.868257,3.185539,-3.253385,-4.490602,-0.693665,-0.445794,9.878931,-9.740754,-4.444954,-1.972166,4.768707,-0.366536,2.335456,-6.013817,0.811570,-1.322000,-0.822580,7.058999,-9.662141,3.390798,9.962218,-4.443532,9.127026,-7.520813,4.369899,-0.623040,0.091310,-7.008847,2.227934,2.860036,4.031715,1.551666,3.777466,-6.030099,5.674896,-9.846884,2.951903,8.787173,6.904346,4.591142,-5.776866,6.326030,-6.289873,-6.780309,-9.295728,-1.708121,-4.278049,-2.324558,9.348904,7.550630,-0.346210,2.593600,-3.311433,3.891282,-1.828387,2.866186,-3.592512,-0.307482,-8.215523,-9.735678,-4.591755,6.249391,6.432613,-8.533581,-8.895470,2.250831,1.566091,9.426655,7.470857,4.472723,2.656343,-3.304231,-0.896787,-1.792063,-0.022652,1.771799,9.420624,6.699841,-2.529899,1.687761,3.883523,-5.289463,-1.859273,8.516954,-2.311074,3.405264,8.010118,0.131956,2.835926,-2.622455,9.835981,-0.264394,-8.286819,7.794466,-9.211350,-2.465362,4.488607,-4.091535,-7.693471,4.214010,3.239524,-1.867493,-0.605673,-2.927169,0.117801,7.585336,-4.425293,6.491562,2.683522,-9.970888,-2.779901,-1.500269,2.288562,6.701029,-7.321391,-1.330910,5.137767,-1.479885,-0.757452,1.351292,5.661527,-2.998243,3.654722,4.092380,-9.322552,-0.943795,-5.342588,-5.654143,1.301341,1.651633,-0.009288,9.208832,-7.406235,-0.645035,-1.815124,-0.712867,-1.799866,-5.897116,-5.102417,6.317121,3.773338,9.965387,-3.281050,0.404337,0.837745,9.598036,-3.861053,-5.740920,-5.731871,7.435655,-9.939180,-3.638071,2.897298,-7.847153,-2.855318,-9.469457,4.509909,4.155488,-6.492085,-6.721240,7.231487,4.796433,-5.085963,-5.671581,-1.151474,-9.707492,5.989044,-9.932740,9.457316,4.810632,-4.389066,7.371186,2.308068,2.055315,7.057217,-7.345512,5.253084,-4.498849,7.199500,-6.712476,-4.355108,-3.538611,5.011451,-6.689639,-5.799962,4.416191,-6.254779,-9.899269,2.056062,3.287636,7.815692,-7.863221,3.775843,3.399793,6.121475,3.284345,-3.031984,-1.887714,-8.206968,-8.324190,-2.462977,2.286417,-9.199121,-8.822347,4.485158,-7.280721,0.270772,5.592307,6.072213,1.971995,-8.106317,-0.854697,0.612872,-8.940388,-5.977038,-2.644746,-2.646216,3.355276,5.425606,8.782971,0.031885,-5.150486,-2.592776,6.877555,-2.819539,-7.444261,2.574576,2.920708,6.524473,-1.841313,-3.141074,-8.562502,-4.336825,7.216835,-6.951722,-6.290331,-9.574645,-5.838767,-1.331503,-2.950854,3.848288,8.471449,7.239556,7.295527,0.202287,-9.652122,-9.235433,-4.501839,-9.654345,-5.781326,-4.623369,-0.012679,4.363302,4.091653,8.881854,-4.044862,2.809067,3.505474,-2.179120,9.055037,2.346812,2.280402,0.060846,-4.329047,6.880979,-7.464338,-9.165526,-1.527768,8.264641,8.999754,1.503331,2.236765,-3.530007,-8.470817,6.472349,-6.802652,6.907467,-3.041621,8.624718,5.989169,-2.074846,8.162585,-7.773896,-8.048570,0.905711,-3.319410,-8.224060,7.026778,1.405686,7.732206,-4.860911,7.610165,-7.430601,-7.961352,-8.549068,-7.418113,3.160883,6.632877,-0.523808,3.847135,-3.726493,-9.857882,-6.261843,2.949308,9.442487,-1.052978,-6.315130,-6.783706,-0.574901,-8.820721,-8.820743,4.858004,-0.595369,1.154646,-5.485870,1.405697,5.958988,4.808459,6.964727,9.981151,-3.843768,-8.364984,5.913819,0.337251,7.869216,-8.959401,-0.460622,4.766158,5.613919,4.639349,-7.059950,-1.627832,9.442797,6.466064], dtype = "float32")#candidate|1477|(630,)|const|float32
call_1474 = relay.TupleGetItem(func_985_call(relay.reshape(var_1475.astype('uint8'), []), relay.reshape(var_1476.astype('uint8'), [8, 8, 3]), relay.reshape(const_1477.astype('float32'), [630,]), ), 1)
call_1478 = relay.TupleGetItem(func_990_call(relay.reshape(var_1475.astype('uint8'), []), relay.reshape(var_1476.astype('uint8'), [8, 8, 3]), relay.reshape(const_1477.astype('float32'), [630,]), ), 1)
output = relay.Tuple([call_1451,call_1474,var_1475,var_1476,const_1477,])
output2 = relay.Tuple([call_1452,call_1478,var_1475,var_1476,const_1477,])
func_1496 = relay.Function([var_1475,var_1476,], output)
mod['func_1496'] = func_1496
mod = relay.transform.InferType()(mod)
mutated_mod['func_1496'] = func_1496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1496_call = mutated_mod.get_global_var('func_1496')
var_1498 = relay.var("var_1498", dtype = "uint8", shape = ())#candidate|1498|()|var|uint8
var_1499 = relay.var("var_1499", dtype = "uint8", shape = (192, 1))#candidate|1499|(192, 1)|var|uint8
call_1497 = func_1496_call(var_1498,var_1499,)
output = call_1497
func_1500 = relay.Function([var_1498,var_1499,], output)
mutated_mod['func_1500'] = func_1500
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1567 = relay.var("var_1567", dtype = "uint64", shape = ())#candidate|1567|()|var|uint64
const_1568 = relay.const([[[-2],[3],[9],[-6],[9],[9],[-6],[-2]]], dtype = "uint64")#candidate|1568|(1, 8, 1)|const|uint64
bop_1569 = relay.left_shift(var_1567.astype('uint64'), const_1568.astype('uint64')) # shape=(1, 8, 1)
bop_1579 = relay.minimum(bop_1569.astype('int16'), var_1567.astype('int16')) # shape=(1, 8, 1)
bop_1609 = relay.bitwise_or(bop_1579.astype('int32'), relay.reshape(bop_1569.astype('int32'), relay.shape_of(bop_1579))) # shape=(1, 8, 1)
func_1219_call = mod.get_global_var('func_1219')
func_1221_call = mutated_mod.get_global_var('func_1221')
const_1613 = relay.const([-8.791052,-2.173109,8.568511,7.442258,5.948031,-4.703546,-6.292297,9.231950,8.010853,7.760248,3.751302,1.920353,-5.096823,9.941844,0.344051,8.150402,-9.967066,2.221969,-9.471224,3.243753,-0.762209,-1.340878,-9.053451,9.221951,4.732065,-0.700559,-5.788417,-5.211338,1.645559,7.525512,-9.538817,-1.944640,-0.118720,-5.509531,-8.996689,-5.354079,8.050489,8.056778,-6.373165,5.489510,8.722033,-4.475281,8.761393,4.733386,7.929394,-8.303477,2.518909,-0.843303,-8.629842,-7.747656,2.090652,2.034992,6.120826,-1.853057,-2.439015,5.830164,6.919507,1.182744,-6.328665,0.371907,0.949166,-8.684204,-1.000477,-5.483011,8.549671,-8.760954,8.662192,-4.455534,-1.195760,6.868084,-7.505725,5.626013,-0.271355,7.902256,9.644525,-9.509188,-7.836511,4.518611,-7.093687,4.801591,-2.394228,-0.909692,-4.916865,-4.969278,5.203318,2.961258,7.202311,-2.181108,7.179886,-4.186106,-3.579660,-2.636830,4.015775,-8.716575,5.017135,-0.886503,1.320087,-9.920016,7.753676,-1.010113,-2.772470,-9.426293,-6.763125,6.154635,-0.819379,-2.654621,3.317522,6.695949,-3.723482,-8.589365,-9.699973,0.271583,0.750301,7.749719,8.398456,0.052368,6.254897,8.669014,-3.331726,9.665081,-2.428607,-9.072992,-5.205762,7.262671,9.447961,3.978444,-7.992849,4.103203,-0.861176,-3.937769,-5.694773,2.147513,0.794069,-9.320817,8.021496,0.859618,6.417864,6.801632,7.119028,9.607508,-8.041994,-6.496881,7.584839,-7.723855,-2.608620,2.642364,6.531452,-2.776033,3.613967,-2.211668,0.048058,9.326621,2.382538,-8.809191,9.432159,1.283561,-0.457713,-0.683251,0.415276,6.893916,1.532128,6.426958,9.502975,1.157239,-3.368923,-8.194252,8.339677,-0.769093,-8.008109,-0.805562,-6.466926,-9.177475,9.499906,1.105381,7.564049,3.099149,3.633400,3.453373,-7.784654,-8.510977,8.230805,-3.842404,-0.852524,1.673124,-2.088439,-8.183782,-1.781661,7.545550,6.957379,-5.521760,-3.416962,2.016151,-4.782762,-3.569479,4.411767,6.434087,8.554187,-8.206102,6.268291,5.650135,3.124328,-1.160980,-7.489702,6.276926,-0.029046,-0.530774,7.914944,8.858542,3.587802,1.723299,-1.562296,1.017044,-0.227162,6.874107,3.693240,4.010042,-7.055640,-2.583667,-3.339831,-7.166156,-7.468300,3.342160,-7.017970,9.990865,-1.617437,-6.565407,-5.372382,5.282190,2.573173,-1.843309,2.047320,5.826045,8.833479,-3.965462,-9.875624,0.746362,5.626595,-3.772185,1.550887,6.709509,-3.377484,-6.479785,3.544135,-1.379778,-0.711161,-2.107565,-3.520725,8.664180,7.190099,1.385770,-9.249536,-7.470153,1.416485,5.101909,3.653453,1.142609,-2.023741,-1.106700,6.019082,0.140871,7.179902,6.686591,7.268930,5.169617,-1.037563,-7.363476,3.115035,-9.786280,-9.854719,1.556955,3.466693,4.954078,-3.260394,1.331228,-9.741479,8.711670,-0.664870,-3.335935,1.795173,4.772390,-0.811657,-4.719864,-9.815719,0.341470,-4.481232,-3.510364,1.980023,-5.161931,0.811468,1.790331,-8.808706,6.819584,1.567333,-0.736397,-3.499187,-8.807303,-5.911812,-3.621677,4.490507,4.550513,6.324681,1.914062,4.245995,-0.645287,-8.677135,3.392562,7.765081,6.670383,-4.703824,4.262330,2.570753,0.871135,6.801780,0.136172,3.433134,-2.862992,-2.689285,9.760158,8.819653,8.720057,3.084121,-1.285533,5.807788,5.666436,-2.189014,-1.209760,-6.474413,5.178833,-9.040578,3.543120,0.060541,-4.913040,5.688521,7.212700,8.660085,-6.541873,0.828747,5.465511,2.743156,-6.567768,-1.578868,7.125287,1.427744,-5.986014,8.211915,4.806243,3.448489,9.385483,-6.962219,-3.869934,6.995051,-2.673728,1.612616,1.978925,9.723150,-7.013607,5.168244,-9.684765,-5.303528,-9.181958,-0.702758,-2.386227,7.977631,7.609268,5.019917,3.177388,-6.912346,4.813592,-5.328880,-3.021388,5.535534,2.070788,4.871564,4.434254,-6.336884,1.894874,8.108712,-0.911110,7.066290,-1.672219,5.804497,7.954024,-4.544158,-5.457771,-4.681770,-1.091255,7.863070,-8.228319,4.885497,6.921008,3.351186,4.545632,-9.434630,7.677906,0.610090,-2.953666], dtype = "float64")#candidate|1613|(396,)|const|float64
call_1612 = relay.TupleGetItem(func_1219_call(relay.reshape(const_1613.astype('float64'), [6, 6, 11])), 2)
call_1614 = relay.TupleGetItem(func_1221_call(relay.reshape(const_1613.astype('float64'), [6, 6, 11])), 2)
uop_1621 = relay.tan(call_1612.astype('float64')) # shape=(14, 7, 14)
uop_1623 = relay.tan(call_1614.astype('float64')) # shape=(14, 7, 14)
output = relay.Tuple([bop_1609,const_1613,uop_1621,])
output2 = relay.Tuple([bop_1609,const_1613,uop_1623,])
func_1645 = relay.Function([var_1567,], output)
mod['func_1645'] = func_1645
mod = relay.transform.InferType()(mod)
var_1646 = relay.var("var_1646", dtype = "uint64", shape = ())#candidate|1646|()|var|uint64
output = func_1645(var_1646)
func_1647 = relay.Function([var_1646], output)
mutated_mod['func_1647'] = func_1647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_1776 = func_892_call()
call_1777 = func_892_call()
output = relay.Tuple([call_1776,])
output2 = relay.Tuple([call_1777,])
func_1778 = relay.Function([], output)
mod['func_1778'] = func_1778
mod = relay.transform.InferType()(mod)
output = func_1778()
func_1779 = relay.Function([], output)
mutated_mod['func_1779'] = func_1779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_1927 = relay.TupleGetItem(func_1022_call(), 1)
call_1928 = relay.TupleGetItem(func_1024_call(), 1)
func_941_call = mod.get_global_var('func_941')
func_942_call = mutated_mod.get_global_var('func_942')
call_1933 = func_941_call()
call_1934 = func_941_call()
var_1938 = relay.var("var_1938", dtype = "float64", shape = (14, 7, 14))#candidate|1938|(14, 7, 14)|var|float64
bop_1939 = relay.logical_or(call_1933.astype('bool'), relay.reshape(var_1938.astype('bool'), relay.shape_of(call_1933))) # shape=(14, 7, 14)
bop_1942 = relay.logical_or(call_1934.astype('bool'), relay.reshape(var_1938.astype('bool'), relay.shape_of(call_1934))) # shape=(14, 7, 14)
bop_1943 = relay.bitwise_or(var_1938.astype('uint32'), relay.reshape(call_1933.astype('uint32'), relay.shape_of(var_1938))) # shape=(14, 7, 14)
bop_1946 = relay.bitwise_or(var_1938.astype('uint32'), relay.reshape(call_1934.astype('uint32'), relay.shape_of(var_1938))) # shape=(14, 7, 14)
const_1949 = relay.const([[[True,False,False,False,False,True,False,True,True,False,False,False,False,True],[True,True,False,True,False,True,False,False,True,True,True,False,True,False],[True,True,False,True,True,False,True,False,False,True,True,True,False,False],[True,False,True,True,False,False,False,False,True,False,False,True,False,True],[True,True,False,False,False,False,True,True,True,True,True,True,False,True],[False,False,True,True,True,False,False,True,False,True,True,False,True,False],[True,True,True,False,False,True,False,False,False,False,False,True,True,True]],[[False,True,False,False,False,True,True,True,False,False,False,False,True,True],[False,False,True,True,False,True,True,False,False,False,True,False,False,True],[True,True,False,True,False,True,True,False,False,True,True,False,True,True],[True,False,True,True,False,False,True,False,True,False,True,False,False,False],[False,False,True,False,True,True,True,False,False,True,False,True,False,False],[True,True,True,False,True,False,False,True,True,True,False,False,True,True],[False,False,True,True,False,False,True,False,True,False,False,False,True,False]],[[True,True,False,False,False,False,True,True,False,True,True,True,False,True],[False,True,False,False,True,True,True,False,True,False,False,False,True,False],[False,False,False,True,False,True,False,False,True,True,False,True,False,True],[True,False,False,True,True,False,True,True,True,True,True,False,True,True],[False,False,True,True,True,True,False,True,False,False,True,True,True,True],[True,True,False,False,True,False,True,True,False,False,False,True,True,True],[True,True,False,False,True,True,True,False,False,True,True,True,False,True]],[[False,True,False,True,True,True,True,False,True,False,True,False,True,True],[True,False,False,True,True,False,True,True,True,False,True,False,True,True],[True,True,False,True,True,False,True,False,True,False,False,True,True,False],[True,False,True,False,False,False,True,False,False,False,True,False,False,False],[False,False,True,True,True,True,False,False,False,True,False,True,False,True],[False,True,True,True,True,False,False,True,False,True,True,True,False,False],[True,False,True,True,False,False,False,False,False,False,False,False,False,True]],[[True,False,False,False,True,True,True,False,True,True,True,False,True,True],[True,True,True,False,True,False,True,False,True,True,False,True,True,False],[True,True,True,False,True,True,False,False,False,False,False,False,True,False],[False,False,True,True,True,False,True,True,True,False,True,False,True,True],[True,False,True,False,False,True,False,True,False,True,False,True,True,False],[True,False,False,True,True,True,False,False,False,True,True,True,True,False],[True,False,True,False,False,True,False,False,False,False,False,False,True,False]],[[True,False,False,False,True,True,True,False,False,True,False,False,False,False],[True,True,False,False,True,False,False,False,True,False,False,True,True,False],[True,False,False,True,True,True,True,False,False,True,False,False,False,False],[True,True,False,False,False,True,True,False,True,True,False,False,False,False],[True,True,True,False,True,True,True,False,False,True,False,False,False,False],[True,False,True,False,True,True,False,False,False,True,False,True,True,False],[True,True,False,False,False,True,True,True,True,False,False,True,True,False]],[[False,True,True,True,False,False,True,True,True,True,True,False,True,True],[True,False,True,True,True,False,True,True,True,False,False,False,True,False],[False,False,True,False,False,False,True,False,False,False,True,True,True,True],[True,False,False,True,False,False,False,True,False,True,False,True,False,True],[False,True,True,False,True,False,False,True,False,True,True,False,True,True],[False,False,False,True,True,False,False,True,False,False,True,False,False,True],[False,False,False,False,True,False,False,False,False,False,False,True,True,True]],[[True,False,False,True,False,False,True,True,True,True,True,True,False,False],[False,False,True,False,False,False,False,True,False,False,True,False,False,True],[True,True,True,True,True,True,False,True,False,True,True,True,True,False],[False,True,False,False,True,True,False,True,True,False,False,True,False,True],[False,False,True,True,True,False,False,False,True,True,False,True,False,True],[False,True,True,True,False,True,True,True,False,False,False,False,False,False],[True,True,False,True,True,True,True,True,True,True,True,False,False,True]],[[False,True,False,False,False,True,True,True,False,True,False,True,True,True],[True,True,True,False,False,True,False,False,False,True,True,True,False,False],[False,True,False,False,False,False,False,False,False,False,True,False,True,False],[True,False,True,False,True,False,True,False,False,True,False,False,False,True],[False,False,True,False,True,True,False,True,False,False,False,False,False,True],[False,True,True,False,True,False,False,True,True,True,True,True,False,True],[True,False,False,True,True,True,True,False,True,True,False,True,False,False]],[[True,False,True,True,False,True,True,True,True,False,False,False,True,True],[True,False,False,True,False,False,False,True,False,False,False,True,True,False],[False,True,False,True,False,True,False,False,False,False,True,False,False,False],[False,True,True,False,True,False,True,False,False,True,True,False,True,True],[True,True,True,True,False,True,False,False,True,True,False,True,True,False],[True,True,False,False,False,True,False,False,True,True,False,False,False,True],[False,False,True,False,True,False,True,True,False,False,False,True,True,False]],[[False,False,False,False,True,False,False,True,False,False,True,True,True,True],[True,True,True,False,True,False,False,False,False,True,False,False,True,False],[True,False,False,False,False,True,False,True,True,False,True,True,False,False],[True,True,False,False,False,True,False,False,True,False,False,True,False,False],[False,True,False,True,False,True,True,False,False,True,False,True,True,True],[True,True,True,False,False,True,False,True,False,True,True,True,True,True],[True,True,False,True,True,False,False,True,True,False,True,True,True,True]],[[True,True,False,False,False,False,False,True,True,False,False,False,True,True],[True,True,False,False,False,False,True,True,True,False,False,False,False,False],[False,True,True,True,False,False,True,True,False,True,False,True,True,False],[True,True,True,True,False,True,True,False,False,True,False,True,True,False],[True,True,False,True,False,False,False,True,False,True,False,False,False,False],[True,False,False,True,True,True,False,True,False,True,True,False,False,True],[True,True,False,True,False,False,False,True,False,True,False,False,False,False]],[[False,True,False,False,True,False,True,False,True,True,True,True,False,False],[False,True,False,True,False,False,False,True,False,True,False,True,False,False],[True,False,False,False,True,False,False,False,False,True,False,True,False,True],[False,False,False,False,True,False,False,False,False,False,True,False,True,True],[True,True,True,True,False,True,True,True,True,True,False,True,False,False],[False,False,False,False,False,False,True,False,False,True,False,False,True,True],[False,True,False,False,False,True,True,False,False,False,False,True,True,False]],[[False,True,False,False,True,False,False,True,False,True,True,False,False,True],[False,False,False,True,True,False,True,True,True,False,False,True,False,False],[False,True,False,False,False,False,False,True,True,True,False,True,False,False],[False,True,True,False,True,False,True,False,False,False,True,False,False,True],[True,False,True,False,True,True,False,True,False,True,False,True,False,True],[False,False,True,False,True,False,True,False,False,False,False,True,True,False],[True,True,True,False,False,True,False,True,False,True,True,False,False,True]]], dtype = "bool")#candidate|1949|(14, 7, 14)|const|bool
bop_1950 = relay.add(bop_1939.astype('float32'), relay.reshape(const_1949.astype('float32'), relay.shape_of(bop_1939))) # shape=(14, 7, 14)
bop_1953 = relay.add(bop_1942.astype('float32'), relay.reshape(const_1949.astype('float32'), relay.shape_of(bop_1942))) # shape=(14, 7, 14)
func_698_call = mod.get_global_var('func_698')
func_701_call = mutated_mod.get_global_var('func_701')
var_1964 = relay.var("var_1964", dtype = "uint32", shape = ())#candidate|1964|()|var|uint32
call_1963 = relay.TupleGetItem(func_698_call(relay.reshape(var_1964.astype('uint32'), [])), 2)
call_1965 = relay.TupleGetItem(func_701_call(relay.reshape(var_1964.astype('uint32'), [])), 2)
output = relay.Tuple([call_1927,bop_1943,bop_1950,call_1963,var_1964,])
output2 = relay.Tuple([call_1928,bop_1946,bop_1953,call_1965,var_1964,])
func_1970 = relay.Function([var_1938,var_1964,], output)
mod['func_1970'] = func_1970
mod = relay.transform.InferType()(mod)
var_1971 = relay.var("var_1971", dtype = "float64", shape = (14, 7, 14))#candidate|1971|(14, 7, 14)|var|float64
var_1972 = relay.var("var_1972", dtype = "uint32", shape = ())#candidate|1972|()|var|uint32
output = func_1970(var_1971,var_1972,)
func_1973 = relay.Function([var_1971,var_1972,], output)
mutated_mod['func_1973'] = func_1973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_2071 = relay.TupleGetItem(func_1022_call(), 2)
call_2072 = relay.TupleGetItem(func_1024_call(), 2)
var_2099 = relay.var("var_2099", dtype = "uint32", shape = (13, 15, 15))#candidate|2099|(13, 15, 15)|var|uint32
bop_2100 = relay.maximum(call_2071.astype('int8'), var_2099.astype('int8')) # shape=(13, 15, 15)
bop_2103 = relay.maximum(call_2072.astype('int8'), var_2099.astype('int8')) # shape=(13, 15, 15)
func_106_call = mod.get_global_var('func_106')
func_109_call = mutated_mod.get_global_var('func_109')
call_2113 = func_106_call(relay.reshape(call_2071.astype('uint32'), []))
call_2114 = func_106_call(relay.reshape(call_2071.astype('uint32'), []))
bop_2119 = relay.left_shift(var_2099.astype('uint16'), call_2071.astype('uint16')) # shape=(13, 15, 15)
bop_2122 = relay.left_shift(var_2099.astype('uint16'), call_2072.astype('uint16')) # shape=(13, 15, 15)
output = relay.Tuple([bop_2100,call_2113,bop_2119,])
output2 = relay.Tuple([bop_2103,call_2114,bop_2122,])
func_2125 = relay.Function([var_2099,], output)
mod['func_2125'] = func_2125
mod = relay.transform.InferType()(mod)
var_2126 = relay.var("var_2126", dtype = "uint32", shape = (13, 15, 15))#candidate|2126|(13, 15, 15)|var|uint32
output = func_2125(var_2126)
func_2127 = relay.Function([var_2126], output)
mutated_mod['func_2127'] = func_2127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_2154 = relay.TupleGetItem(func_1113_call(), 0)
call_2155 = relay.TupleGetItem(func_1115_call(), 0)
var_2161 = relay.var("var_2161", dtype = "float32", shape = (14, 7, 14))#candidate|2161|(14, 7, 14)|var|float32
bop_2162 = relay.maximum(call_2154.astype('int16'), relay.reshape(var_2161.astype('int16'), relay.shape_of(call_2154))) # shape=(14, 7, 14)
bop_2165 = relay.maximum(call_2155.astype('int16'), relay.reshape(var_2161.astype('int16'), relay.shape_of(call_2155))) # shape=(14, 7, 14)
func_1970_call = mod.get_global_var('func_1970')
func_1973_call = mutated_mod.get_global_var('func_1973')
var_2169 = relay.var("var_2169", dtype = "uint32", shape = ())#candidate|2169|()|var|uint32
call_2168 = relay.TupleGetItem(func_1970_call(relay.reshape(var_2161.astype('float64'), [14, 7, 14]), relay.reshape(var_2169.astype('uint32'), []), ), 2)
call_2170 = relay.TupleGetItem(func_1973_call(relay.reshape(var_2161.astype('float64'), [14, 7, 14]), relay.reshape(var_2169.astype('uint32'), []), ), 2)
output = relay.Tuple([bop_2162,call_2168,var_2169,])
output2 = relay.Tuple([bop_2165,call_2170,var_2169,])
func_2171 = relay.Function([var_2161,var_2169,], output)
mod['func_2171'] = func_2171
mod = relay.transform.InferType()(mod)
var_2172 = relay.var("var_2172", dtype = "float32", shape = (14, 7, 14))#candidate|2172|(14, 7, 14)|var|float32
var_2173 = relay.var("var_2173", dtype = "uint32", shape = ())#candidate|2173|()|var|uint32
output = func_2171(var_2172,var_2173,)
func_2174 = relay.Function([var_2172,var_2173,], output)
mutated_mod['func_2174'] = func_2174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1778_call = mod.get_global_var('func_1778')
func_1779_call = mutated_mod.get_global_var('func_1779')
call_2194 = relay.TupleGetItem(func_1778_call(), 0)
call_2195 = relay.TupleGetItem(func_1779_call(), 0)
output = call_2194
output2 = call_2195
func_2200 = relay.Function([], output)
mod['func_2200'] = func_2200
mod = relay.transform.InferType()(mod)
mutated_mod['func_2200'] = func_2200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2200_call = mutated_mod.get_global_var('func_2200')
call_2201 = func_2200_call()
output = call_2201
func_2202 = relay.Function([], output)
mutated_mod['func_2202'] = func_2202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_2282 = relay.TupleGetItem(func_1113_call(), 0)
call_2283 = relay.TupleGetItem(func_1115_call(), 0)
output = relay.Tuple([call_2282,])
output2 = relay.Tuple([call_2283,])
func_2289 = relay.Function([], output)
mod['func_2289'] = func_2289
mod = relay.transform.InferType()(mod)
output = func_2289()
func_2290 = relay.Function([], output)
mutated_mod['func_2290'] = func_2290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2307 = relay.var("var_2307", dtype = "float64", shape = (13, 2, 3))#candidate|2307|(13, 2, 3)|var|float64
uop_2308 = relay.asinh(var_2307.astype('float64')) # shape=(13, 2, 3)
output = relay.Tuple([uop_2308,])
output2 = relay.Tuple([uop_2308,])
func_2311 = relay.Function([var_2307,], output)
mod['func_2311'] = func_2311
mod = relay.transform.InferType()(mod)
mutated_mod['func_2311'] = func_2311
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2312 = relay.var("var_2312", dtype = "float64", shape = (13, 2, 3))#candidate|2312|(13, 2, 3)|var|float64
func_2311_call = mutated_mod.get_global_var('func_2311')
call_2313 = func_2311_call(var_2312)
output = call_2313
func_2314 = relay.Function([var_2312], output)
mutated_mod['func_2314'] = func_2314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_951_call = mod.get_global_var('func_951')
func_953_call = mutated_mod.get_global_var('func_953')
call_2347 = func_951_call()
call_2348 = func_951_call()
func_2125_call = mod.get_global_var('func_2125')
func_2127_call = mutated_mod.get_global_var('func_2127')
var_2350 = relay.var("var_2350", dtype = "uint32", shape = (2925,))#candidate|2350|(2925,)|var|uint32
call_2349 = relay.TupleGetItem(func_2125_call(relay.reshape(var_2350.astype('uint32'), [13, 15, 15])), 2)
call_2351 = relay.TupleGetItem(func_2127_call(relay.reshape(var_2350.astype('uint32'), [13, 15, 15])), 2)
uop_2381 = relay.sqrt(call_2349.astype('float32')) # shape=(13, 15, 15)
uop_2383 = relay.sqrt(call_2351.astype('float32')) # shape=(13, 15, 15)
uop_2387 = relay.cos(uop_2381.astype('float64')) # shape=(13, 15, 15)
uop_2389 = relay.cos(uop_2383.astype('float64')) # shape=(13, 15, 15)
bop_2394 = relay.bitwise_or(uop_2387.astype('uint8'), relay.reshape(uop_2381.astype('uint8'), relay.shape_of(uop_2387))) # shape=(13, 15, 15)
bop_2397 = relay.bitwise_or(uop_2389.astype('uint8'), relay.reshape(uop_2383.astype('uint8'), relay.shape_of(uop_2389))) # shape=(13, 15, 15)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_2403 = relay.TupleGetItem(func_1022_call(), 0)
call_2404 = relay.TupleGetItem(func_1024_call(), 0)
bop_2416 = relay.power(uop_2381.astype('float32'), relay.reshape(bop_2394.astype('float32'), relay.shape_of(uop_2381))) # shape=(13, 15, 15)
bop_2419 = relay.power(uop_2383.astype('float32'), relay.reshape(bop_2397.astype('float32'), relay.shape_of(uop_2383))) # shape=(13, 15, 15)
bop_2420 = relay.bitwise_xor(uop_2381.astype('int64'), relay.reshape(uop_2387.astype('int64'), relay.shape_of(uop_2381))) # shape=(13, 15, 15)
bop_2423 = relay.bitwise_xor(uop_2383.astype('int64'), relay.reshape(uop_2389.astype('int64'), relay.shape_of(uop_2383))) # shape=(13, 15, 15)
uop_2425 = relay.asin(bop_2394.astype('float64')) # shape=(13, 15, 15)
uop_2427 = relay.asin(bop_2397.astype('float64')) # shape=(13, 15, 15)
output = relay.Tuple([call_2347,var_2350,call_2403,bop_2416,bop_2420,uop_2425,])
output2 = relay.Tuple([call_2348,var_2350,call_2404,bop_2419,bop_2423,uop_2427,])
func_2430 = relay.Function([var_2350,], output)
mod['func_2430'] = func_2430
mod = relay.transform.InferType()(mod)
var_2431 = relay.var("var_2431", dtype = "uint32", shape = (2925,))#candidate|2431|(2925,)|var|uint32
output = func_2430(var_2431)
func_2432 = relay.Function([var_2431], output)
mutated_mod['func_2432'] = func_2432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_2440 = relay.TupleGetItem(func_2289_call(), 0)
call_2441 = relay.TupleGetItem(func_2290_call(), 0)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_2449 = relay.TupleGetItem(func_1113_call(), 0)
call_2450 = relay.TupleGetItem(func_1115_call(), 0)
func_722_call = mod.get_global_var('func_722')
func_724_call = mutated_mod.get_global_var('func_724')
var_2453 = relay.var("var_2453", dtype = "uint32", shape = ())#candidate|2453|()|var|uint32
call_2452 = relay.TupleGetItem(func_722_call(relay.reshape(var_2453.astype('uint32'), [])), 0)
call_2454 = relay.TupleGetItem(func_724_call(relay.reshape(var_2453.astype('uint32'), [])), 0)
output = relay.Tuple([call_2440,call_2449,call_2452,var_2453,])
output2 = relay.Tuple([call_2441,call_2450,call_2454,var_2453,])
func_2461 = relay.Function([var_2453,], output)
mod['func_2461'] = func_2461
mod = relay.transform.InferType()(mod)
var_2462 = relay.var("var_2462", dtype = "uint32", shape = ())#candidate|2462|()|var|uint32
output = func_2461(var_2462)
func_2463 = relay.Function([var_2462], output)
mutated_mod['func_2463'] = func_2463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1387_call = mod.get_global_var('func_1387')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_2532 = relay.TupleGetItem(func_1387_call(), 0)
call_2533 = relay.TupleGetItem(func_1388_call(), 0)
uop_2543 = relay.sinh(call_2532.astype('float32')) # shape=(14, 7, 14)
uop_2545 = relay.sinh(call_2533.astype('float32')) # shape=(14, 7, 14)
output = uop_2543
output2 = uop_2545
func_2555 = relay.Function([], output)
mod['func_2555'] = func_2555
mod = relay.transform.InferType()(mod)
output = func_2555()
func_2556 = relay.Function([], output)
mutated_mod['func_2556'] = func_2556
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2566 = relay.const([[-2.492882,-1.806786],[-0.226606,-2.711911],[-6.371482,0.827381],[-8.910581,6.390483],[8.658248,-8.509538],[5.051656,7.603930],[0.537242,-6.850295],[1.527293,1.744053]], dtype = "float64")#candidate|2566|(8, 2)|const|float64
uop_2567 = relay.sin(const_2566.astype('float64')) # shape=(8, 2)
func_2171_call = mod.get_global_var('func_2171')
func_2174_call = mutated_mod.get_global_var('func_2174')
var_2572 = relay.var("var_2572", dtype = "float32", shape = (1372,))#candidate|2572|(1372,)|var|float32
const_2573 = relay.const(1, dtype = "uint32")#candidate|2573|()|const|uint32
call_2571 = relay.TupleGetItem(func_2171_call(relay.reshape(var_2572.astype('float32'), [14, 7, 14]), relay.reshape(const_2573.astype('uint32'), []), ), 2)
call_2574 = relay.TupleGetItem(func_2174_call(relay.reshape(var_2572.astype('float32'), [14, 7, 14]), relay.reshape(const_2573.astype('uint32'), []), ), 2)
var_2584 = relay.var("var_2584", dtype = "uint32", shape = (1, 9, 1))#candidate|2584|(1, 9, 1)|var|uint32
bop_2585 = relay.multiply(const_2573.astype('uint16'), var_2584.astype('uint16')) # shape=(1, 9, 1)
output = relay.Tuple([uop_2567,call_2571,var_2572,bop_2585,])
output2 = relay.Tuple([uop_2567,call_2574,var_2572,bop_2585,])
func_2593 = relay.Function([var_2572,var_2584,], output)
mod['func_2593'] = func_2593
mod = relay.transform.InferType()(mod)
var_2594 = relay.var("var_2594", dtype = "float32", shape = (1372,))#candidate|2594|(1372,)|var|float32
var_2595 = relay.var("var_2595", dtype = "uint32", shape = (1, 9, 1))#candidate|2595|(1, 9, 1)|var|uint32
output = func_2593(var_2594,var_2595,)
func_2596 = relay.Function([var_2594,var_2595,], output)
mutated_mod['func_2596'] = func_2596
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2689 = relay.var("var_2689", dtype = "int16", shape = ())#candidate|2689|()|var|int16
var_2690 = relay.var("var_2690", dtype = "int16", shape = (16, 11, 12))#candidate|2690|(16, 11, 12)|var|int16
bop_2691 = relay.not_equal(var_2689.astype('bool'), var_2690.astype('bool')) # shape=(16, 11, 12)
func_2200_call = mod.get_global_var('func_2200')
func_2202_call = mutated_mod.get_global_var('func_2202')
call_2694 = func_2200_call()
call_2695 = func_2200_call()
uop_2704 = relay.acosh(bop_2691.astype('float32')) # shape=(16, 11, 12)
output = relay.Tuple([call_2694,uop_2704,])
output2 = relay.Tuple([call_2695,uop_2704,])
func_2706 = relay.Function([var_2689,var_2690,], output)
mod['func_2706'] = func_2706
mod = relay.transform.InferType()(mod)
mutated_mod['func_2706'] = func_2706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2706_call = mutated_mod.get_global_var('func_2706')
var_2708 = relay.var("var_2708", dtype = "int16", shape = ())#candidate|2708|()|var|int16
var_2709 = relay.var("var_2709", dtype = "int16", shape = (16, 11, 12))#candidate|2709|(16, 11, 12)|var|int16
call_2707 = func_2706_call(var_2708,var_2709,)
output = call_2707
func_2710 = relay.Function([var_2708,var_2709,], output)
mutated_mod['func_2710'] = func_2710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_2755 = relay.TupleGetItem(func_1113_call(), 0)
call_2756 = relay.TupleGetItem(func_1115_call(), 0)
func_2430_call = mod.get_global_var('func_2430')
func_2432_call = mutated_mod.get_global_var('func_2432')
const_2758 = relay.const([8,3,8,-8,7,7,9,4,8,4,-5,-8,5,1,10,1,-9,-9,-10,-9,-2,7,-4,-7,-8,-2,3,5,8,6,-1,-9,3,-1,-5,-2,-9,-8,-1,-3,7,1,5,-2,3,2,-4,8,9,4,8,-2,-6,-9,-7,-5,8,-6,5,8,5,4,3,9,-9,-7,-9,-5,-9,-2,-7,-1,-5,9,-7,10,9,3,3,-3,5,9,-8,8,9,4,-9,4,-3,5,-2,-4,-8,10,-9,4,-4,7,-9,9,-7,5,-7,-9,4,2,1,-4,5,10,8,7,9,3,-10,-8,-3,-2,-4,5,-7,1,-5,6,-10,3,10,-9,3,-9,-2,10,9,-10,-3,10,-1,9,-5,-5,3,4,-7,4,-5,-5,-9,-4,6,-1,8,2,-10,7,-10,-4,-10,8,-1,9,5,-3,-8,-3,3,-7,3,2,2,3,-2,5,-5,-3,-5,-2,-6,-7,4,-3,3,-9,9,2,-1,-5,3,-8,3,5,-4,10,-10,8,-6,2,-3,8,2,-5,-6,-7,10,-9,9,-1,-9,-4,-10,4,5,7,-6,-10,-6,3,-7,3,10,-8,-6,-1,-2,5,-9,-9,-6,2,1,2,9,1,8,3,8,4,-10,10,-1,-5,-3,-5,-1,10,-1,1,-8,7,-10,3,-2,3,-3,6,-7,2,-3,8,-6,-8,-3,-8,-3,8,-7,-1,-9,1,-7,-3,7,-4,-4,6,3,8,3,8,3,9,-8,-9,7,6,-8,-8,-6,-7,7,2,-7,9,-6,-8,-4,1,1,10,9,-4,6,-3,-6,-5,-4,-6,-5,3,-3,-2,-9,-10,2,-10,5,9,-6,6,-1,-7,-5,-5,8,-2,10,10,5,-2,2,-8,-6,10,9,5,4,4,7,-10,9,7,-7,3,-7,-9,-8,5,7,-5,-1,6,-2,-7,-2,-3,-10,-2,-7,9,9,4,8,-1,-7,1,7,-5,6,10,-10,8,-3,-7,5,-6,-7,-2,-4,-9,-1,8,6,9,-7,1,-1,-9,1,-7,-3,1,-5,-6,5,-9,6,4,-3,7,3,-7,-8,9,4,6,-8,9,7,2,9,-10,-1,10,-9,-3,-4,7,9,-1,-1,-2,1,4,-5,4,10,-10,10,2,-6,4,-9,3,-6,-3,-1,-7,4,-4,8,2,2,6,3,-3,-6,8,9,-3,6,-3,-1,-1,2,2,3,-7,-8,-7,4,10,9,7,-9,-5,8,-4,-8,2,8,1,1,-6,-4,10,7,10,-9,-5,7,3,-8,4,2,8,-1,-3,7,-1,-6,-1,-10,10,7,-8,-5,-10,10,9,-10,-3,-3,3,-8,3,5,7,-4,-5,-2,5,-5,-10,-9,-6,5,-9,-6,10,-7,7,8,7,3,-5,6,2,-7,8,-1,-6,-6,5,-9,7,2,8,-10,-4,-7,-9,8,-8,-4,-2,3,-3,3,2,-5,-8,4,8,8,-8,10,-2,9,-7,6,-1,-5,7,-2,-2,7,7,3,-7,7,10,5,10,-9,8,-4,2,3,1,-10,6,2,-1,9,8,7,7,-7,5,-4,3,4,-1,-7,-6,-5,4,-6,-2,5,2,7,2,-4,2,-4,8,-10,-8,-1,-2,7,-4,1,7,-6,-7,-6,-5,-8,10,1,1,-7,8,3,4,6,-10,-4,4,-6,10,-2,4,-3,-3,2,-6,4,9,-4,5,1,-8,4,4,4,4,9,5,2,-6,3,5,4,3,9,7,-7,6,8,3,-3,8,-3,-6,1,9,-6,1,10,-9,4,-10,2,2,5,-3,-2,-2,6,-2,-2,2,7,7,5,-6,-1,-10,2,6,-9,8,2,10,8,4,5,7,7,-1,1,3,-6,8,7,7,-10,9,5,-9,-1,6,-9,8,-8,-10,6,2,8,-10,-3,-3,4,-5,1,-3,-7,6,3,-3,1,-1,-9,-9,-4,-4,-7,-9,8,1,10,-10,4,-4,-10,-7,10,-9,4,8,8,4,8,8,1,-5,-3,9,-1,-4,2,1,1,3,-8,3,10,3,5,5,-1,7,5,1,3,-8,-7,6,-1,-5,-7,-6,10,-6,3,10,-2,-9,-7,5,-6,-2,4,-2,7,5,-8,1,-2,-10,10,10,9,9,10,5,-6,2,4,-4,-3,-5,10,6,4,-7,-8,-6,-6,6,-8,-3,-7,-6,-9,2,-9,-3,-2,3,7,-10,-8,-5,-9,10,9,4,6,-6,8,7,2,10,-8,-8,4,-1,4,7,-4,-3,-8,-8,-4,-1,2,-4,7,6,7,-10,4,3,7,1,5,-4,-8,-1,-9,-7,-2,3,2,-7,-5,-10,-10,7,1,9,-2,2,7,4,-8,5,9,9,7,-2,5,-1,3,2,-6,1,-4,-9,8,5,2,4,-7,-5,-1,7,9,10,-6,5,3,-9,10,-8,-9,4,4,-7,3,7,10,-9,-4,8,-3,-1,2,-5,-7,-1,-7,-2,-3,4,-10,9,5,-9,-6,8,-2,6,-8,-8,-4,-5,-4,-4,5,-2,-6,-7,8,1,-2,3,-7,-10,2,2,-7,-6,4,-9,-7,6,-1,-6,6,4,6,4,8,8,3,7,9,-2,-3,-1,-1,6,9,-4,-1,5,-6,1,-4,-6,-3,9,-6,4,-2,-2,4,-9,-1,-8,-9,-2,-3,-1,-5,3,9,7,-5,-7,-8,1,8,-4,3,3,-4,-9,9,-3,-8,-2,10,-4,-2,1,-1,-1,4,-10,-7,1,8,-10,3,-3,2,9,7,-7,4,9,2,-4,5,-5,5,-6,9,3,-9,-2,4,-3,7,-9,1,6,-10,-2,-2,-9,-5,3,-1,8,5,-3,3,9,9,9,-6,3,-5,10,4,-6,4,-4,6,-7,4,-9,7,5,3,-3,-10,2,-3,-5,-2,9,10,3,7,-6,-1,6,-4,3,8,6,-6,7,3,-8,1,-10,-1,9,-4,-9,-2,4,-9,-3,5,-6,10,-10,-5,7,-6,-9,2,8,-2,3,-3,2,-6,-8,-4,3,10,-6,-4,3,2,10,9,-1,3,9,-3,-8,3,3,2,3,9,-9,4,2,5,9,-8,-8,-6,-8,5,-9,4,10,-6,-10,-2,-6,2,-2,10,2,2,8,7,7,4,4,8,3,-7,-10,3,-7,4,3,-1,-1,-7,2,-6,5,7,-5,-3,10,3,-1,6,5,-7,5,5,4,-6,5,-7,2,-2,-2,5,-7,4,7,5,-3,10,2,-5,-9,-5,4,7,-10,1,5,4,6,-7,-7,5,-7,-7,10,7,4,4,-6,2,-1,7,-10,-6,-8,-1,7,6,-1,-3,6,2,4,10,8,-5,6,3,-5,-4,3,-10,1,4,-9,-3,-9,-9,-3,-4,-2,10,-2,-5,3,10,7,6,-5,10,-9,1,9,2,10,1,-6,-9,3,5,-5,1,2,10,8,-1,2,-5,-5,-1,3,-4,-4,-7,-7,4,-5,4,2,7,3,-7,4,-5,10,-4,1,-4,-3,3,-3,-3,-4,10,-10,-6,-6,9,-8,1,-2,3,-2,-8,7,-6,10,9,-4,-10,5,-9,-2,3,5,-7,6,10,-4,5,-2,2,-8,-8,1,1,5,-6,-10,-4,-2,10,1,-8,-10,8,1,8,10,-4,-3,6,-4,-4,3,9,-2,-3,-1,-8,3,-7,-4,6,10,-9,-4,2,9,-4,7,-10,-2,-10,6,-8,-3,-3,-9,-5,6,1,-8,10,8,-2,9,3,-4,6,10,9,8,-10,-9,-3,8,-7,-6,4,4,10,7,-5,-6,-1,5,-10,1,10,-7,-5,9,-1,-2,1,-10,-7,4,-8,-3,9,-10,-10,10,-9,3,4,-9,-6,-8,6,8,5,-5,4,-1,-5,1,1,5,10,7,1,7,-6,-6,4,-6,-8,1,7,5,4,9,-7,7,-4,1,10,-5,-4,-9,-3,-7,-3,2,-10,-6,-3,2,-9,7,-3,1,8,-2,-4,-3,5,9,8,-10,8,-3,-10,1,3,-5,8,-2,9,-1,4,-2,-3,8,2,-10,-5,1,9,5,2,10,5,10,-7,-6,6,1,9,-1,-9,-9,-7,2,-4,7,8,-6,3,-6,9,-3,-10,-4,-6,-9,-7,1,-1,-9,-9,-9,-6,-7,-2,-9,-7,-4,9,-7,5,9,-4,-6,-1,-8,-1,-7,-3,-10,-9,6,1,2,-9,4,3,-6,4,-2,6,5,-6,-8,9,5,-7,2,4,10,5,9,-7,-6,8,-6,-5,-4,7,3,-10,-2,1,4,1,1,8,-3,7,-6,7,-1,-6,7,-7,-7,-9,1,-6,5,9,-1,-8,-1,-6,-3,-10,-7,-9,10,-3,2,-10,1,-8,-1,-4,5,9,-8,5,-7,-6,-1,-9,9,-2,5,4,5,-2,-2,-1,8,-2,-4,-10,2,-9,10,-8,1,10,9,10,7,-2,-6,-5,-2,5,-6,1,10,4,8,-9,-1,3,-2,-6,4,-9,3,-9,2,3,6,7,3,-5,3,-10,-2,6,7,-2,-2,-5,4,-9,7,-4,3,-10,5,7,-9,6,-9,5,4,1,10,-10,10,-1,-9,-2,10,-1,7,-7,-5,10,-3,2,-4,-5,8,9,3,5,-6,-6,-8,1,5,4,9,3,-8,-1,-9,5,2,-5,3,-10,-6,-3,-3,8,2,-7,-5,-7,9,-5,6,4,-3,6,-9,-3,3,7,-2,-6,-8,-9,7,-8,-4,3,-3,10,7,2,-10,-1,2,-1,-5,-1,1,-10,6,3,8,-9,-4,-7,-3,-7,3,-8,-5,1,7,7,-4,6,-2,9,4,3,7,7,10,-6,1,9,-4,-8,-2,9,-1,-5,4,4,-2,-6,-8,10,8,-2,10,6,2,5,8,-10,-8,1,9,-10,2,-9,-10,10,-4,6,4,6,-6,9,-6,5,6,-8,1,7,5,-6,6,2,8,2,9,-7,-10,1,5,-1,-1,-7,6,-8,1,-3,-1,5,-2,3,-6,8,-7,1,2,5,1,-6,6,-6,-9,2,-6,1,-5,-1,5,6,-8,-5,10,-6,2,6,7,4,2,5,-4,-8,-1,7,-8,-7,9,9,-2,8,8,-1,-7,8,-3,-9,-9,6,-4,5,6,-2,-6,6,-7,-3,10,9,-10,-9,2,-2,3,-1,10,2,-10,3,-5,-5,5,9,-1,-5,7,-6,1,10,-5,-4,-6,3,1,1,6,2,1,9,10,-5,-7,6,8,-6,6,9,6,-8,-9,7,-5,9,10,10,-1,5,-7,-9,-6,9,5,-3,-2,-2,-10,-10,-7,2,6,-7,6,-6,2,9,10,-1,-6,6,5,-10,-6,-9,1,10,1,6,-9,2,10,3,-9,-3,-7,4,-8,7,7,8,-5,-5,6,-8,4,8,1,-1,4,-5,6,4,-6,-9,5,8,6,10,3,-6,-8,-10,-8,1,-9,-4,8,3,7,6,9,-3,5,6,-1,-6,9,-10,-1,8,9,-8,-9,2,1,9,-10,-7,-6,-7,-5,8,1,10,10,5,-9,-8,-2,-4,8,6,-6,5,4,-10,6,-5,-5,10,-1,7,-8,6,-9,6,4,5,3,-1,-3,9,7,8,-7,9,3,-7,5,4,6,1,-10,-9,10,3,8,-5,-6,-9,1,-10,-8,-7,4,6,1,-1,6,7,7,1,2,10,-7,10,9,-2,10,-1,-3,6,6,5,5,-10,-2,10,5,1,-1,9,2,8,-3,8,-7,7,10,-5,-6,9,-6,-3,1,2,-6,1,-2,-1,9,10,4,9,-3,-10,9,-8,-8,-5,-6,10,-8,1,-1,7,-4,6,-8,1,-9,-10,-10,-5,-7,9,7,-5,-2,9,3,-5,-4,-4,-8,-2,7,7,-8,10,-3,1,10,-7,4,-6,-1,-3,-4,5,-5,-8,9,-4,6,-6,-4,-10,-3,-7,-2,-6,-5,-6,-10,-10,-10,-9,-2,7,8,-8,10,-7,5,-4,6,-8,10,10,6,5,6,4,7,-7,-7,-7,3,4,9,-2,7,-8,5,7,7,7,3,3,-7,5,7,2,10,-7,3,4,9,-7,1,6,-3,3,-6,-8,-1,8,-6,8,-4,5,-4,7,10,-8,5,10,8,-6,2,-9,6,10,8,8,-5,-1,-1,-2,2,3,-7,7,-6,2,-4,10,-10,4,2,-2,-4,-4,1,5,10,-1,10,-2,1,-4,-9,-7,-9,-9,-2,6,3,-10,-9,-8,-2,6,8,-8,-4,-6,-9,3,5,-6,4,4,3,-4,8,1,-2,1,5,-9,-10,-1,1,6,6,4,6,-7,-9,-3,-2,6,-1,4,-6,6,-1,6,3,-9,-4,8,10,-8,8,-7,-6,-6,1,5,-6,-3,10,-10,-1,-1,-3,-4,-6,-5,2,7,-6,6,-3,-3,2,8,7,-4,-7,3,5,5,10,6,-2,1,-5,5,6,9,-6,-1,-4,-1,-1,3,2,7,-9,-3,5,-1,10,10,-4,5,5,4,10,-10,-10,5,2,3,7,4,-9,-4,-1,-5,3,-8,6,8,7,-5,1,-8,-3,8,-6,-4,7,6,-2,6,2,6,6,-2,-1,10,10,-7,-9,-5,-7,-4,6,-6,-2,6,8,2,3,7,-2,8,-4,-4,-1,-8,7,5,-3,-2,3,8,7,5,3,-5,-8,-6,-7,-5,-1,-7,6,-2,10,3,9,7,1,-7,4,9,5,4,10,-8,-2,-1,-6,-7,-6,-2,-2,-4,-10,7,-3,6,4,7,1,6,2,-4,-2,-7,-1,-7,9,-4,-2,-5,-9,-2,2,8,-9,-7,-6,1,1,-8,8,-5,-5,-8,-2,-2,5,-4,5,10,-8,5,9,-2,4,3,3,7,-7,-7,-9,7,-2,10,-3,-1,9,-5,-2,9,4,5,9,7,8,-4,2,-8,-4,-4,-9,10,-1,-8,-1,-8,-8,2,5,-3,3,10,1,-4,8,-4,2,-7,-6,-7,-2,1,8,-9,-5,7,-2,-5,-7,-9,-6,-2,-4,5,-5,-8,7,-7,5,7,-8,9,-1,4,5,3,-6,-2,-5,4,-9,-7,2,-3,-9,8,-7,1,1,-8,-1,-10,5,9,8,9,6,6,-9,-4,3,8,-8,2,4,-8,10,-4,-7,-4,-6,4,7,9,-3,4,6,-8,1,-6,9,-2,9,3,-8,-4,-9,6,10,-4,10,-9,-10,-1,-8,-7,-10,-7,6,-8,8,-3,-10,-5,-6,-3,6,5,10,8,4,6,-8,-4,4,1,1,1,4,-2,-4,9,7,-6,1,-5,-9,8,6,4,-1,4,-10,5,-8,6,-10,-1,-8,-3,1,5,-1,-9,-4,-8,7,-9,6,3,-1,-7,-2,7,7,3,10,-2,-9,-9,-6,-10,-1,-2,-2,-3,1,-5,10,7,4,7,-5,6,-2,9,-3,2,9,-3,8,6,-5,4,-5,-5,10,4,1,-1,4,-10,10,-1,6,2,9,3,10,-1,10,-7,-8,-6,-10,3,-9,-1,6,10,5,6,-1,-9,-8,-10,-8,7,-8,6,-9,6,-3,9,-10,-1,-2,-10,-6,7,-1,10,-4,5,1,-1,-2,8,-3,-3,7,-9,-1,-1,-8,-10,-5,-6,9,-10,3,-1,-10,10,-8,-8,7,4,-6,4,3,-3,-6,7,10,-6,-1,-10,9,-6,-5,2,4,1,-8,6,-10,-2,-7,2,6,-4,6,-10,6,-2,4,4,-7,-10,1,-10,2,-5,-1,-8,-6,6,8,7,-3,6,2,-5], dtype = "uint32")#candidate|2758|(2925,)|const|uint32
call_2757 = relay.TupleGetItem(func_2430_call(relay.reshape(const_2758.astype('uint32'), [2925,])), 0)
call_2759 = relay.TupleGetItem(func_2432_call(relay.reshape(const_2758.astype('uint32'), [2925,])), 0)
const_2767 = relay.const([-5,-10,-5,-6,-1,-4,-1,-6,8,9,-8,3,-2,10,-3,3,-5,3,-4,-1,-5,-10,10,7,7,-7,2,10,-3,3,7,4,-1,-2,-5,-1,-9,-7,9,8,3,-5,-7,1,5,8,2,-4,10,-9,8,-3,5,8,7,1,3,-7,1,2,3,-6,3,-1,5,-6,-2,-1,-3,10,-7,2,-5,2,-8,-9,-6,8,-4,-2,9,-3,-9,9,-3,1,-7,4,1,-7,-2,-10,5,6,8,-10,6,-9,6,-6,-4,3,-2,-5,-2,-2,1,3,-1,-7,8,6,-9,-10,3,-7,5,-10,6,-1,-10,-5,4,-6,6,4,1,8,8,-6,-6,-10,1,-9,7,-7,1,-7,9,-2,9,9,-9,-9,-6,8,5,4,-9,-5,1,3,-6,-10,6,-10,-9,4,-5,-3,-7,5,-10,-10,-10,-7,-6,6,5,-7,-8,-5,-5,3,3,2,-8,1,-4,8,5,8,10,-5,9,-3,8,-4,-8,-2,-4,10,-1,-1,-4,-10,6,2,1,-8,-9,9,-10,10,-1,-10,9,6,-1,-7,-8,3,7,8,3,10,9,-1,2,9,-4,-6,-9,2,-1,-6,-6,-3,-6,-2,-6,-1,10,4,-5,-5,1,1,6,-1,-2,8,-8,2,-1,-3,7,-2,7,-10,10,-1,-7,-3,8,3,-3,-2,1,4,-10,-7,-10,5,6,10,-3,6,-3,-4,-5,3,-8,-8,8,-9,9,-7,-6,6,10,-7,-7,2,6,-3,4,8,10,3,9,8,9,-7,-8,8,-9,10,1,-5,9,-7,-3,-7,4,3,-1,1,6,6,1,3,-2,-3,4,-10,-6,-6,-6,2,-2,-3,-5,4,4,-9,-7,-4,-3,1,-5,-10,2,9,-8,7,-3,-4,5,-4,-9,6,3,-4,7,6,8,4,-4,5,-4,-4,3,9,-6,-10,4,-1,-4,-7,-10,-6,3,-6,4,8,8,-7,10,10,9,-10,-6,3,-6,4,5,4,-1,-4,-6,5,4,4,9,7,5,-10,8,2,4,-2,5,7,-8,1,3,9,-9,9,-8,4,6,6,-9,-10,6,2,-9,9,9,-5,-7,10,-7,2,5,-3,-1,-7,-9,1,-10,-9,3,-10,10,-7,-10,-1,-5,-4,-10,-1,6,-9,-4,2,-7,-5,-9,-5,8,5,8,-5,-10,3,-4,9,4,-4,-2,4,-7,10,-4,6,4,2,-7,4,7,-5,2,2,-4,6,-3,5,-9,-8,7,-9,-3,-4,-9,8,-8,7,-9,-5,5,10,2,-8,10,8,-9,-2,-7,5,-7,-1,9,4,-7,2,-2,10,8,7,-3,7,1,6,-6,-1,7,-7,-10,-4,-1,8,9,-7,5,6,10,-2,3,-6,-1,5,1,-4,-4,-9,-5,8,3,2,1,6,1,2,-7,6,-7,8,4,2,-10,-1,-6,-10,6,6,8,-9,-1,-7,-9,-6,6,8,-8,8,-1,-5,-9,7,5,-3,7,-5,2,9,-9,-10,1,-6,8,8,-2,8,8,-7,9,9,1,-6,-8,-4,10,-3,-6,1,-3,-5,2,6,-7,4,-2,-5,8,6,8,4,-8,10,-8,-7,-8,5,4,-1,-4,-10,-7,-9,-6,-1,-7,-4,-4,6,-5,-2,-5,-4,-8,-1,-7,1,6,1,7,8,-8,6,5,3,-6,3,-4,10,10,-6,-2,5,1,10,9,-1,-10,-9,10,5,1,-7,6,6,-7,-7,1,7,-7,1,6,-10,-10,3,5,8,-7,8,10,-1,6,8,-7,3,-5,-9,6,-9,-10,-6,10,10,9,-1,4,8,10,-1,-2,-1,9,-9,-9,9,9,-6,-1,6,-8,9,-1,-4,-2,5,9,10,-6,-1,7,8,-9,-5,-3,-10,-10,-5,-3,-9,1,-10,2,8,-9,6,-1,4,-9,8,-1,-4,-7,-1,7,-7,6,9,-7,9,-6,-4,7,6,-6,-9,5,8,-2,2,1,-8,-7,6,-5,-2,7,-1,3,-2,4,-7,-5,-10,-6,-6,4,-5,-4,4,5,4,1,8,-1,-6,2,-3,-10,5,5,-4,-7,9,9,1,-9,-8,10,-6,-8,5,6,8,1,6,5,7,9,5,9,-4,3,-1,-9,4,-9,-1,9,5,-3,9,10,-3,-2,-9,-6,-9,8,-10,7,6,6,-3,7,6,6,1,3,-7,2,-4,-2,5,-3,6,-2,-5,2,-3,5,-10,-7,9,4,-5,-5,-5,3,6,9,-7,-6,9,-2,6,4,-10,-8,-2,-6,-1,5,-9,-9,6,9,-1,8,3,-2,9,7,-6,-10,-7,5,-9,-5,-1,-3,2,-2,7,1,-2,-10,-1,-2,-2,-7,-9,9,3,6,6,-10,-3,9,6,1,5,1,-8,4,3,1,2,-2,3,8,9,-6,-4,-4,7,8,-7,-9,-2,-7,2,1,-9,10,10,9,-8,4,2,-2,-3,2,-1,-5,3,10,-3,1,1,-3,-9,-4,1,-1,-6,-1,-3,-9,3,-7,-7,2,-7,3,4,3,-10,2,-3,-4,6,-9,10,5,-1,2,1,-7,6,-8,-6,4,6,-9,1,-1,1,-7,-6,-6,7,5,1,8,-2,8,7,-5,-9,5,8,-6,4,1,8,-8,-5,-6,-7,-6,3,8,-7,5,7,-6,6,5,-7,-1,-4,-1,4,-7,-4,-9,-8,-6,-1,-1,-1,-5,-10,8,-5,-4,9,-9,-5,-3,1,3,-10,2,-2,-10,-3,1,-3,3,-9,8,4,-3,6,-9,10,4,-3,-1,-3,-7,4,-10,-8,-7,-3,6,-4,8,9,-7,-9,8,1,-4,-8,1,-8,1,5,2,-2,-5,9,8,-1,6,-8,-2,4,3,9,-4,-4,-3,-2,9,5,-2,-9,4,-7,-2,5,-6,-1,10,1,-9,10,6,-6,6,10,8,10,1,-4,-4,10,9,9,3,5,6,1,7,-8,-1,-5,-8,-2,-4,-6,7,-8,-7,-6,-6,-2,8,6,-3,10,-3,-6,10,1,-4,4,-3,8,1,2,-6,-2,8,-2,10,-8,7,-3,-3,4,-3,1,-3,8,2,1,-4,2,1,-6,6,-4,-9,-3,-1,-10,-5,2,7,-2,-10,6,-6,-6,2,7,-8,-2,-8,-7,-2,-5,7,5,-5,-4,-9,-9,-9,-1,-8,9,-9,-1,6,8,-5,6,-8,8,7,-2,-10,-1,-5,2,-3,9,3,-1,-8,-8,-9,6,5,-5,-6,9,8,-7,-4,-6,1,3,5,-3,-2,-7,5,-10,-9,-3,4,1,1,4,-6,-4,-8,-10,-2,8,-6,-3,-10,1,10,4,-5,-5,-4,2,9,-6,-5,-10,1,-9,2,-8,-8,2,5,1,3,-4,3,7,-4,-9,-1,-7,6,7,-9,2,6,-7,-2,-10,-4,-1,2,1,3,6,10,6,9,-3,8,8,-1,-4,-3,7,-9,-6,-8,-7,-8,7,-6,5,-6,-6,6,-10,-8,10,-1,1,-7,2,-6,10,-2,6,-8,3,-1,-8,-2,-4,5,6,-10,5,-5,-5,-6,9,-2,5,-5,-5,7,3,-4,-2,8,-2,-4,-6,-3,-10,-5,-8,3,6,2,-4,5,-8,4,-5,-9,-1,-5,2,9,9,-2,-1,-10,2,-8,-1,-4,1,1,10,-6,-5,-9,1,10,2,-6,-6,9,6,-6,2,8,-8,1,8,-9,8,-9,-6,8,-10,8,-1,-4,6,-6,10,2,-2,5,10,-5,4,7,3,-7,-10,-7,-3,7,-10,6,6,5,-10,-10,-6,9,8,-1,1,-4,-2,1,-3,-5,-3,3,8,9,-10,-10,-3,10,5,4,9,7,2,-7,6,10,-4,9,2,-1,7,1,-10,-3,2,5,9,1,9,8,1,-7,2,-6,-5,7,10,-4,-10,-7,8,2,-3,-1,-2,-10,-9,-7,-4,-5,1,3,-3,2,-5,4,3,1,8,2,10,-2,-10,2,-3,3,1,5,-2,-5,-8,-10,-4,10,-4,-1,-4,-5,-3,8,-4,-2,-6,8,4,7,-4,-6,2,10,6,-10,4,3,-2,5,-2,2,-4,8,-6,3,-3,-6,-2,-9,-8,7,6,-1,-2,6,-5,-2,9,-8,-4,-2,-7,2,-5,-8,-1,6,8,6,8,-4,10,-2,9,-3,3,1,-6,-1,-1,-7,-7,-10,2,7,-9,3,-8,-10,8,-9,1,-3,3,1,5,8,10,-7,3,-4,-6,2,5,2,-5,4,-2,-4,-1,9,-2,-7,5,7,-9,-10,8,-8,6,-6,-10,-9,-9,5,10,5,-1,6,-8,3,4,10,-7,-4,-8,-4,-3,1,9,-2,-10,-3,-9,6,-2,5,-4,7,-5,4,3,2,-2,8,6,10,-6,8,2,5,5,-7,4,8,-4,1,-10,-3,-3,-4,2,-9,-9,-6,-1,4,-8,2,-6,1,5,-7,-4,-9,-5,10,-9,8,5,8,4,1,2,5,-8,-7,-8,-9,-9,1,-3,1,-9,-9,-2,10,8,1,-9,-7,-5,-1,1,7,-8,3,-9,-3,-3,3,-7,5,-6,-5,-5,5,9,2,6,9,8,-5,-6,5,9,7,1,-3,-6,-6,-3,10,-5,-1,2,6,3,6,8,-9,7,6,5,7,-10,-4,-3,4,-9,-10,-4,-10,8,6,-5,-4,8,2,-1,-7,-1,-1,-7,4,-9,-6,3,-2,10,-6,3,-9,1,-8,-10,3,-8,-8,1,-9,-10,-5,-1,-1,-7,7,-8,2,-8,4,-5,-3,-3,-8,-5,-5,1,6,-9,2,6,7,-8,7,-9,-5,-8,-9,-9,7,3,-9,-4,-6,-5,-10,-10,7,3,-3,5,-1,6,5,-7,1,4,6,-8,10,3,-6,-4,10,-9,4,-2,-8,-6,-6,-3,5,-9,-5,3,2,-7,8,3,1,-2,-7,-1,-3,-8,-10,-7,10,5,-5,-3,6,-7,-1,6,-4,10,-1,6,6,4,-7,-2,-1,2,-7,4,5,2,4,2,4,-1,3,-2,3,6,9,5,-4,5,-4,-7,-2,8,4,-6,-2,-7,6,3,-5,9,6,3,5,-3,9,-9,-8,-1,-9,-3,5,5,9,-3,8,8,8,-5,-1,1,8,-5,8,-1,2,-7,5,-10,-9,-9,-5,-10,10,5,4,3,7,-8,-3,-2,-4,2,1,4,-3,7,-9,2,-4,1,6,-2,2,-7,-1,-10,10,-4,3,10,-10,5,-6,9,7,-10,3,-5,-1,2,3,-7,-3,3,1,-4,-10,10,-8,-10,8,8,-1,6,9,-6,-9,7,-5,10,4,7,-4,2,6,9,-1,3,3,-5,-9,-5,3,-2,2,4,-7,2,8,5,5,5,-2,9,10,-8,-3,7,8,-6,-5,-8,1,-6,-3,10,7,-5,6,6,6,-4,10,-6,-3,9,-3,10,7,1,-7,10,-10,4,-9,-1,8,-7,-7,7,7,7,4,-2,-5,3,-7,7,9,3,-4,4,-2,-10,-6,-10,-4,-3,-6,9,1,3,-4,5,-4,3,5,-1,10,5,-10,-9,3,3,8,-3,6,4,6,5,-2,-9,-6,3,2,4,-4,-4,-4,8,-1,-10,7,-6,5,-5,10,3,4,1,-5,-6,7,-8,7,4,9,4,10,-10,-3,-4,-1,-10,3,1,-8,7,-6,-8,-2,-2,8,6,-8,-5,-5,6,5,1,7,6,-8,1,-9,-9,-5,4,9,-3,8,9,-4,9,1,7,-1,-5,7,5,7,9,-6,-5,-2,-3,-4,-4,-1,10,-1,2,-2,-3,3,7,3,-1,-8,6,-3,-2,5,-9,-7,8,6,1,7,6,-3,9,10,7,-6,-10,3,-8,-6,-5,-6,2,-3,9,-1,1,8,2,-1,8,3,8,7,-4,-3,-7,-2,-10,-6,-6,-3,-10,10,-1,-2,-10,-4,-1,-4,-6,-4,5,-4,10,1,-6,2,5,10,2,-4,9,1,-9,-4,2,-9,-1,-10,-6,6,5,-10,1,8,-3,6,-8,-1,1,-5,-3,-8,9,7,10,7,-3,-8,8,8,6,-3,-2,-3,-2,-6,3,1,-3,-9,-4,-8,3,3,-10,3,6,2,2,1,-6,-9,2,-2,10,7,8,-5,1,-4,-9,-9,-3,-5,8,9,4,2,-9,10,-8,7,4,10,-10,-6,-9,5,8,7,7,-8,5,6,6,5,-5,-1,6,2,-6,-4,5,-9,1,-9,-3,9,8,-3,-1,10,3,-5,-5,-5,-7,-5,10,7,9,2,-10,-1,-8,5,-3,5,8,-4,-7,3,-8,8,2,1,-9,5,-6,10,-9,3,-9,7,-10,-10,10,5,-4,7,-8,7,-3,-9,-7,3,5,9,6,-3,8,7,9,-5,-3,-8,1,10,-8,-3,1,4,-3,2,-8,8,-2,-6,-7,3,5,2,-7,-2,-3,-3,-2,-10,9,-6,1,-4,9,4,-3,7,-6,-6,1,-1,2,9,-10,-10,-3,9,8,-6,5,4,-5,-6,10,-8,-9,-7,3,-6,5,6,-10,-3,-8,7,9,3,-4,8,2,-7,5,3,-10,-4,3,-4,-5,-3,-5,8,6,9,2,-4,-3,7,-4,7,9,8,1,7,10,1,-2,1,-2,-8,8,-3,2,1,10,8,3,-3,10,2,-2,5,-2,4,9,-2,-1,-9,3,-8,2,-4,6,9,9,-5,-4,5,-7,2,10,-4,-9,5,-5,-6,-1,-1,-10,-2,-2,10,-7,4,5,-1,-1,5,8,-1,2,-1,10,1,-2,6,10,-10,2,-3,9,9,1,-10,-3,3,8,10,3,5,4,9,-9,3,4,-8,1,3,-3,-10,-3,4,6,9,-7,7,10,-7,9,-2,-5,-6,-10,-8,-3,9,-3,9,-9,1,5,-7,-7,3,4,7,-6,6,3,8,2,3,-10,-7,1,3,7,10,-6,-8,-8,2,9,1,3,9,7,-3,4,-6,-7,2,10,-5,-5,-1,-1,1,10,-3,5,8,-4,9,-10,-7,-5,-10,1,3,10,2,-6,1,-9,1,-6,6,-2,2,-1,9,-5,10,4,-5,7,6,-2,-1,3,5,-1,-1,-5,4,-1,-9,-2,4,4,2,7,-7,9,2,-10,-3,-5,3,-9,-3,10,7,-2,-9,10,-8,-1,10,2,10,-6,-10,-7,-10,-10,7,8,3,4,-6,3,-3,-8,-2,4,10,-7,10,5,-2,-6,6,-10,-2,1,1,2,10,-7,-10,-6,-1,-5,9,-3,-7,-8,1,-2,-4,-2,10,-9,4,3,-6,-6,-4,-8,-1,3,-9,10,1,-4,-6,-10,-2,7,4,2,2,9,-1,8,9,1,-2,-8,3,-8,10,-7,8,8,7,3,10,-5,8,-4,-3,-5,-3,10,6,-7,7,-9,-2,-6,-9,-6,3,-9,-5,10,-5,4,9,-8,-3,1,10,6,9,9,-3,4,-8,-8,7,2,-2,-1,-4,6,-3,9,9,5,1,5,-3,-1,3,8,5,3,8,-8,3,2,-1,1,-8,9,4,-3,-4,-10,2,-6,-7,4,-2,-8,6,-5,10,-8,-4,-8,-10,5,-5,-10,10,6,4,-3,-2,-3,2,7,6,4,4,-8,3,8,-8,-5,-6,-8,-10,-9,5,-3,2,10,-7,7,6,-6,1,-7,4,-9,-10,3,9,4,-3,-10,-9,4,7,-5,-9,2,-7,-10,8,1,10,9,5,-3,2,-7,6,-5,3,5,-3,3,-3,-2,4,-10,9,-4,-7,-5,2,8,-1,10,4], dtype = "uint32")#candidate|2767|(2925,)|const|uint32
bop_2768 = relay.add(const_2758.astype('float32'), relay.reshape(const_2767.astype('float32'), relay.shape_of(const_2758))) # shape=(2925,)
bop_2773 = relay.right_shift(const_2767.astype('uint16'), relay.reshape(bop_2768.astype('uint16'), relay.shape_of(const_2767))) # shape=(2925,)
func_2171_call = mod.get_global_var('func_2171')
func_2174_call = mutated_mod.get_global_var('func_2174')
const_2778 = relay.const(9, dtype = "uint32")#candidate|2778|()|const|uint32
call_2777 = relay.TupleGetItem(func_2171_call(relay.reshape(call_2757.astype('float32'), [14, 7, 14]), relay.reshape(const_2778.astype('uint32'), []), ), 2)
call_2779 = relay.TupleGetItem(func_2174_call(relay.reshape(call_2757.astype('float32'), [14, 7, 14]), relay.reshape(const_2778.astype('uint32'), []), ), 2)
output = relay.Tuple([call_2755,call_2757,bop_2773,call_2777,const_2778,])
output2 = relay.Tuple([call_2756,call_2759,bop_2773,call_2779,const_2778,])
func_2783 = relay.Function([], output)
mod['func_2783'] = func_2783
mod = relay.transform.InferType()(mod)
mutated_mod['func_2783'] = func_2783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2783_call = mutated_mod.get_global_var('func_2783')
call_2784 = func_2783_call()
output = call_2784
func_2785 = relay.Function([], output)
mutated_mod['func_2785'] = func_2785
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2824 = relay.var("var_2824", dtype = "float32", shape = (4, 5, 11))#candidate|2824|(4, 5, 11)|var|float32
uop_2825 = relay.exp(var_2824.astype('float32')) # shape=(4, 5, 11)
output = relay.Tuple([uop_2825,])
output2 = relay.Tuple([uop_2825,])
func_2833 = relay.Function([var_2824,], output)
mod['func_2833'] = func_2833
mod = relay.transform.InferType()(mod)
mutated_mod['func_2833'] = func_2833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2834 = relay.var("var_2834", dtype = "float32", shape = (4, 5, 11))#candidate|2834|(4, 5, 11)|var|float32
func_2833_call = mutated_mod.get_global_var('func_2833')
call_2835 = func_2833_call(var_2834)
output = call_2835
func_2836 = relay.Function([var_2834], output)
mutated_mod['func_2836'] = func_2836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2783_call = mod.get_global_var('func_2783')
func_2785_call = mutated_mod.get_global_var('func_2785')
call_2838 = relay.TupleGetItem(func_2783_call(), 2)
call_2839 = relay.TupleGetItem(func_2785_call(), 2)
uop_2846 = relay.rsqrt(call_2838.astype('float64')) # shape=(2925,)
uop_2848 = relay.rsqrt(call_2839.astype('float64')) # shape=(2925,)
output = relay.Tuple([uop_2846,])
output2 = relay.Tuple([uop_2848,])
func_2853 = relay.Function([], output)
mod['func_2853'] = func_2853
mod = relay.transform.InferType()(mod)
mutated_mod['func_2853'] = func_2853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2853_call = mutated_mod.get_global_var('func_2853')
call_2854 = func_2853_call()
output = call_2854
func_2855 = relay.Function([], output)
mutated_mod['func_2855'] = func_2855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_2896 = relay.TupleGetItem(func_2289_call(), 0)
call_2897 = relay.TupleGetItem(func_2290_call(), 0)
func_1387_call = mod.get_global_var('func_1387')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_2902 = relay.TupleGetItem(func_1387_call(), 0)
call_2903 = relay.TupleGetItem(func_1388_call(), 0)
var_2912 = relay.var("var_2912", dtype = "float32", shape = (14, 7, 14))#candidate|2912|(14, 7, 14)|var|float32
bop_2913 = relay.multiply(call_2902.astype('float64'), relay.reshape(var_2912.astype('float64'), relay.shape_of(call_2902))) # shape=(14, 7, 14)
bop_2916 = relay.multiply(call_2903.astype('float64'), relay.reshape(var_2912.astype('float64'), relay.shape_of(call_2903))) # shape=(14, 7, 14)
func_2171_call = mod.get_global_var('func_2171')
func_2174_call = mutated_mod.get_global_var('func_2174')
var_2929 = relay.var("var_2929", dtype = "uint32", shape = ())#candidate|2929|()|var|uint32
call_2928 = relay.TupleGetItem(func_2171_call(relay.reshape(call_2896.astype('float32'), [14, 7, 14]), relay.reshape(var_2929.astype('uint32'), []), ), 2)
call_2930 = relay.TupleGetItem(func_2174_call(relay.reshape(call_2896.astype('float32'), [14, 7, 14]), relay.reshape(var_2929.astype('uint32'), []), ), 2)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_2944 = relay.TupleGetItem(func_1645_call(relay.reshape(call_2928.astype('uint64'), [])), 2)
call_2945 = relay.TupleGetItem(func_1647_call(relay.reshape(call_2928.astype('uint64'), [])), 2)
output = relay.Tuple([call_2896,bop_2913,call_2928,var_2929,call_2944,])
output2 = relay.Tuple([call_2897,bop_2916,call_2930,var_2929,call_2945,])
func_2947 = relay.Function([var_2912,var_2929,], output)
mod['func_2947'] = func_2947
mod = relay.transform.InferType()(mod)
mutated_mod['func_2947'] = func_2947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2947_call = mutated_mod.get_global_var('func_2947')
var_2949 = relay.var("var_2949", dtype = "float32", shape = (14, 7, 14))#candidate|2949|(14, 7, 14)|var|float32
var_2950 = relay.var("var_2950", dtype = "uint32", shape = ())#candidate|2950|()|var|uint32
call_2948 = func_2947_call(var_2949,var_2950,)
output = call_2948
func_2951 = relay.Function([var_2949,var_2950,], output)
mutated_mod['func_2951'] = func_2951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2783_call = mod.get_global_var('func_2783')
func_2785_call = mutated_mod.get_global_var('func_2785')
call_3000 = relay.TupleGetItem(func_2783_call(), 4)
call_3001 = relay.TupleGetItem(func_2785_call(), 4)
output = call_3000
output2 = call_3001
func_3002 = relay.Function([], output)
mod['func_3002'] = func_3002
mod = relay.transform.InferType()(mod)
output = func_3002()
func_3003 = relay.Function([], output)
mutated_mod['func_3003'] = func_3003
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3008 = relay.var("var_3008", dtype = "float32", shape = (1, 2, 4))#candidate|3008|(1, 2, 4)|var|float32
var_3009 = relay.var("var_3009", dtype = "float32", shape = (3, 2, 4))#candidate|3009|(3, 2, 4)|var|float32
bop_3010 = relay.mod(var_3008.astype('float32'), var_3009.astype('float32')) # shape=(3, 2, 4)
output = bop_3010
output2 = bop_3010
func_3013 = relay.Function([var_3008,var_3009,], output)
mod['func_3013'] = func_3013
mod = relay.transform.InferType()(mod)
var_3014 = relay.var("var_3014", dtype = "float32", shape = (1, 2, 4))#candidate|3014|(1, 2, 4)|var|float32
var_3015 = relay.var("var_3015", dtype = "float32", shape = (3, 2, 4))#candidate|3015|(3, 2, 4)|var|float32
output = func_3013(var_3014,var_3015,)
func_3016 = relay.Function([var_3014,var_3015,], output)
mutated_mod['func_3016'] = func_3016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_951_call = mod.get_global_var('func_951')
func_953_call = mutated_mod.get_global_var('func_953')
call_3030 = func_951_call()
call_3031 = func_951_call()
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
call_3073 = relay.TupleGetItem(func_2853_call(), 0)
call_3074 = relay.TupleGetItem(func_2855_call(), 0)
func_349_call = mod.get_global_var('func_349')
func_353_call = mutated_mod.get_global_var('func_353')
var_3079 = relay.var("var_3079", dtype = "uint16", shape = (65, 15))#candidate|3079|(65, 15)|var|uint16
call_3078 = relay.TupleGetItem(func_349_call(relay.reshape(var_3079.astype('uint16'), [15, 13, 5]), relay.reshape(var_3079.astype('uint16'), [15, 13, 5]), ), 2)
call_3080 = relay.TupleGetItem(func_353_call(relay.reshape(var_3079.astype('uint16'), [15, 13, 5]), relay.reshape(var_3079.astype('uint16'), [15, 13, 5]), ), 2)
func_3013_call = mod.get_global_var('func_3013')
func_3016_call = mutated_mod.get_global_var('func_3016')
const_3092 = relay.const([0.177494,2.018383,9.081977,4.125853,8.358484,-0.757755,6.985037,3.567146], dtype = "float32")#candidate|3092|(8,)|const|float32
var_3093 = relay.var("var_3093", dtype = "float32", shape = (2, 12))#candidate|3093|(2, 12)|var|float32
call_3091 = func_3013_call(relay.reshape(const_3092.astype('float32'), [1, 2, 4]), relay.reshape(var_3093.astype('float32'), [3, 2, 4]), )
call_3094 = func_3013_call(relay.reshape(const_3092.astype('float32'), [1, 2, 4]), relay.reshape(var_3093.astype('float32'), [3, 2, 4]), )
output = relay.Tuple([call_3030,call_3073,call_3078,var_3079,call_3091,const_3092,var_3093,])
output2 = relay.Tuple([call_3031,call_3074,call_3080,var_3079,call_3094,const_3092,var_3093,])
func_3108 = relay.Function([var_3079,var_3093,], output)
mod['func_3108'] = func_3108
mod = relay.transform.InferType()(mod)
mutated_mod['func_3108'] = func_3108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3108_call = mutated_mod.get_global_var('func_3108')
var_3110 = relay.var("var_3110", dtype = "uint16", shape = (65, 15))#candidate|3110|(65, 15)|var|uint16
var_3111 = relay.var("var_3111", dtype = "float32", shape = (2, 12))#candidate|3111|(2, 12)|var|float32
call_3109 = func_3108_call(var_3110,var_3111,)
output = call_3109
func_3112 = relay.Function([var_3110,var_3111,], output)
mutated_mod['func_3112'] = func_3112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3002_call = mod.get_global_var('func_3002')
func_3003_call = mutated_mod.get_global_var('func_3003')
call_3157 = func_3002_call()
call_3158 = func_3002_call()
func_3002_call = mod.get_global_var('func_3002')
func_3003_call = mutated_mod.get_global_var('func_3003')
call_3171 = func_3002_call()
call_3172 = func_3002_call()
func_951_call = mod.get_global_var('func_951')
func_953_call = mutated_mod.get_global_var('func_953')
call_3176 = func_951_call()
call_3177 = func_951_call()
var_3196 = relay.var("var_3196", dtype = "uint32", shape = (8, 1, 6))#candidate|3196|(8, 1, 6)|var|uint32
bop_3197 = relay.bitwise_or(call_3157.astype('int16'), var_3196.astype('int16')) # shape=(8, 1, 6)
bop_3200 = relay.bitwise_or(call_3158.astype('int16'), var_3196.astype('int16')) # shape=(8, 1, 6)
bop_3202 = relay.divide(bop_3197.astype('float64'), call_3157.astype('float64')) # shape=(8, 1, 6)
bop_3205 = relay.divide(bop_3200.astype('float64'), call_3158.astype('float64')) # shape=(8, 1, 6)
uop_3206 = relay.atan(var_3196.astype('float32')) # shape=(8, 1, 6)
bop_3210 = relay.not_equal(uop_3206.astype('bool'), relay.reshape(bop_3197.astype('bool'), relay.shape_of(uop_3206))) # shape=(8, 1, 6)
bop_3213 = relay.not_equal(uop_3206.astype('bool'), relay.reshape(bop_3200.astype('bool'), relay.shape_of(uop_3206))) # shape=(8, 1, 6)
const_3218 = relay.const([[[-9.684017,-3.739921,-3.075611,-5.302014,3.786018,-6.247059],[8.840482,8.873725,0.636524,7.180499,-5.268828,-6.894324],[1.867698,3.764910,3.307655,0.937650,0.287197,-0.316669],[1.280162,6.217327,5.303875,7.387206,-2.113401,6.403871],[-0.045460,9.495295,-3.405103,2.422693,8.305481,-6.613950],[8.811562,-3.238072,-4.353905,-1.482931,-2.838686,-8.585190],[-1.491851,-1.022442,0.489626,-6.477221,-1.930623,-4.423053],[-3.223351,3.183276,-8.757329,-5.511592,1.060697,5.239102],[5.820555,6.150105,2.473232,8.522127,5.626032,-6.542906],[-9.413117,-5.530578,-2.168787,8.653332,-0.521470,5.785665],[9.833173,-1.518670,-5.868342,-0.225734,-3.238578,9.419417],[7.016769,0.347468,6.738001,8.691152,-7.123657,-8.626347],[5.364350,0.564505,-7.813510,-6.574196,7.051351,-2.042542]],[[-1.420574,8.973822,2.393339,-1.325076,-0.951799,5.818103],[-7.585308,1.574873,1.826299,6.876490,3.300677,-1.491953],[1.860858,7.090598,-9.294249,0.347893,-5.746229,0.484367],[7.550653,3.784178,5.351721,3.624562,6.612988,-5.579669],[9.993794,1.211420,9.202662,-5.250263,1.029461,1.082417],[-2.397410,-1.659716,0.409251,-1.763157,-2.927825,-3.516071],[-5.682015,5.424236,-7.118920,-7.390292,4.799477,4.391342],[-3.614032,-8.230087,8.624754,5.006883,-2.264882,3.181447],[8.893684,-9.124309,6.187947,2.173575,2.366946,1.991494],[-8.697436,0.285111,-6.327542,-5.376412,-7.357301,-7.133009],[-5.646892,6.050040,8.264427,8.496038,-2.746393,-7.153798],[-6.814477,-3.358556,-6.142023,-8.534064,7.768521,0.980406],[-5.875390,-2.853320,-2.259961,-4.996680,-2.278120,3.126276]],[[-5.203708,-2.298301,-4.985792,-4.258524,-6.160613,-5.332910],[6.383603,-5.500674,-5.053102,-3.457543,1.019582,-6.067915],[9.531804,0.818181,-1.781894,6.184146,3.477124,-2.049617],[2.906532,-4.522113,9.140952,-3.568204,3.272567,6.450358],[-4.608104,-2.985566,6.323349,9.598760,-9.146598,-6.434076],[7.576609,2.251825,-2.629548,3.079215,4.958334,6.627700],[-9.079538,3.125492,-2.657803,-7.175838,-7.270439,6.701729],[9.346823,-8.249858,4.814309,-1.546931,-6.529676,9.207374],[2.076271,-2.230061,-0.726963,0.327184,-0.301010,6.531307],[-2.788499,8.621457,-9.805411,-0.317669,-5.770504,1.919638],[2.149038,-6.472154,-9.820470,-5.634172,-9.771859,-6.120333],[0.648448,-0.476664,-5.519448,-1.266623,1.342514,4.064648],[-9.013282,0.976014,-5.195751,-9.240110,-8.166217,7.395266]],[[-3.329629,0.989279,5.612839,-3.178891,3.542901,-5.770959],[-5.096955,-7.831243,-2.342896,7.408532,1.988828,5.851810],[-4.700835,-9.393042,5.088868,4.856004,9.751807,-7.395312],[-2.439762,3.732187,1.905557,0.465170,9.532040,4.915454],[0.460185,-8.388479,8.048830,-3.777226,-2.834805,7.291037],[-2.165942,3.825629,7.288025,-9.085342,-3.910364,3.487059],[8.694669,6.401888,2.448452,7.742863,-2.388576,0.246099],[6.639461,5.084206,-4.043862,1.362906,3.115158,9.144325],[5.623948,-0.660042,8.205272,1.300747,-9.887850,1.876800],[-1.136486,-2.989378,3.003274,-3.451241,5.777597,-7.692532],[-8.478208,-5.454940,-4.251923,-9.705940,-9.888819,-9.557967],[1.689850,-2.516499,-7.631677,8.173327,-3.532338,2.234151],[7.282761,0.322785,5.160515,2.150993,5.227211,7.560633]],[[7.894482,3.249097,-7.382016,2.414728,-6.912522,4.255640],[-2.960994,0.669791,-2.956629,-3.431917,-6.751274,-3.427887],[5.254020,-0.100702,-5.722595,-3.079974,5.363777,8.481308],[4.628531,3.576926,-1.959780,0.489470,3.908626,-6.691955],[4.490222,-0.788207,-5.844664,-9.930097,-3.724044,-6.593442],[-6.033370,-3.235324,1.263269,-1.679518,-9.894893,-3.983933],[-2.315058,7.441415,-1.787524,-7.713905,-0.592044,5.158239],[3.157817,-2.425158,-4.844876,-8.207386,-4.850739,0.482884],[-2.384896,-4.369677,4.865189,-7.832984,-8.868934,-5.298416],[7.350960,8.127757,9.150062,-7.160114,-0.157164,-4.678896],[8.950332,3.549542,0.569712,5.832882,-8.147955,-3.167534],[-5.255519,-8.964108,0.672030,5.173796,2.182670,-9.865970],[-6.011477,9.503112,-9.413170,0.858192,9.559449,4.651184]],[[3.439822,-8.048234,-3.106353,-4.824465,5.593026,-0.138470],[9.556190,7.041955,-9.740082,0.424013,-7.887541,2.118227],[-9.179582,3.514104,0.416249,-7.222874,4.927994,0.937696],[2.722368,8.308210,-7.452584,4.997477,8.313768,-7.061527],[2.576926,-9.384664,-2.893704,-6.437427,8.290627,-4.768211],[-8.168464,2.226023,-9.208814,7.599143,-1.886495,-1.094282],[-7.779760,-9.140762,1.248551,1.323682,-7.066852,-8.879712],[7.137565,2.659893,-6.417693,-2.147791,-9.308796,3.247077],[-1.623321,4.618226,0.959001,6.189163,7.364250,9.439346],[-6.413006,6.529752,3.769709,3.838451,-6.613373,2.051104],[6.704156,9.350735,8.368842,-1.453032,-3.451365,9.868511],[6.147412,1.014933,-3.538216,9.469463,-0.952127,-5.402473],[8.786010,-6.924230,-2.538342,-5.894338,4.626921,-9.174533]],[[-7.719754,-5.093302,-1.094051,-6.424697,-1.518789,-5.163338],[1.292625,0.497462,4.132118,5.630537,-6.315744,-9.421073],[3.430889,-6.414882,5.621621,6.288062,6.342880,-5.795372],[5.307684,4.123636,-8.204739,7.163702,-8.482629,6.257440],[-5.993474,-7.412535,4.620433,4.179405,1.980499,5.257613],[-2.698731,3.278731,2.712243,2.156579,-7.225938,-6.276893],[3.504423,-3.166973,5.708781,3.289138,-1.497923,-4.521737],[-6.635227,-4.825477,1.511560,-2.550387,6.555211,4.523247],[7.646825,1.986274,7.998353,1.488007,5.310318,-5.865765],[5.358926,-7.843896,8.876312,3.918958,3.746592,-8.345053],[-3.512541,-7.537917,-6.063018,-5.825308,9.716564,7.405961],[8.260908,9.868905,7.175620,9.788819,5.453769,-3.449820],[-8.650013,-2.756695,-6.675958,-0.857536,-1.401156,-4.296943]],[[-4.880065,-3.386430,-7.201825,7.782536,-1.489403,2.653121],[-6.727068,4.264177,-7.217735,5.267961,0.389419,-6.046017],[-5.097396,-7.211791,-0.681197,5.001305,9.798202,-1.816911],[6.421875,-5.256679,-3.730266,6.578436,-2.413341,-8.089523],[4.146733,-4.720134,6.811096,-6.276780,6.540887,-1.180411],[8.667250,5.082229,-7.082769,-5.501756,5.524022,7.468723],[-8.961575,-4.636981,8.884947,-6.849227,-2.260011,-7.945172],[2.763293,3.988581,1.825302,-4.256615,4.417841,-9.108735],[0.186610,-3.499849,6.413257,-4.903089,-9.649411,-1.198457],[5.438455,-4.681195,1.987105,-7.352244,8.976167,-4.044924],[0.228963,9.972683,-8.695716,-2.285486,2.025736,-1.446109],[2.637361,-5.470873,0.321069,7.275977,1.660106,9.542196],[-1.462147,-9.232157,8.023637,5.517017,1.304561,-8.846148]]], dtype = "float64")#candidate|3218|(8, 13, 6)|const|float64
bop_3219 = relay.bitwise_or(bop_3202.astype('int32'), const_3218.astype('int32')) # shape=(8, 13, 6)
bop_3222 = relay.bitwise_or(bop_3205.astype('int32'), const_3218.astype('int32')) # shape=(8, 13, 6)
uop_3231 = relay.cosh(bop_3210.astype('float64')) # shape=(8, 1, 6)
uop_3233 = relay.cosh(bop_3213.astype('float64')) # shape=(8, 1, 6)
output = relay.Tuple([call_3171,call_3176,bop_3219,uop_3231,])
output2 = relay.Tuple([call_3172,call_3177,bop_3222,uop_3233,])
func_3234 = relay.Function([var_3196,], output)
mod['func_3234'] = func_3234
mod = relay.transform.InferType()(mod)
mutated_mod['func_3234'] = func_3234
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3235 = relay.var("var_3235", dtype = "uint32", shape = (8, 1, 6))#candidate|3235|(8, 1, 6)|var|uint32
func_3234_call = mutated_mod.get_global_var('func_3234')
call_3236 = func_3234_call(var_3235)
output = call_3236
func_3237 = relay.Function([var_3235], output)
mutated_mod['func_3237'] = func_3237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_3288 = relay.TupleGetItem(func_2289_call(), 0)
call_3289 = relay.TupleGetItem(func_2290_call(), 0)
output = relay.Tuple([call_3288,])
output2 = relay.Tuple([call_3289,])
func_3291 = relay.Function([], output)
mod['func_3291'] = func_3291
mod = relay.transform.InferType()(mod)
output = func_3291()
func_3292 = relay.Function([], output)
mutated_mod['func_3292'] = func_3292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1169_call = mod.get_global_var('func_1169')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_3338 = relay.TupleGetItem(func_1169_call(), 0)
call_3339 = relay.TupleGetItem(func_1171_call(), 0)
uop_3353 = relay.asinh(call_3338.astype('float64')) # shape=(14, 7, 14)
uop_3355 = relay.asinh(call_3339.astype('float64')) # shape=(14, 7, 14)
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
call_3360 = relay.TupleGetItem(func_2853_call(), 0)
call_3361 = relay.TupleGetItem(func_2855_call(), 0)
func_2593_call = mod.get_global_var('func_2593')
func_2596_call = mutated_mod.get_global_var('func_2596')
const_3374 = relay.const([[9],[5],[-4],[-3],[-6],[-10],[-7],[-3],[-1]], dtype = "uint32")#candidate|3374|(9, 1)|const|uint32
call_3373 = relay.TupleGetItem(func_2593_call(relay.reshape(uop_3353.astype('float32'), [1372,]), relay.reshape(const_3374.astype('uint32'), [1, 9, 1]), ), 2)
call_3375 = relay.TupleGetItem(func_2596_call(relay.reshape(uop_3353.astype('float32'), [1372,]), relay.reshape(const_3374.astype('uint32'), [1, 9, 1]), ), 2)
output = relay.Tuple([uop_3353,call_3360,call_3373,const_3374,])
output2 = relay.Tuple([uop_3355,call_3361,call_3375,const_3374,])
func_3377 = relay.Function([], output)
mod['func_3377'] = func_3377
mod = relay.transform.InferType()(mod)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3377_call = mutated_mod.get_global_var('func_3377')
call_3378 = func_3377_call()
output = call_3378
func_3379 = relay.Function([], output)
mutated_mod['func_3379'] = func_3379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3427 = relay.var("var_3427", dtype = "float32", shape = (4, 6, 5))#candidate|3427|(4, 6, 5)|var|float32
uop_3428 = relay.atan(var_3427.astype('float32')) # shape=(4, 6, 5)
func_2783_call = mod.get_global_var('func_2783')
func_2785_call = mutated_mod.get_global_var('func_2785')
call_3433 = relay.TupleGetItem(func_2783_call(), 1)
call_3434 = relay.TupleGetItem(func_2785_call(), 1)
func_799_call = mod.get_global_var('func_799')
func_802_call = mutated_mod.get_global_var('func_802')
var_3438 = relay.var("var_3438", dtype = "uint32", shape = ())#candidate|3438|()|var|uint32
call_3437 = relay.TupleGetItem(func_799_call(relay.reshape(var_3438.astype('uint32'), [])), 1)
call_3439 = relay.TupleGetItem(func_802_call(relay.reshape(var_3438.astype('uint32'), [])), 1)
output = relay.Tuple([uop_3428,call_3433,call_3437,var_3438,])
output2 = relay.Tuple([uop_3428,call_3434,call_3439,var_3438,])
func_3443 = relay.Function([var_3427,var_3438,], output)
mod['func_3443'] = func_3443
mod = relay.transform.InferType()(mod)
var_3444 = relay.var("var_3444", dtype = "float32", shape = (4, 6, 5))#candidate|3444|(4, 6, 5)|var|float32
var_3445 = relay.var("var_3445", dtype = "uint32", shape = ())#candidate|3445|()|var|uint32
output = func_3443(var_3444,var_3445,)
func_3446 = relay.Function([var_3444,var_3445,], output)
mutated_mod['func_3446'] = func_3446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1387_call = mod.get_global_var('func_1387')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_3456 = relay.TupleGetItem(func_1387_call(), 0)
call_3457 = relay.TupleGetItem(func_1388_call(), 0)
output = relay.Tuple([call_3456,])
output2 = relay.Tuple([call_3457,])
func_3461 = relay.Function([], output)
mod['func_3461'] = func_3461
mod = relay.transform.InferType()(mod)
output = func_3461()
func_3462 = relay.Function([], output)
mutated_mod['func_3462'] = func_3462
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3467 = relay.var("var_3467", dtype = "float64", shape = (15, 15, 15))#candidate|3467|(15, 15, 15)|var|float64
uop_3468 = relay.tan(var_3467.astype('float64')) # shape=(15, 15, 15)
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
call_3483 = relay.TupleGetItem(func_2853_call(), 0)
call_3484 = relay.TupleGetItem(func_2855_call(), 0)
uop_3486 = relay.asin(var_3467.astype('float64')) # shape=(15, 15, 15)
output = relay.Tuple([uop_3468,call_3483,uop_3486,])
output2 = relay.Tuple([uop_3468,call_3484,uop_3486,])
func_3492 = relay.Function([var_3467,], output)
mod['func_3492'] = func_3492
mod = relay.transform.InferType()(mod)
var_3493 = relay.var("var_3493", dtype = "float64", shape = (15, 15, 15))#candidate|3493|(15, 15, 15)|var|float64
output = func_3492(var_3493)
func_3494 = relay.Function([var_3493], output)
mutated_mod['func_3494'] = func_3494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_548_call = mod.get_global_var('func_548')
func_550_call = mutated_mod.get_global_var('func_550')
call_3505 = relay.TupleGetItem(func_548_call(), 1)
call_3506 = relay.TupleGetItem(func_550_call(), 1)
func_1169_call = mod.get_global_var('func_1169')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_3514 = relay.TupleGetItem(func_1169_call(), 0)
call_3515 = relay.TupleGetItem(func_1171_call(), 0)
bop_3529 = relay.floor_mod(call_3505.astype('float32'), relay.reshape(call_3514.astype('float32'), relay.shape_of(call_3505))) # shape=(14, 7, 14)
bop_3532 = relay.floor_mod(call_3506.astype('float32'), relay.reshape(call_3515.astype('float32'), relay.shape_of(call_3506))) # shape=(14, 7, 14)
bop_3533 = relay.less_equal(bop_3529.astype('bool'), relay.reshape(call_3505.astype('bool'), relay.shape_of(bop_3529))) # shape=(14, 7, 14)
bop_3536 = relay.less_equal(bop_3532.astype('bool'), relay.reshape(call_3506.astype('bool'), relay.shape_of(bop_3532))) # shape=(14, 7, 14)
func_3377_call = mod.get_global_var('func_3377')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_3539 = relay.TupleGetItem(func_3377_call(), 3)
call_3540 = relay.TupleGetItem(func_3379_call(), 3)
output = relay.Tuple([bop_3533,call_3539,])
output2 = relay.Tuple([bop_3536,call_3540,])
func_3545 = relay.Function([], output)
mod['func_3545'] = func_3545
mod = relay.transform.InferType()(mod)
output = func_3545()
func_3546 = relay.Function([], output)
mutated_mod['func_3546'] = func_3546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3593 = relay.var("var_3593", dtype = "bool", shape = (4, 14, 9))#candidate|3593|(4, 14, 9)|var|bool
var_3594 = relay.var("var_3594", dtype = "bool", shape = (4, 14, 9))#candidate|3594|(4, 14, 9)|var|bool
bop_3595 = relay.logical_or(var_3593.astype('bool'), relay.reshape(var_3594.astype('bool'), relay.shape_of(var_3593))) # shape=(4, 14, 9)
output = bop_3595
output2 = bop_3595
func_3603 = relay.Function([var_3593,var_3594,], output)
mod['func_3603'] = func_3603
mod = relay.transform.InferType()(mod)
var_3604 = relay.var("var_3604", dtype = "bool", shape = (4, 14, 9))#candidate|3604|(4, 14, 9)|var|bool
var_3605 = relay.var("var_3605", dtype = "bool", shape = (4, 14, 9))#candidate|3605|(4, 14, 9)|var|bool
output = func_3603(var_3604,var_3605,)
func_3606 = relay.Function([var_3604,var_3605,], output)
mutated_mod['func_3606'] = func_3606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
call_3736 = relay.TupleGetItem(func_2853_call(), 0)
call_3737 = relay.TupleGetItem(func_2855_call(), 0)
output = relay.Tuple([call_3736,])
output2 = relay.Tuple([call_3737,])
func_3742 = relay.Function([], output)
mod['func_3742'] = func_3742
mod = relay.transform.InferType()(mod)
output = func_3742()
func_3743 = relay.Function([], output)
mutated_mod['func_3743'] = func_3743
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3764 = relay.var("var_3764", dtype = "float64", shape = (7, 14, 8))#candidate|3764|(7, 14, 8)|var|float64
uop_3765 = relay.acosh(var_3764.astype('float64')) # shape=(7, 14, 8)
output = relay.Tuple([uop_3765,])
output2 = relay.Tuple([uop_3765,])
func_3768 = relay.Function([var_3764,], output)
mod['func_3768'] = func_3768
mod = relay.transform.InferType()(mod)
mutated_mod['func_3768'] = func_3768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3769 = relay.var("var_3769", dtype = "float64", shape = (7, 14, 8))#candidate|3769|(7, 14, 8)|var|float64
func_3768_call = mutated_mod.get_global_var('func_3768')
call_3770 = func_3768_call(var_3769)
output = call_3770
func_3771 = relay.Function([var_3769], output)
mutated_mod['func_3771'] = func_3771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_951_call = mod.get_global_var('func_951')
func_953_call = mutated_mod.get_global_var('func_953')
call_3784 = func_951_call()
call_3785 = func_951_call()
uop_3812 = relay.atanh(call_3784.astype('float32')) # shape=(14, 7, 14)
uop_3814 = relay.atanh(call_3785.astype('float32')) # shape=(14, 7, 14)
func_722_call = mod.get_global_var('func_722')
func_724_call = mutated_mod.get_global_var('func_724')
var_3818 = relay.var("var_3818", dtype = "uint32", shape = ())#candidate|3818|()|var|uint32
call_3817 = relay.TupleGetItem(func_722_call(relay.reshape(var_3818.astype('uint32'), [])), 0)
call_3819 = relay.TupleGetItem(func_724_call(relay.reshape(var_3818.astype('uint32'), [])), 0)
output = relay.Tuple([uop_3812,call_3817,var_3818,])
output2 = relay.Tuple([uop_3814,call_3819,var_3818,])
func_3825 = relay.Function([var_3818,], output)
mod['func_3825'] = func_3825
mod = relay.transform.InferType()(mod)
mutated_mod['func_3825'] = func_3825
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3826 = relay.var("var_3826", dtype = "uint32", shape = ())#candidate|3826|()|var|uint32
func_3825_call = mutated_mod.get_global_var('func_3825')
call_3827 = func_3825_call(var_3826)
output = call_3827
func_3828 = relay.Function([var_3826], output)
mutated_mod['func_3828'] = func_3828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_3843 = relay.TupleGetItem(func_3291_call(), 0)
call_3844 = relay.TupleGetItem(func_3292_call(), 0)
func_2171_call = mod.get_global_var('func_2171')
func_2174_call = mutated_mod.get_global_var('func_2174')
var_3846 = relay.var("var_3846", dtype = "uint32", shape = ())#candidate|3846|()|var|uint32
call_3845 = relay.TupleGetItem(func_2171_call(relay.reshape(call_3843.astype('float32'), [14, 7, 14]), relay.reshape(var_3846.astype('uint32'), []), ), 0)
call_3847 = relay.TupleGetItem(func_2174_call(relay.reshape(call_3843.astype('float32'), [14, 7, 14]), relay.reshape(var_3846.astype('uint32'), []), ), 0)
func_3492_call = mod.get_global_var('func_3492')
func_3494_call = mutated_mod.get_global_var('func_3494')
var_3849 = relay.var("var_3849", dtype = "float64", shape = (225, 15))#candidate|3849|(225, 15)|var|float64
call_3848 = relay.TupleGetItem(func_3492_call(relay.reshape(var_3849.astype('float64'), [15, 15, 15])), 0)
call_3850 = relay.TupleGetItem(func_3494_call(relay.reshape(var_3849.astype('float64'), [15, 15, 15])), 0)
func_3013_call = mod.get_global_var('func_3013')
func_3016_call = mutated_mod.get_global_var('func_3016')
var_3865 = relay.var("var_3865", dtype = "float32", shape = (2, 4))#candidate|3865|(2, 4)|var|float32
var_3866 = relay.var("var_3866", dtype = "float32", shape = (24, 1))#candidate|3866|(24, 1)|var|float32
call_3864 = func_3013_call(relay.reshape(var_3865.astype('float32'), [1, 2, 4]), relay.reshape(var_3866.astype('float32'), [3, 2, 4]), )
call_3867 = func_3013_call(relay.reshape(var_3865.astype('float32'), [1, 2, 4]), relay.reshape(var_3866.astype('float32'), [3, 2, 4]), )
func_2555_call = mod.get_global_var('func_2555')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_3869 = func_2555_call()
call_3870 = func_2555_call()
func_2593_call = mod.get_global_var('func_2593')
func_2596_call = mutated_mod.get_global_var('func_2596')
const_3874 = relay.const([[7],[-6],[10],[9],[-9],[-6],[-10],[10],[10]], dtype = "uint32")#candidate|3874|(9, 1)|const|uint32
call_3873 = relay.TupleGetItem(func_2593_call(relay.reshape(call_3843.astype('float32'), [1372,]), relay.reshape(const_3874.astype('uint32'), [1, 9, 1]), ), 0)
call_3875 = relay.TupleGetItem(func_2596_call(relay.reshape(call_3843.astype('float32'), [1372,]), relay.reshape(const_3874.astype('uint32'), [1, 9, 1]), ), 0)
output = relay.Tuple([call_3843,call_3845,var_3846,call_3848,var_3849,call_3864,var_3865,var_3866,call_3869,call_3873,const_3874,])
output2 = relay.Tuple([call_3844,call_3847,var_3846,call_3850,var_3849,call_3867,var_3865,var_3866,call_3870,call_3875,const_3874,])
func_3881 = relay.Function([var_3846,var_3849,var_3865,var_3866,], output)
mod['func_3881'] = func_3881
mod = relay.transform.InferType()(mod)
var_3882 = relay.var("var_3882", dtype = "uint32", shape = ())#candidate|3882|()|var|uint32
var_3883 = relay.var("var_3883", dtype = "float64", shape = (225, 15))#candidate|3883|(225, 15)|var|float64
var_3884 = relay.var("var_3884", dtype = "float32", shape = (2, 4))#candidate|3884|(2, 4)|var|float32
var_3885 = relay.var("var_3885", dtype = "float32", shape = (24, 1))#candidate|3885|(24, 1)|var|float32
output = func_3881(var_3882,var_3883,var_3884,var_3885,)
func_3886 = relay.Function([var_3882,var_3883,var_3884,var_3885,], output)
mutated_mod['func_3886'] = func_3886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_3937 = relay.TupleGetItem(func_1113_call(), 0)
call_3938 = relay.TupleGetItem(func_1115_call(), 0)
uop_3945 = relay.acosh(call_3937.astype('float32')) # shape=(14, 7, 14)
uop_3947 = relay.acosh(call_3938.astype('float32')) # shape=(14, 7, 14)
output = uop_3945
output2 = uop_3947
func_3970 = relay.Function([], output)
mod['func_3970'] = func_3970
mod = relay.transform.InferType()(mod)
mutated_mod['func_3970'] = func_3970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mutated_mod.get_global_var('func_3970')
call_3971 = func_3970_call()
output = call_3971
func_3972 = relay.Function([], output)
mutated_mod['func_3972'] = func_3972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2200_call = mod.get_global_var('func_2200')
func_2202_call = mutated_mod.get_global_var('func_2202')
call_3979 = func_2200_call()
call_3980 = func_2200_call()
output = relay.Tuple([call_3979,])
output2 = relay.Tuple([call_3980,])
func_4000 = relay.Function([], output)
mod['func_4000'] = func_4000
mod = relay.transform.InferType()(mod)
output = func_4000()
func_4001 = relay.Function([], output)
mutated_mod['func_4001'] = func_4001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_4005 = relay.TupleGetItem(func_1022_call(), 0)
call_4006 = relay.TupleGetItem(func_1024_call(), 0)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_4034 = relay.TupleGetItem(func_3742_call(), 0)
call_4035 = relay.TupleGetItem(func_3743_call(), 0)
output = relay.Tuple([call_4005,call_4034,])
output2 = relay.Tuple([call_4006,call_4035,])
func_4042 = relay.Function([], output)
mod['func_4042'] = func_4042
mod = relay.transform.InferType()(mod)
output = func_4042()
func_4043 = relay.Function([], output)
mutated_mod['func_4043'] = func_4043
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4052 = relay.var("var_4052", dtype = "int64", shape = (15, 12, 15))#candidate|4052|(15, 12, 15)|var|int64
var_4053 = relay.var("var_4053", dtype = "int64", shape = (15, 12, 15))#candidate|4053|(15, 12, 15)|var|int64
bop_4054 = relay.greater(var_4052.astype('bool'), relay.reshape(var_4053.astype('bool'), relay.shape_of(var_4052))) # shape=(15, 12, 15)
output = bop_4054
output2 = bop_4054
func_4062 = relay.Function([var_4052,var_4053,], output)
mod['func_4062'] = func_4062
mod = relay.transform.InferType()(mod)
var_4063 = relay.var("var_4063", dtype = "int64", shape = (15, 12, 15))#candidate|4063|(15, 12, 15)|var|int64
var_4064 = relay.var("var_4064", dtype = "int64", shape = (15, 12, 15))#candidate|4064|(15, 12, 15)|var|int64
output = func_4062(var_4063,var_4064,)
func_4065 = relay.Function([var_4063,var_4064,], output)
mutated_mod['func_4065'] = func_4065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mod.get_global_var('func_619')
func_620_call = mutated_mod.get_global_var('func_620')
call_4116 = relay.TupleGetItem(func_619_call(), 0)
call_4117 = relay.TupleGetItem(func_620_call(), 0)
func_619_call = mod.get_global_var('func_619')
func_620_call = mutated_mod.get_global_var('func_620')
call_4123 = relay.TupleGetItem(func_619_call(), 0)
call_4124 = relay.TupleGetItem(func_620_call(), 0)
output = relay.Tuple([call_4116,call_4123,])
output2 = relay.Tuple([call_4117,call_4124,])
func_4135 = relay.Function([], output)
mod['func_4135'] = func_4135
mod = relay.transform.InferType()(mod)
output = func_4135()
func_4136 = relay.Function([], output)
mutated_mod['func_4136'] = func_4136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1387_call = mod.get_global_var('func_1387')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_4156 = relay.TupleGetItem(func_1387_call(), 0)
call_4157 = relay.TupleGetItem(func_1388_call(), 0)
output = relay.Tuple([call_4156,])
output2 = relay.Tuple([call_4157,])
func_4165 = relay.Function([], output)
mod['func_4165'] = func_4165
mod = relay.transform.InferType()(mod)
output = func_4165()
func_4166 = relay.Function([], output)
mutated_mod['func_4166'] = func_4166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_4281 = relay.TupleGetItem(func_871_call(), 1)
call_4282 = relay.TupleGetItem(func_873_call(), 1)
func_4135_call = mod.get_global_var('func_4135')
func_4136_call = mutated_mod.get_global_var('func_4136')
call_4307 = relay.TupleGetItem(func_4135_call(), 0)
call_4308 = relay.TupleGetItem(func_4136_call(), 0)
uop_4324 = relay.atan(call_4307.astype('float32')) # shape=(14, 7, 14)
uop_4326 = relay.atan(call_4308.astype('float32')) # shape=(14, 7, 14)
func_3443_call = mod.get_global_var('func_3443')
func_3446_call = mutated_mod.get_global_var('func_3446')
var_4331 = relay.var("var_4331", dtype = "float32", shape = (120,))#candidate|4331|(120,)|var|float32
const_4332 = relay.const(-4, dtype = "uint32")#candidate|4332|()|const|uint32
call_4330 = relay.TupleGetItem(func_3443_call(relay.reshape(var_4331.astype('float32'), [4, 6, 5]), relay.reshape(const_4332.astype('uint32'), []), ), 0)
call_4333 = relay.TupleGetItem(func_3446_call(relay.reshape(var_4331.astype('float32'), [4, 6, 5]), relay.reshape(const_4332.astype('uint32'), []), ), 0)
func_4042_call = mod.get_global_var('func_4042')
func_4043_call = mutated_mod.get_global_var('func_4043')
call_4347 = relay.TupleGetItem(func_4042_call(), 0)
call_4348 = relay.TupleGetItem(func_4043_call(), 0)
func_349_call = mod.get_global_var('func_349')
func_353_call = mutated_mod.get_global_var('func_353')
const_4352 = relay.const([-10,3,-6,7,10,-5,7,-4,-8,5,-1,10,5,-6,-9,-1,6,3,7,-5,-1,-1,10,5,10,7,-5,9,5,8,-2,3,7,10,-5,-10,-7,-7,8,-2,-4,-2,-6,-8,-6,-6,-5,6,6,5,-3,2,-8,5,-2,2,8,2,-5,-6,7,7,3,-4,-1,4,6,4,-4,-7,7,-10,-5,8,5,9,10,-5,-9,-3,10,4,3,9,6,2,7,-8,-8,-10,-2,8,7,6,2,8,-9,7,10,-9,-2,-10,7,-1,4,-10,4,-10,-1,9,-10,-5,-9,10,10,6,2,-3,3,4,7,6,1,-2,-4,6,-8,-10,-3,8,2,5,9,-1,-2,-2,8,-10,-1,1,-1,-9,8,-6,2,4,8,-7,9,-1,-2,2,8,9,2,9,9,-2,7,-7,2,4,5,8,7,7,-2,-9,10,-4,-2,-6,8,5,6,6,-5,7,-10,-6,-4,-8,3,-9,-7,-5,-5,-9,1,-10,-8,-6,-7,-5,-7,5,5,10,-3,2,3,1,10,-2,-4,9,-9,8,-7,-4,-5,10,6,-9,10,-1,9,-2,1,-10,-6,-8,-2,-2,9,-7,-7,-4,6,2,-3,10,4,-10,8,2,7,-9,-6,1,-9,2,3,10,9,7,6,3,1,-7,-3,1,8,-2,2,-4,2,-8,-9,-4,2,-10,9,10,-7,9,7,10,1,-2,5,-8,1,2,6,-8,-9,9,-4,-8,-8,-2,8,-2,6,-5,-1,8,9,-2,7,-5,2,4,5,-8,-10,9,6,8,5,-3,-4,-8,2,-10,-2,5,9,10,3,8,-10,-1,8,8,-3,-2,5,-10,10,8,-2,-5,-2,6,3,-9,3,-1,1,8,2,1,-10,4,10,1,5,-5,-1,4,-9,10,5,4,-1,-2,-2,2,-1,-1,8,-4,-10,-10,2,-6,7,4,7,1,-10,-5,-3,4,3,6,-9,-4,9,-9,-10,-3,-3,10,-7,-10,-2,-9,1,-1,-1,6,7,-1,6,1,-7,2,3,1,-2,7,7,-1,1,3,-10,6,-10,6,-6,-1,-1,-4,6,-4,-6,4,-9,10,-6,-4,3,-4,6,1,6,5,-5,-4,2,-9,9,2,8,-9,-6,-3,-2,3,8,10,-6,-5,-5,3,-7,6,8,5,1,-2,-7,-5,5,-9,-2,9,7,8,-3,9,-3,-7,4,-7,-5,1,6,-3,4,4,-4,-1,-6,-10,1,-6,-4,-5,4,3,-3,-1,10,1,-9,-9,7,1,10,2,-3,-8,-3,7,-7,7,5,-2,-6,-9,8,-6,-10,10,-10,-3,-5,2,-4,-7,9,4,4,9,8,4,7,-5,-9,-9,9,2,3,-2,-2,1,-3,-5,2,8,3,-8,-10,-9,7,-7,-2,-10,4,-3,1,8,-8,2,7,9,-9,-4,9,-9,-1,-3,-7,7,7,8,3,-3,-6,-2,4,-7,-10,4,-2,8,-9,-8,5,10,7,-9,1,-3,6,4,-9,-3,-9,10,9,-7,-8,7,-2,3,-4,-10,-4,-3,-10,-8,-5,-10,7,-6,-6,7,9,7,-10,1,-5,-8,-5,1,10,-4,2,9,-4,8,-1,-5,-8,4,-5,3,-7,10,3,-7,3,-8,-7,-4,4,-2,4,5,-8,-1,3,4,4,4,-5,8,4,3,-5,-4,-7,-3,-2,5,9,-6,10,4,3,-1,9,-6,-7,6,-6,-10,9,-7,4,-4,10,7,7,7,-9,10,-10,-3,-7,-1,-1,9,-6,10,10,7,1,3,-7,-10,9,-6,-6,7,8,-6,1,-9,-2,1,3,2,-3,-4,5,7,-3,2,2,3,-9,10,-4,9,8,-10,9,4,8,2,-1,-5,4,4,-9,7,-5,8,-4,9,-10,-2,10,-10,-6,-2,-3,-3,-6,-4,-3,-3,-6,2,-9,-3,-10,9,-2,10,3,-7,1,-3,7,4,-8,10,7,5,3,-6,-4,-2,-3,-4,-4,-3,1,2,3,7,2,-5,-9,6,10,-4,-8,-1,-9,-7,6,-8,6,-4,-5,-2,10,5,-10,1,6,4,-4,-4,2,5,-1,-4,10,-8,8,-3,7,-8,-10,9,-8,9,2,2,7,1,-10,-7,-2,7,-4,10,8,-2,-1,-8,6,9,-3,1,10,-7,6,1,8,-1,10,-8,9,9,-1,-9,6,-6,-10,-8,6,1,9,1,1,4,3,-2,-1,4,-9,10,10,-2,-2,9,6,-1,3,4,4,-7,-9,-9,9,-4,-6,-2,10,-5,4,2,5,5,-5,-3,-9,6,-9,-10,-2,-7,-1,-5,4,-5,5,8,-1,9,4,-5,-4,10,-9,4,-7,10,-1,-8,4,-3,1,8,-4,7,10,-10,-6,2,5,7,-10,-9,-1,-5,-10,-3,-10,2,9,-4,3,5,-6,-5,6,2,-8,-6,8,3,10,9,-6,-3,-10,3,-1,-3,7,10,7,-9,3,-5,7,-6,-3,-6,-8,1,8,-3,4,7,-3,7,7,6,-3,10,10,-10,3,-1,7,-2,8,3,3,-5,7,8,-10,-5,-7,7,-10,-10,3,7,3,-6,-7], dtype = "uint16")#candidate|4352|(975,)|const|uint16
call_4351 = relay.TupleGetItem(func_349_call(relay.reshape(const_4352.astype('uint16'), [15, 13, 5]), relay.reshape(const_4352.astype('uint16'), [15, 13, 5]), ), 0)
call_4353 = relay.TupleGetItem(func_353_call(relay.reshape(const_4352.astype('uint16'), [15, 13, 5]), relay.reshape(const_4352.astype('uint16'), [15, 13, 5]), ), 0)
func_3013_call = mod.get_global_var('func_3013')
func_3016_call = mutated_mod.get_global_var('func_3016')
var_4369 = relay.var("var_4369", dtype = "float32", shape = (8,))#candidate|4369|(8,)|var|float32
const_4370 = relay.const([[4.861442],[-9.031152],[-2.879386],[5.926716],[4.336020],[-3.604706],[-0.895265],[2.968698],[-4.214170],[-1.932902],[-4.018427],[9.724557],[8.122131],[2.393375],[7.832446],[-5.343302],[-4.329878],[7.266196],[9.690109],[-7.339487],[7.092395],[-8.886839],[9.704611],[-7.326165]], dtype = "float32")#candidate|4370|(24, 1)|const|float32
call_4368 = func_3013_call(relay.reshape(var_4369.astype('float32'), [1, 2, 4]), relay.reshape(const_4370.astype('float32'), [3, 2, 4]), )
call_4371 = func_3013_call(relay.reshape(var_4369.astype('float32'), [1, 2, 4]), relay.reshape(const_4370.astype('float32'), [3, 2, 4]), )
func_3108_call = mod.get_global_var('func_3108')
func_3112_call = mutated_mod.get_global_var('func_3112')
call_4386 = relay.TupleGetItem(func_3108_call(relay.reshape(call_4351.astype('uint16'), [65, 15]), relay.reshape(call_4368.astype('float32'), [2, 12]), ), 5)
call_4387 = relay.TupleGetItem(func_3112_call(relay.reshape(call_4351.astype('uint16'), [65, 15]), relay.reshape(call_4368.astype('float32'), [2, 12]), ), 5)
output = relay.Tuple([call_4281,uop_4324,call_4330,var_4331,const_4332,call_4347,call_4351,const_4352,call_4368,var_4369,const_4370,call_4386,])
output2 = relay.Tuple([call_4282,uop_4326,call_4333,var_4331,const_4332,call_4348,call_4353,const_4352,call_4371,var_4369,const_4370,call_4387,])
func_4392 = relay.Function([var_4331,var_4369,], output)
mod['func_4392'] = func_4392
mod = relay.transform.InferType()(mod)
var_4393 = relay.var("var_4393", dtype = "float32", shape = (120,))#candidate|4393|(120,)|var|float32
var_4394 = relay.var("var_4394", dtype = "float32", shape = (8,))#candidate|4394|(8,)|var|float32
output = func_4392(var_4393,var_4394,)
func_4395 = relay.Function([var_4393,var_4394,], output)
mutated_mod['func_4395'] = func_4395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4165_call = mod.get_global_var('func_4165')
func_4166_call = mutated_mod.get_global_var('func_4166')
call_4402 = relay.TupleGetItem(func_4165_call(), 0)
call_4403 = relay.TupleGetItem(func_4166_call(), 0)
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
call_4415 = relay.TupleGetItem(func_2853_call(), 0)
call_4416 = relay.TupleGetItem(func_2855_call(), 0)
uop_4422 = relay.sigmoid(call_4415.astype('float32')) # shape=(2925,)
uop_4424 = relay.sigmoid(call_4416.astype('float32')) # shape=(2925,)
uop_4432 = relay.cosh(uop_4422.astype('float32')) # shape=(2925,)
uop_4434 = relay.cosh(uop_4424.astype('float32')) # shape=(2925,)
output = relay.Tuple([call_4402,uop_4432,])
output2 = relay.Tuple([call_4403,uop_4434,])
func_4441 = relay.Function([], output)
mod['func_4441'] = func_4441
mod = relay.transform.InferType()(mod)
mutated_mod['func_4441'] = func_4441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4441_call = mutated_mod.get_global_var('func_4441')
call_4442 = func_4441_call()
output = call_4442
func_4443 = relay.Function([], output)
mutated_mod['func_4443'] = func_4443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_4518 = relay.TupleGetItem(func_3291_call(), 0)
call_4519 = relay.TupleGetItem(func_3292_call(), 0)
output = relay.Tuple([call_4518,])
output2 = relay.Tuple([call_4519,])
func_4522 = relay.Function([], output)
mod['func_4522'] = func_4522
mod = relay.transform.InferType()(mod)
output = func_4522()
func_4523 = relay.Function([], output)
mutated_mod['func_4523'] = func_4523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_4550 = relay.TupleGetItem(func_1113_call(), 0)
call_4551 = relay.TupleGetItem(func_1115_call(), 0)
output = relay.Tuple([call_4550,])
output2 = relay.Tuple([call_4551,])
func_4556 = relay.Function([], output)
mod['func_4556'] = func_4556
mod = relay.transform.InferType()(mod)
mutated_mod['func_4556'] = func_4556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4556_call = mutated_mod.get_global_var('func_4556')
call_4557 = func_4556_call()
output = call_4557
func_4558 = relay.Function([], output)
mutated_mod['func_4558'] = func_4558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4000_call = mod.get_global_var('func_4000')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_4569 = relay.TupleGetItem(func_4000_call(), 0)
call_4570 = relay.TupleGetItem(func_4001_call(), 0)
func_3768_call = mod.get_global_var('func_3768')
func_3771_call = mutated_mod.get_global_var('func_3771')
var_4572 = relay.var("var_4572", dtype = "float64", shape = (784,))#candidate|4572|(784,)|var|float64
call_4571 = relay.TupleGetItem(func_3768_call(relay.reshape(var_4572.astype('float64'), [7, 14, 8])), 0)
call_4573 = relay.TupleGetItem(func_3771_call(relay.reshape(var_4572.astype('float64'), [7, 14, 8])), 0)
uop_4584 = relay.asinh(call_4571.astype('float32')) # shape=(7, 14, 8)
uop_4586 = relay.asinh(call_4573.astype('float32')) # shape=(7, 14, 8)
var_4589 = relay.var("var_4589", dtype = "float32", shape = (7, 14, 8))#candidate|4589|(7, 14, 8)|var|float32
bop_4590 = relay.left_shift(uop_4584.astype('uint32'), relay.reshape(var_4589.astype('uint32'), relay.shape_of(uop_4584))) # shape=(7, 14, 8)
bop_4593 = relay.left_shift(uop_4586.astype('uint32'), relay.reshape(var_4589.astype('uint32'), relay.shape_of(uop_4586))) # shape=(7, 14, 8)
output = relay.Tuple([call_4569,var_4572,bop_4590,])
output2 = relay.Tuple([call_4570,var_4572,bop_4593,])
func_4596 = relay.Function([var_4572,var_4589,], output)
mod['func_4596'] = func_4596
mod = relay.transform.InferType()(mod)
mutated_mod['func_4596'] = func_4596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4596_call = mutated_mod.get_global_var('func_4596')
var_4598 = relay.var("var_4598", dtype = "float64", shape = (784,))#candidate|4598|(784,)|var|float64
var_4599 = relay.var("var_4599", dtype = "float32", shape = (7, 14, 8))#candidate|4599|(7, 14, 8)|var|float32
call_4597 = func_4596_call(var_4598,var_4599,)
output = call_4597
func_4600 = relay.Function([var_4598,var_4599,], output)
mutated_mod['func_4600'] = func_4600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3545_call = mod.get_global_var('func_3545')
func_3546_call = mutated_mod.get_global_var('func_3546')
call_4623 = relay.TupleGetItem(func_3545_call(), 1)
call_4624 = relay.TupleGetItem(func_3546_call(), 1)
func_3234_call = mod.get_global_var('func_3234')
func_3237_call = mutated_mod.get_global_var('func_3237')
var_4632 = relay.var("var_4632", dtype = "uint32", shape = (48,))#candidate|4632|(48,)|var|uint32
call_4631 = relay.TupleGetItem(func_3234_call(relay.reshape(var_4632.astype('uint32'), [8, 1, 6])), 2)
call_4633 = relay.TupleGetItem(func_3237_call(relay.reshape(var_4632.astype('uint32'), [8, 1, 6])), 2)
bop_4634 = relay.mod(var_4632.astype('float32'), call_4623.astype('float32')) # shape=(9, 48)
bop_4637 = relay.mod(var_4632.astype('float32'), call_4624.astype('float32')) # shape=(9, 48)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_4645 = relay.TupleGetItem(func_3291_call(), 0)
call_4646 = relay.TupleGetItem(func_3292_call(), 0)
func_2947_call = mod.get_global_var('func_2947')
func_2951_call = mutated_mod.get_global_var('func_2951')
var_4651 = relay.var("var_4651", dtype = "uint32", shape = ())#candidate|4651|()|var|uint32
call_4650 = relay.TupleGetItem(func_2947_call(relay.reshape(call_4645.astype('float32'), [14, 7, 14]), relay.reshape(var_4651.astype('uint32'), []), ), 3)
call_4652 = relay.TupleGetItem(func_2951_call(relay.reshape(call_4645.astype('float32'), [14, 7, 14]), relay.reshape(var_4651.astype('uint32'), []), ), 3)
output = relay.Tuple([call_4631,bop_4634,call_4645,call_4650,var_4651,])
output2 = relay.Tuple([call_4633,bop_4637,call_4646,call_4652,var_4651,])
func_4655 = relay.Function([var_4632,var_4651,], output)
mod['func_4655'] = func_4655
mod = relay.transform.InferType()(mod)
var_4656 = relay.var("var_4656", dtype = "uint32", shape = (48,))#candidate|4656|(48,)|var|uint32
var_4657 = relay.var("var_4657", dtype = "uint32", shape = ())#candidate|4657|()|var|uint32
output = func_4655(var_4656,var_4657,)
func_4658 = relay.Function([var_4656,var_4657,], output)
mutated_mod['func_4658'] = func_4658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_4662 = relay.TupleGetItem(func_3291_call(), 0)
call_4663 = relay.TupleGetItem(func_3292_call(), 0)
output = call_4662
output2 = call_4663
func_4665 = relay.Function([], output)
mod['func_4665'] = func_4665
mod = relay.transform.InferType()(mod)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4665_call = mutated_mod.get_global_var('func_4665')
call_4666 = func_4665_call()
output = call_4666
func_4667 = relay.Function([], output)
mutated_mod['func_4667'] = func_4667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4135_call = mod.get_global_var('func_4135')
func_4136_call = mutated_mod.get_global_var('func_4136')
call_4729 = relay.TupleGetItem(func_4135_call(), 0)
call_4730 = relay.TupleGetItem(func_4136_call(), 0)
func_1219_call = mod.get_global_var('func_1219')
func_1221_call = mutated_mod.get_global_var('func_1221')
var_4785 = relay.var("var_4785", dtype = "float64", shape = (396,))#candidate|4785|(396,)|var|float64
call_4784 = relay.TupleGetItem(func_1219_call(relay.reshape(var_4785.astype('float64'), [6, 6, 11])), 1)
call_4786 = relay.TupleGetItem(func_1221_call(relay.reshape(var_4785.astype('float64'), [6, 6, 11])), 1)
func_985_call = mod.get_global_var('func_985')
func_990_call = mutated_mod.get_global_var('func_990')
const_4793 = relay.const(-3, dtype = "uint8")#candidate|4793|()|const|uint8
var_4794 = relay.var("var_4794", dtype = "uint8", shape = (192,))#candidate|4794|(192,)|var|uint8
const_4795 = relay.const([1.776848,-3.146834,8.154976,-5.798793,2.079663,-3.231973,4.619362,-7.947702,4.683413,1.082703,7.821106,-7.625793,-3.638584,-8.012595,8.491541,-5.498479,4.183958,-9.100412,1.230441,-8.947395,2.326159,5.041299,-6.378658,4.660386,4.733262,-4.987907,-9.093206,-6.253663,4.102682,7.555153,-6.351684,0.918372,-3.187959,-5.764636,4.982935,-7.528522,4.191891,2.339087,6.730347,-9.396399,-0.529373,-0.938524,2.915128,6.766776,1.541148,7.871145,5.896568,1.535155,-1.795635,3.292167,-2.870631,-3.212657,4.208306,3.965607,-1.101061,8.202149,-3.049900,2.021930,-5.262020,-0.447306,2.799192,7.195081,8.342792,1.239809,-6.360713,3.195814,-4.771854,6.236364,3.141140,4.167967,-6.214554,-5.107841,-2.009317,-0.428111,8.852008,-7.584788,-0.889209,0.623018,-4.146299,1.135530,8.534719,-6.824941,-7.796377,-9.017757,-9.436891,9.216908,-7.604379,-8.148710,0.858394,-3.399231,7.150917,-7.946681,-9.475846,3.080671,-2.333576,-7.456031,5.752453,9.923463,-4.540307,-3.503928,1.947257,2.334502,0.728710,-5.608202,-3.516638,2.230892,6.434316,1.789477,3.572952,8.853985,0.470392,-5.197059,-9.749092,-8.500532,0.155140,8.090194,-3.526639,-0.635011,-1.252724,-8.446408,1.591449,1.236866,1.806047,5.054149,8.217491,-6.770843,-0.098508,-5.246195,4.535497,5.198585,8.975953,6.956275,6.311112,2.593889,7.173640,-8.660651,-1.121788,3.870789,-6.222661,-9.938160,3.667837,-0.554078,3.321433,-0.373635,0.849277,3.387802,4.494816,-4.050088,0.080030,-4.342374,7.590592,4.965898,-2.262461,-5.694760,1.772782,1.204716,5.504378,-6.915989,-9.671126,8.356190,-8.161952,-4.231783,-8.530636,-2.846657,-2.869372,-7.345309,5.965411,8.461180,-8.809698,-6.589467,9.597465,3.841936,8.804152,4.443421,-3.179900,7.405479,-4.170415,-9.276631,-9.791849,-6.289268,-1.120983,7.865786,-3.703075,7.509531,-5.139495,4.488635,9.019636,-6.322726,-6.757399,-7.019601,1.751811,-1.886830,1.125720,-5.068290,9.347931,7.242160,6.357024,-4.975154,7.032956,-4.853696,4.769543,8.732069,-9.272280,-2.313065,-1.286872,-3.156186,-8.790437,8.786706,7.867460,-4.338591,-4.636561,-3.109854,-1.703277,6.628883,1.783674,4.115882,4.162882,4.855850,-6.227019,2.312342,7.291258,-9.620996,-9.470333,3.432292,3.729985,-2.804465,8.149365,4.021107,2.281608,-8.889065,8.171633,-4.871865,-4.217560,-5.562092,0.414977,6.991497,6.050197,-9.302069,4.709525,-3.060070,2.503301,-5.520122,9.082602,-5.880971,9.783060,2.660195,-2.524457,5.647333,-9.306828,-4.031828,1.523103,-4.873915,8.324380,-0.013972,-5.665705,-5.204905,-5.519684,2.598876,-7.952952,-4.072916,-9.060099,-5.882126,6.887256,5.092009,-3.183562,9.623102,-5.404264,-1.565779,4.900513,-5.503059,3.104015,8.330552,-6.095477,-0.179255,8.955301,-2.930527,-5.385309,-9.380239,-3.227540,4.697606,5.076571,8.875015,-1.805217,-9.800591,-3.800223,-7.734577,2.295711,5.391018,-3.178404,-2.497084,1.725131,3.305197,-5.664849,3.401919,7.287171,6.001049,-5.953006,-3.718577,-0.282509,-5.935399,-4.361463,0.302615,-1.677326,4.822333,-5.354546,-2.278251,-0.449571,3.696038,-1.044874,2.633111,-6.215248,-6.818543,5.093770,4.475356,3.222730,7.325283,-9.235290,9.168882,8.020448,5.902825,5.824652,4.914050,0.699325,-8.476056,-4.297004,-6.648630,-8.585566,8.727143,8.446208,3.726601,-8.132484,-4.227790,3.192651,2.108758,-5.043018,-8.534762,8.102585,9.087055,7.393330,-6.671435,-6.572570,-4.240742,5.177838,-8.661491,-8.984716,-3.475693,-9.912394,-0.748076,-9.551689,3.848316,-5.436236,-0.188979,6.873717,4.284320,9.187071,-1.052648,-3.170422,-5.622862,-7.692228,-4.878506,4.813976,6.304472,-8.904655,6.950500,-1.441272,8.362756,0.117546,-2.494899,-4.676731,9.653643,5.811768,9.282589,-8.507402,9.555497,-7.640770,5.827992,-8.788096,-6.029492,-3.986074,-5.984684,-9.893165,-4.700335,1.349689,-4.950221,-8.494892,-7.262000,-2.783520,1.263922,3.060404,5.601662,-7.968135,6.214167,-8.175479,6.250236,-3.732523,0.104244,-0.013334,-4.685647,-1.156088,0.619858,-8.639445,-6.324029,5.377363,0.357387,-4.709637,-3.709942,6.653117,-1.658815,2.222642,0.620308,7.447623,-9.872789,-7.614492,1.700900,-7.327611,6.827147,-9.559372,5.392973,8.096213,2.403429,9.880381,-0.638229,6.503787,-6.000799,6.485561,-8.584531,-1.636393,-8.096183,2.814292,9.191174,-7.934949,-9.144156,-6.774436,-4.976883,-7.429512,-6.779994,4.884995,5.621506,5.325461,-2.326428,1.850747,7.029682,1.916970,-2.879262,4.699404,-6.325403,-6.376215,8.497032,-2.762126,-2.325700,6.814890,5.978263,4.985293,9.471004,-9.837643,3.237635,8.981141,-0.491654,-5.899275,7.344915,-8.429204,7.728111,9.348339,-8.242614,-3.001080,-3.902648,4.362131,2.336037,-2.204083,0.499057,-6.391008,-7.395346,8.997880,-8.394382,1.875821,7.450830,-2.025030,-8.916164,8.045342,1.972883,0.917033,6.482882,5.912220,-5.016361,-8.603830,8.259722,-9.641156,-4.623529,-2.155580,-9.620427,-6.094490,9.976907,-1.819439,-7.425969,-6.265088,-4.195064,-8.749524,-5.694725,-9.648567,8.894124,-5.187790,2.696741,2.250530,-5.750516,-9.267738,2.379671,9.479787,3.141603,5.511286,5.125209,-0.050278,5.111224,-6.623207,-9.033281,-7.836623,0.546075,-2.822127,-4.176817,-3.967851,8.128331,6.703450,4.547222,-2.485242,-0.842804,7.979592,9.718241,2.871556,-2.938064,1.652388,-0.240074,-9.936373,-7.108965,-5.258995,-2.043752,-2.744030,-2.643873,0.269114,-7.142460,-1.952539,5.726387,-0.741244,0.302440,2.851245,2.526973,9.833131,2.280714,9.165378,-0.322728,-3.246621,-1.884044,5.471879,-8.910135,5.469403,-3.662290,4.077121,6.410663,-7.373411,-5.666272,-6.856529,-8.437045,1.038534,5.672162,-7.663668,8.173801,7.066353,4.799137,-5.047758,7.575005,-3.643713,4.761886,4.464880,6.253906,-7.503394,3.068239,-1.105710,-8.625410,1.993362,-5.716695,2.766080,-2.844231,-4.627077,9.369377,8.932686,-8.291192,-2.249499,-2.316034,-0.619753,-7.387153,0.236058,0.505491,3.148413,6.463178,9.313080,-7.953037,9.324663,2.426885,-9.588248,-5.574860,5.149475,4.837638,9.377718,5.120947,-9.666008,-5.744388,-3.491339,7.877406,5.023226,-4.297830,-4.099836,0.446669,-2.833240,1.384906,-1.731958,-9.634761,-7.364698,2.932563,8.757109,3.479218,-0.361951,4.281014,0.869626,3.705993,-6.217749,-3.233652,-2.253907,-4.290016,-9.456982,-2.365303,-2.490883,7.916763], dtype = "float32")#candidate|4795|(630,)|const|float32
call_4792 = relay.TupleGetItem(func_985_call(relay.reshape(const_4793.astype('uint8'), []), relay.reshape(var_4794.astype('uint8'), [8, 8, 3]), relay.reshape(const_4795.astype('float32'), [630,]), ), 0)
call_4796 = relay.TupleGetItem(func_990_call(relay.reshape(const_4793.astype('uint8'), []), relay.reshape(var_4794.astype('uint8'), [8, 8, 3]), relay.reshape(const_4795.astype('float32'), [630,]), ), 0)
func_2125_call = mod.get_global_var('func_2125')
func_2127_call = mutated_mod.get_global_var('func_2127')
var_4800 = relay.var("var_4800", dtype = "uint32", shape = (2925,))#candidate|4800|(2925,)|var|uint32
call_4799 = relay.TupleGetItem(func_2125_call(relay.reshape(var_4800.astype('uint32'), [13, 15, 15])), 2)
call_4801 = relay.TupleGetItem(func_2127_call(relay.reshape(var_4800.astype('uint32'), [13, 15, 15])), 2)
func_3970_call = mod.get_global_var('func_3970')
func_3972_call = mutated_mod.get_global_var('func_3972')
call_4817 = func_3970_call()
call_4818 = func_3970_call()
func_4062_call = mod.get_global_var('func_4062')
func_4065_call = mutated_mod.get_global_var('func_4065')
var_4848 = relay.var("var_4848", dtype = "int64", shape = (3, 900))#candidate|4848|(3, 900)|var|int64
call_4847 = func_4062_call(relay.reshape(var_4848.astype('int64'), [15, 12, 15]), relay.reshape(var_4848.astype('int64'), [15, 12, 15]), )
call_4849 = func_4062_call(relay.reshape(var_4848.astype('int64'), [15, 12, 15]), relay.reshape(var_4848.astype('int64'), [15, 12, 15]), )
output = relay.Tuple([call_4729,call_4784,var_4785,call_4792,const_4793,var_4794,const_4795,call_4799,var_4800,call_4817,call_4847,var_4848,])
output2 = relay.Tuple([call_4730,call_4786,var_4785,call_4796,const_4793,var_4794,const_4795,call_4801,var_4800,call_4818,call_4849,var_4848,])
func_4860 = relay.Function([var_4785,var_4794,var_4800,var_4848,], output)
mod['func_4860'] = func_4860
mod = relay.transform.InferType()(mod)
var_4861 = relay.var("var_4861", dtype = "float64", shape = (396,))#candidate|4861|(396,)|var|float64
var_4862 = relay.var("var_4862", dtype = "uint8", shape = (192,))#candidate|4862|(192,)|var|uint8
var_4863 = relay.var("var_4863", dtype = "uint32", shape = (2925,))#candidate|4863|(2925,)|var|uint32
var_4864 = relay.var("var_4864", dtype = "int64", shape = (3, 900))#candidate|4864|(3, 900)|var|int64
output = func_4860(var_4861,var_4862,var_4863,var_4864,)
func_4865 = relay.Function([var_4861,var_4862,var_4863,var_4864,], output)
mutated_mod['func_4865'] = func_4865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mod.get_global_var('func_619')
func_620_call = mutated_mod.get_global_var('func_620')
call_4914 = relay.TupleGetItem(func_619_call(), 0)
call_4915 = relay.TupleGetItem(func_620_call(), 0)
func_1970_call = mod.get_global_var('func_1970')
func_1973_call = mutated_mod.get_global_var('func_1973')
var_4919 = relay.var("var_4919", dtype = "uint32", shape = ())#candidate|4919|()|var|uint32
call_4918 = relay.TupleGetItem(func_1970_call(relay.reshape(call_4914.astype('float64'), [14, 7, 14]), relay.reshape(var_4919.astype('uint32'), []), ), 0)
call_4920 = relay.TupleGetItem(func_1973_call(relay.reshape(call_4914.astype('float64'), [14, 7, 14]), relay.reshape(var_4919.astype('uint32'), []), ), 0)
func_698_call = mod.get_global_var('func_698')
func_701_call = mutated_mod.get_global_var('func_701')
call_4927 = relay.TupleGetItem(func_698_call(relay.reshape(var_4919.astype('uint32'), [])), 2)
call_4928 = relay.TupleGetItem(func_701_call(relay.reshape(var_4919.astype('uint32'), [])), 2)
bop_4930 = relay.add(var_4919.astype('uint8'), call_4918.astype('uint8')) # shape=(3, 1)
bop_4933 = relay.add(var_4919.astype('uint8'), call_4920.astype('uint8')) # shape=(3, 1)
output = relay.Tuple([call_4914,call_4927,bop_4930,])
output2 = relay.Tuple([call_4915,call_4928,bop_4933,])
func_4936 = relay.Function([var_4919,], output)
mod['func_4936'] = func_4936
mod = relay.transform.InferType()(mod)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4937 = relay.var("var_4937", dtype = "uint32", shape = ())#candidate|4937|()|var|uint32
func_4936_call = mutated_mod.get_global_var('func_4936')
call_4938 = func_4936_call(var_4937)
output = call_4938
func_4939 = relay.Function([var_4937], output)
mutated_mod['func_4939'] = func_4939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4958 = relay.var("var_4958", dtype = "float32", shape = (10, 14, 8))#candidate|4958|(10, 14, 8)|var|float32
var_4959 = relay.var("var_4959", dtype = "float32", shape = (10, 14, 8))#candidate|4959|(10, 14, 8)|var|float32
bop_4960 = relay.divide(var_4958.astype('float32'), relay.reshape(var_4959.astype('float32'), relay.shape_of(var_4958))) # shape=(10, 14, 8)
var_4963 = relay.var("var_4963", dtype = "float32", shape = (10, 14, 8))#candidate|4963|(10, 14, 8)|var|float32
bop_4964 = relay.add(var_4958.astype('int32'), relay.reshape(var_4963.astype('int32'), relay.shape_of(var_4958))) # shape=(10, 14, 8)
const_4969 = relay.const([[[-2.741910,-7.833244,-6.610593,8.402021,6.202658,5.800234,8.738525,8.674794],[-0.395015,4.334005,2.869317,7.433720,-2.925928,-7.535707,-9.638165,2.226773],[9.188673,-4.815339,6.078220,-1.789867,-2.409922,8.122318,5.975070,9.910153],[-8.837928,-2.967573,-8.958372,9.720476,-6.311511,-8.135513,0.091000,5.927884],[5.952232,-5.162972,-7.460822,-7.306907,-1.392373,-2.704805,-5.125464,-2.063790],[-1.551834,-5.568397,-0.358698,4.639269,0.962815,5.328579,-7.488083,3.053534],[-7.462425,-8.098736,-8.019058,-5.009411,-1.615423,7.882836,-3.776623,0.382104],[-5.432925,-2.566221,-4.213665,-9.174827,0.180471,-7.686041,-2.065088,0.505777],[-2.336499,1.320847,-1.712246,6.629037,7.156410,3.461706,-9.784097,-2.968133],[3.732339,1.522684,6.567315,6.589763,8.120216,-1.370200,-4.225917,4.439822],[1.822074,8.169803,-2.602086,-5.210062,7.120718,2.164212,-0.825231,5.995004],[-6.161218,6.110928,-9.959288,-7.232361,6.653487,1.339515,5.394522,-1.693479],[-5.668546,-0.902545,-0.749310,-0.227784,9.235158,-3.219929,9.603825,7.366527],[-0.127260,8.017007,5.656386,6.422297,-7.510936,-1.383009,4.295839,-2.966519]],[[7.615904,-4.145842,8.687418,6.872044,-1.919078,0.532863,9.248851,-6.708331],[7.465636,-2.657195,8.798909,3.306910,2.977799,7.892273,-5.341111,-0.743955],[1.814903,-0.227094,4.762206,0.854116,2.033439,2.877107,0.227970,-5.684202],[-7.092730,3.025323,-2.634386,0.804240,4.670726,-4.323439,1.051122,3.622981],[7.633291,6.813689,7.488142,9.407940,8.987048,-0.432416,-9.607639,-8.930211],[9.270944,-3.950511,-7.795257,6.734701,4.398987,-6.353422,-8.718269,2.433330],[8.714321,-1.578616,4.348437,6.441332,5.365497,5.462393,-9.790279,-8.800780],[6.550005,-3.814172,-6.901220,0.053991,3.289000,-4.514329,1.582698,-8.908650],[3.309914,-8.354677,-1.900921,8.071678,1.678972,5.164478,-8.017763,5.264096],[-9.643593,-9.087371,-1.244984,-3.356402,6.580698,3.153641,-4.701524,6.236500],[8.887280,-8.303233,4.846686,9.534976,-7.122454,-8.946957,-7.398990,1.733978],[4.053768,8.998132,0.331595,-4.417876,8.630524,-6.587251,4.727810,4.881217],[4.018394,-0.996929,4.095441,9.658363,-8.838685,8.328710,1.180981,2.420647],[-3.937535,-8.062382,4.239189,-1.070582,8.752388,-7.875904,-3.831047,5.347919]],[[-4.120494,-8.453427,0.776710,3.333418,1.304849,-7.502536,8.297284,-0.543124],[-9.663473,-2.980147,9.973158,-7.878488,9.851737,7.863586,-7.456999,0.110029],[-3.939188,2.935684,7.931653,2.361913,7.929687,3.356740,8.608470,-8.729950],[5.983174,4.831400,5.707478,8.809269,5.557630,-0.774473,3.213356,-7.791875],[9.274964,0.902075,-9.237917,1.787770,-6.089986,3.632132,-6.238039,4.176849],[-8.505101,-8.069508,9.970236,-8.741165,-2.327501,-5.731698,-6.982601,0.799323],[-2.828556,-0.186654,0.270061,-9.047299,-0.031767,-5.927373,6.749204,-3.808547],[-0.103019,7.662055,-9.188090,-1.313425,-4.901916,-5.112112,3.844645,-4.527287],[-8.279525,2.627655,2.362134,5.267740,4.470076,-4.971250,-8.768360,-4.863386],[-8.497940,-8.994970,2.361114,0.330948,7.102303,-7.320442,-8.802539,0.956527],[7.796647,-1.198432,-4.312671,-2.490094,9.025979,3.778414,-6.318743,3.522870],[2.736485,9.567283,-0.360700,8.753057,9.726807,4.518467,-1.737974,-3.348387],[1.659128,-6.062404,3.570197,1.041771,-2.111577,-8.398832,-3.588288,4.434702],[0.550019,-0.992125,0.364915,7.038938,0.929252,-2.500006,0.639253,1.044698]],[[-7.455393,8.337461,-7.200560,-4.930468,5.204535,7.488563,-1.642094,2.613178],[-9.327520,-4.543447,4.985964,-0.598080,-3.013643,5.632068,4.309870,-8.879260],[-4.997197,3.007291,-1.715089,0.375149,-3.645540,5.388988,9.319855,-2.478513],[-6.905770,-5.631444,9.916304,-5.934447,3.113191,3.164940,-6.241678,-3.864428],[4.912772,4.485625,-1.234517,7.407107,-0.638604,1.870096,-5.544269,2.688650],[-1.030773,-8.532879,-3.555826,5.210446,-0.979665,-8.059968,-0.737624,-0.239660],[8.477111,3.889036,-4.315605,-2.695244,5.387772,7.107479,-7.488879,-4.071771],[-4.023906,-1.278038,1.002021,-3.910141,-0.106169,-7.983963,-9.326941,3.390020],[1.004138,8.988461,3.653408,-0.859618,8.474790,-6.533988,-8.837667,6.277989],[-1.263799,7.802259,9.748809,6.210573,-1.459320,1.796233,-1.811772,-5.147316],[1.968392,-8.933836,-8.379867,-4.340759,-3.717015,2.103631,3.530007,9.440540],[-7.769359,-8.216533,-1.943410,5.034107,2.315773,6.426844,6.901736,3.393258],[6.840935,-7.538096,-3.776263,-2.021603,8.312219,3.344630,-5.268068,-4.869699],[6.668782,-1.756806,5.775573,1.072624,-2.327557,-1.000022,-1.113431,5.660448]],[[6.560888,9.604317,-3.514036,-3.565848,0.046459,-8.290030,-9.069858,-4.972809],[6.084361,-5.240640,1.826246,-6.624222,-4.396494,3.794654,-3.895394,1.148716],[-5.657262,-6.503039,-6.408186,5.611674,-1.811713,6.275941,-8.218346,4.415971],[-6.476005,-1.665614,6.725493,-9.257989,-0.855197,-3.099998,-3.237047,-7.401809],[6.755380,6.101691,-0.395369,7.920188,-5.875444,8.095898,6.199381,1.713111],[-3.070140,5.342541,-1.409947,-0.003490,0.626371,2.528749,-2.529429,4.800096],[-9.889102,6.124285,8.691711,-4.427461,1.607630,-2.445225,-4.974591,-9.213729],[-4.890609,-2.969083,8.763779,1.579608,5.696270,-4.509475,-3.408770,2.817139],[-8.039246,1.632793,-6.955926,-3.785450,-2.643465,-8.793240,-5.614161,5.764738],[-8.266349,3.209206,-0.359672,-8.064307,6.165226,5.196785,-0.451975,1.224420],[0.643146,-9.010554,-7.144988,4.442097,-6.731648,3.020249,4.213522,7.983168],[-3.716704,3.622553,8.136980,-4.201925,3.134069,-3.161570,2.336348,-5.689629],[1.849115,-7.084002,5.046191,-9.583760,5.889144,-8.482400,-5.445943,-1.329516],[-9.058903,-0.192242,4.778756,7.965168,-4.608492,9.243324,3.749696,5.756428]],[[-6.121637,-5.546149,6.465161,5.503266,-1.953062,2.189873,8.562160,5.687943],[-3.636250,8.145406,-5.266909,-4.067539,5.369057,-3.452209,6.888109,7.462122],[4.506788,-6.703136,-7.198924,4.401084,5.184191,5.780610,-6.939098,0.583155],[-8.071542,3.834108,5.992364,-1.856135,8.923835,2.888616,-4.614869,-2.313690],[-1.585731,-2.466270,7.105606,1.904797,2.255037,6.103865,8.533947,-7.098244],[-2.347563,-7.808185,4.580261,-1.993607,-7.023573,5.358081,-8.980982,-9.116538],[-1.243443,0.203107,8.220436,5.832572,9.086449,-1.556605,9.702821,0.067479],[-5.381087,3.527017,-7.459946,-6.542250,1.678924,6.494285,-1.370754,-7.106268],[-6.963923,-8.840197,-4.992869,-9.433024,-6.789881,-4.294999,4.785745,4.819935],[5.399850,3.033631,-7.542060,-5.417903,-1.746058,0.148054,-2.646831,3.615976],[9.912560,-6.634036,7.903090,-1.736094,0.087085,9.962414,-4.861468,9.481233],[3.289887,7.158159,-5.811027,2.273159,5.870177,0.399858,-3.087670,-0.750842],[-8.144117,2.325128,-7.887201,-2.566182,-0.264367,-8.197358,-6.452002,9.617896],[5.714247,-3.744300,-2.841654,-5.121520,-1.675833,1.522834,-7.056935,3.035217]],[[-5.245808,9.561935,-4.200054,0.038184,2.972324,1.144127,8.623305,-2.627974],[1.768971,-8.203871,-2.106817,5.260922,7.230996,-7.201629,-8.835887,-0.075063],[-6.819092,3.761770,3.037428,-8.360947,8.498694,9.304152,-0.193975,4.769217],[-7.342746,7.227983,-3.980108,8.733885,-6.687180,5.726448,2.595032,5.561787],[6.593048,-7.451117,3.844291,-4.368068,-6.730200,4.960647,8.333744,-2.559337],[4.761766,-9.227768,-1.179994,2.417863,6.721859,-5.454224,-9.421570,8.106912],[-0.218792,8.611697,-2.962290,-8.723407,8.575652,8.206424,-4.503474,-6.445633],[4.633764,4.079152,-7.163302,-2.994439,-6.889766,6.649097,9.412038,-4.263661],[-2.767780,2.613611,3.399369,-6.209358,-9.652723,2.395032,7.336092,-8.069765],[2.838093,0.051971,-4.853974,0.694529,-7.090672,4.565612,8.085123,0.730941],[7.192390,-0.200259,3.805787,7.499722,-4.314336,-1.169033,-3.407587,2.202893],[7.601803,-0.497646,-8.025951,-2.228124,-0.319302,-4.806792,8.230255,3.305897],[7.793427,-9.362871,-5.615591,-8.982066,-5.767032,2.642670,6.945145,-6.685506],[8.050554,-8.213908,8.240094,-1.786931,-8.153217,3.630673,-0.960640,9.452984]],[[8.826824,-4.604035,7.429963,-3.000437,-5.487097,0.734306,-3.183471,-5.459804],[-6.670942,-2.251797,5.129708,2.584262,2.393506,5.659029,2.801426,3.634942],[-4.860062,7.099010,-4.245826,-3.982792,9.253663,-5.354569,4.728958,7.481996],[8.315279,3.673797,-2.140939,5.983826,-8.170321,1.412809,2.421198,-0.336948],[1.917509,0.031078,9.571895,-4.572027,6.865609,6.904058,0.311078,-4.007313],[-6.693400,6.639593,-2.269389,-4.112835,5.514860,9.206771,1.881943,4.173964],[2.114503,-3.840093,-1.159224,4.678053,-6.973221,-8.432431,4.119048,-0.385241],[5.644451,-1.191283,-5.185225,-4.615343,-3.688642,-6.339685,9.039523,-6.400501],[0.048933,9.739734,2.670898,6.323574,4.581590,4.186472,7.875781,-6.324301],[0.676223,-1.084673,-0.021181,-8.815852,-5.375377,-7.494752,-3.806821,-5.665300],[3.747650,4.909022,-8.304911,-0.244024,-8.903452,-3.418515,-7.208887,-8.952108],[8.967838,0.650875,9.560666,8.228430,5.917023,7.224464,-9.792517,7.897194],[-0.161535,0.147084,9.993432,-6.532922,6.530347,5.822164,-4.525649,-8.498864],[3.900555,8.785804,9.368242,-1.816764,-3.782255,-0.821493,-2.315313,-1.224282]],[[-4.908315,1.067790,-5.441354,8.545023,8.723705,4.333297,8.641583,0.758888],[7.130331,2.074626,1.602121,2.047617,-0.727976,5.369752,6.891927,8.826034],[5.728084,-5.614164,-4.000066,0.586049,-5.967369,1.363546,-7.861260,-8.926791],[8.787283,-9.285432,-0.280624,-1.530001,0.031853,2.421704,-4.839826,-6.136594],[7.649635,3.436130,1.204002,0.694149,1.904381,4.614491,-3.508752,7.246307],[8.414561,-0.773350,-2.195856,-5.808456,-7.049370,-0.532131,-5.750774,-2.525662],[5.139911,-0.376840,0.221826,7.202341,-9.770536,-0.575626,-6.068837,0.438045],[-5.411247,5.727012,-6.414479,-8.454040,1.711969,1.729313,-0.355357,-7.335045],[9.023120,-7.111734,-6.083385,9.549997,-3.878013,2.303196,-3.103716,-3.617145],[9.262057,9.575408,-7.566043,-3.680441,-0.813194,0.295482,-0.214985,1.338154],[-6.212305,-1.696981,3.335274,-5.554454,0.443121,-1.937205,-7.282809,-7.073628],[8.495347,1.573316,-5.554129,0.851142,-6.537257,9.712199,-0.992712,-1.251462],[-4.834306,-6.981617,8.088103,0.539671,-9.056265,-3.621163,-3.570423,-8.491838],[-7.624314,7.237067,-0.666735,9.754619,-2.199039,5.589702,4.304226,4.131018]],[[-7.154387,6.459706,-1.392803,-9.439331,8.242393,5.239528,-9.904589,8.477761],[-9.823180,6.584449,0.341439,1.532951,8.809370,0.024394,-5.961617,-0.776112],[-0.569630,-1.581801,-0.772188,8.839033,4.643942,4.976500,2.843264,-6.913535],[-6.268611,-4.374888,2.620977,0.820415,-3.430745,3.927424,6.796573,6.145735],[-1.006870,3.399488,-9.845857,-4.851745,3.503657,6.062759,-6.999986,-4.351172],[1.227131,-1.958906,-6.818244,5.861477,-4.967354,-1.159335,-5.662875,0.498847],[8.358426,5.095113,-1.442738,-2.345770,-2.138811,-9.335782,0.393845,3.363756],[5.755451,7.541445,5.975226,-4.913049,-5.658684,0.183183,-7.410180,7.144766],[1.283143,7.298392,-9.307258,-7.993002,-3.116734,4.938332,7.075109,-6.988806],[-3.308015,6.953130,4.439984,-2.613783,-3.493408,-8.283592,-8.429869,-5.845873],[3.030495,2.733016,3.644782,-8.047349,-9.282415,-4.355870,-7.024907,-3.214141],[-0.842824,-1.141195,7.813597,5.468340,-8.813235,-6.262528,6.887985,8.347169],[8.621231,-9.701475,-1.964247,-4.052259,-8.206619,-8.001189,9.656648,-6.619528],[-8.044737,1.946553,1.625879,7.067087,5.171542,-1.505541,6.824976,9.654991]]], dtype = "float32")#candidate|4969|(10, 14, 8)|const|float32
bop_4970 = relay.left_shift(var_4959.astype('uint8'), relay.reshape(const_4969.astype('uint8'), relay.shape_of(var_4959))) # shape=(10, 14, 8)
func_941_call = mod.get_global_var('func_941')
func_942_call = mutated_mod.get_global_var('func_942')
call_4974 = func_941_call()
call_4975 = func_941_call()
uop_4977 = relay.acos(const_4969.astype('float32')) # shape=(10, 14, 8)
func_3768_call = mod.get_global_var('func_3768')
func_3771_call = mutated_mod.get_global_var('func_3771')
var_4982 = relay.var("var_4982", dtype = "float64", shape = (784,))#candidate|4982|(784,)|var|float64
call_4981 = relay.TupleGetItem(func_3768_call(relay.reshape(var_4982.astype('float64'), [7, 14, 8])), 0)
call_4983 = relay.TupleGetItem(func_3771_call(relay.reshape(var_4982.astype('float64'), [7, 14, 8])), 0)
func_1219_call = mod.get_global_var('func_1219')
func_1221_call = mutated_mod.get_global_var('func_1221')
const_4994 = relay.const([-3.930991,-0.066021,-9.571340,7.978792,3.242270,8.001529,1.940168,-6.337654,-9.231638,5.771003,-9.676844,-7.746181,-0.352699,5.960147,9.981449,-5.015954,0.521593,4.293113,-1.251220,5.893024,-4.638730,9.277861,-9.873924,1.047788,-3.747222,-7.641363,-6.996716,-3.991714,1.670120,-4.150731,-3.869057,-1.415294,-5.936744,8.115489,-7.342108,-4.586264,6.488780,-9.885462,9.649649,-9.501391,-0.850966,-2.545511,1.303899,-8.795133,-3.417695,1.564754,7.007803,4.222647,8.112010,-7.847093,2.775391,-1.098141,-1.875385,-6.124851,2.226859,5.032981,5.975933,-1.232889,-6.922312,-2.802864,3.683060,5.095034,7.805761,-7.799741,0.987029,4.096071,8.261653,6.151296,-9.449829,-0.531119,-6.987396,-6.965375,3.740759,-1.404865,0.150410,8.023707,7.515301,1.990797,5.421949,2.578063,8.303616,0.093677,6.916672,-7.133499,-9.185885,1.738571,9.658155,0.351155,-1.388453,-9.461198,-9.140537,-8.119569,5.784601,-5.627348,-2.345655,3.270497,-4.513100,-7.722314,-2.174302,-2.703324,4.791514,1.368783,5.573617,-5.171752,3.069115,2.981122,-8.251204,6.340416,1.823741,-9.639676,0.626823,8.239854,-9.072751,0.378222,4.039651,4.530159,1.336082,0.939625,0.983815,-2.700438,-2.634733,-1.952433,-1.670775,-9.692716,-8.725731,9.444432,0.219392,4.914550,-4.496405,-0.117464,-3.631760,9.973226,-0.284881,-1.621183,-2.302848,-8.389757,-3.967303,9.862244,-8.292258,2.078114,-3.146124,4.739065,5.359776,0.328030,8.313962,1.617649,7.073373,-6.486864,9.209878,-6.353550,5.097849,7.707245,9.033719,-4.014396,-7.029126,-8.013730,-0.080853,-1.886764,6.683744,-9.053169,2.917342,-8.402965,-7.046166,2.972954,-7.204715,4.240895,-4.917618,1.520729,0.261757,-9.295362,9.997275,-3.633994,-5.045078,-0.900705,-5.844085,-6.138385,-0.990786,-5.816552,9.185309,5.011818,3.277989,-5.190464,9.190824,-8.638951,0.370850,-7.077842,9.684760,1.979145,-2.934492,1.728756,-7.508772,-7.276165,3.011030,3.476392,-1.958871,-9.415953,6.182534,-2.634102,-2.165306,9.018215,0.388153,5.102004,-8.402496,-0.648068,-8.401854,6.174215,1.964627,0.181254,-8.143189,-3.176141,9.025394,9.035524,1.688737,1.404796,-4.752916,7.199286,0.640134,-2.617189,0.825418,-8.478816,6.187412,-8.152959,4.362211,9.880555,-6.241486,6.337646,-4.871196,-3.358207,-9.950308,3.590213,-8.988264,-6.686720,9.178602,6.040077,0.243837,-2.541496,2.926249,7.877817,7.118900,4.320638,-9.054190,0.899036,3.071286,-5.384319,-8.144218,-4.985535,5.730619,-7.267588,4.289079,6.561913,3.378282,4.921886,2.273697,7.321372,3.565016,-0.544081,9.321361,-8.293743,-0.304132,-0.558735,9.654242,7.240929,0.437018,6.854985,-3.557893,5.059799,3.012340,-3.697790,-1.428827,1.769252,-8.302816,9.361528,1.852362,-0.653364,7.201871,-3.261338,5.426302,7.978559,4.447761,-1.567759,2.120857,2.368977,-4.961856,2.088414,-7.747805,1.282501,6.948847,-0.760286,-9.441161,-7.678426,-5.306603,-9.233790,-7.793332,-6.591858,0.758424,0.265534,1.897605,2.679600,0.067878,-2.809289,5.486693,-5.754414,-2.634689,0.790895,-1.794711,-9.136168,7.526041,-2.935001,-0.419690,1.383822,3.867761,8.742717,-2.801089,6.796549,2.217359,1.118980,7.763004,3.889602,-1.311271,-4.642466,-5.573370,4.957590,-0.870582,-5.821428,0.925202,-4.156125,-7.874099,1.027795,-1.576831,-1.800341,-0.319683,-4.419335,-9.013458,8.013765,-4.894490,6.826977,2.484713,-2.759494,-2.409329,-0.474915,6.711401,6.713633,-3.061489,-2.654068,0.515552,6.353304,-5.088189,0.646805,6.361304,9.229535,-3.000368,0.358291,-0.007240,9.206289,-0.271595,-5.537781,-6.313645,1.037365,-9.575011,7.367942,2.490256,5.953630,-7.765629,-7.916000,5.612555,-9.488352,-0.088540,9.634914,8.393739,1.111122,5.965809,3.385301,8.247592,-9.712039,-9.310605,7.087545,-4.783711,6.340109,3.160455,7.787944,-7.309858,2.380597,9.637446,3.943736,5.611413,-6.521920,-3.779036,1.202354,-8.346416,4.861218,8.580594,-1.172450,0.413645,3.615465,0.797656,9.282096], dtype = "float64")#candidate|4994|(396,)|const|float64
call_4993 = relay.TupleGetItem(func_1219_call(relay.reshape(const_4994.astype('float64'), [6, 6, 11])), 0)
call_4995 = relay.TupleGetItem(func_1221_call(relay.reshape(const_4994.astype('float64'), [6, 6, 11])), 0)
output = relay.Tuple([bop_4960,bop_4964,bop_4970,call_4974,uop_4977,call_4981,var_4982,call_4993,const_4994,])
output2 = relay.Tuple([bop_4960,bop_4964,bop_4970,call_4975,uop_4977,call_4983,var_4982,call_4995,const_4994,])
func_4997 = relay.Function([var_4958,var_4959,var_4963,var_4982,], output)
mod['func_4997'] = func_4997
mod = relay.transform.InferType()(mod)
mutated_mod['func_4997'] = func_4997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4997_call = mutated_mod.get_global_var('func_4997')
var_4999 = relay.var("var_4999", dtype = "float32", shape = (10, 14, 8))#candidate|4999|(10, 14, 8)|var|float32
var_5000 = relay.var("var_5000", dtype = "float32", shape = (10, 14, 8))#candidate|5000|(10, 14, 8)|var|float32
var_5001 = relay.var("var_5001", dtype = "float32", shape = (10, 14, 8))#candidate|5001|(10, 14, 8)|var|float32
var_5002 = relay.var("var_5002", dtype = "float64", shape = (784,))#candidate|5002|(784,)|var|float64
call_4998 = func_4997_call(var_4999,var_5000,var_5001,var_5002,)
output = call_4998
func_5003 = relay.Function([var_4999,var_5000,var_5001,var_5002,], output)
mutated_mod['func_5003'] = func_5003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4556_call = mod.get_global_var('func_4556')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_5020 = relay.TupleGetItem(func_4556_call(), 0)
call_5021 = relay.TupleGetItem(func_4558_call(), 0)
uop_5039 = relay.cosh(call_5020.astype('float32')) # shape=(14, 7, 14)
uop_5041 = relay.cosh(call_5021.astype('float32')) # shape=(14, 7, 14)
func_119_call = mod.get_global_var('func_119')
func_121_call = mutated_mod.get_global_var('func_121')
const_5043 = relay.const([[-3.528553,0.881089,-4.998251,-5.156418,3.058468,3.557585,1.149340,-3.766293,-5.958028],[-3.052776,-1.801056,6.070904,-1.249963,4.442244,-0.300350,4.147387,-6.924944,-1.078942],[4.523676,8.408704,4.484135,-2.171060,5.429570,-8.519532,8.530153,0.908543,2.338310],[-6.000503,-8.253331,-7.105672,9.620372,2.520969,-6.443136,-2.294241,-2.024331,8.008123],[-5.017645,7.407481,-9.072504,0.362781,-6.864826,0.448673,-8.925006,4.955058,5.058483],[2.124441,-5.999954,-0.291490,-4.380555,-0.785462,5.353613,-4.172992,0.196562,5.220799],[7.638636,-9.559509,5.729570,6.105212,8.798130,-5.019152,8.999039,-4.443080,-0.804345],[-9.045543,6.229544,-8.556538,-1.417592,1.504241,-0.230322,-2.676965,2.044757,7.803993],[-0.519701,-4.075290,2.917952,8.638030,-8.351269,-3.629511,-8.845749,1.061675,4.357681],[-9.734788,-7.012574,-0.574825,-3.524570,9.966776,8.022748,5.715594,0.572594,8.876477],[-8.151143,3.199536,-9.924183,-3.906022,0.083746,2.470140,8.302189,-4.489860,1.761275],[-7.054068,2.846564,4.694395,-7.508484,5.798267,5.409032,-4.283851,4.605295,-4.757110],[-1.925982,-6.477002,5.087736,-4.286548,-6.338134,-4.623956,1.805289,3.204742,-9.279614],[1.270647,4.986788,5.577658,-9.453901,6.341850,7.498065,1.288441,-9.891554,9.856972],[5.600101,-9.294080,6.249985,2.724226,4.077569,3.907072,-2.073414,-4.298604,1.533532],[-3.775443,3.220513,3.046453,0.610505,-4.761907,3.152657,5.248605,-3.729002,-6.486724],[8.279987,-8.631697,-0.173350,-1.175790,8.339679,6.422453,-3.736089,-4.045199,8.318140],[7.858781,-3.689011,-0.491845,0.832931,8.014703,7.283211,7.690205,9.489078,4.690800],[-5.682285,-9.320376,-9.172063,-2.574872,0.344107,-9.408514,2.866609,-8.597102,-2.700785],[1.933965,-5.274683,0.841349,-6.741189,-5.383469,-0.088938,9.194752,-8.512242,-9.421105],[3.601581,3.925317,7.326478,8.464789,4.670872,5.951055,-1.601576,-3.066658,7.289473],[-6.243996,-3.194733,1.709105,-0.323845,9.409632,8.014465,5.701561,9.528881,4.044879],[5.099736,3.315786,-0.128582,-2.895401,0.912590,-3.809036,-4.599005,-5.413193,2.240930],[1.107960,-5.925057,-8.634651,2.415604,2.483759,1.984586,3.574007,1.287426,9.959163],[0.896730,3.287971,-7.690437,6.296023,-3.640344,-2.905035,-4.293520,-0.482321,-8.561090],[-3.341285,-3.977227,-9.892678,-2.246436,-7.612167,-3.200093,-0.989437,2.193241,-5.920830],[4.013124,-9.725321,6.392484,4.588044,2.050627,3.545353,0.868501,5.963124,2.350952],[9.574901,0.669434,5.510519,1.892518,-8.849045,6.437497,4.632149,-8.615332,7.063105],[-0.746694,7.392792,-2.919139,1.667817,-9.751533,2.101319,6.557054,-3.178732,2.584029],[-4.635105,3.157222,7.496984,-4.812083,8.966269,6.506037,-8.405306,0.766701,9.598696],[-8.418803,7.816635,7.157927,-5.057835,4.054315,7.269425,7.032816,-7.823618,-5.289730],[5.732502,-5.106865,-9.457485,7.910559,7.146728,-8.349141,-2.168791,7.295826,-5.203675],[3.936629,4.398756,7.165496,6.063964,2.764687,4.142746,0.905751,-1.884603,3.334048],[7.159608,0.623516,7.316746,6.461951,0.989098,-6.031129,6.125300,-7.004740,-6.433404],[-8.366221,-6.044134,8.942287,4.517766,8.742218,-3.020866,-9.045127,6.459182,-6.641174],[-0.049663,4.417234,0.031951,7.803154,6.519494,3.088804,4.770103,6.066827,3.380130],[5.123567,1.396965,-8.375371,8.828514,-9.989217,9.472992,1.875252,-7.341777,2.034645],[-1.115253,6.418034,-4.317807,-5.235772,-0.526465,-2.649838,-9.863783,-4.118890,-5.006222],[-5.106841,-3.479405,-1.831634,0.158779,2.595103,-4.099150,6.349102,3.506952,-6.017278],[-6.402418,5.551083,-8.496973,-6.839856,0.456229,3.411556,-8.210119,6.683798,-3.288904],[-5.599965,3.122279,8.071864,-0.671016,1.896505,5.150103,2.386611,-6.752063,-4.444588],[-7.362867,2.250119,-1.405336,5.033927,-6.065647,2.557546,2.615749,5.269786,5.347460],[-8.655835,9.604270,6.056448,-7.459147,-6.334509,0.866629,0.358413,-6.941461,5.527505],[5.647247,3.557070,2.349725,-2.008916,-4.106177,1.584855,6.551143,6.126906,4.363188],[7.817641,0.833769,-9.936113,6.650450,9.036308,6.064887,-9.001879,3.335514,-1.504359],[-4.274180,0.598534,-6.475132,-7.365693,6.461236,6.374790,-0.313201,-7.036944,-2.634983],[-6.885980,-1.545403,0.829616,-5.112473,8.498227,8.463532,-7.373002,-4.103776,-6.472928],[-9.505921,-4.754659,-3.362238,4.911950,8.092115,3.325628,-9.992355,5.678369,0.784204],[-5.068757,-8.377233,8.108154,-6.527771,8.690583,-1.651519,0.465018,-9.396551,-8.287039],[0.197328,9.413875,4.398280,0.514711,-5.908617,-1.698199,4.056909,7.961132,-9.597721],[-9.359432,-2.572146,-6.122567,0.586043,4.659483,0.327884,3.100596,8.543396,7.392017],[3.657073,2.746279,9.162600,5.529118,-7.663225,-3.718607,5.486911,2.474296,-7.892503],[-1.062417,-6.740334,1.772698,9.032196,-0.284388,2.156414,2.958728,-7.835056,-4.733383],[9.522211,7.038038,-5.531604,-6.052811,-0.435239,2.119722,5.116390,-0.520224,-3.091066],[-0.200221,-3.973491,-7.148452,-3.286680,-1.688704,-4.878963,5.342883,-4.265949,-1.537474],[-7.887359,8.322740,-3.646878,-5.242429,-5.592765,3.111244,-3.245444,2.088327,3.629486],[1.887775,3.571512,-2.678950,-2.854906,2.271051,-4.471936,-0.991952,5.617452,8.933716],[-2.358438,8.136662,4.963067,5.012796,-3.796149,-3.989744,2.674197,-6.621885,-2.239240],[-2.108357,-9.199935,1.414428,0.537545,8.551664,9.481041,5.833189,-6.924620,1.082129],[1.623813,-5.634660,1.315135,1.609353,-3.905596,1.179445,3.996624,2.524978,-0.507557],[-8.774670,-2.992572,-3.370286,6.006231,-1.500449,-1.893693,5.148726,-9.289422,-5.500508],[-6.572179,-7.390612,1.205764,0.874019,-4.249368,-6.662930,-0.512726,-9.087311,-5.625464],[-0.841938,-3.963937,-0.472711,-6.233094,9.695207,6.251567,-8.929774,4.277925,-5.691412],[7.806140,1.322204,-1.188477,-3.385694,5.403401,-6.677153,2.046817,2.848665,1.480760],[-4.715261,4.042977,-0.020584,0.814324,-8.510341,-0.843268,1.097762,1.397453,5.436928],[-3.631513,-3.308698,-9.438969,-2.024482,5.306096,-0.267277,0.760341,7.044564,-7.367816],[1.370972,-9.434847,-8.834776,-5.585698,-0.630377,2.101382,9.818015,2.744754,6.548252],[-6.715942,1.312663,4.559612,-6.860048,4.020385,4.451079,-2.963677,6.104756,-2.054725],[5.997700,-3.978938,-4.377757,6.394420,0.026982,0.568580,-3.192290,-1.851827,-9.353616],[1.846338,-8.990487,-0.616816,-9.743200,-1.859872,9.583047,-1.635350,9.142651,1.706349]], dtype = "float32")#candidate|5043|(70, 9)|const|float32
call_5042 = func_119_call(relay.reshape(const_5043.astype('float32'), [7, 9, 10]))
call_5044 = func_119_call(relay.reshape(const_5043.astype('float32'), [7, 9, 10]))
uop_5047 = relay.log2(uop_5039.astype('float32')) # shape=(14, 7, 14)
uop_5049 = relay.log2(uop_5041.astype('float32')) # shape=(14, 7, 14)
output = relay.Tuple([call_5042,const_5043,uop_5047,])
output2 = relay.Tuple([call_5044,const_5043,uop_5049,])
func_5052 = relay.Function([], output)
mod['func_5052'] = func_5052
mod = relay.transform.InferType()(mod)
mutated_mod['func_5052'] = func_5052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5052_call = mutated_mod.get_global_var('func_5052')
call_5053 = func_5052_call()
output = call_5053
func_5054 = relay.Function([], output)
mutated_mod['func_5054'] = func_5054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3002_call = mod.get_global_var('func_3002')
func_3003_call = mutated_mod.get_global_var('func_3003')
call_5144 = func_3002_call()
call_5145 = func_3002_call()
output = relay.Tuple([call_5144,])
output2 = relay.Tuple([call_5145,])
func_5175 = relay.Function([], output)
mod['func_5175'] = func_5175
mod = relay.transform.InferType()(mod)
mutated_mod['func_5175'] = func_5175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5175_call = mutated_mod.get_global_var('func_5175')
call_5176 = func_5175_call()
output = call_5176
func_5177 = relay.Function([], output)
mutated_mod['func_5177'] = func_5177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4441_call = mod.get_global_var('func_4441')
func_4443_call = mutated_mod.get_global_var('func_4443')
call_5190 = relay.TupleGetItem(func_4441_call(), 1)
call_5191 = relay.TupleGetItem(func_4443_call(), 1)
output = call_5190
output2 = call_5191
func_5194 = relay.Function([], output)
mod['func_5194'] = func_5194
mod = relay.transform.InferType()(mod)
mutated_mod['func_5194'] = func_5194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5194_call = mutated_mod.get_global_var('func_5194')
call_5195 = func_5194_call()
output = call_5195
func_5196 = relay.Function([], output)
mutated_mod['func_5196'] = func_5196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1387_call = mod.get_global_var('func_1387')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_5197 = relay.TupleGetItem(func_1387_call(), 0)
call_5198 = relay.TupleGetItem(func_1388_call(), 0)
func_2171_call = mod.get_global_var('func_2171')
func_2174_call = mutated_mod.get_global_var('func_2174')
var_5216 = relay.var("var_5216", dtype = "uint32", shape = ())#candidate|5216|()|var|uint32
call_5215 = relay.TupleGetItem(func_2171_call(relay.reshape(call_5197.astype('float32'), [14, 7, 14]), relay.reshape(var_5216.astype('uint32'), []), ), 0)
call_5217 = relay.TupleGetItem(func_2174_call(relay.reshape(call_5197.astype('float32'), [14, 7, 14]), relay.reshape(var_5216.astype('uint32'), []), ), 0)
output = relay.Tuple([call_5197,call_5215,var_5216,])
output2 = relay.Tuple([call_5198,call_5217,var_5216,])
func_5219 = relay.Function([var_5216,], output)
mod['func_5219'] = func_5219
mod = relay.transform.InferType()(mod)
var_5220 = relay.var("var_5220", dtype = "uint32", shape = ())#candidate|5220|()|var|uint32
output = func_5219(var_5220)
func_5221 = relay.Function([var_5220], output)
mutated_mod['func_5221'] = func_5221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_5244 = relay.TupleGetItem(func_1022_call(), 0)
call_5245 = relay.TupleGetItem(func_1024_call(), 0)
output = call_5244
output2 = call_5245
func_5275 = relay.Function([], output)
mod['func_5275'] = func_5275
mod = relay.transform.InferType()(mod)
mutated_mod['func_5275'] = func_5275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5275_call = mutated_mod.get_global_var('func_5275')
call_5276 = func_5275_call()
output = call_5276
func_5277 = relay.Function([], output)
mutated_mod['func_5277'] = func_5277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5194_call = mod.get_global_var('func_5194')
func_5196_call = mutated_mod.get_global_var('func_5196')
call_5305 = func_5194_call()
call_5306 = func_5194_call()
output = relay.Tuple([call_5305,])
output2 = relay.Tuple([call_5306,])
func_5308 = relay.Function([], output)
mod['func_5308'] = func_5308
mod = relay.transform.InferType()(mod)
output = func_5308()
func_5309 = relay.Function([], output)
mutated_mod['func_5309'] = func_5309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_951_call = mod.get_global_var('func_951')
func_953_call = mutated_mod.get_global_var('func_953')
call_5310 = func_951_call()
call_5311 = func_951_call()
output = call_5310
output2 = call_5311
func_5329 = relay.Function([], output)
mod['func_5329'] = func_5329
mod = relay.transform.InferType()(mod)
output = func_5329()
func_5330 = relay.Function([], output)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_5335 = relay.TupleGetItem(func_1022_call(), 1)
call_5336 = relay.TupleGetItem(func_1024_call(), 1)
output = relay.Tuple([call_5335,])
output2 = relay.Tuple([call_5336,])
func_5356 = relay.Function([], output)
mod['func_5356'] = func_5356
mod = relay.transform.InferType()(mod)
output = func_5356()
func_5357 = relay.Function([], output)
mutated_mod['func_5357'] = func_5357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3377_call = mod.get_global_var('func_3377')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_5376 = relay.TupleGetItem(func_3377_call(), 0)
call_5377 = relay.TupleGetItem(func_3379_call(), 0)
func_3013_call = mod.get_global_var('func_3013')
func_3016_call = mutated_mod.get_global_var('func_3016')
var_5397 = relay.var("var_5397", dtype = "float32", shape = (2, 4))#candidate|5397|(2, 4)|var|float32
const_5398 = relay.const([-8.993552,2.357119,-8.704188,0.367201,9.153072,-7.930045,4.576468,-0.420388,3.134093,-7.681941,-5.137283,5.710779,-8.660732,0.844120,-7.774209,7.274305,-7.790940,-1.711403,-5.464745,-0.762282,3.726333,-2.685445,9.151982,-0.027123], dtype = "float32")#candidate|5398|(24,)|const|float32
call_5396 = func_3013_call(relay.reshape(var_5397.astype('float32'), [1, 2, 4]), relay.reshape(const_5398.astype('float32'), [3, 2, 4]), )
call_5399 = func_3013_call(relay.reshape(var_5397.astype('float32'), [1, 2, 4]), relay.reshape(const_5398.astype('float32'), [3, 2, 4]), )
func_5219_call = mod.get_global_var('func_5219')
func_5221_call = mutated_mod.get_global_var('func_5221')
var_5404 = relay.var("var_5404", dtype = "uint32", shape = ())#candidate|5404|()|var|uint32
call_5403 = relay.TupleGetItem(func_5219_call(relay.reshape(var_5404.astype('uint32'), [])), 1)
call_5405 = relay.TupleGetItem(func_5221_call(relay.reshape(var_5404.astype('uint32'), [])), 1)
output = relay.Tuple([call_5376,call_5396,var_5397,const_5398,call_5403,var_5404,])
output2 = relay.Tuple([call_5377,call_5399,var_5397,const_5398,call_5405,var_5404,])
func_5429 = relay.Function([var_5397,var_5404,], output)
mod['func_5429'] = func_5429
mod = relay.transform.InferType()(mod)
mutated_mod['func_5429'] = func_5429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5429_call = mutated_mod.get_global_var('func_5429')
var_5431 = relay.var("var_5431", dtype = "float32", shape = (2, 4))#candidate|5431|(2, 4)|var|float32
var_5432 = relay.var("var_5432", dtype = "uint32", shape = ())#candidate|5432|()|var|uint32
call_5430 = func_5429_call(var_5431,var_5432,)
output = call_5430
func_5433 = relay.Function([var_5431,var_5432,], output)
mutated_mod['func_5433'] = func_5433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4135_call = mod.get_global_var('func_4135')
func_4136_call = mutated_mod.get_global_var('func_4136')
call_5483 = relay.TupleGetItem(func_4135_call(), 0)
call_5484 = relay.TupleGetItem(func_4136_call(), 0)
output = relay.Tuple([call_5483,])
output2 = relay.Tuple([call_5484,])
func_5485 = relay.Function([], output)
mod['func_5485'] = func_5485
mod = relay.transform.InferType()(mod)
mutated_mod['func_5485'] = func_5485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5485_call = mutated_mod.get_global_var('func_5485')
call_5486 = func_5485_call()
output = call_5486
func_5487 = relay.Function([], output)
mutated_mod['func_5487'] = func_5487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4556_call = mod.get_global_var('func_4556')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_5497 = relay.TupleGetItem(func_4556_call(), 0)
call_5498 = relay.TupleGetItem(func_4558_call(), 0)
func_3881_call = mod.get_global_var('func_3881')
func_3886_call = mutated_mod.get_global_var('func_3886')
var_5517 = relay.var("var_5517", dtype = "uint32", shape = ())#candidate|5517|()|var|uint32
const_5518 = relay.const([9.982008,-3.988181,9.861475,-9.932427,8.820781,6.134943,-3.185289,-7.564780,1.144397,-4.275736,-3.106238,2.352232,5.813914,6.896851,-8.711401,-7.808576,-9.646879,1.391762,7.443999,-3.604203,-0.123484,5.341729,-2.300271,9.055682,3.916566,-0.516836,-6.207901,5.770346,8.030482,-0.438827,2.418845,0.597659,5.385616,8.981136,-7.750637,9.367669,-2.597252,0.274078,-5.190289,-0.693629,-9.251824,4.629902,-8.796072,-7.945592,8.862116,-6.697657,6.232114,-6.962377,-0.728424,1.645371,4.607707,0.309606,-2.043930,3.675175,2.761666,-0.634002,-2.395612,-6.490776,-1.290192,0.433600,4.675042,-0.669875,3.282150,0.419202,-6.186156,7.171710,0.995834,1.126453,9.326513,-0.921197,-7.713023,2.403209,-0.623879,-2.657630,-2.205054,7.760262,0.131434,3.922703,-1.845822,-0.221492,5.364291,7.858620,-8.457909,-8.496988,2.855490,5.674886,8.969934,-6.021287,-3.229979,-6.157006,-9.720080,3.285967,0.028247,3.679336,3.227158,8.203897,5.005228,-1.152483,5.317454,2.704987,0.591716,8.749825,3.515287,0.185812,-8.155581,4.052465,0.422191,-0.334608,8.652008,-6.640534,0.077114,8.832486,-9.666764,-4.604929,3.756147,-8.774774,-6.023402,7.013109,-7.719944,-5.304396,2.185875,7.531776,-6.966659,5.825463,6.788107,-7.793872,6.881563,8.315621,6.517234,-3.542566,-1.861674,-9.859362,-6.675635,-2.104153,-0.765726,8.112948,-2.150039,-3.821004,-6.125911,-0.091222,8.008885,-9.900517,9.294617,7.844860,8.265098,6.844251,-9.325606,7.559551,7.903109,2.922250,-4.186351,3.053435,-7.996975,1.575457,-5.354580,-0.282855,-4.556394,-2.332659,2.882773,7.360189,8.865940,-6.152696,-0.980469,-3.876417,3.802532,2.525963,-0.776703,0.212846,-5.682796,6.394874,-6.021109,-8.767977,-0.319265,-3.370925,-8.235990,1.620367,-4.562646,-4.626268,4.046722,6.409135,-6.261999,-5.448388,4.528108,1.108160,-2.028256,-1.013525,8.307290,7.629115,-1.473219,8.409967,1.951019,-1.752655,-5.053865,-8.646296,-3.229697,-8.891718,-4.137651,0.626491,-3.735056,2.511266,-5.915972,-7.605202,1.831033,2.230156,6.496751,-1.393669,8.807412,1.910365,0.352097,8.244105,2.805653,9.807019,-1.837419,5.864199,4.652433,1.836444,0.627981,3.623674,-3.521543,-9.703376,2.102841,-0.706977,0.276606,-9.862895,-4.914641,-0.437053,-9.291864,2.451815,5.066994,6.552387,-2.477544,-4.635486,-7.288342,-1.271330,-2.684022,3.751573,7.304806,2.119056,7.961563,-8.713624,0.395093,2.411630,-6.509972,0.576415,7.642015,-4.012139,5.304573,7.887348,3.895522,-8.870935,-1.760821,1.804611,-1.379299,6.269447,5.283994,8.651104,-9.370433,-6.066609,4.016786,-2.606254,-5.084275,-0.209488,3.353109,-1.820680,7.206230,5.552457,-3.333425,-4.827975,2.324096,-2.013039,9.443370,7.185083,-8.872429,-0.432947,3.946431,-5.816927,2.143681,-1.816848,7.925147,0.006907,5.985480,-2.274474,-1.039057,-7.134459,-1.435917,-7.834285,-6.408300,-6.277681,9.235496,1.556895,5.993110,-8.847288,-1.877582,-9.266478,7.402524,7.443419,-0.518542,-2.216720,-0.475784,-2.939047,3.889716,-7.281891,-2.983369,-1.413889,4.922960,5.386454,-1.573404,8.788976,-4.512455,-4.295761,-6.814065,-4.735161,1.325824,6.763559,-1.840399,4.719216,-6.108012,5.393697,-4.973693,-3.589158,9.607214,-0.803359,2.976930,2.483605,0.057468,-3.559350,2.430065,-3.405479,9.234358,-8.153055,5.079817,-4.217276,1.509963,8.201832,4.661514,2.072520,8.703557,-8.521378,6.202175,-2.669463,5.875290,-9.479949,5.794299,-1.546928,-5.162325,-0.628032,-4.774524,0.065508,5.608804,1.819022,-5.821300,6.564074,-7.478300,4.826290,9.854397,8.662333,-0.652858,8.236123,-6.159008,-8.879166,-3.527213,3.430968,9.113494,-6.634006,1.886173,-5.278095,-6.539545,0.551414,0.974983,7.096765,-6.456448,-0.730358,-1.501147,-8.862832,1.390059,-3.075241,-7.603658,-9.770253,-5.606080,-9.374422,-2.397312,-5.532927,-3.935568,6.987159,-4.527683,7.827647,5.511989,2.264821,8.403157,2.502519,-3.993318,0.213416,8.017138,4.375016,-4.537336,8.940601,-3.548787,-1.263700,5.391518,-2.717519,-0.121057,-2.353141,5.919236,8.179681,0.568346,0.532163,-5.346629,-2.808734,-0.404542,-0.679307,0.693053,1.500662,4.478052,9.801883,-2.494804,-6.046024,7.349452,-9.607305,-1.823471,3.935960,-5.101355,0.867095,0.988012,-3.090270,9.073198,6.819003,-3.225131,-0.946406,-5.273386,-2.329238,-3.777461,5.323820,1.458545,-3.212106,9.292412,-8.282232,2.360029,6.099112,1.745608,-5.844526,-3.084261,-7.397819,6.562646,-7.727376,-8.433985,-6.822851,9.888922,-8.586082,2.750982,-4.612396,-2.631857,7.942832,-5.511895,2.429125,-6.694010,2.694857,0.807933,-1.414600,-5.593734,-8.678039,5.112360,7.789705,-7.108643,-5.693454,2.782948,-0.217171,6.196193,5.850667,-0.963792,7.465860,-1.181763,6.178722,-4.247448,-3.079436,-4.690954,6.404546,4.139185,-3.140955,-8.007994,-1.757359,9.974664,-5.711296,-4.087742,7.449221,-4.427380,1.668702,8.051580,-4.345127,-4.882501,-8.490742,3.210563,7.934402,3.105463,-0.066687,-5.988930,6.814858,9.589659,-8.394884,3.056749,5.481211,-7.233392,-3.010576,3.804617,-4.316501,-3.019608,1.157122,-1.990256,-8.750412,-2.314888,-3.645931,8.124358,0.756166,7.966722,-9.071932,1.001103,-7.815557,9.051294,3.035740,8.671585,-5.518428,-4.438341,7.602606,-3.097894,-4.770724,-1.420393,0.517881,-3.558331,-9.108276,-3.510902,-0.605093,-9.289060,-7.267391,-2.966788,5.119722,7.691521,0.100781,6.593543,-6.378862,-0.023365,-8.381024,7.924802,3.553927,-1.220200,3.646035,-1.813634,-8.283897,-1.761319,-3.279880,-4.436058,-9.142846,-8.919468,-2.299646,-4.266770,9.413805,9.789985,2.033391,-2.076941,7.959821,5.208505,4.498952,-9.019090,-0.010589,-5.195140,5.697118,-4.882895,-3.766439,7.605246,-6.408196,-2.118475,8.123733,-2.737135,-8.198608,2.341614,1.693300,7.162288,-3.878235,7.006130,-1.137095,-8.507441,-4.030348,-5.040041,5.186518,6.328386,5.773676,7.516502,-8.925528,-2.496737,-3.540202,-0.980011,-1.889485,5.638069,8.901015,0.606927,-3.591917,-3.509651,8.227547,-3.871074,-4.748497,-6.461400,2.313133,-9.858413,6.240124,-3.437065,-1.862013,-7.522494,-5.389676,-0.534752,-4.181679,-4.893710,6.440419,7.410914,0.210743,2.402334,-3.138718,8.559115,3.027314,5.928722,-2.588176,1.777630,-8.131884,3.322278,5.325000,-0.495736,-7.214906,-2.176890,6.653321,-1.513211,1.417343,3.155357,5.524083,7.335791,-3.093183,-4.682380,2.645212,-6.139341,1.952506,-3.010228,8.494028,-5.774663,9.971120,7.270367,-0.770143,8.298277,8.379104,3.415013,-5.925674,1.241179,6.045058,5.592555,3.230425,-3.492235,-5.304035,4.165077,-2.927605,6.291109,9.149545,-0.304919,-5.980984,2.342223,-8.400490,-4.462426,-4.273954,-0.417445,6.591962,-5.014929,6.146523,5.120934,6.520192,2.334818,-2.504320,-6.035935,2.693219,-9.448718,-6.312988,1.267696,-0.340388,2.152728,2.458047,3.764429,-5.069220,-5.303083,-5.998170,7.216497,-3.628846,0.311965,9.540556,-9.197349,4.579166,-9.329915,1.852328,-6.668857,3.374470,-9.761254,4.913504,-1.588760,4.907254,0.210438,-2.605659,5.948667,2.489202,-1.380520,-4.610355,8.645852,3.332135,-6.234709,5.009209,-6.885357,-1.007363,-6.828105,-1.115687,5.930067,8.212006,-9.108694,2.441615,-8.533230,-7.019869,1.343098,-5.096090,-7.741782,-3.956495,-0.002193,-4.125594,2.464845,2.779959,-7.763872,-0.188980,0.259354,4.969076,8.227996,1.700063,8.405731,-8.842580,5.440455,-6.108704,-9.609962,-9.537045,-9.508221,-4.876192,7.119467,4.757921,8.403572,-1.328741,2.406793,-0.360496,-8.564377,7.173287,-0.086948,5.571331,-6.550147,3.032744,-6.099777,4.679215,-1.623100,-2.619193,1.775085,-5.811975,5.535547,3.943425,-1.903850,-7.713714,3.532705,-9.346802,1.973898,6.425737,2.970679,4.061544,-5.381158,3.154143,-5.396080,5.663342,1.462268,-2.624781,-8.011732,-9.338026,-7.106818,7.574530,-5.165001,2.679848,9.681435,3.766220,6.401473,9.755812,5.248137,4.901257,-1.768712,0.746260,-1.821107,4.894214,2.198799,7.951657,-1.904401,5.617705,-4.409664,-6.657123,-6.969965,7.201908,-0.780738,8.830741,4.661048,3.000750,3.187233,3.983658,3.087646,-0.141101,-9.031853,-7.360971,0.142016,9.667059,-4.162946,0.807985,6.600409,-1.174391,4.896518,5.751637,-7.122328,3.445920,9.289166,4.863610,8.805928,8.507141,1.488778,-8.038974,-1.149884,5.544612,7.963872,6.262756,6.811358,7.520190,8.334511,6.590058,1.183814,-6.174248,3.981136,3.065764,9.427762,3.198778,-0.514153,9.502705,7.038903,5.305369,-5.260708,-2.059613,2.766454,-8.329194,-6.043487,-5.451611,-5.745111,7.352521,4.330239,-5.037018,0.138540,0.031725,8.654423,-6.818928,4.484439,-9.801852,-6.092209,2.110026,-2.355401,5.836862,4.983044,-2.955375,-6.719241,-0.347520,1.847635,-3.989276,-4.759296,-2.698754,6.715470,-5.424272,6.357025,-6.103534,8.260031,6.187937,7.365250,6.440368,-0.845391,7.487391,4.716313,-8.903579,-6.213036,6.620184,0.293997,6.129418,2.401340,3.694430,-7.105174,-3.126072,-9.887090,4.199153,-2.103952,-7.976310,-1.994670,6.483835,0.069972,-5.192268,8.526208,-4.260183,-0.424034,6.023596,-4.029536,-4.947245,-3.880729,-1.628770,-8.921834,-4.765391,-4.133533,1.826759,-5.124618,-6.593283,3.662156,-0.279066,5.211286,7.903125,-6.963123,1.087964,7.261520,3.430520,-1.125827,-5.443484,1.581400,-6.267352,-8.315128,-1.836655,-7.682387,-8.093369,-7.777446,-3.579450,-4.542429,3.276335,-9.335667,5.823081,-3.682880,5.132067,-4.386046,1.742073,2.680695,-5.458800,0.870217,-4.553405,8.609979,5.538526,1.422961,2.569491,8.688420,-9.199317,9.917081,-8.017944,-7.101595,3.944082,9.999075,-4.469943,-9.394916,-8.951645,-7.440825,7.157805,-2.031557,0.021659,8.041285,6.647814,6.160173,-4.330644,5.647063,-9.323968,9.033831,-7.112482,-8.275470,1.070338,6.398265,-3.305252,-6.991476,-3.101409,8.406534,6.997512,-3.456747,8.508759,-0.014714,8.282805,-6.262110,-8.912611,8.432673,5.185749,5.152744,-0.224074,-7.375888,-7.940149,-1.683205,3.738322,-5.878815,-5.167404,3.231431,-6.482178,-1.809950,6.380779,8.515779,-1.921984,7.271453,-9.955609,-2.774589,5.373880,-9.903451,3.729216,-0.308762,-8.211979,2.939248,-5.401014,-8.159998,6.466084,-6.090954,-5.545642,-0.605798,-7.977662,-6.027790,-8.746936,3.464756,5.390268,-0.576142,-7.484872,-9.453468,4.655291,-7.534005,-2.586157,6.413008,9.353598,3.574985,9.950397,-3.915320,8.090838,8.428718,0.797515,6.332231,-8.115623,8.003199,9.657303,2.990621,-1.574182,-1.940506,-5.496698,-3.905157,8.443427,0.760511,8.423930,-8.518717,-0.152905,-3.419104,-5.815726,3.644599,7.520677,0.246135,-1.633809,-2.722849,-9.048609,9.588552,-4.044347,-0.302205,8.231210,-6.197582,7.583886,6.963815,-6.264962,6.179705,-7.683686,8.263712,-5.588267,-9.294567,7.294982,0.757913,8.831741,4.537295,-1.312770,0.834733,4.082740,-5.330549,-8.885229,3.630484,8.071418,3.895432,2.841257,-9.553333,6.808226,-8.508903,5.055812,1.407375,-5.695553,-3.363498,-7.192758,8.567045,0.431823,0.247398,4.587020,1.817447,1.432150,-5.274231,0.644504,-5.310310,4.124321,-9.256226,-4.672425,0.573073,-4.601821,6.665728,8.976397,-4.698714,-1.082919,-7.831935,-5.339823,0.444421,-9.228062,-2.642213,-2.396337,7.741490,9.239099,-4.824532,3.566731,6.485414,7.329186,-5.133337,1.251996,2.595520,-4.848098,0.278251,4.735131,9.103988,0.765757,-7.736768,-1.025879,6.788936,1.818421,-4.726153,-1.540223,-2.600700,-0.252895,-6.938596,0.959382,-5.594379,-3.616799,0.908281,-4.686966,9.028381,-1.784747,0.564483,1.510480,1.349992,-6.045284,8.557549,0.731218,-3.433062,1.574581,2.342342,-7.936778,-1.278276,9.453711,2.873396,-3.335493,3.413611,-0.293309,-7.868075,-7.774664,-6.955761,4.261028,9.553588,0.099815,-6.698962,-1.691259,9.062686,3.979193,6.108059,0.335680,-2.425078,-7.110717,0.200289,-6.759843,-2.309068,6.869468,9.228888,9.538829,3.845842,-0.026682,6.517758,6.032701,-7.595738,-6.848244,5.350277,-2.102315,-0.158509,-2.359221,5.517387,6.001815,0.590467,-5.031457,3.587555,0.459278,-5.223405,-5.831858,-3.278553,-9.363654,8.512825,2.447148,8.336568,-4.876332,-4.410622,8.346273,-4.366184,4.393379,8.892098,-8.391719,3.521218,9.367223,-2.235259,6.784949,5.960231,6.905733,0.097180,5.763574,-4.013980,-6.914948,-6.927967,-0.704320,-3.713547,-9.973338,5.189856,-7.630528,-8.453555,-7.971224,8.487657,-5.157614,0.729130,9.015993,-6.189153,3.303780,2.046693,4.988235,3.246963,-9.773136,8.987978,5.801952,2.444679,-4.685268,2.260543,-9.645885,-6.261599,0.767440,-0.720244,-8.721424,-0.507961,3.795593,3.293540,6.326504,-2.036982,-5.775589,5.823414,-9.972164,8.703099,-2.636861,2.808281,-3.509334,5.198615,-0.547842,-2.320251,-0.265930,-0.124581,-5.004155,-5.893862,2.673886,2.644052,7.796242,1.214450,-3.493920,-3.358043,-6.742973,9.225814,1.009776,-2.843396,6.718932,5.567858,1.319554,6.104630,3.707487,-1.252015,0.500905,4.687989,-0.212611,-4.545177,8.599482,8.357364,5.417775,-8.869270,-2.269949,-7.494039,-5.325250,8.756088,5.813739,9.656095,4.852217,1.227724,-5.204140,5.352345,-8.744438,4.575651,-7.260588,4.298301,7.265785,-8.911400,-4.061076,6.755044,-5.737326,8.209663,-0.105685,5.093293,-4.682610,-9.324543,5.925839,8.241398,5.620458,5.963194,4.980128,2.795375,6.578302,-5.750153,-0.064204,-1.165587,9.193886,2.588023,-6.339273,9.851187,4.006370,9.610868,1.197048,-9.201468,9.158934,-9.568338,-7.636454,-8.720044,6.461794,-6.499159,-8.454278,4.946036,-6.421309,2.407636,2.801182,7.613374,-0.121599,5.834746,7.318512,9.974240,2.759122,9.742360,5.132872,8.198843,2.788314,3.005998,-1.669295,8.276078,5.121602,-2.153959,3.568774,0.639476,-3.964824,5.351002,5.110867,8.211597,-4.921466,-6.337259,-6.877963,-0.147421,8.626115,2.848303,-9.128217,-5.764361,-7.484343,-4.377047,-1.576980,0.506515,-3.989408,-7.146766,2.766027,8.061199,4.824272,-1.604056,4.776970,6.630655,-5.489075,3.853878,8.757938,-9.731940,-8.548365,8.538706,-4.717819,5.464873,1.518506,-7.870083,8.931241,-5.915409,-7.919016,-0.274312,9.381458,-0.841911,6.284707,8.230532,-6.931049,-8.262039,-1.921445,2.673577,-4.083715,-1.177765,6.464560,6.132006,-0.922048,6.489604,-0.824764,-9.177054,2.331072,6.183878,-9.282460,3.642109,-9.157640,0.851260,6.509439,8.922742,-6.495619,6.658448,1.574115,-7.464175,-7.092526,-2.597618,-8.624611,-1.498350,3.655323,-4.116226,-3.484685,-2.025252,1.805689,-5.581153,9.585452,-2.678865,2.259542,5.550562,-5.261454,-2.961837,7.438788,5.366317,1.024282,0.369406,4.822694,0.421587,9.160938,-2.622255,4.542236,2.931117,0.295867,-8.760056,7.172505,9.879312,-5.149245,-7.274135,-0.047279,2.877309,3.197665,-0.465780,-4.253615,5.088512,-5.869401,-3.710140,-6.795656,-6.649714,1.707562,-4.075521,-5.951305,3.223881,7.249964,-6.665442,2.304317,0.102940,-6.684981,-7.211443,4.626083,-8.719750,9.049283,-6.826876,-5.026290,2.178645,9.302707,-4.957986,3.867271,-1.982308,6.078102,-6.727871,-6.022932,9.760274,-8.511770,9.616597,5.860361,0.619608,-9.687515,-2.969066,-1.520933,8.725975,2.559946,1.265551,1.462797,4.354536,-8.143356,1.310244,-6.571472,6.926380,-2.240013,-7.372177,-5.616494,4.452731,6.789269,4.584836,1.077183,-3.215163,-2.781020,-2.346841,4.895869,-9.535300,2.361052,6.275133,-6.221490,-2.056403,5.215068,3.843004,-2.116263,2.413705,-8.629765,8.727015,5.346492,2.645014,5.070595,3.552856,9.736327,-5.683500,5.113580,-2.938841,-4.914289,8.883631,-6.144111,0.684155,0.840621,-7.331652,7.763808,5.730754,3.421801,-3.256890,-4.232078,-1.189404,8.958794,9.848431,-9.453846,4.004613,-2.104340,-3.457720,0.670738,-5.068833,-6.465459,-6.841601,-3.860457,-2.503808,-4.243990,7.413565,-8.779119,5.234416,-4.444089,1.707405,-9.493522,-2.890809,0.179310,7.428774,-2.590331,5.075490,4.562422,3.125741,8.346430,6.493312,-0.138239,5.079801,-3.119541,9.373374,9.179938,5.512152,3.649678,-8.660703,8.758366,5.602008,1.911292,-5.625986,-5.755761,1.514163,-4.921331,-1.980121,8.795668,9.604979,-4.851550,-1.852209,8.918985,7.865180,5.738116,1.856690,-3.380263,0.879187,9.306299,-4.558247,2.284262,-3.749957,-7.427550,-3.426999,-3.575139,-2.325684,-0.085893,-2.704953,-2.892932,-0.065780,2.194350,-3.222229,-8.625250,-3.215018,-1.794448,-0.880143,-5.845617,9.594278,1.472226,-1.272345,0.971739,-8.332808,2.550692,-1.779245,-5.567681,-9.663972,-9.664170,1.935853,-5.731616,5.066163,-5.675013,-2.912951,-6.291155,-1.144529,7.546593,5.656489,1.909198,6.263963,-7.150524,-4.628003,-1.262334,-9.696093,-4.239341,-5.543616,0.681273,9.457513,1.991667,-7.479940,2.234744,7.161235,9.300446,9.543061,-1.141376,-3.631290,-3.969363,8.469484,2.502262,-9.996479,-8.512053,-2.100776,-6.418237,4.837783,3.434867,2.343608,-1.513304,6.212525,4.408930,-1.965880,9.602056,-0.164781,-0.304102,6.464907,0.566781,6.100683,-8.944993,-4.482292,9.428119,-5.064788,6.569645,8.365576,-6.235432,-7.604133,5.592769,1.648033,9.872236,1.712405,1.744658,4.081440,-9.994241,-1.464192,-1.695017,5.005848,1.266501,-1.279536,5.156146,-0.897163,-6.092358,3.308844,-0.052510,6.777987,-1.520221,6.317761,9.806783,-6.621745,1.055489,-2.956222,2.943743,8.013954,6.884470,-3.486019,5.446204,-1.990171,5.701928,1.536123,-1.182661,0.815392,8.456832,-5.931053,0.806501,-4.787118,-6.360502,-5.816859,-1.064367,-3.729291,1.366024,-5.678911,3.988065,-2.949089,-4.322228,-4.085843,-3.777332,7.394935,-1.838279,-9.908064,7.823647,-1.095923,5.905376,1.826255,-6.193475,2.469662,-1.388946,-5.683580,-4.563387,-7.935756,7.079902,8.009667,-1.332225,5.955883,6.863075,-3.998708,9.949909,-2.100349,0.170709,-4.909750,0.654530,0.653447,-7.590498,4.932175,5.655303,6.849746,1.404162,-7.704249,-7.139088,-6.688087,-9.149834,-2.041867,-2.636117,-5.984735,-6.920701,7.627715,2.329951,-3.138521,8.144903,-6.330514,0.838378,0.121489,8.198601,9.115508,9.660287,4.990786,-5.100210,0.505156,-3.219955,4.822638,2.652581,-9.204947,0.937974,-8.515751,-1.898931,8.067817,-1.329655,-6.621521,5.215823,1.550076,-6.355314,-9.197118,-5.741245,1.645696,8.886194,-2.474147,6.735579,7.901692,0.320350,1.689187,0.953801,1.926255,7.933186,2.480062,5.608133,-9.956504,1.338134,8.087012,-2.790135,-8.896438,2.719635,-9.991785,9.802587,9.276902,1.301664,-1.696637,-5.277219,9.140486,-6.399129,-8.407398,8.451081,0.345206,4.121263,4.816211,9.131361,7.877139,-8.901952,9.970546,-6.346595,-9.687515,-3.913537,-0.948755,-2.241700,-4.665243,-9.937882,7.125814,1.859963,-4.003485,2.350138,9.323830,8.516938,3.310803,-9.473818,2.962015,5.422079,1.890524,-9.370988,-1.949557,9.787415,1.294864,0.516326,9.343758,6.146833,3.988575,8.548174,4.085027,-9.645102,-9.318787,-5.590678,1.470912,7.946370,1.394181,-9.905380,2.111536,-0.277617,3.134593,1.250973,8.274766,-5.505501,7.020193,8.529110,-9.329730,1.047645,-6.402395,-3.676293,0.775801,-8.143000,3.928696,8.221196,-3.437816,-3.908944,8.581960,2.699078,-4.721202,-8.122637,4.827492,8.900018,2.339791,1.705625,-8.996017,6.982948,3.226793,-6.894322,-7.959088,1.427394,1.148439,-4.438512,9.691225,3.950395,6.308596,1.075528,7.823494,-7.356349,0.281620,7.066656,6.040753,-6.205245,-6.645196,4.369966,-1.142338,-9.657709,-6.539435,-0.595764,-5.900977,-4.356789,3.637623,-6.771813,-1.258741,4.598823,-5.690835,3.570103,3.651926,7.050977,-5.541284,-8.879545,7.852086,-3.723059,7.013884,-0.886626,9.992085,2.239176,-4.628018,5.450749,-6.046147,9.972010,4.230856,-8.372661,-8.966639,0.465385,4.987162,1.919599,-3.258036,-1.099672,-9.747448,8.071214,8.019347,8.932637,-8.038015,-5.787441,4.541177,-8.954110,-1.552186,-9.101075,-2.779381,3.170606,8.527404,-2.625591,6.539014,-9.026802,2.002191,9.493040,-5.443362,2.103880,1.486336,-2.578182,9.609182,-1.496875,6.791184,-8.537182,-8.889307,5.813923,-1.417881,6.055517,5.435615,7.655312,7.840260,7.516002,3.608380,-7.624416,2.413875,-5.578127,1.739458,-1.778460,5.752835,-6.253772,1.457102,9.396826,-8.224783,3.110728,-8.665657,-2.526445,7.212157,-5.425460,-9.110643,9.048159,1.498677,-5.778011,-9.322609,6.836779,4.690020,8.076625,-6.913834,-9.976007,7.591998,-1.097057,2.329812,8.769903,-0.894498,8.309989,0.135881,-7.329722,-4.683435,1.214665,-0.391294,-1.550398,9.857411,-7.828975,0.073105,-2.672092,-8.916377,-1.438640,3.635421,-3.596286,7.697363,6.010617,-4.851551,2.421616,-5.272543,-4.771402,-0.673975,2.984701,-6.005374,9.082318,-3.887831,9.939338,-3.629599,-4.752749,7.851356,9.773594,9.614340,5.630699,8.729296,-3.972216,-8.034793,-0.714511,-3.855132,-4.248752,7.868307,-7.760913,2.766961,-9.271625,9.831110,7.335278,7.985651,-4.246421,3.472503,-6.775016,-5.722931,3.781697,5.172731,3.848274,1.950827,8.328114,9.896888,-9.014186,2.856999,-6.240680,-5.295833,2.536197,7.226969,-0.561436,-5.676611,2.020256,2.054592,1.176582,-7.289909,-7.780563,-2.868156,-7.258699,0.133173,-2.122083,1.679501,-4.439298,-4.696043,7.798994,6.111409,8.043453,-4.769050,-1.879629,5.205871,5.068510,7.645611,0.230240,7.508043,3.125051,-0.180484,6.875324,3.206734,5.207752,1.132967,7.884807,-5.793515,-3.608942,9.433020,1.544741,-0.185948,-3.951790,-7.402387,1.224932,5.218535,3.261291,-7.634866,1.676987,-5.780634,-6.135847,8.790835,-8.425970,-2.520066,-3.966822,7.280274,-9.042540,-2.769613,9.088469,-7.558748,-3.581001,-4.662766,4.094698,-0.174396,-1.469932,-4.567493,9.836891,-7.666810,5.142703,-4.169335,-3.777607,6.922165,-1.938381,5.497829,6.016660,-8.219334,3.462257,1.454463,-8.034126,1.129197,-1.106073,9.115358,1.217772,7.409683,-2.507606,-2.369918,9.250935,0.883500,-9.714065,-7.362390,-0.912998,9.494525,1.876512,-7.648717,3.063984,-7.879980,0.629757,6.596334,6.004444,-6.061132,-4.021934,-1.266499,-5.430196,3.787857,-9.194877,-9.451712,4.328756,-1.820964,-6.514902,-9.162141,-6.100634,8.555960,-6.439759,-1.867141,0.588698,1.439170,1.864714,-7.466873,2.708563,-3.613281,3.063022,-0.384481,2.338053,4.747319,7.260219,5.562394,-9.509332,-7.803076,4.419609,-4.842384,4.258541,-6.561577,2.051753,-1.960333,1.413090,-6.126313,-5.238314,3.733166,9.743282,4.771229,-7.065221,-1.557691,-6.517253,8.803882,4.861402,-8.330302,2.871082,2.970142,3.641940,0.745493,4.446195,7.659307,-1.568505,3.974443,0.516021,-9.124377,0.572844,-7.674251,8.631108,0.240320,1.789368,8.547492,-3.561361,9.789620,1.189868,-1.609657,-2.226202,-8.356749,-6.844130,-1.170101,-2.147455,8.457339,1.538516,9.396133,8.455125,7.960443,1.861003,9.797529,-7.253488,1.608966,4.730608,-4.932135,-1.361311,-0.075452,-9.674732,-4.989266,-1.946417,-3.463729,-2.429489,-2.349874,-5.512542,-9.961793,7.327090,9.479134,3.407481,8.754300,4.457497,-8.546853,-2.704957,-5.697291,-6.867920,3.287072,4.865671,-8.786454,-4.216737,2.873922,0.545882,-4.467552,-3.015263,-0.346546,-7.771795,-2.228279,1.441740,8.597141,-5.767743,-4.645606,8.664554,8.491754,9.034201,-4.134936,-5.382049,-1.106459,8.337238,-7.841492,-1.934591,0.322911,-9.752250,-7.893705,5.844062,7.406314,-7.060237,-8.665975,-0.373646,-3.753439,8.044153,0.575043,-8.413580,6.196635,-3.416730,2.990968,-9.566237,7.369904,9.368833,-9.908642,-2.651216,-4.415222,0.416229,-9.215798,-0.079316,2.639398,5.768189,2.902437,-1.059087,8.589671,2.197468,-3.218197,-8.980243,-9.420624,9.614453,-6.495221,0.392360,-4.663157,8.136608,-3.473231,8.546098,3.744134,-4.565871,3.954464,-5.389719,2.226643,3.933316,3.062175,2.542033,0.667816,0.117278,-6.149000,-7.443495,2.189169,8.675487,3.552989,-1.259435,0.759194,-9.533567,5.639070,-8.782354,-2.703578,-8.712928,7.947294,8.810971,0.420218,-7.700081,7.245778,-4.146858,-5.161604,-9.851921,7.186993,-3.308820,4.167912,4.602074,6.906576,5.425798,7.980380,-9.726258,-2.748217,-0.643326,-8.291420,7.437659,2.567291,-5.023302,-1.499768,-7.208646,4.233658,-9.646208,1.714670,-0.657588,6.990845,-3.433158,0.116215,7.950649,-3.109325,8.986989,-2.942176,4.851938,8.160520,3.744225,-2.010691,3.610045,5.029839,0.244750,7.844997,3.760874,6.118579,5.297562,-8.429402,-3.529645,-5.636459,0.728959,0.291401,5.847290,2.610098,-3.264880,-6.905637,0.029870,9.741685,-4.528253,-4.200596,-0.915395,9.197201,4.306211,-5.982201,-6.430784,8.808289,-8.154467,-4.300593,7.269188,-5.527358,-8.570940,8.103787,-6.070115,-4.241642,1.589963,1.255383,-4.715724,-2.372409,-0.083312,-4.374132,8.403950,7.583763,-1.904623,1.082832,7.112642,1.338872,-7.952889,8.628684,8.175737,3.328522,4.780759,-6.241190,0.361431,6.441368,-9.048667,4.234531,8.446239,9.073725,-5.492970,-0.075595,-7.713310,5.890386,-5.467054,-8.243066,-5.153600,8.072044,-1.505448,-0.809278,-6.606418,4.319269,7.634652,-1.133674,5.349787,-7.917303,1.195054,7.177840,-2.619497,-1.864184,-8.811938,-3.438721,0.029010,-2.872016,-9.890006,9.897844,-7.549351,7.207444,0.732792,-4.710912,4.780052,8.370508,9.217379,-0.113033,6.568477,0.862611,6.307424,5.692229,3.643522,-8.273954,-0.607774,-3.801738,5.238592,-3.587604,3.481405,0.585351,4.622618,5.130779,-7.528064,-3.813990,8.340788,5.987582,1.505090,8.235821,-3.069734,-7.506242,7.701950,8.144560,-3.962208,-5.448991,-2.025197,-3.182201,-7.368281,4.710644,-8.330470,-0.274198,0.243489,-4.847440,-3.079419,9.257667,-3.104684,6.134330,-6.736387,-5.728094,-3.183839,-2.105130,-8.580643,-9.792286,1.842534,1.118215,7.691553,4.089452,4.974294,-4.620969,7.806024,-1.824492,0.563196,5.271136,-8.856790,3.230679,-8.529445,-2.096932,-5.062526,8.799459,-9.648014,1.464470,4.765024,-2.687006,0.721817,-1.617859,-5.448241,-4.471468,1.568484,3.770861,6.926267,-9.658349,-2.886959,-0.681674,-3.705518,-1.475806,4.228739,-5.758483,-0.395920,9.050019,3.202047,-4.566169,3.888252,-2.060043,9.422173,-1.232247,-1.385977,-7.853023,0.077842,0.636084,9.624508,-6.936150,-4.166881,8.084181,1.138182,-1.871617,-5.951146,-4.027619,2.205068,-1.687567,-9.339404,6.783381,-8.800104,-7.834227,-8.064133,9.195602,0.984786,-0.175461,-8.238596,5.624788,4.919715,1.631638,-3.518800,6.653900,-9.063696,-6.910771,-5.801352,5.959352,-5.654782,5.672767,7.224868,-8.525651,-5.684924,-8.126342,-5.611591,1.630085,3.437385,6.249024,-8.904753,4.142144,8.983946,-4.137660,6.357198,-0.188913,4.702941,4.136864,-5.683947,8.213187,-7.445152,9.417555,1.300771,-5.560805,4.161486,1.231031,-6.518708,-8.095334,-9.405779,-7.223220,-5.073764,0.544632,-7.983505,9.096780,-6.876164,7.909086,-6.484414,7.013984,5.919310,9.187555,-2.275320,2.829061,2.737996,-5.863201,-6.070366,-9.776725,3.086501,-0.358300,-1.547285,-6.182643,-3.758532,4.880850,-2.299663,3.591314,0.877598,0.246589,1.215300,-6.451979,-7.868567,-1.240693,6.568993,-5.322437,1.839085,-0.624708,-0.883454,-9.060969,8.808351,5.695091,9.571908,6.477828,7.556309,-8.639031,3.630727,-2.906653,2.589295,-5.161627,0.510186,5.164518,0.422290,-0.758168,-8.025843,8.908013,-8.988220,3.999675,0.720056,-5.302209,5.304472,5.480337,-2.405393,8.770958,-0.477935,-3.461833,-3.827185,-3.943949,-6.513567,4.721394,-4.093500,-1.306941,9.157473,-5.459247,-1.560632,-1.512852,4.901376,8.613238,9.299024,6.599986,-5.339472,5.230912,3.624146,9.589017,-0.854625,-7.982193,6.232759,6.231598,-0.676032,5.843208,8.752152,9.230039,4.744224,-1.775870,4.265259,-7.300623,5.119218,-2.460357,-6.777138,-3.960107,-7.121892,3.039737,6.369774,-0.440211,-8.765995,6.630350,1.660885,-3.054364,9.861564,8.760490,-6.692361,-9.694006,8.464436,-5.689308,-5.258051,-8.536252,0.825690,-4.104026,8.781562,-1.505037,-3.374146,7.399776,-8.126899,-4.627518,-5.078338,-9.491735,-9.523522,-8.306366,2.664434,3.881232,-6.895698,-9.135795,0.687277,-7.940609,-4.190574,-6.787281,-9.717333,-0.223494,9.357773,-4.604625,2.105639,-5.504249,-9.224713,4.097518,7.533120,0.724064,7.756940,8.185677,1.728950,7.098061,-9.029649,-1.018088,5.369380,-8.815033,-0.135116,-0.398494,4.972601,9.358593,5.663269,-9.727452,5.521333,-2.472032,1.247538,9.114859,-1.370624,-5.173340,-8.567068,3.165795,-1.989168,-5.460931,7.487976,-2.705296,8.924489,-4.207866,-8.502714,4.646999,-1.922413,-8.711202,9.250247,-4.409372,-2.351430,-4.177909,-1.244964,-8.187527,6.693987,4.929009,0.534515,-8.832911,3.763034,-1.650667,0.174367,7.286005,4.607774,5.911035,9.523866,-5.347463,3.063543,-5.295161,2.605110,-2.623269,7.433542,7.294169,5.186211,9.702577,-3.836893,-5.377970,0.573325,3.612960,-9.308554,1.489407,2.856655,4.166279,-9.397573,-9.086668,8.080550,1.563027,-1.475150,0.609789,-2.215439,-8.120499,-1.370061,-3.604609,-1.967797,8.183470,-7.836274,-4.141959,-5.634710,-7.494531,9.964237,-4.773790,5.382302,3.840239,-1.044768,2.510829,8.056685,0.551794,6.851920,0.106998,-1.360972,-6.589535,5.125716,-2.508315,-6.740554,-8.241892,4.464221,-8.932352,-4.998475,-8.721171,9.359486,4.503005,1.431704,-4.969358,-8.359683,-8.737067,-1.859281,-2.370941,9.418817,-0.247807,2.542118,8.211037,8.354796,-6.011057,6.913034,3.920835,-7.361615,6.714367,7.365403,-5.100057,5.316751,-9.303973,8.065111,2.268698,5.197720,3.423474,-1.291859,8.311614,-5.251414,-7.024393,-1.647739,-0.771549,-9.411256,-2.035981,-9.084678,-5.555637,4.190544,0.360206,8.768061,5.648694,-8.110503,8.546632,3.283576,6.538994,-2.289586,8.543231,0.496422,-6.509421,3.971490,3.692841,5.435737,5.626483,4.238725,-2.308367,3.420869,4.352098,-7.858724,2.713766,-6.881192,6.132718,-7.644900,2.027356,9.651001,2.729373,2.716765,-5.980501,-2.266004,9.696999,-8.669022,-3.676735,-7.129902,-0.086906,1.432423,-1.710950,-0.853053,-8.433429,8.607672,-3.098909,7.257586,5.414619,-3.166350,-1.918112,-8.480859,-5.178749,7.419144,-9.462449,2.261575,-0.054960,-9.741037,-0.009716,-8.354522,0.251480,-4.756255,-2.793652,-1.131362,-4.198183,7.370265,2.733356,7.974708,7.475572,9.704188,-7.875216,-6.672431,7.297143,0.575352,5.459766,-3.495980,4.271263,-4.213011,9.798228,-1.413942,9.049386,-2.893458,3.648206,7.495662,-7.273505,-1.881531,7.973250,4.448368,-3.773941,-5.082286,-7.921504,-5.416554,3.342266,-5.513854,3.700346,2.207306,-5.421171,-2.314652,0.717590,-9.502937,-3.975051,-3.803727,5.951957,-7.910324,-9.964794,4.201589,5.821979,8.670307,-6.691285,6.809893,-7.113525,1.063916,-2.758884,-4.831368,1.289547,8.841251,8.536005,3.820073,0.730062,-0.519349,-3.218171,6.086349,-1.617236,-1.022551,-0.900241,-5.025261,-1.915809,0.394298,0.141187,-0.453554,7.610128,-4.150871,7.614795,9.169656,7.662103,8.872322,-6.506105,-7.171040,9.450849,0.098957,-7.109481,-7.840626,9.167206,-7.640194,2.696241,0.675094,-9.319940,3.858415,9.331295,4.399333,2.336283,-0.029132,7.983571,-7.237212,-5.087176,-1.272120,0.786032,1.594921,-4.308709,-0.934543,2.608101,-1.720986,2.463833,8.765700,9.138789,-1.143031,4.851554,-7.116116,9.221903,0.010038,-7.898916,-2.800226,-2.775199,3.752115,0.986463,-9.111554,2.042426,7.970547,2.790589,-3.057873,3.226073,6.340789,9.025967,4.797965,-5.776293,-0.907733,-7.443280,-6.097300,6.724338,5.059292,5.251073,2.103580,4.859601,-2.777478,6.496853,5.781943,9.549429,-3.962602,-0.853967,1.659122,-7.309418,5.425836,-3.913259,-2.391957,9.584495,6.816541,6.445539,-6.896267,1.446335,2.399354,3.508677,9.959924,9.649116,6.132782,0.324742,-5.033766,9.256190,-7.861091,-0.069328,4.055394,-6.022311,-4.855882,6.193559,-6.804893,8.871186,5.107540,-3.599880,5.697335,-6.420179,0.182202,2.877589,-3.747500,-3.012014,1.261733,9.321719,-4.978759,6.952784,3.081110,1.957598,2.904849,-1.988270,1.986167,6.582445,-9.587088,-0.184416,2.314053,-2.599081,-8.351760,-2.880158,0.546001,-9.374638,8.200802,-1.553467,-7.225307,3.807815,1.358044,-1.240177,-3.951603,1.288533,-6.281898,8.866317,-9.997510,9.369242,-7.783664,-1.260684,9.405310,4.458119,-0.320634,9.718760,-2.847190,-8.539745,-0.123333,-3.621132,-4.727354,-4.966525,4.976654,-5.015827,9.199772,-6.418639,0.712177,2.738641,7.395503,1.579418,-4.269299,-8.757442,6.628050,-6.407028,-4.682337,6.904471,7.858073,9.016022,9.529921,-9.212946,6.133204,-2.021092,7.836382,8.408953,-8.793899,-7.265093,8.152870,8.455576,6.126550,0.329216,0.880706,-5.378523,-8.529233,0.212053,5.161545,-7.158176,2.689389,7.838226,-2.611588,4.318455,0.846241,4.183311,6.676715,-5.034636,2.087106,-5.103643,-3.013346,7.320346,-3.721425,-7.331520,-8.430749,-1.199207,8.697231,-4.765685,-9.207571,-9.367691,3.387051,-7.528693,8.444509,0.054614,-8.267584,7.822921,-5.529787,9.836378,6.720668,-2.305257,-4.558570,2.067127,-9.656182,6.224979,-5.407223,-9.366032,-1.469346,-8.518275,3.310650,-7.022178,2.453517,-6.513993,-0.521273,-9.632619,8.320667,6.338856,4.027151,1.793839,-2.500924,-5.072880,7.640135,-6.193380,6.785754,8.982115,-7.928243,1.272643,1.823469,7.567454,2.657605,6.892728,-9.246963,0.537380,-9.555886,5.181603,2.941849,7.766700,-8.824513,-1.282161,-1.662526,5.712292,6.649831,-4.531572,-3.516084,-2.218465,4.165897,2.314881,-0.914819,9.030095,4.635175,7.970787,-1.953033,5.947383,-3.532777,-6.696886,8.180400,4.175758,-3.063530,9.625493,6.338158,7.428742,-5.089824,-4.755621,7.533371,9.403607,-8.720498,3.687089,6.540547,-4.223265,9.309429,-6.940582,-2.956832,9.000524,7.915517,0.957963,1.250258,5.173139,2.767166,-0.123799,7.322831,-5.775512,6.128090,-6.663150,-7.677759,-6.723206,5.435439,4.445916,4.364429,7.499433,7.488850,2.303569,9.552681,-2.508692,7.336610,2.691719,-2.498648,-6.322927,6.766542,-5.668294,5.651926,7.325389,8.903617,-9.460631,-7.960566,0.287294,0.754170,-4.648704,0.802078,7.041372,0.154779,0.280316,-0.956899,7.784807,-2.071695,-3.906286,0.380627,6.810876,-2.921701,4.291477,7.883804,-7.698642,3.731208,6.638106,-6.316880,2.086500], dtype = "float64")#candidate|5518|(3375,)|const|float64
const_5519 = relay.const([5.527821,6.412851,8.222206,4.537389,-5.617142,8.362941,3.998419,8.722237], dtype = "float32")#candidate|5519|(8,)|const|float32
var_5520 = relay.var("var_5520", dtype = "float32", shape = (24,))#candidate|5520|(24,)|var|float32
call_5516 = relay.TupleGetItem(func_3881_call(relay.reshape(var_5517.astype('uint32'), []), relay.reshape(const_5518.astype('float64'), [225, 15]), relay.reshape(const_5519.astype('float32'), [2, 4]), relay.reshape(var_5520.astype('float32'), [24, 1]), ), 10)
call_5521 = relay.TupleGetItem(func_3886_call(relay.reshape(var_5517.astype('uint32'), []), relay.reshape(const_5518.astype('float64'), [225, 15]), relay.reshape(const_5519.astype('float32'), [2, 4]), relay.reshape(var_5520.astype('float32'), [24, 1]), ), 10)
output = relay.Tuple([call_5497,call_5516,var_5517,const_5518,const_5519,var_5520,])
output2 = relay.Tuple([call_5498,call_5521,var_5517,const_5518,const_5519,var_5520,])
func_5523 = relay.Function([var_5517,var_5520,], output)
mod['func_5523'] = func_5523
mod = relay.transform.InferType()(mod)
mutated_mod['func_5523'] = func_5523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5523_call = mutated_mod.get_global_var('func_5523')
var_5525 = relay.var("var_5525", dtype = "uint32", shape = ())#candidate|5525|()|var|uint32
var_5526 = relay.var("var_5526", dtype = "float32", shape = (24,))#candidate|5526|(24,)|var|float32
call_5524 = func_5523_call(var_5525,var_5526,)
output = call_5524
func_5527 = relay.Function([var_5525,var_5526,], output)
mutated_mod['func_5527'] = func_5527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2783_call = mod.get_global_var('func_2783')
func_2785_call = mutated_mod.get_global_var('func_2785')
call_5569 = relay.TupleGetItem(func_2783_call(), 4)
call_5570 = relay.TupleGetItem(func_2785_call(), 4)
output = call_5569
output2 = call_5570
func_5585 = relay.Function([], output)
mod['func_5585'] = func_5585
mod = relay.transform.InferType()(mod)
mutated_mod['func_5585'] = func_5585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5585_call = mutated_mod.get_global_var('func_5585')
call_5586 = func_5585_call()
output = call_5586
func_5587 = relay.Function([], output)
mutated_mod['func_5587'] = func_5587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1387_call = mod.get_global_var('func_1387')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_5609 = relay.TupleGetItem(func_1387_call(), 0)
call_5610 = relay.TupleGetItem(func_1388_call(), 0)
output = relay.Tuple([call_5609,])
output2 = relay.Tuple([call_5610,])
func_5617 = relay.Function([], output)
mod['func_5617'] = func_5617
mod = relay.transform.InferType()(mod)
mutated_mod['func_5617'] = func_5617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5617_call = mutated_mod.get_global_var('func_5617')
call_5618 = func_5617_call()
output = call_5618
func_5619 = relay.Function([], output)
mutated_mod['func_5619'] = func_5619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4042_call = mod.get_global_var('func_4042')
func_4043_call = mutated_mod.get_global_var('func_4043')
call_5681 = relay.TupleGetItem(func_4042_call(), 0)
call_5682 = relay.TupleGetItem(func_4043_call(), 0)
func_3234_call = mod.get_global_var('func_3234')
func_3237_call = mutated_mod.get_global_var('func_3237')
const_5690 = relay.const([2,-2,-2,-1,-10,7,-4,8,-8,2,9,7,-9,-1,6,3,-9,-4,-1,-4,-1,-7,-5,-9,-9,1,8,-8,-10,8,-10,-3,-8,-7,-2,-2,-1,-8,-3,1,7,-9,-2,10,3,-10,-10,1], dtype = "uint32")#candidate|5690|(48,)|const|uint32
call_5689 = relay.TupleGetItem(func_3234_call(relay.reshape(const_5690.astype('uint32'), [8, 1, 6])), 0)
call_5691 = relay.TupleGetItem(func_3237_call(relay.reshape(const_5690.astype('uint32'), [8, 1, 6])), 0)
func_1970_call = mod.get_global_var('func_1970')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_5699 = relay.TupleGetItem(func_1970_call(relay.reshape(call_5681.astype('float64'), [14, 7, 14]), relay.reshape(call_5689.astype('uint32'), []), ), 4)
call_5700 = relay.TupleGetItem(func_1973_call(relay.reshape(call_5681.astype('float64'), [14, 7, 14]), relay.reshape(call_5689.astype('uint32'), []), ), 4)
func_2706_call = mod.get_global_var('func_2706')
func_2710_call = mutated_mod.get_global_var('func_2710')
var_5706 = relay.var("var_5706", dtype = "int16", shape = (1, 2112))#candidate|5706|(1, 2112)|var|int16
call_5705 = relay.TupleGetItem(func_2706_call(relay.reshape(call_5689.astype('int16'), []), relay.reshape(var_5706.astype('int16'), [16, 11, 12]), ), 1)
call_5707 = relay.TupleGetItem(func_2710_call(relay.reshape(call_5689.astype('int16'), []), relay.reshape(var_5706.astype('int16'), [16, 11, 12]), ), 1)
output = relay.Tuple([call_5681,call_5689,const_5690,call_5699,call_5705,var_5706,])
output2 = relay.Tuple([call_5682,call_5691,const_5690,call_5700,call_5707,var_5706,])
func_5714 = relay.Function([var_5706,], output)
mod['func_5714'] = func_5714
mod = relay.transform.InferType()(mod)
var_5715 = relay.var("var_5715", dtype = "int16", shape = (1, 2112))#candidate|5715|(1, 2112)|var|int16
output = func_5714(var_5715)
func_5716 = relay.Function([var_5715], output)
mutated_mod['func_5716'] = func_5716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5485_call = mod.get_global_var('func_5485')
func_5487_call = mutated_mod.get_global_var('func_5487')
call_5756 = relay.TupleGetItem(func_5485_call(), 0)
call_5757 = relay.TupleGetItem(func_5487_call(), 0)
output = relay.Tuple([call_5756,])
output2 = relay.Tuple([call_5757,])
func_5768 = relay.Function([], output)
mod['func_5768'] = func_5768
mod = relay.transform.InferType()(mod)
mutated_mod['func_5768'] = func_5768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5768_call = mutated_mod.get_global_var('func_5768')
call_5769 = func_5768_call()
output = call_5769
func_5770 = relay.Function([], output)
mutated_mod['func_5770'] = func_5770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5275_call = mod.get_global_var('func_5275')
func_5277_call = mutated_mod.get_global_var('func_5277')
call_5856 = func_5275_call()
call_5857 = func_5275_call()
output = relay.Tuple([call_5856,])
output2 = relay.Tuple([call_5857,])
func_5864 = relay.Function([], output)
mod['func_5864'] = func_5864
mod = relay.transform.InferType()(mod)
mutated_mod['func_5864'] = func_5864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5864_call = mutated_mod.get_global_var('func_5864')
call_5865 = func_5864_call()
output = call_5865
func_5866 = relay.Function([], output)
mutated_mod['func_5866'] = func_5866
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5965 = relay.var("var_5965", dtype = "uint16", shape = ())#candidate|5965|()|var|uint16
var_5966 = relay.var("var_5966", dtype = "uint16", shape = (1, 2))#candidate|5966|(1, 2)|var|uint16
bop_5967 = relay.equal(var_5965.astype('bool'), var_5966.astype('bool')) # shape=(1, 2)
output = relay.Tuple([bop_5967,])
output2 = relay.Tuple([bop_5967,])
func_5993 = relay.Function([var_5965,var_5966,], output)
mod['func_5993'] = func_5993
mod = relay.transform.InferType()(mod)
mutated_mod['func_5993'] = func_5993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5993_call = mutated_mod.get_global_var('func_5993')
var_5995 = relay.var("var_5995", dtype = "uint16", shape = ())#candidate|5995|()|var|uint16
var_5996 = relay.var("var_5996", dtype = "uint16", shape = (1, 2))#candidate|5996|(1, 2)|var|uint16
call_5994 = func_5993_call(var_5995,var_5996,)
output = call_5994
func_5997 = relay.Function([var_5995,var_5996,], output)
mutated_mod['func_5997'] = func_5997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_871_call = mod.get_global_var('func_871')
func_873_call = mutated_mod.get_global_var('func_873')
call_6039 = relay.TupleGetItem(func_871_call(), 0)
call_6040 = relay.TupleGetItem(func_873_call(), 0)
func_5219_call = mod.get_global_var('func_5219')
func_5221_call = mutated_mod.get_global_var('func_5221')
const_6058 = relay.const(-1, dtype = "uint32")#candidate|6058|()|const|uint32
call_6057 = relay.TupleGetItem(func_5219_call(relay.reshape(const_6058.astype('uint32'), [])), 0)
call_6059 = relay.TupleGetItem(func_5221_call(relay.reshape(const_6058.astype('uint32'), [])), 0)
func_3492_call = mod.get_global_var('func_3492')
func_3494_call = mutated_mod.get_global_var('func_3494')
const_6065 = relay.const([-6.981010,4.494830,1.505334,-0.842907,2.995184,-6.612403,5.145809,-8.992986,4.357789,-9.601290,7.363750,1.582751,-1.557140,0.569148,9.410424,-5.331761,2.818688,8.924199,8.405452,4.662199,8.132920,2.651601,4.061748,2.540055,7.419856,-8.285966,9.659568,3.025497,-9.891827,1.541152,5.467562,3.393810,-1.175893,-8.164804,3.716617,-4.254008,4.334734,9.763729,-5.150832,1.503933,-8.284140,-5.442761,3.761280,2.539495,-1.880993,-8.289174,9.836720,-5.312899,-5.736731,1.019602,-3.467848,4.282112,3.271877,-3.042695,6.025260,-6.223084,3.289746,7.079284,-6.063542,9.852247,-1.631840,-2.233213,0.743793,5.050191,7.145749,2.974714,-1.230527,-2.880885,-9.983801,2.150014,-6.849918,4.823921,-9.031002,0.145614,-7.857912,4.992960,-3.428101,-3.547045,-9.118418,0.938610,-4.509049,1.996155,8.694447,6.411666,8.818609,-5.905421,-1.945855,5.340992,-4.787037,4.044105,9.600701,0.865076,-5.241282,-3.528362,9.117909,0.626716,-0.291669,4.946254,-2.683458,1.562650,9.119922,8.635507,-4.099623,7.217234,2.781779,5.686604,6.758231,-9.742255,-6.237655,2.182804,0.103794,5.175802,7.173639,2.619705,9.288322,7.241381,-9.776947,-4.239418,-1.245854,-2.928350,-1.461706,-3.746864,-7.215198,-0.594406,1.589919,8.621470,-1.730715,1.282031,5.603222,6.396083,0.054939,6.801607,2.974660,-1.040494,0.677398,-0.371614,-7.611847,-3.157669,0.868279,9.329240,-0.632440,0.614177,-1.600755,-8.067513,-3.492388,-4.958126,9.969884,5.585840,-8.363393,-6.728049,-1.583246,3.811832,8.544976,-7.800283,-2.552787,-0.322650,-8.383790,9.405438,-8.890175,-8.726061,7.426019,-8.480610,-7.696293,-0.840159,-5.595832,0.910248,6.517190,2.677645,-0.906981,4.573859,-7.020852,0.509488,-1.463872,4.800316,-0.536434,5.275853,-8.501907,-6.200679,0.596867,6.897065,8.076420,7.336393,-2.678479,-3.868164,-3.412219,8.834901,5.891345,3.195785,-1.034375,-0.534650,-8.576646,-2.817405,9.198370,4.946407,1.895752,-8.024856,2.460856,2.215760,5.533623,-8.372883,-6.543974,-8.760416,-6.069480,1.565071,-4.547400,-5.389536,6.769595,5.632735,8.658444,7.613038,-6.933249,-0.025592,9.076940,3.611113,4.458141,-3.636570,8.638319,8.492539,-7.961812,-6.590873,-3.505091,4.325108,-3.161145,-7.999425,-2.503333,-2.394002,-5.293918,-4.297407,9.108720,-7.988857,-9.335374,-5.954191,8.932511,1.256959,-9.847512,-5.066437,-8.070753,-0.726767,-3.985596,5.022214,-1.541041,9.765784,-1.496240,6.747662,3.507492,-6.613384,-3.269163,-3.031389,-2.972238,-1.162275,4.828534,0.679958,-4.219455,-4.357001,-3.027322,5.718452,-9.915374,9.588492,5.809099,-9.488697,-8.931417,-5.929974,9.600873,-6.684189,-5.911486,-8.490274,6.460450,-2.658442,3.716120,5.359252,-0.703400,-3.045090,8.239721,2.846182,-6.101960,-7.671505,-4.053563,-4.268756,0.981304,1.582808,7.260489,7.852804,9.290021,-0.754061,6.064855,-5.100206,2.352221,-1.571053,0.471223,9.978970,7.824371,-2.637646,-2.195547,1.608556,-3.011853,4.604641,-8.929499,-4.676521,-1.859590,-2.145022,-6.003530,9.587248,7.040737,0.324470,4.532641,7.864080,-8.254355,-6.155772,-3.260856,-3.008963,-4.537908,-3.291379,-4.200216,-8.342815,5.880521,-1.892741,-3.147244,4.256964,2.430200,-6.248763,4.158414,3.254668,5.483707,-2.028911,1.663225,-0.410668,4.521361,-6.433285,-7.399899,-4.484744,9.132289,5.451457,5.982446,-7.179805,3.344111,6.436649,-6.063171,-8.649736,1.780601,5.404706,3.942111,-0.170469,-9.873539,8.144662,-9.014039,-5.917568,-5.023937,9.887473,9.189473,8.295461,-0.543844,9.011280,5.234153,-5.651530,7.687222,-8.643592,-1.710760,3.559559,9.347247,9.359267,-9.025503,-5.853505,3.320453,-4.416845,1.468317,-2.985706,8.087466,-5.883010,0.816504,6.055854,-3.226067,-3.444481,-4.350527,2.936691,-6.263973,8.743474,-7.003535,4.313744,0.560254,-1.699435,6.571026,-6.688877,4.623172,-7.787390,-3.907676,1.815600,7.879441,5.460960,2.221552,2.330794,7.200789,-0.629605,-3.554832,7.105613,-4.086305,-6.724545,-2.561956,-1.417227,1.832858,1.577260,-8.804733,-3.193779,-9.018300,2.420197,-2.392487,7.139073,-2.681891,-8.882473,2.287107,-1.968610,4.267482,-5.614537,-8.325086,5.920126,4.129213,4.252514,3.260269,5.210464,4.667450,1.409140,8.396165,4.860759,8.176446,8.857958,1.311393,-0.132074,-8.226684,7.246698,0.226660,8.523847,8.860073,-2.651763,-7.121586,-6.954173,-1.182376,-2.244744,-0.209081,8.117625,9.833851,-7.882968,0.985940,6.109289,7.643065,-6.584944,-8.503354,7.388683,-6.480279,-0.187477,5.787580,-3.223098,0.707163,-4.452768,-6.363879,6.556695,-4.877806,-8.072434,-9.045333,8.191787,-5.461063,-8.381231,6.879567,-1.239208,1.239078,0.444840,4.473864,-0.527289,-4.358120,-6.368558,4.392885,-1.909674,-0.767115,7.611524,-5.921035,-1.499352,-5.219336,8.395288,1.447494,0.544720,3.438848,8.036236,-0.330314,2.703187,-3.863077,9.434432,0.907101,1.228527,-1.053303,-5.411929,-5.551467,-7.995942,2.174545,-8.526833,5.386979,7.927235,-2.335158,-4.385906,-9.131018,5.988134,6.959517,-2.544198,-3.536401,-6.499885,-8.272149,-3.655232,-7.036474,6.489035,-3.991045,-9.918021,9.268351,-2.152947,-0.392981,-3.923523,-6.909856,-5.052313,-1.321949,-0.124714,-2.285466,-4.885138,0.090265,6.893541,6.407608,9.609581,2.459926,1.155836,3.023097,-1.423622,-1.608544,1.076769,4.513863,3.878083,-7.822643,-1.290692,-0.489008,-1.443106,8.163654,9.510242,-3.143943,0.923444,-5.435542,0.762953,-1.230918,-4.401793,-0.052308,-2.804002,2.665426,-2.906894,1.945625,-3.432263,8.168227,-3.403704,3.369587,8.123577,-3.544403,4.957227,8.064471,4.341657,-3.145432,3.773011,0.854843,-4.692224,4.957320,-8.925974,-1.963512,-3.757195,0.220313,-6.779891,4.434134,1.293291,-9.144208,-6.949565,2.432973,-4.375573,9.420478,-6.141767,4.267429,9.332493,5.841818,2.221441,7.794083,8.872192,-1.012447,8.271348,9.904444,-5.784921,7.766867,-9.654374,-9.726016,-4.885234,-3.328352,-6.729166,-9.218547,-2.158056,5.966983,3.832652,8.635395,-0.064544,-0.390748,3.360262,-3.119067,-1.727432,1.480943,-9.567801,4.417710,3.026750,7.926496,8.520091,-9.788460,-1.402475,9.792186,-5.580729,-4.812034,9.796228,-0.744384,7.218814,-9.879453,-3.204395,-9.506959,1.682091,0.256612,4.001270,-3.752435,-5.140527,-2.224838,-0.900593,-8.995075,-8.425813,6.017721,-0.322766,7.782565,-5.954337,6.995248,5.454665,9.239244,0.706355,4.058940,-8.802888,9.493959,-0.659354,1.127072,7.255894,8.682155,-8.123660,5.884249,-2.935681,-4.015627,-9.845702,1.772590,4.694111,-1.237661,-2.196298,0.782127,1.065557,1.905128,-4.121330,6.336179,1.641654,-2.562407,7.186176,-5.500184,-7.459241,3.833838,-5.912426,-1.839030,6.816299,-5.974978,-0.175801,-2.566726,-3.729710,-8.943195,-5.223250,-8.607194,-4.374962,-0.033141,3.686738,-8.073876,5.129153,-6.148242,-9.336235,-5.764715,-1.762399,0.650514,-0.990762,-5.378598,-7.696297,-9.472925,-0.557540,-8.406494,9.159718,1.743173,0.137977,-8.355175,5.892161,-4.013128,2.464816,4.505002,4.407772,-3.609468,8.675101,-3.998277,2.947011,-5.960550,9.364774,5.703664,0.955351,1.345467,-5.401469,-4.864900,6.264700,8.348737,0.637155,-7.954103,-4.952143,-1.574497,2.889481,5.969528,5.404765,2.247164,-5.342508,1.053257,0.973589,-0.932665,-9.724032,4.214121,3.234765,-3.569914,7.467154,6.194901,-9.334760,7.261755,-1.120735,-5.266614,9.227319,-0.148243,-2.954667,8.769105,2.688770,2.891978,-5.447789,7.558531,-9.446766,-5.515396,-6.521262,7.244465,-3.286505,-8.224454,3.935684,-5.339760,-8.183002,-6.231965,2.143405,-6.970188,3.424394,-3.516336,-4.409834,1.838523,-1.545032,8.523608,5.329000,0.679761,0.481772,-1.403762,-3.801027,1.289928,5.797951,-4.830955,-2.146315,7.395788,-9.473217,3.792625,4.658856,6.697803,8.365791,-8.821700,3.384996,-8.437669,-2.044912,8.721643,1.288401,8.322712,-4.741282,6.461249,8.709271,-3.544999,8.160773,-4.894701,-7.799440,-1.644812,-8.288966,-9.090214,-0.903174,9.668908,7.769870,7.434773,2.088960,-6.762911,-9.789784,-2.659118,-1.285634,-4.078352,4.093055,7.703010,-9.876581,7.415106,-4.593816,9.329352,-6.110867,1.395029,8.178573,-5.680732,-0.709851,6.915548,2.599055,-5.023139,-3.363412,5.752428,1.008927,-0.268825,-1.406280,8.256903,8.925712,5.023301,2.713446,-3.876358,7.776509,3.250274,8.875371,0.924456,1.450404,-5.820694,-9.255166,2.886455,-2.280200,9.185809,3.899990,-9.354118,6.019837,-0.258995,-6.905370,-6.264311,5.875742,7.274587,-7.880712,1.726731,-9.815302,9.824493,8.998030,4.111879,-5.108547,-2.100830,5.734867,0.635655,-6.055232,1.734946,-3.813785,2.163668,9.936943,-4.068263,8.019536,6.996794,0.030830,-8.037287,8.353533,1.613040,-9.298916,6.982611,-3.248083,5.960572,-3.700122,9.811822,-2.526902,2.677609,-3.216195,6.904673,9.014574,9.650176,0.605132,-4.535732,2.297984,7.487130,1.996756,0.062755,5.106596,3.498452,4.390637,-2.106981,2.231263,-2.606470,3.420821,7.760651,-3.367732,2.560732,-4.038379,4.648585,2.177956,8.989459,5.776170,-0.638964,6.258468,5.562436,4.400310,-0.245581,2.048157,-8.561425,-2.620057,4.775950,-5.676014,9.082132,-8.310045,2.227104,5.683278,8.381739,9.133199,4.034231,5.592273,-8.763524,-1.436587,2.503632,1.271309,-1.967865,0.241001,-9.760969,-2.789199,-5.379264,-1.083218,2.832152,-2.461626,5.221186,-9.195353,1.259070,2.600401,-0.536758,-6.297184,1.087321,1.232193,-7.777220,0.494737,4.669574,-6.389879,4.022336,0.224444,-9.980789,3.631729,0.566722,-9.207082,6.596325,-9.672441,4.918649,2.898583,-5.742174,-1.299015,6.112740,-4.149446,5.904049,-4.341875,4.501384,3.542485,3.552192,7.253864,0.013635,3.662616,0.330804,-8.599994,0.182024,2.888020,0.990796,-5.122667,-0.248861,2.415832,4.354933,-3.793031,6.892046,-1.044719,-0.767403,7.701462,5.549423,-1.649626,1.999032,5.225505,-4.594368,-3.319555,-4.873693,-3.895429,7.565180,-5.312145,7.994487,-8.469376,3.740312,0.265403,-5.383690,0.637402,-3.921326,5.960611,-2.887349,-9.792639,1.811968,-0.654640,9.022039,-6.807519,-7.985332,3.957019,5.229641,-5.743297,-9.385189,-7.546114,1.476912,-9.648027,8.750094,4.806296,-8.732845,-4.052248,-0.540437,3.525890,4.656383,4.948709,-2.071379,9.831671,-9.322224,-0.872039,-7.567833,8.852158,-9.553927,3.944683,3.801408,-1.470422,-6.778832,-7.184687,9.352319,-0.852475,2.092059,3.440997,-5.358174,-4.036545,-5.627900,6.562868,1.509478,-0.722407,-5.208203,-2.586847,-4.941416,8.133574,9.828163,-0.708814,2.364726,-9.347933,-0.761738,-8.145276,-9.000459,3.774012,-0.850525,6.806067,1.056274,5.146378,2.789955,-2.875139,-5.230343,-6.938181,5.653358,0.941180,9.423222,5.478863,5.689241,-1.576310,-9.912223,-5.802125,-3.658879,8.775290,-4.429358,0.396043,-1.544325,9.151594,2.083619,-9.142717,-5.281664,8.959571,6.517203,0.702485,0.422774,0.192309,5.454376,-7.658609,5.787043,-4.936137,-1.275719,-2.891115,8.253746,-2.034064,2.323572,7.633598,-9.143782,-9.620972,9.344360,-9.058657,8.021602,0.112923,9.515774,4.345215,1.102275,-0.193003,1.657254,-2.874906,3.555642,-6.490789,2.877887,-1.248203,-4.508164,-2.629331,7.042552,-4.315133,-7.739804,0.208793,7.306823,-0.428186,-0.907927,4.626880,8.615563,-7.968318,-4.608811,-1.983746,-2.182344,7.170369,3.679011,5.852990,-6.774237,4.912439,6.461642,-3.264347,2.011861,2.057446,-9.915474,-3.899687,-8.001475,-7.341543,7.553147,-4.370154,3.176589,-2.079017,6.252785,8.222360,-2.340440,-4.707585,-1.178061,-8.769320,-5.696641,4.746908,-1.211929,-5.554481,3.296768,7.359316,3.120249,-1.722216,0.898864,2.921006,-3.965789,-4.605487,-3.802258,-2.666197,-6.007358,-2.481052,-3.597895,6.552444,4.047073,7.906373,-6.979266,8.336162,0.919358,-5.404295,0.095238,7.756464,4.719377,-9.835220,1.993851,-8.079006,0.328597,-2.995612,-7.153336,7.048189,0.866109,-3.483388,4.915180,-2.142840,-2.841452,-5.063614,-6.700630,5.803976,4.730338,1.260565,4.680061,-1.388559,0.649558,-9.377189,-9.892294,8.276700,0.337196,1.907835,-8.073057,6.011449,2.518683,-7.740812,2.435706,9.015135,6.307409,1.513957,-2.363462,1.237993,-9.677084,0.855811,4.520153,5.844644,7.597538,-3.075014,-6.023336,-7.146188,7.213282,8.740567,-3.229357,0.695278,-9.152970,-6.368570,2.293708,-9.925812,-2.802781,-0.742991,-8.184936,-7.073207,2.443534,4.636286,-0.539937,7.958788,-9.808393,-1.601562,5.187393,-4.641417,1.334925,-6.291064,4.481093,-0.626228,-3.757962,4.411144,-9.018364,-1.080983,-0.880127,4.402931,7.872189,-0.958192,-4.092697,0.588914,0.486911,0.259498,-3.627900,3.800008,-7.826599,2.598167,-6.263552,4.948346,-5.954933,-9.953539,-9.863539,6.150145,-8.745802,1.137175,7.590041,-3.736196,5.740945,1.650409,9.043210,8.096085,-5.193144,2.825696,6.825713,-6.841972,-1.769238,3.445688,-0.646606,7.989526,-9.833664,6.950291,1.739055,-9.854763,4.399546,-6.769075,-6.600453,-2.361644,1.042655,-4.134232,8.931590,-0.961044,1.627421,-3.892586,4.837318,6.674846,-5.297504,0.566267,-6.309139,-1.842117,1.961331,4.034975,-4.992302,-3.644492,6.389375,1.677645,9.058724,-5.955279,4.071292,0.790693,-3.383669,-9.303560,4.111003,-6.208059,-3.624040,-3.035290,-4.570446,4.970339,7.388318,-9.738381,-7.321426,2.647855,0.830488,2.821352,-9.960231,6.365575,5.500355,-8.640066,0.739960,-5.665359,0.241921,3.358016,-0.586460,9.891506,1.026706,-8.607501,2.167832,0.527594,-4.566698,3.887670,6.554835,7.601967,-7.177449,-4.416957,5.881714,9.208108,6.827079,-2.735409,-2.981795,3.728951,4.258257,1.250387,-2.961202,2.772501,1.491493,2.744963,-4.424896,5.184232,-9.970529,-8.798352,7.574940,9.984889,3.453382,-0.572469,4.109806,6.480046,-2.409678,8.791756,5.377279,1.694886,0.598587,-7.845160,7.879759,-8.215831,1.847305,9.357963,2.552857,5.762084,-8.358845,-9.097121,5.479118,-0.243887,-7.844594,-6.992500,9.679652,3.989289,8.120675,-0.446834,8.812623,-2.238959,0.870408,8.433420,-9.578700,0.977972,4.093405,-4.154896,6.386534,-4.112861,-4.540608,-9.178254,-9.638995,-1.800767,8.654702,-7.571584,-5.899518,7.074491,9.475434,-6.110535,6.110255,-0.371233,1.344167,4.251351,-9.382465,-3.266446,3.861928,-7.535883,-3.088812,0.740325,6.193924,6.395725,-1.697376,0.288855,7.758807,-6.566465,-4.042625,4.672990,5.713417,-2.091612,-4.644420,2.741370,2.703561,6.874735,-9.041434,6.710315,8.638132,2.279665,6.551214,6.736258,-8.791025,0.328133,-5.200937,-3.067055,-4.191178,2.793603,-6.267451,-2.407891,-3.215035,0.313311,-6.249520,-8.468205,2.692065,5.289659,9.365267,-4.963888,-5.872145,-9.109466,-1.135058,8.889984,6.414278,-8.840808,8.560156,-8.430402,-0.270797,-6.536000,-9.123260,-6.643463,3.580072,7.476576,-8.113023,-2.469334,7.071144,-6.762378,-4.115577,-5.531044,-1.161283,4.257716,4.847773,-4.117353,3.748473,-3.430134,2.695028,-5.073399,1.303446,0.036759,3.039624,-9.404145,-5.995503,-3.284344,-4.781677,3.830069,4.506139,-9.699368,-5.572009,2.722689,-5.306131,4.045509,-2.527896,-6.941099,8.253436,-1.293575,0.775396,-5.720599,8.595733,-4.525928,9.590410,-1.548264,-6.202260,-0.390959,8.023142,7.090678,1.655303,-5.142353,-4.706708,3.480172,-1.471913,-0.302952,0.555579,-8.469952,2.116590,-5.979276,-1.839009,-3.722099,-4.543894,9.772548,-4.963337,6.881680,9.698409,4.651509,-4.043413,-9.384714,-8.510571,-4.592501,8.503528,-1.279601,-5.072619,3.831535,-7.483746,9.730673,-7.511659,-2.312685,8.020319,4.336165,4.671656,-9.268947,9.602868,6.805217,8.669110,4.963469,-2.206394,-7.992935,8.718712,1.929578,9.402917,-5.556820,4.275350,-6.226009,-0.271014,5.597666,-9.651301,4.708472,-1.794878,-7.401778,-9.393065,-4.653822,9.292460,7.923073,8.201322,-5.544068,-3.473351,-9.071736,-0.093414,-3.860317,-7.583592,-5.111391,-4.145041,5.870348,-5.420517,-1.691890,6.969015,4.366679,1.433269,7.854839,0.151569,6.648970,-8.907674,0.563910,-8.322759,8.374919,-5.684705,-9.256382,0.798177,1.791434,5.248995,9.822838,6.597111,4.831782,9.990793,5.813992,0.872309,-2.584509,-8.597891,-3.606794,-5.524905,-3.031788,9.535860,5.615538,-8.570714,3.667029,-1.203835,-8.196115,0.438705,2.966577,9.792766,-7.399977,0.085173,-5.279188,-5.368008,0.447054,2.592874,9.235973,-4.466449,2.642134,-9.960843,-5.906717,5.331373,-2.958045,-7.355954,-6.585659,-1.330116,-3.289037,4.786837,4.717367,1.435709,-0.844491,-5.721629,-4.667256,-4.242087,0.124309,-3.091829,-7.735691,6.643621,-4.436408,-6.255483,1.373678,9.098115,-7.101236,-0.672437,6.879110,-1.852692,-5.030021,4.234354,1.489547,0.577300,-4.629014,-3.329748,8.507101,0.304758,-6.524543,-8.512204,-6.062630,6.650803,7.622852,5.867235,-4.665282,-8.813906,-8.455236,0.899018,-2.909100,6.818656,-8.861551,2.254037,1.957662,6.198458,-5.778172,2.475470,-7.930770,0.094569,-6.707304,-4.105632,4.454538,-4.249052,-1.133044,8.487307,-5.105716,-4.686383,2.321463,-7.423450,-3.423024,-9.394552,-0.978278,-3.401630,-1.614915,-3.202604,-6.735417,0.477958,4.305736,5.388121,2.225473,-4.795997,0.719040,-3.055863,-8.427096,3.728595,3.657295,6.617050,5.693340,-3.708729,-5.832150,0.477522,7.596346,-6.824381,-0.627599,-8.775665,-7.048763,1.630666,0.587424,-5.969679,-6.088219,7.053451,3.869760,9.964066,-3.652375,4.631635,-0.736070,9.128892,0.851801,0.867711,9.142172,-9.928990,-2.870163,-8.992160,4.371962,-1.243420,-6.269689,5.932568,-0.622571,5.662201,-7.757815,2.137043,0.401597,-1.730073,-4.583069,-1.595619,-2.239568,-7.867415,-4.056584,-7.313239,8.687338,5.655949,-1.967400,-3.863911,-7.722034,5.800846,-3.912029,2.359313,6.216559,-1.179101,0.555183,-2.198817,5.752655,3.597350,0.350269,-7.849219,-8.752201,-5.487446,-4.874753,3.230243,-8.539088,-9.825108,-8.282691,-8.894211,3.503161,8.931958,2.762083,-7.982527,-1.452362,-1.535970,-7.973642,9.501243,9.143340,3.833680,-5.379505,-9.660293,-7.285424,0.536884,-3.155156,-4.455455,-8.962714,1.900789,0.233624,6.484911,7.871535,3.367180,-7.071867,-9.992679,0.667947,8.500722,-1.291426,-4.961495,-1.343436,3.093920,-0.265060,1.097635,-0.240955,-4.552779,-6.447441,7.993524,-2.847341,5.313481,8.934590,-3.549938,-4.661898,-2.215522,2.914450,1.492836,-3.359995,-9.696394,-8.177958,-2.103522,-3.462599,0.567968,-3.855358,-6.658436,3.357625,0.025902,0.937306,7.632831,4.315358,8.249175,1.363380,2.612932,9.264707,-7.875620,6.415016,-0.797995,3.523301,-8.867016,0.108355,-5.778699,4.544968,8.361121,6.906560,-1.369747,9.810237,8.559059,-1.630428,-2.322784,7.281717,7.520083,5.317281,-8.770790,0.622687,-8.579292,-6.856889,-7.701301,-8.524274,-8.116822,-3.056656,1.225473,-3.691846,-4.191205,6.973600,3.625705,7.655180,5.268238,-7.128614,-8.769378,-6.731406,-5.447384,0.296306,-6.894491,5.460840,-4.639850,7.528137,5.325142,-0.160675,-3.791475,-5.874500,-4.736621,6.858685,3.612056,-4.857315,4.403603,-1.512345,8.139787,-5.097130,-3.461825,-1.224809,-0.367906,-4.023298,-9.805359,3.746481,-6.502951,-2.375426,-8.921114,-3.000992,1.294827,2.547285,1.601300,8.915921,7.161692,2.839944,5.955458,-7.035367,8.182226,0.739543,-8.283095,9.292854,-8.204915,5.865683,6.610395,-6.390951,-5.748195,0.212020,-2.709658,-2.826821,5.869650,2.926498,-7.940707,-7.955725,-3.898668,3.829535,-1.416741,0.334548,-0.743547,8.072545,-2.908073,-4.141926,6.468406,-1.110189,-5.463450,-1.879940,-7.189105,-0.825466,4.124999,7.673500,-2.861693,-0.770892,2.973509,-8.281653,9.894789,4.562313,1.623544,-4.753309,1.936283,-3.005494,-0.950154,2.413170,-4.963527,8.395968,-6.075678,1.087901,9.424498,-4.844333,2.408951,-6.801838,-4.919830,-3.319628,2.247810,1.056035,-5.868275,7.296244,-0.627362,8.462391,-4.364040,-3.322553,4.850016,-8.076749,-8.526126,9.848788,3.117470,-8.967862,0.086469,0.415356,7.144224,-4.667012,7.987332,-2.070035,-8.056938,-5.372081,-8.023513,-4.532305,3.000111,-4.434265,5.153679,1.690276,3.127794,-7.237055,2.434558,-0.591481,-6.778812,-4.416401,-7.842727,9.372656,-0.509226,0.888493,4.444097,2.123749,-4.252704,-6.543498,8.352007,-7.387764,5.962624,-2.271741,2.205857,8.880068,5.747841,7.393273,9.825685,-7.050676,-9.923639,-4.683544,6.335088,-2.794812,-2.446780,0.300299,4.279415,-5.339566,9.773471,4.696614,7.939101,-5.361072,-5.985455,-3.134100,1.015984,5.131296,9.733233,0.989187,3.200334,-5.004681,-5.463025,-4.052974,-5.533472,-2.230788,9.550250,-3.780133,-2.239165,3.964090,-5.528143,-4.849684,-1.868928,7.383803,-6.536900,1.772203,4.239107,9.722760,2.705764,3.701635,-9.552777,3.980669,9.253544,7.831048,6.819368,-8.913205,-1.400531,4.398158,-5.055820,-4.707059,0.628102,4.617318,-5.862165,-7.833496,-6.029047,7.602919,3.733794,-2.830306,-4.834397,-9.875233,-0.625043,6.818897,-9.485678,9.751883,2.558036,5.548542,5.735651,3.926548,2.343654,-2.527247,3.562964,-6.595576,-9.014616,8.232001,-7.794400,-5.632900,-9.895801,-1.131100,-0.798698,-5.562630,8.421674,-1.051467,-3.132304,-2.949891,6.667750,0.601271,-2.446306,0.242992,-2.097478,2.346392,7.070521,0.654632,7.985526,-0.385801,2.637979,-0.815884,-4.086596,-2.255195,-9.401664,-0.920562,9.142436,5.891288,2.206671,-4.161375,7.051337,5.527359,-7.731292,9.365343,-5.311922,7.113170,-6.295546,-6.252958,2.765177,4.642603,-9.656367,5.374421,4.980732,1.340796,-3.285144,-2.662332,-9.890388,-5.086455,-1.274774,-6.740098,2.425308,-7.550256,2.869198,-6.249031,5.112060,1.886015,6.062553,3.528260,3.870186,7.375722,0.620175,4.714791,2.497102,-5.146657,9.491699,-4.083072,-5.692093,-3.371229,-6.358927,-5.354120,-5.870185,9.618443,8.387869,-6.020640,1.245524,-6.215414,9.016575,-2.370787,4.959298,-7.291733,-5.010677,3.407601,-0.140838,-4.265492,-3.160340,-5.772994,-8.718248,-6.052538,6.612561,-5.101697,-4.881037,4.933309,7.866721,1.066217,-7.417157,2.107243,-0.617528,3.298436,1.909824,3.031000,5.256931,-2.390223,5.350624,0.060004,-2.135130,-0.900920,-9.511821,-6.139209,4.449369,-6.065348,-9.934619,-1.002168,-5.682141,3.760469,-3.842268,5.971146,-9.564529,6.431417,-5.102450,-4.642754,8.628441,6.513994,-0.532349,5.774152,0.351084,1.863316,4.649489,7.065579,-9.840735,7.540815,5.324735,-3.135507,5.279570,-4.955504,-8.500872,-3.303598,9.600615,7.042157,4.728143,7.306773,-8.099943,-2.237855,1.083041,7.300907,-2.948396,-0.788244,7.489712,-1.484141,-9.283813,-6.846649,9.197162,-3.360031,-8.811149,7.395830,-6.564306,2.644674,3.264906,9.396633,4.603378,-1.729417,1.982160,0.033042,6.688847,3.131868,-3.447132,-0.281095,-0.041936,-2.644386,-4.752494,6.545703,1.304101,1.030426,-6.397205,7.095457,6.561058,-2.968896,-5.112622,0.012322,6.841804,4.227185,-7.586750,7.572187,3.038607,-1.548846,9.355504,-0.169329,-5.586436,-7.194442,-7.732520,-9.651086,1.611119,3.489182,-2.258993,-8.316804,5.727823,-2.271849,0.407740,2.063194,4.997144,0.327130,0.832524,3.572381,3.325360,-4.282849,9.816202,-1.031400,0.919380,-7.452625,-4.122443,3.676238,0.139942,-4.769554,-9.943769,2.598591,3.225633,-3.724642,-0.942214,-7.314292,6.298548,-0.724031,5.634647,-1.119819,-5.198933,-9.691700,6.245601,-6.615415,1.551165,3.502830,-0.785448,-1.986997,3.398719,-0.279164,-1.806685,-3.901014,-1.130076,3.809455,1.398112,-0.564146,-2.757751,-7.486050,7.884597,-7.975017,8.749446,-8.346347,-0.760592,6.584892,3.142406,-3.259757,-4.524043,-5.447845,4.040995,-0.051291,9.909037,-6.058789,-2.529214,1.277868,0.727828,-7.288348,2.181418,2.371559,7.038302,-3.327917,-4.970235,5.545066,9.062102,6.587405,7.769279,1.064933,7.706256,-8.641749,-8.542630,4.965287,-7.704589,9.142252,-1.192742,1.411501,0.386192,-7.793833,-6.071312,1.594649,6.403798,-0.929367,-7.990192,6.235349,8.340960,1.191738,6.804918,-9.834577,0.101522,-5.032250,-8.205272,4.910793,3.011362,4.200901,5.218934,3.271749,-1.146543,6.438341,3.972581,-7.088500,7.044139,-5.133825,-6.469128,-8.524318,-6.798950,2.921635,-8.940138,7.027246,-3.114884,-0.863247,1.856089,6.749496,9.069486,-3.038624,5.850751,-7.400392,4.667292,-0.215963,9.500902,7.090324,4.714971,-5.903437,0.877448,8.981847,-3.175440,-3.137506,2.190324,3.473077,-0.703780,6.704452,-8.476689,-3.071672,-7.023957,8.128943,2.534204,-7.244439,0.370640,5.719701,-0.060216,2.853321,-0.219633,-6.100130,5.035481,-7.145501,2.888653,5.107266,0.721508,3.475348,-7.356911,8.223035,6.017200,-6.368075,-8.376733,-4.737917,-3.052803,-1.811070,0.293227,-6.359084,-4.126248,-4.521642,-9.304541,-7.389879,-9.897874,-3.812261,-6.826568,-8.801079,3.924062,1.746360,-1.658236,-0.217757,3.048725,2.680864,0.471404,5.519578,1.499417,4.374607,0.165249,7.558701,-3.613139,9.864192,-4.052325,-8.371792,-4.497665,5.272671,2.394297,-5.909654,-8.042098,6.792194,0.225144,-3.267995,7.606916,9.484046,9.871385,-2.801383,-0.149809,-7.904137,1.091342,-0.149106,-6.767046,8.314034,5.066398,-1.788440,8.637772,5.050901,-5.882542,6.114764,7.345400,6.940112,-9.368717,-8.795709,1.120587,0.786168,-0.732763,-5.179446,1.887520,-8.323757,9.432102,5.966511,1.264512,-8.796999,-6.187257,2.011170,-8.577901,-6.443097,-3.126448,1.830889,6.717243,-4.290678,-7.737989,6.022338,-5.588745,-9.819131,-7.413469,0.342384,-3.672402,-2.160059,8.213057,-6.007111,-4.239056,-3.310195,-1.136836,-1.749089,-7.669436,9.004383,8.513983,2.186337,-0.064919,-4.490123,9.687818,-1.334336,3.037210,-8.939990,-8.659656,-3.442558,2.825218,2.311479,-1.448208,9.812056,4.737444,0.016507,1.597263,-4.578950,-8.609735,4.776100,-6.775929,3.406806,-9.730258,7.753985,-7.727364,4.551428,-8.657926,4.151432,-2.811596,-5.677234,0.337086,-0.873890,-2.831291,9.082589,8.066151,-0.541465,-0.946717,1.363863,0.689713,-1.617134,-8.232561,7.533067,-6.964167,1.725796,1.306104,-3.019015,4.114631,-5.074208,-4.703219,-9.312782,-1.460204,9.449246,-9.350445,6.705624,2.389040,-0.231361,1.270507,6.011888,-8.752934,-6.208136,-5.716930,0.629859,1.621879,2.242521,4.908295,-3.185963,-5.746006,-0.160575,-4.381641,-2.512499,6.225709,-4.928098,-3.512487,1.503976,-2.474594,-7.442640,-2.019218,5.230486,8.265075,1.226814,-9.833224,-5.428105,-6.612806,-0.235591,-3.223055,-6.472343,7.190896,-7.305160,-8.825658,-9.003203,0.439501,9.419406,-3.048532,-0.587509,6.249026,-0.756192,6.012232,-6.522417,-2.439611,-6.782032,5.833251,-3.059077,5.001997,-8.590006,-6.506444,2.905598,-0.663447,-5.178813,3.256436,-3.941709,-7.854175,-9.750827,-5.705471,4.346488,6.066943,3.728330,5.155857,8.902545,6.786478,-5.471621,7.651453,6.943560,9.646553,-0.629354,-2.957322,0.987505,-4.369323,-8.129711,9.024468,6.497126,-7.369366,9.319453,-5.921534,-7.959416,1.521464,-3.145467,-3.324682,-2.183004,5.500378,-0.545919,5.123016,-7.862964,-3.175210,-3.464112,6.885865,-2.139339,1.242985,2.032439,7.787130,1.885444,-9.843762,1.291236,4.467947,-1.089682,-7.523836,7.869292,3.750981,2.689778,-2.191142,8.136878,6.568588,0.731744,2.791559,6.837356,7.030027,1.317863,-6.795743,-8.900431,-4.246646,-3.122802,-5.864421,6.555836,7.709098,2.658206,-5.525237,9.269433,-8.515463,-1.470141,6.674996,-6.298111,-1.572579,5.650045,-4.581252,5.117950,-1.122209,-4.078492,3.464632,-0.285914,-7.311748,-4.290086,-4.247516,8.667434,5.901226,0.253607,9.712398,2.791288,0.728781,-0.876925,-6.466283,7.970703,0.794458,6.171998,1.038000,3.551756,0.094128,-9.366712,-5.186978,9.303429,-8.644171,-0.741148,-0.230604,9.280169,-3.542877,-0.123647,9.457914,-8.917767,6.730102,7.329543,2.084375,-9.065530,5.851883,9.668980,-3.491661,7.763399,7.468480,-8.307094,6.195632,8.924996,3.367584,-4.944252,9.590311,3.092753,7.567901,9.798702,-1.493945,2.417958,4.550336,7.569765,2.416123,-6.938527,-8.820778,7.515538,-1.046997,-9.257715,-0.839422,5.871621,2.869432,-7.840909,1.337047,0.360763,6.587078,5.879181,1.712646,6.311748,1.105033,5.378302,-8.566514,1.852797,-1.081561,6.617594,9.243018,-4.976222,5.291815,8.640599,2.433097,-8.560869,5.813759,5.797902,-9.793307,-9.127245,-3.436246,-0.674179,-9.581291,4.500809,6.743533,5.750765,7.300759,1.090030,-4.479705,-9.299706,2.458271,-6.661398,-2.318650,-6.687451,-7.005019,1.950308,-1.052356,-8.005943,9.946780,2.451819,-4.072067,1.460301,4.837094,-9.182917,5.145074,1.981546,-4.284938,-4.864012,4.080624,2.991838,0.371204,-3.117139,-1.852691,-8.805568,-0.112014,-9.831266,-4.327032,7.309834,-1.513197,4.350210,-2.389540,2.048519,-1.975128,1.568381,-4.611465,-9.103841,4.042172,8.292424,4.120757,-8.023421,-3.609483,-1.038956,-8.551727,-3.493518,9.167990,8.546031,-0.088226,-7.067528,-1.619578,-1.001333,8.334923,-6.790218,3.756076,-3.645118,5.821528,-2.237289,-5.914449,-4.582220,-1.915274,8.264317,-2.626225,2.647339,8.654736,8.053520,-6.380589,-9.161903,-2.203177,-5.091745,9.423087,-1.035699,4.282579,-9.726892,3.318714,7.721430,0.696760,-7.886480,0.774342,-9.496616,0.839915,-0.988034,5.298586,1.647868,4.279908,4.692367,2.791494,6.748493,-0.181750,-3.362623,-2.683365,-8.759794,-6.966633,3.520662,-3.405794,6.489191,2.441066,3.890132,-5.207171,6.040116,5.997612,-0.507950,-0.928782,6.280544,9.250530,0.844582,0.617355,0.687617,-7.894830,2.231125,-1.302923,-8.474284,-6.734810,-3.305262,5.166618,-2.869215,-9.489864,4.598727,-1.186938,-0.255303,-8.728014,2.988911,9.477827,4.159772,8.535459,-5.851603,6.411942,-7.260321,3.551996,5.140509,-4.219663,3.703524,-1.476617,7.958940,0.680347,7.683002,4.747191,-0.589712,6.733609,-6.426911,-5.606242,9.259143,-8.020997,-8.956989,-6.828544,-1.230528,9.204863,-6.820742,-8.047730,9.926217,2.764734,8.922834,9.140879,0.292376,1.899184,-7.809650,-5.513358,-7.589856,7.800395,-9.529935,-0.579827,-8.731979,-0.081339,3.494971,-4.616821,4.203945,3.984163,6.610529,-2.758932,-2.299503,-6.849946,6.714240,-6.688936,5.641477,-6.926451,3.988170,-5.679751,5.045396,-5.186873,0.090595,5.302736,-4.951965,1.785293,5.370527,-0.019324,-8.991736,-0.699325,-9.310403,0.261481,-0.187398,4.658860,-6.949245,8.866442,9.631418,-2.127244,5.564807,1.611558,3.125712,1.983219,-1.029890,-7.453362,-3.774890,-3.450237,6.011603,6.839433,-3.066587,4.128136,-4.062601,-8.071563,6.913541,9.646210,-3.486037,-9.342974,1.460359,-0.464288,-4.601395,-4.168023,-4.720444,7.799136,-3.375123,2.122981,8.858989,8.777659,-6.353503,2.185901,8.547610,-3.031945,3.616629,9.003277,-3.447742,-9.966851,-9.712640,7.807946,-2.328693,-9.530782,2.889308,8.176364,-0.313522,6.288165,-5.115751,-2.580473,9.446309,0.819298,-0.817057,7.193933,-9.079454,1.558873,7.102112,7.249112,3.661183,-1.379962,-7.374953,1.715474,5.290280,4.741574,-9.217656,8.876700,-8.979402,-0.481894,1.616499,7.464458,-4.110012,-5.806750,9.202598,1.031091,8.425025,-2.766358,8.064982,-9.588022,-9.634244,-6.103886,-4.080604,-3.723952,-4.936872,6.067089,-8.176596,3.337601,0.392961,-9.713300,-1.077179,6.057988,-0.441175,2.827170,4.929071,-1.103958,2.236420,-6.914360,-3.057425,-5.877972,-6.731692,-1.085495,-6.184776,2.427082,4.383196,-5.790544,9.699788,9.929546,3.206577,2.444309,-0.237086,-9.040452,-9.355131,0.772006,5.179007,1.705935,5.660627,6.390729,3.074844,0.121858,-6.300612,-2.563463,2.392360,1.008854,-4.189752,-3.009309,-0.900586,-6.699536,9.262715,0.265708,4.491181,-7.261906,-7.148185,-7.983589,-2.081913,-4.920182,-2.563612,-0.206790,-1.199807,-9.381919,-3.401864,-1.896950,-5.524751,8.154530,-3.727593,-2.901793,4.482044,1.224381,-2.492072,-9.763188,8.602504,-6.685255,5.098789,-9.631582,-2.163758,8.578128,1.041970,-7.849939,-7.930491,6.315947,-3.521725,8.103463,9.217398,-3.133301,-5.218716,-2.894981,0.976524,8.136254,-7.616009,1.869735,3.699249,2.123141,-9.804793,-1.938257,-3.967327,6.644395,8.303339,-1.421134,6.908643,0.174065,1.908466,-1.848520,-9.092357,-4.694252,3.674013,9.651891,-3.454988,7.945775,-3.767323,7.161845,1.045308,-6.744467,5.550663,3.865316,8.629886,1.557445,8.514583,2.682547,4.585107,-0.210488,8.898076,4.758444,-3.579579,-6.681204,-0.125837,0.045534,6.835969,3.937403,6.844776,3.228776,4.202767,3.692120,-0.443592,-7.540703,-1.878919,-3.880352,-0.209270,6.627222,-4.362316,-8.494779,-3.274662,9.601439,0.559977,-3.602602,0.545344,6.521156,-1.886012,0.683685,6.482174,1.026013,-8.393505,-1.522588,1.057569,-7.877341,9.182098,8.814270,-4.720461,0.778095,5.117799,-9.003873,-3.386938,7.666440,4.178912,6.030220,-2.500059,-0.300280,9.255263,3.405486,6.741947,-5.303238,-8.570021,-1.609152,-7.309103,-2.922231,2.395598,6.431369,-6.425919,8.049278,8.048645,7.962491,9.239425,9.554407,-8.206200,6.516037,-8.716746,-6.056641,8.706916,0.164107,1.554919,3.605417,4.117871,-3.443250,0.270750,3.335934,-6.621018,-7.538563,-4.219071,-5.161468,5.967976,-7.102596,-0.035076,-3.651034,6.144096,0.678148,-2.870452,-3.522216,7.163504,3.043482,-0.807656,-5.902701,2.849197,-8.179777,-3.718271,-8.786424,-3.484911,4.879547,-8.244288,6.452217,4.526165,-6.609189,2.537538,4.769160,2.299150,-6.031938,6.058794,-5.219828,5.801964,7.399804,-6.724731,3.534361,-7.243030,1.401653,3.275865,4.675084,7.195933,-7.064044,-3.934741,-9.048509,-0.696113,9.136503,7.358490,0.006329,-9.579970,-4.067584,-7.138313,1.770507,-3.711055,9.567426,2.712749,-6.199418,-6.803254,-4.098260,3.523092,-1.466941,3.729400,0.078753,-5.698062,7.475985,5.119843,5.194741,-8.532598,4.667695,4.682026,-5.992726,9.225609,6.326026,4.240027,-8.591841,-5.500564,-3.404259,-2.093220,-5.763753,-8.609563,5.057010,3.254073,-9.828787,2.083536,-4.322013,-8.227855,-3.347969,-7.414028,-7.796356,6.781938,-0.145850,7.361973,9.844384,-4.280149,-4.545952,8.000703,3.531734,-4.077973,-3.599087,9.901090,-0.278979,9.449885,1.951803,4.530209,9.064022,-8.935752,-1.788663,1.440514,2.230952,-2.669562,-1.733126,4.875111,-5.507695,5.974715,2.036017], dtype = "float64")#candidate|6065|(3375,)|const|float64
call_6064 = relay.TupleGetItem(func_3492_call(relay.reshape(const_6065.astype('float64'), [15, 15, 15])), 0)
call_6066 = relay.TupleGetItem(func_3494_call(relay.reshape(const_6065.astype('float64'), [15, 15, 15])), 0)
var_6067 = relay.var("var_6067", dtype = "float64", shape = (3375,))#candidate|6067|(3375,)|var|float64
bop_6068 = relay.maximum(const_6065.astype('int64'), relay.reshape(var_6067.astype('int64'), relay.shape_of(const_6065))) # shape=(3375,)
uop_6075 = relay.cos(call_6064.astype('float64')) # shape=(15, 15, 15)
uop_6077 = relay.cos(call_6066.astype('float64')) # shape=(15, 15, 15)
uop_6092 = relay.log(uop_6075.astype('float32')) # shape=(15, 15, 15)
uop_6094 = relay.log(uop_6077.astype('float32')) # shape=(15, 15, 15)
func_3492_call = mod.get_global_var('func_3492')
func_3494_call = mutated_mod.get_global_var('func_3494')
call_6102 = relay.TupleGetItem(func_3492_call(relay.reshape(bop_6068.astype('float64'), [15, 15, 15])), 1)
call_6103 = relay.TupleGetItem(func_3494_call(relay.reshape(bop_6068.astype('float64'), [15, 15, 15])), 1)
func_4665_call = mod.get_global_var('func_4665')
func_4667_call = mutated_mod.get_global_var('func_4667')
call_6105 = func_4665_call()
call_6106 = func_4665_call()
uop_6108 = relay.cosh(uop_6075.astype('float32')) # shape=(15, 15, 15)
uop_6110 = relay.cosh(uop_6077.astype('float32')) # shape=(15, 15, 15)
func_119_call = mod.get_global_var('func_119')
func_121_call = mutated_mod.get_global_var('func_121')
const_6124 = relay.const([1.939010,0.763526,-5.238889,6.482996,-9.193163,5.740397,-4.937538,8.867805,1.623359,-9.544245,-3.793821,-1.756489,-4.380856,-1.351947,0.302369,2.305527,-7.736279,7.785843,4.085187,-3.449931,-7.458146,-5.780015,8.185842,-1.171757,-3.668630,3.924367,1.028505,9.509016,-7.631084,-9.443165,4.274031,4.878272,-0.800580,-4.158816,6.150798,8.847853,7.487784,-0.287485,4.690166,6.835940,-5.101254,7.353886,-3.698900,5.993135,-4.091972,-8.176623,9.922387,-4.253787,9.440983,4.185643,5.047646,-8.346959,-3.493610,0.505447,4.842837,7.986520,1.168024,-9.954755,0.171026,-5.157129,2.376673,-8.518477,-9.967614,-9.746598,8.113470,-3.587026,2.726397,6.106288,-1.961862,0.712909,0.916777,2.070277,5.561396,9.282318,4.549511,8.893634,-5.680308,6.061895,-7.660943,-1.733596,0.574371,-3.646101,-7.699515,-7.912752,-7.069213,-9.278772,-3.422548,-5.603742,9.646979,4.543203,7.462226,7.240802,-1.195465,2.615635,2.273971,-3.499830,-2.469692,1.243449,3.475553,6.067511,4.126232,9.265467,8.522914,-3.897735,8.861023,3.661598,-1.089032,5.068892,1.780888,8.666217,-4.224065,5.333597,-5.675645,6.468268,-8.100623,0.804570,6.415844,-9.497144,-3.975593,7.801111,-1.626770,-0.243814,-5.450216,1.183494,-3.933653,-1.357562,-8.799625,-9.982140,-2.787417,-6.678679,-0.639142,-8.670696,2.924323,8.858570,4.757245,9.402600,2.493299,-7.077563,9.343939,-2.807785,-3.075587,9.914170,-2.234634,1.042182,5.739405,-5.525633,4.283367,8.316899,1.539686,-7.305830,-2.664440,-6.995925,-6.633600,6.255279,-0.340122,1.905130,-4.226427,7.136304,-8.460345,1.323991,8.108230,-1.276429,-9.683512,7.931200,-5.596365,4.511212,1.114805,-1.276515,-9.881758,-1.938387,3.729949,-9.275781,-2.982942,7.864459,-6.907460,-5.811300,-1.333567,4.375346,5.026737,-0.734499,-9.348953,-2.981796,9.552225,1.419899,-1.227402,-2.486120,-5.975919,5.834228,-6.467387,5.823172,8.882885,-9.324774,-6.843366,-9.218964,-6.564892,6.339604,-1.876874,9.497783,6.509939,-1.751188,-7.774635,3.012051,8.615723,6.613772,4.619237,-6.083466,-7.524303,-9.845554,-5.907407,-9.059063,8.045631,-9.951203,4.184591,9.373754,-7.120819,-0.013785,-3.459764,7.906492,-9.135106,-9.628978,-4.858296,-9.651853,2.787299,8.356470,-3.904609,5.773320,-2.227237,7.715408,6.527077,-5.233206,-8.659037,-5.238138,-8.075997,-4.768011,-3.196706,9.928181,-7.154583,5.194228,-3.480585,3.067499,4.515345,8.715205,-9.990091,5.572674,8.802667,-7.777541,0.512076,7.964655,-3.695770,-0.713995,-2.862962,9.396813,-3.486332,-4.892524,-8.398532,5.585440,-7.809937,8.904387,5.620037,-8.518539,-5.067388,8.222534,5.819902,7.179684,-2.398623,-9.318753,2.121540,1.724874,5.054203,6.188640,-7.984871,0.073496,5.474744,0.620299,5.128435,8.147931,-1.096863,2.045684,7.096307,-3.264491,9.750500,-6.470934,-3.973079,-3.569149,-0.903433,3.925329,-2.220047,9.179147,0.708793,-0.676850,4.917909,-6.245041,-0.178631,9.359483,9.097417,-7.293583,1.068009,3.569802,-0.358869,2.636989,8.067111,9.001678,9.247576,0.108762,-3.526331,8.216222,-7.134324,8.969204,-7.923133,-2.322793,-1.642277,-0.560392,-0.429618,-5.465559,3.494631,1.145282,-9.679321,-5.941992,1.740072,1.170954,8.360470,1.019185,-7.956597,8.886217,-4.133448,-0.273764,-6.607921,-1.992322,3.210592,1.759916,-0.638360,3.607857,-3.599325,-2.783400,-6.677803,9.864086,-2.691234,0.616455,1.493675,8.032077,-3.796580,5.126579,-2.429108,1.599510,-9.285097,-6.761815,1.563041,4.486421,7.965156,-1.892472,8.108164,-9.734688,-2.050219,9.679830,-4.848863,4.814987,-9.060539,5.257995,-6.044447,-2.516080,4.214206,9.001631,1.773034,-7.488399,-3.048023,-7.074948,-0.694082,-0.665193,-7.901284,1.913961,-7.947662,1.961271,3.773332,-3.279976,-2.405114,-7.010281,5.163326,-6.391967,-9.131820,-4.395290,1.652158,2.872153,4.475163,2.505686,0.932511,-0.133373,8.319915,-0.339484,-8.297049,7.085224,-4.071026,-2.609102,1.245334,-2.599965,-2.968203,1.774372,2.610201,2.708364,-2.339645,-8.312431,5.341537,0.219986,-9.493117,4.429909,-9.607546,2.646574,-3.361372,0.510479,2.004796,-7.933067,-9.909747,0.128097,-2.115752,-5.310876,9.013231,-8.617221,9.650672,-5.590093,2.826053,-2.662134,-6.436286,-4.632129,0.642908,-7.330261,3.609037,-9.179201,-8.933641,2.894508,4.896783,5.331406,-8.719439,7.756022,-0.096496,-0.327904,-1.231410,1.266279,-8.710001,1.249363,5.158611,-2.372160,-1.311270,-8.487383,7.322450,7.388487,7.773848,4.694515,-4.763906,9.821032,-9.292127,1.112606,-8.376109,2.267243,-8.678125,1.828769,6.734732,1.399831,-8.781949,-0.359797,0.171105,-0.089675,8.864736,9.852777,3.253319,-9.834915,-1.236124,-4.427482,-9.998331,9.420335,-1.327033,4.550519,3.963962,-4.354349,-0.147347,3.167716,-4.941578,5.762292,8.270688,-6.270690,4.806779,3.738937,-8.609709,7.637730,3.488673,7.698083,5.282119,9.992356,7.456064,-0.266192,1.448169,-0.872325,-8.923756,5.615912,-6.489709,-7.550787,-7.917425,9.181903,9.292281,3.024176,5.534895,-4.567227,1.414441,6.405262,6.326895,4.264909,4.955325,2.419433,3.976387,-4.483769,-3.031986,1.434924,-5.288613,6.298070,6.251144,-9.579116,8.556086,8.901043,8.581924,-4.851132,7.607382,1.358869,6.141912,-6.742756,2.294354,-1.028523,2.984965,-7.019627,-1.705469,7.036134,-0.658806,-2.140846,-0.116439,5.168484,0.789722,7.608246,0.561882,8.416618,1.573662,4.170795,-7.743895,-3.064525,3.801430,3.630358,-1.022674,-5.314952,5.933535,-5.367064,-6.184738,2.653084,3.641971,-9.264112,8.402561,4.639001,9.071720,4.336489,-1.245741,6.027272,-3.555483,6.413266,6.382547,8.097806,9.640615,9.354824,8.655730,6.800996,8.998871,4.520515,5.822433,6.959241,0.340466,0.305758,-4.711288,-4.092133,4.961603,5.616390,3.001583,9.206273,-9.639630,-6.688488,8.465650,5.603792,-6.601299,3.807617,7.334298,-4.139826,8.710796,4.510900,2.626964,-8.148666,0.370657,4.783118,3.884849,7.859596,6.862395,1.243345,2.087638,0.845383,-1.898197,-7.194885,7.683694,-2.723957,-5.557067,-9.989473,3.884520,-3.398788,-1.205063,9.118170,0.928325,-3.955298,6.506035,5.753128,-2.338653,-0.814086,-5.459405,-1.143543,9.975776,-4.621299,-0.215529,0.174265,-8.111429,7.318427,-5.772068,-4.510318,3.054778,-2.824023,-5.383588,-1.474177,2.338430,3.268554,4.607513,8.400924], dtype = "float32")#candidate|6124|(630,)|const|float32
call_6123 = func_119_call(relay.reshape(const_6124.astype('float32'), [7, 9, 10]))
call_6125 = func_119_call(relay.reshape(const_6124.astype('float32'), [7, 9, 10]))
func_3002_call = mod.get_global_var('func_3002')
func_3003_call = mutated_mod.get_global_var('func_3003')
call_6126 = func_3002_call()
call_6127 = func_3002_call()
bop_6128 = relay.greater_equal(uop_6075.astype('bool'), const_6058.astype('bool')) # shape=(15, 15, 15)
bop_6131 = relay.greater_equal(uop_6077.astype('bool'), const_6058.astype('bool')) # shape=(15, 15, 15)
func_119_call = mod.get_global_var('func_119')
func_121_call = mutated_mod.get_global_var('func_121')
call_6137 = func_119_call(relay.reshape(call_6123.astype('float32'), [7, 9, 10]))
call_6138 = func_119_call(relay.reshape(call_6123.astype('float32'), [7, 9, 10]))
func_1778_call = mod.get_global_var('func_1778')
func_1779_call = mutated_mod.get_global_var('func_1779')
call_6149 = relay.TupleGetItem(func_1778_call(), 0)
call_6150 = relay.TupleGetItem(func_1779_call(), 0)
func_4000_call = mod.get_global_var('func_4000')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_6152 = relay.TupleGetItem(func_4000_call(), 0)
call_6153 = relay.TupleGetItem(func_4001_call(), 0)
output = relay.Tuple([call_6039,call_6057,bop_6068,uop_6092,call_6102,call_6105,uop_6108,call_6123,const_6124,call_6126,bop_6128,call_6137,call_6149,call_6152,])
output2 = relay.Tuple([call_6040,call_6059,bop_6068,uop_6094,call_6103,call_6106,uop_6110,call_6125,const_6124,call_6127,bop_6131,call_6138,call_6150,call_6153,])
func_6158 = relay.Function([var_6067,], output)
mod['func_6158'] = func_6158
mod = relay.transform.InferType()(mod)
mutated_mod['func_6158'] = func_6158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6159 = relay.var("var_6159", dtype = "float64", shape = (3375,))#candidate|6159|(3375,)|var|float64
func_6158_call = mutated_mod.get_global_var('func_6158')
call_6160 = func_6158_call(var_6159)
output = call_6160
func_6161 = relay.Function([var_6159], output)
mutated_mod['func_6161'] = func_6161
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6188 = relay.var("var_6188", dtype = "float32", shape = (7, 10, 10))#candidate|6188|(7, 10, 10)|var|float32
const_6189 = relay.const([[[4.510528,-7.777559,-8.252803,1.830975,8.462779,2.934614,-8.760163,-4.008097,1.503505,5.159521],[0.327937,0.575654,8.664335,5.599768,-7.644473,8.174221,-5.690923,-6.433275,9.443240,6.710755],[-9.444615,4.673832,-1.079836,-6.498979,-9.230028,-6.542369,-4.002490,1.646995,5.046574,6.422747],[9.311806,0.755949,-8.231453,0.880925,3.679139,-6.589274,1.874505,4.982904,7.423560,6.918130],[7.867765,1.904212,-2.969834,7.104429,-4.910530,2.856612,-3.520815,2.130271,-1.087409,-9.684902],[5.941883,0.238481,-1.479781,5.399750,-4.527500,-7.027525,-0.695720,3.154294,-6.709003,-9.554629],[2.531134,8.697562,-2.451555,-1.709043,8.537645,-8.392454,3.032614,8.442839,-3.404213,3.067700],[3.456553,5.499786,-3.416887,-4.280568,9.146375,8.843095,-0.173875,-6.972662,2.960348,6.314254],[0.749274,1.197401,0.027284,6.640516,8.712006,-4.129021,-3.044023,-3.387201,7.061664,4.807515],[8.007818,5.733528,1.754916,-9.756583,3.312479,5.433767,-5.637879,1.980329,2.762849,4.624809]],[[-6.221676,-5.362986,4.123230,5.371052,4.574058,-1.024751,1.244841,1.770005,1.096027,4.404931],[6.125333,-1.870755,5.322215,-1.841850,-8.277857,-8.252166,6.639324,5.875213,1.089700,8.418626],[3.733378,-2.496128,-4.964205,-8.209233,4.834634,-7.106796,-6.511971,-9.836294,-2.994673,3.798122],[7.593529,0.407232,-0.922491,3.875557,1.416007,-1.627783,-9.213137,9.189523,-7.398338,1.630322],[6.776947,8.141859,-2.279368,-6.864935,-2.910556,1.801756,4.094096,-3.375729,5.981866,8.050321],[6.672483,0.510610,-2.245323,-1.682820,-4.934768,7.915882,7.919750,-6.896555,-7.329391,-5.631949],[-6.775848,-8.743452,2.313711,2.703153,7.385546,1.991058,-7.083923,-8.927194,-3.054089,-4.713546],[-3.578891,-2.203037,-2.145257,9.491977,8.212104,0.714542,1.029731,4.236871,-9.396338,3.106667],[-0.367963,-8.742927,-1.581503,5.585100,9.915091,7.892699,1.621440,2.988127,-0.537988,1.544161],[7.664530,9.257733,-1.098697,2.135717,0.585657,-8.011149,3.765405,7.597436,-9.295717,-8.639099]],[[-3.826542,2.039293,-9.754605,3.568720,-1.716605,-7.483418,2.049812,-9.355044,5.390361,-8.771271],[2.369998,-8.781945,-5.924212,-0.228161,-9.923874,-3.719268,-4.972485,8.068686,4.576619,-4.110031],[1.029240,8.997442,-2.756098,-5.520426,2.530399,5.475827,-5.663404,0.967894,7.017829,6.321796],[3.461718,-1.935956,1.383556,-8.394324,-2.690050,-6.504203,3.157335,-6.061787,-7.143452,2.196627],[9.482111,-4.219559,-5.439065,-1.379164,9.025742,-3.030423,-4.729780,-1.924156,-6.027612,-6.965257],[6.648837,-9.350267,-9.860307,0.439745,9.285147,-7.061725,0.488055,-7.573584,-9.028327,6.670161],[-5.433781,-9.452328,-0.079400,3.435639,7.658660,3.386391,-1.176066,-6.581835,-1.887203,9.541152],[-6.192695,-1.838337,-8.490491,-0.183863,-5.642709,-3.213155,7.426828,1.576395,-9.329593,-3.359653],[-5.213695,-2.008555,6.122702,3.106441,-6.626709,4.022892,-0.756311,-4.613574,0.343573,8.385728],[-3.411579,-9.085836,4.928741,7.180501,-9.262700,6.153246,0.461076,-2.100574,-5.566222,-6.288510]],[[-9.349974,-5.517836,-4.146556,-1.346445,8.234142,1.065179,2.060508,5.460603,8.151438,-1.053965],[-5.081848,-0.739319,-8.507744,-4.457432,-7.467769,5.034945,-6.113856,2.841718,7.133139,-2.933763],[6.002296,-0.313611,-6.859020,7.950710,6.899392,4.248241,-3.163741,9.168414,-9.533452,7.896349],[3.033168,-1.533459,-7.429981,-0.025011,2.478982,-1.290810,-9.219066,4.918612,-8.197804,-9.525506],[4.814336,8.231164,5.336957,-4.479814,-8.285884,-4.643925,-9.550427,-7.302706,-9.218752,-6.192865],[7.559557,-1.637663,-1.731501,-5.140700,5.014245,-7.207028,1.880464,-4.024296,-2.406643,-6.056490],[-6.079622,-5.383226,4.845583,-3.518311,4.242944,5.953667,8.391503,-5.110614,-5.212413,5.287472],[4.912283,-4.714499,5.115348,1.282451,9.787057,6.963946,-8.238785,-7.591411,-0.106269,3.990229],[-3.696690,-4.829101,6.657941,9.740684,-3.931081,1.976694,-4.689562,-3.433822,-8.446077,4.377207],[3.272543,2.777016,3.143196,-4.468737,-1.249274,3.143928,-2.604468,8.259236,9.245904,0.184308]],[[3.932891,7.512008,-4.453093,8.656764,-0.269456,-1.532258,7.912526,3.079961,-3.493015,-0.606972],[-3.786041,7.594123,-9.890635,-0.799782,5.208021,2.578098,-2.779181,-6.254855,-6.998116,0.906636],[-8.506599,-4.662595,6.098214,-1.083714,4.392244,2.683637,6.865442,0.526179,7.060681,2.333737],[8.584125,2.814380,6.382158,3.658773,3.548512,-1.781397,-6.705009,-2.944350,2.834256,1.058040],[6.513985,-1.303924,4.720146,-7.689564,9.669720,0.760253,-4.811983,-3.535622,-7.009128,1.120142],[-1.322187,-5.156104,1.772253,-3.509140,8.050825,9.829758,-1.644350,9.328479,3.947741,-6.698607],[6.883227,-3.806803,-4.743716,-4.850475,-4.801321,8.051531,3.124973,9.747175,-5.224204,3.162654],[-2.288887,-7.956265,-4.832190,-7.745076,-1.867490,-8.338365,8.502952,9.259702,7.924022,-0.161067],[-5.753051,-7.156698,0.205024,-5.132210,-1.353135,-9.916912,-8.686843,7.269568,-9.697066,2.184310],[9.756027,6.834794,-6.190376,-7.570298,-7.924875,1.433665,-3.136336,-1.931566,4.080228,4.506393]],[[5.589243,-4.327139,3.674357,-2.090998,-2.900254,-4.396222,-3.915484,-0.993056,-2.678503,-0.232392],[1.929598,2.733558,-6.577329,-4.488289,-8.099834,9.119659,0.085105,-7.682825,4.058991,-6.378369],[-0.713251,1.342761,-8.342776,3.906146,5.183042,5.620154,3.709016,-0.614238,7.987860,4.970485],[0.529185,4.192814,9.337684,6.204914,-1.911850,-6.137170,-6.347735,5.375738,0.160110,5.898286],[6.734859,5.558701,-4.824402,-1.035378,-3.118778,0.718226,-1.215026,-4.547582,-0.884654,-7.882542],[-6.470885,0.286587,8.065336,5.154709,5.897399,8.138081,-5.981933,6.926384,-5.885274,-5.275700],[-0.091028,-5.368527,-0.389030,-9.506546,-6.373739,4.835948,4.907274,7.544086,-5.216342,7.282230],[-9.926219,-5.067491,4.004385,4.394283,7.024420,3.651548,2.047707,-8.366366,-6.939589,8.003684],[2.941797,7.847004,3.937079,8.313983,-0.685997,-4.589141,1.004290,0.496646,-4.168091,9.233005],[-6.723923,0.915802,-8.450778,2.502660,-5.994041,-7.679028,9.527217,-7.463068,-5.391807,-1.430868]],[[-8.020131,1.172541,5.048858,5.264189,4.674738,1.749951,8.946326,-3.271440,-4.515433,-8.546338],[-1.674222,7.237796,8.531766,-2.414942,6.416642,-1.514121,4.951561,-9.755709,-2.831383,0.211279],[-5.026696,5.188042,4.865931,5.809276,1.875392,4.754518,-6.026717,0.816311,-8.047668,-6.079561],[6.449493,-4.497136,-8.898514,3.246247,-9.779530,7.760172,-9.755451,-7.571035,-3.022043,2.293081],[3.277832,2.921621,5.917089,2.036806,-0.650836,-4.495981,-8.226206,6.022566,0.132969,1.789634],[3.832699,-6.932618,4.323143,9.103553,-4.294170,8.564774,6.798387,-1.379191,-8.505356,6.951816],[5.547755,-6.227351,-6.964517,-2.480387,-5.230623,2.120769,-9.927479,0.610663,-1.403577,1.629225],[-2.572311,-9.352448,7.333592,-3.206970,4.959021,8.027745,5.229938,-4.861456,4.318858,4.657608],[5.744604,5.974280,-9.166187,2.887320,1.313180,-1.400344,-4.358861,-0.529111,0.543381,2.721742],[-0.484688,4.823054,-5.799141,4.968593,-7.148353,2.808678,5.158508,-9.327334,-1.231755,-3.722250]]], dtype = "float32")#candidate|6189|(7, 10, 10)|const|float32
bop_6190 = relay.floor_divide(var_6188.astype('float32'), relay.reshape(const_6189.astype('float32'), relay.shape_of(var_6188))) # shape=(7, 10, 10)
func_941_call = mod.get_global_var('func_941')
func_942_call = mutated_mod.get_global_var('func_942')
call_6194 = func_941_call()
call_6195 = func_941_call()
uop_6215 = relay.exp(const_6189.astype('float64')) # shape=(7, 10, 10)
func_548_call = mod.get_global_var('func_548')
func_550_call = mutated_mod.get_global_var('func_550')
call_6229 = relay.TupleGetItem(func_548_call(), 0)
call_6230 = relay.TupleGetItem(func_550_call(), 0)
func_2593_call = mod.get_global_var('func_2593')
func_2596_call = mutated_mod.get_global_var('func_2596')
const_6235 = relay.const([2,10,7,1,1,8,4,3,5], dtype = "uint32")#candidate|6235|(9,)|const|uint32
call_6234 = relay.TupleGetItem(func_2593_call(relay.reshape(call_6229.astype('float32'), [1372,]), relay.reshape(const_6235.astype('uint32'), [1, 9, 1]), ), 1)
call_6236 = relay.TupleGetItem(func_2596_call(relay.reshape(call_6229.astype('float32'), [1372,]), relay.reshape(const_6235.astype('uint32'), [1, 9, 1]), ), 1)
output = relay.Tuple([bop_6190,call_6194,uop_6215,call_6229,call_6234,const_6235,])
output2 = relay.Tuple([bop_6190,call_6195,uop_6215,call_6230,call_6236,const_6235,])
func_6239 = relay.Function([var_6188,], output)
mod['func_6239'] = func_6239
mod = relay.transform.InferType()(mod)
var_6240 = relay.var("var_6240", dtype = "float32", shape = (7, 10, 10))#candidate|6240|(7, 10, 10)|var|float32
output = func_6239(var_6240)
func_6241 = relay.Function([var_6240], output)
mutated_mod['func_6241'] = func_6241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_6243 = func_892_call()
call_6244 = func_892_call()
output = relay.Tuple([call_6243,])
output2 = relay.Tuple([call_6244,])
func_6248 = relay.Function([], output)
mod['func_6248'] = func_6248
mod = relay.transform.InferType()(mod)
mutated_mod['func_6248'] = func_6248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6248_call = mutated_mod.get_global_var('func_6248')
call_6249 = func_6248_call()
output = call_6249
func_6250 = relay.Function([], output)
mutated_mod['func_6250'] = func_6250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3002_call = mod.get_global_var('func_3002')
func_3003_call = mutated_mod.get_global_var('func_3003')
call_6334 = func_3002_call()
call_6335 = func_3002_call()
output = call_6334
output2 = call_6335
func_6349 = relay.Function([], output)
mod['func_6349'] = func_6349
mod = relay.transform.InferType()(mod)
output = func_6349()
func_6350 = relay.Function([], output)
mutated_mod['func_6350'] = func_6350
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6366 = relay.const([[[-9,-1,3,1,-3,-8,9,9,7,-3],[-7,2,-2,-6,3,3,6,-7,6,-3],[-1,5,3,5,8,-2,-3,-10,-5,10],[-10,-10,-6,5,4,-1,3,4,-10,7],[7,2,6,-2,10,-1,-4,-9,7,-2]],[[-4,-6,9,-2,-1,8,10,7,-3,9],[3,-8,-10,-7,2,7,-4,-4,7,3],[-7,-5,2,3,4,-1,-1,-6,-5,-7],[4,-7,-1,3,-9,5,9,2,-3,-5],[6,-4,4,-7,4,-7,10,-7,7,8]],[[-6,3,-2,-5,2,3,-7,-7,8,-1],[10,1,4,-10,7,6,-10,1,3,-10],[-7,3,4,4,-3,-4,-2,2,4,6],[1,-7,10,6,3,8,-1,-3,-2,6],[-1,-8,-7,9,-6,3,7,-10,-7,2]],[[-4,-7,5,1,6,-5,-10,-7,5,8],[-1,9,-2,-8,-9,6,-5,10,2,7],[9,-2,7,3,7,5,4,-9,5,5],[10,-7,4,-2,9,4,-3,4,-10,-2],[-2,-7,1,5,3,-1,-1,7,8,-2]],[[1,4,4,4,6,-1,2,-5,3,-2],[7,-9,-4,4,8,-10,1,2,1,-9],[9,3,7,-6,-7,-7,4,3,-4,1],[-4,-8,-2,-2,6,9,-1,-9,-10,9],[3,-2,-1,6,-3,-7,7,-1,8,1]],[[-7,9,3,-6,-3,10,8,5,-6,-7],[6,-7,-9,-2,-4,-1,5,8,-8,-3],[-7,6,-5,-7,2,2,-7,-10,9,-5],[9,3,8,4,-6,-4,1,10,-1,-9],[-10,10,1,-6,-6,-5,-7,-8,10,10]],[[10,8,-5,7,7,8,8,7,-2,10],[-3,10,3,-6,2,8,-1,-5,-7,4],[-8,-3,2,4,2,9,-10,7,9,-6],[-1,-6,3,1,-2,5,-7,6,8,-1],[-5,8,-1,1,-10,4,-3,6,-10,7]],[[-9,-1,1,-6,-9,-3,-9,-2,-8,4],[-9,-1,-7,-6,3,-10,-6,-9,-10,9],[-3,-6,3,-5,-8,-1,5,7,9,2],[9,-6,-3,-5,1,-4,6,7,5,-2],[-8,2,-3,9,4,-5,3,1,8,1]],[[-10,4,-3,7,2,5,-2,-7,-5,8],[8,-4,7,-7,1,-6,2,-1,2,5],[7,8,-6,-4,-1,-10,-6,-10,-2,-9],[4,6,-5,3,4,3,-9,-3,-6,-5],[9,-8,2,9,-8,6,4,-9,10,-8]]], dtype = "int16")#candidate|6366|(9, 5, 10)|const|int16
const_6367 = relay.const([[[-3,-1,-10,1,1,6,8,-8,-4,5],[7,-8,5,-1,-7,10,3,-2,6,-1],[-3,-4,10,9,6,7,-1,6,-3,6],[-2,-7,-6,10,-4,-3,-9,-9,1,-3],[3,10,5,2,3,-5,2,1,-4,-4]],[[-3,5,-3,1,4,1,-3,3,-9,5],[1,-8,-3,5,-4,-4,-5,9,5,2],[-3,9,7,6,-7,9,-1,2,-6,9],[-7,6,-4,-10,6,-2,-8,-7,-3,1],[3,7,-7,-6,-8,-2,10,7,-5,-4]],[[-8,2,-7,10,-1,9,3,8,7,-2],[10,1,3,3,4,9,-6,-9,7,3],[2,-3,-10,-4,6,-3,9,-4,4,10],[-7,-2,-7,5,2,-3,-2,1,9,8],[-1,-2,6,3,-5,8,2,-6,2,-3]],[[1,-1,6,4,5,-3,-4,-9,2,10],[4,1,9,5,1,8,-7,7,-10,9],[5,-4,-8,1,4,7,-9,-6,-6,-2],[10,-8,-8,10,-8,-5,-2,1,-1,-8],[-4,-5,-3,-3,-3,-7,4,1,2,10]],[[-2,-2,6,-2,8,4,-7,6,1,1],[6,-10,-3,10,4,-5,7,-9,-1,-9],[-3,10,1,9,7,9,-8,-2,10,6],[4,-10,-9,1,2,-6,3,6,-1,-8],[-7,-2,8,7,7,-3,7,9,2,5]],[[-10,-2,6,-6,5,7,-3,-8,-4,8],[-8,-10,4,-2,-9,-2,-7,-9,2,-2],[-1,8,10,4,1,-5,3,-6,5,5],[5,3,4,5,-9,-5,-7,-6,-9,3],[4,-8,3,6,-4,-4,-2,10,-10,4]],[[-3,-4,1,9,2,-9,10,-5,-5,-3],[-6,7,3,-4,2,4,4,-8,-10,5],[7,-10,5,-9,8,9,-8,-2,4,4],[1,-1,-8,1,6,-9,2,-9,5,-7],[-10,9,-3,-9,-4,-2,4,9,2,9]],[[-8,2,-10,-6,9,-9,2,-8,-6,9],[-1,4,-4,-7,-5,-6,-7,-2,9,3],[3,-8,-10,7,3,-6,7,-10,-7,9],[3,4,4,-8,-5,-3,-3,-3,-9,-10],[8,-7,-8,-6,-3,-8,10,8,-7,9]],[[7,10,2,6,-4,4,-2,7,-9,6],[7,8,-5,3,3,6,1,4,1,-5],[-4,-7,9,6,-8,-9,6,4,4,-5],[-1,-8,9,8,-2,5,9,4,-7,-7],[5,-1,3,-4,7,5,2,-2,7,-1]]], dtype = "int16")#candidate|6367|(9, 5, 10)|const|int16
bop_6368 = relay.minimum(const_6366.astype('int16'), relay.reshape(const_6367.astype('int16'), relay.shape_of(const_6366))) # shape=(9, 5, 10)
output = bop_6368
output2 = bop_6368
func_6376 = relay.Function([], output)
mod['func_6376'] = func_6376
mod = relay.transform.InferType()(mod)
output = func_6376()
func_6377 = relay.Function([], output)
mutated_mod['func_6377'] = func_6377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5275_call = mod.get_global_var('func_5275')
func_5277_call = mutated_mod.get_global_var('func_5277')
call_6443 = func_5275_call()
call_6444 = func_5275_call()
output = relay.Tuple([call_6443,])
output2 = relay.Tuple([call_6444,])
func_6461 = relay.Function([], output)
mod['func_6461'] = func_6461
mod = relay.transform.InferType()(mod)
mutated_mod['func_6461'] = func_6461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6461_call = mutated_mod.get_global_var('func_6461')
call_6462 = func_6461_call()
output = call_6462
func_6463 = relay.Function([], output)
mutated_mod['func_6463'] = func_6463
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6474 = relay.var("var_6474", dtype = "bool", shape = (15, 12, 12))#candidate|6474|(15, 12, 12)|var|bool
var_6475 = relay.var("var_6475", dtype = "bool", shape = (15, 12, 12))#candidate|6475|(15, 12, 12)|var|bool
bop_6476 = relay.logical_or(var_6474.astype('bool'), relay.reshape(var_6475.astype('bool'), relay.shape_of(var_6474))) # shape=(15, 12, 12)
output = bop_6476
output2 = bop_6476
func_6486 = relay.Function([var_6474,var_6475,], output)
mod['func_6486'] = func_6486
mod = relay.transform.InferType()(mod)
var_6487 = relay.var("var_6487", dtype = "bool", shape = (15, 12, 12))#candidate|6487|(15, 12, 12)|var|bool
var_6488 = relay.var("var_6488", dtype = "bool", shape = (15, 12, 12))#candidate|6488|(15, 12, 12)|var|bool
output = func_6486(var_6487,var_6488,)
func_6489 = relay.Function([var_6487,var_6488,], output)
mutated_mod['func_6489'] = func_6489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1113_call = mod.get_global_var('func_1113')
func_1115_call = mutated_mod.get_global_var('func_1115')
call_6503 = relay.TupleGetItem(func_1113_call(), 0)
call_6504 = relay.TupleGetItem(func_1115_call(), 0)
output = call_6503
output2 = call_6504
func_6509 = relay.Function([], output)
mod['func_6509'] = func_6509
mod = relay.transform.InferType()(mod)
output = func_6509()
func_6510 = relay.Function([], output)
mutated_mod['func_6510'] = func_6510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5329_call = mod.get_global_var('func_5329')
func_5330_call = mutated_mod.get_global_var('func_5330')
call_6531 = func_5329_call()
call_6532 = func_5329_call()
output = call_6531
output2 = call_6532
func_6533 = relay.Function([], output)
mod['func_6533'] = func_6533
mod = relay.transform.InferType()(mod)
output = func_6533()
func_6534 = relay.Function([], output)
mutated_mod['func_6534'] = func_6534
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6590 = relay.var("var_6590", dtype = "int16", shape = (11, 10, 1))#candidate|6590|(11, 10, 1)|var|int16
const_6591 = relay.const([[[4,-10,-5,1,-7,6,-9,-5,1,-8],[5,-1,-8,-3,-1,-2,8,2,-4,-1],[7,2,10,-8,7,7,-5,-8,-7,7],[-5,4,10,9,8,-7,-5,-2,-6,-8],[-8,5,-5,6,6,-9,2,-4,-7,8],[-3,10,-4,5,-3,-1,7,-4,-2,4],[4,9,-9,10,-8,-3,3,-10,-8,-7],[7,-3,5,-9,-10,5,10,-1,8,5],[2,-6,-3,-2,-9,-3,-8,-3,4,9],[4,-7,9,3,1,-1,8,-8,4,-6]],[[-10,1,3,-2,-5,2,-7,6,-1,3],[-9,-5,-4,1,-4,2,4,-3,-9,-8],[7,8,3,10,-4,-3,9,-1,-2,10],[-1,-1,8,-6,10,3,-5,1,-6,-9],[-6,-3,-2,-8,1,10,2,7,-5,9],[6,-3,3,-9,5,-9,-2,-3,-1,1],[-9,-3,4,1,4,7,1,3,3,5],[1,8,10,-10,-2,-4,5,4,-1,9],[4,-5,5,3,1,-6,5,6,5,8],[-10,-10,10,-2,-10,6,8,-1,1,-3]],[[-3,5,-2,1,8,5,-2,10,-1,-4],[-7,3,4,-2,-9,9,3,7,-6,1],[10,9,2,-5,-6,-2,-1,-10,-10,-2],[-9,-10,-7,-6,-5,-5,4,6,-7,-7],[-10,-8,5,-6,2,3,-10,-4,9,-10],[-8,9,2,9,8,4,6,-1,-10,5],[8,5,-10,7,-8,4,-3,-9,-10,-4],[-4,-8,-10,1,-7,-4,-2,-3,8,2],[6,-2,-8,-5,7,9,-10,4,-6,-10],[9,10,-2,6,2,6,3,-10,-8,1]],[[4,9,-7,-4,5,-7,-9,-6,1,-3],[-9,2,4,4,5,-9,5,5,-10,4],[4,-10,2,3,9,4,-4,1,-8,-2],[-10,4,-9,-5,9,-4,5,-5,3,10],[-4,1,1,-8,9,-4,10,-4,6,-8],[1,7,8,-4,-9,-5,9,3,-2,-10],[2,9,1,-1,-3,3,2,1,-3,-3],[9,9,5,-7,4,7,-3,-8,-8,-3],[-9,-6,-8,1,1,-6,-9,8,7,-1],[7,9,-4,4,7,4,6,6,-6,7]],[[-8,-10,8,-3,7,7,1,4,4,-7],[5,-6,-1,5,9,7,-3,-8,-8,7],[4,9,-2,3,1,7,-3,-7,7,-2],[-3,6,7,-8,-5,-10,9,-8,-2,-8],[-1,1,10,-8,9,5,-8,-8,7,2],[1,2,-1,2,9,8,-5,-6,6,-3],[-4,5,-1,9,-10,-9,2,2,2,-1],[-6,-5,-8,5,2,9,8,10,-8,9],[-1,-9,-2,8,-5,-6,-10,1,1,3],[5,1,-7,-5,9,5,2,5,-4,-7]],[[4,9,4,3,7,-1,10,-8,-3,4],[-6,-4,-2,4,1,-5,7,-8,-6,-8],[-7,-5,-1,3,-7,5,-7,-6,5,-5],[3,1,3,-5,-10,-2,-2,-3,-2,-6],[-5,-6,2,-9,10,-5,-5,-5,6,9],[-2,1,10,8,2,2,-9,-10,-8,7],[-5,3,7,-8,7,-8,-8,3,-5,-9],[7,4,10,4,-3,10,-3,5,2,-4],[-1,-7,1,7,1,1,-9,-5,-7,9],[-1,-7,1,-4,-5,1,1,7,8,-6]],[[-9,-8,-1,7,3,9,4,-8,-8,-9],[3,1,8,3,-1,4,5,-8,6,-8],[1,2,-5,-4,3,8,-5,-7,8,-8],[1,8,-7,-4,-2,-1,2,-10,-2,-10],[8,-10,-8,4,8,-4,6,-7,-10,6],[-5,-5,-10,6,9,-8,3,-8,6,-6],[5,-5,5,6,3,7,8,-7,-9,2],[-8,-3,-10,-3,-4,-3,2,-10,10,-2],[7,-2,-3,5,1,-2,-10,3,7,-8],[-6,7,-1,-5,-2,-7,-6,2,-8,-3]],[[-6,2,-1,6,1,-6,7,5,10,-10],[-6,-9,-5,-4,-10,6,4,-2,2,-3],[-5,2,-2,-9,-6,3,7,-6,5,-7],[-9,-2,2,-9,5,-9,-9,-2,5,-3],[2,5,-10,-4,-1,3,-8,2,-3,4],[3,8,-2,2,2,10,-1,-7,-6,-9],[4,6,7,9,10,-9,7,-4,-8,8],[-2,-7,-5,-6,-5,-9,-7,10,6,-5],[5,9,1,-2,-8,10,1,2,2,-9],[3,6,5,-3,7,5,-9,-5,8,1]],[[8,-5,-9,-4,-5,9,-1,7,3,6],[7,2,-8,8,4,1,1,10,-2,-4],[-9,8,-10,-7,4,-2,5,-9,-5,-8],[-8,-3,-4,10,9,-7,-9,-10,10,1],[-9,7,9,8,6,-2,-4,5,10,-5],[1,9,7,-8,-5,10,-2,-9,-4,-6],[10,5,5,-1,7,-3,-8,-8,-10,-9],[-5,-8,-8,9,-3,-4,-5,8,-9,4],[-6,4,-1,-6,-9,5,-6,1,3,7],[7,10,10,-5,-8,-5,-7,-8,-1,9]],[[-1,-2,-9,-2,4,-8,-9,-6,-8,-10],[-9,-1,-5,-5,3,-6,8,1,2,-2],[3,9,10,-2,4,3,6,10,-2,10],[6,-10,-4,4,6,-4,5,2,-9,-4],[-6,-6,2,8,8,-1,-1,-1,-4,3],[-10,-1,-10,-2,7,4,2,10,6,8],[-3,10,-10,9,7,-5,10,-4,9,1],[-4,1,-5,-2,6,-6,-10,3,9,-5],[-5,-3,-8,-7,-5,-3,3,8,3,-8],[-1,8,-1,3,-4,-8,1,-3,-10,-6]],[[-9,5,4,-10,3,-8,2,-4,-6,7],[-7,8,-6,-7,-3,1,-5,-6,10,-6],[5,7,-9,-4,-10,-6,4,3,8,6],[6,-5,-4,9,-10,6,8,-3,-4,5],[-8,1,8,-3,5,-8,-7,-1,8,4],[5,-1,5,4,-3,-5,2,6,-9,6],[8,-4,-9,-5,-7,2,1,6,9,5],[-9,-6,6,10,-1,-9,10,-4,-10,-5],[8,-8,-3,4,6,-6,10,7,6,-1],[-6,5,-4,7,10,1,-1,8,7,6]]], dtype = "int16")#candidate|6591|(11, 10, 10)|const|int16
bop_6592 = relay.logical_xor(var_6590.astype('int16'), const_6591.astype('int16')) # shape=(11, 10, 10)
output = bop_6592
output2 = bop_6592
func_6597 = relay.Function([var_6590,], output)
mod['func_6597'] = func_6597
mod = relay.transform.InferType()(mod)
var_6598 = relay.var("var_6598", dtype = "int16", shape = (11, 10, 1))#candidate|6598|(11, 10, 1)|var|int16
output = func_6597(var_6598)
func_6599 = relay.Function([var_6598], output)
mutated_mod['func_6599'] = func_6599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3972_call = mutated_mod.get_global_var('func_3972')
call_6601 = func_3970_call()
call_6602 = func_3970_call()
output = relay.Tuple([call_6601,])
output2 = relay.Tuple([call_6602,])
func_6607 = relay.Function([], output)
mod['func_6607'] = func_6607
mod = relay.transform.InferType()(mod)
output = func_6607()
func_6608 = relay.Function([], output)
mutated_mod['func_6608'] = func_6608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_6649 = relay.TupleGetItem(func_3742_call(), 0)
call_6650 = relay.TupleGetItem(func_3743_call(), 0)
output = call_6649
output2 = call_6650
func_6653 = relay.Function([], output)
mod['func_6653'] = func_6653
mod = relay.transform.InferType()(mod)
output = func_6653()
func_6654 = relay.Function([], output)
mutated_mod['func_6654'] = func_6654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1387_call = mod.get_global_var('func_1387')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_6663 = relay.TupleGetItem(func_1387_call(), 0)
call_6664 = relay.TupleGetItem(func_1388_call(), 0)
output = relay.Tuple([call_6663,])
output2 = relay.Tuple([call_6664,])
func_6676 = relay.Function([], output)
mod['func_6676'] = func_6676
mod = relay.transform.InferType()(mod)
output = func_6676()
func_6677 = relay.Function([], output)
mutated_mod['func_6677'] = func_6677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1387_call = mod.get_global_var('func_1387')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_6680 = relay.TupleGetItem(func_1387_call(), 0)
call_6681 = relay.TupleGetItem(func_1388_call(), 0)
func_5485_call = mod.get_global_var('func_5485')
func_5487_call = mutated_mod.get_global_var('func_5487')
call_6690 = relay.TupleGetItem(func_5485_call(), 0)
call_6691 = relay.TupleGetItem(func_5487_call(), 0)
output = relay.Tuple([call_6680,call_6690,])
output2 = relay.Tuple([call_6681,call_6691,])
func_6695 = relay.Function([], output)
mod['func_6695'] = func_6695
mod = relay.transform.InferType()(mod)
mutated_mod['func_6695'] = func_6695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6695_call = mutated_mod.get_global_var('func_6695')
call_6696 = func_6695_call()
output = call_6696
func_6697 = relay.Function([], output)
mutated_mod['func_6697'] = func_6697
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6803 = relay.var("var_6803", dtype = "float32", shape = (3, 7, 8))#candidate|6803|(3, 7, 8)|var|float32
var_6804 = relay.var("var_6804", dtype = "float32", shape = (3, 7, 8))#candidate|6804|(3, 7, 8)|var|float32
bop_6805 = relay.less(var_6803.astype('bool'), relay.reshape(var_6804.astype('bool'), relay.shape_of(var_6803))) # shape=(3, 7, 8)
func_698_call = mod.get_global_var('func_698')
func_701_call = mutated_mod.get_global_var('func_701')
const_6815 = relay.const(5, dtype = "uint32")#candidate|6815|()|const|uint32
call_6814 = relay.TupleGetItem(func_698_call(relay.reshape(const_6815.astype('uint32'), [])), 2)
call_6816 = relay.TupleGetItem(func_701_call(relay.reshape(const_6815.astype('uint32'), [])), 2)
func_4062_call = mod.get_global_var('func_4062')
func_4065_call = mutated_mod.get_global_var('func_4065')
var_6825 = relay.var("var_6825", dtype = "int64", shape = (450, 6))#candidate|6825|(450, 6)|var|int64
call_6824 = func_4062_call(relay.reshape(var_6825.astype('int64'), [15, 12, 15]), relay.reshape(var_6825.astype('int64'), [15, 12, 15]), )
call_6826 = func_4062_call(relay.reshape(var_6825.astype('int64'), [15, 12, 15]), relay.reshape(var_6825.astype('int64'), [15, 12, 15]), )
func_2430_call = mod.get_global_var('func_2430')
func_2432_call = mutated_mod.get_global_var('func_2432')
var_6833 = relay.var("var_6833", dtype = "uint32", shape = (1, 2925))#candidate|6833|(1, 2925)|var|uint32
call_6832 = relay.TupleGetItem(func_2430_call(relay.reshape(var_6833.astype('uint32'), [2925,])), 1)
call_6834 = relay.TupleGetItem(func_2432_call(relay.reshape(var_6833.astype('uint32'), [2925,])), 1)
uop_6838 = relay.sin(bop_6805.astype('float64')) # shape=(3, 7, 8)
func_5864_call = mod.get_global_var('func_5864')
func_5866_call = mutated_mod.get_global_var('func_5866')
call_6849 = relay.TupleGetItem(func_5864_call(), 0)
call_6850 = relay.TupleGetItem(func_5866_call(), 0)
bop_6852 = relay.not_equal(var_6825.astype('bool'), const_6815.astype('bool')) # shape=(450, 6)
bop_6859 = relay.multiply(uop_6838.astype('int8'), relay.reshape(var_6803.astype('int8'), relay.shape_of(uop_6838))) # shape=(3, 7, 8)
func_1387_call = mod.get_global_var('func_1387')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_6880 = relay.TupleGetItem(func_1387_call(), 0)
call_6881 = relay.TupleGetItem(func_1388_call(), 0)
func_5768_call = mod.get_global_var('func_5768')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_6882 = relay.TupleGetItem(func_5768_call(), 0)
call_6883 = relay.TupleGetItem(func_5770_call(), 0)
output = relay.Tuple([call_6814,call_6824,call_6832,var_6833,call_6849,bop_6852,bop_6859,call_6880,call_6882,])
output2 = relay.Tuple([call_6816,call_6826,call_6834,var_6833,call_6850,bop_6852,bop_6859,call_6881,call_6883,])
func_6886 = relay.Function([var_6803,var_6804,var_6825,var_6833,], output)
mod['func_6886'] = func_6886
mod = relay.transform.InferType()(mod)
var_6887 = relay.var("var_6887", dtype = "float32", shape = (3, 7, 8))#candidate|6887|(3, 7, 8)|var|float32
var_6888 = relay.var("var_6888", dtype = "float32", shape = (3, 7, 8))#candidate|6888|(3, 7, 8)|var|float32
var_6889 = relay.var("var_6889", dtype = "int64", shape = (450, 6))#candidate|6889|(450, 6)|var|int64
var_6890 = relay.var("var_6890", dtype = "uint32", shape = (1, 2925))#candidate|6890|(1, 2925)|var|uint32
output = func_6886(var_6887,var_6888,var_6889,var_6890,)
func_6891 = relay.Function([var_6887,var_6888,var_6889,var_6890,], output)
mutated_mod['func_6891'] = func_6891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2783_call = mod.get_global_var('func_2783')
func_2785_call = mutated_mod.get_global_var('func_2785')
call_6896 = relay.TupleGetItem(func_2783_call(), 0)
call_6897 = relay.TupleGetItem(func_2785_call(), 0)
output = call_6896
output2 = call_6897
func_6899 = relay.Function([], output)
mod['func_6899'] = func_6899
mod = relay.transform.InferType()(mod)
output = func_6899()
func_6900 = relay.Function([], output)
mutated_mod['func_6900'] = func_6900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5175_call = mod.get_global_var('func_5175')
func_5177_call = mutated_mod.get_global_var('func_5177')
call_6903 = relay.TupleGetItem(func_5175_call(), 0)
call_6904 = relay.TupleGetItem(func_5177_call(), 0)
output = relay.Tuple([call_6903,])
output2 = relay.Tuple([call_6904,])
func_6920 = relay.Function([], output)
mod['func_6920'] = func_6920
mod = relay.transform.InferType()(mod)
output = func_6920()
func_6921 = relay.Function([], output)
mutated_mod['func_6921'] = func_6921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_6939 = relay.TupleGetItem(func_3742_call(), 0)
call_6940 = relay.TupleGetItem(func_3743_call(), 0)
output = call_6939
output2 = call_6940
func_6943 = relay.Function([], output)
mod['func_6943'] = func_6943
mod = relay.transform.InferType()(mod)
mutated_mod['func_6943'] = func_6943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6943_call = mutated_mod.get_global_var('func_6943')
call_6944 = func_6943_call()
output = call_6944
func_6945 = relay.Function([], output)
mutated_mod['func_6945'] = func_6945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5308_call = mod.get_global_var('func_5308')
func_5309_call = mutated_mod.get_global_var('func_5309')
call_7018 = relay.TupleGetItem(func_5308_call(), 0)
call_7019 = relay.TupleGetItem(func_5309_call(), 0)
output = relay.Tuple([call_7018,])
output2 = relay.Tuple([call_7019,])
func_7027 = relay.Function([], output)
mod['func_7027'] = func_7027
mod = relay.transform.InferType()(mod)
mutated_mod['func_7027'] = func_7027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7027_call = mutated_mod.get_global_var('func_7027')
call_7028 = func_7027_call()
output = call_7028
func_7029 = relay.Function([], output)
mutated_mod['func_7029'] = func_7029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7030 = relay.var("var_7030", dtype = "float64", shape = (3, 1, 10))#candidate|7030|(3, 1, 10)|var|float64
uop_7031 = relay.acos(var_7030.astype('float64')) # shape=(3, 1, 10)
func_5993_call = mod.get_global_var('func_5993')
func_5997_call = mutated_mod.get_global_var('func_5997')
var_7042 = relay.var("var_7042", dtype = "uint16", shape = ())#candidate|7042|()|var|uint16
var_7043 = relay.var("var_7043", dtype = "uint16", shape = (2, 1))#candidate|7043|(2, 1)|var|uint16
call_7041 = relay.TupleGetItem(func_5993_call(relay.reshape(var_7042.astype('uint16'), []), relay.reshape(var_7043.astype('uint16'), [1, 2]), ), 0)
call_7044 = relay.TupleGetItem(func_5997_call(relay.reshape(var_7042.astype('uint16'), []), relay.reshape(var_7043.astype('uint16'), [1, 2]), ), 0)
bop_7047 = relay.bitwise_xor(uop_7031.astype('uint64'), relay.reshape(var_7030.astype('uint64'), relay.shape_of(uop_7031))) # shape=(3, 1, 10)
func_3545_call = mod.get_global_var('func_3545')
func_3546_call = mutated_mod.get_global_var('func_3546')
call_7053 = relay.TupleGetItem(func_3545_call(), 1)
call_7054 = relay.TupleGetItem(func_3546_call(), 1)
uop_7077 = relay.tan(bop_7047.astype('float32')) # shape=(3, 1, 10)
output = relay.Tuple([call_7041,var_7042,var_7043,call_7053,uop_7077,])
output2 = relay.Tuple([call_7044,var_7042,var_7043,call_7054,uop_7077,])
func_7085 = relay.Function([var_7030,var_7042,var_7043,], output)
mod['func_7085'] = func_7085
mod = relay.transform.InferType()(mod)
mutated_mod['func_7085'] = func_7085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7085_call = mutated_mod.get_global_var('func_7085')
var_7087 = relay.var("var_7087", dtype = "float64", shape = (3, 1, 10))#candidate|7087|(3, 1, 10)|var|float64
var_7088 = relay.var("var_7088", dtype = "uint16", shape = ())#candidate|7088|()|var|uint16
var_7089 = relay.var("var_7089", dtype = "uint16", shape = (2, 1))#candidate|7089|(2, 1)|var|uint16
call_7086 = func_7085_call(var_7087,var_7088,var_7089,)
output = call_7086
func_7090 = relay.Function([var_7087,var_7088,var_7089,], output)
mutated_mod['func_7090'] = func_7090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6695_call = mod.get_global_var('func_6695')
func_6697_call = mutated_mod.get_global_var('func_6697')
call_7116 = relay.TupleGetItem(func_6695_call(), 0)
call_7117 = relay.TupleGetItem(func_6697_call(), 0)
func_3970_call = mod.get_global_var('func_3970')
func_3972_call = mutated_mod.get_global_var('func_3972')
call_7187 = func_3970_call()
call_7188 = func_3970_call()
output = relay.Tuple([call_7116,call_7187,])
output2 = relay.Tuple([call_7117,call_7188,])
func_7192 = relay.Function([], output)
mod['func_7192'] = func_7192
mod = relay.transform.InferType()(mod)
output = func_7192()
func_7193 = relay.Function([], output)
mutated_mod['func_7193'] = func_7193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4441_call = mod.get_global_var('func_4441')
func_4443_call = mutated_mod.get_global_var('func_4443')
call_7208 = relay.TupleGetItem(func_4441_call(), 0)
call_7209 = relay.TupleGetItem(func_4443_call(), 0)
output = relay.Tuple([call_7208,])
output2 = relay.Tuple([call_7209,])
func_7220 = relay.Function([], output)
mod['func_7220'] = func_7220
mod = relay.transform.InferType()(mod)
mutated_mod['func_7220'] = func_7220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7220_call = mutated_mod.get_global_var('func_7220')
call_7221 = func_7220_call()
output = call_7221
func_7222 = relay.Function([], output)
mutated_mod['func_7222'] = func_7222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6248_call = mod.get_global_var('func_6248')
func_6250_call = mutated_mod.get_global_var('func_6250')
call_7330 = relay.TupleGetItem(func_6248_call(), 0)
call_7331 = relay.TupleGetItem(func_6250_call(), 0)
output = call_7330
output2 = call_7331
func_7334 = relay.Function([], output)
mod['func_7334'] = func_7334
mod = relay.transform.InferType()(mod)
mutated_mod['func_7334'] = func_7334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7334_call = mutated_mod.get_global_var('func_7334')
call_7335 = func_7334_call()
output = call_7335
func_7336 = relay.Function([], output)
mutated_mod['func_7336'] = func_7336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3002_call = mod.get_global_var('func_3002')
func_3003_call = mutated_mod.get_global_var('func_3003')
call_7339 = func_3002_call()
call_7340 = func_3002_call()
func_3002_call = mod.get_global_var('func_3002')
func_3003_call = mutated_mod.get_global_var('func_3003')
call_7349 = func_3002_call()
call_7350 = func_3002_call()
output = relay.Tuple([call_7339,call_7349,])
output2 = relay.Tuple([call_7340,call_7350,])
func_7363 = relay.Function([], output)
mod['func_7363'] = func_7363
mod = relay.transform.InferType()(mod)
mutated_mod['func_7363'] = func_7363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7363_call = mutated_mod.get_global_var('func_7363')
call_7364 = func_7363_call()
output = call_7364
func_7365 = relay.Function([], output)
mutated_mod['func_7365'] = func_7365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7220_call = mod.get_global_var('func_7220')
func_7222_call = mutated_mod.get_global_var('func_7222')
call_7371 = relay.TupleGetItem(func_7220_call(), 0)
call_7372 = relay.TupleGetItem(func_7222_call(), 0)
output = call_7371
output2 = call_7372
func_7373 = relay.Function([], output)
mod['func_7373'] = func_7373
mod = relay.transform.InferType()(mod)
output = func_7373()
func_7374 = relay.Function([], output)
mutated_mod['func_7374'] = func_7374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7401 = relay.var("var_7401", dtype = "int8", shape = (6, 7, 10))#candidate|7401|(6, 7, 10)|var|int8
var_7402 = relay.var("var_7402", dtype = "int8", shape = (6, 7, 10))#candidate|7402|(6, 7, 10)|var|int8
bop_7403 = relay.less_equal(var_7401.astype('bool'), relay.reshape(var_7402.astype('bool'), relay.shape_of(var_7401))) # shape=(6, 7, 10)
var_7417 = relay.var("var_7417", dtype = "int8", shape = (6, 7, 10))#candidate|7417|(6, 7, 10)|var|int8
bop_7418 = relay.floor_mod(var_7401.astype('float32'), relay.reshape(var_7417.astype('float32'), relay.shape_of(var_7401))) # shape=(6, 7, 10)
uop_7436 = relay.tan(var_7402.astype('float64')) # shape=(6, 7, 10)
uop_7446 = relay.asin(uop_7436.astype('float64')) # shape=(6, 7, 10)
output = relay.Tuple([bop_7403,bop_7418,uop_7446,])
output2 = relay.Tuple([bop_7403,bop_7418,uop_7446,])
F = relay.Function([var_7401,var_7402,var_7417,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7401,var_7402,var_7417,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
